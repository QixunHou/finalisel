digraph "CDFG for'Output' function" {
	Node0x55a2585cfa48[shape=record, label="  %0 = load i32, i32* %minS, align 4, !tbaa !2"]
	Node0x55a2585cfac8[shape=record, label="  %idxprom = sext i32 %0 to i64"]
	Node0x55a2585cfb78[shape=record, label="  %top.i.i = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %H, i64 %idxprom, i32 1"]
	Node0x55a2585cfc08[shape=record, label="  %1 = load i32, i32* %top.i.i, align 4, !tbaa !6"]
	Node0x55a2585cfca0[shape=record, label="  %cmp.i.i = icmp eq i32 %1, -1"]
	Node0x55a2585cfeb8[shape=record, label="  br i1 %cmp.i.i, label %if.then.i, label %if.end.i"]
	Node0x55a2585cff50[shape=record, label="  %call1.i = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #6"]
	Node0x55a2585d0248[shape=record, label="  br label %Pop.exit"]
	Node0x55a2585d02c0[shape=record, label="  %dec.i = add nsw i32 %1, -1"]
	Node0x55a2585d0350[shape=record, label="  store i32 %dec.i, i32* %top.i.i, align 4, !tbaa !6"]
	Node0x55a2585cfe28[shape=record, label="  br label %Pop.exit"]
	Node0x55a2585cfd48[shape=record, label="  %2 = load i32, i32* %minH, align 4, !tbaa !2"]
	Node0x55a2585d03e8[shape=record, label="  %3 = load i32, i32* %minS, align 4, !tbaa !2"]
	Node0x55a2585d0510[shape=record, label="  %call1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 %2, i32 %3)"]
	Node0x55a2585d05e0[shape=record, label="  %add = add nsw i32 %n, 2"]
	Node0x55a2585d0670[shape=record, label="  store i32 %add, i32* %minH, align 4, !tbaa !2"]
	Node0x55a2585d06f0[shape=record, label="  %cmp29 = icmp slt i32 %k, 1"]
	Node0x55a2585d0998[shape=record, label="  br i1 %cmp29, label %for.end, label %for.body.preheader"]
	Node0x55a2585d0a40[shape=record, label="  %4 = add i32 %k, 1"]
	Node0x55a2585d0b00[shape=record, label="  %5 = and i32 %4, 1"]
	Node0x55a2585d0b70[shape=record, label="  %6 = xor i32 %5, 1"]
	Node0x55a2585d0be0[shape=record, label="  %7 = icmp eq i32 %4, 2"]
	Node0x55a2585d0dd8[shape=record, label="  br i1 %7, label %for.end.loopexit.unr-lcssa, label %for.body.preheader.new"]
	Node0x55a2585d0d48[shape=record, label="  %xtraiter = zext i32 %6 to i64"]
	Node0x55a2585d0e38[shape=record, label="  %wide.trip.count = zext i32 %4 to i64"]
	Node0x55a2585d0f10[shape=record, label="  %8 = xor i64 %xtraiter, -1"]
	Node0x55a2585d1040[shape=record, label="  %unroll_iter = add nsw i64 %8, %wide.trip.count"]
	Node0x55a2585d1448[shape=record, label="  br label %for.body"]
	Node0x55a2585d15a8[shape=record, label="  %indvars.iv = phi i64 [ 1, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.inc.1 ]"]
	Node0x55a2585d1738[shape=record, label="  %niter = phi i64 [ %unroll_iter, %for.body.preheader.new ], [ %niter.nsub.1, %for.inc.1 ]"]
	Node0x55a2585d1838[shape=record, label="  %top.i = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %H, i64 %indvars.iv, i32 1"]
	Node0x55a2585d18c8[shape=record, label="  %9 = load i32, i32* %top.i, align 4, !tbaa !6"]
	Node0x55a2585d1940[shape=record, label="  %cmp.i = icmp eq i32 %9, -1"]
	Node0x55a2585d1b98[shape=record, label="  br i1 %cmp.i, label %for.inc, label %Top.exit"]
	Node0x55a2585d1b08[shape=record, label="  %idxprom.i26 = sext i32 %9 to i64"]
	Node0x55a2585d1c70[shape=record, label="  %arrayidx.i27 = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %H, i64 %indvars.iv, i32 0, i64 %idxprom.i26"]
	Node0x55a2585d1d08[shape=record, label="  %10 = load i32, i32* %arrayidx.i27, align 4, !tbaa !2"]
	Node0x55a2585d1d68[shape=record, label="  %11 = load i32, i32* %minH, align 4, !tbaa !2"]
	Node0x55a2585d1de0[shape=record, label="  %cmp8 = icmp slt i32 %10, %11"]
	Node0x55a2585d1f58[shape=record, label="  br i1 %cmp8, label %if.then, label %for.inc"]
	Node0x55a2585d1fd0[shape=record, label="  store i32 %10, i32* %minH, align 4, !tbaa !2"]
	Node0x55a2585d1ec8[shape=record, label="  %12 = trunc i64 %indvars.iv to i32"]
	Node0x55a2585d2050[shape=record, label="  store i32 %12, i32* %minS, align 4, !tbaa !2"]
	Node0x55a2585d20b8[shape=record, label="  br label %for.inc"]
	Node0x55a2585d2130[shape=record, label="  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1"]
	Node0x55a2585d2218[shape=record, label="  %top.i.1 = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %H, i64 %indvars.iv.next, i32 1"]
	Node0x55a2585d1a28[shape=record, label="  %13 = load i32, i32* %top.i.1, align 4, !tbaa !6"]
	Node0x55a2585d22c0[shape=record, label="  %cmp.i.1 = icmp eq i32 %13, -1"]
	Node0x55a2585d2418[shape=record, label="  br i1 %cmp.i.1, label %for.inc.1, label %Top.exit.1"]
	Node0x55a2585d24c8[shape=record, label="  %indvars.iv.unr = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next.1, %for.inc.1 ]"]
	Node0x55a2585d2590[shape=record, label="  %lcmp.mod = icmp eq i32 %6, 0"]
	Node0x55a2585d2698[shape=record, label="  br i1 %lcmp.mod, label %for.end, label %for.body.epil"]
	Node0x55a2585d2728[shape=record, label="  %top.i.epil = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %H, i64 %indvars.iv.unr, i32 1"]
	Node0x55a2585d08e8[shape=record, label="  %14 = load i32, i32* %top.i.epil, align 4, !tbaa !6"]
	Node0x55a2585d27b0[shape=record, label="  %cmp.i.epil = icmp eq i32 %14, -1"]
	Node0x55a2585d2948[shape=record, label="  br i1 %cmp.i.epil, label %for.end, label %Top.exit.epil"]
	Node0x55a2585d28b8[shape=record, label="  %idxprom.i26.epil = sext i32 %14 to i64"]
	Node0x55a2585d2ab0[shape=record, label="  %arrayidx.i27.epil = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %H, i64 %indvars.iv.unr, i32 0, i64 %idxprom.i26.epil"]
	Node0x55a2585d2b48[shape=record, label="  %15 = load i32, i32* %arrayidx.i27.epil, align 4, !tbaa !2"]
	Node0x55a2585d2ba8[shape=record, label="  %16 = load i32, i32* %minH, align 4, !tbaa !2"]
	Node0x55a2585d2c20[shape=record, label="  %cmp8.epil = icmp slt i32 %15, %16"]
	Node0x55a2585d0f98[shape=record, label="  br i1 %cmp8.epil, label %if.then.epil, label %for.end"]
	Node0x55a2585d3360[shape=record, label="  store i32 %15, i32* %minH, align 4, !tbaa !2"]
	Node0x55a2585d32e8[shape=record, label="  %17 = trunc i64 %indvars.iv.unr to i32"]
	Node0x55a2585d33e0[shape=record, label="  store i32 %17, i32* %minS, align 4, !tbaa !2"]
	Node0x55a2585d3448[shape=record, label="  br label %for.end"]
	Node0x55a2585d3490[shape=record, label="  ret void"]
	Node0x55a2585d2388[shape=record, label="  %idxprom.i26.1 = sext i32 %13 to i64"]
	Node0x55a2585d3560[shape=record, label="  %arrayidx.i27.1 = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %H, i64 %indvars.iv.next, i32 0, i64 %idxprom.i26.1"]
	Node0x55a2585d07d8[shape=record, label="  %18 = load i32, i32* %arrayidx.i27.1, align 4, !tbaa !2"]
	Node0x55a2585d35c8[shape=record, label="  %19 = load i32, i32* %minH, align 4, !tbaa !2"]
	Node0x55a2585d3640[shape=record, label="  %cmp8.1 = icmp slt i32 %18, %19"]
	Node0x55a2585d37c8[shape=record, label="  br i1 %cmp8.1, label %if.then.1, label %for.inc.1"]
	Node0x55a2585d3840[shape=record, label="  store i32 %18, i32* %minH, align 4, !tbaa !2"]
	Node0x55a2585d3738[shape=record, label="  %20 = trunc i64 %indvars.iv.next to i32"]
	Node0x55a2585d38f0[shape=record, label="  store i32 %20, i32* %minS, align 4, !tbaa !2"]
	Node0x55a2585d3958[shape=record, label="  br label %for.inc.1"]
	Node0x55a2585d3a00[shape=record, label="  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2"]
	Node0x55a2585d3a70[shape=record, label="  %niter.nsub.1 = add i64 %niter, -2"]
	Node0x55a2585d3ae0[shape=record, label="  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0"]
	Node0x55a2585d3bc8[shape=record, label="  br i1 %niter.ncmp.1, label %for.end.loopexit.unr-lcssa, label %for.body"]
	Node0x55a2585cfa48 -> Node0x55a2585cfac8
	Node0x55a2585cfac8 -> Node0x55a2585cfb78
	Node0x55a2585cfb78 -> Node0x55a2585cfc08
	Node0x55a2585cfc08 -> Node0x55a2585cfca0
	Node0x55a2585cfca0 -> Node0x55a2585cfeb8
	Node0x55a2585cfeb8 -> Node0x55a2585cff50
	Node0x55a2585cfeb8 -> Node0x55a2585d02c0
	Node0x55a2585cff50 -> Node0x55a2585d0248
	Node0x55a2585d0248 -> Node0x55a2585cfd48
	Node0x55a2585d02c0 -> Node0x55a2585d0350
	Node0x55a2585d0350 -> Node0x55a2585cfe28
	Node0x55a2585cfe28 -> Node0x55a2585cfd48
	Node0x55a2585cfd48 -> Node0x55a2585d03e8
	Node0x55a2585d03e8 -> Node0x55a2585d0510
	Node0x55a2585d0510 -> Node0x55a2585d05e0
	Node0x55a2585d05e0 -> Node0x55a2585d0670
	Node0x55a2585d0670 -> Node0x55a2585d06f0
	Node0x55a2585d06f0 -> Node0x55a2585d0998
	Node0x55a2585d0998 -> Node0x55a2585d3490
	Node0x55a2585d0998 -> Node0x55a2585d0a40
	Node0x55a2585d0a40 -> Node0x55a2585d0b00
	Node0x55a2585d0b00 -> Node0x55a2585d0b70
	Node0x55a2585d0b70 -> Node0x55a2585d0be0
	Node0x55a2585d0be0 -> Node0x55a2585d0dd8
	Node0x55a2585d0dd8 -> Node0x55a2585d24c8
	Node0x55a2585d0dd8 -> Node0x55a2585d0d48
	Node0x55a2585d0d48 -> Node0x55a2585d0e38
	Node0x55a2585d0e38 -> Node0x55a2585d0f10
	Node0x55a2585d0f10 -> Node0x55a2585d1040
	Node0x55a2585d1040 -> Node0x55a2585d1448
	Node0x55a2585d1448 -> Node0x55a2585d15a8
	Node0x55a2585d15a8 -> Node0x55a2585d1738
	Node0x55a2585d1738 -> Node0x55a2585d1838
	Node0x55a2585d1838 -> Node0x55a2585d18c8
	Node0x55a2585d18c8 -> Node0x55a2585d1940
	Node0x55a2585d1940 -> Node0x55a2585d1b98
	Node0x55a2585d1b98 -> Node0x55a2585d2130
	Node0x55a2585d1b98 -> Node0x55a2585d1b08
	Node0x55a2585d1b08 -> Node0x55a2585d1c70
	Node0x55a2585d1c70 -> Node0x55a2585d1d08
	Node0x55a2585d1d08 -> Node0x55a2585d1d68
	Node0x55a2585d1d68 -> Node0x55a2585d1de0
	Node0x55a2585d1de0 -> Node0x55a2585d1f58
	Node0x55a2585d1f58 -> Node0x55a2585d1fd0
	Node0x55a2585d1f58 -> Node0x55a2585d2130
	Node0x55a2585d1fd0 -> Node0x55a2585d1ec8
	Node0x55a2585d1ec8 -> Node0x55a2585d2050
	Node0x55a2585d2050 -> Node0x55a2585d20b8
	Node0x55a2585d20b8 -> Node0x55a2585d2130
	Node0x55a2585d2130 -> Node0x55a2585d2218
	Node0x55a2585d2218 -> Node0x55a2585d1a28
	Node0x55a2585d1a28 -> Node0x55a2585d22c0
	Node0x55a2585d22c0 -> Node0x55a2585d2418
	Node0x55a2585d2418 -> Node0x55a2585d3a00
	Node0x55a2585d2418 -> Node0x55a2585d2388
	Node0x55a2585d24c8 -> Node0x55a2585d2590
	Node0x55a2585d2590 -> Node0x55a2585d2698
	Node0x55a2585d2698 -> Node0x55a2585d3490
	Node0x55a2585d2698 -> Node0x55a2585d2728
	Node0x55a2585d2728 -> Node0x55a2585d08e8
	Node0x55a2585d08e8 -> Node0x55a2585d27b0
	Node0x55a2585d27b0 -> Node0x55a2585d2948
	Node0x55a2585d2948 -> Node0x55a2585d3490
	Node0x55a2585d2948 -> Node0x55a2585d28b8
	Node0x55a2585d28b8 -> Node0x55a2585d2ab0
	Node0x55a2585d2ab0 -> Node0x55a2585d2b48
	Node0x55a2585d2b48 -> Node0x55a2585d2ba8
	Node0x55a2585d2ba8 -> Node0x55a2585d2c20
	Node0x55a2585d2c20 -> Node0x55a2585d0f98
	Node0x55a2585d0f98 -> Node0x55a2585d3360
	Node0x55a2585d0f98 -> Node0x55a2585d3490
	Node0x55a2585d3360 -> Node0x55a2585d32e8
	Node0x55a2585d32e8 -> Node0x55a2585d33e0
	Node0x55a2585d33e0 -> Node0x55a2585d3448
	Node0x55a2585d3448 -> Node0x55a2585d3490
	Node0x55a2585d2388 -> Node0x55a2585d3560
	Node0x55a2585d3560 -> Node0x55a2585d07d8
	Node0x55a2585d07d8 -> Node0x55a2585d35c8
	Node0x55a2585d35c8 -> Node0x55a2585d3640
	Node0x55a2585d3640 -> Node0x55a2585d37c8
	Node0x55a2585d37c8 -> Node0x55a2585d3840
	Node0x55a2585d37c8 -> Node0x55a2585d3a00
	Node0x55a2585d3840 -> Node0x55a2585d3738
	Node0x55a2585d3738 -> Node0x55a2585d38f0
	Node0x55a2585d38f0 -> Node0x55a2585d3958
	Node0x55a2585d3958 -> Node0x55a2585d3a00
	Node0x55a2585d3a00 -> Node0x55a2585d3a70
	Node0x55a2585d3a70 -> Node0x55a2585d3ae0
	Node0x55a2585d3ae0 -> Node0x55a2585d3bc8
	Node0x55a2585d3bc8 -> Node0x55a2585d24c8
	Node0x55a2585d3bc8 -> Node0x55a2585d15a8
edge [color=red]
	Node0x55a2585cf808 -> Node0x55a2585cfa48[label="1"]
	Node0x55a2585cfa48 -> Node0x55a2585cfac8[label="2"]
	Node0x55a2585cfac8 -> Node0x55a2585cfb78[label="3"]
	Node0x55a2585cfb78 -> Node0x55a2585cfc08[label="4"]
	Node0x55a2585cfc08 -> Node0x55a2585cfca0[label="5"]
	Node0x55a2585cfca0 -> Node0x55a2585cfeb8[label="6"]
	Node0x55a2585cfc08 -> Node0x55a2585d02c0[label="7"]
	Node0x55a2585d02c0 -> Node0x55a2585d0350[label="8"]
	Node0x55a2585d0350 -> Node0x55a2585cfb78[label="9"]
	Node0x55a2585cf7e0 -> Node0x55a2585cfd48[label="10"]
	Node0x55a2585cf808 -> Node0x55a2585d03e8[label="11"]
	Node0x55a2585cfd48 -> Node0x55a2585d0510[label="12"]
	Node0x55a2585d03e8 -> Node0x55a2585d0510[label="13"]
	Node0x55a2585d05e0 -> Node0x55a2585d0670[label="14"]
	Node0x55a2585d0670 -> Node0x55a2585cf7e0[label="15"]
	Node0x55a2585d06f0 -> Node0x55a2585d0998[label="16"]
	Node0x55a2585d0a40 -> Node0x55a2585d0b00[label="17"]
	Node0x55a2585d0b00 -> Node0x55a2585d0b70[label="18"]
	Node0x55a2585d0a40 -> Node0x55a2585d0be0[label="19"]
	Node0x55a2585d0be0 -> Node0x55a2585d0dd8[label="20"]
	Node0x55a2585d0b70 -> Node0x55a2585d0d48[label="21"]
	Node0x55a2585d0a40 -> Node0x55a2585d0e38[label="22"]
	Node0x55a2585d0d48 -> Node0x55a2585d0f10[label="23"]
	Node0x55a2585d0f10 -> Node0x55a2585d1040[label="24"]
	Node0x55a2585d0e38 -> Node0x55a2585d1040[label="25"]
	Node0x55a2585d3a00 -> Node0x55a2585d15a8[label="26"]
	Node0x55a2585d1040 -> Node0x55a2585d1738[label="27"]
	Node0x55a2585d3a70 -> Node0x55a2585d1738[label="28"]
	Node0x55a2585d15a8 -> Node0x55a2585d1838[label="29"]
	Node0x55a2585d1838 -> Node0x55a2585d18c8[label="30"]
	Node0x55a2585d18c8 -> Node0x55a2585d1940[label="31"]
	Node0x55a2585d1940 -> Node0x55a2585d1b98[label="32"]
	Node0x55a2585d18c8 -> Node0x55a2585d1b08[label="33"]
	Node0x55a2585d15a8 -> Node0x55a2585d1c70[label="34"]
	Node0x55a2585d1b08 -> Node0x55a2585d1c70[label="35"]
	Node0x55a2585d1c70 -> Node0x55a2585d1d08[label="36"]
	Node0x55a2585cf7e0 -> Node0x55a2585d1d68[label="37"]
	Node0x55a2585d1d08 -> Node0x55a2585d1de0[label="38"]
	Node0x55a2585d1d68 -> Node0x55a2585d1de0[label="39"]
	Node0x55a2585d1de0 -> Node0x55a2585d1f58[label="40"]
	Node0x55a2585d1d08 -> Node0x55a2585d1fd0[label="41"]
	Node0x55a2585d1fd0 -> Node0x55a2585cf7e0[label="42"]
	Node0x55a2585d15a8 -> Node0x55a2585d1ec8[label="43"]
	Node0x55a2585d1ec8 -> Node0x55a2585d2050[label="44"]
	Node0x55a2585d2050 -> Node0x55a2585cf808[label="45"]
	Node0x55a2585d15a8 -> Node0x55a2585d2130[label="46"]
	Node0x55a2585d2130 -> Node0x55a2585d2218[label="47"]
	Node0x55a2585d2218 -> Node0x55a2585d1a28[label="48"]
	Node0x55a2585d1a28 -> Node0x55a2585d22c0[label="49"]
	Node0x55a2585d22c0 -> Node0x55a2585d2418[label="50"]
	Node0x55a2585d3a00 -> Node0x55a2585d24c8[label="51"]
	Node0x55a2585d0b70 -> Node0x55a2585d2590[label="52"]
	Node0x55a2585d2590 -> Node0x55a2585d2698[label="53"]
	Node0x55a2585d24c8 -> Node0x55a2585d2728[label="54"]
	Node0x55a2585d2728 -> Node0x55a2585d08e8[label="55"]
	Node0x55a2585d08e8 -> Node0x55a2585d27b0[label="56"]
	Node0x55a2585d27b0 -> Node0x55a2585d2948[label="57"]
	Node0x55a2585d08e8 -> Node0x55a2585d28b8[label="58"]
	Node0x55a2585d24c8 -> Node0x55a2585d2ab0[label="59"]
	Node0x55a2585d28b8 -> Node0x55a2585d2ab0[label="60"]
	Node0x55a2585d2ab0 -> Node0x55a2585d2b48[label="61"]
	Node0x55a2585cf7e0 -> Node0x55a2585d2ba8[label="62"]
	Node0x55a2585d2b48 -> Node0x55a2585d2c20[label="63"]
	Node0x55a2585d2ba8 -> Node0x55a2585d2c20[label="64"]
	Node0x55a2585d2c20 -> Node0x55a2585d0f98[label="65"]
	Node0x55a2585d2b48 -> Node0x55a2585d3360[label="66"]
	Node0x55a2585d3360 -> Node0x55a2585cf7e0[label="67"]
	Node0x55a2585d24c8 -> Node0x55a2585d32e8[label="68"]
	Node0x55a2585d32e8 -> Node0x55a2585d33e0[label="69"]
	Node0x55a2585d33e0 -> Node0x55a2585cf808[label="70"]
	Node0x55a2585d1a28 -> Node0x55a2585d2388[label="71"]
	Node0x55a2585d2130 -> Node0x55a2585d3560[label="72"]
	Node0x55a2585d2388 -> Node0x55a2585d3560[label="73"]
	Node0x55a2585d3560 -> Node0x55a2585d07d8[label="74"]
	Node0x55a2585cf7e0 -> Node0x55a2585d35c8[label="75"]
	Node0x55a2585d07d8 -> Node0x55a2585d3640[label="76"]
	Node0x55a2585d35c8 -> Node0x55a2585d3640[label="77"]
	Node0x55a2585d3640 -> Node0x55a2585d37c8[label="78"]
	Node0x55a2585d07d8 -> Node0x55a2585d3840[label="79"]
	Node0x55a2585d3840 -> Node0x55a2585cf7e0[label="80"]
	Node0x55a2585d2130 -> Node0x55a2585d3738[label="81"]
	Node0x55a2585d3738 -> Node0x55a2585d38f0[label="82"]
	Node0x55a2585d38f0 -> Node0x55a2585cf808[label="83"]
	Node0x55a2585d15a8 -> Node0x55a2585d3a00[label="84"]
	Node0x55a2585d1738 -> Node0x55a2585d3a70[label="85"]
	Node0x55a2585d3a70 -> Node0x55a2585d3ae0[label="86"]
	Node0x55a2585d3ae0 -> Node0x55a2585d3bc8[label="87"]
}
