digraph "CDFG for'max_min' function" {
	Node0x558203cd0280[shape=record, label="  store i32 0, i32* %min, align 4, !tbaa !2"]
	Node0x558203cd8fb8[shape=record, label="  %0 = load i32, i32* %each, align 4, !tbaa !2"]
	Node0x558203ccd700[shape=record, label="  store i32 %0, i32* %min, align 4, !tbaa !2"]
	Node0x558203ccd780[shape=record, label="  %i.0.ptr.1 = getelementptr inbounds i32, i32* %each, i64 1"]
	Node0x558203ccd800[shape=record, label="  %mul.1 = mul nsw i32 %0, 10"]
	Node0x558203cd9c28[shape=record, label="  %1 = load i32, i32* %i.0.ptr.1, align 4, !tbaa !2"]
	Node0x558203ccd8b0[shape=record, label="  %add.1 = add nsw i32 %mul.1, %1"]
	Node0x558203ccd920[shape=record, label="  store i32 %add.1, i32* %min, align 4, !tbaa !2"]
	Node0x558203ccd9a0[shape=record, label="  %i.0.ptr.2 = getelementptr inbounds i32, i32* %each, i64 2"]
	Node0x558203ccda20[shape=record, label="  %mul.2 = mul nsw i32 %add.1, 10"]
	Node0x558203ccda98[shape=record, label="  %2 = load i32, i32* %i.0.ptr.2, align 4, !tbaa !2"]
	Node0x558203ccdb40[shape=record, label="  %add.2 = add nsw i32 %mul.2, %2"]
	Node0x558203ccdbb0[shape=record, label="  store i32 %add.2, i32* %min, align 4, !tbaa !2"]
	Node0x558203ccdc30[shape=record, label="  %i.0.ptr.3 = getelementptr inbounds i32, i32* %each, i64 3"]
	Node0x558203ccdce0[shape=record, label="  %mul.3 = mul nsw i32 %add.2, 10"]
	Node0x558203ccdd58[shape=record, label="  %3 = load i32, i32* %i.0.ptr.3, align 4, !tbaa !2"]
	Node0x558203ccddd0[shape=record, label="  %add.3 = add nsw i32 %mul.3, %3"]
	Node0x558203cd00f0[shape=record, label="  store i32 %add.3, i32* %min, align 4, !tbaa !2"]
	Node0x558203cce000[shape=record, label="  store i32 0, i32* %max, align 4, !tbaa !2"]
	Node0x558203cce0e8[shape=record, label="  br label %for.body4"]
	Node0x558203cce188[shape=record, label="  %4 = phi i32 [ 0, %entry ], [ %add6, %for.body4 ]"]
	Node0x558203cce308[shape=record, label="  %i.123 = phi i32* [ %i.0.ptr.3, %entry ], [ %incdec.ptr8, %for.body4 ]"]
	Node0x558203cce3f0[shape=record, label="  %mul5 = mul nsw i32 %4, 10"]
	Node0x558203cce468[shape=record, label="  %5 = load i32, i32* %i.123, align 4, !tbaa !2"]
	Node0x558203cdcdf0[shape=record, label="  %add6 = add nsw i32 %mul5, %5"]
	Node0x558203cdce60[shape=record, label="  store i32 %add6, i32* %max, align 4, !tbaa !2"]
	Node0x558203cdcee0[shape=record, label="  %incdec.ptr8 = getelementptr inbounds i32, i32* %i.123, i64 -1"]
	Node0x558203cdcf60[shape=record, label="  %cmp3 = icmp ult i32* %incdec.ptr8, %each"]
	Node0x558203cdd038[shape=record, label="  br i1 %cmp3, label %for.end9, label %for.body4"]
	Node0x558203cd4110[shape=record, label="  ret void"]
	Node0x558203cd0280 -> Node0x558203cd8fb8
	Node0x558203cd8fb8 -> Node0x558203ccd700
	Node0x558203ccd700 -> Node0x558203ccd780
	Node0x558203ccd780 -> Node0x558203ccd800
	Node0x558203ccd800 -> Node0x558203cd9c28
	Node0x558203cd9c28 -> Node0x558203ccd8b0
	Node0x558203ccd8b0 -> Node0x558203ccd920
	Node0x558203ccd920 -> Node0x558203ccd9a0
	Node0x558203ccd9a0 -> Node0x558203ccda20
	Node0x558203ccda20 -> Node0x558203ccda98
	Node0x558203ccda98 -> Node0x558203ccdb40
	Node0x558203ccdb40 -> Node0x558203ccdbb0
	Node0x558203ccdbb0 -> Node0x558203ccdc30
	Node0x558203ccdc30 -> Node0x558203ccdce0
	Node0x558203ccdce0 -> Node0x558203ccdd58
	Node0x558203ccdd58 -> Node0x558203ccddd0
	Node0x558203ccddd0 -> Node0x558203cd00f0
	Node0x558203cd00f0 -> Node0x558203cce000
	Node0x558203cce000 -> Node0x558203cce0e8
	Node0x558203cce0e8 -> Node0x558203cce188
	Node0x558203cce188 -> Node0x558203cce308
	Node0x558203cce308 -> Node0x558203cce3f0
	Node0x558203cce3f0 -> Node0x558203cce468
	Node0x558203cce468 -> Node0x558203cdcdf0
	Node0x558203cdcdf0 -> Node0x558203cdce60
	Node0x558203cdce60 -> Node0x558203cdcee0
	Node0x558203cdcee0 -> Node0x558203cdcf60
	Node0x558203cdcf60 -> Node0x558203cdd038
	Node0x558203cdd038 -> Node0x558203cd4110
	Node0x558203cdd038 -> Node0x558203cce188
edge [color=red]
	Node0x558203cc96f0 -> Node0x558203cd0280[label="1"]
	Node0x558203cd0280 -> Node0x558203cd0090[label="2"]
	Node0x558203cd0040 -> Node0x558203cd8fb8[label="3"]
	Node0x558203cd8fb8 -> Node0x558203ccd700[label="4"]
	Node0x558203ccd700 -> Node0x558203cd0090[label="5"]
	Node0x558203cd8fb8 -> Node0x558203ccd800[label="6"]
	Node0x558203ccd780 -> Node0x558203cd9c28[label="7"]
	Node0x558203ccd800 -> Node0x558203ccd8b0[label="8"]
	Node0x558203cd9c28 -> Node0x558203ccd8b0[label="9"]
	Node0x558203ccd8b0 -> Node0x558203ccd920[label="10"]
	Node0x558203ccd920 -> Node0x558203cd0090[label="11"]
	Node0x558203ccd8b0 -> Node0x558203ccda20[label="12"]
	Node0x558203ccd9a0 -> Node0x558203ccda98[label="13"]
	Node0x558203ccda20 -> Node0x558203ccdb40[label="14"]
	Node0x558203ccda98 -> Node0x558203ccdb40[label="15"]
	Node0x558203ccdb40 -> Node0x558203ccdbb0[label="16"]
	Node0x558203ccdbb0 -> Node0x558203cd0090[label="17"]
	Node0x558203ccdb40 -> Node0x558203ccdce0[label="18"]
	Node0x558203ccdc30 -> Node0x558203ccdd58[label="19"]
	Node0x558203ccdce0 -> Node0x558203ccddd0[label="20"]
	Node0x558203ccdd58 -> Node0x558203ccddd0[label="21"]
	Node0x558203ccddd0 -> Node0x558203cd00f0[label="22"]
	Node0x558203cd00f0 -> Node0x558203cd0090[label="23"]
	Node0x558203cc96f0 -> Node0x558203cce000[label="24"]
	Node0x558203cce000 -> Node0x558203cd0068[label="25"]
	Node0x558203cdcdf0 -> Node0x558203cce188[label="26"]
	Node0x558203ccdc30 -> Node0x558203cce308[label="27"]
	Node0x558203cdcee0 -> Node0x558203cce308[label="28"]
	Node0x558203cce188 -> Node0x558203cce3f0[label="29"]
	Node0x558203cce308 -> Node0x558203cce468[label="30"]
	Node0x558203cce3f0 -> Node0x558203cdcdf0[label="31"]
	Node0x558203cce468 -> Node0x558203cdcdf0[label="32"]
	Node0x558203cdcdf0 -> Node0x558203cdce60[label="33"]
	Node0x558203cdce60 -> Node0x558203cd0068[label="34"]
	Node0x558203cce308 -> Node0x558203cdcee0[label="35"]
	Node0x558203cdcee0 -> Node0x558203cdcf60[label="36"]
	Node0x558203cdcf60 -> Node0x558203cdd038[label="37"]
}
