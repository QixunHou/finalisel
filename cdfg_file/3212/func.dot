digraph "CDFG for'func' function" {
	Node0x5630f88b0a78[shape=record, label="  %0 = load i8, i8* %s, align 1, !tbaa !2"]
	Node0x5630f88b1fe0[shape=record, label="  %tobool9 = icmp eq i8 %0, 0"]
	Node0x5630f8839db8[shape=record, label="  br i1 %tobool9, label %for.end, label %for.body"]
	Node0x5630f88b22d8[shape=record, label="  %1 = phi i8 [ %2, %for.inc ], [ %0, %entry ]"]
	Node0x5630f88b2458[shape=record, label="  %q.011 = phi i8* [ %incdec.ptr2, %for.inc ], [ %s, %entry ]"]
	Node0x5630f88b25b8[shape=record, label="  %s.addr.010 = phi i8* [ %s.addr.1, %for.inc ], [ %s, %entry ]"]
	Node0x5630f88b2698[shape=record, label="  %conv = sext i8 %1 to i32"]
	Node0x5630f88b2730[shape=record, label="  %cmp = icmp eq i32 %conv, %c"]
	Node0x5630f8845228[shape=record, label="  br i1 %cmp, label %for.inc, label %if.then"]
	Node0x5630f88b28c0[shape=record, label="  %incdec.ptr = getelementptr inbounds i8, i8* %s.addr.010, i64 1"]
	Node0x5630f88b2b10[shape=record, label="  store i8 %1, i8* %s.addr.010, align 1, !tbaa !2"]
	Node0x5630f88b2818[shape=record, label="  br label %for.inc"]
	Node0x5630f88b3178[shape=record, label="  %s.addr.1 = phi i8* [ %incdec.ptr, %if.then ], [ %s.addr.010, %for.body ]"]
	Node0x5630f88b3240[shape=record, label="  %incdec.ptr2 = getelementptr inbounds i8, i8* %q.011, i64 1"]
	Node0x5630f88b2408[shape=record, label="  %2 = load i8, i8* %incdec.ptr2, align 1, !tbaa !2"]
	Node0x5630f88b32c0[shape=record, label="  %tobool = icmp eq i8 %2, 0"]
	Node0x5630f8845348[shape=record, label="  br i1 %tobool, label %for.end, label %for.body"]
	Node0x5630f88b3308[shape=record, label="  %s.addr.0.lcssa = phi i8* [ %s, %entry ], [ %s.addr.1, %for.inc ]"]
	Node0x5630f88b33d0[shape=record, label="  store i8 0, i8* %s.addr.0.lcssa, align 1, !tbaa !2"]
	Node0x5630f88b20c8[shape=record, label="  ret i32 undef"]
	Node0x5630f88b0a78 -> Node0x5630f88b1fe0
	Node0x5630f88b1fe0 -> Node0x5630f8839db8
	Node0x5630f8839db8 -> Node0x5630f88b3308
	Node0x5630f8839db8 -> Node0x5630f88b22d8
	Node0x5630f88b22d8 -> Node0x5630f88b2458
	Node0x5630f88b2458 -> Node0x5630f88b25b8
	Node0x5630f88b25b8 -> Node0x5630f88b2698
	Node0x5630f88b2698 -> Node0x5630f88b2730
	Node0x5630f88b2730 -> Node0x5630f8845228
	Node0x5630f8845228 -> Node0x5630f88b3178
	Node0x5630f8845228 -> Node0x5630f88b28c0
	Node0x5630f88b28c0 -> Node0x5630f88b2b10
	Node0x5630f88b2b10 -> Node0x5630f88b2818
	Node0x5630f88b2818 -> Node0x5630f88b3178
	Node0x5630f88b3178 -> Node0x5630f88b3240
	Node0x5630f88b3240 -> Node0x5630f88b2408
	Node0x5630f88b2408 -> Node0x5630f88b32c0
	Node0x5630f88b32c0 -> Node0x5630f8845348
	Node0x5630f8845348 -> Node0x5630f88b3308
	Node0x5630f8845348 -> Node0x5630f88b22d8
	Node0x5630f88b3308 -> Node0x5630f88b33d0
	Node0x5630f88b33d0 -> Node0x5630f88b20c8
edge [color=red]
	Node0x5630f88b0890 -> Node0x5630f88b0a78[label="1"]
	Node0x5630f88b0a78 -> Node0x5630f88b1fe0[label="2"]
	Node0x5630f88b1fe0 -> Node0x5630f8839db8[label="3"]
	Node0x5630f88b2408 -> Node0x5630f88b22d8[label="4"]
	Node0x5630f88b0a78 -> Node0x5630f88b22d8[label="5"]
	Node0x5630f88b3240 -> Node0x5630f88b2458[label="6"]
	Node0x5630f88b3178 -> Node0x5630f88b25b8[label="7"]
	Node0x5630f88b22d8 -> Node0x5630f88b2698[label="8"]
	Node0x5630f88b2698 -> Node0x5630f88b2730[label="9"]
	Node0x5630f88b2730 -> Node0x5630f8845228[label="10"]
	Node0x5630f88b25b8 -> Node0x5630f88b28c0[label="11"]
	Node0x5630f88b22d8 -> Node0x5630f88b2b10[label="12"]
	Node0x5630f88b2b10 -> Node0x5630f88b25b8[label="13"]
	Node0x5630f88b28c0 -> Node0x5630f88b3178[label="14"]
	Node0x5630f88b25b8 -> Node0x5630f88b3178[label="15"]
	Node0x5630f88b2458 -> Node0x5630f88b3240[label="16"]
	Node0x5630f88b3240 -> Node0x5630f88b2408[label="17"]
	Node0x5630f88b2408 -> Node0x5630f88b32c0[label="18"]
	Node0x5630f88b32c0 -> Node0x5630f8845348[label="19"]
	Node0x5630f88b3178 -> Node0x5630f88b3308[label="20"]
	Node0x5630f88b1f80 -> Node0x5630f88b33d0[label="21"]
	Node0x5630f88b33d0 -> Node0x5630f88b3308[label="22"]
}
