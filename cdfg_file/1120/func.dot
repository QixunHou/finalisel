digraph "CDFG for'func' function" {
	Node0x55a98f562498[shape=record, label="  br label %while.cond"]
	Node0x55a98f562c48[shape=record, label="  %a2.0 = phi i32 [ 1, %entry ], [ %add1, %if.end9 ]"]
	Node0x55a98f562d08[shape=record, label="  %a1.0 = phi i32 [ 1, %entry ], [ %a2.0, %if.end9 ]"]
	Node0x55a98f562ea8[shape=record, label="  %sn.0 = phi i32 [ 2, %entry ], [ %add2, %if.end9 ]"]
	Node0x55a98f563018[shape=record, label="  %k.0 = phi i32 [ 2, %entry ], [ %inc, %if.end9 ]"]
	Node0x55a98f563100[shape=record, label="  %mul = shl nsw i32 %a2.0, 1"]
	Node0x55a98f563190[shape=record, label="  %add1 = add nsw i32 %a1.0, %mul"]
	Node0x55a98f563200[shape=record, label="  %cmp = icmp slt i32 %sn.0, 100"]
	Node0x55a98f563290[shape=record, label="  %add2 = add nsw i32 %sn.0, %add1"]
	Node0x55a98f563300[shape=record, label="  %cmp3 = icmp sgt i32 %add2, 99"]
	Node0x55a98f563390[shape=record, label="  %or.cond = and i1 %cmp, %cmp3"]
	Node0x55a98f4ebc98[shape=record, label="  br i1 %or.cond, label %if.then, label %if.end"]
	Node0x55a98f563980[shape=record, label="  store i32 %k.0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b, i64 0, i64 0), align 4, !tbaa !2"]
	Node0x55a98f562e58[shape=record, label="  br label %if.end"]
	Node0x55a98f5648c0[shape=record, label="  %cmp4 = icmp slt i32 %sn.0, 1000"]
	Node0x55a98f564980[shape=record, label="  %cmp7 = icmp sgt i32 %add2, 999"]
	Node0x55a98f564a10[shape=record, label="  %or.cond38 = and i1 %cmp4, %cmp7"]
	Node0x55a98f4f7228[shape=record, label="  br i1 %or.cond38, label %if.then8, label %if.end9"]
	Node0x55a98f564c00[shape=record, label="  store i32 %k.0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b, i64 0, i64 1), align 4, !tbaa !2"]
	Node0x55a98f5623b8[shape=record, label="  br label %if.end9"]
	Node0x55a98f5652c0[shape=record, label="  %cmp10 = icmp slt i32 %sn.0, 10000"]
	Node0x55a98f565360[shape=record, label="  %cmp13 = icmp sgt i32 %add2, 9999"]
	Node0x55a98f5653f0[shape=record, label="  %or.cond39 = and i1 %cmp10, %cmp13"]
	Node0x55a98f565490[shape=record, label="  %inc = add nuw nsw i32 %k.0, 1"]
	Node0x55a98f4f7348[shape=record, label="  br i1 %or.cond39, label %if.then14, label %while.cond"]
	Node0x55a98f565620[shape=record, label="  store i32 %k.0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b, i64 0, i64 2), align 4, !tbaa !2"]
	Node0x55a98f562fc8[shape=record, label="  ret i32 undef"]
	Node0x55a98f562498 -> Node0x55a98f562c48
	Node0x55a98f562c48 -> Node0x55a98f562d08
	Node0x55a98f562d08 -> Node0x55a98f562ea8
	Node0x55a98f562ea8 -> Node0x55a98f563018
	Node0x55a98f563018 -> Node0x55a98f563100
	Node0x55a98f563100 -> Node0x55a98f563190
	Node0x55a98f563190 -> Node0x55a98f563200
	Node0x55a98f563200 -> Node0x55a98f563290
	Node0x55a98f563290 -> Node0x55a98f563300
	Node0x55a98f563300 -> Node0x55a98f563390
	Node0x55a98f563390 -> Node0x55a98f4ebc98
	Node0x55a98f4ebc98 -> Node0x55a98f563980
	Node0x55a98f4ebc98 -> Node0x55a98f5648c0
	Node0x55a98f563980 -> Node0x55a98f562e58
	Node0x55a98f562e58 -> Node0x55a98f5648c0
	Node0x55a98f5648c0 -> Node0x55a98f564980
	Node0x55a98f564980 -> Node0x55a98f564a10
	Node0x55a98f564a10 -> Node0x55a98f4f7228
	Node0x55a98f4f7228 -> Node0x55a98f564c00
	Node0x55a98f4f7228 -> Node0x55a98f5652c0
	Node0x55a98f564c00 -> Node0x55a98f5623b8
	Node0x55a98f5623b8 -> Node0x55a98f5652c0
	Node0x55a98f5652c0 -> Node0x55a98f565360
	Node0x55a98f565360 -> Node0x55a98f5653f0
	Node0x55a98f5653f0 -> Node0x55a98f565490
	Node0x55a98f565490 -> Node0x55a98f4f7348
	Node0x55a98f4f7348 -> Node0x55a98f565620
	Node0x55a98f4f7348 -> Node0x55a98f562c48
	Node0x55a98f565620 -> Node0x55a98f562fc8
edge [color=red]
	Node0x55a98f563190 -> Node0x55a98f562c48[label="1"]
	Node0x55a98f562c48 -> Node0x55a98f562d08[label="2"]
	Node0x55a98f563290 -> Node0x55a98f562ea8[label="3"]
	Node0x55a98f565490 -> Node0x55a98f563018[label="4"]
	Node0x55a98f562c48 -> Node0x55a98f563100[label="5"]
	Node0x55a98f562d08 -> Node0x55a98f563190[label="6"]
	Node0x55a98f563100 -> Node0x55a98f563190[label="7"]
	Node0x55a98f562ea8 -> Node0x55a98f563200[label="8"]
	Node0x55a98f562ea8 -> Node0x55a98f563290[label="9"]
	Node0x55a98f563190 -> Node0x55a98f563290[label="10"]
	Node0x55a98f563290 -> Node0x55a98f563300[label="11"]
	Node0x55a98f563200 -> Node0x55a98f563390[label="12"]
	Node0x55a98f563300 -> Node0x55a98f563390[label="13"]
	Node0x55a98f563390 -> Node0x55a98f4ebc98[label="14"]
	Node0x55a98f563018 -> Node0x55a98f563980[label="15"]
	Node0x55a98f563980 -> Node0x55a98f563708[label="16"]
	Node0x55a98f562ea8 -> Node0x55a98f5648c0[label="17"]
	Node0x55a98f563290 -> Node0x55a98f564980[label="18"]
	Node0x55a98f5648c0 -> Node0x55a98f564a10[label="19"]
	Node0x55a98f564980 -> Node0x55a98f564a10[label="20"]
	Node0x55a98f564a10 -> Node0x55a98f4f7228[label="21"]
	Node0x55a98f563018 -> Node0x55a98f564c00[label="22"]
	Node0x55a98f564c00 -> Node0x55a98f564b98[label="23"]
	Node0x55a98f562ea8 -> Node0x55a98f5652c0[label="24"]
	Node0x55a98f563290 -> Node0x55a98f565360[label="25"]
	Node0x55a98f5652c0 -> Node0x55a98f5653f0[label="26"]
	Node0x55a98f565360 -> Node0x55a98f5653f0[label="27"]
	Node0x55a98f563018 -> Node0x55a98f565490[label="28"]
	Node0x55a98f5653f0 -> Node0x55a98f4f7348[label="29"]
	Node0x55a98f563018 -> Node0x55a98f565620[label="30"]
	Node0x55a98f565620 -> Node0x55a98f5655b8[label="31"]
}
