digraph "CDFG for'main' function" {
	Node0x560c4fb080c8[shape=record, label="  %ch.i = alloca [50 x i8], align 16"]
	Node0x560c4fb0acc8[shape=record, label="  %0 = getelementptr inbounds [50 x i8], [50 x i8]* %ch.i, i64 0, i64 0"]
	Node0x560c4fb0ae18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %0) #3"]
	Node0x560c4fb0aef0[shape=record, label="  %call.i = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)) #3"]
	Node0x560c4fb0aff8[shape=record, label="  %call1.i = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %0) #3"]
	Node0x560c4fb085a8[shape=record, label="  br label %for.cond.i"]
	Node0x560c4fb0b1e8[shape=record, label="  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc.i ], [ 0, %entry ]"]
	Node0x560c4fb0b368[shape=record, label="  %j.0.i = phi i32 [ %j.1.i, %for.inc.i ], [ 0, %entry ]"]
	Node0x560c4fb0b4d8[shape=record, label="  %k.0.i = phi i32 [ %k.1.i, %for.inc.i ], [ 0, %entry ]"]
	Node0x560c4fb0b5d8[shape=record, label="  %arrayidx.i = getelementptr inbounds [50 x i8], [50 x i8]* %ch.i, i64 0, i64 %indvars.iv.i"]
	Node0x560c4fb0b678[shape=record, label="  %1 = load i8, i8* %arrayidx.i, align 1, !tbaa !2"]
	Node0x560c4fb0beb8[shape=record, label="  switch i8 %1, label %if.else.i [
    i8 0, label %func.exit
    i8 32, label %for.inc.i
  ]"]
	Node0x560c4fb0bfd0[shape=record, label="  %cmp6.i = icmp eq i32 %k.0.i, 0"]
	Node0x560c4fb0bd88[shape=record, label="  %inc.i = zext i1 %cmp6.i to i32"]
	Node0x560c4fb0c200[shape=record, label="  %spec.select.i = add nsw i32 %j.0.i, %inc.i"]
	Node0x560c4fb0c2b8[shape=record, label="  %spec.select18.i = select i1 %cmp6.i, i32 1, i32 %k.0.i"]
	Node0x560c4fb0cb58[shape=record, label="  br label %for.inc.i"]
	Node0x560c4fb0cba8[shape=record, label="  %j.1.i = phi i32 [ %j.0.i, %for.cond.i ], [ %spec.select.i, %if.else.i ]"]
	Node0x560c4fb0cc48[shape=record, label="  %k.1.i = phi i32 [ 0, %for.cond.i ], [ %spec.select18.i, %if.else.i ]"]
	Node0x560c4fb0cd10[shape=record, label="  %indvars.iv.next.i = add nuw i64 %indvars.iv.i, 1"]
	Node0x560c4fb07e78[shape=record, label="  br label %for.cond.i"]
	Node0x560c4fb0cdb0[shape=record, label="  %call12.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %0, i32 %j.0.i) #3"]
	Node0x560c4fb0cef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %0) #3"]
	Node0x560c4fb0be68[shape=record, label="  ret i32 0"]
	Node0x560c4fb080c8 -> Node0x560c4fb0acc8
	Node0x560c4fb0acc8 -> Node0x560c4fb0ae18
	Node0x560c4fb0ae18 -> Node0x560c4fb0aef0
	Node0x560c4fb0aef0 -> Node0x560c4fb0aff8
	Node0x560c4fb0aff8 -> Node0x560c4fb085a8
	Node0x560c4fb085a8 -> Node0x560c4fb0b1e8
	Node0x560c4fb0b1e8 -> Node0x560c4fb0b368
	Node0x560c4fb0b368 -> Node0x560c4fb0b4d8
	Node0x560c4fb0b4d8 -> Node0x560c4fb0b5d8
	Node0x560c4fb0b5d8 -> Node0x560c4fb0b678
	Node0x560c4fb0b678 -> Node0x560c4fb0beb8
	Node0x560c4fb0beb8 -> Node0x560c4fb0bfd0
	Node0x560c4fb0beb8 -> Node0x560c4fb0cdb0
	Node0x560c4fb0beb8 -> Node0x560c4fb0cba8
	Node0x560c4fb0bfd0 -> Node0x560c4fb0bd88
	Node0x560c4fb0bd88 -> Node0x560c4fb0c200
	Node0x560c4fb0c200 -> Node0x560c4fb0c2b8
	Node0x560c4fb0c2b8 -> Node0x560c4fb0cb58
	Node0x560c4fb0cb58 -> Node0x560c4fb0cba8
	Node0x560c4fb0cba8 -> Node0x560c4fb0cc48
	Node0x560c4fb0cc48 -> Node0x560c4fb0cd10
	Node0x560c4fb0cd10 -> Node0x560c4fb07e78
	Node0x560c4fb07e78 -> Node0x560c4fb0b1e8
	Node0x560c4fb0cdb0 -> Node0x560c4fb0cef8
	Node0x560c4fb0cef8 -> Node0x560c4fb0be68
edge [color=red]
	Node0x560c4fb080c8 -> Node0x560c4fb0acc8[label="1"]
	Node0x560c4fb0acc8 -> Node0x560c4fb0ae18[label="2"]
	Node0x560c4fb0acc8 -> Node0x560c4fb0aff8[label="3"]
	Node0x560c4fb0cd10 -> Node0x560c4fb0b1e8[label="4"]
	Node0x560c4fb0cba8 -> Node0x560c4fb0b368[label="5"]
	Node0x560c4fb0cc48 -> Node0x560c4fb0b4d8[label="6"]
	Node0x560c4fb080c8 -> Node0x560c4fb0b5d8[label="7"]
	Node0x560c4fb0b1e8 -> Node0x560c4fb0b5d8[label="8"]
	Node0x560c4fb0b5d8 -> Node0x560c4fb0b678[label="9"]
	Node0x560c4fb0b678 -> Node0x560c4fb0beb8[label="10"]
	Node0x560c4fb0b4d8 -> Node0x560c4fb0bfd0[label="11"]
	Node0x560c4fb0bfd0 -> Node0x560c4fb0bd88[label="12"]
	Node0x560c4fb0b368 -> Node0x560c4fb0c200[label="13"]
	Node0x560c4fb0bd88 -> Node0x560c4fb0c200[label="14"]
	Node0x560c4fb0bfd0 -> Node0x560c4fb0c2b8[label="15"]
	Node0x560c4fb0b4d8 -> Node0x560c4fb0c2b8[label="16"]
	Node0x560c4fb0b368 -> Node0x560c4fb0cba8[label="17"]
	Node0x560c4fb0c200 -> Node0x560c4fb0cba8[label="18"]
	Node0x560c4fb0c2b8 -> Node0x560c4fb0cc48[label="19"]
	Node0x560c4fb0b1e8 -> Node0x560c4fb0cd10[label="20"]
	Node0x560c4fb0acc8 -> Node0x560c4fb0cdb0[label="21"]
	Node0x560c4fb0b368 -> Node0x560c4fb0cdb0[label="22"]
	Node0x560c4fb0acc8 -> Node0x560c4fb0cef8[label="23"]
}
