digraph "CDFG for'main' function" {
	Node0x55dbf077e1e0[shape=record, label="  %call.i = tail call i64 @strtol(i8* nocapture nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8** null, i32 10) #3"]
	Node0x55dbf077ce58[shape=record, label="  %conv.i = trunc i64 %call.i to i32"]
	Node0x55dbf077ecb8[shape=record, label="  %call1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %conv.i)"]
	Node0x55dbf077ee78[shape=record, label="  br label %while.cond.i"]
	Node0x55dbf077f028[shape=record, label="  %str.addr.0.i = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %entry ], [ %incdec.ptr.i, %while.body.i ]"]
	Node0x55dbf077f108[shape=record, label="  %0 = load i8, i8* %str.addr.0.i, align 1, !tbaa !2"]
	Node0x55dbf077f428[shape=record, label="  switch i8 %0, label %if.end11.i [
    i8 32, label %while.body.i
    i8 45, label %if.end11.ithread-pre-split.loopexit
    i8 43, label %if.end11.ithread-pre-split
  ]"]
	Node0x55dbf077f570[shape=record, label="  %incdec.ptr.i = getelementptr inbounds i8, i8* %str.addr.0.i, i64 1"]
	Node0x55dbf077ee18[shape=record, label="  br label %while.cond.i"]
	Node0x55dbf077f2c8[shape=record, label="  br label %if.end11.ithread-pre-split"]
	Node0x55dbf077f5c8[shape=record, label="  %flag.0.i.ph = phi i32 [ -1, %if.end11.ithread-pre-split.loopexit ], [ 1, %while.cond.i ]"]
	Node0x55dbf077f690[shape=record, label="  %str.addr.1.i.ph = getelementptr inbounds i8, i8* %str.addr.0.i, i64 1"]
	Node0x55dbf077f3a8[shape=record, label="  %.pr = load i8, i8* %str.addr.1.i.ph, align 1, !tbaa !2"]
	Node0x55dbf077efd8[shape=record, label="  br label %if.end11.i"]
	Node0x55dbf077f8a8[shape=record, label="  %1 = phi i8 [ %.pr, %if.end11.ithread-pre-split ], [ %0, %while.cond.i ]"]
	Node0x55dbf077f968[shape=record, label="  %str.addr.1.i = phi i8* [ %str.addr.1.i.ph, %if.end11.ithread-pre-split ], [ %str.addr.0.i, %while.cond.i ]"]
	Node0x55dbf077fa38[shape=record, label="  %flag.0.i = phi i32 [ %flag.0.i.ph, %if.end11.ithread-pre-split ], [ 1, %while.cond.i ]"]
	Node0x55dbf077fb00[shape=record, label="  %cmp14.i1418 = icmp eq i8 %1, 0"]
	Node0x55dbf077fd58[shape=record, label="  br i1 %cmp14.i1418, label %func.exit, label %while.cond12.outer.split.i.lr.ph"]
	Node0x55dbf077fe68[shape=record, label="  %2 = phi i8 [ %8, %if.then37.i ], [ %1, %if.end11.i ]"]
	Node0x55dbf077ffa8[shape=record, label="  %3 = phi i64 [ %7, %if.then37.i ], [ 0, %if.end11.i ]"]
	Node0x55dbf0780078[shape=record, label="  %flag_num.0.ph.ph.i20 = phi i32 [ 1, %if.then37.i ], [ 0, %if.end11.i ]"]
	Node0x55dbf07801d8[shape=record, label="  %result.0.ph.ph.i19 = phi i32 [ %sub.i, %if.then37.i ], [ 0, %if.end11.i ]"]
	Node0x55dbf0780408[shape=record, label="  br label %while.cond12.outer.split.i"]
	Node0x55dbf07804e8[shape=record, label="  %4 = phi i8 [ %2, %while.cond12.outer.split.i.lr.ph ], [ %6, %if.then24.i ]"]
	Node0x55dbf0780608[shape=record, label="  %flag_num.0.ph.i16 = phi i32 [ %flag_num.0.ph.ph.i20, %while.cond12.outer.split.i.lr.ph ], [ 0, %if.then24.i ]"]
	Node0x55dbf0780a88[shape=record, label="  %indvars.iv.i15 = phi i64 [ %3, %while.cond12.outer.split.i.lr.ph ], [ %indvars.iv.next.i, %if.then24.i ]"]
	Node0x55dbf0780b50[shape=record, label="  %cmp20.i = icmp eq i8 %4, 32"]
	Node0x55dbf0780c40[shape=record, label="  %cmp22.i = icmp eq i32 %flag_num.0.ph.i16, 0"]
	Node0x55dbf0780cd0[shape=record, label="  %or.cond.i = and i1 %cmp22.i, %cmp20.i"]
	Node0x55dbf0780e78[shape=record, label="  br i1 %or.cond.i, label %if.then24.i, label %while.cond12.outer.split.split.i"]
	Node0x55dbf0780ef0[shape=record, label="  %.off.le.i = add i8 %4, -48"]
	Node0x55dbf0780f60[shape=record, label="  %5 = icmp ult i8 %.off.le.i, 10"]
	Node0x55dbf0780fe8[shape=record, label="  br i1 %5, label %if.then37.i, label %func.exit"]
	Node0x55dbf0781060[shape=record, label="  %indvars.iv.next.i = add i64 %indvars.iv.i15, 1"]
	Node0x55dbf07810d0[shape=record, label="  %arrayidx.i = getelementptr inbounds i8, i8* %str.addr.1.i, i64 %indvars.iv.next.i"]
	Node0x55dbf0780a38[shape=record, label="  %6 = load i8, i8* %arrayidx.i, align 1, !tbaa !2"]
	Node0x55dbf0781150[shape=record, label="  %cmp14.i = icmp eq i8 %6, 0"]
	Node0x55dbf07811d8[shape=record, label="  br i1 %cmp14.i, label %func.exit, label %while.cond12.outer.split.i"]
	Node0x55dbf077fc98[shape=record, label="  %conv13.le.i = sext i8 %4 to i32"]
	Node0x55dbf0781250[shape=record, label="  %mul.i = mul nsw i32 %result.0.ph.ph.i19, 10"]
	Node0x55dbf07812e0[shape=record, label="  %add.i = add i32 %mul.i, -48"]
	Node0x55dbf0781370[shape=record, label="  %sub.i = add i32 %add.i, %conv13.le.i"]
	Node0x55dbf07813e0[shape=record, label="  %inc41.i = shl i64 %indvars.iv.i15, 32"]
	Node0x55dbf0781470[shape=record, label="  %sext.i = add i64 %inc41.i, 4294967296"]
	Node0x55dbf0781500[shape=record, label="  %7 = ashr exact i64 %sext.i, 32"]
	Node0x55dbf0781570[shape=record, label="  %arrayidx.i13 = getelementptr inbounds i8, i8* %str.addr.1.i, i64 %7"]
	Node0x55dbf0780188[shape=record, label="  %8 = load i8, i8* %arrayidx.i13, align 1, !tbaa !2"]
	Node0x55dbf0781680[shape=record, label="  %cmp14.i14 = icmp eq i8 %8, 0"]
	Node0x55dbf0781708[shape=record, label="  br i1 %cmp14.i14, label %func.exit, label %while.cond12.outer.split.i.lr.ph"]
	Node0x55dbf0780588[shape=record, label="  %result.0.ph.ph.i10 = phi i32 [ 0, %if.end11.i ], [ %result.0.ph.ph.i19, %if.then24.i ], [ %sub.i, %if.then37.i ], [ %result.0.ph.ph.i19, %while.cond12.outer.split.split.i ]"]
	Node0x55dbf0781810[shape=record, label="  %mul66.i = mul nsw i32 %result.0.ph.ph.i10, %flag.0.i"]
	Node0x55dbf07818d8[shape=record, label="  %call3 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %mul66.i)"]
	Node0x55dbf077f1e8[shape=record, label="  ret i32 0"]
	Node0x55dbf077e1e0 -> Node0x55dbf077ce58
	Node0x55dbf077ce58 -> Node0x55dbf077ecb8
	Node0x55dbf077ecb8 -> Node0x55dbf077ee78
	Node0x55dbf077ee78 -> Node0x55dbf077f028
	Node0x55dbf077f028 -> Node0x55dbf077f108
	Node0x55dbf077f108 -> Node0x55dbf077f428
	Node0x55dbf077f428 -> Node0x55dbf077f8a8
	Node0x55dbf077f428 -> Node0x55dbf077f570
	Node0x55dbf077f428 -> Node0x55dbf077f2c8
	Node0x55dbf077f428 -> Node0x55dbf077f5c8
	Node0x55dbf077f570 -> Node0x55dbf077ee18
	Node0x55dbf077ee18 -> Node0x55dbf077f028
	Node0x55dbf077f2c8 -> Node0x55dbf077f5c8
	Node0x55dbf077f5c8 -> Node0x55dbf077f690
	Node0x55dbf077f690 -> Node0x55dbf077f3a8
	Node0x55dbf077f3a8 -> Node0x55dbf077efd8
	Node0x55dbf077efd8 -> Node0x55dbf077f8a8
	Node0x55dbf077f8a8 -> Node0x55dbf077f968
	Node0x55dbf077f968 -> Node0x55dbf077fa38
	Node0x55dbf077fa38 -> Node0x55dbf077fb00
	Node0x55dbf077fb00 -> Node0x55dbf077fd58
	Node0x55dbf077fd58 -> Node0x55dbf0780588
	Node0x55dbf077fd58 -> Node0x55dbf077fe68
	Node0x55dbf077fe68 -> Node0x55dbf077ffa8
	Node0x55dbf077ffa8 -> Node0x55dbf0780078
	Node0x55dbf0780078 -> Node0x55dbf07801d8
	Node0x55dbf07801d8 -> Node0x55dbf0780408
	Node0x55dbf0780408 -> Node0x55dbf07804e8
	Node0x55dbf07804e8 -> Node0x55dbf0780608
	Node0x55dbf0780608 -> Node0x55dbf0780a88
	Node0x55dbf0780a88 -> Node0x55dbf0780b50
	Node0x55dbf0780b50 -> Node0x55dbf0780c40
	Node0x55dbf0780c40 -> Node0x55dbf0780cd0
	Node0x55dbf0780cd0 -> Node0x55dbf0780e78
	Node0x55dbf0780e78 -> Node0x55dbf0781060
	Node0x55dbf0780e78 -> Node0x55dbf0780ef0
	Node0x55dbf0780ef0 -> Node0x55dbf0780f60
	Node0x55dbf0780f60 -> Node0x55dbf0780fe8
	Node0x55dbf0780fe8 -> Node0x55dbf077fc98
	Node0x55dbf0780fe8 -> Node0x55dbf0780588
	Node0x55dbf0781060 -> Node0x55dbf07810d0
	Node0x55dbf07810d0 -> Node0x55dbf0780a38
	Node0x55dbf0780a38 -> Node0x55dbf0781150
	Node0x55dbf0781150 -> Node0x55dbf07811d8
	Node0x55dbf07811d8 -> Node0x55dbf0780588
	Node0x55dbf07811d8 -> Node0x55dbf07804e8
	Node0x55dbf077fc98 -> Node0x55dbf0781250
	Node0x55dbf0781250 -> Node0x55dbf07812e0
	Node0x55dbf07812e0 -> Node0x55dbf0781370
	Node0x55dbf0781370 -> Node0x55dbf07813e0
	Node0x55dbf07813e0 -> Node0x55dbf0781470
	Node0x55dbf0781470 -> Node0x55dbf0781500
	Node0x55dbf0781500 -> Node0x55dbf0781570
	Node0x55dbf0781570 -> Node0x55dbf0780188
	Node0x55dbf0780188 -> Node0x55dbf0781680
	Node0x55dbf0781680 -> Node0x55dbf0781708
	Node0x55dbf0781708 -> Node0x55dbf0780588
	Node0x55dbf0781708 -> Node0x55dbf077fe68
	Node0x55dbf0780588 -> Node0x55dbf0781810
	Node0x55dbf0781810 -> Node0x55dbf07818d8
	Node0x55dbf07818d8 -> Node0x55dbf077f1e8
edge [color=red]
	Node0x55dbf077e1e0 -> Node0x55dbf077ce58[label="1"]
	Node0x55dbf077ce58 -> Node0x55dbf077ecb8[label="2"]
	Node0x55dbf077f570 -> Node0x55dbf077f028[label="3"]
	Node0x55dbf077f028 -> Node0x55dbf077f108[label="4"]
	Node0x55dbf077f108 -> Node0x55dbf077f428[label="5"]
	Node0x55dbf077f028 -> Node0x55dbf077f570[label="6"]
	Node0x55dbf077f028 -> Node0x55dbf077f690[label="7"]
	Node0x55dbf077f690 -> Node0x55dbf077f3a8[label="8"]
	Node0x55dbf077f3a8 -> Node0x55dbf077f8a8[label="9"]
	Node0x55dbf077f108 -> Node0x55dbf077f8a8[label="10"]
	Node0x55dbf077f690 -> Node0x55dbf077f968[label="11"]
	Node0x55dbf077f028 -> Node0x55dbf077f968[label="12"]
	Node0x55dbf077f5c8 -> Node0x55dbf077fa38[label="13"]
	Node0x55dbf077f8a8 -> Node0x55dbf077fb00[label="14"]
	Node0x55dbf077fb00 -> Node0x55dbf077fd58[label="15"]
	Node0x55dbf0780188 -> Node0x55dbf077fe68[label="16"]
	Node0x55dbf077f8a8 -> Node0x55dbf077fe68[label="17"]
	Node0x55dbf0781500 -> Node0x55dbf077ffa8[label="18"]
	Node0x55dbf0781370 -> Node0x55dbf07801d8[label="19"]
	Node0x55dbf077fe68 -> Node0x55dbf07804e8[label="20"]
	Node0x55dbf0780a38 -> Node0x55dbf07804e8[label="21"]
	Node0x55dbf0780078 -> Node0x55dbf0780608[label="22"]
	Node0x55dbf077ffa8 -> Node0x55dbf0780a88[label="23"]
	Node0x55dbf0781060 -> Node0x55dbf0780a88[label="24"]
	Node0x55dbf07804e8 -> Node0x55dbf0780b50[label="25"]
	Node0x55dbf0780608 -> Node0x55dbf0780c40[label="26"]
	Node0x55dbf0780c40 -> Node0x55dbf0780cd0[label="27"]
	Node0x55dbf0780b50 -> Node0x55dbf0780cd0[label="28"]
	Node0x55dbf0780cd0 -> Node0x55dbf0780e78[label="29"]
	Node0x55dbf07804e8 -> Node0x55dbf0780ef0[label="30"]
	Node0x55dbf0780ef0 -> Node0x55dbf0780f60[label="31"]
	Node0x55dbf0780f60 -> Node0x55dbf0780fe8[label="32"]
	Node0x55dbf0780a88 -> Node0x55dbf0781060[label="33"]
	Node0x55dbf077f968 -> Node0x55dbf07810d0[label="34"]
	Node0x55dbf0781060 -> Node0x55dbf07810d0[label="35"]
	Node0x55dbf07810d0 -> Node0x55dbf0780a38[label="36"]
	Node0x55dbf0780a38 -> Node0x55dbf0781150[label="37"]
	Node0x55dbf0781150 -> Node0x55dbf07811d8[label="38"]
	Node0x55dbf07804e8 -> Node0x55dbf077fc98[label="39"]
	Node0x55dbf07801d8 -> Node0x55dbf0781250[label="40"]
	Node0x55dbf0781250 -> Node0x55dbf07812e0[label="41"]
	Node0x55dbf07812e0 -> Node0x55dbf0781370[label="42"]
	Node0x55dbf077fc98 -> Node0x55dbf0781370[label="43"]
	Node0x55dbf0780a88 -> Node0x55dbf07813e0[label="44"]
	Node0x55dbf07813e0 -> Node0x55dbf0781470[label="45"]
	Node0x55dbf0781470 -> Node0x55dbf0781500[label="46"]
	Node0x55dbf077f968 -> Node0x55dbf0781570[label="47"]
	Node0x55dbf0781500 -> Node0x55dbf0781570[label="48"]
	Node0x55dbf0781570 -> Node0x55dbf0780188[label="49"]
	Node0x55dbf0780188 -> Node0x55dbf0781680[label="50"]
	Node0x55dbf0781680 -> Node0x55dbf0781708[label="51"]
	Node0x55dbf07801d8 -> Node0x55dbf0780588[label="52"]
	Node0x55dbf0781370 -> Node0x55dbf0780588[label="53"]
	Node0x55dbf07801d8 -> Node0x55dbf0780588[label="54"]
	Node0x55dbf0780588 -> Node0x55dbf0781810[label="55"]
	Node0x55dbf077fa38 -> Node0x55dbf0781810[label="56"]
	Node0x55dbf0781810 -> Node0x55dbf07818d8[label="57"]
}
