digraph "CDFG for'Pop' function" {
	Node0x55e910593208[shape=record, label="  %top.i = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %S, i64 0, i32 1"]
	Node0x55e910592808[shape=record, label="  %0 = load i32, i32* %top.i, align 4, !tbaa !2"]
	Node0x55e9105932b0[shape=record, label="  %cmp.i = icmp eq i32 %0, -1"]
	Node0x55e910593498[shape=record, label="  br i1 %cmp.i, label %if.then, label %if.end"]
	Node0x55e9105935b0[shape=record, label="  %call1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))"]
	Node0x55e9105936d8[shape=record, label="  br label %return"]
	Node0x55e910593750[shape=record, label="  %dec = add nsw i32 %0, -1"]
	Node0x55e9105937e0[shape=record, label="  store i32 %dec, i32* %top.i, align 4, !tbaa !2"]
	Node0x55e910593408[shape=record, label="  %idxprom = sext i32 %0 to i64"]
	Node0x55e9105938b0[shape=record, label="  %arrayidx = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %S, i64 0, i32 0, i64 %idxprom"]
	Node0x55e910593948[shape=record, label="  %1 = load i32, i32* %arrayidx, align 4, !tbaa !7"]
	Node0x55e910593fd8[shape=record, label="  br label %return"]
	Node0x55e910594028[shape=record, label="  %retval.0 = phi i32 [ -1, %if.then ], [ %1, %if.end ]"]
	Node0x55e910592208[shape=record, label="  ret i32 %retval.0"]
	Node0x55e910593208 -> Node0x55e910592808
	Node0x55e910592808 -> Node0x55e9105932b0
	Node0x55e9105932b0 -> Node0x55e910593498
	Node0x55e910593498 -> Node0x55e9105935b0
	Node0x55e910593498 -> Node0x55e910593750
	Node0x55e9105935b0 -> Node0x55e9105936d8
	Node0x55e9105936d8 -> Node0x55e910594028
	Node0x55e910593750 -> Node0x55e9105937e0
	Node0x55e9105937e0 -> Node0x55e910593408
	Node0x55e910593408 -> Node0x55e9105938b0
	Node0x55e9105938b0 -> Node0x55e910593948
	Node0x55e910593948 -> Node0x55e910593fd8
	Node0x55e910593fd8 -> Node0x55e910594028
	Node0x55e910594028 -> Node0x55e910592208
edge [color=red]
	Node0x55e910593208 -> Node0x55e910592808[label="1"]
	Node0x55e910592808 -> Node0x55e9105932b0[label="2"]
	Node0x55e9105932b0 -> Node0x55e910593498[label="3"]
	Node0x55e910592808 -> Node0x55e910593750[label="4"]
	Node0x55e910593750 -> Node0x55e9105937e0[label="5"]
	Node0x55e9105937e0 -> Node0x55e910593208[label="6"]
	Node0x55e910592808 -> Node0x55e910593408[label="7"]
	Node0x55e910593408 -> Node0x55e9105938b0[label="8"]
	Node0x55e9105938b0 -> Node0x55e910593948[label="9"]
	Node0x55e910593948 -> Node0x55e910594028[label="10"]
	Node0x55e910594028 -> Node0x55e910592208[label="11"]
}
