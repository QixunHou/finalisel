digraph "CDFG for'main' function" {
	Node0x55aed323d988[shape=record, label="  %ch = alloca i8, align 1"]
	Node0x55aed323db98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %ch) #4"]
	Node0x55aed323e088[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0))"]
	Node0x55aed323e200[shape=record, label="  %call1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0))"]
	Node0x55aed323e4d8[shape=record, label="  %call2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %ch)"]
	Node0x55aed323e598[shape=record, label="  %0 = load i8, i8* %ch, align 1, !tbaa !2"]
	Node0x55aed323e638[shape=record, label="  %1 = load i8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), align 16, !tbaa !2"]
	Node0x55aed323e6b0[shape=record, label="  %tobool9.i = icmp eq i8 %1, 0"]
	Node0x55aed323e928[shape=record, label="  br i1 %tobool9.i, label %func.exit, label %for.body.i"]
	Node0x55aed323ea68[shape=record, label="  %2 = phi i8 [ %3, %for.inc.i ], [ %1, %entry ]"]
	Node0x55aed323ebf8[shape=record, label="  %q.011.i = phi i8* [ %incdec.ptr2.i, %for.inc.i ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), %entry ]"]
	Node0x55aed323ed58[shape=record, label="  %s.addr.010.i = phi i8* [ %s.addr.1.i, %for.inc.i ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), %entry ]"]
	Node0x55aed323ee50[shape=record, label="  %cmp.i = icmp eq i8 %2, %0"]
	Node0x55aed323f158[shape=record, label="  br i1 %cmp.i, label %for.inc.i, label %if.then.i"]
	Node0x55aed323f1d0[shape=record, label="  %incdec.ptr.i = getelementptr inbounds i8, i8* %s.addr.010.i, i64 1"]
	Node0x55aed323f280[shape=record, label="  store i8 %2, i8* %s.addr.010.i, align 1, !tbaa !2"]
	Node0x55aed323f0c8[shape=record, label="  br label %for.inc.i"]
	Node0x55aed323f2d8[shape=record, label="  %s.addr.1.i = phi i8* [ %incdec.ptr.i, %if.then.i ], [ %s.addr.010.i, %for.body.i ]"]
	Node0x55aed323f3a0[shape=record, label="  %incdec.ptr2.i = getelementptr inbounds i8, i8* %q.011.i, i64 1"]
	Node0x55aed323eba8[shape=record, label="  %3 = load i8, i8* %incdec.ptr2.i, align 1, !tbaa !2"]
	Node0x55aed323f420[shape=record, label="  %tobool.i = icmp eq i8 %3, 0"]
	Node0x55aed323f4a8[shape=record, label="  br i1 %tobool.i, label %func.exit, label %for.body.i"]
	Node0x55aed323f518[shape=record, label="  %s.addr.0.lcssa.i = phi i8* [ getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), %entry ], [ %s.addr.1.i, %for.inc.i ]"]
	Node0x55aed323f640[shape=record, label="  store i8 0, i8* %s.addr.0.lcssa.i, align 1, !tbaa !2"]
	Node0x55aed323f758[shape=record, label="  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0))"]
	Node0x55aed323f8a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %ch) #4"]
	Node0x55aed323e9a0[shape=record, label="  ret void"]
	Node0x55aed323d988 -> Node0x55aed323db98
	Node0x55aed323db98 -> Node0x55aed323e088
	Node0x55aed323e088 -> Node0x55aed323e200
	Node0x55aed323e200 -> Node0x55aed323e4d8
	Node0x55aed323e4d8 -> Node0x55aed323e598
	Node0x55aed323e598 -> Node0x55aed323e638
	Node0x55aed323e638 -> Node0x55aed323e6b0
	Node0x55aed323e6b0 -> Node0x55aed323e928
	Node0x55aed323e928 -> Node0x55aed323f518
	Node0x55aed323e928 -> Node0x55aed323ea68
	Node0x55aed323ea68 -> Node0x55aed323ebf8
	Node0x55aed323ebf8 -> Node0x55aed323ed58
	Node0x55aed323ed58 -> Node0x55aed323ee50
	Node0x55aed323ee50 -> Node0x55aed323f158
	Node0x55aed323f158 -> Node0x55aed323f2d8
	Node0x55aed323f158 -> Node0x55aed323f1d0
	Node0x55aed323f1d0 -> Node0x55aed323f280
	Node0x55aed323f280 -> Node0x55aed323f0c8
	Node0x55aed323f0c8 -> Node0x55aed323f2d8
	Node0x55aed323f2d8 -> Node0x55aed323f3a0
	Node0x55aed323f3a0 -> Node0x55aed323eba8
	Node0x55aed323eba8 -> Node0x55aed323f420
	Node0x55aed323f420 -> Node0x55aed323f4a8
	Node0x55aed323f4a8 -> Node0x55aed323f518
	Node0x55aed323f4a8 -> Node0x55aed323ea68
	Node0x55aed323f518 -> Node0x55aed323f640
	Node0x55aed323f640 -> Node0x55aed323f758
	Node0x55aed323f758 -> Node0x55aed323f8a8
	Node0x55aed323f8a8 -> Node0x55aed323e9a0
edge [color=red]
	Node0x55aed323d988 -> Node0x55aed323db98[label="1"]
	Node0x55aed323d988 -> Node0x55aed323e4d8[label="2"]
	Node0x55aed323d988 -> Node0x55aed323e598[label="3"]
	Node0x55aed323df18 -> Node0x55aed323e638[label="4"]
	Node0x55aed323e638 -> Node0x55aed323e6b0[label="5"]
	Node0x55aed323e6b0 -> Node0x55aed323e928[label="6"]
	Node0x55aed323eba8 -> Node0x55aed323ea68[label="7"]
	Node0x55aed323e638 -> Node0x55aed323ea68[label="8"]
	Node0x55aed323f3a0 -> Node0x55aed323ebf8[label="9"]
	Node0x55aed323f2d8 -> Node0x55aed323ed58[label="10"]
	Node0x55aed323ea68 -> Node0x55aed323ee50[label="11"]
	Node0x55aed323e598 -> Node0x55aed323ee50[label="12"]
	Node0x55aed323ee50 -> Node0x55aed323f158[label="13"]
	Node0x55aed323ed58 -> Node0x55aed323f1d0[label="14"]
	Node0x55aed323ea68 -> Node0x55aed323f280[label="15"]
	Node0x55aed323f280 -> Node0x55aed323ed58[label="16"]
	Node0x55aed323f1d0 -> Node0x55aed323f2d8[label="17"]
	Node0x55aed323ed58 -> Node0x55aed323f2d8[label="18"]
	Node0x55aed323ebf8 -> Node0x55aed323f3a0[label="19"]
	Node0x55aed323f3a0 -> Node0x55aed323eba8[label="20"]
	Node0x55aed323eba8 -> Node0x55aed323f420[label="21"]
	Node0x55aed323f420 -> Node0x55aed323f4a8[label="22"]
	Node0x55aed323f2d8 -> Node0x55aed323f518[label="23"]
	Node0x55aed323bb80 -> Node0x55aed323f640[label="24"]
	Node0x55aed323f640 -> Node0x55aed323f518[label="25"]
	Node0x55aed323d988 -> Node0x55aed323f8a8[label="26"]
}
