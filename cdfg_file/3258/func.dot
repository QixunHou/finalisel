digraph "CDFG for'func' function" {
	Node0x55b32557b458[shape=record, label="  %0 = load i8, i8* %str, align 1, !tbaa !2"]
	Node0x55b32557c9c0[shape=record, label="  %tobool29 = icmp eq i8 %0, 0"]
	Node0x55b325503db8[shape=record, label="  br i1 %tobool29, label %while.end13, label %while.cond1.preheader.lr.ph"]
	Node0x55b32557cbe8[shape=record, label="  %1 = load i8, i8* %substr, align 1, !tbaa !2"]
	Node0x55b32557d2f0[shape=record, label="  %tobool224 = icmp eq i8 %1, 0"]
	Node0x55b32550f228[shape=record, label="  br i1 %tobool224, label %while.cond1.preheader.us, label %while.cond1.preheader"]
	Node0x55b32557d5c8[shape=record, label="  %n.032.us = phi i32 [ %spec.select.us, %while.cond1.preheader.us ], [ 0, %while.cond1.preheader.lr.ph ]"]
	Node0x55b32557d758[shape=record, label="  %str.addr.030.us = phi i8* [ %incdec.ptr12.us, %while.cond1.preheader.us ], [ %str, %while.cond1.preheader.lr.ph ]"]
	Node0x55b32557d820[shape=record, label="  %spec.select.us = add nuw nsw i32 %n.032.us, 1"]
	Node0x55b32557d890[shape=record, label="  %incdec.ptr12.us = getelementptr inbounds i8, i8* %str.addr.030.us, i64 1"]
	Node0x55b32557d6a8[shape=record, label="  %2 = load i8, i8* %incdec.ptr12.us, align 1, !tbaa !2"]
	Node0x55b32557dab0[shape=record, label="  %tobool.us = icmp eq i8 %2, 0"]
	Node0x55b32550f348[shape=record, label="  br i1 %tobool.us, label %while.end13, label %while.cond1.preheader.us"]
	Node0x55b32557dc78[shape=record, label="  %3 = phi i8 [ %5, %while.end ], [ %0, %while.cond1.preheader.lr.ph ]"]
	Node0x55b32557dd78[shape=record, label="  %n.032 = phi i32 [ %spec.select, %while.end ], [ 0, %while.cond1.preheader.lr.ph ]"]
	Node0x55b32557ded8[shape=record, label="  %str.addr.030 = phi i8* [ %incdec.ptr12, %while.end ], [ %str, %while.cond1.preheader.lr.ph ]"]
	Node0x55b32557dfa0[shape=record, label="  %cmp41 = icmp eq i8 %1, %3"]
	Node0x55b32550f468[shape=record, label="  br i1 %cmp41, label %if.then, label %while.end"]
	Node0x55b32557e238[shape=record, label="  %p.02543 = phi i8* [ %incdec.ptr6, %if.then.while.body3_crit_edge ], [ %str.addr.030, %while.cond1.preheader ]"]
	Node0x55b32557e3b8[shape=record, label="  %r.02642 = phi i8* [ %incdec.ptr, %if.then.while.body3_crit_edge ], [ %substr, %while.cond1.preheader ]"]
	Node0x55b32557e4a0[shape=record, label="  %incdec.ptr = getelementptr inbounds i8, i8* %r.02642, i64 1"]
	Node0x55b32557e520[shape=record, label="  %incdec.ptr6 = getelementptr inbounds i8, i8* %p.02543, i64 1"]
	Node0x55b32557e068[shape=record, label="  %4 = load i8, i8* %incdec.ptr, align 1, !tbaa !2"]
	Node0x55b32557e5f0[shape=record, label="  %tobool2 = icmp eq i8 %4, 0"]
	Node0x55b32550f588[shape=record, label="  br i1 %tobool2, label %while.end, label %if.then.while.body3_crit_edge"]
	Node0x55b32557e188[shape=record, label="  %.pre = load i8, i8* %incdec.ptr6, align 1, !tbaa !2"]
	Node0x55b32557e9c0[shape=record, label="  %cmp = icmp eq i8 %4, %.pre"]
	Node0x55b32557ea68[shape=record, label="  br i1 %cmp, label %if.then, label %while.end"]
	Node0x55b32557eab8[shape=record, label="  %tobool2.lcssa = phi i32 [ 0, %while.cond1.preheader ], [ 1, %if.then ], [ 0, %if.then.while.body3_crit_edge ]"]
	Node0x55b32557eba0[shape=record, label="  %spec.select = add nuw nsw i32 %n.032, %tobool2.lcssa"]
	Node0x55b32557ec10[shape=record, label="  %incdec.ptr12 = getelementptr inbounds i8, i8* %str.addr.030, i64 1"]
	Node0x55b32557de28[shape=record, label="  %5 = load i8, i8* %incdec.ptr12, align 1, !tbaa !2"]
	Node0x55b32557ec90[shape=record, label="  %tobool = icmp eq i8 %5, 0"]
	Node0x55b32557ed38[shape=record, label="  br i1 %tobool, label %while.end13, label %while.cond1.preheader"]
	Node0x55b32557ed88[shape=record, label="  %n.0.lcssa = phi i32 [ 0, %entry ], [ %spec.select.us, %while.cond1.preheader.us ], [ %spec.select, %while.end ]"]
	Node0x55b32557cac8[shape=record, label="  ret i32 %n.0.lcssa"]
	Node0x55b32557b458 -> Node0x55b32557c9c0
	Node0x55b32557c9c0 -> Node0x55b325503db8
	Node0x55b325503db8 -> Node0x55b32557ed88
	Node0x55b325503db8 -> Node0x55b32557cbe8
	Node0x55b32557cbe8 -> Node0x55b32557d2f0
	Node0x55b32557d2f0 -> Node0x55b32550f228
	Node0x55b32550f228 -> Node0x55b32557d5c8
	Node0x55b32550f228 -> Node0x55b32557dc78
	Node0x55b32557d5c8 -> Node0x55b32557d758
	Node0x55b32557d758 -> Node0x55b32557d820
	Node0x55b32557d820 -> Node0x55b32557d890
	Node0x55b32557d890 -> Node0x55b32557d6a8
	Node0x55b32557d6a8 -> Node0x55b32557dab0
	Node0x55b32557dab0 -> Node0x55b32550f348
	Node0x55b32550f348 -> Node0x55b32557ed88
	Node0x55b32550f348 -> Node0x55b32557d5c8
	Node0x55b32557dc78 -> Node0x55b32557dd78
	Node0x55b32557dd78 -> Node0x55b32557ded8
	Node0x55b32557ded8 -> Node0x55b32557dfa0
	Node0x55b32557dfa0 -> Node0x55b32550f468
	Node0x55b32550f468 -> Node0x55b32557e238
	Node0x55b32550f468 -> Node0x55b32557eab8
	Node0x55b32557e238 -> Node0x55b32557e3b8
	Node0x55b32557e3b8 -> Node0x55b32557e4a0
	Node0x55b32557e4a0 -> Node0x55b32557e520
	Node0x55b32557e520 -> Node0x55b32557e068
	Node0x55b32557e068 -> Node0x55b32557e5f0
	Node0x55b32557e5f0 -> Node0x55b32550f588
	Node0x55b32550f588 -> Node0x55b32557eab8
	Node0x55b32550f588 -> Node0x55b32557e188
	Node0x55b32557e188 -> Node0x55b32557e9c0
	Node0x55b32557e9c0 -> Node0x55b32557ea68
	Node0x55b32557ea68 -> Node0x55b32557e238
	Node0x55b32557ea68 -> Node0x55b32557eab8
	Node0x55b32557eab8 -> Node0x55b32557eba0
	Node0x55b32557eba0 -> Node0x55b32557ec10
	Node0x55b32557ec10 -> Node0x55b32557de28
	Node0x55b32557de28 -> Node0x55b32557ec90
	Node0x55b32557ec90 -> Node0x55b32557ed38
	Node0x55b32557ed38 -> Node0x55b32557ed88
	Node0x55b32557ed38 -> Node0x55b32557dc78
	Node0x55b32557ed88 -> Node0x55b32557cac8
edge [color=red]
	Node0x55b32557b270 -> Node0x55b32557b458[label="1"]
	Node0x55b32557b458 -> Node0x55b32557c9c0[label="2"]
	Node0x55b32557c9c0 -> Node0x55b325503db8[label="3"]
	Node0x55b32557b298 -> Node0x55b32557cbe8[label="4"]
	Node0x55b32557cbe8 -> Node0x55b32557d2f0[label="5"]
	Node0x55b32557d2f0 -> Node0x55b32550f228[label="6"]
	Node0x55b32557d820 -> Node0x55b32557d5c8[label="7"]
	Node0x55b32557d890 -> Node0x55b32557d758[label="8"]
	Node0x55b32557d5c8 -> Node0x55b32557d820[label="9"]
	Node0x55b32557d758 -> Node0x55b32557d890[label="10"]
	Node0x55b32557d890 -> Node0x55b32557d6a8[label="11"]
	Node0x55b32557d6a8 -> Node0x55b32557dab0[label="12"]
	Node0x55b32557dab0 -> Node0x55b32550f348[label="13"]
	Node0x55b32557de28 -> Node0x55b32557dc78[label="14"]
	Node0x55b32557b458 -> Node0x55b32557dc78[label="15"]
	Node0x55b32557eba0 -> Node0x55b32557dd78[label="16"]
	Node0x55b32557ec10 -> Node0x55b32557ded8[label="17"]
	Node0x55b32557cbe8 -> Node0x55b32557dfa0[label="18"]
	Node0x55b32557dc78 -> Node0x55b32557dfa0[label="19"]
	Node0x55b32557dfa0 -> Node0x55b32550f468[label="20"]
	Node0x55b32557e520 -> Node0x55b32557e238[label="21"]
	Node0x55b32557ded8 -> Node0x55b32557e238[label="22"]
	Node0x55b32557e4a0 -> Node0x55b32557e3b8[label="23"]
	Node0x55b32557e3b8 -> Node0x55b32557e4a0[label="24"]
	Node0x55b32557e238 -> Node0x55b32557e520[label="25"]
	Node0x55b32557e4a0 -> Node0x55b32557e068[label="26"]
	Node0x55b32557e068 -> Node0x55b32557e5f0[label="27"]
	Node0x55b32557e5f0 -> Node0x55b32550f588[label="28"]
	Node0x55b32557e520 -> Node0x55b32557e188[label="29"]
	Node0x55b32557e068 -> Node0x55b32557e9c0[label="30"]
	Node0x55b32557e188 -> Node0x55b32557e9c0[label="31"]
	Node0x55b32557e9c0 -> Node0x55b32557ea68[label="32"]
	Node0x55b32557dd78 -> Node0x55b32557eba0[label="33"]
	Node0x55b32557eab8 -> Node0x55b32557eba0[label="34"]
	Node0x55b32557ded8 -> Node0x55b32557ec10[label="35"]
	Node0x55b32557ec10 -> Node0x55b32557de28[label="36"]
	Node0x55b32557de28 -> Node0x55b32557ec90[label="37"]
	Node0x55b32557ec90 -> Node0x55b32557ed38[label="38"]
	Node0x55b32557d820 -> Node0x55b32557ed88[label="39"]
	Node0x55b32557eba0 -> Node0x55b32557ed88[label="40"]
	Node0x55b32557ed88 -> Node0x55b32557cac8[label="41"]
}
