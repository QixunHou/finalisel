digraph "CDFG for'func' function" {
	Node0x5565848eaa48[shape=record, label="  %xy = alloca [20 x i8], align 16"]
	Node0x5565848eb148[shape=record, label="  %0 = getelementptr inbounds [20 x i8], [20 x i8]* %xy, i64 0, i64 0"]
	Node0x5565848eb5b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #5"]
	Node0x5565848eb9e0[shape=record, label="  %call = call i32 (i64, i8*, i32, ...) bitcast (i32 (...)* @ltoa to i32 (i64, i8*, i32, ...)*)(i64 %n, i8* nonnull %0, i32 10) #5"]
	Node0x5565848ebbc0[shape=record, label="  %call2 = call i64 @strlen(i8* nonnull %0)"]
	Node0x5565848ebc98[shape=record, label="  %conv = trunc i64 %call2 to i32"]
	Node0x5565848ebd30[shape=record, label="  %cmp24 = icmp sgt i32 %conv, 1"]
	Node0x55658487d348[shape=record, label="  br i1 %cmp24, label %for.body.preheader, label %for.end"]
	Node0x5565848ebff0[shape=record, label="  %div31 = lshr i64 %call2, 1"]
	Node0x5565848ec090[shape=record, label="  %sext = shl i64 %call2, 32"]
	Node0x5565848ec120[shape=record, label="  %1 = ashr exact i64 %sext, 32"]
	Node0x5565848ec1e0[shape=record, label="  %2 = and i64 %div31, 2147483647"]
	Node0x5565848ec2e8[shape=record, label="  br label %for.body"]
	Node0x5565848ec640[shape=record, label="  %cmp = icmp ult i64 %indvars.iv.next30, %2"]
	Node0x55658487d468[shape=record, label="  br i1 %cmp, label %for.body, label %for.end"]
	Node0x5565848ec6b8[shape=record, label="  %indvars.iv29 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next30, %for.cond ]"]
	Node0x5565848ec788[shape=record, label="  %indvars.iv = phi i64 [ %1, %for.body.preheader ], [ %indvars.iv.next, %for.cond ]"]
	Node0x5565848ec898[shape=record, label="  %arrayidx = getelementptr inbounds [20 x i8], [20 x i8]* %xy, i64 0, i64 %indvars.iv29"]
	Node0x5565848ec938[shape=record, label="  %3 = load i8, i8* %arrayidx, align 1, !tbaa !2"]
	Node0x5565848ed890[shape=record, label="  %indvars.iv.next = add nsw i64 %indvars.iv, -1"]
	Node0x5565848ed918[shape=record, label="  %arrayidx6 = getelementptr inbounds [20 x i8], [20 x i8]* %xy, i64 0, i64 %indvars.iv.next"]
	Node0x5565848ebe58[shape=record, label="  %4 = load i8, i8* %arrayidx6, align 1, !tbaa !2"]
	Node0x5565848ee000[shape=record, label="  %cmp8 = icmp eq i8 %3, %4"]
	Node0x5565848ee090[shape=record, label="  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1"]
	Node0x5565848ee118[shape=record, label="  br i1 %cmp8, label %for.cond, label %for.end"]
	Node0x5565848ee168[shape=record, label="  %cmp.lcssa = phi i32 [ 1, %entry ], [ 0, %for.body ], [ 1, %for.cond ]"]
	Node0x5565848ee568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #5"]
	Node0x5565848ec538[shape=record, label="  ret i32 %cmp.lcssa"]
	Node0x5565848eaa48 -> Node0x5565848eb148
	Node0x5565848eb148 -> Node0x5565848eb5b8
	Node0x5565848eb5b8 -> Node0x5565848eb9e0
	Node0x5565848eb9e0 -> Node0x5565848ebbc0
	Node0x5565848ebbc0 -> Node0x5565848ebc98
	Node0x5565848ebc98 -> Node0x5565848ebd30
	Node0x5565848ebd30 -> Node0x55658487d348
	Node0x55658487d348 -> Node0x5565848ebff0
	Node0x55658487d348 -> Node0x5565848ee168
	Node0x5565848ebff0 -> Node0x5565848ec090
	Node0x5565848ec090 -> Node0x5565848ec120
	Node0x5565848ec120 -> Node0x5565848ec1e0
	Node0x5565848ec1e0 -> Node0x5565848ec2e8
	Node0x5565848ec2e8 -> Node0x5565848ec6b8
	Node0x5565848ec640 -> Node0x55658487d468
	Node0x55658487d468 -> Node0x5565848ec6b8
	Node0x55658487d468 -> Node0x5565848ee168
	Node0x5565848ec6b8 -> Node0x5565848ec788
	Node0x5565848ec788 -> Node0x5565848ec898
	Node0x5565848ec898 -> Node0x5565848ec938
	Node0x5565848ec938 -> Node0x5565848ed890
	Node0x5565848ed890 -> Node0x5565848ed918
	Node0x5565848ed918 -> Node0x5565848ebe58
	Node0x5565848ebe58 -> Node0x5565848ee000
	Node0x5565848ee000 -> Node0x5565848ee090
	Node0x5565848ee090 -> Node0x5565848ee118
	Node0x5565848ee118 -> Node0x5565848ec640
	Node0x5565848ee118 -> Node0x5565848ee168
	Node0x5565848ee168 -> Node0x5565848ee568
	Node0x5565848ee568 -> Node0x5565848ec538
edge [color=red]
	Node0x5565848eaa48 -> Node0x5565848eb148[label="1"]
	Node0x5565848eb148 -> Node0x5565848eb5b8[label="2"]
	Node0x5565848eb148 -> Node0x5565848eb9e0[label="3"]
	Node0x5565848eb148 -> Node0x5565848ebbc0[label="4"]
	Node0x5565848ebbc0 -> Node0x5565848ebc98[label="5"]
	Node0x5565848ebc98 -> Node0x5565848ebd30[label="6"]
	Node0x5565848ebd30 -> Node0x55658487d348[label="7"]
	Node0x5565848ebbc0 -> Node0x5565848ebff0[label="8"]
	Node0x5565848ebbc0 -> Node0x5565848ec090[label="9"]
	Node0x5565848ec090 -> Node0x5565848ec120[label="10"]
	Node0x5565848ebff0 -> Node0x5565848ec1e0[label="11"]
	Node0x5565848ee090 -> Node0x5565848ec640[label="12"]
	Node0x5565848ec1e0 -> Node0x5565848ec640[label="13"]
	Node0x5565848ec640 -> Node0x55658487d468[label="14"]
	Node0x5565848ee090 -> Node0x5565848ec6b8[label="15"]
	Node0x5565848ec120 -> Node0x5565848ec788[label="16"]
	Node0x5565848ed890 -> Node0x5565848ec788[label="17"]
	Node0x5565848eaa48 -> Node0x5565848ec898[label="18"]
	Node0x5565848ec6b8 -> Node0x5565848ec898[label="19"]
	Node0x5565848ec898 -> Node0x5565848ec938[label="20"]
	Node0x5565848ec788 -> Node0x5565848ed890[label="21"]
	Node0x5565848eaa48 -> Node0x5565848ed918[label="22"]
	Node0x5565848ed890 -> Node0x5565848ed918[label="23"]
	Node0x5565848ed918 -> Node0x5565848ebe58[label="24"]
	Node0x5565848ec938 -> Node0x5565848ee000[label="25"]
	Node0x5565848ebe58 -> Node0x5565848ee000[label="26"]
	Node0x5565848ec6b8 -> Node0x5565848ee090[label="27"]
	Node0x5565848ee000 -> Node0x5565848ee118[label="28"]
	Node0x5565848eb148 -> Node0x5565848ee568[label="29"]
	Node0x5565848ee168 -> Node0x5565848ec538[label="30"]
}
