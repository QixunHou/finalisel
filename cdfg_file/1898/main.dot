digraph "CDFG for'main' function" {
	Node0x55569fc2af58[shape=record, label="  %str = alloca [31 x i8], align 16"]
	Node0x55569fc2b038[shape=record, label="  %0 = getelementptr inbounds [31 x i8], [31 x i8]* %str, i64 0, i64 0"]
	Node0x55569fc2b288[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 31, i8* nonnull %0) #3"]
	Node0x55569fc2b9e8[shape=record, label="  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %0, i8* align 16 getelementptr inbounds ([31 x i8], [31 x i8]* @__const.main.str, i64 0, i64 0), i64 31, i1 false)"]
	Node0x55569fc2bb58[shape=record, label="  br label %while.cond"]
	Node0x55569fc2bbf8[shape=record, label="  %p.0 = phi i8* [ %0, %entry ], [ null, %if.end ]"]
	Node0x55569fc2bce0[shape=record, label="  %cmp.i = icmp eq i8* %p.0, null"]
	Node0x55569fc2c798[shape=record, label="  br i1 %cmp.i, label %entry.if.end_crit_edge.i, label %if.then.i"]
	Node0x55569fc2be18[shape=record, label="  %.pre.i = load i8*, i8** @func.q, align 8, !tbaa !2"]
	Node0x55569fc2c928[shape=record, label="  br label %if.end.i"]
	Node0x55569fc2c9a0[shape=record, label="  store i8* %p.0, i8** @func.q, align 8, !tbaa !2"]
	Node0x55569fc2c708[shape=record, label="  br label %if.end.i"]
	Node0x55569fc2c9f8[shape=record, label="  %1 = phi i8* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %p.0, %if.then.i ]"]
	Node0x55569fc2c8c8[shape=record, label="  %2 = load i8, i8* %1, align 1, !tbaa !6"]
	Node0x55569fc2cae0[shape=record, label="  %cmp1.i = icmp eq i8 %2, 0"]
	Node0x55569fc2cec8[shape=record, label="  br i1 %cmp1.i, label %while.end, label %while.cond.preheader.i"]
	Node0x55569fc2ce38[shape=record, label="  %conv521.i14 = zext i8 %2 to i64"]
	Node0x55569fc2cfa0[shape=record, label="  %memchr.bounds = icmp ugt i8 %2, 63"]
	Node0x55569fc2d040[shape=record, label="  %3 = shl i64 1, %conv521.i14"]
	Node0x55569fc2d0e0[shape=record, label="  %4 = and i64 %3, 17605070946305"]
	Node0x55569fc2d1a0[shape=record, label="  %memchr.bits = icmp eq i64 %4, 0"]
	Node0x55569fc2d210[shape=record, label="  %tobool23.i = or i1 %memchr.bounds, %memchr.bits"]
	Node0x55569fc2d488[shape=record, label="  br i1 %tobool23.i, label %while.body8.i.preheader, label %while.body.i"]
	Node0x55569fc2d670[shape=record, label="  %tobool7.i19 = icmp eq i8 %7, 0"]
	Node0x55569fc2d788[shape=record, label="  br i1 %tobool7.i19, label %if.end, label %while.body8.i.preheader"]
	Node0x55569fc2d838[shape=record, label="  %.lcssa.i23 = phi i8* [ %incdec.ptr.i, %while.cond6.preheader.i ], [ %1, %while.cond.preheader.i ]"]
	Node0x55569fc2d908[shape=record, label="  %5 = phi i8 [ %7, %while.cond6.preheader.i ], [ %2, %while.cond.preheader.i ]"]
	Node0x55569fc2da08[shape=record, label="  br label %while.body8.i"]
	Node0x55569fc2da58[shape=record, label="  %6 = phi i8* [ %incdec.ptr.i, %while.body.i ], [ %1, %while.cond.preheader.i ]"]
	Node0x55569fc2db20[shape=record, label="  %incdec.ptr.i = getelementptr inbounds i8, i8* %6, i64 1"]
	Node0x55569fc2dba0[shape=record, label="  store i8* %incdec.ptr.i, i8** @func.q, align 8, !tbaa !2"]
	Node0x55569fc2d348[shape=record, label="  %7 = load i8, i8* %incdec.ptr.i, align 1, !tbaa !6"]
	Node0x55569fc2d3f8[shape=record, label="  %conv5.i15 = zext i8 %7 to i64"]
	Node0x55569fc2df40[shape=record, label="  %memchr.bounds9 = icmp ugt i8 %7, 63"]
	Node0x55569fc2dfb0[shape=record, label="  %8 = shl i64 1, %conv5.i15"]
	Node0x55569fc2e0b0[shape=record, label="  %9 = and i64 %8, 17605070946305"]
	Node0x55569fc2e120[shape=record, label="  %memchr.bits10 = icmp eq i64 %9, 0"]
	Node0x55569fc2e190[shape=record, label="  %tobool.i = or i1 %memchr.bounds9, %memchr.bits10"]
	Node0x55569fc2e278[shape=record, label="  br i1 %tobool.i, label %while.cond6.preheader.i, label %while.body.i"]
	Node0x55569fc2e3b8[shape=record, label="  %10 = phi i8* [ %incdec.ptr9.i, %while.body8.while.cond6_crit_edge.i ], [ %.lcssa.i23, %while.body8.i.preheader ]"]
	Node0x55569fc2e518[shape=record, label="  %11 = phi i8 [ %.pre26.i, %while.body8.while.cond6_crit_edge.i ], [ %5, %while.body8.i.preheader ]"]
	Node0x55569fc2e5e0[shape=record, label="  %incdec.ptr9.i = getelementptr inbounds i8, i8* %10, i64 1"]
	Node0x55569fc2e660[shape=record, label="  store i8* %incdec.ptr9.i, i8** @func.q, align 8, !tbaa !2"]
	Node0x55569fc2d568[shape=record, label="  %conv10.i16 = zext i8 %11 to i64"]
	Node0x55569fc2e6e0[shape=record, label="  %memchr.bounds11 = icmp ugt i8 %11, 63"]
	Node0x55569fc2e750[shape=record, label="  %12 = shl i64 1, %conv10.i16"]
	Node0x55569fc2e7c0[shape=record, label="  %13 = and i64 %12, 17605070946305"]
	Node0x55569fc2e830[shape=record, label="  %memchr.bits12 = icmp eq i64 %13, 0"]
	Node0x55569fc2e8d0[shape=record, label="  %cmp12.i = or i1 %memchr.bounds11, %memchr.bits12"]
	Node0x55569fc2ea38[shape=record, label="  br i1 %cmp12.i, label %while.body8.while.cond6_crit_edge.i, label %if.then14.i"]
	Node0x55569fc2e308[shape=record, label="  %.pre26.i = load i8, i8* %incdec.ptr9.i, align 1, !tbaa !6"]
	Node0x55569fc2eae0[shape=record, label="  %tobool7.i = icmp eq i8 %.pre26.i, 0"]
	Node0x55569fc2ebb8[shape=record, label="  br i1 %tobool7.i, label %func.exit, label %while.body8.i"]
	Node0x55569fc2ec30[shape=record, label="  store i8 0, i8* %10, align 1, !tbaa !6"]
	Node0x55569fc2e9a8[shape=record, label="  br label %func.exit"]
	Node0x55569fc2ecb0[shape=record, label="  %tobool = icmp eq i8* %.lcssa.i23, null"]
	Node0x55569fc2ed38[shape=record, label="  br i1 %tobool, label %while.end, label %if.end"]
	Node0x55569fc2ed88[shape=record, label="  %.lcssa.i2426 = phi i8* [ %.lcssa.i23, %func.exit ], [ %incdec.ptr.i, %while.cond6.preheader.i ]"]
	Node0x55569fc2ef40[shape=record, label="  %puts = call i32 @puts(i8* nonnull %.lcssa.i2426)"]
	Node0x55569fc2e468[shape=record, label="  br label %while.cond"]
	Node0x55569fc2f108[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 31, i8* nonnull %0) #3"]
	Node0x55569fc2cb88[shape=record, label="  ret i32 0"]
	Node0x55569fc2af58 -> Node0x55569fc2b038
	Node0x55569fc2b038 -> Node0x55569fc2b288
	Node0x55569fc2b288 -> Node0x55569fc2b9e8
	Node0x55569fc2b9e8 -> Node0x55569fc2bb58
	Node0x55569fc2bb58 -> Node0x55569fc2bbf8
	Node0x55569fc2bbf8 -> Node0x55569fc2bce0
	Node0x55569fc2bce0 -> Node0x55569fc2c798
	Node0x55569fc2c798 -> Node0x55569fc2be18
	Node0x55569fc2c798 -> Node0x55569fc2c9a0
	Node0x55569fc2be18 -> Node0x55569fc2c928
	Node0x55569fc2c928 -> Node0x55569fc2c9f8
	Node0x55569fc2c9a0 -> Node0x55569fc2c708
	Node0x55569fc2c708 -> Node0x55569fc2c9f8
	Node0x55569fc2c9f8 -> Node0x55569fc2c8c8
	Node0x55569fc2c8c8 -> Node0x55569fc2cae0
	Node0x55569fc2cae0 -> Node0x55569fc2cec8
	Node0x55569fc2cec8 -> Node0x55569fc2f108
	Node0x55569fc2cec8 -> Node0x55569fc2ce38
	Node0x55569fc2ce38 -> Node0x55569fc2cfa0
	Node0x55569fc2cfa0 -> Node0x55569fc2d040
	Node0x55569fc2d040 -> Node0x55569fc2d0e0
	Node0x55569fc2d0e0 -> Node0x55569fc2d1a0
	Node0x55569fc2d1a0 -> Node0x55569fc2d210
	Node0x55569fc2d210 -> Node0x55569fc2d488
	Node0x55569fc2d488 -> Node0x55569fc2d838
	Node0x55569fc2d488 -> Node0x55569fc2da58
	Node0x55569fc2d670 -> Node0x55569fc2d788
	Node0x55569fc2d788 -> Node0x55569fc2ed88
	Node0x55569fc2d788 -> Node0x55569fc2d838
	Node0x55569fc2d838 -> Node0x55569fc2d908
	Node0x55569fc2d908 -> Node0x55569fc2da08
	Node0x55569fc2da08 -> Node0x55569fc2e3b8
	Node0x55569fc2da58 -> Node0x55569fc2db20
	Node0x55569fc2db20 -> Node0x55569fc2dba0
	Node0x55569fc2dba0 -> Node0x55569fc2d348
	Node0x55569fc2d348 -> Node0x55569fc2d3f8
	Node0x55569fc2d3f8 -> Node0x55569fc2df40
	Node0x55569fc2df40 -> Node0x55569fc2dfb0
	Node0x55569fc2dfb0 -> Node0x55569fc2e0b0
	Node0x55569fc2e0b0 -> Node0x55569fc2e120
	Node0x55569fc2e120 -> Node0x55569fc2e190
	Node0x55569fc2e190 -> Node0x55569fc2e278
	Node0x55569fc2e278 -> Node0x55569fc2d670
	Node0x55569fc2e278 -> Node0x55569fc2da58
	Node0x55569fc2e3b8 -> Node0x55569fc2e518
	Node0x55569fc2e518 -> Node0x55569fc2e5e0
	Node0x55569fc2e5e0 -> Node0x55569fc2e660
	Node0x55569fc2e660 -> Node0x55569fc2d568
	Node0x55569fc2d568 -> Node0x55569fc2e6e0
	Node0x55569fc2e6e0 -> Node0x55569fc2e750
	Node0x55569fc2e750 -> Node0x55569fc2e7c0
	Node0x55569fc2e7c0 -> Node0x55569fc2e830
	Node0x55569fc2e830 -> Node0x55569fc2e8d0
	Node0x55569fc2e8d0 -> Node0x55569fc2ea38
	Node0x55569fc2ea38 -> Node0x55569fc2e308
	Node0x55569fc2ea38 -> Node0x55569fc2ec30
	Node0x55569fc2e308 -> Node0x55569fc2eae0
	Node0x55569fc2eae0 -> Node0x55569fc2ebb8
	Node0x55569fc2ebb8 -> Node0x55569fc2ecb0
	Node0x55569fc2ebb8 -> Node0x55569fc2e3b8
	Node0x55569fc2ec30 -> Node0x55569fc2e9a8
	Node0x55569fc2e9a8 -> Node0x55569fc2ecb0
	Node0x55569fc2ecb0 -> Node0x55569fc2ed38
	Node0x55569fc2ed38 -> Node0x55569fc2f108
	Node0x55569fc2ed38 -> Node0x55569fc2ed88
	Node0x55569fc2ed88 -> Node0x55569fc2ef40
	Node0x55569fc2ef40 -> Node0x55569fc2e468
	Node0x55569fc2e468 -> Node0x55569fc2bbf8
	Node0x55569fc2f108 -> Node0x55569fc2cb88
edge [color=red]
	Node0x55569fc2af58 -> Node0x55569fc2b038[label="1"]
	Node0x55569fc2b038 -> Node0x55569fc2b288[label="2"]
	Node0x55569fc2b038 -> Node0x55569fc2b9e8[label="3"]
	Node0x55569fc2b038 -> Node0x55569fc2bbf8[label="4"]
	Node0x55569fc2bbf8 -> Node0x55569fc2bce0[label="5"]
	Node0x55569fc2bce0 -> Node0x55569fc2c798[label="6"]
	Node0x55569fc25318 -> Node0x55569fc2be18[label="7"]
	Node0x55569fc2bbf8 -> Node0x55569fc2c9a0[label="8"]
	Node0x55569fc2c9a0 -> Node0x55569fc25318[label="9"]
	Node0x55569fc2be18 -> Node0x55569fc2c9f8[label="10"]
	Node0x55569fc2bbf8 -> Node0x55569fc2c9f8[label="11"]
	Node0x55569fc2c9f8 -> Node0x55569fc2c8c8[label="12"]
	Node0x55569fc2c8c8 -> Node0x55569fc2cae0[label="13"]
	Node0x55569fc2cae0 -> Node0x55569fc2cec8[label="14"]
	Node0x55569fc2c8c8 -> Node0x55569fc2ce38[label="15"]
	Node0x55569fc2c8c8 -> Node0x55569fc2cfa0[label="16"]
	Node0x55569fc2ce38 -> Node0x55569fc2d040[label="17"]
	Node0x55569fc2d040 -> Node0x55569fc2d0e0[label="18"]
	Node0x55569fc2d0e0 -> Node0x55569fc2d1a0[label="19"]
	Node0x55569fc2cfa0 -> Node0x55569fc2d210[label="20"]
	Node0x55569fc2d1a0 -> Node0x55569fc2d210[label="21"]
	Node0x55569fc2d210 -> Node0x55569fc2d488[label="22"]
	Node0x55569fc2d348 -> Node0x55569fc2d670[label="23"]
	Node0x55569fc2d670 -> Node0x55569fc2d788[label="24"]
	Node0x55569fc2db20 -> Node0x55569fc2d838[label="25"]
	Node0x55569fc2c9f8 -> Node0x55569fc2d838[label="26"]
	Node0x55569fc2d348 -> Node0x55569fc2d908[label="27"]
	Node0x55569fc2c8c8 -> Node0x55569fc2d908[label="28"]
	Node0x55569fc2db20 -> Node0x55569fc2da58[label="29"]
	Node0x55569fc2c9f8 -> Node0x55569fc2da58[label="30"]
	Node0x55569fc2da58 -> Node0x55569fc2db20[label="31"]
	Node0x55569fc2db20 -> Node0x55569fc2dba0[label="32"]
	Node0x55569fc2dba0 -> Node0x55569fc25318[label="33"]
	Node0x55569fc2db20 -> Node0x55569fc2d348[label="34"]
	Node0x55569fc2d348 -> Node0x55569fc2d3f8[label="35"]
	Node0x55569fc2d348 -> Node0x55569fc2df40[label="36"]
	Node0x55569fc2d3f8 -> Node0x55569fc2dfb0[label="37"]
	Node0x55569fc2dfb0 -> Node0x55569fc2e0b0[label="38"]
	Node0x55569fc2e0b0 -> Node0x55569fc2e120[label="39"]
	Node0x55569fc2df40 -> Node0x55569fc2e190[label="40"]
	Node0x55569fc2e120 -> Node0x55569fc2e190[label="41"]
	Node0x55569fc2e190 -> Node0x55569fc2e278[label="42"]
	Node0x55569fc2e5e0 -> Node0x55569fc2e3b8[label="43"]
	Node0x55569fc2d838 -> Node0x55569fc2e3b8[label="44"]
	Node0x55569fc2e308 -> Node0x55569fc2e518[label="45"]
	Node0x55569fc2d908 -> Node0x55569fc2e518[label="46"]
	Node0x55569fc2e3b8 -> Node0x55569fc2e5e0[label="47"]
	Node0x55569fc2e5e0 -> Node0x55569fc2e660[label="48"]
	Node0x55569fc2e660 -> Node0x55569fc25318[label="49"]
	Node0x55569fc2e518 -> Node0x55569fc2d568[label="50"]
	Node0x55569fc2e518 -> Node0x55569fc2e6e0[label="51"]
	Node0x55569fc2d568 -> Node0x55569fc2e750[label="52"]
	Node0x55569fc2e750 -> Node0x55569fc2e7c0[label="53"]
	Node0x55569fc2e7c0 -> Node0x55569fc2e830[label="54"]
	Node0x55569fc2e6e0 -> Node0x55569fc2e8d0[label="55"]
	Node0x55569fc2e830 -> Node0x55569fc2e8d0[label="56"]
	Node0x55569fc2e8d0 -> Node0x55569fc2ea38[label="57"]
	Node0x55569fc2e5e0 -> Node0x55569fc2e308[label="58"]
	Node0x55569fc2e308 -> Node0x55569fc2eae0[label="59"]
	Node0x55569fc2eae0 -> Node0x55569fc2ebb8[label="60"]
	Node0x55569fc264b0 -> Node0x55569fc2ec30[label="61"]
	Node0x55569fc2ec30 -> Node0x55569fc2e3b8[label="62"]
	Node0x55569fc2d838 -> Node0x55569fc2ecb0[label="63"]
	Node0x55569fc2ecb0 -> Node0x55569fc2ed38[label="64"]
	Node0x55569fc2d838 -> Node0x55569fc2ed88[label="65"]
	Node0x55569fc2db20 -> Node0x55569fc2ed88[label="66"]
	Node0x55569fc2ed88 -> Node0x55569fc2ef40[label="67"]
	Node0x55569fc2b038 -> Node0x55569fc2f108[label="68"]
}
