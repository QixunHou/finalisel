digraph "CDFG for'main' function" {
	Node0x55ef55949988[shape=record, label="  %ch = alloca i8, align 1"]
	Node0x55ef55949b98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %ch) #4"]
	Node0x55ef5594a088[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0))"]
	Node0x55ef5594a200[shape=record, label="  %call1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0))"]
	Node0x55ef5594a4d8[shape=record, label="  %call2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %ch)"]
	Node0x55ef5594a598[shape=record, label="  %0 = load i8, i8* %ch, align 1, !tbaa !2"]
	Node0x55ef5594a638[shape=record, label="  %1 = load i8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), align 16, !tbaa !2"]
	Node0x55ef5594a6b0[shape=record, label="  %tobool9.i = icmp eq i8 %1, 0"]
	Node0x55ef5594a928[shape=record, label="  br i1 %tobool9.i, label %func.exit, label %for.body.i"]
	Node0x55ef5594aa68[shape=record, label="  %2 = phi i8 [ %3, %for.inc.i ], [ %1, %entry ]"]
	Node0x55ef5594abf8[shape=record, label="  %q.011.i = phi i8* [ %incdec.ptr2.i, %for.inc.i ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), %entry ]"]
	Node0x55ef5594ad58[shape=record, label="  %s.addr.010.i = phi i8* [ %s.addr.1.i, %for.inc.i ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), %entry ]"]
	Node0x55ef5594ae50[shape=record, label="  %cmp.i = icmp eq i8 %2, %0"]
	Node0x55ef5594b158[shape=record, label="  br i1 %cmp.i, label %for.inc.i, label %if.then.i"]
	Node0x55ef5594b1d0[shape=record, label="  %incdec.ptr.i = getelementptr inbounds i8, i8* %s.addr.010.i, i64 1"]
	Node0x55ef5594b280[shape=record, label="  store i8 %2, i8* %s.addr.010.i, align 1, !tbaa !2"]
	Node0x55ef5594b0c8[shape=record, label="  br label %for.inc.i"]
	Node0x55ef5594b2d8[shape=record, label="  %s.addr.1.i = phi i8* [ %incdec.ptr.i, %if.then.i ], [ %s.addr.010.i, %for.body.i ]"]
	Node0x55ef5594b3a0[shape=record, label="  %incdec.ptr2.i = getelementptr inbounds i8, i8* %q.011.i, i64 1"]
	Node0x55ef5594aba8[shape=record, label="  %3 = load i8, i8* %incdec.ptr2.i, align 1, !tbaa !2"]
	Node0x55ef5594b420[shape=record, label="  %tobool.i = icmp eq i8 %3, 0"]
	Node0x55ef5594b4a8[shape=record, label="  br i1 %tobool.i, label %func.exit, label %for.body.i"]
	Node0x55ef5594b518[shape=record, label="  %s.addr.0.lcssa.i = phi i8* [ getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), %entry ], [ %s.addr.1.i, %for.inc.i ]"]
	Node0x55ef5594b640[shape=record, label="  store i8 0, i8* %s.addr.0.lcssa.i, align 1, !tbaa !2"]
	Node0x55ef5594b758[shape=record, label="  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0))"]
	Node0x55ef5594b8a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %ch) #4"]
	Node0x55ef5594a9a0[shape=record, label="  ret void"]
	Node0x55ef55949988 -> Node0x55ef55949b98
	Node0x55ef55949b98 -> Node0x55ef5594a088
	Node0x55ef5594a088 -> Node0x55ef5594a200
	Node0x55ef5594a200 -> Node0x55ef5594a4d8
	Node0x55ef5594a4d8 -> Node0x55ef5594a598
	Node0x55ef5594a598 -> Node0x55ef5594a638
	Node0x55ef5594a638 -> Node0x55ef5594a6b0
	Node0x55ef5594a6b0 -> Node0x55ef5594a928
	Node0x55ef5594a928 -> Node0x55ef5594b518
	Node0x55ef5594a928 -> Node0x55ef5594aa68
	Node0x55ef5594aa68 -> Node0x55ef5594abf8
	Node0x55ef5594abf8 -> Node0x55ef5594ad58
	Node0x55ef5594ad58 -> Node0x55ef5594ae50
	Node0x55ef5594ae50 -> Node0x55ef5594b158
	Node0x55ef5594b158 -> Node0x55ef5594b2d8
	Node0x55ef5594b158 -> Node0x55ef5594b1d0
	Node0x55ef5594b1d0 -> Node0x55ef5594b280
	Node0x55ef5594b280 -> Node0x55ef5594b0c8
	Node0x55ef5594b0c8 -> Node0x55ef5594b2d8
	Node0x55ef5594b2d8 -> Node0x55ef5594b3a0
	Node0x55ef5594b3a0 -> Node0x55ef5594aba8
	Node0x55ef5594aba8 -> Node0x55ef5594b420
	Node0x55ef5594b420 -> Node0x55ef5594b4a8
	Node0x55ef5594b4a8 -> Node0x55ef5594b518
	Node0x55ef5594b4a8 -> Node0x55ef5594aa68
	Node0x55ef5594b518 -> Node0x55ef5594b640
	Node0x55ef5594b640 -> Node0x55ef5594b758
	Node0x55ef5594b758 -> Node0x55ef5594b8a8
	Node0x55ef5594b8a8 -> Node0x55ef5594a9a0
edge [color=red]
	Node0x55ef55949988 -> Node0x55ef55949b98[label="1"]
	Node0x55ef55949988 -> Node0x55ef5594a4d8[label="2"]
	Node0x55ef55949988 -> Node0x55ef5594a598[label="3"]
	Node0x55ef55949f18 -> Node0x55ef5594a638[label="4"]
	Node0x55ef5594a638 -> Node0x55ef5594a6b0[label="5"]
	Node0x55ef5594a6b0 -> Node0x55ef5594a928[label="6"]
	Node0x55ef5594aba8 -> Node0x55ef5594aa68[label="7"]
	Node0x55ef5594a638 -> Node0x55ef5594aa68[label="8"]
	Node0x55ef5594b3a0 -> Node0x55ef5594abf8[label="9"]
	Node0x55ef5594b2d8 -> Node0x55ef5594ad58[label="10"]
	Node0x55ef5594aa68 -> Node0x55ef5594ae50[label="11"]
	Node0x55ef5594a598 -> Node0x55ef5594ae50[label="12"]
	Node0x55ef5594ae50 -> Node0x55ef5594b158[label="13"]
	Node0x55ef5594ad58 -> Node0x55ef5594b1d0[label="14"]
	Node0x55ef5594aa68 -> Node0x55ef5594b280[label="15"]
	Node0x55ef5594b280 -> Node0x55ef5594ad58[label="16"]
	Node0x55ef5594b1d0 -> Node0x55ef5594b2d8[label="17"]
	Node0x55ef5594ad58 -> Node0x55ef5594b2d8[label="18"]
	Node0x55ef5594abf8 -> Node0x55ef5594b3a0[label="19"]
	Node0x55ef5594b3a0 -> Node0x55ef5594aba8[label="20"]
	Node0x55ef5594aba8 -> Node0x55ef5594b420[label="21"]
	Node0x55ef5594b420 -> Node0x55ef5594b4a8[label="22"]
	Node0x55ef5594b2d8 -> Node0x55ef5594b518[label="23"]
	Node0x55ef55947b80 -> Node0x55ef5594b640[label="24"]
	Node0x55ef5594b640 -> Node0x55ef5594b518[label="25"]
	Node0x55ef55949988 -> Node0x55ef5594b8a8[label="26"]
}
