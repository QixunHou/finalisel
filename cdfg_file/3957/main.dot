digraph "CDFG for'main' function" {
	Node0x562cc0f4ed98[shape=record, label="  %anInteger.i = alloca i32, align 4"]
	Node0x562cc0f4eb48[shape=record, label="  %0 = bitcast i32* %anInteger.i to i8*"]
	Node0x562cc0f50438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x562cc0f50510[shape=record, label="  store i32 0, i32* %anInteger.i, align 4, !tbaa !2"]
	Node0x562cc0f50590[shape=record, label="  %call.i = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #3"]
	Node0x562cc0f50698[shape=record, label="  %call1.i = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %anInteger.i) #3"]
	Node0x562cc0f50778[shape=record, label="  %1 = load i32, i32* %anInteger.i, align 4, !tbaa !2"]
	Node0x562cc0f50810[shape=record, label="  %call2.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0)) #3"]
	Node0x562cc0f50920[shape=record, label="  %call3.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #3"]
	Node0x562cc0f50a10[shape=record, label="  %conv.i = shl i32 %1, 24"]
	Node0x562cc0f50aa0[shape=record, label="  %sext.i = add i32 %conv.i, 805306368"]
	Node0x562cc0f50b30[shape=record, label="  %conv4.i = ashr exact i32 %sext.i, 24"]
	Node0x562cc0f50bc0[shape=record, label="  store i32 %conv4.i, i32* %anInteger.i, align 4, !tbaa !2"]
	Node0x562cc0f50c78[shape=record, label="  %call5.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i32 %conv4.i) #3"]
	Node0x562cc0f50de8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x562cc0f50ea8[shape=record, label="  ret i32 0"]
	Node0x562cc0f4ed98 -> Node0x562cc0f4eb48
	Node0x562cc0f4eb48 -> Node0x562cc0f50438
	Node0x562cc0f50438 -> Node0x562cc0f50510
	Node0x562cc0f50510 -> Node0x562cc0f50590
	Node0x562cc0f50590 -> Node0x562cc0f50698
	Node0x562cc0f50698 -> Node0x562cc0f50778
	Node0x562cc0f50778 -> Node0x562cc0f50810
	Node0x562cc0f50810 -> Node0x562cc0f50920
	Node0x562cc0f50920 -> Node0x562cc0f50a10
	Node0x562cc0f50a10 -> Node0x562cc0f50aa0
	Node0x562cc0f50aa0 -> Node0x562cc0f50b30
	Node0x562cc0f50b30 -> Node0x562cc0f50bc0
	Node0x562cc0f50bc0 -> Node0x562cc0f50c78
	Node0x562cc0f50c78 -> Node0x562cc0f50de8
	Node0x562cc0f50de8 -> Node0x562cc0f50ea8
edge [color=red]
	Node0x562cc0f4ed98 -> Node0x562cc0f4eb48[label="1"]
	Node0x562cc0f4eb48 -> Node0x562cc0f50438[label="2"]
	Node0x562cc0f4d450 -> Node0x562cc0f50510[label="3"]
	Node0x562cc0f50510 -> Node0x562cc0f4ed98[label="4"]
	Node0x562cc0f4ed98 -> Node0x562cc0f50698[label="5"]
	Node0x562cc0f4ed98 -> Node0x562cc0f50778[label="6"]
	Node0x562cc0f50778 -> Node0x562cc0f50a10[label="7"]
	Node0x562cc0f50a10 -> Node0x562cc0f50aa0[label="8"]
	Node0x562cc0f50aa0 -> Node0x562cc0f50b30[label="9"]
	Node0x562cc0f50b30 -> Node0x562cc0f50bc0[label="10"]
	Node0x562cc0f50bc0 -> Node0x562cc0f4ed98[label="11"]
	Node0x562cc0f50b30 -> Node0x562cc0f50c78[label="12"]
	Node0x562cc0f4eb48 -> Node0x562cc0f50de8[label="13"]
}
