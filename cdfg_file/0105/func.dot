digraph "CDFG for'func' function" {
	Node0x563de80d0648[shape=record, label="  %n = alloca i32, align 4"];
	Node0x563de80d0d08[shape=record, label="  %num = alloca [50 x i32], align 16"];
	Node0x563de80d0d88[shape=record, label="  %0 = bitcast i32* %n to i8*"];
	Node0x563de80d11e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #3"];
	Node0x563de80d12c8[shape=record, label="  %1 = bitcast [50 x i32]* %num to i8*"];
	Node0x563de80d13f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %1) #3"];
	Node0x563de80d17c0[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0))"];
	Node0x563de80d1a08[shape=record, label="  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %n)"];
	Node0x563de80d1af8[shape=record, label="  %add.ptr = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 0"];
	Node0x563de80d2198[shape=record, label="  %2 = bitcast [50 x i32]* %num to <4 x i32>*"];
	Node0x563de80d2330[shape=record, label="  store <4 x i32> <i32 1, i32 2, i32 3, i32 4>, <4 x i32>* %2, align 16, !tbaa !2"];
	Node0x563de80d3258[shape=record, label="  %add.ptr.4 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 4"];
	Node0x563de80d32f8[shape=record, label="  %3 = bitcast i32* %add.ptr.4 to <4 x i32>*"];
	Node0x563de80d3490[shape=record, label="  store <4 x i32> <i32 5, i32 6, i32 7, i32 8>, <4 x i32>* %3, align 16, !tbaa !2"];
	Node0x563de80d3b68[shape=record, label="  %add.ptr.8 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 8"];
	Node0x563de80d3c08[shape=record, label="  %4 = bitcast i32* %add.ptr.8 to <4 x i32>*"];
	Node0x563de80d3dc0[shape=record, label="  store <4 x i32> <i32 9, i32 10, i32 11, i32 12>, <4 x i32>* %4, align 16, !tbaa !2"];
	Node0x563de80d3e88[shape=record, label="  %add.ptr.12 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 12"];
	Node0x563de80d3f28[shape=record, label="  %5 = bitcast i32* %add.ptr.12 to <4 x i32>*"];
	Node0x563de80d40c0[shape=record, label="  store <4 x i32> <i32 13, i32 14, i32 15, i32 16>, <4 x i32>* %5, align 16, !tbaa !2"];
	Node0x563de80d4188[shape=record, label="  %add.ptr.16 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 16"];
	Node0x563de80d4228[shape=record, label="  %6 = bitcast i32* %add.ptr.16 to <4 x i32>*"];
	Node0x563de80d43c0[shape=record, label="  store <4 x i32> <i32 17, i32 18, i32 19, i32 20>, <4 x i32>* %6, align 16, !tbaa !2"];
	Node0x563de80d4488[shape=record, label="  %add.ptr.20 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 20"];
	Node0x563de80d4528[shape=record, label="  %7 = bitcast i32* %add.ptr.20 to <4 x i32>*"];
	Node0x563de80d46c0[shape=record, label="  store <4 x i32> <i32 21, i32 22, i32 23, i32 24>, <4 x i32>* %7, align 16, !tbaa !2"];
	Node0x563de80d4788[shape=record, label="  %add.ptr.24 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 24"];
	Node0x563de80d4828[shape=record, label="  %8 = bitcast i32* %add.ptr.24 to <4 x i32>*"];
	Node0x563de80d49c0[shape=record, label="  store <4 x i32> <i32 25, i32 26, i32 27, i32 28>, <4 x i32>* %8, align 16, !tbaa !2"];
	Node0x563de80d4a88[shape=record, label="  %add.ptr.28 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 28"];
	Node0x563de80d4cc8[shape=record, label="  %9 = bitcast i32* %add.ptr.28 to <4 x i32>*"];
	Node0x563de80d4e60[shape=record, label="  store <4 x i32> <i32 29, i32 30, i32 31, i32 32>, <4 x i32>* %9, align 16, !tbaa !2"];
	Node0x563de80d4f28[shape=record, label="  %add.ptr.32 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 32"];
	Node0x563de80d4fc8[shape=record, label="  %10 = bitcast i32* %add.ptr.32 to <4 x i32>*"];
	Node0x563de80d5160[shape=record, label="  store <4 x i32> <i32 33, i32 34, i32 35, i32 36>, <4 x i32>* %10, align 16, !tbaa !2"];
	Node0x563de80d5228[shape=record, label="  %add.ptr.36 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 36"];
	Node0x563de80d52c8[shape=record, label="  %11 = bitcast i32* %add.ptr.36 to <4 x i32>*"];
	Node0x563de80d0980[shape=record, label="  store <4 x i32> <i32 37, i32 38, i32 39, i32 40>, <4 x i32>* %11, align 16, !tbaa !2"];
	Node0x563de80d0a48[shape=record, label="  %add.ptr.40 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 40"];
	Node0x563de80d0ae8[shape=record, label="  %12 = bitcast i32* %add.ptr.40 to <4 x i32>*"];
	Node0x563de80d5f50[shape=record, label="  store <4 x i32> <i32 41, i32 42, i32 43, i32 44>, <4 x i32>* %12, align 16, !tbaa !2"];
	Node0x563de80d5fe8[shape=record, label="  %add.ptr.44 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 44"];
	Node0x563de80d6088[shape=record, label="  %13 = bitcast i32* %add.ptr.44 to <4 x i32>*"];
	Node0x563de80d6220[shape=record, label="  store <4 x i32> <i32 45, i32 46, i32 47, i32 48>, <4 x i32>* %13, align 16, !tbaa !2"];
	Node0x563de80d62e8[shape=record, label="  %add.ptr.48 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 48"];
	Node0x563de80d63d0[shape=record, label="  store i32 49, i32* %add.ptr.48, align 16, !tbaa !2"];
	Node0x563de80d6498[shape=record, label="  %add.ptr.49 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 49"];
	Node0x563de80d6580[shape=record, label="  store i32 50, i32* %add.ptr.49, align 4, !tbaa !2"];
	Node0x563de80d65e8[shape=record, label="  %14 = load i32, i32* %n, align 4, !tbaa !2"];
	Node0x563de80d66d8[shape=record, label="  br label %while.body"];
	Node0x563de80d6868[shape=record, label="  %m.041 = phi i32 [ 0, %entry ], [ %m.1, %if.end12 ]"];
	Node0x563de80d69d8[shape=record, label="  %k.040 = phi i32 [ 0, %entry ], [ %k.2, %if.end12 ]"];
	Node0x563de80d6ba8[shape=record, label="  %i.139 = phi i32 [ 0, %entry ], [ %spec.store.select, %if.end12 ]"];
	Node0x563de80d6c78[shape=record, label="  %idx.ext3 = sext i32 %i.139 to i64"];
	Node0x563de80d7028[shape=record, label="  %add.ptr4 = getelementptr inbounds [50 x i32], [50 x i32]* %num, i64 0, i64 %idx.ext3"];
	Node0x563de80d70c8[shape=record, label="  %15 = load i32, i32* %add.ptr4, align 4, !tbaa !2"];
	Node0x563de80d7140[shape=record, label="  %cmp5 = icmp ne i32 %15, 0"];
	Node0x563de80d71b8[shape=record, label="  %inc6 = zext i1 %cmp5 to i32"];
	Node0x563de80d7250[shape=record, label="  %spec.select = add nsw i32 %k.040, %inc6"];
	Node0x563de80d72f0[shape=record, label="  %cmp7 = icmp eq i32 %spec.select, 3"];
	Node0x563de8065588[shape=record, label="  br i1 %cmp7, label %if.then8, label %if.end12"];
	Node0x563de80d7460[shape=record, label="  store i32 0, i32* %add.ptr4, align 4, !tbaa !2"];
	Node0x563de80d74e0[shape=record, label="  %inc11 = add nsw i32 %m.041, 1"];
	Node0x563de80d73e8[shape=record, label="  br label %if.end12"];
	Node0x563de80d7548[shape=record, label="  %k.2 = phi i32 [ 0, %if.then8 ], [ %spec.select, %while.body ]"];
	Node0x563de80d75e8[shape=record, label="  %m.1 = phi i32 [ %inc11, %if.then8 ], [ %m.041, %while.body ]"];
	Node0x563de80d76b0[shape=record, label="  %inc13 = add nsw i32 %i.139, 1"];
	Node0x563de80d7740[shape=record, label="  %cmp14 = icmp eq i32 %inc13, %14"];
	Node0x563de80d77e8[shape=record, label="  %spec.store.select = select i1 %cmp14, i32 0, i32 %inc13"];
	Node0x563de80d7860[shape=record, label="  %cmp2 = icmp slt i32 %m.1, 49"];
	Node0x563de80d7938[shape=record, label="  br i1 %cmp2, label %while.body, label %while.cond17"];
	Node0x563de80d7988[shape=record, label="  %p.0 = phi i32* [ %incdec.ptr, %while.cond17 ], [ %add.ptr, %if.end12 ]"];
	Node0x563de80d6678[shape=record, label="  %16 = load i32, i32* %p.0, align 4, !tbaa !2"];
	Node0x563de80d8280[shape=record, label="  %cmp18 = icmp eq i32 %16, 0"];
	Node0x563de80d8340[shape=record, label="  %incdec.ptr = getelementptr inbounds i32, i32* %p.0, i64 1"];
	Node0x563de8065468[shape=record, label="  br i1 %cmp18, label %while.cond17, label %while.end20"];
	Node0x563de80d84c8[shape=record, label="  %call21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %16)"];
	Node0x563de80d8738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %1) #3"];
	Node0x563de80d8898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #3"];
	Node0x563de80d8940[shape=record, label="  ret void"];
	Node0x563de80d0648 -> Node0x563de80d0d08
	Node0x563de80d0d08 -> Node0x563de80d0d88
	Node0x563de80d0d88 -> Node0x563de80d11e8
	Node0x563de80d11e8 -> Node0x563de80d12c8
	Node0x563de80d12c8 -> Node0x563de80d13f8
	Node0x563de80d13f8 -> Node0x563de80d17c0
	Node0x563de80d17c0 -> Node0x563de80d1a08
	Node0x563de80d1a08 -> Node0x563de80d1af8
	Node0x563de80d1af8 -> Node0x563de80d2198
	Node0x563de80d2198 -> Node0x563de80d2330
	Node0x563de80d2330 -> Node0x563de80d3258
	Node0x563de80d3258 -> Node0x563de80d32f8
	Node0x563de80d32f8 -> Node0x563de80d3490
	Node0x563de80d3490 -> Node0x563de80d3b68
	Node0x563de80d3b68 -> Node0x563de80d3c08
	Node0x563de80d3c08 -> Node0x563de80d3dc0
	Node0x563de80d3dc0 -> Node0x563de80d3e88
	Node0x563de80d3e88 -> Node0x563de80d3f28
	Node0x563de80d3f28 -> Node0x563de80d40c0
	Node0x563de80d40c0 -> Node0x563de80d4188
	Node0x563de80d4188 -> Node0x563de80d4228
	Node0x563de80d4228 -> Node0x563de80d43c0
	Node0x563de80d43c0 -> Node0x563de80d4488
	Node0x563de80d4488 -> Node0x563de80d4528
	Node0x563de80d4528 -> Node0x563de80d46c0
	Node0x563de80d46c0 -> Node0x563de80d4788
	Node0x563de80d4788 -> Node0x563de80d4828
	Node0x563de80d4828 -> Node0x563de80d49c0
	Node0x563de80d49c0 -> Node0x563de80d4a88
	Node0x563de80d4a88 -> Node0x563de80d4cc8
	Node0x563de80d4cc8 -> Node0x563de80d4e60
	Node0x563de80d4e60 -> Node0x563de80d4f28
	Node0x563de80d4f28 -> Node0x563de80d4fc8
	Node0x563de80d4fc8 -> Node0x563de80d5160
	Node0x563de80d5160 -> Node0x563de80d5228
	Node0x563de80d5228 -> Node0x563de80d52c8
	Node0x563de80d52c8 -> Node0x563de80d0980
	Node0x563de80d0980 -> Node0x563de80d0a48
	Node0x563de80d0a48 -> Node0x563de80d0ae8
	Node0x563de80d0ae8 -> Node0x563de80d5f50
	Node0x563de80d5f50 -> Node0x563de80d5fe8
	Node0x563de80d5fe8 -> Node0x563de80d6088
	Node0x563de80d6088 -> Node0x563de80d6220
	Node0x563de80d6220 -> Node0x563de80d62e8
	Node0x563de80d62e8 -> Node0x563de80d63d0
	Node0x563de80d63d0 -> Node0x563de80d6498
	Node0x563de80d6498 -> Node0x563de80d6580
	Node0x563de80d6580 -> Node0x563de80d65e8
	Node0x563de80d65e8 -> Node0x563de80d66d8
	Node0x563de80d66d8 -> Node0x563de80d6868
	Node0x563de80d6868 -> Node0x563de80d69d8
	Node0x563de80d69d8 -> Node0x563de80d6ba8
	Node0x563de80d6ba8 -> Node0x563de80d6c78
	Node0x563de80d6c78 -> Node0x563de80d7028
	Node0x563de80d7028 -> Node0x563de80d70c8
	Node0x563de80d70c8 -> Node0x563de80d7140
	Node0x563de80d7140 -> Node0x563de80d71b8
	Node0x563de80d71b8 -> Node0x563de80d7250
	Node0x563de80d7250 -> Node0x563de80d72f0
	Node0x563de80d72f0 -> Node0x563de8065588
	Node0x563de8065588 -> Node0x563de80d7460
	Node0x563de8065588 -> Node0x563de80d7548
	Node0x563de80d7460 -> Node0x563de80d74e0
	Node0x563de80d74e0 -> Node0x563de80d73e8
	Node0x563de80d73e8 -> Node0x563de80d7548
	Node0x563de80d7548 -> Node0x563de80d75e8
	Node0x563de80d75e8 -> Node0x563de80d76b0
	Node0x563de80d76b0 -> Node0x563de80d7740
	Node0x563de80d7740 -> Node0x563de80d77e8
	Node0x563de80d77e8 -> Node0x563de80d7860
	Node0x563de80d7860 -> Node0x563de80d7938
	Node0x563de80d7938 -> Node0x563de80d6868
	Node0x563de80d7938 -> Node0x563de80d7988
	Node0x563de80d7988 -> Node0x563de80d6678
	Node0x563de80d6678 -> Node0x563de80d8280
	Node0x563de80d8280 -> Node0x563de80d8340
	Node0x563de80d8340 -> Node0x563de8065468
	Node0x563de8065468 -> Node0x563de80d7988
	Node0x563de8065468 -> Node0x563de80d84c8
	Node0x563de80d84c8 -> Node0x563de80d8738
	Node0x563de80d8738 -> Node0x563de80d8898
	Node0x563de80d8898 -> Node0x563de80d8940
edge [color=red]
	Node0x563de80d0648 -> Node0x563de80d0d88
	Node0x563de80d0d88 -> Node0x563de80d11e8
	Node0x563de80d0d08 -> Node0x563de80d12c8
	Node0x563de80d12c8 -> Node0x563de80d13f8
	Node0x563de80d0648 -> Node0x563de80d1a08
	Node0x563de80d0d08 -> Node0x563de80d1af8
	Node0x563de80d0d08 -> Node0x563de80d2198
	Node0x563de80d22d0 -> Node0x563de80d2330
	Node0x563de80d2330 -> Node0x563de80d2198
	Node0x563de80d0d08 -> Node0x563de80d3258
	Node0x563de80d3258 -> Node0x563de80d32f8
	Node0x563de80d3430 -> Node0x563de80d3490
	Node0x563de80d3490 -> Node0x563de80d32f8
	Node0x563de80d0d08 -> Node0x563de80d3b68
	Node0x563de80d3b68 -> Node0x563de80d3c08
	Node0x563de80d3d60 -> Node0x563de80d3dc0
	Node0x563de80d3dc0 -> Node0x563de80d3c08
	Node0x563de80d0d08 -> Node0x563de80d3e88
	Node0x563de80d3e88 -> Node0x563de80d3f28
	Node0x563de80d4060 -> Node0x563de80d40c0
	Node0x563de80d40c0 -> Node0x563de80d3f28
	Node0x563de80d0d08 -> Node0x563de80d4188
	Node0x563de80d4188 -> Node0x563de80d4228
	Node0x563de80d4360 -> Node0x563de80d43c0
	Node0x563de80d43c0 -> Node0x563de80d4228
	Node0x563de80d0d08 -> Node0x563de80d4488
	Node0x563de80d4488 -> Node0x563de80d4528
	Node0x563de80d4660 -> Node0x563de80d46c0
	Node0x563de80d46c0 -> Node0x563de80d4528
	Node0x563de80d0d08 -> Node0x563de80d4788
	Node0x563de80d4788 -> Node0x563de80d4828
	Node0x563de80d4960 -> Node0x563de80d49c0
	Node0x563de80d49c0 -> Node0x563de80d4828
	Node0x563de80d0d08 -> Node0x563de80d4a88
	Node0x563de80d4a88 -> Node0x563de80d4cc8
	Node0x563de80d4e00 -> Node0x563de80d4e60
	Node0x563de80d4e60 -> Node0x563de80d4cc8
	Node0x563de80d0d08 -> Node0x563de80d4f28
	Node0x563de80d4f28 -> Node0x563de80d4fc8
	Node0x563de80d5100 -> Node0x563de80d5160
	Node0x563de80d5160 -> Node0x563de80d4fc8
	Node0x563de80d0d08 -> Node0x563de80d5228
	Node0x563de80d5228 -> Node0x563de80d52c8
	Node0x563de80d0920 -> Node0x563de80d0980
	Node0x563de80d0980 -> Node0x563de80d52c8
	Node0x563de80d0d08 -> Node0x563de80d0a48
	Node0x563de80d0a48 -> Node0x563de80d0ae8
	Node0x563de80d0c20 -> Node0x563de80d5f50
	Node0x563de80d5f50 -> Node0x563de80d0ae8
	Node0x563de80d0d08 -> Node0x563de80d5fe8
	Node0x563de80d5fe8 -> Node0x563de80d6088
	Node0x563de80d61c0 -> Node0x563de80d6220
	Node0x563de80d6220 -> Node0x563de80d6088
	Node0x563de80d0d08 -> Node0x563de80d62e8
	Node0x563de80d6370 -> Node0x563de80d63d0
	Node0x563de80d63d0 -> Node0x563de80d62e8
	Node0x563de80d0d08 -> Node0x563de80d6498
	Node0x563de80d6520 -> Node0x563de80d6580
	Node0x563de80d6580 -> Node0x563de80d6498
	Node0x563de80d0648 -> Node0x563de80d65e8
	Node0x563de80d75e8 -> Node0x563de80d6868
	Node0x563de80d7548 -> Node0x563de80d69d8
	Node0x563de80d77e8 -> Node0x563de80d6ba8
	Node0x563de80d6ba8 -> Node0x563de80d6c78
	Node0x563de80d0d08 -> Node0x563de80d7028
	Node0x563de80d6c78 -> Node0x563de80d7028
	Node0x563de80d7028 -> Node0x563de80d70c8
	Node0x563de80d70c8 -> Node0x563de80d7140
	Node0x563de80d7140 -> Node0x563de80d71b8
	Node0x563de80d69d8 -> Node0x563de80d7250
	Node0x563de80d71b8 -> Node0x563de80d7250
	Node0x563de80d7250 -> Node0x563de80d72f0
	Node0x563de80d72f0 -> Node0x563de8065588
	Node0x563de80d6720 -> Node0x563de80d7460
	Node0x563de80d7460 -> Node0x563de80d7028
	Node0x563de80d6868 -> Node0x563de80d74e0
	Node0x563de80d7250 -> Node0x563de80d7548
	Node0x563de80d74e0 -> Node0x563de80d75e8
	Node0x563de80d6868 -> Node0x563de80d75e8
	Node0x563de80d6ba8 -> Node0x563de80d76b0
	Node0x563de80d76b0 -> Node0x563de80d7740
	Node0x563de80d65e8 -> Node0x563de80d7740
	Node0x563de80d7740 -> Node0x563de80d77e8
	Node0x563de80d76b0 -> Node0x563de80d77e8
	Node0x563de80d75e8 -> Node0x563de80d7860
	Node0x563de80d7860 -> Node0x563de80d7938
	Node0x563de80d8340 -> Node0x563de80d7988
	Node0x563de80d1af8 -> Node0x563de80d7988
	Node0x563de80d7988 -> Node0x563de80d6678
	Node0x563de80d6678 -> Node0x563de80d8280
	Node0x563de80d7988 -> Node0x563de80d8340
	Node0x563de80d8280 -> Node0x563de8065468
	Node0x563de80d6678 -> Node0x563de80d84c8
	Node0x563de80d12c8 -> Node0x563de80d8738
	Node0x563de80d0d88 -> Node0x563de80d8898
}
