digraph "CDFG for'Hold' function" {
	Node0x55568afc74f0[shape=record, label="  %cmp54 = icmp slt i32 %k, 1"]
	Node0x55568afc7738[shape=record, label="  br i1 %cmp54, label %cleanup, label %for.body.preheader"]
	Node0x55568afc7688[shape=record, label="  %0 = sext i32 %k to i64"]
	Node0x55568afc7878[shape=record, label="  br label %for.body"]
	Node0x55568afc79f8[shape=record, label="  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %if.else ]"]
	Node0x55568afc7d28[shape=record, label="  %BestTrack.055 = phi i32 [ 0, %for.body.preheader ], [ %spec.select, %if.else ]"]
	Node0x55568afc7e38[shape=record, label="  %top.i = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %H, i64 %indvars.iv, i32 1"]
	Node0x55568afc7ec8[shape=record, label="  %1 = load i32, i32* %top.i, align 4, !tbaa !2"]
	Node0x55568afc7f60[shape=record, label="  %cmp.i = icmp eq i32 %1, -1"]
	Node0x55568afc80c8[shape=record, label="  br i1 %cmp.i, label %if.then.i50, label %if.else"]
	Node0x55568afc8160[shape=record, label="  %call1.i49 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #6"]
	Node0x55568afc82a0[shape=record, label="  tail call void @exit(i32 1) #7"]
	Node0x55568afc8340[shape=record, label="  unreachable"]
	Node0x55568afc83b0[shape=record, label="  %tobool7 = icmp eq i32 %BestTrack.055, 0"]
	Node0x55568afc79a8[shape=record, label="  %2 = trunc i64 %indvars.iv to i32"]
	Node0x55568afc8468[shape=record, label="  %spec.select = select i1 %tobool7, i32 %2, i32 %BestTrack.055"]
	Node0x55568afc84e0[shape=record, label="  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1"]
	Node0x55568afc8550[shape=record, label="  %cmp = icmp slt i64 %indvars.iv, %0"]
	Node0x55568afc8648[shape=record, label="  br i1 %cmp, label %for.body, label %for.end"]
	Node0x55568afc86c0[shape=record, label="  %tobool11 = icmp eq i32 %spec.select, 0"]
	Node0x55568afc8ab8[shape=record, label="  br i1 %tobool11, label %cleanup, label %if.end13"]
	Node0x55568afc7818[shape=record, label="  %idxprom14 = sext i32 %spec.select to i64"]
	Node0x55568afc8b78[shape=record, label="  %top.i.i = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %H, i64 %idxprom14, i32 1"]
	Node0x55568afc7cd8[shape=record, label="  %3 = load i32, i32* %top.i.i, align 4, !tbaa !2"]
	Node0x55568afc8c20[shape=record, label="  %cmp.i.i = icmp eq i32 %3, 99"]
	Node0x55568afc8e28[shape=record, label="  br i1 %cmp.i.i, label %if.then.i, label %Push.exit"]
	Node0x55568afc8ec0[shape=record, label="  %call1.i = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0)) #6"]
	Node0x55568afc8ff0[shape=record, label="  tail call void @exit(i32 1) #7"]
	Node0x55568afc9090[shape=record, label="  unreachable"]
	Node0x55568afc9100[shape=record, label="  %inc.i = add nsw i32 %3, 1"]
	Node0x55568afc9170[shape=record, label="  store i32 %inc.i, i32* %top.i.i, align 4, !tbaa !2"]
	Node0x55568afc8d98[shape=record, label="  %idxprom.i = sext i32 %inc.i to i64"]
	Node0x55568afc9250[shape=record, label="  %arrayidx.i = getelementptr inbounds %struct.SeqStack, %struct.SeqStack* %H, i64 %idxprom14, i32 0, i64 %idxprom.i"]
	Node0x55568afc9300[shape=record, label="  store i32 %c, i32* %arrayidx.i, align 4, !tbaa !7"]
	Node0x55568afc9450[shape=record, label="  %call16 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i32 %c, i32 %spec.select)"]
	Node0x55568afc8038[shape=record, label="  %4 = load i32, i32* %minH, align 4, !tbaa !7"]
	Node0x55568afc9570[shape=record, label="  %cmp17 = icmp sgt i32 %4, %c"]
	Node0x55568afc56b8[shape=record, label="  br i1 %cmp17, label %if.then18, label %cleanup"]
	Node0x55568afc5730[shape=record, label="  store i32 %c, i32* %minH, align 4, !tbaa !7"]
	Node0x55568afc57b0[shape=record, label="  store i32 %spec.select, i32* %minS, align 4, !tbaa !7"]
	Node0x55568afc5628[shape=record, label="  br label %cleanup"]
	Node0x55568afc5808[shape=record, label="  %retval.0 = phi i32 [ 0, %for.end ], [ 1, %if.then18 ], [ 1, %Push.exit ], [ 0, %entry ]"]
	Node0x55568afc7478[shape=record, label="  ret i32 %retval.0"]
	Node0x55568afc74f0 -> Node0x55568afc7738
	Node0x55568afc7738 -> Node0x55568afc5808
	Node0x55568afc7738 -> Node0x55568afc7688
	Node0x55568afc7688 -> Node0x55568afc7878
	Node0x55568afc7878 -> Node0x55568afc79f8
	Node0x55568afc79f8 -> Node0x55568afc7d28
	Node0x55568afc7d28 -> Node0x55568afc7e38
	Node0x55568afc7e38 -> Node0x55568afc7ec8
	Node0x55568afc7ec8 -> Node0x55568afc7f60
	Node0x55568afc7f60 -> Node0x55568afc80c8
	Node0x55568afc80c8 -> Node0x55568afc8160
	Node0x55568afc80c8 -> Node0x55568afc83b0
	Node0x55568afc8160 -> Node0x55568afc82a0
	Node0x55568afc82a0 -> Node0x55568afc8340
	Node0x55568afc83b0 -> Node0x55568afc79a8
	Node0x55568afc79a8 -> Node0x55568afc8468
	Node0x55568afc8468 -> Node0x55568afc84e0
	Node0x55568afc84e0 -> Node0x55568afc8550
	Node0x55568afc8550 -> Node0x55568afc8648
	Node0x55568afc8648 -> Node0x55568afc79f8
	Node0x55568afc8648 -> Node0x55568afc86c0
	Node0x55568afc86c0 -> Node0x55568afc8ab8
	Node0x55568afc8ab8 -> Node0x55568afc5808
	Node0x55568afc8ab8 -> Node0x55568afc7818
	Node0x55568afc7818 -> Node0x55568afc8b78
	Node0x55568afc8b78 -> Node0x55568afc7cd8
	Node0x55568afc7cd8 -> Node0x55568afc8c20
	Node0x55568afc8c20 -> Node0x55568afc8e28
	Node0x55568afc8e28 -> Node0x55568afc8ec0
	Node0x55568afc8e28 -> Node0x55568afc9100
	Node0x55568afc8ec0 -> Node0x55568afc8ff0
	Node0x55568afc8ff0 -> Node0x55568afc9090
	Node0x55568afc9100 -> Node0x55568afc9170
	Node0x55568afc9170 -> Node0x55568afc8d98
	Node0x55568afc8d98 -> Node0x55568afc9250
	Node0x55568afc9250 -> Node0x55568afc9300
	Node0x55568afc9300 -> Node0x55568afc9450
	Node0x55568afc9450 -> Node0x55568afc8038
	Node0x55568afc8038 -> Node0x55568afc9570
	Node0x55568afc9570 -> Node0x55568afc56b8
	Node0x55568afc56b8 -> Node0x55568afc5730
	Node0x55568afc56b8 -> Node0x55568afc5808
	Node0x55568afc5730 -> Node0x55568afc57b0
	Node0x55568afc57b0 -> Node0x55568afc5628
	Node0x55568afc5628 -> Node0x55568afc5808
	Node0x55568afc5808 -> Node0x55568afc7478
edge [color=red]
	Node0x55568afc74f0 -> Node0x55568afc7738[label="1"]
	Node0x55568afc84e0 -> Node0x55568afc79f8[label="2"]
	Node0x55568afc8468 -> Node0x55568afc7d28[label="3"]
	Node0x55568afc79f8 -> Node0x55568afc7e38[label="4"]
	Node0x55568afc7e38 -> Node0x55568afc7ec8[label="5"]
	Node0x55568afc7ec8 -> Node0x55568afc7f60[label="6"]
	Node0x55568afc7f60 -> Node0x55568afc80c8[label="7"]
	Node0x55568afc7d28 -> Node0x55568afc83b0[label="8"]
	Node0x55568afc79f8 -> Node0x55568afc79a8[label="9"]
	Node0x55568afc83b0 -> Node0x55568afc8468[label="10"]
	Node0x55568afc79a8 -> Node0x55568afc8468[label="11"]
	Node0x55568afc7d28 -> Node0x55568afc8468[label="12"]
	Node0x55568afc79f8 -> Node0x55568afc84e0[label="13"]
	Node0x55568afc79f8 -> Node0x55568afc8550[label="14"]
	Node0x55568afc7688 -> Node0x55568afc8550[label="15"]
	Node0x55568afc8550 -> Node0x55568afc8648[label="16"]
	Node0x55568afc8468 -> Node0x55568afc86c0[label="17"]
	Node0x55568afc86c0 -> Node0x55568afc8ab8[label="18"]
	Node0x55568afc8468 -> Node0x55568afc7818[label="19"]
	Node0x55568afc7818 -> Node0x55568afc8b78[label="20"]
	Node0x55568afc8b78 -> Node0x55568afc7cd8[label="21"]
	Node0x55568afc7cd8 -> Node0x55568afc8c20[label="22"]
	Node0x55568afc8c20 -> Node0x55568afc8e28[label="23"]
	Node0x55568afc7cd8 -> Node0x55568afc9100[label="24"]
	Node0x55568afc9100 -> Node0x55568afc9170[label="25"]
	Node0x55568afc9170 -> Node0x55568afc8b78[label="26"]
	Node0x55568afc9100 -> Node0x55568afc8d98[label="27"]
	Node0x55568afc7818 -> Node0x55568afc9250[label="28"]
	Node0x55568afc8d98 -> Node0x55568afc9250[label="29"]
	Node0x55568afc71c0 -> Node0x55568afc9300[label="30"]
	Node0x55568afc9300 -> Node0x55568afc9250[label="31"]
	Node0x55568afc8468 -> Node0x55568afc9450[label="32"]
	Node0x55568afc71e8 -> Node0x55568afc8038[label="33"]
	Node0x55568afc8038 -> Node0x55568afc9570[label="34"]
	Node0x55568afc9570 -> Node0x55568afc56b8[label="35"]
	Node0x55568afc71c0 -> Node0x55568afc5730[label="36"]
	Node0x55568afc5730 -> Node0x55568afc71e8[label="37"]
	Node0x55568afc8468 -> Node0x55568afc57b0[label="38"]
	Node0x55568afc57b0 -> Node0x55568afc7210[label="39"]
	Node0x55568afc5808 -> Node0x55568afc7478[label="40"]
}
