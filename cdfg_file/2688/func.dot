digraph "CDFG for'func' function" {
	Node0x5587966b1678[shape=record, label="  %0 = load i8, i8* %s, align 1, !tbaa !2"]
	Node0x5587966b2be0[shape=record, label="  %tobool9 = icmp eq i8 %0, 0"]
	Node0x55879663adb8[shape=record, label="  br i1 %tobool9, label %for.end, label %for.body"]
	Node0x5587966b2ed8[shape=record, label="  %1 = phi i8 [ %2, %for.inc ], [ %0, %entry ]"]
	Node0x5587966b3058[shape=record, label="  %q.011 = phi i8* [ %incdec.ptr2, %for.inc ], [ %s, %entry ]"]
	Node0x5587966b31b8[shape=record, label="  %s.addr.010 = phi i8* [ %s.addr.1, %for.inc ], [ %s, %entry ]"]
	Node0x5587966b3298[shape=record, label="  %conv = sext i8 %1 to i32"]
	Node0x5587966b3330[shape=record, label="  %cmp = icmp eq i32 %conv, %c"]
	Node0x558796646228[shape=record, label="  br i1 %cmp, label %for.inc, label %if.then"]
	Node0x5587966b34c0[shape=record, label="  %incdec.ptr = getelementptr inbounds i8, i8* %s.addr.010, i64 1"]
	Node0x5587966b3710[shape=record, label="  store i8 %1, i8* %s.addr.010, align 1, !tbaa !2"]
	Node0x5587966b3418[shape=record, label="  br label %for.inc"]
	Node0x5587966b3d78[shape=record, label="  %s.addr.1 = phi i8* [ %incdec.ptr, %if.then ], [ %s.addr.010, %for.body ]"]
	Node0x5587966b3e40[shape=record, label="  %incdec.ptr2 = getelementptr inbounds i8, i8* %q.011, i64 1"]
	Node0x5587966b3008[shape=record, label="  %2 = load i8, i8* %incdec.ptr2, align 1, !tbaa !2"]
	Node0x5587966b3ec0[shape=record, label="  %tobool = icmp eq i8 %2, 0"]
	Node0x558796646348[shape=record, label="  br i1 %tobool, label %for.end, label %for.body"]
	Node0x5587966b3f08[shape=record, label="  %s.addr.0.lcssa = phi i8* [ %s, %entry ], [ %s.addr.1, %for.inc ]"]
	Node0x5587966b3fd0[shape=record, label="  store i8 0, i8* %s.addr.0.lcssa, align 1, !tbaa !2"]
	Node0x5587966b2cc8[shape=record, label="  ret i32 undef"]
	Node0x5587966b1678 -> Node0x5587966b2be0
	Node0x5587966b2be0 -> Node0x55879663adb8
	Node0x55879663adb8 -> Node0x5587966b3f08
	Node0x55879663adb8 -> Node0x5587966b2ed8
	Node0x5587966b2ed8 -> Node0x5587966b3058
	Node0x5587966b3058 -> Node0x5587966b31b8
	Node0x5587966b31b8 -> Node0x5587966b3298
	Node0x5587966b3298 -> Node0x5587966b3330
	Node0x5587966b3330 -> Node0x558796646228
	Node0x558796646228 -> Node0x5587966b3d78
	Node0x558796646228 -> Node0x5587966b34c0
	Node0x5587966b34c0 -> Node0x5587966b3710
	Node0x5587966b3710 -> Node0x5587966b3418
	Node0x5587966b3418 -> Node0x5587966b3d78
	Node0x5587966b3d78 -> Node0x5587966b3e40
	Node0x5587966b3e40 -> Node0x5587966b3008
	Node0x5587966b3008 -> Node0x5587966b3ec0
	Node0x5587966b3ec0 -> Node0x558796646348
	Node0x558796646348 -> Node0x5587966b3f08
	Node0x558796646348 -> Node0x5587966b2ed8
	Node0x5587966b3f08 -> Node0x5587966b3fd0
	Node0x5587966b3fd0 -> Node0x5587966b2cc8
edge [color=red]
	Node0x5587966b1490 -> Node0x5587966b1678[label="1"]
	Node0x5587966b1678 -> Node0x5587966b2be0[label="2"]
	Node0x5587966b2be0 -> Node0x55879663adb8[label="3"]
	Node0x5587966b3008 -> Node0x5587966b2ed8[label="4"]
	Node0x5587966b1678 -> Node0x5587966b2ed8[label="5"]
	Node0x5587966b3e40 -> Node0x5587966b3058[label="6"]
	Node0x5587966b3d78 -> Node0x5587966b31b8[label="7"]
	Node0x5587966b2ed8 -> Node0x5587966b3298[label="8"]
	Node0x5587966b3298 -> Node0x5587966b3330[label="9"]
	Node0x5587966b3330 -> Node0x558796646228[label="10"]
	Node0x5587966b31b8 -> Node0x5587966b34c0[label="11"]
	Node0x5587966b2ed8 -> Node0x5587966b3710[label="12"]
	Node0x5587966b3710 -> Node0x5587966b31b8[label="13"]
	Node0x5587966b34c0 -> Node0x5587966b3d78[label="14"]
	Node0x5587966b31b8 -> Node0x5587966b3d78[label="15"]
	Node0x5587966b3058 -> Node0x5587966b3e40[label="16"]
	Node0x5587966b3e40 -> Node0x5587966b3008[label="17"]
	Node0x5587966b3008 -> Node0x5587966b3ec0[label="18"]
	Node0x5587966b3ec0 -> Node0x558796646348[label="19"]
	Node0x5587966b3d78 -> Node0x5587966b3f08[label="20"]
	Node0x5587966b2b80 -> Node0x5587966b3fd0[label="21"]
	Node0x5587966b3fd0 -> Node0x5587966b3f08[label="22"]
}
