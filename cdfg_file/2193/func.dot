digraph "CDFG for'func' function" {
	Node0x55873c659100[shape=record, label="  %sub = add i32 %n, -1"]
	Node0x55873c6591a0[shape=record, label="  %cmp43 = icmp sgt i32 %sub, 0"]
	Node0x55873c5e3c98[shape=record, label="  br i1 %cmp43, label %for.cond1.preheader, label %for.end21"]
	Node0x55873c6594c8[shape=record, label="  %i.044 = phi i32 [ %inc20, %for.inc19 ], [ 0, %entry ]"]
	Node0x55873c6595b0[shape=record, label="  %0 = sub i32 %sub, %i.044"]
	Node0x55873c659628[shape=record, label="  %1 = zext i32 %0 to i64"]
	Node0x55873c6596c0[shape=record, label="  %2 = xor i32 %i.044, -1"]
	Node0x55873c659760[shape=record, label="  %sub3 = add i32 %2, %n"]
	Node0x55873c6597d0[shape=record, label="  %cmp441 = icmp sgt i32 %sub3, 0"]
	Node0x55873c5e3db8[shape=record, label="  br i1 %cmp441, label %for.body5.preheader, label %for.inc19"]
	Node0x55873c6598d8[shape=record, label="  %.pre = load i32, i32* %a, align 4, !tbaa !2"]
	Node0x55873c65a9c0[shape=record, label="  %xtraiter = and i64 %1, 1"]
	Node0x55873c65aa60[shape=record, label="  %3 = icmp eq i32 %0, 1"]
	Node0x55873c5ef348[shape=record, label="  br i1 %3, label %for.inc19.loopexit.unr-lcssa, label %for.body5.preheader.new"]
	Node0x55873c65ad20[shape=record, label="  %unroll_iter = sub nsw i64 %1, %xtraiter"]
	Node0x55873c65adf8[shape=record, label="  br label %for.body5"]
	Node0x55873c65af08[shape=record, label="  %4 = phi i32 [ %.pre, %for.body5.preheader.new ], [ %9, %for.inc.1 ]"]
	Node0x55873c65b0e8[shape=record, label="  %indvars.iv = phi i64 [ 0, %for.body5.preheader.new ], [ %indvars.iv.next.1, %for.inc.1 ]"]
	Node0x55873c65b248[shape=record, label="  %niter = phi i64 [ %unroll_iter, %for.body5.preheader.new ], [ %niter.nsub.1, %for.inc.1 ]"]
	Node0x55873c65b330[shape=record, label="  %indvars.iv.next = or i64 %indvars.iv, 1"]
	Node0x55873c65b400[shape=record, label="  %arrayidx7 = getelementptr inbounds i32, i32* %a, i64 %indvars.iv.next"]
	Node0x55873c65b468[shape=record, label="  %5 = load i32, i32* %arrayidx7, align 4, !tbaa !2"]
	Node0x55873c65baf0[shape=record, label="  %cmp8 = icmp sgt i32 %4, %5"]
	Node0x55873c5ef468[shape=record, label="  br i1 %cmp8, label %if.then, label %for.inc"]
	Node0x55873c65c040[shape=record, label="  %arrayidx = getelementptr inbounds i32, i32* %a, i64 %indvars.iv"]
	Node0x55873c65c0f0[shape=record, label="  store i32 %5, i32* %arrayidx, align 4, !tbaa !2"]
	Node0x55873c65c170[shape=record, label="  store i32 %4, i32* %arrayidx7, align 4, !tbaa !2"]
	Node0x55873c65bef8[shape=record, label="  br label %for.inc"]
	Node0x55873c65c1c8[shape=record, label="  %6 = phi i32 [ %5, %for.body5 ], [ %4, %if.then ]"]
	Node0x55873c65c2f0[shape=record, label="  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2"]
	Node0x55873c65c390[shape=record, label="  %arrayidx7.1 = getelementptr inbounds i32, i32* %a, i64 %indvars.iv.next.1"]
	Node0x55873c65b098[shape=record, label="  %7 = load i32, i32* %arrayidx7.1, align 4, !tbaa !2"]
	Node0x55873c65c410[shape=record, label="  %cmp8.1 = icmp sgt i32 %6, %7"]
	Node0x55873c5ef588[shape=record, label="  br i1 %cmp8.1, label %if.then.1, label %for.inc.1"]
	Node0x55873c65c4d8[shape=record, label="  %.unr = phi i32 [ %.pre, %for.body5.preheader ], [ %9, %for.inc.1 ]"]
	Node0x55873c65c598[shape=record, label="  %indvars.iv.unr = phi i64 [ 0, %for.body5.preheader ], [ %indvars.iv.next.1, %for.inc.1 ]"]
	Node0x55873c65c660[shape=record, label="  %lcmp.mod = icmp eq i64 %xtraiter, 0"]
	Node0x55873c65c768[shape=record, label="  br i1 %lcmp.mod, label %for.inc19, label %for.body5.epil"]
	Node0x55873c65c7e0[shape=record, label="  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.unr, 1"]
	Node0x55873c65c8e0[shape=record, label="  %arrayidx7.epil = getelementptr inbounds i32, i32* %a, i64 %indvars.iv.next.epil"]
	Node0x55873c65ab78[shape=record, label="  %8 = load i32, i32* %arrayidx7.epil, align 4, !tbaa !2"]
	Node0x55873c65c9f0[shape=record, label="  %cmp8.epil = icmp sgt i32 %.unr, %8"]
	Node0x55873c65cb08[shape=record, label="  br i1 %cmp8.epil, label %if.then.epil, label %for.inc19"]
	Node0x55873c65cb80[shape=record, label="  %arrayidx.epil = getelementptr inbounds i32, i32* %a, i64 %indvars.iv.unr"]
	Node0x55873c65cc00[shape=record, label="  store i32 %8, i32* %arrayidx.epil, align 4, !tbaa !2"]
	Node0x55873c65cc80[shape=record, label="  store i32 %.unr, i32* %arrayidx7.epil, align 4, !tbaa !2"]
	Node0x55873c65ca78[shape=record, label="  br label %for.inc19"]
	Node0x55873c65cd00[shape=record, label="  %inc20 = add nuw nsw i32 %i.044, 1"]
	Node0x55873c65cd70[shape=record, label="  %exitcond47 = icmp eq i32 %inc20, %sub"]
	Node0x55873c65ce58[shape=record, label="  br i1 %exitcond47, label %for.end21, label %for.cond1.preheader"]
	Node0x55873c659338[shape=record, label="  ret i32 undef"]
	Node0x55873c65d300[shape=record, label="  %arrayidx.1 = getelementptr inbounds i32, i32* %a, i64 %indvars.iv.next"]
	Node0x55873c65d380[shape=record, label="  store i32 %7, i32* %arrayidx.1, align 4, !tbaa !2"]
	Node0x55873c65d400[shape=record, label="  store i32 %6, i32* %arrayidx7.1, align 4, !tbaa !2"]
	Node0x55873c65bfc8[shape=record, label="  br label %for.inc.1"]
	Node0x55873c65d458[shape=record, label="  %9 = phi i32 [ %7, %for.inc ], [ %6, %if.then.1 ]"]
	Node0x55873c65d520[shape=record, label="  %niter.nsub.1 = add i64 %niter, -2"]
	Node0x55873c65d590[shape=record, label="  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0"]
	Node0x55873c65de58[shape=record, label="  br i1 %niter.ncmp.1, label %for.inc19.loopexit.unr-lcssa, label %for.body5"]
	Node0x55873c659100 -> Node0x55873c6591a0
	Node0x55873c6591a0 -> Node0x55873c5e3c98
	Node0x55873c5e3c98 -> Node0x55873c6594c8
	Node0x55873c5e3c98 -> Node0x55873c659338
	Node0x55873c6594c8 -> Node0x55873c6595b0
	Node0x55873c6595b0 -> Node0x55873c659628
	Node0x55873c659628 -> Node0x55873c6596c0
	Node0x55873c6596c0 -> Node0x55873c659760
	Node0x55873c659760 -> Node0x55873c6597d0
	Node0x55873c6597d0 -> Node0x55873c5e3db8
	Node0x55873c5e3db8 -> Node0x55873c6598d8
	Node0x55873c5e3db8 -> Node0x55873c65cd00
	Node0x55873c6598d8 -> Node0x55873c65a9c0
	Node0x55873c65a9c0 -> Node0x55873c65aa60
	Node0x55873c65aa60 -> Node0x55873c5ef348
	Node0x55873c5ef348 -> Node0x55873c65c4d8
	Node0x55873c5ef348 -> Node0x55873c65ad20
	Node0x55873c65ad20 -> Node0x55873c65adf8
	Node0x55873c65adf8 -> Node0x55873c65af08
	Node0x55873c65af08 -> Node0x55873c65b0e8
	Node0x55873c65b0e8 -> Node0x55873c65b248
	Node0x55873c65b248 -> Node0x55873c65b330
	Node0x55873c65b330 -> Node0x55873c65b400
	Node0x55873c65b400 -> Node0x55873c65b468
	Node0x55873c65b468 -> Node0x55873c65baf0
	Node0x55873c65baf0 -> Node0x55873c5ef468
	Node0x55873c5ef468 -> Node0x55873c65c040
	Node0x55873c5ef468 -> Node0x55873c65c1c8
	Node0x55873c65c040 -> Node0x55873c65c0f0
	Node0x55873c65c0f0 -> Node0x55873c65c170
	Node0x55873c65c170 -> Node0x55873c65bef8
	Node0x55873c65bef8 -> Node0x55873c65c1c8
	Node0x55873c65c1c8 -> Node0x55873c65c2f0
	Node0x55873c65c2f0 -> Node0x55873c65c390
	Node0x55873c65c390 -> Node0x55873c65b098
	Node0x55873c65b098 -> Node0x55873c65c410
	Node0x55873c65c410 -> Node0x55873c5ef588
	Node0x55873c5ef588 -> Node0x55873c65d300
	Node0x55873c5ef588 -> Node0x55873c65d458
	Node0x55873c65c4d8 -> Node0x55873c65c598
	Node0x55873c65c598 -> Node0x55873c65c660
	Node0x55873c65c660 -> Node0x55873c65c768
	Node0x55873c65c768 -> Node0x55873c65cd00
	Node0x55873c65c768 -> Node0x55873c65c7e0
	Node0x55873c65c7e0 -> Node0x55873c65c8e0
	Node0x55873c65c8e0 -> Node0x55873c65ab78
	Node0x55873c65ab78 -> Node0x55873c65c9f0
	Node0x55873c65c9f0 -> Node0x55873c65cb08
	Node0x55873c65cb08 -> Node0x55873c65cb80
	Node0x55873c65cb08 -> Node0x55873c65cd00
	Node0x55873c65cb80 -> Node0x55873c65cc00
	Node0x55873c65cc00 -> Node0x55873c65cc80
	Node0x55873c65cc80 -> Node0x55873c65ca78
	Node0x55873c65ca78 -> Node0x55873c65cd00
	Node0x55873c65cd00 -> Node0x55873c65cd70
	Node0x55873c65cd70 -> Node0x55873c65ce58
	Node0x55873c65ce58 -> Node0x55873c659338
	Node0x55873c65ce58 -> Node0x55873c6594c8
	Node0x55873c65d300 -> Node0x55873c65d380
	Node0x55873c65d380 -> Node0x55873c65d400
	Node0x55873c65d400 -> Node0x55873c65bfc8
	Node0x55873c65bfc8 -> Node0x55873c65d458
	Node0x55873c65d458 -> Node0x55873c65d520
	Node0x55873c65d520 -> Node0x55873c65d590
	Node0x55873c65d590 -> Node0x55873c65de58
	Node0x55873c65de58 -> Node0x55873c65c4d8
	Node0x55873c65de58 -> Node0x55873c65af08
edge [color=red]
	Node0x55873c659100 -> Node0x55873c6591a0[label="1"]
	Node0x55873c6591a0 -> Node0x55873c5e3c98[label="2"]
	Node0x55873c65cd00 -> Node0x55873c6594c8[label="3"]
	Node0x55873c659100 -> Node0x55873c6595b0[label="4"]
	Node0x55873c6594c8 -> Node0x55873c6595b0[label="5"]
	Node0x55873c6595b0 -> Node0x55873c659628[label="6"]
	Node0x55873c6594c8 -> Node0x55873c6596c0[label="7"]
	Node0x55873c6596c0 -> Node0x55873c659760[label="8"]
	Node0x55873c659760 -> Node0x55873c6597d0[label="9"]
	Node0x55873c6597d0 -> Node0x55873c5e3db8[label="10"]
	Node0x55873c658e70 -> Node0x55873c6598d8[label="11"]
	Node0x55873c659628 -> Node0x55873c65a9c0[label="12"]
	Node0x55873c6595b0 -> Node0x55873c65aa60[label="13"]
	Node0x55873c65aa60 -> Node0x55873c5ef348[label="14"]
	Node0x55873c659628 -> Node0x55873c65ad20[label="15"]
	Node0x55873c65a9c0 -> Node0x55873c65ad20[label="16"]
	Node0x55873c6598d8 -> Node0x55873c65af08[label="17"]
	Node0x55873c65d458 -> Node0x55873c65af08[label="18"]
	Node0x55873c65c2f0 -> Node0x55873c65b0e8[label="19"]
	Node0x55873c65ad20 -> Node0x55873c65b248[label="20"]
	Node0x55873c65d520 -> Node0x55873c65b248[label="21"]
	Node0x55873c65b0e8 -> Node0x55873c65b330[label="22"]
	Node0x55873c65b330 -> Node0x55873c65b400[label="23"]
	Node0x55873c65b400 -> Node0x55873c65b468[label="24"]
	Node0x55873c65af08 -> Node0x55873c65baf0[label="25"]
	Node0x55873c65b468 -> Node0x55873c65baf0[label="26"]
	Node0x55873c65baf0 -> Node0x55873c5ef468[label="27"]
	Node0x55873c65b0e8 -> Node0x55873c65c040[label="28"]
	Node0x55873c65b468 -> Node0x55873c65c0f0[label="29"]
	Node0x55873c65c0f0 -> Node0x55873c65c040[label="30"]
	Node0x55873c65af08 -> Node0x55873c65c170[label="31"]
	Node0x55873c65c170 -> Node0x55873c65b400[label="32"]
	Node0x55873c65b468 -> Node0x55873c65c1c8[label="33"]
	Node0x55873c65af08 -> Node0x55873c65c1c8[label="34"]
	Node0x55873c65b0e8 -> Node0x55873c65c2f0[label="35"]
	Node0x55873c65c2f0 -> Node0x55873c65c390[label="36"]
	Node0x55873c65c390 -> Node0x55873c65b098[label="37"]
	Node0x55873c65c1c8 -> Node0x55873c65c410[label="38"]
	Node0x55873c65b098 -> Node0x55873c65c410[label="39"]
	Node0x55873c65c410 -> Node0x55873c5ef588[label="40"]
	Node0x55873c6598d8 -> Node0x55873c65c4d8[label="41"]
	Node0x55873c65d458 -> Node0x55873c65c4d8[label="42"]
	Node0x55873c65c2f0 -> Node0x55873c65c598[label="43"]
	Node0x55873c65a9c0 -> Node0x55873c65c660[label="44"]
	Node0x55873c65c660 -> Node0x55873c65c768[label="45"]
	Node0x55873c65c598 -> Node0x55873c65c7e0[label="46"]
	Node0x55873c65c7e0 -> Node0x55873c65c8e0[label="47"]
	Node0x55873c65c8e0 -> Node0x55873c65ab78[label="48"]
	Node0x55873c65c4d8 -> Node0x55873c65c9f0[label="49"]
	Node0x55873c65ab78 -> Node0x55873c65c9f0[label="50"]
	Node0x55873c65c9f0 -> Node0x55873c65cb08[label="51"]
	Node0x55873c65c598 -> Node0x55873c65cb80[label="52"]
	Node0x55873c65ab78 -> Node0x55873c65cc00[label="53"]
	Node0x55873c65cc00 -> Node0x55873c65cb80[label="54"]
	Node0x55873c65c4d8 -> Node0x55873c65cc80[label="55"]
	Node0x55873c65cc80 -> Node0x55873c65c8e0[label="56"]
	Node0x55873c6594c8 -> Node0x55873c65cd00[label="57"]
	Node0x55873c65cd00 -> Node0x55873c65cd70[label="58"]
	Node0x55873c659100 -> Node0x55873c65cd70[label="59"]
	Node0x55873c65cd70 -> Node0x55873c65ce58[label="60"]
	Node0x55873c65b330 -> Node0x55873c65d300[label="61"]
	Node0x55873c65b098 -> Node0x55873c65d380[label="62"]
	Node0x55873c65d380 -> Node0x55873c65d300[label="63"]
	Node0x55873c65c1c8 -> Node0x55873c65d400[label="64"]
	Node0x55873c65d400 -> Node0x55873c65c390[label="65"]
	Node0x55873c65b098 -> Node0x55873c65d458[label="66"]
	Node0x55873c65c1c8 -> Node0x55873c65d458[label="67"]
	Node0x55873c65b248 -> Node0x55873c65d520[label="68"]
	Node0x55873c65d520 -> Node0x55873c65d590[label="69"]
	Node0x55873c65d590 -> Node0x55873c65de58[label="70"]
}
