digraph "CDFG for'func' function" {
	Node0x55e237600c98[shape=record, label="  %anInteger = alloca i32, align 4"];
	Node0x55e237601368[shape=record, label="  %0 = bitcast i32* %anInteger to i8*"];
	Node0x55e2376017c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #3"];
	Node0x55e2376018c0[shape=record, label="  store i32 0, i32* %anInteger, align 4, !tbaa !2"];
	Node0x55e237602b40[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0))"];
	Node0x55e237602da8[shape=record, label="  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %anInteger)"];
	Node0x55e237602e68[shape=record, label="  %1 = load i32, i32* %anInteger, align 4, !tbaa !2"];
	Node0x55e237603590[shape=record, label="  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0))"];
	Node0x55e237603700[shape=record, label="  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0))"];
	Node0x55e237603800[shape=record, label="  %conv = shl i32 %1, 24"];
	Node0x55e2376038c0[shape=record, label="  %sext = add i32 %conv, 805306368"];
	Node0x55e237603950[shape=record, label="  %conv4 = ashr exact i32 %sext, 24"];
	Node0x55e2376039e0[shape=record, label="  store i32 %conv4, i32* %anInteger, align 4, !tbaa !2"];
	Node0x55e237603b18[shape=record, label="  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i32 %conv4)"];
	Node0x55e237603d58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #3"];
	Node0x55e237603e18[shape=record, label="  ret i32 0"];
	Node0x55e237600c98 -> Node0x55e237601368
	Node0x55e237601368 -> Node0x55e2376017c8
	Node0x55e2376017c8 -> Node0x55e2376018c0
	Node0x55e2376018c0 -> Node0x55e237602b40
	Node0x55e237602b40 -> Node0x55e237602da8
	Node0x55e237602da8 -> Node0x55e237602e68
	Node0x55e237602e68 -> Node0x55e237603590
	Node0x55e237603590 -> Node0x55e237603700
	Node0x55e237603700 -> Node0x55e237603800
	Node0x55e237603800 -> Node0x55e2376038c0
	Node0x55e2376038c0 -> Node0x55e237603950
	Node0x55e237603950 -> Node0x55e2376039e0
	Node0x55e2376039e0 -> Node0x55e237603b18
	Node0x55e237603b18 -> Node0x55e237603d58
	Node0x55e237603d58 -> Node0x55e237603e18
edge [color=red]
	Node0x55e237600c98 -> Node0x55e237601368
	Node0x55e237601368 -> Node0x55e2376017c8
	Node0x55e2376013d0 -> Node0x55e2376018c0
	Node0x55e2376018c0 -> Node0x55e237600c98
	Node0x55e237600c98 -> Node0x55e237602da8
	Node0x55e237600c98 -> Node0x55e237602e68
	Node0x55e237602e68 -> Node0x55e237603800
	Node0x55e237603800 -> Node0x55e2376038c0
	Node0x55e2376038c0 -> Node0x55e237603950
	Node0x55e237603950 -> Node0x55e2376039e0
	Node0x55e2376039e0 -> Node0x55e237600c98
	Node0x55e237603950 -> Node0x55e237603b18
	Node0x55e237601368 -> Node0x55e237603d58
}
