digraph "CDFG for'printint' function" {
	Node0x5610bf73eac8[shape=record, label="  %next = getelementptr inbounds %struct.node, %struct.node* %s, i64 0, i32 1"]
	Node0x5610bf7341f8[shape=record, label="  %0 = load %struct.node*, %struct.node** %next, align 8, !tbaa !2"]
	Node0x5610bf73eb88[shape=record, label="  %data = getelementptr inbounds %struct.node, %struct.node* %0, i64 0, i32 0"]
	Node0x5610bf73ec18[shape=record, label="  %1 = load i32, i32* %data, align 8, !tbaa !8"]
	Node0x5610bf73ecb0[shape=record, label="  %cmp = icmp eq i32 %1, -1"]
	Node0x5610bf73eeb8[shape=record, label="  br i1 %cmp, label %if.end15, label %if.then"]
	Node0x5610bf73ef50[shape=record, label="  tail call void @printint(%struct.node* %0)"]
	Node0x5610bf73ee28[shape=record, label="  %2 = load %struct.node*, %struct.node** %next, align 8, !tbaa !2"]
	Node0x5610bf73f068[shape=record, label="  %next3 = getelementptr inbounds %struct.node, %struct.node* %2, i64 0, i32 1"]
	Node0x5610bf73f0d8[shape=record, label="  %3 = load %struct.node*, %struct.node** %next3, align 8, !tbaa !2"]
	Node0x5610bf73f168[shape=record, label="  %data4 = getelementptr inbounds %struct.node, %struct.node* %3, i64 0, i32 0"]
	Node0x5610bf73f1d8[shape=record, label="  %4 = load i32, i32* %data4, align 8, !tbaa !8"]
	Node0x5610bf73f2a0[shape=record, label="  %cmp5 = icmp eq i32 %4, -1"]
	Node0x5610bf73f348[shape=record, label="  %data8 = getelementptr inbounds %struct.node, %struct.node* %2, i64 0, i32 0"]
	Node0x5610bf73f3d8[shape=record, label="  %5 = load i32, i32* %data8, align 8, !tbaa !8"]
	Node0x5610bf73f768[shape=record, label="  br i1 %cmp5, label %if.then6, label %for.body.preheader"]
	Node0x5610bf73f7e0[shape=record, label="  %rem = srem i32 %5, 10000"]
	Node0x5610bf73f850[shape=record, label="  %div12 = sdiv i32 %rem, 1000"]
	Node0x5610bf73f8f0[shape=record, label="  %add = add nsw i32 %div12, 48"]
	Node0x5610bf73e948[shape=record, label="  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !9"]
	Node0x5610bf73f9f8[shape=record, label="  %call.i = tail call i32 @_IO_putc(i32 %add, %struct._IO_FILE* %6) #3"]
	Node0x5610bf73fab8[shape=record, label="  %7 = load %struct.node*, %struct.node** %next, align 8, !tbaa !2"]
	Node0x5610bf73fb48[shape=record, label="  %data11.1 = getelementptr inbounds %struct.node, %struct.node* %7, i64 0, i32 0"]
	Node0x5610bf73fbe8[shape=record, label="  %8 = load i32, i32* %data11.1, align 8, !tbaa !8"]
	Node0x5610bf73fcf0[shape=record, label="  %rem.1 = srem i32 %8, 1000"]
	Node0x5610bf73fd60[shape=record, label="  %div12.1 = sdiv i32 %rem.1, 100"]
	Node0x5610bf73fdf0[shape=record, label="  %add.1 = add nsw i32 %div12.1, 48"]
	Node0x5610bf73fe68[shape=record, label="  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !9"]
	Node0x5610bf73ff58[shape=record, label="  %call.i.1 = tail call i32 @_IO_putc(i32 %add.1, %struct._IO_FILE* %9) #3"]
	Node0x5610bf73fff8[shape=record, label="  %10 = load %struct.node*, %struct.node** %next, align 8, !tbaa !2"]
	Node0x5610bf740088[shape=record, label="  %data11.2 = getelementptr inbounds %struct.node, %struct.node* %10, i64 0, i32 0"]
	Node0x5610bf740128[shape=record, label="  %11 = load i32, i32* %data11.2, align 8, !tbaa !8"]
	Node0x5610bf7401a0[shape=record, label="  %rem.2 = srem i32 %11, 100"]
	Node0x5610bf740210[shape=record, label="  %div12.2 = sdiv i32 %rem.2, 10"]
	Node0x5610bf7405a0[shape=record, label="  %add.2 = add nsw i32 %div12.2, 48"]
	Node0x5610bf740618[shape=record, label="  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !9"]
	Node0x5610bf740708[shape=record, label="  %call.i.2 = tail call i32 @_IO_putc(i32 %add.2, %struct._IO_FILE* %12) #3"]
	Node0x5610bf7407f8[shape=record, label="  %13 = load %struct.node*, %struct.node** %next, align 8, !tbaa !2"]
	Node0x5610bf740888[shape=record, label="  %data11.3 = getelementptr inbounds %struct.node, %struct.node* %13, i64 0, i32 0"]
	Node0x5610bf740928[shape=record, label="  %14 = load i32, i32* %data11.3, align 8, !tbaa !8"]
	Node0x5610bf7409a0[shape=record, label="  %rem.3 = srem i32 %14, 10"]
	Node0x5610bf740a10[shape=record, label="  %add.3 = add nsw i32 %rem.3, 48"]
	Node0x5610bf740a68[shape=record, label="  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !9"]
	Node0x5610bf740b58[shape=record, label="  %call.i.3 = tail call i32 @_IO_putc(i32 %add.3, %struct._IO_FILE* %15) #3"]
	Node0x5610bf740c48[shape=record, label="  br label %if.end15"]
	Node0x5610bf740d58[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i32 %5)"]
	Node0x5610bf73f488[shape=record, label="  br label %if.end15"]
	Node0x5610bf73bcf0[shape=record, label="  ret void"]
	Node0x5610bf73eac8 -> Node0x5610bf7341f8
	Node0x5610bf7341f8 -> Node0x5610bf73eb88
	Node0x5610bf73eb88 -> Node0x5610bf73ec18
	Node0x5610bf73ec18 -> Node0x5610bf73ecb0
	Node0x5610bf73ecb0 -> Node0x5610bf73eeb8
	Node0x5610bf73eeb8 -> Node0x5610bf73bcf0
	Node0x5610bf73eeb8 -> Node0x5610bf73ef50
	Node0x5610bf73ef50 -> Node0x5610bf73ee28
	Node0x5610bf73ee28 -> Node0x5610bf73f068
	Node0x5610bf73f068 -> Node0x5610bf73f0d8
	Node0x5610bf73f0d8 -> Node0x5610bf73f168
	Node0x5610bf73f168 -> Node0x5610bf73f1d8
	Node0x5610bf73f1d8 -> Node0x5610bf73f2a0
	Node0x5610bf73f2a0 -> Node0x5610bf73f348
	Node0x5610bf73f348 -> Node0x5610bf73f3d8
	Node0x5610bf73f3d8 -> Node0x5610bf73f768
	Node0x5610bf73f768 -> Node0x5610bf740d58
	Node0x5610bf73f768 -> Node0x5610bf73f7e0
	Node0x5610bf73f7e0 -> Node0x5610bf73f850
	Node0x5610bf73f850 -> Node0x5610bf73f8f0
	Node0x5610bf73f8f0 -> Node0x5610bf73e948
	Node0x5610bf73e948 -> Node0x5610bf73f9f8
	Node0x5610bf73f9f8 -> Node0x5610bf73fab8
	Node0x5610bf73fab8 -> Node0x5610bf73fb48
	Node0x5610bf73fb48 -> Node0x5610bf73fbe8
	Node0x5610bf73fbe8 -> Node0x5610bf73fcf0
	Node0x5610bf73fcf0 -> Node0x5610bf73fd60
	Node0x5610bf73fd60 -> Node0x5610bf73fdf0
	Node0x5610bf73fdf0 -> Node0x5610bf73fe68
	Node0x5610bf73fe68 -> Node0x5610bf73ff58
	Node0x5610bf73ff58 -> Node0x5610bf73fff8
	Node0x5610bf73fff8 -> Node0x5610bf740088
	Node0x5610bf740088 -> Node0x5610bf740128
	Node0x5610bf740128 -> Node0x5610bf7401a0
	Node0x5610bf7401a0 -> Node0x5610bf740210
	Node0x5610bf740210 -> Node0x5610bf7405a0
	Node0x5610bf7405a0 -> Node0x5610bf740618
	Node0x5610bf740618 -> Node0x5610bf740708
	Node0x5610bf740708 -> Node0x5610bf7407f8
	Node0x5610bf7407f8 -> Node0x5610bf740888
	Node0x5610bf740888 -> Node0x5610bf740928
	Node0x5610bf740928 -> Node0x5610bf7409a0
	Node0x5610bf7409a0 -> Node0x5610bf740a10
	Node0x5610bf740a10 -> Node0x5610bf740a68
	Node0x5610bf740a68 -> Node0x5610bf740b58
	Node0x5610bf740b58 -> Node0x5610bf740c48
	Node0x5610bf740c48 -> Node0x5610bf73bcf0
	Node0x5610bf740d58 -> Node0x5610bf73f488
	Node0x5610bf73f488 -> Node0x5610bf73bcf0
edge [color=red]
	Node0x5610bf73eac8 -> Node0x5610bf7341f8[label="1"]
	Node0x5610bf7341f8 -> Node0x5610bf73eb88[label="2"]
	Node0x5610bf73eb88 -> Node0x5610bf73ec18[label="3"]
	Node0x5610bf73ec18 -> Node0x5610bf73ecb0[label="4"]
	Node0x5610bf73ecb0 -> Node0x5610bf73eeb8[label="5"]
	Node0x5610bf7341f8 -> Node0x5610bf73ef50[label="6"]
	Node0x5610bf73eac8 -> Node0x5610bf73ee28[label="7"]
	Node0x5610bf73ee28 -> Node0x5610bf73f068[label="8"]
	Node0x5610bf73f068 -> Node0x5610bf73f0d8[label="9"]
	Node0x5610bf73f0d8 -> Node0x5610bf73f168[label="10"]
	Node0x5610bf73f168 -> Node0x5610bf73f1d8[label="11"]
	Node0x5610bf73f1d8 -> Node0x5610bf73f2a0[label="12"]
	Node0x5610bf73ee28 -> Node0x5610bf73f348[label="13"]
	Node0x5610bf73f348 -> Node0x5610bf73f3d8[label="14"]
	Node0x5610bf73f2a0 -> Node0x5610bf73f768[label="15"]
	Node0x5610bf73f3d8 -> Node0x5610bf73f7e0[label="16"]
	Node0x5610bf73f7e0 -> Node0x5610bf73f850[label="17"]
	Node0x5610bf73f850 -> Node0x5610bf73f8f0[label="18"]
	Node0x5610bf7322d8 -> Node0x5610bf73e948[label="19"]
	Node0x5610bf73f8f0 -> Node0x5610bf73f9f8[label="20"]
	Node0x5610bf73e948 -> Node0x5610bf73f9f8[label="21"]
	Node0x5610bf73eac8 -> Node0x5610bf73fab8[label="22"]
	Node0x5610bf73fab8 -> Node0x5610bf73fb48[label="23"]
	Node0x5610bf73fb48 -> Node0x5610bf73fbe8[label="24"]
	Node0x5610bf73fbe8 -> Node0x5610bf73fcf0[label="25"]
	Node0x5610bf73fcf0 -> Node0x5610bf73fd60[label="26"]
	Node0x5610bf73fd60 -> Node0x5610bf73fdf0[label="27"]
	Node0x5610bf7322d8 -> Node0x5610bf73fe68[label="28"]
	Node0x5610bf73fdf0 -> Node0x5610bf73ff58[label="29"]
	Node0x5610bf73fe68 -> Node0x5610bf73ff58[label="30"]
	Node0x5610bf73eac8 -> Node0x5610bf73fff8[label="31"]
	Node0x5610bf73fff8 -> Node0x5610bf740088[label="32"]
	Node0x5610bf740088 -> Node0x5610bf740128[label="33"]
	Node0x5610bf740128 -> Node0x5610bf7401a0[label="34"]
	Node0x5610bf7401a0 -> Node0x5610bf740210[label="35"]
	Node0x5610bf740210 -> Node0x5610bf7405a0[label="36"]
	Node0x5610bf7322d8 -> Node0x5610bf740618[label="37"]
	Node0x5610bf7405a0 -> Node0x5610bf740708[label="38"]
	Node0x5610bf740618 -> Node0x5610bf740708[label="39"]
	Node0x5610bf73eac8 -> Node0x5610bf7407f8[label="40"]
	Node0x5610bf7407f8 -> Node0x5610bf740888[label="41"]
	Node0x5610bf740888 -> Node0x5610bf740928[label="42"]
	Node0x5610bf740928 -> Node0x5610bf7409a0[label="43"]
	Node0x5610bf7409a0 -> Node0x5610bf740a10[label="44"]
	Node0x5610bf7322d8 -> Node0x5610bf740a68[label="45"]
	Node0x5610bf740a10 -> Node0x5610bf740b58[label="46"]
	Node0x5610bf740a68 -> Node0x5610bf740b58[label="47"]
	Node0x5610bf73f3d8 -> Node0x5610bf740d58[label="48"]
}
