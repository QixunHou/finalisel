digraph "CDFG for'func' function" {
	Node0x556bb2020cf0[shape=record, label="  %putchar = tail call i32 @putchar(i32 10)"]
	Node0x556bb2020ef8[shape=record, label="  br label %for.cond1.preheader"]
	Node0x556bb2021008[shape=record, label="  %i.020 = phi i32 [ 1, %entry ], [ %inc7, %for.cond1.preheader ]"]
	Node0x556bb2021448[shape=record, label="  %call4 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %i.020, i32 1, i32 %i.020)"]
	Node0x556bb2021540[shape=record, label="  %mul.1 = shl nuw nsw i32 %i.020, 1"]
	Node0x556bb2021668[shape=record, label="  %call4.1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %i.020, i32 2, i32 %mul.1)"]
	Node0x556bb2021770[shape=record, label="  %mul.2 = mul nuw nsw i32 %i.020, 3"]
	Node0x556bb2021868[shape=record, label="  %call4.2 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %i.020, i32 3, i32 %mul.2)"]
	Node0x556bb2021940[shape=record, label="  %mul.3 = shl nuw nsw i32 %i.020, 2"]
	Node0x556bb2021a68[shape=record, label="  %call4.3 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %i.020, i32 4, i32 %mul.3)"]
	Node0x556bb2021b70[shape=record, label="  %mul.4 = mul nuw nsw i32 %i.020, 5"]
	Node0x556bb2021c68[shape=record, label="  %call4.4 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %i.020, i32 5, i32 %mul.4)"]
	Node0x556bb2021f10[shape=record, label="  %mul.5 = mul nuw nsw i32 %i.020, 6"]
	Node0x556bb2022008[shape=record, label="  %call4.5 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %i.020, i32 6, i32 %mul.5)"]
	Node0x556bb2022110[shape=record, label="  %mul.6 = mul nuw nsw i32 %i.020, 7"]
	Node0x556bb2022208[shape=record, label="  %call4.6 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %i.020, i32 7, i32 %mul.6)"]
	Node0x556bb20222e0[shape=record, label="  %mul.7 = shl nuw nsw i32 %i.020, 3"]
	Node0x556bb2022408[shape=record, label="  %call4.7 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %i.020, i32 8, i32 %mul.7)"]
	Node0x556bb2022510[shape=record, label="  %mul.8 = mul nuw nsw i32 %i.020, 9"]
	Node0x556bb2022608[shape=record, label="  %call4.8 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %i.020, i32 9, i32 %mul.8)"]
	Node0x556bb2022700[shape=record, label="  %putchar18 = tail call i32 @putchar(i32 10)"]
	Node0x556bb2022800[shape=record, label="  %inc7 = add nuw nsw i32 %i.020, 1"]
	Node0x556bb2022870[shape=record, label="  %exitcond = icmp eq i32 %inc7, 10"]
	Node0x556bb1fb6228[shape=record, label="  br i1 %exitcond, label %for.end8, label %for.cond1.preheader"]
	Node0x556bb2022cb0[shape=record, label="  ret void"]
	Node0x556bb2020cf0 -> Node0x556bb2020ef8
	Node0x556bb2020ef8 -> Node0x556bb2021008
	Node0x556bb2021008 -> Node0x556bb2021448
	Node0x556bb2021448 -> Node0x556bb2021540
	Node0x556bb2021540 -> Node0x556bb2021668
	Node0x556bb2021668 -> Node0x556bb2021770
	Node0x556bb2021770 -> Node0x556bb2021868
	Node0x556bb2021868 -> Node0x556bb2021940
	Node0x556bb2021940 -> Node0x556bb2021a68
	Node0x556bb2021a68 -> Node0x556bb2021b70
	Node0x556bb2021b70 -> Node0x556bb2021c68
	Node0x556bb2021c68 -> Node0x556bb2021f10
	Node0x556bb2021f10 -> Node0x556bb2022008
	Node0x556bb2022008 -> Node0x556bb2022110
	Node0x556bb2022110 -> Node0x556bb2022208
	Node0x556bb2022208 -> Node0x556bb20222e0
	Node0x556bb20222e0 -> Node0x556bb2022408
	Node0x556bb2022408 -> Node0x556bb2022510
	Node0x556bb2022510 -> Node0x556bb2022608
	Node0x556bb2022608 -> Node0x556bb2022700
	Node0x556bb2022700 -> Node0x556bb2022800
	Node0x556bb2022800 -> Node0x556bb2022870
	Node0x556bb2022870 -> Node0x556bb1fb6228
	Node0x556bb1fb6228 -> Node0x556bb2022cb0
	Node0x556bb1fb6228 -> Node0x556bb2021008
edge [color=red]
	Node0x556bb2022800 -> Node0x556bb2021008[label="1"]
	Node0x556bb2021008 -> Node0x556bb2021448[label="2"]
	Node0x556bb2021008 -> Node0x556bb2021448[label="3"]
	Node0x556bb2021008 -> Node0x556bb2021540[label="4"]
	Node0x556bb2021008 -> Node0x556bb2021668[label="5"]
	Node0x556bb2021540 -> Node0x556bb2021668[label="6"]
	Node0x556bb2021008 -> Node0x556bb2021770[label="7"]
	Node0x556bb2021008 -> Node0x556bb2021868[label="8"]
	Node0x556bb2021770 -> Node0x556bb2021868[label="9"]
	Node0x556bb2021008 -> Node0x556bb2021940[label="10"]
	Node0x556bb2021008 -> Node0x556bb2021a68[label="11"]
	Node0x556bb2021940 -> Node0x556bb2021a68[label="12"]
	Node0x556bb2021008 -> Node0x556bb2021b70[label="13"]
	Node0x556bb2021008 -> Node0x556bb2021c68[label="14"]
	Node0x556bb2021b70 -> Node0x556bb2021c68[label="15"]
	Node0x556bb2021008 -> Node0x556bb2021f10[label="16"]
	Node0x556bb2021008 -> Node0x556bb2022008[label="17"]
	Node0x556bb2021f10 -> Node0x556bb2022008[label="18"]
	Node0x556bb2021008 -> Node0x556bb2022110[label="19"]
	Node0x556bb2021008 -> Node0x556bb2022208[label="20"]
	Node0x556bb2022110 -> Node0x556bb2022208[label="21"]
	Node0x556bb2021008 -> Node0x556bb20222e0[label="22"]
	Node0x556bb2021008 -> Node0x556bb2022408[label="23"]
	Node0x556bb20222e0 -> Node0x556bb2022408[label="24"]
	Node0x556bb2021008 -> Node0x556bb2022510[label="25"]
	Node0x556bb2021008 -> Node0x556bb2022608[label="26"]
	Node0x556bb2022510 -> Node0x556bb2022608[label="27"]
	Node0x556bb2021008 -> Node0x556bb2022800[label="28"]
	Node0x556bb2022800 -> Node0x556bb2022870[label="29"]
	Node0x556bb2022870 -> Node0x556bb1fb6228[label="30"]
}
