digraph "CDFG for'func' function" {
	Node0x56540650a948[shape=record, label="  br label %for.body"];
	Node0x56540650b0f8[shape=record, label="  %x.033 = phi i32 [ 100, %entry ], [ %inc, %for.inc ]"];
	Node0x56540650b1c8[shape=record, label="  %div.lhs.trunc = trunc i32 %x.033 to i16"];
	Node0x56540650b2a0[shape=record, label="  %div30 = udiv i16 %div.lhs.trunc, 100"];
	Node0x56540650b318[shape=record, label="  %div.zext = zext i16 %div30 to i32"];
	Node0x56540650b3f0[shape=record, label="  %div131 = udiv i16 %div.lhs.trunc, 10"];
	Node0x56540650b468[shape=record, label="  %div1.zext = trunc i16 %div131 to i8"];
	Node0x56540650b540[shape=record, label="  %rem32 = urem i8 %div1.zext, 10"];
	Node0x56540650b5b8[shape=record, label="  %rem.zext = zext i8 %rem32 to i32"];
	Node0x56540650b690[shape=record, label="  %0 = mul nsw i32 %div.zext, -100"];
	Node0x56540650b720[shape=record, label="  %sub = add i32 %0, %x.033"];
	Node0x56540650b7e0[shape=record, label="  %1 = mul nsw i32 %rem.zext, -10"];
	Node0x56540650b870[shape=record, label="  %sub3 = add i32 %sub, %1"];
	Node0x56540650ba80[shape=record, label="  %mul4 = mul nuw nsw i32 %div.zext, %div.zext"];
	Node0x56540650bb10[shape=record, label="  %mul5 = mul nuw nsw i32 %mul4, %div.zext"];
	Node0x56540650bba0[shape=record, label="  %mul6 = mul nuw nsw i32 %rem.zext, %rem.zext"];
	Node0x56540650bc30[shape=record, label="  %mul7 = mul nuw nsw i32 %mul6, %rem.zext"];
	Node0x56540650bcc0[shape=record, label="  %add = add nuw nsw i32 %mul7, %mul5"];
	Node0x56540650bd50[shape=record, label="  %mul8 = mul nsw i32 %sub3, %sub3"];
	Node0x56540650bde0[shape=record, label="  %mul9 = mul nsw i32 %mul8, %sub3"];
	Node0x56540650be70[shape=record, label="  %add10 = add nsw i32 %add, %mul9"];
	Node0x56540650bf00[shape=record, label="  %cmp11 = icmp eq i32 %x.033, %add10"];
	Node0x565406494c98[shape=record, label="  br i1 %cmp11, label %if.then, label %for.inc"];
	Node0x56540650c388[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %x.033)"];
	Node0x56540650c468[shape=record, label="  br label %for.inc"];
	Node0x56540650c510[shape=record, label="  %inc = add nuw nsw i32 %x.033, 1"];
	Node0x56540650c8a0[shape=record, label="  %exitcond = icmp eq i32 %inc, 1000"];
	Node0x5654064a0228[shape=record, label="  br i1 %exitcond, label %for.end, label %for.body"];
	Node0x56540650c980[shape=record, label="  ret void"];
	Node0x56540650a948 -> Node0x56540650b0f8
	Node0x56540650b0f8 -> Node0x56540650b1c8
	Node0x56540650b1c8 -> Node0x56540650b2a0
	Node0x56540650b2a0 -> Node0x56540650b318
	Node0x56540650b318 -> Node0x56540650b3f0
	Node0x56540650b3f0 -> Node0x56540650b468
	Node0x56540650b468 -> Node0x56540650b540
	Node0x56540650b540 -> Node0x56540650b5b8
	Node0x56540650b5b8 -> Node0x56540650b690
	Node0x56540650b690 -> Node0x56540650b720
	Node0x56540650b720 -> Node0x56540650b7e0
	Node0x56540650b7e0 -> Node0x56540650b870
	Node0x56540650b870 -> Node0x56540650ba80
	Node0x56540650ba80 -> Node0x56540650bb10
	Node0x56540650bb10 -> Node0x56540650bba0
	Node0x56540650bba0 -> Node0x56540650bc30
	Node0x56540650bc30 -> Node0x56540650bcc0
	Node0x56540650bcc0 -> Node0x56540650bd50
	Node0x56540650bd50 -> Node0x56540650bde0
	Node0x56540650bde0 -> Node0x56540650be70
	Node0x56540650be70 -> Node0x56540650bf00
	Node0x56540650bf00 -> Node0x565406494c98
	Node0x565406494c98 -> Node0x56540650c388
	Node0x565406494c98 -> Node0x56540650c510
	Node0x56540650c388 -> Node0x56540650c468
	Node0x56540650c468 -> Node0x56540650c510
	Node0x56540650c510 -> Node0x56540650c8a0
	Node0x56540650c8a0 -> Node0x5654064a0228
	Node0x5654064a0228 -> Node0x56540650c980
	Node0x5654064a0228 -> Node0x56540650b0f8
edge [color=red]
	Node0x56540650c510 -> Node0x56540650b0f8
	Node0x56540650b0f8 -> Node0x56540650b1c8
	Node0x56540650b1c8 -> Node0x56540650b2a0
	Node0x56540650b2a0 -> Node0x56540650b318
	Node0x56540650b1c8 -> Node0x56540650b3f0
	Node0x56540650b3f0 -> Node0x56540650b468
	Node0x56540650b468 -> Node0x56540650b540
	Node0x56540650b540 -> Node0x56540650b5b8
	Node0x56540650b318 -> Node0x56540650b690
	Node0x56540650b690 -> Node0x56540650b720
	Node0x56540650b0f8 -> Node0x56540650b720
	Node0x56540650b5b8 -> Node0x56540650b7e0
	Node0x56540650b720 -> Node0x56540650b870
	Node0x56540650b7e0 -> Node0x56540650b870
	Node0x56540650b318 -> Node0x56540650ba80
	Node0x56540650b318 -> Node0x56540650ba80
	Node0x56540650ba80 -> Node0x56540650bb10
	Node0x56540650b318 -> Node0x56540650bb10
	Node0x56540650b5b8 -> Node0x56540650bba0
	Node0x56540650b5b8 -> Node0x56540650bba0
	Node0x56540650bba0 -> Node0x56540650bc30
	Node0x56540650b5b8 -> Node0x56540650bc30
	Node0x56540650bc30 -> Node0x56540650bcc0
	Node0x56540650bb10 -> Node0x56540650bcc0
	Node0x56540650b870 -> Node0x56540650bd50
	Node0x56540650b870 -> Node0x56540650bd50
	Node0x56540650bd50 -> Node0x56540650bde0
	Node0x56540650b870 -> Node0x56540650bde0
	Node0x56540650bcc0 -> Node0x56540650be70
	Node0x56540650bde0 -> Node0x56540650be70
	Node0x56540650b0f8 -> Node0x56540650bf00
	Node0x56540650be70 -> Node0x56540650bf00
	Node0x56540650bf00 -> Node0x565406494c98
	Node0x56540650b0f8 -> Node0x56540650c388
	Node0x56540650b0f8 -> Node0x56540650c510
	Node0x56540650c510 -> Node0x56540650c8a0
	Node0x56540650c8a0 -> Node0x5654064a0228
}
