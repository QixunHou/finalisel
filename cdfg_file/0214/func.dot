digraph "CDFG for'func' function" {
	Node0x55cf10f1f9c8[shape=record, label="  br label %for.body"]
	Node0x55cf10f20178[shape=record, label="  %x.033 = phi i32 [ 100, %entry ], [ %inc, %for.inc ]"]
	Node0x55cf10f20248[shape=record, label="  %div.lhs.trunc = trunc i32 %x.033 to i16"]
	Node0x55cf10f20320[shape=record, label="  %div30 = udiv i16 %div.lhs.trunc, 100"]
	Node0x55cf10f20398[shape=record, label="  %div.zext = zext i16 %div30 to i32"]
	Node0x55cf10f20470[shape=record, label="  %div131 = udiv i16 %div.lhs.trunc, 10"]
	Node0x55cf10f204e8[shape=record, label="  %div1.zext = trunc i16 %div131 to i8"]
	Node0x55cf10f205c0[shape=record, label="  %rem32 = urem i8 %div1.zext, 10"]
	Node0x55cf10f20638[shape=record, label="  %rem.zext = zext i8 %rem32 to i32"]
	Node0x55cf10f20710[shape=record, label="  %0 = mul nsw i32 %div.zext, -100"]
	Node0x55cf10f207a0[shape=record, label="  %sub = add i32 %0, %x.033"]
	Node0x55cf10f20860[shape=record, label="  %1 = mul nsw i32 %rem.zext, -10"]
	Node0x55cf10f208f0[shape=record, label="  %sub3 = add i32 %sub, %1"]
	Node0x55cf10f20b00[shape=record, label="  %mul4 = mul nuw nsw i32 %div.zext, %div.zext"]
	Node0x55cf10f20b90[shape=record, label="  %mul5 = mul nuw nsw i32 %mul4, %div.zext"]
	Node0x55cf10f20c20[shape=record, label="  %mul6 = mul nuw nsw i32 %rem.zext, %rem.zext"]
	Node0x55cf10f20cb0[shape=record, label="  %mul7 = mul nuw nsw i32 %mul6, %rem.zext"]
	Node0x55cf10f20d40[shape=record, label="  %add = add nuw nsw i32 %mul7, %mul5"]
	Node0x55cf10f20dd0[shape=record, label="  %mul8 = mul nsw i32 %sub3, %sub3"]
	Node0x55cf10f20e60[shape=record, label="  %mul9 = mul nsw i32 %mul8, %sub3"]
	Node0x55cf10f20ef0[shape=record, label="  %add10 = add nsw i32 %add, %mul9"]
	Node0x55cf10f20f80[shape=record, label="  %cmp11 = icmp eq i32 %x.033, %add10"]
	Node0x55cf10ea9c98[shape=record, label="  br i1 %cmp11, label %if.then, label %for.inc"]
	Node0x55cf10f21408[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %x.033)"]
	Node0x55cf10f214e8[shape=record, label="  br label %for.inc"]
	Node0x55cf10f21590[shape=record, label="  %inc = add nuw nsw i32 %x.033, 1"]
	Node0x55cf10f21920[shape=record, label="  %exitcond = icmp eq i32 %inc, 1000"]
	Node0x55cf10eb5228[shape=record, label="  br i1 %exitcond, label %for.end, label %for.body"]
	Node0x55cf10f21a00[shape=record, label="  ret void"]
	Node0x55cf10f1f9c8 -> Node0x55cf10f20178
	Node0x55cf10f20178 -> Node0x55cf10f20248
	Node0x55cf10f20248 -> Node0x55cf10f20320
	Node0x55cf10f20320 -> Node0x55cf10f20398
	Node0x55cf10f20398 -> Node0x55cf10f20470
	Node0x55cf10f20470 -> Node0x55cf10f204e8
	Node0x55cf10f204e8 -> Node0x55cf10f205c0
	Node0x55cf10f205c0 -> Node0x55cf10f20638
	Node0x55cf10f20638 -> Node0x55cf10f20710
	Node0x55cf10f20710 -> Node0x55cf10f207a0
	Node0x55cf10f207a0 -> Node0x55cf10f20860
	Node0x55cf10f20860 -> Node0x55cf10f208f0
	Node0x55cf10f208f0 -> Node0x55cf10f20b00
	Node0x55cf10f20b00 -> Node0x55cf10f20b90
	Node0x55cf10f20b90 -> Node0x55cf10f20c20
	Node0x55cf10f20c20 -> Node0x55cf10f20cb0
	Node0x55cf10f20cb0 -> Node0x55cf10f20d40
	Node0x55cf10f20d40 -> Node0x55cf10f20dd0
	Node0x55cf10f20dd0 -> Node0x55cf10f20e60
	Node0x55cf10f20e60 -> Node0x55cf10f20ef0
	Node0x55cf10f20ef0 -> Node0x55cf10f20f80
	Node0x55cf10f20f80 -> Node0x55cf10ea9c98
	Node0x55cf10ea9c98 -> Node0x55cf10f21408
	Node0x55cf10ea9c98 -> Node0x55cf10f21590
	Node0x55cf10f21408 -> Node0x55cf10f214e8
	Node0x55cf10f214e8 -> Node0x55cf10f21590
	Node0x55cf10f21590 -> Node0x55cf10f21920
	Node0x55cf10f21920 -> Node0x55cf10eb5228
	Node0x55cf10eb5228 -> Node0x55cf10f21a00
	Node0x55cf10eb5228 -> Node0x55cf10f20178
edge [color=red]
	Node0x55cf10f21590 -> Node0x55cf10f20178[label="1"]
	Node0x55cf10f20178 -> Node0x55cf10f20248[label="2"]
	Node0x55cf10f20248 -> Node0x55cf10f20320[label="3"]
	Node0x55cf10f20320 -> Node0x55cf10f20398[label="4"]
	Node0x55cf10f20248 -> Node0x55cf10f20470[label="5"]
	Node0x55cf10f20470 -> Node0x55cf10f204e8[label="6"]
	Node0x55cf10f204e8 -> Node0x55cf10f205c0[label="7"]
	Node0x55cf10f205c0 -> Node0x55cf10f20638[label="8"]
	Node0x55cf10f20398 -> Node0x55cf10f20710[label="9"]
	Node0x55cf10f20710 -> Node0x55cf10f207a0[label="10"]
	Node0x55cf10f20178 -> Node0x55cf10f207a0[label="11"]
	Node0x55cf10f20638 -> Node0x55cf10f20860[label="12"]
	Node0x55cf10f207a0 -> Node0x55cf10f208f0[label="13"]
	Node0x55cf10f20860 -> Node0x55cf10f208f0[label="14"]
	Node0x55cf10f20398 -> Node0x55cf10f20b00[label="15"]
	Node0x55cf10f20398 -> Node0x55cf10f20b00[label="16"]
	Node0x55cf10f20b00 -> Node0x55cf10f20b90[label="17"]
	Node0x55cf10f20398 -> Node0x55cf10f20b90[label="18"]
	Node0x55cf10f20638 -> Node0x55cf10f20c20[label="19"]
	Node0x55cf10f20638 -> Node0x55cf10f20c20[label="20"]
	Node0x55cf10f20c20 -> Node0x55cf10f20cb0[label="21"]
	Node0x55cf10f20638 -> Node0x55cf10f20cb0[label="22"]
	Node0x55cf10f20cb0 -> Node0x55cf10f20d40[label="23"]
	Node0x55cf10f20b90 -> Node0x55cf10f20d40[label="24"]
	Node0x55cf10f208f0 -> Node0x55cf10f20dd0[label="25"]
	Node0x55cf10f208f0 -> Node0x55cf10f20dd0[label="26"]
	Node0x55cf10f20dd0 -> Node0x55cf10f20e60[label="27"]
	Node0x55cf10f208f0 -> Node0x55cf10f20e60[label="28"]
	Node0x55cf10f20d40 -> Node0x55cf10f20ef0[label="29"]
	Node0x55cf10f20e60 -> Node0x55cf10f20ef0[label="30"]
	Node0x55cf10f20178 -> Node0x55cf10f20f80[label="31"]
	Node0x55cf10f20ef0 -> Node0x55cf10f20f80[label="32"]
	Node0x55cf10f20f80 -> Node0x55cf10ea9c98[label="33"]
	Node0x55cf10f20178 -> Node0x55cf10f21408[label="34"]
	Node0x55cf10f20178 -> Node0x55cf10f21590[label="35"]
	Node0x55cf10f21590 -> Node0x55cf10f21920[label="36"]
	Node0x55cf10f21920 -> Node0x55cf10eb5228[label="37"]
}
