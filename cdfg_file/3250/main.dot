digraph "CDFG for'main' function" {
	Node0x563ffc6c85a8[shape=record, label="  %m = alloca i32, align 4"]
	Node0x563ffc6c88e8[shape=record, label="  %n = alloca i32, align 4"]
	Node0x563ffc6c8a68[shape=record, label="  %xx = alloca [1000 x i32], align 16"]
	Node0x563ffc6c8768[shape=record, label="  %0 = bitcast i32* %m to i8*"]
	Node0x563ffc6cb918[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #5"]
	Node0x563ffc6c83f8[shape=record, label="  %1 = bitcast i32* %n to i8*"]
	Node0x563ffc6cba28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #5"]
	Node0x563ffc6cbae8[shape=record, label="  %2 = bitcast [1000 x i32]* %xx to i8*"]
	Node0x563ffc6cbbd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %2) #5"]
	Node0x563ffc6cc030[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0))"]
	Node0x563ffc6cc370[shape=record, label="  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %m, i32* nonnull %n)"]
	Node0x563ffc6cc428[shape=record, label="  %3 = load i32, i32* %n, align 4, !tbaa !2"]
	Node0x563ffc6ccab0[shape=record, label="  %cmp9.i = icmp sgt i32 %3, 0"]
	Node0x563ffc6ccd38[shape=record, label="  br i1 %cmp9.i, label %for.body.i.preheader, label %num.exit.thread"]
	Node0x563ffc6ccde0[shape=record, label="  store i32 0, i32* %m, align 4, !tbaa !2"]
	Node0x563ffc6cceb8[shape=record, label="  br label %for.end"]
	Node0x563ffc6ccbd8[shape=record, label="  %4 = load i32, i32* %m, align 4, !tbaa !2"]
	Node0x563ffc6cd048[shape=record, label="  br label %for.body.i"]
	Node0x563ffc6cd1d8[shape=record, label="  %m.addr.015.in.i = phi i32 [ %m.addr.015.i, %for.inc.i ], [ %4, %for.body.i.preheader ]"]
	Node0x563ffc6cd4d8[shape=record, label="  %s.013.i = phi i32 [ %s.1.i, %for.inc.i ], [ 0, %for.body.i.preheader ]"]
	Node0x563ffc6cd658[shape=record, label="  %k.addr.010.i = phi i32 [ %k.addr.1.i, %for.inc.i ], [ %3, %for.body.i.preheader ]"]
	Node0x563ffc6cd720[shape=record, label="  %m.addr.015.i = add nsw i32 %m.addr.015.in.i, 1"]
	Node0x563ffc6cd790[shape=record, label="  %cmp6.i.i = icmp sgt i32 %m.addr.015.in.i, 1"]
	Node0x563ffc6cd948[shape=record, label="  br i1 %cmp6.i.i, label %for.body.i.i, label %if.then.i"]
	Node0x563ffc6cdb00[shape=record, label="  %inc.i.i = add nuw nsw i32 %i.07.i.i, 1"]
	Node0x563ffc6cdbc0[shape=record, label="  %cmp.i.i = icmp slt i32 %i.07.i.i, %m.addr.015.in.i"]
	Node0x563ffc6cdc68[shape=record, label="  br i1 %cmp.i.i, label %for.body.i.i, label %if.then.i"]
	Node0x563ffc6cdcb8[shape=record, label="  %i.07.i.i = phi i32 [ %inc.i.i, %for.cond.i.i ], [ 2, %for.body.i ]"]
	Node0x563ffc6cdd80[shape=record, label="  %rem.i.i = srem i32 %m.addr.015.i, %i.07.i.i"]
	Node0x563ffc6cde10[shape=record, label="  %cmp1.i.i = icmp eq i32 %rem.i.i, 0"]
	Node0x563ffc6ce1b8[shape=record, label="  br i1 %cmp1.i.i, label %for.inc.i, label %for.cond.i.i"]
	Node0x563ffc6ce230[shape=record, label="  %inc.i = add nsw i32 %s.013.i, 1"]
	Node0x563ffc6cd8b8[shape=record, label="  %idxprom.i = sext i32 %s.013.i to i64"]
	Node0x563ffc6ce2d8[shape=record, label="  %arrayidx.i = getelementptr inbounds [1000 x i32], [1000 x i32]* %xx, i64 0, i64 %idxprom.i"]
	Node0x563ffc6ce390[shape=record, label="  store i32 %m.addr.015.i, i32* %arrayidx.i, align 4, !tbaa !2"]
	Node0x563ffc6ce410[shape=record, label="  %dec.i = add nsw i32 %k.addr.010.i, -1"]
	Node0x563ffc6cda28[shape=record, label="  br label %for.inc.i"]
	Node0x563ffc6ce478[shape=record, label="  %k.addr.1.i = phi i32 [ %dec.i, %if.then.i ], [ %k.addr.010.i, %for.body.i.i ]"]
	Node0x563ffc6ce518[shape=record, label="  %s.1.i = phi i32 [ %inc.i, %if.then.i ], [ %s.013.i, %for.body.i.i ]"]
	Node0x563ffc6ce5e0[shape=record, label="  %cmp.i = icmp sgt i32 %k.addr.1.i, 0"]
	Node0x563ffc6ce6d8[shape=record, label="  br i1 %cmp.i, label %for.body.i, label %num.exit"]
	Node0x563ffc6ce750[shape=record, label="  store i32 0, i32* %m, align 4, !tbaa !2"]
	Node0x563ffc6ce838[shape=record, label="  br i1 %cmp9.i, label %for.body, label %for.end"]
	Node0x563ffc6ce8d8[shape=record, label="  %storemerge5 = phi i32 [ %inc, %for.body ], [ 0, %num.exit ]"]
	Node0x563ffc6cd5a8[shape=record, label="  %idxprom = sext i32 %storemerge5 to i64"]
	Node0x563ffc6cea08[shape=record, label="  %arrayidx = getelementptr inbounds [1000 x i32], [1000 x i32]* %xx, i64 0, i64 %idxprom"]
	Node0x563ffc6cd128[shape=record, label="  %5 = load i32, i32* %arrayidx, align 4, !tbaa !2"]
	Node0x563ffc6ceb78[shape=record, label="  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %5)"]
	Node0x563ffc6ccfe8[shape=record, label="  %6 = load i32, i32* %m, align 4, !tbaa !2"]
	Node0x563ffc6cec50[shape=record, label="  %inc = add nsw i32 %6, 1"]
	Node0x563ffc6cecc0[shape=record, label="  store i32 %inc, i32* %m, align 4, !tbaa !2"]
	Node0x563ffc6cd428[shape=record, label="  %7 = load i32, i32* %n, align 4, !tbaa !2"]
	Node0x563ffc6ced40[shape=record, label="  %cmp = icmp slt i32 %inc, %7"]
	Node0x563ffc6cede8[shape=record, label="  br i1 %cmp, label %for.body, label %for.end"]
	Node0x563ffc6cef40[shape=record, label="  %putchar = call i32 @putchar(i32 10)"]
	Node0x563ffc6cf108[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %2) #5"]
	Node0x563ffc6cf218[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #5"]
	Node0x563ffc6cf328[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #5"]
	Node0x563ffc6cf3e8[shape=record, label="  ret i32 0"]
	Node0x563ffc6c85a8 -> Node0x563ffc6c88e8
	Node0x563ffc6c88e8 -> Node0x563ffc6c8a68
	Node0x563ffc6c8a68 -> Node0x563ffc6c8768
	Node0x563ffc6c8768 -> Node0x563ffc6cb918
	Node0x563ffc6cb918 -> Node0x563ffc6c83f8
	Node0x563ffc6c83f8 -> Node0x563ffc6cba28
	Node0x563ffc6cba28 -> Node0x563ffc6cbae8
	Node0x563ffc6cbae8 -> Node0x563ffc6cbbd8
	Node0x563ffc6cbbd8 -> Node0x563ffc6cc030
	Node0x563ffc6cc030 -> Node0x563ffc6cc370
	Node0x563ffc6cc370 -> Node0x563ffc6cc428
	Node0x563ffc6cc428 -> Node0x563ffc6ccab0
	Node0x563ffc6ccab0 -> Node0x563ffc6ccd38
	Node0x563ffc6ccd38 -> Node0x563ffc6ccbd8
	Node0x563ffc6ccd38 -> Node0x563ffc6ccde0
	Node0x563ffc6ccde0 -> Node0x563ffc6cceb8
	Node0x563ffc6cceb8 -> Node0x563ffc6cef40
	Node0x563ffc6ccbd8 -> Node0x563ffc6cd048
	Node0x563ffc6cd048 -> Node0x563ffc6cd1d8
	Node0x563ffc6cd1d8 -> Node0x563ffc6cd4d8
	Node0x563ffc6cd4d8 -> Node0x563ffc6cd658
	Node0x563ffc6cd658 -> Node0x563ffc6cd720
	Node0x563ffc6cd720 -> Node0x563ffc6cd790
	Node0x563ffc6cd790 -> Node0x563ffc6cd948
	Node0x563ffc6cd948 -> Node0x563ffc6cdcb8
	Node0x563ffc6cd948 -> Node0x563ffc6ce230
	Node0x563ffc6cdb00 -> Node0x563ffc6cdbc0
	Node0x563ffc6cdbc0 -> Node0x563ffc6cdc68
	Node0x563ffc6cdc68 -> Node0x563ffc6cdcb8
	Node0x563ffc6cdc68 -> Node0x563ffc6ce230
	Node0x563ffc6cdcb8 -> Node0x563ffc6cdd80
	Node0x563ffc6cdd80 -> Node0x563ffc6cde10
	Node0x563ffc6cde10 -> Node0x563ffc6ce1b8
	Node0x563ffc6ce1b8 -> Node0x563ffc6ce478
	Node0x563ffc6ce1b8 -> Node0x563ffc6cdb00
	Node0x563ffc6ce230 -> Node0x563ffc6cd8b8
	Node0x563ffc6cd8b8 -> Node0x563ffc6ce2d8
	Node0x563ffc6ce2d8 -> Node0x563ffc6ce390
	Node0x563ffc6ce390 -> Node0x563ffc6ce410
	Node0x563ffc6ce410 -> Node0x563ffc6cda28
	Node0x563ffc6cda28 -> Node0x563ffc6ce478
	Node0x563ffc6ce478 -> Node0x563ffc6ce518
	Node0x563ffc6ce518 -> Node0x563ffc6ce5e0
	Node0x563ffc6ce5e0 -> Node0x563ffc6ce6d8
	Node0x563ffc6ce6d8 -> Node0x563ffc6cd1d8
	Node0x563ffc6ce6d8 -> Node0x563ffc6ce750
	Node0x563ffc6ce750 -> Node0x563ffc6ce838
	Node0x563ffc6ce838 -> Node0x563ffc6ce8d8
	Node0x563ffc6ce838 -> Node0x563ffc6cef40
	Node0x563ffc6ce8d8 -> Node0x563ffc6cd5a8
	Node0x563ffc6cd5a8 -> Node0x563ffc6cea08
	Node0x563ffc6cea08 -> Node0x563ffc6cd128
	Node0x563ffc6cd128 -> Node0x563ffc6ceb78
	Node0x563ffc6ceb78 -> Node0x563ffc6ccfe8
	Node0x563ffc6ccfe8 -> Node0x563ffc6cec50
	Node0x563ffc6cec50 -> Node0x563ffc6cecc0
	Node0x563ffc6cecc0 -> Node0x563ffc6cd428
	Node0x563ffc6cd428 -> Node0x563ffc6ced40
	Node0x563ffc6ced40 -> Node0x563ffc6cede8
	Node0x563ffc6cede8 -> Node0x563ffc6ce8d8
	Node0x563ffc6cede8 -> Node0x563ffc6cef40
	Node0x563ffc6cef40 -> Node0x563ffc6cf108
	Node0x563ffc6cf108 -> Node0x563ffc6cf218
	Node0x563ffc6cf218 -> Node0x563ffc6cf328
	Node0x563ffc6cf328 -> Node0x563ffc6cf3e8
edge [color=red]
	Node0x563ffc6c85a8 -> Node0x563ffc6c8768[label="1"]
	Node0x563ffc6c8768 -> Node0x563ffc6cb918[label="2"]
	Node0x563ffc6c88e8 -> Node0x563ffc6c83f8[label="3"]
	Node0x563ffc6c83f8 -> Node0x563ffc6cba28[label="4"]
	Node0x563ffc6c8a68 -> Node0x563ffc6cbae8[label="5"]
	Node0x563ffc6cbae8 -> Node0x563ffc6cbbd8[label="6"]
	Node0x563ffc6c85a8 -> Node0x563ffc6cc370[label="7"]
	Node0x563ffc6c88e8 -> Node0x563ffc6cc370[label="8"]
	Node0x563ffc6c88e8 -> Node0x563ffc6cc428[label="9"]
	Node0x563ffc6cc428 -> Node0x563ffc6ccab0[label="10"]
	Node0x563ffc6ccab0 -> Node0x563ffc6ccd38[label="11"]
	Node0x563ffc6c7b10 -> Node0x563ffc6ccde0[label="12"]
	Node0x563ffc6ccde0 -> Node0x563ffc6c85a8[label="13"]
	Node0x563ffc6c85a8 -> Node0x563ffc6ccbd8[label="14"]
	Node0x563ffc6cd720 -> Node0x563ffc6cd1d8[label="15"]
	Node0x563ffc6ccbd8 -> Node0x563ffc6cd1d8[label="16"]
	Node0x563ffc6ce518 -> Node0x563ffc6cd4d8[label="17"]
	Node0x563ffc6ce478 -> Node0x563ffc6cd658[label="18"]
	Node0x563ffc6cc428 -> Node0x563ffc6cd658[label="19"]
	Node0x563ffc6cd1d8 -> Node0x563ffc6cd720[label="20"]
	Node0x563ffc6cd1d8 -> Node0x563ffc6cd790[label="21"]
	Node0x563ffc6cd790 -> Node0x563ffc6cd948[label="22"]
	Node0x563ffc6cdcb8 -> Node0x563ffc6cdb00[label="23"]
	Node0x563ffc6cdcb8 -> Node0x563ffc6cdbc0[label="24"]
	Node0x563ffc6cd1d8 -> Node0x563ffc6cdbc0[label="25"]
	Node0x563ffc6cdbc0 -> Node0x563ffc6cdc68[label="26"]
	Node0x563ffc6cdb00 -> Node0x563ffc6cdcb8[label="27"]
	Node0x563ffc6cd720 -> Node0x563ffc6cdd80[label="28"]
	Node0x563ffc6cdcb8 -> Node0x563ffc6cdd80[label="29"]
	Node0x563ffc6cdd80 -> Node0x563ffc6cde10[label="30"]
	Node0x563ffc6cde10 -> Node0x563ffc6ce1b8[label="31"]
	Node0x563ffc6cd4d8 -> Node0x563ffc6ce230[label="32"]
	Node0x563ffc6cd4d8 -> Node0x563ffc6cd8b8[label="33"]
	Node0x563ffc6c8a68 -> Node0x563ffc6ce2d8[label="34"]
	Node0x563ffc6cd8b8 -> Node0x563ffc6ce2d8[label="35"]
	Node0x563ffc6cd720 -> Node0x563ffc6ce390[label="36"]
	Node0x563ffc6ce390 -> Node0x563ffc6ce2d8[label="37"]
	Node0x563ffc6cd658 -> Node0x563ffc6ce410[label="38"]
	Node0x563ffc6ce410 -> Node0x563ffc6ce478[label="39"]
	Node0x563ffc6cd658 -> Node0x563ffc6ce478[label="40"]
	Node0x563ffc6ce230 -> Node0x563ffc6ce518[label="41"]
	Node0x563ffc6cd4d8 -> Node0x563ffc6ce518[label="42"]
	Node0x563ffc6ce478 -> Node0x563ffc6ce5e0[label="43"]
	Node0x563ffc6ce5e0 -> Node0x563ffc6ce6d8[label="44"]
	Node0x563ffc6c7b10 -> Node0x563ffc6ce750[label="45"]
	Node0x563ffc6ce750 -> Node0x563ffc6c85a8[label="46"]
	Node0x563ffc6ccab0 -> Node0x563ffc6ce838[label="47"]
	Node0x563ffc6cec50 -> Node0x563ffc6ce8d8[label="48"]
	Node0x563ffc6ce8d8 -> Node0x563ffc6cd5a8[label="49"]
	Node0x563ffc6c8a68 -> Node0x563ffc6cea08[label="50"]
	Node0x563ffc6cd5a8 -> Node0x563ffc6cea08[label="51"]
	Node0x563ffc6cea08 -> Node0x563ffc6cd128[label="52"]
	Node0x563ffc6cd128 -> Node0x563ffc6ceb78[label="53"]
	Node0x563ffc6c85a8 -> Node0x563ffc6ccfe8[label="54"]
	Node0x563ffc6ccfe8 -> Node0x563ffc6cec50[label="55"]
	Node0x563ffc6cec50 -> Node0x563ffc6cecc0[label="56"]
	Node0x563ffc6cecc0 -> Node0x563ffc6c85a8[label="57"]
	Node0x563ffc6c88e8 -> Node0x563ffc6cd428[label="58"]
	Node0x563ffc6cec50 -> Node0x563ffc6ced40[label="59"]
	Node0x563ffc6cd428 -> Node0x563ffc6ced40[label="60"]
	Node0x563ffc6ced40 -> Node0x563ffc6cede8[label="61"]
	Node0x563ffc6cbae8 -> Node0x563ffc6cf108[label="62"]
	Node0x563ffc6c83f8 -> Node0x563ffc6cf218[label="63"]
	Node0x563ffc6c8768 -> Node0x563ffc6cf328[label="64"]
}
