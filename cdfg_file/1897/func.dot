digraph "CDFG for'func' function" {
	Node0x55bc8787cfd8[shape=record, label="  br label %for.cond1.preheader"]
	Node0x55bc8787d790[shape=record, label="  %add1030 = add nuw nsw i32 %i.028, 4"]
	Node0x55bc8787d850[shape=record, label="  %cmp = icmp ult i32 %add1030, 10000"]
	Node0x55bc87806c98[shape=record, label="  br i1 %cmp, label %for.cond1.preheader, label %for.end11"]
	Node0x55bc8787d9f8[shape=record, label="  %i.028 = phi i32 [ 4, %entry ], [ %add1030, %for.cond ]"]
	Node0x55bc8787dac0[shape=record, label="  %div.udiv = lshr exact i32 %i.028, 2"]
	Node0x55bc8787db60[shape=record, label="  %mul = mul nuw nsw i32 %div.udiv, 5"]
	Node0x55bc8787dc00[shape=record, label="  %add = add nuw nsw i32 %mul, 1"]
	Node0x55bc8787dcc0[shape=record, label="  %rem24 = and i32 %add, 3"]
	Node0x55bc8787dd80[shape=record, label="  %cmp4 = icmp eq i32 %rem24, 0"]
	Node0x55bc87806db8[shape=record, label="  br i1 %cmp4, label %if.then, label %for.cond"]
	Node0x55bc8787e020[shape=record, label="  %div.1.udiv = lshr i32 %add, 2"]
	Node0x55bc8787e090[shape=record, label="  %mul.1 = mul nuw nsw i32 %div.1.udiv, 5"]
	Node0x55bc8787e120[shape=record, label="  %add.1 = add nuw nsw i32 %mul.1, 1"]
	Node0x55bc8787e1b0[shape=record, label="  %rem24.1 = and i32 %add.1, 3"]
	Node0x55bc8787e240[shape=record, label="  %cmp4.1 = icmp eq i32 %rem24.1, 0"]
	Node0x55bc87812228[shape=record, label="  br i1 %cmp4.1, label %if.then.1, label %for.cond"]
	Node0x55bc8787e6f8[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 4)"]
	Node0x55bc8787e7d8[shape=record, label="  br label %for.end11"]
	Node0x55bc8787e820[shape=record, label="  ret void"]
	Node0x55bc8787e890[shape=record, label="  %div.2 = lshr i32 %add.1, 2"]
	Node0x55bc8787e920[shape=record, label="  %mul.2 = mul nuw nsw i32 %div.2, 5"]
	Node0x55bc8787e9b0[shape=record, label="  %add.2 = add nuw nsw i32 %mul.2, 1"]
	Node0x55bc8787ea40[shape=record, label="  %rem24.2 = and i32 %add.2, 3"]
	Node0x55bc8787edf0[shape=record, label="  %cmp4.2 = icmp eq i32 %rem24.2, 0"]
	Node0x55bc87812468[shape=record, label="  br i1 %cmp4.2, label %if.then.2, label %for.cond"]
	Node0x55bc8787ef00[shape=record, label="  %div.3 = lshr i32 %add.2, 2"]
	Node0x55bc8787ef90[shape=record, label="  %mul.3 = mul nuw nsw i32 %div.3, 5"]
	Node0x55bc8787f020[shape=record, label="  %add.3 = add nuw nsw i32 %mul.3, 1"]
	Node0x55bc8787f0b0[shape=record, label="  %rem24.3 = and i32 %add.3, 3"]
	Node0x55bc8787f140[shape=record, label="  %cmp4.3 = icmp eq i32 %rem24.3, 0"]
	Node0x55bc87812588[shape=record, label="  br i1 %cmp4.3, label %if.then.3, label %for.cond"]
	Node0x55bc8787f250[shape=record, label="  %div.4 = lshr i32 %add.3, 2"]
	Node0x55bc8787f2e0[shape=record, label="  %mul.4 = mul nuw nsw i32 %div.4, 5"]
	Node0x55bc8787f370[shape=record, label="  %add.4 = add nuw nsw i32 %mul.4, 1"]
	Node0x55bc8787f400[shape=record, label="  %rem24.4 = and i32 %add.4, 3"]
	Node0x55bc8787f490[shape=record, label="  %cmp4.4 = icmp eq i32 %rem24.4, 0"]
	Node0x55bc8787f538[shape=record, label="  br i1 %cmp4.4, label %for.cond, label %if.then7"]
	Node0x55bc8787cfd8 -> Node0x55bc8787d9f8
	Node0x55bc8787d790 -> Node0x55bc8787d850
	Node0x55bc8787d850 -> Node0x55bc87806c98
	Node0x55bc87806c98 -> Node0x55bc8787d9f8
	Node0x55bc87806c98 -> Node0x55bc8787e820
	Node0x55bc8787d9f8 -> Node0x55bc8787dac0
	Node0x55bc8787dac0 -> Node0x55bc8787db60
	Node0x55bc8787db60 -> Node0x55bc8787dc00
	Node0x55bc8787dc00 -> Node0x55bc8787dcc0
	Node0x55bc8787dcc0 -> Node0x55bc8787dd80
	Node0x55bc8787dd80 -> Node0x55bc87806db8
	Node0x55bc87806db8 -> Node0x55bc8787e020
	Node0x55bc87806db8 -> Node0x55bc8787d790
	Node0x55bc8787e020 -> Node0x55bc8787e090
	Node0x55bc8787e090 -> Node0x55bc8787e120
	Node0x55bc8787e120 -> Node0x55bc8787e1b0
	Node0x55bc8787e1b0 -> Node0x55bc8787e240
	Node0x55bc8787e240 -> Node0x55bc87812228
	Node0x55bc87812228 -> Node0x55bc8787e890
	Node0x55bc87812228 -> Node0x55bc8787d790
	Node0x55bc8787e6f8 -> Node0x55bc8787e7d8
	Node0x55bc8787e7d8 -> Node0x55bc8787e820
	Node0x55bc8787e890 -> Node0x55bc8787e920
	Node0x55bc8787e920 -> Node0x55bc8787e9b0
	Node0x55bc8787e9b0 -> Node0x55bc8787ea40
	Node0x55bc8787ea40 -> Node0x55bc8787edf0
	Node0x55bc8787edf0 -> Node0x55bc87812468
	Node0x55bc87812468 -> Node0x55bc8787ef00
	Node0x55bc87812468 -> Node0x55bc8787d790
	Node0x55bc8787ef00 -> Node0x55bc8787ef90
	Node0x55bc8787ef90 -> Node0x55bc8787f020
	Node0x55bc8787f020 -> Node0x55bc8787f0b0
	Node0x55bc8787f0b0 -> Node0x55bc8787f140
	Node0x55bc8787f140 -> Node0x55bc87812588
	Node0x55bc87812588 -> Node0x55bc8787f250
	Node0x55bc87812588 -> Node0x55bc8787d790
	Node0x55bc8787f250 -> Node0x55bc8787f2e0
	Node0x55bc8787f2e0 -> Node0x55bc8787f370
	Node0x55bc8787f370 -> Node0x55bc8787f400
	Node0x55bc8787f400 -> Node0x55bc8787f490
	Node0x55bc8787f490 -> Node0x55bc8787f538
	Node0x55bc8787f538 -> Node0x55bc8787d790
	Node0x55bc8787f538 -> Node0x55bc8787e6f8
edge [color=red]
	Node0x55bc8787d9f8 -> Node0x55bc8787d790[label="1"]
	Node0x55bc8787d790 -> Node0x55bc8787d850[label="2"]
	Node0x55bc8787d850 -> Node0x55bc87806c98[label="3"]
	Node0x55bc8787d790 -> Node0x55bc8787d9f8[label="4"]
	Node0x55bc8787d9f8 -> Node0x55bc8787dac0[label="5"]
	Node0x55bc8787dac0 -> Node0x55bc8787db60[label="6"]
	Node0x55bc8787db60 -> Node0x55bc8787dc00[label="7"]
	Node0x55bc8787dc00 -> Node0x55bc8787dcc0[label="8"]
	Node0x55bc8787dcc0 -> Node0x55bc8787dd80[label="9"]
	Node0x55bc8787dd80 -> Node0x55bc87806db8[label="10"]
	Node0x55bc8787dc00 -> Node0x55bc8787e020[label="11"]
	Node0x55bc8787e020 -> Node0x55bc8787e090[label="12"]
	Node0x55bc8787e090 -> Node0x55bc8787e120[label="13"]
	Node0x55bc8787e120 -> Node0x55bc8787e1b0[label="14"]
	Node0x55bc8787e1b0 -> Node0x55bc8787e240[label="15"]
	Node0x55bc8787e240 -> Node0x55bc87812228[label="16"]
	Node0x55bc8787e120 -> Node0x55bc8787e890[label="17"]
	Node0x55bc8787e890 -> Node0x55bc8787e920[label="18"]
	Node0x55bc8787e920 -> Node0x55bc8787e9b0[label="19"]
	Node0x55bc8787e9b0 -> Node0x55bc8787ea40[label="20"]
	Node0x55bc8787ea40 -> Node0x55bc8787edf0[label="21"]
	Node0x55bc8787edf0 -> Node0x55bc87812468[label="22"]
	Node0x55bc8787e9b0 -> Node0x55bc8787ef00[label="23"]
	Node0x55bc8787ef00 -> Node0x55bc8787ef90[label="24"]
	Node0x55bc8787ef90 -> Node0x55bc8787f020[label="25"]
	Node0x55bc8787f020 -> Node0x55bc8787f0b0[label="26"]
	Node0x55bc8787f0b0 -> Node0x55bc8787f140[label="27"]
	Node0x55bc8787f140 -> Node0x55bc87812588[label="28"]
	Node0x55bc8787f020 -> Node0x55bc8787f250[label="29"]
	Node0x55bc8787f250 -> Node0x55bc8787f2e0[label="30"]
	Node0x55bc8787f2e0 -> Node0x55bc8787f370[label="31"]
	Node0x55bc8787f370 -> Node0x55bc8787f400[label="32"]
	Node0x55bc8787f400 -> Node0x55bc8787f490[label="33"]
	Node0x55bc8787f490 -> Node0x55bc8787f538[label="34"]
}
