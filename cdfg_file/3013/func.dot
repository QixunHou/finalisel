digraph "CDFG for'func' function" {
	Node0x561f8e974d18[shape=record, label="  %anInteger = alloca i32, align 4"]
	Node0x561f8e9753e8[shape=record, label="  %0 = bitcast i32* %anInteger to i8*"]
	Node0x561f8e975848[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x561f8e975940[shape=record, label="  store i32 0, i32* %anInteger, align 4, !tbaa !2"]
	Node0x561f8e976bc0[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0))"]
	Node0x561f8e976e28[shape=record, label="  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %anInteger)"]
	Node0x561f8e976ee8[shape=record, label="  %1 = load i32, i32* %anInteger, align 4, !tbaa !2"]
	Node0x561f8e977610[shape=record, label="  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0))"]
	Node0x561f8e977780[shape=record, label="  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0))"]
	Node0x561f8e977880[shape=record, label="  %conv = shl i32 %1, 24"]
	Node0x561f8e977940[shape=record, label="  %sext = add i32 %conv, 805306368"]
	Node0x561f8e9779d0[shape=record, label="  %conv4 = ashr exact i32 %sext, 24"]
	Node0x561f8e977a60[shape=record, label="  store i32 %conv4, i32* %anInteger, align 4, !tbaa !2"]
	Node0x561f8e977b98[shape=record, label="  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i32 %conv4)"]
	Node0x561f8e977dd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x561f8e977e98[shape=record, label="  ret i32 0"]
	Node0x561f8e974d18 -> Node0x561f8e9753e8
	Node0x561f8e9753e8 -> Node0x561f8e975848
	Node0x561f8e975848 -> Node0x561f8e975940
	Node0x561f8e975940 -> Node0x561f8e976bc0
	Node0x561f8e976bc0 -> Node0x561f8e976e28
	Node0x561f8e976e28 -> Node0x561f8e976ee8
	Node0x561f8e976ee8 -> Node0x561f8e977610
	Node0x561f8e977610 -> Node0x561f8e977780
	Node0x561f8e977780 -> Node0x561f8e977880
	Node0x561f8e977880 -> Node0x561f8e977940
	Node0x561f8e977940 -> Node0x561f8e9779d0
	Node0x561f8e9779d0 -> Node0x561f8e977a60
	Node0x561f8e977a60 -> Node0x561f8e977b98
	Node0x561f8e977b98 -> Node0x561f8e977dd8
	Node0x561f8e977dd8 -> Node0x561f8e977e98
edge [color=red]
	Node0x561f8e974d18 -> Node0x561f8e9753e8[label="1"]
	Node0x561f8e9753e8 -> Node0x561f8e975848[label="2"]
	Node0x561f8e975450 -> Node0x561f8e975940[label="3"]
	Node0x561f8e975940 -> Node0x561f8e974d18[label="4"]
	Node0x561f8e974d18 -> Node0x561f8e976e28[label="5"]
	Node0x561f8e974d18 -> Node0x561f8e976ee8[label="6"]
	Node0x561f8e976ee8 -> Node0x561f8e977880[label="7"]
	Node0x561f8e977880 -> Node0x561f8e977940[label="8"]
	Node0x561f8e977940 -> Node0x561f8e9779d0[label="9"]
	Node0x561f8e9779d0 -> Node0x561f8e977a60[label="10"]
	Node0x561f8e977a60 -> Node0x561f8e974d18[label="11"]
	Node0x561f8e9779d0 -> Node0x561f8e977b98[label="12"]
	Node0x561f8e9753e8 -> Node0x561f8e977dd8[label="13"]
}
