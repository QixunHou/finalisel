digraph "CDFG for'main' function" {
	Node0x55869394cf58[shape=record, label="  %call = tail call i32 (...) @clrscr() #4"]
	Node0x55869394d3c0[shape=record, label="  %puts = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @str, i64 0, i64 0))"]
	Node0x55869394d550[shape=record, label="  %puts52 = tail call i32 @puts(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.9, i64 0, i64 0))"]
	Node0x55869394d6c0[shape=record, label="  %puts53 = tail call i32 @puts(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.8, i64 0, i64 0))"]
	Node0x55869394d8c0[shape=record, label="  tail call void @print(i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 0))"]
	Node0x55869394da58[shape=record, label="  br label %while.cond"]
	Node0x55869394d9f8[shape=record, label="  %0 = load <4 x i32>, <4 x i32>* bitcast ([10 x i32]* @main.sweet to <4 x i32>*), align 16"]
	Node0x55869394e140[shape=record, label="  %1 = extractelement <4 x i32> %0, i32 0"]
	Node0x55869394e2a8[shape=record, label="  %2 = load <4 x i32>, <4 x i32>* bitcast (i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 4) to <4 x i32>*), align 16"]
	Node0x5586938df348[shape=record, label="  %3 = shufflevector <4 x i32> %0, <4 x i32> undef, <4 x i32> zeroinitializer"]
	Node0x5586938df468[shape=record, label="  %4 = shufflevector <4 x i32> %0, <4 x i32> %2, <4 x i32> <i32 1, i32 2, i32 3, i32 4>"]
	Node0x55869394ec80[shape=record, label="  %5 = icmp eq <4 x i32> %3, %4"]
	Node0x55869394ecf0[shape=record, label="  %6 = extractelement <4 x i32> %2, i32 1"]
	Node0x55869394ed60[shape=record, label="  %cmp2.5.i = icmp eq i32 %1, %6"]
	Node0x55869394edd0[shape=record, label="  %7 = extractelement <4 x i32> %2, i32 2"]
	Node0x55869394ee40[shape=record, label="  %cmp2.6.i = icmp eq i32 %1, %7"]
	Node0x55869394eee0[shape=record, label="  %8 = extractelement <4 x i32> %2, i32 3"]
	Node0x55869394ef50[shape=record, label="  %cmp2.7.i = icmp eq i32 %1, %8"]
	Node0x55869394f2d8[shape=record, label="  %rdx.shuf = shufflevector <4 x i1> %5, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>"]
	Node0x55869394f380[shape=record, label="  %bin.rdx = and <4 x i1> %5, %rdx.shuf"]
	Node0x55869394f4a8[shape=record, label="  %rdx.shuf74 = shufflevector <4 x i1> %bin.rdx, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>"]
	Node0x55869394f550[shape=record, label="  %bin.rdx75 = and <4 x i1> %bin.rdx, %rdx.shuf74"]
	Node0x55869394f790[shape=record, label="  %9 = extractelement <4 x i1> %bin.rdx75, i32 0"]
	Node0x55869394f800[shape=record, label="  %10 = and i1 %9, %cmp2.5.i"]
	Node0x55869394f870[shape=record, label="  %11 = and i1 %10, %cmp2.6.i"]
	Node0x55869394f8e0[shape=record, label="  %12 = and i1 %11, %cmp2.7.i"]
	Node0x55869394fa08[shape=record, label="  %13 = load i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 8), align 16"]
	Node0x55869394fa80[shape=record, label="  %cmp2.8.i = icmp eq i32 %1, %13"]
	Node0x55869394fb20[shape=record, label="  %or.cond62 = and i1 %12, %cmp2.8.i"]
	Node0x55869394fc58[shape=record, label="  %14 = load i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 9), align 4"]
	Node0x55869394fcd0[shape=record, label="  %cmp2.9.i = icmp eq i32 %1, %14"]
	Node0x55869394fd70[shape=record, label="  %tobool = and i1 %or.cond62, %cmp2.9.i"]
	Node0x55869394ffb8[shape=record, label="  br i1 %tobool, label %while.end, label %for.body.preheader"]
	Node0x558693950090[shape=record, label="  %15 = and <4 x i32> %0, <i32 1, i32 1, i32 1, i32 1>"]
	Node0x558693950100[shape=record, label="  %16 = add nsw <4 x i32> %0, %15"]
	Node0x5586939501d0[shape=record, label="  %17 = sdiv <4 x i32> %16, <i32 2, i32 2, i32 2, i32 2>"]
	Node0x558693950240[shape=record, label="  store <4 x i32> %17, <4 x i32>* bitcast ([10 x i32]* @main.sweet to <4 x i32>*), align 16, !tbaa !2"]
	Node0x558693951150[shape=record, label="  %18 = and <4 x i32> %2, <i32 1, i32 1, i32 1, i32 1>"]
	Node0x5586939511c0[shape=record, label="  %19 = add nsw <4 x i32> %2, %18"]
	Node0x558693951230[shape=record, label="  %20 = sdiv <4 x i32> %19, <i32 2, i32 2, i32 2, i32 2>"]
	Node0x5586939512c0[shape=record, label="  store <4 x i32> %20, <4 x i32>* bitcast (i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 4) to <4 x i32>*), align 16, !tbaa !2"]
	Node0x558693951950[shape=record, label="  %rem55.8 = and i32 %13, 1"]
	Node0x5586939519c0[shape=record, label="  %storemerge69.in = add nsw i32 %13, %rem55.8"]
	Node0x558693951a90[shape=record, label="  %storemerge69 = sdiv i32 %storemerge69.in, 2"]
	Node0x558693951b20[shape=record, label="  store i32 %storemerge69, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 8), align 16, !tbaa !2"]
	Node0x558693951ba0[shape=record, label="  %rem55.9 = and i32 %14, 1"]
	Node0x558693951c10[shape=record, label="  %.in = add nsw i32 %14, %rem55.9"]
	Node0x558693951ca0[shape=record, label="  %21 = sdiv i32 %.in, 2"]
	Node0x558693951d10[shape=record, label="  %22 = extractelement <4 x i32> %17, i32 0"]
	Node0x558693951d80[shape=record, label="  %23 = extractelement <4 x i32> %17, i32 1"]
	Node0x558693951df0[shape=record, label="  %add27 = add nsw i32 %22, %23"]
	Node0x558693952270[shape=record, label="  store i32 %add27, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 1), align 4, !tbaa !2"]
	Node0x5586939522f0[shape=record, label="  %24 = extractelement <4 x i32> %17, i32 2"]
	Node0x558693952360[shape=record, label="  %add27.1 = add nsw i32 %23, %24"]
	Node0x5586939524a0[shape=record, label="  store i32 %add27.1, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 2), align 8, !tbaa !2"]
	Node0x558693952520[shape=record, label="  %25 = extractelement <4 x i32> %17, i32 3"]
	Node0x558693952590[shape=record, label="  %add27.2 = add nsw i32 %24, %25"]
	Node0x5586939526d0[shape=record, label="  store i32 %add27.2, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 3), align 4, !tbaa !2"]
	Node0x558693952750[shape=record, label="  %26 = extractelement <4 x i32> %20, i32 0"]
	Node0x5586939527c0[shape=record, label="  %add27.3 = add nsw i32 %25, %26"]
	Node0x558693952850[shape=record, label="  store i32 %add27.3, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 4), align 16, !tbaa !2"]
	Node0x5586939528d0[shape=record, label="  %27 = extractelement <4 x i32> %20, i32 1"]
	Node0x558693952940[shape=record, label="  %add27.4 = add nsw i32 %26, %27"]
	Node0x558693952a80[shape=record, label="  store i32 %add27.4, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 5), align 4, !tbaa !2"]
	Node0x558693952b00[shape=record, label="  %28 = extractelement <4 x i32> %20, i32 2"]
	Node0x558693952b70[shape=record, label="  %add27.5 = add nsw i32 %27, %28"]
	Node0x558693952cb0[shape=record, label="  store i32 %add27.5, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 6), align 8, !tbaa !2"]
	Node0x558693952d30[shape=record, label="  %29 = extractelement <4 x i32> %20, i32 3"]
	Node0x558693952da0[shape=record, label="  %add27.6 = add nsw i32 %28, %29"]
	Node0x558693952ee0[shape=record, label="  store i32 %add27.6, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 7), align 4, !tbaa !2"]
	Node0x558693952f60[shape=record, label="  %add27.7 = add nsw i32 %29, %storemerge69"]
	Node0x558693952ff0[shape=record, label="  store i32 %add27.7, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 8), align 16, !tbaa !2"]
	Node0x558693953070[shape=record, label="  %add27.8 = add nsw i32 %storemerge69, %21"]
	Node0x558693953100[shape=record, label="  store i32 %add27.8, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 9), align 4, !tbaa !2"]
	Node0x558693953180[shape=record, label="  %add35 = add nsw i32 %22, %21"]
	Node0x558693953210[shape=record, label="  store i32 %add35, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 0), align 16, !tbaa !2"]
	Node0x558693953290[shape=record, label="  tail call void @print(i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.sweet, i64 0, i64 0))"]
	Node0x55869394ff08[shape=record, label="  br label %while.cond"]
	Node0x558693953360[shape=record, label="  %puts54 = tail call i32 @puts(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.9, i64 0, i64 0))"]
	Node0x558693953f10[shape=record, label="  %call37 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0))"]
	Node0x558693954148[shape=record, label="  %call38 = tail call i32 (...) @getch() #4"]
	Node0x558693954210[shape=record, label="  ret void"]
	Node0x55869394cf58 -> Node0x55869394d3c0
	Node0x55869394d3c0 -> Node0x55869394d550
	Node0x55869394d550 -> Node0x55869394d6c0
	Node0x55869394d6c0 -> Node0x55869394d8c0
	Node0x55869394d8c0 -> Node0x55869394da58
	Node0x55869394da58 -> Node0x55869394d9f8
	Node0x55869394d9f8 -> Node0x55869394e140
	Node0x55869394e140 -> Node0x55869394e2a8
	Node0x55869394e2a8 -> Node0x5586938df348
	Node0x5586938df348 -> Node0x5586938df468
	Node0x5586938df468 -> Node0x55869394ec80
	Node0x55869394ec80 -> Node0x55869394ecf0
	Node0x55869394ecf0 -> Node0x55869394ed60
	Node0x55869394ed60 -> Node0x55869394edd0
	Node0x55869394edd0 -> Node0x55869394ee40
	Node0x55869394ee40 -> Node0x55869394eee0
	Node0x55869394eee0 -> Node0x55869394ef50
	Node0x55869394ef50 -> Node0x55869394f2d8
	Node0x55869394f2d8 -> Node0x55869394f380
	Node0x55869394f380 -> Node0x55869394f4a8
	Node0x55869394f4a8 -> Node0x55869394f550
	Node0x55869394f550 -> Node0x55869394f790
	Node0x55869394f790 -> Node0x55869394f800
	Node0x55869394f800 -> Node0x55869394f870
	Node0x55869394f870 -> Node0x55869394f8e0
	Node0x55869394f8e0 -> Node0x55869394fa08
	Node0x55869394fa08 -> Node0x55869394fa80
	Node0x55869394fa80 -> Node0x55869394fb20
	Node0x55869394fb20 -> Node0x55869394fc58
	Node0x55869394fc58 -> Node0x55869394fcd0
	Node0x55869394fcd0 -> Node0x55869394fd70
	Node0x55869394fd70 -> Node0x55869394ffb8
	Node0x55869394ffb8 -> Node0x558693953360
	Node0x55869394ffb8 -> Node0x558693950090
	Node0x558693950090 -> Node0x558693950100
	Node0x558693950100 -> Node0x5586939501d0
	Node0x5586939501d0 -> Node0x558693950240
	Node0x558693950240 -> Node0x558693951150
	Node0x558693951150 -> Node0x5586939511c0
	Node0x5586939511c0 -> Node0x558693951230
	Node0x558693951230 -> Node0x5586939512c0
	Node0x5586939512c0 -> Node0x558693951950
	Node0x558693951950 -> Node0x5586939519c0
	Node0x5586939519c0 -> Node0x558693951a90
	Node0x558693951a90 -> Node0x558693951b20
	Node0x558693951b20 -> Node0x558693951ba0
	Node0x558693951ba0 -> Node0x558693951c10
	Node0x558693951c10 -> Node0x558693951ca0
	Node0x558693951ca0 -> Node0x558693951d10
	Node0x558693951d10 -> Node0x558693951d80
	Node0x558693951d80 -> Node0x558693951df0
	Node0x558693951df0 -> Node0x558693952270
	Node0x558693952270 -> Node0x5586939522f0
	Node0x5586939522f0 -> Node0x558693952360
	Node0x558693952360 -> Node0x5586939524a0
	Node0x5586939524a0 -> Node0x558693952520
	Node0x558693952520 -> Node0x558693952590
	Node0x558693952590 -> Node0x5586939526d0
	Node0x5586939526d0 -> Node0x558693952750
	Node0x558693952750 -> Node0x5586939527c0
	Node0x5586939527c0 -> Node0x558693952850
	Node0x558693952850 -> Node0x5586939528d0
	Node0x5586939528d0 -> Node0x558693952940
	Node0x558693952940 -> Node0x558693952a80
	Node0x558693952a80 -> Node0x558693952b00
	Node0x558693952b00 -> Node0x558693952b70
	Node0x558693952b70 -> Node0x558693952cb0
	Node0x558693952cb0 -> Node0x558693952d30
	Node0x558693952d30 -> Node0x558693952da0
	Node0x558693952da0 -> Node0x558693952ee0
	Node0x558693952ee0 -> Node0x558693952f60
	Node0x558693952f60 -> Node0x558693952ff0
	Node0x558693952ff0 -> Node0x558693953070
	Node0x558693953070 -> Node0x558693953100
	Node0x558693953100 -> Node0x558693953180
	Node0x558693953180 -> Node0x558693953210
	Node0x558693953210 -> Node0x558693953290
	Node0x558693953290 -> Node0x55869394ff08
	Node0x55869394ff08 -> Node0x55869394d9f8
	Node0x558693953360 -> Node0x558693953f10
	Node0x558693953f10 -> Node0x558693954148
	Node0x558693954148 -> Node0x558693954210
edge [color=red]
	Node0x55869394e0c8 -> Node0x55869394d9f8[label="1"]
	Node0x55869394d9f8 -> Node0x55869394e140[label="2"]
	Node0x55869394e268 -> Node0x55869394e2a8[label="3"]
	Node0x55869394d9f8 -> Node0x5586938df348[label="4"]
	Node0x55869394d9f8 -> Node0x5586938df468[label="5"]
	Node0x55869394e2a8 -> Node0x5586938df468[label="6"]
	Node0x5586938df348 -> Node0x55869394ec80[label="7"]
	Node0x5586938df468 -> Node0x55869394ec80[label="8"]
	Node0x55869394e2a8 -> Node0x55869394ecf0[label="9"]
	Node0x55869394e140 -> Node0x55869394ed60[label="10"]
	Node0x55869394ecf0 -> Node0x55869394ed60[label="11"]
	Node0x55869394e2a8 -> Node0x55869394edd0[label="12"]
	Node0x55869394e140 -> Node0x55869394ee40[label="13"]
	Node0x55869394edd0 -> Node0x55869394ee40[label="14"]
	Node0x55869394e2a8 -> Node0x55869394eee0[label="15"]
	Node0x55869394e140 -> Node0x55869394ef50[label="16"]
	Node0x55869394eee0 -> Node0x55869394ef50[label="17"]
	Node0x55869394ec80 -> Node0x55869394f2d8[label="18"]
	Node0x55869394ec80 -> Node0x55869394f380[label="19"]
	Node0x55869394f2d8 -> Node0x55869394f380[label="20"]
	Node0x55869394f380 -> Node0x55869394f4a8[label="21"]
	Node0x55869394f380 -> Node0x55869394f550[label="22"]
	Node0x55869394f4a8 -> Node0x55869394f550[label="23"]
	Node0x55869394f550 -> Node0x55869394f790[label="24"]
	Node0x55869394f790 -> Node0x55869394f800[label="25"]
	Node0x55869394ed60 -> Node0x55869394f800[label="26"]
	Node0x55869394f800 -> Node0x55869394f870[label="27"]
	Node0x55869394ee40 -> Node0x55869394f870[label="28"]
	Node0x55869394f870 -> Node0x55869394f8e0[label="29"]
	Node0x55869394ef50 -> Node0x55869394f8e0[label="30"]
	Node0x55869394f9b8 -> Node0x55869394fa08[label="31"]
	Node0x55869394e140 -> Node0x55869394fa80[label="32"]
	Node0x55869394fa08 -> Node0x55869394fa80[label="33"]
	Node0x55869394f8e0 -> Node0x55869394fb20[label="34"]
	Node0x55869394fa80 -> Node0x55869394fb20[label="35"]
	Node0x55869394fc08 -> Node0x55869394fc58[label="36"]
	Node0x55869394e140 -> Node0x55869394fcd0[label="37"]
	Node0x55869394fc58 -> Node0x55869394fcd0[label="38"]
	Node0x55869394fb20 -> Node0x55869394fd70[label="39"]
	Node0x55869394fcd0 -> Node0x55869394fd70[label="40"]
	Node0x55869394fd70 -> Node0x55869394ffb8[label="41"]
	Node0x55869394d9f8 -> Node0x558693950090[label="42"]
	Node0x55869394d9f8 -> Node0x558693950100[label="43"]
	Node0x558693950090 -> Node0x558693950100[label="44"]
	Node0x558693950100 -> Node0x5586939501d0[label="45"]
	Node0x5586939501d0 -> Node0x558693950240[label="46"]
	Node0x558693950240 -> Node0x55869394e0c8[label="47"]
	Node0x55869394e2a8 -> Node0x558693951150[label="48"]
	Node0x55869394e2a8 -> Node0x5586939511c0[label="49"]
	Node0x558693951150 -> Node0x5586939511c0[label="50"]
	Node0x5586939511c0 -> Node0x558693951230[label="51"]
	Node0x558693951230 -> Node0x5586939512c0[label="52"]
	Node0x5586939512c0 -> Node0x55869394e268[label="53"]
	Node0x55869394fa08 -> Node0x558693951950[label="54"]
	Node0x55869394fa08 -> Node0x5586939519c0[label="55"]
	Node0x558693951950 -> Node0x5586939519c0[label="56"]
	Node0x5586939519c0 -> Node0x558693951a90[label="57"]
	Node0x558693951a90 -> Node0x558693951b20[label="58"]
	Node0x558693951b20 -> Node0x55869394f9b8[label="59"]
	Node0x55869394fc58 -> Node0x558693951ba0[label="60"]
	Node0x55869394fc58 -> Node0x558693951c10[label="61"]
	Node0x558693951ba0 -> Node0x558693951c10[label="62"]
	Node0x558693951c10 -> Node0x558693951ca0[label="63"]
	Node0x5586939501d0 -> Node0x558693951d10[label="64"]
	Node0x5586939501d0 -> Node0x558693951d80[label="65"]
	Node0x558693951d10 -> Node0x558693951df0[label="66"]
	Node0x558693951d80 -> Node0x558693951df0[label="67"]
	Node0x558693951df0 -> Node0x558693952270[label="68"]
	Node0x558693952270 -> Node0x558693952208[label="69"]
	Node0x5586939501d0 -> Node0x5586939522f0[label="70"]
	Node0x558693951d80 -> Node0x558693952360[label="71"]
	Node0x5586939522f0 -> Node0x558693952360[label="72"]
	Node0x558693952360 -> Node0x5586939524a0[label="73"]
	Node0x5586939524a0 -> Node0x558693952438[label="74"]
	Node0x5586939501d0 -> Node0x558693952520[label="75"]
	Node0x5586939522f0 -> Node0x558693952590[label="76"]
	Node0x558693952520 -> Node0x558693952590[label="77"]
	Node0x558693952590 -> Node0x5586939526d0[label="78"]
	Node0x5586939526d0 -> Node0x558693952668[label="79"]
	Node0x558693951230 -> Node0x558693952750[label="80"]
	Node0x558693952520 -> Node0x5586939527c0[label="81"]
	Node0x558693952750 -> Node0x5586939527c0[label="82"]
	Node0x5586939527c0 -> Node0x558693952850[label="83"]
	Node0x558693952850 -> Node0x55869394e218[label="84"]
	Node0x558693951230 -> Node0x5586939528d0[label="85"]
	Node0x558693952750 -> Node0x558693952940[label="86"]
	Node0x5586939528d0 -> Node0x558693952940[label="87"]
	Node0x558693952940 -> Node0x558693952a80[label="88"]
	Node0x558693952a80 -> Node0x558693952a18[label="89"]
	Node0x558693951230 -> Node0x558693952b00[label="90"]
	Node0x5586939528d0 -> Node0x558693952b70[label="91"]
	Node0x558693952b00 -> Node0x558693952b70[label="92"]
	Node0x558693952b70 -> Node0x558693952cb0[label="93"]
	Node0x558693952cb0 -> Node0x558693952c48[label="94"]
	Node0x558693951230 -> Node0x558693952d30[label="95"]
	Node0x558693952b00 -> Node0x558693952da0[label="96"]
	Node0x558693952d30 -> Node0x558693952da0[label="97"]
	Node0x558693952da0 -> Node0x558693952ee0[label="98"]
	Node0x558693952ee0 -> Node0x558693952e78[label="99"]
	Node0x558693952d30 -> Node0x558693952f60[label="100"]
	Node0x558693951a90 -> Node0x558693952f60[label="101"]
	Node0x558693952f60 -> Node0x558693952ff0[label="102"]
	Node0x558693952ff0 -> Node0x55869394f9b8[label="103"]
	Node0x558693951a90 -> Node0x558693953070[label="104"]
	Node0x558693951ca0 -> Node0x558693953070[label="105"]
	Node0x558693953070 -> Node0x558693953100[label="106"]
	Node0x558693953100 -> Node0x55869394fc08[label="107"]
	Node0x558693951d10 -> Node0x558693953180[label="108"]
	Node0x558693951ca0 -> Node0x558693953180[label="109"]
	Node0x558693953180 -> Node0x558693953210[label="110"]
	Node0x558693953210 -> Node0x55869394d7c8[label="111"]
}
