digraph "CDFG for'main' function" {
	Node0x558f32f2c5c8[shape=record, label="  %x.i = alloca i32, align 4"]
	Node0x558f32f2f908[shape=record, label="  %y.i = alloca i32, align 4"]
	Node0x558f32f2f988[shape=record, label="  %z.i = alloca i32, align 4"]
	Node0x558f32f2fa08[shape=record, label="  %0 = bitcast i32* %x.i to i8*"]
	Node0x558f32f2fb78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x558f32f2fc38[shape=record, label="  %1 = bitcast i32* %y.i to i8*"]
	Node0x558f32f2fce8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #3"]
	Node0x558f32f2fda8[shape=record, label="  %2 = bitcast i32* %z.i to i8*"]
	Node0x558f32f2fe68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #3"]
	Node0x558f32f2ff88[shape=record, label="  %call.i = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32* nonnull %x.i, i32* nonnull %y.i, i32* nonnull %z.i) #3"]
	Node0x558f32f30048[shape=record, label="  %3 = load i32, i32* %x.i, align 4, !tbaa !2"]
	Node0x558f32f300a8[shape=record, label="  %4 = load i32, i32* %y.i, align 4, !tbaa !2"]
	Node0x558f32f30170[shape=record, label="  %cmp.i = icmp sgt i32 %3, %4"]
	Node0x558f32f30378[shape=record, label="  br i1 %cmp.i, label %if.then.i, label %if.end.i"]
	Node0x558f32f303f0[shape=record, label="  store i32 %4, i32* %x.i, align 4, !tbaa !2"]
	Node0x558f32f30470[shape=record, label="  store i32 %3, i32* %y.i, align 4, !tbaa !2"]
	Node0x558f32f30238[shape=record, label="  br label %if.end.i"]
	Node0x558f32f304c8[shape=record, label="  %5 = phi i32 [ %3, %if.then.i ], [ %4, %entry ]"]
	Node0x558f32f30568[shape=record, label="  %6 = phi i32 [ %4, %if.then.i ], [ %3, %entry ]"]
	Node0x558f32f302e8[shape=record, label="  %7 = load i32, i32* %z.i, align 4, !tbaa !2"]
	Node0x558f32f30630[shape=record, label="  %cmp1.i = icmp sgt i32 %6, %7"]
	Node0x558f32f30a08[shape=record, label="  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i"]
	Node0x558f32f30a80[shape=record, label="  store i32 %6, i32* %z.i, align 4, !tbaa !2"]
	Node0x558f32f30b00[shape=record, label="  store i32 %7, i32* %x.i, align 4, !tbaa !2"]
	Node0x558f32f306f8[shape=record, label="  br label %if.end3.i"]
	Node0x558f32f30b58[shape=record, label="  %8 = phi i32 [ %7, %if.then2.i ], [ %6, %if.end.i ]"]
	Node0x558f32f300f8[shape=record, label="  %9 = phi i32 [ %6, %if.then2.i ], [ %7, %if.end.i ]"]
	Node0x558f32f30d00[shape=record, label="  %cmp4.i = icmp sgt i32 %5, %9"]
	Node0x558f32f30f08[shape=record, label="  br i1 %cmp4.i, label %if.then5.i, label %func.exit"]
	Node0x558f32f30f80[shape=record, label="  store i32 %9, i32* %y.i, align 4, !tbaa !2"]
	Node0x558f32f31000[shape=record, label="  store i32 %5, i32* %z.i, align 4, !tbaa !2"]
	Node0x558f32f30978[shape=record, label="  br label %func.exit"]
	Node0x558f32f31058[shape=record, label="  %10 = phi i32 [ %5, %if.then5.i ], [ %9, %if.end3.i ]"]
	Node0x558f32f310f8[shape=record, label="  %11 = phi i32 [ %9, %if.then5.i ], [ %5, %if.end3.i ]"]
	Node0x558f32f31228[shape=record, label="  %call7.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 %8, i32 %11, i32 %10) #3"]
	Node0x558f32f313f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #3"]
	Node0x558f32f31508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #3"]
	Node0x558f32f31618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x558f32f30e78[shape=record, label="  ret i32 0"]
	Node0x558f32f2c5c8 -> Node0x558f32f2f908
	Node0x558f32f2f908 -> Node0x558f32f2f988
	Node0x558f32f2f988 -> Node0x558f32f2fa08
	Node0x558f32f2fa08 -> Node0x558f32f2fb78
	Node0x558f32f2fb78 -> Node0x558f32f2fc38
	Node0x558f32f2fc38 -> Node0x558f32f2fce8
	Node0x558f32f2fce8 -> Node0x558f32f2fda8
	Node0x558f32f2fda8 -> Node0x558f32f2fe68
	Node0x558f32f2fe68 -> Node0x558f32f2ff88
	Node0x558f32f2ff88 -> Node0x558f32f30048
	Node0x558f32f30048 -> Node0x558f32f300a8
	Node0x558f32f300a8 -> Node0x558f32f30170
	Node0x558f32f30170 -> Node0x558f32f30378
	Node0x558f32f30378 -> Node0x558f32f303f0
	Node0x558f32f30378 -> Node0x558f32f304c8
	Node0x558f32f303f0 -> Node0x558f32f30470
	Node0x558f32f30470 -> Node0x558f32f30238
	Node0x558f32f30238 -> Node0x558f32f304c8
	Node0x558f32f304c8 -> Node0x558f32f30568
	Node0x558f32f30568 -> Node0x558f32f302e8
	Node0x558f32f302e8 -> Node0x558f32f30630
	Node0x558f32f30630 -> Node0x558f32f30a08
	Node0x558f32f30a08 -> Node0x558f32f30a80
	Node0x558f32f30a08 -> Node0x558f32f30b58
	Node0x558f32f30a80 -> Node0x558f32f30b00
	Node0x558f32f30b00 -> Node0x558f32f306f8
	Node0x558f32f306f8 -> Node0x558f32f30b58
	Node0x558f32f30b58 -> Node0x558f32f300f8
	Node0x558f32f300f8 -> Node0x558f32f30d00
	Node0x558f32f30d00 -> Node0x558f32f30f08
	Node0x558f32f30f08 -> Node0x558f32f30f80
	Node0x558f32f30f08 -> Node0x558f32f31058
	Node0x558f32f30f80 -> Node0x558f32f31000
	Node0x558f32f31000 -> Node0x558f32f30978
	Node0x558f32f30978 -> Node0x558f32f31058
	Node0x558f32f31058 -> Node0x558f32f310f8
	Node0x558f32f310f8 -> Node0x558f32f31228
	Node0x558f32f31228 -> Node0x558f32f313f8
	Node0x558f32f313f8 -> Node0x558f32f31508
	Node0x558f32f31508 -> Node0x558f32f31618
	Node0x558f32f31618 -> Node0x558f32f30e78
edge [color=red]
	Node0x558f32f2c5c8 -> Node0x558f32f2fa08[label="1"]
	Node0x558f32f2fa08 -> Node0x558f32f2fb78[label="2"]
	Node0x558f32f2f908 -> Node0x558f32f2fc38[label="3"]
	Node0x558f32f2fc38 -> Node0x558f32f2fce8[label="4"]
	Node0x558f32f2f988 -> Node0x558f32f2fda8[label="5"]
	Node0x558f32f2fda8 -> Node0x558f32f2fe68[label="6"]
	Node0x558f32f2c5c8 -> Node0x558f32f2ff88[label="7"]
	Node0x558f32f2f908 -> Node0x558f32f2ff88[label="8"]
	Node0x558f32f2f988 -> Node0x558f32f2ff88[label="9"]
	Node0x558f32f2c5c8 -> Node0x558f32f30048[label="10"]
	Node0x558f32f2f908 -> Node0x558f32f300a8[label="11"]
	Node0x558f32f30048 -> Node0x558f32f30170[label="12"]
	Node0x558f32f300a8 -> Node0x558f32f30170[label="13"]
	Node0x558f32f30170 -> Node0x558f32f30378[label="14"]
	Node0x558f32f300a8 -> Node0x558f32f303f0[label="15"]
	Node0x558f32f303f0 -> Node0x558f32f2c5c8[label="16"]
	Node0x558f32f30048 -> Node0x558f32f30470[label="17"]
	Node0x558f32f30470 -> Node0x558f32f2f908[label="18"]
	Node0x558f32f30048 -> Node0x558f32f304c8[label="19"]
	Node0x558f32f300a8 -> Node0x558f32f304c8[label="20"]
	Node0x558f32f300a8 -> Node0x558f32f30568[label="21"]
	Node0x558f32f30048 -> Node0x558f32f30568[label="22"]
	Node0x558f32f2f988 -> Node0x558f32f302e8[label="23"]
	Node0x558f32f30568 -> Node0x558f32f30630[label="24"]
	Node0x558f32f302e8 -> Node0x558f32f30630[label="25"]
	Node0x558f32f30630 -> Node0x558f32f30a08[label="26"]
	Node0x558f32f30568 -> Node0x558f32f30a80[label="27"]
	Node0x558f32f30a80 -> Node0x558f32f2f988[label="28"]
	Node0x558f32f302e8 -> Node0x558f32f30b00[label="29"]
	Node0x558f32f30b00 -> Node0x558f32f2c5c8[label="30"]
	Node0x558f32f302e8 -> Node0x558f32f30b58[label="31"]
	Node0x558f32f30568 -> Node0x558f32f30b58[label="32"]
	Node0x558f32f30568 -> Node0x558f32f300f8[label="33"]
	Node0x558f32f302e8 -> Node0x558f32f300f8[label="34"]
	Node0x558f32f304c8 -> Node0x558f32f30d00[label="35"]
	Node0x558f32f300f8 -> Node0x558f32f30d00[label="36"]
	Node0x558f32f30d00 -> Node0x558f32f30f08[label="37"]
	Node0x558f32f300f8 -> Node0x558f32f30f80[label="38"]
	Node0x558f32f30f80 -> Node0x558f32f2f908[label="39"]
	Node0x558f32f304c8 -> Node0x558f32f31000[label="40"]
	Node0x558f32f31000 -> Node0x558f32f2f988[label="41"]
	Node0x558f32f304c8 -> Node0x558f32f31058[label="42"]
	Node0x558f32f300f8 -> Node0x558f32f31058[label="43"]
	Node0x558f32f300f8 -> Node0x558f32f310f8[label="44"]
	Node0x558f32f304c8 -> Node0x558f32f310f8[label="45"]
	Node0x558f32f30b58 -> Node0x558f32f31228[label="46"]
	Node0x558f32f310f8 -> Node0x558f32f31228[label="47"]
	Node0x558f32f31058 -> Node0x558f32f31228[label="48"]
	Node0x558f32f2fda8 -> Node0x558f32f313f8[label="49"]
	Node0x558f32f2fc38 -> Node0x558f32f31508[label="50"]
	Node0x558f32f2fa08 -> Node0x558f32f31618[label="51"]
}
