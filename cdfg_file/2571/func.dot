digraph "CDFG for'func' function" {
	Node0x56439331bea8[shape=record, label="  %a = alloca [10 x float], align 16"]
	Node0x56439331c568[shape=record, label="  %N = alloca i32, align 4"]
	Node0x56439331c5e8[shape=record, label="  %0 = bitcast [10 x float]* %a to i8*"]
	Node0x56439331ca48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #3"]
	Node0x56439331cb28[shape=record, label="  %1 = bitcast i32* %N to i8*"]
	Node0x56439331cc58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #3"]
	Node0x56439331d020[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0))"]
	Node0x56439331d268[shape=record, label="  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %N)"]
	Node0x56439331d3e0[shape=record, label="  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0))"]
	Node0x56439331d498[shape=record, label="  %2 = load i32, i32* %N, align 4, !tbaa !2"]
	Node0x56439331e420[shape=record, label="  %cmp40 = icmp sgt i32 %2, 0"]
	Node0x5643932b0468[shape=record, label="  br i1 %cmp40, label %for.body, label %for.end25"]
	Node0x56439331e7f0[shape=record, label="  %cmp538 = icmp sgt i32 %19, 0"]
	Node0x5643932b0588[shape=record, label="  br i1 %cmp538, label %for.body6.preheader, label %for.end25"]
	Node0x56439331e6e8[shape=record, label="  %wide.trip.count = zext i32 %19 to i64"]
	Node0x56439331eb00[shape=record, label="  %min.iters.check = icmp ult i32 %19, 4"]
	Node0x56439331ed78[shape=record, label="  br i1 %min.iters.check, label %for.body6.preheader49, label %vector.ph"]
	Node0x56439331eed8[shape=record, label="  %indvars.iv43.ph = phi i64 [ 0, %for.body6.preheader ], [ %n.vec, %middle.block ]"]
	Node0x56439331f098[shape=record, label="  br label %for.body6"]
	Node0x56439331f110[shape=record, label="  %n.vec = and i64 %wide.trip.count, 4294967292"]
	Node0x56439331f180[shape=record, label="  %3 = add nsw i64 %n.vec, -4"]
	Node0x56439331f220[shape=record, label="  %4 = lshr exact i64 %3, 2"]
	Node0x56439331f2e0[shape=record, label="  %5 = add nuw nsw i64 %4, 1"]
	Node0x56439331f350[shape=record, label="  %xtraiter = and i64 %5, 1"]
	Node0x56439331f3f0[shape=record, label="  %6 = icmp eq i64 %3, 0"]
	Node0x56439331f598[shape=record, label="  br i1 %6, label %middle.block.unr-lcssa, label %vector.ph.new"]
	Node0x56439331f610[shape=record, label="  %unroll_iter = sub nsw i64 %5, %xtraiter"]
	Node0x56439331fa38[shape=record, label="  br label %vector.body"]
	Node0x56439331fae8[shape=record, label="  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]"]
	Node0x56439331fc68[shape=record, label="  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]"]
	Node0x56439331fd68[shape=record, label="  %7 = getelementptr inbounds [10 x float], [10 x float]* %a, i64 0, i64 %index"]
	Node0x5643933203e8[shape=record, label="  %8 = bitcast float* %7 to <4 x float>*"]
	Node0x5643933204d8[shape=record, label="  %wide.load = load <4 x float>, <4 x float>* %8, align 16, !tbaa !6"]
	Node0x564393321180[shape=record, label="  %9 = fdiv <4 x float> %wide.load, <float 8.250000e+00, float 8.250000e+00, float 8.250000e+00, float 8.250000e+00>"]
	Node0x5643933211d8[shape=record, label="  %10 = bitcast float* %7 to <4 x float>*"]
	Node0x564393321250[shape=record, label="  store <4 x float> %9, <4 x float>* %10, align 16, !tbaa !6"]
	Node0x5643933218e0[shape=record, label="  %index.next = or i64 %index, 4"]
	Node0x564393321998[shape=record, label="  %11 = getelementptr inbounds [10 x float], [10 x float]* %a, i64 0, i64 %index.next"]
	Node0x564393321a08[shape=record, label="  %12 = bitcast float* %11 to <4 x float>*"]
	Node0x564393321a68[shape=record, label="  %wide.load.1 = load <4 x float>, <4 x float>* %12, align 16, !tbaa !6"]
	Node0x564393321b10[shape=record, label="  %13 = fdiv <4 x float> %wide.load.1, <float 8.250000e+00, float 8.250000e+00, float 8.250000e+00, float 8.250000e+00>"]
	Node0x564393321b68[shape=record, label="  %14 = bitcast float* %11 to <4 x float>*"]
	Node0x564393321be0[shape=record, label="  store <4 x float> %13, <4 x float>* %14, align 16, !tbaa !6"]
	Node0x564393321c90[shape=record, label="  %index.next.1 = add i64 %index, 8"]
	Node0x564393321d00[shape=record, label="  %niter.nsub.1 = add i64 %niter, -2"]
	Node0x564393321d70[shape=record, label="  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0"]
	Node0x564393321e58[shape=record, label="  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !8"]
	Node0x56439331f268[shape=record, label="  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]"]
	Node0x564393322030[shape=record, label="  %lcmp.mod = icmp eq i64 %xtraiter, 0"]
	Node0x564393322198[shape=record, label="  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil"]
	Node0x564393322228[shape=record, label="  %15 = getelementptr inbounds [10 x float], [10 x float]* %a, i64 0, i64 %index.unr"]
	Node0x56439331ec38[shape=record, label="  %16 = bitcast float* %15 to <4 x float>*"]
	Node0x56439331fc18[shape=record, label="  %wide.load.epil = load <4 x float>, <4 x float>* %16, align 16, !tbaa !6"]
	Node0x5643933222b0[shape=record, label="  %17 = fdiv <4 x float> %wide.load.epil, <float 8.250000e+00, float 8.250000e+00, float 8.250000e+00, float 8.250000e+00>"]
	Node0x56439331ece8[shape=record, label="  %18 = bitcast float* %15 to <4 x float>*"]
	Node0x564393322320[shape=record, label="  store <4 x float> %17, <4 x float>* %18, align 16, !tbaa !6"]
	Node0x564393322388[shape=record, label="  br label %middle.block"]
	Node0x564393322400[shape=record, label="  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count"]
	Node0x564393320478[shape=record, label="  br i1 %cmp.n, label %for.cond15.preheader, label %for.body6.preheader49"]
	Node0x564393322d78[shape=record, label="  %indvars.iv45 = phi i64 [ %indvars.iv.next46, %for.body ], [ 0, %entry ]"]
	Node0x564393322e58[shape=record, label="  %arrayidx = getelementptr inbounds [10 x float], [10 x float]* %a, i64 0, i64 %indvars.iv45"]
	Node0x564393322fc8[shape=record, label="  %call3 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), float* nonnull %arrayidx)"]
	Node0x5643933230d0[shape=record, label="  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1"]
	Node0x56439331e4f8[shape=record, label="  %19 = load i32, i32* %N, align 4, !tbaa !2"]
	Node0x564393323738[shape=record, label="  %20 = sext i32 %19 to i64"]
	Node0x5643933237b0[shape=record, label="  %cmp = icmp slt i64 %indvars.iv.next46, %20"]
	Node0x564393323838[shape=record, label="  br i1 %cmp, label %for.body, label %for.cond4.preheader"]
	Node0x564393323918[shape=record, label="  br i1 %cmp538, label %for.body18, label %for.end25"]
	Node0x5643933239c8[shape=record, label="  %indvars.iv43 = phi i64 [ %indvars.iv.next44, %for.body6 ], [ %indvars.iv43.ph, %for.body6.preheader49 ]"]
	Node0x564393323aa8[shape=record, label="  %arrayidx8 = getelementptr inbounds [10 x float], [10 x float]* %a, i64 0, i64 %indvars.iv43"]
	Node0x564393323b18[shape=record, label="  %21 = load float, float* %arrayidx8, align 4, !tbaa !6"]
	Node0x564393323bb0[shape=record, label="  %conv9 = fdiv float %21, 8.250000e+00"]
	Node0x564393323c20[shape=record, label="  store float %conv9, float* %arrayidx8, align 4, !tbaa !6"]
	Node0x564393323cd0[shape=record, label="  %indvars.iv.next44 = add nuw nsw i64 %indvars.iv43, 1"]
	Node0x564393324390[shape=record, label="  %exitcond = icmp eq i64 %indvars.iv.next44, %wide.trip.count"]
	Node0x564393324448[shape=record, label="  br i1 %exitcond, label %for.cond15.preheader, label %for.body6, !llvm.loop !10"]
	Node0x564393324598[shape=record, label="  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body18 ], [ 0, %for.cond15.preheader ]"]
	Node0x564393324678[shape=record, label="  %arrayidx20 = getelementptr inbounds [10 x float], [10 x float]* %a, i64 0, i64 %indvars.iv"]
	Node0x56439331f038[shape=record, label="  %22 = load float, float* %arrayidx20, align 4, !tbaa !6"]
	Node0x5643933246e8[shape=record, label="  %conv21 = fpext float %22 to double"]
	Node0x564393324838[shape=record, label="  %call22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), double %conv21)"]
	Node0x564393324910[shape=record, label="  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1"]
	Node0x56439331ee88[shape=record, label="  %23 = load i32, i32* %N, align 4, !tbaa !2"]
	Node0x564393324968[shape=record, label="  %24 = sext i32 %23 to i64"]
	Node0x5643933249e0[shape=record, label="  %cmp16 = icmp slt i64 %indvars.iv.next, %24"]
	Node0x564393324a88[shape=record, label="  br i1 %cmp16, label %for.body18, label %for.end25"]
	Node0x564393324c68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #3"]
	Node0x564393324dc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #3"]
	Node0x564393324e88[shape=record, label="  ret i32 0"]
	Node0x56439331bea8 -> Node0x56439331c568
	Node0x56439331c568 -> Node0x56439331c5e8
	Node0x56439331c5e8 -> Node0x56439331ca48
	Node0x56439331ca48 -> Node0x56439331cb28
	Node0x56439331cb28 -> Node0x56439331cc58
	Node0x56439331cc58 -> Node0x56439331d020
	Node0x56439331d020 -> Node0x56439331d268
	Node0x56439331d268 -> Node0x56439331d3e0
	Node0x56439331d3e0 -> Node0x56439331d498
	Node0x56439331d498 -> Node0x56439331e420
	Node0x56439331e420 -> Node0x5643932b0468
	Node0x5643932b0468 -> Node0x564393322d78
	Node0x5643932b0468 -> Node0x564393324c68
	Node0x56439331e7f0 -> Node0x5643932b0588
	Node0x5643932b0588 -> Node0x56439331e6e8
	Node0x5643932b0588 -> Node0x564393324c68
	Node0x56439331e6e8 -> Node0x56439331eb00
	Node0x56439331eb00 -> Node0x56439331ed78
	Node0x56439331ed78 -> Node0x56439331eed8
	Node0x56439331ed78 -> Node0x56439331f110
	Node0x56439331eed8 -> Node0x56439331f098
	Node0x56439331f098 -> Node0x5643933239c8
	Node0x56439331f110 -> Node0x56439331f180
	Node0x56439331f180 -> Node0x56439331f220
	Node0x56439331f220 -> Node0x56439331f2e0
	Node0x56439331f2e0 -> Node0x56439331f350
	Node0x56439331f350 -> Node0x56439331f3f0
	Node0x56439331f3f0 -> Node0x56439331f598
	Node0x56439331f598 -> Node0x56439331f268
	Node0x56439331f598 -> Node0x56439331f610
	Node0x56439331f610 -> Node0x56439331fa38
	Node0x56439331fa38 -> Node0x56439331fae8
	Node0x56439331fae8 -> Node0x56439331fc68
	Node0x56439331fc68 -> Node0x56439331fd68
	Node0x56439331fd68 -> Node0x5643933203e8
	Node0x5643933203e8 -> Node0x5643933204d8
	Node0x5643933204d8 -> Node0x564393321180
	Node0x564393321180 -> Node0x5643933211d8
	Node0x5643933211d8 -> Node0x564393321250
	Node0x564393321250 -> Node0x5643933218e0
	Node0x5643933218e0 -> Node0x564393321998
	Node0x564393321998 -> Node0x564393321a08
	Node0x564393321a08 -> Node0x564393321a68
	Node0x564393321a68 -> Node0x564393321b10
	Node0x564393321b10 -> Node0x564393321b68
	Node0x564393321b68 -> Node0x564393321be0
	Node0x564393321be0 -> Node0x564393321c90
	Node0x564393321c90 -> Node0x564393321d00
	Node0x564393321d00 -> Node0x564393321d70
	Node0x564393321d70 -> Node0x564393321e58
	Node0x564393321e58 -> Node0x56439331f268
	Node0x564393321e58 -> Node0x56439331fae8
	Node0x56439331f268 -> Node0x564393322030
	Node0x564393322030 -> Node0x564393322198
	Node0x564393322198 -> Node0x564393322400
	Node0x564393322198 -> Node0x564393322228
	Node0x564393322228 -> Node0x56439331ec38
	Node0x56439331ec38 -> Node0x56439331fc18
	Node0x56439331fc18 -> Node0x5643933222b0
	Node0x5643933222b0 -> Node0x56439331ece8
	Node0x56439331ece8 -> Node0x564393322320
	Node0x564393322320 -> Node0x564393322388
	Node0x564393322388 -> Node0x564393322400
	Node0x564393322400 -> Node0x564393320478
	Node0x564393320478 -> Node0x564393323918
	Node0x564393320478 -> Node0x56439331eed8
	Node0x564393322d78 -> Node0x564393322e58
	Node0x564393322e58 -> Node0x564393322fc8
	Node0x564393322fc8 -> Node0x5643933230d0
	Node0x5643933230d0 -> Node0x56439331e4f8
	Node0x56439331e4f8 -> Node0x564393323738
	Node0x564393323738 -> Node0x5643933237b0
	Node0x5643933237b0 -> Node0x564393323838
	Node0x564393323838 -> Node0x564393322d78
	Node0x564393323838 -> Node0x56439331e7f0
	Node0x564393323918 -> Node0x564393324598
	Node0x564393323918 -> Node0x564393324c68
	Node0x5643933239c8 -> Node0x564393323aa8
	Node0x564393323aa8 -> Node0x564393323b18
	Node0x564393323b18 -> Node0x564393323bb0
	Node0x564393323bb0 -> Node0x564393323c20
	Node0x564393323c20 -> Node0x564393323cd0
	Node0x564393323cd0 -> Node0x564393324390
	Node0x564393324390 -> Node0x564393324448
	Node0x564393324448 -> Node0x564393323918
	Node0x564393324448 -> Node0x5643933239c8
	Node0x564393324598 -> Node0x564393324678
	Node0x564393324678 -> Node0x56439331f038
	Node0x56439331f038 -> Node0x5643933246e8
	Node0x5643933246e8 -> Node0x564393324838
	Node0x564393324838 -> Node0x564393324910
	Node0x564393324910 -> Node0x56439331ee88
	Node0x56439331ee88 -> Node0x564393324968
	Node0x564393324968 -> Node0x5643933249e0
	Node0x5643933249e0 -> Node0x564393324a88
	Node0x564393324a88 -> Node0x564393324598
	Node0x564393324a88 -> Node0x564393324c68
	Node0x564393324c68 -> Node0x564393324dc8
	Node0x564393324dc8 -> Node0x564393324e88
edge [color=red]
	Node0x56439331bea8 -> Node0x56439331c5e8[label="1"]
	Node0x56439331c5e8 -> Node0x56439331ca48[label="2"]
	Node0x56439331c568 -> Node0x56439331cb28[label="3"]
	Node0x56439331cb28 -> Node0x56439331cc58[label="4"]
	Node0x56439331c568 -> Node0x56439331d268[label="5"]
	Node0x56439331c568 -> Node0x56439331d498[label="6"]
	Node0x56439331d498 -> Node0x56439331e420[label="7"]
	Node0x56439331e420 -> Node0x5643932b0468[label="8"]
	Node0x56439331e4f8 -> Node0x56439331e7f0[label="9"]
	Node0x56439331e7f0 -> Node0x5643932b0588[label="10"]
	Node0x56439331e4f8 -> Node0x56439331e6e8[label="11"]
	Node0x56439331e4f8 -> Node0x56439331eb00[label="12"]
	Node0x56439331eb00 -> Node0x56439331ed78[label="13"]
	Node0x56439331f110 -> Node0x56439331eed8[label="14"]
	Node0x56439331e6e8 -> Node0x56439331f110[label="15"]
	Node0x56439331f110 -> Node0x56439331f180[label="16"]
	Node0x56439331f180 -> Node0x56439331f220[label="17"]
	Node0x56439331f220 -> Node0x56439331f2e0[label="18"]
	Node0x56439331f2e0 -> Node0x56439331f350[label="19"]
	Node0x56439331f180 -> Node0x56439331f3f0[label="20"]
	Node0x56439331f3f0 -> Node0x56439331f598[label="21"]
	Node0x56439331f2e0 -> Node0x56439331f610[label="22"]
	Node0x56439331f350 -> Node0x56439331f610[label="23"]
	Node0x564393321c90 -> Node0x56439331fae8[label="24"]
	Node0x56439331f610 -> Node0x56439331fc68[label="25"]
	Node0x564393321d00 -> Node0x56439331fc68[label="26"]
	Node0x56439331bea8 -> Node0x56439331fd68[label="27"]
	Node0x56439331fae8 -> Node0x56439331fd68[label="28"]
	Node0x56439331fd68 -> Node0x5643933203e8[label="29"]
	Node0x5643933203e8 -> Node0x5643933204d8[label="30"]
	Node0x5643933204d8 -> Node0x564393321180[label="31"]
	Node0x56439331fd68 -> Node0x5643933211d8[label="32"]
	Node0x564393321180 -> Node0x564393321250[label="33"]
	Node0x564393321250 -> Node0x5643933211d8[label="34"]
	Node0x56439331fae8 -> Node0x5643933218e0[label="35"]
	Node0x56439331bea8 -> Node0x564393321998[label="36"]
	Node0x5643933218e0 -> Node0x564393321998[label="37"]
	Node0x564393321998 -> Node0x564393321a08[label="38"]
	Node0x564393321a08 -> Node0x564393321a68[label="39"]
	Node0x564393321a68 -> Node0x564393321b10[label="40"]
	Node0x564393321998 -> Node0x564393321b68[label="41"]
	Node0x564393321b10 -> Node0x564393321be0[label="42"]
	Node0x564393321be0 -> Node0x564393321b68[label="43"]
	Node0x56439331fae8 -> Node0x564393321c90[label="44"]
	Node0x56439331fc68 -> Node0x564393321d00[label="45"]
	Node0x564393321d00 -> Node0x564393321d70[label="46"]
	Node0x564393321d70 -> Node0x564393321e58[label="47"]
	Node0x564393321c90 -> Node0x56439331f268[label="48"]
	Node0x56439331f350 -> Node0x564393322030[label="49"]
	Node0x564393322030 -> Node0x564393322198[label="50"]
	Node0x56439331bea8 -> Node0x564393322228[label="51"]
	Node0x56439331f268 -> Node0x564393322228[label="52"]
	Node0x564393322228 -> Node0x56439331ec38[label="53"]
	Node0x56439331ec38 -> Node0x56439331fc18[label="54"]
	Node0x56439331fc18 -> Node0x5643933222b0[label="55"]
	Node0x564393322228 -> Node0x56439331ece8[label="56"]
	Node0x5643933222b0 -> Node0x564393322320[label="57"]
	Node0x564393322320 -> Node0x56439331ece8[label="58"]
	Node0x56439331f110 -> Node0x564393322400[label="59"]
	Node0x56439331e6e8 -> Node0x564393322400[label="60"]
	Node0x564393322400 -> Node0x564393320478[label="61"]
	Node0x5643933230d0 -> Node0x564393322d78[label="62"]
	Node0x56439331bea8 -> Node0x564393322e58[label="63"]
	Node0x564393322d78 -> Node0x564393322e58[label="64"]
	Node0x564393322e58 -> Node0x564393322fc8[label="65"]
	Node0x564393322d78 -> Node0x5643933230d0[label="66"]
	Node0x56439331c568 -> Node0x56439331e4f8[label="67"]
	Node0x56439331e4f8 -> Node0x564393323738[label="68"]
	Node0x5643933230d0 -> Node0x5643933237b0[label="69"]
	Node0x564393323738 -> Node0x5643933237b0[label="70"]
	Node0x5643933237b0 -> Node0x564393323838[label="71"]
	Node0x56439331e7f0 -> Node0x564393323918[label="72"]
	Node0x564393323cd0 -> Node0x5643933239c8[label="73"]
	Node0x56439331eed8 -> Node0x5643933239c8[label="74"]
	Node0x56439331bea8 -> Node0x564393323aa8[label="75"]
	Node0x5643933239c8 -> Node0x564393323aa8[label="76"]
	Node0x564393323aa8 -> Node0x564393323b18[label="77"]
	Node0x564393323b18 -> Node0x564393323bb0[label="78"]
	Node0x564393323bb0 -> Node0x564393323c20[label="79"]
	Node0x564393323c20 -> Node0x564393323aa8[label="80"]
	Node0x5643933239c8 -> Node0x564393323cd0[label="81"]
	Node0x564393323cd0 -> Node0x564393324390[label="82"]
	Node0x56439331e6e8 -> Node0x564393324390[label="83"]
	Node0x564393324390 -> Node0x564393324448[label="84"]
	Node0x564393324910 -> Node0x564393324598[label="85"]
	Node0x56439331bea8 -> Node0x564393324678[label="86"]
	Node0x564393324598 -> Node0x564393324678[label="87"]
	Node0x564393324678 -> Node0x56439331f038[label="88"]
	Node0x56439331f038 -> Node0x5643933246e8[label="89"]
	Node0x5643933246e8 -> Node0x564393324838[label="90"]
	Node0x564393324598 -> Node0x564393324910[label="91"]
	Node0x56439331c568 -> Node0x56439331ee88[label="92"]
	Node0x56439331ee88 -> Node0x564393324968[label="93"]
	Node0x564393324910 -> Node0x5643933249e0[label="94"]
	Node0x564393324968 -> Node0x5643933249e0[label="95"]
	Node0x5643933249e0 -> Node0x564393324a88[label="96"]
	Node0x56439331cb28 -> Node0x564393324c68[label="97"]
	Node0x56439331c5e8 -> Node0x564393324dc8[label="98"]
}
