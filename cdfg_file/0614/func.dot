digraph "CDFG for'func' function" {
	Node0x5606d481a008[shape=record, label="  %n = alloca i32, align 4"]
	Node0x5606d481a6c8[shape=record, label="  %m = alloca i32, align 4"]
	Node0x5606d481a748[shape=record, label="  %0 = bitcast i32* %n to i8*"]
	Node0x5606d481aba8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x5606d481ac88[shape=record, label="  %1 = bitcast i32* %m to i8*"]
	Node0x5606d481ad88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #3"]
	Node0x5606d481b150[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))"]
	Node0x5606d481b400[shape=record, label="  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %n, i32* nonnull %m)"]
	Node0x5606d481b4b8[shape=record, label="  %2 = load i32, i32* %n, align 4, !tbaa !2"]
	Node0x5606d481c440[shape=record, label="  %cmp8 = icmp slt i32 %2, 2"]
	Node0x5606d47ae468[shape=record, label="  br i1 %cmp8, label %for.end, label %for.body.lr.ph"]
	Node0x5606d481c5e8[shape=record, label="  %3 = load i32, i32* %m, align 4, !tbaa !2"]
	Node0x5606d481cca0[shape=record, label="  %4 = add i32 %2, -1"]
	Node0x5606d481cd60[shape=record, label="  %5 = add i32 %2, -2"]
	Node0x5606d481ce00[shape=record, label="  %xtraiter = and i32 %4, 3"]
	Node0x5606d481cea0[shape=record, label="  %6 = icmp ult i32 %5, 3"]
	Node0x5606d47ae588[shape=record, label="  br i1 %6, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new"]
	Node0x5606d481d190[shape=record, label="  %unroll_iter = sub i32 %4, %xtraiter"]
	Node0x5606d481d408[shape=record, label="  br label %for.body"]
	Node0x5606d481d4b8[shape=record, label="  %s.010 = phi i32 [ 0, %for.body.lr.ph.new ], [ %rem.3, %for.body ]"]
	Node0x5606d481d628[shape=record, label="  %i.09 = phi i32 [ 2, %for.body.lr.ph.new ], [ %inc.3, %for.body ]"]
	Node0x5606d481d778[shape=record, label="  %niter = phi i32 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.3, %for.body ]"]
	Node0x5606d481d860[shape=record, label="  %add = add nsw i32 %3, %s.010"]
	Node0x5606d481d8f0[shape=record, label="  %rem = srem i32 %add, %i.09"]
	Node0x5606d481d980[shape=record, label="  %inc = or i32 %i.09, 1"]
	Node0x5606d481da10[shape=record, label="  %add.1 = add nsw i32 %3, %rem"]
	Node0x5606d481daa0[shape=record, label="  %rem.1 = srem i32 %add.1, %inc"]
	Node0x5606d481db30[shape=record, label="  %inc.1 = add nuw nsw i32 %i.09, 2"]
	Node0x5606d481dbc0[shape=record, label="  %add.2 = add nsw i32 %3, %rem.1"]
	Node0x5606d481dc50[shape=record, label="  %rem.2 = srem i32 %add.2, %inc.1"]
	Node0x5606d481dce0[shape=record, label="  %inc.2 = add nuw nsw i32 %i.09, 3"]
	Node0x5606d481e090[shape=record, label="  %add.3 = add nsw i32 %3, %rem.2"]
	Node0x5606d481e120[shape=record, label="  %rem.3 = srem i32 %add.3, %inc.2"]
	Node0x5606d481e190[shape=record, label="  %inc.3 = add nuw nsw i32 %i.09, 4"]
	Node0x5606d481e200[shape=record, label="  %niter.nsub.3 = add i32 %niter, -4"]
	Node0x5606d481e270[shape=record, label="  %niter.ncmp.3 = icmp eq i32 %niter.nsub.3, 0"]
	Node0x5606d481e358[shape=record, label="  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body"]
	Node0x5606d481e7d8[shape=record, label="  %rem.lcssa.ph = phi i32 [ undef, %for.body.lr.ph ], [ %rem.3, %for.body ]"]
	Node0x5606d481e878[shape=record, label="  %s.010.unr = phi i32 [ 0, %for.body.lr.ph ], [ %rem.3, %for.body ]"]
	Node0x5606d481e918[shape=record, label="  %i.09.unr = phi i32 [ 2, %for.body.lr.ph ], [ %inc.3, %for.body ]"]
	Node0x5606d481ea10[shape=record, label="  %lcmp.mod = icmp eq i32 %xtraiter, 0"]
	Node0x5606d481ebe8[shape=record, label="  br i1 %lcmp.mod, label %for.end.loopexit, label %for.body.epil"]
	Node0x5606d481ecc8[shape=record, label="  %s.010.epil = phi i32 [ %rem.epil, %for.body.epil ], [ %s.010.unr, %for.end.loopexit.unr-lcssa ]"]
	Node0x5606d481edf8[shape=record, label="  %i.09.epil = phi i32 [ %inc.epil, %for.body.epil ], [ %i.09.unr, %for.end.loopexit.unr-lcssa ]"]
	Node0x5606d481f738[shape=record, label="  %epil.iter = phi i32 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %for.end.loopexit.unr-lcssa ]"]
	Node0x5606d481f800[shape=record, label="  %add.epil = add nsw i32 %3, %s.010.epil"]
	Node0x5606d481f870[shape=record, label="  %rem.epil = srem i32 %add.epil, %i.09.epil"]
	Node0x5606d481f8e0[shape=record, label="  %inc.epil = add nuw nsw i32 %i.09.epil, 1"]
	Node0x5606d481f950[shape=record, label="  %epil.iter.sub = add i32 %epil.iter, -1"]
	Node0x5606d481f9c0[shape=record, label="  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0"]
	Node0x5606d481fa48[shape=record, label="  br i1 %epil.iter.cmp, label %for.end.loopexit, label %for.body.epil, !llvm.loop !6"]
	Node0x5606d481fbf8[shape=record, label="  %rem.lcssa = phi i32 [ %rem.lcssa.ph, %for.end.loopexit.unr-lcssa ], [ %rem.epil, %for.body.epil ]"]
	Node0x5606d481fcc0[shape=record, label="  %phitmp = add i32 %rem.lcssa, 1"]
	Node0x5606d481cfb8[shape=record, label="  br label %for.end"]
	Node0x5606d481fd08[shape=record, label="  %s.0.lcssa = phi i32 [ 1, %entry ], [ %phitmp, %for.end.loopexit ]"]
	Node0x5606d481fe88[shape=record, label="  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32 %s.0.lcssa)"]
	Node0x5606d48200c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #3"]
	Node0x5606d4820228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x5606d48202d0[shape=record, label="  ret void"]
	Node0x5606d481a008 -> Node0x5606d481a6c8
	Node0x5606d481a6c8 -> Node0x5606d481a748
	Node0x5606d481a748 -> Node0x5606d481aba8
	Node0x5606d481aba8 -> Node0x5606d481ac88
	Node0x5606d481ac88 -> Node0x5606d481ad88
	Node0x5606d481ad88 -> Node0x5606d481b150
	Node0x5606d481b150 -> Node0x5606d481b400
	Node0x5606d481b400 -> Node0x5606d481b4b8
	Node0x5606d481b4b8 -> Node0x5606d481c440
	Node0x5606d481c440 -> Node0x5606d47ae468
	Node0x5606d47ae468 -> Node0x5606d481fd08
	Node0x5606d47ae468 -> Node0x5606d481c5e8
	Node0x5606d481c5e8 -> Node0x5606d481cca0
	Node0x5606d481cca0 -> Node0x5606d481cd60
	Node0x5606d481cd60 -> Node0x5606d481ce00
	Node0x5606d481ce00 -> Node0x5606d481cea0
	Node0x5606d481cea0 -> Node0x5606d47ae588
	Node0x5606d47ae588 -> Node0x5606d481e7d8
	Node0x5606d47ae588 -> Node0x5606d481d190
	Node0x5606d481d190 -> Node0x5606d481d408
	Node0x5606d481d408 -> Node0x5606d481d4b8
	Node0x5606d481d4b8 -> Node0x5606d481d628
	Node0x5606d481d628 -> Node0x5606d481d778
	Node0x5606d481d778 -> Node0x5606d481d860
	Node0x5606d481d860 -> Node0x5606d481d8f0
	Node0x5606d481d8f0 -> Node0x5606d481d980
	Node0x5606d481d980 -> Node0x5606d481da10
	Node0x5606d481da10 -> Node0x5606d481daa0
	Node0x5606d481daa0 -> Node0x5606d481db30
	Node0x5606d481db30 -> Node0x5606d481dbc0
	Node0x5606d481dbc0 -> Node0x5606d481dc50
	Node0x5606d481dc50 -> Node0x5606d481dce0
	Node0x5606d481dce0 -> Node0x5606d481e090
	Node0x5606d481e090 -> Node0x5606d481e120
	Node0x5606d481e120 -> Node0x5606d481e190
	Node0x5606d481e190 -> Node0x5606d481e200
	Node0x5606d481e200 -> Node0x5606d481e270
	Node0x5606d481e270 -> Node0x5606d481e358
	Node0x5606d481e358 -> Node0x5606d481e7d8
	Node0x5606d481e358 -> Node0x5606d481d4b8
	Node0x5606d481e7d8 -> Node0x5606d481e878
	Node0x5606d481e878 -> Node0x5606d481e918
	Node0x5606d481e918 -> Node0x5606d481ea10
	Node0x5606d481ea10 -> Node0x5606d481ebe8
	Node0x5606d481ebe8 -> Node0x5606d481fbf8
	Node0x5606d481ebe8 -> Node0x5606d481ecc8
	Node0x5606d481ecc8 -> Node0x5606d481edf8
	Node0x5606d481edf8 -> Node0x5606d481f738
	Node0x5606d481f738 -> Node0x5606d481f800
	Node0x5606d481f800 -> Node0x5606d481f870
	Node0x5606d481f870 -> Node0x5606d481f8e0
	Node0x5606d481f8e0 -> Node0x5606d481f950
	Node0x5606d481f950 -> Node0x5606d481f9c0
	Node0x5606d481f9c0 -> Node0x5606d481fa48
	Node0x5606d481fa48 -> Node0x5606d481fbf8
	Node0x5606d481fa48 -> Node0x5606d481ecc8
	Node0x5606d481fbf8 -> Node0x5606d481fcc0
	Node0x5606d481fcc0 -> Node0x5606d481cfb8
	Node0x5606d481cfb8 -> Node0x5606d481fd08
	Node0x5606d481fd08 -> Node0x5606d481fe88
	Node0x5606d481fe88 -> Node0x5606d48200c8
	Node0x5606d48200c8 -> Node0x5606d4820228
	Node0x5606d4820228 -> Node0x5606d48202d0
edge [color=red]
	Node0x5606d481a008 -> Node0x5606d481a748[label="1"]
	Node0x5606d481a748 -> Node0x5606d481aba8[label="2"]
	Node0x5606d481a6c8 -> Node0x5606d481ac88[label="3"]
	Node0x5606d481ac88 -> Node0x5606d481ad88[label="4"]
	Node0x5606d481a008 -> Node0x5606d481b400[label="5"]
	Node0x5606d481a6c8 -> Node0x5606d481b400[label="6"]
	Node0x5606d481a008 -> Node0x5606d481b4b8[label="7"]
	Node0x5606d481b4b8 -> Node0x5606d481c440[label="8"]
	Node0x5606d481c440 -> Node0x5606d47ae468[label="9"]
	Node0x5606d481a6c8 -> Node0x5606d481c5e8[label="10"]
	Node0x5606d481b4b8 -> Node0x5606d481cca0[label="11"]
	Node0x5606d481b4b8 -> Node0x5606d481cd60[label="12"]
	Node0x5606d481cca0 -> Node0x5606d481ce00[label="13"]
	Node0x5606d481cd60 -> Node0x5606d481cea0[label="14"]
	Node0x5606d481cea0 -> Node0x5606d47ae588[label="15"]
	Node0x5606d481cca0 -> Node0x5606d481d190[label="16"]
	Node0x5606d481ce00 -> Node0x5606d481d190[label="17"]
	Node0x5606d481e120 -> Node0x5606d481d4b8[label="18"]
	Node0x5606d481e190 -> Node0x5606d481d628[label="19"]
	Node0x5606d481d190 -> Node0x5606d481d778[label="20"]
	Node0x5606d481e200 -> Node0x5606d481d778[label="21"]
	Node0x5606d481c5e8 -> Node0x5606d481d860[label="22"]
	Node0x5606d481d4b8 -> Node0x5606d481d860[label="23"]
	Node0x5606d481d860 -> Node0x5606d481d8f0[label="24"]
	Node0x5606d481d628 -> Node0x5606d481d8f0[label="25"]
	Node0x5606d481d628 -> Node0x5606d481d980[label="26"]
	Node0x5606d481c5e8 -> Node0x5606d481da10[label="27"]
	Node0x5606d481d8f0 -> Node0x5606d481da10[label="28"]
	Node0x5606d481da10 -> Node0x5606d481daa0[label="29"]
	Node0x5606d481d980 -> Node0x5606d481daa0[label="30"]
	Node0x5606d481d628 -> Node0x5606d481db30[label="31"]
	Node0x5606d481c5e8 -> Node0x5606d481dbc0[label="32"]
	Node0x5606d481daa0 -> Node0x5606d481dbc0[label="33"]
	Node0x5606d481dbc0 -> Node0x5606d481dc50[label="34"]
	Node0x5606d481db30 -> Node0x5606d481dc50[label="35"]
	Node0x5606d481d628 -> Node0x5606d481dce0[label="36"]
	Node0x5606d481c5e8 -> Node0x5606d481e090[label="37"]
	Node0x5606d481dc50 -> Node0x5606d481e090[label="38"]
	Node0x5606d481e090 -> Node0x5606d481e120[label="39"]
	Node0x5606d481dce0 -> Node0x5606d481e120[label="40"]
	Node0x5606d481d628 -> Node0x5606d481e190[label="41"]
	Node0x5606d481d778 -> Node0x5606d481e200[label="42"]
	Node0x5606d481e200 -> Node0x5606d481e270[label="43"]
	Node0x5606d481e270 -> Node0x5606d481e358[label="44"]
	Node0x5606d481e120 -> Node0x5606d481e7d8[label="45"]
	Node0x5606d481e120 -> Node0x5606d481e878[label="46"]
	Node0x5606d481e190 -> Node0x5606d481e918[label="47"]
	Node0x5606d481ce00 -> Node0x5606d481ea10[label="48"]
	Node0x5606d481ea10 -> Node0x5606d481ebe8[label="49"]
	Node0x5606d481f870 -> Node0x5606d481ecc8[label="50"]
	Node0x5606d481e878 -> Node0x5606d481ecc8[label="51"]
	Node0x5606d481f8e0 -> Node0x5606d481edf8[label="52"]
	Node0x5606d481e918 -> Node0x5606d481edf8[label="53"]
	Node0x5606d481f950 -> Node0x5606d481f738[label="54"]
	Node0x5606d481ce00 -> Node0x5606d481f738[label="55"]
	Node0x5606d481c5e8 -> Node0x5606d481f800[label="56"]
	Node0x5606d481ecc8 -> Node0x5606d481f800[label="57"]
	Node0x5606d481f800 -> Node0x5606d481f870[label="58"]
	Node0x5606d481edf8 -> Node0x5606d481f870[label="59"]
	Node0x5606d481edf8 -> Node0x5606d481f8e0[label="60"]
	Node0x5606d481f738 -> Node0x5606d481f950[label="61"]
	Node0x5606d481f950 -> Node0x5606d481f9c0[label="62"]
	Node0x5606d481f9c0 -> Node0x5606d481fa48[label="63"]
	Node0x5606d481e7d8 -> Node0x5606d481fbf8[label="64"]
	Node0x5606d481f870 -> Node0x5606d481fbf8[label="65"]
	Node0x5606d481fbf8 -> Node0x5606d481fcc0[label="66"]
	Node0x5606d481fcc0 -> Node0x5606d481fd08[label="67"]
	Node0x5606d481fd08 -> Node0x5606d481fe88[label="68"]
	Node0x5606d481ac88 -> Node0x5606d48200c8[label="69"]
	Node0x5606d481a748 -> Node0x5606d4820228[label="70"]
}
