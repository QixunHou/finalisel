digraph "CDFG for'func' function" {
	Node0x560f4042a678[shape=record, label="  %0 = load i8, i8* %s, align 1, !tbaa !2"]
	Node0x560f4042bbe0[shape=record, label="  %tobool9 = icmp eq i8 %0, 0"]
	Node0x560f403b3db8[shape=record, label="  br i1 %tobool9, label %for.end, label %for.body"]
	Node0x560f4042bed8[shape=record, label="  %1 = phi i8 [ %2, %for.inc ], [ %0, %entry ]"]
	Node0x560f4042c058[shape=record, label="  %q.011 = phi i8* [ %incdec.ptr2, %for.inc ], [ %s, %entry ]"]
	Node0x560f4042c1b8[shape=record, label="  %s.addr.010 = phi i8* [ %s.addr.1, %for.inc ], [ %s, %entry ]"]
	Node0x560f4042c298[shape=record, label="  %conv = sext i8 %1 to i32"]
	Node0x560f4042c330[shape=record, label="  %cmp = icmp eq i32 %conv, %c"]
	Node0x560f403bf228[shape=record, label="  br i1 %cmp, label %for.inc, label %if.then"]
	Node0x560f4042c4c0[shape=record, label="  %incdec.ptr = getelementptr inbounds i8, i8* %s.addr.010, i64 1"]
	Node0x560f4042c710[shape=record, label="  store i8 %1, i8* %s.addr.010, align 1, !tbaa !2"]
	Node0x560f4042c418[shape=record, label="  br label %for.inc"]
	Node0x560f4042cd78[shape=record, label="  %s.addr.1 = phi i8* [ %incdec.ptr, %if.then ], [ %s.addr.010, %for.body ]"]
	Node0x560f4042ce40[shape=record, label="  %incdec.ptr2 = getelementptr inbounds i8, i8* %q.011, i64 1"]
	Node0x560f4042c008[shape=record, label="  %2 = load i8, i8* %incdec.ptr2, align 1, !tbaa !2"]
	Node0x560f4042cec0[shape=record, label="  %tobool = icmp eq i8 %2, 0"]
	Node0x560f403bf348[shape=record, label="  br i1 %tobool, label %for.end, label %for.body"]
	Node0x560f4042cf08[shape=record, label="  %s.addr.0.lcssa = phi i8* [ %s, %entry ], [ %s.addr.1, %for.inc ]"]
	Node0x560f4042cfd0[shape=record, label="  store i8 0, i8* %s.addr.0.lcssa, align 1, !tbaa !2"]
	Node0x560f4042bcc8[shape=record, label="  ret i32 undef"]
	Node0x560f4042a678 -> Node0x560f4042bbe0
	Node0x560f4042bbe0 -> Node0x560f403b3db8
	Node0x560f403b3db8 -> Node0x560f4042cf08
	Node0x560f403b3db8 -> Node0x560f4042bed8
	Node0x560f4042bed8 -> Node0x560f4042c058
	Node0x560f4042c058 -> Node0x560f4042c1b8
	Node0x560f4042c1b8 -> Node0x560f4042c298
	Node0x560f4042c298 -> Node0x560f4042c330
	Node0x560f4042c330 -> Node0x560f403bf228
	Node0x560f403bf228 -> Node0x560f4042cd78
	Node0x560f403bf228 -> Node0x560f4042c4c0
	Node0x560f4042c4c0 -> Node0x560f4042c710
	Node0x560f4042c710 -> Node0x560f4042c418
	Node0x560f4042c418 -> Node0x560f4042cd78
	Node0x560f4042cd78 -> Node0x560f4042ce40
	Node0x560f4042ce40 -> Node0x560f4042c008
	Node0x560f4042c008 -> Node0x560f4042cec0
	Node0x560f4042cec0 -> Node0x560f403bf348
	Node0x560f403bf348 -> Node0x560f4042cf08
	Node0x560f403bf348 -> Node0x560f4042bed8
	Node0x560f4042cf08 -> Node0x560f4042cfd0
	Node0x560f4042cfd0 -> Node0x560f4042bcc8
edge [color=red]
	Node0x560f4042a490 -> Node0x560f4042a678[label="1"]
	Node0x560f4042a678 -> Node0x560f4042bbe0[label="2"]
	Node0x560f4042bbe0 -> Node0x560f403b3db8[label="3"]
	Node0x560f4042c008 -> Node0x560f4042bed8[label="4"]
	Node0x560f4042a678 -> Node0x560f4042bed8[label="5"]
	Node0x560f4042ce40 -> Node0x560f4042c058[label="6"]
	Node0x560f4042cd78 -> Node0x560f4042c1b8[label="7"]
	Node0x560f4042bed8 -> Node0x560f4042c298[label="8"]
	Node0x560f4042c298 -> Node0x560f4042c330[label="9"]
	Node0x560f4042c330 -> Node0x560f403bf228[label="10"]
	Node0x560f4042c1b8 -> Node0x560f4042c4c0[label="11"]
	Node0x560f4042bed8 -> Node0x560f4042c710[label="12"]
	Node0x560f4042c710 -> Node0x560f4042c1b8[label="13"]
	Node0x560f4042c4c0 -> Node0x560f4042cd78[label="14"]
	Node0x560f4042c1b8 -> Node0x560f4042cd78[label="15"]
	Node0x560f4042c058 -> Node0x560f4042ce40[label="16"]
	Node0x560f4042ce40 -> Node0x560f4042c008[label="17"]
	Node0x560f4042c008 -> Node0x560f4042cec0[label="18"]
	Node0x560f4042cec0 -> Node0x560f403bf348[label="19"]
	Node0x560f4042cd78 -> Node0x560f4042cf08[label="20"]
	Node0x560f4042bb80 -> Node0x560f4042cfd0[label="21"]
	Node0x560f4042cfd0 -> Node0x560f4042cf08[label="22"]
}
