digraph "CDFG for'main' function" {
	Node0x561afe08b5c8[shape=record, label="  %x.i = alloca i32, align 4"]
	Node0x561afe08e908[shape=record, label="  %y.i = alloca i32, align 4"]
	Node0x561afe08e988[shape=record, label="  %z.i = alloca i32, align 4"]
	Node0x561afe08ea08[shape=record, label="  %0 = bitcast i32* %x.i to i8*"]
	Node0x561afe08eb78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x561afe08ec38[shape=record, label="  %1 = bitcast i32* %y.i to i8*"]
	Node0x561afe08ece8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #3"]
	Node0x561afe08eda8[shape=record, label="  %2 = bitcast i32* %z.i to i8*"]
	Node0x561afe08ee68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #3"]
	Node0x561afe08ef88[shape=record, label="  %call.i = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32* nonnull %x.i, i32* nonnull %y.i, i32* nonnull %z.i) #3"]
	Node0x561afe08f048[shape=record, label="  %3 = load i32, i32* %x.i, align 4, !tbaa !2"]
	Node0x561afe08f0a8[shape=record, label="  %4 = load i32, i32* %y.i, align 4, !tbaa !2"]
	Node0x561afe08f170[shape=record, label="  %cmp.i = icmp sgt i32 %3, %4"]
	Node0x561afe08f378[shape=record, label="  br i1 %cmp.i, label %if.then.i, label %if.end.i"]
	Node0x561afe08f3f0[shape=record, label="  store i32 %4, i32* %x.i, align 4, !tbaa !2"]
	Node0x561afe08f470[shape=record, label="  store i32 %3, i32* %y.i, align 4, !tbaa !2"]
	Node0x561afe08f238[shape=record, label="  br label %if.end.i"]
	Node0x561afe08f4c8[shape=record, label="  %5 = phi i32 [ %3, %if.then.i ], [ %4, %entry ]"]
	Node0x561afe08f568[shape=record, label="  %6 = phi i32 [ %4, %if.then.i ], [ %3, %entry ]"]
	Node0x561afe08f2e8[shape=record, label="  %7 = load i32, i32* %z.i, align 4, !tbaa !2"]
	Node0x561afe08f630[shape=record, label="  %cmp1.i = icmp sgt i32 %6, %7"]
	Node0x561afe08fa08[shape=record, label="  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i"]
	Node0x561afe08fa80[shape=record, label="  store i32 %6, i32* %z.i, align 4, !tbaa !2"]
	Node0x561afe08fb00[shape=record, label="  store i32 %7, i32* %x.i, align 4, !tbaa !2"]
	Node0x561afe08f6f8[shape=record, label="  br label %if.end3.i"]
	Node0x561afe08fb58[shape=record, label="  %8 = phi i32 [ %7, %if.then2.i ], [ %6, %if.end.i ]"]
	Node0x561afe08f0f8[shape=record, label="  %9 = phi i32 [ %6, %if.then2.i ], [ %7, %if.end.i ]"]
	Node0x561afe08fd00[shape=record, label="  %cmp4.i = icmp sgt i32 %5, %9"]
	Node0x561afe08ff08[shape=record, label="  br i1 %cmp4.i, label %if.then5.i, label %func.exit"]
	Node0x561afe08ff80[shape=record, label="  store i32 %9, i32* %y.i, align 4, !tbaa !2"]
	Node0x561afe090000[shape=record, label="  store i32 %5, i32* %z.i, align 4, !tbaa !2"]
	Node0x561afe08f978[shape=record, label="  br label %func.exit"]
	Node0x561afe090058[shape=record, label="  %10 = phi i32 [ %5, %if.then5.i ], [ %9, %if.end3.i ]"]
	Node0x561afe0900f8[shape=record, label="  %11 = phi i32 [ %9, %if.then5.i ], [ %5, %if.end3.i ]"]
	Node0x561afe090228[shape=record, label="  %call7.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 %8, i32 %11, i32 %10) #3"]
	Node0x561afe0903f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #3"]
	Node0x561afe090508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #3"]
	Node0x561afe090618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x561afe08fe78[shape=record, label="  ret i32 0"]
	Node0x561afe08b5c8 -> Node0x561afe08e908
	Node0x561afe08e908 -> Node0x561afe08e988
	Node0x561afe08e988 -> Node0x561afe08ea08
	Node0x561afe08ea08 -> Node0x561afe08eb78
	Node0x561afe08eb78 -> Node0x561afe08ec38
	Node0x561afe08ec38 -> Node0x561afe08ece8
	Node0x561afe08ece8 -> Node0x561afe08eda8
	Node0x561afe08eda8 -> Node0x561afe08ee68
	Node0x561afe08ee68 -> Node0x561afe08ef88
	Node0x561afe08ef88 -> Node0x561afe08f048
	Node0x561afe08f048 -> Node0x561afe08f0a8
	Node0x561afe08f0a8 -> Node0x561afe08f170
	Node0x561afe08f170 -> Node0x561afe08f378
	Node0x561afe08f378 -> Node0x561afe08f3f0
	Node0x561afe08f378 -> Node0x561afe08f4c8
	Node0x561afe08f3f0 -> Node0x561afe08f470
	Node0x561afe08f470 -> Node0x561afe08f238
	Node0x561afe08f238 -> Node0x561afe08f4c8
	Node0x561afe08f4c8 -> Node0x561afe08f568
	Node0x561afe08f568 -> Node0x561afe08f2e8
	Node0x561afe08f2e8 -> Node0x561afe08f630
	Node0x561afe08f630 -> Node0x561afe08fa08
	Node0x561afe08fa08 -> Node0x561afe08fa80
	Node0x561afe08fa08 -> Node0x561afe08fb58
	Node0x561afe08fa80 -> Node0x561afe08fb00
	Node0x561afe08fb00 -> Node0x561afe08f6f8
	Node0x561afe08f6f8 -> Node0x561afe08fb58
	Node0x561afe08fb58 -> Node0x561afe08f0f8
	Node0x561afe08f0f8 -> Node0x561afe08fd00
	Node0x561afe08fd00 -> Node0x561afe08ff08
	Node0x561afe08ff08 -> Node0x561afe08ff80
	Node0x561afe08ff08 -> Node0x561afe090058
	Node0x561afe08ff80 -> Node0x561afe090000
	Node0x561afe090000 -> Node0x561afe08f978
	Node0x561afe08f978 -> Node0x561afe090058
	Node0x561afe090058 -> Node0x561afe0900f8
	Node0x561afe0900f8 -> Node0x561afe090228
	Node0x561afe090228 -> Node0x561afe0903f8
	Node0x561afe0903f8 -> Node0x561afe090508
	Node0x561afe090508 -> Node0x561afe090618
	Node0x561afe090618 -> Node0x561afe08fe78
edge [color=red]
	Node0x561afe08b5c8 -> Node0x561afe08ea08[label="1"]
	Node0x561afe08ea08 -> Node0x561afe08eb78[label="2"]
	Node0x561afe08e908 -> Node0x561afe08ec38[label="3"]
	Node0x561afe08ec38 -> Node0x561afe08ece8[label="4"]
	Node0x561afe08e988 -> Node0x561afe08eda8[label="5"]
	Node0x561afe08eda8 -> Node0x561afe08ee68[label="6"]
	Node0x561afe08b5c8 -> Node0x561afe08ef88[label="7"]
	Node0x561afe08e908 -> Node0x561afe08ef88[label="8"]
	Node0x561afe08e988 -> Node0x561afe08ef88[label="9"]
	Node0x561afe08b5c8 -> Node0x561afe08f048[label="10"]
	Node0x561afe08e908 -> Node0x561afe08f0a8[label="11"]
	Node0x561afe08f048 -> Node0x561afe08f170[label="12"]
	Node0x561afe08f0a8 -> Node0x561afe08f170[label="13"]
	Node0x561afe08f170 -> Node0x561afe08f378[label="14"]
	Node0x561afe08f0a8 -> Node0x561afe08f3f0[label="15"]
	Node0x561afe08f3f0 -> Node0x561afe08b5c8[label="16"]
	Node0x561afe08f048 -> Node0x561afe08f470[label="17"]
	Node0x561afe08f470 -> Node0x561afe08e908[label="18"]
	Node0x561afe08f048 -> Node0x561afe08f4c8[label="19"]
	Node0x561afe08f0a8 -> Node0x561afe08f4c8[label="20"]
	Node0x561afe08f0a8 -> Node0x561afe08f568[label="21"]
	Node0x561afe08f048 -> Node0x561afe08f568[label="22"]
	Node0x561afe08e988 -> Node0x561afe08f2e8[label="23"]
	Node0x561afe08f568 -> Node0x561afe08f630[label="24"]
	Node0x561afe08f2e8 -> Node0x561afe08f630[label="25"]
	Node0x561afe08f630 -> Node0x561afe08fa08[label="26"]
	Node0x561afe08f568 -> Node0x561afe08fa80[label="27"]
	Node0x561afe08fa80 -> Node0x561afe08e988[label="28"]
	Node0x561afe08f2e8 -> Node0x561afe08fb00[label="29"]
	Node0x561afe08fb00 -> Node0x561afe08b5c8[label="30"]
	Node0x561afe08f2e8 -> Node0x561afe08fb58[label="31"]
	Node0x561afe08f568 -> Node0x561afe08fb58[label="32"]
	Node0x561afe08f568 -> Node0x561afe08f0f8[label="33"]
	Node0x561afe08f2e8 -> Node0x561afe08f0f8[label="34"]
	Node0x561afe08f4c8 -> Node0x561afe08fd00[label="35"]
	Node0x561afe08f0f8 -> Node0x561afe08fd00[label="36"]
	Node0x561afe08fd00 -> Node0x561afe08ff08[label="37"]
	Node0x561afe08f0f8 -> Node0x561afe08ff80[label="38"]
	Node0x561afe08ff80 -> Node0x561afe08e908[label="39"]
	Node0x561afe08f4c8 -> Node0x561afe090000[label="40"]
	Node0x561afe090000 -> Node0x561afe08e988[label="41"]
	Node0x561afe08f4c8 -> Node0x561afe090058[label="42"]
	Node0x561afe08f0f8 -> Node0x561afe090058[label="43"]
	Node0x561afe08f0f8 -> Node0x561afe0900f8[label="44"]
	Node0x561afe08f4c8 -> Node0x561afe0900f8[label="45"]
	Node0x561afe08fb58 -> Node0x561afe090228[label="46"]
	Node0x561afe0900f8 -> Node0x561afe090228[label="47"]
	Node0x561afe090058 -> Node0x561afe090228[label="48"]
	Node0x561afe08eda8 -> Node0x561afe0903f8[label="49"]
	Node0x561afe08ec38 -> Node0x561afe090508[label="50"]
	Node0x561afe08ea08 -> Node0x561afe090618[label="51"]
}
