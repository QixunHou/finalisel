digraph "CDFG for'main' function" {
	Node0x561f533697d8[shape=record, label="  %number = alloca i32, align 4"]
	Node0x561f53369968[shape=record, label="  %0 = bitcast i32* %number to i8*"]
	Node0x561f5336c6f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #4"]
	Node0x561f5336c7d0[shape=record, label="  store i32 1, i32* %number, align 4, !tbaa !2"]
	Node0x561f5336d808[shape=record, label="  %call = tail call i32 (...) @clrscr() #4"]
	Node0x561f5336da30[shape=record, label="  %call1 = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0))"]
	Node0x561f5336dbc0[shape=record, label="  %call2 = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0))"]
	Node0x561f5336dd30[shape=record, label="  %call3 = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0))"]
	Node0x561f5336dea0[shape=record, label="  %call4 = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0))"]
	Node0x561f5336df90[shape=record, label="  %call5 = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0))"]
	Node0x561f5336a398[shape=record, label="  br label %while.body"]
	Node0x561f5336e180[shape=record, label="  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0))"]
	Node0x561f5336e3c8[shape=record, label="  %call7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i32* nonnull %number)"]
	Node0x561f5336e488[shape=record, label="  %1 = load i32, i32* %number, align 4, !tbaa !2"]
	Node0x561f5336eb30[shape=record, label="  %cmp8 = icmp eq i32 %1, 0"]
	Node0x561f5336ef08[shape=record, label="  br i1 %cmp8, label %while.end, label %if.end"]
	Node0x561f5336f020[shape=record, label="  %puts = call i32 @puts(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str, i64 0, i64 0))"]
	Node0x561f5336ee78[shape=record, label="  %2 = load i32, i32* %number, align 4, !tbaa !2"]
	Node0x561f5336f120[shape=record, label="  %div.i = sdiv i32 %2, 2"]
	Node0x561f5336f190[shape=record, label="  %cmp64.i = icmp sgt i32 %2, 3"]
	Node0x561f5336f418[shape=record, label="  br i1 %cmp64.i, label %for.cond1.preheader.i, label %func.exit"]
	Node0x561f5336f5a8[shape=record, label="  %i.065.i = phi i32 [ %inc23.i, %for.inc22.i ], [ 1, %if.end ]"]
	Node0x561f5336f690[shape=record, label="  %mul.i = mul nsw i32 %i.065.i, %i.065.i"]
	Node0x561f5336f838[shape=record, label="  br label %for.cond4.preheader.i"]
	Node0x561f5336f968[shape=record, label="  %j.063.i = phi i32 [ 0, %for.cond1.preheader.i ], [ %inc20.i, %for.inc19.i ]"]
	Node0x561f5336fd70[shape=record, label="  %mul10.i = mul nsw i32 %j.063.i, %j.063.i"]
	Node0x561f5336fe00[shape=record, label="  %add.i = add nuw nsw i32 %mul10.i, %mul.i"]
	Node0x561f5336ffa8[shape=record, label="  br label %for.cond7.preheader.i"]
	Node0x561f533700d8[shape=record, label="  %k.062.i = phi i32 [ 0, %for.cond4.preheader.i ], [ %inc17.i, %for.inc16.i ]"]
	Node0x561f533701c0[shape=record, label="  %mul11.i = mul nsw i32 %k.062.i, %k.062.i"]
	Node0x561f53370250[shape=record, label="  %add12.i = add nuw nsw i32 %add.i, %mul11.i"]
	Node0x561f533703a8[shape=record, label="  br label %for.body9.i"]
	Node0x561f533704f8[shape=record, label="  %l.061.i = phi i32 [ 0, %for.cond7.preheader.i ], [ %inc.i, %for.inc.i ]"]
	Node0x561f533705e0[shape=record, label="  %mul13.i = mul nsw i32 %l.061.i, %l.061.i"]
	Node0x561f53370670[shape=record, label="  %add14.i = add nuw nsw i32 %add12.i, %mul13.i"]
	Node0x561f53370700[shape=record, label="  %cmp15.i = icmp eq i32 %add14.i, %2"]
	Node0x561f5336b668[shape=record, label="  br i1 %cmp15.i, label %if.then.i, label %for.inc.i"]
	Node0x561f5336b8f8[shape=record, label="  %call.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 %2, i32 %i.065.i, i32 %i.065.i, i32 %j.063.i, i32 %j.063.i, i32 %k.062.i, i32 %k.062.i, i32 %l.061.i, i32 %l.061.i) #4"]
	Node0x561f5336b5d8[shape=record, label="  br label %func.exit"]
	Node0x561f5336b9f0[shape=record, label="  %inc.i = add nuw nsw i32 %l.061.i, 1"]
	Node0x561f5336ba60[shape=record, label="  %cmp8.i = icmp ult i32 %l.061.i, %k.062.i"]
	Node0x561f5336b7a8[shape=record, label="  br i1 %cmp8.i, label %for.body9.i, label %for.inc16.i"]
	Node0x561f5336baf0[shape=record, label="  %inc17.i = add nuw nsw i32 %k.062.i, 1"]
	Node0x561f5336bb60[shape=record, label="  %cmp5.i = icmp ult i32 %k.062.i, %j.063.i"]
	Node0x561f5336b718[shape=record, label="  br i1 %cmp5.i, label %for.cond7.preheader.i, label %for.inc19.i"]
	Node0x561f5336bbf0[shape=record, label="  %inc20.i = add nuw nsw i32 %j.063.i, 1"]
	Node0x561f5336bc60[shape=record, label="  %cmp2.i = icmp ult i32 %j.063.i, %i.065.i"]
	Node0x561f5336bd08[shape=record, label="  br i1 %cmp2.i, label %for.cond4.preheader.i, label %for.inc22.i"]
	Node0x561f5336bd80[shape=record, label="  %inc23.i = add nuw nsw i32 %i.065.i, 1"]
	Node0x561f53371820[shape=record, label="  %cmp.i = icmp slt i32 %inc23.i, %div.i"]
	Node0x561f533718c8[shape=record, label="  br i1 %cmp.i, label %for.cond1.preheader.i, label %func.exit"]
	Node0x561f533719e0[shape=record, label="  %puts13 = call i32 @puts(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.10, i64 0, i64 0))"]
	Node0x561f5336f558[shape=record, label="  %3 = load i32, i32* %number, align 4, !tbaa !2"]
	Node0x561f533720d0[shape=record, label="  %cmp = icmp eq i32 %3, 0"]
	Node0x561f53372158[shape=record, label="  br i1 %cmp, label %while.end, label %while.body"]
	Node0x561f53372250[shape=record, label="  %call11 = call i32 @puts(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0))"]
	Node0x561f53372368[shape=record, label="  %call12 = call i32 (...) @getch() #4"]
	Node0x561f533724d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #4"]
	Node0x561f53372580[shape=record, label="  ret void"]
	Node0x561f533697d8 -> Node0x561f53369968
	Node0x561f53369968 -> Node0x561f5336c6f8
	Node0x561f5336c6f8 -> Node0x561f5336c7d0
	Node0x561f5336c7d0 -> Node0x561f5336d808
	Node0x561f5336d808 -> Node0x561f5336da30
	Node0x561f5336da30 -> Node0x561f5336dbc0
	Node0x561f5336dbc0 -> Node0x561f5336dd30
	Node0x561f5336dd30 -> Node0x561f5336dea0
	Node0x561f5336dea0 -> Node0x561f5336df90
	Node0x561f5336df90 -> Node0x561f5336a398
	Node0x561f5336a398 -> Node0x561f5336e180
	Node0x561f5336e180 -> Node0x561f5336e3c8
	Node0x561f5336e3c8 -> Node0x561f5336e488
	Node0x561f5336e488 -> Node0x561f5336eb30
	Node0x561f5336eb30 -> Node0x561f5336ef08
	Node0x561f5336ef08 -> Node0x561f53372250
	Node0x561f5336ef08 -> Node0x561f5336f020
	Node0x561f5336f020 -> Node0x561f5336ee78
	Node0x561f5336ee78 -> Node0x561f5336f120
	Node0x561f5336f120 -> Node0x561f5336f190
	Node0x561f5336f190 -> Node0x561f5336f418
	Node0x561f5336f418 -> Node0x561f5336f5a8
	Node0x561f5336f418 -> Node0x561f533719e0
	Node0x561f5336f5a8 -> Node0x561f5336f690
	Node0x561f5336f690 -> Node0x561f5336f838
	Node0x561f5336f838 -> Node0x561f5336f968
	Node0x561f5336f968 -> Node0x561f5336fd70
	Node0x561f5336fd70 -> Node0x561f5336fe00
	Node0x561f5336fe00 -> Node0x561f5336ffa8
	Node0x561f5336ffa8 -> Node0x561f533700d8
	Node0x561f533700d8 -> Node0x561f533701c0
	Node0x561f533701c0 -> Node0x561f53370250
	Node0x561f53370250 -> Node0x561f533703a8
	Node0x561f533703a8 -> Node0x561f533704f8
	Node0x561f533704f8 -> Node0x561f533705e0
	Node0x561f533705e0 -> Node0x561f53370670
	Node0x561f53370670 -> Node0x561f53370700
	Node0x561f53370700 -> Node0x561f5336b668
	Node0x561f5336b668 -> Node0x561f5336b8f8
	Node0x561f5336b668 -> Node0x561f5336b9f0
	Node0x561f5336b8f8 -> Node0x561f5336b5d8
	Node0x561f5336b5d8 -> Node0x561f533719e0
	Node0x561f5336b9f0 -> Node0x561f5336ba60
	Node0x561f5336ba60 -> Node0x561f5336b7a8
	Node0x561f5336b7a8 -> Node0x561f533704f8
	Node0x561f5336b7a8 -> Node0x561f5336baf0
	Node0x561f5336baf0 -> Node0x561f5336bb60
	Node0x561f5336bb60 -> Node0x561f5336b718
	Node0x561f5336b718 -> Node0x561f533700d8
	Node0x561f5336b718 -> Node0x561f5336bbf0
	Node0x561f5336bbf0 -> Node0x561f5336bc60
	Node0x561f5336bc60 -> Node0x561f5336bd08
	Node0x561f5336bd08 -> Node0x561f5336f968
	Node0x561f5336bd08 -> Node0x561f5336bd80
	Node0x561f5336bd80 -> Node0x561f53371820
	Node0x561f53371820 -> Node0x561f533718c8
	Node0x561f533718c8 -> Node0x561f5336f5a8
	Node0x561f533718c8 -> Node0x561f533719e0
	Node0x561f533719e0 -> Node0x561f5336f558
	Node0x561f5336f558 -> Node0x561f533720d0
	Node0x561f533720d0 -> Node0x561f53372158
	Node0x561f53372158 -> Node0x561f53372250
	Node0x561f53372158 -> Node0x561f5336e180
	Node0x561f53372250 -> Node0x561f53372368
	Node0x561f53372368 -> Node0x561f533724d8
	Node0x561f533724d8 -> Node0x561f53372580
edge [color=red]
	Node0x561f533697d8 -> Node0x561f53369968[label="1"]
	Node0x561f53369968 -> Node0x561f5336c6f8[label="2"]
	Node0x561f53369590 -> Node0x561f5336c7d0[label="3"]
	Node0x561f5336c7d0 -> Node0x561f533697d8[label="4"]
	Node0x561f533697d8 -> Node0x561f5336e3c8[label="5"]
	Node0x561f533697d8 -> Node0x561f5336e488[label="6"]
	Node0x561f5336e488 -> Node0x561f5336eb30[label="7"]
	Node0x561f5336eb30 -> Node0x561f5336ef08[label="8"]
	Node0x561f533697d8 -> Node0x561f5336ee78[label="9"]
	Node0x561f5336ee78 -> Node0x561f5336f120[label="10"]
	Node0x561f5336ee78 -> Node0x561f5336f190[label="11"]
	Node0x561f5336f190 -> Node0x561f5336f418[label="12"]
	Node0x561f5336bd80 -> Node0x561f5336f5a8[label="13"]
	Node0x561f5336f5a8 -> Node0x561f5336f690[label="14"]
	Node0x561f5336f5a8 -> Node0x561f5336f690[label="15"]
	Node0x561f5336bbf0 -> Node0x561f5336f968[label="16"]
	Node0x561f5336f968 -> Node0x561f5336fd70[label="17"]
	Node0x561f5336f968 -> Node0x561f5336fd70[label="18"]
	Node0x561f5336fd70 -> Node0x561f5336fe00[label="19"]
	Node0x561f5336f690 -> Node0x561f5336fe00[label="20"]
	Node0x561f5336baf0 -> Node0x561f533700d8[label="21"]
	Node0x561f533700d8 -> Node0x561f533701c0[label="22"]
	Node0x561f533700d8 -> Node0x561f533701c0[label="23"]
	Node0x561f5336fe00 -> Node0x561f53370250[label="24"]
	Node0x561f533701c0 -> Node0x561f53370250[label="25"]
	Node0x561f5336b9f0 -> Node0x561f533704f8[label="26"]
	Node0x561f533704f8 -> Node0x561f533705e0[label="27"]
	Node0x561f533704f8 -> Node0x561f533705e0[label="28"]
	Node0x561f53370250 -> Node0x561f53370670[label="29"]
	Node0x561f533705e0 -> Node0x561f53370670[label="30"]
	Node0x561f53370670 -> Node0x561f53370700[label="31"]
	Node0x561f5336ee78 -> Node0x561f53370700[label="32"]
	Node0x561f53370700 -> Node0x561f5336b668[label="33"]
	Node0x561f5336ee78 -> Node0x561f5336b8f8[label="34"]
	Node0x561f5336f5a8 -> Node0x561f5336b8f8[label="35"]
	Node0x561f5336f5a8 -> Node0x561f5336b8f8[label="36"]
	Node0x561f5336f968 -> Node0x561f5336b8f8[label="37"]
	Node0x561f5336f968 -> Node0x561f5336b8f8[label="38"]
	Node0x561f533700d8 -> Node0x561f5336b8f8[label="39"]
	Node0x561f533700d8 -> Node0x561f5336b8f8[label="40"]
	Node0x561f533704f8 -> Node0x561f5336b8f8[label="41"]
	Node0x561f533704f8 -> Node0x561f5336b8f8[label="42"]
	Node0x561f533704f8 -> Node0x561f5336b9f0[label="43"]
	Node0x561f533704f8 -> Node0x561f5336ba60[label="44"]
	Node0x561f533700d8 -> Node0x561f5336ba60[label="45"]
	Node0x561f5336ba60 -> Node0x561f5336b7a8[label="46"]
	Node0x561f533700d8 -> Node0x561f5336baf0[label="47"]
	Node0x561f533700d8 -> Node0x561f5336bb60[label="48"]
	Node0x561f5336f968 -> Node0x561f5336bb60[label="49"]
	Node0x561f5336bb60 -> Node0x561f5336b718[label="50"]
	Node0x561f5336f968 -> Node0x561f5336bbf0[label="51"]
	Node0x561f5336f968 -> Node0x561f5336bc60[label="52"]
	Node0x561f5336f5a8 -> Node0x561f5336bc60[label="53"]
	Node0x561f5336bc60 -> Node0x561f5336bd08[label="54"]
	Node0x561f5336f5a8 -> Node0x561f5336bd80[label="55"]
	Node0x561f5336bd80 -> Node0x561f53371820[label="56"]
	Node0x561f5336f120 -> Node0x561f53371820[label="57"]
	Node0x561f53371820 -> Node0x561f533718c8[label="58"]
	Node0x561f533697d8 -> Node0x561f5336f558[label="59"]
	Node0x561f5336f558 -> Node0x561f533720d0[label="60"]
	Node0x561f533720d0 -> Node0x561f53372158[label="61"]
	Node0x561f53369968 -> Node0x561f533724d8[label="62"]
}
