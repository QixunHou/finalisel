digraph "CDFG for'main' function" {
	Node0x55ac934e1918[shape=record, label="  %p = alloca [100 x %struct.addr], align 16"]
	Node0x55ac934e16c8[shape=record, label="  %0 = bitcast [100 x %struct.addr]* %p to i8*"]
	Node0x55ac934e8cc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4800, i8* nonnull %0) #5"]
	Node0x55ac934e8e38[shape=record, label="  br label %for.cond"]
	Node0x55ac934e8ee8[shape=record, label="  %indvars.iv20 = phi i64 [ %indvars.iv.next21, %for.cond ], [ 0, %entry ]"]
	Node0x55ac934e8fc8[shape=record, label="  %add.ptr = getelementptr inbounds [100 x %struct.addr], [100 x %struct.addr]* %p, i64 0, i64 %indvars.iv20"]
	Node0x55ac934e9070[shape=record, label="  %call = call i32 @func(%struct.addr* nonnull %add.ptr)"]
	Node0x55ac934e9140[shape=record, label="  %tobool = icmp eq i32 %call, 0"]
	Node0x55ac934e9230[shape=record, label="  %indvars.iv.next21 = add nuw i64 %indvars.iv20, 1"]
	Node0x55ac934e9338[shape=record, label="  br i1 %tobool, label %for.cond1.preheader, label %for.cond"]
	Node0x55ac934e8dd8[shape=record, label="  %1 = trunc i64 %indvars.iv20 to i32"]
	Node0x55ac934e93b0[shape=record, label="  %cmp18 = icmp eq i32 %1, 0"]
	Node0x55ac934e9618[shape=record, label="  br i1 %cmp18, label %for.end9, label %for.body2.preheader"]
	Node0x55ac934e9690[shape=record, label="  %wide.trip.count = and i64 %indvars.iv20, 4294967295"]
	Node0x55ac934e9938[shape=record, label="  br label %for.body2"]
	Node0x55ac934e99b8[shape=record, label="  %indvars.iv = phi i64 [ 0, %for.body2.preheader ], [ %indvars.iv.next, %for.body2 ]"]
	Node0x55ac934e4780[shape=record, label="  %name.i = getelementptr inbounds [100 x %struct.addr], [100 x %struct.addr]* %p, i64 0, i64 %indvars.iv, i32 0"]
	Node0x55ac934e47e8[shape=record, label="  %2 = load i8*, i8** %name.i, align 16, !tbaa !2"]
	Node0x55ac934e48a8[shape=record, label="  %call.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8* %2) #5"]
	Node0x55ac934e49d0[shape=record, label="  %address.i = getelementptr inbounds [100 x %struct.addr], [100 x %struct.addr]* %p, i64 0, i64 %indvars.iv, i32 1"]
	Node0x55ac934e4a68[shape=record, label="  %3 = load i8*, i8** %address.i, align 8, !tbaa !7"]
	Node0x55ac934e4b18[shape=record, label="  %call1.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i8* %3) #5"]
	Node0x55ac934e4c58[shape=record, label="  %arraydecay.i = getelementptr inbounds [100 x %struct.addr], [100 x %struct.addr]* %p, i64 0, i64 %indvars.iv, i32 2, i64 0"]
	Node0x55ac934e4d48[shape=record, label="  %call2.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* nonnull %arraydecay.i) #5"]
	Node0x55ac934e4e88[shape=record, label="  %arraydecay3.i = getelementptr inbounds [100 x %struct.addr], [100 x %struct.addr]* %p, i64 0, i64 %indvars.iv, i32 3, i64 0"]
	Node0x55ac934eaad8[shape=record, label="  %call4.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i8* nonnull %arraydecay3.i) #5"]
	Node0x55ac934eabd0[shape=record, label="  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1"]
	Node0x55ac934eac40[shape=record, label="  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count"]
	Node0x55ac934eafe8[shape=record, label="  br i1 %exitcond, label %for.end9, label %for.body2"]
	Node0x55ac934eb100[shape=record, label="  %call10 = call i32 @puts(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0))"]
	Node0x55ac934eb2b8[shape=record, label="  %call11 = call i32 (...) @getch() #5"]
	Node0x55ac934eb488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4800, i8* nonnull %0) #5"]
	Node0x55ac934e9568[shape=record, label="  ret i32 0"]
	Node0x55ac934e1918 -> Node0x55ac934e16c8
	Node0x55ac934e16c8 -> Node0x55ac934e8cc8
	Node0x55ac934e8cc8 -> Node0x55ac934e8e38
	Node0x55ac934e8e38 -> Node0x55ac934e8ee8
	Node0x55ac934e8ee8 -> Node0x55ac934e8fc8
	Node0x55ac934e8fc8 -> Node0x55ac934e9070
	Node0x55ac934e9070 -> Node0x55ac934e9140
	Node0x55ac934e9140 -> Node0x55ac934e9230
	Node0x55ac934e9230 -> Node0x55ac934e9338
	Node0x55ac934e9338 -> Node0x55ac934e8dd8
	Node0x55ac934e9338 -> Node0x55ac934e8ee8
	Node0x55ac934e8dd8 -> Node0x55ac934e93b0
	Node0x55ac934e93b0 -> Node0x55ac934e9618
	Node0x55ac934e9618 -> Node0x55ac934eb100
	Node0x55ac934e9618 -> Node0x55ac934e9690
	Node0x55ac934e9690 -> Node0x55ac934e9938
	Node0x55ac934e9938 -> Node0x55ac934e99b8
	Node0x55ac934e99b8 -> Node0x55ac934e4780
	Node0x55ac934e4780 -> Node0x55ac934e47e8
	Node0x55ac934e47e8 -> Node0x55ac934e48a8
	Node0x55ac934e48a8 -> Node0x55ac934e49d0
	Node0x55ac934e49d0 -> Node0x55ac934e4a68
	Node0x55ac934e4a68 -> Node0x55ac934e4b18
	Node0x55ac934e4b18 -> Node0x55ac934e4c58
	Node0x55ac934e4c58 -> Node0x55ac934e4d48
	Node0x55ac934e4d48 -> Node0x55ac934e4e88
	Node0x55ac934e4e88 -> Node0x55ac934eaad8
	Node0x55ac934eaad8 -> Node0x55ac934eabd0
	Node0x55ac934eabd0 -> Node0x55ac934eac40
	Node0x55ac934eac40 -> Node0x55ac934eafe8
	Node0x55ac934eafe8 -> Node0x55ac934eb100
	Node0x55ac934eafe8 -> Node0x55ac934e99b8
	Node0x55ac934eb100 -> Node0x55ac934eb2b8
	Node0x55ac934eb2b8 -> Node0x55ac934eb488
	Node0x55ac934eb488 -> Node0x55ac934e9568
edge [color=red]
	Node0x55ac934e1918 -> Node0x55ac934e16c8[label="1"]
	Node0x55ac934e16c8 -> Node0x55ac934e8cc8[label="2"]
	Node0x55ac934e9230 -> Node0x55ac934e8ee8[label="3"]
	Node0x55ac934e1918 -> Node0x55ac934e8fc8[label="4"]
	Node0x55ac934e8ee8 -> Node0x55ac934e8fc8[label="5"]
	Node0x55ac934e8fc8 -> Node0x55ac934e9070[label="6"]
	Node0x55ac934e9070 -> Node0x55ac934e9140[label="7"]
	Node0x55ac934e8ee8 -> Node0x55ac934e9230[label="8"]
	Node0x55ac934e9140 -> Node0x55ac934e9338[label="9"]
	Node0x55ac934e8ee8 -> Node0x55ac934e8dd8[label="10"]
	Node0x55ac934e8dd8 -> Node0x55ac934e93b0[label="11"]
	Node0x55ac934e93b0 -> Node0x55ac934e9618[label="12"]
	Node0x55ac934e8ee8 -> Node0x55ac934e9690[label="13"]
	Node0x55ac934eabd0 -> Node0x55ac934e99b8[label="14"]
	Node0x55ac934e1918 -> Node0x55ac934e4780[label="15"]
	Node0x55ac934e99b8 -> Node0x55ac934e4780[label="16"]
	Node0x55ac934e4780 -> Node0x55ac934e47e8[label="17"]
	Node0x55ac934e47e8 -> Node0x55ac934e48a8[label="18"]
	Node0x55ac934e1918 -> Node0x55ac934e49d0[label="19"]
	Node0x55ac934e99b8 -> Node0x55ac934e49d0[label="20"]
	Node0x55ac934e49d0 -> Node0x55ac934e4a68[label="21"]
	Node0x55ac934e4a68 -> Node0x55ac934e4b18[label="22"]
	Node0x55ac934e1918 -> Node0x55ac934e4c58[label="23"]
	Node0x55ac934e99b8 -> Node0x55ac934e4c58[label="24"]
	Node0x55ac934e4c58 -> Node0x55ac934e4d48[label="25"]
	Node0x55ac934e1918 -> Node0x55ac934e4e88[label="26"]
	Node0x55ac934e99b8 -> Node0x55ac934e4e88[label="27"]
	Node0x55ac934e4e88 -> Node0x55ac934eaad8[label="28"]
	Node0x55ac934e99b8 -> Node0x55ac934eabd0[label="29"]
	Node0x55ac934eabd0 -> Node0x55ac934eac40[label="30"]
	Node0x55ac934e9690 -> Node0x55ac934eac40[label="31"]
	Node0x55ac934eac40 -> Node0x55ac934eafe8[label="32"]
	Node0x55ac934e16c8 -> Node0x55ac934eb488[label="33"]
}
