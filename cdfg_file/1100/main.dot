digraph "CDFG for'main' function" {
	Node0x5642d81437d8[shape=record, label="  %number = alloca i32, align 4"]
	Node0x5642d8143968[shape=record, label="  %0 = bitcast i32* %number to i8*"]
	Node0x5642d81466f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #4"]
	Node0x5642d81467d0[shape=record, label="  store i32 1, i32* %number, align 4, !tbaa !2"]
	Node0x5642d8147808[shape=record, label="  %call = tail call i32 (...) @clrscr() #4"]
	Node0x5642d8147a30[shape=record, label="  %call1 = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0))"]
	Node0x5642d8147bc0[shape=record, label="  %call2 = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0))"]
	Node0x5642d8147d30[shape=record, label="  %call3 = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0))"]
	Node0x5642d8147ea0[shape=record, label="  %call4 = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0))"]
	Node0x5642d8147f90[shape=record, label="  %call5 = tail call i32 @puts(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0))"]
	Node0x5642d8144398[shape=record, label="  br label %while.body"]
	Node0x5642d8148180[shape=record, label="  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0))"]
	Node0x5642d81483c8[shape=record, label="  %call7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i32* nonnull %number)"]
	Node0x5642d8148488[shape=record, label="  %1 = load i32, i32* %number, align 4, !tbaa !2"]
	Node0x5642d8148b30[shape=record, label="  %cmp8 = icmp eq i32 %1, 0"]
	Node0x5642d8148f08[shape=record, label="  br i1 %cmp8, label %while.end, label %if.end"]
	Node0x5642d8149020[shape=record, label="  %puts = call i32 @puts(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str, i64 0, i64 0))"]
	Node0x5642d8148e78[shape=record, label="  %2 = load i32, i32* %number, align 4, !tbaa !2"]
	Node0x5642d8149120[shape=record, label="  %div.i = sdiv i32 %2, 2"]
	Node0x5642d8149190[shape=record, label="  %cmp64.i = icmp sgt i32 %2, 3"]
	Node0x5642d8149418[shape=record, label="  br i1 %cmp64.i, label %for.cond1.preheader.i, label %func.exit"]
	Node0x5642d81495a8[shape=record, label="  %i.065.i = phi i32 [ %inc23.i, %for.inc22.i ], [ 1, %if.end ]"]
	Node0x5642d8149690[shape=record, label="  %mul.i = mul nsw i32 %i.065.i, %i.065.i"]
	Node0x5642d8149838[shape=record, label="  br label %for.cond4.preheader.i"]
	Node0x5642d8149968[shape=record, label="  %j.063.i = phi i32 [ 0, %for.cond1.preheader.i ], [ %inc20.i, %for.inc19.i ]"]
	Node0x5642d8149d70[shape=record, label="  %mul10.i = mul nsw i32 %j.063.i, %j.063.i"]
	Node0x5642d8149e00[shape=record, label="  %add.i = add nuw nsw i32 %mul10.i, %mul.i"]
	Node0x5642d8149fa8[shape=record, label="  br label %for.cond7.preheader.i"]
	Node0x5642d814a0d8[shape=record, label="  %k.062.i = phi i32 [ 0, %for.cond4.preheader.i ], [ %inc17.i, %for.inc16.i ]"]
	Node0x5642d814a1c0[shape=record, label="  %mul11.i = mul nsw i32 %k.062.i, %k.062.i"]
	Node0x5642d814a250[shape=record, label="  %add12.i = add nuw nsw i32 %add.i, %mul11.i"]
	Node0x5642d814a3a8[shape=record, label="  br label %for.body9.i"]
	Node0x5642d814a4f8[shape=record, label="  %l.061.i = phi i32 [ 0, %for.cond7.preheader.i ], [ %inc.i, %for.inc.i ]"]
	Node0x5642d814a5e0[shape=record, label="  %mul13.i = mul nsw i32 %l.061.i, %l.061.i"]
	Node0x5642d814a670[shape=record, label="  %add14.i = add nuw nsw i32 %add12.i, %mul13.i"]
	Node0x5642d814a700[shape=record, label="  %cmp15.i = icmp eq i32 %add14.i, %2"]
	Node0x5642d8145668[shape=record, label="  br i1 %cmp15.i, label %if.then.i, label %for.inc.i"]
	Node0x5642d81458f8[shape=record, label="  %call.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 %2, i32 %i.065.i, i32 %i.065.i, i32 %j.063.i, i32 %j.063.i, i32 %k.062.i, i32 %k.062.i, i32 %l.061.i, i32 %l.061.i) #4"]
	Node0x5642d81455d8[shape=record, label="  br label %func.exit"]
	Node0x5642d81459f0[shape=record, label="  %inc.i = add nuw nsw i32 %l.061.i, 1"]
	Node0x5642d8145a60[shape=record, label="  %cmp8.i = icmp ult i32 %l.061.i, %k.062.i"]
	Node0x5642d81457a8[shape=record, label="  br i1 %cmp8.i, label %for.body9.i, label %for.inc16.i"]
	Node0x5642d8145af0[shape=record, label="  %inc17.i = add nuw nsw i32 %k.062.i, 1"]
	Node0x5642d8145b60[shape=record, label="  %cmp5.i = icmp ult i32 %k.062.i, %j.063.i"]
	Node0x5642d8145718[shape=record, label="  br i1 %cmp5.i, label %for.cond7.preheader.i, label %for.inc19.i"]
	Node0x5642d8145bf0[shape=record, label="  %inc20.i = add nuw nsw i32 %j.063.i, 1"]
	Node0x5642d8145c60[shape=record, label="  %cmp2.i = icmp ult i32 %j.063.i, %i.065.i"]
	Node0x5642d8145d08[shape=record, label="  br i1 %cmp2.i, label %for.cond4.preheader.i, label %for.inc22.i"]
	Node0x5642d8145d80[shape=record, label="  %inc23.i = add nuw nsw i32 %i.065.i, 1"]
	Node0x5642d814b820[shape=record, label="  %cmp.i = icmp slt i32 %inc23.i, %div.i"]
	Node0x5642d814b8c8[shape=record, label="  br i1 %cmp.i, label %for.cond1.preheader.i, label %func.exit"]
	Node0x5642d814b9e0[shape=record, label="  %puts13 = call i32 @puts(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.10, i64 0, i64 0))"]
	Node0x5642d8149558[shape=record, label="  %3 = load i32, i32* %number, align 4, !tbaa !2"]
	Node0x5642d814c0d0[shape=record, label="  %cmp = icmp eq i32 %3, 0"]
	Node0x5642d814c158[shape=record, label="  br i1 %cmp, label %while.end, label %while.body"]
	Node0x5642d814c250[shape=record, label="  %call11 = call i32 @puts(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0))"]
	Node0x5642d814c368[shape=record, label="  %call12 = call i32 (...) @getch() #4"]
	Node0x5642d814c4d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #4"]
	Node0x5642d814c580[shape=record, label="  ret void"]
	Node0x5642d81437d8 -> Node0x5642d8143968
	Node0x5642d8143968 -> Node0x5642d81466f8
	Node0x5642d81466f8 -> Node0x5642d81467d0
	Node0x5642d81467d0 -> Node0x5642d8147808
	Node0x5642d8147808 -> Node0x5642d8147a30
	Node0x5642d8147a30 -> Node0x5642d8147bc0
	Node0x5642d8147bc0 -> Node0x5642d8147d30
	Node0x5642d8147d30 -> Node0x5642d8147ea0
	Node0x5642d8147ea0 -> Node0x5642d8147f90
	Node0x5642d8147f90 -> Node0x5642d8144398
	Node0x5642d8144398 -> Node0x5642d8148180
	Node0x5642d8148180 -> Node0x5642d81483c8
	Node0x5642d81483c8 -> Node0x5642d8148488
	Node0x5642d8148488 -> Node0x5642d8148b30
	Node0x5642d8148b30 -> Node0x5642d8148f08
	Node0x5642d8148f08 -> Node0x5642d814c250
	Node0x5642d8148f08 -> Node0x5642d8149020
	Node0x5642d8149020 -> Node0x5642d8148e78
	Node0x5642d8148e78 -> Node0x5642d8149120
	Node0x5642d8149120 -> Node0x5642d8149190
	Node0x5642d8149190 -> Node0x5642d8149418
	Node0x5642d8149418 -> Node0x5642d81495a8
	Node0x5642d8149418 -> Node0x5642d814b9e0
	Node0x5642d81495a8 -> Node0x5642d8149690
	Node0x5642d8149690 -> Node0x5642d8149838
	Node0x5642d8149838 -> Node0x5642d8149968
	Node0x5642d8149968 -> Node0x5642d8149d70
	Node0x5642d8149d70 -> Node0x5642d8149e00
	Node0x5642d8149e00 -> Node0x5642d8149fa8
	Node0x5642d8149fa8 -> Node0x5642d814a0d8
	Node0x5642d814a0d8 -> Node0x5642d814a1c0
	Node0x5642d814a1c0 -> Node0x5642d814a250
	Node0x5642d814a250 -> Node0x5642d814a3a8
	Node0x5642d814a3a8 -> Node0x5642d814a4f8
	Node0x5642d814a4f8 -> Node0x5642d814a5e0
	Node0x5642d814a5e0 -> Node0x5642d814a670
	Node0x5642d814a670 -> Node0x5642d814a700
	Node0x5642d814a700 -> Node0x5642d8145668
	Node0x5642d8145668 -> Node0x5642d81458f8
	Node0x5642d8145668 -> Node0x5642d81459f0
	Node0x5642d81458f8 -> Node0x5642d81455d8
	Node0x5642d81455d8 -> Node0x5642d814b9e0
	Node0x5642d81459f0 -> Node0x5642d8145a60
	Node0x5642d8145a60 -> Node0x5642d81457a8
	Node0x5642d81457a8 -> Node0x5642d814a4f8
	Node0x5642d81457a8 -> Node0x5642d8145af0
	Node0x5642d8145af0 -> Node0x5642d8145b60
	Node0x5642d8145b60 -> Node0x5642d8145718
	Node0x5642d8145718 -> Node0x5642d814a0d8
	Node0x5642d8145718 -> Node0x5642d8145bf0
	Node0x5642d8145bf0 -> Node0x5642d8145c60
	Node0x5642d8145c60 -> Node0x5642d8145d08
	Node0x5642d8145d08 -> Node0x5642d8149968
	Node0x5642d8145d08 -> Node0x5642d8145d80
	Node0x5642d8145d80 -> Node0x5642d814b820
	Node0x5642d814b820 -> Node0x5642d814b8c8
	Node0x5642d814b8c8 -> Node0x5642d81495a8
	Node0x5642d814b8c8 -> Node0x5642d814b9e0
	Node0x5642d814b9e0 -> Node0x5642d8149558
	Node0x5642d8149558 -> Node0x5642d814c0d0
	Node0x5642d814c0d0 -> Node0x5642d814c158
	Node0x5642d814c158 -> Node0x5642d814c250
	Node0x5642d814c158 -> Node0x5642d8148180
	Node0x5642d814c250 -> Node0x5642d814c368
	Node0x5642d814c368 -> Node0x5642d814c4d8
	Node0x5642d814c4d8 -> Node0x5642d814c580
edge [color=red]
	Node0x5642d81437d8 -> Node0x5642d8143968[label="1"]
	Node0x5642d8143968 -> Node0x5642d81466f8[label="2"]
	Node0x5642d8143590 -> Node0x5642d81467d0[label="3"]
	Node0x5642d81467d0 -> Node0x5642d81437d8[label="4"]
	Node0x5642d81437d8 -> Node0x5642d81483c8[label="5"]
	Node0x5642d81437d8 -> Node0x5642d8148488[label="6"]
	Node0x5642d8148488 -> Node0x5642d8148b30[label="7"]
	Node0x5642d8148b30 -> Node0x5642d8148f08[label="8"]
	Node0x5642d81437d8 -> Node0x5642d8148e78[label="9"]
	Node0x5642d8148e78 -> Node0x5642d8149120[label="10"]
	Node0x5642d8148e78 -> Node0x5642d8149190[label="11"]
	Node0x5642d8149190 -> Node0x5642d8149418[label="12"]
	Node0x5642d8145d80 -> Node0x5642d81495a8[label="13"]
	Node0x5642d81495a8 -> Node0x5642d8149690[label="14"]
	Node0x5642d81495a8 -> Node0x5642d8149690[label="15"]
	Node0x5642d8145bf0 -> Node0x5642d8149968[label="16"]
	Node0x5642d8149968 -> Node0x5642d8149d70[label="17"]
	Node0x5642d8149968 -> Node0x5642d8149d70[label="18"]
	Node0x5642d8149d70 -> Node0x5642d8149e00[label="19"]
	Node0x5642d8149690 -> Node0x5642d8149e00[label="20"]
	Node0x5642d8145af0 -> Node0x5642d814a0d8[label="21"]
	Node0x5642d814a0d8 -> Node0x5642d814a1c0[label="22"]
	Node0x5642d814a0d8 -> Node0x5642d814a1c0[label="23"]
	Node0x5642d8149e00 -> Node0x5642d814a250[label="24"]
	Node0x5642d814a1c0 -> Node0x5642d814a250[label="25"]
	Node0x5642d81459f0 -> Node0x5642d814a4f8[label="26"]
	Node0x5642d814a4f8 -> Node0x5642d814a5e0[label="27"]
	Node0x5642d814a4f8 -> Node0x5642d814a5e0[label="28"]
	Node0x5642d814a250 -> Node0x5642d814a670[label="29"]
	Node0x5642d814a5e0 -> Node0x5642d814a670[label="30"]
	Node0x5642d814a670 -> Node0x5642d814a700[label="31"]
	Node0x5642d8148e78 -> Node0x5642d814a700[label="32"]
	Node0x5642d814a700 -> Node0x5642d8145668[label="33"]
	Node0x5642d8148e78 -> Node0x5642d81458f8[label="34"]
	Node0x5642d81495a8 -> Node0x5642d81458f8[label="35"]
	Node0x5642d81495a8 -> Node0x5642d81458f8[label="36"]
	Node0x5642d8149968 -> Node0x5642d81458f8[label="37"]
	Node0x5642d8149968 -> Node0x5642d81458f8[label="38"]
	Node0x5642d814a0d8 -> Node0x5642d81458f8[label="39"]
	Node0x5642d814a0d8 -> Node0x5642d81458f8[label="40"]
	Node0x5642d814a4f8 -> Node0x5642d81458f8[label="41"]
	Node0x5642d814a4f8 -> Node0x5642d81458f8[label="42"]
	Node0x5642d814a4f8 -> Node0x5642d81459f0[label="43"]
	Node0x5642d814a4f8 -> Node0x5642d8145a60[label="44"]
	Node0x5642d814a0d8 -> Node0x5642d8145a60[label="45"]
	Node0x5642d8145a60 -> Node0x5642d81457a8[label="46"]
	Node0x5642d814a0d8 -> Node0x5642d8145af0[label="47"]
	Node0x5642d814a0d8 -> Node0x5642d8145b60[label="48"]
	Node0x5642d8149968 -> Node0x5642d8145b60[label="49"]
	Node0x5642d8145b60 -> Node0x5642d8145718[label="50"]
	Node0x5642d8149968 -> Node0x5642d8145bf0[label="51"]
	Node0x5642d8149968 -> Node0x5642d8145c60[label="52"]
	Node0x5642d81495a8 -> Node0x5642d8145c60[label="53"]
	Node0x5642d8145c60 -> Node0x5642d8145d08[label="54"]
	Node0x5642d81495a8 -> Node0x5642d8145d80[label="55"]
	Node0x5642d8145d80 -> Node0x5642d814b820[label="56"]
	Node0x5642d8149120 -> Node0x5642d814b820[label="57"]
	Node0x5642d814b820 -> Node0x5642d814b8c8[label="58"]
	Node0x5642d81437d8 -> Node0x5642d8149558[label="59"]
	Node0x5642d8149558 -> Node0x5642d814c0d0[label="60"]
	Node0x5642d814c0d0 -> Node0x5642d814c158[label="61"]
	Node0x5642d8143968 -> Node0x5642d814c4d8[label="62"]
}
