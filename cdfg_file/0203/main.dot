digraph "CDFG for'main' function" {
	Node0x55fa8850af38[shape=record, label="  %num = alloca i32, align 4"]
	Node0x55fa8850afb8[shape=record, label="  %0 = bitcast i32* %num to i8*"]
	Node0x55fa8850b1f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #4"]
	Node0x55fa8850b608[shape=record, label="  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %num)"]
	Node0x55fa8850b6c8[shape=record, label="  %1 = load i32, i32* %num, align 4, !tbaa !2"]
	Node0x55fa8850c680[shape=record, label="  %cmp4.i = icmp slt i32 %1, 2"]
	Node0x55fa8850c918[shape=record, label="  br i1 %cmp4.i, label %func.exit, label %if.else.preheader.i"]
	Node0x55fa8850c868[shape=record, label="  %2 = sext i32 %1 to i64"]
	Node0x55fa8850ca88[shape=record, label="  br label %if.else.i"]
	Node0x55fa8850cb38[shape=record, label="  %indvars.iv.i = phi i64 [ %2, %if.else.preheader.i ], [ %indvars.iv.next.i, %if.else.i ]"]
	Node0x55fa8850ccc8[shape=record, label="  %accumulator.tr5.i = phi i64 [ 1, %if.else.preheader.i ], [ %mul.i, %if.else.i ]"]
	Node0x55fa8850cd90[shape=record, label="  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1"]
	Node0x55fa8850ce30[shape=record, label="  %mul.i = mul nsw i64 %accumulator.tr5.i, %indvars.iv.i"]
	Node0x55fa8850cea0[shape=record, label="  %cmp.i = icmp slt i64 %indvars.iv.i, 3"]
	Node0x55fa8850cf28[shape=record, label="  br i1 %cmp.i, label %func.exit, label %if.else.i"]
	Node0x55fa8850cf78[shape=record, label="  %accumulator.tr.lcssa.i = phi i64 [ 1, %entry ], [ %mul.i, %if.else.i ]"]
	Node0x55fa8850d340[shape=record, label="  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 %1, i64 %accumulator.tr.lcssa.i)"]
	Node0x55fa8850d4d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #4"]
	Node0x55fa8850cc78[shape=record, label="  ret i32 0"]
	Node0x55fa8850af38 -> Node0x55fa8850afb8
	Node0x55fa8850afb8 -> Node0x55fa8850b1f8
	Node0x55fa8850b1f8 -> Node0x55fa8850b608
	Node0x55fa8850b608 -> Node0x55fa8850b6c8
	Node0x55fa8850b6c8 -> Node0x55fa8850c680
	Node0x55fa8850c680 -> Node0x55fa8850c918
	Node0x55fa8850c918 -> Node0x55fa8850cf78
	Node0x55fa8850c918 -> Node0x55fa8850c868
	Node0x55fa8850c868 -> Node0x55fa8850ca88
	Node0x55fa8850ca88 -> Node0x55fa8850cb38
	Node0x55fa8850cb38 -> Node0x55fa8850ccc8
	Node0x55fa8850ccc8 -> Node0x55fa8850cd90
	Node0x55fa8850cd90 -> Node0x55fa8850ce30
	Node0x55fa8850ce30 -> Node0x55fa8850cea0
	Node0x55fa8850cea0 -> Node0x55fa8850cf28
	Node0x55fa8850cf28 -> Node0x55fa8850cf78
	Node0x55fa8850cf28 -> Node0x55fa8850cb38
	Node0x55fa8850cf78 -> Node0x55fa8850d340
	Node0x55fa8850d340 -> Node0x55fa8850d4d8
	Node0x55fa8850d4d8 -> Node0x55fa8850cc78
edge [color=red]
	Node0x55fa8850af38 -> Node0x55fa8850afb8[label="1"]
	Node0x55fa8850afb8 -> Node0x55fa8850b1f8[label="2"]
	Node0x55fa8850af38 -> Node0x55fa8850b608[label="3"]
	Node0x55fa8850af38 -> Node0x55fa8850b6c8[label="4"]
	Node0x55fa8850b6c8 -> Node0x55fa8850c680[label="5"]
	Node0x55fa8850c680 -> Node0x55fa8850c918[label="6"]
	Node0x55fa8850b6c8 -> Node0x55fa8850c868[label="7"]
	Node0x55fa8850c868 -> Node0x55fa8850cb38[label="8"]
	Node0x55fa8850cd90 -> Node0x55fa8850cb38[label="9"]
	Node0x55fa8850ce30 -> Node0x55fa8850ccc8[label="10"]
	Node0x55fa8850cb38 -> Node0x55fa8850cd90[label="11"]
	Node0x55fa8850ccc8 -> Node0x55fa8850ce30[label="12"]
	Node0x55fa8850cb38 -> Node0x55fa8850ce30[label="13"]
	Node0x55fa8850cb38 -> Node0x55fa8850cea0[label="14"]
	Node0x55fa8850cea0 -> Node0x55fa8850cf28[label="15"]
	Node0x55fa8850ce30 -> Node0x55fa8850cf78[label="16"]
	Node0x55fa8850b6c8 -> Node0x55fa8850d340[label="17"]
	Node0x55fa8850cf78 -> Node0x55fa8850d340[label="18"]
	Node0x55fa8850afb8 -> Node0x55fa8850d4d8[label="19"]
}
