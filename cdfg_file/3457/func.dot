digraph "CDFG for'func' function" {
	Node0x5644fcc21d18[shape=record, label="  %anInteger = alloca i32, align 4"]
	Node0x5644fcc223e8[shape=record, label="  %0 = bitcast i32* %anInteger to i8*"]
	Node0x5644fcc22848[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x5644fcc22940[shape=record, label="  store i32 0, i32* %anInteger, align 4, !tbaa !2"]
	Node0x5644fcc23bc0[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0))"]
	Node0x5644fcc23e28[shape=record, label="  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %anInteger)"]
	Node0x5644fcc23ee8[shape=record, label="  %1 = load i32, i32* %anInteger, align 4, !tbaa !2"]
	Node0x5644fcc24610[shape=record, label="  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0))"]
	Node0x5644fcc24780[shape=record, label="  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0))"]
	Node0x5644fcc24880[shape=record, label="  %conv = shl i32 %1, 24"]
	Node0x5644fcc24940[shape=record, label="  %sext = add i32 %conv, 805306368"]
	Node0x5644fcc249d0[shape=record, label="  %conv4 = ashr exact i32 %sext, 24"]
	Node0x5644fcc24a60[shape=record, label="  store i32 %conv4, i32* %anInteger, align 4, !tbaa !2"]
	Node0x5644fcc24b98[shape=record, label="  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i32 %conv4)"]
	Node0x5644fcc24dd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x5644fcc24e98[shape=record, label="  ret i32 0"]
	Node0x5644fcc21d18 -> Node0x5644fcc223e8
	Node0x5644fcc223e8 -> Node0x5644fcc22848
	Node0x5644fcc22848 -> Node0x5644fcc22940
	Node0x5644fcc22940 -> Node0x5644fcc23bc0
	Node0x5644fcc23bc0 -> Node0x5644fcc23e28
	Node0x5644fcc23e28 -> Node0x5644fcc23ee8
	Node0x5644fcc23ee8 -> Node0x5644fcc24610
	Node0x5644fcc24610 -> Node0x5644fcc24780
	Node0x5644fcc24780 -> Node0x5644fcc24880
	Node0x5644fcc24880 -> Node0x5644fcc24940
	Node0x5644fcc24940 -> Node0x5644fcc249d0
	Node0x5644fcc249d0 -> Node0x5644fcc24a60
	Node0x5644fcc24a60 -> Node0x5644fcc24b98
	Node0x5644fcc24b98 -> Node0x5644fcc24dd8
	Node0x5644fcc24dd8 -> Node0x5644fcc24e98
edge [color=red]
	Node0x5644fcc21d18 -> Node0x5644fcc223e8[label="1"]
	Node0x5644fcc223e8 -> Node0x5644fcc22848[label="2"]
	Node0x5644fcc22450 -> Node0x5644fcc22940[label="3"]
	Node0x5644fcc22940 -> Node0x5644fcc21d18[label="4"]
	Node0x5644fcc21d18 -> Node0x5644fcc23e28[label="5"]
	Node0x5644fcc21d18 -> Node0x5644fcc23ee8[label="6"]
	Node0x5644fcc23ee8 -> Node0x5644fcc24880[label="7"]
	Node0x5644fcc24880 -> Node0x5644fcc24940[label="8"]
	Node0x5644fcc24940 -> Node0x5644fcc249d0[label="9"]
	Node0x5644fcc249d0 -> Node0x5644fcc24a60[label="10"]
	Node0x5644fcc24a60 -> Node0x5644fcc21d18[label="11"]
	Node0x5644fcc249d0 -> Node0x5644fcc24b98[label="12"]
	Node0x5644fcc223e8 -> Node0x5644fcc24dd8[label="13"]
}
