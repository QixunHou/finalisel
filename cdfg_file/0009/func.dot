digraph "CDFG for'func' function" {
	Node0x55d61fa7c598[shape=record, label="  br label %for.body"];
	Node0x55d61fa7d168[shape=record, label="  %s.013 = phi float [ 1.000000e+00, %entry ], [ %add.1, %for.body.1 ]"];
	Node0x55d61fa7d928[shape=record, label="  %i.011.int = phi i32 [ 2, %entry ], [ %inc.int.1, %for.body.1 ]"];
	Node0x55d61fa7da08[shape=record, label="  %indvar.conv = sitofp i32 %i.011.int to float"];
	Node0x55d61fa7db10[shape=record, label="  %mul1 = fdiv float -1.000000e+00, %indvar.conv"];
	Node0x55d61fa7db80[shape=record, label="  %add = fadd float %s.013, %mul1"];
	Node0x55d61fa7dc40[shape=record, label="  %inc.int = or i32 %i.011.int, 1"];
	Node0x55d61fa7dd00[shape=record, label="  %exitcond = icmp eq i32 %inc.int, 101"];
	Node0x55d61fa06c98[shape=record, label="  br i1 %exitcond, label %for.end, label %for.body.1"];
	Node0x55d61fa7ddf8[shape=record, label="  %conv2 = fpext float %add to double"];
	Node0x55d61fa7e218[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %conv2)"];
	Node0x55d61fa7e480[shape=record, label="  ret void"];
	Node0x55d61fa7d118[shape=record, label="  %indvar.conv.1 = sitofp i32 %inc.int to float"];
	Node0x55d61fa7e540[shape=record, label="  %div.1 = fdiv float 1.000000e+00, %indvar.conv.1"];
	Node0x55d61fa7e5b0[shape=record, label="  %add.1 = fadd float %add, %div.1"];
	Node0x55d61fa7e620[shape=record, label="  %inc.int.1 = add nuw nsw i32 %i.011.int, 2"];
	Node0x55d61fa7d8d8[shape=record, label="  br label %for.body"];
	Node0x55d61fa7c598 -> Node0x55d61fa7d168
	Node0x55d61fa7d168 -> Node0x55d61fa7d928
	Node0x55d61fa7d928 -> Node0x55d61fa7da08
	Node0x55d61fa7da08 -> Node0x55d61fa7db10
	Node0x55d61fa7db10 -> Node0x55d61fa7db80
	Node0x55d61fa7db80 -> Node0x55d61fa7dc40
	Node0x55d61fa7dc40 -> Node0x55d61fa7dd00
	Node0x55d61fa7dd00 -> Node0x55d61fa06c98
	Node0x55d61fa06c98 -> Node0x55d61fa7ddf8
	Node0x55d61fa06c98 -> Node0x55d61fa7d118
	Node0x55d61fa7ddf8 -> Node0x55d61fa7e218
	Node0x55d61fa7e218 -> Node0x55d61fa7e480
	Node0x55d61fa7d118 -> Node0x55d61fa7e540
	Node0x55d61fa7e540 -> Node0x55d61fa7e5b0
	Node0x55d61fa7e5b0 -> Node0x55d61fa7e620
	Node0x55d61fa7e620 -> Node0x55d61fa7d8d8
	Node0x55d61fa7d8d8 -> Node0x55d61fa7d168
edge [color=red]
	Node0x55d61fa7e5b0 -> Node0x55d61fa7d168
	Node0x55d61fa7e620 -> Node0x55d61fa7d928
	Node0x55d61fa7d928 -> Node0x55d61fa7da08
	Node0x55d61fa7da08 -> Node0x55d61fa7db10
	Node0x55d61fa7d168 -> Node0x55d61fa7db80
	Node0x55d61fa7db10 -> Node0x55d61fa7db80
	Node0x55d61fa7d928 -> Node0x55d61fa7dc40
	Node0x55d61fa7dc40 -> Node0x55d61fa7dd00
	Node0x55d61fa7dd00 -> Node0x55d61fa06c98
	Node0x55d61fa7db80 -> Node0x55d61fa7ddf8
	Node0x55d61fa7ddf8 -> Node0x55d61fa7e218
	Node0x55d61fa7dc40 -> Node0x55d61fa7d118
	Node0x55d61fa7d118 -> Node0x55d61fa7e540
	Node0x55d61fa7db80 -> Node0x55d61fa7e5b0
	Node0x55d61fa7e540 -> Node0x55d61fa7e5b0
	Node0x55d61fa7d928 -> Node0x55d61fa7e620
}
