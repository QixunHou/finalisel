digraph "CDFG for'func' function" {
	Node0x5555b4b5b498[shape=record, label="  br label %while.cond"]
	Node0x5555b4b5bc48[shape=record, label="  %a2.0 = phi i32 [ 1, %entry ], [ %add1, %if.end9 ]"]
	Node0x5555b4b5bd08[shape=record, label="  %a1.0 = phi i32 [ 1, %entry ], [ %a2.0, %if.end9 ]"]
	Node0x5555b4b5bea8[shape=record, label="  %sn.0 = phi i32 [ 2, %entry ], [ %add2, %if.end9 ]"]
	Node0x5555b4b5c018[shape=record, label="  %k.0 = phi i32 [ 2, %entry ], [ %inc, %if.end9 ]"]
	Node0x5555b4b5c100[shape=record, label="  %mul = shl nsw i32 %a2.0, 1"]
	Node0x5555b4b5c190[shape=record, label="  %add1 = add nsw i32 %a1.0, %mul"]
	Node0x5555b4b5c200[shape=record, label="  %cmp = icmp slt i32 %sn.0, 100"]
	Node0x5555b4b5c290[shape=record, label="  %add2 = add nsw i32 %sn.0, %add1"]
	Node0x5555b4b5c300[shape=record, label="  %cmp3 = icmp sgt i32 %add2, 99"]
	Node0x5555b4b5c390[shape=record, label="  %or.cond = and i1 %cmp, %cmp3"]
	Node0x5555b4ae4c98[shape=record, label="  br i1 %or.cond, label %if.then, label %if.end"]
	Node0x5555b4b5c980[shape=record, label="  store i32 %k.0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b, i64 0, i64 0), align 4, !tbaa !2"]
	Node0x5555b4b5be58[shape=record, label="  br label %if.end"]
	Node0x5555b4b5d8c0[shape=record, label="  %cmp4 = icmp slt i32 %sn.0, 1000"]
	Node0x5555b4b5d980[shape=record, label="  %cmp7 = icmp sgt i32 %add2, 999"]
	Node0x5555b4b5da10[shape=record, label="  %or.cond38 = and i1 %cmp4, %cmp7"]
	Node0x5555b4af0228[shape=record, label="  br i1 %or.cond38, label %if.then8, label %if.end9"]
	Node0x5555b4b5dc00[shape=record, label="  store i32 %k.0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b, i64 0, i64 1), align 4, !tbaa !2"]
	Node0x5555b4b5b3b8[shape=record, label="  br label %if.end9"]
	Node0x5555b4b5e2c0[shape=record, label="  %cmp10 = icmp slt i32 %sn.0, 10000"]
	Node0x5555b4b5e360[shape=record, label="  %cmp13 = icmp sgt i32 %add2, 9999"]
	Node0x5555b4b5e3f0[shape=record, label="  %or.cond39 = and i1 %cmp10, %cmp13"]
	Node0x5555b4b5e490[shape=record, label="  %inc = add nuw nsw i32 %k.0, 1"]
	Node0x5555b4af0348[shape=record, label="  br i1 %or.cond39, label %if.then14, label %while.cond"]
	Node0x5555b4b5e620[shape=record, label="  store i32 %k.0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @b, i64 0, i64 2), align 4, !tbaa !2"]
	Node0x5555b4b5bfc8[shape=record, label="  ret i32 undef"]
	Node0x5555b4b5b498 -> Node0x5555b4b5bc48
	Node0x5555b4b5bc48 -> Node0x5555b4b5bd08
	Node0x5555b4b5bd08 -> Node0x5555b4b5bea8
	Node0x5555b4b5bea8 -> Node0x5555b4b5c018
	Node0x5555b4b5c018 -> Node0x5555b4b5c100
	Node0x5555b4b5c100 -> Node0x5555b4b5c190
	Node0x5555b4b5c190 -> Node0x5555b4b5c200
	Node0x5555b4b5c200 -> Node0x5555b4b5c290
	Node0x5555b4b5c290 -> Node0x5555b4b5c300
	Node0x5555b4b5c300 -> Node0x5555b4b5c390
	Node0x5555b4b5c390 -> Node0x5555b4ae4c98
	Node0x5555b4ae4c98 -> Node0x5555b4b5c980
	Node0x5555b4ae4c98 -> Node0x5555b4b5d8c0
	Node0x5555b4b5c980 -> Node0x5555b4b5be58
	Node0x5555b4b5be58 -> Node0x5555b4b5d8c0
	Node0x5555b4b5d8c0 -> Node0x5555b4b5d980
	Node0x5555b4b5d980 -> Node0x5555b4b5da10
	Node0x5555b4b5da10 -> Node0x5555b4af0228
	Node0x5555b4af0228 -> Node0x5555b4b5dc00
	Node0x5555b4af0228 -> Node0x5555b4b5e2c0
	Node0x5555b4b5dc00 -> Node0x5555b4b5b3b8
	Node0x5555b4b5b3b8 -> Node0x5555b4b5e2c0
	Node0x5555b4b5e2c0 -> Node0x5555b4b5e360
	Node0x5555b4b5e360 -> Node0x5555b4b5e3f0
	Node0x5555b4b5e3f0 -> Node0x5555b4b5e490
	Node0x5555b4b5e490 -> Node0x5555b4af0348
	Node0x5555b4af0348 -> Node0x5555b4b5e620
	Node0x5555b4af0348 -> Node0x5555b4b5bc48
	Node0x5555b4b5e620 -> Node0x5555b4b5bfc8
edge [color=red]
	Node0x5555b4b5c190 -> Node0x5555b4b5bc48[label="1"]
	Node0x5555b4b5bc48 -> Node0x5555b4b5bd08[label="2"]
	Node0x5555b4b5c290 -> Node0x5555b4b5bea8[label="3"]
	Node0x5555b4b5e490 -> Node0x5555b4b5c018[label="4"]
	Node0x5555b4b5bc48 -> Node0x5555b4b5c100[label="5"]
	Node0x5555b4b5bd08 -> Node0x5555b4b5c190[label="6"]
	Node0x5555b4b5c100 -> Node0x5555b4b5c190[label="7"]
	Node0x5555b4b5bea8 -> Node0x5555b4b5c200[label="8"]
	Node0x5555b4b5bea8 -> Node0x5555b4b5c290[label="9"]
	Node0x5555b4b5c190 -> Node0x5555b4b5c290[label="10"]
	Node0x5555b4b5c290 -> Node0x5555b4b5c300[label="11"]
	Node0x5555b4b5c200 -> Node0x5555b4b5c390[label="12"]
	Node0x5555b4b5c300 -> Node0x5555b4b5c390[label="13"]
	Node0x5555b4b5c390 -> Node0x5555b4ae4c98[label="14"]
	Node0x5555b4b5c018 -> Node0x5555b4b5c980[label="15"]
	Node0x5555b4b5c980 -> Node0x5555b4b5c708[label="16"]
	Node0x5555b4b5bea8 -> Node0x5555b4b5d8c0[label="17"]
	Node0x5555b4b5c290 -> Node0x5555b4b5d980[label="18"]
	Node0x5555b4b5d8c0 -> Node0x5555b4b5da10[label="19"]
	Node0x5555b4b5d980 -> Node0x5555b4b5da10[label="20"]
	Node0x5555b4b5da10 -> Node0x5555b4af0228[label="21"]
	Node0x5555b4b5c018 -> Node0x5555b4b5dc00[label="22"]
	Node0x5555b4b5dc00 -> Node0x5555b4b5db98[label="23"]
	Node0x5555b4b5bea8 -> Node0x5555b4b5e2c0[label="24"]
	Node0x5555b4b5c290 -> Node0x5555b4b5e360[label="25"]
	Node0x5555b4b5e2c0 -> Node0x5555b4b5e3f0[label="26"]
	Node0x5555b4b5e360 -> Node0x5555b4b5e3f0[label="27"]
	Node0x5555b4b5c018 -> Node0x5555b4b5e490[label="28"]
	Node0x5555b4b5e3f0 -> Node0x5555b4af0348[label="29"]
	Node0x5555b4b5c018 -> Node0x5555b4b5e620[label="30"]
	Node0x5555b4b5e620 -> Node0x5555b4b5e5b8[label="31"]
}
