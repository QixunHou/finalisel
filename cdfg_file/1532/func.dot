digraph "CDFG for'func' function" {
	Node0x56389e965af8[shape=record, label="  %0 = load i8, i8* %src, align 1, !tbaa !2"]
	Node0x56389e967060[shape=record, label="  %tobool4 = icmp eq i8 %0, 0"]
	Node0x56389e8efdb8[shape=record, label="  br i1 %tobool4, label %while.end, label %while.body"]
	Node0x56389e9672f8[shape=record, label="  %1 = phi i8 [ %2, %while.body ], [ %0, %entry ]"]
	Node0x56389e967418[shape=record, label="  %src.addr.06 = phi i8* [ %incdec.ptr, %while.body ], [ %src, %entry ]"]
	Node0x56389e9675a8[shape=record, label="  %dst.addr.05 = phi i8* [ %incdec.ptr1, %while.body ], [ %dst, %entry ]"]
	Node0x56389e9676d0[shape=record, label="  %incdec.ptr = getelementptr inbounds i8, i8* %src.addr.06, i64 1"]
	Node0x56389e967750[shape=record, label="  %incdec.ptr1 = getelementptr inbounds i8, i8* %dst.addr.05, i64 1"]
	Node0x56389e9677d0[shape=record, label="  store i8 %1, i8* %dst.addr.05, align 1, !tbaa !2"]
	Node0x56389e967558[shape=record, label="  %2 = load i8, i8* %incdec.ptr, align 1, !tbaa !2"]
	Node0x56389e967e60[shape=record, label="  %tobool = icmp eq i8 %2, 0"]
	Node0x56389e8fb228[shape=record, label="  br i1 %tobool, label %while.end, label %while.body"]
	Node0x56389e967ea8[shape=record, label="  %dst.addr.0.lcssa = phi i8* [ %dst, %entry ], [ %incdec.ptr1, %while.body ]"]
	Node0x56389e967fd0[shape=record, label="  store i8 0, i8* %dst.addr.0.lcssa, align 1, !tbaa !2"]
	Node0x56389e9672b0[shape=record, label="  ret void"]
	Node0x56389e965af8 -> Node0x56389e967060
	Node0x56389e967060 -> Node0x56389e8efdb8
	Node0x56389e8efdb8 -> Node0x56389e967ea8
	Node0x56389e8efdb8 -> Node0x56389e9672f8
	Node0x56389e9672f8 -> Node0x56389e967418
	Node0x56389e967418 -> Node0x56389e9675a8
	Node0x56389e9675a8 -> Node0x56389e9676d0
	Node0x56389e9676d0 -> Node0x56389e967750
	Node0x56389e967750 -> Node0x56389e9677d0
	Node0x56389e9677d0 -> Node0x56389e967558
	Node0x56389e967558 -> Node0x56389e967e60
	Node0x56389e967e60 -> Node0x56389e8fb228
	Node0x56389e8fb228 -> Node0x56389e967ea8
	Node0x56389e8fb228 -> Node0x56389e9672f8
	Node0x56389e967ea8 -> Node0x56389e967fd0
	Node0x56389e967fd0 -> Node0x56389e9672b0
edge [color=red]
	Node0x56389e965938 -> Node0x56389e965af8[label="1"]
	Node0x56389e965af8 -> Node0x56389e967060[label="2"]
	Node0x56389e967060 -> Node0x56389e8efdb8[label="3"]
	Node0x56389e967558 -> Node0x56389e9672f8[label="4"]
	Node0x56389e965af8 -> Node0x56389e9672f8[label="5"]
	Node0x56389e9676d0 -> Node0x56389e967418[label="6"]
	Node0x56389e967750 -> Node0x56389e9675a8[label="7"]
	Node0x56389e967418 -> Node0x56389e9676d0[label="8"]
	Node0x56389e9675a8 -> Node0x56389e967750[label="9"]
	Node0x56389e9672f8 -> Node0x56389e9677d0[label="10"]
	Node0x56389e9677d0 -> Node0x56389e9675a8[label="11"]
	Node0x56389e9676d0 -> Node0x56389e967558[label="12"]
	Node0x56389e967558 -> Node0x56389e967e60[label="13"]
	Node0x56389e967e60 -> Node0x56389e8fb228[label="14"]
	Node0x56389e967750 -> Node0x56389e967ea8[label="15"]
	Node0x56389e967000 -> Node0x56389e967fd0[label="16"]
	Node0x56389e967fd0 -> Node0x56389e967ea8[label="17"]
}
