digraph "CDFG for'main' function" {
	Node0x5588f7423d88[shape=record, label="  %ch = alloca i8, align 1"]
	Node0x5588f7423f98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %ch) #5"]
	Node0x5588f7424148[shape=record, label="  %call = tail call i32 (...) @clrscr() #5"]
	Node0x5588f74246a8[shape=record, label="  %call1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0))"]
	Node0x5588f7424840[shape=record, label="  %call2 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0))"]
	Node0x5588f7424cb8[shape=record, label="  %call3 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %ch)"]
	Node0x5588f7424d78[shape=record, label="  %0 = load i8, i8* %ch, align 1, !tbaa !2"]
	Node0x5588f7424e18[shape=record, label="  %1 = load i8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), align 16, !tbaa !2"]
	Node0x5588f7424e90[shape=record, label="  %tobool9.i = icmp eq i8 %1, 0"]
	Node0x5588f7425108[shape=record, label="  br i1 %tobool9.i, label %func.exit, label %for.body.i"]
	Node0x5588f7425248[shape=record, label="  %2 = phi i8 [ %3, %for.inc.i ], [ %1, %entry ]"]
	Node0x5588f74253d8[shape=record, label="  %q.011.i = phi i8* [ %incdec.ptr2.i, %for.inc.i ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), %entry ]"]
	Node0x5588f7425538[shape=record, label="  %s.addr.010.i = phi i8* [ %s.addr.1.i, %for.inc.i ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), %entry ]"]
	Node0x5588f7425630[shape=record, label="  %cmp.i = icmp eq i8 %2, %0"]
	Node0x5588f7425938[shape=record, label="  br i1 %cmp.i, label %for.inc.i, label %if.then.i"]
	Node0x5588f74259b0[shape=record, label="  %incdec.ptr.i = getelementptr inbounds i8, i8* %s.addr.010.i, i64 1"]
	Node0x5588f7425a60[shape=record, label="  store i8 %2, i8* %s.addr.010.i, align 1, !tbaa !2"]
	Node0x5588f74258a8[shape=record, label="  br label %for.inc.i"]
	Node0x5588f7425ab8[shape=record, label="  %s.addr.1.i = phi i8* [ %incdec.ptr.i, %if.then.i ], [ %s.addr.010.i, %for.body.i ]"]
	Node0x5588f7425b80[shape=record, label="  %incdec.ptr2.i = getelementptr inbounds i8, i8* %q.011.i, i64 1"]
	Node0x5588f7425388[shape=record, label="  %3 = load i8, i8* %incdec.ptr2.i, align 1, !tbaa !2"]
	Node0x5588f7425c00[shape=record, label="  %tobool.i = icmp eq i8 %3, 0"]
	Node0x5588f7426498[shape=record, label="  br i1 %tobool.i, label %func.exit, label %for.body.i"]
	Node0x5588f7426508[shape=record, label="  %s.addr.0.lcssa.i = phi i8* [ getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0), %entry ], [ %s.addr.1.i, %for.inc.i ]"]
	Node0x5588f7426630[shape=record, label="  store i8 0, i8* %s.addr.0.lcssa.i, align 1, !tbaa !2"]
	Node0x5588f7426748[shape=record, label="  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @main.str, i64 0, i64 0))"]
	Node0x5588f74268c0[shape=record, label="  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0))"]
	Node0x5588f7426a48[shape=record, label="  %call7 = call i32 (...) @getch() #5"]
	Node0x5588f7426be8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %ch) #5"]
	Node0x5588f7425180[shape=record, label="  ret void"]
	Node0x5588f7423d88 -> Node0x5588f7423f98
	Node0x5588f7423f98 -> Node0x5588f7424148
	Node0x5588f7424148 -> Node0x5588f74246a8
	Node0x5588f74246a8 -> Node0x5588f7424840
	Node0x5588f7424840 -> Node0x5588f7424cb8
	Node0x5588f7424cb8 -> Node0x5588f7424d78
	Node0x5588f7424d78 -> Node0x5588f7424e18
	Node0x5588f7424e18 -> Node0x5588f7424e90
	Node0x5588f7424e90 -> Node0x5588f7425108
	Node0x5588f7425108 -> Node0x5588f7426508
	Node0x5588f7425108 -> Node0x5588f7425248
	Node0x5588f7425248 -> Node0x5588f74253d8
	Node0x5588f74253d8 -> Node0x5588f7425538
	Node0x5588f7425538 -> Node0x5588f7425630
	Node0x5588f7425630 -> Node0x5588f7425938
	Node0x5588f7425938 -> Node0x5588f7425ab8
	Node0x5588f7425938 -> Node0x5588f74259b0
	Node0x5588f74259b0 -> Node0x5588f7425a60
	Node0x5588f7425a60 -> Node0x5588f74258a8
	Node0x5588f74258a8 -> Node0x5588f7425ab8
	Node0x5588f7425ab8 -> Node0x5588f7425b80
	Node0x5588f7425b80 -> Node0x5588f7425388
	Node0x5588f7425388 -> Node0x5588f7425c00
	Node0x5588f7425c00 -> Node0x5588f7426498
	Node0x5588f7426498 -> Node0x5588f7426508
	Node0x5588f7426498 -> Node0x5588f7425248
	Node0x5588f7426508 -> Node0x5588f7426630
	Node0x5588f7426630 -> Node0x5588f7426748
	Node0x5588f7426748 -> Node0x5588f74268c0
	Node0x5588f74268c0 -> Node0x5588f7426a48
	Node0x5588f7426a48 -> Node0x5588f7426be8
	Node0x5588f7426be8 -> Node0x5588f7425180
edge [color=red]
	Node0x5588f7423d88 -> Node0x5588f7423f98[label="1"]
	Node0x5588f7423d88 -> Node0x5588f7424cb8[label="2"]
	Node0x5588f7423d88 -> Node0x5588f7424d78[label="3"]
	Node0x5588f7424508 -> Node0x5588f7424e18[label="4"]
	Node0x5588f7424e18 -> Node0x5588f7424e90[label="5"]
	Node0x5588f7424e90 -> Node0x5588f7425108[label="6"]
	Node0x5588f7425388 -> Node0x5588f7425248[label="7"]
	Node0x5588f7424e18 -> Node0x5588f7425248[label="8"]
	Node0x5588f7425b80 -> Node0x5588f74253d8[label="9"]
	Node0x5588f7425ab8 -> Node0x5588f7425538[label="10"]
	Node0x5588f7425248 -> Node0x5588f7425630[label="11"]
	Node0x5588f7424d78 -> Node0x5588f7425630[label="12"]
	Node0x5588f7425630 -> Node0x5588f7425938[label="13"]
	Node0x5588f7425538 -> Node0x5588f74259b0[label="14"]
	Node0x5588f7425248 -> Node0x5588f7425a60[label="15"]
	Node0x5588f7425a60 -> Node0x5588f7425538[label="16"]
	Node0x5588f74259b0 -> Node0x5588f7425ab8[label="17"]
	Node0x5588f7425538 -> Node0x5588f7425ab8[label="18"]
	Node0x5588f74253d8 -> Node0x5588f7425b80[label="19"]
	Node0x5588f7425b80 -> Node0x5588f7425388[label="20"]
	Node0x5588f7425388 -> Node0x5588f7425c00[label="21"]
	Node0x5588f7425c00 -> Node0x5588f7426498[label="22"]
	Node0x5588f7425ab8 -> Node0x5588f7426508[label="23"]
	Node0x5588f7421f80 -> Node0x5588f7426630[label="24"]
	Node0x5588f7426630 -> Node0x5588f7426508[label="25"]
	Node0x5588f7423d88 -> Node0x5588f7426be8[label="26"]
}
