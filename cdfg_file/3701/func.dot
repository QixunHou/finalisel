digraph "CDFG for'func' function" {
	Node0x562da6153ce8[shape=record, label="  %n = alloca i32, align 4"]
	Node0x562da61543a8[shape=record, label="  %m = alloca i32, align 4"]
	Node0x562da6154428[shape=record, label="  %0 = bitcast i32* %n to i8*"]
	Node0x562da6154888[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #4"]
	Node0x562da6154968[shape=record, label="  %1 = bitcast i32* %m to i8*"]
	Node0x562da6154a68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #4"]
	Node0x562da6154e30[shape=record, label="  %puts = tail call i32 @puts(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str, i64 0, i64 0))"]
	Node0x562da61550e0[shape=record, label="  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %n, i32* nonnull %m)"]
	Node0x562da6155290[shape=record, label="  %call2 = call i8* @malloc(i64 16)"]
	Node0x562da6155368[shape=record, label="  %no = bitcast i8* %call2 to i32*"]
	Node0x562da6155400[shape=record, label="  store i32 1, i32* %no, align 8, !tbaa !2"]
	Node0x562da6156318[shape=record, label="  %2 = load i32, i32* %n, align 4, !tbaa !8"]
	Node0x562da6156490[shape=record, label="  %cmp43 = icmp slt i32 %2, 2"]
	Node0x562da61566c8[shape=record, label="  br i1 %cmp43, label %for.end, label %for.body"]
	Node0x562da6156768[shape=record, label="  %i.045 = phi i32 [ %inc, %for.body ], [ 2, %entry ]"]
	Node0x562da61568d8[shape=record, label="  %u.0.in44 = phi i8* [ %call3, %for.body ], [ %call2, %entry ]"]
	Node0x562da61569f0[shape=record, label="  %call3 = call i8* @malloc(i64 16)"]
	Node0x562da6156c60[shape=record, label="  %link = getelementptr inbounds i8, i8* %u.0.in44, i64 8"]
	Node0x562da6156888[shape=record, label="  %3 = bitcast i8* %link to i8**"]
	Node0x562da6156ce0[shape=record, label="  store i8* %call3, i8** %3, align 8, !tbaa !9"]
	Node0x562da6156e78[shape=record, label="  %no5 = bitcast i8* %call3 to i32*"]
	Node0x562da6156f10[shape=record, label="  store i32 %i.045, i32* %no5, align 8, !tbaa !2"]
	Node0x562da61575a0[shape=record, label="  %inc = add nuw nsw i32 %i.045, 1"]
	Node0x562da6157610[shape=record, label="  %cmp = icmp slt i32 %i.045, %2"]
	Node0x562da61576b8[shape=record, label="  br i1 %cmp, label %for.body, label %for.end"]
	Node0x562da6157708[shape=record, label="  %u.0.in.lcssa = phi i8* [ %call2, %entry ], [ %call3, %for.body ]"]
	Node0x562da61577d0[shape=record, label="  %link6 = getelementptr inbounds i8, i8* %u.0.in.lcssa, i64 8"]
	Node0x562da6156558[shape=record, label="  %4 = bitcast i8* %link6 to i8**"]
	Node0x562da61578c0[shape=record, label="  store i8* %call2, i8** %4, align 8, !tbaa !9"]
	Node0x562da6157ff0[shape=record, label="  %call7 = call i32 @puts(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0))"]
	Node0x562da6156638[shape=record, label="  %.pr = load i32, i32* %n, align 4, !tbaa !8"]
	Node0x562da61586f0[shape=record, label="  %tobool41 = icmp eq i32 %.pr, 0"]
	Node0x562da61589d8[shape=record, label="  br i1 %tobool41, label %while.end, label %for.cond8.preheader.preheader"]
	Node0x562da6158918[shape=record, label="  %u.0 = bitcast i8* %u.0.in.lcssa to %struct.ele*"]
	Node0x562da6158e78[shape=record, label="  br label %for.cond8.preheader"]
	Node0x562da6159008[shape=record, label="  %u.142 = phi %struct.ele* [ %u.2, %for.end14 ], [ %u.0, %for.cond8.preheader.preheader ]"]
	Node0x562da61590d8[shape=record, label="  %5 = load i32, i32* %m, align 4, !tbaa !8"]
	Node0x562da61591e8[shape=record, label="  br label %for.cond8"]
	Node0x562da61592a8[shape=record, label="  %u.2 = phi %struct.ele* [ %6, %for.cond8 ], [ %u.142, %for.cond8.preheader ]"]
	Node0x562da6159368[shape=record, label="  %i.1 = phi i32 [ %inc13, %for.cond8 ], [ 1, %for.cond8.preheader ]"]
	Node0x562da6159450[shape=record, label="  %cmp9 = icmp slt i32 %i.1, %5"]
	Node0x562da61594f8[shape=record, label="  %link11 = getelementptr inbounds %struct.ele, %struct.ele* %u.2, i64 0, i32 1"]
	Node0x562da6159188[shape=record, label="  %6 = load %struct.ele*, %struct.ele** %link11, align 8, !tbaa !9"]
	Node0x562da61595a0[shape=record, label="  %inc13 = add nuw nsw i32 %i.1, 1"]
	Node0x562da6159628[shape=record, label="  br i1 %cmp9, label %for.cond8, label %for.end14"]
	Node0x562da61596b8[shape=record, label="  %link11.le = getelementptr inbounds %struct.ele, %struct.ele* %u.2, i64 0, i32 1"]
	Node0x562da6159758[shape=record, label="  %link16 = getelementptr inbounds %struct.ele, %struct.ele* %6, i64 0, i32 1"]
	Node0x562da6158f58[shape=record, label="  %7 = bitcast %struct.ele** %link16 to i64*"]
	Node0x562da6158df8[shape=record, label="  %8 = load i64, i64* %7, align 8, !tbaa !9"]
	Node0x562da6159878[shape=record, label="  %9 = bitcast %struct.ele** %link11.le to i64*"]
	Node0x562da61598f0[shape=record, label="  store i64 %8, i64* %9, align 8, !tbaa !9"]
	Node0x562da6159988[shape=record, label="  %no18 = getelementptr inbounds %struct.ele, %struct.ele* %6, i64 0, i32 0"]
	Node0x562da6159a18[shape=record, label="  %10 = load i32, i32* %no18, align 8, !tbaa !2"]
	Node0x562da615a448[shape=record, label="  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %10)"]
	Node0x562da615a620[shape=record, label="  %call20 = call i32 (%struct.ele*, ...) bitcast (i32 (...)* @free to i32 (%struct.ele*, ...)*)(%struct.ele* %6) #4"]
	Node0x562da615a6f8[shape=record, label="  %11 = load i32, i32* %n, align 4, !tbaa !8"]
	Node0x562da615a770[shape=record, label="  %dec = add nsw i32 %11, -1"]
	Node0x562da615a800[shape=record, label="  store i32 %dec, i32* %n, align 4, !tbaa !8"]
	Node0x562da615a880[shape=record, label="  %tobool = icmp eq i32 %dec, 0"]
	Node0x562da615a988[shape=record, label="  br i1 %tobool, label %while.end, label %for.cond8.preheader"]
	Node0x562da615aaa0[shape=record, label="  %puts39 = call i32 @puts(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.5, i64 0, i64 0))"]
	Node0x562da615adc8[shape=record, label="  %call22 = call i32 (...) @getch() #4"]
	Node0x562da615b088[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #4"]
	Node0x562da615b1e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #4"]
	Node0x562da615b2a8[shape=record, label="  ret { i32, %struct.ele* } undef"]
	Node0x562da6153ce8 -> Node0x562da61543a8
	Node0x562da61543a8 -> Node0x562da6154428
	Node0x562da6154428 -> Node0x562da6154888
	Node0x562da6154888 -> Node0x562da6154968
	Node0x562da6154968 -> Node0x562da6154a68
	Node0x562da6154a68 -> Node0x562da6154e30
	Node0x562da6154e30 -> Node0x562da61550e0
	Node0x562da61550e0 -> Node0x562da6155290
	Node0x562da6155290 -> Node0x562da6155368
	Node0x562da6155368 -> Node0x562da6155400
	Node0x562da6155400 -> Node0x562da6156318
	Node0x562da6156318 -> Node0x562da6156490
	Node0x562da6156490 -> Node0x562da61566c8
	Node0x562da61566c8 -> Node0x562da6157708
	Node0x562da61566c8 -> Node0x562da6156768
	Node0x562da6156768 -> Node0x562da61568d8
	Node0x562da61568d8 -> Node0x562da61569f0
	Node0x562da61569f0 -> Node0x562da6156c60
	Node0x562da6156c60 -> Node0x562da6156888
	Node0x562da6156888 -> Node0x562da6156ce0
	Node0x562da6156ce0 -> Node0x562da6156e78
	Node0x562da6156e78 -> Node0x562da6156f10
	Node0x562da6156f10 -> Node0x562da61575a0
	Node0x562da61575a0 -> Node0x562da6157610
	Node0x562da6157610 -> Node0x562da61576b8
	Node0x562da61576b8 -> Node0x562da6156768
	Node0x562da61576b8 -> Node0x562da6157708
	Node0x562da6157708 -> Node0x562da61577d0
	Node0x562da61577d0 -> Node0x562da6156558
	Node0x562da6156558 -> Node0x562da61578c0
	Node0x562da61578c0 -> Node0x562da6157ff0
	Node0x562da6157ff0 -> Node0x562da6156638
	Node0x562da6156638 -> Node0x562da61586f0
	Node0x562da61586f0 -> Node0x562da61589d8
	Node0x562da61589d8 -> Node0x562da615aaa0
	Node0x562da61589d8 -> Node0x562da6158918
	Node0x562da6158918 -> Node0x562da6158e78
	Node0x562da6158e78 -> Node0x562da6159008
	Node0x562da6159008 -> Node0x562da61590d8
	Node0x562da61590d8 -> Node0x562da61591e8
	Node0x562da61591e8 -> Node0x562da61592a8
	Node0x562da61592a8 -> Node0x562da6159368
	Node0x562da6159368 -> Node0x562da6159450
	Node0x562da6159450 -> Node0x562da61594f8
	Node0x562da61594f8 -> Node0x562da6159188
	Node0x562da6159188 -> Node0x562da61595a0
	Node0x562da61595a0 -> Node0x562da6159628
	Node0x562da6159628 -> Node0x562da61592a8
	Node0x562da6159628 -> Node0x562da61596b8
	Node0x562da61596b8 -> Node0x562da6159758
	Node0x562da6159758 -> Node0x562da6158f58
	Node0x562da6158f58 -> Node0x562da6158df8
	Node0x562da6158df8 -> Node0x562da6159878
	Node0x562da6159878 -> Node0x562da61598f0
	Node0x562da61598f0 -> Node0x562da6159988
	Node0x562da6159988 -> Node0x562da6159a18
	Node0x562da6159a18 -> Node0x562da615a448
	Node0x562da615a448 -> Node0x562da615a620
	Node0x562da615a620 -> Node0x562da615a6f8
	Node0x562da615a6f8 -> Node0x562da615a770
	Node0x562da615a770 -> Node0x562da615a800
	Node0x562da615a800 -> Node0x562da615a880
	Node0x562da615a880 -> Node0x562da615a988
	Node0x562da615a988 -> Node0x562da615aaa0
	Node0x562da615a988 -> Node0x562da6159008
	Node0x562da615aaa0 -> Node0x562da615adc8
	Node0x562da615adc8 -> Node0x562da615b088
	Node0x562da615b088 -> Node0x562da615b1e8
	Node0x562da615b1e8 -> Node0x562da615b2a8
edge [color=red]
	Node0x562da6153ce8 -> Node0x562da6154428[label="1"]
	Node0x562da6154428 -> Node0x562da6154888[label="2"]
	Node0x562da61543a8 -> Node0x562da6154968[label="3"]
	Node0x562da6154968 -> Node0x562da6154a68[label="4"]
	Node0x562da6153ce8 -> Node0x562da61550e0[label="5"]
	Node0x562da61543a8 -> Node0x562da61550e0[label="6"]
	Node0x562da6155290 -> Node0x562da6155368[label="7"]
	Node0x562da6154340 -> Node0x562da6155400[label="8"]
	Node0x562da6155400 -> Node0x562da6155368[label="9"]
	Node0x562da6153ce8 -> Node0x562da6156318[label="10"]
	Node0x562da6156318 -> Node0x562da6156490[label="11"]
	Node0x562da6156490 -> Node0x562da61566c8[label="12"]
	Node0x562da61575a0 -> Node0x562da6156768[label="13"]
	Node0x562da61569f0 -> Node0x562da61568d8[label="14"]
	Node0x562da6155290 -> Node0x562da61568d8[label="15"]
	Node0x562da61568d8 -> Node0x562da6156c60[label="16"]
	Node0x562da6156c60 -> Node0x562da6156888[label="17"]
	Node0x562da61569f0 -> Node0x562da6156ce0[label="18"]
	Node0x562da6156ce0 -> Node0x562da6156888[label="19"]
	Node0x562da61569f0 -> Node0x562da6156e78[label="20"]
	Node0x562da6156768 -> Node0x562da6156f10[label="21"]
	Node0x562da6156f10 -> Node0x562da6156e78[label="22"]
	Node0x562da6156768 -> Node0x562da61575a0[label="23"]
	Node0x562da6156768 -> Node0x562da6157610[label="24"]
	Node0x562da6156318 -> Node0x562da6157610[label="25"]
	Node0x562da6157610 -> Node0x562da61576b8[label="26"]
	Node0x562da6155290 -> Node0x562da6157708[label="27"]
	Node0x562da61569f0 -> Node0x562da6157708[label="28"]
	Node0x562da6157708 -> Node0x562da61577d0[label="29"]
	Node0x562da61577d0 -> Node0x562da6156558[label="30"]
	Node0x562da6155290 -> Node0x562da61578c0[label="31"]
	Node0x562da61578c0 -> Node0x562da6156558[label="32"]
	Node0x562da6153ce8 -> Node0x562da6156638[label="33"]
	Node0x562da6156638 -> Node0x562da61586f0[label="34"]
	Node0x562da61586f0 -> Node0x562da61589d8[label="35"]
	Node0x562da6157708 -> Node0x562da6158918[label="36"]
	Node0x562da61592a8 -> Node0x562da6159008[label="37"]
	Node0x562da6158918 -> Node0x562da6159008[label="38"]
	Node0x562da61543a8 -> Node0x562da61590d8[label="39"]
	Node0x562da6159188 -> Node0x562da61592a8[label="40"]
	Node0x562da6159008 -> Node0x562da61592a8[label="41"]
	Node0x562da61595a0 -> Node0x562da6159368[label="42"]
	Node0x562da6159368 -> Node0x562da6159450[label="43"]
	Node0x562da61590d8 -> Node0x562da6159450[label="44"]
	Node0x562da61592a8 -> Node0x562da61594f8[label="45"]
	Node0x562da61594f8 -> Node0x562da6159188[label="46"]
	Node0x562da6159368 -> Node0x562da61595a0[label="47"]
	Node0x562da6159450 -> Node0x562da6159628[label="48"]
	Node0x562da61592a8 -> Node0x562da61596b8[label="49"]
	Node0x562da6159188 -> Node0x562da6159758[label="50"]
	Node0x562da6159758 -> Node0x562da6158f58[label="51"]
	Node0x562da6158f58 -> Node0x562da6158df8[label="52"]
	Node0x562da61596b8 -> Node0x562da6159878[label="53"]
	Node0x562da6158df8 -> Node0x562da61598f0[label="54"]
	Node0x562da61598f0 -> Node0x562da6159878[label="55"]
	Node0x562da6159188 -> Node0x562da6159988[label="56"]
	Node0x562da6159988 -> Node0x562da6159a18[label="57"]
	Node0x562da6159a18 -> Node0x562da615a448[label="58"]
	Node0x562da6159188 -> Node0x562da615a620[label="59"]
	Node0x562da6153ce8 -> Node0x562da615a6f8[label="60"]
	Node0x562da615a6f8 -> Node0x562da615a770[label="61"]
	Node0x562da615a770 -> Node0x562da615a800[label="62"]
	Node0x562da615a800 -> Node0x562da6153ce8[label="63"]
	Node0x562da615a770 -> Node0x562da615a880[label="64"]
	Node0x562da615a880 -> Node0x562da615a988[label="65"]
	Node0x562da6154968 -> Node0x562da615b088[label="66"]
	Node0x562da6154428 -> Node0x562da615b1e8[label="67"]
}
