digraph "CDFG for'func' function" {
	Node0x563680f2eae8[shape=record, label="  %0 = load i32, i32* @count, align 4, !tbaa !2"]
	Node0x563680f3e0f0[shape=record, label="  %inc = add nsw i32 %0, 1"]
	Node0x563680f3e180[shape=record, label="  store i32 %inc, i32* @count, align 4, !tbaa !2"]
	Node0x563680f3e2b8[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i32 %0)"]
	Node0x563680f32db8[shape=record, label="  %1 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @b, i64 0, i64 0), align 16, !tbaa !2"]
	Node0x563680f3e4c8[shape=record, label="  %call5 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %1)"]
	Node0x563680f2bbd8[shape=record, label="  %.pre = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @b, i64 0, i64 1), align 4, !tbaa !2"]
	Node0x563680f3e678[shape=record, label="  %call5.1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %.pre)"]
	Node0x563680f2a848[shape=record, label="  %.pre14 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @b, i64 0, i64 2), align 8, !tbaa !2"]
	Node0x563680f3e8a8[shape=record, label="  %call2.2 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32 %.pre14)"]
	Node0x563680f2a3c8[shape=record, label="  %.pre15 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @b, i64 0, i64 3), align 4, !tbaa !2"]
	Node0x563680f3ea58[shape=record, label="  %call5.3 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %.pre15)"]
	Node0x563680f29f08[shape=record, label="  %.pre16 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @b, i64 0, i64 4), align 16, !tbaa !2"]
	Node0x563680f3eb88[shape=record, label="  %call5.4 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %.pre16)"]
	Node0x563680f3ece8[shape=record, label="  %.pre17 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @b, i64 0, i64 5), align 4, !tbaa !2"]
	Node0x563680f3ef38[shape=record, label="  %call2.5 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32 %.pre17)"]
	Node0x563680f3f098[shape=record, label="  %.pre18 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @b, i64 0, i64 6), align 8, !tbaa !2"]
	Node0x563680f3f148[shape=record, label="  %call5.6 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %.pre18)"]
	Node0x563680f3f2a8[shape=record, label="  %.pre19 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @b, i64 0, i64 7), align 4, !tbaa !2"]
	Node0x563680f3f358[shape=record, label="  %call5.7 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %.pre19)"]
	Node0x563680f3f4b8[shape=record, label="  %.pre20 = load i32, i32* getelementptr inbounds ([9 x i32], [9 x i32]* @b, i64 0, i64 8), align 16, !tbaa !2"]
	Node0x563680f3f568[shape=record, label="  %call2.8 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32 %.pre20)"]
	Node0x563680f3f7b0[shape=record, label="  %putchar = tail call i32 @putchar(i32 10)"]
	Node0x563680f343d0[shape=record, label="  ret void"]
	Node0x563680f2eae8 -> Node0x563680f3e0f0
	Node0x563680f3e0f0 -> Node0x563680f3e180
	Node0x563680f3e180 -> Node0x563680f3e2b8
	Node0x563680f3e2b8 -> Node0x563680f32db8
	Node0x563680f32db8 -> Node0x563680f3e4c8
	Node0x563680f3e4c8 -> Node0x563680f2bbd8
	Node0x563680f2bbd8 -> Node0x563680f3e678
	Node0x563680f3e678 -> Node0x563680f2a848
	Node0x563680f2a848 -> Node0x563680f3e8a8
	Node0x563680f3e8a8 -> Node0x563680f2a3c8
	Node0x563680f2a3c8 -> Node0x563680f3ea58
	Node0x563680f3ea58 -> Node0x563680f29f08
	Node0x563680f29f08 -> Node0x563680f3eb88
	Node0x563680f3eb88 -> Node0x563680f3ece8
	Node0x563680f3ece8 -> Node0x563680f3ef38
	Node0x563680f3ef38 -> Node0x563680f3f098
	Node0x563680f3f098 -> Node0x563680f3f148
	Node0x563680f3f148 -> Node0x563680f3f2a8
	Node0x563680f3f2a8 -> Node0x563680f3f358
	Node0x563680f3f358 -> Node0x563680f3f4b8
	Node0x563680f3f4b8 -> Node0x563680f3f568
	Node0x563680f3f568 -> Node0x563680f3f7b0
	Node0x563680f3f7b0 -> Node0x563680f343d0
edge [color=red]
	Node0x563680f28bf8 -> Node0x563680f2eae8[label="1"]
	Node0x563680f2eae8 -> Node0x563680f3e0f0[label="2"]
	Node0x563680f3e0f0 -> Node0x563680f3e180[label="3"]
	Node0x563680f3e180 -> Node0x563680f28bf8[label="4"]
	Node0x563680f2eae8 -> Node0x563680f3e2b8[label="5"]
	Node0x563680f3e3c8 -> Node0x563680f32db8[label="6"]
	Node0x563680f32db8 -> Node0x563680f3e4c8[label="7"]
	Node0x563680f3e5d8 -> Node0x563680f2bbd8[label="8"]
	Node0x563680f2bbd8 -> Node0x563680f3e678[label="9"]
	Node0x563680f3e788 -> Node0x563680f2a848[label="10"]
	Node0x563680f2a848 -> Node0x563680f3e8a8[label="11"]
	Node0x563680f3e9b8 -> Node0x563680f2a3c8[label="12"]
	Node0x563680f2a3c8 -> Node0x563680f3ea58[label="13"]
	Node0x563680f34808 -> Node0x563680f29f08[label="14"]
	Node0x563680f29f08 -> Node0x563680f3eb88[label="15"]
	Node0x563680f3ec98 -> Node0x563680f3ece8[label="16"]
	Node0x563680f3ece8 -> Node0x563680f3ef38[label="17"]
	Node0x563680f3f048 -> Node0x563680f3f098[label="18"]
	Node0x563680f3f098 -> Node0x563680f3f148[label="19"]
	Node0x563680f3f258 -> Node0x563680f3f2a8[label="20"]
	Node0x563680f3f2a8 -> Node0x563680f3f358[label="21"]
	Node0x563680f3f468 -> Node0x563680f3f4b8[label="22"]
	Node0x563680f3f4b8 -> Node0x563680f3f568[label="23"]
}
