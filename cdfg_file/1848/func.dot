digraph "CDFG for'func' function" {
	Node0x564a293c2d18[shape=record, label="  %anInteger = alloca i32, align 4"]
	Node0x564a293c33e8[shape=record, label="  %0 = bitcast i32* %anInteger to i8*"]
	Node0x564a293c3848[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x564a293c3940[shape=record, label="  store i32 0, i32* %anInteger, align 4, !tbaa !2"]
	Node0x564a293c4bc0[shape=record, label="  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0))"]
	Node0x564a293c4e28[shape=record, label="  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %anInteger)"]
	Node0x564a293c4ee8[shape=record, label="  %1 = load i32, i32* %anInteger, align 4, !tbaa !2"]
	Node0x564a293c5610[shape=record, label="  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0))"]
	Node0x564a293c5780[shape=record, label="  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0))"]
	Node0x564a293c5880[shape=record, label="  %conv = shl i32 %1, 24"]
	Node0x564a293c5940[shape=record, label="  %sext = add i32 %conv, 805306368"]
	Node0x564a293c59d0[shape=record, label="  %conv4 = ashr exact i32 %sext, 24"]
	Node0x564a293c5a60[shape=record, label="  store i32 %conv4, i32* %anInteger, align 4, !tbaa !2"]
	Node0x564a293c5b98[shape=record, label="  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i32 %conv4)"]
	Node0x564a293c5dd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x564a293c5e98[shape=record, label="  ret i32 0"]
	Node0x564a293c2d18 -> Node0x564a293c33e8
	Node0x564a293c33e8 -> Node0x564a293c3848
	Node0x564a293c3848 -> Node0x564a293c3940
	Node0x564a293c3940 -> Node0x564a293c4bc0
	Node0x564a293c4bc0 -> Node0x564a293c4e28
	Node0x564a293c4e28 -> Node0x564a293c4ee8
	Node0x564a293c4ee8 -> Node0x564a293c5610
	Node0x564a293c5610 -> Node0x564a293c5780
	Node0x564a293c5780 -> Node0x564a293c5880
	Node0x564a293c5880 -> Node0x564a293c5940
	Node0x564a293c5940 -> Node0x564a293c59d0
	Node0x564a293c59d0 -> Node0x564a293c5a60
	Node0x564a293c5a60 -> Node0x564a293c5b98
	Node0x564a293c5b98 -> Node0x564a293c5dd8
	Node0x564a293c5dd8 -> Node0x564a293c5e98
edge [color=red]
	Node0x564a293c2d18 -> Node0x564a293c33e8[label="1"]
	Node0x564a293c33e8 -> Node0x564a293c3848[label="2"]
	Node0x564a293c3450 -> Node0x564a293c3940[label="3"]
	Node0x564a293c3940 -> Node0x564a293c2d18[label="4"]
	Node0x564a293c2d18 -> Node0x564a293c4e28[label="5"]
	Node0x564a293c2d18 -> Node0x564a293c4ee8[label="6"]
	Node0x564a293c4ee8 -> Node0x564a293c5880[label="7"]
	Node0x564a293c5880 -> Node0x564a293c5940[label="8"]
	Node0x564a293c5940 -> Node0x564a293c59d0[label="9"]
	Node0x564a293c59d0 -> Node0x564a293c5a60[label="10"]
	Node0x564a293c5a60 -> Node0x564a293c2d18[label="11"]
	Node0x564a293c59d0 -> Node0x564a293c5b98[label="12"]
	Node0x564a293c33e8 -> Node0x564a293c5dd8[label="13"]
}
