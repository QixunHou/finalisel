digraph "CDFG for'func' function" {
	Node0x557983c0c828[shape=record, label="  %n = alloca i32, align 4"]
	Node0x557983c0cee8[shape=record, label="  %0 = bitcast i32* %n to i8*"]
	Node0x557983c0d348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x557983c0d7a8[shape=record, label="  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %n)"]
	Node0x557983c0d868[shape=record, label="  %1 = load i32, i32* %n, align 4, !tbaa !2"]
	Node0x557983c0e7b0[shape=record, label="  %add = add nsw i32 %1, 1"]
	Node0x557983c0e850[shape=record, label="  %div = sdiv i32 %add, 2"]
	Node0x557983c0e910[shape=record, label="  %cmp38 = icmp sgt i32 %1, 0"]
	Node0x557983ba2348[shape=record, label="  br i1 %cmp38, label %for.cond1.preheader, label %for.cond.cleanup"]
	Node0x557983c0ed18[shape=record, label="  %indvars.iv.in = phi i32 [ %indvars.iv, %for.cond.cleanup11 ], [ %div, %entry ]"]
	Node0x557983c0eec8[shape=record, label="  %i.039 = phi i32 [ %sub, %for.cond.cleanup11 ], [ %div, %entry ]"]
	Node0x557983c0efb0[shape=record, label="  %indvars.iv = add i32 %indvars.iv.in, -1"]
	Node0x557983c0f020[shape=record, label="  %sub = add nsw i32 %i.039, -1"]
	Node0x557983c0f230[shape=record, label="  %cmp230 = icmp sgt i32 %sub, 0"]
	Node0x557983ba2468[shape=record, label="  br i1 %cmp230, label %for.body4, label %for.cond6.preheader"]
	Node0x557983c0f438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #3"]
	Node0x557983c0f4f8[shape=record, label="  ret i32 0"]
	Node0x557983c0ea38[shape=record, label="  %2 = load i32, i32* %n, align 4, !tbaa !2"]
	Node0x557983c0fb80[shape=record, label="  %add732 = add nsw i32 %2, 1"]
	Node0x557983c0fbf0[shape=record, label="  %div833 = sdiv i32 %add732, 2"]
	Node0x557983c0fc60[shape=record, label="  %cmp1036 = icmp slt i32 %div833, %i.039"]
	Node0x557983c0fdf8[shape=record, label="  br i1 %cmp1036, label %for.cond.cleanup11, label %for.body12"]
	Node0x557983c0fe98[shape=record, label="  %j.031 = phi i32 [ %inc, %for.body4 ], [ 0, %for.cond1.preheader ]"]
	Node0x557983c10090[shape=record, label="  %putchar29 = call i32 @putchar(i32 32)"]
	Node0x557983c10190[shape=record, label="  %inc = add nuw nsw i32 %j.031, 1"]
	Node0x557983c10200[shape=record, label="  %exitcond = icmp eq i32 %inc, %indvars.iv"]
	Node0x557983c102e8[shape=record, label="  br i1 %exitcond, label %for.cond6.preheader, label %for.body4"]
	Node0x557983c10360[shape=record, label="  %putchar = call i32 @putchar(i32 10)"]
	Node0x557983c107c8[shape=record, label="  br i1 %cmp230, label %for.cond1.preheader, label %for.cond.cleanup"]
	Node0x557983c10838[shape=record, label="  %k.037 = phi i32 [ %inc15, %for.body12 ], [ 0, %for.cond6.preheader ]"]
	Node0x557983c10940[shape=record, label="  %putchar28 = call i32 @putchar(i32 42)"]
	Node0x557983c10a10[shape=record, label="  %inc15 = add nuw nsw i32 %k.037, 1"]
	Node0x557983c0fd68[shape=record, label="  %3 = load i32, i32* %n, align 4, !tbaa !2"]
	Node0x557983c10a80[shape=record, label="  %add7 = add nsw i32 %3, 1"]
	Node0x557983c10af0[shape=record, label="  %div8 = sdiv i32 %add7, 2"]
	Node0x557983c10b80[shape=record, label="  %sub9 = sub nsw i32 %div8, %i.039"]
	Node0x557983c10c10[shape=record, label="  %mul = shl nsw i32 %sub9, 1"]
	Node0x557983c10ca0[shape=record, label="  %cmp10 = icmp slt i32 %k.037, %mul"]
	Node0x557983c10d78[shape=record, label="  br i1 %cmp10, label %for.body12, label %for.cond.cleanup11"]
	Node0x557983c0c828 -> Node0x557983c0cee8
	Node0x557983c0cee8 -> Node0x557983c0d348
	Node0x557983c0d348 -> Node0x557983c0d7a8
	Node0x557983c0d7a8 -> Node0x557983c0d868
	Node0x557983c0d868 -> Node0x557983c0e7b0
	Node0x557983c0e7b0 -> Node0x557983c0e850
	Node0x557983c0e850 -> Node0x557983c0e910
	Node0x557983c0e910 -> Node0x557983ba2348
	Node0x557983ba2348 -> Node0x557983c0ed18
	Node0x557983ba2348 -> Node0x557983c0f438
	Node0x557983c0ed18 -> Node0x557983c0eec8
	Node0x557983c0eec8 -> Node0x557983c0efb0
	Node0x557983c0efb0 -> Node0x557983c0f020
	Node0x557983c0f020 -> Node0x557983c0f230
	Node0x557983c0f230 -> Node0x557983ba2468
	Node0x557983ba2468 -> Node0x557983c0fe98
	Node0x557983ba2468 -> Node0x557983c0ea38
	Node0x557983c0f438 -> Node0x557983c0f4f8
	Node0x557983c0ea38 -> Node0x557983c0fb80
	Node0x557983c0fb80 -> Node0x557983c0fbf0
	Node0x557983c0fbf0 -> Node0x557983c0fc60
	Node0x557983c0fc60 -> Node0x557983c0fdf8
	Node0x557983c0fdf8 -> Node0x557983c10360
	Node0x557983c0fdf8 -> Node0x557983c10838
	Node0x557983c0fe98 -> Node0x557983c10090
	Node0x557983c10090 -> Node0x557983c10190
	Node0x557983c10190 -> Node0x557983c10200
	Node0x557983c10200 -> Node0x557983c102e8
	Node0x557983c102e8 -> Node0x557983c0ea38
	Node0x557983c102e8 -> Node0x557983c0fe98
	Node0x557983c10360 -> Node0x557983c107c8
	Node0x557983c107c8 -> Node0x557983c0ed18
	Node0x557983c107c8 -> Node0x557983c0f438
	Node0x557983c10838 -> Node0x557983c10940
	Node0x557983c10940 -> Node0x557983c10a10
	Node0x557983c10a10 -> Node0x557983c0fd68
	Node0x557983c0fd68 -> Node0x557983c10a80
	Node0x557983c10a80 -> Node0x557983c10af0
	Node0x557983c10af0 -> Node0x557983c10b80
	Node0x557983c10b80 -> Node0x557983c10c10
	Node0x557983c10c10 -> Node0x557983c10ca0
	Node0x557983c10ca0 -> Node0x557983c10d78
	Node0x557983c10d78 -> Node0x557983c10838
	Node0x557983c10d78 -> Node0x557983c10360
edge [color=red]
	Node0x557983c0c828 -> Node0x557983c0cee8[label="1"]
	Node0x557983c0cee8 -> Node0x557983c0d348[label="2"]
	Node0x557983c0c828 -> Node0x557983c0d7a8[label="3"]
	Node0x557983c0c828 -> Node0x557983c0d868[label="4"]
	Node0x557983c0d868 -> Node0x557983c0e7b0[label="5"]
	Node0x557983c0e7b0 -> Node0x557983c0e850[label="6"]
	Node0x557983c0d868 -> Node0x557983c0e910[label="7"]
	Node0x557983c0e910 -> Node0x557983ba2348[label="8"]
	Node0x557983c0efb0 -> Node0x557983c0ed18[label="9"]
	Node0x557983c0e850 -> Node0x557983c0ed18[label="10"]
	Node0x557983c0f020 -> Node0x557983c0eec8[label="11"]
	Node0x557983c0e850 -> Node0x557983c0eec8[label="12"]
	Node0x557983c0ed18 -> Node0x557983c0efb0[label="13"]
	Node0x557983c0eec8 -> Node0x557983c0f020[label="14"]
	Node0x557983c0f020 -> Node0x557983c0f230[label="15"]
	Node0x557983c0f230 -> Node0x557983ba2468[label="16"]
	Node0x557983c0cee8 -> Node0x557983c0f438[label="17"]
	Node0x557983c0c828 -> Node0x557983c0ea38[label="18"]
	Node0x557983c0ea38 -> Node0x557983c0fb80[label="19"]
	Node0x557983c0fb80 -> Node0x557983c0fbf0[label="20"]
	Node0x557983c0fbf0 -> Node0x557983c0fc60[label="21"]
	Node0x557983c0eec8 -> Node0x557983c0fc60[label="22"]
	Node0x557983c0fc60 -> Node0x557983c0fdf8[label="23"]
	Node0x557983c10190 -> Node0x557983c0fe98[label="24"]
	Node0x557983c0fe98 -> Node0x557983c10190[label="25"]
	Node0x557983c10190 -> Node0x557983c10200[label="26"]
	Node0x557983c0efb0 -> Node0x557983c10200[label="27"]
	Node0x557983c10200 -> Node0x557983c102e8[label="28"]
	Node0x557983c0f230 -> Node0x557983c107c8[label="29"]
	Node0x557983c10a10 -> Node0x557983c10838[label="30"]
	Node0x557983c10838 -> Node0x557983c10a10[label="31"]
	Node0x557983c0c828 -> Node0x557983c0fd68[label="32"]
	Node0x557983c0fd68 -> Node0x557983c10a80[label="33"]
	Node0x557983c10a80 -> Node0x557983c10af0[label="34"]
	Node0x557983c10af0 -> Node0x557983c10b80[label="35"]
	Node0x557983c0eec8 -> Node0x557983c10b80[label="36"]
	Node0x557983c10b80 -> Node0x557983c10c10[label="37"]
	Node0x557983c10838 -> Node0x557983c10ca0[label="38"]
	Node0x557983c10c10 -> Node0x557983c10ca0[label="39"]
	Node0x557983c10ca0 -> Node0x557983c10d78[label="40"]
}
