digraph "DFG for'main' function" {
	Node0x1bb75a8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1bb7628[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1bb76b8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1bb7718[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1bb7b98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1bb7c78[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1bb7d78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bb7e38[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1bb7ee8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bb8148[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1bb8208[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1bb8368[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1bb83c8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1bbef00[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1bbf0e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bbf248[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bbf358[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1bbf418[shape=record, label="  ret i32 0"];
	Node0x1bb75a8 -> Node0x1bb7628;
	Node0x1bb7628 -> Node0x1bb76b8;
	Node0x1bb76b8 -> Node0x1bb7718;
	Node0x1bb7718 -> Node0x1bb7b98;
	Node0x1bb7b98 -> Node0x1bb7c78;
	Node0x1bb7c78 -> Node0x1bb7d78;
	Node0x1bb7d78 -> Node0x1bb7e38;
	Node0x1bb7e38 -> Node0x1bb7ee8;
	Node0x1bb7ee8 -> Node0x1bb8148;
	Node0x1bb8148 -> Node0x1bb8208;
	Node0x1bb8208 -> Node0x1bb8368;
	Node0x1bb8368 -> Node0x1bb83c8;
	Node0x1bb83c8 -> Node0x1bbef00;
	Node0x1bbef00 -> Node0x1bbf0e8;
	Node0x1bbf0e8 -> Node0x1bbf248;
	Node0x1bbf248 -> Node0x1bbf358;
	Node0x1bbf358 -> Node0x1bbf418;
edge [color=red]
	Node0x1bb75a8 -> Node0x1bb7718;
	Node0x1bb7718 -> Node0x1bb7b98;
	Node0x1bb7628 -> Node0x1bb7c78;
	Node0x1bb7c78 -> Node0x1bb7d78;
	Node0x1bb76b8 -> Node0x1bb7e38;
	Node0x1bb7e38 -> Node0x1bb7ee8;
	Node0x1bb75a8 -> Node0x1bb8148;
	Node0x1bb7628 -> Node0x1bb8148;
	Node0x1bb76b8 -> Node0x1bb8148;
	Node0x1bb75a8 -> Node0x1bb8208;
	Node0x1bb7628 -> Node0x1bb8368;
	Node0x1bb76b8 -> Node0x1bb83c8;
	Node0x1bb8208 -> Node0x1bbef00;
	Node0x1bb8368 -> Node0x1bbef00;
	Node0x1bb83c8 -> Node0x1bbef00;
	Node0x1bb7e38 -> Node0x1bbf0e8;
	Node0x1bb7c78 -> Node0x1bbf248;
	Node0x1bb7718 -> Node0x1bbf358;
}
