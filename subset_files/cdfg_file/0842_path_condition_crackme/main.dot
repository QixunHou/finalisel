digraph "DFG for'main' function" {
	Node0x1b74918[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b74998[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b74a28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b74a88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1b74b38[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1b74f68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b75048[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1b75148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b75208[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1b752b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b75378[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1b75428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b6fa40[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1b75628[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b76598[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b76c08[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b76c68[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1b76ce0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1b76d50[shape=record, label="  %15 = mul i32 %14, -2"];
	Node0x1b76dc0[shape=record, label="  %16 = shl i32 %10, 2"];
	Node0x1b76e30[shape=record, label="  %17 = add i32 %10, 1"];
	Node0x1b76ea0[shape=record, label="  %18 = sub i32 %17, %16"];
	Node0x1b76f10[shape=record, label="  %19 = add i32 %18, %12"];
	Node0x1b76f80[shape=record, label="  %20 = add i32 %19, %15"];
	Node0x1b76ff0[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x1b77060[shape=record, label="  %22 = or i32 %11, %14"];
	Node0x1b770d0[shape=record, label="  %23 = xor i32 %11, %14"];
	Node0x1b77140[shape=record, label="  %24 = add i32 %21, 1"];
	Node0x1b771b0[shape=record, label="  %25 = xor i32 %13, -1"];
	Node0x1b77220[shape=record, label="  %26 = xor i32 %13, %10"];
	Node0x1b77290[shape=record, label="  %27 = or i32 %10, %25"];
	Node0x1b77300[shape=record, label="  %28 = xor i32 %13, 1073741823"];
	Node0x1b77370[shape=record, label="  %29 = and i32 %28, %10"];
	Node0x1b773e0[shape=record, label="  %30 = shl i32 %29, 2"];
	Node0x1b77450[shape=record, label="  %31 = and i32 %13, %10"];
	Node0x1b774c0[shape=record, label="  %32 = add i32 %22, %23"];
	Node0x1b77530[shape=record, label="  %33 = add i32 %32, %24"];
	Node0x1b775a0[shape=record, label="  %34 = mul i32 %33, 3"];
	Node0x1b77610[shape=record, label="  %35 = mul i32 %11, -6"];
	Node0x1b77680[shape=record, label="  %36 = sub i32 %11, %22"];
	Node0x1b776f0[shape=record, label="  %37 = mul i32 %36, 5"];
	Node0x1b77760[shape=record, label="  %38 = sub i32 %35, %13"];
	Node0x1b777d0[shape=record, label="  %39 = add i32 %38, %25"];
	Node0x1b77840[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x1b778b0[shape=record, label="  %41 = add i32 %40, %26"];
	Node0x1b77920[shape=record, label="  %42 = sub i32 %41, %27"];
	Node0x1b77990[shape=record, label="  %43 = sub i32 %42, %31"];
	Node0x1b77a00[shape=record, label="  %44 = add i32 %43, %37"];
	Node0x1b77a70[shape=record, label="  %45 = sub i32 %44, %30"];
	Node0x1b77ae0[shape=record, label="  %46 = add i32 %45, %34"];
	Node0x1b77b50[shape=record, label="  %47 = icmp eq i32 %20, %46"];
	Node0x1b148b8[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1b77be0[shape=record, label="  %49 = call i32 @puts(i8* nonnull dereferenceable(1) %48) #5"];
	Node0x1b77e88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b77fe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b780f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b78208[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b782c8[shape=record, label="  ret i32 0"];
	Node0x1b74918 -> Node0x1b74998;
	Node0x1b74998 -> Node0x1b74a28;
	Node0x1b74a28 -> Node0x1b74a88;
	Node0x1b74a88 -> Node0x1b74b38;
	Node0x1b74b38 -> Node0x1b74f68;
	Node0x1b74f68 -> Node0x1b75048;
	Node0x1b75048 -> Node0x1b75148;
	Node0x1b75148 -> Node0x1b75208;
	Node0x1b75208 -> Node0x1b752b8;
	Node0x1b752b8 -> Node0x1b75378;
	Node0x1b75378 -> Node0x1b75428;
	Node0x1b75428 -> Node0x1b6fa40;
	Node0x1b6fa40 -> Node0x1b75628;
	Node0x1b75628 -> Node0x1b76598;
	Node0x1b76598 -> Node0x1b76c08;
	Node0x1b76c08 -> Node0x1b76c68;
	Node0x1b76c68 -> Node0x1b76ce0;
	Node0x1b76ce0 -> Node0x1b76d50;
	Node0x1b76d50 -> Node0x1b76dc0;
	Node0x1b76dc0 -> Node0x1b76e30;
	Node0x1b76e30 -> Node0x1b76ea0;
	Node0x1b76ea0 -> Node0x1b76f10;
	Node0x1b76f10 -> Node0x1b76f80;
	Node0x1b76f80 -> Node0x1b76ff0;
	Node0x1b76ff0 -> Node0x1b77060;
	Node0x1b77060 -> Node0x1b770d0;
	Node0x1b770d0 -> Node0x1b77140;
	Node0x1b77140 -> Node0x1b771b0;
	Node0x1b771b0 -> Node0x1b77220;
	Node0x1b77220 -> Node0x1b77290;
	Node0x1b77290 -> Node0x1b77300;
	Node0x1b77300 -> Node0x1b77370;
	Node0x1b77370 -> Node0x1b773e0;
	Node0x1b773e0 -> Node0x1b77450;
	Node0x1b77450 -> Node0x1b774c0;
	Node0x1b774c0 -> Node0x1b77530;
	Node0x1b77530 -> Node0x1b775a0;
	Node0x1b775a0 -> Node0x1b77610;
	Node0x1b77610 -> Node0x1b77680;
	Node0x1b77680 -> Node0x1b776f0;
	Node0x1b776f0 -> Node0x1b77760;
	Node0x1b77760 -> Node0x1b777d0;
	Node0x1b777d0 -> Node0x1b77840;
	Node0x1b77840 -> Node0x1b778b0;
	Node0x1b778b0 -> Node0x1b77920;
	Node0x1b77920 -> Node0x1b77990;
	Node0x1b77990 -> Node0x1b77a00;
	Node0x1b77a00 -> Node0x1b77a70;
	Node0x1b77a70 -> Node0x1b77ae0;
	Node0x1b77ae0 -> Node0x1b77b50;
	Node0x1b77b50 -> Node0x1b148b8;
	Node0x1b148b8 -> Node0x1b77be0;
	Node0x1b77be0 -> Node0x1b77e88;
	Node0x1b77e88 -> Node0x1b77fe8;
	Node0x1b77fe8 -> Node0x1b780f8;
	Node0x1b780f8 -> Node0x1b78208;
	Node0x1b78208 -> Node0x1b782c8;
edge [color=red]
	Node0x1b74918 -> Node0x1b74b38;
	Node0x1b74b38 -> Node0x1b74f68;
	Node0x1b74998 -> Node0x1b75048;
	Node0x1b75048 -> Node0x1b75148;
	Node0x1b74a28 -> Node0x1b75208;
	Node0x1b75208 -> Node0x1b752b8;
	Node0x1b74a88 -> Node0x1b75378;
	Node0x1b75378 -> Node0x1b75428;
	Node0x1b74918 -> Node0x1b6fa40;
	Node0x1b74998 -> Node0x1b6fa40;
	Node0x1b74a28 -> Node0x1b6fa40;
	Node0x1b74a88 -> Node0x1b6fa40;
	Node0x1b74918 -> Node0x1b75628;
	Node0x1b74998 -> Node0x1b76598;
	Node0x1b74a28 -> Node0x1b76c08;
	Node0x1b74a88 -> Node0x1b76c68;
	Node0x1b76c08 -> Node0x1b76ce0;
	Node0x1b76ce0 -> Node0x1b76d50;
	Node0x1b75628 -> Node0x1b76dc0;
	Node0x1b75628 -> Node0x1b76e30;
	Node0x1b76e30 -> Node0x1b76ea0;
	Node0x1b76dc0 -> Node0x1b76ea0;
	Node0x1b76ea0 -> Node0x1b76f10;
	Node0x1b76c08 -> Node0x1b76f10;
	Node0x1b76f10 -> Node0x1b76f80;
	Node0x1b76d50 -> Node0x1b76f80;
	Node0x1b76c08 -> Node0x1b76ff0;
	Node0x1b76598 -> Node0x1b76ff0;
	Node0x1b76598 -> Node0x1b77060;
	Node0x1b76ce0 -> Node0x1b77060;
	Node0x1b76598 -> Node0x1b770d0;
	Node0x1b76ce0 -> Node0x1b770d0;
	Node0x1b76ff0 -> Node0x1b77140;
	Node0x1b76c68 -> Node0x1b771b0;
	Node0x1b76c68 -> Node0x1b77220;
	Node0x1b75628 -> Node0x1b77220;
	Node0x1b75628 -> Node0x1b77290;
	Node0x1b771b0 -> Node0x1b77290;
	Node0x1b76c68 -> Node0x1b77300;
	Node0x1b77300 -> Node0x1b77370;
	Node0x1b75628 -> Node0x1b77370;
	Node0x1b77370 -> Node0x1b773e0;
	Node0x1b76c68 -> Node0x1b77450;
	Node0x1b75628 -> Node0x1b77450;
	Node0x1b77060 -> Node0x1b774c0;
	Node0x1b770d0 -> Node0x1b774c0;
	Node0x1b774c0 -> Node0x1b77530;
	Node0x1b77140 -> Node0x1b77530;
	Node0x1b77530 -> Node0x1b775a0;
	Node0x1b76598 -> Node0x1b77610;
	Node0x1b76598 -> Node0x1b77680;
	Node0x1b77060 -> Node0x1b77680;
	Node0x1b77680 -> Node0x1b776f0;
	Node0x1b77610 -> Node0x1b77760;
	Node0x1b76c68 -> Node0x1b77760;
	Node0x1b77760 -> Node0x1b777d0;
	Node0x1b771b0 -> Node0x1b777d0;
	Node0x1b777d0 -> Node0x1b77840;
	Node0x1b77140 -> Node0x1b77840;
	Node0x1b77840 -> Node0x1b778b0;
	Node0x1b77220 -> Node0x1b778b0;
	Node0x1b778b0 -> Node0x1b77920;
	Node0x1b77290 -> Node0x1b77920;
	Node0x1b77920 -> Node0x1b77990;
	Node0x1b77450 -> Node0x1b77990;
	Node0x1b77990 -> Node0x1b77a00;
	Node0x1b776f0 -> Node0x1b77a00;
	Node0x1b77a00 -> Node0x1b77a70;
	Node0x1b773e0 -> Node0x1b77a70;
	Node0x1b77a70 -> Node0x1b77ae0;
	Node0x1b775a0 -> Node0x1b77ae0;
	Node0x1b76f80 -> Node0x1b77b50;
	Node0x1b77ae0 -> Node0x1b77b50;
	Node0x1b77b50 -> Node0x1b148b8;
	Node0x1b148b8 -> Node0x1b77be0;
	Node0x1b75378 -> Node0x1b77e88;
	Node0x1b75208 -> Node0x1b77fe8;
	Node0x1b75048 -> Node0x1b780f8;
	Node0x1b74b38 -> Node0x1b78208;
}
