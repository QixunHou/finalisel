; ModuleID = '../.././c_source_file/1992_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1992_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = xor i32 %4, -1
  %7 = xor i32 %3, -1
  %8 = add i32 %6, %7
  %9 = and i32 %2, %1
  %10 = and i32 %9, %0
  %11 = xor i32 %0, -1
  %12 = xor i32 %2, %1
  %13 = and i32 %12, %11
  %14 = or i32 %10, %13
  %15 = or i32 %2, %1
  %16 = and i32 %15, %11
  %17 = sub i32 %8, %16
  %18 = add i32 %17, %14
  %19 = or i32 %4, %3
  %20 = and i32 %6, %3
  %21 = xor i32 %4, %3
  %22 = shl i32 %21, 1
  %23 = xor i32 %22, -2
  %24 = or i32 %6, %3
  %25 = add i32 %24, 1
  %26 = and i32 %4, %3
  %27 = shl i32 %26, 2
  %28 = xor i32 %1, -1
  %29 = xor i32 %2, -1
  %30 = and i32 %29, %0
  %31 = xor i32 %30, -1
  %32 = and i32 %31, %28
  %33 = or i32 %28, %0
  %34 = xor i32 %33, %2
  %35 = or i32 %2, %0
  %36 = and i32 %35, %1
  %37 = xor i32 %31, %1
  %38 = shl i32 %37, 1
  %39 = and i32 %28, %2
  %40 = and i32 %39, %11
  %41 = or i32 %12, %11
  %42 = xor i32 %41, -1
  %43 = or i32 %40, %42
  %44 = and i32 %31, %1
  %45 = and i32 %1, %0
  %46 = xor i32 %35, -1
  %47 = or i32 %45, %46
  %48 = or i32 %15, %0
  %49 = add i32 %35, 1
  %50 = xor i32 %1, %0
  %51 = xor i32 %50, -1
  %52 = xor i32 %2, %0
  %53 = xor i32 %52, -1
  %54 = or i32 %53, %51
  %55 = and i32 %28, %0
  %56 = xor i32 %9, -1
  %57 = xor i32 %55, %56
  %58 = and i32 %15, %0
  %59 = shl i32 %58, 1
  %60 = and i32 %2, %0
  %61 = and i32 %29, %1
  %62 = xor i32 %61, -1
  %63 = xor i32 %60, %62
  %64 = or i32 %60, %50
  %65 = shl i32 %64, 1
  %66 = or i32 %30, %51
  %67 = and i32 %35, %50
  %68 = and i32 %56, %0
  %69 = or i32 %9, %55
  %70 = xor i32 %15, -1
  %71 = or i32 %45, %70
  %72 = and i32 %52, %1
  %73 = and i32 %33, %53
  %74 = and i32 %39, %0
  %75 = xor i32 %12, %0
  %76 = or i32 %74, %75
  %77 = and i32 %51, %2
  %78 = xor i32 %45, -1
  %79 = and i32 %53, %78
  %80 = and i32 %53, %28
  %81 = xor i32 %33, -1
  %82 = or i32 %29, %81
  %83 = or i32 %1, %0
  %84 = xor i32 %12, -1
  %85 = and i32 %83, %84
  %86 = or i32 %30, %50
  %87 = shl i32 %86, 2
  %88 = or i32 %29, %0
  %89 = and i32 %88, %28
  %90 = or i32 %60, %51
  %91 = xor i32 %60, -1
  %92 = and i32 %50, %91
  %93 = or i32 %56, %11
  %94 = and i32 %52, %28
  %95 = and i32 %33, %84
  %96 = or i32 %45, %29
  %97 = xor i32 %46, %1
  %98 = and i32 %9, %11
  %99 = and i32 %12, %0
  %100 = or i32 %98, %99
  %101 = or i32 %52, %50
  %102 = or i32 %52, %51
  %103 = or i32 %61, %55
  %104 = shl i32 %2, 1
  %105 = add i32 %52, 1
  %106 = add i32 %12, 1
  %107 = xor i32 %75, -1
  %108 = or i32 %10, %107
  %109 = xor i32 %55, -1
  %110 = and i32 %109, %2
  %111 = or i32 %61, %0
  %112 = xor i32 %78, %2
  %113 = xor i32 %62, %0
  %114 = and i32 %88, %50
  %115 = or i32 %62, %11
  %116 = xor i32 %9, %0
  %117 = xor i32 %15, %45
  %118 = add i32 %33, 1
  %119 = xor i32 %16, 2147483647
  %120 = xor i32 %119, %10
  %121 = shl i32 %120, 1
  %122 = xor i32 %88, -1
  %123 = or i32 %122, %1
  %124 = xor i32 %60, %83
  %125 = or i32 %52, %28
  %126 = xor i32 %83, -1
  %127 = or i32 %126, %2
  %128 = xor i32 %88, %45
  %129 = and i32 %31, %51
  %130 = or i32 %53, %28
  %131 = and i32 %83, %29
  %132 = or i32 %28, %2
  %133 = xor i32 %132, %0
  %134 = xor i32 %74, -1
  %135 = xor i32 %133, %134
  %136 = and i32 %33, %2
  %137 = or i32 %29, %1
  %138 = xor i32 %137, %0
  %139 = shl i32 %109, 1
  %140 = and i32 %132, %11
  %141 = or i32 %74, %140
  %142 = xor i32 %122, %1
  %143 = xor i32 %60, %1
  %144 = xor i32 %137, -1
  %145 = or i32 %144, %11
  %146 = shl i32 %145, 1
  %147 = and i32 %29, %51
  %148 = or i32 %46, %1
  %149 = and i32 %29, %109
  %150 = or i32 %10, %16
  %151 = xor i32 %40, %41
  %152 = or i32 %30, %144
  %153 = or i32 %84, %126
  %154 = and i32 %84, %109
  %155 = shl i32 %154, 1
  %156 = or i32 %53, %1
  %157 = or i32 %12, %126
  %158 = or i32 %9, %0
  %159 = or i32 %12, %0
  %160 = xor i32 %74, %159
  %161 = xor i32 %109, %2
  %162 = or i32 %144, %0
  %163 = and i32 %52, %33
  %164 = shl i32 %31, 1
  %165 = and i32 %53, %109
  %166 = xor i32 %55, %62
  %167 = or i32 %51, %2
  %168 = or i32 %70, %11
  %169 = and i32 %12, %109
  %170 = shl i32 %169, 1
  %171 = or i32 %46, %28
  %172 = or i32 %84, %11
  %173 = xor i32 %137, %45
  %174 = and i32 %35, %28
  %175 = or i32 %84, %81
  %176 = and i32 %50, %53
  %177 = and i32 %53, %51
  %178 = or i32 %15, %11
  %179 = and i32 %29, %78
  %180 = or i32 %30, %1
  %181 = and i32 %52, %83
  %182 = or i32 %45, %53
  %183 = shl i32 %182, 1
  %184 = or i32 %55, %53
  %185 = shl i32 %184, 1
  %186 = add i32 %61, 1
  %187 = or i32 %52, %81
  %188 = and i32 %35, %51
  %189 = shl i32 %188, 1
  %190 = or i32 %53, %81
  %191 = shl i32 %190, 1
  %192 = or i32 %46, %51
  %193 = or i32 %52, %55
  %194 = and i32 %62, %0
  %195 = and i32 %137, %11
  %196 = xor i32 %91, %1
  %197 = xor i32 %30, %56
  %198 = or i32 %30, %28
  %199 = xor i32 %140, %134
  %200 = and i32 %84, %78
  %201 = or i32 %53, %126
  %202 = and i32 %83, %2
  %203 = or i32 %60, %126
  %204 = or i32 %62, %0
  %205 = and i32 %62, %11
  %206 = and i32 %12, %78
  %207 = or i32 %50, %2
  %208 = or i32 %137, %11
  %209 = add i32 %88, 1
  %210 = or i32 %12, %45
  %211 = or i32 %60, %81
  %212 = xor i32 %15, %0
  %213 = or i32 %10, %212
  %214 = add i32 %60, 1
  %215 = shl i32 %61, 1
  %216 = and i32 %33, %29
  %217 = or i32 %137, %0
  %218 = or i32 %12, %55
  %219 = shl i32 %218, 1
  %220 = or i32 %50, %29
  %221 = and i32 %52, %109
  %222 = and i32 %12, %33
  %223 = shl i32 %222, 1
  %224 = and i32 %56, %11
  %225 = and i32 %52, %78
  %226 = and i32 %137, %0
  %227 = shl i32 %226, 1
  %228 = xor i32 %10, -1
  %229 = xor i32 %212, %228
  %230 = and i32 %91, %28
  %231 = shl i32 %126, 1
  %232 = and i32 %91, %51
  %233 = xor i32 %83, %2
  %234 = or i32 %55, %84
  %235 = or i32 %9, %11
  %236 = and i32 %50, %2
  %237 = or i32 %61, %11
  %238 = or i32 %50, %46
  %239 = and i32 %53, %1
  %240 = add i32 %15, 1
  %241 = xor i32 %13, %228
  %242 = xor i32 %60, %33
  %243 = xor i32 %56, %0
  %244 = or i32 %52, %126
  %245 = xor i32 %126, %2
  %246 = xor i32 %10, %75
  %247 = or i32 %56, %0
  %248 = and i32 %52, %51
  %249 = or i32 %45, %122
  %250 = or i32 %84, %0
  %251 = shl i32 %250, 1
  %252 = or i32 %74, %133
  %253 = xor i32 %30, %1
  %254 = and i32 %78, %2
  %255 = xor i32 %84, %0
  %256 = or i32 %45, %84
  %257 = and i32 %91, %1
  %258 = and i32 %12, %83
  %259 = xor i32 %98, -1
  %260 = xor i32 %99, %259
  %261 = and i32 %88, %51
  %262 = shl i32 %261, 1
  %263 = xor i32 %30, %137
  %264 = or i32 %60, %70
  %265 = and i32 %50, %29
  %266 = or i32 %45, %144
  %267 = and i32 %52, %50
  %268 = or i32 %81, %2
  %269 = xor i32 %159, -1
  %270 = or i32 %74, %269
  %271 = xor i32 %58, %259
  %272 = or i32 %45, %2
  %273 = or i32 %30, %9
  %274 = xor i32 %55, %2
  %275 = xor i32 %81, %2
  %276 = add i32 %9, 1
  %277 = and i32 %132, %0
  %278 = xor i32 %277, 1073741823
  %279 = xor i32 %278, %40
  %280 = or i32 %52, %1
  %281 = xor i32 %35, %1
  %282 = or i32 %98, %58
  %283 = or i32 %60, %28
  %284 = shl i32 %283, 1
  %285 = or i32 %29, %126
  %286 = or i32 %50, %53
  %287 = and i32 %70, %11
  %288 = and i32 %61, %11
  %289 = and i32 %70, %0
  %290 = mul i32 %289, -10
  %291 = and i32 %61, %0
  %292 = mul i32 %291, -21
  %293 = and i32 %144, %11
  %294 = mul i32 %98, -23
  %295 = and i32 %144, %0
  %296 = mul i32 %10, 13
  %297 = add i32 %50, %0
  %298 = add i32 %297, %147
  %299 = add i32 %298, %263
  %300 = add i32 %299, %267
  %301 = add i32 %300, %247
  %302 = add i32 %301, %221
  %303 = add i32 %302, %211
  %304 = add i32 %303, %205
  %305 = add i32 %304, %187
  %306 = add i32 %305, %156
  %307 = add i32 %306, %143
  %308 = add i32 %307, %128
  %309 = add i32 %308, %123
  %310 = add i32 %309, %101
  %311 = add i32 %310, %89
  %312 = add i32 %311, %72
  %313 = add i32 %312, %67
  %314 = add i32 %293, %186
  %315 = add i32 %314, %295
  %316 = add i32 %315, %244
  %317 = add i32 %316, %153
  %318 = sub i32 %317, %117
  %319 = sub i32 %318, %94
  %320 = mul i32 %319, 3
  %321 = add i32 %25, %249
  %322 = sub i32 %321, %20
  %323 = mul i32 %322, 5
  %324 = add i32 %288, %287
  %325 = mul i32 %324, 6
  %326 = add i32 %279, %103
  %327 = shl i32 %326, 2
  %328 = add i32 %313, %41
  %329 = add i32 %328, %19
  %330 = shl i32 %329, 1
  %331 = add i32 %0, -2
  %332 = add i32 %331, %1
  %333 = add i32 %332, %118
  %334 = sub i32 %333, %45
  %335 = add i32 %334, %33
  %336 = sub i32 %335, %55
  %337 = add i32 %336, %51
  %338 = add i32 %337, %83
  %339 = sub i32 %338, %3
  %340 = add i32 %339, %34
  %341 = add i32 %340, %49
  %342 = add i32 %341, %77
  %343 = sub i32 %342, %82
  %344 = sub i32 %343, %96
  %345 = add i32 %344, %52
  %346 = sub i32 %345, %104
  %347 = add i32 %346, %105
  %348 = add i32 %347, %106
  %349 = add i32 %348, %110
  %350 = add i32 %349, %112
  %351 = sub i32 %350, %15
  %352 = add i32 %351, %88
  %353 = sub i32 %352, %127
  %354 = add i32 %353, %131
  %355 = add i32 %354, %136
  %356 = sub i32 %355, %139
  %357 = sub i32 %356, %30
  %358 = sub i32 %357, %149
  %359 = add i32 %358, %161
  %360 = sub i32 %359, %167
  %361 = sub i32 %360, %179
  %362 = sub i32 %361, %202
  %363 = add i32 %362, %207
  %364 = add i32 %363, %209
  %365 = add i32 %364, %214
  %366 = add i32 %365, %216
  %367 = sub i32 %366, %220
  %368 = add i32 %367, %12
  %369 = sub i32 %368, %231
  %370 = add i32 %369, %233
  %371 = add i32 %370, %236
  %372 = add i32 %371, %240
  %373 = sub i32 %372, %245
  %374 = sub i32 %373, %254
  %375 = add i32 %374, %60
  %376 = add i32 %375, %9
  %377 = add i32 %376, %265
  %378 = sub i32 %377, %268
  %379 = add i32 %378, %272
  %380 = sub i32 %379, %137
  %381 = add i32 %380, %274
  %382 = add i32 %381, %275
  %383 = add i32 %382, %276
  %384 = sub i32 %383, %285
  %385 = add i32 %384, %4
  %386 = add i32 %385, %32
  %387 = sub i32 %386, %36
  %388 = add i32 %387, %44
  %389 = sub i32 %388, %47
  %390 = sub i32 %389, %48
  %391 = sub i32 %390, %54
  %392 = add i32 %391, %57
  %393 = add i32 %392, %63
  %394 = add i32 %393, %66
  %395 = add i32 %394, %68
  %396 = sub i32 %395, %69
  %397 = add i32 %396, %71
  %398 = add i32 %397, %73
  %399 = sub i32 %398, %79
  %400 = add i32 %399, %80
  %401 = add i32 %400, %85
  %402 = add i32 %401, %90
  %403 = add i32 %402, %92
  %404 = add i32 %403, %93
  %405 = add i32 %404, %95
  %406 = sub i32 %405, %97
  %407 = add i32 %406, %102
  %408 = sub i32 %407, %111
  %409 = add i32 %408, %113
  %410 = add i32 %409, %114
  %411 = sub i32 %410, %115
  %412 = add i32 %411, %116
  %413 = add i32 %412, %124
  %414 = sub i32 %413, %125
  %415 = sub i32 %414, %129
  %416 = sub i32 %415, %130
  %417 = sub i32 %416, %138
  %418 = sub i32 %417, %142
  %419 = sub i32 %418, %75
  %420 = sub i32 %419, %148
  %421 = add i32 %420, %152
  %422 = add i32 %421, %157
  %423 = sub i32 %422, %158
  %424 = sub i32 %423, %162
  %425 = sub i32 %424, %163
  %426 = sub i32 %425, %164
  %427 = sub i32 %426, %165
  %428 = add i32 %427, %166
  %429 = add i32 %428, %99
  %430 = sub i32 %429, %168
  %431 = sub i32 %430, %171
  %432 = add i32 %431, %172
  %433 = add i32 %432, %173
  %434 = add i32 %433, %174
  %435 = sub i32 %434, %175
  %436 = add i32 %435, %176
  %437 = sub i32 %436, %177
  %438 = add i32 %437, %178
  %439 = add i32 %438, %180
  %440 = sub i32 %439, %181
  %441 = add i32 %440, %192
  %442 = add i32 %441, %193
  %443 = add i32 %442, %194
  %444 = add i32 %443, %195
  %445 = add i32 %444, %196
  %446 = sub i32 %445, %197
  %447 = add i32 %446, %198
  %448 = sub i32 %447, %200
  %449 = add i32 %448, %201
  %450 = sub i32 %449, %203
  %451 = add i32 %450, %204
  %452 = add i32 %451, %206
  %453 = add i32 %452, %208
  %454 = sub i32 %453, %210
  %455 = sub i32 %454, %215
  %456 = sub i32 %455, %217
  %457 = sub i32 %456, %224
  %458 = sub i32 %457, %225
  %459 = sub i32 %458, %13
  %460 = add i32 %459, %230
  %461 = add i32 %460, %232
  %462 = add i32 %461, %234
  %463 = sub i32 %462, %235
  %464 = sub i32 %463, %237
  %465 = add i32 %464, %238
  %466 = sub i32 %465, %239
  %467 = sub i32 %466, %242
  %468 = add i32 %467, %243
  %469 = sub i32 %468, %248
  %470 = add i32 %469, %253
  %471 = add i32 %470, %255
  %472 = add i32 %471, %256
  %473 = add i32 %472, %257
  %474 = add i32 %473, %258
  %475 = sub i32 %474, %264
  %476 = sub i32 %475, %266
  %477 = sub i32 %476, %273
  %478 = add i32 %477, %280
  %479 = add i32 %478, %281
  %480 = sub i32 %479, %159
  %481 = sub i32 %480, %286
  %482 = add i32 %481, %20
  %483 = add i32 %482, %24
  %484 = sub i32 %483, %38
  %485 = sub i32 %484, %43
  %486 = sub i32 %485, %59
  %487 = sub i32 %486, %65
  %488 = sub i32 %487, %76
  %489 = sub i32 %488, %87
  %490 = add i32 %489, %100
  %491 = add i32 %490, %108
  %492 = sub i32 %491, %135
  %493 = add i32 %492, %141
  %494 = sub i32 %493, %146
  %495 = sub i32 %494, %150
  %496 = sub i32 %495, %151
  %497 = sub i32 %496, %155
  %498 = add i32 %497, %160
  %499 = sub i32 %498, %170
  %500 = sub i32 %499, %183
  %501 = sub i32 %500, %185
  %502 = sub i32 %501, %189
  %503 = sub i32 %502, %191
  %504 = add i32 %503, %199
  %505 = add i32 %504, %213
  %506 = sub i32 %505, %219
  %507 = sub i32 %506, %223
  %508 = sub i32 %507, %227
  %509 = add i32 %508, %229
  %510 = add i32 %509, %241
  %511 = sub i32 %510, %246
  %512 = sub i32 %511, %251
  %513 = add i32 %512, %252
  %514 = sub i32 %513, %260
  %515 = sub i32 %514, %262
  %516 = sub i32 %515, %270
  %517 = sub i32 %516, %271
  %518 = add i32 %517, %282
  %519 = sub i32 %518, %284
  %520 = add i32 %519, %290
  %521 = add i32 %520, %292
  %522 = add i32 %521, %294
  %523 = add i32 %522, %296
  %524 = sub i32 %523, %27
  %525 = add i32 %524, %325
  %526 = sub i32 %525, %23
  %527 = sub i32 %526, %121
  %528 = add i32 %527, %323
  %529 = add i32 %528, %327
  %530 = add i32 %529, %320
  %531 = add i32 %530, %330
  %532 = icmp eq i32 %18, %531
  %533 = select i1 %532, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %534 = tail call i32 @puts(i8* nonnull dereferenceable(1) %533)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
