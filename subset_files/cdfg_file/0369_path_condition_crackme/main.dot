digraph "DFG for'main' function" {
	Node0xbfab78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xbfabf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xbfac88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xbfb0e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xbfb1c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xbfb2e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xbfb520[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xbfb5d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xbfc548[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xbfcbd0[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0xbfcc40[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0xbfccb0[shape=record, label="  %10 = or i32 %6, %9"];
	Node0xbfcd20[shape=record, label="  %11 = or i32 %7, %8"];
	Node0xbfcd90[shape=record, label="  %12 = mul i32 %7, 5"];
	Node0xbfce00[shape=record, label="  %13 = xor i32 %7, %8"];
	Node0xbfce70[shape=record, label="  %14 = and i32 %7, %6"];
	Node0xbfcee0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0xbfcf50[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0xbfcfc0[shape=record, label="  %17 = xor i32 %10, -1"];
	Node0xbfd030[shape=record, label="  %18 = mul i32 %17, -3"];
	Node0xbfd0a0[shape=record, label="  %19 = mul i32 %14, -7"];
	Node0xbfd110[shape=record, label="  %20 = sub i32 -2, %6"];
	Node0xbfd180[shape=record, label="  %21 = add i32 %20, %10"];
	Node0xbfd1f0[shape=record, label="  %22 = sub i32 %21, %11"];
	Node0xbfd260[shape=record, label="  %23 = add i32 %22, %12"];
	Node0xbfd2d0[shape=record, label="  %24 = add i32 %23, %13"];
	Node0xbfd340[shape=record, label="  %25 = add i32 %24, %18"];
	Node0xbfd3b0[shape=record, label="  %26 = add i32 %25, %19"];
	Node0xbfd420[shape=record, label="  %27 = sub i32 %26, %16"];
	Node0xbfd490[shape=record, label="  %28 = icmp eq i32 %27, %8"];
	Node0xb9b9d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xbfd520[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0xbfd778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xbfd8d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xbfd998[shape=record, label="  ret i32 0"];
	Node0xbfab78 -> Node0xbfabf8;
	Node0xbfabf8 -> Node0xbfac88;
	Node0xbfac88 -> Node0xbfb0e8;
	Node0xbfb0e8 -> Node0xbfb1c8;
	Node0xbfb1c8 -> Node0xbfb2e8;
	Node0xbfb2e8 -> Node0xbfb520;
	Node0xbfb520 -> Node0xbfb5d8;
	Node0xbfb5d8 -> Node0xbfc548;
	Node0xbfc548 -> Node0xbfcbd0;
	Node0xbfcbd0 -> Node0xbfcc40;
	Node0xbfcc40 -> Node0xbfccb0;
	Node0xbfccb0 -> Node0xbfcd20;
	Node0xbfcd20 -> Node0xbfcd90;
	Node0xbfcd90 -> Node0xbfce00;
	Node0xbfce00 -> Node0xbfce70;
	Node0xbfce70 -> Node0xbfcee0;
	Node0xbfcee0 -> Node0xbfcf50;
	Node0xbfcf50 -> Node0xbfcfc0;
	Node0xbfcfc0 -> Node0xbfd030;
	Node0xbfd030 -> Node0xbfd0a0;
	Node0xbfd0a0 -> Node0xbfd110;
	Node0xbfd110 -> Node0xbfd180;
	Node0xbfd180 -> Node0xbfd1f0;
	Node0xbfd1f0 -> Node0xbfd260;
	Node0xbfd260 -> Node0xbfd2d0;
	Node0xbfd2d0 -> Node0xbfd340;
	Node0xbfd340 -> Node0xbfd3b0;
	Node0xbfd3b0 -> Node0xbfd420;
	Node0xbfd420 -> Node0xbfd490;
	Node0xbfd490 -> Node0xb9b9d8;
	Node0xb9b9d8 -> Node0xbfd520;
	Node0xbfd520 -> Node0xbfd778;
	Node0xbfd778 -> Node0xbfd8d8;
	Node0xbfd8d8 -> Node0xbfd998;
edge [color=red]
	Node0xbfab78 -> Node0xbfac88;
	Node0xbfac88 -> Node0xbfb0e8;
	Node0xbfabf8 -> Node0xbfb1c8;
	Node0xbfb1c8 -> Node0xbfb2e8;
	Node0xbfab78 -> Node0xbfb520;
	Node0xbfabf8 -> Node0xbfb520;
	Node0xbfab78 -> Node0xbfb5d8;
	Node0xbfabf8 -> Node0xbfc548;
	Node0xbfb5d8 -> Node0xbfcbd0;
	Node0xbfc548 -> Node0xbfcc40;
	Node0xbfb5d8 -> Node0xbfccb0;
	Node0xbfcc40 -> Node0xbfccb0;
	Node0xbfc548 -> Node0xbfcd20;
	Node0xbfcbd0 -> Node0xbfcd20;
	Node0xbfc548 -> Node0xbfcd90;
	Node0xbfc548 -> Node0xbfce00;
	Node0xbfcbd0 -> Node0xbfce00;
	Node0xbfc548 -> Node0xbfce70;
	Node0xbfb5d8 -> Node0xbfce70;
	Node0xbfce70 -> Node0xbfcee0;
	Node0xbfcee0 -> Node0xbfcf50;
	Node0xbfccb0 -> Node0xbfcfc0;
	Node0xbfcfc0 -> Node0xbfd030;
	Node0xbfce70 -> Node0xbfd0a0;
	Node0xbfb5d8 -> Node0xbfd110;
	Node0xbfd110 -> Node0xbfd180;
	Node0xbfccb0 -> Node0xbfd180;
	Node0xbfd180 -> Node0xbfd1f0;
	Node0xbfcd20 -> Node0xbfd1f0;
	Node0xbfd1f0 -> Node0xbfd260;
	Node0xbfcd90 -> Node0xbfd260;
	Node0xbfd260 -> Node0xbfd2d0;
	Node0xbfce00 -> Node0xbfd2d0;
	Node0xbfd2d0 -> Node0xbfd340;
	Node0xbfd030 -> Node0xbfd340;
	Node0xbfd340 -> Node0xbfd3b0;
	Node0xbfd0a0 -> Node0xbfd3b0;
	Node0xbfd3b0 -> Node0xbfd420;
	Node0xbfcf50 -> Node0xbfd420;
	Node0xbfd420 -> Node0xbfd490;
	Node0xbfcbd0 -> Node0xbfd490;
	Node0xbfd490 -> Node0xb9b9d8;
	Node0xb9b9d8 -> Node0xbfd520;
	Node0xbfb1c8 -> Node0xbfd778;
	Node0xbfac88 -> Node0xbfd8d8;
}
