digraph "DFG for'main' function" {
	Node0xdff768[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xdff7e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xdff878[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xdff8d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xdffd58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdffe38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xdfff38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xdffff8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xe000a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe00308[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xe003c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe00528[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe00588[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xe03020[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xe03228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe03388[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe03498[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe03558[shape=record, label="  ret i32 0"];
	Node0xdff768 -> Node0xdff7e8;
	Node0xdff7e8 -> Node0xdff878;
	Node0xdff878 -> Node0xdff8d8;
	Node0xdff8d8 -> Node0xdffd58;
	Node0xdffd58 -> Node0xdffe38;
	Node0xdffe38 -> Node0xdfff38;
	Node0xdfff38 -> Node0xdffff8;
	Node0xdffff8 -> Node0xe000a8;
	Node0xe000a8 -> Node0xe00308;
	Node0xe00308 -> Node0xe003c8;
	Node0xe003c8 -> Node0xe00528;
	Node0xe00528 -> Node0xe00588;
	Node0xe00588 -> Node0xe03020;
	Node0xe03020 -> Node0xe03228;
	Node0xe03228 -> Node0xe03388;
	Node0xe03388 -> Node0xe03498;
	Node0xe03498 -> Node0xe03558;
edge [color=red]
	Node0xdff768 -> Node0xdff8d8;
	Node0xdff8d8 -> Node0xdffd58;
	Node0xdff7e8 -> Node0xdffe38;
	Node0xdffe38 -> Node0xdfff38;
	Node0xdff878 -> Node0xdffff8;
	Node0xdffff8 -> Node0xe000a8;
	Node0xdff768 -> Node0xe00308;
	Node0xdff7e8 -> Node0xe00308;
	Node0xdff878 -> Node0xe00308;
	Node0xdff768 -> Node0xe003c8;
	Node0xdff7e8 -> Node0xe00528;
	Node0xdff878 -> Node0xe00588;
	Node0xe003c8 -> Node0xe03020;
	Node0xe00528 -> Node0xe03020;
	Node0xe00588 -> Node0xe03020;
	Node0xdffff8 -> Node0xe03228;
	Node0xdffe38 -> Node0xe03388;
	Node0xdff8d8 -> Node0xe03498;
}
