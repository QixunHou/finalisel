digraph "DFG for'main' function" {
	Node0x2061b48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2061bc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2061c58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x20620b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2062198[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x20622b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20624f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x20625a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2063518[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2063ba0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x2063c10[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x2063c80[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x2063cf0[shape=record, label="  %11 = sub i32 %10, %9"];
	Node0x2063d60[shape=record, label="  %12 = shl i32 %7, 1"];
	Node0x2063dd0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x2063e40[shape=record, label="  %14 = or i32 %12, 1"];
	Node0x2063eb0[shape=record, label="  %15 = shl i32 %13, 1"];
	Node0x2063f20[shape=record, label="  %16 = shl i32 %10, 1"];
	Node0x2063f90[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x2064000[shape=record, label="  %18 = xor i32 %9, -1"];
	Node0x2064070[shape=record, label="  %19 = and i32 %6, %8"];
	Node0x20640e0[shape=record, label="  %20 = add i32 %19, %18"];
	Node0x2064150[shape=record, label="  %21 = mul i32 %20, 3"];
	Node0x20641c0[shape=record, label="  %22 = add i32 %6, 2"];
	Node0x2064230[shape=record, label="  %23 = add i32 %22, %13"];
	Node0x20642a0[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x2064310[shape=record, label="  %25 = sub i32 %24, %15"];
	Node0x2064380[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x20643f0[shape=record, label="  %27 = add i32 %26, %21"];
	Node0x2064460[shape=record, label="  %28 = icmp eq i32 %11, %27"];
	Node0x20029d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x20644f0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x2064748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20648a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2064968[shape=record, label="  ret i32 0"];
	Node0x2061b48 -> Node0x2061bc8;
	Node0x2061bc8 -> Node0x2061c58;
	Node0x2061c58 -> Node0x20620b8;
	Node0x20620b8 -> Node0x2062198;
	Node0x2062198 -> Node0x20622b8;
	Node0x20622b8 -> Node0x20624f0;
	Node0x20624f0 -> Node0x20625a8;
	Node0x20625a8 -> Node0x2063518;
	Node0x2063518 -> Node0x2063ba0;
	Node0x2063ba0 -> Node0x2063c10;
	Node0x2063c10 -> Node0x2063c80;
	Node0x2063c80 -> Node0x2063cf0;
	Node0x2063cf0 -> Node0x2063d60;
	Node0x2063d60 -> Node0x2063dd0;
	Node0x2063dd0 -> Node0x2063e40;
	Node0x2063e40 -> Node0x2063eb0;
	Node0x2063eb0 -> Node0x2063f20;
	Node0x2063f20 -> Node0x2063f90;
	Node0x2063f90 -> Node0x2064000;
	Node0x2064000 -> Node0x2064070;
	Node0x2064070 -> Node0x20640e0;
	Node0x20640e0 -> Node0x2064150;
	Node0x2064150 -> Node0x20641c0;
	Node0x20641c0 -> Node0x2064230;
	Node0x2064230 -> Node0x20642a0;
	Node0x20642a0 -> Node0x2064310;
	Node0x2064310 -> Node0x2064380;
	Node0x2064380 -> Node0x20643f0;
	Node0x20643f0 -> Node0x2064460;
	Node0x2064460 -> Node0x20029d8;
	Node0x20029d8 -> Node0x20644f0;
	Node0x20644f0 -> Node0x2064748;
	Node0x2064748 -> Node0x20648a8;
	Node0x20648a8 -> Node0x2064968;
edge [color=red]
	Node0x2061b48 -> Node0x2061c58;
	Node0x2061c58 -> Node0x20620b8;
	Node0x2061bc8 -> Node0x2062198;
	Node0x2062198 -> Node0x20622b8;
	Node0x2061b48 -> Node0x20624f0;
	Node0x2061bc8 -> Node0x20624f0;
	Node0x2061b48 -> Node0x20625a8;
	Node0x2061bc8 -> Node0x2063518;
	Node0x2063518 -> Node0x2063ba0;
	Node0x20625a8 -> Node0x2063c10;
	Node0x2063ba0 -> Node0x2063c10;
	Node0x2063518 -> Node0x2063c80;
	Node0x20625a8 -> Node0x2063c80;
	Node0x2063c80 -> Node0x2063cf0;
	Node0x2063c10 -> Node0x2063cf0;
	Node0x2063518 -> Node0x2063d60;
	Node0x2063518 -> Node0x2063dd0;
	Node0x20625a8 -> Node0x2063dd0;
	Node0x2063d60 -> Node0x2063e40;
	Node0x2063dd0 -> Node0x2063eb0;
	Node0x2063c80 -> Node0x2063f20;
	Node0x2063f20 -> Node0x2063f90;
	Node0x2063c10 -> Node0x2064000;
	Node0x20625a8 -> Node0x2064070;
	Node0x2063ba0 -> Node0x2064070;
	Node0x2064070 -> Node0x20640e0;
	Node0x2064000 -> Node0x20640e0;
	Node0x20640e0 -> Node0x2064150;
	Node0x20625a8 -> Node0x20641c0;
	Node0x20641c0 -> Node0x2064230;
	Node0x2063dd0 -> Node0x2064230;
	Node0x2064230 -> Node0x20642a0;
	Node0x2063e40 -> Node0x20642a0;
	Node0x20642a0 -> Node0x2064310;
	Node0x2063eb0 -> Node0x2064310;
	Node0x2064310 -> Node0x2064380;
	Node0x2063f90 -> Node0x2064380;
	Node0x2064380 -> Node0x20643f0;
	Node0x2064150 -> Node0x20643f0;
	Node0x2063cf0 -> Node0x2064460;
	Node0x20643f0 -> Node0x2064460;
	Node0x2064460 -> Node0x20029d8;
	Node0x20029d8 -> Node0x20644f0;
	Node0x2062198 -> Node0x2064748;
	Node0x2061c58 -> Node0x20648a8;
}
