digraph "DFG for'crackme' function" {
	Node0x1e7f3f0[shape=record, label="  %3 = or i32 %1, %0"];
	Node0x1e7f460[shape=record, label="  %4 = xor i32 %1, %0"];
	Node0x1e7fb30[shape=record, label="  %5 = xor i32 %4, -1"];
	Node0x1e7fbd0[shape=record, label="  %6 = mul i32 %5, 5"];
	Node0x1e7fc40[shape=record, label="  %7 = and i32 %1, %0"];
	Node0x1e7fce0[shape=record, label="  %8 = shl i32 %4, 1"];
	Node0x1e7fd50[shape=record, label="  %9 = xor i32 %3, -1"];
	Node0x1e7fdc0[shape=record, label="  %10 = mul i32 %9, 5"];
	Node0x1e7fe30[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x1e7fed0[shape=record, label="  %12 = shl i32 %7, 2"];
	Node0x1e7ff40[shape=record, label="  %13 = sub i32 1, %3"];
	Node0x1e7ffb0[shape=record, label="  %14 = add i32 %13, %7"];
	Node0x1e80020[shape=record, label="  %15 = add i32 %14, %6"];
	Node0x1e80090[shape=record, label="  %16 = add i32 %15, %8"];
	Node0x1e80100[shape=record, label="  %17 = add i32 %16, %11"];
	Node0x1e80170[shape=record, label="  %18 = sub i32 %17, %12"];
	Node0x1e801e0[shape=record, label="  %19 = icmp eq i32 %3, %18"];
	Node0x1e20268[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e80680[shape=record, label="  %21 = tail call i32 @puts(i8* nonnull dereferenceable(1) %20)"];
	Node0x1e806d0[shape=record, label="  ret void"];
	Node0x1e7f3f0 -> Node0x1e7f460;
	Node0x1e7f460 -> Node0x1e7fb30;
	Node0x1e7fb30 -> Node0x1e7fbd0;
	Node0x1e7fbd0 -> Node0x1e7fc40;
	Node0x1e7fc40 -> Node0x1e7fce0;
	Node0x1e7fce0 -> Node0x1e7fd50;
	Node0x1e7fd50 -> Node0x1e7fdc0;
	Node0x1e7fdc0 -> Node0x1e7fe30;
	Node0x1e7fe30 -> Node0x1e7fed0;
	Node0x1e7fed0 -> Node0x1e7ff40;
	Node0x1e7ff40 -> Node0x1e7ffb0;
	Node0x1e7ffb0 -> Node0x1e80020;
	Node0x1e80020 -> Node0x1e80090;
	Node0x1e80090 -> Node0x1e80100;
	Node0x1e80100 -> Node0x1e80170;
	Node0x1e80170 -> Node0x1e801e0;
	Node0x1e801e0 -> Node0x1e20268;
	Node0x1e20268 -> Node0x1e80680;
	Node0x1e80680 -> Node0x1e806d0;
edge [color=red]
	Node0x1e7f460 -> Node0x1e7fb30;
	Node0x1e7fb30 -> Node0x1e7fbd0;
	Node0x1e7f460 -> Node0x1e7fce0;
	Node0x1e7f3f0 -> Node0x1e7fd50;
	Node0x1e7fd50 -> Node0x1e7fdc0;
	Node0x1e7fdc0 -> Node0x1e7fe30;
	Node0x1e7fc40 -> Node0x1e7fed0;
	Node0x1e7f3f0 -> Node0x1e7ff40;
	Node0x1e7ff40 -> Node0x1e7ffb0;
	Node0x1e7fc40 -> Node0x1e7ffb0;
	Node0x1e7ffb0 -> Node0x1e80020;
	Node0x1e7fbd0 -> Node0x1e80020;
	Node0x1e80020 -> Node0x1e80090;
	Node0x1e7fce0 -> Node0x1e80090;
	Node0x1e80090 -> Node0x1e80100;
	Node0x1e7fe30 -> Node0x1e80100;
	Node0x1e80100 -> Node0x1e80170;
	Node0x1e7fed0 -> Node0x1e80170;
	Node0x1e7f3f0 -> Node0x1e801e0;
	Node0x1e80170 -> Node0x1e801e0;
	Node0x1e801e0 -> Node0x1e20268;
	Node0x1e20268 -> Node0x1e80680;
}
