digraph "DFG for'main' function" {
	Node0x1e80898[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e80918[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e809a8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e80e08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e80ee8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e81008[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e81240[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e812f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e82268[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e828f0[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x1e82960[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x1e829d0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1e82a40[shape=record, label="  %11 = mul i32 %10, 5"];
	Node0x1e82ab0[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x1e82b20[shape=record, label="  %13 = shl i32 %9, 1"];
	Node0x1e82b90[shape=record, label="  %14 = xor i32 %8, -1"];
	Node0x1e82c00[shape=record, label="  %15 = mul i32 %14, 5"];
	Node0x1e82c70[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x1e82ce0[shape=record, label="  %17 = shl i32 %12, 2"];
	Node0x1e82d50[shape=record, label="  %18 = sub i32 1, %8"];
	Node0x1e82dc0[shape=record, label="  %19 = add i32 %18, %12"];
	Node0x1e82e30[shape=record, label="  %20 = add i32 %19, %11"];
	Node0x1e82ea0[shape=record, label="  %21 = add i32 %20, %13"];
	Node0x1e82f10[shape=record, label="  %22 = add i32 %21, %16"];
	Node0x1e82f80[shape=record, label="  %23 = sub i32 %22, %17"];
	Node0x1e82ff0[shape=record, label="  %24 = icmp eq i32 %8, %23"];
	Node0x1e219d8[shape=record, label="  %25 = select i1 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e83080[shape=record, label="  %26 = call i32 @puts(i8* nonnull dereferenceable(1) %25) #5"];
	Node0x1e832d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e83438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e834f8[shape=record, label="  ret i32 0"];
	Node0x1e80898 -> Node0x1e80918;
	Node0x1e80918 -> Node0x1e809a8;
	Node0x1e809a8 -> Node0x1e80e08;
	Node0x1e80e08 -> Node0x1e80ee8;
	Node0x1e80ee8 -> Node0x1e81008;
	Node0x1e81008 -> Node0x1e81240;
	Node0x1e81240 -> Node0x1e812f8;
	Node0x1e812f8 -> Node0x1e82268;
	Node0x1e82268 -> Node0x1e828f0;
	Node0x1e828f0 -> Node0x1e82960;
	Node0x1e82960 -> Node0x1e829d0;
	Node0x1e829d0 -> Node0x1e82a40;
	Node0x1e82a40 -> Node0x1e82ab0;
	Node0x1e82ab0 -> Node0x1e82b20;
	Node0x1e82b20 -> Node0x1e82b90;
	Node0x1e82b90 -> Node0x1e82c00;
	Node0x1e82c00 -> Node0x1e82c70;
	Node0x1e82c70 -> Node0x1e82ce0;
	Node0x1e82ce0 -> Node0x1e82d50;
	Node0x1e82d50 -> Node0x1e82dc0;
	Node0x1e82dc0 -> Node0x1e82e30;
	Node0x1e82e30 -> Node0x1e82ea0;
	Node0x1e82ea0 -> Node0x1e82f10;
	Node0x1e82f10 -> Node0x1e82f80;
	Node0x1e82f80 -> Node0x1e82ff0;
	Node0x1e82ff0 -> Node0x1e219d8;
	Node0x1e219d8 -> Node0x1e83080;
	Node0x1e83080 -> Node0x1e832d8;
	Node0x1e832d8 -> Node0x1e83438;
	Node0x1e83438 -> Node0x1e834f8;
edge [color=red]
	Node0x1e80898 -> Node0x1e809a8;
	Node0x1e809a8 -> Node0x1e80e08;
	Node0x1e80918 -> Node0x1e80ee8;
	Node0x1e80ee8 -> Node0x1e81008;
	Node0x1e80898 -> Node0x1e81240;
	Node0x1e80918 -> Node0x1e81240;
	Node0x1e80898 -> Node0x1e812f8;
	Node0x1e80918 -> Node0x1e82268;
	Node0x1e82268 -> Node0x1e828f0;
	Node0x1e812f8 -> Node0x1e828f0;
	Node0x1e82268 -> Node0x1e82960;
	Node0x1e812f8 -> Node0x1e82960;
	Node0x1e82960 -> Node0x1e829d0;
	Node0x1e829d0 -> Node0x1e82a40;
	Node0x1e82268 -> Node0x1e82ab0;
	Node0x1e812f8 -> Node0x1e82ab0;
	Node0x1e82960 -> Node0x1e82b20;
	Node0x1e828f0 -> Node0x1e82b90;
	Node0x1e82b90 -> Node0x1e82c00;
	Node0x1e82c00 -> Node0x1e82c70;
	Node0x1e82ab0 -> Node0x1e82ce0;
	Node0x1e828f0 -> Node0x1e82d50;
	Node0x1e82d50 -> Node0x1e82dc0;
	Node0x1e82ab0 -> Node0x1e82dc0;
	Node0x1e82dc0 -> Node0x1e82e30;
	Node0x1e82a40 -> Node0x1e82e30;
	Node0x1e82e30 -> Node0x1e82ea0;
	Node0x1e82b20 -> Node0x1e82ea0;
	Node0x1e82ea0 -> Node0x1e82f10;
	Node0x1e82c70 -> Node0x1e82f10;
	Node0x1e82f10 -> Node0x1e82f80;
	Node0x1e82ce0 -> Node0x1e82f80;
	Node0x1e828f0 -> Node0x1e82ff0;
	Node0x1e82f80 -> Node0x1e82ff0;
	Node0x1e82ff0 -> Node0x1e219d8;
	Node0x1e219d8 -> Node0x1e83080;
	Node0x1e80ee8 -> Node0x1e832d8;
	Node0x1e809a8 -> Node0x1e83438;
}
