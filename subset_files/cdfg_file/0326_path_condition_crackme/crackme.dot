digraph "DFG for'crackme' function" {
	Node0xa42a90[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0xa42b00[shape=record, label="  %4 = and i32 %3, %0"];
	Node0xa42bc0[shape=record, label="  %5 = add i32 %4, 1"];
	Node0xa42c30[shape=record, label="  %6 = or i32 %1, %0"];
	Node0xa42ca0[shape=record, label="  %7 = shl i32 %3, 1"];
	Node0xa42d10[shape=record, label="  %8 = shl i32 %0, 1"];
	Node0xa42d80[shape=record, label="  %9 = or i32 %3, %0"];
	Node0xa42df0[shape=record, label="  %10 = xor i32 %6, -1"];
	Node0xa42e90[shape=record, label="  %11 = mul i32 %10, 3"];
	Node0xa42f00[shape=record, label="  %12 = and i32 %1, %0"];
	Node0xa42f70[shape=record, label="  %13 = sub i32 1, %1"];
	Node0xa42fe0[shape=record, label="  %14 = add i32 %13, %8"];
	Node0xa43050[shape=record, label="  %15 = sub i32 %14, %7"];
	Node0xa430c0[shape=record, label="  %16 = add i32 %15, %6"];
	Node0xa43130[shape=record, label="  %17 = sub i32 %16, %9"];
	Node0xa431a0[shape=record, label="  %18 = add i32 %17, %4"];
	Node0xa43210[shape=record, label="  %19 = sub i32 %18, %12"];
	Node0xa43280[shape=record, label="  %20 = add i32 %19, %11"];
	Node0xa432f0[shape=record, label="  %21 = icmp eq i32 %5, %20"];
	Node0x9e3268[shape=record, label="  %22 = select i1 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa43790[shape=record, label="  %23 = tail call i32 @puts(i8* nonnull dereferenceable(1) %22)"];
	Node0xa437e0[shape=record, label="  ret void"];
	Node0xa42a90 -> Node0xa42b00;
	Node0xa42b00 -> Node0xa42bc0;
	Node0xa42bc0 -> Node0xa42c30;
	Node0xa42c30 -> Node0xa42ca0;
	Node0xa42ca0 -> Node0xa42d10;
	Node0xa42d10 -> Node0xa42d80;
	Node0xa42d80 -> Node0xa42df0;
	Node0xa42df0 -> Node0xa42e90;
	Node0xa42e90 -> Node0xa42f00;
	Node0xa42f00 -> Node0xa42f70;
	Node0xa42f70 -> Node0xa42fe0;
	Node0xa42fe0 -> Node0xa43050;
	Node0xa43050 -> Node0xa430c0;
	Node0xa430c0 -> Node0xa43130;
	Node0xa43130 -> Node0xa431a0;
	Node0xa431a0 -> Node0xa43210;
	Node0xa43210 -> Node0xa43280;
	Node0xa43280 -> Node0xa432f0;
	Node0xa432f0 -> Node0x9e3268;
	Node0x9e3268 -> Node0xa43790;
	Node0xa43790 -> Node0xa437e0;
edge [color=red]
	Node0xa42a90 -> Node0xa42b00;
	Node0xa42b00 -> Node0xa42bc0;
	Node0xa42a90 -> Node0xa42ca0;
	Node0xa42a90 -> Node0xa42d80;
	Node0xa42c30 -> Node0xa42df0;
	Node0xa42df0 -> Node0xa42e90;
	Node0xa42f70 -> Node0xa42fe0;
	Node0xa42d10 -> Node0xa42fe0;
	Node0xa42fe0 -> Node0xa43050;
	Node0xa42ca0 -> Node0xa43050;
	Node0xa43050 -> Node0xa430c0;
	Node0xa42c30 -> Node0xa430c0;
	Node0xa430c0 -> Node0xa43130;
	Node0xa42d80 -> Node0xa43130;
	Node0xa43130 -> Node0xa431a0;
	Node0xa42b00 -> Node0xa431a0;
	Node0xa431a0 -> Node0xa43210;
	Node0xa42f00 -> Node0xa43210;
	Node0xa43210 -> Node0xa43280;
	Node0xa42e90 -> Node0xa43280;
	Node0xa42bc0 -> Node0xa432f0;
	Node0xa43280 -> Node0xa432f0;
	Node0xa432f0 -> Node0x9e3268;
	Node0x9e3268 -> Node0xa43790;
}
