digraph "DFG for'main' function" {
	Node0x13f3638[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x13f36b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x13f3748[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x13f37a8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x13f3c28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x13f3d08[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x13f3e08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13f3ec8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x13f3f78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13f41d8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x13f4298[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x13f5208[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x13f5878[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x13f5970[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x13f5b78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13f5cd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13f5de8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x13f5ea8[shape=record, label="  ret i32 0"];
	Node0x13f3638 -> Node0x13f36b8;
	Node0x13f36b8 -> Node0x13f3748;
	Node0x13f3748 -> Node0x13f37a8;
	Node0x13f37a8 -> Node0x13f3c28;
	Node0x13f3c28 -> Node0x13f3d08;
	Node0x13f3d08 -> Node0x13f3e08;
	Node0x13f3e08 -> Node0x13f3ec8;
	Node0x13f3ec8 -> Node0x13f3f78;
	Node0x13f3f78 -> Node0x13f41d8;
	Node0x13f41d8 -> Node0x13f4298;
	Node0x13f4298 -> Node0x13f5208;
	Node0x13f5208 -> Node0x13f5878;
	Node0x13f5878 -> Node0x13f5970;
	Node0x13f5970 -> Node0x13f5b78;
	Node0x13f5b78 -> Node0x13f5cd8;
	Node0x13f5cd8 -> Node0x13f5de8;
	Node0x13f5de8 -> Node0x13f5ea8;
edge [color=red]
	Node0x13f3638 -> Node0x13f37a8;
	Node0x13f37a8 -> Node0x13f3c28;
	Node0x13f36b8 -> Node0x13f3d08;
	Node0x13f3d08 -> Node0x13f3e08;
	Node0x13f3748 -> Node0x13f3ec8;
	Node0x13f3ec8 -> Node0x13f3f78;
	Node0x13f3638 -> Node0x13f41d8;
	Node0x13f36b8 -> Node0x13f41d8;
	Node0x13f3748 -> Node0x13f41d8;
	Node0x13f3638 -> Node0x13f4298;
	Node0x13f36b8 -> Node0x13f5208;
	Node0x13f3748 -> Node0x13f5878;
	Node0x13f4298 -> Node0x13f5970;
	Node0x13f5208 -> Node0x13f5970;
	Node0x13f5878 -> Node0x13f5970;
	Node0x13f3ec8 -> Node0x13f5b78;
	Node0x13f3d08 -> Node0x13f5cd8;
	Node0x13f37a8 -> Node0x13f5de8;
}
