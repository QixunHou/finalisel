digraph "DFG for'crackme' function" {
	Node0x1a2fc70[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x1a2fd10[shape=record, label="  %4 = mul i32 %3, -2"];
	Node0x1a2fdd0[shape=record, label="  %5 = xor i32 %3, %0"];
	Node0x1a2fe40[shape=record, label="  %6 = and i32 %3, %0"];
	Node0x1a2feb0[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x1a2ff20[shape=record, label="  %8 = and i32 %1, %0"];
	Node0x1a2ff90[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1a30000[shape=record, label="  %10 = shl i32 %0, 1"];
	Node0x1a30070[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x1a300e0[shape=record, label="  %12 = or i32 %1, %0"];
	Node0x1a30150[shape=record, label="  %13 = or i32 %3, %0"];
	Node0x1a301c0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1a30230[shape=record, label="  %15 = xor i32 %13, -1"];
	Node0x1a302a0[shape=record, label="  %16 = shl i32 %6, 1"];
	Node0x1a30340[shape=record, label="  %17 = shl i32 %8, 2"];
	Node0x1a303b0[shape=record, label="  %18 = add i32 %15, %14"];
	Node0x1a30450[shape=record, label="  %19 = mul i32 %18, -6"];
	Node0x1a304c0[shape=record, label="  %20 = sub i32 %0, %1"];
	Node0x1a30530[shape=record, label="  %21 = add i32 %20, %5"];
	Node0x1a305a0[shape=record, label="  %22 = add i32 %21, %4"];
	Node0x1a30610[shape=record, label="  %23 = add i32 %22, %7"];
	Node0x1a30680[shape=record, label="  %24 = add i32 %23, %9"];
	Node0x1a306f0[shape=record, label="  %25 = add i32 %24, %11"];
	Node0x1a30760[shape=record, label="  %26 = sub i32 %25, %12"];
	Node0x1a307d0[shape=record, label="  %27 = sub i32 %26, %13"];
	Node0x1a30840[shape=record, label="  %28 = sub i32 %27, %16"];
	Node0x1a308b0[shape=record, label="  %29 = sub i32 %28, %17"];
	Node0x1a30920[shape=record, label="  %30 = add i32 %29, %19"];
	Node0x1a309c0[shape=record, label="  %31 = icmp eq i32 %30, 4"];
	Node0x19d0268[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a31070[shape=record, label="  %33 = tail call i32 @puts(i8* nonnull dereferenceable(1) %32)"];
	Node0x1a310c0[shape=record, label="  ret void"];
	Node0x1a2fc70 -> Node0x1a2fd10;
	Node0x1a2fd10 -> Node0x1a2fdd0;
	Node0x1a2fdd0 -> Node0x1a2fe40;
	Node0x1a2fe40 -> Node0x1a2feb0;
	Node0x1a2feb0 -> Node0x1a2ff20;
	Node0x1a2ff20 -> Node0x1a2ff90;
	Node0x1a2ff90 -> Node0x1a30000;
	Node0x1a30000 -> Node0x1a30070;
	Node0x1a30070 -> Node0x1a300e0;
	Node0x1a300e0 -> Node0x1a30150;
	Node0x1a30150 -> Node0x1a301c0;
	Node0x1a301c0 -> Node0x1a30230;
	Node0x1a30230 -> Node0x1a302a0;
	Node0x1a302a0 -> Node0x1a30340;
	Node0x1a30340 -> Node0x1a303b0;
	Node0x1a303b0 -> Node0x1a30450;
	Node0x1a30450 -> Node0x1a304c0;
	Node0x1a304c0 -> Node0x1a30530;
	Node0x1a30530 -> Node0x1a305a0;
	Node0x1a305a0 -> Node0x1a30610;
	Node0x1a30610 -> Node0x1a30680;
	Node0x1a30680 -> Node0x1a306f0;
	Node0x1a306f0 -> Node0x1a30760;
	Node0x1a30760 -> Node0x1a307d0;
	Node0x1a307d0 -> Node0x1a30840;
	Node0x1a30840 -> Node0x1a308b0;
	Node0x1a308b0 -> Node0x1a30920;
	Node0x1a30920 -> Node0x1a309c0;
	Node0x1a309c0 -> Node0x19d0268;
	Node0x19d0268 -> Node0x1a31070;
	Node0x1a31070 -> Node0x1a310c0;
edge [color=red]
	Node0x1a2fc70 -> Node0x1a2fd10;
	Node0x1a2fc70 -> Node0x1a2fdd0;
	Node0x1a2fc70 -> Node0x1a2fe40;
	Node0x1a2fe40 -> Node0x1a2feb0;
	Node0x1a2ff20 -> Node0x1a2ff90;
	Node0x1a30000 -> Node0x1a30070;
	Node0x1a2fc70 -> Node0x1a30150;
	Node0x1a300e0 -> Node0x1a301c0;
	Node0x1a30150 -> Node0x1a30230;
	Node0x1a2fe40 -> Node0x1a302a0;
	Node0x1a2ff20 -> Node0x1a30340;
	Node0x1a30230 -> Node0x1a303b0;
	Node0x1a301c0 -> Node0x1a303b0;
	Node0x1a303b0 -> Node0x1a30450;
	Node0x1a304c0 -> Node0x1a30530;
	Node0x1a2fdd0 -> Node0x1a30530;
	Node0x1a30530 -> Node0x1a305a0;
	Node0x1a2fd10 -> Node0x1a305a0;
	Node0x1a305a0 -> Node0x1a30610;
	Node0x1a2feb0 -> Node0x1a30610;
	Node0x1a30610 -> Node0x1a30680;
	Node0x1a2ff90 -> Node0x1a30680;
	Node0x1a30680 -> Node0x1a306f0;
	Node0x1a30070 -> Node0x1a306f0;
	Node0x1a306f0 -> Node0x1a30760;
	Node0x1a300e0 -> Node0x1a30760;
	Node0x1a30760 -> Node0x1a307d0;
	Node0x1a30150 -> Node0x1a307d0;
	Node0x1a307d0 -> Node0x1a30840;
	Node0x1a302a0 -> Node0x1a30840;
	Node0x1a30840 -> Node0x1a308b0;
	Node0x1a30340 -> Node0x1a308b0;
	Node0x1a308b0 -> Node0x1a30920;
	Node0x1a30450 -> Node0x1a30920;
	Node0x1a30920 -> Node0x1a309c0;
	Node0x1a309c0 -> Node0x19d0268;
	Node0x19d0268 -> Node0x1a31070;
}
