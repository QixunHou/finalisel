; ModuleID = '../.././c_source_file/0700_path_condition_crackme.c'
source_filename = "../.././c_source_file/0700_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %1, -1
  %5 = or i32 %4, %0
  %6 = xor i32 %2, %1
  %7 = xor i32 %6, -1
  %8 = and i32 %5, %7
  %9 = xor i32 %2, -1
  %10 = or i32 %9, %1
  %11 = and i32 %10, %0
  %12 = add i32 %8, %11
  %13 = sub i32 0, %12
  %14 = or i32 %9, %0
  %15 = and i32 %14, %1
  %16 = xor i32 %5, -1
  %17 = or i32 %16, %2
  %18 = shl i32 %17, 1
  %19 = or i32 %2, %1
  %20 = xor i32 %19, -1
  %21 = xor i32 %20, %0
  %22 = or i32 %1, %0
  %23 = xor i32 %2, %0
  %24 = and i32 %23, %22
  %25 = or i32 %2, %0
  %26 = xor i32 %1, %0
  %27 = and i32 %25, %26
  %28 = xor i32 %26, -1
  %29 = xor i32 %23, -1
  %30 = and i32 %29, %28
  %31 = and i32 %7, %0
  %32 = or i32 %29, %4
  %33 = xor i32 %0, -1
  %34 = or i32 %7, %33
  %35 = and i32 %1, %0
  %36 = xor i32 %10, -1
  %37 = or i32 %35, %36
  %38 = and i32 %2, %0
  %39 = xor i32 %38, -1
  %40 = xor i32 %39, %1
  %41 = and i32 %4, %2
  %42 = and i32 %41, %0
  %43 = or i32 %4, %2
  %44 = and i32 %43, %33
  %45 = xor i32 %44, -1
  %46 = xor i32 %42, %45
  %47 = and i32 %4, %0
  %48 = or i32 %47, %9
  %49 = and i32 %2, %1
  %50 = and i32 %49, %0
  %51 = and i32 %19, %33
  %52 = or i32 %50, %51
  %53 = and i32 %49, %33
  %54 = and i32 %6, %0
  %55 = or i32 %53, %54
  %56 = xor i32 %54, 2147483647
  %57 = xor i32 %56, %53
  %58 = shl i32 %57, 1
  %59 = and i32 %9, %1
  %60 = xor i32 %59, -1
  %61 = xor i32 %47, %60
  %62 = and i32 %9, %0
  %63 = xor i32 %49, -1
  %64 = xor i32 %62, %63
  %65 = or i32 %38, %16
  %66 = or i32 %47, %29
  %67 = xor i32 %35, %2
  %68 = or i32 %23, %35
  %69 = xor i32 %35, -1
  %70 = and i32 %6, %69
  %71 = and i32 %6, %5
  %72 = and i32 %7, %69
  %73 = xor i32 %14, -1
  %74 = or i32 %73, %4
  %75 = xor i32 %47, %63
  %76 = and i32 %60, %33
  %77 = shl i32 %76, 2
  %78 = xor i32 %0, 2147483647
  %79 = xor i32 %78, %43
  %80 = xor i32 %79, %42
  %81 = xor i32 %22, -1
  %82 = or i32 %38, %81
  %83 = or i32 %7, %0
  %84 = and i32 %22, %29
  %85 = xor i32 %62, -1
  %86 = xor i32 %85, %1
  %87 = or i32 %62, %1
  %88 = and i32 %26, %29
  %89 = and i32 %14, %4
  %90 = or i32 %60, %33
  %91 = and i32 %25, %4
  %92 = or i32 %35, %20
  %93 = or i32 %38, %28
  %94 = and i32 %63, %33
  %95 = or i32 %29, %81
  %96 = and i32 %5, %9
  %97 = and i32 %6, %33
  %98 = add i32 %23, 1
  %99 = xor i32 %38, %5
  %100 = shl i32 %99, 1
  %101 = or i32 %35, %9
  %102 = shl i32 %2, 1
  %103 = xor i32 %25, %1
  %104 = xor i32 %62, %1
  %105 = shl i32 %104, 1
  %106 = or i32 %29, %28
  %107 = or i32 %10, %0
  %108 = or i32 %36, %0
  %109 = or i32 %6, %0
  %110 = xor i32 %109, -1
  %111 = or i32 %42, %110
  %112 = xor i32 %16, %2
  %113 = or i32 %19, %33
  %114 = or i32 %26, %2
  %115 = xor i32 %73, %1
  %116 = or i32 %7, %16
  %117 = and i32 %63, %0
  %118 = and i32 %19, %0
  %119 = xor i32 %118, -1
  %120 = xor i32 %53, %119
  %121 = and i32 %5, %29
  %122 = or i32 %38, %1
  %123 = or i32 %36, %33
  %124 = xor i32 %62, %10
  %125 = or i32 %49, %33
  %126 = and i32 %29, %1
  %127 = or i32 %6, %47
  %128 = xor i32 %47, -1
  %129 = xor i32 %25, -1
  %130 = xor i32 %129, %1
  %131 = or i32 %42, %44
  %132 = and i32 %39, %28
  %133 = and i32 %85, %4
  %134 = or i32 %35, %2
  %135 = or i32 %29, %1
  %136 = and i32 %26, %2
  %137 = shl i32 %136, 1
  %138 = xor i32 %19, %0
  %139 = or i32 %35, %129
  %140 = and i32 %26, %39
  %141 = or i32 %23, %1
  %142 = add i32 %25, 1
  %143 = or i32 %23, %4
  %144 = and i32 %29, %128
  %145 = and i32 %23, %1
  %146 = and i32 %39, %1
  %147 = or i32 %38, %59
  %148 = and i32 %6, %128
  %149 = xor i32 %50, -1
  %150 = xor i32 %138, %149
  %151 = or i32 %63, %0
  %152 = or i32 %19, %0
  %153 = or i32 %23, %81
  %154 = add i32 %47, 1
  %155 = xor i32 %60, %0
  %156 = or i32 %81, %2
  %157 = xor i32 %25, %35
  %158 = add i32 %14, 1
  %159 = and i32 %22, %9
  %160 = or i32 %59, %0
  %161 = xor i32 %6, %0
  %162 = xor i32 %161, -1
  %163 = xor i32 %42, %162
  %164 = or i32 %7, %81
  %165 = and i32 %5, %2
  %166 = xor i32 %81, %2
  %167 = add i32 %22, 1
  %168 = xor i32 %47, %2
  %169 = or i32 %62, %28
  %170 = and i32 %23, %5
  %171 = xor i32 %128, %2
  %172 = xor i32 %38, %22
  %173 = or i32 %6, %16
  %174 = shl i32 %173, 1
  %175 = or i32 %47, %7
  %176 = or i32 %26, %9
  %177 = shl i32 %176, 2
  %178 = xor i32 %38, %1
  %179 = and i32 %22, %7
  %180 = and i32 %28, %2
  %181 = xor i32 %22, %2
  %182 = and i32 %41, %33
  %183 = or i32 %6, %33
  %184 = xor i32 %183, 2147483647
  %185 = or i32 %184, %182
  %186 = xor i32 %97, %149
  %187 = and i32 %60, %0
  %188 = or i32 %23, %28
  %189 = shl i32 %7, 1
  %190 = shl i32 %63, 1
  %191 = or i32 %62, %49
  %192 = or i32 %59, %47
  %193 = xor i32 %50, %161
  %194 = xor i32 %19, %35
  %195 = or i32 %35, %73
  %196 = or i32 %62, %26
  %197 = xor i32 %10, %35
  %198 = and i32 %23, %26
  %199 = or i32 %63, %33
  %200 = xor i32 %36, %0
  %201 = or i32 %53, %118
  %202 = or i32 %29, %16
  %203 = and i32 %43, %0
  %204 = or i32 %182, %203
  %205 = or i32 %10, %33
  %206 = xor i32 %42, %109
  %207 = shl i32 %206, 1
  %208 = or i32 %23, %26
  %209 = or i32 %38, %26
  %210 = or i32 %28, %2
  %211 = or i32 %9, %81
  %212 = shl i32 %9, 1
  %213 = or i32 %60, %0
  %214 = and i32 %23, %4
  %215 = shl i32 %214, 1
  %216 = and i32 %26, %9
  %217 = or i32 %26, %29
  %218 = xor i32 %203, -1
  %219 = xor i32 %182, %218
  %220 = or i32 %49, %0
  %221 = or i32 %20, %33
  %222 = or i32 %6, %81
  %223 = shl i32 %0, 1
  %224 = or i32 %38, %20
  %225 = xor i32 %69, %2
  %226 = shl i32 %225, 2
  %227 = and i32 %6, %22
  %228 = or i32 %23, %47
  %229 = shl i32 %228, 1
  %230 = or i32 %23, %16
  %231 = shl i32 %38, 1
  %232 = xor i32 %49, %0
  %233 = or i32 %26, %73
  %234 = or i32 %129, %1
  %235 = and i32 %23, %28
  %236 = and i32 %85, %1
  %237 = or i32 %62, %4
  %238 = xor i32 %51, %149
  %239 = or i32 %35, %7
  %240 = or i32 %73, %1
  %241 = xor i32 %5, %2
  %242 = shl i32 %241, 1
  %243 = or i32 %26, %129
  %244 = or i32 %42, %161
  %245 = or i32 %73, %28
  %246 = or i32 %6, %35
  %247 = xor i32 %63, %0
  %248 = shl i32 %247, 1
  %249 = or i32 %50, %97
  %250 = shl i32 %249, 1
  %251 = and i32 %7, %128
  %252 = or i32 %35, %29
  %253 = xor i32 %182, %183
  %254 = xor i32 %14, %1
  %255 = or i32 %38, %4
  %256 = or i32 %20, %0
  %257 = xor i32 %7, %0
  %258 = shl i32 %257, 1
  %259 = or i32 %129, %4
  %260 = shl i32 %259, 1
  %261 = add i32 %19, 1
  %262 = xor i32 %14, %35
  %263 = and i32 %29, %4
  %264 = and i32 %9, %128
  %265 = shl i32 %28, 1
  %266 = or i32 %59, %33
  %267 = and i32 %14, %28
  %268 = shl i32 %267, 2
  %269 = xor i32 %59, %0
  %270 = and i32 %25, %1
  %271 = and i32 %29, %69
  %272 = and i32 %14, %26
  %273 = and i32 %25, %28
  %274 = xor i32 %38, %60
  %275 = and i32 %23, %128
  %276 = and i32 %23, %69
  %277 = shl i32 %109, 1
  %278 = and i32 %26, %85
  %279 = or i32 %49, %47
  %280 = or i32 %50, %162
  %281 = and i32 %69, %2
  %282 = xor i32 %10, %0
  %283 = and i32 %85, %28
  %284 = or i32 %62, %36
  %285 = and i32 %9, %28
  %286 = and i32 %20, %33
  %287 = mul i32 %286, -10
  %288 = and i32 %59, %33
  %289 = mul i32 %288, 15
  %290 = and i32 %20, %0
  %291 = and i32 %59, %0
  %292 = and i32 %36, %33
  %293 = and i32 %36, %0
  %294 = mul i32 %293, -31
  %295 = mul i32 %50, -6
  %296 = add i32 %181, %210
  %297 = add i32 %296, %168
  %298 = add i32 %297, %165
  %299 = add i32 %298, %159
  %300 = add i32 %48, %166
  %301 = sub i32 %300, %292
  %302 = add i32 %301, %53
  %303 = sub i32 %302, %291
  %304 = sub i32 %303, %125
  %305 = mul i32 %304, 5
  %306 = add i32 %143, %60
  %307 = shl i32 %306, 2
  %308 = add i32 %299, %62
  %309 = add i32 %308, %262
  %310 = add i32 %309, %235
  %311 = add i32 %310, %234
  %312 = add i32 %311, %209
  %313 = add i32 %312, %202
  %314 = add i32 %313, %153
  %315 = add i32 %314, %139
  %316 = add i32 %315, %130
  %317 = add i32 %316, %123
  %318 = add i32 %317, %122
  %319 = add i32 %318, %116
  %320 = add i32 %319, %91
  %321 = add i32 %320, %72
  %322 = add i32 %321, %65
  %323 = add i32 %322, %37
  %324 = add i32 %323, %34
  %325 = add i32 %324, %244
  %326 = add i32 %325, %80
  %327 = add i32 %326, %185
  %328 = shl i32 %327, 1
  %329 = sub i32 %48, %146
  %330 = add i32 %329, %147
  %331 = mul i32 %330, 3
  %332 = add i32 %4, %33
  %333 = sub i32 %332, %1
  %334 = sub i32 %333, %223
  %335 = add i32 %334, %154
  %336 = add i32 %335, %47
  %337 = add i32 %336, %167
  %338 = add i32 %337, %67
  %339 = sub i32 %338, %96
  %340 = add i32 %339, %98
  %341 = sub i32 %340, %101
  %342 = sub i32 %341, %102
  %343 = add i32 %342, %112
  %344 = add i32 %343, %114
  %345 = add i32 %344, %14
  %346 = add i32 %345, %39
  %347 = add i32 %346, %134
  %348 = add i32 %347, %142
  %349 = sub i32 %348, %49
  %350 = add i32 %349, %156
  %351 = add i32 %350, %158
  %352 = add i32 %351, %171
  %353 = add i32 %352, %180
  %354 = sub i32 %353, %23
  %355 = sub i32 %354, %6
  %356 = add i32 %355, %211
  %357 = sub i32 %356, %25
  %358 = sub i32 %357, %212
  %359 = sub i32 %358, %216
  %360 = sub i32 %359, %59
  %361 = add i32 %360, %261
  %362 = add i32 %361, %264
  %363 = sub i32 %362, %265
  %364 = add i32 %363, %19
  %365 = add i32 %364, %281
  %366 = add i32 %365, %285
  %367 = sub i32 %366, %18
  %368 = add i32 %367, %15
  %369 = add i32 %368, %21
  %370 = add i32 %369, %24
  %371 = sub i32 %370, %27
  %372 = sub i32 %371, %30
  %373 = add i32 %372, %31
  %374 = add i32 %373, %32
  %375 = add i32 %374, %40
  %376 = add i32 %375, %61
  %377 = sub i32 %376, %64
  %378 = sub i32 %377, %66
  %379 = sub i32 %378, %68
  %380 = sub i32 %379, %70
  %381 = add i32 %380, %71
  %382 = sub i32 %381, %74
  %383 = sub i32 %382, %75
  %384 = sub i32 %383, %82
  %385 = add i32 %384, %83
  %386 = add i32 %385, %84
  %387 = add i32 %386, %86
  %388 = sub i32 %387, %87
  %389 = sub i32 %388, %88
  %390 = add i32 %389, %89
  %391 = sub i32 %390, %90
  %392 = add i32 %391, %92
  %393 = add i32 %392, %93
  %394 = add i32 %393, %94
  %395 = sub i32 %394, %95
  %396 = sub i32 %395, %97
  %397 = sub i32 %396, %103
  %398 = add i32 %397, %106
  %399 = sub i32 %398, %107
  %400 = add i32 %399, %108
  %401 = add i32 %400, %113
  %402 = add i32 %401, %115
  %403 = add i32 %402, %117
  %404 = add i32 %403, %121
  %405 = sub i32 %404, %124
  %406 = sub i32 %405, %126
  %407 = add i32 %406, %127
  %408 = add i32 %407, %54
  %409 = sub i32 %408, %132
  %410 = add i32 %409, %133
  %411 = sub i32 %410, %135
  %412 = sub i32 %411, %137
  %413 = sub i32 %412, %138
  %414 = sub i32 %413, %140
  %415 = sub i32 %414, %141
  %416 = sub i32 %415, %144
  %417 = sub i32 %416, %145
  %418 = add i32 %417, %51
  %419 = sub i32 %418, %148
  %420 = add i32 %419, %151
  %421 = add i32 %420, %152
  %422 = add i32 %421, %155
  %423 = sub i32 %422, %157
  %424 = sub i32 %423, %160
  %425 = add i32 %424, %164
  %426 = add i32 %425, %169
  %427 = sub i32 %426, %170
  %428 = sub i32 %427, %172
  %429 = sub i32 %428, %175
  %430 = sub i32 %429, %177
  %431 = sub i32 %430, %178
  %432 = sub i32 %431, %179
  %433 = sub i32 %432, %187
  %434 = sub i32 %433, %188
  %435 = sub i32 %434, %189
  %436 = sub i32 %435, %190
  %437 = add i32 %436, %191
  %438 = sub i32 %437, %192
  %439 = add i32 %438, %194
  %440 = add i32 %439, %195
  %441 = sub i32 %440, %196
  %442 = sub i32 %441, %197
  %443 = add i32 %442, %198
  %444 = add i32 %443, %199
  %445 = sub i32 %444, %200
  %446 = add i32 %445, %205
  %447 = sub i32 %446, %118
  %448 = add i32 %447, %208
  %449 = add i32 %448, %213
  %450 = add i32 %449, %217
  %451 = sub i32 %450, %220
  %452 = sub i32 %451, %221
  %453 = sub i32 %452, %222
  %454 = add i32 %453, %224
  %455 = sub i32 %454, %226
  %456 = sub i32 %455, %227
  %457 = sub i32 %456, %230
  %458 = sub i32 %457, %231
  %459 = sub i32 %458, %232
  %460 = add i32 %459, %233
  %461 = sub i32 %460, %161
  %462 = sub i32 %461, %236
  %463 = add i32 %462, %237
  %464 = sub i32 %463, %239
  %465 = sub i32 %464, %240
  %466 = sub i32 %465, %242
  %467 = sub i32 %466, %243
  %468 = sub i32 %467, %245
  %469 = add i32 %468, %246
  %470 = sub i32 %469, %251
  %471 = sub i32 %470, %252
  %472 = add i32 %471, %254
  %473 = add i32 %472, %255
  %474 = sub i32 %473, %256
  %475 = add i32 %474, %263
  %476 = add i32 %475, %266
  %477 = add i32 %476, %269
  %478 = sub i32 %477, %270
  %479 = add i32 %478, %271
  %480 = sub i32 %479, %272
  %481 = add i32 %480, %273
  %482 = sub i32 %481, %274
  %483 = sub i32 %482, %275
  %484 = add i32 %483, %276
  %485 = sub i32 %484, %278
  %486 = sub i32 %485, %279
  %487 = sub i32 %486, %282
  %488 = add i32 %487, %283
  %489 = sub i32 %488, %284
  %490 = add i32 %489, %183
  %491 = sub i32 %490, %290
  %492 = sub i32 %491, %46
  %493 = sub i32 %492, %52
  %494 = add i32 %493, %55
  %495 = sub i32 %494, %77
  %496 = sub i32 %495, %100
  %497 = sub i32 %496, %105
  %498 = add i32 %497, %111
  %499 = sub i32 %498, %120
  %500 = add i32 %499, %131
  %501 = sub i32 %500, %150
  %502 = sub i32 %501, %163
  %503 = sub i32 %502, %174
  %504 = sub i32 %503, %186
  %505 = sub i32 %504, %193
  %506 = add i32 %505, %201
  %507 = sub i32 %506, %204
  %508 = sub i32 %507, %215
  %509 = add i32 %508, %219
  %510 = sub i32 %509, %229
  %511 = add i32 %510, %238
  %512 = sub i32 %511, %248
  %513 = add i32 %512, %253
  %514 = sub i32 %513, %258
  %515 = sub i32 %514, %260
  %516 = sub i32 %515, %268
  %517 = sub i32 %516, %277
  %518 = sub i32 %517, %280
  %519 = add i32 %518, %287
  %520 = add i32 %519, %289
  %521 = add i32 %520, %294
  %522 = add i32 %521, %295
  %523 = sub i32 %522, %207
  %524 = sub i32 %523, %250
  %525 = add i32 %524, %307
  %526 = sub i32 %525, %58
  %527 = add i32 %526, %331
  %528 = add i32 %527, %305
  %529 = add i32 %528, %328
  %530 = icmp eq i32 %529, %13
  %531 = select i1 %530, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %532 = tail call i32 @puts(i8* nonnull dereferenceable(1) %531)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
