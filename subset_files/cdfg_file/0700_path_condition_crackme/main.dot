digraph "DFG for'main' function" {
	Node0xd8f158[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd8f1d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd8f268[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xd8f2c8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xd96058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd96138[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xd96238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd962f8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xd963a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd96608[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xd966c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd97638[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd97ca8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xd97da0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xd97fa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd98108[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd98218[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd982d8[shape=record, label="  ret i32 0"];
	Node0xd8f158 -> Node0xd8f1d8;
	Node0xd8f1d8 -> Node0xd8f268;
	Node0xd8f268 -> Node0xd8f2c8;
	Node0xd8f2c8 -> Node0xd96058;
	Node0xd96058 -> Node0xd96138;
	Node0xd96138 -> Node0xd96238;
	Node0xd96238 -> Node0xd962f8;
	Node0xd962f8 -> Node0xd963a8;
	Node0xd963a8 -> Node0xd96608;
	Node0xd96608 -> Node0xd966c8;
	Node0xd966c8 -> Node0xd97638;
	Node0xd97638 -> Node0xd97ca8;
	Node0xd97ca8 -> Node0xd97da0;
	Node0xd97da0 -> Node0xd97fa8;
	Node0xd97fa8 -> Node0xd98108;
	Node0xd98108 -> Node0xd98218;
	Node0xd98218 -> Node0xd982d8;
edge [color=red]
	Node0xd8f158 -> Node0xd8f2c8;
	Node0xd8f2c8 -> Node0xd96058;
	Node0xd8f1d8 -> Node0xd96138;
	Node0xd96138 -> Node0xd96238;
	Node0xd8f268 -> Node0xd962f8;
	Node0xd962f8 -> Node0xd963a8;
	Node0xd8f158 -> Node0xd96608;
	Node0xd8f1d8 -> Node0xd96608;
	Node0xd8f268 -> Node0xd96608;
	Node0xd8f158 -> Node0xd966c8;
	Node0xd8f1d8 -> Node0xd97638;
	Node0xd8f268 -> Node0xd97ca8;
	Node0xd966c8 -> Node0xd97da0;
	Node0xd97638 -> Node0xd97da0;
	Node0xd97ca8 -> Node0xd97da0;
	Node0xd962f8 -> Node0xd97fa8;
	Node0xd96138 -> Node0xd98108;
	Node0xd8f2c8 -> Node0xd98218;
}
