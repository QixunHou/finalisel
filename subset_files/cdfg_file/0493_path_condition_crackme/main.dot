digraph "DFG for'main' function" {
	Node0xed4798[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xed4818[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xed48a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xed4908[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xed4d88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xed4e68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xed4f68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xed5028[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xed50d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xed5338[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xed53f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xed5558[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xed55b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xed81a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xed83a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xed8508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xed8618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xed86d8[shape=record, label="  ret i32 0"];
	Node0xed4798 -> Node0xed4818;
	Node0xed4818 -> Node0xed48a8;
	Node0xed48a8 -> Node0xed4908;
	Node0xed4908 -> Node0xed4d88;
	Node0xed4d88 -> Node0xed4e68;
	Node0xed4e68 -> Node0xed4f68;
	Node0xed4f68 -> Node0xed5028;
	Node0xed5028 -> Node0xed50d8;
	Node0xed50d8 -> Node0xed5338;
	Node0xed5338 -> Node0xed53f8;
	Node0xed53f8 -> Node0xed5558;
	Node0xed5558 -> Node0xed55b8;
	Node0xed55b8 -> Node0xed81a0;
	Node0xed81a0 -> Node0xed83a8;
	Node0xed83a8 -> Node0xed8508;
	Node0xed8508 -> Node0xed8618;
	Node0xed8618 -> Node0xed86d8;
edge [color=red]
	Node0xed4798 -> Node0xed4908;
	Node0xed4908 -> Node0xed4d88;
	Node0xed4818 -> Node0xed4e68;
	Node0xed4e68 -> Node0xed4f68;
	Node0xed48a8 -> Node0xed5028;
	Node0xed5028 -> Node0xed50d8;
	Node0xed4798 -> Node0xed5338;
	Node0xed4818 -> Node0xed5338;
	Node0xed48a8 -> Node0xed5338;
	Node0xed4798 -> Node0xed53f8;
	Node0xed4818 -> Node0xed5558;
	Node0xed48a8 -> Node0xed55b8;
	Node0xed53f8 -> Node0xed81a0;
	Node0xed5558 -> Node0xed81a0;
	Node0xed55b8 -> Node0xed81a0;
	Node0xed5028 -> Node0xed83a8;
	Node0xed4e68 -> Node0xed8508;
	Node0xed4908 -> Node0xed8618;
}
