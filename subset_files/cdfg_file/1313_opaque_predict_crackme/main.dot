digraph "DFG for'main' function" {
	Node0x1b119c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b11a48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b11ad8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b11b38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1b11be8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1b12018[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b120f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1b121f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b122b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1b12368[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b12428[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1b124d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b0ca80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1b126d8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b13648[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b13cb8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b13d18[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1b13d90[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1b13e00[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x1b13e70[shape=record, label="  %16 = shl i32 %10, 1"];
	Node0x1b13ee0[shape=record, label="  %17 = sub i32 %16, %15"];
	Node0x1b13f50[shape=record, label="  %18 = or i32 %12, %11"];
	Node0x1b13fc0[shape=record, label="  %19 = xor i32 %12, %11"];
	Node0x1b14030[shape=record, label="  %20 = and i32 %12, %11"];
	Node0x1b140a0[shape=record, label="  %21 = and i32 %11, %14"];
	Node0x1b14110[shape=record, label="  %22 = mul i32 %21, -7"];
	Node0x1b14180[shape=record, label="  %23 = mul i32 %20, -9"];
	Node0x1b141f0[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0x1b14260[shape=record, label="  %25 = or i32 %13, %24"];
	Node0x1b142d0[shape=record, label="  %26 = shl i32 %13, 1"];
	Node0x1b14340[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x1b143b0[shape=record, label="  %28 = or i32 %13, %10"];
	Node0x1b14420[shape=record, label="  %29 = shl i32 %28, 2"];
	Node0x1b14490[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x1b14500[shape=record, label="  %31 = add i32 %25, %11"];
	Node0x1b14570[shape=record, label="  %32 = add i32 %31, %30"];
	Node0x1b145e0[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x1b14650[shape=record, label="  %34 = sub i32 %15, %25"];
	Node0x1b146c0[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x1b14730[shape=record, label="  %36 = add i32 %18, 1"];
	Node0x1b147a0[shape=record, label="  %37 = add i32 %36, %28"];
	Node0x1b14810[shape=record, label="  %38 = mul i32 %37, 5"];
	Node0x1b14880[shape=record, label="  %39 = sub i32 %11, %19"];
	Node0x1b148f0[shape=record, label="  %40 = add i32 %39, %20"];
	Node0x1b14960[shape=record, label="  %41 = add i32 %40, %13"];
	Node0x1b149d0[shape=record, label="  %42 = add i32 %41, %22"];
	Node0x1b14a40[shape=record, label="  %43 = add i32 %42, %23"];
	Node0x1b14ab0[shape=record, label="  %44 = add i32 %43, %27"];
	Node0x1b14b20[shape=record, label="  %45 = sub i32 %44, %29"];
	Node0x1b14b90[shape=record, label="  %46 = add i32 %45, %35"];
	Node0x1b14c00[shape=record, label="  %47 = add i32 %46, %38"];
	Node0x1b14c70[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x1b14ce0[shape=record, label="  %49 = icmp eq i32 %17, %48"];
	Node0x1ab18b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1b14d70[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0x1b15018[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b15178[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b15288[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b15398[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b15458[shape=record, label="  ret i32 0"];
	Node0x1b119c8 -> Node0x1b11a48;
	Node0x1b11a48 -> Node0x1b11ad8;
	Node0x1b11ad8 -> Node0x1b11b38;
	Node0x1b11b38 -> Node0x1b11be8;
	Node0x1b11be8 -> Node0x1b12018;
	Node0x1b12018 -> Node0x1b120f8;
	Node0x1b120f8 -> Node0x1b121f8;
	Node0x1b121f8 -> Node0x1b122b8;
	Node0x1b122b8 -> Node0x1b12368;
	Node0x1b12368 -> Node0x1b12428;
	Node0x1b12428 -> Node0x1b124d8;
	Node0x1b124d8 -> Node0x1b0ca80;
	Node0x1b0ca80 -> Node0x1b126d8;
	Node0x1b126d8 -> Node0x1b13648;
	Node0x1b13648 -> Node0x1b13cb8;
	Node0x1b13cb8 -> Node0x1b13d18;
	Node0x1b13d18 -> Node0x1b13d90;
	Node0x1b13d90 -> Node0x1b13e00;
	Node0x1b13e00 -> Node0x1b13e70;
	Node0x1b13e70 -> Node0x1b13ee0;
	Node0x1b13ee0 -> Node0x1b13f50;
	Node0x1b13f50 -> Node0x1b13fc0;
	Node0x1b13fc0 -> Node0x1b14030;
	Node0x1b14030 -> Node0x1b140a0;
	Node0x1b140a0 -> Node0x1b14110;
	Node0x1b14110 -> Node0x1b14180;
	Node0x1b14180 -> Node0x1b141f0;
	Node0x1b141f0 -> Node0x1b14260;
	Node0x1b14260 -> Node0x1b142d0;
	Node0x1b142d0 -> Node0x1b14340;
	Node0x1b14340 -> Node0x1b143b0;
	Node0x1b143b0 -> Node0x1b14420;
	Node0x1b14420 -> Node0x1b14490;
	Node0x1b14490 -> Node0x1b14500;
	Node0x1b14500 -> Node0x1b14570;
	Node0x1b14570 -> Node0x1b145e0;
	Node0x1b145e0 -> Node0x1b14650;
	Node0x1b14650 -> Node0x1b146c0;
	Node0x1b146c0 -> Node0x1b14730;
	Node0x1b14730 -> Node0x1b147a0;
	Node0x1b147a0 -> Node0x1b14810;
	Node0x1b14810 -> Node0x1b14880;
	Node0x1b14880 -> Node0x1b148f0;
	Node0x1b148f0 -> Node0x1b14960;
	Node0x1b14960 -> Node0x1b149d0;
	Node0x1b149d0 -> Node0x1b14a40;
	Node0x1b14a40 -> Node0x1b14ab0;
	Node0x1b14ab0 -> Node0x1b14b20;
	Node0x1b14b20 -> Node0x1b14b90;
	Node0x1b14b90 -> Node0x1b14c00;
	Node0x1b14c00 -> Node0x1b14c70;
	Node0x1b14c70 -> Node0x1b14ce0;
	Node0x1b14ce0 -> Node0x1ab18b8;
	Node0x1ab18b8 -> Node0x1b14d70;
	Node0x1b14d70 -> Node0x1b15018;
	Node0x1b15018 -> Node0x1b15178;
	Node0x1b15178 -> Node0x1b15288;
	Node0x1b15288 -> Node0x1b15398;
	Node0x1b15398 -> Node0x1b15458;
edge [color=red]
	Node0x1b119c8 -> Node0x1b11be8;
	Node0x1b11be8 -> Node0x1b12018;
	Node0x1b11a48 -> Node0x1b120f8;
	Node0x1b120f8 -> Node0x1b121f8;
	Node0x1b11ad8 -> Node0x1b122b8;
	Node0x1b122b8 -> Node0x1b12368;
	Node0x1b11b38 -> Node0x1b12428;
	Node0x1b12428 -> Node0x1b124d8;
	Node0x1b119c8 -> Node0x1b0ca80;
	Node0x1b11a48 -> Node0x1b0ca80;
	Node0x1b11ad8 -> Node0x1b0ca80;
	Node0x1b11b38 -> Node0x1b0ca80;
	Node0x1b119c8 -> Node0x1b126d8;
	Node0x1b11a48 -> Node0x1b13648;
	Node0x1b11ad8 -> Node0x1b13cb8;
	Node0x1b11b38 -> Node0x1b13d18;
	Node0x1b13cb8 -> Node0x1b13d90;
	Node0x1b13648 -> Node0x1b13e00;
	Node0x1b13d90 -> Node0x1b13e00;
	Node0x1b126d8 -> Node0x1b13e70;
	Node0x1b13e70 -> Node0x1b13ee0;
	Node0x1b13e00 -> Node0x1b13ee0;
	Node0x1b13cb8 -> Node0x1b13f50;
	Node0x1b13648 -> Node0x1b13f50;
	Node0x1b13cb8 -> Node0x1b13fc0;
	Node0x1b13648 -> Node0x1b13fc0;
	Node0x1b13cb8 -> Node0x1b14030;
	Node0x1b13648 -> Node0x1b14030;
	Node0x1b13648 -> Node0x1b140a0;
	Node0x1b13d90 -> Node0x1b140a0;
	Node0x1b140a0 -> Node0x1b14110;
	Node0x1b14030 -> Node0x1b14180;
	Node0x1b126d8 -> Node0x1b141f0;
	Node0x1b13d18 -> Node0x1b14260;
	Node0x1b141f0 -> Node0x1b14260;
	Node0x1b13d18 -> Node0x1b142d0;
	Node0x1b142d0 -> Node0x1b14340;
	Node0x1b13d18 -> Node0x1b143b0;
	Node0x1b126d8 -> Node0x1b143b0;
	Node0x1b143b0 -> Node0x1b14420;
	Node0x1b13d18 -> Node0x1b14490;
	Node0x1b126d8 -> Node0x1b14490;
	Node0x1b14260 -> Node0x1b14500;
	Node0x1b13648 -> Node0x1b14500;
	Node0x1b14500 -> Node0x1b14570;
	Node0x1b14490 -> Node0x1b14570;
	Node0x1b14570 -> Node0x1b145e0;
	Node0x1b13e00 -> Node0x1b14650;
	Node0x1b14260 -> Node0x1b14650;
	Node0x1b14650 -> Node0x1b146c0;
	Node0x1b13f50 -> Node0x1b14730;
	Node0x1b14730 -> Node0x1b147a0;
	Node0x1b143b0 -> Node0x1b147a0;
	Node0x1b147a0 -> Node0x1b14810;
	Node0x1b13648 -> Node0x1b14880;
	Node0x1b13fc0 -> Node0x1b14880;
	Node0x1b14880 -> Node0x1b148f0;
	Node0x1b14030 -> Node0x1b148f0;
	Node0x1b148f0 -> Node0x1b14960;
	Node0x1b13d18 -> Node0x1b14960;
	Node0x1b14960 -> Node0x1b149d0;
	Node0x1b14110 -> Node0x1b149d0;
	Node0x1b149d0 -> Node0x1b14a40;
	Node0x1b14180 -> Node0x1b14a40;
	Node0x1b14a40 -> Node0x1b14ab0;
	Node0x1b14340 -> Node0x1b14ab0;
	Node0x1b14ab0 -> Node0x1b14b20;
	Node0x1b14420 -> Node0x1b14b20;
	Node0x1b14b20 -> Node0x1b14b90;
	Node0x1b146c0 -> Node0x1b14b90;
	Node0x1b14b90 -> Node0x1b14c00;
	Node0x1b14810 -> Node0x1b14c00;
	Node0x1b14c00 -> Node0x1b14c70;
	Node0x1b145e0 -> Node0x1b14c70;
	Node0x1b13ee0 -> Node0x1b14ce0;
	Node0x1b14c70 -> Node0x1b14ce0;
	Node0x1b14ce0 -> Node0x1ab18b8;
	Node0x1ab18b8 -> Node0x1b14d70;
	Node0x1b12428 -> Node0x1b15018;
	Node0x1b122b8 -> Node0x1b15178;
	Node0x1b120f8 -> Node0x1b15288;
	Node0x1b11be8 -> Node0x1b15398;
}
