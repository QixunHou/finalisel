digraph "DFG for'crackme' function" {
	Node0xccc3c0[shape=record, label="  %3 = or i32 %1, %0"];
	Node0xccca70[shape=record, label="  %4 = add i32 %0, 1"];
	Node0xcccb30[shape=record, label="  %5 = sub i32 %4, %3"];
	Node0xcccba0[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0xcccc10[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0xcccc80[shape=record, label="  %8 = or i32 %7, %1"];
	Node0xccccf0[shape=record, label="  %9 = and i32 %7, %1"];
	Node0xcccd60[shape=record, label="  %10 = and i32 %1, %0"];
	Node0xccce00[shape=record, label="  %11 = mul i32 %10, 3"];
	Node0xccce70[shape=record, label="  %12 = sub i32 1, %0"];
	Node0xcccee0[shape=record, label="  %13 = sub i32 %12, %1"];
	Node0xcccf50[shape=record, label="  %14 = add i32 %13, %6"];
	Node0xcccfc0[shape=record, label="  %15 = sub i32 %14, %8"];
	Node0xccd030[shape=record, label="  %16 = add i32 %15, %9"];
	Node0xccd0a0[shape=record, label="  %17 = add i32 %16, %11"];
	Node0xccd110[shape=record, label="  %18 = icmp eq i32 %5, %17"];
	Node0xc6d268[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xccd5b0[shape=record, label="  %20 = tail call i32 @puts(i8* nonnull dereferenceable(1) %19)"];
	Node0xccd600[shape=record, label="  ret void"];
	Node0xccc3c0 -> Node0xccca70;
	Node0xccca70 -> Node0xcccb30;
	Node0xcccb30 -> Node0xcccba0;
	Node0xcccba0 -> Node0xcccc10;
	Node0xcccc10 -> Node0xcccc80;
	Node0xcccc80 -> Node0xccccf0;
	Node0xccccf0 -> Node0xcccd60;
	Node0xcccd60 -> Node0xccce00;
	Node0xccce00 -> Node0xccce70;
	Node0xccce70 -> Node0xcccee0;
	Node0xcccee0 -> Node0xcccf50;
	Node0xcccf50 -> Node0xcccfc0;
	Node0xcccfc0 -> Node0xccd030;
	Node0xccd030 -> Node0xccd0a0;
	Node0xccd0a0 -> Node0xccd110;
	Node0xccd110 -> Node0xc6d268;
	Node0xc6d268 -> Node0xccd5b0;
	Node0xccd5b0 -> Node0xccd600;
edge [color=red]
	Node0xccca70 -> Node0xcccb30;
	Node0xccc3c0 -> Node0xcccb30;
	Node0xcccc10 -> Node0xcccc80;
	Node0xcccc10 -> Node0xccccf0;
	Node0xcccd60 -> Node0xccce00;
	Node0xccce70 -> Node0xcccee0;
	Node0xcccee0 -> Node0xcccf50;
	Node0xcccba0 -> Node0xcccf50;
	Node0xcccf50 -> Node0xcccfc0;
	Node0xcccc80 -> Node0xcccfc0;
	Node0xcccfc0 -> Node0xccd030;
	Node0xccccf0 -> Node0xccd030;
	Node0xccd030 -> Node0xccd0a0;
	Node0xccce00 -> Node0xccd0a0;
	Node0xcccb30 -> Node0xccd110;
	Node0xccd0a0 -> Node0xccd110;
	Node0xccd110 -> Node0xc6d268;
	Node0xc6d268 -> Node0xccd5b0;
}
