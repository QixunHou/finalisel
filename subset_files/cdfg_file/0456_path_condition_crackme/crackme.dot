digraph "DFG for'crackme' function" {
	Node0xd5d960[shape=record, label="  %3 = xor i32 %0, 2147483647"];
	Node0xd5d9d0[shape=record, label="  %4 = or i32 %3, %1"];
	Node0xd5da90[shape=record, label="  %5 = shl i32 %4, 1"];
	Node0xd5db00[shape=record, label="  %6 = or i32 %1, %0"];
	Node0xd5db70[shape=record, label="  %7 = xor i32 %1, %0"];
	Node0xd5dbe0[shape=record, label="  %8 = and i32 %1, %0"];
	Node0xd5dc50[shape=record, label="  %9 = shl i32 %0, 1"];
	Node0xd5dcc0[shape=record, label="  %10 = sub i32 %6, %9"];
	Node0xd5dd30[shape=record, label="  %11 = sub i32 %10, %7"];
	Node0xd5dda0[shape=record, label="  %12 = add i32 %11, %8"];
	Node0xd5de40[shape=record, label="  %13 = add i32 %12, -2"];
	Node0xd5deb0[shape=record, label="  %14 = icmp eq i32 %5, %13"];
	Node0xcfe388[shape=record, label="  %15 = select i1 %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xd5e350[shape=record, label="  %16 = tail call i32 @puts(i8* nonnull dereferenceable(1) %15)"];
	Node0xd5e3a0[shape=record, label="  ret void"];
	Node0xd5d960 -> Node0xd5d9d0;
	Node0xd5d9d0 -> Node0xd5da90;
	Node0xd5da90 -> Node0xd5db00;
	Node0xd5db00 -> Node0xd5db70;
	Node0xd5db70 -> Node0xd5dbe0;
	Node0xd5dbe0 -> Node0xd5dc50;
	Node0xd5dc50 -> Node0xd5dcc0;
	Node0xd5dcc0 -> Node0xd5dd30;
	Node0xd5dd30 -> Node0xd5dda0;
	Node0xd5dda0 -> Node0xd5de40;
	Node0xd5de40 -> Node0xd5deb0;
	Node0xd5deb0 -> Node0xcfe388;
	Node0xcfe388 -> Node0xd5e350;
	Node0xd5e350 -> Node0xd5e3a0;
edge [color=red]
	Node0xd5d960 -> Node0xd5d9d0;
	Node0xd5d9d0 -> Node0xd5da90;
	Node0xd5db00 -> Node0xd5dcc0;
	Node0xd5dc50 -> Node0xd5dcc0;
	Node0xd5dcc0 -> Node0xd5dd30;
	Node0xd5db70 -> Node0xd5dd30;
	Node0xd5dd30 -> Node0xd5dda0;
	Node0xd5dbe0 -> Node0xd5dda0;
	Node0xd5dda0 -> Node0xd5de40;
	Node0xd5da90 -> Node0xd5deb0;
	Node0xd5de40 -> Node0xd5deb0;
	Node0xd5deb0 -> Node0xcfe388;
	Node0xcfe388 -> Node0xd5e350;
}
