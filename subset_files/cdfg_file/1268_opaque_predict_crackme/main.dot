digraph "DFG for'main' function" {
	Node0x119ae88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x119af08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x119af98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x119aff8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x119b478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x119ed18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x119edf8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x119eeb8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x119ef68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x119f1c8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x119f288[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11a01f8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11a0868[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x11a0960[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x11a0b68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11a0cc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11a0dd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11a0e98[shape=record, label="  ret i32 0"];
	Node0x119ae88 -> Node0x119af08;
	Node0x119af08 -> Node0x119af98;
	Node0x119af98 -> Node0x119aff8;
	Node0x119aff8 -> Node0x119b478;
	Node0x119b478 -> Node0x119ed18;
	Node0x119ed18 -> Node0x119edf8;
	Node0x119edf8 -> Node0x119eeb8;
	Node0x119eeb8 -> Node0x119ef68;
	Node0x119ef68 -> Node0x119f1c8;
	Node0x119f1c8 -> Node0x119f288;
	Node0x119f288 -> Node0x11a01f8;
	Node0x11a01f8 -> Node0x11a0868;
	Node0x11a0868 -> Node0x11a0960;
	Node0x11a0960 -> Node0x11a0b68;
	Node0x11a0b68 -> Node0x11a0cc8;
	Node0x11a0cc8 -> Node0x11a0dd8;
	Node0x11a0dd8 -> Node0x11a0e98;
edge [color=red]
	Node0x119ae88 -> Node0x119aff8;
	Node0x119aff8 -> Node0x119b478;
	Node0x119af08 -> Node0x119ed18;
	Node0x119ed18 -> Node0x119edf8;
	Node0x119af98 -> Node0x119eeb8;
	Node0x119eeb8 -> Node0x119ef68;
	Node0x119ae88 -> Node0x119f1c8;
	Node0x119af08 -> Node0x119f1c8;
	Node0x119af98 -> Node0x119f1c8;
	Node0x119ae88 -> Node0x119f288;
	Node0x119af08 -> Node0x11a01f8;
	Node0x119af98 -> Node0x11a0868;
	Node0x119f288 -> Node0x11a0960;
	Node0x11a01f8 -> Node0x11a0960;
	Node0x11a0868 -> Node0x11a0960;
	Node0x119eeb8 -> Node0x11a0b68;
	Node0x119ed18 -> Node0x11a0cc8;
	Node0x119aff8 -> Node0x11a0dd8;
}
