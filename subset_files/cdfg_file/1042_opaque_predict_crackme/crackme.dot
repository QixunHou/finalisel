digraph "DFG for'crackme' function" {
	Node0xd56a60[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0xd56ad0[shape=record, label="  %4 = xor i32 %0, -1"];
	Node0xd56b90[shape=record, label="  %5 = or i32 %4, %1"];
	Node0xd56c00[shape=record, label="  %6 = sub i32 %3, %5"];
	Node0xd56c70[shape=record, label="  %7 = xor i32 %1, %0"];
	Node0xd56ce0[shape=record, label="  %8 = and i32 %1, %0"];
	Node0xd56d50[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xd56df0[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0xd56e60[shape=record, label="  %11 = and i32 %4, %1"];
	Node0xd56f00[shape=record, label="  %12 = mul i32 %11, 3"];
	Node0xd56f70[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xd57010[shape=record, label="  %14 = shl i32 %8, 2"];
	Node0xd57080[shape=record, label="  %15 = add i32 %1, -1"];
	Node0xd570f0[shape=record, label="  %16 = add i32 %15, %7"];
	Node0xd57160[shape=record, label="  %17 = add i32 %16, %13"];
	Node0xd571d0[shape=record, label="  %18 = sub i32 %17, %14"];
	Node0xd57240[shape=record, label="  %19 = sub i32 %18, %10"];
	Node0xd572b0[shape=record, label="  %20 = icmp eq i32 %6, %19"];
	Node0xcf7268[shape=record, label="  %21 = select i1 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xd57750[shape=record, label="  %22 = tail call i32 @puts(i8* nonnull dereferenceable(1) %21)"];
	Node0xd577a0[shape=record, label="  ret void"];
	Node0xd56a60 -> Node0xd56ad0;
	Node0xd56ad0 -> Node0xd56b90;
	Node0xd56b90 -> Node0xd56c00;
	Node0xd56c00 -> Node0xd56c70;
	Node0xd56c70 -> Node0xd56ce0;
	Node0xd56ce0 -> Node0xd56d50;
	Node0xd56d50 -> Node0xd56df0;
	Node0xd56df0 -> Node0xd56e60;
	Node0xd56e60 -> Node0xd56f00;
	Node0xd56f00 -> Node0xd56f70;
	Node0xd56f70 -> Node0xd57010;
	Node0xd57010 -> Node0xd57080;
	Node0xd57080 -> Node0xd570f0;
	Node0xd570f0 -> Node0xd57160;
	Node0xd57160 -> Node0xd571d0;
	Node0xd571d0 -> Node0xd57240;
	Node0xd57240 -> Node0xd572b0;
	Node0xd572b0 -> Node0xcf7268;
	Node0xcf7268 -> Node0xd57750;
	Node0xd57750 -> Node0xd577a0;
edge [color=red]
	Node0xd56ad0 -> Node0xd56b90;
	Node0xd56a60 -> Node0xd56c00;
	Node0xd56b90 -> Node0xd56c00;
	Node0xd56ce0 -> Node0xd56d50;
	Node0xd56d50 -> Node0xd56df0;
	Node0xd56ad0 -> Node0xd56e60;
	Node0xd56e60 -> Node0xd56f00;
	Node0xd56f00 -> Node0xd56f70;
	Node0xd56ce0 -> Node0xd57010;
	Node0xd57080 -> Node0xd570f0;
	Node0xd56c70 -> Node0xd570f0;
	Node0xd570f0 -> Node0xd57160;
	Node0xd56f70 -> Node0xd57160;
	Node0xd57160 -> Node0xd571d0;
	Node0xd57010 -> Node0xd571d0;
	Node0xd571d0 -> Node0xd57240;
	Node0xd56df0 -> Node0xd57240;
	Node0xd56c00 -> Node0xd572b0;
	Node0xd57240 -> Node0xd572b0;
	Node0xd572b0 -> Node0xcf7268;
	Node0xcf7268 -> Node0xd57750;
}
