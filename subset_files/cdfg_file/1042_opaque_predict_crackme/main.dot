digraph "DFG for'main' function" {
	Node0xd57968[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd579e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd57a78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xd57ed8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xd57fb8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xd580d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd58310[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xd583c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd59338[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd599c0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xd59a30[shape=record, label="  %9 = xor i32 %6, -1"];
	Node0xd59aa0[shape=record, label="  %10 = or i32 %7, %9"];
	Node0xd59b10[shape=record, label="  %11 = sub i32 %8, %10"];
	Node0xd59b80[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0xd59bf0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xd59c60[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0xd59cd0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0xd59d40[shape=record, label="  %16 = and i32 %7, %9"];
	Node0xd59db0[shape=record, label="  %17 = mul i32 %16, 3"];
	Node0xd59e20[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0xd59e90[shape=record, label="  %19 = shl i32 %13, 2"];
	Node0xd59f00[shape=record, label="  %20 = add i32 %7, -1"];
	Node0xd59f70[shape=record, label="  %21 = add i32 %20, %12"];
	Node0xd59fe0[shape=record, label="  %22 = add i32 %21, %18"];
	Node0xd5a050[shape=record, label="  %23 = sub i32 %22, %19"];
	Node0xd5a0c0[shape=record, label="  %24 = sub i32 %23, %15"];
	Node0xd5a130[shape=record, label="  %25 = icmp eq i32 %11, %24"];
	Node0xcf89d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xd5a1c0[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0xd5a418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd5a578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xd5a638[shape=record, label="  ret i32 0"];
	Node0xd57968 -> Node0xd579e8;
	Node0xd579e8 -> Node0xd57a78;
	Node0xd57a78 -> Node0xd57ed8;
	Node0xd57ed8 -> Node0xd57fb8;
	Node0xd57fb8 -> Node0xd580d8;
	Node0xd580d8 -> Node0xd58310;
	Node0xd58310 -> Node0xd583c8;
	Node0xd583c8 -> Node0xd59338;
	Node0xd59338 -> Node0xd599c0;
	Node0xd599c0 -> Node0xd59a30;
	Node0xd59a30 -> Node0xd59aa0;
	Node0xd59aa0 -> Node0xd59b10;
	Node0xd59b10 -> Node0xd59b80;
	Node0xd59b80 -> Node0xd59bf0;
	Node0xd59bf0 -> Node0xd59c60;
	Node0xd59c60 -> Node0xd59cd0;
	Node0xd59cd0 -> Node0xd59d40;
	Node0xd59d40 -> Node0xd59db0;
	Node0xd59db0 -> Node0xd59e20;
	Node0xd59e20 -> Node0xd59e90;
	Node0xd59e90 -> Node0xd59f00;
	Node0xd59f00 -> Node0xd59f70;
	Node0xd59f70 -> Node0xd59fe0;
	Node0xd59fe0 -> Node0xd5a050;
	Node0xd5a050 -> Node0xd5a0c0;
	Node0xd5a0c0 -> Node0xd5a130;
	Node0xd5a130 -> Node0xcf89d8;
	Node0xcf89d8 -> Node0xd5a1c0;
	Node0xd5a1c0 -> Node0xd5a418;
	Node0xd5a418 -> Node0xd5a578;
	Node0xd5a578 -> Node0xd5a638;
edge [color=red]
	Node0xd57968 -> Node0xd57a78;
	Node0xd57a78 -> Node0xd57ed8;
	Node0xd579e8 -> Node0xd57fb8;
	Node0xd57fb8 -> Node0xd580d8;
	Node0xd57968 -> Node0xd58310;
	Node0xd579e8 -> Node0xd58310;
	Node0xd57968 -> Node0xd583c8;
	Node0xd579e8 -> Node0xd59338;
	Node0xd59338 -> Node0xd599c0;
	Node0xd583c8 -> Node0xd59a30;
	Node0xd59338 -> Node0xd59aa0;
	Node0xd59a30 -> Node0xd59aa0;
	Node0xd599c0 -> Node0xd59b10;
	Node0xd59aa0 -> Node0xd59b10;
	Node0xd59338 -> Node0xd59b80;
	Node0xd583c8 -> Node0xd59b80;
	Node0xd59338 -> Node0xd59bf0;
	Node0xd583c8 -> Node0xd59bf0;
	Node0xd59bf0 -> Node0xd59c60;
	Node0xd59c60 -> Node0xd59cd0;
	Node0xd59338 -> Node0xd59d40;
	Node0xd59a30 -> Node0xd59d40;
	Node0xd59d40 -> Node0xd59db0;
	Node0xd59db0 -> Node0xd59e20;
	Node0xd59bf0 -> Node0xd59e90;
	Node0xd59338 -> Node0xd59f00;
	Node0xd59f00 -> Node0xd59f70;
	Node0xd59b80 -> Node0xd59f70;
	Node0xd59f70 -> Node0xd59fe0;
	Node0xd59e20 -> Node0xd59fe0;
	Node0xd59fe0 -> Node0xd5a050;
	Node0xd59e90 -> Node0xd5a050;
	Node0xd5a050 -> Node0xd5a0c0;
	Node0xd59cd0 -> Node0xd5a0c0;
	Node0xd59b10 -> Node0xd5a130;
	Node0xd5a0c0 -> Node0xd5a130;
	Node0xd5a130 -> Node0xcf89d8;
	Node0xcf89d8 -> Node0xd5a1c0;
	Node0xd57fb8 -> Node0xd5a418;
	Node0xd57a78 -> Node0xd5a578;
}
