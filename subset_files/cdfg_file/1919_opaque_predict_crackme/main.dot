digraph "DFG for'main' function" {
	Node0x1f75a68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f75ae8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f75b78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f75bd8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1f76058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f78228[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1f78308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f783c8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1f78478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f786d8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1f78798[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f79708[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f79d78[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f79e70[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1f7a078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f7a1d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f7a2e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f7a3a8[shape=record, label="  ret i32 0"];
	Node0x1f75a68 -> Node0x1f75ae8;
	Node0x1f75ae8 -> Node0x1f75b78;
	Node0x1f75b78 -> Node0x1f75bd8;
	Node0x1f75bd8 -> Node0x1f76058;
	Node0x1f76058 -> Node0x1f78228;
	Node0x1f78228 -> Node0x1f78308;
	Node0x1f78308 -> Node0x1f783c8;
	Node0x1f783c8 -> Node0x1f78478;
	Node0x1f78478 -> Node0x1f786d8;
	Node0x1f786d8 -> Node0x1f78798;
	Node0x1f78798 -> Node0x1f79708;
	Node0x1f79708 -> Node0x1f79d78;
	Node0x1f79d78 -> Node0x1f79e70;
	Node0x1f79e70 -> Node0x1f7a078;
	Node0x1f7a078 -> Node0x1f7a1d8;
	Node0x1f7a1d8 -> Node0x1f7a2e8;
	Node0x1f7a2e8 -> Node0x1f7a3a8;
edge [color=red]
	Node0x1f75a68 -> Node0x1f75bd8;
	Node0x1f75bd8 -> Node0x1f76058;
	Node0x1f75ae8 -> Node0x1f78228;
	Node0x1f78228 -> Node0x1f78308;
	Node0x1f75b78 -> Node0x1f783c8;
	Node0x1f783c8 -> Node0x1f78478;
	Node0x1f75a68 -> Node0x1f786d8;
	Node0x1f75ae8 -> Node0x1f786d8;
	Node0x1f75b78 -> Node0x1f786d8;
	Node0x1f75a68 -> Node0x1f78798;
	Node0x1f75ae8 -> Node0x1f79708;
	Node0x1f75b78 -> Node0x1f79d78;
	Node0x1f78798 -> Node0x1f79e70;
	Node0x1f79708 -> Node0x1f79e70;
	Node0x1f79d78 -> Node0x1f79e70;
	Node0x1f783c8 -> Node0x1f7a078;
	Node0x1f78228 -> Node0x1f7a1d8;
	Node0x1f75bd8 -> Node0x1f7a2e8;
}
