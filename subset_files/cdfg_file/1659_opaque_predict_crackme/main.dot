digraph "DFG for'main' function" {
	Node0x1d6dc58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d6dcd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d6dd68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1d6ddc8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1d6e248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d70f98[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1d71078[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d71138[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1d711e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d71448[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1d71508[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d72478[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d72ae8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1d72be0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1d72de8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d72f48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d73058[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d73118[shape=record, label="  ret i32 0"];
	Node0x1d6dc58 -> Node0x1d6dcd8;
	Node0x1d6dcd8 -> Node0x1d6dd68;
	Node0x1d6dd68 -> Node0x1d6ddc8;
	Node0x1d6ddc8 -> Node0x1d6e248;
	Node0x1d6e248 -> Node0x1d70f98;
	Node0x1d70f98 -> Node0x1d71078;
	Node0x1d71078 -> Node0x1d71138;
	Node0x1d71138 -> Node0x1d711e8;
	Node0x1d711e8 -> Node0x1d71448;
	Node0x1d71448 -> Node0x1d71508;
	Node0x1d71508 -> Node0x1d72478;
	Node0x1d72478 -> Node0x1d72ae8;
	Node0x1d72ae8 -> Node0x1d72be0;
	Node0x1d72be0 -> Node0x1d72de8;
	Node0x1d72de8 -> Node0x1d72f48;
	Node0x1d72f48 -> Node0x1d73058;
	Node0x1d73058 -> Node0x1d73118;
edge [color=red]
	Node0x1d6dc58 -> Node0x1d6ddc8;
	Node0x1d6ddc8 -> Node0x1d6e248;
	Node0x1d6dcd8 -> Node0x1d70f98;
	Node0x1d70f98 -> Node0x1d71078;
	Node0x1d6dd68 -> Node0x1d71138;
	Node0x1d71138 -> Node0x1d711e8;
	Node0x1d6dc58 -> Node0x1d71448;
	Node0x1d6dcd8 -> Node0x1d71448;
	Node0x1d6dd68 -> Node0x1d71448;
	Node0x1d6dc58 -> Node0x1d71508;
	Node0x1d6dcd8 -> Node0x1d72478;
	Node0x1d6dd68 -> Node0x1d72ae8;
	Node0x1d71508 -> Node0x1d72be0;
	Node0x1d72478 -> Node0x1d72be0;
	Node0x1d72ae8 -> Node0x1d72be0;
	Node0x1d71138 -> Node0x1d72de8;
	Node0x1d70f98 -> Node0x1d72f48;
	Node0x1d6ddc8 -> Node0x1d73058;
}
