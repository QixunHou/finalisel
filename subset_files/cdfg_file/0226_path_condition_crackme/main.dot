digraph "DFG for'main' function" {
	Node0x1ea6328[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ea63a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ea6438[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ea6498[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1ea6918[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ea6dd8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1ea6eb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ea6f78[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1ea7028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ea7288[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1ea7348[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ea82b8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ea8928[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ea8a20[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1ea8c28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ea8d88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ea8e98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ea8f58[shape=record, label="  ret i32 0"];
	Node0x1ea6328 -> Node0x1ea63a8;
	Node0x1ea63a8 -> Node0x1ea6438;
	Node0x1ea6438 -> Node0x1ea6498;
	Node0x1ea6498 -> Node0x1ea6918;
	Node0x1ea6918 -> Node0x1ea6dd8;
	Node0x1ea6dd8 -> Node0x1ea6eb8;
	Node0x1ea6eb8 -> Node0x1ea6f78;
	Node0x1ea6f78 -> Node0x1ea7028;
	Node0x1ea7028 -> Node0x1ea7288;
	Node0x1ea7288 -> Node0x1ea7348;
	Node0x1ea7348 -> Node0x1ea82b8;
	Node0x1ea82b8 -> Node0x1ea8928;
	Node0x1ea8928 -> Node0x1ea8a20;
	Node0x1ea8a20 -> Node0x1ea8c28;
	Node0x1ea8c28 -> Node0x1ea8d88;
	Node0x1ea8d88 -> Node0x1ea8e98;
	Node0x1ea8e98 -> Node0x1ea8f58;
edge [color=red]
	Node0x1ea6328 -> Node0x1ea6498;
	Node0x1ea6498 -> Node0x1ea6918;
	Node0x1ea63a8 -> Node0x1ea6dd8;
	Node0x1ea6dd8 -> Node0x1ea6eb8;
	Node0x1ea6438 -> Node0x1ea6f78;
	Node0x1ea6f78 -> Node0x1ea7028;
	Node0x1ea6328 -> Node0x1ea7288;
	Node0x1ea63a8 -> Node0x1ea7288;
	Node0x1ea6438 -> Node0x1ea7288;
	Node0x1ea6328 -> Node0x1ea7348;
	Node0x1ea63a8 -> Node0x1ea82b8;
	Node0x1ea6438 -> Node0x1ea8928;
	Node0x1ea7348 -> Node0x1ea8a20;
	Node0x1ea82b8 -> Node0x1ea8a20;
	Node0x1ea8928 -> Node0x1ea8a20;
	Node0x1ea6f78 -> Node0x1ea8c28;
	Node0x1ea6dd8 -> Node0x1ea8d88;
	Node0x1ea6498 -> Node0x1ea8e98;
}
