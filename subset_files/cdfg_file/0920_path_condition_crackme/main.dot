digraph "DFG for'main' function" {
	Node0xd9bb48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd9bbc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd9bc58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xd9bcb8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xd9c138[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd9e428[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xd9e508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd9e5c8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xd9e678[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd9e8d8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xd9e998[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd9f908[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd9ff78[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xda0070[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xda0278[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xda03d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xda04e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xda05a8[shape=record, label="  ret i32 0"];
	Node0xd9bb48 -> Node0xd9bbc8;
	Node0xd9bbc8 -> Node0xd9bc58;
	Node0xd9bc58 -> Node0xd9bcb8;
	Node0xd9bcb8 -> Node0xd9c138;
	Node0xd9c138 -> Node0xd9e428;
	Node0xd9e428 -> Node0xd9e508;
	Node0xd9e508 -> Node0xd9e5c8;
	Node0xd9e5c8 -> Node0xd9e678;
	Node0xd9e678 -> Node0xd9e8d8;
	Node0xd9e8d8 -> Node0xd9e998;
	Node0xd9e998 -> Node0xd9f908;
	Node0xd9f908 -> Node0xd9ff78;
	Node0xd9ff78 -> Node0xda0070;
	Node0xda0070 -> Node0xda0278;
	Node0xda0278 -> Node0xda03d8;
	Node0xda03d8 -> Node0xda04e8;
	Node0xda04e8 -> Node0xda05a8;
edge [color=red]
	Node0xd9bb48 -> Node0xd9bcb8;
	Node0xd9bcb8 -> Node0xd9c138;
	Node0xd9bbc8 -> Node0xd9e428;
	Node0xd9e428 -> Node0xd9e508;
	Node0xd9bc58 -> Node0xd9e5c8;
	Node0xd9e5c8 -> Node0xd9e678;
	Node0xd9bb48 -> Node0xd9e8d8;
	Node0xd9bbc8 -> Node0xd9e8d8;
	Node0xd9bc58 -> Node0xd9e8d8;
	Node0xd9bb48 -> Node0xd9e998;
	Node0xd9bbc8 -> Node0xd9f908;
	Node0xd9bc58 -> Node0xd9ff78;
	Node0xd9e998 -> Node0xda0070;
	Node0xd9f908 -> Node0xda0070;
	Node0xd9ff78 -> Node0xda0070;
	Node0xd9e5c8 -> Node0xda0278;
	Node0xd9e428 -> Node0xda03d8;
	Node0xd9bcb8 -> Node0xda04e8;
}
