digraph "DFG for'main' function" {
	Node0x14c7d58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14c7dd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14c7e68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x14c82c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x14c83a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x14c84c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14c8700[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x14c87b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14c9728[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14c9db0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x14c9e20[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x14c9e90[shape=record, label="  %10 = mul i32 %9, -2"];
	Node0x14c9f00[shape=record, label="  %11 = add i32 %10, %7"];
	Node0x14c9f70[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x14c9fe0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x14ca050[shape=record, label="  %14 = and i32 %6, %8"];
	Node0x14ca0c0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x14ca130[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x14ca1a0[shape=record, label="  %17 = shl i32 %9, 1"];
	Node0x14ca210[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x14ca280[shape=record, label="  %19 = mul i32 %14, -5"];
	Node0x14ca2f0[shape=record, label="  %20 = shl i32 %12, 2"];
	Node0x14ca360[shape=record, label="  %21 = add i32 %13, %16"];
	Node0x14ca3d0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x14ca440[shape=record, label="  %23 = add i32 %6, 3"];
	Node0x14ca4b0[shape=record, label="  %24 = add i32 %23, %12"];
	Node0x14ca520[shape=record, label="  %25 = add i32 %24, %15"];
	Node0x14ca590[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x14ca600[shape=record, label="  %27 = add i32 %26, %19"];
	Node0x14ca670[shape=record, label="  %28 = sub i32 %27, %20"];
	Node0x14ca6e0[shape=record, label="  %29 = sub i32 %28, %18"];
	Node0x14ca750[shape=record, label="  %30 = add i32 %29, %22"];
	Node0x14ca7c0[shape=record, label="  %31 = icmp eq i32 %11, %30"];
	Node0x14689d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14caa60[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x14cacb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14cae18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x14caed8[shape=record, label="  ret i32 0"];
	Node0x14c7d58 -> Node0x14c7dd8;
	Node0x14c7dd8 -> Node0x14c7e68;
	Node0x14c7e68 -> Node0x14c82c8;
	Node0x14c82c8 -> Node0x14c83a8;
	Node0x14c83a8 -> Node0x14c84c8;
	Node0x14c84c8 -> Node0x14c8700;
	Node0x14c8700 -> Node0x14c87b8;
	Node0x14c87b8 -> Node0x14c9728;
	Node0x14c9728 -> Node0x14c9db0;
	Node0x14c9db0 -> Node0x14c9e20;
	Node0x14c9e20 -> Node0x14c9e90;
	Node0x14c9e90 -> Node0x14c9f00;
	Node0x14c9f00 -> Node0x14c9f70;
	Node0x14c9f70 -> Node0x14c9fe0;
	Node0x14c9fe0 -> Node0x14ca050;
	Node0x14ca050 -> Node0x14ca0c0;
	Node0x14ca0c0 -> Node0x14ca130;
	Node0x14ca130 -> Node0x14ca1a0;
	Node0x14ca1a0 -> Node0x14ca210;
	Node0x14ca210 -> Node0x14ca280;
	Node0x14ca280 -> Node0x14ca2f0;
	Node0x14ca2f0 -> Node0x14ca360;
	Node0x14ca360 -> Node0x14ca3d0;
	Node0x14ca3d0 -> Node0x14ca440;
	Node0x14ca440 -> Node0x14ca4b0;
	Node0x14ca4b0 -> Node0x14ca520;
	Node0x14ca520 -> Node0x14ca590;
	Node0x14ca590 -> Node0x14ca600;
	Node0x14ca600 -> Node0x14ca670;
	Node0x14ca670 -> Node0x14ca6e0;
	Node0x14ca6e0 -> Node0x14ca750;
	Node0x14ca750 -> Node0x14ca7c0;
	Node0x14ca7c0 -> Node0x14689d8;
	Node0x14689d8 -> Node0x14caa60;
	Node0x14caa60 -> Node0x14cacb8;
	Node0x14cacb8 -> Node0x14cae18;
	Node0x14cae18 -> Node0x14caed8;
edge [color=red]
	Node0x14c7d58 -> Node0x14c7e68;
	Node0x14c7e68 -> Node0x14c82c8;
	Node0x14c7dd8 -> Node0x14c83a8;
	Node0x14c83a8 -> Node0x14c84c8;
	Node0x14c7d58 -> Node0x14c8700;
	Node0x14c7dd8 -> Node0x14c8700;
	Node0x14c7d58 -> Node0x14c87b8;
	Node0x14c7dd8 -> Node0x14c9728;
	Node0x14c9728 -> Node0x14c9db0;
	Node0x14c87b8 -> Node0x14c9e20;
	Node0x14c9db0 -> Node0x14c9e20;
	Node0x14c9e20 -> Node0x14c9e90;
	Node0x14c9e90 -> Node0x14c9f00;
	Node0x14c9728 -> Node0x14c9f00;
	Node0x14c9728 -> Node0x14c9f70;
	Node0x14c87b8 -> Node0x14c9f70;
	Node0x14c9728 -> Node0x14c9fe0;
	Node0x14c87b8 -> Node0x14c9fe0;
	Node0x14c87b8 -> Node0x14ca050;
	Node0x14c9db0 -> Node0x14ca050;
	Node0x14ca050 -> Node0x14ca0c0;
	Node0x14c9728 -> Node0x14ca130;
	Node0x14c87b8 -> Node0x14ca130;
	Node0x14c9e20 -> Node0x14ca1a0;
	Node0x14ca1a0 -> Node0x14ca210;
	Node0x14ca050 -> Node0x14ca280;
	Node0x14c9f70 -> Node0x14ca2f0;
	Node0x14c9fe0 -> Node0x14ca360;
	Node0x14ca130 -> Node0x14ca360;
	Node0x14ca360 -> Node0x14ca3d0;
	Node0x14c87b8 -> Node0x14ca440;
	Node0x14ca440 -> Node0x14ca4b0;
	Node0x14c9f70 -> Node0x14ca4b0;
	Node0x14ca4b0 -> Node0x14ca520;
	Node0x14ca0c0 -> Node0x14ca520;
	Node0x14ca520 -> Node0x14ca590;
	Node0x14ca130 -> Node0x14ca590;
	Node0x14ca590 -> Node0x14ca600;
	Node0x14ca280 -> Node0x14ca600;
	Node0x14ca600 -> Node0x14ca670;
	Node0x14ca2f0 -> Node0x14ca670;
	Node0x14ca670 -> Node0x14ca6e0;
	Node0x14ca210 -> Node0x14ca6e0;
	Node0x14ca6e0 -> Node0x14ca750;
	Node0x14ca3d0 -> Node0x14ca750;
	Node0x14c9f00 -> Node0x14ca7c0;
	Node0x14ca750 -> Node0x14ca7c0;
	Node0x14ca7c0 -> Node0x14689d8;
	Node0x14689d8 -> Node0x14caa60;
	Node0x14c83a8 -> Node0x14cacb8;
	Node0x14c7e68 -> Node0x14cae18;
}
