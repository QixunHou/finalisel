digraph "DFG for'main' function" {
	Node0x1f39288[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f39308[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f39398[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1f397f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1f398d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1f399f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f39c30[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1f39ce8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f3ac58[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f3b2e0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1f3b350[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x1f3b3c0[shape=record, label="  %10 = xor i32 %6, -1"];
	Node0x1f3b430[shape=record, label="  %11 = mul i32 %10, -4"];
	Node0x1f3b4a0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x1f3b510[shape=record, label="  %13 = or i32 %6, %12"];
	Node0x1f3b580[shape=record, label="  %14 = shl i32 %6, 1"];
	Node0x1f3b5f0[shape=record, label="  %15 = xor i32 %8, -1"];
	Node0x1f3b660[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x1f3b6d0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1f3b740[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x1f3b7b0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1f3b820[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x1f3b890[shape=record, label="  %21 = xor i32 %13, -1"];
	Node0x1f3b900[shape=record, label="  %22 = and i32 %6, %12"];
	Node0x1f3b970[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x1f3b9e0[shape=record, label="  %24 = add i32 %16, %21"];
	Node0x1f3ba50[shape=record, label="  %25 = mul i32 %24, 5"];
	Node0x1f3bac0[shape=record, label="  %26 = sub i32 %11, %7"];
	Node0x1f3bb30[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x1f3bba0[shape=record, label="  %28 = sub i32 %27, %14"];
	Node0x1f3bc10[shape=record, label="  %29 = sub i32 %28, %13"];
	Node0x1f3bc80[shape=record, label="  %30 = add i32 %29, %15"];
	Node0x1f3bcf0[shape=record, label="  %31 = add i32 %30, %17"];
	Node0x1f3bd60[shape=record, label="  %32 = sub i32 %31, %19"];
	Node0x1f3bdd0[shape=record, label="  %33 = add i32 %32, %23"];
	Node0x1f3be40[shape=record, label="  %34 = add i32 %33, %20"];
	Node0x1f3beb0[shape=record, label="  %35 = add i32 %34, %25"];
	Node0x1f3bf20[shape=record, label="  %36 = icmp eq i32 %35, %9"];
	Node0x1ed99d8[shape=record, label="  %37 = select i1 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1f3bfb0[shape=record, label="  %38 = call i32 @puts(i8* nonnull dereferenceable(1) %37) #5"];
	Node0x1f3c208[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f3c368[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1f3c428[shape=record, label="  ret i32 0"];
	Node0x1f39288 -> Node0x1f39308;
	Node0x1f39308 -> Node0x1f39398;
	Node0x1f39398 -> Node0x1f397f8;
	Node0x1f397f8 -> Node0x1f398d8;
	Node0x1f398d8 -> Node0x1f399f8;
	Node0x1f399f8 -> Node0x1f39c30;
	Node0x1f39c30 -> Node0x1f39ce8;
	Node0x1f39ce8 -> Node0x1f3ac58;
	Node0x1f3ac58 -> Node0x1f3b2e0;
	Node0x1f3b2e0 -> Node0x1f3b350;
	Node0x1f3b350 -> Node0x1f3b3c0;
	Node0x1f3b3c0 -> Node0x1f3b430;
	Node0x1f3b430 -> Node0x1f3b4a0;
	Node0x1f3b4a0 -> Node0x1f3b510;
	Node0x1f3b510 -> Node0x1f3b580;
	Node0x1f3b580 -> Node0x1f3b5f0;
	Node0x1f3b5f0 -> Node0x1f3b660;
	Node0x1f3b660 -> Node0x1f3b6d0;
	Node0x1f3b6d0 -> Node0x1f3b740;
	Node0x1f3b740 -> Node0x1f3b7b0;
	Node0x1f3b7b0 -> Node0x1f3b820;
	Node0x1f3b820 -> Node0x1f3b890;
	Node0x1f3b890 -> Node0x1f3b900;
	Node0x1f3b900 -> Node0x1f3b970;
	Node0x1f3b970 -> Node0x1f3b9e0;
	Node0x1f3b9e0 -> Node0x1f3ba50;
	Node0x1f3ba50 -> Node0x1f3bac0;
	Node0x1f3bac0 -> Node0x1f3bb30;
	Node0x1f3bb30 -> Node0x1f3bba0;
	Node0x1f3bba0 -> Node0x1f3bc10;
	Node0x1f3bc10 -> Node0x1f3bc80;
	Node0x1f3bc80 -> Node0x1f3bcf0;
	Node0x1f3bcf0 -> Node0x1f3bd60;
	Node0x1f3bd60 -> Node0x1f3bdd0;
	Node0x1f3bdd0 -> Node0x1f3be40;
	Node0x1f3be40 -> Node0x1f3beb0;
	Node0x1f3beb0 -> Node0x1f3bf20;
	Node0x1f3bf20 -> Node0x1ed99d8;
	Node0x1ed99d8 -> Node0x1f3bfb0;
	Node0x1f3bfb0 -> Node0x1f3c208;
	Node0x1f3c208 -> Node0x1f3c368;
	Node0x1f3c368 -> Node0x1f3c428;
edge [color=red]
	Node0x1f39288 -> Node0x1f39398;
	Node0x1f39398 -> Node0x1f397f8;
	Node0x1f39308 -> Node0x1f398d8;
	Node0x1f398d8 -> Node0x1f399f8;
	Node0x1f39288 -> Node0x1f39c30;
	Node0x1f39308 -> Node0x1f39c30;
	Node0x1f39288 -> Node0x1f39ce8;
	Node0x1f39308 -> Node0x1f3ac58;
	Node0x1f3ac58 -> Node0x1f3b2e0;
	Node0x1f39ce8 -> Node0x1f3b2e0;
	Node0x1f3b2e0 -> Node0x1f3b350;
	Node0x1f39ce8 -> Node0x1f3b3c0;
	Node0x1f3b3c0 -> Node0x1f3b430;
	Node0x1f3ac58 -> Node0x1f3b4a0;
	Node0x1f39ce8 -> Node0x1f3b510;
	Node0x1f3b4a0 -> Node0x1f3b510;
	Node0x1f39ce8 -> Node0x1f3b580;
	Node0x1f3b2e0 -> Node0x1f3b5f0;
	Node0x1f3ac58 -> Node0x1f3b660;
	Node0x1f39ce8 -> Node0x1f3b660;
	Node0x1f3b660 -> Node0x1f3b6d0;
	Node0x1f3ac58 -> Node0x1f3b740;
	Node0x1f39ce8 -> Node0x1f3b740;
	Node0x1f3b740 -> Node0x1f3b7b0;
	Node0x1f3b7b0 -> Node0x1f3b820;
	Node0x1f3b510 -> Node0x1f3b890;
	Node0x1f39ce8 -> Node0x1f3b900;
	Node0x1f3b4a0 -> Node0x1f3b900;
	Node0x1f3b900 -> Node0x1f3b970;
	Node0x1f3b660 -> Node0x1f3b9e0;
	Node0x1f3b890 -> Node0x1f3b9e0;
	Node0x1f3b9e0 -> Node0x1f3ba50;
	Node0x1f3b430 -> Node0x1f3bac0;
	Node0x1f3ac58 -> Node0x1f3bac0;
	Node0x1f3bac0 -> Node0x1f3bb30;
	Node0x1f3b4a0 -> Node0x1f3bb30;
	Node0x1f3bb30 -> Node0x1f3bba0;
	Node0x1f3b580 -> Node0x1f3bba0;
	Node0x1f3bba0 -> Node0x1f3bc10;
	Node0x1f3b510 -> Node0x1f3bc10;
	Node0x1f3bc10 -> Node0x1f3bc80;
	Node0x1f3b5f0 -> Node0x1f3bc80;
	Node0x1f3bc80 -> Node0x1f3bcf0;
	Node0x1f3b6d0 -> Node0x1f3bcf0;
	Node0x1f3bcf0 -> Node0x1f3bd60;
	Node0x1f3b7b0 -> Node0x1f3bd60;
	Node0x1f3bd60 -> Node0x1f3bdd0;
	Node0x1f3b970 -> Node0x1f3bdd0;
	Node0x1f3bdd0 -> Node0x1f3be40;
	Node0x1f3b820 -> Node0x1f3be40;
	Node0x1f3be40 -> Node0x1f3beb0;
	Node0x1f3ba50 -> Node0x1f3beb0;
	Node0x1f3beb0 -> Node0x1f3bf20;
	Node0x1f3b350 -> Node0x1f3bf20;
	Node0x1f3bf20 -> Node0x1ed99d8;
	Node0x1ed99d8 -> Node0x1f3bfb0;
	Node0x1f398d8 -> Node0x1f3c208;
	Node0x1f39398 -> Node0x1f3c368;
}
