digraph "DFG for'main' function" {
	Node0x13ebe08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x13ebe88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x13ebf18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x13ebf78[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x13ec3f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x13ec4d8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x13ec5d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13ec698[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x13ec748[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13ec9a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x13eca68[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x13ecbc8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x13ecc28[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x13f1410[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x13f1618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13f1778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13f1888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x13f1948[shape=record, label="  ret i32 0"];
	Node0x13ebe08 -> Node0x13ebe88;
	Node0x13ebe88 -> Node0x13ebf18;
	Node0x13ebf18 -> Node0x13ebf78;
	Node0x13ebf78 -> Node0x13ec3f8;
	Node0x13ec3f8 -> Node0x13ec4d8;
	Node0x13ec4d8 -> Node0x13ec5d8;
	Node0x13ec5d8 -> Node0x13ec698;
	Node0x13ec698 -> Node0x13ec748;
	Node0x13ec748 -> Node0x13ec9a8;
	Node0x13ec9a8 -> Node0x13eca68;
	Node0x13eca68 -> Node0x13ecbc8;
	Node0x13ecbc8 -> Node0x13ecc28;
	Node0x13ecc28 -> Node0x13f1410;
	Node0x13f1410 -> Node0x13f1618;
	Node0x13f1618 -> Node0x13f1778;
	Node0x13f1778 -> Node0x13f1888;
	Node0x13f1888 -> Node0x13f1948;
edge [color=red]
	Node0x13ebe08 -> Node0x13ebf78;
	Node0x13ebf78 -> Node0x13ec3f8;
	Node0x13ebe88 -> Node0x13ec4d8;
	Node0x13ec4d8 -> Node0x13ec5d8;
	Node0x13ebf18 -> Node0x13ec698;
	Node0x13ec698 -> Node0x13ec748;
	Node0x13ebe08 -> Node0x13ec9a8;
	Node0x13ebe88 -> Node0x13ec9a8;
	Node0x13ebf18 -> Node0x13ec9a8;
	Node0x13ebe08 -> Node0x13eca68;
	Node0x13ebe88 -> Node0x13ecbc8;
	Node0x13ebf18 -> Node0x13ecc28;
	Node0x13eca68 -> Node0x13f1410;
	Node0x13ecbc8 -> Node0x13f1410;
	Node0x13ecc28 -> Node0x13f1410;
	Node0x13ec698 -> Node0x13f1618;
	Node0x13ec4d8 -> Node0x13f1778;
	Node0x13ebf78 -> Node0x13f1888;
}
