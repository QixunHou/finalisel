digraph "DFG for'main' function" {
	Node0x2209e38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2209eb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2209f48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x220a3a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x220a488[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x220a5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x220a7e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x220a898[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x220b808[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x220be90[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x220bf00[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x220bf70[shape=record, label="  %10 = and i32 %6, %9"];
	Node0x220bfe0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x220c050[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x220c0c0[shape=record, label="  %13 = add i32 %12, %8"];
	Node0x220c130[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x220c1a0[shape=record, label="  %15 = and i32 %7, %6"];
	Node0x220c210[shape=record, label="  %16 = shl i32 %6, 1"];
	Node0x220c280[shape=record, label="  %17 = or i32 %16, 1"];
	Node0x220c2f0[shape=record, label="  %18 = shl i32 %8, 2"];
	Node0x220c360[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0x220c3d0[shape=record, label="  %20 = xor i32 %6, 1073741823"];
	Node0x220c440[shape=record, label="  %21 = and i32 %20, %7"];
	Node0x220c4b0[shape=record, label="  %22 = shl i32 %21, 2"];
	Node0x220c520[shape=record, label="  %23 = mul i32 %15, 3"];
	Node0x220c590[shape=record, label="  %24 = sub i32 1, %6"];
	Node0x220c600[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x220c670[shape=record, label="  %26 = add i32 %25, %15"];
	Node0x220c6e0[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x220c750[shape=record, label="  %28 = add i32 %27, %10"];
	Node0x220c7c0[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x220c830[shape=record, label="  %30 = add i32 %29, %23"];
	Node0x220c8a0[shape=record, label="  %31 = add i32 %30, %19"];
	Node0x220c910[shape=record, label="  %32 = icmp eq i32 %13, %31"];
	Node0x21aa9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x220cbb0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x220ce08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x220cf68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x220d028[shape=record, label="  ret i32 0"];
	Node0x2209e38 -> Node0x2209eb8;
	Node0x2209eb8 -> Node0x2209f48;
	Node0x2209f48 -> Node0x220a3a8;
	Node0x220a3a8 -> Node0x220a488;
	Node0x220a488 -> Node0x220a5a8;
	Node0x220a5a8 -> Node0x220a7e0;
	Node0x220a7e0 -> Node0x220a898;
	Node0x220a898 -> Node0x220b808;
	Node0x220b808 -> Node0x220be90;
	Node0x220be90 -> Node0x220bf00;
	Node0x220bf00 -> Node0x220bf70;
	Node0x220bf70 -> Node0x220bfe0;
	Node0x220bfe0 -> Node0x220c050;
	Node0x220c050 -> Node0x220c0c0;
	Node0x220c0c0 -> Node0x220c130;
	Node0x220c130 -> Node0x220c1a0;
	Node0x220c1a0 -> Node0x220c210;
	Node0x220c210 -> Node0x220c280;
	Node0x220c280 -> Node0x220c2f0;
	Node0x220c2f0 -> Node0x220c360;
	Node0x220c360 -> Node0x220c3d0;
	Node0x220c3d0 -> Node0x220c440;
	Node0x220c440 -> Node0x220c4b0;
	Node0x220c4b0 -> Node0x220c520;
	Node0x220c520 -> Node0x220c590;
	Node0x220c590 -> Node0x220c600;
	Node0x220c600 -> Node0x220c670;
	Node0x220c670 -> Node0x220c6e0;
	Node0x220c6e0 -> Node0x220c750;
	Node0x220c750 -> Node0x220c7c0;
	Node0x220c7c0 -> Node0x220c830;
	Node0x220c830 -> Node0x220c8a0;
	Node0x220c8a0 -> Node0x220c910;
	Node0x220c910 -> Node0x21aa9d8;
	Node0x21aa9d8 -> Node0x220cbb0;
	Node0x220cbb0 -> Node0x220ce08;
	Node0x220ce08 -> Node0x220cf68;
	Node0x220cf68 -> Node0x220d028;
edge [color=red]
	Node0x2209e38 -> Node0x2209f48;
	Node0x2209f48 -> Node0x220a3a8;
	Node0x2209eb8 -> Node0x220a488;
	Node0x220a488 -> Node0x220a5a8;
	Node0x2209e38 -> Node0x220a7e0;
	Node0x2209eb8 -> Node0x220a7e0;
	Node0x2209e38 -> Node0x220a898;
	Node0x2209eb8 -> Node0x220b808;
	Node0x220b808 -> Node0x220be90;
	Node0x220a898 -> Node0x220be90;
	Node0x220b808 -> Node0x220bf00;
	Node0x220a898 -> Node0x220bf70;
	Node0x220bf00 -> Node0x220bf70;
	Node0x220bf70 -> Node0x220bfe0;
	Node0x220bfe0 -> Node0x220c050;
	Node0x220c050 -> Node0x220c0c0;
	Node0x220be90 -> Node0x220c0c0;
	Node0x220b808 -> Node0x220c130;
	Node0x220a898 -> Node0x220c130;
	Node0x220b808 -> Node0x220c1a0;
	Node0x220a898 -> Node0x220c1a0;
	Node0x220a898 -> Node0x220c210;
	Node0x220c210 -> Node0x220c280;
	Node0x220be90 -> Node0x220c2f0;
	Node0x220c2f0 -> Node0x220c360;
	Node0x220a898 -> Node0x220c3d0;
	Node0x220c3d0 -> Node0x220c440;
	Node0x220b808 -> Node0x220c440;
	Node0x220c440 -> Node0x220c4b0;
	Node0x220c1a0 -> Node0x220c520;
	Node0x220a898 -> Node0x220c590;
	Node0x220c590 -> Node0x220c600;
	Node0x220c130 -> Node0x220c600;
	Node0x220c600 -> Node0x220c670;
	Node0x220c1a0 -> Node0x220c670;
	Node0x220c670 -> Node0x220c6e0;
	Node0x220c280 -> Node0x220c6e0;
	Node0x220c6e0 -> Node0x220c750;
	Node0x220bf70 -> Node0x220c750;
	Node0x220c750 -> Node0x220c7c0;
	Node0x220c4b0 -> Node0x220c7c0;
	Node0x220c7c0 -> Node0x220c830;
	Node0x220c520 -> Node0x220c830;
	Node0x220c830 -> Node0x220c8a0;
	Node0x220c360 -> Node0x220c8a0;
	Node0x220c0c0 -> Node0x220c910;
	Node0x220c8a0 -> Node0x220c910;
	Node0x220c910 -> Node0x21aa9d8;
	Node0x21aa9d8 -> Node0x220cbb0;
	Node0x220a488 -> Node0x220ce08;
	Node0x2209f48 -> Node0x220cf68;
}
