digraph "DFG for'main' function" {
	Node0x223da78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x223daf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x223db88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x223dbe8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x223e068[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x223e148[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x223e248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x223e308[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x223e3b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x223e618[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x223e6d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x223e838[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x223e898[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x22422f0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x22424f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2242658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2242768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2242828[shape=record, label="  ret i32 0"];
	Node0x223da78 -> Node0x223daf8;
	Node0x223daf8 -> Node0x223db88;
	Node0x223db88 -> Node0x223dbe8;
	Node0x223dbe8 -> Node0x223e068;
	Node0x223e068 -> Node0x223e148;
	Node0x223e148 -> Node0x223e248;
	Node0x223e248 -> Node0x223e308;
	Node0x223e308 -> Node0x223e3b8;
	Node0x223e3b8 -> Node0x223e618;
	Node0x223e618 -> Node0x223e6d8;
	Node0x223e6d8 -> Node0x223e838;
	Node0x223e838 -> Node0x223e898;
	Node0x223e898 -> Node0x22422f0;
	Node0x22422f0 -> Node0x22424f8;
	Node0x22424f8 -> Node0x2242658;
	Node0x2242658 -> Node0x2242768;
	Node0x2242768 -> Node0x2242828;
edge [color=red]
	Node0x223da78 -> Node0x223dbe8;
	Node0x223dbe8 -> Node0x223e068;
	Node0x223daf8 -> Node0x223e148;
	Node0x223e148 -> Node0x223e248;
	Node0x223db88 -> Node0x223e308;
	Node0x223e308 -> Node0x223e3b8;
	Node0x223da78 -> Node0x223e618;
	Node0x223daf8 -> Node0x223e618;
	Node0x223db88 -> Node0x223e618;
	Node0x223da78 -> Node0x223e6d8;
	Node0x223daf8 -> Node0x223e838;
	Node0x223db88 -> Node0x223e898;
	Node0x223e6d8 -> Node0x22422f0;
	Node0x223e838 -> Node0x22422f0;
	Node0x223e898 -> Node0x22422f0;
	Node0x223e308 -> Node0x22424f8;
	Node0x223e148 -> Node0x2242658;
	Node0x223dbe8 -> Node0x2242768;
}
