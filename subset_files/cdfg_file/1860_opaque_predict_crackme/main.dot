digraph "DFG for'main' function" {
	Node0xfbbe38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xfbbeb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xfbbf48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xfbc3a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xfbc488[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xfbc5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfbc7e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xfbc898[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xfbd808[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xfbde90[shape=record, label="  %8 = add i32 %6, 1"];
	Node0xfbdf00[shape=record, label="  %9 = or i32 %7, %6"];
	Node0xfbdf70[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0xfbdfe0[shape=record, label="  %11 = and i32 %7, %6"];
	Node0xfbe050[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0xfbe0c0[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0xfbe130[shape=record, label="  %14 = or i32 %6, %13"];
	Node0xfbe1a0[shape=record, label="  %15 = and i32 %6, %13"];
	Node0xfbe210[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0xfbe280[shape=record, label="  %17 = xor i32 %9, -1"];
	Node0xfbe2f0[shape=record, label="  %18 = xor i32 %14, -1"];
	Node0xfbe360[shape=record, label="  %19 = shl i32 %15, 2"];
	Node0xfbe3d0[shape=record, label="  %20 = shl i32 %11, 1"];
	Node0xfbe440[shape=record, label="  %21 = add i32 %18, %17"];
	Node0xfbe4b0[shape=record, label="  %22 = mul i32 %21, -3"];
	Node0xfbe520[shape=record, label="  %23 = add i32 %10, %6"];
	Node0xfbe590[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0xfbe600[shape=record, label="  %25 = sub i32 1, %9"];
	Node0xfbe670[shape=record, label="  %26 = add i32 %25, %12"];
	Node0xfbe6e0[shape=record, label="  %27 = add i32 %26, %14"];
	Node0xfbe750[shape=record, label="  %28 = add i32 %27, %16"];
	Node0xfbe7c0[shape=record, label="  %29 = sub i32 %28, %19"];
	Node0xfbe830[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0xfbe8a0[shape=record, label="  %31 = add i32 %30, %22"];
	Node0xfbe910[shape=record, label="  %32 = add i32 %31, %24"];
	Node0xfbeb90[shape=record, label="  %33 = icmp eq i32 %8, %32"];
	Node0xf5c9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xfbec20[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xfbee78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfbefd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xfbf098[shape=record, label="  ret i32 0"];
	Node0xfbbe38 -> Node0xfbbeb8;
	Node0xfbbeb8 -> Node0xfbbf48;
	Node0xfbbf48 -> Node0xfbc3a8;
	Node0xfbc3a8 -> Node0xfbc488;
	Node0xfbc488 -> Node0xfbc5a8;
	Node0xfbc5a8 -> Node0xfbc7e0;
	Node0xfbc7e0 -> Node0xfbc898;
	Node0xfbc898 -> Node0xfbd808;
	Node0xfbd808 -> Node0xfbde90;
	Node0xfbde90 -> Node0xfbdf00;
	Node0xfbdf00 -> Node0xfbdf70;
	Node0xfbdf70 -> Node0xfbdfe0;
	Node0xfbdfe0 -> Node0xfbe050;
	Node0xfbe050 -> Node0xfbe0c0;
	Node0xfbe0c0 -> Node0xfbe130;
	Node0xfbe130 -> Node0xfbe1a0;
	Node0xfbe1a0 -> Node0xfbe210;
	Node0xfbe210 -> Node0xfbe280;
	Node0xfbe280 -> Node0xfbe2f0;
	Node0xfbe2f0 -> Node0xfbe360;
	Node0xfbe360 -> Node0xfbe3d0;
	Node0xfbe3d0 -> Node0xfbe440;
	Node0xfbe440 -> Node0xfbe4b0;
	Node0xfbe4b0 -> Node0xfbe520;
	Node0xfbe520 -> Node0xfbe590;
	Node0xfbe590 -> Node0xfbe600;
	Node0xfbe600 -> Node0xfbe670;
	Node0xfbe670 -> Node0xfbe6e0;
	Node0xfbe6e0 -> Node0xfbe750;
	Node0xfbe750 -> Node0xfbe7c0;
	Node0xfbe7c0 -> Node0xfbe830;
	Node0xfbe830 -> Node0xfbe8a0;
	Node0xfbe8a0 -> Node0xfbe910;
	Node0xfbe910 -> Node0xfbeb90;
	Node0xfbeb90 -> Node0xf5c9d8;
	Node0xf5c9d8 -> Node0xfbec20;
	Node0xfbec20 -> Node0xfbee78;
	Node0xfbee78 -> Node0xfbefd8;
	Node0xfbefd8 -> Node0xfbf098;
edge [color=red]
	Node0xfbbe38 -> Node0xfbbf48;
	Node0xfbbf48 -> Node0xfbc3a8;
	Node0xfbbeb8 -> Node0xfbc488;
	Node0xfbc488 -> Node0xfbc5a8;
	Node0xfbbe38 -> Node0xfbc7e0;
	Node0xfbbeb8 -> Node0xfbc7e0;
	Node0xfbbe38 -> Node0xfbc898;
	Node0xfbbeb8 -> Node0xfbd808;
	Node0xfbc898 -> Node0xfbde90;
	Node0xfbd808 -> Node0xfbdf00;
	Node0xfbc898 -> Node0xfbdf00;
	Node0xfbd808 -> Node0xfbdf70;
	Node0xfbc898 -> Node0xfbdf70;
	Node0xfbd808 -> Node0xfbdfe0;
	Node0xfbc898 -> Node0xfbdfe0;
	Node0xfbdfe0 -> Node0xfbe050;
	Node0xfbd808 -> Node0xfbe0c0;
	Node0xfbc898 -> Node0xfbe130;
	Node0xfbe0c0 -> Node0xfbe130;
	Node0xfbc898 -> Node0xfbe1a0;
	Node0xfbe0c0 -> Node0xfbe1a0;
	Node0xfbe1a0 -> Node0xfbe210;
	Node0xfbdf00 -> Node0xfbe280;
	Node0xfbe130 -> Node0xfbe2f0;
	Node0xfbe1a0 -> Node0xfbe360;
	Node0xfbdfe0 -> Node0xfbe3d0;
	Node0xfbe2f0 -> Node0xfbe440;
	Node0xfbe280 -> Node0xfbe440;
	Node0xfbe440 -> Node0xfbe4b0;
	Node0xfbdf70 -> Node0xfbe520;
	Node0xfbc898 -> Node0xfbe520;
	Node0xfbe520 -> Node0xfbe590;
	Node0xfbdf00 -> Node0xfbe600;
	Node0xfbe600 -> Node0xfbe670;
	Node0xfbe050 -> Node0xfbe670;
	Node0xfbe670 -> Node0xfbe6e0;
	Node0xfbe130 -> Node0xfbe6e0;
	Node0xfbe6e0 -> Node0xfbe750;
	Node0xfbe210 -> Node0xfbe750;
	Node0xfbe750 -> Node0xfbe7c0;
	Node0xfbe360 -> Node0xfbe7c0;
	Node0xfbe7c0 -> Node0xfbe830;
	Node0xfbe3d0 -> Node0xfbe830;
	Node0xfbe830 -> Node0xfbe8a0;
	Node0xfbe4b0 -> Node0xfbe8a0;
	Node0xfbe8a0 -> Node0xfbe910;
	Node0xfbe590 -> Node0xfbe910;
	Node0xfbde90 -> Node0xfbeb90;
	Node0xfbe910 -> Node0xfbeb90;
	Node0xfbeb90 -> Node0xf5c9d8;
	Node0xf5c9d8 -> Node0xfbec20;
	Node0xfbc488 -> Node0xfbee78;
	Node0xfbbf48 -> Node0xfbefd8;
}
