digraph "DFG for'main' function" {
	Node0x1ae1b18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ae1b98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ae1c28[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1ae2088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ae2168[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1ae2288[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ae24c0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1ae2578[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ae34e8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ae3b70[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x1ae3be0[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x1ae3c50[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x1ae3cc0[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1ae3d30[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x1ae3da0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1ae3e10[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1ae3e80[shape=record, label="  %15 = shl i32 %8, 1"];
	Node0x1ae3ef0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x1ae3f60[shape=record, label="  %17 = xor i32 %6, -1"];
	Node0x1ae3fd0[shape=record, label="  %18 = and i32 %7, %17"];
	Node0x1ae4040[shape=record, label="  %19 = mul i32 %10, -2"];
	Node0x1ae40b0[shape=record, label="  %20 = sub i32 1, %6"];
	Node0x1ae4120[shape=record, label="  %21 = add i32 %20, %11"];
	Node0x1ae4190[shape=record, label="  %22 = sub i32 %21, %7"];
	Node0x1ae4200[shape=record, label="  %23 = add i32 %22, %18"];
	Node0x1ae4270[shape=record, label="  %24 = add i32 %23, %13"];
	Node0x1ae42e0[shape=record, label="  %25 = add i32 %24, %19"];
	Node0x1ae4350[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x1ae43c0[shape=record, label="  %27 = sub i32 %26, %16"];
	Node0x1ae4430[shape=record, label="  %28 = icmp eq i32 %27, %9"];
	Node0x1a829d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ae44c0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x1ae4718[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ae4878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ae4938[shape=record, label="  ret i32 0"];
	Node0x1ae1b18 -> Node0x1ae1b98;
	Node0x1ae1b98 -> Node0x1ae1c28;
	Node0x1ae1c28 -> Node0x1ae2088;
	Node0x1ae2088 -> Node0x1ae2168;
	Node0x1ae2168 -> Node0x1ae2288;
	Node0x1ae2288 -> Node0x1ae24c0;
	Node0x1ae24c0 -> Node0x1ae2578;
	Node0x1ae2578 -> Node0x1ae34e8;
	Node0x1ae34e8 -> Node0x1ae3b70;
	Node0x1ae3b70 -> Node0x1ae3be0;
	Node0x1ae3be0 -> Node0x1ae3c50;
	Node0x1ae3c50 -> Node0x1ae3cc0;
	Node0x1ae3cc0 -> Node0x1ae3d30;
	Node0x1ae3d30 -> Node0x1ae3da0;
	Node0x1ae3da0 -> Node0x1ae3e10;
	Node0x1ae3e10 -> Node0x1ae3e80;
	Node0x1ae3e80 -> Node0x1ae3ef0;
	Node0x1ae3ef0 -> Node0x1ae3f60;
	Node0x1ae3f60 -> Node0x1ae3fd0;
	Node0x1ae3fd0 -> Node0x1ae4040;
	Node0x1ae4040 -> Node0x1ae40b0;
	Node0x1ae40b0 -> Node0x1ae4120;
	Node0x1ae4120 -> Node0x1ae4190;
	Node0x1ae4190 -> Node0x1ae4200;
	Node0x1ae4200 -> Node0x1ae4270;
	Node0x1ae4270 -> Node0x1ae42e0;
	Node0x1ae42e0 -> Node0x1ae4350;
	Node0x1ae4350 -> Node0x1ae43c0;
	Node0x1ae43c0 -> Node0x1ae4430;
	Node0x1ae4430 -> Node0x1a829d8;
	Node0x1a829d8 -> Node0x1ae44c0;
	Node0x1ae44c0 -> Node0x1ae4718;
	Node0x1ae4718 -> Node0x1ae4878;
	Node0x1ae4878 -> Node0x1ae4938;
edge [color=red]
	Node0x1ae1b18 -> Node0x1ae1c28;
	Node0x1ae1c28 -> Node0x1ae2088;
	Node0x1ae1b98 -> Node0x1ae2168;
	Node0x1ae2168 -> Node0x1ae2288;
	Node0x1ae1b18 -> Node0x1ae24c0;
	Node0x1ae1b98 -> Node0x1ae24c0;
	Node0x1ae1b18 -> Node0x1ae2578;
	Node0x1ae1b98 -> Node0x1ae34e8;
	Node0x1ae34e8 -> Node0x1ae3b70;
	Node0x1ae2578 -> Node0x1ae3b70;
	Node0x1ae3b70 -> Node0x1ae3be0;
	Node0x1ae34e8 -> Node0x1ae3c50;
	Node0x1ae2578 -> Node0x1ae3c50;
	Node0x1ae34e8 -> Node0x1ae3cc0;
	Node0x1ae2578 -> Node0x1ae3d30;
	Node0x1ae3cc0 -> Node0x1ae3d30;
	Node0x1ae3d30 -> Node0x1ae3da0;
	Node0x1ae3da0 -> Node0x1ae3e10;
	Node0x1ae3b70 -> Node0x1ae3e80;
	Node0x1ae3e80 -> Node0x1ae3ef0;
	Node0x1ae2578 -> Node0x1ae3f60;
	Node0x1ae34e8 -> Node0x1ae3fd0;
	Node0x1ae3f60 -> Node0x1ae3fd0;
	Node0x1ae3c50 -> Node0x1ae4040;
	Node0x1ae2578 -> Node0x1ae40b0;
	Node0x1ae40b0 -> Node0x1ae4120;
	Node0x1ae3cc0 -> Node0x1ae4120;
	Node0x1ae4120 -> Node0x1ae4190;
	Node0x1ae34e8 -> Node0x1ae4190;
	Node0x1ae4190 -> Node0x1ae4200;
	Node0x1ae3fd0 -> Node0x1ae4200;
	Node0x1ae4200 -> Node0x1ae4270;
	Node0x1ae3da0 -> Node0x1ae4270;
	Node0x1ae4270 -> Node0x1ae42e0;
	Node0x1ae4040 -> Node0x1ae42e0;
	Node0x1ae42e0 -> Node0x1ae4350;
	Node0x1ae3e10 -> Node0x1ae4350;
	Node0x1ae4350 -> Node0x1ae43c0;
	Node0x1ae3ef0 -> Node0x1ae43c0;
	Node0x1ae43c0 -> Node0x1ae4430;
	Node0x1ae3be0 -> Node0x1ae4430;
	Node0x1ae4430 -> Node0x1a829d8;
	Node0x1a829d8 -> Node0x1ae44c0;
	Node0x1ae2168 -> Node0x1ae4718;
	Node0x1ae1c28 -> Node0x1ae4878;
}
