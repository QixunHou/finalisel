digraph "DFG for'main' function" {
	Node0x14a6348[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14a63c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14a6458[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14a64b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x14ad2a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14ad388[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x14ad488[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14ad548[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x14ad5f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14ad858[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x14ad918[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14ae888[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14aeef8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14aeff0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x14af1f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14af358[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14af468[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14af528[shape=record, label="  ret i32 0"];
	Node0x14a6348 -> Node0x14a63c8;
	Node0x14a63c8 -> Node0x14a6458;
	Node0x14a6458 -> Node0x14a64b8;
	Node0x14a64b8 -> Node0x14ad2a8;
	Node0x14ad2a8 -> Node0x14ad388;
	Node0x14ad388 -> Node0x14ad488;
	Node0x14ad488 -> Node0x14ad548;
	Node0x14ad548 -> Node0x14ad5f8;
	Node0x14ad5f8 -> Node0x14ad858;
	Node0x14ad858 -> Node0x14ad918;
	Node0x14ad918 -> Node0x14ae888;
	Node0x14ae888 -> Node0x14aeef8;
	Node0x14aeef8 -> Node0x14aeff0;
	Node0x14aeff0 -> Node0x14af1f8;
	Node0x14af1f8 -> Node0x14af358;
	Node0x14af358 -> Node0x14af468;
	Node0x14af468 -> Node0x14af528;
edge [color=red]
	Node0x14a6348 -> Node0x14a64b8;
	Node0x14a64b8 -> Node0x14ad2a8;
	Node0x14a63c8 -> Node0x14ad388;
	Node0x14ad388 -> Node0x14ad488;
	Node0x14a6458 -> Node0x14ad548;
	Node0x14ad548 -> Node0x14ad5f8;
	Node0x14a6348 -> Node0x14ad858;
	Node0x14a63c8 -> Node0x14ad858;
	Node0x14a6458 -> Node0x14ad858;
	Node0x14a6348 -> Node0x14ad918;
	Node0x14a63c8 -> Node0x14ae888;
	Node0x14a6458 -> Node0x14aeef8;
	Node0x14ad918 -> Node0x14aeff0;
	Node0x14ae888 -> Node0x14aeff0;
	Node0x14aeef8 -> Node0x14aeff0;
	Node0x14ad548 -> Node0x14af1f8;
	Node0x14ad388 -> Node0x14af358;
	Node0x14a64b8 -> Node0x14af468;
}
