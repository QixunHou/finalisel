; ModuleID = '../.././c_source_file/1929_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1929_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = or i32 %7, %0
  %9 = xor i32 %1, %0
  %10 = and i32 %8, %9
  %11 = mul i32 %10, -2
  %12 = xor i32 %3, -1
  %13 = and i32 %12, %4
  %14 = xor i32 %13, -1
  %15 = mul i32 %14, -3
  %16 = add i32 %15, %11
  %17 = xor i32 %4, -1
  %18 = xor i32 %5, %3
  %19 = xor i32 %18, -1
  %20 = and i32 %19, %17
  %21 = add i32 %16, %20
  %22 = xor i32 %1, -1
  %23 = or i32 %22, %0
  %24 = and i32 %23, %2
  %25 = and i32 %7, %1
  %26 = xor i32 %25, -1
  %27 = xor i32 %26, %0
  %28 = xor i32 %9, -1
  %29 = and i32 %28, %2
  %30 = xor i32 %2, %1
  %31 = xor i32 %30, -1
  %32 = or i32 %31, %0
  %33 = and i32 %7, %0
  %34 = xor i32 %33, -1
  %35 = and i32 %34, %28
  %36 = xor i32 %0, -1
  %37 = and i32 %2, %1
  %38 = and i32 %37, %36
  %39 = or i32 %2, %1
  %40 = and i32 %39, %0
  %41 = or i32 %38, %40
  %42 = and i32 %37, %0
  %43 = and i32 %39, %36
  %44 = xor i32 %42, -1
  %45 = xor i32 %43, %44
  %46 = and i32 %22, %0
  %47 = xor i32 %46, -1
  %48 = xor i32 %2, %0
  %49 = and i32 %48, %47
  %50 = and i32 %9, %7
  %51 = and i32 %2, %0
  %52 = xor i32 %51, -1
  %53 = and i32 %52, %1
  %54 = or i32 %2, %0
  %55 = xor i32 %54, -1
  %56 = or i32 %55, %28
  %57 = xor i32 %30, %0
  %58 = xor i32 %57, -1
  %59 = or i32 %42, %58
  %60 = or i32 %48, %28
  %61 = xor i32 %39, -1
  %62 = or i32 %51, %61
  %63 = xor i32 %42, %57
  %64 = or i32 %7, %1
  %65 = xor i32 %64, %0
  %66 = xor i32 %23, -1
  %67 = or i32 %48, %66
  %68 = xor i32 %48, -1
  %69 = and i32 %68, %1
  %70 = or i32 %51, %28
  %71 = and i32 %64, %36
  %72 = xor i32 %52, %1
  %73 = or i32 %39, %0
  %74 = and i32 %9, %34
  %75 = and i32 %1, %0
  %76 = or i32 %75, %2
  %77 = xor i32 %34, %1
  %78 = or i32 %1, %0
  %79 = and i32 %78, %2
  %80 = and i32 %22, %2
  %81 = and i32 %80, %0
  %82 = or i32 %30, %0
  %83 = xor i32 %82, 2147483647
  %84 = or i32 %83, %81
  %85 = or i32 %48, %1
  %86 = add i32 %30, 1
  %87 = xor i32 %8, -1
  %88 = or i32 %9, %87
  %89 = and i32 %80, %36
  %90 = or i32 %22, %2
  %91 = and i32 %90, %0
  %92 = xor i32 %91, 2147483647
  %93 = xor i32 %92, %89
  %94 = and i32 %30, %36
  %95 = xor i32 %54, %1
  %96 = xor i32 %64, -1
  %97 = or i32 %75, %96
  %98 = xor i32 %78, -1
  %99 = or i32 %98, %2
  %100 = and i32 %30, %47
  %101 = and i32 %78, %68
  %102 = xor i32 %51, %78
  %103 = or i32 %33, %96
  %104 = or i32 %33, %22
  %105 = add i32 %1, 1
  %106 = or i32 %7, %98
  %107 = add i32 %23, 1
  %108 = or i32 %30, %36
  %109 = and i32 %90, %36
  %110 = or i32 %81, %109
  %111 = xor i32 %33, %1
  %112 = and i32 %34, %1
  %113 = xor i32 %94, 2147483647
  %114 = xor i32 %113, %42
  %115 = shl i32 %114, 1
  %116 = or i32 %33, %9
  %117 = and i32 %8, %1
  %118 = xor i32 %46, %2
  %119 = shl i32 %54, 1
  %120 = and i32 %48, %23
  %121 = or i32 %87, %22
  %122 = xor i32 %89, %108
  %123 = and i32 %30, %0
  %124 = or i32 %38, %123
  %125 = and i32 %54, %22
  %126 = xor i32 %37, -1
  %127 = xor i32 %81, %58
  %128 = shl i32 %43, 1
  %129 = and i32 %48, %9
  %130 = xor i32 %23, %2
  %131 = and i32 %78, %7
  %132 = xor i32 %47, %2
  %133 = and i32 %48, %28
  %134 = and i32 %26, %0
  %135 = shl i32 %23, 1
  %136 = xor i32 %39, %75
  %137 = xor i32 %75, -1
  %138 = and i32 %31, %137
  %139 = shl i32 %138, 1
  %140 = xor i32 %75, %2
  %141 = xor i32 %46, %126
  %142 = or i32 %46, %68
  %143 = and i32 %47, %2
  %144 = and i32 %48, %22
  %145 = and i32 %26, %36
  %146 = xor i32 %39, %36
  %147 = xor i32 %146, %42
  %148 = xor i32 %126, %0
  %149 = and i32 %23, %31
  %150 = add i32 %46, 1
  %151 = and i32 %30, %78
  %152 = or i32 %9, %2
  %153 = xor i32 %123, -1
  %154 = xor i32 %38, %153
  %155 = or i32 %42, %43
  %156 = or i32 %87, %28
  %157 = xor i32 %108, -1
  %158 = or i32 %89, %157
  %159 = xor i32 %137, %2
  %160 = or i32 %37, %0
  %161 = xor i32 %33, %64
  %162 = or i32 %51, %98
  %163 = or i32 %66, %2
  %164 = and i32 %64, %0
  %165 = or i32 %68, %98
  %166 = or i32 %31, %36
  %167 = shl i32 %166, 1
  %168 = and i32 %54, %28
  %169 = or i32 %48, %98
  %170 = or i32 %48, %9
  %171 = and i32 %30, %137
  %172 = shl i32 %171, 1
  %173 = and i32 %48, %78
  %174 = or i32 %9, %68
  %175 = xor i32 %33, %126
  %176 = or i32 %42, %94
  %177 = and i32 %126, %36
  %178 = xor i32 %31, %0
  %179 = and i32 %7, %137
  %180 = xor i32 %55, %1
  %181 = or i32 %26, %0
  %182 = add i32 %51, 1
  %183 = xor i32 %98, %2
  %184 = or i32 %89, %91
  %185 = and i32 %61, %36
  %186 = mul i32 %185, -12
  %187 = and i32 %25, %36
  %188 = mul i32 %187, -9
  %189 = and i32 %61, %0
  %190 = and i32 %25, %0
  %191 = mul i32 %190, -13
  %192 = and i32 %96, %36
  %193 = mul i32 %192, -19
  %194 = shl i32 %38, 2
  %195 = and i32 %96, %0
  %196 = mul i32 %195, -11
  %197 = or i32 %12, %4
  %198 = xor i32 %197, -1
  %199 = xor i32 %198, %5
  %200 = xor i32 %5, -1
  %201 = and i32 %200, %4
  %202 = xor i32 %201, -1
  %203 = xor i32 %4, %3
  %204 = and i32 %203, %202
  %205 = or i32 %198, %5
  %206 = or i32 %18, %13
  %207 = and i32 %5, %4
  %208 = xor i32 %207, -1
  %209 = xor i32 %203, -1
  %210 = and i32 %208, %209
  %211 = and i32 %200, %3
  %212 = xor i32 %211, -1
  %213 = xor i32 %212, %4
  %214 = xor i32 %19, %4
  %215 = and i32 %5, %3
  %216 = and i32 %215, %4
  %217 = xor i32 %18, %4
  %218 = xor i32 %217, -1
  %219 = or i32 %216, %218
  %220 = or i32 %200, %4
  %221 = and i32 %220, %12
  %222 = xor i32 %13, %5
  %223 = xor i32 %5, %4
  %224 = xor i32 %223, -1
  %225 = or i32 %13, %224
  %226 = xor i32 %211, %4
  %227 = or i32 %4, %3
  %228 = xor i32 %227, -1
  %229 = or i32 %207, %228
  %230 = or i32 %212, %17
  %231 = and i32 %12, %5
  %232 = and i32 %231, %4
  %233 = or i32 %12, %5
  %234 = xor i32 %233, %17
  %235 = xor i32 %234, %232
  %236 = and i32 %202, %3
  %237 = and i32 %233, %17
  %238 = or i32 %232, %237
  %239 = or i32 %5, %3
  %240 = and i32 %212, %4
  %241 = xor i32 %220, -1
  %242 = or i32 %241, %209
  %243 = shl i32 %242, 1
  %244 = or i32 %200, %228
  %245 = and i32 %18, %227
  %246 = shl i32 %217, 1
  %247 = or i32 %228, %5
  %248 = xor i32 %201, %3
  %249 = and i32 %18, %14
  %250 = and i32 %223, %209
  %251 = xor i32 %215, -1
  %252 = or i32 %251, %4
  %253 = and i32 %4, %3
  %254 = xor i32 %239, %253
  %255 = and i32 %18, %17
  %256 = and i32 %231, %17
  %257 = and i32 %233, %4
  %258 = or i32 %256, %257
  %259 = and i32 %208, %3
  %260 = or i32 %18, %4
  %261 = xor i32 %232, %260
  %262 = add i32 %215, 1
  %263 = or i32 %18, %228
  %264 = and i32 %215, %17
  %265 = and i32 %18, %4
  %266 = xor i32 %265, 2147483647
  %267 = xor i32 %266, %264
  %268 = shl i32 %267, 1
  %269 = and i32 %227, %19
  %270 = or i32 %207, %3
  %271 = and i32 %200, %14
  %272 = or i32 %18, %17
  %273 = and i32 %224, %3
  %274 = and i32 %208, %12
  %275 = add i32 %223, 1
  %276 = or i32 %207, %12
  %277 = or i32 %5, %4
  %278 = and i32 %277, %209
  %279 = xor i32 %208, %3
  %280 = and i32 %224, %12
  %281 = xor i32 %232, -1
  %282 = xor i32 %237, %281
  %283 = or i32 %203, %224
  %284 = shl i32 %283, 1
  %285 = xor i32 %216, %217
  %286 = or i32 %223, %203
  %287 = or i32 %224, %198
  %288 = or i32 %223, %198
  %289 = and i32 %223, %203
  %290 = and i32 %239, %17
  %291 = or i32 %200, %3
  %292 = and i32 %291, %17
  %293 = xor i32 %13, %251
  %294 = shl i32 %293, 1
  %295 = xor i32 %14, %5
  %296 = and i32 %220, %3
  %297 = and i32 %203, %224
  %298 = xor i32 %277, -1
  %299 = or i32 %253, %298
  %300 = or i32 %223, %209
  %301 = xor i32 %207, %212
  %302 = or i32 %251, %17
  %303 = xor i32 %232, %218
  %304 = or i32 %203, %241
  %305 = xor i32 %277, %3
  %306 = and i32 %197, %5
  %307 = or i32 %241, %12
  %308 = xor i32 %239, -1
  %309 = or i32 %253, %308
  %310 = and i32 %212, %17
  %311 = and i32 %19, %4
  %312 = or i32 %203, %298
  %313 = and i32 %203, %200
  %314 = xor i32 %207, %3
  %315 = and i32 %223, %197
  %316 = and i32 %223, %227
  %317 = or i32 %308, %17
  %318 = or i32 %212, %4
  %319 = xor i32 %241, %3
  %320 = xor i32 %253, -1
  %321 = and i32 %223, %320
  %322 = or i32 %201, %215
  %323 = or i32 %253, %5
  %324 = xor i32 %253, %5
  %325 = and i32 %277, %12
  %326 = and i32 %14, %5
  %327 = or i32 %224, %209
  %328 = xor i32 %13, %212
  %329 = xor i32 %308, %4
  %330 = and i32 %18, %197
  %331 = shl i32 %330, 1
  %332 = xor i32 %257, -1
  %333 = xor i32 %256, %332
  %334 = and i32 %320, %5
  %335 = or i32 %200, %209
  %336 = or i32 %253, %19
  %337 = xor i32 %291, %253
  %338 = shl i32 %337, 1
  %339 = and i32 %239, %4
  %340 = or i32 %264, %339
  %341 = or i32 %291, %17
  %342 = and i32 %220, %209
  %343 = shl i32 %18, 1
  %344 = and i32 %224, %14
  %345 = and i32 %223, %14
  %346 = xor i32 %239, %4
  %347 = or i32 %207, %203
  %348 = xor i32 %207, %227
  %349 = xor i32 %320, %5
  %350 = or i32 %19, %17
  %351 = or i32 %253, %241
  %352 = shl i32 %228, 1
  %353 = xor i32 %291, -1
  %354 = or i32 %353, %4
  %355 = xor i32 %260, -1
  %356 = or i32 %232, %355
  %357 = or i32 %239, %17
  %358 = shl i32 %357, 1
  %359 = or i32 %201, %3
  %360 = shl i32 %359, 1
  %361 = and i32 %223, %12
  %362 = or i32 %224, %3
  %363 = or i32 %253, %224
  %364 = or i32 %201, %209
  %365 = xor i32 %256, %272
  %366 = and i32 %277, %203
  %367 = and i32 %251, %17
  %368 = and i32 %220, %203
  %369 = xor i32 %298, %3
  %370 = or i32 %264, %265
  %371 = and i32 %223, %3
  %372 = and i32 %200, %320
  %373 = xor i32 %277, %253
  %374 = or i32 %203, %5
  %375 = or i32 %253, %200
  %376 = and i32 %19, %14
  %377 = and i32 %197, %200
  %378 = and i32 %203, %208
  %379 = xor i32 %207, %197
  %380 = or i32 %216, %255
  %381 = xor i32 %207, %239
  %382 = or i32 %209, %5
  %383 = shl i32 %353, 1
  %384 = xor i32 %251, %4
  %385 = and i32 %224, %209
  %386 = and i32 %277, %3
  %387 = or i32 %241, %3
  %388 = xor i32 %216, -1
  %389 = xor i32 %290, %388
  %390 = or i32 %201, %353
  %391 = shl i32 %390, 1
  %392 = and i32 %203, %5
  %393 = or i32 %223, %3
  %394 = or i32 %211, %4
  %395 = or i32 %298, %12
  %396 = xor i32 %220, %3
  %397 = and i32 %19, %320
  %398 = or i32 %216, %346
  %399 = xor i32 %339, -1
  %400 = xor i32 %264, %399
  %401 = or i32 %215, %17
  %402 = shl i32 %401, 1
  %403 = or i32 %223, %253
  %404 = or i32 %13, %200
  %405 = xor i32 %353, %4
  %406 = add i32 %18, 1
  %407 = or i32 %19, %228
  %408 = xor i32 %201, %291
  %409 = shl i32 %408, 1
  %410 = and i32 %209, %5
  %411 = or i32 %353, %17
  %412 = xor i32 %291, %4
  %413 = shl i32 %412, 1
  %414 = xor i32 %215, %4
  %415 = or i32 %207, %209
  %416 = shl i32 %415, 1
  %417 = or i32 %207, %211
  %418 = xor i32 %417, -1
  %419 = xor i32 %227, %5
  %420 = xor i32 %272, -1
  %421 = or i32 %256, %420
  %422 = add i32 %207, 1
  %423 = and i32 %202, %12
  %424 = or i32 %207, %198
  %425 = xor i32 %197, %5
  %426 = or i32 %201, %12
  %427 = xor i32 %202, %3
  %428 = or i32 %215, %13
  %429 = or i32 %239, %4
  %430 = or i32 %298, %209
  %431 = or i32 %13, %5
  %432 = and i32 %197, %224
  %433 = or i32 %223, %12
  %434 = and i32 %251, %4
  %435 = or i32 %232, %217
  %436 = or i32 %308, %4
  %437 = and i32 %227, %5
  %438 = or i32 %211, %13
  %439 = or i32 %216, %290
  %440 = and i32 %291, %4
  %441 = or i32 %201, %203
  %442 = and i32 %200, %209
  %443 = shl i32 %442, 2
  %444 = xor i32 %346, %388
  %445 = or i32 %223, %228
  %446 = or i32 %19, %4
  %447 = or i32 %224, %228
  %448 = xor i32 %201, %251
  %449 = or i32 %18, %198
  %450 = or i32 %215, %4
  %451 = or i32 %253, %353
  %452 = or i32 %224, %12
  %453 = or i32 %211, %17
  %454 = and i32 %197, %19
  %455 = or i32 %298, %3
  %456 = and i32 %224, %320
  %457 = shl i32 %456, 1
  %458 = or i32 %200, %198
  %459 = shl i32 %458, 1
  %460 = and i32 %308, %17
  %461 = and i32 %308, %4
  %462 = mul i32 %461, -21
  %463 = and i32 %211, %4
  %464 = mul i32 %463, -14
  %465 = and i32 %353, %17
  %466 = mul i32 %465, -15
  %467 = mul i32 %264, -23
  %468 = and i32 %353, %4
  %469 = mul i32 %468, -17
  %470 = mul i32 %216, 6
  %471 = add i32 %131, %126
  %472 = add i32 %471, %76
  %473 = add i32 %472, %174
  %474 = add i32 %473, %168
  %475 = add i32 %474, %162
  %476 = add i32 %475, %149
  %477 = add i32 %476, %111
  %478 = add i32 %477, %85
  %479 = add i32 %478, %70
  %480 = add i32 %479, %67
  %481 = add i32 %480, %320
  %482 = add i32 %481, %13
  %483 = add i32 %482, %200
  %484 = add i32 %483, %184
  %485 = add i32 %484, %127
  %486 = add i32 %485, %419
  %487 = add i32 %486, %404
  %488 = add i32 %487, %349
  %489 = add i32 %488, %223
  %490 = add i32 %489, %271
  %491 = add i32 %490, %199
  %492 = add i32 %491, %93
  %493 = add i32 %492, %84
  %494 = add i32 %493, %428
  %495 = add i32 %494, %395
  %496 = add i32 %495, %378
  %497 = add i32 %496, %302
  %498 = add i32 %497, %290
  %499 = add i32 %498, %279
  %500 = add i32 %499, %238
  %501 = add i32 %500, %285
  %502 = add i32 %501, %219
  %503 = shl i32 %502, 1
  %504 = sub i32 %36, %189
  %505 = sub i32 %504, %175
  %506 = sub i32 %505, %156
  %507 = add i32 %506, %104
  %508 = add i32 %507, %110
  %509 = add i32 %508, %425
  %510 = add i32 %509, %324
  %511 = add i32 %510, %450
  %512 = sub i32 %511, %333
  %513 = mul i32 %512, 5
  %514 = add i32 %207, %42
  %515 = sub i32 %314, %514
  %516 = add i32 %515, %292
  %517 = sub i32 %516, %258
  %518 = mul i32 %517, 3
  %519 = add i32 %375, 1073741823
  %520 = add i32 %519, %265
  %521 = add i32 %520, %423
  %522 = shl i32 %521, 2
  %523 = sub i32 %105, %2
  %524 = add i32 %523, %107
  %525 = sub i32 %524, %9
  %526 = add i32 %525, %150
  %527 = add i32 %526, %28
  %528 = sub i32 %527, %24
  %529 = add i32 %528, %29
  %530 = sub i32 %529, %50
  %531 = add i32 %530, %37
  %532 = add i32 %531, %79
  %533 = add i32 %532, %86
  %534 = add i32 %533, %99
  %535 = sub i32 %534, %30
  %536 = add i32 %535, %106
  %537 = add i32 %536, %118
  %538 = sub i32 %537, %130
  %539 = sub i32 %538, %132
  %540 = sub i32 %539, %135
  %541 = sub i32 %540, %140
  %542 = add i32 %541, %143
  %543 = add i32 %542, %25
  %544 = add i32 %543, %51
  %545 = sub i32 %544, %152
  %546 = add i32 %545, %87
  %547 = sub i32 %546, %159
  %548 = sub i32 %547, %163
  %549 = add i32 %548, %39
  %550 = sub i32 %549, %33
  %551 = add i32 %550, %48
  %552 = add i32 %551, %179
  %553 = add i32 %552, %182
  %554 = sub i32 %553, %183
  %555 = sub i32 %554, %27
  %556 = sub i32 %555, %32
  %557 = add i32 %556, %35
  %558 = sub i32 %557, %49
  %559 = add i32 %558, %53
  %560 = sub i32 %559, %56
  %561 = sub i32 %560, %60
  %562 = sub i32 %561, %62
  %563 = add i32 %562, %65
  %564 = add i32 %563, %69
  %565 = sub i32 %564, %71
  %566 = add i32 %565, %72
  %567 = sub i32 %566, %73
  %568 = sub i32 %567, %74
  %569 = add i32 %568, %77
  %570 = add i32 %569, %88
  %571 = add i32 %570, %94
  %572 = add i32 %571, %95
  %573 = sub i32 %572, %97
  %574 = add i32 %573, %100
  %575 = add i32 %574, %101
  %576 = sub i32 %575, %102
  %577 = add i32 %576, %103
  %578 = sub i32 %577, %57
  %579 = add i32 %578, %108
  %580 = sub i32 %579, %112
  %581 = add i32 %580, %116
  %582 = add i32 %581, %117
  %583 = sub i32 %582, %119
  %584 = add i32 %583, %120
  %585 = add i32 %584, %121
  %586 = add i32 %585, %125
  %587 = sub i32 %586, %129
  %588 = add i32 %587, %133
  %589 = sub i32 %588, %134
  %590 = sub i32 %589, %136
  %591 = add i32 %590, %141
  %592 = sub i32 %591, %142
  %593 = add i32 %592, %144
  %594 = sub i32 %593, %145
  %595 = sub i32 %594, %148
  %596 = add i32 %595, %151
  %597 = sub i32 %596, %160
  %598 = add i32 %597, %161
  %599 = sub i32 %598, %164
  %600 = add i32 %599, %165
  %601 = add i32 %600, %169
  %602 = add i32 %601, %170
  %603 = sub i32 %602, %173
  %604 = sub i32 %603, %123
  %605 = add i32 %604, %177
  %606 = sub i32 %605, %178
  %607 = add i32 %606, %180
  %608 = add i32 %607, %181
  %609 = add i32 %608, %17
  %610 = sub i32 %609, %41
  %611 = sub i32 %610, %45
  %612 = add i32 %611, %59
  %613 = sub i32 %612, %63
  %614 = sub i32 %613, %122
  %615 = add i32 %614, %124
  %616 = sub i32 %615, %128
  %617 = sub i32 %616, %139
  %618 = add i32 %617, %147
  %619 = sub i32 %618, %154
  %620 = sub i32 %619, %155
  %621 = sub i32 %620, %158
  %622 = sub i32 %621, %167
  %623 = sub i32 %622, %172
  %624 = add i32 %623, %176
  %625 = add i32 %624, %186
  %626 = add i32 %625, %188
  %627 = add i32 %626, %191
  %628 = add i32 %627, %193
  %629 = sub i32 %628, %194
  %630 = add i32 %629, %196
  %631 = sub i32 %630, %253
  %632 = sub i32 %631, %227
  %633 = add i32 %632, %5
  %634 = add i32 %633, %198
  %635 = sub i32 %634, %205
  %636 = sub i32 %635, %222
  %637 = sub i32 %636, %239
  %638 = sub i32 %637, %244
  %639 = add i32 %638, %247
  %640 = add i32 %639, %215
  %641 = add i32 %640, %262
  %642 = add i32 %641, %275
  %643 = sub i32 %642, %295
  %644 = add i32 %643, %212
  %645 = sub i32 %644, %306
  %646 = sub i32 %645, %313
  %647 = add i32 %646, %323
  %648 = add i32 %647, %326
  %649 = add i32 %648, %334
  %650 = sub i32 %649, %335
  %651 = sub i32 %650, %352
  %652 = sub i32 %651, %372
  %653 = add i32 %652, %374
  %654 = sub i32 %653, %377
  %655 = sub i32 %654, %382
  %656 = sub i32 %655, %211
  %657 = sub i32 %656, %291
  %658 = sub i32 %657, %392
  %659 = add i32 %658, %308
  %660 = add i32 %659, %406
  %661 = sub i32 %660, %410
  %662 = sub i32 %661, %277
  %663 = sub i32 %662, %201
  %664 = add i32 %663, %422
  %665 = add i32 %664, %431
  %666 = sub i32 %665, %437
  %667 = add i32 %666, %298
  %668 = sub i32 %667, %115
  %669 = sub i32 %668, %204
  %670 = add i32 %669, %206
  %671 = sub i32 %670, %210
  %672 = add i32 %671, %213
  %673 = sub i32 %672, %214
  %674 = sub i32 %673, %221
  %675 = add i32 %674, %225
  %676 = add i32 %675, %226
  %677 = add i32 %676, %229
  %678 = sub i32 %677, %230
  %679 = sub i32 %678, %236
  %680 = sub i32 %679, %240
  %681 = sub i32 %680, %245
  %682 = sub i32 %681, %248
  %683 = add i32 %682, %249
  %684 = add i32 %683, %250
  %685 = sub i32 %684, %252
  %686 = add i32 %685, %254
  %687 = sub i32 %686, %255
  %688 = sub i32 %687, %259
  %689 = sub i32 %688, %263
  %690 = sub i32 %689, %269
  %691 = add i32 %690, %270
  %692 = sub i32 %691, %272
  %693 = sub i32 %692, %273
  %694 = add i32 %693, %274
  %695 = sub i32 %694, %276
  %696 = sub i32 %695, %278
  %697 = add i32 %696, %280
  %698 = add i32 %697, %286
  %699 = add i32 %698, %287
  %700 = sub i32 %699, %288
  %701 = sub i32 %700, %289
  %702 = add i32 %701, %296
  %703 = add i32 %702, %297
  %704 = add i32 %703, %299
  %705 = sub i32 %704, %300
  %706 = add i32 %705, %301
  %707 = sub i32 %706, %304
  %708 = sub i32 %707, %305
  %709 = add i32 %708, %307
  %710 = add i32 %709, %309
  %711 = add i32 %710, %310
  %712 = sub i32 %711, %311
  %713 = add i32 %712, %312
  %714 = sub i32 %713, %315
  %715 = add i32 %714, %316
  %716 = sub i32 %715, %317
  %717 = sub i32 %716, %318
  %718 = sub i32 %717, %319
  %719 = sub i32 %718, %321
  %720 = sub i32 %719, %322
  %721 = add i32 %720, %325
  %722 = sub i32 %721, %327
  %723 = sub i32 %722, %328
  %724 = add i32 %723, %329
  %725 = sub i32 %724, %336
  %726 = sub i32 %725, %341
  %727 = add i32 %726, %342
  %728 = sub i32 %727, %343
  %729 = add i32 %728, %344
  %730 = add i32 %729, %345
  %731 = add i32 %730, %346
  %732 = add i32 %731, %347
  %733 = add i32 %732, %348
  %734 = add i32 %733, %350
  %735 = add i32 %734, %351
  %736 = add i32 %735, %354
  %737 = add i32 %736, %361
  %738 = add i32 %737, %362
  %739 = add i32 %738, %363
  %740 = sub i32 %739, %364
  %741 = add i32 %740, %366
  %742 = add i32 %741, %367
  %743 = sub i32 %742, %368
  %744 = sub i32 %743, %369
  %745 = add i32 %744, %371
  %746 = add i32 %745, %373
  %747 = sub i32 %746, %376
  %748 = sub i32 %747, %379
  %749 = add i32 %748, %381
  %750 = sub i32 %749, %383
  %751 = add i32 %750, %384
  %752 = sub i32 %751, %385
  %753 = sub i32 %752, %386
  %754 = add i32 %753, %387
  %755 = sub i32 %754, %260
  %756 = add i32 %755, %393
  %757 = sub i32 %756, %394
  %758 = sub i32 %757, %396
  %759 = add i32 %758, %397
  %760 = add i32 %759, %403
  %761 = add i32 %760, %405
  %762 = add i32 %761, %407
  %763 = sub i32 %762, %411
  %764 = sub i32 %763, %414
  %765 = add i32 %764, %418
  %766 = sub i32 %765, %424
  %767 = add i32 %766, %426
  %768 = add i32 %767, %427
  %769 = add i32 %768, %429
  %770 = sub i32 %769, %430
  %771 = sub i32 %770, %432
  %772 = add i32 %771, %433
  %773 = add i32 %772, %434
  %774 = sub i32 %773, %436
  %775 = add i32 %774, %438
  %776 = add i32 %775, %440
  %777 = sub i32 %776, %441
  %778 = sub i32 %777, %443
  %779 = add i32 %778, %445
  %780 = sub i32 %779, %446
  %781 = add i32 %780, %447
  %782 = sub i32 %781, %448
  %783 = sub i32 %782, %449
  %784 = add i32 %783, %451
  %785 = sub i32 %784, %452
  %786 = add i32 %785, %453
  %787 = add i32 %786, %454
  %788 = sub i32 %787, %455
  %789 = sub i32 %788, %459
  %790 = sub i32 %789, %460
  %791 = add i32 %790, %235
  %792 = sub i32 %791, %243
  %793 = sub i32 %792, %246
  %794 = add i32 %793, %261
  %795 = sub i32 %794, %282
  %796 = sub i32 %795, %284
  %797 = sub i32 %796, %294
  %798 = sub i32 %797, %303
  %799 = sub i32 %798, %331
  %800 = sub i32 %799, %338
  %801 = add i32 %800, %340
  %802 = sub i32 %801, %356
  %803 = sub i32 %802, %358
  %804 = sub i32 %803, %360
  %805 = add i32 %804, %365
  %806 = add i32 %805, %370
  %807 = sub i32 %806, %380
  %808 = add i32 %807, %389
  %809 = sub i32 %808, %391
  %810 = add i32 %809, %398
  %811 = sub i32 %810, %400
  %812 = sub i32 %811, %402
  %813 = sub i32 %812, %409
  %814 = sub i32 %813, %413
  %815 = sub i32 %814, %416
  %816 = add i32 %815, %421
  %817 = sub i32 %816, %435
  %818 = add i32 %817, %439
  %819 = add i32 %818, %444
  %820 = sub i32 %819, %457
  %821 = add i32 %820, %462
  %822 = add i32 %821, %464
  %823 = add i32 %822, %466
  %824 = add i32 %823, %467
  %825 = add i32 %824, %469
  %826 = add i32 %825, %470
  %827 = sub i32 %826, %268
  %828 = add i32 %827, %522
  %829 = add i32 %828, %518
  %830 = add i32 %829, %513
  %831 = add i32 %830, %503
  %832 = icmp eq i32 %21, %831
  %833 = select i1 %832, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %834 = tail call i32 @puts(i8* nonnull dereferenceable(1) %833)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
