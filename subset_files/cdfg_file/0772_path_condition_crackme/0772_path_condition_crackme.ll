; ModuleID = '../.././c_source_file/0772_path_condition_crackme.c'
source_filename = "../.././c_source_file/0772_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %1, -1
  %5 = or i32 %4, %0
  %6 = xor i32 %2, %1
  %7 = xor i32 %6, -1
  %8 = and i32 %5, %7
  %9 = sub i32 0, %8
  %10 = and i32 %4, %0
  %11 = xor i32 %10, -1
  %12 = and i32 %6, %11
  %13 = and i32 %2, %1
  %14 = and i32 %13, %0
  %15 = xor i32 %0, -1
  %16 = and i32 %6, %15
  %17 = or i32 %14, %16
  %18 = xor i32 %1, %0
  %19 = xor i32 %18, -1
  %20 = xor i32 %2, %0
  %21 = xor i32 %20, -1
  %22 = and i32 %21, %19
  %23 = and i32 %1, %0
  %24 = xor i32 %23, -1
  %25 = xor i32 %24, %2
  %26 = xor i32 %2, -1
  %27 = and i32 %26, %0
  %28 = or i32 %27, %19
  %29 = or i32 %26, %0
  %30 = xor i32 %29, -1
  %31 = xor i32 %30, %1
  %32 = or i32 %27, %4
  %33 = or i32 %1, %0
  %34 = and i32 %6, %33
  %35 = or i32 %2, %0
  %36 = and i32 %35, %1
  %37 = or i32 %30, %1
  %38 = and i32 %2, %0
  %39 = xor i32 %38, -1
  %40 = and i32 %18, %39
  %41 = xor i32 %27, -1
  %42 = xor i32 %41, %1
  %43 = and i32 %7, %11
  %44 = or i32 %10, %2
  %45 = or i32 %2, %1
  %46 = and i32 %45, %0
  %47 = and i32 %26, %1
  %48 = xor i32 %47, -1
  %49 = xor i32 %38, %48
  %50 = and i32 %20, %33
  %51 = xor i32 %45, -1
  %52 = or i32 %23, %51
  %53 = add i32 %18, 1
  %54 = xor i32 %13, -1
  %55 = add i32 %13, 1
  %56 = xor i32 %5, -1
  %57 = or i32 %7, %56
  %58 = or i32 %23, %21
  %59 = and i32 %26, %24
  %60 = xor i32 %10, %54
  %61 = or i32 %7, %0
  %62 = xor i32 %33, -1
  %63 = or i32 %62, %2
  %64 = and i32 %7, %24
  %65 = or i32 %6, %62
  %66 = add i32 %5, 1
  %67 = and i32 %21, %1
  %68 = or i32 %26, %1
  %69 = or i32 %68, %15
  %70 = or i32 %20, %1
  %71 = and i32 %4, %2
  %72 = and i32 %71, %0
  %73 = or i32 %4, %2
  %74 = xor i32 %73, %0
  %75 = or i32 %72, %74
  %76 = and i32 %33, %2
  %77 = shl i32 %76, 1
  %78 = and i32 %68, %0
  %79 = or i32 %38, %56
  %80 = and i32 %48, %0
  %81 = xor i32 %38, %1
  %82 = and i32 %13, %15
  %83 = or i32 %82, %46
  %84 = shl i32 %83, 1
  %85 = and i32 %45, %15
  %86 = xor i32 %14, -1
  %87 = xor i32 %85, %86
  %88 = or i32 %13, %0
  %89 = or i32 %38, %1
  %90 = xor i32 %56, %2
  %91 = and i32 %39, %4
  %92 = xor i32 %29, %1
  %93 = shl i32 %92, 1
  %94 = or i32 %20, %23
  %95 = and i32 %71, %15
  %96 = and i32 %73, %0
  %97 = xor i32 %96, 1073741823
  %98 = xor i32 %97, %95
  %99 = xor i32 %68, -1
  %100 = or i32 %23, %99
  %101 = xor i32 %45, %0
  %102 = xor i32 %101, %86
  %103 = or i32 %68, %0
  %104 = and i32 %26, %11
  %105 = xor i32 %5, %2
  %106 = or i32 %6, %0
  %107 = or i32 %18, %26
  %108 = or i32 %30, %19
  %109 = xor i32 %38, %33
  %110 = xor i32 %39, %1
  %111 = xor i32 %72, %106
  %112 = shl i32 %111, 1
  %113 = or i32 %48, %0
  %114 = and i32 %7, %15
  %115 = and i32 %21, %11
  %116 = xor i32 %10, %48
  %117 = or i32 %19, %2
  %118 = or i32 %20, %62
  %119 = shl i32 %118, 1
  %120 = xor i32 %35, %23
  %121 = xor i32 %35, -1
  %122 = or i32 %121, %4
  %123 = xor i32 %29, %23
  %124 = or i32 %10, %7
  %125 = and i32 %29, %4
  %126 = or i32 %6, %23
  %127 = and i32 %54, %0
  %128 = and i32 %6, %0
  %129 = xor i32 %128, 2147483647
  %130 = xor i32 %129, %82
  %131 = shl i32 %130, 1
  %132 = and i32 %29, %18
  %133 = xor i32 %35, %1
  %134 = xor i32 %11, %2
  %135 = or i32 %21, %62
  %136 = shl i32 %135, 1
  %137 = or i32 %30, %4
  %138 = or i32 %7, %62
  %139 = or i32 %26, %19
  %140 = xor i32 %16, 2147483647
  %141 = xor i32 %140, %14
  %142 = or i32 %121, %19
  %143 = or i32 %54, %0
  %144 = or i32 %23, %2
  %145 = and i32 %73, %15
  %146 = xor i32 %72, -1
  %147 = xor i32 %145, %146
  %148 = xor i32 %6, %0
  %149 = xor i32 %14, %148
  %150 = xor i32 %27, %54
  %151 = and i32 %6, %24
  %152 = shl i32 %151, 1
  %153 = or i32 %20, %18
  %154 = and i32 %41, %19
  %155 = xor i32 %38, %45
  %156 = and i32 %48, %15
  %157 = and i32 %29, %19
  %158 = xor i32 %148, -1
  %159 = or i32 %14, %158
  %160 = or i32 %6, %56
  %161 = or i32 %38, %19
  %162 = and i32 %35, %4
  %163 = and i32 %18, %21
  %164 = shl i32 %163, 1
  %165 = and i32 %41, %1
  %166 = and i32 %35, %19
  %167 = or i32 %38, %4
  %168 = or i32 %13, %10
  %169 = or i32 %13, %15
  %170 = or i32 %6, %15
  %171 = xor i32 %170, -1
  %172 = or i32 %95, %171
  %173 = xor i32 %62, %2
  %174 = and i32 %7, %0
  %175 = and i32 %39, %19
  %176 = or i32 %27, %1
  %177 = or i32 %47, %10
  %178 = shl i32 %177, 1
  %179 = or i32 %21, %56
  %180 = and i32 %19, %2
  %181 = shl i32 %180, 2
  %182 = or i32 %51, %15
  %183 = or i32 %99, %15
  %184 = shl i32 %183, 1
  %185 = or i32 %26, %62
  %186 = and i32 %33, %7
  %187 = add i32 %35, 1
  %188 = and i32 %20, %1
  %189 = and i32 %33, %21
  %190 = and i32 %29, %1
  %191 = and i32 %20, %11
  %192 = and i32 %68, %15
  %193 = and i32 %20, %24
  %194 = and i32 %5, %2
  %195 = or i32 %27, %18
  %196 = xor i32 %51, %0
  %197 = or i32 %38, %18
  %198 = or i32 %23, %121
  %199 = xor i32 %23, %2
  %200 = and i32 %18, %41
  %201 = or i32 %72, %148
  %202 = shl i32 %201, 1
  %203 = and i32 %5, %26
  %204 = xor i32 %72, %158
  %205 = shl i32 %204, 1
  %206 = or i32 %18, %21
  %207 = or i32 %6, %10
  %208 = xor i32 %45, %23
  %209 = xor i32 %74, %146
  %210 = xor i32 %10, %2
  %211 = and i32 %33, %26
  %212 = add i32 %20, 1
  %213 = xor i32 %7, %0
  %214 = shl i32 %213, 2
  %215 = or i32 %21, %1
  %216 = or i32 %82, %128
  %217 = xor i32 %68, %0
  %218 = or i32 %21, %19
  %219 = and i32 %20, %5
  %220 = xor i32 %27, %1
  %221 = xor i32 %95, %170
  %222 = shl i32 %221, 1
  %223 = and i32 %18, %2
  %224 = or i32 %48, %15
  %225 = or i32 %54, %15
  %226 = add i32 %47, 1
  %227 = xor i32 %68, %23
  %228 = or i32 %56, %2
  %229 = and i32 %21, %24
  %230 = xor i32 %48, %0
  %231 = or i32 %14, %101
  %232 = or i32 %27, %13
  %233 = or i32 %45, %15
  %234 = xor i32 %13, %0
  %235 = or i32 %38, %62
  %236 = and i32 %18, %26
  %237 = or i32 %26, %56
  %238 = and i32 %20, %4
  %239 = shl i32 %238, 1
  %240 = or i32 %47, %15
  %241 = add i32 %68, 1
  %242 = or i32 %99, %0
  %243 = shl i32 %242, 1
  %244 = xor i32 %38, %5
  %245 = shl i32 %244, 1
  %246 = and i32 %39, %1
  %247 = xor i32 %46, -1
  %248 = xor i32 %82, %247
  %249 = or i32 %51, %0
  %250 = xor i32 %121, %1
  %251 = shl i32 %250, 1
  %252 = and i32 %54, %15
  %253 = or i32 %72, %145
  %254 = and i32 %24, %2
  %255 = or i32 %47, %0
  %256 = shl i32 %255, 1
  %257 = or i32 %18, %30
  %258 = or i32 %14, %85
  %259 = xor i32 %47, %0
  %260 = add i32 %23, 1
  %261 = add i32 %1, 1
  %262 = or i32 %38, %51
  %263 = or i32 %10, %21
  %264 = or i32 %38, %47
  %265 = and i32 %26, %19
  %266 = xor i32 %33, %2
  %267 = and i32 %21, %4
  %268 = shl i32 %41, 1
  %269 = or i32 %20, %19
  %270 = or i32 %18, %121
  %271 = and i32 %41, %4
  %272 = or i32 %18, %2
  %273 = xor i32 %99, %0
  %274 = and i32 %35, %18
  %275 = or i32 %21, %4
  %276 = shl i32 %275, 1
  %277 = or i32 %20, %56
  %278 = and i32 %5, %21
  %279 = or i32 %20, %10
  %280 = or i32 %121, %1
  %281 = or i32 %45, %0
  %282 = or i32 %95, %96
  %283 = and i32 %20, %19
  %284 = or i32 %23, %30
  %285 = or i32 %23, %26
  %286 = xor i32 %106, -1
  %287 = or i32 %72, %286
  %288 = or i32 %23, %7
  %289 = xor i32 %27, %68
  %290 = and i32 %51, %15
  %291 = and i32 %47, %15
  %292 = and i32 %51, %0
  %293 = and i32 %47, %0
  %294 = shl i32 %293, 3
  %295 = and i32 %99, %15
  %296 = mul i32 %295, 11
  %297 = mul i32 %82, -6
  %298 = and i32 %99, %0
  %299 = mul i32 %298, 10
  %300 = add i32 %18, %1
  %301 = add i32 %300, %134
  %302 = add i32 %301, %90
  %303 = add i32 %302, %289
  %304 = add i32 %303, %233
  %305 = add i32 %304, %227
  %306 = add i32 %305, %220
  %307 = add i32 %306, %217
  %308 = add i32 %307, %193
  %309 = add i32 %308, %191
  %310 = add i32 %309, %179
  %311 = add i32 %310, %169
  %312 = add i32 %311, %124
  %313 = add i32 %312, %114
  %314 = add i32 %313, %81
  %315 = add i32 %314, %80
  %316 = add i32 %315, %43
  %317 = add i32 %316, %42
  %318 = add i32 %317, %282
  %319 = add i32 %318, %258
  %320 = add i32 %319, %141
  %321 = shl i32 %320, 1
  %322 = sub i32 %292, %290
  %323 = sub i32 %322, %281
  %324 = add i32 %323, %273
  %325 = add i32 %324, %143
  %326 = sub i32 %325, %89
  %327 = mul i32 %326, 5
  %328 = sub i32 %271, %291
  %329 = sub i32 %328, %206
  %330 = add i32 %329, %172
  %331 = mul i32 %330, 3
  %332 = add i32 %14, 1073741823
  %333 = add i32 %332, %98
  %334 = shl i32 %333, 2
  %335 = sub i32 2, %0
  %336 = add i32 %335, %15
  %337 = add i32 %336, %261
  %338 = add i32 %337, %53
  %339 = add i32 %338, %66
  %340 = sub i32 %339, %33
  %341 = sub i32 %340, %23
  %342 = add i32 %341, %62
  %343 = add i32 %342, %2
  %344 = sub i32 %343, %5
  %345 = add i32 %344, %260
  %346 = sub i32 %345, %25
  %347 = sub i32 %346, %44
  %348 = add i32 %347, %35
  %349 = add i32 %348, %55
  %350 = sub i32 %349, %59
  %351 = add i32 %350, %63
  %352 = add i32 %351, %104
  %353 = add i32 %352, %105
  %354 = add i32 %353, %107
  %355 = add i32 %354, %13
  %356 = sub i32 %355, %117
  %357 = add i32 %356, %68
  %358 = sub i32 %357, %139
  %359 = sub i32 %358, %144
  %360 = sub i32 %359, %173
  %361 = sub i32 %360, %185
  %362 = add i32 %361, %187
  %363 = add i32 %362, %194
  %364 = sub i32 %363, %199
  %365 = add i32 %364, %27
  %366 = sub i32 %365, %203
  %367 = add i32 %366, %210
  %368 = add i32 %367, %211
  %369 = add i32 %368, %212
  %370 = sub i32 %369, %223
  %371 = add i32 %370, %226
  %372 = add i32 %371, %47
  %373 = add i32 %372, %228
  %374 = add i32 %373, %236
  %375 = sub i32 %374, %237
  %376 = add i32 %375, %241
  %377 = add i32 %376, %254
  %378 = sub i32 %377, %265
  %379 = add i32 %378, %266
  %380 = sub i32 %379, %272
  %381 = add i32 %380, %285
  %382 = add i32 %381, %12
  %383 = sub i32 %382, %22
  %384 = sub i32 %383, %28
  %385 = sub i32 %384, %31
  %386 = add i32 %385, %32
  %387 = sub i32 %386, %34
  %388 = sub i32 %387, %36
  %389 = add i32 %388, %37
  %390 = sub i32 %389, %40
  %391 = sub i32 %390, %46
  %392 = sub i32 %391, %49
  %393 = sub i32 %392, %50
  %394 = add i32 %393, %52
  %395 = add i32 %394, %57
  %396 = sub i32 %395, %58
  %397 = sub i32 %396, %60
  %398 = sub i32 %397, %61
  %399 = sub i32 %398, %64
  %400 = add i32 %399, %65
  %401 = sub i32 %400, %67
  %402 = sub i32 %401, %69
  %403 = sub i32 %402, %70
  %404 = sub i32 %403, %77
  %405 = sub i32 %404, %78
  %406 = add i32 %405, %79
  %407 = add i32 %406, %85
  %408 = add i32 %407, %88
  %409 = sub i32 %408, %16
  %410 = sub i32 %409, %91
  %411 = sub i32 %410, %94
  %412 = sub i32 %411, %100
  %413 = add i32 %412, %103
  %414 = sub i32 %413, %106
  %415 = sub i32 %414, %108
  %416 = add i32 %415, %109
  %417 = sub i32 %416, %110
  %418 = add i32 %417, %113
  %419 = sub i32 %418, %115
  %420 = add i32 %419, %116
  %421 = add i32 %420, %120
  %422 = add i32 %421, %122
  %423 = sub i32 %422, %123
  %424 = add i32 %423, %125
  %425 = add i32 %424, %126
  %426 = add i32 %425, %127
  %427 = add i32 %426, %132
  %428 = sub i32 %427, %101
  %429 = add i32 %428, %133
  %430 = sub i32 %429, %137
  %431 = add i32 %430, %138
  %432 = add i32 %431, %142
  %433 = add i32 %432, %150
  %434 = sub i32 %433, %153
  %435 = add i32 %434, %154
  %436 = sub i32 %435, %155
  %437 = sub i32 %436, %156
  %438 = add i32 %437, %157
  %439 = add i32 %438, %160
  %440 = sub i32 %439, %161
  %441 = sub i32 %440, %162
  %442 = sub i32 %441, %165
  %443 = add i32 %442, %166
  %444 = add i32 %443, %167
  %445 = add i32 %444, %168
  %446 = add i32 %445, %174
  %447 = sub i32 %446, %175
  %448 = sub i32 %447, %176
  %449 = sub i32 %448, %181
  %450 = add i32 %449, %182
  %451 = sub i32 %450, %148
  %452 = sub i32 %451, %186
  %453 = add i32 %452, %188
  %454 = add i32 %453, %189
  %455 = add i32 %454, %190
  %456 = sub i32 %455, %170
  %457 = add i32 %456, %192
  %458 = sub i32 %457, %128
  %459 = add i32 %458, %195
  %460 = add i32 %459, %196
  %461 = add i32 %460, %197
  %462 = add i32 %461, %198
  %463 = sub i32 %462, %200
  %464 = add i32 %463, %207
  %465 = add i32 %464, %208
  %466 = add i32 %465, %215
  %467 = sub i32 %466, %218
  %468 = sub i32 %467, %219
  %469 = sub i32 %468, %224
  %470 = add i32 %469, %225
  %471 = sub i32 %470, %229
  %472 = sub i32 %471, %230
  %473 = add i32 %472, %232
  %474 = sub i32 %473, %234
  %475 = add i32 %474, %235
  %476 = add i32 %475, %240
  %477 = add i32 %476, %246
  %478 = sub i32 %477, %249
  %479 = sub i32 %478, %252
  %480 = sub i32 %479, %257
  %481 = sub i32 %480, %259
  %482 = sub i32 %481, %262
  %483 = add i32 %482, %263
  %484 = add i32 %483, %264
  %485 = add i32 %484, %267
  %486 = sub i32 %485, %268
  %487 = sub i32 %486, %269
  %488 = add i32 %487, %270
  %489 = add i32 %488, %274
  %490 = add i32 %489, %277
  %491 = add i32 %490, %278
  %492 = sub i32 %491, %279
  %493 = add i32 %492, %280
  %494 = sub i32 %493, %283
  %495 = sub i32 %494, %284
  %496 = add i32 %495, %288
  %497 = sub i32 %496, %17
  %498 = add i32 %497, %75
  %499 = add i32 %498, %87
  %500 = sub i32 %499, %93
  %501 = add i32 %500, %102
  %502 = sub i32 %501, %119
  %503 = sub i32 %502, %136
  %504 = add i32 %503, %147
  %505 = sub i32 %504, %149
  %506 = sub i32 %505, %152
  %507 = sub i32 %506, %159
  %508 = sub i32 %507, %164
  %509 = sub i32 %508, %178
  %510 = sub i32 %509, %184
  %511 = sub i32 %510, %209
  %512 = sub i32 %511, %214
  %513 = sub i32 %512, %216
  %514 = add i32 %513, %231
  %515 = sub i32 %514, %239
  %516 = sub i32 %515, %243
  %517 = sub i32 %516, %245
  %518 = sub i32 %517, %248
  %519 = sub i32 %518, %251
  %520 = add i32 %519, %253
  %521 = sub i32 %520, %256
  %522 = sub i32 %521, %276
  %523 = sub i32 %522, %287
  %524 = add i32 %523, %294
  %525 = add i32 %524, %296
  %526 = add i32 %525, %297
  %527 = add i32 %526, %299
  %528 = sub i32 %527, %84
  %529 = sub i32 %528, %112
  %530 = sub i32 %529, %202
  %531 = sub i32 %530, %205
  %532 = sub i32 %531, %222
  %533 = sub i32 %532, %131
  %534 = add i32 %533, %331
  %535 = add i32 %534, %334
  %536 = add i32 %535, %327
  %537 = add i32 %536, %321
  %538 = icmp eq i32 %537, %9
  %539 = select i1 %538, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %540 = tail call i32 @puts(i8* nonnull dereferenceable(1) %539)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
