digraph "DFG for'crackme' function" {
	Node0x2426420[shape=record, label="  %3 = or i32 %1, %0"];
	Node0x2426ad0[shape=record, label="  %4 = xor i32 %1, -1"];
	Node0x2426b90[shape=record, label="  %5 = or i32 %4, %0"];
	Node0x2426c00[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x2426c70[shape=record, label="  %7 = and i32 %1, %0"];
	Node0x2426ce0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x2426d50[shape=record, label="  %9 = xor i32 %6, %1"];
	Node0x2426dc0[shape=record, label="  %10 = or i32 %6, %1"];
	Node0x2426e30[shape=record, label="  %11 = xor i32 %5, -1"];
	Node0x2426ea0[shape=record, label="  %12 = shl i32 %7, 1"];
	Node0x2426f10[shape=record, label="  %13 = add i32 %5, %1"];
	Node0x2426f80[shape=record, label="  %14 = sub i32 %8, %13"];
	Node0x2426ff0[shape=record, label="  %15 = add i32 %14, %9"];
	Node0x2427060[shape=record, label="  %16 = sub i32 %15, %10"];
	Node0x24270d0[shape=record, label="  %17 = add i32 %16, %3"];
	Node0x2427140[shape=record, label="  %18 = add i32 %17, %11"];
	Node0x24271b0[shape=record, label="  %19 = add i32 %18, %12"];
	Node0x2427220[shape=record, label="  %20 = icmp eq i32 %3, %19"];
	Node0x23c7268[shape=record, label="  %21 = select i1 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x24276c0[shape=record, label="  %22 = tail call i32 @puts(i8* nonnull dereferenceable(1) %21)"];
	Node0x2427710[shape=record, label="  ret void"];
	Node0x2426420 -> Node0x2426ad0;
	Node0x2426ad0 -> Node0x2426b90;
	Node0x2426b90 -> Node0x2426c00;
	Node0x2426c00 -> Node0x2426c70;
	Node0x2426c70 -> Node0x2426ce0;
	Node0x2426ce0 -> Node0x2426d50;
	Node0x2426d50 -> Node0x2426dc0;
	Node0x2426dc0 -> Node0x2426e30;
	Node0x2426e30 -> Node0x2426ea0;
	Node0x2426ea0 -> Node0x2426f10;
	Node0x2426f10 -> Node0x2426f80;
	Node0x2426f80 -> Node0x2426ff0;
	Node0x2426ff0 -> Node0x2427060;
	Node0x2427060 -> Node0x24270d0;
	Node0x24270d0 -> Node0x2427140;
	Node0x2427140 -> Node0x24271b0;
	Node0x24271b0 -> Node0x2427220;
	Node0x2427220 -> Node0x23c7268;
	Node0x23c7268 -> Node0x24276c0;
	Node0x24276c0 -> Node0x2427710;
edge [color=red]
	Node0x2426ad0 -> Node0x2426b90;
	Node0x2426c70 -> Node0x2426ce0;
	Node0x2426c00 -> Node0x2426d50;
	Node0x2426c00 -> Node0x2426dc0;
	Node0x2426b90 -> Node0x2426e30;
	Node0x2426c70 -> Node0x2426ea0;
	Node0x2426b90 -> Node0x2426f10;
	Node0x2426ce0 -> Node0x2426f80;
	Node0x2426f10 -> Node0x2426f80;
	Node0x2426f80 -> Node0x2426ff0;
	Node0x2426d50 -> Node0x2426ff0;
	Node0x2426ff0 -> Node0x2427060;
	Node0x2426dc0 -> Node0x2427060;
	Node0x2427060 -> Node0x24270d0;
	Node0x2426420 -> Node0x24270d0;
	Node0x24270d0 -> Node0x2427140;
	Node0x2426e30 -> Node0x2427140;
	Node0x2427140 -> Node0x24271b0;
	Node0x2426ea0 -> Node0x24271b0;
	Node0x2426420 -> Node0x2427220;
	Node0x24271b0 -> Node0x2427220;
	Node0x2427220 -> Node0x23c7268;
	Node0x23c7268 -> Node0x24276c0;
}
