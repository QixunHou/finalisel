digraph "DFG for'main' function" {
	Node0x1a2a448[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a2a4c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a2a558[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1a2a5b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1a2aa38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a2b2e8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1a2b3c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a2b488[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1a2b538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a2b798[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1a2b858[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a2c7c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a2ce38[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1a2cf30[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1a2d138[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a2d298[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a2d3a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a2d468[shape=record, label="  ret i32 0"];
	Node0x1a2a448 -> Node0x1a2a4c8;
	Node0x1a2a4c8 -> Node0x1a2a558;
	Node0x1a2a558 -> Node0x1a2a5b8;
	Node0x1a2a5b8 -> Node0x1a2aa38;
	Node0x1a2aa38 -> Node0x1a2b2e8;
	Node0x1a2b2e8 -> Node0x1a2b3c8;
	Node0x1a2b3c8 -> Node0x1a2b488;
	Node0x1a2b488 -> Node0x1a2b538;
	Node0x1a2b538 -> Node0x1a2b798;
	Node0x1a2b798 -> Node0x1a2b858;
	Node0x1a2b858 -> Node0x1a2c7c8;
	Node0x1a2c7c8 -> Node0x1a2ce38;
	Node0x1a2ce38 -> Node0x1a2cf30;
	Node0x1a2cf30 -> Node0x1a2d138;
	Node0x1a2d138 -> Node0x1a2d298;
	Node0x1a2d298 -> Node0x1a2d3a8;
	Node0x1a2d3a8 -> Node0x1a2d468;
edge [color=red]
	Node0x1a2a448 -> Node0x1a2a5b8;
	Node0x1a2a5b8 -> Node0x1a2aa38;
	Node0x1a2a4c8 -> Node0x1a2b2e8;
	Node0x1a2b2e8 -> Node0x1a2b3c8;
	Node0x1a2a558 -> Node0x1a2b488;
	Node0x1a2b488 -> Node0x1a2b538;
	Node0x1a2a448 -> Node0x1a2b798;
	Node0x1a2a4c8 -> Node0x1a2b798;
	Node0x1a2a558 -> Node0x1a2b798;
	Node0x1a2a448 -> Node0x1a2b858;
	Node0x1a2a4c8 -> Node0x1a2c7c8;
	Node0x1a2a558 -> Node0x1a2ce38;
	Node0x1a2b858 -> Node0x1a2cf30;
	Node0x1a2c7c8 -> Node0x1a2cf30;
	Node0x1a2ce38 -> Node0x1a2cf30;
	Node0x1a2b488 -> Node0x1a2d138;
	Node0x1a2b2e8 -> Node0x1a2d298;
	Node0x1a2a5b8 -> Node0x1a2d3a8;
}
