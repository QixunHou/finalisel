digraph "DFG for'main' function" {
	Node0x1fc8668[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1fc86e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1fc8778[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1fc87d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1fc8c58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1fc8d38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1fc8e38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1fc8ef8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1fc8fa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1fc9208[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1fc92c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1fc9428[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1fc9488[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1fd0a10[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1fd0c18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1fd0d78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1fd0e88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1fd0f48[shape=record, label="  ret i32 0"];
	Node0x1fc8668 -> Node0x1fc86e8;
	Node0x1fc86e8 -> Node0x1fc8778;
	Node0x1fc8778 -> Node0x1fc87d8;
	Node0x1fc87d8 -> Node0x1fc8c58;
	Node0x1fc8c58 -> Node0x1fc8d38;
	Node0x1fc8d38 -> Node0x1fc8e38;
	Node0x1fc8e38 -> Node0x1fc8ef8;
	Node0x1fc8ef8 -> Node0x1fc8fa8;
	Node0x1fc8fa8 -> Node0x1fc9208;
	Node0x1fc9208 -> Node0x1fc92c8;
	Node0x1fc92c8 -> Node0x1fc9428;
	Node0x1fc9428 -> Node0x1fc9488;
	Node0x1fc9488 -> Node0x1fd0a10;
	Node0x1fd0a10 -> Node0x1fd0c18;
	Node0x1fd0c18 -> Node0x1fd0d78;
	Node0x1fd0d78 -> Node0x1fd0e88;
	Node0x1fd0e88 -> Node0x1fd0f48;
edge [color=red]
	Node0x1fc8668 -> Node0x1fc87d8;
	Node0x1fc87d8 -> Node0x1fc8c58;
	Node0x1fc86e8 -> Node0x1fc8d38;
	Node0x1fc8d38 -> Node0x1fc8e38;
	Node0x1fc8778 -> Node0x1fc8ef8;
	Node0x1fc8ef8 -> Node0x1fc8fa8;
	Node0x1fc8668 -> Node0x1fc9208;
	Node0x1fc86e8 -> Node0x1fc9208;
	Node0x1fc8778 -> Node0x1fc9208;
	Node0x1fc8668 -> Node0x1fc92c8;
	Node0x1fc86e8 -> Node0x1fc9428;
	Node0x1fc8778 -> Node0x1fc9488;
	Node0x1fc92c8 -> Node0x1fd0a10;
	Node0x1fc9428 -> Node0x1fd0a10;
	Node0x1fc9488 -> Node0x1fd0a10;
	Node0x1fc8ef8 -> Node0x1fd0c18;
	Node0x1fc8d38 -> Node0x1fd0d78;
	Node0x1fc87d8 -> Node0x1fd0e88;
}
