; ModuleID = '../.././c_source_file/0596_path_condition_crackme.c'
source_filename = "../.././c_source_file/0596_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = xor i32 %2, -1
  %9 = or i32 %8, %0
  %10 = and i32 %9, %7
  %11 = or i32 %4, %3
  %12 = sub i32 %11, %10
  %13 = xor i32 %2, %1
  %14 = xor i32 %13, -1
  %15 = xor i32 %14, %0
  %16 = or i32 %1, %0
  %17 = xor i32 %16, -1
  %18 = or i32 %14, %17
  %19 = or i32 %2, %0
  %20 = xor i32 %19, -1
  %21 = or i32 %20, %7
  %22 = and i32 %2, %1
  %23 = or i32 %22, %0
  %24 = or i32 %2, %1
  %25 = xor i32 %24, -1
  %26 = xor i32 %25, %0
  %27 = and i32 %8, %0
  %28 = xor i32 %27, -1
  %29 = xor i32 %28, %1
  %30 = or i32 %7, %0
  %31 = and i32 %13, %30
  %32 = and i32 %8, %1
  %33 = xor i32 %32, -1
  %34 = or i32 %33, %0
  %35 = and i32 %22, %0
  %36 = xor i32 %13, %0
  %37 = xor i32 %35, %36
  %38 = xor i32 %30, %2
  %39 = and i32 %2, %0
  %40 = xor i32 %1, %0
  %41 = or i32 %39, %40
  %42 = xor i32 %2, %0
  %43 = xor i32 %42, -1
  %44 = and i32 %30, %43
  %45 = xor i32 %0, -1
  %46 = or i32 %8, %1
  %47 = or i32 %46, %45
  %48 = and i32 %9, %1
  %49 = shl i32 %48, 1
  %50 = and i32 %1, %0
  %51 = or i32 %50, %43
  %52 = xor i32 %22, -1
  %53 = or i32 %52, %0
  %54 = xor i32 %39, -1
  %55 = xor i32 %40, -1
  %56 = and i32 %54, %55
  %57 = and i32 %22, %45
  %58 = and i32 %13, %0
  %59 = or i32 %57, %58
  %60 = xor i32 %24, %0
  %61 = xor i32 %36, -1
  %62 = or i32 %35, %61
  %63 = shl i32 %62, 2
  %64 = or i32 %40, %20
  %65 = or i32 %39, %32
  %66 = and i32 %24, %0
  %67 = and i32 %14, %0
  %68 = xor i32 %9, -1
  %69 = or i32 %68, %1
  %70 = xor i32 %66, -1
  %71 = xor i32 %57, %70
  %72 = xor i32 %50, -1
  %73 = and i32 %43, %72
  %74 = shl i32 %73, 1
  %75 = xor i32 %16, %2
  %76 = xor i32 %39, %33
  %77 = shl i32 %76, 1
  %78 = and i32 %19, %55
  %79 = and i32 %7, %0
  %80 = xor i32 %79, -1
  %81 = and i32 %80, %2
  %82 = shl i32 %81, 1
  %83 = and i32 %30, %14
  %84 = and i32 %42, %80
  %85 = and i32 %28, %1
  %86 = and i32 %7, %2
  %87 = and i32 %86, %0
  %88 = or i32 %7, %2
  %89 = and i32 %88, %45
  %90 = xor i32 %87, -1
  %91 = xor i32 %89, %90
  %92 = or i32 %27, %40
  %93 = or i32 %13, %0
  %94 = xor i32 %87, %93
  %95 = or i32 %14, %45
  %96 = and i32 %13, %45
  %97 = xor i32 %46, -1
  %98 = xor i32 %97, %0
  %99 = and i32 %28, %55
  %100 = or i32 %40, %8
  %101 = and i32 %42, %72
  %102 = and i32 %19, %1
  %103 = shl i32 %102, 1
  %104 = and i32 %8, %55
  %105 = and i32 %9, %55
  %106 = xor i32 %19, %1
  %107 = or i32 %27, %7
  %108 = or i32 %68, %55
  %109 = xor i32 %39, %24
  %110 = and i32 %42, %40
  %111 = and i32 %43, %1
  %112 = shl i32 %111, 1
  %113 = add i32 %40, 1
  %114 = and i32 %43, %7
  %115 = and i32 %8, %80
  %116 = or i32 %43, %7
  %117 = or i32 %57, %66
  %118 = and i32 %13, %72
  %119 = shl i32 %118, 1
  %120 = xor i32 %87, %61
  %121 = and i32 %40, %28
  %122 = or i32 %39, %55
  %123 = and i32 %14, %72
  %124 = or i32 %33, %45
  %125 = or i32 %25, %45
  %126 = or i32 %32, %79
  %127 = and i32 %30, %2
  %128 = xor i32 %30, -1
  %129 = or i32 %14, %128
  %130 = or i32 %87, %36
  %131 = or i32 %40, %2
  %132 = or i32 %87, %89
  %133 = xor i32 %68, %1
  %134 = shl i32 %27, 1
  %135 = xor i32 %27, %1
  %136 = and i32 %28, %7
  %137 = and i32 %30, %8
  %138 = or i32 %79, %14
  %139 = or i32 %27, %55
  %140 = and i32 %33, %0
  %141 = shl i32 %140, 2
  %142 = and i32 %42, %55
  %143 = or i32 %42, %55
  %144 = xor i32 %24, %50
  %145 = or i32 %128, %2
  %146 = or i32 %8, %55
  %147 = or i32 %13, %45
  %148 = xor i32 %9, %50
  %149 = or i32 %27, %22
  %150 = or i32 %42, %128
  %151 = and i32 %19, %7
  %152 = and i32 %52, %45
  %153 = shl i32 %152, 1
  %154 = and i32 %43, %80
  %155 = and i32 %86, %45
  %156 = and i32 %88, %0
  %157 = or i32 %155, %156
  %158 = or i32 %20, %55
  %159 = and i32 %8, %72
  %160 = and i32 %40, %43
  %161 = xor i32 %33, %0
  %162 = add i32 %46, 1
  %163 = shl i32 %58, 1
  %164 = or i32 %32, %0
  %165 = or i32 %46, %0
  %166 = xor i32 %60, -1
  %167 = xor i32 %35, %166
  %168 = and i32 %19, %40
  %169 = and i32 %52, %0
  %170 = add i32 %13, 1
  %171 = and i32 %16, %14
  %172 = xor i32 %79, %2
  %173 = or i32 %22, %79
  %174 = or i32 %24, %45
  %175 = xor i32 %22, %0
  %176 = add i32 %9, 1
  %177 = add i32 %16, 1
  %178 = or i32 %39, %25
  %179 = xor i32 %39, %1
  %180 = and i32 %46, %45
  %181 = or i32 %22, %45
  %182 = xor i32 %39, %30
  %183 = and i32 %16, %8
  %184 = xor i32 %79, %33
  %185 = add i32 %2, 1
  %186 = or i32 %42, %50
  %187 = add i32 %30, 1
  %188 = or i32 %20, %1
  %189 = or i32 %14, %0
  %190 = xor i32 %88, %45
  %191 = xor i32 %190, %87
  %192 = or i32 %13, %50
  %193 = xor i32 %72, %2
  %194 = shl i32 %7, 1
  %195 = xor i32 %39, %16
  %196 = xor i32 %79, %52
  %197 = xor i32 %24, 2147483647
  %198 = or i32 %197, %0
  %199 = xor i32 %198, %35
  %200 = or i32 %42, %40
  %201 = and i32 %54, %7
  %202 = shl i32 %201, 1
  %203 = or i32 %32, %45
  %204 = or i32 %27, %1
  %205 = and i32 %42, %16
  %206 = or i32 %42, %1
  %207 = xor i32 %9, %1
  %208 = and i32 %43, %55
  %209 = shl i32 %208, 1
  %210 = or i32 %50, %68
  %211 = or i32 %52, %45
  %212 = or i32 %50, %14
  %213 = shl i32 %212, 1
  %214 = and i32 %25, %45
  %215 = mul i32 %214, 18
  %216 = and i32 %32, %45
  %217 = and i32 %32, %0
  %218 = and i32 %97, %45
  %219 = shl i32 %218, 1
  %220 = mul i32 %57, -15
  %221 = and i32 %97, %0
  %222 = xor i32 %4, -1
  %223 = xor i32 %3, -1
  %224 = and i32 %223, %5
  %225 = and i32 %224, %222
  %226 = or i32 %223, %5
  %227 = and i32 %226, %4
  %228 = or i32 %225, %227
  %229 = and i32 %5, %4
  %230 = xor i32 %229, %11
  %231 = and i32 %4, %3
  %232 = xor i32 %231, -1
  %233 = xor i32 %5, %3
  %234 = xor i32 %233, -1
  %235 = and i32 %234, %232
  %236 = xor i32 %5, -1
  %237 = and i32 %236, %4
  %238 = and i32 %5, %3
  %239 = and i32 %238, %4
  %240 = or i32 %5, %3
  %241 = xor i32 %240, %4
  %242 = or i32 %239, %241
  %243 = xor i32 %5, %4
  %244 = xor i32 %243, -1
  %245 = or i32 %231, %244
  %246 = xor i32 %237, -1
  %247 = and i32 %246, %3
  %248 = or i32 %236, %4
  %249 = xor i32 %248, %3
  %250 = or i32 %223, %4
  %251 = xor i32 %250, -1
  %252 = or i32 %236, %251
  %253 = xor i32 %4, %3
  %254 = xor i32 %253, -1
  %255 = or i32 %254, %5
  %256 = shl i32 %255, 1
  %257 = and i32 %244, %223
  %258 = shl i32 %257, 1
  %259 = or i32 %244, %251
  %260 = shl i32 %259, 1
  %261 = and i32 %243, %3
  %262 = or i32 %243, %253
  %263 = and i32 %224, %4
  %264 = xor i32 %226, %222
  %265 = xor i32 %264, %263
  %266 = and i32 %248, %3
  %267 = and i32 %243, %232
  %268 = and i32 %223, %4
  %269 = xor i32 %268, -1
  %270 = and i32 %243, %269
  %271 = or i32 %233, %4
  %272 = xor i32 %271, -1
  %273 = or i32 %263, %272
  %274 = or i32 %236, %3
  %275 = xor i32 %237, %274
  %276 = xor i32 %248, -1
  %277 = or i32 %276, %3
  %278 = and i32 %238, %222
  %279 = and i32 %240, %4
  %280 = xor i32 %279, 2147483647
  %281 = xor i32 %280, %278
  %282 = shl i32 %281, 1
  %283 = and i32 %248, %254
  %284 = xor i32 %234, %4
  %285 = and i32 %236, %3
  %286 = xor i32 %285, -1
  %287 = xor i32 %268, %286
  %288 = and i32 %233, %4
  %289 = or i32 %233, %231
  %290 = xor i32 %227, -1
  %291 = xor i32 %225, %290
  %292 = and i32 %244, %269
  %293 = xor i32 %11, %5
  %294 = or i32 %286, %222
  %295 = or i32 %244, %254
  %296 = xor i32 %229, -1
  %297 = xor i32 %296, %3
  %298 = xor i32 %240, -1
  %299 = xor i32 %298, %4
  %300 = and i32 %243, %253
  %301 = or i32 %285, %222
  %302 = and i32 %11, %5
  %303 = and i32 %253, %244
  %304 = shl i32 %303, 1
  %305 = xor i32 %274, -1
  %306 = or i32 %231, %305
  %307 = and i32 %248, %223
  %308 = xor i32 %286, %4
  %309 = xor i32 %274, %4
  %310 = and i32 %243, %11
  %311 = shl i32 %310, 1
  %312 = xor i32 %237, %3
  %313 = or i32 %253, %276
  %314 = or i32 %276, %254
  %315 = or i32 %238, %222
  %316 = or i32 %268, %244
  %317 = and i32 %233, %269
  %318 = or i32 %240, %4
  %319 = or i32 %229, %253
  %320 = or i32 %305, %222
  %321 = and i32 %11, %244
  %322 = and i32 %233, %222
  %323 = xor i32 %232, %5
  %324 = xor i32 %11, -1
  %325 = or i32 %236, %324
  %326 = or i32 %229, %223
  %327 = xor i32 %229, %240
  %328 = shl i32 %327, 1
  %329 = or i32 %5, %4
  %330 = xor i32 %329, -1
  %331 = or i32 %231, %330
  %332 = xor i32 %229, %286
  %333 = or i32 %229, %251
  %334 = xor i32 %324, %5
  %335 = xor i32 %274, %231
  %336 = and i32 %253, %296
  %337 = and i32 %234, %4
  %338 = or i32 %237, %3
  %339 = add i32 %243, 1
  %340 = xor i32 %248, %231
  %341 = or i32 %253, %244
  %342 = add i32 %268, 1
  %343 = xor i32 %250, %5
  %344 = xor i32 %288, -1
  %345 = xor i32 %278, %344
  %346 = and i32 %244, %254
  %347 = add i32 %231, 1
  %348 = or i32 %330, %254
  %349 = or i32 %243, %3
  %350 = and i32 %246, %223
  %351 = or i32 %243, %251
  %352 = add i32 %3, 1
  %353 = xor i32 %231, %5
  %354 = or i32 %268, %5
  %355 = or i32 %237, %238
  %356 = and i32 %234, %222
  %357 = or i32 %237, %254
  %358 = and i32 %274, %222
  %359 = xor i32 %238, -1
  %360 = shl i32 %359, 1
  %361 = and i32 %329, %253
  %362 = or i32 %231, %5
  %363 = and i32 %286, %222
  %364 = and i32 %11, %234
  %365 = shl i32 %364, 2
  %366 = and i32 %329, %3
  %367 = or i32 %298, %4
  %368 = or i32 %253, %330
  %369 = or i32 %240, %222
  %370 = xor i32 %305, %4
  %371 = or i32 %330, %223
  %372 = or i32 %268, %234
  %373 = xor i32 %233, %4
  %374 = xor i32 %373, -1
  %375 = or i32 %239, %374
  %376 = and i32 %233, %11
  %377 = xor i32 %329, %231
  %378 = or i32 %305, %4
  %379 = or i32 %243, %223
  %380 = or i32 %237, %253
  %381 = or i32 %274, %4
  %382 = or i32 %234, %251
  %383 = shl i32 %382, 1
  %384 = and i32 %329, %223
  %385 = and i32 %250, %5
  %386 = and i32 %274, %4
  %387 = or i32 %229, %3
  %388 = xor i32 %229, %3
  %389 = shl i32 %388, 1
  %390 = xor i32 %239, -1
  %391 = xor i32 %322, %390
  %392 = or i32 %236, %254
  %393 = shl i32 %392, 1
  %394 = or i32 %233, %222
  %395 = shl i32 %394, 1
  %396 = and i32 %286, %4
  %397 = shl i32 %396, 1
  %398 = and i32 %236, %254
  %399 = shl i32 %398, 1
  %400 = or i32 %233, %324
  %401 = shl i32 %400, 1
  %402 = and i32 %226, %222
  %403 = or i32 %263, %402
  %404 = or i32 %324, %5
  %405 = or i32 %263, %373
  %406 = xor i32 %330, %3
  %407 = and i32 %254, %5
  %408 = add i32 %329, 1
  %409 = xor i32 %251, %5
  %410 = or i32 %276, %223
  %411 = and i32 %269, %5
  %412 = or i32 %243, %231
  %413 = xor i32 %268, %5
  %414 = or i32 %244, %3
  %415 = or i32 %359, %222
  %416 = and i32 %232, %5
  %417 = xor i32 %285, %4
  %418 = shl i32 %417, 1
  %419 = or i32 %244, %223
  %420 = or i32 %231, %298
  %421 = xor i32 %394, -1
  %422 = or i32 %225, %421
  %423 = or i32 %253, %5
  %424 = xor i32 %329, %3
  %425 = xor i32 %263, %271
  %426 = or i32 %268, %236
  %427 = and i32 %240, %222
  %428 = xor i32 %427, %390
  %429 = xor i32 %240, %231
  %430 = or i32 %229, %298
  %431 = or i32 %359, %4
  %432 = and i32 %296, %3
  %433 = and i32 %296, %223
  %434 = or i32 %278, %279
  %435 = shl i32 %434, 1
  %436 = or i32 %251, %5
  %437 = and i32 %244, %3
  %438 = or i32 %229, %254
  %439 = xor i32 %241, %390
  %440 = and i32 %329, %254
  %441 = and i32 %253, %246
  %442 = and i32 %236, %269
  %443 = and i32 %253, %5
  %444 = and i32 %234, %269
  %445 = or i32 %243, %254
  %446 = or i32 %231, %276
  %447 = or i32 %286, %4
  %448 = or i32 %253, %236
  %449 = xor i32 %268, %359
  %450 = or i32 %285, %4
  %451 = and i32 %11, %236
  %452 = xor i32 %239, %373
  %453 = and i32 %359, %4
  %454 = shl i32 %453, 1
  %455 = xor i32 %225, %394
  %456 = and i32 %253, %236
  %457 = or i32 %231, %234
  %458 = shl i32 %457, 1
  %459 = or i32 %239, %427
  %460 = and i32 %233, %250
  %461 = and i32 %248, %253
  %462 = and i32 %250, %236
  %463 = xor i32 %276, %3
  %464 = shl i32 %463, 1
  %465 = or i32 %234, %4
  %466 = or i32 %330, %3
  %467 = shl i32 %466, 1
  %468 = or i32 %229, %285
  %469 = and i32 %298, %222
  %470 = and i32 %285, %222
  %471 = and i32 %298, %4
  %472 = mul i32 %471, 10
  %473 = and i32 %285, %4
  %474 = mul i32 %473, 17
  %475 = and i32 %305, %222
  %476 = and i32 %305, %4
  %477 = mul i32 %476, 31
  %478 = sub i32 %144, %32
  %479 = add i32 %478, %436
  %480 = add i32 %479, %286
  %481 = sub i32 %480, %468
  %482 = add i32 %481, %239
  %483 = sub i32 %482, %381
  %484 = add i32 %483, %376
  %485 = mul i32 %484, 5
  %486 = sub i32 %200, %180
  %487 = sub i32 %486, %5
  %488 = add i32 %487, %236
  %489 = sub i32 %488, %361
  %490 = add i32 %489, %265
  %491 = mul i32 %490, 3
  %492 = add i32 %67, %217
  %493 = add i32 %492, %292
  %494 = shl i32 %493, 2
  %495 = add i32 %475, %469
  %496 = mul i32 %495, 6
  %497 = add i32 %278, %221
  %498 = mul i32 %497, 11
  %499 = add i32 %470, %216
  %500 = mul i32 %499, 12
  %501 = add i32 %2, -1
  %502 = add i32 %501, %80
  %503 = add i32 %502, %13
  %504 = add i32 %503, %159
  %505 = add i32 %504, %206
  %506 = add i32 %505, %196
  %507 = add i32 %506, %184
  %508 = add i32 %507, %182
  %509 = add i32 %508, %110
  %510 = add i32 %509, %105
  %511 = add i32 %510, %60
  %512 = add i32 %511, %23
  %513 = sub i32 %512, %15
  %514 = add i32 %513, %324
  %515 = add i32 %514, %254
  %516 = add i32 %515, %251
  %517 = add i32 %516, %120
  %518 = add i32 %517, %59
  %519 = add i32 %518, %462
  %520 = add i32 %519, %409
  %521 = add i32 %520, %246
  %522 = add i32 %521, %233
  %523 = add i32 %522, %199
  %524 = add i32 %523, %358
  %525 = add i32 %524, %432
  %526 = add i32 %525, %355
  %527 = add i32 %526, %337
  %528 = add i32 %527, %336
  %529 = add i32 %528, %299
  %530 = add i32 %529, %284
  %531 = add i32 %530, %283
  %532 = add i32 %531, %247
  %533 = add i32 %532, %245
  %534 = add i32 %533, %341
  %535 = shl i32 %534, 1
  %536 = add i32 %0, 2
  %537 = add i32 %536, %16
  %538 = add i32 %537, %50
  %539 = add i32 %538, %113
  %540 = add i32 %539, %177
  %541 = add i32 %540, %185
  %542 = add i32 %541, %187
  %543 = sub i32 %542, %194
  %544 = add i32 %543, %38
  %545 = sub i32 %544, %19
  %546 = sub i32 %545, %75
  %547 = sub i32 %546, %9
  %548 = add i32 %547, %100
  %549 = add i32 %548, %104
  %550 = add i32 %549, %42
  %551 = add i32 %550, %115
  %552 = add i32 %551, %127
  %553 = add i32 %552, %131
  %554 = sub i32 %553, %137
  %555 = add i32 %554, %145
  %556 = sub i32 %555, %146
  %557 = add i32 %556, %162
  %558 = add i32 %557, %24
  %559 = add i32 %558, %39
  %560 = add i32 %559, %170
  %561 = sub i32 %560, %172
  %562 = add i32 %561, %176
  %563 = sub i32 %562, %183
  %564 = sub i32 %563, %193
  %565 = add i32 %564, %22
  %566 = add i32 %565, %352
  %567 = add i32 %566, %3
  %568 = add i32 %567, %18
  %569 = sub i32 %568, %21
  %570 = sub i32 %569, %26
  %571 = sub i32 %570, %29
  %572 = sub i32 %571, %31
  %573 = sub i32 %572, %34
  %574 = add i32 %573, %41
  %575 = sub i32 %574, %44
  %576 = add i32 %575, %47
  %577 = add i32 %576, %51
  %578 = sub i32 %577, %53
  %579 = add i32 %578, %56
  %580 = sub i32 %579, %64
  %581 = sub i32 %580, %65
  %582 = add i32 %581, %66
  %583 = sub i32 %582, %69
  %584 = add i32 %583, %78
  %585 = sub i32 %584, %82
  %586 = add i32 %585, %83
  %587 = add i32 %586, %84
  %588 = sub i32 %587, %85
  %589 = add i32 %588, %92
  %590 = add i32 %589, %95
  %591 = sub i32 %590, %96
  %592 = add i32 %591, %98
  %593 = sub i32 %592, %99
  %594 = add i32 %593, %101
  %595 = sub i32 %594, %106
  %596 = sub i32 %595, %107
  %597 = add i32 %596, %108
  %598 = sub i32 %597, %109
  %599 = sub i32 %598, %114
  %600 = add i32 %599, %116
  %601 = sub i32 %600, %121
  %602 = sub i32 %601, %122
  %603 = add i32 %602, %123
  %604 = sub i32 %603, %124
  %605 = add i32 %604, %125
  %606 = sub i32 %605, %126
  %607 = add i32 %606, %129
  %608 = add i32 %607, %133
  %609 = sub i32 %608, %134
  %610 = add i32 %609, %135
  %611 = sub i32 %610, %136
  %612 = add i32 %611, %138
  %613 = sub i32 %612, %139
  %614 = sub i32 %613, %142
  %615 = add i32 %614, %143
  %616 = add i32 %615, %147
  %617 = sub i32 %616, %148
  %618 = sub i32 %617, %149
  %619 = sub i32 %618, %150
  %620 = sub i32 %619, %151
  %621 = sub i32 %620, %154
  %622 = sub i32 %621, %158
  %623 = sub i32 %622, %160
  %624 = sub i32 %623, %161
  %625 = add i32 %624, %164
  %626 = sub i32 %625, %165
  %627 = sub i32 %626, %168
  %628 = sub i32 %627, %169
  %629 = add i32 %628, %171
  %630 = add i32 %629, %173
  %631 = add i32 %630, %174
  %632 = sub i32 %631, %175
  %633 = sub i32 %632, %178
  %634 = sub i32 %633, %179
  %635 = sub i32 %634, %181
  %636 = add i32 %635, %186
  %637 = add i32 %636, %188
  %638 = sub i32 %637, %189
  %639 = add i32 %638, %192
  %640 = add i32 %639, %195
  %641 = sub i32 %640, %203
  %642 = sub i32 %641, %204
  %643 = add i32 %642, %205
  %644 = add i32 %643, %207
  %645 = add i32 %644, %210
  %646 = sub i32 %645, %211
  %647 = add i32 %646, %35
  %648 = add i32 %647, 1
  %649 = sub i32 %648, %37
  %650 = sub i32 %649, %49
  %651 = sub i32 %650, %71
  %652 = sub i32 %651, %74
  %653 = sub i32 %652, %77
  %654 = sub i32 %653, %91
  %655 = add i32 %654, %94
  %656 = sub i32 %655, %103
  %657 = sub i32 %656, %112
  %658 = sub i32 %657, %117
  %659 = sub i32 %658, %119
  %660 = sub i32 %659, %130
  %661 = add i32 %660, %132
  %662 = sub i32 %661, %141
  %663 = sub i32 %662, %153
  %664 = add i32 %663, %157
  %665 = sub i32 %664, %163
  %666 = add i32 %665, %167
  %667 = sub i32 %666, %191
  %668 = sub i32 %667, %202
  %669 = sub i32 %668, %209
  %670 = sub i32 %669, %213
  %671 = add i32 %670, %215
  %672 = sub i32 %671, %219
  %673 = add i32 %672, %220
  %674 = sub i32 %673, %231
  %675 = add i32 %674, %342
  %676 = add i32 %675, %347
  %677 = sub i32 %676, %253
  %678 = add i32 %677, %268
  %679 = add i32 %678, %250
  %680 = sub i32 %679, %63
  %681 = add i32 %680, %237
  %682 = sub i32 %681, %252
  %683 = sub i32 %682, %293
  %684 = sub i32 %683, %302
  %685 = add i32 %684, %323
  %686 = add i32 %685, %325
  %687 = sub i32 %686, %274
  %688 = sub i32 %687, %329
  %689 = add i32 %688, %334
  %690 = add i32 %689, %339
  %691 = add i32 %690, %343
  %692 = add i32 %691, %353
  %693 = add i32 %692, %354
  %694 = sub i32 %693, %285
  %695 = sub i32 %694, %362
  %696 = sub i32 %695, %385
  %697 = add i32 %696, %305
  %698 = add i32 %697, %238
  %699 = add i32 %698, %404
  %700 = add i32 %699, %407
  %701 = add i32 %700, %408
  %702 = add i32 %701, %411
  %703 = sub i32 %702, %413
  %704 = sub i32 %703, %416
  %705 = sub i32 %704, %423
  %706 = sub i32 %705, %426
  %707 = add i32 %706, %296
  %708 = add i32 %707, %234
  %709 = add i32 %708, %442
  %710 = sub i32 %709, %443
  %711 = add i32 %710, %448
  %712 = add i32 %711, %451
  %713 = add i32 %712, %456
  %714 = add i32 %713, %230
  %715 = add i32 %714, %235
  %716 = add i32 %715, %249
  %717 = sub i32 %716, %256
  %718 = add i32 %717, %261
  %719 = sub i32 %718, %262
  %720 = sub i32 %719, %266
  %721 = add i32 %720, %267
  %722 = add i32 %721, %270
  %723 = add i32 %722, %275
  %724 = add i32 %723, %277
  %725 = sub i32 %724, %287
  %726 = sub i32 %725, %288
  %727 = sub i32 %726, %289
  %728 = add i32 %727, %294
  %729 = sub i32 %728, %295
  %730 = sub i32 %729, %297
  %731 = add i32 %730, %300
  %732 = add i32 %731, %301
  %733 = add i32 %732, %306
  %734 = add i32 %733, %307
  %735 = sub i32 %734, %308
  %736 = sub i32 %735, %309
  %737 = add i32 %736, %312
  %738 = add i32 %737, %313
  %739 = sub i32 %738, %314
  %740 = sub i32 %739, %315
  %741 = add i32 %740, %316
  %742 = add i32 %741, %317
  %743 = sub i32 %742, %318
  %744 = add i32 %743, %319
  %745 = add i32 %744, %320
  %746 = sub i32 %745, %321
  %747 = sub i32 %746, %322
  %748 = add i32 %747, %326
  %749 = add i32 %748, %331
  %750 = sub i32 %749, %332
  %751 = sub i32 %750, %333
  %752 = sub i32 %751, %335
  %753 = add i32 %752, %338
  %754 = sub i32 %753, %340
  %755 = add i32 %754, %241
  %756 = add i32 %755, %346
  %757 = add i32 %756, %348
  %758 = sub i32 %757, %349
  %759 = add i32 %758, %350
  %760 = sub i32 %759, %351
  %761 = add i32 %760, %356
  %762 = add i32 %761, %357
  %763 = sub i32 %762, %360
  %764 = sub i32 %763, %363
  %765 = add i32 %764, %366
  %766 = sub i32 %765, %367
  %767 = sub i32 %766, %368
  %768 = add i32 %767, %369
  %769 = add i32 %768, %370
  %770 = sub i32 %769, %371
  %771 = add i32 %770, %372
  %772 = sub i32 %771, %377
  %773 = add i32 %772, %378
  %774 = sub i32 %773, %379
  %775 = add i32 %774, %380
  %776 = sub i32 %775, %384
  %777 = add i32 %776, %386
  %778 = sub i32 %777, %387
  %779 = sub i32 %778, %373
  %780 = sub i32 %779, %393
  %781 = sub i32 %780, %399
  %782 = sub i32 %781, %406
  %783 = sub i32 %782, %410
  %784 = add i32 %783, %412
  %785 = sub i32 %784, %414
  %786 = sub i32 %785, %415
  %787 = add i32 %786, %419
  %788 = sub i32 %787, %420
  %789 = sub i32 %788, %424
  %790 = sub i32 %789, %429
  %791 = sub i32 %790, %430
  %792 = sub i32 %791, %431
  %793 = sub i32 %792, %271
  %794 = sub i32 %793, %433
  %795 = sub i32 %794, %437
  %796 = sub i32 %795, %438
  %797 = add i32 %796, %440
  %798 = add i32 %797, %279
  %799 = sub i32 %798, %441
  %800 = sub i32 %799, %444
  %801 = add i32 %800, %445
  %802 = sub i32 %801, %446
  %803 = sub i32 %802, %447
  %804 = sub i32 %803, %449
  %805 = sub i32 %804, %450
  %806 = add i32 %805, %460
  %807 = sub i32 %806, %461
  %808 = sub i32 %807, %465
  %809 = sub i32 %808, %228
  %810 = add i32 %809, %242
  %811 = sub i32 %810, %258
  %812 = sub i32 %811, %260
  %813 = sub i32 %812, %273
  %814 = sub i32 %813, %291
  %815 = sub i32 %814, %304
  %816 = sub i32 %815, %311
  %817 = sub i32 %816, %328
  %818 = sub i32 %817, %345
  %819 = sub i32 %818, %365
  %820 = sub i32 %819, %375
  %821 = sub i32 %820, %383
  %822 = sub i32 %821, %389
  %823 = add i32 %822, %391
  %824 = sub i32 %823, %395
  %825 = sub i32 %824, %397
  %826 = sub i32 %825, %401
  %827 = add i32 %826, %403
  %828 = sub i32 %827, %405
  %829 = sub i32 %828, %418
  %830 = add i32 %829, %422
  %831 = sub i32 %830, %425
  %832 = add i32 %831, %428
  %833 = sub i32 %832, %439
  %834 = add i32 %833, %452
  %835 = sub i32 %834, %454
  %836 = sub i32 %835, %455
  %837 = sub i32 %836, %458
  %838 = add i32 %837, %459
  %839 = sub i32 %838, %464
  %840 = sub i32 %839, %467
  %841 = add i32 %840, %472
  %842 = add i32 %841, %474
  %843 = add i32 %842, %477
  %844 = sub i32 %843, %435
  %845 = add i32 %844, %496
  %846 = add i32 %845, %498
  %847 = add i32 %846, %500
  %848 = sub i32 %847, %282
  %849 = add i32 %848, %494
  %850 = add i32 %849, %491
  %851 = add i32 %850, %485
  %852 = add i32 %851, %535
  %853 = icmp eq i32 %12, %852
  %854 = select i1 %853, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %855 = tail call i32 @puts(i8* nonnull dereferenceable(1) %854)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
