; ModuleID = '../.././c_source_file/0201_path_condition_crackme.c'
source_filename = "../.././c_source_file/0201_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %1, -1
  %5 = and i32 %4, %0
  %6 = xor i32 %5, -1
  %7 = xor i32 %2, %1
  %8 = and i32 %7, %6
  %9 = and i32 %4, %2
  %10 = and i32 %9, %0
  %11 = xor i32 %7, %0
  %12 = xor i32 %10, -1
  %13 = xor i32 %11, %12
  %14 = sub i32 %13, %8
  %15 = or i32 %4, %2
  %16 = xor i32 %15, %0
  %17 = xor i32 %10, 1073741823
  %18 = xor i32 %16, %17
  %19 = xor i32 %0, -1
  %20 = and i32 %7, %19
  %21 = xor i32 %2, -1
  %22 = or i32 %4, %0
  %23 = xor i32 %22, -1
  %24 = or i32 %21, %23
  %25 = and i32 %21, %0
  %26 = xor i32 %25, -1
  %27 = xor i32 %1, %0
  %28 = xor i32 %27, -1
  %29 = and i32 %26, %28
  %30 = or i32 %10, %11
  %31 = and i32 %2, %1
  %32 = and i32 %31, %19
  %33 = or i32 %2, %1
  %34 = and i32 %33, %0
  %35 = xor i32 %34, 2147483647
  %36 = xor i32 %35, %32
  %37 = or i32 %21, %28
  %38 = xor i32 %7, -1
  %39 = xor i32 %38, %0
  %40 = or i32 %27, %21
  %41 = xor i32 %2, %0
  %42 = or i32 %41, %1
  %43 = shl i32 %42, 1
  %44 = and i32 %1, %0
  %45 = or i32 %21, %1
  %46 = xor i32 %45, %44
  %47 = or i32 %21, %0
  %48 = xor i32 %47, -1
  %49 = or i32 %27, %48
  %50 = shl i32 %49, 1
  %51 = or i32 %23, %2
  %52 = or i32 %1, %0
  %53 = and i32 %7, %22
  %54 = xor i32 %41, -1
  %55 = and i32 %22, %54
  %56 = or i32 %54, %4
  %57 = or i32 %28, %2
  %58 = or i32 %2, %0
  %59 = xor i32 %58, -1
  %60 = xor i32 %59, %1
  %61 = xor i32 %52, -1
  %62 = or i32 %7, %61
  %63 = xor i32 %31, %0
  %64 = shl i32 %63, 1
  %65 = or i32 %25, %27
  %66 = and i32 %2, %0
  %67 = xor i32 %66, %22
  %68 = xor i32 %52, %2
  %69 = or i32 %44, %54
  %70 = and i32 %33, %19
  %71 = and i32 %58, %4
  %72 = shl i32 %71, 1
  %73 = xor i32 %44, -1
  %74 = and i32 %7, %73
  %75 = and i32 %31, %0
  %76 = xor i32 %75, -1
  %77 = xor i32 %20, %76
  %78 = xor i32 %31, -1
  %79 = or i32 %78, %0
  %80 = and i32 %52, %38
  %81 = and i32 %21, %6
  %82 = or i32 %41, %4
  %83 = shl i32 %82, 1
  %84 = and i32 %78, %0
  %85 = or i32 %5, %2
  %86 = xor i32 %66, -1
  %87 = and i32 %86, %4
  %88 = and i32 %41, %4
  %89 = xor i32 %73, %2
  %90 = and i32 %21, %73
  %91 = shl i32 %90, 1
  %92 = add i32 %27, 1
  %93 = and i32 %38, %0
  %94 = and i32 %21, %1
  %95 = or i32 %94, %5
  %96 = and i32 %15, %19
  %97 = xor i32 %96, %12
  %98 = or i32 %10, %16
  %99 = xor i32 %94, -1
  %100 = and i32 %99, %19
  %101 = or i32 %41, %23
  %102 = shl i32 %101, 1
  %103 = or i32 %61, %2
  %104 = or i32 %44, %38
  %105 = or i32 %54, %23
  %106 = and i32 %86, %28
  %107 = and i32 %38, %19
  %108 = shl i32 %107, 1
  %109 = and i32 %54, %4
  %110 = add i32 %44, 1
  %111 = or i32 %41, %28
  %112 = xor i32 %26, %1
  %113 = add i32 %58, 1
  %114 = and i32 %27, %2
  %115 = xor i32 %33, -1
  %116 = or i32 %115, %19
  %117 = and i32 %22, %21
  %118 = and i32 %27, %86
  %119 = or i32 %59, %28
  %120 = or i32 %75, %20
  %121 = and i32 %78, %19
  %122 = or i32 %48, %4
  %123 = and i32 %54, %73
  %124 = shl i32 %123, 1
  %125 = and i32 %45, %19
  %126 = xor i32 %45, -1
  %127 = or i32 %25, %126
  %128 = shl i32 %127, 1
  %129 = or i32 %66, %23
  %130 = shl i32 %129, 1
  %131 = or i32 %5, %54
  %132 = shl i32 %131, 1
  %133 = shl i32 %78, 1
  %134 = and i32 %41, %6
  %135 = or i32 %115, %0
  %136 = and i32 %22, %38
  %137 = xor i32 %33, %0
  %138 = or i32 %41, %44
  %139 = and i32 %58, %27
  %140 = xor i32 %25, %45
  %141 = xor i32 %66, %33
  %142 = or i32 %54, %61
  %143 = or i32 %48, %28
  %144 = or i32 %44, %126
  %145 = and i32 %52, %21
  %146 = and i32 %41, %28
  %147 = or i32 %21, %61
  %148 = shl i32 %147, 1
  %149 = or i32 %44, %59
  %150 = or i32 %5, %21
  %151 = xor i32 %86, %1
  %152 = or i32 %59, %4
  %153 = and i32 %27, %21
  %154 = or i32 %44, %21
  %155 = xor i32 %25, %1
  %156 = and i32 %86, %1
  %157 = and i32 %47, %1
  %158 = xor i32 %157, -1
  %159 = or i32 %7, %44
  %160 = and i32 %9, %19
  %161 = and i32 %15, %0
  %162 = or i32 %160, %161
  %163 = and i32 %47, %28
  %164 = and i32 %27, %26
  %165 = or i32 %7, %23
  %166 = or i32 %38, %23
  %167 = or i32 %44, %2
  %168 = or i32 %27, %54
  %169 = or i32 %10, %96
  %170 = or i32 %75, %70
  %171 = and i32 %28, %2
  %172 = xor i32 %47, %1
  %173 = xor i32 %47, %44
  %174 = shl i32 %173, 1
  %175 = xor i32 %45, %0
  %176 = and i32 %21, %28
  %177 = or i32 %75, %137
  %178 = or i32 %44, %48
  %179 = and i32 %27, %54
  %180 = or i32 %66, %94
  %181 = add i32 %33, 1
  %182 = or i32 %66, %115
  %183 = or i32 %66, %27
  %184 = or i32 %25, %28
  %185 = and i32 %54, %1
  %186 = xor i32 %99, %0
  %187 = or i32 %27, %2
  %188 = or i32 %7, %19
  %189 = xor i32 %5, %99
  %190 = or i32 %33, %19
  %191 = or i32 %33, %0
  %192 = xor i32 %23, %2
  %193 = and i32 %47, %4
  %194 = or i32 %99, %19
  %195 = shl i32 %194, 1
  %196 = or i32 %32, %34
  %197 = or i32 %44, %115
  %198 = and i32 %52, %54
  %199 = or i32 %99, %0
  %200 = or i32 %126, %0
  %201 = xor i32 %25, %78
  %202 = xor i32 %5, %2
  %203 = xor i32 %6, %2
  %204 = xor i32 %126, %0
  %205 = xor i32 %58, %1
  %206 = xor i32 %70, %76
  %207 = shl i32 %23, 1
  %208 = or i32 %41, %5
  %209 = and i32 %38, %73
  %210 = xor i32 %78, %0
  %211 = shl i32 %210, 1
  %212 = xor i32 %75, %11
  %213 = or i32 %78, %19
  %214 = or i32 %94, %0
  %215 = or i32 %7, %5
  %216 = add i32 %1, 1
  %217 = xor i32 %66, %99
  %218 = xor i32 %94, %0
  %219 = xor i32 %137, 2147483647
  %220 = xor i32 %219, %75
  %221 = shl i32 %220, 1
  %222 = and i32 %41, %1
  %223 = xor i32 %188, -1
  %224 = or i32 %160, %223
  %225 = or i32 %25, %1
  %226 = and i32 %6, %2
  %227 = and i32 %54, %28
  %228 = or i32 %66, %1
  %229 = or i32 %7, %0
  %230 = xor i32 %22, %2
  %231 = and i32 %54, %6
  %232 = and i32 %26, %4
  %233 = or i32 %59, %1
  %234 = and i32 %41, %22
  %235 = or i32 %66, %61
  %236 = xor i32 %66, %52
  %237 = and i32 %73, %2
  %238 = or i32 %45, %0
  %239 = and i32 %7, %0
  %240 = xor i32 %239, -1
  %241 = xor i32 %32, %240
  %242 = or i32 %48, %1
  %243 = or i32 %45, %19
  %244 = shl i32 %243, 1
  %245 = and i32 %52, %2
  %246 = shl i32 %94, 1
  %247 = and i32 %58, %1
  %248 = xor i32 %58, %44
  %249 = or i32 %126, %19
  %250 = or i32 %31, %0
  %251 = or i32 %31, %5
  %252 = xor i32 %66, %1
  %253 = xor i32 %44, %2
  %254 = shl i32 %253, 1
  %255 = xor i32 %5, %78
  %256 = or i32 %5, %38
  %257 = xor i32 %10, %229
  %258 = and i32 %22, %2
  %259 = or i32 %94, %19
  %260 = or i32 %38, %0
  %261 = and i32 %115, %19
  %262 = mul i32 %261, -7
  %263 = and i32 %94, %19
  %264 = and i32 %115, %0
  %265 = mul i32 %264, 13
  %266 = and i32 %94, %0
  %267 = mul i32 %266, 21
  %268 = and i32 %126, %19
  %269 = shl i32 %268, 1
  %270 = mul i32 %32, -6
  %271 = and i32 %126, %0
  %272 = add i32 %185, %263
  %273 = add i32 %272, %183
  %274 = add i32 %273, %125
  %275 = sub i32 %274, %18
  %276 = shl i32 %275, 2
  %277 = add i32 %214, %258
  %278 = add i32 %277, %238
  %279 = mul i32 %278, -3
  %280 = add i32 %205, %92
  %281 = sub i32 %280, %75
  %282 = mul i32 %281, 5
  %283 = add i32 %27, -1
  %284 = add i32 %283, %54
  %285 = add i32 %284, %40
  %286 = add i32 %285, %250
  %287 = add i32 %286, %232
  %288 = add i32 %287, %231
  %289 = add i32 %288, %199
  %290 = add i32 %289, %179
  %291 = add i32 %290, %172
  %292 = add i32 %291, %165
  %293 = add i32 %292, %143
  %294 = add i32 %293, %134
  %295 = add i32 %294, %119
  %296 = add i32 %295, %118
  %297 = add i32 %296, %109
  %298 = add i32 %297, %56
  %299 = add i32 %298, %55
  %300 = add i32 %299, %29
  %301 = add i32 %300, %257
  %302 = add i32 %301, %36
  %303 = shl i32 %302, 1
  %304 = sub i32 %19, %0
  %305 = add i32 %304, %1
  %306 = add i32 %305, %216
  %307 = sub i32 %306, %52
  %308 = add i32 %307, %61
  %309 = add i32 %308, %110
  %310 = add i32 %309, %44
  %311 = add i32 %310, %6
  %312 = sub i32 %311, %5
  %313 = add i32 %312, %22
  %314 = add i32 %313, %24
  %315 = add i32 %314, %37
  %316 = add i32 %315, %51
  %317 = sub i32 %316, %57
  %318 = sub i32 %317, %68
  %319 = add i32 %318, %81
  %320 = add i32 %319, %85
  %321 = sub i32 %320, %89
  %322 = add i32 %321, %103
  %323 = sub i32 %322, %41
  %324 = sub i32 %323, %66
  %325 = add i32 %324, %113
  %326 = sub i32 %325, %114
  %327 = sub i32 %326, %117
  %328 = add i32 %327, %145
  %329 = add i32 %328, %25
  %330 = sub i32 %329, %150
  %331 = add i32 %330, %153
  %332 = add i32 %331, %154
  %333 = sub i32 %332, %167
  %334 = add i32 %333, %171
  %335 = add i32 %334, %176
  %336 = add i32 %335, %99
  %337 = add i32 %336, %181
  %338 = sub i32 %337, %187
  %339 = add i32 %338, %48
  %340 = add i32 %339, %192
  %341 = add i32 %340, %126
  %342 = sub i32 %341, %202
  %343 = add i32 %342, %203
  %344 = sub i32 %343, %207
  %345 = add i32 %344, %226
  %346 = sub i32 %345, %230
  %347 = add i32 %346, %237
  %348 = add i32 %347, %245
  %349 = sub i32 %348, %47
  %350 = add i32 %349, %31
  %351 = sub i32 %350, %20
  %352 = sub i32 %351, %39
  %353 = sub i32 %352, %34
  %354 = add i32 %353, %46
  %355 = add i32 %354, %53
  %356 = add i32 %355, %60
  %357 = add i32 %356, %62
  %358 = add i32 %357, %65
  %359 = sub i32 %358, %67
  %360 = add i32 %359, %69
  %361 = add i32 %360, %70
  %362 = sub i32 %361, %74
  %363 = add i32 %362, %79
  %364 = sub i32 %363, %80
  %365 = add i32 %364, %84
  %366 = add i32 %365, %87
  %367 = add i32 %366, %88
  %368 = sub i32 %367, %91
  %369 = add i32 %368, %93
  %370 = sub i32 %369, %95
  %371 = add i32 %370, %100
  %372 = add i32 %371, %104
  %373 = sub i32 %372, %105
  %374 = add i32 %373, %106
  %375 = sub i32 %374, %111
  %376 = sub i32 %375, %112
  %377 = add i32 %376, %116
  %378 = sub i32 %377, %121
  %379 = add i32 %378, %122
  %380 = sub i32 %379, %133
  %381 = add i32 %380, %135
  %382 = sub i32 %381, %136
  %383 = sub i32 %382, %137
  %384 = add i32 %383, %138
  %385 = add i32 %384, %139
  %386 = sub i32 %385, %140
  %387 = add i32 %386, %141
  %388 = add i32 %387, %142
  %389 = sub i32 %388, %144
  %390 = add i32 %389, %146
  %391 = sub i32 %390, %148
  %392 = sub i32 %391, %149
  %393 = sub i32 %392, %151
  %394 = sub i32 %393, %11
  %395 = sub i32 %394, %152
  %396 = add i32 %395, %155
  %397 = add i32 %396, %156
  %398 = add i32 %397, %158
  %399 = sub i32 %398, %159
  %400 = add i32 %399, %163
  %401 = add i32 %400, %164
  %402 = sub i32 %401, %166
  %403 = add i32 %402, %168
  %404 = add i32 %403, %175
  %405 = sub i32 %404, %178
  %406 = add i32 %405, %180
  %407 = add i32 %406, %182
  %408 = add i32 %407, %184
  %409 = sub i32 %408, %186
  %410 = sub i32 %409, %188
  %411 = add i32 %410, %189
  %412 = sub i32 %411, %190
  %413 = sub i32 %412, %191
  %414 = add i32 %413, %193
  %415 = sub i32 %414, %197
  %416 = add i32 %415, %198
  %417 = sub i32 %416, %200
  %418 = add i32 %417, %201
  %419 = add i32 %418, %204
  %420 = sub i32 %419, %208
  %421 = add i32 %420, %209
  %422 = sub i32 %421, %213
  %423 = sub i32 %422, %215
  %424 = add i32 %423, %217
  %425 = sub i32 %424, %218
  %426 = sub i32 %425, %222
  %427 = sub i32 %426, %225
  %428 = add i32 %427, %227
  %429 = add i32 %428, %228
  %430 = add i32 %429, %229
  %431 = add i32 %430, %233
  %432 = add i32 %431, %234
  %433 = add i32 %432, %235
  %434 = sub i32 %433, %236
  %435 = sub i32 %434, %242
  %436 = sub i32 %435, %246
  %437 = add i32 %436, %247
  %438 = add i32 %437, %248
  %439 = sub i32 %438, %249
  %440 = add i32 %439, %251
  %441 = sub i32 %440, %252
  %442 = sub i32 %441, %254
  %443 = sub i32 %442, %255
  %444 = sub i32 %443, %256
  %445 = sub i32 %444, %259
  %446 = sub i32 %445, %239
  %447 = sub i32 %446, %260
  %448 = add i32 %447, %271
  %449 = sub i32 %448, %30
  %450 = sub i32 %449, %43
  %451 = sub i32 %450, %50
  %452 = sub i32 %451, %64
  %453 = sub i32 %452, %72
  %454 = sub i32 %453, %77
  %455 = sub i32 %454, %83
  %456 = sub i32 %455, %97
  %457 = add i32 %456, %98
  %458 = sub i32 %457, %102
  %459 = sub i32 %458, %108
  %460 = sub i32 %459, %120
  %461 = sub i32 %460, %124
  %462 = sub i32 %461, %128
  %463 = sub i32 %462, %130
  %464 = sub i32 %463, %132
  %465 = add i32 %464, %162
  %466 = add i32 %465, %169
  %467 = sub i32 %466, %170
  %468 = sub i32 %467, %174
  %469 = sub i32 %468, %177
  %470 = sub i32 %469, %195
  %471 = sub i32 %470, %196
  %472 = sub i32 %471, %206
  %473 = sub i32 %472, %211
  %474 = sub i32 %473, %212
  %475 = add i32 %474, %224
  %476 = add i32 %475, %241
  %477 = sub i32 %476, %244
  %478 = add i32 %477, %262
  %479 = add i32 %478, %265
  %480 = add i32 %479, %267
  %481 = sub i32 %480, %269
  %482 = add i32 %481, %270
  %483 = sub i32 %482, %221
  %484 = add i32 %483, %279
  %485 = add i32 %484, %282
  %486 = add i32 %485, %276
  %487 = add i32 %486, %303
  %488 = icmp eq i32 %14, %487
  %489 = select i1 %488, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %490 = tail call i32 @puts(i8* nonnull dereferenceable(1) %489)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
