digraph "DFG for'main' function" {
	Node0x15c5aa8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x15c5b28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x15c5bb8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x15c6018[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x15c60f8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x15c6218[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x15c6450[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x15c6508[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x15c7478[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x15c7b00[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x15c7b70[shape=record, label="  %9 = shl i32 %6, 1"];
	Node0x15c7be0[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x15c7c50[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x15c7cc0[shape=record, label="  %12 = or i32 %6, %11"];
	Node0x15c7d30[shape=record, label="  %13 = and i32 %6, %11"];
	Node0x15c7da0[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x15c7e10[shape=record, label="  %15 = shl i32 %8, 2"];
	Node0x15c7e80[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x15c7ef0[shape=record, label="  %17 = add i32 %13, %11"];
	Node0x15c7f60[shape=record, label="  %18 = add i32 %17, %12"];
	Node0x15c7fd0[shape=record, label="  %19 = add i32 %18, %14"];
	Node0x15c8040[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x15c80b0[shape=record, label="  %21 = sub i32 2, %9"];
	Node0x15c8120[shape=record, label="  %22 = add i32 %21, %7"];
	Node0x15c8190[shape=record, label="  %23 = add i32 %22, %10"];
	Node0x15c8200[shape=record, label="  %24 = sub i32 %23, %13"];
	Node0x15c8270[shape=record, label="  %25 = sub i32 %24, %16"];
	Node0x15c82e0[shape=record, label="  %26 = add i32 %25, %20"];
	Node0x15c8350[shape=record, label="  %27 = icmp eq i32 %8, %26"];
	Node0x15669d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x15c83e0[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0x15c8638[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x15c8798[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x15c8858[shape=record, label="  ret i32 0"];
	Node0x15c5aa8 -> Node0x15c5b28;
	Node0x15c5b28 -> Node0x15c5bb8;
	Node0x15c5bb8 -> Node0x15c6018;
	Node0x15c6018 -> Node0x15c60f8;
	Node0x15c60f8 -> Node0x15c6218;
	Node0x15c6218 -> Node0x15c6450;
	Node0x15c6450 -> Node0x15c6508;
	Node0x15c6508 -> Node0x15c7478;
	Node0x15c7478 -> Node0x15c7b00;
	Node0x15c7b00 -> Node0x15c7b70;
	Node0x15c7b70 -> Node0x15c7be0;
	Node0x15c7be0 -> Node0x15c7c50;
	Node0x15c7c50 -> Node0x15c7cc0;
	Node0x15c7cc0 -> Node0x15c7d30;
	Node0x15c7d30 -> Node0x15c7da0;
	Node0x15c7da0 -> Node0x15c7e10;
	Node0x15c7e10 -> Node0x15c7e80;
	Node0x15c7e80 -> Node0x15c7ef0;
	Node0x15c7ef0 -> Node0x15c7f60;
	Node0x15c7f60 -> Node0x15c7fd0;
	Node0x15c7fd0 -> Node0x15c8040;
	Node0x15c8040 -> Node0x15c80b0;
	Node0x15c80b0 -> Node0x15c8120;
	Node0x15c8120 -> Node0x15c8190;
	Node0x15c8190 -> Node0x15c8200;
	Node0x15c8200 -> Node0x15c8270;
	Node0x15c8270 -> Node0x15c82e0;
	Node0x15c82e0 -> Node0x15c8350;
	Node0x15c8350 -> Node0x15669d8;
	Node0x15669d8 -> Node0x15c83e0;
	Node0x15c83e0 -> Node0x15c8638;
	Node0x15c8638 -> Node0x15c8798;
	Node0x15c8798 -> Node0x15c8858;
edge [color=red]
	Node0x15c5aa8 -> Node0x15c5bb8;
	Node0x15c5bb8 -> Node0x15c6018;
	Node0x15c5b28 -> Node0x15c60f8;
	Node0x15c60f8 -> Node0x15c6218;
	Node0x15c5aa8 -> Node0x15c6450;
	Node0x15c5b28 -> Node0x15c6450;
	Node0x15c5aa8 -> Node0x15c6508;
	Node0x15c5b28 -> Node0x15c7478;
	Node0x15c7478 -> Node0x15c7b00;
	Node0x15c6508 -> Node0x15c7b00;
	Node0x15c6508 -> Node0x15c7b70;
	Node0x15c7b70 -> Node0x15c7be0;
	Node0x15c7478 -> Node0x15c7c50;
	Node0x15c6508 -> Node0x15c7cc0;
	Node0x15c7c50 -> Node0x15c7cc0;
	Node0x15c6508 -> Node0x15c7d30;
	Node0x15c7c50 -> Node0x15c7d30;
	Node0x15c7478 -> Node0x15c7da0;
	Node0x15c6508 -> Node0x15c7da0;
	Node0x15c7b00 -> Node0x15c7e10;
	Node0x15c7e10 -> Node0x15c7e80;
	Node0x15c7d30 -> Node0x15c7ef0;
	Node0x15c7c50 -> Node0x15c7ef0;
	Node0x15c7ef0 -> Node0x15c7f60;
	Node0x15c7cc0 -> Node0x15c7f60;
	Node0x15c7f60 -> Node0x15c7fd0;
	Node0x15c7da0 -> Node0x15c7fd0;
	Node0x15c7fd0 -> Node0x15c8040;
	Node0x15c7b70 -> Node0x15c80b0;
	Node0x15c80b0 -> Node0x15c8120;
	Node0x15c7478 -> Node0x15c8120;
	Node0x15c8120 -> Node0x15c8190;
	Node0x15c7be0 -> Node0x15c8190;
	Node0x15c8190 -> Node0x15c8200;
	Node0x15c7d30 -> Node0x15c8200;
	Node0x15c8200 -> Node0x15c8270;
	Node0x15c7e80 -> Node0x15c8270;
	Node0x15c8270 -> Node0x15c82e0;
	Node0x15c8040 -> Node0x15c82e0;
	Node0x15c7b00 -> Node0x15c8350;
	Node0x15c82e0 -> Node0x15c8350;
	Node0x15c8350 -> Node0x15669d8;
	Node0x15669d8 -> Node0x15c83e0;
	Node0x15c60f8 -> Node0x15c8638;
	Node0x15c5bb8 -> Node0x15c8798;
}
