; ModuleID = '../.././c_source_file/1018_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1018_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %0
  %8 = xor i32 %2, -1
  %9 = and i32 %8, %1
  %10 = xor i32 %9, -1
  %11 = xor i32 %7, %10
  %12 = and i32 %1, %0
  %13 = or i32 %8, %1
  %14 = xor i32 %13, -1
  %15 = or i32 %12, %14
  %16 = add i32 %11, %15
  %17 = xor i32 %3, -1
  %18 = or i32 %17, %4
  %19 = xor i32 %18, %5
  %20 = add i32 %16, %19
  %21 = xor i32 %5, %3
  %22 = and i32 %21, %18
  %23 = add i32 %20, %22
  %24 = xor i32 %12, %2
  %25 = xor i32 %1, -1
  %26 = xor i32 %2, %0
  %27 = and i32 %26, %25
  %28 = xor i32 %1, %0
  %29 = and i32 %28, %8
  %30 = or i32 %2, %0
  %31 = xor i32 %30, %12
  %32 = and i32 %8, %0
  %33 = or i32 %32, %28
  %34 = and i32 %2, %1
  %35 = or i32 %32, %34
  %36 = shl i32 %35, 1
  %37 = and i32 %10, %0
  %38 = xor i32 %30, -1
  %39 = and i32 %25, %0
  %40 = xor i32 %39, -1
  %41 = and i32 %40, %2
  %42 = shl i32 %41, 2
  %43 = or i32 %25, %0
  %44 = xor i32 %2, %1
  %45 = xor i32 %44, -1
  %46 = and i32 %43, %45
  %47 = xor i32 %12, -1
  %48 = xor i32 %47, %2
  %49 = xor i32 %0, -1
  %50 = or i32 %9, %49
  %51 = xor i32 %28, -1
  %52 = or i32 %51, %2
  %53 = xor i32 %7, -1
  %54 = xor i32 %53, %1
  %55 = or i32 %2, %1
  %56 = or i32 %55, %0
  %57 = shl i32 %56, 1
  %58 = or i32 %8, %0
  %59 = xor i32 %58, -1
  %60 = xor i32 %59, %1
  %61 = and i32 %25, %2
  %62 = and i32 %61, %0
  %63 = or i32 %44, %0
  %64 = xor i32 %62, %63
  %65 = or i32 %1, %0
  %66 = and i32 %65, %45
  %67 = and i32 %44, %43
  %68 = or i32 %7, %28
  %69 = xor i32 %65, %2
  %70 = xor i32 %26, -1
  %71 = and i32 %70, %51
  %72 = or i32 %34, %49
  %73 = or i32 %26, %12
  %74 = or i32 %14, %49
  %75 = xor i32 %55, -1
  %76 = or i32 %75, %49
  %77 = xor i32 %13, %12
  %78 = or i32 %14, %0
  %79 = and i32 %55, %49
  %80 = and i32 %65, %70
  %81 = add i32 %58, 1
  %82 = and i32 %53, %51
  %83 = shl i32 %82, 1
  %84 = or i32 %75, %0
  %85 = xor i32 %32, -1
  %86 = and i32 %85, %51
  %87 = or i32 %26, %28
  %88 = or i32 %28, %70
  %89 = or i32 %10, %0
  %90 = xor i32 %34, -1
  %91 = xor i32 %90, %0
  %92 = xor i32 %39, %2
  %93 = xor i32 %43, -1
  %94 = or i32 %7, %93
  %95 = add i32 %39, 1
  %96 = xor i32 %9, %0
  %97 = xor i32 %65, -1
  %98 = or i32 %7, %97
  %99 = and i32 %65, %2
  %100 = xor i32 %7, %65
  %101 = add i32 %28, 1
  %102 = xor i32 %13, %0
  %103 = or i32 %39, %45
  %104 = and i32 %8, %51
  %105 = and i32 %26, %51
  %106 = and i32 %53, %25
  %107 = and i32 %8, %47
  %108 = and i32 %43, %70
  %109 = and i32 %10, %49
  %110 = and i32 %8, %40
  %111 = xor i32 %75, %0
  %112 = or i32 %25, %2
  %113 = xor i32 %112, %0
  %114 = or i32 %62, %113
  %115 = or i32 %44, %12
  %116 = xor i32 %7, %43
  %117 = or i32 %7, %9
  %118 = or i32 %44, %49
  %119 = or i32 %9, %0
  %120 = or i32 %45, %93
  %121 = or i32 %26, %39
  %122 = or i32 %26, %93
  %123 = shl i32 %122, 1
  %124 = and i32 %30, %1
  %125 = and i32 %26, %28
  %126 = or i32 %70, %97
  %127 = or i32 %9, %39
  %128 = xor i32 %58, %12
  %129 = and i32 %70, %40
  %130 = or i32 %44, %97
  %131 = or i32 %93, %2
  %132 = and i32 %26, %40
  %133 = and i32 %26, %43
  %134 = and i32 %34, %0
  %135 = and i32 %44, %49
  %136 = xor i32 %134, -1
  %137 = xor i32 %135, %136
  %138 = and i32 %58, %1
  %139 = or i32 %28, %8
  %140 = or i32 %44, %93
  %141 = xor i32 %45, %0
  %142 = and i32 %26, %1
  %143 = xor i32 %55, %12
  %144 = or i32 %32, %14
  %145 = and i32 %45, %49
  %146 = and i32 %45, %47
  %147 = and i32 %13, %49
  %148 = and i32 %43, %2
  %149 = shl i32 %45, 1
  %150 = or i32 %12, %75
  %151 = xor i32 %7, %55
  %152 = shl i32 %151, 1
  %153 = or i32 %38, %25
  %154 = and i32 %28, %2
  %155 = or i32 %8, %51
  %156 = and i32 %61, %49
  %157 = xor i32 %118, 2147483647
  %158 = or i32 %157, %156
  %159 = shl i32 %158, 1
  %160 = xor i32 %34, %0
  %161 = and i32 %85, %1
  %162 = or i32 %8, %97
  %163 = xor i32 %44, %0
  %164 = xor i32 %163, -1
  %165 = xor i32 %62, %164
  %166 = or i32 %62, %163
  %167 = or i32 %59, %1
  %168 = shl i32 %167, 1
  %169 = xor i32 %39, %10
  %170 = and i32 %65, %8
  %171 = shl i32 %170, 1
  %172 = xor i32 %134, %163
  %173 = or i32 %28, %2
  %174 = and i32 %28, %85
  %175 = and i32 %55, %0
  %176 = xor i32 %97, %2
  %177 = or i32 %12, %8
  %178 = and i32 %28, %53
  %179 = shl i32 %2, 1
  %180 = or i32 %7, %25
  %181 = xor i32 %39, %90
  %182 = shl i32 %181, 1
  %183 = xor i32 %14, %0
  %184 = or i32 %12, %59
  %185 = shl i32 %184, 1
  %186 = xor i32 %55, %0
  %187 = and i32 %34, %49
  %188 = xor i32 %175, 2147483647
  %189 = xor i32 %188, %187
  %190 = or i32 %134, %79
  %191 = or i32 %12, %38
  %192 = or i32 %134, %164
  %193 = xor i32 %113, 2147483647
  %194 = xor i32 %193, %62
  %195 = shl i32 %194, 1
  %196 = xor i32 %30, %1
  %197 = or i32 %45, %49
  %198 = and i32 %51, %2
  %199 = and i32 %44, %0
  %200 = or i32 %187, %199
  %201 = and i32 %85, %25
  %202 = and i32 %26, %65
  %203 = shl i32 %135, 2
  %204 = xor i32 %7, %1
  %205 = xor i32 %79, %136
  %206 = add i32 %7, 1
  %207 = xor i32 %32, %13
  %208 = or i32 %39, %70
  %209 = and i32 %112, %49
  %210 = or i32 %62, %209
  %211 = or i32 %134, %135
  %212 = or i32 %12, %70
  %213 = and i32 %26, %47
  %214 = or i32 %13, %49
  %215 = and i32 %58, %51
  %216 = or i32 %32, %25
  %217 = or i32 %26, %1
  %218 = or i32 %26, %25
  %219 = or i32 %70, %93
  %220 = and i32 %90, %0
  %221 = xor i32 %43, %2
  %222 = xor i32 %209, -1
  %223 = xor i32 %62, %222
  %224 = xor i32 %32, %90
  %225 = or i32 %38, %51
  %226 = and i32 %70, %47
  %227 = or i32 %39, %8
  %228 = or i32 %26, %51
  %229 = or i32 %7, %75
  %230 = and i32 %28, %70
  %231 = xor i32 %156, %118
  %232 = or i32 %28, %59
  %233 = shl i32 %232, 1
  %234 = or i32 %44, %39
  %235 = add i32 %65, 1
  %236 = and i32 %45, %40
  %237 = shl i32 %236, 1
  %238 = or i32 %97, %2
  %239 = and i32 %58, %25
  %240 = or i32 %45, %0
  %241 = and i32 %44, %65
  %242 = or i32 %39, %2
  %243 = or i32 %10, %49
  %244 = or i32 %34, %39
  %245 = or i32 %12, %2
  %246 = xor i32 %58, %1
  %247 = or i32 %90, %49
  %248 = or i32 %70, %51
  %249 = or i32 %90, %0
  %250 = shl i32 %249, 1
  %251 = or i32 %55, %49
  %252 = or i32 %28, %38
  %253 = and i32 %112, %0
  %254 = or i32 %156, %253
  %255 = add i32 %0, 1
  %256 = and i32 %70, %25
  %257 = or i32 %134, %186
  %258 = shl i32 %257, 1
  %259 = xor i32 %93, %2
  %260 = and i32 %44, %47
  %261 = or i32 %26, %97
  %262 = shl i32 %261, 1
  %263 = shl i32 %30, 1
  %264 = xor i32 %38, %1
  %265 = shl i32 %264, 1
  %266 = or i32 %13, %0
  %267 = or i32 %59, %51
  %268 = and i32 %45, %0
  %269 = or i32 %38, %1
  %270 = xor i32 %199, -1
  %271 = xor i32 %187, %270
  %272 = and i32 %44, %40
  %273 = and i32 %13, %0
  %274 = or i32 %8, %93
  %275 = and i32 %53, %1
  %276 = or i32 %70, %1
  %277 = xor i32 %10, %0
  %278 = xor i32 %253, 2147483647
  %279 = xor i32 %278, %156
  %280 = and i32 %70, %1
  %281 = or i32 %187, %175
  %282 = shl i32 %75, 2
  %283 = or i32 %7, %51
  %284 = add i32 %13, 1
  %285 = and i32 %90, %49
  %286 = and i32 %47, %2
  %287 = or i32 %59, %25
  %288 = shl i32 %287, 1
  %289 = and i32 %75, %49
  %290 = mul i32 %289, -18
  %291 = and i32 %75, %0
  %292 = mul i32 %291, 17
  %293 = and i32 %9, %0
  %294 = mul i32 %293, 15
  %295 = and i32 %14, %49
  %296 = mul i32 %295, 36
  %297 = and i32 %14, %0
  %298 = mul i32 %297, -20
  %299 = xor i32 %5, -1
  %300 = and i32 %299, %4
  %301 = xor i32 %4, %3
  %302 = or i32 %300, %301
  %303 = shl i32 %18, 1
  %304 = or i32 %4, %3
  %305 = xor i32 %304, -1
  %306 = or i32 %21, %305
  %307 = shl i32 %306, 1
  %308 = and i32 %17, %4
  %309 = xor i32 %4, -1
  %310 = xor i32 %21, -1
  %311 = and i32 %310, %309
  %312 = and i32 %299, %3
  %313 = xor i32 %312, -1
  %314 = and i32 %313, %4
  %315 = xor i32 %300, -1
  %316 = xor i32 %301, -1
  %317 = and i32 %315, %316
  %318 = and i32 %5, %4
  %319 = xor i32 %318, -1
  %320 = and i32 %319, %3
  %321 = shl i32 %320, 1
  %322 = or i32 %5, %3
  %323 = xor i32 %322, -1
  %324 = or i32 %323, %4
  %325 = or i32 %299, %4
  %326 = xor i32 %325, -1
  %327 = or i32 %301, %326
  %328 = xor i32 %18, -1
  %329 = xor i32 %5, %4
  %330 = or i32 %329, %328
  %331 = and i32 %5, %3
  %332 = and i32 %331, %4
  %333 = xor i32 %322, %4
  %334 = xor i32 %332, -1
  %335 = xor i32 %333, %334
  %336 = or i32 %5, %4
  %337 = xor i32 %336, -1
  %338 = or i32 %337, %316
  %339 = and i32 %4, %3
  %340 = xor i32 %339, -1
  %341 = and i32 %329, %340
  %342 = or i32 %308, %5
  %343 = and i32 %322, %309
  %344 = xor i32 %343, %334
  %345 = xor i32 %329, -1
  %346 = and i32 %345, %3
  %347 = and i32 %304, %345
  %348 = and i32 %345, %17
  %349 = shl i32 %348, 2
  %350 = or i32 %339, %323
  %351 = and i32 %319, %316
  %352 = or i32 %299, %3
  %353 = xor i32 %300, %352
  %354 = and i32 %18, %5
  %355 = or i32 %310, %328
  %356 = xor i32 %318, %3
  %357 = or i32 %326, %316
  %358 = xor i32 %313, %4
  %359 = and i32 %17, %5
  %360 = and i32 %359, %309
  %361 = or i32 %17, %5
  %362 = and i32 %361, %4
  %363 = xor i32 %362, 2147483647
  %364 = xor i32 %363, %360
  %365 = shl i32 %364, 1
  %366 = and i32 %21, %309
  %367 = xor i32 %366, %334
  %368 = xor i32 %352, %339
  %369 = and i32 %310, %4
  %370 = add i32 %339, 1
  %371 = or i32 %300, %331
  %372 = xor i32 %308, -1
  %373 = and i32 %345, %372
  %374 = or i32 %329, %3
  %375 = xor i32 %310, %4
  %376 = and i32 %329, %372
  %377 = and i32 %322, %4
  %378 = or i32 %339, %345
  %379 = and i32 %301, %319
  %380 = or i32 %329, %17
  %381 = and i32 %336, %3
  %382 = or i32 %360, %362
  %383 = or i32 %318, %301
  %384 = and i32 %345, %316
  %385 = and i32 %304, %299
  %386 = and i32 %325, %17
  %387 = or i32 %345, %316
  %388 = or i32 %339, %299
  %389 = or i32 %313, %4
  %390 = or i32 %318, %305
  %391 = xor i32 %372, %5
  %392 = xor i32 %331, %4
  %393 = or i32 %299, %316
  %394 = or i32 %301, %5
  %395 = or i32 %21, %308
  %396 = and i32 %336, %301
  %397 = or i32 %337, %3
  %398 = and i32 %310, %372
  %399 = add i32 %308, 1
  %400 = or i32 %331, %309
  %401 = or i32 %301, %345
  %402 = xor i32 %331, -1
  %403 = and i32 %402, %4
  %404 = or i32 %339, %326
  %405 = xor i32 %337, %3
  %406 = or i32 %316, %5
  %407 = or i32 %339, %337
  %408 = and i32 %325, %3
  %409 = or i32 %318, %3
  %410 = and i32 %21, %304
  %411 = shl i32 %410, 1
  %412 = or i32 %329, %339
  %413 = or i32 %310, %309
  %414 = shl i32 %413, 1
  %415 = xor i32 %352, -1
  %416 = add i32 %352, 1
  %417 = and i32 %359, %4
  %418 = xor i32 %4, 2147483647
  %419 = xor i32 %418, %361
  %420 = xor i32 %419, %417
  %421 = or i32 %305, %5
  %422 = and i32 %21, %372
  %423 = or i32 %332, %343
  %424 = shl i32 %423, 1
  %425 = xor i32 %325, %3
  %426 = or i32 %345, %328
  %427 = or i32 %329, %305
  %428 = or i32 %318, %328
  %429 = or i32 %300, %17
  %430 = xor i32 %319, %3
  %431 = shl i32 %430, 1
  %432 = or i32 %21, %339
  %433 = or i32 %337, %17
  %434 = or i32 %312, %309
  %435 = shl i32 %326, 1
  %436 = or i32 %310, %4
  %437 = or i32 %345, %305
  %438 = xor i32 %336, %3
  %439 = and i32 %21, %340
  %440 = and i32 %301, %345
  %441 = and i32 %352, %309
  %442 = shl i32 %441, 1
  %443 = and i32 %329, %316
  %444 = or i32 %21, %309
  %445 = xor i32 %444, -1
  %446 = or i32 %360, %445
  %447 = shl i32 %325, 1
  %448 = or i32 %318, %312
  %449 = and i32 %304, %5
  %450 = xor i32 %308, %5
  %451 = add i32 %5, 1
  %452 = xor i32 %312, %4
  %453 = and i32 %325, %316
  %454 = shl i32 %453, 1
  %455 = and i32 %329, %304
  %456 = or i32 %328, %5
  %457 = xor i32 %308, %402
  %458 = shl i32 %444, 1
  %459 = and i32 %340, %5
  %460 = xor i32 %336, %339
  %461 = or i32 %329, %301
  %462 = shl i32 %461, 1
  %463 = and i32 %331, %309
  %464 = xor i32 %377, -1
  %465 = xor i32 %463, %464
  %466 = or i32 %299, %305
  %467 = or i32 %402, %309
  %468 = or i32 %299, %328
  %469 = shl i32 %468, 1
  %470 = and i32 %329, %18
  %471 = xor i32 %360, %444
  %472 = and i32 %316, %5
  %473 = xor i32 %305, %5
  %474 = and i32 %329, %301
  %475 = xor i32 %323, %4
  %476 = or i32 %301, %299
  %477 = or i32 %308, %310
  %478 = or i32 %339, %310
  %479 = shl i32 %478, 1
  %480 = or i32 %331, %4
  %481 = and i32 %313, %309
  %482 = or i32 %21, %4
  %483 = xor i32 %417, %482
  %484 = or i32 %345, %17
  %485 = or i32 %326, %17
  %486 = or i32 %301, %337
  %487 = xor i32 %325, %339
  %488 = and i32 %299, %340
  %489 = or i32 %352, %4
  %490 = and i32 %18, %299
  %491 = or i32 %300, %415
  %492 = and i32 %336, %17
  %493 = and i32 %402, %309
  %494 = and i32 %323, %309
  %495 = and i32 %312, %309
  %496 = mul i32 %495, 14
  %497 = and i32 %323, %4
  %498 = mul i32 %497, 13
  %499 = and i32 %312, %4
  %500 = and i32 %415, %309
  %501 = shl i32 %500, 4
  %502 = shl i32 %463, 2
  %503 = and i32 %415, %4
  %504 = shl i32 %503, 3
  %505 = add i32 %221, %227
  %506 = add i32 %505, %52
  %507 = add i32 %506, %38
  %508 = add i32 %12, %1
  %509 = add i32 %508, 2
  %510 = add i32 %509, %107
  %511 = add i32 %510, %10
  %512 = add i32 %511, %134
  %513 = add i32 %512, %178
  %514 = sub i32 %513, %33
  %515 = add i32 %514, %451
  %516 = sub i32 %515, %374
  %517 = sub i32 %516, %403
  %518 = add i32 %517, %358
  %519 = sub i32 %518, %324
  %520 = add i32 %519, %317
  %521 = mul i32 %520, 3
  %522 = add i32 %81, %176
  %523 = sub i32 %522, %214
  %524 = add i32 %523, %212
  %525 = sub i32 %524, %108
  %526 = add i32 %525, %370
  %527 = sub i32 %526, %488
  %528 = add i32 %527, %422
  %529 = sub i32 %528, %486
  %530 = mul i32 %529, 5
  %531 = add i32 %332, %499
  %532 = mul i32 %531, -10
  %533 = add i32 %494, %187
  %534 = shl i32 %533, 4
  %535 = add i32 %507, %131
  %536 = add i32 %535, %285
  %537 = add i32 %536, %268
  %538 = add i32 %537, %248
  %539 = add i32 %538, %234
  %540 = add i32 %539, %226
  %541 = add i32 %540, %208
  %542 = add i32 %541, %191
  %543 = add i32 %542, %169
  %544 = add i32 %543, %106
  %545 = add i32 %544, %91
  %546 = add i32 %545, %73
  %547 = add i32 %546, %316
  %548 = add i32 %547, %308
  %549 = add i32 %548, %210
  %550 = add i32 %549, %200
  %551 = add i32 %550, %192
  %552 = add i32 %551, %472
  %553 = add i32 %552, %354
  %554 = add i32 %553, %279
  %555 = add i32 %554, %189
  %556 = add i32 %555, %452
  %557 = add i32 %556, %397
  %558 = add i32 %557, %384
  %559 = add i32 %558, %377
  %560 = add i32 %559, %376
  %561 = add i32 %560, %369
  %562 = add i32 %561, %368
  %563 = add i32 %562, %357
  %564 = add i32 %563, %356
  %565 = add i32 %564, %355
  %566 = add i32 %565, %314
  %567 = add i32 %566, %420
  %568 = shl i32 %567, 1
  %569 = sub i32 1073741822, %43
  %570 = add i32 %569, %392
  %571 = add i32 %570, %427
  %572 = shl i32 %571, 2
  %573 = add i32 %255, %0
  %574 = add i32 %573, %1
  %575 = add i32 %574, %28
  %576 = add i32 %575, %39
  %577 = add i32 %576, %95
  %578 = add i32 %577, %101
  %579 = add i32 %578, %8
  %580 = add i32 %579, %43
  %581 = add i32 %580, %235
  %582 = sub i32 %581, %12
  %583 = add i32 %582, %65
  %584 = add i32 %583, %24
  %585 = add i32 %584, %29
  %586 = add i32 %585, %48
  %587 = sub i32 %586, %69
  %588 = sub i32 %587, %55
  %589 = sub i32 %588, %92
  %590 = sub i32 %589, %99
  %591 = add i32 %590, %104
  %592 = sub i32 %591, %110
  %593 = add i32 %592, %139
  %594 = add i32 %593, %148
  %595 = sub i32 %594, %154
  %596 = add i32 %595, %155
  %597 = sub i32 %596, %162
  %598 = sub i32 %597, %9
  %599 = add i32 %598, %173
  %600 = add i32 %599, %177
  %601 = sub i32 %600, %179
  %602 = add i32 %601, %198
  %603 = add i32 %602, %206
  %604 = sub i32 %603, %26
  %605 = sub i32 %604, %58
  %606 = add i32 %605, %70
  %607 = add i32 %606, %238
  %608 = add i32 %607, %242
  %609 = add i32 %608, %245
  %610 = sub i32 %609, %259
  %611 = sub i32 %610, %13
  %612 = sub i32 %611, %274
  %613 = add i32 %612, %44
  %614 = add i32 %613, %7
  %615 = add i32 %614, %284
  %616 = add i32 %615, %286
  %617 = sub i32 %616, %27
  %618 = add i32 %617, %31
  %619 = sub i32 %618, %37
  %620 = sub i32 %619, %42
  %621 = add i32 %620, %46
  %622 = add i32 %621, %50
  %623 = sub i32 %622, %54
  %624 = sub i32 %623, %60
  %625 = add i32 %624, %66
  %626 = add i32 %625, %67
  %627 = sub i32 %626, %68
  %628 = add i32 %627, %71
  %629 = sub i32 %628, %72
  %630 = add i32 %629, %74
  %631 = add i32 %630, %76
  %632 = sub i32 %631, %77
  %633 = sub i32 %632, %78
  %634 = add i32 %633, %79
  %635 = sub i32 %634, %80
  %636 = add i32 %635, %84
  %637 = sub i32 %636, %86
  %638 = sub i32 %637, %87
  %639 = add i32 %638, %88
  %640 = sub i32 %639, %89
  %641 = add i32 %640, %94
  %642 = sub i32 %641, %96
  %643 = add i32 %642, %98
  %644 = sub i32 %643, %100
  %645 = sub i32 %644, %102
  %646 = add i32 %645, %103
  %647 = sub i32 %646, %105
  %648 = sub i32 %647, %109
  %649 = add i32 %648, %111
  %650 = sub i32 %649, %63
  %651 = sub i32 %650, %115
  %652 = sub i32 %651, %116
  %653 = sub i32 %652, %117
  %654 = sub i32 %653, %118
  %655 = sub i32 %654, %119
  %656 = add i32 %655, %120
  %657 = sub i32 %656, %121
  %658 = add i32 %657, %124
  %659 = sub i32 %658, %125
  %660 = sub i32 %659, %126
  %661 = add i32 %660, %127
  %662 = sub i32 %661, %128
  %663 = add i32 %662, %129
  %664 = add i32 %663, %130
  %665 = sub i32 %664, %132
  %666 = sub i32 %665, %133
  %667 = sub i32 %666, %138
  %668 = sub i32 %667, %140
  %669 = add i32 %668, %141
  %670 = add i32 %669, %142
  %671 = sub i32 %670, %143
  %672 = add i32 %671, %144
  %673 = sub i32 %672, %145
  %674 = sub i32 %673, %146
  %675 = sub i32 %674, %147
  %676 = sub i32 %675, %149
  %677 = add i32 %676, %150
  %678 = add i32 %677, %153
  %679 = add i32 %678, %160
  %680 = sub i32 %679, %161
  %681 = sub i32 %680, %171
  %682 = add i32 %681, %174
  %683 = add i32 %682, %175
  %684 = sub i32 %683, %180
  %685 = add i32 %684, %183
  %686 = add i32 %685, %186
  %687 = add i32 %686, %196
  %688 = add i32 %687, %197
  %689 = add i32 %688, %201
  %690 = sub i32 %689, %202
  %691 = add i32 %690, %204
  %692 = sub i32 %691, %207
  %693 = sub i32 %692, %213
  %694 = add i32 %693, %215
  %695 = sub i32 %694, %216
  %696 = sub i32 %695, %217
  %697 = sub i32 %696, %218
  %698 = add i32 %697, %219
  %699 = sub i32 %698, %220
  %700 = add i32 %699, %224
  %701 = sub i32 %700, %225
  %702 = add i32 %701, %163
  %703 = add i32 %702, %228
  %704 = sub i32 %703, %229
  %705 = sub i32 %704, %230
  %706 = add i32 %705, %239
  %707 = sub i32 %706, %240
  %708 = add i32 %707, %241
  %709 = add i32 %708, %243
  %710 = add i32 %709, %244
  %711 = add i32 %710, %246
  %712 = add i32 %711, %247
  %713 = add i32 %712, %251
  %714 = sub i32 %713, %252
  %715 = sub i32 %714, %199
  %716 = sub i32 %715, %256
  %717 = sub i32 %716, %260
  %718 = sub i32 %717, %263
  %719 = sub i32 %718, %266
  %720 = sub i32 %719, %267
  %721 = sub i32 %720, %269
  %722 = sub i32 %721, %272
  %723 = sub i32 %722, %273
  %724 = add i32 %723, %275
  %725 = sub i32 %724, %276
  %726 = sub i32 %725, %277
  %727 = add i32 %726, %280
  %728 = sub i32 %727, %282
  %729 = add i32 %728, %283
  %730 = sub i32 %729, %4
  %731 = add i32 %730, %309
  %732 = sub i32 %731, %36
  %733 = sub i32 %732, %57
  %734 = add i32 %733, %64
  %735 = sub i32 %734, %83
  %736 = add i32 %735, %114
  %737 = sub i32 %736, %123
  %738 = add i32 %737, %137
  %739 = sub i32 %738, %152
  %740 = add i32 %739, %165
  %741 = sub i32 %740, %166
  %742 = sub i32 %741, %168
  %743 = sub i32 %742, %172
  %744 = sub i32 %743, %182
  %745 = sub i32 %744, %185
  %746 = add i32 %745, %190
  %747 = sub i32 %746, %203
  %748 = add i32 %747, %205
  %749 = sub i32 %748, %211
  %750 = sub i32 %749, %223
  %751 = add i32 %750, %231
  %752 = sub i32 %751, %233
  %753 = sub i32 %752, %237
  %754 = sub i32 %753, %250
  %755 = add i32 %754, %254
  %756 = sub i32 %755, %262
  %757 = sub i32 %756, %265
  %758 = add i32 %757, %271
  %759 = sub i32 %758, %281
  %760 = sub i32 %759, %288
  %761 = add i32 %760, %290
  %762 = add i32 %761, %292
  %763 = add i32 %762, %294
  %764 = add i32 %763, %296
  %765 = add i32 %764, %298
  %766 = add i32 %765, %399
  %767 = add i32 %766, %339
  %768 = sub i32 %767, %258
  %769 = sub i32 %768, %303
  %770 = sub i32 %769, %342
  %771 = add i32 %770, %337
  %772 = add i32 %771, %310
  %773 = add i32 %772, %385
  %774 = add i32 %773, %329
  %775 = sub i32 %774, %388
  %776 = add i32 %775, %391
  %777 = sub i32 %776, %393
  %778 = add i32 %777, %394
  %779 = add i32 %778, %312
  %780 = sub i32 %779, %352
  %781 = add i32 %780, %406
  %782 = add i32 %781, %402
  %783 = add i32 %782, %416
  %784 = add i32 %783, %421
  %785 = sub i32 %784, %449
  %786 = add i32 %785, %450
  %787 = add i32 %786, %456
  %788 = sub i32 %787, %459
  %789 = sub i32 %788, %318
  %790 = add i32 %789, %466
  %791 = add i32 %790, %319
  %792 = sub i32 %791, %473
  %793 = add i32 %792, %476
  %794 = sub i32 %793, %331
  %795 = sub i32 %794, %490
  %796 = sub i32 %795, %159
  %797 = sub i32 %796, %195
  %798 = sub i32 %797, %302
  %799 = add i32 %798, %311
  %800 = sub i32 %799, %327
  %801 = add i32 %800, %330
  %802 = sub i32 %801, %338
  %803 = add i32 %802, %341
  %804 = sub i32 %803, %346
  %805 = sub i32 %804, %347
  %806 = sub i32 %805, %350
  %807 = add i32 %806, %351
  %808 = sub i32 %807, %353
  %809 = add i32 %808, %371
  %810 = sub i32 %809, %373
  %811 = add i32 %810, %375
  %812 = add i32 %811, %378
  %813 = sub i32 %812, %379
  %814 = add i32 %813, %380
  %815 = sub i32 %814, %381
  %816 = add i32 %815, %383
  %817 = sub i32 %816, %386
  %818 = add i32 %817, %387
  %819 = sub i32 %818, %389
  %820 = add i32 %819, %390
  %821 = add i32 %820, %395
  %822 = add i32 %821, %396
  %823 = add i32 %822, %398
  %824 = add i32 %823, %400
  %825 = sub i32 %824, %401
  %826 = add i32 %825, %404
  %827 = add i32 %826, %405
  %828 = add i32 %827, %407
  %829 = add i32 %828, %366
  %830 = sub i32 %829, %408
  %831 = add i32 %830, %409
  %832 = add i32 %831, %412
  %833 = sub i32 %832, %425
  %834 = sub i32 %833, %426
  %835 = add i32 %834, %428
  %836 = sub i32 %835, %429
  %837 = add i32 %836, %432
  %838 = add i32 %837, %433
  %839 = add i32 %838, %434
  %840 = sub i32 %839, %435
  %841 = sub i32 %840, %436
  %842 = sub i32 %841, %437
  %843 = add i32 %842, %438
  %844 = sub i32 %843, %333
  %845 = add i32 %844, %439
  %846 = add i32 %845, %440
  %847 = sub i32 %846, %443
  %848 = sub i32 %847, %447
  %849 = sub i32 %848, %448
  %850 = add i32 %849, %455
  %851 = add i32 %850, %457
  %852 = add i32 %851, %460
  %853 = add i32 %852, %467
  %854 = sub i32 %853, %469
  %855 = add i32 %854, %470
  %856 = sub i32 %855, %474
  %857 = add i32 %856, %475
  %858 = add i32 %857, %477
  %859 = add i32 %858, %480
  %860 = sub i32 %859, %481
  %861 = sub i32 %860, %484
  %862 = sub i32 %861, %485
  %863 = sub i32 %862, %487
  %864 = add i32 %863, %489
  %865 = sub i32 %864, %491
  %866 = sub i32 %865, %492
  %867 = sub i32 %866, %493
  %868 = sub i32 %867, %307
  %869 = sub i32 %868, %321
  %870 = add i32 %869, %335
  %871 = sub i32 %870, %344
  %872 = sub i32 %871, %349
  %873 = add i32 %872, %367
  %874 = add i32 %873, %382
  %875 = sub i32 %874, %411
  %876 = sub i32 %875, %414
  %877 = sub i32 %876, %431
  %878 = sub i32 %877, %442
  %879 = add i32 %878, %446
  %880 = sub i32 %879, %454
  %881 = sub i32 %880, %458
  %882 = sub i32 %881, %462
  %883 = add i32 %882, %465
  %884 = add i32 %883, %471
  %885 = sub i32 %884, %479
  %886 = sub i32 %885, %483
  %887 = add i32 %886, %496
  %888 = add i32 %887, %498
  %889 = sub i32 %888, %501
  %890 = sub i32 %889, %502
  %891 = add i32 %890, %504
  %892 = sub i32 %891, %424
  %893 = add i32 %892, %532
  %894 = add i32 %893, %534
  %895 = sub i32 %894, %365
  %896 = add i32 %895, %572
  %897 = add i32 %896, %530
  %898 = add i32 %897, %521
  %899 = add i32 %898, %568
  %900 = icmp eq i32 %23, %899
  %901 = select i1 %900, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %902 = tail call i32 @puts(i8* nonnull dereferenceable(1) %901)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
