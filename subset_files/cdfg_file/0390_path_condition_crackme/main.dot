digraph "DFG for'main' function" {
	Node0x115ac88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x115ad08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x115ad98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x115adf8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x115aea8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x115b2d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x115b3b8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x115b4b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x115b578[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x115b628[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x115b6e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x115b798[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1155b70[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x115b998[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x115c908[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x115cf78[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x115cfd8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x115d050[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x115d0c0[shape=record, label="  %15 = add i32 %14, %11"];
	Node0x115d130[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x115d1a0[shape=record, label="  %17 = xor i32 %13, -1"];
	Node0x115d210[shape=record, label="  %18 = or i32 %10, %17"];
	Node0x115d280[shape=record, label="  %19 = sub i32 %15, %18"];
	Node0x115d2f0[shape=record, label="  %20 = or i32 %13, %16"];
	Node0x115d360[shape=record, label="  %21 = add i32 %19, %20"];
	Node0x115d3d0[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0x115d440[shape=record, label="  %23 = or i32 %11, %22"];
	Node0x115d4b0[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x115d520[shape=record, label="  %25 = shl i32 %11, 1"];
	Node0x115d590[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x115d600[shape=record, label="  %27 = and i32 %11, %22"];
	Node0x115d670[shape=record, label="  %28 = xor i32 %14, -1"];
	Node0x115d6e0[shape=record, label="  %29 = xor i32 %23, -1"];
	Node0x115d750[shape=record, label="  %30 = mul i32 %29, 6"];
	Node0x115d7c0[shape=record, label="  %31 = shl i32 %27, 2"];
	Node0x115d830[shape=record, label="  %32 = and i32 %13, %10"];
	Node0x115d8a0[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x115d910[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x115d980[shape=record, label="  %35 = xor i32 %13, %16"];
	Node0x115d9f0[shape=record, label="  %36 = xor i32 %20, -1"];
	Node0x115da60[shape=record, label="  %37 = shl i32 %13, 1"];
	Node0x115dad0[shape=record, label="  %38 = add i32 %24, %28"];
	Node0x115db40[shape=record, label="  %39 = mul i32 %38, 5"];
	Node0x115dbb0[shape=record, label="  %40 = sub i32 5, %10"];
	Node0x115dc20[shape=record, label="  %41 = sub i32 %40, %12"];
	Node0x115dc90[shape=record, label="  %42 = sub i32 %41, %23"];
	Node0x115dd00[shape=record, label="  %43 = add i32 %42, %24"];
	Node0x115dd70[shape=record, label="  %44 = sub i32 %43, %26"];
	Node0x115dde0[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x115de50[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x115dec0[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x115df30[shape=record, label="  %48 = add i32 %47, %35"];
	Node0x115dfa0[shape=record, label="  %49 = add i32 %48, %36"];
	Node0x115e010[shape=record, label="  %50 = add i32 %49, %32"];
	Node0x115e080[shape=record, label="  %51 = add i32 %50, %37"];
	Node0x115e0f0[shape=record, label="  %52 = add i32 %51, %39"];
	Node0x115e160[shape=record, label="  %53 = add i32 %52, %34"];
	Node0x115e1d0[shape=record, label="  %54 = icmp eq i32 %21, %53"];
	Node0x10fa8b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x115e260[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x115e508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x115e668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x115e778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x115e888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x115e948[shape=record, label="  ret i32 0"];
	Node0x115ac88 -> Node0x115ad08;
	Node0x115ad08 -> Node0x115ad98;
	Node0x115ad98 -> Node0x115adf8;
	Node0x115adf8 -> Node0x115aea8;
	Node0x115aea8 -> Node0x115b2d8;
	Node0x115b2d8 -> Node0x115b3b8;
	Node0x115b3b8 -> Node0x115b4b8;
	Node0x115b4b8 -> Node0x115b578;
	Node0x115b578 -> Node0x115b628;
	Node0x115b628 -> Node0x115b6e8;
	Node0x115b6e8 -> Node0x115b798;
	Node0x115b798 -> Node0x1155b70;
	Node0x1155b70 -> Node0x115b998;
	Node0x115b998 -> Node0x115c908;
	Node0x115c908 -> Node0x115cf78;
	Node0x115cf78 -> Node0x115cfd8;
	Node0x115cfd8 -> Node0x115d050;
	Node0x115d050 -> Node0x115d0c0;
	Node0x115d0c0 -> Node0x115d130;
	Node0x115d130 -> Node0x115d1a0;
	Node0x115d1a0 -> Node0x115d210;
	Node0x115d210 -> Node0x115d280;
	Node0x115d280 -> Node0x115d2f0;
	Node0x115d2f0 -> Node0x115d360;
	Node0x115d360 -> Node0x115d3d0;
	Node0x115d3d0 -> Node0x115d440;
	Node0x115d440 -> Node0x115d4b0;
	Node0x115d4b0 -> Node0x115d520;
	Node0x115d520 -> Node0x115d590;
	Node0x115d590 -> Node0x115d600;
	Node0x115d600 -> Node0x115d670;
	Node0x115d670 -> Node0x115d6e0;
	Node0x115d6e0 -> Node0x115d750;
	Node0x115d750 -> Node0x115d7c0;
	Node0x115d7c0 -> Node0x115d830;
	Node0x115d830 -> Node0x115d8a0;
	Node0x115d8a0 -> Node0x115d910;
	Node0x115d910 -> Node0x115d980;
	Node0x115d980 -> Node0x115d9f0;
	Node0x115d9f0 -> Node0x115da60;
	Node0x115da60 -> Node0x115dad0;
	Node0x115dad0 -> Node0x115db40;
	Node0x115db40 -> Node0x115dbb0;
	Node0x115dbb0 -> Node0x115dc20;
	Node0x115dc20 -> Node0x115dc90;
	Node0x115dc90 -> Node0x115dd00;
	Node0x115dd00 -> Node0x115dd70;
	Node0x115dd70 -> Node0x115dde0;
	Node0x115dde0 -> Node0x115de50;
	Node0x115de50 -> Node0x115dec0;
	Node0x115dec0 -> Node0x115df30;
	Node0x115df30 -> Node0x115dfa0;
	Node0x115dfa0 -> Node0x115e010;
	Node0x115e010 -> Node0x115e080;
	Node0x115e080 -> Node0x115e0f0;
	Node0x115e0f0 -> Node0x115e160;
	Node0x115e160 -> Node0x115e1d0;
	Node0x115e1d0 -> Node0x10fa8b8;
	Node0x10fa8b8 -> Node0x115e260;
	Node0x115e260 -> Node0x115e508;
	Node0x115e508 -> Node0x115e668;
	Node0x115e668 -> Node0x115e778;
	Node0x115e778 -> Node0x115e888;
	Node0x115e888 -> Node0x115e948;
edge [color=red]
	Node0x115ac88 -> Node0x115aea8;
	Node0x115aea8 -> Node0x115b2d8;
	Node0x115ad08 -> Node0x115b3b8;
	Node0x115b3b8 -> Node0x115b4b8;
	Node0x115ad98 -> Node0x115b578;
	Node0x115b578 -> Node0x115b628;
	Node0x115adf8 -> Node0x115b6e8;
	Node0x115b6e8 -> Node0x115b798;
	Node0x115ac88 -> Node0x1155b70;
	Node0x115ad08 -> Node0x1155b70;
	Node0x115ad98 -> Node0x1155b70;
	Node0x115adf8 -> Node0x1155b70;
	Node0x115ac88 -> Node0x115b998;
	Node0x115ad08 -> Node0x115c908;
	Node0x115ad98 -> Node0x115cf78;
	Node0x115adf8 -> Node0x115cfd8;
	Node0x115cf78 -> Node0x115d050;
	Node0x115c908 -> Node0x115d050;
	Node0x115d050 -> Node0x115d0c0;
	Node0x115c908 -> Node0x115d0c0;
	Node0x115b998 -> Node0x115d130;
	Node0x115cfd8 -> Node0x115d1a0;
	Node0x115b998 -> Node0x115d210;
	Node0x115d1a0 -> Node0x115d210;
	Node0x115d0c0 -> Node0x115d280;
	Node0x115d210 -> Node0x115d280;
	Node0x115cfd8 -> Node0x115d2f0;
	Node0x115d130 -> Node0x115d2f0;
	Node0x115d280 -> Node0x115d360;
	Node0x115d2f0 -> Node0x115d360;
	Node0x115cf78 -> Node0x115d3d0;
	Node0x115c908 -> Node0x115d440;
	Node0x115d3d0 -> Node0x115d440;
	Node0x115cf78 -> Node0x115d4b0;
	Node0x115c908 -> Node0x115d4b0;
	Node0x115c908 -> Node0x115d520;
	Node0x115d520 -> Node0x115d590;
	Node0x115c908 -> Node0x115d600;
	Node0x115d3d0 -> Node0x115d600;
	Node0x115d050 -> Node0x115d670;
	Node0x115d440 -> Node0x115d6e0;
	Node0x115d6e0 -> Node0x115d750;
	Node0x115d600 -> Node0x115d7c0;
	Node0x115cfd8 -> Node0x115d830;
	Node0x115b998 -> Node0x115d830;
	Node0x115d830 -> Node0x115d8a0;
	Node0x115d8a0 -> Node0x115d910;
	Node0x115cfd8 -> Node0x115d980;
	Node0x115d130 -> Node0x115d980;
	Node0x115d2f0 -> Node0x115d9f0;
	Node0x115cfd8 -> Node0x115da60;
	Node0x115d4b0 -> Node0x115dad0;
	Node0x115d670 -> Node0x115dad0;
	Node0x115dad0 -> Node0x115db40;
	Node0x115b998 -> Node0x115dbb0;
	Node0x115dbb0 -> Node0x115dc20;
	Node0x115cf78 -> Node0x115dc20;
	Node0x115dc20 -> Node0x115dc90;
	Node0x115d440 -> Node0x115dc90;
	Node0x115dc90 -> Node0x115dd00;
	Node0x115d4b0 -> Node0x115dd00;
	Node0x115dd00 -> Node0x115dd70;
	Node0x115d590 -> Node0x115dd70;
	Node0x115dd70 -> Node0x115dde0;
	Node0x115d600 -> Node0x115dde0;
	Node0x115dde0 -> Node0x115de50;
	Node0x115d750 -> Node0x115de50;
	Node0x115de50 -> Node0x115dec0;
	Node0x115d7c0 -> Node0x115dec0;
	Node0x115dec0 -> Node0x115df30;
	Node0x115d980 -> Node0x115df30;
	Node0x115df30 -> Node0x115dfa0;
	Node0x115d9f0 -> Node0x115dfa0;
	Node0x115dfa0 -> Node0x115e010;
	Node0x115d830 -> Node0x115e010;
	Node0x115e010 -> Node0x115e080;
	Node0x115da60 -> Node0x115e080;
	Node0x115e080 -> Node0x115e0f0;
	Node0x115db40 -> Node0x115e0f0;
	Node0x115e0f0 -> Node0x115e160;
	Node0x115d910 -> Node0x115e160;
	Node0x115d360 -> Node0x115e1d0;
	Node0x115e160 -> Node0x115e1d0;
	Node0x115e1d0 -> Node0x10fa8b8;
	Node0x10fa8b8 -> Node0x115e260;
	Node0x115b6e8 -> Node0x115e508;
	Node0x115b578 -> Node0x115e668;
	Node0x115b3b8 -> Node0x115e778;
	Node0x115aea8 -> Node0x115e888;
}
