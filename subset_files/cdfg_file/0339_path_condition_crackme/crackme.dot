digraph "DFG for'crackme' function" {
	Node0x148fd20[shape=record, label="  %5 = mul i32 %2, -2"];
	Node0x148fdc0[shape=record, label="  %6 = shl i32 %1, 1"];
	Node0x148fe30[shape=record, label="  %7 = sub i32 %5, %6"];
	Node0x148fea0[shape=record, label="  %8 = xor i32 %3, %0"];
	Node0x148ff10[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x148ffb0[shape=record, label="  %10 = xor i32 %8, -1"];
	Node0x1490020[shape=record, label="  %11 = add i32 %7, %10"];
	Node0x1490090[shape=record, label="  %12 = sub i32 %11, %9"];
	Node0x1490100[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0x1490170[shape=record, label="  %14 = or i32 %13, %1"];
	Node0x14901e0[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x1490250[shape=record, label="  %16 = and i32 %2, %1"];
	Node0x14902c0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1490330[shape=record, label="  %18 = and i32 %13, %1"];
	Node0x14903a0[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x1490410[shape=record, label="  %20 = xor i32 %1, -1"];
	Node0x1490480[shape=record, label="  %21 = xor i32 %15, -1"];
	Node0x1490520[shape=record, label="  %22 = mul i32 %21, -7"];
	Node0x1490590[shape=record, label="  %23 = xor i32 %14, -1"];
	Node0x1490630[shape=record, label="  %24 = mul i32 %23, -10"];
	Node0x14906d0[shape=record, label="  %25 = shl i32 %18, 2"];
	Node0x1490740[shape=record, label="  %26 = shl i32 %3, 1"];
	Node0x14907b0[shape=record, label="  %27 = or i32 %3, %0"];
	Node0x1490820[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x14908c0[shape=record, label="  %29 = mul i32 %28, 3"];
	Node0x1490930[shape=record, label="  %30 = and i32 %3, %0"];
	Node0x14909a0[shape=record, label="  %31 = shl i32 %30, 2"];
	Node0x1490a10[shape=record, label="  %32 = sub i32 %20, %16"];
	Node0x1490cc0[shape=record, label="  %33 = mul i32 %32, 5"];
	Node0x1490d30[shape=record, label="  %34 = sub i32 2, %0"];
	Node0x1490da0[shape=record, label="  %35 = add i32 %34, %13"];
	Node0x1490e10[shape=record, label="  %36 = sub i32 %35, %14"];
	Node0x1490e80[shape=record, label="  %37 = add i32 %36, %15"];
	Node0x1490ef0[shape=record, label="  %38 = add i32 %37, %17"];
	Node0x1490f60[shape=record, label="  %39 = add i32 %38, %19"];
	Node0x1490fd0[shape=record, label="  %40 = add i32 %39, %3"];
	Node0x1491040[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x14910b0[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x1491120[shape=record, label="  %43 = sub i32 %42, %25"];
	Node0x1491190[shape=record, label="  %44 = sub i32 %43, %26"];
	Node0x1491200[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x1491270[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x14912e0[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x1491350[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x14913c0[shape=record, label="  %49 = icmp eq i32 %12, %48"];
	Node0x1430268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1491860[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x14918b0[shape=record, label="  ret void"];
	Node0x148fd20 -> Node0x148fdc0;
	Node0x148fdc0 -> Node0x148fe30;
	Node0x148fe30 -> Node0x148fea0;
	Node0x148fea0 -> Node0x148ff10;
	Node0x148ff10 -> Node0x148ffb0;
	Node0x148ffb0 -> Node0x1490020;
	Node0x1490020 -> Node0x1490090;
	Node0x1490090 -> Node0x1490100;
	Node0x1490100 -> Node0x1490170;
	Node0x1490170 -> Node0x14901e0;
	Node0x14901e0 -> Node0x1490250;
	Node0x1490250 -> Node0x14902c0;
	Node0x14902c0 -> Node0x1490330;
	Node0x1490330 -> Node0x14903a0;
	Node0x14903a0 -> Node0x1490410;
	Node0x1490410 -> Node0x1490480;
	Node0x1490480 -> Node0x1490520;
	Node0x1490520 -> Node0x1490590;
	Node0x1490590 -> Node0x1490630;
	Node0x1490630 -> Node0x14906d0;
	Node0x14906d0 -> Node0x1490740;
	Node0x1490740 -> Node0x14907b0;
	Node0x14907b0 -> Node0x1490820;
	Node0x1490820 -> Node0x14908c0;
	Node0x14908c0 -> Node0x1490930;
	Node0x1490930 -> Node0x14909a0;
	Node0x14909a0 -> Node0x1490a10;
	Node0x1490a10 -> Node0x1490cc0;
	Node0x1490cc0 -> Node0x1490d30;
	Node0x1490d30 -> Node0x1490da0;
	Node0x1490da0 -> Node0x1490e10;
	Node0x1490e10 -> Node0x1490e80;
	Node0x1490e80 -> Node0x1490ef0;
	Node0x1490ef0 -> Node0x1490f60;
	Node0x1490f60 -> Node0x1490fd0;
	Node0x1490fd0 -> Node0x1491040;
	Node0x1491040 -> Node0x14910b0;
	Node0x14910b0 -> Node0x1491120;
	Node0x1491120 -> Node0x1491190;
	Node0x1491190 -> Node0x1491200;
	Node0x1491200 -> Node0x1491270;
	Node0x1491270 -> Node0x14912e0;
	Node0x14912e0 -> Node0x1491350;
	Node0x1491350 -> Node0x14913c0;
	Node0x14913c0 -> Node0x1430268;
	Node0x1430268 -> Node0x1491860;
	Node0x1491860 -> Node0x14918b0;
edge [color=red]
	Node0x148fd20 -> Node0x148fe30;
	Node0x148fdc0 -> Node0x148fe30;
	Node0x148fea0 -> Node0x148ff10;
	Node0x148fea0 -> Node0x148ffb0;
	Node0x148fe30 -> Node0x1490020;
	Node0x148ffb0 -> Node0x1490020;
	Node0x1490020 -> Node0x1490090;
	Node0x148ff10 -> Node0x1490090;
	Node0x1490100 -> Node0x1490170;
	Node0x1490250 -> Node0x14902c0;
	Node0x1490100 -> Node0x1490330;
	Node0x1490330 -> Node0x14903a0;
	Node0x14901e0 -> Node0x1490480;
	Node0x1490480 -> Node0x1490520;
	Node0x1490170 -> Node0x1490590;
	Node0x1490590 -> Node0x1490630;
	Node0x1490330 -> Node0x14906d0;
	Node0x14907b0 -> Node0x1490820;
	Node0x1490820 -> Node0x14908c0;
	Node0x1490930 -> Node0x14909a0;
	Node0x1490410 -> Node0x1490a10;
	Node0x1490250 -> Node0x1490a10;
	Node0x1490a10 -> Node0x1490cc0;
	Node0x1490d30 -> Node0x1490da0;
	Node0x1490100 -> Node0x1490da0;
	Node0x1490da0 -> Node0x1490e10;
	Node0x1490170 -> Node0x1490e10;
	Node0x1490e10 -> Node0x1490e80;
	Node0x14901e0 -> Node0x1490e80;
	Node0x1490e80 -> Node0x1490ef0;
	Node0x14902c0 -> Node0x1490ef0;
	Node0x1490ef0 -> Node0x1490f60;
	Node0x14903a0 -> Node0x1490f60;
	Node0x1490f60 -> Node0x1490fd0;
	Node0x1490fd0 -> Node0x1491040;
	Node0x1490520 -> Node0x1491040;
	Node0x1491040 -> Node0x14910b0;
	Node0x1490630 -> Node0x14910b0;
	Node0x14910b0 -> Node0x1491120;
	Node0x14906d0 -> Node0x1491120;
	Node0x1491120 -> Node0x1491190;
	Node0x1490740 -> Node0x1491190;
	Node0x1491190 -> Node0x1491200;
	Node0x14907b0 -> Node0x1491200;
	Node0x1491200 -> Node0x1491270;
	Node0x14908c0 -> Node0x1491270;
	Node0x1491270 -> Node0x14912e0;
	Node0x14909a0 -> Node0x14912e0;
	Node0x14912e0 -> Node0x1491350;
	Node0x1490cc0 -> Node0x1491350;
	Node0x1490090 -> Node0x14913c0;
	Node0x1491350 -> Node0x14913c0;
	Node0x14913c0 -> Node0x1430268;
	Node0x1430268 -> Node0x1491860;
}
