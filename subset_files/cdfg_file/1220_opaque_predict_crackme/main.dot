digraph "DFG for'main' function" {
	Node0x1af0ac8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1af0b48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1af0bd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1af0c38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1af0ce8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1af1118[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1af11f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1af12f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1af13b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1af1468[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1af1528[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1af15d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1aebad0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1af17d8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1af2748[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1af2db8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1af2e18[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1af2e90[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x1af2f00[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1af2f70[shape=record, label="  %16 = add i32 %12, 1"];
	Node0x1af2fe0[shape=record, label="  %17 = sub i32 %16, %15"];
	Node0x1af3050[shape=record, label="  %18 = and i32 %12, %11"];
	Node0x1af30c0[shape=record, label="  %19 = xor i32 %12, %11"];
	Node0x1af3130[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x1af31a0[shape=record, label="  %21 = or i32 %11, %20"];
	Node0x1af3210[shape=record, label="  %22 = xor i32 %15, -2"];
	Node0x1af3280[shape=record, label="  %23 = shl i32 %21, 1"];
	Node0x1af32f0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x1af3360[shape=record, label="  %25 = and i32 %11, %20"];
	Node0x1af33d0[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x1af3440[shape=record, label="  %27 = shl i32 %10, 2"];
	Node0x1af34b0[shape=record, label="  %28 = xor i32 %10, -1"];
	Node0x1af3520[shape=record, label="  %29 = or i32 %13, %10"];
	Node0x1af3590[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x1af3600[shape=record, label="  %31 = and i32 %13, %28"];
	Node0x1af3670[shape=record, label="  %32 = or i32 %13, %28"];
	Node0x1af36e0[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0x1af3750[shape=record, label="  %34 = mul i32 %33, 6"];
	Node0x1af37c0[shape=record, label="  %35 = and i32 %13, %10"];
	Node0x1af3830[shape=record, label="  %36 = mul i32 %35, 5"];
	Node0x1af38a0[shape=record, label="  %37 = add i32 %31, %19"];
	Node0x1af3910[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x1af3980[shape=record, label="  %39 = add i32 %10, 3"];
	Node0x1af39f0[shape=record, label="  %40 = sub i32 %39, %27"];
	Node0x1af3a60[shape=record, label="  %41 = add i32 %40, %18"];
	Node0x1af3ad0[shape=record, label="  %42 = sub i32 %41, %21"];
	Node0x1af3b40[shape=record, label="  %43 = sub i32 %42, %26"];
	Node0x1af3bb0[shape=record, label="  %44 = add i32 %43, %32"];
	Node0x1af3c20[shape=record, label="  %45 = add i32 %44, %22"];
	Node0x1af3c90[shape=record, label="  %46 = sub i32 %45, %24"];
	Node0x1af3d00[shape=record, label="  %47 = sub i32 %46, %30"];
	Node0x1af3d70[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x1af3de0[shape=record, label="  %49 = add i32 %48, %36"];
	Node0x1af3e50[shape=record, label="  %50 = add i32 %49, %38"];
	Node0x1af3ec0[shape=record, label="  %51 = icmp eq i32 %17, %50"];
	Node0x1a908b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1af3f50[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0x1af41f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1af4358[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1af4468[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1af4578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1af4638[shape=record, label="  ret i32 0"];
	Node0x1af0ac8 -> Node0x1af0b48;
	Node0x1af0b48 -> Node0x1af0bd8;
	Node0x1af0bd8 -> Node0x1af0c38;
	Node0x1af0c38 -> Node0x1af0ce8;
	Node0x1af0ce8 -> Node0x1af1118;
	Node0x1af1118 -> Node0x1af11f8;
	Node0x1af11f8 -> Node0x1af12f8;
	Node0x1af12f8 -> Node0x1af13b8;
	Node0x1af13b8 -> Node0x1af1468;
	Node0x1af1468 -> Node0x1af1528;
	Node0x1af1528 -> Node0x1af15d8;
	Node0x1af15d8 -> Node0x1aebad0;
	Node0x1aebad0 -> Node0x1af17d8;
	Node0x1af17d8 -> Node0x1af2748;
	Node0x1af2748 -> Node0x1af2db8;
	Node0x1af2db8 -> Node0x1af2e18;
	Node0x1af2e18 -> Node0x1af2e90;
	Node0x1af2e90 -> Node0x1af2f00;
	Node0x1af2f00 -> Node0x1af2f70;
	Node0x1af2f70 -> Node0x1af2fe0;
	Node0x1af2fe0 -> Node0x1af3050;
	Node0x1af3050 -> Node0x1af30c0;
	Node0x1af30c0 -> Node0x1af3130;
	Node0x1af3130 -> Node0x1af31a0;
	Node0x1af31a0 -> Node0x1af3210;
	Node0x1af3210 -> Node0x1af3280;
	Node0x1af3280 -> Node0x1af32f0;
	Node0x1af32f0 -> Node0x1af3360;
	Node0x1af3360 -> Node0x1af33d0;
	Node0x1af33d0 -> Node0x1af3440;
	Node0x1af3440 -> Node0x1af34b0;
	Node0x1af34b0 -> Node0x1af3520;
	Node0x1af3520 -> Node0x1af3590;
	Node0x1af3590 -> Node0x1af3600;
	Node0x1af3600 -> Node0x1af3670;
	Node0x1af3670 -> Node0x1af36e0;
	Node0x1af36e0 -> Node0x1af3750;
	Node0x1af3750 -> Node0x1af37c0;
	Node0x1af37c0 -> Node0x1af3830;
	Node0x1af3830 -> Node0x1af38a0;
	Node0x1af38a0 -> Node0x1af3910;
	Node0x1af3910 -> Node0x1af3980;
	Node0x1af3980 -> Node0x1af39f0;
	Node0x1af39f0 -> Node0x1af3a60;
	Node0x1af3a60 -> Node0x1af3ad0;
	Node0x1af3ad0 -> Node0x1af3b40;
	Node0x1af3b40 -> Node0x1af3bb0;
	Node0x1af3bb0 -> Node0x1af3c20;
	Node0x1af3c20 -> Node0x1af3c90;
	Node0x1af3c90 -> Node0x1af3d00;
	Node0x1af3d00 -> Node0x1af3d70;
	Node0x1af3d70 -> Node0x1af3de0;
	Node0x1af3de0 -> Node0x1af3e50;
	Node0x1af3e50 -> Node0x1af3ec0;
	Node0x1af3ec0 -> Node0x1a908b8;
	Node0x1a908b8 -> Node0x1af3f50;
	Node0x1af3f50 -> Node0x1af41f8;
	Node0x1af41f8 -> Node0x1af4358;
	Node0x1af4358 -> Node0x1af4468;
	Node0x1af4468 -> Node0x1af4578;
	Node0x1af4578 -> Node0x1af4638;
edge [color=red]
	Node0x1af0ac8 -> Node0x1af0ce8;
	Node0x1af0ce8 -> Node0x1af1118;
	Node0x1af0b48 -> Node0x1af11f8;
	Node0x1af11f8 -> Node0x1af12f8;
	Node0x1af0bd8 -> Node0x1af13b8;
	Node0x1af13b8 -> Node0x1af1468;
	Node0x1af0c38 -> Node0x1af1528;
	Node0x1af1528 -> Node0x1af15d8;
	Node0x1af0ac8 -> Node0x1aebad0;
	Node0x1af0b48 -> Node0x1aebad0;
	Node0x1af0bd8 -> Node0x1aebad0;
	Node0x1af0c38 -> Node0x1aebad0;
	Node0x1af0ac8 -> Node0x1af17d8;
	Node0x1af0b48 -> Node0x1af2748;
	Node0x1af0bd8 -> Node0x1af2db8;
	Node0x1af0c38 -> Node0x1af2e18;
	Node0x1af2db8 -> Node0x1af2e90;
	Node0x1af2748 -> Node0x1af2e90;
	Node0x1af2e90 -> Node0x1af2f00;
	Node0x1af2db8 -> Node0x1af2f70;
	Node0x1af2f70 -> Node0x1af2fe0;
	Node0x1af2f00 -> Node0x1af2fe0;
	Node0x1af2db8 -> Node0x1af3050;
	Node0x1af2748 -> Node0x1af3050;
	Node0x1af2db8 -> Node0x1af30c0;
	Node0x1af2748 -> Node0x1af30c0;
	Node0x1af2db8 -> Node0x1af3130;
	Node0x1af2748 -> Node0x1af31a0;
	Node0x1af3130 -> Node0x1af31a0;
	Node0x1af2f00 -> Node0x1af3210;
	Node0x1af31a0 -> Node0x1af3280;
	Node0x1af3280 -> Node0x1af32f0;
	Node0x1af2748 -> Node0x1af3360;
	Node0x1af3130 -> Node0x1af3360;
	Node0x1af3360 -> Node0x1af33d0;
	Node0x1af17d8 -> Node0x1af3440;
	Node0x1af17d8 -> Node0x1af34b0;
	Node0x1af2e18 -> Node0x1af3520;
	Node0x1af17d8 -> Node0x1af3520;
	Node0x1af3520 -> Node0x1af3590;
	Node0x1af2e18 -> Node0x1af3600;
	Node0x1af34b0 -> Node0x1af3600;
	Node0x1af2e18 -> Node0x1af3670;
	Node0x1af34b0 -> Node0x1af3670;
	Node0x1af3670 -> Node0x1af36e0;
	Node0x1af36e0 -> Node0x1af3750;
	Node0x1af2e18 -> Node0x1af37c0;
	Node0x1af17d8 -> Node0x1af37c0;
	Node0x1af37c0 -> Node0x1af3830;
	Node0x1af3600 -> Node0x1af38a0;
	Node0x1af30c0 -> Node0x1af38a0;
	Node0x1af38a0 -> Node0x1af3910;
	Node0x1af17d8 -> Node0x1af3980;
	Node0x1af3980 -> Node0x1af39f0;
	Node0x1af3440 -> Node0x1af39f0;
	Node0x1af39f0 -> Node0x1af3a60;
	Node0x1af3050 -> Node0x1af3a60;
	Node0x1af3a60 -> Node0x1af3ad0;
	Node0x1af31a0 -> Node0x1af3ad0;
	Node0x1af3ad0 -> Node0x1af3b40;
	Node0x1af33d0 -> Node0x1af3b40;
	Node0x1af3b40 -> Node0x1af3bb0;
	Node0x1af3670 -> Node0x1af3bb0;
	Node0x1af3bb0 -> Node0x1af3c20;
	Node0x1af3210 -> Node0x1af3c20;
	Node0x1af3c20 -> Node0x1af3c90;
	Node0x1af32f0 -> Node0x1af3c90;
	Node0x1af3c90 -> Node0x1af3d00;
	Node0x1af3590 -> Node0x1af3d00;
	Node0x1af3d00 -> Node0x1af3d70;
	Node0x1af3750 -> Node0x1af3d70;
	Node0x1af3d70 -> Node0x1af3de0;
	Node0x1af3830 -> Node0x1af3de0;
	Node0x1af3de0 -> Node0x1af3e50;
	Node0x1af3910 -> Node0x1af3e50;
	Node0x1af2fe0 -> Node0x1af3ec0;
	Node0x1af3e50 -> Node0x1af3ec0;
	Node0x1af3ec0 -> Node0x1a908b8;
	Node0x1a908b8 -> Node0x1af3f50;
	Node0x1af1528 -> Node0x1af41f8;
	Node0x1af13b8 -> Node0x1af4358;
	Node0x1af11f8 -> Node0x1af4468;
	Node0x1af0ce8 -> Node0x1af4578;
}
