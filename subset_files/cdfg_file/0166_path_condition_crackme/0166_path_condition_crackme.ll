; ModuleID = '../.././c_source_file/0166_path_condition_crackme.c'
source_filename = "../.././c_source_file/0166_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = and i32 %1, %0
  %7 = xor i32 %6, -1
  %8 = sub i32 %4, %7
  %9 = and i32 %4, %3
  %10 = xor i32 %4, -1
  %11 = add i32 %4, 1
  %12 = xor i32 %10, %3
  %13 = and i32 %10, %3
  %14 = or i32 %10, %3
  %15 = or i32 %4, %3
  %16 = shl i32 %15, 1
  %17 = xor i32 %16, -2
  %18 = shl i32 %14, 1
  %19 = xor i32 %18, -2
  %20 = xor i32 %2, %0
  %21 = xor i32 %20, -1
  %22 = and i32 %21, %7
  %23 = xor i32 %0, -1
  %24 = xor i32 %1, -1
  %25 = and i32 %24, %2
  %26 = and i32 %25, %23
  %27 = xor i32 %2, %1
  %28 = or i32 %27, %23
  %29 = xor i32 %28, -1
  %30 = or i32 %26, %29
  %31 = and i32 %24, %0
  %32 = xor i32 %31, -1
  %33 = and i32 %32, %2
  %34 = or i32 %20, %6
  %35 = and i32 %2, %1
  %36 = xor i32 %35, -1
  %37 = xor i32 %31, %36
  %38 = xor i32 %1, %0
  %39 = or i32 %38, %2
  %40 = xor i32 %2, -1
  %41 = or i32 %40, %1
  %42 = or i32 %24, %0
  %43 = xor i32 %42, -1
  %44 = and i32 %40, %0
  %45 = xor i32 %44, -1
  %46 = and i32 %40, %1
  %47 = or i32 %46, %31
  %48 = or i32 %24, %2
  %49 = and i32 %48, %0
  %50 = or i32 %26, %49
  %51 = or i32 %2, %1
  %52 = and i32 %51, %0
  %53 = and i32 %25, %0
  %54 = or i32 %27, %0
  %55 = xor i32 %53, %54
  %56 = and i32 %2, %0
  %57 = or i32 %56, %46
  %58 = or i32 %2, %0
  %59 = xor i32 %38, -1
  %60 = and i32 %58, %59
  %61 = xor i32 %46, -1
  %62 = and i32 %61, %0
  %63 = shl i32 %62, 1
  %64 = and i32 %58, %38
  %65 = xor i32 %41, %6
  %66 = or i32 %21, %43
  %67 = xor i32 %54, 1073741823
  %68 = or i32 %67, %53
  %69 = and i32 %35, %0
  %70 = xor i32 %51, %0
  %71 = xor i32 %70, 2147483647
  %72 = xor i32 %71, %69
  %73 = shl i32 %72, 1
  %74 = xor i32 %58, -1
  %75 = or i32 %6, %74
  %76 = or i32 %56, %38
  %77 = shl i32 %76, 1
  %78 = and i32 %27, %32
  %79 = or i32 %1, %0
  %80 = and i32 %20, %79
  %81 = or i32 %40, %0
  %82 = xor i32 %81, -1
  %83 = or i32 %38, %82
  %84 = and i32 %35, %23
  %85 = xor i32 %52, -1
  %86 = xor i32 %84, %85
  %87 = or i32 %74, %1
  %88 = or i32 %56, %1
  %89 = shl i32 %88, 1
  %90 = and i32 %38, %45
  %91 = and i32 %27, %23
  %92 = or i32 %69, %91
  %93 = or i32 %44, %1
  %94 = or i32 %56, %43
  %95 = or i32 %56, %24
  %96 = shl i32 %95, 1
  %97 = or i32 %31, %2
  %98 = and i32 %21, %32
  %99 = xor i32 %56, %79
  %100 = shl i32 %99, 1
  %101 = xor i32 %27, -1
  %102 = and i32 %101, %7
  %103 = shl i32 %58, 1
  %104 = xor i32 %32, %2
  %105 = or i32 %44, %38
  %106 = xor i32 %46, %0
  %107 = xor i32 %79, -1
  %108 = xor i32 %107, %2
  %109 = and i32 %27, %0
  %110 = xor i32 %109, 2147483647
  %111 = xor i32 %110, %84
  %112 = shl i32 %111, 1
  %113 = or i32 %6, %101
  %114 = add i32 %81, 1
  %115 = and i32 %101, %23
  %116 = shl i32 %115, 2
  %117 = or i32 %20, %24
  %118 = shl i32 %117, 1
  %119 = or i32 %43, %2
  %120 = shl i32 %119, 1
  %121 = or i32 %41, %23
  %122 = or i32 %35, %23
  %123 = shl i32 %122, 1
  %124 = xor i32 %51, -1
  %125 = or i32 %56, %124
  %126 = or i32 %6, %2
  %127 = and i32 %21, %1
  %128 = and i32 %20, %24
  %129 = xor i32 %41, -1
  %130 = xor i32 %129, %0
  %131 = xor i32 %36, %0
  %132 = or i32 %101, %0
  %133 = and i32 %20, %1
  %134 = or i32 %61, %23
  %135 = add i32 %20, 1
  %136 = and i32 %48, %23
  %137 = xor i32 %53, -1
  %138 = xor i32 %136, %137
  %139 = and i32 %101, %32
  %140 = or i32 %129, %0
  %141 = and i32 %79, %101
  %142 = shl i32 %141, 1
  %143 = or i32 %51, %0
  %144 = or i32 %27, %31
  %145 = and i32 %51, %23
  %146 = xor i32 %69, -1
  %147 = xor i32 %145, %146
  %148 = or i32 %40, %107
  %149 = or i32 %36, %0
  %150 = or i32 %40, %59
  %151 = or i32 %21, %59
  %152 = or i32 %38, %74
  %153 = xor i32 %31, %61
  %154 = xor i32 %58, %1
  %155 = or i32 %27, %107
  %156 = and i32 %38, %40
  %157 = and i32 %38, %2
  %158 = xor i32 %58, %6
  %159 = or i32 %6, %82
  %160 = shl i32 %101, 1
  %161 = or i32 %6, %129
  %162 = or i32 %46, %0
  %163 = xor i32 %45, %1
  %164 = xor i32 %56, %1
  %165 = and i32 %27, %42
  %166 = shl i32 %165, 2
  %167 = or i32 %84, %109
  %168 = and i32 %7, %2
  %169 = and i32 %58, %24
  %170 = and i32 %81, %59
  %171 = or i32 %53, %136
  %172 = and i32 %79, %40
  %173 = xor i32 %124, %0
  %174 = xor i32 %43, %2
  %175 = or i32 %35, %0
  %176 = or i32 %21, %107
  %177 = xor i32 %7, %2
  %178 = xor i32 %51, %6
  %179 = or i32 %38, %40
  %180 = xor i32 %81, %1
  %181 = xor i32 %56, %61
  %182 = xor i32 %56, -1
  %183 = and i32 %182, %59
  %184 = xor i32 %101, %0
  %185 = shl i32 %184, 2
  %186 = or i32 %31, %40
  %187 = or i32 %101, %43
  %188 = and i32 %36, %23
  %189 = xor i32 %35, %0
  %190 = and i32 %182, %24
  %191 = xor i32 %79, %2
  %192 = shl i32 %191, 1
  %193 = and i32 %27, %7
  %194 = or i32 %21, %1
  %195 = and i32 %42, %101
  %196 = shl i32 %195, 1
  %197 = xor i32 %56, %51
  %198 = xor i32 %6, %2
  %199 = xor i32 %61, %0
  %200 = shl i32 %199, 1
  %201 = xor i32 %91, %146
  %202 = and i32 %45, %24
  %203 = shl i32 %202, 1
  %204 = or i32 %41, %0
  %205 = and i32 %20, %38
  %206 = or i32 %46, %23
  %207 = and i32 %42, %2
  %208 = or i32 %27, %43
  %209 = xor i32 %48, %0
  %210 = or i32 %53, %209
  %211 = or i32 %51, %23
  %212 = xor i32 %27, %0
  %213 = xor i32 %212, -1
  %214 = xor i32 %53, %213
  %215 = or i32 %44, %24
  %216 = and i32 %40, %32
  %217 = or i32 %40, %43
  %218 = and i32 %20, %32
  %219 = xor i32 %49, -1
  %220 = xor i32 %26, %219
  %221 = add i32 %38, 1
  %222 = xor i32 %44, %1
  %223 = or i32 %82, %59
  %224 = or i32 %82, %24
  %225 = xor i32 %69, %212
  %226 = and i32 %40, %59
  %227 = and i32 %36, %0
  %228 = or i32 %101, %107
  %229 = shl i32 %228, 1
  %230 = or i32 %74, %24
  %231 = and i32 %38, %21
  %232 = or i32 %20, %43
  %233 = and i32 %81, %38
  %234 = shl i32 %233, 1
  %235 = xor i32 %26, %28
  %236 = or i32 %31, %101
  %237 = or i32 %6, %21
  %238 = and i32 %21, %59
  %239 = or i32 %21, %24
  %240 = or i32 %124, %23
  %241 = add i32 %79, 1
  %242 = xor i32 %31, %2
  %243 = or i32 %20, %31
  %244 = or i32 %59, %2
  %245 = and i32 %101, %0
  %246 = and i32 %21, %24
  %247 = or i32 %20, %38
  %248 = or i32 %6, %124
  %249 = or i32 %44, %59
  %250 = and i32 %27, %79
  %251 = or i32 %61, %0
  %252 = and i32 %79, %2
  %253 = and i32 %42, %40
  %254 = or i32 %69, %70
  %255 = and i32 %41, %0
  %256 = xor i32 %74, %1
  %257 = or i32 %36, %23
  %258 = or i32 %20, %59
  %259 = xor i32 %182, %1
  %260 = or i32 %69, %213
  %261 = and i32 %81, %24
  %262 = and i32 %81, %1
  %263 = and i32 %20, %42
  %264 = and i32 %182, %1
  %265 = or i32 %53, %212
  %266 = or i32 %124, %0
  %267 = or i32 %38, %21
  %268 = or i32 %129, %23
  %269 = or i32 %56, %59
  %270 = xor i32 %56, %42
  %271 = shl i32 %270, 1
  %272 = and i32 %45, %59
  %273 = xor i32 %209, %137
  %274 = or i32 %20, %1
  %275 = and i32 %42, %21
  %276 = shl i32 %275, 1
  %277 = or i32 %82, %1
  %278 = xor i32 %44, %41
  %279 = and i32 %38, %182
  %280 = or i32 %107, %2
  %281 = or i32 %101, %23
  %282 = or i32 %69, %145
  %283 = and i32 %20, %59
  %284 = and i32 %59, %2
  %285 = and i32 %40, %7
  %286 = and i32 %61, %23
  %287 = xor i32 %44, %36
  %288 = or i32 %31, %21
  %289 = xor i32 %81, %6
  %290 = or i32 %6, %40
  %291 = xor i32 %41, %0
  %292 = or i32 %74, %59
  %293 = and i32 %20, %7
  %294 = xor i32 %42, %2
  %295 = or i32 %27, %6
  %296 = and i32 %58, %1
  %297 = or i32 %20, %107
  %298 = and i32 %41, %23
  %299 = or i32 %84, %52
  %300 = and i32 %124, %23
  %301 = and i32 %46, %23
  %302 = mul i32 %301, -11
  %303 = and i32 %124, %0
  %304 = and i32 %46, %0
  %305 = and i32 %129, %23
  %306 = mul i32 %305, 6
  %307 = mul i32 %84, -13
  %308 = and i32 %129, %0
  %309 = add i32 %253, -1
  %310 = add i32 %309, %179
  %311 = add i32 %310, %177
  %312 = add i32 %311, %168
  %313 = add i32 %312, %156
  %314 = add i32 %313, %51
  %315 = add i32 %314, %104
  %316 = add i32 %315, %303
  %317 = add i32 %316, %298
  %318 = add i32 %317, %281
  %319 = add i32 %318, %278
  %320 = add i32 %319, %264
  %321 = add i32 %320, %258
  %322 = add i32 %321, %243
  %323 = add i32 %322, %227
  %324 = add i32 %323, %145
  %325 = add i32 %324, %193
  %326 = add i32 %325, %180
  %327 = add i32 %326, %169
  %328 = add i32 %327, %130
  %329 = add i32 %328, %13
  %330 = add i32 %329, %171
  %331 = shl i32 %330, 1
  %332 = add i32 %300, %42
  %333 = add i32 %332, %247
  %334 = sub i32 %204, %333
  %335 = add i32 %334, %134
  %336 = sub i32 %335, %55
  %337 = mul i32 %336, 5
  %338 = sub i32 %24, %44
  %339 = add i32 %338, %69
  %340 = add i32 %339, %212
  %341 = add i32 %340, %283
  %342 = add i32 %341, %9
  %343 = mul i32 %342, 3
  %344 = add i32 %308, %304
  %345 = mul i32 %344, 9
  %346 = add i32 %68, %144
  %347 = shl i32 %346, 2
  %348 = sub i32 2, %0
  %349 = add i32 %348, %23
  %350 = sub i32 %349, %1
  %351 = add i32 %350, %43
  %352 = add i32 %351, %6
  %353 = add i32 %352, %38
  %354 = add i32 %353, %32
  %355 = add i32 %354, %79
  %356 = add i32 %355, %221
  %357 = add i32 %356, %241
  %358 = sub i32 %357, %31
  %359 = add i32 %358, 1
  %360 = add i32 %359, %33
  %361 = sub i32 %360, %39
  %362 = sub i32 %361, %41
  %363 = add i32 %362, %45
  %364 = sub i32 %363, %97
  %365 = sub i32 %364, %108
  %366 = add i32 %365, %114
  %367 = sub i32 %366, %126
  %368 = add i32 %367, %135
  %369 = add i32 %368, %148
  %370 = add i32 %369, %150
  %371 = sub i32 %370, %157
  %372 = add i32 %371, %129
  %373 = sub i32 %372, %172
  %374 = sub i32 %373, %174
  %375 = add i32 %374, %186
  %376 = sub i32 %375, %56
  %377 = sub i32 %376, %198
  %378 = add i32 %377, %61
  %379 = sub i32 %378, %207
  %380 = sub i32 %379, %216
  %381 = sub i32 %380, %217
  %382 = add i32 %381, %182
  %383 = add i32 %382, %226
  %384 = add i32 %383, %81
  %385 = sub i32 %384, %242
  %386 = add i32 %385, %244
  %387 = sub i32 %386, %20
  %388 = add i32 %387, %252
  %389 = add i32 %388, %74
  %390 = add i32 %389, %280
  %391 = add i32 %390, %284
  %392 = sub i32 %391, %46
  %393 = sub i32 %392, %285
  %394 = sub i32 %393, %290
  %395 = add i32 %394, %294
  %396 = add i32 %395, %27
  %397 = add i32 %396, %11
  %398 = add i32 %397, %22
  %399 = sub i32 %398, %34
  %400 = sub i32 %399, %37
  %401 = add i32 %400, %47
  %402 = add i32 %401, %52
  %403 = add i32 %402, %57
  %404 = sub i32 %403, %60
  %405 = sub i32 %404, %64
  %406 = sub i32 %405, %65
  %407 = add i32 %406, %66
  %408 = add i32 %407, %75
  %409 = sub i32 %408, %28
  %410 = sub i32 %409, %78
  %411 = add i32 %410, %80
  %412 = add i32 %411, %83
  %413 = add i32 %412, %87
  %414 = sub i32 %413, %90
  %415 = sub i32 %414, %93
  %416 = sub i32 %415, %70
  %417 = add i32 %416, %94
  %418 = add i32 %417, %98
  %419 = add i32 %418, %102
  %420 = sub i32 %419, %103
  %421 = add i32 %420, %91
  %422 = sub i32 %421, %105
  %423 = sub i32 %422, %106
  %424 = add i32 %423, %113
  %425 = sub i32 %424, %120
  %426 = add i32 %425, %121
  %427 = add i32 %426, %125
  %428 = sub i32 %427, %127
  %429 = add i32 %428, %128
  %430 = sub i32 %429, %131
  %431 = sub i32 %430, %132
  %432 = add i32 %431, %133
  %433 = sub i32 %432, %139
  %434 = sub i32 %433, %140
  %435 = sub i32 %434, %143
  %436 = sub i32 %435, %109
  %437 = sub i32 %436, %149
  %438 = sub i32 %437, %151
  %439 = sub i32 %438, %152
  %440 = add i32 %439, %153
  %441 = add i32 %440, %154
  %442 = sub i32 %441, %155
  %443 = sub i32 %442, %54
  %444 = sub i32 %443, %158
  %445 = add i32 %444, %159
  %446 = sub i32 %445, %160
  %447 = sub i32 %446, %161
  %448 = sub i32 %447, %162
  %449 = add i32 %448, %163
  %450 = add i32 %449, %164
  %451 = add i32 %450, %170
  %452 = sub i32 %451, %173
  %453 = sub i32 %452, %175
  %454 = sub i32 %453, %176
  %455 = add i32 %454, %178
  %456 = sub i32 %455, %181
  %457 = sub i32 %456, %183
  %458 = add i32 %457, %187
  %459 = sub i32 %458, %188
  %460 = sub i32 %459, %189
  %461 = sub i32 %460, %190
  %462 = sub i32 %461, %192
  %463 = add i32 %462, %194
  %464 = sub i32 %463, %197
  %465 = add i32 %464, %205
  %466 = add i32 %465, %206
  %467 = add i32 %466, %208
  %468 = add i32 %467, %211
  %469 = add i32 %468, %215
  %470 = sub i32 %469, %218
  %471 = add i32 %470, %222
  %472 = add i32 %471, %223
  %473 = sub i32 %472, %224
  %474 = sub i32 %473, %230
  %475 = sub i32 %474, %231
  %476 = add i32 %475, %232
  %477 = add i32 %476, %236
  %478 = sub i32 %477, %237
  %479 = sub i32 %478, %238
  %480 = sub i32 %479, %239
  %481 = add i32 %480, %240
  %482 = add i32 %481, %245
  %483 = sub i32 %482, %246
  %484 = add i32 %483, %248
  %485 = add i32 %484, %249
  %486 = sub i32 %485, %250
  %487 = add i32 %486, %251
  %488 = add i32 %487, %255
  %489 = add i32 %488, %256
  %490 = sub i32 %489, %257
  %491 = add i32 %490, %259
  %492 = add i32 %491, %261
  %493 = add i32 %492, %262
  %494 = add i32 %493, %263
  %495 = sub i32 %494, %266
  %496 = sub i32 %495, %267
  %497 = sub i32 %496, %268
  %498 = sub i32 %497, %269
  %499 = sub i32 %498, %272
  %500 = sub i32 %499, %274
  %501 = add i32 %500, %277
  %502 = add i32 %501, %279
  %503 = add i32 %502, %286
  %504 = sub i32 %503, %287
  %505 = add i32 %504, %288
  %506 = add i32 %505, %289
  %507 = add i32 %506, %291
  %508 = add i32 %507, %292
  %509 = add i32 %508, %293
  %510 = add i32 %509, %295
  %511 = add i32 %510, %296
  %512 = add i32 %511, %297
  %513 = sub i32 %512, %9
  %514 = add i32 %513, %12
  %515 = add i32 %514, %13
  %516 = sub i32 %515, %14
  %517 = add i32 %516, %30
  %518 = add i32 %517, %50
  %519 = sub i32 %518, %63
  %520 = sub i32 %519, %77
  %521 = sub i32 %520, %86
  %522 = sub i32 %521, %89
  %523 = add i32 %522, %92
  %524 = sub i32 %523, %96
  %525 = sub i32 %524, %100
  %526 = sub i32 %525, %116
  %527 = sub i32 %526, %118
  %528 = sub i32 %527, %123
  %529 = add i32 %528, %138
  %530 = sub i32 %529, %142
  %531 = add i32 %530, %147
  %532 = sub i32 %531, %166
  %533 = add i32 %532, %167
  %534 = sub i32 %533, %185
  %535 = sub i32 %534, %196
  %536 = sub i32 %535, %200
  %537 = sub i32 %536, %201
  %538 = sub i32 %537, %203
  %539 = sub i32 %538, %210
  %540 = sub i32 %539, %214
  %541 = sub i32 %540, %220
  %542 = sub i32 %541, %225
  %543 = sub i32 %542, %229
  %544 = sub i32 %543, %234
  %545 = sub i32 %544, %235
  %546 = add i32 %545, %254
  %547 = add i32 %546, %260
  %548 = sub i32 %547, %265
  %549 = sub i32 %548, %271
  %550 = sub i32 %549, %273
  %551 = sub i32 %550, %276
  %552 = sub i32 %551, %282
  %553 = add i32 %552, %299
  %554 = add i32 %553, %302
  %555 = add i32 %554, %306
  %556 = add i32 %555, %307
  %557 = add i32 %556, %345
  %558 = add i32 %557, %17
  %559 = add i32 %558, %19
  %560 = sub i32 %559, %73
  %561 = sub i32 %560, %112
  %562 = add i32 %561, %347
  %563 = add i32 %562, %337
  %564 = add i32 %563, %343
  %565 = add i32 %564, %331
  %566 = icmp eq i32 %8, %565
  %567 = select i1 %566, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %568 = tail call i32 @puts(i8* nonnull dereferenceable(1) %567)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
