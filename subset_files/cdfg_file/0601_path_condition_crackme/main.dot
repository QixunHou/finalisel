digraph "DFG for'main' function" {
	Node0x1621c18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1621c98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1621d28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1621d88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1621e38[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1622268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1622348[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1622448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1622508[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x16225b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1622678[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1622728[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x161cb40[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1622928[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1623898[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1623f08[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1623f68[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1623fe0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1624050[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x16240c0[shape=record, label="  %16 = sub i32 %15, %12"];
	Node0x1624130[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x16241a0[shape=record, label="  %18 = shl i32 %13, 1"];
	Node0x1624210[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x1624280[shape=record, label="  %20 = sub i32 %17, %19"];
	Node0x16242f0[shape=record, label="  %21 = and i32 %11, %14"];
	Node0x1624360[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x16243d0[shape=record, label="  %23 = add i32 %15, 1"];
	Node0x1624440[shape=record, label="  %24 = mul i32 %21, -5"];
	Node0x16244b0[shape=record, label="  %25 = shl i32 %22, 2"];
	Node0x1624520[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0x1624590[shape=record, label="  %27 = or i32 %13, %26"];
	Node0x1624600[shape=record, label="  %28 = and i32 %13, %26"];
	Node0x1624670[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x16246e0[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0x1624750[shape=record, label="  %31 = or i32 %13, %10"];
	Node0x16247c0[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x1624830[shape=record, label="  %33 = xor i32 %13, %10"];
	Node0x16248a0[shape=record, label="  %34 = and i32 %13, %10"];
	Node0x1624910[shape=record, label="  %35 = add i32 %23, %34"];
	Node0x1624980[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0x16249f0[shape=record, label="  %37 = add i32 %28, %11"];
	Node0x1624a60[shape=record, label="  %38 = shl i32 %37, 2"];
	Node0x1624ad0[shape=record, label="  %39 = shl i32 %10, 1"];
	Node0x1624b40[shape=record, label="  %40 = add i32 %39, -3"];
	Node0x1624bb0[shape=record, label="  %41 = sub i32 %40, %12"];
	Node0x1624c20[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x1624c90[shape=record, label="  %43 = sub i32 %42, %22"];
	Node0x1624d00[shape=record, label="  %44 = sub i32 %43, %13"];
	Node0x1624d70[shape=record, label="  %45 = add i32 %44, %24"];
	Node0x1624de0[shape=record, label="  %46 = sub i32 %45, %25"];
	Node0x1624e50[shape=record, label="  %47 = sub i32 %46, %27"];
	Node0x1624ec0[shape=record, label="  %48 = sub i32 %47, %33"];
	Node0x1624f30[shape=record, label="  %49 = sub i32 %48, %32"];
	Node0x1624fa0[shape=record, label="  %50 = sub i32 %49, %30"];
	Node0x1625010[shape=record, label="  %51 = add i32 %50, %36"];
	Node0x1625080[shape=record, label="  %52 = add i32 %51, %38"];
	Node0x16250f0[shape=record, label="  %53 = icmp eq i32 %20, %52"];
	Node0x15c18b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1625180[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x1625428[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1625588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1625698[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16257a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1625868[shape=record, label="  ret i32 0"];
	Node0x1621c18 -> Node0x1621c98;
	Node0x1621c98 -> Node0x1621d28;
	Node0x1621d28 -> Node0x1621d88;
	Node0x1621d88 -> Node0x1621e38;
	Node0x1621e38 -> Node0x1622268;
	Node0x1622268 -> Node0x1622348;
	Node0x1622348 -> Node0x1622448;
	Node0x1622448 -> Node0x1622508;
	Node0x1622508 -> Node0x16225b8;
	Node0x16225b8 -> Node0x1622678;
	Node0x1622678 -> Node0x1622728;
	Node0x1622728 -> Node0x161cb40;
	Node0x161cb40 -> Node0x1622928;
	Node0x1622928 -> Node0x1623898;
	Node0x1623898 -> Node0x1623f08;
	Node0x1623f08 -> Node0x1623f68;
	Node0x1623f68 -> Node0x1623fe0;
	Node0x1623fe0 -> Node0x1624050;
	Node0x1624050 -> Node0x16240c0;
	Node0x16240c0 -> Node0x1624130;
	Node0x1624130 -> Node0x16241a0;
	Node0x16241a0 -> Node0x1624210;
	Node0x1624210 -> Node0x1624280;
	Node0x1624280 -> Node0x16242f0;
	Node0x16242f0 -> Node0x1624360;
	Node0x1624360 -> Node0x16243d0;
	Node0x16243d0 -> Node0x1624440;
	Node0x1624440 -> Node0x16244b0;
	Node0x16244b0 -> Node0x1624520;
	Node0x1624520 -> Node0x1624590;
	Node0x1624590 -> Node0x1624600;
	Node0x1624600 -> Node0x1624670;
	Node0x1624670 -> Node0x16246e0;
	Node0x16246e0 -> Node0x1624750;
	Node0x1624750 -> Node0x16247c0;
	Node0x16247c0 -> Node0x1624830;
	Node0x1624830 -> Node0x16248a0;
	Node0x16248a0 -> Node0x1624910;
	Node0x1624910 -> Node0x1624980;
	Node0x1624980 -> Node0x16249f0;
	Node0x16249f0 -> Node0x1624a60;
	Node0x1624a60 -> Node0x1624ad0;
	Node0x1624ad0 -> Node0x1624b40;
	Node0x1624b40 -> Node0x1624bb0;
	Node0x1624bb0 -> Node0x1624c20;
	Node0x1624c20 -> Node0x1624c90;
	Node0x1624c90 -> Node0x1624d00;
	Node0x1624d00 -> Node0x1624d70;
	Node0x1624d70 -> Node0x1624de0;
	Node0x1624de0 -> Node0x1624e50;
	Node0x1624e50 -> Node0x1624ec0;
	Node0x1624ec0 -> Node0x1624f30;
	Node0x1624f30 -> Node0x1624fa0;
	Node0x1624fa0 -> Node0x1625010;
	Node0x1625010 -> Node0x1625080;
	Node0x1625080 -> Node0x16250f0;
	Node0x16250f0 -> Node0x15c18b8;
	Node0x15c18b8 -> Node0x1625180;
	Node0x1625180 -> Node0x1625428;
	Node0x1625428 -> Node0x1625588;
	Node0x1625588 -> Node0x1625698;
	Node0x1625698 -> Node0x16257a8;
	Node0x16257a8 -> Node0x1625868;
edge [color=red]
	Node0x1621c18 -> Node0x1621e38;
	Node0x1621e38 -> Node0x1622268;
	Node0x1621c98 -> Node0x1622348;
	Node0x1622348 -> Node0x1622448;
	Node0x1621d28 -> Node0x1622508;
	Node0x1622508 -> Node0x16225b8;
	Node0x1621d88 -> Node0x1622678;
	Node0x1622678 -> Node0x1622728;
	Node0x1621c18 -> Node0x161cb40;
	Node0x1621c98 -> Node0x161cb40;
	Node0x1621d28 -> Node0x161cb40;
	Node0x1621d88 -> Node0x161cb40;
	Node0x1621c18 -> Node0x1622928;
	Node0x1621c98 -> Node0x1623898;
	Node0x1621d28 -> Node0x1623f08;
	Node0x1621d88 -> Node0x1623f68;
	Node0x1623f08 -> Node0x1623fe0;
	Node0x1623898 -> Node0x1624050;
	Node0x1623fe0 -> Node0x1624050;
	Node0x1624050 -> Node0x16240c0;
	Node0x1623f08 -> Node0x16240c0;
	Node0x16240c0 -> Node0x1624130;
	Node0x1623f68 -> Node0x16241a0;
	Node0x16241a0 -> Node0x1624210;
	Node0x1624130 -> Node0x1624280;
	Node0x1624210 -> Node0x1624280;
	Node0x1623898 -> Node0x16242f0;
	Node0x1623fe0 -> Node0x16242f0;
	Node0x1623f08 -> Node0x1624360;
	Node0x1623898 -> Node0x1624360;
	Node0x1624050 -> Node0x16243d0;
	Node0x16242f0 -> Node0x1624440;
	Node0x1624360 -> Node0x16244b0;
	Node0x1622928 -> Node0x1624520;
	Node0x1623f68 -> Node0x1624590;
	Node0x1624520 -> Node0x1624590;
	Node0x1623f68 -> Node0x1624600;
	Node0x1624520 -> Node0x1624600;
	Node0x1624600 -> Node0x1624670;
	Node0x1624670 -> Node0x16246e0;
	Node0x1623f68 -> Node0x1624750;
	Node0x1622928 -> Node0x1624750;
	Node0x1624750 -> Node0x16247c0;
	Node0x1623f68 -> Node0x1624830;
	Node0x1622928 -> Node0x1624830;
	Node0x1623f68 -> Node0x16248a0;
	Node0x1622928 -> Node0x16248a0;
	Node0x16243d0 -> Node0x1624910;
	Node0x16248a0 -> Node0x1624910;
	Node0x1624910 -> Node0x1624980;
	Node0x1624600 -> Node0x16249f0;
	Node0x1623898 -> Node0x16249f0;
	Node0x16249f0 -> Node0x1624a60;
	Node0x1622928 -> Node0x1624ad0;
	Node0x1624ad0 -> Node0x1624b40;
	Node0x1624b40 -> Node0x1624bb0;
	Node0x1623f08 -> Node0x1624bb0;
	Node0x1624bb0 -> Node0x1624c20;
	Node0x16242f0 -> Node0x1624c20;
	Node0x1624c20 -> Node0x1624c90;
	Node0x1624360 -> Node0x1624c90;
	Node0x1624c90 -> Node0x1624d00;
	Node0x1623f68 -> Node0x1624d00;
	Node0x1624d00 -> Node0x1624d70;
	Node0x1624440 -> Node0x1624d70;
	Node0x1624d70 -> Node0x1624de0;
	Node0x16244b0 -> Node0x1624de0;
	Node0x1624de0 -> Node0x1624e50;
	Node0x1624590 -> Node0x1624e50;
	Node0x1624e50 -> Node0x1624ec0;
	Node0x1624830 -> Node0x1624ec0;
	Node0x1624ec0 -> Node0x1624f30;
	Node0x16247c0 -> Node0x1624f30;
	Node0x1624f30 -> Node0x1624fa0;
	Node0x16246e0 -> Node0x1624fa0;
	Node0x1624fa0 -> Node0x1625010;
	Node0x1624980 -> Node0x1625010;
	Node0x1625010 -> Node0x1625080;
	Node0x1624a60 -> Node0x1625080;
	Node0x1624280 -> Node0x16250f0;
	Node0x1625080 -> Node0x16250f0;
	Node0x16250f0 -> Node0x15c18b8;
	Node0x15c18b8 -> Node0x1625180;
	Node0x1622678 -> Node0x1625428;
	Node0x1622508 -> Node0x1625588;
	Node0x1622348 -> Node0x1625698;
	Node0x1621e38 -> Node0x16257a8;
}
