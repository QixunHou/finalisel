digraph "DFG for'crackme' function" {
	Node0x8cf790[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x8cfe10[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x8cfeb0[shape=record, label="  %7 = mul i32 %6, -2"];
	Node0x8cff20[shape=record, label="  %8 = add i32 %7, %3"];
	Node0x8cff90[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x8d0000[shape=record, label="  %10 = or i32 %9, %1"];
	Node0x8d0070[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x8d00e0[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x8d0180[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x8d01f0[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x8d0260[shape=record, label="  %15 = xor i32 %1, -1"];
	Node0x8d02d0[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x8d0370[shape=record, label="  %17 = mul i32 %16, -3"];
	Node0x8d03e0[shape=record, label="  %18 = and i32 %9, %1"];
	Node0x8d0480[shape=record, label="  %19 = mul i32 %18, -6"];
	Node0x8d0520[shape=record, label="  %20 = mul i32 %12, -9"];
	Node0x8d0590[shape=record, label="  %21 = xor i32 %0, -1"];
	Node0x8d0600[shape=record, label="  %22 = and i32 %3, %0"];
	Node0x8d0670[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x8d06e0[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0x8d0750[shape=record, label="  %25 = or i32 %3, %0"];
	Node0x8d07c0[shape=record, label="  %26 = or i32 %21, %3"];
	Node0x8d0830[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x8d08a0[shape=record, label="  %28 = shl i32 %25, 1"];
	Node0x8d0910[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x8d0980[shape=record, label="  %30 = xor i32 %27, -2"];
	Node0x8d09f0[shape=record, label="  %31 = and i32 %21, %3"];
	Node0x8d0a60[shape=record, label="  %32 = add i32 %22, %1"];
	Node0x8d0d10[shape=record, label="  %33 = mul i32 %32, 5"];
	Node0x8d0d80[shape=record, label="  %34 = add i32 %24, %11"];
	Node0x8d0df0[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x8d0e60[shape=record, label="  %36 = sub i32 1, %0"];
	Node0x8d0ed0[shape=record, label="  %37 = add i32 %36, %15"];
	Node0x8d0f40[shape=record, label="  %38 = sub i32 %37, %10"];
	Node0x8d0fb0[shape=record, label="  %39 = add i32 %38, %5"];
	Node0x8d1020[shape=record, label="  %40 = add i32 %39, %11"];
	Node0x8d1090[shape=record, label="  %41 = sub i32 %40, %3"];
	Node0x8d1100[shape=record, label="  %42 = add i32 %41, %17"];
	Node0x8d1170[shape=record, label="  %43 = add i32 %42, %19"];
	Node0x8d11e0[shape=record, label="  %44 = add i32 %43, %20"];
	Node0x8d1250[shape=record, label="  %45 = add i32 %44, %23"];
	Node0x8d12c0[shape=record, label="  %46 = add i32 %45, %25"];
	Node0x8d1330[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x8d13a0[shape=record, label="  %48 = sub i32 %47, %14"];
	Node0x8d1410[shape=record, label="  %49 = sub i32 %48, %27"];
	Node0x8d1480[shape=record, label="  %50 = add i32 %49, %29"];
	Node0x8d14f0[shape=record, label="  %51 = sub i32 %50, %30"];
	Node0x8d1560[shape=record, label="  %52 = add i32 %51, %33"];
	Node0x8d15d0[shape=record, label="  %53 = add i32 %52, %35"];
	Node0x8d1640[shape=record, label="  %54 = icmp eq i32 %8, %53"];
	Node0x870268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8d1ae0[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0x8d1b30[shape=record, label="  ret void"];
	Node0x8cf790 -> Node0x8cfe10;
	Node0x8cfe10 -> Node0x8cfeb0;
	Node0x8cfeb0 -> Node0x8cff20;
	Node0x8cff20 -> Node0x8cff90;
	Node0x8cff90 -> Node0x8d0000;
	Node0x8d0000 -> Node0x8d0070;
	Node0x8d0070 -> Node0x8d00e0;
	Node0x8d00e0 -> Node0x8d0180;
	Node0x8d0180 -> Node0x8d01f0;
	Node0x8d01f0 -> Node0x8d0260;
	Node0x8d0260 -> Node0x8d02d0;
	Node0x8d02d0 -> Node0x8d0370;
	Node0x8d0370 -> Node0x8d03e0;
	Node0x8d03e0 -> Node0x8d0480;
	Node0x8d0480 -> Node0x8d0520;
	Node0x8d0520 -> Node0x8d0590;
	Node0x8d0590 -> Node0x8d0600;
	Node0x8d0600 -> Node0x8d0670;
	Node0x8d0670 -> Node0x8d06e0;
	Node0x8d06e0 -> Node0x8d0750;
	Node0x8d0750 -> Node0x8d07c0;
	Node0x8d07c0 -> Node0x8d0830;
	Node0x8d0830 -> Node0x8d08a0;
	Node0x8d08a0 -> Node0x8d0910;
	Node0x8d0910 -> Node0x8d0980;
	Node0x8d0980 -> Node0x8d09f0;
	Node0x8d09f0 -> Node0x8d0a60;
	Node0x8d0a60 -> Node0x8d0d10;
	Node0x8d0d10 -> Node0x8d0d80;
	Node0x8d0d80 -> Node0x8d0df0;
	Node0x8d0df0 -> Node0x8d0e60;
	Node0x8d0e60 -> Node0x8d0ed0;
	Node0x8d0ed0 -> Node0x8d0f40;
	Node0x8d0f40 -> Node0x8d0fb0;
	Node0x8d0fb0 -> Node0x8d1020;
	Node0x8d1020 -> Node0x8d1090;
	Node0x8d1090 -> Node0x8d1100;
	Node0x8d1100 -> Node0x8d1170;
	Node0x8d1170 -> Node0x8d11e0;
	Node0x8d11e0 -> Node0x8d1250;
	Node0x8d1250 -> Node0x8d12c0;
	Node0x8d12c0 -> Node0x8d1330;
	Node0x8d1330 -> Node0x8d13a0;
	Node0x8d13a0 -> Node0x8d1410;
	Node0x8d1410 -> Node0x8d1480;
	Node0x8d1480 -> Node0x8d14f0;
	Node0x8d14f0 -> Node0x8d1560;
	Node0x8d1560 -> Node0x8d15d0;
	Node0x8d15d0 -> Node0x8d1640;
	Node0x8d1640 -> Node0x870268;
	Node0x870268 -> Node0x8d1ae0;
	Node0x8d1ae0 -> Node0x8d1b30;
edge [color=red]
	Node0x8cf790 -> Node0x8cfe10;
	Node0x8cfe10 -> Node0x8cfeb0;
	Node0x8cfeb0 -> Node0x8cff20;
	Node0x8cff90 -> Node0x8d0000;
	Node0x8d00e0 -> Node0x8d0180;
	Node0x8d0180 -> Node0x8d01f0;
	Node0x8d0000 -> Node0x8d02d0;
	Node0x8d02d0 -> Node0x8d0370;
	Node0x8cff90 -> Node0x8d03e0;
	Node0x8d03e0 -> Node0x8d0480;
	Node0x8d00e0 -> Node0x8d0520;
	Node0x8d0600 -> Node0x8d0670;
	Node0x8d0590 -> Node0x8d07c0;
	Node0x8d07c0 -> Node0x8d0830;
	Node0x8d0750 -> Node0x8d08a0;
	Node0x8d08a0 -> Node0x8d0910;
	Node0x8d0830 -> Node0x8d0980;
	Node0x8d0590 -> Node0x8d09f0;
	Node0x8d0600 -> Node0x8d0a60;
	Node0x8d0a60 -> Node0x8d0d10;
	Node0x8d06e0 -> Node0x8d0d80;
	Node0x8d0070 -> Node0x8d0d80;
	Node0x8d0d80 -> Node0x8d0df0;
	Node0x8d0e60 -> Node0x8d0ed0;
	Node0x8d0260 -> Node0x8d0ed0;
	Node0x8d0ed0 -> Node0x8d0f40;
	Node0x8d0000 -> Node0x8d0f40;
	Node0x8d0f40 -> Node0x8d0fb0;
	Node0x8cf790 -> Node0x8d0fb0;
	Node0x8d0fb0 -> Node0x8d1020;
	Node0x8d0070 -> Node0x8d1020;
	Node0x8d1020 -> Node0x8d1090;
	Node0x8d1090 -> Node0x8d1100;
	Node0x8d0370 -> Node0x8d1100;
	Node0x8d1100 -> Node0x8d1170;
	Node0x8d0480 -> Node0x8d1170;
	Node0x8d1170 -> Node0x8d11e0;
	Node0x8d0520 -> Node0x8d11e0;
	Node0x8d11e0 -> Node0x8d1250;
	Node0x8d0670 -> Node0x8d1250;
	Node0x8d1250 -> Node0x8d12c0;
	Node0x8d0750 -> Node0x8d12c0;
	Node0x8d12c0 -> Node0x8d1330;
	Node0x8d09f0 -> Node0x8d1330;
	Node0x8d1330 -> Node0x8d13a0;
	Node0x8d01f0 -> Node0x8d13a0;
	Node0x8d13a0 -> Node0x8d1410;
	Node0x8d0830 -> Node0x8d1410;
	Node0x8d1410 -> Node0x8d1480;
	Node0x8d0910 -> Node0x8d1480;
	Node0x8d1480 -> Node0x8d14f0;
	Node0x8d0980 -> Node0x8d14f0;
	Node0x8d14f0 -> Node0x8d1560;
	Node0x8d0d10 -> Node0x8d1560;
	Node0x8d1560 -> Node0x8d15d0;
	Node0x8d0df0 -> Node0x8d15d0;
	Node0x8cff20 -> Node0x8d1640;
	Node0x8d15d0 -> Node0x8d1640;
	Node0x8d1640 -> Node0x870268;
	Node0x870268 -> Node0x8d1ae0;
}
