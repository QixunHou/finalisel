digraph "DFG for'crackme' function" {
	Node0x7f8a50[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x7f8ac0[shape=record, label="  %6 = sub i32 %2, %5"];
	Node0x7f9140[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x7f91b0[shape=record, label="  %8 = or i32 %7, %3"];
	Node0x7f9220[shape=record, label="  %9 = add i32 %6, %8"];
	Node0x7f9290[shape=record, label="  %10 = and i32 %3, %0"];
	Node0x7f9300[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x7f9370[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x7f93e0[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0x7f9450[shape=record, label="  %14 = or i32 %2, %1"];
	Node0x7f94c0[shape=record, label="  %15 = and i32 %13, %1"];
	Node0x7f9560[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0x7f95d0[shape=record, label="  %17 = or i32 %3, %0"];
	Node0x7f9640[shape=record, label="  %18 = and i32 %7, %3"];
	Node0x7f96b0[shape=record, label="  %19 = xor i32 %3, %0"];
	Node0x7f9750[shape=record, label="  %20 = shl i32 %7, 1"];
	Node0x7f97c0[shape=record, label="  %21 = shl i32 %17, 2"];
	Node0x7f9860[shape=record, label="  %22 = xor i32 %21, -4"];
	Node0x7f98d0[shape=record, label="  %23 = sub i32 %14, %3"];
	Node0x7f9940[shape=record, label="  %24 = add i32 %23, %18"];
	Node0x7f99b0[shape=record, label="  %25 = add i32 %24, %10"];
	Node0x7f9a50[shape=record, label="  %26 = mul i32 %25, 3"];
	Node0x7f9ac0[shape=record, label="  %27 = add i32 %13, %1"];
	Node0x7f9b30[shape=record, label="  %28 = add i32 %27, %3"];
	Node0x7f9ba0[shape=record, label="  %29 = add i32 %28, %19"];
	Node0x7f9c10[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x7f9c80[shape=record, label="  %31 = sub i32 2, %1"];
	Node0x7f9cf0[shape=record, label="  %32 = sub i32 %31, %20"];
	Node0x7f9f70[shape=record, label="  %33 = sub i32 %32, %14"];
	Node0x7f9fe0[shape=record, label="  %34 = sub i32 %33, %16"];
	Node0x7fa050[shape=record, label="  %35 = sub i32 %34, %17"];
	Node0x7fa0c0[shape=record, label="  %36 = add i32 %35, %18"];
	Node0x7fa130[shape=record, label="  %37 = add i32 %36, %22"];
	Node0x7fa1a0[shape=record, label="  %38 = add i32 %37, %30"];
	Node0x7fa210[shape=record, label="  %39 = add i32 %38, %26"];
	Node0x7fa280[shape=record, label="  %40 = icmp eq i32 %12, %39"];
	Node0x799268[shape=record, label="  %41 = select i1 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x7fa720[shape=record, label="  %42 = tail call i32 @puts(i8* nonnull dereferenceable(1) %41)"];
	Node0x7fa770[shape=record, label="  ret void"];
	Node0x7f8a50 -> Node0x7f8ac0;
	Node0x7f8ac0 -> Node0x7f9140;
	Node0x7f9140 -> Node0x7f91b0;
	Node0x7f91b0 -> Node0x7f9220;
	Node0x7f9220 -> Node0x7f9290;
	Node0x7f9290 -> Node0x7f9300;
	Node0x7f9300 -> Node0x7f9370;
	Node0x7f9370 -> Node0x7f93e0;
	Node0x7f93e0 -> Node0x7f9450;
	Node0x7f9450 -> Node0x7f94c0;
	Node0x7f94c0 -> Node0x7f9560;
	Node0x7f9560 -> Node0x7f95d0;
	Node0x7f95d0 -> Node0x7f9640;
	Node0x7f9640 -> Node0x7f96b0;
	Node0x7f96b0 -> Node0x7f9750;
	Node0x7f9750 -> Node0x7f97c0;
	Node0x7f97c0 -> Node0x7f9860;
	Node0x7f9860 -> Node0x7f98d0;
	Node0x7f98d0 -> Node0x7f9940;
	Node0x7f9940 -> Node0x7f99b0;
	Node0x7f99b0 -> Node0x7f9a50;
	Node0x7f9a50 -> Node0x7f9ac0;
	Node0x7f9ac0 -> Node0x7f9b30;
	Node0x7f9b30 -> Node0x7f9ba0;
	Node0x7f9ba0 -> Node0x7f9c10;
	Node0x7f9c10 -> Node0x7f9c80;
	Node0x7f9c80 -> Node0x7f9cf0;
	Node0x7f9cf0 -> Node0x7f9f70;
	Node0x7f9f70 -> Node0x7f9fe0;
	Node0x7f9fe0 -> Node0x7fa050;
	Node0x7fa050 -> Node0x7fa0c0;
	Node0x7fa0c0 -> Node0x7fa130;
	Node0x7fa130 -> Node0x7fa1a0;
	Node0x7fa1a0 -> Node0x7fa210;
	Node0x7fa210 -> Node0x7fa280;
	Node0x7fa280 -> Node0x799268;
	Node0x799268 -> Node0x7fa720;
	Node0x7fa720 -> Node0x7fa770;
edge [color=red]
	Node0x7f8a50 -> Node0x7f8ac0;
	Node0x7f9140 -> Node0x7f91b0;
	Node0x7f8ac0 -> Node0x7f9220;
	Node0x7f91b0 -> Node0x7f9220;
	Node0x7f9290 -> Node0x7f9300;
	Node0x7f9220 -> Node0x7f9370;
	Node0x7f9300 -> Node0x7f9370;
	Node0x7f93e0 -> Node0x7f94c0;
	Node0x7f94c0 -> Node0x7f9560;
	Node0x7f9140 -> Node0x7f9640;
	Node0x7f9140 -> Node0x7f9750;
	Node0x7f95d0 -> Node0x7f97c0;
	Node0x7f97c0 -> Node0x7f9860;
	Node0x7f9450 -> Node0x7f98d0;
	Node0x7f98d0 -> Node0x7f9940;
	Node0x7f9640 -> Node0x7f9940;
	Node0x7f9940 -> Node0x7f99b0;
	Node0x7f9290 -> Node0x7f99b0;
	Node0x7f99b0 -> Node0x7f9a50;
	Node0x7f93e0 -> Node0x7f9ac0;
	Node0x7f9ac0 -> Node0x7f9b30;
	Node0x7f9b30 -> Node0x7f9ba0;
	Node0x7f96b0 -> Node0x7f9ba0;
	Node0x7f9ba0 -> Node0x7f9c10;
	Node0x7f9c80 -> Node0x7f9cf0;
	Node0x7f9750 -> Node0x7f9cf0;
	Node0x7f9cf0 -> Node0x7f9f70;
	Node0x7f9450 -> Node0x7f9f70;
	Node0x7f9f70 -> Node0x7f9fe0;
	Node0x7f9560 -> Node0x7f9fe0;
	Node0x7f9fe0 -> Node0x7fa050;
	Node0x7f95d0 -> Node0x7fa050;
	Node0x7fa050 -> Node0x7fa0c0;
	Node0x7f9640 -> Node0x7fa0c0;
	Node0x7fa0c0 -> Node0x7fa130;
	Node0x7f9860 -> Node0x7fa130;
	Node0x7fa130 -> Node0x7fa1a0;
	Node0x7f9c10 -> Node0x7fa1a0;
	Node0x7fa1a0 -> Node0x7fa210;
	Node0x7f9a50 -> Node0x7fa210;
	Node0x7f9370 -> Node0x7fa280;
	Node0x7fa210 -> Node0x7fa280;
	Node0x7fa280 -> Node0x799268;
	Node0x799268 -> Node0x7fa720;
}
