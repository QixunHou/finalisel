digraph "DFG for'main' function" {
	Node0x7fa938[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x7fa9b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x7faa48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x7faaa8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x7fab58[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x7faf88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7fb068[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x7fb168[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7fb228[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x7fb2d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x7fb398[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x7fb448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x7f5a80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x7fb648[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x7fc5b8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x7fcc28[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x7fcc88[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x7fcd00[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x7fcd70[shape=record, label="  %15 = sub i32 %12, %14"];
	Node0x7fcde0[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x7fce50[shape=record, label="  %17 = or i32 %13, %16"];
	Node0x7fcec0[shape=record, label="  %18 = add i32 %15, %17"];
	Node0x7fcf30[shape=record, label="  %19 = and i32 %13, %10"];
	Node0x7fcfa0[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x7fd010[shape=record, label="  %21 = add i32 %18, %20"];
	Node0x7fd080[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0x7fd0f0[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x7fd160[shape=record, label="  %24 = and i32 %11, %22"];
	Node0x7fd1d0[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0x7fd240[shape=record, label="  %26 = or i32 %13, %10"];
	Node0x7fd2b0[shape=record, label="  %27 = and i32 %13, %16"];
	Node0x7fd320[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0x7fd390[shape=record, label="  %29 = shl i32 %16, 1"];
	Node0x7fd400[shape=record, label="  %30 = shl i32 %26, 2"];
	Node0x7fd470[shape=record, label="  %31 = xor i32 %30, -4"];
	Node0x7fd4e0[shape=record, label="  %32 = sub i32 %23, %13"];
	Node0x7fd550[shape=record, label="  %33 = add i32 %32, %27"];
	Node0x7fd5c0[shape=record, label="  %34 = add i32 %33, %19"];
	Node0x7fd630[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x7fd6a0[shape=record, label="  %36 = add i32 %11, %22"];
	Node0x7fd710[shape=record, label="  %37 = add i32 %36, %13"];
	Node0x7fd780[shape=record, label="  %38 = add i32 %37, %28"];
	Node0x7fd7f0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x7fd860[shape=record, label="  %40 = sub i32 2, %11"];
	Node0x7fd8d0[shape=record, label="  %41 = sub i32 %40, %29"];
	Node0x7fd940[shape=record, label="  %42 = sub i32 %41, %23"];
	Node0x7fd9b0[shape=record, label="  %43 = sub i32 %42, %25"];
	Node0x7fda20[shape=record, label="  %44 = sub i32 %43, %26"];
	Node0x7fda90[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x7fdb00[shape=record, label="  %46 = add i32 %45, %31"];
	Node0x7fdb70[shape=record, label="  %47 = add i32 %46, %39"];
	Node0x7fdbe0[shape=record, label="  %48 = add i32 %47, %35"];
	Node0x7fdc50[shape=record, label="  %49 = icmp eq i32 %21, %48"];
	Node0x79a8b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x7fdce0[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0x7fdf88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x7fe0e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x7fe1f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7fe308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7fe3c8[shape=record, label="  ret i32 0"];
	Node0x7fa938 -> Node0x7fa9b8;
	Node0x7fa9b8 -> Node0x7faa48;
	Node0x7faa48 -> Node0x7faaa8;
	Node0x7faaa8 -> Node0x7fab58;
	Node0x7fab58 -> Node0x7faf88;
	Node0x7faf88 -> Node0x7fb068;
	Node0x7fb068 -> Node0x7fb168;
	Node0x7fb168 -> Node0x7fb228;
	Node0x7fb228 -> Node0x7fb2d8;
	Node0x7fb2d8 -> Node0x7fb398;
	Node0x7fb398 -> Node0x7fb448;
	Node0x7fb448 -> Node0x7f5a80;
	Node0x7f5a80 -> Node0x7fb648;
	Node0x7fb648 -> Node0x7fc5b8;
	Node0x7fc5b8 -> Node0x7fcc28;
	Node0x7fcc28 -> Node0x7fcc88;
	Node0x7fcc88 -> Node0x7fcd00;
	Node0x7fcd00 -> Node0x7fcd70;
	Node0x7fcd70 -> Node0x7fcde0;
	Node0x7fcde0 -> Node0x7fce50;
	Node0x7fce50 -> Node0x7fcec0;
	Node0x7fcec0 -> Node0x7fcf30;
	Node0x7fcf30 -> Node0x7fcfa0;
	Node0x7fcfa0 -> Node0x7fd010;
	Node0x7fd010 -> Node0x7fd080;
	Node0x7fd080 -> Node0x7fd0f0;
	Node0x7fd0f0 -> Node0x7fd160;
	Node0x7fd160 -> Node0x7fd1d0;
	Node0x7fd1d0 -> Node0x7fd240;
	Node0x7fd240 -> Node0x7fd2b0;
	Node0x7fd2b0 -> Node0x7fd320;
	Node0x7fd320 -> Node0x7fd390;
	Node0x7fd390 -> Node0x7fd400;
	Node0x7fd400 -> Node0x7fd470;
	Node0x7fd470 -> Node0x7fd4e0;
	Node0x7fd4e0 -> Node0x7fd550;
	Node0x7fd550 -> Node0x7fd5c0;
	Node0x7fd5c0 -> Node0x7fd630;
	Node0x7fd630 -> Node0x7fd6a0;
	Node0x7fd6a0 -> Node0x7fd710;
	Node0x7fd710 -> Node0x7fd780;
	Node0x7fd780 -> Node0x7fd7f0;
	Node0x7fd7f0 -> Node0x7fd860;
	Node0x7fd860 -> Node0x7fd8d0;
	Node0x7fd8d0 -> Node0x7fd940;
	Node0x7fd940 -> Node0x7fd9b0;
	Node0x7fd9b0 -> Node0x7fda20;
	Node0x7fda20 -> Node0x7fda90;
	Node0x7fda90 -> Node0x7fdb00;
	Node0x7fdb00 -> Node0x7fdb70;
	Node0x7fdb70 -> Node0x7fdbe0;
	Node0x7fdbe0 -> Node0x7fdc50;
	Node0x7fdc50 -> Node0x79a8b8;
	Node0x79a8b8 -> Node0x7fdce0;
	Node0x7fdce0 -> Node0x7fdf88;
	Node0x7fdf88 -> Node0x7fe0e8;
	Node0x7fe0e8 -> Node0x7fe1f8;
	Node0x7fe1f8 -> Node0x7fe308;
	Node0x7fe308 -> Node0x7fe3c8;
edge [color=red]
	Node0x7fa938 -> Node0x7fab58;
	Node0x7fab58 -> Node0x7faf88;
	Node0x7fa9b8 -> Node0x7fb068;
	Node0x7fb068 -> Node0x7fb168;
	Node0x7faa48 -> Node0x7fb228;
	Node0x7fb228 -> Node0x7fb2d8;
	Node0x7faaa8 -> Node0x7fb398;
	Node0x7fb398 -> Node0x7fb448;
	Node0x7fa938 -> Node0x7f5a80;
	Node0x7fa9b8 -> Node0x7f5a80;
	Node0x7faa48 -> Node0x7f5a80;
	Node0x7faaa8 -> Node0x7f5a80;
	Node0x7fa938 -> Node0x7fb648;
	Node0x7fa9b8 -> Node0x7fc5b8;
	Node0x7faa48 -> Node0x7fcc28;
	Node0x7faaa8 -> Node0x7fcc88;
	Node0x7fcc28 -> Node0x7fcd00;
	Node0x7fc5b8 -> Node0x7fcd00;
	Node0x7fcc28 -> Node0x7fcd70;
	Node0x7fcd00 -> Node0x7fcd70;
	Node0x7fb648 -> Node0x7fcde0;
	Node0x7fcc88 -> Node0x7fce50;
	Node0x7fcde0 -> Node0x7fce50;
	Node0x7fcd70 -> Node0x7fcec0;
	Node0x7fce50 -> Node0x7fcec0;
	Node0x7fcc88 -> Node0x7fcf30;
	Node0x7fb648 -> Node0x7fcf30;
	Node0x7fcf30 -> Node0x7fcfa0;
	Node0x7fcec0 -> Node0x7fd010;
	Node0x7fcfa0 -> Node0x7fd010;
	Node0x7fcc28 -> Node0x7fd080;
	Node0x7fcc28 -> Node0x7fd0f0;
	Node0x7fc5b8 -> Node0x7fd0f0;
	Node0x7fc5b8 -> Node0x7fd160;
	Node0x7fd080 -> Node0x7fd160;
	Node0x7fd160 -> Node0x7fd1d0;
	Node0x7fcc88 -> Node0x7fd240;
	Node0x7fb648 -> Node0x7fd240;
	Node0x7fcc88 -> Node0x7fd2b0;
	Node0x7fcde0 -> Node0x7fd2b0;
	Node0x7fcc88 -> Node0x7fd320;
	Node0x7fb648 -> Node0x7fd320;
	Node0x7fcde0 -> Node0x7fd390;
	Node0x7fd240 -> Node0x7fd400;
	Node0x7fd400 -> Node0x7fd470;
	Node0x7fd0f0 -> Node0x7fd4e0;
	Node0x7fcc88 -> Node0x7fd4e0;
	Node0x7fd4e0 -> Node0x7fd550;
	Node0x7fd2b0 -> Node0x7fd550;
	Node0x7fd550 -> Node0x7fd5c0;
	Node0x7fcf30 -> Node0x7fd5c0;
	Node0x7fd5c0 -> Node0x7fd630;
	Node0x7fc5b8 -> Node0x7fd6a0;
	Node0x7fd080 -> Node0x7fd6a0;
	Node0x7fd6a0 -> Node0x7fd710;
	Node0x7fcc88 -> Node0x7fd710;
	Node0x7fd710 -> Node0x7fd780;
	Node0x7fd320 -> Node0x7fd780;
	Node0x7fd780 -> Node0x7fd7f0;
	Node0x7fc5b8 -> Node0x7fd860;
	Node0x7fd860 -> Node0x7fd8d0;
	Node0x7fd390 -> Node0x7fd8d0;
	Node0x7fd8d0 -> Node0x7fd940;
	Node0x7fd0f0 -> Node0x7fd940;
	Node0x7fd940 -> Node0x7fd9b0;
	Node0x7fd1d0 -> Node0x7fd9b0;
	Node0x7fd9b0 -> Node0x7fda20;
	Node0x7fd240 -> Node0x7fda20;
	Node0x7fda20 -> Node0x7fda90;
	Node0x7fd2b0 -> Node0x7fda90;
	Node0x7fda90 -> Node0x7fdb00;
	Node0x7fd470 -> Node0x7fdb00;
	Node0x7fdb00 -> Node0x7fdb70;
	Node0x7fd7f0 -> Node0x7fdb70;
	Node0x7fdb70 -> Node0x7fdbe0;
	Node0x7fd630 -> Node0x7fdbe0;
	Node0x7fd010 -> Node0x7fdc50;
	Node0x7fdbe0 -> Node0x7fdc50;
	Node0x7fdc50 -> Node0x79a8b8;
	Node0x79a8b8 -> Node0x7fdce0;
	Node0x7fb398 -> Node0x7fdf88;
	Node0x7fb228 -> Node0x7fe0e8;
	Node0x7fb068 -> Node0x7fe1f8;
	Node0x7fab58 -> Node0x7fe308;
}
