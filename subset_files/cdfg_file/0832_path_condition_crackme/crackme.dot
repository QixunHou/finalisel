digraph "DFG for'crackme' function" {
	Node0x239aa00[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x239aa70[shape=record, label="  %4 = or i32 %3, %0"];
	Node0x239ab30[shape=record, label="  %5 = xor i32 %1, %0"];
	Node0x239aba0[shape=record, label="  %6 = or i32 %1, %0"];
	Node0x239ac10[shape=record, label="  %7 = shl i32 %4, 2"];
	Node0x239acb0[shape=record, label="  %8 = xor i32 %7, -4"];
	Node0x239ad20[shape=record, label="  %9 = and i32 %1, %0"];
	Node0x239ad90[shape=record, label="  %10 = add i32 %3, %0"];
	Node0x239ae00[shape=record, label="  %11 = add i32 %10, %9"];
	Node0x239aea0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x239af10[shape=record, label="  %13 = sub i32 1, %1"];
	Node0x239af80[shape=record, label="  %14 = sub i32 %13, %5"];
	Node0x239aff0[shape=record, label="  %15 = sub i32 %14, %6"];
	Node0x239b060[shape=record, label="  %16 = add i32 %15, %8"];
	Node0x239b0d0[shape=record, label="  %17 = add i32 %16, %12"];
	Node0x239b140[shape=record, label="  %18 = icmp eq i32 %4, %17"];
	Node0x233b268[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x239b5e0[shape=record, label="  %20 = tail call i32 @puts(i8* nonnull dereferenceable(1) %19)"];
	Node0x239b630[shape=record, label="  ret void"];
	Node0x239aa00 -> Node0x239aa70;
	Node0x239aa70 -> Node0x239ab30;
	Node0x239ab30 -> Node0x239aba0;
	Node0x239aba0 -> Node0x239ac10;
	Node0x239ac10 -> Node0x239acb0;
	Node0x239acb0 -> Node0x239ad20;
	Node0x239ad20 -> Node0x239ad90;
	Node0x239ad90 -> Node0x239ae00;
	Node0x239ae00 -> Node0x239aea0;
	Node0x239aea0 -> Node0x239af10;
	Node0x239af10 -> Node0x239af80;
	Node0x239af80 -> Node0x239aff0;
	Node0x239aff0 -> Node0x239b060;
	Node0x239b060 -> Node0x239b0d0;
	Node0x239b0d0 -> Node0x239b140;
	Node0x239b140 -> Node0x233b268;
	Node0x233b268 -> Node0x239b5e0;
	Node0x239b5e0 -> Node0x239b630;
edge [color=red]
	Node0x239aa00 -> Node0x239aa70;
	Node0x239aa70 -> Node0x239ac10;
	Node0x239ac10 -> Node0x239acb0;
	Node0x239aa00 -> Node0x239ad90;
	Node0x239ad90 -> Node0x239ae00;
	Node0x239ad20 -> Node0x239ae00;
	Node0x239ae00 -> Node0x239aea0;
	Node0x239af10 -> Node0x239af80;
	Node0x239ab30 -> Node0x239af80;
	Node0x239af80 -> Node0x239aff0;
	Node0x239aba0 -> Node0x239aff0;
	Node0x239aff0 -> Node0x239b060;
	Node0x239acb0 -> Node0x239b060;
	Node0x239b060 -> Node0x239b0d0;
	Node0x239aea0 -> Node0x239b0d0;
	Node0x239aa70 -> Node0x239b140;
	Node0x239b0d0 -> Node0x239b140;
	Node0x239b140 -> Node0x233b268;
	Node0x233b268 -> Node0x239b5e0;
}
