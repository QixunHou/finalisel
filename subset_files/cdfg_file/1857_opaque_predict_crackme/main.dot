digraph "DFG for'main' function" {
	Node0xa6ae38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa6aeb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa6af48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xa6b3a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xa6b488[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xa6b5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa6b7e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xa6b898[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa6c808[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa6ce90[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0xa6cf00[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0xa6cf70[shape=record, label="  %10 = or i32 %6, %9"];
	Node0xa6cfe0[shape=record, label="  %11 = and i32 %7, %6"];
	Node0xa6d050[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0xa6d0c0[shape=record, label="  %13 = or i32 %7, %6"];
	Node0xa6d130[shape=record, label="  %14 = and i32 %6, %9"];
	Node0xa6d1a0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xa6d210[shape=record, label="  %16 = shl i32 %10, 2"];
	Node0xa6d280[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0xa6d2f0[shape=record, label="  %18 = shl i32 %14, 2"];
	Node0xa6d360[shape=record, label="  %19 = shl i32 %11, 2"];
	Node0xa6d3d0[shape=record, label="  %20 = add i32 %8, %13"];
	Node0xa6d440[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0xa6d4b0[shape=record, label="  %22 = add i32 %6, 2"];
	Node0xa6d520[shape=record, label="  %23 = add i32 %22, %7"];
	Node0xa6d590[shape=record, label="  %24 = sub i32 %23, %8"];
	Node0xa6d600[shape=record, label="  %25 = add i32 %24, %10"];
	Node0xa6d670[shape=record, label="  %26 = add i32 %25, %12"];
	Node0xa6d6e0[shape=record, label="  %27 = add i32 %26, %15"];
	Node0xa6d750[shape=record, label="  %28 = add i32 %27, %13"];
	Node0xa6d7c0[shape=record, label="  %29 = sub i32 %28, %18"];
	Node0xa6d830[shape=record, label="  %30 = sub i32 %29, %19"];
	Node0xa6d8a0[shape=record, label="  %31 = sub i32 %30, %17"];
	Node0xa6d910[shape=record, label="  %32 = add i32 %31, %21"];
	Node0xa6db90[shape=record, label="  %33 = icmp eq i32 %32, -1"];
	Node0xa0b9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa6dc20[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xa6de78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa6dfd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xa6e098[shape=record, label="  ret i32 0"];
	Node0xa6ae38 -> Node0xa6aeb8;
	Node0xa6aeb8 -> Node0xa6af48;
	Node0xa6af48 -> Node0xa6b3a8;
	Node0xa6b3a8 -> Node0xa6b488;
	Node0xa6b488 -> Node0xa6b5a8;
	Node0xa6b5a8 -> Node0xa6b7e0;
	Node0xa6b7e0 -> Node0xa6b898;
	Node0xa6b898 -> Node0xa6c808;
	Node0xa6c808 -> Node0xa6ce90;
	Node0xa6ce90 -> Node0xa6cf00;
	Node0xa6cf00 -> Node0xa6cf70;
	Node0xa6cf70 -> Node0xa6cfe0;
	Node0xa6cfe0 -> Node0xa6d050;
	Node0xa6d050 -> Node0xa6d0c0;
	Node0xa6d0c0 -> Node0xa6d130;
	Node0xa6d130 -> Node0xa6d1a0;
	Node0xa6d1a0 -> Node0xa6d210;
	Node0xa6d210 -> Node0xa6d280;
	Node0xa6d280 -> Node0xa6d2f0;
	Node0xa6d2f0 -> Node0xa6d360;
	Node0xa6d360 -> Node0xa6d3d0;
	Node0xa6d3d0 -> Node0xa6d440;
	Node0xa6d440 -> Node0xa6d4b0;
	Node0xa6d4b0 -> Node0xa6d520;
	Node0xa6d520 -> Node0xa6d590;
	Node0xa6d590 -> Node0xa6d600;
	Node0xa6d600 -> Node0xa6d670;
	Node0xa6d670 -> Node0xa6d6e0;
	Node0xa6d6e0 -> Node0xa6d750;
	Node0xa6d750 -> Node0xa6d7c0;
	Node0xa6d7c0 -> Node0xa6d830;
	Node0xa6d830 -> Node0xa6d8a0;
	Node0xa6d8a0 -> Node0xa6d910;
	Node0xa6d910 -> Node0xa6db90;
	Node0xa6db90 -> Node0xa0b9d8;
	Node0xa0b9d8 -> Node0xa6dc20;
	Node0xa6dc20 -> Node0xa6de78;
	Node0xa6de78 -> Node0xa6dfd8;
	Node0xa6dfd8 -> Node0xa6e098;
edge [color=red]
	Node0xa6ae38 -> Node0xa6af48;
	Node0xa6af48 -> Node0xa6b3a8;
	Node0xa6aeb8 -> Node0xa6b488;
	Node0xa6b488 -> Node0xa6b5a8;
	Node0xa6ae38 -> Node0xa6b7e0;
	Node0xa6aeb8 -> Node0xa6b7e0;
	Node0xa6ae38 -> Node0xa6b898;
	Node0xa6aeb8 -> Node0xa6c808;
	Node0xa6c808 -> Node0xa6ce90;
	Node0xa6b898 -> Node0xa6ce90;
	Node0xa6c808 -> Node0xa6cf00;
	Node0xa6b898 -> Node0xa6cf70;
	Node0xa6cf00 -> Node0xa6cf70;
	Node0xa6c808 -> Node0xa6cfe0;
	Node0xa6b898 -> Node0xa6cfe0;
	Node0xa6cfe0 -> Node0xa6d050;
	Node0xa6c808 -> Node0xa6d0c0;
	Node0xa6b898 -> Node0xa6d0c0;
	Node0xa6b898 -> Node0xa6d130;
	Node0xa6cf00 -> Node0xa6d130;
	Node0xa6d130 -> Node0xa6d1a0;
	Node0xa6cf70 -> Node0xa6d210;
	Node0xa6d210 -> Node0xa6d280;
	Node0xa6d130 -> Node0xa6d2f0;
	Node0xa6cfe0 -> Node0xa6d360;
	Node0xa6ce90 -> Node0xa6d3d0;
	Node0xa6d0c0 -> Node0xa6d3d0;
	Node0xa6d3d0 -> Node0xa6d440;
	Node0xa6b898 -> Node0xa6d4b0;
	Node0xa6d4b0 -> Node0xa6d520;
	Node0xa6c808 -> Node0xa6d520;
	Node0xa6d520 -> Node0xa6d590;
	Node0xa6ce90 -> Node0xa6d590;
	Node0xa6d590 -> Node0xa6d600;
	Node0xa6cf70 -> Node0xa6d600;
	Node0xa6d600 -> Node0xa6d670;
	Node0xa6d050 -> Node0xa6d670;
	Node0xa6d670 -> Node0xa6d6e0;
	Node0xa6d1a0 -> Node0xa6d6e0;
	Node0xa6d6e0 -> Node0xa6d750;
	Node0xa6d0c0 -> Node0xa6d750;
	Node0xa6d750 -> Node0xa6d7c0;
	Node0xa6d2f0 -> Node0xa6d7c0;
	Node0xa6d7c0 -> Node0xa6d830;
	Node0xa6d360 -> Node0xa6d830;
	Node0xa6d830 -> Node0xa6d8a0;
	Node0xa6d280 -> Node0xa6d8a0;
	Node0xa6d8a0 -> Node0xa6d910;
	Node0xa6d440 -> Node0xa6d910;
	Node0xa6d910 -> Node0xa6db90;
	Node0xa6db90 -> Node0xa0b9d8;
	Node0xa0b9d8 -> Node0xa6dc20;
	Node0xa6b488 -> Node0xa6de78;
	Node0xa6af48 -> Node0xa6dfd8;
}
