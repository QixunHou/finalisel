digraph "DFG for'crackme' function" {
	Node0xca3b10[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0xca4190[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0xca4230[shape=record, label="  %7 = xor i32 %6, -2"];
	Node0xca42a0[shape=record, label="  %8 = shl i32 %0, 1"];
	Node0xca4310[shape=record, label="  %9 = add i32 %7, %8"];
	Node0xca4380[shape=record, label="  %10 = or i32 %2, %1"];
	Node0xca4420[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0xca4490[shape=record, label="  %12 = or i32 %11, %1"];
	Node0xca4500[shape=record, label="  %13 = and i32 %11, %1"];
	Node0xca4570[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0xca4610[shape=record, label="  %15 = mul i32 %14, 5"];
	Node0xca4680[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0xca46f0[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0xca4790[shape=record, label="  %18 = mul i32 %13, -3"];
	Node0xca4800[shape=record, label="  %19 = and i32 %2, %1"];
	Node0xca48a0[shape=record, label="  %20 = shl i32 %19, 2"];
	Node0xca4910[shape=record, label="  %21 = xor i32 %0, -1"];
	Node0xca4980[shape=record, label="  %22 = or i32 %3, %0"];
	Node0xca49f0[shape=record, label="  %23 = or i32 %21, %3"];
	Node0xca4a60[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0xca4ad0[shape=record, label="  %25 = and i32 %21, %3"];
	Node0xca4b40[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0xca4bb0[shape=record, label="  %27 = and i32 %3, %0"];
	Node0xca4c20[shape=record, label="  %28 = add i32 %17, %16"];
	Node0xca4cc0[shape=record, label="  %29 = mul i32 %28, -6"];
	Node0xca4d30[shape=record, label="  %30 = add i32 %27, %21"];
	Node0xca4da0[shape=record, label="  %31 = add i32 %30, %22"];
	Node0xca4e10[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0xca5090[shape=record, label="  %33 = sub i32 %11, %10"];
	Node0xca5100[shape=record, label="  %34 = add i32 %33, %5"];
	Node0xca5170[shape=record, label="  %35 = add i32 %34, %12"];
	Node0xca51e0[shape=record, label="  %36 = add i32 %35, %15"];
	Node0xca5250[shape=record, label="  %37 = add i32 %36, %18"];
	Node0xca52c0[shape=record, label="  %38 = sub i32 %37, %20"];
	Node0xca5330[shape=record, label="  %39 = sub i32 %38, %23"];
	Node0xca53a0[shape=record, label="  %40 = add i32 %39, %24"];
	Node0xca5410[shape=record, label="  %41 = sub i32 %40, %26"];
	Node0xca5480[shape=record, label="  %42 = add i32 %41, %29"];
	Node0xca54f0[shape=record, label="  %43 = add i32 %42, %32"];
	Node0xca5560[shape=record, label="  %44 = icmp eq i32 %9, %43"];
	Node0xc44268[shape=record, label="  %45 = select i1 %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xca5a00[shape=record, label="  %46 = tail call i32 @puts(i8* nonnull dereferenceable(1) %45)"];
	Node0xca5a50[shape=record, label="  ret void"];
	Node0xca3b10 -> Node0xca4190;
	Node0xca4190 -> Node0xca4230;
	Node0xca4230 -> Node0xca42a0;
	Node0xca42a0 -> Node0xca4310;
	Node0xca4310 -> Node0xca4380;
	Node0xca4380 -> Node0xca4420;
	Node0xca4420 -> Node0xca4490;
	Node0xca4490 -> Node0xca4500;
	Node0xca4500 -> Node0xca4570;
	Node0xca4570 -> Node0xca4610;
	Node0xca4610 -> Node0xca4680;
	Node0xca4680 -> Node0xca46f0;
	Node0xca46f0 -> Node0xca4790;
	Node0xca4790 -> Node0xca4800;
	Node0xca4800 -> Node0xca48a0;
	Node0xca48a0 -> Node0xca4910;
	Node0xca4910 -> Node0xca4980;
	Node0xca4980 -> Node0xca49f0;
	Node0xca49f0 -> Node0xca4a60;
	Node0xca4a60 -> Node0xca4ad0;
	Node0xca4ad0 -> Node0xca4b40;
	Node0xca4b40 -> Node0xca4bb0;
	Node0xca4bb0 -> Node0xca4c20;
	Node0xca4c20 -> Node0xca4cc0;
	Node0xca4cc0 -> Node0xca4d30;
	Node0xca4d30 -> Node0xca4da0;
	Node0xca4da0 -> Node0xca4e10;
	Node0xca4e10 -> Node0xca5090;
	Node0xca5090 -> Node0xca5100;
	Node0xca5100 -> Node0xca5170;
	Node0xca5170 -> Node0xca51e0;
	Node0xca51e0 -> Node0xca5250;
	Node0xca5250 -> Node0xca52c0;
	Node0xca52c0 -> Node0xca5330;
	Node0xca5330 -> Node0xca53a0;
	Node0xca53a0 -> Node0xca5410;
	Node0xca5410 -> Node0xca5480;
	Node0xca5480 -> Node0xca54f0;
	Node0xca54f0 -> Node0xca5560;
	Node0xca5560 -> Node0xc44268;
	Node0xc44268 -> Node0xca5a00;
	Node0xca5a00 -> Node0xca5a50;
edge [color=red]
	Node0xca3b10 -> Node0xca4190;
	Node0xca4190 -> Node0xca4230;
	Node0xca4230 -> Node0xca4310;
	Node0xca42a0 -> Node0xca4310;
	Node0xca4420 -> Node0xca4490;
	Node0xca4420 -> Node0xca4500;
	Node0xca4500 -> Node0xca4570;
	Node0xca4570 -> Node0xca4610;
	Node0xca4380 -> Node0xca4680;
	Node0xca4490 -> Node0xca46f0;
	Node0xca4500 -> Node0xca4790;
	Node0xca4800 -> Node0xca48a0;
	Node0xca4910 -> Node0xca49f0;
	Node0xca49f0 -> Node0xca4a60;
	Node0xca4910 -> Node0xca4ad0;
	Node0xca4ad0 -> Node0xca4b40;
	Node0xca46f0 -> Node0xca4c20;
	Node0xca4680 -> Node0xca4c20;
	Node0xca4c20 -> Node0xca4cc0;
	Node0xca4bb0 -> Node0xca4d30;
	Node0xca4910 -> Node0xca4d30;
	Node0xca4d30 -> Node0xca4da0;
	Node0xca4980 -> Node0xca4da0;
	Node0xca4da0 -> Node0xca4e10;
	Node0xca4420 -> Node0xca5090;
	Node0xca4380 -> Node0xca5090;
	Node0xca5090 -> Node0xca5100;
	Node0xca3b10 -> Node0xca5100;
	Node0xca5100 -> Node0xca5170;
	Node0xca4490 -> Node0xca5170;
	Node0xca5170 -> Node0xca51e0;
	Node0xca4610 -> Node0xca51e0;
	Node0xca51e0 -> Node0xca5250;
	Node0xca4790 -> Node0xca5250;
	Node0xca5250 -> Node0xca52c0;
	Node0xca48a0 -> Node0xca52c0;
	Node0xca52c0 -> Node0xca5330;
	Node0xca49f0 -> Node0xca5330;
	Node0xca5330 -> Node0xca53a0;
	Node0xca4a60 -> Node0xca53a0;
	Node0xca53a0 -> Node0xca5410;
	Node0xca4b40 -> Node0xca5410;
	Node0xca5410 -> Node0xca5480;
	Node0xca4cc0 -> Node0xca5480;
	Node0xca5480 -> Node0xca54f0;
	Node0xca4e10 -> Node0xca54f0;
	Node0xca4310 -> Node0xca5560;
	Node0xca54f0 -> Node0xca5560;
	Node0xca5560 -> Node0xc44268;
	Node0xc44268 -> Node0xca5a00;
}
