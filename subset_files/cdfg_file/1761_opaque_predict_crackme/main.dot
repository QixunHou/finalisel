digraph "DFG for'main' function" {
	Node0x76e598[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x76e618[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x76e6a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x76e708[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x76eb88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x76ec68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x76ed68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x76ee28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x76eed8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x76f138[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x76f1f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x76f358[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x76f3b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x776040[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x776228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x776388[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x776498[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x776558[shape=record, label="  ret i32 0"];
	Node0x76e598 -> Node0x76e618;
	Node0x76e618 -> Node0x76e6a8;
	Node0x76e6a8 -> Node0x76e708;
	Node0x76e708 -> Node0x76eb88;
	Node0x76eb88 -> Node0x76ec68;
	Node0x76ec68 -> Node0x76ed68;
	Node0x76ed68 -> Node0x76ee28;
	Node0x76ee28 -> Node0x76eed8;
	Node0x76eed8 -> Node0x76f138;
	Node0x76f138 -> Node0x76f1f8;
	Node0x76f1f8 -> Node0x76f358;
	Node0x76f358 -> Node0x76f3b8;
	Node0x76f3b8 -> Node0x776040;
	Node0x776040 -> Node0x776228;
	Node0x776228 -> Node0x776388;
	Node0x776388 -> Node0x776498;
	Node0x776498 -> Node0x776558;
edge [color=red]
	Node0x76e598 -> Node0x76e708;
	Node0x76e708 -> Node0x76eb88;
	Node0x76e618 -> Node0x76ec68;
	Node0x76ec68 -> Node0x76ed68;
	Node0x76e6a8 -> Node0x76ee28;
	Node0x76ee28 -> Node0x76eed8;
	Node0x76e598 -> Node0x76f138;
	Node0x76e618 -> Node0x76f138;
	Node0x76e6a8 -> Node0x76f138;
	Node0x76e598 -> Node0x76f1f8;
	Node0x76e618 -> Node0x76f358;
	Node0x76e6a8 -> Node0x76f3b8;
	Node0x76f1f8 -> Node0x776040;
	Node0x76f358 -> Node0x776040;
	Node0x76f3b8 -> Node0x776040;
	Node0x76ee28 -> Node0x776228;
	Node0x76ec68 -> Node0x776388;
	Node0x76e708 -> Node0x776498;
}
