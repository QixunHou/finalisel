; ModuleID = '../.././c_source_file/0314_path_condition_crackme.c'
source_filename = "../.././c_source_file/0314_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %1, %0
  %5 = xor i32 %4, -1
  %6 = xor i32 %2, %1
  %7 = xor i32 %6, -1
  %8 = and i32 %7, %5
  %9 = sub i32 0, %8
  %10 = xor i32 %2, -1
  %11 = or i32 %10, %0
  %12 = xor i32 %11, %4
  %13 = xor i32 %0, -1
  %14 = and i32 %7, %13
  %15 = or i32 %6, %4
  %16 = shl i32 %15, 1
  %17 = and i32 %2, %0
  %18 = xor i32 %11, -1
  %19 = or i32 %4, %18
  %20 = or i32 %10, %1
  %21 = xor i32 %20, -1
  %22 = xor i32 %21, %0
  %23 = shl i32 %22, 1
  %24 = xor i32 %1, %0
  %25 = xor i32 %2, %0
  %26 = xor i32 %25, -1
  %27 = and i32 %24, %26
  %28 = and i32 %2, %1
  %29 = and i32 %28, %0
  %30 = and i32 %6, %13
  %31 = xor i32 %29, -1
  %32 = xor i32 %30, %31
  %33 = xor i32 %1, -1
  %34 = and i32 %33, %2
  %35 = and i32 %34, %0
  %36 = or i32 %6, %0
  %37 = xor i32 %35, %36
  %38 = or i32 %1, %0
  %39 = and i32 %38, %10
  %40 = or i32 %33, %0
  %41 = xor i32 %40, %2
  %42 = and i32 %26, %1
  %43 = and i32 %10, %0
  %44 = xor i32 %28, -1
  %45 = xor i32 %43, %44
  %46 = xor i32 %24, -1
  %47 = and i32 %10, %46
  %48 = add i32 %6, 1
  %49 = and i32 %33, %0
  %50 = or i32 %2, %0
  %51 = xor i32 %50, -1
  %52 = or i32 %51, %1
  %53 = xor i32 %43, %20
  %54 = or i32 %4, %10
  %55 = xor i32 %17, -1
  %56 = xor i32 %55, %1
  %57 = or i32 %6, %49
  %58 = or i32 %2, %1
  %59 = xor i32 %58, %0
  %60 = or i32 %29, %59
  %61 = xor i32 %40, -1
  %62 = or i32 %7, %61
  %63 = xor i32 %7, %0
  %64 = add i32 %50, 1
  %65 = xor i32 %28, %0
  %66 = xor i32 %43, %1
  %67 = or i32 %24, %2
  %68 = or i32 %43, %46
  %69 = xor i32 %49, -1
  %70 = and i32 %6, %69
  %71 = and i32 %28, %13
  %72 = and i32 %58, %0
  %73 = xor i32 %72, 1073741823
  %74 = xor i32 %73, %71
  %75 = shl i32 %74, 2
  %76 = xor i32 %38, -1
  %77 = or i32 %7, %76
  %78 = or i32 %26, %33
  %79 = and i32 %11, %1
  %80 = and i32 %10, %1
  %81 = xor i32 %80, -1
  %82 = xor i32 %81, %0
  %83 = and i32 %44, %13
  %84 = and i32 %24, %10
  %85 = shl i32 %84, 1
  %86 = or i32 %4, %26
  %87 = or i32 %49, %10
  %88 = or i32 %49, %2
  %89 = and i32 %81, %13
  %90 = and i32 %50, %1
  %91 = xor i32 %4, %2
  %92 = xor i32 %20, %0
  %93 = and i32 %38, %2
  %94 = shl i32 %93, 1
  %95 = shl i32 %40, 1
  %96 = and i32 %25, %24
  %97 = and i32 %25, %38
  %98 = shl i32 %1, 2
  %99 = xor i32 %5, %2
  %100 = or i32 %10, %61
  %101 = xor i32 %43, -1
  %102 = add i32 %43, 1
  %103 = xor i32 %61, %2
  %104 = shl i32 %103, 1
  %105 = and i32 %10, %69
  %106 = and i32 %50, %46
  %107 = and i32 %6, %0
  %108 = or i32 %51, %46
  %109 = xor i32 %51, %1
  %110 = or i32 %6, %61
  %111 = xor i32 %58, %4
  %112 = xor i32 %6, %0
  %113 = xor i32 %112, -1
  %114 = xor i32 %35, %113
  %115 = or i32 %17, %80
  %116 = or i32 %20, %13
  %117 = or i32 %21, %13
  %118 = or i32 %17, %76
  %119 = or i32 %7, %0
  %120 = or i32 %26, %61
  %121 = or i32 %28, %13
  %122 = or i32 %10, %46
  %123 = or i32 %18, %33
  %124 = shl i32 %123, 1
  %125 = or i32 %17, %1
  %126 = xor i32 %58, -1
  %127 = and i32 %25, %46
  %128 = shl i32 %127, 1
  %129 = or i32 %25, %49
  %130 = and i32 %101, %46
  %131 = and i32 %101, %33
  %132 = shl i32 %131, 1
  %133 = add i32 %0, 1
  %134 = and i32 %34, %13
  %135 = or i32 %33, %2
  %136 = and i32 %135, %0
  %137 = xor i32 %136, -1
  %138 = xor i32 %134, %137
  %139 = or i32 %25, %4
  %140 = shl i32 %139, 1
  %141 = xor i32 %29, %112
  %142 = or i32 %17, %61
  %143 = and i32 %6, %40
  %144 = or i32 %44, %13
  %145 = or i32 %80, %13
  %146 = or i32 %4, %2
  %147 = or i32 %49, %7
  %148 = or i32 %17, %126
  %149 = or i32 %17, %46
  %150 = or i32 %81, %0
  %151 = or i32 %26, %1
  %152 = xor i32 %80, %0
  %153 = or i32 %61, %2
  %154 = shl i32 %50, 1
  %155 = or i32 %25, %46
  %156 = and i32 %24, %2
  %157 = and i32 %69, %2
  %158 = or i32 %134, %136
  %159 = shl i32 %158, 1
  %160 = and i32 %24, %55
  %161 = or i32 %17, %24
  %162 = or i32 %81, %13
  %163 = or i32 %6, %13
  %164 = and i32 %38, %26
  %165 = and i32 %26, %69
  %166 = or i32 %46, %2
  %167 = and i32 %50, %24
  %168 = shl i32 %167, 1
  %169 = and i32 %40, %7
  %170 = and i32 %58, %13
  %171 = or i32 %29, %170
  %172 = and i32 %24, %101
  %173 = xor i32 %17, %38
  %174 = shl i32 %173, 1
  %175 = xor i32 %135, %0
  %176 = xor i32 %175, 2147483647
  %177 = xor i32 %176, %35
  %178 = and i32 %55, %1
  %179 = or i32 %43, %33
  %180 = or i32 %18, %1
  %181 = xor i32 %59, %31
  %182 = xor i32 %17, %58
  %183 = xor i32 %69, %2
  %184 = xor i32 %49, %2
  %185 = xor i32 %18, %1
  %186 = shl i32 %185, 1
  %187 = and i32 %25, %33
  %188 = and i32 %46, %2
  %189 = and i32 %101, %1
  %190 = xor i32 %44, %0
  %191 = and i32 %25, %40
  %192 = shl i32 %191, 1
  %193 = or i32 %80, %0
  %194 = and i32 %26, %46
  %195 = xor i32 %50, %1
  %196 = or i32 %4, %126
  %197 = or i32 %25, %33
  %198 = or i32 %43, %24
  %199 = or i32 %20, %0
  %200 = or i32 %35, %112
  %201 = xor i32 %50, %4
  %202 = or i32 %58, %13
  %203 = xor i32 %17, %40
  %204 = shl i32 %203, 1
  %205 = or i32 %49, %26
  %206 = or i32 %24, %51
  %207 = and i32 %44, %0
  %208 = and i32 %20, %0
  %209 = or i32 %24, %26
  %210 = and i32 %38, %7
  %211 = or i32 %26, %46
  %212 = and i32 %40, %26
  %213 = xor i32 %101, %1
  %214 = or i32 %17, %33
  %215 = xor i32 %17, %81
  %216 = xor i32 %20, %4
  %217 = or i32 %18, %46
  %218 = or i32 %44, %0
  %219 = or i32 %25, %24
  %220 = xor i32 %38, %2
  %221 = shl i32 %220, 1
  %222 = and i32 %50, %33
  %223 = or i32 %26, %76
  %224 = shl i32 %69, 1
  %225 = xor i32 %49, %44
  %226 = or i32 %28, %49
  %227 = or i32 %4, %51
  %228 = or i32 %6, %76
  %229 = add i32 %38, 1
  %230 = and i32 %11, %33
  %231 = and i32 %7, %0
  %232 = and i32 %7, %69
  %233 = or i32 %25, %76
  %234 = shl i32 %233, 1
  %235 = or i32 %10, %76
  %236 = or i32 %29, %30
  %237 = or i32 %4, %21
  %238 = and i32 %55, %46
  %239 = shl i32 %238, 1
  %240 = or i32 %71, %72
  %241 = or i32 %28, %0
  %242 = and i32 %25, %5
  %243 = and i32 %81, %0
  %244 = or i32 %76, %2
  %245 = shl i32 %244, 1
  %246 = shl i32 %55, 1
  %247 = or i32 %126, %13
  %248 = xor i32 %36, -1
  %249 = or i32 %35, %248
  %250 = xor i32 %76, %2
  %251 = shl i32 %250, 1
  %252 = or i32 %80, %49
  %253 = and i32 %6, %38
  %254 = and i32 %26, %5
  %255 = or i32 %71, %107
  %256 = or i32 %24, %10
  %257 = xor i32 %49, %81
  %258 = xor i32 %107, -1
  %259 = xor i32 %71, %258
  %260 = or i32 %35, %175
  %261 = and i32 %126, %13
  %262 = mul i32 %261, 17
  %263 = and i32 %80, %13
  %264 = shl i32 %263, 3
  %265 = and i32 %126, %0
  %266 = mul i32 %265, 14
  %267 = and i32 %80, %0
  %268 = mul i32 %267, 12
  %269 = and i32 %21, %13
  %270 = mul i32 %269, 35
  %271 = shl i32 %71, 2
  %272 = and i32 %21, %0
  %273 = mul i32 %29, 10
  %274 = sub i32 %133, %105
  %275 = add i32 %274, %142
  %276 = sub i32 %275, %254
  %277 = mul i32 %276, 5
  %278 = sub i32 %116, %66
  %279 = sub i32 %278, %56
  %280 = mul i32 %279, 3
  %281 = sub i32 -2, %24
  %282 = add i32 %281, %49
  %283 = add i32 %282, %38
  %284 = add i32 %283, %28
  %285 = add i32 %284, %126
  %286 = add i32 %285, %225
  %287 = add i32 %286, %201
  %288 = add i32 %287, %198
  %289 = add i32 %288, %180
  %290 = add i32 %289, %165
  %291 = add i32 %290, %152
  %292 = add i32 %291, %151
  %293 = add i32 %292, %129
  %294 = add i32 %293, %125
  %295 = add i32 %294, %92
  %296 = add i32 %295, %63
  %297 = add i32 %296, %42
  %298 = add i32 %297, %12
  %299 = add i32 %298, %177
  %300 = shl i32 %299, 1
  %301 = sub i32 -4, %0
  %302 = add i32 %301, %5
  %303 = add i32 %302, %98
  %304 = sub i32 %303, %24
  %305 = add i32 %304, %61
  %306 = sub i32 %305, %4
  %307 = add i32 %306, %229
  %308 = sub i32 %307, %17
  %309 = sub i32 %308, %39
  %310 = add i32 %309, %21
  %311 = add i32 %310, %41
  %312 = sub i32 %311, %47
  %313 = add i32 %312, %48
  %314 = sub i32 %313, %54
  %315 = add i32 %314, %64
  %316 = add i32 %315, %67
  %317 = add i32 %316, %87
  %318 = sub i32 %317, %88
  %319 = sub i32 %318, %91
  %320 = sub i32 %319, %95
  %321 = sub i32 %320, %99
  %322 = sub i32 %321, %100
  %323 = add i32 %322, %102
  %324 = sub i32 %323, %20
  %325 = sub i32 %324, %122
  %326 = sub i32 %325, %6
  %327 = sub i32 %326, %146
  %328 = sub i32 %327, %43
  %329 = sub i32 %328, %153
  %330 = add i32 %329, %44
  %331 = sub i32 %330, %156
  %332 = sub i32 %331, %157
  %333 = sub i32 %332, %166
  %334 = sub i32 %333, %80
  %335 = sub i32 %334, %183
  %336 = sub i32 %335, %184
  %337 = add i32 %336, %188
  %338 = sub i32 %337, %224
  %339 = add i32 %338, %26
  %340 = add i32 %339, %235
  %341 = sub i32 %340, %58
  %342 = add i32 %341, %256
  %343 = add i32 %342, %14
  %344 = add i32 %343, %19
  %345 = add i32 %344, %27
  %346 = add i32 %345, %45
  %347 = sub i32 %346, %52
  %348 = add i32 %347, %53
  %349 = add i32 %348, %57
  %350 = sub i32 %349, %62
  %351 = add i32 %350, %65
  %352 = sub i32 %351, %68
  %353 = sub i32 %352, %70
  %354 = sub i32 %353, %77
  %355 = sub i32 %354, %78
  %356 = sub i32 %355, %79
  %357 = sub i32 %356, %82
  %358 = add i32 %357, %83
  %359 = sub i32 %358, %85
  %360 = add i32 %359, %86
  %361 = add i32 %360, %89
  %362 = add i32 %361, %90
  %363 = sub i32 %362, %94
  %364 = add i32 %363, %96
  %365 = add i32 %364, %97
  %366 = sub i32 %365, %104
  %367 = add i32 %366, %106
  %368 = add i32 %367, %107
  %369 = add i32 %368, %108
  %370 = add i32 %369, %109
  %371 = sub i32 %370, %110
  %372 = sub i32 %371, %111
  %373 = sub i32 %372, %115
  %374 = add i32 %373, %117
  %375 = add i32 %374, %118
  %376 = add i32 %375, %119
  %377 = sub i32 %376, %120
  %378 = sub i32 %377, %121
  %379 = sub i32 %378, %130
  %380 = sub i32 %379, %143
  %381 = sub i32 %380, %144
  %382 = add i32 %381, %145
  %383 = sub i32 %382, %147
  %384 = add i32 %383, %148
  %385 = sub i32 %384, %149
  %386 = add i32 %385, %150
  %387 = sub i32 %386, %154
  %388 = add i32 %387, %155
  %389 = sub i32 %388, %36
  %390 = add i32 %389, %160
  %391 = add i32 %390, %161
  %392 = sub i32 %391, %162
  %393 = add i32 %392, %163
  %394 = sub i32 %393, %164
  %395 = add i32 %394, %169
  %396 = sub i32 %395, %172
  %397 = add i32 %396, %178
  %398 = sub i32 %397, %179
  %399 = sub i32 %398, %182
  %400 = add i32 %399, %187
  %401 = sub i32 %400, %189
  %402 = sub i32 %401, %190
  %403 = sub i32 %402, %193
  %404 = add i32 %403, %194
  %405 = sub i32 %404, %195
  %406 = add i32 %405, %196
  %407 = sub i32 %406, %197
  %408 = add i32 %407, %199
  %409 = add i32 %408, %202
  %410 = sub i32 %409, %205
  %411 = add i32 %410, %59
  %412 = add i32 %411, %206
  %413 = add i32 %412, %207
  %414 = sub i32 %413, %208
  %415 = sub i32 %414, %209
  %416 = add i32 %415, %210
  %417 = sub i32 %416, %211
  %418 = add i32 %417, %212
  %419 = add i32 %418, %213
  %420 = add i32 %419, %214
  %421 = add i32 %420, %215
  %422 = sub i32 %421, %216
  %423 = add i32 %422, %217
  %424 = sub i32 %423, %218
  %425 = add i32 %424, %219
  %426 = sub i32 %425, %221
  %427 = add i32 %426, %222
  %428 = add i32 %427, %223
  %429 = add i32 %428, %226
  %430 = sub i32 %429, %227
  %431 = add i32 %430, %228
  %432 = add i32 %431, %30
  %433 = add i32 %432, %230
  %434 = sub i32 %433, %231
  %435 = sub i32 %434, %232
  %436 = sub i32 %435, %237
  %437 = sub i32 %436, %241
  %438 = add i32 %437, %242
  %439 = sub i32 %438, %243
  %440 = sub i32 %439, %245
  %441 = sub i32 %440, %246
  %442 = sub i32 %441, %247
  %443 = sub i32 %442, %251
  %444 = sub i32 %443, %252
  %445 = add i32 %444, %253
  %446 = add i32 %445, %257
  %447 = sub i32 %446, %272
  %448 = sub i32 %447, %16
  %449 = sub i32 %448, %23
  %450 = sub i32 %449, %32
  %451 = add i32 %450, %37
  %452 = sub i32 %451, %60
  %453 = sub i32 %452, %114
  %454 = sub i32 %453, %124
  %455 = sub i32 %454, %128
  %456 = sub i32 %455, %132
  %457 = add i32 %456, %138
  %458 = sub i32 %457, %140
  %459 = sub i32 %458, %141
  %460 = sub i32 %459, %168
  %461 = sub i32 %460, %171
  %462 = sub i32 %461, %174
  %463 = add i32 %462, %181
  %464 = sub i32 %463, %186
  %465 = sub i32 %464, %192
  %466 = add i32 %465, %200
  %467 = sub i32 %466, %204
  %468 = sub i32 %467, %234
  %469 = add i32 %468, %236
  %470 = sub i32 %469, %239
  %471 = sub i32 %470, %240
  %472 = sub i32 %471, %249
  %473 = add i32 %472, %255
  %474 = sub i32 %473, %259
  %475 = sub i32 %474, %260
  %476 = add i32 %475, %262
  %477 = add i32 %476, %264
  %478 = add i32 %477, %266
  %479 = add i32 %478, %268
  %480 = add i32 %479, %270
  %481 = sub i32 %480, %271
  %482 = add i32 %481, %273
  %483 = sub i32 %482, %159
  %484 = sub i32 %483, %75
  %485 = add i32 %484, %280
  %486 = add i32 %485, %277
  %487 = add i32 %486, %300
  %488 = icmp eq i32 %487, %9
  %489 = select i1 %488, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %490 = tail call i32 @puts(i8* nonnull dereferenceable(1) %489)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
