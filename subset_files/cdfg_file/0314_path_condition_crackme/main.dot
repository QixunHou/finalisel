digraph "DFG for'main' function" {
	Node0x9b26a8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x9b2728[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x9b27b8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x9b2818[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x9b2c98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9b2d78[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x9b2e78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x9b2f38[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x9b2fe8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9b3248[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x9b3308[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x9b3468[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x9b34c8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x9bac20[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x9bae08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9baf68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x9bb078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9bb138[shape=record, label="  ret i32 0"];
	Node0x9b26a8 -> Node0x9b2728;
	Node0x9b2728 -> Node0x9b27b8;
	Node0x9b27b8 -> Node0x9b2818;
	Node0x9b2818 -> Node0x9b2c98;
	Node0x9b2c98 -> Node0x9b2d78;
	Node0x9b2d78 -> Node0x9b2e78;
	Node0x9b2e78 -> Node0x9b2f38;
	Node0x9b2f38 -> Node0x9b2fe8;
	Node0x9b2fe8 -> Node0x9b3248;
	Node0x9b3248 -> Node0x9b3308;
	Node0x9b3308 -> Node0x9b3468;
	Node0x9b3468 -> Node0x9b34c8;
	Node0x9b34c8 -> Node0x9bac20;
	Node0x9bac20 -> Node0x9bae08;
	Node0x9bae08 -> Node0x9baf68;
	Node0x9baf68 -> Node0x9bb078;
	Node0x9bb078 -> Node0x9bb138;
edge [color=red]
	Node0x9b26a8 -> Node0x9b2818;
	Node0x9b2818 -> Node0x9b2c98;
	Node0x9b2728 -> Node0x9b2d78;
	Node0x9b2d78 -> Node0x9b2e78;
	Node0x9b27b8 -> Node0x9b2f38;
	Node0x9b2f38 -> Node0x9b2fe8;
	Node0x9b26a8 -> Node0x9b3248;
	Node0x9b2728 -> Node0x9b3248;
	Node0x9b27b8 -> Node0x9b3248;
	Node0x9b26a8 -> Node0x9b3308;
	Node0x9b2728 -> Node0x9b3468;
	Node0x9b27b8 -> Node0x9b34c8;
	Node0x9b3308 -> Node0x9bac20;
	Node0x9b3468 -> Node0x9bac20;
	Node0x9b34c8 -> Node0x9bac20;
	Node0x9b2f38 -> Node0x9bae08;
	Node0x9b2d78 -> Node0x9baf68;
	Node0x9b2818 -> Node0x9bb078;
}
