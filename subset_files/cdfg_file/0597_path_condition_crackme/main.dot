digraph "DFG for'main' function" {
	Node0x1be1cc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1be1d48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1be1dd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1be1e38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1be1ee8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1be2318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1be23f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1be24f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1be25b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1be2668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1be2728[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1be27d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1bdc7a0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1be29d8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1be3948[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1be3fb8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1be4018[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1be4128[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1be4388[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1be44e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1be45f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1be4708[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1be47c8[shape=record, label="  ret i32 0"];
	Node0x1be1cc8 -> Node0x1be1d48;
	Node0x1be1d48 -> Node0x1be1dd8;
	Node0x1be1dd8 -> Node0x1be1e38;
	Node0x1be1e38 -> Node0x1be1ee8;
	Node0x1be1ee8 -> Node0x1be2318;
	Node0x1be2318 -> Node0x1be23f8;
	Node0x1be23f8 -> Node0x1be24f8;
	Node0x1be24f8 -> Node0x1be25b8;
	Node0x1be25b8 -> Node0x1be2668;
	Node0x1be2668 -> Node0x1be2728;
	Node0x1be2728 -> Node0x1be27d8;
	Node0x1be27d8 -> Node0x1bdc7a0;
	Node0x1bdc7a0 -> Node0x1be29d8;
	Node0x1be29d8 -> Node0x1be3948;
	Node0x1be3948 -> Node0x1be3fb8;
	Node0x1be3fb8 -> Node0x1be4018;
	Node0x1be4018 -> Node0x1be4128;
	Node0x1be4128 -> Node0x1be4388;
	Node0x1be4388 -> Node0x1be44e8;
	Node0x1be44e8 -> Node0x1be45f8;
	Node0x1be45f8 -> Node0x1be4708;
	Node0x1be4708 -> Node0x1be47c8;
edge [color=red]
	Node0x1be1cc8 -> Node0x1be1ee8;
	Node0x1be1ee8 -> Node0x1be2318;
	Node0x1be1d48 -> Node0x1be23f8;
	Node0x1be23f8 -> Node0x1be24f8;
	Node0x1be1dd8 -> Node0x1be25b8;
	Node0x1be25b8 -> Node0x1be2668;
	Node0x1be1e38 -> Node0x1be2728;
	Node0x1be2728 -> Node0x1be27d8;
	Node0x1be1cc8 -> Node0x1bdc7a0;
	Node0x1be1d48 -> Node0x1bdc7a0;
	Node0x1be1dd8 -> Node0x1bdc7a0;
	Node0x1be1e38 -> Node0x1bdc7a0;
	Node0x1be1cc8 -> Node0x1be29d8;
	Node0x1be1d48 -> Node0x1be3948;
	Node0x1be1dd8 -> Node0x1be3fb8;
	Node0x1be1e38 -> Node0x1be4018;
	Node0x1be29d8 -> Node0x1be4128;
	Node0x1be3948 -> Node0x1be4128;
	Node0x1be3fb8 -> Node0x1be4128;
	Node0x1be4018 -> Node0x1be4128;
	Node0x1be2728 -> Node0x1be4388;
	Node0x1be25b8 -> Node0x1be44e8;
	Node0x1be23f8 -> Node0x1be45f8;
	Node0x1be1ee8 -> Node0x1be4708;
}
