digraph "DFG for'main' function" {
	Node0x14bf388[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14bf408[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14bf498[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14bf4f8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x14bf978[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14bfa58[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x14bfb58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14bfc18[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x14bfcc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14bff28[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x14bffe8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14c0148[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14c01a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14c1cf0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x14c1ef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14c2058[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14c2168[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14c2228[shape=record, label="  ret i32 0"];
	Node0x14bf388 -> Node0x14bf408;
	Node0x14bf408 -> Node0x14bf498;
	Node0x14bf498 -> Node0x14bf4f8;
	Node0x14bf4f8 -> Node0x14bf978;
	Node0x14bf978 -> Node0x14bfa58;
	Node0x14bfa58 -> Node0x14bfb58;
	Node0x14bfb58 -> Node0x14bfc18;
	Node0x14bfc18 -> Node0x14bfcc8;
	Node0x14bfcc8 -> Node0x14bff28;
	Node0x14bff28 -> Node0x14bffe8;
	Node0x14bffe8 -> Node0x14c0148;
	Node0x14c0148 -> Node0x14c01a8;
	Node0x14c01a8 -> Node0x14c1cf0;
	Node0x14c1cf0 -> Node0x14c1ef8;
	Node0x14c1ef8 -> Node0x14c2058;
	Node0x14c2058 -> Node0x14c2168;
	Node0x14c2168 -> Node0x14c2228;
edge [color=red]
	Node0x14bf388 -> Node0x14bf4f8;
	Node0x14bf4f8 -> Node0x14bf978;
	Node0x14bf408 -> Node0x14bfa58;
	Node0x14bfa58 -> Node0x14bfb58;
	Node0x14bf498 -> Node0x14bfc18;
	Node0x14bfc18 -> Node0x14bfcc8;
	Node0x14bf388 -> Node0x14bff28;
	Node0x14bf408 -> Node0x14bff28;
	Node0x14bf498 -> Node0x14bff28;
	Node0x14bf388 -> Node0x14bffe8;
	Node0x14bf408 -> Node0x14c0148;
	Node0x14bf498 -> Node0x14c01a8;
	Node0x14bffe8 -> Node0x14c1cf0;
	Node0x14c0148 -> Node0x14c1cf0;
	Node0x14c01a8 -> Node0x14c1cf0;
	Node0x14bfc18 -> Node0x14c1ef8;
	Node0x14bfa58 -> Node0x14c2058;
	Node0x14bf4f8 -> Node0x14c2168;
}
