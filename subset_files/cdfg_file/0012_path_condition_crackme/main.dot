digraph "DFG for'main' function" {
	Node0x1c2aa78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c2aaf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c2ab88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c2abe8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1c2b068[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c2b148[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1c2b248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c2b308[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1c2b3b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c2b618[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1c2b6d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c2b838[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c2b898[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c2f0c0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1c2f2c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c2f428[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c2f538[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c2f5f8[shape=record, label="  ret i32 0"];
	Node0x1c2aa78 -> Node0x1c2aaf8;
	Node0x1c2aaf8 -> Node0x1c2ab88;
	Node0x1c2ab88 -> Node0x1c2abe8;
	Node0x1c2abe8 -> Node0x1c2b068;
	Node0x1c2b068 -> Node0x1c2b148;
	Node0x1c2b148 -> Node0x1c2b248;
	Node0x1c2b248 -> Node0x1c2b308;
	Node0x1c2b308 -> Node0x1c2b3b8;
	Node0x1c2b3b8 -> Node0x1c2b618;
	Node0x1c2b618 -> Node0x1c2b6d8;
	Node0x1c2b6d8 -> Node0x1c2b838;
	Node0x1c2b838 -> Node0x1c2b898;
	Node0x1c2b898 -> Node0x1c2f0c0;
	Node0x1c2f0c0 -> Node0x1c2f2c8;
	Node0x1c2f2c8 -> Node0x1c2f428;
	Node0x1c2f428 -> Node0x1c2f538;
	Node0x1c2f538 -> Node0x1c2f5f8;
edge [color=red]
	Node0x1c2aa78 -> Node0x1c2abe8;
	Node0x1c2abe8 -> Node0x1c2b068;
	Node0x1c2aaf8 -> Node0x1c2b148;
	Node0x1c2b148 -> Node0x1c2b248;
	Node0x1c2ab88 -> Node0x1c2b308;
	Node0x1c2b308 -> Node0x1c2b3b8;
	Node0x1c2aa78 -> Node0x1c2b618;
	Node0x1c2aaf8 -> Node0x1c2b618;
	Node0x1c2ab88 -> Node0x1c2b618;
	Node0x1c2aa78 -> Node0x1c2b6d8;
	Node0x1c2aaf8 -> Node0x1c2b838;
	Node0x1c2ab88 -> Node0x1c2b898;
	Node0x1c2b6d8 -> Node0x1c2f0c0;
	Node0x1c2b838 -> Node0x1c2f0c0;
	Node0x1c2b898 -> Node0x1c2f0c0;
	Node0x1c2b308 -> Node0x1c2f2c8;
	Node0x1c2b148 -> Node0x1c2f428;
	Node0x1c2abe8 -> Node0x1c2f538;
}
