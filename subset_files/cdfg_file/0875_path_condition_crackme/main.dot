digraph "DFG for'main' function" {
	Node0xe42e58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe42ed8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe42f68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xe42fc8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xe43078[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xe434a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe43588[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xe43688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe43748[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xe437f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xe438b8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xe43968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xe3dbf0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xe43b68[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe44ad8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe45148[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xe451a8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xe45220[shape=record, label="  %14 = and i32 %12, %11"];
	Node0xe45290[shape=record, label="  %15 = add i32 %14, 1"];
	Node0xe45300[shape=record, label="  %16 = shl i32 %11, 1"];
	Node0xe45370[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0xe453e0[shape=record, label="  %18 = sub i32 %15, %17"];
	Node0xe45450[shape=record, label="  %19 = or i32 %13, %10"];
	Node0xe454c0[shape=record, label="  %20 = shl i32 %19, 2"];
	Node0xe45530[shape=record, label="  %21 = and i32 %13, %10"];
	Node0xe455a0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0xe45610[shape=record, label="  %23 = add i32 %18, %22"];
	Node0xe45680[shape=record, label="  %24 = sub i32 %23, %20"];
	Node0xe456f0[shape=record, label="  %25 = xor i32 %12, -1"];
	Node0xe45760[shape=record, label="  %26 = or i32 %11, %25"];
	Node0xe457d0[shape=record, label="  %27 = xor i32 %12, %11"];
	Node0xe45840[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0xe458b0[shape=record, label="  %29 = and i32 %11, %25"];
	Node0xe45920[shape=record, label="  %30 = xor i32 %26, -1"];
	Node0xe45990[shape=record, label="  %31 = xor i32 %13, %10"];
	Node0xe45a00[shape=record, label="  %32 = xor i32 %31, -1"];
	Node0xe45a70[shape=record, label="  %33 = xor i32 %10, -1"];
	Node0xe45ae0[shape=record, label="  %34 = and i32 %13, %33"];
	Node0xe45b50[shape=record, label="  %35 = xor i32 %34, -1"];
	Node0xe45bc0[shape=record, label="  %36 = or i32 %13, %33"];
	Node0xe45c30[shape=record, label="  %37 = xor i32 %19, -1"];
	Node0xe45ca0[shape=record, label="  %38 = mul i32 %21, -3"];
	Node0xe45d10[shape=record, label="  %39 = mul i32 %11, 5"];
	Node0xe45d80[shape=record, label="  %40 = mul i32 %10, -2"];
	Node0xe45e20[shape=record, label="  %41 = add i32 %40, 3"];
	Node0xe45e90[shape=record, label="  %42 = sub i32 %41, %16"];
	Node0xe45f00[shape=record, label="  %43 = add i32 %42, %39"];
	Node0xe45f70[shape=record, label="  %44 = sub i32 %43, %26"];
	Node0xe45fe0[shape=record, label="  %45 = add i32 %44, %29"];
	Node0xe46050[shape=record, label="  %46 = add i32 %45, %30"];
	Node0xe460c0[shape=record, label="  %47 = add i32 %46, %13"];
	Node0xe46130[shape=record, label="  %48 = sub i32 %47, %28"];
	Node0xe461a0[shape=record, label="  %49 = add i32 %48, %32"];
	Node0xe46210[shape=record, label="  %50 = add i32 %49, %35"];
	Node0xe46280[shape=record, label="  %51 = sub i32 %50, %31"];
	Node0xe462f0[shape=record, label="  %52 = sub i32 %51, %36"];
	Node0xe46360[shape=record, label="  %53 = add i32 %52, %37"];
	Node0xe463d0[shape=record, label="  %54 = sub i32 %53, %34"];
	Node0xe46440[shape=record, label="  %55 = add i32 %54, %38"];
	Node0xe464b0[shape=record, label="  %56 = icmp eq i32 %24, %55"];
	Node0xde28b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe46540[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0xe467e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xe46948[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xe46a58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe46b68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe46c28[shape=record, label="  ret i32 0"];
	Node0xe42e58 -> Node0xe42ed8;
	Node0xe42ed8 -> Node0xe42f68;
	Node0xe42f68 -> Node0xe42fc8;
	Node0xe42fc8 -> Node0xe43078;
	Node0xe43078 -> Node0xe434a8;
	Node0xe434a8 -> Node0xe43588;
	Node0xe43588 -> Node0xe43688;
	Node0xe43688 -> Node0xe43748;
	Node0xe43748 -> Node0xe437f8;
	Node0xe437f8 -> Node0xe438b8;
	Node0xe438b8 -> Node0xe43968;
	Node0xe43968 -> Node0xe3dbf0;
	Node0xe3dbf0 -> Node0xe43b68;
	Node0xe43b68 -> Node0xe44ad8;
	Node0xe44ad8 -> Node0xe45148;
	Node0xe45148 -> Node0xe451a8;
	Node0xe451a8 -> Node0xe45220;
	Node0xe45220 -> Node0xe45290;
	Node0xe45290 -> Node0xe45300;
	Node0xe45300 -> Node0xe45370;
	Node0xe45370 -> Node0xe453e0;
	Node0xe453e0 -> Node0xe45450;
	Node0xe45450 -> Node0xe454c0;
	Node0xe454c0 -> Node0xe45530;
	Node0xe45530 -> Node0xe455a0;
	Node0xe455a0 -> Node0xe45610;
	Node0xe45610 -> Node0xe45680;
	Node0xe45680 -> Node0xe456f0;
	Node0xe456f0 -> Node0xe45760;
	Node0xe45760 -> Node0xe457d0;
	Node0xe457d0 -> Node0xe45840;
	Node0xe45840 -> Node0xe458b0;
	Node0xe458b0 -> Node0xe45920;
	Node0xe45920 -> Node0xe45990;
	Node0xe45990 -> Node0xe45a00;
	Node0xe45a00 -> Node0xe45a70;
	Node0xe45a70 -> Node0xe45ae0;
	Node0xe45ae0 -> Node0xe45b50;
	Node0xe45b50 -> Node0xe45bc0;
	Node0xe45bc0 -> Node0xe45c30;
	Node0xe45c30 -> Node0xe45ca0;
	Node0xe45ca0 -> Node0xe45d10;
	Node0xe45d10 -> Node0xe45d80;
	Node0xe45d80 -> Node0xe45e20;
	Node0xe45e20 -> Node0xe45e90;
	Node0xe45e90 -> Node0xe45f00;
	Node0xe45f00 -> Node0xe45f70;
	Node0xe45f70 -> Node0xe45fe0;
	Node0xe45fe0 -> Node0xe46050;
	Node0xe46050 -> Node0xe460c0;
	Node0xe460c0 -> Node0xe46130;
	Node0xe46130 -> Node0xe461a0;
	Node0xe461a0 -> Node0xe46210;
	Node0xe46210 -> Node0xe46280;
	Node0xe46280 -> Node0xe462f0;
	Node0xe462f0 -> Node0xe46360;
	Node0xe46360 -> Node0xe463d0;
	Node0xe463d0 -> Node0xe46440;
	Node0xe46440 -> Node0xe464b0;
	Node0xe464b0 -> Node0xde28b8;
	Node0xde28b8 -> Node0xe46540;
	Node0xe46540 -> Node0xe467e8;
	Node0xe467e8 -> Node0xe46948;
	Node0xe46948 -> Node0xe46a58;
	Node0xe46a58 -> Node0xe46b68;
	Node0xe46b68 -> Node0xe46c28;
edge [color=red]
	Node0xe42e58 -> Node0xe43078;
	Node0xe43078 -> Node0xe434a8;
	Node0xe42ed8 -> Node0xe43588;
	Node0xe43588 -> Node0xe43688;
	Node0xe42f68 -> Node0xe43748;
	Node0xe43748 -> Node0xe437f8;
	Node0xe42fc8 -> Node0xe438b8;
	Node0xe438b8 -> Node0xe43968;
	Node0xe42e58 -> Node0xe3dbf0;
	Node0xe42ed8 -> Node0xe3dbf0;
	Node0xe42f68 -> Node0xe3dbf0;
	Node0xe42fc8 -> Node0xe3dbf0;
	Node0xe42e58 -> Node0xe43b68;
	Node0xe42ed8 -> Node0xe44ad8;
	Node0xe42f68 -> Node0xe45148;
	Node0xe42fc8 -> Node0xe451a8;
	Node0xe45148 -> Node0xe45220;
	Node0xe44ad8 -> Node0xe45220;
	Node0xe45220 -> Node0xe45290;
	Node0xe44ad8 -> Node0xe45300;
	Node0xe45300 -> Node0xe45370;
	Node0xe45290 -> Node0xe453e0;
	Node0xe45370 -> Node0xe453e0;
	Node0xe451a8 -> Node0xe45450;
	Node0xe43b68 -> Node0xe45450;
	Node0xe45450 -> Node0xe454c0;
	Node0xe451a8 -> Node0xe45530;
	Node0xe43b68 -> Node0xe45530;
	Node0xe45530 -> Node0xe455a0;
	Node0xe453e0 -> Node0xe45610;
	Node0xe455a0 -> Node0xe45610;
	Node0xe45610 -> Node0xe45680;
	Node0xe454c0 -> Node0xe45680;
	Node0xe45148 -> Node0xe456f0;
	Node0xe44ad8 -> Node0xe45760;
	Node0xe456f0 -> Node0xe45760;
	Node0xe45148 -> Node0xe457d0;
	Node0xe44ad8 -> Node0xe457d0;
	Node0xe457d0 -> Node0xe45840;
	Node0xe44ad8 -> Node0xe458b0;
	Node0xe456f0 -> Node0xe458b0;
	Node0xe45760 -> Node0xe45920;
	Node0xe451a8 -> Node0xe45990;
	Node0xe43b68 -> Node0xe45990;
	Node0xe45990 -> Node0xe45a00;
	Node0xe43b68 -> Node0xe45a70;
	Node0xe451a8 -> Node0xe45ae0;
	Node0xe45a70 -> Node0xe45ae0;
	Node0xe45ae0 -> Node0xe45b50;
	Node0xe451a8 -> Node0xe45bc0;
	Node0xe45a70 -> Node0xe45bc0;
	Node0xe45450 -> Node0xe45c30;
	Node0xe45530 -> Node0xe45ca0;
	Node0xe44ad8 -> Node0xe45d10;
	Node0xe43b68 -> Node0xe45d80;
	Node0xe45d80 -> Node0xe45e20;
	Node0xe45e20 -> Node0xe45e90;
	Node0xe45300 -> Node0xe45e90;
	Node0xe45e90 -> Node0xe45f00;
	Node0xe45d10 -> Node0xe45f00;
	Node0xe45f00 -> Node0xe45f70;
	Node0xe45760 -> Node0xe45f70;
	Node0xe45f70 -> Node0xe45fe0;
	Node0xe458b0 -> Node0xe45fe0;
	Node0xe45fe0 -> Node0xe46050;
	Node0xe45920 -> Node0xe46050;
	Node0xe46050 -> Node0xe460c0;
	Node0xe451a8 -> Node0xe460c0;
	Node0xe460c0 -> Node0xe46130;
	Node0xe45840 -> Node0xe46130;
	Node0xe46130 -> Node0xe461a0;
	Node0xe45a00 -> Node0xe461a0;
	Node0xe461a0 -> Node0xe46210;
	Node0xe45b50 -> Node0xe46210;
	Node0xe46210 -> Node0xe46280;
	Node0xe45990 -> Node0xe46280;
	Node0xe46280 -> Node0xe462f0;
	Node0xe45bc0 -> Node0xe462f0;
	Node0xe462f0 -> Node0xe46360;
	Node0xe45c30 -> Node0xe46360;
	Node0xe46360 -> Node0xe463d0;
	Node0xe45ae0 -> Node0xe463d0;
	Node0xe463d0 -> Node0xe46440;
	Node0xe45ca0 -> Node0xe46440;
	Node0xe45680 -> Node0xe464b0;
	Node0xe46440 -> Node0xe464b0;
	Node0xe464b0 -> Node0xde28b8;
	Node0xde28b8 -> Node0xe46540;
	Node0xe438b8 -> Node0xe467e8;
	Node0xe43748 -> Node0xe46948;
	Node0xe43588 -> Node0xe46a58;
	Node0xe43078 -> Node0xe46b68;
}
