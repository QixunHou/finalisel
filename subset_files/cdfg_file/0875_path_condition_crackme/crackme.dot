digraph "DFG for'crackme' function" {
	Node0xe40bc0[shape=record, label="  %5 = and i32 %2, %1"];
	Node0xe41240[shape=record, label="  %6 = add i32 %5, 1"];
	Node0xe412b0[shape=record, label="  %7 = shl i32 %1, 1"];
	Node0xe41350[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0xe413c0[shape=record, label="  %9 = sub i32 %6, %8"];
	Node0xe41430[shape=record, label="  %10 = or i32 %3, %0"];
	Node0xe414d0[shape=record, label="  %11 = shl i32 %10, 2"];
	Node0xe41540[shape=record, label="  %12 = and i32 %3, %0"];
	Node0xe415e0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xe41650[shape=record, label="  %14 = add i32 %9, %13"];
	Node0xe416c0[shape=record, label="  %15 = sub i32 %14, %11"];
	Node0xe41730[shape=record, label="  %16 = xor i32 %2, -1"];
	Node0xe417a0[shape=record, label="  %17 = or i32 %16, %1"];
	Node0xe41810[shape=record, label="  %18 = xor i32 %2, %1"];
	Node0xe41880[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0xe418f0[shape=record, label="  %20 = and i32 %16, %1"];
	Node0xe41960[shape=record, label="  %21 = xor i32 %17, -1"];
	Node0xe419d0[shape=record, label="  %22 = xor i32 %3, %0"];
	Node0xe41a40[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0xe41ab0[shape=record, label="  %24 = xor i32 %0, -1"];
	Node0xe41b20[shape=record, label="  %25 = and i32 %24, %3"];
	Node0xe41b90[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0xe41c00[shape=record, label="  %27 = or i32 %24, %3"];
	Node0xe41c70[shape=record, label="  %28 = xor i32 %10, -1"];
	Node0xe41d10[shape=record, label="  %29 = mul i32 %12, -3"];
	Node0xe41db0[shape=record, label="  %30 = mul i32 %1, 5"];
	Node0xe41e20[shape=record, label="  %31 = sub i32 2, %0"];
	Node0xe41e90[shape=record, label="  %32 = sub i32 %31, %0"];
	Node0xe42110[shape=record, label="  %33 = add i32 %32, 1"];
	Node0xe42180[shape=record, label="  %34 = sub i32 %33, %7"];
	Node0xe421f0[shape=record, label="  %35 = sub i32 %34, %17"];
	Node0xe42260[shape=record, label="  %36 = add i32 %35, %20"];
	Node0xe422d0[shape=record, label="  %37 = add i32 %36, %21"];
	Node0xe42340[shape=record, label="  %38 = add i32 %37, %3"];
	Node0xe423b0[shape=record, label="  %39 = sub i32 %38, %19"];
	Node0xe42420[shape=record, label="  %40 = add i32 %39, %23"];
	Node0xe42490[shape=record, label="  %41 = add i32 %40, %26"];
	Node0xe42500[shape=record, label="  %42 = sub i32 %41, %22"];
	Node0xe42570[shape=record, label="  %43 = sub i32 %42, %27"];
	Node0xe425e0[shape=record, label="  %44 = add i32 %43, %28"];
	Node0xe42650[shape=record, label="  %45 = sub i32 %44, %25"];
	Node0xe426c0[shape=record, label="  %46 = add i32 %45, %29"];
	Node0xe42730[shape=record, label="  %47 = add i32 %46, %30"];
	Node0xe427a0[shape=record, label="  %48 = icmp eq i32 %15, %47"];
	Node0xde1268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe42c40[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0xe42c90[shape=record, label="  ret void"];
	Node0xe40bc0 -> Node0xe41240;
	Node0xe41240 -> Node0xe412b0;
	Node0xe412b0 -> Node0xe41350;
	Node0xe41350 -> Node0xe413c0;
	Node0xe413c0 -> Node0xe41430;
	Node0xe41430 -> Node0xe414d0;
	Node0xe414d0 -> Node0xe41540;
	Node0xe41540 -> Node0xe415e0;
	Node0xe415e0 -> Node0xe41650;
	Node0xe41650 -> Node0xe416c0;
	Node0xe416c0 -> Node0xe41730;
	Node0xe41730 -> Node0xe417a0;
	Node0xe417a0 -> Node0xe41810;
	Node0xe41810 -> Node0xe41880;
	Node0xe41880 -> Node0xe418f0;
	Node0xe418f0 -> Node0xe41960;
	Node0xe41960 -> Node0xe419d0;
	Node0xe419d0 -> Node0xe41a40;
	Node0xe41a40 -> Node0xe41ab0;
	Node0xe41ab0 -> Node0xe41b20;
	Node0xe41b20 -> Node0xe41b90;
	Node0xe41b90 -> Node0xe41c00;
	Node0xe41c00 -> Node0xe41c70;
	Node0xe41c70 -> Node0xe41d10;
	Node0xe41d10 -> Node0xe41db0;
	Node0xe41db0 -> Node0xe41e20;
	Node0xe41e20 -> Node0xe41e90;
	Node0xe41e90 -> Node0xe42110;
	Node0xe42110 -> Node0xe42180;
	Node0xe42180 -> Node0xe421f0;
	Node0xe421f0 -> Node0xe42260;
	Node0xe42260 -> Node0xe422d0;
	Node0xe422d0 -> Node0xe42340;
	Node0xe42340 -> Node0xe423b0;
	Node0xe423b0 -> Node0xe42420;
	Node0xe42420 -> Node0xe42490;
	Node0xe42490 -> Node0xe42500;
	Node0xe42500 -> Node0xe42570;
	Node0xe42570 -> Node0xe425e0;
	Node0xe425e0 -> Node0xe42650;
	Node0xe42650 -> Node0xe426c0;
	Node0xe426c0 -> Node0xe42730;
	Node0xe42730 -> Node0xe427a0;
	Node0xe427a0 -> Node0xde1268;
	Node0xde1268 -> Node0xe42c40;
	Node0xe42c40 -> Node0xe42c90;
edge [color=red]
	Node0xe40bc0 -> Node0xe41240;
	Node0xe412b0 -> Node0xe41350;
	Node0xe41240 -> Node0xe413c0;
	Node0xe41350 -> Node0xe413c0;
	Node0xe41430 -> Node0xe414d0;
	Node0xe41540 -> Node0xe415e0;
	Node0xe413c0 -> Node0xe41650;
	Node0xe415e0 -> Node0xe41650;
	Node0xe41650 -> Node0xe416c0;
	Node0xe414d0 -> Node0xe416c0;
	Node0xe41730 -> Node0xe417a0;
	Node0xe41810 -> Node0xe41880;
	Node0xe41730 -> Node0xe418f0;
	Node0xe417a0 -> Node0xe41960;
	Node0xe419d0 -> Node0xe41a40;
	Node0xe41ab0 -> Node0xe41b20;
	Node0xe41b20 -> Node0xe41b90;
	Node0xe41ab0 -> Node0xe41c00;
	Node0xe41430 -> Node0xe41c70;
	Node0xe41540 -> Node0xe41d10;
	Node0xe41e20 -> Node0xe41e90;
	Node0xe41e90 -> Node0xe42110;
	Node0xe42110 -> Node0xe42180;
	Node0xe412b0 -> Node0xe42180;
	Node0xe42180 -> Node0xe421f0;
	Node0xe417a0 -> Node0xe421f0;
	Node0xe421f0 -> Node0xe42260;
	Node0xe418f0 -> Node0xe42260;
	Node0xe42260 -> Node0xe422d0;
	Node0xe41960 -> Node0xe422d0;
	Node0xe422d0 -> Node0xe42340;
	Node0xe42340 -> Node0xe423b0;
	Node0xe41880 -> Node0xe423b0;
	Node0xe423b0 -> Node0xe42420;
	Node0xe41a40 -> Node0xe42420;
	Node0xe42420 -> Node0xe42490;
	Node0xe41b90 -> Node0xe42490;
	Node0xe42490 -> Node0xe42500;
	Node0xe419d0 -> Node0xe42500;
	Node0xe42500 -> Node0xe42570;
	Node0xe41c00 -> Node0xe42570;
	Node0xe42570 -> Node0xe425e0;
	Node0xe41c70 -> Node0xe425e0;
	Node0xe425e0 -> Node0xe42650;
	Node0xe41b20 -> Node0xe42650;
	Node0xe42650 -> Node0xe426c0;
	Node0xe41d10 -> Node0xe426c0;
	Node0xe426c0 -> Node0xe42730;
	Node0xe41db0 -> Node0xe42730;
	Node0xe416c0 -> Node0xe427a0;
	Node0xe42730 -> Node0xe427a0;
	Node0xe427a0 -> Node0xde1268;
	Node0xde1268 -> Node0xe42c40;
}
