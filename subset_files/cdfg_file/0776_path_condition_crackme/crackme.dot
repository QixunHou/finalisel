digraph "DFG for'crackme' function" {
	Node0x77bae0[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x77bb50[shape=record, label="  %6 = xor i32 %3, %0"];
	Node0x77c1d0[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x77c270[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x77c2e0[shape=record, label="  %9 = and i32 %8, %3"];
	Node0x77c350[shape=record, label="  %10 = sub i32 %5, %9"];
	Node0x77c3c0[shape=record, label="  %11 = add i32 %10, %7"];
	Node0x77c430[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x77c4a0[shape=record, label="  %13 = add i32 %2, 1"];
	Node0x77c510[shape=record, label="  %14 = xor i32 %1, -1"];
	Node0x77c580[shape=record, label="  %15 = and i32 %14, %2"];
	Node0x77c5f0[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x77c660[shape=record, label="  %17 = shl i32 %2, 1"];
	Node0x77c6d0[shape=record, label="  %18 = and i32 %12, %1"];
	Node0x77c740[shape=record, label="  %19 = xor i32 %16, -1"];
	Node0x77c7b0[shape=record, label="  %20 = shl i32 %3, 1"];
	Node0x77c820[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x77c890[shape=record, label="  %22 = or i32 %8, %3"];
	Node0x77c930[shape=record, label="  %23 = shl i32 %22, 2"];
	Node0x77c9d0[shape=record, label="  %24 = xor i32 %23, -4"];
	Node0x77ca40[shape=record, label="  %25 = add i32 %22, %13"];
	Node0x77cab0[shape=record, label="  %26 = add i32 %25, %9"];
	Node0x77cb20[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x77cb90[shape=record, label="  %28 = xor i32 %1, %2"];
	Node0x77cc30[shape=record, label="  %29 = mul i32 %28, -5"];
	Node0x77cca0[shape=record, label="  %30 = add i32 %5, %19"];
	Node0x77cd40[shape=record, label="  %31 = mul i32 %30, -3"];
	Node0x77cdb0[shape=record, label="  %32 = add i32 %15, -3"];
	Node0x77d030[shape=record, label="  %33 = add i32 %32, %16"];
	Node0x77d0a0[shape=record, label="  %34 = sub i32 %33, %17"];
	Node0x77d110[shape=record, label="  %35 = add i32 %34, %18"];
	Node0x77d180[shape=record, label="  %36 = add i32 %35, %3"];
	Node0x77d1f0[shape=record, label="  %37 = sub i32 %36, %20"];
	Node0x77d260[shape=record, label="  %38 = add i32 %37, %21"];
	Node0x77d2d0[shape=record, label="  %39 = add i32 %38, %29"];
	Node0x77d340[shape=record, label="  %40 = add i32 %39, %31"];
	Node0x77d3b0[shape=record, label="  %41 = add i32 %40, %24"];
	Node0x77d420[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x77d490[shape=record, label="  %43 = icmp eq i32 %11, %42"];
	Node0x71c268[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x77d930[shape=record, label="  %45 = tail call i32 @puts(i8* nonnull dereferenceable(1) %44)"];
	Node0x77d980[shape=record, label="  ret void"];
	Node0x77bae0 -> Node0x77bb50;
	Node0x77bb50 -> Node0x77c1d0;
	Node0x77c1d0 -> Node0x77c270;
	Node0x77c270 -> Node0x77c2e0;
	Node0x77c2e0 -> Node0x77c350;
	Node0x77c350 -> Node0x77c3c0;
	Node0x77c3c0 -> Node0x77c430;
	Node0x77c430 -> Node0x77c4a0;
	Node0x77c4a0 -> Node0x77c510;
	Node0x77c510 -> Node0x77c580;
	Node0x77c580 -> Node0x77c5f0;
	Node0x77c5f0 -> Node0x77c660;
	Node0x77c660 -> Node0x77c6d0;
	Node0x77c6d0 -> Node0x77c740;
	Node0x77c740 -> Node0x77c7b0;
	Node0x77c7b0 -> Node0x77c820;
	Node0x77c820 -> Node0x77c890;
	Node0x77c890 -> Node0x77c930;
	Node0x77c930 -> Node0x77c9d0;
	Node0x77c9d0 -> Node0x77ca40;
	Node0x77ca40 -> Node0x77cab0;
	Node0x77cab0 -> Node0x77cb20;
	Node0x77cb20 -> Node0x77cb90;
	Node0x77cb90 -> Node0x77cc30;
	Node0x77cc30 -> Node0x77cca0;
	Node0x77cca0 -> Node0x77cd40;
	Node0x77cd40 -> Node0x77cdb0;
	Node0x77cdb0 -> Node0x77d030;
	Node0x77d030 -> Node0x77d0a0;
	Node0x77d0a0 -> Node0x77d110;
	Node0x77d110 -> Node0x77d180;
	Node0x77d180 -> Node0x77d1f0;
	Node0x77d1f0 -> Node0x77d260;
	Node0x77d260 -> Node0x77d2d0;
	Node0x77d2d0 -> Node0x77d340;
	Node0x77d340 -> Node0x77d3b0;
	Node0x77d3b0 -> Node0x77d420;
	Node0x77d420 -> Node0x77d490;
	Node0x77d490 -> Node0x71c268;
	Node0x71c268 -> Node0x77d930;
	Node0x77d930 -> Node0x77d980;
edge [color=red]
	Node0x77bb50 -> Node0x77c1d0;
	Node0x77c270 -> Node0x77c2e0;
	Node0x77bae0 -> Node0x77c350;
	Node0x77c2e0 -> Node0x77c350;
	Node0x77c350 -> Node0x77c3c0;
	Node0x77c1d0 -> Node0x77c3c0;
	Node0x77c510 -> Node0x77c580;
	Node0x77c430 -> Node0x77c6d0;
	Node0x77c5f0 -> Node0x77c740;
	Node0x77c270 -> Node0x77c890;
	Node0x77c890 -> Node0x77c930;
	Node0x77c930 -> Node0x77c9d0;
	Node0x77c890 -> Node0x77ca40;
	Node0x77c4a0 -> Node0x77ca40;
	Node0x77ca40 -> Node0x77cab0;
	Node0x77c2e0 -> Node0x77cab0;
	Node0x77cab0 -> Node0x77cb20;
	Node0x77cb90 -> Node0x77cc30;
	Node0x77bae0 -> Node0x77cca0;
	Node0x77c740 -> Node0x77cca0;
	Node0x77cca0 -> Node0x77cd40;
	Node0x77c580 -> Node0x77cdb0;
	Node0x77cdb0 -> Node0x77d030;
	Node0x77c5f0 -> Node0x77d030;
	Node0x77d030 -> Node0x77d0a0;
	Node0x77c660 -> Node0x77d0a0;
	Node0x77d0a0 -> Node0x77d110;
	Node0x77c6d0 -> Node0x77d110;
	Node0x77d110 -> Node0x77d180;
	Node0x77d180 -> Node0x77d1f0;
	Node0x77c7b0 -> Node0x77d1f0;
	Node0x77d1f0 -> Node0x77d260;
	Node0x77c820 -> Node0x77d260;
	Node0x77d260 -> Node0x77d2d0;
	Node0x77cc30 -> Node0x77d2d0;
	Node0x77d2d0 -> Node0x77d340;
	Node0x77cd40 -> Node0x77d340;
	Node0x77d340 -> Node0x77d3b0;
	Node0x77c9d0 -> Node0x77d3b0;
	Node0x77d3b0 -> Node0x77d420;
	Node0x77cb20 -> Node0x77d420;
	Node0x77c3c0 -> Node0x77d490;
	Node0x77d420 -> Node0x77d490;
	Node0x77d490 -> Node0x71c268;
	Node0x71c268 -> Node0x77d930;
}
