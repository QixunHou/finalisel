digraph "DFG for'main' function" {
	Node0xf8eff8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf8f078[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf8f108[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf8f168[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xf8f5e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf8f6c8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xf8f7c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf8f888[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xf8f938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf8fb98[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xf8fc58[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf90bc8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf90c28[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf90d20[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xf91878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf919b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf91ac8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf91b88[shape=record, label="  ret i32 0"];
	Node0xf8eff8 -> Node0xf8f078;
	Node0xf8f078 -> Node0xf8f108;
	Node0xf8f108 -> Node0xf8f168;
	Node0xf8f168 -> Node0xf8f5e8;
	Node0xf8f5e8 -> Node0xf8f6c8;
	Node0xf8f6c8 -> Node0xf8f7c8;
	Node0xf8f7c8 -> Node0xf8f888;
	Node0xf8f888 -> Node0xf8f938;
	Node0xf8f938 -> Node0xf8fb98;
	Node0xf8fb98 -> Node0xf8fc58;
	Node0xf8fc58 -> Node0xf90bc8;
	Node0xf90bc8 -> Node0xf90c28;
	Node0xf90c28 -> Node0xf90d20;
	Node0xf90d20 -> Node0xf91878;
	Node0xf91878 -> Node0xf919b8;
	Node0xf919b8 -> Node0xf91ac8;
	Node0xf91ac8 -> Node0xf91b88;
edge [color=red]
	Node0xf8eff8 -> Node0xf8f168;
	Node0xf8f168 -> Node0xf8f5e8;
	Node0xf8f078 -> Node0xf8f6c8;
	Node0xf8f6c8 -> Node0xf8f7c8;
	Node0xf8f108 -> Node0xf8f888;
	Node0xf8f888 -> Node0xf8f938;
	Node0xf8eff8 -> Node0xf8fb98;
	Node0xf8f078 -> Node0xf8fb98;
	Node0xf8f108 -> Node0xf8fb98;
	Node0xf8eff8 -> Node0xf8fc58;
	Node0xf8f078 -> Node0xf90bc8;
	Node0xf8f108 -> Node0xf90c28;
	Node0xf8fc58 -> Node0xf90d20;
	Node0xf90bc8 -> Node0xf90d20;
	Node0xf90c28 -> Node0xf90d20;
	Node0xf8f888 -> Node0xf91878;
	Node0xf8f6c8 -> Node0xf919b8;
	Node0xf8f168 -> Node0xf91ac8;
}
