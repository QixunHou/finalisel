digraph "DFG for'main' function" {
	Node0xacce68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xaccee8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xaccf78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xacd3d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xacd4b8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xacd5d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xacd810[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xacd8c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xace838[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xaceec0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0xacef30[shape=record, label="  %9 = add i32 %6, 1"];
	Node0xacefa0[shape=record, label="  %10 = add i32 %9, %8"];
	Node0xacf010[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0xacf080[shape=record, label="  %12 = and i32 %6, %11"];
	Node0xacf0f0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0xacf160[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0xacf1d0[shape=record, label="  %15 = or i32 %6, %11"];
	Node0xacf240[shape=record, label="  %16 = shl i32 %7, 1"];
	Node0xacf2b0[shape=record, label="  %17 = or i32 %7, %6"];
	Node0xacf320[shape=record, label="  %18 = shl i32 %15, 1"];
	Node0xacf390[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0xacf400[shape=record, label="  %20 = mul i32 %8, 5"];
	Node0xacf470[shape=record, label="  %21 = sub i32 %11, %12"];
	Node0xacf4e0[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0xacf550[shape=record, label="  %23 = add i32 %6, 3"];
	Node0xacf5c0[shape=record, label="  %24 = add i32 %23, %12"];
	Node0xacf630[shape=record, label="  %25 = sub i32 %24, %15"];
	Node0xacf6a0[shape=record, label="  %26 = sub i32 %25, %16"];
	Node0xacf710[shape=record, label="  %27 = sub i32 %26, %13"];
	Node0xacf780[shape=record, label="  %28 = add i32 %27, %17"];
	Node0xacf7f0[shape=record, label="  %29 = add i32 %28, %14"];
	Node0xacf860[shape=record, label="  %30 = add i32 %29, %20"];
	Node0xacf8d0[shape=record, label="  %31 = add i32 %30, %19"];
	Node0xacf940[shape=record, label="  %32 = add i32 %31, %22"];
	Node0xacfbc0[shape=record, label="  %33 = icmp eq i32 %10, %32"];
	Node0xa6d9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xacfc50[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xacfea8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xad0008[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xad00c8[shape=record, label="  ret i32 0"];
	Node0xacce68 -> Node0xaccee8;
	Node0xaccee8 -> Node0xaccf78;
	Node0xaccf78 -> Node0xacd3d8;
	Node0xacd3d8 -> Node0xacd4b8;
	Node0xacd4b8 -> Node0xacd5d8;
	Node0xacd5d8 -> Node0xacd810;
	Node0xacd810 -> Node0xacd8c8;
	Node0xacd8c8 -> Node0xace838;
	Node0xace838 -> Node0xaceec0;
	Node0xaceec0 -> Node0xacef30;
	Node0xacef30 -> Node0xacefa0;
	Node0xacefa0 -> Node0xacf010;
	Node0xacf010 -> Node0xacf080;
	Node0xacf080 -> Node0xacf0f0;
	Node0xacf0f0 -> Node0xacf160;
	Node0xacf160 -> Node0xacf1d0;
	Node0xacf1d0 -> Node0xacf240;
	Node0xacf240 -> Node0xacf2b0;
	Node0xacf2b0 -> Node0xacf320;
	Node0xacf320 -> Node0xacf390;
	Node0xacf390 -> Node0xacf400;
	Node0xacf400 -> Node0xacf470;
	Node0xacf470 -> Node0xacf4e0;
	Node0xacf4e0 -> Node0xacf550;
	Node0xacf550 -> Node0xacf5c0;
	Node0xacf5c0 -> Node0xacf630;
	Node0xacf630 -> Node0xacf6a0;
	Node0xacf6a0 -> Node0xacf710;
	Node0xacf710 -> Node0xacf780;
	Node0xacf780 -> Node0xacf7f0;
	Node0xacf7f0 -> Node0xacf860;
	Node0xacf860 -> Node0xacf8d0;
	Node0xacf8d0 -> Node0xacf940;
	Node0xacf940 -> Node0xacfbc0;
	Node0xacfbc0 -> Node0xa6d9d8;
	Node0xa6d9d8 -> Node0xacfc50;
	Node0xacfc50 -> Node0xacfea8;
	Node0xacfea8 -> Node0xad0008;
	Node0xad0008 -> Node0xad00c8;
edge [color=red]
	Node0xacce68 -> Node0xaccf78;
	Node0xaccf78 -> Node0xacd3d8;
	Node0xaccee8 -> Node0xacd4b8;
	Node0xacd4b8 -> Node0xacd5d8;
	Node0xacce68 -> Node0xacd810;
	Node0xaccee8 -> Node0xacd810;
	Node0xacce68 -> Node0xacd8c8;
	Node0xaccee8 -> Node0xace838;
	Node0xace838 -> Node0xaceec0;
	Node0xacd8c8 -> Node0xaceec0;
	Node0xacd8c8 -> Node0xacef30;
	Node0xacef30 -> Node0xacefa0;
	Node0xaceec0 -> Node0xacefa0;
	Node0xace838 -> Node0xacf010;
	Node0xacd8c8 -> Node0xacf080;
	Node0xacf010 -> Node0xacf080;
	Node0xace838 -> Node0xacf0f0;
	Node0xacd8c8 -> Node0xacf0f0;
	Node0xacf0f0 -> Node0xacf160;
	Node0xacd8c8 -> Node0xacf1d0;
	Node0xacf010 -> Node0xacf1d0;
	Node0xace838 -> Node0xacf240;
	Node0xace838 -> Node0xacf2b0;
	Node0xacd8c8 -> Node0xacf2b0;
	Node0xacf1d0 -> Node0xacf320;
	Node0xacf320 -> Node0xacf390;
	Node0xaceec0 -> Node0xacf400;
	Node0xacf010 -> Node0xacf470;
	Node0xacf080 -> Node0xacf470;
	Node0xacf470 -> Node0xacf4e0;
	Node0xacd8c8 -> Node0xacf550;
	Node0xacf550 -> Node0xacf5c0;
	Node0xacf080 -> Node0xacf5c0;
	Node0xacf5c0 -> Node0xacf630;
	Node0xacf1d0 -> Node0xacf630;
	Node0xacf630 -> Node0xacf6a0;
	Node0xacf240 -> Node0xacf6a0;
	Node0xacf6a0 -> Node0xacf710;
	Node0xacf0f0 -> Node0xacf710;
	Node0xacf710 -> Node0xacf780;
	Node0xacf2b0 -> Node0xacf780;
	Node0xacf780 -> Node0xacf7f0;
	Node0xacf160 -> Node0xacf7f0;
	Node0xacf7f0 -> Node0xacf860;
	Node0xacf400 -> Node0xacf860;
	Node0xacf860 -> Node0xacf8d0;
	Node0xacf390 -> Node0xacf8d0;
	Node0xacf8d0 -> Node0xacf940;
	Node0xacf4e0 -> Node0xacf940;
	Node0xacefa0 -> Node0xacfbc0;
	Node0xacf940 -> Node0xacfbc0;
	Node0xacfbc0 -> Node0xa6d9d8;
	Node0xa6d9d8 -> Node0xacfc50;
	Node0xacd4b8 -> Node0xacfea8;
	Node0xaccf78 -> Node0xad0008;
}
