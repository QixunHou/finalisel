digraph "DFG for'crackme' function" {
	Node0x1f5c740[shape=record, label="  %5 = and i32 %3, %0"];
	Node0x1f5cdc0[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x1f5ce60[shape=record, label="  %7 = xor i32 %6, -2"];
	Node0x1f5ced0[shape=record, label="  %8 = xor i32 %3, %0"];
	Node0x1f5cf40[shape=record, label="  %9 = add i32 %8, 1"];
	Node0x1f5cfb0[shape=record, label="  %10 = sub i32 %9, %7"];
	Node0x1f5d020[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x1f5d0c0[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x1f5d130[shape=record, label="  %13 = and i32 %12, %1"];
	Node0x1f5d1a0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1f5d240[shape=record, label="  %15 = mul i32 %14, 5"];
	Node0x1f5d2b0[shape=record, label="  %16 = xor i32 %2, %1"];
	Node0x1f5d320[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1f5d390[shape=record, label="  %18 = or i32 %12, %1"];
	Node0x1f5d430[shape=record, label="  %19 = shl i32 %11, 3"];
	Node0x1f5d4d0[shape=record, label="  %20 = xor i32 %19, -8"];
	Node0x1f5d540[shape=record, label="  %21 = xor i32 %18, -1"];
	Node0x1f5d5e0[shape=record, label="  %22 = mul i32 %21, -6"];
	Node0x1f5d680[shape=record, label="  %23 = shl i32 %13, 2"];
	Node0x1f5d6f0[shape=record, label="  %24 = and i32 %2, %1"];
	Node0x1f5d790[shape=record, label="  %25 = mul i32 %24, -11"];
	Node0x1f5d800[shape=record, label="  %26 = xor i32 %0, -1"];
	Node0x1f5d870[shape=record, label="  %27 = or i32 %26, %3"];
	Node0x1f5d910[shape=record, label="  %28 = mul i32 %0, -3"];
	Node0x1f5d980[shape=record, label="  %29 = or i32 %3, %0"];
	Node0x1f5d9f0[shape=record, label="  %30 = shl i32 %27, 2"];
	Node0x1f5da90[shape=record, label="  %31 = xor i32 %30, -4"];
	Node0x1f5db00[shape=record, label="  %32 = shl i32 %1, 1"];
	Node0x1f5dd80[shape=record, label="  %33 = add i32 %0, 3"];
	Node0x1f5ddf0[shape=record, label="  %34 = add i32 %33, %28"];
	Node0x1f5de60[shape=record, label="  %35 = add i32 %34, %32"];
	Node0x1f5ded0[shape=record, label="  %36 = add i32 %35, %11"];
	Node0x1f5df40[shape=record, label="  %37 = add i32 %36, %17"];
	Node0x1f5dfb0[shape=record, label="  %38 = add i32 %37, %18"];
	Node0x1f5e020[shape=record, label="  %39 = sub i32 %38, %16"];
	Node0x1f5e090[shape=record, label="  %40 = add i32 %39, %3"];
	Node0x1f5e100[shape=record, label="  %41 = add i32 %40, %15"];
	Node0x1f5e170[shape=record, label="  %42 = add i32 %41, %22"];
	Node0x1f5e1e0[shape=record, label="  %43 = sub i32 %42, %23"];
	Node0x1f5e250[shape=record, label="  %44 = add i32 %43, %25"];
	Node0x1f5e2c0[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x1f5e330[shape=record, label="  %46 = sub i32 %45, %8"];
	Node0x1f5e3a0[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x1f5e410[shape=record, label="  %48 = sub i32 %47, %20"];
	Node0x1f5e480[shape=record, label="  %49 = add i32 %48, %6"];
	Node0x1f5e4f0[shape=record, label="  %50 = add i32 %49, %31"];
	Node0x1f5e560[shape=record, label="  %51 = icmp eq i32 %10, %50"];
	Node0x1efd268[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1f5ea00[shape=record, label="  %53 = tail call i32 @puts(i8* nonnull dereferenceable(1) %52)"];
	Node0x1f5ea50[shape=record, label="  ret void"];
	Node0x1f5c740 -> Node0x1f5cdc0;
	Node0x1f5cdc0 -> Node0x1f5ce60;
	Node0x1f5ce60 -> Node0x1f5ced0;
	Node0x1f5ced0 -> Node0x1f5cf40;
	Node0x1f5cf40 -> Node0x1f5cfb0;
	Node0x1f5cfb0 -> Node0x1f5d020;
	Node0x1f5d020 -> Node0x1f5d0c0;
	Node0x1f5d0c0 -> Node0x1f5d130;
	Node0x1f5d130 -> Node0x1f5d1a0;
	Node0x1f5d1a0 -> Node0x1f5d240;
	Node0x1f5d240 -> Node0x1f5d2b0;
	Node0x1f5d2b0 -> Node0x1f5d320;
	Node0x1f5d320 -> Node0x1f5d390;
	Node0x1f5d390 -> Node0x1f5d430;
	Node0x1f5d430 -> Node0x1f5d4d0;
	Node0x1f5d4d0 -> Node0x1f5d540;
	Node0x1f5d540 -> Node0x1f5d5e0;
	Node0x1f5d5e0 -> Node0x1f5d680;
	Node0x1f5d680 -> Node0x1f5d6f0;
	Node0x1f5d6f0 -> Node0x1f5d790;
	Node0x1f5d790 -> Node0x1f5d800;
	Node0x1f5d800 -> Node0x1f5d870;
	Node0x1f5d870 -> Node0x1f5d910;
	Node0x1f5d910 -> Node0x1f5d980;
	Node0x1f5d980 -> Node0x1f5d9f0;
	Node0x1f5d9f0 -> Node0x1f5da90;
	Node0x1f5da90 -> Node0x1f5db00;
	Node0x1f5db00 -> Node0x1f5dd80;
	Node0x1f5dd80 -> Node0x1f5ddf0;
	Node0x1f5ddf0 -> Node0x1f5de60;
	Node0x1f5de60 -> Node0x1f5ded0;
	Node0x1f5ded0 -> Node0x1f5df40;
	Node0x1f5df40 -> Node0x1f5dfb0;
	Node0x1f5dfb0 -> Node0x1f5e020;
	Node0x1f5e020 -> Node0x1f5e090;
	Node0x1f5e090 -> Node0x1f5e100;
	Node0x1f5e100 -> Node0x1f5e170;
	Node0x1f5e170 -> Node0x1f5e1e0;
	Node0x1f5e1e0 -> Node0x1f5e250;
	Node0x1f5e250 -> Node0x1f5e2c0;
	Node0x1f5e2c0 -> Node0x1f5e330;
	Node0x1f5e330 -> Node0x1f5e3a0;
	Node0x1f5e3a0 -> Node0x1f5e410;
	Node0x1f5e410 -> Node0x1f5e480;
	Node0x1f5e480 -> Node0x1f5e4f0;
	Node0x1f5e4f0 -> Node0x1f5e560;
	Node0x1f5e560 -> Node0x1efd268;
	Node0x1efd268 -> Node0x1f5ea00;
	Node0x1f5ea00 -> Node0x1f5ea50;
edge [color=red]
	Node0x1f5c740 -> Node0x1f5cdc0;
	Node0x1f5cdc0 -> Node0x1f5ce60;
	Node0x1f5ced0 -> Node0x1f5cf40;
	Node0x1f5cf40 -> Node0x1f5cfb0;
	Node0x1f5ce60 -> Node0x1f5cfb0;
	Node0x1f5d0c0 -> Node0x1f5d130;
	Node0x1f5d130 -> Node0x1f5d1a0;
	Node0x1f5d1a0 -> Node0x1f5d240;
	Node0x1f5d2b0 -> Node0x1f5d320;
	Node0x1f5d0c0 -> Node0x1f5d390;
	Node0x1f5d020 -> Node0x1f5d430;
	Node0x1f5d430 -> Node0x1f5d4d0;
	Node0x1f5d390 -> Node0x1f5d540;
	Node0x1f5d540 -> Node0x1f5d5e0;
	Node0x1f5d130 -> Node0x1f5d680;
	Node0x1f5d6f0 -> Node0x1f5d790;
	Node0x1f5d800 -> Node0x1f5d870;
	Node0x1f5d870 -> Node0x1f5d9f0;
	Node0x1f5d9f0 -> Node0x1f5da90;
	Node0x1f5dd80 -> Node0x1f5ddf0;
	Node0x1f5d910 -> Node0x1f5ddf0;
	Node0x1f5ddf0 -> Node0x1f5de60;
	Node0x1f5db00 -> Node0x1f5de60;
	Node0x1f5de60 -> Node0x1f5ded0;
	Node0x1f5d020 -> Node0x1f5ded0;
	Node0x1f5ded0 -> Node0x1f5df40;
	Node0x1f5d320 -> Node0x1f5df40;
	Node0x1f5df40 -> Node0x1f5dfb0;
	Node0x1f5d390 -> Node0x1f5dfb0;
	Node0x1f5dfb0 -> Node0x1f5e020;
	Node0x1f5d2b0 -> Node0x1f5e020;
	Node0x1f5e020 -> Node0x1f5e090;
	Node0x1f5e090 -> Node0x1f5e100;
	Node0x1f5d240 -> Node0x1f5e100;
	Node0x1f5e100 -> Node0x1f5e170;
	Node0x1f5d5e0 -> Node0x1f5e170;
	Node0x1f5e170 -> Node0x1f5e1e0;
	Node0x1f5d680 -> Node0x1f5e1e0;
	Node0x1f5e1e0 -> Node0x1f5e250;
	Node0x1f5d790 -> Node0x1f5e250;
	Node0x1f5e250 -> Node0x1f5e2c0;
	Node0x1f5d870 -> Node0x1f5e2c0;
	Node0x1f5e2c0 -> Node0x1f5e330;
	Node0x1f5ced0 -> Node0x1f5e330;
	Node0x1f5e330 -> Node0x1f5e3a0;
	Node0x1f5d980 -> Node0x1f5e3a0;
	Node0x1f5e3a0 -> Node0x1f5e410;
	Node0x1f5d4d0 -> Node0x1f5e410;
	Node0x1f5e410 -> Node0x1f5e480;
	Node0x1f5cdc0 -> Node0x1f5e480;
	Node0x1f5e480 -> Node0x1f5e4f0;
	Node0x1f5da90 -> Node0x1f5e4f0;
	Node0x1f5cfb0 -> Node0x1f5e560;
	Node0x1f5e4f0 -> Node0x1f5e560;
	Node0x1f5e560 -> Node0x1efd268;
	Node0x1efd268 -> Node0x1f5ea00;
}
