digraph "DFG for'crackme' function" {
	Node0x1df0a30[shape=record, label="  %3 = add i32 %0, 1"];
	Node0x1df0aa0[shape=record, label="  %4 = shl i32 %1, 1"];
	Node0x1df0b60[shape=record, label="  %5 = add i32 %4, %3"];
	Node0x1df0bd0[shape=record, label="  %6 = and i32 %1, %0"];
	Node0x1df0c40[shape=record, label="  %7 = xor i32 %1, -1"];
	Node0x1df0cb0[shape=record, label="  %8 = and i32 %7, %0"];
	Node0x1df0d20[shape=record, label="  %9 = or i32 %1, %0"];
	Node0x1df0d90[shape=record, label="  %10 = xor i32 %0, -1"];
	Node0x1df0e00[shape=record, label="  %11 = and i32 %10, %1"];
	Node0x1df0ea0[shape=record, label="  %12 = mul i32 %11, 3"];
	Node0x1df0f10[shape=record, label="  %13 = shl i32 %0, 1"];
	Node0x1df0f80[shape=record, label="  %14 = add i32 %6, %3"];
	Node0x1df0ff0[shape=record, label="  %15 = sub i32 %14, %8"];
	Node0x1df1060[shape=record, label="  %16 = sub i32 %15, %9"];
	Node0x1df10d0[shape=record, label="  %17 = add i32 %16, %12"];
	Node0x1df1140[shape=record, label="  %18 = add i32 %17, %13"];
	Node0x1df11b0[shape=record, label="  %19 = icmp eq i32 %5, %18"];
	Node0x1d91268[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1df1650[shape=record, label="  %21 = tail call i32 @puts(i8* nonnull dereferenceable(1) %20)"];
	Node0x1df16a0[shape=record, label="  ret void"];
	Node0x1df0a30 -> Node0x1df0aa0;
	Node0x1df0aa0 -> Node0x1df0b60;
	Node0x1df0b60 -> Node0x1df0bd0;
	Node0x1df0bd0 -> Node0x1df0c40;
	Node0x1df0c40 -> Node0x1df0cb0;
	Node0x1df0cb0 -> Node0x1df0d20;
	Node0x1df0d20 -> Node0x1df0d90;
	Node0x1df0d90 -> Node0x1df0e00;
	Node0x1df0e00 -> Node0x1df0ea0;
	Node0x1df0ea0 -> Node0x1df0f10;
	Node0x1df0f10 -> Node0x1df0f80;
	Node0x1df0f80 -> Node0x1df0ff0;
	Node0x1df0ff0 -> Node0x1df1060;
	Node0x1df1060 -> Node0x1df10d0;
	Node0x1df10d0 -> Node0x1df1140;
	Node0x1df1140 -> Node0x1df11b0;
	Node0x1df11b0 -> Node0x1d91268;
	Node0x1d91268 -> Node0x1df1650;
	Node0x1df1650 -> Node0x1df16a0;
edge [color=red]
	Node0x1df0aa0 -> Node0x1df0b60;
	Node0x1df0a30 -> Node0x1df0b60;
	Node0x1df0c40 -> Node0x1df0cb0;
	Node0x1df0d90 -> Node0x1df0e00;
	Node0x1df0e00 -> Node0x1df0ea0;
	Node0x1df0bd0 -> Node0x1df0f80;
	Node0x1df0a30 -> Node0x1df0f80;
	Node0x1df0f80 -> Node0x1df0ff0;
	Node0x1df0cb0 -> Node0x1df0ff0;
	Node0x1df0ff0 -> Node0x1df1060;
	Node0x1df0d20 -> Node0x1df1060;
	Node0x1df1060 -> Node0x1df10d0;
	Node0x1df0ea0 -> Node0x1df10d0;
	Node0x1df10d0 -> Node0x1df1140;
	Node0x1df0f10 -> Node0x1df1140;
	Node0x1df0b60 -> Node0x1df11b0;
	Node0x1df1140 -> Node0x1df11b0;
	Node0x1df11b0 -> Node0x1d91268;
	Node0x1d91268 -> Node0x1df1650;
}
