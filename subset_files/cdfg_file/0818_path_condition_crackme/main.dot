digraph "DFG for'main' function" {
	Node0x16726f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1672778[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1672808[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1672868[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1672918[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1672d48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1672e28[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1672f28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1672fe8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1673098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1673158[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1673208[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x166d9d0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1673408[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1674378[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x16749e8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1674a48[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1674ac0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x1674b30[shape=record, label="  %15 = sub i32 %12, %14"];
	Node0x1674ba0[shape=record, label="  %16 = xor i32 %13, -1"];
	Node0x1674c10[shape=record, label="  %17 = add i32 %15, %16"];
	Node0x1674c80[shape=record, label="  %18 = xor i32 %14, -1"];
	Node0x1674cf0[shape=record, label="  %19 = and i32 %13, %10"];
	Node0x1674d60[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x1674dd0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x1674e40[shape=record, label="  %22 = xor i32 %13, %10"];
	Node0x1674eb0[shape=record, label="  %23 = xor i32 %10, -1"];
	Node0x1674f20[shape=record, label="  %24 = and i32 %13, %23"];
	Node0x1674f90[shape=record, label="  %25 = or i32 %13, %10"];
	Node0x1675000[shape=record, label="  %26 = xor i32 %22, -1"];
	Node0x1675070[shape=record, label="  %27 = shl i32 %25, 1"];
	Node0x16750e0[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x1675150[shape=record, label="  %29 = xor i32 %13, 1073741823"];
	Node0x16751c0[shape=record, label="  %30 = and i32 %29, %10"];
	Node0x1675230[shape=record, label="  %31 = shl i32 %30, 2"];
	Node0x16752a0[shape=record, label="  %32 = mul i32 %24, 3"];
	Node0x1675310[shape=record, label="  %33 = sub i32 1, %10"];
	Node0x1675380[shape=record, label="  %34 = add i32 %33, %12"];
	Node0x16753f0[shape=record, label="  %35 = add i32 %34, %18"];
	Node0x1675460[shape=record, label="  %36 = sub i32 %35, %22"];
	Node0x16754d0[shape=record, label="  %37 = sub i32 %36, %24"];
	Node0x1675540[shape=record, label="  %38 = add i32 %37, %25"];
	Node0x16755b0[shape=record, label="  %39 = add i32 %38, %26"];
	Node0x1675620[shape=record, label="  %40 = sub i32 %39, %19"];
	Node0x1675690[shape=record, label="  %41 = add i32 %40, %32"];
	Node0x1675700[shape=record, label="  %42 = sub i32 %41, %21"];
	Node0x1675770[shape=record, label="  %43 = add i32 %42, %28"];
	Node0x16757e0[shape=record, label="  %44 = add i32 %43, %31"];
	Node0x1675850[shape=record, label="  %45 = icmp eq i32 %17, %44"];
	Node0x16128b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x16758e0[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0x1675b88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1675ce8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1675df8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1675f08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1675fc8[shape=record, label="  ret i32 0"];
	Node0x16726f8 -> Node0x1672778;
	Node0x1672778 -> Node0x1672808;
	Node0x1672808 -> Node0x1672868;
	Node0x1672868 -> Node0x1672918;
	Node0x1672918 -> Node0x1672d48;
	Node0x1672d48 -> Node0x1672e28;
	Node0x1672e28 -> Node0x1672f28;
	Node0x1672f28 -> Node0x1672fe8;
	Node0x1672fe8 -> Node0x1673098;
	Node0x1673098 -> Node0x1673158;
	Node0x1673158 -> Node0x1673208;
	Node0x1673208 -> Node0x166d9d0;
	Node0x166d9d0 -> Node0x1673408;
	Node0x1673408 -> Node0x1674378;
	Node0x1674378 -> Node0x16749e8;
	Node0x16749e8 -> Node0x1674a48;
	Node0x1674a48 -> Node0x1674ac0;
	Node0x1674ac0 -> Node0x1674b30;
	Node0x1674b30 -> Node0x1674ba0;
	Node0x1674ba0 -> Node0x1674c10;
	Node0x1674c10 -> Node0x1674c80;
	Node0x1674c80 -> Node0x1674cf0;
	Node0x1674cf0 -> Node0x1674d60;
	Node0x1674d60 -> Node0x1674dd0;
	Node0x1674dd0 -> Node0x1674e40;
	Node0x1674e40 -> Node0x1674eb0;
	Node0x1674eb0 -> Node0x1674f20;
	Node0x1674f20 -> Node0x1674f90;
	Node0x1674f90 -> Node0x1675000;
	Node0x1675000 -> Node0x1675070;
	Node0x1675070 -> Node0x16750e0;
	Node0x16750e0 -> Node0x1675150;
	Node0x1675150 -> Node0x16751c0;
	Node0x16751c0 -> Node0x1675230;
	Node0x1675230 -> Node0x16752a0;
	Node0x16752a0 -> Node0x1675310;
	Node0x1675310 -> Node0x1675380;
	Node0x1675380 -> Node0x16753f0;
	Node0x16753f0 -> Node0x1675460;
	Node0x1675460 -> Node0x16754d0;
	Node0x16754d0 -> Node0x1675540;
	Node0x1675540 -> Node0x16755b0;
	Node0x16755b0 -> Node0x1675620;
	Node0x1675620 -> Node0x1675690;
	Node0x1675690 -> Node0x1675700;
	Node0x1675700 -> Node0x1675770;
	Node0x1675770 -> Node0x16757e0;
	Node0x16757e0 -> Node0x1675850;
	Node0x1675850 -> Node0x16128b8;
	Node0x16128b8 -> Node0x16758e0;
	Node0x16758e0 -> Node0x1675b88;
	Node0x1675b88 -> Node0x1675ce8;
	Node0x1675ce8 -> Node0x1675df8;
	Node0x1675df8 -> Node0x1675f08;
	Node0x1675f08 -> Node0x1675fc8;
edge [color=red]
	Node0x16726f8 -> Node0x1672918;
	Node0x1672918 -> Node0x1672d48;
	Node0x1672778 -> Node0x1672e28;
	Node0x1672e28 -> Node0x1672f28;
	Node0x1672808 -> Node0x1672fe8;
	Node0x1672fe8 -> Node0x1673098;
	Node0x1672868 -> Node0x1673158;
	Node0x1673158 -> Node0x1673208;
	Node0x16726f8 -> Node0x166d9d0;
	Node0x1672778 -> Node0x166d9d0;
	Node0x1672808 -> Node0x166d9d0;
	Node0x1672868 -> Node0x166d9d0;
	Node0x16726f8 -> Node0x1673408;
	Node0x1672778 -> Node0x1674378;
	Node0x1672808 -> Node0x16749e8;
	Node0x1672868 -> Node0x1674a48;
	Node0x16749e8 -> Node0x1674ac0;
	Node0x1674378 -> Node0x1674ac0;
	Node0x16749e8 -> Node0x1674b30;
	Node0x1674ac0 -> Node0x1674b30;
	Node0x1674a48 -> Node0x1674ba0;
	Node0x1674b30 -> Node0x1674c10;
	Node0x1674ba0 -> Node0x1674c10;
	Node0x1674ac0 -> Node0x1674c80;
	Node0x1674a48 -> Node0x1674cf0;
	Node0x1673408 -> Node0x1674cf0;
	Node0x1674cf0 -> Node0x1674d60;
	Node0x1674d60 -> Node0x1674dd0;
	Node0x1674a48 -> Node0x1674e40;
	Node0x1673408 -> Node0x1674e40;
	Node0x1673408 -> Node0x1674eb0;
	Node0x1674a48 -> Node0x1674f20;
	Node0x1674eb0 -> Node0x1674f20;
	Node0x1674a48 -> Node0x1674f90;
	Node0x1673408 -> Node0x1674f90;
	Node0x1674e40 -> Node0x1675000;
	Node0x1674f90 -> Node0x1675070;
	Node0x1675070 -> Node0x16750e0;
	Node0x1674a48 -> Node0x1675150;
	Node0x1675150 -> Node0x16751c0;
	Node0x1673408 -> Node0x16751c0;
	Node0x16751c0 -> Node0x1675230;
	Node0x1674f20 -> Node0x16752a0;
	Node0x1673408 -> Node0x1675310;
	Node0x1675310 -> Node0x1675380;
	Node0x16749e8 -> Node0x1675380;
	Node0x1675380 -> Node0x16753f0;
	Node0x1674c80 -> Node0x16753f0;
	Node0x16753f0 -> Node0x1675460;
	Node0x1674e40 -> Node0x1675460;
	Node0x1675460 -> Node0x16754d0;
	Node0x1674f20 -> Node0x16754d0;
	Node0x16754d0 -> Node0x1675540;
	Node0x1674f90 -> Node0x1675540;
	Node0x1675540 -> Node0x16755b0;
	Node0x1675000 -> Node0x16755b0;
	Node0x16755b0 -> Node0x1675620;
	Node0x1674cf0 -> Node0x1675620;
	Node0x1675620 -> Node0x1675690;
	Node0x16752a0 -> Node0x1675690;
	Node0x1675690 -> Node0x1675700;
	Node0x1674dd0 -> Node0x1675700;
	Node0x1675700 -> Node0x1675770;
	Node0x16750e0 -> Node0x1675770;
	Node0x1675770 -> Node0x16757e0;
	Node0x1675230 -> Node0x16757e0;
	Node0x1674c10 -> Node0x1675850;
	Node0x16757e0 -> Node0x1675850;
	Node0x1675850 -> Node0x16128b8;
	Node0x16128b8 -> Node0x16758e0;
	Node0x1673158 -> Node0x1675b88;
	Node0x1672fe8 -> Node0x1675ce8;
	Node0x1672e28 -> Node0x1675df8;
	Node0x1672918 -> Node0x1675f08;
}
