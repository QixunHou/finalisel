digraph "DFG for'main' function" {
	Node0x103edc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x103ee48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x103eed8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x103f338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x103f418[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x103f538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x103f770[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x103f828[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1040798[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1040e20[shape=record, label="  %8 = shl i32 %6, 1"];
	Node0x1040e90[shape=record, label="  %9 = add i32 %8, %7"];
	Node0x1040f00[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x1040f70[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x1040fe0[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x1041050[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x10410c0[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1041130[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x10411a0[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x1041210[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x1041280[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x10412f0[shape=record, label="  %19 = xor i32 %11, -1"];
	Node0x1041360[shape=record, label="  %20 = mul i32 %19, 3"];
	Node0x10413d0[shape=record, label="  %21 = and i32 %6, %10"];
	Node0x1041440[shape=record, label="  %22 = add i32 %6, 2"];
	Node0x10414b0[shape=record, label="  %23 = add i32 %22, %10"];
	Node0x1041520[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x1041590[shape=record, label="  %25 = add i32 %24, %15"];
	Node0x1041600[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x1041670[shape=record, label="  %27 = add i32 %26, %21"];
	Node0x10416e0[shape=record, label="  %28 = add i32 %27, %20"];
	Node0x1041750[shape=record, label="  %29 = add i32 %28, %13"];
	Node0x10417c0[shape=record, label="  %30 = sub i32 %29, %14"];
	Node0x1041830[shape=record, label="  %31 = add i32 %30, %18"];
	Node0x10418a0[shape=record, label="  %32 = icmp eq i32 %9, %31"];
	Node0xfdf9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1041b40[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x1041d98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1041ef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1041fb8[shape=record, label="  ret i32 0"];
	Node0x103edc8 -> Node0x103ee48;
	Node0x103ee48 -> Node0x103eed8;
	Node0x103eed8 -> Node0x103f338;
	Node0x103f338 -> Node0x103f418;
	Node0x103f418 -> Node0x103f538;
	Node0x103f538 -> Node0x103f770;
	Node0x103f770 -> Node0x103f828;
	Node0x103f828 -> Node0x1040798;
	Node0x1040798 -> Node0x1040e20;
	Node0x1040e20 -> Node0x1040e90;
	Node0x1040e90 -> Node0x1040f00;
	Node0x1040f00 -> Node0x1040f70;
	Node0x1040f70 -> Node0x1040fe0;
	Node0x1040fe0 -> Node0x1041050;
	Node0x1041050 -> Node0x10410c0;
	Node0x10410c0 -> Node0x1041130;
	Node0x1041130 -> Node0x10411a0;
	Node0x10411a0 -> Node0x1041210;
	Node0x1041210 -> Node0x1041280;
	Node0x1041280 -> Node0x10412f0;
	Node0x10412f0 -> Node0x1041360;
	Node0x1041360 -> Node0x10413d0;
	Node0x10413d0 -> Node0x1041440;
	Node0x1041440 -> Node0x10414b0;
	Node0x10414b0 -> Node0x1041520;
	Node0x1041520 -> Node0x1041590;
	Node0x1041590 -> Node0x1041600;
	Node0x1041600 -> Node0x1041670;
	Node0x1041670 -> Node0x10416e0;
	Node0x10416e0 -> Node0x1041750;
	Node0x1041750 -> Node0x10417c0;
	Node0x10417c0 -> Node0x1041830;
	Node0x1041830 -> Node0x10418a0;
	Node0x10418a0 -> Node0xfdf9d8;
	Node0xfdf9d8 -> Node0x1041b40;
	Node0x1041b40 -> Node0x1041d98;
	Node0x1041d98 -> Node0x1041ef8;
	Node0x1041ef8 -> Node0x1041fb8;
edge [color=red]
	Node0x103edc8 -> Node0x103eed8;
	Node0x103eed8 -> Node0x103f338;
	Node0x103ee48 -> Node0x103f418;
	Node0x103f418 -> Node0x103f538;
	Node0x103edc8 -> Node0x103f770;
	Node0x103ee48 -> Node0x103f770;
	Node0x103edc8 -> Node0x103f828;
	Node0x103ee48 -> Node0x1040798;
	Node0x103f828 -> Node0x1040e20;
	Node0x1040e20 -> Node0x1040e90;
	Node0x1040798 -> Node0x1040e90;
	Node0x1040798 -> Node0x1040f00;
	Node0x103f828 -> Node0x1040f70;
	Node0x1040f00 -> Node0x1040f70;
	Node0x1040798 -> Node0x1040fe0;
	Node0x103f828 -> Node0x1040fe0;
	Node0x1040fe0 -> Node0x1041050;
	Node0x1041050 -> Node0x10410c0;
	Node0x1040798 -> Node0x1041130;
	Node0x103f828 -> Node0x1041130;
	Node0x1040798 -> Node0x10411a0;
	Node0x103f828 -> Node0x10411a0;
	Node0x10411a0 -> Node0x1041210;
	Node0x1041210 -> Node0x1041280;
	Node0x1040f70 -> Node0x10412f0;
	Node0x10412f0 -> Node0x1041360;
	Node0x103f828 -> Node0x10413d0;
	Node0x1040f00 -> Node0x10413d0;
	Node0x103f828 -> Node0x1041440;
	Node0x1041440 -> Node0x10414b0;
	Node0x1040f00 -> Node0x10414b0;
	Node0x10414b0 -> Node0x1041520;
	Node0x1040f70 -> Node0x1041520;
	Node0x1041520 -> Node0x1041590;
	Node0x1041130 -> Node0x1041590;
	Node0x1041590 -> Node0x1041600;
	Node0x10411a0 -> Node0x1041600;
	Node0x1041600 -> Node0x1041670;
	Node0x10413d0 -> Node0x1041670;
	Node0x1041670 -> Node0x10416e0;
	Node0x1041360 -> Node0x10416e0;
	Node0x10416e0 -> Node0x1041750;
	Node0x1041050 -> Node0x1041750;
	Node0x1041750 -> Node0x10417c0;
	Node0x10410c0 -> Node0x10417c0;
	Node0x10417c0 -> Node0x1041830;
	Node0x1041280 -> Node0x1041830;
	Node0x1040e90 -> Node0x10418a0;
	Node0x1041830 -> Node0x10418a0;
	Node0x10418a0 -> Node0xfdf9d8;
	Node0xfdf9d8 -> Node0x1041b40;
	Node0x103f418 -> Node0x1041d98;
	Node0x103eed8 -> Node0x1041ef8;
}
