; ModuleID = '../.././c_source_file/1045_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1045_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %0, -1
  %5 = xor i32 %2, -1
  %6 = or i32 %5, %1
  %7 = or i32 %6, %4
  %8 = add i32 %0, 1
  %9 = sub i32 %8, %7
  %10 = xor i32 %1, %0
  %11 = xor i32 %2, %0
  %12 = xor i32 %11, -1
  %13 = or i32 %10, %12
  %14 = or i32 %1, %0
  %15 = and i32 %14, %12
  %16 = shl i32 %15, 1
  %17 = and i32 %11, %10
  %18 = xor i32 %1, -1
  %19 = or i32 %5, %0
  %20 = and i32 %19, %18
  %21 = and i32 %2, %1
  %22 = and i32 %21, %0
  %23 = or i32 %2, %1
  %24 = and i32 %23, %4
  %25 = xor i32 %22, -1
  %26 = xor i32 %24, %25
  %27 = and i32 %18, %0
  %28 = xor i32 %27, -1
  %29 = xor i32 %2, %1
  %30 = and i32 %29, %28
  %31 = and i32 %2, %0
  %32 = xor i32 %31, %14
  %33 = or i32 %18, %0
  %34 = xor i32 %33, -1
  %35 = or i32 %29, %34
  %36 = and i32 %18, %2
  %37 = and i32 %36, %0
  %38 = or i32 %29, %0
  %39 = xor i32 %38, -1
  %40 = or i32 %37, %39
  %41 = shl i32 %27, 1
  %42 = xor i32 %14, %2
  %43 = xor i32 %31, -1
  %44 = add i32 %31, 1
  %45 = and i32 %6, %4
  %46 = and i32 %36, %4
  %47 = or i32 %18, %2
  %48 = and i32 %47, %0
  %49 = xor i32 %48, 2147483647
  %50 = xor i32 %49, %46
  %51 = shl i32 %50, 1
  %52 = xor i32 %19, -1
  %53 = or i32 %52, %18
  %54 = shl i32 %53, 1
  %55 = or i32 %2, %0
  %56 = xor i32 %55, -1
  %57 = or i32 %56, %18
  %58 = xor i32 %14, -1
  %59 = or i32 %5, %58
  %60 = and i32 %43, %1
  %61 = add i32 %55, 1
  %62 = and i32 %5, %28
  %63 = and i32 %11, %18
  %64 = and i32 %5, %0
  %65 = xor i32 %64, %1
  %66 = xor i32 %6, -1
  %67 = or i32 %66, %4
  %68 = or i32 %27, %2
  %69 = or i32 %52, %1
  %70 = and i32 %47, %4
  %71 = xor i32 %37, -1
  %72 = xor i32 %70, %71
  %73 = and i32 %1, %0
  %74 = xor i32 %73, -1
  %75 = xor i32 %74, %2
  %76 = and i32 %12, %18
  %77 = xor i32 %66, %0
  %78 = xor i32 %6, %73
  %79 = and i32 %33, %2
  %80 = xor i32 %28, %2
  %81 = and i32 %74, %2
  %82 = or i32 %73, %52
  %83 = and i32 %29, %4
  %84 = or i32 %22, %83
  %85 = or i32 %31, %1
  %86 = xor i32 %10, -1
  %87 = and i32 %19, %86
  %88 = and i32 %21, %4
  %89 = and i32 %23, %0
  %90 = or i32 %88, %89
  %91 = or i32 %29, %4
  %92 = xor i32 %29, -1
  %93 = and i32 %14, %92
  %94 = shl i32 %93, 1
  %95 = or i32 %21, %27
  %96 = xor i32 %23, -1
  %97 = or i32 %73, %96
  %98 = and i32 %5, %1
  %99 = xor i32 %98, -1
  %100 = and i32 %99, %4
  %101 = shl i32 %100, 1
  %102 = xor i32 %64, -1
  %103 = and i32 %102, %86
  %104 = xor i32 %98, %0
  %105 = or i32 %29, %73
  %106 = shl i32 %105, 1
  %107 = or i32 %11, %86
  %108 = or i32 %5, %34
  %109 = add i32 %14, 1
  %110 = xor i32 %31, %1
  %111 = xor i32 %34, %2
  %112 = xor i32 %55, %73
  %113 = or i32 %31, %58
  %114 = xor i32 %91, -1
  %115 = or i32 %46, %114
  %116 = or i32 %27, %12
  %117 = shl i32 %116, 1
  %118 = or i32 %10, %5
  %119 = xor i32 %83, %25
  %120 = shl i32 %11, 1
  %121 = or i32 %92, %58
  %122 = or i32 %11, %58
  %123 = shl i32 %122, 1
  %124 = xor i32 %21, -1
  %125 = and i32 %124, %0
  %126 = or i32 %98, %4
  %127 = or i32 %23, %4
  %128 = shl i32 %127, 1
  %129 = xor i32 %64, %6
  %130 = shl i32 %129, 1
  %131 = or i32 %124, %4
  %132 = or i32 %31, %10
  %133 = and i32 %29, %14
  %134 = or i32 %124, %0
  %135 = xor i32 %46, %91
  %136 = xor i32 %92, %0
  %137 = or i32 %12, %86
  %138 = or i32 %12, %1
  %139 = or i32 %92, %4
  %140 = and i32 %14, %2
  %141 = and i32 %12, %74
  %142 = or i32 %96, %0
  %143 = xor i32 %102, %1
  %144 = and i32 %11, %14
  %145 = or i32 %56, %86
  %146 = xor i32 %73, %2
  %147 = shl i32 %146, 1
  %148 = or i32 %31, %96
  %149 = and i32 %99, %0
  %150 = xor i32 %31, %33
  %151 = or i32 %11, %73
  %152 = or i32 %11, %1
  %153 = or i32 %31, %86
  %154 = and i32 %10, %102
  %155 = and i32 %55, %1
  %156 = shl i32 %155, 1
  %157 = and i32 %124, %4
  %158 = or i32 %21, %4
  %159 = and i32 %14, %5
  %160 = xor i32 %27, %99
  %161 = xor i32 %58, %2
  %162 = shl i32 %161, 1
  %163 = and i32 %92, %4
  %164 = or i32 %34, %2
  %165 = or i32 %58, %2
  %166 = shl i32 %165, 2
  %167 = or i32 %11, %10
  %168 = or i32 %52, %86
  %169 = and i32 %92, %28
  %170 = or i32 %64, %18
  %171 = or i32 %11, %34
  %172 = and i32 %11, %33
  %173 = shl i32 %172, 1
  %174 = or i32 %11, %18
  %175 = and i32 %55, %18
  %176 = and i32 %12, %28
  %177 = xor i32 %96, %0
  %178 = and i32 %10, %2
  %179 = and i32 %11, %1
  %180 = or i32 %27, %5
  %181 = xor i32 %6, %0
  %182 = or i32 %73, %92
  %183 = xor i32 %47, %0
  %184 = or i32 %37, %183
  %185 = and i32 %12, %86
  %186 = and i32 %55, %86
  %187 = or i32 %31, %98
  %188 = xor i32 %183, %71
  %189 = and i32 %5, %74
  %190 = and i32 %11, %74
  %191 = and i32 %29, %74
  %192 = or i32 %23, %0
  %193 = and i32 %33, %92
  %194 = add i32 %19, 1
  %195 = and i32 %29, %0
  %196 = or i32 %88, %195
  %197 = xor i32 %64, %124
  %198 = or i32 %10, %56
  %199 = xor i32 %27, %124
  %200 = xor i32 %88, -1
  %201 = xor i32 %89, %200
  %202 = or i32 %73, %12
  %203 = or i32 %29, %27
  %204 = shl i32 %203, 1
  %205 = and i32 %92, %0
  %206 = or i32 %64, %10
  %207 = xor i32 %29, %0
  %208 = and i32 %19, %1
  %209 = xor i32 %37, %38
  %210 = or i32 %27, %92
  %211 = add i32 %21, 1
  %212 = and i32 %10, %12
  %213 = and i32 %92, %74
  %214 = or i32 %66, %0
  %215 = or i32 %73, %2
  %216 = xor i32 %52, %1
  %217 = and i32 %19, %10
  %218 = and i32 %43, %86
  %219 = or i32 %98, %0
  %220 = and i32 %10, %43
  %221 = or i32 %46, %48
  %222 = or i32 %73, %5
  %223 = shl i32 %222, 1
  %224 = or i32 %56, %1
  %225 = shl i32 %224, 2
  %226 = or i32 %37, %207
  %227 = xor i32 %207, -1
  %228 = xor i32 %37, %227
  %229 = or i32 %86, %2
  %230 = shl i32 %229, 1
  %231 = or i32 %12, %58
  %232 = or i32 %21, %0
  %233 = and i32 %10, %5
  %234 = xor i32 %19, %1
  %235 = or i32 %10, %52
  %236 = or i32 %11, %27
  %237 = or i32 %10, %2
  %238 = xor i32 %31, %99
  %239 = and i32 %55, %10
  %240 = and i32 %43, %18
  %241 = or i32 %29, %58
  %242 = xor i32 %55, %1
  %243 = add i32 %98, 1
  %244 = xor i32 %23, %73
  %245 = xor i32 %27, %2
  %246 = xor i32 %99, %0
  %247 = xor i32 %23, %0
  %248 = xor i32 %247, %25
  %249 = or i32 %99, %4
  %250 = or i32 %12, %34
  %251 = shl i32 %250, 1
  %252 = and i32 %29, %33
  %253 = xor i32 %195, %200
  %254 = or i32 %37, %70
  %255 = xor i32 %124, %0
  %256 = or i32 %99, %0
  %257 = shl i32 %256, 1
  %258 = or i32 %22, %227
  %259 = and i32 %33, %5
  %260 = and i32 %11, %28
  %261 = or i32 %22, %247
  %262 = xor i32 %19, %73
  %263 = or i32 %6, %0
  %264 = and i32 %86, %2
  %265 = shl i32 %264, 1
  %266 = xor i32 %31, %23
  %267 = shl i32 %266, 1
  %268 = xor i32 %22, %207
  %269 = xor i32 %56, %1
  %270 = or i32 %92, %0
  %271 = or i32 %98, %27
  %272 = shl i32 %271, 1
  %273 = or i32 %22, %24
  %274 = or i32 %31, %18
  %275 = shl i32 %274, 1
  %276 = and i32 %28, %2
  %277 = or i32 %73, %56
  %278 = xor i32 %43, %1
  %279 = or i32 %92, %34
  %280 = and i32 %102, %1
  %281 = or i32 %5, %86
  %282 = and i32 %11, %86
  %283 = shl i32 %282, 1
  %284 = or i32 %73, %66
  %285 = or i32 %96, %4
  %286 = or i32 %64, %1
  %287 = xor i32 %33, %2
  %288 = and i32 %5, %86
  %289 = or i32 %64, %66
  %290 = or i32 %64, %86
  %291 = or i32 %31, %34
  %292 = and i32 %96, %4
  %293 = shl i32 %292, 3
  %294 = and i32 %98, %4
  %295 = mul i32 %294, -11
  %296 = and i32 %96, %0
  %297 = shl i32 %296, 3
  %298 = and i32 %98, %0
  %299 = mul i32 %298, -6
  %300 = and i32 %66, %4
  %301 = shl i32 %300, 2
  %302 = and i32 %66, %0
  %303 = mul i32 %302, -12
  %304 = mul i32 %22, -14
  %305 = add i32 %42, %55
  %306 = sub i32 %305, %186
  %307 = add i32 %306, %244
  %308 = add i32 %307, %144
  %309 = mul i32 %308, 3
  %310 = add i32 %215, %243
  %311 = add i32 %310, %149
  %312 = add i32 %311, %214
  %313 = mul i32 %312, 5
  %314 = add i32 %28, %1
  %315 = add i32 %314, %219
  %316 = shl i32 %315, 2
  %317 = sub i32 -2, %10
  %318 = add i32 %317, %118
  %319 = add i32 %318, %88
  %320 = add i32 %319, %278
  %321 = add i32 %320, %246
  %322 = add i32 %321, %234
  %323 = add i32 %322, %232
  %324 = add i32 %323, %218
  %325 = add i32 %324, %212
  %326 = add i32 %325, %193
  %327 = add i32 %326, %182
  %328 = add i32 %327, %170
  %329 = add i32 %328, %97
  %330 = add i32 %329, %91
  %331 = add i32 %330, %67
  %332 = add i32 %331, %35
  %333 = add i32 %332, %30
  %334 = add i32 %333, %254
  %335 = add i32 %334, %273
  %336 = shl i32 %335, 1
  %337 = add i32 %0, %1
  %338 = add i32 %337, -2
  %339 = sub i32 %338, %33
  %340 = sub i32 %339, %10
  %341 = add i32 %340, %109
  %342 = sub i32 %341, %33
  %343 = sub i32 %342, %41
  %344 = add i32 %343, %44
  %345 = sub i32 %344, %59
  %346 = add i32 %345, %61
  %347 = sub i32 %346, %62
  %348 = sub i32 %347, %68
  %349 = add i32 %348, %75
  %350 = add i32 %349, %79
  %351 = sub i32 %350, %80
  %352 = add i32 %351, %81
  %353 = sub i32 %352, %6
  %354 = sub i32 %353, %23
  %355 = sub i32 %354, %108
  %356 = sub i32 %355, %111
  %357 = add i32 %356, %19
  %358 = add i32 %357, %140
  %359 = add i32 %358, %159
  %360 = add i32 %359, %164
  %361 = add i32 %360, %178
  %362 = add i32 %361, %180
  %363 = add i32 %362, %21
  %364 = sub i32 %363, %189
  %365 = add i32 %364, %194
  %366 = sub i32 %365, %98
  %367 = add i32 %366, %211
  %368 = add i32 %367, %96
  %369 = add i32 %368, %233
  %370 = add i32 %369, %237
  %371 = add i32 %370, %12
  %372 = add i32 %371, %31
  %373 = add i32 %372, %66
  %374 = sub i32 %373, %245
  %375 = add i32 %374, %259
  %376 = sub i32 %375, %276
  %377 = add i32 %376, %281
  %378 = add i32 %377, %287
  %379 = add i32 %378, %288
  %380 = sub i32 %379, %13
  %381 = sub i32 %380, %17
  %382 = sub i32 %381, %20
  %383 = add i32 %382, %32
  %384 = sub i32 %383, %45
  %385 = sub i32 %384, %57
  %386 = sub i32 %385, %60
  %387 = sub i32 %386, %63
  %388 = sub i32 %387, %65
  %389 = sub i32 %388, %69
  %390 = add i32 %389, %76
  %391 = sub i32 %390, %77
  %392 = sub i32 %391, %78
  %393 = add i32 %392, %82
  %394 = sub i32 %393, %85
  %395 = sub i32 %394, %87
  %396 = add i32 %395, %95
  %397 = add i32 %396, %103
  %398 = add i32 %397, %104
  %399 = add i32 %398, %107
  %400 = add i32 %399, %110
  %401 = add i32 %400, %83
  %402 = sub i32 %401, %112
  %403 = add i32 %402, %113
  %404 = sub i32 %403, %120
  %405 = sub i32 %404, %121
  %406 = add i32 %405, %125
  %407 = add i32 %406, %126
  %408 = sub i32 %407, %89
  %409 = add i32 %408, %131
  %410 = add i32 %409, %132
  %411 = sub i32 %410, %133
  %412 = add i32 %411, %134
  %413 = sub i32 %412, %136
  %414 = add i32 %413, %137
  %415 = add i32 %414, %138
  %416 = add i32 %415, %139
  %417 = add i32 %416, %141
  %418 = add i32 %417, %142
  %419 = add i32 %418, %143
  %420 = add i32 %419, %145
  %421 = sub i32 %420, %147
  %422 = sub i32 %421, %148
  %423 = sub i32 %422, %150
  %424 = add i32 %423, %151
  %425 = add i32 %424, %152
  %426 = sub i32 %425, %153
  %427 = sub i32 %426, %154
  %428 = add i32 %427, %157
  %429 = add i32 %428, %158
  %430 = sub i32 %429, %160
  %431 = sub i32 %430, %162
  %432 = add i32 %431, %163
  %433 = sub i32 %432, %166
  %434 = sub i32 %433, %167
  %435 = sub i32 %434, %168
  %436 = add i32 %435, %169
  %437 = sub i32 %436, %171
  %438 = add i32 %437, %174
  %439 = sub i32 %438, %38
  %440 = add i32 %439, %175
  %441 = add i32 %440, %176
  %442 = add i32 %441, %177
  %443 = sub i32 %442, %179
  %444 = add i32 %443, %181
  %445 = add i32 %444, %185
  %446 = sub i32 %445, %187
  %447 = sub i32 %446, %190
  %448 = add i32 %447, %191
  %449 = add i32 %448, %192
  %450 = sub i32 %449, %197
  %451 = sub i32 %450, %198
  %452 = sub i32 %451, %199
  %453 = sub i32 %452, %202
  %454 = sub i32 %453, %205
  %455 = add i32 %454, %206
  %456 = add i32 %455, %207
  %457 = sub i32 %456, %208
  %458 = add i32 %457, %210
  %459 = sub i32 %458, %213
  %460 = sub i32 %459, %216
  %461 = add i32 %460, %217
  %462 = add i32 %461, %24
  %463 = sub i32 %462, %220
  %464 = sub i32 %463, %223
  %465 = sub i32 %464, %230
  %466 = add i32 %465, %231
  %467 = sub i32 %466, %235
  %468 = sub i32 %467, %236
  %469 = sub i32 %468, %195
  %470 = sub i32 %469, %238
  %471 = sub i32 %470, %239
  %472 = add i32 %471, %240
  %473 = sub i32 %472, %241
  %474 = sub i32 %473, %242
  %475 = sub i32 %474, %249
  %476 = sub i32 %475, %252
  %477 = sub i32 %476, %255
  %478 = sub i32 %477, %260
  %479 = sub i32 %478, %262
  %480 = add i32 %479, %263
  %481 = sub i32 %480, %265
  %482 = add i32 %481, %269
  %483 = sub i32 %482, %270
  %484 = sub i32 %483, %277
  %485 = add i32 %484, %279
  %486 = add i32 %485, %280
  %487 = sub i32 %486, %284
  %488 = sub i32 %487, %285
  %489 = sub i32 %488, %286
  %490 = add i32 %489, %289
  %491 = sub i32 %490, %290
  %492 = add i32 %491, %291
  %493 = add i32 %492, %247
  %494 = sub i32 %493, %16
  %495 = sub i32 %494, %26
  %496 = sub i32 %495, %40
  %497 = sub i32 %496, %54
  %498 = sub i32 %497, %72
  %499 = add i32 %498, %84
  %500 = add i32 %499, %90
  %501 = sub i32 %500, %94
  %502 = sub i32 %501, %101
  %503 = sub i32 %502, %106
  %504 = add i32 %503, %115
  %505 = sub i32 %504, %117
  %506 = sub i32 %505, %119
  %507 = sub i32 %506, %123
  %508 = sub i32 %507, %128
  %509 = sub i32 %508, %130
  %510 = add i32 %509, %135
  %511 = sub i32 %510, %156
  %512 = sub i32 %511, %173
  %513 = sub i32 %512, %184
  %514 = sub i32 %513, %188
  %515 = sub i32 %514, %196
  %516 = add i32 %515, %201
  %517 = sub i32 %516, %204
  %518 = sub i32 %517, %209
  %519 = add i32 %518, %221
  %520 = sub i32 %519, %225
  %521 = add i32 %520, %226
  %522 = sub i32 %521, %228
  %523 = add i32 %522, %248
  %524 = sub i32 %523, %251
  %525 = sub i32 %524, %253
  %526 = sub i32 %525, %257
  %527 = sub i32 %526, %258
  %528 = add i32 %527, %261
  %529 = sub i32 %528, %267
  %530 = add i32 %529, %268
  %531 = sub i32 %530, %272
  %532 = sub i32 %531, %275
  %533 = sub i32 %532, %283
  %534 = add i32 %533, %293
  %535 = add i32 %534, %295
  %536 = sub i32 %535, %297
  %537 = add i32 %536, %299
  %538 = sub i32 %537, %301
  %539 = add i32 %538, %303
  %540 = add i32 %539, %304
  %541 = sub i32 %540, %51
  %542 = add i32 %541, %316
  %543 = add i32 %542, %313
  %544 = add i32 %543, %309
  %545 = add i32 %544, %336
  %546 = icmp eq i32 %9, %545
  %547 = select i1 %546, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %548 = tail call i32 @puts(i8* nonnull dereferenceable(1) %547)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
