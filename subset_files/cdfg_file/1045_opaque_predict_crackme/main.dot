digraph "DFG for'main' function" {
	Node0x1a0dfb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a0e038[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a0e0c8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1a0e128[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1a0e5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a0e688[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1a0e788[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a0e848[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1a0e8f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a0eb58[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1a0ec18[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a0fb88[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a0fbe8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1a0fce0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1a106a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a10808[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a10918[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a109d8[shape=record, label="  ret i32 0"];
	Node0x1a0dfb8 -> Node0x1a0e038;
	Node0x1a0e038 -> Node0x1a0e0c8;
	Node0x1a0e0c8 -> Node0x1a0e128;
	Node0x1a0e128 -> Node0x1a0e5a8;
	Node0x1a0e5a8 -> Node0x1a0e688;
	Node0x1a0e688 -> Node0x1a0e788;
	Node0x1a0e788 -> Node0x1a0e848;
	Node0x1a0e848 -> Node0x1a0e8f8;
	Node0x1a0e8f8 -> Node0x1a0eb58;
	Node0x1a0eb58 -> Node0x1a0ec18;
	Node0x1a0ec18 -> Node0x1a0fb88;
	Node0x1a0fb88 -> Node0x1a0fbe8;
	Node0x1a0fbe8 -> Node0x1a0fce0;
	Node0x1a0fce0 -> Node0x1a106a8;
	Node0x1a106a8 -> Node0x1a10808;
	Node0x1a10808 -> Node0x1a10918;
	Node0x1a10918 -> Node0x1a109d8;
edge [color=red]
	Node0x1a0dfb8 -> Node0x1a0e128;
	Node0x1a0e128 -> Node0x1a0e5a8;
	Node0x1a0e038 -> Node0x1a0e688;
	Node0x1a0e688 -> Node0x1a0e788;
	Node0x1a0e0c8 -> Node0x1a0e848;
	Node0x1a0e848 -> Node0x1a0e8f8;
	Node0x1a0dfb8 -> Node0x1a0eb58;
	Node0x1a0e038 -> Node0x1a0eb58;
	Node0x1a0e0c8 -> Node0x1a0eb58;
	Node0x1a0dfb8 -> Node0x1a0ec18;
	Node0x1a0e038 -> Node0x1a0fb88;
	Node0x1a0e0c8 -> Node0x1a0fbe8;
	Node0x1a0ec18 -> Node0x1a0fce0;
	Node0x1a0fb88 -> Node0x1a0fce0;
	Node0x1a0fbe8 -> Node0x1a0fce0;
	Node0x1a0e848 -> Node0x1a106a8;
	Node0x1a0e688 -> Node0x1a10808;
	Node0x1a0e128 -> Node0x1a10918;
}
