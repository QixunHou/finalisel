; ModuleID = '../.././c_source_file/1340_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1340_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = xor i32 %1, %0
  %9 = and i32 %8, %7
  %10 = mul i32 %9, -2
  %11 = xor i32 %0, -1
  %12 = xor i32 %2, %1
  %13 = xor i32 %12, -1
  %14 = or i32 %13, %11
  %15 = shl i32 %14, 2
  %16 = add i32 %15, %10
  %17 = xor i32 %4, -1
  %18 = and i32 %5, %3
  %19 = and i32 %18, %17
  %20 = or i32 %5, %3
  %21 = and i32 %20, %4
  %22 = or i32 %19, %21
  %23 = or i32 %18, %4
  %24 = add i32 %16, %23
  %25 = sub i32 %24, %22
  %26 = xor i32 %1, -1
  %27 = xor i32 %2, %0
  %28 = and i32 %27, %26
  %29 = or i32 %1, %0
  %30 = xor i32 %29, %2
  %31 = and i32 %26, %0
  %32 = or i32 %12, %31
  %33 = or i32 %2, %1
  %34 = and i32 %33, %11
  %35 = or i32 %7, %0
  %36 = and i32 %35, %1
  %37 = shl i32 %36, 1
  %38 = or i32 %27, %31
  %39 = shl i32 %38, 1
  %40 = and i32 %1, %0
  %41 = xor i32 %35, -1
  %42 = or i32 %40, %41
  %43 = or i32 %27, %40
  %44 = shl i32 %43, 1
  %45 = xor i32 %8, -1
  %46 = xor i32 %27, -1
  %47 = and i32 %46, %45
  %48 = and i32 %26, %2
  %49 = and i32 %48, %11
  %50 = or i32 %26, %2
  %51 = and i32 %50, %0
  %52 = or i32 %49, %51
  %53 = or i32 %26, %0
  %54 = and i32 %53, %13
  %55 = and i32 %2, %1
  %56 = and i32 %55, %11
  %57 = and i32 %12, %0
  %58 = xor i32 %57, -1
  %59 = xor i32 %56, %58
  %60 = and i32 %27, %29
  %61 = xor i32 %55, -1
  %62 = or i32 %61, %0
  %63 = or i32 %27, %26
  %64 = and i32 %8, %46
  %65 = shl i32 %64, 1
  %66 = xor i32 %33, %0
  %67 = xor i32 %31, %61
  %68 = and i32 %55, %0
  %69 = xor i32 %68, -1
  %70 = xor i32 %34, %69
  %71 = xor i32 %61, %0
  %72 = or i32 %7, %1
  %73 = xor i32 %72, %40
  %74 = or i32 %55, %11
  %75 = and i32 %2, %0
  %76 = xor i32 %75, -1
  %77 = and i32 %76, %1
  %78 = or i32 %45, %2
  %79 = shl i32 %78, 2
  %80 = add i32 %75, 1
  %81 = and i32 %27, %8
  %82 = xor i32 %12, %0
  %83 = xor i32 %82, -1
  %84 = or i32 %68, %83
  %85 = or i32 %2, %0
  %86 = xor i32 %85, -1
  %87 = or i32 %40, %86
  %88 = and i32 %35, %8
  %89 = or i32 %31, %13
  %90 = shl i32 %89, 1
  %91 = and i32 %29, %2
  %92 = and i32 %29, %46
  %93 = or i32 %12, %40
  %94 = and i32 %33, %0
  %95 = or i32 %56, %94
  %96 = or i32 %41, %26
  %97 = and i32 %7, %1
  %98 = or i32 %97, %31
  %99 = shl i32 %98, 1
  %100 = and i32 %12, %53
  %101 = xor i32 %13, %0
  %102 = or i32 %27, %1
  %103 = shl i32 %102, 1
  %104 = and i32 %7, %0
  %105 = xor i32 %104, %72
  %106 = or i32 %40, %46
  %107 = xor i32 %31, -1
  %108 = and i32 %61, %11
  %109 = shl i32 %108, 1
  %110 = xor i32 %97, -1
  %111 = or i32 %110, %11
  %112 = xor i32 %29, -1
  %113 = or i32 %12, %112
  %114 = or i32 %104, %8
  %115 = and i32 %110, %0
  %116 = xor i32 %104, %1
  %117 = xor i32 %104, -1
  %118 = and i32 %117, %1
  %119 = or i32 %31, %7
  %120 = xor i32 %33, -1
  %121 = add i32 %33, 1
  %122 = add i32 %104, 1
  %123 = xor i32 %110, %0
  %124 = or i32 %120, %0
  %125 = xor i32 %40, -1
  %126 = xor i32 %125, %2
  %127 = shl i32 %126, 1
  %128 = or i32 %13, %0
  %129 = or i32 %104, %45
  %130 = and i32 %8, %2
  %131 = or i32 %46, %45
  %132 = and i32 %107, %2
  %133 = and i32 %13, %107
  %134 = and i32 %46, %125
  %135 = xor i32 %31, %110
  %136 = or i32 %68, %66
  %137 = xor i32 %53, -1
  %138 = or i32 %12, %137
  %139 = shl i32 %138, 1
  %140 = and i32 %27, %1
  %141 = shl i32 %140, 1
  %142 = or i32 %13, %137
  %143 = xor i32 %75, %110
  %144 = and i32 %53, %46
  %145 = and i32 %7, %125
  %146 = xor i32 %31, %2
  %147 = xor i32 %75, %29
  %148 = or i32 %7, %45
  %149 = or i32 %8, %86
  %150 = and i32 %48, %0
  %151 = xor i32 %50, 2147483647
  %152 = or i32 %151, %0
  %153 = xor i32 %152, %150
  %154 = shl i32 %153, 1
  %155 = xor i32 %53, %2
  %156 = or i32 %46, %1
  %157 = and i32 %85, %26
  %158 = and i32 %76, %45
  %159 = and i32 %13, %11
  %160 = xor i32 %104, %61
  %161 = or i32 %46, %137
  %162 = or i32 %75, %45
  %163 = shl i32 %162, 1
  %164 = or i32 %31, %2
  %165 = xor i32 %97, %0
  %166 = and i32 %12, %11
  %167 = or i32 %68, %166
  %168 = or i32 %120, %11
  %169 = or i32 %27, %8
  %170 = xor i32 %72, %0
  %171 = xor i32 %75, %33
  %172 = or i32 %41, %1
  %173 = and i32 %76, %26
  %174 = and i32 %35, %45
  %175 = xor i32 %72, -1
  %176 = or i32 %175, %0
  %177 = and i32 %110, %11
  %178 = and i32 %85, %8
  %179 = xor i32 %50, %0
  %180 = xor i32 %179, -1
  %181 = xor i32 %150, %180
  %182 = xor i32 %68, %82
  %183 = or i32 %33, %11
  %184 = and i32 %12, %107
  %185 = xor i32 %66, %69
  %186 = and i32 %72, %11
  %187 = xor i32 %85, %40
  %188 = or i32 %27, %45
  %189 = or i32 %55, %31
  %190 = xor i32 %33, %40
  %191 = shl i32 %190, 2
  %192 = or i32 %46, %26
  %193 = or i32 %72, %0
  %194 = or i32 %97, %11
  %195 = or i32 %104, %26
  %196 = shl i32 %75, 1
  %197 = and i32 %8, %117
  %198 = shl i32 %104, 1
  %199 = and i32 %125, %2
  %200 = and i32 %85, %1
  %201 = or i32 %12, %0
  %202 = xor i32 %201, 1073741823
  %203 = or i32 %202, %150
  %204 = shl i32 %203, 2
  %205 = xor i32 %35, %1
  %206 = xor i32 %35, %40
  %207 = xor i32 %85, %1
  %208 = or i32 %97, %0
  %209 = or i32 %75, %26
  %210 = xor i32 %112, %2
  %211 = xor i32 %75, %53
  %212 = xor i32 %175, %0
  %213 = xor i32 %51, -1
  %214 = xor i32 %49, %213
  %215 = and i32 %29, %13
  %216 = add i32 %72, 1
  %217 = and i32 %45, %2
  %218 = or i32 %13, %112
  %219 = and i32 %72, %0
  %220 = and i32 %35, %26
  %221 = shl i32 %220, 1
  %222 = or i32 %75, %112
  %223 = and i32 %13, %125
  %224 = or i32 %40, %7
  %225 = shl i32 %224, 1
  %226 = or i32 %175, %11
  %227 = shl i32 %226, 1
  %228 = or i32 %75, %137
  %229 = add i32 %53, 1
  %230 = xor i32 %41, %1
  %231 = or i32 %27, %112
  %232 = or i32 %46, %112
  %233 = and i32 %85, %45
  %234 = or i32 %112, %2
  %235 = and i32 %7, %45
  %236 = and i32 %12, %125
  %237 = or i32 %75, %97
  %238 = or i32 %7, %137
  %239 = and i32 %27, %53
  %240 = or i32 %8, %41
  %241 = or i32 %150, %179
  %242 = shl i32 %241, 1
  %243 = or i32 %41, %45
  %244 = shl i32 %243, 1
  %245 = and i32 %8, %76
  %246 = or i32 %75, %120
  %247 = and i32 %46, %107
  %248 = and i32 %13, %0
  %249 = or i32 %49, %248
  %250 = or i32 %40, %2
  %251 = shl i32 %250, 1
  %252 = or i32 %72, %11
  %253 = and i32 %120, %11
  %254 = mul i32 %253, 6
  %255 = and i32 %97, %11
  %256 = mul i32 %255, 7
  %257 = and i32 %120, %0
  %258 = mul i32 %257, 23
  %259 = and i32 %97, %0
  %260 = and i32 %175, %11
  %261 = mul i32 %56, 30
  %262 = and i32 %175, %0
  %263 = mul i32 %262, 29
  %264 = mul i32 %68, 9
  %265 = or i32 %4, %3
  %266 = and i32 %265, %5
  %267 = and i32 %18, %4
  %268 = xor i32 %5, %3
  %269 = and i32 %268, %17
  %270 = or i32 %267, %269
  %271 = xor i32 %3, -1
  %272 = or i32 %271, %4
  %273 = xor i32 %272, -1
  %274 = xor i32 %273, %5
  %275 = xor i32 %4, %3
  %276 = xor i32 %275, -1
  %277 = xor i32 %5, %4
  %278 = or i32 %277, %276
  %279 = xor i32 %265, -1
  %280 = or i32 %268, %279
  %281 = xor i32 %5, -1
  %282 = add i32 %5, 1
  %283 = and i32 %281, %4
  %284 = or i32 %283, %18
  %285 = xor i32 %267, -1
  %286 = xor i32 %269, %285
  %287 = and i32 %4, %3
  %288 = or i32 %5, %4
  %289 = xor i32 %288, -1
  %290 = or i32 %287, %289
  %291 = or i32 %281, %3
  %292 = xor i32 %291, %287
  %293 = and i32 %277, %275
  %294 = or i32 %281, %4
  %295 = xor i32 %294, %287
  %296 = or i32 %287, %281
  %297 = xor i32 %277, -1
  %298 = or i32 %297, %271
  %299 = and i32 %294, %271
  %300 = and i32 %291, %4
  %301 = and i32 %272, %281
  %302 = xor i32 %20, %4
  %303 = or i32 %267, %302
  %304 = shl i32 %303, 2
  %305 = xor i32 %291, -1
  %306 = or i32 %305, %4
  %307 = or i32 %277, %287
  %308 = or i32 %283, %276
  %309 = shl i32 %308, 1
  %310 = xor i32 %294, -1
  %311 = or i32 %310, %276
  %312 = shl i32 %311, 1
  %313 = and i32 %268, %4
  %314 = or i32 %19, %313
  %315 = and i32 %271, %4
  %316 = xor i32 %315, -1
  %317 = and i32 %268, %316
  %318 = and i32 %5, %4
  %319 = and i32 %281, %3
  %320 = or i32 %318, %319
  %321 = or i32 %277, %279
  %322 = and i32 %291, %17
  %323 = and i32 %271, %5
  %324 = and i32 %323, %4
  %325 = xor i32 %268, %4
  %326 = or i32 %324, %325
  %327 = or i32 %273, %5
  %328 = xor i32 %20, -1
  %329 = add i32 %20, 1
  %330 = and i32 %288, %3
  %331 = xor i32 %318, %3
  %332 = xor i32 %287, -1
  %333 = xor i32 %268, -1
  %334 = and i32 %333, %332
  %335 = xor i32 %319, -1
  %336 = and i32 %335, %4
  %337 = or i32 %333, %273
  %338 = or i32 %319, %4
  %339 = xor i32 %328, %4
  %340 = or i32 %333, %17
  %341 = and i32 %297, %276
  %342 = and i32 %281, %316
  %343 = and i32 %20, %17
  %344 = or i32 %267, %343
  %345 = shl i32 %344, 1
  %346 = or i32 %268, %4
  %347 = xor i32 %324, %346
  %348 = and i32 %265, %281
  %349 = xor i32 %283, -1
  %350 = and i32 %349, %3
  %351 = or i32 %318, %273
  %352 = or i32 %271, %5
  %353 = xor i32 %352, %4
  %354 = or i32 %324, %353
  %355 = or i32 %277, %3
  %356 = and i32 %277, %272
  %357 = or i32 %291, %17
  %358 = or i32 %20, %4
  %359 = or i32 %287, %5
  %360 = xor i32 %349, %3
  %361 = or i32 %315, %297
  %362 = xor i32 %18, -1
  %363 = xor i32 %315, %362
  %364 = or i32 %315, %281
  %365 = xor i32 %335, %4
  %366 = or i32 %20, %17
  %367 = or i32 %275, %310
  %368 = or i32 %289, %271
  %369 = shl i32 %368, 1
  %370 = or i32 %281, %273
  %371 = xor i32 %19, -1
  %372 = xor i32 %313, %371
  %373 = and i32 %332, %5
  %374 = and i32 %294, %3
  %375 = or i32 %287, %328
  %376 = xor i32 %283, %3
  %377 = and i32 %276, %5
  %378 = and i32 %323, %17
  %379 = or i32 %268, %17
  %380 = xor i32 %378, %379
  %381 = add i32 %291, 1
  %382 = xor i32 %267, %325
  %383 = and i32 %297, %271
  %384 = and i32 %352, %4
  %385 = xor i32 %384, -1
  %386 = xor i32 %378, %385
  %387 = xor i32 %343, 2147483647
  %388 = xor i32 %387, %267
  %389 = and i32 %275, %349
  %390 = shl i32 %18, 1
  %391 = and i32 %277, %316
  %392 = xor i32 %305, %4
  %393 = xor i32 %333, %4
  %394 = or i32 %315, %333
  %395 = xor i32 %353, 2147483647
  %396 = xor i32 %395, %324
  %397 = or i32 %268, %273
  %398 = and i32 %349, %271
  %399 = or i32 %310, %3
  %400 = or i32 %281, %279
  %401 = or i32 %277, %275
  %402 = and i32 %349, %276
  %403 = or i32 %328, %17
  %404 = and i32 %277, %3
  %405 = and i32 %297, %316
  %406 = xor i32 %316, %5
  %407 = xor i32 %318, -1
  %408 = and i32 %407, %3
  %409 = and i32 %333, %17
  %410 = shl i32 %302, 1
  %411 = and i32 %407, %276
  %412 = or i32 %315, %5
  %413 = or i32 %318, %279
  %414 = shl i32 %413, 1
  %415 = and i32 %297, %332
  %416 = xor i32 %279, %5
  %417 = xor i32 %265, %5
  %418 = xor i32 %319, %4
  %419 = and i32 %275, %407
  %420 = xor i32 %332, %5
  %421 = or i32 %289, %3
  %422 = xor i32 %294, %3
  %423 = shl i32 %325, 2
  %424 = xor i32 %21, %371
  %425 = or i32 %305, %17
  %426 = or i32 %275, %297
  %427 = shl i32 %297, 1
  %428 = or i32 %18, %315
  %429 = or i32 %281, %276
  %430 = or i32 %328, %4
  %431 = xor i32 %288, %3
  %432 = and i32 %288, %276
  %433 = and i32 %275, %281
  %434 = shl i32 %433, 1
  %435 = or i32 %297, %276
  %436 = and i32 %265, %333
  %437 = or i32 %333, %4
  %438 = shl i32 %362, 1
  %439 = or i32 %275, %289
  %440 = xor i32 %283, %291
  %441 = or i32 %283, %305
  %442 = and i32 %288, %271
  %443 = and i32 %268, %332
  %444 = and i32 %272, %333
  %445 = or i32 %378, %384
  %446 = xor i32 %310, %3
  %447 = and i32 %362, %4
  %448 = and i32 %277, %276
  %449 = and i32 %275, %5
  %450 = xor i32 %318, %265
  %451 = or i32 %310, %271
  %452 = shl i32 %451, 1
  %453 = or i32 %283, %3
  %454 = or i32 %287, %305
  %455 = or i32 %287, %310
  %456 = and i32 %277, %265
  %457 = or i32 %275, %5
  %458 = xor i32 %318, %20
  %459 = and i32 %281, %276
  %460 = or i32 %318, %275
  %461 = or i32 %277, %271
  %462 = and i32 %268, %272
  %463 = and i32 %335, %17
  %464 = or i32 %18, %17
  %465 = and i32 %362, %17
  %466 = shl i32 %465, 1
  %467 = and i32 %268, %265
  %468 = shl i32 %467, 1
  %469 = and i32 %275, %297
  %470 = and i32 %277, %332
  %471 = and i32 %272, %297
  %472 = and i32 %333, %316
  %473 = or i32 %297, %273
  %474 = xor i32 %289, %3
  %475 = xor i32 %362, %4
  %476 = and i32 %281, %332
  %477 = shl i32 %476, 1
  %478 = or i32 %333, %279
  %479 = or i32 %318, %328
  %480 = or i32 %335, %4
  %481 = and i32 %333, %4
  %482 = xor i32 %352, -1
  %483 = or i32 %482, %4
  %484 = xor i32 %324, %483
  %485 = or i32 %319, %17
  %486 = or i32 %318, %276
  %487 = xor i32 %302, %285
  %488 = or i32 %362, %4
  %489 = or i32 %283, %275
  %490 = or i32 %283, %271
  %491 = xor i32 %379, -1
  %492 = or i32 %378, %491
  %493 = or i32 %297, %3
  %494 = shl i32 %17, 1
  %495 = xor i32 %315, %5
  %496 = or i32 %362, %17
  %497 = or i32 %297, %279
  %498 = and i32 %297, %3
  %499 = or i32 %287, %297
  %500 = xor i32 %287, %5
  %501 = or i32 %276, %5
  %502 = xor i32 %288, %287
  %503 = and i32 %288, %275
  %504 = xor i32 %346, -1
  %505 = or i32 %324, %504
  %506 = xor i32 %18, %4
  %507 = shl i32 %506, 1
  %508 = and i32 %407, %271
  %509 = or i32 %287, %333
  %510 = shl i32 %273, 1
  %511 = or i32 %319, %315
  %512 = xor i32 %407, %3
  %513 = and i32 %272, %5
  %514 = or i32 %318, %3
  %515 = shl i32 %514, 1
  %516 = and i32 %316, %5
  %517 = shl i32 %294, 1
  %518 = or i32 %279, %5
  %519 = or i32 %335, %17
  %520 = shl i32 %519, 1
  %521 = xor i32 %325, -1
  %522 = xor i32 %324, %521
  %523 = and i32 %294, %275
  %524 = shl i32 %523, 1
  %525 = add i32 %283, 1
  %526 = or i32 %277, %315
  %527 = shl i32 %526, 1
  %528 = add i32 %315, 1
  %529 = or i32 %268, %315
  %530 = and i32 %294, %276
  %531 = and i32 %277, %271
  %532 = xor i32 %318, %335
  %533 = xor i32 %283, %362
  %534 = or i32 %267, %521
  %535 = xor i32 %20, %287
  %536 = or i32 %289, %276
  %537 = shl i32 %536, 1
  %538 = and i32 %328, %17
  %539 = and i32 %319, %17
  %540 = mul i32 %539, 22
  %541 = and i32 %328, %4
  %542 = mul i32 %541, -15
  %543 = and i32 %319, %4
  %544 = mul i32 %543, 10
  %545 = and i32 %305, %17
  %546 = mul i32 %545, 11
  %547 = shl i32 %19, 1
  %548 = mul i32 %267, -21
  %549 = add i32 %271, %45
  %550 = add i32 %549, %33
  %551 = add i32 %550, %61
  %552 = add i32 %551, %30
  %553 = add i32 %552, %245
  %554 = add i32 %553, %222
  %555 = add i32 %554, %208
  %556 = add i32 %555, %193
  %557 = add i32 %556, %161
  %558 = add i32 %557, %159
  %559 = add i32 %558, %128
  %560 = add i32 %559, %57
  %561 = sub i32 %560, %28
  %562 = add i32 %561, %275
  %563 = add i32 %562, %5
  %564 = add i32 %563, %182
  %565 = add i32 %564, %500
  %566 = add i32 %565, %301
  %567 = add i32 %566, %532
  %568 = add i32 %567, %496
  %569 = add i32 %568, %490
  %570 = add i32 %569, %479
  %571 = add i32 %570, %472
  %572 = add i32 %571, %453
  %573 = add i32 %572, %443
  %574 = add i32 %573, %442
  %575 = add i32 %574, %432
  %576 = add i32 %575, %419
  %577 = add i32 %576, %375
  %578 = add i32 %577, %358
  %579 = add i32 %578, %357
  %580 = add i32 %579, %351
  %581 = add i32 %580, %337
  %582 = add i32 %581, %322
  %583 = add i32 %582, %534
  %584 = add i32 %583, %382
  %585 = add i32 %584, %388
  %586 = add i32 %585, %396
  %587 = shl i32 %586, 1
  %588 = add i32 %212, %236
  %589 = sub i32 %588, %168
  %590 = add i32 %589, %279
  %591 = sub i32 %590, %214
  %592 = sub i32 %591, %277
  %593 = sub i32 %592, %343
  %594 = add i32 %593, %488
  %595 = mul i32 %594, 3
  %596 = sub i32 %259, %189
  %597 = sub i32 %596, %363
  %598 = add i32 %597, %402
  %599 = sub i32 %598, %307
  %600 = mul i32 %599, 5
  %601 = sub i32 %260, %538
  %602 = mul i32 %601, 13
  %603 = add i32 %200, 1073741823
  %604 = add i32 %603, %186
  %605 = add i32 %604, %105
  %606 = add i32 %605, %495
  %607 = shl i32 %606, 2
  %608 = sub i32 -3, %0
  %609 = add i32 %608, %26
  %610 = add i32 %609, %107
  %611 = add i32 %610, %112
  %612 = add i32 %611, %229
  %613 = add i32 %612, %80
  %614 = add i32 %613, %91
  %615 = sub i32 %614, %119
  %616 = add i32 %615, %121
  %617 = add i32 %616, %122
  %618 = sub i32 %617, %130
  %619 = sub i32 %618, %132
  %620 = sub i32 %619, %145
  %621 = sub i32 %620, %146
  %622 = add i32 %621, %148
  %623 = add i32 %622, %155
  %624 = add i32 %623, %85
  %625 = add i32 %624, %72
  %626 = sub i32 %625, %164
  %627 = sub i32 %626, %199
  %628 = sub i32 %627, %210
  %629 = add i32 %628, %12
  %630 = add i32 %629, %216
  %631 = sub i32 %630, %217
  %632 = add i32 %631, %97
  %633 = add i32 %632, %234
  %634 = add i32 %633, %235
  %635 = sub i32 %634, %238
  %636 = sub i32 %635, %55
  %637 = add i32 %636, %3
  %638 = add i32 %637, %32
  %639 = add i32 %638, %34
  %640 = sub i32 %639, %42
  %641 = add i32 %640, %47
  %642 = sub i32 %641, %54
  %643 = sub i32 %642, %60
  %644 = add i32 %643, %62
  %645 = add i32 %644, %63
  %646 = add i32 %645, %66
  %647 = add i32 %646, %67
  %648 = add i32 %647, %71
  %649 = sub i32 %648, %73
  %650 = add i32 %649, %74
  %651 = sub i32 %650, %77
  %652 = sub i32 %651, %79
  %653 = add i32 %652, %81
  %654 = add i32 %653, %87
  %655 = sub i32 %654, %88
  %656 = add i32 %655, %92
  %657 = add i32 %656, %93
  %658 = add i32 %657, %96
  %659 = sub i32 %658, %100
  %660 = add i32 %659, %101
  %661 = add i32 %660, %106
  %662 = sub i32 %661, %111
  %663 = sub i32 %662, %113
  %664 = sub i32 %663, %114
  %665 = add i32 %664, %115
  %666 = add i32 %665, %116
  %667 = sub i32 %666, %118
  %668 = add i32 %667, %123
  %669 = add i32 %668, %124
  %670 = sub i32 %669, %127
  %671 = sub i32 %670, %129
  %672 = sub i32 %671, %131
  %673 = add i32 %672, %133
  %674 = add i32 %673, %134
  %675 = add i32 %674, %135
  %676 = sub i32 %675, %142
  %677 = sub i32 %676, %143
  %678 = sub i32 %677, %144
  %679 = sub i32 %678, %147
  %680 = sub i32 %679, %149
  %681 = sub i32 %680, %156
  %682 = sub i32 %681, %157
  %683 = add i32 %682, %158
  %684 = sub i32 %683, %160
  %685 = sub i32 %684, %165
  %686 = add i32 %685, %169
  %687 = add i32 %686, %170
  %688 = sub i32 %687, %171
  %689 = add i32 %688, %172
  %690 = sub i32 %689, %173
  %691 = add i32 %690, %174
  %692 = sub i32 %691, %176
  %693 = sub i32 %692, %177
  %694 = sub i32 %693, %178
  %695 = sub i32 %694, %183
  %696 = add i32 %695, %184
  %697 = add i32 %696, %187
  %698 = add i32 %697, %188
  %699 = sub i32 %698, %192
  %700 = sub i32 %699, %194
  %701 = sub i32 %700, %195
  %702 = sub i32 %701, %196
  %703 = sub i32 %702, %197
  %704 = sub i32 %703, %198
  %705 = sub i32 %704, %205
  %706 = add i32 %705, %206
  %707 = sub i32 %706, %207
  %708 = add i32 %707, %209
  %709 = add i32 %708, %211
  %710 = sub i32 %709, %94
  %711 = sub i32 %710, %215
  %712 = add i32 %711, %218
  %713 = sub i32 %712, %219
  %714 = sub i32 %713, %223
  %715 = sub i32 %714, %225
  %716 = sub i32 %715, %228
  %717 = sub i32 %716, %230
  %718 = add i32 %717, %231
  %719 = sub i32 %718, %232
  %720 = add i32 %719, %233
  %721 = sub i32 %720, %237
  %722 = add i32 %721, %166
  %723 = add i32 %722, %239
  %724 = sub i32 %723, %240
  %725 = add i32 %724, %246
  %726 = add i32 %725, %247
  %727 = sub i32 %726, %251
  %728 = sub i32 %727, %252
  %729 = sub i32 %728, %4
  %730 = sub i32 %729, %37
  %731 = sub i32 %730, %39
  %732 = sub i32 %731, %44
  %733 = sub i32 %732, %52
  %734 = add i32 %733, %59
  %735 = sub i32 %734, %65
  %736 = sub i32 %735, %70
  %737 = sub i32 %736, %84
  %738 = sub i32 %737, %90
  %739 = add i32 %738, %95
  %740 = sub i32 %739, %99
  %741 = sub i32 %740, %103
  %742 = sub i32 %741, %109
  %743 = sub i32 %742, %136
  %744 = sub i32 %743, %139
  %745 = sub i32 %744, %141
  %746 = sub i32 %745, %163
  %747 = add i32 %746, %167
  %748 = sub i32 %747, %181
  %749 = sub i32 %748, %185
  %750 = sub i32 %749, %191
  %751 = sub i32 %750, %221
  %752 = sub i32 %751, %227
  %753 = sub i32 %752, %244
  %754 = sub i32 %753, %249
  %755 = add i32 %754, %254
  %756 = add i32 %755, %256
  %757 = add i32 %756, %258
  %758 = add i32 %757, %261
  %759 = add i32 %758, %263
  %760 = add i32 %759, %264
  %761 = add i32 %760, %282
  %762 = add i32 %761, %276
  %763 = sub i32 %762, %265
  %764 = add i32 %763, %315
  %765 = sub i32 %764, %494
  %766 = add i32 %765, %272
  %767 = add i32 %766, %528
  %768 = sub i32 %767, %242
  %769 = sub i32 %768, %266
  %770 = sub i32 %769, %274
  %771 = add i32 %770, %296
  %772 = add i32 %771, %327
  %773 = add i32 %772, %329
  %774 = add i32 %773, %342
  %775 = sub i32 %774, %291
  %776 = add i32 %775, %348
  %777 = add i32 %776, %359
  %778 = add i32 %777, %364
  %779 = add i32 %778, %370
  %780 = add i32 %779, %373
  %781 = add i32 %780, %377
  %782 = add i32 %781, %381
  %783 = sub i32 %782, %400
  %784 = sub i32 %783, %406
  %785 = sub i32 %784, %412
  %786 = add i32 %785, %416
  %787 = add i32 %786, %417
  %788 = add i32 %787, %420
  %789 = add i32 %788, %429
  %790 = sub i32 %789, %283
  %791 = sub i32 %790, %449
  %792 = add i32 %791, %457
  %793 = add i32 %792, %459
  %794 = add i32 %793, %333
  %795 = sub i32 %794, %268
  %796 = sub i32 %795, %501
  %797 = sub i32 %796, %510
  %798 = add i32 %797, %513
  %799 = add i32 %798, %516
  %800 = add i32 %799, %518
  %801 = add i32 %800, %525
  %802 = sub i32 %801, %20
  %803 = sub i32 %802, %154
  %804 = sub i32 %803, %204
  %805 = add i32 %804, %278
  %806 = sub i32 %805, %280
  %807 = add i32 %806, %284
  %808 = sub i32 %807, %290
  %809 = sub i32 %808, %292
  %810 = add i32 %809, %293
  %811 = add i32 %810, %295
  %812 = sub i32 %811, %298
  %813 = add i32 %812, %299
  %814 = add i32 %813, %300
  %815 = sub i32 %814, %306
  %816 = sub i32 %815, %317
  %817 = sub i32 %816, %320
  %818 = sub i32 %817, %321
  %819 = add i32 %818, %330
  %820 = add i32 %819, %331
  %821 = add i32 %820, %334
  %822 = add i32 %821, %336
  %823 = sub i32 %822, %338
  %824 = add i32 %823, %339
  %825 = add i32 %824, %340
  %826 = add i32 %825, %341
  %827 = add i32 %826, %350
  %828 = add i32 %827, %355
  %829 = add i32 %828, %356
  %830 = sub i32 %829, %360
  %831 = add i32 %830, %361
  %832 = sub i32 %831, %365
  %833 = sub i32 %832, %366
  %834 = add i32 %833, %367
  %835 = sub i32 %834, %374
  %836 = add i32 %835, %376
  %837 = sub i32 %836, %313
  %838 = sub i32 %837, %383
  %839 = add i32 %838, %389
  %840 = sub i32 %839, %390
  %841 = add i32 %840, %391
  %842 = sub i32 %841, %392
  %843 = add i32 %842, %393
  %844 = add i32 %843, %394
  %845 = sub i32 %844, %397
  %846 = sub i32 %845, %398
  %847 = sub i32 %846, %399
  %848 = sub i32 %847, %401
  %849 = sub i32 %848, %403
  %850 = sub i32 %849, %404
  %851 = sub i32 %850, %405
  %852 = sub i32 %851, %408
  %853 = sub i32 %852, %409
  %854 = add i32 %853, %411
  %855 = sub i32 %854, %415
  %856 = sub i32 %855, %418
  %857 = sub i32 %856, %421
  %858 = add i32 %857, %422
  %859 = sub i32 %858, %425
  %860 = sub i32 %859, %426
  %861 = sub i32 %860, %427
  %862 = add i32 %861, %428
  %863 = sub i32 %862, %430
  %864 = sub i32 %863, %431
  %865 = sub i32 %864, %434
  %866 = add i32 %865, %435
  %867 = sub i32 %866, %436
  %868 = sub i32 %867, %437
  %869 = sub i32 %868, %438
  %870 = add i32 %869, %439
  %871 = add i32 %870, %440
  %872 = sub i32 %871, %441
  %873 = add i32 %872, %444
  %874 = sub i32 %873, %446
  %875 = sub i32 %874, %447
  %876 = add i32 %875, %448
  %877 = add i32 %876, %450
  %878 = add i32 %877, %454
  %879 = add i32 %878, %455
  %880 = add i32 %879, %456
  %881 = sub i32 %880, %458
  %882 = sub i32 %881, %460
  %883 = sub i32 %882, %461
  %884 = sub i32 %883, %462
  %885 = add i32 %884, %463
  %886 = add i32 %885, %464
  %887 = add i32 %886, %469
  %888 = add i32 %887, %470
  %889 = sub i32 %888, %471
  %890 = add i32 %889, %473
  %891 = sub i32 %890, %474
  %892 = add i32 %891, %475
  %893 = sub i32 %892, %477
  %894 = add i32 %893, %478
  %895 = sub i32 %894, %480
  %896 = add i32 %895, %481
  %897 = sub i32 %896, %485
  %898 = add i32 %897, %486
  %899 = add i32 %898, %489
  %900 = add i32 %899, %493
  %901 = add i32 %900, %497
  %902 = sub i32 %901, %498
  %903 = add i32 %902, %499
  %904 = sub i32 %903, %21
  %905 = sub i32 %904, %269
  %906 = sub i32 %905, %502
  %907 = add i32 %906, %503
  %908 = sub i32 %907, %508
  %909 = add i32 %908, %509
  %910 = sub i32 %909, %511
  %911 = add i32 %910, %512
  %912 = sub i32 %911, %517
  %913 = add i32 %912, %529
  %914 = add i32 %913, %530
  %915 = sub i32 %914, %531
  %916 = add i32 %915, %533
  %917 = sub i32 %916, %535
  %918 = add i32 %917, %270
  %919 = add i32 %918, %286
  %920 = sub i32 %919, %309
  %921 = sub i32 %920, %312
  %922 = add i32 %921, %314
  %923 = add i32 %922, %326
  %924 = add i32 %923, %347
  %925 = sub i32 %924, %354
  %926 = sub i32 %925, %369
  %927 = sub i32 %926, %372
  %928 = sub i32 %927, %380
  %929 = sub i32 %928, %386
  %930 = sub i32 %929, %410
  %931 = sub i32 %930, %414
  %932 = sub i32 %931, %423
  %933 = add i32 %932, %424
  %934 = sub i32 %933, %445
  %935 = sub i32 %934, %452
  %936 = sub i32 %935, %466
  %937 = sub i32 %936, %468
  %938 = add i32 %937, %484
  %939 = add i32 %938, %487
  %940 = add i32 %939, %492
  %941 = sub i32 %940, %505
  %942 = sub i32 %941, %507
  %943 = sub i32 %942, %515
  %944 = sub i32 %943, %520
  %945 = sub i32 %944, %522
  %946 = sub i32 %945, %524
  %947 = sub i32 %946, %527
  %948 = sub i32 %947, %537
  %949 = add i32 %948, %540
  %950 = add i32 %949, %542
  %951 = add i32 %950, %544
  %952 = add i32 %951, %546
  %953 = sub i32 %952, %547
  %954 = add i32 %953, %548
  %955 = sub i32 %954, %304
  %956 = sub i32 %955, %345
  %957 = add i32 %956, %602
  %958 = add i32 %957, %607
  %959 = add i32 %958, %600
  %960 = add i32 %959, %595
  %961 = add i32 %960, %587
  %962 = icmp eq i32 %25, %961
  %963 = select i1 %962, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %964 = tail call i32 @puts(i8* nonnull dereferenceable(1) %963)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
