digraph "DFG for'main' function" {
	Node0x10c8248[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x10c82c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x10c8358[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x10c83b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x10c8838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10c8918[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x10c8a18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10c8ad8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x10c8b88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10c8de8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x10c8ea8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10c9e18[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10ca488[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x10ca580[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x10ca788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10ca8e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10ca9f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10caab8[shape=record, label="  ret i32 0"];
	Node0x10c8248 -> Node0x10c82c8;
	Node0x10c82c8 -> Node0x10c8358;
	Node0x10c8358 -> Node0x10c83b8;
	Node0x10c83b8 -> Node0x10c8838;
	Node0x10c8838 -> Node0x10c8918;
	Node0x10c8918 -> Node0x10c8a18;
	Node0x10c8a18 -> Node0x10c8ad8;
	Node0x10c8ad8 -> Node0x10c8b88;
	Node0x10c8b88 -> Node0x10c8de8;
	Node0x10c8de8 -> Node0x10c8ea8;
	Node0x10c8ea8 -> Node0x10c9e18;
	Node0x10c9e18 -> Node0x10ca488;
	Node0x10ca488 -> Node0x10ca580;
	Node0x10ca580 -> Node0x10ca788;
	Node0x10ca788 -> Node0x10ca8e8;
	Node0x10ca8e8 -> Node0x10ca9f8;
	Node0x10ca9f8 -> Node0x10caab8;
edge [color=red]
	Node0x10c8248 -> Node0x10c83b8;
	Node0x10c83b8 -> Node0x10c8838;
	Node0x10c82c8 -> Node0x10c8918;
	Node0x10c8918 -> Node0x10c8a18;
	Node0x10c8358 -> Node0x10c8ad8;
	Node0x10c8ad8 -> Node0x10c8b88;
	Node0x10c8248 -> Node0x10c8de8;
	Node0x10c82c8 -> Node0x10c8de8;
	Node0x10c8358 -> Node0x10c8de8;
	Node0x10c8248 -> Node0x10c8ea8;
	Node0x10c82c8 -> Node0x10c9e18;
	Node0x10c8358 -> Node0x10ca488;
	Node0x10c8ea8 -> Node0x10ca580;
	Node0x10c9e18 -> Node0x10ca580;
	Node0x10ca488 -> Node0x10ca580;
	Node0x10c8ad8 -> Node0x10ca788;
	Node0x10c8918 -> Node0x10ca8e8;
	Node0x10c83b8 -> Node0x10ca9f8;
}
