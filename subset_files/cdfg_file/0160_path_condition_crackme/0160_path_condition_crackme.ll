; ModuleID = '../.././c_source_file/0160_path_condition_crackme.c'
source_filename = "../.././c_source_file/0160_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = xor i32 %4, -1
  %7 = shl i32 %6, 1
  %8 = or i32 %4, %3
  %9 = or i32 %2, %0
  %10 = xor i32 %1, %0
  %11 = xor i32 %10, -1
  %12 = and i32 %9, %11
  %13 = xor i32 %2, -1
  %14 = and i32 %13, %0
  %15 = or i32 %14, %1
  %16 = sub i32 %12, %15
  %17 = add i32 %16, %8
  %18 = add i32 %17, %7
  %19 = xor i32 %4, %3
  %20 = mul i32 %19, -2
  %21 = shl i32 %3, 1
  %22 = sub i32 %20, %21
  %23 = or i32 %22, 1
  %24 = and i32 %6, %3
  %25 = or i32 %6, %3
  %26 = and i32 %4, %3
  %27 = shl i32 %26, 1
  %28 = xor i32 %27, -2
  %29 = xor i32 %8, -1
  %30 = xor i32 %25, -1
  %31 = mul i32 %24, 9
  %32 = and i32 %2, %0
  %33 = xor i32 %1, -1
  %34 = or i32 %33, %0
  %35 = xor i32 %32, %34
  %36 = or i32 %1, %0
  %37 = xor i32 %2, %0
  %38 = and i32 %37, %36
  %39 = and i32 %11, %2
  %40 = xor i32 %36, -1
  %41 = xor i32 %2, %1
  %42 = and i32 %41, %34
  %43 = shl i32 %42, 2
  %44 = and i32 %1, %0
  %45 = or i32 %13, %1
  %46 = xor i32 %45, -1
  %47 = or i32 %44, %46
  %48 = and i32 %2, %1
  %49 = and i32 %48, %0
  %50 = xor i32 %0, -1
  %51 = and i32 %41, %50
  %52 = or i32 %49, %51
  %53 = shl i32 %52, 1
  %54 = xor i32 %9, -1
  %55 = or i32 %54, %11
  %56 = shl i32 %55, 1
  %57 = and i32 %48, %50
  %58 = or i32 %2, %1
  %59 = and i32 %58, %0
  %60 = xor i32 %57, -1
  %61 = xor i32 %59, %60
  %62 = xor i32 %37, -1
  %63 = and i32 %34, %62
  %64 = xor i32 %49, -1
  %65 = xor i32 %51, %64
  %66 = and i32 %33, %0
  %67 = or i32 %48, %66
  %68 = and i32 %37, %34
  %69 = or i32 %58, %0
  %70 = or i32 %32, %33
  %71 = and i32 %33, %2
  %72 = and i32 %71, %0
  %73 = or i32 %33, %2
  %74 = and i32 %73, %50
  %75 = xor i32 %74, 2147483647
  %76 = xor i32 %75, %72
  %77 = shl i32 %76, 1
  %78 = xor i32 %66, -1
  %79 = add i32 %66, 1
  %80 = or i32 %66, %62
  %81 = or i32 %45, %50
  %82 = and i32 %78, %2
  %83 = or i32 %14, %10
  %84 = shl i32 %83, 1
  %85 = xor i32 %34, -1
  %86 = or i32 %32, %85
  %87 = and i32 %13, %1
  %88 = xor i32 %87, -1
  %89 = add i32 %87, 1
  %90 = xor i32 %41, -1
  %91 = or i32 %90, %0
  %92 = or i32 %87, %50
  %93 = xor i32 %44, -1
  %94 = and i32 %13, %93
  %95 = or i32 %41, %85
  %96 = shl i32 %95, 2
  %97 = and i32 %62, %1
  %98 = xor i32 %14, -1
  %99 = add i32 %14, 1
  %100 = xor i32 %48, -1
  %101 = xor i32 %66, %100
  %102 = xor i32 %58, %44
  %103 = xor i32 %41, %0
  %104 = xor i32 %103, -1
  %105 = or i32 %49, %104
  %106 = and i32 %41, %36
  %107 = xor i32 %72, %104
  %108 = or i32 %57, %59
  %109 = and i32 %88, %0
  %110 = or i32 %66, %2
  %111 = and i32 %62, %33
  %112 = shl i32 %111, 1
  %113 = xor i32 %112, -1
  %114 = or i32 %13, %0
  %115 = xor i32 %114, -1
  %116 = or i32 %115, %1
  %117 = or i32 %90, %85
  %118 = or i32 %41, %66
  %119 = shl i32 %118, 1
  %120 = and i32 %88, %50
  %121 = or i32 %37, %85
  %122 = xor i32 %32, %36
  %123 = and i32 %100, %0
  %124 = and i32 %98, %33
  %125 = or i32 %11, %2
  %126 = shl i32 %125, 1
  %127 = and i32 %9, %33
  %128 = or i32 %72, %103
  %129 = and i32 %62, %78
  %130 = and i32 %9, %1
  %131 = or i32 %62, %11
  %132 = and i32 %98, %11
  %133 = or i32 %10, %62
  %134 = xor i32 %32, %88
  %135 = xor i32 %48, %0
  %136 = xor i32 %49, %103
  %137 = or i32 %13, %40
  %138 = and i32 %41, %0
  %139 = or i32 %32, %1
  %140 = xor i32 %87, %0
  %141 = xor i32 %46, %0
  %142 = shl i32 %141, 1
  %143 = xor i32 %93, %2
  %144 = or i32 %32, %10
  %145 = shl i32 %144, 1
  %146 = xor i32 %58, %0
  %147 = and i32 %37, %78
  %148 = and i32 %58, %50
  %149 = and i32 %62, %11
  %150 = and i32 %114, %1
  %151 = xor i32 %45, %44
  %152 = and i32 %13, %11
  %153 = or i32 %44, %2
  %154 = shl i32 %153, 1
  %155 = or i32 %85, %2
  %156 = shl i32 %155, 1
  %157 = add i32 %37, 1
  %158 = and i32 %37, %33
  %159 = or i32 %41, %44
  %160 = xor i32 %14, %100
  %161 = xor i32 %32, -1
  %162 = xor i32 %161, %1
  %163 = or i32 %115, %11
  %164 = xor i32 %78, %2
  %165 = and i32 %161, %1
  %166 = or i32 %10, %54
  %167 = or i32 %44, %13
  %168 = shl i32 %167, 1
  %169 = xor i32 %32, %1
  %170 = xor i32 %36, %2
  %171 = or i32 %62, %1
  %172 = add i32 %32, 1
  %173 = and i32 %45, %50
  %174 = or i32 %14, %33
  %175 = and i32 %37, %93
  %176 = or i32 %58, %50
  %177 = or i32 %13, %11
  %178 = or i32 %48, %0
  %179 = xor i32 %66, %88
  %180 = or i32 %10, %2
  %181 = or i32 %100, %50
  %182 = and i32 %71, %50
  %183 = or i32 %41, %50
  %184 = xor i32 %182, %183
  %185 = and i32 %10, %161
  %186 = or i32 %62, %40
  %187 = and i32 %90, %50
  %188 = or i32 %37, %44
  %189 = or i32 %100, %0
  %190 = xor i32 %58, -1
  %191 = or i32 %44, %190
  %192 = xor i32 %98, %1
  %193 = or i32 %62, %33
  %194 = xor i32 %32, %58
  %195 = and i32 %100, %50
  %196 = shl i32 %195, 1
  %197 = or i32 %37, %10
  %198 = xor i32 %45, %0
  %199 = and i32 %114, %33
  %200 = xor i32 %44, %2
  %201 = and i32 %36, %62
  %202 = or i32 %10, %115
  %203 = and i32 %36, %90
  %204 = or i32 %66, %90
  %205 = xor i32 %100, %0
  %206 = or i32 %190, %50
  %207 = shl i32 %206, 1
  %208 = xor i32 %14, %1
  %209 = or i32 %14, %11
  %210 = or i32 %87, %66
  %211 = shl i32 %210, 1
  %212 = and i32 %73, %0
  %213 = xor i32 %212, -1
  %214 = xor i32 %182, %213
  %215 = and i32 %10, %13
  %216 = xor i32 %66, %2
  %217 = and i32 %10, %2
  %218 = add i32 %58, 1
  %219 = and i32 %34, %90
  %220 = or i32 %37, %40
  %221 = shl i32 %220, 1
  %222 = or i32 %49, %146
  %223 = and i32 %37, %11
  %224 = and i32 %114, %10
  %225 = or i32 %32, %190
  %226 = xor i32 %183, -1
  %227 = or i32 %182, %226
  %228 = or i32 %88, %50
  %229 = and i32 %41, %78
  %230 = shl i32 %229, 1
  %231 = and i32 %10, %98
  %232 = or i32 %37, %11
  %233 = xor i32 %73, %50
  %234 = xor i32 %233, %72
  %235 = or i32 %87, %0
  %236 = or i32 %46, %50
  %237 = or i32 %45, %0
  %238 = or i32 %62, %85
  %239 = or i32 %37, %33
  %240 = xor i32 %34, %2
  %241 = or i32 %44, %62
  %242 = and i32 %37, %10
  %243 = and i32 %161, %33
  %244 = and i32 %10, %62
  %245 = or i32 %49, %148
  %246 = and i32 %9, %10
  %247 = or i32 %41, %0
  %248 = xor i32 %247, -1
  %249 = or i32 %72, %248
  %250 = and i32 %34, %13
  %251 = xor i32 %9, %44
  %252 = and i32 %62, %93
  %253 = and i32 %98, %1
  %254 = or i32 %37, %66
  %255 = and i32 %114, %11
  %256 = or i32 %14, %46
  %257 = xor i32 %9, %1
  %258 = xor i32 %146, %64
  %259 = xor i32 %138, %60
  %260 = or i32 %115, %33
  %261 = xor i32 %114, %44
  %262 = and i32 %90, %93
  %263 = or i32 %66, %13
  %264 = or i32 %10, %13
  %265 = xor i32 %148, 2147483647
  %266 = xor i32 %265, %49
  %267 = xor i32 %14, %45
  %268 = shl i32 %267, 1
  %269 = xor i32 %85, %2
  %270 = or i32 %90, %40
  %271 = or i32 %88, %0
  %272 = or i32 %72, %74
  %273 = xor i32 %114, %1
  %274 = and i32 %36, %13
  %275 = or i32 %190, %0
  %276 = or i32 %32, %11
  %277 = shl i32 %276, 1
  %278 = xor i32 %72, %247
  %279 = or i32 %32, %87
  %280 = and i32 %13, %78
  %281 = and i32 %90, %78
  %282 = and i32 %93, %2
  %283 = and i32 %41, %93
  %284 = or i32 %54, %33
  %285 = and i32 %36, %2
  %286 = or i32 %182, %212
  %287 = or i32 %44, %90
  %288 = and i32 %90, %0
  %289 = and i32 %190, %50
  %290 = mul i32 %289, -7
  %291 = and i32 %87, %50
  %292 = mul i32 %291, 13
  %293 = and i32 %190, %0
  %294 = mul i32 %293, -21
  %295 = and i32 %87, %0
  %296 = mul i32 %295, 18
  %297 = and i32 %46, %50
  %298 = and i32 %46, %0
  %299 = add i32 %162, %170
  %300 = add i32 %299, %109
  %301 = add i32 %300, %26
  %302 = shl i32 %301, 2
  %303 = sub i32 %40, %45
  %304 = sub i32 %303, %281
  %305 = add i32 %304, %57
  %306 = mul i32 %305, 3
  %307 = add i32 %49, %29
  %308 = add i32 %307, %30
  %309 = mul i32 %308, 6
  %310 = sub i32 %79, %82
  %311 = add i32 %310, %173
  %312 = mul i32 %311, 5
  %313 = sub i32 -2, %0
  %314 = add i32 %313, %216
  %315 = add i32 %314, %100
  %316 = add i32 %315, %14
  %317 = add i32 %316, %46
  %318 = add i32 %317, %297
  %319 = add i32 %318, %262
  %320 = add i32 %319, %253
  %321 = add i32 %320, %241
  %322 = add i32 %321, %209
  %323 = add i32 %322, %208
  %324 = add i32 %323, %204
  %325 = add i32 %324, %197
  %326 = add i32 %325, %178
  %327 = add i32 %326, %149
  %328 = add i32 %327, %121
  %329 = add i32 %328, %51
  %330 = add i32 %329, %80
  %331 = add i32 %330, %266
  %332 = shl i32 %331, 1
  %333 = shl i32 %1, 1
  %334 = add i32 %333, 3
  %335 = add i32 %334, %44
  %336 = sub i32 %335, %2
  %337 = add i32 %336, %13
  %338 = sub i32 %337, %36
  %339 = sub i32 %338, %66
  %340 = sub i32 %339, %39
  %341 = add i32 %340, %89
  %342 = sub i32 %341, %94
  %343 = add i32 %342, %99
  %344 = add i32 %343, %110
  %345 = add i32 %344, %58
  %346 = add i32 %345, %137
  %347 = sub i32 %346, %143
  %348 = sub i32 %347, %152
  %349 = add i32 %348, %157
  %350 = add i32 %349, %164
  %351 = sub i32 %350, %114
  %352 = add i32 %351, %172
  %353 = sub i32 %352, %177
  %354 = add i32 %353, %180
  %355 = sub i32 %354, %37
  %356 = add i32 %355, %200
  %357 = sub i32 %356, %215
  %358 = sub i32 %357, %217
  %359 = add i32 %358, %218
  %360 = add i32 %359, 1
  %361 = add i32 %360, %240
  %362 = add i32 %361, %250
  %363 = sub i32 %362, %263
  %364 = sub i32 %363, %264
  %365 = sub i32 %364, %269
  %366 = sub i32 %365, %32
  %367 = sub i32 %366, %274
  %368 = add i32 %367, %48
  %369 = sub i32 %368, %280
  %370 = sub i32 %369, %282
  %371 = add i32 %370, %285
  %372 = add i32 %371, %4
  %373 = add i32 %372, %35
  %374 = add i32 %373, %38
  %375 = sub i32 %374, %47
  %376 = add i32 %375, %63
  %377 = add i32 %376, %67
  %378 = add i32 %377, %68
  %379 = sub i32 %378, %69
  %380 = add i32 %379, %70
  %381 = add i32 %380, %81
  %382 = sub i32 %381, %86
  %383 = add i32 %382, %91
  %384 = add i32 %383, %92
  %385 = sub i32 %384, %97
  %386 = sub i32 %385, %101
  %387 = sub i32 %386, %102
  %388 = sub i32 %387, %106
  %389 = sub i32 %388, %116
  %390 = sub i32 %389, %117
  %391 = sub i32 %390, %120
  %392 = sub i32 %391, %122
  %393 = sub i32 %392, %123
  %394 = add i32 %393, %124
  %395 = sub i32 %394, %126
  %396 = add i32 %395, %127
  %397 = add i32 %396, %129
  %398 = sub i32 %397, %130
  %399 = add i32 %398, %131
  %400 = sub i32 %399, %132
  %401 = sub i32 %400, %133
  %402 = sub i32 %401, %134
  %403 = sub i32 %402, %135
  %404 = add i32 %403, %138
  %405 = add i32 %404, %139
  %406 = add i32 %405, %140
  %407 = add i32 %406, %146
  %408 = sub i32 %407, %147
  %409 = add i32 %408, %148
  %410 = sub i32 %409, %150
  %411 = add i32 %410, %151
  %412 = sub i32 %411, %154
  %413 = sub i32 %412, %156
  %414 = sub i32 %413, %158
  %415 = add i32 %414, %159
  %416 = add i32 %415, %160
  %417 = add i32 %416, %163
  %418 = sub i32 %417, %165
  %419 = sub i32 %418, %166
  %420 = sub i32 %419, %168
  %421 = add i32 %420, %59
  %422 = sub i32 %421, %169
  %423 = sub i32 %422, %103
  %424 = sub i32 %423, %171
  %425 = sub i32 %424, %174
  %426 = add i32 %425, %175
  %427 = add i32 %426, %176
  %428 = sub i32 %427, %179
  %429 = add i32 %428, %181
  %430 = add i32 %429, %185
  %431 = add i32 %430, %186
  %432 = sub i32 %431, %187
  %433 = add i32 %432, %188
  %434 = sub i32 %433, %189
  %435 = sub i32 %434, %191
  %436 = sub i32 %435, %192
  %437 = add i32 %436, %193
  %438 = sub i32 %437, %194
  %439 = sub i32 %438, %198
  %440 = add i32 %439, %199
  %441 = sub i32 %440, %201
  %442 = add i32 %441, %202
  %443 = add i32 %442, %203
  %444 = add i32 %443, %205
  %445 = sub i32 %444, %219
  %446 = add i32 %445, %223
  %447 = add i32 %446, %224
  %448 = add i32 %447, %225
  %449 = add i32 %448, %228
  %450 = sub i32 %449, %231
  %451 = add i32 %450, %232
  %452 = add i32 %451, %235
  %453 = add i32 %452, %236
  %454 = add i32 %453, %237
  %455 = add i32 %454, %238
  %456 = add i32 %455, %239
  %457 = sub i32 %456, %183
  %458 = sub i32 %457, %242
  %459 = add i32 %458, %243
  %460 = sub i32 %459, %244
  %461 = add i32 %460, %246
  %462 = sub i32 %461, %251
  %463 = sub i32 %462, %252
  %464 = add i32 %463, %254
  %465 = add i32 %464, %255
  %466 = sub i32 %465, %256
  %467 = sub i32 %466, %257
  %468 = add i32 %467, %260
  %469 = sub i32 %468, %261
  %470 = add i32 %469, %270
  %471 = sub i32 %470, %271
  %472 = sub i32 %471, %273
  %473 = sub i32 %472, %275
  %474 = sub i32 %473, %279
  %475 = add i32 %474, %283
  %476 = add i32 %475, %284
  %477 = sub i32 %476, %287
  %478 = sub i32 %477, %288
  %479 = add i32 %478, %298
  %480 = add i32 %479, %19
  %481 = add i32 %480, %24
  %482 = add i32 %481, %25
  %483 = sub i32 %482, %43
  %484 = sub i32 %483, %56
  %485 = sub i32 %484, %61
  %486 = add i32 %485, %65
  %487 = sub i32 %486, %84
  %488 = sub i32 %487, %96
  %489 = sub i32 %488, %105
  %490 = add i32 %489, %107
  %491 = add i32 %490, %108
  %492 = add i32 %491, %113
  %493 = sub i32 %492, %119
  %494 = add i32 %493, %128
  %495 = add i32 %494, %136
  %496 = sub i32 %495, %142
  %497 = sub i32 %496, %145
  %498 = add i32 %497, %184
  %499 = sub i32 %498, %196
  %500 = sub i32 %499, %207
  %501 = sub i32 %500, %211
  %502 = add i32 %501, %214
  %503 = sub i32 %502, %221
  %504 = add i32 %503, %222
  %505 = add i32 %504, %227
  %506 = sub i32 %505, %230
  %507 = sub i32 %506, %234
  %508 = add i32 %507, %245
  %509 = add i32 %508, %249
  %510 = add i32 %509, %258
  %511 = add i32 %510, %259
  %512 = sub i32 %511, %268
  %513 = add i32 %512, %272
  %514 = sub i32 %513, %277
  %515 = sub i32 %514, %278
  %516 = add i32 %515, %286
  %517 = add i32 %516, %290
  %518 = add i32 %517, %292
  %519 = add i32 %518, %294
  %520 = add i32 %519, %296
  %521 = add i32 %520, %31
  %522 = sub i32 %521, %53
  %523 = sub i32 %522, %28
  %524 = sub i32 %523, %77
  %525 = add i32 %524, %312
  %526 = add i32 %525, %23
  %527 = add i32 %526, %306
  %528 = add i32 %527, %309
  %529 = add i32 %528, %302
  %530 = add i32 %529, %332
  %531 = icmp eq i32 %18, %530
  %532 = select i1 %531, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %533 = tail call i32 @puts(i8* nonnull dereferenceable(1) %532)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
