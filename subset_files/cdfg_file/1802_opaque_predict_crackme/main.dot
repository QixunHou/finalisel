digraph "DFG for'main' function" {
	Node0x5135e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x513668[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5136f8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x513758[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x513bd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x513cb8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x513db8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x513e78[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x513f28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x514188[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x514248[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5151b8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x515828[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x515920[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x515b28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x515c88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x515d98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x515e58[shape=record, label="  ret i32 0"];
	Node0x5135e8 -> Node0x513668;
	Node0x513668 -> Node0x5136f8;
	Node0x5136f8 -> Node0x513758;
	Node0x513758 -> Node0x513bd8;
	Node0x513bd8 -> Node0x513cb8;
	Node0x513cb8 -> Node0x513db8;
	Node0x513db8 -> Node0x513e78;
	Node0x513e78 -> Node0x513f28;
	Node0x513f28 -> Node0x514188;
	Node0x514188 -> Node0x514248;
	Node0x514248 -> Node0x5151b8;
	Node0x5151b8 -> Node0x515828;
	Node0x515828 -> Node0x515920;
	Node0x515920 -> Node0x515b28;
	Node0x515b28 -> Node0x515c88;
	Node0x515c88 -> Node0x515d98;
	Node0x515d98 -> Node0x515e58;
edge [color=red]
	Node0x5135e8 -> Node0x513758;
	Node0x513758 -> Node0x513bd8;
	Node0x513668 -> Node0x513cb8;
	Node0x513cb8 -> Node0x513db8;
	Node0x5136f8 -> Node0x513e78;
	Node0x513e78 -> Node0x513f28;
	Node0x5135e8 -> Node0x514188;
	Node0x513668 -> Node0x514188;
	Node0x5136f8 -> Node0x514188;
	Node0x5135e8 -> Node0x514248;
	Node0x513668 -> Node0x5151b8;
	Node0x5136f8 -> Node0x515828;
	Node0x514248 -> Node0x515920;
	Node0x5151b8 -> Node0x515920;
	Node0x515828 -> Node0x515920;
	Node0x513e78 -> Node0x515b28;
	Node0x513cb8 -> Node0x515c88;
	Node0x513758 -> Node0x515d98;
}
