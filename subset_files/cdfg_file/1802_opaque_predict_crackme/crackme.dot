digraph "DFG for'crackme' function" {
	Node0x510dd0[shape=record, label="  %4 = xor i32 %2, -1"];
	Node0x510e90[shape=record, label="  %5 = and i32 %4, %0"];
	Node0x510f00[shape=record, label="  %6 = xor i32 %5, %1"];
	Node0x510f70[shape=record, label="  %7 = sub i32 0, %6"];
	Node0x510fe0[shape=record, label="  %8 = and i32 %2, %1"];
	Node0x511050[shape=record, label="  %9 = and i32 %8, %0"];
	Node0x5110c0[shape=record, label="  %10 = xor i32 %0, -1"];
	Node0x511130[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x5111a0[shape=record, label="  %12 = and i32 %11, %10"];
	Node0x511210[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x511280[shape=record, label="  %14 = xor i32 %9, %13"];
	Node0x5112f0[shape=record, label="  %15 = xor i32 %1, -1"];
	Node0x511360[shape=record, label="  %16 = and i32 %15, %2"];
	Node0x5113d0[shape=record, label="  %17 = and i32 %16, %10"];
	Node0x511440[shape=record, label="  %18 = or i32 %11, %10"];
	Node0x5114b0[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x511520[shape=record, label="  %20 = or i32 %17, %19"];
	Node0x511590[shape=record, label="  %21 = and i32 %4, %1"];
	Node0x511600[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x511670[shape=record, label="  %23 = and i32 %16, %0"];
	Node0x5116e0[shape=record, label="  %24 = or i32 %15, %2"];
	Node0x511780[shape=record, label="  %25 = xor i32 %24, 2147483647"];
	Node0x5117f0[shape=record, label="  %26 = or i32 %25, %0"];
	Node0x511860[shape=record, label="  %27 = xor i32 %26, %23"];
	Node0x511900[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x511970[shape=record, label="  %29 = xor i32 %1, %0"];
	Node0x5119e0[shape=record, label="  %30 = xor i32 %2, %0"];
	Node0x511a50[shape=record, label="  %31 = and i32 %30, %29"];
	Node0x511ac0[shape=record, label="  %32 = xor i32 %31, -1"];
	Node0x511d40[shape=record, label="  %33 = or i32 %10, %1"];
	Node0x511db0[shape=record, label="  %34 = and i32 %33, %2"];
	Node0x511e20[shape=record, label="  %35 = and i32 %2, %0"];
	Node0x511e90[shape=record, label="  %36 = and i32 %1, %0"];
	Node0x511f00[shape=record, label="  %37 = or i32 %30, %36"];
	Node0x511f70[shape=record, label="  %38 = or i32 %9, %12"];
	Node0x511fe0[shape=record, label="  %39 = and i32 %24, %0"];
	Node0x512050[shape=record, label="  %40 = xor i32 %39, -1"];
	Node0x5120c0[shape=record, label="  %41 = xor i32 %17, %40"];
	Node0x512130[shape=record, label="  %42 = or i32 %2, %1"];
	Node0x5121a0[shape=record, label="  %43 = xor i32 %42, 2147483647"];
	Node0x512210[shape=record, label="  %44 = and i32 %43, %10"];
	Node0x512280[shape=record, label="  %45 = shl i32 %44, 1"];
	Node0x5122f0[shape=record, label="  %46 = and i32 %21, %10"];
	Node0x512360[shape=record, label="  %47 = shl i32 %46, 1"];
	Node0x5123d0[shape=record, label="  %48 = and i32 %21, %0"];
	Node0x512440[shape=record, label="  %49 = shl i32 %48, 1"];
	Node0x5124b0[shape=record, label="  %50 = and i32 %8, %10"];
	Node0x512520[shape=record, label="  %51 = sub i32 %50, %34"];
	Node0x5125c0[shape=record, label="  %52 = mul i32 %51, 3"];
	Node0x512630[shape=record, label="  %53 = add i32 %22, %4"];
	Node0x5126a0[shape=record, label="  %54 = add i32 %53, %35"];
	Node0x512710[shape=record, label="  %55 = add i32 %54, %32"];
	Node0x512780[shape=record, label="  %56 = sub i32 %55, %18"];
	Node0x5127f0[shape=record, label="  %57 = sub i32 %56, %37"];
	Node0x512860[shape=record, label="  %58 = add i32 %57, %17"];
	Node0x5128d0[shape=record, label="  %59 = sub i32 %58, %23"];
	Node0x512940[shape=record, label="  %60 = sub i32 %59, %14"];
	Node0x5129b0[shape=record, label="  %61 = add i32 %60, %20"];
	Node0x512a20[shape=record, label="  %62 = add i32 %61, %38"];
	Node0x512a90[shape=record, label="  %63 = add i32 %62, %41"];
	Node0x512b00[shape=record, label="  %64 = sub i32 %63, %47"];
	Node0x512f80[shape=record, label="  %65 = add i32 %64, %49"];
	Node0x512ff0[shape=record, label="  %66 = sub i32 %65, %45"];
	Node0x513060[shape=record, label="  %67 = add i32 %66, %52"];
	Node0x5130d0[shape=record, label="  %68 = sub i32 %67, %28"];
	Node0x513140[shape=record, label="  %69 = icmp eq i32 %68, %7"];
	Node0x4b1268[shape=record, label="  %70 = select i1 %69, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x5133d0[shape=record, label="  %71 = tail call i32 @puts(i8* nonnull dereferenceable(1) %70)"];
	Node0x513420[shape=record, label="  ret void"];
	Node0x510dd0 -> Node0x510e90;
	Node0x510e90 -> Node0x510f00;
	Node0x510f00 -> Node0x510f70;
	Node0x510f70 -> Node0x510fe0;
	Node0x510fe0 -> Node0x511050;
	Node0x511050 -> Node0x5110c0;
	Node0x5110c0 -> Node0x511130;
	Node0x511130 -> Node0x5111a0;
	Node0x5111a0 -> Node0x511210;
	Node0x511210 -> Node0x511280;
	Node0x511280 -> Node0x5112f0;
	Node0x5112f0 -> Node0x511360;
	Node0x511360 -> Node0x5113d0;
	Node0x5113d0 -> Node0x511440;
	Node0x511440 -> Node0x5114b0;
	Node0x5114b0 -> Node0x511520;
	Node0x511520 -> Node0x511590;
	Node0x511590 -> Node0x511600;
	Node0x511600 -> Node0x511670;
	Node0x511670 -> Node0x5116e0;
	Node0x5116e0 -> Node0x511780;
	Node0x511780 -> Node0x5117f0;
	Node0x5117f0 -> Node0x511860;
	Node0x511860 -> Node0x511900;
	Node0x511900 -> Node0x511970;
	Node0x511970 -> Node0x5119e0;
	Node0x5119e0 -> Node0x511a50;
	Node0x511a50 -> Node0x511ac0;
	Node0x511ac0 -> Node0x511d40;
	Node0x511d40 -> Node0x511db0;
	Node0x511db0 -> Node0x511e20;
	Node0x511e20 -> Node0x511e90;
	Node0x511e90 -> Node0x511f00;
	Node0x511f00 -> Node0x511f70;
	Node0x511f70 -> Node0x511fe0;
	Node0x511fe0 -> Node0x512050;
	Node0x512050 -> Node0x5120c0;
	Node0x5120c0 -> Node0x512130;
	Node0x512130 -> Node0x5121a0;
	Node0x5121a0 -> Node0x512210;
	Node0x512210 -> Node0x512280;
	Node0x512280 -> Node0x5122f0;
	Node0x5122f0 -> Node0x512360;
	Node0x512360 -> Node0x5123d0;
	Node0x5123d0 -> Node0x512440;
	Node0x512440 -> Node0x5124b0;
	Node0x5124b0 -> Node0x512520;
	Node0x512520 -> Node0x5125c0;
	Node0x5125c0 -> Node0x512630;
	Node0x512630 -> Node0x5126a0;
	Node0x5126a0 -> Node0x512710;
	Node0x512710 -> Node0x512780;
	Node0x512780 -> Node0x5127f0;
	Node0x5127f0 -> Node0x512860;
	Node0x512860 -> Node0x5128d0;
	Node0x5128d0 -> Node0x512940;
	Node0x512940 -> Node0x5129b0;
	Node0x5129b0 -> Node0x512a20;
	Node0x512a20 -> Node0x512a90;
	Node0x512a90 -> Node0x512b00;
	Node0x512b00 -> Node0x512f80;
	Node0x512f80 -> Node0x512ff0;
	Node0x512ff0 -> Node0x513060;
	Node0x513060 -> Node0x5130d0;
	Node0x5130d0 -> Node0x513140;
	Node0x513140 -> Node0x4b1268;
	Node0x4b1268 -> Node0x5133d0;
	Node0x5133d0 -> Node0x513420;
edge [color=red]
	Node0x510dd0 -> Node0x510e90;
	Node0x510e90 -> Node0x510f00;
	Node0x510f00 -> Node0x510f70;
	Node0x510fe0 -> Node0x511050;
	Node0x511130 -> Node0x5111a0;
	Node0x5110c0 -> Node0x5111a0;
	Node0x5111a0 -> Node0x511210;
	Node0x511050 -> Node0x511280;
	Node0x511210 -> Node0x511280;
	Node0x5112f0 -> Node0x511360;
	Node0x511360 -> Node0x5113d0;
	Node0x5110c0 -> Node0x5113d0;
	Node0x511130 -> Node0x511440;
	Node0x5110c0 -> Node0x511440;
	Node0x511440 -> Node0x5114b0;
	Node0x5113d0 -> Node0x511520;
	Node0x5114b0 -> Node0x511520;
	Node0x510dd0 -> Node0x511590;
	Node0x511590 -> Node0x511600;
	Node0x511360 -> Node0x511670;
	Node0x5112f0 -> Node0x5116e0;
	Node0x5116e0 -> Node0x511780;
	Node0x511780 -> Node0x5117f0;
	Node0x5117f0 -> Node0x511860;
	Node0x511670 -> Node0x511860;
	Node0x511860 -> Node0x511900;
	Node0x5119e0 -> Node0x511a50;
	Node0x511970 -> Node0x511a50;
	Node0x511a50 -> Node0x511ac0;
	Node0x5110c0 -> Node0x511d40;
	Node0x511d40 -> Node0x511db0;
	Node0x5119e0 -> Node0x511f00;
	Node0x511e90 -> Node0x511f00;
	Node0x511050 -> Node0x511f70;
	Node0x5111a0 -> Node0x511f70;
	Node0x5116e0 -> Node0x511fe0;
	Node0x511fe0 -> Node0x512050;
	Node0x5113d0 -> Node0x5120c0;
	Node0x512050 -> Node0x5120c0;
	Node0x512130 -> Node0x5121a0;
	Node0x5121a0 -> Node0x512210;
	Node0x5110c0 -> Node0x512210;
	Node0x512210 -> Node0x512280;
	Node0x511590 -> Node0x5122f0;
	Node0x5110c0 -> Node0x5122f0;
	Node0x5122f0 -> Node0x512360;
	Node0x511590 -> Node0x5123d0;
	Node0x5123d0 -> Node0x512440;
	Node0x510fe0 -> Node0x5124b0;
	Node0x5110c0 -> Node0x5124b0;
	Node0x5124b0 -> Node0x512520;
	Node0x511db0 -> Node0x512520;
	Node0x512520 -> Node0x5125c0;
	Node0x511600 -> Node0x512630;
	Node0x510dd0 -> Node0x512630;
	Node0x512630 -> Node0x5126a0;
	Node0x511e20 -> Node0x5126a0;
	Node0x5126a0 -> Node0x512710;
	Node0x511ac0 -> Node0x512710;
	Node0x512710 -> Node0x512780;
	Node0x511440 -> Node0x512780;
	Node0x512780 -> Node0x5127f0;
	Node0x511f00 -> Node0x5127f0;
	Node0x5127f0 -> Node0x512860;
	Node0x5113d0 -> Node0x512860;
	Node0x512860 -> Node0x5128d0;
	Node0x511670 -> Node0x5128d0;
	Node0x5128d0 -> Node0x512940;
	Node0x511280 -> Node0x512940;
	Node0x512940 -> Node0x5129b0;
	Node0x511520 -> Node0x5129b0;
	Node0x5129b0 -> Node0x512a20;
	Node0x511f70 -> Node0x512a20;
	Node0x512a20 -> Node0x512a90;
	Node0x5120c0 -> Node0x512a90;
	Node0x512a90 -> Node0x512b00;
	Node0x512360 -> Node0x512b00;
	Node0x512b00 -> Node0x512f80;
	Node0x512440 -> Node0x512f80;
	Node0x512f80 -> Node0x512ff0;
	Node0x512280 -> Node0x512ff0;
	Node0x512ff0 -> Node0x513060;
	Node0x5125c0 -> Node0x513060;
	Node0x513060 -> Node0x5130d0;
	Node0x511900 -> Node0x5130d0;
	Node0x5130d0 -> Node0x513140;
	Node0x510f70 -> Node0x513140;
	Node0x513140 -> Node0x4b1268;
	Node0x4b1268 -> Node0x5133d0;
}
