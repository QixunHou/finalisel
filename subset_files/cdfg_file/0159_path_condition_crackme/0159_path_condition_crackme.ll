; ModuleID = '../.././c_source_file/0159_path_condition_crackme.c'
source_filename = "../.././c_source_file/0159_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %2, -1
  %10 = and i32 %9, %1
  %11 = or i32 %10, %8
  %12 = xor i32 %4, -1
  %13 = and i32 %5, %3
  %14 = xor i32 %13, -1
  %15 = or i32 %14, %12
  %16 = add i32 %15, %11
  %17 = xor i32 %2, %0
  %18 = or i32 %17, %1
  %19 = or i32 %9, %0
  %20 = xor i32 %19, -1
  %21 = xor i32 %1, %0
  %22 = and i32 %21, %9
  %23 = xor i32 %17, -1
  %24 = and i32 %21, %23
  %25 = or i32 %17, %8
  %26 = shl i32 %25, 1
  %27 = or i32 %21, %2
  %28 = and i32 %2, %0
  %29 = xor i32 %0, -1
  %30 = and i32 %19, %21
  %31 = and i32 %2, %1
  %32 = xor i32 %31, -1
  %33 = and i32 %32, %29
  %34 = or i32 %1, %0
  %35 = xor i32 %21, -1
  %36 = or i32 %35, %2
  %37 = or i32 %9, %35
  %38 = or i32 %2, %1
  %39 = xor i32 %38, -1
  %40 = or i32 %39, %0
  %41 = or i32 %20, %35
  %42 = and i32 %1, %0
  %43 = or i32 %38, %0
  %44 = shl i32 %43, 1
  %45 = and i32 %17, %1
  %46 = shl i32 %45, 1
  %47 = xor i32 %28, -1
  %48 = and i32 %47, %7
  %49 = xor i32 %8, -1
  %50 = and i32 %49, %2
  %51 = xor i32 %2, %1
  %52 = or i32 %51, %42
  %53 = xor i32 %42, %2
  %54 = and i32 %9, %0
  %55 = or i32 %54, %31
  %56 = and i32 %47, %1
  %57 = and i32 %7, %2
  %58 = and i32 %57, %0
  %59 = or i32 %7, %2
  %60 = and i32 %59, %29
  %61 = or i32 %58, %60
  %62 = shl i32 %61, 1
  %63 = or i32 %7, %0
  %64 = xor i32 %63, -1
  %65 = or i32 %17, %64
  %66 = xor i32 %10, -1
  %67 = or i32 %66, %29
  %68 = and i32 %9, %49
  %69 = and i32 %47, %35
  %70 = shl i32 %69, 1
  %71 = xor i32 %28, %34
  %72 = or i32 %28, %39
  %73 = or i32 %2, %0
  %74 = xor i32 %73, -1
  %75 = or i32 %74, %1
  %76 = or i32 %9, %1
  %77 = and i32 %76, %29
  %78 = xor i32 %54, %32
  %79 = or i32 %51, %0
  %80 = xor i32 %58, %79
  %81 = and i32 %73, %7
  %82 = xor i32 %73, %42
  %83 = shl i32 %82, 1
  %84 = and i32 %76, %0
  %85 = and i32 %66, %0
  %86 = or i32 %20, %1
  %87 = xor i32 %51, %0
  %88 = xor i32 %42, -1
  %89 = xor i32 %51, -1
  %90 = and i32 %89, %88
  %91 = shl i32 %90, 1
  %92 = xor i32 %8, %66
  %93 = or i32 %23, %64
  %94 = and i32 %66, %29
  %95 = and i32 %51, %34
  %96 = xor i32 %49, %2
  %97 = add i32 %31, 1
  %98 = or i32 %31, %8
  %99 = xor i32 %34, -1
  %100 = or i32 %9, %99
  %101 = or i32 %76, %0
  %102 = and i32 %31, %0
  %103 = or i32 %89, %0
  %104 = xor i32 %102, %103
  %105 = or i32 %28, %21
  %106 = add i32 %42, 1
  %107 = or i32 %51, %64
  %108 = or i32 %89, %64
  %109 = and i32 %57, %29
  %110 = and i32 %59, %0
  %111 = or i32 %109, %110
  %112 = xor i32 %54, 2147483647
  %113 = and i32 %112, %7
  %114 = or i32 %10, %0
  %115 = or i32 %28, %99
  %116 = or i32 %51, %29
  %117 = xor i32 %116, -1
  %118 = or i32 %109, %117
  %119 = xor i32 %79, 2147483647
  %120 = or i32 %119, %58
  %121 = xor i32 %28, %63
  %122 = shl i32 %121, 2
  %123 = and i32 %38, %29
  %124 = or i32 %102, %123
  %125 = or i32 %51, %99
  %126 = and i32 %51, %88
  %127 = add i32 %17, 1
  %128 = and i32 %34, %9
  %129 = xor i32 %32, %0
  %130 = and i32 %89, %0
  %131 = and i32 %34, %23
  %132 = or i32 %8, %2
  %133 = and i32 %73, %21
  %134 = or i32 %32, %0
  %135 = xor i32 %76, -1
  %136 = or i32 %135, %29
  %137 = shl i32 %123, 1
  %138 = xor i32 %73, %1
  %139 = xor i32 %66, %0
  %140 = xor i32 %87, -1
  %141 = or i32 %102, %140
  %142 = or i32 %21, %23
  %143 = xor i32 %76, %42
  %144 = add i32 %38, 1
  %145 = and i32 %9, %88
  %146 = or i32 %42, %2
  %147 = or i32 %21, %74
  %148 = shl i32 %147, 2
  %149 = and i32 %17, %34
  %150 = xor i32 %63, %2
  %151 = or i32 %42, %89
  %152 = shl i32 %151, 1
  %153 = and i32 %17, %88
  %154 = or i32 %42, %39
  %155 = xor i32 %59, %29
  %156 = xor i32 %155, %58
  %157 = xor i32 %8, %32
  %158 = or i32 %76, %29
  %159 = and i32 %51, %0
  %160 = or i32 %8, %9
  %161 = shl i32 %160, 1
  %162 = or i32 %17, %35
  %163 = or i32 %17, %99
  %164 = and i32 %38, %0
  %165 = xor i32 %38, %0
  %166 = xor i32 %165, -1
  %167 = xor i32 %102, %166
  %168 = or i32 %135, %0
  %169 = and i32 %31, %29
  %170 = xor i32 %164, 2147483647
  %171 = xor i32 %170, %169
  %172 = shl i32 %171, 1
  %173 = xor i32 %28, %1
  %174 = and i32 %73, %1
  %175 = and i32 %23, %49
  %176 = or i32 %54, %35
  %177 = xor i32 %109, %116
  %178 = and i32 %17, %21
  %179 = or i32 %102, %165
  %180 = or i32 %74, %7
  %181 = and i32 %39, %29
  %182 = and i32 %10, %29
  %183 = and i32 %10, %0
  %184 = and i32 %135, %29
  %185 = and i32 %135, %0
  %186 = mul i32 %102, -19
  %187 = xor i32 %3, -1
  %188 = or i32 %187, %4
  %189 = xor i32 %5, %4
  %190 = xor i32 %189, -1
  %191 = and i32 %188, %190
  %192 = and i32 %187, %4
  %193 = or i32 %189, %192
  %194 = or i32 %5, %3
  %195 = xor i32 %194, -1
  %196 = add i32 %194, 1
  %197 = and i32 %4, %3
  %198 = xor i32 %197, -1
  %199 = and i32 %189, %198
  %200 = and i32 %5, %4
  %201 = or i32 %200, %195
  %202 = xor i32 %5, -1
  %203 = or i32 %202, %3
  %204 = or i32 %203, %4
  %205 = or i32 %203, %12
  %206 = shl i32 %205, 1
  %207 = or i32 %202, %4
  %208 = xor i32 %4, %3
  %209 = and i32 %207, %208
  %210 = xor i32 %5, %3
  %211 = or i32 %210, %4
  %212 = and i32 %202, %4
  %213 = xor i32 %212, -1
  %214 = xor i32 %208, -1
  %215 = and i32 %213, %214
  %216 = or i32 %4, %3
  %217 = and i32 %216, %202
  %218 = or i32 %208, %5
  %219 = xor i32 %207, -1
  %220 = or i32 %219, %187
  %221 = and i32 %188, %5
  %222 = and i32 %13, %4
  %223 = xor i32 %210, %4
  %224 = xor i32 %222, %223
  %225 = xor i32 %14, %4
  %226 = and i32 %187, %5
  %227 = and i32 %226, %4
  %228 = or i32 %187, %5
  %229 = xor i32 %228, %4
  %230 = xor i32 %229, 2147483647
  %231 = xor i32 %230, %227
  %232 = and i32 %202, %3
  %233 = xor i32 %232, -1
  %234 = and i32 %233, %4
  %235 = or i32 %5, %4
  %236 = xor i32 %235, -1
  %237 = or i32 %197, %236
  %238 = xor i32 %200, %3
  %239 = xor i32 %213, %3
  %240 = xor i32 %212, %203
  %241 = or i32 %236, %187
  %242 = xor i32 %194, %4
  %243 = or i32 %219, %3
  %244 = xor i32 %210, -1
  %245 = or i32 %192, %244
  %246 = or i32 %214, %5
  %247 = or i32 %227, %223
  %248 = xor i32 %216, -1
  %249 = or i32 %202, %248
  %250 = xor i32 %232, %4
  %251 = or i32 %197, %195
  %252 = xor i32 %207, %3
  %253 = xor i32 %188, -1
  %254 = or i32 %210, %253
  %255 = xor i32 %192, -1
  %256 = and i32 %189, %255
  %257 = shl i32 %256, 1
  %258 = and i32 %189, %208
  %259 = and i32 %208, %202
  %260 = or i32 %232, %4
  %261 = xor i32 %13, %4
  %262 = xor i32 %248, %5
  %263 = xor i32 %203, %4
  %264 = add i32 %210, 1
  %265 = and i32 %244, %4
  %266 = xor i32 %200, %233
  %267 = and i32 %203, %12
  %268 = and i32 %235, %3
  %269 = and i32 %226, %12
  %270 = or i32 %210, %12
  %271 = xor i32 %269, %270
  %272 = add i32 %192, 1
  %273 = or i32 %189, %3
  %274 = or i32 %189, %208
  %275 = shl i32 %274, 2
  %276 = and i32 %213, %3
  %277 = or i32 %190, %3
  %278 = or i32 %212, %3
  %279 = and i32 %216, %244
  %280 = and i32 %210, %216
  %281 = add i32 %216, 1
  %282 = or i32 %212, %214
  %283 = and i32 %244, %255
  %284 = and i32 %244, %198
  %285 = or i32 %190, %214
  %286 = xor i32 %200, -1
  %287 = and i32 %286, %214
  %288 = or i32 %194, %4
  %289 = and i32 %244, %12
  %290 = shl i32 %289, 1
  %291 = and i32 %190, %198
  %292 = and i32 %255, %5
  %293 = or i32 %200, %248
  %294 = or i32 %253, %5
  %295 = or i32 %197, %219
  %296 = and i32 %188, %244
  %297 = xor i32 %244, %4
  %298 = xor i32 %235, %197
  %299 = and i32 %194, %12
  %300 = xor i32 %299, -1
  %301 = xor i32 %222, %300
  %302 = xor i32 %195, %4
  %303 = or i32 %192, %202
  %304 = or i32 %192, %5
  %305 = shl i32 %304, 1
  %306 = xor i32 %216, %5
  %307 = and i32 %13, %12
  %308 = and i32 %210, %4
  %309 = or i32 %307, %308
  %310 = and i32 %210, %255
  %311 = or i32 %244, %12
  %312 = shl i32 %190, 1
  %313 = or i32 %190, %253
  %314 = add i32 %13, 1
  %315 = xor i32 %200, %216
  %316 = xor i32 %200, %194
  %317 = shl i32 %316, 1
  %318 = and i32 %202, %255
  %319 = and i32 %216, %190
  %320 = or i32 %227, %229
  %321 = and i32 %216, %5
  %322 = or i32 %195, %12
  %323 = or i32 %192, %190
  %324 = or i32 %190, %187
  %325 = or i32 %219, %214
  %326 = and i32 %202, %198
  %327 = or i32 %200, %253
  %328 = and i32 %189, %187
  %329 = and i32 %189, %3
  %330 = shl i32 %329, 1
  %331 = xor i32 %207, %197
  %332 = and i32 %190, %3
  %333 = or i32 %244, %4
  %334 = and i32 %207, %187
  %335 = xor i32 %200, %188
  %336 = or i32 %208, %202
  %337 = and i32 %208, %286
  %338 = and i32 %194, %4
  %339 = shl i32 %338, 1
  %340 = or i32 %222, %299
  %341 = xor i32 %236, %3
  %342 = shl i32 %341, 1
  %343 = or i32 %222, %242
  %344 = xor i32 %286, %3
  %345 = xor i32 %192, %233
  %346 = xor i32 %223, -1
  %347 = xor i32 %227, %346
  %348 = or i32 %232, %12
  %349 = and i32 %188, %202
  %350 = or i32 %212, %13
  %351 = xor i32 %203, -1
  %352 = or i32 %212, %351
  %353 = shl i32 %352, 1
  %354 = xor i32 %203, %197
  %355 = or i32 %236, %3
  %356 = or i32 %189, %248
  %357 = and i32 %210, %12
  %358 = or i32 %222, %357
  %359 = and i32 %190, %255
  %360 = xor i32 %192, %14
  %361 = xor i32 %188, %5
  %362 = or i32 %232, %192
  %363 = xor i32 %198, %5
  %364 = or i32 %210, %197
  %365 = or i32 %208, %219
  %366 = or i32 %14, %4
  %367 = and i32 %208, %213
  %368 = shl i32 %299, 1
  %369 = and i32 %190, %187
  %370 = xor i32 %212, %14
  %371 = add i32 %197, 1
  %372 = or i32 %13, %192
  %373 = xor i32 %227, %211
  %374 = shl i32 %373, 1
  %375 = xor i32 %211, -1
  %376 = or i32 %227, %375
  %377 = shl i32 %213, 1
  %378 = and i32 %235, %208
  %379 = shl i32 %378, 1
  %380 = and i32 %228, %4
  %381 = or i32 %269, %380
  %382 = xor i32 %212, %3
  %383 = and i32 %14, %4
  %384 = xor i32 %380, -1
  %385 = xor i32 %269, %384
  %386 = shl i32 %200, 1
  %387 = or i32 %233, %4
  %388 = xor i32 %228, -1
  %389 = or i32 %388, %4
  %390 = xor i32 %227, %389
  %391 = or i32 %307, %338
  %392 = and i32 %235, %214
  %393 = and i32 %14, %12
  %394 = or i32 %208, %236
  %395 = and i32 %203, %4
  %396 = or i32 %208, %190
  %397 = or i32 %351, %12
  %398 = or i32 %195, %4
  %399 = shl i32 %398, 1
  %400 = and i32 %213, %187
  %401 = xor i32 %253, %5
  %402 = xor i32 %270, -1
  %403 = or i32 %269, %402
  %404 = or i32 %210, %248
  %405 = shl i32 %404, 1
  %406 = xor i32 %338, -1
  %407 = xor i32 %307, %406
  %408 = and i32 %189, %188
  %409 = or i32 %233, %12
  %410 = or i32 %248, %5
  %411 = and i32 %210, %188
  %412 = or i32 %202, %253
  %413 = add i32 %235, 1
  %414 = or i32 %202, %214
  %415 = or i32 %197, %244
  %416 = and i32 %286, %187
  %417 = or i32 %222, %346
  %418 = or i32 %200, %214
  %419 = and i32 %190, %214
  %420 = or i32 %190, %248
  %421 = or i32 %197, %351
  %422 = and i32 %195, %12
  %423 = mul i32 %422, 14
  %424 = and i32 %232, %12
  %425 = and i32 %195, %4
  %426 = mul i32 %425, 7
  %427 = and i32 %232, %4
  %428 = and i32 %351, %12
  %429 = shl i32 %428, 4
  %430 = mul i32 %307, 9
  %431 = and i32 %351, %4
  %432 = mul i32 %222, 17
  %433 = add i32 %34, %63
  %434 = add i32 %433, %146
  %435 = add i32 %434, %100
  %436 = add i32 %435, %96
  %437 = add i32 %436, %162
  %438 = add i32 %437, %158
  %439 = add i32 %438, %131
  %440 = add i32 %439, %107
  %441 = add i32 %440, %65
  %442 = add i32 %441, %253
  %443 = add i32 %442, %5
  %444 = add i32 %443, %113
  %445 = add i32 %444, %189
  %446 = add i32 %445, %412
  %447 = add i32 %446, %351
  %448 = add i32 %447, %306
  %449 = add i32 %448, %303
  %450 = add i32 %449, %232
  %451 = add i32 %450, %120
  %452 = add i32 %451, %415
  %453 = add i32 %452, %411
  %454 = add i32 %453, %397
  %455 = add i32 %454, %387
  %456 = add i32 %455, %367
  %457 = add i32 %456, %337
  %458 = add i32 %457, %325
  %459 = add i32 %458, %260
  %460 = add i32 %459, %347
  %461 = add i32 %460, %340
  %462 = add i32 %461, %231
  %463 = shl i32 %462, 1
  %464 = add i32 %371, %176
  %465 = add i32 %464, %321
  %466 = sub i32 %465, %302
  %467 = sub i32 %466, %295
  %468 = add i32 %467, %241
  %469 = add i32 %468, %417
  %470 = mul i32 %469, 3
  %471 = sub i32 %129, %126
  %472 = sub i32 %471, %293
  %473 = add i32 %472, %424
  %474 = sub i32 %473, %265
  %475 = add i32 %474, %243
  %476 = mul i32 %475, 5
  %477 = add i32 %431, %427
  %478 = mul i32 %477, 15
  %479 = add i32 %184, %182
  %480 = mul i32 %479, -11
  %481 = add i32 %183, %181
  %482 = mul i32 %481, -13
  %483 = add i32 %0, -2
  %484 = add i32 %483, %7
  %485 = sub i32 %484, %42
  %486 = add i32 %485, %49
  %487 = add i32 %486, %106
  %488 = add i32 %487, %20
  %489 = add i32 %488, %22
  %490 = sub i32 %489, %27
  %491 = add i32 %490, %28
  %492 = add i32 %491, %36
  %493 = add i32 %492, %37
  %494 = sub i32 %493, %50
  %495 = sub i32 %494, %53
  %496 = add i32 %495, %68
  %497 = add i32 %496, %97
  %498 = add i32 %497, %74
  %499 = sub i32 %498, %73
  %500 = add i32 %499, %127
  %501 = add i32 %500, %128
  %502 = sub i32 %501, %132
  %503 = add i32 %502, %10
  %504 = add i32 %503, %144
  %505 = sub i32 %504, %145
  %506 = sub i32 %505, %31
  %507 = add i32 %506, %54
  %508 = sub i32 %507, %150
  %509 = add i32 %508, %51
  %510 = add i32 %509, %187
  %511 = add i32 %510, %18
  %512 = add i32 %511, %24
  %513 = sub i32 %512, %30
  %514 = add i32 %513, %33
  %515 = add i32 %514, %40
  %516 = sub i32 %515, %41
  %517 = add i32 %516, %48
  %518 = sub i32 %517, %52
  %519 = sub i32 %518, %55
  %520 = add i32 %519, %56
  %521 = add i32 %520, %67
  %522 = add i32 %521, %71
  %523 = add i32 %522, %72
  %524 = sub i32 %523, %75
  %525 = add i32 %524, %77
  %526 = add i32 %525, %78
  %527 = add i32 %526, %81
  %528 = add i32 %527, %84
  %529 = sub i32 %528, %85
  %530 = add i32 %529, %86
  %531 = sub i32 %530, %87
  %532 = add i32 %531, %92
  %533 = add i32 %532, %93
  %534 = add i32 %533, %94
  %535 = sub i32 %534, %95
  %536 = sub i32 %535, %98
  %537 = add i32 %536, %101
  %538 = sub i32 %537, %105
  %539 = sub i32 %538, %108
  %540 = sub i32 %539, %114
  %541 = add i32 %540, %115
  %542 = sub i32 %541, %125
  %543 = sub i32 %542, %130
  %544 = add i32 %543, %133
  %545 = add i32 %544, %134
  %546 = add i32 %545, %136
  %547 = sub i32 %546, %138
  %548 = sub i32 %547, %139
  %549 = add i32 %548, %142
  %550 = sub i32 %549, %143
  %551 = add i32 %550, %149
  %552 = add i32 %551, %153
  %553 = add i32 %552, %154
  %554 = sub i32 %553, %157
  %555 = add i32 %554, %159
  %556 = sub i32 %555, %161
  %557 = sub i32 %556, %163
  %558 = sub i32 %557, %164
  %559 = add i32 %558, %116
  %560 = add i32 %559, %168
  %561 = sub i32 %560, %173
  %562 = add i32 %561, %174
  %563 = sub i32 %562, %175
  %564 = add i32 %563, %178
  %565 = add i32 %564, %180
  %566 = sub i32 %565, %185
  %567 = add i32 %566, %12
  %568 = sub i32 %567, %26
  %569 = sub i32 %568, %44
  %570 = sub i32 %569, %46
  %571 = sub i32 %570, %70
  %572 = add i32 %571, %80
  %573 = sub i32 %572, %83
  %574 = sub i32 %573, %91
  %575 = add i32 %574, %104
  %576 = sub i32 %575, %111
  %577 = add i32 %576, %118
  %578 = sub i32 %577, %122
  %579 = add i32 %578, %124
  %580 = sub i32 %579, %137
  %581 = sub i32 %580, %141
  %582 = sub i32 %581, %148
  %583 = sub i32 %582, %152
  %584 = add i32 %583, %156
  %585 = sub i32 %584, %167
  %586 = add i32 %585, %177
  %587 = sub i32 %586, %179
  %588 = add i32 %587, %186
  %589 = add i32 %588, %272
  %590 = add i32 %589, %281
  %591 = sub i32 %590, %208
  %592 = sub i32 %591, %192
  %593 = sub i32 %592, %188
  %594 = add i32 %593, %202
  %595 = sub i32 %594, %62
  %596 = add i32 %595, %196
  %597 = sub i32 %596, %217
  %598 = add i32 %597, %218
  %599 = sub i32 %598, %210
  %600 = sub i32 %599, %221
  %601 = add i32 %600, %246
  %602 = sub i32 %601, %249
  %603 = add i32 %602, %259
  %604 = sub i32 %603, %262
  %605 = add i32 %604, %264
  %606 = add i32 %605, %207
  %607 = sub i32 %606, %292
  %608 = sub i32 %607, %294
  %609 = add i32 %608, %233
  %610 = add i32 %609, %314
  %611 = add i32 %610, %318
  %612 = add i32 %611, %326
  %613 = sub i32 %612, %194
  %614 = add i32 %613, %336
  %615 = sub i32 %614, %349
  %616 = add i32 %615, %361
  %617 = add i32 %616, %363
  %618 = add i32 %617, %401
  %619 = add i32 %618, %410
  %620 = add i32 %619, %413
  %621 = sub i32 %620, %414
  %622 = add i32 %621, %480
  %623 = add i32 %622, %482
  %624 = sub i32 %623, %172
  %625 = sub i32 %624, %191
  %626 = sub i32 %625, %193
  %627 = sub i32 %626, %199
  %628 = sub i32 %627, %201
  %629 = add i32 %628, %204
  %630 = sub i32 %629, %209
  %631 = add i32 %630, %211
  %632 = sub i32 %631, %215
  %633 = add i32 %632, %220
  %634 = add i32 %633, %225
  %635 = add i32 %634, %234
  %636 = sub i32 %635, %237
  %637 = add i32 %636, %238
  %638 = add i32 %637, %239
  %639 = sub i32 %638, %240
  %640 = add i32 %639, %242
  %641 = sub i32 %640, %245
  %642 = add i32 %641, %250
  %643 = add i32 %642, %251
  %644 = sub i32 %643, %252
  %645 = add i32 %644, %254
  %646 = sub i32 %645, %258
  %647 = sub i32 %646, %261
  %648 = sub i32 %647, %263
  %649 = add i32 %648, %266
  %650 = sub i32 %649, %267
  %651 = sub i32 %650, %268
  %652 = sub i32 %651, %273
  %653 = sub i32 %652, %276
  %654 = add i32 %653, %277
  %655 = sub i32 %654, %278
  %656 = sub i32 %655, %279
  %657 = sub i32 %656, %280
  %658 = sub i32 %657, %282
  %659 = sub i32 %658, %283
  %660 = sub i32 %659, %284
  %661 = sub i32 %660, %285
  %662 = sub i32 %661, %287
  %663 = sub i32 %662, %288
  %664 = sub i32 %663, %291
  %665 = add i32 %664, %296
  %666 = add i32 %665, %297
  %667 = add i32 %666, %298
  %668 = sub i32 %667, %223
  %669 = sub i32 %668, %305
  %670 = sub i32 %669, %310
  %671 = add i32 %670, %311
  %672 = sub i32 %671, %312
  %673 = add i32 %672, %313
  %674 = sub i32 %673, %315
  %675 = sub i32 %674, %319
  %676 = sub i32 %675, %322
  %677 = add i32 %676, %323
  %678 = add i32 %677, %324
  %679 = sub i32 %678, %327
  %680 = add i32 %679, %328
  %681 = sub i32 %680, %308
  %682 = add i32 %681, %331
  %683 = add i32 %682, %332
  %684 = add i32 %683, %333
  %685 = sub i32 %684, %334
  %686 = add i32 %685, %335
  %687 = sub i32 %686, %344
  %688 = add i32 %687, %345
  %689 = sub i32 %688, %348
  %690 = add i32 %689, %350
  %691 = sub i32 %690, %354
  %692 = sub i32 %691, %355
  %693 = add i32 %692, %356
  %694 = sub i32 %693, %357
  %695 = sub i32 %694, %359
  %696 = sub i32 %695, %360
  %697 = sub i32 %696, %362
  %698 = add i32 %697, %364
  %699 = sub i32 %698, %365
  %700 = sub i32 %699, %366
  %701 = sub i32 %700, %369
  %702 = add i32 %701, %370
  %703 = sub i32 %702, %372
  %704 = sub i32 %703, %377
  %705 = add i32 %704, %382
  %706 = add i32 %705, %383
  %707 = sub i32 %706, %386
  %708 = sub i32 %707, %392
  %709 = add i32 %708, %393
  %710 = add i32 %709, %394
  %711 = add i32 %710, %395
  %712 = sub i32 %711, %396
  %713 = sub i32 %712, %400
  %714 = sub i32 %713, %408
  %715 = add i32 %714, %409
  %716 = add i32 %715, %416
  %717 = sub i32 %716, %418
  %718 = sub i32 %717, %419
  %719 = add i32 %718, %420
  %720 = add i32 %719, %421
  %721 = sub i32 %720, %206
  %722 = sub i32 %721, %224
  %723 = sub i32 %722, %247
  %724 = sub i32 %723, %257
  %725 = sub i32 %724, %271
  %726 = sub i32 %725, %275
  %727 = sub i32 %726, %290
  %728 = sub i32 %727, %301
  %729 = sub i32 %728, %309
  %730 = sub i32 %729, %317
  %731 = sub i32 %730, %320
  %732 = sub i32 %731, %330
  %733 = sub i32 %732, %339
  %734 = sub i32 %733, %342
  %735 = sub i32 %734, %343
  %736 = sub i32 %735, %353
  %737 = sub i32 %736, %358
  %738 = sub i32 %737, %368
  %739 = add i32 %738, %376
  %740 = sub i32 %739, %379
  %741 = add i32 %740, %381
  %742 = sub i32 %741, %385
  %743 = add i32 %742, %390
  %744 = sub i32 %743, %391
  %745 = sub i32 %744, %399
  %746 = add i32 %745, %403
  %747 = sub i32 %746, %405
  %748 = sub i32 %747, %407
  %749 = add i32 %748, %423
  %750 = add i32 %749, %426
  %751 = add i32 %750, %429
  %752 = add i32 %751, %430
  %753 = add i32 %752, %432
  %754 = sub i32 %753, %374
  %755 = add i32 %754, %478
  %756 = add i32 %755, %476
  %757 = add i32 %756, %470
  %758 = add i32 %757, %463
  %759 = icmp eq i32 %16, %758
  %760 = select i1 %759, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %761 = tail call i32 @puts(i8* nonnull dereferenceable(1) %760)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
