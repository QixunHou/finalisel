digraph "DFG for'main' function" {
	Node0x975e68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x975ee8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x975f78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x9763d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x9764b8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x9765d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x976810[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x9768c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x977838[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x977ec0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x977f30[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x977fa0[shape=record, label="  %10 = or i32 %6, %9"];
	Node0x978010[shape=record, label="  %11 = add i32 %10, 1"];
	Node0x978080[shape=record, label="  %12 = add i32 %11, %8"];
	Node0x9780f0[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x978160[shape=record, label="  %14 = and i32 %6, %9"];
	Node0x9781d0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x978240[shape=record, label="  %16 = shl i32 %9, 1"];
	Node0x9782b0[shape=record, label="  %17 = xor i32 %7, %6"];
	Node0x978320[shape=record, label="  %18 = shl i32 %13, 1"];
	Node0x978390[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x978400[shape=record, label="  %20 = mul i32 %14, 3"];
	Node0x978470[shape=record, label="  %21 = shl i32 %8, 1"];
	Node0x9784e0[shape=record, label="  %22 = add i32 %7, %6"];
	Node0x978550[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x9785c0[shape=record, label="  %24 = sub i32 2, %13"];
	Node0x978630[shape=record, label="  %25 = add i32 %24, %15"];
	Node0x9786a0[shape=record, label="  %26 = sub i32 %25, %16"];
	Node0x978710[shape=record, label="  %27 = sub i32 %26, %17"];
	Node0x978780[shape=record, label="  %28 = add i32 %27, %10"];
	Node0x9787f0[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x978860[shape=record, label="  %30 = sub i32 %29, %21"];
	Node0x9788d0[shape=record, label="  %31 = add i32 %30, %23"];
	Node0x978940[shape=record, label="  %32 = add i32 %31, %19"];
	Node0x978bc0[shape=record, label="  %33 = icmp eq i32 %12, %32"];
	Node0x9169d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x978c50[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x978ea8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x979008[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x9790c8[shape=record, label="  ret i32 0"];
	Node0x975e68 -> Node0x975ee8;
	Node0x975ee8 -> Node0x975f78;
	Node0x975f78 -> Node0x9763d8;
	Node0x9763d8 -> Node0x9764b8;
	Node0x9764b8 -> Node0x9765d8;
	Node0x9765d8 -> Node0x976810;
	Node0x976810 -> Node0x9768c8;
	Node0x9768c8 -> Node0x977838;
	Node0x977838 -> Node0x977ec0;
	Node0x977ec0 -> Node0x977f30;
	Node0x977f30 -> Node0x977fa0;
	Node0x977fa0 -> Node0x978010;
	Node0x978010 -> Node0x978080;
	Node0x978080 -> Node0x9780f0;
	Node0x9780f0 -> Node0x978160;
	Node0x978160 -> Node0x9781d0;
	Node0x9781d0 -> Node0x978240;
	Node0x978240 -> Node0x9782b0;
	Node0x9782b0 -> Node0x978320;
	Node0x978320 -> Node0x978390;
	Node0x978390 -> Node0x978400;
	Node0x978400 -> Node0x978470;
	Node0x978470 -> Node0x9784e0;
	Node0x9784e0 -> Node0x978550;
	Node0x978550 -> Node0x9785c0;
	Node0x9785c0 -> Node0x978630;
	Node0x978630 -> Node0x9786a0;
	Node0x9786a0 -> Node0x978710;
	Node0x978710 -> Node0x978780;
	Node0x978780 -> Node0x9787f0;
	Node0x9787f0 -> Node0x978860;
	Node0x978860 -> Node0x9788d0;
	Node0x9788d0 -> Node0x978940;
	Node0x978940 -> Node0x978bc0;
	Node0x978bc0 -> Node0x9169d8;
	Node0x9169d8 -> Node0x978c50;
	Node0x978c50 -> Node0x978ea8;
	Node0x978ea8 -> Node0x979008;
	Node0x979008 -> Node0x9790c8;
edge [color=red]
	Node0x975e68 -> Node0x975f78;
	Node0x975f78 -> Node0x9763d8;
	Node0x975ee8 -> Node0x9764b8;
	Node0x9764b8 -> Node0x9765d8;
	Node0x975e68 -> Node0x976810;
	Node0x975ee8 -> Node0x976810;
	Node0x975e68 -> Node0x9768c8;
	Node0x975ee8 -> Node0x977838;
	Node0x977838 -> Node0x977ec0;
	Node0x9768c8 -> Node0x977ec0;
	Node0x977838 -> Node0x977f30;
	Node0x9768c8 -> Node0x977fa0;
	Node0x977f30 -> Node0x977fa0;
	Node0x977fa0 -> Node0x978010;
	Node0x978010 -> Node0x978080;
	Node0x977ec0 -> Node0x978080;
	Node0x977838 -> Node0x9780f0;
	Node0x9768c8 -> Node0x9780f0;
	Node0x9768c8 -> Node0x978160;
	Node0x977f30 -> Node0x978160;
	Node0x978160 -> Node0x9781d0;
	Node0x977f30 -> Node0x978240;
	Node0x977838 -> Node0x9782b0;
	Node0x9768c8 -> Node0x9782b0;
	Node0x9780f0 -> Node0x978320;
	Node0x978320 -> Node0x978390;
	Node0x978160 -> Node0x978400;
	Node0x977ec0 -> Node0x978470;
	Node0x977838 -> Node0x9784e0;
	Node0x9768c8 -> Node0x9784e0;
	Node0x9784e0 -> Node0x978550;
	Node0x9780f0 -> Node0x9785c0;
	Node0x9785c0 -> Node0x978630;
	Node0x9781d0 -> Node0x978630;
	Node0x978630 -> Node0x9786a0;
	Node0x978240 -> Node0x9786a0;
	Node0x9786a0 -> Node0x978710;
	Node0x9782b0 -> Node0x978710;
	Node0x978710 -> Node0x978780;
	Node0x977fa0 -> Node0x978780;
	Node0x978780 -> Node0x9787f0;
	Node0x978400 -> Node0x9787f0;
	Node0x9787f0 -> Node0x978860;
	Node0x978470 -> Node0x978860;
	Node0x978860 -> Node0x9788d0;
	Node0x978550 -> Node0x9788d0;
	Node0x9788d0 -> Node0x978940;
	Node0x978390 -> Node0x978940;
	Node0x978080 -> Node0x978bc0;
	Node0x978940 -> Node0x978bc0;
	Node0x978bc0 -> Node0x9169d8;
	Node0x9169d8 -> Node0x978c50;
	Node0x9764b8 -> Node0x978ea8;
	Node0x975f78 -> Node0x979008;
}
