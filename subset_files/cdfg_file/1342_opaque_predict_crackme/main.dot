digraph "DFG for'main' function" {
	Node0xbcea68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xbceae8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xbceb78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xbcebd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xbcec88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xbcf0b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xbcf198[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xbcf298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xbcf358[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xbcf408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xbcf4c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xbcf578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xbc9750[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xbcf778[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xbd06e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xbd0d58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xbd0db8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xbd0ec8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xbd1128[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xbd1288[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xbd1398[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xbd14a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xbd1568[shape=record, label="  ret i32 0"];
	Node0xbcea68 -> Node0xbceae8;
	Node0xbceae8 -> Node0xbceb78;
	Node0xbceb78 -> Node0xbcebd8;
	Node0xbcebd8 -> Node0xbcec88;
	Node0xbcec88 -> Node0xbcf0b8;
	Node0xbcf0b8 -> Node0xbcf198;
	Node0xbcf198 -> Node0xbcf298;
	Node0xbcf298 -> Node0xbcf358;
	Node0xbcf358 -> Node0xbcf408;
	Node0xbcf408 -> Node0xbcf4c8;
	Node0xbcf4c8 -> Node0xbcf578;
	Node0xbcf578 -> Node0xbc9750;
	Node0xbc9750 -> Node0xbcf778;
	Node0xbcf778 -> Node0xbd06e8;
	Node0xbd06e8 -> Node0xbd0d58;
	Node0xbd0d58 -> Node0xbd0db8;
	Node0xbd0db8 -> Node0xbd0ec8;
	Node0xbd0ec8 -> Node0xbd1128;
	Node0xbd1128 -> Node0xbd1288;
	Node0xbd1288 -> Node0xbd1398;
	Node0xbd1398 -> Node0xbd14a8;
	Node0xbd14a8 -> Node0xbd1568;
edge [color=red]
	Node0xbcea68 -> Node0xbcec88;
	Node0xbcec88 -> Node0xbcf0b8;
	Node0xbceae8 -> Node0xbcf198;
	Node0xbcf198 -> Node0xbcf298;
	Node0xbceb78 -> Node0xbcf358;
	Node0xbcf358 -> Node0xbcf408;
	Node0xbcebd8 -> Node0xbcf4c8;
	Node0xbcf4c8 -> Node0xbcf578;
	Node0xbcea68 -> Node0xbc9750;
	Node0xbceae8 -> Node0xbc9750;
	Node0xbceb78 -> Node0xbc9750;
	Node0xbcebd8 -> Node0xbc9750;
	Node0xbcea68 -> Node0xbcf778;
	Node0xbceae8 -> Node0xbd06e8;
	Node0xbceb78 -> Node0xbd0d58;
	Node0xbcebd8 -> Node0xbd0db8;
	Node0xbcf778 -> Node0xbd0ec8;
	Node0xbd06e8 -> Node0xbd0ec8;
	Node0xbd0d58 -> Node0xbd0ec8;
	Node0xbd0db8 -> Node0xbd0ec8;
	Node0xbcf4c8 -> Node0xbd1128;
	Node0xbcf358 -> Node0xbd1288;
	Node0xbcf198 -> Node0xbd1398;
	Node0xbcec88 -> Node0xbd14a8;
}
