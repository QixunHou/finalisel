digraph "DFG for'main' function" {
	Node0x57eda8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x57ee28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x57eeb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x57ef18[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x57f398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x57f478[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x57f578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x57f638[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x57f6e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x57f948[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x57fa08[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x57fb68[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x57fbc8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x5840a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x5842a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x584408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x584518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5845d8[shape=record, label="  ret i32 0"];
	Node0x57eda8 -> Node0x57ee28;
	Node0x57ee28 -> Node0x57eeb8;
	Node0x57eeb8 -> Node0x57ef18;
	Node0x57ef18 -> Node0x57f398;
	Node0x57f398 -> Node0x57f478;
	Node0x57f478 -> Node0x57f578;
	Node0x57f578 -> Node0x57f638;
	Node0x57f638 -> Node0x57f6e8;
	Node0x57f6e8 -> Node0x57f948;
	Node0x57f948 -> Node0x57fa08;
	Node0x57fa08 -> Node0x57fb68;
	Node0x57fb68 -> Node0x57fbc8;
	Node0x57fbc8 -> Node0x5840a0;
	Node0x5840a0 -> Node0x5842a8;
	Node0x5842a8 -> Node0x584408;
	Node0x584408 -> Node0x584518;
	Node0x584518 -> Node0x5845d8;
edge [color=red]
	Node0x57eda8 -> Node0x57ef18;
	Node0x57ef18 -> Node0x57f398;
	Node0x57ee28 -> Node0x57f478;
	Node0x57f478 -> Node0x57f578;
	Node0x57eeb8 -> Node0x57f638;
	Node0x57f638 -> Node0x57f6e8;
	Node0x57eda8 -> Node0x57f948;
	Node0x57ee28 -> Node0x57f948;
	Node0x57eeb8 -> Node0x57f948;
	Node0x57eda8 -> Node0x57fa08;
	Node0x57ee28 -> Node0x57fb68;
	Node0x57eeb8 -> Node0x57fbc8;
	Node0x57fa08 -> Node0x5840a0;
	Node0x57fb68 -> Node0x5840a0;
	Node0x57fbc8 -> Node0x5840a0;
	Node0x57f638 -> Node0x5842a8;
	Node0x57f478 -> Node0x584408;
	Node0x57ef18 -> Node0x584518;
}
