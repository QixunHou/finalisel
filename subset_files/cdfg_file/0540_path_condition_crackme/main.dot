digraph "DFG for'main' function" {
	Node0xcaca08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xcaca88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xcacb18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xcacb78[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xcacff8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xcad0d8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xcad1d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xcad298[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xcad348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xcad5a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xcad668[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xcad7c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xcad828[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xcb0d40[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xcb0f48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xcb10a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xcb11b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xcb1278[shape=record, label="  ret i32 0"];
	Node0xcaca08 -> Node0xcaca88;
	Node0xcaca88 -> Node0xcacb18;
	Node0xcacb18 -> Node0xcacb78;
	Node0xcacb78 -> Node0xcacff8;
	Node0xcacff8 -> Node0xcad0d8;
	Node0xcad0d8 -> Node0xcad1d8;
	Node0xcad1d8 -> Node0xcad298;
	Node0xcad298 -> Node0xcad348;
	Node0xcad348 -> Node0xcad5a8;
	Node0xcad5a8 -> Node0xcad668;
	Node0xcad668 -> Node0xcad7c8;
	Node0xcad7c8 -> Node0xcad828;
	Node0xcad828 -> Node0xcb0d40;
	Node0xcb0d40 -> Node0xcb0f48;
	Node0xcb0f48 -> Node0xcb10a8;
	Node0xcb10a8 -> Node0xcb11b8;
	Node0xcb11b8 -> Node0xcb1278;
edge [color=red]
	Node0xcaca08 -> Node0xcacb78;
	Node0xcacb78 -> Node0xcacff8;
	Node0xcaca88 -> Node0xcad0d8;
	Node0xcad0d8 -> Node0xcad1d8;
	Node0xcacb18 -> Node0xcad298;
	Node0xcad298 -> Node0xcad348;
	Node0xcaca08 -> Node0xcad5a8;
	Node0xcaca88 -> Node0xcad5a8;
	Node0xcacb18 -> Node0xcad5a8;
	Node0xcaca08 -> Node0xcad668;
	Node0xcaca88 -> Node0xcad7c8;
	Node0xcacb18 -> Node0xcad828;
	Node0xcad668 -> Node0xcb0d40;
	Node0xcad7c8 -> Node0xcb0d40;
	Node0xcad828 -> Node0xcb0d40;
	Node0xcad298 -> Node0xcb0f48;
	Node0xcad0d8 -> Node0xcb10a8;
	Node0xcacb78 -> Node0xcb11b8;
}
