digraph "DFG for'main' function" {
	Node0x22e0938[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x22e09b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x22e0a48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x22e0aa8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x22e0b58[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x22e0f88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22e1068[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x22e1168[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22e1228[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x22e12d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x22e1398[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x22e1448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x22dba80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x22e1648[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x22e25b8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x22e2c28[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x22e2c88[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x22e2d00[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x22e2d70[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x22e2de0[shape=record, label="  %16 = add i32 %15, %13"];
	Node0x22e2e50[shape=record, label="  %17 = sub i32 0, %16"];
	Node0x22e2ec0[shape=record, label="  %18 = or i32 %12, %11"];
	Node0x22e2f30[shape=record, label="  %19 = and i32 %11, %14"];
	Node0x22e2fa0[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x22e3010[shape=record, label="  %21 = shl i32 %18, 1"];
	Node0x22e3080[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x22e30f0[shape=record, label="  %23 = xor i32 %15, -1"];
	Node0x22e3160[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x22e31d0[shape=record, label="  %25 = xor i32 %13, -1"];
	Node0x22e3240[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0x22e32b0[shape=record, label="  %27 = and i32 %13, %26"];
	Node0x22e3320[shape=record, label="  %28 = or i32 %13, %10"];
	Node0x22e3390[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x22e3400[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0x22e3470[shape=record, label="  %31 = and i32 %10, %25"];
	Node0x22e34e0[shape=record, label="  %32 = mul i32 %27, -3"];
	Node0x22e3550[shape=record, label="  %33 = and i32 %13, %10"];
	Node0x22e35c0[shape=record, label="  %34 = mul i32 %19, -2"];
	Node0x22e3630[shape=record, label="  %35 = add i32 %14, %26"];
	Node0x22e36a0[shape=record, label="  %36 = sub i32 %35, %12"];
	Node0x22e3710[shape=record, label="  %37 = sub i32 %36, %18"];
	Node0x22e3780[shape=record, label="  %38 = add i32 %37, %20"];
	Node0x22e37f0[shape=record, label="  %39 = add i32 %38, %23"];
	Node0x22e3860[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x22e38d0[shape=record, label="  %41 = add i32 %40, %25"];
	Node0x22e3940[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x22e39b0[shape=record, label="  %43 = sub i32 %42, %31"];
	Node0x22e3a20[shape=record, label="  %44 = sub i32 %43, %33"];
	Node0x22e3a90[shape=record, label="  %45 = add i32 %44, %34"];
	Node0x22e3b00[shape=record, label="  %46 = sub i32 %45, %22"];
	Node0x22e3b70[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x22e3be0[shape=record, label="  %48 = sub i32 %47, %30"];
	Node0x22e3c50[shape=record, label="  %49 = icmp eq i32 %48, %17"];
	Node0x22808b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22e3ce0[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0x22e3f88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x22e40e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x22e41f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22e4308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22e43c8[shape=record, label="  ret i32 0"];
	Node0x22e0938 -> Node0x22e09b8;
	Node0x22e09b8 -> Node0x22e0a48;
	Node0x22e0a48 -> Node0x22e0aa8;
	Node0x22e0aa8 -> Node0x22e0b58;
	Node0x22e0b58 -> Node0x22e0f88;
	Node0x22e0f88 -> Node0x22e1068;
	Node0x22e1068 -> Node0x22e1168;
	Node0x22e1168 -> Node0x22e1228;
	Node0x22e1228 -> Node0x22e12d8;
	Node0x22e12d8 -> Node0x22e1398;
	Node0x22e1398 -> Node0x22e1448;
	Node0x22e1448 -> Node0x22dba80;
	Node0x22dba80 -> Node0x22e1648;
	Node0x22e1648 -> Node0x22e25b8;
	Node0x22e25b8 -> Node0x22e2c28;
	Node0x22e2c28 -> Node0x22e2c88;
	Node0x22e2c88 -> Node0x22e2d00;
	Node0x22e2d00 -> Node0x22e2d70;
	Node0x22e2d70 -> Node0x22e2de0;
	Node0x22e2de0 -> Node0x22e2e50;
	Node0x22e2e50 -> Node0x22e2ec0;
	Node0x22e2ec0 -> Node0x22e2f30;
	Node0x22e2f30 -> Node0x22e2fa0;
	Node0x22e2fa0 -> Node0x22e3010;
	Node0x22e3010 -> Node0x22e3080;
	Node0x22e3080 -> Node0x22e30f0;
	Node0x22e30f0 -> Node0x22e3160;
	Node0x22e3160 -> Node0x22e31d0;
	Node0x22e31d0 -> Node0x22e3240;
	Node0x22e3240 -> Node0x22e32b0;
	Node0x22e32b0 -> Node0x22e3320;
	Node0x22e3320 -> Node0x22e3390;
	Node0x22e3390 -> Node0x22e3400;
	Node0x22e3400 -> Node0x22e3470;
	Node0x22e3470 -> Node0x22e34e0;
	Node0x22e34e0 -> Node0x22e3550;
	Node0x22e3550 -> Node0x22e35c0;
	Node0x22e35c0 -> Node0x22e3630;
	Node0x22e3630 -> Node0x22e36a0;
	Node0x22e36a0 -> Node0x22e3710;
	Node0x22e3710 -> Node0x22e3780;
	Node0x22e3780 -> Node0x22e37f0;
	Node0x22e37f0 -> Node0x22e3860;
	Node0x22e3860 -> Node0x22e38d0;
	Node0x22e38d0 -> Node0x22e3940;
	Node0x22e3940 -> Node0x22e39b0;
	Node0x22e39b0 -> Node0x22e3a20;
	Node0x22e3a20 -> Node0x22e3a90;
	Node0x22e3a90 -> Node0x22e3b00;
	Node0x22e3b00 -> Node0x22e3b70;
	Node0x22e3b70 -> Node0x22e3be0;
	Node0x22e3be0 -> Node0x22e3c50;
	Node0x22e3c50 -> Node0x22808b8;
	Node0x22808b8 -> Node0x22e3ce0;
	Node0x22e3ce0 -> Node0x22e3f88;
	Node0x22e3f88 -> Node0x22e40e8;
	Node0x22e40e8 -> Node0x22e41f8;
	Node0x22e41f8 -> Node0x22e4308;
	Node0x22e4308 -> Node0x22e43c8;
edge [color=red]
	Node0x22e0938 -> Node0x22e0b58;
	Node0x22e0b58 -> Node0x22e0f88;
	Node0x22e09b8 -> Node0x22e1068;
	Node0x22e1068 -> Node0x22e1168;
	Node0x22e0a48 -> Node0x22e1228;
	Node0x22e1228 -> Node0x22e12d8;
	Node0x22e0aa8 -> Node0x22e1398;
	Node0x22e1398 -> Node0x22e1448;
	Node0x22e0938 -> Node0x22dba80;
	Node0x22e09b8 -> Node0x22dba80;
	Node0x22e0a48 -> Node0x22dba80;
	Node0x22e0aa8 -> Node0x22dba80;
	Node0x22e0938 -> Node0x22e1648;
	Node0x22e09b8 -> Node0x22e25b8;
	Node0x22e0a48 -> Node0x22e2c28;
	Node0x22e0aa8 -> Node0x22e2c88;
	Node0x22e2c28 -> Node0x22e2d00;
	Node0x22e25b8 -> Node0x22e2d70;
	Node0x22e2d00 -> Node0x22e2d70;
	Node0x22e2d70 -> Node0x22e2de0;
	Node0x22e2c88 -> Node0x22e2de0;
	Node0x22e2de0 -> Node0x22e2e50;
	Node0x22e2c28 -> Node0x22e2ec0;
	Node0x22e25b8 -> Node0x22e2ec0;
	Node0x22e25b8 -> Node0x22e2f30;
	Node0x22e2d00 -> Node0x22e2f30;
	Node0x22e2c28 -> Node0x22e2fa0;
	Node0x22e25b8 -> Node0x22e2fa0;
	Node0x22e2ec0 -> Node0x22e3010;
	Node0x22e3010 -> Node0x22e3080;
	Node0x22e2d70 -> Node0x22e30f0;
	Node0x22e2c28 -> Node0x22e3160;
	Node0x22e25b8 -> Node0x22e3160;
	Node0x22e2c88 -> Node0x22e31d0;
	Node0x22e1648 -> Node0x22e3240;
	Node0x22e2c88 -> Node0x22e32b0;
	Node0x22e3240 -> Node0x22e32b0;
	Node0x22e2c88 -> Node0x22e3320;
	Node0x22e1648 -> Node0x22e3320;
	Node0x22e3320 -> Node0x22e3390;
	Node0x22e3390 -> Node0x22e3400;
	Node0x22e1648 -> Node0x22e3470;
	Node0x22e31d0 -> Node0x22e3470;
	Node0x22e32b0 -> Node0x22e34e0;
	Node0x22e2c88 -> Node0x22e3550;
	Node0x22e1648 -> Node0x22e3550;
	Node0x22e2f30 -> Node0x22e35c0;
	Node0x22e2d00 -> Node0x22e3630;
	Node0x22e3240 -> Node0x22e3630;
	Node0x22e3630 -> Node0x22e36a0;
	Node0x22e2c28 -> Node0x22e36a0;
	Node0x22e36a0 -> Node0x22e3710;
	Node0x22e2ec0 -> Node0x22e3710;
	Node0x22e3710 -> Node0x22e3780;
	Node0x22e2fa0 -> Node0x22e3780;
	Node0x22e3780 -> Node0x22e37f0;
	Node0x22e30f0 -> Node0x22e37f0;
	Node0x22e37f0 -> Node0x22e3860;
	Node0x22e3160 -> Node0x22e3860;
	Node0x22e3860 -> Node0x22e38d0;
	Node0x22e31d0 -> Node0x22e38d0;
	Node0x22e38d0 -> Node0x22e3940;
	Node0x22e32b0 -> Node0x22e3940;
	Node0x22e3940 -> Node0x22e39b0;
	Node0x22e3470 -> Node0x22e39b0;
	Node0x22e39b0 -> Node0x22e3a20;
	Node0x22e3550 -> Node0x22e3a20;
	Node0x22e3a20 -> Node0x22e3a90;
	Node0x22e35c0 -> Node0x22e3a90;
	Node0x22e3a90 -> Node0x22e3b00;
	Node0x22e3080 -> Node0x22e3b00;
	Node0x22e3b00 -> Node0x22e3b70;
	Node0x22e34e0 -> Node0x22e3b70;
	Node0x22e3b70 -> Node0x22e3be0;
	Node0x22e3400 -> Node0x22e3be0;
	Node0x22e3be0 -> Node0x22e3c50;
	Node0x22e2e50 -> Node0x22e3c50;
	Node0x22e3c50 -> Node0x22808b8;
	Node0x22808b8 -> Node0x22e3ce0;
	Node0x22e1398 -> Node0x22e3f88;
	Node0x22e1228 -> Node0x22e40e8;
	Node0x22e1068 -> Node0x22e41f8;
	Node0x22e0b58 -> Node0x22e4308;
}
