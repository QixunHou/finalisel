digraph "DFG for'crackme' function" {
	Node0x22df060[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x22df0d0[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x22df140[shape=record, label="  %7 = add i32 %6, %3"];
	Node0x22df1e0[shape=record, label="  %8 = sub i32 0, %7"];
	Node0x22df250[shape=record, label="  %9 = or i32 %2, %1"];
	Node0x22df2c0[shape=record, label="  %10 = and i32 %5, %1"];
	Node0x22df330[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x22df3d0[shape=record, label="  %12 = shl i32 %9, 1"];
	Node0x22df470[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x22df4e0[shape=record, label="  %14 = xor i32 %6, -1"];
	Node0x22df550[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x22df5c0[shape=record, label="  %16 = xor i32 %3, -1"];
	Node0x22df630[shape=record, label="  %17 = xor i32 %0, -1"];
	Node0x22df6a0[shape=record, label="  %18 = and i32 %17, %3"];
	Node0x22df710[shape=record, label="  %19 = or i32 %3, %0"];
	Node0x22df780[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x22df7f0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x22df860[shape=record, label="  %22 = and i32 %16, %0"];
	Node0x22df900[shape=record, label="  %23 = mul i32 %18, -3"];
	Node0x22df970[shape=record, label="  %24 = and i32 %3, %0"];
	Node0x22df9e0[shape=record, label="  %25 = mul i32 %10, -2"];
	Node0x22dfa50[shape=record, label="  %26 = add i32 %17, %5"];
	Node0x22dfac0[shape=record, label="  %27 = sub i32 %26, %2"];
	Node0x22dfb30[shape=record, label="  %28 = sub i32 %27, %9"];
	Node0x22dfba0[shape=record, label="  %29 = add i32 %28, %11"];
	Node0x22dfc10[shape=record, label="  %30 = add i32 %29, %14"];
	Node0x22dfc80[shape=record, label="  %31 = add i32 %30, %15"];
	Node0x22dfcf0[shape=record, label="  %32 = add i32 %31, %16"];
	Node0x22dff70[shape=record, label="  %33 = add i32 %32, %18"];
	Node0x22dffe0[shape=record, label="  %34 = sub i32 %33, %22"];
	Node0x22e0050[shape=record, label="  %35 = sub i32 %34, %24"];
	Node0x22e00c0[shape=record, label="  %36 = add i32 %35, %25"];
	Node0x22e0130[shape=record, label="  %37 = sub i32 %36, %13"];
	Node0x22e01a0[shape=record, label="  %38 = add i32 %37, %23"];
	Node0x22e0210[shape=record, label="  %39 = sub i32 %38, %21"];
	Node0x22e0280[shape=record, label="  %40 = icmp eq i32 %39, %8"];
	Node0x227f268[shape=record, label="  %41 = select i1 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22e0720[shape=record, label="  %42 = tail call i32 @puts(i8* nonnull dereferenceable(1) %41)"];
	Node0x22e0770[shape=record, label="  ret void"];
	Node0x22df060 -> Node0x22df0d0;
	Node0x22df0d0 -> Node0x22df140;
	Node0x22df140 -> Node0x22df1e0;
	Node0x22df1e0 -> Node0x22df250;
	Node0x22df250 -> Node0x22df2c0;
	Node0x22df2c0 -> Node0x22df330;
	Node0x22df330 -> Node0x22df3d0;
	Node0x22df3d0 -> Node0x22df470;
	Node0x22df470 -> Node0x22df4e0;
	Node0x22df4e0 -> Node0x22df550;
	Node0x22df550 -> Node0x22df5c0;
	Node0x22df5c0 -> Node0x22df630;
	Node0x22df630 -> Node0x22df6a0;
	Node0x22df6a0 -> Node0x22df710;
	Node0x22df710 -> Node0x22df780;
	Node0x22df780 -> Node0x22df7f0;
	Node0x22df7f0 -> Node0x22df860;
	Node0x22df860 -> Node0x22df900;
	Node0x22df900 -> Node0x22df970;
	Node0x22df970 -> Node0x22df9e0;
	Node0x22df9e0 -> Node0x22dfa50;
	Node0x22dfa50 -> Node0x22dfac0;
	Node0x22dfac0 -> Node0x22dfb30;
	Node0x22dfb30 -> Node0x22dfba0;
	Node0x22dfba0 -> Node0x22dfc10;
	Node0x22dfc10 -> Node0x22dfc80;
	Node0x22dfc80 -> Node0x22dfcf0;
	Node0x22dfcf0 -> Node0x22dff70;
	Node0x22dff70 -> Node0x22dffe0;
	Node0x22dffe0 -> Node0x22e0050;
	Node0x22e0050 -> Node0x22e00c0;
	Node0x22e00c0 -> Node0x22e0130;
	Node0x22e0130 -> Node0x22e01a0;
	Node0x22e01a0 -> Node0x22e0210;
	Node0x22e0210 -> Node0x22e0280;
	Node0x22e0280 -> Node0x227f268;
	Node0x227f268 -> Node0x22e0720;
	Node0x22e0720 -> Node0x22e0770;
edge [color=red]
	Node0x22df060 -> Node0x22df0d0;
	Node0x22df0d0 -> Node0x22df140;
	Node0x22df140 -> Node0x22df1e0;
	Node0x22df060 -> Node0x22df2c0;
	Node0x22df250 -> Node0x22df3d0;
	Node0x22df3d0 -> Node0x22df470;
	Node0x22df0d0 -> Node0x22df4e0;
	Node0x22df630 -> Node0x22df6a0;
	Node0x22df710 -> Node0x22df780;
	Node0x22df780 -> Node0x22df7f0;
	Node0x22df5c0 -> Node0x22df860;
	Node0x22df6a0 -> Node0x22df900;
	Node0x22df2c0 -> Node0x22df9e0;
	Node0x22df630 -> Node0x22dfa50;
	Node0x22df060 -> Node0x22dfa50;
	Node0x22dfa50 -> Node0x22dfac0;
	Node0x22dfac0 -> Node0x22dfb30;
	Node0x22df250 -> Node0x22dfb30;
	Node0x22dfb30 -> Node0x22dfba0;
	Node0x22df330 -> Node0x22dfba0;
	Node0x22dfba0 -> Node0x22dfc10;
	Node0x22df4e0 -> Node0x22dfc10;
	Node0x22dfc10 -> Node0x22dfc80;
	Node0x22df550 -> Node0x22dfc80;
	Node0x22dfc80 -> Node0x22dfcf0;
	Node0x22df5c0 -> Node0x22dfcf0;
	Node0x22dfcf0 -> Node0x22dff70;
	Node0x22df6a0 -> Node0x22dff70;
	Node0x22dff70 -> Node0x22dffe0;
	Node0x22df860 -> Node0x22dffe0;
	Node0x22dffe0 -> Node0x22e0050;
	Node0x22df970 -> Node0x22e0050;
	Node0x22e0050 -> Node0x22e00c0;
	Node0x22df9e0 -> Node0x22e00c0;
	Node0x22e00c0 -> Node0x22e0130;
	Node0x22df470 -> Node0x22e0130;
	Node0x22e0130 -> Node0x22e01a0;
	Node0x22df900 -> Node0x22e01a0;
	Node0x22e01a0 -> Node0x22e0210;
	Node0x22df7f0 -> Node0x22e0210;
	Node0x22e0210 -> Node0x22e0280;
	Node0x22df1e0 -> Node0x22e0280;
	Node0x22e0280 -> Node0x227f268;
	Node0x227f268 -> Node0x22e0720;
}
