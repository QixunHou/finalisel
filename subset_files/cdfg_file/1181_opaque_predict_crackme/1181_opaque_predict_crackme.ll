; ModuleID = '../.././c_source_file/1181_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1181_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, %1
  %8 = xor i32 %7, -1
  %9 = add i32 %7, 1
  %10 = and i32 %2, %0
  %11 = xor i32 %2, -1
  %12 = and i32 %11, %1
  %13 = xor i32 %12, -1
  %14 = xor i32 %10, %13
  %15 = add i32 %9, %14
  %16 = xor i32 %5, -1
  %17 = add i32 %5, 1
  %18 = add i32 %15, %17
  %19 = xor i32 %5, %3
  %20 = add i32 %18, %19
  %21 = xor i32 %0, -1
  %22 = xor i32 %1, -1
  %23 = and i32 %22, %2
  %24 = and i32 %23, %21
  %25 = or i32 %22, %2
  %26 = and i32 %25, %0
  %27 = xor i32 %26, 2147483647
  %28 = xor i32 %27, %24
  %29 = shl i32 %28, 1
  %30 = and i32 %2, %1
  %31 = and i32 %30, %21
  %32 = and i32 %7, %0
  %33 = or i32 %31, %32
  %34 = and i32 %1, %0
  %35 = or i32 %2, %1
  %36 = xor i32 %35, -1
  %37 = or i32 %34, %36
  %38 = xor i32 %12, %0
  %39 = or i32 %2, %0
  %40 = xor i32 %39, -1
  %41 = or i32 %40, %1
  %42 = and i32 %35, %0
  %43 = or i32 %31, %42
  %44 = and i32 %22, %0
  %45 = or i32 %44, %8
  %46 = xor i32 %1, %0
  %47 = and i32 %39, %46
  %48 = or i32 %11, %0
  %49 = xor i32 %48, -1
  %50 = add i32 %48, 1
  %51 = xor i32 %48, %34
  %52 = shl i32 %51, 1
  %53 = or i32 %36, %0
  %54 = xor i32 %30, -1
  %55 = and i32 %54, %0
  %56 = xor i32 %44, -1
  %57 = and i32 %8, %56
  %58 = and i32 %11, %56
  %59 = shl i32 %58, 1
  %60 = or i32 %1, %0
  %61 = xor i32 %60, %2
  %62 = shl i32 %61, 1
  %63 = xor i32 %39, %34
  %64 = add i32 %2, 1
  %65 = or i32 %46, %49
  %66 = or i32 %36, %21
  %67 = xor i32 %35, %0
  %68 = or i32 %22, %0
  %69 = xor i32 %68, -1
  %70 = or i32 %7, %69
  %71 = xor i32 %60, -1
  %72 = or i32 %71, %2
  %73 = or i32 %7, %34
  %74 = and i32 %48, %1
  %75 = xor i32 %68, %2
  %76 = and i32 %30, %0
  %77 = or i32 %76, %67
  %78 = and i32 %56, %2
  %79 = xor i32 %7, %0
  %80 = and i32 %11, %0
  %81 = or i32 %11, %1
  %82 = xor i32 %81, -1
  %83 = or i32 %80, %82
  %84 = or i32 %10, %1
  %85 = and i32 %7, %21
  %86 = or i32 %76, %85
  %87 = and i32 %8, %0
  %88 = or i32 %24, %87
  %89 = xor i32 %44, %13
  %90 = shl i32 %89, 1
  %91 = or i32 %54, %21
  %92 = xor i32 %2, %0
  %93 = xor i32 %92, -1
  %94 = or i32 %93, %71
  %95 = or i32 %34, %49
  %96 = and i32 %23, %0
  %97 = and i32 %25, %21
  %98 = or i32 %96, %97
  %99 = xor i32 %56, %2
  %100 = or i32 %35, %21
  %101 = or i32 %80, %30
  %102 = xor i32 %10, -1
  %103 = xor i32 %34, -1
  %104 = and i32 %7, %103
  %105 = xor i32 %80, %1
  %106 = xor i32 %46, -1
  %107 = and i32 %92, %106
  %108 = or i32 %93, %1
  %109 = or i32 %7, %44
  %110 = and i32 %13, %0
  %111 = and i32 %81, %21
  %112 = or i32 %92, %46
  %113 = xor i32 %35, %34
  %114 = or i32 %80, %1
  %115 = or i32 %8, %21
  %116 = or i32 %34, %82
  %117 = and i32 %93, %106
  %118 = shl i32 %12, 1
  %119 = or i32 %93, %69
  %120 = and i32 %39, %22
  %121 = and i32 %68, %2
  %122 = or i32 %10, %46
  %123 = or i32 %11, %69
  %124 = shl i32 %54, 1
  %125 = or i32 %30, %0
  %126 = xor i32 %76, -1
  %127 = xor i32 %67, %126
  %128 = and i32 %60, %8
  %129 = and i32 %93, %56
  %130 = and i32 %102, %106
  %131 = or i32 %34, %8
  %132 = or i32 %30, %44
  %133 = and i32 %48, %22
  %134 = or i32 %12, %0
  %135 = and i32 %46, %102
  %136 = xor i32 %30, %0
  %137 = xor i32 %81, %34
  %138 = and i32 %8, %103
  %139 = and i32 %46, %2
  %140 = and i32 %92, %22
  %141 = or i32 %24, %26
  %142 = or i32 %92, %22
  %143 = or i32 %92, %106
  %144 = and i32 %92, %46
  %145 = or i32 %10, %106
  %146 = xor i32 %80, %54
  %147 = or i32 %44, %93
  %148 = xor i32 %54, %0
  %149 = and i32 %48, %46
  %150 = or i32 %13, %21
  %151 = and i32 %68, %11
  %152 = xor i32 %10, %68
  %153 = or i32 %92, %1
  %154 = and i32 %7, %60
  %155 = and i32 %102, %22
  %156 = shl i32 %155, 2
  %157 = or i32 %92, %34
  %158 = or i32 %12, %21
  %159 = xor i32 %80, -1
  %160 = and i32 %159, %106
  %161 = and i32 %60, %11
  %162 = or i32 %30, %21
  %163 = or i32 %35, %0
  %164 = or i32 %92, %71
  %165 = and i32 %81, %0
  %166 = and i32 %54, %21
  %167 = and i32 %39, %106
  %168 = shl i32 %167, 1
  %169 = and i32 %13, %21
  %170 = xor i32 %159, %1
  %171 = or i32 %10, %36
  %172 = and i32 %39, %1
  %173 = xor i32 %44, %2
  %174 = shl i32 %173, 1
  %175 = or i32 %11, %106
  %176 = and i32 %68, %93
  %177 = and i32 %11, %103
  %178 = or i32 %92, %69
  %179 = and i32 %102, %1
  %180 = or i32 %34, %93
  %181 = add i32 %92, 1
  %182 = and i32 %60, %93
  %183 = shl i32 %182, 2
  %184 = or i32 %44, %2
  %185 = or i32 %46, %11
  %186 = xor i32 %13, %0
  %187 = xor i32 %85, %126
  %188 = or i32 %12, %44
  %189 = xor i32 %40, %1
  %190 = and i32 %7, %68
  %191 = xor i32 %48, %1
  %192 = or i32 %34, %40
  %193 = shl i32 %192, 1
  %194 = and i32 %93, %22
  %195 = xor i32 %96, -1
  %196 = xor i32 %97, %195
  %197 = or i32 %44, %11
  %198 = xor i32 %8, %0
  %199 = shl i32 %198, 1
  %200 = or i32 %40, %106
  %201 = and i32 %92, %60
  %202 = or i32 %93, %22
  %203 = or i32 %7, %0
  %204 = xor i32 %96, %203
  %205 = xor i32 %80, %81
  %206 = shl i32 %205, 1
  %207 = and i32 %92, %68
  %208 = shl i32 %207, 1
  %209 = xor i32 %79, %195
  %210 = xor i32 %103, %2
  %211 = and i32 %92, %56
  %212 = xor i32 %10, %1
  %213 = add i32 %12, 1
  %214 = and i32 %48, %106
  %215 = or i32 %46, %40
  %216 = and i32 %93, %1
  %217 = add i32 %39, 1
  %218 = or i32 %81, %21
  %219 = shl i32 %218, 1
  %220 = or i32 %46, %93
  %221 = and i32 %92, %103
  %222 = xor i32 %34, %2
  %223 = xor i32 %102, %1
  %224 = xor i32 %81, %0
  %225 = or i32 %80, %106
  %226 = shl i32 %225, 1
  %227 = and i32 %93, %103
  %228 = or i32 %81, %0
  %229 = or i32 %49, %1
  %230 = or i32 %80, %22
  %231 = or i32 %82, %21
  %232 = or i32 %8, %71
  %233 = and i32 %159, %22
  %234 = or i32 %34, %11
  %235 = add i32 %44, 1
  %236 = and i32 %35, %21
  %237 = or i32 %13, %0
  %238 = or i32 %92, %44
  %239 = shl i32 %238, 1
  %240 = xor i32 %10, %35
  %241 = and i32 %36, %21
  %242 = and i32 %12, %21
  %243 = mul i32 %242, 9
  %244 = and i32 %36, %0
  %245 = mul i32 %244, -25
  %246 = and i32 %12, %0
  %247 = shl i32 %246, 4
  %248 = and i32 %82, %21
  %249 = mul i32 %31, -14
  %250 = and i32 %82, %0
  %251 = mul i32 %250, -12
  %252 = or i32 %16, %4
  %253 = xor i32 %4, %3
  %254 = xor i32 %253, -1
  %255 = and i32 %252, %254
  %256 = xor i32 %3, -1
  %257 = xor i32 %5, %4
  %258 = xor i32 %257, -1
  %259 = or i32 %258, %256
  %260 = or i32 %256, %4
  %261 = and i32 %19, %260
  %262 = and i32 %5, %3
  %263 = xor i32 %262, -1
  %264 = and i32 %263, %4
  %265 = or i32 %4, %3
  %266 = and i32 %265, %258
  %267 = xor i32 %252, -1
  %268 = shl i32 %267, 1
  %269 = and i32 %5, %4
  %270 = xor i32 %269, %265
  %271 = and i32 %4, %3
  %272 = or i32 %5, %3
  %273 = xor i32 %272, -1
  %274 = or i32 %271, %273
  %275 = or i32 %271, %5
  %276 = xor i32 %4, -1
  %277 = and i32 %272, %276
  %278 = and i32 %256, %4
  %279 = xor i32 %278, %5
  %280 = and i32 %262, %4
  %281 = xor i32 %272, %4
  %282 = or i32 %280, %281
  %283 = xor i32 %278, -1
  %284 = and i32 %257, %283
  %285 = and i32 %254, %5
  %286 = or i32 %253, %258
  %287 = or i32 %16, %3
  %288 = xor i32 %287, -1
  %289 = or i32 %288, %4
  %290 = xor i32 %269, -1
  %291 = xor i32 %290, %3
  %292 = and i32 %258, %3
  %293 = and i32 %257, %260
  %294 = and i32 %19, %276
  %295 = or i32 %280, %294
  %296 = and i32 %253, %290
  %297 = or i32 %5, %4
  %298 = xor i32 %297, -1
  %299 = xor i32 %298, %3
  %300 = xor i32 %19, -1
  %301 = and i32 %16, %254
  %302 = xor i32 %287, %271
  %303 = xor i32 %19, %4
  %304 = and i32 %256, %5
  %305 = and i32 %304, %276
  %306 = or i32 %19, %276
  %307 = xor i32 %305, %306
  %308 = and i32 %19, %283
  %309 = xor i32 %280, -1
  %310 = xor i32 %277, %309
  %311 = xor i32 %260, -1
  %312 = or i32 %16, %311
  %313 = shl i32 %312, 1
  %314 = or i32 %271, %16
  %315 = xor i32 %260, %5
  %316 = or i32 %257, %256
  %317 = and i32 %253, %5
  %318 = and i32 %304, %4
  %319 = or i32 %256, %5
  %320 = and i32 %319, %276
  %321 = or i32 %318, %320
  %322 = shl i32 %321, 1
  %323 = xor i32 %271, -1
  %324 = and i32 %16, %323
  %325 = and i32 %297, %3
  %326 = and i32 %16, %3
  %327 = or i32 %326, %4
  %328 = xor i32 %326, -1
  %329 = xor i32 %269, %328
  %330 = and i32 %260, %16
  %331 = or i32 %267, %254
  %332 = shl i32 %254, 1
  %333 = xor i32 %262, %4
  %334 = and i32 %257, %265
  %335 = or i32 %269, %3
  %336 = and i32 %262, %276
  %337 = and i32 %19, %4
  %338 = or i32 %336, %337
  %339 = and i32 %19, %323
  %340 = and i32 %253, %16
  %341 = or i32 %298, %256
  %342 = or i32 %19, %4
  %343 = xor i32 %273, %4
  %344 = and i32 %16, %4
  %345 = xor i32 %344, -1
  %346 = and i32 %253, %345
  %347 = or i32 %16, %254
  %348 = or i32 %253, %298
  %349 = or i32 %254, %5
  %350 = shl i32 %349, 1
  %351 = xor i32 %336, -1
  %352 = xor i32 %337, %351
  %353 = xor i32 %294, %309
  %354 = xor i32 %323, %5
  %355 = xor i32 %265, -1
  %356 = or i32 %262, %278
  %357 = and i32 %300, %323
  %358 = or i32 %257, %311
  %359 = xor i32 %319, %4
  %360 = or i32 %318, %359
  %361 = and i32 %260, %300
  %362 = or i32 %253, %16
  %363 = and i32 %287, %4
  %364 = xor i32 %288, %4
  %365 = add i32 %287, 1
  %366 = xor i32 %318, -1
  %367 = xor i32 %359, %366
  %368 = or i32 %344, %254
  %369 = or i32 %273, %276
  %370 = or i32 %257, %3
  %371 = xor i32 %263, %4
  %372 = or i32 %258, %254
  %373 = and i32 %290, %254
  %374 = or i32 %257, %271
  %375 = and i32 %287, %276
  %376 = shl i32 %375, 1
  %377 = xor i32 %311, %5
  %378 = xor i32 %265, %5
  %379 = xor i32 %267, %3
  %380 = and i32 %257, %254
  %381 = or i32 %258, %311
  %382 = or i32 %271, %298
  %383 = and i32 %290, %3
  %384 = and i32 %300, %276
  %385 = xor i32 %300, %4
  %386 = shl i32 %385, 1
  %387 = xor i32 %280, %303
  %388 = shl i32 %256, 1
  %389 = xor i32 %344, %287
  %390 = or i32 %269, %256
  %391 = xor i32 %283, %5
  %392 = shl i32 %391, 1
  %393 = and i32 %253, %258
  %394 = or i32 %253, %267
  %395 = or i32 %269, %273
  %396 = and i32 %272, %4
  %397 = or i32 %257, %278
  %398 = xor i32 %281, %309
  %399 = and i32 %257, %323
  %400 = xor i32 %328, %4
  %401 = or i32 %16, %355
  %402 = and i32 %297, %256
  %403 = or i32 %278, %16
  %404 = and i32 %345, %256
  %405 = or i32 %271, %258
  %406 = or i32 %19, %271
  %407 = or i32 %298, %254
  %408 = xor i32 %345, %3
  %409 = xor i32 %278, %263
  %410 = xor i32 %269, %272
  %411 = xor i32 %297, %3
  %412 = or i32 %271, %288
  %413 = and i32 %345, %254
  %414 = shl i32 %413, 2
  %415 = and i32 %258, %283
  %416 = or i32 %328, %4
  %417 = and i32 %265, %16
  %418 = shl i32 %417, 1
  %419 = shl i32 %298, 2
  %420 = or i32 %262, %276
  %421 = xor i32 %272, %271
  %422 = or i32 %326, %278
  %423 = and i32 %257, %253
  %424 = or i32 %272, %276
  %425 = shl i32 %424, 1
  %426 = or i32 %300, %4
  %427 = and i32 %319, %4
  %428 = or i32 %305, %427
  %429 = shl i32 %428, 1
  %430 = or i32 %300, %311
  %431 = or i32 %263, %4
  %432 = and i32 %19, %265
  %433 = or i32 %253, %5
  %434 = shl i32 %433, 1
  %435 = or i32 %19, %278
  %436 = xor i32 %427, -1
  %437 = xor i32 %305, %436
  %438 = or i32 %287, %4
  %439 = and i32 %265, %5
  %440 = or i32 %258, %3
  %441 = and i32 %265, %300
  %442 = or i32 %267, %256
  %443 = shl i32 %442, 1
  %444 = or i32 %278, %258
  %445 = xor i32 %396, %351
  %446 = or i32 %278, %5
  %447 = and i32 %252, %253
  %448 = and i32 %16, %283
  %449 = xor i32 %344, %3
  %450 = xor i32 %287, %4
  %451 = or i32 %258, %355
  %452 = and i32 %345, %3
  %453 = and i32 %300, %4
  %454 = xor i32 %269, %3
  %455 = xor i32 %326, %4
  %456 = and i32 %260, %5
  %457 = or i32 %271, %300
  %458 = or i32 %318, %303
  %459 = or i32 %336, %396
  %460 = or i32 %344, %253
  %461 = shl i32 %460, 1
  %462 = or i32 %262, %4
  %463 = or i32 %326, %276
  %464 = or i32 %288, %276
  %465 = and i32 %328, %276
  %466 = and i32 %328, %4
  %467 = shl i32 %466, 1
  %468 = and i32 %297, %254
  %469 = shl i32 %468, 1
  %470 = or i32 %344, %3
  %471 = and i32 %258, %254
  %472 = or i32 %263, %276
  %473 = or i32 %298, %3
  %474 = xor i32 %252, %271
  %475 = shl i32 %474, 1
  %476 = or i32 %269, %311
  %477 = shl i32 %476, 1
  %478 = or i32 %300, %276
  %479 = or i32 %344, %288
  %480 = or i32 %19, %311
  %481 = xor i32 %278, %328
  %482 = and i32 %290, %256
  %483 = add i32 %260, 1
  %484 = or i32 %278, %300
  %485 = and i32 %257, %256
  %486 = or i32 %280, %277
  %487 = or i32 %300, %355
  %488 = xor i32 %342, 2147483647
  %489 = or i32 %488, %318
  %490 = or i32 %355, %5
  %491 = and i32 %252, %3
  %492 = shl i32 %491, 1
  %493 = xor i32 %271, %5
  %494 = or i32 %269, %254
  %495 = or i32 %344, %262
  %496 = or i32 %271, %267
  %497 = and i32 %300, %283
  %498 = and i32 %283, %5
  %499 = or i32 %269, %253
  %500 = and i32 %260, %258
  %501 = or i32 %273, %4
  %502 = or i32 %272, %4
  %503 = and i32 %257, %3
  %504 = shl i32 %503, 1
  %505 = or i32 %257, %253
  %506 = or i32 %269, %355
  %507 = xor i32 %303, -1
  %508 = or i32 %280, %507
  %509 = or i32 %344, %256
  %510 = xor i32 %320, %366
  %511 = and i32 %297, %253
  %512 = xor i32 %306, 2147483647
  %513 = or i32 %512, %305
  %514 = xor i32 %269, %260
  %515 = shl i32 %514, 1
  %516 = or i32 %311, %5
  %517 = xor i32 %355, %5
  %518 = shl i32 %517, 1
  %519 = and i32 %252, %256
  %520 = or i32 %328, %276
  %521 = xor i32 %297, %271
  %522 = shl i32 %521, 1
  %523 = and i32 %323, %5
  %524 = shl i32 %263, 1
  %525 = and i32 %258, %256
  %526 = xor i32 %252, %3
  %527 = xor i32 %344, %263
  %528 = or i32 %287, %276
  %529 = or i32 %257, %254
  %530 = xor i32 %318, %507
  %531 = or i32 %267, %3
  %532 = and i32 %258, %323
  %533 = or i32 %269, %326
  %534 = or i32 %257, %355
  %535 = and i32 %263, %276
  %536 = shl i32 %535, 1
  %537 = and i32 %273, %276
  %538 = mul i32 %537, -13
  %539 = and i32 %326, %276
  %540 = mul i32 %539, 17
  %541 = and i32 %273, %4
  %542 = mul i32 %541, -20
  %543 = and i32 %326, %4
  %544 = and i32 %288, %276
  %545 = mul i32 %544, 18
  %546 = and i32 %288, %4
  %547 = mul i32 %280, -19
  %548 = sub i32 %0, %10
  %549 = sub i32 %548, %121
  %550 = add i32 %549, %32
  %551 = sub i32 %550, %269
  %552 = add i32 %551, %471
  %553 = sub i32 %552, %487
  %554 = add i32 %553, %455
  %555 = sub i32 %554, %452
  %556 = add i32 %555, %291
  %557 = mul i32 %556, 5
  %558 = sub i32 %132, %145
  %559 = sub i32 %558, %115
  %560 = sub i32 %559, %326
  %561 = sub i32 %560, %348
  %562 = sub i32 %561, %421
  %563 = mul i32 %562, 3
  %564 = add i32 %241, %68
  %565 = add i32 %564, %91
  %566 = add i32 %565, %481
  %567 = shl i32 %566, 2
  %568 = sub i32 %248, %336
  %569 = mul i32 %568, 6
  %570 = sub i32 -2, %46
  %571 = add i32 %570, %197
  %572 = add i32 %571, %39
  %573 = add i32 %572, %80
  %574 = add i32 %573, %202
  %575 = add i32 %574, %201
  %576 = add i32 %575, %200
  %577 = add i32 %576, %186
  %578 = add i32 %577, %85
  %579 = add i32 %578, %133
  %580 = add i32 %579, %122
  %581 = add i32 %580, %112
  %582 = add i32 %581, %100
  %583 = add i32 %582, %73
  %584 = add i32 %583, %65
  %585 = add i32 %584, %345
  %586 = add i32 %585, %403
  %587 = add i32 %586, %273
  %588 = add i32 %587, %315
  %589 = add i32 %588, %528
  %590 = add i32 %589, %500
  %591 = add i32 %590, %497
  %592 = add i32 %591, %470
  %593 = add i32 %592, %457
  %594 = add i32 %593, %409
  %595 = add i32 %594, %400
  %596 = add i32 %595, %384
  %597 = add i32 %596, %381
  %598 = add i32 %597, %325
  %599 = add i32 %598, %293
  %600 = add i32 %599, %286
  %601 = add i32 %600, %266
  %602 = add i32 %601, %459
  %603 = add i32 %602, %489
  %604 = add i32 %603, %513
  %605 = shl i32 %604, 1
  %606 = add i32 %0, -3
  %607 = sub i32 %606, %44
  %608 = add i32 %607, %64
  %609 = sub i32 %608, %34
  %610 = sub i32 %609, %60
  %611 = add i32 %610, %69
  %612 = add i32 %611, %71
  %613 = add i32 %612, %235
  %614 = sub i32 %613, %30
  %615 = add i32 %614, %50
  %616 = sub i32 %615, %72
  %617 = sub i32 %616, %75
  %618 = add i32 %617, %78
  %619 = sub i32 %618, %99
  %620 = add i32 %619, %102
  %621 = add i32 %620, %82
  %622 = sub i32 %621, %35
  %623 = add i32 %622, %123
  %624 = sub i32 %623, %139
  %625 = sub i32 %624, %151
  %626 = sub i32 %625, %81
  %627 = add i32 %626, %161
  %628 = add i32 %627, %48
  %629 = sub i32 %628, %175
  %630 = sub i32 %629, %177
  %631 = add i32 %630, %181
  %632 = sub i32 %631, %184
  %633 = sub i32 %632, %185
  %634 = add i32 %633, %7
  %635 = add i32 %634, %210
  %636 = add i32 %635, %213
  %637 = add i32 %636, %217
  %638 = sub i32 %637, %222
  %639 = add i32 %638, %36
  %640 = sub i32 %639, %234
  %641 = sub i32 %640, %3
  %642 = add i32 %641, %37
  %643 = add i32 %642, %38
  %644 = sub i32 %643, %41
  %645 = add i32 %644, %45
  %646 = add i32 %645, %47
  %647 = add i32 %646, %53
  %648 = add i32 %647, %55
  %649 = add i32 %648, %57
  %650 = sub i32 %649, %59
  %651 = sub i32 %650, %62
  %652 = add i32 %651, %63
  %653 = sub i32 %652, %66
  %654 = add i32 %653, %67
  %655 = sub i32 %654, %70
  %656 = add i32 %655, %74
  %657 = sub i32 %656, %79
  %658 = sub i32 %657, %83
  %659 = sub i32 %658, %84
  %660 = add i32 %659, %94
  %661 = add i32 %660, %95
  %662 = add i32 %661, %101
  %663 = add i32 %662, %104
  %664 = add i32 %663, %105
  %665 = add i32 %664, %107
  %666 = sub i32 %665, %108
  %667 = sub i32 %666, %109
  %668 = add i32 %667, %110
  %669 = sub i32 %668, %111
  %670 = add i32 %669, %113
  %671 = add i32 %670, %114
  %672 = add i32 %671, %116
  %673 = add i32 %672, %117
  %674 = sub i32 %673, %118
  %675 = sub i32 %674, %119
  %676 = sub i32 %675, %120
  %677 = sub i32 %676, %124
  %678 = sub i32 %677, %125
  %679 = add i32 %678, %128
  %680 = sub i32 %679, %129
  %681 = sub i32 %680, %130
  %682 = add i32 %681, %131
  %683 = sub i32 %682, %134
  %684 = add i32 %683, %135
  %685 = add i32 %684, %136
  %686 = add i32 %685, %137
  %687 = add i32 %686, %138
  %688 = add i32 %687, %140
  %689 = add i32 %688, %142
  %690 = add i32 %689, %143
  %691 = add i32 %690, %144
  %692 = add i32 %691, %146
  %693 = sub i32 %692, %147
  %694 = sub i32 %693, %148
  %695 = sub i32 %694, %149
  %696 = add i32 %695, %150
  %697 = add i32 %696, %152
  %698 = add i32 %697, %153
  %699 = add i32 %698, %154
  %700 = sub i32 %699, %157
  %701 = sub i32 %700, %158
  %702 = add i32 %701, %160
  %703 = sub i32 %702, %162
  %704 = sub i32 %703, %163
  %705 = add i32 %704, %164
  %706 = add i32 %705, %165
  %707 = sub i32 %706, %166
  %708 = add i32 %707, %169
  %709 = sub i32 %708, %170
  %710 = add i32 %709, %171
  %711 = add i32 %710, %172
  %712 = sub i32 %711, %174
  %713 = sub i32 %712, %176
  %714 = sub i32 %713, %178
  %715 = add i32 %714, %179
  %716 = add i32 %715, %180
  %717 = sub i32 %716, %188
  %718 = add i32 %717, %189
  %719 = sub i32 %718, %190
  %720 = sub i32 %719, %191
  %721 = add i32 %720, %194
  %722 = add i32 %721, %42
  %723 = add i32 %722, %211
  %724 = add i32 %723, %212
  %725 = add i32 %724, %214
  %726 = add i32 %725, %215
  %727 = add i32 %726, %216
  %728 = add i32 %727, %87
  %729 = add i32 %728, %220
  %730 = add i32 %729, %221
  %731 = add i32 %730, %223
  %732 = sub i32 %731, %224
  %733 = sub i32 %732, %227
  %734 = sub i32 %733, %228
  %735 = sub i32 %734, %229
  %736 = add i32 %735, %230
  %737 = add i32 %736, %231
  %738 = sub i32 %737, %232
  %739 = sub i32 %738, %233
  %740 = add i32 %739, %236
  %741 = sub i32 %740, %237
  %742 = sub i32 %741, %240
  %743 = add i32 %742, %76
  %744 = add i32 %743, %276
  %745 = sub i32 %744, %388
  %746 = sub i32 %745, %4
  %747 = sub i32 %746, %33
  %748 = add i32 %747, %43
  %749 = sub i32 %748, %52
  %750 = sub i32 %749, %77
  %751 = sub i32 %750, %86
  %752 = add i32 %751, %88
  %753 = sub i32 %752, %90
  %754 = add i32 %753, %98
  %755 = sub i32 %754, %127
  %756 = add i32 %755, %141
  %757 = sub i32 %756, %156
  %758 = sub i32 %757, %168
  %759 = sub i32 %758, %183
  %760 = add i32 %759, %187
  %761 = sub i32 %760, %193
  %762 = add i32 %761, %196
  %763 = sub i32 %762, %199
  %764 = sub i32 %763, %204
  %765 = sub i32 %764, %206
  %766 = sub i32 %765, %208
  %767 = add i32 %766, %209
  %768 = sub i32 %767, %219
  %769 = sub i32 %768, %226
  %770 = sub i32 %769, %239
  %771 = add i32 %770, %243
  %772 = add i32 %771, %245
  %773 = sub i32 %772, %247
  %774 = add i32 %773, %249
  %775 = add i32 %774, %251
  %776 = sub i32 %775, %260
  %777 = add i32 %776, %271
  %778 = add i32 %777, 2
  %779 = add i32 %778, %253
  %780 = sub i32 %779, %5
  %781 = sub i32 %780, %271
  %782 = add i32 %781, %483
  %783 = add i32 %782, %275
  %784 = add i32 %783, %279
  %785 = sub i32 %784, %285
  %786 = sub i32 %785, %272
  %787 = add i32 %786, %300
  %788 = add i32 %787, %301
  %789 = add i32 %788, %314
  %790 = add i32 %789, %317
  %791 = add i32 %790, %324
  %792 = sub i32 %791, %287
  %793 = add i32 %792, %330
  %794 = sub i32 %793, %332
  %795 = sub i32 %794, %340
  %796 = sub i32 %795, %347
  %797 = sub i32 %796, %354
  %798 = add i32 %797, %362
  %799 = add i32 %798, %365
  %800 = sub i32 %799, %377
  %801 = sub i32 %800, %378
  %802 = sub i32 %801, %401
  %803 = add i32 %802, %290
  %804 = sub i32 %803, %257
  %805 = sub i32 %804, %344
  %806 = add i32 %805, %439
  %807 = add i32 %806, %262
  %808 = add i32 %807, %446
  %809 = sub i32 %808, %448
  %810 = sub i32 %809, %456
  %811 = sub i32 %810, %490
  %812 = add i32 %811, %328
  %813 = add i32 %812, %493
  %814 = add i32 %813, %258
  %815 = add i32 %814, %252
  %816 = add i32 %815, %498
  %817 = add i32 %816, %516
  %818 = add i32 %817, %523
  %819 = add i32 %818, %297
  %820 = add i32 %819, %29
  %821 = sub i32 %820, %255
  %822 = add i32 %821, %259
  %823 = sub i32 %822, %261
  %824 = add i32 %823, %264
  %825 = sub i32 %824, %268
  %826 = add i32 %825, %270
  %827 = add i32 %826, %274
  %828 = sub i32 %827, %277
  %829 = add i32 %828, %284
  %830 = add i32 %829, %289
  %831 = add i32 %830, %292
  %832 = add i32 %831, %296
  %833 = sub i32 %832, %299
  %834 = add i32 %833, %302
  %835 = sub i32 %834, %303
  %836 = sub i32 %835, %308
  %837 = sub i32 %836, %313
  %838 = sub i32 %837, %316
  %839 = add i32 %838, %327
  %840 = add i32 %839, %329
  %841 = sub i32 %840, %331
  %842 = add i32 %841, %281
  %843 = add i32 %842, %333
  %844 = add i32 %843, %334
  %845 = sub i32 %844, %335
  %846 = add i32 %845, %339
  %847 = add i32 %846, %341
  %848 = add i32 %847, %342
  %849 = add i32 %848, %343
  %850 = sub i32 %849, %346
  %851 = sub i32 %850, %350
  %852 = add i32 %851, %356
  %853 = sub i32 %852, %357
  %854 = add i32 %853, %358
  %855 = sub i32 %854, %361
  %856 = sub i32 %855, %363
  %857 = sub i32 %856, %364
  %858 = add i32 %857, %368
  %859 = sub i32 %858, %369
  %860 = add i32 %859, %370
  %861 = sub i32 %860, %371
  %862 = sub i32 %861, %372
  %863 = sub i32 %862, %373
  %864 = add i32 %863, %374
  %865 = add i32 %864, %379
  %866 = add i32 %865, %380
  %867 = add i32 %866, %382
  %868 = sub i32 %867, %383
  %869 = add i32 %868, %389
  %870 = add i32 %869, %390
  %871 = sub i32 %870, %392
  %872 = sub i32 %871, %393
  %873 = sub i32 %872, %394
  %874 = add i32 %873, %395
  %875 = add i32 %874, %396
  %876 = add i32 %875, %397
  %877 = sub i32 %876, %399
  %878 = sub i32 %877, %294
  %879 = sub i32 %878, %402
  %880 = add i32 %879, %404
  %881 = add i32 %880, %405
  %882 = add i32 %881, %406
  %883 = add i32 %882, %407
  %884 = sub i32 %883, %408
  %885 = sub i32 %884, %410
  %886 = sub i32 %885, %411
  %887 = sub i32 %886, %412
  %888 = add i32 %887, %415
  %889 = add i32 %888, %416
  %890 = sub i32 %889, %418
  %891 = sub i32 %890, %419
  %892 = sub i32 %891, %420
  %893 = add i32 %892, %422
  %894 = add i32 %893, %423
  %895 = add i32 %894, %426
  %896 = sub i32 %895, %430
  %897 = sub i32 %896, %431
  %898 = sub i32 %897, %432
  %899 = sub i32 %898, %434
  %900 = sub i32 %899, %435
  %901 = add i32 %900, %438
  %902 = add i32 %901, %440
  %903 = sub i32 %902, %441
  %904 = sub i32 %903, %444
  %905 = add i32 %904, %447
  %906 = sub i32 %905, %449
  %907 = add i32 %906, %450
  %908 = add i32 %907, %451
  %909 = add i32 %908, %453
  %910 = add i32 %909, %454
  %911 = add i32 %910, %462
  %912 = add i32 %911, %463
  %913 = add i32 %912, %464
  %914 = add i32 %913, %465
  %915 = sub i32 %914, %472
  %916 = sub i32 %915, %473
  %917 = sub i32 %916, %478
  %918 = sub i32 %917, %479
  %919 = sub i32 %918, %480
  %920 = add i32 %919, %482
  %921 = sub i32 %920, %484
  %922 = add i32 %921, %485
  %923 = add i32 %922, %494
  %924 = add i32 %923, %495
  %925 = add i32 %924, %337
  %926 = add i32 %925, %496
  %927 = add i32 %926, %499
  %928 = add i32 %927, %501
  %929 = sub i32 %928, %502
  %930 = sub i32 %929, %306
  %931 = sub i32 %930, %505
  %932 = sub i32 %931, %506
  %933 = add i32 %932, %509
  %934 = add i32 %933, %511
  %935 = sub i32 %934, %518
  %936 = add i32 %935, %519
  %937 = sub i32 %936, %520
  %938 = sub i32 %937, %524
  %939 = sub i32 %938, %525
  %940 = add i32 %939, %526
  %941 = add i32 %940, %527
  %942 = sub i32 %941, %529
  %943 = sub i32 %942, %531
  %944 = add i32 %943, %532
  %945 = sub i32 %944, %533
  %946 = add i32 %945, %534
  %947 = sub i32 %946, %543
  %948 = add i32 %947, %546
  %949 = add i32 %948, %282
  %950 = add i32 %949, %295
  %951 = sub i32 %950, %307
  %952 = add i32 %951, %310
  %953 = add i32 %952, %338
  %954 = sub i32 %953, %352
  %955 = add i32 %954, %353
  %956 = sub i32 %955, %360
  %957 = add i32 %956, %367
  %958 = sub i32 %957, %376
  %959 = sub i32 %958, %386
  %960 = sub i32 %959, %387
  %961 = sub i32 %960, %398
  %962 = sub i32 %961, %414
  %963 = sub i32 %962, %425
  %964 = add i32 %963, %437
  %965 = sub i32 %964, %443
  %966 = add i32 %965, %445
  %967 = add i32 %966, %458
  %968 = sub i32 %967, %461
  %969 = sub i32 %968, %467
  %970 = sub i32 %969, %469
  %971 = sub i32 %970, %475
  %972 = sub i32 %971, %477
  %973 = add i32 %972, %486
  %974 = sub i32 %973, %492
  %975 = sub i32 %974, %504
  %976 = add i32 %975, %508
  %977 = sub i32 %976, %510
  %978 = sub i32 %977, %515
  %979 = sub i32 %978, %522
  %980 = sub i32 %979, %530
  %981 = sub i32 %980, %536
  %982 = add i32 %981, %538
  %983 = add i32 %982, %540
  %984 = add i32 %983, %542
  %985 = add i32 %984, %545
  %986 = add i32 %985, %547
  %987 = sub i32 %986, %322
  %988 = sub i32 %987, %429
  %989 = add i32 %988, %569
  %990 = add i32 %989, %567
  %991 = add i32 %990, %563
  %992 = add i32 %991, %557
  %993 = add i32 %992, %605
  %994 = icmp eq i32 %20, %993
  %995 = select i1 %994, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %996 = tail call i32 @puts(i8* nonnull dereferenceable(1) %995)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
