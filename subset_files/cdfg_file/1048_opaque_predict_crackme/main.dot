digraph "DFG for'main' function" {
	Node0x2402dd8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2402e58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2402ee8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x2403348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2403428[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x2403548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2403780[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x2403838[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x24047a8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2404e30[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x2404ea0[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0x2404f10[shape=record, label="  %10 = shl i32 %8, 1"];
	Node0x2404f80[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x2404ff0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x2405060[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x24050d0[shape=record, label="  %14 = or i32 %6, %12"];
	Node0x2405140[shape=record, label="  %15 = and i32 %7, %6"];
	Node0x24051b0[shape=record, label="  %16 = and i32 %6, %12"];
	Node0x2405220[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x2405290[shape=record, label="  %18 = shl i32 %15, 1"];
	Node0x2405300[shape=record, label="  %19 = sub i32 %14, %15"];
	Node0x2405370[shape=record, label="  %20 = mul i32 %19, 3"];
	Node0x24053e0[shape=record, label="  %21 = add i32 %13, %7"];
	Node0x2405450[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x24054c0[shape=record, label="  %23 = add i32 %6, 6"];
	Node0x2405530[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x24055a0[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x2405610[shape=record, label="  %26 = sub i32 %25, %17"];
	Node0x2405680[shape=record, label="  %27 = sub i32 %26, %18"];
	Node0x24056f0[shape=record, label="  %28 = add i32 %27, %11"];
	Node0x2405760[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x24057d0[shape=record, label="  %30 = add i32 %29, %22"];
	Node0x2405840[shape=record, label="  %31 = icmp eq i32 %9, %30"];
	Node0x23a39d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2405ae0[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x2405d38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2405e98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2405f58[shape=record, label="  ret i32 0"];
	Node0x2402dd8 -> Node0x2402e58;
	Node0x2402e58 -> Node0x2402ee8;
	Node0x2402ee8 -> Node0x2403348;
	Node0x2403348 -> Node0x2403428;
	Node0x2403428 -> Node0x2403548;
	Node0x2403548 -> Node0x2403780;
	Node0x2403780 -> Node0x2403838;
	Node0x2403838 -> Node0x24047a8;
	Node0x24047a8 -> Node0x2404e30;
	Node0x2404e30 -> Node0x2404ea0;
	Node0x2404ea0 -> Node0x2404f10;
	Node0x2404f10 -> Node0x2404f80;
	Node0x2404f80 -> Node0x2404ff0;
	Node0x2404ff0 -> Node0x2405060;
	Node0x2405060 -> Node0x24050d0;
	Node0x24050d0 -> Node0x2405140;
	Node0x2405140 -> Node0x24051b0;
	Node0x24051b0 -> Node0x2405220;
	Node0x2405220 -> Node0x2405290;
	Node0x2405290 -> Node0x2405300;
	Node0x2405300 -> Node0x2405370;
	Node0x2405370 -> Node0x24053e0;
	Node0x24053e0 -> Node0x2405450;
	Node0x2405450 -> Node0x24054c0;
	Node0x24054c0 -> Node0x2405530;
	Node0x2405530 -> Node0x24055a0;
	Node0x24055a0 -> Node0x2405610;
	Node0x2405610 -> Node0x2405680;
	Node0x2405680 -> Node0x24056f0;
	Node0x24056f0 -> Node0x2405760;
	Node0x2405760 -> Node0x24057d0;
	Node0x24057d0 -> Node0x2405840;
	Node0x2405840 -> Node0x23a39d8;
	Node0x23a39d8 -> Node0x2405ae0;
	Node0x2405ae0 -> Node0x2405d38;
	Node0x2405d38 -> Node0x2405e98;
	Node0x2405e98 -> Node0x2405f58;
edge [color=red]
	Node0x2402dd8 -> Node0x2402ee8;
	Node0x2402ee8 -> Node0x2403348;
	Node0x2402e58 -> Node0x2403428;
	Node0x2403428 -> Node0x2403548;
	Node0x2402dd8 -> Node0x2403780;
	Node0x2402e58 -> Node0x2403780;
	Node0x2402dd8 -> Node0x2403838;
	Node0x2402e58 -> Node0x24047a8;
	Node0x24047a8 -> Node0x2404e30;
	Node0x2403838 -> Node0x2404e30;
	Node0x2404e30 -> Node0x2404ea0;
	Node0x2404e30 -> Node0x2404f10;
	Node0x2404f10 -> Node0x2404f80;
	Node0x24047a8 -> Node0x2404ff0;
	Node0x24047a8 -> Node0x2405060;
	Node0x2403838 -> Node0x2405060;
	Node0x2403838 -> Node0x24050d0;
	Node0x2404ff0 -> Node0x24050d0;
	Node0x24047a8 -> Node0x2405140;
	Node0x2403838 -> Node0x2405140;
	Node0x2403838 -> Node0x24051b0;
	Node0x2404ff0 -> Node0x24051b0;
	Node0x24051b0 -> Node0x2405220;
	Node0x2405140 -> Node0x2405290;
	Node0x24050d0 -> Node0x2405300;
	Node0x2405140 -> Node0x2405300;
	Node0x2405300 -> Node0x2405370;
	Node0x2405060 -> Node0x24053e0;
	Node0x24047a8 -> Node0x24053e0;
	Node0x24053e0 -> Node0x2405450;
	Node0x2403838 -> Node0x24054c0;
	Node0x24054c0 -> Node0x2405530;
	Node0x24050d0 -> Node0x2405530;
	Node0x2405530 -> Node0x24055a0;
	Node0x24051b0 -> Node0x24055a0;
	Node0x24055a0 -> Node0x2405610;
	Node0x2405220 -> Node0x2405610;
	Node0x2405610 -> Node0x2405680;
	Node0x2405290 -> Node0x2405680;
	Node0x2405680 -> Node0x24056f0;
	Node0x2404f80 -> Node0x24056f0;
	Node0x24056f0 -> Node0x2405760;
	Node0x2405370 -> Node0x2405760;
	Node0x2405760 -> Node0x24057d0;
	Node0x2405450 -> Node0x24057d0;
	Node0x2404ea0 -> Node0x2405840;
	Node0x24057d0 -> Node0x2405840;
	Node0x2405840 -> Node0x23a39d8;
	Node0x23a39d8 -> Node0x2405ae0;
	Node0x2403428 -> Node0x2405d38;
	Node0x2402ee8 -> Node0x2405e98;
}
