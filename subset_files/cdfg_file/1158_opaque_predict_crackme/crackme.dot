digraph "DFG for'crackme' function" {
	Node0x22e2c40[shape=record, label="  %3 = add i32 %0, 1"];
	Node0x22e2cb0[shape=record, label="  %4 = xor i32 %1, %0"];
	Node0x22e2d70[shape=record, label="  %5 = mul i32 %4, -5"];
	Node0x22e2de0[shape=record, label="  %6 = add i32 %3, %5"];
	Node0x22e2e80[shape=record, label="  %7 = shl i32 %0, 2"];
	Node0x22e2f20[shape=record, label="  %8 = xor i32 %1, -1"];
	Node0x22e2f90[shape=record, label="  %9 = or i32 %8, %0"];
	Node0x22e3000[shape=record, label="  %10 = and i32 %1, %0"];
	Node0x22e3070[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x22e30e0[shape=record, label="  %12 = or i32 %1, %0"];
	Node0x22e3150[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x22e31f0[shape=record, label="  %14 = mul i32 %13, -3"];
	Node0x22e3260[shape=record, label="  %15 = xor i32 %9, -1"];
	Node0x22e3300[shape=record, label="  %16 = mul i32 %15, -6"];
	Node0x22e3370[shape=record, label="  %17 = and i32 %8, %0"];
	Node0x22e3410[shape=record, label="  %18 = mul i32 %17, -12"];
	Node0x22e3480[shape=record, label="  %19 = shl i32 %10, 2"];
	Node0x22e34f0[shape=record, label="  %20 = or i32 %7, 1"];
	Node0x22e3560[shape=record, label="  %21 = sub i32 %20, %1"];
	Node0x22e35d0[shape=record, label="  %22 = add i32 %21, %8"];
	Node0x22e3640[shape=record, label="  %23 = add i32 %22, %9"];
	Node0x22e36b0[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x22e3720[shape=record, label="  %25 = add i32 %24, %12"];
	Node0x22e3790[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x22e3800[shape=record, label="  %27 = add i32 %26, %16"];
	Node0x22e3870[shape=record, label="  %28 = add i32 %27, %18"];
	Node0x22e38e0[shape=record, label="  %29 = sub i32 %28, %19"];
	Node0x22e3950[shape=record, label="  %30 = icmp eq i32 %6, %29"];
	Node0x2283268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22e3df0[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x22e4050[shape=record, label="  ret void"];
	Node0x22e2c40 -> Node0x22e2cb0;
	Node0x22e2cb0 -> Node0x22e2d70;
	Node0x22e2d70 -> Node0x22e2de0;
	Node0x22e2de0 -> Node0x22e2e80;
	Node0x22e2e80 -> Node0x22e2f20;
	Node0x22e2f20 -> Node0x22e2f90;
	Node0x22e2f90 -> Node0x22e3000;
	Node0x22e3000 -> Node0x22e3070;
	Node0x22e3070 -> Node0x22e30e0;
	Node0x22e30e0 -> Node0x22e3150;
	Node0x22e3150 -> Node0x22e31f0;
	Node0x22e31f0 -> Node0x22e3260;
	Node0x22e3260 -> Node0x22e3300;
	Node0x22e3300 -> Node0x22e3370;
	Node0x22e3370 -> Node0x22e3410;
	Node0x22e3410 -> Node0x22e3480;
	Node0x22e3480 -> Node0x22e34f0;
	Node0x22e34f0 -> Node0x22e3560;
	Node0x22e3560 -> Node0x22e35d0;
	Node0x22e35d0 -> Node0x22e3640;
	Node0x22e3640 -> Node0x22e36b0;
	Node0x22e36b0 -> Node0x22e3720;
	Node0x22e3720 -> Node0x22e3790;
	Node0x22e3790 -> Node0x22e3800;
	Node0x22e3800 -> Node0x22e3870;
	Node0x22e3870 -> Node0x22e38e0;
	Node0x22e38e0 -> Node0x22e3950;
	Node0x22e3950 -> Node0x2283268;
	Node0x2283268 -> Node0x22e3df0;
	Node0x22e3df0 -> Node0x22e4050;
edge [color=red]
	Node0x22e2cb0 -> Node0x22e2d70;
	Node0x22e2c40 -> Node0x22e2de0;
	Node0x22e2d70 -> Node0x22e2de0;
	Node0x22e2f20 -> Node0x22e2f90;
	Node0x22e3000 -> Node0x22e3070;
	Node0x22e30e0 -> Node0x22e3150;
	Node0x22e3150 -> Node0x22e31f0;
	Node0x22e2f90 -> Node0x22e3260;
	Node0x22e3260 -> Node0x22e3300;
	Node0x22e2f20 -> Node0x22e3370;
	Node0x22e3370 -> Node0x22e3410;
	Node0x22e3000 -> Node0x22e3480;
	Node0x22e2e80 -> Node0x22e34f0;
	Node0x22e34f0 -> Node0x22e3560;
	Node0x22e3560 -> Node0x22e35d0;
	Node0x22e2f20 -> Node0x22e35d0;
	Node0x22e35d0 -> Node0x22e3640;
	Node0x22e2f90 -> Node0x22e3640;
	Node0x22e3640 -> Node0x22e36b0;
	Node0x22e3070 -> Node0x22e36b0;
	Node0x22e36b0 -> Node0x22e3720;
	Node0x22e30e0 -> Node0x22e3720;
	Node0x22e3720 -> Node0x22e3790;
	Node0x22e31f0 -> Node0x22e3790;
	Node0x22e3790 -> Node0x22e3800;
	Node0x22e3300 -> Node0x22e3800;
	Node0x22e3800 -> Node0x22e3870;
	Node0x22e3410 -> Node0x22e3870;
	Node0x22e3870 -> Node0x22e38e0;
	Node0x22e3480 -> Node0x22e38e0;
	Node0x22e2de0 -> Node0x22e3950;
	Node0x22e38e0 -> Node0x22e3950;
	Node0x22e3950 -> Node0x2283268;
	Node0x2283268 -> Node0x22e3df0;
}
