digraph "DFG for'main' function" {
	Node0xd1a248[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd1a2c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd1a358[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xd1a3b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xd1a838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd1a918[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xd1aa18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd1aad8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xd1ab88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd1ade8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xd1aea8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd1b008[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd1b068[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xd1c720[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xd1c908[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd1ca68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd1cb78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd1cc38[shape=record, label="  ret i32 0"];
	Node0xd1a248 -> Node0xd1a2c8;
	Node0xd1a2c8 -> Node0xd1a358;
	Node0xd1a358 -> Node0xd1a3b8;
	Node0xd1a3b8 -> Node0xd1a838;
	Node0xd1a838 -> Node0xd1a918;
	Node0xd1a918 -> Node0xd1aa18;
	Node0xd1aa18 -> Node0xd1aad8;
	Node0xd1aad8 -> Node0xd1ab88;
	Node0xd1ab88 -> Node0xd1ade8;
	Node0xd1ade8 -> Node0xd1aea8;
	Node0xd1aea8 -> Node0xd1b008;
	Node0xd1b008 -> Node0xd1b068;
	Node0xd1b068 -> Node0xd1c720;
	Node0xd1c720 -> Node0xd1c908;
	Node0xd1c908 -> Node0xd1ca68;
	Node0xd1ca68 -> Node0xd1cb78;
	Node0xd1cb78 -> Node0xd1cc38;
edge [color=red]
	Node0xd1a248 -> Node0xd1a3b8;
	Node0xd1a3b8 -> Node0xd1a838;
	Node0xd1a2c8 -> Node0xd1a918;
	Node0xd1a918 -> Node0xd1aa18;
	Node0xd1a358 -> Node0xd1aad8;
	Node0xd1aad8 -> Node0xd1ab88;
	Node0xd1a248 -> Node0xd1ade8;
	Node0xd1a2c8 -> Node0xd1ade8;
	Node0xd1a358 -> Node0xd1ade8;
	Node0xd1a248 -> Node0xd1aea8;
	Node0xd1a2c8 -> Node0xd1b008;
	Node0xd1a358 -> Node0xd1b068;
	Node0xd1aea8 -> Node0xd1c720;
	Node0xd1b008 -> Node0xd1c720;
	Node0xd1b068 -> Node0xd1c720;
	Node0xd1aad8 -> Node0xd1c908;
	Node0xd1a918 -> Node0xd1ca68;
	Node0xd1a3b8 -> Node0xd1cb78;
}
