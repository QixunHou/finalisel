digraph "DFG for'main' function" {
	Node0x1bfdda8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1bfde28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1bfdeb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1bfdf18[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1bfdfc8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1bfe3f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bfe4d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1bfe5d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bfe698[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1bfe748[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1bfe808[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1bfe8b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1bf87d0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1bfeab8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1bffa28[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c00098[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c000f8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1c00208[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1c00468[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c005c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c006d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c007e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c008a8[shape=record, label="  ret i32 0"];
	Node0x1bfdda8 -> Node0x1bfde28;
	Node0x1bfde28 -> Node0x1bfdeb8;
	Node0x1bfdeb8 -> Node0x1bfdf18;
	Node0x1bfdf18 -> Node0x1bfdfc8;
	Node0x1bfdfc8 -> Node0x1bfe3f8;
	Node0x1bfe3f8 -> Node0x1bfe4d8;
	Node0x1bfe4d8 -> Node0x1bfe5d8;
	Node0x1bfe5d8 -> Node0x1bfe698;
	Node0x1bfe698 -> Node0x1bfe748;
	Node0x1bfe748 -> Node0x1bfe808;
	Node0x1bfe808 -> Node0x1bfe8b8;
	Node0x1bfe8b8 -> Node0x1bf87d0;
	Node0x1bf87d0 -> Node0x1bfeab8;
	Node0x1bfeab8 -> Node0x1bffa28;
	Node0x1bffa28 -> Node0x1c00098;
	Node0x1c00098 -> Node0x1c000f8;
	Node0x1c000f8 -> Node0x1c00208;
	Node0x1c00208 -> Node0x1c00468;
	Node0x1c00468 -> Node0x1c005c8;
	Node0x1c005c8 -> Node0x1c006d8;
	Node0x1c006d8 -> Node0x1c007e8;
	Node0x1c007e8 -> Node0x1c008a8;
edge [color=red]
	Node0x1bfdda8 -> Node0x1bfdfc8;
	Node0x1bfdfc8 -> Node0x1bfe3f8;
	Node0x1bfde28 -> Node0x1bfe4d8;
	Node0x1bfe4d8 -> Node0x1bfe5d8;
	Node0x1bfdeb8 -> Node0x1bfe698;
	Node0x1bfe698 -> Node0x1bfe748;
	Node0x1bfdf18 -> Node0x1bfe808;
	Node0x1bfe808 -> Node0x1bfe8b8;
	Node0x1bfdda8 -> Node0x1bf87d0;
	Node0x1bfde28 -> Node0x1bf87d0;
	Node0x1bfdeb8 -> Node0x1bf87d0;
	Node0x1bfdf18 -> Node0x1bf87d0;
	Node0x1bfdda8 -> Node0x1bfeab8;
	Node0x1bfde28 -> Node0x1bffa28;
	Node0x1bfdeb8 -> Node0x1c00098;
	Node0x1bfdf18 -> Node0x1c000f8;
	Node0x1bfeab8 -> Node0x1c00208;
	Node0x1bffa28 -> Node0x1c00208;
	Node0x1c00098 -> Node0x1c00208;
	Node0x1c000f8 -> Node0x1c00208;
	Node0x1bfe808 -> Node0x1c00468;
	Node0x1bfe698 -> Node0x1c005c8;
	Node0x1bfe4d8 -> Node0x1c006d8;
	Node0x1bfdfc8 -> Node0x1c007e8;
}
