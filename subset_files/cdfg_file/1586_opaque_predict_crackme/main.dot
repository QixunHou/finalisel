digraph "DFG for'main' function" {
	Node0x883ec8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x883f48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x883fd8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x884438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x884518[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x884638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x884870[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x884928[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x885898[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x885f20[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x885f90[shape=record, label="  %9 = or i32 %7, %6"];
	Node0x886000[shape=record, label="  %10 = mul i32 %9, -2"];
	Node0x886070[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x8860e0[shape=record, label="  %12 = or i32 %10, 1"];
	Node0x886150[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x8861c0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x886230[shape=record, label="  %15 = and i32 %6, %13"];
	Node0x8862a0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x886310[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x886380[shape=record, label="  %18 = xor i32 %8, -1"];
	Node0x8863f0[shape=record, label="  %19 = shl i32 %9, 2"];
	Node0x886460[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0x8864d0[shape=record, label="  %21 = xor i32 %6, -1"];
	Node0x886540[shape=record, label="  %22 = and i32 %7, %21"];
	Node0x8865b0[shape=record, label="  %23 = mul i32 %22, 6"];
	Node0x886620[shape=record, label="  %24 = add i32 %15, %6"];
	Node0x886690[shape=record, label="  %25 = mul i32 %24, 3"];
	Node0x886700[shape=record, label="  %26 = sub i32 %11, %14"];
	Node0x886770[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x8867e0[shape=record, label="  %28 = add i32 %27, %23"];
	Node0x886850[shape=record, label="  %29 = add i32 %28, %12"];
	Node0x8868c0[shape=record, label="  %30 = sub i32 %29, %17"];
	Node0x886930[shape=record, label="  %31 = add i32 %30, %20"];
	Node0x8869a0[shape=record, label="  %32 = add i32 %31, %25"];
	Node0x886c20[shape=record, label="  %33 = icmp eq i32 %8, %32"];
	Node0x8249d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x886cb0[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x886f08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x887068[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x887128[shape=record, label="  ret i32 0"];
	Node0x883ec8 -> Node0x883f48;
	Node0x883f48 -> Node0x883fd8;
	Node0x883fd8 -> Node0x884438;
	Node0x884438 -> Node0x884518;
	Node0x884518 -> Node0x884638;
	Node0x884638 -> Node0x884870;
	Node0x884870 -> Node0x884928;
	Node0x884928 -> Node0x885898;
	Node0x885898 -> Node0x885f20;
	Node0x885f20 -> Node0x885f90;
	Node0x885f90 -> Node0x886000;
	Node0x886000 -> Node0x886070;
	Node0x886070 -> Node0x8860e0;
	Node0x8860e0 -> Node0x886150;
	Node0x886150 -> Node0x8861c0;
	Node0x8861c0 -> Node0x886230;
	Node0x886230 -> Node0x8862a0;
	Node0x8862a0 -> Node0x886310;
	Node0x886310 -> Node0x886380;
	Node0x886380 -> Node0x8863f0;
	Node0x8863f0 -> Node0x886460;
	Node0x886460 -> Node0x8864d0;
	Node0x8864d0 -> Node0x886540;
	Node0x886540 -> Node0x8865b0;
	Node0x8865b0 -> Node0x886620;
	Node0x886620 -> Node0x886690;
	Node0x886690 -> Node0x886700;
	Node0x886700 -> Node0x886770;
	Node0x886770 -> Node0x8867e0;
	Node0x8867e0 -> Node0x886850;
	Node0x886850 -> Node0x8868c0;
	Node0x8868c0 -> Node0x886930;
	Node0x886930 -> Node0x8869a0;
	Node0x8869a0 -> Node0x886c20;
	Node0x886c20 -> Node0x8249d8;
	Node0x8249d8 -> Node0x886cb0;
	Node0x886cb0 -> Node0x886f08;
	Node0x886f08 -> Node0x887068;
	Node0x887068 -> Node0x887128;
edge [color=red]
	Node0x883ec8 -> Node0x883fd8;
	Node0x883fd8 -> Node0x884438;
	Node0x883f48 -> Node0x884518;
	Node0x884518 -> Node0x884638;
	Node0x883ec8 -> Node0x884870;
	Node0x883f48 -> Node0x884870;
	Node0x883ec8 -> Node0x884928;
	Node0x883f48 -> Node0x885898;
	Node0x885898 -> Node0x885f20;
	Node0x884928 -> Node0x885f20;
	Node0x885898 -> Node0x885f90;
	Node0x884928 -> Node0x885f90;
	Node0x885f90 -> Node0x886000;
	Node0x885898 -> Node0x886070;
	Node0x884928 -> Node0x886070;
	Node0x886000 -> Node0x8860e0;
	Node0x885898 -> Node0x886150;
	Node0x886150 -> Node0x8861c0;
	Node0x884928 -> Node0x886230;
	Node0x886150 -> Node0x886230;
	Node0x886230 -> Node0x8862a0;
	Node0x8862a0 -> Node0x886310;
	Node0x885f20 -> Node0x886380;
	Node0x885f90 -> Node0x8863f0;
	Node0x8863f0 -> Node0x886460;
	Node0x884928 -> Node0x8864d0;
	Node0x885898 -> Node0x886540;
	Node0x8864d0 -> Node0x886540;
	Node0x886540 -> Node0x8865b0;
	Node0x886230 -> Node0x886620;
	Node0x884928 -> Node0x886620;
	Node0x886620 -> Node0x886690;
	Node0x886070 -> Node0x886700;
	Node0x8861c0 -> Node0x886700;
	Node0x886700 -> Node0x886770;
	Node0x886380 -> Node0x886770;
	Node0x886770 -> Node0x8867e0;
	Node0x8865b0 -> Node0x8867e0;
	Node0x8867e0 -> Node0x886850;
	Node0x8860e0 -> Node0x886850;
	Node0x886850 -> Node0x8868c0;
	Node0x886310 -> Node0x8868c0;
	Node0x8868c0 -> Node0x886930;
	Node0x886460 -> Node0x886930;
	Node0x886930 -> Node0x8869a0;
	Node0x886690 -> Node0x8869a0;
	Node0x885f20 -> Node0x886c20;
	Node0x8869a0 -> Node0x886c20;
	Node0x886c20 -> Node0x8249d8;
	Node0x8249d8 -> Node0x886cb0;
	Node0x884518 -> Node0x886f08;
	Node0x883fd8 -> Node0x887068;
}
