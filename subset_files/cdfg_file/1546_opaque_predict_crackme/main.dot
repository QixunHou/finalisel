digraph "DFG for'main' function" {
	Node0x1cc6b88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1cc6c08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1cc6c98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1cc70f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1cc71d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1cc72f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1cc7530[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1cc75e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1cc8558[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1cc8be0[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x1cc8c50[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x1cc8cc0[shape=record, label="  %10 = add i32 %9, %8"];
	Node0x1cc8d30[shape=record, label="  %11 = add i32 %9, 1"];
	Node0x1cc8da0[shape=record, label="  %12 = shl i32 %7, 1"];
	Node0x1cc8e10[shape=record, label="  %13 = sub i32 %11, %12"];
	Node0x1cc8e80[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x1cc8ef0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1cc8f60[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x1cc8fd0[shape=record, label="  %17 = xor i32 %7, -1"];
	Node0x1cc9040[shape=record, label="  %18 = xor i32 %6, 1073741823"];
	Node0x1cc90b0[shape=record, label="  %19 = and i32 %18, %7"];
	Node0x1cc9120[shape=record, label="  %20 = shl i32 %19, 2"];
	Node0x1cc9190[shape=record, label="  %21 = and i32 %6, %17"];
	Node0x1cc9200[shape=record, label="  %22 = and i32 %7, %6"];
	Node0x1cc9270[shape=record, label="  %23 = mul i32 %22, 3"];
	Node0x1cc92e0[shape=record, label="  %24 = add i32 %13, %21"];
	Node0x1cc9350[shape=record, label="  %25 = add i32 %24, %20"];
	Node0x1cc93c0[shape=record, label="  %26 = add i32 %25, %23"];
	Node0x1cc9430[shape=record, label="  %27 = add i32 %26, %16"];
	Node0x1cc94a0[shape=record, label="  %28 = icmp eq i32 %10, %27"];
	Node0x1c679d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1cc9530[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x1cc9788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1cc98e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1cc99a8[shape=record, label="  ret i32 0"];
	Node0x1cc6b88 -> Node0x1cc6c08;
	Node0x1cc6c08 -> Node0x1cc6c98;
	Node0x1cc6c98 -> Node0x1cc70f8;
	Node0x1cc70f8 -> Node0x1cc71d8;
	Node0x1cc71d8 -> Node0x1cc72f8;
	Node0x1cc72f8 -> Node0x1cc7530;
	Node0x1cc7530 -> Node0x1cc75e8;
	Node0x1cc75e8 -> Node0x1cc8558;
	Node0x1cc8558 -> Node0x1cc8be0;
	Node0x1cc8be0 -> Node0x1cc8c50;
	Node0x1cc8c50 -> Node0x1cc8cc0;
	Node0x1cc8cc0 -> Node0x1cc8d30;
	Node0x1cc8d30 -> Node0x1cc8da0;
	Node0x1cc8da0 -> Node0x1cc8e10;
	Node0x1cc8e10 -> Node0x1cc8e80;
	Node0x1cc8e80 -> Node0x1cc8ef0;
	Node0x1cc8ef0 -> Node0x1cc8f60;
	Node0x1cc8f60 -> Node0x1cc8fd0;
	Node0x1cc8fd0 -> Node0x1cc9040;
	Node0x1cc9040 -> Node0x1cc90b0;
	Node0x1cc90b0 -> Node0x1cc9120;
	Node0x1cc9120 -> Node0x1cc9190;
	Node0x1cc9190 -> Node0x1cc9200;
	Node0x1cc9200 -> Node0x1cc9270;
	Node0x1cc9270 -> Node0x1cc92e0;
	Node0x1cc92e0 -> Node0x1cc9350;
	Node0x1cc9350 -> Node0x1cc93c0;
	Node0x1cc93c0 -> Node0x1cc9430;
	Node0x1cc9430 -> Node0x1cc94a0;
	Node0x1cc94a0 -> Node0x1c679d8;
	Node0x1c679d8 -> Node0x1cc9530;
	Node0x1cc9530 -> Node0x1cc9788;
	Node0x1cc9788 -> Node0x1cc98e8;
	Node0x1cc98e8 -> Node0x1cc99a8;
edge [color=red]
	Node0x1cc6b88 -> Node0x1cc6c98;
	Node0x1cc6c98 -> Node0x1cc70f8;
	Node0x1cc6c08 -> Node0x1cc71d8;
	Node0x1cc71d8 -> Node0x1cc72f8;
	Node0x1cc6b88 -> Node0x1cc7530;
	Node0x1cc6c08 -> Node0x1cc7530;
	Node0x1cc6b88 -> Node0x1cc75e8;
	Node0x1cc6c08 -> Node0x1cc8558;
	Node0x1cc75e8 -> Node0x1cc8be0;
	Node0x1cc8558 -> Node0x1cc8c50;
	Node0x1cc75e8 -> Node0x1cc8c50;
	Node0x1cc8c50 -> Node0x1cc8cc0;
	Node0x1cc8be0 -> Node0x1cc8cc0;
	Node0x1cc8c50 -> Node0x1cc8d30;
	Node0x1cc8558 -> Node0x1cc8da0;
	Node0x1cc8d30 -> Node0x1cc8e10;
	Node0x1cc8da0 -> Node0x1cc8e10;
	Node0x1cc8558 -> Node0x1cc8e80;
	Node0x1cc75e8 -> Node0x1cc8e80;
	Node0x1cc8e80 -> Node0x1cc8ef0;
	Node0x1cc8ef0 -> Node0x1cc8f60;
	Node0x1cc8558 -> Node0x1cc8fd0;
	Node0x1cc75e8 -> Node0x1cc9040;
	Node0x1cc9040 -> Node0x1cc90b0;
	Node0x1cc8558 -> Node0x1cc90b0;
	Node0x1cc90b0 -> Node0x1cc9120;
	Node0x1cc75e8 -> Node0x1cc9190;
	Node0x1cc8fd0 -> Node0x1cc9190;
	Node0x1cc8558 -> Node0x1cc9200;
	Node0x1cc75e8 -> Node0x1cc9200;
	Node0x1cc9200 -> Node0x1cc9270;
	Node0x1cc8e10 -> Node0x1cc92e0;
	Node0x1cc9190 -> Node0x1cc92e0;
	Node0x1cc92e0 -> Node0x1cc9350;
	Node0x1cc9120 -> Node0x1cc9350;
	Node0x1cc9350 -> Node0x1cc93c0;
	Node0x1cc9270 -> Node0x1cc93c0;
	Node0x1cc93c0 -> Node0x1cc9430;
	Node0x1cc8f60 -> Node0x1cc9430;
	Node0x1cc8cc0 -> Node0x1cc94a0;
	Node0x1cc9430 -> Node0x1cc94a0;
	Node0x1cc94a0 -> Node0x1c679d8;
	Node0x1c679d8 -> Node0x1cc9530;
	Node0x1cc71d8 -> Node0x1cc9788;
	Node0x1cc6c98 -> Node0x1cc98e8;
}
