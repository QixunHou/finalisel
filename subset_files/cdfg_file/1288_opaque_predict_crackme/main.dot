digraph "DFG for'main' function" {
	Node0x5ebc08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5ebc88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5ebd18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x5ebd78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x5ebe28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x5ec258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5ec338[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x5ec438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5ec4f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x5ec5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5ec668[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x5ec718[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x5e6780[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x5ec918[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5ed888[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x5edef8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x5edf58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x5ee068[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x5ee2c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x5ee428[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5ee538[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5ee648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5ee708[shape=record, label="  ret i32 0"];
	Node0x5ebc08 -> Node0x5ebc88;
	Node0x5ebc88 -> Node0x5ebd18;
	Node0x5ebd18 -> Node0x5ebd78;
	Node0x5ebd78 -> Node0x5ebe28;
	Node0x5ebe28 -> Node0x5ec258;
	Node0x5ec258 -> Node0x5ec338;
	Node0x5ec338 -> Node0x5ec438;
	Node0x5ec438 -> Node0x5ec4f8;
	Node0x5ec4f8 -> Node0x5ec5a8;
	Node0x5ec5a8 -> Node0x5ec668;
	Node0x5ec668 -> Node0x5ec718;
	Node0x5ec718 -> Node0x5e6780;
	Node0x5e6780 -> Node0x5ec918;
	Node0x5ec918 -> Node0x5ed888;
	Node0x5ed888 -> Node0x5edef8;
	Node0x5edef8 -> Node0x5edf58;
	Node0x5edf58 -> Node0x5ee068;
	Node0x5ee068 -> Node0x5ee2c8;
	Node0x5ee2c8 -> Node0x5ee428;
	Node0x5ee428 -> Node0x5ee538;
	Node0x5ee538 -> Node0x5ee648;
	Node0x5ee648 -> Node0x5ee708;
edge [color=red]
	Node0x5ebc08 -> Node0x5ebe28;
	Node0x5ebe28 -> Node0x5ec258;
	Node0x5ebc88 -> Node0x5ec338;
	Node0x5ec338 -> Node0x5ec438;
	Node0x5ebd18 -> Node0x5ec4f8;
	Node0x5ec4f8 -> Node0x5ec5a8;
	Node0x5ebd78 -> Node0x5ec668;
	Node0x5ec668 -> Node0x5ec718;
	Node0x5ebc08 -> Node0x5e6780;
	Node0x5ebc88 -> Node0x5e6780;
	Node0x5ebd18 -> Node0x5e6780;
	Node0x5ebd78 -> Node0x5e6780;
	Node0x5ebc08 -> Node0x5ec918;
	Node0x5ebc88 -> Node0x5ed888;
	Node0x5ebd18 -> Node0x5edef8;
	Node0x5ebd78 -> Node0x5edf58;
	Node0x5ec918 -> Node0x5ee068;
	Node0x5ed888 -> Node0x5ee068;
	Node0x5edef8 -> Node0x5ee068;
	Node0x5edf58 -> Node0x5ee068;
	Node0x5ec668 -> Node0x5ee2c8;
	Node0x5ec4f8 -> Node0x5ee428;
	Node0x5ec338 -> Node0x5ee538;
	Node0x5ebe28 -> Node0x5ee648;
}
