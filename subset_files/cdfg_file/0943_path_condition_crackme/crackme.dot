digraph "DFG for'crackme' function" {
	Node0x1436d90[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1436e30[shape=record, label="  %6 = add i32 %2, 1"];
	Node0x1436ea0[shape=record, label="  %7 = or i32 %2, %1"];
	Node0x1436f10[shape=record, label="  %8 = sub i32 %6, %7"];
	Node0x1436f80[shape=record, label="  %9 = and i32 %3, %0"];
	Node0x1436ff0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1437060[shape=record, label="  %11 = add i32 %8, %10"];
	Node0x14370d0[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x1437140[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x14371e0[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1437250[shape=record, label="  %15 = xor i32 %2, %1"];
	Node0x14372c0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1437330[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x14373a0[shape=record, label="  %18 = or i32 %5, %1"];
	Node0x1437440[shape=record, label="  %19 = shl i32 %2, 2"];
	Node0x14374b0[shape=record, label="  %20 = shl i32 %18, 2"];
	Node0x1437550[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0x14375c0[shape=record, label="  %22 = and i32 %5, %1"];
	Node0x1437660[shape=record, label="  %23 = mul i32 %22, -5"];
	Node0x1437700[shape=record, label="  %24 = mul i32 %12, -11"];
	Node0x1437770[shape=record, label="  %25 = shl i32 %3, 1"];
	Node0x14377e0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x1437850[shape=record, label="  %27 = xor i32 %0, -1"];
	Node0x14378c0[shape=record, label="  %28 = and i32 %27, %3"];
	Node0x1437930[shape=record, label="  %29 = or i32 %27, %3"];
	Node0x14379a0[shape=record, label="  %30 = or i32 %3, %0"];
	Node0x1437a10[shape=record, label="  %31 = shl i32 %30, 2"];
	Node0x1437a80[shape=record, label="  %32 = xor i32 %31, -4"];
	Node0x1437d00[shape=record, label="  %33 = sub i32 %7, %29"];
	Node0x1437da0[shape=record, label="  %34 = mul i32 %33, 3"];
	Node0x1437e10[shape=record, label="  %35 = add i32 %18, %1"];
	Node0x1437e80[shape=record, label="  %36 = add i32 %35, %28"];
	Node0x1437ef0[shape=record, label="  %37 = shl i32 %36, 1"];
	Node0x1437f60[shape=record, label="  %38 = shl i32 %0, 1"];
	Node0x1437fd0[shape=record, label="  %39 = add i32 %38, 2"];
	Node0x1438040[shape=record, label="  %40 = add i32 %39, %15"];
	Node0x14380b0[shape=record, label="  %41 = add i32 %40, %19"];
	Node0x1438120[shape=record, label="  %42 = sub i32 %41, %3"];
	Node0x1438190[shape=record, label="  %43 = add i32 %42, %23"];
	Node0x1438200[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x1438270[shape=record, label="  %45 = add i32 %44, %28"];
	Node0x14382e0[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x1438350[shape=record, label="  %47 = sub i32 %46, %14"];
	Node0x14383c0[shape=record, label="  %48 = add i32 %47, %17"];
	Node0x1438430[shape=record, label="  %49 = sub i32 %48, %21"];
	Node0x14384a0[shape=record, label="  %50 = sub i32 %49, %26"];
	Node0x1438510[shape=record, label="  %51 = add i32 %50, %32"];
	Node0x1438580[shape=record, label="  %52 = add i32 %51, %34"];
	Node0x14385f0[shape=record, label="  %53 = add i32 %52, %37"];
	Node0x1438660[shape=record, label="  %54 = icmp eq i32 %11, %53"];
	Node0x13d7268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1438b00[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0x1438b50[shape=record, label="  ret void"];
	Node0x1436d90 -> Node0x1436e30;
	Node0x1436e30 -> Node0x1436ea0;
	Node0x1436ea0 -> Node0x1436f10;
	Node0x1436f10 -> Node0x1436f80;
	Node0x1436f80 -> Node0x1436ff0;
	Node0x1436ff0 -> Node0x1437060;
	Node0x1437060 -> Node0x14370d0;
	Node0x14370d0 -> Node0x1437140;
	Node0x1437140 -> Node0x14371e0;
	Node0x14371e0 -> Node0x1437250;
	Node0x1437250 -> Node0x14372c0;
	Node0x14372c0 -> Node0x1437330;
	Node0x1437330 -> Node0x14373a0;
	Node0x14373a0 -> Node0x1437440;
	Node0x1437440 -> Node0x14374b0;
	Node0x14374b0 -> Node0x1437550;
	Node0x1437550 -> Node0x14375c0;
	Node0x14375c0 -> Node0x1437660;
	Node0x1437660 -> Node0x1437700;
	Node0x1437700 -> Node0x1437770;
	Node0x1437770 -> Node0x14377e0;
	Node0x14377e0 -> Node0x1437850;
	Node0x1437850 -> Node0x14378c0;
	Node0x14378c0 -> Node0x1437930;
	Node0x1437930 -> Node0x14379a0;
	Node0x14379a0 -> Node0x1437a10;
	Node0x1437a10 -> Node0x1437a80;
	Node0x1437a80 -> Node0x1437d00;
	Node0x1437d00 -> Node0x1437da0;
	Node0x1437da0 -> Node0x1437e10;
	Node0x1437e10 -> Node0x1437e80;
	Node0x1437e80 -> Node0x1437ef0;
	Node0x1437ef0 -> Node0x1437f60;
	Node0x1437f60 -> Node0x1437fd0;
	Node0x1437fd0 -> Node0x1438040;
	Node0x1438040 -> Node0x14380b0;
	Node0x14380b0 -> Node0x1438120;
	Node0x1438120 -> Node0x1438190;
	Node0x1438190 -> Node0x1438200;
	Node0x1438200 -> Node0x1438270;
	Node0x1438270 -> Node0x14382e0;
	Node0x14382e0 -> Node0x1438350;
	Node0x1438350 -> Node0x14383c0;
	Node0x14383c0 -> Node0x1438430;
	Node0x1438430 -> Node0x14384a0;
	Node0x14384a0 -> Node0x1438510;
	Node0x1438510 -> Node0x1438580;
	Node0x1438580 -> Node0x14385f0;
	Node0x14385f0 -> Node0x1438660;
	Node0x1438660 -> Node0x13d7268;
	Node0x13d7268 -> Node0x1438b00;
	Node0x1438b00 -> Node0x1438b50;
edge [color=red]
	Node0x1436e30 -> Node0x1436f10;
	Node0x1436ea0 -> Node0x1436f10;
	Node0x1436f80 -> Node0x1436ff0;
	Node0x1436f10 -> Node0x1437060;
	Node0x1436ff0 -> Node0x1437060;
	Node0x14370d0 -> Node0x1437140;
	Node0x1437140 -> Node0x14371e0;
	Node0x1437250 -> Node0x14372c0;
	Node0x14372c0 -> Node0x1437330;
	Node0x1436d90 -> Node0x14373a0;
	Node0x14373a0 -> Node0x14374b0;
	Node0x14374b0 -> Node0x1437550;
	Node0x1436d90 -> Node0x14375c0;
	Node0x14375c0 -> Node0x1437660;
	Node0x14370d0 -> Node0x1437700;
	Node0x1437770 -> Node0x14377e0;
	Node0x1437850 -> Node0x14378c0;
	Node0x1437850 -> Node0x1437930;
	Node0x14379a0 -> Node0x1437a10;
	Node0x1437a10 -> Node0x1437a80;
	Node0x1436ea0 -> Node0x1437d00;
	Node0x1437930 -> Node0x1437d00;
	Node0x1437d00 -> Node0x1437da0;
	Node0x14373a0 -> Node0x1437e10;
	Node0x1437e10 -> Node0x1437e80;
	Node0x14378c0 -> Node0x1437e80;
	Node0x1437e80 -> Node0x1437ef0;
	Node0x1437f60 -> Node0x1437fd0;
	Node0x1437fd0 -> Node0x1438040;
	Node0x1437250 -> Node0x1438040;
	Node0x1438040 -> Node0x14380b0;
	Node0x1437440 -> Node0x14380b0;
	Node0x14380b0 -> Node0x1438120;
	Node0x1438120 -> Node0x1438190;
	Node0x1437660 -> Node0x1438190;
	Node0x1438190 -> Node0x1438200;
	Node0x1437700 -> Node0x1438200;
	Node0x1438200 -> Node0x1438270;
	Node0x14378c0 -> Node0x1438270;
	Node0x1438270 -> Node0x14382e0;
	Node0x1437930 -> Node0x14382e0;
	Node0x14382e0 -> Node0x1438350;
	Node0x14371e0 -> Node0x1438350;
	Node0x1438350 -> Node0x14383c0;
	Node0x1437330 -> Node0x14383c0;
	Node0x14383c0 -> Node0x1438430;
	Node0x1437550 -> Node0x1438430;
	Node0x1438430 -> Node0x14384a0;
	Node0x14377e0 -> Node0x14384a0;
	Node0x14384a0 -> Node0x1438510;
	Node0x1437a80 -> Node0x1438510;
	Node0x1438510 -> Node0x1438580;
	Node0x1437da0 -> Node0x1438580;
	Node0x1438580 -> Node0x14385f0;
	Node0x1437ef0 -> Node0x14385f0;
	Node0x1437060 -> Node0x1438660;
	Node0x14385f0 -> Node0x1438660;
	Node0x1438660 -> Node0x13d7268;
	Node0x13d7268 -> Node0x1438b00;
}
