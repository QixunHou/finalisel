digraph "DFG for'main' function" {
	Node0x1a949c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a94a48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a94ad8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1a94f38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a95018[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1a95138[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a95370[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1a95428[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a96398[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a96a20[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1a96a90[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x1a96b00[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1a96b70[shape=record, label="  %11 = xor i32 %6, -1"];
	Node0x1a96be0[shape=record, label="  %12 = add i32 %10, %11"];
	Node0x1a96c50[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x1a96cc0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1a96d30[shape=record, label="  %15 = or i32 %6, %8"];
	Node0x1a96da0[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0x1a96e10[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x1a96e80[shape=record, label="  %18 = and i32 %7, %6"];
	Node0x1a96ef0[shape=record, label="  %19 = xor i32 %7, %11"];
	Node0x1a96f60[shape=record, label="  %20 = add i32 %15, %19"];
	Node0x1a96fd0[shape=record, label="  %21 = add i32 %20, %9"];
	Node0x1a97040[shape=record, label="  %22 = add i32 %21, %18"];
	Node0x1a970b0[shape=record, label="  %23 = sub i32 %22, %14"];
	Node0x1a97120[shape=record, label="  %24 = add i32 %23, %17"];
	Node0x1a97190[shape=record, label="  %25 = icmp eq i32 %12, %24"];
	Node0x1a359d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a97220[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0x1a97478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a975d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a97698[shape=record, label="  ret i32 0"];
	Node0x1a949c8 -> Node0x1a94a48;
	Node0x1a94a48 -> Node0x1a94ad8;
	Node0x1a94ad8 -> Node0x1a94f38;
	Node0x1a94f38 -> Node0x1a95018;
	Node0x1a95018 -> Node0x1a95138;
	Node0x1a95138 -> Node0x1a95370;
	Node0x1a95370 -> Node0x1a95428;
	Node0x1a95428 -> Node0x1a96398;
	Node0x1a96398 -> Node0x1a96a20;
	Node0x1a96a20 -> Node0x1a96a90;
	Node0x1a96a90 -> Node0x1a96b00;
	Node0x1a96b00 -> Node0x1a96b70;
	Node0x1a96b70 -> Node0x1a96be0;
	Node0x1a96be0 -> Node0x1a96c50;
	Node0x1a96c50 -> Node0x1a96cc0;
	Node0x1a96cc0 -> Node0x1a96d30;
	Node0x1a96d30 -> Node0x1a96da0;
	Node0x1a96da0 -> Node0x1a96e10;
	Node0x1a96e10 -> Node0x1a96e80;
	Node0x1a96e80 -> Node0x1a96ef0;
	Node0x1a96ef0 -> Node0x1a96f60;
	Node0x1a96f60 -> Node0x1a96fd0;
	Node0x1a96fd0 -> Node0x1a97040;
	Node0x1a97040 -> Node0x1a970b0;
	Node0x1a970b0 -> Node0x1a97120;
	Node0x1a97120 -> Node0x1a97190;
	Node0x1a97190 -> Node0x1a359d8;
	Node0x1a359d8 -> Node0x1a97220;
	Node0x1a97220 -> Node0x1a97478;
	Node0x1a97478 -> Node0x1a975d8;
	Node0x1a975d8 -> Node0x1a97698;
edge [color=red]
	Node0x1a949c8 -> Node0x1a94ad8;
	Node0x1a94ad8 -> Node0x1a94f38;
	Node0x1a94a48 -> Node0x1a95018;
	Node0x1a95018 -> Node0x1a95138;
	Node0x1a949c8 -> Node0x1a95370;
	Node0x1a94a48 -> Node0x1a95370;
	Node0x1a949c8 -> Node0x1a95428;
	Node0x1a94a48 -> Node0x1a96398;
	Node0x1a96398 -> Node0x1a96a20;
	Node0x1a95428 -> Node0x1a96a90;
	Node0x1a96a20 -> Node0x1a96a90;
	Node0x1a96a90 -> Node0x1a96b00;
	Node0x1a95428 -> Node0x1a96b70;
	Node0x1a96b00 -> Node0x1a96be0;
	Node0x1a96b70 -> Node0x1a96be0;
	Node0x1a96398 -> Node0x1a96c50;
	Node0x1a95428 -> Node0x1a96c50;
	Node0x1a96c50 -> Node0x1a96cc0;
	Node0x1a95428 -> Node0x1a96d30;
	Node0x1a96a20 -> Node0x1a96d30;
	Node0x1a96d30 -> Node0x1a96da0;
	Node0x1a96da0 -> Node0x1a96e10;
	Node0x1a96398 -> Node0x1a96e80;
	Node0x1a95428 -> Node0x1a96e80;
	Node0x1a96398 -> Node0x1a96ef0;
	Node0x1a96b70 -> Node0x1a96ef0;
	Node0x1a96d30 -> Node0x1a96f60;
	Node0x1a96ef0 -> Node0x1a96f60;
	Node0x1a96f60 -> Node0x1a96fd0;
	Node0x1a96a90 -> Node0x1a96fd0;
	Node0x1a96fd0 -> Node0x1a97040;
	Node0x1a96e80 -> Node0x1a97040;
	Node0x1a97040 -> Node0x1a970b0;
	Node0x1a96cc0 -> Node0x1a970b0;
	Node0x1a970b0 -> Node0x1a97120;
	Node0x1a96e10 -> Node0x1a97120;
	Node0x1a96be0 -> Node0x1a97190;
	Node0x1a97120 -> Node0x1a97190;
	Node0x1a97190 -> Node0x1a359d8;
	Node0x1a359d8 -> Node0x1a97220;
	Node0x1a95018 -> Node0x1a97478;
	Node0x1a94ad8 -> Node0x1a975d8;
}
