; ModuleID = '../.././c_source_file/0275_path_condition_crackme.c'
source_filename = "../.././c_source_file/0275_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %2, %1
  %10 = or i32 %9, %8
  %11 = xor i32 %5, -1
  %12 = and i32 %11, %3
  %13 = xor i32 %12, -1
  %14 = sub i32 %13, %10
  %15 = and i32 %1, %0
  %16 = xor i32 %2, -1
  %17 = or i32 %16, %1
  %18 = xor i32 %17, %15
  %19 = shl i32 %18, 2
  %20 = or i32 %2, %0
  %21 = xor i32 %20, -1
  %22 = or i32 %15, %21
  %23 = xor i32 %1, %0
  %24 = xor i32 %23, -1
  %25 = or i32 %16, %24
  %26 = or i32 %16, %0
  %27 = and i32 %26, %1
  %28 = xor i32 %9, -1
  %29 = and i32 %28, %0
  %30 = add i32 %1, 1
  %31 = and i32 %2, %0
  %32 = or i32 %31, %24
  %33 = and i32 %20, %23
  %34 = or i32 %7, %0
  %35 = xor i32 %34, -1
  %36 = or i32 %28, %35
  %37 = and i32 %2, %1
  %38 = or i32 %28, %0
  %39 = xor i32 %26, -1
  %40 = or i32 %39, %24
  %41 = and i32 %34, %28
  %42 = or i32 %1, %0
  %43 = xor i32 %42, -1
  %44 = or i32 %43, %2
  %45 = shl i32 %44, 1
  %46 = and i32 %7, %2
  %47 = and i32 %46, %0
  %48 = or i32 %9, %0
  %49 = xor i32 %48, -1
  %50 = or i32 %47, %49
  %51 = xor i32 %17, -1
  %52 = add i32 %17, 1
  %53 = xor i32 %2, %0
  %54 = xor i32 %53, -1
  %55 = and i32 %54, %24
  %56 = and i32 %26, %24
  %57 = or i32 %2, %1
  %58 = and i32 %20, %7
  %59 = xor i32 %0, -1
  %60 = or i32 %51, %59
  %61 = xor i32 %57, -1
  %62 = or i32 %31, %61
  %63 = xor i32 %51, %0
  %64 = shl i32 %63, 1
  %65 = and i32 %16, %1
  %66 = xor i32 %65, %0
  %67 = and i32 %28, %59
  %68 = and i32 %46, %59
  %69 = or i32 %7, %2
  %70 = and i32 %69, %0
  %71 = or i32 %68, %70
  %72 = or i32 %28, %59
  %73 = xor i32 %39, %1
  %74 = xor i32 %65, -1
  %75 = xor i32 %8, %74
  %76 = or i32 %9, %15
  %77 = or i32 %57, %0
  %78 = or i32 %15, %61
  %79 = xor i32 %15, -1
  %80 = and i32 %53, %79
  %81 = or i32 %23, %39
  %82 = shl i32 %81, 1
  %83 = xor i32 %9, %0
  %84 = and i32 %53, %1
  %85 = or i32 %8, %28
  %86 = xor i32 %83, -1
  %87 = xor i32 %47, %86
  %88 = and i32 %37, %0
  %89 = xor i32 %57, %0
  %90 = or i32 %88, %89
  %91 = xor i32 %8, -1
  %92 = and i32 %91, %2
  %93 = and i32 %74, %0
  %94 = xor i32 %31, -1
  %95 = and i32 %23, %94
  %96 = or i32 %17, %59
  %97 = and i32 %74, %59
  %98 = and i32 %16, %0
  %99 = xor i32 %98, -1
  %100 = xor i32 %99, %1
  %101 = or i32 %65, %0
  %102 = shl i32 %101, 1
  %103 = xor i32 %17, %0
  %104 = xor i32 %37, -1
  %105 = xor i32 %98, %104
  %106 = and i32 %79, %2
  %107 = and i32 %94, %24
  %108 = and i32 %53, %24
  %109 = and i32 %53, %42
  %110 = xor i32 %43, %2
  %111 = or i32 %74, %0
  %112 = and i32 %9, %79
  %113 = or i32 %53, %35
  %114 = shl i32 %113, 1
  %115 = or i32 %23, %21
  %116 = xor i32 %31, %34
  %117 = shl i32 %116, 1
  %118 = and i32 %23, %99
  %119 = and i32 %53, %34
  %120 = or i32 %21, %1
  %121 = or i32 %37, %8
  %122 = shl i32 %53, 2
  %123 = or i32 %54, %1
  %124 = or i32 %15, %39
  %125 = shl i32 %124, 1
  %126 = or i32 %31, %1
  %127 = and i32 %54, %91
  %128 = shl i32 %127, 1
  %129 = xor i32 %35, %2
  %130 = or i32 %98, %24
  %131 = or i32 %88, %86
  %132 = and i32 %94, %1
  %133 = shl i32 %132, 1
  %134 = or i32 %74, %59
  %135 = and i32 %16, %79
  %136 = shl i32 %135, 1
  %137 = xor i32 %57, %15
  %138 = and i32 %54, %79
  %139 = xor i32 %20, %15
  %140 = shl i32 %139, 1
  %141 = xor i32 %26, %15
  %142 = and i32 %34, %16
  %143 = or i32 %23, %2
  %144 = shl i32 %143, 1
  %145 = or i32 %57, %59
  %146 = or i32 %53, %8
  %147 = or i32 %15, %2
  %148 = xor i32 %91, %2
  %149 = or i32 %9, %59
  %150 = xor i32 %149, -1
  %151 = or i32 %68, %150
  %152 = and i32 %34, %2
  %153 = xor i32 %20, %1
  %154 = xor i32 %42, %2
  %155 = add i32 %31, 1
  %156 = or i32 %53, %1
  %157 = and i32 %99, %7
  %158 = and i32 %34, %54
  %159 = shl i32 %9, 2
  %160 = and i32 %26, %7
  %161 = shl i32 %160, 1
  %162 = xor i32 %70, -1
  %163 = xor i32 %68, %162
  %164 = shl i32 %61, 1
  %165 = xor i32 %79, %2
  %166 = or i32 %16, %35
  %167 = xor i32 %37, %0
  %168 = and i32 %9, %34
  %169 = or i32 %15, %51
  %170 = and i32 %53, %23
  %171 = and i32 %42, %2
  %172 = xor i32 %88, -1
  %173 = xor i32 %89, %172
  %174 = or i32 %37, %0
  %175 = or i32 %39, %7
  %176 = or i32 %23, %16
  %177 = and i32 %9, %59
  %178 = shl i32 %74, 1
  %179 = or i32 %24, %2
  %180 = and i32 %57, %59
  %181 = or i32 %88, %180
  %182 = and i32 %37, %59
  %183 = and i32 %57, %0
  %184 = xor i32 %182, -1
  %185 = xor i32 %183, %184
  %186 = and i32 %20, %1
  %187 = or i32 %98, %37
  %188 = xor i32 %47, %48
  %189 = xor i32 %88, %83
  %190 = xor i32 %74, %0
  %191 = or i32 %104, %0
  %192 = or i32 %9, %35
  %193 = shl i32 %192, 1
  %194 = xor i32 %69, %0
  %195 = or i32 %47, %194
  %196 = or i32 %15, %54
  %197 = xor i32 %31, %74
  %198 = or i32 %51, %0
  %199 = and i32 %42, %16
  %200 = shl i32 %199, 1
  %201 = or i32 %98, %1
  %202 = xor i32 %21, %1
  %203 = or i32 %61, %59
  %204 = and i32 %28, %79
  %205 = and i32 %53, %7
  %206 = and i32 %28, %91
  %207 = xor i32 %15, %2
  %208 = add i32 %37, 1
  %209 = or i32 %9, %43
  %210 = and i32 %23, %2
  %211 = and i32 %23, %16
  %212 = or i32 %53, %23
  %213 = or i32 %31, %7
  %214 = and i32 %16, %24
  %215 = and i32 %53, %91
  %216 = xor i32 %31, %57
  %217 = xor i32 %26, %1
  %218 = and i32 %20, %24
  %219 = or i32 %98, %23
  %220 = shl i32 %219, 1
  %221 = xor i32 %194, 2147483647
  %222 = xor i32 %221, %47
  %223 = shl i32 %183, 1
  %224 = or i32 %88, %177
  %225 = or i32 %53, %43
  %226 = xor i32 %104, %0
  %227 = shl i32 %226, 1
  %228 = or i32 %15, %28
  %229 = or i32 %53, %24
  %230 = add i32 %20, 1
  %231 = and i32 %9, %91
  %232 = or i32 %8, %16
  %233 = or i32 %17, %0
  %234 = or i32 %98, %7
  %235 = xor i32 %180, %172
  %236 = and i32 %23, %54
  %237 = shl i32 %236, 1
  %238 = and i32 %94, %7
  %239 = xor i32 %28, %0
  %240 = shl i32 %239, 1
  %241 = or i32 %53, %7
  %242 = and i32 %54, %1
  %243 = or i32 %31, %35
  %244 = xor i32 %68, %149
  %245 = and i32 %69, %59
  %246 = xor i32 %245, -1
  %247 = xor i32 %47, %246
  %248 = and i32 %24, %2
  %249 = or i32 %16, %43
  %250 = shl i32 %249, 1
  %251 = and i32 %104, %59
  %252 = or i32 %47, %245
  %253 = add i32 %8, 1
  %254 = or i32 %23, %54
  %255 = or i32 %54, %24
  %256 = shl i32 %255, 1
  %257 = or i32 %31, %43
  %258 = or i32 %21, %24
  %259 = and i32 %42, %28
  %260 = shl i32 %259, 1
  %261 = or i32 %182, %183
  %262 = or i32 %47, %83
  %263 = or i32 %61, %0
  %264 = or i32 %54, %43
  %265 = and i32 %17, %0
  %266 = xor i32 %31, %42
  %267 = or i32 %31, %65
  %268 = and i32 %99, %24
  %269 = and i32 %54, %7
  %270 = and i32 %42, %54
  %271 = and i32 %99, %1
  %272 = and i32 %9, %42
  %273 = and i32 %9, %0
  %274 = xor i32 %34, %2
  %275 = and i32 %26, %23
  %276 = xor i32 %31, %1
  %277 = or i32 %39, %1
  %278 = xor i32 %98, %1
  %279 = or i32 %28, %43
  %280 = and i32 %104, %0
  %281 = or i32 %8, %2
  %282 = xor i32 %61, %0
  %283 = shl i32 %282, 1
  %284 = or i32 %35, %2
  %285 = or i32 %182, %273
  %286 = or i32 %54, %7
  %287 = shl i32 %286, 1
  %288 = or i32 %53, %15
  %289 = or i32 %8, %54
  %290 = xor i32 %98, %17
  %291 = shl i32 %35, 1
  %292 = and i32 %16, %91
  %293 = or i32 %37, %59
  %294 = and i32 %17, %59
  %295 = xor i32 %177, %172
  %296 = xor i32 %273, %184
  %297 = and i32 %61, %59
  %298 = and i32 %65, %59
  %299 = mul i32 %298, 15
  %300 = and i32 %61, %0
  %301 = and i32 %65, %0
  %302 = mul i32 %301, 37
  %303 = and i32 %51, %59
  %304 = mul i32 %303, 17
  %305 = and i32 %51, %0
  %306 = mul i32 %305, 10
  %307 = xor i32 %4, -1
  %308 = xor i32 %3, -1
  %309 = and i32 %308, %5
  %310 = and i32 %309, %307
  %311 = or i32 %308, %5
  %312 = and i32 %311, %4
  %313 = xor i32 %312, -1
  %314 = xor i32 %310, %313
  %315 = or i32 %310, %312
  %316 = shl i32 %315, 1
  %317 = xor i32 %4, %3
  %318 = xor i32 %317, -1
  %319 = or i32 %11, %318
  %320 = and i32 %317, %11
  %321 = and i32 %4, %3
  %322 = xor i32 %321, %5
  %323 = or i32 %11, %4
  %324 = and i32 %323, %317
  %325 = shl i32 %324, 1
  %326 = or i32 %4, %3
  %327 = and i32 %326, %11
  %328 = and i32 %308, %4
  %329 = xor i32 %5, %4
  %330 = xor i32 %329, -1
  %331 = or i32 %328, %330
  %332 = xor i32 %5, %3
  %333 = xor i32 %332, -1
  %334 = or i32 %333, %4
  %335 = shl i32 %334, 1
  %336 = and i32 %5, %4
  %337 = or i32 %5, %3
  %338 = xor i32 %337, -1
  %339 = or i32 %336, %338
  %340 = xor i32 %336, -1
  %341 = and i32 %317, %340
  %342 = and i32 %5, %3
  %343 = and i32 %342, %307
  %344 = and i32 %337, %4
  %345 = xor i32 %344, 2147483647
  %346 = xor i32 %345, %343
  %347 = or i32 %337, %4
  %348 = or i32 %11, %3
  %349 = xor i32 %348, -1
  %350 = xor i32 %349, %4
  %351 = and i32 %330, %3
  %352 = shl i32 %351, 1
  %353 = and i32 %309, %4
  %354 = or i32 %332, %4
  %355 = xor i32 %354, -1
  %356 = or i32 %353, %355
  %357 = or i32 %5, %4
  %358 = xor i32 %357, -1
  %359 = or i32 %358, %3
  %360 = or i32 %358, %318
  %361 = and i32 %11, %4
  %362 = or i32 %361, %318
  %363 = and i32 %357, %308
  %364 = or i32 %332, %321
  %365 = xor i32 %326, -1
  %366 = or i32 %330, %365
  %367 = or i32 %332, %328
  %368 = and i32 %317, %5
  %369 = xor i32 %321, -1
  %370 = xor i32 %369, %5
  %371 = or i32 %361, %342
  %372 = xor i32 %323, %321
  %373 = or i32 %336, %308
  %374 = or i32 %308, %4
  %375 = xor i32 %374, -1
  %376 = or i32 %330, %375
  %377 = or i32 %329, %318
  %378 = or i32 %332, %307
  %379 = xor i32 %378, 2147483647
  %380 = or i32 %379, %310
  %381 = and i32 %342, %4
  %382 = xor i32 %332, %4
  %383 = xor i32 %381, %382
  %384 = xor i32 %323, -1
  %385 = or i32 %321, %384
  %386 = shl i32 %385, 1
  %387 = or i32 %329, %328
  %388 = xor i32 %387, -1
  %389 = or i32 %333, %307
  %390 = or i32 %328, %11
  %391 = xor i32 %328, -1
  %392 = and i32 %333, %391
  %393 = or i32 %11, %365
  %394 = and i32 %326, %330
  %395 = and i32 %330, %369
  %396 = or i32 %329, %321
  %397 = shl i32 %396, 1
  %398 = or i32 %336, %318
  %399 = and i32 %333, %4
  %400 = and i32 %323, %318
  %401 = and i32 %330, %308
  %402 = xor i32 %337, %4
  %403 = xor i32 %381, -1
  %404 = xor i32 %402, %403
  %405 = or i32 %321, %330
  %406 = or i32 %336, %12
  %407 = xor i32 %326, %5
  %408 = or i32 %361, %3
  %409 = xor i32 %310, %378
  %410 = or i32 %384, %3
  %411 = or i32 %13, %4
  %412 = and i32 %329, %391
  %413 = xor i32 %357, %321
  %414 = or i32 %317, %358
  %415 = or i32 %349, %4
  %416 = or i32 %342, %307
  %417 = shl i32 %391, 1
  %418 = and i32 %323, %3
  %419 = and i32 %337, %307
  %420 = xor i32 %419, %403
  %421 = xor i32 %361, -1
  %422 = xor i32 %421, %3
  %423 = and i32 %340, %308
  %424 = and i32 %421, %318
  %425 = shl i32 %317, 1
  %426 = and i32 %374, %5
  %427 = and i32 %317, %330
  %428 = and i32 %13, %4
  %429 = and i32 %323, %308
  %430 = xor i32 %375, %5
  %431 = xor i32 %323, %3
  %432 = or i32 %361, %317
  %433 = xor i32 %311, %4
  %434 = or i32 %353, %433
  %435 = and i32 %421, %3
  %436 = and i32 %330, %318
  %437 = or i32 %318, %5
  %438 = xor i32 %361, %3
  %439 = and i32 %329, %3
  %440 = xor i32 %342, -1
  %441 = or i32 %440, %307
  %442 = xor i32 %391, %5
  %443 = or i32 %361, %349
  %444 = and i32 %11, %391
  %445 = shl i32 %444, 1
  %446 = and i32 %333, %369
  %447 = or i32 %317, %11
  %448 = xor i32 %433, -1
  %449 = xor i32 %353, %448
  %450 = add i32 %342, 1
  %451 = and i32 %332, %307
  %452 = or i32 %381, %451
  %453 = shl i32 %452, 2
  %454 = or i32 %329, %308
  %455 = xor i32 %336, %13
  %456 = or i32 %332, %365
  %457 = and i32 %440, %4
  %458 = or i32 %333, %375
  %459 = or i32 %11, %375
  %460 = or i32 %375, %5
  %461 = or i32 %349, %307
  %462 = and i32 %326, %333
  %463 = xor i32 %358, %3
  %464 = or i32 %381, %419
  %465 = shl i32 %464, 1
  %466 = xor i32 %336, %337
  %467 = or i32 %343, %344
  %468 = or i32 %330, %318
  %469 = xor i32 %340, %3
  %470 = or i32 %329, %317
  %471 = and i32 %340, %318
  %472 = or i32 %317, %384
  %473 = xor i32 %348, %4
  %474 = shl i32 %473, 1
  %475 = and i32 %440, %307
  %476 = and i32 %326, %5
  %477 = and i32 %329, %374
  %478 = or i32 %384, %318
  %479 = and i32 %357, %317
  %480 = shl i32 %479, 2
  %481 = and i32 %421, %308
  %482 = shl i32 %481, 1
  %483 = or i32 %321, %338
  %484 = or i32 %328, %5
  %485 = and i32 %340, %3
  %486 = xor i32 %342, %4
  %487 = shl i32 %421, 1
  %488 = or i32 %338, %307
  %489 = add i32 %323, 1
  %490 = and i32 %11, %318
  %491 = and i32 %332, %4
  %492 = xor i32 %491, -1
  %493 = xor i32 %343, %492
  %494 = or i32 %348, %4
  %495 = and i32 %329, %326
  %496 = or i32 %365, %5
  %497 = and i32 %348, %4
  %498 = xor i32 %361, %348
  %499 = xor i32 %336, %3
  %500 = or i32 %328, %333
  %501 = or i32 %317, %5
  %502 = and i32 %369, %5
  %503 = xor i32 %13, %4
  %504 = and i32 %318, %5
  %505 = or i32 %361, %308
  %506 = and i32 %13, %307
  %507 = or i32 %342, %328
  %508 = shl i32 %507, 1
  %509 = shl i32 %349, 1
  %510 = add i32 %321, 1
  %511 = shl i32 %365, 1
  %512 = and i32 %348, %307
  %513 = or i32 %336, %365
  %514 = xor i32 %336, %374
  %515 = or i32 %332, %375
  %516 = shl i32 %358, 1
  %517 = or i32 %381, %402
  %518 = and i32 %338, %307
  %519 = and i32 %12, %307
  %520 = shl i32 %519, 3
  %521 = and i32 %338, %4
  %522 = and i32 %12, %4
  %523 = and i32 %349, %307
  %524 = and i32 %349, %4
  %525 = mul i32 %381, -6
  %526 = add i32 %23, %59
  %527 = add i32 %526, %43
  %528 = add i32 %527, %274
  %529 = add i32 %528, %232
  %530 = add i32 %529, %207
  %531 = add i32 %530, %152
  %532 = add i32 %531, %297
  %533 = add i32 %532, %269
  %534 = add i32 %533, %205
  %535 = add i32 %534, %203
  %536 = add i32 %535, %187
  %537 = add i32 %536, %141
  %538 = add i32 %537, %126
  %539 = add i32 %538, %123
  %540 = add i32 %539, %96
  %541 = add i32 %540, %29
  %542 = add i32 %541, %252
  %543 = add i32 %542, %504
  %544 = add i32 %543, %340
  %545 = add i32 %544, %476
  %546 = add i32 %545, %222
  %547 = add i32 %546, %382
  %548 = add i32 %547, %486
  %549 = add i32 %548, %471
  %550 = add i32 %549, %468
  %551 = add i32 %550, %431
  %552 = add i32 %551, %424
  %553 = add i32 %552, %398
  %554 = add i32 %553, %394
  %555 = add i32 %554, %517
  %556 = add i32 %555, %346
  %557 = add i32 %556, %380
  %558 = shl i32 %557, 1
  %559 = sub i32 %142, %65
  %560 = add i32 %559, %300
  %561 = add i32 %560, %177
  %562 = sub i32 %561, %357
  %563 = add i32 %562, %524
  %564 = sub i32 %563, %343
  %565 = sub i32 %564, %521
  %566 = add i32 %565, %500
  %567 = sub i32 %566, %404
  %568 = mul i32 %567, 3
  %569 = sub i32 %88, %110
  %570 = add i32 %569, %265
  %571 = sub i32 %570, %225
  %572 = add i32 %571, %151
  %573 = add i32 %572, %411
  %574 = add i32 %573, %522
  %575 = mul i32 %574, 5
  %576 = sub i32 %182, %518
  %577 = mul i32 %576, 18
  %578 = sub i32 %30, %0
  %579 = sub i32 %578, %1
  %580 = add i32 %579, %24
  %581 = add i32 %580, %16
  %582 = add i32 %581, %34
  %583 = sub i32 %582, %2
  %584 = add i32 %583, %79
  %585 = add i32 %584, %253
  %586 = add i32 %585, %42
  %587 = add i32 %586, %8
  %588 = sub i32 %587, %25
  %589 = sub i32 %588, %37
  %590 = add i32 %589, %52
  %591 = sub i32 %590, %57
  %592 = sub i32 %591, %26
  %593 = add i32 %592, %54
  %594 = add i32 %593, %92
  %595 = add i32 %594, %17
  %596 = sub i32 %595, %106
  %597 = sub i32 %596, %129
  %598 = add i32 %597, %20
  %599 = sub i32 %598, %147
  %600 = add i32 %599, %148
  %601 = add i32 %600, %154
  %602 = add i32 %601, %155
  %603 = sub i32 %602, %165
  %604 = add i32 %603, %166
  %605 = add i32 %604, %171
  %606 = sub i32 %605, %176
  %607 = add i32 %606, %179
  %608 = add i32 %607, %208
  %609 = add i32 %608, %210
  %610 = sub i32 %609, %211
  %611 = add i32 %610, %214
  %612 = add i32 %611, %230
  %613 = add i32 %612, %39
  %614 = sub i32 %613, %248
  %615 = add i32 %614, %31
  %616 = add i32 %615, %28
  %617 = add i32 %616, %281
  %618 = add i32 %617, %284
  %619 = sub i32 %618, %291
  %620 = sub i32 %619, %292
  %621 = add i32 %620, %308
  %622 = sub i32 %621, %22
  %623 = sub i32 %622, %27
  %624 = sub i32 %623, %32
  %625 = add i32 %624, %33
  %626 = sub i32 %625, %36
  %627 = sub i32 %626, %38
  %628 = add i32 %627, %40
  %629 = add i32 %628, %41
  %630 = sub i32 %629, %45
  %631 = sub i32 %630, %55
  %632 = sub i32 %631, %56
  %633 = sub i32 %632, %58
  %634 = sub i32 %633, %60
  %635 = add i32 %634, %62
  %636 = add i32 %635, %66
  %637 = sub i32 %636, %67
  %638 = add i32 %637, %72
  %639 = add i32 %638, %73
  %640 = add i32 %639, %75
  %641 = sub i32 %640, %76
  %642 = add i32 %641, %77
  %643 = add i32 %642, %78
  %644 = sub i32 %643, %80
  %645 = sub i32 %644, %83
  %646 = sub i32 %645, %84
  %647 = add i32 %646, %85
  %648 = add i32 %647, %93
  %649 = sub i32 %648, %95
  %650 = add i32 %649, %97
  %651 = sub i32 %650, %100
  %652 = add i32 %651, %103
  %653 = add i32 %652, %105
  %654 = sub i32 %653, %107
  %655 = add i32 %654, %108
  %656 = sub i32 %655, %109
  %657 = add i32 %656, %111
  %658 = add i32 %657, %112
  %659 = sub i32 %658, %115
  %660 = add i32 %659, %118
  %661 = sub i32 %660, %119
  %662 = sub i32 %661, %120
  %663 = sub i32 %662, %121
  %664 = sub i32 %663, %122
  %665 = sub i32 %664, %130
  %666 = add i32 %665, %134
  %667 = sub i32 %666, %136
  %668 = add i32 %667, %137
  %669 = add i32 %668, %138
  %670 = sub i32 %669, %144
  %671 = add i32 %670, %145
  %672 = sub i32 %671, %146
  %673 = add i32 %672, %153
  %674 = sub i32 %673, %156
  %675 = add i32 %674, %157
  %676 = add i32 %675, %158
  %677 = sub i32 %676, %159
  %678 = sub i32 %677, %164
  %679 = add i32 %678, %167
  %680 = sub i32 %679, %168
  %681 = sub i32 %680, %169
  %682 = sub i32 %681, %170
  %683 = add i32 %682, %174
  %684 = sub i32 %683, %175
  %685 = sub i32 %684, %178
  %686 = sub i32 %685, %186
  %687 = sub i32 %686, %149
  %688 = sub i32 %687, %190
  %689 = sub i32 %688, %191
  %690 = add i32 %689, %196
  %691 = sub i32 %690, %197
  %692 = sub i32 %691, %198
  %693 = sub i32 %692, %200
  %694 = sub i32 %693, %201
  %695 = sub i32 %694, %202
  %696 = sub i32 %695, %204
  %697 = add i32 %696, %206
  %698 = add i32 %697, %209
  %699 = add i32 %698, %212
  %700 = sub i32 %699, %213
  %701 = sub i32 %700, %215
  %702 = sub i32 %701, %216
  %703 = sub i32 %702, %217
  %704 = add i32 %703, %218
  %705 = add i32 %704, %48
  %706 = add i32 %705, %228
  %707 = add i32 %706, %229
  %708 = sub i32 %707, %231
  %709 = sub i32 %708, %233
  %710 = sub i32 %709, %234
  %711 = add i32 %710, %238
  %712 = add i32 %711, %241
  %713 = sub i32 %712, %242
  %714 = add i32 %713, %243
  %715 = sub i32 %714, %250
  %716 = add i32 %715, %251
  %717 = add i32 %716, %254
  %718 = add i32 %717, %257
  %719 = add i32 %718, %258
  %720 = sub i32 %719, %263
  %721 = add i32 %720, %264
  %722 = sub i32 %721, %266
  %723 = sub i32 %722, %267
  %724 = sub i32 %723, %268
  %725 = add i32 %724, %270
  %726 = sub i32 %725, %271
  %727 = sub i32 %726, %272
  %728 = sub i32 %727, %273
  %729 = add i32 %728, %275
  %730 = sub i32 %729, %276
  %731 = add i32 %730, %277
  %732 = add i32 %731, %278
  %733 = add i32 %732, %279
  %734 = add i32 %733, %280
  %735 = add i32 %734, %288
  %736 = sub i32 %735, %89
  %737 = add i32 %736, %289
  %738 = sub i32 %737, %290
  %739 = sub i32 %738, %293
  %740 = sub i32 %739, %294
  %741 = sub i32 %740, %4
  %742 = add i32 %741, %19
  %743 = add i32 %742, %50
  %744 = sub i32 %743, %64
  %745 = sub i32 %744, %71
  %746 = sub i32 %745, %82
  %747 = sub i32 %746, %87
  %748 = sub i32 %747, %90
  %749 = sub i32 %748, %102
  %750 = sub i32 %749, %114
  %751 = sub i32 %750, %117
  %752 = sub i32 %751, %125
  %753 = sub i32 %752, %128
  %754 = sub i32 %753, %131
  %755 = sub i32 %754, %133
  %756 = sub i32 %755, %140
  %757 = sub i32 %756, %161
  %758 = add i32 %757, %163
  %759 = sub i32 %758, %173
  %760 = add i32 %759, %181
  %761 = add i32 %760, %185
  %762 = sub i32 %761, %188
  %763 = sub i32 %762, %189
  %764 = sub i32 %763, %193
  %765 = add i32 %764, %195
  %766 = sub i32 %765, %220
  %767 = sub i32 %766, %223
  %768 = add i32 %767, %224
  %769 = sub i32 %768, %227
  %770 = add i32 %769, %235
  %771 = sub i32 %770, %237
  %772 = sub i32 %771, %240
  %773 = add i32 %772, %244
  %774 = sub i32 %773, %247
  %775 = sub i32 %774, %256
  %776 = sub i32 %775, %260
  %777 = sub i32 %776, %261
  %778 = sub i32 %777, %262
  %779 = sub i32 %778, %283
  %780 = sub i32 %779, %285
  %781 = sub i32 %780, %287
  %782 = add i32 %781, %295
  %783 = add i32 %782, %296
  %784 = add i32 %783, %299
  %785 = add i32 %784, %302
  %786 = add i32 %785, %304
  %787 = add i32 %786, %306
  %788 = add i32 %787, %11
  %789 = add i32 %788, %318
  %790 = sub i32 %789, %5
  %791 = add i32 %790, %328
  %792 = add i32 %791, %510
  %793 = sub i32 %792, %319
  %794 = add i32 %793, %320
  %795 = add i32 %794, %322
  %796 = sub i32 %795, %327
  %797 = sub i32 %796, %368
  %798 = sub i32 %797, %370
  %799 = sub i32 %798, %390
  %800 = sub i32 %799, %393
  %801 = add i32 %800, %361
  %802 = sub i32 %801, %407
  %803 = sub i32 %802, %329
  %804 = add i32 %803, %333
  %805 = sub i32 %804, %417
  %806 = sub i32 %805, %425
  %807 = sub i32 %806, %426
  %808 = add i32 %807, %430
  %809 = add i32 %808, %437
  %810 = add i32 %809, %442
  %811 = add i32 %810, %447
  %812 = add i32 %811, %450
  %813 = sub i32 %812, %459
  %814 = add i32 %813, %460
  %815 = add i32 %814, %484
  %816 = add i32 %815, %489
  %817 = add i32 %816, %490
  %818 = sub i32 %817, %496
  %819 = add i32 %818, %336
  %820 = add i32 %819, %501
  %821 = add i32 %820, %502
  %822 = add i32 %821, %342
  %823 = sub i32 %822, %511
  %824 = add i32 %823, %331
  %825 = sub i32 %824, %339
  %826 = add i32 %825, %341
  %827 = sub i32 %826, %347
  %828 = sub i32 %827, %350
  %829 = add i32 %828, %359
  %830 = sub i32 %829, %360
  %831 = sub i32 %830, %362
  %832 = sub i32 %831, %363
  %833 = sub i32 %832, %364
  %834 = add i32 %833, %366
  %835 = sub i32 %834, %367
  %836 = sub i32 %835, %371
  %837 = add i32 %836, %372
  %838 = add i32 %837, %373
  %839 = sub i32 %838, %376
  %840 = sub i32 %839, %377
  %841 = add i32 %840, %388
  %842 = sub i32 %841, %389
  %843 = add i32 %842, %392
  %844 = add i32 %843, %395
  %845 = add i32 %844, %399
  %846 = add i32 %845, %400
  %847 = add i32 %846, %401
  %848 = sub i32 %847, %405
  %849 = sub i32 %848, %406
  %850 = sub i32 %849, %408
  %851 = add i32 %850, %410
  %852 = sub i32 %851, %412
  %853 = sub i32 %852, %413
  %854 = sub i32 %853, %414
  %855 = add i32 %854, %415
  %856 = add i32 %855, %416
  %857 = add i32 %856, %418
  %858 = sub i32 %857, %422
  %859 = sub i32 %858, %423
  %860 = sub i32 %859, %427
  %861 = add i32 %860, %428
  %862 = sub i32 %861, %429
  %863 = add i32 %862, %432
  %864 = sub i32 %863, %419
  %865 = add i32 %864, %435
  %866 = add i32 %865, %436
  %867 = sub i32 %866, %438
  %868 = sub i32 %867, %439
  %869 = add i32 %868, %441
  %870 = add i32 %869, %443
  %871 = sub i32 %870, %445
  %872 = add i32 %871, %446
  %873 = add i32 %872, %454
  %874 = add i32 %873, %455
  %875 = sub i32 %874, %456
  %876 = sub i32 %875, %457
  %877 = add i32 %876, %458
  %878 = add i32 %877, %461
  %879 = add i32 %878, %462
  %880 = add i32 %879, %463
  %881 = add i32 %880, %466
  %882 = add i32 %881, %469
  %883 = sub i32 %882, %344
  %884 = sub i32 %883, %470
  %885 = add i32 %884, %472
  %886 = sub i32 %885, %475
  %887 = add i32 %886, %477
  %888 = add i32 %887, %478
  %889 = sub i32 %888, %483
  %890 = sub i32 %889, %485
  %891 = add i32 %890, %402
  %892 = sub i32 %891, %487
  %893 = add i32 %892, %488
  %894 = add i32 %893, %494
  %895 = sub i32 %894, %495
  %896 = sub i32 %895, %491
  %897 = sub i32 %896, %497
  %898 = sub i32 %897, %498
  %899 = sub i32 %898, %499
  %900 = add i32 %899, %503
  %901 = add i32 %900, %505
  %902 = sub i32 %901, %506
  %903 = sub i32 %902, %509
  %904 = add i32 %903, %512
  %905 = add i32 %904, %513
  %906 = add i32 %905, %514
  %907 = add i32 %906, %515
  %908 = sub i32 %907, %516
  %909 = sub i32 %908, %523
  %910 = add i32 %909, %314
  %911 = sub i32 %910, %325
  %912 = sub i32 %911, %335
  %913 = sub i32 %912, %352
  %914 = add i32 %913, %356
  %915 = sub i32 %914, %383
  %916 = sub i32 %915, %386
  %917 = sub i32 %916, %397
  %918 = add i32 %917, %409
  %919 = add i32 %918, %420
  %920 = add i32 %919, %434
  %921 = add i32 %920, %449
  %922 = sub i32 %921, %467
  %923 = sub i32 %922, %474
  %924 = sub i32 %923, %480
  %925 = sub i32 %924, %482
  %926 = sub i32 %925, %493
  %927 = sub i32 %926, %508
  %928 = add i32 %927, %520
  %929 = add i32 %928, %525
  %930 = sub i32 %929, %316
  %931 = sub i32 %930, %453
  %932 = sub i32 %931, %465
  %933 = add i32 %932, %577
  %934 = add i32 %933, %575
  %935 = add i32 %934, %568
  %936 = add i32 %935, %558
  %937 = icmp eq i32 %14, %936
  %938 = select i1 %937, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %939 = tail call i32 @puts(i8* nonnull dereferenceable(1) %938)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
