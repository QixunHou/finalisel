digraph "DFG for'main' function" {
	Node0x1e92e38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e92eb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e92f48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1e92fa8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1e93058[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1e93488[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e93568[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1e93668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e93728[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1e937d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1e93898[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1e93948[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1e8dbd0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1e93b48[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e94ab8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e95128[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1e95188[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1e95200[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1e95270[shape=record, label="  %15 = add i32 %12, 1"];
	Node0x1e952e0[shape=record, label="  %16 = shl i32 %11, 1"];
	Node0x1e95350[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1e953c0[shape=record, label="  %18 = add i32 %15, %17"];
	Node0x1e95430[shape=record, label="  %19 = xor i32 %10, -1"];
	Node0x1e954a0[shape=record, label="  %20 = or i32 %13, %19"];
	Node0x1e95510[shape=record, label="  %21 = sub i32 %18, %20"];
	Node0x1e95580[shape=record, label="  %22 = xor i32 %12, %11"];
	Node0x1e955f0[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x1e95660[shape=record, label="  %24 = or i32 %11, %14"];
	Node0x1e956d0[shape=record, label="  %25 = or i32 %12, %11"];
	Node0x1e95740[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x1e957b0[shape=record, label="  %27 = mul i32 %26, 3"];
	Node0x1e95820[shape=record, label="  %28 = shl i32 %24, 2"];
	Node0x1e95890[shape=record, label="  %29 = xor i32 %28, -4"];
	Node0x1e95900[shape=record, label="  %30 = and i32 %11, %14"];
	Node0x1e95970[shape=record, label="  %31 = shl i32 %30, 2"];
	Node0x1e959e0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x1e95a50[shape=record, label="  %33 = and i32 %13, %19"];
	Node0x1e95ac0[shape=record, label="  %34 = xor i32 %13, %10"];
	Node0x1e95b30[shape=record, label="  %35 = shl i32 %32, 1"];
	Node0x1e95ba0[shape=record, label="  %36 = xor i32 %35, -2"];
	Node0x1e95c10[shape=record, label="  %37 = xor i32 %20, -1"];
	Node0x1e95c80[shape=record, label="  %38 = and i32 %13, %10"];
	Node0x1e95cf0[shape=record, label="  %39 = sub i32 %23, %33"];
	Node0x1e95d60[shape=record, label="  %40 = sub i32 %12, %10"];
	Node0x1e95dd0[shape=record, label="  %41 = add i32 %40, %39"];
	Node0x1e95e40[shape=record, label="  %42 = shl i32 %41, 1"];
	Node0x1e95eb0[shape=record, label="  %43 = sub i32 2, %16"];
	Node0x1e95f20[shape=record, label="  %44 = sub i32 %43, %22"];
	Node0x1e95f90[shape=record, label="  %45 = add i32 %44, %24"];
	Node0x1e96000[shape=record, label="  %46 = add i32 %45, %27"];
	Node0x1e96070[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x1e960e0[shape=record, label="  %48 = sub i32 %47, %32"];
	Node0x1e96150[shape=record, label="  %49 = add i32 %48, %34"];
	Node0x1e961c0[shape=record, label="  %50 = add i32 %49, %37"];
	Node0x1e96230[shape=record, label="  %51 = add i32 %50, %38"];
	Node0x1e962a0[shape=record, label="  %52 = add i32 %51, %29"];
	Node0x1e96310[shape=record, label="  %53 = sub i32 %52, %36"];
	Node0x1e96380[shape=record, label="  %54 = add i32 %53, %42"];
	Node0x1e963f0[shape=record, label="  %55 = icmp eq i32 %21, %54"];
	Node0x1e328b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e96480[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x1e96728[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1e96888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1e96998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e96aa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e96b68[shape=record, label="  ret i32 0"];
	Node0x1e92e38 -> Node0x1e92eb8;
	Node0x1e92eb8 -> Node0x1e92f48;
	Node0x1e92f48 -> Node0x1e92fa8;
	Node0x1e92fa8 -> Node0x1e93058;
	Node0x1e93058 -> Node0x1e93488;
	Node0x1e93488 -> Node0x1e93568;
	Node0x1e93568 -> Node0x1e93668;
	Node0x1e93668 -> Node0x1e93728;
	Node0x1e93728 -> Node0x1e937d8;
	Node0x1e937d8 -> Node0x1e93898;
	Node0x1e93898 -> Node0x1e93948;
	Node0x1e93948 -> Node0x1e8dbd0;
	Node0x1e8dbd0 -> Node0x1e93b48;
	Node0x1e93b48 -> Node0x1e94ab8;
	Node0x1e94ab8 -> Node0x1e95128;
	Node0x1e95128 -> Node0x1e95188;
	Node0x1e95188 -> Node0x1e95200;
	Node0x1e95200 -> Node0x1e95270;
	Node0x1e95270 -> Node0x1e952e0;
	Node0x1e952e0 -> Node0x1e95350;
	Node0x1e95350 -> Node0x1e953c0;
	Node0x1e953c0 -> Node0x1e95430;
	Node0x1e95430 -> Node0x1e954a0;
	Node0x1e954a0 -> Node0x1e95510;
	Node0x1e95510 -> Node0x1e95580;
	Node0x1e95580 -> Node0x1e955f0;
	Node0x1e955f0 -> Node0x1e95660;
	Node0x1e95660 -> Node0x1e956d0;
	Node0x1e956d0 -> Node0x1e95740;
	Node0x1e95740 -> Node0x1e957b0;
	Node0x1e957b0 -> Node0x1e95820;
	Node0x1e95820 -> Node0x1e95890;
	Node0x1e95890 -> Node0x1e95900;
	Node0x1e95900 -> Node0x1e95970;
	Node0x1e95970 -> Node0x1e959e0;
	Node0x1e959e0 -> Node0x1e95a50;
	Node0x1e95a50 -> Node0x1e95ac0;
	Node0x1e95ac0 -> Node0x1e95b30;
	Node0x1e95b30 -> Node0x1e95ba0;
	Node0x1e95ba0 -> Node0x1e95c10;
	Node0x1e95c10 -> Node0x1e95c80;
	Node0x1e95c80 -> Node0x1e95cf0;
	Node0x1e95cf0 -> Node0x1e95d60;
	Node0x1e95d60 -> Node0x1e95dd0;
	Node0x1e95dd0 -> Node0x1e95e40;
	Node0x1e95e40 -> Node0x1e95eb0;
	Node0x1e95eb0 -> Node0x1e95f20;
	Node0x1e95f20 -> Node0x1e95f90;
	Node0x1e95f90 -> Node0x1e96000;
	Node0x1e96000 -> Node0x1e96070;
	Node0x1e96070 -> Node0x1e960e0;
	Node0x1e960e0 -> Node0x1e96150;
	Node0x1e96150 -> Node0x1e961c0;
	Node0x1e961c0 -> Node0x1e96230;
	Node0x1e96230 -> Node0x1e962a0;
	Node0x1e962a0 -> Node0x1e96310;
	Node0x1e96310 -> Node0x1e96380;
	Node0x1e96380 -> Node0x1e963f0;
	Node0x1e963f0 -> Node0x1e328b8;
	Node0x1e328b8 -> Node0x1e96480;
	Node0x1e96480 -> Node0x1e96728;
	Node0x1e96728 -> Node0x1e96888;
	Node0x1e96888 -> Node0x1e96998;
	Node0x1e96998 -> Node0x1e96aa8;
	Node0x1e96aa8 -> Node0x1e96b68;
edge [color=red]
	Node0x1e92e38 -> Node0x1e93058;
	Node0x1e93058 -> Node0x1e93488;
	Node0x1e92eb8 -> Node0x1e93568;
	Node0x1e93568 -> Node0x1e93668;
	Node0x1e92f48 -> Node0x1e93728;
	Node0x1e93728 -> Node0x1e937d8;
	Node0x1e92fa8 -> Node0x1e93898;
	Node0x1e93898 -> Node0x1e93948;
	Node0x1e92e38 -> Node0x1e8dbd0;
	Node0x1e92eb8 -> Node0x1e8dbd0;
	Node0x1e92f48 -> Node0x1e8dbd0;
	Node0x1e92fa8 -> Node0x1e8dbd0;
	Node0x1e92e38 -> Node0x1e93b48;
	Node0x1e92eb8 -> Node0x1e94ab8;
	Node0x1e92f48 -> Node0x1e95128;
	Node0x1e92fa8 -> Node0x1e95188;
	Node0x1e95128 -> Node0x1e95200;
	Node0x1e95128 -> Node0x1e95270;
	Node0x1e94ab8 -> Node0x1e952e0;
	Node0x1e952e0 -> Node0x1e95350;
	Node0x1e95270 -> Node0x1e953c0;
	Node0x1e95350 -> Node0x1e953c0;
	Node0x1e93b48 -> Node0x1e95430;
	Node0x1e95188 -> Node0x1e954a0;
	Node0x1e95430 -> Node0x1e954a0;
	Node0x1e953c0 -> Node0x1e95510;
	Node0x1e954a0 -> Node0x1e95510;
	Node0x1e95128 -> Node0x1e95580;
	Node0x1e94ab8 -> Node0x1e95580;
	Node0x1e95128 -> Node0x1e955f0;
	Node0x1e94ab8 -> Node0x1e955f0;
	Node0x1e94ab8 -> Node0x1e95660;
	Node0x1e95200 -> Node0x1e95660;
	Node0x1e95128 -> Node0x1e956d0;
	Node0x1e94ab8 -> Node0x1e956d0;
	Node0x1e956d0 -> Node0x1e95740;
	Node0x1e95740 -> Node0x1e957b0;
	Node0x1e95660 -> Node0x1e95820;
	Node0x1e95820 -> Node0x1e95890;
	Node0x1e94ab8 -> Node0x1e95900;
	Node0x1e95200 -> Node0x1e95900;
	Node0x1e95900 -> Node0x1e95970;
	Node0x1e95188 -> Node0x1e959e0;
	Node0x1e93b48 -> Node0x1e959e0;
	Node0x1e95188 -> Node0x1e95a50;
	Node0x1e95430 -> Node0x1e95a50;
	Node0x1e95188 -> Node0x1e95ac0;
	Node0x1e93b48 -> Node0x1e95ac0;
	Node0x1e959e0 -> Node0x1e95b30;
	Node0x1e95b30 -> Node0x1e95ba0;
	Node0x1e954a0 -> Node0x1e95c10;
	Node0x1e95188 -> Node0x1e95c80;
	Node0x1e93b48 -> Node0x1e95c80;
	Node0x1e955f0 -> Node0x1e95cf0;
	Node0x1e95a50 -> Node0x1e95cf0;
	Node0x1e95128 -> Node0x1e95d60;
	Node0x1e93b48 -> Node0x1e95d60;
	Node0x1e95d60 -> Node0x1e95dd0;
	Node0x1e95cf0 -> Node0x1e95dd0;
	Node0x1e95dd0 -> Node0x1e95e40;
	Node0x1e952e0 -> Node0x1e95eb0;
	Node0x1e95eb0 -> Node0x1e95f20;
	Node0x1e95580 -> Node0x1e95f20;
	Node0x1e95f20 -> Node0x1e95f90;
	Node0x1e95660 -> Node0x1e95f90;
	Node0x1e95f90 -> Node0x1e96000;
	Node0x1e957b0 -> Node0x1e96000;
	Node0x1e96000 -> Node0x1e96070;
	Node0x1e95970 -> Node0x1e96070;
	Node0x1e96070 -> Node0x1e960e0;
	Node0x1e959e0 -> Node0x1e960e0;
	Node0x1e960e0 -> Node0x1e96150;
	Node0x1e95ac0 -> Node0x1e96150;
	Node0x1e96150 -> Node0x1e961c0;
	Node0x1e95c10 -> Node0x1e961c0;
	Node0x1e961c0 -> Node0x1e96230;
	Node0x1e95c80 -> Node0x1e96230;
	Node0x1e96230 -> Node0x1e962a0;
	Node0x1e95890 -> Node0x1e962a0;
	Node0x1e962a0 -> Node0x1e96310;
	Node0x1e95ba0 -> Node0x1e96310;
	Node0x1e96310 -> Node0x1e96380;
	Node0x1e95e40 -> Node0x1e96380;
	Node0x1e95510 -> Node0x1e963f0;
	Node0x1e96380 -> Node0x1e963f0;
	Node0x1e963f0 -> Node0x1e328b8;
	Node0x1e328b8 -> Node0x1e96480;
	Node0x1e93898 -> Node0x1e96728;
	Node0x1e93728 -> Node0x1e96888;
	Node0x1e93568 -> Node0x1e96998;
	Node0x1e93058 -> Node0x1e96aa8;
}
