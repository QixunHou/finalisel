; ModuleID = '../.././c_source_file/0848_path_condition_crackme.c'
source_filename = "../.././c_source_file/0848_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = and i32 %7, %1
  %9 = xor i32 %1, -1
  %10 = and i32 %9, %0
  %11 = xor i32 %2, %1
  %12 = or i32 %11, %10
  %13 = add i32 %12, %8
  %14 = xor i32 %3, -1
  %15 = and i32 %5, %4
  %16 = xor i32 %15, -1
  %17 = and i32 %16, %14
  %18 = sub i32 %13, %17
  %19 = and i32 %14, %5
  %20 = and i32 %19, %4
  %21 = xor i32 %5, %3
  %22 = or i32 %21, %4
  %23 = xor i32 %20, %22
  %24 = add i32 %18, %23
  %25 = xor i32 %1, %0
  %26 = xor i32 %25, -1
  %27 = xor i32 %2, %0
  %28 = xor i32 %27, -1
  %29 = and i32 %28, %26
  %30 = and i32 %1, %0
  %31 = or i32 %7, %0
  %32 = xor i32 %31, %30
  %33 = and i32 %7, %0
  %34 = and i32 %2, %1
  %35 = or i32 %33, %34
  %36 = xor i32 %11, -1
  %37 = or i32 %30, %36
  %38 = or i32 %27, %10
  %39 = and i32 %26, %2
  %40 = or i32 %27, %26
  %41 = shl i32 %40, 1
  %42 = xor i32 %0, -1
  %43 = or i32 %2, %1
  %44 = and i32 %43, %42
  %45 = and i32 %2, %0
  %46 = or i32 %45, %1
  %47 = shl i32 %46, 1
  %48 = or i32 %9, %0
  %49 = and i32 %11, %48
  %50 = or i32 %43, %0
  %51 = xor i32 %33, -1
  %52 = xor i32 %51, %1
  %53 = and i32 %27, %48
  %54 = xor i32 %33, %1
  %55 = or i32 %2, %0
  %56 = xor i32 %55, -1
  %57 = or i32 %30, %56
  %58 = or i32 %11, %0
  %59 = or i32 %1, %0
  %60 = and i32 %59, %28
  %61 = and i32 %34, %42
  %62 = and i32 %11, %0
  %63 = xor i32 %62, -1
  %64 = xor i32 %61, %63
  %65 = and i32 %55, %25
  %66 = or i32 %56, %26
  %67 = xor i32 %8, -1
  %68 = and i32 %67, %0
  %69 = or i32 %45, %8
  %70 = and i32 %10, %2
  %71 = or i32 %9, %2
  %72 = xor i32 %71, %42
  %73 = xor i32 %72, %70
  %74 = or i32 %45, %9
  %75 = xor i32 %30, %2
  %76 = xor i32 %31, -1
  %77 = or i32 %30, %76
  %78 = or i32 %11, %42
  %79 = xor i32 %48, -1
  %80 = or i32 %45, %79
  %81 = xor i32 %59, -1
  %82 = or i32 %7, %81
  %83 = xor i32 %30, -1
  %84 = and i32 %7, %83
  %85 = and i32 %31, %1
  %86 = or i32 %76, %26
  %87 = and i32 %31, %9
  %88 = shl i32 %87, 1
  %89 = or i32 %7, %79
  %90 = or i32 %7, %1
  %91 = and i32 %90, %0
  %92 = shl i32 %91, 1
  %93 = xor i32 %11, %0
  %94 = xor i32 %93, -1
  %95 = xor i32 %70, %94
  %96 = xor i32 %48, %2
  %97 = or i32 %27, %30
  %98 = or i32 %61, %62
  %99 = xor i32 %43, -1
  %100 = or i32 %45, %99
  %101 = or i32 %8, %10
  %102 = xor i32 %34, %0
  %103 = and i32 %25, %28
  %104 = or i32 %70, %93
  %105 = or i32 %56, %1
  %106 = xor i32 %10, %67
  %107 = shl i32 %106, 1
  %108 = or i32 %33, %1
  %109 = and i32 %71, %42
  %110 = or i32 %70, %109
  %111 = xor i32 %56, %1
  %112 = or i32 %99, %42
  %113 = xor i32 %90, -1
  %114 = or i32 %113, %0
  %115 = or i32 %36, %81
  %116 = and i32 %27, %59
  %117 = and i32 %25, %2
  %118 = xor i32 %43, %30
  %119 = shl i32 %118, 1
  %120 = or i32 %27, %79
  %121 = or i32 %30, %99
  %122 = xor i32 %34, -1
  %123 = and i32 %122, %42
  %124 = xor i32 %10, -1
  %125 = and i32 %11, %124
  %126 = and i32 %59, %2
  %127 = or i32 %36, %0
  %128 = or i32 %79, %2
  %129 = or i32 %30, %2
  %130 = xor i32 %70, %58
  %131 = and i32 %11, %42
  %132 = and i32 %34, %0
  %133 = or i32 %132, %131
  %134 = xor i32 %44, 2147483647
  %135 = xor i32 %134, %132
  %136 = xor i32 %33, %122
  %137 = or i32 %7, %26
  %138 = and i32 %48, %28
  %139 = shl i32 %138, 1
  %140 = xor i32 %79, %2
  %141 = xor i32 %45, %48
  %142 = xor i32 %45, -1
  %143 = xor i32 %142, %1
  %144 = and i32 %55, %1
  %145 = add i32 %55, 1
  %146 = or i32 %33, %25
  %147 = and i32 %51, %9
  %148 = add i32 %10, 1
  %149 = or i32 %28, %79
  %150 = xor i32 %36, %0
  %151 = xor i32 %81, %2
  %152 = shl i32 %151, 1
  %153 = xor i32 %43, %0
  %154 = or i32 %132, %153
  %155 = or i32 %33, %113
  %156 = xor i32 %113, %0
  %157 = and i32 %51, %1
  %158 = or i32 %11, %81
  %159 = xor i32 %132, %93
  %160 = xor i32 %8, %0
  %161 = shl i32 %76, 1
  %162 = and i32 %27, %25
  %163 = shl i32 %162, 1
  %164 = xor i32 %45, %67
  %165 = shl i32 %164, 2
  %166 = or i32 %132, %94
  %167 = or i32 %113, %42
  %168 = or i32 %76, %1
  %169 = and i32 %27, %9
  %170 = and i32 %25, %51
  %171 = and i32 %27, %26
  %172 = or i32 %28, %81
  %173 = and i32 %36, %0
  %174 = or i32 %67, %42
  %175 = and i32 %27, %124
  %176 = add i32 %48, 1
  %177 = add i32 %11, 1
  %178 = and i32 %27, %83
  %179 = or i32 %27, %1
  %180 = or i32 %30, %7
  %181 = and i32 %7, %26
  %182 = xor i32 %90, %30
  %183 = or i32 %45, %25
  %184 = and i32 %36, %124
  %185 = and i32 %142, %26
  %186 = or i32 %33, %26
  %187 = and i32 %36, %83
  %188 = and i32 %11, %59
  %189 = or i32 %122, %0
  %190 = add i32 %2, 1
  %191 = add i32 %8, 1
  %192 = or i32 %10, %7
  %193 = or i32 %25, %28
  %194 = shl i32 %193, 1
  %195 = and i32 %59, %7
  %196 = and i32 %90, %42
  %197 = xor i32 %83, %2
  %198 = or i32 %122, %42
  %199 = xor i32 %45, %1
  %200 = xor i32 %55, %30
  %201 = or i32 %11, %30
  %202 = or i32 %34, %10
  %203 = or i32 %10, %28
  %204 = or i32 %10, %2
  %205 = and i32 %55, %9
  %206 = xor i32 %67, %0
  %207 = or i32 %27, %25
  %208 = and i32 %67, %42
  %209 = or i32 %11, %79
  %210 = or i32 %27, %81
  %211 = xor i32 %70, -1
  %212 = xor i32 %109, %211
  %213 = xor i32 %10, %122
  %214 = or i32 %33, %9
  %215 = or i32 %27, %9
  %216 = and i32 %28, %1
  %217 = xor i32 %122, %0
  %218 = or i32 %36, %42
  %219 = add i32 %45, 1
  %220 = and i32 %31, %26
  %221 = xor i32 %45, %43
  %222 = or i32 %30, %113
  %223 = and i32 %43, %0
  %224 = xor i32 %223, 2147483647
  %225 = xor i32 %224, %61
  %226 = shl i32 %225, 1
  %227 = and i32 %122, %0
  %228 = and i32 %99, %42
  %229 = and i32 %8, %42
  %230 = and i32 %99, %0
  %231 = and i32 %8, %0
  %232 = mul i32 %231, -22
  %233 = and i32 %113, %42
  %234 = mul i32 %61, 6
  %235 = and i32 %113, %0
  %236 = or i32 %4, %3
  %237 = xor i32 %21, -1
  %238 = and i32 %236, %237
  %239 = and i32 %5, %3
  %240 = xor i32 %239, -1
  %241 = or i32 %5, %4
  %242 = xor i32 %241, -1
  %243 = or i32 %242, %3
  %244 = xor i32 %5, -1
  %245 = and i32 %244, %4
  %246 = or i32 %245, %3
  %247 = xor i32 %5, %4
  %248 = and i32 %247, %3
  %249 = shl i32 %248, 1
  %250 = xor i32 %247, -1
  %251 = or i32 %250, %3
  %252 = and i32 %14, %4
  %253 = or i32 %252, %250
  %254 = and i32 %239, %4
  %255 = xor i32 %4, -1
  %256 = and i32 %21, %255
  %257 = or i32 %254, %256
  %258 = or i32 %252, %244
  %259 = add i32 %3, 1
  %260 = and i32 %244, %3
  %261 = xor i32 %260, -1
  %262 = and i32 %261, %4
  %263 = or i32 %239, %255
  %264 = or i32 %244, %4
  %265 = xor i32 %264, -1
  %266 = or i32 %5, %3
  %267 = xor i32 %266, -1
  %268 = add i32 %266, 1
  %269 = and i32 %264, %3
  %270 = or i32 %267, %255
  %271 = xor i32 %4, %3
  %272 = or i32 %271, %265
  %273 = and i32 %21, %236
  %274 = and i32 %4, %3
  %275 = xor i32 %274, -1
  %276 = and i32 %247, %275
  %277 = or i32 %247, %271
  %278 = or i32 %21, %255
  %279 = or i32 %14, %4
  %280 = and i32 %279, %237
  %281 = xor i32 %271, -1
  %282 = or i32 %244, %281
  %283 = xor i32 %240, %4
  %284 = xor i32 %245, -1
  %285 = and i32 %236, %250
  %286 = or i32 %15, %271
  %287 = or i32 %274, %267
  %288 = and i32 %21, %275
  %289 = xor i32 %236, -1
  %290 = or i32 %244, %289
  %291 = or i32 %245, %281
  %292 = and i32 %284, %3
  %293 = shl i32 %292, 1
  %294 = or i32 %237, %289
  %295 = or i32 %260, %252
  %296 = and i32 %271, %16
  %297 = shl i32 %296, 2
  %298 = xor i32 %241, %274
  %299 = xor i32 %279, %5
  %300 = xor i32 %279, -1
  %301 = or i32 %250, %300
  %302 = or i32 %15, %281
  %303 = and i32 %284, %281
  %304 = and i32 %279, %244
  %305 = or i32 %252, %237
  %306 = shl i32 %305, 1
  %307 = xor i32 %241, %3
  %308 = or i32 %281, %5
  %309 = and i32 %241, %281
  %310 = or i32 %247, %281
  %311 = and i32 %266, %255
  %312 = xor i32 %260, %4
  %313 = xor i32 %300, %5
  %314 = or i32 %247, %14
  %315 = xor i32 %239, %4
  %316 = or i32 %244, %3
  %317 = and i32 %236, %5
  %318 = or i32 %239, %252
  %319 = xor i32 %252, -1
  %320 = and i32 %247, %319
  %321 = xor i32 %15, %3
  %322 = and i32 %279, %5
  %323 = add i32 %5, 1
  %324 = and i32 %19, %255
  %325 = or i32 %14, %5
  %326 = and i32 %325, %4
  %327 = or i32 %324, %326
  %328 = and i32 %250, %275
  %329 = or i32 %271, %250
  %330 = xor i32 %16, %3
  %331 = shl i32 %330, 1
  %332 = or i32 %271, %244
  %333 = and i32 %16, %281
  %334 = and i32 %247, %271
  %335 = and i32 %319, %5
  %336 = xor i32 %324, %278
  %337 = xor i32 %326, 2147483647
  %338 = xor i32 %337, %324
  %339 = shl i32 %338, 1
  %340 = xor i32 %254, -1
  %341 = xor i32 %340, %4
  %342 = xor i32 %341, %266
  %343 = and i32 %240, %4
  %344 = or i32 %245, %271
  %345 = and i32 %325, %255
  %346 = xor i32 %20, -1
  %347 = xor i32 %345, %346
  %348 = and i32 %237, %275
  %349 = xor i32 %289, %5
  %350 = xor i32 %245, %316
  %351 = or i32 %15, %300
  %352 = and i32 %271, %250
  %353 = and i32 %250, %14
  %354 = and i32 %264, %271
  %355 = xor i32 %4, 2147483647
  %356 = xor i32 %355, %325
  %357 = xor i32 %356, %20
  %358 = shl i32 %357, 1
  %359 = xor i32 %275, %5
  %360 = and i32 %244, %281
  %361 = or i32 %274, %242
  %362 = xor i32 %252, %240
  %363 = and i32 %281, %5
  %364 = or i32 %274, %5
  %365 = shl i32 %364, 1
  %366 = xor i32 %21, %4
  %367 = xor i32 %254, %366
  %368 = shl i32 %367, 1
  %369 = and i32 %247, %236
  %370 = and i32 %240, %255
  %371 = xor i32 %236, %5
  %372 = xor i32 %265, %3
  %373 = or i32 %20, %345
  %374 = shl i32 %373, 1
  %375 = or i32 %266, %255
  %376 = and i32 %271, %5
  %377 = xor i32 %237, %4
  %378 = or i32 %266, %4
  %379 = xor i32 %311, %340
  %380 = or i32 %247, %3
  %381 = xor i32 %261, %4
  %382 = xor i32 %264, %274
  %383 = xor i32 %319, %5
  %384 = or i32 %265, %3
  %385 = or i32 %250, %289
  %386 = or i32 %247, %289
  %387 = shl i32 %386, 1
  %388 = add i32 %4, 1
  %389 = xor i32 %15, %279
  %390 = xor i32 %316, %4
  %391 = xor i32 %316, -1
  %392 = or i32 %391, %255
  %393 = or i32 %247, %274
  %394 = and i32 %21, %279
  %395 = xor i32 %256, %340
  %396 = or i32 %21, %300
  %397 = xor i32 %15, %236
  %398 = and i32 %264, %281
  %399 = or i32 %261, %255
  %400 = xor i32 %316, %274
  %401 = and i32 %241, %3
  %402 = or i32 %289, %5
  %403 = or i32 %21, %274
  %404 = xor i32 %267, %4
  %405 = or i32 %245, %391
  %406 = or i32 %274, %244
  %407 = and i32 %16, %3
  %408 = or i32 %20, %366
  %409 = or i32 %21, %252
  %410 = xor i32 %366, %346
  %411 = or i32 %274, %237
  %412 = or i32 %237, %4
  %413 = shl i32 %412, 2
  %414 = and i32 %21, %4
  %415 = shl i32 %414, 1
  %416 = or i32 %245, %14
  %417 = xor i32 %274, %5
  %418 = or i32 %240, %255
  %419 = shl i32 %418, 1
  %420 = xor i32 %245, %3
  %421 = xor i32 %15, %261
  %422 = or i32 %21, %289
  %423 = and i32 %250, %281
  %424 = and i32 %267, %255
  %425 = and i32 %267, %4
  %426 = shl i32 %425, 1
  %427 = and i32 %260, %4
  %428 = and i32 %391, %255
  %429 = mul i32 %428, -23
  %430 = and i32 %239, %255
  %431 = and i32 %391, %4
  %432 = add i32 %43, -1
  %433 = add i32 %432, %192
  %434 = add i32 %433, %180
  %435 = add i32 %434, %137
  %436 = add i32 %435, %129
  %437 = add i32 %436, %75
  %438 = add i32 %437, %216
  %439 = add i32 %438, %208
  %440 = add i32 %439, %182
  %441 = add i32 %440, %172
  %442 = add i32 %441, %169
  %443 = add i32 %442, %168
  %444 = add i32 %443, %155
  %445 = add i32 %444, %144
  %446 = add i32 %445, %141
  %447 = add i32 %446, %44
  %448 = add i32 %447, %281
  %449 = add i32 %448, %98
  %450 = add i32 %449, %406
  %451 = add i32 %450, %237
  %452 = add i32 %451, %317
  %453 = add i32 %452, %265
  %454 = add i32 %453, %240
  %455 = add i32 %454, %135
  %456 = add i32 %455, %411
  %457 = add i32 %456, %378
  %458 = add i32 %457, %369
  %459 = add i32 %458, %334
  %460 = add i32 %459, %320
  %461 = add i32 %460, %294
  %462 = add i32 %461, %408
  %463 = shl i32 %462, 1
  %464 = add i32 %102, %178
  %465 = add i32 %464, %282
  %466 = sub i32 %465, %350
  %467 = sub i32 %466, %427
  %468 = sub i32 %467, %315
  %469 = add i32 %468, %291
  %470 = sub i32 %469, %253
  %471 = mul i32 %470, 5
  %472 = add i32 %132, %31
  %473 = add i32 %472, %120
  %474 = add i32 %473, %108
  %475 = add i32 %474, %269
  %476 = shl i32 %475, 2
  %477 = add i32 %32, %35
  %478 = add i32 %477, %154
  %479 = add i32 %478, %424
  %480 = mul i32 %479, -3
  %481 = sub i32 %430, %235
  %482 = mul i32 %481, 11
  %483 = add i32 %254, %230
  %484 = mul i32 %483, -7
  %485 = add i32 %233, %229
  %486 = mul i32 %485, -9
  %487 = add i32 %431, %228
  %488 = shl i32 %487, 3
  %489 = add i32 %30, %42
  %490 = add i32 %489, %148
  %491 = add i32 %490, %176
  %492 = add i32 %491, %190
  %493 = add i32 %492, %39
  %494 = sub i32 %493, %33
  %495 = add i32 %494, %82
  %496 = add i32 %495, %84
  %497 = add i32 %496, %55
  %498 = add i32 %497, %89
  %499 = add i32 %498, %96
  %500 = sub i32 %499, %27
  %501 = sub i32 %500, %34
  %502 = add i32 %501, %117
  %503 = sub i32 %502, %126
  %504 = sub i32 %503, %128
  %505 = sub i32 %504, %140
  %506 = add i32 %505, %145
  %507 = add i32 %506, %99
  %508 = add i32 %507, %177
  %509 = sub i32 %508, %181
  %510 = add i32 %509, %191
  %511 = add i32 %510, %113
  %512 = sub i32 %511, %195
  %513 = sub i32 %512, %197
  %514 = sub i32 %513, %204
  %515 = add i32 %514, %219
  %516 = add i32 %515, %259
  %517 = add i32 %516, %3
  %518 = sub i32 %517, %29
  %519 = sub i32 %518, %37
  %520 = add i32 %519, %38
  %521 = add i32 %520, %49
  %522 = add i32 %521, %50
  %523 = add i32 %522, %52
  %524 = sub i32 %523, %53
  %525 = add i32 %524, %54
  %526 = add i32 %525, %57
  %527 = add i32 %526, %58
  %528 = add i32 %527, %60
  %529 = sub i32 %528, %65
  %530 = sub i32 %529, %66
  %531 = sub i32 %530, %68
  %532 = sub i32 %531, %69
  %533 = add i32 %532, %74
  %534 = add i32 %533, %62
  %535 = add i32 %534, %77
  %536 = add i32 %535, %78
  %537 = add i32 %536, %80
  %538 = sub i32 %537, %85
  %539 = sub i32 %538, %86
  %540 = sub i32 %539, %97
  %541 = add i32 %540, %100
  %542 = add i32 %541, %101
  %543 = sub i32 %542, %103
  %544 = sub i32 %543, %105
  %545 = sub i32 %544, %111
  %546 = add i32 %545, %112
  %547 = sub i32 %546, %114
  %548 = sub i32 %547, %115
  %549 = add i32 %548, %116
  %550 = add i32 %549, %121
  %551 = sub i32 %550, %123
  %552 = add i32 %551, %125
  %553 = add i32 %552, %127
  %554 = add i32 %553, %131
  %555 = add i32 %554, %136
  %556 = sub i32 %555, %143
  %557 = sub i32 %556, %146
  %558 = add i32 %557, %147
  %559 = sub i32 %558, %149
  %560 = sub i32 %559, %150
  %561 = sub i32 %560, %152
  %562 = add i32 %561, %156
  %563 = add i32 %562, %157
  %564 = add i32 %563, %158
  %565 = add i32 %564, %160
  %566 = sub i32 %565, %161
  %567 = sub i32 %566, %167
  %568 = sub i32 %567, %170
  %569 = sub i32 %568, %171
  %570 = add i32 %569, %173
  %571 = add i32 %570, %174
  %572 = add i32 %571, %175
  %573 = sub i32 %572, %179
  %574 = sub i32 %573, %183
  %575 = add i32 %574, %184
  %576 = sub i32 %575, %185
  %577 = sub i32 %576, %186
  %578 = sub i32 %577, %187
  %579 = sub i32 %578, %188
  %580 = add i32 %579, %189
  %581 = sub i32 %580, %196
  %582 = add i32 %581, %198
  %583 = add i32 %582, %199
  %584 = sub i32 %583, %200
  %585 = add i32 %584, %201
  %586 = sub i32 %585, %202
  %587 = add i32 %586, %203
  %588 = add i32 %587, %205
  %589 = sub i32 %588, %206
  %590 = sub i32 %589, %207
  %591 = sub i32 %590, %209
  %592 = sub i32 %591, %210
  %593 = sub i32 %592, %213
  %594 = add i32 %593, %214
  %595 = add i32 %594, %215
  %596 = add i32 %595, %153
  %597 = add i32 %596, %217
  %598 = sub i32 %597, %218
  %599 = add i32 %598, %220
  %600 = sub i32 %599, %221
  %601 = sub i32 %600, %222
  %602 = sub i32 %601, %227
  %603 = add i32 %602, %388
  %604 = sub i32 %603, %41
  %605 = sub i32 %604, %47
  %606 = sub i32 %605, %64
  %607 = add i32 %606, %73
  %608 = sub i32 %607, %88
  %609 = sub i32 %608, %92
  %610 = sub i32 %609, %95
  %611 = sub i32 %610, %104
  %612 = sub i32 %611, %107
  %613 = sub i32 %612, %110
  %614 = sub i32 %613, %119
  %615 = sub i32 %614, %130
  %616 = add i32 %615, %133
  %617 = sub i32 %616, %139
  %618 = sub i32 %617, %159
  %619 = sub i32 %618, %163
  %620 = sub i32 %619, %165
  %621 = sub i32 %620, %166
  %622 = sub i32 %621, %194
  %623 = sub i32 %622, %212
  %624 = add i32 %623, %232
  %625 = add i32 %624, %234
  %626 = sub i32 %625, %5
  %627 = sub i32 %626, %274
  %628 = add i32 %627, %323
  %629 = add i32 %628, %252
  %630 = sub i32 %629, %258
  %631 = add i32 %630, %268
  %632 = sub i32 %631, %290
  %633 = sub i32 %632, %299
  %634 = add i32 %633, %304
  %635 = add i32 %634, %308
  %636 = add i32 %635, %313
  %637 = add i32 %636, %316
  %638 = add i32 %637, %322
  %639 = add i32 %638, %332
  %640 = add i32 %639, %335
  %641 = sub i32 %640, %247
  %642 = add i32 %641, %349
  %643 = sub i32 %642, %359
  %644 = add i32 %643, %360
  %645 = sub i32 %644, %363
  %646 = add i32 %645, %371
  %647 = add i32 %646, %376
  %648 = add i32 %647, %383
  %649 = sub i32 %648, %402
  %650 = sub i32 %649, %260
  %651 = add i32 %650, %417
  %652 = sub i32 %651, %264
  %653 = add i32 %652, %486
  %654 = sub i32 %653, %226
  %655 = add i32 %654, %238
  %656 = add i32 %655, %243
  %657 = sub i32 %656, %246
  %658 = sub i32 %657, %251
  %659 = sub i32 %658, %262
  %660 = sub i32 %659, %263
  %661 = add i32 %660, %270
  %662 = sub i32 %661, %272
  %663 = sub i32 %662, %273
  %664 = add i32 %663, %276
  %665 = sub i32 %664, %277
  %666 = sub i32 %665, %278
  %667 = add i32 %666, %280
  %668 = sub i32 %667, %283
  %669 = sub i32 %668, %285
  %670 = sub i32 %669, %286
  %671 = add i32 %670, %287
  %672 = add i32 %671, %288
  %673 = sub i32 %672, %295
  %674 = sub i32 %673, %298
  %675 = add i32 %674, %301
  %676 = add i32 %675, %302
  %677 = sub i32 %676, %303
  %678 = add i32 %677, %307
  %679 = sub i32 %678, %309
  %680 = sub i32 %679, %310
  %681 = add i32 %680, %311
  %682 = add i32 %681, %312
  %683 = add i32 %682, %314
  %684 = add i32 %683, %318
  %685 = add i32 %684, %321
  %686 = add i32 %685, %328
  %687 = sub i32 %686, %329
  %688 = sub i32 %687, %333
  %689 = sub i32 %688, %343
  %690 = sub i32 %689, %344
  %691 = add i32 %690, %22
  %692 = add i32 %691, %348
  %693 = sub i32 %692, %351
  %694 = add i32 %693, %352
  %695 = sub i32 %694, %353
  %696 = add i32 %695, %354
  %697 = add i32 %696, %256
  %698 = add i32 %697, %361
  %699 = add i32 %698, %362
  %700 = sub i32 %699, %365
  %701 = add i32 %700, %370
  %702 = sub i32 %701, %372
  %703 = add i32 %702, %375
  %704 = sub i32 %703, %377
  %705 = sub i32 %704, %380
  %706 = sub i32 %705, %381
  %707 = sub i32 %706, %382
  %708 = sub i32 %707, %384
  %709 = add i32 %708, %385
  %710 = add i32 %709, %389
  %711 = sub i32 %710, %390
  %712 = add i32 %711, %392
  %713 = add i32 %712, %393
  %714 = add i32 %713, %394
  %715 = add i32 %714, %396
  %716 = add i32 %715, %397
  %717 = sub i32 %716, %398
  %718 = add i32 %717, %399
  %719 = add i32 %718, %400
  %720 = sub i32 %719, %401
  %721 = add i32 %720, %403
  %722 = sub i32 %721, %404
  %723 = sub i32 %722, %405
  %724 = sub i32 %723, %407
  %725 = add i32 %724, %409
  %726 = add i32 %725, %416
  %727 = add i32 %726, %420
  %728 = add i32 %727, %421
  %729 = add i32 %728, %422
  %730 = add i32 %729, %423
  %731 = sub i32 %730, %249
  %732 = add i32 %731, %257
  %733 = sub i32 %732, %293
  %734 = sub i32 %733, %297
  %735 = sub i32 %734, %306
  %736 = sub i32 %735, %327
  %737 = sub i32 %736, %331
  %738 = sub i32 %737, %336
  %739 = add i32 %738, %342
  %740 = sub i32 %739, %347
  %741 = sub i32 %740, %379
  %742 = sub i32 %741, %387
  %743 = add i32 %742, %395
  %744 = sub i32 %743, %410
  %745 = sub i32 %744, %413
  %746 = sub i32 %745, %415
  %747 = sub i32 %746, %419
  %748 = sub i32 %747, %426
  %749 = add i32 %748, %429
  %750 = sub i32 %749, %368
  %751 = sub i32 %750, %374
  %752 = add i32 %751, %482
  %753 = add i32 %752, %484
  %754 = add i32 %753, %488
  %755 = sub i32 %754, %339
  %756 = sub i32 %755, %358
  %757 = add i32 %756, %480
  %758 = add i32 %757, %476
  %759 = add i32 %758, %471
  %760 = add i32 %759, %463
  %761 = icmp eq i32 %24, %760
  %762 = select i1 %761, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %763 = tail call i32 @puts(i8* nonnull dereferenceable(1) %762)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
