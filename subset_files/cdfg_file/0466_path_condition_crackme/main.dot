digraph "DFG for'main' function" {
	Node0x104bf38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x104bfb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x104c048[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x104c4a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x104c588[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x104c6a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x104c8e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x104c998[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x104d908[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x104df90[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x104e000[shape=record, label="  %9 = xor i32 %6, -1"];
	Node0x104e070[shape=record, label="  %10 = add i32 %8, %9"];
	Node0x104e0e0[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x104e150[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x104e1c0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x104e230[shape=record, label="  %14 = add i32 %11, %7"];
	Node0x104e2a0[shape=record, label="  %15 = sub i32 %13, %14"];
	Node0x104e310[shape=record, label="  %16 = and i32 %6, %8"];
	Node0x104e380[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x104e3f0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x104e460[shape=record, label="  %19 = or i32 %6, %8"];
	Node0x104e4d0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x104e540[shape=record, label="  %21 = xor i32 %7, %6"];
	Node0x104e5b0[shape=record, label="  %22 = xor i32 %11, -1"];
	Node0x104e620[shape=record, label="  %23 = mul i32 %22, 5"];
	Node0x104e690[shape=record, label="  %24 = xor i32 %19, -1"];
	Node0x104e700[shape=record, label="  %25 = mul i32 %24, 3"];
	Node0x104e770[shape=record, label="  %26 = mul i32 %12, 6"];
	Node0x104e7e0[shape=record, label="  %27 = add i32 %15, %21"];
	Node0x104e850[shape=record, label="  %28 = sub i32 %27, %20"];
	Node0x104e8c0[shape=record, label="  %29 = add i32 %28, %23"];
	Node0x104e930[shape=record, label="  %30 = add i32 %29, %25"];
	Node0x104e9a0[shape=record, label="  %31 = add i32 %30, %17"];
	Node0x104ea10[shape=record, label="  %32 = add i32 %31, %26"];
	Node0x104ec90[shape=record, label="  %33 = sub i32 %32, %18"];
	Node0x104ed00[shape=record, label="  %34 = icmp eq i32 %10, %33"];
	Node0xfec9d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x104ed90[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0x104efe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x104f148[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x104f208[shape=record, label="  ret i32 0"];
	Node0x104bf38 -> Node0x104bfb8;
	Node0x104bfb8 -> Node0x104c048;
	Node0x104c048 -> Node0x104c4a8;
	Node0x104c4a8 -> Node0x104c588;
	Node0x104c588 -> Node0x104c6a8;
	Node0x104c6a8 -> Node0x104c8e0;
	Node0x104c8e0 -> Node0x104c998;
	Node0x104c998 -> Node0x104d908;
	Node0x104d908 -> Node0x104df90;
	Node0x104df90 -> Node0x104e000;
	Node0x104e000 -> Node0x104e070;
	Node0x104e070 -> Node0x104e0e0;
	Node0x104e0e0 -> Node0x104e150;
	Node0x104e150 -> Node0x104e1c0;
	Node0x104e1c0 -> Node0x104e230;
	Node0x104e230 -> Node0x104e2a0;
	Node0x104e2a0 -> Node0x104e310;
	Node0x104e310 -> Node0x104e380;
	Node0x104e380 -> Node0x104e3f0;
	Node0x104e3f0 -> Node0x104e460;
	Node0x104e460 -> Node0x104e4d0;
	Node0x104e4d0 -> Node0x104e540;
	Node0x104e540 -> Node0x104e5b0;
	Node0x104e5b0 -> Node0x104e620;
	Node0x104e620 -> Node0x104e690;
	Node0x104e690 -> Node0x104e700;
	Node0x104e700 -> Node0x104e770;
	Node0x104e770 -> Node0x104e7e0;
	Node0x104e7e0 -> Node0x104e850;
	Node0x104e850 -> Node0x104e8c0;
	Node0x104e8c0 -> Node0x104e930;
	Node0x104e930 -> Node0x104e9a0;
	Node0x104e9a0 -> Node0x104ea10;
	Node0x104ea10 -> Node0x104ec90;
	Node0x104ec90 -> Node0x104ed00;
	Node0x104ed00 -> Node0xfec9d8;
	Node0xfec9d8 -> Node0x104ed90;
	Node0x104ed90 -> Node0x104efe8;
	Node0x104efe8 -> Node0x104f148;
	Node0x104f148 -> Node0x104f208;
edge [color=red]
	Node0x104bf38 -> Node0x104c048;
	Node0x104c048 -> Node0x104c4a8;
	Node0x104bfb8 -> Node0x104c588;
	Node0x104c588 -> Node0x104c6a8;
	Node0x104bf38 -> Node0x104c8e0;
	Node0x104bfb8 -> Node0x104c8e0;
	Node0x104bf38 -> Node0x104c998;
	Node0x104bfb8 -> Node0x104d908;
	Node0x104d908 -> Node0x104df90;
	Node0x104c998 -> Node0x104e000;
	Node0x104df90 -> Node0x104e070;
	Node0x104e000 -> Node0x104e070;
	Node0x104d908 -> Node0x104e0e0;
	Node0x104c998 -> Node0x104e0e0;
	Node0x104d908 -> Node0x104e150;
	Node0x104c998 -> Node0x104e150;
	Node0x104e150 -> Node0x104e1c0;
	Node0x104e0e0 -> Node0x104e230;
	Node0x104d908 -> Node0x104e230;
	Node0x104e1c0 -> Node0x104e2a0;
	Node0x104e230 -> Node0x104e2a0;
	Node0x104c998 -> Node0x104e310;
	Node0x104df90 -> Node0x104e310;
	Node0x104e310 -> Node0x104e380;
	Node0x104e380 -> Node0x104e3f0;
	Node0x104c998 -> Node0x104e460;
	Node0x104df90 -> Node0x104e460;
	Node0x104e460 -> Node0x104e4d0;
	Node0x104d908 -> Node0x104e540;
	Node0x104c998 -> Node0x104e540;
	Node0x104e0e0 -> Node0x104e5b0;
	Node0x104e5b0 -> Node0x104e620;
	Node0x104e460 -> Node0x104e690;
	Node0x104e690 -> Node0x104e700;
	Node0x104e150 -> Node0x104e770;
	Node0x104e2a0 -> Node0x104e7e0;
	Node0x104e540 -> Node0x104e7e0;
	Node0x104e7e0 -> Node0x104e850;
	Node0x104e4d0 -> Node0x104e850;
	Node0x104e850 -> Node0x104e8c0;
	Node0x104e620 -> Node0x104e8c0;
	Node0x104e8c0 -> Node0x104e930;
	Node0x104e700 -> Node0x104e930;
	Node0x104e930 -> Node0x104e9a0;
	Node0x104e380 -> Node0x104e9a0;
	Node0x104e9a0 -> Node0x104ea10;
	Node0x104e770 -> Node0x104ea10;
	Node0x104ea10 -> Node0x104ec90;
	Node0x104e3f0 -> Node0x104ec90;
	Node0x104e070 -> Node0x104ed00;
	Node0x104ec90 -> Node0x104ed00;
	Node0x104ed00 -> Node0xfec9d8;
	Node0xfec9d8 -> Node0x104ed90;
	Node0x104c588 -> Node0x104efe8;
	Node0x104c048 -> Node0x104f148;
}
