digraph "DFG for'main' function" {
	Node0x1dc8f08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1dc8f88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1dc9018[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1dc9078[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1dc9128[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1dc9558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1dc9638[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1dc9738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1dc97f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1dc98a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1dc9968[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1dc9a18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1dc3c10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1dc9c18[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1dcab88[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1dcb1f8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1dcb258[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1dcb2d0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1dcb340[shape=record, label="  %15 = mul i32 %14, -2"];
	Node0x1dcb3b0[shape=record, label="  %16 = or i32 %15, 1"];
	Node0x1dcb420[shape=record, label="  %17 = xor i32 %13, -1"];
	Node0x1dcb490[shape=record, label="  %18 = add i32 %16, %17"];
	Node0x1dcb500[shape=record, label="  %19 = xor i32 %11, %14"];
	Node0x1dcb570[shape=record, label="  %20 = shl i32 %12, 1"];
	Node0x1dcb5e0[shape=record, label="  %21 = and i32 %11, %14"];
	Node0x1dcb650[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x1dcb6c0[shape=record, label="  %23 = shl i32 %22, 2"];
	Node0x1dcb730[shape=record, label="  %24 = xor i32 %23, -4"];
	Node0x1dcb7a0[shape=record, label="  %25 = or i32 %12, %11"];
	Node0x1dcb810[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x1dcb880[shape=record, label="  %27 = xor i32 %11, 2147483647"];
	Node0x1dcb8f0[shape=record, label="  %28 = and i32 %27, %12"];
	Node0x1dcb960[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x1dcb9d0[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x1dcba40[shape=record, label="  %31 = or i32 %13, %30"];
	Node0x1dcbab0[shape=record, label="  %32 = or i32 %10, %17"];
	Node0x1dcbb20[shape=record, label="  %33 = mul i32 %10, 5"];
	Node0x1dcbb90[shape=record, label="  %34 = xor i32 %13, %30"];
	Node0x1dcbc00[shape=record, label="  %35 = and i32 %13, %10"];
	Node0x1dcbc70[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x1dcbce0[shape=record, label="  %37 = xor i32 %36, -2"];
	Node0x1dcbd50[shape=record, label="  %38 = xor i32 %31, -1"];
	Node0x1dcbdc0[shape=record, label="  %39 = mul i32 %38, -3"];
	Node0x1dcbe30[shape=record, label="  %40 = add i32 %21, %26"];
	Node0x1dcbea0[shape=record, label="  %41 = add i32 %40, %35"];
	Node0x1dcbf10[shape=record, label="  %42 = mul i32 %41, -7"];
	Node0x1dcbf80[shape=record, label="  %43 = xor i32 %20, -1"];
	Node0x1dcbff0[shape=record, label="  %44 = add i32 %33, %43"];
	Node0x1dcc060[shape=record, label="  %45 = add i32 %44, %19"];
	Node0x1dcc0d0[shape=record, label="  %46 = add i32 %45, %21"];
	Node0x1dcc140[shape=record, label="  %47 = add i32 %46, %22"];
	Node0x1dcc1b0[shape=record, label="  %48 = sub i32 %47, %13"];
	Node0x1dcc220[shape=record, label="  %49 = sub i32 %48, %29"];
	Node0x1dcc290[shape=record, label="  %50 = add i32 %49, %31"];
	Node0x1dcc300[shape=record, label="  %51 = sub i32 %50, %32"];
	Node0x1dcc370[shape=record, label="  %52 = add i32 %51, %34"];
	Node0x1dcc3e0[shape=record, label="  %53 = add i32 %52, %24"];
	Node0x1dcc450[shape=record, label="  %54 = add i32 %53, %39"];
	Node0x1dcc4c0[shape=record, label="  %55 = sub i32 %54, %37"];
	Node0x1dcc530[shape=record, label="  %56 = add i32 %55, %42"];
	Node0x1dcc5a0[shape=record, label="  %57 = icmp eq i32 %18, %56"];
	Node0x1d688b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1dcc630[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0x1dcc8d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1dcca38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1dccb48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1dccc58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1dccd18[shape=record, label="  ret i32 0"];
	Node0x1dc8f08 -> Node0x1dc8f88;
	Node0x1dc8f88 -> Node0x1dc9018;
	Node0x1dc9018 -> Node0x1dc9078;
	Node0x1dc9078 -> Node0x1dc9128;
	Node0x1dc9128 -> Node0x1dc9558;
	Node0x1dc9558 -> Node0x1dc9638;
	Node0x1dc9638 -> Node0x1dc9738;
	Node0x1dc9738 -> Node0x1dc97f8;
	Node0x1dc97f8 -> Node0x1dc98a8;
	Node0x1dc98a8 -> Node0x1dc9968;
	Node0x1dc9968 -> Node0x1dc9a18;
	Node0x1dc9a18 -> Node0x1dc3c10;
	Node0x1dc3c10 -> Node0x1dc9c18;
	Node0x1dc9c18 -> Node0x1dcab88;
	Node0x1dcab88 -> Node0x1dcb1f8;
	Node0x1dcb1f8 -> Node0x1dcb258;
	Node0x1dcb258 -> Node0x1dcb2d0;
	Node0x1dcb2d0 -> Node0x1dcb340;
	Node0x1dcb340 -> Node0x1dcb3b0;
	Node0x1dcb3b0 -> Node0x1dcb420;
	Node0x1dcb420 -> Node0x1dcb490;
	Node0x1dcb490 -> Node0x1dcb500;
	Node0x1dcb500 -> Node0x1dcb570;
	Node0x1dcb570 -> Node0x1dcb5e0;
	Node0x1dcb5e0 -> Node0x1dcb650;
	Node0x1dcb650 -> Node0x1dcb6c0;
	Node0x1dcb6c0 -> Node0x1dcb730;
	Node0x1dcb730 -> Node0x1dcb7a0;
	Node0x1dcb7a0 -> Node0x1dcb810;
	Node0x1dcb810 -> Node0x1dcb880;
	Node0x1dcb880 -> Node0x1dcb8f0;
	Node0x1dcb8f0 -> Node0x1dcb960;
	Node0x1dcb960 -> Node0x1dcb9d0;
	Node0x1dcb9d0 -> Node0x1dcba40;
	Node0x1dcba40 -> Node0x1dcbab0;
	Node0x1dcbab0 -> Node0x1dcbb20;
	Node0x1dcbb20 -> Node0x1dcbb90;
	Node0x1dcbb90 -> Node0x1dcbc00;
	Node0x1dcbc00 -> Node0x1dcbc70;
	Node0x1dcbc70 -> Node0x1dcbce0;
	Node0x1dcbce0 -> Node0x1dcbd50;
	Node0x1dcbd50 -> Node0x1dcbdc0;
	Node0x1dcbdc0 -> Node0x1dcbe30;
	Node0x1dcbe30 -> Node0x1dcbea0;
	Node0x1dcbea0 -> Node0x1dcbf10;
	Node0x1dcbf10 -> Node0x1dcbf80;
	Node0x1dcbf80 -> Node0x1dcbff0;
	Node0x1dcbff0 -> Node0x1dcc060;
	Node0x1dcc060 -> Node0x1dcc0d0;
	Node0x1dcc0d0 -> Node0x1dcc140;
	Node0x1dcc140 -> Node0x1dcc1b0;
	Node0x1dcc1b0 -> Node0x1dcc220;
	Node0x1dcc220 -> Node0x1dcc290;
	Node0x1dcc290 -> Node0x1dcc300;
	Node0x1dcc300 -> Node0x1dcc370;
	Node0x1dcc370 -> Node0x1dcc3e0;
	Node0x1dcc3e0 -> Node0x1dcc450;
	Node0x1dcc450 -> Node0x1dcc4c0;
	Node0x1dcc4c0 -> Node0x1dcc530;
	Node0x1dcc530 -> Node0x1dcc5a0;
	Node0x1dcc5a0 -> Node0x1d688b8;
	Node0x1d688b8 -> Node0x1dcc630;
	Node0x1dcc630 -> Node0x1dcc8d8;
	Node0x1dcc8d8 -> Node0x1dcca38;
	Node0x1dcca38 -> Node0x1dccb48;
	Node0x1dccb48 -> Node0x1dccc58;
	Node0x1dccc58 -> Node0x1dccd18;
edge [color=red]
	Node0x1dc8f08 -> Node0x1dc9128;
	Node0x1dc9128 -> Node0x1dc9558;
	Node0x1dc8f88 -> Node0x1dc9638;
	Node0x1dc9638 -> Node0x1dc9738;
	Node0x1dc9018 -> Node0x1dc97f8;
	Node0x1dc97f8 -> Node0x1dc98a8;
	Node0x1dc9078 -> Node0x1dc9968;
	Node0x1dc9968 -> Node0x1dc9a18;
	Node0x1dc8f08 -> Node0x1dc3c10;
	Node0x1dc8f88 -> Node0x1dc3c10;
	Node0x1dc9018 -> Node0x1dc3c10;
	Node0x1dc9078 -> Node0x1dc3c10;
	Node0x1dc8f08 -> Node0x1dc9c18;
	Node0x1dc8f88 -> Node0x1dcab88;
	Node0x1dc9018 -> Node0x1dcb1f8;
	Node0x1dc9078 -> Node0x1dcb258;
	Node0x1dcb1f8 -> Node0x1dcb2d0;
	Node0x1dcb2d0 -> Node0x1dcb340;
	Node0x1dcb340 -> Node0x1dcb3b0;
	Node0x1dcb258 -> Node0x1dcb420;
	Node0x1dcb3b0 -> Node0x1dcb490;
	Node0x1dcb420 -> Node0x1dcb490;
	Node0x1dcab88 -> Node0x1dcb500;
	Node0x1dcb2d0 -> Node0x1dcb500;
	Node0x1dcb1f8 -> Node0x1dcb570;
	Node0x1dcab88 -> Node0x1dcb5e0;
	Node0x1dcb2d0 -> Node0x1dcb5e0;
	Node0x1dcb1f8 -> Node0x1dcb650;
	Node0x1dcab88 -> Node0x1dcb650;
	Node0x1dcb650 -> Node0x1dcb6c0;
	Node0x1dcb6c0 -> Node0x1dcb730;
	Node0x1dcb1f8 -> Node0x1dcb7a0;
	Node0x1dcab88 -> Node0x1dcb7a0;
	Node0x1dcb7a0 -> Node0x1dcb810;
	Node0x1dcab88 -> Node0x1dcb880;
	Node0x1dcb880 -> Node0x1dcb8f0;
	Node0x1dcb1f8 -> Node0x1dcb8f0;
	Node0x1dcb8f0 -> Node0x1dcb960;
	Node0x1dc9c18 -> Node0x1dcb9d0;
	Node0x1dcb258 -> Node0x1dcba40;
	Node0x1dcb9d0 -> Node0x1dcba40;
	Node0x1dc9c18 -> Node0x1dcbab0;
	Node0x1dcb420 -> Node0x1dcbab0;
	Node0x1dc9c18 -> Node0x1dcbb20;
	Node0x1dcb258 -> Node0x1dcbb90;
	Node0x1dcb9d0 -> Node0x1dcbb90;
	Node0x1dcb258 -> Node0x1dcbc00;
	Node0x1dc9c18 -> Node0x1dcbc00;
	Node0x1dcbc00 -> Node0x1dcbc70;
	Node0x1dcbc70 -> Node0x1dcbce0;
	Node0x1dcba40 -> Node0x1dcbd50;
	Node0x1dcbd50 -> Node0x1dcbdc0;
	Node0x1dcb5e0 -> Node0x1dcbe30;
	Node0x1dcb810 -> Node0x1dcbe30;
	Node0x1dcbe30 -> Node0x1dcbea0;
	Node0x1dcbc00 -> Node0x1dcbea0;
	Node0x1dcbea0 -> Node0x1dcbf10;
	Node0x1dcb570 -> Node0x1dcbf80;
	Node0x1dcbb20 -> Node0x1dcbff0;
	Node0x1dcbf80 -> Node0x1dcbff0;
	Node0x1dcbff0 -> Node0x1dcc060;
	Node0x1dcb500 -> Node0x1dcc060;
	Node0x1dcc060 -> Node0x1dcc0d0;
	Node0x1dcb5e0 -> Node0x1dcc0d0;
	Node0x1dcc0d0 -> Node0x1dcc140;
	Node0x1dcb650 -> Node0x1dcc140;
	Node0x1dcc140 -> Node0x1dcc1b0;
	Node0x1dcb258 -> Node0x1dcc1b0;
	Node0x1dcc1b0 -> Node0x1dcc220;
	Node0x1dcb960 -> Node0x1dcc220;
	Node0x1dcc220 -> Node0x1dcc290;
	Node0x1dcba40 -> Node0x1dcc290;
	Node0x1dcc290 -> Node0x1dcc300;
	Node0x1dcbab0 -> Node0x1dcc300;
	Node0x1dcc300 -> Node0x1dcc370;
	Node0x1dcbb90 -> Node0x1dcc370;
	Node0x1dcc370 -> Node0x1dcc3e0;
	Node0x1dcb730 -> Node0x1dcc3e0;
	Node0x1dcc3e0 -> Node0x1dcc450;
	Node0x1dcbdc0 -> Node0x1dcc450;
	Node0x1dcc450 -> Node0x1dcc4c0;
	Node0x1dcbce0 -> Node0x1dcc4c0;
	Node0x1dcc4c0 -> Node0x1dcc530;
	Node0x1dcbf10 -> Node0x1dcc530;
	Node0x1dcb490 -> Node0x1dcc5a0;
	Node0x1dcc530 -> Node0x1dcc5a0;
	Node0x1dcc5a0 -> Node0x1d688b8;
	Node0x1d688b8 -> Node0x1dcc630;
	Node0x1dc9968 -> Node0x1dcc8d8;
	Node0x1dc97f8 -> Node0x1dcca38;
	Node0x1dc9638 -> Node0x1dccb48;
	Node0x1dc9128 -> Node0x1dccc58;
}
