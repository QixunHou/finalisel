digraph "DFG for'crackme' function" {
	Node0x1dc71f0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1dc7290[shape=record, label="  %6 = mul i32 %5, -2"];
	Node0x1dc7330[shape=record, label="  %7 = or i32 %6, 1"];
	Node0x1dc73a0[shape=record, label="  %8 = xor i32 %3, -1"];
	Node0x1dc7410[shape=record, label="  %9 = add i32 %7, %8"];
	Node0x1dc7480[shape=record, label="  %10 = xor i32 %5, %1"];
	Node0x1dc74f0[shape=record, label="  %11 = shl i32 %2, 1"];
	Node0x1dc7560[shape=record, label="  %12 = and i32 %5, %1"];
	Node0x1dc75d0[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x1dc7670[shape=record, label="  %14 = shl i32 %13, 2"];
	Node0x1dc7710[shape=record, label="  %15 = xor i32 %14, -4"];
	Node0x1dc7780[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x1dc77f0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1dc7890[shape=record, label="  %18 = xor i32 %1, 2147483647"];
	Node0x1dc7900[shape=record, label="  %19 = and i32 %18, %2"];
	Node0x1dc7970[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x1dc79e0[shape=record, label="  %21 = xor i32 %0, -1"];
	Node0x1dc7a50[shape=record, label="  %22 = or i32 %21, %3"];
	Node0x1dc7ac0[shape=record, label="  %23 = or i32 %8, %0"];
	Node0x1dc7b60[shape=record, label="  %24 = mul i32 %0, 5"];
	Node0x1dc7bd0[shape=record, label="  %25 = xor i32 %21, %3"];
	Node0x1dc7c40[shape=record, label="  %26 = and i32 %3, %0"];
	Node0x1dc7cb0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x1dc7d20[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x1dc7d90[shape=record, label="  %29 = xor i32 %22, -1"];
	Node0x1dc7e30[shape=record, label="  %30 = mul i32 %29, -3"];
	Node0x1dc7ea0[shape=record, label="  %31 = add i32 %12, %17"];
	Node0x1dc7f10[shape=record, label="  %32 = add i32 %31, %26"];
	Node0x1dc81c0[shape=record, label="  %33 = mul i32 %32, -7"];
	Node0x1dc8230[shape=record, label="  %34 = xor i32 %11, -1"];
	Node0x1dc82a0[shape=record, label="  %35 = add i32 %24, %34"];
	Node0x1dc8310[shape=record, label="  %36 = add i32 %35, %10"];
	Node0x1dc8380[shape=record, label="  %37 = add i32 %36, %12"];
	Node0x1dc83f0[shape=record, label="  %38 = add i32 %37, %13"];
	Node0x1dc8460[shape=record, label="  %39 = sub i32 %38, %3"];
	Node0x1dc84d0[shape=record, label="  %40 = sub i32 %39, %20"];
	Node0x1dc8540[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x1dc85b0[shape=record, label="  %42 = sub i32 %41, %23"];
	Node0x1dc8620[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x1dc8690[shape=record, label="  %44 = add i32 %43, %15"];
	Node0x1dc8700[shape=record, label="  %45 = add i32 %44, %30"];
	Node0x1dc8770[shape=record, label="  %46 = sub i32 %45, %28"];
	Node0x1dc87e0[shape=record, label="  %47 = add i32 %46, %33"];
	Node0x1dc8850[shape=record, label="  %48 = icmp eq i32 %9, %47"];
	Node0x1d67268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1dc8cf0[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x1dc8d40[shape=record, label="  ret void"];
	Node0x1dc71f0 -> Node0x1dc7290;
	Node0x1dc7290 -> Node0x1dc7330;
	Node0x1dc7330 -> Node0x1dc73a0;
	Node0x1dc73a0 -> Node0x1dc7410;
	Node0x1dc7410 -> Node0x1dc7480;
	Node0x1dc7480 -> Node0x1dc74f0;
	Node0x1dc74f0 -> Node0x1dc7560;
	Node0x1dc7560 -> Node0x1dc75d0;
	Node0x1dc75d0 -> Node0x1dc7670;
	Node0x1dc7670 -> Node0x1dc7710;
	Node0x1dc7710 -> Node0x1dc7780;
	Node0x1dc7780 -> Node0x1dc77f0;
	Node0x1dc77f0 -> Node0x1dc7890;
	Node0x1dc7890 -> Node0x1dc7900;
	Node0x1dc7900 -> Node0x1dc7970;
	Node0x1dc7970 -> Node0x1dc79e0;
	Node0x1dc79e0 -> Node0x1dc7a50;
	Node0x1dc7a50 -> Node0x1dc7ac0;
	Node0x1dc7ac0 -> Node0x1dc7b60;
	Node0x1dc7b60 -> Node0x1dc7bd0;
	Node0x1dc7bd0 -> Node0x1dc7c40;
	Node0x1dc7c40 -> Node0x1dc7cb0;
	Node0x1dc7cb0 -> Node0x1dc7d20;
	Node0x1dc7d20 -> Node0x1dc7d90;
	Node0x1dc7d90 -> Node0x1dc7e30;
	Node0x1dc7e30 -> Node0x1dc7ea0;
	Node0x1dc7ea0 -> Node0x1dc7f10;
	Node0x1dc7f10 -> Node0x1dc81c0;
	Node0x1dc81c0 -> Node0x1dc8230;
	Node0x1dc8230 -> Node0x1dc82a0;
	Node0x1dc82a0 -> Node0x1dc8310;
	Node0x1dc8310 -> Node0x1dc8380;
	Node0x1dc8380 -> Node0x1dc83f0;
	Node0x1dc83f0 -> Node0x1dc8460;
	Node0x1dc8460 -> Node0x1dc84d0;
	Node0x1dc84d0 -> Node0x1dc8540;
	Node0x1dc8540 -> Node0x1dc85b0;
	Node0x1dc85b0 -> Node0x1dc8620;
	Node0x1dc8620 -> Node0x1dc8690;
	Node0x1dc8690 -> Node0x1dc8700;
	Node0x1dc8700 -> Node0x1dc8770;
	Node0x1dc8770 -> Node0x1dc87e0;
	Node0x1dc87e0 -> Node0x1dc8850;
	Node0x1dc8850 -> Node0x1d67268;
	Node0x1d67268 -> Node0x1dc8cf0;
	Node0x1dc8cf0 -> Node0x1dc8d40;
edge [color=red]
	Node0x1dc71f0 -> Node0x1dc7290;
	Node0x1dc7290 -> Node0x1dc7330;
	Node0x1dc7330 -> Node0x1dc7410;
	Node0x1dc73a0 -> Node0x1dc7410;
	Node0x1dc71f0 -> Node0x1dc7480;
	Node0x1dc71f0 -> Node0x1dc7560;
	Node0x1dc75d0 -> Node0x1dc7670;
	Node0x1dc7670 -> Node0x1dc7710;
	Node0x1dc7780 -> Node0x1dc77f0;
	Node0x1dc7890 -> Node0x1dc7900;
	Node0x1dc7900 -> Node0x1dc7970;
	Node0x1dc79e0 -> Node0x1dc7a50;
	Node0x1dc73a0 -> Node0x1dc7ac0;
	Node0x1dc79e0 -> Node0x1dc7bd0;
	Node0x1dc7c40 -> Node0x1dc7cb0;
	Node0x1dc7cb0 -> Node0x1dc7d20;
	Node0x1dc7a50 -> Node0x1dc7d90;
	Node0x1dc7d90 -> Node0x1dc7e30;
	Node0x1dc7560 -> Node0x1dc7ea0;
	Node0x1dc77f0 -> Node0x1dc7ea0;
	Node0x1dc7ea0 -> Node0x1dc7f10;
	Node0x1dc7c40 -> Node0x1dc7f10;
	Node0x1dc7f10 -> Node0x1dc81c0;
	Node0x1dc74f0 -> Node0x1dc8230;
	Node0x1dc7b60 -> Node0x1dc82a0;
	Node0x1dc8230 -> Node0x1dc82a0;
	Node0x1dc82a0 -> Node0x1dc8310;
	Node0x1dc7480 -> Node0x1dc8310;
	Node0x1dc8310 -> Node0x1dc8380;
	Node0x1dc7560 -> Node0x1dc8380;
	Node0x1dc8380 -> Node0x1dc83f0;
	Node0x1dc75d0 -> Node0x1dc83f0;
	Node0x1dc83f0 -> Node0x1dc8460;
	Node0x1dc8460 -> Node0x1dc84d0;
	Node0x1dc7970 -> Node0x1dc84d0;
	Node0x1dc84d0 -> Node0x1dc8540;
	Node0x1dc7a50 -> Node0x1dc8540;
	Node0x1dc8540 -> Node0x1dc85b0;
	Node0x1dc7ac0 -> Node0x1dc85b0;
	Node0x1dc85b0 -> Node0x1dc8620;
	Node0x1dc7bd0 -> Node0x1dc8620;
	Node0x1dc8620 -> Node0x1dc8690;
	Node0x1dc7710 -> Node0x1dc8690;
	Node0x1dc8690 -> Node0x1dc8700;
	Node0x1dc7e30 -> Node0x1dc8700;
	Node0x1dc8700 -> Node0x1dc8770;
	Node0x1dc7d20 -> Node0x1dc8770;
	Node0x1dc8770 -> Node0x1dc87e0;
	Node0x1dc81c0 -> Node0x1dc87e0;
	Node0x1dc7410 -> Node0x1dc8850;
	Node0x1dc87e0 -> Node0x1dc8850;
	Node0x1dc8850 -> Node0x1d67268;
	Node0x1d67268 -> Node0x1dc8cf0;
}
