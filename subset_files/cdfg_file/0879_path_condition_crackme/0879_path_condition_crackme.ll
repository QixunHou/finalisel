; ModuleID = '../.././c_source_file/0879_path_condition_crackme.c'
source_filename = "../.././c_source_file/0879_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %0
  %8 = xor i32 %2, -1
  %9 = and i32 %8, %1
  %10 = or i32 %7, %9
  %11 = xor i32 %2, %1
  %12 = xor i32 %11, -1
  %13 = xor i32 %12, %0
  %14 = shl i32 %13, 2
  %15 = sub i32 %14, %10
  %16 = xor i32 %4, -1
  %17 = xor i32 %5, %3
  %18 = xor i32 %17, -1
  %19 = or i32 %18, %16
  %20 = add i32 %15, %19
  %21 = and i32 %2, %1
  %22 = and i32 %21, %0
  %23 = xor i32 %0, -1
  %24 = or i32 %2, %1
  %25 = and i32 %24, %23
  %26 = or i32 %22, %25
  %27 = or i32 %2, %0
  %28 = xor i32 %27, %1
  %29 = and i32 %1, %0
  %30 = or i32 %29, %2
  %31 = xor i32 %1, -1
  %32 = and i32 %31, %2
  %33 = and i32 %32, %0
  %34 = or i32 %31, %2
  %35 = and i32 %34, %23
  %36 = xor i32 %35, -1
  %37 = xor i32 %33, %36
  %38 = or i32 %8, %0
  %39 = xor i32 %38, %1
  %40 = xor i32 %29, -1
  %41 = and i32 %12, %40
  %42 = and i32 %31, %0
  %43 = or i32 %21, %42
  %44 = xor i32 %9, -1
  %45 = xor i32 %42, %44
  %46 = or i32 %31, %0
  %47 = and i32 %46, %2
  %48 = xor i32 %1, %0
  %49 = or i32 %7, %48
  %50 = or i32 %42, %8
  %51 = xor i32 %7, -1
  %52 = and i32 %51, %31
  %53 = xor i32 %46, -1
  %54 = xor i32 %53, %2
  %55 = or i32 %1, %0
  %56 = xor i32 %55, -1
  %57 = or i32 %8, %56
  %58 = shl i32 %57, 1
  %59 = or i32 %44, %23
  %60 = and i32 %44, %23
  %61 = and i32 %40, %2
  %62 = xor i32 %2, %0
  %63 = xor i32 %62, -1
  %64 = and i32 %63, %40
  %65 = and i32 %62, %48
  %66 = xor i32 %21, -1
  %67 = xor i32 %42, %66
  %68 = xor i32 %7, %46
  %69 = shl i32 %68, 1
  %70 = or i32 %29, %63
  %71 = and i32 %32, %23
  %72 = and i32 %34, %0
  %73 = xor i32 %72, 2147483647
  %74 = xor i32 %73, %71
  %75 = shl i32 %74, 1
  %76 = xor i32 %48, -1
  %77 = and i32 %63, %76
  %78 = and i32 %48, %63
  %79 = xor i32 %27, -1
  %80 = xor i32 %79, %1
  %81 = or i32 %29, %79
  %82 = shl i32 %81, 1
  %83 = xor i32 %11, %0
  %84 = xor i32 %24, %0
  %85 = xor i32 %84, -1
  %86 = xor i32 %22, %85
  %87 = and i32 %63, %31
  %88 = and i32 %8, %0
  %89 = xor i32 %88, %1
  %90 = and i32 %11, %0
  %91 = xor i32 %38, %29
  %92 = or i32 %66, %23
  %93 = or i32 %21, %0
  %94 = xor i32 %83, -1
  %95 = xor i32 %33, %94
  %96 = xor i32 %42, -1
  %97 = and i32 %96, %2
  %98 = add i32 %62, 1
  %99 = or i32 %48, %8
  %100 = or i32 %71, %72
  %101 = shl i32 %100, 1
  %102 = xor i32 %24, -1
  %103 = or i32 %102, %0
  %104 = and i32 %55, %8
  %105 = xor i32 %40, %2
  %106 = or i32 %8, %1
  %107 = xor i32 %106, %29
  %108 = or i32 %9, %23
  %109 = or i32 %88, %48
  %110 = add i32 %24, 1
  %111 = or i32 %48, %63
  %112 = xor i32 %29, %2
  %113 = or i32 %21, %23
  %114 = or i32 %11, %23
  %115 = xor i32 %71, %114
  %116 = and i32 %62, %31
  %117 = or i32 %22, %84
  %118 = and i32 %44, %0
  %119 = and i32 %106, %23
  %120 = and i32 %8, %40
  %121 = or i32 %7, %76
  %122 = and i32 %55, %12
  %123 = add i32 %27, 1
  %124 = or i32 %88, %1
  %125 = and i32 %46, %63
  %126 = and i32 %62, %76
  %127 = or i32 %106, %23
  %128 = and i32 %11, %23
  %129 = xor i32 %106, -1
  %130 = or i32 %29, %129
  %131 = or i32 %62, %48
  %132 = or i32 %29, %8
  %133 = or i32 %29, %12
  %134 = xor i32 %21, %0
  %135 = xor i32 %114, -1
  %136 = or i32 %71, %135
  %137 = xor i32 %7, %24
  %138 = or i32 %8, %76
  %139 = or i32 %79, %1
  %140 = or i32 %63, %31
  %141 = and i32 %48, %51
  %142 = and i32 %21, %23
  %143 = xor i32 %90, -1
  %144 = xor i32 %142, %143
  %145 = xor i32 %66, %0
  %146 = add i32 %42, 1
  %147 = or i32 %11, %42
  %148 = or i32 %9, %0
  %149 = shl i32 %148, 1
  %150 = xor i32 %9, %0
  %151 = or i32 %63, %1
  %152 = or i32 %11, %56
  %153 = or i32 %76, %2
  %154 = xor i32 %38, -1
  %155 = add i32 %38, 1
  %156 = or i32 %42, %12
  %157 = or i32 %88, %21
  %158 = xor i32 %34, %0
  %159 = xor i32 %158, 2147483647
  %160 = xor i32 %159, %33
  %161 = xor i32 %27, %29
  %162 = and i32 %27, %76
  %163 = shl i32 %106, 1
  %164 = xor i32 %88, %106
  %165 = and i32 %55, %63
  %166 = and i32 %48, %8
  %167 = shl i32 %166, 1
  %168 = or i32 %79, %31
  %169 = and i32 %11, %40
  %170 = or i32 %12, %56
  %171 = and i32 %62, %40
  %172 = or i32 %129, %0
  %173 = xor i32 %102, %0
  %174 = or i32 %62, %31
  %175 = and i32 %27, %31
  %176 = or i32 %62, %29
  %177 = and i32 %12, %23
  %178 = or i32 %7, %1
  %179 = and i32 %38, %48
  %180 = shl i32 %179, 1
  %181 = or i32 %7, %53
  %182 = xor i32 %88, -1
  %183 = and i32 %48, %182
  %184 = xor i32 %88, %66
  %185 = and i32 %38, %76
  %186 = shl i32 %185, 1
  %187 = or i32 %42, %63
  %188 = xor i32 %51, %1
  %189 = and i32 %27, %1
  %190 = add i32 %46, 1
  %191 = or i32 %142, %90
  %192 = xor i32 %56, %2
  %193 = and i32 %63, %1
  %194 = and i32 %38, %31
  %195 = and i32 %8, %96
  %196 = and i32 %66, %23
  %197 = or i32 %11, %0
  %198 = xor i32 %33, %197
  %199 = and i32 %62, %46
  %200 = xor i32 %7, %55
  %201 = or i32 %9, %42
  %202 = or i32 %56, %2
  %203 = and i32 %27, %48
  %204 = or i32 %22, %94
  %205 = or i32 %79, %76
  %206 = and i32 %11, %96
  %207 = or i32 %154, %1
  %208 = and i32 %55, %2
  %209 = or i32 %33, %158
  %210 = or i32 %48, %154
  %211 = or i32 %154, %76
  %212 = or i32 %88, %129
  %213 = and i32 %62, %1
  %214 = and i32 %66, %0
  %215 = xor i32 %46, %2
  %216 = xor i32 %154, %1
  %217 = and i32 %182, %31
  %218 = and i32 %62, %96
  %219 = xor i32 %197, 2147483647
  %220 = or i32 %219, %33
  %221 = shl i32 %220, 1
  %222 = or i32 %53, %2
  %223 = add i32 %21, 1
  %224 = or i32 %106, %0
  %225 = xor i32 %42, %2
  %226 = or i32 %22, %128
  %227 = and i32 %11, %46
  %228 = and i32 %24, %0
  %229 = or i32 %88, %31
  %230 = or i32 %63, %76
  %231 = shl i32 %230, 1
  %232 = and i32 %46, %8
  %233 = xor i32 %7, %1
  %234 = and i32 %11, %55
  %235 = xor i32 %7, %44
  %236 = or i32 %142, %228
  %237 = and i32 %51, %1
  %238 = shl i32 %237, 1
  %239 = or i32 %33, %35
  %240 = xor i32 %25, 2147483647
  %241 = xor i32 %240, %22
  %242 = shl i32 %241, 1
  %243 = and i32 %182, %76
  %244 = xor i32 %106, %0
  %245 = or i32 %63, %56
  %246 = shl i32 %245, 1
  %247 = xor i32 %22, %83
  %248 = or i32 %7, %56
  %249 = or i32 %62, %1
  %250 = or i32 %24, %23
  %251 = or i32 %129, %23
  %252 = or i32 %24, %0
  %253 = or i32 %12, %0
  %254 = and i32 %62, %55
  %255 = or i32 %62, %76
  %256 = or i32 %29, %154
  %257 = and i32 %51, %76
  %258 = or i32 %88, %76
  %259 = or i32 %48, %79
  %260 = add i32 %29, 1
  %261 = or i32 %154, %31
  %262 = shl i32 %261, 1
  %263 = and i32 %63, %96
  %264 = or i32 %12, %53
  %265 = and i32 %12, %96
  %266 = xor i32 %55, %2
  %267 = shl i32 %266, 1
  %268 = or i32 %8, %53
  %269 = shl i32 %268, 1
  %270 = and i32 %182, %1
  %271 = and i32 %102, %23
  %272 = and i32 %9, %23
  %273 = and i32 %102, %0
  %274 = mul i32 %273, -22
  %275 = and i32 %9, %0
  %276 = and i32 %129, %23
  %277 = mul i32 %276, -13
  %278 = and i32 %129, %0
  %279 = mul i32 %22, -18
  %280 = xor i32 %5, -1
  %281 = or i32 %280, %4
  %282 = xor i32 %281, -1
  %283 = xor i32 %282, %3
  %284 = xor i32 %3, -1
  %285 = and i32 %284, %4
  %286 = xor i32 %285, -1
  %287 = xor i32 %286, %5
  %288 = and i32 %5, %4
  %289 = xor i32 %4, %3
  %290 = or i32 %288, %289
  %291 = or i32 %4, %3
  %292 = and i32 %291, %5
  %293 = xor i32 %289, -1
  %294 = or i32 %282, %293
  %295 = or i32 %17, %285
  %296 = and i32 %280, %3
  %297 = xor i32 %296, -1
  %298 = xor i32 %288, %297
  %299 = and i32 %4, %3
  %300 = or i32 %280, %3
  %301 = xor i32 %300, %299
  %302 = xor i32 %5, %4
  %303 = or i32 %302, %299
  %304 = or i32 %5, %3
  %305 = and i32 %304, %4
  %306 = shl i32 %18, 1
  %307 = or i32 %296, %4
  %308 = or i32 %280, %293
  %309 = and i32 %300, %16
  %310 = and i32 %280, %4
  %311 = or i32 %310, %3
  %312 = xor i32 %304, -1
  %313 = xor i32 %312, %4
  %314 = xor i32 %291, -1
  %315 = add i32 %291, 1
  %316 = and i32 %5, %3
  %317 = and i32 %316, %4
  %318 = and i32 %17, %16
  %319 = xor i32 %317, -1
  %320 = xor i32 %318, %319
  %321 = or i32 %299, %280
  %322 = xor i32 %299, -1
  %323 = and i32 %280, %322
  %324 = or i32 %299, %282
  %325 = and i32 %284, %5
  %326 = and i32 %325, %16
  %327 = or i32 %17, %16
  %328 = xor i32 %326, %327
  %329 = xor i32 %310, -1
  %330 = and i32 %329, %284
  %331 = or i32 %284, %4
  %332 = xor i32 %331, -1
  %333 = or i32 %302, %332
  %334 = or i32 %280, %314
  %335 = add i32 %4, 1
  %336 = xor i32 %302, -1
  %337 = or i32 %336, %3
  %338 = or i32 %297, %4
  %339 = or i32 %5, %4
  %340 = xor i32 %339, -1
  %341 = or i32 %340, %284
  %342 = xor i32 %288, -1
  %343 = or i32 %302, %289
  %344 = or i32 %310, %284
  %345 = or i32 %316, %16
  %346 = and i32 %325, %4
  %347 = xor i32 %17, %4
  %348 = or i32 %346, %347
  %349 = or i32 %336, %314
  %350 = xor i32 %340, %3
  %351 = and i32 %336, %293
  %352 = or i32 %340, %3
  %353 = or i32 %310, %289
  %354 = and i32 %300, %4
  %355 = xor i32 %310, %3
  %356 = or i32 %285, %336
  %357 = and i32 %18, %16
  %358 = or i32 %282, %284
  %359 = or i32 %317, %318
  %360 = and i32 %289, %5
  %361 = or i32 %288, %314
  %362 = or i32 %302, %285
  %363 = or i32 %336, %293
  %364 = xor i32 %322, %5
  %365 = xor i32 %316, -1
  %366 = and i32 %365, %16
  %367 = and i32 %339, %289
  %368 = xor i32 %314, %5
  %369 = and i32 %302, %322
  %370 = or i32 %302, %293
  %371 = xor i32 %281, %3
  %372 = and i32 %302, %3
  %373 = or i32 %304, %16
  %374 = xor i32 %310, %365
  %375 = and i32 %280, %293
  %376 = or i32 %18, %314
  %377 = xor i32 %332, %5
  %378 = xor i32 %288, %331
  %379 = and i32 %336, %286
  %380 = xor i32 %281, %299
  %381 = shl i32 %291, 1
  %382 = xor i32 %317, %347
  %383 = or i32 %332, %5
  %384 = and i32 %331, %280
  %385 = or i32 %284, %5
  %386 = and i32 %385, %16
  %387 = or i32 %346, %386
  %388 = shl i32 %387, 1
  %389 = and i32 %342, %3
  %390 = shl i32 %389, 1
  %391 = xor i32 %291, %5
  %392 = shl i32 %331, 2
  %393 = and i32 %302, %289
  %394 = and i32 %342, %284
  %395 = and i32 %329, %3
  %396 = shl i32 %395, 1
  %397 = and i32 %281, %284
  %398 = shl i32 %397, 1
  %399 = or i32 %299, %18
  %400 = and i32 %304, %16
  %401 = and i32 %293, %5
  %402 = shl i32 %401, 1
  %403 = or i32 %310, %293
  %404 = and i32 %302, %286
  %405 = and i32 %291, %18
  %406 = and i32 %281, %289
  %407 = or i32 %288, %312
  %408 = and i32 %302, %331
  %409 = and i32 %302, %293
  %410 = or i32 %289, %5
  %411 = or i32 %312, %4
  %412 = or i32 %297, %16
  %413 = xor i32 %386, -1
  %414 = xor i32 %346, %413
  %415 = or i32 %300, %16
  %416 = or i32 %288, %293
  %417 = xor i32 %285, %5
  %418 = or i32 %296, %16
  %419 = and i32 %329, %293
  %420 = or i32 %316, %285
  %421 = shl i32 %304, 1
  %422 = and i32 %339, %284
  %423 = or i32 %288, %296
  %424 = add i32 %296, 1
  %425 = or i32 %302, %284
  %426 = or i32 %314, %5
  %427 = or i32 %285, %18
  %428 = and i32 %336, %284
  %429 = or i32 %17, %4
  %430 = xor i32 %346, %429
  %431 = and i32 %302, %284
  %432 = xor i32 %304, %16
  %433 = xor i32 %432, %317
  %434 = and i32 %312, %16
  %435 = and i32 %296, %16
  %436 = and i32 %312, %4
  %437 = mul i32 %436, -7
  %438 = and i32 %296, %4
  %439 = shl i32 %438, 2
  %440 = xor i32 %300, -1
  %441 = and i32 %440, %16
  %442 = and i32 %316, %16
  %443 = and i32 %440, %4
  %444 = mul i32 %443, -10
  %445 = mul i32 %317, -6
  %446 = add i32 %215, %51
  %447 = add i32 %446, %138
  %448 = add i32 %447, %132
  %449 = add i32 %448, %47
  %450 = add i32 %449, %243
  %451 = add i32 %450, %214
  %452 = add i32 %451, %212
  %453 = add i32 %452, %188
  %454 = add i32 %453, %151
  %455 = add i32 %454, %126
  %456 = add i32 %455, %116
  %457 = add i32 %456, %107
  %458 = add i32 %457, %92
  %459 = add i32 %458, %247
  %460 = add i32 %459, %26
  %461 = add i32 %460, %417
  %462 = add i32 %461, %364
  %463 = add i32 %462, %321
  %464 = add i32 %463, %160
  %465 = add i32 %464, %428
  %466 = add i32 %465, %422
  %467 = add i32 %466, %418
  %468 = add i32 %467, %411
  %469 = add i32 %468, %405
  %470 = add i32 %469, %324
  %471 = add i32 %470, %295
  %472 = add i32 %471, %348
  %473 = shl i32 %472, 1
  %474 = sub i32 %260, %278
  %475 = add i32 %474, %271
  %476 = add i32 %475, %199
  %477 = add i32 %476, %196
  %478 = add i32 %477, %191
  %479 = add i32 %478, %292
  %480 = sub i32 %479, %441
  %481 = add i32 %480, %442
  %482 = mul i32 %481, 3
  %483 = add i32 %12, %129
  %484 = add i32 %483, %142
  %485 = add i32 %484, %125
  %486 = add i32 %485, %300
  %487 = add i32 %486, %410
  %488 = add i32 %487, %435
  %489 = shl i32 %488, 2
  %490 = add i32 %252, %146
  %491 = add i32 %490, %194
  %492 = add i32 %491, %91
  %493 = sub i32 %492, %115
  %494 = sub i32 %493, %301
  %495 = sub i32 %494, %434
  %496 = mul i32 %495, 5
  %497 = sub i32 %23, %0
  %498 = add i32 %497, 2
  %499 = sub i32 %498, %48
  %500 = add i32 %499, %2
  %501 = add i32 %500, %190
  %502 = add i32 %501, %46
  %503 = add i32 %502, %76
  %504 = sub i32 %503, %29
  %505 = add i32 %504, %30
  %506 = sub i32 %505, %11
  %507 = sub i32 %506, %50
  %508 = sub i32 %507, %54
  %509 = add i32 %508, %27
  %510 = sub i32 %509, %61
  %511 = add i32 %510, %97
  %512 = add i32 %511, %98
  %513 = sub i32 %512, %99
  %514 = add i32 %513, %104
  %515 = sub i32 %514, %105
  %516 = add i32 %515, %110
  %517 = sub i32 %516, %112
  %518 = add i32 %517, %120
  %519 = add i32 %518, %123
  %520 = add i32 %519, %38
  %521 = add i32 %520, %44
  %522 = add i32 %521, %7
  %523 = add i32 %522, %153
  %524 = add i32 %523, %155
  %525 = sub i32 %524, %62
  %526 = sub i32 %525, %192
  %527 = add i32 %526, %195
  %528 = sub i32 %527, %202
  %529 = add i32 %528, %208
  %530 = sub i32 %529, %222
  %531 = add i32 %530, %223
  %532 = sub i32 %531, %225
  %533 = sub i32 %532, %232
  %534 = add i32 %533, %21
  %535 = add i32 %534, %88
  %536 = add i32 %535, %284
  %537 = sub i32 %536, %3
  %538 = add i32 %537, %28
  %539 = add i32 %538, %39
  %540 = sub i32 %539, %41
  %541 = sub i32 %540, %43
  %542 = add i32 %541, %45
  %543 = sub i32 %542, %49
  %544 = sub i32 %543, %52
  %545 = sub i32 %544, %58
  %546 = sub i32 %545, %59
  %547 = sub i32 %546, %60
  %548 = sub i32 %547, %64
  %549 = add i32 %548, %65
  %550 = add i32 %549, %67
  %551 = sub i32 %550, %70
  %552 = add i32 %551, %77
  %553 = add i32 %552, %78
  %554 = sub i32 %553, %80
  %555 = sub i32 %554, %83
  %556 = sub i32 %555, %87
  %557 = add i32 %556, %89
  %558 = add i32 %557, %90
  %559 = sub i32 %558, %93
  %560 = add i32 %559, %103
  %561 = add i32 %560, %108
  %562 = add i32 %561, %109
  %563 = sub i32 %562, %111
  %564 = add i32 %563, %113
  %565 = add i32 %564, %118
  %566 = add i32 %565, %119
  %567 = sub i32 %566, %121
  %568 = add i32 %567, %122
  %569 = sub i32 %568, %124
  %570 = add i32 %569, %127
  %571 = sub i32 %570, %128
  %572 = add i32 %571, %130
  %573 = add i32 %572, %131
  %574 = add i32 %573, %133
  %575 = add i32 %574, %134
  %576 = add i32 %575, %137
  %577 = add i32 %576, %139
  %578 = add i32 %577, %140
  %579 = add i32 %578, %141
  %580 = add i32 %579, %145
  %581 = add i32 %580, %147
  %582 = sub i32 %581, %150
  %583 = sub i32 %582, %152
  %584 = add i32 %583, %156
  %585 = sub i32 %584, %157
  %586 = add i32 %585, %161
  %587 = sub i32 %586, %162
  %588 = sub i32 %587, %163
  %589 = add i32 %588, %164
  %590 = sub i32 %589, %165
  %591 = sub i32 %590, %167
  %592 = sub i32 %591, %168
  %593 = add i32 %592, %169
  %594 = add i32 %593, %170
  %595 = sub i32 %594, %171
  %596 = sub i32 %595, %172
  %597 = add i32 %596, %173
  %598 = sub i32 %597, %174
  %599 = add i32 %598, %175
  %600 = sub i32 %599, %176
  %601 = sub i32 %600, %177
  %602 = add i32 %601, %114
  %603 = add i32 %602, %178
  %604 = sub i32 %603, %181
  %605 = add i32 %604, %183
  %606 = sub i32 %605, %184
  %607 = add i32 %606, %187
  %608 = add i32 %607, %189
  %609 = add i32 %608, %193
  %610 = add i32 %609, %200
  %611 = sub i32 %610, %201
  %612 = add i32 %611, %203
  %613 = add i32 %612, %205
  %614 = add i32 %613, %206
  %615 = sub i32 %614, %207
  %616 = sub i32 %615, %210
  %617 = sub i32 %616, %211
  %618 = sub i32 %617, %25
  %619 = add i32 %618, %213
  %620 = add i32 %619, %216
  %621 = sub i32 %620, %217
  %622 = add i32 %621, %218
  %623 = add i32 %622, %224
  %624 = add i32 %623, %227
  %625 = sub i32 %624, %228
  %626 = add i32 %625, %229
  %627 = sub i32 %626, %233
  %628 = add i32 %627, %234
  %629 = sub i32 %628, %235
  %630 = sub i32 %629, %244
  %631 = sub i32 %630, %248
  %632 = add i32 %631, %249
  %633 = sub i32 %632, %250
  %634 = add i32 %633, %251
  %635 = add i32 %634, %253
  %636 = sub i32 %635, %254
  %637 = sub i32 %636, %255
  %638 = add i32 %637, %256
  %639 = sub i32 %638, %257
  %640 = add i32 %639, %258
  %641 = sub i32 %640, %259
  %642 = add i32 %641, %263
  %643 = add i32 %642, %264
  %644 = sub i32 %643, %265
  %645 = sub i32 %644, %267
  %646 = sub i32 %645, %269
  %647 = sub i32 %646, %270
  %648 = add i32 %647, %272
  %649 = sub i32 %648, %275
  %650 = add i32 %649, %335
  %651 = add i32 %650, %4
  %652 = add i32 %651, %37
  %653 = sub i32 %652, %69
  %654 = sub i32 %653, %82
  %655 = add i32 %654, %86
  %656 = add i32 %655, %95
  %657 = add i32 %656, %117
  %658 = sub i32 %657, %136
  %659 = add i32 %658, %144
  %660 = sub i32 %659, %149
  %661 = sub i32 %660, %180
  %662 = sub i32 %661, %186
  %663 = sub i32 %662, %198
  %664 = add i32 %663, %204
  %665 = sub i32 %664, %209
  %666 = add i32 %665, %226
  %667 = sub i32 %666, %231
  %668 = sub i32 %667, %236
  %669 = sub i32 %668, %238
  %670 = sub i32 %669, %239
  %671 = sub i32 %670, %246
  %672 = sub i32 %671, %262
  %673 = add i32 %672, %274
  %674 = add i32 %673, %277
  %675 = add i32 %674, %279
  %676 = add i32 %675, %315
  %677 = sub i32 %676, %299
  %678 = add i32 %677, 1
  %679 = add i32 %678, %289
  %680 = sub i32 %679, %101
  %681 = add i32 %680, %287
  %682 = add i32 %681, %308
  %683 = sub i32 %682, %323
  %684 = sub i32 %683, %17
  %685 = add i32 %684, %334
  %686 = add i32 %685, %342
  %687 = add i32 %686, %340
  %688 = sub i32 %687, %360
  %689 = add i32 %688, %296
  %690 = add i32 %689, %312
  %691 = sub i32 %690, %368
  %692 = add i32 %691, %375
  %693 = add i32 %692, %377
  %694 = sub i32 %693, %310
  %695 = sub i32 %694, %281
  %696 = sub i32 %695, %381
  %697 = add i32 %696, %316
  %698 = sub i32 %697, %383
  %699 = sub i32 %698, %384
  %700 = sub i32 %699, %391
  %701 = sub i32 %700, %392
  %702 = add i32 %701, %424
  %703 = sub i32 %702, %426
  %704 = sub i32 %703, %75
  %705 = sub i32 %704, %221
  %706 = sub i32 %705, %242
  %707 = sub i32 %706, %283
  %708 = add i32 %707, %290
  %709 = add i32 %708, %294
  %710 = add i32 %709, %298
  %711 = sub i32 %710, %303
  %712 = add i32 %711, %305
  %713 = sub i32 %712, %306
  %714 = sub i32 %713, %307
  %715 = add i32 %714, %309
  %716 = add i32 %715, %311
  %717 = add i32 %716, %313
  %718 = add i32 %717, %330
  %719 = sub i32 %718, %333
  %720 = sub i32 %719, %337
  %721 = add i32 %720, %338
  %722 = sub i32 %721, %341
  %723 = add i32 %722, %343
  %724 = add i32 %723, %344
  %725 = sub i32 %724, %345
  %726 = sub i32 %725, %349
  %727 = sub i32 %726, %350
  %728 = add i32 %727, %351
  %729 = sub i32 %728, %352
  %730 = sub i32 %729, %353
  %731 = sub i32 %730, %354
  %732 = sub i32 %731, %355
  %733 = sub i32 %732, %356
  %734 = sub i32 %733, %357
  %735 = add i32 %734, %358
  %736 = sub i32 %735, %361
  %737 = add i32 %736, %362
  %738 = add i32 %737, %363
  %739 = sub i32 %738, %366
  %740 = add i32 %739, %367
  %741 = sub i32 %740, %369
  %742 = sub i32 %741, %370
  %743 = add i32 %742, %371
  %744 = add i32 %743, %372
  %745 = add i32 %744, %373
  %746 = add i32 %745, %374
  %747 = add i32 %746, %376
  %748 = sub i32 %747, %378
  %749 = add i32 %748, %379
  %750 = sub i32 %749, %380
  %751 = add i32 %750, %393
  %752 = add i32 %751, %394
  %753 = sub i32 %752, %399
  %754 = sub i32 %753, %400
  %755 = sub i32 %754, %402
  %756 = add i32 %755, %403
  %757 = sub i32 %756, %404
  %758 = sub i32 %757, %406
  %759 = add i32 %758, %407
  %760 = add i32 %759, %408
  %761 = sub i32 %760, %409
  %762 = sub i32 %761, %412
  %763 = sub i32 %762, %415
  %764 = add i32 %763, %416
  %765 = add i32 %764, %419
  %766 = sub i32 %765, %420
  %767 = sub i32 %766, %421
  %768 = sub i32 %767, %423
  %769 = sub i32 %768, %425
  %770 = add i32 %769, %427
  %771 = sub i32 %770, %431
  %772 = add i32 %771, %320
  %773 = add i32 %772, %328
  %774 = add i32 %773, %359
  %775 = sub i32 %774, %382
  %776 = sub i32 %775, %390
  %777 = sub i32 %776, %396
  %778 = sub i32 %777, %398
  %779 = sub i32 %778, %414
  %780 = add i32 %779, %430
  %781 = add i32 %780, %433
  %782 = add i32 %781, %437
  %783 = sub i32 %782, %439
  %784 = add i32 %783, %444
  %785 = add i32 %784, %445
  %786 = sub i32 %785, %388
  %787 = add i32 %786, %489
  %788 = add i32 %787, %496
  %789 = add i32 %788, %482
  %790 = add i32 %789, %473
  %791 = icmp eq i32 %20, %790
  %792 = select i1 %791, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %793 = tail call i32 @puts(i8* nonnull dereferenceable(1) %792)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
