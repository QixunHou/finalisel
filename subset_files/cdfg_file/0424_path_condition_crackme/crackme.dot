digraph "DFG for'crackme' function" {
	Node0xb3bdb0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xb3be20[shape=record, label="  %6 = and i32 %5, %1"];
	Node0xb3be90[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0xb3bf00[shape=record, label="  %8 = sub i32 %0, %6"];
	Node0xb3bf70[shape=record, label="  %9 = or i32 %3, %0"];
	Node0xb3bfe0[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0xb3c050[shape=record, label="  %11 = or i32 %2, %1"];
	Node0xb3c0f0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0xb3c160[shape=record, label="  %13 = xor i32 %2, %1"];
	Node0xb3c1d0[shape=record, label="  %14 = and i32 %2, %1"];
	Node0xb3c240[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0xb3c2e0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0xb3c350[shape=record, label="  %17 = or i32 %5, %1"];
	Node0xb3c3c0[shape=record, label="  %18 = xor i32 %12, -2"];
	Node0xb3c430[shape=record, label="  %19 = shl i32 %17, 1"];
	Node0xb3c4a0[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0xb3c510[shape=record, label="  %21 = and i32 %3, %0"];
	Node0xb3c580[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0xb3c5f0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0xb3c660[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0xb3c6d0[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0xb3c740[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0xb3c7b0[shape=record, label="  %27 = or i32 %7, %3"];
	Node0xb3c850[shape=record, label="  %28 = shl i32 %0, 2"];
	Node0xb3c8c0[shape=record, label="  %29 = xor i32 %9, -1"];
	Node0xb3c930[shape=record, label="  %30 = shl i32 %27, 2"];
	Node0xb3c9d0[shape=record, label="  %31 = xor i32 %30, -4"];
	Node0xb3ca40[shape=record, label="  %32 = and i32 %7, %3"];
	Node0xb3ccf0[shape=record, label="  %33 = mul i32 %32, -5"];
	Node0xb3cd90[shape=record, label="  %34 = mul i32 %21, -11"];
	Node0xb3ce00[shape=record, label="  %35 = add i32 %6, %29"];
	Node0xb3cea0[shape=record, label="  %36 = mul i32 %35, -3"];
	Node0xb3cf10[shape=record, label="  %37 = add i32 %13, %3"];
	Node0xb3cf80[shape=record, label="  %38 = add i32 %37, %27"];
	Node0xb3cff0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0xb3d060[shape=record, label="  %40 = add i32 %28, %2"];
	Node0xb3d0d0[shape=record, label="  %41 = add i32 %40, %17"];
	Node0xb3d140[shape=record, label="  %42 = add i32 %41, %14"];
	Node0xb3d1b0[shape=record, label="  %43 = sub i32 %42, %12"];
	Node0xb3d220[shape=record, label="  %44 = add i32 %43, %24"];
	Node0xb3d290[shape=record, label="  %45 = add i32 %44, %16"];
	Node0xb3d300[shape=record, label="  %46 = sub i32 %45, %18"];
	Node0xb3d370[shape=record, label="  %47 = sub i32 %46, %20"];
	Node0xb3d3e0[shape=record, label="  %48 = add i32 %47, %33"];
	Node0xb3d450[shape=record, label="  %49 = add i32 %48, %34"];
	Node0xb3d4c0[shape=record, label="  %50 = sub i32 %49, %23"];
	Node0xb3d530[shape=record, label="  %51 = add i32 %50, %26"];
	Node0xb3d5a0[shape=record, label="  %52 = sub i32 %51, %31"];
	Node0xb3d610[shape=record, label="  %53 = add i32 %52, %36"];
	Node0xb3d680[shape=record, label="  %54 = add i32 %53, %39"];
	Node0xb3d6f0[shape=record, label="  %55 = icmp eq i32 %10, %54"];
	Node0xadc268[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb3db90[shape=record, label="  %57 = tail call i32 @puts(i8* nonnull dereferenceable(1) %56)"];
	Node0xb3dbe0[shape=record, label="  ret void"];
	Node0xb3bdb0 -> Node0xb3be20;
	Node0xb3be20 -> Node0xb3be90;
	Node0xb3be90 -> Node0xb3bf00;
	Node0xb3bf00 -> Node0xb3bf70;
	Node0xb3bf70 -> Node0xb3bfe0;
	Node0xb3bfe0 -> Node0xb3c050;
	Node0xb3c050 -> Node0xb3c0f0;
	Node0xb3c0f0 -> Node0xb3c160;
	Node0xb3c160 -> Node0xb3c1d0;
	Node0xb3c1d0 -> Node0xb3c240;
	Node0xb3c240 -> Node0xb3c2e0;
	Node0xb3c2e0 -> Node0xb3c350;
	Node0xb3c350 -> Node0xb3c3c0;
	Node0xb3c3c0 -> Node0xb3c430;
	Node0xb3c430 -> Node0xb3c4a0;
	Node0xb3c4a0 -> Node0xb3c510;
	Node0xb3c510 -> Node0xb3c580;
	Node0xb3c580 -> Node0xb3c5f0;
	Node0xb3c5f0 -> Node0xb3c660;
	Node0xb3c660 -> Node0xb3c6d0;
	Node0xb3c6d0 -> Node0xb3c740;
	Node0xb3c740 -> Node0xb3c7b0;
	Node0xb3c7b0 -> Node0xb3c850;
	Node0xb3c850 -> Node0xb3c8c0;
	Node0xb3c8c0 -> Node0xb3c930;
	Node0xb3c930 -> Node0xb3c9d0;
	Node0xb3c9d0 -> Node0xb3ca40;
	Node0xb3ca40 -> Node0xb3ccf0;
	Node0xb3ccf0 -> Node0xb3cd90;
	Node0xb3cd90 -> Node0xb3ce00;
	Node0xb3ce00 -> Node0xb3cea0;
	Node0xb3cea0 -> Node0xb3cf10;
	Node0xb3cf10 -> Node0xb3cf80;
	Node0xb3cf80 -> Node0xb3cff0;
	Node0xb3cff0 -> Node0xb3d060;
	Node0xb3d060 -> Node0xb3d0d0;
	Node0xb3d0d0 -> Node0xb3d140;
	Node0xb3d140 -> Node0xb3d1b0;
	Node0xb3d1b0 -> Node0xb3d220;
	Node0xb3d220 -> Node0xb3d290;
	Node0xb3d290 -> Node0xb3d300;
	Node0xb3d300 -> Node0xb3d370;
	Node0xb3d370 -> Node0xb3d3e0;
	Node0xb3d3e0 -> Node0xb3d450;
	Node0xb3d450 -> Node0xb3d4c0;
	Node0xb3d4c0 -> Node0xb3d530;
	Node0xb3d530 -> Node0xb3d5a0;
	Node0xb3d5a0 -> Node0xb3d610;
	Node0xb3d610 -> Node0xb3d680;
	Node0xb3d680 -> Node0xb3d6f0;
	Node0xb3d6f0 -> Node0xadc268;
	Node0xadc268 -> Node0xb3db90;
	Node0xb3db90 -> Node0xb3dbe0;
edge [color=red]
	Node0xb3bdb0 -> Node0xb3be20;
	Node0xb3be20 -> Node0xb3bf00;
	Node0xb3bf00 -> Node0xb3bfe0;
	Node0xb3bf70 -> Node0xb3bfe0;
	Node0xb3c050 -> Node0xb3c0f0;
	Node0xb3c1d0 -> Node0xb3c240;
	Node0xb3c240 -> Node0xb3c2e0;
	Node0xb3bdb0 -> Node0xb3c350;
	Node0xb3c0f0 -> Node0xb3c3c0;
	Node0xb3c350 -> Node0xb3c430;
	Node0xb3c430 -> Node0xb3c4a0;
	Node0xb3c510 -> Node0xb3c580;
	Node0xb3c580 -> Node0xb3c5f0;
	Node0xb3c660 -> Node0xb3c6d0;
	Node0xb3c6d0 -> Node0xb3c740;
	Node0xb3be90 -> Node0xb3c7b0;
	Node0xb3bf70 -> Node0xb3c8c0;
	Node0xb3c7b0 -> Node0xb3c930;
	Node0xb3c930 -> Node0xb3c9d0;
	Node0xb3be90 -> Node0xb3ca40;
	Node0xb3ca40 -> Node0xb3ccf0;
	Node0xb3c510 -> Node0xb3cd90;
	Node0xb3be20 -> Node0xb3ce00;
	Node0xb3c8c0 -> Node0xb3ce00;
	Node0xb3ce00 -> Node0xb3cea0;
	Node0xb3c160 -> Node0xb3cf10;
	Node0xb3cf10 -> Node0xb3cf80;
	Node0xb3c7b0 -> Node0xb3cf80;
	Node0xb3cf80 -> Node0xb3cff0;
	Node0xb3c850 -> Node0xb3d060;
	Node0xb3d060 -> Node0xb3d0d0;
	Node0xb3c350 -> Node0xb3d0d0;
	Node0xb3d0d0 -> Node0xb3d140;
	Node0xb3c1d0 -> Node0xb3d140;
	Node0xb3d140 -> Node0xb3d1b0;
	Node0xb3c0f0 -> Node0xb3d1b0;
	Node0xb3d1b0 -> Node0xb3d220;
	Node0xb3c660 -> Node0xb3d220;
	Node0xb3d220 -> Node0xb3d290;
	Node0xb3c2e0 -> Node0xb3d290;
	Node0xb3d290 -> Node0xb3d300;
	Node0xb3c3c0 -> Node0xb3d300;
	Node0xb3d300 -> Node0xb3d370;
	Node0xb3c4a0 -> Node0xb3d370;
	Node0xb3d370 -> Node0xb3d3e0;
	Node0xb3ccf0 -> Node0xb3d3e0;
	Node0xb3d3e0 -> Node0xb3d450;
	Node0xb3cd90 -> Node0xb3d450;
	Node0xb3d450 -> Node0xb3d4c0;
	Node0xb3c5f0 -> Node0xb3d4c0;
	Node0xb3d4c0 -> Node0xb3d530;
	Node0xb3c740 -> Node0xb3d530;
	Node0xb3d530 -> Node0xb3d5a0;
	Node0xb3c9d0 -> Node0xb3d5a0;
	Node0xb3d5a0 -> Node0xb3d610;
	Node0xb3cea0 -> Node0xb3d610;
	Node0xb3d610 -> Node0xb3d680;
	Node0xb3cff0 -> Node0xb3d680;
	Node0xb3bfe0 -> Node0xb3d6f0;
	Node0xb3d680 -> Node0xb3d6f0;
	Node0xb3d6f0 -> Node0xadc268;
	Node0xadc268 -> Node0xb3db90;
}
