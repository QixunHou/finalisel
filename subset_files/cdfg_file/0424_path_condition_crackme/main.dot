digraph "DFG for'main' function" {
	Node0xb3dda8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb3de28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb3deb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb3df18[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xb3dfc8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xb3e3f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb3e4d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xb3e5d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb3e698[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xb3e748[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb3e808[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xb3e8b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb387d0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xb3eab8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb3fa28[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb40098[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb400f8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xb40208[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xb40468[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb405c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb406d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb407e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb408a8[shape=record, label="  ret i32 0"];
	Node0xb3dda8 -> Node0xb3de28;
	Node0xb3de28 -> Node0xb3deb8;
	Node0xb3deb8 -> Node0xb3df18;
	Node0xb3df18 -> Node0xb3dfc8;
	Node0xb3dfc8 -> Node0xb3e3f8;
	Node0xb3e3f8 -> Node0xb3e4d8;
	Node0xb3e4d8 -> Node0xb3e5d8;
	Node0xb3e5d8 -> Node0xb3e698;
	Node0xb3e698 -> Node0xb3e748;
	Node0xb3e748 -> Node0xb3e808;
	Node0xb3e808 -> Node0xb3e8b8;
	Node0xb3e8b8 -> Node0xb387d0;
	Node0xb387d0 -> Node0xb3eab8;
	Node0xb3eab8 -> Node0xb3fa28;
	Node0xb3fa28 -> Node0xb40098;
	Node0xb40098 -> Node0xb400f8;
	Node0xb400f8 -> Node0xb40208;
	Node0xb40208 -> Node0xb40468;
	Node0xb40468 -> Node0xb405c8;
	Node0xb405c8 -> Node0xb406d8;
	Node0xb406d8 -> Node0xb407e8;
	Node0xb407e8 -> Node0xb408a8;
edge [color=red]
	Node0xb3dda8 -> Node0xb3dfc8;
	Node0xb3dfc8 -> Node0xb3e3f8;
	Node0xb3de28 -> Node0xb3e4d8;
	Node0xb3e4d8 -> Node0xb3e5d8;
	Node0xb3deb8 -> Node0xb3e698;
	Node0xb3e698 -> Node0xb3e748;
	Node0xb3df18 -> Node0xb3e808;
	Node0xb3e808 -> Node0xb3e8b8;
	Node0xb3dda8 -> Node0xb387d0;
	Node0xb3de28 -> Node0xb387d0;
	Node0xb3deb8 -> Node0xb387d0;
	Node0xb3df18 -> Node0xb387d0;
	Node0xb3dda8 -> Node0xb3eab8;
	Node0xb3de28 -> Node0xb3fa28;
	Node0xb3deb8 -> Node0xb40098;
	Node0xb3df18 -> Node0xb400f8;
	Node0xb3eab8 -> Node0xb40208;
	Node0xb3fa28 -> Node0xb40208;
	Node0xb40098 -> Node0xb40208;
	Node0xb400f8 -> Node0xb40208;
	Node0xb3e808 -> Node0xb40468;
	Node0xb3e698 -> Node0xb405c8;
	Node0xb3e4d8 -> Node0xb406d8;
	Node0xb3dfc8 -> Node0xb407e8;
}
