; ModuleID = '../.././c_source_file/0099_path_condition_crackme.c'
source_filename = "../.././c_source_file/0099_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = xor i32 %2, -1
  %9 = and i32 %8, %0
  %10 = or i32 %9, %7
  %11 = or i32 %2, %0
  %12 = xor i32 %11, -1
  %13 = or i32 %12, %7
  %14 = shl i32 %13, 1
  %15 = add i32 %14, %10
  %16 = or i32 %4, %3
  %17 = xor i32 %5, %3
  %18 = xor i32 %17, -1
  %19 = and i32 %16, %18
  %20 = sub i32 %15, %19
  %21 = xor i32 %3, -1
  %22 = xor i32 %5, -1
  %23 = or i32 %22, %4
  %24 = and i32 %23, %21
  %25 = sub i32 %20, %24
  %26 = or i32 %7, %0
  %27 = xor i32 %26, -1
  %28 = and i32 %2, %0
  %29 = xor i32 %28, %1
  %30 = or i32 %1, %0
  %31 = and i32 %30, %2
  %32 = shl i32 %31, 1
  %33 = xor i32 %30, -1
  %34 = shl i32 %33, 1
  %35 = and i32 %8, %1
  %36 = xor i32 %35, %0
  %37 = and i32 %1, %0
  %38 = xor i32 %37, -1
  %39 = add i32 %37, 1
  %40 = xor i32 %1, %0
  %41 = xor i32 %40, -1
  %42 = add i32 %40, 1
  %43 = and i32 %2, %1
  %44 = and i32 %43, %0
  %45 = or i32 %2, %1
  %46 = xor i32 %45, %0
  %47 = xor i32 %44, -1
  %48 = xor i32 %46, %47
  %49 = or i32 %12, %1
  %50 = or i32 %8, %0
  %51 = xor i32 %50, -1
  %52 = or i32 %51, %1
  %53 = xor i32 %2, %1
  %54 = and i32 %53, %26
  %55 = and i32 %7, %0
  %56 = xor i32 %55, -1
  %57 = xor i32 %56, %2
  %58 = and i32 %7, %2
  %59 = and i32 %58, %0
  %60 = xor i32 %53, %0
  %61 = xor i32 %60, -1
  %62 = xor i32 %59, %61
  %63 = xor i32 %9, -1
  %64 = and i32 %40, %63
  %65 = xor i32 %2, %0
  %66 = and i32 %65, %40
  %67 = and i32 %65, %7
  %68 = xor i32 %28, -1
  %69 = and i32 %68, %41
  %70 = xor i32 %43, -1
  %71 = xor i32 %9, %70
  %72 = xor i32 %0, -1
  %73 = and i32 %53, %38
  %74 = and i32 %43, %72
  %75 = and i32 %53, %0
  %76 = xor i32 %74, -1
  %77 = xor i32 %75, %76
  %78 = or i32 %51, %7
  %79 = or i32 %65, %33
  %80 = and i32 %11, %1
  %81 = and i32 %26, %8
  %82 = xor i32 %65, -1
  %83 = or i32 %82, %41
  %84 = or i32 %8, %1
  %85 = xor i32 %84, -1
  %86 = xor i32 %85, %0
  %87 = and i32 %11, %41
  %88 = shl i32 %87, 1
  %89 = and i32 %65, %30
  %90 = or i32 %28, %41
  %91 = or i32 %45, %72
  %92 = or i32 %55, %82
  %93 = or i32 %37, %8
  %94 = xor i32 %11, %37
  %95 = add i32 %50, 1
  %96 = and i32 %45, %0
  %97 = xor i32 %96, %76
  %98 = or i32 %35, %72
  %99 = shl i32 %98, 1
  %100 = and i32 %70, %72
  %101 = xor i32 %55, %2
  %102 = and i32 %40, %68
  %103 = or i32 %37, %2
  %104 = and i32 %26, %82
  %105 = xor i32 %12, %1
  %106 = and i32 %26, %2
  %107 = and i32 %58, %72
  %108 = or i32 %53, %72
  %109 = xor i32 %107, %108
  %110 = or i32 %65, %27
  %111 = add i32 %11, 1
  %112 = or i32 %8, %27
  %113 = or i32 %35, %55
  %114 = and i32 %30, %8
  %115 = shl i32 %114, 1
  %116 = or i32 %28, %1
  %117 = or i32 %28, %27
  %118 = xor i32 %28, %26
  %119 = shl i32 %118, 1
  %120 = xor i32 %35, -1
  %121 = xor i32 %28, %120
  %122 = and i32 %41, %2
  %123 = xor i32 %55, %120
  %124 = shl i32 %123, 1
  %125 = or i32 %65, %1
  %126 = and i32 %50, %40
  %127 = shl i32 %126, 1
  %128 = or i32 %44, %61
  %129 = shl i32 %128, 1
  %130 = or i32 %65, %41
  %131 = or i32 %43, %72
  %132 = or i32 %45, %0
  %133 = or i32 %9, %85
  %134 = xor i32 %53, -1
  %135 = or i32 %37, %134
  %136 = xor i32 %11, %1
  %137 = or i32 %53, %33
  %138 = and i32 %63, %1
  %139 = shl i32 %138, 1
  %140 = xor i32 %37, %2
  %141 = shl i32 %140, 1
  %142 = or i32 %53, %0
  %143 = xor i32 %59, %142
  %144 = add i32 %84, 1
  %145 = xor i32 %45, -1
  %146 = or i32 %28, %145
  %147 = and i32 %134, %56
  %148 = and i32 %134, %72
  %149 = and i32 %82, %41
  %150 = or i32 %120, %72
  %151 = shl i32 %96, 2
  %152 = or i32 %40, %8
  %153 = xor i32 %120, %0
  %154 = or i32 %7, %2
  %155 = xor i32 %154, %0
  %156 = or i32 %59, %155
  %157 = xor i32 %28, %30
  %158 = and i32 %65, %38
  %159 = or i32 %9, %40
  %160 = and i32 %53, %72
  %161 = or i32 %44, %160
  %162 = and i32 %40, %2
  %163 = or i32 %84, %72
  %164 = and i32 %8, %41
  %165 = shl i32 %164, 1
  %166 = or i32 %28, %7
  %167 = and i32 %154, %0
  %168 = xor i32 %167, -1
  %169 = xor i32 %107, %168
  %170 = or i32 %74, %96
  %171 = or i32 %82, %7
  %172 = and i32 %30, %134
  %173 = and i32 %53, %56
  %174 = or i32 %70, %0
  %175 = or i32 %37, %12
  %176 = or i32 %43, %55
  %177 = or i32 %40, %2
  %178 = shl i32 %177, 1
  %179 = and i32 %8, %38
  %180 = shl i32 %179, 1
  %181 = and i32 %134, %0
  %182 = xor i32 %70, %0
  %183 = and i32 %65, %1
  %184 = and i32 %154, %72
  %185 = xor i32 %184, -1
  %186 = xor i32 %59, %185
  %187 = xor i32 %155, 2147483647
  %188 = xor i32 %187, %59
  %189 = or i32 %53, %27
  %190 = or i32 %65, %55
  %191 = or i32 %28, %40
  %192 = xor i32 %30, %2
  %193 = shl i32 %192, 1
  %194 = xor i32 %50, %1
  %195 = or i32 %145, %72
  %196 = shl i32 %195, 1
  %197 = and i32 %50, %1
  %198 = or i32 %55, %2
  %199 = or i32 %65, %40
  %200 = or i32 %51, %41
  %201 = or i32 %82, %27
  %202 = or i32 %55, %8
  %203 = shl i32 %202, 1
  %204 = and i32 %45, %72
  %205 = shl i32 %204, 2
  %206 = or i32 %84, %0
  %207 = and i32 %40, %8
  %208 = and i32 %82, %1
  %209 = or i32 %9, %41
  %210 = xor i32 %142, -1
  %211 = or i32 %59, %210
  %212 = or i32 %59, %184
  %213 = or i32 %8, %33
  %214 = xor i32 %45, %37
  %215 = shl i32 %1, 1
  %216 = shl i32 %75, 1
  %217 = and i32 %30, %82
  %218 = or i32 %44, %46
  %219 = or i32 %55, %134
  %220 = xor i32 %63, %1
  %221 = or i32 %134, %27
  %222 = or i32 %43, %0
  %223 = xor i32 %108, 1073741823
  %224 = or i32 %223, %107
  %225 = or i32 %28, %35
  %226 = xor i32 %51, %1
  %227 = xor i32 %26, %2
  %228 = add i32 %55, 1
  %229 = and i32 %50, %7
  %230 = and i32 %50, %41
  %231 = xor i32 %145, %0
  %232 = or i32 %82, %33
  %233 = and i32 %68, %1
  %234 = or i32 %8, %41
  %235 = xor i32 %28, %45
  %236 = and i32 %63, %41
  %237 = xor i32 %84, %37
  %238 = shl i32 %134, 1
  %239 = xor i32 %160, %47
  %240 = or i32 %12, %41
  %241 = or i32 %134, %33
  %242 = and i32 %8, %56
  %243 = or i32 %35, %0
  %244 = or i32 %44, %204
  %245 = add i32 %28, 1
  %246 = or i32 %37, %85
  %247 = or i32 %65, %7
  %248 = or i32 %59, %60
  %249 = shl i32 %248, 1
  %250 = and i32 %68, %7
  %251 = xor i32 %204, %47
  %252 = xor i32 %9, %1
  %253 = and i32 %65, %26
  %254 = xor i32 %44, %60
  %255 = or i32 %107, %167
  %256 = and i32 %82, %56
  %257 = or i32 %37, %145
  %258 = and i32 %84, %72
  %259 = or i32 %134, %72
  %260 = and i32 %26, %134
  %261 = or i32 %74, %75
  %262 = and i32 %82, %7
  %263 = shl i32 %262, 1
  %264 = and i32 %63, %7
  %265 = or i32 %134, %0
  %266 = add i32 %35, 1
  %267 = and i32 %70, %0
  %268 = xor i32 %50, %37
  %269 = and i32 %65, %41
  %270 = or i32 %53, %55
  %271 = or i32 %37, %82
  %272 = or i32 %27, %2
  %273 = and i32 %145, %72
  %274 = mul i32 %273, -7
  %275 = and i32 %145, %0
  %276 = mul i32 %275, -15
  %277 = and i32 %85, %72
  %278 = shl i32 %277, 4
  %279 = xor i32 %5, %4
  %280 = xor i32 %279, -1
  %281 = or i32 %5, %4
  %282 = and i32 %281, %3
  %283 = and i32 %279, %16
  %284 = and i32 %23, %3
  %285 = shl i32 %284, 1
  %286 = and i32 %16, %5
  %287 = xor i32 %4, %3
  %288 = xor i32 %287, -1
  %289 = and i32 %280, %288
  %290 = xor i32 %16, -1
  %291 = or i32 %279, %290
  %292 = and i32 %4, %3
  %293 = or i32 %22, %3
  %294 = xor i32 %293, %292
  %295 = xor i32 %292, -1
  %296 = and i32 %22, %295
  %297 = xor i32 %4, -1
  %298 = and i32 %5, %3
  %299 = and i32 %298, %297
  %300 = or i32 %5, %3
  %301 = and i32 %300, %4
  %302 = or i32 %299, %301
  %303 = and i32 %5, %4
  %304 = or i32 %303, %287
  %305 = or i32 %287, %5
  %306 = and i32 %22, %4
  %307 = or i32 %306, %287
  %308 = xor i32 %281, -1
  %309 = xor i32 %301, 2147483647
  %310 = xor i32 %309, %299
  %311 = or i32 %21, %4
  %312 = xor i32 %311, -1
  %313 = xor i32 %312, %5
  %314 = or i32 %17, %4
  %315 = shl i32 %314, 1
  %316 = and i32 %21, %4
  %317 = xor i32 %316, -1
  %318 = and i32 %317, %5
  %319 = shl i32 %318, 1
  %320 = xor i32 %295, %5
  %321 = shl i32 %320, 1
  %322 = xor i32 %17, %4
  %323 = or i32 %280, %312
  %324 = and i32 %300, %297
  %325 = or i32 %293, %297
  %326 = or i32 %279, %312
  %327 = or i32 %287, %308
  %328 = and i32 %22, %288
  %329 = xor i32 %300, -1
  %330 = or i32 %329, %4
  %331 = shl i32 %330, 1
  %332 = and i32 %279, %288
  %333 = xor i32 %18, %4
  %334 = or i32 %292, %308
  %335 = xor i32 %306, -1
  %336 = and i32 %335, %21
  %337 = or i32 %17, %290
  %338 = or i32 %308, %21
  %339 = or i32 %298, %297
  %340 = and i32 %293, %4
  %341 = and i32 %298, %4
  %342 = xor i32 %300, %4
  %343 = or i32 %341, %342
  %344 = and i32 %21, %5
  %345 = and i32 %344, %4
  %346 = xor i32 %314, -1
  %347 = or i32 %345, %346
  %348 = xor i32 %303, %3
  %349 = and i32 %279, %295
  %350 = and i32 %18, %317
  %351 = or i32 %17, %297
  %352 = or i32 %280, %290
  %353 = or i32 %298, %4
  %354 = and i32 %279, %311
  %355 = and i32 %281, %287
  %356 = or i32 %303, %3
  %357 = or i32 %292, %5
  %358 = and i32 %344, %297
  %359 = or i32 %21, %5
  %360 = and i32 %359, %4
  %361 = xor i32 %360, -1
  %362 = xor i32 %358, %361
  %363 = xor i32 %298, -1
  %364 = or i32 %363, %297
  %365 = xor i32 %23, %292
  %366 = xor i32 %292, %5
  %367 = xor i32 %293, %4
  %368 = xor i32 %341, %322
  %369 = or i32 %17, %316
  %370 = xor i32 %351, -1
  %371 = or i32 %358, %370
  %372 = or i32 %329, %297
  %373 = shl i32 %372, 1
  %374 = xor i32 %23, -1
  %375 = xor i32 %374, %3
  %376 = and i32 %17, %16
  %377 = xor i32 %16, %5
  %378 = or i32 %279, %292
  %379 = or i32 %312, %5
  %380 = xor i32 %359, %4
  %381 = xor i32 %345, -1
  %382 = xor i32 %380, %381
  %383 = xor i32 %303, -1
  %384 = and i32 %383, %3
  %385 = and i32 %22, %3
  %386 = xor i32 %385, -1
  %387 = or i32 %386, %4
  %388 = shl i32 %387, 1
  %389 = xor i32 %358, %351
  %390 = xor i32 %311, %5
  %391 = or i32 %385, %316
  %392 = shl i32 %391, 1
  %393 = and i32 %17, %4
  %394 = or i32 %299, %393
  %395 = and i32 %335, %288
  %396 = xor i32 %316, %386
  %397 = xor i32 %385, %4
  %398 = or i32 %300, %297
  %399 = or i32 %374, %288
  %400 = and i32 %17, %295
  %401 = and i32 %23, %287
  %402 = or i32 %316, %280
  %403 = xor i32 %306, %363
  %404 = or i32 %303, %21
  %405 = or i32 %385, %4
  %406 = xor i32 %322, -1
  %407 = or i32 %341, %406
  %408 = or i32 %18, %4
  %409 = and i32 %363, %4
  %410 = shl i32 %385, 1
  %411 = xor i32 %293, -1
  %412 = or i32 %306, %411
  %413 = and i32 %279, %287
  %414 = shl i32 %413, 1
  %415 = xor i32 %303, %311
  %416 = or i32 %22, %312
  %417 = and i32 %18, %295
  %418 = add i32 %17, 1
  %419 = or i32 %18, %312
  %420 = xor i32 %341, -1
  %421 = xor i32 %342, %420
  %422 = or i32 %292, %374
  %423 = and i32 %293, %297
  %424 = and i32 %280, %317
  %425 = xor i32 %303, %300
  %426 = shl i32 %425, 2
  %427 = and i32 %280, %21
  %428 = or i32 %374, %3
  %429 = or i32 %411, %4
  %430 = or i32 %303, %385
  %431 = and i32 %16, %22
  %432 = xor i32 %345, %314
  %433 = or i32 %280, %288
  %434 = or i32 %411, %297
  %435 = xor i32 %23, %3
  %436 = and i32 %311, %18
  %437 = shl i32 %311, 1
  %438 = or i32 %306, %3
  %439 = xor i32 %386, %4
  %440 = shl i32 %411, 1
  %441 = and i32 %287, %22
  %442 = shl i32 %312, 1
  %443 = and i32 %16, %280
  %444 = or i32 %298, %316
  %445 = or i32 %292, %22
  %446 = or i32 %316, %18
  %447 = or i32 %279, %3
  %448 = xor i32 %316, %363
  %449 = and i32 %287, %5
  %450 = add i32 %16, 1
  %451 = and i32 %22, %317
  %452 = shl i32 %451, 1
  %453 = and i32 %279, %3
  %454 = xor i32 %306, %293
  %455 = or i32 %374, %21
  %456 = shl i32 %455, 1
  %457 = or i32 %279, %288
  %458 = or i32 %308, %3
  %459 = or i32 %22, %288
  %460 = shl i32 %459, 1
  %461 = xor i32 %300, %292
  %462 = or i32 %306, %298
  %463 = and i32 %279, %317
  %464 = or i32 %17, %312
  %465 = shl i32 %464, 1
  %466 = and i32 %18, %297
  %467 = or i32 %300, %4
  %468 = xor i32 %308, %3
  %469 = shl i32 %468, 1
  %470 = and i32 %281, %21
  %471 = and i32 %295, %5
  %472 = or i32 %292, %411
  %473 = or i32 %306, %21
  %474 = or i32 %345, %380
  %475 = xor i32 %303, %386
  %476 = or i32 %306, %288
  %477 = shl i32 %476, 1
  %478 = and i32 %383, %288
  %479 = or i32 %303, %329
  %480 = or i32 %292, %18
  %481 = and i32 %280, %3
  %482 = and i32 %335, %3
  %483 = shl i32 %293, 1
  %484 = or i32 %22, %290
  %485 = shl i32 %484, 1
  %486 = and i32 %359, %297
  %487 = or i32 %345, %486
  %488 = and i32 %17, %297
  %489 = xor i32 %488, %420
  %490 = xor i32 %345, %406
  %491 = xor i32 %306, %3
  %492 = or i32 %316, %5
  %493 = or i32 %303, %288
  %494 = xor i32 %281, %3
  %495 = xor i32 %383, %3
  %496 = or i32 %280, %21
  %497 = shl i32 %496, 1
  %498 = or i32 %292, %329
  %499 = shl i32 %498, 1
  %500 = and i32 %287, %383
  %501 = and i32 %288, %5
  %502 = xor i32 %393, -1
  %503 = xor i32 %299, %502
  %504 = or i32 %279, %21
  %505 = and i32 %311, %22
  %506 = or i32 %386, %297
  %507 = or i32 %308, %288
  %508 = and i32 %287, %280
  %509 = or i32 %316, %22
  %510 = shl i32 %509, 1
  %511 = xor i32 %486, %381
  %512 = and i32 %23, %288
  %513 = or i32 %293, %4
  %514 = or i32 %341, %488
  %515 = or i32 %290, %5
  %516 = and i32 %311, %280
  %517 = and i32 %17, %311
  %518 = or i32 %341, %324
  %519 = or i32 %279, %316
  %520 = and i32 %281, %288
  %521 = xor i32 %317, %5
  %522 = shl i32 %521, 1
  %523 = and i32 %18, %4
  %524 = and i32 %329, %297
  %525 = and i32 %385, %297
  %526 = and i32 %329, %4
  %527 = mul i32 %526, 13
  %528 = and i32 %385, %4
  %529 = mul i32 %299, -17
  %530 = and i32 %411, %4
  %531 = mul i32 %530, -12
  %532 = add i32 %30, -1
  %533 = add i32 %532, %145
  %534 = add i32 %533, %198
  %535 = add i32 %534, %57
  %536 = add i32 %535, %267
  %537 = add i32 %536, %250
  %538 = add i32 %537, %226
  %539 = add i32 %538, %190
  %540 = add i32 %539, %182
  %541 = add i32 %540, %137
  %542 = add i32 %541, %102
  %543 = add i32 %542, %92
  %544 = add i32 %543, %89
  %545 = add i32 %544, %261
  %546 = add i32 %545, %143
  %547 = add i32 %546, %492
  %548 = add i32 %547, %300
  %549 = add i32 %548, %308
  %550 = add i32 %549, %296
  %551 = add i32 %550, %188
  %552 = add i32 %551, %516
  %553 = add i32 %552, %473
  %554 = add i32 %553, %462
  %555 = add i32 %554, %453
  %556 = add i32 %555, %417
  %557 = add i32 %556, %376
  %558 = add i32 %557, %353
  %559 = add i32 %558, %352
  %560 = add i32 %559, %338
  %561 = add i32 %560, %332
  %562 = add i32 %561, %326
  %563 = add i32 %562, %325
  %564 = add i32 %563, %518
  %565 = add i32 %564, %514
  %566 = add i32 %565, %368
  %567 = add i32 %566, %310
  %568 = shl i32 %567, 1
  %569 = sub i32 %229, %235
  %570 = sub i32 %569, %172
  %571 = sub i32 %570, %136
  %572 = add i32 %571, %110
  %573 = add i32 %572, %450
  %574 = add i32 %573, %218
  %575 = add i32 %574, %357
  %576 = add i32 %575, %280
  %577 = add i32 %576, %524
  %578 = mul i32 %577, 5
  %579 = sub i32 %74, %153
  %580 = sub i32 %579, %279
  %581 = sub i32 %580, %23
  %582 = add i32 %581, %448
  %583 = add i32 %582, %504
  %584 = sub i32 %583, %433
  %585 = mul i32 %584, 3
  %586 = sub i32 %528, %525
  %587 = mul i32 %586, 10
  %588 = sub i32 %341, %44
  %589 = mul i32 %588, 6
  %590 = mul i32 %35, 9
  %591 = add i32 %166, -1
  %592 = add i32 %591, %148
  %593 = add i32 %592, %147
  %594 = add i32 %593, %224
  %595 = add i32 %594, %488
  %596 = add i32 %595, %398
  %597 = add i32 %596, %490
  %598 = shl i32 %597, 2
  %599 = sub i32 %0, %1
  %600 = sub i32 %599, %2
  %601 = add i32 %600, %39
  %602 = add i32 %601, %42
  %603 = add i32 %602, %8
  %604 = sub i32 %603, %215
  %605 = add i32 %604, %228
  %606 = add i32 %605, %37
  %607 = sub i32 %606, %40
  %608 = sub i32 %607, %34
  %609 = add i32 %608, %50
  %610 = add i32 %609, %81
  %611 = sub i32 %610, %93
  %612 = add i32 %611, %95
  %613 = sub i32 %612, %101
  %614 = add i32 %613, %103
  %615 = sub i32 %614, %106
  %616 = add i32 %615, %111
  %617 = add i32 %616, %112
  %618 = add i32 %617, %122
  %619 = sub i32 %618, %45
  %620 = add i32 %619, %144
  %621 = add i32 %620, %152
  %622 = add i32 %621, %11
  %623 = sub i32 %622, %162
  %624 = sub i32 %623, %53
  %625 = add i32 %624, %207
  %626 = sub i32 %625, %213
  %627 = add i32 %626, %227
  %628 = sub i32 %627, %234
  %629 = add i32 %628, %84
  %630 = sub i32 %629, %9
  %631 = add i32 %630, %242
  %632 = add i32 %631, %245
  %633 = add i32 %632, %266
  %634 = sub i32 %633, %272
  %635 = sub i32 %634, %3
  %636 = add i32 %635, %29
  %637 = sub i32 %636, %32
  %638 = add i32 %637, %36
  %639 = add i32 %638, %49
  %640 = add i32 %639, %52
  %641 = sub i32 %640, %54
  %642 = add i32 %641, %64
  %643 = sub i32 %642, %66
  %644 = sub i32 %643, %67
  %645 = add i32 %644, %69
  %646 = add i32 %645, %71
  %647 = add i32 %646, %44
  %648 = sub i32 %647, %73
  %649 = sub i32 %648, %78
  %650 = add i32 %649, %79
  %651 = sub i32 %650, %80
  %652 = sub i32 %651, %83
  %653 = sub i32 %652, %86
  %654 = add i32 %653, %90
  %655 = add i32 %654, %91
  %656 = add i32 %655, %94
  %657 = sub i32 %656, %100
  %658 = sub i32 %657, %104
  %659 = add i32 %658, %105
  %660 = sub i32 %659, %113
  %661 = sub i32 %660, %115
  %662 = add i32 %661, %116
  %663 = sub i32 %662, %117
  %664 = add i32 %663, %121
  %665 = sub i32 %664, %125
  %666 = sub i32 %665, %130
  %667 = sub i32 %666, %131
  %668 = sub i32 %667, %132
  %669 = add i32 %668, %133
  %670 = add i32 %669, %135
  %671 = sub i32 %670, %141
  %672 = add i32 %671, %146
  %673 = sub i32 %672, %60
  %674 = sub i32 %673, %149
  %675 = sub i32 %674, %150
  %676 = add i32 %675, %157
  %677 = sub i32 %676, %158
  %678 = sub i32 %677, %159
  %679 = sub i32 %678, %163
  %680 = sub i32 %679, %165
  %681 = add i32 %680, %171
  %682 = add i32 %681, %173
  %683 = add i32 %682, %174
  %684 = sub i32 %683, %175
  %685 = add i32 %684, %176
  %686 = sub i32 %685, %178
  %687 = sub i32 %686, %180
  %688 = add i32 %687, %181
  %689 = add i32 %688, %183
  %690 = add i32 %689, %189
  %691 = sub i32 %690, %191
  %692 = sub i32 %691, %193
  %693 = add i32 %692, %194
  %694 = add i32 %693, %142
  %695 = add i32 %694, %197
  %696 = add i32 %695, %199
  %697 = add i32 %696, %200
  %698 = sub i32 %697, %201
  %699 = sub i32 %698, %203
  %700 = sub i32 %699, %206
  %701 = sub i32 %700, %208
  %702 = sub i32 %701, %209
  %703 = add i32 %702, %214
  %704 = add i32 %703, %217
  %705 = add i32 %704, %219
  %706 = sub i32 %705, %220
  %707 = add i32 %706, %221
  %708 = sub i32 %707, %222
  %709 = add i32 %708, %225
  %710 = add i32 %709, %230
  %711 = sub i32 %710, %231
  %712 = add i32 %711, %232
  %713 = sub i32 %712, %233
  %714 = sub i32 %713, %236
  %715 = add i32 %714, %237
  %716 = sub i32 %715, %238
  %717 = add i32 %716, %240
  %718 = add i32 %717, %241
  %719 = sub i32 %718, %243
  %720 = sub i32 %719, %108
  %721 = sub i32 %720, %246
  %722 = add i32 %721, %247
  %723 = add i32 %722, %252
  %724 = sub i32 %723, %253
  %725 = add i32 %724, %256
  %726 = sub i32 %725, %46
  %727 = sub i32 %726, %257
  %728 = sub i32 %727, %258
  %729 = add i32 %728, %259
  %730 = sub i32 %729, %260
  %731 = sub i32 %730, %264
  %732 = sub i32 %731, %265
  %733 = add i32 %732, %268
  %734 = sub i32 %733, %269
  %735 = sub i32 %734, %270
  %736 = add i32 %735, %160
  %737 = sub i32 %736, %271
  %738 = sub i32 %737, %48
  %739 = sub i32 %738, %62
  %740 = add i32 %739, %77
  %741 = sub i32 %740, %88
  %742 = sub i32 %741, %97
  %743 = sub i32 %742, %99
  %744 = add i32 %743, %109
  %745 = sub i32 %744, %119
  %746 = sub i32 %745, %124
  %747 = sub i32 %746, %127
  %748 = sub i32 %747, %139
  %749 = sub i32 %748, %151
  %750 = add i32 %749, %156
  %751 = add i32 %750, %161
  %752 = sub i32 %751, %169
  %753 = add i32 %752, %170
  %754 = sub i32 %753, %186
  %755 = sub i32 %754, %196
  %756 = sub i32 %755, %205
  %757 = add i32 %756, %211
  %758 = add i32 %757, %212
  %759 = sub i32 %758, %216
  %760 = sub i32 %759, %239
  %761 = sub i32 %760, %244
  %762 = add i32 %761, %251
  %763 = sub i32 %762, %254
  %764 = add i32 %763, %255
  %765 = sub i32 %764, %263
  %766 = add i32 %765, %274
  %767 = add i32 %766, %276
  %768 = add i32 %767, %278
  %769 = sub i32 %768, %5
  %770 = add i32 %769, %22
  %771 = sub i32 %770, %129
  %772 = sub i32 %771, %249
  %773 = add i32 %772, %286
  %774 = sub i32 %773, %305
  %775 = add i32 %774, %281
  %776 = add i32 %775, %313
  %777 = sub i32 %776, %328
  %778 = add i32 %777, %366
  %779 = sub i32 %778, %377
  %780 = add i32 %779, %379
  %781 = sub i32 %780, %390
  %782 = add i32 %781, %329
  %783 = add i32 %782, %306
  %784 = add i32 %783, %363
  %785 = add i32 %784, %416
  %786 = add i32 %785, %418
  %787 = sub i32 %786, %431
  %788 = sub i32 %787, %437
  %789 = add i32 %788, %441
  %790 = sub i32 %789, %442
  %791 = sub i32 %790, %303
  %792 = sub i32 %791, %445
  %793 = add i32 %792, %449
  %794 = sub i32 %793, %17
  %795 = sub i32 %794, %298
  %796 = sub i32 %795, %471
  %797 = add i32 %796, %386
  %798 = sub i32 %797, %501
  %799 = add i32 %798, %505
  %800 = sub i32 %799, %515
  %801 = add i32 %800, %590
  %802 = add i32 %801, %282
  %803 = sub i32 %802, %283
  %804 = sub i32 %803, %289
  %805 = add i32 %804, %291
  %806 = add i32 %805, %294
  %807 = add i32 %806, %304
  %808 = sub i32 %807, %307
  %809 = sub i32 %808, %319
  %810 = sub i32 %809, %321
  %811 = add i32 %810, %322
  %812 = sub i32 %811, %323
  %813 = sub i32 %812, %324
  %814 = sub i32 %813, %327
  %815 = sub i32 %814, %333
  %816 = sub i32 %815, %334
  %817 = add i32 %816, %336
  %818 = sub i32 %817, %337
  %819 = add i32 %818, %339
  %820 = sub i32 %819, %340
  %821 = add i32 %820, %348
  %822 = sub i32 %821, %349
  %823 = add i32 %822, %350
  %824 = add i32 %823, %351
  %825 = sub i32 %824, %354
  %826 = add i32 %825, %355
  %827 = add i32 %826, %356
  %828 = add i32 %827, %364
  %829 = sub i32 %828, %365
  %830 = add i32 %829, %367
  %831 = sub i32 %830, %369
  %832 = sub i32 %831, %375
  %833 = sub i32 %832, %378
  %834 = add i32 %833, %301
  %835 = add i32 %834, %384
  %836 = sub i32 %835, %395
  %837 = sub i32 %836, %396
  %838 = sub i32 %837, %397
  %839 = sub i32 %838, %399
  %840 = add i32 %839, %400
  %841 = add i32 %840, %401
  %842 = add i32 %841, %402
  %843 = sub i32 %842, %403
  %844 = add i32 %843, %404
  %845 = add i32 %844, %405
  %846 = add i32 %845, %408
  %847 = add i32 %846, %409
  %848 = sub i32 %847, %410
  %849 = sub i32 %848, %412
  %850 = sub i32 %849, %415
  %851 = sub i32 %850, %419
  %852 = sub i32 %851, %422
  %853 = add i32 %852, %423
  %854 = add i32 %853, %424
  %855 = add i32 %854, %427
  %856 = sub i32 %855, %428
  %857 = sub i32 %856, %429
  %858 = add i32 %857, %430
  %859 = add i32 %858, %434
  %860 = sub i32 %859, %435
  %861 = sub i32 %860, %436
  %862 = add i32 %861, %438
  %863 = add i32 %862, %439
  %864 = sub i32 %863, %440
  %865 = sub i32 %864, %443
  %866 = add i32 %865, %444
  %867 = sub i32 %866, %393
  %868 = sub i32 %867, %446
  %869 = add i32 %868, %447
  %870 = sub i32 %869, %452
  %871 = sub i32 %870, %454
  %872 = sub i32 %871, %457
  %873 = sub i32 %872, %458
  %874 = sub i32 %873, %460
  %875 = add i32 %874, %461
  %876 = add i32 %875, %463
  %877 = add i32 %876, %466
  %878 = sub i32 %877, %467
  %879 = sub i32 %878, %470
  %880 = sub i32 %879, %472
  %881 = sub i32 %880, %475
  %882 = add i32 %881, %478
  %883 = sub i32 %882, %479
  %884 = sub i32 %883, %480
  %885 = add i32 %884, %481
  %886 = sub i32 %885, %482
  %887 = sub i32 %886, %483
  %888 = sub i32 %887, %485
  %889 = sub i32 %888, %491
  %890 = sub i32 %889, %493
  %891 = add i32 %890, %494
  %892 = add i32 %891, %495
  %893 = add i32 %892, %500
  %894 = sub i32 %893, %506
  %895 = add i32 %894, %507
  %896 = sub i32 %895, %508
  %897 = sub i32 %896, %510
  %898 = sub i32 %897, %512
  %899 = add i32 %898, %513
  %900 = sub i32 %899, %517
  %901 = sub i32 %900, %519
  %902 = add i32 %901, %520
  %903 = sub i32 %902, %522
  %904 = sub i32 %903, %523
  %905 = sub i32 %904, %285
  %906 = add i32 %905, %302
  %907 = sub i32 %906, %315
  %908 = sub i32 %907, %331
  %909 = add i32 %908, %343
  %910 = sub i32 %909, %347
  %911 = add i32 %910, %362
  %912 = add i32 %911, %371
  %913 = sub i32 %912, %373
  %914 = add i32 %913, %382
  %915 = sub i32 %914, %388
  %916 = add i32 %915, %389
  %917 = sub i32 %916, %392
  %918 = add i32 %917, %394
  %919 = add i32 %918, %407
  %920 = sub i32 %919, %414
  %921 = sub i32 %920, %421
  %922 = sub i32 %921, %426
  %923 = sub i32 %922, %432
  %924 = sub i32 %923, %456
  %925 = sub i32 %924, %465
  %926 = sub i32 %925, %469
  %927 = add i32 %926, %474
  %928 = sub i32 %927, %477
  %929 = add i32 %928, %487
  %930 = sub i32 %929, %489
  %931 = sub i32 %930, %497
  %932 = sub i32 %931, %499
  %933 = sub i32 %932, %503
  %934 = add i32 %933, %511
  %935 = add i32 %934, %527
  %936 = add i32 %935, %529
  %937 = add i32 %936, %531
  %938 = add i32 %937, %587
  %939 = add i32 %938, %589
  %940 = add i32 %939, %585
  %941 = add i32 %940, %598
  %942 = add i32 %941, %578
  %943 = add i32 %942, %568
  %944 = icmp eq i32 %25, %943
  %945 = select i1 %944, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %946 = tail call i32 @puts(i8* nonnull dereferenceable(1) %945)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
