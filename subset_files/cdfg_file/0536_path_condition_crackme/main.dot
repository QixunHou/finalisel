digraph "DFG for'main' function" {
	Node0x8dece8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x8ded68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x8dedf8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x8dee58[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x8def08[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x8df338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8df418[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x8df518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8df5d8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x8df688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x8df748[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x8df7f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x8d9b70[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x8df9f8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x8e0968[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x8e0fd8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x8e1038[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x8e10b0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x8e1120[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0x8e1190[shape=record, label="  %16 = mul i32 %15, 5"];
	Node0x8e1200[shape=record, label="  %17 = add i32 %16, %14"];
	Node0x8e1270[shape=record, label="  %18 = or i32 %12, %11"];
	Node0x8e12e0[shape=record, label="  %19 = mul i32 %18, -2"];
	Node0x8e1350[shape=record, label="  %20 = and i32 %12, %11"];
	Node0x8e13c0[shape=record, label="  %21 = or i32 %19, 1"];
	Node0x8e1430[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0x8e14a0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x8e1510[shape=record, label="  %24 = and i32 %11, %22"];
	Node0x8e1580[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x8e15f0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x8e1660[shape=record, label="  %27 = xor i32 %14, -1"];
	Node0x8e16d0[shape=record, label="  %28 = shl i32 %18, 2"];
	Node0x8e1740[shape=record, label="  %29 = xor i32 %28, -4"];
	Node0x8e17b0[shape=record, label="  %30 = xor i32 %11, -1"];
	Node0x8e1820[shape=record, label="  %31 = and i32 %12, %30"];
	Node0x8e1890[shape=record, label="  %32 = xor i32 %10, -1"];
	Node0x8e1900[shape=record, label="  %33 = and i32 %13, %32"];
	Node0x8e1970[shape=record, label="  %34 = xor i32 %33, -1"];
	Node0x8e19e0[shape=record, label="  %35 = or i32 %13, %32"];
	Node0x8e1a50[shape=record, label="  %36 = or i32 %13, %10"];
	Node0x8e1ac0[shape=record, label="  %37 = xor i32 %35, -1"];
	Node0x8e1b30[shape=record, label="  %38 = add i32 %24, %11"];
	Node0x8e1ba0[shape=record, label="  %39 = add i32 %38, %37"];
	Node0x8e1c10[shape=record, label="  %40 = mul i32 %39, 3"];
	Node0x8e1c80[shape=record, label="  %41 = add i32 %33, %31"];
	Node0x8e1cf0[shape=record, label="  %42 = mul i32 %41, 6"];
	Node0x8e1d60[shape=record, label="  %43 = sub i32 %20, %23"];
	Node0x8e1dd0[shape=record, label="  %44 = add i32 %43, %27"];
	Node0x8e1e40[shape=record, label="  %45 = sub i32 %44, %13"];
	Node0x8e1eb0[shape=record, label="  %46 = add i32 %45, %34"];
	Node0x8e1f20[shape=record, label="  %47 = sub i32 %46, %35"];
	Node0x8e1f90[shape=record, label="  %48 = add i32 %47, %36"];
	Node0x8e2000[shape=record, label="  %49 = add i32 %48, %21"];
	Node0x8e2070[shape=record, label="  %50 = sub i32 %49, %26"];
	Node0x8e20e0[shape=record, label="  %51 = add i32 %50, %29"];
	Node0x8e2150[shape=record, label="  %52 = add i32 %51, %42"];
	Node0x8e21c0[shape=record, label="  %53 = add i32 %52, %40"];
	Node0x8e2230[shape=record, label="  %54 = icmp eq i32 %17, %53"];
	Node0x87e8b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8e22c0[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x8e2568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x8e26c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x8e27d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8e28e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8e29a8[shape=record, label="  ret i32 0"];
	Node0x8dece8 -> Node0x8ded68;
	Node0x8ded68 -> Node0x8dedf8;
	Node0x8dedf8 -> Node0x8dee58;
	Node0x8dee58 -> Node0x8def08;
	Node0x8def08 -> Node0x8df338;
	Node0x8df338 -> Node0x8df418;
	Node0x8df418 -> Node0x8df518;
	Node0x8df518 -> Node0x8df5d8;
	Node0x8df5d8 -> Node0x8df688;
	Node0x8df688 -> Node0x8df748;
	Node0x8df748 -> Node0x8df7f8;
	Node0x8df7f8 -> Node0x8d9b70;
	Node0x8d9b70 -> Node0x8df9f8;
	Node0x8df9f8 -> Node0x8e0968;
	Node0x8e0968 -> Node0x8e0fd8;
	Node0x8e0fd8 -> Node0x8e1038;
	Node0x8e1038 -> Node0x8e10b0;
	Node0x8e10b0 -> Node0x8e1120;
	Node0x8e1120 -> Node0x8e1190;
	Node0x8e1190 -> Node0x8e1200;
	Node0x8e1200 -> Node0x8e1270;
	Node0x8e1270 -> Node0x8e12e0;
	Node0x8e12e0 -> Node0x8e1350;
	Node0x8e1350 -> Node0x8e13c0;
	Node0x8e13c0 -> Node0x8e1430;
	Node0x8e1430 -> Node0x8e14a0;
	Node0x8e14a0 -> Node0x8e1510;
	Node0x8e1510 -> Node0x8e1580;
	Node0x8e1580 -> Node0x8e15f0;
	Node0x8e15f0 -> Node0x8e1660;
	Node0x8e1660 -> Node0x8e16d0;
	Node0x8e16d0 -> Node0x8e1740;
	Node0x8e1740 -> Node0x8e17b0;
	Node0x8e17b0 -> Node0x8e1820;
	Node0x8e1820 -> Node0x8e1890;
	Node0x8e1890 -> Node0x8e1900;
	Node0x8e1900 -> Node0x8e1970;
	Node0x8e1970 -> Node0x8e19e0;
	Node0x8e19e0 -> Node0x8e1a50;
	Node0x8e1a50 -> Node0x8e1ac0;
	Node0x8e1ac0 -> Node0x8e1b30;
	Node0x8e1b30 -> Node0x8e1ba0;
	Node0x8e1ba0 -> Node0x8e1c10;
	Node0x8e1c10 -> Node0x8e1c80;
	Node0x8e1c80 -> Node0x8e1cf0;
	Node0x8e1cf0 -> Node0x8e1d60;
	Node0x8e1d60 -> Node0x8e1dd0;
	Node0x8e1dd0 -> Node0x8e1e40;
	Node0x8e1e40 -> Node0x8e1eb0;
	Node0x8e1eb0 -> Node0x8e1f20;
	Node0x8e1f20 -> Node0x8e1f90;
	Node0x8e1f90 -> Node0x8e2000;
	Node0x8e2000 -> Node0x8e2070;
	Node0x8e2070 -> Node0x8e20e0;
	Node0x8e20e0 -> Node0x8e2150;
	Node0x8e2150 -> Node0x8e21c0;
	Node0x8e21c0 -> Node0x8e2230;
	Node0x8e2230 -> Node0x87e8b8;
	Node0x87e8b8 -> Node0x8e22c0;
	Node0x8e22c0 -> Node0x8e2568;
	Node0x8e2568 -> Node0x8e26c8;
	Node0x8e26c8 -> Node0x8e27d8;
	Node0x8e27d8 -> Node0x8e28e8;
	Node0x8e28e8 -> Node0x8e29a8;
edge [color=red]
	Node0x8dece8 -> Node0x8def08;
	Node0x8def08 -> Node0x8df338;
	Node0x8ded68 -> Node0x8df418;
	Node0x8df418 -> Node0x8df518;
	Node0x8dedf8 -> Node0x8df5d8;
	Node0x8df5d8 -> Node0x8df688;
	Node0x8dee58 -> Node0x8df748;
	Node0x8df748 -> Node0x8df7f8;
	Node0x8dece8 -> Node0x8d9b70;
	Node0x8ded68 -> Node0x8d9b70;
	Node0x8dedf8 -> Node0x8d9b70;
	Node0x8dee58 -> Node0x8d9b70;
	Node0x8dece8 -> Node0x8df9f8;
	Node0x8ded68 -> Node0x8e0968;
	Node0x8dedf8 -> Node0x8e0fd8;
	Node0x8dee58 -> Node0x8e1038;
	Node0x8e0fd8 -> Node0x8e10b0;
	Node0x8e0968 -> Node0x8e10b0;
	Node0x8e1038 -> Node0x8e1120;
	Node0x8df9f8 -> Node0x8e1120;
	Node0x8e1120 -> Node0x8e1190;
	Node0x8e1190 -> Node0x8e1200;
	Node0x8e10b0 -> Node0x8e1200;
	Node0x8e0fd8 -> Node0x8e1270;
	Node0x8e0968 -> Node0x8e1270;
	Node0x8e1270 -> Node0x8e12e0;
	Node0x8e0fd8 -> Node0x8e1350;
	Node0x8e0968 -> Node0x8e1350;
	Node0x8e12e0 -> Node0x8e13c0;
	Node0x8e0fd8 -> Node0x8e1430;
	Node0x8e1430 -> Node0x8e14a0;
	Node0x8e0968 -> Node0x8e1510;
	Node0x8e1430 -> Node0x8e1510;
	Node0x8e1510 -> Node0x8e1580;
	Node0x8e1580 -> Node0x8e15f0;
	Node0x8e10b0 -> Node0x8e1660;
	Node0x8e1270 -> Node0x8e16d0;
	Node0x8e16d0 -> Node0x8e1740;
	Node0x8e0968 -> Node0x8e17b0;
	Node0x8e0fd8 -> Node0x8e1820;
	Node0x8e17b0 -> Node0x8e1820;
	Node0x8df9f8 -> Node0x8e1890;
	Node0x8e1038 -> Node0x8e1900;
	Node0x8e1890 -> Node0x8e1900;
	Node0x8e1900 -> Node0x8e1970;
	Node0x8e1038 -> Node0x8e19e0;
	Node0x8e1890 -> Node0x8e19e0;
	Node0x8e1038 -> Node0x8e1a50;
	Node0x8df9f8 -> Node0x8e1a50;
	Node0x8e19e0 -> Node0x8e1ac0;
	Node0x8e1510 -> Node0x8e1b30;
	Node0x8e0968 -> Node0x8e1b30;
	Node0x8e1b30 -> Node0x8e1ba0;
	Node0x8e1ac0 -> Node0x8e1ba0;
	Node0x8e1ba0 -> Node0x8e1c10;
	Node0x8e1900 -> Node0x8e1c80;
	Node0x8e1820 -> Node0x8e1c80;
	Node0x8e1c80 -> Node0x8e1cf0;
	Node0x8e1350 -> Node0x8e1d60;
	Node0x8e14a0 -> Node0x8e1d60;
	Node0x8e1d60 -> Node0x8e1dd0;
	Node0x8e1660 -> Node0x8e1dd0;
	Node0x8e1dd0 -> Node0x8e1e40;
	Node0x8e1038 -> Node0x8e1e40;
	Node0x8e1e40 -> Node0x8e1eb0;
	Node0x8e1970 -> Node0x8e1eb0;
	Node0x8e1eb0 -> Node0x8e1f20;
	Node0x8e19e0 -> Node0x8e1f20;
	Node0x8e1f20 -> Node0x8e1f90;
	Node0x8e1a50 -> Node0x8e1f90;
	Node0x8e1f90 -> Node0x8e2000;
	Node0x8e13c0 -> Node0x8e2000;
	Node0x8e2000 -> Node0x8e2070;
	Node0x8e15f0 -> Node0x8e2070;
	Node0x8e2070 -> Node0x8e20e0;
	Node0x8e1740 -> Node0x8e20e0;
	Node0x8e20e0 -> Node0x8e2150;
	Node0x8e1cf0 -> Node0x8e2150;
	Node0x8e2150 -> Node0x8e21c0;
	Node0x8e1c10 -> Node0x8e21c0;
	Node0x8e1200 -> Node0x8e2230;
	Node0x8e21c0 -> Node0x8e2230;
	Node0x8e2230 -> Node0x87e8b8;
	Node0x87e8b8 -> Node0x8e22c0;
	Node0x8df748 -> Node0x8e2568;
	Node0x8df5d8 -> Node0x8e26c8;
	Node0x8df418 -> Node0x8e27d8;
	Node0x8def08 -> Node0x8e28e8;
}
