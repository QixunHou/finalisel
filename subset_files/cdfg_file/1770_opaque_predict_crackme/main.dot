digraph "DFG for'main' function" {
	Node0x1f3dcd8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f3dd58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f3dde8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f3de48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1f3def8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1f3e328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f3e408[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1f3e508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f3e5c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1f3e678[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1f3e738[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1f3e7e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1f38b60[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1f3e9e8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f3f958[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f3ffc8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f40028[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1f400a0[shape=record, label="  %14 = shl i32 %12, 1"];
	Node0x1f40110[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1f40180[shape=record, label="  %16 = xor i32 %13, -1"];
	Node0x1f401f0[shape=record, label="  %17 = and i32 %13, %10"];
	Node0x1f40260[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x1f402d0[shape=record, label="  %19 = add i32 %12, -1"];
	Node0x1f40340[shape=record, label="  %20 = add i32 %19, %15"];
	Node0x1f403b0[shape=record, label="  %21 = add i32 %20, %18"];
	Node0x1f40420[shape=record, label="  %22 = xor i32 %12, %11"];
	Node0x1f40490[shape=record, label="  %23 = xor i32 %11, -1"];
	Node0x1f40500[shape=record, label="  %24 = or i32 %12, %23"];
	Node0x1f40570[shape=record, label="  %25 = or i32 %12, %11"];
	Node0x1f405e0[shape=record, label="  %26 = xor i32 %11, 2147483647"];
	Node0x1f40650[shape=record, label="  %27 = and i32 %26, %12"];
	Node0x1f406c0[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x1f40730[shape=record, label="  %29 = or i32 %13, %10"];
	Node0x1f407a0[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x1f40810[shape=record, label="  %31 = or i32 %13, %30"];
	Node0x1f40880[shape=record, label="  %32 = mul i32 %16, -5"];
	Node0x1f408f0[shape=record, label="  %33 = xor i32 %13, %30"];
	Node0x1f40960[shape=record, label="  %34 = or i32 %10, %16"];
	Node0x1f409d0[shape=record, label="  %35 = xor i32 %29, -1"];
	Node0x1f40a40[shape=record, label="  %36 = mul i32 %35, 7"];
	Node0x1f40ab0[shape=record, label="  %37 = shl i32 %31, 3"];
	Node0x1f40b20[shape=record, label="  %38 = xor i32 %37, -8"];
	Node0x1f40b90[shape=record, label="  %39 = add i32 %22, %30"];
	Node0x1f40c00[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x1f40c70[shape=record, label="  %41 = sub i32 %24, %25"];
	Node0x1f40ce0[shape=record, label="  %42 = add i32 %41, %13"];
	Node0x1f40d50[shape=record, label="  %43 = sub i32 %42, %28"];
	Node0x1f40dc0[shape=record, label="  %44 = add i32 %43, %29"];
	Node0x1f40e30[shape=record, label="  %45 = sub i32 %44, %31"];
	Node0x1f40ea0[shape=record, label="  %46 = add i32 %45, %32"];
	Node0x1f40f10[shape=record, label="  %47 = add i32 %46, %33"];
	Node0x1f40f80[shape=record, label="  %48 = sub i32 %47, %34"];
	Node0x1f40ff0[shape=record, label="  %49 = add i32 %48, %17"];
	Node0x1f41060[shape=record, label="  %50 = add i32 %49, %36"];
	Node0x1f410d0[shape=record, label="  %51 = add i32 %50, %40"];
	Node0x1f41140[shape=record, label="  %52 = add i32 %51, %38"];
	Node0x1f411b0[shape=record, label="  %53 = icmp eq i32 %21, %52"];
	Node0x1edd8b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1f41240[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x1f414e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1f41648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1f41758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f41868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f41928[shape=record, label="  ret i32 0"];
	Node0x1f3dcd8 -> Node0x1f3dd58;
	Node0x1f3dd58 -> Node0x1f3dde8;
	Node0x1f3dde8 -> Node0x1f3de48;
	Node0x1f3de48 -> Node0x1f3def8;
	Node0x1f3def8 -> Node0x1f3e328;
	Node0x1f3e328 -> Node0x1f3e408;
	Node0x1f3e408 -> Node0x1f3e508;
	Node0x1f3e508 -> Node0x1f3e5c8;
	Node0x1f3e5c8 -> Node0x1f3e678;
	Node0x1f3e678 -> Node0x1f3e738;
	Node0x1f3e738 -> Node0x1f3e7e8;
	Node0x1f3e7e8 -> Node0x1f38b60;
	Node0x1f38b60 -> Node0x1f3e9e8;
	Node0x1f3e9e8 -> Node0x1f3f958;
	Node0x1f3f958 -> Node0x1f3ffc8;
	Node0x1f3ffc8 -> Node0x1f40028;
	Node0x1f40028 -> Node0x1f400a0;
	Node0x1f400a0 -> Node0x1f40110;
	Node0x1f40110 -> Node0x1f40180;
	Node0x1f40180 -> Node0x1f401f0;
	Node0x1f401f0 -> Node0x1f40260;
	Node0x1f40260 -> Node0x1f402d0;
	Node0x1f402d0 -> Node0x1f40340;
	Node0x1f40340 -> Node0x1f403b0;
	Node0x1f403b0 -> Node0x1f40420;
	Node0x1f40420 -> Node0x1f40490;
	Node0x1f40490 -> Node0x1f40500;
	Node0x1f40500 -> Node0x1f40570;
	Node0x1f40570 -> Node0x1f405e0;
	Node0x1f405e0 -> Node0x1f40650;
	Node0x1f40650 -> Node0x1f406c0;
	Node0x1f406c0 -> Node0x1f40730;
	Node0x1f40730 -> Node0x1f407a0;
	Node0x1f407a0 -> Node0x1f40810;
	Node0x1f40810 -> Node0x1f40880;
	Node0x1f40880 -> Node0x1f408f0;
	Node0x1f408f0 -> Node0x1f40960;
	Node0x1f40960 -> Node0x1f409d0;
	Node0x1f409d0 -> Node0x1f40a40;
	Node0x1f40a40 -> Node0x1f40ab0;
	Node0x1f40ab0 -> Node0x1f40b20;
	Node0x1f40b20 -> Node0x1f40b90;
	Node0x1f40b90 -> Node0x1f40c00;
	Node0x1f40c00 -> Node0x1f40c70;
	Node0x1f40c70 -> Node0x1f40ce0;
	Node0x1f40ce0 -> Node0x1f40d50;
	Node0x1f40d50 -> Node0x1f40dc0;
	Node0x1f40dc0 -> Node0x1f40e30;
	Node0x1f40e30 -> Node0x1f40ea0;
	Node0x1f40ea0 -> Node0x1f40f10;
	Node0x1f40f10 -> Node0x1f40f80;
	Node0x1f40f80 -> Node0x1f40ff0;
	Node0x1f40ff0 -> Node0x1f41060;
	Node0x1f41060 -> Node0x1f410d0;
	Node0x1f410d0 -> Node0x1f41140;
	Node0x1f41140 -> Node0x1f411b0;
	Node0x1f411b0 -> Node0x1edd8b8;
	Node0x1edd8b8 -> Node0x1f41240;
	Node0x1f41240 -> Node0x1f414e8;
	Node0x1f414e8 -> Node0x1f41648;
	Node0x1f41648 -> Node0x1f41758;
	Node0x1f41758 -> Node0x1f41868;
	Node0x1f41868 -> Node0x1f41928;
edge [color=red]
	Node0x1f3dcd8 -> Node0x1f3def8;
	Node0x1f3def8 -> Node0x1f3e328;
	Node0x1f3dd58 -> Node0x1f3e408;
	Node0x1f3e408 -> Node0x1f3e508;
	Node0x1f3dde8 -> Node0x1f3e5c8;
	Node0x1f3e5c8 -> Node0x1f3e678;
	Node0x1f3de48 -> Node0x1f3e738;
	Node0x1f3e738 -> Node0x1f3e7e8;
	Node0x1f3dcd8 -> Node0x1f38b60;
	Node0x1f3dd58 -> Node0x1f38b60;
	Node0x1f3dde8 -> Node0x1f38b60;
	Node0x1f3de48 -> Node0x1f38b60;
	Node0x1f3dcd8 -> Node0x1f3e9e8;
	Node0x1f3dd58 -> Node0x1f3f958;
	Node0x1f3dde8 -> Node0x1f3ffc8;
	Node0x1f3de48 -> Node0x1f40028;
	Node0x1f3ffc8 -> Node0x1f400a0;
	Node0x1f400a0 -> Node0x1f40110;
	Node0x1f40028 -> Node0x1f40180;
	Node0x1f40028 -> Node0x1f401f0;
	Node0x1f3e9e8 -> Node0x1f401f0;
	Node0x1f401f0 -> Node0x1f40260;
	Node0x1f3ffc8 -> Node0x1f402d0;
	Node0x1f402d0 -> Node0x1f40340;
	Node0x1f40110 -> Node0x1f40340;
	Node0x1f40340 -> Node0x1f403b0;
	Node0x1f40260 -> Node0x1f403b0;
	Node0x1f3ffc8 -> Node0x1f40420;
	Node0x1f3f958 -> Node0x1f40420;
	Node0x1f3f958 -> Node0x1f40490;
	Node0x1f3ffc8 -> Node0x1f40500;
	Node0x1f40490 -> Node0x1f40500;
	Node0x1f3ffc8 -> Node0x1f40570;
	Node0x1f3f958 -> Node0x1f40570;
	Node0x1f3f958 -> Node0x1f405e0;
	Node0x1f405e0 -> Node0x1f40650;
	Node0x1f3ffc8 -> Node0x1f40650;
	Node0x1f40650 -> Node0x1f406c0;
	Node0x1f40028 -> Node0x1f40730;
	Node0x1f3e9e8 -> Node0x1f40730;
	Node0x1f3e9e8 -> Node0x1f407a0;
	Node0x1f40028 -> Node0x1f40810;
	Node0x1f407a0 -> Node0x1f40810;
	Node0x1f40180 -> Node0x1f40880;
	Node0x1f40028 -> Node0x1f408f0;
	Node0x1f407a0 -> Node0x1f408f0;
	Node0x1f3e9e8 -> Node0x1f40960;
	Node0x1f40180 -> Node0x1f40960;
	Node0x1f40730 -> Node0x1f409d0;
	Node0x1f409d0 -> Node0x1f40a40;
	Node0x1f40810 -> Node0x1f40ab0;
	Node0x1f40ab0 -> Node0x1f40b20;
	Node0x1f40420 -> Node0x1f40b90;
	Node0x1f407a0 -> Node0x1f40b90;
	Node0x1f40b90 -> Node0x1f40c00;
	Node0x1f40500 -> Node0x1f40c70;
	Node0x1f40570 -> Node0x1f40c70;
	Node0x1f40c70 -> Node0x1f40ce0;
	Node0x1f40028 -> Node0x1f40ce0;
	Node0x1f40ce0 -> Node0x1f40d50;
	Node0x1f406c0 -> Node0x1f40d50;
	Node0x1f40d50 -> Node0x1f40dc0;
	Node0x1f40730 -> Node0x1f40dc0;
	Node0x1f40dc0 -> Node0x1f40e30;
	Node0x1f40810 -> Node0x1f40e30;
	Node0x1f40e30 -> Node0x1f40ea0;
	Node0x1f40880 -> Node0x1f40ea0;
	Node0x1f40ea0 -> Node0x1f40f10;
	Node0x1f408f0 -> Node0x1f40f10;
	Node0x1f40f10 -> Node0x1f40f80;
	Node0x1f40960 -> Node0x1f40f80;
	Node0x1f40f80 -> Node0x1f40ff0;
	Node0x1f401f0 -> Node0x1f40ff0;
	Node0x1f40ff0 -> Node0x1f41060;
	Node0x1f40a40 -> Node0x1f41060;
	Node0x1f41060 -> Node0x1f410d0;
	Node0x1f40c00 -> Node0x1f410d0;
	Node0x1f410d0 -> Node0x1f41140;
	Node0x1f40b20 -> Node0x1f41140;
	Node0x1f403b0 -> Node0x1f411b0;
	Node0x1f41140 -> Node0x1f411b0;
	Node0x1f411b0 -> Node0x1edd8b8;
	Node0x1edd8b8 -> Node0x1f41240;
	Node0x1f3e738 -> Node0x1f414e8;
	Node0x1f3e5c8 -> Node0x1f41648;
	Node0x1f3e408 -> Node0x1f41758;
	Node0x1f3def8 -> Node0x1f41868;
}
