digraph "DFG for'main' function" {
	Node0x1d77d28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d77da8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d77e38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1d78298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1d78378[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1d78498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d786d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1d78788[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d796f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d79d80[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x1d79df0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x1d79e60[shape=record, label="  %10 = sub i32 %9, %8"];
	Node0x1d79ed0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x1d79f40[shape=record, label="  %12 = and i32 %6, %9"];
	Node0x1d79fb0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x1d7a020[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x1d7a090[shape=record, label="  %15 = or i32 %6, %9"];
	Node0x1d7a100[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1d7a170[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1d7a1e0[shape=record, label="  %18 = xor i32 %8, -1"];
	Node0x1d7a250[shape=record, label="  %19 = mul i32 %18, 5"];
	Node0x1d7a2c0[shape=record, label="  %20 = mul i32 %14, -3"];
	Node0x1d7a330[shape=record, label="  %21 = add i32 %12, %6"];
	Node0x1d7a3a0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x1d7a410[shape=record, label="  %23 = add i32 %7, 3"];
	Node0x1d7a480[shape=record, label="  %24 = sub i32 %23, %13"];
	Node0x1d7a4f0[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x1d7a560[shape=record, label="  %26 = add i32 %25, %15"];
	Node0x1d7a5d0[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x1d7a640[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x1d7a6b0[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x1d7a720[shape=record, label="  %30 = add i32 %29, %22"];
	Node0x1d7a790[shape=record, label="  %31 = icmp eq i32 %11, %30"];
	Node0x1d189d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d7aa30[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x1d7ac88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d7ade8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1d7aea8[shape=record, label="  ret i32 0"];
	Node0x1d77d28 -> Node0x1d77da8;
	Node0x1d77da8 -> Node0x1d77e38;
	Node0x1d77e38 -> Node0x1d78298;
	Node0x1d78298 -> Node0x1d78378;
	Node0x1d78378 -> Node0x1d78498;
	Node0x1d78498 -> Node0x1d786d0;
	Node0x1d786d0 -> Node0x1d78788;
	Node0x1d78788 -> Node0x1d796f8;
	Node0x1d796f8 -> Node0x1d79d80;
	Node0x1d79d80 -> Node0x1d79df0;
	Node0x1d79df0 -> Node0x1d79e60;
	Node0x1d79e60 -> Node0x1d79ed0;
	Node0x1d79ed0 -> Node0x1d79f40;
	Node0x1d79f40 -> Node0x1d79fb0;
	Node0x1d79fb0 -> Node0x1d7a020;
	Node0x1d7a020 -> Node0x1d7a090;
	Node0x1d7a090 -> Node0x1d7a100;
	Node0x1d7a100 -> Node0x1d7a170;
	Node0x1d7a170 -> Node0x1d7a1e0;
	Node0x1d7a1e0 -> Node0x1d7a250;
	Node0x1d7a250 -> Node0x1d7a2c0;
	Node0x1d7a2c0 -> Node0x1d7a330;
	Node0x1d7a330 -> Node0x1d7a3a0;
	Node0x1d7a3a0 -> Node0x1d7a410;
	Node0x1d7a410 -> Node0x1d7a480;
	Node0x1d7a480 -> Node0x1d7a4f0;
	Node0x1d7a4f0 -> Node0x1d7a560;
	Node0x1d7a560 -> Node0x1d7a5d0;
	Node0x1d7a5d0 -> Node0x1d7a640;
	Node0x1d7a640 -> Node0x1d7a6b0;
	Node0x1d7a6b0 -> Node0x1d7a720;
	Node0x1d7a720 -> Node0x1d7a790;
	Node0x1d7a790 -> Node0x1d189d8;
	Node0x1d189d8 -> Node0x1d7aa30;
	Node0x1d7aa30 -> Node0x1d7ac88;
	Node0x1d7ac88 -> Node0x1d7ade8;
	Node0x1d7ade8 -> Node0x1d7aea8;
edge [color=red]
	Node0x1d77d28 -> Node0x1d77e38;
	Node0x1d77e38 -> Node0x1d78298;
	Node0x1d77da8 -> Node0x1d78378;
	Node0x1d78378 -> Node0x1d78498;
	Node0x1d77d28 -> Node0x1d786d0;
	Node0x1d77da8 -> Node0x1d786d0;
	Node0x1d77d28 -> Node0x1d78788;
	Node0x1d77da8 -> Node0x1d796f8;
	Node0x1d796f8 -> Node0x1d79d80;
	Node0x1d78788 -> Node0x1d79d80;
	Node0x1d796f8 -> Node0x1d79df0;
	Node0x1d79df0 -> Node0x1d79e60;
	Node0x1d79d80 -> Node0x1d79e60;
	Node0x1d79e60 -> Node0x1d79ed0;
	Node0x1d78788 -> Node0x1d79f40;
	Node0x1d79df0 -> Node0x1d79f40;
	Node0x1d796f8 -> Node0x1d79fb0;
	Node0x1d78788 -> Node0x1d79fb0;
	Node0x1d796f8 -> Node0x1d7a020;
	Node0x1d78788 -> Node0x1d7a020;
	Node0x1d78788 -> Node0x1d7a090;
	Node0x1d79df0 -> Node0x1d7a090;
	Node0x1d7a090 -> Node0x1d7a100;
	Node0x1d7a100 -> Node0x1d7a170;
	Node0x1d79d80 -> Node0x1d7a1e0;
	Node0x1d7a1e0 -> Node0x1d7a250;
	Node0x1d7a020 -> Node0x1d7a2c0;
	Node0x1d79f40 -> Node0x1d7a330;
	Node0x1d78788 -> Node0x1d7a330;
	Node0x1d7a330 -> Node0x1d7a3a0;
	Node0x1d796f8 -> Node0x1d7a410;
	Node0x1d7a410 -> Node0x1d7a480;
	Node0x1d79fb0 -> Node0x1d7a480;
	Node0x1d7a480 -> Node0x1d7a4f0;
	Node0x1d7a020 -> Node0x1d7a4f0;
	Node0x1d7a4f0 -> Node0x1d7a560;
	Node0x1d7a090 -> Node0x1d7a560;
	Node0x1d7a560 -> Node0x1d7a5d0;
	Node0x1d7a170 -> Node0x1d7a5d0;
	Node0x1d7a5d0 -> Node0x1d7a640;
	Node0x1d7a250 -> Node0x1d7a640;
	Node0x1d7a640 -> Node0x1d7a6b0;
	Node0x1d7a2c0 -> Node0x1d7a6b0;
	Node0x1d7a6b0 -> Node0x1d7a720;
	Node0x1d7a3a0 -> Node0x1d7a720;
	Node0x1d79ed0 -> Node0x1d7a790;
	Node0x1d7a720 -> Node0x1d7a790;
	Node0x1d7a790 -> Node0x1d189d8;
	Node0x1d189d8 -> Node0x1d7aa30;
	Node0x1d78378 -> Node0x1d7ac88;
	Node0x1d77e38 -> Node0x1d7ade8;
}
