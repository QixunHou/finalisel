digraph "DFG for'main' function" {
	Node0x11e9628[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11e96a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11e9738[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x11e9798[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x11e9c18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11ead18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x11eadf8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11eaeb8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x11eaf68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11eb1c8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x11eb288[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11ec1f8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11ec868[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x11ec960[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x11ecb68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11eccc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11ecdd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11ece98[shape=record, label="  ret i32 0"];
	Node0x11e9628 -> Node0x11e96a8;
	Node0x11e96a8 -> Node0x11e9738;
	Node0x11e9738 -> Node0x11e9798;
	Node0x11e9798 -> Node0x11e9c18;
	Node0x11e9c18 -> Node0x11ead18;
	Node0x11ead18 -> Node0x11eadf8;
	Node0x11eadf8 -> Node0x11eaeb8;
	Node0x11eaeb8 -> Node0x11eaf68;
	Node0x11eaf68 -> Node0x11eb1c8;
	Node0x11eb1c8 -> Node0x11eb288;
	Node0x11eb288 -> Node0x11ec1f8;
	Node0x11ec1f8 -> Node0x11ec868;
	Node0x11ec868 -> Node0x11ec960;
	Node0x11ec960 -> Node0x11ecb68;
	Node0x11ecb68 -> Node0x11eccc8;
	Node0x11eccc8 -> Node0x11ecdd8;
	Node0x11ecdd8 -> Node0x11ece98;
edge [color=red]
	Node0x11e9628 -> Node0x11e9798;
	Node0x11e9798 -> Node0x11e9c18;
	Node0x11e96a8 -> Node0x11ead18;
	Node0x11ead18 -> Node0x11eadf8;
	Node0x11e9738 -> Node0x11eaeb8;
	Node0x11eaeb8 -> Node0x11eaf68;
	Node0x11e9628 -> Node0x11eb1c8;
	Node0x11e96a8 -> Node0x11eb1c8;
	Node0x11e9738 -> Node0x11eb1c8;
	Node0x11e9628 -> Node0x11eb288;
	Node0x11e96a8 -> Node0x11ec1f8;
	Node0x11e9738 -> Node0x11ec868;
	Node0x11eb288 -> Node0x11ec960;
	Node0x11ec1f8 -> Node0x11ec960;
	Node0x11ec868 -> Node0x11ec960;
	Node0x11eaeb8 -> Node0x11ecb68;
	Node0x11ead18 -> Node0x11eccc8;
	Node0x11e9798 -> Node0x11ecdd8;
}
