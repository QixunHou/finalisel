digraph "DFG for'main' function" {
	Node0xba6cc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xba6d48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xba6dd8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xba7238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xba7318[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xba7438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xba7670[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xba7728[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xba8698[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xba8d20[shape=record, label="  %8 = and i32 %7, %6"];
	Node0xba8d90[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xba8e00[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0xba8e70[shape=record, label="  %11 = sub i32 1, %10"];
	Node0xba8ee0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0xba8f50[shape=record, label="  %13 = xor i32 %6, 2147483647"];
	Node0xba8fc0[shape=record, label="  %14 = or i32 %13, %7"];
	Node0xba9030[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0xba90a0[shape=record, label="  %16 = shl i32 %6, 1"];
	Node0xba9110[shape=record, label="  %17 = or i32 %7, %6"];
	Node0xba9180[shape=record, label="  %18 = or i32 %6, %12"];
	Node0xba91f0[shape=record, label="  %19 = shl i32 %17, 1"];
	Node0xba9260[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0xba92d0[shape=record, label="  %21 = shl i32 %18, 2"];
	Node0xba9340[shape=record, label="  %22 = xor i32 %21, -4"];
	Node0xba93b0[shape=record, label="  %23 = add i32 %6, 2"];
	Node0xba9420[shape=record, label="  %24 = sub i32 %23, %16"];
	Node0xba9490[shape=record, label="  %25 = add i32 %24, %17"];
	Node0xba9500[shape=record, label="  %26 = sub i32 %25, %18"];
	Node0xba9570[shape=record, label="  %27 = add i32 %26, %15"];
	Node0xba95e0[shape=record, label="  %28 = sub i32 %27, %20"];
	Node0xba9650[shape=record, label="  %29 = sub i32 %28, %22"];
	Node0xba96c0[shape=record, label="  %30 = icmp eq i32 %11, %29"];
	Node0xb479d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xba9750[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0xba9bb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xba9d18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xba9dd8[shape=record, label="  ret i32 0"];
	Node0xba6cc8 -> Node0xba6d48;
	Node0xba6d48 -> Node0xba6dd8;
	Node0xba6dd8 -> Node0xba7238;
	Node0xba7238 -> Node0xba7318;
	Node0xba7318 -> Node0xba7438;
	Node0xba7438 -> Node0xba7670;
	Node0xba7670 -> Node0xba7728;
	Node0xba7728 -> Node0xba8698;
	Node0xba8698 -> Node0xba8d20;
	Node0xba8d20 -> Node0xba8d90;
	Node0xba8d90 -> Node0xba8e00;
	Node0xba8e00 -> Node0xba8e70;
	Node0xba8e70 -> Node0xba8ee0;
	Node0xba8ee0 -> Node0xba8f50;
	Node0xba8f50 -> Node0xba8fc0;
	Node0xba8fc0 -> Node0xba9030;
	Node0xba9030 -> Node0xba90a0;
	Node0xba90a0 -> Node0xba9110;
	Node0xba9110 -> Node0xba9180;
	Node0xba9180 -> Node0xba91f0;
	Node0xba91f0 -> Node0xba9260;
	Node0xba9260 -> Node0xba92d0;
	Node0xba92d0 -> Node0xba9340;
	Node0xba9340 -> Node0xba93b0;
	Node0xba93b0 -> Node0xba9420;
	Node0xba9420 -> Node0xba9490;
	Node0xba9490 -> Node0xba9500;
	Node0xba9500 -> Node0xba9570;
	Node0xba9570 -> Node0xba95e0;
	Node0xba95e0 -> Node0xba9650;
	Node0xba9650 -> Node0xba96c0;
	Node0xba96c0 -> Node0xb479d8;
	Node0xb479d8 -> Node0xba9750;
	Node0xba9750 -> Node0xba9bb8;
	Node0xba9bb8 -> Node0xba9d18;
	Node0xba9d18 -> Node0xba9dd8;
edge [color=red]
	Node0xba6cc8 -> Node0xba6dd8;
	Node0xba6dd8 -> Node0xba7238;
	Node0xba6d48 -> Node0xba7318;
	Node0xba7318 -> Node0xba7438;
	Node0xba6cc8 -> Node0xba7670;
	Node0xba6d48 -> Node0xba7670;
	Node0xba6cc8 -> Node0xba7728;
	Node0xba6d48 -> Node0xba8698;
	Node0xba8698 -> Node0xba8d20;
	Node0xba7728 -> Node0xba8d20;
	Node0xba8d20 -> Node0xba8d90;
	Node0xba8d90 -> Node0xba8e00;
	Node0xba8e00 -> Node0xba8e70;
	Node0xba8698 -> Node0xba8ee0;
	Node0xba7728 -> Node0xba8f50;
	Node0xba8f50 -> Node0xba8fc0;
	Node0xba8698 -> Node0xba8fc0;
	Node0xba8fc0 -> Node0xba9030;
	Node0xba7728 -> Node0xba90a0;
	Node0xba8698 -> Node0xba9110;
	Node0xba7728 -> Node0xba9110;
	Node0xba7728 -> Node0xba9180;
	Node0xba8ee0 -> Node0xba9180;
	Node0xba9110 -> Node0xba91f0;
	Node0xba91f0 -> Node0xba9260;
	Node0xba9180 -> Node0xba92d0;
	Node0xba92d0 -> Node0xba9340;
	Node0xba7728 -> Node0xba93b0;
	Node0xba93b0 -> Node0xba9420;
	Node0xba90a0 -> Node0xba9420;
	Node0xba9420 -> Node0xba9490;
	Node0xba9110 -> Node0xba9490;
	Node0xba9490 -> Node0xba9500;
	Node0xba9180 -> Node0xba9500;
	Node0xba9500 -> Node0xba9570;
	Node0xba9030 -> Node0xba9570;
	Node0xba9570 -> Node0xba95e0;
	Node0xba9260 -> Node0xba95e0;
	Node0xba95e0 -> Node0xba9650;
	Node0xba9340 -> Node0xba9650;
	Node0xba8e70 -> Node0xba96c0;
	Node0xba9650 -> Node0xba96c0;
	Node0xba96c0 -> Node0xb479d8;
	Node0xb479d8 -> Node0xba9750;
	Node0xba7318 -> Node0xba9bb8;
	Node0xba6dd8 -> Node0xba9d18;
}
