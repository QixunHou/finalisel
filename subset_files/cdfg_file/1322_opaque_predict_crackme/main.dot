digraph "DFG for'main' function" {
	Node0xb482f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb48378[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb48408[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb48468[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xb488e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb489c8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xb48ac8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb48b88[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xb48c38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb48e98[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xb48f58[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb490b8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb49118[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb4ed90[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xb4ef98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb4f0f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb4f208[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb4f2c8[shape=record, label="  ret i32 0"];
	Node0xb482f8 -> Node0xb48378;
	Node0xb48378 -> Node0xb48408;
	Node0xb48408 -> Node0xb48468;
	Node0xb48468 -> Node0xb488e8;
	Node0xb488e8 -> Node0xb489c8;
	Node0xb489c8 -> Node0xb48ac8;
	Node0xb48ac8 -> Node0xb48b88;
	Node0xb48b88 -> Node0xb48c38;
	Node0xb48c38 -> Node0xb48e98;
	Node0xb48e98 -> Node0xb48f58;
	Node0xb48f58 -> Node0xb490b8;
	Node0xb490b8 -> Node0xb49118;
	Node0xb49118 -> Node0xb4ed90;
	Node0xb4ed90 -> Node0xb4ef98;
	Node0xb4ef98 -> Node0xb4f0f8;
	Node0xb4f0f8 -> Node0xb4f208;
	Node0xb4f208 -> Node0xb4f2c8;
edge [color=red]
	Node0xb482f8 -> Node0xb48468;
	Node0xb48468 -> Node0xb488e8;
	Node0xb48378 -> Node0xb489c8;
	Node0xb489c8 -> Node0xb48ac8;
	Node0xb48408 -> Node0xb48b88;
	Node0xb48b88 -> Node0xb48c38;
	Node0xb482f8 -> Node0xb48e98;
	Node0xb48378 -> Node0xb48e98;
	Node0xb48408 -> Node0xb48e98;
	Node0xb482f8 -> Node0xb48f58;
	Node0xb48378 -> Node0xb490b8;
	Node0xb48408 -> Node0xb49118;
	Node0xb48f58 -> Node0xb4ed90;
	Node0xb490b8 -> Node0xb4ed90;
	Node0xb49118 -> Node0xb4ed90;
	Node0xb48b88 -> Node0xb4ef98;
	Node0xb489c8 -> Node0xb4f0f8;
	Node0xb48468 -> Node0xb4f208;
}
