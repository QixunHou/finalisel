digraph "DFG for'main' function" {
	Node0x2435fc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2436048[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x24360d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2436138[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x24365b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2436698[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x2436798[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2436858[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2436908[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2436b68[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x2436c28[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2437b98[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2437bf8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2437cf0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x2438998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2438ad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2438be8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2438ca8[shape=record, label="  ret i32 0"];
	Node0x2435fc8 -> Node0x2436048;
	Node0x2436048 -> Node0x24360d8;
	Node0x24360d8 -> Node0x2436138;
	Node0x2436138 -> Node0x24365b8;
	Node0x24365b8 -> Node0x2436698;
	Node0x2436698 -> Node0x2436798;
	Node0x2436798 -> Node0x2436858;
	Node0x2436858 -> Node0x2436908;
	Node0x2436908 -> Node0x2436b68;
	Node0x2436b68 -> Node0x2436c28;
	Node0x2436c28 -> Node0x2437b98;
	Node0x2437b98 -> Node0x2437bf8;
	Node0x2437bf8 -> Node0x2437cf0;
	Node0x2437cf0 -> Node0x2438998;
	Node0x2438998 -> Node0x2438ad8;
	Node0x2438ad8 -> Node0x2438be8;
	Node0x2438be8 -> Node0x2438ca8;
edge [color=red]
	Node0x2435fc8 -> Node0x2436138;
	Node0x2436138 -> Node0x24365b8;
	Node0x2436048 -> Node0x2436698;
	Node0x2436698 -> Node0x2436798;
	Node0x24360d8 -> Node0x2436858;
	Node0x2436858 -> Node0x2436908;
	Node0x2435fc8 -> Node0x2436b68;
	Node0x2436048 -> Node0x2436b68;
	Node0x24360d8 -> Node0x2436b68;
	Node0x2435fc8 -> Node0x2436c28;
	Node0x2436048 -> Node0x2437b98;
	Node0x24360d8 -> Node0x2437bf8;
	Node0x2436c28 -> Node0x2437cf0;
	Node0x2437b98 -> Node0x2437cf0;
	Node0x2437bf8 -> Node0x2437cf0;
	Node0x2436858 -> Node0x2438998;
	Node0x2436698 -> Node0x2438ad8;
	Node0x2436138 -> Node0x2438be8;
}
