; ModuleID = '../.././c_source_file/0451_path_condition_crackme.c'
source_filename = "../.././c_source_file/0451_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %2, %0
  %5 = xor i32 %1, %0
  %6 = or i32 %4, %5
  %7 = sub i32 0, %6
  %8 = xor i32 %1, -1
  %9 = and i32 %8, %0
  %10 = xor i32 %2, %0
  %11 = or i32 %10, %9
  %12 = xor i32 %2, -1
  %13 = or i32 %12, %0
  %14 = xor i32 %5, -1
  %15 = and i32 %13, %14
  %16 = xor i32 %0, -1
  %17 = or i32 %12, %1
  %18 = xor i32 %17, -1
  %19 = or i32 %18, %16
  %20 = or i32 %4, %8
  %21 = and i32 %17, %0
  %22 = or i32 %2, %0
  %23 = xor i32 %22, %1
  %24 = and i32 %2, %1
  %25 = xor i32 %24, -1
  %26 = shl i32 %25, 1
  %27 = or i32 %2, %1
  %28 = xor i32 %27, -1
  %29 = or i32 %28, %16
  %30 = or i32 %8, %0
  %31 = xor i32 %4, %30
  %32 = and i32 %12, %1
  %33 = xor i32 %32, -1
  %34 = and i32 %33, %0
  %35 = and i32 %24, %0
  %36 = and i32 %27, %16
  %37 = or i32 %35, %36
  %38 = and i32 %12, %0
  %39 = xor i32 %38, -1
  %40 = and i32 %5, %39
  %41 = xor i32 %22, -1
  %42 = xor i32 %41, %1
  %43 = xor i32 %2, %1
  %44 = and i32 %43, %0
  %45 = xor i32 %38, %17
  %46 = xor i32 %9, -1
  %47 = and i32 %10, %46
  %48 = xor i32 %27, %0
  %49 = and i32 %25, %0
  %50 = or i32 %24, %9
  %51 = and i32 %1, %0
  %52 = xor i32 %51, -1
  %53 = and i32 %10, %52
  %54 = or i32 %51, %18
  %55 = and i32 %8, %2
  %56 = and i32 %55, %0
  %57 = or i32 %8, %2
  %58 = xor i32 %57, %0
  %59 = or i32 %56, %58
  %60 = xor i32 %43, -1
  %61 = and i32 %60, %0
  %62 = xor i32 %10, -1
  %63 = and i32 %62, %8
  %64 = or i32 %1, %0
  %65 = xor i32 %64, -1
  %66 = xor i32 %65, %2
  %67 = and i32 %17, %16
  %68 = xor i32 %4, -1
  %69 = and i32 %68, %1
  %70 = xor i32 %38, %1
  %71 = xor i32 %43, %0
  %72 = xor i32 %35, %71
  %73 = or i32 %25, %16
  %74 = and i32 %57, %16
  %75 = xor i32 %74, -1
  %76 = xor i32 %56, %75
  %77 = and i32 %55, %16
  %78 = and i32 %57, %0
  %79 = or i32 %77, %78
  %80 = or i32 %18, %0
  %81 = shl i32 %80, 1
  %82 = xor i32 %58, 2147483647
  %83 = xor i32 %82, %56
  %84 = add i32 %38, 1
  %85 = xor i32 %30, -1
  %86 = or i32 %85, %2
  %87 = or i32 %38, %1
  %88 = xor i32 %9, %2
  %89 = or i32 %12, %65
  %90 = xor i32 %13, %1
  %91 = add i32 %17, 1
  %92 = and i32 %24, %16
  %93 = xor i32 %44, 2147483647
  %94 = xor i32 %93, %92
  %95 = and i32 %10, %14
  %96 = or i32 %60, %0
  %97 = or i32 %27, %0
  %98 = and i32 %43, %16
  %99 = and i32 %27, %0
  %100 = xor i32 %99, -1
  %101 = xor i32 %92, %100
  %102 = and i32 %64, %12
  %103 = and i32 %33, %16
  %104 = or i32 %92, %44
  %105 = and i32 %10, %30
  %106 = xor i32 %39, %1
  %107 = or i32 %43, %16
  %108 = shl i32 %107, 1
  %109 = xor i32 %71, -1
  %110 = or i32 %35, %109
  %111 = xor i32 %35, -1
  %112 = xor i32 %36, %111
  %113 = or i32 %5, %62
  %114 = or i32 %5, %12
  %115 = or i32 %43, %9
  %116 = or i32 %33, %16
  %117 = or i32 %4, %32
  %118 = or i32 %4, %14
  %119 = or i32 %38, %14
  %120 = shl i32 %119, 1
  %121 = or i32 %5, %2
  %122 = and i32 %43, %64
  %123 = and i32 %43, %30
  %124 = and i32 %12, %14
  %125 = or i32 %12, %14
  %126 = xor i32 %33, %0
  %127 = and i32 %62, %46
  %128 = and i32 %52, %2
  %129 = and i32 %10, %1
  %130 = add i32 %51, 1
  %131 = and i32 %22, %5
  %132 = or i32 %62, %14
  %133 = xor i32 %68, %1
  %134 = or i32 %60, %65
  %135 = shl i32 %134, 1
  %136 = and i32 %60, %16
  %137 = and i32 %5, %2
  %138 = and i32 %46, %2
  %139 = xor i32 %25, %0
  %140 = xor i32 %46, %2
  %141 = and i32 %10, %5
  %142 = or i32 %35, %98
  %143 = or i32 %62, %1
  %144 = shl i32 %143, 1
  %145 = and i32 %30, %2
  %146 = or i32 %51, %28
  %147 = and i32 %25, %16
  %148 = and i32 %68, %8
  %149 = or i32 %92, %99
  %150 = xor i32 %13, -1
  %151 = or i32 %51, %150
  %152 = xor i32 %32, %0
  %153 = or i32 %9, %62
  %154 = and i32 %60, %46
  %155 = or i32 %38, %18
  %156 = and i32 %13, %8
  %157 = and i32 %64, %62
  %158 = or i32 %24, %0
  %159 = or i32 %4, %65
  %160 = or i32 %24, %16
  %161 = or i32 %62, %85
  %162 = or i32 %38, %8
  %163 = or i32 %60, %16
  %164 = or i32 %28, %0
  %165 = xor i32 %48, 2147483647
  %166 = xor i32 %165, %35
  %167 = shl i32 %166, 1
  %168 = xor i32 %27, %51
  %169 = and i32 %43, %46
  %170 = xor i32 %51, %2
  %171 = or i32 %5, %150
  %172 = or i32 %4, %1
  %173 = or i32 %32, %16
  %174 = and i32 %30, %60
  %175 = or i32 %17, %0
  %176 = and i32 %39, %1
  %177 = xor i32 %9, %33
  %178 = and i32 %30, %62
  %179 = xor i32 %4, %33
  %180 = or i32 %43, %0
  %181 = or i32 %4, %85
  %182 = xor i32 %78, -1
  %183 = xor i32 %77, %182
  %184 = or i32 %41, %14
  %185 = and i32 %13, %1
  %186 = shl i32 %185, 1
  %187 = and i32 %10, %64
  %188 = and i32 %12, %52
  %189 = or i32 %10, %85
  %190 = xor i32 %52, %2
  %191 = shl i32 %190, 1
  %192 = and i32 %22, %1
  %193 = and i32 %39, %14
  %194 = shl i32 %193, 1
  %195 = and i32 %22, %8
  %196 = add i32 %64, 1
  %197 = or i32 %43, %85
  %198 = shl i32 %197, 2
  %199 = or i32 %62, %8
  %200 = shl i32 %199, 1
  %201 = or i32 %150, %1
  %202 = xor i32 %77, %107
  %203 = or i32 %17, %16
  %204 = shl i32 %33, 1
  %205 = add i32 %13, 1
  %206 = or i32 %5, %41
  %207 = xor i32 %30, %2
  %208 = and i32 %60, %52
  %209 = and i32 %62, %52
  %210 = xor i32 %56, %180
  %211 = or i32 %51, %60
  %212 = or i32 %43, %65
  %213 = and i32 %5, %12
  %214 = xor i32 %4, %27
  %215 = shl i32 %214, 1
  %216 = or i32 %10, %65
  %217 = or i32 %43, %51
  %218 = xor i32 %17, %0
  %219 = or i32 %4, %28
  %220 = and i32 %30, %12
  %221 = or i32 %41, %8
  %222 = and i32 %12, %46
  %223 = or i32 %32, %9
  %224 = xor i32 %13, %51
  %225 = or i32 %51, %41
  %226 = xor i32 %18, %0
  %227 = or i32 %9, %60
  %228 = xor i32 %22, %51
  %229 = or i32 %9, %12
  %230 = xor i32 %4, %64
  %231 = and i32 %14, %2
  %232 = and i32 %64, %60
  %233 = or i32 %9, %2
  %234 = shl i32 %233, 1
  %235 = xor i32 %180, -1
  %236 = or i32 %56, %235
  %237 = or i32 %56, %74
  %238 = and i32 %62, %1
  %239 = or i32 %150, %14
  %240 = xor i32 %56, %109
  %241 = xor i32 %98, %111
  %242 = xor i32 %60, %0
  %243 = or i32 %56, %71
  %244 = or i32 %33, %0
  %245 = or i32 %150, %8
  %246 = shl i32 %245, 1
  %247 = xor i32 %150, %1
  %248 = and i32 %64, %2
  %249 = or i32 %35, %48
  %250 = and i32 %43, %52
  %251 = add i32 %22, 1
  %252 = xor i32 %38, %25
  %253 = or i32 %51, %62
  %254 = or i32 %27, %16
  %255 = or i32 %10, %5
  %256 = xor i32 %64, %2
  %257 = add i32 %9, 1
  %258 = and i32 %62, %14
  %259 = and i32 %5, %68
  %260 = or i32 %32, %0
  %261 = or i32 %65, %2
  %262 = shl i32 %64, 1
  %263 = add i32 %30, 1
  %264 = xor i32 %107, 2147483647
  %265 = or i32 %264, %77
  %266 = or i32 %10, %14
  %267 = shl i32 %266, 1
  %268 = or i32 %51, %2
  %269 = or i32 %25, %0
  %270 = shl i32 %269, 1
  %271 = xor i32 %17, %51
  %272 = or i32 %10, %8
  %273 = and i32 %22, %14
  %274 = and i32 %10, %8
  %275 = or i32 %38, %24
  %276 = and i32 %39, %8
  %277 = and i32 %13, %5
  %278 = and i32 %68, %14
  %279 = xor i32 %85, %2
  %280 = or i32 %41, %1
  %281 = or i32 %10, %1
  %282 = or i32 %14, %2
  %283 = and i32 %5, %62
  %284 = xor i32 %4, %1
  %285 = or i32 %51, %12
  %286 = or i32 %38, %5
  %287 = xor i32 %24, %0
  %288 = xor i32 %28, %0
  %289 = or i32 %62, %65
  %290 = or i32 %12, %85
  %291 = or i32 %10, %51
  %292 = and i32 %28, %16
  %293 = and i32 %32, %16
  %294 = mul i32 %293, 10
  %295 = and i32 %28, %0
  %296 = mul i32 %295, -14
  %297 = and i32 %32, %0
  %298 = and i32 %18, %16
  %299 = shl i32 %298, 4
  %300 = mul i32 %92, -11
  %301 = and i32 %18, %0
  %302 = mul i32 %35, -7
  %303 = add i32 %32, %60
  %304 = add i32 %303, %222
  %305 = add i32 %304, %125
  %306 = add i32 %305, %297
  %307 = add i32 %306, %275
  %308 = add i32 %307, %271
  %309 = add i32 %308, %259
  %310 = add i32 %309, %258
  %311 = add i32 %310, %219
  %312 = add i32 %311, %209
  %313 = add i32 %312, %208
  %314 = add i32 %313, %172
  %315 = add i32 %314, %157
  %316 = add i32 %315, %154
  %317 = add i32 %316, %139
  %318 = add i32 %317, %98
  %319 = add i32 %318, %97
  %320 = add i32 %319, %95
  %321 = add i32 %320, %243
  %322 = add i32 %321, %79
  %323 = add i32 %322, %94
  %324 = add i32 %323, %265
  %325 = add i32 %324, %83
  %326 = shl i32 %325, 1
  %327 = sub i32 %124, %188
  %328 = sub i32 %327, %225
  %329 = mul i32 %328, 5
  %330 = add i32 %301, %292
  %331 = shl i32 %330, 3
  %332 = add i32 %131, %11
  %333 = shl i32 %332, 2
  %334 = add i32 %268, %123
  %335 = add i32 %334, %249
  %336 = mul i32 %335, 3
  %337 = add i32 %2, 3
  %338 = sub i32 %337, %30
  %339 = add i32 %338, %130
  %340 = add i32 %339, %9
  %341 = add i32 %340, %196
  %342 = sub i32 %341, %2
  %343 = add i32 %342, %51
  %344 = add i32 %343, %257
  %345 = add i32 %344, %263
  %346 = add i32 %345, %22
  %347 = add i32 %346, %13
  %348 = add i32 %347, %66
  %349 = sub i32 %348, %43
  %350 = add i32 %349, %84
  %351 = add i32 %350, %86
  %352 = sub i32 %351, %88
  %353 = sub i32 %352, %17
  %354 = add i32 %353, %89
  %355 = add i32 %354, %91
  %356 = add i32 %355, %102
  %357 = add i32 %356, %38
  %358 = add i32 %357, %114
  %359 = add i32 %358, %121
  %360 = sub i32 %359, %128
  %361 = sub i32 %360, %137
  %362 = sub i32 %361, %138
  %363 = sub i32 %362, %140
  %364 = add i32 %363, %62
  %365 = sub i32 %364, %145
  %366 = add i32 %365, %68
  %367 = sub i32 %366, %10
  %368 = sub i32 %367, %170
  %369 = sub i32 %368, %4
  %370 = add i32 %369, %205
  %371 = sub i32 %370, %207
  %372 = sub i32 %371, %213
  %373 = add i32 %372, %220
  %374 = sub i32 %373, %229
  %375 = sub i32 %374, %231
  %376 = add i32 %375, %248
  %377 = add i32 %376, %251
  %378 = add i32 %377, %256
  %379 = add i32 %378, %261
  %380 = sub i32 %379, %262
  %381 = add i32 %380, %24
  %382 = sub i32 %381, %279
  %383 = add i32 %382, %282
  %384 = sub i32 %383, %285
  %385 = add i32 %384, %290
  %386 = add i32 %385, %15
  %387 = sub i32 %386, %19
  %388 = add i32 %387, %20
  %389 = sub i32 %388, %21
  %390 = sub i32 %389, %23
  %391 = sub i32 %390, %26
  %392 = sub i32 %391, %29
  %393 = sub i32 %392, %31
  %394 = add i32 %393, %34
  %395 = sub i32 %394, %40
  %396 = add i32 %395, %42
  %397 = sub i32 %396, %44
  %398 = sub i32 %397, %45
  %399 = sub i32 %398, %47
  %400 = add i32 %399, %48
  %401 = sub i32 %400, %49
  %402 = sub i32 %401, %50
  %403 = sub i32 %402, %53
  %404 = add i32 %403, %54
  %405 = add i32 %404, %61
  %406 = add i32 %405, %63
  %407 = sub i32 %406, %67
  %408 = sub i32 %407, %69
  %409 = add i32 %408, %70
  %410 = sub i32 %409, %73
  %411 = add i32 %410, %87
  %412 = add i32 %411, %90
  %413 = add i32 %412, %96
  %414 = sub i32 %413, %103
  %415 = sub i32 %414, %105
  %416 = sub i32 %415, %106
  %417 = sub i32 %416, %113
  %418 = sub i32 %417, %115
  %419 = add i32 %418, %116
  %420 = sub i32 %419, %117
  %421 = sub i32 %420, %118
  %422 = add i32 %421, %122
  %423 = add i32 %422, %123
  %424 = add i32 %423, %126
  %425 = add i32 %424, %127
  %426 = add i32 %425, %129
  %427 = sub i32 %426, %132
  %428 = add i32 %427, %133
  %429 = add i32 %428, %136
  %430 = sub i32 %429, %141
  %431 = sub i32 %430, %146
  %432 = sub i32 %431, %147
  %433 = add i32 %432, %148
  %434 = sub i32 %433, %151
  %435 = add i32 %434, %152
  %436 = sub i32 %435, %153
  %437 = add i32 %436, %155
  %438 = add i32 %437, %36
  %439 = add i32 %438, %156
  %440 = sub i32 %439, %158
  %441 = add i32 %440, %159
  %442 = add i32 %441, %160
  %443 = add i32 %442, %161
  %444 = add i32 %443, %162
  %445 = add i32 %444, %163
  %446 = add i32 %445, %164
  %447 = sub i32 %446, %168
  %448 = add i32 %447, %169
  %449 = add i32 %448, %171
  %450 = sub i32 %449, %173
  %451 = add i32 %450, %174
  %452 = add i32 %451, %175
  %453 = sub i32 %452, %176
  %454 = add i32 %453, %177
  %455 = sub i32 %454, %178
  %456 = add i32 %455, %179
  %457 = sub i32 %456, %180
  %458 = sub i32 %457, %181
  %459 = sub i32 %458, %184
  %460 = sub i32 %459, %187
  %461 = add i32 %460, %189
  %462 = sub i32 %461, %191
  %463 = add i32 %462, %192
  %464 = add i32 %463, %195
  %465 = sub i32 %464, %201
  %466 = add i32 %465, %203
  %467 = sub i32 %466, %204
  %468 = sub i32 %467, %206
  %469 = add i32 %468, %211
  %470 = sub i32 %469, %212
  %471 = add i32 %470, %216
  %472 = add i32 %471, %217
  %473 = add i32 %472, %218
  %474 = sub i32 %473, %221
  %475 = add i32 %474, %223
  %476 = add i32 %475, %224
  %477 = sub i32 %476, %226
  %478 = sub i32 %477, %227
  %479 = sub i32 %478, %228
  %480 = add i32 %479, %230
  %481 = add i32 %480, %232
  %482 = sub i32 %481, %234
  %483 = add i32 %482, %238
  %484 = add i32 %483, %71
  %485 = sub i32 %484, %239
  %486 = add i32 %485, %242
  %487 = add i32 %486, %244
  %488 = sub i32 %487, %247
  %489 = add i32 %488, %250
  %490 = sub i32 %489, %252
  %491 = sub i32 %490, %253
  %492 = sub i32 %491, %254
  %493 = sub i32 %492, %255
  %494 = sub i32 %493, %260
  %495 = sub i32 %494, %272
  %496 = add i32 %495, %273
  %497 = sub i32 %496, %274
  %498 = sub i32 %497, %276
  %499 = sub i32 %498, %277
  %500 = add i32 %499, %278
  %501 = add i32 %500, %280
  %502 = add i32 %501, %281
  %503 = add i32 %502, %283
  %504 = add i32 %503, %284
  %505 = add i32 %504, %286
  %506 = add i32 %505, %287
  %507 = add i32 %506, %288
  %508 = sub i32 %507, %99
  %509 = sub i32 %508, %289
  %510 = add i32 %509, %291
  %511 = add i32 %510, %37
  %512 = add i32 %511, %59
  %513 = sub i32 %512, %72
  %514 = sub i32 %513, %76
  %515 = sub i32 %514, %81
  %516 = sub i32 %515, %101
  %517 = sub i32 %516, %104
  %518 = sub i32 %517, %108
  %519 = sub i32 %518, %110
  %520 = sub i32 %519, %112
  %521 = sub i32 %520, %120
  %522 = sub i32 %521, %135
  %523 = sub i32 %522, %142
  %524 = sub i32 %523, %144
  %525 = sub i32 %524, %149
  %526 = add i32 %525, %183
  %527 = sub i32 %526, %186
  %528 = sub i32 %527, %194
  %529 = sub i32 %528, %198
  %530 = sub i32 %529, %200
  %531 = add i32 %530, %202
  %532 = sub i32 %531, %210
  %533 = sub i32 %532, %215
  %534 = sub i32 %533, %236
  %535 = sub i32 %534, %237
  %536 = add i32 %535, %240
  %537 = add i32 %536, %241
  %538 = sub i32 %537, %246
  %539 = sub i32 %538, %267
  %540 = sub i32 %539, %270
  %541 = add i32 %540, %294
  %542 = add i32 %541, %296
  %543 = add i32 %542, %299
  %544 = add i32 %543, %300
  %545 = add i32 %544, %302
  %546 = add i32 %545, %331
  %547 = add i32 %546, %333
  %548 = sub i32 %547, %167
  %549 = add i32 %548, %329
  %550 = add i32 %549, %336
  %551 = add i32 %550, %326
  %552 = icmp eq i32 %551, %7
  %553 = select i1 %552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %554 = tail call i32 @puts(i8* nonnull dereferenceable(1) %553)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
