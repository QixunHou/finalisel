digraph "DFG for'main' function" {
	Node0x12d65c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12d6648[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x12d66d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x12d6738[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x12d6bb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12d6c98[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x12d6d98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12d6e58[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x12d6f08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12d7168[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x12d7228[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12d7388[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x12d73e8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x12dde50[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x12de058[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12de1b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12de2c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12de388[shape=record, label="  ret i32 0"];
	Node0x12d65c8 -> Node0x12d6648;
	Node0x12d6648 -> Node0x12d66d8;
	Node0x12d66d8 -> Node0x12d6738;
	Node0x12d6738 -> Node0x12d6bb8;
	Node0x12d6bb8 -> Node0x12d6c98;
	Node0x12d6c98 -> Node0x12d6d98;
	Node0x12d6d98 -> Node0x12d6e58;
	Node0x12d6e58 -> Node0x12d6f08;
	Node0x12d6f08 -> Node0x12d7168;
	Node0x12d7168 -> Node0x12d7228;
	Node0x12d7228 -> Node0x12d7388;
	Node0x12d7388 -> Node0x12d73e8;
	Node0x12d73e8 -> Node0x12dde50;
	Node0x12dde50 -> Node0x12de058;
	Node0x12de058 -> Node0x12de1b8;
	Node0x12de1b8 -> Node0x12de2c8;
	Node0x12de2c8 -> Node0x12de388;
edge [color=red]
	Node0x12d65c8 -> Node0x12d6738;
	Node0x12d6738 -> Node0x12d6bb8;
	Node0x12d6648 -> Node0x12d6c98;
	Node0x12d6c98 -> Node0x12d6d98;
	Node0x12d66d8 -> Node0x12d6e58;
	Node0x12d6e58 -> Node0x12d6f08;
	Node0x12d65c8 -> Node0x12d7168;
	Node0x12d6648 -> Node0x12d7168;
	Node0x12d66d8 -> Node0x12d7168;
	Node0x12d65c8 -> Node0x12d7228;
	Node0x12d6648 -> Node0x12d7388;
	Node0x12d66d8 -> Node0x12d73e8;
	Node0x12d7228 -> Node0x12dde50;
	Node0x12d7388 -> Node0x12dde50;
	Node0x12d73e8 -> Node0x12dde50;
	Node0x12d6e58 -> Node0x12de058;
	Node0x12d6c98 -> Node0x12de1b8;
	Node0x12d6738 -> Node0x12de2c8;
}
