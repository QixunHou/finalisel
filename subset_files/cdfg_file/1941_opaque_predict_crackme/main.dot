digraph "DFG for'main' function" {
	Node0x16a4978[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x16a49f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x16a4a88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x16a4ae8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x16a4f68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16a5048[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x16a5148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x16a5208[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x16a52b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16a5518[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x16a55d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x16a6548[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x16a6bb8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x16a6c30[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x16a6ca0[shape=record, label="  %12 = xor i32 %8, -1"];
	Node0x16a6d10[shape=record, label="  %13 = and i32 %10, %12"];
	Node0x16a6d80[shape=record, label="  %14 = xor i32 %9, %8"];
	Node0x16a6df0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x16a6e60[shape=record, label="  %16 = or i32 %13, %15"];
	Node0x16a6ed0[shape=record, label="  %17 = and i32 %8, %11"];
	Node0x16a6f40[shape=record, label="  %18 = and i32 %10, %9"];
	Node0x16a6fb0[shape=record, label="  %19 = or i32 %17, %18"];
	Node0x16a7020[shape=record, label="  %20 = and i32 %9, %8"];
	Node0x16a7090[shape=record, label="  %21 = or i32 %10, %8"];
	Node0x16a7100[shape=record, label="  %22 = xor i32 %21, %20"];
	Node0x16a7170[shape=record, label="  %23 = or i32 %9, %12"];
	Node0x16a71e0[shape=record, label="  %24 = and i32 %23, %10"];
	Node0x16a7250[shape=record, label="  %25 = or i32 %17, %14"];
	Node0x16a72c0[shape=record, label="  %26 = or i32 %17, %9"];
	Node0x16a7330[shape=record, label="  %27 = or i32 %10, %9"];
	Node0x16a73a0[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x16a7410[shape=record, label="  %29 = and i32 %28, %12"];
	Node0x16a7480[shape=record, label="  %30 = and i32 %9, %11"];
	Node0x16a74f0[shape=record, label="  %31 = and i32 %30, %12"];
	Node0x16a7560[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x16a75d0[shape=record, label="  %33 = and i32 %8, %28"];
	Node0x16a7640[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x16a76b0[shape=record, label="  %35 = and i32 %30, %8"];
	Node0x16a7720[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x16a7790[shape=record, label="  %37 = xor i32 %9, -1"];
	Node0x16a7800[shape=record, label="  %38 = and i32 %13, %37"];
	Node0x16a7870[shape=record, label="  %39 = mul i32 %38, 3"];
	Node0x16a78e0[shape=record, label="  %40 = add i32 %22, %24"];
	Node0x16a7950[shape=record, label="  %41 = sub i32 %19, %40"];
	Node0x16a79c0[shape=record, label="  %42 = add i32 %41, %25"];
	Node0x16a7a30[shape=record, label="  %43 = add i32 %42, %26"];
	Node0x16a7aa0[shape=record, label="  %44 = add i32 %43, %29"];
	Node0x16a7b10[shape=record, label="  %45 = sub i32 %44, %32"];
	Node0x16a7b80[shape=record, label="  %46 = sub i32 %45, %34"];
	Node0x16a7bf0[shape=record, label="  %47 = sub i32 %46, %36"];
	Node0x16a7c60[shape=record, label="  %48 = add i32 %47, %39"];
	Node0x16a7cd0[shape=record, label="  %49 = icmp eq i32 %16, %48"];
	Node0x16449d8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x16a7d60[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0x16a7fb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16a8118[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x16a8228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16a82e8[shape=record, label="  ret i32 0"];
	Node0x16a4978 -> Node0x16a49f8;
	Node0x16a49f8 -> Node0x16a4a88;
	Node0x16a4a88 -> Node0x16a4ae8;
	Node0x16a4ae8 -> Node0x16a4f68;
	Node0x16a4f68 -> Node0x16a5048;
	Node0x16a5048 -> Node0x16a5148;
	Node0x16a5148 -> Node0x16a5208;
	Node0x16a5208 -> Node0x16a52b8;
	Node0x16a52b8 -> Node0x16a5518;
	Node0x16a5518 -> Node0x16a55d8;
	Node0x16a55d8 -> Node0x16a6548;
	Node0x16a6548 -> Node0x16a6bb8;
	Node0x16a6bb8 -> Node0x16a6c30;
	Node0x16a6c30 -> Node0x16a6ca0;
	Node0x16a6ca0 -> Node0x16a6d10;
	Node0x16a6d10 -> Node0x16a6d80;
	Node0x16a6d80 -> Node0x16a6df0;
	Node0x16a6df0 -> Node0x16a6e60;
	Node0x16a6e60 -> Node0x16a6ed0;
	Node0x16a6ed0 -> Node0x16a6f40;
	Node0x16a6f40 -> Node0x16a6fb0;
	Node0x16a6fb0 -> Node0x16a7020;
	Node0x16a7020 -> Node0x16a7090;
	Node0x16a7090 -> Node0x16a7100;
	Node0x16a7100 -> Node0x16a7170;
	Node0x16a7170 -> Node0x16a71e0;
	Node0x16a71e0 -> Node0x16a7250;
	Node0x16a7250 -> Node0x16a72c0;
	Node0x16a72c0 -> Node0x16a7330;
	Node0x16a7330 -> Node0x16a73a0;
	Node0x16a73a0 -> Node0x16a7410;
	Node0x16a7410 -> Node0x16a7480;
	Node0x16a7480 -> Node0x16a74f0;
	Node0x16a74f0 -> Node0x16a7560;
	Node0x16a7560 -> Node0x16a75d0;
	Node0x16a75d0 -> Node0x16a7640;
	Node0x16a7640 -> Node0x16a76b0;
	Node0x16a76b0 -> Node0x16a7720;
	Node0x16a7720 -> Node0x16a7790;
	Node0x16a7790 -> Node0x16a7800;
	Node0x16a7800 -> Node0x16a7870;
	Node0x16a7870 -> Node0x16a78e0;
	Node0x16a78e0 -> Node0x16a7950;
	Node0x16a7950 -> Node0x16a79c0;
	Node0x16a79c0 -> Node0x16a7a30;
	Node0x16a7a30 -> Node0x16a7aa0;
	Node0x16a7aa0 -> Node0x16a7b10;
	Node0x16a7b10 -> Node0x16a7b80;
	Node0x16a7b80 -> Node0x16a7bf0;
	Node0x16a7bf0 -> Node0x16a7c60;
	Node0x16a7c60 -> Node0x16a7cd0;
	Node0x16a7cd0 -> Node0x16449d8;
	Node0x16449d8 -> Node0x16a7d60;
	Node0x16a7d60 -> Node0x16a7fb8;
	Node0x16a7fb8 -> Node0x16a8118;
	Node0x16a8118 -> Node0x16a8228;
	Node0x16a8228 -> Node0x16a82e8;
edge [color=red]
	Node0x16a4978 -> Node0x16a4ae8;
	Node0x16a4ae8 -> Node0x16a4f68;
	Node0x16a49f8 -> Node0x16a5048;
	Node0x16a5048 -> Node0x16a5148;
	Node0x16a4a88 -> Node0x16a5208;
	Node0x16a5208 -> Node0x16a52b8;
	Node0x16a4978 -> Node0x16a5518;
	Node0x16a49f8 -> Node0x16a5518;
	Node0x16a4a88 -> Node0x16a5518;
	Node0x16a4978 -> Node0x16a55d8;
	Node0x16a49f8 -> Node0x16a6548;
	Node0x16a4a88 -> Node0x16a6bb8;
	Node0x16a6bb8 -> Node0x16a6c30;
	Node0x16a55d8 -> Node0x16a6ca0;
	Node0x16a6bb8 -> Node0x16a6d10;
	Node0x16a6ca0 -> Node0x16a6d10;
	Node0x16a6548 -> Node0x16a6d80;
	Node0x16a55d8 -> Node0x16a6d80;
	Node0x16a6d80 -> Node0x16a6df0;
	Node0x16a6d10 -> Node0x16a6e60;
	Node0x16a6df0 -> Node0x16a6e60;
	Node0x16a55d8 -> Node0x16a6ed0;
	Node0x16a6c30 -> Node0x16a6ed0;
	Node0x16a6bb8 -> Node0x16a6f40;
	Node0x16a6548 -> Node0x16a6f40;
	Node0x16a6ed0 -> Node0x16a6fb0;
	Node0x16a6f40 -> Node0x16a6fb0;
	Node0x16a6548 -> Node0x16a7020;
	Node0x16a55d8 -> Node0x16a7020;
	Node0x16a6bb8 -> Node0x16a7090;
	Node0x16a55d8 -> Node0x16a7090;
	Node0x16a7090 -> Node0x16a7100;
	Node0x16a7020 -> Node0x16a7100;
	Node0x16a6548 -> Node0x16a7170;
	Node0x16a6ca0 -> Node0x16a7170;
	Node0x16a7170 -> Node0x16a71e0;
	Node0x16a6bb8 -> Node0x16a71e0;
	Node0x16a6ed0 -> Node0x16a7250;
	Node0x16a6d80 -> Node0x16a7250;
	Node0x16a6ed0 -> Node0x16a72c0;
	Node0x16a6548 -> Node0x16a72c0;
	Node0x16a6bb8 -> Node0x16a7330;
	Node0x16a6548 -> Node0x16a7330;
	Node0x16a7330 -> Node0x16a73a0;
	Node0x16a73a0 -> Node0x16a7410;
	Node0x16a6ca0 -> Node0x16a7410;
	Node0x16a6548 -> Node0x16a7480;
	Node0x16a6c30 -> Node0x16a7480;
	Node0x16a7480 -> Node0x16a74f0;
	Node0x16a6ca0 -> Node0x16a74f0;
	Node0x16a74f0 -> Node0x16a7560;
	Node0x16a55d8 -> Node0x16a75d0;
	Node0x16a73a0 -> Node0x16a75d0;
	Node0x16a75d0 -> Node0x16a7640;
	Node0x16a7480 -> Node0x16a76b0;
	Node0x16a55d8 -> Node0x16a76b0;
	Node0x16a76b0 -> Node0x16a7720;
	Node0x16a6548 -> Node0x16a7790;
	Node0x16a6d10 -> Node0x16a7800;
	Node0x16a7790 -> Node0x16a7800;
	Node0x16a7800 -> Node0x16a7870;
	Node0x16a7100 -> Node0x16a78e0;
	Node0x16a71e0 -> Node0x16a78e0;
	Node0x16a6fb0 -> Node0x16a7950;
	Node0x16a78e0 -> Node0x16a7950;
	Node0x16a7950 -> Node0x16a79c0;
	Node0x16a7250 -> Node0x16a79c0;
	Node0x16a79c0 -> Node0x16a7a30;
	Node0x16a72c0 -> Node0x16a7a30;
	Node0x16a7a30 -> Node0x16a7aa0;
	Node0x16a7410 -> Node0x16a7aa0;
	Node0x16a7aa0 -> Node0x16a7b10;
	Node0x16a7560 -> Node0x16a7b10;
	Node0x16a7b10 -> Node0x16a7b80;
	Node0x16a7640 -> Node0x16a7b80;
	Node0x16a7b80 -> Node0x16a7bf0;
	Node0x16a7720 -> Node0x16a7bf0;
	Node0x16a7bf0 -> Node0x16a7c60;
	Node0x16a7870 -> Node0x16a7c60;
	Node0x16a6e60 -> Node0x16a7cd0;
	Node0x16a7c60 -> Node0x16a7cd0;
	Node0x16a7cd0 -> Node0x16449d8;
	Node0x16449d8 -> Node0x16a7d60;
	Node0x16a5208 -> Node0x16a7fb8;
	Node0x16a5048 -> Node0x16a8118;
	Node0x16a4ae8 -> Node0x16a8228;
}
