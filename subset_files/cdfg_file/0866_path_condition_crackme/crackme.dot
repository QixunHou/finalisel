digraph "DFG for'crackme' function" {
	Node0x174d7d0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x174de50[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x174dec0[shape=record, label="  %7 = or i32 %6, %3"];
	Node0x174df60[shape=record, label="  %8 = mul i32 %7, 3"];
	Node0x174dfd0[shape=record, label="  %9 = add i32 %8, %5"];
	Node0x174e040[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x174e0b0[shape=record, label="  %11 = or i32 %10, %1"];
	Node0x174e120[shape=record, label="  %12 = xor i32 %2, %1"];
	Node0x174e1c0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x174e260[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x174e2d0[shape=record, label="  %15 = add i32 %2, 1"];
	Node0x174e340[shape=record, label="  %16 = and i32 %2, %1"];
	Node0x174e3b0[shape=record, label="  %17 = and i32 %10, %1"];
	Node0x174e420[shape=record, label="  %18 = xor i32 %5, -1"];
	Node0x174e4c0[shape=record, label="  %19 = mul i32 %18, 5"];
	Node0x174e530[shape=record, label="  %20 = shl i32 %11, 1"];
	Node0x174e5a0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x174e610[shape=record, label="  %22 = xor i32 %3, %0"];
	Node0x174e680[shape=record, label="  %23 = shl i32 %3, 1"];
	Node0x174e6f0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x174e760[shape=record, label="  %25 = and i32 %3, %0"];
	Node0x174e7d0[shape=record, label="  %26 = xor i32 %22, -1"];
	Node0x174e840[shape=record, label="  %27 = or i32 %3, %0"];
	Node0x174e8b0[shape=record, label="  %28 = and i32 %6, %3"];
	Node0x174e950[shape=record, label="  %29 = shl i32 %27, 2"];
	Node0x174e9f0[shape=record, label="  %30 = xor i32 %29, -4"];
	Node0x174ea60[shape=record, label="  %31 = xor i32 %7, -1"];
	Node0x174ead0[shape=record, label="  %32 = add i32 %16, %31"];
	Node0x174ed50[shape=record, label="  %33 = add i32 %32, %28"];
	Node0x174edc0[shape=record, label="  %34 = mul i32 %33, 3"];
	Node0x174ee30[shape=record, label="  %35 = add i32 %25, %17"];
	Node0x174eea0[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x174ef10[shape=record, label="  %37 = sub i32 3, %0"];
	Node0x174ef80[shape=record, label="  %38 = add i32 %37, %15"];
	Node0x174eff0[shape=record, label="  %39 = add i32 %38, %2"];
	Node0x174f060[shape=record, label="  %40 = add i32 %39, %11"];
	Node0x174f0d0[shape=record, label="  %41 = add i32 %40, %16"];
	Node0x174f140[shape=record, label="  %42 = add i32 %41, %12"];
	Node0x174f1b0[shape=record, label="  %43 = add i32 %42, %17"];
	Node0x174f220[shape=record, label="  %44 = sub i32 %43, %3"];
	Node0x174f290[shape=record, label="  %45 = add i32 %44, %19"];
	Node0x174f300[shape=record, label="  %46 = sub i32 %45, %22"];
	Node0x174f370[shape=record, label="  %47 = add i32 %46, %25"];
	Node0x174f3e0[shape=record, label="  %48 = add i32 %47, %26"];
	Node0x174f450[shape=record, label="  %49 = add i32 %48, %27"];
	Node0x174f4c0[shape=record, label="  %50 = add i32 %49, %28"];
	Node0x174f530[shape=record, label="  %51 = sub i32 %50, %14"];
	Node0x174f5a0[shape=record, label="  %52 = add i32 %51, %21"];
	Node0x174f610[shape=record, label="  %53 = sub i32 %52, %24"];
	Node0x174f680[shape=record, label="  %54 = add i32 %53, %30"];
	Node0x174f6f0[shape=record, label="  %55 = add i32 %54, %36"];
	Node0x174f760[shape=record, label="  %56 = add i32 %55, %34"];
	Node0x174f7d0[shape=record, label="  %57 = icmp eq i32 %9, %56"];
	Node0x16ee268[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x174fc70[shape=record, label="  %59 = tail call i32 @puts(i8* nonnull dereferenceable(1) %58)"];
	Node0x174fcc0[shape=record, label="  ret void"];
	Node0x174d7d0 -> Node0x174de50;
	Node0x174de50 -> Node0x174dec0;
	Node0x174dec0 -> Node0x174df60;
	Node0x174df60 -> Node0x174dfd0;
	Node0x174dfd0 -> Node0x174e040;
	Node0x174e040 -> Node0x174e0b0;
	Node0x174e0b0 -> Node0x174e120;
	Node0x174e120 -> Node0x174e1c0;
	Node0x174e1c0 -> Node0x174e260;
	Node0x174e260 -> Node0x174e2d0;
	Node0x174e2d0 -> Node0x174e340;
	Node0x174e340 -> Node0x174e3b0;
	Node0x174e3b0 -> Node0x174e420;
	Node0x174e420 -> Node0x174e4c0;
	Node0x174e4c0 -> Node0x174e530;
	Node0x174e530 -> Node0x174e5a0;
	Node0x174e5a0 -> Node0x174e610;
	Node0x174e610 -> Node0x174e680;
	Node0x174e680 -> Node0x174e6f0;
	Node0x174e6f0 -> Node0x174e760;
	Node0x174e760 -> Node0x174e7d0;
	Node0x174e7d0 -> Node0x174e840;
	Node0x174e840 -> Node0x174e8b0;
	Node0x174e8b0 -> Node0x174e950;
	Node0x174e950 -> Node0x174e9f0;
	Node0x174e9f0 -> Node0x174ea60;
	Node0x174ea60 -> Node0x174ead0;
	Node0x174ead0 -> Node0x174ed50;
	Node0x174ed50 -> Node0x174edc0;
	Node0x174edc0 -> Node0x174ee30;
	Node0x174ee30 -> Node0x174eea0;
	Node0x174eea0 -> Node0x174ef10;
	Node0x174ef10 -> Node0x174ef80;
	Node0x174ef80 -> Node0x174eff0;
	Node0x174eff0 -> Node0x174f060;
	Node0x174f060 -> Node0x174f0d0;
	Node0x174f0d0 -> Node0x174f140;
	Node0x174f140 -> Node0x174f1b0;
	Node0x174f1b0 -> Node0x174f220;
	Node0x174f220 -> Node0x174f290;
	Node0x174f290 -> Node0x174f300;
	Node0x174f300 -> Node0x174f370;
	Node0x174f370 -> Node0x174f3e0;
	Node0x174f3e0 -> Node0x174f450;
	Node0x174f450 -> Node0x174f4c0;
	Node0x174f4c0 -> Node0x174f530;
	Node0x174f530 -> Node0x174f5a0;
	Node0x174f5a0 -> Node0x174f610;
	Node0x174f610 -> Node0x174f680;
	Node0x174f680 -> Node0x174f6f0;
	Node0x174f6f0 -> Node0x174f760;
	Node0x174f760 -> Node0x174f7d0;
	Node0x174f7d0 -> Node0x16ee268;
	Node0x16ee268 -> Node0x174fc70;
	Node0x174fc70 -> Node0x174fcc0;
edge [color=red]
	Node0x174de50 -> Node0x174dec0;
	Node0x174dec0 -> Node0x174df60;
	Node0x174df60 -> Node0x174dfd0;
	Node0x174d7d0 -> Node0x174dfd0;
	Node0x174e040 -> Node0x174e0b0;
	Node0x174e120 -> Node0x174e1c0;
	Node0x174e1c0 -> Node0x174e260;
	Node0x174e040 -> Node0x174e3b0;
	Node0x174d7d0 -> Node0x174e420;
	Node0x174e420 -> Node0x174e4c0;
	Node0x174e0b0 -> Node0x174e530;
	Node0x174e530 -> Node0x174e5a0;
	Node0x174e680 -> Node0x174e6f0;
	Node0x174e610 -> Node0x174e7d0;
	Node0x174de50 -> Node0x174e8b0;
	Node0x174e840 -> Node0x174e950;
	Node0x174e950 -> Node0x174e9f0;
	Node0x174dec0 -> Node0x174ea60;
	Node0x174e340 -> Node0x174ead0;
	Node0x174ea60 -> Node0x174ead0;
	Node0x174ead0 -> Node0x174ed50;
	Node0x174e8b0 -> Node0x174ed50;
	Node0x174ed50 -> Node0x174edc0;
	Node0x174e760 -> Node0x174ee30;
	Node0x174e3b0 -> Node0x174ee30;
	Node0x174ee30 -> Node0x174eea0;
	Node0x174ef10 -> Node0x174ef80;
	Node0x174e2d0 -> Node0x174ef80;
	Node0x174ef80 -> Node0x174eff0;
	Node0x174eff0 -> Node0x174f060;
	Node0x174e0b0 -> Node0x174f060;
	Node0x174f060 -> Node0x174f0d0;
	Node0x174e340 -> Node0x174f0d0;
	Node0x174f0d0 -> Node0x174f140;
	Node0x174e120 -> Node0x174f140;
	Node0x174f140 -> Node0x174f1b0;
	Node0x174e3b0 -> Node0x174f1b0;
	Node0x174f1b0 -> Node0x174f220;
	Node0x174f220 -> Node0x174f290;
	Node0x174e4c0 -> Node0x174f290;
	Node0x174f290 -> Node0x174f300;
	Node0x174e610 -> Node0x174f300;
	Node0x174f300 -> Node0x174f370;
	Node0x174e760 -> Node0x174f370;
	Node0x174f370 -> Node0x174f3e0;
	Node0x174e7d0 -> Node0x174f3e0;
	Node0x174f3e0 -> Node0x174f450;
	Node0x174e840 -> Node0x174f450;
	Node0x174f450 -> Node0x174f4c0;
	Node0x174e8b0 -> Node0x174f4c0;
	Node0x174f4c0 -> Node0x174f530;
	Node0x174e260 -> Node0x174f530;
	Node0x174f530 -> Node0x174f5a0;
	Node0x174e5a0 -> Node0x174f5a0;
	Node0x174f5a0 -> Node0x174f610;
	Node0x174e6f0 -> Node0x174f610;
	Node0x174f610 -> Node0x174f680;
	Node0x174e9f0 -> Node0x174f680;
	Node0x174f680 -> Node0x174f6f0;
	Node0x174eea0 -> Node0x174f6f0;
	Node0x174f6f0 -> Node0x174f760;
	Node0x174edc0 -> Node0x174f760;
	Node0x174dfd0 -> Node0x174f7d0;
	Node0x174f760 -> Node0x174f7d0;
	Node0x174f7d0 -> Node0x16ee268;
	Node0x16ee268 -> Node0x174fc70;
}
