digraph "DFG for'main' function" {
	Node0x21cb948[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21cb9c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21cba58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x21cbeb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x21cbf98[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x21cc0b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21cc2f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x21cc3a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21cd318[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21cd9a0[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x21cda10[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x21cda80[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x21cdaf0[shape=record, label="  %11 = sub i32 %8, %10"];
	Node0x21cdb60[shape=record, label="  %12 = xor i32 %9, -1"];
	Node0x21cdbd0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x21cdc40[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x21cdcb0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x21cdd20[shape=record, label="  %16 = xor i32 %8, -1"];
	Node0x21cdd90[shape=record, label="  %17 = xor i32 %6, 2147483647"];
	Node0x21cde00[shape=record, label="  %18 = and i32 %17, %7"];
	Node0x21cde70[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x21cdee0[shape=record, label="  %20 = sub i32 %6, %7"];
	Node0x21cdf50[shape=record, label="  %21 = add i32 %20, %12"];
	Node0x21cdfc0[shape=record, label="  %22 = add i32 %21, %16"];
	Node0x21ce030[shape=record, label="  %23 = add i32 %22, %19"];
	Node0x21ce0a0[shape=record, label="  %24 = sub i32 %23, %15"];
	Node0x21ce110[shape=record, label="  %25 = icmp eq i32 %11, %24"];
	Node0x216c9d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x21ce1a0[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0x21ce3f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21ce558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x21ce618[shape=record, label="  ret i32 0"];
	Node0x21cb948 -> Node0x21cb9c8;
	Node0x21cb9c8 -> Node0x21cba58;
	Node0x21cba58 -> Node0x21cbeb8;
	Node0x21cbeb8 -> Node0x21cbf98;
	Node0x21cbf98 -> Node0x21cc0b8;
	Node0x21cc0b8 -> Node0x21cc2f0;
	Node0x21cc2f0 -> Node0x21cc3a8;
	Node0x21cc3a8 -> Node0x21cd318;
	Node0x21cd318 -> Node0x21cd9a0;
	Node0x21cd9a0 -> Node0x21cda10;
	Node0x21cda10 -> Node0x21cda80;
	Node0x21cda80 -> Node0x21cdaf0;
	Node0x21cdaf0 -> Node0x21cdb60;
	Node0x21cdb60 -> Node0x21cdbd0;
	Node0x21cdbd0 -> Node0x21cdc40;
	Node0x21cdc40 -> Node0x21cdcb0;
	Node0x21cdcb0 -> Node0x21cdd20;
	Node0x21cdd20 -> Node0x21cdd90;
	Node0x21cdd90 -> Node0x21cde00;
	Node0x21cde00 -> Node0x21cde70;
	Node0x21cde70 -> Node0x21cdee0;
	Node0x21cdee0 -> Node0x21cdf50;
	Node0x21cdf50 -> Node0x21cdfc0;
	Node0x21cdfc0 -> Node0x21ce030;
	Node0x21ce030 -> Node0x21ce0a0;
	Node0x21ce0a0 -> Node0x21ce110;
	Node0x21ce110 -> Node0x216c9d8;
	Node0x216c9d8 -> Node0x21ce1a0;
	Node0x21ce1a0 -> Node0x21ce3f8;
	Node0x21ce3f8 -> Node0x21ce558;
	Node0x21ce558 -> Node0x21ce618;
edge [color=red]
	Node0x21cb948 -> Node0x21cba58;
	Node0x21cba58 -> Node0x21cbeb8;
	Node0x21cb9c8 -> Node0x21cbf98;
	Node0x21cbf98 -> Node0x21cc0b8;
	Node0x21cb948 -> Node0x21cc2f0;
	Node0x21cb9c8 -> Node0x21cc2f0;
	Node0x21cb948 -> Node0x21cc3a8;
	Node0x21cb9c8 -> Node0x21cd318;
	Node0x21cd318 -> Node0x21cd9a0;
	Node0x21cc3a8 -> Node0x21cd9a0;
	Node0x21cd318 -> Node0x21cda10;
	Node0x21cc3a8 -> Node0x21cda10;
	Node0x21cda10 -> Node0x21cda80;
	Node0x21cd9a0 -> Node0x21cdaf0;
	Node0x21cda80 -> Node0x21cdaf0;
	Node0x21cda10 -> Node0x21cdb60;
	Node0x21cd318 -> Node0x21cdbd0;
	Node0x21cc3a8 -> Node0x21cdbd0;
	Node0x21cdbd0 -> Node0x21cdc40;
	Node0x21cdc40 -> Node0x21cdcb0;
	Node0x21cd9a0 -> Node0x21cdd20;
	Node0x21cc3a8 -> Node0x21cdd90;
	Node0x21cdd90 -> Node0x21cde00;
	Node0x21cd318 -> Node0x21cde00;
	Node0x21cde00 -> Node0x21cde70;
	Node0x21cc3a8 -> Node0x21cdee0;
	Node0x21cd318 -> Node0x21cdee0;
	Node0x21cdee0 -> Node0x21cdf50;
	Node0x21cdb60 -> Node0x21cdf50;
	Node0x21cdf50 -> Node0x21cdfc0;
	Node0x21cdd20 -> Node0x21cdfc0;
	Node0x21cdfc0 -> Node0x21ce030;
	Node0x21cde70 -> Node0x21ce030;
	Node0x21ce030 -> Node0x21ce0a0;
	Node0x21cdcb0 -> Node0x21ce0a0;
	Node0x21cdaf0 -> Node0x21ce110;
	Node0x21ce0a0 -> Node0x21ce110;
	Node0x21ce110 -> Node0x216c9d8;
	Node0x216c9d8 -> Node0x21ce1a0;
	Node0x21cbf98 -> Node0x21ce3f8;
	Node0x21cba58 -> Node0x21ce558;
}
