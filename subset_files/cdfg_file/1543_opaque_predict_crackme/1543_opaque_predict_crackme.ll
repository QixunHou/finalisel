; ModuleID = '../.././c_source_file/1543_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1543_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = and i32 %2, %1
  %9 = and i32 %8, %7
  %10 = or i32 %2, %1
  %11 = and i32 %10, %0
  %12 = or i32 %9, %11
  %13 = or i32 %5, %4
  %14 = xor i32 %4, %3
  %15 = xor i32 %14, -1
  %16 = and i32 %13, %15
  %17 = add i32 %16, %12
  %18 = sub i32 0, %17
  %19 = xor i32 %1, -1
  %20 = and i32 %19, %2
  %21 = and i32 %20, %7
  %22 = xor i32 %2, %1
  %23 = or i32 %22, %7
  %24 = xor i32 %23, -1
  %25 = or i32 %21, %24
  %26 = and i32 %2, %0
  %27 = xor i32 %26, -1
  %28 = add i32 %26, 1
  %29 = xor i32 %1, %0
  %30 = xor i32 %2, %0
  %31 = or i32 %30, %29
  %32 = xor i32 %29, -1
  %33 = add i32 %29, 1
  %34 = and i32 %8, %0
  %35 = and i32 %10, %7
  %36 = xor i32 %34, -1
  %37 = xor i32 %35, %36
  %38 = xor i32 %2, -1
  %39 = or i32 %38, %1
  %40 = and i32 %39, %0
  %41 = or i32 %2, %0
  %42 = xor i32 %30, -1
  %43 = and i32 %42, %1
  %44 = or i32 %19, %2
  %45 = and i32 %44, %0
  %46 = or i32 %21, %45
  %47 = and i32 %20, %0
  %48 = xor i32 %44, %0
  %49 = or i32 %47, %48
  %50 = and i32 %30, %19
  %51 = shl i32 %50, 1
  %52 = or i32 %38, %0
  %53 = xor i32 %52, -1
  %54 = or i32 %53, %32
  %55 = or i32 %42, %19
  %56 = and i32 %1, %0
  %57 = xor i32 %56, -1
  %58 = and i32 %22, %57
  %59 = or i32 %19, %0
  %60 = xor i32 %59, -1
  %61 = xor i32 %22, -1
  %62 = or i32 %61, %60
  %63 = and i32 %38, %1
  %64 = or i32 %63, %0
  %65 = xor i32 %39, %0
  %66 = xor i32 %41, -1
  %67 = or i32 %29, %66
  %68 = or i32 %30, %60
  %69 = or i32 %63, %7
  %70 = or i32 %26, %63
  %71 = and i32 %38, %0
  %72 = xor i32 %39, -1
  %73 = or i32 %71, %72
  %74 = and i32 %32, %2
  %75 = or i32 %39, %0
  %76 = and i32 %30, %32
  %77 = xor i32 %39, %56
  %78 = and i32 %57, %2
  %79 = and i32 %22, %7
  %80 = xor i32 %79, 1073741823
  %81 = xor i32 %80, %34
  %82 = shl i32 %81, 2
  %83 = xor i32 %71, %1
  %84 = xor i32 %8, -1
  %85 = xor i32 %84, %0
  %86 = shl i32 %85, 1
  %87 = or i32 %34, %35
  %88 = and i32 %19, %0
  %89 = or i32 %22, %88
  %90 = xor i32 %10, -1
  %91 = or i32 %90, %7
  %92 = or i32 %8, %0
  %93 = or i32 %63, %88
  %94 = add i32 %1, 1
  %95 = and i32 %61, %0
  %96 = or i32 %53, %19
  %97 = and i32 %59, %38
  %98 = or i32 %1, %0
  %99 = and i32 %22, %98
  %100 = and i32 %22, %0
  %101 = and i32 %84, %0
  %102 = xor i32 %71, -1
  %103 = add i32 %71, 1
  %104 = xor i32 %88, -1
  %105 = and i32 %61, %104
  %106 = or i32 %26, %60
  %107 = and i32 %27, %32
  %108 = and i32 %29, %2
  %109 = xor i32 %56, %2
  %110 = or i32 %72, %0
  %111 = xor i32 %22, %0
  %112 = xor i32 %34, %111
  %113 = or i32 %71, %19
  %114 = shl i32 %113, 1
  %115 = xor i32 %98, -1
  %116 = or i32 %38, %115
  %117 = shl i32 %116, 1
  %118 = or i32 %71, %8
  %119 = and i32 %30, %29
  %120 = xor i32 %10, %0
  %121 = xor i32 %120, %36
  %122 = or i32 %38, %32
  %123 = and i32 %98, %61
  %124 = and i32 %29, %102
  %125 = add i32 %39, 1
  %126 = or i32 %32, %2
  %127 = and i32 %41, %29
  %128 = and i32 %44, %7
  %129 = xor i32 %128, -1
  %130 = xor i32 %47, %129
  %131 = xor i32 %10, %56
  %132 = xor i32 %63, -1
  %133 = xor i32 %26, %132
  %134 = xor i32 %27, %1
  %135 = and i32 %59, %42
  %136 = and i32 %104, %2
  %137 = or i32 %66, %32
  %138 = or i32 %56, %90
  %139 = or i32 %53, %1
  %140 = xor i32 %71, %84
  %141 = and i32 %41, %1
  %142 = and i32 %41, %32
  %143 = or i32 %132, %7
  %144 = and i32 %30, %57
  %145 = or i32 %22, %0
  %146 = xor i32 %145, -1
  %147 = or i32 %47, %146
  %148 = or i32 %42, %32
  %149 = and i32 %38, %57
  %150 = shl i32 %149, 1
  %151 = xor i32 %111, -1
  %152 = or i32 %34, %151
  %153 = xor i32 %88, %2
  %154 = shl i32 %153, 1
  %155 = or i32 %47, %111
  %156 = xor i32 %45, -1
  %157 = xor i32 %21, %156
  %158 = or i32 %26, %90
  %159 = and i32 %27, %19
  %160 = or i32 %26, %115
  %161 = or i32 %30, %56
  %162 = xor i32 %98, %2
  %163 = shl i32 %162, 1
  %164 = or i32 %30, %32
  %165 = or i32 %88, %2
  %166 = or i32 %88, %61
  %167 = or i32 %22, %115
  %168 = xor i32 %52, %1
  %169 = or i32 %30, %88
  %170 = or i32 %42, %60
  %171 = and i32 %29, %27
  %172 = xor i32 %71, %39
  %173 = xor i32 %52, %56
  %174 = and i32 %27, %1
  %175 = add i32 %8, 1
  %176 = or i32 %56, %53
  %177 = and i32 %59, %2
  %178 = add i32 %10, 1
  %179 = or i32 %61, %0
  %180 = and i32 %38, %104
  %181 = or i32 %38, %60
  %182 = shl i32 %181, 1
  %183 = or i32 %29, %42
  %184 = and i32 %52, %32
  %185 = xor i32 %60, %2
  %186 = shl i32 %185, 1
  %187 = and i32 %52, %19
  %188 = or i32 %29, %53
  %189 = xor i32 %8, %0
  %190 = xor i32 %41, %1
  %191 = xor i32 %102, %1
  %192 = and i32 %42, %57
  %193 = or i32 %42, %115
  %194 = or i32 %90, %0
  %195 = xor i32 %88, %132
  %196 = or i32 %71, %32
  %197 = shl i32 %1, 2
  %198 = or i32 %47, %128
  %199 = or i32 %84, %7
  %200 = shl i32 %199, 1
  %201 = and i32 %30, %98
  %202 = or i32 %22, %60
  %203 = and i32 %98, %38
  %204 = shl i32 %203, 1
  %205 = or i32 %26, %29
  %206 = xor i32 %48, 2147483647
  %207 = xor i32 %206, %47
  %208 = and i32 %52, %1
  %209 = and i32 %29, %42
  %210 = xor i32 %21, %23
  %211 = xor i32 %115, %2
  %212 = or i32 %42, %1
  %213 = xor i32 %88, %84
  %214 = xor i32 %47, %145
  %215 = xor i32 %72, %0
  %216 = and i32 %132, %7
  %217 = shl i32 %7, 2
  %218 = shl i32 %57, 1
  %219 = and i32 %30, %59
  %220 = and i32 %29, %38
  %221 = or i32 %56, %42
  %222 = or i32 %39, %7
  %223 = shl i32 %222, 1
  %224 = xor i32 %66, %1
  %225 = xor i32 %9, -1
  %226 = xor i32 %11, %225
  %227 = and i32 %102, %1
  %228 = xor i32 %104, %2
  %229 = and i32 %38, %32
  %230 = or i32 %72, %7
  %231 = and i32 %30, %104
  %232 = and i32 %59, %61
  %233 = or i32 %56, %2
  %234 = and i32 %42, %104
  %235 = or i32 %115, %2
  %236 = and i32 %22, %59
  %237 = or i32 %66, %1
  %238 = and i32 %102, %19
  %239 = or i32 %56, %72
  %240 = and i32 %84, %7
  %241 = or i32 %9, %100
  %242 = xor i32 %61, %0
  %243 = shl i32 %242, 1
  %244 = xor i32 %100, %225
  %245 = and i32 %98, %42
  %246 = or i32 %10, %0
  %247 = or i32 %61, %7
  %248 = or i32 %132, %0
  %249 = and i32 %61, %7
  %250 = or i32 %71, %29
  %251 = xor i32 %53, %1
  %252 = shl i32 %251, 1
  %253 = xor i32 %47, %151
  %254 = or i32 %61, %115
  %255 = and i32 %61, %57
  %256 = and i32 %52, %29
  %257 = xor i32 %59, %2
  %258 = xor i32 %26, %10
  %259 = or i32 %84, %0
  %260 = or i32 %88, %42
  %261 = or i32 %8, %88
  %262 = or i32 %30, %19
  %263 = shl i32 %262, 1
  %264 = and i32 %42, %32
  %265 = add i32 %63, 1
  %266 = or i32 %71, %1
  %267 = or i32 %26, %32
  %268 = or i32 %29, %2
  %269 = shl i32 %268, 1
  %270 = or i32 %10, %7
  %271 = or i32 %26, %19
  %272 = or i32 %34, %120
  %273 = xor i32 %90, %0
  %274 = add i32 %41, 1
  %275 = and i32 %98, %2
  %276 = shl i32 %275, 1
  %277 = xor i32 %26, %1
  %278 = and i32 %30, %1
  %279 = shl i32 %278, 2
  %280 = or i32 %29, %38
  %281 = xor i32 %26, %59
  %282 = xor i32 %132, %0
  %283 = or i32 %30, %115
  %284 = or i32 %56, %66
  %285 = or i32 %30, %1
  %286 = add i32 %2, 1
  %287 = xor i32 %57, %2
  %288 = or i32 %26, %1
  %289 = and i32 %41, %19
  %290 = or i32 %8, %7
  %291 = or i32 %56, %61
  %292 = and i32 %90, %7
  %293 = mul i32 %292, 10
  %294 = and i32 %63, %7
  %295 = mul i32 %294, 19
  %296 = and i32 %90, %0
  %297 = mul i32 %296, 7
  %298 = and i32 %63, %0
  %299 = and i32 %72, %7
  %300 = shl i32 %9, 2
  %301 = and i32 %72, %0
  %302 = and i32 %4, %3
  %303 = xor i32 %302, -1
  %304 = and i32 %303, %5
  %305 = shl i32 %304, 1
  %306 = xor i32 %5, -1
  %307 = and i32 %306, %4
  %308 = and i32 %5, %3
  %309 = or i32 %307, %308
  %310 = xor i32 %3, -1
  %311 = and i32 %310, %4
  %312 = and i32 %306, %3
  %313 = xor i32 %312, -1
  %314 = xor i32 %311, %313
  %315 = xor i32 %4, -1
  %316 = or i32 %306, %3
  %317 = and i32 %316, %315
  %318 = xor i32 %13, -1
  %319 = or i32 %302, %318
  %320 = xor i32 %13, %3
  %321 = xor i32 %308, -1
  %322 = or i32 %321, %315
  %323 = xor i32 %5, %4
  %324 = xor i32 %323, -1
  %325 = and i32 %324, %15
  %326 = xor i32 %5, %3
  %327 = xor i32 %326, -1
  %328 = and i32 %327, %315
  %329 = xor i32 %307, -1
  %330 = xor i32 %329, %3
  %331 = or i32 %307, %3
  %332 = or i32 %323, %310
  %333 = or i32 %306, %4
  %334 = xor i32 %333, -1
  %335 = xor i32 %334, %3
  %336 = or i32 %308, %4
  %337 = or i32 %334, %3
  %338 = and i32 %324, %3
  %339 = or i32 %4, %3
  %340 = xor i32 %339, -1
  %341 = or i32 %324, %340
  %342 = and i32 %308, %4
  %343 = xor i32 %326, %4
  %344 = xor i32 %343, -1
  %345 = or i32 %342, %344
  %346 = and i32 %14, %5
  %347 = or i32 %326, %302
  %348 = xor i32 %316, -1
  %349 = or i32 %348, %315
  %350 = and i32 %326, %4
  %351 = or i32 %5, %3
  %352 = xor i32 %351, %4
  %353 = xor i32 %352, -1
  %354 = xor i32 %342, %353
  %355 = xor i32 %313, %4
  %356 = xor i32 %351, -1
  %357 = or i32 %356, %4
  %358 = and i32 %323, %15
  %359 = or i32 %348, %4
  %360 = or i32 %327, %315
  %361 = and i32 %308, %315
  %362 = and i32 %351, %4
  %363 = xor i32 %362, -1
  %364 = xor i32 %361, %363
  %365 = or i32 %310, %4
  %366 = xor i32 %365, %306
  %367 = and i32 %327, %4
  %368 = xor i32 %340, %5
  %369 = or i32 %302, %324
  %370 = or i32 %302, %356
  %371 = and i32 %329, %3
  %372 = add i32 %4, 1
  %373 = or i32 %340, %5
  %374 = and i32 %310, %5
  %375 = and i32 %374, %315
  %376 = or i32 %310, %5
  %377 = and i32 %376, %4
  %378 = xor i32 %377, -1
  %379 = xor i32 %375, %378
  %380 = and i32 %14, %329
  %381 = or i32 %311, %5
  %382 = or i32 %321, %4
  %383 = shl i32 %382, 1
  %384 = xor i32 %13, %302
  %385 = xor i32 %333, %302
  %386 = or i32 %302, %334
  %387 = and i32 %323, %14
  %388 = or i32 %316, %315
  %389 = xor i32 %307, %321
  %390 = shl i32 %389, 1
  %391 = xor i32 %316, %302
  %392 = and i32 %329, %310
  %393 = shl i32 %333, 1
  %394 = and i32 %374, %4
  %395 = and i32 %376, %315
  %396 = or i32 %394, %395
  %397 = or i32 %324, %310
  %398 = xor i32 %327, %4
  %399 = shl i32 %398, 1
  %400 = and i32 %365, %327
  %401 = or i32 %326, %340
  %402 = shl i32 %401, 1
  %403 = shl i32 %352, 1
  %404 = and i32 %5, %4
  %405 = or i32 %404, %15
  %406 = and i32 %323, %365
  %407 = xor i32 %351, %302
  %408 = or i32 %311, %324
  %409 = shl i32 %408, 1
  %410 = or i32 %14, %324
  %411 = or i32 %311, %306
  %412 = xor i32 %311, -1
  %413 = and i32 %326, %412
  %414 = or i32 %302, %327
  %415 = or i32 %312, %311
  %416 = or i32 %327, %4
  %417 = or i32 %404, %14
  %418 = xor i32 %404, -1
  %419 = and i32 %418, %3
  %420 = and i32 %15, %5
  %421 = xor i32 %307, %3
  %422 = xor i32 %404, %313
  %423 = add i32 %316, 1
  %424 = or i32 %306, %340
  %425 = or i32 %404, %356
  %426 = or i32 %318, %15
  %427 = or i32 %302, %306
  %428 = or i32 %324, %15
  %429 = shl i32 %428, 1
  %430 = xor i32 %404, %339
  %431 = xor i32 %316, %4
  %432 = and i32 %324, %412
  %433 = xor i32 %318, %3
  %434 = xor i32 %348, %4
  %435 = and i32 %13, %310
  %436 = and i32 %14, %324
  %437 = or i32 %326, %4
  %438 = xor i32 %321, %4
  %439 = and i32 %333, %14
  %440 = and i32 %339, %5
  %441 = xor i32 %311, %321
  %442 = or i32 %313, %315
  %443 = and i32 %327, %412
  %444 = shl i32 %443, 1
  %445 = and i32 %13, %3
  %446 = and i32 %333, %3
  %447 = xor i32 %303, %5
  %448 = or i32 %404, %312
  %449 = or i32 %306, %15
  %450 = and i32 %324, %303
  %451 = and i32 %323, %412
  %452 = and i32 %351, %315
  %453 = or i32 %342, %452
  %454 = xor i32 %356, %4
  %455 = and i32 %365, %324
  %456 = and i32 %365, %5
  %457 = or i32 %334, %15
  %458 = shl i32 %457, 1
  %459 = xor i32 %339, %5
  %460 = shl i32 %459, 2
  %461 = or i32 %323, %3
  %462 = add i32 %308, 1
  %463 = or i32 %323, %15
  %464 = xor i32 %404, %351
  %465 = and i32 %356, %315
  %466 = shl i32 %465, 2
  %467 = and i32 %312, %315
  %468 = and i32 %356, %4
  %469 = and i32 %312, %4
  %470 = and i32 %348, %315
  %471 = and i32 %348, %4
  %472 = mul i32 %471, -6
  %473 = add i32 %227, %249
  %474 = sub i32 %473, %188
  %475 = sub i32 %474, %131
  %476 = add i32 %475, %35
  %477 = add i32 %476, %40
  %478 = add i32 %477, %25
  %479 = sub i32 %478, %464
  %480 = add i32 %479, %467
  %481 = add i32 %480, %433
  %482 = add i32 %481, %419
  %483 = sub i32 %482, %417
  %484 = mul i32 %483, 3
  %485 = add i32 %259, %39
  %486 = sub i32 %210, %485
  %487 = add i32 %486, %46
  %488 = add i32 %487, %447
  %489 = sub i32 %488, %469
  %490 = add i32 %489, %361
  %491 = mul i32 %490, 5
  %492 = add i32 %468, %34
  %493 = mul i32 %492, -15
  %494 = add i32 %470, %301
  %495 = mul i32 %494, 13
  %496 = add i32 %299, %298
  %497 = mul i32 %496, 11
  %498 = add i32 %426, %237
  %499 = shl i32 %498, 2
  %500 = sub i32 -2, %98
  %501 = add i32 %500, %60
  %502 = add i32 %501, %56
  %503 = add i32 %502, %228
  %504 = add i32 %503, %26
  %505 = add i32 %504, %211
  %506 = add i32 %505, %53
  %507 = add i32 %506, %41
  %508 = add i32 %507, %258
  %509 = add i32 %508, %255
  %510 = add i32 %509, %247
  %511 = add i32 %510, %230
  %512 = add i32 %511, %196
  %513 = add i32 %512, %191
  %514 = add i32 %513, %171
  %515 = add i32 %514, %166
  %516 = add i32 %515, %164
  %517 = add i32 %516, %160
  %518 = add i32 %517, %127
  %519 = add i32 %518, %101
  %520 = add i32 %519, %75
  %521 = add i32 %520, %14
  %522 = add i32 %521, %155
  %523 = add i32 %522, %13
  %524 = add i32 %523, %411
  %525 = add i32 %524, %381
  %526 = add i32 %525, %207
  %527 = add i32 %526, %430
  %528 = add i32 %527, %437
  %529 = add i32 %528, %416
  %530 = add i32 %529, %415
  %531 = add i32 %530, %413
  %532 = add i32 %531, %387
  %533 = add i32 %532, %341
  %534 = add i32 %533, %330
  %535 = add i32 %534, %320
  %536 = shl i32 %535, 1
  %537 = sub i32 5, %0
  %538 = add i32 %537, %94
  %539 = sub i32 %538, %217
  %540 = add i32 %539, %33
  %541 = add i32 %540, %2
  %542 = sub i32 %541, %59
  %543 = add i32 %542, %29
  %544 = sub i32 %543, %197
  %545 = add i32 %544, %286
  %546 = add i32 %545, %10
  %547 = add i32 %546, %28
  %548 = sub i32 %547, %22
  %549 = add i32 %548, %42
  %550 = sub i32 %549, %63
  %551 = sub i32 %550, %74
  %552 = sub i32 %551, %78
  %553 = sub i32 %552, %8
  %554 = sub i32 %553, %52
  %555 = add i32 %554, %97
  %556 = add i32 %555, %103
  %557 = sub i32 %556, %108
  %558 = sub i32 %557, %109
  %559 = add i32 %558, %122
  %560 = add i32 %559, %125
  %561 = add i32 %560, %126
  %562 = add i32 %561, %136
  %563 = add i32 %562, %165
  %564 = add i32 %563, %175
  %565 = add i32 %564, %177
  %566 = add i32 %565, %178
  %567 = add i32 %566, %180
  %568 = add i32 %567, %71
  %569 = sub i32 %568, %218
  %570 = add i32 %569, %220
  %571 = add i32 %570, %229
  %572 = add i32 %571, %233
  %573 = sub i32 %572, %235
  %574 = add i32 %573, %257
  %575 = add i32 %574, %265
  %576 = add i32 %575, %61
  %577 = add i32 %576, %274
  %578 = add i32 %577, %280
  %579 = add i32 %578, %287
  %580 = sub i32 %579, %3
  %581 = sub i32 %580, %31
  %582 = add i32 %581, %11
  %583 = sub i32 %582, %43
  %584 = sub i32 %583, %54
  %585 = sub i32 %584, %55
  %586 = sub i32 %585, %58
  %587 = add i32 %586, %62
  %588 = sub i32 %587, %64
  %589 = sub i32 %588, %65
  %590 = sub i32 %589, %67
  %591 = sub i32 %590, %68
  %592 = add i32 %591, %69
  %593 = add i32 %592, %70
  %594 = add i32 %593, %73
  %595 = sub i32 %594, %76
  %596 = sub i32 %595, %77
  %597 = sub i32 %596, %83
  %598 = sub i32 %597, %89
  %599 = add i32 %598, %91
  %600 = sub i32 %599, %92
  %601 = sub i32 %600, %93
  %602 = sub i32 %601, %95
  %603 = add i32 %602, %96
  %604 = add i32 %603, %99
  %605 = add i32 %604, %100
  %606 = add i32 %605, %23
  %607 = sub i32 %606, %105
  %608 = add i32 %607, %106
  %609 = add i32 %608, %107
  %610 = sub i32 %609, %110
  %611 = sub i32 %610, %117
  %612 = add i32 %611, %118
  %613 = add i32 %612, %119
  %614 = add i32 %613, %123
  %615 = sub i32 %614, %124
  %616 = add i32 %615, %133
  %617 = add i32 %616, %134
  %618 = sub i32 %617, %135
  %619 = add i32 %618, %137
  %620 = add i32 %619, %138
  %621 = add i32 %620, %139
  %622 = add i32 %621, %140
  %623 = add i32 %622, %141
  %624 = sub i32 %623, %142
  %625 = add i32 %624, %143
  %626 = add i32 %625, %144
  %627 = sub i32 %626, %148
  %628 = sub i32 %627, %150
  %629 = sub i32 %628, %154
  %630 = add i32 %629, %158
  %631 = add i32 %630, %159
  %632 = add i32 %631, %161
  %633 = sub i32 %632, %163
  %634 = sub i32 %633, %167
  %635 = sub i32 %634, %168
  %636 = sub i32 %635, %169
  %637 = add i32 %636, %170
  %638 = sub i32 %637, %172
  %639 = sub i32 %638, %173
  %640 = add i32 %639, %174
  %641 = add i32 %640, %176
  %642 = add i32 %641, %179
  %643 = sub i32 %642, %182
  %644 = sub i32 %643, %183
  %645 = sub i32 %644, %184
  %646 = sub i32 %645, %186
  %647 = sub i32 %646, %187
  %648 = sub i32 %647, %189
  %649 = sub i32 %648, %190
  %650 = sub i32 %649, %192
  %651 = add i32 %650, %193
  %652 = sub i32 %651, %194
  %653 = sub i32 %652, %195
  %654 = sub i32 %653, %120
  %655 = add i32 %654, %201
  %656 = sub i32 %655, %202
  %657 = sub i32 %656, %204
  %658 = sub i32 %657, %205
  %659 = sub i32 %658, %208
  %660 = add i32 %659, %209
  %661 = sub i32 %660, %212
  %662 = sub i32 %661, %213
  %663 = sub i32 %662, %215
  %664 = sub i32 %663, %216
  %665 = sub i32 %664, %219
  %666 = sub i32 %665, %221
  %667 = add i32 %666, %79
  %668 = sub i32 %667, %224
  %669 = sub i32 %668, %231
  %670 = add i32 %669, %232
  %671 = add i32 %670, %234
  %672 = add i32 %671, %236
  %673 = add i32 %672, %238
  %674 = add i32 %673, %239
  %675 = sub i32 %674, %240
  %676 = add i32 %675, %145
  %677 = sub i32 %676, %245
  %678 = add i32 %677, %246
  %679 = add i32 %678, %248
  %680 = add i32 %679, %250
  %681 = sub i32 %680, %254
  %682 = add i32 %681, %256
  %683 = sub i32 %682, %260
  %684 = add i32 %683, %261
  %685 = sub i32 %684, %264
  %686 = sub i32 %685, %266
  %687 = sub i32 %686, %267
  %688 = sub i32 %687, %269
  %689 = add i32 %688, %270
  %690 = sub i32 %689, %271
  %691 = sub i32 %690, %273
  %692 = sub i32 %691, %276
  %693 = add i32 %692, %277
  %694 = add i32 %693, %281
  %695 = sub i32 %694, %282
  %696 = add i32 %695, %283
  %697 = add i32 %696, %284
  %698 = add i32 %697, %285
  %699 = sub i32 %698, %288
  %700 = sub i32 %699, %289
  %701 = add i32 %700, %290
  %702 = add i32 %701, %291
  %703 = add i32 %702, %372
  %704 = sub i32 %703, %37
  %705 = sub i32 %704, %49
  %706 = sub i32 %705, %51
  %707 = sub i32 %706, %86
  %708 = sub i32 %707, %87
  %709 = add i32 %708, %112
  %710 = sub i32 %709, %114
  %711 = sub i32 %710, %121
  %712 = add i32 %711, %130
  %713 = sub i32 %712, %147
  %714 = add i32 %713, %152
  %715 = add i32 %714, %157
  %716 = add i32 %715, %198
  %717 = sub i32 %716, %200
  %718 = add i32 %717, %214
  %719 = sub i32 %718, %223
  %720 = add i32 %719, %226
  %721 = add i32 %720, %241
  %722 = sub i32 %721, %243
  %723 = add i32 %722, %244
  %724 = sub i32 %723, %252
  %725 = add i32 %724, %253
  %726 = sub i32 %725, %263
  %727 = add i32 %726, %272
  %728 = sub i32 %727, %279
  %729 = add i32 %728, %293
  %730 = add i32 %729, %295
  %731 = add i32 %730, %297
  %732 = sub i32 %731, %300
  %733 = sub i32 %732, %5
  %734 = add i32 %733, %311
  %735 = add i32 %734, %303
  %736 = sub i32 %735, %346
  %737 = sub i32 %736, %366
  %738 = sub i32 %737, %326
  %739 = add i32 %738, %368
  %740 = sub i32 %739, %373
  %741 = add i32 %740, %323
  %742 = sub i32 %741, %316
  %743 = sub i32 %742, %420
  %744 = add i32 %743, %423
  %745 = add i32 %744, %424
  %746 = add i32 %745, %427
  %747 = sub i32 %746, %404
  %748 = add i32 %747, %440
  %749 = add i32 %748, %449
  %750 = sub i32 %749, %351
  %751 = sub i32 %750, %456
  %752 = add i32 %751, %462
  %753 = add i32 %752, %497
  %754 = sub i32 %753, %82
  %755 = sub i32 %754, %305
  %756 = add i32 %755, %309
  %757 = sub i32 %756, %314
  %758 = sub i32 %757, %317
  %759 = sub i32 %758, %319
  %760 = add i32 %759, %322
  %761 = add i32 %760, %325
  %762 = add i32 %761, %328
  %763 = sub i32 %762, %331
  %764 = add i32 %763, %332
  %765 = sub i32 %764, %335
  %766 = sub i32 %765, %336
  %767 = sub i32 %766, %337
  %768 = add i32 %767, %338
  %769 = sub i32 %768, %347
  %770 = sub i32 %769, %349
  %771 = add i32 %770, %350
  %772 = sub i32 %771, %355
  %773 = add i32 %772, %357
  %774 = sub i32 %773, %358
  %775 = sub i32 %774, %359
  %776 = sub i32 %775, %360
  %777 = sub i32 %776, %367
  %778 = add i32 %777, %369
  %779 = add i32 %778, %370
  %780 = add i32 %779, %371
  %781 = add i32 %780, %380
  %782 = add i32 %781, %384
  %783 = add i32 %782, %385
  %784 = sub i32 %783, %386
  %785 = sub i32 %784, %388
  %786 = sub i32 %785, %391
  %787 = add i32 %786, %392
  %788 = sub i32 %787, %393
  %789 = add i32 %788, %397
  %790 = sub i32 %789, %400
  %791 = sub i32 %790, %405
  %792 = add i32 %791, %406
  %793 = sub i32 %792, %407
  %794 = sub i32 %793, %410
  %795 = sub i32 %794, %414
  %796 = sub i32 %795, %421
  %797 = sub i32 %796, %422
  %798 = add i32 %797, %425
  %799 = add i32 %798, %431
  %800 = add i32 %799, %432
  %801 = add i32 %800, %434
  %802 = add i32 %801, %435
  %803 = sub i32 %802, %436
  %804 = sub i32 %803, %438
  %805 = add i32 %804, %439
  %806 = sub i32 %805, %441
  %807 = add i32 %806, %442
  %808 = add i32 %807, %445
  %809 = sub i32 %808, %446
  %810 = add i32 %809, %448
  %811 = sub i32 %810, %450
  %812 = add i32 %811, %451
  %813 = add i32 %812, %454
  %814 = add i32 %813, %455
  %815 = add i32 %814, %343
  %816 = sub i32 %815, %460
  %817 = sub i32 %816, %461
  %818 = sub i32 %817, %463
  %819 = sub i32 %818, %345
  %820 = add i32 %819, %354
  %821 = sub i32 %820, %364
  %822 = add i32 %821, %379
  %823 = sub i32 %822, %383
  %824 = sub i32 %823, %390
  %825 = add i32 %824, %396
  %826 = sub i32 %825, %399
  %827 = sub i32 %826, %402
  %828 = sub i32 %827, %403
  %829 = sub i32 %828, %409
  %830 = sub i32 %829, %429
  %831 = sub i32 %830, %444
  %832 = add i32 %831, %453
  %833 = sub i32 %832, %458
  %834 = sub i32 %833, %466
  %835 = add i32 %834, %472
  %836 = add i32 %835, %493
  %837 = add i32 %836, %495
  %838 = add i32 %837, %499
  %839 = add i32 %838, %491
  %840 = add i32 %839, %484
  %841 = add i32 %840, %536
  %842 = icmp eq i32 %841, %18
  %843 = select i1 %842, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %844 = tail call i32 @puts(i8* nonnull dereferenceable(1) %843)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
