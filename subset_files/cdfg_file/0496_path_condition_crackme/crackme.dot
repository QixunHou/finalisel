digraph "DFG for'crackme' function" {
	Node0x118ebf0[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x118ec60[shape=record, label="  %4 = or i32 %3, %0"];
	Node0x118ed20[shape=record, label="  %5 = shl i32 %0, 1"];
	Node0x118ed90[shape=record, label="  %6 = or i32 %5, 1"];
	Node0x118ee00[shape=record, label="  %7 = and i32 %1, %0"];
	Node0x118ee70[shape=record, label="  %8 = add i32 %7, 1"];
	Node0x118eee0[shape=record, label="  %9 = and i32 %3, %0"];
	Node0x118ef50[shape=record, label="  %10 = add i32 %1, 1"];
	Node0x118efc0[shape=record, label="  %11 = xor i32 %1, %0"];
	Node0x118f030[shape=record, label="  %12 = or i32 %1, %0"];
	Node0x118f0a0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x118f140[shape=record, label="  %14 = mul i32 %13, 7"];
	Node0x118f1b0[shape=record, label="  %15 = xor i32 %4, -1"];
	Node0x118f220[shape=record, label="  %16 = add i32 %9, %15"];
	Node0x118f2c0[shape=record, label="  %17 = mul i32 %16, 5"];
	Node0x118f330[shape=record, label="  %18 = add i32 %7, %8"];
	Node0x118f3d0[shape=record, label="  %19 = mul i32 %18, 3"];
	Node0x118f440[shape=record, label="  %20 = sub i32 1, %0"];
	Node0x118f4b0[shape=record, label="  %21 = add i32 %20, %10"];
	Node0x118f520[shape=record, label="  %22 = add i32 %21, %6"];
	Node0x118f590[shape=record, label="  %23 = add i32 %22, %9"];
	Node0x118f600[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x118f670[shape=record, label="  %25 = sub i32 %24, %12"];
	Node0x118f6e0[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x118f750[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x118f7c0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x118f830[shape=record, label="  %29 = icmp eq i32 %4, %28"];
	Node0x112f268[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x118fcd0[shape=record, label="  %31 = tail call i32 @puts(i8* nonnull dereferenceable(1) %30)"];
	Node0x118fd20[shape=record, label="  ret void"];
	Node0x118ebf0 -> Node0x118ec60;
	Node0x118ec60 -> Node0x118ed20;
	Node0x118ed20 -> Node0x118ed90;
	Node0x118ed90 -> Node0x118ee00;
	Node0x118ee00 -> Node0x118ee70;
	Node0x118ee70 -> Node0x118eee0;
	Node0x118eee0 -> Node0x118ef50;
	Node0x118ef50 -> Node0x118efc0;
	Node0x118efc0 -> Node0x118f030;
	Node0x118f030 -> Node0x118f0a0;
	Node0x118f0a0 -> Node0x118f140;
	Node0x118f140 -> Node0x118f1b0;
	Node0x118f1b0 -> Node0x118f220;
	Node0x118f220 -> Node0x118f2c0;
	Node0x118f2c0 -> Node0x118f330;
	Node0x118f330 -> Node0x118f3d0;
	Node0x118f3d0 -> Node0x118f440;
	Node0x118f440 -> Node0x118f4b0;
	Node0x118f4b0 -> Node0x118f520;
	Node0x118f520 -> Node0x118f590;
	Node0x118f590 -> Node0x118f600;
	Node0x118f600 -> Node0x118f670;
	Node0x118f670 -> Node0x118f6e0;
	Node0x118f6e0 -> Node0x118f750;
	Node0x118f750 -> Node0x118f7c0;
	Node0x118f7c0 -> Node0x118f830;
	Node0x118f830 -> Node0x112f268;
	Node0x112f268 -> Node0x118fcd0;
	Node0x118fcd0 -> Node0x118fd20;
edge [color=red]
	Node0x118ebf0 -> Node0x118ec60;
	Node0x118ed20 -> Node0x118ed90;
	Node0x118ee00 -> Node0x118ee70;
	Node0x118ebf0 -> Node0x118eee0;
	Node0x118f030 -> Node0x118f0a0;
	Node0x118f0a0 -> Node0x118f140;
	Node0x118ec60 -> Node0x118f1b0;
	Node0x118eee0 -> Node0x118f220;
	Node0x118f1b0 -> Node0x118f220;
	Node0x118f220 -> Node0x118f2c0;
	Node0x118ee00 -> Node0x118f330;
	Node0x118ee70 -> Node0x118f330;
	Node0x118f330 -> Node0x118f3d0;
	Node0x118f440 -> Node0x118f4b0;
	Node0x118ef50 -> Node0x118f4b0;
	Node0x118f4b0 -> Node0x118f520;
	Node0x118ed90 -> Node0x118f520;
	Node0x118f520 -> Node0x118f590;
	Node0x118eee0 -> Node0x118f590;
	Node0x118f590 -> Node0x118f600;
	Node0x118efc0 -> Node0x118f600;
	Node0x118f600 -> Node0x118f670;
	Node0x118f030 -> Node0x118f670;
	Node0x118f670 -> Node0x118f6e0;
	Node0x118f140 -> Node0x118f6e0;
	Node0x118f6e0 -> Node0x118f750;
	Node0x118f2c0 -> Node0x118f750;
	Node0x118f750 -> Node0x118f7c0;
	Node0x118f3d0 -> Node0x118f7c0;
	Node0x118ec60 -> Node0x118f830;
	Node0x118f7c0 -> Node0x118f830;
	Node0x118f830 -> Node0x112f268;
	Node0x112f268 -> Node0x118fcd0;
}
