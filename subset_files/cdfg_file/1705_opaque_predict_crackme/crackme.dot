digraph "DFG for'crackme' function" {
	Node0x5b4d30[shape=record, label="  %5 = add i32 %0, 3"];
	Node0x5b4da0[shape=record, label="  %6 = or i32 %2, %1"];
	Node0x5b4e40[shape=record, label="  %7 = xor i32 %2, -1"];
	Node0x5b4eb0[shape=record, label="  %8 = or i32 %7, %1"];
	Node0x5b4f20[shape=record, label="  %9 = xor i32 %2, %1"];
	Node0x5b4f90[shape=record, label="  %10 = xor i32 %8, -1"];
	Node0x5b5000[shape=record, label="  %11 = and i32 %7, %1"];
	Node0x5b5070[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x5b50e0[shape=record, label="  %13 = and i32 %3, %0"];
	Node0x5b5180[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x5b5220[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x5b5290[shape=record, label="  %16 = xor i32 %3, %0"];
	Node0x5b5300[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x5b5370[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x5b53e0[shape=record, label="  %19 = xor i32 %0, -1"];
	Node0x5b5450[shape=record, label="  %20 = and i32 %19, %3"];
	Node0x5b54c0[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x5b5530[shape=record, label="  %22 = or i32 %19, %3"];
	Node0x5b55d0[shape=record, label="  %23 = shl i32 %21, 2"];
	Node0x5b5670[shape=record, label="  %24 = xor i32 %23, -4"];
	Node0x5b56e0[shape=record, label="  %25 = xor i32 %22, -1"];
	Node0x5b5750[shape=record, label="  %26 = shl i32 %20, 1"];
	Node0x5b57c0[shape=record, label="  %27 = sub i32 %3, %11"];
	Node0x5b5830[shape=record, label="  %28 = add i32 %27, %25"];
	Node0x5b58d0[shape=record, label="  %29 = mul i32 %28, 5"];
	Node0x5b5940[shape=record, label="  %30 = add i32 %12, %10"];
	Node0x5b59b0[shape=record, label="  %31 = add i32 %30, %13"];
	Node0x5b5a50[shape=record, label="  %32 = mul i32 %31, -3"];
	Node0x5b5cd0[shape=record, label="  %33 = add i32 %6, %1"];
	Node0x5b5d40[shape=record, label="  %34 = add i32 %33, %22"];
	Node0x5b5db0[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x5b5e50[shape=record, label="  %36 = add i32 %0, 4"];
	Node0x5b5ec0[shape=record, label="  %37 = sub i32 %36, %2"];
	Node0x5b5f30[shape=record, label="  %38 = sub i32 %37, %8"];
	Node0x5b5fa0[shape=record, label="  %39 = add i32 %38, %9"];
	Node0x5b6010[shape=record, label="  %40 = add i32 %39, %3"];
	Node0x5b6080[shape=record, label="  %41 = sub i32 %40, %20"];
	Node0x5b60f0[shape=record, label="  %42 = sub i32 %41, %21"];
	Node0x5b6160[shape=record, label="  %43 = sub i32 %42, %26"];
	Node0x5b61d0[shape=record, label="  %44 = sub i32 %43, %15"];
	Node0x5b6240[shape=record, label="  %45 = sub i32 %44, %18"];
	Node0x5b62b0[shape=record, label="  %46 = add i32 %45, %24"];
	Node0x5b6320[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x5b6390[shape=record, label="  %48 = add i32 %47, %32"];
	Node0x5b6400[shape=record, label="  %49 = add i32 %48, %35"];
	Node0x5b6470[shape=record, label="  %50 = icmp eq i32 %5, %49"];
	Node0x555268[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x5b6910[shape=record, label="  %52 = tail call i32 @puts(i8* nonnull dereferenceable(1) %51)"];
	Node0x5b6960[shape=record, label="  ret void"];
	Node0x5b4d30 -> Node0x5b4da0;
	Node0x5b4da0 -> Node0x5b4e40;
	Node0x5b4e40 -> Node0x5b4eb0;
	Node0x5b4eb0 -> Node0x5b4f20;
	Node0x5b4f20 -> Node0x5b4f90;
	Node0x5b4f90 -> Node0x5b5000;
	Node0x5b5000 -> Node0x5b5070;
	Node0x5b5070 -> Node0x5b50e0;
	Node0x5b50e0 -> Node0x5b5180;
	Node0x5b5180 -> Node0x5b5220;
	Node0x5b5220 -> Node0x5b5290;
	Node0x5b5290 -> Node0x5b5300;
	Node0x5b5300 -> Node0x5b5370;
	Node0x5b5370 -> Node0x5b53e0;
	Node0x5b53e0 -> Node0x5b5450;
	Node0x5b5450 -> Node0x5b54c0;
	Node0x5b54c0 -> Node0x5b5530;
	Node0x5b5530 -> Node0x5b55d0;
	Node0x5b55d0 -> Node0x5b5670;
	Node0x5b5670 -> Node0x5b56e0;
	Node0x5b56e0 -> Node0x5b5750;
	Node0x5b5750 -> Node0x5b57c0;
	Node0x5b57c0 -> Node0x5b5830;
	Node0x5b5830 -> Node0x5b58d0;
	Node0x5b58d0 -> Node0x5b5940;
	Node0x5b5940 -> Node0x5b59b0;
	Node0x5b59b0 -> Node0x5b5a50;
	Node0x5b5a50 -> Node0x5b5cd0;
	Node0x5b5cd0 -> Node0x5b5d40;
	Node0x5b5d40 -> Node0x5b5db0;
	Node0x5b5db0 -> Node0x5b5e50;
	Node0x5b5e50 -> Node0x5b5ec0;
	Node0x5b5ec0 -> Node0x5b5f30;
	Node0x5b5f30 -> Node0x5b5fa0;
	Node0x5b5fa0 -> Node0x5b6010;
	Node0x5b6010 -> Node0x5b6080;
	Node0x5b6080 -> Node0x5b60f0;
	Node0x5b60f0 -> Node0x5b6160;
	Node0x5b6160 -> Node0x5b61d0;
	Node0x5b61d0 -> Node0x5b6240;
	Node0x5b6240 -> Node0x5b62b0;
	Node0x5b62b0 -> Node0x5b6320;
	Node0x5b6320 -> Node0x5b6390;
	Node0x5b6390 -> Node0x5b6400;
	Node0x5b6400 -> Node0x5b6470;
	Node0x5b6470 -> Node0x555268;
	Node0x555268 -> Node0x5b6910;
	Node0x5b6910 -> Node0x5b6960;
edge [color=red]
	Node0x5b4e40 -> Node0x5b4eb0;
	Node0x5b4eb0 -> Node0x5b4f90;
	Node0x5b4e40 -> Node0x5b5000;
	Node0x5b50e0 -> Node0x5b5180;
	Node0x5b5180 -> Node0x5b5220;
	Node0x5b5290 -> Node0x5b5300;
	Node0x5b5300 -> Node0x5b5370;
	Node0x5b53e0 -> Node0x5b5450;
	Node0x5b53e0 -> Node0x5b5530;
	Node0x5b54c0 -> Node0x5b55d0;
	Node0x5b55d0 -> Node0x5b5670;
	Node0x5b5530 -> Node0x5b56e0;
	Node0x5b5450 -> Node0x5b5750;
	Node0x5b5000 -> Node0x5b57c0;
	Node0x5b57c0 -> Node0x5b5830;
	Node0x5b56e0 -> Node0x5b5830;
	Node0x5b5830 -> Node0x5b58d0;
	Node0x5b5070 -> Node0x5b5940;
	Node0x5b4f90 -> Node0x5b5940;
	Node0x5b5940 -> Node0x5b59b0;
	Node0x5b50e0 -> Node0x5b59b0;
	Node0x5b59b0 -> Node0x5b5a50;
	Node0x5b4da0 -> Node0x5b5cd0;
	Node0x5b5cd0 -> Node0x5b5d40;
	Node0x5b5530 -> Node0x5b5d40;
	Node0x5b5d40 -> Node0x5b5db0;
	Node0x5b5e50 -> Node0x5b5ec0;
	Node0x5b5ec0 -> Node0x5b5f30;
	Node0x5b4eb0 -> Node0x5b5f30;
	Node0x5b5f30 -> Node0x5b5fa0;
	Node0x5b4f20 -> Node0x5b5fa0;
	Node0x5b5fa0 -> Node0x5b6010;
	Node0x5b6010 -> Node0x5b6080;
	Node0x5b5450 -> Node0x5b6080;
	Node0x5b6080 -> Node0x5b60f0;
	Node0x5b54c0 -> Node0x5b60f0;
	Node0x5b60f0 -> Node0x5b6160;
	Node0x5b5750 -> Node0x5b6160;
	Node0x5b6160 -> Node0x5b61d0;
	Node0x5b5220 -> Node0x5b61d0;
	Node0x5b61d0 -> Node0x5b6240;
	Node0x5b5370 -> Node0x5b6240;
	Node0x5b6240 -> Node0x5b62b0;
	Node0x5b5670 -> Node0x5b62b0;
	Node0x5b62b0 -> Node0x5b6320;
	Node0x5b58d0 -> Node0x5b6320;
	Node0x5b6320 -> Node0x5b6390;
	Node0x5b5a50 -> Node0x5b6390;
	Node0x5b6390 -> Node0x5b6400;
	Node0x5b5db0 -> Node0x5b6400;
	Node0x5b4d30 -> Node0x5b6470;
	Node0x5b6400 -> Node0x5b6470;
	Node0x5b6470 -> Node0x555268;
	Node0x555268 -> Node0x5b6910;
}
