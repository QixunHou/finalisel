digraph "DFG for'main' function" {
	Node0x5b6b28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5b6ba8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5b6c38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x5b6c98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x5b6d48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x5b7178[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5b7258[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x5b7358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5b7418[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x5b74c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5b7588[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x5b7638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x5b1750[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x5b7838[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5b87a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x5b8e18[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x5b8e78[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x5b8f88[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x5b91e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x5b9348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5b9458[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5b9568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5b9628[shape=record, label="  ret i32 0"];
	Node0x5b6b28 -> Node0x5b6ba8;
	Node0x5b6ba8 -> Node0x5b6c38;
	Node0x5b6c38 -> Node0x5b6c98;
	Node0x5b6c98 -> Node0x5b6d48;
	Node0x5b6d48 -> Node0x5b7178;
	Node0x5b7178 -> Node0x5b7258;
	Node0x5b7258 -> Node0x5b7358;
	Node0x5b7358 -> Node0x5b7418;
	Node0x5b7418 -> Node0x5b74c8;
	Node0x5b74c8 -> Node0x5b7588;
	Node0x5b7588 -> Node0x5b7638;
	Node0x5b7638 -> Node0x5b1750;
	Node0x5b1750 -> Node0x5b7838;
	Node0x5b7838 -> Node0x5b87a8;
	Node0x5b87a8 -> Node0x5b8e18;
	Node0x5b8e18 -> Node0x5b8e78;
	Node0x5b8e78 -> Node0x5b8f88;
	Node0x5b8f88 -> Node0x5b91e8;
	Node0x5b91e8 -> Node0x5b9348;
	Node0x5b9348 -> Node0x5b9458;
	Node0x5b9458 -> Node0x5b9568;
	Node0x5b9568 -> Node0x5b9628;
edge [color=red]
	Node0x5b6b28 -> Node0x5b6d48;
	Node0x5b6d48 -> Node0x5b7178;
	Node0x5b6ba8 -> Node0x5b7258;
	Node0x5b7258 -> Node0x5b7358;
	Node0x5b6c38 -> Node0x5b7418;
	Node0x5b7418 -> Node0x5b74c8;
	Node0x5b6c98 -> Node0x5b7588;
	Node0x5b7588 -> Node0x5b7638;
	Node0x5b6b28 -> Node0x5b1750;
	Node0x5b6ba8 -> Node0x5b1750;
	Node0x5b6c38 -> Node0x5b1750;
	Node0x5b6c98 -> Node0x5b1750;
	Node0x5b6b28 -> Node0x5b7838;
	Node0x5b6ba8 -> Node0x5b87a8;
	Node0x5b6c38 -> Node0x5b8e18;
	Node0x5b6c98 -> Node0x5b8e78;
	Node0x5b7838 -> Node0x5b8f88;
	Node0x5b87a8 -> Node0x5b8f88;
	Node0x5b8e18 -> Node0x5b8f88;
	Node0x5b8e78 -> Node0x5b8f88;
	Node0x5b7588 -> Node0x5b91e8;
	Node0x5b7418 -> Node0x5b9348;
	Node0x5b7258 -> Node0x5b9458;
	Node0x5b6d48 -> Node0x5b9568;
}
