digraph "DFG for'main' function" {
	Node0x14fcf48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14fcfc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14fd058[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14fd0b8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x14fd168[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x14fd598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14fd678[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x14fd778[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14fd838[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x14fd8e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14fd9a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x14fda58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14f7820[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x14fdc58[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14febc8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14ff238[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14ff298[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x14ff3a8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x14ff608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14ff768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14ff878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14ff988[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14ffa48[shape=record, label="  ret i32 0"];
	Node0x14fcf48 -> Node0x14fcfc8;
	Node0x14fcfc8 -> Node0x14fd058;
	Node0x14fd058 -> Node0x14fd0b8;
	Node0x14fd0b8 -> Node0x14fd168;
	Node0x14fd168 -> Node0x14fd598;
	Node0x14fd598 -> Node0x14fd678;
	Node0x14fd678 -> Node0x14fd778;
	Node0x14fd778 -> Node0x14fd838;
	Node0x14fd838 -> Node0x14fd8e8;
	Node0x14fd8e8 -> Node0x14fd9a8;
	Node0x14fd9a8 -> Node0x14fda58;
	Node0x14fda58 -> Node0x14f7820;
	Node0x14f7820 -> Node0x14fdc58;
	Node0x14fdc58 -> Node0x14febc8;
	Node0x14febc8 -> Node0x14ff238;
	Node0x14ff238 -> Node0x14ff298;
	Node0x14ff298 -> Node0x14ff3a8;
	Node0x14ff3a8 -> Node0x14ff608;
	Node0x14ff608 -> Node0x14ff768;
	Node0x14ff768 -> Node0x14ff878;
	Node0x14ff878 -> Node0x14ff988;
	Node0x14ff988 -> Node0x14ffa48;
edge [color=red]
	Node0x14fcf48 -> Node0x14fd168;
	Node0x14fd168 -> Node0x14fd598;
	Node0x14fcfc8 -> Node0x14fd678;
	Node0x14fd678 -> Node0x14fd778;
	Node0x14fd058 -> Node0x14fd838;
	Node0x14fd838 -> Node0x14fd8e8;
	Node0x14fd0b8 -> Node0x14fd9a8;
	Node0x14fd9a8 -> Node0x14fda58;
	Node0x14fcf48 -> Node0x14f7820;
	Node0x14fcfc8 -> Node0x14f7820;
	Node0x14fd058 -> Node0x14f7820;
	Node0x14fd0b8 -> Node0x14f7820;
	Node0x14fcf48 -> Node0x14fdc58;
	Node0x14fcfc8 -> Node0x14febc8;
	Node0x14fd058 -> Node0x14ff238;
	Node0x14fd0b8 -> Node0x14ff298;
	Node0x14fdc58 -> Node0x14ff3a8;
	Node0x14febc8 -> Node0x14ff3a8;
	Node0x14ff238 -> Node0x14ff3a8;
	Node0x14ff298 -> Node0x14ff3a8;
	Node0x14fd9a8 -> Node0x14ff608;
	Node0x14fd838 -> Node0x14ff768;
	Node0x14fd678 -> Node0x14ff878;
	Node0x14fd168 -> Node0x14ff988;
}
