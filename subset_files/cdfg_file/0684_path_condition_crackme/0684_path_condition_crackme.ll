; ModuleID = '../.././c_source_file/0684_path_condition_crackme.c'
source_filename = "../.././c_source_file/0684_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %2
  %9 = and i32 %8, %0
  %10 = xor i32 %2, %1
  %11 = xor i32 %10, %0
  %12 = or i32 %9, %11
  %13 = xor i32 %5, -1
  %14 = and i32 %13, %4
  %15 = and i32 %5, %3
  %16 = xor i32 %15, -1
  %17 = xor i32 %14, %16
  %18 = sub i32 %12, %17
  %19 = xor i32 %5, %3
  %20 = xor i32 %19, -1
  %21 = and i32 %20, %4
  %22 = shl i32 %21, 1
  %23 = add i32 %18, %22
  %24 = xor i32 %1, %0
  %25 = xor i32 %24, -1
  %26 = xor i32 %2, %0
  %27 = xor i32 %26, -1
  %28 = or i32 %27, %25
  %29 = or i32 %2, %1
  %30 = xor i32 %29, %0
  %31 = xor i32 %2, -1
  %32 = and i32 %31, %0
  %33 = xor i32 %32, -1
  %34 = and i32 %33, %7
  %35 = and i32 %7, %0
  %36 = xor i32 %35, -1
  %37 = and i32 %27, %36
  %38 = or i32 %7, %0
  %39 = and i32 %26, %38
  %40 = or i32 %10, %0
  %41 = xor i32 %9, %40
  %42 = and i32 %29, %0
  %43 = and i32 %2, %0
  %44 = xor i32 %43, -1
  %45 = and i32 %44, %25
  %46 = xor i32 %0, -1
  %47 = or i32 %31, %1
  %48 = or i32 %47, %46
  %49 = or i32 %31, %0
  %50 = and i32 %49, %7
  %51 = and i32 %27, %1
  %52 = xor i32 %49, -1
  %53 = or i32 %52, %25
  %54 = xor i32 %10, -1
  %55 = or i32 %54, %0
  %56 = or i32 %24, %2
  %57 = xor i32 %38, -1
  %58 = or i32 %27, %57
  %59 = or i32 %24, %31
  %60 = and i32 %1, %0
  %61 = or i32 %10, %60
  %62 = shl i32 %49, 1
  %63 = or i32 %7, %2
  %64 = and i32 %63, %46
  %65 = xor i32 %64, 2147483647
  %66 = xor i32 %65, %9
  %67 = shl i32 %66, 1
  %68 = and i32 %2, %1
  %69 = and i32 %68, %0
  %70 = and i32 %10, %46
  %71 = or i32 %69, %70
  %72 = or i32 %26, %60
  %73 = or i32 %1, %0
  %74 = xor i32 %73, -1
  %75 = or i32 %43, %74
  %76 = xor i32 %68, -1
  %77 = and i32 %76, %46
  %78 = or i32 %43, %25
  %79 = xor i32 %47, -1
  %80 = or i32 %79, %46
  %81 = xor i32 %33, %1
  %82 = shl i32 %81, 2
  %83 = xor i32 %40, 2147483647
  %84 = or i32 %83, %9
  %85 = xor i32 %69, %11
  %86 = xor i32 %60, -1
  %87 = xor i32 %86, %2
  %88 = xor i32 %47, %0
  %89 = add i32 %60, 1
  %90 = or i32 %60, %52
  %91 = and i32 %26, %86
  %92 = shl i32 %91, 1
  %93 = xor i32 %29, -1
  %94 = xor i32 %93, %0
  %95 = or i32 %26, %25
  %96 = or i32 %2, %0
  %97 = xor i32 %96, -1
  %98 = or i32 %24, %97
  %99 = or i32 %54, %57
  %100 = and i32 %10, %0
  %101 = and i32 %8, %46
  %102 = or i32 %10, %46
  %103 = xor i32 %102, -1
  %104 = or i32 %101, %103
  %105 = or i32 %60, %27
  %106 = xor i32 %44, %1
  %107 = shl i32 %106, 1
  %108 = and i32 %54, %46
  %109 = add i32 %73, 1
  %110 = xor i32 %63, %0
  %111 = or i32 %9, %110
  %112 = and i32 %26, %73
  %113 = xor i32 %47, %60
  %114 = and i32 %54, %36
  %115 = and i32 %29, %46
  %116 = or i32 %69, %115
  %117 = or i32 %24, %52
  %118 = and i32 %96, %24
  %119 = or i32 %69, %30
  %120 = or i32 %35, %27
  %121 = and i32 %73, %54
  %122 = or i32 %60, %54
  %123 = shl i32 %122, 1
  %124 = or i32 %27, %74
  %125 = and i32 %38, %2
  %126 = and i32 %10, %38
  %127 = shl i32 %126, 1
  %128 = and i32 %73, %27
  %129 = or i32 %93, %0
  %130 = or i32 %31, %74
  %131 = xor i32 %52, %1
  %132 = xor i32 %32, %1
  %133 = add i32 %29, 1
  %134 = and i32 %68, %46
  %135 = or i32 %134, %42
  %136 = and i32 %47, %0
  %137 = shl i32 %33, 1
  %138 = xor i32 %36, %2
  %139 = or i32 %60, %97
  %140 = shl i32 %139, 1
  %141 = or i32 %35, %54
  %142 = and i32 %31, %1
  %143 = xor i32 %142, -1
  %144 = and i32 %143, %46
  %145 = xor i32 %43, %38
  %146 = or i32 %26, %7
  %147 = or i32 %60, %2
  %148 = and i32 %54, %0
  %149 = and i32 %96, %1
  %150 = and i32 %47, %46
  %151 = xor i32 %96, %1
  %152 = or i32 %76, %46
  %153 = shl i32 %152, 1
  %154 = and i32 %38, %27
  %155 = shl i32 %154, 1
  %156 = add i32 %43, 1
  %157 = and i32 %63, %0
  %158 = or i32 %101, %157
  %159 = xor i32 %11, -1
  %160 = xor i32 %9, %159
  %161 = shl i32 %160, 1
  %162 = and i32 %143, %0
  %163 = xor i32 %43, %143
  %164 = and i32 %49, %1
  %165 = xor i32 %49, %60
  %166 = shl i32 %165, 1
  %167 = and i32 %25, %2
  %168 = shl i32 %167, 1
  %169 = or i32 %31, %57
  %170 = or i32 %143, %0
  %171 = and i32 %49, %24
  %172 = xor i32 %35, %2
  %173 = and i32 %24, %44
  %174 = or i32 %43, %7
  %175 = xor i32 %32, %47
  %176 = and i32 %44, %7
  %177 = or i32 %134, %100
  %178 = shl i32 %177, 1
  %179 = or i32 %52, %1
  %180 = or i32 %60, %31
  %181 = shl i32 %180, 1
  %182 = xor i32 %43, %73
  %183 = or i32 %76, %0
  %184 = or i32 %35, %2
  %185 = or i32 %142, %35
  %186 = and i32 %24, %27
  %187 = xor i32 %43, %1
  %188 = or i32 %26, %35
  %189 = xor i32 %96, %60
  %190 = xor i32 %54, %0
  %191 = or i32 %32, %79
  %192 = and i32 %49, %25
  %193 = or i32 %10, %57
  %194 = or i32 %93, %46
  %195 = xor i32 %74, %2
  %196 = xor i32 %69, -1
  %197 = xor i32 %115, %196
  %198 = or i32 %29, %0
  %199 = shl i32 %198, 1
  %200 = or i32 %24, %27
  %201 = xor i32 %70, %196
  %202 = or i32 %97, %7
  %203 = xor i32 %68, %0
  %204 = and i32 %76, %0
  %205 = and i32 %73, %2
  %206 = xor i32 %79, %0
  %207 = or i32 %32, %25
  %208 = shl i32 %207, 1
  %209 = or i32 %10, %35
  %210 = xor i32 %76, %0
  %211 = or i32 %31, %25
  %212 = shl i32 %211, 1
  %213 = add i32 %49, 1
  %214 = or i32 %142, %0
  %215 = and i32 %10, %36
  %216 = xor i32 %38, %2
  %217 = or i32 %97, %1
  %218 = or i32 %32, %1
  %219 = shl i32 %218, 2
  %220 = or i32 %43, %142
  %221 = shl i32 %220, 1
  %222 = or i32 %60, %79
  %223 = or i32 %97, %25
  %224 = or i32 %68, %46
  %225 = or i32 %27, %1
  %226 = and i32 %54, %86
  %227 = or i32 %27, %7
  %228 = xor i32 %157, -1
  %229 = xor i32 %101, %228
  %230 = and i32 %33, %1
  %231 = or i32 %60, %93
  %232 = or i32 %43, %57
  %233 = xor i32 %35, %143
  %234 = and i32 %24, %33
  %235 = or i32 %79, %0
  %236 = or i32 %10, %74
  %237 = and i32 %10, %73
  %238 = or i32 %143, %46
  %239 = xor i32 %49, %1
  %240 = and i32 %27, %7
  %241 = xor i32 %110, -1
  %242 = xor i32 %9, %241
  %243 = and i32 %44, %1
  %244 = and i32 %38, %31
  %245 = and i32 %73, %31
  %246 = or i32 %26, %24
  %247 = shl i32 %246, 1
  %248 = or i32 %26, %1
  %249 = and i32 %26, %24
  %250 = xor i32 %134, -1
  %251 = xor i32 %42, %250
  %252 = and i32 %86, %2
  %253 = xor i32 %100, %250
  %254 = or i32 %9, %64
  %255 = or i32 %32, %7
  %256 = or i32 %52, %7
  %257 = shl i32 %256, 1
  %258 = and i32 %36, %2
  %259 = xor i32 %29, %60
  %260 = and i32 %27, %25
  %261 = xor i32 %43, %29
  %262 = or i32 %29, %46
  %263 = and i32 %38, %54
  %264 = and i32 %24, %31
  %265 = or i32 %32, %68
  %266 = shl i32 %265, 1
  %267 = or i32 %142, %46
  %268 = or i32 %43, %1
  %269 = or i32 %47, %0
  %270 = or i32 %43, %93
  %271 = shl i32 %102, 1
  %272 = and i32 %26, %36
  %273 = xor i32 %73, %2
  %274 = xor i32 %35, %76
  %275 = and i32 %33, %25
  %276 = xor i32 %142, %0
  %277 = and i32 %31, %86
  %278 = and i32 %31, %25
  %279 = xor i32 %101, %102
  %280 = or i32 %26, %74
  %281 = or i32 %74, %2
  %282 = or i32 %69, %159
  %283 = or i32 %32, %24
  %284 = or i32 %54, %46
  %285 = or i32 %43, %24
  %286 = shl i32 %142, 1
  %287 = xor i32 %57, %2
  %288 = add i32 %47, 1
  %289 = or i32 %26, %57
  %290 = and i32 %24, %2
  %291 = or i32 %35, %31
  %292 = and i32 %96, %7
  %293 = and i32 %26, %1
  %294 = shl i32 %36, 1
  %295 = and i32 %27, %86
  %296 = and i32 %31, %36
  %297 = or i32 %68, %35
  %298 = or i32 %57, %2
  %299 = xor i32 %97, %1
  %300 = add i32 %68, 1
  %301 = xor i32 %143, %0
  %302 = shl i32 %301, 1
  %303 = and i32 %96, %25
  %304 = xor i32 %60, %2
  %305 = or i32 %54, %74
  %306 = or i32 %25, %2
  %307 = and i32 %10, %86
  %308 = and i32 %93, %46
  %309 = and i32 %142, %46
  %310 = and i32 %93, %0
  %311 = and i32 %142, %0
  %312 = mul i32 %311, 31
  %313 = and i32 %79, %46
  %314 = mul i32 %313, 20
  %315 = and i32 %79, %0
  %316 = mul i32 %315, -6
  %317 = and i32 %4, %3
  %318 = xor i32 %317, -1
  %319 = and i32 %318, %5
  %320 = or i32 %5, %3
  %321 = or i32 %320, %4
  %322 = xor i32 %4, %3
  %323 = xor i32 %322, -1
  %324 = xor i32 %5, %4
  %325 = or i32 %324, %323
  %326 = or i32 %5, %4
  %327 = xor i32 %326, -1
  %328 = or i32 %322, %327
  %329 = or i32 %13, %323
  %330 = or i32 %13, %3
  %331 = and i32 %330, %4
  %332 = or i32 %19, %4
  %333 = xor i32 %4, -1
  %334 = and i32 %320, %333
  %335 = and i32 %324, %322
  %336 = or i32 %20, %4
  %337 = shl i32 %336, 1
  %338 = and i32 %5, %4
  %339 = xor i32 %3, -1
  %340 = or i32 %339, %4
  %341 = xor i32 %338, %340
  %342 = or i32 %322, %5
  %343 = xor i32 %340, -1
  %344 = or i32 %19, %343
  %345 = and i32 %13, %3
  %346 = or i32 %345, %333
  %347 = or i32 %13, %4
  %348 = and i32 %347, %3
  %349 = or i32 %4, %3
  %350 = xor i32 %349, -1
  %351 = or i32 %324, %350
  %352 = and i32 %13, %318
  %353 = or i32 %20, %333
  %354 = xor i32 %340, %5
  %355 = xor i32 %320, -1
  %356 = xor i32 %355, %4
  %357 = and i32 %15, %4
  %358 = and i32 %19, %333
  %359 = or i32 %357, %358
  %360 = shl i32 %359, 1
  %361 = or i32 %338, %322
  %362 = xor i32 %324, -1
  %363 = or i32 %317, %362
  %364 = shl i32 %363, 1
  %365 = xor i32 %16, %4
  %366 = and i32 %339, %4
  %367 = xor i32 %366, %16
  %368 = or i32 %20, %343
  %369 = or i32 %330, %4
  %370 = and i32 %339, %5
  %371 = and i32 %370, %4
  %372 = xor i32 %371, %332
  %373 = xor i32 %14, -1
  %374 = and i32 %322, %373
  %375 = shl i32 %374, 1
  %376 = or i32 %317, %355
  %377 = or i32 %14, %3
  %378 = shl i32 %377, 1
  %379 = or i32 %338, %350
  %380 = or i32 %345, %4
  %381 = or i32 %14, %15
  %382 = or i32 %317, %13
  %383 = xor i32 %345, -1
  %384 = or i32 %383, %4
  %385 = xor i32 %383, %4
  %386 = shl i32 %385, 1
  %387 = xor i32 %317, %5
  %388 = and i32 %324, %318
  %389 = xor i32 %19, %4
  %390 = or i32 %371, %389
  %391 = xor i32 %347, -1
  %392 = shl i32 %391, 2
  %393 = and i32 %326, %322
  %394 = xor i32 %347, %3
  %395 = or i32 %366, %362
  %396 = add i32 %14, 1
  %397 = and i32 %19, %318
  %398 = or i32 %350, %5
  %399 = xor i32 %338, %349
  %400 = or i32 %366, %13
  %401 = xor i32 %326, %3
  %402 = xor i32 %366, -1
  %403 = and i32 %19, %402
  %404 = or i32 %317, %5
  %405 = and i32 %324, %402
  %406 = or i32 %317, %20
  %407 = or i32 %14, %323
  %408 = or i32 %362, %3
  %409 = add i32 %326, 1
  %410 = and i32 %349, %362
  %411 = xor i32 %327, %3
  %412 = add i32 %324, 1
  %413 = or i32 %355, %4
  %414 = and i32 %19, %340
  %415 = shl i32 %414, 1
  %416 = and i32 %15, %333
  %417 = and i32 %320, %4
  %418 = or i32 %416, %417
  %419 = and i32 %20, %402
  %420 = shl i32 %419, 1
  %421 = and i32 %370, %333
  %422 = or i32 %339, %5
  %423 = and i32 %422, %4
  %424 = xor i32 %423, 2147483647
  %425 = xor i32 %424, %421
  %426 = xor i32 %402, %5
  %427 = and i32 %16, %4
  %428 = xor i32 %318, %5
  %429 = xor i32 %343, %5
  %430 = shl i32 %429, 2
  %431 = and i32 %322, %5
  %432 = or i32 %317, %327
  %433 = xor i32 %366, %5
  %434 = shl i32 %433, 1
  %435 = or i32 %338, %323
  %436 = xor i32 %366, %383
  %437 = and i32 %383, %333
  %438 = xor i32 %14, %3
  %439 = and i32 %326, %3
  %440 = xor i32 %357, %389
  %441 = and i32 %19, %4
  %442 = or i32 %416, %441
  %443 = add i32 %4, 1
  %444 = xor i32 %320, %4
  %445 = xor i32 %357, -1
  %446 = xor i32 %444, %445
  %447 = xor i32 %422, %4
  %448 = or i32 %371, %447
  %449 = xor i32 %330, %4
  %450 = or i32 %13, %343
  %451 = or i32 %324, %322
  %452 = or i32 %345, %366
  %453 = or i32 %317, %391
  %454 = xor i32 %345, %4
  %455 = or i32 %362, %343
  %456 = shl i32 %455, 1
  %457 = xor i32 %330, -1
  %458 = add i32 %330, 1
  %459 = and i32 %13, %323
  %460 = or i32 %343, %5
  %461 = and i32 %349, %5
  %462 = xor i32 %347, %317
  %463 = xor i32 %389, 2147483647
  %464 = or i32 %463, %357
  %465 = shl i32 %389, 1
  %466 = and i32 %340, %13
  %467 = and i32 %373, %339
  %468 = or i32 %13, %350
  %469 = and i32 %323, %5
  %470 = shl i32 %469, 2
  %471 = or i32 %324, %3
  %472 = or i32 %323, %5
  %473 = xor i32 %338, %383
  %474 = or i32 %366, %5
  %475 = or i32 %324, %343
  %476 = xor i32 %358, %445
  %477 = or i32 %366, %20
  %478 = or i32 %338, %3
  %479 = or i32 %324, %339
  %480 = xor i32 %320, %317
  %481 = or i32 %19, %333
  %482 = and i32 %324, %349
  %483 = and i32 %349, %20
  %484 = or i32 %362, %323
  %485 = and i32 %324, %3
  %486 = xor i32 %334, %445
  %487 = and i32 %20, %333
  %488 = or i32 %16, %4
  %489 = and i32 %373, %3
  %490 = xor i32 %338, %3
  %491 = and i32 %347, %339
  %492 = or i32 %355, %333
  %493 = or i32 %330, %333
  %494 = or i32 %15, %333
  %495 = and i32 %16, %333
  %496 = shl i32 %495, 1
  %497 = or i32 %20, %350
  %498 = or i32 %362, %350
  %499 = and i32 %322, %362
  %500 = shl i32 %499, 1
  %501 = and i32 %362, %339
  %502 = xor i32 %332, -1
  %503 = or i32 %371, %502
  %504 = and i32 %349, %13
  %505 = xor i32 %326, %317
  %506 = xor i32 %457, %4
  %507 = xor i32 %15, %4
  %508 = and i32 %13, %402
  %509 = and i32 %402, %5
  %510 = or i32 %14, %457
  %511 = and i32 %19, %349
  %512 = or i32 %322, %362
  %513 = and i32 %324, %323
  %514 = xor i32 %391, %3
  %515 = shl i32 %514, 1
  %516 = or i32 %338, %355
  %517 = shl i32 %516, 1
  %518 = and i32 %362, %318
  %519 = xor i32 %338, -1
  %520 = and i32 %322, %519
  %521 = or i32 %357, %334
  %522 = or i32 %338, %343
  %523 = shl i32 %323, 1
  %524 = and i32 %340, %5
  %525 = and i32 %20, %318
  %526 = shl i32 %347, 1
  %527 = xor i32 %481, -1
  %528 = or i32 %421, %527
  %529 = or i32 %357, %444
  %530 = xor i32 %14, %330
  %531 = or i32 %15, %366
  %532 = and i32 %422, %333
  %533 = or i32 %371, %532
  %534 = and i32 %355, %333
  %535 = and i32 %345, %333
  %536 = mul i32 %535, 12
  %537 = and i32 %355, %4
  %538 = and i32 %345, %4
  %539 = and i32 %457, %333
  %540 = and i32 %457, %4
  %541 = mul i32 %357, 25
  %542 = add i32 %24, %1
  %543 = add i32 %542, %296
  %544 = add i32 %543, %205
  %545 = add i32 %544, %299
  %546 = add i32 %545, %295
  %547 = add i32 %546, %285
  %548 = add i32 %547, %70
  %549 = add i32 %548, %235
  %550 = add i32 %549, %230
  %551 = add i32 %550, %222
  %552 = add i32 %551, %185
  %553 = add i32 %552, %162
  %554 = add i32 %553, %131
  %555 = add i32 %554, %45
  %556 = add i32 %555, %317
  %557 = add i32 %556, %279
  %558 = add i32 %557, %466
  %559 = add i32 %558, %84
  %560 = add i32 %559, %507
  %561 = add i32 %560, %493
  %562 = add i32 %561, %490
  %563 = add i32 %562, %488
  %564 = add i32 %563, %479
  %565 = add i32 %564, %439
  %566 = add i32 %565, %435
  %567 = add i32 %566, %432
  %568 = add i32 %567, %394
  %569 = add i32 %568, %332
  %570 = add i32 %569, %425
  %571 = add i32 %570, %464
  %572 = shl i32 %571, 1
  %573 = sub i32 %147, %273
  %574 = sub i32 %573, %69
  %575 = add i32 %574, %292
  %576 = sub i32 %575, %508
  %577 = sub i32 %576, %338
  %578 = add i32 %577, %321
  %579 = add i32 %578, %538
  %580 = mul i32 %579, 5
  %581 = add i32 %272, %27
  %582 = sub i32 %581, %215
  %583 = add i32 %582, %135
  %584 = add i32 %583, %458
  %585 = add i32 %584, %410
  %586 = sub i32 %585, %497
  %587 = mul i32 %586, 3
  %588 = or i32 %540, %416
  %589 = shl i32 %588, 3
  %590 = add i32 %539, %310
  %591 = mul i32 %590, 21
  %592 = sub i32 %309, %537
  %593 = mul i32 %592, 9
  %594 = add i32 %534, %308
  %595 = mul i32 %594, 14
  %596 = add i32 %184, 1073741823
  %597 = add i32 %596, %88
  %598 = add i32 %597, %335
  %599 = shl i32 %598, 2
  %600 = sub i32 3, %0
  %601 = sub i32 %600, %0
  %602 = add i32 %601, %7
  %603 = add i32 %602, %89
  %604 = add i32 %603, %109
  %605 = add i32 %604, %73
  %606 = sub i32 %605, %38
  %607 = add i32 %606, %25
  %608 = add i32 %607, %60
  %609 = sub i32 %608, %35
  %610 = add i32 %609, %57
  %611 = sub i32 %610, %56
  %612 = add i32 %611, %59
  %613 = add i32 %612, %87
  %614 = sub i32 %613, %125
  %615 = add i32 %614, %130
  %616 = add i32 %615, %133
  %617 = sub i32 %616, %47
  %618 = sub i32 %617, %138
  %619 = add i32 %618, %156
  %620 = sub i32 %619, %68
  %621 = add i32 %620, %143
  %622 = sub i32 %621, %169
  %623 = sub i32 %622, %172
  %624 = add i32 %623, %195
  %625 = sub i32 %624, %32
  %626 = add i32 %625, %213
  %627 = add i32 %626, %216
  %628 = add i32 %627, %244
  %629 = add i32 %628, %245
  %630 = sub i32 %629, %252
  %631 = add i32 %630, %258
  %632 = add i32 %631, %264
  %633 = sub i32 %632, %277
  %634 = add i32 %633, %278
  %635 = sub i32 %634, %26
  %636 = add i32 %635, %281
  %637 = add i32 %636, %287
  %638 = add i32 %637, %288
  %639 = add i32 %638, %290
  %640 = add i32 %639, %291
  %641 = sub i32 %640, %294
  %642 = add i32 %641, %43
  %643 = add i32 %642, %298
  %644 = add i32 %643, %300
  %645 = sub i32 %644, %304
  %646 = sub i32 %645, %306
  %647 = add i32 %646, %29
  %648 = add i32 %647, %30
  %649 = add i32 %648, %28
  %650 = sub i32 %649, %34
  %651 = add i32 %650, %37
  %652 = sub i32 %651, %39
  %653 = sub i32 %652, %42
  %654 = sub i32 %653, %48
  %655 = sub i32 %654, %50
  %656 = sub i32 %655, %51
  %657 = sub i32 %656, %53
  %658 = sub i32 %657, %55
  %659 = sub i32 %658, %58
  %660 = add i32 %659, %61
  %661 = sub i32 %660, %62
  %662 = sub i32 %661, %72
  %663 = add i32 %662, %75
  %664 = sub i32 %663, %77
  %665 = sub i32 %664, %78
  %666 = sub i32 %665, %80
  %667 = sub i32 %666, %90
  %668 = sub i32 %667, %94
  %669 = sub i32 %668, %95
  %670 = sub i32 %669, %98
  %671 = add i32 %670, %99
  %672 = sub i32 %671, %100
  %673 = add i32 %672, %105
  %674 = sub i32 %673, %108
  %675 = add i32 %674, %112
  %676 = add i32 %675, %113
  %677 = sub i32 %676, %114
  %678 = add i32 %677, %117
  %679 = add i32 %678, %118
  %680 = sub i32 %679, %120
  %681 = add i32 %680, %121
  %682 = sub i32 %681, %124
  %683 = add i32 %682, %11
  %684 = add i32 %683, %128
  %685 = add i32 %684, %115
  %686 = add i32 %685, %129
  %687 = sub i32 %686, %132
  %688 = add i32 %687, %136
  %689 = sub i32 %688, %40
  %690 = sub i32 %689, %137
  %691 = add i32 %690, %141
  %692 = add i32 %691, %144
  %693 = sub i32 %692, %145
  %694 = sub i32 %693, %146
  %695 = sub i32 %694, %148
  %696 = add i32 %695, %149
  %697 = add i32 %696, %150
  %698 = add i32 %697, %151
  %699 = add i32 %698, %163
  %700 = add i32 %699, %164
  %701 = sub i32 %700, %168
  %702 = sub i32 %701, %170
  %703 = sub i32 %702, %171
  %704 = sub i32 %703, %173
  %705 = add i32 %704, %174
  %706 = add i32 %705, %175
  %707 = add i32 %706, %176
  %708 = add i32 %707, %179
  %709 = sub i32 %708, %181
  %710 = sub i32 %709, %182
  %711 = add i32 %710, %183
  %712 = add i32 %711, %186
  %713 = sub i32 %712, %187
  %714 = sub i32 %713, %188
  %715 = sub i32 %714, %189
  %716 = sub i32 %715, %190
  %717 = sub i32 %716, %191
  %718 = add i32 %717, %192
  %719 = sub i32 %718, %193
  %720 = sub i32 %719, %194
  %721 = add i32 %720, %200
  %722 = add i32 %721, %202
  %723 = sub i32 %722, %203
  %724 = add i32 %723, %204
  %725 = add i32 %724, %206
  %726 = sub i32 %725, %209
  %727 = add i32 %726, %210
  %728 = sub i32 %727, %212
  %729 = add i32 %728, %214
  %730 = add i32 %729, %217
  %731 = sub i32 %730, %223
  %732 = add i32 %731, %224
  %733 = sub i32 %732, %225
  %734 = sub i32 %733, %226
  %735 = sub i32 %734, %227
  %736 = add i32 %735, %231
  %737 = add i32 %736, %232
  %738 = sub i32 %737, %233
  %739 = add i32 %738, %234
  %740 = sub i32 %739, %236
  %741 = sub i32 %740, %237
  %742 = sub i32 %741, %238
  %743 = add i32 %742, %239
  %744 = add i32 %743, %240
  %745 = sub i32 %744, %243
  %746 = add i32 %745, %248
  %747 = add i32 %746, %249
  %748 = add i32 %747, %255
  %749 = sub i32 %748, %259
  %750 = add i32 %749, %260
  %751 = sub i32 %750, %261
  %752 = sub i32 %751, %262
  %753 = add i32 %752, %263
  %754 = add i32 %753, %267
  %755 = sub i32 %754, %268
  %756 = add i32 %755, %269
  %757 = sub i32 %756, %270
  %758 = add i32 %757, %274
  %759 = add i32 %758, %275
  %760 = sub i32 %759, %276
  %761 = add i32 %760, %280
  %762 = add i32 %761, %283
  %763 = sub i32 %762, %284
  %764 = sub i32 %763, %286
  %765 = add i32 %764, %289
  %766 = add i32 %765, %293
  %767 = sub i32 %766, %297
  %768 = add i32 %767, %303
  %769 = sub i32 %768, %305
  %770 = sub i32 %769, %307
  %771 = sub i32 %770, %134
  %772 = add i32 %771, %443
  %773 = sub i32 %772, %41
  %774 = sub i32 %773, %71
  %775 = sub i32 %774, %82
  %776 = add i32 %775, %85
  %777 = sub i32 %776, %92
  %778 = sub i32 %777, %104
  %779 = sub i32 %778, %107
  %780 = add i32 %779, %111
  %781 = add i32 %780, %116
  %782 = add i32 %781, %119
  %783 = sub i32 %782, %123
  %784 = sub i32 %783, %127
  %785 = sub i32 %784, %140
  %786 = sub i32 %785, %153
  %787 = sub i32 %786, %155
  %788 = add i32 %787, %158
  %789 = sub i32 %788, %166
  %790 = add i32 %789, %197
  %791 = sub i32 %790, %199
  %792 = sub i32 %791, %201
  %793 = sub i32 %792, %208
  %794 = sub i32 %793, %219
  %795 = sub i32 %794, %221
  %796 = sub i32 %795, %229
  %797 = sub i32 %796, %242
  %798 = sub i32 %797, %247
  %799 = sub i32 %798, %251
  %800 = add i32 %799, %253
  %801 = add i32 %800, %254
  %802 = sub i32 %801, %257
  %803 = sub i32 %802, %266
  %804 = sub i32 %803, %271
  %805 = sub i32 %804, %282
  %806 = sub i32 %805, %302
  %807 = add i32 %806, %312
  %808 = add i32 %807, %314
  %809 = add i32 %808, %316
  %810 = add i32 %809, %317
  %811 = add i32 %810, 2
  %812 = add i32 %811, %5
  %813 = sub i32 %812, %340
  %814 = add i32 %813, %343
  %815 = sub i32 %814, %322
  %816 = add i32 %815, %402
  %817 = sub i32 %816, %161
  %818 = sub i32 %817, %178
  %819 = add i32 %818, %319
  %820 = add i32 %819, %329
  %821 = sub i32 %820, %342
  %822 = add i32 %821, %352
  %823 = sub i32 %822, %354
  %824 = sub i32 %823, %382
  %825 = add i32 %824, %387
  %826 = add i32 %825, %396
  %827 = sub i32 %826, %398
  %828 = sub i32 %827, %400
  %829 = sub i32 %828, %404
  %830 = add i32 %829, %409
  %831 = add i32 %830, %412
  %832 = add i32 %831, %426
  %833 = sub i32 %832, %428
  %834 = sub i32 %833, %431
  %835 = sub i32 %834, %324
  %836 = sub i32 %835, %450
  %837 = add i32 %836, %16
  %838 = sub i32 %837, %459
  %839 = sub i32 %838, %460
  %840 = add i32 %839, %461
  %841 = add i32 %840, %468
  %842 = sub i32 %841, %472
  %843 = add i32 %842, %474
  %844 = add i32 %843, %355
  %845 = add i32 %844, %504
  %846 = sub i32 %845, %509
  %847 = sub i32 %846, %523
  %848 = sub i32 %847, %524
  %849 = add i32 %848, %383
  %850 = sub i32 %849, %67
  %851 = add i32 %850, %325
  %852 = sub i32 %851, %328
  %853 = add i32 %852, %331
  %854 = add i32 %853, %334
  %855 = sub i32 %854, %341
  %856 = sub i32 %855, %344
  %857 = sub i32 %856, %346
  %858 = add i32 %857, %348
  %859 = add i32 %858, %351
  %860 = add i32 %859, %353
  %861 = sub i32 %860, %356
  %862 = add i32 %861, %361
  %863 = sub i32 %862, %365
  %864 = sub i32 %863, %367
  %865 = add i32 %864, %368
  %866 = add i32 %865, %369
  %867 = sub i32 %866, %376
  %868 = add i32 %867, %379
  %869 = add i32 %868, %380
  %870 = sub i32 %869, %381
  %871 = add i32 %870, %384
  %872 = add i32 %871, %388
  %873 = sub i32 %872, %392
  %874 = add i32 %873, %393
  %875 = add i32 %874, %395
  %876 = sub i32 %875, %397
  %877 = sub i32 %876, %399
  %878 = sub i32 %877, %401
  %879 = add i32 %878, %403
  %880 = sub i32 %879, %405
  %881 = sub i32 %880, %406
  %882 = add i32 %881, %407
  %883 = sub i32 %882, %408
  %884 = sub i32 %883, %358
  %885 = sub i32 %884, %411
  %886 = sub i32 %885, %413
  %887 = add i32 %886, %427
  %888 = sub i32 %887, %430
  %889 = sub i32 %888, %434
  %890 = sub i32 %889, %436
  %891 = sub i32 %890, %437
  %892 = sub i32 %891, %438
  %893 = add i32 %892, %449
  %894 = add i32 %893, %451
  %895 = sub i32 %894, %452
  %896 = sub i32 %895, %453
  %897 = add i32 %896, %454
  %898 = add i32 %897, %462
  %899 = sub i32 %898, %467
  %900 = sub i32 %899, %470
  %901 = add i32 %900, %471
  %902 = sub i32 %901, %473
  %903 = add i32 %902, %475
  %904 = sub i32 %903, %477
  %905 = sub i32 %904, %478
  %906 = add i32 %905, %480
  %907 = sub i32 %906, %481
  %908 = sub i32 %907, %482
  %909 = add i32 %908, %483
  %910 = add i32 %909, %484
  %911 = sub i32 %910, %485
  %912 = sub i32 %911, %487
  %913 = sub i32 %912, %489
  %914 = add i32 %913, %491
  %915 = add i32 %914, %492
  %916 = add i32 %915, %494
  %917 = add i32 %916, %498
  %918 = add i32 %917, %501
  %919 = add i32 %918, %505
  %920 = sub i32 %919, %506
  %921 = sub i32 %920, %510
  %922 = sub i32 %921, %511
  %923 = add i32 %922, %512
  %924 = sub i32 %923, %513
  %925 = sub i32 %924, %518
  %926 = sub i32 %925, %520
  %927 = sub i32 %926, %522
  %928 = add i32 %927, %525
  %929 = sub i32 %928, %526
  %930 = sub i32 %929, %441
  %931 = add i32 %930, %530
  %932 = sub i32 %931, %531
  %933 = sub i32 %932, %337
  %934 = sub i32 %933, %364
  %935 = sub i32 %934, %372
  %936 = sub i32 %935, %375
  %937 = sub i32 %936, %378
  %938 = sub i32 %937, %386
  %939 = add i32 %938, %390
  %940 = sub i32 %939, %415
  %941 = sub i32 %940, %418
  %942 = sub i32 %941, %420
  %943 = add i32 %942, %440
  %944 = add i32 %943, %442
  %945 = add i32 %944, %446
  %946 = add i32 %945, %448
  %947 = sub i32 %946, %456
  %948 = sub i32 %947, %465
  %949 = sub i32 %948, %476
  %950 = sub i32 %949, %486
  %951 = sub i32 %950, %496
  %952 = sub i32 %951, %500
  %953 = sub i32 %952, %503
  %954 = sub i32 %953, %515
  %955 = sub i32 %954, %517
  %956 = sub i32 %955, %521
  %957 = add i32 %956, %528
  %958 = sub i32 %957, %529
  %959 = add i32 %958, %533
  %960 = add i32 %959, %536
  %961 = add i32 %960, %541
  %962 = sub i32 %961, %360
  %963 = add i32 %962, %589
  %964 = add i32 %963, %591
  %965 = add i32 %964, %593
  %966 = add i32 %965, %595
  %967 = add i32 %966, %599
  %968 = add i32 %967, %587
  %969 = add i32 %968, %580
  %970 = add i32 %969, %572
  %971 = icmp eq i32 %23, %970
  %972 = select i1 %971, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %973 = tail call i32 @puts(i8* nonnull dereferenceable(1) %972)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
