digraph "DFG for'main' function" {
	Node0xff1e98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xff1f18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xff1fa8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xff2008[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xff20b8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xff24e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xff25c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xff26c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xff2788[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xff2838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xff28f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xff29a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xfecc00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xff2ba8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xff3b18[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xff4188[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xff41e8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xff4260[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0xff42d0[shape=record, label="  %15 = or i32 %12, %11"];
	Node0xff4340[shape=record, label="  %16 = and i32 %11, %14"];
	Node0xff43b0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0xff4420[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0xff4490[shape=record, label="  %19 = or i32 %11, %14"];
	Node0xff4500[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0xff4570[shape=record, label="  %21 = and i32 %12, %11"];
	Node0xff45e0[shape=record, label="  %22 = shl i32 %15, 2"];
	Node0xff4650[shape=record, label="  %23 = xor i32 %22, -4"];
	Node0xff46c0[shape=record, label="  %24 = or i32 %13, %10"];
	Node0xff4730[shape=record, label="  %25 = xor i32 %10, -1"];
	Node0xff47a0[shape=record, label="  %26 = and i32 %13, %25"];
	Node0xff4810[shape=record, label="  %27 = or i32 %13, %25"];
	Node0xff4880[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0xff48f0[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0xff4960[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0xff49d0[shape=record, label="  %31 = xor i32 %24, -1"];
	Node0xff4a40[shape=record, label="  %32 = xor i32 %27, -1"];
	Node0xff4ab0[shape=record, label="  %33 = and i32 %13, %10"];
	Node0xff4b20[shape=record, label="  %34 = sub i32 %32, %16"];
	Node0xff4b90[shape=record, label="  %35 = add i32 %34, %33"];
	Node0xff4c00[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0xff4c70[shape=record, label="  %37 = sub i32 %31, %21"];
	Node0xff4ce0[shape=record, label="  %38 = mul i32 %37, 5"];
	Node0xff4d50[shape=record, label="  %39 = add i32 %26, %19"];
	Node0xff4dc0[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0xff4e30[shape=record, label="  %41 = add i32 %10, 5"];
	Node0xff4ea0[shape=record, label="  %42 = add i32 %41, %11"];
	Node0xff4f10[shape=record, label="  %43 = add i32 %42, %14"];
	Node0xff4f80[shape=record, label="  %44 = add i32 %43, %15"];
	Node0xff4ff0[shape=record, label="  %45 = sub i32 %44, %20"];
	Node0xff5060[shape=record, label="  %46 = add i32 %45, %21"];
	Node0xff50d0[shape=record, label="  %47 = add i32 %46, %24"];
	Node0xff5140[shape=record, label="  %48 = add i32 %47, %26"];
	Node0xff51b0[shape=record, label="  %49 = add i32 %48, %27"];
	Node0xff5220[shape=record, label="  %50 = sub i32 %49, %28"];
	Node0xff5290[shape=record, label="  %51 = add i32 %50, %18"];
	Node0xff5300[shape=record, label="  %52 = sub i32 %51, %23"];
	Node0xff5370[shape=record, label="  %53 = sub i32 %52, %30"];
	Node0xff53e0[shape=record, label="  %54 = add i32 %53, %38"];
	Node0xff5450[shape=record, label="  %55 = add i32 %54, %40"];
	Node0xff54c0[shape=record, label="  %56 = add i32 %55, %36"];
	Node0xff5530[shape=record, label="  %57 = icmp eq i32 %56, %12"];
	Node0xf918b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xff55c0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0xff5868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xff59c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xff5ad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xff5be8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xff5ca8[shape=record, label="  ret i32 0"];
	Node0xff1e98 -> Node0xff1f18;
	Node0xff1f18 -> Node0xff1fa8;
	Node0xff1fa8 -> Node0xff2008;
	Node0xff2008 -> Node0xff20b8;
	Node0xff20b8 -> Node0xff24e8;
	Node0xff24e8 -> Node0xff25c8;
	Node0xff25c8 -> Node0xff26c8;
	Node0xff26c8 -> Node0xff2788;
	Node0xff2788 -> Node0xff2838;
	Node0xff2838 -> Node0xff28f8;
	Node0xff28f8 -> Node0xff29a8;
	Node0xff29a8 -> Node0xfecc00;
	Node0xfecc00 -> Node0xff2ba8;
	Node0xff2ba8 -> Node0xff3b18;
	Node0xff3b18 -> Node0xff4188;
	Node0xff4188 -> Node0xff41e8;
	Node0xff41e8 -> Node0xff4260;
	Node0xff4260 -> Node0xff42d0;
	Node0xff42d0 -> Node0xff4340;
	Node0xff4340 -> Node0xff43b0;
	Node0xff43b0 -> Node0xff4420;
	Node0xff4420 -> Node0xff4490;
	Node0xff4490 -> Node0xff4500;
	Node0xff4500 -> Node0xff4570;
	Node0xff4570 -> Node0xff45e0;
	Node0xff45e0 -> Node0xff4650;
	Node0xff4650 -> Node0xff46c0;
	Node0xff46c0 -> Node0xff4730;
	Node0xff4730 -> Node0xff47a0;
	Node0xff47a0 -> Node0xff4810;
	Node0xff4810 -> Node0xff4880;
	Node0xff4880 -> Node0xff48f0;
	Node0xff48f0 -> Node0xff4960;
	Node0xff4960 -> Node0xff49d0;
	Node0xff49d0 -> Node0xff4a40;
	Node0xff4a40 -> Node0xff4ab0;
	Node0xff4ab0 -> Node0xff4b20;
	Node0xff4b20 -> Node0xff4b90;
	Node0xff4b90 -> Node0xff4c00;
	Node0xff4c00 -> Node0xff4c70;
	Node0xff4c70 -> Node0xff4ce0;
	Node0xff4ce0 -> Node0xff4d50;
	Node0xff4d50 -> Node0xff4dc0;
	Node0xff4dc0 -> Node0xff4e30;
	Node0xff4e30 -> Node0xff4ea0;
	Node0xff4ea0 -> Node0xff4f10;
	Node0xff4f10 -> Node0xff4f80;
	Node0xff4f80 -> Node0xff4ff0;
	Node0xff4ff0 -> Node0xff5060;
	Node0xff5060 -> Node0xff50d0;
	Node0xff50d0 -> Node0xff5140;
	Node0xff5140 -> Node0xff51b0;
	Node0xff51b0 -> Node0xff5220;
	Node0xff5220 -> Node0xff5290;
	Node0xff5290 -> Node0xff5300;
	Node0xff5300 -> Node0xff5370;
	Node0xff5370 -> Node0xff53e0;
	Node0xff53e0 -> Node0xff5450;
	Node0xff5450 -> Node0xff54c0;
	Node0xff54c0 -> Node0xff5530;
	Node0xff5530 -> Node0xf918b8;
	Node0xf918b8 -> Node0xff55c0;
	Node0xff55c0 -> Node0xff5868;
	Node0xff5868 -> Node0xff59c8;
	Node0xff59c8 -> Node0xff5ad8;
	Node0xff5ad8 -> Node0xff5be8;
	Node0xff5be8 -> Node0xff5ca8;
edge [color=red]
	Node0xff1e98 -> Node0xff20b8;
	Node0xff20b8 -> Node0xff24e8;
	Node0xff1f18 -> Node0xff25c8;
	Node0xff25c8 -> Node0xff26c8;
	Node0xff1fa8 -> Node0xff2788;
	Node0xff2788 -> Node0xff2838;
	Node0xff2008 -> Node0xff28f8;
	Node0xff28f8 -> Node0xff29a8;
	Node0xff1e98 -> Node0xfecc00;
	Node0xff1f18 -> Node0xfecc00;
	Node0xff1fa8 -> Node0xfecc00;
	Node0xff2008 -> Node0xfecc00;
	Node0xff1e98 -> Node0xff2ba8;
	Node0xff1f18 -> Node0xff3b18;
	Node0xff1fa8 -> Node0xff4188;
	Node0xff2008 -> Node0xff41e8;
	Node0xff4188 -> Node0xff4260;
	Node0xff4188 -> Node0xff42d0;
	Node0xff3b18 -> Node0xff42d0;
	Node0xff3b18 -> Node0xff4340;
	Node0xff4260 -> Node0xff4340;
	Node0xff4340 -> Node0xff43b0;
	Node0xff43b0 -> Node0xff4420;
	Node0xff3b18 -> Node0xff4490;
	Node0xff4260 -> Node0xff4490;
	Node0xff4188 -> Node0xff4500;
	Node0xff3b18 -> Node0xff4500;
	Node0xff4188 -> Node0xff4570;
	Node0xff3b18 -> Node0xff4570;
	Node0xff42d0 -> Node0xff45e0;
	Node0xff45e0 -> Node0xff4650;
	Node0xff41e8 -> Node0xff46c0;
	Node0xff2ba8 -> Node0xff46c0;
	Node0xff2ba8 -> Node0xff4730;
	Node0xff41e8 -> Node0xff47a0;
	Node0xff4730 -> Node0xff47a0;
	Node0xff41e8 -> Node0xff4810;
	Node0xff4730 -> Node0xff4810;
	Node0xff41e8 -> Node0xff4880;
	Node0xff2ba8 -> Node0xff4880;
	Node0xff4880 -> Node0xff48f0;
	Node0xff48f0 -> Node0xff4960;
	Node0xff46c0 -> Node0xff49d0;
	Node0xff4810 -> Node0xff4a40;
	Node0xff41e8 -> Node0xff4ab0;
	Node0xff2ba8 -> Node0xff4ab0;
	Node0xff4a40 -> Node0xff4b20;
	Node0xff4340 -> Node0xff4b20;
	Node0xff4b20 -> Node0xff4b90;
	Node0xff4ab0 -> Node0xff4b90;
	Node0xff4b90 -> Node0xff4c00;
	Node0xff49d0 -> Node0xff4c70;
	Node0xff4570 -> Node0xff4c70;
	Node0xff4c70 -> Node0xff4ce0;
	Node0xff47a0 -> Node0xff4d50;
	Node0xff4490 -> Node0xff4d50;
	Node0xff4d50 -> Node0xff4dc0;
	Node0xff2ba8 -> Node0xff4e30;
	Node0xff4e30 -> Node0xff4ea0;
	Node0xff3b18 -> Node0xff4ea0;
	Node0xff4ea0 -> Node0xff4f10;
	Node0xff4260 -> Node0xff4f10;
	Node0xff4f10 -> Node0xff4f80;
	Node0xff42d0 -> Node0xff4f80;
	Node0xff4f80 -> Node0xff4ff0;
	Node0xff4500 -> Node0xff4ff0;
	Node0xff4ff0 -> Node0xff5060;
	Node0xff4570 -> Node0xff5060;
	Node0xff5060 -> Node0xff50d0;
	Node0xff46c0 -> Node0xff50d0;
	Node0xff50d0 -> Node0xff5140;
	Node0xff47a0 -> Node0xff5140;
	Node0xff5140 -> Node0xff51b0;
	Node0xff4810 -> Node0xff51b0;
	Node0xff51b0 -> Node0xff5220;
	Node0xff4880 -> Node0xff5220;
	Node0xff5220 -> Node0xff5290;
	Node0xff4420 -> Node0xff5290;
	Node0xff5290 -> Node0xff5300;
	Node0xff4650 -> Node0xff5300;
	Node0xff5300 -> Node0xff5370;
	Node0xff4960 -> Node0xff5370;
	Node0xff5370 -> Node0xff53e0;
	Node0xff4ce0 -> Node0xff53e0;
	Node0xff53e0 -> Node0xff5450;
	Node0xff4dc0 -> Node0xff5450;
	Node0xff5450 -> Node0xff54c0;
	Node0xff4c00 -> Node0xff54c0;
	Node0xff54c0 -> Node0xff5530;
	Node0xff4188 -> Node0xff5530;
	Node0xff5530 -> Node0xf918b8;
	Node0xf918b8 -> Node0xff55c0;
	Node0xff28f8 -> Node0xff5868;
	Node0xff2788 -> Node0xff59c8;
	Node0xff25c8 -> Node0xff5ad8;
	Node0xff20b8 -> Node0xff5be8;
}
