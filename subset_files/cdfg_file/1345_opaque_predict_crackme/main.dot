digraph "DFG for'main' function" {
	Node0x5d1d68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5d1de8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5d1e78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x5d22d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x5d23b8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x5d24d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5d2710[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x5d27c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5d3738[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x5d3dc0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x5d3e30[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x5d3ea0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x5d3f10[shape=record, label="  %11 = mul i32 %10, -2"];
	Node0x5d3f80[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x5d3ff0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x5d4060[shape=record, label="  %14 = add i32 %11, %13"];
	Node0x5d40d0[shape=record, label="  %15 = or i32 %6, %8"];
	Node0x5d4140[shape=record, label="  %16 = xor i32 %7, %6"];
	Node0x5d41b0[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x5d4220[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x5d4290[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x5d4300[shape=record, label="  %20 = shl i32 %15, 1"];
	Node0x5d4370[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x5d43e0[shape=record, label="  %22 = shl i32 %9, 1"];
	Node0x5d4450[shape=record, label="  %23 = sub i32 %16, %7"];
	Node0x5d44c0[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x5d4530[shape=record, label="  %25 = sub i32 %15, %6"];
	Node0x5d45a0[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x5d4610[shape=record, label="  %27 = sub i32 %26, %12"];
	Node0x5d4680[shape=record, label="  %28 = sub i32 %27, %22"];
	Node0x5d46f0[shape=record, label="  %29 = sub i32 %28, %19"];
	Node0x5d4760[shape=record, label="  %30 = sub i32 %29, %21"];
	Node0x5d47d0[shape=record, label="  %31 = add i32 %30, %24"];
	Node0x5d4840[shape=record, label="  %32 = icmp eq i32 %14, %31"];
	Node0x5729d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x5d4ae0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x5d4d38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5d4e98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x5d4f58[shape=record, label="  ret i32 0"];
	Node0x5d1d68 -> Node0x5d1de8;
	Node0x5d1de8 -> Node0x5d1e78;
	Node0x5d1e78 -> Node0x5d22d8;
	Node0x5d22d8 -> Node0x5d23b8;
	Node0x5d23b8 -> Node0x5d24d8;
	Node0x5d24d8 -> Node0x5d2710;
	Node0x5d2710 -> Node0x5d27c8;
	Node0x5d27c8 -> Node0x5d3738;
	Node0x5d3738 -> Node0x5d3dc0;
	Node0x5d3dc0 -> Node0x5d3e30;
	Node0x5d3e30 -> Node0x5d3ea0;
	Node0x5d3ea0 -> Node0x5d3f10;
	Node0x5d3f10 -> Node0x5d3f80;
	Node0x5d3f80 -> Node0x5d3ff0;
	Node0x5d3ff0 -> Node0x5d4060;
	Node0x5d4060 -> Node0x5d40d0;
	Node0x5d40d0 -> Node0x5d4140;
	Node0x5d4140 -> Node0x5d41b0;
	Node0x5d41b0 -> Node0x5d4220;
	Node0x5d4220 -> Node0x5d4290;
	Node0x5d4290 -> Node0x5d4300;
	Node0x5d4300 -> Node0x5d4370;
	Node0x5d4370 -> Node0x5d43e0;
	Node0x5d43e0 -> Node0x5d4450;
	Node0x5d4450 -> Node0x5d44c0;
	Node0x5d44c0 -> Node0x5d4530;
	Node0x5d4530 -> Node0x5d45a0;
	Node0x5d45a0 -> Node0x5d4610;
	Node0x5d4610 -> Node0x5d4680;
	Node0x5d4680 -> Node0x5d46f0;
	Node0x5d46f0 -> Node0x5d4760;
	Node0x5d4760 -> Node0x5d47d0;
	Node0x5d47d0 -> Node0x5d4840;
	Node0x5d4840 -> Node0x5729d8;
	Node0x5729d8 -> Node0x5d4ae0;
	Node0x5d4ae0 -> Node0x5d4d38;
	Node0x5d4d38 -> Node0x5d4e98;
	Node0x5d4e98 -> Node0x5d4f58;
edge [color=red]
	Node0x5d1d68 -> Node0x5d1e78;
	Node0x5d1e78 -> Node0x5d22d8;
	Node0x5d1de8 -> Node0x5d23b8;
	Node0x5d23b8 -> Node0x5d24d8;
	Node0x5d1d68 -> Node0x5d2710;
	Node0x5d1de8 -> Node0x5d2710;
	Node0x5d1d68 -> Node0x5d27c8;
	Node0x5d1de8 -> Node0x5d3738;
	Node0x5d3738 -> Node0x5d3dc0;
	Node0x5d27c8 -> Node0x5d3e30;
	Node0x5d3dc0 -> Node0x5d3e30;
	Node0x5d3e30 -> Node0x5d3ea0;
	Node0x5d3ea0 -> Node0x5d3f10;
	Node0x5d3738 -> Node0x5d3f80;
	Node0x5d27c8 -> Node0x5d3f80;
	Node0x5d3f80 -> Node0x5d3ff0;
	Node0x5d3f10 -> Node0x5d4060;
	Node0x5d3ff0 -> Node0x5d4060;
	Node0x5d27c8 -> Node0x5d40d0;
	Node0x5d3dc0 -> Node0x5d40d0;
	Node0x5d3738 -> Node0x5d4140;
	Node0x5d27c8 -> Node0x5d4140;
	Node0x5d3738 -> Node0x5d41b0;
	Node0x5d27c8 -> Node0x5d41b0;
	Node0x5d41b0 -> Node0x5d4220;
	Node0x5d4220 -> Node0x5d4290;
	Node0x5d40d0 -> Node0x5d4300;
	Node0x5d4300 -> Node0x5d4370;
	Node0x5d3e30 -> Node0x5d43e0;
	Node0x5d4140 -> Node0x5d4450;
	Node0x5d3738 -> Node0x5d4450;
	Node0x5d4450 -> Node0x5d44c0;
	Node0x5d40d0 -> Node0x5d4530;
	Node0x5d27c8 -> Node0x5d4530;
	Node0x5d4530 -> Node0x5d45a0;
	Node0x5d41b0 -> Node0x5d45a0;
	Node0x5d45a0 -> Node0x5d4610;
	Node0x5d3f80 -> Node0x5d4610;
	Node0x5d4610 -> Node0x5d4680;
	Node0x5d43e0 -> Node0x5d4680;
	Node0x5d4680 -> Node0x5d46f0;
	Node0x5d4290 -> Node0x5d46f0;
	Node0x5d46f0 -> Node0x5d4760;
	Node0x5d4370 -> Node0x5d4760;
	Node0x5d4760 -> Node0x5d47d0;
	Node0x5d44c0 -> Node0x5d47d0;
	Node0x5d4060 -> Node0x5d4840;
	Node0x5d47d0 -> Node0x5d4840;
	Node0x5d4840 -> Node0x5729d8;
	Node0x5729d8 -> Node0x5d4ae0;
	Node0x5d23b8 -> Node0x5d4d38;
	Node0x5d1e78 -> Node0x5d4e98;
}
