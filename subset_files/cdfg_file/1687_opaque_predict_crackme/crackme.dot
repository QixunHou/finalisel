digraph "DFG for'crackme' function" {
	Node0x989a10[shape=record, label="  %4 = and i32 %1, %0"];
	Node0x989ad0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x989b40[shape=record, label="  %6 = or i32 %5, %4"];
	Node0x98a1c0[shape=record, label="  %7 = sub i32 0, %6"];
	Node0x98a260[shape=record, label="  %8 = xor i32 %2, -1"];
	Node0x98a2d0[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0x98a340[shape=record, label="  %10 = or i32 %9, %1"];
	Node0x98a3b0[shape=record, label="  %11 = and i32 %10, %8"];
	Node0x98a420[shape=record, label="  %12 = and i32 %8, %1"];
	Node0x98a4c0[shape=record, label="  %13 = add i32 %12, 1"];
	Node0x98a530[shape=record, label="  %14 = xor i32 %1, %0"];
	Node0x98a5a0[shape=record, label="  %15 = and i32 %9, %1"];
	Node0x98a610[shape=record, label="  %16 = or i32 %15, %8"];
	Node0x98a680[shape=record, label="  %17 = or i32 %2, %1"];
	Node0x98a6f0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x98a760[shape=record, label="  %19 = and i32 %18, %9"];
	Node0x98a7d0[shape=record, label="  %20 = and i32 %12, %9"];
	Node0x98a870[shape=record, label="  %21 = mul i32 %20, -3"];
	Node0x98a8e0[shape=record, label="  %22 = and i32 %18, %0"];
	Node0x98a950[shape=record, label="  %23 = and i32 %12, %0"];
	Node0x98a9c0[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x98aa30[shape=record, label="  %25 = xor i32 %1, -1"];
	Node0x98aaa0[shape=record, label="  %26 = and i32 %25, %2"];
	Node0x98ab10[shape=record, label="  %27 = and i32 %26, %9"];
	Node0x98ab80[shape=record, label="  %28 = and i32 %2, %1"];
	Node0x98abf0[shape=record, label="  %29 = and i32 %28, %9"];
	Node0x98ac60[shape=record, label="  %30 = and i32 %26, %0"];
	Node0x98acd0[shape=record, label="  %31 = and i32 %28, %0"];
	Node0x98ad40[shape=record, label="  %32 = or i32 %30, %29"];
	Node0x98afc0[shape=record, label="  %33 = add i32 %32, %22"];
	Node0x98b030[shape=record, label="  %34 = add i32 %33, %19"];
	Node0x98b0d0[shape=record, label="  %35 = shl i32 %34, 2"];
	Node0x98b140[shape=record, label="  %36 = add i32 %27, %13"];
	Node0x98b1b0[shape=record, label="  %37 = add i32 %36, %31"];
	Node0x98b250[shape=record, label="  %38 = mul i32 %37, 5"];
	Node0x98b2c0[shape=record, label="  %39 = add i32 %14, 1"];
	Node0x98b330[shape=record, label="  %40 = add i32 %39, %11"];
	Node0x98b3a0[shape=record, label="  %41 = add i32 %40, %16"];
	Node0x98b410[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x98b480[shape=record, label="  %43 = sub i32 %42, %24"];
	Node0x98b4f0[shape=record, label="  %44 = add i32 %43, %38"];
	Node0x98b560[shape=record, label="  %45 = add i32 %44, %35"];
	Node0x98b5d0[shape=record, label="  %46 = icmp eq i32 %45, %7"];
	Node0x92a268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x98ba70[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0x98bac0[shape=record, label="  ret void"];
	Node0x989a10 -> Node0x989ad0;
	Node0x989ad0 -> Node0x989b40;
	Node0x989b40 -> Node0x98a1c0;
	Node0x98a1c0 -> Node0x98a260;
	Node0x98a260 -> Node0x98a2d0;
	Node0x98a2d0 -> Node0x98a340;
	Node0x98a340 -> Node0x98a3b0;
	Node0x98a3b0 -> Node0x98a420;
	Node0x98a420 -> Node0x98a4c0;
	Node0x98a4c0 -> Node0x98a530;
	Node0x98a530 -> Node0x98a5a0;
	Node0x98a5a0 -> Node0x98a610;
	Node0x98a610 -> Node0x98a680;
	Node0x98a680 -> Node0x98a6f0;
	Node0x98a6f0 -> Node0x98a760;
	Node0x98a760 -> Node0x98a7d0;
	Node0x98a7d0 -> Node0x98a870;
	Node0x98a870 -> Node0x98a8e0;
	Node0x98a8e0 -> Node0x98a950;
	Node0x98a950 -> Node0x98a9c0;
	Node0x98a9c0 -> Node0x98aa30;
	Node0x98aa30 -> Node0x98aaa0;
	Node0x98aaa0 -> Node0x98ab10;
	Node0x98ab10 -> Node0x98ab80;
	Node0x98ab80 -> Node0x98abf0;
	Node0x98abf0 -> Node0x98ac60;
	Node0x98ac60 -> Node0x98acd0;
	Node0x98acd0 -> Node0x98ad40;
	Node0x98ad40 -> Node0x98afc0;
	Node0x98afc0 -> Node0x98b030;
	Node0x98b030 -> Node0x98b0d0;
	Node0x98b0d0 -> Node0x98b140;
	Node0x98b140 -> Node0x98b1b0;
	Node0x98b1b0 -> Node0x98b250;
	Node0x98b250 -> Node0x98b2c0;
	Node0x98b2c0 -> Node0x98b330;
	Node0x98b330 -> Node0x98b3a0;
	Node0x98b3a0 -> Node0x98b410;
	Node0x98b410 -> Node0x98b480;
	Node0x98b480 -> Node0x98b4f0;
	Node0x98b4f0 -> Node0x98b560;
	Node0x98b560 -> Node0x98b5d0;
	Node0x98b5d0 -> Node0x92a268;
	Node0x92a268 -> Node0x98ba70;
	Node0x98ba70 -> Node0x98bac0;
edge [color=red]
	Node0x989ad0 -> Node0x989b40;
	Node0x989a10 -> Node0x989b40;
	Node0x989b40 -> Node0x98a1c0;
	Node0x98a2d0 -> Node0x98a340;
	Node0x98a340 -> Node0x98a3b0;
	Node0x98a260 -> Node0x98a3b0;
	Node0x98a260 -> Node0x98a420;
	Node0x98a420 -> Node0x98a4c0;
	Node0x98a2d0 -> Node0x98a5a0;
	Node0x98a5a0 -> Node0x98a610;
	Node0x98a260 -> Node0x98a610;
	Node0x98a680 -> Node0x98a6f0;
	Node0x98a6f0 -> Node0x98a760;
	Node0x98a2d0 -> Node0x98a760;
	Node0x98a420 -> Node0x98a7d0;
	Node0x98a2d0 -> Node0x98a7d0;
	Node0x98a7d0 -> Node0x98a870;
	Node0x98a6f0 -> Node0x98a8e0;
	Node0x98a420 -> Node0x98a950;
	Node0x98a950 -> Node0x98a9c0;
	Node0x98aa30 -> Node0x98aaa0;
	Node0x98aaa0 -> Node0x98ab10;
	Node0x98a2d0 -> Node0x98ab10;
	Node0x98ab80 -> Node0x98abf0;
	Node0x98a2d0 -> Node0x98abf0;
	Node0x98aaa0 -> Node0x98ac60;
	Node0x98ab80 -> Node0x98acd0;
	Node0x98ac60 -> Node0x98ad40;
	Node0x98abf0 -> Node0x98ad40;
	Node0x98ad40 -> Node0x98afc0;
	Node0x98a8e0 -> Node0x98afc0;
	Node0x98afc0 -> Node0x98b030;
	Node0x98a760 -> Node0x98b030;
	Node0x98b030 -> Node0x98b0d0;
	Node0x98ab10 -> Node0x98b140;
	Node0x98a4c0 -> Node0x98b140;
	Node0x98b140 -> Node0x98b1b0;
	Node0x98acd0 -> Node0x98b1b0;
	Node0x98b1b0 -> Node0x98b250;
	Node0x98a530 -> Node0x98b2c0;
	Node0x98b2c0 -> Node0x98b330;
	Node0x98a3b0 -> Node0x98b330;
	Node0x98b330 -> Node0x98b3a0;
	Node0x98a610 -> Node0x98b3a0;
	Node0x98b3a0 -> Node0x98b410;
	Node0x98a870 -> Node0x98b410;
	Node0x98b410 -> Node0x98b480;
	Node0x98a9c0 -> Node0x98b480;
	Node0x98b480 -> Node0x98b4f0;
	Node0x98b250 -> Node0x98b4f0;
	Node0x98b4f0 -> Node0x98b560;
	Node0x98b0d0 -> Node0x98b560;
	Node0x98b560 -> Node0x98b5d0;
	Node0x98a1c0 -> Node0x98b5d0;
	Node0x98b5d0 -> Node0x92a268;
	Node0x92a268 -> Node0x98ba70;
}
