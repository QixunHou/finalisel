digraph "DFG for'main' function" {
	Node0x98bc88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x98bd08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x98bd98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x98bdf8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x98c278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x98c358[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x98c458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x98c518[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x98c5c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x98c828[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x98c8e8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x98d858[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x98dec8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x98df40[shape=record, label="  %11 = and i32 %9, %8"];
	Node0x98dfb0[shape=record, label="  %12 = xor i32 %10, %9"];
	Node0x98e020[shape=record, label="  %13 = or i32 %12, %11"];
	Node0x98e090[shape=record, label="  %14 = sub i32 0, %13"];
	Node0x98e100[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x98e170[shape=record, label="  %16 = xor i32 %8, -1"];
	Node0x98e1e0[shape=record, label="  %17 = or i32 %9, %16"];
	Node0x98e250[shape=record, label="  %18 = and i32 %17, %15"];
	Node0x98e2c0[shape=record, label="  %19 = and i32 %9, %15"];
	Node0x98e330[shape=record, label="  %20 = add i32 %19, 1"];
	Node0x98e3a0[shape=record, label="  %21 = xor i32 %9, %8"];
	Node0x98e410[shape=record, label="  %22 = and i32 %9, %16"];
	Node0x98e480[shape=record, label="  %23 = or i32 %22, %15"];
	Node0x98e4f0[shape=record, label="  %24 = or i32 %10, %9"];
	Node0x98e560[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x98e5d0[shape=record, label="  %26 = and i32 %25, %16"];
	Node0x98e640[shape=record, label="  %27 = and i32 %19, %16"];
	Node0x98e6b0[shape=record, label="  %28 = mul i32 %27, -3"];
	Node0x98e720[shape=record, label="  %29 = and i32 %8, %25"];
	Node0x98e790[shape=record, label="  %30 = and i32 %19, %8"];
	Node0x98e800[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x98e870[shape=record, label="  %32 = xor i32 %9, -1"];
	Node0x98e8e0[shape=record, label="  %33 = and i32 %10, %32"];
	Node0x98e950[shape=record, label="  %34 = and i32 %33, %16"];
	Node0x98e9c0[shape=record, label="  %35 = and i32 %10, %9"];
	Node0x98ea30[shape=record, label="  %36 = and i32 %35, %16"];
	Node0x98eaa0[shape=record, label="  %37 = and i32 %33, %8"];
	Node0x98eb10[shape=record, label="  %38 = and i32 %35, %8"];
	Node0x98eb80[shape=record, label="  %39 = or i32 %37, %36"];
	Node0x98ebf0[shape=record, label="  %40 = add i32 %26, %29"];
	Node0x98ec60[shape=record, label="  %41 = add i32 %40, %39"];
	Node0x98ecd0[shape=record, label="  %42 = shl i32 %41, 2"];
	Node0x98ed40[shape=record, label="  %43 = add i32 %20, %34"];
	Node0x98edb0[shape=record, label="  %44 = add i32 %43, %38"];
	Node0x98ee20[shape=record, label="  %45 = mul i32 %44, 5"];
	Node0x98ee90[shape=record, label="  %46 = add i32 %21, 1"];
	Node0x98ef00[shape=record, label="  %47 = add i32 %46, %18"];
	Node0x98ef70[shape=record, label="  %48 = add i32 %47, %23"];
	Node0x98efe0[shape=record, label="  %49 = add i32 %48, %28"];
	Node0x98f050[shape=record, label="  %50 = sub i32 %49, %31"];
	Node0x98f0c0[shape=record, label="  %51 = add i32 %50, %45"];
	Node0x98f130[shape=record, label="  %52 = add i32 %51, %42"];
	Node0x98f1a0[shape=record, label="  %53 = icmp eq i32 %52, %14"];
	Node0x92b9d8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x98f230[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x98f488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x98f5e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x98f6f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x98f7b8[shape=record, label="  ret i32 0"];
	Node0x98bc88 -> Node0x98bd08;
	Node0x98bd08 -> Node0x98bd98;
	Node0x98bd98 -> Node0x98bdf8;
	Node0x98bdf8 -> Node0x98c278;
	Node0x98c278 -> Node0x98c358;
	Node0x98c358 -> Node0x98c458;
	Node0x98c458 -> Node0x98c518;
	Node0x98c518 -> Node0x98c5c8;
	Node0x98c5c8 -> Node0x98c828;
	Node0x98c828 -> Node0x98c8e8;
	Node0x98c8e8 -> Node0x98d858;
	Node0x98d858 -> Node0x98dec8;
	Node0x98dec8 -> Node0x98df40;
	Node0x98df40 -> Node0x98dfb0;
	Node0x98dfb0 -> Node0x98e020;
	Node0x98e020 -> Node0x98e090;
	Node0x98e090 -> Node0x98e100;
	Node0x98e100 -> Node0x98e170;
	Node0x98e170 -> Node0x98e1e0;
	Node0x98e1e0 -> Node0x98e250;
	Node0x98e250 -> Node0x98e2c0;
	Node0x98e2c0 -> Node0x98e330;
	Node0x98e330 -> Node0x98e3a0;
	Node0x98e3a0 -> Node0x98e410;
	Node0x98e410 -> Node0x98e480;
	Node0x98e480 -> Node0x98e4f0;
	Node0x98e4f0 -> Node0x98e560;
	Node0x98e560 -> Node0x98e5d0;
	Node0x98e5d0 -> Node0x98e640;
	Node0x98e640 -> Node0x98e6b0;
	Node0x98e6b0 -> Node0x98e720;
	Node0x98e720 -> Node0x98e790;
	Node0x98e790 -> Node0x98e800;
	Node0x98e800 -> Node0x98e870;
	Node0x98e870 -> Node0x98e8e0;
	Node0x98e8e0 -> Node0x98e950;
	Node0x98e950 -> Node0x98e9c0;
	Node0x98e9c0 -> Node0x98ea30;
	Node0x98ea30 -> Node0x98eaa0;
	Node0x98eaa0 -> Node0x98eb10;
	Node0x98eb10 -> Node0x98eb80;
	Node0x98eb80 -> Node0x98ebf0;
	Node0x98ebf0 -> Node0x98ec60;
	Node0x98ec60 -> Node0x98ecd0;
	Node0x98ecd0 -> Node0x98ed40;
	Node0x98ed40 -> Node0x98edb0;
	Node0x98edb0 -> Node0x98ee20;
	Node0x98ee20 -> Node0x98ee90;
	Node0x98ee90 -> Node0x98ef00;
	Node0x98ef00 -> Node0x98ef70;
	Node0x98ef70 -> Node0x98efe0;
	Node0x98efe0 -> Node0x98f050;
	Node0x98f050 -> Node0x98f0c0;
	Node0x98f0c0 -> Node0x98f130;
	Node0x98f130 -> Node0x98f1a0;
	Node0x98f1a0 -> Node0x92b9d8;
	Node0x92b9d8 -> Node0x98f230;
	Node0x98f230 -> Node0x98f488;
	Node0x98f488 -> Node0x98f5e8;
	Node0x98f5e8 -> Node0x98f6f8;
	Node0x98f6f8 -> Node0x98f7b8;
edge [color=red]
	Node0x98bc88 -> Node0x98bdf8;
	Node0x98bdf8 -> Node0x98c278;
	Node0x98bd08 -> Node0x98c358;
	Node0x98c358 -> Node0x98c458;
	Node0x98bd98 -> Node0x98c518;
	Node0x98c518 -> Node0x98c5c8;
	Node0x98bc88 -> Node0x98c828;
	Node0x98bd08 -> Node0x98c828;
	Node0x98bd98 -> Node0x98c828;
	Node0x98bc88 -> Node0x98c8e8;
	Node0x98bd08 -> Node0x98d858;
	Node0x98bd98 -> Node0x98dec8;
	Node0x98d858 -> Node0x98df40;
	Node0x98c8e8 -> Node0x98df40;
	Node0x98dec8 -> Node0x98dfb0;
	Node0x98d858 -> Node0x98dfb0;
	Node0x98dfb0 -> Node0x98e020;
	Node0x98df40 -> Node0x98e020;
	Node0x98e020 -> Node0x98e090;
	Node0x98dec8 -> Node0x98e100;
	Node0x98c8e8 -> Node0x98e170;
	Node0x98d858 -> Node0x98e1e0;
	Node0x98e170 -> Node0x98e1e0;
	Node0x98e1e0 -> Node0x98e250;
	Node0x98e100 -> Node0x98e250;
	Node0x98d858 -> Node0x98e2c0;
	Node0x98e100 -> Node0x98e2c0;
	Node0x98e2c0 -> Node0x98e330;
	Node0x98d858 -> Node0x98e3a0;
	Node0x98c8e8 -> Node0x98e3a0;
	Node0x98d858 -> Node0x98e410;
	Node0x98e170 -> Node0x98e410;
	Node0x98e410 -> Node0x98e480;
	Node0x98e100 -> Node0x98e480;
	Node0x98dec8 -> Node0x98e4f0;
	Node0x98d858 -> Node0x98e4f0;
	Node0x98e4f0 -> Node0x98e560;
	Node0x98e560 -> Node0x98e5d0;
	Node0x98e170 -> Node0x98e5d0;
	Node0x98e2c0 -> Node0x98e640;
	Node0x98e170 -> Node0x98e640;
	Node0x98e640 -> Node0x98e6b0;
	Node0x98c8e8 -> Node0x98e720;
	Node0x98e560 -> Node0x98e720;
	Node0x98e2c0 -> Node0x98e790;
	Node0x98c8e8 -> Node0x98e790;
	Node0x98e790 -> Node0x98e800;
	Node0x98d858 -> Node0x98e870;
	Node0x98dec8 -> Node0x98e8e0;
	Node0x98e870 -> Node0x98e8e0;
	Node0x98e8e0 -> Node0x98e950;
	Node0x98e170 -> Node0x98e950;
	Node0x98dec8 -> Node0x98e9c0;
	Node0x98d858 -> Node0x98e9c0;
	Node0x98e9c0 -> Node0x98ea30;
	Node0x98e170 -> Node0x98ea30;
	Node0x98e8e0 -> Node0x98eaa0;
	Node0x98c8e8 -> Node0x98eaa0;
	Node0x98e9c0 -> Node0x98eb10;
	Node0x98c8e8 -> Node0x98eb10;
	Node0x98eaa0 -> Node0x98eb80;
	Node0x98ea30 -> Node0x98eb80;
	Node0x98e5d0 -> Node0x98ebf0;
	Node0x98e720 -> Node0x98ebf0;
	Node0x98ebf0 -> Node0x98ec60;
	Node0x98eb80 -> Node0x98ec60;
	Node0x98ec60 -> Node0x98ecd0;
	Node0x98e330 -> Node0x98ed40;
	Node0x98e950 -> Node0x98ed40;
	Node0x98ed40 -> Node0x98edb0;
	Node0x98eb10 -> Node0x98edb0;
	Node0x98edb0 -> Node0x98ee20;
	Node0x98e3a0 -> Node0x98ee90;
	Node0x98ee90 -> Node0x98ef00;
	Node0x98e250 -> Node0x98ef00;
	Node0x98ef00 -> Node0x98ef70;
	Node0x98e480 -> Node0x98ef70;
	Node0x98ef70 -> Node0x98efe0;
	Node0x98e6b0 -> Node0x98efe0;
	Node0x98efe0 -> Node0x98f050;
	Node0x98e800 -> Node0x98f050;
	Node0x98f050 -> Node0x98f0c0;
	Node0x98ee20 -> Node0x98f0c0;
	Node0x98f0c0 -> Node0x98f130;
	Node0x98ecd0 -> Node0x98f130;
	Node0x98f130 -> Node0x98f1a0;
	Node0x98e090 -> Node0x98f1a0;
	Node0x98f1a0 -> Node0x92b9d8;
	Node0x92b9d8 -> Node0x98f230;
	Node0x98c518 -> Node0x98f488;
	Node0x98c358 -> Node0x98f5e8;
	Node0x98bdf8 -> Node0x98f6f8;
}
