digraph "DFG for'main' function" {
	Node0x1d39a78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d39af8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d39b88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1d39fe8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1d3a0c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1d3a1e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d3a420[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1d3a4d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d3b448[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d3bad0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1d3bb40[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x1d3bbb0[shape=record, label="  %10 = and i32 %7, %6"];
	Node0x1d3bc20[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1d3bc90[shape=record, label="  %12 = or i32 %6, %11"];
	Node0x1d3bd00[shape=record, label="  %13 = and i32 %6, %11"];
	Node0x1d3bd70[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1d3bde0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1d3be50[shape=record, label="  %16 = shl i32 %6, 1"];
	Node0x1d3bec0[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0x1d3bf30[shape=record, label="  %18 = mul i32 %17, 5"];
	Node0x1d3bfa0[shape=record, label="  %19 = add i32 %7, %6"];
	Node0x1d3c010[shape=record, label="  %20 = sub i32 %11, %19"];
	Node0x1d3c080[shape=record, label="  %21 = add i32 %20, %16"];
	Node0x1d3c0f0[shape=record, label="  %22 = add i32 %21, %10"];
	Node0x1d3c160[shape=record, label="  %23 = add i32 %22, %12"];
	Node0x1d3c1d0[shape=record, label="  %24 = sub i32 %23, %13"];
	Node0x1d3c240[shape=record, label="  %25 = add i32 %24, %18"];
	Node0x1d3c2b0[shape=record, label="  %26 = sub i32 %25, %15"];
	Node0x1d3c320[shape=record, label="  %27 = icmp eq i32 %9, %26"];
	Node0x1cda9d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d3c3b0[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0x1d3c608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d3c768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1d3c828[shape=record, label="  ret i32 0"];
	Node0x1d39a78 -> Node0x1d39af8;
	Node0x1d39af8 -> Node0x1d39b88;
	Node0x1d39b88 -> Node0x1d39fe8;
	Node0x1d39fe8 -> Node0x1d3a0c8;
	Node0x1d3a0c8 -> Node0x1d3a1e8;
	Node0x1d3a1e8 -> Node0x1d3a420;
	Node0x1d3a420 -> Node0x1d3a4d8;
	Node0x1d3a4d8 -> Node0x1d3b448;
	Node0x1d3b448 -> Node0x1d3bad0;
	Node0x1d3bad0 -> Node0x1d3bb40;
	Node0x1d3bb40 -> Node0x1d3bbb0;
	Node0x1d3bbb0 -> Node0x1d3bc20;
	Node0x1d3bc20 -> Node0x1d3bc90;
	Node0x1d3bc90 -> Node0x1d3bd00;
	Node0x1d3bd00 -> Node0x1d3bd70;
	Node0x1d3bd70 -> Node0x1d3bde0;
	Node0x1d3bde0 -> Node0x1d3be50;
	Node0x1d3be50 -> Node0x1d3bec0;
	Node0x1d3bec0 -> Node0x1d3bf30;
	Node0x1d3bf30 -> Node0x1d3bfa0;
	Node0x1d3bfa0 -> Node0x1d3c010;
	Node0x1d3c010 -> Node0x1d3c080;
	Node0x1d3c080 -> Node0x1d3c0f0;
	Node0x1d3c0f0 -> Node0x1d3c160;
	Node0x1d3c160 -> Node0x1d3c1d0;
	Node0x1d3c1d0 -> Node0x1d3c240;
	Node0x1d3c240 -> Node0x1d3c2b0;
	Node0x1d3c2b0 -> Node0x1d3c320;
	Node0x1d3c320 -> Node0x1cda9d8;
	Node0x1cda9d8 -> Node0x1d3c3b0;
	Node0x1d3c3b0 -> Node0x1d3c608;
	Node0x1d3c608 -> Node0x1d3c768;
	Node0x1d3c768 -> Node0x1d3c828;
edge [color=red]
	Node0x1d39a78 -> Node0x1d39b88;
	Node0x1d39b88 -> Node0x1d39fe8;
	Node0x1d39af8 -> Node0x1d3a0c8;
	Node0x1d3a0c8 -> Node0x1d3a1e8;
	Node0x1d39a78 -> Node0x1d3a420;
	Node0x1d39af8 -> Node0x1d3a420;
	Node0x1d39a78 -> Node0x1d3a4d8;
	Node0x1d39af8 -> Node0x1d3b448;
	Node0x1d3b448 -> Node0x1d3bad0;
	Node0x1d3a4d8 -> Node0x1d3bad0;
	Node0x1d3bad0 -> Node0x1d3bb40;
	Node0x1d3b448 -> Node0x1d3bbb0;
	Node0x1d3a4d8 -> Node0x1d3bbb0;
	Node0x1d3b448 -> Node0x1d3bc20;
	Node0x1d3a4d8 -> Node0x1d3bc90;
	Node0x1d3bc20 -> Node0x1d3bc90;
	Node0x1d3a4d8 -> Node0x1d3bd00;
	Node0x1d3bc20 -> Node0x1d3bd00;
	Node0x1d3bd00 -> Node0x1d3bd70;
	Node0x1d3bd70 -> Node0x1d3bde0;
	Node0x1d3a4d8 -> Node0x1d3be50;
	Node0x1d3bc90 -> Node0x1d3bec0;
	Node0x1d3bec0 -> Node0x1d3bf30;
	Node0x1d3b448 -> Node0x1d3bfa0;
	Node0x1d3a4d8 -> Node0x1d3bfa0;
	Node0x1d3bc20 -> Node0x1d3c010;
	Node0x1d3bfa0 -> Node0x1d3c010;
	Node0x1d3c010 -> Node0x1d3c080;
	Node0x1d3be50 -> Node0x1d3c080;
	Node0x1d3c080 -> Node0x1d3c0f0;
	Node0x1d3bbb0 -> Node0x1d3c0f0;
	Node0x1d3c0f0 -> Node0x1d3c160;
	Node0x1d3bc90 -> Node0x1d3c160;
	Node0x1d3c160 -> Node0x1d3c1d0;
	Node0x1d3bd00 -> Node0x1d3c1d0;
	Node0x1d3c1d0 -> Node0x1d3c240;
	Node0x1d3bf30 -> Node0x1d3c240;
	Node0x1d3c240 -> Node0x1d3c2b0;
	Node0x1d3bde0 -> Node0x1d3c2b0;
	Node0x1d3bb40 -> Node0x1d3c320;
	Node0x1d3c2b0 -> Node0x1d3c320;
	Node0x1d3c320 -> Node0x1cda9d8;
	Node0x1cda9d8 -> Node0x1d3c3b0;
	Node0x1d3a0c8 -> Node0x1d3c608;
	Node0x1d39b88 -> Node0x1d3c768;
}
