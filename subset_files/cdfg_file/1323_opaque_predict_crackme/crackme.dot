digraph "DFG for'crackme' function" {
	Node0x1d38480[shape=record, label="  %3 = xor i32 %1, %0"];
	Node0x1d38b30[shape=record, label="  %4 = shl i32 %3, 1"];
	Node0x1d38bf0[shape=record, label="  %5 = and i32 %1, %0"];
	Node0x1d38c60[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0x1d38cd0[shape=record, label="  %7 = or i32 %6, %0"];
	Node0x1d38d40[shape=record, label="  %8 = and i32 %6, %0"];
	Node0x1d38db0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x1d38e50[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x1d38ec0[shape=record, label="  %11 = shl i32 %0, 1"];
	Node0x1d38f30[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x1d38fd0[shape=record, label="  %13 = mul i32 %12, 5"];
	Node0x1d39040[shape=record, label="  %14 = add i32 %0, %1"];
	Node0x1d390b0[shape=record, label="  %15 = sub i32 %6, %14"];
	Node0x1d39120[shape=record, label="  %16 = add i32 %15, %11"];
	Node0x1d39190[shape=record, label="  %17 = add i32 %16, %5"];
	Node0x1d39200[shape=record, label="  %18 = add i32 %17, %7"];
	Node0x1d39270[shape=record, label="  %19 = sub i32 %18, %8"];
	Node0x1d392e0[shape=record, label="  %20 = add i32 %19, %13"];
	Node0x1d39350[shape=record, label="  %21 = sub i32 %20, %10"];
	Node0x1d393c0[shape=record, label="  %22 = icmp eq i32 %4, %21"];
	Node0x1cd9268[shape=record, label="  %23 = select i1 %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d39860[shape=record, label="  %24 = tail call i32 @puts(i8* nonnull dereferenceable(1) %23)"];
	Node0x1d398b0[shape=record, label="  ret void"];
	Node0x1d38480 -> Node0x1d38b30;
	Node0x1d38b30 -> Node0x1d38bf0;
	Node0x1d38bf0 -> Node0x1d38c60;
	Node0x1d38c60 -> Node0x1d38cd0;
	Node0x1d38cd0 -> Node0x1d38d40;
	Node0x1d38d40 -> Node0x1d38db0;
	Node0x1d38db0 -> Node0x1d38e50;
	Node0x1d38e50 -> Node0x1d38ec0;
	Node0x1d38ec0 -> Node0x1d38f30;
	Node0x1d38f30 -> Node0x1d38fd0;
	Node0x1d38fd0 -> Node0x1d39040;
	Node0x1d39040 -> Node0x1d390b0;
	Node0x1d390b0 -> Node0x1d39120;
	Node0x1d39120 -> Node0x1d39190;
	Node0x1d39190 -> Node0x1d39200;
	Node0x1d39200 -> Node0x1d39270;
	Node0x1d39270 -> Node0x1d392e0;
	Node0x1d392e0 -> Node0x1d39350;
	Node0x1d39350 -> Node0x1d393c0;
	Node0x1d393c0 -> Node0x1cd9268;
	Node0x1cd9268 -> Node0x1d39860;
	Node0x1d39860 -> Node0x1d398b0;
edge [color=red]
	Node0x1d38480 -> Node0x1d38b30;
	Node0x1d38c60 -> Node0x1d38cd0;
	Node0x1d38c60 -> Node0x1d38d40;
	Node0x1d38d40 -> Node0x1d38db0;
	Node0x1d38db0 -> Node0x1d38e50;
	Node0x1d38cd0 -> Node0x1d38f30;
	Node0x1d38f30 -> Node0x1d38fd0;
	Node0x1d38c60 -> Node0x1d390b0;
	Node0x1d39040 -> Node0x1d390b0;
	Node0x1d390b0 -> Node0x1d39120;
	Node0x1d38ec0 -> Node0x1d39120;
	Node0x1d39120 -> Node0x1d39190;
	Node0x1d38bf0 -> Node0x1d39190;
	Node0x1d39190 -> Node0x1d39200;
	Node0x1d38cd0 -> Node0x1d39200;
	Node0x1d39200 -> Node0x1d39270;
	Node0x1d38d40 -> Node0x1d39270;
	Node0x1d39270 -> Node0x1d392e0;
	Node0x1d38fd0 -> Node0x1d392e0;
	Node0x1d392e0 -> Node0x1d39350;
	Node0x1d38e50 -> Node0x1d39350;
	Node0x1d38b30 -> Node0x1d393c0;
	Node0x1d39350 -> Node0x1d393c0;
	Node0x1d393c0 -> Node0x1cd9268;
	Node0x1cd9268 -> Node0x1d39860;
}
