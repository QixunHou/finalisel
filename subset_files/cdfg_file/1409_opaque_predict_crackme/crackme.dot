digraph "DFG for'crackme' function" {
	Node0x1714c10[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x1714c80[shape=record, label="  %4 = and i32 %3, %0"];
	Node0x1714d40[shape=record, label="  %5 = add i32 %4, 1"];
	Node0x1714db0[shape=record, label="  %6 = or i32 %1, %0"];
	Node0x1714e20[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x1714e90[shape=record, label="  %8 = add i32 %5, %7"];
	Node0x1714f00[shape=record, label="  %9 = xor i32 %1, %0"];
	Node0x1714f70[shape=record, label="  %10 = and i32 %1, %0"];
	Node0x1714fe0[shape=record, label="  %11 = or i32 %3, %0"];
	Node0x1715050[shape=record, label="  %12 = add i32 %1, 1"];
	Node0x17150c0[shape=record, label="  %13 = shl i32 %9, 1"];
	Node0x1715160[shape=record, label="  %14 = xor i32 %7, -2"];
	Node0x17151d0[shape=record, label="  %15 = shl i32 %11, 1"];
	Node0x1715240[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x17152e0[shape=record, label="  %17 = mul i32 %4, 7"];
	Node0x1715350[shape=record, label="  %18 = shl i32 %10, 1"];
	Node0x17153c0[shape=record, label="  %19 = sub i32 1, %0"];
	Node0x1715430[shape=record, label="  %20 = add i32 %19, %1"];
	Node0x17154a0[shape=record, label="  %21 = add i32 %20, %12"];
	Node0x1715510[shape=record, label="  %22 = add i32 %21, %9"];
	Node0x1715580[shape=record, label="  %23 = add i32 %22, %10"];
	Node0x17155f0[shape=record, label="  %24 = sub i32 %23, %11"];
	Node0x1715660[shape=record, label="  %25 = sub i32 %24, %13"];
	Node0x17156d0[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x1715740[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x17157b0[shape=record, label="  %28 = add i32 %27, %14"];
	Node0x1715820[shape=record, label="  %29 = add i32 %28, %16"];
	Node0x1715890[shape=record, label="  %30 = icmp eq i32 %8, %29"];
	Node0x16b5268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1715d30[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x1715f90[shape=record, label="  ret void"];
	Node0x1714c10 -> Node0x1714c80;
	Node0x1714c80 -> Node0x1714d40;
	Node0x1714d40 -> Node0x1714db0;
	Node0x1714db0 -> Node0x1714e20;
	Node0x1714e20 -> Node0x1714e90;
	Node0x1714e90 -> Node0x1714f00;
	Node0x1714f00 -> Node0x1714f70;
	Node0x1714f70 -> Node0x1714fe0;
	Node0x1714fe0 -> Node0x1715050;
	Node0x1715050 -> Node0x17150c0;
	Node0x17150c0 -> Node0x1715160;
	Node0x1715160 -> Node0x17151d0;
	Node0x17151d0 -> Node0x1715240;
	Node0x1715240 -> Node0x17152e0;
	Node0x17152e0 -> Node0x1715350;
	Node0x1715350 -> Node0x17153c0;
	Node0x17153c0 -> Node0x1715430;
	Node0x1715430 -> Node0x17154a0;
	Node0x17154a0 -> Node0x1715510;
	Node0x1715510 -> Node0x1715580;
	Node0x1715580 -> Node0x17155f0;
	Node0x17155f0 -> Node0x1715660;
	Node0x1715660 -> Node0x17156d0;
	Node0x17156d0 -> Node0x1715740;
	Node0x1715740 -> Node0x17157b0;
	Node0x17157b0 -> Node0x1715820;
	Node0x1715820 -> Node0x1715890;
	Node0x1715890 -> Node0x16b5268;
	Node0x16b5268 -> Node0x1715d30;
	Node0x1715d30 -> Node0x1715f90;
edge [color=red]
	Node0x1714c10 -> Node0x1714c80;
	Node0x1714c80 -> Node0x1714d40;
	Node0x1714db0 -> Node0x1714e20;
	Node0x1714d40 -> Node0x1714e90;
	Node0x1714e20 -> Node0x1714e90;
	Node0x1714c10 -> Node0x1714fe0;
	Node0x1714f00 -> Node0x17150c0;
	Node0x1714e20 -> Node0x1715160;
	Node0x1714fe0 -> Node0x17151d0;
	Node0x17151d0 -> Node0x1715240;
	Node0x1714c80 -> Node0x17152e0;
	Node0x1714f70 -> Node0x1715350;
	Node0x17153c0 -> Node0x1715430;
	Node0x1715430 -> Node0x17154a0;
	Node0x1715050 -> Node0x17154a0;
	Node0x17154a0 -> Node0x1715510;
	Node0x1714f00 -> Node0x1715510;
	Node0x1715510 -> Node0x1715580;
	Node0x1714f70 -> Node0x1715580;
	Node0x1715580 -> Node0x17155f0;
	Node0x1714fe0 -> Node0x17155f0;
	Node0x17155f0 -> Node0x1715660;
	Node0x17150c0 -> Node0x1715660;
	Node0x1715660 -> Node0x17156d0;
	Node0x17152e0 -> Node0x17156d0;
	Node0x17156d0 -> Node0x1715740;
	Node0x1715350 -> Node0x1715740;
	Node0x1715740 -> Node0x17157b0;
	Node0x1715160 -> Node0x17157b0;
	Node0x17157b0 -> Node0x1715820;
	Node0x1715240 -> Node0x1715820;
	Node0x1714e90 -> Node0x1715890;
	Node0x1715820 -> Node0x1715890;
	Node0x1715890 -> Node0x16b5268;
	Node0x16b5268 -> Node0x1715d30;
}
