digraph "DFG for'crackme' function" {
	Node0xa5a710[shape=record, label="  %5 = and i32 %2, %1"];
	Node0xa5ad90[shape=record, label="  %6 = add i32 %1, 1"];
	Node0xa5ae00[shape=record, label="  %7 = add i32 %6, %5"];
	Node0xa5ae70[shape=record, label="  %8 = and i32 %3, %0"];
	Node0xa5aee0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xa5af80[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0xa5aff0[shape=record, label="  %11 = sub i32 %7, %10"];
	Node0xa5b090[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0xa5b100[shape=record, label="  %13 = and i32 %12, %1"];
	Node0xa5b170[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0xa5b1e0[shape=record, label="  %15 = or i32 %12, %1"];
	Node0xa5b250[shape=record, label="  %16 = shl i32 %2, 1"];
	Node0xa5b2c0[shape=record, label="  %17 = or i32 %2, %1"];
	Node0xa5b330[shape=record, label="  %18 = shl i32 %15, 1"];
	Node0xa5b3a0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0xa5b410[shape=record, label="  %20 = xor i32 %0, -1"];
	Node0xa5b480[shape=record, label="  %21 = and i32 %20, %3"];
	Node0xa5b4f0[shape=record, label="  %22 = xor i32 %3, %0"];
	Node0xa5b560[shape=record, label="  %23 = or i32 %3, %0"];
	Node0xa5b5d0[shape=record, label="  %24 = or i32 %20, %3"];
	Node0xa5b640[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0xa5b6e0[shape=record, label="  %26 = mul i32 %8, 6"];
	Node0xa5b750[shape=record, label="  %27 = sub i32 %12, %13"];
	Node0xa5b7c0[shape=record, label="  %28 = add i32 %27, %25"];
	Node0xa5b830[shape=record, label="  %29 = add i32 %28, %21"];
	Node0xa5b8d0[shape=record, label="  %30 = mul i32 %29, 3"];
	Node0xa5b940[shape=record, label="  %31 = sub i32 %5, %23"];
	Node0xa5b9e0[shape=record, label="  %32 = mul i32 %31, 5"];
	Node0xa5bc60[shape=record, label="  %33 = add i32 %22, %14"];
	Node0xa5bcd0[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0xa5bd40[shape=record, label="  %35 = add i32 %1, 6"];
	Node0xa5bdb0[shape=record, label="  %36 = add i32 %35, %13"];
	Node0xa5be20[shape=record, label="  %37 = sub i32 %36, %15"];
	Node0xa5be90[shape=record, label="  %38 = sub i32 %37, %16"];
	Node0xa5bf00[shape=record, label="  %39 = sub i32 %38, %14"];
	Node0xa5bf70[shape=record, label="  %40 = add i32 %39, %17"];
	Node0xa5bfe0[shape=record, label="  %41 = sub i32 %40, %21"];
	Node0xa5c050[shape=record, label="  %42 = add i32 %41, %24"];
	Node0xa5c0c0[shape=record, label="  %43 = add i32 %42, %23"];
	Node0xa5c130[shape=record, label="  %44 = add i32 %43, %19"];
	Node0xa5c1a0[shape=record, label="  %45 = add i32 %44, %26"];
	Node0xa5c210[shape=record, label="  %46 = add i32 %45, %32"];
	Node0xa5c280[shape=record, label="  %47 = add i32 %46, %34"];
	Node0xa5c2f0[shape=record, label="  %48 = add i32 %47, %30"];
	Node0xa5c360[shape=record, label="  %49 = icmp eq i32 %11, %48"];
	Node0x9fb268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa5c800[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0xa5c850[shape=record, label="  ret void"];
	Node0xa5a710 -> Node0xa5ad90;
	Node0xa5ad90 -> Node0xa5ae00;
	Node0xa5ae00 -> Node0xa5ae70;
	Node0xa5ae70 -> Node0xa5aee0;
	Node0xa5aee0 -> Node0xa5af80;
	Node0xa5af80 -> Node0xa5aff0;
	Node0xa5aff0 -> Node0xa5b090;
	Node0xa5b090 -> Node0xa5b100;
	Node0xa5b100 -> Node0xa5b170;
	Node0xa5b170 -> Node0xa5b1e0;
	Node0xa5b1e0 -> Node0xa5b250;
	Node0xa5b250 -> Node0xa5b2c0;
	Node0xa5b2c0 -> Node0xa5b330;
	Node0xa5b330 -> Node0xa5b3a0;
	Node0xa5b3a0 -> Node0xa5b410;
	Node0xa5b410 -> Node0xa5b480;
	Node0xa5b480 -> Node0xa5b4f0;
	Node0xa5b4f0 -> Node0xa5b560;
	Node0xa5b560 -> Node0xa5b5d0;
	Node0xa5b5d0 -> Node0xa5b640;
	Node0xa5b640 -> Node0xa5b6e0;
	Node0xa5b6e0 -> Node0xa5b750;
	Node0xa5b750 -> Node0xa5b7c0;
	Node0xa5b7c0 -> Node0xa5b830;
	Node0xa5b830 -> Node0xa5b8d0;
	Node0xa5b8d0 -> Node0xa5b940;
	Node0xa5b940 -> Node0xa5b9e0;
	Node0xa5b9e0 -> Node0xa5bc60;
	Node0xa5bc60 -> Node0xa5bcd0;
	Node0xa5bcd0 -> Node0xa5bd40;
	Node0xa5bd40 -> Node0xa5bdb0;
	Node0xa5bdb0 -> Node0xa5be20;
	Node0xa5be20 -> Node0xa5be90;
	Node0xa5be90 -> Node0xa5bf00;
	Node0xa5bf00 -> Node0xa5bf70;
	Node0xa5bf70 -> Node0xa5bfe0;
	Node0xa5bfe0 -> Node0xa5c050;
	Node0xa5c050 -> Node0xa5c0c0;
	Node0xa5c0c0 -> Node0xa5c130;
	Node0xa5c130 -> Node0xa5c1a0;
	Node0xa5c1a0 -> Node0xa5c210;
	Node0xa5c210 -> Node0xa5c280;
	Node0xa5c280 -> Node0xa5c2f0;
	Node0xa5c2f0 -> Node0xa5c360;
	Node0xa5c360 -> Node0x9fb268;
	Node0x9fb268 -> Node0xa5c800;
	Node0xa5c800 -> Node0xa5c850;
edge [color=red]
	Node0xa5ad90 -> Node0xa5ae00;
	Node0xa5a710 -> Node0xa5ae00;
	Node0xa5ae70 -> Node0xa5aee0;
	Node0xa5aee0 -> Node0xa5af80;
	Node0xa5ae00 -> Node0xa5aff0;
	Node0xa5af80 -> Node0xa5aff0;
	Node0xa5b090 -> Node0xa5b100;
	Node0xa5b090 -> Node0xa5b1e0;
	Node0xa5b1e0 -> Node0xa5b330;
	Node0xa5b330 -> Node0xa5b3a0;
	Node0xa5b410 -> Node0xa5b480;
	Node0xa5b410 -> Node0xa5b5d0;
	Node0xa5b5d0 -> Node0xa5b640;
	Node0xa5ae70 -> Node0xa5b6e0;
	Node0xa5b090 -> Node0xa5b750;
	Node0xa5b100 -> Node0xa5b750;
	Node0xa5b750 -> Node0xa5b7c0;
	Node0xa5b640 -> Node0xa5b7c0;
	Node0xa5b7c0 -> Node0xa5b830;
	Node0xa5b480 -> Node0xa5b830;
	Node0xa5b830 -> Node0xa5b8d0;
	Node0xa5a710 -> Node0xa5b940;
	Node0xa5b560 -> Node0xa5b940;
	Node0xa5b940 -> Node0xa5b9e0;
	Node0xa5b4f0 -> Node0xa5bc60;
	Node0xa5b170 -> Node0xa5bc60;
	Node0xa5bc60 -> Node0xa5bcd0;
	Node0xa5bd40 -> Node0xa5bdb0;
	Node0xa5b100 -> Node0xa5bdb0;
	Node0xa5bdb0 -> Node0xa5be20;
	Node0xa5b1e0 -> Node0xa5be20;
	Node0xa5be20 -> Node0xa5be90;
	Node0xa5b250 -> Node0xa5be90;
	Node0xa5be90 -> Node0xa5bf00;
	Node0xa5b170 -> Node0xa5bf00;
	Node0xa5bf00 -> Node0xa5bf70;
	Node0xa5b2c0 -> Node0xa5bf70;
	Node0xa5bf70 -> Node0xa5bfe0;
	Node0xa5b480 -> Node0xa5bfe0;
	Node0xa5bfe0 -> Node0xa5c050;
	Node0xa5b5d0 -> Node0xa5c050;
	Node0xa5c050 -> Node0xa5c0c0;
	Node0xa5b560 -> Node0xa5c0c0;
	Node0xa5c0c0 -> Node0xa5c130;
	Node0xa5b3a0 -> Node0xa5c130;
	Node0xa5c130 -> Node0xa5c1a0;
	Node0xa5b6e0 -> Node0xa5c1a0;
	Node0xa5c1a0 -> Node0xa5c210;
	Node0xa5b9e0 -> Node0xa5c210;
	Node0xa5c210 -> Node0xa5c280;
	Node0xa5bcd0 -> Node0xa5c280;
	Node0xa5c280 -> Node0xa5c2f0;
	Node0xa5b8d0 -> Node0xa5c2f0;
	Node0xa5aff0 -> Node0xa5c360;
	Node0xa5c2f0 -> Node0xa5c360;
	Node0xa5c360 -> Node0x9fb268;
	Node0x9fb268 -> Node0xa5c800;
}
