digraph "DFG for'main' function" {
	Node0x242a6e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x242a768[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x242a7f8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x242a858[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x242acd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x242adb8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x242aeb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x242af78[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x242b028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x242b288[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x242b348[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x242b4a8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x242b508[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x242dd70[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x242df78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x242e0d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x242e1e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x242e2a8[shape=record, label="  ret i32 0"];
	Node0x242a6e8 -> Node0x242a768;
	Node0x242a768 -> Node0x242a7f8;
	Node0x242a7f8 -> Node0x242a858;
	Node0x242a858 -> Node0x242acd8;
	Node0x242acd8 -> Node0x242adb8;
	Node0x242adb8 -> Node0x242aeb8;
	Node0x242aeb8 -> Node0x242af78;
	Node0x242af78 -> Node0x242b028;
	Node0x242b028 -> Node0x242b288;
	Node0x242b288 -> Node0x242b348;
	Node0x242b348 -> Node0x242b4a8;
	Node0x242b4a8 -> Node0x242b508;
	Node0x242b508 -> Node0x242dd70;
	Node0x242dd70 -> Node0x242df78;
	Node0x242df78 -> Node0x242e0d8;
	Node0x242e0d8 -> Node0x242e1e8;
	Node0x242e1e8 -> Node0x242e2a8;
edge [color=red]
	Node0x242a6e8 -> Node0x242a858;
	Node0x242a858 -> Node0x242acd8;
	Node0x242a768 -> Node0x242adb8;
	Node0x242adb8 -> Node0x242aeb8;
	Node0x242a7f8 -> Node0x242af78;
	Node0x242af78 -> Node0x242b028;
	Node0x242a6e8 -> Node0x242b288;
	Node0x242a768 -> Node0x242b288;
	Node0x242a7f8 -> Node0x242b288;
	Node0x242a6e8 -> Node0x242b348;
	Node0x242a768 -> Node0x242b4a8;
	Node0x242a7f8 -> Node0x242b508;
	Node0x242b348 -> Node0x242dd70;
	Node0x242b4a8 -> Node0x242dd70;
	Node0x242b508 -> Node0x242dd70;
	Node0x242af78 -> Node0x242df78;
	Node0x242adb8 -> Node0x242e0d8;
	Node0x242a858 -> Node0x242e1e8;
}
