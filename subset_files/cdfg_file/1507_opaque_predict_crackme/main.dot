digraph "DFG for'main' function" {
	Node0xa8edd8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa8ee58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa8eee8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xa8ef48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xa8eff8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xa8f428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa8f508[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xa8f608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa8f6c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xa8f778[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xa8f838[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xa8f8e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xa897d0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xa8fae8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa90a58[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa910c8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xa91128[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xa91238[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xa91498[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xa915f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xa91708[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa91818[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa918d8[shape=record, label="  ret i32 0"];
	Node0xa8edd8 -> Node0xa8ee58;
	Node0xa8ee58 -> Node0xa8eee8;
	Node0xa8eee8 -> Node0xa8ef48;
	Node0xa8ef48 -> Node0xa8eff8;
	Node0xa8eff8 -> Node0xa8f428;
	Node0xa8f428 -> Node0xa8f508;
	Node0xa8f508 -> Node0xa8f608;
	Node0xa8f608 -> Node0xa8f6c8;
	Node0xa8f6c8 -> Node0xa8f778;
	Node0xa8f778 -> Node0xa8f838;
	Node0xa8f838 -> Node0xa8f8e8;
	Node0xa8f8e8 -> Node0xa897d0;
	Node0xa897d0 -> Node0xa8fae8;
	Node0xa8fae8 -> Node0xa90a58;
	Node0xa90a58 -> Node0xa910c8;
	Node0xa910c8 -> Node0xa91128;
	Node0xa91128 -> Node0xa91238;
	Node0xa91238 -> Node0xa91498;
	Node0xa91498 -> Node0xa915f8;
	Node0xa915f8 -> Node0xa91708;
	Node0xa91708 -> Node0xa91818;
	Node0xa91818 -> Node0xa918d8;
edge [color=red]
	Node0xa8edd8 -> Node0xa8eff8;
	Node0xa8eff8 -> Node0xa8f428;
	Node0xa8ee58 -> Node0xa8f508;
	Node0xa8f508 -> Node0xa8f608;
	Node0xa8eee8 -> Node0xa8f6c8;
	Node0xa8f6c8 -> Node0xa8f778;
	Node0xa8ef48 -> Node0xa8f838;
	Node0xa8f838 -> Node0xa8f8e8;
	Node0xa8edd8 -> Node0xa897d0;
	Node0xa8ee58 -> Node0xa897d0;
	Node0xa8eee8 -> Node0xa897d0;
	Node0xa8ef48 -> Node0xa897d0;
	Node0xa8edd8 -> Node0xa8fae8;
	Node0xa8ee58 -> Node0xa90a58;
	Node0xa8eee8 -> Node0xa910c8;
	Node0xa8ef48 -> Node0xa91128;
	Node0xa8fae8 -> Node0xa91238;
	Node0xa90a58 -> Node0xa91238;
	Node0xa910c8 -> Node0xa91238;
	Node0xa91128 -> Node0xa91238;
	Node0xa8f838 -> Node0xa91498;
	Node0xa8f6c8 -> Node0xa915f8;
	Node0xa8f508 -> Node0xa91708;
	Node0xa8eff8 -> Node0xa91818;
}
