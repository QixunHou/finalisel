digraph "DFG for'crackme' function" {
	Node0xa8cdb0[shape=record, label="  %5 = mul i32 %1, -4"];
	Node0xa8ce50[shape=record, label="  %6 = xor i32 %2, -1"];
	Node0xa8cec0[shape=record, label="  %7 = or i32 %6, %1"];
	Node0xa8cf60[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0xa8cfd0[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0xa8d040[shape=record, label="  %10 = and i32 %9, %3"];
	Node0xa8d0b0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0xa8d150[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0xa8d1c0[shape=record, label="  %13 = add i32 %5, %3"];
	Node0xa8d230[shape=record, label="  %14 = add i32 %13, %8"];
	Node0xa8d2a0[shape=record, label="  %15 = add i32 %14, %12"];
	Node0xa8d310[shape=record, label="  %16 = and i32 %2, %1"];
	Node0xa8d380[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0xa8d3f0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0xa8d460[shape=record, label="  %19 = xor i32 %2, %1"];
	Node0xa8d4d0[shape=record, label="  %20 = and i32 %6, %1"];
	Node0xa8d540[shape=record, label="  %21 = or i32 %2, %1"];
	Node0xa8d5b0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0xa8d620[shape=record, label="  %23 = xor i32 %7, -1"];
	Node0xa8d6c0[shape=record, label="  %24 = mul i32 %23, -9"];
	Node0xa8d730[shape=record, label="  %25 = xor i32 %3, %0"];
	Node0xa8d7a0[shape=record, label="  %26 = or i32 %3, %0"];
	Node0xa8d810[shape=record, label="  %27 = and i32 %3, %0"];
	Node0xa8d880[shape=record, label="  %28 = xor i32 %26, -1"];
	Node0xa8d8f0[shape=record, label="  %29 = xor i32 %3, -1"];
	Node0xa8d960[shape=record, label="  %30 = and i32 %29, %0"];
	Node0xa8da00[shape=record, label="  %31 = shl i32 %27, 2"];
	Node0xa8da70[shape=record, label="  %32 = shl i32 %19, 1"];
	Node0xa8dcf0[shape=record, label="  %33 = add i32 %10, %28"];
	Node0xa8dd90[shape=record, label="  %34 = mul i32 %33, 3"];
	Node0xa8de00[shape=record, label="  %35 = sub i32 %30, %16"];
	Node0xa8dea0[shape=record, label="  %36 = mul i32 %35, 6"];
	Node0xa8df10[shape=record, label="  %37 = sub i32 %2, %20"];
	Node0xa8dfb0[shape=record, label="  %38 = mul i32 %37, 5"];
	Node0xa8e020[shape=record, label="  %39 = sub i32 2, %0"];
	Node0xa8e090[shape=record, label="  %40 = sub i32 %39, %1"];
	Node0xa8e100[shape=record, label="  %41 = add i32 %40, %2"];
	Node0xa8e170[shape=record, label="  %42 = add i32 %41, %20"];
	Node0xa8e1e0[shape=record, label="  %43 = add i32 %42, %22"];
	Node0xa8e250[shape=record, label="  %44 = add i32 %43, %3"];
	Node0xa8e2c0[shape=record, label="  %45 = add i32 %44, %24"];
	Node0xa8e330[shape=record, label="  %46 = sub i32 %45, %25"];
	Node0xa8e3a0[shape=record, label="  %47 = sub i32 %46, %26"];
	Node0xa8e410[shape=record, label="  %48 = add i32 %47, %27"];
	Node0xa8e480[shape=record, label="  %49 = add i32 %48, %32"];
	Node0xa8e4f0[shape=record, label="  %50 = add i32 %49, %18"];
	Node0xa8e560[shape=record, label="  %51 = add i32 %50, %31"];
	Node0xa8e5d0[shape=record, label="  %52 = add i32 %51, %38"];
	Node0xa8e640[shape=record, label="  %53 = add i32 %52, %34"];
	Node0xa8e6b0[shape=record, label="  %54 = add i32 %53, %36"];
	Node0xa8e720[shape=record, label="  %55 = icmp eq i32 %15, %54"];
	Node0xa2d268[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa8ebc0[shape=record, label="  %57 = tail call i32 @puts(i8* nonnull dereferenceable(1) %56)"];
	Node0xa8ec10[shape=record, label="  ret void"];
	Node0xa8cdb0 -> Node0xa8ce50;
	Node0xa8ce50 -> Node0xa8cec0;
	Node0xa8cec0 -> Node0xa8cf60;
	Node0xa8cf60 -> Node0xa8cfd0;
	Node0xa8cfd0 -> Node0xa8d040;
	Node0xa8d040 -> Node0xa8d0b0;
	Node0xa8d0b0 -> Node0xa8d150;
	Node0xa8d150 -> Node0xa8d1c0;
	Node0xa8d1c0 -> Node0xa8d230;
	Node0xa8d230 -> Node0xa8d2a0;
	Node0xa8d2a0 -> Node0xa8d310;
	Node0xa8d310 -> Node0xa8d380;
	Node0xa8d380 -> Node0xa8d3f0;
	Node0xa8d3f0 -> Node0xa8d460;
	Node0xa8d460 -> Node0xa8d4d0;
	Node0xa8d4d0 -> Node0xa8d540;
	Node0xa8d540 -> Node0xa8d5b0;
	Node0xa8d5b0 -> Node0xa8d620;
	Node0xa8d620 -> Node0xa8d6c0;
	Node0xa8d6c0 -> Node0xa8d730;
	Node0xa8d730 -> Node0xa8d7a0;
	Node0xa8d7a0 -> Node0xa8d810;
	Node0xa8d810 -> Node0xa8d880;
	Node0xa8d880 -> Node0xa8d8f0;
	Node0xa8d8f0 -> Node0xa8d960;
	Node0xa8d960 -> Node0xa8da00;
	Node0xa8da00 -> Node0xa8da70;
	Node0xa8da70 -> Node0xa8dcf0;
	Node0xa8dcf0 -> Node0xa8dd90;
	Node0xa8dd90 -> Node0xa8de00;
	Node0xa8de00 -> Node0xa8dea0;
	Node0xa8dea0 -> Node0xa8df10;
	Node0xa8df10 -> Node0xa8dfb0;
	Node0xa8dfb0 -> Node0xa8e020;
	Node0xa8e020 -> Node0xa8e090;
	Node0xa8e090 -> Node0xa8e100;
	Node0xa8e100 -> Node0xa8e170;
	Node0xa8e170 -> Node0xa8e1e0;
	Node0xa8e1e0 -> Node0xa8e250;
	Node0xa8e250 -> Node0xa8e2c0;
	Node0xa8e2c0 -> Node0xa8e330;
	Node0xa8e330 -> Node0xa8e3a0;
	Node0xa8e3a0 -> Node0xa8e410;
	Node0xa8e410 -> Node0xa8e480;
	Node0xa8e480 -> Node0xa8e4f0;
	Node0xa8e4f0 -> Node0xa8e560;
	Node0xa8e560 -> Node0xa8e5d0;
	Node0xa8e5d0 -> Node0xa8e640;
	Node0xa8e640 -> Node0xa8e6b0;
	Node0xa8e6b0 -> Node0xa8e720;
	Node0xa8e720 -> Node0xa2d268;
	Node0xa2d268 -> Node0xa8ebc0;
	Node0xa8ebc0 -> Node0xa8ec10;
edge [color=red]
	Node0xa8ce50 -> Node0xa8cec0;
	Node0xa8cec0 -> Node0xa8cf60;
	Node0xa8cfd0 -> Node0xa8d040;
	Node0xa8d040 -> Node0xa8d0b0;
	Node0xa8d0b0 -> Node0xa8d150;
	Node0xa8cdb0 -> Node0xa8d1c0;
	Node0xa8d1c0 -> Node0xa8d230;
	Node0xa8cf60 -> Node0xa8d230;
	Node0xa8d230 -> Node0xa8d2a0;
	Node0xa8d150 -> Node0xa8d2a0;
	Node0xa8d310 -> Node0xa8d380;
	Node0xa8d380 -> Node0xa8d3f0;
	Node0xa8ce50 -> Node0xa8d4d0;
	Node0xa8d540 -> Node0xa8d5b0;
	Node0xa8cec0 -> Node0xa8d620;
	Node0xa8d620 -> Node0xa8d6c0;
	Node0xa8d7a0 -> Node0xa8d880;
	Node0xa8d8f0 -> Node0xa8d960;
	Node0xa8d810 -> Node0xa8da00;
	Node0xa8d460 -> Node0xa8da70;
	Node0xa8d040 -> Node0xa8dcf0;
	Node0xa8d880 -> Node0xa8dcf0;
	Node0xa8dcf0 -> Node0xa8dd90;
	Node0xa8d960 -> Node0xa8de00;
	Node0xa8d310 -> Node0xa8de00;
	Node0xa8de00 -> Node0xa8dea0;
	Node0xa8d4d0 -> Node0xa8df10;
	Node0xa8df10 -> Node0xa8dfb0;
	Node0xa8e020 -> Node0xa8e090;
	Node0xa8e090 -> Node0xa8e100;
	Node0xa8e100 -> Node0xa8e170;
	Node0xa8d4d0 -> Node0xa8e170;
	Node0xa8e170 -> Node0xa8e1e0;
	Node0xa8d5b0 -> Node0xa8e1e0;
	Node0xa8e1e0 -> Node0xa8e250;
	Node0xa8e250 -> Node0xa8e2c0;
	Node0xa8d6c0 -> Node0xa8e2c0;
	Node0xa8e2c0 -> Node0xa8e330;
	Node0xa8d730 -> Node0xa8e330;
	Node0xa8e330 -> Node0xa8e3a0;
	Node0xa8d7a0 -> Node0xa8e3a0;
	Node0xa8e3a0 -> Node0xa8e410;
	Node0xa8d810 -> Node0xa8e410;
	Node0xa8e410 -> Node0xa8e480;
	Node0xa8da70 -> Node0xa8e480;
	Node0xa8e480 -> Node0xa8e4f0;
	Node0xa8d3f0 -> Node0xa8e4f0;
	Node0xa8e4f0 -> Node0xa8e560;
	Node0xa8da00 -> Node0xa8e560;
	Node0xa8e560 -> Node0xa8e5d0;
	Node0xa8dfb0 -> Node0xa8e5d0;
	Node0xa8e5d0 -> Node0xa8e640;
	Node0xa8dd90 -> Node0xa8e640;
	Node0xa8e640 -> Node0xa8e6b0;
	Node0xa8dea0 -> Node0xa8e6b0;
	Node0xa8d2a0 -> Node0xa8e720;
	Node0xa8e6b0 -> Node0xa8e720;
	Node0xa8e720 -> Node0xa2d268;
	Node0xa2d268 -> Node0xa8ebc0;
}
