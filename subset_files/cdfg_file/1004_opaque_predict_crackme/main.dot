digraph "DFG for'main' function" {
	Node0x1c9fe18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c9fe98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c9ff28[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1ca0388[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ca0468[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1ca0588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ca07c0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1ca0878[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ca17e8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ca1e70[shape=record, label="  %8 = add i32 %6, 1"];
	Node0x1ca1ee0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x1ca1f50[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x1ca1fc0[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x1ca2030[shape=record, label="  %12 = shl i32 %11, 2"];
	Node0x1ca20a0[shape=record, label="  %13 = xor i32 %12, -4"];
	Node0x1ca2110[shape=record, label="  %14 = and i32 %6, %9"];
	Node0x1ca2180[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x1ca21f0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1ca2260[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1ca22d0[shape=record, label="  %18 = xor i32 %6, -1"];
	Node0x1ca2340[shape=record, label="  %19 = and i32 %7, %18"];
	Node0x1ca23b0[shape=record, label="  %20 = shl i32 %11, 1"];
	Node0x1ca2420[shape=record, label="  %21 = add i32 %14, %7"];
	Node0x1ca2490[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x1ca2500[shape=record, label="  %23 = add i32 %10, %18"];
	Node0x1ca2570[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x1ca25e0[shape=record, label="  %25 = sub i32 %24, %19"];
	Node0x1ca2650[shape=record, label="  %26 = sub i32 %25, %20"];
	Node0x1ca26c0[shape=record, label="  %27 = sub i32 %26, %13"];
	Node0x1ca2730[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x1ca27a0[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x1ca2810[shape=record, label="  %30 = icmp eq i32 %8, %29"];
	Node0x1c409d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ca28a0[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x1ca2d08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ca2e68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ca2f28[shape=record, label="  ret i32 0"];
	Node0x1c9fe18 -> Node0x1c9fe98;
	Node0x1c9fe98 -> Node0x1c9ff28;
	Node0x1c9ff28 -> Node0x1ca0388;
	Node0x1ca0388 -> Node0x1ca0468;
	Node0x1ca0468 -> Node0x1ca0588;
	Node0x1ca0588 -> Node0x1ca07c0;
	Node0x1ca07c0 -> Node0x1ca0878;
	Node0x1ca0878 -> Node0x1ca17e8;
	Node0x1ca17e8 -> Node0x1ca1e70;
	Node0x1ca1e70 -> Node0x1ca1ee0;
	Node0x1ca1ee0 -> Node0x1ca1f50;
	Node0x1ca1f50 -> Node0x1ca1fc0;
	Node0x1ca1fc0 -> Node0x1ca2030;
	Node0x1ca2030 -> Node0x1ca20a0;
	Node0x1ca20a0 -> Node0x1ca2110;
	Node0x1ca2110 -> Node0x1ca2180;
	Node0x1ca2180 -> Node0x1ca21f0;
	Node0x1ca21f0 -> Node0x1ca2260;
	Node0x1ca2260 -> Node0x1ca22d0;
	Node0x1ca22d0 -> Node0x1ca2340;
	Node0x1ca2340 -> Node0x1ca23b0;
	Node0x1ca23b0 -> Node0x1ca2420;
	Node0x1ca2420 -> Node0x1ca2490;
	Node0x1ca2490 -> Node0x1ca2500;
	Node0x1ca2500 -> Node0x1ca2570;
	Node0x1ca2570 -> Node0x1ca25e0;
	Node0x1ca25e0 -> Node0x1ca2650;
	Node0x1ca2650 -> Node0x1ca26c0;
	Node0x1ca26c0 -> Node0x1ca2730;
	Node0x1ca2730 -> Node0x1ca27a0;
	Node0x1ca27a0 -> Node0x1ca2810;
	Node0x1ca2810 -> Node0x1c409d8;
	Node0x1c409d8 -> Node0x1ca28a0;
	Node0x1ca28a0 -> Node0x1ca2d08;
	Node0x1ca2d08 -> Node0x1ca2e68;
	Node0x1ca2e68 -> Node0x1ca2f28;
edge [color=red]
	Node0x1c9fe18 -> Node0x1c9ff28;
	Node0x1c9ff28 -> Node0x1ca0388;
	Node0x1c9fe98 -> Node0x1ca0468;
	Node0x1ca0468 -> Node0x1ca0588;
	Node0x1c9fe18 -> Node0x1ca07c0;
	Node0x1c9fe98 -> Node0x1ca07c0;
	Node0x1c9fe18 -> Node0x1ca0878;
	Node0x1c9fe98 -> Node0x1ca17e8;
	Node0x1ca0878 -> Node0x1ca1e70;
	Node0x1ca17e8 -> Node0x1ca1ee0;
	Node0x1ca17e8 -> Node0x1ca1f50;
	Node0x1ca0878 -> Node0x1ca1f50;
	Node0x1ca17e8 -> Node0x1ca1fc0;
	Node0x1ca0878 -> Node0x1ca1fc0;
	Node0x1ca1fc0 -> Node0x1ca2030;
	Node0x1ca2030 -> Node0x1ca20a0;
	Node0x1ca0878 -> Node0x1ca2110;
	Node0x1ca1ee0 -> Node0x1ca2110;
	Node0x1ca17e8 -> Node0x1ca2180;
	Node0x1ca0878 -> Node0x1ca2180;
	Node0x1ca2180 -> Node0x1ca21f0;
	Node0x1ca21f0 -> Node0x1ca2260;
	Node0x1ca0878 -> Node0x1ca22d0;
	Node0x1ca17e8 -> Node0x1ca2340;
	Node0x1ca22d0 -> Node0x1ca2340;
	Node0x1ca1fc0 -> Node0x1ca23b0;
	Node0x1ca2110 -> Node0x1ca2420;
	Node0x1ca17e8 -> Node0x1ca2420;
	Node0x1ca2420 -> Node0x1ca2490;
	Node0x1ca1f50 -> Node0x1ca2500;
	Node0x1ca22d0 -> Node0x1ca2500;
	Node0x1ca2500 -> Node0x1ca2570;
	Node0x1ca2110 -> Node0x1ca2570;
	Node0x1ca2570 -> Node0x1ca25e0;
	Node0x1ca2340 -> Node0x1ca25e0;
	Node0x1ca25e0 -> Node0x1ca2650;
	Node0x1ca23b0 -> Node0x1ca2650;
	Node0x1ca2650 -> Node0x1ca26c0;
	Node0x1ca20a0 -> Node0x1ca26c0;
	Node0x1ca26c0 -> Node0x1ca2730;
	Node0x1ca2260 -> Node0x1ca2730;
	Node0x1ca2730 -> Node0x1ca27a0;
	Node0x1ca2490 -> Node0x1ca27a0;
	Node0x1ca1e70 -> Node0x1ca2810;
	Node0x1ca27a0 -> Node0x1ca2810;
	Node0x1ca2810 -> Node0x1c409d8;
	Node0x1c409d8 -> Node0x1ca28a0;
	Node0x1ca0468 -> Node0x1ca2d08;
	Node0x1c9ff28 -> Node0x1ca2e68;
}
