; ModuleID = '../.././c_source_file/0787_path_condition_crackme.c'
source_filename = "../.././c_source_file/0787_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %8, %1
  %10 = mul i32 %9, -2
  %11 = xor i32 %5, -1
  %12 = xor i32 %3, -1
  %13 = or i32 %12, %4
  %14 = xor i32 %13, -1
  %15 = or i32 %11, %14
  %16 = add i32 %15, %10
  %17 = and i32 %11, %4
  %18 = xor i32 %4, %3
  %19 = or i32 %17, %18
  %20 = add i32 %16, %19
  %21 = and i32 %2, %0
  %22 = xor i32 %1, %0
  %23 = xor i32 %22, -1
  %24 = or i32 %21, %23
  %25 = or i32 %1, %0
  %26 = xor i32 %25, -1
  %27 = xor i32 %2, %1
  %28 = xor i32 %27, -1
  %29 = or i32 %28, %26
  %30 = shl i32 %29, 1
  %31 = xor i32 %1, -1
  %32 = and i32 %31, %0
  %33 = xor i32 %32, -1
  %34 = and i32 %33, %2
  %35 = or i32 %32, %7
  %36 = or i32 %32, %2
  %37 = or i32 %22, %2
  %38 = and i32 %1, %0
  %39 = or i32 %2, %0
  %40 = xor i32 %39, %38
  %41 = xor i32 %27, %0
  %42 = or i32 %31, %0
  %43 = xor i32 %42, -1
  %44 = or i32 %27, %43
  %45 = xor i32 %39, -1
  %46 = or i32 %45, %31
  %47 = shl i32 %46, 1
  %48 = and i32 %25, %7
  %49 = shl i32 %48, 1
  %50 = xor i32 %38, -1
  %51 = xor i32 %2, %0
  %52 = and i32 %51, %50
  %53 = xor i32 %51, -1
  %54 = and i32 %22, %53
  %55 = and i32 %2, %1
  %56 = xor i32 %55, %0
  %57 = or i32 %53, %43
  %58 = xor i32 %55, -1
  %59 = xor i32 %43, %2
  %60 = and i32 %31, %2
  %61 = and i32 %60, %0
  %62 = or i32 %31, %2
  %63 = xor i32 %0, -1
  %64 = xor i32 %62, %63
  %65 = xor i32 %64, %61
  %66 = or i32 %32, %53
  %67 = or i32 %61, %41
  %68 = or i32 %21, %26
  %69 = or i32 %55, %63
  %70 = shl i32 %69, 1
  %71 = or i32 %8, %23
  %72 = and i32 %25, %53
  %73 = or i32 %27, %26
  %74 = and i32 %53, %23
  %75 = or i32 %51, %23
  %76 = or i32 %28, %0
  %77 = or i32 %2, %1
  %78 = xor i32 %77, -1
  %79 = xor i32 %78, %0
  %80 = or i32 %21, %22
  %81 = and i32 %55, %63
  %82 = and i32 %77, %0
  %83 = or i32 %81, %82
  %84 = xor i32 %8, -1
  %85 = and i32 %22, %84
  %86 = and i32 %51, %1
  %87 = and i32 %7, %1
  %88 = or i32 %21, %87
  %89 = and i32 %27, %50
  %90 = xor i32 %21, %25
  %91 = or i32 %51, %22
  %92 = xor i32 %87, -1
  %93 = xor i32 %92, %0
  %94 = and i32 %7, %33
  %95 = or i32 %27, %0
  %96 = and i32 %60, %63
  %97 = or i32 %27, %63
  %98 = xor i32 %96, %97
  %99 = xor i32 %21, %1
  %100 = and i32 %28, %50
  %101 = xor i32 %58, %0
  %102 = or i32 %58, %63
  %103 = add i32 %77, 1
  %104 = or i32 %22, %7
  %105 = xor i32 %32, %92
  %106 = shl i32 %105, 1
  %107 = xor i32 %41, -1
  %108 = xor i32 %61, %107
  %109 = and i32 %55, %0
  %110 = xor i32 %77, %0
  %111 = xor i32 %110, 2147483647
  %112 = xor i32 %111, %109
  %113 = and i32 %62, %0
  %114 = or i32 %96, %113
  %115 = xor i32 %21, %42
  %116 = xor i32 %21, %92
  %117 = or i32 %38, %45
  %118 = and i32 %63, %2
  %119 = or i32 %118, %31
  %120 = xor i32 %82, 2147483647
  %121 = xor i32 %120, %81
  %122 = or i32 %51, %32
  %123 = or i32 %28, %63
  %124 = and i32 %92, %63
  %125 = or i32 %8, %55
  %126 = shl i32 %125, 1
  %127 = xor i32 %77, %38
  %128 = xor i32 %87, %0
  %129 = or i32 %109, %107
  %130 = and i32 %25, %28
  %131 = add i32 %87, 1
  %132 = xor i32 %113, 2147483647
  %133 = xor i32 %132, %96
  %134 = shl i32 %133, 1
  %135 = and i32 %53, %31
  %136 = and i32 %84, %23
  %137 = or i32 %118, %38
  %138 = or i32 %38, %28
  %139 = or i32 %28, %43
  %140 = xor i32 %28, %0
  %141 = or i32 %8, %22
  %142 = and i32 %27, %0
  %143 = or i32 %81, %142
  %144 = and i32 %22, %7
  %145 = or i32 %60, %63
  %146 = or i32 %60, %38
  %147 = or i32 %51, %1
  %148 = shl i32 %147, 1
  %149 = and i32 %84, %1
  %150 = or i32 %45, %23
  %151 = shl i32 %150, 1
  %152 = and i32 %51, %25
  %153 = and i32 %51, %31
  %154 = and i32 %78, %63
  %155 = and i32 %87, %63
  %156 = and i32 %78, %0
  %157 = shl i32 %156, 3
  %158 = and i32 %87, %0
  %159 = shl i32 %158, 3
  %160 = shl i32 %96, 4
  %161 = shl i32 %81, 3
  %162 = xor i32 %5, %4
  %163 = xor i32 %162, -1
  %164 = and i32 %18, %163
  %165 = and i32 %4, %3
  %166 = or i32 %5, %4
  %167 = xor i32 %166, -1
  %168 = or i32 %18, %167
  %169 = xor i32 %165, %5
  %170 = xor i32 %4, -1
  %171 = and i32 %12, %5
  %172 = and i32 %171, %170
  %173 = xor i32 %5, %3
  %174 = or i32 %173, %170
  %175 = xor i32 %172, %174
  %176 = and i32 %5, %3
  %177 = and i32 %11, %3
  %178 = or i32 %177, %170
  %179 = xor i32 %14, %5
  %180 = or i32 %11, %4
  %181 = xor i32 %180, -1
  %182 = add i32 %180, 1
  %183 = and i32 %5, %4
  %184 = xor i32 %183, -1
  %185 = add i32 %183, 1
  %186 = xor i32 %177, %4
  %187 = and i32 %173, %13
  %188 = xor i32 %18, -1
  %189 = or i32 %162, %188
  %190 = or i32 %163, %3
  %191 = or i32 %5, %3
  %192 = xor i32 %191, %4
  %193 = xor i32 %173, -1
  %194 = or i32 %165, %193
  %195 = xor i32 %177, -1
  %196 = and i32 %195, %4
  %197 = or i32 %4, %3
  %198 = and i32 %162, %197
  %199 = or i32 %163, %12
  %200 = and i32 %163, %188
  %201 = or i32 %181, %188
  %202 = or i32 %162, %12
  %203 = or i32 %163, %188
  %204 = and i32 %163, %12
  %205 = xor i32 %17, -1
  %206 = and i32 %205, %188
  %207 = and i32 %171, %4
  %208 = or i32 %12, %5
  %209 = xor i32 %208, %4
  %210 = xor i32 %209, -1
  %211 = xor i32 %207, %210
  %212 = and i32 %176, %4
  %213 = or i32 %212, %192
  %214 = xor i32 %173, %4
  %215 = or i32 %207, %214
  %216 = or i32 %162, %14
  %217 = or i32 %17, %176
  %218 = and i32 %195, %170
  %219 = add i32 %3, 1
  %220 = and i32 %176, %170
  %221 = and i32 %173, %4
  %222 = or i32 %220, %221
  %223 = shl i32 %222, 2
  %224 = or i32 %183, %18
  %225 = or i32 %173, %4
  %226 = shl i32 %173, 1
  %227 = xor i32 %176, %4
  %228 = and i32 %162, %3
  %229 = shl i32 %228, 1
  %230 = or i32 %183, %177
  %231 = and i32 %18, %11
  %232 = and i32 %13, %193
  %233 = and i32 %173, %170
  %234 = xor i32 %212, -1
  %235 = xor i32 %233, %234
  %236 = and i32 %208, %4
  %237 = xor i32 %236, -1
  %238 = xor i32 %172, %237
  %239 = and i32 %12, %4
  %240 = or i32 %173, %239
  %241 = xor i32 %214, -1
  %242 = or i32 %212, %241
  %243 = xor i32 %191, -1
  %244 = or i32 %165, %243
  %245 = or i32 %243, %170
  %246 = xor i32 %165, -1
  %247 = and i32 %11, %246
  %248 = or i32 %17, %12
  %249 = and i32 %193, %246
  %250 = xor i32 %243, %4
  %251 = or i32 %167, %3
  %252 = or i32 %212, %233
  %253 = or i32 %243, %4
  %254 = and i32 %191, %170
  %255 = xor i32 %195, %4
  %256 = shl i32 %18, 1
  %257 = and i32 %13, %163
  %258 = shl i32 %195, 1
  %259 = xor i32 %239, -1
  %260 = add i32 %239, 1
  %261 = or i32 %193, %14
  %262 = and i32 %197, %5
  %263 = and i32 %191, %4
  %264 = xor i32 %220, -1
  %265 = xor i32 %263, %264
  %266 = and i32 %205, %12
  %267 = or i32 %207, %209
  %268 = or i32 %162, %18
  %269 = shl i32 %268, 1
  %270 = xor i32 %225, -1
  %271 = or i32 %207, %270
  %272 = xor i32 %197, -1
  %273 = xor i32 %272, %5
  %274 = xor i32 %221, %264
  %275 = or i32 %11, %272
  %276 = and i32 %162, %188
  %277 = xor i32 %191, %165
  %278 = shl i32 %163, 1
  %279 = and i32 %162, %18
  %280 = and i32 %180, %18
  %281 = and i32 %18, %205
  %282 = and i32 %166, %3
  %283 = shl i32 %282, 1
  %284 = xor i32 %180, %165
  %285 = xor i32 %176, -1
  %286 = and i32 %285, %170
  %287 = or i32 %176, %170
  %288 = or i32 %177, %4
  %289 = and i32 %11, %188
  %290 = shl i32 %239, 1
  %291 = or i32 %17, %188
  %292 = and i32 %166, %12
  %293 = and i32 %180, %3
  %294 = and i32 %166, %18
  %295 = and i32 %18, %5
  %296 = or i32 %181, %12
  %297 = and i32 %13, %11
  %298 = or i32 %11, %3
  %299 = xor i32 %298, -1
  %300 = or i32 %299, %170
  %301 = or i32 %17, %3
  %302 = shl i32 %170, 1
  %303 = or i32 %188, %5
  %304 = or i32 %183, %243
  %305 = and i32 %197, %163
  %306 = or i32 %165, %163
  %307 = or i32 %239, %5
  %308 = xor i32 %192, %234
  %309 = or i32 %212, %254
  %310 = shl i32 %309, 1
  %311 = or i32 %193, %4
  %312 = or i32 %165, %299
  %313 = and i32 %285, %4
  %314 = or i32 %172, %236
  %315 = shl i32 %243, 1
  %316 = and i32 %162, %12
  %317 = and i32 %208, %170
  %318 = or i32 %207, %317
  %319 = or i32 %18, %5
  %320 = shl i32 %191, 1
  %321 = or i32 %18, %181
  %322 = or i32 %183, %188
  %323 = and i32 %180, %12
  %324 = or i32 %176, %4
  %325 = or i32 %193, %272
  %326 = or i32 %298, %4
  %327 = or i32 %285, %4
  %328 = or i32 %272, %5
  %329 = or i32 %163, %14
  %330 = xor i32 %183, %191
  %331 = or i32 %285, %170
  %332 = or i32 %18, %11
  %333 = and i32 %18, %184
  %334 = or i32 %195, %170
  %335 = or i32 %239, %163
  %336 = and i32 %298, %170
  %337 = shl i32 %336, 1
  %338 = or i32 %162, %165
  %339 = shl i32 %338, 1
  %340 = and i32 %173, %259
  %341 = or i32 %11, %188
  %342 = and i32 %193, %4
  %343 = and i32 %193, %259
  %344 = or i32 %220, %263
  %345 = or i32 %183, %272
  %346 = and i32 %243, %170
  %347 = mul i32 %346, 7
  %348 = and i32 %177, %170
  %349 = and i32 %243, %4
  %350 = shl i32 %349, 2
  %351 = and i32 %177, %4
  %352 = mul i32 %351, 18
  %353 = and i32 %299, %170
  %354 = mul i32 %353, 10
  %355 = mul i32 %220, 23
  %356 = and i32 %299, %4
  %357 = add i32 %109, %94
  %358 = add i32 %357, %149
  %359 = add i32 %358, %123
  %360 = add i32 %359, %110
  %361 = add i32 %360, %115
  %362 = add i32 %361, %68
  %363 = add i32 %362, %40
  %364 = add i32 %363, %332
  %365 = add i32 %364, %162
  %366 = add i32 %365, %121
  %367 = add i32 %366, %112
  %368 = add i32 %367, %333
  %369 = add i32 %368, %313
  %370 = add i32 %369, %294
  %371 = add i32 %370, %291
  %372 = add i32 %371, %277
  %373 = add i32 %372, %248
  %374 = add i32 %373, %232
  %375 = add i32 %374, %227
  %376 = add i32 %375, %204
  %377 = add i32 %376, %187
  %378 = add i32 %377, %314
  %379 = shl i32 %378, 1
  %380 = add i32 %128, %155
  %381 = add i32 %380, %79
  %382 = sub i32 %41, %381
  %383 = add i32 %382, %180
  %384 = sub i32 %383, %202
  %385 = add i32 %384, %348
  %386 = mul i32 %385, 3
  %387 = sub i32 %129, %0
  %388 = add i32 %387, %356
  %389 = add i32 %388, %279
  %390 = sub i32 %389, %198
  %391 = sub i32 %390, %211
  %392 = add i32 %391, %215
  %393 = mul i32 %392, 5
  %394 = add i32 %102, %36
  %395 = add i32 %394, %176
  %396 = add i32 %395, %212
  %397 = shl i32 %396, 2
  %398 = add i32 %61, %154
  %399 = mul i32 %398, -6
  %400 = sub i32 %22, %25
  %401 = add i32 %400, %32
  %402 = add i32 %401, %50
  %403 = sub i32 %402, %42
  %404 = add i32 %403, %34
  %405 = add i32 %404, %35
  %406 = add i32 %405, %37
  %407 = add i32 %406, %58
  %408 = sub i32 %407, %59
  %409 = add i32 %408, %77
  %410 = add i32 %409, %103
  %411 = sub i32 %410, %104
  %412 = add i32 %411, %131
  %413 = sub i32 %412, %144
  %414 = add i32 %413, %219
  %415 = sub i32 %414, %24
  %416 = add i32 %415, %44
  %417 = sub i32 %416, %49
  %418 = add i32 %417, %52
  %419 = sub i32 %418, %54
  %420 = sub i32 %419, %56
  %421 = add i32 %420, %57
  %422 = add i32 %421, %66
  %423 = add i32 %422, %71
  %424 = add i32 %423, %72
  %425 = add i32 %424, %73
  %426 = add i32 %425, %74
  %427 = sub i32 %426, %75
  %428 = add i32 %427, %76
  %429 = sub i32 %428, %80
  %430 = sub i32 %429, %85
  %431 = sub i32 %430, %86
  %432 = sub i32 %431, %82
  %433 = sub i32 %432, %88
  %434 = sub i32 %433, %89
  %435 = sub i32 %434, %90
  %436 = add i32 %435, %91
  %437 = sub i32 %436, %93
  %438 = add i32 %437, %95
  %439 = sub i32 %438, %99
  %440 = sub i32 %439, %100
  %441 = sub i32 %440, %101
  %442 = sub i32 %441, %116
  %443 = add i32 %442, %117
  %444 = add i32 %443, %119
  %445 = add i32 %444, %122
  %446 = sub i32 %445, %124
  %447 = add i32 %446, %127
  %448 = add i32 %447, %130
  %449 = add i32 %448, %135
  %450 = sub i32 %449, %136
  %451 = sub i32 %450, %137
  %452 = sub i32 %451, %138
  %453 = sub i32 %452, %139
  %454 = sub i32 %453, %140
  %455 = sub i32 %454, %141
  %456 = sub i32 %455, %145
  %457 = add i32 %456, %146
  %458 = sub i32 %457, %152
  %459 = add i32 %458, %153
  %460 = add i32 %459, %30
  %461 = sub i32 %460, %47
  %462 = add i32 %461, %65
  %463 = sub i32 %462, %67
  %464 = sub i32 %463, %70
  %465 = sub i32 %464, %83
  %466 = sub i32 %465, %98
  %467 = sub i32 %466, %106
  %468 = add i32 %467, %108
  %469 = sub i32 %468, %114
  %470 = sub i32 %469, %126
  %471 = add i32 %470, %143
  %472 = sub i32 %471, %148
  %473 = sub i32 %472, %151
  %474 = sub i32 %473, %157
  %475 = add i32 %474, %159
  %476 = sub i32 %475, %160
  %477 = sub i32 %476, %161
  %478 = sub i32 %477, %165
  %479 = add i32 %478, %5
  %480 = add i32 %479, %260
  %481 = sub i32 %480, %302
  %482 = add i32 %481, %272
  %483 = add i32 %482, %188
  %484 = sub i32 %483, %169
  %485 = add i32 %484, %179
  %486 = add i32 %485, %182
  %487 = add i32 %486, %185
  %488 = add i32 %487, %231
  %489 = sub i32 %488, %247
  %490 = sub i32 %489, %256
  %491 = sub i32 %490, %262
  %492 = sub i32 %491, %273
  %493 = sub i32 %492, %275
  %494 = add i32 %493, %17
  %495 = sub i32 %494, %289
  %496 = sub i32 %495, %290
  %497 = sub i32 %496, %183
  %498 = sub i32 %497, %295
  %499 = add i32 %498, %297
  %500 = sub i32 %499, %303
  %501 = sub i32 %500, %307
  %502 = sub i32 %501, %319
  %503 = add i32 %502, %328
  %504 = add i32 %503, %341
  %505 = add i32 %504, %399
  %506 = sub i32 %505, %134
  %507 = add i32 %506, %164
  %508 = add i32 %507, %168
  %509 = add i32 %508, %178
  %510 = add i32 %509, %186
  %511 = sub i32 %510, %189
  %512 = add i32 %511, %190
  %513 = add i32 %512, %192
  %514 = add i32 %513, %194
  %515 = add i32 %514, %196
  %516 = sub i32 %515, %199
  %517 = add i32 %516, %200
  %518 = sub i32 %517, %201
  %519 = add i32 %518, %203
  %520 = add i32 %519, %206
  %521 = sub i32 %520, %216
  %522 = add i32 %521, %217
  %523 = add i32 %522, %218
  %524 = sub i32 %523, %224
  %525 = add i32 %524, %225
  %526 = sub i32 %525, %226
  %527 = add i32 %526, %230
  %528 = sub i32 %527, %221
  %529 = sub i32 %528, %240
  %530 = sub i32 %529, %244
  %531 = add i32 %530, %245
  %532 = add i32 %531, %249
  %533 = sub i32 %532, %250
  %534 = add i32 %533, %251
  %535 = add i32 %534, %253
  %536 = add i32 %535, %254
  %537 = sub i32 %536, %255
  %538 = sub i32 %537, %257
  %539 = sub i32 %538, %258
  %540 = sub i32 %539, %261
  %541 = sub i32 %540, %266
  %542 = add i32 %541, %276
  %543 = sub i32 %542, %278
  %544 = add i32 %543, %174
  %545 = add i32 %544, %280
  %546 = sub i32 %545, %281
  %547 = add i32 %546, %284
  %548 = sub i32 %547, %286
  %549 = sub i32 %548, %287
  %550 = add i32 %549, %288
  %551 = add i32 %550, %292
  %552 = add i32 %551, %293
  %553 = sub i32 %552, %296
  %554 = sub i32 %553, %300
  %555 = sub i32 %554, %301
  %556 = add i32 %555, %304
  %557 = add i32 %556, %305
  %558 = sub i32 %557, %306
  %559 = sub i32 %558, %311
  %560 = sub i32 %559, %312
  %561 = sub i32 %560, %315
  %562 = add i32 %561, %316
  %563 = sub i32 %562, %320
  %564 = sub i32 %563, %321
  %565 = sub i32 %564, %322
  %566 = add i32 %565, %323
  %567 = sub i32 %566, %324
  %568 = sub i32 %567, %325
  %569 = add i32 %568, %326
  %570 = sub i32 %569, %327
  %571 = add i32 %570, %329
  %572 = add i32 %571, %330
  %573 = sub i32 %572, %331
  %574 = add i32 %573, %334
  %575 = add i32 %574, %335
  %576 = sub i32 %575, %263
  %577 = sub i32 %576, %340
  %578 = sub i32 %577, %342
  %579 = add i32 %578, %343
  %580 = sub i32 %579, %345
  %581 = add i32 %580, %175
  %582 = sub i32 %581, %213
  %583 = sub i32 %582, %229
  %584 = sub i32 %583, %235
  %585 = add i32 %584, %238
  %586 = sub i32 %585, %242
  %587 = add i32 %586, %252
  %588 = sub i32 %587, %265
  %589 = sub i32 %588, %267
  %590 = sub i32 %589, %269
  %591 = sub i32 %590, %271
  %592 = sub i32 %591, %274
  %593 = sub i32 %592, %283
  %594 = sub i32 %593, %308
  %595 = add i32 %594, %318
  %596 = sub i32 %595, %337
  %597 = sub i32 %596, %339
  %598 = sub i32 %597, %344
  %599 = add i32 %598, %347
  %600 = sub i32 %599, %350
  %601 = add i32 %600, %352
  %602 = add i32 %601, %354
  %603 = add i32 %602, %355
  %604 = sub i32 %603, %223
  %605 = sub i32 %604, %310
  %606 = add i32 %605, %397
  %607 = add i32 %606, %386
  %608 = add i32 %607, %393
  %609 = add i32 %608, %379
  %610 = icmp eq i32 %20, %609
  %611 = select i1 %610, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %612 = tail call i32 @puts(i8* nonnull dereferenceable(1) %611)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
