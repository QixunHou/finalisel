digraph "DFG for'main' function" {
	Node0x500058[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5000d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x500168[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x5001c8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x500648[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x500728[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x500828[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5008e8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x500998[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x500bf8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x500cb8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x501c28[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x502298[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x502390[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x502598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5026f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x502808[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5028c8[shape=record, label="  ret i32 0"];
	Node0x500058 -> Node0x5000d8;
	Node0x5000d8 -> Node0x500168;
	Node0x500168 -> Node0x5001c8;
	Node0x5001c8 -> Node0x500648;
	Node0x500648 -> Node0x500728;
	Node0x500728 -> Node0x500828;
	Node0x500828 -> Node0x5008e8;
	Node0x5008e8 -> Node0x500998;
	Node0x500998 -> Node0x500bf8;
	Node0x500bf8 -> Node0x500cb8;
	Node0x500cb8 -> Node0x501c28;
	Node0x501c28 -> Node0x502298;
	Node0x502298 -> Node0x502390;
	Node0x502390 -> Node0x502598;
	Node0x502598 -> Node0x5026f8;
	Node0x5026f8 -> Node0x502808;
	Node0x502808 -> Node0x5028c8;
edge [color=red]
	Node0x500058 -> Node0x5001c8;
	Node0x5001c8 -> Node0x500648;
	Node0x5000d8 -> Node0x500728;
	Node0x500728 -> Node0x500828;
	Node0x500168 -> Node0x5008e8;
	Node0x5008e8 -> Node0x500998;
	Node0x500058 -> Node0x500bf8;
	Node0x5000d8 -> Node0x500bf8;
	Node0x500168 -> Node0x500bf8;
	Node0x500058 -> Node0x500cb8;
	Node0x5000d8 -> Node0x501c28;
	Node0x500168 -> Node0x502298;
	Node0x500cb8 -> Node0x502390;
	Node0x501c28 -> Node0x502390;
	Node0x502298 -> Node0x502390;
	Node0x5008e8 -> Node0x502598;
	Node0x500728 -> Node0x5026f8;
	Node0x5001c8 -> Node0x502808;
}
