digraph "DFG for'main' function" {
	Node0xe9cf38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe9cfb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe9d048[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xe9d0a8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xe9d528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe9d608[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xe9d708[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe9d7c8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xe9d878[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe9dad8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xe9db98[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe9eb08[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe9f178[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xe9f270[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xe9f478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe9f5d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe9f6e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe9f7a8[shape=record, label="  ret i32 0"];
	Node0xe9cf38 -> Node0xe9cfb8;
	Node0xe9cfb8 -> Node0xe9d048;
	Node0xe9d048 -> Node0xe9d0a8;
	Node0xe9d0a8 -> Node0xe9d528;
	Node0xe9d528 -> Node0xe9d608;
	Node0xe9d608 -> Node0xe9d708;
	Node0xe9d708 -> Node0xe9d7c8;
	Node0xe9d7c8 -> Node0xe9d878;
	Node0xe9d878 -> Node0xe9dad8;
	Node0xe9dad8 -> Node0xe9db98;
	Node0xe9db98 -> Node0xe9eb08;
	Node0xe9eb08 -> Node0xe9f178;
	Node0xe9f178 -> Node0xe9f270;
	Node0xe9f270 -> Node0xe9f478;
	Node0xe9f478 -> Node0xe9f5d8;
	Node0xe9f5d8 -> Node0xe9f6e8;
	Node0xe9f6e8 -> Node0xe9f7a8;
edge [color=red]
	Node0xe9cf38 -> Node0xe9d0a8;
	Node0xe9d0a8 -> Node0xe9d528;
	Node0xe9cfb8 -> Node0xe9d608;
	Node0xe9d608 -> Node0xe9d708;
	Node0xe9d048 -> Node0xe9d7c8;
	Node0xe9d7c8 -> Node0xe9d878;
	Node0xe9cf38 -> Node0xe9dad8;
	Node0xe9cfb8 -> Node0xe9dad8;
	Node0xe9d048 -> Node0xe9dad8;
	Node0xe9cf38 -> Node0xe9db98;
	Node0xe9cfb8 -> Node0xe9eb08;
	Node0xe9d048 -> Node0xe9f178;
	Node0xe9db98 -> Node0xe9f270;
	Node0xe9eb08 -> Node0xe9f270;
	Node0xe9f178 -> Node0xe9f270;
	Node0xe9d7c8 -> Node0xe9f478;
	Node0xe9d608 -> Node0xe9f5d8;
	Node0xe9d0a8 -> Node0xe9f6e8;
}
