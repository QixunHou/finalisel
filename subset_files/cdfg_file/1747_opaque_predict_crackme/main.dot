digraph "DFG for'main' function" {
	Node0xa70e38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa70eb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa70f48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xa713a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xa71488[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xa715a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa717e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xa71898[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa72808[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa72e90[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xa72f00[shape=record, label="  %9 = and i32 %6, %8"];
	Node0xa72f70[shape=record, label="  %10 = add i32 %9, 1"];
	Node0xa72fe0[shape=record, label="  %11 = and i32 %7, %6"];
	Node0xa73050[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0xa730c0[shape=record, label="  %13 = or i32 %6, %8"];
	Node0xa73130[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0xa731a0[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0xa73210[shape=record, label="  %16 = or i32 %7, %6"];
	Node0xa73280[shape=record, label="  %17 = shl i32 %8, 1"];
	Node0xa732f0[shape=record, label="  %18 = xor i32 %16, -1"];
	Node0xa73360[shape=record, label="  %19 = xor i32 %14, -2"];
	Node0xa733d0[shape=record, label="  %20 = shl i32 %6, 1"];
	Node0xa73440[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0xa734b0[shape=record, label="  %22 = shl i32 %6, 2"];
	Node0xa73520[shape=record, label="  %23 = sub i32 1, %7"];
	Node0xa73590[shape=record, label="  %24 = add i32 %23, %22"];
	Node0xa73600[shape=record, label="  %25 = add i32 %24, %21"];
	Node0xa73670[shape=record, label="  %26 = add i32 %25, %12"];
	Node0xa736e0[shape=record, label="  %27 = add i32 %26, %15"];
	Node0xa73750[shape=record, label="  %28 = sub i32 %27, %16"];
	Node0xa737c0[shape=record, label="  %29 = sub i32 %28, %17"];
	Node0xa73830[shape=record, label="  %30 = add i32 %29, %18"];
	Node0xa738a0[shape=record, label="  %31 = sub i32 %30, %14"];
	Node0xa73910[shape=record, label="  %32 = sub i32 %31, %19"];
	Node0xa73b90[shape=record, label="  %33 = icmp eq i32 %10, %32"];
	Node0xa119d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa73c20[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xa73e78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa73fd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xa74098[shape=record, label="  ret i32 0"];
	Node0xa70e38 -> Node0xa70eb8;
	Node0xa70eb8 -> Node0xa70f48;
	Node0xa70f48 -> Node0xa713a8;
	Node0xa713a8 -> Node0xa71488;
	Node0xa71488 -> Node0xa715a8;
	Node0xa715a8 -> Node0xa717e0;
	Node0xa717e0 -> Node0xa71898;
	Node0xa71898 -> Node0xa72808;
	Node0xa72808 -> Node0xa72e90;
	Node0xa72e90 -> Node0xa72f00;
	Node0xa72f00 -> Node0xa72f70;
	Node0xa72f70 -> Node0xa72fe0;
	Node0xa72fe0 -> Node0xa73050;
	Node0xa73050 -> Node0xa730c0;
	Node0xa730c0 -> Node0xa73130;
	Node0xa73130 -> Node0xa731a0;
	Node0xa731a0 -> Node0xa73210;
	Node0xa73210 -> Node0xa73280;
	Node0xa73280 -> Node0xa732f0;
	Node0xa732f0 -> Node0xa73360;
	Node0xa73360 -> Node0xa733d0;
	Node0xa733d0 -> Node0xa73440;
	Node0xa73440 -> Node0xa734b0;
	Node0xa734b0 -> Node0xa73520;
	Node0xa73520 -> Node0xa73590;
	Node0xa73590 -> Node0xa73600;
	Node0xa73600 -> Node0xa73670;
	Node0xa73670 -> Node0xa736e0;
	Node0xa736e0 -> Node0xa73750;
	Node0xa73750 -> Node0xa737c0;
	Node0xa737c0 -> Node0xa73830;
	Node0xa73830 -> Node0xa738a0;
	Node0xa738a0 -> Node0xa73910;
	Node0xa73910 -> Node0xa73b90;
	Node0xa73b90 -> Node0xa119d8;
	Node0xa119d8 -> Node0xa73c20;
	Node0xa73c20 -> Node0xa73e78;
	Node0xa73e78 -> Node0xa73fd8;
	Node0xa73fd8 -> Node0xa74098;
edge [color=red]
	Node0xa70e38 -> Node0xa70f48;
	Node0xa70f48 -> Node0xa713a8;
	Node0xa70eb8 -> Node0xa71488;
	Node0xa71488 -> Node0xa715a8;
	Node0xa70e38 -> Node0xa717e0;
	Node0xa70eb8 -> Node0xa717e0;
	Node0xa70e38 -> Node0xa71898;
	Node0xa70eb8 -> Node0xa72808;
	Node0xa72808 -> Node0xa72e90;
	Node0xa71898 -> Node0xa72f00;
	Node0xa72e90 -> Node0xa72f00;
	Node0xa72f00 -> Node0xa72f70;
	Node0xa72808 -> Node0xa72fe0;
	Node0xa71898 -> Node0xa72fe0;
	Node0xa72fe0 -> Node0xa73050;
	Node0xa71898 -> Node0xa730c0;
	Node0xa72e90 -> Node0xa730c0;
	Node0xa730c0 -> Node0xa73130;
	Node0xa72808 -> Node0xa731a0;
	Node0xa71898 -> Node0xa731a0;
	Node0xa72808 -> Node0xa73210;
	Node0xa71898 -> Node0xa73210;
	Node0xa72e90 -> Node0xa73280;
	Node0xa73210 -> Node0xa732f0;
	Node0xa73130 -> Node0xa73360;
	Node0xa71898 -> Node0xa733d0;
	Node0xa733d0 -> Node0xa73440;
	Node0xa71898 -> Node0xa734b0;
	Node0xa72808 -> Node0xa73520;
	Node0xa73520 -> Node0xa73590;
	Node0xa734b0 -> Node0xa73590;
	Node0xa73590 -> Node0xa73600;
	Node0xa73440 -> Node0xa73600;
	Node0xa73600 -> Node0xa73670;
	Node0xa73050 -> Node0xa73670;
	Node0xa73670 -> Node0xa736e0;
	Node0xa731a0 -> Node0xa736e0;
	Node0xa736e0 -> Node0xa73750;
	Node0xa73210 -> Node0xa73750;
	Node0xa73750 -> Node0xa737c0;
	Node0xa73280 -> Node0xa737c0;
	Node0xa737c0 -> Node0xa73830;
	Node0xa732f0 -> Node0xa73830;
	Node0xa73830 -> Node0xa738a0;
	Node0xa73130 -> Node0xa738a0;
	Node0xa738a0 -> Node0xa73910;
	Node0xa73360 -> Node0xa73910;
	Node0xa72f70 -> Node0xa73b90;
	Node0xa73910 -> Node0xa73b90;
	Node0xa73b90 -> Node0xa119d8;
	Node0xa119d8 -> Node0xa73c20;
	Node0xa71488 -> Node0xa73e78;
	Node0xa70f48 -> Node0xa73fd8;
}
