digraph "DFG for'main' function" {
	Node0xb80688[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb80708[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb80798[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb807f8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xb808a8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xb80cd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb80db8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xb80eb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb80f78[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xb81028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb810e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xb81198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb7b9c0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xb81398[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb82308[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb82978[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb829d8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xb82a50[shape=record, label="  %14 = mul i32 %12, -2"];
	Node0xb82ac0[shape=record, label="  %15 = add i32 %12, 1"];
	Node0xb82b30[shape=record, label="  %16 = add i32 %15, %14"];
	Node0xb82ba0[shape=record, label="  %17 = or i32 %13, %10"];
	Node0xb82c10[shape=record, label="  %18 = add i32 %16, %17"];
	Node0xb82c80[shape=record, label="  %19 = xor i32 %10, -1"];
	Node0xb82cf0[shape=record, label="  %20 = or i32 %13, %19"];
	Node0xb82d60[shape=record, label="  %21 = add i32 %18, %20"];
	Node0xb82dd0[shape=record, label="  %22 = xor i32 %11, -1"];
	Node0xb82e40[shape=record, label="  %23 = or i32 %12, %22"];
	Node0xb82eb0[shape=record, label="  %24 = or i32 %12, %11"];
	Node0xb82f20[shape=record, label="  %25 = and i32 %13, %19"];
	Node0xb82f90[shape=record, label="  %26 = xor i32 %13, %10"];
	Node0xb83000[shape=record, label="  %27 = mul i32 %26, -3"];
	Node0xb83070[shape=record, label="  %28 = and i32 %13, %10"];
	Node0xb830e0[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0xb83150[shape=record, label="  %30 = shl i32 %20, 1"];
	Node0xb831c0[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0xb83230[shape=record, label="  %32 = shl i32 %28, 1"];
	Node0xb832a0[shape=record, label="  %33 = add i32 %13, %10"];
	Node0xb83310[shape=record, label="  %34 = add i32 %33, %25"];
	Node0xb83380[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0xb833f0[shape=record, label="  %36 = add i32 %23, %10"];
	Node0xb83460[shape=record, label="  %37 = add i32 %36, %24"];
	Node0xb834d0[shape=record, label="  %38 = sub i32 %29, %37"];
	Node0xb83540[shape=record, label="  %39 = sub i32 %38, %26"];
	Node0xb835b0[shape=record, label="  %40 = add i32 %39, %17"];
	Node0xb83620[shape=record, label="  %41 = add i32 %40, %27"];
	Node0xb83690[shape=record, label="  %42 = sub i32 %41, %32"];
	Node0xb83700[shape=record, label="  %43 = add i32 %42, %31"];
	Node0xb83770[shape=record, label="  %44 = add i32 %43, %35"];
	Node0xb837e0[shape=record, label="  %45 = icmp eq i32 %21, %44"];
	Node0xb208b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb83870[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0xb83b18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb83c78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb83d88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb83e98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb83f58[shape=record, label="  ret i32 0"];
	Node0xb80688 -> Node0xb80708;
	Node0xb80708 -> Node0xb80798;
	Node0xb80798 -> Node0xb807f8;
	Node0xb807f8 -> Node0xb808a8;
	Node0xb808a8 -> Node0xb80cd8;
	Node0xb80cd8 -> Node0xb80db8;
	Node0xb80db8 -> Node0xb80eb8;
	Node0xb80eb8 -> Node0xb80f78;
	Node0xb80f78 -> Node0xb81028;
	Node0xb81028 -> Node0xb810e8;
	Node0xb810e8 -> Node0xb81198;
	Node0xb81198 -> Node0xb7b9c0;
	Node0xb7b9c0 -> Node0xb81398;
	Node0xb81398 -> Node0xb82308;
	Node0xb82308 -> Node0xb82978;
	Node0xb82978 -> Node0xb829d8;
	Node0xb829d8 -> Node0xb82a50;
	Node0xb82a50 -> Node0xb82ac0;
	Node0xb82ac0 -> Node0xb82b30;
	Node0xb82b30 -> Node0xb82ba0;
	Node0xb82ba0 -> Node0xb82c10;
	Node0xb82c10 -> Node0xb82c80;
	Node0xb82c80 -> Node0xb82cf0;
	Node0xb82cf0 -> Node0xb82d60;
	Node0xb82d60 -> Node0xb82dd0;
	Node0xb82dd0 -> Node0xb82e40;
	Node0xb82e40 -> Node0xb82eb0;
	Node0xb82eb0 -> Node0xb82f20;
	Node0xb82f20 -> Node0xb82f90;
	Node0xb82f90 -> Node0xb83000;
	Node0xb83000 -> Node0xb83070;
	Node0xb83070 -> Node0xb830e0;
	Node0xb830e0 -> Node0xb83150;
	Node0xb83150 -> Node0xb831c0;
	Node0xb831c0 -> Node0xb83230;
	Node0xb83230 -> Node0xb832a0;
	Node0xb832a0 -> Node0xb83310;
	Node0xb83310 -> Node0xb83380;
	Node0xb83380 -> Node0xb833f0;
	Node0xb833f0 -> Node0xb83460;
	Node0xb83460 -> Node0xb834d0;
	Node0xb834d0 -> Node0xb83540;
	Node0xb83540 -> Node0xb835b0;
	Node0xb835b0 -> Node0xb83620;
	Node0xb83620 -> Node0xb83690;
	Node0xb83690 -> Node0xb83700;
	Node0xb83700 -> Node0xb83770;
	Node0xb83770 -> Node0xb837e0;
	Node0xb837e0 -> Node0xb208b8;
	Node0xb208b8 -> Node0xb83870;
	Node0xb83870 -> Node0xb83b18;
	Node0xb83b18 -> Node0xb83c78;
	Node0xb83c78 -> Node0xb83d88;
	Node0xb83d88 -> Node0xb83e98;
	Node0xb83e98 -> Node0xb83f58;
edge [color=red]
	Node0xb80688 -> Node0xb808a8;
	Node0xb808a8 -> Node0xb80cd8;
	Node0xb80708 -> Node0xb80db8;
	Node0xb80db8 -> Node0xb80eb8;
	Node0xb80798 -> Node0xb80f78;
	Node0xb80f78 -> Node0xb81028;
	Node0xb807f8 -> Node0xb810e8;
	Node0xb810e8 -> Node0xb81198;
	Node0xb80688 -> Node0xb7b9c0;
	Node0xb80708 -> Node0xb7b9c0;
	Node0xb80798 -> Node0xb7b9c0;
	Node0xb807f8 -> Node0xb7b9c0;
	Node0xb80688 -> Node0xb81398;
	Node0xb80708 -> Node0xb82308;
	Node0xb80798 -> Node0xb82978;
	Node0xb807f8 -> Node0xb829d8;
	Node0xb82978 -> Node0xb82a50;
	Node0xb82978 -> Node0xb82ac0;
	Node0xb82ac0 -> Node0xb82b30;
	Node0xb82a50 -> Node0xb82b30;
	Node0xb829d8 -> Node0xb82ba0;
	Node0xb81398 -> Node0xb82ba0;
	Node0xb82b30 -> Node0xb82c10;
	Node0xb82ba0 -> Node0xb82c10;
	Node0xb81398 -> Node0xb82c80;
	Node0xb829d8 -> Node0xb82cf0;
	Node0xb82c80 -> Node0xb82cf0;
	Node0xb82c10 -> Node0xb82d60;
	Node0xb82cf0 -> Node0xb82d60;
	Node0xb82308 -> Node0xb82dd0;
	Node0xb82978 -> Node0xb82e40;
	Node0xb82dd0 -> Node0xb82e40;
	Node0xb82978 -> Node0xb82eb0;
	Node0xb82308 -> Node0xb82eb0;
	Node0xb829d8 -> Node0xb82f20;
	Node0xb82c80 -> Node0xb82f20;
	Node0xb829d8 -> Node0xb82f90;
	Node0xb81398 -> Node0xb82f90;
	Node0xb82f90 -> Node0xb83000;
	Node0xb829d8 -> Node0xb83070;
	Node0xb81398 -> Node0xb83070;
	Node0xb83070 -> Node0xb830e0;
	Node0xb82cf0 -> Node0xb83150;
	Node0xb83150 -> Node0xb831c0;
	Node0xb83070 -> Node0xb83230;
	Node0xb829d8 -> Node0xb832a0;
	Node0xb81398 -> Node0xb832a0;
	Node0xb832a0 -> Node0xb83310;
	Node0xb82f20 -> Node0xb83310;
	Node0xb83310 -> Node0xb83380;
	Node0xb82e40 -> Node0xb833f0;
	Node0xb81398 -> Node0xb833f0;
	Node0xb833f0 -> Node0xb83460;
	Node0xb82eb0 -> Node0xb83460;
	Node0xb830e0 -> Node0xb834d0;
	Node0xb83460 -> Node0xb834d0;
	Node0xb834d0 -> Node0xb83540;
	Node0xb82f90 -> Node0xb83540;
	Node0xb83540 -> Node0xb835b0;
	Node0xb82ba0 -> Node0xb835b0;
	Node0xb835b0 -> Node0xb83620;
	Node0xb83000 -> Node0xb83620;
	Node0xb83620 -> Node0xb83690;
	Node0xb83230 -> Node0xb83690;
	Node0xb83690 -> Node0xb83700;
	Node0xb831c0 -> Node0xb83700;
	Node0xb83700 -> Node0xb83770;
	Node0xb83380 -> Node0xb83770;
	Node0xb82d60 -> Node0xb837e0;
	Node0xb83770 -> Node0xb837e0;
	Node0xb837e0 -> Node0xb208b8;
	Node0xb208b8 -> Node0xb83870;
	Node0xb810e8 -> Node0xb83b18;
	Node0xb80f78 -> Node0xb83c78;
	Node0xb80db8 -> Node0xb83d88;
	Node0xb808a8 -> Node0xb83e98;
}
