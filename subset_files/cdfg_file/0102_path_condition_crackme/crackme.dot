digraph "DFG for'crackme' function" {
	Node0xb7efa0[shape=record, label="  %5 = mul i32 %2, -2"];
	Node0xb7f040[shape=record, label="  %6 = add i32 %2, 1"];
	Node0xb7f0b0[shape=record, label="  %7 = add i32 %5, %6"];
	Node0xb7f120[shape=record, label="  %8 = or i32 %3, %0"];
	Node0xb7f190[shape=record, label="  %9 = add i32 %7, %8"];
	Node0xb7f230[shape=record, label="  %10 = xor i32 %0, -1"];
	Node0xb7f2a0[shape=record, label="  %11 = or i32 %10, %3"];
	Node0xb7f310[shape=record, label="  %12 = add i32 %9, %11"];
	Node0xb7f380[shape=record, label="  %13 = xor i32 %1, -1"];
	Node0xb7f3f0[shape=record, label="  %14 = or i32 %13, %2"];
	Node0xb7f460[shape=record, label="  %15 = or i32 %2, %1"];
	Node0xb7f4d0[shape=record, label="  %16 = and i32 %10, %3"];
	Node0xb7f540[shape=record, label="  %17 = xor i32 %3, %0"];
	Node0xb7f5e0[shape=record, label="  %18 = mul i32 %17, -3"];
	Node0xb7f650[shape=record, label="  %19 = and i32 %3, %0"];
	Node0xb7f6c0[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0xb7f730[shape=record, label="  %21 = shl i32 %11, 1"];
	Node0xb7f7a0[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0xb7f810[shape=record, label="  %23 = shl i32 %19, 1"];
	Node0xb7f880[shape=record, label="  %24 = add i32 %3, %0"];
	Node0xb7f8f0[shape=record, label="  %25 = add i32 %24, %16"];
	Node0xb7f960[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0xb7f9d0[shape=record, label="  %27 = add i32 %14, %0"];
	Node0xb7fa40[shape=record, label="  %28 = add i32 %27, %15"];
	Node0xb7fab0[shape=record, label="  %29 = sub i32 %20, %28"];
	Node0xb7fb20[shape=record, label="  %30 = sub i32 %29, %17"];
	Node0xb7fb90[shape=record, label="  %31 = add i32 %30, %8"];
	Node0xb7fc00[shape=record, label="  %32 = add i32 %31, %18"];
	Node0xb7fe80[shape=record, label="  %33 = sub i32 %32, %23"];
	Node0xb7fef0[shape=record, label="  %34 = add i32 %33, %22"];
	Node0xb7ff60[shape=record, label="  %35 = add i32 %34, %26"];
	Node0xb7ffd0[shape=record, label="  %36 = icmp eq i32 %12, %35"];
	Node0xb1f268[shape=record, label="  %37 = select i1 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb80470[shape=record, label="  %38 = tail call i32 @puts(i8* nonnull dereferenceable(1) %37)"];
	Node0xb804c0[shape=record, label="  ret void"];
	Node0xb7efa0 -> Node0xb7f040;
	Node0xb7f040 -> Node0xb7f0b0;
	Node0xb7f0b0 -> Node0xb7f120;
	Node0xb7f120 -> Node0xb7f190;
	Node0xb7f190 -> Node0xb7f230;
	Node0xb7f230 -> Node0xb7f2a0;
	Node0xb7f2a0 -> Node0xb7f310;
	Node0xb7f310 -> Node0xb7f380;
	Node0xb7f380 -> Node0xb7f3f0;
	Node0xb7f3f0 -> Node0xb7f460;
	Node0xb7f460 -> Node0xb7f4d0;
	Node0xb7f4d0 -> Node0xb7f540;
	Node0xb7f540 -> Node0xb7f5e0;
	Node0xb7f5e0 -> Node0xb7f650;
	Node0xb7f650 -> Node0xb7f6c0;
	Node0xb7f6c0 -> Node0xb7f730;
	Node0xb7f730 -> Node0xb7f7a0;
	Node0xb7f7a0 -> Node0xb7f810;
	Node0xb7f810 -> Node0xb7f880;
	Node0xb7f880 -> Node0xb7f8f0;
	Node0xb7f8f0 -> Node0xb7f960;
	Node0xb7f960 -> Node0xb7f9d0;
	Node0xb7f9d0 -> Node0xb7fa40;
	Node0xb7fa40 -> Node0xb7fab0;
	Node0xb7fab0 -> Node0xb7fb20;
	Node0xb7fb20 -> Node0xb7fb90;
	Node0xb7fb90 -> Node0xb7fc00;
	Node0xb7fc00 -> Node0xb7fe80;
	Node0xb7fe80 -> Node0xb7fef0;
	Node0xb7fef0 -> Node0xb7ff60;
	Node0xb7ff60 -> Node0xb7ffd0;
	Node0xb7ffd0 -> Node0xb1f268;
	Node0xb1f268 -> Node0xb80470;
	Node0xb80470 -> Node0xb804c0;
edge [color=red]
	Node0xb7efa0 -> Node0xb7f0b0;
	Node0xb7f040 -> Node0xb7f0b0;
	Node0xb7f0b0 -> Node0xb7f190;
	Node0xb7f120 -> Node0xb7f190;
	Node0xb7f230 -> Node0xb7f2a0;
	Node0xb7f190 -> Node0xb7f310;
	Node0xb7f2a0 -> Node0xb7f310;
	Node0xb7f380 -> Node0xb7f3f0;
	Node0xb7f230 -> Node0xb7f4d0;
	Node0xb7f540 -> Node0xb7f5e0;
	Node0xb7f650 -> Node0xb7f6c0;
	Node0xb7f2a0 -> Node0xb7f730;
	Node0xb7f730 -> Node0xb7f7a0;
	Node0xb7f650 -> Node0xb7f810;
	Node0xb7f880 -> Node0xb7f8f0;
	Node0xb7f4d0 -> Node0xb7f8f0;
	Node0xb7f8f0 -> Node0xb7f960;
	Node0xb7f3f0 -> Node0xb7f9d0;
	Node0xb7f9d0 -> Node0xb7fa40;
	Node0xb7f460 -> Node0xb7fa40;
	Node0xb7f6c0 -> Node0xb7fab0;
	Node0xb7fa40 -> Node0xb7fab0;
	Node0xb7fab0 -> Node0xb7fb20;
	Node0xb7f540 -> Node0xb7fb20;
	Node0xb7fb20 -> Node0xb7fb90;
	Node0xb7f120 -> Node0xb7fb90;
	Node0xb7fb90 -> Node0xb7fc00;
	Node0xb7f5e0 -> Node0xb7fc00;
	Node0xb7fc00 -> Node0xb7fe80;
	Node0xb7f810 -> Node0xb7fe80;
	Node0xb7fe80 -> Node0xb7fef0;
	Node0xb7f7a0 -> Node0xb7fef0;
	Node0xb7fef0 -> Node0xb7ff60;
	Node0xb7f960 -> Node0xb7ff60;
	Node0xb7f310 -> Node0xb7ffd0;
	Node0xb7ff60 -> Node0xb7ffd0;
	Node0xb7ffd0 -> Node0xb1f268;
	Node0xb1f268 -> Node0xb80470;
}
