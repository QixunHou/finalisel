digraph "DFG for'main' function" {
	Node0x85f1b8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x85f238[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x85f2c8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x85f728[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x85f808[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x85f928[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x85fb60[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x85fc18[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x860b88[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x861210[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x861280[shape=record, label="  %9 = and i32 %7, %6"];
	Node0x8612f0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x861360[shape=record, label="  %11 = add i32 %10, %8"];
	Node0x8613d0[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0x861440[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x8614b0[shape=record, label="  %14 = or i32 %6, %13"];
	Node0x861520[shape=record, label="  %15 = shl i32 %12, 1"];
	Node0x861590[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x861600[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x861670[shape=record, label="  %18 = shl i32 %14, 2"];
	Node0x8616e0[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0x861750[shape=record, label="  %20 = and i32 %6, %13"];
	Node0x8617c0[shape=record, label="  %21 = mul i32 %20, -3"];
	Node0x861830[shape=record, label="  %22 = shl i32 %9, 1"];
	Node0x8618a0[shape=record, label="  %23 = add i32 %6, %13"];
	Node0x861910[shape=record, label="  %24 = add i32 %23, %16"];
	Node0x861980[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x8619f0[shape=record, label="  %26 = sub i32 2, %7"];
	Node0x861a60[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x861ad0[shape=record, label="  %28 = add i32 %27, %14"];
	Node0x861b40[shape=record, label="  %29 = add i32 %28, %17"];
	Node0x861bb0[shape=record, label="  %30 = sub i32 %29, %15"];
	Node0x861c20[shape=record, label="  %31 = add i32 %30, %21"];
	Node0x861c90[shape=record, label="  %32 = sub i32 %31, %22"];
	Node0x861d00[shape=record, label="  %33 = add i32 %32, %19"];
	Node0x861d70[shape=record, label="  %34 = add i32 %33, %25"];
	Node0x861de0[shape=record, label="  %35 = icmp eq i32 %11, %34"];
	Node0x7ff9d8[shape=record, label="  %36 = select i1 %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x861e70[shape=record, label="  %37 = call i32 @puts(i8* nonnull dereferenceable(1) %36) #5"];
	Node0x8620c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x862228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x8622e8[shape=record, label="  ret i32 0"];
	Node0x85f1b8 -> Node0x85f238;
	Node0x85f238 -> Node0x85f2c8;
	Node0x85f2c8 -> Node0x85f728;
	Node0x85f728 -> Node0x85f808;
	Node0x85f808 -> Node0x85f928;
	Node0x85f928 -> Node0x85fb60;
	Node0x85fb60 -> Node0x85fc18;
	Node0x85fc18 -> Node0x860b88;
	Node0x860b88 -> Node0x861210;
	Node0x861210 -> Node0x861280;
	Node0x861280 -> Node0x8612f0;
	Node0x8612f0 -> Node0x861360;
	Node0x861360 -> Node0x8613d0;
	Node0x8613d0 -> Node0x861440;
	Node0x861440 -> Node0x8614b0;
	Node0x8614b0 -> Node0x861520;
	Node0x861520 -> Node0x861590;
	Node0x861590 -> Node0x861600;
	Node0x861600 -> Node0x861670;
	Node0x861670 -> Node0x8616e0;
	Node0x8616e0 -> Node0x861750;
	Node0x861750 -> Node0x8617c0;
	Node0x8617c0 -> Node0x861830;
	Node0x861830 -> Node0x8618a0;
	Node0x8618a0 -> Node0x861910;
	Node0x861910 -> Node0x861980;
	Node0x861980 -> Node0x8619f0;
	Node0x8619f0 -> Node0x861a60;
	Node0x861a60 -> Node0x861ad0;
	Node0x861ad0 -> Node0x861b40;
	Node0x861b40 -> Node0x861bb0;
	Node0x861bb0 -> Node0x861c20;
	Node0x861c20 -> Node0x861c90;
	Node0x861c90 -> Node0x861d00;
	Node0x861d00 -> Node0x861d70;
	Node0x861d70 -> Node0x861de0;
	Node0x861de0 -> Node0x7ff9d8;
	Node0x7ff9d8 -> Node0x861e70;
	Node0x861e70 -> Node0x8620c8;
	Node0x8620c8 -> Node0x862228;
	Node0x862228 -> Node0x8622e8;
edge [color=red]
	Node0x85f1b8 -> Node0x85f2c8;
	Node0x85f2c8 -> Node0x85f728;
	Node0x85f238 -> Node0x85f808;
	Node0x85f808 -> Node0x85f928;
	Node0x85f1b8 -> Node0x85fb60;
	Node0x85f238 -> Node0x85fb60;
	Node0x85f1b8 -> Node0x85fc18;
	Node0x85f238 -> Node0x860b88;
	Node0x85fc18 -> Node0x861210;
	Node0x860b88 -> Node0x861280;
	Node0x85fc18 -> Node0x861280;
	Node0x861280 -> Node0x8612f0;
	Node0x8612f0 -> Node0x861360;
	Node0x861210 -> Node0x861360;
	Node0x860b88 -> Node0x8613d0;
	Node0x85fc18 -> Node0x8613d0;
	Node0x860b88 -> Node0x861440;
	Node0x85fc18 -> Node0x8614b0;
	Node0x861440 -> Node0x8614b0;
	Node0x8613d0 -> Node0x861520;
	Node0x860b88 -> Node0x861590;
	Node0x85fc18 -> Node0x861590;
	Node0x861590 -> Node0x861600;
	Node0x8614b0 -> Node0x861670;
	Node0x861670 -> Node0x8616e0;
	Node0x85fc18 -> Node0x861750;
	Node0x861440 -> Node0x861750;
	Node0x861750 -> Node0x8617c0;
	Node0x861280 -> Node0x861830;
	Node0x85fc18 -> Node0x8618a0;
	Node0x861440 -> Node0x8618a0;
	Node0x8618a0 -> Node0x861910;
	Node0x861590 -> Node0x861910;
	Node0x861910 -> Node0x861980;
	Node0x860b88 -> Node0x8619f0;
	Node0x8619f0 -> Node0x861a60;
	Node0x8613d0 -> Node0x861a60;
	Node0x861a60 -> Node0x861ad0;
	Node0x8614b0 -> Node0x861ad0;
	Node0x861ad0 -> Node0x861b40;
	Node0x861600 -> Node0x861b40;
	Node0x861b40 -> Node0x861bb0;
	Node0x861520 -> Node0x861bb0;
	Node0x861bb0 -> Node0x861c20;
	Node0x8617c0 -> Node0x861c20;
	Node0x861c20 -> Node0x861c90;
	Node0x861830 -> Node0x861c90;
	Node0x861c90 -> Node0x861d00;
	Node0x8616e0 -> Node0x861d00;
	Node0x861d00 -> Node0x861d70;
	Node0x861980 -> Node0x861d70;
	Node0x861360 -> Node0x861de0;
	Node0x861d70 -> Node0x861de0;
	Node0x861de0 -> Node0x7ff9d8;
	Node0x7ff9d8 -> Node0x861e70;
	Node0x85f808 -> Node0x8620c8;
	Node0x85f2c8 -> Node0x862228;
}
