; ModuleID = '../.././c_source_file/0163_path_condition_crackme.c'
source_filename = "../.././c_source_file/0163_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %2, %1
  %8 = xor i32 %7, -1
  %9 = mul i32 %8, -2
  %10 = xor i32 %4, -1
  %11 = xor i32 %5, %3
  %12 = or i32 %11, %10
  %13 = add i32 %12, %9
  %14 = and i32 %2, %0
  %15 = xor i32 %2, -1
  %16 = and i32 %15, %1
  %17 = xor i32 %16, -1
  %18 = xor i32 %14, %17
  %19 = and i32 %7, %0
  %20 = xor i32 %1, -1
  %21 = and i32 %20, %0
  %22 = or i32 %15, %1
  %23 = or i32 %22, %0
  %24 = or i32 %1, %0
  %25 = xor i32 %2, %0
  %26 = and i32 %25, %24
  %27 = and i32 %2, %1
  %28 = xor i32 %27, %0
  %29 = xor i32 %2, %1
  %30 = shl i32 %29, 1
  %31 = xor i32 %0, -1
  %32 = and i32 %20, %2
  %33 = and i32 %32, %31
  %34 = or i32 %29, %31
  %35 = xor i32 %34, -1
  %36 = or i32 %33, %35
  %37 = or i32 %21, %15
  %38 = and i32 %15, %0
  %39 = xor i32 %38, -1
  %40 = and i32 %39, %1
  %41 = and i32 %7, %31
  %42 = xor i32 %24, -1
  %43 = or i32 %25, %42
  %44 = xor i32 %24, %2
  %45 = shl i32 %44, 1
  %46 = or i32 %20, %0
  %47 = xor i32 %46, -1
  %48 = or i32 %15, %47
  %49 = xor i32 %21, -1
  %50 = and i32 %49, %2
  %51 = and i32 %25, %49
  %52 = or i32 %29, %21
  %53 = shl i32 %52, 1
  %54 = xor i32 %27, -1
  %55 = xor i32 %54, %0
  %56 = and i32 %22, %31
  %57 = and i32 %1, %0
  %58 = xor i32 %57, -1
  %59 = xor i32 %58, %2
  %60 = and i32 %24, %15
  %61 = and i32 %32, %0
  %62 = or i32 %20, %2
  %63 = and i32 %62, %31
  %64 = xor i32 %61, -1
  %65 = xor i32 %63, %64
  %66 = or i32 %15, %0
  %67 = xor i32 %1, %0
  %68 = xor i32 %14, -1
  %69 = xor i32 %67, -1
  %70 = and i32 %68, %69
  %71 = or i32 %67, %15
  %72 = xor i32 %25, -1
  %73 = or i32 %57, %72
  %74 = xor i32 %66, %57
  %75 = xor i32 %14, %46
  %76 = shl i32 %75, 1
  %77 = or i32 %2, %0
  %78 = xor i32 %77, %57
  %79 = and i32 %25, %67
  %80 = or i32 %72, %69
  %81 = or i32 %14, %67
  %82 = and i32 %72, %20
  %83 = or i32 %67, %2
  %84 = and i32 %24, %2
  %85 = xor i32 %39, %1
  %86 = or i32 %72, %47
  %87 = xor i32 %77, -1
  %88 = or i32 %87, %20
  %89 = or i32 %15, %42
  %90 = and i32 %27, %0
  %91 = xor i32 %7, %0
  %92 = xor i32 %90, -1
  %93 = xor i32 %91, %92
  %94 = or i32 %72, %1
  %95 = or i32 %72, %42
  %96 = xor i32 %29, -1
  %97 = add i32 %29, 1
  %98 = xor i32 %21, %17
  %99 = or i32 %38, %69
  %100 = or i32 %27, %0
  %101 = or i32 %61, %63
  %102 = xor i32 %22, -1
  %103 = or i32 %38, %102
  %104 = and i32 %66, %1
  %105 = xor i32 %62, %0
  %106 = xor i32 %105, %64
  %107 = xor i32 %49, %2
  %108 = and i32 %68, %20
  %109 = or i32 %21, %72
  %110 = or i32 %17, %31
  %111 = or i32 %38, %1
  %112 = xor i32 %14, %1
  %113 = or i32 %25, %47
  %114 = xor i32 %21, %54
  %115 = and i32 %66, %20
  %116 = add i32 %22, 1
  %117 = xor i32 %14, %24
  %118 = or i32 %96, %0
  %119 = xor i32 %33, %34
  %120 = xor i32 %47, %2
  %121 = or i32 %14, %47
  %122 = xor i32 %14, %7
  %123 = xor i32 %29, %0
  %124 = xor i32 %123, -1
  %125 = or i32 %90, %124
  %126 = shl i32 %125, 1
  %127 = or i32 %61, %123
  %128 = or i32 %38, %20
  %129 = and i32 %29, %31
  %130 = and i32 %15, %58
  %131 = shl i32 %130, 1
  %132 = and i32 %15, %49
  %133 = xor i32 %66, -1
  %134 = or i32 %133, %20
  %135 = or i32 %25, %21
  %136 = or i32 %29, %47
  %137 = xor i32 %16, %0
  %138 = and i32 %96, %49
  %139 = shl i32 %138, 1
  %140 = and i32 %67, %39
  %141 = or i32 %57, %8
  %142 = and i32 %46, %96
  %143 = or i32 %25, %69
  %144 = and i32 %22, %0
  %145 = or i32 %96, %47
  %146 = and i32 %25, %46
  %147 = or i32 %8, %31
  %148 = or i32 %16, %31
  %149 = or i32 %67, %133
  %150 = and i32 %54, %0
  %151 = or i32 %29, %0
  %152 = xor i32 %61, %151
  %153 = and i32 %96, %0
  %154 = xor i32 %129, 2147483647
  %155 = xor i32 %154, %90
  %156 = shl i32 %155, 1
  %157 = and i32 %67, %15
  %158 = shl i32 %157, 1
  %159 = and i32 %29, %46
  %160 = or i32 %42, %2
  %161 = or i32 %8, %0
  %162 = or i32 %57, %102
  %163 = or i32 %14, %16
  %164 = shl i32 %163, 1
  %165 = and i32 %46, %2
  %166 = or i32 %102, %0
  %167 = or i32 %7, %31
  %168 = or i32 %22, %31
  %169 = or i32 %7, %0
  %170 = or i32 %57, %96
  %171 = or i32 %25, %67
  %172 = xor i32 %68, %1
  %173 = or i32 %67, %72
  %174 = or i32 %25, %1
  %175 = and i32 %24, %72
  %176 = xor i32 %77, %1
  %177 = or i32 %67, %87
  %178 = and i32 %25, %58
  %179 = or i32 %102, %31
  %180 = or i32 %27, %31
  %181 = and i32 %66, %67
  %182 = xor i32 %42, %2
  %183 = shl i32 %182, 1
  %184 = xor i32 %57, %2
  %185 = xor i32 %22, %57
  %186 = xor i32 %22, %0
  %187 = and i32 %72, %49
  %188 = and i32 %72, %58
  %189 = and i32 %96, %58
  %190 = and i32 %62, %0
  %191 = or i32 %33, %190
  %192 = xor i32 %96, %0
  %193 = or i32 %54, %31
  %194 = or i32 %27, %21
  %195 = or i32 %16, %21
  %196 = xor i32 %87, %1
  %197 = and i32 %29, %0
  %198 = xor i32 %38, %22
  %199 = or i32 %57, %87
  %200 = xor i32 %17, %0
  %201 = xor i32 %151, -1
  %202 = or i32 %61, %201
  %203 = add i32 %46, 1
  %204 = and i32 %27, %31
  %205 = or i32 %204, %197
  %206 = xor i32 %38, %1
  %207 = xor i32 %90, %123
  %208 = or i32 %69, %2
  %209 = or i32 %61, %105
  %210 = shl i32 %20, 1
  %211 = or i32 %204, %19
  %212 = or i32 %14, %1
  %213 = or i32 %14, %42
  %214 = and i32 %77, %67
  %215 = or i32 %21, %96
  %216 = and i32 %25, %69
  %217 = shl i32 %216, 1
  %218 = xor i32 %197, -1
  %219 = xor i32 %204, %218
  %220 = or i32 %14, %8
  %221 = or i32 %72, %20
  %222 = and i32 %29, %58
  %223 = or i32 %17, %0
  %224 = shl i32 %54, 1
  %225 = or i32 %96, %31
  %226 = and i32 %17, %0
  %227 = and i32 %29, %49
  %228 = and i32 %77, %69
  %229 = xor i32 %38, %54
  %230 = and i32 %39, %20
  %231 = or i32 %96, %42
  %232 = xor i32 %46, %2
  %233 = and i32 %46, %15
  %234 = xor i32 %7, %57
  %235 = xor i32 %133, %1
  %236 = or i32 %16, %0
  %237 = or i32 %90, %129
  %238 = or i32 %25, %57
  %239 = or i32 %133, %69
  %240 = or i32 %87, %1
  %241 = xor i32 %8, %0
  %242 = and i32 %67, %2
  %243 = and i32 %24, %96
  %244 = or i32 %29, %42
  %245 = or i32 %21, %2
  %246 = xor i32 %21, %2
  %247 = and i32 %96, %31
  %248 = or i32 %38, %67
  %249 = and i32 %67, %68
  %250 = xor i32 %66, %1
  %251 = or i32 %133, %1
  %252 = and i32 %77, %1
  %253 = xor i32 %190, 2147483647
  %254 = xor i32 %253, %33
  %255 = shl i32 %254, 1
  %256 = xor i32 %102, %0
  %257 = or i32 %47, %2
  %258 = and i32 %66, %69
  %259 = and i32 %25, %1
  %260 = or i32 %90, %91
  %261 = xor i32 %41, %92
  %262 = and i32 %29, %24
  %263 = shl i32 %262, 1
  %264 = add i32 %38, 1
  %265 = and i32 %72, %69
  %266 = or i32 %54, %0
  %267 = and i32 %72, %1
  %268 = or i32 %57, %133
  %269 = or i32 %15, %69
  %270 = or i32 %25, %20
  %271 = shl i32 %270, 1
  %272 = and i32 %39, %69
  %273 = or i32 %57, %2
  %274 = and i32 %46, %72
  %275 = and i32 %17, %31
  %276 = and i32 %69, %2
  %277 = and i32 %67, %72
  %278 = and i32 %54, %31
  %279 = shl i32 %87, 1
  %280 = and i32 %58, %2
  %281 = add i32 %24, 1
  %282 = or i32 %14, %69
  %283 = or i32 %38, %27
  %284 = or i32 %29, %57
  %285 = or i32 %57, %15
  %286 = and i32 %77, %20
  %287 = shl i32 %286, 1
  %288 = and i32 %68, %1
  %289 = xor i32 %61, %124
  %290 = or i32 %14, %20
  %291 = and i32 %8, %31
  %292 = and i32 %16, %31
  %293 = shl i32 %292, 3
  %294 = and i32 %8, %0
  %295 = mul i32 %294, -23
  %296 = and i32 %16, %0
  %297 = mul i32 %296, -15
  %298 = and i32 %102, %31
  %299 = mul i32 %298, -18
  %300 = mul i32 %204, -37
  %301 = and i32 %102, %0
  %302 = mul i32 %90, -31
  %303 = xor i32 %3, -1
  %304 = and i32 %303, %4
  %305 = xor i32 %5, -1
  %306 = and i32 %305, %3
  %307 = or i32 %306, %304
  %308 = shl i32 %307, 1
  %309 = and i32 %5, %4
  %310 = or i32 %4, %3
  %311 = xor i32 %310, -1
  %312 = or i32 %309, %311
  %313 = xor i32 %11, -1
  %314 = and i32 %310, %313
  %315 = or i32 %5, %3
  %316 = or i32 %315, %4
  %317 = and i32 %4, %3
  %318 = xor i32 %315, %317
  %319 = and i32 %5, %3
  %320 = or i32 %319, %304
  %321 = or i32 %303, %4
  %322 = and i32 %11, %321
  %323 = xor i32 %309, -1
  %324 = xor i32 %4, %3
  %325 = xor i32 %324, -1
  %326 = and i32 %323, %325
  %327 = and i32 %303, %5
  %328 = and i32 %327, %4
  %329 = or i32 %303, %5
  %330 = xor i32 %329, %10
  %331 = xor i32 %330, %328
  %332 = xor i32 %319, -1
  %333 = add i32 %319, 1
  %334 = xor i32 %5, %4
  %335 = or i32 %334, %303
  %336 = or i32 %305, %4
  %337 = and i32 %336, %3
  %338 = and i32 %321, %5
  %339 = or i32 %5, %4
  %340 = xor i32 %339, -1
  %341 = add i32 %339, 1
  %342 = xor i32 %317, -1
  %343 = and i32 %334, %342
  %344 = xor i32 %321, -1
  %345 = shl i32 %344, 1
  %346 = and i32 %323, %303
  %347 = or i32 %317, %340
  %348 = shl i32 %309, 1
  %349 = or i32 %306, %4
  %350 = and i32 %334, %310
  %351 = add i32 %11, 1
  %352 = and i32 %313, %4
  %353 = and i32 %305, %4
  %354 = xor i32 %353, 2147483647
  %355 = and i32 %354, %303
  %356 = or i32 %327, %4
  %357 = or i32 %311, %5
  %358 = and i32 %313, %342
  %359 = xor i32 %328, %4
  %360 = xor i32 %359, 2147483647
  %361 = xor i32 %360, %11
  %362 = shl i32 %361, 1
  %363 = or i32 %11, %311
  %364 = xor i32 %323, %3
  %365 = xor i32 %315, %4
  %366 = xor i32 %334, -1
  %367 = and i32 %366, %303
  %368 = xor i32 %304, -1
  %369 = xor i32 %306, %368
  %370 = and i32 %315, %10
  %371 = or i32 %353, %319
  %372 = xor i32 %339, %3
  %373 = and i32 %327, %10
  %374 = and i32 %329, %4
  %375 = xor i32 %374, -1
  %376 = xor i32 %373, %375
  %377 = xor i32 %353, %3
  %378 = xor i32 %315, -1
  %379 = or i32 %317, %378
  %380 = xor i32 %313, %4
  %381 = shl i32 %380, 2
  %382 = or i32 %334, %317
  %383 = shl i32 %382, 1
  %384 = or i32 %353, %3
  %385 = or i32 %378, %10
  %386 = or i32 %11, %304
  %387 = or i32 %309, %378
  %388 = and i32 %315, %4
  %389 = or i32 %324, %340
  %390 = and i32 %313, %10
  %391 = or i32 %325, %5
  %392 = and i32 %319, %10
  %393 = and i32 %11, %4
  %394 = or i32 %392, %393
  %395 = xor i32 %336, %317
  %396 = or i32 %366, %344
  %397 = xor i32 %336, %3
  %398 = and i32 %324, %323
  %399 = xor i32 %12, -1
  %400 = or i32 %373, %399
  %401 = and i32 %305, %342
  %402 = xor i32 %309, %315
  %403 = xor i32 %311, %5
  %404 = or i32 %332, %10
  %405 = add i32 %334, 1
  %406 = or i32 %313, %344
  %407 = and i32 %334, %321
  %408 = xor i32 %373, %12
  %409 = or i32 %317, %5
  %410 = or i32 %317, %366
  %411 = or i32 %11, %344
  %412 = and i32 %313, %368
  %413 = and i32 %319, %4
  %414 = xor i32 %365, -1
  %415 = xor i32 %413, %414
  %416 = or i32 %319, %4
  %417 = or i32 %373, %374
  %418 = or i32 %309, %303
  %419 = and i32 %378, %10
  %420 = and i32 %306, %10
  %421 = and i32 %378, %4
  %422 = and i32 %306, %4
  %423 = mul i32 %422, 10
  %424 = mul i32 %373, 6
  %425 = mul i32 %328, 14
  %426 = mul i32 %413, 12
  %427 = add i32 %245, %72
  %428 = add i32 %427, %38
  %429 = add i32 %428, %71
  %430 = add i32 %429, %37
  %431 = add i32 %430, %259
  %432 = add i32 %431, %258
  %433 = add i32 %432, %250
  %434 = add i32 %433, %248
  %435 = add i32 %434, %244
  %436 = add i32 %435, %243
  %437 = add i32 %436, %225
  %438 = add i32 %437, %206
  %439 = add i32 %438, %172
  %440 = add i32 %439, %149
  %441 = add i32 %440, %128
  %442 = add i32 %441, %117
  %443 = add i32 %442, %113
  %444 = add i32 %443, %110
  %445 = add i32 %444, %100
  %446 = add i32 %445, %55
  %447 = add i32 %446, %342
  %448 = add i32 %447, %321
  %449 = add i32 %448, %211
  %450 = add i32 %449, %207
  %451 = add i32 %450, %205
  %452 = add i32 %451, %401
  %453 = add i32 %452, %421
  %454 = add i32 %453, %407
  %455 = add i32 %454, %406
  %456 = add i32 %455, %396
  %457 = add i32 %456, %390
  %458 = add i32 %457, %377
  %459 = add i32 %458, %350
  %460 = add i32 %459, %335
  %461 = add i32 %460, %355
  %462 = add i32 %461, %394
  %463 = shl i32 %462, 1
  %464 = sub i32 %301, %291
  %465 = add i32 %464, %240
  %466 = sub i32 %465, %187
  %467 = sub i32 %466, %161
  %468 = add i32 %467, %94
  %469 = sub i32 %468, %86
  %470 = add i32 %469, %18
  %471 = mul i32 %470, 5
  %472 = add i32 %199, %280
  %473 = add i32 %472, %142
  %474 = add i32 %473, %104
  %475 = add i32 %474, %371
  %476 = sub i32 %475, %386
  %477 = sub i32 %476, %314
  %478 = mul i32 %477, 3
  %479 = add i32 %392, %420
  %480 = mul i32 %479, 7
  %481 = shl i32 %251, 2
  %482 = add i32 %481, -4
  %483 = add i32 %1, 1
  %484 = sub i32 %483, %21
  %485 = add i32 %484, %46
  %486 = sub i32 %485, %67
  %487 = add i32 %486, %69
  %488 = add i32 %487, %24
  %489 = add i32 %488, %49
  %490 = add i32 %489, %203
  %491 = sub i32 %490, %210
  %492 = add i32 %491, %281
  %493 = add i32 %492, %48
  %494 = sub i32 %493, %50
  %495 = sub i32 %494, %59
  %496 = sub i32 %495, %60
  %497 = sub i32 %496, %66
  %498 = add i32 %497, %83
  %499 = sub i32 %498, %84
  %500 = sub i32 %499, %77
  %501 = sub i32 %500, %16
  %502 = add i32 %501, %89
  %503 = add i32 %502, %17
  %504 = add i32 %503, %97
  %505 = sub i32 %504, %107
  %506 = add i32 %505, %116
  %507 = add i32 %506, %120
  %508 = sub i32 %507, %132
  %509 = add i32 %508, %25
  %510 = sub i32 %509, %160
  %511 = add i32 %510, %165
  %512 = add i32 %511, %7
  %513 = sub i32 %512, %184
  %514 = sub i32 %513, %27
  %515 = add i32 %514, %208
  %516 = add i32 %515, %232
  %517 = sub i32 %516, %233
  %518 = sub i32 %517, %242
  %519 = add i32 %518, %246
  %520 = sub i32 %519, %22
  %521 = sub i32 %520, %257
  %522 = add i32 %521, %264
  %523 = add i32 %522, %269
  %524 = add i32 %523, %273
  %525 = add i32 %524, %276
  %526 = sub i32 %525, %285
  %527 = sub i32 %526, %3
  %528 = add i32 %527, %19
  %529 = sub i32 %528, %23
  %530 = sub i32 %529, %26
  %531 = sub i32 %530, %28
  %532 = sub i32 %531, %30
  %533 = add i32 %532, %40
  %534 = sub i32 %533, %41
  %535 = sub i32 %534, %43
  %536 = sub i32 %535, %45
  %537 = sub i32 %536, %51
  %538 = sub i32 %537, %56
  %539 = add i32 %538, %70
  %540 = sub i32 %539, %34
  %541 = sub i32 %540, %73
  %542 = sub i32 %541, %74
  %543 = add i32 %542, %78
  %544 = add i32 %543, %79
  %545 = sub i32 %544, %80
  %546 = add i32 %545, %81
  %547 = sub i32 %546, %82
  %548 = sub i32 %547, %85
  %549 = add i32 %548, %88
  %550 = sub i32 %549, %95
  %551 = add i32 %550, %98
  %552 = add i32 %551, %99
  %553 = add i32 %552, %103
  %554 = add i32 %553, %108
  %555 = add i32 %554, %109
  %556 = add i32 %555, %111
  %557 = add i32 %556, %112
  %558 = sub i32 %557, %114
  %559 = sub i32 %558, %115
  %560 = sub i32 %559, %118
  %561 = add i32 %560, %121
  %562 = sub i32 %561, %122
  %563 = sub i32 %562, %129
  %564 = sub i32 %563, %131
  %565 = sub i32 %564, %134
  %566 = sub i32 %565, %135
  %567 = sub i32 %566, %136
  %568 = sub i32 %567, %137
  %569 = sub i32 %568, %140
  %570 = add i32 %569, %141
  %571 = sub i32 %570, %143
  %572 = add i32 %571, %91
  %573 = add i32 %572, %144
  %574 = add i32 %573, %145
  %575 = sub i32 %574, %146
  %576 = sub i32 %575, %147
  %577 = add i32 %576, %148
  %578 = add i32 %577, %150
  %579 = sub i32 %578, %153
  %580 = sub i32 %579, %158
  %581 = sub i32 %580, %159
  %582 = sub i32 %581, %162
  %583 = sub i32 %582, %166
  %584 = sub i32 %583, %167
  %585 = sub i32 %584, %168
  %586 = sub i32 %585, %169
  %587 = add i32 %586, %170
  %588 = add i32 %587, %171
  %589 = sub i32 %588, %173
  %590 = sub i32 %589, %174
  %591 = sub i32 %590, %175
  %592 = sub i32 %591, %176
  %593 = add i32 %592, %177
  %594 = add i32 %593, %178
  %595 = sub i32 %594, %179
  %596 = sub i32 %595, %180
  %597 = sub i32 %596, %181
  %598 = sub i32 %597, %183
  %599 = add i32 %598, %185
  %600 = sub i32 %599, %186
  %601 = add i32 %600, %188
  %602 = add i32 %601, %189
  %603 = sub i32 %602, %192
  %604 = sub i32 %603, %193
  %605 = add i32 %604, %194
  %606 = sub i32 %605, %195
  %607 = add i32 %606, %196
  %608 = add i32 %607, %197
  %609 = add i32 %608, %198
  %610 = add i32 %609, %200
  %611 = add i32 %610, %212
  %612 = add i32 %611, %213
  %613 = add i32 %612, %214
  %614 = sub i32 %613, %215
  %615 = add i32 %614, %220
  %616 = add i32 %615, %221
  %617 = add i32 %616, %222
  %618 = sub i32 %617, %223
  %619 = sub i32 %618, %224
  %620 = sub i32 %619, %151
  %621 = add i32 %620, %226
  %622 = add i32 %621, %227
  %623 = add i32 %622, %228
  %624 = sub i32 %623, %229
  %625 = sub i32 %624, %230
  %626 = add i32 %625, %231
  %627 = add i32 %626, %234
  %628 = add i32 %627, %235
  %629 = sub i32 %628, %236
  %630 = sub i32 %629, %238
  %631 = sub i32 %630, %239
  %632 = sub i32 %631, %123
  %633 = sub i32 %632, %241
  %634 = add i32 %633, %247
  %635 = add i32 %634, %249
  %636 = add i32 %635, %252
  %637 = add i32 %636, %256
  %638 = sub i32 %637, %265
  %639 = sub i32 %638, %266
  %640 = sub i32 %639, %267
  %641 = add i32 %640, %268
  %642 = add i32 %641, %272
  %643 = add i32 %642, %274
  %644 = sub i32 %643, %275
  %645 = add i32 %644, %277
  %646 = add i32 %645, %278
  %647 = sub i32 %646, %279
  %648 = sub i32 %647, %282
  %649 = sub i32 %648, %283
  %650 = add i32 %649, %284
  %651 = sub i32 %650, %288
  %652 = add i32 %651, %290
  %653 = add i32 %652, %36
  %654 = sub i32 %653, %53
  %655 = add i32 %654, %65
  %656 = sub i32 %655, %76
  %657 = add i32 %656, %93
  %658 = add i32 %657, %101
  %659 = sub i32 %658, %106
  %660 = add i32 %659, %119
  %661 = add i32 %660, %127
  %662 = sub i32 %661, %139
  %663 = sub i32 %662, %152
  %664 = sub i32 %663, %164
  %665 = add i32 %664, %191
  %666 = sub i32 %665, %202
  %667 = add i32 %666, %209
  %668 = sub i32 %667, %217
  %669 = sub i32 %668, %219
  %670 = add i32 %669, %237
  %671 = add i32 %670, %260
  %672 = add i32 %671, %261
  %673 = sub i32 %672, %263
  %674 = sub i32 %673, %271
  %675 = sub i32 %674, %287
  %676 = add i32 %675, %289
  %677 = sub i32 %676, %293
  %678 = add i32 %677, %295
  %679 = add i32 %678, %297
  %680 = add i32 %679, %299
  %681 = add i32 %680, %300
  %682 = add i32 %681, %302
  %683 = add i32 %682, %304
  %684 = sub i32 %683, %126
  %685 = add i32 %684, %333
  %686 = sub i32 %685, %338
  %687 = add i32 %686, %341
  %688 = sub i32 %687, %345
  %689 = add i32 %688, %351
  %690 = sub i32 %689, %315
  %691 = add i32 %690, %357
  %692 = sub i32 %691, %391
  %693 = sub i32 %692, %319
  %694 = sub i32 %693, %403
  %695 = add i32 %694, %405
  %696 = sub i32 %695, %409
  %697 = add i32 %696, %336
  %698 = add i32 %697, %327
  %699 = add i32 %698, %482
  %700 = sub i32 %699, %156
  %701 = sub i32 %700, %255
  %702 = sub i32 %701, %312
  %703 = sub i32 %702, %316
  %704 = add i32 %703, %318
  %705 = sub i32 %704, %320
  %706 = add i32 %705, %322
  %707 = sub i32 %706, %326
  %708 = sub i32 %707, %337
  %709 = sub i32 %708, %343
  %710 = add i32 %709, %346
  %711 = add i32 %710, %347
  %712 = sub i32 %711, %348
  %713 = sub i32 %712, %349
  %714 = add i32 %713, %352
  %715 = sub i32 %714, %356
  %716 = sub i32 %715, %358
  %717 = add i32 %716, %363
  %718 = sub i32 %717, %364
  %719 = sub i32 %718, %365
  %720 = sub i32 %719, %367
  %721 = add i32 %720, %369
  %722 = sub i32 %721, %370
  %723 = add i32 %722, %372
  %724 = add i32 %723, %379
  %725 = sub i32 %724, %384
  %726 = sub i32 %725, %385
  %727 = sub i32 %726, %387
  %728 = sub i32 %727, %388
  %729 = sub i32 %728, %389
  %730 = sub i32 %729, %395
  %731 = add i32 %730, %397
  %732 = add i32 %731, %398
  %733 = add i32 %732, %402
  %734 = sub i32 %733, %404
  %735 = sub i32 %734, %410
  %736 = sub i32 %735, %411
  %737 = add i32 %736, %412
  %738 = sub i32 %737, %416
  %739 = sub i32 %738, %418
  %740 = sub i32 %739, %419
  %741 = sub i32 %740, %308
  %742 = add i32 %741, %331
  %743 = add i32 %742, %376
  %744 = sub i32 %743, %381
  %745 = sub i32 %744, %383
  %746 = sub i32 %745, %400
  %747 = sub i32 %746, %408
  %748 = add i32 %747, %415
  %749 = sub i32 %748, %417
  %750 = add i32 %749, %423
  %751 = add i32 %750, %424
  %752 = add i32 %751, %425
  %753 = add i32 %752, %426
  %754 = add i32 %753, %480
  %755 = sub i32 %754, %362
  %756 = add i32 %755, %471
  %757 = add i32 %756, %478
  %758 = add i32 %757, %463
  %759 = icmp eq i32 %13, %758
  %760 = select i1 %759, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %761 = tail call i32 @puts(i8* nonnull dereferenceable(1) %760)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
