digraph "DFG for'main' function" {
	Node0x1c73ba8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c73c28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c73cb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c73d18[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1c74198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c74278[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1c74378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c74438[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1c7af08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c7b118[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1c7b1d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c7c148[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c7c7b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c7c890[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1c7ca88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c7cbe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c7ccf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c7cdb8[shape=record, label="  ret i32 0"];
	Node0x1c73ba8 -> Node0x1c73c28;
	Node0x1c73c28 -> Node0x1c73cb8;
	Node0x1c73cb8 -> Node0x1c73d18;
	Node0x1c73d18 -> Node0x1c74198;
	Node0x1c74198 -> Node0x1c74278;
	Node0x1c74278 -> Node0x1c74378;
	Node0x1c74378 -> Node0x1c74438;
	Node0x1c74438 -> Node0x1c7af08;
	Node0x1c7af08 -> Node0x1c7b118;
	Node0x1c7b118 -> Node0x1c7b1d8;
	Node0x1c7b1d8 -> Node0x1c7c148;
	Node0x1c7c148 -> Node0x1c7c7b8;
	Node0x1c7c7b8 -> Node0x1c7c890;
	Node0x1c7c890 -> Node0x1c7ca88;
	Node0x1c7ca88 -> Node0x1c7cbe8;
	Node0x1c7cbe8 -> Node0x1c7ccf8;
	Node0x1c7ccf8 -> Node0x1c7cdb8;
edge [color=red]
	Node0x1c73ba8 -> Node0x1c73d18;
	Node0x1c73d18 -> Node0x1c74198;
	Node0x1c73c28 -> Node0x1c74278;
	Node0x1c74278 -> Node0x1c74378;
	Node0x1c73cb8 -> Node0x1c74438;
	Node0x1c74438 -> Node0x1c7af08;
	Node0x1c73ba8 -> Node0x1c7b118;
	Node0x1c73c28 -> Node0x1c7b118;
	Node0x1c73cb8 -> Node0x1c7b118;
	Node0x1c73ba8 -> Node0x1c7b1d8;
	Node0x1c73c28 -> Node0x1c7c148;
	Node0x1c73cb8 -> Node0x1c7c7b8;
	Node0x1c7b1d8 -> Node0x1c7c890;
	Node0x1c7c148 -> Node0x1c7c890;
	Node0x1c7c7b8 -> Node0x1c7c890;
	Node0x1c74438 -> Node0x1c7ca88;
	Node0x1c74278 -> Node0x1c7cbe8;
	Node0x1c73d18 -> Node0x1c7ccf8;
}
