digraph "DFG for'main' function" {
	Node0x24d6d08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x24d6d88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x24d6e18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x24d6e78[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x24d72f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24d73d8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x24d74d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x24d7598[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x24d7648[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x24d78a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x24d7968[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x24d7ac8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x24d7b28[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x24dbb30[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x24dbd38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x24dbe98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x24dbfa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24dc068[shape=record, label="  ret i32 0"];
	Node0x24d6d08 -> Node0x24d6d88;
	Node0x24d6d88 -> Node0x24d6e18;
	Node0x24d6e18 -> Node0x24d6e78;
	Node0x24d6e78 -> Node0x24d72f8;
	Node0x24d72f8 -> Node0x24d73d8;
	Node0x24d73d8 -> Node0x24d74d8;
	Node0x24d74d8 -> Node0x24d7598;
	Node0x24d7598 -> Node0x24d7648;
	Node0x24d7648 -> Node0x24d78a8;
	Node0x24d78a8 -> Node0x24d7968;
	Node0x24d7968 -> Node0x24d7ac8;
	Node0x24d7ac8 -> Node0x24d7b28;
	Node0x24d7b28 -> Node0x24dbb30;
	Node0x24dbb30 -> Node0x24dbd38;
	Node0x24dbd38 -> Node0x24dbe98;
	Node0x24dbe98 -> Node0x24dbfa8;
	Node0x24dbfa8 -> Node0x24dc068;
edge [color=red]
	Node0x24d6d08 -> Node0x24d6e78;
	Node0x24d6e78 -> Node0x24d72f8;
	Node0x24d6d88 -> Node0x24d73d8;
	Node0x24d73d8 -> Node0x24d74d8;
	Node0x24d6e18 -> Node0x24d7598;
	Node0x24d7598 -> Node0x24d7648;
	Node0x24d6d08 -> Node0x24d78a8;
	Node0x24d6d88 -> Node0x24d78a8;
	Node0x24d6e18 -> Node0x24d78a8;
	Node0x24d6d08 -> Node0x24d7968;
	Node0x24d6d88 -> Node0x24d7ac8;
	Node0x24d6e18 -> Node0x24d7b28;
	Node0x24d7968 -> Node0x24dbb30;
	Node0x24d7ac8 -> Node0x24dbb30;
	Node0x24d7b28 -> Node0x24dbb30;
	Node0x24d7598 -> Node0x24dbd38;
	Node0x24d73d8 -> Node0x24dbe98;
	Node0x24d6e78 -> Node0x24dbfa8;
}
