digraph "DFG for'main' function" {
	Node0xf24a18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf24a98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf24b28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf24b88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xf24c38[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xf25068[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf25148[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xf25248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf25308[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xf253b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf25478[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xf25528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf1f740[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xf25728[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf26698[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf26d08[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf26d68[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xf26e78[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xf270d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf27238[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf27348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf27458[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf27518[shape=record, label="  ret i32 0"];
	Node0xf24a18 -> Node0xf24a98;
	Node0xf24a98 -> Node0xf24b28;
	Node0xf24b28 -> Node0xf24b88;
	Node0xf24b88 -> Node0xf24c38;
	Node0xf24c38 -> Node0xf25068;
	Node0xf25068 -> Node0xf25148;
	Node0xf25148 -> Node0xf25248;
	Node0xf25248 -> Node0xf25308;
	Node0xf25308 -> Node0xf253b8;
	Node0xf253b8 -> Node0xf25478;
	Node0xf25478 -> Node0xf25528;
	Node0xf25528 -> Node0xf1f740;
	Node0xf1f740 -> Node0xf25728;
	Node0xf25728 -> Node0xf26698;
	Node0xf26698 -> Node0xf26d08;
	Node0xf26d08 -> Node0xf26d68;
	Node0xf26d68 -> Node0xf26e78;
	Node0xf26e78 -> Node0xf270d8;
	Node0xf270d8 -> Node0xf27238;
	Node0xf27238 -> Node0xf27348;
	Node0xf27348 -> Node0xf27458;
	Node0xf27458 -> Node0xf27518;
edge [color=red]
	Node0xf24a18 -> Node0xf24c38;
	Node0xf24c38 -> Node0xf25068;
	Node0xf24a98 -> Node0xf25148;
	Node0xf25148 -> Node0xf25248;
	Node0xf24b28 -> Node0xf25308;
	Node0xf25308 -> Node0xf253b8;
	Node0xf24b88 -> Node0xf25478;
	Node0xf25478 -> Node0xf25528;
	Node0xf24a18 -> Node0xf1f740;
	Node0xf24a98 -> Node0xf1f740;
	Node0xf24b28 -> Node0xf1f740;
	Node0xf24b88 -> Node0xf1f740;
	Node0xf24a18 -> Node0xf25728;
	Node0xf24a98 -> Node0xf26698;
	Node0xf24b28 -> Node0xf26d08;
	Node0xf24b88 -> Node0xf26d68;
	Node0xf25728 -> Node0xf26e78;
	Node0xf26698 -> Node0xf26e78;
	Node0xf26d08 -> Node0xf26e78;
	Node0xf26d68 -> Node0xf26e78;
	Node0xf25478 -> Node0xf270d8;
	Node0xf25308 -> Node0xf27238;
	Node0xf25148 -> Node0xf27348;
	Node0xf24c38 -> Node0xf27458;
}
