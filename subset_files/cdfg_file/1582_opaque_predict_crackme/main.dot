digraph "DFG for'main' function" {
	Node0x1da79a8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1da7a28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1da7ab8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1da7f18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1da7ff8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1da8118[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1da8350[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1da8408[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1da9378[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1da9a00[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1da9a70[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x1da9ae0[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x1da9b50[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x1da9bc0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1da9c30[shape=record, label="  %13 = add i32 %12, %10"];
	Node0x1da9ca0[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x1da9d10[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1da9d80[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x1da9df0[shape=record, label="  %17 = xor i32 %6, 2147483647"];
	Node0x1da9e60[shape=record, label="  %18 = and i32 %17, %7"];
	Node0x1da9ed0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1da9f40[shape=record, label="  %20 = and i32 %6, %10"];
	Node0x1da9fb0[shape=record, label="  %21 = mul i32 %20, -3"];
	Node0x1daa020[shape=record, label="  %22 = sub i32 %13, %19"];
	Node0x1daa090[shape=record, label="  %23 = add i32 %22, %21"];
	Node0x1daa100[shape=record, label="  %24 = sub i32 %23, %16"];
	Node0x1daa170[shape=record, label="  %25 = icmp eq i32 %24, %9"];
	Node0x1d489d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1daa200[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0x1daa458[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1daa5b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1daa678[shape=record, label="  ret i32 0"];
	Node0x1da79a8 -> Node0x1da7a28;
	Node0x1da7a28 -> Node0x1da7ab8;
	Node0x1da7ab8 -> Node0x1da7f18;
	Node0x1da7f18 -> Node0x1da7ff8;
	Node0x1da7ff8 -> Node0x1da8118;
	Node0x1da8118 -> Node0x1da8350;
	Node0x1da8350 -> Node0x1da8408;
	Node0x1da8408 -> Node0x1da9378;
	Node0x1da9378 -> Node0x1da9a00;
	Node0x1da9a00 -> Node0x1da9a70;
	Node0x1da9a70 -> Node0x1da9ae0;
	Node0x1da9ae0 -> Node0x1da9b50;
	Node0x1da9b50 -> Node0x1da9bc0;
	Node0x1da9bc0 -> Node0x1da9c30;
	Node0x1da9c30 -> Node0x1da9ca0;
	Node0x1da9ca0 -> Node0x1da9d10;
	Node0x1da9d10 -> Node0x1da9d80;
	Node0x1da9d80 -> Node0x1da9df0;
	Node0x1da9df0 -> Node0x1da9e60;
	Node0x1da9e60 -> Node0x1da9ed0;
	Node0x1da9ed0 -> Node0x1da9f40;
	Node0x1da9f40 -> Node0x1da9fb0;
	Node0x1da9fb0 -> Node0x1daa020;
	Node0x1daa020 -> Node0x1daa090;
	Node0x1daa090 -> Node0x1daa100;
	Node0x1daa100 -> Node0x1daa170;
	Node0x1daa170 -> Node0x1d489d8;
	Node0x1d489d8 -> Node0x1daa200;
	Node0x1daa200 -> Node0x1daa458;
	Node0x1daa458 -> Node0x1daa5b8;
	Node0x1daa5b8 -> Node0x1daa678;
edge [color=red]
	Node0x1da79a8 -> Node0x1da7ab8;
	Node0x1da7ab8 -> Node0x1da7f18;
	Node0x1da7a28 -> Node0x1da7ff8;
	Node0x1da7ff8 -> Node0x1da8118;
	Node0x1da79a8 -> Node0x1da8350;
	Node0x1da7a28 -> Node0x1da8350;
	Node0x1da79a8 -> Node0x1da8408;
	Node0x1da7a28 -> Node0x1da9378;
	Node0x1da9378 -> Node0x1da9a00;
	Node0x1da8408 -> Node0x1da9a00;
	Node0x1da9a00 -> Node0x1da9a70;
	Node0x1da9378 -> Node0x1da9ae0;
	Node0x1da9378 -> Node0x1da9b50;
	Node0x1da8408 -> Node0x1da9b50;
	Node0x1da9b50 -> Node0x1da9bc0;
	Node0x1da9bc0 -> Node0x1da9c30;
	Node0x1da9ae0 -> Node0x1da9c30;
	Node0x1da9378 -> Node0x1da9ca0;
	Node0x1da8408 -> Node0x1da9ca0;
	Node0x1da9ca0 -> Node0x1da9d10;
	Node0x1da9d10 -> Node0x1da9d80;
	Node0x1da8408 -> Node0x1da9df0;
	Node0x1da9df0 -> Node0x1da9e60;
	Node0x1da9378 -> Node0x1da9e60;
	Node0x1da9e60 -> Node0x1da9ed0;
	Node0x1da8408 -> Node0x1da9f40;
	Node0x1da9ae0 -> Node0x1da9f40;
	Node0x1da9f40 -> Node0x1da9fb0;
	Node0x1da9c30 -> Node0x1daa020;
	Node0x1da9ed0 -> Node0x1daa020;
	Node0x1daa020 -> Node0x1daa090;
	Node0x1da9fb0 -> Node0x1daa090;
	Node0x1daa090 -> Node0x1daa100;
	Node0x1da9d80 -> Node0x1daa100;
	Node0x1daa100 -> Node0x1daa170;
	Node0x1da9a70 -> Node0x1daa170;
	Node0x1daa170 -> Node0x1d489d8;
	Node0x1d489d8 -> Node0x1daa200;
	Node0x1da7ff8 -> Node0x1daa458;
	Node0x1da7ab8 -> Node0x1daa5b8;
}
