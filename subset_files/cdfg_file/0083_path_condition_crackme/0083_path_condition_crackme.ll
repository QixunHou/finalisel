; ModuleID = '../.././c_source_file/0083_path_condition_crackme.c'
source_filename = "../.././c_source_file/0083_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %8, %2
  %10 = xor i32 %4, -1
  %11 = and i32 %5, %3
  %12 = and i32 %11, %10
  %13 = xor i32 %5, %3
  %14 = and i32 %13, %4
  %15 = xor i32 %14, -1
  %16 = xor i32 %12, %15
  %17 = add i32 %9, %4
  %18 = sub i32 %16, %17
  %19 = xor i32 %1, -1
  %20 = and i32 %19, %2
  %21 = and i32 %20, %0
  %22 = xor i32 %2, %1
  %23 = or i32 %22, %0
  %24 = xor i32 %23, -1
  %25 = or i32 %21, %24
  %26 = and i32 %2, %0
  %27 = xor i32 %26, -1
  %28 = xor i32 %27, %1
  %29 = or i32 %2, %1
  %30 = xor i32 %26, %29
  %31 = and i32 %1, %0
  %32 = xor i32 %31, -1
  %33 = xor i32 %32, %2
  %34 = xor i32 %21, %23
  %35 = xor i32 %2, -1
  %36 = and i32 %7, %35
  %37 = xor i32 %0, -1
  %38 = and i32 %20, %37
  %39 = or i32 %19, %2
  %40 = and i32 %39, %0
  %41 = or i32 %38, %40
  %42 = and i32 %2, %1
  %43 = and i32 %42, %37
  %44 = and i32 %22, %0
  %45 = xor i32 %43, -1
  %46 = xor i32 %44, %45
  %47 = xor i32 %29, %0
  %48 = shl i32 %47, 1
  %49 = or i32 %19, %0
  %50 = xor i32 %49, %2
  %51 = or i32 %26, %8
  %52 = and i32 %35, %1
  %53 = xor i32 %52, -1
  %54 = and i32 %53, %0
  %55 = shl i32 %54, 1
  %56 = and i32 %35, %0
  %57 = or i32 %35, %1
  %58 = xor i32 %56, %57
  %59 = or i32 %2, %0
  %60 = xor i32 %59, -1
  %61 = xor i32 %2, %0
  %62 = xor i32 %61, -1
  %63 = or i32 %62, %8
  %64 = and i32 %19, %0
  %65 = or i32 %61, %64
  %66 = and i32 %22, %37
  %67 = xor i32 %29, -1
  %68 = or i32 %67, %0
  %69 = xor i32 %64, -1
  %70 = xor i32 %69, %2
  %71 = or i32 %22, %37
  %72 = and i32 %62, %19
  %73 = shl i32 %72, 1
  %74 = xor i32 %22, -1
  %75 = or i32 %74, %8
  %76 = and i32 %74, %32
  %77 = or i32 %22, %31
  %78 = and i32 %22, %69
  %79 = xor i32 %1, %0
  %80 = xor i32 %79, -1
  %81 = and i32 %61, %80
  %82 = or i32 %35, %0
  %83 = xor i32 %82, %31
  %84 = xor i32 %56, -1
  %85 = and i32 %84, %1
  %86 = or i32 %67, %37
  %87 = or i32 %31, %74
  %88 = or i32 %31, %60
  %89 = or i32 %8, %2
  %90 = or i32 %22, %64
  %91 = or i32 %60, %80
  %92 = and i32 %39, %37
  %93 = or i32 %21, %92
  %94 = xor i32 %42, -1
  %95 = xor i32 %94, %0
  %96 = shl i32 %95, 1
  %97 = or i32 %56, %1
  %98 = shl i32 %97, 1
  %99 = xor i32 %56, %1
  %100 = or i32 %26, %79
  %101 = or i32 %26, %67
  %102 = or i32 %79, %35
  %103 = xor i32 %22, %0
  %104 = xor i32 %103, 2147483647
  %105 = xor i32 %104, %21
  %106 = or i32 %74, %37
  %107 = shl i32 %106, 1
  %108 = xor i32 %57, %0
  %109 = xor i32 %82, -1
  %110 = or i32 %109, %80
  %111 = shl i32 %35, 1
  %112 = or i32 %31, %62
  %113 = and i32 %61, %19
  %114 = or i32 %109, %1
  %115 = and i32 %79, %84
  %116 = shl i32 %115, 2
  %117 = or i32 %29, %37
  %118 = or i32 %31, %2
  %119 = xor i32 %71, 2147483647
  %120 = or i32 %119, %38
  %121 = xor i32 %49, -1
  %122 = or i32 %62, %121
  %123 = or i32 %26, %52
  %124 = and i32 %29, %0
  %125 = xor i32 %124, %45
  %126 = xor i32 %84, %1
  %127 = xor i32 %39, %0
  %128 = xor i32 %21, -1
  %129 = xor i32 %127, %128
  %130 = and i32 %59, %1
  %131 = and i32 %35, %69
  %132 = and i32 %27, %19
  %133 = and i32 %49, %35
  %134 = and i32 %59, %19
  %135 = or i32 %53, %0
  %136 = or i32 %62, %19
  %137 = xor i32 %82, %1
  %138 = and i32 %79, %35
  %139 = shl i32 %138, 1
  %140 = xor i32 %7, %2
  %141 = or i32 %42, %64
  %142 = shl i32 %141, 1
  %143 = and i32 %61, %69
  %144 = or i32 %61, %31
  %145 = or i32 %109, %19
  %146 = and i32 %49, %74
  %147 = and i32 %49, %62
  %148 = and i32 %27, %1
  %149 = and i32 %62, %69
  %150 = and i32 %82, %19
  %151 = or i32 %56, %80
  %152 = and i32 %79, %27
  %153 = shl i32 %152, 1
  %154 = xor i32 %57, -1
  %155 = or i32 %56, %154
  %156 = xor i32 %26, %53
  %157 = shl i32 %156, 1
  %158 = and i32 %61, %79
  %159 = xor i32 %60, %1
  %160 = and i32 %82, %80
  %161 = xor i32 %40, -1
  %162 = xor i32 %38, %161
  %163 = or i32 %31, %154
  %164 = or i32 %31, %67
  %165 = or i32 %52, %0
  %166 = xor i32 %57, %31
  %167 = add i32 %26, 1
  %168 = and i32 %7, %62
  %169 = and i32 %74, %0
  %170 = or i32 %74, %0
  %171 = shl i32 %170, 1
  %172 = xor i32 %52, %0
  %173 = xor i32 %64, %53
  %174 = and i32 %49, %2
  %175 = xor i32 %26, %1
  %176 = or i32 %64, %2
  %177 = shl i32 %176, 1
  %178 = and i32 %29, %37
  %179 = or i32 %80, %2
  %180 = or i32 %21, %127
  %181 = or i32 %60, %19
  %182 = or i32 %42, %37
  %183 = and i32 %94, %0
  %184 = shl i32 %183, 1
  %185 = xor i32 %184, -1
  %186 = or i32 %22, %121
  %187 = or i32 %79, %62
  %188 = and i32 %59, %79
  %189 = and i32 %62, %1
  %190 = or i32 %154, %0
  %191 = or i32 %26, %1
  %192 = or i32 %154, %37
  %193 = or i32 %64, %74
  %194 = and i32 %53, %37
  %195 = and i32 %74, %69
  %196 = and i32 %22, %49
  %197 = and i32 %32, %2
  %198 = xor i32 %67, %0
  %199 = and i32 %84, %19
  %200 = xor i32 %59, %1
  %201 = or i32 %21, %103
  %202 = shl i32 %201, 2
  %203 = or i32 %56, %42
  %204 = or i32 %22, %8
  %205 = or i32 %61, %80
  %206 = shl i32 %205, 1
  %207 = or i32 %61, %1
  %208 = shl i32 %207, 1
  %209 = or i32 %79, %109
  %210 = shl i32 %209, 1
  %211 = xor i32 %26, %7
  %212 = and i32 %42, %0
  %213 = xor i32 %66, 2147483647
  %214 = xor i32 %213, %212
  %215 = shl i32 %214, 1
  %216 = or i32 %121, %2
  %217 = and i32 %57, %0
  %218 = xor i32 %212, %103
  %219 = and i32 %22, %7
  %220 = or i32 %57, %37
  %221 = shl i32 %220, 1
  %222 = or i32 %64, %35
  %223 = and i32 %79, %2
  %224 = or i32 %62, %1
  %225 = xor i32 %154, %0
  %226 = add i32 %61, 1
  %227 = or i32 %61, %79
  %228 = or i32 %61, %19
  %229 = and i32 %57, %37
  %230 = or i32 %94, %0
  %231 = and i32 %7, %2
  %232 = or i32 %43, %44
  %233 = or i32 %26, %19
  %234 = shl i32 %233, 1
  %235 = xor i32 %212, -1
  %236 = xor i32 %178, %235
  %237 = and i32 %35, %80
  %238 = or i32 %61, %8
  %239 = shl i32 %238, 1
  %240 = xor i32 %59, %31
  %241 = xor i32 %47, %235
  %242 = or i32 %94, %37
  %243 = and i32 %94, %37
  %244 = or i32 %79, %2
  %245 = xor i32 %29, %31
  %246 = xor i32 %109, %1
  %247 = or i32 %60, %1
  %248 = and i32 %82, %79
  %249 = shl i32 %248, 1
  %250 = or i32 %52, %64
  %251 = or i32 %35, %121
  %252 = or i32 %42, %0
  %253 = or i32 %26, %121
  %254 = or i32 %53, %37
  %255 = or i32 %74, %121
  %256 = xor i32 %31, %2
  %257 = and i32 %74, %37
  %258 = xor i32 %42, %0
  %259 = xor i32 %38, %71
  %260 = or i32 %35, %80
  %261 = and i32 %80, %2
  %262 = or i32 %31, %35
  %263 = shl i32 %262, 2
  %264 = and i32 %82, %1
  %265 = or i32 %56, %79
  %266 = xor i32 %92, %128
  %267 = xor i32 %121, %2
  %268 = and i32 %61, %1
  %269 = and i32 %22, %32
  %270 = xor i32 %64, %94
  %271 = shl i32 %79, 1
  %272 = xor i32 %64, %2
  %273 = and i32 %67, %37
  %274 = mul i32 %273, 26
  %275 = and i32 %52, %37
  %276 = mul i32 %275, 21
  %277 = and i32 %67, %0
  %278 = and i32 %52, %0
  %279 = and i32 %154, %37
  %280 = mul i32 %279, 6
  %281 = shl i32 %43, 3
  %282 = and i32 %154, %0
  %283 = mul i32 %282, 28
  %284 = xor i32 %3, -1
  %285 = and i32 %284, %4
  %286 = xor i32 %11, -1
  %287 = xor i32 %285, %286
  %288 = xor i32 %5, -1
  %289 = and i32 %288, %3
  %290 = or i32 %289, %10
  %291 = or i32 %286, %10
  %292 = xor i32 %4, %3
  %293 = or i32 %292, %288
  %294 = or i32 %4, %3
  %295 = xor i32 %294, -1
  %296 = or i32 %13, %295
  %297 = xor i32 %5, %4
  %298 = xor i32 %297, -1
  %299 = or i32 %298, %3
  %300 = xor i32 %289, -1
  %301 = and i32 %300, %4
  %302 = or i32 %288, %3
  %303 = xor i32 %13, -1
  %304 = xor i32 %285, -1
  %305 = and i32 %304, %5
  %306 = and i32 %4, %3
  %307 = xor i32 %302, %4
  %308 = or i32 %288, %4
  %309 = xor i32 %308, -1
  %310 = or i32 %306, %309
  %311 = and i32 %5, %4
  %312 = or i32 %5, %3
  %313 = xor i32 %312, -1
  %314 = or i32 %311, %313
  %315 = or i32 %303, %295
  %316 = and i32 %284, %5
  %317 = and i32 %316, %4
  %318 = xor i32 %13, %4
  %319 = or i32 %317, %318
  %320 = or i32 %5, %4
  %321 = xor i32 %320, -1
  %322 = xor i32 %321, %3
  %323 = and i32 %13, %294
  %324 = xor i32 %292, -1
  %325 = and i32 %324, %5
  %326 = and i32 %292, %5
  %327 = or i32 %311, %292
  %328 = xor i32 %300, %4
  %329 = or i32 %311, %324
  %330 = and i32 %286, %4
  %331 = or i32 %13, %4
  %332 = and i32 %294, %298
  %333 = xor i32 %311, -1
  %334 = and i32 %333, %284
  %335 = or i32 %312, %4
  %336 = xor i32 %302, -1
  %337 = or i32 %306, %336
  %338 = shl i32 %337, 1
  %339 = or i32 %336, %4
  %340 = and i32 %288, %4
  %341 = xor i32 %340, %3
  %342 = or i32 %284, %5
  %343 = and i32 %342, %10
  %344 = or i32 %317, %343
  %345 = shl i32 %344, 1
  %346 = or i32 %284, %4
  %347 = xor i32 %346, -1
  %348 = or i32 %347, %5
  %349 = or i32 %297, %324
  %350 = shl i32 %349, 1
  %351 = or i32 %321, %3
  %352 = or i32 %302, %10
  %353 = or i32 %297, %292
  %354 = add i32 %294, 1
  %355 = and i32 %316, %10
  %356 = and i32 %342, %4
  %357 = xor i32 %356, 2147483647
  %358 = xor i32 %357, %355
  %359 = shl i32 %358, 1
  %360 = or i32 %303, %10
  %361 = shl i32 %360, 1
  %362 = xor i32 %311, %300
  %363 = shl i32 %362, 1
  %364 = or i32 %13, %285
  %365 = shl i32 %364, 1
  %366 = xor i32 %308, %3
  %367 = or i32 %13, %10
  %368 = and i32 %320, %3
  %369 = add i32 %346, 1
  %370 = or i32 %292, %321
  %371 = or i32 %306, %5
  %372 = or i32 %285, %303
  %373 = shl i32 %372, 1
  %374 = xor i32 %306, %5
  %375 = xor i32 %311, %312
  %376 = and i32 %13, %10
  %377 = xor i32 %340, -1
  %378 = and i32 %292, %377
  %379 = and i32 %346, %298
  %380 = and i32 %300, %10
  %381 = xor i32 %285, %5
  %382 = and i32 %298, %304
  %383 = or i32 %340, %11
  %384 = shl i32 %383, 1
  %385 = or i32 %300, %10
  %386 = and i32 %11, %4
  %387 = and i32 %312, %10
  %388 = xor i32 %386, -1
  %389 = xor i32 %387, %388
  %390 = or i32 %340, %3
  %391 = or i32 %11, %285
  %392 = or i32 %298, %284
  %393 = add i32 %340, 1
  %394 = xor i32 %295, %5
  %395 = or i32 %306, %321
  %396 = shl i32 %395, 1
  %397 = or i32 %355, %356
  %398 = xor i32 %347, %5
  %399 = xor i32 %333, %3
  %400 = and i32 %377, %284
  %401 = or i32 %306, %303
  %402 = or i32 %288, %295
  %403 = or i32 %340, %336
  %404 = and i32 %294, %303
  %405 = xor i32 %340, %302
  %406 = or i32 %288, %324
  %407 = add i32 %5, 1
  %408 = or i32 %289, %4
  %409 = or i32 %303, %347
  %410 = xor i32 %346, %5
  %411 = or i32 %297, %306
  %412 = or i32 %285, %298
  %413 = xor i32 %309, %3
  %414 = xor i32 %342, %10
  %415 = xor i32 %414, %317
  %416 = or i32 %386, %387
  %417 = xor i32 %294, %5
  %418 = or i32 %295, %5
  %419 = shl i32 %418, 2
  %420 = and i32 %377, %3
  %421 = and i32 %302, %4
  %422 = and i32 %292, %298
  %423 = xor i32 %311, %346
  %424 = or i32 %311, %347
  %425 = xor i32 %289, %4
  %426 = xor i32 %303, %4
  %427 = xor i32 %306, -1
  %428 = add i32 %11, 1
  %429 = or i32 %309, %284
  %430 = xor i32 %312, %4
  %431 = or i32 %386, %430
  %432 = add i32 %308, 1
  %433 = xor i32 %367, -1
  %434 = or i32 %355, %433
  %435 = or i32 %312, %10
  %436 = xor i32 %313, %4
  %437 = xor i32 %302, %306
  %438 = or i32 %300, %4
  %439 = and i32 %297, %304
  %440 = and i32 %13, %304
  %441 = xor i32 %312, %306
  %442 = and i32 %320, %324
  %443 = or i32 %311, %284
  %444 = or i32 %311, %295
  %445 = shl i32 %444, 1
  %446 = and i32 %288, %304
  %447 = or i32 %324, %5
  %448 = add i32 %311, 1
  %449 = xor i32 %286, %4
  %450 = and i32 %320, %292
  %451 = shl i32 %450, 1
  %452 = and i32 %297, %292
  %453 = xor i32 %430, %388
  %454 = or i32 %340, %292
  %455 = xor i32 %320, %3
  %456 = or i32 %321, %284
  %457 = or i32 %289, %285
  %458 = xor i32 %11, %4
  %459 = xor i32 %386, %318
  %460 = and i32 %298, %3
  %461 = and i32 %313, %10
  %462 = mul i32 %461, -10
  %463 = and i32 %289, %10
  %464 = mul i32 %463, -7
  %465 = and i32 %313, %4
  %466 = mul i32 %465, -18
  %467 = and i32 %289, %4
  %468 = and i32 %336, %10
  %469 = mul i32 %12, -13
  %470 = and i32 %336, %4
  %471 = mul i32 %470, -12
  %472 = add i32 %7, %37
  %473 = add i32 %472, %49
  %474 = add i32 %473, %80
  %475 = add i32 %474, %3
  %476 = add i32 %475, %59
  %477 = add i32 %476, %22
  %478 = add i32 %477, %223
  %479 = add i32 %478, %109
  %480 = add i32 %479, %131
  %481 = add i32 %480, %118
  %482 = add i32 %481, %33
  %483 = add i32 %482, %257
  %484 = add i32 %483, %255
  %485 = add i32 %484, %240
  %486 = add i32 %485, %227
  %487 = add i32 %486, %217
  %488 = add i32 %487, %199
  %489 = add i32 %488, %189
  %490 = add i32 %489, %187
  %491 = add i32 %490, %143
  %492 = add i32 %491, %130
  %493 = add i32 %492, %298
  %494 = add i32 %493, %371
  %495 = add i32 %494, %293
  %496 = add i32 %495, %120
  %497 = add i32 %496, %105
  %498 = add i32 %497, %439
  %499 = add i32 %498, %455
  %500 = add i32 %499, %435
  %501 = add i32 %500, %429
  %502 = add i32 %501, %403
  %503 = add i32 %502, %399
  %504 = add i32 %503, %367
  %505 = add i32 %504, %341
  %506 = add i32 %505, %290
  %507 = shl i32 %506, 1
  %508 = add i32 %251, %284
  %509 = add i32 %508, %140
  %510 = sub i32 %509, %224
  %511 = sub i32 %510, %134
  %512 = add i32 %511, %81
  %513 = add i32 %512, %320
  %514 = mul i32 %513, 3
  %515 = add i32 %268, %261
  %516 = add i32 %515, %438
  %517 = shl i32 %516, 2
  %518 = add i32 %386, %467
  %519 = mul i32 %518, -19
  %520 = add i32 %212, %278
  %521 = mul i32 %520, 15
  %522 = sub i32 %277, %468
  %523 = mul i32 %522, 23
  %524 = add i32 %26, %152
  %525 = sub i32 %524, %159
  %526 = sub i32 %525, %151
  %527 = add i32 %526, %381
  %528 = add i32 %527, %406
  %529 = add i32 %528, %303
  %530 = mul i32 %529, 5
  %531 = add i32 %64, %0
  %532 = add i32 %531, %7
  %533 = add i32 %532, 3
  %534 = add i32 %533, %121
  %535 = sub i32 %534, %64
  %536 = sub i32 %535, %36
  %537 = sub i32 %536, %50
  %538 = add i32 %537, %60
  %539 = sub i32 %538, %70
  %540 = add i32 %539, %89
  %541 = add i32 %540, %102
  %542 = sub i32 %541, %111
  %543 = add i32 %542, %133
  %544 = add i32 %543, %167
  %545 = add i32 %544, %174
  %546 = add i32 %545, %179
  %547 = sub i32 %546, %197
  %548 = add i32 %547, %82
  %549 = sub i32 %548, %216
  %550 = sub i32 %549, %57
  %551 = sub i32 %550, %222
  %552 = add i32 %551, %226
  %553 = sub i32 %552, %231
  %554 = sub i32 %553, %237
  %555 = add i32 %554, %61
  %556 = add i32 %555, %244
  %557 = add i32 %556, %256
  %558 = add i32 %557, %260
  %559 = add i32 %558, %267
  %560 = sub i32 %559, %29
  %561 = sub i32 %560, %271
  %562 = add i32 %561, %272
  %563 = add i32 %562, %28
  %564 = add i32 %563, %30
  %565 = add i32 %564, %51
  %566 = add i32 %565, %58
  %567 = add i32 %566, %63
  %568 = sub i32 %567, %65
  %569 = sub i32 %568, %66
  %570 = sub i32 %569, %68
  %571 = sub i32 %570, %71
  %572 = add i32 %571, %75
  %573 = add i32 %572, %76
  %574 = add i32 %573, %77
  %575 = add i32 %574, %78
  %576 = add i32 %575, %83
  %577 = add i32 %576, %85
  %578 = sub i32 %577, %86
  %579 = sub i32 %578, %87
  %580 = sub i32 %579, %88
  %581 = sub i32 %580, %90
  %582 = sub i32 %581, %91
  %583 = add i32 %582, %99
  %584 = sub i32 %583, %100
  %585 = add i32 %584, %101
  %586 = sub i32 %585, %108
  %587 = sub i32 %586, %110
  %588 = sub i32 %587, %112
  %589 = add i32 %588, %113
  %590 = sub i32 %589, %114
  %591 = add i32 %590, %117
  %592 = add i32 %591, %122
  %593 = sub i32 %592, %123
  %594 = sub i32 %593, %126
  %595 = sub i32 %594, %23
  %596 = add i32 %595, %132
  %597 = sub i32 %596, %135
  %598 = sub i32 %597, %136
  %599 = add i32 %598, %137
  %600 = sub i32 %599, %139
  %601 = sub i32 %600, %144
  %602 = sub i32 %601, %145
  %603 = add i32 %602, %146
  %604 = sub i32 %603, %147
  %605 = add i32 %604, %148
  %606 = sub i32 %605, %149
  %607 = sub i32 %606, %150
  %608 = sub i32 %607, %155
  %609 = add i32 %608, %158
  %610 = sub i32 %609, %160
  %611 = add i32 %610, %163
  %612 = sub i32 %611, %164
  %613 = sub i32 %612, %165
  %614 = add i32 %613, %166
  %615 = sub i32 %614, %168
  %616 = add i32 %615, %169
  %617 = sub i32 %616, %172
  %618 = sub i32 %617, %173
  %619 = sub i32 %618, %175
  %620 = sub i32 %619, %177
  %621 = sub i32 %620, %178
  %622 = add i32 %621, %181
  %623 = add i32 %622, %182
  %624 = sub i32 %623, %186
  %625 = add i32 %624, %188
  %626 = sub i32 %625, %190
  %627 = sub i32 %626, %191
  %628 = sub i32 %627, %192
  %629 = add i32 %628, %193
  %630 = add i32 %629, %194
  %631 = sub i32 %630, %195
  %632 = add i32 %631, %196
  %633 = add i32 %632, %198
  %634 = sub i32 %633, %200
  %635 = sub i32 %634, %203
  %636 = sub i32 %635, %204
  %637 = add i32 %636, %211
  %638 = sub i32 %637, %219
  %639 = sub i32 %638, %124
  %640 = sub i32 %639, %225
  %641 = sub i32 %640, %44
  %642 = sub i32 %641, %228
  %643 = sub i32 %642, %229
  %644 = add i32 %643, %230
  %645 = add i32 %644, %242
  %646 = sub i32 %645, %243
  %647 = sub i32 %646, %245
  %648 = sub i32 %647, %246
  %649 = sub i32 %648, %247
  %650 = add i32 %649, %250
  %651 = sub i32 %650, %252
  %652 = sub i32 %651, %253
  %653 = sub i32 %652, %254
  %654 = add i32 %653, %258
  %655 = sub i32 %654, %263
  %656 = add i32 %655, %264
  %657 = add i32 %656, %265
  %658 = sub i32 %657, %269
  %659 = add i32 %658, %270
  %660 = sub i32 %659, %25
  %661 = add i32 %660, %34
  %662 = add i32 %661, %41
  %663 = sub i32 %662, %46
  %664 = sub i32 %663, %48
  %665 = sub i32 %664, %55
  %666 = sub i32 %665, %73
  %667 = sub i32 %666, %93
  %668 = sub i32 %667, %96
  %669 = sub i32 %668, %98
  %670 = sub i32 %669, %107
  %671 = sub i32 %670, %116
  %672 = sub i32 %671, %125
  %673 = add i32 %672, %129
  %674 = sub i32 %673, %142
  %675 = sub i32 %674, %153
  %676 = sub i32 %675, %157
  %677 = add i32 %676, %162
  %678 = sub i32 %677, %171
  %679 = add i32 %678, %180
  %680 = add i32 %679, %185
  %681 = sub i32 %680, %206
  %682 = sub i32 %681, %208
  %683 = sub i32 %682, %210
  %684 = add i32 %683, %218
  %685 = sub i32 %684, %221
  %686 = sub i32 %685, %232
  %687 = sub i32 %686, %234
  %688 = sub i32 %687, %236
  %689 = sub i32 %688, %239
  %690 = sub i32 %689, %241
  %691 = sub i32 %690, %249
  %692 = sub i32 %691, %259
  %693 = add i32 %692, %266
  %694 = add i32 %693, %274
  %695 = add i32 %694, %276
  %696 = add i32 %695, %280
  %697 = add i32 %696, %281
  %698 = add i32 %697, %283
  %699 = sub i32 %698, %306
  %700 = add i32 %699, %354
  %701 = add i32 %700, %369
  %702 = add i32 %701, %294
  %703 = add i32 %702, %407
  %704 = add i32 %703, %427
  %705 = add i32 %704, %304
  %706 = add i32 %705, %324
  %707 = sub i32 %706, %202
  %708 = sub i32 %707, %302
  %709 = add i32 %708, %305
  %710 = add i32 %709, %325
  %711 = add i32 %710, %312
  %712 = sub i32 %711, %326
  %713 = add i32 %712, %348
  %714 = add i32 %713, %311
  %715 = add i32 %714, %374
  %716 = add i32 %715, %336
  %717 = add i32 %716, %393
  %718 = add i32 %717, %340
  %719 = add i32 %718, %394
  %720 = sub i32 %719, %398
  %721 = add i32 %720, %308
  %722 = sub i32 %721, %402
  %723 = sub i32 %722, %410
  %724 = sub i32 %723, %417
  %725 = add i32 %724, %11
  %726 = add i32 %725, %428
  %727 = add i32 %726, %432
  %728 = sub i32 %727, %13
  %729 = add i32 %728, %446
  %730 = add i32 %729, %447
  %731 = add i32 %730, %448
  %732 = add i32 %731, %521
  %733 = sub i32 %732, %215
  %734 = add i32 %733, %287
  %735 = sub i32 %734, %291
  %736 = add i32 %735, %296
  %737 = sub i32 %736, %299
  %738 = sub i32 %737, %301
  %739 = add i32 %738, %307
  %740 = sub i32 %739, %310
  %741 = add i32 %740, %14
  %742 = sub i32 %741, %314
  %743 = add i32 %742, %315
  %744 = sub i32 %743, %322
  %745 = sub i32 %744, %323
  %746 = sub i32 %745, %327
  %747 = sub i32 %746, %328
  %748 = add i32 %747, %329
  %749 = add i32 %748, %330
  %750 = add i32 %749, %331
  %751 = sub i32 %750, %332
  %752 = sub i32 %751, %334
  %753 = sub i32 %752, %335
  %754 = sub i32 %753, %339
  %755 = sub i32 %754, %351
  %756 = add i32 %755, %352
  %757 = sub i32 %756, %353
  %758 = sub i32 %757, %366
  %759 = sub i32 %758, %368
  %760 = sub i32 %759, %370
  %761 = sub i32 %760, %375
  %762 = sub i32 %761, %376
  %763 = sub i32 %762, %378
  %764 = add i32 %763, %379
  %765 = sub i32 %764, %380
  %766 = add i32 %765, %382
  %767 = add i32 %766, %385
  %768 = add i32 %767, %390
  %769 = add i32 %768, %391
  %770 = add i32 %769, %392
  %771 = sub i32 %770, %400
  %772 = add i32 %771, %401
  %773 = sub i32 %772, %404
  %774 = add i32 %773, %405
  %775 = sub i32 %774, %408
  %776 = sub i32 %775, %409
  %777 = add i32 %776, %411
  %778 = sub i32 %777, %412
  %779 = add i32 %778, %413
  %780 = sub i32 %779, %419
  %781 = add i32 %780, %420
  %782 = sub i32 %781, %421
  %783 = add i32 %782, %422
  %784 = add i32 %783, %423
  %785 = sub i32 %784, %424
  %786 = sub i32 %785, %425
  %787 = add i32 %786, %426
  %788 = sub i32 %787, %436
  %789 = add i32 %788, %437
  %790 = add i32 %789, %440
  %791 = add i32 %790, %441
  %792 = add i32 %791, %442
  %793 = sub i32 %792, %443
  %794 = sub i32 %793, %449
  %795 = sub i32 %794, %452
  %796 = add i32 %795, %454
  %797 = add i32 %796, %456
  %798 = sub i32 %797, %457
  %799 = add i32 %798, %458
  %800 = add i32 %799, %460
  %801 = sub i32 %800, %319
  %802 = sub i32 %801, %338
  %803 = sub i32 %802, %350
  %804 = sub i32 %803, %361
  %805 = sub i32 %804, %363
  %806 = sub i32 %805, %365
  %807 = sub i32 %806, %373
  %808 = sub i32 %807, %384
  %809 = add i32 %808, %389
  %810 = sub i32 %809, %396
  %811 = add i32 %810, %397
  %812 = sub i32 %811, %415
  %813 = sub i32 %812, %416
  %814 = add i32 %813, %431
  %815 = add i32 %814, %434
  %816 = sub i32 %815, %445
  %817 = sub i32 %816, %451
  %818 = add i32 %817, %453
  %819 = add i32 %818, %459
  %820 = add i32 %819, %462
  %821 = add i32 %820, %464
  %822 = add i32 %821, %466
  %823 = add i32 %822, %469
  %824 = add i32 %823, %471
  %825 = sub i32 %824, %345
  %826 = add i32 %825, %519
  %827 = add i32 %826, %523
  %828 = sub i32 %827, %359
  %829 = add i32 %828, %517
  %830 = add i32 %829, %514
  %831 = add i32 %830, %530
  %832 = add i32 %831, %507
  %833 = icmp eq i32 %18, %832
  %834 = select i1 %833, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %835 = tail call i32 @puts(i8* nonnull dereferenceable(1) %834)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
