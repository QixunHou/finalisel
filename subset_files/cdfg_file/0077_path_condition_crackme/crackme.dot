digraph "DFG for'crackme' function" {
	Node0xcc6a30[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0xcc6aa0[shape=record, label="  %4 = or i32 %3, %0"];
	Node0xcc6b60[shape=record, label="  %5 = mul i32 %4, -2"];
	Node0xcc6bd0[shape=record, label="  %6 = sub i32 %5, %3"];
	Node0xcc6c40[shape=record, label="  %7 = or i32 %1, %0"];
	Node0xcc6ce0[shape=record, label="  %8 = shl i32 %7, 2"];
	Node0xcc6d80[shape=record, label="  %9 = or i32 %8, 3"];
	Node0xcc6df0[shape=record, label="  %10 = and i32 %3, %0"];
	Node0xcc6e90[shape=record, label="  %11 = mul i32 %10, -5"];
	Node0xcc6f00[shape=record, label="  %12 = and i32 %1, %0"];
	Node0xcc6f70[shape=record, label="  %13 = shl i32 %12, 2"];
	Node0xcc7010[shape=record, label="  %14 = add i32 %0, 1"];
	Node0xcc7080[shape=record, label="  %15 = add i32 %14, %4"];
	Node0xcc70f0[shape=record, label="  %16 = add i32 %15, %11"];
	Node0xcc7160[shape=record, label="  %17 = sub i32 %16, %13"];
	Node0xcc71d0[shape=record, label="  %18 = add i32 %17, %9"];
	Node0xcc7240[shape=record, label="  %19 = icmp eq i32 %6, %18"];
	Node0xc67268[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xcc76e0[shape=record, label="  %21 = tail call i32 @puts(i8* nonnull dereferenceable(1) %20)"];
	Node0xcc7730[shape=record, label="  ret void"];
	Node0xcc6a30 -> Node0xcc6aa0;
	Node0xcc6aa0 -> Node0xcc6b60;
	Node0xcc6b60 -> Node0xcc6bd0;
	Node0xcc6bd0 -> Node0xcc6c40;
	Node0xcc6c40 -> Node0xcc6ce0;
	Node0xcc6ce0 -> Node0xcc6d80;
	Node0xcc6d80 -> Node0xcc6df0;
	Node0xcc6df0 -> Node0xcc6e90;
	Node0xcc6e90 -> Node0xcc6f00;
	Node0xcc6f00 -> Node0xcc6f70;
	Node0xcc6f70 -> Node0xcc7010;
	Node0xcc7010 -> Node0xcc7080;
	Node0xcc7080 -> Node0xcc70f0;
	Node0xcc70f0 -> Node0xcc7160;
	Node0xcc7160 -> Node0xcc71d0;
	Node0xcc71d0 -> Node0xcc7240;
	Node0xcc7240 -> Node0xc67268;
	Node0xc67268 -> Node0xcc76e0;
	Node0xcc76e0 -> Node0xcc7730;
edge [color=red]
	Node0xcc6a30 -> Node0xcc6aa0;
	Node0xcc6aa0 -> Node0xcc6b60;
	Node0xcc6b60 -> Node0xcc6bd0;
	Node0xcc6a30 -> Node0xcc6bd0;
	Node0xcc6c40 -> Node0xcc6ce0;
	Node0xcc6ce0 -> Node0xcc6d80;
	Node0xcc6a30 -> Node0xcc6df0;
	Node0xcc6df0 -> Node0xcc6e90;
	Node0xcc6f00 -> Node0xcc6f70;
	Node0xcc7010 -> Node0xcc7080;
	Node0xcc6aa0 -> Node0xcc7080;
	Node0xcc7080 -> Node0xcc70f0;
	Node0xcc6e90 -> Node0xcc70f0;
	Node0xcc70f0 -> Node0xcc7160;
	Node0xcc6f70 -> Node0xcc7160;
	Node0xcc7160 -> Node0xcc71d0;
	Node0xcc6d80 -> Node0xcc71d0;
	Node0xcc6bd0 -> Node0xcc7240;
	Node0xcc71d0 -> Node0xcc7240;
	Node0xcc7240 -> Node0xc67268;
	Node0xc67268 -> Node0xcc76e0;
}
