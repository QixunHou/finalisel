digraph "DFG for'crackme' function" {
	Node0x14cf600[shape=record, label="  %3 = or i32 %1, %0"];
	Node0x14cfcb0[shape=record, label="  %4 = xor i32 %1, -1"];
	Node0x14cfd70[shape=record, label="  %5 = and i32 %4, %0"];
	Node0x14cfde0[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x14cfe50[shape=record, label="  %7 = xor i32 %1, %0"];
	Node0x14cfec0[shape=record, label="  %8 = or i32 %4, %0"];
	Node0x14cff30[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x14cffa0[shape=record, label="  %10 = shl i32 %0, 1"];
	Node0x14d0040[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x14d00b0[shape=record, label="  %12 = add i32 %1, 1"];
	Node0x14d0120[shape=record, label="  %13 = xor i32 %3, -1"];
	Node0x14d01c0[shape=record, label="  %14 = mul i32 %13, -5"];
	Node0x14d0230[shape=record, label="  %15 = xor i32 %8, -1"];
	Node0x14d02a0[shape=record, label="  %16 = and i32 %1, %0"];
	Node0x14d0310[shape=record, label="  %17 = add i32 %16, %15"];
	Node0x14d03b0[shape=record, label="  %18 = mul i32 %17, -7"];
	Node0x14d0420[shape=record, label="  %19 = sub i32 %1, %5"];
	Node0x14d04c0[shape=record, label="  %20 = mul i32 %19, 3"];
	Node0x14d0530[shape=record, label="  %21 = add i32 %12, %0"];
	Node0x14d05a0[shape=record, label="  %22 = sub i32 %21, %3"];
	Node0x14d0610[shape=record, label="  %23 = add i32 %22, %6"];
	Node0x14d0680[shape=record, label="  %24 = add i32 %23, %7"];
	Node0x14d06f0[shape=record, label="  %25 = add i32 %24, %11"];
	Node0x14d0760[shape=record, label="  %26 = add i32 %25, %9"];
	Node0x14d07d0[shape=record, label="  %27 = add i32 %26, %14"];
	Node0x14d0840[shape=record, label="  %28 = add i32 %27, %18"];
	Node0x14d08b0[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x14d0920[shape=record, label="  %30 = icmp eq i32 %29, 1"];
	Node0x1470268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14d0dc0[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x14d1020[shape=record, label="  ret void"];
	Node0x14cf600 -> Node0x14cfcb0;
	Node0x14cfcb0 -> Node0x14cfd70;
	Node0x14cfd70 -> Node0x14cfde0;
	Node0x14cfde0 -> Node0x14cfe50;
	Node0x14cfe50 -> Node0x14cfec0;
	Node0x14cfec0 -> Node0x14cff30;
	Node0x14cff30 -> Node0x14cffa0;
	Node0x14cffa0 -> Node0x14d0040;
	Node0x14d0040 -> Node0x14d00b0;
	Node0x14d00b0 -> Node0x14d0120;
	Node0x14d0120 -> Node0x14d01c0;
	Node0x14d01c0 -> Node0x14d0230;
	Node0x14d0230 -> Node0x14d02a0;
	Node0x14d02a0 -> Node0x14d0310;
	Node0x14d0310 -> Node0x14d03b0;
	Node0x14d03b0 -> Node0x14d0420;
	Node0x14d0420 -> Node0x14d04c0;
	Node0x14d04c0 -> Node0x14d0530;
	Node0x14d0530 -> Node0x14d05a0;
	Node0x14d05a0 -> Node0x14d0610;
	Node0x14d0610 -> Node0x14d0680;
	Node0x14d0680 -> Node0x14d06f0;
	Node0x14d06f0 -> Node0x14d0760;
	Node0x14d0760 -> Node0x14d07d0;
	Node0x14d07d0 -> Node0x14d0840;
	Node0x14d0840 -> Node0x14d08b0;
	Node0x14d08b0 -> Node0x14d0920;
	Node0x14d0920 -> Node0x1470268;
	Node0x1470268 -> Node0x14d0dc0;
	Node0x14d0dc0 -> Node0x14d1020;
edge [color=red]
	Node0x14cfcb0 -> Node0x14cfd70;
	Node0x14cfd70 -> Node0x14cfde0;
	Node0x14cfcb0 -> Node0x14cfec0;
	Node0x14cfec0 -> Node0x14cff30;
	Node0x14cffa0 -> Node0x14d0040;
	Node0x14cf600 -> Node0x14d0120;
	Node0x14d0120 -> Node0x14d01c0;
	Node0x14cfec0 -> Node0x14d0230;
	Node0x14d02a0 -> Node0x14d0310;
	Node0x14d0230 -> Node0x14d0310;
	Node0x14d0310 -> Node0x14d03b0;
	Node0x14cfd70 -> Node0x14d0420;
	Node0x14d0420 -> Node0x14d04c0;
	Node0x14d00b0 -> Node0x14d0530;
	Node0x14d0530 -> Node0x14d05a0;
	Node0x14cf600 -> Node0x14d05a0;
	Node0x14d05a0 -> Node0x14d0610;
	Node0x14cfde0 -> Node0x14d0610;
	Node0x14d0610 -> Node0x14d0680;
	Node0x14cfe50 -> Node0x14d0680;
	Node0x14d0680 -> Node0x14d06f0;
	Node0x14d0040 -> Node0x14d06f0;
	Node0x14d06f0 -> Node0x14d0760;
	Node0x14cff30 -> Node0x14d0760;
	Node0x14d0760 -> Node0x14d07d0;
	Node0x14d01c0 -> Node0x14d07d0;
	Node0x14d07d0 -> Node0x14d0840;
	Node0x14d03b0 -> Node0x14d0840;
	Node0x14d0840 -> Node0x14d08b0;
	Node0x14d04c0 -> Node0x14d08b0;
	Node0x14d08b0 -> Node0x14d0920;
	Node0x14d0920 -> Node0x1470268;
	Node0x1470268 -> Node0x14d0dc0;
}
