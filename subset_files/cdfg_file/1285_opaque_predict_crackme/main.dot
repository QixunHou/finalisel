digraph "DFG for'main' function" {
	Node0xd09088[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd09108[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd09198[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xd091f8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xd09678[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd09758[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xd09858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd09918[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xd099c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd09c28[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xd09ce8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd09e48[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd09ea8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xd0f1f0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xd0f3f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd0f558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd0f668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd0f728[shape=record, label="  ret i32 0"];
	Node0xd09088 -> Node0xd09108;
	Node0xd09108 -> Node0xd09198;
	Node0xd09198 -> Node0xd091f8;
	Node0xd091f8 -> Node0xd09678;
	Node0xd09678 -> Node0xd09758;
	Node0xd09758 -> Node0xd09858;
	Node0xd09858 -> Node0xd09918;
	Node0xd09918 -> Node0xd099c8;
	Node0xd099c8 -> Node0xd09c28;
	Node0xd09c28 -> Node0xd09ce8;
	Node0xd09ce8 -> Node0xd09e48;
	Node0xd09e48 -> Node0xd09ea8;
	Node0xd09ea8 -> Node0xd0f1f0;
	Node0xd0f1f0 -> Node0xd0f3f8;
	Node0xd0f3f8 -> Node0xd0f558;
	Node0xd0f558 -> Node0xd0f668;
	Node0xd0f668 -> Node0xd0f728;
edge [color=red]
	Node0xd09088 -> Node0xd091f8;
	Node0xd091f8 -> Node0xd09678;
	Node0xd09108 -> Node0xd09758;
	Node0xd09758 -> Node0xd09858;
	Node0xd09198 -> Node0xd09918;
	Node0xd09918 -> Node0xd099c8;
	Node0xd09088 -> Node0xd09c28;
	Node0xd09108 -> Node0xd09c28;
	Node0xd09198 -> Node0xd09c28;
	Node0xd09088 -> Node0xd09ce8;
	Node0xd09108 -> Node0xd09e48;
	Node0xd09198 -> Node0xd09ea8;
	Node0xd09ce8 -> Node0xd0f1f0;
	Node0xd09e48 -> Node0xd0f1f0;
	Node0xd09ea8 -> Node0xd0f1f0;
	Node0xd09918 -> Node0xd0f3f8;
	Node0xd09758 -> Node0xd0f558;
	Node0xd091f8 -> Node0xd0f668;
}
