digraph "DFG for'crackme' function" {
	Node0x2355030[shape=record, label="  %5 = xor i32 %0, -1"];
	Node0x23550a0[shape=record, label="  %6 = or i32 %5, %3"];
	Node0x2355110[shape=record, label="  %7 = add i32 %6, %2"];
	Node0x2355180[shape=record, label="  %8 = xor i32 %2, -1"];
	Node0x23551f0[shape=record, label="  %9 = xor i32 %2, %1"];
	Node0x2355260[shape=record, label="  %10 = or i32 %8, %1"];
	Node0x2355300[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x23553a0[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x2355410[shape=record, label="  %13 = and i32 %8, %1"];
	Node0x2355480[shape=record, label="  %14 = or i32 %3, %0"];
	Node0x23554f0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x2355560[shape=record, label="  %16 = xor i32 %3, %0"];
	Node0x23555d0[shape=record, label="  %17 = and i32 %3, %0"];
	Node0x2355640[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x23556b0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x2355720[shape=record, label="  %20 = xor i32 %15, -2"];
	Node0x2355790[shape=record, label="  %21 = and i32 %5, %3"];
	Node0x2355830[shape=record, label="  %22 = shl i32 %17, 2"];
	Node0x23558a0[shape=record, label="  %23 = add i32 %21, %5"];
	Node0x2355910[shape=record, label="  %24 = add i32 %23, %16"];
	Node0x2355980[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x23559f0[shape=record, label="  %26 = sub i32 -2, %6"];
	Node0x2355a90[shape=record, label="  %27 = mul i32 %26, 3"];
	Node0x2355b00[shape=record, label="  %28 = add i32 %2, 3"];
	Node0x2355b70[shape=record, label="  %29 = add i32 %28, %9"];
	Node0x2355be0[shape=record, label="  %30 = sub i32 %29, %10"];
	Node0x2355c50[shape=record, label="  %31 = sub i32 %30, %13"];
	Node0x2355cc0[shape=record, label="  %32 = sub i32 %31, %12"];
	Node0x2355f40[shape=record, label="  %33 = sub i32 %32, %15"];
	Node0x2355fb0[shape=record, label="  %34 = add i32 %33, %22"];
	Node0x2356020[shape=record, label="  %35 = sub i32 %34, %19"];
	Node0x2356090[shape=record, label="  %36 = add i32 %35, %20"];
	Node0x2356100[shape=record, label="  %37 = add i32 %36, %27"];
	Node0x2356170[shape=record, label="  %38 = add i32 %37, %25"];
	Node0x23561e0[shape=record, label="  %39 = icmp eq i32 %7, %38"];
	Node0x22f5268[shape=record, label="  %40 = select i1 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2356680[shape=record, label="  %41 = tail call i32 @puts(i8* nonnull dereferenceable(1) %40)"];
	Node0x23566d0[shape=record, label="  ret void"];
	Node0x2355030 -> Node0x23550a0;
	Node0x23550a0 -> Node0x2355110;
	Node0x2355110 -> Node0x2355180;
	Node0x2355180 -> Node0x23551f0;
	Node0x23551f0 -> Node0x2355260;
	Node0x2355260 -> Node0x2355300;
	Node0x2355300 -> Node0x23553a0;
	Node0x23553a0 -> Node0x2355410;
	Node0x2355410 -> Node0x2355480;
	Node0x2355480 -> Node0x23554f0;
	Node0x23554f0 -> Node0x2355560;
	Node0x2355560 -> Node0x23555d0;
	Node0x23555d0 -> Node0x2355640;
	Node0x2355640 -> Node0x23556b0;
	Node0x23556b0 -> Node0x2355720;
	Node0x2355720 -> Node0x2355790;
	Node0x2355790 -> Node0x2355830;
	Node0x2355830 -> Node0x23558a0;
	Node0x23558a0 -> Node0x2355910;
	Node0x2355910 -> Node0x2355980;
	Node0x2355980 -> Node0x23559f0;
	Node0x23559f0 -> Node0x2355a90;
	Node0x2355a90 -> Node0x2355b00;
	Node0x2355b00 -> Node0x2355b70;
	Node0x2355b70 -> Node0x2355be0;
	Node0x2355be0 -> Node0x2355c50;
	Node0x2355c50 -> Node0x2355cc0;
	Node0x2355cc0 -> Node0x2355f40;
	Node0x2355f40 -> Node0x2355fb0;
	Node0x2355fb0 -> Node0x2356020;
	Node0x2356020 -> Node0x2356090;
	Node0x2356090 -> Node0x2356100;
	Node0x2356100 -> Node0x2356170;
	Node0x2356170 -> Node0x23561e0;
	Node0x23561e0 -> Node0x22f5268;
	Node0x22f5268 -> Node0x2356680;
	Node0x2356680 -> Node0x23566d0;
edge [color=red]
	Node0x2355030 -> Node0x23550a0;
	Node0x23550a0 -> Node0x2355110;
	Node0x2355180 -> Node0x2355260;
	Node0x2355260 -> Node0x2355300;
	Node0x2355300 -> Node0x23553a0;
	Node0x2355180 -> Node0x2355410;
	Node0x2355480 -> Node0x23554f0;
	Node0x23555d0 -> Node0x2355640;
	Node0x2355640 -> Node0x23556b0;
	Node0x23554f0 -> Node0x2355720;
	Node0x2355030 -> Node0x2355790;
	Node0x23555d0 -> Node0x2355830;
	Node0x2355790 -> Node0x23558a0;
	Node0x2355030 -> Node0x23558a0;
	Node0x23558a0 -> Node0x2355910;
	Node0x2355560 -> Node0x2355910;
	Node0x2355910 -> Node0x2355980;
	Node0x23550a0 -> Node0x23559f0;
	Node0x23559f0 -> Node0x2355a90;
	Node0x2355b00 -> Node0x2355b70;
	Node0x23551f0 -> Node0x2355b70;
	Node0x2355b70 -> Node0x2355be0;
	Node0x2355260 -> Node0x2355be0;
	Node0x2355be0 -> Node0x2355c50;
	Node0x2355410 -> Node0x2355c50;
	Node0x2355c50 -> Node0x2355cc0;
	Node0x23553a0 -> Node0x2355cc0;
	Node0x2355cc0 -> Node0x2355f40;
	Node0x23554f0 -> Node0x2355f40;
	Node0x2355f40 -> Node0x2355fb0;
	Node0x2355830 -> Node0x2355fb0;
	Node0x2355fb0 -> Node0x2356020;
	Node0x23556b0 -> Node0x2356020;
	Node0x2356020 -> Node0x2356090;
	Node0x2355720 -> Node0x2356090;
	Node0x2356090 -> Node0x2356100;
	Node0x2355a90 -> Node0x2356100;
	Node0x2356100 -> Node0x2356170;
	Node0x2355980 -> Node0x2356170;
	Node0x2355110 -> Node0x23561e0;
	Node0x2356170 -> Node0x23561e0;
	Node0x23561e0 -> Node0x22f5268;
	Node0x22f5268 -> Node0x2356680;
}
