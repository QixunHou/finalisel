digraph "DFG for'main' function" {
	Node0xc91e28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc91ea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc91f38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xc91f98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xc92048[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xc92478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc92558[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xc92658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc92718[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xc927c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xc92888[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xc92938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xc8c7e0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xc92b38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc93aa8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc94118[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xc94178[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xc94288[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xc944e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xc94648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xc94758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc94868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc94928[shape=record, label="  ret i32 0"];
	Node0xc91e28 -> Node0xc91ea8;
	Node0xc91ea8 -> Node0xc91f38;
	Node0xc91f38 -> Node0xc91f98;
	Node0xc91f98 -> Node0xc92048;
	Node0xc92048 -> Node0xc92478;
	Node0xc92478 -> Node0xc92558;
	Node0xc92558 -> Node0xc92658;
	Node0xc92658 -> Node0xc92718;
	Node0xc92718 -> Node0xc927c8;
	Node0xc927c8 -> Node0xc92888;
	Node0xc92888 -> Node0xc92938;
	Node0xc92938 -> Node0xc8c7e0;
	Node0xc8c7e0 -> Node0xc92b38;
	Node0xc92b38 -> Node0xc93aa8;
	Node0xc93aa8 -> Node0xc94118;
	Node0xc94118 -> Node0xc94178;
	Node0xc94178 -> Node0xc94288;
	Node0xc94288 -> Node0xc944e8;
	Node0xc944e8 -> Node0xc94648;
	Node0xc94648 -> Node0xc94758;
	Node0xc94758 -> Node0xc94868;
	Node0xc94868 -> Node0xc94928;
edge [color=red]
	Node0xc91e28 -> Node0xc92048;
	Node0xc92048 -> Node0xc92478;
	Node0xc91ea8 -> Node0xc92558;
	Node0xc92558 -> Node0xc92658;
	Node0xc91f38 -> Node0xc92718;
	Node0xc92718 -> Node0xc927c8;
	Node0xc91f98 -> Node0xc92888;
	Node0xc92888 -> Node0xc92938;
	Node0xc91e28 -> Node0xc8c7e0;
	Node0xc91ea8 -> Node0xc8c7e0;
	Node0xc91f38 -> Node0xc8c7e0;
	Node0xc91f98 -> Node0xc8c7e0;
	Node0xc91e28 -> Node0xc92b38;
	Node0xc91ea8 -> Node0xc93aa8;
	Node0xc91f38 -> Node0xc94118;
	Node0xc91f98 -> Node0xc94178;
	Node0xc92b38 -> Node0xc94288;
	Node0xc93aa8 -> Node0xc94288;
	Node0xc94118 -> Node0xc94288;
	Node0xc94178 -> Node0xc94288;
	Node0xc92888 -> Node0xc944e8;
	Node0xc92718 -> Node0xc94648;
	Node0xc92558 -> Node0xc94758;
	Node0xc92048 -> Node0xc94868;
}
