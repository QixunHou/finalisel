digraph "DFG for'crackme' function" {
	Node0xc8fdc0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xc8fe30[shape=record, label="  %6 = and i32 %5, %1"];
	Node0xc8fed0[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0xc8ff70[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0xc8ffe0[shape=record, label="  %9 = shl i32 %0, 1"];
	Node0xc90080[shape=record, label="  %10 = add i32 %9, 2"];
	Node0xc900f0[shape=record, label="  %11 = sub i32 %10, %8"];
	Node0xc90160[shape=record, label="  %12 = or i32 %2, %1"];
	Node0xc901d0[shape=record, label="  %13 = xor i32 %2, %1"];
	Node0xc90240[shape=record, label="  %14 = or i32 %5, %1"];
	Node0xc902e0[shape=record, label="  %15 = mul i32 %14, -5"];
	Node0xc90350[shape=record, label="  %16 = shl i32 %13, 1"];
	Node0xc903c0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0xc90430[shape=record, label="  %18 = add i32 %2, 1"];
	Node0xc904a0[shape=record, label="  %19 = shl i32 %12, 2"];
	Node0xc90540[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0xc905b0[shape=record, label="  %21 = xor i32 %14, -1"];
	Node0xc90650[shape=record, label="  %22 = mul i32 %21, -3"];
	Node0xc906f0[shape=record, label="  %23 = mul i32 %6, 7"];
	Node0xc90760[shape=record, label="  %24 = and i32 %2, %1"];
	Node0xc907d0[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0xc90840[shape=record, label="  %26 = xor i32 %3, %0"];
	Node0xc908b0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0xc90920[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0xc90990[shape=record, label="  %29 = xor i32 %0, -1"];
	Node0xc90a00[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0xc90a70[shape=record, label="  %31 = and i32 %3, %0"];
	Node0xc90ae0[shape=record, label="  %32 = or i32 %3, %0"];
	Node0xc90d60[shape=record, label="  %33 = shl i32 %32, 2"];
	Node0xc90dd0[shape=record, label="  %34 = xor i32 %33, -4"];
	Node0xc90e40[shape=record, label="  %35 = and i32 %29, %3"];
	Node0xc90eb0[shape=record, label="  %36 = shl i32 %35, 2"];
	Node0xc90f20[shape=record, label="  %37 = shl i32 %31, 1"];
	Node0xc90f90[shape=record, label="  %38 = sub i32 %30, %1"];
	Node0xc91000[shape=record, label="  %39 = add i32 %38, %2"];
	Node0xc91070[shape=record, label="  %40 = add i32 %39, %18"];
	Node0xc910e0[shape=record, label="  %41 = sub i32 %40, %13"];
	Node0xc91150[shape=record, label="  %42 = sub i32 %41, %12"];
	Node0xc911c0[shape=record, label="  %43 = add i32 %42, %15"];
	Node0xc91230[shape=record, label="  %44 = add i32 %43, %22"];
	Node0xc912a0[shape=record, label="  %45 = add i32 %44, %23"];
	Node0xc91310[shape=record, label="  %46 = add i32 %45, %25"];
	Node0xc91380[shape=record, label="  %47 = add i32 %46, %31"];
	Node0xc913f0[shape=record, label="  %48 = add i32 %47, %32"];
	Node0xc91460[shape=record, label="  %49 = add i32 %48, %26"];
	Node0xc914d0[shape=record, label="  %50 = sub i32 %49, %17"];
	Node0xc91540[shape=record, label="  %51 = add i32 %50, %20"];
	Node0xc915b0[shape=record, label="  %52 = sub i32 %51, %36"];
	Node0xc91620[shape=record, label="  %53 = sub i32 %52, %37"];
	Node0xc91690[shape=record, label="  %54 = add i32 %53, %28"];
	Node0xc91700[shape=record, label="  %55 = sub i32 %54, %34"];
	Node0xc91770[shape=record, label="  %56 = icmp eq i32 %11, %55"];
	Node0xc30268[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc91c10[shape=record, label="  %58 = tail call i32 @puts(i8* nonnull dereferenceable(1) %57)"];
	Node0xc91c60[shape=record, label="  ret void"];
	Node0xc8fdc0 -> Node0xc8fe30;
	Node0xc8fe30 -> Node0xc8fed0;
	Node0xc8fed0 -> Node0xc8ff70;
	Node0xc8ff70 -> Node0xc8ffe0;
	Node0xc8ffe0 -> Node0xc90080;
	Node0xc90080 -> Node0xc900f0;
	Node0xc900f0 -> Node0xc90160;
	Node0xc90160 -> Node0xc901d0;
	Node0xc901d0 -> Node0xc90240;
	Node0xc90240 -> Node0xc902e0;
	Node0xc902e0 -> Node0xc90350;
	Node0xc90350 -> Node0xc903c0;
	Node0xc903c0 -> Node0xc90430;
	Node0xc90430 -> Node0xc904a0;
	Node0xc904a0 -> Node0xc90540;
	Node0xc90540 -> Node0xc905b0;
	Node0xc905b0 -> Node0xc90650;
	Node0xc90650 -> Node0xc906f0;
	Node0xc906f0 -> Node0xc90760;
	Node0xc90760 -> Node0xc907d0;
	Node0xc907d0 -> Node0xc90840;
	Node0xc90840 -> Node0xc908b0;
	Node0xc908b0 -> Node0xc90920;
	Node0xc90920 -> Node0xc90990;
	Node0xc90990 -> Node0xc90a00;
	Node0xc90a00 -> Node0xc90a70;
	Node0xc90a70 -> Node0xc90ae0;
	Node0xc90ae0 -> Node0xc90d60;
	Node0xc90d60 -> Node0xc90dd0;
	Node0xc90dd0 -> Node0xc90e40;
	Node0xc90e40 -> Node0xc90eb0;
	Node0xc90eb0 -> Node0xc90f20;
	Node0xc90f20 -> Node0xc90f90;
	Node0xc90f90 -> Node0xc91000;
	Node0xc91000 -> Node0xc91070;
	Node0xc91070 -> Node0xc910e0;
	Node0xc910e0 -> Node0xc91150;
	Node0xc91150 -> Node0xc911c0;
	Node0xc911c0 -> Node0xc91230;
	Node0xc91230 -> Node0xc912a0;
	Node0xc912a0 -> Node0xc91310;
	Node0xc91310 -> Node0xc91380;
	Node0xc91380 -> Node0xc913f0;
	Node0xc913f0 -> Node0xc91460;
	Node0xc91460 -> Node0xc914d0;
	Node0xc914d0 -> Node0xc91540;
	Node0xc91540 -> Node0xc915b0;
	Node0xc915b0 -> Node0xc91620;
	Node0xc91620 -> Node0xc91690;
	Node0xc91690 -> Node0xc91700;
	Node0xc91700 -> Node0xc91770;
	Node0xc91770 -> Node0xc30268;
	Node0xc30268 -> Node0xc91c10;
	Node0xc91c10 -> Node0xc91c60;
edge [color=red]
	Node0xc8fdc0 -> Node0xc8fe30;
	Node0xc8fe30 -> Node0xc8fed0;
	Node0xc8fed0 -> Node0xc8ff70;
	Node0xc8ffe0 -> Node0xc90080;
	Node0xc90080 -> Node0xc900f0;
	Node0xc8ff70 -> Node0xc900f0;
	Node0xc8fdc0 -> Node0xc90240;
	Node0xc90240 -> Node0xc902e0;
	Node0xc901d0 -> Node0xc90350;
	Node0xc90350 -> Node0xc903c0;
	Node0xc90160 -> Node0xc904a0;
	Node0xc904a0 -> Node0xc90540;
	Node0xc90240 -> Node0xc905b0;
	Node0xc905b0 -> Node0xc90650;
	Node0xc8fe30 -> Node0xc906f0;
	Node0xc90760 -> Node0xc907d0;
	Node0xc90840 -> Node0xc908b0;
	Node0xc908b0 -> Node0xc90920;
	Node0xc90990 -> Node0xc90a00;
	Node0xc90ae0 -> Node0xc90d60;
	Node0xc90d60 -> Node0xc90dd0;
	Node0xc90990 -> Node0xc90e40;
	Node0xc90e40 -> Node0xc90eb0;
	Node0xc90a70 -> Node0xc90f20;
	Node0xc90a00 -> Node0xc90f90;
	Node0xc90f90 -> Node0xc91000;
	Node0xc91000 -> Node0xc91070;
	Node0xc90430 -> Node0xc91070;
	Node0xc91070 -> Node0xc910e0;
	Node0xc901d0 -> Node0xc910e0;
	Node0xc910e0 -> Node0xc91150;
	Node0xc90160 -> Node0xc91150;
	Node0xc91150 -> Node0xc911c0;
	Node0xc902e0 -> Node0xc911c0;
	Node0xc911c0 -> Node0xc91230;
	Node0xc90650 -> Node0xc91230;
	Node0xc91230 -> Node0xc912a0;
	Node0xc906f0 -> Node0xc912a0;
	Node0xc912a0 -> Node0xc91310;
	Node0xc907d0 -> Node0xc91310;
	Node0xc91310 -> Node0xc91380;
	Node0xc90a70 -> Node0xc91380;
	Node0xc91380 -> Node0xc913f0;
	Node0xc90ae0 -> Node0xc913f0;
	Node0xc913f0 -> Node0xc91460;
	Node0xc90840 -> Node0xc91460;
	Node0xc91460 -> Node0xc914d0;
	Node0xc903c0 -> Node0xc914d0;
	Node0xc914d0 -> Node0xc91540;
	Node0xc90540 -> Node0xc91540;
	Node0xc91540 -> Node0xc915b0;
	Node0xc90eb0 -> Node0xc915b0;
	Node0xc915b0 -> Node0xc91620;
	Node0xc90f20 -> Node0xc91620;
	Node0xc91620 -> Node0xc91690;
	Node0xc90920 -> Node0xc91690;
	Node0xc91690 -> Node0xc91700;
	Node0xc90dd0 -> Node0xc91700;
	Node0xc900f0 -> Node0xc91770;
	Node0xc91700 -> Node0xc91770;
	Node0xc91770 -> Node0xc30268;
	Node0xc30268 -> Node0xc91c10;
}
