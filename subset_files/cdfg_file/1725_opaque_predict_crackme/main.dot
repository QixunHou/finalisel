digraph "DFG for'main' function" {
	Node0x1f27488[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f27508[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f27598[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f275f8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1f27a78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f27b58[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1f27c58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f27d18[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1f27dc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f28028[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1f280e8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f28248[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f282a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f2e420[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1f2e628[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f2e788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f2e898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f2e958[shape=record, label="  ret i32 0"];
	Node0x1f27488 -> Node0x1f27508;
	Node0x1f27508 -> Node0x1f27598;
	Node0x1f27598 -> Node0x1f275f8;
	Node0x1f275f8 -> Node0x1f27a78;
	Node0x1f27a78 -> Node0x1f27b58;
	Node0x1f27b58 -> Node0x1f27c58;
	Node0x1f27c58 -> Node0x1f27d18;
	Node0x1f27d18 -> Node0x1f27dc8;
	Node0x1f27dc8 -> Node0x1f28028;
	Node0x1f28028 -> Node0x1f280e8;
	Node0x1f280e8 -> Node0x1f28248;
	Node0x1f28248 -> Node0x1f282a8;
	Node0x1f282a8 -> Node0x1f2e420;
	Node0x1f2e420 -> Node0x1f2e628;
	Node0x1f2e628 -> Node0x1f2e788;
	Node0x1f2e788 -> Node0x1f2e898;
	Node0x1f2e898 -> Node0x1f2e958;
edge [color=red]
	Node0x1f27488 -> Node0x1f275f8;
	Node0x1f275f8 -> Node0x1f27a78;
	Node0x1f27508 -> Node0x1f27b58;
	Node0x1f27b58 -> Node0x1f27c58;
	Node0x1f27598 -> Node0x1f27d18;
	Node0x1f27d18 -> Node0x1f27dc8;
	Node0x1f27488 -> Node0x1f28028;
	Node0x1f27508 -> Node0x1f28028;
	Node0x1f27598 -> Node0x1f28028;
	Node0x1f27488 -> Node0x1f280e8;
	Node0x1f27508 -> Node0x1f28248;
	Node0x1f27598 -> Node0x1f282a8;
	Node0x1f280e8 -> Node0x1f2e420;
	Node0x1f28248 -> Node0x1f2e420;
	Node0x1f282a8 -> Node0x1f2e420;
	Node0x1f27d18 -> Node0x1f2e628;
	Node0x1f27b58 -> Node0x1f2e788;
	Node0x1f275f8 -> Node0x1f2e898;
}
