digraph "DFG for'crackme' function" {
	Node0x942a00[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x942a70[shape=record, label="  %4 = or i32 %3, %0"];
	Node0x942b30[shape=record, label="  %5 = xor i32 %1, %0"];
	Node0x942ba0[shape=record, label="  %6 = or i32 %1, %0"];
	Node0x942c10[shape=record, label="  %7 = shl i32 %4, 2"];
	Node0x942cb0[shape=record, label="  %8 = xor i32 %7, -4"];
	Node0x942d20[shape=record, label="  %9 = and i32 %1, %0"];
	Node0x942d90[shape=record, label="  %10 = add i32 %3, %0"];
	Node0x942e00[shape=record, label="  %11 = add i32 %10, %9"];
	Node0x942ea0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x942f10[shape=record, label="  %13 = sub i32 1, %1"];
	Node0x942f80[shape=record, label="  %14 = sub i32 %13, %5"];
	Node0x942ff0[shape=record, label="  %15 = sub i32 %14, %6"];
	Node0x943060[shape=record, label="  %16 = add i32 %15, %8"];
	Node0x9430d0[shape=record, label="  %17 = add i32 %16, %12"];
	Node0x943140[shape=record, label="  %18 = icmp eq i32 %4, %17"];
	Node0x8e3268[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x9435e0[shape=record, label="  %20 = tail call i32 @puts(i8* nonnull dereferenceable(1) %19)"];
	Node0x943630[shape=record, label="  ret void"];
	Node0x942a00 -> Node0x942a70;
	Node0x942a70 -> Node0x942b30;
	Node0x942b30 -> Node0x942ba0;
	Node0x942ba0 -> Node0x942c10;
	Node0x942c10 -> Node0x942cb0;
	Node0x942cb0 -> Node0x942d20;
	Node0x942d20 -> Node0x942d90;
	Node0x942d90 -> Node0x942e00;
	Node0x942e00 -> Node0x942ea0;
	Node0x942ea0 -> Node0x942f10;
	Node0x942f10 -> Node0x942f80;
	Node0x942f80 -> Node0x942ff0;
	Node0x942ff0 -> Node0x943060;
	Node0x943060 -> Node0x9430d0;
	Node0x9430d0 -> Node0x943140;
	Node0x943140 -> Node0x8e3268;
	Node0x8e3268 -> Node0x9435e0;
	Node0x9435e0 -> Node0x943630;
edge [color=red]
	Node0x942a00 -> Node0x942a70;
	Node0x942a70 -> Node0x942c10;
	Node0x942c10 -> Node0x942cb0;
	Node0x942a00 -> Node0x942d90;
	Node0x942d90 -> Node0x942e00;
	Node0x942d20 -> Node0x942e00;
	Node0x942e00 -> Node0x942ea0;
	Node0x942f10 -> Node0x942f80;
	Node0x942b30 -> Node0x942f80;
	Node0x942f80 -> Node0x942ff0;
	Node0x942ba0 -> Node0x942ff0;
	Node0x942ff0 -> Node0x943060;
	Node0x942cb0 -> Node0x943060;
	Node0x943060 -> Node0x9430d0;
	Node0x942ea0 -> Node0x9430d0;
	Node0x942a70 -> Node0x943140;
	Node0x9430d0 -> Node0x943140;
	Node0x943140 -> Node0x8e3268;
	Node0x8e3268 -> Node0x9435e0;
}
