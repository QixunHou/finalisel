digraph "DFG for'main' function" {
	Node0x1b92c28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b92ca8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b92d38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1b93198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1b93278[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1b93398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b935d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1b93688[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b945f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b94c80[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1b94cf0[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x1b94d60[shape=record, label="  %10 = add i32 %9, 1"];
	Node0x1b94dd0[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x1b94e40[shape=record, label="  %12 = shl i32 %8, 1"];
	Node0x1b94eb0[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x1b94f20[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1b94f90[shape=record, label="  %15 = and i32 %7, %6"];
	Node0x1b95000[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x1b95070[shape=record, label="  %17 = add i32 %13, 1"];
	Node0x1b950e0[shape=record, label="  %18 = xor i32 %6, -1"];
	Node0x1b95150[shape=record, label="  %19 = and i32 %7, %18"];
	Node0x1b951c0[shape=record, label="  %20 = add i32 %17, %15"];
	Node0x1b95230[shape=record, label="  %21 = mul i32 %20, 3"];
	Node0x1b952a0[shape=record, label="  %22 = sub i32 1, %7"];
	Node0x1b95310[shape=record, label="  %23 = add i32 %22, %11"];
	Node0x1b95380[shape=record, label="  %24 = add i32 %23, %12"];
	Node0x1b953f0[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x1b95460[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x1b954d0[shape=record, label="  %27 = sub i32 %26, %9"];
	Node0x1b95540[shape=record, label="  %28 = sub i32 %27, %14"];
	Node0x1b955b0[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x1b95620[shape=record, label="  %30 = icmp eq i32 %10, %29"];
	Node0x1b339d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1b956b0[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x1b95b18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b95c78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1b95d38[shape=record, label="  ret i32 0"];
	Node0x1b92c28 -> Node0x1b92ca8;
	Node0x1b92ca8 -> Node0x1b92d38;
	Node0x1b92d38 -> Node0x1b93198;
	Node0x1b93198 -> Node0x1b93278;
	Node0x1b93278 -> Node0x1b93398;
	Node0x1b93398 -> Node0x1b935d0;
	Node0x1b935d0 -> Node0x1b93688;
	Node0x1b93688 -> Node0x1b945f8;
	Node0x1b945f8 -> Node0x1b94c80;
	Node0x1b94c80 -> Node0x1b94cf0;
	Node0x1b94cf0 -> Node0x1b94d60;
	Node0x1b94d60 -> Node0x1b94dd0;
	Node0x1b94dd0 -> Node0x1b94e40;
	Node0x1b94e40 -> Node0x1b94eb0;
	Node0x1b94eb0 -> Node0x1b94f20;
	Node0x1b94f20 -> Node0x1b94f90;
	Node0x1b94f90 -> Node0x1b95000;
	Node0x1b95000 -> Node0x1b95070;
	Node0x1b95070 -> Node0x1b950e0;
	Node0x1b950e0 -> Node0x1b95150;
	Node0x1b95150 -> Node0x1b951c0;
	Node0x1b951c0 -> Node0x1b95230;
	Node0x1b95230 -> Node0x1b952a0;
	Node0x1b952a0 -> Node0x1b95310;
	Node0x1b95310 -> Node0x1b95380;
	Node0x1b95380 -> Node0x1b953f0;
	Node0x1b953f0 -> Node0x1b95460;
	Node0x1b95460 -> Node0x1b954d0;
	Node0x1b954d0 -> Node0x1b95540;
	Node0x1b95540 -> Node0x1b955b0;
	Node0x1b955b0 -> Node0x1b95620;
	Node0x1b95620 -> Node0x1b339d8;
	Node0x1b339d8 -> Node0x1b956b0;
	Node0x1b956b0 -> Node0x1b95b18;
	Node0x1b95b18 -> Node0x1b95c78;
	Node0x1b95c78 -> Node0x1b95d38;
edge [color=red]
	Node0x1b92c28 -> Node0x1b92d38;
	Node0x1b92d38 -> Node0x1b93198;
	Node0x1b92ca8 -> Node0x1b93278;
	Node0x1b93278 -> Node0x1b93398;
	Node0x1b92c28 -> Node0x1b935d0;
	Node0x1b92ca8 -> Node0x1b935d0;
	Node0x1b92c28 -> Node0x1b93688;
	Node0x1b92ca8 -> Node0x1b945f8;
	Node0x1b945f8 -> Node0x1b94c80;
	Node0x1b93688 -> Node0x1b94cf0;
	Node0x1b94c80 -> Node0x1b94cf0;
	Node0x1b94cf0 -> Node0x1b94d60;
	Node0x1b945f8 -> Node0x1b94dd0;
	Node0x1b93688 -> Node0x1b94dd0;
	Node0x1b94c80 -> Node0x1b94e40;
	Node0x1b945f8 -> Node0x1b94eb0;
	Node0x1b93688 -> Node0x1b94eb0;
	Node0x1b94eb0 -> Node0x1b94f20;
	Node0x1b945f8 -> Node0x1b94f90;
	Node0x1b93688 -> Node0x1b94f90;
	Node0x1b94f90 -> Node0x1b95000;
	Node0x1b94eb0 -> Node0x1b95070;
	Node0x1b93688 -> Node0x1b950e0;
	Node0x1b945f8 -> Node0x1b95150;
	Node0x1b950e0 -> Node0x1b95150;
	Node0x1b95070 -> Node0x1b951c0;
	Node0x1b94f90 -> Node0x1b951c0;
	Node0x1b951c0 -> Node0x1b95230;
	Node0x1b945f8 -> Node0x1b952a0;
	Node0x1b952a0 -> Node0x1b95310;
	Node0x1b94dd0 -> Node0x1b95310;
	Node0x1b95310 -> Node0x1b95380;
	Node0x1b94e40 -> Node0x1b95380;
	Node0x1b95380 -> Node0x1b953f0;
	Node0x1b95000 -> Node0x1b953f0;
	Node0x1b953f0 -> Node0x1b95460;
	Node0x1b95150 -> Node0x1b95460;
	Node0x1b95460 -> Node0x1b954d0;
	Node0x1b94cf0 -> Node0x1b954d0;
	Node0x1b954d0 -> Node0x1b95540;
	Node0x1b94f20 -> Node0x1b95540;
	Node0x1b95540 -> Node0x1b955b0;
	Node0x1b95230 -> Node0x1b955b0;
	Node0x1b94d60 -> Node0x1b95620;
	Node0x1b955b0 -> Node0x1b95620;
	Node0x1b95620 -> Node0x1b339d8;
	Node0x1b339d8 -> Node0x1b956b0;
	Node0x1b93278 -> Node0x1b95b18;
	Node0x1b92d38 -> Node0x1b95c78;
}
