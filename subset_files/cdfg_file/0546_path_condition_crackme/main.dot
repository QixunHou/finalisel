digraph "DFG for'main' function" {
	Node0xb14938[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb149b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb14a48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb14aa8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xb14b58[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xb14f88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb15068[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xb15168[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb15228[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xb152d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb15398[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xb15448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb0fa80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xb15648[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb165b8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb16c28[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb16c88[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xb16d00[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0xb16d70[shape=record, label="  %15 = add i32 %12, 1"];
	Node0xb16de0[shape=record, label="  %16 = or i32 %11, %14"];
	Node0xb16e50[shape=record, label="  %17 = sub i32 %15, %16"];
	Node0xb16ec0[shape=record, label="  %18 = xor i32 %10, -1"];
	Node0xb16f30[shape=record, label="  %19 = or i32 %13, %18"];
	Node0xb16fa0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0xb17010[shape=record, label="  %21 = sub i32 %17, %20"];
	Node0xb17080[shape=record, label="  %22 = and i32 %12, %11"];
	Node0xb170f0[shape=record, label="  %23 = shl i32 %11, 1"];
	Node0xb17160[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0xb171d0[shape=record, label="  %25 = or i32 %12, %11"];
	Node0xb17240[shape=record, label="  %26 = and i32 %11, %14"];
	Node0xb172b0[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0xb17320[shape=record, label="  %28 = xor i32 %25, -1"];
	Node0xb17390[shape=record, label="  %29 = mul i32 %28, -6"];
	Node0xb17400[shape=record, label="  %30 = xor i32 %16, -1"];
	Node0xb17470[shape=record, label="  %31 = mul i32 %30, -3"];
	Node0xb174e0[shape=record, label="  %32 = shl i32 %26, 1"];
	Node0xb17550[shape=record, label="  %33 = xor i32 %13, %10"];
	Node0xb175c0[shape=record, label="  %34 = and i32 %13, %18"];
	Node0xb17630[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0xb176a0[shape=record, label="  %36 = and i32 %13, %10"];
	Node0xb17710[shape=record, label="  %37 = mul i32 %22, -2"];
	Node0xb17780[shape=record, label="  %38 = sub i32 %24, %25"];
	Node0xb177f0[shape=record, label="  %39 = add i32 %38, %27"];
	Node0xb17860[shape=record, label="  %40 = add i32 %39, %13"];
	Node0xb178d0[shape=record, label="  %41 = add i32 %40, %29"];
	Node0xb17940[shape=record, label="  %42 = add i32 %41, %31"];
	Node0xb179b0[shape=record, label="  %43 = sub i32 %42, %32"];
	Node0xb17a20[shape=record, label="  %44 = add i32 %43, %33"];
	Node0xb17a90[shape=record, label="  %45 = sub i32 %44, %19"];
	Node0xb17b00[shape=record, label="  %46 = sub i32 %45, %36"];
	Node0xb17b70[shape=record, label="  %47 = add i32 %46, %37"];
	Node0xb17be0[shape=record, label="  %48 = sub i32 %47, %35"];
	Node0xb17c50[shape=record, label="  %49 = icmp eq i32 %21, %48"];
	Node0xab48b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb17ce0[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0xb17f88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb180e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb181f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb18308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb183c8[shape=record, label="  ret i32 0"];
	Node0xb14938 -> Node0xb149b8;
	Node0xb149b8 -> Node0xb14a48;
	Node0xb14a48 -> Node0xb14aa8;
	Node0xb14aa8 -> Node0xb14b58;
	Node0xb14b58 -> Node0xb14f88;
	Node0xb14f88 -> Node0xb15068;
	Node0xb15068 -> Node0xb15168;
	Node0xb15168 -> Node0xb15228;
	Node0xb15228 -> Node0xb152d8;
	Node0xb152d8 -> Node0xb15398;
	Node0xb15398 -> Node0xb15448;
	Node0xb15448 -> Node0xb0fa80;
	Node0xb0fa80 -> Node0xb15648;
	Node0xb15648 -> Node0xb165b8;
	Node0xb165b8 -> Node0xb16c28;
	Node0xb16c28 -> Node0xb16c88;
	Node0xb16c88 -> Node0xb16d00;
	Node0xb16d00 -> Node0xb16d70;
	Node0xb16d70 -> Node0xb16de0;
	Node0xb16de0 -> Node0xb16e50;
	Node0xb16e50 -> Node0xb16ec0;
	Node0xb16ec0 -> Node0xb16f30;
	Node0xb16f30 -> Node0xb16fa0;
	Node0xb16fa0 -> Node0xb17010;
	Node0xb17010 -> Node0xb17080;
	Node0xb17080 -> Node0xb170f0;
	Node0xb170f0 -> Node0xb17160;
	Node0xb17160 -> Node0xb171d0;
	Node0xb171d0 -> Node0xb17240;
	Node0xb17240 -> Node0xb172b0;
	Node0xb172b0 -> Node0xb17320;
	Node0xb17320 -> Node0xb17390;
	Node0xb17390 -> Node0xb17400;
	Node0xb17400 -> Node0xb17470;
	Node0xb17470 -> Node0xb174e0;
	Node0xb174e0 -> Node0xb17550;
	Node0xb17550 -> Node0xb175c0;
	Node0xb175c0 -> Node0xb17630;
	Node0xb17630 -> Node0xb176a0;
	Node0xb176a0 -> Node0xb17710;
	Node0xb17710 -> Node0xb17780;
	Node0xb17780 -> Node0xb177f0;
	Node0xb177f0 -> Node0xb17860;
	Node0xb17860 -> Node0xb178d0;
	Node0xb178d0 -> Node0xb17940;
	Node0xb17940 -> Node0xb179b0;
	Node0xb179b0 -> Node0xb17a20;
	Node0xb17a20 -> Node0xb17a90;
	Node0xb17a90 -> Node0xb17b00;
	Node0xb17b00 -> Node0xb17b70;
	Node0xb17b70 -> Node0xb17be0;
	Node0xb17be0 -> Node0xb17c50;
	Node0xb17c50 -> Node0xab48b8;
	Node0xab48b8 -> Node0xb17ce0;
	Node0xb17ce0 -> Node0xb17f88;
	Node0xb17f88 -> Node0xb180e8;
	Node0xb180e8 -> Node0xb181f8;
	Node0xb181f8 -> Node0xb18308;
	Node0xb18308 -> Node0xb183c8;
edge [color=red]
	Node0xb14938 -> Node0xb14b58;
	Node0xb14b58 -> Node0xb14f88;
	Node0xb149b8 -> Node0xb15068;
	Node0xb15068 -> Node0xb15168;
	Node0xb14a48 -> Node0xb15228;
	Node0xb15228 -> Node0xb152d8;
	Node0xb14aa8 -> Node0xb15398;
	Node0xb15398 -> Node0xb15448;
	Node0xb14938 -> Node0xb0fa80;
	Node0xb149b8 -> Node0xb0fa80;
	Node0xb14a48 -> Node0xb0fa80;
	Node0xb14aa8 -> Node0xb0fa80;
	Node0xb14938 -> Node0xb15648;
	Node0xb149b8 -> Node0xb165b8;
	Node0xb14a48 -> Node0xb16c28;
	Node0xb14aa8 -> Node0xb16c88;
	Node0xb16c28 -> Node0xb16d00;
	Node0xb16c28 -> Node0xb16d70;
	Node0xb165b8 -> Node0xb16de0;
	Node0xb16d00 -> Node0xb16de0;
	Node0xb16d70 -> Node0xb16e50;
	Node0xb16de0 -> Node0xb16e50;
	Node0xb15648 -> Node0xb16ec0;
	Node0xb16c88 -> Node0xb16f30;
	Node0xb16ec0 -> Node0xb16f30;
	Node0xb16f30 -> Node0xb16fa0;
	Node0xb16e50 -> Node0xb17010;
	Node0xb16fa0 -> Node0xb17010;
	Node0xb16c28 -> Node0xb17080;
	Node0xb165b8 -> Node0xb17080;
	Node0xb165b8 -> Node0xb170f0;
	Node0xb170f0 -> Node0xb17160;
	Node0xb16c28 -> Node0xb171d0;
	Node0xb165b8 -> Node0xb171d0;
	Node0xb165b8 -> Node0xb17240;
	Node0xb16d00 -> Node0xb17240;
	Node0xb17240 -> Node0xb172b0;
	Node0xb171d0 -> Node0xb17320;
	Node0xb17320 -> Node0xb17390;
	Node0xb16de0 -> Node0xb17400;
	Node0xb17400 -> Node0xb17470;
	Node0xb17240 -> Node0xb174e0;
	Node0xb16c88 -> Node0xb17550;
	Node0xb15648 -> Node0xb17550;
	Node0xb16c88 -> Node0xb175c0;
	Node0xb16ec0 -> Node0xb175c0;
	Node0xb175c0 -> Node0xb17630;
	Node0xb16c88 -> Node0xb176a0;
	Node0xb15648 -> Node0xb176a0;
	Node0xb17080 -> Node0xb17710;
	Node0xb17160 -> Node0xb17780;
	Node0xb171d0 -> Node0xb17780;
	Node0xb17780 -> Node0xb177f0;
	Node0xb172b0 -> Node0xb177f0;
	Node0xb177f0 -> Node0xb17860;
	Node0xb16c88 -> Node0xb17860;
	Node0xb17860 -> Node0xb178d0;
	Node0xb17390 -> Node0xb178d0;
	Node0xb178d0 -> Node0xb17940;
	Node0xb17470 -> Node0xb17940;
	Node0xb17940 -> Node0xb179b0;
	Node0xb174e0 -> Node0xb179b0;
	Node0xb179b0 -> Node0xb17a20;
	Node0xb17550 -> Node0xb17a20;
	Node0xb17a20 -> Node0xb17a90;
	Node0xb16f30 -> Node0xb17a90;
	Node0xb17a90 -> Node0xb17b00;
	Node0xb176a0 -> Node0xb17b00;
	Node0xb17b00 -> Node0xb17b70;
	Node0xb17710 -> Node0xb17b70;
	Node0xb17b70 -> Node0xb17be0;
	Node0xb17630 -> Node0xb17be0;
	Node0xb17010 -> Node0xb17c50;
	Node0xb17be0 -> Node0xb17c50;
	Node0xb17c50 -> Node0xab48b8;
	Node0xab48b8 -> Node0xb17ce0;
	Node0xb15398 -> Node0xb17f88;
	Node0xb15228 -> Node0xb180e8;
	Node0xb15068 -> Node0xb181f8;
	Node0xb14b58 -> Node0xb18308;
}
