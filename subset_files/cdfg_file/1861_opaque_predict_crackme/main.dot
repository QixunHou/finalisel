digraph "DFG for'main' function" {
	Node0x2028ce8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2028d68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2028df8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2028e58[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x2028f08[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x2029338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2029418[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x2029518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20295d8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x2029688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2029748[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x20297f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2023b70[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x20299f8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x202a968[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x202afd8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x202b038[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x202b0b0[shape=record, label="  %14 = xor i32 %13, %10"];
	Node0x202b120[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x202b190[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x202b200[shape=record, label="  %17 = add i32 %11, %16"];
	Node0x202b270[shape=record, label="  %18 = sub i32 0, %17"];
	Node0x202b2e0[shape=record, label="  %19 = xor i32 %12, %11"];
	Node0x202b350[shape=record, label="  %20 = and i32 %12, %11"];
	Node0x202b3c0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x202b430[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x202b4a0[shape=record, label="  %23 = shl i32 %12, 1"];
	Node0x202b510[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x202b580[shape=record, label="  %25 = shl i32 %19, 1"];
	Node0x202b5f0[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0x202b660[shape=record, label="  %27 = or i32 %13, %26"];
	Node0x202b6d0[shape=record, label="  %28 = or i32 %13, %10"];
	Node0x202b740[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x202b7b0[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x202b820[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x202b890[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0x202b900[shape=record, label="  %33 = mul i32 %13, 5"];
	Node0x202b970[shape=record, label="  %34 = xor i32 %13, -1"];
	Node0x202b9e0[shape=record, label="  %35 = xor i32 %27, -1"];
	Node0x202ba50[shape=record, label="  %36 = mul i32 %35, -3"];
	Node0x202bac0[shape=record, label="  %37 = and i32 %13, %26"];
	Node0x202bb30[shape=record, label="  %38 = mul i32 %37, -6"];
	Node0x202bba0[shape=record, label="  %39 = mul i32 %30, -9"];
	Node0x202bc10[shape=record, label="  %40 = sub i32 %19, %12"];
	Node0x202bc80[shape=record, label="  %41 = add i32 %40, %34"];
	Node0x202bcf0[shape=record, label="  %42 = sub i32 %41, %24"];
	Node0x202bd60[shape=record, label="  %43 = sub i32 %42, %25"];
	Node0x202bdd0[shape=record, label="  %44 = sub i32 %43, %27"];
	Node0x202be40[shape=record, label="  %45 = add i32 %44, %14"];
	Node0x202beb0[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x202bf20[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x202bf90[shape=record, label="  %48 = add i32 %47, %22"];
	Node0x202c000[shape=record, label="  %49 = add i32 %48, %29"];
	Node0x202c070[shape=record, label="  %50 = add i32 %49, %36"];
	Node0x202c0e0[shape=record, label="  %51 = add i32 %50, %38"];
	Node0x202c150[shape=record, label="  %52 = add i32 %51, %39"];
	Node0x202c1c0[shape=record, label="  %53 = sub i32 %52, %32"];
	Node0x202c230[shape=record, label="  %54 = icmp eq i32 %53, %18"];
	Node0x1fc88b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x202c2c0[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x202c568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x202c6c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x202c7d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x202c8e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x202c9a8[shape=record, label="  ret i32 0"];
	Node0x2028ce8 -> Node0x2028d68;
	Node0x2028d68 -> Node0x2028df8;
	Node0x2028df8 -> Node0x2028e58;
	Node0x2028e58 -> Node0x2028f08;
	Node0x2028f08 -> Node0x2029338;
	Node0x2029338 -> Node0x2029418;
	Node0x2029418 -> Node0x2029518;
	Node0x2029518 -> Node0x20295d8;
	Node0x20295d8 -> Node0x2029688;
	Node0x2029688 -> Node0x2029748;
	Node0x2029748 -> Node0x20297f8;
	Node0x20297f8 -> Node0x2023b70;
	Node0x2023b70 -> Node0x20299f8;
	Node0x20299f8 -> Node0x202a968;
	Node0x202a968 -> Node0x202afd8;
	Node0x202afd8 -> Node0x202b038;
	Node0x202b038 -> Node0x202b0b0;
	Node0x202b0b0 -> Node0x202b120;
	Node0x202b120 -> Node0x202b190;
	Node0x202b190 -> Node0x202b200;
	Node0x202b200 -> Node0x202b270;
	Node0x202b270 -> Node0x202b2e0;
	Node0x202b2e0 -> Node0x202b350;
	Node0x202b350 -> Node0x202b3c0;
	Node0x202b3c0 -> Node0x202b430;
	Node0x202b430 -> Node0x202b4a0;
	Node0x202b4a0 -> Node0x202b510;
	Node0x202b510 -> Node0x202b580;
	Node0x202b580 -> Node0x202b5f0;
	Node0x202b5f0 -> Node0x202b660;
	Node0x202b660 -> Node0x202b6d0;
	Node0x202b6d0 -> Node0x202b740;
	Node0x202b740 -> Node0x202b7b0;
	Node0x202b7b0 -> Node0x202b820;
	Node0x202b820 -> Node0x202b890;
	Node0x202b890 -> Node0x202b900;
	Node0x202b900 -> Node0x202b970;
	Node0x202b970 -> Node0x202b9e0;
	Node0x202b9e0 -> Node0x202ba50;
	Node0x202ba50 -> Node0x202bac0;
	Node0x202bac0 -> Node0x202bb30;
	Node0x202bb30 -> Node0x202bba0;
	Node0x202bba0 -> Node0x202bc10;
	Node0x202bc10 -> Node0x202bc80;
	Node0x202bc80 -> Node0x202bcf0;
	Node0x202bcf0 -> Node0x202bd60;
	Node0x202bd60 -> Node0x202bdd0;
	Node0x202bdd0 -> Node0x202be40;
	Node0x202be40 -> Node0x202beb0;
	Node0x202beb0 -> Node0x202bf20;
	Node0x202bf20 -> Node0x202bf90;
	Node0x202bf90 -> Node0x202c000;
	Node0x202c000 -> Node0x202c070;
	Node0x202c070 -> Node0x202c0e0;
	Node0x202c0e0 -> Node0x202c150;
	Node0x202c150 -> Node0x202c1c0;
	Node0x202c1c0 -> Node0x202c230;
	Node0x202c230 -> Node0x1fc88b8;
	Node0x1fc88b8 -> Node0x202c2c0;
	Node0x202c2c0 -> Node0x202c568;
	Node0x202c568 -> Node0x202c6c8;
	Node0x202c6c8 -> Node0x202c7d8;
	Node0x202c7d8 -> Node0x202c8e8;
	Node0x202c8e8 -> Node0x202c9a8;
edge [color=red]
	Node0x2028ce8 -> Node0x2028f08;
	Node0x2028f08 -> Node0x2029338;
	Node0x2028d68 -> Node0x2029418;
	Node0x2029418 -> Node0x2029518;
	Node0x2028df8 -> Node0x20295d8;
	Node0x20295d8 -> Node0x2029688;
	Node0x2028e58 -> Node0x2029748;
	Node0x2029748 -> Node0x20297f8;
	Node0x2028ce8 -> Node0x2023b70;
	Node0x2028d68 -> Node0x2023b70;
	Node0x2028df8 -> Node0x2023b70;
	Node0x2028e58 -> Node0x2023b70;
	Node0x2028ce8 -> Node0x20299f8;
	Node0x2028d68 -> Node0x202a968;
	Node0x2028df8 -> Node0x202afd8;
	Node0x2028e58 -> Node0x202b038;
	Node0x202b038 -> Node0x202b0b0;
	Node0x20299f8 -> Node0x202b0b0;
	Node0x202b0b0 -> Node0x202b120;
	Node0x202b120 -> Node0x202b190;
	Node0x202a968 -> Node0x202b200;
	Node0x202b190 -> Node0x202b200;
	Node0x202b200 -> Node0x202b270;
	Node0x202afd8 -> Node0x202b2e0;
	Node0x202a968 -> Node0x202b2e0;
	Node0x202afd8 -> Node0x202b350;
	Node0x202a968 -> Node0x202b350;
	Node0x202b350 -> Node0x202b3c0;
	Node0x202b3c0 -> Node0x202b430;
	Node0x202afd8 -> Node0x202b4a0;
	Node0x202b4a0 -> Node0x202b510;
	Node0x202b2e0 -> Node0x202b580;
	Node0x20299f8 -> Node0x202b5f0;
	Node0x202b038 -> Node0x202b660;
	Node0x202b5f0 -> Node0x202b660;
	Node0x202b038 -> Node0x202b6d0;
	Node0x20299f8 -> Node0x202b6d0;
	Node0x202b6d0 -> Node0x202b740;
	Node0x202b038 -> Node0x202b7b0;
	Node0x20299f8 -> Node0x202b7b0;
	Node0x202b7b0 -> Node0x202b820;
	Node0x202b820 -> Node0x202b890;
	Node0x202b038 -> Node0x202b900;
	Node0x202b038 -> Node0x202b970;
	Node0x202b660 -> Node0x202b9e0;
	Node0x202b9e0 -> Node0x202ba50;
	Node0x202b038 -> Node0x202bac0;
	Node0x202b5f0 -> Node0x202bac0;
	Node0x202bac0 -> Node0x202bb30;
	Node0x202b7b0 -> Node0x202bba0;
	Node0x202b2e0 -> Node0x202bc10;
	Node0x202afd8 -> Node0x202bc10;
	Node0x202bc10 -> Node0x202bc80;
	Node0x202b970 -> Node0x202bc80;
	Node0x202bc80 -> Node0x202bcf0;
	Node0x202b510 -> Node0x202bcf0;
	Node0x202bcf0 -> Node0x202bd60;
	Node0x202b580 -> Node0x202bd60;
	Node0x202bd60 -> Node0x202bdd0;
	Node0x202b660 -> Node0x202bdd0;
	Node0x202bdd0 -> Node0x202be40;
	Node0x202b0b0 -> Node0x202be40;
	Node0x202be40 -> Node0x202beb0;
	Node0x202b900 -> Node0x202beb0;
	Node0x202beb0 -> Node0x202bf20;
	Node0x202b6d0 -> Node0x202bf20;
	Node0x202bf20 -> Node0x202bf90;
	Node0x202b430 -> Node0x202bf90;
	Node0x202bf90 -> Node0x202c000;
	Node0x202b740 -> Node0x202c000;
	Node0x202c000 -> Node0x202c070;
	Node0x202ba50 -> Node0x202c070;
	Node0x202c070 -> Node0x202c0e0;
	Node0x202bb30 -> Node0x202c0e0;
	Node0x202c0e0 -> Node0x202c150;
	Node0x202bba0 -> Node0x202c150;
	Node0x202c150 -> Node0x202c1c0;
	Node0x202b890 -> Node0x202c1c0;
	Node0x202c1c0 -> Node0x202c230;
	Node0x202b270 -> Node0x202c230;
	Node0x202c230 -> Node0x1fc88b8;
	Node0x1fc88b8 -> Node0x202c2c0;
	Node0x2029748 -> Node0x202c568;
	Node0x20295d8 -> Node0x202c6c8;
	Node0x2029418 -> Node0x202c7d8;
	Node0x2028f08 -> Node0x202c8e8;
}
