digraph "DFG for'crackme' function" {
	Node0x1f21db0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1f21e50[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x1f21ec0[shape=record, label="  %7 = or i32 %2, %1"];
	Node0x1f21f30[shape=record, label="  %8 = xor i32 %3, %0"];
	Node0x1f21fa0[shape=record, label="  %9 = add i32 %7, 1"];
	Node0x1f22010[shape=record, label="  %10 = add i32 %9, %6"];
	Node0x1f22080[shape=record, label="  %11 = add i32 %10, %8"];
	Node0x1f220f0[shape=record, label="  %12 = xor i32 %2, %1"];
	Node0x1f22190[shape=record, label="  %13 = mul i32 %12, -2"];
	Node0x1f22200[shape=record, label="  %14 = shl i32 %1, 1"];
	Node0x1f22270[shape=record, label="  %15 = sub i32 %13, %14"];
	Node0x1f222e0[shape=record, label="  %16 = or i32 %15, 1"];
	Node0x1f22350[shape=record, label="  %17 = and i32 %5, %1"];
	Node0x1f223c0[shape=record, label="  %18 = or i32 %5, %1"];
	Node0x1f22430[shape=record, label="  %19 = and i32 %2, %1"];
	Node0x1f224a0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x1f22510[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x1f22580[shape=record, label="  %22 = xor i32 %7, -1"];
	Node0x1f225f0[shape=record, label="  %23 = xor i32 %18, -1"];
	Node0x1f22690[shape=record, label="  %24 = mul i32 %17, 9"];
	Node0x1f22730[shape=record, label="  %25 = shl i32 %19, 2"];
	Node0x1f227a0[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x1f22810[shape=record, label="  %27 = and i32 %3, %0"];
	Node0x1f22880[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x1f228f0[shape=record, label="  %29 = xor i32 %0, -1"];
	Node0x1f22960[shape=record, label="  %30 = xor i32 %3, -1"];
	Node0x1f229d0[shape=record, label="  %31 = and i32 %30, %0"];
	Node0x1f22a40[shape=record, label="  %32 = shl i32 %29, 1"];
	Node0x1f22cf0[shape=record, label="  %33 = mul i32 %31, -3"];
	Node0x1f22d60[shape=record, label="  %34 = and i32 %29, %3"];
	Node0x1f22dd0[shape=record, label="  %35 = add i32 %23, %22"];
	Node0x1f22e70[shape=record, label="  %36 = mul i32 %35, 6"];
	Node0x1f22ee0[shape=record, label="  %37 = sub i32 2, %0"];
	Node0x1f22f50[shape=record, label="  %38 = sub i32 %37, %32"];
	Node0x1f22fc0[shape=record, label="  %39 = add i32 %38, %2"];
	Node0x1f23030[shape=record, label="  %40 = add i32 %39, %12"];
	Node0x1f230a0[shape=record, label="  %41 = add i32 %40, %17"];
	Node0x1f23110[shape=record, label="  %42 = add i32 %41, %18"];
	Node0x1f23180[shape=record, label="  %43 = add i32 %42, %24"];
	Node0x1f231f0[shape=record, label="  %44 = add i32 %43, %25"];
	Node0x1f23260[shape=record, label="  %45 = add i32 %44, %26"];
	Node0x1f232d0[shape=record, label="  %46 = add i32 %45, %8"];
	Node0x1f23340[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x1f233b0[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x1f23420[shape=record, label="  %49 = sub i32 %48, %34"];
	Node0x1f23490[shape=record, label="  %50 = sub i32 %49, %27"];
	Node0x1f23500[shape=record, label="  %51 = sub i32 %50, %21"];
	Node0x1f23570[shape=record, label="  %52 = add i32 %51, %33"];
	Node0x1f235e0[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x1f23650[shape=record, label="  %54 = add i32 %53, %16"];
	Node0x1f236c0[shape=record, label="  %55 = icmp eq i32 %11, %54"];
	Node0x1ec2268[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1f23b60[shape=record, label="  %57 = tail call i32 @puts(i8* nonnull dereferenceable(1) %56)"];
	Node0x1f23bb0[shape=record, label="  ret void"];
	Node0x1f21db0 -> Node0x1f21e50;
	Node0x1f21e50 -> Node0x1f21ec0;
	Node0x1f21ec0 -> Node0x1f21f30;
	Node0x1f21f30 -> Node0x1f21fa0;
	Node0x1f21fa0 -> Node0x1f22010;
	Node0x1f22010 -> Node0x1f22080;
	Node0x1f22080 -> Node0x1f220f0;
	Node0x1f220f0 -> Node0x1f22190;
	Node0x1f22190 -> Node0x1f22200;
	Node0x1f22200 -> Node0x1f22270;
	Node0x1f22270 -> Node0x1f222e0;
	Node0x1f222e0 -> Node0x1f22350;
	Node0x1f22350 -> Node0x1f223c0;
	Node0x1f223c0 -> Node0x1f22430;
	Node0x1f22430 -> Node0x1f224a0;
	Node0x1f224a0 -> Node0x1f22510;
	Node0x1f22510 -> Node0x1f22580;
	Node0x1f22580 -> Node0x1f225f0;
	Node0x1f225f0 -> Node0x1f22690;
	Node0x1f22690 -> Node0x1f22730;
	Node0x1f22730 -> Node0x1f227a0;
	Node0x1f227a0 -> Node0x1f22810;
	Node0x1f22810 -> Node0x1f22880;
	Node0x1f22880 -> Node0x1f228f0;
	Node0x1f228f0 -> Node0x1f22960;
	Node0x1f22960 -> Node0x1f229d0;
	Node0x1f229d0 -> Node0x1f22a40;
	Node0x1f22a40 -> Node0x1f22cf0;
	Node0x1f22cf0 -> Node0x1f22d60;
	Node0x1f22d60 -> Node0x1f22dd0;
	Node0x1f22dd0 -> Node0x1f22e70;
	Node0x1f22e70 -> Node0x1f22ee0;
	Node0x1f22ee0 -> Node0x1f22f50;
	Node0x1f22f50 -> Node0x1f22fc0;
	Node0x1f22fc0 -> Node0x1f23030;
	Node0x1f23030 -> Node0x1f230a0;
	Node0x1f230a0 -> Node0x1f23110;
	Node0x1f23110 -> Node0x1f23180;
	Node0x1f23180 -> Node0x1f231f0;
	Node0x1f231f0 -> Node0x1f23260;
	Node0x1f23260 -> Node0x1f232d0;
	Node0x1f232d0 -> Node0x1f23340;
	Node0x1f23340 -> Node0x1f233b0;
	Node0x1f233b0 -> Node0x1f23420;
	Node0x1f23420 -> Node0x1f23490;
	Node0x1f23490 -> Node0x1f23500;
	Node0x1f23500 -> Node0x1f23570;
	Node0x1f23570 -> Node0x1f235e0;
	Node0x1f235e0 -> Node0x1f23650;
	Node0x1f23650 -> Node0x1f236c0;
	Node0x1f236c0 -> Node0x1ec2268;
	Node0x1ec2268 -> Node0x1f23b60;
	Node0x1f23b60 -> Node0x1f23bb0;
edge [color=red]
	Node0x1f21db0 -> Node0x1f21e50;
	Node0x1f21ec0 -> Node0x1f21fa0;
	Node0x1f21fa0 -> Node0x1f22010;
	Node0x1f21e50 -> Node0x1f22010;
	Node0x1f22010 -> Node0x1f22080;
	Node0x1f21f30 -> Node0x1f22080;
	Node0x1f220f0 -> Node0x1f22190;
	Node0x1f22190 -> Node0x1f22270;
	Node0x1f22200 -> Node0x1f22270;
	Node0x1f22270 -> Node0x1f222e0;
	Node0x1f21db0 -> Node0x1f22350;
	Node0x1f21db0 -> Node0x1f223c0;
	Node0x1f22430 -> Node0x1f224a0;
	Node0x1f224a0 -> Node0x1f22510;
	Node0x1f21ec0 -> Node0x1f22580;
	Node0x1f223c0 -> Node0x1f225f0;
	Node0x1f22350 -> Node0x1f22690;
	Node0x1f22430 -> Node0x1f22730;
	Node0x1f22810 -> Node0x1f22880;
	Node0x1f22960 -> Node0x1f229d0;
	Node0x1f228f0 -> Node0x1f22a40;
	Node0x1f229d0 -> Node0x1f22cf0;
	Node0x1f228f0 -> Node0x1f22d60;
	Node0x1f225f0 -> Node0x1f22dd0;
	Node0x1f22580 -> Node0x1f22dd0;
	Node0x1f22dd0 -> Node0x1f22e70;
	Node0x1f22ee0 -> Node0x1f22f50;
	Node0x1f22a40 -> Node0x1f22f50;
	Node0x1f22f50 -> Node0x1f22fc0;
	Node0x1f22fc0 -> Node0x1f23030;
	Node0x1f220f0 -> Node0x1f23030;
	Node0x1f23030 -> Node0x1f230a0;
	Node0x1f22350 -> Node0x1f230a0;
	Node0x1f230a0 -> Node0x1f23110;
	Node0x1f223c0 -> Node0x1f23110;
	Node0x1f23110 -> Node0x1f23180;
	Node0x1f22690 -> Node0x1f23180;
	Node0x1f23180 -> Node0x1f231f0;
	Node0x1f22730 -> Node0x1f231f0;
	Node0x1f231f0 -> Node0x1f23260;
	Node0x1f227a0 -> Node0x1f23260;
	Node0x1f23260 -> Node0x1f232d0;
	Node0x1f21f30 -> Node0x1f232d0;
	Node0x1f232d0 -> Node0x1f23340;
	Node0x1f22880 -> Node0x1f23340;
	Node0x1f23340 -> Node0x1f233b0;
	Node0x1f229d0 -> Node0x1f233b0;
	Node0x1f233b0 -> Node0x1f23420;
	Node0x1f22d60 -> Node0x1f23420;
	Node0x1f23420 -> Node0x1f23490;
	Node0x1f22810 -> Node0x1f23490;
	Node0x1f23490 -> Node0x1f23500;
	Node0x1f22510 -> Node0x1f23500;
	Node0x1f23500 -> Node0x1f23570;
	Node0x1f22cf0 -> Node0x1f23570;
	Node0x1f23570 -> Node0x1f235e0;
	Node0x1f22e70 -> Node0x1f235e0;
	Node0x1f235e0 -> Node0x1f23650;
	Node0x1f222e0 -> Node0x1f23650;
	Node0x1f22080 -> Node0x1f236c0;
	Node0x1f23650 -> Node0x1f236c0;
	Node0x1f236c0 -> Node0x1ec2268;
	Node0x1ec2268 -> Node0x1f23b60;
}
