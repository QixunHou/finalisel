digraph "DFG for'crackme' function" {
	Node0x2322750[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x23227c0[shape=record, label="  %6 = sub i32 %1, %5"];
	Node0x2322830[shape=record, label="  %7 = add i32 %6, %3"];
	Node0x2322eb0[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x2322f20[shape=record, label="  %9 = and i32 %8, %3"];
	Node0x2322fc0[shape=record, label="  %10 = shl i32 %9, 2"];
	Node0x2323060[shape=record, label="  %11 = xor i32 %10, -4"];
	Node0x23230d0[shape=record, label="  %12 = sub i32 %7, %11"];
	Node0x2323140[shape=record, label="  %13 = or i32 %2, %1"];
	Node0x23231b0[shape=record, label="  %14 = xor i32 %2, -1"];
	Node0x2323220[shape=record, label="  %15 = and i32 %14, %1"];
	Node0x2323290[shape=record, label="  %16 = or i32 %14, %1"];
	Node0x2323330[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x23233a0[shape=record, label="  %18 = shl i32 %14, 1"];
	Node0x2323410[shape=record, label="  %19 = shl i32 %13, 2"];
	Node0x2323480[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0x2323520[shape=record, label="  %21 = xor i32 %17, -2"];
	Node0x2323590[shape=record, label="  %22 = shl i32 %15, 2"];
	Node0x2323600[shape=record, label="  %23 = and i32 %2, %1"];
	Node0x2323670[shape=record, label="  %24 = or i32 %3, %0"];
	Node0x23236e0[shape=record, label="  %25 = or i32 %8, %3"];
	Node0x2323750[shape=record, label="  %26 = and i32 %3, %0"];
	Node0x23237c0[shape=record, label="  %27 = xor i32 %3, %0"];
	Node0x2323830[shape=record, label="  %28 = shl i32 %24, 1"];
	Node0x23238a0[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x2323910[shape=record, label="  %30 = xor i32 %25, -1"];
	Node0x23239b0[shape=record, label="  %31 = mul i32 %9, 5"];
	Node0x2323a20[shape=record, label="  %32 = sub i32 %23, %0"];
	Node0x2323ca0[shape=record, label="  %33 = add i32 %32, %26"];
	Node0x2323d10[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x2323d80[shape=record, label="  %35 = sub i32 1, %1"];
	Node0x2323df0[shape=record, label="  %36 = add i32 %35, %2"];
	Node0x2323e60[shape=record, label="  %37 = sub i32 %36, %5"];
	Node0x2323ed0[shape=record, label="  %38 = add i32 %37, %13"];
	Node0x2323f40[shape=record, label="  %39 = add i32 %38, %15"];
	Node0x2323fb0[shape=record, label="  %40 = sub i32 %39, %18"];
	Node0x2324020[shape=record, label="  %41 = sub i32 %40, %17"];
	Node0x2324090[shape=record, label="  %42 = add i32 %41, %22"];
	Node0x2324100[shape=record, label="  %43 = sub i32 %42, %24"];
	Node0x2324170[shape=record, label="  %44 = sub i32 %43, %25"];
	Node0x23241e0[shape=record, label="  %45 = sub i32 %44, %27"];
	Node0x2324250[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x23242c0[shape=record, label="  %47 = add i32 %46, %20"];
	Node0x2324330[shape=record, label="  %48 = sub i32 %47, %21"];
	Node0x23243a0[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x2324410[shape=record, label="  %50 = sub i32 %49, %29"];
	Node0x2324480[shape=record, label="  %51 = add i32 %50, %34"];
	Node0x23244f0[shape=record, label="  %52 = icmp eq i32 %12, %51"];
	Node0x22c3268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2324990[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0x23249e0[shape=record, label="  ret void"];
	Node0x2322750 -> Node0x23227c0;
	Node0x23227c0 -> Node0x2322830;
	Node0x2322830 -> Node0x2322eb0;
	Node0x2322eb0 -> Node0x2322f20;
	Node0x2322f20 -> Node0x2322fc0;
	Node0x2322fc0 -> Node0x2323060;
	Node0x2323060 -> Node0x23230d0;
	Node0x23230d0 -> Node0x2323140;
	Node0x2323140 -> Node0x23231b0;
	Node0x23231b0 -> Node0x2323220;
	Node0x2323220 -> Node0x2323290;
	Node0x2323290 -> Node0x2323330;
	Node0x2323330 -> Node0x23233a0;
	Node0x23233a0 -> Node0x2323410;
	Node0x2323410 -> Node0x2323480;
	Node0x2323480 -> Node0x2323520;
	Node0x2323520 -> Node0x2323590;
	Node0x2323590 -> Node0x2323600;
	Node0x2323600 -> Node0x2323670;
	Node0x2323670 -> Node0x23236e0;
	Node0x23236e0 -> Node0x2323750;
	Node0x2323750 -> Node0x23237c0;
	Node0x23237c0 -> Node0x2323830;
	Node0x2323830 -> Node0x23238a0;
	Node0x23238a0 -> Node0x2323910;
	Node0x2323910 -> Node0x23239b0;
	Node0x23239b0 -> Node0x2323a20;
	Node0x2323a20 -> Node0x2323ca0;
	Node0x2323ca0 -> Node0x2323d10;
	Node0x2323d10 -> Node0x2323d80;
	Node0x2323d80 -> Node0x2323df0;
	Node0x2323df0 -> Node0x2323e60;
	Node0x2323e60 -> Node0x2323ed0;
	Node0x2323ed0 -> Node0x2323f40;
	Node0x2323f40 -> Node0x2323fb0;
	Node0x2323fb0 -> Node0x2324020;
	Node0x2324020 -> Node0x2324090;
	Node0x2324090 -> Node0x2324100;
	Node0x2324100 -> Node0x2324170;
	Node0x2324170 -> Node0x23241e0;
	Node0x23241e0 -> Node0x2324250;
	Node0x2324250 -> Node0x23242c0;
	Node0x23242c0 -> Node0x2324330;
	Node0x2324330 -> Node0x23243a0;
	Node0x23243a0 -> Node0x2324410;
	Node0x2324410 -> Node0x2324480;
	Node0x2324480 -> Node0x23244f0;
	Node0x23244f0 -> Node0x22c3268;
	Node0x22c3268 -> Node0x2324990;
	Node0x2324990 -> Node0x23249e0;
edge [color=red]
	Node0x2322750 -> Node0x23227c0;
	Node0x23227c0 -> Node0x2322830;
	Node0x2322eb0 -> Node0x2322f20;
	Node0x2322f20 -> Node0x2322fc0;
	Node0x2322fc0 -> Node0x2323060;
	Node0x2322830 -> Node0x23230d0;
	Node0x2323060 -> Node0x23230d0;
	Node0x23231b0 -> Node0x2323220;
	Node0x23231b0 -> Node0x2323290;
	Node0x2323290 -> Node0x2323330;
	Node0x23231b0 -> Node0x23233a0;
	Node0x2323140 -> Node0x2323410;
	Node0x2323410 -> Node0x2323480;
	Node0x2323330 -> Node0x2323520;
	Node0x2323220 -> Node0x2323590;
	Node0x2322eb0 -> Node0x23236e0;
	Node0x2323670 -> Node0x2323830;
	Node0x2323830 -> Node0x23238a0;
	Node0x23236e0 -> Node0x2323910;
	Node0x2322f20 -> Node0x23239b0;
	Node0x2323600 -> Node0x2323a20;
	Node0x2323a20 -> Node0x2323ca0;
	Node0x2323750 -> Node0x2323ca0;
	Node0x2323ca0 -> Node0x2323d10;
	Node0x2323d80 -> Node0x2323df0;
	Node0x2323df0 -> Node0x2323e60;
	Node0x2322750 -> Node0x2323e60;
	Node0x2323e60 -> Node0x2323ed0;
	Node0x2323140 -> Node0x2323ed0;
	Node0x2323ed0 -> Node0x2323f40;
	Node0x2323220 -> Node0x2323f40;
	Node0x2323f40 -> Node0x2323fb0;
	Node0x23233a0 -> Node0x2323fb0;
	Node0x2323fb0 -> Node0x2324020;
	Node0x2323330 -> Node0x2324020;
	Node0x2324020 -> Node0x2324090;
	Node0x2323590 -> Node0x2324090;
	Node0x2324090 -> Node0x2324100;
	Node0x2323670 -> Node0x2324100;
	Node0x2324100 -> Node0x2324170;
	Node0x23236e0 -> Node0x2324170;
	Node0x2324170 -> Node0x23241e0;
	Node0x23237c0 -> Node0x23241e0;
	Node0x23241e0 -> Node0x2324250;
	Node0x2323910 -> Node0x2324250;
	Node0x2324250 -> Node0x23242c0;
	Node0x2323480 -> Node0x23242c0;
	Node0x23242c0 -> Node0x2324330;
	Node0x2323520 -> Node0x2324330;
	Node0x2324330 -> Node0x23243a0;
	Node0x23239b0 -> Node0x23243a0;
	Node0x23243a0 -> Node0x2324410;
	Node0x23238a0 -> Node0x2324410;
	Node0x2324410 -> Node0x2324480;
	Node0x2323d10 -> Node0x2324480;
	Node0x23230d0 -> Node0x23244f0;
	Node0x2324480 -> Node0x23244f0;
	Node0x23244f0 -> Node0x22c3268;
	Node0x22c3268 -> Node0x2324990;
}
