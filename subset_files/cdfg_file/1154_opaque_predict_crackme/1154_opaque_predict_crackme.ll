; ModuleID = '../.././c_source_file/1154_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1154_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = or i32 %4, %3
  %7 = xor i32 %0, -1
  %8 = xor i32 %2, -1
  %9 = and i32 %8, %1
  %10 = or i32 %9, %7
  %11 = add i32 %10, %4
  %12 = sub i32 %11, %6
  %13 = add i32 %4, 1
  %14 = xor i32 %6, -1
  %15 = or i32 %2, %0
  %16 = xor i32 %15, %1
  %17 = xor i32 %1, -1
  %18 = or i32 %17, %0
  %19 = xor i32 %18, -1
  %20 = xor i32 %2, %0
  %21 = xor i32 %20, -1
  %22 = or i32 %21, %19
  %23 = and i32 %17, %0
  %24 = or i32 %9, %23
  %25 = xor i32 %1, %0
  %26 = and i32 %25, %2
  %27 = xor i32 %2, %1
  %28 = or i32 %27, %19
  %29 = and i32 %2, %0
  %30 = xor i32 %9, -1
  %31 = xor i32 %29, %30
  %32 = shl i32 %31, 1
  %33 = and i32 %17, %2
  %34 = and i32 %33, %0
  %35 = or i32 %27, %0
  %36 = xor i32 %35, 1073741823
  %37 = or i32 %36, %34
  %38 = shl i32 %37, 2
  %39 = xor i32 %25, -1
  %40 = and i32 %39, %2
  %41 = xor i32 %34, %35
  %42 = or i32 %8, %0
  %43 = xor i32 %42, -1
  %44 = or i32 %25, %43
  %45 = and i32 %8, %0
  %46 = or i32 %45, %39
  %47 = and i32 %21, %1
  %48 = or i32 %2, %1
  %49 = or i32 %48, %0
  %50 = shl i32 %49, 1
  %51 = and i32 %1, %0
  %52 = xor i32 %48, -1
  %53 = or i32 %51, %52
  %54 = or i32 %8, %39
  %55 = xor i32 %27, %0
  %56 = xor i32 %55, -1
  %57 = xor i32 %34, %56
  %58 = xor i32 %51, %2
  %59 = or i32 %17, %2
  %60 = and i32 %59, %7
  %61 = or i32 %34, %60
  %62 = and i32 %2, %1
  %63 = or i32 %62, %7
  %64 = or i32 %9, %0
  %65 = or i32 %45, %17
  %66 = or i32 %8, %1
  %67 = xor i32 %66, -1
  %68 = xor i32 %67, %0
  %69 = xor i32 %62, -1
  %70 = add i32 %42, 1
  %71 = xor i32 %15, -1
  %72 = or i32 %71, %17
  %73 = xor i32 %51, -1
  %74 = and i32 %21, %73
  %75 = or i32 %1, %0
  %76 = xor i32 %75, -1
  %77 = and i32 %30, %7
  %78 = and i32 %21, %17
  %79 = and i32 %69, %7
  %80 = or i32 %29, %17
  %81 = and i32 %15, %1
  %82 = and i32 %42, %39
  %83 = xor i32 %29, -1
  %84 = and i32 %83, %39
  %85 = or i32 %25, %21
  %86 = xor i32 %45, -1
  %87 = and i32 %86, %17
  %88 = or i32 %67, %7
  %89 = or i32 %69, %7
  %90 = and i32 %20, %17
  %91 = xor i32 %9, %0
  %92 = and i32 %20, %18
  %93 = xor i32 %45, %66
  %94 = xor i32 %27, -1
  %95 = and i32 %18, %94
  %96 = shl i32 %95, 1
  %97 = or i32 %20, %76
  %98 = and i32 %20, %75
  %99 = xor i32 %42, %51
  %100 = or i32 %20, %19
  %101 = and i32 %62, %7
  %102 = and i32 %48, %0
  %103 = or i32 %101, %102
  %104 = or i32 %71, %39
  %105 = xor i32 %59, %0
  %106 = xor i32 %105, -1
  %107 = xor i32 %34, %106
  %108 = xor i32 %23, -1
  %109 = and i32 %20, %108
  %110 = shl i32 %109, 1
  %111 = and i32 %62, %0
  %112 = and i32 %27, %7
  %113 = or i32 %111, %112
  %114 = shl i32 %113, 1
  %115 = and i32 %33, %7
  %116 = or i32 %27, %7
  %117 = xor i32 %116, -1
  %118 = or i32 %115, %117
  %119 = and i32 %94, %108
  %120 = or i32 %8, %76
  %121 = and i32 %21, %39
  %122 = xor i32 %52, %0
  %123 = or i32 %62, %23
  %124 = or i32 %45, %67
  %125 = or i32 %51, %43
  %126 = or i32 %43, %1
  %127 = xor i32 %86, %1
  %128 = and i32 %42, %17
  %129 = and i32 %48, %7
  %130 = or i32 %111, %129
  %131 = xor i32 %69, %0
  %132 = shl i32 %131, 1
  %133 = or i32 %25, %71
  %134 = xor i32 %18, %2
  %135 = shl i32 %134, 1
  %136 = or i32 %51, %71
  %137 = or i32 %21, %1
  %138 = or i32 %20, %17
  %139 = or i32 %48, %7
  %140 = and i32 %27, %75
  %141 = or i32 %27, %76
  %142 = or i32 %66, %0
  %143 = and i32 %27, %0
  %144 = xor i32 %143, -1
  %145 = xor i32 %101, %144
  %146 = add i32 %29, 1
  %147 = or i32 %51, %8
  %148 = or i32 %111, %56
  %149 = or i32 %25, %2
  %150 = shl i32 %149, 1
  %151 = and i32 %30, %0
  %152 = xor i32 %66, %0
  %153 = or i32 %43, %39
  %154 = and i32 %18, %2
  %155 = and i32 %15, %17
  %156 = and i32 %75, %21
  %157 = and i32 %69, %0
  %158 = and i32 %42, %25
  %159 = or i32 %29, %52
  %160 = and i32 %86, %1
  %161 = shl i32 %160, 1
  %162 = or i32 %94, %7
  %163 = xor i32 %112, 2147483647
  %164 = xor i32 %163, %111
  %165 = or i32 %94, %76
  %166 = or i32 %20, %51
  %167 = and i32 %15, %39
  %168 = and i32 %15, %25
  %169 = xor i32 %60, 2147483647
  %170 = xor i32 %169, %34
  %171 = and i32 %25, %83
  %172 = xor i32 %29, %1
  %173 = shl i32 %172, 1
  %174 = or i32 %76, %2
  %175 = and i32 %25, %21
  %176 = or i32 %27, %51
  %177 = or i32 %29, %39
  %178 = or i32 %21, %39
  %179 = xor i32 %29, %75
  %180 = xor i32 %23, %30
  %181 = or i32 %34, %105
  %182 = or i32 %45, %25
  %183 = and i32 %66, %0
  %184 = xor i32 %48, %0
  %185 = xor i32 %111, -1
  %186 = xor i32 %184, %185
  %187 = xor i32 %42, %1
  %188 = xor i32 %29, %18
  %189 = and i32 %59, %0
  %190 = or i32 %115, %189
  %191 = or i32 %101, %143
  %192 = or i32 %62, %0
  %193 = or i32 %23, %2
  %194 = xor i32 %66, %51
  %195 = or i32 %43, %17
  %196 = or i32 %30, %7
  %197 = xor i32 %129, %185
  %198 = and i32 %25, %8
  %199 = and i32 %18, %8
  %200 = or i32 %51, %67
  %201 = and i32 %27, %18
  %202 = xor i32 %73, %2
  %203 = xor i32 %83, %1
  %204 = add i32 %45, 1
  %205 = xor i32 %23, %69
  %206 = or i32 %19, %2
  %207 = and i32 %75, %8
  %208 = and i32 %42, %1
  %209 = and i32 %75, %2
  %210 = or i32 %71, %1
  %211 = shl i32 %210, 1
  %212 = or i32 %29, %19
  %213 = and i32 %18, %21
  %214 = and i32 %8, %73
  %215 = and i32 %20, %73
  %216 = xor i32 %15, %51
  %217 = xor i32 %76, %2
  %218 = or i32 %20, %1
  %219 = or i32 %20, %23
  %220 = xor i32 %62, %0
  %221 = xor i32 %19, %2
  %222 = xor i32 %30, %0
  %223 = or i32 %94, %19
  %224 = xor i32 %111, %55
  %225 = xor i32 %102, 1073741823
  %226 = xor i32 %225, %101
  %227 = or i32 %45, %1
  %228 = and i32 %20, %39
  %229 = or i32 %94, %0
  %230 = and i32 %27, %108
  %231 = add i32 %20, 1
  %232 = and i32 %66, %7
  %233 = or i32 %66, %7
  %234 = or i32 %52, %7
  %235 = or i32 %23, %94
  %236 = xor i32 %48, %51
  %237 = or i32 %52, %0
  %238 = or i32 %23, %21
  %239 = and i32 %75, %94
  %240 = shl i32 %239, 1
  %241 = or i32 %67, %0
  %242 = or i32 %20, %39
  %243 = or i32 %51, %2
  %244 = or i32 %29, %76
  %245 = or i32 %23, %8
  %246 = shl i32 %245, 1
  %247 = and i32 %20, %25
  %248 = or i32 %39, %2
  %249 = shl i32 %248, 1
  %250 = or i32 %34, %55
  %251 = or i32 %20, %25
  %252 = and i32 %83, %1
  %253 = or i32 %45, %62
  %254 = and i32 %83, %17
  %255 = shl i32 %108, 1
  %256 = and i32 %8, %108
  %257 = xor i32 %189, 2147483647
  %258 = xor i32 %257, %115
  %259 = xor i32 %71, %1
  %260 = or i32 %69, %0
  %261 = or i32 %29, %25
  %262 = and i32 %8, %39
  %263 = or i32 %111, %184
  %264 = or i32 %51, %21
  %265 = or i32 %29, %9
  %266 = xor i32 %45, %69
  %267 = and i32 %25, %86
  %268 = shl i32 %267, 1
  %269 = or i32 %25, %8
  %270 = xor i32 %43, %1
  %271 = xor i32 %94, %0
  %272 = and i32 %86, %39
  %273 = or i32 %30, %0
  %274 = xor i32 %29, %48
  %275 = or i32 %29, %1
  %276 = xor i32 %45, %1
  %277 = shl i32 %75, 1
  %278 = and i32 %94, %7
  %279 = or i32 %21, %76
  %280 = and i32 %94, %73
  %281 = and i32 %27, %73
  %282 = and i32 %21, %108
  %283 = or i32 %51, %94
  %284 = xor i32 %108, %2
  %285 = and i32 %52, %7
  %286 = mul i32 %285, 10
  %287 = and i32 %9, %7
  %288 = mul i32 %287, -14
  %289 = and i32 %52, %0
  %290 = and i32 %9, %0
  %291 = mul i32 %290, -24
  %292 = and i32 %67, %7
  %293 = mul i32 %292, -12
  %294 = and i32 %67, %0
  %295 = sub i32 -2, %0
  %296 = add i32 %295, %23
  %297 = add i32 %296, %269
  %298 = add i32 %297, %221
  %299 = add i32 %298, %198
  %300 = add i32 %299, %174
  %301 = add i32 %300, %42
  %302 = add i32 %301, %27
  %303 = add i32 %302, %294
  %304 = add i32 %303, %264
  %305 = add i32 %304, %253
  %306 = add i32 %305, %129
  %307 = add i32 %306, %188
  %308 = add i32 %307, %178
  %309 = add i32 %308, %175
  %310 = add i32 %309, %166
  %311 = add i32 %310, %98
  %312 = add i32 %311, %88
  %313 = add i32 %312, %81
  %314 = add i32 %313, %130
  %315 = add i32 %314, %170
  %316 = add i32 %315, %258
  %317 = add i32 %316, %164
  %318 = shl i32 %317, 1
  %319 = add i32 %15, %27
  %320 = add i32 %319, 2
  %321 = sub i32 %320, %215
  %322 = sub i32 %321, %111
  %323 = add i32 %322, %153
  %324 = add i32 %323, %125
  %325 = mul i32 %324, 5
  %326 = sub i32 %64, %217
  %327 = add i32 %326, %167
  %328 = add i32 %327, %47
  %329 = mul i32 %328, 3
  %330 = or i32 %101, %289
  %331 = mul i32 %330, -9
  %332 = add i32 %242, 1073741823
  %333 = add i32 %332, %184
  %334 = add i32 %333, %226
  %335 = shl i32 %334, 2
  %336 = add i32 %75, %0
  %337 = add i32 %336, %25
  %338 = add i32 %337, %51
  %339 = add i32 %338, 6
  %340 = add i32 %339, %51
  %341 = add i32 %340, %25
  %342 = add i32 %341, %26
  %343 = sub i32 %342, %40
  %344 = sub i32 %343, %54
  %345 = add i32 %344, %58
  %346 = add i32 %345, %70
  %347 = add i32 %346, %20
  %348 = add i32 %347, %120
  %349 = sub i32 %348, %45
  %350 = add i32 %349, %29
  %351 = sub i32 %350, %15
  %352 = add i32 %351, %146
  %353 = sub i32 %352, %147
  %354 = add i32 %353, %154
  %355 = add i32 %354, %193
  %356 = sub i32 %355, %199
  %357 = sub i32 %356, %202
  %358 = add i32 %357, %204
  %359 = sub i32 %358, %206
  %360 = add i32 %359, %207
  %361 = sub i32 %360, %209
  %362 = sub i32 %361, %214
  %363 = add i32 %362, %231
  %364 = sub i32 %363, %243
  %365 = add i32 %364, %9
  %366 = sub i32 %365, %255
  %367 = sub i32 %366, %256
  %368 = add i32 %367, %262
  %369 = add i32 %368, %48
  %370 = sub i32 %369, %277
  %371 = add i32 %370, %284
  %372 = add i32 %371, %13
  %373 = add i32 %372, %16
  %374 = add i32 %373, %22
  %375 = sub i32 %374, %24
  %376 = sub i32 %375, %28
  %377 = add i32 %376, %44
  %378 = add i32 %377, %46
  %379 = add i32 %378, %53
  %380 = add i32 %379, %63
  %381 = add i32 %380, %65
  %382 = sub i32 %381, %68
  %383 = sub i32 %382, %72
  %384 = add i32 %383, %74
  %385 = add i32 %384, %77
  %386 = add i32 %385, %78
  %387 = add i32 %386, %79
  %388 = sub i32 %387, %80
  %389 = sub i32 %388, %82
  %390 = add i32 %389, %84
  %391 = sub i32 %390, %85
  %392 = add i32 %391, %87
  %393 = add i32 %392, %89
  %394 = add i32 %393, %90
  %395 = add i32 %394, %91
  %396 = sub i32 %395, %92
  %397 = add i32 %396, %93
  %398 = add i32 %397, %97
  %399 = sub i32 %398, %99
  %400 = add i32 %399, %100
  %401 = add i32 %400, %35
  %402 = add i32 %401, %104
  %403 = add i32 %402, %119
  %404 = sub i32 %403, %121
  %405 = sub i32 %404, %122
  %406 = add i32 %405, %123
  %407 = add i32 %406, %124
  %408 = add i32 %407, %126
  %409 = sub i32 %408, %127
  %410 = sub i32 %409, %128
  %411 = sub i32 %410, %133
  %412 = sub i32 %411, %135
  %413 = sub i32 %412, %136
  %414 = add i32 %413, %137
  %415 = add i32 %414, %138
  %416 = sub i32 %415, %139
  %417 = sub i32 %416, %112
  %418 = add i32 %417, %140
  %419 = sub i32 %418, %141
  %420 = add i32 %419, %142
  %421 = sub i32 %420, %150
  %422 = add i32 %421, %151
  %423 = add i32 %422, %152
  %424 = sub i32 %423, %155
  %425 = sub i32 %424, %156
  %426 = add i32 %425, %157
  %427 = add i32 %426, %158
  %428 = add i32 %427, %159
  %429 = sub i32 %428, %162
  %430 = sub i32 %429, %55
  %431 = sub i32 %430, %165
  %432 = sub i32 %431, %168
  %433 = add i32 %432, %171
  %434 = sub i32 %433, %176
  %435 = sub i32 %434, %177
  %436 = sub i32 %435, %179
  %437 = add i32 %436, %180
  %438 = add i32 %437, %102
  %439 = add i32 %438, %182
  %440 = sub i32 %439, %183
  %441 = sub i32 %440, %187
  %442 = sub i32 %441, %116
  %443 = add i32 %442, %192
  %444 = sub i32 %443, %194
  %445 = sub i32 %444, %195
  %446 = sub i32 %445, %196
  %447 = sub i32 %446, %200
  %448 = sub i32 %447, %201
  %449 = sub i32 %448, %203
  %450 = sub i32 %449, %205
  %451 = sub i32 %450, %143
  %452 = sub i32 %451, %208
  %453 = sub i32 %452, %212
  %454 = sub i32 %453, %213
  %455 = sub i32 %454, %216
  %456 = add i32 %455, %218
  %457 = sub i32 %456, %219
  %458 = sub i32 %457, %220
  %459 = sub i32 %458, %222
  %460 = add i32 %459, %223
  %461 = add i32 %460, %227
  %462 = add i32 %461, %228
  %463 = add i32 %462, %229
  %464 = add i32 %463, %230
  %465 = add i32 %464, %232
  %466 = sub i32 %465, %233
  %467 = add i32 %466, %234
  %468 = add i32 %467, %235
  %469 = add i32 %468, %236
  %470 = sub i32 %469, %237
  %471 = sub i32 %470, %238
  %472 = add i32 %471, %241
  %473 = add i32 %472, %244
  %474 = sub i32 %473, %246
  %475 = add i32 %474, %247
  %476 = sub i32 %475, %249
  %477 = sub i32 %476, %251
  %478 = add i32 %477, %252
  %479 = add i32 %478, %254
  %480 = sub i32 %479, %259
  %481 = sub i32 %480, %260
  %482 = add i32 %481, %261
  %483 = sub i32 %482, %265
  %484 = add i32 %483, %266
  %485 = sub i32 %484, %270
  %486 = add i32 %485, %271
  %487 = sub i32 %486, %272
  %488 = sub i32 %487, %273
  %489 = sub i32 %488, %274
  %490 = sub i32 %489, %275
  %491 = add i32 %490, %276
  %492 = add i32 %491, %278
  %493 = sub i32 %492, %279
  %494 = add i32 %493, %280
  %495 = sub i32 %494, %281
  %496 = add i32 %495, %282
  %497 = sub i32 %496, %283
  %498 = add i32 %497, %14
  %499 = sub i32 %498, %32
  %500 = add i32 %499, %41
  %501 = sub i32 %500, %50
  %502 = add i32 %501, %57
  %503 = sub i32 %502, %61
  %504 = sub i32 %503, %96
  %505 = add i32 %504, %103
  %506 = add i32 %505, %107
  %507 = sub i32 %506, %110
  %508 = sub i32 %507, %118
  %509 = sub i32 %508, %132
  %510 = sub i32 %509, %145
  %511 = sub i32 %510, %148
  %512 = sub i32 %511, %161
  %513 = sub i32 %512, %173
  %514 = add i32 %513, %181
  %515 = sub i32 %514, %186
  %516 = sub i32 %515, %190
  %517 = sub i32 %516, %191
  %518 = sub i32 %517, %197
  %519 = sub i32 %518, %211
  %520 = sub i32 %519, %224
  %521 = sub i32 %520, %240
  %522 = sub i32 %521, %250
  %523 = add i32 %522, %263
  %524 = sub i32 %523, %268
  %525 = add i32 %524, %286
  %526 = add i32 %525, %288
  %527 = add i32 %526, %291
  %528 = add i32 %527, %293
  %529 = sub i32 %528, %114
  %530 = add i32 %529, %331
  %531 = sub i32 %530, %38
  %532 = add i32 %531, %329
  %533 = add i32 %532, %325
  %534 = add i32 %533, %335
  %535 = add i32 %534, %318
  %536 = icmp eq i32 %12, %535
  %537 = select i1 %536, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %538 = tail call i32 @puts(i8* nonnull dereferenceable(1) %537)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
