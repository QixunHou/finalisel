digraph "DFG for'crackme' function" {
	Node0x24d3a00[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x24d3a70[shape=record, label="  %4 = or i32 %3, %0"];
	Node0x24d3b30[shape=record, label="  %5 = xor i32 %0, -1"];
	Node0x24d3ba0[shape=record, label="  %6 = and i32 %1, %0"];
	Node0x24d3c10[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x24d3cb0[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0x24d3d20[shape=record, label="  %9 = xor i32 %5, %1"];
	Node0x24d3d90[shape=record, label="  %10 = or i32 %1, %0"];
	Node0x24d3e00[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x24d3e70[shape=record, label="  %12 = sub i32 %5, %1"];
	Node0x24d3ee0[shape=record, label="  %13 = add i32 %12, %3"];
	Node0x24d3f50[shape=record, label="  %14 = add i32 %13, %9"];
	Node0x24d3fc0[shape=record, label="  %15 = sub i32 %14, %6"];
	Node0x24d4030[shape=record, label="  %16 = add i32 %15, %11"];
	Node0x24d40a0[shape=record, label="  %17 = sub i32 %16, %8"];
	Node0x24d4110[shape=record, label="  %18 = icmp eq i32 %4, %17"];
	Node0x2474268[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x24d45b0[shape=record, label="  %20 = tail call i32 @puts(i8* nonnull dereferenceable(1) %19)"];
	Node0x24d4600[shape=record, label="  ret void"];
	Node0x24d3a00 -> Node0x24d3a70;
	Node0x24d3a70 -> Node0x24d3b30;
	Node0x24d3b30 -> Node0x24d3ba0;
	Node0x24d3ba0 -> Node0x24d3c10;
	Node0x24d3c10 -> Node0x24d3cb0;
	Node0x24d3cb0 -> Node0x24d3d20;
	Node0x24d3d20 -> Node0x24d3d90;
	Node0x24d3d90 -> Node0x24d3e00;
	Node0x24d3e00 -> Node0x24d3e70;
	Node0x24d3e70 -> Node0x24d3ee0;
	Node0x24d3ee0 -> Node0x24d3f50;
	Node0x24d3f50 -> Node0x24d3fc0;
	Node0x24d3fc0 -> Node0x24d4030;
	Node0x24d4030 -> Node0x24d40a0;
	Node0x24d40a0 -> Node0x24d4110;
	Node0x24d4110 -> Node0x2474268;
	Node0x2474268 -> Node0x24d45b0;
	Node0x24d45b0 -> Node0x24d4600;
edge [color=red]
	Node0x24d3a00 -> Node0x24d3a70;
	Node0x24d3ba0 -> Node0x24d3c10;
	Node0x24d3c10 -> Node0x24d3cb0;
	Node0x24d3b30 -> Node0x24d3d20;
	Node0x24d3d90 -> Node0x24d3e00;
	Node0x24d3b30 -> Node0x24d3e70;
	Node0x24d3e70 -> Node0x24d3ee0;
	Node0x24d3a00 -> Node0x24d3ee0;
	Node0x24d3ee0 -> Node0x24d3f50;
	Node0x24d3d20 -> Node0x24d3f50;
	Node0x24d3f50 -> Node0x24d3fc0;
	Node0x24d3ba0 -> Node0x24d3fc0;
	Node0x24d3fc0 -> Node0x24d4030;
	Node0x24d3e00 -> Node0x24d4030;
	Node0x24d4030 -> Node0x24d40a0;
	Node0x24d3cb0 -> Node0x24d40a0;
	Node0x24d3a70 -> Node0x24d4110;
	Node0x24d40a0 -> Node0x24d4110;
	Node0x24d4110 -> Node0x2474268;
	Node0x2474268 -> Node0x24d45b0;
}
