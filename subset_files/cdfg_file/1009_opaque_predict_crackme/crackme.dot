digraph "DFG for'crackme' function" {
	Node0xff6f10[shape=record, label="  %6 = and i32 %4, %3"];
	Node0xff6f80[shape=record, label="  %7 = and i32 %2, %1"];
	Node0xff6ff0[shape=record, label="  %8 = or i32 %7, %0"];
	Node0xff7670[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0xff76e0[shape=record, label="  %10 = xor i32 %2, %1"];
	Node0xff7750[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0xff77c0[shape=record, label="  %12 = or i32 %11, %9"];
	Node0xff7860[shape=record, label="  %13 = sub i32 1, %8"];
	Node0xff78d0[shape=record, label="  %14 = add i32 %13, %12"];
	Node0xff7940[shape=record, label="  %15 = add i32 %14, %6"];
	Node0xff79b0[shape=record, label="  %16 = xor i32 %4, -1"];
	Node0xff7a20[shape=record, label="  %17 = and i32 %16, %3"];
	Node0xff7a90[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0xff7b30[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0xff7ba0[shape=record, label="  %20 = or i32 %16, %3"];
	Node0xff7c10[shape=record, label="  %21 = xor i32 %4, %3"];
	Node0xff7c80[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0xff7cf0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0xff7d60[shape=record, label="  %24 = or i32 %4, %3"];
	Node0xff7dd0[shape=record, label="  %25 = add i32 %20, 1"];
	Node0xff7e40[shape=record, label="  %26 = xor i32 %2, -1"];
	Node0xff7eb0[shape=record, label="  %27 = and i32 %26, %0"];
	Node0xff7f20[shape=record, label="  %28 = xor i32 %1, -1"];
	Node0xff7f90[shape=record, label="  %29 = and i32 %28, %2"];
	Node0xff8000[shape=record, label="  %30 = or i32 %27, %29"];
	Node0xff8070[shape=record, label="  %31 = and i32 %1, %0"];
	Node0xff80e0[shape=record, label="  %32 = xor i32 %2, %0"];
	Node0xff8360[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0xff83d0[shape=record, label="  %34 = or i32 %31, %33"];
	Node0xff8440[shape=record, label="  %35 = and i32 %26, %1"];
	Node0xff84b0[shape=record, label="  %36 = xor i32 %35, -1"];
	Node0xff8520[shape=record, label="  %37 = and i32 %36, %9"];
	Node0xff8590[shape=record, label="  %38 = xor i32 %29, %0"];
	Node0xff8600[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0xff8670[shape=record, label="  %40 = and i32 %28, %0"];
	Node0xff86e0[shape=record, label="  %41 = xor i32 %40, -1"];
	Node0xff8750[shape=record, label="  %42 = and i32 %11, %41"];
	Node0xff87c0[shape=record, label="  %43 = or i32 %26, %0"];
	Node0xff8830[shape=record, label="  %44 = xor i32 %43, %1"];
	Node0xff88a0[shape=record, label="  %45 = or i32 %40, %11"];
	Node0xff8910[shape=record, label="  %46 = shl i32 %43, 1"];
	Node0xff8980[shape=record, label="  %47 = and i32 %2, %0"];
	Node0xff8a20[shape=record, label="  %48 = xor i32 %0, 2147483647"];
	Node0xff8a90[shape=record, label="  %49 = xor i32 %48, %1"];
	Node0xff8b00[shape=record, label="  %50 = or i32 %47, %49"];
	Node0xff8b70[shape=record, label="  %51 = shl i32 %50, 1"];
	Node0xff8be0[shape=record, label="  %52 = or i32 %32, %31"];
	Node0xff8c50[shape=record, label="  %53 = xor i32 %43, %31"];
	Node0xff8cc0[shape=record, label="  %54 = or i32 %10, %31"];
	Node0xff8d30[shape=record, label="  %55 = shl i32 %54, 1"];
	Node0xff8da0[shape=record, label="  %56 = xor i32 %35, %0"];
	Node0xff8e10[shape=record, label="  %57 = or i32 %2, %1"];
	Node0xff8e80[shape=record, label="  %58 = xor i32 %57, -1"];
	Node0xff8ef0[shape=record, label="  %59 = add i32 %57, 1"];
	Node0xff8f60[shape=record, label="  %60 = or i32 %47, %28"];
	Node0xff8fd0[shape=record, label="  %61 = or i32 %40, %33"];
	Node0xff9040[shape=record, label="  %62 = or i32 %47, %35"];
	Node0xff90b0[shape=record, label="  %63 = and i32 %29, %9"];
	Node0xff9120[shape=record, label="  %64 = xor i32 %10, 2147483647"];
	Node0xff95a0[shape=record, label="  %65 = and i32 %64, %0"];
	Node0xff9610[shape=record, label="  %66 = or i32 %65, %63"];
	Node0xff9680[shape=record, label="  %67 = shl i32 %66, 1"];
	Node0xff96f0[shape=record, label="  %68 = and i32 %43, %28"];
	Node0xff9760[shape=record, label="  %69 = xor i32 %47, %36"];
	Node0xff97d0[shape=record, label="  %70 = shl i32 %69, 1"];
	Node0xff9840[shape=record, label="  %71 = or i32 %35, %9"];
	Node0xff98b0[shape=record, label="  %72 = shl i32 %35, 1"];
	Node0xff9920[shape=record, label="  %73 = and i32 %58, %9"];
	Node0xff9990[shape=record, label="  %74 = and i32 %58, %0"];
	Node0xff9a00[shape=record, label="  %75 = and i32 %35, %0"];
	Node0xff9a70[shape=record, label="  %76 = and i32 %7, %9"];
	Node0xff9ae0[shape=record, label="  %77 = and i32 %29, %0"];
	Node0xff9b50[shape=record, label="  %78 = and i32 %7, %0"];
	Node0xff9bc0[shape=record, label="  %79 = add i32 %73, %76"];
	Node0xff9c30[shape=record, label="  %80 = add i32 %79, %53"];
	Node0xff9ca0[shape=record, label="  %81 = add i32 %80, %25"];
	Node0xff9d10[shape=record, label="  %82 = sub i32 %81, %17"];
	Node0xff9db0[shape=record, label="  %83 = mul i32 %82, 3"];
	Node0xff9e20[shape=record, label="  %84 = add i32 %37, %3"];
	Node0xff9e90[shape=record, label="  %85 = add i32 %84, %68"];
	Node0xff9f00[shape=record, label="  %86 = add i32 %85, %34"];
	Node0xff9f70[shape=record, label="  %87 = shl i32 %86, 1"];
	Node0xff9fe0[shape=record, label="  %88 = sub i32 %78, %77"];
	Node0xffa050[shape=record, label="  %89 = add i32 %88, %56"];
	Node0xffa0f0[shape=record, label="  %90 = mul i32 %89, 5"];
	Node0xffa160[shape=record, label="  %91 = or i32 %63, %75"];
	Node0xffa200[shape=record, label="  %92 = mul i32 %91, 7"];
	Node0xffa270[shape=record, label="  %93 = sub i32 %59, %4"];
	Node0xffa2e0[shape=record, label="  %94 = add i32 %93, %30"];
	Node0xffa350[shape=record, label="  %95 = sub i32 %94, %42"];
	Node0xffa3c0[shape=record, label="  %96 = sub i32 %95, %44"];
	Node0xffa430[shape=record, label="  %97 = sub i32 %96, %45"];
	Node0xffa4a0[shape=record, label="  %98 = sub i32 %97, %46"];
	Node0xffa510[shape=record, label="  %99 = add i32 %98, %52"];
	Node0xffa580[shape=record, label="  %100 = add i32 %99, %60"];
	Node0xffa5f0[shape=record, label="  %101 = sub i32 %100, %61"];
	Node0xffa660[shape=record, label="  %102 = sub i32 %101, %62"];
	Node0xffa6d0[shape=record, label="  %103 = sub i32 %102, %71"];
	Node0xffa740[shape=record, label="  %104 = sub i32 %103, %72"];
	Node0xffa7b0[shape=record, label="  %105 = sub i32 %104, %74"];
	Node0xffa820[shape=record, label="  %106 = sub i32 %105, %20"];
	Node0xffa890[shape=record, label="  %107 = add i32 %106, %24"];
	Node0xffa900[shape=record, label="  %108 = sub i32 %107, %6"];
	Node0xffa970[shape=record, label="  %109 = sub i32 %108, %39"];
	Node0xffa9e0[shape=record, label="  %110 = sub i32 %109, %51"];
	Node0xffaa50[shape=record, label="  %111 = sub i32 %110, %55"];
	Node0xffaac0[shape=record, label="  %112 = sub i32 %111, %70"];
	Node0xffab30[shape=record, label="  %113 = add i32 %112, %92"];
	Node0xffaba0[shape=record, label="  %114 = add i32 %113, %19"];
	Node0xffac10[shape=record, label="  %115 = sub i32 %114, %23"];
	Node0xffac80[shape=record, label="  %116 = sub i32 %115, %67"];
	Node0xffacf0[shape=record, label="  %117 = add i32 %116, %90"];
	Node0xffad60[shape=record, label="  %118 = add i32 %117, %87"];
	Node0xffadd0[shape=record, label="  %119 = add i32 %118, %83"];
	Node0xffae40[shape=record, label="  %120 = icmp eq i32 %15, %119"];
	Node0xf97268[shape=record, label="  %121 = select i1 %120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xffb0d0[shape=record, label="  %122 = tail call i32 @puts(i8* nonnull dereferenceable(1) %121)"];
	Node0xffb120[shape=record, label="  ret void"];
	Node0xff6f10 -> Node0xff6f80;
	Node0xff6f80 -> Node0xff6ff0;
	Node0xff6ff0 -> Node0xff7670;
	Node0xff7670 -> Node0xff76e0;
	Node0xff76e0 -> Node0xff7750;
	Node0xff7750 -> Node0xff77c0;
	Node0xff77c0 -> Node0xff7860;
	Node0xff7860 -> Node0xff78d0;
	Node0xff78d0 -> Node0xff7940;
	Node0xff7940 -> Node0xff79b0;
	Node0xff79b0 -> Node0xff7a20;
	Node0xff7a20 -> Node0xff7a90;
	Node0xff7a90 -> Node0xff7b30;
	Node0xff7b30 -> Node0xff7ba0;
	Node0xff7ba0 -> Node0xff7c10;
	Node0xff7c10 -> Node0xff7c80;
	Node0xff7c80 -> Node0xff7cf0;
	Node0xff7cf0 -> Node0xff7d60;
	Node0xff7d60 -> Node0xff7dd0;
	Node0xff7dd0 -> Node0xff7e40;
	Node0xff7e40 -> Node0xff7eb0;
	Node0xff7eb0 -> Node0xff7f20;
	Node0xff7f20 -> Node0xff7f90;
	Node0xff7f90 -> Node0xff8000;
	Node0xff8000 -> Node0xff8070;
	Node0xff8070 -> Node0xff80e0;
	Node0xff80e0 -> Node0xff8360;
	Node0xff8360 -> Node0xff83d0;
	Node0xff83d0 -> Node0xff8440;
	Node0xff8440 -> Node0xff84b0;
	Node0xff84b0 -> Node0xff8520;
	Node0xff8520 -> Node0xff8590;
	Node0xff8590 -> Node0xff8600;
	Node0xff8600 -> Node0xff8670;
	Node0xff8670 -> Node0xff86e0;
	Node0xff86e0 -> Node0xff8750;
	Node0xff8750 -> Node0xff87c0;
	Node0xff87c0 -> Node0xff8830;
	Node0xff8830 -> Node0xff88a0;
	Node0xff88a0 -> Node0xff8910;
	Node0xff8910 -> Node0xff8980;
	Node0xff8980 -> Node0xff8a20;
	Node0xff8a20 -> Node0xff8a90;
	Node0xff8a90 -> Node0xff8b00;
	Node0xff8b00 -> Node0xff8b70;
	Node0xff8b70 -> Node0xff8be0;
	Node0xff8be0 -> Node0xff8c50;
	Node0xff8c50 -> Node0xff8cc0;
	Node0xff8cc0 -> Node0xff8d30;
	Node0xff8d30 -> Node0xff8da0;
	Node0xff8da0 -> Node0xff8e10;
	Node0xff8e10 -> Node0xff8e80;
	Node0xff8e80 -> Node0xff8ef0;
	Node0xff8ef0 -> Node0xff8f60;
	Node0xff8f60 -> Node0xff8fd0;
	Node0xff8fd0 -> Node0xff9040;
	Node0xff9040 -> Node0xff90b0;
	Node0xff90b0 -> Node0xff9120;
	Node0xff9120 -> Node0xff95a0;
	Node0xff95a0 -> Node0xff9610;
	Node0xff9610 -> Node0xff9680;
	Node0xff9680 -> Node0xff96f0;
	Node0xff96f0 -> Node0xff9760;
	Node0xff9760 -> Node0xff97d0;
	Node0xff97d0 -> Node0xff9840;
	Node0xff9840 -> Node0xff98b0;
	Node0xff98b0 -> Node0xff9920;
	Node0xff9920 -> Node0xff9990;
	Node0xff9990 -> Node0xff9a00;
	Node0xff9a00 -> Node0xff9a70;
	Node0xff9a70 -> Node0xff9ae0;
	Node0xff9ae0 -> Node0xff9b50;
	Node0xff9b50 -> Node0xff9bc0;
	Node0xff9bc0 -> Node0xff9c30;
	Node0xff9c30 -> Node0xff9ca0;
	Node0xff9ca0 -> Node0xff9d10;
	Node0xff9d10 -> Node0xff9db0;
	Node0xff9db0 -> Node0xff9e20;
	Node0xff9e20 -> Node0xff9e90;
	Node0xff9e90 -> Node0xff9f00;
	Node0xff9f00 -> Node0xff9f70;
	Node0xff9f70 -> Node0xff9fe0;
	Node0xff9fe0 -> Node0xffa050;
	Node0xffa050 -> Node0xffa0f0;
	Node0xffa0f0 -> Node0xffa160;
	Node0xffa160 -> Node0xffa200;
	Node0xffa200 -> Node0xffa270;
	Node0xffa270 -> Node0xffa2e0;
	Node0xffa2e0 -> Node0xffa350;
	Node0xffa350 -> Node0xffa3c0;
	Node0xffa3c0 -> Node0xffa430;
	Node0xffa430 -> Node0xffa4a0;
	Node0xffa4a0 -> Node0xffa510;
	Node0xffa510 -> Node0xffa580;
	Node0xffa580 -> Node0xffa5f0;
	Node0xffa5f0 -> Node0xffa660;
	Node0xffa660 -> Node0xffa6d0;
	Node0xffa6d0 -> Node0xffa740;
	Node0xffa740 -> Node0xffa7b0;
	Node0xffa7b0 -> Node0xffa820;
	Node0xffa820 -> Node0xffa890;
	Node0xffa890 -> Node0xffa900;
	Node0xffa900 -> Node0xffa970;
	Node0xffa970 -> Node0xffa9e0;
	Node0xffa9e0 -> Node0xffaa50;
	Node0xffaa50 -> Node0xffaac0;
	Node0xffaac0 -> Node0xffab30;
	Node0xffab30 -> Node0xffaba0;
	Node0xffaba0 -> Node0xffac10;
	Node0xffac10 -> Node0xffac80;
	Node0xffac80 -> Node0xffacf0;
	Node0xffacf0 -> Node0xffad60;
	Node0xffad60 -> Node0xffadd0;
	Node0xffadd0 -> Node0xffae40;
	Node0xffae40 -> Node0xf97268;
	Node0xf97268 -> Node0xffb0d0;
	Node0xffb0d0 -> Node0xffb120;
edge [color=red]
	Node0xff6f80 -> Node0xff6ff0;
	Node0xff76e0 -> Node0xff7750;
	Node0xff7750 -> Node0xff77c0;
	Node0xff7670 -> Node0xff77c0;
	Node0xff6ff0 -> Node0xff7860;
	Node0xff7860 -> Node0xff78d0;
	Node0xff77c0 -> Node0xff78d0;
	Node0xff78d0 -> Node0xff7940;
	Node0xff6f10 -> Node0xff7940;
	Node0xff79b0 -> Node0xff7a20;
	Node0xff7a20 -> Node0xff7a90;
	Node0xff7a90 -> Node0xff7b30;
	Node0xff79b0 -> Node0xff7ba0;
	Node0xff7c10 -> Node0xff7c80;
	Node0xff7c80 -> Node0xff7cf0;
	Node0xff7ba0 -> Node0xff7dd0;
	Node0xff7e40 -> Node0xff7eb0;
	Node0xff7f20 -> Node0xff7f90;
	Node0xff7eb0 -> Node0xff8000;
	Node0xff7f90 -> Node0xff8000;
	Node0xff80e0 -> Node0xff8360;
	Node0xff8070 -> Node0xff83d0;
	Node0xff8360 -> Node0xff83d0;
	Node0xff7e40 -> Node0xff8440;
	Node0xff8440 -> Node0xff84b0;
	Node0xff84b0 -> Node0xff8520;
	Node0xff7670 -> Node0xff8520;
	Node0xff7f90 -> Node0xff8590;
	Node0xff8590 -> Node0xff8600;
	Node0xff7f20 -> Node0xff8670;
	Node0xff8670 -> Node0xff86e0;
	Node0xff7750 -> Node0xff8750;
	Node0xff86e0 -> Node0xff8750;
	Node0xff7e40 -> Node0xff87c0;
	Node0xff87c0 -> Node0xff8830;
	Node0xff8670 -> Node0xff88a0;
	Node0xff7750 -> Node0xff88a0;
	Node0xff87c0 -> Node0xff8910;
	Node0xff8a20 -> Node0xff8a90;
	Node0xff8980 -> Node0xff8b00;
	Node0xff8a90 -> Node0xff8b00;
	Node0xff8b00 -> Node0xff8b70;
	Node0xff80e0 -> Node0xff8be0;
	Node0xff8070 -> Node0xff8be0;
	Node0xff87c0 -> Node0xff8c50;
	Node0xff8070 -> Node0xff8c50;
	Node0xff76e0 -> Node0xff8cc0;
	Node0xff8070 -> Node0xff8cc0;
	Node0xff8cc0 -> Node0xff8d30;
	Node0xff8440 -> Node0xff8da0;
	Node0xff8e10 -> Node0xff8e80;
	Node0xff8e10 -> Node0xff8ef0;
	Node0xff8980 -> Node0xff8f60;
	Node0xff7f20 -> Node0xff8f60;
	Node0xff8670 -> Node0xff8fd0;
	Node0xff8360 -> Node0xff8fd0;
	Node0xff8980 -> Node0xff9040;
	Node0xff8440 -> Node0xff9040;
	Node0xff7f90 -> Node0xff90b0;
	Node0xff7670 -> Node0xff90b0;
	Node0xff76e0 -> Node0xff9120;
	Node0xff9120 -> Node0xff95a0;
	Node0xff95a0 -> Node0xff9610;
	Node0xff90b0 -> Node0xff9610;
	Node0xff9610 -> Node0xff9680;
	Node0xff87c0 -> Node0xff96f0;
	Node0xff7f20 -> Node0xff96f0;
	Node0xff8980 -> Node0xff9760;
	Node0xff84b0 -> Node0xff9760;
	Node0xff9760 -> Node0xff97d0;
	Node0xff8440 -> Node0xff9840;
	Node0xff7670 -> Node0xff9840;
	Node0xff8440 -> Node0xff98b0;
	Node0xff8e80 -> Node0xff9920;
	Node0xff7670 -> Node0xff9920;
	Node0xff8e80 -> Node0xff9990;
	Node0xff8440 -> Node0xff9a00;
	Node0xff6f80 -> Node0xff9a70;
	Node0xff7670 -> Node0xff9a70;
	Node0xff7f90 -> Node0xff9ae0;
	Node0xff6f80 -> Node0xff9b50;
	Node0xff9920 -> Node0xff9bc0;
	Node0xff9a70 -> Node0xff9bc0;
	Node0xff9bc0 -> Node0xff9c30;
	Node0xff8c50 -> Node0xff9c30;
	Node0xff9c30 -> Node0xff9ca0;
	Node0xff7dd0 -> Node0xff9ca0;
	Node0xff9ca0 -> Node0xff9d10;
	Node0xff7a20 -> Node0xff9d10;
	Node0xff9d10 -> Node0xff9db0;
	Node0xff8520 -> Node0xff9e20;
	Node0xff9e20 -> Node0xff9e90;
	Node0xff96f0 -> Node0xff9e90;
	Node0xff9e90 -> Node0xff9f00;
	Node0xff83d0 -> Node0xff9f00;
	Node0xff9f00 -> Node0xff9f70;
	Node0xff9b50 -> Node0xff9fe0;
	Node0xff9ae0 -> Node0xff9fe0;
	Node0xff9fe0 -> Node0xffa050;
	Node0xff8da0 -> Node0xffa050;
	Node0xffa050 -> Node0xffa0f0;
	Node0xff90b0 -> Node0xffa160;
	Node0xff9a00 -> Node0xffa160;
	Node0xffa160 -> Node0xffa200;
	Node0xff8ef0 -> Node0xffa270;
	Node0xffa270 -> Node0xffa2e0;
	Node0xff8000 -> Node0xffa2e0;
	Node0xffa2e0 -> Node0xffa350;
	Node0xff8750 -> Node0xffa350;
	Node0xffa350 -> Node0xffa3c0;
	Node0xff8830 -> Node0xffa3c0;
	Node0xffa3c0 -> Node0xffa430;
	Node0xff88a0 -> Node0xffa430;
	Node0xffa430 -> Node0xffa4a0;
	Node0xff8910 -> Node0xffa4a0;
	Node0xffa4a0 -> Node0xffa510;
	Node0xff8be0 -> Node0xffa510;
	Node0xffa510 -> Node0xffa580;
	Node0xff8f60 -> Node0xffa580;
	Node0xffa580 -> Node0xffa5f0;
	Node0xff8fd0 -> Node0xffa5f0;
	Node0xffa5f0 -> Node0xffa660;
	Node0xff9040 -> Node0xffa660;
	Node0xffa660 -> Node0xffa6d0;
	Node0xff9840 -> Node0xffa6d0;
	Node0xffa6d0 -> Node0xffa740;
	Node0xff98b0 -> Node0xffa740;
	Node0xffa740 -> Node0xffa7b0;
	Node0xff9990 -> Node0xffa7b0;
	Node0xffa7b0 -> Node0xffa820;
	Node0xff7ba0 -> Node0xffa820;
	Node0xffa820 -> Node0xffa890;
	Node0xff7d60 -> Node0xffa890;
	Node0xffa890 -> Node0xffa900;
	Node0xff6f10 -> Node0xffa900;
	Node0xffa900 -> Node0xffa970;
	Node0xff8600 -> Node0xffa970;
	Node0xffa970 -> Node0xffa9e0;
	Node0xff8b70 -> Node0xffa9e0;
	Node0xffa9e0 -> Node0xffaa50;
	Node0xff8d30 -> Node0xffaa50;
	Node0xffaa50 -> Node0xffaac0;
	Node0xff97d0 -> Node0xffaac0;
	Node0xffaac0 -> Node0xffab30;
	Node0xffa200 -> Node0xffab30;
	Node0xffab30 -> Node0xffaba0;
	Node0xff7b30 -> Node0xffaba0;
	Node0xffaba0 -> Node0xffac10;
	Node0xff7cf0 -> Node0xffac10;
	Node0xffac10 -> Node0xffac80;
	Node0xff9680 -> Node0xffac80;
	Node0xffac80 -> Node0xffacf0;
	Node0xffa0f0 -> Node0xffacf0;
	Node0xffacf0 -> Node0xffad60;
	Node0xff9f70 -> Node0xffad60;
	Node0xffad60 -> Node0xffadd0;
	Node0xff9db0 -> Node0xffadd0;
	Node0xff7940 -> Node0xffae40;
	Node0xffadd0 -> Node0xffae40;
	Node0xffae40 -> Node0xf97268;
	Node0xf97268 -> Node0xffb0d0;
}
