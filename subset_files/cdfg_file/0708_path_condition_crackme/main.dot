digraph "DFG for'main' function" {
	Node0x1f024a8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f02528[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f025b8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f02618[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1f02a98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f03498[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1f03578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f03638[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1f036e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f03948[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1f03a08[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f04978[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f04fe8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f050e0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1f052e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f05448[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f05558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f05618[shape=record, label="  ret i32 0"];
	Node0x1f024a8 -> Node0x1f02528;
	Node0x1f02528 -> Node0x1f025b8;
	Node0x1f025b8 -> Node0x1f02618;
	Node0x1f02618 -> Node0x1f02a98;
	Node0x1f02a98 -> Node0x1f03498;
	Node0x1f03498 -> Node0x1f03578;
	Node0x1f03578 -> Node0x1f03638;
	Node0x1f03638 -> Node0x1f036e8;
	Node0x1f036e8 -> Node0x1f03948;
	Node0x1f03948 -> Node0x1f03a08;
	Node0x1f03a08 -> Node0x1f04978;
	Node0x1f04978 -> Node0x1f04fe8;
	Node0x1f04fe8 -> Node0x1f050e0;
	Node0x1f050e0 -> Node0x1f052e8;
	Node0x1f052e8 -> Node0x1f05448;
	Node0x1f05448 -> Node0x1f05558;
	Node0x1f05558 -> Node0x1f05618;
edge [color=red]
	Node0x1f024a8 -> Node0x1f02618;
	Node0x1f02618 -> Node0x1f02a98;
	Node0x1f02528 -> Node0x1f03498;
	Node0x1f03498 -> Node0x1f03578;
	Node0x1f025b8 -> Node0x1f03638;
	Node0x1f03638 -> Node0x1f036e8;
	Node0x1f024a8 -> Node0x1f03948;
	Node0x1f02528 -> Node0x1f03948;
	Node0x1f025b8 -> Node0x1f03948;
	Node0x1f024a8 -> Node0x1f03a08;
	Node0x1f02528 -> Node0x1f04978;
	Node0x1f025b8 -> Node0x1f04fe8;
	Node0x1f03a08 -> Node0x1f050e0;
	Node0x1f04978 -> Node0x1f050e0;
	Node0x1f04fe8 -> Node0x1f050e0;
	Node0x1f03638 -> Node0x1f052e8;
	Node0x1f03498 -> Node0x1f05448;
	Node0x1f02618 -> Node0x1f05558;
}
