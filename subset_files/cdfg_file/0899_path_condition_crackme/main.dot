digraph "DFG for'main' function" {
	Node0x1ed5af8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ed5b78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ed5c08[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1ed6068[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ed6148[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1ed6268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ed64a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1ed6558[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ed74c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ed7b50[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1ed7bc0[shape=record, label="  %9 = add i32 %7, %8"];
	Node0x1ed7c30[shape=record, label="  %10 = sub i32 0, %9"];
	Node0x1ed7ca0[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x1ed7d10[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1ed7d80[shape=record, label="  %13 = shl i32 %8, 1"];
	Node0x1ed7df0[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1ed7e60[shape=record, label="  %15 = xor i32 %12, -2"];
	Node0x1ed7ed0[shape=record, label="  %16 = xor i32 %7, 2147483647"];
	Node0x1ed7f40[shape=record, label="  %17 = xor i32 %6, 1073741823"];
	Node0x1ed7fb0[shape=record, label="  %18 = and i32 %17, %7"];
	Node0x1ed8020[shape=record, label="  %19 = shl i32 %18, 2"];
	Node0x1ed8090[shape=record, label="  %20 = and i32 %16, %6"];
	Node0x1ed8100[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1ed8170[shape=record, label="  %22 = sub i32 %12, %6"];
	Node0x1ed81e0[shape=record, label="  %23 = sub i32 %22, %19"];
	Node0x1ed8250[shape=record, label="  %24 = sub i32 %23, %14"];
	Node0x1ed82c0[shape=record, label="  %25 = add i32 %24, %15"];
	Node0x1ed8330[shape=record, label="  %26 = sub i32 %25, %21"];
	Node0x1ed83a0[shape=record, label="  %27 = icmp eq i32 %26, %10"];
	Node0x1e769d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ed8430[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0x1ed8688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ed87e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ed88a8[shape=record, label="  ret i32 0"];
	Node0x1ed5af8 -> Node0x1ed5b78;
	Node0x1ed5b78 -> Node0x1ed5c08;
	Node0x1ed5c08 -> Node0x1ed6068;
	Node0x1ed6068 -> Node0x1ed6148;
	Node0x1ed6148 -> Node0x1ed6268;
	Node0x1ed6268 -> Node0x1ed64a0;
	Node0x1ed64a0 -> Node0x1ed6558;
	Node0x1ed6558 -> Node0x1ed74c8;
	Node0x1ed74c8 -> Node0x1ed7b50;
	Node0x1ed7b50 -> Node0x1ed7bc0;
	Node0x1ed7bc0 -> Node0x1ed7c30;
	Node0x1ed7c30 -> Node0x1ed7ca0;
	Node0x1ed7ca0 -> Node0x1ed7d10;
	Node0x1ed7d10 -> Node0x1ed7d80;
	Node0x1ed7d80 -> Node0x1ed7df0;
	Node0x1ed7df0 -> Node0x1ed7e60;
	Node0x1ed7e60 -> Node0x1ed7ed0;
	Node0x1ed7ed0 -> Node0x1ed7f40;
	Node0x1ed7f40 -> Node0x1ed7fb0;
	Node0x1ed7fb0 -> Node0x1ed8020;
	Node0x1ed8020 -> Node0x1ed8090;
	Node0x1ed8090 -> Node0x1ed8100;
	Node0x1ed8100 -> Node0x1ed8170;
	Node0x1ed8170 -> Node0x1ed81e0;
	Node0x1ed81e0 -> Node0x1ed8250;
	Node0x1ed8250 -> Node0x1ed82c0;
	Node0x1ed82c0 -> Node0x1ed8330;
	Node0x1ed8330 -> Node0x1ed83a0;
	Node0x1ed83a0 -> Node0x1e769d8;
	Node0x1e769d8 -> Node0x1ed8430;
	Node0x1ed8430 -> Node0x1ed8688;
	Node0x1ed8688 -> Node0x1ed87e8;
	Node0x1ed87e8 -> Node0x1ed88a8;
edge [color=red]
	Node0x1ed5af8 -> Node0x1ed5c08;
	Node0x1ed5c08 -> Node0x1ed6068;
	Node0x1ed5b78 -> Node0x1ed6148;
	Node0x1ed6148 -> Node0x1ed6268;
	Node0x1ed5af8 -> Node0x1ed64a0;
	Node0x1ed5b78 -> Node0x1ed64a0;
	Node0x1ed5af8 -> Node0x1ed6558;
	Node0x1ed5b78 -> Node0x1ed74c8;
	Node0x1ed74c8 -> Node0x1ed7b50;
	Node0x1ed6558 -> Node0x1ed7b50;
	Node0x1ed74c8 -> Node0x1ed7bc0;
	Node0x1ed7b50 -> Node0x1ed7bc0;
	Node0x1ed7bc0 -> Node0x1ed7c30;
	Node0x1ed74c8 -> Node0x1ed7ca0;
	Node0x1ed6558 -> Node0x1ed7ca0;
	Node0x1ed7ca0 -> Node0x1ed7d10;
	Node0x1ed7b50 -> Node0x1ed7d80;
	Node0x1ed7d80 -> Node0x1ed7df0;
	Node0x1ed7d10 -> Node0x1ed7e60;
	Node0x1ed74c8 -> Node0x1ed7ed0;
	Node0x1ed6558 -> Node0x1ed7f40;
	Node0x1ed7f40 -> Node0x1ed7fb0;
	Node0x1ed74c8 -> Node0x1ed7fb0;
	Node0x1ed7fb0 -> Node0x1ed8020;
	Node0x1ed7ed0 -> Node0x1ed8090;
	Node0x1ed6558 -> Node0x1ed8090;
	Node0x1ed8090 -> Node0x1ed8100;
	Node0x1ed7d10 -> Node0x1ed8170;
	Node0x1ed6558 -> Node0x1ed8170;
	Node0x1ed8170 -> Node0x1ed81e0;
	Node0x1ed8020 -> Node0x1ed81e0;
	Node0x1ed81e0 -> Node0x1ed8250;
	Node0x1ed7df0 -> Node0x1ed8250;
	Node0x1ed8250 -> Node0x1ed82c0;
	Node0x1ed7e60 -> Node0x1ed82c0;
	Node0x1ed82c0 -> Node0x1ed8330;
	Node0x1ed8100 -> Node0x1ed8330;
	Node0x1ed8330 -> Node0x1ed83a0;
	Node0x1ed7c30 -> Node0x1ed83a0;
	Node0x1ed83a0 -> Node0x1e769d8;
	Node0x1e769d8 -> Node0x1ed8430;
	Node0x1ed6148 -> Node0x1ed8688;
	Node0x1ed5c08 -> Node0x1ed87e8;
}
