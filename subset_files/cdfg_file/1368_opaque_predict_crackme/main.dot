digraph "DFG for'main' function" {
	Node0xf58c58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf58cd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf58d68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xf591c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xf592a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xf593c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf59600[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xf596b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf5a628[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf5acb0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0xf5ad20[shape=record, label="  %9 = add i32 %7, 1"];
	Node0xf5ad90[shape=record, label="  %10 = add i32 %9, %8"];
	Node0xf5ae00[shape=record, label="  %11 = or i32 %7, %6"];
	Node0xf5ae70[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0xf5aee0[shape=record, label="  %13 = or i32 %6, %12"];
	Node0xf5af50[shape=record, label="  %14 = shl i32 %6, 1"];
	Node0xf5afc0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0xf5b030[shape=record, label="  %16 = and i32 %7, %6"];
	Node0xf5b0a0[shape=record, label="  %17 = xor i32 %11, -1"];
	Node0xf5b110[shape=record, label="  %18 = xor i32 %13, -1"];
	Node0xf5b180[shape=record, label="  %19 = and i32 %6, %12"];
	Node0xf5b1f0[shape=record, label="  %20 = add i32 %18, %17"];
	Node0xf5b260[shape=record, label="  %21 = mul i32 %20, -3"];
	Node0xf5b2d0[shape=record, label="  %22 = sub i32 %12, %6"];
	Node0xf5b340[shape=record, label="  %23 = sub i32 %22, %13"];
	Node0xf5b3b0[shape=record, label="  %24 = add i32 %23, %11"];
	Node0xf5b420[shape=record, label="  %25 = add i32 %24, %15"];
	Node0xf5b490[shape=record, label="  %26 = add i32 %25, %16"];
	Node0xf5b500[shape=record, label="  %27 = add i32 %26, %8"];
	Node0xf5b570[shape=record, label="  %28 = sub i32 %27, %19"];
	Node0xf5b5e0[shape=record, label="  %29 = add i32 %28, %21"];
	Node0xf5b650[shape=record, label="  %30 = icmp eq i32 %10, %29"];
	Node0xef99d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf5b6e0[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0xf5bb48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf5bca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xf5bd68[shape=record, label="  ret i32 0"];
	Node0xf58c58 -> Node0xf58cd8;
	Node0xf58cd8 -> Node0xf58d68;
	Node0xf58d68 -> Node0xf591c8;
	Node0xf591c8 -> Node0xf592a8;
	Node0xf592a8 -> Node0xf593c8;
	Node0xf593c8 -> Node0xf59600;
	Node0xf59600 -> Node0xf596b8;
	Node0xf596b8 -> Node0xf5a628;
	Node0xf5a628 -> Node0xf5acb0;
	Node0xf5acb0 -> Node0xf5ad20;
	Node0xf5ad20 -> Node0xf5ad90;
	Node0xf5ad90 -> Node0xf5ae00;
	Node0xf5ae00 -> Node0xf5ae70;
	Node0xf5ae70 -> Node0xf5aee0;
	Node0xf5aee0 -> Node0xf5af50;
	Node0xf5af50 -> Node0xf5afc0;
	Node0xf5afc0 -> Node0xf5b030;
	Node0xf5b030 -> Node0xf5b0a0;
	Node0xf5b0a0 -> Node0xf5b110;
	Node0xf5b110 -> Node0xf5b180;
	Node0xf5b180 -> Node0xf5b1f0;
	Node0xf5b1f0 -> Node0xf5b260;
	Node0xf5b260 -> Node0xf5b2d0;
	Node0xf5b2d0 -> Node0xf5b340;
	Node0xf5b340 -> Node0xf5b3b0;
	Node0xf5b3b0 -> Node0xf5b420;
	Node0xf5b420 -> Node0xf5b490;
	Node0xf5b490 -> Node0xf5b500;
	Node0xf5b500 -> Node0xf5b570;
	Node0xf5b570 -> Node0xf5b5e0;
	Node0xf5b5e0 -> Node0xf5b650;
	Node0xf5b650 -> Node0xef99d8;
	Node0xef99d8 -> Node0xf5b6e0;
	Node0xf5b6e0 -> Node0xf5bb48;
	Node0xf5bb48 -> Node0xf5bca8;
	Node0xf5bca8 -> Node0xf5bd68;
edge [color=red]
	Node0xf58c58 -> Node0xf58d68;
	Node0xf58d68 -> Node0xf591c8;
	Node0xf58cd8 -> Node0xf592a8;
	Node0xf592a8 -> Node0xf593c8;
	Node0xf58c58 -> Node0xf59600;
	Node0xf58cd8 -> Node0xf59600;
	Node0xf58c58 -> Node0xf596b8;
	Node0xf58cd8 -> Node0xf5a628;
	Node0xf5a628 -> Node0xf5acb0;
	Node0xf596b8 -> Node0xf5acb0;
	Node0xf5a628 -> Node0xf5ad20;
	Node0xf5ad20 -> Node0xf5ad90;
	Node0xf5acb0 -> Node0xf5ad90;
	Node0xf5a628 -> Node0xf5ae00;
	Node0xf596b8 -> Node0xf5ae00;
	Node0xf5a628 -> Node0xf5ae70;
	Node0xf596b8 -> Node0xf5aee0;
	Node0xf5ae70 -> Node0xf5aee0;
	Node0xf596b8 -> Node0xf5af50;
	Node0xf5af50 -> Node0xf5afc0;
	Node0xf5a628 -> Node0xf5b030;
	Node0xf596b8 -> Node0xf5b030;
	Node0xf5ae00 -> Node0xf5b0a0;
	Node0xf5aee0 -> Node0xf5b110;
	Node0xf596b8 -> Node0xf5b180;
	Node0xf5ae70 -> Node0xf5b180;
	Node0xf5b110 -> Node0xf5b1f0;
	Node0xf5b0a0 -> Node0xf5b1f0;
	Node0xf5b1f0 -> Node0xf5b260;
	Node0xf5ae70 -> Node0xf5b2d0;
	Node0xf596b8 -> Node0xf5b2d0;
	Node0xf5b2d0 -> Node0xf5b340;
	Node0xf5aee0 -> Node0xf5b340;
	Node0xf5b340 -> Node0xf5b3b0;
	Node0xf5ae00 -> Node0xf5b3b0;
	Node0xf5b3b0 -> Node0xf5b420;
	Node0xf5afc0 -> Node0xf5b420;
	Node0xf5b420 -> Node0xf5b490;
	Node0xf5b030 -> Node0xf5b490;
	Node0xf5b490 -> Node0xf5b500;
	Node0xf5acb0 -> Node0xf5b500;
	Node0xf5b500 -> Node0xf5b570;
	Node0xf5b180 -> Node0xf5b570;
	Node0xf5b570 -> Node0xf5b5e0;
	Node0xf5b260 -> Node0xf5b5e0;
	Node0xf5ad90 -> Node0xf5b650;
	Node0xf5b5e0 -> Node0xf5b650;
	Node0xf5b650 -> Node0xef99d8;
	Node0xef99d8 -> Node0xf5b6e0;
	Node0xf592a8 -> Node0xf5bb48;
	Node0xf58d68 -> Node0xf5bca8;
}
