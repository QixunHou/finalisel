digraph "DFG for'main' function" {
	Node0x2181b28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2181ba8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2181c38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x2182098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2182178[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x2182298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21824d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x2182588[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21834f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2183b80[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x2183bf0[shape=record, label="  %9 = add i32 %8, %7"];
	Node0x2183c60[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x2183cd0[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x2183d40[shape=record, label="  %12 = or i32 %7, %6"];
	Node0x2183db0[shape=record, label="  %13 = mul i32 %12, 3"];
	Node0x2183e20[shape=record, label="  %14 = and i32 %6, %10"];
	Node0x2183e90[shape=record, label="  %15 = shl i32 %12, 2"];
	Node0x2183f00[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x2183f70[shape=record, label="  %17 = xor i32 %11, -1"];
	Node0x2183fe0[shape=record, label="  %18 = shl i32 %6, 1"];
	Node0x2184050[shape=record, label="  %19 = sub i32 3, %6"];
	Node0x21840c0[shape=record, label="  %20 = add i32 %19, %7"];
	Node0x2184130[shape=record, label="  %21 = add i32 %20, %18"];
	Node0x21841a0[shape=record, label="  %22 = sub i32 %21, %11"];
	Node0x2184210[shape=record, label="  %23 = add i32 %22, %14"];
	Node0x2184280[shape=record, label="  %24 = add i32 %23, %17"];
	Node0x21842f0[shape=record, label="  %25 = add i32 %24, %13"];
	Node0x2184360[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x21843d0[shape=record, label="  %27 = icmp eq i32 %9, %26"];
	Node0x21229d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2184460[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0x21846b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2184818[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x21848d8[shape=record, label="  ret i32 0"];
	Node0x2181b28 -> Node0x2181ba8;
	Node0x2181ba8 -> Node0x2181c38;
	Node0x2181c38 -> Node0x2182098;
	Node0x2182098 -> Node0x2182178;
	Node0x2182178 -> Node0x2182298;
	Node0x2182298 -> Node0x21824d0;
	Node0x21824d0 -> Node0x2182588;
	Node0x2182588 -> Node0x21834f8;
	Node0x21834f8 -> Node0x2183b80;
	Node0x2183b80 -> Node0x2183bf0;
	Node0x2183bf0 -> Node0x2183c60;
	Node0x2183c60 -> Node0x2183cd0;
	Node0x2183cd0 -> Node0x2183d40;
	Node0x2183d40 -> Node0x2183db0;
	Node0x2183db0 -> Node0x2183e20;
	Node0x2183e20 -> Node0x2183e90;
	Node0x2183e90 -> Node0x2183f00;
	Node0x2183f00 -> Node0x2183f70;
	Node0x2183f70 -> Node0x2183fe0;
	Node0x2183fe0 -> Node0x2184050;
	Node0x2184050 -> Node0x21840c0;
	Node0x21840c0 -> Node0x2184130;
	Node0x2184130 -> Node0x21841a0;
	Node0x21841a0 -> Node0x2184210;
	Node0x2184210 -> Node0x2184280;
	Node0x2184280 -> Node0x21842f0;
	Node0x21842f0 -> Node0x2184360;
	Node0x2184360 -> Node0x21843d0;
	Node0x21843d0 -> Node0x21229d8;
	Node0x21229d8 -> Node0x2184460;
	Node0x2184460 -> Node0x21846b8;
	Node0x21846b8 -> Node0x2184818;
	Node0x2184818 -> Node0x21848d8;
edge [color=red]
	Node0x2181b28 -> Node0x2181c38;
	Node0x2181c38 -> Node0x2182098;
	Node0x2181ba8 -> Node0x2182178;
	Node0x2182178 -> Node0x2182298;
	Node0x2181b28 -> Node0x21824d0;
	Node0x2181ba8 -> Node0x21824d0;
	Node0x2181b28 -> Node0x2182588;
	Node0x2181ba8 -> Node0x21834f8;
	Node0x21834f8 -> Node0x2183b80;
	Node0x2182588 -> Node0x2183b80;
	Node0x2183b80 -> Node0x2183bf0;
	Node0x21834f8 -> Node0x2183bf0;
	Node0x21834f8 -> Node0x2183c60;
	Node0x2182588 -> Node0x2183cd0;
	Node0x2183c60 -> Node0x2183cd0;
	Node0x21834f8 -> Node0x2183d40;
	Node0x2182588 -> Node0x2183d40;
	Node0x2183d40 -> Node0x2183db0;
	Node0x2182588 -> Node0x2183e20;
	Node0x2183c60 -> Node0x2183e20;
	Node0x2183d40 -> Node0x2183e90;
	Node0x2183e90 -> Node0x2183f00;
	Node0x2183cd0 -> Node0x2183f70;
	Node0x2182588 -> Node0x2183fe0;
	Node0x2182588 -> Node0x2184050;
	Node0x2184050 -> Node0x21840c0;
	Node0x21834f8 -> Node0x21840c0;
	Node0x21840c0 -> Node0x2184130;
	Node0x2183fe0 -> Node0x2184130;
	Node0x2184130 -> Node0x21841a0;
	Node0x2183cd0 -> Node0x21841a0;
	Node0x21841a0 -> Node0x2184210;
	Node0x2183e20 -> Node0x2184210;
	Node0x2184210 -> Node0x2184280;
	Node0x2183f70 -> Node0x2184280;
	Node0x2184280 -> Node0x21842f0;
	Node0x2183db0 -> Node0x21842f0;
	Node0x21842f0 -> Node0x2184360;
	Node0x2183f00 -> Node0x2184360;
	Node0x2183bf0 -> Node0x21843d0;
	Node0x2184360 -> Node0x21843d0;
	Node0x21843d0 -> Node0x21229d8;
	Node0x21229d8 -> Node0x2184460;
	Node0x2182178 -> Node0x21846b8;
	Node0x2181c38 -> Node0x2184818;
}
