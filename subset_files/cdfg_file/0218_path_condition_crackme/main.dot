digraph "DFG for'main' function" {
	Node0x1052bb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1052c68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1052cf8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1053158[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1053238[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1053358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1053590[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1053648[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10545b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1054c40[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1054cb0[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x1054d20[shape=record, label="  %10 = mul i32 %9, -3"];
	Node0x1054d90[shape=record, label="  %11 = xor i32 %6, -1"];
	Node0x1054e00[shape=record, label="  %12 = and i32 %7, %11"];
	Node0x1054e70[shape=record, label="  %13 = shl i32 %12, 2"];
	Node0x1054ee0[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x1054f50[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x1054fc0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x1055030[shape=record, label="  %17 = mul i32 %16, 3"];
	Node0x10550a0[shape=record, label="  %18 = xor i32 %14, -1"];
	Node0x1055110[shape=record, label="  %19 = or i32 %7, %11"];
	Node0x1055180[shape=record, label="  %20 = and i32 %7, %6"];
	Node0x10551f0[shape=record, label="  %21 = add i32 %6, 3"];
	Node0x1055260[shape=record, label="  %22 = add i32 %21, %7"];
	Node0x10552d0[shape=record, label="  %23 = sub i32 %22, %14"];
	Node0x1055340[shape=record, label="  %24 = add i32 %23, %18"];
	Node0x10553b0[shape=record, label="  %25 = sub i32 %24, %19"];
	Node0x1055420[shape=record, label="  %26 = add i32 %25, %20"];
	Node0x1055490[shape=record, label="  %27 = add i32 %26, %13"];
	Node0x1055500[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x1055570[shape=record, label="  %29 = icmp eq i32 %10, %28"];
	Node0xff39d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1055600[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x1055858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10559b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1055a78[shape=record, label="  ret i32 0"];
	Node0x1052bb8 -> Node0x1052c68;
	Node0x1052c68 -> Node0x1052cf8;
	Node0x1052cf8 -> Node0x1053158;
	Node0x1053158 -> Node0x1053238;
	Node0x1053238 -> Node0x1053358;
	Node0x1053358 -> Node0x1053590;
	Node0x1053590 -> Node0x1053648;
	Node0x1053648 -> Node0x10545b8;
	Node0x10545b8 -> Node0x1054c40;
	Node0x1054c40 -> Node0x1054cb0;
	Node0x1054cb0 -> Node0x1054d20;
	Node0x1054d20 -> Node0x1054d90;
	Node0x1054d90 -> Node0x1054e00;
	Node0x1054e00 -> Node0x1054e70;
	Node0x1054e70 -> Node0x1054ee0;
	Node0x1054ee0 -> Node0x1054f50;
	Node0x1054f50 -> Node0x1054fc0;
	Node0x1054fc0 -> Node0x1055030;
	Node0x1055030 -> Node0x10550a0;
	Node0x10550a0 -> Node0x1055110;
	Node0x1055110 -> Node0x1055180;
	Node0x1055180 -> Node0x10551f0;
	Node0x10551f0 -> Node0x1055260;
	Node0x1055260 -> Node0x10552d0;
	Node0x10552d0 -> Node0x1055340;
	Node0x1055340 -> Node0x10553b0;
	Node0x10553b0 -> Node0x1055420;
	Node0x1055420 -> Node0x1055490;
	Node0x1055490 -> Node0x1055500;
	Node0x1055500 -> Node0x1055570;
	Node0x1055570 -> Node0xff39d8;
	Node0xff39d8 -> Node0x1055600;
	Node0x1055600 -> Node0x1055858;
	Node0x1055858 -> Node0x10559b8;
	Node0x10559b8 -> Node0x1055a78;
edge [color=red]
	Node0x1052bb8 -> Node0x1052cf8;
	Node0x1052cf8 -> Node0x1053158;
	Node0x1052c68 -> Node0x1053238;
	Node0x1053238 -> Node0x1053358;
	Node0x1052bb8 -> Node0x1053590;
	Node0x1052c68 -> Node0x1053590;
	Node0x1052bb8 -> Node0x1053648;
	Node0x1052c68 -> Node0x10545b8;
	Node0x10545b8 -> Node0x1054c40;
	Node0x1053648 -> Node0x1054cb0;
	Node0x1054c40 -> Node0x1054cb0;
	Node0x1054cb0 -> Node0x1054d20;
	Node0x1053648 -> Node0x1054d90;
	Node0x10545b8 -> Node0x1054e00;
	Node0x1054d90 -> Node0x1054e00;
	Node0x1054e00 -> Node0x1054e70;
	Node0x10545b8 -> Node0x1054ee0;
	Node0x1053648 -> Node0x1054ee0;
	Node0x10545b8 -> Node0x1054f50;
	Node0x1053648 -> Node0x1054f50;
	Node0x1054f50 -> Node0x1054fc0;
	Node0x1054fc0 -> Node0x1055030;
	Node0x1054ee0 -> Node0x10550a0;
	Node0x10545b8 -> Node0x1055110;
	Node0x1054d90 -> Node0x1055110;
	Node0x10545b8 -> Node0x1055180;
	Node0x1053648 -> Node0x1055180;
	Node0x1053648 -> Node0x10551f0;
	Node0x10551f0 -> Node0x1055260;
	Node0x10545b8 -> Node0x1055260;
	Node0x1055260 -> Node0x10552d0;
	Node0x1054ee0 -> Node0x10552d0;
	Node0x10552d0 -> Node0x1055340;
	Node0x10550a0 -> Node0x1055340;
	Node0x1055340 -> Node0x10553b0;
	Node0x1055110 -> Node0x10553b0;
	Node0x10553b0 -> Node0x1055420;
	Node0x1055180 -> Node0x1055420;
	Node0x1055420 -> Node0x1055490;
	Node0x1054e70 -> Node0x1055490;
	Node0x1055490 -> Node0x1055500;
	Node0x1055030 -> Node0x1055500;
	Node0x1054d20 -> Node0x1055570;
	Node0x1055500 -> Node0x1055570;
	Node0x1055570 -> Node0xff39d8;
	Node0xff39d8 -> Node0x1055600;
	Node0x1053238 -> Node0x1055858;
	Node0x1052cf8 -> Node0x10559b8;
}
