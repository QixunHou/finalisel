digraph "DFG for'main' function" {
	Node0x1c836e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c83768[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c837f8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c83858[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1c83908[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1c83d38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c83e18[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1c83f18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c83fd8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1c84088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c84148[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1c841f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c7e9c0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1c843f8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c85368[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c859d8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c85a38[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1c85ab0[shape=record, label="  %14 = mul i32 %12, -2"];
	Node0x1c85b20[shape=record, label="  %15 = or i32 %14, 1"];
	Node0x1c85b90[shape=record, label="  %16 = sub i32 %11, %10"];
	Node0x1c85c00[shape=record, label="  %17 = add i32 %16, %15"];
	Node0x1c85c70[shape=record, label="  %18 = xor i32 %12, -1"];
	Node0x1c85ce0[shape=record, label="  %19 = and i32 %11, %18"];
	Node0x1c85d50[shape=record, label="  %20 = or i32 %11, %18"];
	Node0x1c85dc0[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x1c85e30[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x1c85ea0[shape=record, label="  %23 = mul i32 %22, 5"];
	Node0x1c85f10[shape=record, label="  %24 = xor i32 %20, -1"];
	Node0x1c85f80[shape=record, label="  %25 = xor i32 %13, 2147483647"];
	Node0x1c85ff0[shape=record, label="  %26 = or i32 %25, %10"];
	Node0x1c86060[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x1c860d0[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0x1c86140[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x1c861b0[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0x1c86220[shape=record, label="  %31 = and i32 %25, %10"];
	Node0x1c86290[shape=record, label="  %32 = add i32 %11, 1"];
	Node0x1c86300[shape=record, label="  %33 = add i32 %32, %19"];
	Node0x1c86370[shape=record, label="  %34 = add i32 %33, %31"];
	Node0x1c863e0[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x1c86450[shape=record, label="  %36 = sub i32 3, %10"];
	Node0x1c864c0[shape=record, label="  %37 = add i32 %36, %11"];
	Node0x1c86530[shape=record, label="  %38 = sub i32 %37, %20"];
	Node0x1c865a0[shape=record, label="  %39 = add i32 %38, %21"];
	Node0x1c86610[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x1c86680[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x1c866f0[shape=record, label="  %42 = sub i32 %41, %27"];
	Node0x1c86760[shape=record, label="  %43 = add i32 %42, %30"];
	Node0x1c867d0[shape=record, label="  %44 = add i32 %43, %35"];
	Node0x1c86840[shape=record, label="  %45 = icmp eq i32 %17, %44"];
	Node0x1c238b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c868d0[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0x1c86b78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c86cd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c86de8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c86ef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c86fb8[shape=record, label="  ret i32 0"];
	Node0x1c836e8 -> Node0x1c83768;
	Node0x1c83768 -> Node0x1c837f8;
	Node0x1c837f8 -> Node0x1c83858;
	Node0x1c83858 -> Node0x1c83908;
	Node0x1c83908 -> Node0x1c83d38;
	Node0x1c83d38 -> Node0x1c83e18;
	Node0x1c83e18 -> Node0x1c83f18;
	Node0x1c83f18 -> Node0x1c83fd8;
	Node0x1c83fd8 -> Node0x1c84088;
	Node0x1c84088 -> Node0x1c84148;
	Node0x1c84148 -> Node0x1c841f8;
	Node0x1c841f8 -> Node0x1c7e9c0;
	Node0x1c7e9c0 -> Node0x1c843f8;
	Node0x1c843f8 -> Node0x1c85368;
	Node0x1c85368 -> Node0x1c859d8;
	Node0x1c859d8 -> Node0x1c85a38;
	Node0x1c85a38 -> Node0x1c85ab0;
	Node0x1c85ab0 -> Node0x1c85b20;
	Node0x1c85b20 -> Node0x1c85b90;
	Node0x1c85b90 -> Node0x1c85c00;
	Node0x1c85c00 -> Node0x1c85c70;
	Node0x1c85c70 -> Node0x1c85ce0;
	Node0x1c85ce0 -> Node0x1c85d50;
	Node0x1c85d50 -> Node0x1c85dc0;
	Node0x1c85dc0 -> Node0x1c85e30;
	Node0x1c85e30 -> Node0x1c85ea0;
	Node0x1c85ea0 -> Node0x1c85f10;
	Node0x1c85f10 -> Node0x1c85f80;
	Node0x1c85f80 -> Node0x1c85ff0;
	Node0x1c85ff0 -> Node0x1c86060;
	Node0x1c86060 -> Node0x1c860d0;
	Node0x1c860d0 -> Node0x1c86140;
	Node0x1c86140 -> Node0x1c861b0;
	Node0x1c861b0 -> Node0x1c86220;
	Node0x1c86220 -> Node0x1c86290;
	Node0x1c86290 -> Node0x1c86300;
	Node0x1c86300 -> Node0x1c86370;
	Node0x1c86370 -> Node0x1c863e0;
	Node0x1c863e0 -> Node0x1c86450;
	Node0x1c86450 -> Node0x1c864c0;
	Node0x1c864c0 -> Node0x1c86530;
	Node0x1c86530 -> Node0x1c865a0;
	Node0x1c865a0 -> Node0x1c86610;
	Node0x1c86610 -> Node0x1c86680;
	Node0x1c86680 -> Node0x1c866f0;
	Node0x1c866f0 -> Node0x1c86760;
	Node0x1c86760 -> Node0x1c867d0;
	Node0x1c867d0 -> Node0x1c86840;
	Node0x1c86840 -> Node0x1c238b8;
	Node0x1c238b8 -> Node0x1c868d0;
	Node0x1c868d0 -> Node0x1c86b78;
	Node0x1c86b78 -> Node0x1c86cd8;
	Node0x1c86cd8 -> Node0x1c86de8;
	Node0x1c86de8 -> Node0x1c86ef8;
	Node0x1c86ef8 -> Node0x1c86fb8;
edge [color=red]
	Node0x1c836e8 -> Node0x1c83908;
	Node0x1c83908 -> Node0x1c83d38;
	Node0x1c83768 -> Node0x1c83e18;
	Node0x1c83e18 -> Node0x1c83f18;
	Node0x1c837f8 -> Node0x1c83fd8;
	Node0x1c83fd8 -> Node0x1c84088;
	Node0x1c83858 -> Node0x1c84148;
	Node0x1c84148 -> Node0x1c841f8;
	Node0x1c836e8 -> Node0x1c7e9c0;
	Node0x1c83768 -> Node0x1c7e9c0;
	Node0x1c837f8 -> Node0x1c7e9c0;
	Node0x1c83858 -> Node0x1c7e9c0;
	Node0x1c836e8 -> Node0x1c843f8;
	Node0x1c83768 -> Node0x1c85368;
	Node0x1c837f8 -> Node0x1c859d8;
	Node0x1c83858 -> Node0x1c85a38;
	Node0x1c859d8 -> Node0x1c85ab0;
	Node0x1c85ab0 -> Node0x1c85b20;
	Node0x1c85368 -> Node0x1c85b90;
	Node0x1c843f8 -> Node0x1c85b90;
	Node0x1c85b90 -> Node0x1c85c00;
	Node0x1c85b20 -> Node0x1c85c00;
	Node0x1c859d8 -> Node0x1c85c70;
	Node0x1c85368 -> Node0x1c85ce0;
	Node0x1c85c70 -> Node0x1c85ce0;
	Node0x1c85368 -> Node0x1c85d50;
	Node0x1c85c70 -> Node0x1c85d50;
	Node0x1c859d8 -> Node0x1c85dc0;
	Node0x1c85368 -> Node0x1c85dc0;
	Node0x1c85dc0 -> Node0x1c85e30;
	Node0x1c85e30 -> Node0x1c85ea0;
	Node0x1c85d50 -> Node0x1c85f10;
	Node0x1c85a38 -> Node0x1c85f80;
	Node0x1c85f80 -> Node0x1c85ff0;
	Node0x1c843f8 -> Node0x1c85ff0;
	Node0x1c85ff0 -> Node0x1c86060;
	Node0x1c85a38 -> Node0x1c860d0;
	Node0x1c843f8 -> Node0x1c860d0;
	Node0x1c860d0 -> Node0x1c86140;
	Node0x1c86140 -> Node0x1c861b0;
	Node0x1c85f80 -> Node0x1c86220;
	Node0x1c843f8 -> Node0x1c86220;
	Node0x1c85368 -> Node0x1c86290;
	Node0x1c86290 -> Node0x1c86300;
	Node0x1c85ce0 -> Node0x1c86300;
	Node0x1c86300 -> Node0x1c86370;
	Node0x1c86220 -> Node0x1c86370;
	Node0x1c86370 -> Node0x1c863e0;
	Node0x1c843f8 -> Node0x1c86450;
	Node0x1c86450 -> Node0x1c864c0;
	Node0x1c85368 -> Node0x1c864c0;
	Node0x1c864c0 -> Node0x1c86530;
	Node0x1c85d50 -> Node0x1c86530;
	Node0x1c86530 -> Node0x1c865a0;
	Node0x1c85dc0 -> Node0x1c865a0;
	Node0x1c865a0 -> Node0x1c86610;
	Node0x1c85f10 -> Node0x1c86610;
	Node0x1c86610 -> Node0x1c86680;
	Node0x1c85ea0 -> Node0x1c86680;
	Node0x1c86680 -> Node0x1c866f0;
	Node0x1c86060 -> Node0x1c866f0;
	Node0x1c866f0 -> Node0x1c86760;
	Node0x1c861b0 -> Node0x1c86760;
	Node0x1c86760 -> Node0x1c867d0;
	Node0x1c863e0 -> Node0x1c867d0;
	Node0x1c85c00 -> Node0x1c86840;
	Node0x1c867d0 -> Node0x1c86840;
	Node0x1c86840 -> Node0x1c238b8;
	Node0x1c238b8 -> Node0x1c868d0;
	Node0x1c84148 -> Node0x1c86b78;
	Node0x1c83fd8 -> Node0x1c86cd8;
	Node0x1c83e18 -> Node0x1c86de8;
	Node0x1c83908 -> Node0x1c86ef8;
}
