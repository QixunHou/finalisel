digraph "DFG for'crackme' function" {
	Node0x1c81fa0[shape=record, label="  %5 = mul i32 %2, -2"];
	Node0x1c82040[shape=record, label="  %6 = or i32 %5, 1"];
	Node0x1c820b0[shape=record, label="  %7 = sub i32 %1, %0"];
	Node0x1c82120[shape=record, label="  %8 = add i32 %7, %6"];
	Node0x1c821c0[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x1c82230[shape=record, label="  %10 = and i32 %9, %1"];
	Node0x1c822a0[shape=record, label="  %11 = add i32 %10, 1"];
	Node0x1c82310[shape=record, label="  %12 = or i32 %9, %1"];
	Node0x1c82380[shape=record, label="  %13 = or i32 %2, %1"];
	Node0x1c823f0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1c82490[shape=record, label="  %15 = mul i32 %14, 5"];
	Node0x1c82500[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x1c825a0[shape=record, label="  %17 = xor i32 %3, 2147483647"];
	Node0x1c82610[shape=record, label="  %18 = or i32 %17, %0"];
	Node0x1c82680[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1c826f0[shape=record, label="  %20 = xor i32 %3, %0"];
	Node0x1c82760[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1c827d0[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x1c82840[shape=record, label="  %23 = and i32 %17, %0"];
	Node0x1c828b0[shape=record, label="  %24 = add i32 %11, %1"];
	Node0x1c82920[shape=record, label="  %25 = add i32 %24, %23"];
	Node0x1c82990[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x1c82a30[shape=record, label="  %27 = sub i32 3, %0"];
	Node0x1c82aa0[shape=record, label="  %28 = add i32 %27, %1"];
	Node0x1c82b10[shape=record, label="  %29 = sub i32 %28, %12"];
	Node0x1c82b80[shape=record, label="  %30 = add i32 %29, %13"];
	Node0x1c82bf0[shape=record, label="  %31 = add i32 %30, %16"];
	Node0x1c82c60[shape=record, label="  %32 = add i32 %31, %15"];
	Node0x1c82ee0[shape=record, label="  %33 = sub i32 %32, %19"];
	Node0x1c82f50[shape=record, label="  %34 = add i32 %33, %22"];
	Node0x1c82fc0[shape=record, label="  %35 = add i32 %34, %26"];
	Node0x1c83030[shape=record, label="  %36 = icmp eq i32 %8, %35"];
	Node0x1c22268[shape=record, label="  %37 = select i1 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c834d0[shape=record, label="  %38 = tail call i32 @puts(i8* nonnull dereferenceable(1) %37)"];
	Node0x1c83520[shape=record, label="  ret void"];
	Node0x1c81fa0 -> Node0x1c82040;
	Node0x1c82040 -> Node0x1c820b0;
	Node0x1c820b0 -> Node0x1c82120;
	Node0x1c82120 -> Node0x1c821c0;
	Node0x1c821c0 -> Node0x1c82230;
	Node0x1c82230 -> Node0x1c822a0;
	Node0x1c822a0 -> Node0x1c82310;
	Node0x1c82310 -> Node0x1c82380;
	Node0x1c82380 -> Node0x1c823f0;
	Node0x1c823f0 -> Node0x1c82490;
	Node0x1c82490 -> Node0x1c82500;
	Node0x1c82500 -> Node0x1c825a0;
	Node0x1c825a0 -> Node0x1c82610;
	Node0x1c82610 -> Node0x1c82680;
	Node0x1c82680 -> Node0x1c826f0;
	Node0x1c826f0 -> Node0x1c82760;
	Node0x1c82760 -> Node0x1c827d0;
	Node0x1c827d0 -> Node0x1c82840;
	Node0x1c82840 -> Node0x1c828b0;
	Node0x1c828b0 -> Node0x1c82920;
	Node0x1c82920 -> Node0x1c82990;
	Node0x1c82990 -> Node0x1c82a30;
	Node0x1c82a30 -> Node0x1c82aa0;
	Node0x1c82aa0 -> Node0x1c82b10;
	Node0x1c82b10 -> Node0x1c82b80;
	Node0x1c82b80 -> Node0x1c82bf0;
	Node0x1c82bf0 -> Node0x1c82c60;
	Node0x1c82c60 -> Node0x1c82ee0;
	Node0x1c82ee0 -> Node0x1c82f50;
	Node0x1c82f50 -> Node0x1c82fc0;
	Node0x1c82fc0 -> Node0x1c83030;
	Node0x1c83030 -> Node0x1c22268;
	Node0x1c22268 -> Node0x1c834d0;
	Node0x1c834d0 -> Node0x1c83520;
edge [color=red]
	Node0x1c81fa0 -> Node0x1c82040;
	Node0x1c820b0 -> Node0x1c82120;
	Node0x1c82040 -> Node0x1c82120;
	Node0x1c821c0 -> Node0x1c82230;
	Node0x1c82230 -> Node0x1c822a0;
	Node0x1c821c0 -> Node0x1c82310;
	Node0x1c82380 -> Node0x1c823f0;
	Node0x1c823f0 -> Node0x1c82490;
	Node0x1c82310 -> Node0x1c82500;
	Node0x1c825a0 -> Node0x1c82610;
	Node0x1c82610 -> Node0x1c82680;
	Node0x1c826f0 -> Node0x1c82760;
	Node0x1c82760 -> Node0x1c827d0;
	Node0x1c825a0 -> Node0x1c82840;
	Node0x1c822a0 -> Node0x1c828b0;
	Node0x1c828b0 -> Node0x1c82920;
	Node0x1c82840 -> Node0x1c82920;
	Node0x1c82920 -> Node0x1c82990;
	Node0x1c82a30 -> Node0x1c82aa0;
	Node0x1c82aa0 -> Node0x1c82b10;
	Node0x1c82310 -> Node0x1c82b10;
	Node0x1c82b10 -> Node0x1c82b80;
	Node0x1c82380 -> Node0x1c82b80;
	Node0x1c82b80 -> Node0x1c82bf0;
	Node0x1c82500 -> Node0x1c82bf0;
	Node0x1c82bf0 -> Node0x1c82c60;
	Node0x1c82490 -> Node0x1c82c60;
	Node0x1c82c60 -> Node0x1c82ee0;
	Node0x1c82680 -> Node0x1c82ee0;
	Node0x1c82ee0 -> Node0x1c82f50;
	Node0x1c827d0 -> Node0x1c82f50;
	Node0x1c82f50 -> Node0x1c82fc0;
	Node0x1c82990 -> Node0x1c82fc0;
	Node0x1c82120 -> Node0x1c83030;
	Node0x1c82fc0 -> Node0x1c83030;
	Node0x1c83030 -> Node0x1c22268;
	Node0x1c22268 -> Node0x1c834d0;
}
