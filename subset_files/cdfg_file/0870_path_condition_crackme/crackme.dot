digraph "DFG for'crackme' function" {
	Node0xfc0b70[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0xfc0be0[shape=record, label="  %6 = and i32 %3, %0"];
	Node0xfc1260[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0xfc12d0[shape=record, label="  %8 = add i32 %5, %7"];
	Node0xfc1340[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0xfc13b0[shape=record, label="  %10 = or i32 %9, %1"];
	Node0xfc1420[shape=record, label="  %11 = and i32 %9, %1"];
	Node0xfc1490[shape=record, label="  %12 = or i32 %2, %1"];
	Node0xfc1500[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xfc1570[shape=record, label="  %14 = xor i32 %10, -1"];
	Node0xfc1610[shape=record, label="  %15 = mul i32 %14, 5"];
	Node0xfc1680[shape=record, label="  %16 = xor i32 %0, -1"];
	Node0xfc16f0[shape=record, label="  %17 = and i32 %16, %3"];
	Node0xfc1760[shape=record, label="  %18 = or i32 %3, %0"];
	Node0xfc1800[shape=record, label="  %19 = shl i32 %3, 1"];
	Node0xfc18a0[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0xfc1910[shape=record, label="  %21 = xor i32 %18, -1"];
	Node0xfc1980[shape=record, label="  %22 = xor i32 %3, -1"];
	Node0xfc19f0[shape=record, label="  %23 = and i32 %22, %0"];
	Node0xfc1a90[shape=record, label="  %24 = shl i32 %17, 2"];
	Node0xfc1b30[shape=record, label="  %25 = shl i32 %1, 3"];
	Node0xfc1ba0[shape=record, label="  %26 = add i32 %21, %13"];
	Node0xfc1c40[shape=record, label="  %27 = mul i32 %26, 7"];
	Node0xfc1cb0[shape=record, label="  %28 = add i32 %18, %9"];
	Node0xfc1d20[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0xfc1d90[shape=record, label="  %30 = sub i32 %0, %10"];
	Node0xfc1e00[shape=record, label="  %31 = mul i32 %30, 3"];
	Node0xfc1ea0[shape=record, label="  %32 = add i32 %0, 10"];
	Node0xfc2120[shape=record, label="  %33 = add i32 %32, %2"];
	Node0xfc2190[shape=record, label="  %34 = sub i32 %33, %11"];
	Node0xfc2200[shape=record, label="  %35 = add i32 %34, %5"];
	Node0xfc2270[shape=record, label="  %36 = add i32 %35, %15"];
	Node0xfc22e0[shape=record, label="  %37 = add i32 %36, %17"];
	Node0xfc2350[shape=record, label="  %38 = sub i32 %37, %19"];
	Node0xfc23c0[shape=record, label="  %39 = add i32 %38, %23"];
	Node0xfc2430[shape=record, label="  %40 = sub i32 %39, %20"];
	Node0xfc24a0[shape=record, label="  %41 = add i32 %40, %24"];
	Node0xfc2510[shape=record, label="  %42 = add i32 %41, %25"];
	Node0xfc2580[shape=record, label="  %43 = add i32 %42, %31"];
	Node0xfc25f0[shape=record, label="  %44 = add i32 %43, %27"];
	Node0xfc2660[shape=record, label="  %45 = add i32 %44, %29"];
	Node0xfc26d0[shape=record, label="  %46 = icmp eq i32 %8, %45"];
	Node0xf61268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xfc2b70[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0xfc2bc0[shape=record, label="  ret void"];
	Node0xfc0b70 -> Node0xfc0be0;
	Node0xfc0be0 -> Node0xfc1260;
	Node0xfc1260 -> Node0xfc12d0;
	Node0xfc12d0 -> Node0xfc1340;
	Node0xfc1340 -> Node0xfc13b0;
	Node0xfc13b0 -> Node0xfc1420;
	Node0xfc1420 -> Node0xfc1490;
	Node0xfc1490 -> Node0xfc1500;
	Node0xfc1500 -> Node0xfc1570;
	Node0xfc1570 -> Node0xfc1610;
	Node0xfc1610 -> Node0xfc1680;
	Node0xfc1680 -> Node0xfc16f0;
	Node0xfc16f0 -> Node0xfc1760;
	Node0xfc1760 -> Node0xfc1800;
	Node0xfc1800 -> Node0xfc18a0;
	Node0xfc18a0 -> Node0xfc1910;
	Node0xfc1910 -> Node0xfc1980;
	Node0xfc1980 -> Node0xfc19f0;
	Node0xfc19f0 -> Node0xfc1a90;
	Node0xfc1a90 -> Node0xfc1b30;
	Node0xfc1b30 -> Node0xfc1ba0;
	Node0xfc1ba0 -> Node0xfc1c40;
	Node0xfc1c40 -> Node0xfc1cb0;
	Node0xfc1cb0 -> Node0xfc1d20;
	Node0xfc1d20 -> Node0xfc1d90;
	Node0xfc1d90 -> Node0xfc1e00;
	Node0xfc1e00 -> Node0xfc1ea0;
	Node0xfc1ea0 -> Node0xfc2120;
	Node0xfc2120 -> Node0xfc2190;
	Node0xfc2190 -> Node0xfc2200;
	Node0xfc2200 -> Node0xfc2270;
	Node0xfc2270 -> Node0xfc22e0;
	Node0xfc22e0 -> Node0xfc2350;
	Node0xfc2350 -> Node0xfc23c0;
	Node0xfc23c0 -> Node0xfc2430;
	Node0xfc2430 -> Node0xfc24a0;
	Node0xfc24a0 -> Node0xfc2510;
	Node0xfc2510 -> Node0xfc2580;
	Node0xfc2580 -> Node0xfc25f0;
	Node0xfc25f0 -> Node0xfc2660;
	Node0xfc2660 -> Node0xfc26d0;
	Node0xfc26d0 -> Node0xf61268;
	Node0xf61268 -> Node0xfc2b70;
	Node0xfc2b70 -> Node0xfc2bc0;
edge [color=red]
	Node0xfc0be0 -> Node0xfc1260;
	Node0xfc0b70 -> Node0xfc12d0;
	Node0xfc1260 -> Node0xfc12d0;
	Node0xfc1340 -> Node0xfc13b0;
	Node0xfc1340 -> Node0xfc1420;
	Node0xfc1490 -> Node0xfc1500;
	Node0xfc13b0 -> Node0xfc1570;
	Node0xfc1570 -> Node0xfc1610;
	Node0xfc1680 -> Node0xfc16f0;
	Node0xfc1800 -> Node0xfc18a0;
	Node0xfc1760 -> Node0xfc1910;
	Node0xfc1980 -> Node0xfc19f0;
	Node0xfc16f0 -> Node0xfc1a90;
	Node0xfc1910 -> Node0xfc1ba0;
	Node0xfc1500 -> Node0xfc1ba0;
	Node0xfc1ba0 -> Node0xfc1c40;
	Node0xfc1760 -> Node0xfc1cb0;
	Node0xfc1340 -> Node0xfc1cb0;
	Node0xfc1cb0 -> Node0xfc1d20;
	Node0xfc13b0 -> Node0xfc1d90;
	Node0xfc1d90 -> Node0xfc1e00;
	Node0xfc1ea0 -> Node0xfc2120;
	Node0xfc2120 -> Node0xfc2190;
	Node0xfc1420 -> Node0xfc2190;
	Node0xfc2190 -> Node0xfc2200;
	Node0xfc0b70 -> Node0xfc2200;
	Node0xfc2200 -> Node0xfc2270;
	Node0xfc1610 -> Node0xfc2270;
	Node0xfc2270 -> Node0xfc22e0;
	Node0xfc16f0 -> Node0xfc22e0;
	Node0xfc22e0 -> Node0xfc2350;
	Node0xfc1800 -> Node0xfc2350;
	Node0xfc2350 -> Node0xfc23c0;
	Node0xfc19f0 -> Node0xfc23c0;
	Node0xfc23c0 -> Node0xfc2430;
	Node0xfc18a0 -> Node0xfc2430;
	Node0xfc2430 -> Node0xfc24a0;
	Node0xfc1a90 -> Node0xfc24a0;
	Node0xfc24a0 -> Node0xfc2510;
	Node0xfc1b30 -> Node0xfc2510;
	Node0xfc2510 -> Node0xfc2580;
	Node0xfc1e00 -> Node0xfc2580;
	Node0xfc2580 -> Node0xfc25f0;
	Node0xfc1c40 -> Node0xfc25f0;
	Node0xfc25f0 -> Node0xfc2660;
	Node0xfc1d20 -> Node0xfc2660;
	Node0xfc12d0 -> Node0xfc26d0;
	Node0xfc2660 -> Node0xfc26d0;
	Node0xfc26d0 -> Node0xf61268;
	Node0xf61268 -> Node0xfc2b70;
}
