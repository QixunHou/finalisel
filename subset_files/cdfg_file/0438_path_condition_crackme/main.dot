digraph "DFG for'main' function" {
	Node0x1b67d38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b67db8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b67e48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b67ea8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1b67f58[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1b68388[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b68468[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1b68568[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b68628[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1b686d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b68798[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1b68848[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b62b60[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1b68a48[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b699b8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b6a028[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b6a088[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1b6a100[shape=record, label="  %14 = xor i32 %10, -1"];
	Node0x1b6a170[shape=record, label="  %15 = mul i32 %14, -5"];
	Node0x1b6a1e0[shape=record, label="  %16 = add i32 %15, 2"];
	Node0x1b6a250[shape=record, label="  %17 = xor i32 %13, -1"];
	Node0x1b6a2c0[shape=record, label="  %18 = add i32 %16, %17"];
	Node0x1b6a330[shape=record, label="  %19 = xor i32 %12, 2147483647"];
	Node0x1b6a3a0[shape=record, label="  %20 = and i32 %19, %11"];
	Node0x1b6a410[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1b6a480[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x1b6a4f0[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x1b6a560[shape=record, label="  %24 = xor i32 %12, %11"];
	Node0x1b6a5d0[shape=record, label="  %25 = or i32 %12, %11"];
	Node0x1b6a640[shape=record, label="  %26 = xor i32 %11, -1"];
	Node0x1b6a6b0[shape=record, label="  %27 = and i32 %12, %26"];
	Node0x1b6a720[shape=record, label="  %28 = mul i32 %27, -3"];
	Node0x1b6a790[shape=record, label="  %29 = shl i32 %23, 2"];
	Node0x1b6a800[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x1b6a870[shape=record, label="  %31 = shl i32 %30, 2"];
	Node0x1b6a8e0[shape=record, label="  %32 = xor i32 %31, -4"];
	Node0x1b6a950[shape=record, label="  %33 = or i32 %13, %14"];
	Node0x1b6a9c0[shape=record, label="  %34 = and i32 %13, %14"];
	Node0x1b6aa30[shape=record, label="  %35 = mul i32 %34, -7"];
	Node0x1b6aaa0[shape=record, label="  %36 = shl i32 %25, 1"];
	Node0x1b6ab10[shape=record, label="  %37 = xor i32 %13, %10"];
	Node0x1b6ab80[shape=record, label="  %38 = mul i32 %37, 5"];
	Node0x1b6ac20[shape=record, label="  %39 = sub i32 3, %10"];
	Node0x1b6ac90[shape=record, label="  %40 = add i32 %39, %11"];
	Node0x1b6ad00[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x1b6ad70[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x1b6ade0[shape=record, label="  %43 = add i32 %42, %13"];
	Node0x1b6ae50[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x1b6aec0[shape=record, label="  %45 = sub i32 %44, %29"];
	Node0x1b6af30[shape=record, label="  %46 = sub i32 %45, %33"];
	Node0x1b6afa0[shape=record, label="  %47 = add i32 %46, %36"];
	Node0x1b6b010[shape=record, label="  %48 = sub i32 %47, %21"];
	Node0x1b6b080[shape=record, label="  %49 = add i32 %48, %35"];
	Node0x1b6b0f0[shape=record, label="  %50 = add i32 %49, %38"];
	Node0x1b6b160[shape=record, label="  %51 = add i32 %50, %22"];
	Node0x1b6b1d0[shape=record, label="  %52 = sub i32 %51, %32"];
	Node0x1b6b240[shape=record, label="  %53 = icmp eq i32 %18, %52"];
	Node0x1b078b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1b6b2d0[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x1b6b578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b6b6d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b6b7e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b6b8f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b6b9b8[shape=record, label="  ret i32 0"];
	Node0x1b67d38 -> Node0x1b67db8;
	Node0x1b67db8 -> Node0x1b67e48;
	Node0x1b67e48 -> Node0x1b67ea8;
	Node0x1b67ea8 -> Node0x1b67f58;
	Node0x1b67f58 -> Node0x1b68388;
	Node0x1b68388 -> Node0x1b68468;
	Node0x1b68468 -> Node0x1b68568;
	Node0x1b68568 -> Node0x1b68628;
	Node0x1b68628 -> Node0x1b686d8;
	Node0x1b686d8 -> Node0x1b68798;
	Node0x1b68798 -> Node0x1b68848;
	Node0x1b68848 -> Node0x1b62b60;
	Node0x1b62b60 -> Node0x1b68a48;
	Node0x1b68a48 -> Node0x1b699b8;
	Node0x1b699b8 -> Node0x1b6a028;
	Node0x1b6a028 -> Node0x1b6a088;
	Node0x1b6a088 -> Node0x1b6a100;
	Node0x1b6a100 -> Node0x1b6a170;
	Node0x1b6a170 -> Node0x1b6a1e0;
	Node0x1b6a1e0 -> Node0x1b6a250;
	Node0x1b6a250 -> Node0x1b6a2c0;
	Node0x1b6a2c0 -> Node0x1b6a330;
	Node0x1b6a330 -> Node0x1b6a3a0;
	Node0x1b6a3a0 -> Node0x1b6a410;
	Node0x1b6a410 -> Node0x1b6a480;
	Node0x1b6a480 -> Node0x1b6a4f0;
	Node0x1b6a4f0 -> Node0x1b6a560;
	Node0x1b6a560 -> Node0x1b6a5d0;
	Node0x1b6a5d0 -> Node0x1b6a640;
	Node0x1b6a640 -> Node0x1b6a6b0;
	Node0x1b6a6b0 -> Node0x1b6a720;
	Node0x1b6a720 -> Node0x1b6a790;
	Node0x1b6a790 -> Node0x1b6a800;
	Node0x1b6a800 -> Node0x1b6a870;
	Node0x1b6a870 -> Node0x1b6a8e0;
	Node0x1b6a8e0 -> Node0x1b6a950;
	Node0x1b6a950 -> Node0x1b6a9c0;
	Node0x1b6a9c0 -> Node0x1b6aa30;
	Node0x1b6aa30 -> Node0x1b6aaa0;
	Node0x1b6aaa0 -> Node0x1b6ab10;
	Node0x1b6ab10 -> Node0x1b6ab80;
	Node0x1b6ab80 -> Node0x1b6ac20;
	Node0x1b6ac20 -> Node0x1b6ac90;
	Node0x1b6ac90 -> Node0x1b6ad00;
	Node0x1b6ad00 -> Node0x1b6ad70;
	Node0x1b6ad70 -> Node0x1b6ade0;
	Node0x1b6ade0 -> Node0x1b6ae50;
	Node0x1b6ae50 -> Node0x1b6aec0;
	Node0x1b6aec0 -> Node0x1b6af30;
	Node0x1b6af30 -> Node0x1b6afa0;
	Node0x1b6afa0 -> Node0x1b6b010;
	Node0x1b6b010 -> Node0x1b6b080;
	Node0x1b6b080 -> Node0x1b6b0f0;
	Node0x1b6b0f0 -> Node0x1b6b160;
	Node0x1b6b160 -> Node0x1b6b1d0;
	Node0x1b6b1d0 -> Node0x1b6b240;
	Node0x1b6b240 -> Node0x1b078b8;
	Node0x1b078b8 -> Node0x1b6b2d0;
	Node0x1b6b2d0 -> Node0x1b6b578;
	Node0x1b6b578 -> Node0x1b6b6d8;
	Node0x1b6b6d8 -> Node0x1b6b7e8;
	Node0x1b6b7e8 -> Node0x1b6b8f8;
	Node0x1b6b8f8 -> Node0x1b6b9b8;
edge [color=red]
	Node0x1b67d38 -> Node0x1b67f58;
	Node0x1b67f58 -> Node0x1b68388;
	Node0x1b67db8 -> Node0x1b68468;
	Node0x1b68468 -> Node0x1b68568;
	Node0x1b67e48 -> Node0x1b68628;
	Node0x1b68628 -> Node0x1b686d8;
	Node0x1b67ea8 -> Node0x1b68798;
	Node0x1b68798 -> Node0x1b68848;
	Node0x1b67d38 -> Node0x1b62b60;
	Node0x1b67db8 -> Node0x1b62b60;
	Node0x1b67e48 -> Node0x1b62b60;
	Node0x1b67ea8 -> Node0x1b62b60;
	Node0x1b67d38 -> Node0x1b68a48;
	Node0x1b67db8 -> Node0x1b699b8;
	Node0x1b67e48 -> Node0x1b6a028;
	Node0x1b67ea8 -> Node0x1b6a088;
	Node0x1b68a48 -> Node0x1b6a100;
	Node0x1b6a100 -> Node0x1b6a170;
	Node0x1b6a170 -> Node0x1b6a1e0;
	Node0x1b6a088 -> Node0x1b6a250;
	Node0x1b6a1e0 -> Node0x1b6a2c0;
	Node0x1b6a250 -> Node0x1b6a2c0;
	Node0x1b6a028 -> Node0x1b6a330;
	Node0x1b6a330 -> Node0x1b6a3a0;
	Node0x1b699b8 -> Node0x1b6a3a0;
	Node0x1b6a3a0 -> Node0x1b6a410;
	Node0x1b6a410 -> Node0x1b6a480;
	Node0x1b6a028 -> Node0x1b6a4f0;
	Node0x1b699b8 -> Node0x1b6a4f0;
	Node0x1b6a028 -> Node0x1b6a560;
	Node0x1b699b8 -> Node0x1b6a560;
	Node0x1b6a028 -> Node0x1b6a5d0;
	Node0x1b699b8 -> Node0x1b6a5d0;
	Node0x1b699b8 -> Node0x1b6a640;
	Node0x1b6a028 -> Node0x1b6a6b0;
	Node0x1b6a640 -> Node0x1b6a6b0;
	Node0x1b6a6b0 -> Node0x1b6a720;
	Node0x1b6a4f0 -> Node0x1b6a790;
	Node0x1b6a088 -> Node0x1b6a800;
	Node0x1b68a48 -> Node0x1b6a800;
	Node0x1b6a800 -> Node0x1b6a870;
	Node0x1b6a870 -> Node0x1b6a8e0;
	Node0x1b6a088 -> Node0x1b6a950;
	Node0x1b6a100 -> Node0x1b6a950;
	Node0x1b6a088 -> Node0x1b6a9c0;
	Node0x1b6a100 -> Node0x1b6a9c0;
	Node0x1b6a9c0 -> Node0x1b6aa30;
	Node0x1b6a5d0 -> Node0x1b6aaa0;
	Node0x1b6a088 -> Node0x1b6ab10;
	Node0x1b68a48 -> Node0x1b6ab10;
	Node0x1b6ab10 -> Node0x1b6ab80;
	Node0x1b68a48 -> Node0x1b6ac20;
	Node0x1b6ac20 -> Node0x1b6ac90;
	Node0x1b699b8 -> Node0x1b6ac90;
	Node0x1b6ac90 -> Node0x1b6ad00;
	Node0x1b6a4f0 -> Node0x1b6ad00;
	Node0x1b6ad00 -> Node0x1b6ad70;
	Node0x1b6a560 -> Node0x1b6ad70;
	Node0x1b6ad70 -> Node0x1b6ade0;
	Node0x1b6a088 -> Node0x1b6ade0;
	Node0x1b6ade0 -> Node0x1b6ae50;
	Node0x1b6a720 -> Node0x1b6ae50;
	Node0x1b6ae50 -> Node0x1b6aec0;
	Node0x1b6a790 -> Node0x1b6aec0;
	Node0x1b6aec0 -> Node0x1b6af30;
	Node0x1b6a950 -> Node0x1b6af30;
	Node0x1b6af30 -> Node0x1b6afa0;
	Node0x1b6aaa0 -> Node0x1b6afa0;
	Node0x1b6afa0 -> Node0x1b6b010;
	Node0x1b6a410 -> Node0x1b6b010;
	Node0x1b6b010 -> Node0x1b6b080;
	Node0x1b6aa30 -> Node0x1b6b080;
	Node0x1b6b080 -> Node0x1b6b0f0;
	Node0x1b6ab80 -> Node0x1b6b0f0;
	Node0x1b6b0f0 -> Node0x1b6b160;
	Node0x1b6a480 -> Node0x1b6b160;
	Node0x1b6b160 -> Node0x1b6b1d0;
	Node0x1b6a8e0 -> Node0x1b6b1d0;
	Node0x1b6a2c0 -> Node0x1b6b240;
	Node0x1b6b1d0 -> Node0x1b6b240;
	Node0x1b6b240 -> Node0x1b078b8;
	Node0x1b078b8 -> Node0x1b6b2d0;
	Node0x1b68798 -> Node0x1b6b578;
	Node0x1b68628 -> Node0x1b6b6d8;
	Node0x1b68468 -> Node0x1b6b7e8;
	Node0x1b67f58 -> Node0x1b6b8f8;
}
