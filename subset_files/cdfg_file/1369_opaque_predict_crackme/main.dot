digraph "DFG for'main' function" {
	Node0x10839d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1083a58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1083ae8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1083b48[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1083fc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1085bb8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1085c98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1085d58[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1085e08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1086068[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1086128[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1087098[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1087708[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1087800[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1087a08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1087b68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1087c78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1087d38[shape=record, label="  ret i32 0"];
	Node0x10839d8 -> Node0x1083a58;
	Node0x1083a58 -> Node0x1083ae8;
	Node0x1083ae8 -> Node0x1083b48;
	Node0x1083b48 -> Node0x1083fc8;
	Node0x1083fc8 -> Node0x1085bb8;
	Node0x1085bb8 -> Node0x1085c98;
	Node0x1085c98 -> Node0x1085d58;
	Node0x1085d58 -> Node0x1085e08;
	Node0x1085e08 -> Node0x1086068;
	Node0x1086068 -> Node0x1086128;
	Node0x1086128 -> Node0x1087098;
	Node0x1087098 -> Node0x1087708;
	Node0x1087708 -> Node0x1087800;
	Node0x1087800 -> Node0x1087a08;
	Node0x1087a08 -> Node0x1087b68;
	Node0x1087b68 -> Node0x1087c78;
	Node0x1087c78 -> Node0x1087d38;
edge [color=red]
	Node0x10839d8 -> Node0x1083b48;
	Node0x1083b48 -> Node0x1083fc8;
	Node0x1083a58 -> Node0x1085bb8;
	Node0x1085bb8 -> Node0x1085c98;
	Node0x1083ae8 -> Node0x1085d58;
	Node0x1085d58 -> Node0x1085e08;
	Node0x10839d8 -> Node0x1086068;
	Node0x1083a58 -> Node0x1086068;
	Node0x1083ae8 -> Node0x1086068;
	Node0x10839d8 -> Node0x1086128;
	Node0x1083a58 -> Node0x1087098;
	Node0x1083ae8 -> Node0x1087708;
	Node0x1086128 -> Node0x1087800;
	Node0x1087098 -> Node0x1087800;
	Node0x1087708 -> Node0x1087800;
	Node0x1085d58 -> Node0x1087a08;
	Node0x1085bb8 -> Node0x1087b68;
	Node0x1083b48 -> Node0x1087c78;
}
