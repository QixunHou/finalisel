digraph "DFG for'main' function" {
	Node0xfed488[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xfed508[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xfed598[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xfed5f8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xfeda78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfedb58[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xfedc58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfedd18[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xfeddc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfee028[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xfee0e8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xfee248[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xfee2a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xff4420[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xff4628[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xff4788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xff4898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xff4958[shape=record, label="  ret i32 0"];
	Node0xfed488 -> Node0xfed508;
	Node0xfed508 -> Node0xfed598;
	Node0xfed598 -> Node0xfed5f8;
	Node0xfed5f8 -> Node0xfeda78;
	Node0xfeda78 -> Node0xfedb58;
	Node0xfedb58 -> Node0xfedc58;
	Node0xfedc58 -> Node0xfedd18;
	Node0xfedd18 -> Node0xfeddc8;
	Node0xfeddc8 -> Node0xfee028;
	Node0xfee028 -> Node0xfee0e8;
	Node0xfee0e8 -> Node0xfee248;
	Node0xfee248 -> Node0xfee2a8;
	Node0xfee2a8 -> Node0xff4420;
	Node0xff4420 -> Node0xff4628;
	Node0xff4628 -> Node0xff4788;
	Node0xff4788 -> Node0xff4898;
	Node0xff4898 -> Node0xff4958;
edge [color=red]
	Node0xfed488 -> Node0xfed5f8;
	Node0xfed5f8 -> Node0xfeda78;
	Node0xfed508 -> Node0xfedb58;
	Node0xfedb58 -> Node0xfedc58;
	Node0xfed598 -> Node0xfedd18;
	Node0xfedd18 -> Node0xfeddc8;
	Node0xfed488 -> Node0xfee028;
	Node0xfed508 -> Node0xfee028;
	Node0xfed598 -> Node0xfee028;
	Node0xfed488 -> Node0xfee0e8;
	Node0xfed508 -> Node0xfee248;
	Node0xfed598 -> Node0xfee2a8;
	Node0xfee0e8 -> Node0xff4420;
	Node0xfee248 -> Node0xff4420;
	Node0xfee2a8 -> Node0xff4420;
	Node0xfedd18 -> Node0xff4628;
	Node0xfedb58 -> Node0xff4788;
	Node0xfed5f8 -> Node0xff4898;
}
