digraph "DFG for'main' function" {
	Node0x2061748[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x20617c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2061858[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x20618b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2061d38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2063458[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x2063538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20635f8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x20636a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2063908[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x20639c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2064938[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2064fa8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x20650a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x20652a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2065408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2065518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20655d8[shape=record, label="  ret i32 0"];
	Node0x2061748 -> Node0x20617c8;
	Node0x20617c8 -> Node0x2061858;
	Node0x2061858 -> Node0x20618b8;
	Node0x20618b8 -> Node0x2061d38;
	Node0x2061d38 -> Node0x2063458;
	Node0x2063458 -> Node0x2063538;
	Node0x2063538 -> Node0x20635f8;
	Node0x20635f8 -> Node0x20636a8;
	Node0x20636a8 -> Node0x2063908;
	Node0x2063908 -> Node0x20639c8;
	Node0x20639c8 -> Node0x2064938;
	Node0x2064938 -> Node0x2064fa8;
	Node0x2064fa8 -> Node0x20650a0;
	Node0x20650a0 -> Node0x20652a8;
	Node0x20652a8 -> Node0x2065408;
	Node0x2065408 -> Node0x2065518;
	Node0x2065518 -> Node0x20655d8;
edge [color=red]
	Node0x2061748 -> Node0x20618b8;
	Node0x20618b8 -> Node0x2061d38;
	Node0x20617c8 -> Node0x2063458;
	Node0x2063458 -> Node0x2063538;
	Node0x2061858 -> Node0x20635f8;
	Node0x20635f8 -> Node0x20636a8;
	Node0x2061748 -> Node0x2063908;
	Node0x20617c8 -> Node0x2063908;
	Node0x2061858 -> Node0x2063908;
	Node0x2061748 -> Node0x20639c8;
	Node0x20617c8 -> Node0x2064938;
	Node0x2061858 -> Node0x2064fa8;
	Node0x20639c8 -> Node0x20650a0;
	Node0x2064938 -> Node0x20650a0;
	Node0x2064fa8 -> Node0x20650a0;
	Node0x20635f8 -> Node0x20652a8;
	Node0x2063458 -> Node0x2065408;
	Node0x20618b8 -> Node0x2065518;
}
