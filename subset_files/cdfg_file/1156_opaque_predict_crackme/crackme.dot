digraph "DFG for'crackme' function" {
	Node0x173ea80[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x173eaf0[shape=record, label="  %6 = and i32 %2, %1"];
	Node0x173f170[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x173f210[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0x173f280[shape=record, label="  %9 = sub i32 %8, %5"];
	Node0x173f320[shape=record, label="  %10 = xor i32 %0, -1"];
	Node0x173f390[shape=record, label="  %11 = or i32 %10, %3"];
	Node0x173f400[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x173f470[shape=record, label="  %13 = sub i32 %9, %12"];
	Node0x173f4e0[shape=record, label="  %14 = xor i32 %5, -1"];
	Node0x173f580[shape=record, label="  %15 = mul i32 %14, -5"];
	Node0x173f5f0[shape=record, label="  %16 = xor i32 %2, -1"];
	Node0x173f660[shape=record, label="  %17 = and i32 %16, %1"];
	Node0x173f6d0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x173f740[shape=record, label="  %19 = or i32 %2, %1"];
	Node0x173f7b0[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x173f850[shape=record, label="  %21 = mul i32 %20, 6"];
	Node0x173f8f0[shape=record, label="  %22 = mul i32 %6, 7"];
	Node0x173f960[shape=record, label="  %23 = xor i32 %3, %0"];
	Node0x173f9d0[shape=record, label="  %24 = and i32 %10, %3"];
	Node0x173fa40[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x173fab0[shape=record, label="  %26 = and i32 %3, %0"];
	Node0x173fb20[shape=record, label="  %27 = sub i32 %17, %1"];
	Node0x173fbc0[shape=record, label="  %28 = mul i32 %27, 3"];
	Node0x173fc30[shape=record, label="  %29 = sub i32 1, %2"];
	Node0x173fca0[shape=record, label="  %30 = add i32 %29, %18"];
	Node0x173fd10[shape=record, label="  %31 = add i32 %30, %19"];
	Node0x173fd80[shape=record, label="  %32 = add i32 %31, %3"];
	Node0x1740000[shape=record, label="  %33 = add i32 %32, %15"];
	Node0x1740070[shape=record, label="  %34 = add i32 %33, %21"];
	Node0x17400e0[shape=record, label="  %35 = add i32 %34, %22"];
	Node0x1740150[shape=record, label="  %36 = add i32 %35, %23"];
	Node0x17401c0[shape=record, label="  %37 = sub i32 %36, %11"];
	Node0x1740230[shape=record, label="  %38 = sub i32 %37, %26"];
	Node0x17402a0[shape=record, label="  %39 = sub i32 %38, %25"];
	Node0x1740310[shape=record, label="  %40 = add i32 %39, %28"];
	Node0x1740380[shape=record, label="  %41 = icmp eq i32 %13, %40"];
	Node0x16df268[shape=record, label="  %42 = select i1 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1740820[shape=record, label="  %43 = tail call i32 @puts(i8* nonnull dereferenceable(1) %42)"];
	Node0x1740870[shape=record, label="  ret void"];
	Node0x173ea80 -> Node0x173eaf0;
	Node0x173eaf0 -> Node0x173f170;
	Node0x173f170 -> Node0x173f210;
	Node0x173f210 -> Node0x173f280;
	Node0x173f280 -> Node0x173f320;
	Node0x173f320 -> Node0x173f390;
	Node0x173f390 -> Node0x173f400;
	Node0x173f400 -> Node0x173f470;
	Node0x173f470 -> Node0x173f4e0;
	Node0x173f4e0 -> Node0x173f580;
	Node0x173f580 -> Node0x173f5f0;
	Node0x173f5f0 -> Node0x173f660;
	Node0x173f660 -> Node0x173f6d0;
	Node0x173f6d0 -> Node0x173f740;
	Node0x173f740 -> Node0x173f7b0;
	Node0x173f7b0 -> Node0x173f850;
	Node0x173f850 -> Node0x173f8f0;
	Node0x173f8f0 -> Node0x173f960;
	Node0x173f960 -> Node0x173f9d0;
	Node0x173f9d0 -> Node0x173fa40;
	Node0x173fa40 -> Node0x173fab0;
	Node0x173fab0 -> Node0x173fb20;
	Node0x173fb20 -> Node0x173fbc0;
	Node0x173fbc0 -> Node0x173fc30;
	Node0x173fc30 -> Node0x173fca0;
	Node0x173fca0 -> Node0x173fd10;
	Node0x173fd10 -> Node0x173fd80;
	Node0x173fd80 -> Node0x1740000;
	Node0x1740000 -> Node0x1740070;
	Node0x1740070 -> Node0x17400e0;
	Node0x17400e0 -> Node0x1740150;
	Node0x1740150 -> Node0x17401c0;
	Node0x17401c0 -> Node0x1740230;
	Node0x1740230 -> Node0x17402a0;
	Node0x17402a0 -> Node0x1740310;
	Node0x1740310 -> Node0x1740380;
	Node0x1740380 -> Node0x16df268;
	Node0x16df268 -> Node0x1740820;
	Node0x1740820 -> Node0x1740870;
edge [color=red]
	Node0x173eaf0 -> Node0x173f170;
	Node0x173f170 -> Node0x173f210;
	Node0x173f210 -> Node0x173f280;
	Node0x173ea80 -> Node0x173f280;
	Node0x173f320 -> Node0x173f390;
	Node0x173f390 -> Node0x173f400;
	Node0x173f280 -> Node0x173f470;
	Node0x173f400 -> Node0x173f470;
	Node0x173ea80 -> Node0x173f4e0;
	Node0x173f4e0 -> Node0x173f580;
	Node0x173f5f0 -> Node0x173f660;
	Node0x173f660 -> Node0x173f6d0;
	Node0x173f740 -> Node0x173f7b0;
	Node0x173f7b0 -> Node0x173f850;
	Node0x173eaf0 -> Node0x173f8f0;
	Node0x173f320 -> Node0x173f9d0;
	Node0x173f9d0 -> Node0x173fa40;
	Node0x173f660 -> Node0x173fb20;
	Node0x173fb20 -> Node0x173fbc0;
	Node0x173fc30 -> Node0x173fca0;
	Node0x173f6d0 -> Node0x173fca0;
	Node0x173fca0 -> Node0x173fd10;
	Node0x173f740 -> Node0x173fd10;
	Node0x173fd10 -> Node0x173fd80;
	Node0x173fd80 -> Node0x1740000;
	Node0x173f580 -> Node0x1740000;
	Node0x1740000 -> Node0x1740070;
	Node0x173f850 -> Node0x1740070;
	Node0x1740070 -> Node0x17400e0;
	Node0x173f8f0 -> Node0x17400e0;
	Node0x17400e0 -> Node0x1740150;
	Node0x173f960 -> Node0x1740150;
	Node0x1740150 -> Node0x17401c0;
	Node0x173f390 -> Node0x17401c0;
	Node0x17401c0 -> Node0x1740230;
	Node0x173fab0 -> Node0x1740230;
	Node0x1740230 -> Node0x17402a0;
	Node0x173fa40 -> Node0x17402a0;
	Node0x17402a0 -> Node0x1740310;
	Node0x173fbc0 -> Node0x1740310;
	Node0x173f470 -> Node0x1740380;
	Node0x1740310 -> Node0x1740380;
	Node0x1740380 -> Node0x16df268;
	Node0x16df268 -> Node0x1740820;
}
