digraph "DFG for'main' function" {
	Node0x682648[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x6826c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x682758[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x6827b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x682c38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x682d18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x682e18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x682ed8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x682f88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6831e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x6832a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x683408[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x683468[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x68a8f0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x68aad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x68ac38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x68ad48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x68ae08[shape=record, label="  ret i32 0"];
	Node0x682648 -> Node0x6826c8;
	Node0x6826c8 -> Node0x682758;
	Node0x682758 -> Node0x6827b8;
	Node0x6827b8 -> Node0x682c38;
	Node0x682c38 -> Node0x682d18;
	Node0x682d18 -> Node0x682e18;
	Node0x682e18 -> Node0x682ed8;
	Node0x682ed8 -> Node0x682f88;
	Node0x682f88 -> Node0x6831e8;
	Node0x6831e8 -> Node0x6832a8;
	Node0x6832a8 -> Node0x683408;
	Node0x683408 -> Node0x683468;
	Node0x683468 -> Node0x68a8f0;
	Node0x68a8f0 -> Node0x68aad8;
	Node0x68aad8 -> Node0x68ac38;
	Node0x68ac38 -> Node0x68ad48;
	Node0x68ad48 -> Node0x68ae08;
edge [color=red]
	Node0x682648 -> Node0x6827b8;
	Node0x6827b8 -> Node0x682c38;
	Node0x6826c8 -> Node0x682d18;
	Node0x682d18 -> Node0x682e18;
	Node0x682758 -> Node0x682ed8;
	Node0x682ed8 -> Node0x682f88;
	Node0x682648 -> Node0x6831e8;
	Node0x6826c8 -> Node0x6831e8;
	Node0x682758 -> Node0x6831e8;
	Node0x682648 -> Node0x6832a8;
	Node0x6826c8 -> Node0x683408;
	Node0x682758 -> Node0x683468;
	Node0x6832a8 -> Node0x68a8f0;
	Node0x683408 -> Node0x68a8f0;
	Node0x683468 -> Node0x68a8f0;
	Node0x682ed8 -> Node0x68aad8;
	Node0x682d18 -> Node0x68ac38;
	Node0x6827b8 -> Node0x68ad48;
}
