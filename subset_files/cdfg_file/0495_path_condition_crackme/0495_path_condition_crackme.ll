; ModuleID = '../.././c_source_file/0495_path_condition_crackme.c'
source_filename = "../.././c_source_file/0495_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %1, -1
  %5 = or i32 %4, %0
  %6 = xor i32 %2, %0
  %7 = and i32 %6, %5
  %8 = xor i32 %2, -1
  %9 = or i32 %8, %1
  %10 = xor i32 %9, -1
  %11 = xor i32 %10, %0
  %12 = sub i32 %7, %11
  %13 = xor i32 %2, %1
  %14 = xor i32 %13, -1
  %15 = and i32 %14, %0
  %16 = xor i32 %1, %0
  %17 = and i32 %16, %2
  %18 = or i32 %1, %0
  %19 = xor i32 %18, -1
  %20 = or i32 %14, %19
  %21 = and i32 %8, %0
  %22 = or i32 %21, %16
  %23 = and i32 %8, %1
  %24 = xor i32 %23, -1
  %25 = xor i32 %24, %0
  %26 = and i32 %24, %0
  %27 = and i32 %1, %0
  %28 = xor i32 %27, %2
  %29 = xor i32 %0, -1
  %30 = and i32 %4, %2
  %31 = and i32 %30, %29
  %32 = or i32 %4, %2
  %33 = and i32 %32, %0
  %34 = or i32 %31, %33
  %35 = shl i32 %34, 1
  %36 = and i32 %2, %1
  %37 = xor i32 %36, -1
  %38 = or i32 %2, %1
  %39 = xor i32 %38, -1
  %40 = or i32 %39, %29
  %41 = and i32 %2, %0
  %42 = or i32 %41, %16
  %43 = and i32 %4, %0
  %44 = or i32 %43, %14
  %45 = xor i32 %41, -1
  %46 = and i32 %45, %1
  %47 = xor i32 %9, %27
  %48 = shl i32 %47, 1
  %49 = xor i32 %5, -1
  %50 = or i32 %8, %49
  %51 = and i32 %13, %18
  %52 = shl i32 %51, 1
  %53 = xor i32 %43, %37
  %54 = shl i32 %53, 1
  %55 = xor i32 %36, %0
  %56 = shl i32 %55, 1
  %57 = and i32 %36, %29
  %58 = and i32 %13, %0
  %59 = xor i32 %57, -1
  %60 = xor i32 %58, %59
  %61 = xor i32 %6, -1
  %62 = or i32 %61, %4
  %63 = xor i32 %41, %1
  %64 = and i32 %38, %29
  %65 = and i32 %5, %61
  %66 = shl i32 %65, 1
  %67 = xor i32 %41, %24
  %68 = and i32 %61, %4
  %69 = shl i32 %68, 2
  %70 = or i32 %36, %0
  %71 = or i32 %23, %0
  %72 = or i32 %6, %43
  %73 = or i32 %2, %0
  %74 = xor i32 %16, -1
  %75 = and i32 %73, %74
  %76 = and i32 %30, %0
  %77 = or i32 %13, %0
  %78 = xor i32 %76, %77
  %79 = or i32 %61, %1
  %80 = xor i32 %73, -1
  %81 = or i32 %27, %80
  %82 = xor i32 %27, -1
  %83 = and i32 %14, %82
  %84 = or i32 %38, %0
  %85 = xor i32 %13, %0
  %86 = or i32 %76, %85
  %87 = add i32 %5, 1
  %88 = and i32 %18, %61
  %89 = and i32 %36, %0
  %90 = xor i32 %89, %85
  %91 = or i32 %8, %0
  %92 = and i32 %91, %1
  %93 = xor i32 %23, %0
  %94 = xor i32 %21, -1
  %95 = and i32 %94, %74
  %96 = xor i32 %43, %2
  %97 = and i32 %91, %74
  %98 = and i32 %5, %2
  %99 = and i32 %13, %29
  %100 = xor i32 %89, -1
  %101 = xor i32 %99, %100
  %102 = xor i32 %37, %0
  %103 = or i32 %8, %19
  %104 = or i32 %9, %29
  %105 = or i32 %6, %19
  %106 = xor i32 %43, -1
  %107 = and i32 %8, %106
  %108 = or i32 %21, %4
  %109 = or i32 %36, %29
  %110 = xor i32 %73, %27
  %111 = and i32 %32, %29
  %112 = or i32 %76, %111
  %113 = or i32 %41, %74
  %114 = or i32 %23, %43
  %115 = or i32 %6, %74
  %116 = shl i32 %115, 1
  %117 = and i32 %9, %0
  %118 = and i32 %61, %74
  %119 = xor i32 %106, %2
  %120 = or i32 %89, %64
  %121 = shl i32 %120, 1
  %122 = and i32 %37, %0
  %123 = shl i32 %80, 1
  %124 = xor i32 %5, %2
  %125 = or i32 %61, %74
  %126 = and i32 %6, %74
  %127 = and i32 %9, %29
  %128 = or i32 %89, %99
  %129 = and i32 %8, %82
  %130 = xor i32 %21, %9
  %131 = add i32 %6, 1
  %132 = and i32 %61, %82
  %133 = shl i32 %132, 1
  %134 = or i32 %13, %43
  %135 = shl i32 %134, 1
  %136 = shl i32 %10, 1
  %137 = xor i32 %91, -1
  %138 = and i32 %45, %74
  %139 = xor i32 %41, %5
  %140 = xor i32 %85, -1
  %141 = xor i32 %76, %140
  %142 = xor i32 %137, %1
  %143 = xor i32 %33, -1
  %144 = xor i32 %31, %143
  %145 = xor i32 %18, %2
  %146 = and i32 %38, %0
  %147 = xor i32 %146, %59
  %148 = or i32 %43, %2
  %149 = and i32 %5, %8
  %150 = or i32 %10, %29
  %151 = or i32 %137, %1
  %152 = or i32 %27, %2
  %153 = xor i32 %9, %0
  %154 = and i32 %6, %82
  %155 = or i32 %24, %29
  %156 = or i32 %6, %4
  %157 = or i32 %21, %36
  %158 = or i32 %21, %10
  %159 = and i32 %16, %45
  %160 = xor i32 %64, %100
  %161 = and i32 %18, %8
  %162 = or i32 %61, %19
  %163 = and i32 %18, %14
  %164 = or i32 %13, %19
  %165 = or i32 %13, %27
  %166 = or i32 %41, %39
  %167 = or i32 %21, %1
  %168 = or i32 %37, %0
  %169 = xor i32 %14, %0
  %170 = or i32 %27, %137
  %171 = or i32 %16, %8
  %172 = or i32 %13, %49
  %173 = or i32 %16, %61
  %174 = or i32 %57, %58
  %175 = or i32 %19, %2
  %176 = shl i32 %18, 1
  %177 = or i32 %27, %10
  %178 = or i32 %14, %0
  %179 = xor i32 %77, -1
  %180 = or i32 %76, %179
  %181 = and i32 %6, %4
  %182 = and i32 %14, %106
  %183 = or i32 %80, %4
  %184 = and i32 %6, %1
  %185 = and i32 %16, %94
  %186 = and i32 %82, %2
  %187 = or i32 %27, %61
  %188 = or i32 %74, %2
  %189 = or i32 %36, %43
  %190 = xor i32 %45, %1
  %191 = or i32 %24, %0
  %192 = or i32 %57, %146
  %193 = and i32 %61, %1
  %194 = or i32 %10, %0
  %195 = or i32 %61, %49
  %196 = xor i32 %73, %1
  %197 = and i32 %91, %4
  %198 = and i32 %73, %16
  %199 = and i32 %61, %106
  %200 = or i32 %41, %4
  %201 = or i32 %23, %29
  %202 = xor i32 %21, %37
  %203 = or i32 %6, %49
  %204 = or i32 %21, %74
  %205 = or i32 %13, %29
  %206 = xor i32 %205, -1
  %207 = or i32 %31, %206
  %208 = or i32 %9, %0
  %209 = xor i32 %43, %24
  %210 = or i32 %43, %8
  %211 = and i32 %18, %2
  %212 = or i32 %14, %29
  %213 = add i32 %27, 1
  %214 = xor i32 %19, %2
  %215 = and i32 %13, %82
  %216 = and i32 %16, %8
  %217 = or i32 %27, %39
  %218 = or i32 %27, %14
  %219 = and i32 %74, %2
  %220 = shl i32 %219, 1
  %221 = or i32 %80, %1
  %222 = shl i32 %221, 1
  %223 = or i32 %16, %137
  %224 = xor i32 %111, 2147483647
  %225 = xor i32 %224, %76
  %226 = shl i32 %225, 1
  %227 = xor i32 %91, %27
  %228 = and i32 %13, %5
  %229 = shl i32 %228, 1
  %230 = and i32 %94, %4
  %231 = xor i32 %39, %0
  %232 = xor i32 %38, %0
  %233 = xor i32 %232, %100
  %234 = xor i32 %32, %0
  %235 = or i32 %76, %234
  %236 = xor i32 %234, -1
  %237 = xor i32 %76, %236
  %238 = or i32 %137, %4
  %239 = add i32 %21, 1
  %240 = or i32 %6, %16
  %241 = or i32 %137, %74
  %242 = and i32 %6, %16
  %243 = and i32 %24, %29
  %244 = or i32 %89, %232
  %245 = shl i32 %244, 1
  %246 = or i32 %14, %49
  %247 = or i32 %37, %29
  %248 = and i32 %106, %2
  %249 = shl i32 %248, 1
  %250 = xor i32 %41, %18
  %251 = or i32 %89, %140
  %252 = xor i32 %82, %2
  %253 = and i32 %8, %74
  %254 = and i32 %16, %61
  %255 = shl i32 %1, 1
  %256 = and i32 %94, %1
  %257 = xor i32 %31, %205
  %258 = and i32 %39, %29
  %259 = mul i32 %258, -29
  %260 = and i32 %23, %29
  %261 = and i32 %39, %0
  %262 = mul i32 %261, -21
  %263 = and i32 %23, %0
  %264 = mul i32 %263, -17
  %265 = and i32 %10, %29
  %266 = mul i32 %265, -18
  %267 = and i32 %10, %0
  %268 = sub i32 -2, %16
  %269 = add i32 %268, %252
  %270 = add i32 %269, %14
  %271 = add i32 %270, %6
  %272 = add i32 %271, %9
  %273 = add i32 %272, %254
  %274 = add i32 %273, %267
  %275 = add i32 %274, %217
  %276 = add i32 %275, %199
  %277 = add i32 %276, %198
  %278 = add i32 %277, %99
  %279 = add i32 %278, %196
  %280 = add i32 %279, %195
  %281 = add i32 %280, %189
  %282 = add i32 %281, %150
  %283 = add i32 %282, %104
  %284 = add i32 %283, %79
  %285 = shl i32 %284, 1
  %286 = sub i32 %124, %36
  %287 = sub i32 %286, %57
  %288 = sub i32 %287, %146
  %289 = add i32 %288, %212
  %290 = sub i32 %289, %163
  %291 = sub i32 %290, %159
  %292 = add i32 %291, %235
  %293 = mul i32 %292, 5
  %294 = add i32 %89, %105
  %295 = mul i32 %294, 3
  %296 = add i32 %75, %37
  %297 = shl i32 %296, 2
  %298 = sub i32 -4, %1
  %299 = add i32 %298, %5
  %300 = add i32 %299, %87
  %301 = sub i32 %300, %2
  %302 = add i32 %301, %27
  %303 = add i32 %302, %19
  %304 = add i32 %303, %213
  %305 = sub i32 %304, %16
  %306 = sub i32 %305, %255
  %307 = sub i32 %306, %17
  %308 = add i32 %307, %28
  %309 = add i32 %308, %50
  %310 = add i32 %309, %45
  %311 = add i32 %310, %96
  %312 = sub i32 %311, %98
  %313 = sub i32 %312, %103
  %314 = add i32 %313, %21
  %315 = add i32 %314, %107
  %316 = add i32 %315, %119
  %317 = sub i32 %316, %23
  %318 = add i32 %317, %129
  %319 = add i32 %318, %131
  %320 = add i32 %319, %137
  %321 = add i32 %320, %145
  %322 = add i32 %321, %148
  %323 = sub i32 %322, %149
  %324 = add i32 %323, %73
  %325 = sub i32 %324, %152
  %326 = sub i32 %325, %13
  %327 = add i32 %326, %161
  %328 = add i32 %327, %171
  %329 = sub i32 %328, %175
  %330 = sub i32 %329, %176
  %331 = add i32 %330, %24
  %332 = add i32 %331, %186
  %333 = sub i32 %332, %188
  %334 = add i32 %333, %210
  %335 = add i32 %334, %211
  %336 = sub i32 %335, %214
  %337 = add i32 %336, %216
  %338 = sub i32 %337, %41
  %339 = add i32 %338, %239
  %340 = sub i32 %339, %253
  %341 = sub i32 %340, %15
  %342 = add i32 %341, %20
  %343 = add i32 %342, %22
  %344 = sub i32 %343, %25
  %345 = sub i32 %344, %26
  %346 = add i32 %345, %40
  %347 = sub i32 %346, %42
  %348 = sub i32 %347, %44
  %349 = sub i32 %348, %46
  %350 = add i32 %349, %62
  %351 = add i32 %350, %63
  %352 = add i32 %351, %64
  %353 = add i32 %352, %67
  %354 = sub i32 %353, %70
  %355 = add i32 %354, %71
  %356 = add i32 %355, %72
  %357 = add i32 %356, %81
  %358 = sub i32 %357, %83
  %359 = add i32 %358, %84
  %360 = add i32 %359, %88
  %361 = add i32 %360, %92
  %362 = add i32 %361, %93
  %363 = add i32 %362, %95
  %364 = sub i32 %363, %97
  %365 = sub i32 %364, %102
  %366 = sub i32 %365, %108
  %367 = sub i32 %366, %109
  %368 = sub i32 %367, %110
  %369 = add i32 %368, %113
  %370 = sub i32 %369, %114
  %371 = add i32 %370, %117
  %372 = add i32 %371, %118
  %373 = sub i32 %372, %122
  %374 = sub i32 %373, %123
  %375 = sub i32 %374, %125
  %376 = sub i32 %375, %126
  %377 = sub i32 %376, %127
  %378 = add i32 %377, %130
  %379 = sub i32 %378, %136
  %380 = add i32 %379, %138
  %381 = sub i32 %380, %139
  %382 = sub i32 %381, %142
  %383 = add i32 %382, %58
  %384 = sub i32 %383, %151
  %385 = add i32 %384, %153
  %386 = add i32 %385, %154
  %387 = sub i32 %386, %155
  %388 = add i32 %387, %156
  %389 = add i32 %388, %157
  %390 = add i32 %389, %158
  %391 = add i32 %390, %162
  %392 = add i32 %391, %164
  %393 = sub i32 %392, %165
  %394 = sub i32 %393, %166
  %395 = add i32 %394, %167
  %396 = add i32 %395, %168
  %397 = add i32 %396, %169
  %398 = add i32 %397, %170
  %399 = sub i32 %398, %172
  %400 = add i32 %399, %173
  %401 = sub i32 %400, %177
  %402 = sub i32 %401, %77
  %403 = sub i32 %402, %178
  %404 = add i32 %403, %181
  %405 = add i32 %404, %182
  %406 = sub i32 %405, %183
  %407 = add i32 %406, %184
  %408 = add i32 %407, %185
  %409 = sub i32 %408, %187
  %410 = add i32 %409, %190
  %411 = add i32 %410, %191
  %412 = add i32 %411, %193
  %413 = sub i32 %412, %194
  %414 = add i32 %413, %197
  %415 = add i32 %414, %200
  %416 = sub i32 %415, %201
  %417 = sub i32 %416, %202
  %418 = sub i32 %417, %203
  %419 = add i32 %418, %204
  %420 = add i32 %419, %208
  %421 = sub i32 %420, %209
  %422 = add i32 %421, %215
  %423 = sub i32 %422, %218
  %424 = sub i32 %423, %220
  %425 = sub i32 %424, %223
  %426 = sub i32 %425, %227
  %427 = add i32 %426, %230
  %428 = add i32 %427, %231
  %429 = add i32 %428, %238
  %430 = sub i32 %429, %240
  %431 = add i32 %430, %241
  %432 = sub i32 %431, %242
  %433 = sub i32 %432, %243
  %434 = sub i32 %433, %246
  %435 = sub i32 %434, %247
  %436 = sub i32 %435, %249
  %437 = add i32 %436, %250
  %438 = sub i32 %437, %256
  %439 = sub i32 %438, %260
  %440 = sub i32 %439, %48
  %441 = sub i32 %440, %52
  %442 = sub i32 %441, %54
  %443 = sub i32 %442, %56
  %444 = sub i32 %443, %60
  %445 = sub i32 %444, %66
  %446 = sub i32 %445, %69
  %447 = add i32 %446, %78
  %448 = sub i32 %447, %86
  %449 = sub i32 %448, %90
  %450 = sub i32 %449, %101
  %451 = sub i32 %450, %112
  %452 = sub i32 %451, %116
  %453 = add i32 %452, %128
  %454 = sub i32 %453, %133
  %455 = sub i32 %454, %135
  %456 = sub i32 %455, %141
  %457 = sub i32 %456, %144
  %458 = sub i32 %457, %147
  %459 = add i32 %458, %160
  %460 = add i32 %459, %174
  %461 = add i32 %460, %180
  %462 = sub i32 %461, %192
  %463 = sub i32 %462, %207
  %464 = sub i32 %463, %222
  %465 = sub i32 %464, %229
  %466 = sub i32 %465, %233
  %467 = sub i32 %466, %237
  %468 = sub i32 %467, %251
  %469 = sub i32 %468, %257
  %470 = add i32 %469, %259
  %471 = add i32 %470, %262
  %472 = add i32 %471, %264
  %473 = add i32 %472, %266
  %474 = sub i32 %473, %35
  %475 = sub i32 %474, %121
  %476 = sub i32 %475, %245
  %477 = add i32 %476, %295
  %478 = add i32 %477, %297
  %479 = sub i32 %478, %226
  %480 = add i32 %479, %293
  %481 = add i32 %480, %285
  %482 = icmp eq i32 %12, %481
  %483 = select i1 %482, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %484 = tail call i32 @puts(i8* nonnull dereferenceable(1) %483)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
