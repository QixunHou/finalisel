digraph "DFG for'main' function" {
	Node0x1a2c6d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a2c758[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a2c7e8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1a2c848[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1a2ccc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a2cda8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1a2cea8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a2cf68[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1a2d018[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a2d278[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1a2d338[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a2d498[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a2d4f8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1a2fe40[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1a30048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a301a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a302b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a30378[shape=record, label="  ret i32 0"];
	Node0x1a2c6d8 -> Node0x1a2c758;
	Node0x1a2c758 -> Node0x1a2c7e8;
	Node0x1a2c7e8 -> Node0x1a2c848;
	Node0x1a2c848 -> Node0x1a2ccc8;
	Node0x1a2ccc8 -> Node0x1a2cda8;
	Node0x1a2cda8 -> Node0x1a2cea8;
	Node0x1a2cea8 -> Node0x1a2cf68;
	Node0x1a2cf68 -> Node0x1a2d018;
	Node0x1a2d018 -> Node0x1a2d278;
	Node0x1a2d278 -> Node0x1a2d338;
	Node0x1a2d338 -> Node0x1a2d498;
	Node0x1a2d498 -> Node0x1a2d4f8;
	Node0x1a2d4f8 -> Node0x1a2fe40;
	Node0x1a2fe40 -> Node0x1a30048;
	Node0x1a30048 -> Node0x1a301a8;
	Node0x1a301a8 -> Node0x1a302b8;
	Node0x1a302b8 -> Node0x1a30378;
edge [color=red]
	Node0x1a2c6d8 -> Node0x1a2c848;
	Node0x1a2c848 -> Node0x1a2ccc8;
	Node0x1a2c758 -> Node0x1a2cda8;
	Node0x1a2cda8 -> Node0x1a2cea8;
	Node0x1a2c7e8 -> Node0x1a2cf68;
	Node0x1a2cf68 -> Node0x1a2d018;
	Node0x1a2c6d8 -> Node0x1a2d278;
	Node0x1a2c758 -> Node0x1a2d278;
	Node0x1a2c7e8 -> Node0x1a2d278;
	Node0x1a2c6d8 -> Node0x1a2d338;
	Node0x1a2c758 -> Node0x1a2d498;
	Node0x1a2c7e8 -> Node0x1a2d4f8;
	Node0x1a2d338 -> Node0x1a2fe40;
	Node0x1a2d498 -> Node0x1a2fe40;
	Node0x1a2d4f8 -> Node0x1a2fe40;
	Node0x1a2cf68 -> Node0x1a30048;
	Node0x1a2cda8 -> Node0x1a301a8;
	Node0x1a2c848 -> Node0x1a302b8;
}
