digraph "DFG for'crackme' function" {
	Node0x22970d0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x2297140[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x22971b0[shape=record, label="  %7 = xor i32 %1, -1"];
	Node0x2297220[shape=record, label="  %8 = add i32 %6, %7"];
	Node0x2297290[shape=record, label="  %9 = xor i32 %3, %0"];
	Node0x2297300[shape=record, label="  %10 = add i32 %8, %9"];
	Node0x2297370[shape=record, label="  %11 = and i32 %3, %0"];
	Node0x2297410[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x22974b0[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x2297520[shape=record, label="  %14 = sub i32 %10, %13"];
	Node0x2297590[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x2297600[shape=record, label="  %16 = and i32 %5, %1"];
	Node0x2297670[shape=record, label="  %17 = and i32 %2, %1"];
	Node0x22976e0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x2297750[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x22977c0[shape=record, label="  %20 = xor i32 %15, -1"];
	Node0x2297830[shape=record, label="  %21 = xor i32 %6, -1"];
	Node0x22978d0[shape=record, label="  %22 = mul i32 %16, 3"];
	Node0x2297940[shape=record, label="  %23 = or i32 %3, %0"];
	Node0x22979e0[shape=record, label="  %24 = xor i32 %0, 2147483647"];
	Node0x2297a50[shape=record, label="  %25 = shl i32 %3, 1"];
	Node0x2297ac0[shape=record, label="  %26 = or i32 %24, %3"];
	Node0x2297b30[shape=record, label="  %27 = add i32 %21, %20"];
	Node0x2297bd0[shape=record, label="  %28 = mul i32 %27, 5"];
	Node0x2297c40[shape=record, label="  %29 = add i32 %23, %26"];
	Node0x2297cb0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x2297d20[shape=record, label="  %31 = add i32 %1, 5"];
	Node0x2297d90[shape=record, label="  %32 = sub i32 %31, %15"];
	Node0x2298010[shape=record, label="  %33 = add i32 %32, %16"];
	Node0x2298080[shape=record, label="  %34 = add i32 %33, %22"];
	Node0x22980f0[shape=record, label="  %35 = add i32 %34, %18"];
	Node0x2298160[shape=record, label="  %36 = add i32 %35, %9"];
	Node0x22981d0[shape=record, label="  %37 = sub i32 %36, %25"];
	Node0x2298240[shape=record, label="  %38 = sub i32 %37, %19"];
	Node0x22982b0[shape=record, label="  %39 = add i32 %38, %12"];
	Node0x2298320[shape=record, label="  %40 = add i32 %39, %28"];
	Node0x2298390[shape=record, label="  %41 = add i32 %40, %30"];
	Node0x2298400[shape=record, label="  %42 = icmp eq i32 %14, %41"];
	Node0x2237268[shape=record, label="  %43 = select i1 %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22988a0[shape=record, label="  %44 = tail call i32 @puts(i8* nonnull dereferenceable(1) %43)"];
	Node0x22988f0[shape=record, label="  ret void"];
	Node0x22970d0 -> Node0x2297140;
	Node0x2297140 -> Node0x22971b0;
	Node0x22971b0 -> Node0x2297220;
	Node0x2297220 -> Node0x2297290;
	Node0x2297290 -> Node0x2297300;
	Node0x2297300 -> Node0x2297370;
	Node0x2297370 -> Node0x2297410;
	Node0x2297410 -> Node0x22974b0;
	Node0x22974b0 -> Node0x2297520;
	Node0x2297520 -> Node0x2297590;
	Node0x2297590 -> Node0x2297600;
	Node0x2297600 -> Node0x2297670;
	Node0x2297670 -> Node0x22976e0;
	Node0x22976e0 -> Node0x2297750;
	Node0x2297750 -> Node0x22977c0;
	Node0x22977c0 -> Node0x2297830;
	Node0x2297830 -> Node0x22978d0;
	Node0x22978d0 -> Node0x2297940;
	Node0x2297940 -> Node0x22979e0;
	Node0x22979e0 -> Node0x2297a50;
	Node0x2297a50 -> Node0x2297ac0;
	Node0x2297ac0 -> Node0x2297b30;
	Node0x2297b30 -> Node0x2297bd0;
	Node0x2297bd0 -> Node0x2297c40;
	Node0x2297c40 -> Node0x2297cb0;
	Node0x2297cb0 -> Node0x2297d20;
	Node0x2297d20 -> Node0x2297d90;
	Node0x2297d90 -> Node0x2298010;
	Node0x2298010 -> Node0x2298080;
	Node0x2298080 -> Node0x22980f0;
	Node0x22980f0 -> Node0x2298160;
	Node0x2298160 -> Node0x22981d0;
	Node0x22981d0 -> Node0x2298240;
	Node0x2298240 -> Node0x22982b0;
	Node0x22982b0 -> Node0x2298320;
	Node0x2298320 -> Node0x2298390;
	Node0x2298390 -> Node0x2298400;
	Node0x2298400 -> Node0x2237268;
	Node0x2237268 -> Node0x22988a0;
	Node0x22988a0 -> Node0x22988f0;
edge [color=red]
	Node0x22970d0 -> Node0x2297140;
	Node0x2297140 -> Node0x2297220;
	Node0x22971b0 -> Node0x2297220;
	Node0x2297220 -> Node0x2297300;
	Node0x2297290 -> Node0x2297300;
	Node0x2297370 -> Node0x2297410;
	Node0x2297410 -> Node0x22974b0;
	Node0x2297300 -> Node0x2297520;
	Node0x22974b0 -> Node0x2297520;
	Node0x22970d0 -> Node0x2297600;
	Node0x2297670 -> Node0x22976e0;
	Node0x22976e0 -> Node0x2297750;
	Node0x2297590 -> Node0x22977c0;
	Node0x2297140 -> Node0x2297830;
	Node0x2297600 -> Node0x22978d0;
	Node0x22979e0 -> Node0x2297ac0;
	Node0x2297830 -> Node0x2297b30;
	Node0x22977c0 -> Node0x2297b30;
	Node0x2297b30 -> Node0x2297bd0;
	Node0x2297940 -> Node0x2297c40;
	Node0x2297ac0 -> Node0x2297c40;
	Node0x2297c40 -> Node0x2297cb0;
	Node0x2297d20 -> Node0x2297d90;
	Node0x2297590 -> Node0x2297d90;
	Node0x2297d90 -> Node0x2298010;
	Node0x2297600 -> Node0x2298010;
	Node0x2298010 -> Node0x2298080;
	Node0x22978d0 -> Node0x2298080;
	Node0x2298080 -> Node0x22980f0;
	Node0x22976e0 -> Node0x22980f0;
	Node0x22980f0 -> Node0x2298160;
	Node0x2297290 -> Node0x2298160;
	Node0x2298160 -> Node0x22981d0;
	Node0x2297a50 -> Node0x22981d0;
	Node0x22981d0 -> Node0x2298240;
	Node0x2297750 -> Node0x2298240;
	Node0x2298240 -> Node0x22982b0;
	Node0x2297410 -> Node0x22982b0;
	Node0x22982b0 -> Node0x2298320;
	Node0x2297bd0 -> Node0x2298320;
	Node0x2298320 -> Node0x2298390;
	Node0x2297cb0 -> Node0x2298390;
	Node0x2297520 -> Node0x2298400;
	Node0x2298390 -> Node0x2298400;
	Node0x2298400 -> Node0x2237268;
	Node0x2237268 -> Node0x22988a0;
}
