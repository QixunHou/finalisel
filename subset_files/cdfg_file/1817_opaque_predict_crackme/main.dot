digraph "DFG for'main' function" {
	Node0x158a3c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x158a448[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x158a4d8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x158a938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x158aa18[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x158ab38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x158ad70[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x158ae28[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x158bd98[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x158c420[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x158c490[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x158c500[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x158c570[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x158c5e0[shape=record, label="  %12 = sub i32 %9, %11"];
	Node0x158c650[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x158c6c0[shape=record, label="  %14 = and i32 %6, %13"];
	Node0x158c730[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x158c7a0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x158c810[shape=record, label="  %17 = xor i32 %7, %6"];
	Node0x158c880[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x158c8f0[shape=record, label="  %19 = or i32 %6, %13"];
	Node0x158c960[shape=record, label="  %20 = shl i32 %6, 1"];
	Node0x158c9d0[shape=record, label="  %21 = xor i32 %17, -1"];
	Node0x158ca40[shape=record, label="  %22 = add i32 %10, 1"];
	Node0x158cab0[shape=record, label="  %23 = shl i32 %19, 1"];
	Node0x158cb20[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x158cb90[shape=record, label="  %25 = shl i32 %8, 2"];
	Node0x158cc00[shape=record, label="  %26 = add i32 %22, %19"];
	Node0x158cc70[shape=record, label="  %27 = mul i32 %26, 5"];
	Node0x158cce0[shape=record, label="  %28 = sub i32 3, %6"];
	Node0x158cd50[shape=record, label="  %29 = add i32 %28, %13"];
	Node0x158cdc0[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0x158ce30[shape=record, label="  %31 = add i32 %30, %21"];
	Node0x158cea0[shape=record, label="  %32 = add i32 %31, %14"];
	Node0x158cf10[shape=record, label="  %33 = sub i32 %32, %18"];
	Node0x158cf80[shape=record, label="  %34 = sub i32 %33, %25"];
	Node0x158cff0[shape=record, label="  %35 = add i32 %34, %16"];
	Node0x158d060[shape=record, label="  %36 = add i32 %35, %24"];
	Node0x158d0d0[shape=record, label="  %37 = add i32 %36, %27"];
	Node0x158d140[shape=record, label="  %38 = icmp eq i32 %12, %37"];
	Node0x152a9d8[shape=record, label="  %39 = select i1 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x158d1d0[shape=record, label="  %40 = call i32 @puts(i8* nonnull dereferenceable(1) %39) #5"];
	Node0x158d428[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x158d588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x158d648[shape=record, label="  ret i32 0"];
	Node0x158a3c8 -> Node0x158a448;
	Node0x158a448 -> Node0x158a4d8;
	Node0x158a4d8 -> Node0x158a938;
	Node0x158a938 -> Node0x158aa18;
	Node0x158aa18 -> Node0x158ab38;
	Node0x158ab38 -> Node0x158ad70;
	Node0x158ad70 -> Node0x158ae28;
	Node0x158ae28 -> Node0x158bd98;
	Node0x158bd98 -> Node0x158c420;
	Node0x158c420 -> Node0x158c490;
	Node0x158c490 -> Node0x158c500;
	Node0x158c500 -> Node0x158c570;
	Node0x158c570 -> Node0x158c5e0;
	Node0x158c5e0 -> Node0x158c650;
	Node0x158c650 -> Node0x158c6c0;
	Node0x158c6c0 -> Node0x158c730;
	Node0x158c730 -> Node0x158c7a0;
	Node0x158c7a0 -> Node0x158c810;
	Node0x158c810 -> Node0x158c880;
	Node0x158c880 -> Node0x158c8f0;
	Node0x158c8f0 -> Node0x158c960;
	Node0x158c960 -> Node0x158c9d0;
	Node0x158c9d0 -> Node0x158ca40;
	Node0x158ca40 -> Node0x158cab0;
	Node0x158cab0 -> Node0x158cb20;
	Node0x158cb20 -> Node0x158cb90;
	Node0x158cb90 -> Node0x158cc00;
	Node0x158cc00 -> Node0x158cc70;
	Node0x158cc70 -> Node0x158cce0;
	Node0x158cce0 -> Node0x158cd50;
	Node0x158cd50 -> Node0x158cdc0;
	Node0x158cdc0 -> Node0x158ce30;
	Node0x158ce30 -> Node0x158cea0;
	Node0x158cea0 -> Node0x158cf10;
	Node0x158cf10 -> Node0x158cf80;
	Node0x158cf80 -> Node0x158cff0;
	Node0x158cff0 -> Node0x158d060;
	Node0x158d060 -> Node0x158d0d0;
	Node0x158d0d0 -> Node0x158d140;
	Node0x158d140 -> Node0x152a9d8;
	Node0x152a9d8 -> Node0x158d1d0;
	Node0x158d1d0 -> Node0x158d428;
	Node0x158d428 -> Node0x158d588;
	Node0x158d588 -> Node0x158d648;
edge [color=red]
	Node0x158a3c8 -> Node0x158a4d8;
	Node0x158a4d8 -> Node0x158a938;
	Node0x158a448 -> Node0x158aa18;
	Node0x158aa18 -> Node0x158ab38;
	Node0x158a3c8 -> Node0x158ad70;
	Node0x158a448 -> Node0x158ad70;
	Node0x158a3c8 -> Node0x158ae28;
	Node0x158a448 -> Node0x158bd98;
	Node0x158bd98 -> Node0x158c420;
	Node0x158ae28 -> Node0x158c420;
	Node0x158c420 -> Node0x158c490;
	Node0x158bd98 -> Node0x158c500;
	Node0x158ae28 -> Node0x158c500;
	Node0x158c500 -> Node0x158c570;
	Node0x158c490 -> Node0x158c5e0;
	Node0x158c570 -> Node0x158c5e0;
	Node0x158bd98 -> Node0x158c650;
	Node0x158ae28 -> Node0x158c6c0;
	Node0x158c650 -> Node0x158c6c0;
	Node0x158c6c0 -> Node0x158c730;
	Node0x158c730 -> Node0x158c7a0;
	Node0x158bd98 -> Node0x158c810;
	Node0x158ae28 -> Node0x158c810;
	Node0x158c810 -> Node0x158c880;
	Node0x158ae28 -> Node0x158c8f0;
	Node0x158c650 -> Node0x158c8f0;
	Node0x158ae28 -> Node0x158c960;
	Node0x158c810 -> Node0x158c9d0;
	Node0x158c500 -> Node0x158ca40;
	Node0x158c8f0 -> Node0x158cab0;
	Node0x158cab0 -> Node0x158cb20;
	Node0x158c420 -> Node0x158cb90;
	Node0x158ca40 -> Node0x158cc00;
	Node0x158c8f0 -> Node0x158cc00;
	Node0x158cc00 -> Node0x158cc70;
	Node0x158ae28 -> Node0x158cce0;
	Node0x158cce0 -> Node0x158cd50;
	Node0x158c650 -> Node0x158cd50;
	Node0x158cd50 -> Node0x158cdc0;
	Node0x158c960 -> Node0x158cdc0;
	Node0x158cdc0 -> Node0x158ce30;
	Node0x158c9d0 -> Node0x158ce30;
	Node0x158ce30 -> Node0x158cea0;
	Node0x158c6c0 -> Node0x158cea0;
	Node0x158cea0 -> Node0x158cf10;
	Node0x158c880 -> Node0x158cf10;
	Node0x158cf10 -> Node0x158cf80;
	Node0x158cb90 -> Node0x158cf80;
	Node0x158cf80 -> Node0x158cff0;
	Node0x158c7a0 -> Node0x158cff0;
	Node0x158cff0 -> Node0x158d060;
	Node0x158cb20 -> Node0x158d060;
	Node0x158d060 -> Node0x158d0d0;
	Node0x158cc70 -> Node0x158d0d0;
	Node0x158c5e0 -> Node0x158d140;
	Node0x158d0d0 -> Node0x158d140;
	Node0x158d140 -> Node0x152a9d8;
	Node0x152a9d8 -> Node0x158d1d0;
	Node0x158aa18 -> Node0x158d428;
	Node0x158a4d8 -> Node0x158d588;
}
