digraph "DFG for'crackme' function" {
	Node0x1588690[shape=record, label="  %3 = and i32 %1, %0"];
	Node0x1588d40[shape=record, label="  %4 = xor i32 %3, -1"];
	Node0x1588e00[shape=record, label="  %5 = or i32 %1, %0"];
	Node0x1588e70[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x1588ee0[shape=record, label="  %7 = sub i32 %4, %6"];
	Node0x1588f50[shape=record, label="  %8 = xor i32 %1, -1"];
	Node0x1588fc0[shape=record, label="  %9 = and i32 %8, %0"];
	Node0x1589030[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x15890d0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x1589140[shape=record, label="  %12 = xor i32 %1, %0"];
	Node0x15891b0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1589220[shape=record, label="  %14 = or i32 %8, %0"];
	Node0x1589290[shape=record, label="  %15 = shl i32 %0, 1"];
	Node0x1589300[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x1589370[shape=record, label="  %17 = add i32 %5, 1"];
	Node0x15893e0[shape=record, label="  %18 = shl i32 %14, 1"];
	Node0x1589450[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x15894f0[shape=record, label="  %20 = shl i32 %3, 2"];
	Node0x1589560[shape=record, label="  %21 = add i32 %17, %14"];
	Node0x1589600[shape=record, label="  %22 = mul i32 %21, 5"];
	Node0x15896a0[shape=record, label="  %23 = sub i32 3, %0"];
	Node0x1589710[shape=record, label="  %24 = add i32 %23, %8"];
	Node0x1589780[shape=record, label="  %25 = sub i32 %24, %15"];
	Node0x15897f0[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x1589860[shape=record, label="  %27 = add i32 %26, %9"];
	Node0x15898d0[shape=record, label="  %28 = sub i32 %27, %13"];
	Node0x1589940[shape=record, label="  %29 = sub i32 %28, %20"];
	Node0x15899b0[shape=record, label="  %30 = add i32 %29, %11"];
	Node0x1589a20[shape=record, label="  %31 = add i32 %30, %19"];
	Node0x1589a90[shape=record, label="  %32 = add i32 %31, %22"];
	Node0x1589d10[shape=record, label="  %33 = icmp eq i32 %7, %32"];
	Node0x1529268[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x158a1b0[shape=record, label="  %35 = tail call i32 @puts(i8* nonnull dereferenceable(1) %34)"];
	Node0x158a200[shape=record, label="  ret void"];
	Node0x1588690 -> Node0x1588d40;
	Node0x1588d40 -> Node0x1588e00;
	Node0x1588e00 -> Node0x1588e70;
	Node0x1588e70 -> Node0x1588ee0;
	Node0x1588ee0 -> Node0x1588f50;
	Node0x1588f50 -> Node0x1588fc0;
	Node0x1588fc0 -> Node0x1589030;
	Node0x1589030 -> Node0x15890d0;
	Node0x15890d0 -> Node0x1589140;
	Node0x1589140 -> Node0x15891b0;
	Node0x15891b0 -> Node0x1589220;
	Node0x1589220 -> Node0x1589290;
	Node0x1589290 -> Node0x1589300;
	Node0x1589300 -> Node0x1589370;
	Node0x1589370 -> Node0x15893e0;
	Node0x15893e0 -> Node0x1589450;
	Node0x1589450 -> Node0x15894f0;
	Node0x15894f0 -> Node0x1589560;
	Node0x1589560 -> Node0x1589600;
	Node0x1589600 -> Node0x15896a0;
	Node0x15896a0 -> Node0x1589710;
	Node0x1589710 -> Node0x1589780;
	Node0x1589780 -> Node0x15897f0;
	Node0x15897f0 -> Node0x1589860;
	Node0x1589860 -> Node0x15898d0;
	Node0x15898d0 -> Node0x1589940;
	Node0x1589940 -> Node0x15899b0;
	Node0x15899b0 -> Node0x1589a20;
	Node0x1589a20 -> Node0x1589a90;
	Node0x1589a90 -> Node0x1589d10;
	Node0x1589d10 -> Node0x1529268;
	Node0x1529268 -> Node0x158a1b0;
	Node0x158a1b0 -> Node0x158a200;
edge [color=red]
	Node0x1588690 -> Node0x1588d40;
	Node0x1588e00 -> Node0x1588e70;
	Node0x1588d40 -> Node0x1588ee0;
	Node0x1588e70 -> Node0x1588ee0;
	Node0x1588f50 -> Node0x1588fc0;
	Node0x1588fc0 -> Node0x1589030;
	Node0x1589030 -> Node0x15890d0;
	Node0x1589140 -> Node0x15891b0;
	Node0x1588f50 -> Node0x1589220;
	Node0x1589140 -> Node0x1589300;
	Node0x1588e00 -> Node0x1589370;
	Node0x1589220 -> Node0x15893e0;
	Node0x15893e0 -> Node0x1589450;
	Node0x1588690 -> Node0x15894f0;
	Node0x1589370 -> Node0x1589560;
	Node0x1589220 -> Node0x1589560;
	Node0x1589560 -> Node0x1589600;
	Node0x15896a0 -> Node0x1589710;
	Node0x1588f50 -> Node0x1589710;
	Node0x1589710 -> Node0x1589780;
	Node0x1589290 -> Node0x1589780;
	Node0x1589780 -> Node0x15897f0;
	Node0x1589300 -> Node0x15897f0;
	Node0x15897f0 -> Node0x1589860;
	Node0x1588fc0 -> Node0x1589860;
	Node0x1589860 -> Node0x15898d0;
	Node0x15891b0 -> Node0x15898d0;
	Node0x15898d0 -> Node0x1589940;
	Node0x15894f0 -> Node0x1589940;
	Node0x1589940 -> Node0x15899b0;
	Node0x15890d0 -> Node0x15899b0;
	Node0x15899b0 -> Node0x1589a20;
	Node0x1589450 -> Node0x1589a20;
	Node0x1589a20 -> Node0x1589a90;
	Node0x1589600 -> Node0x1589a90;
	Node0x1588ee0 -> Node0x1589d10;
	Node0x1589a90 -> Node0x1589d10;
	Node0x1589d10 -> Node0x1529268;
	Node0x1529268 -> Node0x158a1b0;
}
