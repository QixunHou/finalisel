; ModuleID = '../.././c_source_file/0501_path_condition_crackme.c'
source_filename = "../.././c_source_file/0501_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %2, %0
  %5 = xor i32 %4, -1
  %6 = and i32 %5, %1
  %7 = and i32 %2, %1
  %8 = and i32 %7, %0
  %9 = xor i32 %0, -1
  %10 = or i32 %2, %1
  %11 = and i32 %10, %9
  %12 = or i32 %8, %11
  %13 = add i32 %12, %6
  %14 = xor i32 %2, -1
  %15 = and i32 %14, %0
  %16 = xor i32 %15, -1
  %17 = xor i32 %16, %1
  %18 = or i32 %14, %0
  %19 = xor i32 %18, %1
  %20 = and i32 %14, %1
  %21 = or i32 %14, %1
  %22 = xor i32 %15, %21
  %23 = or i32 %1, %0
  %24 = xor i32 %23, -1
  %25 = or i32 %24, %2
  %26 = or i32 %7, %0
  %27 = and i32 %21, %9
  %28 = or i32 %2, %0
  %29 = xor i32 %28, %1
  %30 = shl i32 %29, 1
  %31 = xor i32 %7, -1
  %32 = and i32 %31, %9
  %33 = xor i32 %1, -1
  %34 = or i32 %33, %0
  %35 = xor i32 %34, -1
  %36 = and i32 %33, %0
  %37 = xor i32 %36, %2
  %38 = xor i32 %2, %0
  %39 = or i32 %38, %24
  %40 = or i32 %4, %1
  %41 = and i32 %33, %2
  %42 = and i32 %41, %9
  %43 = or i32 %33, %2
  %44 = and i32 %43, %0
  %45 = or i32 %42, %44
  %46 = xor i32 %21, -1
  %47 = xor i32 %46, %0
  %48 = xor i32 %2, %1
  %49 = and i32 %48, %0
  %50 = xor i32 %48, -1
  %51 = shl i32 %50, 1
  %52 = or i32 %36, %2
  %53 = and i32 %41, %0
  %54 = xor i32 %48, %0
  %55 = xor i32 %54, -1
  %56 = xor i32 %53, %55
  %57 = xor i32 %1, %0
  %58 = or i32 %15, %57
  %59 = or i32 %46, %0
  %60 = xor i32 %43, %0
  %61 = or i32 %53, %60
  %62 = or i32 %38, %35
  %63 = xor i32 %20, -1
  %64 = and i32 %63, %0
  %65 = xor i32 %57, -1
  %66 = or i32 %38, %65
  %67 = and i32 %38, %1
  %68 = and i32 %65, %2
  %69 = or i32 %10, %0
  %70 = xor i32 %18, -1
  %71 = shl i32 %70, 1
  %72 = and i32 %1, %0
  %73 = xor i32 %72, -1
  %74 = and i32 %38, %73
  %75 = add i32 %20, 1
  %76 = add i32 %57, 1
  %77 = and i32 %73, %2
  %78 = xor i32 %24, %2
  %79 = and i32 %7, %9
  %80 = and i32 %10, %0
  %81 = or i32 %79, %80
  %82 = and i32 %48, %73
  %83 = or i32 %10, %9
  %84 = shl i32 %83, 1
  %85 = xor i32 %38, -1
  %86 = and i32 %85, %1
  %87 = or i32 %48, %0
  %88 = xor i32 %87, -1
  %89 = or i32 %53, %88
  %90 = xor i32 %28, -1
  %91 = and i32 %63, %9
  %92 = xor i32 %36, -1
  %93 = and i32 %85, %92
  %94 = and i32 %18, %65
  %95 = shl i32 %94, 1
  %96 = and i32 %5, %65
  %97 = or i32 %20, %36
  %98 = or i32 %85, %35
  %99 = or i32 %53, %54
  %100 = xor i32 %53, -1
  %101 = xor i32 %60, %100
  %102 = and i32 %23, %2
  %103 = xor i32 %70, %1
  %104 = and i32 %34, %50
  %105 = xor i32 %4, %34
  %106 = xor i32 %36, %31
  %107 = and i32 %34, %2
  %108 = or i32 %4, %33
  %109 = xor i32 %44, -1
  %110 = xor i32 %42, %109
  %111 = and i32 %92, %2
  %112 = and i32 %38, %92
  %113 = or i32 %38, %72
  %114 = xor i32 %92, %2
  %115 = or i32 %65, %2
  %116 = and i32 %57, %14
  %117 = and i32 %57, %5
  %118 = shl i32 %87, 1
  %119 = xor i32 %10, -1
  %120 = xor i32 %119, %0
  %121 = xor i32 %73, %2
  %122 = and i32 %16, %65
  %123 = shl i32 %122, 2
  %124 = xor i32 %90, %1
  %125 = or i32 %48, %9
  %126 = xor i32 %125, 1073741823
  %127 = or i32 %126, %42
  %128 = xor i32 %4, %63
  %129 = or i32 %50, %0
  %130 = and i32 %28, %65
  %131 = xor i32 %4, %23
  %132 = and i32 %50, %73
  %133 = or i32 %50, %24
  %134 = or i32 %48, %36
  %135 = and i32 %38, %65
  %136 = xor i32 %28, %72
  %137 = or i32 %14, %65
  %138 = or i32 %85, %33
  %139 = and i32 %48, %23
  %140 = and i32 %57, %85
  %141 = or i32 %85, %65
  %142 = or i32 %48, %72
  %143 = and i32 %50, %0
  %144 = and i32 %85, %73
  %145 = shl i32 %144, 1
  %146 = or i32 %48, %24
  %147 = or i32 %119, %9
  %148 = and i32 %34, %85
  %149 = shl i32 %148, 1
  %150 = xor i32 %35, %2
  %151 = or i32 %50, %35
  %152 = and i32 %28, %33
  %153 = xor i32 %15, %1
  %154 = and i32 %18, %57
  %155 = or i32 %4, %20
  %156 = and i32 %31, %0
  %157 = and i32 %50, %92
  %158 = and i32 %85, %33
  %159 = or i32 %57, %90
  %160 = shl i32 %159, 1
  %161 = and i32 %38, %33
  %162 = or i32 %38, %57
  %163 = or i32 %119, %0
  %164 = and i32 %14, %65
  %165 = or i32 %85, %24
  %166 = or i32 %72, %50
  %167 = xor i32 %31, %0
  %168 = or i32 %31, %0
  %169 = and i32 %23, %50
  %170 = xor i32 %5, %1
  %171 = or i32 %15, %7
  %172 = or i32 %38, %33
  %173 = and i32 %57, %16
  %174 = or i32 %79, %49
  %175 = or i32 %63, %9
  %176 = or i32 %7, %36
  %177 = or i32 %57, %2
  %178 = or i32 %38, %36
  %179 = add i32 %7, 1
  %180 = and i32 %38, %23
  %181 = or i32 %4, %57
  %182 = xor i32 %18, %72
  %183 = xor i32 %7, %0
  %184 = xor i32 %21, %0
  %185 = or i32 %57, %85
  %186 = xor i32 %10, %0
  %187 = or i32 %35, %2
  %188 = add i32 %38, 1
  %189 = or i32 %46, %9
  %190 = or i32 %85, %1
  %191 = or i32 %57, %14
  %192 = and i32 %28, %57
  %193 = shl i32 %192, 1
  %194 = xor i32 %63, %0
  %195 = or i32 %72, %14
  %196 = or i32 %7, %9
  %197 = xor i32 %4, %10
  %198 = or i32 %36, %85
  %199 = or i32 %21, %9
  %200 = or i32 %31, %9
  %201 = or i32 %48, %35
  %202 = or i32 %90, %65
  %203 = or i32 %36, %50
  %204 = xor i32 %4, %1
  %205 = or i32 %20, %9
  %206 = xor i32 %10, %72
  %207 = and i32 %28, %1
  %208 = shl i32 %207, 1
  %209 = or i32 %8, %186
  %210 = xor i32 %34, %2
  %211 = and i32 %48, %9
  %212 = xor i32 %8, -1
  %213 = xor i32 %211, %212
  %214 = and i32 %57, %2
  %215 = or i32 %90, %33
  %216 = or i32 %38, %1
  %217 = or i32 %72, %85
  %218 = and i32 %43, %9
  %219 = or i32 %53, %218
  %220 = xor i32 %21, %72
  %221 = and i32 %14, %92
  %222 = shl i32 %221, 2
  %223 = or i32 %57, %70
  %224 = xor i32 %79, -1
  %225 = xor i32 %49, %224
  %226 = and i32 %5, %33
  %227 = and i32 %50, %9
  %228 = xor i32 %20, %0
  %229 = xor i32 %72, %2
  %230 = or i32 %8, %55
  %231 = xor i32 %80, %224
  %232 = xor i32 %23, %2
  %233 = and i32 %21, %0
  %234 = or i32 %14, %24
  %235 = or i32 %72, %46
  %236 = xor i32 %42, %125
  %237 = or i32 %21, %0
  %238 = or i32 %63, %0
  %239 = or i32 %36, %14
  %240 = shl i32 %239, 1
  %241 = and i32 %16, %1
  %242 = xor i32 %186, %212
  %243 = or i32 %4, %119
  %244 = or i32 %15, %65
  %245 = or i32 %20, %0
  %246 = and i32 %23, %85
  %247 = or i32 %70, %65
  %248 = xor i32 %8, %54
  %249 = or i32 %4, %24
  %250 = and i32 %34, %14
  %251 = or i32 %72, %2
  %252 = shl i32 %251, 1
  %253 = or i32 %70, %33
  %254 = or i32 %50, %9
  %255 = or i32 %70, %1
  %256 = and i32 %23, %14
  %257 = and i32 %38, %57
  %258 = shl i32 %257, 1
  %259 = and i32 %18, %33
  %260 = and i32 %16, %33
  %261 = xor i32 %11, %212
  %262 = xor i32 %36, %63
  %263 = xor i32 %50, %0
  %264 = and i32 %85, %65
  %265 = or i32 %15, %46
  %266 = or i32 %4, %65
  %267 = and i32 %48, %92
  %268 = xor i32 %53, %87
  %269 = shl i32 %268, 1
  %270 = or i32 %15, %33
  %271 = or i32 %72, %90
  %272 = and i32 %48, %34
  %273 = or i32 %90, %1
  %274 = or i32 %8, %211
  %275 = xor i32 %218, %100
  %276 = xor i32 %15, %31
  %277 = or i32 %15, %1
  %278 = or i32 %4, %35
  %279 = and i32 %38, %34
  %280 = and i32 %14, %73
  %281 = and i32 %18, %1
  %282 = shl i32 %281, 1
  %283 = or i32 %72, %119
  %284 = and i32 %119, %9
  %285 = mul i32 %284, -15
  %286 = and i32 %20, %9
  %287 = mul i32 %286, -21
  %288 = and i32 %119, %0
  %289 = mul i32 %288, -17
  %290 = and i32 %20, %0
  %291 = and i32 %46, %9
  %292 = mul i32 %291, -18
  %293 = and i32 %46, %0
  %294 = mul i32 %293, -10
  %295 = mul i32 %8, -13
  %296 = add i32 %28, %1
  %297 = add i32 %296, %214
  %298 = add i32 %297, %191
  %299 = add i32 %298, %7
  %300 = add i32 %299, %107
  %301 = add i32 %300, %278
  %302 = add i32 %301, %255
  %303 = add i32 %302, %253
  %304 = add i32 %303, %245
  %305 = add i32 %304, %233
  %306 = add i32 %305, %228
  %307 = add i32 %306, %217
  %308 = add i32 %307, %202
  %309 = add i32 %308, %199
  %310 = add i32 %309, %173
  %311 = add i32 %310, %143
  %312 = add i32 %311, %98
  %313 = add i32 %312, %91
  %314 = add i32 %313, %86
  %315 = add i32 %314, %11
  %316 = add i32 %315, %59
  %317 = add i32 %316, %32
  %318 = add i32 %317, %209
  %319 = shl i32 %318, 1
  %320 = sub i32 %177, %139
  %321 = add i32 %320, %158
  %322 = sub i32 %321, %64
  %323 = sub i32 %322, %49
  %324 = add i32 %323, %22
  %325 = mul i32 %324, 5
  %326 = add i32 %203, %46
  %327 = add i32 %326, %127
  %328 = shl i32 %327, 2
  %329 = sub i32 %290, %79
  %330 = mul i32 %329, 11
  %331 = add i32 %107, %156
  %332 = add i32 %331, %237
  %333 = add i32 %332, %134
  %334 = sub i32 %333, %113
  %335 = mul i32 %334, 3
  %336 = sub i32 1, %1
  %337 = add i32 %336, %76
  %338 = sub i32 %337, %2
  %339 = add i32 %338, %73
  %340 = sub i32 %339, %57
  %341 = sub i32 %340, %36
  %342 = sub i32 %341, %72
  %343 = sub i32 %342, %2
  %344 = add i32 %343, %92
  %345 = sub i32 %344, %20
  %346 = sub i32 %345, %25
  %347 = sub i32 %346, %37
  %348 = add i32 %347, %38
  %349 = add i32 %348, %52
  %350 = add i32 %349, %21
  %351 = add i32 %350, %68
  %352 = add i32 %351, %75
  %353 = add i32 %352, %5
  %354 = add i32 %353, %77
  %355 = add i32 %354, %78
  %356 = add i32 %355, %90
  %357 = add i32 %356, %48
  %358 = sub i32 %357, %102
  %359 = add i32 %358, %18
  %360 = sub i32 %359, %111
  %361 = add i32 %360, %114
  %362 = sub i32 %361, %115
  %363 = sub i32 %362, %116
  %364 = add i32 %363, %121
  %365 = sub i32 %364, %137
  %366 = add i32 %365, %150
  %367 = add i32 %366, %164
  %368 = add i32 %367, %179
  %369 = sub i32 %368, %187
  %370 = add i32 %369, %188
  %371 = sub i32 %370, %195
  %372 = add i32 %371, %210
  %373 = sub i32 %372, %229
  %374 = sub i32 %373, %232
  %375 = sub i32 %374, %234
  %376 = sub i32 %375, %250
  %377 = sub i32 %376, %4
  %378 = add i32 %377, %256
  %379 = add i32 %378, %280
  %380 = add i32 %379, %19
  %381 = add i32 %380, %17
  %382 = sub i32 %381, %26
  %383 = add i32 %382, %27
  %384 = add i32 %383, %39
  %385 = sub i32 %384, %40
  %386 = add i32 %385, %47
  %387 = sub i32 %386, %51
  %388 = add i32 %387, %58
  %389 = add i32 %388, %62
  %390 = sub i32 %389, %66
  %391 = add i32 %390, %67
  %392 = sub i32 %391, %69
  %393 = sub i32 %392, %71
  %394 = sub i32 %393, %74
  %395 = add i32 %394, %82
  %396 = add i32 %395, %54
  %397 = sub i32 %396, %93
  %398 = sub i32 %397, %96
  %399 = sub i32 %398, %97
  %400 = add i32 %399, %103
  %401 = add i32 %400, %104
  %402 = add i32 %401, %105
  %403 = add i32 %402, %106
  %404 = add i32 %403, %108
  %405 = sub i32 %404, %112
  %406 = sub i32 %405, %117
  %407 = sub i32 %406, %120
  %408 = sub i32 %407, %124
  %409 = sub i32 %408, %125
  %410 = sub i32 %409, %128
  %411 = sub i32 %410, %129
  %412 = sub i32 %411, %130
  %413 = add i32 %412, %131
  %414 = add i32 %413, %132
  %415 = sub i32 %414, %133
  %416 = add i32 %415, %135
  %417 = add i32 %416, %136
  %418 = add i32 %417, %138
  %419 = add i32 %418, %140
  %420 = add i32 %419, %141
  %421 = add i32 %420, %142
  %422 = sub i32 %421, %146
  %423 = sub i32 %422, %147
  %424 = sub i32 %423, %151
  %425 = sub i32 %424, %152
  %426 = sub i32 %425, %153
  %427 = sub i32 %426, %154
  %428 = sub i32 %427, %155
  %429 = add i32 %428, %157
  %430 = sub i32 %429, %161
  %431 = sub i32 %430, %162
  %432 = sub i32 %431, %163
  %433 = add i32 %432, %165
  %434 = add i32 %433, %166
  %435 = sub i32 %434, %167
  %436 = sub i32 %435, %168
  %437 = sub i32 %436, %169
  %438 = add i32 %437, %170
  %439 = add i32 %438, %171
  %440 = sub i32 %439, %172
  %441 = sub i32 %440, %175
  %442 = sub i32 %441, %176
  %443 = add i32 %442, %178
  %444 = sub i32 %443, %180
  %445 = add i32 %444, %181
  %446 = add i32 %445, %182
  %447 = sub i32 %446, %183
  %448 = add i32 %447, %184
  %449 = sub i32 %448, %185
  %450 = sub i32 %449, %186
  %451 = sub i32 %450, %189
  %452 = add i32 %451, %190
  %453 = add i32 %452, %80
  %454 = add i32 %453, %194
  %455 = add i32 %454, %196
  %456 = sub i32 %455, %197
  %457 = sub i32 %456, %198
  %458 = sub i32 %457, %200
  %459 = sub i32 %458, %201
  %460 = add i32 %459, %204
  %461 = add i32 %460, %205
  %462 = add i32 %461, %206
  %463 = sub i32 %462, %215
  %464 = add i32 %463, %216
  %465 = add i32 %464, %220
  %466 = sub i32 %465, %222
  %467 = add i32 %466, %223
  %468 = sub i32 %467, %226
  %469 = add i32 %468, %227
  %470 = sub i32 %469, %235
  %471 = sub i32 %470, %238
  %472 = sub i32 %471, %240
  %473 = sub i32 %472, %241
  %474 = add i32 %473, %243
  %475 = add i32 %474, %244
  %476 = add i32 %475, %246
  %477 = sub i32 %476, %247
  %478 = add i32 %477, %249
  %479 = sub i32 %478, %252
  %480 = add i32 %479, %254
  %481 = add i32 %480, %259
  %482 = add i32 %481, %260
  %483 = sub i32 %482, %262
  %484 = sub i32 %483, %263
  %485 = sub i32 %484, %264
  %486 = add i32 %485, %265
  %487 = add i32 %486, %266
  %488 = add i32 %487, %267
  %489 = add i32 %488, %270
  %490 = add i32 %489, %271
  %491 = sub i32 %490, %272
  %492 = sub i32 %491, %273
  %493 = sub i32 %492, %276
  %494 = sub i32 %493, %277
  %495 = add i32 %494, %279
  %496 = add i32 %495, %211
  %497 = add i32 %496, %283
  %498 = sub i32 %497, %30
  %499 = sub i32 %498, %45
  %500 = add i32 %499, %56
  %501 = sub i32 %500, %61
  %502 = sub i32 %501, %81
  %503 = sub i32 %502, %84
  %504 = add i32 %503, %89
  %505 = sub i32 %504, %95
  %506 = sub i32 %505, %99
  %507 = add i32 %506, %101
  %508 = sub i32 %507, %110
  %509 = sub i32 %508, %118
  %510 = sub i32 %509, %123
  %511 = sub i32 %510, %145
  %512 = sub i32 %511, %149
  %513 = sub i32 %512, %160
  %514 = add i32 %513, %174
  %515 = sub i32 %514, %193
  %516 = sub i32 %515, %208
  %517 = add i32 %516, %213
  %518 = add i32 %517, %219
  %519 = add i32 %518, %225
  %520 = sub i32 %519, %230
  %521 = add i32 %520, %231
  %522 = sub i32 %521, %236
  %523 = sub i32 %522, %242
  %524 = add i32 %523, %248
  %525 = sub i32 %524, %258
  %526 = sub i32 %525, %261
  %527 = sub i32 %526, %274
  %528 = add i32 %527, %275
  %529 = sub i32 %528, %282
  %530 = add i32 %529, %285
  %531 = add i32 %530, %287
  %532 = add i32 %531, %289
  %533 = add i32 %532, %292
  %534 = add i32 %533, %294
  %535 = add i32 %534, %295
  %536 = sub i32 %535, %269
  %537 = add i32 %536, %330
  %538 = add i32 %537, %328
  %539 = add i32 %538, %325
  %540 = add i32 %539, %335
  %541 = add i32 %540, %319
  %542 = icmp eq i32 %13, %541
  %543 = select i1 %542, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %544 = tail call i32 @puts(i8* nonnull dereferenceable(1) %543)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
