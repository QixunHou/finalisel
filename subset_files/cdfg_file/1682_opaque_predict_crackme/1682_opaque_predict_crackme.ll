; ModuleID = '../.././c_source_file/1682_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1682_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = xor i32 %1, %0
  %9 = xor i32 %8, -1
  %10 = or i32 %7, %9
  %11 = xor i32 %5, %3
  %12 = and i32 %11, %4
  %13 = add i32 %12, %10
  %14 = and i32 %7, %1
  %15 = xor i32 %14, -1
  %16 = or i32 %15, %0
  %17 = xor i32 %2, %0
  %18 = xor i32 %17, -1
  %19 = and i32 %8, %18
  %20 = xor i32 %1, -1
  %21 = and i32 %20, %2
  %22 = and i32 %21, %0
  %23 = xor i32 %2, %1
  %24 = or i32 %23, %0
  %25 = xor i32 %22, %24
  %26 = and i32 %2, %1
  %27 = and i32 %26, %0
  %28 = xor i32 %23, %0
  %29 = xor i32 %27, %28
  %30 = shl i32 %29, 1
  %31 = and i32 %1, %0
  %32 = xor i32 %31, -1
  %33 = and i32 %32, %2
  %34 = shl i32 %33, 1
  %35 = and i32 %20, %0
  %36 = or i32 %23, %35
  %37 = or i32 %9, %2
  %38 = or i32 %7, %0
  %39 = xor i32 %38, %1
  %40 = xor i32 %0, -1
  %41 = or i32 %2, %1
  %42 = xor i32 %41, -1
  %43 = or i32 %42, %40
  %44 = shl i32 %43, 1
  %45 = or i32 %17, %20
  %46 = and i32 %7, %0
  %47 = or i32 %46, %26
  %48 = xor i32 %46, %1
  %49 = or i32 %18, %1
  %50 = or i32 %20, %0
  %51 = xor i32 %50, -1
  %52 = or i32 %18, %51
  %53 = shl i32 %52, 2
  %54 = xor i32 %23, -1
  %55 = or i32 %31, %54
  %56 = and i32 %2, %0
  %57 = or i32 %56, %51
  %58 = and i32 %41, %0
  %59 = and i32 %17, %50
  %60 = shl i32 %59, 1
  %61 = or i32 %22, %28
  %62 = or i32 %35, %18
  %63 = xor i32 %51, %2
  %64 = or i32 %2, %0
  %65 = and i32 %64, %20
  %66 = or i32 %26, %35
  %67 = or i32 %14, %35
  %68 = or i32 %26, %40
  %69 = or i32 %7, %1
  %70 = and i32 %69, %0
  %71 = shl i32 %70, 1
  %72 = xor i32 %46, -1
  %73 = shl i32 %72, 1
  %74 = or i32 %14, %0
  %75 = xor i32 %28, -1
  %76 = or i32 %27, %75
  %77 = xor i32 %31, %2
  %78 = and i32 %72, %9
  %79 = or i32 %18, %20
  %80 = xor i32 %56, -1
  %81 = xor i32 %80, %1
  %82 = and i32 %50, %7
  %83 = or i32 %15, %40
  %84 = shl i32 %83, 1
  %85 = or i32 %41, %0
  %86 = shl i32 %28, 1
  %87 = and i32 %41, %40
  %88 = xor i32 %69, -1
  %89 = or i32 %88, %40
  %90 = or i32 %8, %18
  %91 = shl i32 %90, 1
  %92 = xor i32 %41, %31
  %93 = or i32 %31, %7
  %94 = or i32 %31, %88
  %95 = or i32 %56, %42
  %96 = xor i32 %26, %0
  %97 = xor i32 %38, -1
  %98 = or i32 %31, %97
  %99 = xor i32 %26, -1
  %100 = or i32 %17, %51
  %101 = and i32 %50, %54
  %102 = and i32 %8, %72
  %103 = and i32 %17, %20
  %104 = and i32 %64, %9
  %105 = shl i32 %104, 1
  %106 = or i32 %69, %0
  %107 = xor i32 %54, %0
  %108 = xor i32 %32, %2
  %109 = xor i32 %69, %31
  %110 = xor i32 %46, %69
  %111 = xor i32 %69, %0
  %112 = or i32 %35, %7
  %113 = xor i32 %56, %15
  %114 = and i32 %15, %40
  %115 = or i32 %31, %42
  %116 = or i32 %17, %1
  %117 = or i32 %20, %2
  %118 = and i32 %117, %40
  %119 = or i32 %22, %118
  %120 = xor i32 %42, %0
  %121 = and i32 %21, %40
  %122 = and i32 %117, %0
  %123 = xor i32 %122, -1
  %124 = xor i32 %121, %123
  %125 = or i32 %17, %8
  %126 = or i32 %1, %0
  %127 = and i32 %126, %2
  %128 = shl i32 %127, 2
  %129 = or i32 %46, %20
  %130 = xor i32 %35, -1
  %131 = and i32 %54, %130
  %132 = xor i32 %50, %2
  %133 = and i32 %26, %40
  %134 = or i32 %133, %58
  %135 = add i32 %17, 1
  %136 = or i32 %23, %40
  %137 = xor i32 %130, %2
  %138 = xor i32 %35, %2
  %139 = or i32 %46, %88
  %140 = and i32 %54, %32
  %141 = and i32 %15, %0
  %142 = or i32 %35, %54
  %143 = shl i32 %142, 1
  %144 = or i32 %7, %51
  %145 = and i32 %7, %130
  %146 = xor i32 %64, -1
  %147 = and i32 %80, %20
  %148 = or i32 %54, %0
  %149 = xor i32 %27, %148
  %150 = or i32 %17, %35
  %151 = and i32 %72, %20
  %152 = or i32 %146, %20
  %153 = or i32 %56, %8
  %154 = and i32 %38, %9
  %155 = or i32 %31, %2
  %156 = xor i32 %126, -1
  %157 = add i32 %126, 1
  %158 = and i32 %130, %2
  %159 = or i32 %23, %51
  %160 = xor i32 %56, %50
  %161 = and i32 %18, %20
  %162 = or i32 %31, %18
  %163 = or i32 %54, %51
  %164 = or i32 %51, %2
  %165 = and i32 %23, %0
  %166 = or i32 %133, %165
  %167 = or i32 %99, %0
  %168 = or i32 %56, %20
  %169 = xor i32 %146, %1
  %170 = or i32 %146, %9
  %171 = or i32 %23, %31
  %172 = shl i32 %171, 1
  %173 = and i32 %54, %0
  %174 = shl i32 %173, 1
  %175 = or i32 %8, %7
  %176 = and i32 %17, %126
  %177 = or i32 %17, %156
  %178 = and i32 %80, %1
  %179 = xor i32 %38, %31
  %180 = or i32 %156, %2
  %181 = xor i32 %88, %0
  %182 = xor i32 %46, %99
  %183 = and i32 %17, %130
  %184 = and i32 %64, %1
  %185 = or i32 %69, %40
  %186 = xor i32 %97, %1
  %187 = xor i32 %56, %41
  %188 = add i32 %56, 1
  %189 = or i32 %23, %156
  %190 = and i32 %99, %40
  %191 = or i32 %99, %40
  %192 = or i32 %8, %97
  %193 = and i32 %18, %9
  %194 = or i32 %18, %156
  %195 = xor i32 %117, %40
  %196 = xor i32 %195, %22
  %197 = xor i32 %72, %1
  %198 = xor i32 %58, 2147483647
  %199 = xor i32 %198, %133
  %200 = shl i32 %199, 1
  %201 = and i32 %72, %1
  %202 = xor i32 %118, 2147483647
  %203 = xor i32 %202, %22
  %204 = shl i32 %203, 1
  %205 = and i32 %23, %32
  %206 = shl i32 %205, 2
  %207 = and i32 %42, %40
  %208 = and i32 %14, %40
  %209 = mul i32 %208, 19
  %210 = and i32 %42, %0
  %211 = and i32 %14, %0
  %212 = and i32 %88, %40
  %213 = mul i32 %133, 9
  %214 = and i32 %88, %0
  %215 = shl i32 %27, 4
  %216 = and i32 %5, %4
  %217 = xor i32 %5, -1
  %218 = and i32 %217, %3
  %219 = xor i32 %218, -1
  %220 = xor i32 %216, %219
  %221 = xor i32 %4, %3
  %222 = xor i32 %5, %4
  %223 = or i32 %222, %221
  %224 = and i32 %219, %4
  %225 = or i32 %221, %217
  %226 = and i32 %5, %3
  %227 = and i32 %226, %4
  %228 = or i32 %5, %3
  %229 = xor i32 %228, %4
  %230 = or i32 %227, %229
  %231 = or i32 %4, %3
  %232 = xor i32 %231, -1
  %233 = or i32 %217, %232
  %234 = xor i32 %228, -1
  %235 = or i32 %216, %234
  %236 = and i32 %217, %4
  %237 = xor i32 %236, -1
  %238 = xor i32 %221, -1
  %239 = and i32 %237, %238
  %240 = or i32 %234, %4
  %241 = xor i32 %4, -1
  %242 = and i32 %11, %241
  %243 = xor i32 %227, -1
  %244 = xor i32 %242, %243
  %245 = and i32 %4, %3
  %246 = xor i32 %245, -1
  %247 = and i32 %11, %246
  %248 = shl i32 %247, 1
  %249 = xor i32 %226, -1
  %250 = or i32 %249, %241
  %251 = or i32 %11, %245
  %252 = xor i32 %3, -1
  %253 = and i32 %252, %5
  %254 = and i32 %253, %241
  %255 = or i32 %252, %5
  %256 = and i32 %255, %4
  %257 = xor i32 %256, -1
  %258 = xor i32 %254, %257
  %259 = xor i32 %222, -1
  %260 = and i32 %259, %246
  %261 = xor i32 %236, %249
  %262 = or i32 %216, %232
  %263 = and i32 %253, %4
  %264 = xor i32 %255, 2147483647
  %265 = or i32 %264, %4
  %266 = xor i32 %265, %263
  %267 = shl i32 %266, 1
  %268 = or i32 %217, %4
  %269 = xor i32 %268, %3
  %270 = and i32 %217, %246
  %271 = and i32 %252, %4
  %272 = xor i32 %271, -1
  %273 = and i32 %11, %272
  %274 = xor i32 %226, %4
  %275 = or i32 %228, %241
  %276 = and i32 %222, %231
  %277 = or i32 %252, %4
  %278 = and i32 %277, %259
  %279 = and i32 %222, %246
  %280 = or i32 %259, %232
  %281 = xor i32 %245, %5
  %282 = xor i32 %11, -1
  %283 = and i32 %277, %282
  %284 = and i32 %221, %259
  %285 = and i32 %228, %241
  %286 = xor i32 %285, %243
  %287 = or i32 %232, %5
  %288 = xor i32 %216, -1
  %289 = and i32 %221, %288
  %290 = or i32 %221, %5
  %291 = xor i32 %277, -1
  %292 = or i32 %216, %252
  %293 = xor i32 %216, %3
  %294 = and i32 %259, %3
  %295 = and i32 %249, %241
  %296 = shl i32 %295, 1
  %297 = xor i32 %219, %4
  %298 = xor i32 %236, %3
  %299 = xor i32 %255, %4
  %300 = or i32 %263, %299
  %301 = and i32 %226, %241
  %302 = and i32 %228, %4
  %303 = xor i32 %301, -1
  %304 = xor i32 %302, %303
  %305 = or i32 %236, %3
  %306 = and i32 %246, %5
  %307 = or i32 %222, %271
  %308 = or i32 %217, %3
  %309 = or i32 %308, %241
  %310 = and i32 %238, %5
  %311 = or i32 %222, %3
  %312 = xor i32 %308, %4
  %313 = or i32 %217, %291
  %314 = xor i32 %268, -1
  %315 = or i32 %314, %3
  %316 = shl i32 %315, 1
  %317 = or i32 %238, %5
  %318 = or i32 %216, %291
  %319 = and i32 %288, %238
  %320 = and i32 %288, %252
  %321 = and i32 %282, %241
  %322 = or i32 %245, %234
  %323 = or i32 %234, %241
  %324 = xor i32 %308, -1
  %325 = or i32 %324, %241
  %326 = and i32 %282, %4
  %327 = or i32 %271, %5
  %328 = shl i32 %268, 1
  %329 = or i32 %222, %238
  %330 = shl i32 %219, 1
  %331 = and i32 %231, %217
  %332 = and i32 %277, %217
  %333 = or i32 %222, %252
  %334 = and i32 %221, %5
  %335 = and i32 %277, %5
  %336 = xor i32 %216, %231
  %337 = or i32 %11, %4
  %338 = xor i32 %263, %337
  %339 = shl i32 %338, 1
  %340 = xor i32 %246, %5
  %341 = shl i32 %340, 1
  %342 = xor i32 %314, %3
  %343 = or i32 %227, %285
  %344 = xor i32 %231, %5
  %345 = xor i32 %263, -1
  %346 = xor i32 %299, %345
  %347 = and i32 %11, %277
  %348 = and i32 %231, %282
  %349 = or i32 %218, %241
  %350 = xor i32 %237, %3
  %351 = add i32 %236, 1
  %352 = and i32 %221, %217
  %353 = or i32 %11, %241
  %354 = xor i32 %353, -1
  %355 = or i32 %254, %354
  %356 = and i32 %259, %272
  %357 = or i32 %5, %4
  %358 = xor i32 %357, -1
  %359 = or i32 %245, %358
  %360 = and i32 %222, %238
  %361 = or i32 %227, %242
  %362 = shl i32 %361, 1
  %363 = and i32 %272, %5
  %364 = or i32 %236, %324
  %365 = or i32 %282, %241
  %366 = xor i32 %11, %4
  %367 = xor i32 %227, %366
  %368 = or i32 %314, %238
  %369 = or i32 %259, %238
  %370 = or i32 %282, %291
  %371 = and i32 %259, %252
  %372 = or i32 %226, %4
  %373 = shl i32 %372, 1
  %374 = and i32 %268, %3
  %375 = and i32 %308, %4
  %376 = or i32 %226, %241
  %377 = or i32 %271, %282
  %378 = or i32 %222, %232
  %379 = xor i32 %366, %345
  %380 = and i32 %222, %277
  %381 = xor i32 %232, %5
  %382 = or i32 %226, %271
  %383 = xor i32 %337, -1
  %384 = or i32 %263, %383
  %385 = and i32 %268, %221
  %386 = xor i32 %324, %4
  %387 = xor i32 %236, %308
  %388 = or i32 %245, %217
  %389 = xor i32 %271, %249
  %390 = or i32 %216, %218
  %391 = xor i32 %271, %219
  %392 = or i32 %218, %271
  %393 = shl i32 %392, 1
  %394 = and i32 %217, %272
  %395 = and i32 %282, %272
  %396 = or i32 %217, %238
  %397 = and i32 %288, %3
  %398 = or i32 %245, %324
  %399 = shl i32 %398, 1
  %400 = add i32 %231, 1
  %401 = or i32 %236, %226
  %402 = xor i32 %357, %245
  %403 = or i32 %219, %241
  %404 = shl i32 %228, 1
  %405 = or i32 %254, %256
  %406 = or i32 %245, %282
  %407 = xor i32 %12, %303
  %408 = or i32 %314, %252
  %409 = or i32 %11, %291
  %410 = or i32 %291, %5
  %411 = add i32 %245, 1
  %412 = or i32 %301, %12
  %413 = and i32 %222, %272
  %414 = and i32 %308, %241
  %415 = or i32 %358, %238
  %416 = xor i32 %288, %3
  %417 = and i32 %237, %3
  %418 = or i32 %358, %3
  %419 = or i32 %245, %314
  %420 = or i32 %222, %291
  %421 = and i32 %219, %241
  %422 = and i32 %357, %3
  %423 = or i32 %216, %238
  %424 = or i32 %218, %4
  %425 = and i32 %217, %238
  %426 = shl i32 %425, 1
  %427 = shl i32 %216, 1
  %428 = add i32 %357, 1
  %429 = shl i32 %236, 1
  %430 = add i32 %216, 1
  %431 = or i32 %259, %3
  %432 = or i32 %308, %4
  %433 = or i32 %219, %4
  %434 = xor i32 %358, %3
  %435 = xor i32 %308, %245
  %436 = or i32 %271, %259
  %437 = shl i32 %436, 1
  %438 = and i32 %222, %252
  %439 = shl i32 %366, 1
  %440 = or i32 %259, %291
  %441 = shl i32 %259, 2
  %442 = xor i32 %254, %353
  %443 = xor i32 %216, %277
  %444 = shl i32 %443, 1
  %445 = or i32 %216, %3
  %446 = xor i32 %249, %4
  %447 = xor i32 %291, %5
  %448 = and i32 %222, %221
  %449 = or i32 %282, %4
  %450 = or i32 %236, %252
  %451 = add i32 %308, 1
  %452 = or i32 %263, %366
  %453 = or i32 %221, %314
  %454 = and i32 %249, %4
  %455 = and i32 %268, %238
  %456 = or i32 %221, %358
  %457 = or i32 %11, %271
  %458 = or i32 %358, %252
  %459 = or i32 %221, %259
  %460 = xor i32 %229, %243
  %461 = xor i32 %216, %228
  %462 = or i32 %324, %4
  %463 = shl i32 %462, 1
  %464 = xor i32 %277, %5
  %465 = xor i32 %271, %5
  %466 = or i32 %282, %232
  %467 = or i32 %259, %252
  %468 = shl i32 %467, 1
  %469 = and i32 %234, %241
  %470 = shl i32 %469, 3
  %471 = and i32 %218, %241
  %472 = and i32 %234, %4
  %473 = and i32 %218, %4
  %474 = mul i32 %473, -12
  %475 = and i32 %324, %241
  %476 = mul i32 %475, 13
  %477 = and i32 %324, %4
  %478 = mul i32 %227, 10
  %479 = add i32 %180, -1
  %480 = add i32 %479, %23
  %481 = add i32 %480, %132
  %482 = add i32 %481, %88
  %483 = add i32 %482, %37
  %484 = add i32 %483, %15
  %485 = add i32 %484, %212
  %486 = add i32 %485, %187
  %487 = add i32 %486, %153
  %488 = add i32 %487, %150
  %489 = add i32 %488, %103
  %490 = add i32 %489, %65
  %491 = add i32 %490, %39
  %492 = sub i32 %160, %136
  %493 = add i32 %492, %5
  %494 = sub i32 %493, %290
  %495 = sub i32 %494, %435
  %496 = add i32 %495, %472
  %497 = sub i32 %496, %414
  %498 = add i32 %497, %377
  %499 = add i32 %498, %347
  %500 = add i32 %499, %298
  %501 = mul i32 %500, 5
  %502 = sub i32 %138, %210
  %503 = add i32 %502, %67
  %504 = add i32 %503, %394
  %505 = sub i32 %504, %395
  %506 = add i32 %505, %360
  %507 = sub i32 %506, %384
  %508 = mul i32 %507, 3
  %509 = sub i32 %471, %301
  %510 = mul i32 %509, 17
  %511 = add i32 %477, %214
  %512 = mul i32 %511, 6
  %513 = add i32 %491, %68
  %514 = add i32 %513, %231
  %515 = add i32 %514, %272
  %516 = add i32 %515, %134
  %517 = add i32 %516, %313
  %518 = add i32 %517, %287
  %519 = add i32 %518, %466
  %520 = add i32 %519, %432
  %521 = add i32 %520, %402
  %522 = add i32 %521, %390
  %523 = add i32 %522, %370
  %524 = add i32 %523, %364
  %525 = add i32 %524, %240
  %526 = add i32 %525, %220
  %527 = add i32 %526, %343
  %528 = shl i32 %527, 1
  %529 = add i32 %82, 1073741823
  %530 = add i32 %529, %211
  %531 = add i32 %530, %207
  %532 = add i32 %531, %166
  %533 = shl i32 %532, 2
  %534 = sub i32 %0, %1
  %535 = add i32 %534, %7
  %536 = add i32 %535, %8
  %537 = sub i32 %536, %2
  %538 = add i32 %537, %31
  %539 = add i32 %538, %35
  %540 = add i32 %539, %157
  %541 = add i32 %540, %63
  %542 = sub i32 %541, %77
  %543 = add i32 %542, %93
  %544 = sub i32 %543, %46
  %545 = add i32 %544, %41
  %546 = sub i32 %545, %108
  %547 = add i32 %546, %112
  %548 = add i32 %547, %135
  %549 = sub i32 %548, %137
  %550 = add i32 %549, %99
  %551 = sub i32 %550, %144
  %552 = sub i32 %551, %145
  %553 = add i32 %552, %146
  %554 = sub i32 %553, %155
  %555 = sub i32 %554, %158
  %556 = add i32 %555, %164
  %557 = sub i32 %556, %38
  %558 = sub i32 %557, %175
  %559 = add i32 %558, %188
  %560 = sub i32 %559, %16
  %561 = add i32 %560, %19
  %562 = sub i32 %561, %34
  %563 = add i32 %562, %36
  %564 = sub i32 %563, %45
  %565 = add i32 %564, %47
  %566 = sub i32 %565, %48
  %567 = sub i32 %566, %49
  %568 = sub i32 %567, %55
  %569 = sub i32 %568, %57
  %570 = sub i32 %569, %58
  %571 = add i32 %570, %62
  %572 = add i32 %571, %66
  %573 = sub i32 %572, %73
  %574 = sub i32 %573, %74
  %575 = add i32 %574, %78
  %576 = add i32 %575, %79
  %577 = add i32 %576, %81
  %578 = sub i32 %577, %85
  %579 = sub i32 %578, %87
  %580 = sub i32 %579, %89
  %581 = add i32 %580, %92
  %582 = add i32 %581, %94
  %583 = sub i32 %582, %95
  %584 = sub i32 %583, %96
  %585 = sub i32 %584, %98
  %586 = sub i32 %585, %100
  %587 = sub i32 %586, %101
  %588 = add i32 %587, %102
  %589 = add i32 %588, %106
  %590 = sub i32 %589, %107
  %591 = add i32 %590, %109
  %592 = add i32 %591, %110
  %593 = sub i32 %592, %111
  %594 = add i32 %593, %113
  %595 = add i32 %594, %114
  %596 = add i32 %595, %115
  %597 = sub i32 %596, %116
  %598 = add i32 %597, %120
  %599 = sub i32 %598, %125
  %600 = sub i32 %599, %128
  %601 = add i32 %600, %129
  %602 = add i32 %601, %131
  %603 = sub i32 %602, %139
  %604 = sub i32 %603, %140
  %605 = add i32 %604, %141
  %606 = sub i32 %605, %147
  %607 = add i32 %606, %151
  %608 = add i32 %607, %152
  %609 = add i32 %608, %154
  %610 = add i32 %609, %159
  %611 = sub i32 %610, %148
  %612 = sub i32 %611, %161
  %613 = sub i32 %612, %162
  %614 = add i32 %613, %163
  %615 = sub i32 %614, %167
  %616 = sub i32 %615, %168
  %617 = add i32 %616, %169
  %618 = sub i32 %617, %170
  %619 = sub i32 %618, %176
  %620 = sub i32 %619, %24
  %621 = add i32 %620, %177
  %622 = add i32 %621, %178
  %623 = sub i32 %622, %179
  %624 = sub i32 %623, %181
  %625 = sub i32 %624, %182
  %626 = sub i32 %625, %183
  %627 = sub i32 %626, %184
  %628 = add i32 %627, %185
  %629 = sub i32 %628, %186
  %630 = add i32 %629, %189
  %631 = add i32 %630, %190
  %632 = sub i32 %631, %165
  %633 = sub i32 %632, %191
  %634 = add i32 %633, %192
  %635 = sub i32 %634, %193
  %636 = add i32 %635, %194
  %637 = add i32 %636, %197
  %638 = add i32 %637, %201
  %639 = add i32 %638, %25
  %640 = sub i32 %639, %44
  %641 = sub i32 %640, %53
  %642 = sub i32 %641, %60
  %643 = add i32 %642, %61
  %644 = sub i32 %643, %71
  %645 = sub i32 %644, %76
  %646 = sub i32 %645, %84
  %647 = sub i32 %646, %86
  %648 = sub i32 %647, %91
  %649 = sub i32 %648, %105
  %650 = add i32 %649, %119
  %651 = sub i32 %650, %124
  %652 = sub i32 %651, %143
  %653 = sub i32 %652, %149
  %654 = sub i32 %653, %172
  %655 = sub i32 %654, %174
  %656 = add i32 %655, %196
  %657 = sub i32 %656, %206
  %658 = add i32 %657, %209
  %659 = add i32 %658, %213
  %660 = add i32 %659, %215
  %661 = add i32 %660, %245
  %662 = add i32 %661, %291
  %663 = sub i32 %662, %271
  %664 = add i32 %663, %400
  %665 = add i32 %664, %411
  %666 = sub i32 %665, %30
  %667 = add i32 %666, %225
  %668 = sub i32 %667, %233
  %669 = add i32 %668, %270
  %670 = add i32 %669, %281
  %671 = sub i32 %670, %306
  %672 = add i32 %671, %310
  %673 = sub i32 %672, %317
  %674 = add i32 %673, %327
  %675 = sub i32 %674, %331
  %676 = add i32 %675, %332
  %677 = sub i32 %676, %334
  %678 = sub i32 %677, %335
  %679 = add i32 %678, %344
  %680 = add i32 %679, %222
  %681 = add i32 %680, %351
  %682 = add i32 %681, %352
  %683 = add i32 %682, %363
  %684 = add i32 %683, %11
  %685 = sub i32 %684, %381
  %686 = sub i32 %685, %388
  %687 = add i32 %686, %396
  %688 = add i32 %687, %410
  %689 = add i32 %688, %428
  %690 = add i32 %689, %430
  %691 = sub i32 %690, %447
  %692 = sub i32 %691, %357
  %693 = add i32 %692, %451
  %694 = add i32 %693, %464
  %695 = sub i32 %694, %465
  %696 = sub i32 %695, %200
  %697 = sub i32 %696, %204
  %698 = sub i32 %697, %223
  %699 = add i32 %698, %224
  %700 = add i32 %699, %235
  %701 = add i32 %700, %239
  %702 = sub i32 %701, %250
  %703 = sub i32 %702, %251
  %704 = add i32 %703, %260
  %705 = add i32 %704, %261
  %706 = sub i32 %705, %262
  %707 = add i32 %706, %269
  %708 = sub i32 %707, %273
  %709 = add i32 %708, %274
  %710 = sub i32 %709, %275
  %711 = sub i32 %710, %276
  %712 = sub i32 %711, %278
  %713 = sub i32 %712, %279
  %714 = sub i32 %713, %280
  %715 = add i32 %714, %242
  %716 = sub i32 %715, %283
  %717 = sub i32 %716, %284
  %718 = add i32 %717, %289
  %719 = sub i32 %718, %292
  %720 = add i32 %719, %293
  %721 = sub i32 %720, %294
  %722 = sub i32 %721, %297
  %723 = add i32 %722, %305
  %724 = add i32 %723, %307
  %725 = add i32 %724, %309
  %726 = sub i32 %725, %311
  %727 = add i32 %726, %312
  %728 = add i32 %727, %318
  %729 = sub i32 %728, %319
  %730 = sub i32 %729, %320
  %731 = add i32 %730, %321
  %732 = add i32 %731, %322
  %733 = add i32 %732, %323
  %734 = sub i32 %733, %325
  %735 = sub i32 %734, %326
  %736 = sub i32 %735, %328
  %737 = sub i32 %736, %329
  %738 = sub i32 %737, %330
  %739 = add i32 %738, %333
  %740 = add i32 %739, %336
  %741 = sub i32 %740, %341
  %742 = add i32 %741, %342
  %743 = add i32 %742, %348
  %744 = add i32 %743, %349
  %745 = add i32 %744, %350
  %746 = add i32 %745, %302
  %747 = add i32 %746, %356
  %748 = add i32 %747, %359
  %749 = add i32 %748, %365
  %750 = sub i32 %749, %368
  %751 = sub i32 %750, %369
  %752 = add i32 %751, %371
  %753 = sub i32 %752, %374
  %754 = add i32 %753, %375
  %755 = sub i32 %754, %376
  %756 = add i32 %755, %378
  %757 = sub i32 %756, %380
  %758 = add i32 %757, %382
  %759 = add i32 %758, %385
  %760 = sub i32 %759, %386
  %761 = add i32 %760, %387
  %762 = add i32 %761, %389
  %763 = add i32 %762, %391
  %764 = add i32 %763, %397
  %765 = sub i32 %764, %401
  %766 = sub i32 %765, %403
  %767 = sub i32 %766, %404
  %768 = sub i32 %767, %406
  %769 = add i32 %768, %408
  %770 = sub i32 %769, %409
  %771 = add i32 %770, %413
  %772 = add i32 %771, %415
  %773 = sub i32 %772, %416
  %774 = sub i32 %773, %417
  %775 = add i32 %774, %418
  %776 = sub i32 %775, %419
  %777 = add i32 %776, %420
  %778 = sub i32 %777, %421
  %779 = add i32 %778, %422
  %780 = add i32 %779, %423
  %781 = sub i32 %780, %424
  %782 = sub i32 %781, %426
  %783 = sub i32 %782, %427
  %784 = sub i32 %783, %429
  %785 = add i32 %784, %431
  %786 = sub i32 %785, %433
  %787 = add i32 %786, %434
  %788 = add i32 %787, %438
  %789 = sub i32 %788, %440
  %790 = sub i32 %789, %441
  %791 = add i32 %790, %445
  %792 = sub i32 %791, %446
  %793 = sub i32 %792, %448
  %794 = add i32 %793, %449
  %795 = sub i32 %794, %450
  %796 = sub i32 %795, %453
  %797 = add i32 %796, %454
  %798 = sub i32 %797, %455
  %799 = sub i32 %798, %456
  %800 = sub i32 %799, %457
  %801 = sub i32 %800, %458
  %802 = add i32 %801, %459
  %803 = sub i32 %802, %461
  %804 = sub i32 %803, %230
  %805 = sub i32 %804, %244
  %806 = sub i32 %805, %248
  %807 = add i32 %806, %258
  %808 = add i32 %807, %286
  %809 = sub i32 %808, %296
  %810 = add i32 %809, %300
  %811 = sub i32 %810, %304
  %812 = sub i32 %811, %316
  %813 = sub i32 %812, %346
  %814 = sub i32 %813, %355
  %815 = add i32 %814, %367
  %816 = sub i32 %815, %373
  %817 = sub i32 %816, %379
  %818 = sub i32 %817, %393
  %819 = sub i32 %818, %399
  %820 = sub i32 %819, %405
  %821 = add i32 %820, %407
  %822 = add i32 %821, %412
  %823 = sub i32 %822, %437
  %824 = sub i32 %823, %439
  %825 = sub i32 %824, %442
  %826 = sub i32 %825, %444
  %827 = sub i32 %826, %452
  %828 = sub i32 %827, %460
  %829 = sub i32 %828, %463
  %830 = sub i32 %829, %468
  %831 = add i32 %830, %470
  %832 = add i32 %831, %474
  %833 = add i32 %832, %476
  %834 = add i32 %833, %478
  %835 = sub i32 %834, %339
  %836 = sub i32 %835, %362
  %837 = add i32 %836, %510
  %838 = add i32 %837, %512
  %839 = sub i32 %838, %267
  %840 = add i32 %839, %533
  %841 = add i32 %840, %508
  %842 = add i32 %841, %501
  %843 = add i32 %842, %528
  %844 = icmp eq i32 %13, %843
  %845 = select i1 %844, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %846 = tail call i32 @puts(i8* nonnull dereferenceable(1) %845)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
