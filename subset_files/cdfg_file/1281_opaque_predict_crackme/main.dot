digraph "DFG for'main' function" {
	Node0xa8c398[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa8c418[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa8c4a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xa8c508[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xa8c988[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa8ca68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xa8cb68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa8cc28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xa8ccd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa8cf38[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xa8cff8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa8d158[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa8d1b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xa932c0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xa934c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa93628[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa93738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa937f8[shape=record, label="  ret i32 0"];
	Node0xa8c398 -> Node0xa8c418;
	Node0xa8c418 -> Node0xa8c4a8;
	Node0xa8c4a8 -> Node0xa8c508;
	Node0xa8c508 -> Node0xa8c988;
	Node0xa8c988 -> Node0xa8ca68;
	Node0xa8ca68 -> Node0xa8cb68;
	Node0xa8cb68 -> Node0xa8cc28;
	Node0xa8cc28 -> Node0xa8ccd8;
	Node0xa8ccd8 -> Node0xa8cf38;
	Node0xa8cf38 -> Node0xa8cff8;
	Node0xa8cff8 -> Node0xa8d158;
	Node0xa8d158 -> Node0xa8d1b8;
	Node0xa8d1b8 -> Node0xa932c0;
	Node0xa932c0 -> Node0xa934c8;
	Node0xa934c8 -> Node0xa93628;
	Node0xa93628 -> Node0xa93738;
	Node0xa93738 -> Node0xa937f8;
edge [color=red]
	Node0xa8c398 -> Node0xa8c508;
	Node0xa8c508 -> Node0xa8c988;
	Node0xa8c418 -> Node0xa8ca68;
	Node0xa8ca68 -> Node0xa8cb68;
	Node0xa8c4a8 -> Node0xa8cc28;
	Node0xa8cc28 -> Node0xa8ccd8;
	Node0xa8c398 -> Node0xa8cf38;
	Node0xa8c418 -> Node0xa8cf38;
	Node0xa8c4a8 -> Node0xa8cf38;
	Node0xa8c398 -> Node0xa8cff8;
	Node0xa8c418 -> Node0xa8d158;
	Node0xa8c4a8 -> Node0xa8d1b8;
	Node0xa8cff8 -> Node0xa932c0;
	Node0xa8d158 -> Node0xa932c0;
	Node0xa8d1b8 -> Node0xa932c0;
	Node0xa8cc28 -> Node0xa934c8;
	Node0xa8ca68 -> Node0xa93628;
	Node0xa8c508 -> Node0xa93738;
}
