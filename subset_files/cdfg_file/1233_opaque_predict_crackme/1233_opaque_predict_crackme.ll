; ModuleID = '../.././c_source_file/1233_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1233_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %2, %1
  %10 = xor i32 %9, -1
  %11 = or i32 %8, %10
  %12 = xor i32 %4, -1
  %13 = xor i32 %5, %3
  %14 = xor i32 %13, -1
  %15 = or i32 %14, %12
  %16 = sub i32 %15, %11
  %17 = and i32 %1, %0
  %18 = xor i32 %2, -1
  %19 = or i32 %18, %1
  %20 = xor i32 %19, -1
  %21 = or i32 %17, %20
  %22 = or i32 %20, %0
  %23 = and i32 %18, %1
  %24 = xor i32 %23, -1
  %25 = and i32 %24, %0
  %26 = xor i32 %1, %0
  %27 = or i32 %26, %18
  %28 = xor i32 %2, %0
  %29 = and i32 %28, %1
  %30 = or i32 %2, %0
  %31 = shl i32 %30, 1
  %32 = and i32 %2, %0
  %33 = or i32 %7, %0
  %34 = xor i32 %33, -1
  %35 = or i32 %32, %34
  %36 = and i32 %9, %33
  %37 = or i32 %1, %0
  %38 = and i32 %37, %18
  %39 = shl i32 %17, 1
  %40 = or i32 %18, %0
  %41 = xor i32 %26, -1
  %42 = and i32 %40, %41
  %43 = xor i32 %0, -1
  %44 = and i32 %19, %43
  %45 = or i32 %18, %34
  %46 = and i32 %2, %1
  %47 = and i32 %46, %0
  %48 = and i32 %9, %43
  %49 = xor i32 %48, -1
  %50 = xor i32 %47, %49
  %51 = and i32 %7, %2
  %52 = and i32 %51, %43
  %53 = or i32 %9, %43
  %54 = xor i32 %53, -1
  %55 = or i32 %52, %54
  %56 = and i32 %18, %0
  %57 = or i32 %8, %18
  %58 = or i32 %2, %1
  %59 = and i32 %58, %0
  %60 = xor i32 %37, -1
  %61 = or i32 %10, %60
  %62 = shl i32 %61, 1
  %63 = xor i32 %8, -1
  %64 = and i32 %10, %63
  %65 = xor i32 %32, -1
  %66 = and i32 %65, %41
  %67 = xor i32 %28, -1
  %68 = or i32 %67, %7
  %69 = or i32 %23, %8
  %70 = xor i32 %46, -1
  %71 = xor i32 %70, %0
  %72 = and i32 %37, %2
  %73 = shl i32 %72, 1
  %74 = and i32 %26, %67
  %75 = or i32 %46, %0
  %76 = or i32 %32, %41
  %77 = and i32 %58, %43
  %78 = or i32 %47, %77
  %79 = xor i32 %37, %2
  %80 = and i32 %30, %1
  %81 = xor i32 %40, -1
  %82 = or i32 %81, %7
  %83 = xor i32 %40, %17
  %84 = xor i32 %19, %17
  %85 = xor i32 %17, -1
  %86 = shl i32 %85, 1
  %87 = and i32 %33, %67
  %88 = shl i32 %87, 1
  %89 = and i32 %46, %43
  %90 = and i32 %9, %0
  %91 = xor i32 %89, -1
  %92 = xor i32 %90, %91
  %93 = and i32 %41, %2
  %94 = xor i32 %30, -1
  %95 = or i32 %9, %60
  %96 = and i32 %28, %41
  %97 = or i32 %32, %60
  %98 = or i32 %32, %23
  %99 = or i32 %17, %81
  %100 = xor i32 %58, -1
  %101 = add i32 %58, 1
  %102 = xor i32 %30, %1
  %103 = or i32 %81, %1
  %104 = xor i32 %56, -1
  %105 = and i32 %104, %41
  %106 = or i32 %60, %2
  %107 = shl i32 %10, 2
  %108 = and i32 %51, %0
  %109 = or i32 %7, %2
  %110 = xor i32 %109, %0
  %111 = or i32 %108, %110
  %112 = or i32 %26, %2
  %113 = xor i32 %9, %0
  %114 = or i32 %108, %113
  %115 = or i32 %34, %2
  %116 = or i32 %18, %41
  %117 = or i32 %9, %0
  %118 = xor i32 %108, %117
  %119 = shl i32 %118, 1
  %120 = xor i32 %56, %70
  %121 = add i32 %28, 1
  %122 = or i32 %28, %1
  %123 = xor i32 %65, %1
  %124 = xor i32 %23, %0
  %125 = or i32 %17, %94
  %126 = xor i32 %113, -1
  %127 = or i32 %47, %126
  %128 = and i32 %33, %10
  %129 = xor i32 %63, %2
  %130 = shl i32 %129, 1
  %131 = and i32 %67, %41
  %132 = xor i32 %34, %2
  %133 = or i32 %19, %0
  %134 = add i32 %26, 1
  %135 = shl i32 %24, 1
  %136 = or i32 %67, %41
  %137 = or i32 %28, %60
  %138 = or i32 %41, %2
  %139 = or i32 %32, %26
  %140 = xor i32 %100, %0
  %141 = or i32 %28, %34
  %142 = or i32 %32, %7
  %143 = xor i32 %10, %0
  %144 = or i32 %10, %34
  %145 = and i32 %37, %67
  %146 = or i32 %17, %67
  %147 = and i32 %24, %43
  %148 = shl i32 %33, 1
  %149 = or i32 %100, %43
  %150 = xor i32 %32, %33
  %151 = or i32 %20, %43
  %152 = and i32 %10, %43
  %153 = or i32 %89, %59
  %154 = or i32 %56, %1
  %155 = xor i32 %104, %1
  %156 = or i32 %17, %100
  %157 = or i32 %10, %43
  %158 = and i32 %70, %43
  %159 = or i32 %94, %1
  %160 = and i32 %40, %26
  %161 = or i32 %47, %48
  %162 = or i32 %28, %26
  %163 = and i32 %19, %0
  %164 = or i32 %8, %2
  %165 = and i32 %65, %7
  %166 = or i32 %56, %26
  %167 = and i32 %85, %2
  %168 = shl i32 %167, 1
  %169 = and i32 %67, %63
  %170 = or i32 %56, %20
  %171 = and i32 %26, %104
  %172 = xor i32 %32, %58
  %173 = or i32 %28, %41
  %174 = or i32 %28, %7
  %175 = xor i32 %40, %1
  %176 = or i32 %94, %41
  %177 = shl i32 %176, 1
  %178 = xor i32 %94, %1
  %179 = and i32 %30, %7
  %180 = or i32 %26, %67
  %181 = xor i32 %20, %0
  %182 = and i32 %18, %85
  %183 = or i32 %8, %67
  %184 = add i32 %37, 1
  %185 = xor i32 %30, %17
  %186 = and i32 %40, %1
  %187 = shl i32 %186, 1
  %188 = xor i32 %8, %24
  %189 = or i32 %94, %7
  %190 = and i32 %9, %63
  %191 = and i32 %33, %2
  %192 = or i32 %89, %90
  %193 = or i32 %67, %34
  %194 = or i32 %100, %0
  %195 = xor i32 %56, %1
  %196 = or i32 %23, %43
  %197 = xor i32 %109, -1
  %198 = or i32 %197, %0
  %199 = xor i32 %108, %198
  %200 = or i32 %58, %0
  %201 = and i32 %28, %26
  %202 = or i32 %56, %41
  %203 = or i32 %67, %60
  %204 = add i32 %46, 1
  %205 = or i32 %56, %7
  %206 = xor i32 %117, -1
  %207 = or i32 %108, %206
  %208 = or i32 %28, %8
  %209 = or i32 %17, %10
  %210 = xor i32 %19, %0
  %211 = and i32 %28, %63
  %212 = or i32 %32, %1
  %213 = or i32 %46, %43
  %214 = and i32 %67, %1
  %215 = add i32 %56, 1
  %216 = xor i32 %58, %0
  %217 = xor i32 %216, 2147483647
  %218 = xor i32 %217, %47
  %219 = xor i32 %8, %70
  %220 = or i32 %9, %17
  %221 = xor i32 %17, %2
  %222 = xor i32 %59, %91
  %223 = xor i32 %52, %53
  %224 = and i32 %70, %0
  %225 = and i32 %26, %2
  %226 = or i32 %47, %216
  %227 = and i32 %109, %0
  %228 = xor i32 %227, 2147483647
  %229 = xor i32 %228, %52
  %230 = and i32 %63, %2
  %231 = and i32 %9, %37
  %232 = and i32 %9, %85
  %233 = or i32 %17, %2
  %234 = or i32 %52, %227
  %235 = and i32 %37, %10
  %236 = or i32 %28, %17
  %237 = or i32 %56, %46
  %238 = shl i32 %23, 1
  %239 = or i32 %24, %43
  %240 = shl i32 %239, 1
  %241 = and i32 %65, %1
  %242 = shl i32 %241, 1
  %243 = xor i32 %8, %2
  %244 = and i32 %26, %65
  %245 = xor i32 %108, %126
  %246 = and i32 %18, %41
  %247 = or i32 %19, %43
  %248 = xor i32 %110, 1073741823
  %249 = xor i32 %248, %108
  %250 = or i32 %10, %0
  %251 = xor i32 %32, %24
  %252 = or i32 %81, %41
  %253 = shl i32 %252, 1
  %254 = or i32 %26, %81
  %255 = xor i32 %46, %0
  %256 = and i32 %28, %85
  %257 = or i32 %18, %60
  %258 = xor i32 %33, %2
  %259 = shl i32 %65, 1
  %260 = and i32 %26, %18
  %261 = or i32 %58, %43
  %262 = and i32 %28, %33
  %263 = and i32 %33, %18
  %264 = or i32 %67, %1
  %265 = or i32 %23, %0
  %266 = and i32 %100, %43
  %267 = mul i32 %266, 28
  %268 = and i32 %23, %43
  %269 = and i32 %100, %0
  %270 = mul i32 %269, 13
  %271 = and i32 %20, %43
  %272 = mul i32 %271, 9
  %273 = and i32 %20, %0
  %274 = xor i32 %5, -1
  %275 = or i32 %274, %4
  %276 = xor i32 %275, -1
  %277 = xor i32 %276, %3
  %278 = xor i32 %3, -1
  %279 = and i32 %278, %4
  %280 = xor i32 %279, -1
  %281 = xor i32 %280, %5
  %282 = and i32 %5, %4
  %283 = xor i32 %4, %3
  %284 = or i32 %282, %283
  %285 = or i32 %4, %3
  %286 = and i32 %285, %5
  %287 = xor i32 %283, -1
  %288 = or i32 %276, %287
  %289 = or i32 %13, %279
  %290 = and i32 %274, %3
  %291 = xor i32 %290, -1
  %292 = xor i32 %282, %291
  %293 = and i32 %4, %3
  %294 = or i32 %274, %3
  %295 = xor i32 %294, %293
  %296 = xor i32 %5, %4
  %297 = or i32 %296, %293
  %298 = or i32 %5, %3
  %299 = and i32 %298, %4
  %300 = shl i32 %14, 1
  %301 = or i32 %290, %4
  %302 = or i32 %274, %287
  %303 = and i32 %294, %12
  %304 = and i32 %274, %4
  %305 = or i32 %304, %3
  %306 = xor i32 %298, -1
  %307 = xor i32 %306, %4
  %308 = xor i32 %285, -1
  %309 = add i32 %285, 1
  %310 = and i32 %5, %3
  %311 = and i32 %310, %4
  %312 = and i32 %13, %12
  %313 = xor i32 %311, -1
  %314 = xor i32 %312, %313
  %315 = or i32 %293, %274
  %316 = xor i32 %293, -1
  %317 = and i32 %274, %316
  %318 = or i32 %293, %276
  %319 = and i32 %278, %5
  %320 = and i32 %319, %12
  %321 = or i32 %13, %12
  %322 = xor i32 %320, %321
  %323 = xor i32 %304, -1
  %324 = and i32 %323, %278
  %325 = or i32 %278, %4
  %326 = xor i32 %325, -1
  %327 = or i32 %296, %326
  %328 = or i32 %274, %308
  %329 = add i32 %4, 1
  %330 = xor i32 %296, -1
  %331 = or i32 %330, %3
  %332 = or i32 %291, %4
  %333 = or i32 %5, %4
  %334 = xor i32 %333, -1
  %335 = or i32 %334, %278
  %336 = xor i32 %282, -1
  %337 = or i32 %296, %283
  %338 = or i32 %304, %278
  %339 = or i32 %310, %12
  %340 = and i32 %319, %4
  %341 = xor i32 %13, %4
  %342 = or i32 %340, %341
  %343 = or i32 %330, %308
  %344 = xor i32 %334, %3
  %345 = and i32 %330, %287
  %346 = or i32 %334, %3
  %347 = or i32 %304, %283
  %348 = and i32 %294, %4
  %349 = xor i32 %304, %3
  %350 = or i32 %279, %330
  %351 = and i32 %14, %12
  %352 = or i32 %276, %278
  %353 = or i32 %311, %312
  %354 = and i32 %283, %5
  %355 = or i32 %282, %308
  %356 = or i32 %296, %279
  %357 = or i32 %330, %287
  %358 = xor i32 %316, %5
  %359 = xor i32 %310, -1
  %360 = and i32 %359, %12
  %361 = and i32 %333, %283
  %362 = xor i32 %308, %5
  %363 = and i32 %296, %316
  %364 = or i32 %296, %287
  %365 = xor i32 %275, %3
  %366 = and i32 %296, %3
  %367 = or i32 %298, %12
  %368 = xor i32 %304, %359
  %369 = and i32 %274, %287
  %370 = or i32 %14, %308
  %371 = xor i32 %326, %5
  %372 = xor i32 %282, %325
  %373 = and i32 %330, %280
  %374 = xor i32 %275, %293
  %375 = shl i32 %285, 1
  %376 = xor i32 %311, %341
  %377 = or i32 %326, %5
  %378 = and i32 %325, %274
  %379 = or i32 %278, %5
  %380 = and i32 %379, %12
  %381 = or i32 %340, %380
  %382 = shl i32 %381, 1
  %383 = and i32 %336, %3
  %384 = shl i32 %383, 1
  %385 = xor i32 %285, %5
  %386 = shl i32 %325, 2
  %387 = and i32 %296, %283
  %388 = and i32 %336, %278
  %389 = and i32 %323, %3
  %390 = shl i32 %389, 1
  %391 = and i32 %275, %278
  %392 = shl i32 %391, 1
  %393 = or i32 %293, %14
  %394 = and i32 %298, %12
  %395 = and i32 %287, %5
  %396 = shl i32 %395, 1
  %397 = or i32 %304, %287
  %398 = and i32 %296, %280
  %399 = and i32 %285, %14
  %400 = and i32 %275, %283
  %401 = or i32 %282, %306
  %402 = and i32 %296, %325
  %403 = and i32 %296, %287
  %404 = or i32 %283, %5
  %405 = or i32 %306, %4
  %406 = or i32 %291, %12
  %407 = xor i32 %380, -1
  %408 = xor i32 %340, %407
  %409 = or i32 %294, %12
  %410 = or i32 %282, %287
  %411 = xor i32 %279, %5
  %412 = or i32 %290, %12
  %413 = and i32 %323, %287
  %414 = or i32 %310, %279
  %415 = shl i32 %298, 1
  %416 = and i32 %333, %278
  %417 = or i32 %282, %290
  %418 = add i32 %290, 1
  %419 = or i32 %296, %278
  %420 = or i32 %308, %5
  %421 = or i32 %279, %14
  %422 = and i32 %330, %278
  %423 = or i32 %13, %4
  %424 = xor i32 %340, %423
  %425 = and i32 %296, %278
  %426 = xor i32 %298, %12
  %427 = xor i32 %426, %311
  %428 = and i32 %306, %12
  %429 = and i32 %290, %12
  %430 = and i32 %306, %4
  %431 = mul i32 %430, -7
  %432 = and i32 %290, %4
  %433 = shl i32 %432, 2
  %434 = xor i32 %294, -1
  %435 = and i32 %434, %12
  %436 = and i32 %310, %12
  %437 = and i32 %434, %4
  %438 = mul i32 %311, -6
  %439 = add i32 %231, %101
  %440 = add i32 %439, %174
  %441 = add i32 %440, %131
  %442 = add i32 %441, %114
  %443 = add i32 %442, %286
  %444 = sub i32 %443, %435
  %445 = add i32 %444, %436
  %446 = mul i32 %445, 3
  %447 = sub i32 %1, %8
  %448 = sub i32 %447, %258
  %449 = sub i32 %448, %221
  %450 = add i32 %449, %261
  %451 = add i32 %450, %234
  %452 = sub i32 %451, %295
  %453 = sub i32 %452, %428
  %454 = mul i32 %453, 5
  %455 = add i32 %223, %260
  %456 = add i32 %455, %294
  %457 = add i32 %456, %404
  %458 = add i32 %457, %249
  %459 = add i32 %458, %429
  %460 = shl i32 %459, 2
  %461 = sub i32 %89, %437
  %462 = mul i32 %461, 10
  %463 = sub i32 %273, %268
  %464 = mul i32 %463, 14
  %465 = add i32 %79, -1
  %466 = add i32 %465, %45
  %467 = add i32 %466, %250
  %468 = add i32 %467, %247
  %469 = add i32 %468, %202
  %470 = add i32 %469, %188
  %471 = add i32 %470, %172
  %472 = add i32 %471, %158
  %473 = add i32 %472, %156
  %474 = add i32 %473, %147
  %475 = add i32 %474, %71
  %476 = add i32 %475, %48
  %477 = add i32 %476, %36
  %478 = add i32 %477, %35
  %479 = sub i32 %478, %21
  %480 = add i32 %479, %192
  %481 = add i32 %480, %153
  %482 = add i32 %481, %411
  %483 = add i32 %482, %358
  %484 = add i32 %483, %315
  %485 = add i32 %484, %229
  %486 = add i32 %485, %218
  %487 = add i32 %486, %422
  %488 = add i32 %487, %416
  %489 = add i32 %488, %412
  %490 = add i32 %489, %405
  %491 = add i32 %490, %399
  %492 = add i32 %491, %318
  %493 = add i32 %492, %289
  %494 = add i32 %493, %342
  %495 = shl i32 %494, 1
  %496 = add i32 %2, 3
  %497 = sub i32 %496, %8
  %498 = add i32 %497, %134
  %499 = add i32 %498, %184
  %500 = add i32 %499, %37
  %501 = sub i32 %500, %26
  %502 = add i32 %501, %34
  %503 = sub i32 %502, %27
  %504 = add i32 %503, %9
  %505 = add i32 %504, %38
  %506 = sub i32 %505, %39
  %507 = add i32 %506, %56
  %508 = sub i32 %507, %57
  %509 = sub i32 %508, %86
  %510 = sub i32 %509, %93
  %511 = add i32 %510, %94
  %512 = add i32 %511, %106
  %513 = sub i32 %512, %112
  %514 = add i32 %513, %115
  %515 = sub i32 %514, %116
  %516 = add i32 %515, %121
  %517 = add i32 %516, %32
  %518 = sub i32 %517, %46
  %519 = add i32 %518, %132
  %520 = sub i32 %519, %138
  %521 = sub i32 %520, %148
  %522 = add i32 %521, %164
  %523 = add i32 %522, %58
  %524 = sub i32 %523, %40
  %525 = add i32 %524, %182
  %526 = sub i32 %525, %191
  %527 = add i32 %526, %204
  %528 = add i32 %527, %28
  %529 = add i32 %528, %215
  %530 = add i32 %529, %225
  %531 = sub i32 %530, %230
  %532 = sub i32 %531, %233
  %533 = add i32 %532, %243
  %534 = add i32 %533, %246
  %535 = sub i32 %534, %257
  %536 = add i32 %535, %263
  %537 = add i32 %536, %278
  %538 = sub i32 %537, %3
  %539 = sub i32 %538, %22
  %540 = add i32 %539, %25
  %541 = sub i32 %540, %29
  %542 = sub i32 %541, %31
  %543 = sub i32 %542, %42
  %544 = sub i32 %543, %44
  %545 = add i32 %544, %59
  %546 = add i32 %545, %64
  %547 = sub i32 %546, %66
  %548 = sub i32 %547, %68
  %549 = sub i32 %548, %69
  %550 = sub i32 %549, %73
  %551 = add i32 %550, %74
  %552 = sub i32 %551, %75
  %553 = sub i32 %552, %76
  %554 = add i32 %553, %80
  %555 = sub i32 %554, %82
  %556 = add i32 %555, %83
  %557 = sub i32 %556, %84
  %558 = sub i32 %557, %95
  %559 = add i32 %558, %96
  %560 = sub i32 %559, %97
  %561 = sub i32 %560, %98
  %562 = add i32 %561, %99
  %563 = add i32 %562, %102
  %564 = add i32 %563, %103
  %565 = add i32 %564, %105
  %566 = add i32 %565, %77
  %567 = sub i32 %566, %107
  %568 = sub i32 %567, %120
  %569 = add i32 %568, %122
  %570 = sub i32 %569, %123
  %571 = sub i32 %570, %124
  %572 = add i32 %571, %125
  %573 = add i32 %572, %117
  %574 = sub i32 %573, %128
  %575 = sub i32 %574, %130
  %576 = add i32 %575, %133
  %577 = sub i32 %576, %135
  %578 = sub i32 %577, %136
  %579 = sub i32 %578, %137
  %580 = sub i32 %579, %139
  %581 = sub i32 %580, %140
  %582 = add i32 %581, %141
  %583 = sub i32 %582, %142
  %584 = sub i32 %583, %143
  %585 = sub i32 %584, %144
  %586 = sub i32 %585, %145
  %587 = sub i32 %586, %146
  %588 = sub i32 %587, %149
  %589 = sub i32 %588, %150
  %590 = sub i32 %589, %151
  %591 = sub i32 %590, %152
  %592 = sub i32 %591, %154
  %593 = add i32 %592, %155
  %594 = add i32 %593, %157
  %595 = add i32 %594, %159
  %596 = add i32 %595, %160
  %597 = sub i32 %596, %162
  %598 = add i32 %597, %163
  %599 = sub i32 %598, %165
  %600 = add i32 %599, %166
  %601 = sub i32 %600, %168
  %602 = add i32 %601, %169
  %603 = add i32 %602, %170
  %604 = sub i32 %603, %171
  %605 = sub i32 %604, %173
  %606 = sub i32 %605, %175
  %607 = sub i32 %606, %178
  %608 = add i32 %607, %179
  %609 = add i32 %608, %180
  %610 = add i32 %609, %181
  %611 = add i32 %610, %183
  %612 = add i32 %611, %185
  %613 = sub i32 %612, %189
  %614 = add i32 %613, %190
  %615 = add i32 %614, %193
  %616 = add i32 %615, %194
  %617 = sub i32 %616, %195
  %618 = sub i32 %617, %196
  %619 = sub i32 %618, %200
  %620 = add i32 %619, %201
  %621 = sub i32 %620, %203
  %622 = sub i32 %621, %205
  %623 = add i32 %622, %208
  %624 = add i32 %623, %209
  %625 = sub i32 %624, %210
  %626 = sub i32 %625, %211
  %627 = sub i32 %626, %212
  %628 = sub i32 %627, %213
  %629 = sub i32 %628, %214
  %630 = add i32 %629, %219
  %631 = add i32 %630, %220
  %632 = sub i32 %631, %224
  %633 = add i32 %632, %216
  %634 = sub i32 %633, %232
  %635 = sub i32 %634, %235
  %636 = add i32 %635, %236
  %637 = add i32 %636, %237
  %638 = sub i32 %637, %238
  %639 = sub i32 %638, %53
  %640 = add i32 %639, %244
  %641 = sub i32 %640, %251
  %642 = sub i32 %641, %254
  %643 = sub i32 %642, %255
  %644 = sub i32 %643, %256
  %645 = sub i32 %644, %259
  %646 = sub i32 %645, %262
  %647 = sub i32 %646, %264
  %648 = add i32 %647, %265
  %649 = sub i32 %648, %47
  %650 = add i32 %649, %329
  %651 = add i32 %650, %4
  %652 = sub i32 %651, %50
  %653 = add i32 %652, %55
  %654 = sub i32 %653, %62
  %655 = add i32 %654, %78
  %656 = sub i32 %655, %88
  %657 = sub i32 %656, %92
  %658 = add i32 %657, %111
  %659 = sub i32 %658, %127
  %660 = sub i32 %659, %161
  %661 = sub i32 %660, %177
  %662 = sub i32 %661, %187
  %663 = sub i32 %662, %199
  %664 = sub i32 %663, %207
  %665 = sub i32 %664, %222
  %666 = sub i32 %665, %226
  %667 = sub i32 %666, %240
  %668 = sub i32 %667, %242
  %669 = sub i32 %668, %245
  %670 = sub i32 %669, %253
  %671 = add i32 %670, %267
  %672 = add i32 %671, %270
  %673 = add i32 %672, %272
  %674 = add i32 %673, %309
  %675 = sub i32 %674, %293
  %676 = add i32 %675, 1
  %677 = add i32 %676, %283
  %678 = sub i32 %677, %119
  %679 = add i32 %678, %281
  %680 = add i32 %679, %302
  %681 = sub i32 %680, %317
  %682 = sub i32 %681, %13
  %683 = add i32 %682, %328
  %684 = add i32 %683, %336
  %685 = add i32 %684, %334
  %686 = sub i32 %685, %354
  %687 = add i32 %686, %290
  %688 = add i32 %687, %306
  %689 = sub i32 %688, %362
  %690 = add i32 %689, %369
  %691 = add i32 %690, %371
  %692 = sub i32 %691, %304
  %693 = sub i32 %692, %275
  %694 = sub i32 %693, %375
  %695 = add i32 %694, %310
  %696 = sub i32 %695, %377
  %697 = sub i32 %696, %378
  %698 = sub i32 %697, %385
  %699 = sub i32 %698, %386
  %700 = add i32 %699, %418
  %701 = sub i32 %700, %420
  %702 = add i32 %701, %464
  %703 = sub i32 %702, %277
  %704 = add i32 %703, %284
  %705 = add i32 %704, %288
  %706 = add i32 %705, %292
  %707 = sub i32 %706, %297
  %708 = add i32 %707, %299
  %709 = sub i32 %708, %300
  %710 = sub i32 %709, %301
  %711 = add i32 %710, %303
  %712 = add i32 %711, %305
  %713 = add i32 %712, %307
  %714 = add i32 %713, %324
  %715 = sub i32 %714, %327
  %716 = sub i32 %715, %331
  %717 = add i32 %716, %332
  %718 = sub i32 %717, %335
  %719 = add i32 %718, %337
  %720 = add i32 %719, %338
  %721 = sub i32 %720, %339
  %722 = sub i32 %721, %343
  %723 = sub i32 %722, %344
  %724 = add i32 %723, %345
  %725 = sub i32 %724, %346
  %726 = sub i32 %725, %347
  %727 = sub i32 %726, %348
  %728 = sub i32 %727, %349
  %729 = sub i32 %728, %350
  %730 = sub i32 %729, %351
  %731 = add i32 %730, %352
  %732 = sub i32 %731, %355
  %733 = add i32 %732, %356
  %734 = add i32 %733, %357
  %735 = sub i32 %734, %360
  %736 = add i32 %735, %361
  %737 = sub i32 %736, %363
  %738 = sub i32 %737, %364
  %739 = add i32 %738, %365
  %740 = add i32 %739, %366
  %741 = add i32 %740, %367
  %742 = add i32 %741, %368
  %743 = add i32 %742, %370
  %744 = sub i32 %743, %372
  %745 = add i32 %744, %373
  %746 = sub i32 %745, %374
  %747 = add i32 %746, %387
  %748 = add i32 %747, %388
  %749 = sub i32 %748, %393
  %750 = sub i32 %749, %394
  %751 = sub i32 %750, %396
  %752 = add i32 %751, %397
  %753 = sub i32 %752, %398
  %754 = sub i32 %753, %400
  %755 = add i32 %754, %401
  %756 = add i32 %755, %402
  %757 = sub i32 %756, %403
  %758 = sub i32 %757, %406
  %759 = sub i32 %758, %409
  %760 = add i32 %759, %410
  %761 = add i32 %760, %413
  %762 = sub i32 %761, %414
  %763 = sub i32 %762, %415
  %764 = sub i32 %763, %417
  %765 = sub i32 %764, %419
  %766 = add i32 %765, %421
  %767 = sub i32 %766, %425
  %768 = add i32 %767, %314
  %769 = add i32 %768, %322
  %770 = add i32 %769, %353
  %771 = sub i32 %770, %376
  %772 = sub i32 %771, %384
  %773 = sub i32 %772, %390
  %774 = sub i32 %773, %392
  %775 = sub i32 %774, %408
  %776 = add i32 %775, %424
  %777 = add i32 %776, %427
  %778 = add i32 %777, %431
  %779 = sub i32 %778, %433
  %780 = add i32 %779, %438
  %781 = sub i32 %780, %382
  %782 = add i32 %781, %462
  %783 = add i32 %782, %460
  %784 = add i32 %783, %446
  %785 = add i32 %784, %454
  %786 = add i32 %785, %495
  %787 = icmp eq i32 %16, %786
  %788 = select i1 %787, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %789 = tail call i32 @puts(i8* nonnull dereferenceable(1) %788)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
