digraph "DFG for'main' function" {
	Node0xf9cd38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf9cdb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf9ce48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf9cea8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xf9d328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf9d408[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xf9d508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf9d5c8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xf9d678[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf9d8d8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xf9d998[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf9daf8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf9db58[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xfa20a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xfa22a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfa2408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfa2518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfa25d8[shape=record, label="  ret i32 0"];
	Node0xf9cd38 -> Node0xf9cdb8;
	Node0xf9cdb8 -> Node0xf9ce48;
	Node0xf9ce48 -> Node0xf9cea8;
	Node0xf9cea8 -> Node0xf9d328;
	Node0xf9d328 -> Node0xf9d408;
	Node0xf9d408 -> Node0xf9d508;
	Node0xf9d508 -> Node0xf9d5c8;
	Node0xf9d5c8 -> Node0xf9d678;
	Node0xf9d678 -> Node0xf9d8d8;
	Node0xf9d8d8 -> Node0xf9d998;
	Node0xf9d998 -> Node0xf9daf8;
	Node0xf9daf8 -> Node0xf9db58;
	Node0xf9db58 -> Node0xfa20a0;
	Node0xfa20a0 -> Node0xfa22a8;
	Node0xfa22a8 -> Node0xfa2408;
	Node0xfa2408 -> Node0xfa2518;
	Node0xfa2518 -> Node0xfa25d8;
edge [color=red]
	Node0xf9cd38 -> Node0xf9cea8;
	Node0xf9cea8 -> Node0xf9d328;
	Node0xf9cdb8 -> Node0xf9d408;
	Node0xf9d408 -> Node0xf9d508;
	Node0xf9ce48 -> Node0xf9d5c8;
	Node0xf9d5c8 -> Node0xf9d678;
	Node0xf9cd38 -> Node0xf9d8d8;
	Node0xf9cdb8 -> Node0xf9d8d8;
	Node0xf9ce48 -> Node0xf9d8d8;
	Node0xf9cd38 -> Node0xf9d998;
	Node0xf9cdb8 -> Node0xf9daf8;
	Node0xf9ce48 -> Node0xf9db58;
	Node0xf9d998 -> Node0xfa20a0;
	Node0xf9daf8 -> Node0xfa20a0;
	Node0xf9db58 -> Node0xfa20a0;
	Node0xf9d5c8 -> Node0xfa22a8;
	Node0xf9d408 -> Node0xfa2408;
	Node0xf9cea8 -> Node0xfa2518;
}
