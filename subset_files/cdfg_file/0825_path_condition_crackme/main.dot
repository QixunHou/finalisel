digraph "DFG for'main' function" {
	Node0x132de88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x132df08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x132df98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x132dff8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x132e0a8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x132e4d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x132e5b8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x132e6b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x132e778[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x132e828[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x132e8e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x132e998[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x13287e0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x132eb98[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x132fb08[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1330178[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x13301d8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x13302e8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1330548[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x13306a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x13307b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13308c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1330988[shape=record, label="  ret i32 0"];
	Node0x132de88 -> Node0x132df08;
	Node0x132df08 -> Node0x132df98;
	Node0x132df98 -> Node0x132dff8;
	Node0x132dff8 -> Node0x132e0a8;
	Node0x132e0a8 -> Node0x132e4d8;
	Node0x132e4d8 -> Node0x132e5b8;
	Node0x132e5b8 -> Node0x132e6b8;
	Node0x132e6b8 -> Node0x132e778;
	Node0x132e778 -> Node0x132e828;
	Node0x132e828 -> Node0x132e8e8;
	Node0x132e8e8 -> Node0x132e998;
	Node0x132e998 -> Node0x13287e0;
	Node0x13287e0 -> Node0x132eb98;
	Node0x132eb98 -> Node0x132fb08;
	Node0x132fb08 -> Node0x1330178;
	Node0x1330178 -> Node0x13301d8;
	Node0x13301d8 -> Node0x13302e8;
	Node0x13302e8 -> Node0x1330548;
	Node0x1330548 -> Node0x13306a8;
	Node0x13306a8 -> Node0x13307b8;
	Node0x13307b8 -> Node0x13308c8;
	Node0x13308c8 -> Node0x1330988;
edge [color=red]
	Node0x132de88 -> Node0x132e0a8;
	Node0x132e0a8 -> Node0x132e4d8;
	Node0x132df08 -> Node0x132e5b8;
	Node0x132e5b8 -> Node0x132e6b8;
	Node0x132df98 -> Node0x132e778;
	Node0x132e778 -> Node0x132e828;
	Node0x132dff8 -> Node0x132e8e8;
	Node0x132e8e8 -> Node0x132e998;
	Node0x132de88 -> Node0x13287e0;
	Node0x132df08 -> Node0x13287e0;
	Node0x132df98 -> Node0x13287e0;
	Node0x132dff8 -> Node0x13287e0;
	Node0x132de88 -> Node0x132eb98;
	Node0x132df08 -> Node0x132fb08;
	Node0x132df98 -> Node0x1330178;
	Node0x132dff8 -> Node0x13301d8;
	Node0x132eb98 -> Node0x13302e8;
	Node0x132fb08 -> Node0x13302e8;
	Node0x1330178 -> Node0x13302e8;
	Node0x13301d8 -> Node0x13302e8;
	Node0x132e8e8 -> Node0x1330548;
	Node0x132e778 -> Node0x13306a8;
	Node0x132e5b8 -> Node0x13307b8;
	Node0x132e0a8 -> Node0x13308c8;
}
