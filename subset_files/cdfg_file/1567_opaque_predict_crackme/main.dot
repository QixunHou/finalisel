digraph "DFG for'main' function" {
	Node0x1e2ee98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e2ef18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e2efa8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e2f408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e2f4e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e2f608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e2f840[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e2f8f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e30868[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e30ef0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x1e30f60[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1e30fd0[shape=record, label="  %10 = xor i32 %6, -1"];
	Node0x1e31040[shape=record, label="  %11 = add i32 %9, %10"];
	Node0x1e310b0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x1e31120[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1e31190[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x1e31200[shape=record, label="  %15 = or i32 %6, %12"];
	Node0x1e31270[shape=record, label="  %16 = and i32 %6, %12"];
	Node0x1e312e0[shape=record, label="  %17 = xor i32 %14, -1"];
	Node0x1e31350[shape=record, label="  %18 = mul i32 %17, 5"];
	Node0x1e313c0[shape=record, label="  %19 = shl i32 %15, 2"];
	Node0x1e31430[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0x1e314a0[shape=record, label="  %21 = mul i32 %16, 3"];
	Node0x1e31510[shape=record, label="  %22 = shl i32 %8, 1"];
	Node0x1e31580[shape=record, label="  %23 = sub i32 2, %6"];
	Node0x1e315f0[shape=record, label="  %24 = sub i32 %23, %7"];
	Node0x1e31660[shape=record, label="  %25 = sub i32 %24, %13"];
	Node0x1e316d0[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x1e31740[shape=record, label="  %27 = add i32 %26, %15"];
	Node0x1e317b0[shape=record, label="  %28 = add i32 %27, %16"];
	Node0x1e31820[shape=record, label="  %29 = add i32 %28, %18"];
	Node0x1e31890[shape=record, label="  %30 = add i32 %29, %21"];
	Node0x1e31900[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x1e31970[shape=record, label="  %32 = add i32 %31, %20"];
	Node0x1e31bf0[shape=record, label="  %33 = icmp eq i32 %11, %32"];
	Node0x1dcf9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e31c80[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x1e31ed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e32038[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e320f8[shape=record, label="  ret i32 0"];
	Node0x1e2ee98 -> Node0x1e2ef18;
	Node0x1e2ef18 -> Node0x1e2efa8;
	Node0x1e2efa8 -> Node0x1e2f408;
	Node0x1e2f408 -> Node0x1e2f4e8;
	Node0x1e2f4e8 -> Node0x1e2f608;
	Node0x1e2f608 -> Node0x1e2f840;
	Node0x1e2f840 -> Node0x1e2f8f8;
	Node0x1e2f8f8 -> Node0x1e30868;
	Node0x1e30868 -> Node0x1e30ef0;
	Node0x1e30ef0 -> Node0x1e30f60;
	Node0x1e30f60 -> Node0x1e30fd0;
	Node0x1e30fd0 -> Node0x1e31040;
	Node0x1e31040 -> Node0x1e310b0;
	Node0x1e310b0 -> Node0x1e31120;
	Node0x1e31120 -> Node0x1e31190;
	Node0x1e31190 -> Node0x1e31200;
	Node0x1e31200 -> Node0x1e31270;
	Node0x1e31270 -> Node0x1e312e0;
	Node0x1e312e0 -> Node0x1e31350;
	Node0x1e31350 -> Node0x1e313c0;
	Node0x1e313c0 -> Node0x1e31430;
	Node0x1e31430 -> Node0x1e314a0;
	Node0x1e314a0 -> Node0x1e31510;
	Node0x1e31510 -> Node0x1e31580;
	Node0x1e31580 -> Node0x1e315f0;
	Node0x1e315f0 -> Node0x1e31660;
	Node0x1e31660 -> Node0x1e316d0;
	Node0x1e316d0 -> Node0x1e31740;
	Node0x1e31740 -> Node0x1e317b0;
	Node0x1e317b0 -> Node0x1e31820;
	Node0x1e31820 -> Node0x1e31890;
	Node0x1e31890 -> Node0x1e31900;
	Node0x1e31900 -> Node0x1e31970;
	Node0x1e31970 -> Node0x1e31bf0;
	Node0x1e31bf0 -> Node0x1dcf9d8;
	Node0x1dcf9d8 -> Node0x1e31c80;
	Node0x1e31c80 -> Node0x1e31ed8;
	Node0x1e31ed8 -> Node0x1e32038;
	Node0x1e32038 -> Node0x1e320f8;
edge [color=red]
	Node0x1e2ee98 -> Node0x1e2efa8;
	Node0x1e2efa8 -> Node0x1e2f408;
	Node0x1e2ef18 -> Node0x1e2f4e8;
	Node0x1e2f4e8 -> Node0x1e2f608;
	Node0x1e2ee98 -> Node0x1e2f840;
	Node0x1e2ef18 -> Node0x1e2f840;
	Node0x1e2ee98 -> Node0x1e2f8f8;
	Node0x1e2ef18 -> Node0x1e30868;
	Node0x1e30868 -> Node0x1e30ef0;
	Node0x1e2f8f8 -> Node0x1e30ef0;
	Node0x1e30ef0 -> Node0x1e30f60;
	Node0x1e2f8f8 -> Node0x1e30fd0;
	Node0x1e30f60 -> Node0x1e31040;
	Node0x1e30fd0 -> Node0x1e31040;
	Node0x1e30868 -> Node0x1e310b0;
	Node0x1e310b0 -> Node0x1e31120;
	Node0x1e30868 -> Node0x1e31190;
	Node0x1e2f8f8 -> Node0x1e31190;
	Node0x1e2f8f8 -> Node0x1e31200;
	Node0x1e310b0 -> Node0x1e31200;
	Node0x1e2f8f8 -> Node0x1e31270;
	Node0x1e310b0 -> Node0x1e31270;
	Node0x1e31190 -> Node0x1e312e0;
	Node0x1e312e0 -> Node0x1e31350;
	Node0x1e31200 -> Node0x1e313c0;
	Node0x1e313c0 -> Node0x1e31430;
	Node0x1e31270 -> Node0x1e314a0;
	Node0x1e30ef0 -> Node0x1e31510;
	Node0x1e2f8f8 -> Node0x1e31580;
	Node0x1e31580 -> Node0x1e315f0;
	Node0x1e30868 -> Node0x1e315f0;
	Node0x1e315f0 -> Node0x1e31660;
	Node0x1e31120 -> Node0x1e31660;
	Node0x1e31660 -> Node0x1e316d0;
	Node0x1e31190 -> Node0x1e316d0;
	Node0x1e316d0 -> Node0x1e31740;
	Node0x1e31200 -> Node0x1e31740;
	Node0x1e31740 -> Node0x1e317b0;
	Node0x1e31270 -> Node0x1e317b0;
	Node0x1e317b0 -> Node0x1e31820;
	Node0x1e31350 -> Node0x1e31820;
	Node0x1e31820 -> Node0x1e31890;
	Node0x1e314a0 -> Node0x1e31890;
	Node0x1e31890 -> Node0x1e31900;
	Node0x1e31510 -> Node0x1e31900;
	Node0x1e31900 -> Node0x1e31970;
	Node0x1e31430 -> Node0x1e31970;
	Node0x1e31040 -> Node0x1e31bf0;
	Node0x1e31970 -> Node0x1e31bf0;
	Node0x1e31bf0 -> Node0x1dcf9d8;
	Node0x1dcf9d8 -> Node0x1e31c80;
	Node0x1e2f4e8 -> Node0x1e31ed8;
	Node0x1e2efa8 -> Node0x1e32038;
}
