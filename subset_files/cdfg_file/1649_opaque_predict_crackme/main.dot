digraph "DFG for'main' function" {
	Node0x96e358[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x96e3d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x96e468[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x96e4c8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x96e948[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x96ea28[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x96eb28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x96ebe8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x96ec98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x96eef8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x96efb8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x96f118[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x96f178[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x9708e0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x970ae8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x970c48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x970d58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x970e18[shape=record, label="  ret i32 0"];
	Node0x96e358 -> Node0x96e3d8;
	Node0x96e3d8 -> Node0x96e468;
	Node0x96e468 -> Node0x96e4c8;
	Node0x96e4c8 -> Node0x96e948;
	Node0x96e948 -> Node0x96ea28;
	Node0x96ea28 -> Node0x96eb28;
	Node0x96eb28 -> Node0x96ebe8;
	Node0x96ebe8 -> Node0x96ec98;
	Node0x96ec98 -> Node0x96eef8;
	Node0x96eef8 -> Node0x96efb8;
	Node0x96efb8 -> Node0x96f118;
	Node0x96f118 -> Node0x96f178;
	Node0x96f178 -> Node0x9708e0;
	Node0x9708e0 -> Node0x970ae8;
	Node0x970ae8 -> Node0x970c48;
	Node0x970c48 -> Node0x970d58;
	Node0x970d58 -> Node0x970e18;
edge [color=red]
	Node0x96e358 -> Node0x96e4c8;
	Node0x96e4c8 -> Node0x96e948;
	Node0x96e3d8 -> Node0x96ea28;
	Node0x96ea28 -> Node0x96eb28;
	Node0x96e468 -> Node0x96ebe8;
	Node0x96ebe8 -> Node0x96ec98;
	Node0x96e358 -> Node0x96eef8;
	Node0x96e3d8 -> Node0x96eef8;
	Node0x96e468 -> Node0x96eef8;
	Node0x96e358 -> Node0x96efb8;
	Node0x96e3d8 -> Node0x96f118;
	Node0x96e468 -> Node0x96f178;
	Node0x96efb8 -> Node0x9708e0;
	Node0x96f118 -> Node0x9708e0;
	Node0x96f178 -> Node0x9708e0;
	Node0x96ebe8 -> Node0x970ae8;
	Node0x96ea28 -> Node0x970c48;
	Node0x96e4c8 -> Node0x970d58;
}
