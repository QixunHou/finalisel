digraph "DFG for'main' function" {
	Node0x12c2988[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12c2a08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x12c2a98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x12c2af8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x12c2ba8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x12c2fd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12c30b8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x12c31b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12c3278[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x12c3328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x12c33e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x12c3498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x12bd740[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x12c3698[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12c4608[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x12c4c78[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x12c4cd8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x12c4de8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x12c5048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x12c51a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x12c52b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12c53c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12c5488[shape=record, label="  ret i32 0"];
	Node0x12c2988 -> Node0x12c2a08;
	Node0x12c2a08 -> Node0x12c2a98;
	Node0x12c2a98 -> Node0x12c2af8;
	Node0x12c2af8 -> Node0x12c2ba8;
	Node0x12c2ba8 -> Node0x12c2fd8;
	Node0x12c2fd8 -> Node0x12c30b8;
	Node0x12c30b8 -> Node0x12c31b8;
	Node0x12c31b8 -> Node0x12c3278;
	Node0x12c3278 -> Node0x12c3328;
	Node0x12c3328 -> Node0x12c33e8;
	Node0x12c33e8 -> Node0x12c3498;
	Node0x12c3498 -> Node0x12bd740;
	Node0x12bd740 -> Node0x12c3698;
	Node0x12c3698 -> Node0x12c4608;
	Node0x12c4608 -> Node0x12c4c78;
	Node0x12c4c78 -> Node0x12c4cd8;
	Node0x12c4cd8 -> Node0x12c4de8;
	Node0x12c4de8 -> Node0x12c5048;
	Node0x12c5048 -> Node0x12c51a8;
	Node0x12c51a8 -> Node0x12c52b8;
	Node0x12c52b8 -> Node0x12c53c8;
	Node0x12c53c8 -> Node0x12c5488;
edge [color=red]
	Node0x12c2988 -> Node0x12c2ba8;
	Node0x12c2ba8 -> Node0x12c2fd8;
	Node0x12c2a08 -> Node0x12c30b8;
	Node0x12c30b8 -> Node0x12c31b8;
	Node0x12c2a98 -> Node0x12c3278;
	Node0x12c3278 -> Node0x12c3328;
	Node0x12c2af8 -> Node0x12c33e8;
	Node0x12c33e8 -> Node0x12c3498;
	Node0x12c2988 -> Node0x12bd740;
	Node0x12c2a08 -> Node0x12bd740;
	Node0x12c2a98 -> Node0x12bd740;
	Node0x12c2af8 -> Node0x12bd740;
	Node0x12c2988 -> Node0x12c3698;
	Node0x12c2a08 -> Node0x12c4608;
	Node0x12c2a98 -> Node0x12c4c78;
	Node0x12c2af8 -> Node0x12c4cd8;
	Node0x12c3698 -> Node0x12c4de8;
	Node0x12c4608 -> Node0x12c4de8;
	Node0x12c4c78 -> Node0x12c4de8;
	Node0x12c4cd8 -> Node0x12c4de8;
	Node0x12c33e8 -> Node0x12c5048;
	Node0x12c3278 -> Node0x12c51a8;
	Node0x12c30b8 -> Node0x12c52b8;
	Node0x12c2ba8 -> Node0x12c53c8;
}
