digraph "DFG for'crackme' function" {
	Node0x12c0d20[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x12c0d90[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x12c0e00[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x12c0ea0[shape=record, label="  %8 = mul i32 %7, -2"];
	Node0x12c0f10[shape=record, label="  %9 = and i32 %2, %1"];
	Node0x12c0f80[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x12c0ff0[shape=record, label="  %11 = add i32 %10, %3"];
	Node0x12c1060[shape=record, label="  %12 = add i32 %11, %8"];
	Node0x12c10d0[shape=record, label="  %13 = or i32 %5, %1"];
	Node0x12c1140[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0x12c11b0[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x12c1250[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x12c12c0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x12c1330[shape=record, label="  %18 = shl i32 %13, 1"];
	Node0x12c13a0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x12c1410[shape=record, label="  %20 = shl i32 %6, 1"];
	Node0x12c1480[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x12c14f0[shape=record, label="  %22 = xor i32 %0, -1"];
	Node0x12c1560[shape=record, label="  %23 = and i32 %22, %3"];
	Node0x12c15d0[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0x12c1640[shape=record, label="  %25 = or i32 %22, %3"];
	Node0x12c16b0[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x12c1720[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x12c1790[shape=record, label="  %28 = shl i32 %25, 1"];
	Node0x12c1800[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x12c1870[shape=record, label="  %30 = shl i32 %23, 1"];
	Node0x12c18e0[shape=record, label="  %31 = sub i32 %14, %2"];
	Node0x12c1950[shape=record, label="  %32 = add i32 %31, %21"];
	Node0x12c1bd0[shape=record, label="  %33 = add i32 %32, %24"];
	Node0x12c1c40[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x12c1cb0[shape=record, label="  %35 = sub i32 %13, %1"];
	Node0x12c1d20[shape=record, label="  %36 = add i32 %35, %15"];
	Node0x12c1d90[shape=record, label="  %37 = sub i32 %36, %9"];
	Node0x12c1e00[shape=record, label="  %38 = add i32 %37, %3"];
	Node0x12c1e70[shape=record, label="  %39 = sub i32 %38, %20"];
	Node0x12c1ee0[shape=record, label="  %40 = sub i32 %39, %21"];
	Node0x12c1f50[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x12c1fc0[shape=record, label="  %42 = sub i32 %41, %25"];
	Node0x12c2030[shape=record, label="  %43 = add i32 %42, %27"];
	Node0x12c20a0[shape=record, label="  %44 = sub i32 %43, %17"];
	Node0x12c2110[shape=record, label="  %45 = sub i32 %44, %19"];
	Node0x12c2180[shape=record, label="  %46 = sub i32 %45, %30"];
	Node0x12c21f0[shape=record, label="  %47 = sub i32 %46, %29"];
	Node0x12c2260[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x12c22d0[shape=record, label="  %49 = icmp eq i32 %12, %48"];
	Node0x1261268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x12c2770[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x12c27c0[shape=record, label="  ret void"];
	Node0x12c0d20 -> Node0x12c0d90;
	Node0x12c0d90 -> Node0x12c0e00;
	Node0x12c0e00 -> Node0x12c0ea0;
	Node0x12c0ea0 -> Node0x12c0f10;
	Node0x12c0f10 -> Node0x12c0f80;
	Node0x12c0f80 -> Node0x12c0ff0;
	Node0x12c0ff0 -> Node0x12c1060;
	Node0x12c1060 -> Node0x12c10d0;
	Node0x12c10d0 -> Node0x12c1140;
	Node0x12c1140 -> Node0x12c11b0;
	Node0x12c11b0 -> Node0x12c1250;
	Node0x12c1250 -> Node0x12c12c0;
	Node0x12c12c0 -> Node0x12c1330;
	Node0x12c1330 -> Node0x12c13a0;
	Node0x12c13a0 -> Node0x12c1410;
	Node0x12c1410 -> Node0x12c1480;
	Node0x12c1480 -> Node0x12c14f0;
	Node0x12c14f0 -> Node0x12c1560;
	Node0x12c1560 -> Node0x12c15d0;
	Node0x12c15d0 -> Node0x12c1640;
	Node0x12c1640 -> Node0x12c16b0;
	Node0x12c16b0 -> Node0x12c1720;
	Node0x12c1720 -> Node0x12c1790;
	Node0x12c1790 -> Node0x12c1800;
	Node0x12c1800 -> Node0x12c1870;
	Node0x12c1870 -> Node0x12c18e0;
	Node0x12c18e0 -> Node0x12c1950;
	Node0x12c1950 -> Node0x12c1bd0;
	Node0x12c1bd0 -> Node0x12c1c40;
	Node0x12c1c40 -> Node0x12c1cb0;
	Node0x12c1cb0 -> Node0x12c1d20;
	Node0x12c1d20 -> Node0x12c1d90;
	Node0x12c1d90 -> Node0x12c1e00;
	Node0x12c1e00 -> Node0x12c1e70;
	Node0x12c1e70 -> Node0x12c1ee0;
	Node0x12c1ee0 -> Node0x12c1f50;
	Node0x12c1f50 -> Node0x12c1fc0;
	Node0x12c1fc0 -> Node0x12c2030;
	Node0x12c2030 -> Node0x12c20a0;
	Node0x12c20a0 -> Node0x12c2110;
	Node0x12c2110 -> Node0x12c2180;
	Node0x12c2180 -> Node0x12c21f0;
	Node0x12c21f0 -> Node0x12c2260;
	Node0x12c2260 -> Node0x12c22d0;
	Node0x12c22d0 -> Node0x1261268;
	Node0x1261268 -> Node0x12c2770;
	Node0x12c2770 -> Node0x12c27c0;
edge [color=red]
	Node0x12c0d20 -> Node0x12c0d90;
	Node0x12c0d90 -> Node0x12c0e00;
	Node0x12c0e00 -> Node0x12c0ea0;
	Node0x12c0f10 -> Node0x12c0f80;
	Node0x12c0f80 -> Node0x12c0ff0;
	Node0x12c0ff0 -> Node0x12c1060;
	Node0x12c0ea0 -> Node0x12c1060;
	Node0x12c0d20 -> Node0x12c10d0;
	Node0x12c11b0 -> Node0x12c1250;
	Node0x12c1250 -> Node0x12c12c0;
	Node0x12c10d0 -> Node0x12c1330;
	Node0x12c1330 -> Node0x12c13a0;
	Node0x12c0d90 -> Node0x12c1410;
	Node0x12c14f0 -> Node0x12c1560;
	Node0x12c14f0 -> Node0x12c1640;
	Node0x12c16b0 -> Node0x12c1720;
	Node0x12c1640 -> Node0x12c1790;
	Node0x12c1790 -> Node0x12c1800;
	Node0x12c1560 -> Node0x12c1870;
	Node0x12c1140 -> Node0x12c18e0;
	Node0x12c18e0 -> Node0x12c1950;
	Node0x12c1480 -> Node0x12c1950;
	Node0x12c1950 -> Node0x12c1bd0;
	Node0x12c15d0 -> Node0x12c1bd0;
	Node0x12c1bd0 -> Node0x12c1c40;
	Node0x12c10d0 -> Node0x12c1cb0;
	Node0x12c1cb0 -> Node0x12c1d20;
	Node0x12c11b0 -> Node0x12c1d20;
	Node0x12c1d20 -> Node0x12c1d90;
	Node0x12c0f10 -> Node0x12c1d90;
	Node0x12c1d90 -> Node0x12c1e00;
	Node0x12c1e00 -> Node0x12c1e70;
	Node0x12c1410 -> Node0x12c1e70;
	Node0x12c1e70 -> Node0x12c1ee0;
	Node0x12c1480 -> Node0x12c1ee0;
	Node0x12c1ee0 -> Node0x12c1f50;
	Node0x12c1560 -> Node0x12c1f50;
	Node0x12c1f50 -> Node0x12c1fc0;
	Node0x12c1640 -> Node0x12c1fc0;
	Node0x12c1fc0 -> Node0x12c2030;
	Node0x12c1720 -> Node0x12c2030;
	Node0x12c2030 -> Node0x12c20a0;
	Node0x12c12c0 -> Node0x12c20a0;
	Node0x12c20a0 -> Node0x12c2110;
	Node0x12c13a0 -> Node0x12c2110;
	Node0x12c2110 -> Node0x12c2180;
	Node0x12c1870 -> Node0x12c2180;
	Node0x12c2180 -> Node0x12c21f0;
	Node0x12c1800 -> Node0x12c21f0;
	Node0x12c21f0 -> Node0x12c2260;
	Node0x12c1c40 -> Node0x12c2260;
	Node0x12c1060 -> Node0x12c22d0;
	Node0x12c2260 -> Node0x12c22d0;
	Node0x12c22d0 -> Node0x1261268;
	Node0x1261268 -> Node0x12c2770;
}
