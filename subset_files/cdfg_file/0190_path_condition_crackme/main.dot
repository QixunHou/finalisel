digraph "DFG for'main' function" {
	Node0x65ca78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x65caf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x65cb88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x65cbe8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x65cc98[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x65d0c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x65d1a8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x65d2a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x65d368[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x65d418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x65d4d8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x65d588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x657740[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x65d788[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x65e6f8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x65ed68[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x65edc8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x65eed8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x65f138[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x65f298[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x65f3a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x65f4b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x65f578[shape=record, label="  ret i32 0"];
	Node0x65ca78 -> Node0x65caf8;
	Node0x65caf8 -> Node0x65cb88;
	Node0x65cb88 -> Node0x65cbe8;
	Node0x65cbe8 -> Node0x65cc98;
	Node0x65cc98 -> Node0x65d0c8;
	Node0x65d0c8 -> Node0x65d1a8;
	Node0x65d1a8 -> Node0x65d2a8;
	Node0x65d2a8 -> Node0x65d368;
	Node0x65d368 -> Node0x65d418;
	Node0x65d418 -> Node0x65d4d8;
	Node0x65d4d8 -> Node0x65d588;
	Node0x65d588 -> Node0x657740;
	Node0x657740 -> Node0x65d788;
	Node0x65d788 -> Node0x65e6f8;
	Node0x65e6f8 -> Node0x65ed68;
	Node0x65ed68 -> Node0x65edc8;
	Node0x65edc8 -> Node0x65eed8;
	Node0x65eed8 -> Node0x65f138;
	Node0x65f138 -> Node0x65f298;
	Node0x65f298 -> Node0x65f3a8;
	Node0x65f3a8 -> Node0x65f4b8;
	Node0x65f4b8 -> Node0x65f578;
edge [color=red]
	Node0x65ca78 -> Node0x65cc98;
	Node0x65cc98 -> Node0x65d0c8;
	Node0x65caf8 -> Node0x65d1a8;
	Node0x65d1a8 -> Node0x65d2a8;
	Node0x65cb88 -> Node0x65d368;
	Node0x65d368 -> Node0x65d418;
	Node0x65cbe8 -> Node0x65d4d8;
	Node0x65d4d8 -> Node0x65d588;
	Node0x65ca78 -> Node0x657740;
	Node0x65caf8 -> Node0x657740;
	Node0x65cb88 -> Node0x657740;
	Node0x65cbe8 -> Node0x657740;
	Node0x65ca78 -> Node0x65d788;
	Node0x65caf8 -> Node0x65e6f8;
	Node0x65cb88 -> Node0x65ed68;
	Node0x65cbe8 -> Node0x65edc8;
	Node0x65d788 -> Node0x65eed8;
	Node0x65e6f8 -> Node0x65eed8;
	Node0x65ed68 -> Node0x65eed8;
	Node0x65edc8 -> Node0x65eed8;
	Node0x65d4d8 -> Node0x65f138;
	Node0x65d368 -> Node0x65f298;
	Node0x65d1a8 -> Node0x65f3a8;
	Node0x65cc98 -> Node0x65f4b8;
}
