digraph "DFG for'crackme' function" {
	Node0x8e6710[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x8e6d90[shape=record, label="  %6 = add i32 %1, 1"];
	Node0x8e6e00[shape=record, label="  %7 = add i32 %6, %5"];
	Node0x8e6e70[shape=record, label="  %8 = or i32 %3, %0"];
	Node0x8e6ee0[shape=record, label="  %9 = sub i32 %7, %8"];
	Node0x8e6f50[shape=record, label="  %10 = xor i32 %2, %1"];
	Node0x8e6ff0[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x8e7060[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x8e70d0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x8e7170[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x8e71e0[shape=record, label="  %15 = shl i32 %10, 1"];
	Node0x8e7250[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x8e72c0[shape=record, label="  %17 = xor i32 %1, -1"];
	Node0x8e7330[shape=record, label="  %18 = or i32 %2, %1"];
	Node0x8e73a0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x8e7410[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x8e7480[shape=record, label="  %21 = and i32 %17, %2"];
	Node0x8e7520[shape=record, label="  %22 = mul i32 %21, -6"];
	Node0x8e7590[shape=record, label="  %23 = xor i32 %0, -1"];
	Node0x8e7630[shape=record, label="  %24 = shl i32 %0, 2"];
	Node0x8e76a0[shape=record, label="  %25 = and i32 %3, %0"];
	Node0x8e7710[shape=record, label="  %26 = or i32 %23, %3"];
	Node0x8e7780[shape=record, label="  %27 = and i32 %23, %3"];
	Node0x8e77f0[shape=record, label="  %28 = shl i32 %8, 1"];
	Node0x8e7860[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x8e78d0[shape=record, label="  %30 = xor i32 %26, -1"];
	Node0x8e7970[shape=record, label="  %31 = mul i32 %30, 3"];
	Node0x8e7a10[shape=record, label="  %32 = mul i32 %27, -5"];
	Node0x8e7c90[shape=record, label="  %33 = add i32 %17, %23"];
	Node0x8e7d00[shape=record, label="  %34 = sub i32 %33, %24"];
	Node0x8e7d70[shape=record, label="  %35 = add i32 %34, %2"];
	Node0x8e7de0[shape=record, label="  %36 = add i32 %35, %10"];
	Node0x8e7e50[shape=record, label="  %37 = sub i32 %36, %12"];
	Node0x8e7ec0[shape=record, label="  %38 = add i32 %37, %3"];
	Node0x8e7f30[shape=record, label="  %39 = add i32 %38, %22"];
	Node0x8e7fa0[shape=record, label="  %40 = add i32 %39, %25"];
	Node0x8e8010[shape=record, label="  %41 = add i32 %40, %26"];
	Node0x8e8080[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x8e80f0[shape=record, label="  %43 = add i32 %42, %14"];
	Node0x8e8160[shape=record, label="  %44 = sub i32 %43, %16"];
	Node0x8e81d0[shape=record, label="  %45 = sub i32 %44, %20"];
	Node0x8e8240[shape=record, label="  %46 = add i32 %45, %31"];
	Node0x8e82b0[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x8e8320[shape=record, label="  %48 = sub i32 %47, %29"];
	Node0x8e8390[shape=record, label="  %49 = icmp eq i32 %9, %48"];
	Node0x887268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8e8830[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x8e8880[shape=record, label="  ret void"];
	Node0x8e6710 -> Node0x8e6d90;
	Node0x8e6d90 -> Node0x8e6e00;
	Node0x8e6e00 -> Node0x8e6e70;
	Node0x8e6e70 -> Node0x8e6ee0;
	Node0x8e6ee0 -> Node0x8e6f50;
	Node0x8e6f50 -> Node0x8e6ff0;
	Node0x8e6ff0 -> Node0x8e7060;
	Node0x8e7060 -> Node0x8e70d0;
	Node0x8e70d0 -> Node0x8e7170;
	Node0x8e7170 -> Node0x8e71e0;
	Node0x8e71e0 -> Node0x8e7250;
	Node0x8e7250 -> Node0x8e72c0;
	Node0x8e72c0 -> Node0x8e7330;
	Node0x8e7330 -> Node0x8e73a0;
	Node0x8e73a0 -> Node0x8e7410;
	Node0x8e7410 -> Node0x8e7480;
	Node0x8e7480 -> Node0x8e7520;
	Node0x8e7520 -> Node0x8e7590;
	Node0x8e7590 -> Node0x8e7630;
	Node0x8e7630 -> Node0x8e76a0;
	Node0x8e76a0 -> Node0x8e7710;
	Node0x8e7710 -> Node0x8e7780;
	Node0x8e7780 -> Node0x8e77f0;
	Node0x8e77f0 -> Node0x8e7860;
	Node0x8e7860 -> Node0x8e78d0;
	Node0x8e78d0 -> Node0x8e7970;
	Node0x8e7970 -> Node0x8e7a10;
	Node0x8e7a10 -> Node0x8e7c90;
	Node0x8e7c90 -> Node0x8e7d00;
	Node0x8e7d00 -> Node0x8e7d70;
	Node0x8e7d70 -> Node0x8e7de0;
	Node0x8e7de0 -> Node0x8e7e50;
	Node0x8e7e50 -> Node0x8e7ec0;
	Node0x8e7ec0 -> Node0x8e7f30;
	Node0x8e7f30 -> Node0x8e7fa0;
	Node0x8e7fa0 -> Node0x8e8010;
	Node0x8e8010 -> Node0x8e8080;
	Node0x8e8080 -> Node0x8e80f0;
	Node0x8e80f0 -> Node0x8e8160;
	Node0x8e8160 -> Node0x8e81d0;
	Node0x8e81d0 -> Node0x8e8240;
	Node0x8e8240 -> Node0x8e82b0;
	Node0x8e82b0 -> Node0x8e8320;
	Node0x8e8320 -> Node0x8e8390;
	Node0x8e8390 -> Node0x887268;
	Node0x887268 -> Node0x8e8830;
	Node0x8e8830 -> Node0x8e8880;
edge [color=red]
	Node0x8e6d90 -> Node0x8e6e00;
	Node0x8e6710 -> Node0x8e6e00;
	Node0x8e6e00 -> Node0x8e6ee0;
	Node0x8e6e70 -> Node0x8e6ee0;
	Node0x8e6ff0 -> Node0x8e7060;
	Node0x8e7060 -> Node0x8e70d0;
	Node0x8e70d0 -> Node0x8e7170;
	Node0x8e6f50 -> Node0x8e71e0;
	Node0x8e71e0 -> Node0x8e7250;
	Node0x8e7330 -> Node0x8e73a0;
	Node0x8e73a0 -> Node0x8e7410;
	Node0x8e72c0 -> Node0x8e7480;
	Node0x8e7480 -> Node0x8e7520;
	Node0x8e7590 -> Node0x8e7710;
	Node0x8e7590 -> Node0x8e7780;
	Node0x8e6e70 -> Node0x8e77f0;
	Node0x8e77f0 -> Node0x8e7860;
	Node0x8e7710 -> Node0x8e78d0;
	Node0x8e78d0 -> Node0x8e7970;
	Node0x8e7780 -> Node0x8e7a10;
	Node0x8e72c0 -> Node0x8e7c90;
	Node0x8e7590 -> Node0x8e7c90;
	Node0x8e7c90 -> Node0x8e7d00;
	Node0x8e7630 -> Node0x8e7d00;
	Node0x8e7d00 -> Node0x8e7d70;
	Node0x8e7d70 -> Node0x8e7de0;
	Node0x8e6f50 -> Node0x8e7de0;
	Node0x8e7de0 -> Node0x8e7e50;
	Node0x8e7060 -> Node0x8e7e50;
	Node0x8e7e50 -> Node0x8e7ec0;
	Node0x8e7ec0 -> Node0x8e7f30;
	Node0x8e7520 -> Node0x8e7f30;
	Node0x8e7f30 -> Node0x8e7fa0;
	Node0x8e76a0 -> Node0x8e7fa0;
	Node0x8e7fa0 -> Node0x8e8010;
	Node0x8e7710 -> Node0x8e8010;
	Node0x8e8010 -> Node0x8e8080;
	Node0x8e7780 -> Node0x8e8080;
	Node0x8e8080 -> Node0x8e80f0;
	Node0x8e7170 -> Node0x8e80f0;
	Node0x8e80f0 -> Node0x8e8160;
	Node0x8e7250 -> Node0x8e8160;
	Node0x8e8160 -> Node0x8e81d0;
	Node0x8e7410 -> Node0x8e81d0;
	Node0x8e81d0 -> Node0x8e8240;
	Node0x8e7970 -> Node0x8e8240;
	Node0x8e8240 -> Node0x8e82b0;
	Node0x8e7a10 -> Node0x8e82b0;
	Node0x8e82b0 -> Node0x8e8320;
	Node0x8e7860 -> Node0x8e8320;
	Node0x8e6ee0 -> Node0x8e8390;
	Node0x8e8320 -> Node0x8e8390;
	Node0x8e8390 -> Node0x887268;
	Node0x887268 -> Node0x8e8830;
}
