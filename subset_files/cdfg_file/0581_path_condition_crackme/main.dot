digraph "DFG for'main' function" {
	Node0x2264448[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x22644c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2264558[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x22645b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2264a38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2264b18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x2264c18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2264cd8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2264d88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2264fe8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x22650a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2265208[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2265268[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x226b680[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x226b888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x226b9e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x226baf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x226bbb8[shape=record, label="  ret i32 0"];
	Node0x2264448 -> Node0x22644c8;
	Node0x22644c8 -> Node0x2264558;
	Node0x2264558 -> Node0x22645b8;
	Node0x22645b8 -> Node0x2264a38;
	Node0x2264a38 -> Node0x2264b18;
	Node0x2264b18 -> Node0x2264c18;
	Node0x2264c18 -> Node0x2264cd8;
	Node0x2264cd8 -> Node0x2264d88;
	Node0x2264d88 -> Node0x2264fe8;
	Node0x2264fe8 -> Node0x22650a8;
	Node0x22650a8 -> Node0x2265208;
	Node0x2265208 -> Node0x2265268;
	Node0x2265268 -> Node0x226b680;
	Node0x226b680 -> Node0x226b888;
	Node0x226b888 -> Node0x226b9e8;
	Node0x226b9e8 -> Node0x226baf8;
	Node0x226baf8 -> Node0x226bbb8;
edge [color=red]
	Node0x2264448 -> Node0x22645b8;
	Node0x22645b8 -> Node0x2264a38;
	Node0x22644c8 -> Node0x2264b18;
	Node0x2264b18 -> Node0x2264c18;
	Node0x2264558 -> Node0x2264cd8;
	Node0x2264cd8 -> Node0x2264d88;
	Node0x2264448 -> Node0x2264fe8;
	Node0x22644c8 -> Node0x2264fe8;
	Node0x2264558 -> Node0x2264fe8;
	Node0x2264448 -> Node0x22650a8;
	Node0x22644c8 -> Node0x2265208;
	Node0x2264558 -> Node0x2265268;
	Node0x22650a8 -> Node0x226b680;
	Node0x2265208 -> Node0x226b680;
	Node0x2265268 -> Node0x226b680;
	Node0x2264cd8 -> Node0x226b888;
	Node0x2264b18 -> Node0x226b9e8;
	Node0x22645b8 -> Node0x226baf8;
}
