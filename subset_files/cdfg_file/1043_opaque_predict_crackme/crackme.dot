digraph "DFG for'crackme' function" {
	Node0x22ce9d0[shape=record, label="  %3 = xor i32 %0, -1"];
	Node0x22cea40[shape=record, label="  %4 = or i32 %3, %1"];
	Node0x22ceb00[shape=record, label="  %5 = and i32 %1, %0"];
	Node0x22ceb70[shape=record, label="  %6 = xor i32 %1, %0"];
	Node0x22cebe0[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x22cec50[shape=record, label="  %8 = shl i32 %6, 1"];
	Node0x22cecc0[shape=record, label="  %9 = or i32 %1, %0"];
	Node0x22ced30[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x22cedd0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x22cee70[shape=record, label="  %12 = add i32 %1, 2"];
	Node0x22ceee0[shape=record, label="  %13 = add i32 %12, %5"];
	Node0x22cef50[shape=record, label="  %14 = add i32 %13, %7"];
	Node0x22cefc0[shape=record, label="  %15 = add i32 %14, %8"];
	Node0x22cf030[shape=record, label="  %16 = add i32 %15, %11"];
	Node0x22cf0a0[shape=record, label="  %17 = icmp eq i32 %4, %16"];
	Node0x226f268[shape=record, label="  %18 = select i1 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22cf540[shape=record, label="  %19 = tail call i32 @puts(i8* nonnull dereferenceable(1) %18)"];
	Node0x22cf590[shape=record, label="  ret void"];
	Node0x22ce9d0 -> Node0x22cea40;
	Node0x22cea40 -> Node0x22ceb00;
	Node0x22ceb00 -> Node0x22ceb70;
	Node0x22ceb70 -> Node0x22cebe0;
	Node0x22cebe0 -> Node0x22cec50;
	Node0x22cec50 -> Node0x22cecc0;
	Node0x22cecc0 -> Node0x22ced30;
	Node0x22ced30 -> Node0x22cedd0;
	Node0x22cedd0 -> Node0x22cee70;
	Node0x22cee70 -> Node0x22ceee0;
	Node0x22ceee0 -> Node0x22cef50;
	Node0x22cef50 -> Node0x22cefc0;
	Node0x22cefc0 -> Node0x22cf030;
	Node0x22cf030 -> Node0x22cf0a0;
	Node0x22cf0a0 -> Node0x226f268;
	Node0x226f268 -> Node0x22cf540;
	Node0x22cf540 -> Node0x22cf590;
edge [color=red]
	Node0x22ce9d0 -> Node0x22cea40;
	Node0x22ceb70 -> Node0x22cebe0;
	Node0x22ceb70 -> Node0x22cec50;
	Node0x22cecc0 -> Node0x22ced30;
	Node0x22ced30 -> Node0x22cedd0;
	Node0x22cee70 -> Node0x22ceee0;
	Node0x22ceb00 -> Node0x22ceee0;
	Node0x22ceee0 -> Node0x22cef50;
	Node0x22cebe0 -> Node0x22cef50;
	Node0x22cef50 -> Node0x22cefc0;
	Node0x22cec50 -> Node0x22cefc0;
	Node0x22cefc0 -> Node0x22cf030;
	Node0x22cedd0 -> Node0x22cf030;
	Node0x22cea40 -> Node0x22cf0a0;
	Node0x22cf030 -> Node0x22cf0a0;
	Node0x22cf0a0 -> Node0x226f268;
	Node0x226f268 -> Node0x22cf540;
}
