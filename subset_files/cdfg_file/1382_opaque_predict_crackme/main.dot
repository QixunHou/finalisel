digraph "DFG for'main' function" {
	Node0x1e3dde8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e3de68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e3def8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e3e358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e3e438[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e3e558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e3e790[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e3e848[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e3f7b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e3fe40[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1e3feb0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1e3ff20[shape=record, label="  %10 = xor i32 %6, %8"];
	Node0x1e3ff90[shape=record, label="  %11 = and i32 %6, %8"];
	Node0x1e40000[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1e40070[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x1e400e0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1e40150[shape=record, label="  %15 = shl i32 %13, 1"];
	Node0x1e401c0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x1e40230[shape=record, label="  %17 = shl i32 %9, 2"];
	Node0x1e402a0[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x1e40310[shape=record, label="  %19 = and i32 %7, %6"];
	Node0x1e40380[shape=record, label="  %20 = mul i32 %19, -3"];
	Node0x1e403f0[shape=record, label="  %21 = add i32 %11, %7"];
	Node0x1e40460[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x1e404d0[shape=record, label="  %23 = sub i32 %7, %6"];
	Node0x1e40540[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x1e405b0[shape=record, label="  %25 = add i32 %24, %12"];
	Node0x1e40620[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x1e40690[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x1e40700[shape=record, label="  %28 = sub i32 %27, %16"];
	Node0x1e40770[shape=record, label="  %29 = sub i32 %28, %18"];
	Node0x1e407e0[shape=record, label="  %30 = add i32 %29, %22"];
	Node0x1e40850[shape=record, label="  %31 = icmp eq i32 %9, %30"];
	Node0x1dde9d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e40af0[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x1e40d48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e40ea8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e40f68[shape=record, label="  ret i32 0"];
	Node0x1e3dde8 -> Node0x1e3de68;
	Node0x1e3de68 -> Node0x1e3def8;
	Node0x1e3def8 -> Node0x1e3e358;
	Node0x1e3e358 -> Node0x1e3e438;
	Node0x1e3e438 -> Node0x1e3e558;
	Node0x1e3e558 -> Node0x1e3e790;
	Node0x1e3e790 -> Node0x1e3e848;
	Node0x1e3e848 -> Node0x1e3f7b8;
	Node0x1e3f7b8 -> Node0x1e3fe40;
	Node0x1e3fe40 -> Node0x1e3feb0;
	Node0x1e3feb0 -> Node0x1e3ff20;
	Node0x1e3ff20 -> Node0x1e3ff90;
	Node0x1e3ff90 -> Node0x1e40000;
	Node0x1e40000 -> Node0x1e40070;
	Node0x1e40070 -> Node0x1e400e0;
	Node0x1e400e0 -> Node0x1e40150;
	Node0x1e40150 -> Node0x1e401c0;
	Node0x1e401c0 -> Node0x1e40230;
	Node0x1e40230 -> Node0x1e402a0;
	Node0x1e402a0 -> Node0x1e40310;
	Node0x1e40310 -> Node0x1e40380;
	Node0x1e40380 -> Node0x1e403f0;
	Node0x1e403f0 -> Node0x1e40460;
	Node0x1e40460 -> Node0x1e404d0;
	Node0x1e404d0 -> Node0x1e40540;
	Node0x1e40540 -> Node0x1e405b0;
	Node0x1e405b0 -> Node0x1e40620;
	Node0x1e40620 -> Node0x1e40690;
	Node0x1e40690 -> Node0x1e40700;
	Node0x1e40700 -> Node0x1e40770;
	Node0x1e40770 -> Node0x1e407e0;
	Node0x1e407e0 -> Node0x1e40850;
	Node0x1e40850 -> Node0x1dde9d8;
	Node0x1dde9d8 -> Node0x1e40af0;
	Node0x1e40af0 -> Node0x1e40d48;
	Node0x1e40d48 -> Node0x1e40ea8;
	Node0x1e40ea8 -> Node0x1e40f68;
edge [color=red]
	Node0x1e3dde8 -> Node0x1e3def8;
	Node0x1e3def8 -> Node0x1e3e358;
	Node0x1e3de68 -> Node0x1e3e438;
	Node0x1e3e438 -> Node0x1e3e558;
	Node0x1e3dde8 -> Node0x1e3e790;
	Node0x1e3de68 -> Node0x1e3e790;
	Node0x1e3dde8 -> Node0x1e3e848;
	Node0x1e3de68 -> Node0x1e3f7b8;
	Node0x1e3f7b8 -> Node0x1e3fe40;
	Node0x1e3e848 -> Node0x1e3feb0;
	Node0x1e3fe40 -> Node0x1e3feb0;
	Node0x1e3e848 -> Node0x1e3ff20;
	Node0x1e3fe40 -> Node0x1e3ff20;
	Node0x1e3e848 -> Node0x1e3ff90;
	Node0x1e3fe40 -> Node0x1e3ff90;
	Node0x1e3ff90 -> Node0x1e40000;
	Node0x1e3f7b8 -> Node0x1e40070;
	Node0x1e3e848 -> Node0x1e40070;
	Node0x1e40070 -> Node0x1e400e0;
	Node0x1e40070 -> Node0x1e40150;
	Node0x1e40150 -> Node0x1e401c0;
	Node0x1e3feb0 -> Node0x1e40230;
	Node0x1e40230 -> Node0x1e402a0;
	Node0x1e3f7b8 -> Node0x1e40310;
	Node0x1e3e848 -> Node0x1e40310;
	Node0x1e40310 -> Node0x1e40380;
	Node0x1e3ff90 -> Node0x1e403f0;
	Node0x1e3f7b8 -> Node0x1e403f0;
	Node0x1e403f0 -> Node0x1e40460;
	Node0x1e3f7b8 -> Node0x1e404d0;
	Node0x1e3e848 -> Node0x1e404d0;
	Node0x1e404d0 -> Node0x1e40540;
	Node0x1e3ff20 -> Node0x1e40540;
	Node0x1e40540 -> Node0x1e405b0;
	Node0x1e40000 -> Node0x1e405b0;
	Node0x1e405b0 -> Node0x1e40620;
	Node0x1e400e0 -> Node0x1e40620;
	Node0x1e40620 -> Node0x1e40690;
	Node0x1e40380 -> Node0x1e40690;
	Node0x1e40690 -> Node0x1e40700;
	Node0x1e401c0 -> Node0x1e40700;
	Node0x1e40700 -> Node0x1e40770;
	Node0x1e402a0 -> Node0x1e40770;
	Node0x1e40770 -> Node0x1e407e0;
	Node0x1e40460 -> Node0x1e407e0;
	Node0x1e3feb0 -> Node0x1e40850;
	Node0x1e407e0 -> Node0x1e40850;
	Node0x1e40850 -> Node0x1dde9d8;
	Node0x1dde9d8 -> Node0x1e40af0;
	Node0x1e3e438 -> Node0x1e40d48;
	Node0x1e3def8 -> Node0x1e40ea8;
}
