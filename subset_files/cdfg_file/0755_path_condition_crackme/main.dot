digraph "DFG for'main' function" {
	Node0xcab0c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xcab148[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xcab1d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xcab238[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xcab6b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xcab798[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xcab898[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xcab958[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xcaba08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xcabc68[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xcabd28[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xcabe88[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xcabee8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xcb1230[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xcb1438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xcb1598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xcb16a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xcb1768[shape=record, label="  ret i32 0"];
	Node0xcab0c8 -> Node0xcab148;
	Node0xcab148 -> Node0xcab1d8;
	Node0xcab1d8 -> Node0xcab238;
	Node0xcab238 -> Node0xcab6b8;
	Node0xcab6b8 -> Node0xcab798;
	Node0xcab798 -> Node0xcab898;
	Node0xcab898 -> Node0xcab958;
	Node0xcab958 -> Node0xcaba08;
	Node0xcaba08 -> Node0xcabc68;
	Node0xcabc68 -> Node0xcabd28;
	Node0xcabd28 -> Node0xcabe88;
	Node0xcabe88 -> Node0xcabee8;
	Node0xcabee8 -> Node0xcb1230;
	Node0xcb1230 -> Node0xcb1438;
	Node0xcb1438 -> Node0xcb1598;
	Node0xcb1598 -> Node0xcb16a8;
	Node0xcb16a8 -> Node0xcb1768;
edge [color=red]
	Node0xcab0c8 -> Node0xcab238;
	Node0xcab238 -> Node0xcab6b8;
	Node0xcab148 -> Node0xcab798;
	Node0xcab798 -> Node0xcab898;
	Node0xcab1d8 -> Node0xcab958;
	Node0xcab958 -> Node0xcaba08;
	Node0xcab0c8 -> Node0xcabc68;
	Node0xcab148 -> Node0xcabc68;
	Node0xcab1d8 -> Node0xcabc68;
	Node0xcab0c8 -> Node0xcabd28;
	Node0xcab148 -> Node0xcabe88;
	Node0xcab1d8 -> Node0xcabee8;
	Node0xcabd28 -> Node0xcb1230;
	Node0xcabe88 -> Node0xcb1230;
	Node0xcabee8 -> Node0xcb1230;
	Node0xcab958 -> Node0xcb1438;
	Node0xcab798 -> Node0xcb1598;
	Node0xcab238 -> Node0xcb16a8;
}
