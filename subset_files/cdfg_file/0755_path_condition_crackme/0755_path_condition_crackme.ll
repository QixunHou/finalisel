; ModuleID = '../.././c_source_file/0755_path_condition_crackme.c'
source_filename = "../.././c_source_file/0755_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %1, %0
  %5 = or i32 %2, %0
  %6 = xor i32 %5, -1
  %7 = or i32 %4, %6
  %8 = sub i32 0, %7
  %9 = xor i32 %1, %0
  %10 = xor i32 %9, -1
  %11 = xor i32 %2, %0
  %12 = xor i32 %11, -1
  %13 = and i32 %9, %12
  %14 = xor i32 %0, -1
  %15 = and i32 %2, %1
  %16 = and i32 %15, %14
  %17 = or i32 %2, %1
  %18 = and i32 %17, %0
  %19 = or i32 %16, %18
  %20 = and i32 %2, %0
  %21 = xor i32 %2, -1
  %22 = and i32 %21, %1
  %23 = or i32 %20, %22
  %24 = and i32 %21, %0
  %25 = or i32 %24, %10
  %26 = and i32 %11, %9
  %27 = xor i32 %1, -1
  %28 = and i32 %27, %0
  %29 = xor i32 %28, -1
  %30 = and i32 %29, %2
  %31 = xor i32 %24, -1
  %32 = or i32 %27, %0
  %33 = xor i32 %32, %2
  %34 = xor i32 %17, -1
  %35 = xor i32 %34, %0
  %36 = or i32 %21, %0
  %37 = xor i32 %36, -1
  %38 = or i32 %37, %27
  %39 = xor i32 %2, %1
  %40 = xor i32 %39, -1
  %41 = and i32 %40, %0
  %42 = xor i32 %15, -1
  %43 = xor i32 %42, %0
  %44 = and i32 %9, %21
  %45 = and i32 %27, %2
  %46 = and i32 %45, %14
  %47 = or i32 %27, %2
  %48 = and i32 %47, %0
  %49 = or i32 %46, %48
  %50 = shl i32 %4, 1
  %51 = or i32 %1, %0
  %52 = and i32 %51, %12
  %53 = xor i32 %51, -1
  %54 = or i32 %39, %53
  %55 = and i32 %45, %0
  %56 = xor i32 %55, -1
  %57 = xor i32 %56, %0
  %58 = xor i32 %57, %47
  %59 = or i32 %12, %53
  %60 = or i32 %40, %0
  %61 = shl i32 %60, 1
  %62 = and i32 %39, %0
  %63 = or i32 %16, %62
  %64 = or i32 %28, %40
  %65 = and i32 %39, %51
  %66 = and i32 %11, %10
  %67 = and i32 %39, %14
  %68 = and i32 %51, %2
  %69 = or i32 %11, %4
  %70 = or i32 %24, %1
  %71 = or i32 %28, %2
  %72 = or i32 %39, %14
  %73 = xor i32 %72, 2147483647
  %74 = or i32 %73, %46
  %75 = xor i32 %4, -1
  %76 = and i32 %12, %75
  %77 = or i32 %15, %0
  %78 = or i32 %42, %0
  %79 = add i32 %17, 1
  %80 = or i32 %40, %14
  %81 = xor i32 %22, -1
  %82 = xor i32 %20, %81
  %83 = or i32 %21, %1
  %84 = xor i32 %83, -1
  %85 = xor i32 %84, %0
  %86 = or i32 %20, %53
  %87 = xor i32 %20, -1
  %88 = and i32 %87, %10
  %89 = and i32 %11, %32
  %90 = xor i32 %15, %0
  %91 = add i32 %5, 1
  %92 = xor i32 %32, -1
  %93 = or i32 %12, %92
  %94 = xor i32 %37, %1
  %95 = or i32 %34, %14
  %96 = shl i32 %95, 1
  %97 = and i32 %12, %1
  %98 = and i32 %5, %10
  %99 = shl i32 %37, 1
  %100 = and i32 %87, %27
  %101 = shl i32 %21, 1
  %102 = or i32 %4, %12
  %103 = and i32 %47, %14
  %104 = xor i32 %103, %56
  %105 = or i32 %4, %37
  %106 = and i32 %36, %27
  %107 = add i32 %11, 1
  %108 = and i32 %15, %0
  %109 = and i32 %17, %14
  %110 = or i32 %108, %109
  %111 = xor i32 %39, %0
  %112 = xor i32 %111, %56
  %113 = and i32 %31, %27
  %114 = or i32 %4, %34
  %115 = or i32 %42, %14
  %116 = shl i32 %115, 1
  %117 = xor i32 %83, %4
  %118 = xor i32 %87, %1
  %119 = and i32 %21, %10
  %120 = add i32 %28, 1
  %121 = and i32 %32, %21
  %122 = xor i32 %92, %2
  %123 = or i32 %81, %14
  %124 = add i32 %22, 1
  %125 = and i32 %11, %27
  %126 = xor i32 %108, %111
  %127 = or i32 %4, %2
  %128 = and i32 %40, %75
  %129 = and i32 %36, %10
  %130 = or i32 %22, %28
  %131 = and i32 %11, %51
  %132 = xor i32 %5, %1
  %133 = or i32 %20, %92
  %134 = shl i32 %133, 1
  %135 = and i32 %10, %2
  %136 = or i32 %11, %28
  %137 = or i32 %9, %6
  %138 = or i32 %15, %14
  %139 = and i32 %87, %1
  %140 = or i32 %37, %1
  %141 = xor i32 %16, -1
  %142 = xor i32 %62, %141
  %143 = or i32 %11, %1
  %144 = and i32 %42, %0
  %145 = or i32 %84, %14
  %146 = xor i32 %75, %2
  %147 = and i32 %12, %10
  %148 = and i32 %32, %40
  %149 = or i32 %28, %12
  %150 = xor i32 %31, %1
  %151 = or i32 %22, %0
  %152 = and i32 %5, %1
  %153 = xor i32 %48, -1
  %154 = xor i32 %46, %153
  %155 = or i32 %20, %9
  %156 = or i32 %6, %1
  %157 = shl i32 %156, 1
  %158 = xor i32 %18, %141
  %159 = and i32 %51, %21
  %160 = xor i32 %40, %0
  %161 = xor i32 %53, %2
  %162 = or i32 %28, %21
  %163 = and i32 %75, %2
  %164 = and i32 %5, %27
  %165 = and i32 %32, %2
  %166 = xor i32 %36, %4
  %167 = xor i32 %46, %72
  %168 = xor i32 %6, %1
  %169 = and i32 %39, %75
  %170 = xor i32 %17, %0
  %171 = xor i32 %51, %2
  %172 = or i32 %9, %2
  %173 = xor i32 %17, %4
  %174 = or i32 %39, %28
  %175 = xor i32 %36, %1
  %176 = or i32 %92, %2
  %177 = shl i32 %176, 1
  %178 = xor i32 %24, %1
  %179 = and i32 %9, %2
  %180 = xor i32 %83, %0
  %181 = or i32 %39, %0
  %182 = xor i32 %55, %181
  %183 = and i32 %36, %9
  %184 = or i32 %15, %28
  %185 = or i32 %20, %34
  %186 = xor i32 %181, -1
  %187 = or i32 %55, %186
  %188 = xor i32 %109, -1
  %189 = xor i32 %108, %188
  %190 = xor i32 %5, %4
  %191 = or i32 %81, %0
  %192 = or i32 %55, %103
  %193 = or i32 %17, %14
  %194 = or i32 %83, %14
  %195 = and i32 %32, %12
  %196 = xor i32 %28, %42
  %197 = or i32 %4, %40
  %198 = or i32 %4, %21
  %199 = xor i32 %29, %2
  %200 = or i32 %21, %10
  %201 = and i32 %11, %75
  %202 = or i32 %17, %0
  %203 = and i32 %12, %29
  %204 = and i32 %39, %32
  %205 = add i32 %32, 1
  %206 = or i32 %24, %15
  %207 = shl i32 %109, 2
  %208 = or i32 %20, %1
  %209 = or i32 %21, %92
  %210 = or i32 %40, %53
  %211 = or i32 %21, %53
  %212 = or i32 %55, %111
  %213 = xor i32 %22, %0
  %214 = or i32 %6, %27
  %215 = and i32 %83, %14
  %216 = and i32 %34, %14
  %217 = shl i32 %216, 1
  %218 = and i32 %22, %14
  %219 = and i32 %34, %0
  %220 = mul i32 %219, -22
  %221 = and i32 %22, %0
  %222 = and i32 %84, %14
  %223 = mul i32 %16, 14
  %224 = and i32 %84, %0
  %225 = mul i32 %224, -11
  %226 = shl i32 %108, 3
  %227 = add i32 %9, %84
  %228 = add i32 %227, %36
  %229 = add i32 %228, %127
  %230 = add i32 %229, %121
  %231 = add i32 %230, %44
  %232 = add i32 %231, %221
  %233 = add i32 %232, %190
  %234 = add i32 %233, %185
  %235 = add i32 %234, %183
  %236 = add i32 %235, %144
  %237 = add i32 %236, %131
  %238 = add i32 %237, %97
  %239 = add i32 %238, %86
  %240 = add i32 %239, %26
  %241 = add i32 %240, %19
  %242 = add i32 %241, %74
  %243 = shl i32 %242, 1
  %244 = add i32 %165, %209
  %245 = sub i32 %169, %244
  %246 = add i32 %245, %129
  %247 = add i32 %246, %182
  %248 = mul i32 %247, 3
  %249 = add i32 %35, %124
  %250 = sub i32 %249, %100
  %251 = mul i32 %250, 5
  %252 = add i32 %222, %218
  %253 = shl i32 %252, 3
  %254 = add i32 %201, %51
  %255 = shl i32 %254, 2
  %256 = sub i32 2, %0
  %257 = add i32 %256, %14
  %258 = add i32 %257, %27
  %259 = sub i32 %258, %1
  %260 = add i32 %259, %9
  %261 = add i32 %260, %75
  %262 = add i32 %261, %28
  %263 = add i32 %262, %120
  %264 = add i32 %263, %2
  %265 = add i32 %264, %205
  %266 = sub i32 %265, %30
  %267 = add i32 %266, %31
  %268 = add i32 %267, %33
  %269 = sub i32 %268, %50
  %270 = sub i32 %269, %68
  %271 = add i32 %270, %71
  %272 = add i32 %271, %79
  %273 = add i32 %272, %91
  %274 = sub i32 %273, %24
  %275 = sub i32 %274, %101
  %276 = add i32 %275, %107
  %277 = add i32 %276, %119
  %278 = sub i32 %277, %122
  %279 = add i32 %278, %42
  %280 = sub i32 %279, %135
  %281 = sub i32 %280, %15
  %282 = sub i32 %281, %17
  %283 = add i32 %282, %146
  %284 = add i32 %283, %39
  %285 = sub i32 %284, %159
  %286 = sub i32 %285, %161
  %287 = sub i32 %286, %162
  %288 = sub i32 %287, %163
  %289 = sub i32 %288, %171
  %290 = sub i32 %289, %172
  %291 = add i32 %290, %179
  %292 = sub i32 %291, %198
  %293 = add i32 %292, %199
  %294 = sub i32 %293, %200
  %295 = add i32 %294, %20
  %296 = sub i32 %295, %211
  %297 = sub i32 %296, %13
  %298 = sub i32 %297, %23
  %299 = sub i32 %298, %25
  %300 = sub i32 %299, %38
  %301 = add i32 %300, %41
  %302 = sub i32 %301, %43
  %303 = sub i32 %302, %52
  %304 = add i32 %303, %54
  %305 = add i32 %304, %59
  %306 = add i32 %305, %64
  %307 = sub i32 %306, %65
  %308 = add i32 %307, %66
  %309 = sub i32 %308, %67
  %310 = sub i32 %309, %69
  %311 = sub i32 %310, %70
  %312 = sub i32 %311, %76
  %313 = sub i32 %312, %77
  %314 = add i32 %313, %78
  %315 = add i32 %314, %80
  %316 = sub i32 %315, %82
  %317 = add i32 %316, %85
  %318 = sub i32 %317, %88
  %319 = add i32 %318, %89
  %320 = sub i32 %319, %90
  %321 = add i32 %320, %93
  %322 = sub i32 %321, %94
  %323 = sub i32 %322, %98
  %324 = sub i32 %323, %99
  %325 = add i32 %324, %102
  %326 = sub i32 %325, %105
  %327 = add i32 %326, %106
  %328 = sub i32 %327, %113
  %329 = add i32 %328, %114
  %330 = add i32 %329, %117
  %331 = add i32 %330, %118
  %332 = sub i32 %331, %123
  %333 = sub i32 %332, %125
  %334 = add i32 %333, %128
  %335 = sub i32 %334, %130
  %336 = sub i32 %335, %132
  %337 = add i32 %336, %136
  %338 = sub i32 %337, %137
  %339 = add i32 %338, %138
  %340 = add i32 %339, %139
  %341 = sub i32 %340, %140
  %342 = add i32 %341, %143
  %343 = sub i32 %342, %145
  %344 = sub i32 %343, %147
  %345 = add i32 %344, %148
  %346 = add i32 %345, %149
  %347 = add i32 %346, %150
  %348 = add i32 %347, %151
  %349 = sub i32 %348, %152
  %350 = sub i32 %349, %155
  %351 = sub i32 %350, %160
  %352 = sub i32 %351, %164
  %353 = add i32 %352, %166
  %354 = sub i32 %353, %168
  %355 = add i32 %354, %170
  %356 = sub i32 %355, %173
  %357 = sub i32 %356, %174
  %358 = add i32 %357, %175
  %359 = sub i32 %358, %177
  %360 = add i32 %359, %178
  %361 = sub i32 %360, %180
  %362 = sub i32 %361, %184
  %363 = add i32 %362, %191
  %364 = sub i32 %363, %193
  %365 = add i32 %364, %194
  %366 = add i32 %365, %195
  %367 = sub i32 %366, %196
  %368 = add i32 %367, %197
  %369 = add i32 %368, %202
  %370 = add i32 %369, %203
  %371 = sub i32 %370, %204
  %372 = sub i32 %371, %18
  %373 = sub i32 %372, %206
  %374 = sub i32 %373, %208
  %375 = add i32 %374, %210
  %376 = add i32 %375, %213
  %377 = sub i32 %376, %214
  %378 = sub i32 %377, %215
  %379 = add i32 %378, %49
  %380 = add i32 %379, %58
  %381 = sub i32 %380, %61
  %382 = sub i32 %381, %63
  %383 = sub i32 %382, %96
  %384 = sub i32 %383, %104
  %385 = add i32 %384, %110
  %386 = add i32 %385, %112
  %387 = sub i32 %386, %116
  %388 = add i32 %387, %126
  %389 = sub i32 %388, %134
  %390 = add i32 %389, %142
  %391 = sub i32 %390, %154
  %392 = sub i32 %391, %157
  %393 = add i32 %392, %158
  %394 = sub i32 %393, %167
  %395 = add i32 %394, %187
  %396 = add i32 %395, %189
  %397 = add i32 %396, %192
  %398 = sub i32 %397, %207
  %399 = add i32 %398, %212
  %400 = sub i32 %399, %217
  %401 = add i32 %400, %220
  %402 = add i32 %401, %223
  %403 = add i32 %402, %225
  %404 = sub i32 %403, %226
  %405 = add i32 %404, %253
  %406 = add i32 %405, %255
  %407 = add i32 %406, %251
  %408 = add i32 %407, %248
  %409 = add i32 %408, %243
  %410 = icmp eq i32 %409, %8
  %411 = select i1 %410, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %412 = tail call i32 @puts(i8* nonnull dereferenceable(1) %411)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
