digraph "DFG for'main' function" {
	Node0x150f668[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x150f6e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x150f778[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x150f7d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x150fc58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x150fd38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x150fe38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x150fef8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x150ffa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1510208[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x15102c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1510428[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1510488[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1517930[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1517b38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1517c98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1517da8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1517e68[shape=record, label="  ret i32 0"];
	Node0x150f668 -> Node0x150f6e8;
	Node0x150f6e8 -> Node0x150f778;
	Node0x150f778 -> Node0x150f7d8;
	Node0x150f7d8 -> Node0x150fc58;
	Node0x150fc58 -> Node0x150fd38;
	Node0x150fd38 -> Node0x150fe38;
	Node0x150fe38 -> Node0x150fef8;
	Node0x150fef8 -> Node0x150ffa8;
	Node0x150ffa8 -> Node0x1510208;
	Node0x1510208 -> Node0x15102c8;
	Node0x15102c8 -> Node0x1510428;
	Node0x1510428 -> Node0x1510488;
	Node0x1510488 -> Node0x1517930;
	Node0x1517930 -> Node0x1517b38;
	Node0x1517b38 -> Node0x1517c98;
	Node0x1517c98 -> Node0x1517da8;
	Node0x1517da8 -> Node0x1517e68;
edge [color=red]
	Node0x150f668 -> Node0x150f7d8;
	Node0x150f7d8 -> Node0x150fc58;
	Node0x150f6e8 -> Node0x150fd38;
	Node0x150fd38 -> Node0x150fe38;
	Node0x150f778 -> Node0x150fef8;
	Node0x150fef8 -> Node0x150ffa8;
	Node0x150f668 -> Node0x1510208;
	Node0x150f6e8 -> Node0x1510208;
	Node0x150f778 -> Node0x1510208;
	Node0x150f668 -> Node0x15102c8;
	Node0x150f6e8 -> Node0x1510428;
	Node0x150f778 -> Node0x1510488;
	Node0x15102c8 -> Node0x1517930;
	Node0x1510428 -> Node0x1517930;
	Node0x1510488 -> Node0x1517930;
	Node0x150fef8 -> Node0x1517b38;
	Node0x150fd38 -> Node0x1517c98;
	Node0x150f7d8 -> Node0x1517da8;
}
