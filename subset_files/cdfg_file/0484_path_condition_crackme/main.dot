digraph "DFG for'main' function" {
	Node0x5c0d28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5c0da8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5c0e38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x5c0e98[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x5c1318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5c42c8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x5c43a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5c4468[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x5c4518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5c4778[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x5c4838[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5c57a8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x5c5e18[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x5c5f10[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x5c6118[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5c6278[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5c6388[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5c6448[shape=record, label="  ret i32 0"];
	Node0x5c0d28 -> Node0x5c0da8;
	Node0x5c0da8 -> Node0x5c0e38;
	Node0x5c0e38 -> Node0x5c0e98;
	Node0x5c0e98 -> Node0x5c1318;
	Node0x5c1318 -> Node0x5c42c8;
	Node0x5c42c8 -> Node0x5c43a8;
	Node0x5c43a8 -> Node0x5c4468;
	Node0x5c4468 -> Node0x5c4518;
	Node0x5c4518 -> Node0x5c4778;
	Node0x5c4778 -> Node0x5c4838;
	Node0x5c4838 -> Node0x5c57a8;
	Node0x5c57a8 -> Node0x5c5e18;
	Node0x5c5e18 -> Node0x5c5f10;
	Node0x5c5f10 -> Node0x5c6118;
	Node0x5c6118 -> Node0x5c6278;
	Node0x5c6278 -> Node0x5c6388;
	Node0x5c6388 -> Node0x5c6448;
edge [color=red]
	Node0x5c0d28 -> Node0x5c0e98;
	Node0x5c0e98 -> Node0x5c1318;
	Node0x5c0da8 -> Node0x5c42c8;
	Node0x5c42c8 -> Node0x5c43a8;
	Node0x5c0e38 -> Node0x5c4468;
	Node0x5c4468 -> Node0x5c4518;
	Node0x5c0d28 -> Node0x5c4778;
	Node0x5c0da8 -> Node0x5c4778;
	Node0x5c0e38 -> Node0x5c4778;
	Node0x5c0d28 -> Node0x5c4838;
	Node0x5c0da8 -> Node0x5c57a8;
	Node0x5c0e38 -> Node0x5c5e18;
	Node0x5c4838 -> Node0x5c5f10;
	Node0x5c57a8 -> Node0x5c5f10;
	Node0x5c5e18 -> Node0x5c5f10;
	Node0x5c4468 -> Node0x5c6118;
	Node0x5c42c8 -> Node0x5c6278;
	Node0x5c0e98 -> Node0x5c6388;
}
