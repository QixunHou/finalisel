digraph "DFG for'crackme' function" {
	Node0x91ea60[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x91ead0[shape=record, label="  %4 = or i32 %3, %0"];
	Node0x91eb90[shape=record, label="  %5 = and i32 %1, %0"];
	Node0x91ec00[shape=record, label="  %6 = xor i32 %1, %0"];
	Node0x91ec70[shape=record, label="  %7 = or i32 %1, %0"];
	Node0x91ece0[shape=record, label="  %8 = xor i32 %4, -1"];
	Node0x91ed50[shape=record, label="  %9 = and i32 %3, %0"];
	Node0x91edc0[shape=record, label="  %10 = shl i32 %9, 2"];
	Node0x91ee30[shape=record, label="  %11 = add i32 %5, %8"];
	Node0x91eed0[shape=record, label="  %12 = mul i32 %11, -3"];
	Node0x91ef40[shape=record, label="  %13 = add i32 %6, %7"];
	Node0x91efe0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x91f050[shape=record, label="  %15 = add i32 %4, 2"];
	Node0x91f0c0[shape=record, label="  %16 = add i32 %15, %5"];
	Node0x91f130[shape=record, label="  %17 = sub i32 %16, %10"];
	Node0x91f1a0[shape=record, label="  %18 = add i32 %17, %12"];
	Node0x91f210[shape=record, label="  %19 = add i32 %18, %14"];
	Node0x91f280[shape=record, label="  %20 = icmp eq i32 %19, 1"];
	Node0x8bf268[shape=record, label="  %21 = select i1 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x91f720[shape=record, label="  %22 = tail call i32 @puts(i8* nonnull dereferenceable(1) %21)"];
	Node0x91f770[shape=record, label="  ret void"];
	Node0x91ea60 -> Node0x91ead0;
	Node0x91ead0 -> Node0x91eb90;
	Node0x91eb90 -> Node0x91ec00;
	Node0x91ec00 -> Node0x91ec70;
	Node0x91ec70 -> Node0x91ece0;
	Node0x91ece0 -> Node0x91ed50;
	Node0x91ed50 -> Node0x91edc0;
	Node0x91edc0 -> Node0x91ee30;
	Node0x91ee30 -> Node0x91eed0;
	Node0x91eed0 -> Node0x91ef40;
	Node0x91ef40 -> Node0x91efe0;
	Node0x91efe0 -> Node0x91f050;
	Node0x91f050 -> Node0x91f0c0;
	Node0x91f0c0 -> Node0x91f130;
	Node0x91f130 -> Node0x91f1a0;
	Node0x91f1a0 -> Node0x91f210;
	Node0x91f210 -> Node0x91f280;
	Node0x91f280 -> Node0x8bf268;
	Node0x8bf268 -> Node0x91f720;
	Node0x91f720 -> Node0x91f770;
edge [color=red]
	Node0x91ea60 -> Node0x91ead0;
	Node0x91ead0 -> Node0x91ece0;
	Node0x91ea60 -> Node0x91ed50;
	Node0x91ed50 -> Node0x91edc0;
	Node0x91eb90 -> Node0x91ee30;
	Node0x91ece0 -> Node0x91ee30;
	Node0x91ee30 -> Node0x91eed0;
	Node0x91ec00 -> Node0x91ef40;
	Node0x91ec70 -> Node0x91ef40;
	Node0x91ef40 -> Node0x91efe0;
	Node0x91ead0 -> Node0x91f050;
	Node0x91f050 -> Node0x91f0c0;
	Node0x91eb90 -> Node0x91f0c0;
	Node0x91f0c0 -> Node0x91f130;
	Node0x91edc0 -> Node0x91f130;
	Node0x91f130 -> Node0x91f1a0;
	Node0x91eed0 -> Node0x91f1a0;
	Node0x91f1a0 -> Node0x91f210;
	Node0x91efe0 -> Node0x91f210;
	Node0x91f210 -> Node0x91f280;
	Node0x91f280 -> Node0x8bf268;
	Node0x8bf268 -> Node0x91f720;
}
