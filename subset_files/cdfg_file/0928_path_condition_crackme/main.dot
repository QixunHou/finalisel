digraph "DFG for'main' function" {
	Node0x1f2abb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f2ac38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f2acc8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f2ad28[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1f2add8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1f2b208[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f2b2e8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1f2b3e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f2b4a8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1f2b558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1f2b618[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1f2b6c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1f25b40[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1f2b8c8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f2c838[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f2cea8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f2cf08[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1f2cf80[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x1f2cff0[shape=record, label="  %15 = or i32 %13, %10"];
	Node0x1f2d060[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0x1f2d0d0[shape=record, label="  %17 = and i32 %13, %10"];
	Node0x1f2d140[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x1f2d1b0[shape=record, label="  %19 = add i32 %14, %18"];
	Node0x1f2d220[shape=record, label="  %20 = sub i32 %19, %16"];
	Node0x1f2d290[shape=record, label="  %21 = xor i32 %12, -1"];
	Node0x1f2d300[shape=record, label="  %22 = and i32 %11, %21"];
	Node0x1f2d370[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x1f2d3e0[shape=record, label="  %24 = shl i32 %11, 1"];
	Node0x1f2d450[shape=record, label="  %25 = or i32 %11, %21"];
	Node0x1f2d4c0[shape=record, label="  %26 = shl i32 %14, 2"];
	Node0x1f2d530[shape=record, label="  %27 = xor i32 %26, -4"];
	Node0x1f2d5a0[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0x1f2d610[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x1f2d680[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x1f2d6f0[shape=record, label="  %31 = and i32 %13, %30"];
	Node0x1f2d760[shape=record, label="  %32 = xor i32 %31, -1"];
	Node0x1f2d7d0[shape=record, label="  %33 = or i32 %13, %30"];
	Node0x1f2d840[shape=record, label="  %34 = xor i32 %15, -1"];
	Node0x1f2d8b0[shape=record, label="  %35 = mul i32 %17, -3"];
	Node0x1f2d920[shape=record, label="  %36 = shl i32 %10, 1"];
	Node0x1f2d990[shape=record, label="  %37 = sub i32 %11, %36"];
	Node0x1f2da00[shape=record, label="  %38 = sub i32 %37, %24"];
	Node0x1f2da70[shape=record, label="  %39 = add i32 %38, %21"];
	Node0x1f2dae0[shape=record, label="  %40 = sub i32 %39, %12"];
	Node0x1f2db50[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x1f2dbc0[shape=record, label="  %42 = add i32 %41, %25"];
	Node0x1f2dc30[shape=record, label="  %43 = sub i32 %42, %22"];
	Node0x1f2dca0[shape=record, label="  %44 = add i32 %43, %13"];
	Node0x1f2dd10[shape=record, label="  %45 = add i32 %44, %29"];
	Node0x1f2dd80[shape=record, label="  %46 = add i32 %45, %32"];
	Node0x1f2ddf0[shape=record, label="  %47 = sub i32 %46, %28"];
	Node0x1f2de60[shape=record, label="  %48 = sub i32 %47, %33"];
	Node0x1f2ded0[shape=record, label="  %49 = add i32 %48, %34"];
	Node0x1f2df40[shape=record, label="  %50 = sub i32 %49, %31"];
	Node0x1f2dfb0[shape=record, label="  %51 = sub i32 %50, %27"];
	Node0x1f2e020[shape=record, label="  %52 = add i32 %51, %35"];
	Node0x1f2e090[shape=record, label="  %53 = icmp eq i32 %20, %52"];
	Node0x1eca8b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1f2e120[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x1f2e3c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1f2e528[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1f2e638[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f2e748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f2e808[shape=record, label="  ret i32 0"];
	Node0x1f2abb8 -> Node0x1f2ac38;
	Node0x1f2ac38 -> Node0x1f2acc8;
	Node0x1f2acc8 -> Node0x1f2ad28;
	Node0x1f2ad28 -> Node0x1f2add8;
	Node0x1f2add8 -> Node0x1f2b208;
	Node0x1f2b208 -> Node0x1f2b2e8;
	Node0x1f2b2e8 -> Node0x1f2b3e8;
	Node0x1f2b3e8 -> Node0x1f2b4a8;
	Node0x1f2b4a8 -> Node0x1f2b558;
	Node0x1f2b558 -> Node0x1f2b618;
	Node0x1f2b618 -> Node0x1f2b6c8;
	Node0x1f2b6c8 -> Node0x1f25b40;
	Node0x1f25b40 -> Node0x1f2b8c8;
	Node0x1f2b8c8 -> Node0x1f2c838;
	Node0x1f2c838 -> Node0x1f2cea8;
	Node0x1f2cea8 -> Node0x1f2cf08;
	Node0x1f2cf08 -> Node0x1f2cf80;
	Node0x1f2cf80 -> Node0x1f2cff0;
	Node0x1f2cff0 -> Node0x1f2d060;
	Node0x1f2d060 -> Node0x1f2d0d0;
	Node0x1f2d0d0 -> Node0x1f2d140;
	Node0x1f2d140 -> Node0x1f2d1b0;
	Node0x1f2d1b0 -> Node0x1f2d220;
	Node0x1f2d220 -> Node0x1f2d290;
	Node0x1f2d290 -> Node0x1f2d300;
	Node0x1f2d300 -> Node0x1f2d370;
	Node0x1f2d370 -> Node0x1f2d3e0;
	Node0x1f2d3e0 -> Node0x1f2d450;
	Node0x1f2d450 -> Node0x1f2d4c0;
	Node0x1f2d4c0 -> Node0x1f2d530;
	Node0x1f2d530 -> Node0x1f2d5a0;
	Node0x1f2d5a0 -> Node0x1f2d610;
	Node0x1f2d610 -> Node0x1f2d680;
	Node0x1f2d680 -> Node0x1f2d6f0;
	Node0x1f2d6f0 -> Node0x1f2d760;
	Node0x1f2d760 -> Node0x1f2d7d0;
	Node0x1f2d7d0 -> Node0x1f2d840;
	Node0x1f2d840 -> Node0x1f2d8b0;
	Node0x1f2d8b0 -> Node0x1f2d920;
	Node0x1f2d920 -> Node0x1f2d990;
	Node0x1f2d990 -> Node0x1f2da00;
	Node0x1f2da00 -> Node0x1f2da70;
	Node0x1f2da70 -> Node0x1f2dae0;
	Node0x1f2dae0 -> Node0x1f2db50;
	Node0x1f2db50 -> Node0x1f2dbc0;
	Node0x1f2dbc0 -> Node0x1f2dc30;
	Node0x1f2dc30 -> Node0x1f2dca0;
	Node0x1f2dca0 -> Node0x1f2dd10;
	Node0x1f2dd10 -> Node0x1f2dd80;
	Node0x1f2dd80 -> Node0x1f2ddf0;
	Node0x1f2ddf0 -> Node0x1f2de60;
	Node0x1f2de60 -> Node0x1f2ded0;
	Node0x1f2ded0 -> Node0x1f2df40;
	Node0x1f2df40 -> Node0x1f2dfb0;
	Node0x1f2dfb0 -> Node0x1f2e020;
	Node0x1f2e020 -> Node0x1f2e090;
	Node0x1f2e090 -> Node0x1eca8b8;
	Node0x1eca8b8 -> Node0x1f2e120;
	Node0x1f2e120 -> Node0x1f2e3c8;
	Node0x1f2e3c8 -> Node0x1f2e528;
	Node0x1f2e528 -> Node0x1f2e638;
	Node0x1f2e638 -> Node0x1f2e748;
	Node0x1f2e748 -> Node0x1f2e808;
edge [color=red]
	Node0x1f2abb8 -> Node0x1f2add8;
	Node0x1f2add8 -> Node0x1f2b208;
	Node0x1f2ac38 -> Node0x1f2b2e8;
	Node0x1f2b2e8 -> Node0x1f2b3e8;
	Node0x1f2acc8 -> Node0x1f2b4a8;
	Node0x1f2b4a8 -> Node0x1f2b558;
	Node0x1f2ad28 -> Node0x1f2b618;
	Node0x1f2b618 -> Node0x1f2b6c8;
	Node0x1f2abb8 -> Node0x1f25b40;
	Node0x1f2ac38 -> Node0x1f25b40;
	Node0x1f2acc8 -> Node0x1f25b40;
	Node0x1f2ad28 -> Node0x1f25b40;
	Node0x1f2abb8 -> Node0x1f2b8c8;
	Node0x1f2ac38 -> Node0x1f2c838;
	Node0x1f2acc8 -> Node0x1f2cea8;
	Node0x1f2ad28 -> Node0x1f2cf08;
	Node0x1f2cea8 -> Node0x1f2cf80;
	Node0x1f2c838 -> Node0x1f2cf80;
	Node0x1f2cf08 -> Node0x1f2cff0;
	Node0x1f2b8c8 -> Node0x1f2cff0;
	Node0x1f2cff0 -> Node0x1f2d060;
	Node0x1f2cf08 -> Node0x1f2d0d0;
	Node0x1f2b8c8 -> Node0x1f2d0d0;
	Node0x1f2d0d0 -> Node0x1f2d140;
	Node0x1f2cf80 -> Node0x1f2d1b0;
	Node0x1f2d140 -> Node0x1f2d1b0;
	Node0x1f2d1b0 -> Node0x1f2d220;
	Node0x1f2d060 -> Node0x1f2d220;
	Node0x1f2cea8 -> Node0x1f2d290;
	Node0x1f2c838 -> Node0x1f2d300;
	Node0x1f2d290 -> Node0x1f2d300;
	Node0x1f2d300 -> Node0x1f2d370;
	Node0x1f2c838 -> Node0x1f2d3e0;
	Node0x1f2c838 -> Node0x1f2d450;
	Node0x1f2d290 -> Node0x1f2d450;
	Node0x1f2cf80 -> Node0x1f2d4c0;
	Node0x1f2d4c0 -> Node0x1f2d530;
	Node0x1f2cf08 -> Node0x1f2d5a0;
	Node0x1f2b8c8 -> Node0x1f2d5a0;
	Node0x1f2d5a0 -> Node0x1f2d610;
	Node0x1f2b8c8 -> Node0x1f2d680;
	Node0x1f2cf08 -> Node0x1f2d6f0;
	Node0x1f2d680 -> Node0x1f2d6f0;
	Node0x1f2d6f0 -> Node0x1f2d760;
	Node0x1f2cf08 -> Node0x1f2d7d0;
	Node0x1f2d680 -> Node0x1f2d7d0;
	Node0x1f2cff0 -> Node0x1f2d840;
	Node0x1f2d0d0 -> Node0x1f2d8b0;
	Node0x1f2b8c8 -> Node0x1f2d920;
	Node0x1f2c838 -> Node0x1f2d990;
	Node0x1f2d920 -> Node0x1f2d990;
	Node0x1f2d990 -> Node0x1f2da00;
	Node0x1f2d3e0 -> Node0x1f2da00;
	Node0x1f2da00 -> Node0x1f2da70;
	Node0x1f2d290 -> Node0x1f2da70;
	Node0x1f2da70 -> Node0x1f2dae0;
	Node0x1f2cea8 -> Node0x1f2dae0;
	Node0x1f2dae0 -> Node0x1f2db50;
	Node0x1f2d370 -> Node0x1f2db50;
	Node0x1f2db50 -> Node0x1f2dbc0;
	Node0x1f2d450 -> Node0x1f2dbc0;
	Node0x1f2dbc0 -> Node0x1f2dc30;
	Node0x1f2d300 -> Node0x1f2dc30;
	Node0x1f2dc30 -> Node0x1f2dca0;
	Node0x1f2cf08 -> Node0x1f2dca0;
	Node0x1f2dca0 -> Node0x1f2dd10;
	Node0x1f2d610 -> Node0x1f2dd10;
	Node0x1f2dd10 -> Node0x1f2dd80;
	Node0x1f2d760 -> Node0x1f2dd80;
	Node0x1f2dd80 -> Node0x1f2ddf0;
	Node0x1f2d5a0 -> Node0x1f2ddf0;
	Node0x1f2ddf0 -> Node0x1f2de60;
	Node0x1f2d7d0 -> Node0x1f2de60;
	Node0x1f2de60 -> Node0x1f2ded0;
	Node0x1f2d840 -> Node0x1f2ded0;
	Node0x1f2ded0 -> Node0x1f2df40;
	Node0x1f2d6f0 -> Node0x1f2df40;
	Node0x1f2df40 -> Node0x1f2dfb0;
	Node0x1f2d530 -> Node0x1f2dfb0;
	Node0x1f2dfb0 -> Node0x1f2e020;
	Node0x1f2d8b0 -> Node0x1f2e020;
	Node0x1f2d220 -> Node0x1f2e090;
	Node0x1f2e020 -> Node0x1f2e090;
	Node0x1f2e090 -> Node0x1eca8b8;
	Node0x1eca8b8 -> Node0x1f2e120;
	Node0x1f2b618 -> Node0x1f2e3c8;
	Node0x1f2b4a8 -> Node0x1f2e528;
	Node0x1f2b2e8 -> Node0x1f2e638;
	Node0x1f2add8 -> Node0x1f2e748;
}
