digraph "DFG for'main' function" {
	Node0x23f15f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23f1678[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23f5038[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23f5098[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x23f5508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23f55e8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x23f56e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23f57a8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x23f5858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23f5ab8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x23f5b78[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23f6ae8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23f7158[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x23f7250[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x23f7458[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23f75b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23f76c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23f7788[shape=record, label="  ret i32 0"];
	Node0x23f15f8 -> Node0x23f1678;
	Node0x23f1678 -> Node0x23f5038;
	Node0x23f5038 -> Node0x23f5098;
	Node0x23f5098 -> Node0x23f5508;
	Node0x23f5508 -> Node0x23f55e8;
	Node0x23f55e8 -> Node0x23f56e8;
	Node0x23f56e8 -> Node0x23f57a8;
	Node0x23f57a8 -> Node0x23f5858;
	Node0x23f5858 -> Node0x23f5ab8;
	Node0x23f5ab8 -> Node0x23f5b78;
	Node0x23f5b78 -> Node0x23f6ae8;
	Node0x23f6ae8 -> Node0x23f7158;
	Node0x23f7158 -> Node0x23f7250;
	Node0x23f7250 -> Node0x23f7458;
	Node0x23f7458 -> Node0x23f75b8;
	Node0x23f75b8 -> Node0x23f76c8;
	Node0x23f76c8 -> Node0x23f7788;
edge [color=red]
	Node0x23f15f8 -> Node0x23f5098;
	Node0x23f5098 -> Node0x23f5508;
	Node0x23f1678 -> Node0x23f55e8;
	Node0x23f55e8 -> Node0x23f56e8;
	Node0x23f5038 -> Node0x23f57a8;
	Node0x23f57a8 -> Node0x23f5858;
	Node0x23f15f8 -> Node0x23f5ab8;
	Node0x23f1678 -> Node0x23f5ab8;
	Node0x23f5038 -> Node0x23f5ab8;
	Node0x23f15f8 -> Node0x23f5b78;
	Node0x23f1678 -> Node0x23f6ae8;
	Node0x23f5038 -> Node0x23f7158;
	Node0x23f5b78 -> Node0x23f7250;
	Node0x23f6ae8 -> Node0x23f7250;
	Node0x23f7158 -> Node0x23f7250;
	Node0x23f57a8 -> Node0x23f7458;
	Node0x23f55e8 -> Node0x23f75b8;
	Node0x23f5098 -> Node0x23f76c8;
}
