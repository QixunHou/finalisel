digraph "DFG for'main' function" {
	Node0x12ca198[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12ca218[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x12ca2a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x12ca308[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x12ca788[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12ca868[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x12ca968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12caa28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x12caad8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12cad38[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x12cadf8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12caf58[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x12cafb8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x12d04c0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x12d06c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12d0828[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12d0938[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12d09f8[shape=record, label="  ret i32 0"];
	Node0x12ca198 -> Node0x12ca218;
	Node0x12ca218 -> Node0x12ca2a8;
	Node0x12ca2a8 -> Node0x12ca308;
	Node0x12ca308 -> Node0x12ca788;
	Node0x12ca788 -> Node0x12ca868;
	Node0x12ca868 -> Node0x12ca968;
	Node0x12ca968 -> Node0x12caa28;
	Node0x12caa28 -> Node0x12caad8;
	Node0x12caad8 -> Node0x12cad38;
	Node0x12cad38 -> Node0x12cadf8;
	Node0x12cadf8 -> Node0x12caf58;
	Node0x12caf58 -> Node0x12cafb8;
	Node0x12cafb8 -> Node0x12d04c0;
	Node0x12d04c0 -> Node0x12d06c8;
	Node0x12d06c8 -> Node0x12d0828;
	Node0x12d0828 -> Node0x12d0938;
	Node0x12d0938 -> Node0x12d09f8;
edge [color=red]
	Node0x12ca198 -> Node0x12ca308;
	Node0x12ca308 -> Node0x12ca788;
	Node0x12ca218 -> Node0x12ca868;
	Node0x12ca868 -> Node0x12ca968;
	Node0x12ca2a8 -> Node0x12caa28;
	Node0x12caa28 -> Node0x12caad8;
	Node0x12ca198 -> Node0x12cad38;
	Node0x12ca218 -> Node0x12cad38;
	Node0x12ca2a8 -> Node0x12cad38;
	Node0x12ca198 -> Node0x12cadf8;
	Node0x12ca218 -> Node0x12caf58;
	Node0x12ca2a8 -> Node0x12cafb8;
	Node0x12cadf8 -> Node0x12d04c0;
	Node0x12caf58 -> Node0x12d04c0;
	Node0x12cafb8 -> Node0x12d04c0;
	Node0x12caa28 -> Node0x12d06c8;
	Node0x12ca868 -> Node0x12d0828;
	Node0x12ca308 -> Node0x12d0938;
}
