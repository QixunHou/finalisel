digraph "DFG for'crackme' function" {
	Node0x24e9a30[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x24e9aa0[shape=record, label="  %4 = or i32 %1, %0"];
	Node0x24e9b60[shape=record, label="  %5 = or i32 %3, %0"];
	Node0x24e9bd0[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x24e9c40[shape=record, label="  %7 = and i32 %3, %0"];
	Node0x24e9cb0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x24e9d20[shape=record, label="  %9 = xor i32 %4, -1"];
	Node0x24e9dc0[shape=record, label="  %10 = mul i32 %9, -3"];
	Node0x24e9e60[shape=record, label="  %11 = xor i32 %6, -2"];
	Node0x24e9ed0[shape=record, label="  %12 = mul i32 %1, -2"];
	Node0x24e9f40[shape=record, label="  %13 = add i32 %9, %8"];
	Node0x24e9fb0[shape=record, label="  %14 = sub i32 %13, %7"];
	Node0x24ea020[shape=record, label="  %15 = add i32 %14, %12"];
	Node0x24ea090[shape=record, label="  %16 = add i32 %15, %6"];
	Node0x24ea100[shape=record, label="  %17 = add i32 %16, %10"];
	Node0x24ea170[shape=record, label="  %18 = add i32 %17, %11"];
	Node0x24ea1e0[shape=record, label="  %19 = icmp eq i32 %18, -1"];
	Node0x248a268[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x24ea680[shape=record, label="  %21 = tail call i32 @puts(i8* nonnull dereferenceable(1) %20)"];
	Node0x24ea6d0[shape=record, label="  ret void"];
	Node0x24e9a30 -> Node0x24e9aa0;
	Node0x24e9aa0 -> Node0x24e9b60;
	Node0x24e9b60 -> Node0x24e9bd0;
	Node0x24e9bd0 -> Node0x24e9c40;
	Node0x24e9c40 -> Node0x24e9cb0;
	Node0x24e9cb0 -> Node0x24e9d20;
	Node0x24e9d20 -> Node0x24e9dc0;
	Node0x24e9dc0 -> Node0x24e9e60;
	Node0x24e9e60 -> Node0x24e9ed0;
	Node0x24e9ed0 -> Node0x24e9f40;
	Node0x24e9f40 -> Node0x24e9fb0;
	Node0x24e9fb0 -> Node0x24ea020;
	Node0x24ea020 -> Node0x24ea090;
	Node0x24ea090 -> Node0x24ea100;
	Node0x24ea100 -> Node0x24ea170;
	Node0x24ea170 -> Node0x24ea1e0;
	Node0x24ea1e0 -> Node0x248a268;
	Node0x248a268 -> Node0x24ea680;
	Node0x24ea680 -> Node0x24ea6d0;
edge [color=red]
	Node0x24e9a30 -> Node0x24e9b60;
	Node0x24e9b60 -> Node0x24e9bd0;
	Node0x24e9a30 -> Node0x24e9c40;
	Node0x24e9c40 -> Node0x24e9cb0;
	Node0x24e9aa0 -> Node0x24e9d20;
	Node0x24e9d20 -> Node0x24e9dc0;
	Node0x24e9bd0 -> Node0x24e9e60;
	Node0x24e9d20 -> Node0x24e9f40;
	Node0x24e9cb0 -> Node0x24e9f40;
	Node0x24e9f40 -> Node0x24e9fb0;
	Node0x24e9c40 -> Node0x24e9fb0;
	Node0x24e9fb0 -> Node0x24ea020;
	Node0x24e9ed0 -> Node0x24ea020;
	Node0x24ea020 -> Node0x24ea090;
	Node0x24e9bd0 -> Node0x24ea090;
	Node0x24ea090 -> Node0x24ea100;
	Node0x24e9dc0 -> Node0x24ea100;
	Node0x24ea100 -> Node0x24ea170;
	Node0x24e9e60 -> Node0x24ea170;
	Node0x24ea170 -> Node0x24ea1e0;
	Node0x24ea1e0 -> Node0x248a268;
	Node0x248a268 -> Node0x24ea680;
}
