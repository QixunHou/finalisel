digraph "DFG for'main' function" {
	Node0x24ea898[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x24ea918[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x24ea9a8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x24eae08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24eaee8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x24eb008[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24eb240[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x24eb2f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x24ec268[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x24ec8f0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x24ec960[shape=record, label="  %9 = or i32 %7, %6"];
	Node0x24ec9d0[shape=record, label="  %10 = or i32 %6, %8"];
	Node0x24eca40[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x24ecab0[shape=record, label="  %12 = and i32 %6, %8"];
	Node0x24ecb20[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x24ecb90[shape=record, label="  %14 = xor i32 %9, -1"];
	Node0x24ecc00[shape=record, label="  %15 = mul i32 %14, -3"];
	Node0x24ecc70[shape=record, label="  %16 = xor i32 %11, -2"];
	Node0x24ecce0[shape=record, label="  %17 = mul i32 %7, -2"];
	Node0x24ecd50[shape=record, label="  %18 = add i32 %14, %13"];
	Node0x24ecdc0[shape=record, label="  %19 = sub i32 %18, %12"];
	Node0x24ece30[shape=record, label="  %20 = add i32 %19, %17"];
	Node0x24ecea0[shape=record, label="  %21 = add i32 %20, %11"];
	Node0x24ecf10[shape=record, label="  %22 = add i32 %21, %15"];
	Node0x24ecf80[shape=record, label="  %23 = add i32 %22, %16"];
	Node0x24ecff0[shape=record, label="  %24 = icmp eq i32 %23, -1"];
	Node0x248b9d8[shape=record, label="  %25 = select i1 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x24ed080[shape=record, label="  %26 = call i32 @puts(i8* nonnull dereferenceable(1) %25) #5"];
	Node0x24ed2d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24ed438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24ed4f8[shape=record, label="  ret i32 0"];
	Node0x24ea898 -> Node0x24ea918;
	Node0x24ea918 -> Node0x24ea9a8;
	Node0x24ea9a8 -> Node0x24eae08;
	Node0x24eae08 -> Node0x24eaee8;
	Node0x24eaee8 -> Node0x24eb008;
	Node0x24eb008 -> Node0x24eb240;
	Node0x24eb240 -> Node0x24eb2f8;
	Node0x24eb2f8 -> Node0x24ec268;
	Node0x24ec268 -> Node0x24ec8f0;
	Node0x24ec8f0 -> Node0x24ec960;
	Node0x24ec960 -> Node0x24ec9d0;
	Node0x24ec9d0 -> Node0x24eca40;
	Node0x24eca40 -> Node0x24ecab0;
	Node0x24ecab0 -> Node0x24ecb20;
	Node0x24ecb20 -> Node0x24ecb90;
	Node0x24ecb90 -> Node0x24ecc00;
	Node0x24ecc00 -> Node0x24ecc70;
	Node0x24ecc70 -> Node0x24ecce0;
	Node0x24ecce0 -> Node0x24ecd50;
	Node0x24ecd50 -> Node0x24ecdc0;
	Node0x24ecdc0 -> Node0x24ece30;
	Node0x24ece30 -> Node0x24ecea0;
	Node0x24ecea0 -> Node0x24ecf10;
	Node0x24ecf10 -> Node0x24ecf80;
	Node0x24ecf80 -> Node0x24ecff0;
	Node0x24ecff0 -> Node0x248b9d8;
	Node0x248b9d8 -> Node0x24ed080;
	Node0x24ed080 -> Node0x24ed2d8;
	Node0x24ed2d8 -> Node0x24ed438;
	Node0x24ed438 -> Node0x24ed4f8;
edge [color=red]
	Node0x24ea898 -> Node0x24ea9a8;
	Node0x24ea9a8 -> Node0x24eae08;
	Node0x24ea918 -> Node0x24eaee8;
	Node0x24eaee8 -> Node0x24eb008;
	Node0x24ea898 -> Node0x24eb240;
	Node0x24ea918 -> Node0x24eb240;
	Node0x24ea898 -> Node0x24eb2f8;
	Node0x24ea918 -> Node0x24ec268;
	Node0x24ec268 -> Node0x24ec8f0;
	Node0x24ec268 -> Node0x24ec960;
	Node0x24eb2f8 -> Node0x24ec960;
	Node0x24eb2f8 -> Node0x24ec9d0;
	Node0x24ec8f0 -> Node0x24ec9d0;
	Node0x24ec9d0 -> Node0x24eca40;
	Node0x24eb2f8 -> Node0x24ecab0;
	Node0x24ec8f0 -> Node0x24ecab0;
	Node0x24ecab0 -> Node0x24ecb20;
	Node0x24ec960 -> Node0x24ecb90;
	Node0x24ecb90 -> Node0x24ecc00;
	Node0x24eca40 -> Node0x24ecc70;
	Node0x24ec268 -> Node0x24ecce0;
	Node0x24ecb90 -> Node0x24ecd50;
	Node0x24ecb20 -> Node0x24ecd50;
	Node0x24ecd50 -> Node0x24ecdc0;
	Node0x24ecab0 -> Node0x24ecdc0;
	Node0x24ecdc0 -> Node0x24ece30;
	Node0x24ecce0 -> Node0x24ece30;
	Node0x24ece30 -> Node0x24ecea0;
	Node0x24eca40 -> Node0x24ecea0;
	Node0x24ecea0 -> Node0x24ecf10;
	Node0x24ecc00 -> Node0x24ecf10;
	Node0x24ecf10 -> Node0x24ecf80;
	Node0x24ecc70 -> Node0x24ecf80;
	Node0x24ecf80 -> Node0x24ecff0;
	Node0x24ecff0 -> Node0x248b9d8;
	Node0x248b9d8 -> Node0x24ed080;
	Node0x24eaee8 -> Node0x24ed2d8;
	Node0x24ea9a8 -> Node0x24ed438;
}
