digraph "DFG for'main' function" {
	Node0x7d8c98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x7d8d18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x7d8da8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x7d8e08[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x7d8eb8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x7d92e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7d93c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x7d94c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7d9588[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x7d9638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x7d96f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x7d97a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x7d37a0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x7d99a8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x7da918[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x7daf88[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x7dafe8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x7db0f8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x7db358[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x7db4b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x7db5c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7db6d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7db798[shape=record, label="  ret i32 0"];
	Node0x7d8c98 -> Node0x7d8d18;
	Node0x7d8d18 -> Node0x7d8da8;
	Node0x7d8da8 -> Node0x7d8e08;
	Node0x7d8e08 -> Node0x7d8eb8;
	Node0x7d8eb8 -> Node0x7d92e8;
	Node0x7d92e8 -> Node0x7d93c8;
	Node0x7d93c8 -> Node0x7d94c8;
	Node0x7d94c8 -> Node0x7d9588;
	Node0x7d9588 -> Node0x7d9638;
	Node0x7d9638 -> Node0x7d96f8;
	Node0x7d96f8 -> Node0x7d97a8;
	Node0x7d97a8 -> Node0x7d37a0;
	Node0x7d37a0 -> Node0x7d99a8;
	Node0x7d99a8 -> Node0x7da918;
	Node0x7da918 -> Node0x7daf88;
	Node0x7daf88 -> Node0x7dafe8;
	Node0x7dafe8 -> Node0x7db0f8;
	Node0x7db0f8 -> Node0x7db358;
	Node0x7db358 -> Node0x7db4b8;
	Node0x7db4b8 -> Node0x7db5c8;
	Node0x7db5c8 -> Node0x7db6d8;
	Node0x7db6d8 -> Node0x7db798;
edge [color=red]
	Node0x7d8c98 -> Node0x7d8eb8;
	Node0x7d8eb8 -> Node0x7d92e8;
	Node0x7d8d18 -> Node0x7d93c8;
	Node0x7d93c8 -> Node0x7d94c8;
	Node0x7d8da8 -> Node0x7d9588;
	Node0x7d9588 -> Node0x7d9638;
	Node0x7d8e08 -> Node0x7d96f8;
	Node0x7d96f8 -> Node0x7d97a8;
	Node0x7d8c98 -> Node0x7d37a0;
	Node0x7d8d18 -> Node0x7d37a0;
	Node0x7d8da8 -> Node0x7d37a0;
	Node0x7d8e08 -> Node0x7d37a0;
	Node0x7d8c98 -> Node0x7d99a8;
	Node0x7d8d18 -> Node0x7da918;
	Node0x7d8da8 -> Node0x7daf88;
	Node0x7d8e08 -> Node0x7dafe8;
	Node0x7d99a8 -> Node0x7db0f8;
	Node0x7da918 -> Node0x7db0f8;
	Node0x7daf88 -> Node0x7db0f8;
	Node0x7dafe8 -> Node0x7db0f8;
	Node0x7d96f8 -> Node0x7db358;
	Node0x7d9588 -> Node0x7db4b8;
	Node0x7d93c8 -> Node0x7db5c8;
	Node0x7d8eb8 -> Node0x7db6d8;
}
