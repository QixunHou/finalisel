; ModuleID = '../.././c_source_file/0544_path_condition_crackme.c'
source_filename = "../.././c_source_file/0544_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = and i32 %2, %1
  %9 = xor i32 %8, -1
  %10 = or i32 %9, %7
  %11 = and i32 %5, %3
  %12 = and i32 %11, %4
  %13 = xor i32 %5, %3
  %14 = xor i32 %13, %4
  %15 = xor i32 %12, %14
  %16 = shl i32 %15, 1
  %17 = and i32 %5, %4
  %18 = or i32 %4, %3
  %19 = xor i32 %17, %18
  %20 = sub i32 %10, %19
  %21 = sub i32 %20, %16
  %22 = xor i32 %1, -1
  %23 = or i32 %22, %0
  %24 = xor i32 %2, %0
  %25 = xor i32 %24, -1
  %26 = and i32 %23, %25
  %27 = and i32 %22, %0
  %28 = or i32 %24, %27
  %29 = or i32 %2, %1
  %30 = xor i32 %29, -1
  %31 = add i32 %29, 1
  %32 = and i32 %1, %0
  %33 = xor i32 %32, -1
  %34 = and i32 %24, %33
  %35 = and i32 %2, %0
  %36 = or i32 %35, %30
  %37 = xor i32 %2, -1
  %38 = or i32 %37, %1
  %39 = or i32 %38, %0
  %40 = or i32 %38, %7
  %41 = shl i32 %40, 1
  %42 = or i32 %37, %0
  %43 = xor i32 %1, %0
  %44 = and i32 %42, %43
  %45 = xor i32 %2, %1
  %46 = or i32 %45, %0
  %47 = and i32 %37, %0
  %48 = xor i32 %47, -1
  %49 = xor i32 %43, -1
  %50 = and i32 %48, %49
  %51 = or i32 %1, %0
  %52 = and i32 %51, %37
  %53 = or i32 %43, %2
  %54 = xor i32 %42, -1
  %55 = or i32 %54, %22
  %56 = and i32 %23, %2
  %57 = and i32 %8, %0
  %58 = xor i32 %45, %0
  %59 = xor i32 %57, %58
  %60 = xor i32 %9, %0
  %61 = and i32 %22, %2
  %62 = and i32 %61, %0
  %63 = or i32 %22, %2
  %64 = xor i32 %63, %0
  %65 = xor i32 %64, 2147483647
  %66 = xor i32 %65, %62
  %67 = and i32 %37, %1
  %68 = xor i32 %67, -1
  %69 = and i32 %68, %0
  %70 = or i32 %2, %0
  %71 = xor i32 %70, -1
  %72 = or i32 %32, %71
  %73 = xor i32 %35, %1
  %74 = xor i32 %48, %1
  %75 = xor i32 %47, %38
  %76 = or i32 %71, %22
  %77 = xor i32 %29, %0
  %78 = or i32 %54, %1
  %79 = xor i32 %45, -1
  %80 = or i32 %27, %79
  %81 = or i32 %49, %2
  %82 = or i32 %62, %58
  %83 = xor i32 %51, -1
  %84 = or i32 %37, %83
  %85 = xor i32 %67, %0
  %86 = or i32 %32, %30
  %87 = xor i32 %42, %1
  %88 = xor i32 %23, -1
  %89 = or i32 %45, %88
  %90 = xor i32 %27, -1
  %91 = and i32 %24, %90
  %92 = shl i32 %91, 1
  %93 = and i32 %24, %43
  %94 = and i32 %43, %37
  %95 = or i32 %67, %0
  %96 = xor i32 %8, %0
  %97 = xor i32 %83, %2
  %98 = xor i32 %38, %0
  %99 = add i32 %45, 1
  %100 = and i32 %79, %0
  %101 = xor i32 %35, %68
  %102 = and i32 %38, %7
  %103 = and i32 %70, %1
  %104 = and i32 %61, %7
  %105 = or i32 %45, %7
  %106 = xor i32 %104, %105
  %107 = add i32 %27, 1
  %108 = or i32 %24, %1
  %109 = or i32 %24, %43
  %110 = shl i32 %109, 2
  %111 = and i32 %48, %1
  %112 = or i32 %25, %1
  %113 = or i32 %47, %1
  %114 = and i32 %51, %79
  %115 = and i32 %45, %51
  %116 = add i32 %51, 1
  %117 = or i32 %47, %49
  %118 = and i32 %79, %90
  %119 = and i32 %79, %33
  %120 = or i32 %25, %49
  %121 = xor i32 %35, -1
  %122 = and i32 %121, %49
  %123 = or i32 %29, %0
  %124 = and i32 %79, %7
  %125 = shl i32 %124, 1
  %126 = and i32 %25, %33
  %127 = and i32 %90, %2
  %128 = or i32 %35, %83
  %129 = or i32 %88, %2
  %130 = or i32 %32, %54
  %131 = and i32 %23, %79
  %132 = xor i32 %79, %0
  %133 = xor i32 %70, %32
  %134 = and i32 %29, %7
  %135 = xor i32 %134, -1
  %136 = xor i32 %57, %135
  %137 = xor i32 %30, %0
  %138 = or i32 %27, %37
  %139 = or i32 %27, %2
  %140 = shl i32 %139, 1
  %141 = xor i32 %51, %2
  %142 = and i32 %8, %7
  %143 = and i32 %45, %0
  %144 = or i32 %142, %143
  %145 = and i32 %45, %90
  %146 = or i32 %79, %7
  %147 = shl i32 %25, 1
  %148 = or i32 %25, %88
  %149 = add i32 %8, 1
  %150 = xor i32 %35, %51
  %151 = xor i32 %35, %29
  %152 = shl i32 %151, 1
  %153 = and i32 %37, %90
  %154 = and i32 %51, %25
  %155 = or i32 %62, %64
  %156 = and i32 %51, %2
  %157 = or i32 %30, %7
  %158 = or i32 %27, %25
  %159 = or i32 %25, %22
  %160 = or i32 %54, %49
  %161 = and i32 %37, %33
  %162 = or i32 %35, %88
  %163 = and i32 %24, %22
  %164 = and i32 %24, %1
  %165 = shl i32 %164, 1
  %166 = xor i32 %42, %32
  %167 = and i32 %25, %1
  %168 = or i32 %79, %0
  %169 = and i32 %42, %22
  %170 = xor i32 %35, %23
  %171 = or i32 %43, %37
  %172 = and i32 %43, %121
  %173 = and i32 %29, %0
  %174 = shl i32 %173, 1
  %175 = or i32 %57, %134
  %176 = xor i32 %71, %1
  %177 = shl i32 %176, 1
  %178 = or i32 %57, %77
  %179 = xor i32 %121, %1
  %180 = xor i32 %27, %68
  %181 = xor i32 %58, -1
  %182 = xor i32 %62, %181
  %183 = or i32 %67, %7
  %184 = and i32 %23, %37
  %185 = or i32 %47, %8
  %186 = xor i32 %38, -1
  %187 = or i32 %47, %186
  %188 = shl i32 %187, 1
  %189 = xor i32 %38, %32
  %190 = or i32 %71, %1
  %191 = or i32 %24, %83
  %192 = and i32 %45, %7
  %193 = or i32 %57, %192
  %194 = and i32 %25, %90
  %195 = xor i32 %27, %9
  %196 = xor i32 %23, %2
  %197 = or i32 %67, %27
  %198 = xor i32 %33, %2
  %199 = or i32 %45, %32
  %200 = or i32 %43, %54
  %201 = or i32 %9, %0
  %202 = and i32 %43, %48
  %203 = shl i32 %134, 1
  %204 = and i32 %25, %22
  %205 = xor i32 %47, %9
  %206 = or i32 %8, %27
  %207 = xor i32 %62, %46
  %208 = shl i32 %207, 1
  %209 = xor i32 %46, -1
  %210 = or i32 %62, %209
  %211 = shl i32 %48, 1
  %212 = and i32 %70, %43
  %213 = shl i32 %212, 1
  %214 = and i32 %63, %0
  %215 = or i32 %104, %214
  %216 = xor i32 %47, %1
  %217 = and i32 %9, %0
  %218 = xor i32 %214, -1
  %219 = xor i32 %104, %218
  %220 = shl i32 %35, 1
  %221 = or i32 %68, %0
  %222 = xor i32 %63, -1
  %223 = or i32 %222, %0
  %224 = xor i32 %62, %223
  %225 = or i32 %142, %173
  %226 = and i32 %70, %49
  %227 = and i32 %9, %7
  %228 = or i32 %43, %71
  %229 = and i32 %38, %0
  %230 = or i32 %43, %25
  %231 = or i32 %186, %7
  %232 = or i32 %30, %0
  %233 = shl i32 %232, 1
  %234 = and i32 %48, %22
  %235 = xor i32 %88, %2
  %236 = xor i32 %105, -1
  %237 = or i32 %104, %236
  %238 = or i32 %45, %83
  %239 = shl i32 %238, 1
  %240 = xor i32 %173, -1
  %241 = xor i32 %142, %240
  %242 = and i32 %24, %23
  %243 = or i32 %68, %7
  %244 = or i32 %83, %2
  %245 = and i32 %45, %23
  %246 = or i32 %37, %88
  %247 = add i32 %70, 1
  %248 = or i32 %37, %49
  %249 = or i32 %32, %79
  %250 = and i32 %121, %22
  %251 = or i32 %57, %181
  %252 = or i32 %35, %49
  %253 = and i32 %25, %49
  %254 = or i32 %25, %83
  %255 = or i32 %32, %186
  %256 = and i32 %30, %7
  %257 = mul i32 %256, 14
  %258 = and i32 %67, %7
  %259 = and i32 %30, %0
  %260 = and i32 %67, %0
  %261 = and i32 %186, %7
  %262 = shl i32 %261, 4
  %263 = and i32 %186, %0
  %264 = mul i32 %57, 17
  %265 = or i32 %11, %4
  %266 = shl i32 %265, 1
  %267 = and i32 %4, %3
  %268 = xor i32 %267, -1
  %269 = xor i32 %5, -1
  %270 = or i32 %267, %269
  %271 = shl i32 %270, 1
  %272 = or i32 %5, %4
  %273 = xor i32 %4, %3
  %274 = xor i32 %273, -1
  %275 = and i32 %272, %274
  %276 = xor i32 %11, -1
  %277 = and i32 %276, %4
  %278 = shl i32 %277, 1
  %279 = or i32 %269, %4
  %280 = and i32 %279, %273
  %281 = xor i32 %13, -1
  %282 = add i32 %13, 1
  %283 = or i32 %273, %269
  %284 = or i32 %13, %4
  %285 = and i32 %269, %268
  %286 = xor i32 %3, -1
  %287 = and i32 %269, %4
  %288 = or i32 %287, %286
  %289 = xor i32 %4, -1
  %290 = or i32 %5, %3
  %291 = and i32 %290, %289
  %292 = shl i32 %291, 1
  %293 = xor i32 %18, -1
  %294 = or i32 %17, %293
  %295 = xor i32 %12, -1
  %296 = xor i32 %291, %295
  %297 = and i32 %286, %5
  %298 = and i32 %297, %289
  %299 = or i32 %13, %289
  %300 = xor i32 %298, %299
  %301 = and i32 %269, %3
  %302 = xor i32 %301, -1
  %303 = xor i32 %17, %302
  %304 = or i32 %302, %289
  %305 = and i32 %272, %286
  %306 = and i32 %286, %4
  %307 = or i32 %301, %306
  %308 = xor i32 %5, %4
  %309 = xor i32 %308, -1
  %310 = and i32 %309, %286
  %311 = xor i32 %287, -1
  %312 = and i32 %273, %311
  %313 = or i32 %267, %281
  %314 = or i32 %287, %274
  %315 = and i32 %273, %309
  %316 = or i32 %269, %3
  %317 = xor i32 %316, %4
  %318 = or i32 %301, %4
  %319 = or i32 %281, %289
  %320 = and i32 %316, %289
  %321 = and i32 %308, %268
  %322 = or i32 %308, %274
  %323 = and i32 %309, %274
  %324 = xor i32 %272, -1
  %325 = add i32 %272, 1
  %326 = or i32 %324, %274
  %327 = xor i32 %279, -1
  %328 = or i32 %327, %286
  %329 = shl i32 %328, 1
  %330 = or i32 %273, %324
  %331 = and i32 %272, %3
  %332 = and i32 %309, %268
  %333 = or i32 %11, %306
  %334 = and i32 %11, %289
  %335 = and i32 %290, %4
  %336 = xor i32 %335, 2147483647
  %337 = xor i32 %336, %334
  %338 = shl i32 %337, 1
  %339 = or i32 %306, %309
  %340 = or i32 %13, %306
  %341 = xor i32 %306, -1
  %342 = and i32 %341, %5
  %343 = and i32 %13, %4
  %344 = and i32 %308, %273
  %345 = xor i32 %306, %276
  %346 = xor i32 %17, -1
  %347 = xor i32 %346, %3
  %348 = and i32 %308, %286
  %349 = or i32 %269, %274
  %350 = xor i32 %11, %4
  %351 = or i32 %301, %289
  %352 = xor i32 %343, -1
  %353 = xor i32 %334, %352
  %354 = or i32 %286, %4
  %355 = xor i32 %354, -1
  %356 = or i32 %269, %355
  %357 = xor i32 %316, -1
  %358 = xor i32 %272, %267
  %359 = or i32 %11, %289
  %360 = and i32 %13, %268
  %361 = shl i32 %360, 1
  %362 = or i32 %327, %274
  %363 = shl i32 %306, 2
  %364 = or i32 %287, %11
  %365 = xor i32 %276, %4
  %366 = and i32 %297, %4
  %367 = xor i32 %284, -1
  %368 = or i32 %366, %367
  %369 = or i32 %269, %293
  %370 = xor i32 %357, %4
  %371 = and i32 %13, %289
  %372 = xor i32 %371, 2147483647
  %373 = xor i32 %372, %12
  %374 = shl i32 %373, 1
  %375 = xor i32 %306, %302
  %376 = shl i32 %375, 1
  %377 = and i32 %311, %274
  %378 = and i32 %279, %274
  %379 = and i32 %302, %289
  %380 = or i32 %308, %267
  %381 = or i32 %273, %5
  %382 = and i32 %18, %309
  %383 = or i32 %355, %5
  %384 = xor i32 %14, -1
  %385 = or i32 %12, %384
  %386 = xor i32 %287, %316
  %387 = xor i32 %324, %3
  %388 = xor i32 %316, %267
  %389 = or i32 %17, %3
  %390 = and i32 %316, %4
  %391 = and i32 %281, %289
  %392 = and i32 %13, %354
  %393 = or i32 %281, %4
  %394 = xor i32 %17, %290
  %395 = or i32 %308, %306
  %396 = or i32 %12, %371
  %397 = and i32 %346, %274
  %398 = or i32 %308, %286
  %399 = and i32 %273, %346
  %400 = or i32 %287, %357
  %401 = xor i32 %279, %267
  %402 = or i32 %308, %293
  %403 = or i32 %309, %293
  %404 = or i32 %286, %5
  %405 = and i32 %404, %4
  %406 = or i32 %298, %405
  %407 = and i32 %354, %5
  %408 = and i32 %276, %289
  %409 = or i32 %366, %14
  %410 = xor i32 %290, %267
  %411 = shl i32 %410, 1
  %412 = and i32 %309, %341
  %413 = shl i32 %412, 1
  %414 = and i32 %404, %289
  %415 = xor i32 %414, 2147483647
  %416 = xor i32 %415, %366
  %417 = and i32 %272, %273
  %418 = or i32 %17, %274
  %419 = xor i32 %327, %3
  %420 = or i32 %267, %357
  %421 = and i32 %309, %3
  %422 = shl i32 %421, 1
  %423 = and i32 %13, %341
  %424 = or i32 %273, %327
  %425 = and i32 %268, %5
  %426 = xor i32 %290, %4
  %427 = xor i32 %426, %295
  %428 = or i32 %12, %426
  %429 = xor i32 %290, -1
  %430 = or i32 %17, %429
  %431 = or i32 %429, %289
  %432 = add i32 %273, 1
  %433 = xor i32 %302, %4
  %434 = xor i32 %272, %3
  %435 = or i32 %306, %281
  %436 = and i32 %308, %341
  %437 = and i32 %13, %18
  %438 = xor i32 %429, %4
  %439 = xor i32 %366, %284
  %440 = and i32 %346, %3
  %441 = or i32 %308, %3
  %442 = xor i32 %287, %276
  %443 = add i32 %290, 1
  %444 = xor i32 %299, -1
  %445 = or i32 %298, %444
  %446 = or i32 %306, %5
  %447 = xor i32 %404, %4
  %448 = or i32 %366, %447
  %449 = xor i32 %355, %5
  %450 = or i32 %308, %355
  %451 = or i32 %357, %289
  %452 = and i32 %302, %4
  %453 = and i32 %354, %269
  %454 = or i32 %290, %289
  %455 = or i32 %12, %291
  %456 = and i32 %346, %286
  %457 = or i32 %302, %4
  %458 = or i32 %17, %301
  %459 = and i32 %308, %18
  %460 = or i32 %13, %293
  %461 = shl i32 %460, 1
  %462 = xor i32 %293, %5
  %463 = or i32 %324, %3
  %464 = and i32 %354, %281
  %465 = or i32 %309, %274
  %466 = or i32 %276, %289
  %467 = and i32 %269, %274
  %468 = shl i32 %467, 1
  %469 = xor i32 %267, %5
  %470 = and i32 %354, %309
  %471 = or i32 %17, %286
  %472 = and i32 %269, %341
  %473 = shl i32 %472, 1
  %474 = or i32 %273, %309
  %475 = xor i32 %306, %5
  %476 = or i32 %281, %293
  %477 = shl i32 %476, 1
  %478 = and i32 %281, %341
  %479 = or i32 %267, %327
  %480 = and i32 %308, %274
  %481 = shl i32 %355, 1
  %482 = xor i32 %287, %3
  %483 = or i32 %366, %414
  %484 = xor i32 %17, %3
  %485 = or i32 %287, %273
  %486 = or i32 %309, %286
  %487 = or i32 %306, %269
  %488 = or i32 %287, %3
  %489 = and i32 %311, %3
  %490 = and i32 %281, %268
  %491 = or i32 %274, %5
  %492 = and i32 %429, %289
  %493 = and i32 %301, %289
  %494 = and i32 %429, %4
  %495 = and i32 %357, %289
  %496 = mul i32 %334, 10
  %497 = and i32 %357, %4
  %498 = mul i32 %497, 13
  %499 = add i32 %88, %2
  %500 = add i32 %499, %24
  %501 = add i32 %500, %246
  %502 = add i32 %501, %186
  %503 = add i32 %502, %141
  %504 = add i32 %503, %138
  %505 = add i32 %504, %67
  %506 = add i32 %505, %289
  %507 = add i32 %506, %249
  %508 = add i32 %507, %245
  %509 = add i32 %508, %231
  %510 = add i32 %509, %221
  %511 = add i32 %510, %202
  %512 = add i32 %511, %172
  %513 = add i32 %512, %160
  %514 = add i32 %513, %95
  %515 = add i32 %514, %182
  %516 = add i32 %515, %175
  %517 = add i32 %516, %287
  %518 = add i32 %517, %475
  %519 = add i32 %518, %349
  %520 = add i32 %519, %66
  %521 = add i32 %520, %488
  %522 = add i32 %521, %480
  %523 = add i32 %522, %387
  %524 = add i32 %523, %340
  %525 = add i32 %524, %339
  %526 = add i32 %525, %313
  %527 = add i32 %526, %310
  %528 = add i32 %527, %307
  %529 = add i32 %528, %428
  %530 = add i32 %529, %416
  %531 = shl i32 %530, 1
  %532 = add i32 %258, %3
  %533 = sub i32 %532, %128
  %534 = sub i32 %533, %100
  %535 = add i32 %534, %78
  %536 = sub i32 %535, %364
  %537 = sub i32 %536, %380
  %538 = mul i32 %537, 5
  %539 = or i32 %12, %493
  %540 = add i32 %539, %377
  %541 = add i32 %540, %304
  %542 = shl i32 %541, 2
  %543 = add i32 %492, %142
  %544 = mul i32 %543, 9
  %545 = add i32 %263, %260
  %546 = mul i32 %545, 15
  %547 = add i32 %494, %259
  %548 = mul i32 %547, 7
  %549 = add i32 %32, %156
  %550 = sub i32 %549, %137
  %551 = sub i32 %550, %130
  %552 = add i32 %551, %76
  %553 = add i32 %552, %251
  %554 = sub i32 %553, %407
  %555 = add i32 %554, %383
  %556 = sub i32 %555, %14
  %557 = sub i32 %556, %495
  %558 = sub i32 %557, %401
  %559 = mul i32 %558, 3
  %560 = sub i32 1, %0
  %561 = add i32 %560, %22
  %562 = add i32 %561, %107
  %563 = add i32 %562, %116
  %564 = sub i32 %563, %43
  %565 = sub i32 %564, %27
  %566 = sub i32 %565, %23
  %567 = add i32 %566, %37
  %568 = add i32 %567, %31
  %569 = sub i32 %568, %52
  %570 = add i32 %569, %53
  %571 = sub i32 %570, %45
  %572 = sub i32 %571, %56
  %573 = add i32 %572, %81
  %574 = sub i32 %573, %84
  %575 = add i32 %574, %94
  %576 = sub i32 %575, %97
  %577 = add i32 %576, %99
  %578 = add i32 %577, %42
  %579 = sub i32 %578, %127
  %580 = sub i32 %579, %129
  %581 = add i32 %580, %68
  %582 = add i32 %581, %149
  %583 = add i32 %582, %153
  %584 = add i32 %583, %161
  %585 = sub i32 %584, %29
  %586 = add i32 %585, %171
  %587 = sub i32 %586, %184
  %588 = add i32 %587, %196
  %589 = add i32 %588, %198
  %590 = add i32 %589, %235
  %591 = add i32 %590, %244
  %592 = add i32 %591, %247
  %593 = sub i32 %592, %248
  %594 = add i32 %593, %286
  %595 = sub i32 %594, %28
  %596 = sub i32 %595, %26
  %597 = sub i32 %596, %34
  %598 = sub i32 %597, %36
  %599 = add i32 %598, %39
  %600 = sub i32 %599, %44
  %601 = add i32 %600, %46
  %602 = sub i32 %601, %50
  %603 = add i32 %602, %55
  %604 = add i32 %603, %60
  %605 = add i32 %604, %69
  %606 = sub i32 %605, %72
  %607 = add i32 %606, %73
  %608 = add i32 %607, %74
  %609 = sub i32 %608, %75
  %610 = add i32 %609, %77
  %611 = sub i32 %610, %80
  %612 = add i32 %611, %85
  %613 = add i32 %612, %86
  %614 = sub i32 %613, %87
  %615 = add i32 %614, %89
  %616 = sub i32 %615, %93
  %617 = sub i32 %616, %96
  %618 = sub i32 %617, %98
  %619 = add i32 %618, %101
  %620 = sub i32 %619, %102
  %621 = sub i32 %620, %103
  %622 = sub i32 %621, %108
  %623 = sub i32 %622, %111
  %624 = add i32 %623, %112
  %625 = sub i32 %624, %113
  %626 = sub i32 %625, %114
  %627 = sub i32 %626, %115
  %628 = sub i32 %627, %117
  %629 = sub i32 %628, %118
  %630 = sub i32 %629, %119
  %631 = sub i32 %630, %120
  %632 = sub i32 %631, %122
  %633 = sub i32 %632, %123
  %634 = sub i32 %633, %126
  %635 = add i32 %634, %131
  %636 = add i32 %635, %132
  %637 = add i32 %636, %133
  %638 = sub i32 %637, %58
  %639 = sub i32 %638, %140
  %640 = sub i32 %639, %145
  %641 = add i32 %640, %146
  %642 = sub i32 %641, %147
  %643 = add i32 %642, %148
  %644 = sub i32 %643, %150
  %645 = sub i32 %644, %154
  %646 = sub i32 %645, %157
  %647 = add i32 %646, %158
  %648 = add i32 %647, %159
  %649 = sub i32 %648, %162
  %650 = add i32 %649, %163
  %651 = sub i32 %650, %143
  %652 = add i32 %651, %166
  %653 = add i32 %652, %167
  %654 = add i32 %653, %168
  %655 = sub i32 %654, %169
  %656 = add i32 %655, %170
  %657 = sub i32 %656, %179
  %658 = add i32 %657, %180
  %659 = sub i32 %658, %183
  %660 = add i32 %659, %185
  %661 = sub i32 %660, %189
  %662 = sub i32 %661, %190
  %663 = add i32 %662, %191
  %664 = sub i32 %663, %192
  %665 = sub i32 %664, %194
  %666 = sub i32 %665, %195
  %667 = sub i32 %666, %197
  %668 = add i32 %667, %199
  %669 = sub i32 %668, %200
  %670 = sub i32 %669, %201
  %671 = sub i32 %670, %204
  %672 = add i32 %671, %205
  %673 = sub i32 %672, %206
  %674 = sub i32 %673, %211
  %675 = add i32 %674, %216
  %676 = add i32 %675, %217
  %677 = sub i32 %676, %220
  %678 = sub i32 %677, %226
  %679 = add i32 %678, %227
  %680 = add i32 %679, %228
  %681 = add i32 %680, %229
  %682 = sub i32 %681, %230
  %683 = sub i32 %682, %234
  %684 = sub i32 %683, %242
  %685 = add i32 %684, %243
  %686 = add i32 %685, %250
  %687 = sub i32 %686, %252
  %688 = sub i32 %687, %253
  %689 = add i32 %688, %254
  %690 = add i32 %689, %255
  %691 = sub i32 %690, %4
  %692 = sub i32 %691, %41
  %693 = sub i32 %692, %59
  %694 = sub i32 %693, %82
  %695 = sub i32 %694, %92
  %696 = sub i32 %695, %106
  %697 = sub i32 %696, %110
  %698 = sub i32 %697, %125
  %699 = sub i32 %698, %136
  %700 = sub i32 %699, %144
  %701 = sub i32 %700, %152
  %702 = sub i32 %701, %155
  %703 = sub i32 %702, %165
  %704 = sub i32 %703, %174
  %705 = sub i32 %704, %177
  %706 = sub i32 %705, %178
  %707 = sub i32 %706, %188
  %708 = sub i32 %707, %193
  %709 = sub i32 %708, %203
  %710 = add i32 %709, %210
  %711 = sub i32 %710, %213
  %712 = add i32 %711, %215
  %713 = sub i32 %712, %219
  %714 = add i32 %713, %224
  %715 = sub i32 %714, %225
  %716 = sub i32 %715, %233
  %717 = add i32 %716, %237
  %718 = sub i32 %717, %239
  %719 = sub i32 %718, %241
  %720 = add i32 %719, %257
  %721 = add i32 %720, %262
  %722 = add i32 %721, %264
  %723 = add i32 %722, %293
  %724 = add i32 %723, %341
  %725 = add i32 %724, %432
  %726 = sub i32 %725, %208
  %727 = sub i32 %726, %17
  %728 = add i32 %727, %282
  %729 = sub i32 %728, %283
  %730 = sub i32 %729, %285
  %731 = add i32 %730, %272
  %732 = sub i32 %731, %316
  %733 = sub i32 %732, %301
  %734 = add i32 %733, %325
  %735 = add i32 %734, %342
  %736 = sub i32 %735, %11
  %737 = add i32 %736, %356
  %738 = add i32 %737, %357
  %739 = add i32 %738, %311
  %740 = sub i32 %739, %363
  %741 = add i32 %740, %369
  %742 = sub i32 %741, %381
  %743 = sub i32 %742, %290
  %744 = sub i32 %743, %425
  %745 = add i32 %744, %443
  %746 = add i32 %745, %446
  %747 = add i32 %746, %449
  %748 = sub i32 %747, %453
  %749 = sub i32 %748, %462
  %750 = sub i32 %749, %469
  %751 = add i32 %750, %13
  %752 = add i32 %751, %346
  %753 = sub i32 %752, %481
  %754 = add i32 %753, %487
  %755 = add i32 %754, %491
  %756 = add i32 %755, %546
  %757 = sub i32 %756, %271
  %758 = sub i32 %757, %275
  %759 = sub i32 %758, %280
  %760 = add i32 %759, %284
  %761 = sub i32 %760, %288
  %762 = add i32 %761, %294
  %763 = sub i32 %762, %303
  %764 = add i32 %763, %305
  %765 = sub i32 %764, %312
  %766 = sub i32 %765, %314
  %767 = add i32 %766, %315
  %768 = sub i32 %767, %317
  %769 = sub i32 %768, %318
  %770 = sub i32 %769, %319
  %771 = add i32 %770, %320
  %772 = add i32 %771, %321
  %773 = sub i32 %772, %322
  %774 = add i32 %773, %323
  %775 = sub i32 %774, %326
  %776 = add i32 %775, %330
  %777 = add i32 %776, %331
  %778 = sub i32 %777, %332
  %779 = sub i32 %778, %333
  %780 = add i32 %779, %343
  %781 = sub i32 %780, %344
  %782 = sub i32 %781, %345
  %783 = add i32 %782, %347
  %784 = add i32 %783, %348
  %785 = sub i32 %784, %350
  %786 = add i32 %785, %351
  %787 = sub i32 %786, %358
  %788 = sub i32 %787, %359
  %789 = add i32 %788, %362
  %790 = add i32 %789, %365
  %791 = add i32 %790, %370
  %792 = add i32 %791, %378
  %793 = sub i32 %792, %379
  %794 = add i32 %793, %382
  %795 = add i32 %794, %386
  %796 = add i32 %795, %388
  %797 = sub i32 %796, %389
  %798 = sub i32 %797, %390
  %799 = sub i32 %798, %391
  %800 = add i32 %799, %392
  %801 = add i32 %800, %393
  %802 = add i32 %801, %394
  %803 = add i32 %802, %395
  %804 = add i32 %803, %397
  %805 = add i32 %804, %398
  %806 = add i32 %805, %399
  %807 = add i32 %806, %400
  %808 = add i32 %807, %402
  %809 = sub i32 %808, %403
  %810 = sub i32 %809, %408
  %811 = sub i32 %810, %417
  %812 = sub i32 %811, %418
  %813 = add i32 %812, %419
  %814 = sub i32 %813, %420
  %815 = sub i32 %814, %423
  %816 = sub i32 %815, %424
  %817 = add i32 %816, %430
  %818 = sub i32 %817, %431
  %819 = sub i32 %818, %433
  %820 = add i32 %819, %434
  %821 = add i32 %820, %435
  %822 = sub i32 %821, %436
  %823 = sub i32 %822, %437
  %824 = add i32 %823, %438
  %825 = sub i32 %824, %440
  %826 = add i32 %825, %441
  %827 = sub i32 %826, %442
  %828 = add i32 %827, %299
  %829 = add i32 %828, %450
  %830 = sub i32 %829, %451
  %831 = sub i32 %830, %452
  %832 = sub i32 %831, %454
  %833 = add i32 %832, %371
  %834 = add i32 %833, %456
  %835 = sub i32 %834, %457
  %836 = sub i32 %835, %458
  %837 = sub i32 %836, %459
  %838 = sub i32 %837, %463
  %839 = add i32 %838, %464
  %840 = sub i32 %839, %465
  %841 = add i32 %840, %466
  %842 = sub i32 %841, %468
  %843 = sub i32 %842, %470
  %844 = sub i32 %843, %471
  %845 = sub i32 %844, %473
  %846 = sub i32 %845, %474
  %847 = add i32 %846, %478
  %848 = sub i32 %847, %479
  %849 = sub i32 %848, %482
  %850 = add i32 %849, %484
  %851 = add i32 %850, %485
  %852 = sub i32 %851, %486
  %853 = sub i32 %852, %489
  %854 = sub i32 %853, %490
  %855 = sub i32 %854, %266
  %856 = sub i32 %855, %278
  %857 = sub i32 %856, %292
  %858 = sub i32 %857, %296
  %859 = sub i32 %858, %300
  %860 = sub i32 %859, %329
  %861 = sub i32 %860, %353
  %862 = sub i32 %861, %361
  %863 = sub i32 %862, %368
  %864 = sub i32 %863, %376
  %865 = add i32 %864, %385
  %866 = sub i32 %865, %396
  %867 = add i32 %866, %406
  %868 = add i32 %867, %409
  %869 = sub i32 %868, %411
  %870 = sub i32 %869, %413
  %871 = sub i32 %870, %422
  %872 = add i32 %871, %427
  %873 = sub i32 %872, %439
  %874 = add i32 %873, %445
  %875 = add i32 %874, %448
  %876 = sub i32 %875, %455
  %877 = sub i32 %876, %461
  %878 = sub i32 %877, %477
  %879 = sub i32 %878, %483
  %880 = add i32 %879, %496
  %881 = add i32 %880, %498
  %882 = add i32 %881, %544
  %883 = add i32 %882, %548
  %884 = sub i32 %883, %338
  %885 = sub i32 %884, %374
  %886 = add i32 %885, %542
  %887 = add i32 %886, %538
  %888 = add i32 %887, %559
  %889 = add i32 %888, %531
  %890 = icmp eq i32 %21, %889
  %891 = select i1 %890, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %892 = tail call i32 @puts(i8* nonnull dereferenceable(1) %891)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
