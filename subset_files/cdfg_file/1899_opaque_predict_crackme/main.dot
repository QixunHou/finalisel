digraph "DFG for'main' function" {
	Node0x1a68288[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a68308[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a68398[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1a687f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a688d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1a689f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a68c30[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1a68ce8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a69c58[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a6a2e0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1a6a350[shape=record, label="  %9 = add i32 %8, 1"];
	Node0x1a6a3c0[shape=record, label="  %10 = xor i32 %6, -1"];
	Node0x1a6a430[shape=record, label="  %11 = mul i32 %10, -2"];
	Node0x1a6a4a0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x1a6a510[shape=record, label="  %13 = or i32 %6, %12"];
	Node0x1a6a580[shape=record, label="  %14 = shl i32 %13, 2"];
	Node0x1a6a5f0[shape=record, label="  %15 = and i32 %7, %6"];
	Node0x1a6a660[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x1a6a6d0[shape=record, label="  %17 = and i32 %6, %12"];
	Node0x1a6a740[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x1a6a7b0[shape=record, label="  %19 = xor i32 %16, -1"];
	Node0x1a6a820[shape=record, label="  %20 = mul i32 %19, -3"];
	Node0x1a6a890[shape=record, label="  %21 = xor i32 %13, -1"];
	Node0x1a6a900[shape=record, label="  %22 = mul i32 %21, 5"];
	Node0x1a6a970[shape=record, label="  %23 = shl i32 %15, 1"];
	Node0x1a6a9e0[shape=record, label="  %24 = sub i32 2, %6"];
	Node0x1a6aa50[shape=record, label="  %25 = add i32 %24, %12"];
	Node0x1a6aac0[shape=record, label="  %26 = add i32 %25, %11"];
	Node0x1a6ab30[shape=record, label="  %27 = sub i32 %26, %7"];
	Node0x1a6aba0[shape=record, label="  %28 = add i32 %27, %15"];
	Node0x1a6ac10[shape=record, label="  %29 = sub i32 %28, %16"];
	Node0x1a6ac80[shape=record, label="  %30 = add i32 %29, %18"];
	Node0x1a6acf0[shape=record, label="  %31 = sub i32 %30, %17"];
	Node0x1a6ad60[shape=record, label="  %32 = add i32 %31, %14"];
	Node0x1a6add0[shape=record, label="  %33 = add i32 %32, %20"];
	Node0x1a6ae40[shape=record, label="  %34 = add i32 %33, %22"];
	Node0x1a6aeb0[shape=record, label="  %35 = sub i32 %34, %23"];
	Node0x1a6af20[shape=record, label="  %36 = icmp eq i32 %9, %35"];
	Node0x1a089d8[shape=record, label="  %37 = select i1 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a6afb0[shape=record, label="  %38 = call i32 @puts(i8* nonnull dereferenceable(1) %37) #5"];
	Node0x1a6b208[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a6b368[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a6b428[shape=record, label="  ret i32 0"];
	Node0x1a68288 -> Node0x1a68308;
	Node0x1a68308 -> Node0x1a68398;
	Node0x1a68398 -> Node0x1a687f8;
	Node0x1a687f8 -> Node0x1a688d8;
	Node0x1a688d8 -> Node0x1a689f8;
	Node0x1a689f8 -> Node0x1a68c30;
	Node0x1a68c30 -> Node0x1a68ce8;
	Node0x1a68ce8 -> Node0x1a69c58;
	Node0x1a69c58 -> Node0x1a6a2e0;
	Node0x1a6a2e0 -> Node0x1a6a350;
	Node0x1a6a350 -> Node0x1a6a3c0;
	Node0x1a6a3c0 -> Node0x1a6a430;
	Node0x1a6a430 -> Node0x1a6a4a0;
	Node0x1a6a4a0 -> Node0x1a6a510;
	Node0x1a6a510 -> Node0x1a6a580;
	Node0x1a6a580 -> Node0x1a6a5f0;
	Node0x1a6a5f0 -> Node0x1a6a660;
	Node0x1a6a660 -> Node0x1a6a6d0;
	Node0x1a6a6d0 -> Node0x1a6a740;
	Node0x1a6a740 -> Node0x1a6a7b0;
	Node0x1a6a7b0 -> Node0x1a6a820;
	Node0x1a6a820 -> Node0x1a6a890;
	Node0x1a6a890 -> Node0x1a6a900;
	Node0x1a6a900 -> Node0x1a6a970;
	Node0x1a6a970 -> Node0x1a6a9e0;
	Node0x1a6a9e0 -> Node0x1a6aa50;
	Node0x1a6aa50 -> Node0x1a6aac0;
	Node0x1a6aac0 -> Node0x1a6ab30;
	Node0x1a6ab30 -> Node0x1a6aba0;
	Node0x1a6aba0 -> Node0x1a6ac10;
	Node0x1a6ac10 -> Node0x1a6ac80;
	Node0x1a6ac80 -> Node0x1a6acf0;
	Node0x1a6acf0 -> Node0x1a6ad60;
	Node0x1a6ad60 -> Node0x1a6add0;
	Node0x1a6add0 -> Node0x1a6ae40;
	Node0x1a6ae40 -> Node0x1a6aeb0;
	Node0x1a6aeb0 -> Node0x1a6af20;
	Node0x1a6af20 -> Node0x1a089d8;
	Node0x1a089d8 -> Node0x1a6afb0;
	Node0x1a6afb0 -> Node0x1a6b208;
	Node0x1a6b208 -> Node0x1a6b368;
	Node0x1a6b368 -> Node0x1a6b428;
edge [color=red]
	Node0x1a68288 -> Node0x1a68398;
	Node0x1a68398 -> Node0x1a687f8;
	Node0x1a68308 -> Node0x1a688d8;
	Node0x1a688d8 -> Node0x1a689f8;
	Node0x1a68288 -> Node0x1a68c30;
	Node0x1a68308 -> Node0x1a68c30;
	Node0x1a68288 -> Node0x1a68ce8;
	Node0x1a68308 -> Node0x1a69c58;
	Node0x1a69c58 -> Node0x1a6a2e0;
	Node0x1a68ce8 -> Node0x1a6a2e0;
	Node0x1a6a2e0 -> Node0x1a6a350;
	Node0x1a68ce8 -> Node0x1a6a3c0;
	Node0x1a6a3c0 -> Node0x1a6a430;
	Node0x1a69c58 -> Node0x1a6a4a0;
	Node0x1a68ce8 -> Node0x1a6a510;
	Node0x1a6a4a0 -> Node0x1a6a510;
	Node0x1a6a510 -> Node0x1a6a580;
	Node0x1a69c58 -> Node0x1a6a5f0;
	Node0x1a68ce8 -> Node0x1a6a5f0;
	Node0x1a69c58 -> Node0x1a6a660;
	Node0x1a68ce8 -> Node0x1a6a660;
	Node0x1a68ce8 -> Node0x1a6a6d0;
	Node0x1a6a4a0 -> Node0x1a6a6d0;
	Node0x1a6a6d0 -> Node0x1a6a740;
	Node0x1a6a660 -> Node0x1a6a7b0;
	Node0x1a6a7b0 -> Node0x1a6a820;
	Node0x1a6a510 -> Node0x1a6a890;
	Node0x1a6a890 -> Node0x1a6a900;
	Node0x1a6a5f0 -> Node0x1a6a970;
	Node0x1a68ce8 -> Node0x1a6a9e0;
	Node0x1a6a9e0 -> Node0x1a6aa50;
	Node0x1a6a4a0 -> Node0x1a6aa50;
	Node0x1a6aa50 -> Node0x1a6aac0;
	Node0x1a6a430 -> Node0x1a6aac0;
	Node0x1a6aac0 -> Node0x1a6ab30;
	Node0x1a69c58 -> Node0x1a6ab30;
	Node0x1a6ab30 -> Node0x1a6aba0;
	Node0x1a6a5f0 -> Node0x1a6aba0;
	Node0x1a6aba0 -> Node0x1a6ac10;
	Node0x1a6a660 -> Node0x1a6ac10;
	Node0x1a6ac10 -> Node0x1a6ac80;
	Node0x1a6a740 -> Node0x1a6ac80;
	Node0x1a6ac80 -> Node0x1a6acf0;
	Node0x1a6a6d0 -> Node0x1a6acf0;
	Node0x1a6acf0 -> Node0x1a6ad60;
	Node0x1a6a580 -> Node0x1a6ad60;
	Node0x1a6ad60 -> Node0x1a6add0;
	Node0x1a6a820 -> Node0x1a6add0;
	Node0x1a6add0 -> Node0x1a6ae40;
	Node0x1a6a900 -> Node0x1a6ae40;
	Node0x1a6ae40 -> Node0x1a6aeb0;
	Node0x1a6a970 -> Node0x1a6aeb0;
	Node0x1a6a350 -> Node0x1a6af20;
	Node0x1a6aeb0 -> Node0x1a6af20;
	Node0x1a6af20 -> Node0x1a089d8;
	Node0x1a089d8 -> Node0x1a6afb0;
	Node0x1a688d8 -> Node0x1a6b208;
	Node0x1a68398 -> Node0x1a6b368;
}
