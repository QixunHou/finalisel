digraph "DFG for'crackme' function" {
	Node0x1789bb0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x1789c20[shape=record, label="  %6 = and i32 %2, %1"];
	Node0x178a2a0[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x178a310[shape=record, label="  %8 = add i32 %5, %7"];
	Node0x178a380[shape=record, label="  %9 = xor i32 %3, %0"];
	Node0x178a420[shape=record, label="  %10 = shl i32 %9, 2"];
	Node0x178a490[shape=record, label="  %11 = sub i32 %8, %10"];
	Node0x178a500[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x178a570[shape=record, label="  %13 = or i32 %12, %1"];
	Node0x178a5e0[shape=record, label="  %14 = and i32 %12, %1"];
	Node0x178a650[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x178a6f0[shape=record, label="  %16 = shl i32 %13, 1"];
	Node0x178a790[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x178a800[shape=record, label="  %18 = xor i32 %0, -1"];
	Node0x178a870[shape=record, label="  %19 = and i32 %18, %3"];
	Node0x178a8e0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x178a950[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x178a9c0[shape=record, label="  %22 = or i32 %18, %3"];
	Node0x178aa30[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x178aaa0[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x178ab10[shape=record, label="  %25 = shl i32 %3, 1"];
	Node0x178ab80[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x178ac20[shape=record, label="  %27 = mul i32 %3, -5"];
	Node0x178ac90[shape=record, label="  %28 = or i32 %3, %0"];
	Node0x178ad00[shape=record, label="  %29 = add i32 %28, 1"];
	Node0x178ad70[shape=record, label="  %30 = add i32 %22, 1"];
	Node0x178ade0[shape=record, label="  %31 = add i32 %23, %30"];
	Node0x178ae50[shape=record, label="  %32 = add i32 %31, %29"];
	Node0x178b100[shape=record, label="  %33 = mul i32 %32, 3"];
	Node0x178b170[shape=record, label="  %34 = add i32 %22, %14"];
	Node0x178b1e0[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x178b250[shape=record, label="  %36 = sub i32 2, %0"];
	Node0x178b2c0[shape=record, label="  %37 = add i32 %36, %18"];
	Node0x178b330[shape=record, label="  %38 = add i32 %37, %13"];
	Node0x178b3a0[shape=record, label="  %39 = add i32 %38, %15"];
	Node0x178b410[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x178b480[shape=record, label="  %41 = add i32 %40, %27"];
	Node0x178b4f0[shape=record, label="  %42 = add i32 %41, %17"];
	Node0x178b560[shape=record, label="  %43 = sub i32 %42, %26"];
	Node0x178b5d0[shape=record, label="  %44 = sub i32 %43, %20"];
	Node0x178b640[shape=record, label="  %45 = add i32 %44, %21"];
	Node0x178b6b0[shape=record, label="  %46 = add i32 %45, %35"];
	Node0x178b720[shape=record, label="  %47 = add i32 %46, %33"];
	Node0x178b790[shape=record, label="  %48 = icmp eq i32 %11, %47"];
	Node0x172a268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x178bc30[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x178bc80[shape=record, label="  ret void"];
	Node0x1789bb0 -> Node0x1789c20;
	Node0x1789c20 -> Node0x178a2a0;
	Node0x178a2a0 -> Node0x178a310;
	Node0x178a310 -> Node0x178a380;
	Node0x178a380 -> Node0x178a420;
	Node0x178a420 -> Node0x178a490;
	Node0x178a490 -> Node0x178a500;
	Node0x178a500 -> Node0x178a570;
	Node0x178a570 -> Node0x178a5e0;
	Node0x178a5e0 -> Node0x178a650;
	Node0x178a650 -> Node0x178a6f0;
	Node0x178a6f0 -> Node0x178a790;
	Node0x178a790 -> Node0x178a800;
	Node0x178a800 -> Node0x178a870;
	Node0x178a870 -> Node0x178a8e0;
	Node0x178a8e0 -> Node0x178a950;
	Node0x178a950 -> Node0x178a9c0;
	Node0x178a9c0 -> Node0x178aa30;
	Node0x178aa30 -> Node0x178aaa0;
	Node0x178aaa0 -> Node0x178ab10;
	Node0x178ab10 -> Node0x178ab80;
	Node0x178ab80 -> Node0x178ac20;
	Node0x178ac20 -> Node0x178ac90;
	Node0x178ac90 -> Node0x178ad00;
	Node0x178ad00 -> Node0x178ad70;
	Node0x178ad70 -> Node0x178ade0;
	Node0x178ade0 -> Node0x178ae50;
	Node0x178ae50 -> Node0x178b100;
	Node0x178b100 -> Node0x178b170;
	Node0x178b170 -> Node0x178b1e0;
	Node0x178b1e0 -> Node0x178b250;
	Node0x178b250 -> Node0x178b2c0;
	Node0x178b2c0 -> Node0x178b330;
	Node0x178b330 -> Node0x178b3a0;
	Node0x178b3a0 -> Node0x178b410;
	Node0x178b410 -> Node0x178b480;
	Node0x178b480 -> Node0x178b4f0;
	Node0x178b4f0 -> Node0x178b560;
	Node0x178b560 -> Node0x178b5d0;
	Node0x178b5d0 -> Node0x178b640;
	Node0x178b640 -> Node0x178b6b0;
	Node0x178b6b0 -> Node0x178b720;
	Node0x178b720 -> Node0x178b790;
	Node0x178b790 -> Node0x172a268;
	Node0x172a268 -> Node0x178bc30;
	Node0x178bc30 -> Node0x178bc80;
edge [color=red]
	Node0x1789c20 -> Node0x178a2a0;
	Node0x1789bb0 -> Node0x178a310;
	Node0x178a2a0 -> Node0x178a310;
	Node0x178a380 -> Node0x178a420;
	Node0x178a310 -> Node0x178a490;
	Node0x178a420 -> Node0x178a490;
	Node0x178a500 -> Node0x178a570;
	Node0x178a500 -> Node0x178a5e0;
	Node0x178a5e0 -> Node0x178a650;
	Node0x178a570 -> Node0x178a6f0;
	Node0x178a6f0 -> Node0x178a790;
	Node0x178a800 -> Node0x178a870;
	Node0x178a870 -> Node0x178a8e0;
	Node0x178a8e0 -> Node0x178a950;
	Node0x178a800 -> Node0x178a9c0;
	Node0x178aa30 -> Node0x178aaa0;
	Node0x178ab10 -> Node0x178ab80;
	Node0x178ac90 -> Node0x178ad00;
	Node0x178a9c0 -> Node0x178ad70;
	Node0x178aa30 -> Node0x178ade0;
	Node0x178ad70 -> Node0x178ade0;
	Node0x178ade0 -> Node0x178ae50;
	Node0x178ad00 -> Node0x178ae50;
	Node0x178ae50 -> Node0x178b100;
	Node0x178a9c0 -> Node0x178b170;
	Node0x178a5e0 -> Node0x178b170;
	Node0x178b170 -> Node0x178b1e0;
	Node0x178b250 -> Node0x178b2c0;
	Node0x178a800 -> Node0x178b2c0;
	Node0x178b2c0 -> Node0x178b330;
	Node0x178a570 -> Node0x178b330;
	Node0x178b330 -> Node0x178b3a0;
	Node0x178a650 -> Node0x178b3a0;
	Node0x178b3a0 -> Node0x178b410;
	Node0x178aaa0 -> Node0x178b410;
	Node0x178b410 -> Node0x178b480;
	Node0x178ac20 -> Node0x178b480;
	Node0x178b480 -> Node0x178b4f0;
	Node0x178a790 -> Node0x178b4f0;
	Node0x178b4f0 -> Node0x178b560;
	Node0x178ab80 -> Node0x178b560;
	Node0x178b560 -> Node0x178b5d0;
	Node0x178a8e0 -> Node0x178b5d0;
	Node0x178b5d0 -> Node0x178b640;
	Node0x178a950 -> Node0x178b640;
	Node0x178b640 -> Node0x178b6b0;
	Node0x178b1e0 -> Node0x178b6b0;
	Node0x178b6b0 -> Node0x178b720;
	Node0x178b100 -> Node0x178b720;
	Node0x178a490 -> Node0x178b790;
	Node0x178b720 -> Node0x178b790;
	Node0x178b790 -> Node0x172a268;
	Node0x172a268 -> Node0x178bc30;
}
