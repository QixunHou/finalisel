digraph "DFG for'main' function" {
	Node0x1251328[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12513a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1251438[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1251498[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1251918[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12519f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1251af8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1251bb8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1251c68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1251ec8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1251f88[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12520e8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1252148[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1257c00[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1257e08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1257f68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1258078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1258138[shape=record, label="  ret i32 0"];
	Node0x1251328 -> Node0x12513a8;
	Node0x12513a8 -> Node0x1251438;
	Node0x1251438 -> Node0x1251498;
	Node0x1251498 -> Node0x1251918;
	Node0x1251918 -> Node0x12519f8;
	Node0x12519f8 -> Node0x1251af8;
	Node0x1251af8 -> Node0x1251bb8;
	Node0x1251bb8 -> Node0x1251c68;
	Node0x1251c68 -> Node0x1251ec8;
	Node0x1251ec8 -> Node0x1251f88;
	Node0x1251f88 -> Node0x12520e8;
	Node0x12520e8 -> Node0x1252148;
	Node0x1252148 -> Node0x1257c00;
	Node0x1257c00 -> Node0x1257e08;
	Node0x1257e08 -> Node0x1257f68;
	Node0x1257f68 -> Node0x1258078;
	Node0x1258078 -> Node0x1258138;
edge [color=red]
	Node0x1251328 -> Node0x1251498;
	Node0x1251498 -> Node0x1251918;
	Node0x12513a8 -> Node0x12519f8;
	Node0x12519f8 -> Node0x1251af8;
	Node0x1251438 -> Node0x1251bb8;
	Node0x1251bb8 -> Node0x1251c68;
	Node0x1251328 -> Node0x1251ec8;
	Node0x12513a8 -> Node0x1251ec8;
	Node0x1251438 -> Node0x1251ec8;
	Node0x1251328 -> Node0x1251f88;
	Node0x12513a8 -> Node0x12520e8;
	Node0x1251438 -> Node0x1252148;
	Node0x1251f88 -> Node0x1257c00;
	Node0x12520e8 -> Node0x1257c00;
	Node0x1252148 -> Node0x1257c00;
	Node0x1251bb8 -> Node0x1257e08;
	Node0x12519f8 -> Node0x1257f68;
	Node0x1251498 -> Node0x1258078;
}
