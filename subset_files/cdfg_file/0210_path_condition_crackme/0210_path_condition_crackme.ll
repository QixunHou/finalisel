; ModuleID = '../.././c_source_file/0210_path_condition_crackme.c'
source_filename = "../.././c_source_file/0210_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = add i32 %3, 1
  %7 = xor i32 %4, -1
  %8 = or i32 %7, %3
  %9 = mul i32 %8, 5
  %10 = xor i32 %2, -1
  %11 = xor i32 %1, %0
  %12 = xor i32 %11, -1
  %13 = and i32 %10, %12
  %14 = add i32 %6, %13
  %15 = add i32 %14, %9
  %16 = xor i32 %4, %3
  %17 = sub i32 %16, %3
  %18 = and i32 %4, %3
  %19 = xor i32 %18, -1
  %20 = or i32 %4, %3
  %21 = xor i32 %20, -1
  %22 = shl i32 %8, 2
  %23 = xor i32 %22, -4
  %24 = and i32 %7, %3
  %25 = xor i32 %1, -1
  %26 = and i32 %10, %0
  %27 = or i32 %26, %25
  %28 = shl i32 %27, 1
  %29 = or i32 %25, %0
  %30 = xor i32 %2, %1
  %31 = xor i32 %30, -1
  %32 = and i32 %29, %31
  %33 = xor i32 %2, %0
  %34 = or i32 %33, %12
  %35 = and i32 %1, %0
  %36 = xor i32 %35, -1
  %37 = xor i32 %33, -1
  %38 = and i32 %37, %36
  %39 = xor i32 %0, -1
  %40 = or i32 %2, %1
  %41 = or i32 %40, %39
  %42 = and i32 %10, %1
  %43 = xor i32 %42, -1
  %44 = and i32 %43, %0
  %45 = or i32 %42, %0
  %46 = or i32 %35, %31
  %47 = and i32 %2, %0
  %48 = xor i32 %40, -1
  %49 = or i32 %47, %48
  %50 = and i32 %31, %0
  %51 = and i32 %25, %2
  %52 = and i32 %51, %0
  %53 = or i32 %25, %2
  %54 = and i32 %53, %39
  %55 = xor i32 %54, -1
  %56 = xor i32 %52, %55
  %57 = and i32 %25, %0
  %58 = xor i32 %57, %43
  %59 = xor i32 %57, -1
  %60 = and i32 %30, %59
  %61 = or i32 %48, %39
  %62 = and i32 %2, %1
  %63 = and i32 %62, %39
  %64 = and i32 %30, %0
  %65 = or i32 %63, %64
  %66 = xor i32 %29, -1
  %67 = or i32 %33, %66
  %68 = or i32 %1, %0
  %69 = and i32 %33, %68
  %70 = and i32 %31, %39
  %71 = or i32 %30, %57
  %72 = and i32 %40, %0
  %73 = or i32 %63, %72
  %74 = or i32 %35, %37
  %75 = shl i32 %39, 1
  %76 = and i32 %33, %25
  %77 = or i32 %2, %0
  %78 = and i32 %77, %11
  %79 = or i32 %10, %1
  %80 = add i32 %1, 1
  %81 = and i32 %79, %0
  %82 = xor i32 %47, -1
  %83 = and i32 %82, %1
  %84 = xor i32 %68, %2
  %85 = shl i32 %84, 1
  %86 = xor i32 %36, %2
  %87 = or i32 %33, %1
  %88 = xor i32 %79, %35
  %89 = or i32 %57, %37
  %90 = xor i32 %68, -1
  %91 = or i32 %90, %2
  %92 = shl i32 %91, 1
  %93 = and i32 %36, %2
  %94 = or i32 %57, %2
  %95 = and i32 %68, %2
  %96 = and i32 %68, %10
  %97 = shl i32 %96, 1
  %98 = xor i32 %77, -1
  %99 = or i32 %98, %1
  %100 = xor i32 %31, %0
  %101 = or i32 %10, %0
  %102 = xor i32 %101, -1
  %103 = or i32 %102, %25
  %104 = and i32 %30, %39
  %105 = add i32 %11, 1
  %106 = and i32 %11, %2
  %107 = or i32 %30, %66
  %108 = shl i32 %107, 2
  %109 = and i32 %62, %0
  %110 = and i32 %40, %39
  %111 = xor i32 %109, -1
  %112 = xor i32 %110, %111
  %113 = xor i32 %35, %2
  %114 = or i32 %47, %42
  %115 = xor i32 %57, %2
  %116 = and i32 %29, %37
  %117 = and i32 %11, %10
  %118 = or i32 %37, %12
  %119 = xor i32 %82, %1
  %120 = or i32 %30, %0
  %121 = xor i32 %120, -1
  %122 = or i32 %52, %121
  %123 = add i32 %101, 1
  %124 = or i32 %57, %10
  %125 = and i32 %10, %59
  %126 = xor i32 %40, %0
  %127 = or i32 %109, %126
  %128 = or i32 %40, %0
  %129 = or i32 %109, %104
  %130 = or i32 %33, %57
  %131 = shl i32 %130, 1
  %132 = or i32 %33, %11
  %133 = or i32 %47, %1
  %134 = xor i32 %72, -1
  %135 = xor i32 %63, %134
  %136 = xor i32 %47, %29
  %137 = shl i32 %136, 1
  %138 = xor i32 %59, %2
  %139 = or i32 %47, %12
  %140 = xor i32 %30, %0
  %141 = xor i32 %140, -1
  %142 = or i32 %109, %141
  %143 = xor i32 %77, %1
  %144 = or i32 %79, %39
  %145 = xor i32 %79, -1
  %146 = xor i32 %145, %0
  %147 = or i32 %102, %12
  %148 = or i32 %26, %1
  %149 = xor i32 %62, -1
  %150 = or i32 %149, %0
  %151 = shl i32 %150, 1
  %152 = or i32 %31, %66
  %153 = and i32 %82, %25
  %154 = and i32 %77, %25
  %155 = xor i32 %53, %0
  %156 = or i32 %52, %155
  %157 = or i32 %26, %11
  %158 = xor i32 %42, %0
  %159 = or i32 %12, %2
  %160 = and i32 %33, %12
  %161 = xor i32 %47, %1
  %162 = shl i32 %40, 1
  %163 = add i32 %77, 1
  %164 = and i32 %51, %39
  %165 = and i32 %53, %0
  %166 = or i32 %164, %165
  %167 = or i32 %37, %1
  %168 = and i32 %30, %36
  %169 = or i32 %52, %54
  %170 = or i32 %145, %0
  %171 = xor i32 %47, %68
  %172 = or i32 %31, %0
  %173 = or i32 %42, %57
  %174 = add i32 %42, 1
  %175 = or i32 %11, %2
  %176 = and i32 %101, %1
  %177 = xor i32 %165, -1
  %178 = xor i32 %164, %177
  %179 = or i32 %35, %102
  %180 = or i32 %11, %102
  %181 = or i32 %35, %2
  %182 = or i32 %35, %48
  %183 = or i32 %37, %66
  %184 = xor i32 %26, %149
  %185 = and i32 %12, %2
  %186 = or i32 %37, %25
  %187 = or i32 %33, %90
  %188 = or i32 %62, %57
  %189 = or i32 %149, %39
  %190 = xor i32 %47, %43
  %191 = xor i32 %43, %0
  %192 = shl i32 %191, 1
  %193 = xor i32 %104, %111
  %194 = or i32 %98, %25
  %195 = or i32 %33, %35
  %196 = shl i32 %195, 1
  %197 = xor i32 %64, 2147483647
  %198 = xor i32 %197, %63
  %199 = shl i32 %198, 1
  %200 = xor i32 %26, -1
  %201 = xor i32 %200, %1
  %202 = and i32 %68, %37
  %203 = or i32 %26, %145
  %204 = and i32 %77, %1
  %205 = and i32 %149, %39
  %206 = or i32 %35, %10
  %207 = xor i32 %47, %40
  %208 = or i32 %47, %90
  %209 = and i32 %33, %11
  %210 = xor i32 %62, %0
  %211 = xor i32 %29, %2
  %212 = or i32 %52, %140
  %213 = or i32 %30, %90
  %214 = or i32 %102, %1
  %215 = or i32 %47, %25
  %216 = or i32 %37, %90
  %217 = and i32 %11, %200
  %218 = xor i32 %155, 2147483647
  %219 = xor i32 %218, %52
  %220 = or i32 %79, %0
  %221 = xor i32 %101, %1
  %222 = or i32 %30, %39
  %223 = xor i32 %164, %222
  %224 = and i32 %29, %2
  %225 = or i32 %57, %31
  %226 = or i32 %48, %0
  %227 = and i32 %31, %59
  %228 = shl i32 %227, 1
  %229 = and i32 %43, %39
  %230 = or i32 %145, %39
  %231 = and i32 %79, %39
  %232 = xor i32 %26, %1
  %233 = or i32 %26, %62
  %234 = or i32 %62, %39
  %235 = and i32 %10, %36
  %236 = or i32 %11, %37
  %237 = xor i32 %98, %1
  %238 = and i32 %101, %12
  %239 = and i32 %31, %36
  %240 = or i32 %33, %25
  %241 = and i32 %77, %12
  %242 = and i32 %33, %59
  %243 = xor i32 %126, %111
  %244 = and i32 %37, %1
  %245 = or i32 %31, %90
  %246 = xor i32 %66, %2
  %247 = or i32 %42, %39
  %248 = xor i32 %102, %1
  %249 = and i32 %29, %10
  %250 = xor i32 %77, %35
  %251 = or i32 %10, %90
  %252 = xor i32 %149, %0
  %253 = and i32 %30, %68
  %254 = and i32 %11, %37
  %255 = or i32 %66, %2
  %256 = and i32 %200, %12
  %257 = or i32 %43, %0
  %258 = or i32 %35, %98
  %259 = or i32 %11, %10
  %260 = or i32 %98, %12
  %261 = and i32 %82, %12
  %262 = or i32 %62, %0
  %263 = or i32 %30, %35
  %264 = and i32 %33, %29
  %265 = and i32 %37, %59
  %266 = xor i32 %48, %0
  %267 = xor i32 %57, %149
  %268 = and i32 %200, %1
  %269 = and i32 %149, %0
  %270 = and i32 %37, %12
  %271 = or i32 %11, %98
  %272 = or i32 %47, %11
  %273 = and i32 %11, %82
  %274 = shl i32 %273, 1
  %275 = add i32 %33, 1
  %276 = xor i32 %79, %0
  %277 = xor i32 %109, %140
  %278 = xor i32 %222, 2147483647
  %279 = or i32 %278, %164
  %280 = xor i32 %101, %35
  %281 = and i32 %33, %1
  %282 = and i32 %37, %25
  %283 = xor i32 %90, %2
  %284 = or i32 %31, %39
  %285 = shl i32 %284, 1
  %286 = and i32 %68, %31
  %287 = or i32 %109, %110
  %288 = and i32 %200, %25
  %289 = xor i32 %40, %35
  %290 = shl i32 %289, 1
  %291 = xor i32 %26, %79
  %292 = shl i32 %291, 1
  %293 = and i32 %30, %29
  %294 = shl i32 %293, 1
  %295 = or i32 %35, %145
  %296 = or i32 %10, %66
  %297 = xor i32 %52, %141
  %298 = shl i32 %36, 1
  %299 = and i32 %101, %11
  %300 = shl i32 %299, 1
  %301 = and i32 %33, %36
  %302 = or i32 %43, %39
  %303 = or i32 %47, %66
  %304 = and i32 %42, %39
  %305 = mul i32 %304, -13
  %306 = and i32 %48, %0
  %307 = and i32 %42, %0
  %308 = mul i32 %307, 22
  %309 = and i32 %145, %39
  %310 = add i32 %246, %2
  %311 = add i32 %310, %86
  %312 = add i32 %234, %39
  %313 = sub i32 %312, %209
  %314 = add i32 %313, %46
  %315 = sub i32 %314, %122
  %316 = mul i32 %315, 5
  %317 = sub i32 %309, %272
  %318 = sub i32 %317, %182
  %319 = add i32 %318, %144
  %320 = sub i32 %319, %44
  %321 = add i32 %320, %21
  %322 = mul i32 %321, 3
  %323 = add i32 %221, %63
  %324 = add i32 %323, %190
  %325 = add i32 %324, %24
  %326 = shl i32 %325, 2
  %327 = sub i32 %18, %109
  %328 = mul i32 %327, 7
  %329 = add i32 %311, %106
  %330 = add i32 %329, %268
  %331 = add i32 %330, %253
  %332 = add i32 %331, %236
  %333 = add i32 %332, %222
  %334 = add i32 %333, %205
  %335 = add i32 %334, %202
  %336 = add i32 %335, %186
  %337 = add i32 %336, %72
  %338 = add i32 %337, %143
  %339 = add i32 %338, %132
  %340 = add i32 %339, %89
  %341 = add i32 %340, %49
  %342 = add i32 %341, %45
  %343 = add i32 %342, %219
  %344 = add i32 %343, %279
  %345 = add i32 %344, %17
  %346 = shl i32 %345, 1
  %347 = mul i32 %144, 6
  %348 = add i32 %75, %0
  %349 = sub i32 %80, %348
  %350 = sub i32 %349, %1
  %351 = add i32 %350, %105
  %352 = add i32 %351, %90
  %353 = sub i32 %352, %68
  %354 = add i32 %353, %35
  %355 = add i32 %354, %11
  %356 = add i32 %355, %10
  %357 = add i32 %356, %93
  %358 = sub i32 %357, %94
  %359 = add i32 %358, %95
  %360 = add i32 %359, %113
  %361 = sub i32 %360, %115
  %362 = add i32 %361, %117
  %363 = add i32 %362, %123
  %364 = sub i32 %363, %124
  %365 = add i32 %364, %125
  %366 = add i32 %365, %138
  %367 = sub i32 %366, %33
  %368 = sub i32 %367, %159
  %369 = sub i32 %368, %101
  %370 = add i32 %369, %163
  %371 = add i32 %370, %174
  %372 = add i32 %371, %175
  %373 = sub i32 %372, %181
  %374 = sub i32 %373, %185
  %375 = sub i32 %374, %206
  %376 = sub i32 %375, %211
  %377 = sub i32 %376, %224
  %378 = sub i32 %377, %235
  %379 = add i32 %378, %48
  %380 = sub i32 %379, %249
  %381 = add i32 %380, %251
  %382 = sub i32 %381, %255
  %383 = sub i32 %382, %259
  %384 = sub i32 %383, %77
  %385 = sub i32 %384, %42
  %386 = add i32 %385, %275
  %387 = add i32 %386, %283
  %388 = sub i32 %387, %296
  %389 = sub i32 %388, %298
  %390 = add i32 %389, %200
  %391 = sub i32 %390, %32
  %392 = sub i32 %391, %34
  %393 = add i32 %392, %38
  %394 = add i32 %393, %41
  %395 = add i32 %394, %50
  %396 = sub i32 %395, %58
  %397 = sub i32 %396, %60
  %398 = add i32 %397, %61
  %399 = add i32 %398, %67
  %400 = sub i32 %399, %69
  %401 = sub i32 %400, %70
  %402 = add i32 %401, %71
  %403 = sub i32 %402, %74
  %404 = sub i32 %403, %76
  %405 = add i32 %404, %78
  %406 = add i32 %405, %81
  %407 = add i32 %406, %83
  %408 = sub i32 %407, %85
  %409 = sub i32 %408, %87
  %410 = sub i32 %409, %88
  %411 = sub i32 %410, %92
  %412 = sub i32 %411, %97
  %413 = add i32 %412, %99
  %414 = sub i32 %413, %100
  %415 = sub i32 %414, %103
  %416 = sub i32 %415, %104
  %417 = sub i32 %416, %114
  %418 = add i32 %417, %116
  %419 = add i32 %418, %118
  %420 = add i32 %419, %119
  %421 = sub i32 %420, %128
  %422 = add i32 %421, %133
  %423 = add i32 %422, %139
  %424 = add i32 %423, %146
  %425 = sub i32 %424, %147
  %426 = sub i32 %425, %148
  %427 = sub i32 %426, %152
  %428 = sub i32 %427, %153
  %429 = add i32 %428, %154
  %430 = add i32 %429, %157
  %431 = sub i32 %430, %158
  %432 = sub i32 %431, %160
  %433 = sub i32 %432, %161
  %434 = sub i32 %433, %162
  %435 = add i32 %434, %167
  %436 = add i32 %435, %168
  %437 = add i32 %436, %170
  %438 = add i32 %437, %171
  %439 = sub i32 %438, %172
  %440 = add i32 %439, %173
  %441 = add i32 %440, %176
  %442 = sub i32 %441, %179
  %443 = add i32 %442, %180
  %444 = add i32 %443, %183
  %445 = sub i32 %444, %184
  %446 = sub i32 %445, %187
  %447 = add i32 %446, %188
  %448 = sub i32 %447, %189
  %449 = sub i32 %448, %64
  %450 = add i32 %449, %194
  %451 = sub i32 %450, %201
  %452 = add i32 %451, %203
  %453 = sub i32 %452, %204
  %454 = add i32 %453, %207
  %455 = add i32 %454, %208
  %456 = add i32 %455, %126
  %457 = add i32 %456, %210
  %458 = add i32 %457, %213
  %459 = sub i32 %458, %214
  %460 = add i32 %459, %215
  %461 = sub i32 %460, %216
  %462 = add i32 %461, %217
  %463 = sub i32 %462, %220
  %464 = add i32 %463, %225
  %465 = sub i32 %464, %226
  %466 = sub i32 %465, %229
  %467 = sub i32 %466, %230
  %468 = sub i32 %467, %231
  %469 = add i32 %468, %232
  %470 = sub i32 %469, %233
  %471 = add i32 %470, %237
  %472 = sub i32 %471, %238
  %473 = sub i32 %472, %239
  %474 = add i32 %473, %240
  %475 = add i32 %474, %241
  %476 = sub i32 %475, %242
  %477 = add i32 %476, %244
  %478 = sub i32 %477, %245
  %479 = sub i32 %478, %247
  %480 = sub i32 %479, %248
  %481 = add i32 %480, %250
  %482 = sub i32 %481, %252
  %483 = sub i32 %482, %254
  %484 = add i32 %483, %256
  %485 = add i32 %484, %257
  %486 = add i32 %485, %258
  %487 = sub i32 %486, %260
  %488 = sub i32 %487, %261
  %489 = sub i32 %488, %262
  %490 = sub i32 %489, %263
  %491 = add i32 %490, %264
  %492 = sub i32 %491, %265
  %493 = sub i32 %492, %266
  %494 = sub i32 %493, %267
  %495 = sub i32 %494, %269
  %496 = sub i32 %495, %270
  %497 = add i32 %496, %271
  %498 = add i32 %497, %276
  %499 = add i32 %498, %120
  %500 = sub i32 %499, %280
  %501 = add i32 %500, %140
  %502 = add i32 %501, %281
  %503 = add i32 %502, %282
  %504 = add i32 %503, %286
  %505 = add i32 %504, %288
  %506 = add i32 %505, %295
  %507 = add i32 %506, %301
  %508 = sub i32 %507, %302
  %509 = add i32 %508, %303
  %510 = add i32 %509, %306
  %511 = add i32 %510, %19
  %512 = sub i32 %511, %28
  %513 = sub i32 %512, %56
  %514 = sub i32 %513, %65
  %515 = sub i32 %514, %73
  %516 = sub i32 %515, %108
  %517 = sub i32 %516, %112
  %518 = add i32 %517, %127
  %519 = add i32 %518, %129
  %520 = sub i32 %519, %131
  %521 = add i32 %520, %135
  %522 = sub i32 %521, %137
  %523 = add i32 %522, %142
  %524 = sub i32 %523, %151
  %525 = sub i32 %524, %156
  %526 = sub i32 %525, %166
  %527 = add i32 %526, %169
  %528 = add i32 %527, %178
  %529 = sub i32 %528, %192
  %530 = add i32 %529, %193
  %531 = sub i32 %530, %196
  %532 = sub i32 %531, %212
  %533 = sub i32 %532, %223
  %534 = sub i32 %533, %228
  %535 = sub i32 %534, %243
  %536 = sub i32 %535, %274
  %537 = sub i32 %536, %277
  %538 = sub i32 %537, %285
  %539 = sub i32 %538, %287
  %540 = sub i32 %539, %290
  %541 = sub i32 %540, %292
  %542 = sub i32 %541, %294
  %543 = add i32 %542, %297
  %544 = sub i32 %543, %300
  %545 = add i32 %544, %305
  %546 = add i32 %545, %308
  %547 = add i32 %546, %347
  %548 = sub i32 %547, %23
  %549 = sub i32 %548, %199
  %550 = add i32 %549, %328
  %551 = add i32 %550, %326
  %552 = add i32 %551, %316
  %553 = add i32 %552, %322
  %554 = add i32 %553, %346
  %555 = icmp eq i32 %15, %554
  %556 = select i1 %555, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %557 = tail call i32 @puts(i8* nonnull dereferenceable(1) %556)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
