digraph "DFG for'crackme' function" {
	Node0x55ca10[shape=record, label="  %3 = xor i32 %0, -1"];
	Node0x55ca80[shape=record, label="  %4 = or i32 %3, %1"];
	Node0x55cb40[shape=record, label="  %5 = xor i32 %1, %0"];
	Node0x55cbb0[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x55cc20[shape=record, label="  %7 = xor i32 %5, -1"];
	Node0x55cc90[shape=record, label="  %8 = or i32 %1, %0"];
	Node0x55cd30[shape=record, label="  %9 = xor i32 %0, 2147483647"];
	Node0x55cda0[shape=record, label="  %10 = and i32 %9, %1"];
	Node0x55ce10[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x55ce80[shape=record, label="  %12 = sub i32 1, %0"];
	Node0x55cef0[shape=record, label="  %13 = add i32 %12, %4"];
	Node0x55cf60[shape=record, label="  %14 = add i32 %13, %7"];
	Node0x55cfd0[shape=record, label="  %15 = add i32 %14, %8"];
	Node0x55d040[shape=record, label="  %16 = add i32 %15, %6"];
	Node0x55d0b0[shape=record, label="  %17 = sub i32 %16, %11"];
	Node0x55d120[shape=record, label="  %18 = icmp eq i32 %17, -1"];
	Node0x4fd268[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x55d5c0[shape=record, label="  %20 = tail call i32 @puts(i8* nonnull dereferenceable(1) %19)"];
	Node0x55d610[shape=record, label="  ret void"];
	Node0x55ca10 -> Node0x55ca80;
	Node0x55ca80 -> Node0x55cb40;
	Node0x55cb40 -> Node0x55cbb0;
	Node0x55cbb0 -> Node0x55cc20;
	Node0x55cc20 -> Node0x55cc90;
	Node0x55cc90 -> Node0x55cd30;
	Node0x55cd30 -> Node0x55cda0;
	Node0x55cda0 -> Node0x55ce10;
	Node0x55ce10 -> Node0x55ce80;
	Node0x55ce80 -> Node0x55cef0;
	Node0x55cef0 -> Node0x55cf60;
	Node0x55cf60 -> Node0x55cfd0;
	Node0x55cfd0 -> Node0x55d040;
	Node0x55d040 -> Node0x55d0b0;
	Node0x55d0b0 -> Node0x55d120;
	Node0x55d120 -> Node0x4fd268;
	Node0x4fd268 -> Node0x55d5c0;
	Node0x55d5c0 -> Node0x55d610;
edge [color=red]
	Node0x55ca10 -> Node0x55ca80;
	Node0x55cb40 -> Node0x55cbb0;
	Node0x55cb40 -> Node0x55cc20;
	Node0x55cd30 -> Node0x55cda0;
	Node0x55cda0 -> Node0x55ce10;
	Node0x55ce80 -> Node0x55cef0;
	Node0x55ca80 -> Node0x55cef0;
	Node0x55cef0 -> Node0x55cf60;
	Node0x55cc20 -> Node0x55cf60;
	Node0x55cf60 -> Node0x55cfd0;
	Node0x55cc90 -> Node0x55cfd0;
	Node0x55cfd0 -> Node0x55d040;
	Node0x55cbb0 -> Node0x55d040;
	Node0x55d040 -> Node0x55d0b0;
	Node0x55ce10 -> Node0x55d0b0;
	Node0x55d0b0 -> Node0x55d120;
	Node0x55d120 -> Node0x4fd268;
	Node0x4fd268 -> Node0x55d5c0;
}
