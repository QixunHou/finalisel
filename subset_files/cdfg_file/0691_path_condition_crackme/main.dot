digraph "DFG for'main' function" {
	Node0xe99b58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe99bd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe99c68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xe99cc8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xe9a148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe9a228[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xe9a328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe9a3e8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xe9a498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe9a6f8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xe9a7b8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe9b728[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe9bd98[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xe9be90[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xe9c098[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe9c1f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe9c308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe9c3c8[shape=record, label="  ret i32 0"];
	Node0xe99b58 -> Node0xe99bd8;
	Node0xe99bd8 -> Node0xe99c68;
	Node0xe99c68 -> Node0xe99cc8;
	Node0xe99cc8 -> Node0xe9a148;
	Node0xe9a148 -> Node0xe9a228;
	Node0xe9a228 -> Node0xe9a328;
	Node0xe9a328 -> Node0xe9a3e8;
	Node0xe9a3e8 -> Node0xe9a498;
	Node0xe9a498 -> Node0xe9a6f8;
	Node0xe9a6f8 -> Node0xe9a7b8;
	Node0xe9a7b8 -> Node0xe9b728;
	Node0xe9b728 -> Node0xe9bd98;
	Node0xe9bd98 -> Node0xe9be90;
	Node0xe9be90 -> Node0xe9c098;
	Node0xe9c098 -> Node0xe9c1f8;
	Node0xe9c1f8 -> Node0xe9c308;
	Node0xe9c308 -> Node0xe9c3c8;
edge [color=red]
	Node0xe99b58 -> Node0xe99cc8;
	Node0xe99cc8 -> Node0xe9a148;
	Node0xe99bd8 -> Node0xe9a228;
	Node0xe9a228 -> Node0xe9a328;
	Node0xe99c68 -> Node0xe9a3e8;
	Node0xe9a3e8 -> Node0xe9a498;
	Node0xe99b58 -> Node0xe9a6f8;
	Node0xe99bd8 -> Node0xe9a6f8;
	Node0xe99c68 -> Node0xe9a6f8;
	Node0xe99b58 -> Node0xe9a7b8;
	Node0xe99bd8 -> Node0xe9b728;
	Node0xe99c68 -> Node0xe9bd98;
	Node0xe9a7b8 -> Node0xe9be90;
	Node0xe9b728 -> Node0xe9be90;
	Node0xe9bd98 -> Node0xe9be90;
	Node0xe9a3e8 -> Node0xe9c098;
	Node0xe9a228 -> Node0xe9c1f8;
	Node0xe99cc8 -> Node0xe9c308;
}
