digraph "DFG for'main' function" {
	Node0x169ced8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x169cf58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x169cfe8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x169d448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x169d528[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x169d648[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x169d880[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x169d938[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x169e8a8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x169ef30[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x169efa0[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x169f010[shape=record, label="  %10 = mul i32 %9, 5"];
	Node0x169f080[shape=record, label="  %11 = add i32 %10, %7"];
	Node0x169f0f0[shape=record, label="  %12 = mul i32 %8, -2"];
	Node0x169f160[shape=record, label="  %13 = or i32 %12, 1"];
	Node0x169f1d0[shape=record, label="  %14 = xor i32 %7, -1"];
	Node0x169f240[shape=record, label="  %15 = and i32 %6, %14"];
	Node0x169f2b0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x169f320[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x169f390[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x169f400[shape=record, label="  %19 = mul i32 %18, 5"];
	Node0x169f470[shape=record, label="  %20 = xor i32 %6, 2147483647"];
	Node0x169f4e0[shape=record, label="  %21 = and i32 %20, %7"];
	Node0x169f550[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x169f5c0[shape=record, label="  %23 = shl i32 %15, 2"];
	Node0x169f630[shape=record, label="  %24 = and i32 %7, %6"];
	Node0x169f6a0[shape=record, label="  %25 = mul i32 %24, 6"];
	Node0x169f710[shape=record, label="  %26 = sub i32 %7, %6"];
	Node0x169f780[shape=record, label="  %27 = add i32 %26, %16"];
	Node0x169f7f0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x169f860[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x169f8d0[shape=record, label="  %30 = add i32 %29, %23"];
	Node0x169f940[shape=record, label="  %31 = add i32 %30, %25"];
	Node0x169f9b0[shape=record, label="  %32 = add i32 %31, %13"];
	Node0x169fc30[shape=record, label="  %33 = icmp eq i32 %11, %32"];
	Node0x163d9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x169fcc0[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x169ff18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16a0078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x16a0138[shape=record, label="  ret i32 0"];
	Node0x169ced8 -> Node0x169cf58;
	Node0x169cf58 -> Node0x169cfe8;
	Node0x169cfe8 -> Node0x169d448;
	Node0x169d448 -> Node0x169d528;
	Node0x169d528 -> Node0x169d648;
	Node0x169d648 -> Node0x169d880;
	Node0x169d880 -> Node0x169d938;
	Node0x169d938 -> Node0x169e8a8;
	Node0x169e8a8 -> Node0x169ef30;
	Node0x169ef30 -> Node0x169efa0;
	Node0x169efa0 -> Node0x169f010;
	Node0x169f010 -> Node0x169f080;
	Node0x169f080 -> Node0x169f0f0;
	Node0x169f0f0 -> Node0x169f160;
	Node0x169f160 -> Node0x169f1d0;
	Node0x169f1d0 -> Node0x169f240;
	Node0x169f240 -> Node0x169f2b0;
	Node0x169f2b0 -> Node0x169f320;
	Node0x169f320 -> Node0x169f390;
	Node0x169f390 -> Node0x169f400;
	Node0x169f400 -> Node0x169f470;
	Node0x169f470 -> Node0x169f4e0;
	Node0x169f4e0 -> Node0x169f550;
	Node0x169f550 -> Node0x169f5c0;
	Node0x169f5c0 -> Node0x169f630;
	Node0x169f630 -> Node0x169f6a0;
	Node0x169f6a0 -> Node0x169f710;
	Node0x169f710 -> Node0x169f780;
	Node0x169f780 -> Node0x169f7f0;
	Node0x169f7f0 -> Node0x169f860;
	Node0x169f860 -> Node0x169f8d0;
	Node0x169f8d0 -> Node0x169f940;
	Node0x169f940 -> Node0x169f9b0;
	Node0x169f9b0 -> Node0x169fc30;
	Node0x169fc30 -> Node0x163d9d8;
	Node0x163d9d8 -> Node0x169fcc0;
	Node0x169fcc0 -> Node0x169ff18;
	Node0x169ff18 -> Node0x16a0078;
	Node0x16a0078 -> Node0x16a0138;
edge [color=red]
	Node0x169ced8 -> Node0x169cfe8;
	Node0x169cfe8 -> Node0x169d448;
	Node0x169cf58 -> Node0x169d528;
	Node0x169d528 -> Node0x169d648;
	Node0x169ced8 -> Node0x169d880;
	Node0x169cf58 -> Node0x169d880;
	Node0x169ced8 -> Node0x169d938;
	Node0x169cf58 -> Node0x169e8a8;
	Node0x169e8a8 -> Node0x169ef30;
	Node0x169d938 -> Node0x169ef30;
	Node0x169ef30 -> Node0x169efa0;
	Node0x169efa0 -> Node0x169f010;
	Node0x169f010 -> Node0x169f080;
	Node0x169e8a8 -> Node0x169f080;
	Node0x169ef30 -> Node0x169f0f0;
	Node0x169f0f0 -> Node0x169f160;
	Node0x169e8a8 -> Node0x169f1d0;
	Node0x169d938 -> Node0x169f240;
	Node0x169f1d0 -> Node0x169f240;
	Node0x169f240 -> Node0x169f2b0;
	Node0x169e8a8 -> Node0x169f320;
	Node0x169d938 -> Node0x169f320;
	Node0x169f320 -> Node0x169f390;
	Node0x169f390 -> Node0x169f400;
	Node0x169d938 -> Node0x169f470;
	Node0x169f470 -> Node0x169f4e0;
	Node0x169e8a8 -> Node0x169f4e0;
	Node0x169f4e0 -> Node0x169f550;
	Node0x169f240 -> Node0x169f5c0;
	Node0x169e8a8 -> Node0x169f630;
	Node0x169d938 -> Node0x169f630;
	Node0x169f630 -> Node0x169f6a0;
	Node0x169e8a8 -> Node0x169f710;
	Node0x169d938 -> Node0x169f710;
	Node0x169f710 -> Node0x169f780;
	Node0x169f2b0 -> Node0x169f780;
	Node0x169f780 -> Node0x169f7f0;
	Node0x169f400 -> Node0x169f7f0;
	Node0x169f7f0 -> Node0x169f860;
	Node0x169f550 -> Node0x169f860;
	Node0x169f860 -> Node0x169f8d0;
	Node0x169f5c0 -> Node0x169f8d0;
	Node0x169f8d0 -> Node0x169f940;
	Node0x169f6a0 -> Node0x169f940;
	Node0x169f940 -> Node0x169f9b0;
	Node0x169f160 -> Node0x169f9b0;
	Node0x169f080 -> Node0x169fc30;
	Node0x169f9b0 -> Node0x169fc30;
	Node0x169fc30 -> Node0x163d9d8;
	Node0x163d9d8 -> Node0x169fcc0;
	Node0x169d528 -> Node0x169ff18;
	Node0x169cfe8 -> Node0x16a0078;
}
