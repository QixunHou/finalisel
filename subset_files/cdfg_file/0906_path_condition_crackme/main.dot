digraph "DFG for'main' function" {
	Node0x2323228[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23232a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2323338[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2323398[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2323818[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23238f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x23239f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2323ab8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2323b68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2323dc8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x2323e88[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2323fe8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2324048[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2329940[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x2329b48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2329ca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2329db8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2329e78[shape=record, label="  ret i32 0"];
	Node0x2323228 -> Node0x23232a8;
	Node0x23232a8 -> Node0x2323338;
	Node0x2323338 -> Node0x2323398;
	Node0x2323398 -> Node0x2323818;
	Node0x2323818 -> Node0x23238f8;
	Node0x23238f8 -> Node0x23239f8;
	Node0x23239f8 -> Node0x2323ab8;
	Node0x2323ab8 -> Node0x2323b68;
	Node0x2323b68 -> Node0x2323dc8;
	Node0x2323dc8 -> Node0x2323e88;
	Node0x2323e88 -> Node0x2323fe8;
	Node0x2323fe8 -> Node0x2324048;
	Node0x2324048 -> Node0x2329940;
	Node0x2329940 -> Node0x2329b48;
	Node0x2329b48 -> Node0x2329ca8;
	Node0x2329ca8 -> Node0x2329db8;
	Node0x2329db8 -> Node0x2329e78;
edge [color=red]
	Node0x2323228 -> Node0x2323398;
	Node0x2323398 -> Node0x2323818;
	Node0x23232a8 -> Node0x23238f8;
	Node0x23238f8 -> Node0x23239f8;
	Node0x2323338 -> Node0x2323ab8;
	Node0x2323ab8 -> Node0x2323b68;
	Node0x2323228 -> Node0x2323dc8;
	Node0x23232a8 -> Node0x2323dc8;
	Node0x2323338 -> Node0x2323dc8;
	Node0x2323228 -> Node0x2323e88;
	Node0x23232a8 -> Node0x2323fe8;
	Node0x2323338 -> Node0x2324048;
	Node0x2323e88 -> Node0x2329940;
	Node0x2323fe8 -> Node0x2329940;
	Node0x2324048 -> Node0x2329940;
	Node0x2323ab8 -> Node0x2329b48;
	Node0x23238f8 -> Node0x2329ca8;
	Node0x2323398 -> Node0x2329db8;
}
