digraph "DFG for'crackme' function" {
	Node0x14fc0c0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x14fc160[shape=record, label="  %6 = add i32 %2, 1"];
	Node0x14fc1d0[shape=record, label="  %7 = sub i32 %6, %3"];
	Node0x14fc240[shape=record, label="  %8 = or i32 %3, %0"];
	Node0x14fc2b0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x14fc320[shape=record, label="  %10 = sub i32 %7, %9"];
	Node0x14fc390[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x14fc430[shape=record, label="  %12 = shl i32 %11, 2"];
	Node0x14fc4a0[shape=record, label="  %13 = and i32 %5, %1"];
	Node0x14fc510[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x14fc5b0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x14fc620[shape=record, label="  %16 = and i32 %2, %1"];
	Node0x14fc690[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x14fc700[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x14fc770[shape=record, label="  %19 = or i32 %5, %1"];
	Node0x14fc7e0[shape=record, label="  %20 = or i32 %2, %1"];
	Node0x14fc850[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x14fc8c0[shape=record, label="  %22 = shl i32 %19, 2"];
	Node0x14fc960[shape=record, label="  %23 = xor i32 %22, -4"];
	Node0x14fca00[shape=record, label="  %24 = mul i32 %13, -5"];
	Node0x14fca70[shape=record, label="  %25 = xor i32 %3, %0"];
	Node0x14fcae0[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x14fcb50[shape=record, label="  %27 = xor i32 %0, -1"];
	Node0x14fcbc0[shape=record, label="  %28 = and i32 %27, %3"];
	Node0x14fcc30[shape=record, label="  %29 = and i32 %3, %0"];
	Node0x14fcca0[shape=record, label="  %30 = add i32 %16, %21"];
	Node0x14fcd10[shape=record, label="  %31 = add i32 %30, %29"];
	Node0x14fcdb0[shape=record, label="  %32 = mul i32 %31, -3"];
	Node0x14fd030[shape=record, label="  %33 = add i32 %19, %5"];
	Node0x14fd0a0[shape=record, label="  %34 = add i32 %33, %12"];
	Node0x14fd110[shape=record, label="  %35 = add i32 %34, %24"];
	Node0x14fd180[shape=record, label="  %36 = sub i32 %35, %28"];
	Node0x14fd1f0[shape=record, label="  %37 = add i32 %36, %15"];
	Node0x14fd260[shape=record, label="  %38 = sub i32 %37, %18"];
	Node0x14fd2d0[shape=record, label="  %39 = sub i32 %38, %23"];
	Node0x14fd340[shape=record, label="  %40 = sub i32 %39, %26"];
	Node0x14fd3b0[shape=record, label="  %41 = add i32 %40, %32"];
	Node0x14fd420[shape=record, label="  %42 = icmp eq i32 %10, %41"];
	Node0x149c268[shape=record, label="  %43 = select i1 %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14fd8c0[shape=record, label="  %44 = tail call i32 @puts(i8* nonnull dereferenceable(1) %43)"];
	Node0x14fd910[shape=record, label="  ret void"];
	Node0x14fc0c0 -> Node0x14fc160;
	Node0x14fc160 -> Node0x14fc1d0;
	Node0x14fc1d0 -> Node0x14fc240;
	Node0x14fc240 -> Node0x14fc2b0;
	Node0x14fc2b0 -> Node0x14fc320;
	Node0x14fc320 -> Node0x14fc390;
	Node0x14fc390 -> Node0x14fc430;
	Node0x14fc430 -> Node0x14fc4a0;
	Node0x14fc4a0 -> Node0x14fc510;
	Node0x14fc510 -> Node0x14fc5b0;
	Node0x14fc5b0 -> Node0x14fc620;
	Node0x14fc620 -> Node0x14fc690;
	Node0x14fc690 -> Node0x14fc700;
	Node0x14fc700 -> Node0x14fc770;
	Node0x14fc770 -> Node0x14fc7e0;
	Node0x14fc7e0 -> Node0x14fc850;
	Node0x14fc850 -> Node0x14fc8c0;
	Node0x14fc8c0 -> Node0x14fc960;
	Node0x14fc960 -> Node0x14fca00;
	Node0x14fca00 -> Node0x14fca70;
	Node0x14fca70 -> Node0x14fcae0;
	Node0x14fcae0 -> Node0x14fcb50;
	Node0x14fcb50 -> Node0x14fcbc0;
	Node0x14fcbc0 -> Node0x14fcc30;
	Node0x14fcc30 -> Node0x14fcca0;
	Node0x14fcca0 -> Node0x14fcd10;
	Node0x14fcd10 -> Node0x14fcdb0;
	Node0x14fcdb0 -> Node0x14fd030;
	Node0x14fd030 -> Node0x14fd0a0;
	Node0x14fd0a0 -> Node0x14fd110;
	Node0x14fd110 -> Node0x14fd180;
	Node0x14fd180 -> Node0x14fd1f0;
	Node0x14fd1f0 -> Node0x14fd260;
	Node0x14fd260 -> Node0x14fd2d0;
	Node0x14fd2d0 -> Node0x14fd340;
	Node0x14fd340 -> Node0x14fd3b0;
	Node0x14fd3b0 -> Node0x14fd420;
	Node0x14fd420 -> Node0x149c268;
	Node0x149c268 -> Node0x14fd8c0;
	Node0x14fd8c0 -> Node0x14fd910;
edge [color=red]
	Node0x14fc160 -> Node0x14fc1d0;
	Node0x14fc240 -> Node0x14fc2b0;
	Node0x14fc1d0 -> Node0x14fc320;
	Node0x14fc2b0 -> Node0x14fc320;
	Node0x14fc390 -> Node0x14fc430;
	Node0x14fc0c0 -> Node0x14fc4a0;
	Node0x14fc4a0 -> Node0x14fc510;
	Node0x14fc510 -> Node0x14fc5b0;
	Node0x14fc620 -> Node0x14fc690;
	Node0x14fc690 -> Node0x14fc700;
	Node0x14fc0c0 -> Node0x14fc770;
	Node0x14fc7e0 -> Node0x14fc850;
	Node0x14fc770 -> Node0x14fc8c0;
	Node0x14fc8c0 -> Node0x14fc960;
	Node0x14fc4a0 -> Node0x14fca00;
	Node0x14fca70 -> Node0x14fcae0;
	Node0x14fcb50 -> Node0x14fcbc0;
	Node0x14fc620 -> Node0x14fcca0;
	Node0x14fc850 -> Node0x14fcca0;
	Node0x14fcca0 -> Node0x14fcd10;
	Node0x14fcc30 -> Node0x14fcd10;
	Node0x14fcd10 -> Node0x14fcdb0;
	Node0x14fc770 -> Node0x14fd030;
	Node0x14fc0c0 -> Node0x14fd030;
	Node0x14fd030 -> Node0x14fd0a0;
	Node0x14fc430 -> Node0x14fd0a0;
	Node0x14fd0a0 -> Node0x14fd110;
	Node0x14fca00 -> Node0x14fd110;
	Node0x14fd110 -> Node0x14fd180;
	Node0x14fcbc0 -> Node0x14fd180;
	Node0x14fd180 -> Node0x14fd1f0;
	Node0x14fc5b0 -> Node0x14fd1f0;
	Node0x14fd1f0 -> Node0x14fd260;
	Node0x14fc700 -> Node0x14fd260;
	Node0x14fd260 -> Node0x14fd2d0;
	Node0x14fc960 -> Node0x14fd2d0;
	Node0x14fd2d0 -> Node0x14fd340;
	Node0x14fcae0 -> Node0x14fd340;
	Node0x14fd340 -> Node0x14fd3b0;
	Node0x14fcdb0 -> Node0x14fd3b0;
	Node0x14fc320 -> Node0x14fd420;
	Node0x14fd3b0 -> Node0x14fd420;
	Node0x14fd420 -> Node0x149c268;
	Node0x149c268 -> Node0x14fd8c0;
}
