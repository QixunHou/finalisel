digraph "DFG for'main' function" {
	Node0x23e0c88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23e0d08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23e0d98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x23e11f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x23e12d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x23e13f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23e1630[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x23e16e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23e2658[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23e2ce0[shape=record, label="  %8 = shl i32 %6, 1"];
	Node0x23e2d50[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x23e2dc0[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x23e2e30[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x23e2ea0[shape=record, label="  %12 = sub i32 %9, %11"];
	Node0x23e2f10[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x23e2f80[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x23e2ff0[shape=record, label="  %15 = mul i32 %14, -2"];
	Node0x23e3060[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x23e30d0[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x23e3140[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x23e31b0[shape=record, label="  %19 = xor i32 %7, -1"];
	Node0x23e3220[shape=record, label="  %20 = xor i32 %6, -1"];
	Node0x23e3290[shape=record, label="  %21 = and i32 %7, %20"];
	Node0x23e3300[shape=record, label="  %22 = and i32 %6, %19"];
	Node0x23e3370[shape=record, label="  %23 = shl i32 %13, 1"];
	Node0x23e33e0[shape=record, label="  %24 = add i32 %7, %6"];
	Node0x23e3450[shape=record, label="  %25 = add i32 %24, %21"];
	Node0x23e34c0[shape=record, label="  %26 = sub i32 %25, %22"];
	Node0x23e3530[shape=record, label="  %27 = add i32 %26, %15"];
	Node0x23e35a0[shape=record, label="  %28 = sub i32 %27, %23"];
	Node0x23e3610[shape=record, label="  %29 = add i32 %28, %18"];
	Node0x23e3680[shape=record, label="  %30 = icmp eq i32 %12, %29"];
	Node0x23819d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23e3710[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x23e3b78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23e3cd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x23e3d98[shape=record, label="  ret i32 0"];
	Node0x23e0c88 -> Node0x23e0d08;
	Node0x23e0d08 -> Node0x23e0d98;
	Node0x23e0d98 -> Node0x23e11f8;
	Node0x23e11f8 -> Node0x23e12d8;
	Node0x23e12d8 -> Node0x23e13f8;
	Node0x23e13f8 -> Node0x23e1630;
	Node0x23e1630 -> Node0x23e16e8;
	Node0x23e16e8 -> Node0x23e2658;
	Node0x23e2658 -> Node0x23e2ce0;
	Node0x23e2ce0 -> Node0x23e2d50;
	Node0x23e2d50 -> Node0x23e2dc0;
	Node0x23e2dc0 -> Node0x23e2e30;
	Node0x23e2e30 -> Node0x23e2ea0;
	Node0x23e2ea0 -> Node0x23e2f10;
	Node0x23e2f10 -> Node0x23e2f80;
	Node0x23e2f80 -> Node0x23e2ff0;
	Node0x23e2ff0 -> Node0x23e3060;
	Node0x23e3060 -> Node0x23e30d0;
	Node0x23e30d0 -> Node0x23e3140;
	Node0x23e3140 -> Node0x23e31b0;
	Node0x23e31b0 -> Node0x23e3220;
	Node0x23e3220 -> Node0x23e3290;
	Node0x23e3290 -> Node0x23e3300;
	Node0x23e3300 -> Node0x23e3370;
	Node0x23e3370 -> Node0x23e33e0;
	Node0x23e33e0 -> Node0x23e3450;
	Node0x23e3450 -> Node0x23e34c0;
	Node0x23e34c0 -> Node0x23e3530;
	Node0x23e3530 -> Node0x23e35a0;
	Node0x23e35a0 -> Node0x23e3610;
	Node0x23e3610 -> Node0x23e3680;
	Node0x23e3680 -> Node0x23819d8;
	Node0x23819d8 -> Node0x23e3710;
	Node0x23e3710 -> Node0x23e3b78;
	Node0x23e3b78 -> Node0x23e3cd8;
	Node0x23e3cd8 -> Node0x23e3d98;
edge [color=red]
	Node0x23e0c88 -> Node0x23e0d98;
	Node0x23e0d98 -> Node0x23e11f8;
	Node0x23e0d08 -> Node0x23e12d8;
	Node0x23e12d8 -> Node0x23e13f8;
	Node0x23e0c88 -> Node0x23e1630;
	Node0x23e0d08 -> Node0x23e1630;
	Node0x23e0c88 -> Node0x23e16e8;
	Node0x23e0d08 -> Node0x23e2658;
	Node0x23e16e8 -> Node0x23e2ce0;
	Node0x23e2ce0 -> Node0x23e2d50;
	Node0x23e2658 -> Node0x23e2dc0;
	Node0x23e16e8 -> Node0x23e2dc0;
	Node0x23e2dc0 -> Node0x23e2e30;
	Node0x23e2d50 -> Node0x23e2ea0;
	Node0x23e2e30 -> Node0x23e2ea0;
	Node0x23e2658 -> Node0x23e2f10;
	Node0x23e16e8 -> Node0x23e2f10;
	Node0x23e2f10 -> Node0x23e2f80;
	Node0x23e2f80 -> Node0x23e2ff0;
	Node0x23e2658 -> Node0x23e3060;
	Node0x23e16e8 -> Node0x23e3060;
	Node0x23e3060 -> Node0x23e30d0;
	Node0x23e30d0 -> Node0x23e3140;
	Node0x23e2658 -> Node0x23e31b0;
	Node0x23e16e8 -> Node0x23e3220;
	Node0x23e2658 -> Node0x23e3290;
	Node0x23e3220 -> Node0x23e3290;
	Node0x23e16e8 -> Node0x23e3300;
	Node0x23e31b0 -> Node0x23e3300;
	Node0x23e2f10 -> Node0x23e3370;
	Node0x23e2658 -> Node0x23e33e0;
	Node0x23e16e8 -> Node0x23e33e0;
	Node0x23e33e0 -> Node0x23e3450;
	Node0x23e3290 -> Node0x23e3450;
	Node0x23e3450 -> Node0x23e34c0;
	Node0x23e3300 -> Node0x23e34c0;
	Node0x23e34c0 -> Node0x23e3530;
	Node0x23e2ff0 -> Node0x23e3530;
	Node0x23e3530 -> Node0x23e35a0;
	Node0x23e3370 -> Node0x23e35a0;
	Node0x23e35a0 -> Node0x23e3610;
	Node0x23e3140 -> Node0x23e3610;
	Node0x23e2ea0 -> Node0x23e3680;
	Node0x23e3610 -> Node0x23e3680;
	Node0x23e3680 -> Node0x23819d8;
	Node0x23819d8 -> Node0x23e3710;
	Node0x23e12d8 -> Node0x23e3b78;
	Node0x23e0d98 -> Node0x23e3cd8;
}
