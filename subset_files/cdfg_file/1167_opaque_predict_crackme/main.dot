digraph "DFG for'main' function" {
	Node0x1978f38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1978fb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1979048[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x19794a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1979588[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x19796a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19798e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1979998[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x197a908[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x197af90[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x197b000[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x197b070[shape=record, label="  %10 = mul i32 %9, -4"];
	Node0x197b0e0[shape=record, label="  %11 = add i32 %10, %8"];
	Node0x197b150[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x197b1c0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x197b230[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x197b2a0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x197b310[shape=record, label="  %16 = or i32 %6, %12"];
	Node0x197b380[shape=record, label="  %17 = and i32 %6, %12"];
	Node0x197b3f0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x197b460[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x197b4d0[shape=record, label="  %20 = or i32 %7, %6"];
	Node0x197b540[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x197b5b0[shape=record, label="  %22 = mul i32 %21, -3"];
	Node0x197b620[shape=record, label="  %23 = shl i32 %16, 1"];
	Node0x197b690[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x197b700[shape=record, label="  %25 = shl i32 %17, 2"];
	Node0x197b770[shape=record, label="  %26 = shl i32 %13, 2"];
	Node0x197b7e0[shape=record, label="  %27 = add i32 %16, %7"];
	Node0x197b850[shape=record, label="  %28 = sub i32 %22, %27"];
	Node0x197b8c0[shape=record, label="  %29 = add i32 %28, %25"];
	Node0x197b930[shape=record, label="  %30 = sub i32 %29, %26"];
	Node0x197b9a0[shape=record, label="  %31 = sub i32 %30, %15"];
	Node0x197ba10[shape=record, label="  %32 = add i32 %31, %19"];
	Node0x197bc90[shape=record, label="  %33 = add i32 %32, %24"];
	Node0x197bd00[shape=record, label="  %34 = icmp eq i32 %11, %33"];
	Node0x19199d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x197bd90[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0x197bfe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x197c148[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x197c208[shape=record, label="  ret i32 0"];
	Node0x1978f38 -> Node0x1978fb8;
	Node0x1978fb8 -> Node0x1979048;
	Node0x1979048 -> Node0x19794a8;
	Node0x19794a8 -> Node0x1979588;
	Node0x1979588 -> Node0x19796a8;
	Node0x19796a8 -> Node0x19798e0;
	Node0x19798e0 -> Node0x1979998;
	Node0x1979998 -> Node0x197a908;
	Node0x197a908 -> Node0x197af90;
	Node0x197af90 -> Node0x197b000;
	Node0x197b000 -> Node0x197b070;
	Node0x197b070 -> Node0x197b0e0;
	Node0x197b0e0 -> Node0x197b150;
	Node0x197b150 -> Node0x197b1c0;
	Node0x197b1c0 -> Node0x197b230;
	Node0x197b230 -> Node0x197b2a0;
	Node0x197b2a0 -> Node0x197b310;
	Node0x197b310 -> Node0x197b380;
	Node0x197b380 -> Node0x197b3f0;
	Node0x197b3f0 -> Node0x197b460;
	Node0x197b460 -> Node0x197b4d0;
	Node0x197b4d0 -> Node0x197b540;
	Node0x197b540 -> Node0x197b5b0;
	Node0x197b5b0 -> Node0x197b620;
	Node0x197b620 -> Node0x197b690;
	Node0x197b690 -> Node0x197b700;
	Node0x197b700 -> Node0x197b770;
	Node0x197b770 -> Node0x197b7e0;
	Node0x197b7e0 -> Node0x197b850;
	Node0x197b850 -> Node0x197b8c0;
	Node0x197b8c0 -> Node0x197b930;
	Node0x197b930 -> Node0x197b9a0;
	Node0x197b9a0 -> Node0x197ba10;
	Node0x197ba10 -> Node0x197bc90;
	Node0x197bc90 -> Node0x197bd00;
	Node0x197bd00 -> Node0x19199d8;
	Node0x19199d8 -> Node0x197bd90;
	Node0x197bd90 -> Node0x197bfe8;
	Node0x197bfe8 -> Node0x197c148;
	Node0x197c148 -> Node0x197c208;
edge [color=red]
	Node0x1978f38 -> Node0x1979048;
	Node0x1979048 -> Node0x19794a8;
	Node0x1978fb8 -> Node0x1979588;
	Node0x1979588 -> Node0x19796a8;
	Node0x1978f38 -> Node0x19798e0;
	Node0x1978fb8 -> Node0x19798e0;
	Node0x1978f38 -> Node0x1979998;
	Node0x1978fb8 -> Node0x197a908;
	Node0x197a908 -> Node0x197af90;
	Node0x1979998 -> Node0x197af90;
	Node0x197af90 -> Node0x197b000;
	Node0x197b000 -> Node0x197b070;
	Node0x197b070 -> Node0x197b0e0;
	Node0x197af90 -> Node0x197b0e0;
	Node0x197a908 -> Node0x197b150;
	Node0x197a908 -> Node0x197b1c0;
	Node0x1979998 -> Node0x197b1c0;
	Node0x197b1c0 -> Node0x197b230;
	Node0x197b230 -> Node0x197b2a0;
	Node0x1979998 -> Node0x197b310;
	Node0x197b150 -> Node0x197b310;
	Node0x1979998 -> Node0x197b380;
	Node0x197b150 -> Node0x197b380;
	Node0x197b380 -> Node0x197b3f0;
	Node0x197b3f0 -> Node0x197b460;
	Node0x197a908 -> Node0x197b4d0;
	Node0x1979998 -> Node0x197b4d0;
	Node0x197b4d0 -> Node0x197b540;
	Node0x197b540 -> Node0x197b5b0;
	Node0x197b310 -> Node0x197b620;
	Node0x197b620 -> Node0x197b690;
	Node0x197b380 -> Node0x197b700;
	Node0x197b1c0 -> Node0x197b770;
	Node0x197b310 -> Node0x197b7e0;
	Node0x197a908 -> Node0x197b7e0;
	Node0x197b5b0 -> Node0x197b850;
	Node0x197b7e0 -> Node0x197b850;
	Node0x197b850 -> Node0x197b8c0;
	Node0x197b700 -> Node0x197b8c0;
	Node0x197b8c0 -> Node0x197b930;
	Node0x197b770 -> Node0x197b930;
	Node0x197b930 -> Node0x197b9a0;
	Node0x197b2a0 -> Node0x197b9a0;
	Node0x197b9a0 -> Node0x197ba10;
	Node0x197b460 -> Node0x197ba10;
	Node0x197ba10 -> Node0x197bc90;
	Node0x197b690 -> Node0x197bc90;
	Node0x197b0e0 -> Node0x197bd00;
	Node0x197bc90 -> Node0x197bd00;
	Node0x197bd00 -> Node0x19199d8;
	Node0x19199d8 -> Node0x197bd90;
	Node0x1979588 -> Node0x197bfe8;
	Node0x1979048 -> Node0x197c148;
}
