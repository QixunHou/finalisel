digraph "DFG for'main' function" {
	Node0x8a3798[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x8a3818[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x8a38a8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x8a3d08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x8a3de8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x8a3f08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8a4140[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x8a41f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x8a5168[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x8a57f0[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x8a5860[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x8a58d0[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x8a5940[shape=record, label="  %11 = or i32 %6, %9"];
	Node0x8a59b0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x8a5a20[shape=record, label="  %13 = and i32 %6, %9"];
	Node0x8a5a90[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x8a5b00[shape=record, label="  %15 = and i32 %7, %6"];
	Node0x8a5b70[shape=record, label="  %16 = add i32 %15, %9"];
	Node0x8a5be0[shape=record, label="  %17 = add i32 %16, %10"];
	Node0x8a5c50[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x8a5cc0[shape=record, label="  %19 = sub i32 1, %11"];
	Node0x8a5d30[shape=record, label="  %20 = add i32 %19, %12"];
	Node0x8a5da0[shape=record, label="  %21 = sub i32 %20, %14"];
	Node0x8a5e10[shape=record, label="  %22 = add i32 %21, %18"];
	Node0x8a5e80[shape=record, label="  %23 = icmp eq i32 %8, %22"];
	Node0x8449d8[shape=record, label="  %24 = select i1 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8a5f10[shape=record, label="  %25 = call i32 @puts(i8* nonnull dereferenceable(1) %24) #5"];
	Node0x8a6168[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8a62c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x8a6388[shape=record, label="  ret i32 0"];
	Node0x8a3798 -> Node0x8a3818;
	Node0x8a3818 -> Node0x8a38a8;
	Node0x8a38a8 -> Node0x8a3d08;
	Node0x8a3d08 -> Node0x8a3de8;
	Node0x8a3de8 -> Node0x8a3f08;
	Node0x8a3f08 -> Node0x8a4140;
	Node0x8a4140 -> Node0x8a41f8;
	Node0x8a41f8 -> Node0x8a5168;
	Node0x8a5168 -> Node0x8a57f0;
	Node0x8a57f0 -> Node0x8a5860;
	Node0x8a5860 -> Node0x8a58d0;
	Node0x8a58d0 -> Node0x8a5940;
	Node0x8a5940 -> Node0x8a59b0;
	Node0x8a59b0 -> Node0x8a5a20;
	Node0x8a5a20 -> Node0x8a5a90;
	Node0x8a5a90 -> Node0x8a5b00;
	Node0x8a5b00 -> Node0x8a5b70;
	Node0x8a5b70 -> Node0x8a5be0;
	Node0x8a5be0 -> Node0x8a5c50;
	Node0x8a5c50 -> Node0x8a5cc0;
	Node0x8a5cc0 -> Node0x8a5d30;
	Node0x8a5d30 -> Node0x8a5da0;
	Node0x8a5da0 -> Node0x8a5e10;
	Node0x8a5e10 -> Node0x8a5e80;
	Node0x8a5e80 -> Node0x8449d8;
	Node0x8449d8 -> Node0x8a5f10;
	Node0x8a5f10 -> Node0x8a6168;
	Node0x8a6168 -> Node0x8a62c8;
	Node0x8a62c8 -> Node0x8a6388;
edge [color=red]
	Node0x8a3798 -> Node0x8a38a8;
	Node0x8a38a8 -> Node0x8a3d08;
	Node0x8a3818 -> Node0x8a3de8;
	Node0x8a3de8 -> Node0x8a3f08;
	Node0x8a3798 -> Node0x8a4140;
	Node0x8a3818 -> Node0x8a4140;
	Node0x8a3798 -> Node0x8a41f8;
	Node0x8a3818 -> Node0x8a5168;
	Node0x8a5168 -> Node0x8a57f0;
	Node0x8a5168 -> Node0x8a5860;
	Node0x8a5168 -> Node0x8a58d0;
	Node0x8a41f8 -> Node0x8a58d0;
	Node0x8a41f8 -> Node0x8a5940;
	Node0x8a5860 -> Node0x8a5940;
	Node0x8a5940 -> Node0x8a59b0;
	Node0x8a41f8 -> Node0x8a5a20;
	Node0x8a5860 -> Node0x8a5a20;
	Node0x8a5a20 -> Node0x8a5a90;
	Node0x8a5168 -> Node0x8a5b00;
	Node0x8a41f8 -> Node0x8a5b00;
	Node0x8a5b00 -> Node0x8a5b70;
	Node0x8a5860 -> Node0x8a5b70;
	Node0x8a5b70 -> Node0x8a5be0;
	Node0x8a58d0 -> Node0x8a5be0;
	Node0x8a5be0 -> Node0x8a5c50;
	Node0x8a5940 -> Node0x8a5cc0;
	Node0x8a5cc0 -> Node0x8a5d30;
	Node0x8a59b0 -> Node0x8a5d30;
	Node0x8a5d30 -> Node0x8a5da0;
	Node0x8a5a90 -> Node0x8a5da0;
	Node0x8a5da0 -> Node0x8a5e10;
	Node0x8a5c50 -> Node0x8a5e10;
	Node0x8a57f0 -> Node0x8a5e80;
	Node0x8a5e10 -> Node0x8a5e80;
	Node0x8a5e80 -> Node0x8449d8;
	Node0x8449d8 -> Node0x8a5f10;
	Node0x8a3de8 -> Node0x8a6168;
	Node0x8a38a8 -> Node0x8a62c8;
}
