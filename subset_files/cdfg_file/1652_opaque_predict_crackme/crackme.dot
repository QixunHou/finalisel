digraph "DFG for'crackme' function" {
	Node0x8a2a00[shape=record, label="  %3 = shl i32 %1, 1"];
	Node0x8a2aa0[shape=record, label="  %4 = xor i32 %1, -1"];
	Node0x8a2b60[shape=record, label="  %5 = or i32 %1, %0"];
	Node0x8a2bd0[shape=record, label="  %6 = or i32 %4, %0"];
	Node0x8a2c40[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x8a2cb0[shape=record, label="  %8 = and i32 %4, %0"];
	Node0x8a2d20[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x8a2d90[shape=record, label="  %10 = and i32 %1, %0"];
	Node0x8a2e00[shape=record, label="  %11 = add i32 %10, %4"];
	Node0x8a2e70[shape=record, label="  %12 = add i32 %11, %5"];
	Node0x8a2ee0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x8a2f50[shape=record, label="  %14 = sub i32 1, %6"];
	Node0x8a2fc0[shape=record, label="  %15 = add i32 %14, %7"];
	Node0x8a3030[shape=record, label="  %16 = sub i32 %15, %9"];
	Node0x8a30a0[shape=record, label="  %17 = add i32 %16, %13"];
	Node0x8a3110[shape=record, label="  %18 = icmp eq i32 %3, %17"];
	Node0x843268[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8a3580[shape=record, label="  %20 = tail call i32 @puts(i8* nonnull dereferenceable(1) %19)"];
	Node0x8a35d0[shape=record, label="  ret void"];
	Node0x8a2a00 -> Node0x8a2aa0;
	Node0x8a2aa0 -> Node0x8a2b60;
	Node0x8a2b60 -> Node0x8a2bd0;
	Node0x8a2bd0 -> Node0x8a2c40;
	Node0x8a2c40 -> Node0x8a2cb0;
	Node0x8a2cb0 -> Node0x8a2d20;
	Node0x8a2d20 -> Node0x8a2d90;
	Node0x8a2d90 -> Node0x8a2e00;
	Node0x8a2e00 -> Node0x8a2e70;
	Node0x8a2e70 -> Node0x8a2ee0;
	Node0x8a2ee0 -> Node0x8a2f50;
	Node0x8a2f50 -> Node0x8a2fc0;
	Node0x8a2fc0 -> Node0x8a3030;
	Node0x8a3030 -> Node0x8a30a0;
	Node0x8a30a0 -> Node0x8a3110;
	Node0x8a3110 -> Node0x843268;
	Node0x843268 -> Node0x8a3580;
	Node0x8a3580 -> Node0x8a35d0;
edge [color=red]
	Node0x8a2aa0 -> Node0x8a2bd0;
	Node0x8a2bd0 -> Node0x8a2c40;
	Node0x8a2aa0 -> Node0x8a2cb0;
	Node0x8a2cb0 -> Node0x8a2d20;
	Node0x8a2d90 -> Node0x8a2e00;
	Node0x8a2aa0 -> Node0x8a2e00;
	Node0x8a2e00 -> Node0x8a2e70;
	Node0x8a2b60 -> Node0x8a2e70;
	Node0x8a2e70 -> Node0x8a2ee0;
	Node0x8a2bd0 -> Node0x8a2f50;
	Node0x8a2f50 -> Node0x8a2fc0;
	Node0x8a2c40 -> Node0x8a2fc0;
	Node0x8a2fc0 -> Node0x8a3030;
	Node0x8a2d20 -> Node0x8a3030;
	Node0x8a3030 -> Node0x8a30a0;
	Node0x8a2ee0 -> Node0x8a30a0;
	Node0x8a2a00 -> Node0x8a3110;
	Node0x8a30a0 -> Node0x8a3110;
	Node0x8a3110 -> Node0x843268;
	Node0x843268 -> Node0x8a3580;
}
