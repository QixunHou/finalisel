digraph "DFG for'crackme' function" {
	Node0xe64a00[shape=record, label="  %3 = xor i32 %0, -1"];
	Node0xe64a70[shape=record, label="  %4 = xor i32 %3, %1"];
	Node0xe64b30[shape=record, label="  %5 = sub i32 %4, %1"];
	Node0xe64ba0[shape=record, label="  %6 = or i32 %1, %0"];
	Node0xe64c10[shape=record, label="  %7 = xor i32 %1, -1"];
	Node0xe64c80[shape=record, label="  %8 = and i32 %1, %0"];
	Node0xe64cf0[shape=record, label="  %9 = xor i32 %6, -1"];
	Node0xe64d60[shape=record, label="  %10 = and i32 %3, %1"];
	Node0xe64dd0[shape=record, label="  %11 = and i32 %7, %0"];
	Node0xe64e40[shape=record, label="  %12 = shl i32 %8, 1"];
	Node0xe64eb0[shape=record, label="  %13 = add i32 %6, %1"];
	Node0xe64f20[shape=record, label="  %14 = sub i32 %9, %13"];
	Node0xe64f90[shape=record, label="  %15 = add i32 %14, %10"];
	Node0xe65000[shape=record, label="  %16 = add i32 %15, %11"];
	Node0xe65070[shape=record, label="  %17 = add i32 %16, %12"];
	Node0xe650e0[shape=record, label="  %18 = icmp eq i32 %5, %17"];
	Node0xe05268[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe65580[shape=record, label="  %20 = tail call i32 @puts(i8* nonnull dereferenceable(1) %19)"];
	Node0xe655d0[shape=record, label="  ret void"];
	Node0xe64a00 -> Node0xe64a70;
	Node0xe64a70 -> Node0xe64b30;
	Node0xe64b30 -> Node0xe64ba0;
	Node0xe64ba0 -> Node0xe64c10;
	Node0xe64c10 -> Node0xe64c80;
	Node0xe64c80 -> Node0xe64cf0;
	Node0xe64cf0 -> Node0xe64d60;
	Node0xe64d60 -> Node0xe64dd0;
	Node0xe64dd0 -> Node0xe64e40;
	Node0xe64e40 -> Node0xe64eb0;
	Node0xe64eb0 -> Node0xe64f20;
	Node0xe64f20 -> Node0xe64f90;
	Node0xe64f90 -> Node0xe65000;
	Node0xe65000 -> Node0xe65070;
	Node0xe65070 -> Node0xe650e0;
	Node0xe650e0 -> Node0xe05268;
	Node0xe05268 -> Node0xe65580;
	Node0xe65580 -> Node0xe655d0;
edge [color=red]
	Node0xe64a00 -> Node0xe64a70;
	Node0xe64a70 -> Node0xe64b30;
	Node0xe64ba0 -> Node0xe64cf0;
	Node0xe64a00 -> Node0xe64d60;
	Node0xe64c10 -> Node0xe64dd0;
	Node0xe64c80 -> Node0xe64e40;
	Node0xe64ba0 -> Node0xe64eb0;
	Node0xe64cf0 -> Node0xe64f20;
	Node0xe64eb0 -> Node0xe64f20;
	Node0xe64f20 -> Node0xe64f90;
	Node0xe64d60 -> Node0xe64f90;
	Node0xe64f90 -> Node0xe65000;
	Node0xe64dd0 -> Node0xe65000;
	Node0xe65000 -> Node0xe65070;
	Node0xe64e40 -> Node0xe65070;
	Node0xe64b30 -> Node0xe650e0;
	Node0xe65070 -> Node0xe650e0;
	Node0xe650e0 -> Node0xe05268;
	Node0xe05268 -> Node0xe65580;
}
