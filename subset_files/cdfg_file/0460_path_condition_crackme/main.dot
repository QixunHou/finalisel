digraph "DFG for'main' function" {
	Node0xe65798[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe65818[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe658a8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xe65d08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xe65de8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xe65f08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe66140[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xe661f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe67168[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe677f0[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0xe67860[shape=record, label="  %9 = xor i32 %7, %8"];
	Node0xe678d0[shape=record, label="  %10 = sub i32 %9, %7"];
	Node0xe67940[shape=record, label="  %11 = or i32 %7, %6"];
	Node0xe679b0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0xe67a20[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xe67a90[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0xe67b00[shape=record, label="  %15 = and i32 %7, %8"];
	Node0xe67b70[shape=record, label="  %16 = and i32 %6, %12"];
	Node0xe67be0[shape=record, label="  %17 = shl i32 %13, 1"];
	Node0xe67c50[shape=record, label="  %18 = add i32 %11, %7"];
	Node0xe67cc0[shape=record, label="  %19 = sub i32 %14, %18"];
	Node0xe67d30[shape=record, label="  %20 = add i32 %19, %15"];
	Node0xe67da0[shape=record, label="  %21 = add i32 %20, %16"];
	Node0xe67e10[shape=record, label="  %22 = add i32 %21, %17"];
	Node0xe67e80[shape=record, label="  %23 = icmp eq i32 %10, %22"];
	Node0xe069d8[shape=record, label="  %24 = select i1 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe67f10[shape=record, label="  %25 = call i32 @puts(i8* nonnull dereferenceable(1) %24) #5"];
	Node0xe68168[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe682c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xe68388[shape=record, label="  ret i32 0"];
	Node0xe65798 -> Node0xe65818;
	Node0xe65818 -> Node0xe658a8;
	Node0xe658a8 -> Node0xe65d08;
	Node0xe65d08 -> Node0xe65de8;
	Node0xe65de8 -> Node0xe65f08;
	Node0xe65f08 -> Node0xe66140;
	Node0xe66140 -> Node0xe661f8;
	Node0xe661f8 -> Node0xe67168;
	Node0xe67168 -> Node0xe677f0;
	Node0xe677f0 -> Node0xe67860;
	Node0xe67860 -> Node0xe678d0;
	Node0xe678d0 -> Node0xe67940;
	Node0xe67940 -> Node0xe679b0;
	Node0xe679b0 -> Node0xe67a20;
	Node0xe67a20 -> Node0xe67a90;
	Node0xe67a90 -> Node0xe67b00;
	Node0xe67b00 -> Node0xe67b70;
	Node0xe67b70 -> Node0xe67be0;
	Node0xe67be0 -> Node0xe67c50;
	Node0xe67c50 -> Node0xe67cc0;
	Node0xe67cc0 -> Node0xe67d30;
	Node0xe67d30 -> Node0xe67da0;
	Node0xe67da0 -> Node0xe67e10;
	Node0xe67e10 -> Node0xe67e80;
	Node0xe67e80 -> Node0xe069d8;
	Node0xe069d8 -> Node0xe67f10;
	Node0xe67f10 -> Node0xe68168;
	Node0xe68168 -> Node0xe682c8;
	Node0xe682c8 -> Node0xe68388;
edge [color=red]
	Node0xe65798 -> Node0xe658a8;
	Node0xe658a8 -> Node0xe65d08;
	Node0xe65818 -> Node0xe65de8;
	Node0xe65de8 -> Node0xe65f08;
	Node0xe65798 -> Node0xe66140;
	Node0xe65818 -> Node0xe66140;
	Node0xe65798 -> Node0xe661f8;
	Node0xe65818 -> Node0xe67168;
	Node0xe661f8 -> Node0xe677f0;
	Node0xe67168 -> Node0xe67860;
	Node0xe677f0 -> Node0xe67860;
	Node0xe67860 -> Node0xe678d0;
	Node0xe67168 -> Node0xe678d0;
	Node0xe67168 -> Node0xe67940;
	Node0xe661f8 -> Node0xe67940;
	Node0xe67168 -> Node0xe679b0;
	Node0xe67168 -> Node0xe67a20;
	Node0xe661f8 -> Node0xe67a20;
	Node0xe67940 -> Node0xe67a90;
	Node0xe67168 -> Node0xe67b00;
	Node0xe677f0 -> Node0xe67b00;
	Node0xe661f8 -> Node0xe67b70;
	Node0xe679b0 -> Node0xe67b70;
	Node0xe67a20 -> Node0xe67be0;
	Node0xe67940 -> Node0xe67c50;
	Node0xe67168 -> Node0xe67c50;
	Node0xe67a90 -> Node0xe67cc0;
	Node0xe67c50 -> Node0xe67cc0;
	Node0xe67cc0 -> Node0xe67d30;
	Node0xe67b00 -> Node0xe67d30;
	Node0xe67d30 -> Node0xe67da0;
	Node0xe67b70 -> Node0xe67da0;
	Node0xe67da0 -> Node0xe67e10;
	Node0xe67be0 -> Node0xe67e10;
	Node0xe678d0 -> Node0xe67e80;
	Node0xe67e10 -> Node0xe67e80;
	Node0xe67e80 -> Node0xe069d8;
	Node0xe069d8 -> Node0xe67f10;
	Node0xe65de8 -> Node0xe68168;
	Node0xe658a8 -> Node0xe682c8;
}
