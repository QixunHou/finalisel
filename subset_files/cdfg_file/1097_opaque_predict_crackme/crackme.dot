digraph "DFG for'crackme' function" {
	Node0xb2ca10[shape=record, label="  %3 = shl i32 %1, 1"];
	Node0xb2cab0[shape=record, label="  %4 = xor i32 %3, -2"];
	Node0xb2cb70[shape=record, label="  %5 = add i32 %4, %1"];
	Node0xb2cbe0[shape=record, label="  %6 = xor i32 %1, %0"];
	Node0xb2cc50[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0xb2ccc0[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0xb2cd30[shape=record, label="  %9 = or i32 %8, %1"];
	Node0xb2cda0[shape=record, label="  %10 = or i32 %1, %0"];
	Node0xb2ce40[shape=record, label="  %11 = xor i32 %0, 2147483647"];
	Node0xb2ceb0[shape=record, label="  %12 = and i32 %11, %1"];
	Node0xb2cf20[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0xb2cf90[shape=record, label="  %14 = xor i32 %10, -1"];
	Node0xb2d000[shape=record, label="  %15 = add i32 %9, %14"];
	Node0xb2d070[shape=record, label="  %16 = add i32 %15, %7"];
	Node0xb2d0e0[shape=record, label="  %17 = sub i32 %16, %13"];
	Node0xb2d150[shape=record, label="  %18 = icmp eq i32 %5, %17"];
	Node0xacd268[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb2d5f0[shape=record, label="  %20 = tail call i32 @puts(i8* nonnull dereferenceable(1) %19)"];
	Node0xb2d640[shape=record, label="  ret void"];
	Node0xb2ca10 -> Node0xb2cab0;
	Node0xb2cab0 -> Node0xb2cb70;
	Node0xb2cb70 -> Node0xb2cbe0;
	Node0xb2cbe0 -> Node0xb2cc50;
	Node0xb2cc50 -> Node0xb2ccc0;
	Node0xb2ccc0 -> Node0xb2cd30;
	Node0xb2cd30 -> Node0xb2cda0;
	Node0xb2cda0 -> Node0xb2ce40;
	Node0xb2ce40 -> Node0xb2ceb0;
	Node0xb2ceb0 -> Node0xb2cf20;
	Node0xb2cf20 -> Node0xb2cf90;
	Node0xb2cf90 -> Node0xb2d000;
	Node0xb2d000 -> Node0xb2d070;
	Node0xb2d070 -> Node0xb2d0e0;
	Node0xb2d0e0 -> Node0xb2d150;
	Node0xb2d150 -> Node0xacd268;
	Node0xacd268 -> Node0xb2d5f0;
	Node0xb2d5f0 -> Node0xb2d640;
edge [color=red]
	Node0xb2ca10 -> Node0xb2cab0;
	Node0xb2cab0 -> Node0xb2cb70;
	Node0xb2cbe0 -> Node0xb2cc50;
	Node0xb2ccc0 -> Node0xb2cd30;
	Node0xb2ce40 -> Node0xb2ceb0;
	Node0xb2ceb0 -> Node0xb2cf20;
	Node0xb2cda0 -> Node0xb2cf90;
	Node0xb2cd30 -> Node0xb2d000;
	Node0xb2cf90 -> Node0xb2d000;
	Node0xb2d000 -> Node0xb2d070;
	Node0xb2cc50 -> Node0xb2d070;
	Node0xb2d070 -> Node0xb2d0e0;
	Node0xb2cf20 -> Node0xb2d0e0;
	Node0xb2cb70 -> Node0xb2d150;
	Node0xb2d0e0 -> Node0xb2d150;
	Node0xb2d150 -> Node0xacd268;
	Node0xacd268 -> Node0xb2d5f0;
}
