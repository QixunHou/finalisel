digraph "DFG for'main' function" {
	Node0xb2d808[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb2d888[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb2d918[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xb2dd78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xb2de58[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xb2df78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb2e1b0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xb2e268[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb2f1d8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb2f860[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0xb2f8d0[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0xb2f940[shape=record, label="  %10 = add i32 %9, %7"];
	Node0xb2f9b0[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0xb2fa20[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0xb2fa90[shape=record, label="  %13 = xor i32 %6, -1"];
	Node0xb2fb00[shape=record, label="  %14 = or i32 %7, %13"];
	Node0xb2fb70[shape=record, label="  %15 = or i32 %7, %6"];
	Node0xb2fbe0[shape=record, label="  %16 = xor i32 %6, 2147483647"];
	Node0xb2fc50[shape=record, label="  %17 = and i32 %16, %7"];
	Node0xb2fcc0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0xb2fd30[shape=record, label="  %19 = xor i32 %15, -1"];
	Node0xb2fda0[shape=record, label="  %20 = add i32 %14, %19"];
	Node0xb2fe10[shape=record, label="  %21 = add i32 %20, %12"];
	Node0xb2fe80[shape=record, label="  %22 = sub i32 %21, %18"];
	Node0xb2fef0[shape=record, label="  %23 = icmp eq i32 %10, %22"];
	Node0xace9d8[shape=record, label="  %24 = select i1 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb2ff80[shape=record, label="  %25 = call i32 @puts(i8* nonnull dereferenceable(1) %24) #5"];
	Node0xb301d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb30338[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xb303f8[shape=record, label="  ret i32 0"];
	Node0xb2d808 -> Node0xb2d888;
	Node0xb2d888 -> Node0xb2d918;
	Node0xb2d918 -> Node0xb2dd78;
	Node0xb2dd78 -> Node0xb2de58;
	Node0xb2de58 -> Node0xb2df78;
	Node0xb2df78 -> Node0xb2e1b0;
	Node0xb2e1b0 -> Node0xb2e268;
	Node0xb2e268 -> Node0xb2f1d8;
	Node0xb2f1d8 -> Node0xb2f860;
	Node0xb2f860 -> Node0xb2f8d0;
	Node0xb2f8d0 -> Node0xb2f940;
	Node0xb2f940 -> Node0xb2f9b0;
	Node0xb2f9b0 -> Node0xb2fa20;
	Node0xb2fa20 -> Node0xb2fa90;
	Node0xb2fa90 -> Node0xb2fb00;
	Node0xb2fb00 -> Node0xb2fb70;
	Node0xb2fb70 -> Node0xb2fbe0;
	Node0xb2fbe0 -> Node0xb2fc50;
	Node0xb2fc50 -> Node0xb2fcc0;
	Node0xb2fcc0 -> Node0xb2fd30;
	Node0xb2fd30 -> Node0xb2fda0;
	Node0xb2fda0 -> Node0xb2fe10;
	Node0xb2fe10 -> Node0xb2fe80;
	Node0xb2fe80 -> Node0xb2fef0;
	Node0xb2fef0 -> Node0xace9d8;
	Node0xace9d8 -> Node0xb2ff80;
	Node0xb2ff80 -> Node0xb301d8;
	Node0xb301d8 -> Node0xb30338;
	Node0xb30338 -> Node0xb303f8;
edge [color=red]
	Node0xb2d808 -> Node0xb2d918;
	Node0xb2d918 -> Node0xb2dd78;
	Node0xb2d888 -> Node0xb2de58;
	Node0xb2de58 -> Node0xb2df78;
	Node0xb2d808 -> Node0xb2e1b0;
	Node0xb2d888 -> Node0xb2e1b0;
	Node0xb2d808 -> Node0xb2e268;
	Node0xb2d888 -> Node0xb2f1d8;
	Node0xb2f1d8 -> Node0xb2f860;
	Node0xb2f860 -> Node0xb2f8d0;
	Node0xb2f8d0 -> Node0xb2f940;
	Node0xb2f1d8 -> Node0xb2f940;
	Node0xb2f1d8 -> Node0xb2f9b0;
	Node0xb2e268 -> Node0xb2f9b0;
	Node0xb2f9b0 -> Node0xb2fa20;
	Node0xb2e268 -> Node0xb2fa90;
	Node0xb2f1d8 -> Node0xb2fb00;
	Node0xb2fa90 -> Node0xb2fb00;
	Node0xb2f1d8 -> Node0xb2fb70;
	Node0xb2e268 -> Node0xb2fb70;
	Node0xb2e268 -> Node0xb2fbe0;
	Node0xb2fbe0 -> Node0xb2fc50;
	Node0xb2f1d8 -> Node0xb2fc50;
	Node0xb2fc50 -> Node0xb2fcc0;
	Node0xb2fb70 -> Node0xb2fd30;
	Node0xb2fb00 -> Node0xb2fda0;
	Node0xb2fd30 -> Node0xb2fda0;
	Node0xb2fda0 -> Node0xb2fe10;
	Node0xb2fa20 -> Node0xb2fe10;
	Node0xb2fe10 -> Node0xb2fe80;
	Node0xb2fcc0 -> Node0xb2fe80;
	Node0xb2f940 -> Node0xb2fef0;
	Node0xb2fe80 -> Node0xb2fef0;
	Node0xb2fef0 -> Node0xace9d8;
	Node0xace9d8 -> Node0xb2ff80;
	Node0xb2de58 -> Node0xb301d8;
	Node0xb2d918 -> Node0xb30338;
}
