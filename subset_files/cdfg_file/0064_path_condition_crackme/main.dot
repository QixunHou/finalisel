digraph "DFG for'main' function" {
	Node0x1082ec8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1082f48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1082fd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1083038[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x10830e8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1083518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10835f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x10836f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10837b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1083868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1083928[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x10839d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x107dc00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1083bd8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1084b48[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10851b8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1085218[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1085290[shape=record, label="  %14 = xor i32 %13, %10"];
	Node0x1085300[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x1085370[shape=record, label="  %16 = add i32 %10, 2"];
	Node0x10853e0[shape=record, label="  %17 = add i32 %16, %12"];
	Node0x1085450[shape=record, label="  %18 = add i32 %17, %14"];
	Node0x10854c0[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x1085530[shape=record, label="  %20 = or i32 %11, %19"];
	Node0x10855a0[shape=record, label="  %21 = and i32 %11, %19"];
	Node0x1085610[shape=record, label="  %22 = shl i32 %21, 2"];
	Node0x1085680[shape=record, label="  %23 = xor i32 %22, -4"];
	Node0x10856f0[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x1085760[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x10857d0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x1085840[shape=record, label="  %27 = or i32 %12, %11"];
	Node0x10858b0[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x1085920[shape=record, label="  %29 = mul i32 %28, 3"];
	Node0x1085990[shape=record, label="  %30 = shl i32 %20, 1"];
	Node0x1085a00[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x1085a70[shape=record, label="  %32 = mul i32 %21, 6"];
	Node0x1085ae0[shape=record, label="  %33 = and i32 %13, %10"];
	Node0x1085b50[shape=record, label="  %34 = and i32 %13, %15"];
	Node0x1085bc0[shape=record, label="  %35 = xor i32 %13, -1"];
	Node0x1085c30[shape=record, label="  %36 = and i32 %10, %35"];
	Node0x1085ca0[shape=record, label="  %37 = mul i32 %34, -5"];
	Node0x1085d10[shape=record, label="  %38 = shl i32 %33, 1"];
	Node0x1085d80[shape=record, label="  %39 = add i32 %14, %13"];
	Node0x1085df0[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x1085e60[shape=record, label="  %41 = add i32 %10, 6"];
	Node0x1085ed0[shape=record, label="  %42 = sub i32 %41, %20"];
	Node0x1085f40[shape=record, label="  %43 = add i32 %42, %27"];
	Node0x1085fb0[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x1086020[shape=record, label="  %45 = add i32 %44, %13"];
	Node0x1086090[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x1086100[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x1086170[shape=record, label="  %48 = sub i32 %47, %33"];
	Node0x10861e0[shape=record, label="  %49 = add i32 %48, %34"];
	Node0x1086250[shape=record, label="  %50 = sub i32 %49, %36"];
	Node0x10862c0[shape=record, label="  %51 = add i32 %50, %23"];
	Node0x1086330[shape=record, label="  %52 = sub i32 %51, %26"];
	Node0x10863a0[shape=record, label="  %53 = add i32 %52, %31"];
	Node0x1086410[shape=record, label="  %54 = add i32 %53, %37"];
	Node0x1086480[shape=record, label="  %55 = sub i32 %54, %38"];
	Node0x10864f0[shape=record, label="  %56 = add i32 %55, %40"];
	Node0x1086560[shape=record, label="  %57 = icmp eq i32 %18, %56"];
	Node0x10228b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x10865f0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0x1086898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10869f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1086b08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1086c18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1086cd8[shape=record, label="  ret i32 0"];
	Node0x1082ec8 -> Node0x1082f48;
	Node0x1082f48 -> Node0x1082fd8;
	Node0x1082fd8 -> Node0x1083038;
	Node0x1083038 -> Node0x10830e8;
	Node0x10830e8 -> Node0x1083518;
	Node0x1083518 -> Node0x10835f8;
	Node0x10835f8 -> Node0x10836f8;
	Node0x10836f8 -> Node0x10837b8;
	Node0x10837b8 -> Node0x1083868;
	Node0x1083868 -> Node0x1083928;
	Node0x1083928 -> Node0x10839d8;
	Node0x10839d8 -> Node0x107dc00;
	Node0x107dc00 -> Node0x1083bd8;
	Node0x1083bd8 -> Node0x1084b48;
	Node0x1084b48 -> Node0x10851b8;
	Node0x10851b8 -> Node0x1085218;
	Node0x1085218 -> Node0x1085290;
	Node0x1085290 -> Node0x1085300;
	Node0x1085300 -> Node0x1085370;
	Node0x1085370 -> Node0x10853e0;
	Node0x10853e0 -> Node0x1085450;
	Node0x1085450 -> Node0x10854c0;
	Node0x10854c0 -> Node0x1085530;
	Node0x1085530 -> Node0x10855a0;
	Node0x10855a0 -> Node0x1085610;
	Node0x1085610 -> Node0x1085680;
	Node0x1085680 -> Node0x10856f0;
	Node0x10856f0 -> Node0x1085760;
	Node0x1085760 -> Node0x10857d0;
	Node0x10857d0 -> Node0x1085840;
	Node0x1085840 -> Node0x10858b0;
	Node0x10858b0 -> Node0x1085920;
	Node0x1085920 -> Node0x1085990;
	Node0x1085990 -> Node0x1085a00;
	Node0x1085a00 -> Node0x1085a70;
	Node0x1085a70 -> Node0x1085ae0;
	Node0x1085ae0 -> Node0x1085b50;
	Node0x1085b50 -> Node0x1085bc0;
	Node0x1085bc0 -> Node0x1085c30;
	Node0x1085c30 -> Node0x1085ca0;
	Node0x1085ca0 -> Node0x1085d10;
	Node0x1085d10 -> Node0x1085d80;
	Node0x1085d80 -> Node0x1085df0;
	Node0x1085df0 -> Node0x1085e60;
	Node0x1085e60 -> Node0x1085ed0;
	Node0x1085ed0 -> Node0x1085f40;
	Node0x1085f40 -> Node0x1085fb0;
	Node0x1085fb0 -> Node0x1086020;
	Node0x1086020 -> Node0x1086090;
	Node0x1086090 -> Node0x1086100;
	Node0x1086100 -> Node0x1086170;
	Node0x1086170 -> Node0x10861e0;
	Node0x10861e0 -> Node0x1086250;
	Node0x1086250 -> Node0x10862c0;
	Node0x10862c0 -> Node0x1086330;
	Node0x1086330 -> Node0x10863a0;
	Node0x10863a0 -> Node0x1086410;
	Node0x1086410 -> Node0x1086480;
	Node0x1086480 -> Node0x10864f0;
	Node0x10864f0 -> Node0x1086560;
	Node0x1086560 -> Node0x10228b8;
	Node0x10228b8 -> Node0x10865f0;
	Node0x10865f0 -> Node0x1086898;
	Node0x1086898 -> Node0x10869f8;
	Node0x10869f8 -> Node0x1086b08;
	Node0x1086b08 -> Node0x1086c18;
	Node0x1086c18 -> Node0x1086cd8;
edge [color=red]
	Node0x1082ec8 -> Node0x10830e8;
	Node0x10830e8 -> Node0x1083518;
	Node0x1082f48 -> Node0x10835f8;
	Node0x10835f8 -> Node0x10836f8;
	Node0x1082fd8 -> Node0x10837b8;
	Node0x10837b8 -> Node0x1083868;
	Node0x1083038 -> Node0x1083928;
	Node0x1083928 -> Node0x10839d8;
	Node0x1082ec8 -> Node0x107dc00;
	Node0x1082f48 -> Node0x107dc00;
	Node0x1082fd8 -> Node0x107dc00;
	Node0x1083038 -> Node0x107dc00;
	Node0x1082ec8 -> Node0x1083bd8;
	Node0x1082f48 -> Node0x1084b48;
	Node0x1082fd8 -> Node0x10851b8;
	Node0x1083038 -> Node0x1085218;
	Node0x1085218 -> Node0x1085290;
	Node0x1083bd8 -> Node0x1085290;
	Node0x1083bd8 -> Node0x1085300;
	Node0x1083bd8 -> Node0x1085370;
	Node0x1085370 -> Node0x10853e0;
	Node0x10851b8 -> Node0x10853e0;
	Node0x10853e0 -> Node0x1085450;
	Node0x1085290 -> Node0x1085450;
	Node0x10851b8 -> Node0x10854c0;
	Node0x1084b48 -> Node0x1085530;
	Node0x10854c0 -> Node0x1085530;
	Node0x1084b48 -> Node0x10855a0;
	Node0x10854c0 -> Node0x10855a0;
	Node0x10855a0 -> Node0x1085610;
	Node0x1085610 -> Node0x1085680;
	Node0x10851b8 -> Node0x10856f0;
	Node0x1084b48 -> Node0x10856f0;
	Node0x10856f0 -> Node0x1085760;
	Node0x1085760 -> Node0x10857d0;
	Node0x10851b8 -> Node0x1085840;
	Node0x1084b48 -> Node0x1085840;
	Node0x1085840 -> Node0x10858b0;
	Node0x10858b0 -> Node0x1085920;
	Node0x1085530 -> Node0x1085990;
	Node0x1085990 -> Node0x1085a00;
	Node0x10855a0 -> Node0x1085a70;
	Node0x1085218 -> Node0x1085ae0;
	Node0x1083bd8 -> Node0x1085ae0;
	Node0x1085218 -> Node0x1085b50;
	Node0x1085300 -> Node0x1085b50;
	Node0x1085218 -> Node0x1085bc0;
	Node0x1083bd8 -> Node0x1085c30;
	Node0x1085bc0 -> Node0x1085c30;
	Node0x1085b50 -> Node0x1085ca0;
	Node0x1085ae0 -> Node0x1085d10;
	Node0x1085290 -> Node0x1085d80;
	Node0x1085218 -> Node0x1085d80;
	Node0x1085d80 -> Node0x1085df0;
	Node0x1083bd8 -> Node0x1085e60;
	Node0x1085e60 -> Node0x1085ed0;
	Node0x1085530 -> Node0x1085ed0;
	Node0x1085ed0 -> Node0x1085f40;
	Node0x1085840 -> Node0x1085f40;
	Node0x1085f40 -> Node0x1085fb0;
	Node0x10856f0 -> Node0x1085fb0;
	Node0x1085fb0 -> Node0x1086020;
	Node0x1085218 -> Node0x1086020;
	Node0x1086020 -> Node0x1086090;
	Node0x1085920 -> Node0x1086090;
	Node0x1086090 -> Node0x1086100;
	Node0x1085a70 -> Node0x1086100;
	Node0x1086100 -> Node0x1086170;
	Node0x1085ae0 -> Node0x1086170;
	Node0x1086170 -> Node0x10861e0;
	Node0x1085b50 -> Node0x10861e0;
	Node0x10861e0 -> Node0x1086250;
	Node0x1085c30 -> Node0x1086250;
	Node0x1086250 -> Node0x10862c0;
	Node0x1085680 -> Node0x10862c0;
	Node0x10862c0 -> Node0x1086330;
	Node0x10857d0 -> Node0x1086330;
	Node0x1086330 -> Node0x10863a0;
	Node0x1085a00 -> Node0x10863a0;
	Node0x10863a0 -> Node0x1086410;
	Node0x1085ca0 -> Node0x1086410;
	Node0x1086410 -> Node0x1086480;
	Node0x1085d10 -> Node0x1086480;
	Node0x1086480 -> Node0x10864f0;
	Node0x1085df0 -> Node0x10864f0;
	Node0x1085450 -> Node0x1086560;
	Node0x10864f0 -> Node0x1086560;
	Node0x1086560 -> Node0x10228b8;
	Node0x10228b8 -> Node0x10865f0;
	Node0x1083928 -> Node0x1086898;
	Node0x10837b8 -> Node0x10869f8;
	Node0x10835f8 -> Node0x1086b08;
	Node0x10830e8 -> Node0x1086c18;
}
