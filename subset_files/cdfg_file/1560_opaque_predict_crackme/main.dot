digraph "DFG for'main' function" {
	Node0x7f6938[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x7f69e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x7f6a78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x7f6ed8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x7f6fb8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x7f70d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7f7310[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x7f73c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x7f8338[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x7f89c0[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x7f8a30[shape=record, label="  %9 = sub i32 %7, %8"];
	Node0x7f8aa0[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x7f8b10[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x7f8b80[shape=record, label="  %12 = mul i32 %11, 5"];
	Node0x7f8bf0[shape=record, label="  %13 = and i32 %6, %10"];
	Node0x7f8c60[shape=record, label="  %14 = shl i32 %13, 2"];
	Node0x7f8cd0[shape=record, label="  %15 = and i32 %7, %6"];
	Node0x7f8d40[shape=record, label="  %16 = sub i32 %8, %11"];
	Node0x7f8db0[shape=record, label="  %17 = mul i32 %16, 3"];
	Node0x7f8e20[shape=record, label="  %18 = sub i32 3, %6"];
	Node0x7f8e90[shape=record, label="  %19 = add i32 %18, %10"];
	Node0x7f8f00[shape=record, label="  %20 = add i32 %19, %13"];
	Node0x7f8f70[shape=record, label="  %21 = sub i32 %20, %15"];
	Node0x7f8fe0[shape=record, label="  %22 = add i32 %21, %12"];
	Node0x7f9050[shape=record, label="  %23 = sub i32 %22, %14"];
	Node0x7f90c0[shape=record, label="  %24 = add i32 %23, %17"];
	Node0x7f9130[shape=record, label="  %25 = icmp eq i32 %9, %24"];
	Node0x7979d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x7f91c0[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0x7f9418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7f9578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x7f9638[shape=record, label="  ret i32 0"];
	Node0x7f6938 -> Node0x7f69e8;
	Node0x7f69e8 -> Node0x7f6a78;
	Node0x7f6a78 -> Node0x7f6ed8;
	Node0x7f6ed8 -> Node0x7f6fb8;
	Node0x7f6fb8 -> Node0x7f70d8;
	Node0x7f70d8 -> Node0x7f7310;
	Node0x7f7310 -> Node0x7f73c8;
	Node0x7f73c8 -> Node0x7f8338;
	Node0x7f8338 -> Node0x7f89c0;
	Node0x7f89c0 -> Node0x7f8a30;
	Node0x7f8a30 -> Node0x7f8aa0;
	Node0x7f8aa0 -> Node0x7f8b10;
	Node0x7f8b10 -> Node0x7f8b80;
	Node0x7f8b80 -> Node0x7f8bf0;
	Node0x7f8bf0 -> Node0x7f8c60;
	Node0x7f8c60 -> Node0x7f8cd0;
	Node0x7f8cd0 -> Node0x7f8d40;
	Node0x7f8d40 -> Node0x7f8db0;
	Node0x7f8db0 -> Node0x7f8e20;
	Node0x7f8e20 -> Node0x7f8e90;
	Node0x7f8e90 -> Node0x7f8f00;
	Node0x7f8f00 -> Node0x7f8f70;
	Node0x7f8f70 -> Node0x7f8fe0;
	Node0x7f8fe0 -> Node0x7f9050;
	Node0x7f9050 -> Node0x7f90c0;
	Node0x7f90c0 -> Node0x7f9130;
	Node0x7f9130 -> Node0x7979d8;
	Node0x7979d8 -> Node0x7f91c0;
	Node0x7f91c0 -> Node0x7f9418;
	Node0x7f9418 -> Node0x7f9578;
	Node0x7f9578 -> Node0x7f9638;
edge [color=red]
	Node0x7f6938 -> Node0x7f6a78;
	Node0x7f6a78 -> Node0x7f6ed8;
	Node0x7f69e8 -> Node0x7f6fb8;
	Node0x7f6fb8 -> Node0x7f70d8;
	Node0x7f6938 -> Node0x7f7310;
	Node0x7f69e8 -> Node0x7f7310;
	Node0x7f6938 -> Node0x7f73c8;
	Node0x7f69e8 -> Node0x7f8338;
	Node0x7f8338 -> Node0x7f89c0;
	Node0x7f73c8 -> Node0x7f89c0;
	Node0x7f8338 -> Node0x7f8a30;
	Node0x7f89c0 -> Node0x7f8a30;
	Node0x7f8338 -> Node0x7f8aa0;
	Node0x7f73c8 -> Node0x7f8b10;
	Node0x7f8aa0 -> Node0x7f8b10;
	Node0x7f8b10 -> Node0x7f8b80;
	Node0x7f73c8 -> Node0x7f8bf0;
	Node0x7f8aa0 -> Node0x7f8bf0;
	Node0x7f8bf0 -> Node0x7f8c60;
	Node0x7f8338 -> Node0x7f8cd0;
	Node0x7f73c8 -> Node0x7f8cd0;
	Node0x7f89c0 -> Node0x7f8d40;
	Node0x7f8b10 -> Node0x7f8d40;
	Node0x7f8d40 -> Node0x7f8db0;
	Node0x7f73c8 -> Node0x7f8e20;
	Node0x7f8e20 -> Node0x7f8e90;
	Node0x7f8aa0 -> Node0x7f8e90;
	Node0x7f8e90 -> Node0x7f8f00;
	Node0x7f8bf0 -> Node0x7f8f00;
	Node0x7f8f00 -> Node0x7f8f70;
	Node0x7f8cd0 -> Node0x7f8f70;
	Node0x7f8f70 -> Node0x7f8fe0;
	Node0x7f8b80 -> Node0x7f8fe0;
	Node0x7f8fe0 -> Node0x7f9050;
	Node0x7f8c60 -> Node0x7f9050;
	Node0x7f9050 -> Node0x7f90c0;
	Node0x7f8db0 -> Node0x7f90c0;
	Node0x7f8a30 -> Node0x7f9130;
	Node0x7f90c0 -> Node0x7f9130;
	Node0x7f9130 -> Node0x7979d8;
	Node0x7979d8 -> Node0x7f91c0;
	Node0x7f6fb8 -> Node0x7f9418;
	Node0x7f6a78 -> Node0x7f9578;
}
