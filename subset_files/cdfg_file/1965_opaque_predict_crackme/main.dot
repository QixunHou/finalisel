digraph "DFG for'main' function" {
	Node0x1700348[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x17003c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1700458[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x17004b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1700938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1700a18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1700b18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1700bd8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1700c88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1700ee8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1700fa8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1701108[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1701168[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1702bd0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1702dd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1702f38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1703048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1703108[shape=record, label="  ret i32 0"];
	Node0x1700348 -> Node0x17003c8;
	Node0x17003c8 -> Node0x1700458;
	Node0x1700458 -> Node0x17004b8;
	Node0x17004b8 -> Node0x1700938;
	Node0x1700938 -> Node0x1700a18;
	Node0x1700a18 -> Node0x1700b18;
	Node0x1700b18 -> Node0x1700bd8;
	Node0x1700bd8 -> Node0x1700c88;
	Node0x1700c88 -> Node0x1700ee8;
	Node0x1700ee8 -> Node0x1700fa8;
	Node0x1700fa8 -> Node0x1701108;
	Node0x1701108 -> Node0x1701168;
	Node0x1701168 -> Node0x1702bd0;
	Node0x1702bd0 -> Node0x1702dd8;
	Node0x1702dd8 -> Node0x1702f38;
	Node0x1702f38 -> Node0x1703048;
	Node0x1703048 -> Node0x1703108;
edge [color=red]
	Node0x1700348 -> Node0x17004b8;
	Node0x17004b8 -> Node0x1700938;
	Node0x17003c8 -> Node0x1700a18;
	Node0x1700a18 -> Node0x1700b18;
	Node0x1700458 -> Node0x1700bd8;
	Node0x1700bd8 -> Node0x1700c88;
	Node0x1700348 -> Node0x1700ee8;
	Node0x17003c8 -> Node0x1700ee8;
	Node0x1700458 -> Node0x1700ee8;
	Node0x1700348 -> Node0x1700fa8;
	Node0x17003c8 -> Node0x1701108;
	Node0x1700458 -> Node0x1701168;
	Node0x1700fa8 -> Node0x1702bd0;
	Node0x1701108 -> Node0x1702bd0;
	Node0x1701168 -> Node0x1702bd0;
	Node0x1700bd8 -> Node0x1702dd8;
	Node0x1700a18 -> Node0x1702f38;
	Node0x17004b8 -> Node0x1703048;
}
