digraph "DFG for'main' function" {
	Node0x242f138[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x242f1b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x242f248[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x242f2a8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x242f358[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x242f788[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x242f868[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x242f968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x242fa28[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x242fad8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x242fb98[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x242fc48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2429860[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x242fe48[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2430db8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2431428[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2431488[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x2431598[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x24317f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2431958[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2431a68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2431b78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2431c38[shape=record, label="  ret i32 0"];
	Node0x242f138 -> Node0x242f1b8;
	Node0x242f1b8 -> Node0x242f248;
	Node0x242f248 -> Node0x242f2a8;
	Node0x242f2a8 -> Node0x242f358;
	Node0x242f358 -> Node0x242f788;
	Node0x242f788 -> Node0x242f868;
	Node0x242f868 -> Node0x242f968;
	Node0x242f968 -> Node0x242fa28;
	Node0x242fa28 -> Node0x242fad8;
	Node0x242fad8 -> Node0x242fb98;
	Node0x242fb98 -> Node0x242fc48;
	Node0x242fc48 -> Node0x2429860;
	Node0x2429860 -> Node0x242fe48;
	Node0x242fe48 -> Node0x2430db8;
	Node0x2430db8 -> Node0x2431428;
	Node0x2431428 -> Node0x2431488;
	Node0x2431488 -> Node0x2431598;
	Node0x2431598 -> Node0x24317f8;
	Node0x24317f8 -> Node0x2431958;
	Node0x2431958 -> Node0x2431a68;
	Node0x2431a68 -> Node0x2431b78;
	Node0x2431b78 -> Node0x2431c38;
edge [color=red]
	Node0x242f138 -> Node0x242f358;
	Node0x242f358 -> Node0x242f788;
	Node0x242f1b8 -> Node0x242f868;
	Node0x242f868 -> Node0x242f968;
	Node0x242f248 -> Node0x242fa28;
	Node0x242fa28 -> Node0x242fad8;
	Node0x242f2a8 -> Node0x242fb98;
	Node0x242fb98 -> Node0x242fc48;
	Node0x242f138 -> Node0x2429860;
	Node0x242f1b8 -> Node0x2429860;
	Node0x242f248 -> Node0x2429860;
	Node0x242f2a8 -> Node0x2429860;
	Node0x242f138 -> Node0x242fe48;
	Node0x242f1b8 -> Node0x2430db8;
	Node0x242f248 -> Node0x2431428;
	Node0x242f2a8 -> Node0x2431488;
	Node0x242fe48 -> Node0x2431598;
	Node0x2430db8 -> Node0x2431598;
	Node0x2431428 -> Node0x2431598;
	Node0x2431488 -> Node0x2431598;
	Node0x242fb98 -> Node0x24317f8;
	Node0x242fa28 -> Node0x2431958;
	Node0x242f868 -> Node0x2431a68;
	Node0x242f358 -> Node0x2431b78;
}
