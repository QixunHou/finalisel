digraph "DFG for'crackme' function" {
	Node0x242ce40[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x242ceb0[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x242cf50[shape=record, label="  %7 = sub i32 2, %0"];
	Node0x242cfc0[shape=record, label="  %8 = add i32 %7, %2"];
	Node0x242d030[shape=record, label="  %9 = and i32 %5, %1"];
	Node0x242d0d0[shape=record, label="  %10 = add i32 %9, 1"];
	Node0x242d140[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x242d1b0[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x242d220[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x242d290[shape=record, label="  %14 = or i32 %5, %1"];
	Node0x242d300[shape=record, label="  %15 = xor i32 %1, -1"];
	Node0x242d370[shape=record, label="  %16 = xor i32 %15, %2"];
	Node0x242d3e0[shape=record, label="  %17 = xor i32 %11, -1"];
	Node0x242d480[shape=record, label="  %18 = mul i32 %17, 10"];
	Node0x242d4f0[shape=record, label="  %19 = xor i32 %14, -1"];
	Node0x242d560[shape=record, label="  %20 = shl i32 %9, 2"];
	Node0x242d600[shape=record, label="  %21 = shl i32 %12, 3"];
	Node0x242d670[shape=record, label="  %22 = xor i32 %3, %0"];
	Node0x242d6e0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x242d750[shape=record, label="  %24 = shl i32 %3, 1"];
	Node0x242d7f0[shape=record, label="  %25 = xor i32 %23, -2"];
	Node0x242d860[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x242d8d0[shape=record, label="  %27 = and i32 %3, %0"];
	Node0x242d940[shape=record, label="  %28 = xor i32 %24, -2"];
	Node0x242d9b0[shape=record, label="  %29 = or i32 %6, %3"];
	Node0x242da20[shape=record, label="  %30 = shl i32 %29, 3"];
	Node0x242dac0[shape=record, label="  %31 = xor i32 %30, -8"];
	Node0x242db30[shape=record, label="  %32 = and i32 %6, %3"];
	Node0x242dde0[shape=record, label="  %33 = mul i32 %27, -6"];
	Node0x242de50[shape=record, label="  %34 = sub i32 %19, %32"];
	Node0x242def0[shape=record, label="  %35 = mul i32 %34, 7"];
	Node0x242df60[shape=record, label="  %36 = add i32 %16, %13"];
	Node0x242e000[shape=record, label="  %37 = mul i32 %36, -5"];
	Node0x242e070[shape=record, label="  %38 = add i32 %26, %10"];
	Node0x242e0e0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x242e150[shape=record, label="  %40 = add i32 %0, 3"];
	Node0x242e1c0[shape=record, label="  %41 = sub i32 %40, %1"];
	Node0x242e230[shape=record, label="  %42 = add i32 %41, %15"];
	Node0x242e2a0[shape=record, label="  %43 = sub i32 %42, %2"];
	Node0x242e310[shape=record, label="  %44 = add i32 %43, %11"];
	Node0x242e380[shape=record, label="  %45 = add i32 %44, %14"];
	Node0x242e3f0[shape=record, label="  %46 = add i32 %45, %18"];
	Node0x242e460[shape=record, label="  %47 = add i32 %46, %20"];
	Node0x242e4d0[shape=record, label="  %48 = add i32 %47, %21"];
	Node0x242e540[shape=record, label="  %49 = add i32 %48, %24"];
	Node0x242e5b0[shape=record, label="  %50 = add i32 %49, %27"];
	Node0x242e620[shape=record, label="  %51 = add i32 %50, %29"];
	Node0x242e690[shape=record, label="  %52 = add i32 %51, %26"];
	Node0x242e700[shape=record, label="  %53 = add i32 %52, %23"];
	Node0x242e770[shape=record, label="  %54 = add i32 %53, %28"];
	Node0x242e7e0[shape=record, label="  %55 = add i32 %54, %33"];
	Node0x242e850[shape=record, label="  %56 = add i32 %55, %37"];
	Node0x242e8c0[shape=record, label="  %57 = sub i32 %56, %25"];
	Node0x242e930[shape=record, label="  %58 = sub i32 %57, %31"];
	Node0x242e9a0[shape=record, label="  %59 = add i32 %58, %35"];
	Node0x242ea10[shape=record, label="  %60 = add i32 %59, %39"];
	Node0x242ea80[shape=record, label="  %61 = icmp eq i32 %8, %60"];
	Node0x23cd268[shape=record, label="  %62 = select i1 %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x242ef20[shape=record, label="  %63 = tail call i32 @puts(i8* nonnull dereferenceable(1) %62)"];
	Node0x242ef70[shape=record, label="  ret void"];
	Node0x242ce40 -> Node0x242ceb0;
	Node0x242ceb0 -> Node0x242cf50;
	Node0x242cf50 -> Node0x242cfc0;
	Node0x242cfc0 -> Node0x242d030;
	Node0x242d030 -> Node0x242d0d0;
	Node0x242d0d0 -> Node0x242d140;
	Node0x242d140 -> Node0x242d1b0;
	Node0x242d1b0 -> Node0x242d220;
	Node0x242d220 -> Node0x242d290;
	Node0x242d290 -> Node0x242d300;
	Node0x242d300 -> Node0x242d370;
	Node0x242d370 -> Node0x242d3e0;
	Node0x242d3e0 -> Node0x242d480;
	Node0x242d480 -> Node0x242d4f0;
	Node0x242d4f0 -> Node0x242d560;
	Node0x242d560 -> Node0x242d600;
	Node0x242d600 -> Node0x242d670;
	Node0x242d670 -> Node0x242d6e0;
	Node0x242d6e0 -> Node0x242d750;
	Node0x242d750 -> Node0x242d7f0;
	Node0x242d7f0 -> Node0x242d860;
	Node0x242d860 -> Node0x242d8d0;
	Node0x242d8d0 -> Node0x242d940;
	Node0x242d940 -> Node0x242d9b0;
	Node0x242d9b0 -> Node0x242da20;
	Node0x242da20 -> Node0x242dac0;
	Node0x242dac0 -> Node0x242db30;
	Node0x242db30 -> Node0x242dde0;
	Node0x242dde0 -> Node0x242de50;
	Node0x242de50 -> Node0x242def0;
	Node0x242def0 -> Node0x242df60;
	Node0x242df60 -> Node0x242e000;
	Node0x242e000 -> Node0x242e070;
	Node0x242e070 -> Node0x242e0e0;
	Node0x242e0e0 -> Node0x242e150;
	Node0x242e150 -> Node0x242e1c0;
	Node0x242e1c0 -> Node0x242e230;
	Node0x242e230 -> Node0x242e2a0;
	Node0x242e2a0 -> Node0x242e310;
	Node0x242e310 -> Node0x242e380;
	Node0x242e380 -> Node0x242e3f0;
	Node0x242e3f0 -> Node0x242e460;
	Node0x242e460 -> Node0x242e4d0;
	Node0x242e4d0 -> Node0x242e540;
	Node0x242e540 -> Node0x242e5b0;
	Node0x242e5b0 -> Node0x242e620;
	Node0x242e620 -> Node0x242e690;
	Node0x242e690 -> Node0x242e700;
	Node0x242e700 -> Node0x242e770;
	Node0x242e770 -> Node0x242e7e0;
	Node0x242e7e0 -> Node0x242e850;
	Node0x242e850 -> Node0x242e8c0;
	Node0x242e8c0 -> Node0x242e930;
	Node0x242e930 -> Node0x242e9a0;
	Node0x242e9a0 -> Node0x242ea10;
	Node0x242ea10 -> Node0x242ea80;
	Node0x242ea80 -> Node0x23cd268;
	Node0x23cd268 -> Node0x242ef20;
	Node0x242ef20 -> Node0x242ef70;
edge [color=red]
	Node0x242cf50 -> Node0x242cfc0;
	Node0x242ce40 -> Node0x242d030;
	Node0x242d030 -> Node0x242d0d0;
	Node0x242d1b0 -> Node0x242d220;
	Node0x242ce40 -> Node0x242d290;
	Node0x242d300 -> Node0x242d370;
	Node0x242d140 -> Node0x242d3e0;
	Node0x242d3e0 -> Node0x242d480;
	Node0x242d290 -> Node0x242d4f0;
	Node0x242d030 -> Node0x242d560;
	Node0x242d1b0 -> Node0x242d600;
	Node0x242d670 -> Node0x242d6e0;
	Node0x242d6e0 -> Node0x242d7f0;
	Node0x242d750 -> Node0x242d940;
	Node0x242ceb0 -> Node0x242d9b0;
	Node0x242d9b0 -> Node0x242da20;
	Node0x242da20 -> Node0x242dac0;
	Node0x242ceb0 -> Node0x242db30;
	Node0x242d8d0 -> Node0x242dde0;
	Node0x242d4f0 -> Node0x242de50;
	Node0x242db30 -> Node0x242de50;
	Node0x242de50 -> Node0x242def0;
	Node0x242d370 -> Node0x242df60;
	Node0x242d220 -> Node0x242df60;
	Node0x242df60 -> Node0x242e000;
	Node0x242d860 -> Node0x242e070;
	Node0x242d0d0 -> Node0x242e070;
	Node0x242e070 -> Node0x242e0e0;
	Node0x242e150 -> Node0x242e1c0;
	Node0x242e1c0 -> Node0x242e230;
	Node0x242d300 -> Node0x242e230;
	Node0x242e230 -> Node0x242e2a0;
	Node0x242e2a0 -> Node0x242e310;
	Node0x242d140 -> Node0x242e310;
	Node0x242e310 -> Node0x242e380;
	Node0x242d290 -> Node0x242e380;
	Node0x242e380 -> Node0x242e3f0;
	Node0x242d480 -> Node0x242e3f0;
	Node0x242e3f0 -> Node0x242e460;
	Node0x242d560 -> Node0x242e460;
	Node0x242e460 -> Node0x242e4d0;
	Node0x242d600 -> Node0x242e4d0;
	Node0x242e4d0 -> Node0x242e540;
	Node0x242d750 -> Node0x242e540;
	Node0x242e540 -> Node0x242e5b0;
	Node0x242d8d0 -> Node0x242e5b0;
	Node0x242e5b0 -> Node0x242e620;
	Node0x242d9b0 -> Node0x242e620;
	Node0x242e620 -> Node0x242e690;
	Node0x242d860 -> Node0x242e690;
	Node0x242e690 -> Node0x242e700;
	Node0x242d6e0 -> Node0x242e700;
	Node0x242e700 -> Node0x242e770;
	Node0x242d940 -> Node0x242e770;
	Node0x242e770 -> Node0x242e7e0;
	Node0x242dde0 -> Node0x242e7e0;
	Node0x242e7e0 -> Node0x242e850;
	Node0x242e000 -> Node0x242e850;
	Node0x242e850 -> Node0x242e8c0;
	Node0x242d7f0 -> Node0x242e8c0;
	Node0x242e8c0 -> Node0x242e930;
	Node0x242dac0 -> Node0x242e930;
	Node0x242e930 -> Node0x242e9a0;
	Node0x242def0 -> Node0x242e9a0;
	Node0x242e9a0 -> Node0x242ea10;
	Node0x242e0e0 -> Node0x242ea10;
	Node0x242cfc0 -> Node0x242ea80;
	Node0x242ea10 -> Node0x242ea80;
	Node0x242ea80 -> Node0x23cd268;
	Node0x23cd268 -> Node0x242ef20;
}
