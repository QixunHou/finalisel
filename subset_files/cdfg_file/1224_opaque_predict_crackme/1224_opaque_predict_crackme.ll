; ModuleID = '../.././c_source_file/1224_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1224_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %1, %0
  %5 = xor i32 %4, -1
  %6 = or i32 %5, %2
  %7 = mul i32 %6, -5
  %8 = xor i32 %1, -1
  %9 = and i32 %8, %2
  %10 = and i32 %9, %0
  %11 = xor i32 %2, %1
  %12 = xor i32 %11, %0
  %13 = xor i32 %12, -1
  %14 = xor i32 %10, %13
  %15 = shl i32 %14, 1
  %16 = add i32 %15, %7
  %17 = or i32 %2, %0
  %18 = xor i32 %17, -1
  %19 = or i32 %18, %1
  %20 = and i32 %1, %0
  %21 = or i32 %20, %18
  %22 = xor i32 %17, %1
  %23 = or i32 %8, %0
  %24 = and i32 %23, %2
  %25 = xor i32 %0, -1
  %26 = and i32 %9, %25
  %27 = or i32 %8, %2
  %28 = and i32 %27, %0
  %29 = or i32 %26, %28
  %30 = xor i32 %2, -1
  %31 = or i32 %20, %30
  %32 = xor i32 %23, -1
  %33 = xor i32 %11, -1
  %34 = or i32 %33, %32
  %35 = or i32 %4, %2
  %36 = and i32 %11, %25
  %37 = and i32 %8, %0
  %38 = and i32 %30, %1
  %39 = xor i32 %38, -1
  %40 = xor i32 %37, %39
  %41 = shl i32 %40, 1
  %42 = or i32 %38, %37
  %43 = or i32 %30, %1
  %44 = xor i32 %43, -1
  %45 = or i32 %44, %25
  %46 = xor i32 %28, -1
  %47 = xor i32 %26, %46
  %48 = and i32 %11, %23
  %49 = and i32 %11, %0
  %50 = shl i32 %49, 1
  %51 = xor i32 %2, %0
  %52 = xor i32 %51, -1
  %53 = and i32 %23, %52
  %54 = shl i32 %53, 1
  %55 = or i32 %1, %0
  %56 = and i32 %11, %55
  %57 = and i32 %27, %25
  %58 = or i32 %10, %57
  %59 = or i32 %37, %30
  %60 = shl i32 %11, 1
  %61 = and i32 %2, %0
  %62 = xor i32 %55, -1
  %63 = or i32 %61, %62
  %64 = or i32 %51, %20
  %65 = shl i32 %61, 1
  %66 = or i32 %11, %62
  %67 = and i32 %4, %52
  %68 = or i32 %30, %0
  %69 = and i32 %68, %1
  %70 = and i32 %51, %1
  %71 = and i32 %55, %2
  %72 = or i32 %62, %2
  %73 = or i32 %37, %33
  %74 = xor i32 %43, %20
  %75 = and i32 %2, %1
  %76 = xor i32 %75, -1
  %77 = and i32 %76, %0
  %78 = and i32 %30, %0
  %79 = or i32 %78, %4
  %80 = xor i32 %20, -1
  %81 = xor i32 %80, %2
  %82 = shl i32 %81, 1
  %83 = xor i32 %37, -1
  %84 = and i32 %83, %2
  %85 = and i32 %17, %5
  %86 = or i32 %78, %8
  %87 = or i32 %61, %4
  %88 = xor i32 %61, -1
  %89 = and i32 %88, %1
  %90 = xor i32 %76, %0
  %91 = and i32 %4, %2
  %92 = shl i32 %91, 2
  %93 = or i32 %2, %1
  %94 = xor i32 %93, -1
  %95 = xor i32 %94, %0
  %96 = and i32 %75, %25
  %97 = and i32 %93, %0
  %98 = xor i32 %96, -1
  %99 = xor i32 %97, %98
  %100 = and i32 %68, %4
  %101 = and i32 %55, %30
  %102 = or i32 %33, %25
  %103 = or i32 %39, %25
  %104 = and i32 %51, %23
  %105 = and i32 %52, %8
  %106 = xor i32 %61, %1
  %107 = and i32 %17, %1
  %108 = and i32 %39, %25
  %109 = or i32 %51, %37
  %110 = or i32 %44, %0
  %111 = or i32 %96, %49
  %112 = or i32 %78, %1
  %113 = xor i32 %62, %2
  %114 = xor i32 %17, %20
  %115 = shl i32 %114, 1
  %116 = or i32 %20, %52
  %117 = or i32 %51, %5
  %118 = or i32 %61, %8
  %119 = xor i32 %68, %1
  %120 = and i32 %68, %8
  %121 = and i32 %33, %25
  %122 = and i32 %11, %80
  %123 = or i32 %20, %94
  %124 = or i32 %76, %0
  %125 = xor i32 %23, %2
  %126 = shl i32 %125, 1
  %127 = or i32 %93, %25
  %128 = and i32 %51, %80
  %129 = xor i32 %61, %93
  %130 = shl i32 %129, 2
  %131 = or i32 %4, %30
  %132 = shl i32 %23, 1
  %133 = add i32 %55, 1
  %134 = xor i32 %33, %0
  %135 = or i32 %51, %8
  %136 = xor i32 %75, %0
  %137 = xor i32 %61, %39
  %138 = xor i32 %78, -1
  %139 = and i32 %138, %8
  %140 = xor i32 %32, %2
  %141 = xor i32 %44, %0
  %142 = or i32 %52, %1
  %143 = and i32 %4, %138
  %144 = or i32 %11, %25
  %145 = xor i32 %26, %144
  %146 = and i32 %76, %25
  %147 = or i32 %11, %20
  %148 = and i32 %93, %25
  %149 = or i32 %32, %2
  %150 = add i32 %75, 1
  %151 = and i32 %39, %0
  %152 = shl i32 %151, 1
  %153 = xor i32 %152, -1
  %154 = or i32 %38, %25
  %155 = xor i32 %68, -1
  %156 = or i32 %20, %155
  %157 = shl i32 %156, 1
  %158 = or i32 %20, %44
  %159 = xor i32 %10, -1
  %160 = xor i32 %57, %159
  %161 = shl i32 %43, 1
  %162 = and i32 %30, %5
  %163 = and i32 %30, %83
  %164 = and i32 %4, %30
  %165 = or i32 %4, %155
  %166 = or i32 %51, %62
  %167 = shl i32 %166, 1
  %168 = and i32 %52, %80
  %169 = and i32 %51, %5
  %170 = add i32 %23, 1
  %171 = or i32 %11, %0
  %172 = or i32 %75, %0
  %173 = xor i32 %78, %43
  %174 = or i32 %30, %62
  %175 = xor i32 %83, %2
  %176 = and i32 %75, %0
  %177 = or i32 %176, %148
  %178 = shl i32 %177, 2
  %179 = or i32 %10, %12
  %180 = and i32 %5, %2
  %181 = or i32 %39, %0
  %182 = or i32 %52, %32
  %183 = shl i32 %1, 1
  %184 = xor i32 %49, %98
  %185 = and i32 %52, %1
  %186 = xor i32 %176, %12
  %187 = and i32 %51, %4
  %188 = add i32 %61, 1
  %189 = shl i32 %75, 1
  %190 = xor i32 %138, %1
  %191 = xor i32 %27, %0
  %192 = or i32 %10, %191
  %193 = or i32 %43, %25
  %194 = and i32 %51, %55
  %195 = add i32 %78, 1
  %196 = add i32 %51, 1
  %197 = xor i32 %20, %2
  %198 = or i32 %155, %8
  %199 = or i32 %61, %94
  %200 = xor i32 %68, %20
  %201 = or i32 %11, %32
  %202 = and i32 %33, %80
  %203 = or i32 %33, %0
  %204 = and i32 %51, %8
  %205 = or i32 %51, %4
  %206 = shl i32 %33, 1
  %207 = xor i32 %39, %0
  %208 = xor i32 %176, -1
  %209 = xor i32 %36, %208
  %210 = and i32 %30, %80
  %211 = and i32 %43, %25
  %212 = or i32 %61, %32
  %213 = and i32 %88, %5
  %214 = xor i32 %144, -1
  %215 = or i32 %26, %214
  %216 = and i32 %51, %83
  %217 = xor i32 %78, %1
  %218 = or i32 %18, %5
  %219 = xor i32 %155, %1
  %220 = or i32 %30, %32
  %221 = or i32 %94, %25
  %222 = or i32 %61, %5
  %223 = xor i32 %88, %1
  %224 = xor i32 %37, %2
  %225 = shl i32 %224, 1
  %226 = and i32 %33, %83
  %227 = xor i32 %61, %55
  %228 = and i32 %55, %33
  %229 = or i32 %78, %44
  %230 = or i32 %4, %18
  %231 = or i32 %52, %62
  %232 = xor i32 %78, %76
  %233 = and i32 %80, %2
  %234 = or i32 %11, %37
  %235 = and i32 %17, %8
  %236 = and i32 %23, %33
  %237 = or i32 %75, %25
  %238 = and i32 %52, %5
  %239 = xor i32 %37, %76
  %240 = and i32 %138, %1
  %241 = or i32 %51, %32
  %242 = add i32 %43, 1
  %243 = or i32 %155, %1
  %244 = or i32 %78, %5
  %245 = and i32 %11, %83
  %246 = or i32 %52, %8
  %247 = add i32 %4, 1
  %248 = and i32 %88, %8
  %249 = xor i32 %93, %0
  %250 = xor i32 %249, %208
  %251 = or i32 %75, %37
  %252 = shl i32 %251, 1
  %253 = or i32 %30, %5
  %254 = or i32 %51, %1
  %255 = or i32 %37, %2
  %256 = and i32 %23, %30
  %257 = or i32 %94, %0
  %258 = shl i32 %257, 1
  %259 = and i32 %4, %88
  %260 = and i32 %52, %83
  %261 = and i32 %17, %4
  %262 = xor i32 %191, %159
  %263 = or i32 %20, %33
  %264 = or i32 %18, %8
  %265 = or i32 %176, %36
  %266 = or i32 %33, %62
  %267 = add i32 %37, 1
  %268 = or i32 %76, %25
  %269 = and i32 %55, %52
  %270 = xor i32 %18, %1
  %271 = shl i32 %4, 1
  %272 = or i32 %176, %13
  %273 = and i32 %33, %0
  %274 = or i32 %52, %5
  %275 = xor i32 %43, %0
  %276 = xor i32 %38, %0
  %277 = xor i32 %148, 2147483647
  %278 = xor i32 %277, %176
  %279 = xor i32 %171, -1
  %280 = or i32 %10, %279
  %281 = xor i32 %55, %2
  %282 = or i32 %176, %249
  %283 = or i32 %61, %1
  %284 = or i32 %78, %75
  %285 = or i32 %61, %38
  %286 = xor i32 %93, %20
  %287 = or i32 %43, %0
  %288 = and i32 %68, %5
  %289 = xor i32 %61, %23
  %290 = or i32 %155, %5
  %291 = and i32 %138, %5
  %292 = or i32 %96, %97
  %293 = xor i32 %10, %171
  %294 = or i32 %37, %52
  %295 = and i32 %94, %25
  %296 = and i32 %38, %25
  %297 = mul i32 %296, -13
  %298 = and i32 %94, %0
  %299 = and i32 %44, %25
  %300 = mul i32 %299, -11
  %301 = mul i32 %96, 25
  %302 = and i32 %44, %0
  %303 = mul i32 %302, -21
  %304 = add i32 %17, %93
  %305 = add i32 %304, %164
  %306 = add i32 %305, %140
  %307 = add i32 %306, %78
  %308 = add i32 %307, %35
  %309 = add i32 %308, %263
  %310 = add i32 %309, %244
  %311 = add i32 %310, %243
  %312 = add i32 %311, %231
  %313 = add i32 %312, %219
  %314 = add i32 %313, %190
  %315 = add i32 %314, %147
  %316 = add i32 %315, %142
  %317 = add i32 %316, %122
  %318 = add i32 %317, %112
  %319 = add i32 %318, %77
  %320 = sub i32 %319, %19
  %321 = add i32 %320, %293
  %322 = add i32 %321, %278
  %323 = shl i32 %322, 1
  %324 = add i32 %270, %267
  %325 = sub i32 %324, %176
  %326 = add i32 %325, %269
  %327 = add i32 %326, %205
  %328 = sub i32 %327, %203
  %329 = add i32 %328, %199
  %330 = sub i32 %329, %103
  %331 = mul i32 %330, 3
  %332 = sub i32 %204, %201
  %333 = add i32 %332, %120
  %334 = add i32 %333, %99
  %335 = mul i32 %334, 5
  %336 = add i32 %298, %295
  %337 = mul i32 %336, -17
  %338 = shl i32 %0, 1
  %339 = add i32 %338, %8
  %340 = add i32 %339, %30
  %341 = sub i32 %340, %2
  %342 = add i32 %341, %55
  %343 = add i32 %342, %133
  %344 = add i32 %343, %170
  %345 = sub i32 %344, %183
  %346 = add i32 %345, %37
  %347 = add i32 %346, %247
  %348 = add i32 %347, %24
  %349 = sub i32 %348, %31
  %350 = add i32 %349, %59
  %351 = sub i32 %350, %51
  %352 = sub i32 %351, %71
  %353 = add i32 %352, %72
  %354 = add i32 %353, %84
  %355 = sub i32 %354, %101
  %356 = add i32 %355, %113
  %357 = add i32 %356, %131
  %358 = sub i32 %357, %132
  %359 = sub i32 %358, %149
  %360 = add i32 %359, %18
  %361 = add i32 %360, %150
  %362 = sub i32 %361, %162
  %363 = sub i32 %362, %163
  %364 = add i32 %363, %174
  %365 = add i32 %364, %175
  %366 = sub i32 %365, %180
  %367 = add i32 %366, %39
  %368 = add i32 %367, %188
  %369 = add i32 %368, %195
  %370 = add i32 %369, %196
  %371 = add i32 %370, %197
  %372 = sub i32 %371, %210
  %373 = add i32 %372, %220
  %374 = add i32 %373, %233
  %375 = add i32 %374, %242
  %376 = add i32 %375, %94
  %377 = add i32 %376, %253
  %378 = sub i32 %377, %255
  %379 = add i32 %378, %256
  %380 = sub i32 %379, %271
  %381 = add i32 %380, %281
  %382 = add i32 %381, %68
  %383 = add i32 %382, %21
  %384 = sub i32 %383, %22
  %385 = sub i32 %384, %34
  %386 = add i32 %385, %36
  %387 = sub i32 %386, %42
  %388 = add i32 %387, %45
  %389 = sub i32 %388, %48
  %390 = sub i32 %389, %56
  %391 = sub i32 %390, %60
  %392 = add i32 %391, %63
  %393 = sub i32 %392, %64
  %394 = sub i32 %393, %65
  %395 = add i32 %394, %66
  %396 = add i32 %395, %67
  %397 = add i32 %396, %69
  %398 = sub i32 %397, %70
  %399 = sub i32 %398, %73
  %400 = sub i32 %399, %74
  %401 = add i32 %400, %79
  %402 = sub i32 %401, %82
  %403 = sub i32 %402, %85
  %404 = add i32 %403, %86
  %405 = add i32 %404, %87
  %406 = sub i32 %405, %89
  %407 = sub i32 %406, %90
  %408 = add i32 %407, %92
  %409 = sub i32 %408, %95
  %410 = sub i32 %409, %100
  %411 = add i32 %410, %102
  %412 = sub i32 %411, %104
  %413 = add i32 %412, %105
  %414 = add i32 %413, %106
  %415 = add i32 %414, %107
  %416 = sub i32 %415, %108
  %417 = sub i32 %416, %109
  %418 = sub i32 %417, %110
  %419 = add i32 %418, %116
  %420 = add i32 %419, %117
  %421 = add i32 %420, %118
  %422 = sub i32 %421, %119
  %423 = add i32 %422, %121
  %424 = add i32 %423, %123
  %425 = sub i32 %424, %124
  %426 = sub i32 %425, %126
  %427 = add i32 %426, %127
  %428 = sub i32 %427, %128
  %429 = add i32 %428, %134
  %430 = add i32 %429, %135
  %431 = sub i32 %430, %136
  %432 = sub i32 %431, %137
  %433 = sub i32 %432, %139
  %434 = sub i32 %433, %141
  %435 = add i32 %434, %143
  %436 = add i32 %435, %146
  %437 = sub i32 %436, %148
  %438 = add i32 %437, %154
  %439 = sub i32 %438, %158
  %440 = add i32 %439, %97
  %441 = sub i32 %440, %161
  %442 = sub i32 %441, %165
  %443 = sub i32 %442, %168
  %444 = add i32 %443, %169
  %445 = sub i32 %444, %171
  %446 = sub i32 %445, %172
  %447 = sub i32 %446, %173
  %448 = sub i32 %447, %181
  %449 = add i32 %448, %182
  %450 = sub i32 %449, %185
  %451 = sub i32 %450, %187
  %452 = sub i32 %451, %189
  %453 = sub i32 %452, %193
  %454 = sub i32 %453, %194
  %455 = add i32 %454, %198
  %456 = sub i32 %455, %200
  %457 = sub i32 %456, %144
  %458 = add i32 %457, %12
  %459 = add i32 %458, %202
  %460 = sub i32 %459, %206
  %461 = sub i32 %460, %207
  %462 = add i32 %461, %211
  %463 = add i32 %462, %212
  %464 = add i32 %463, %213
  %465 = add i32 %464, %216
  %466 = sub i32 %465, %217
  %467 = sub i32 %466, %218
  %468 = add i32 %467, %221
  %469 = sub i32 %468, %222
  %470 = sub i32 %469, %223
  %471 = sub i32 %470, %225
  %472 = sub i32 %471, %226
  %473 = sub i32 %472, %227
  %474 = add i32 %473, %228
  %475 = sub i32 %474, %229
  %476 = sub i32 %475, %230
  %477 = sub i32 %476, %232
  %478 = add i32 %477, %234
  %479 = add i32 %478, %235
  %480 = add i32 %479, %236
  %481 = add i32 %480, %237
  %482 = add i32 %481, %238
  %483 = add i32 %482, %239
  %484 = add i32 %483, %240
  %485 = sub i32 %484, %241
  %486 = sub i32 %485, %245
  %487 = sub i32 %486, %246
  %488 = add i32 %487, %248
  %489 = add i32 %488, %249
  %490 = sub i32 %489, %254
  %491 = sub i32 %490, %259
  %492 = sub i32 %491, %260
  %493 = add i32 %492, %261
  %494 = add i32 %493, %264
  %495 = sub i32 %494, %266
  %496 = add i32 %495, %268
  %497 = add i32 %496, %273
  %498 = add i32 %497, %274
  %499 = add i32 %498, %275
  %500 = add i32 %499, %276
  %501 = sub i32 %500, %283
  %502 = sub i32 %501, %284
  %503 = sub i32 %502, %285
  %504 = sub i32 %503, %286
  %505 = add i32 %504, %287
  %506 = sub i32 %505, %288
  %507 = add i32 %506, %289
  %508 = add i32 %507, %290
  %509 = add i32 %508, %291
  %510 = add i32 %509, %294
  %511 = sub i32 %510, %29
  %512 = sub i32 %511, %41
  %513 = sub i32 %512, %47
  %514 = sub i32 %513, %50
  %515 = sub i32 %514, %54
  %516 = add i32 %515, %58
  %517 = sub i32 %516, %111
  %518 = sub i32 %517, %115
  %519 = sub i32 %518, %130
  %520 = add i32 %519, %145
  %521 = add i32 %520, %153
  %522 = sub i32 %521, %157
  %523 = add i32 %522, %160
  %524 = sub i32 %523, %167
  %525 = add i32 %524, %179
  %526 = add i32 %525, %184
  %527 = add i32 %526, %186
  %528 = sub i32 %527, %192
  %529 = sub i32 %528, %209
  %530 = add i32 %529, %215
  %531 = add i32 %530, %250
  %532 = sub i32 %531, %252
  %533 = sub i32 %532, %258
  %534 = add i32 %533, %262
  %535 = add i32 %534, %265
  %536 = sub i32 %535, %272
  %537 = sub i32 %536, %280
  %538 = add i32 %537, %282
  %539 = add i32 %538, %292
  %540 = add i32 %539, %297
  %541 = add i32 %540, %300
  %542 = add i32 %541, %301
  %543 = add i32 %542, %303
  %544 = sub i32 %543, %178
  %545 = add i32 %544, %337
  %546 = add i32 %545, %335
  %547 = add i32 %546, %331
  %548 = add i32 %547, %323
  %549 = icmp eq i32 %16, %548
  %550 = select i1 %549, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %551 = tail call i32 @puts(i8* nonnull dereferenceable(1) %550)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
