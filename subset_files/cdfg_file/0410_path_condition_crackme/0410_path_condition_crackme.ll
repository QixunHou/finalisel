; ModuleID = '../.././c_source_file/0410_path_condition_crackme.c'
source_filename = "../.././c_source_file/0410_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %1, %0
  %8 = xor i32 %2, -1
  %9 = or i32 %8, %1
  %10 = xor i32 %9, %7
  %11 = or i32 %4, %3
  %12 = xor i32 %11, -1
  %13 = xor i32 %5, %3
  %14 = xor i32 %13, -1
  %15 = or i32 %14, %12
  %16 = add i32 %15, %10
  %17 = xor i32 %1, %0
  %18 = and i32 %17, %2
  %19 = or i32 %1, %0
  %20 = xor i32 %19, -1
  %21 = xor i32 %2, %0
  %22 = xor i32 %21, -1
  %23 = or i32 %22, %20
  %24 = shl i32 %23, 2
  %25 = and i32 %8, %0
  %26 = xor i32 %17, -1
  %27 = or i32 %25, %26
  %28 = or i32 %8, %26
  %29 = xor i32 %1, -1
  %30 = and i32 %29, %0
  %31 = and i32 %8, %1
  %32 = or i32 %31, %30
  %33 = or i32 %29, %0
  %34 = xor i32 %33, -1
  %35 = add i32 %33, 1
  %36 = or i32 %8, %0
  %37 = xor i32 %36, -1
  %38 = or i32 %7, %37
  %39 = and i32 %2, %1
  %40 = and i32 %39, %0
  %41 = or i32 %2, %1
  %42 = xor i32 %41, %0
  %43 = xor i32 %40, -1
  %44 = xor i32 %42, %43
  %45 = or i32 %21, %20
  %46 = xor i32 %9, %0
  %47 = and i32 %9, %0
  %48 = and i32 %2, %0
  %49 = xor i32 %48, -1
  %50 = and i32 %49, %1
  %51 = xor i32 %0, -1
  %52 = and i32 %41, %51
  %53 = xor i32 %7, %2
  %54 = xor i32 %2, %1
  %55 = xor i32 %54, %0
  %56 = xor i32 %55, 2147483647
  %57 = or i32 %56, %40
  %58 = shl i32 %57, 1
  %59 = or i32 %37, %29
  %60 = or i32 %9, %51
  %61 = or i32 %39, %51
  %62 = and i32 %21, %17
  %63 = xor i32 %54, -1
  %64 = and i32 %33, %63
  %65 = xor i32 %7, -1
  %66 = and i32 %54, %65
  %67 = or i32 %17, %2
  %68 = or i32 %25, %17
  %69 = add i32 %54, 1
  %70 = and i32 %63, %51
  %71 = xor i32 %41, -1
  %72 = or i32 %48, %71
  %73 = and i32 %22, %1
  %74 = or i32 %8, %34
  %75 = or i32 %2, %0
  %76 = or i32 %41, %0
  %77 = xor i32 %30, -1
  %78 = and i32 %77, %2
  %79 = add i32 %30, 1
  %80 = or i32 %31, %0
  %81 = xor i32 %9, -1
  %82 = add i32 %9, 1
  %83 = xor i32 %33, %2
  %84 = xor i32 %25, -1
  %85 = and i32 %84, %1
  %86 = or i32 %40, %52
  %87 = or i32 %48, %31
  %88 = xor i32 %31, -1
  %89 = and i32 %88, %0
  %90 = and i32 %19, %63
  %91 = shl i32 %25, 1
  %92 = and i32 %54, %51
  %93 = xor i32 %92, %43
  %94 = or i32 %21, %7
  %95 = or i32 %22, %26
  %96 = and i32 %29, %2
  %97 = and i32 %96, %51
  %98 = or i32 %29, %2
  %99 = and i32 %98, %0
  %100 = xor i32 %99, -1
  %101 = xor i32 %97, %100
  %102 = or i32 %7, %22
  %103 = or i32 %21, %17
  %104 = and i32 %84, %26
  %105 = or i32 %81, %0
  %106 = or i32 %9, %0
  %107 = and i32 %75, %1
  %108 = xor i32 %39, -1
  %109 = xor i32 %25, %108
  %110 = and i32 %33, %2
  %111 = shl i32 %110, 1
  %112 = and i32 %8, %26
  %113 = shl i32 %112, 1
  %114 = xor i32 %75, %7
  %115 = and i32 %63, %65
  %116 = and i32 %17, %22
  %117 = and i32 %17, %8
  %118 = or i32 %37, %26
  %119 = xor i32 %36, %1
  %120 = or i32 %30, %8
  %121 = and i32 %19, %22
  %122 = and i32 %49, %26
  %123 = shl i32 %122, 1
  %124 = or i32 %17, %37
  %125 = or i32 %34, %2
  %126 = or i32 %48, %29
  %127 = or i32 %48, %20
  %128 = shl i32 %127, 1
  %129 = or i32 %7, %71
  %130 = xor i32 %75, -1
  %131 = or i32 %17, %130
  %132 = or i32 %88, %0
  %133 = and i32 %96, %0
  %134 = and i32 %98, %51
  %135 = xor i32 %134, -1
  %136 = xor i32 %133, %135
  %137 = xor i32 %52, %43
  %138 = and i32 %19, %8
  %139 = or i32 %108, %0
  %140 = or i32 %20, %2
  %141 = and i32 %33, %8
  %142 = or i32 %88, %51
  %143 = or i32 %54, %51
  %144 = and i32 %75, %26
  %145 = and i32 %36, %17
  %146 = or i32 %40, %92
  %147 = or i32 %39, %0
  %148 = xor i32 %98, %0
  %149 = xor i32 %148, 2147483647
  %150 = xor i32 %149, %133
  %151 = and i32 %36, %29
  %152 = shl i32 %151, 1
  %153 = xor i32 %30, %108
  %154 = xor i32 %48, %1
  %155 = xor i32 %48, %33
  %156 = or i32 %30, %63
  %157 = xor i32 %77, %2
  %158 = and i32 %41, %0
  %159 = shl i32 %158, 1
  %160 = xor i32 %63, %0
  %161 = shl i32 %160, 1
  %162 = xor i32 %40, %55
  %163 = shl i32 %162, 1
  %164 = and i32 %21, %33
  %165 = or i32 %54, %0
  %166 = and i32 %22, %29
  %167 = or i32 %25, %1
  %168 = add i32 %7, 1
  %169 = shl i32 %7, 1
  %170 = and i32 %17, %49
  %171 = and i32 %84, %29
  %172 = and i32 %21, %1
  %173 = or i32 %130, %1
  %174 = xor i32 %41, %7
  %175 = xor i32 %75, %1
  %176 = add i32 %39, 1
  %177 = or i32 %71, %51
  %178 = shl i32 %177, 1
  %179 = or i32 %22, %34
  %180 = or i32 %54, %34
  %181 = and i32 %26, %2
  %182 = or i32 %63, %0
  %183 = shl i32 %182, 1
  %184 = or i32 %7, %63
  %185 = and i32 %8, %65
  %186 = or i32 %71, %0
  %187 = and i32 %21, %19
  %188 = or i32 %7, %130
  %189 = and i32 %75, %29
  %190 = and i32 %19, %2
  %191 = xor i32 %19, %2
  %192 = or i32 %48, %17
  %193 = and i32 %75, %17
  %194 = xor i32 %143, -1
  %195 = or i32 %97, %194
  %196 = and i32 %54, %33
  %197 = or i32 %133, %134
  %198 = and i32 %22, %26
  %199 = or i32 %25, %29
  %200 = or i32 %17, %22
  %201 = and i32 %21, %65
  %202 = xor i32 %130, %1
  %203 = or i32 %48, %34
  %204 = or i32 %54, %30
  %205 = or i32 %8, %20
  %206 = or i32 %63, %34
  %207 = xor i32 %30, %2
  %208 = or i32 %21, %26
  %209 = and i32 %22, %77
  %210 = xor i32 %34, %2
  %211 = and i32 %49, %29
  %212 = or i32 %22, %29
  %213 = xor i32 %36, %7
  %214 = xor i32 %39, %0
  %215 = xor i32 %108, %0
  %216 = xor i32 %84, %1
  %217 = or i32 %48, %1
  %218 = or i32 %63, %51
  %219 = or i32 %21, %1
  %220 = and i32 %22, %65
  %221 = or i32 %25, %39
  %222 = and i32 %36, %26
  %223 = or i32 %133, %148
  %224 = and i32 %21, %29
  %225 = shl i32 %224, 2
  %226 = xor i32 %48, %19
  %227 = shl i32 %226, 1
  %228 = or i32 %41, %51
  %229 = or i32 %21, %30
  %230 = or i32 %21, %29
  %231 = shl i32 %230, 1
  %232 = or i32 %81, %51
  %233 = and i32 %36, %1
  %234 = or i32 %30, %2
  %235 = xor i32 %25, %9
  %236 = or i32 %7, %8
  %237 = or i32 %25, %81
  %238 = shl i32 %237, 1
  %239 = shl i32 %2, 1
  %240 = or i32 %97, %99
  %241 = or i32 %130, %29
  %242 = or i32 %133, %55
  %243 = or i32 %7, %2
  %244 = xor i32 %65, %2
  %245 = or i32 %26, %2
  %246 = shl i32 %245, 1
  %247 = and i32 %9, %51
  %248 = or i32 %39, %30
  %249 = add i32 %2, 1
  %250 = and i32 %63, %0
  %251 = xor i32 %133, %165
  %252 = or i32 %40, %42
  %253 = shl i32 %252, 1
  %254 = or i32 %30, %22
  %255 = shl i32 %254, 1
  %256 = xor i32 %49, %1
  %257 = and i32 %54, %19
  %258 = or i32 %63, %20
  %259 = or i32 %54, %7
  %260 = or i32 %31, %51
  %261 = and i32 %39, %51
  %262 = and i32 %54, %0
  %263 = or i32 %261, %262
  %264 = xor i32 %158, 2147483647
  %265 = xor i32 %264, %261
  %266 = and i32 %71, %51
  %267 = shl i32 %266, 3
  %268 = and i32 %31, %51
  %269 = mul i32 %268, -9
  %270 = and i32 %71, %0
  %271 = and i32 %31, %0
  %272 = shl i32 %271, 3
  %273 = and i32 %81, %51
  %274 = mul i32 %261, 18
  %275 = and i32 %81, %0
  %276 = shl i32 %275, 2
  %277 = and i32 %5, %3
  %278 = and i32 %277, %4
  %279 = xor i32 %4, -1
  %280 = or i32 %5, %3
  %281 = and i32 %280, %279
  %282 = or i32 %278, %281
  %283 = and i32 %13, %4
  %284 = and i32 %5, %4
  %285 = or i32 %284, %12
  %286 = shl i32 %285, 1
  %287 = xor i32 %5, %4
  %288 = xor i32 %287, -1
  %289 = and i32 %11, %288
  %290 = and i32 %287, %3
  %291 = xor i32 %5, -1
  %292 = and i32 %291, %3
  %293 = or i32 %292, %279
  %294 = shl i32 %293, 1
  %295 = or i32 %284, %292
  %296 = xor i32 %3, -1
  %297 = or i32 %296, %4
  %298 = xor i32 %297, -1
  %299 = or i32 %14, %298
  %300 = xor i32 %4, %3
  %301 = xor i32 %300, -1
  %302 = and i32 %301, %5
  %303 = and i32 %296, %4
  %304 = xor i32 %303, -1
  %305 = and i32 %287, %304
  %306 = or i32 %291, %4
  %307 = xor i32 %306, -1
  %308 = or i32 %13, %303
  %309 = or i32 %14, %279
  %310 = xor i32 %284, -1
  %311 = and i32 %310, %3
  %312 = or i32 %291, %3
  %313 = xor i32 %312, %4
  %314 = add i32 %4, 1
  %315 = or i32 %5, %4
  %316 = xor i32 %315, -1
  %317 = or i32 %316, %296
  %318 = shl i32 %14, 1
  %319 = xor i32 %11, %5
  %320 = and i32 %4, %3
  %321 = or i32 %320, %14
  %322 = shl i32 %321, 1
  %323 = and i32 %14, %279
  %324 = xor i32 %280, -1
  %325 = or i32 %320, %324
  %326 = xor i32 %304, %5
  %327 = and i32 %277, %279
  %328 = and i32 %280, %4
  %329 = xor i32 %328, -1
  %330 = xor i32 %327, %329
  %331 = and i32 %291, %4
  %332 = xor i32 %331, -1
  %333 = xor i32 %332, %3
  %334 = xor i32 %277, -1
  %335 = and i32 %334, %279
  %336 = shl i32 %335, 2
  %337 = and i32 %296, %5
  %338 = and i32 %337, %4
  %339 = or i32 %296, %5
  %340 = and i32 %339, %279
  %341 = or i32 %338, %340
  %342 = or i32 %320, %5
  %343 = shl i32 %342, 1
  %344 = or i32 %291, %298
  %345 = xor i32 %12, %5
  %346 = and i32 %11, %291
  %347 = or i32 %287, %298
  %348 = shl i32 %347, 1
  %349 = or i32 %277, %279
  %350 = or i32 %331, %3
  %351 = add i32 %280, 1
  %352 = or i32 %300, %288
  %353 = add i32 %284, 1
  %354 = and i32 %310, %296
  %355 = xor i32 %280, %279
  %356 = xor i32 %355, %278
  %357 = and i32 %337, %279
  %358 = and i32 %339, %4
  %359 = or i32 %357, %358
  %360 = and i32 %288, %296
  %361 = xor i32 %312, %320
  %362 = xor i32 %320, -1
  %363 = and i32 %287, %362
  %364 = add i32 %303, 1
  %365 = or i32 %288, %298
  %366 = or i32 %316, %301
  %367 = or i32 %292, %4
  %368 = or i32 %288, %3
  %369 = and i32 %288, %362
  %370 = or i32 %288, %301
  %371 = or i32 %303, %291
  %372 = or i32 %13, %320
  %373 = xor i32 %298, %5
  %374 = and i32 %287, %300
  %375 = or i32 %320, %316
  %376 = xor i32 %13, %4
  %377 = xor i32 %278, %376
  %378 = or i32 %320, %307
  %379 = xor i32 %339, %4
  %380 = or i32 %338, %379
  %381 = and i32 %297, %5
  %382 = xor i32 %315, %3
  %383 = or i32 %284, %3
  %384 = or i32 %312, %4
  %385 = or i32 %13, %4
  %386 = or i32 %300, %316
  %387 = or i32 %13, %279
  %388 = and i32 %300, %291
  %389 = and i32 %332, %301
  %390 = or i32 %284, %296
  %391 = add i32 %11, 1
  %392 = and i32 %332, %3
  %393 = shl i32 %392, 1
  %394 = and i32 %288, %301
  %395 = shl i32 %291, 1
  %396 = and i32 %315, %296
  %397 = xor i32 %331, %334
  %398 = and i32 %312, %4
  %399 = xor i32 %310, %3
  %400 = or i32 %307, %296
  %401 = xor i32 %385, -1
  %402 = or i32 %338, %401
  %403 = xor i32 %312, -1
  %404 = or i32 %403, %279
  %405 = or i32 %303, %14
  %406 = and i32 %300, %288
  %407 = or i32 %403, %4
  %408 = shl i32 %407, 1
  %409 = xor i32 %292, %304
  %410 = xor i32 %376, -1
  %411 = xor i32 %338, %410
  %412 = xor i32 %297, %5
  %413 = xor i32 %303, %334
  %414 = or i32 %284, %298
  %415 = or i32 %287, %301
  %416 = shl i32 %415, 1
  %417 = or i32 %331, %403
  %418 = or i32 %287, %300
  %419 = and i32 %306, %301
  %420 = or i32 %287, %320
  %421 = or i32 %292, %303
  %422 = shl i32 %421, 1
  %423 = and i32 %11, %5
  %424 = or i32 %334, %279
  %425 = and i32 %14, %4
  %426 = and i32 %287, %11
  %427 = or i32 %303, %5
  %428 = and i32 %300, %332
  %429 = and i32 %291, %304
  %430 = xor i32 %277, %4
  %431 = or i32 %300, %291
  %432 = or i32 %312, %279
  %433 = xor i32 %316, %3
  %434 = or i32 %331, %301
  %435 = and i32 %297, %288
  %436 = or i32 %13, %298
  %437 = and i32 %312, %279
  %438 = xor i32 %284, %3
  %439 = and i32 %291, %301
  %440 = xor i32 %387, 2147483647
  %441 = or i32 %440, %357
  %442 = shl i32 %441, 1
  %443 = or i32 %307, %3
  %444 = shl i32 %443, 2
  %445 = or i32 %320, %403
  %446 = xor i32 %292, %4
  %447 = and i32 %324, %279
  %448 = and i32 %292, %279
  %449 = and i32 %324, %4
  %450 = shl i32 %449, 3
  %451 = and i32 %292, %4
  %452 = mul i32 %451, 17
  %453 = and i32 %403, %279
  %454 = mul i32 %327, 15
  %455 = and i32 %403, %4
  %456 = add i32 %207, %30
  %457 = add i32 %456, %117
  %458 = add i32 %457, %75
  %459 = add i32 %458, %235
  %460 = add i32 %459, %232
  %461 = add i32 %460, %213
  %462 = add i32 %461, %198
  %463 = add i32 %462, %174
  %464 = add i32 %463, %171
  %465 = add i32 %464, %164
  %466 = add i32 %465, %153
  %467 = add i32 %466, %121
  %468 = add i32 %467, %114
  %469 = add i32 %468, %46
  %470 = add i32 %469, %240
  %471 = add i32 %470, %429
  %472 = add i32 %471, %427
  %473 = add i32 %472, %292
  %474 = add i32 %473, %326
  %475 = add i32 %474, %265
  %476 = add i32 %475, %150
  %477 = add i32 %214, %215
  %478 = add i32 %477, %209
  %479 = sub i32 %478, %42
  %480 = add i32 %479, %351
  %481 = sub i32 %480, %344
  %482 = add i32 %481, %363
  %483 = add i32 %482, %437
  %484 = sub i32 %483, %290
  %485 = mul i32 %484, 5
  %486 = sub i32 %69, %270
  %487 = sub i32 %486, %173
  %488 = add i32 %487, %170
  %489 = sub i32 %488, %156
  %490 = add i32 %489, %64
  %491 = sub i32 %490, %373
  %492 = sub i32 %491, %319
  %493 = add i32 %492, %372
  %494 = mul i32 %493, 3
  %495 = add i32 %147, %157
  %496 = add i32 %495, %288
  %497 = add i32 %496, %447
  %498 = shl i32 %497, 2
  %499 = add i32 %448, %40
  %500 = sub i32 %453, %499
  %501 = mul i32 %500, 6
  %502 = sub i32 %273, %455
  %503 = mul i32 %502, 12
  %504 = add i32 %476, %388
  %505 = add i32 %504, %436
  %506 = add i32 %505, %446
  %507 = add i32 %506, %435
  %508 = add i32 %507, %413
  %509 = add i32 %508, %382
  %510 = add i32 %509, %360
  %511 = add i32 %510, %350
  %512 = add i32 %511, %325
  %513 = add i32 %512, %309
  %514 = shl i32 %513, 1
  %515 = shl i32 %0, 1
  %516 = add i32 %515, %29
  %517 = sub i32 %516, %1
  %518 = add i32 %517, %35
  %519 = sub i32 %518, %19
  %520 = add i32 %519, %79
  %521 = sub i32 %520, %33
  %522 = add i32 %521, %168
  %523 = add i32 %522, %249
  %524 = sub i32 %523, %18
  %525 = add i32 %524, %28
  %526 = sub i32 %525, %53
  %527 = sub i32 %526, %67
  %528 = sub i32 %527, %41
  %529 = add i32 %528, %74
  %530 = add i32 %529, %71
  %531 = add i32 %530, %78
  %532 = add i32 %531, %82
  %533 = add i32 %532, %83
  %534 = add i32 %533, %120
  %535 = sub i32 %534, %125
  %536 = add i32 %535, %36
  %537 = add i32 %536, %138
  %538 = sub i32 %537, %140
  %539 = sub i32 %538, %141
  %540 = add i32 %539, %54
  %541 = sub i32 %540, %169
  %542 = add i32 %541, %176
  %543 = add i32 %542, %130
  %544 = add i32 %543, %181
  %545 = sub i32 %544, %185
  %546 = sub i32 %545, %190
  %547 = sub i32 %546, %191
  %548 = sub i32 %547, %205
  %549 = sub i32 %548, %210
  %550 = sub i32 %549, %21
  %551 = sub i32 %550, %234
  %552 = add i32 %551, %88
  %553 = add i32 %552, %236
  %554 = sub i32 %553, %239
  %555 = add i32 %554, %243
  %556 = sub i32 %555, %244
  %557 = add i32 %556, %296
  %558 = add i32 %557, %27
  %559 = add i32 %558, %32
  %560 = add i32 %559, %38
  %561 = sub i32 %560, %45
  %562 = add i32 %561, %47
  %563 = add i32 %562, %50
  %564 = sub i32 %563, %52
  %565 = add i32 %564, %59
  %566 = add i32 %565, %60
  %567 = add i32 %566, %61
  %568 = sub i32 %567, %62
  %569 = sub i32 %568, %66
  %570 = sub i32 %569, %68
  %571 = add i32 %570, %70
  %572 = add i32 %571, %72
  %573 = add i32 %572, %73
  %574 = sub i32 %573, %76
  %575 = sub i32 %574, %80
  %576 = sub i32 %575, %85
  %577 = add i32 %576, %87
  %578 = add i32 %577, %89
  %579 = add i32 %578, %90
  %580 = sub i32 %579, %91
  %581 = add i32 %580, %94
  %582 = add i32 %581, %95
  %583 = sub i32 %582, %102
  %584 = sub i32 %583, %103
  %585 = sub i32 %584, %104
  %586 = add i32 %585, %105
  %587 = add i32 %586, %106
  %588 = sub i32 %587, %107
  %589 = sub i32 %588, %109
  %590 = sub i32 %589, %111
  %591 = sub i32 %590, %113
  %592 = sub i32 %591, %115
  %593 = add i32 %592, %116
  %594 = add i32 %593, %118
  %595 = sub i32 %594, %119
  %596 = sub i32 %595, %124
  %597 = add i32 %596, %126
  %598 = add i32 %597, %129
  %599 = sub i32 %598, %131
  %600 = add i32 %599, %132
  %601 = add i32 %600, %139
  %602 = add i32 %601, %142
  %603 = add i32 %602, %143
  %604 = sub i32 %603, %144
  %605 = add i32 %604, %145
  %606 = add i32 %605, %154
  %607 = sub i32 %606, %155
  %608 = sub i32 %607, %55
  %609 = sub i32 %608, %165
  %610 = sub i32 %609, %166
  %611 = add i32 %610, %167
  %612 = sub i32 %611, %172
  %613 = sub i32 %612, %175
  %614 = add i32 %613, %179
  %615 = add i32 %614, %180
  %616 = sub i32 %615, %184
  %617 = add i32 %616, %186
  %618 = sub i32 %617, %187
  %619 = add i32 %618, %188
  %620 = sub i32 %619, %189
  %621 = add i32 %620, %192
  %622 = sub i32 %621, %193
  %623 = add i32 %622, %196
  %624 = sub i32 %623, %199
  %625 = sub i32 %624, %200
  %626 = sub i32 %625, %201
  %627 = add i32 %626, %202
  %628 = sub i32 %627, %203
  %629 = add i32 %628, %204
  %630 = sub i32 %629, %206
  %631 = add i32 %630, %208
  %632 = add i32 %631, %211
  %633 = sub i32 %632, %212
  %634 = add i32 %633, %216
  %635 = add i32 %634, %217
  %636 = sub i32 %635, %218
  %637 = add i32 %636, %219
  %638 = add i32 %637, %220
  %639 = sub i32 %638, %221
  %640 = sub i32 %639, %222
  %641 = sub i32 %640, %228
  %642 = add i32 %641, %229
  %643 = sub i32 %642, %233
  %644 = add i32 %643, %241
  %645 = sub i32 %644, %92
  %646 = sub i32 %645, %246
  %647 = sub i32 %646, %247
  %648 = sub i32 %647, %248
  %649 = add i32 %648, %250
  %650 = add i32 %649, %256
  %651 = add i32 %650, %257
  %652 = add i32 %651, %258
  %653 = add i32 %652, %259
  %654 = add i32 %653, %260
  %655 = add i32 %654, %262
  %656 = add i32 %655, %4
  %657 = add i32 %656, %314
  %658 = sub i32 %657, %24
  %659 = add i32 %658, %44
  %660 = sub i32 %659, %86
  %661 = add i32 %660, %93
  %662 = add i32 %661, %101
  %663 = sub i32 %662, %123
  %664 = sub i32 %663, %128
  %665 = sub i32 %664, %136
  %666 = add i32 %665, %137
  %667 = sub i32 %666, %146
  %668 = sub i32 %667, %152
  %669 = sub i32 %668, %159
  %670 = sub i32 %669, %161
  %671 = sub i32 %670, %178
  %672 = sub i32 %671, %183
  %673 = add i32 %672, %195
  %674 = sub i32 %673, %197
  %675 = sub i32 %674, %223
  %676 = sub i32 %675, %225
  %677 = sub i32 %676, %227
  %678 = sub i32 %677, %231
  %679 = sub i32 %678, %238
  %680 = sub i32 %679, %242
  %681 = add i32 %680, %251
  %682 = sub i32 %681, %255
  %683 = sub i32 %682, %263
  %684 = sub i32 %683, %267
  %685 = add i32 %684, %269
  %686 = sub i32 %685, %272
  %687 = add i32 %686, %274
  %688 = sub i32 %687, %276
  %689 = add i32 %688, %5
  %690 = add i32 %689, %301
  %691 = sub i32 %690, %297
  %692 = add i32 %691, %303
  %693 = add i32 %692, %364
  %694 = add i32 %693, %391
  %695 = add i32 %694, %320
  %696 = add i32 %695, %11
  %697 = sub i32 %696, %163
  %698 = sub i32 %697, %253
  %699 = add i32 %698, %302
  %700 = add i32 %699, %307
  %701 = add i32 %700, %13
  %702 = add i32 %701, %345
  %703 = add i32 %702, %346
  %704 = add i32 %703, %353
  %705 = add i32 %704, %331
  %706 = sub i32 %705, %371
  %707 = add i32 %706, %381
  %708 = sub i32 %707, %395
  %709 = add i32 %708, %334
  %710 = add i32 %709, %412
  %711 = add i32 %710, %316
  %712 = add i32 %711, %423
  %713 = add i32 %712, %403
  %714 = add i32 %713, %431
  %715 = sub i32 %714, %280
  %716 = sub i32 %715, %439
  %717 = sub i32 %716, %58
  %718 = sub i32 %717, %283
  %719 = add i32 %718, %289
  %720 = add i32 %719, %295
  %721 = add i32 %720, %299
  %722 = sub i32 %721, %305
  %723 = sub i32 %722, %308
  %724 = add i32 %723, %311
  %725 = add i32 %724, %313
  %726 = add i32 %725, %317
  %727 = sub i32 %726, %318
  %728 = sub i32 %727, %323
  %729 = add i32 %728, %333
  %730 = sub i32 %729, %343
  %731 = add i32 %730, %349
  %732 = add i32 %731, %352
  %733 = add i32 %732, %354
  %734 = sub i32 %733, %361
  %735 = add i32 %734, %365
  %736 = add i32 %735, %366
  %737 = sub i32 %736, %367
  %738 = add i32 %737, %368
  %739 = sub i32 %738, %369
  %740 = sub i32 %739, %370
  %741 = add i32 %740, %374
  %742 = add i32 %741, %375
  %743 = add i32 %742, %378
  %744 = sub i32 %743, %383
  %745 = sub i32 %744, %384
  %746 = sub i32 %745, %385
  %747 = sub i32 %746, %386
  %748 = sub i32 %747, %387
  %749 = sub i32 %748, %389
  %750 = add i32 %749, %390
  %751 = sub i32 %750, %394
  %752 = add i32 %751, %396
  %753 = add i32 %752, %397
  %754 = sub i32 %753, %398
  %755 = add i32 %754, %399
  %756 = sub i32 %755, %400
  %757 = sub i32 %756, %404
  %758 = sub i32 %757, %405
  %759 = add i32 %758, %406
  %760 = sub i32 %759, %409
  %761 = sub i32 %760, %414
  %762 = sub i32 %761, %417
  %763 = add i32 %762, %418
  %764 = add i32 %763, %419
  %765 = add i32 %764, %420
  %766 = sub i32 %765, %424
  %767 = sub i32 %766, %425
  %768 = sub i32 %767, %426
  %769 = add i32 %768, %428
  %770 = sub i32 %769, %430
  %771 = sub i32 %770, %432
  %772 = sub i32 %771, %433
  %773 = add i32 %772, %434
  %774 = sub i32 %773, %438
  %775 = sub i32 %774, %328
  %776 = add i32 %775, %445
  %777 = sub i32 %776, %282
  %778 = sub i32 %777, %286
  %779 = sub i32 %778, %294
  %780 = sub i32 %779, %322
  %781 = add i32 %780, %330
  %782 = sub i32 %781, %336
  %783 = sub i32 %782, %341
  %784 = sub i32 %783, %348
  %785 = sub i32 %784, %356
  %786 = sub i32 %785, %359
  %787 = add i32 %786, %377
  %788 = add i32 %787, %380
  %789 = sub i32 %788, %393
  %790 = sub i32 %789, %402
  %791 = sub i32 %790, %408
  %792 = add i32 %791, %411
  %793 = sub i32 %792, %416
  %794 = sub i32 %793, %422
  %795 = sub i32 %794, %444
  %796 = add i32 %795, %450
  %797 = add i32 %796, %452
  %798 = add i32 %797, %454
  %799 = add i32 %798, %503
  %800 = sub i32 %799, %442
  %801 = add i32 %800, %501
  %802 = add i32 %801, %498
  %803 = add i32 %802, %485
  %804 = add i32 %803, %494
  %805 = add i32 %804, %514
  %806 = icmp eq i32 %16, %805
  %807 = select i1 %806, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %808 = tail call i32 @puts(i8* nonnull dereferenceable(1) %807)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
