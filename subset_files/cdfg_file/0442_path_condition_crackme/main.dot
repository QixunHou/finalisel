digraph "DFG for'main' function" {
	Node0xc75a78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc75af8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc75b88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xc75fe8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc760c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xc761e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc76420[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xc764d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc77448[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc77ad0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xc77b40[shape=record, label="  %9 = add i32 %7, 1"];
	Node0xc77bb0[shape=record, label="  %10 = and i32 %7, %6"];
	Node0xc77c20[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0xc77c90[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0xc77d00[shape=record, label="  %13 = and i32 %6, %8"];
	Node0xc77d70[shape=record, label="  %14 = xor i32 %6, -1"];
	Node0xc77de0[shape=record, label="  %15 = and i32 %7, %14"];
	Node0xc77e50[shape=record, label="  %16 = shl i32 %13, 1"];
	Node0xc77ec0[shape=record, label="  %17 = mul i32 %10, 5"];
	Node0xc77f30[shape=record, label="  %18 = sub i32 %12, %7"];
	Node0xc77fa0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0xc78010[shape=record, label="  %20 = sub i32 2, %6"];
	Node0xc78080[shape=record, label="  %21 = add i32 %20, %11"];
	Node0xc780f0[shape=record, label="  %22 = add i32 %21, %13"];
	Node0xc78160[shape=record, label="  %23 = add i32 %22, %15"];
	Node0xc781d0[shape=record, label="  %24 = sub i32 %23, %16"];
	Node0xc78240[shape=record, label="  %25 = add i32 %24, %17"];
	Node0xc782b0[shape=record, label="  %26 = add i32 %25, %19"];
	Node0xc78320[shape=record, label="  %27 = icmp eq i32 %9, %26"];
	Node0xc169d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc783b0[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0xc78608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc78768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc78828[shape=record, label="  ret i32 0"];
	Node0xc75a78 -> Node0xc75af8;
	Node0xc75af8 -> Node0xc75b88;
	Node0xc75b88 -> Node0xc75fe8;
	Node0xc75fe8 -> Node0xc760c8;
	Node0xc760c8 -> Node0xc761e8;
	Node0xc761e8 -> Node0xc76420;
	Node0xc76420 -> Node0xc764d8;
	Node0xc764d8 -> Node0xc77448;
	Node0xc77448 -> Node0xc77ad0;
	Node0xc77ad0 -> Node0xc77b40;
	Node0xc77b40 -> Node0xc77bb0;
	Node0xc77bb0 -> Node0xc77c20;
	Node0xc77c20 -> Node0xc77c90;
	Node0xc77c90 -> Node0xc77d00;
	Node0xc77d00 -> Node0xc77d70;
	Node0xc77d70 -> Node0xc77de0;
	Node0xc77de0 -> Node0xc77e50;
	Node0xc77e50 -> Node0xc77ec0;
	Node0xc77ec0 -> Node0xc77f30;
	Node0xc77f30 -> Node0xc77fa0;
	Node0xc77fa0 -> Node0xc78010;
	Node0xc78010 -> Node0xc78080;
	Node0xc78080 -> Node0xc780f0;
	Node0xc780f0 -> Node0xc78160;
	Node0xc78160 -> Node0xc781d0;
	Node0xc781d0 -> Node0xc78240;
	Node0xc78240 -> Node0xc782b0;
	Node0xc782b0 -> Node0xc78320;
	Node0xc78320 -> Node0xc169d8;
	Node0xc169d8 -> Node0xc783b0;
	Node0xc783b0 -> Node0xc78608;
	Node0xc78608 -> Node0xc78768;
	Node0xc78768 -> Node0xc78828;
edge [color=red]
	Node0xc75a78 -> Node0xc75b88;
	Node0xc75b88 -> Node0xc75fe8;
	Node0xc75af8 -> Node0xc760c8;
	Node0xc760c8 -> Node0xc761e8;
	Node0xc75a78 -> Node0xc76420;
	Node0xc75af8 -> Node0xc76420;
	Node0xc75a78 -> Node0xc764d8;
	Node0xc75af8 -> Node0xc77448;
	Node0xc77448 -> Node0xc77ad0;
	Node0xc77448 -> Node0xc77b40;
	Node0xc77448 -> Node0xc77bb0;
	Node0xc764d8 -> Node0xc77bb0;
	Node0xc77bb0 -> Node0xc77c20;
	Node0xc77448 -> Node0xc77c90;
	Node0xc764d8 -> Node0xc77c90;
	Node0xc764d8 -> Node0xc77d00;
	Node0xc77ad0 -> Node0xc77d00;
	Node0xc764d8 -> Node0xc77d70;
	Node0xc77448 -> Node0xc77de0;
	Node0xc77d70 -> Node0xc77de0;
	Node0xc77d00 -> Node0xc77e50;
	Node0xc77bb0 -> Node0xc77ec0;
	Node0xc77c90 -> Node0xc77f30;
	Node0xc77448 -> Node0xc77f30;
	Node0xc77f30 -> Node0xc77fa0;
	Node0xc764d8 -> Node0xc78010;
	Node0xc78010 -> Node0xc78080;
	Node0xc77c20 -> Node0xc78080;
	Node0xc78080 -> Node0xc780f0;
	Node0xc77d00 -> Node0xc780f0;
	Node0xc780f0 -> Node0xc78160;
	Node0xc77de0 -> Node0xc78160;
	Node0xc78160 -> Node0xc781d0;
	Node0xc77e50 -> Node0xc781d0;
	Node0xc781d0 -> Node0xc78240;
	Node0xc77ec0 -> Node0xc78240;
	Node0xc78240 -> Node0xc782b0;
	Node0xc77fa0 -> Node0xc782b0;
	Node0xc77b40 -> Node0xc78320;
	Node0xc782b0 -> Node0xc78320;
	Node0xc78320 -> Node0xc169d8;
	Node0xc169d8 -> Node0xc783b0;
	Node0xc760c8 -> Node0xc78608;
	Node0xc75b88 -> Node0xc78768;
}
