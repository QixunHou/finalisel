digraph "DFG for'main' function" {
	Node0x8c0f08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x8c0f88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x8c1018[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x8c1078[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x8c1128[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x8c1558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8c1638[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x8c1738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8c17f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x8c18a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x8c1968[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x8c1a18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x8bb810[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x8c1c18[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x8c2b88[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x8c31f8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x8c3258[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x8c3368[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x8c35c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x8c3728[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x8c3838[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8c3948[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8c3a08[shape=record, label="  ret i32 0"];
	Node0x8c0f08 -> Node0x8c0f88;
	Node0x8c0f88 -> Node0x8c1018;
	Node0x8c1018 -> Node0x8c1078;
	Node0x8c1078 -> Node0x8c1128;
	Node0x8c1128 -> Node0x8c1558;
	Node0x8c1558 -> Node0x8c1638;
	Node0x8c1638 -> Node0x8c1738;
	Node0x8c1738 -> Node0x8c17f8;
	Node0x8c17f8 -> Node0x8c18a8;
	Node0x8c18a8 -> Node0x8c1968;
	Node0x8c1968 -> Node0x8c1a18;
	Node0x8c1a18 -> Node0x8bb810;
	Node0x8bb810 -> Node0x8c1c18;
	Node0x8c1c18 -> Node0x8c2b88;
	Node0x8c2b88 -> Node0x8c31f8;
	Node0x8c31f8 -> Node0x8c3258;
	Node0x8c3258 -> Node0x8c3368;
	Node0x8c3368 -> Node0x8c35c8;
	Node0x8c35c8 -> Node0x8c3728;
	Node0x8c3728 -> Node0x8c3838;
	Node0x8c3838 -> Node0x8c3948;
	Node0x8c3948 -> Node0x8c3a08;
edge [color=red]
	Node0x8c0f08 -> Node0x8c1128;
	Node0x8c1128 -> Node0x8c1558;
	Node0x8c0f88 -> Node0x8c1638;
	Node0x8c1638 -> Node0x8c1738;
	Node0x8c1018 -> Node0x8c17f8;
	Node0x8c17f8 -> Node0x8c18a8;
	Node0x8c1078 -> Node0x8c1968;
	Node0x8c1968 -> Node0x8c1a18;
	Node0x8c0f08 -> Node0x8bb810;
	Node0x8c0f88 -> Node0x8bb810;
	Node0x8c1018 -> Node0x8bb810;
	Node0x8c1078 -> Node0x8bb810;
	Node0x8c0f08 -> Node0x8c1c18;
	Node0x8c0f88 -> Node0x8c2b88;
	Node0x8c1018 -> Node0x8c31f8;
	Node0x8c1078 -> Node0x8c3258;
	Node0x8c1c18 -> Node0x8c3368;
	Node0x8c2b88 -> Node0x8c3368;
	Node0x8c31f8 -> Node0x8c3368;
	Node0x8c3258 -> Node0x8c3368;
	Node0x8c1968 -> Node0x8c35c8;
	Node0x8c17f8 -> Node0x8c3728;
	Node0x8c1638 -> Node0x8c3838;
	Node0x8c1128 -> Node0x8c3948;
}
