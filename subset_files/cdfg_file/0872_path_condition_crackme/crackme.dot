digraph "DFG for'crackme' function" {
	Node0x8be7e0[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x8bee60[shape=record, label="  %6 = add i32 %5, 1"];
	Node0x8bef00[shape=record, label="  %7 = xor i32 %3, -1"];
	Node0x8befa0[shape=record, label="  %8 = mul i32 %7, 5"];
	Node0x8bf010[shape=record, label="  %9 = add i32 %6, %8"];
	Node0x8bf080[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x8bf0f0[shape=record, label="  %11 = or i32 %10, %1"];
	Node0x8bf160[shape=record, label="  %12 = xor i32 %2, %1"];
	Node0x8bf1d0[shape=record, label="  %13 = and i32 %10, %1"];
	Node0x8bf240[shape=record, label="  %14 = shl i32 %12, 1"];
	Node0x8bf2e0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x8bf350[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x8bf3c0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x8bf430[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x8bf4a0[shape=record, label="  %19 = shl i32 %11, 1"];
	Node0x8bf510[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x8bf580[shape=record, label="  %21 = shl i32 %13, 1"];
	Node0x8bf5f0[shape=record, label="  %22 = and i32 %3, %0"];
	Node0x8bf660[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x8bf6d0[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0x8bf740[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x8bf7b0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x8bf820[shape=record, label="  %27 = or i32 %3, %0"];
	Node0x8bf890[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x8bf900[shape=record, label="  %29 = xor i32 %0, -1"];
	Node0x8bf970[shape=record, label="  %30 = or i32 %29, %3"];
	Node0x8bf9e0[shape=record, label="  %31 = xor i32 %27, -1"];
	Node0x8bfa80[shape=record, label="  %32 = mul i32 %31, 3"];
	Node0x8bfd00[shape=record, label="  %33 = xor i32 %30, -1"];
	Node0x8bfda0[shape=record, label="  %34 = mul i32 %33, 6"];
	Node0x8bfe10[shape=record, label="  %35 = and i32 %29, %3"];
	Node0x8bfeb0[shape=record, label="  %36 = shl i32 %35, 2"];
	Node0x8bff20[shape=record, label="  %37 = shl i32 %0, 1"];
	Node0x8bff90[shape=record, label="  %38 = sub i32 1, %1"];
	Node0x8c0000[shape=record, label="  %39 = add i32 %38, %37"];
	Node0x8c0070[shape=record, label="  %40 = add i32 %39, %10"];
	Node0x8c00e0[shape=record, label="  %41 = sub i32 %40, %11"];
	Node0x8c0150[shape=record, label="  %42 = add i32 %41, %12"];
	Node0x8c01c0[shape=record, label="  %43 = add i32 %42, %13"];
	Node0x8c0230[shape=record, label="  %44 = add i32 %43, %16"];
	Node0x8c02a0[shape=record, label="  %45 = sub i32 %44, %21"];
	Node0x8c0310[shape=record, label="  %46 = add i32 %45, %23"];
	Node0x8c0380[shape=record, label="  %47 = sub i32 %46, %30"];
	Node0x8c03f0[shape=record, label="  %48 = sub i32 %47, %22"];
	Node0x8c0460[shape=record, label="  %49 = add i32 %48, %15"];
	Node0x8c04d0[shape=record, label="  %50 = sub i32 %49, %18"];
	Node0x8c0540[shape=record, label="  %51 = sub i32 %50, %20"];
	Node0x8c05b0[shape=record, label="  %52 = sub i32 %51, %28"];
	Node0x8c0620[shape=record, label="  %53 = sub i32 %52, %25"];
	Node0x8c0690[shape=record, label="  %54 = add i32 %53, %32"];
	Node0x8c0700[shape=record, label="  %55 = add i32 %54, %34"];
	Node0x8c0770[shape=record, label="  %56 = add i32 %55, %36"];
	Node0x8c07e0[shape=record, label="  %57 = add i32 %56, %26"];
	Node0x8c0850[shape=record, label="  %58 = icmp eq i32 %9, %57"];
	Node0x85f268[shape=record, label="  %59 = select i1 %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8c0cf0[shape=record, label="  %60 = tail call i32 @puts(i8* nonnull dereferenceable(1) %59)"];
	Node0x8c0d40[shape=record, label="  ret void"];
	Node0x8be7e0 -> Node0x8bee60;
	Node0x8bee60 -> Node0x8bef00;
	Node0x8bef00 -> Node0x8befa0;
	Node0x8befa0 -> Node0x8bf010;
	Node0x8bf010 -> Node0x8bf080;
	Node0x8bf080 -> Node0x8bf0f0;
	Node0x8bf0f0 -> Node0x8bf160;
	Node0x8bf160 -> Node0x8bf1d0;
	Node0x8bf1d0 -> Node0x8bf240;
	Node0x8bf240 -> Node0x8bf2e0;
	Node0x8bf2e0 -> Node0x8bf350;
	Node0x8bf350 -> Node0x8bf3c0;
	Node0x8bf3c0 -> Node0x8bf430;
	Node0x8bf430 -> Node0x8bf4a0;
	Node0x8bf4a0 -> Node0x8bf510;
	Node0x8bf510 -> Node0x8bf580;
	Node0x8bf580 -> Node0x8bf5f0;
	Node0x8bf5f0 -> Node0x8bf660;
	Node0x8bf660 -> Node0x8bf6d0;
	Node0x8bf6d0 -> Node0x8bf740;
	Node0x8bf740 -> Node0x8bf7b0;
	Node0x8bf7b0 -> Node0x8bf820;
	Node0x8bf820 -> Node0x8bf890;
	Node0x8bf890 -> Node0x8bf900;
	Node0x8bf900 -> Node0x8bf970;
	Node0x8bf970 -> Node0x8bf9e0;
	Node0x8bf9e0 -> Node0x8bfa80;
	Node0x8bfa80 -> Node0x8bfd00;
	Node0x8bfd00 -> Node0x8bfda0;
	Node0x8bfda0 -> Node0x8bfe10;
	Node0x8bfe10 -> Node0x8bfeb0;
	Node0x8bfeb0 -> Node0x8bff20;
	Node0x8bff20 -> Node0x8bff90;
	Node0x8bff90 -> Node0x8c0000;
	Node0x8c0000 -> Node0x8c0070;
	Node0x8c0070 -> Node0x8c00e0;
	Node0x8c00e0 -> Node0x8c0150;
	Node0x8c0150 -> Node0x8c01c0;
	Node0x8c01c0 -> Node0x8c0230;
	Node0x8c0230 -> Node0x8c02a0;
	Node0x8c02a0 -> Node0x8c0310;
	Node0x8c0310 -> Node0x8c0380;
	Node0x8c0380 -> Node0x8c03f0;
	Node0x8c03f0 -> Node0x8c0460;
	Node0x8c0460 -> Node0x8c04d0;
	Node0x8c04d0 -> Node0x8c0540;
	Node0x8c0540 -> Node0x8c05b0;
	Node0x8c05b0 -> Node0x8c0620;
	Node0x8c0620 -> Node0x8c0690;
	Node0x8c0690 -> Node0x8c0700;
	Node0x8c0700 -> Node0x8c0770;
	Node0x8c0770 -> Node0x8c07e0;
	Node0x8c07e0 -> Node0x8c0850;
	Node0x8c0850 -> Node0x85f268;
	Node0x85f268 -> Node0x8c0cf0;
	Node0x8c0cf0 -> Node0x8c0d40;
edge [color=red]
	Node0x8be7e0 -> Node0x8bee60;
	Node0x8bef00 -> Node0x8befa0;
	Node0x8bee60 -> Node0x8bf010;
	Node0x8befa0 -> Node0x8bf010;
	Node0x8bf080 -> Node0x8bf0f0;
	Node0x8bf080 -> Node0x8bf1d0;
	Node0x8bf160 -> Node0x8bf240;
	Node0x8bf240 -> Node0x8bf2e0;
	Node0x8bf350 -> Node0x8bf3c0;
	Node0x8bf3c0 -> Node0x8bf430;
	Node0x8bf0f0 -> Node0x8bf4a0;
	Node0x8bf4a0 -> Node0x8bf510;
	Node0x8bf1d0 -> Node0x8bf580;
	Node0x8bf5f0 -> Node0x8bf660;
	Node0x8bf6d0 -> Node0x8bf740;
	Node0x8bf740 -> Node0x8bf7b0;
	Node0x8bf820 -> Node0x8bf890;
	Node0x8bf900 -> Node0x8bf970;
	Node0x8bf820 -> Node0x8bf9e0;
	Node0x8bf9e0 -> Node0x8bfa80;
	Node0x8bf970 -> Node0x8bfd00;
	Node0x8bfd00 -> Node0x8bfda0;
	Node0x8bf900 -> Node0x8bfe10;
	Node0x8bfe10 -> Node0x8bfeb0;
	Node0x8bff90 -> Node0x8c0000;
	Node0x8bff20 -> Node0x8c0000;
	Node0x8c0000 -> Node0x8c0070;
	Node0x8bf080 -> Node0x8c0070;
	Node0x8c0070 -> Node0x8c00e0;
	Node0x8bf0f0 -> Node0x8c00e0;
	Node0x8c00e0 -> Node0x8c0150;
	Node0x8bf160 -> Node0x8c0150;
	Node0x8c0150 -> Node0x8c01c0;
	Node0x8bf1d0 -> Node0x8c01c0;
	Node0x8c01c0 -> Node0x8c0230;
	Node0x8bf350 -> Node0x8c0230;
	Node0x8c0230 -> Node0x8c02a0;
	Node0x8bf580 -> Node0x8c02a0;
	Node0x8c02a0 -> Node0x8c0310;
	Node0x8bf660 -> Node0x8c0310;
	Node0x8c0310 -> Node0x8c0380;
	Node0x8bf970 -> Node0x8c0380;
	Node0x8c0380 -> Node0x8c03f0;
	Node0x8bf5f0 -> Node0x8c03f0;
	Node0x8c03f0 -> Node0x8c0460;
	Node0x8bf2e0 -> Node0x8c0460;
	Node0x8c0460 -> Node0x8c04d0;
	Node0x8bf430 -> Node0x8c04d0;
	Node0x8c04d0 -> Node0x8c0540;
	Node0x8bf510 -> Node0x8c0540;
	Node0x8c0540 -> Node0x8c05b0;
	Node0x8bf890 -> Node0x8c05b0;
	Node0x8c05b0 -> Node0x8c0620;
	Node0x8bf740 -> Node0x8c0620;
	Node0x8c0620 -> Node0x8c0690;
	Node0x8bfa80 -> Node0x8c0690;
	Node0x8c0690 -> Node0x8c0700;
	Node0x8bfda0 -> Node0x8c0700;
	Node0x8c0700 -> Node0x8c0770;
	Node0x8bfeb0 -> Node0x8c0770;
	Node0x8c0770 -> Node0x8c07e0;
	Node0x8bf7b0 -> Node0x8c07e0;
	Node0x8bf010 -> Node0x8c0850;
	Node0x8c07e0 -> Node0x8c0850;
	Node0x8c0850 -> Node0x85f268;
	Node0x85f268 -> Node0x8c0cf0;
}
