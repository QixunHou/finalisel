digraph "DFG for'main' function" {
	Node0x2045bb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2045c38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2045cc8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x2046128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2046208[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x2046328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2046560[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x2046618[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2047588[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2047c10[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x2047c80[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x2047cf0[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x2047d60[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x2047dd0[shape=record, label="  %12 = and i32 %6, %10"];
	Node0x2047e40[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x2047eb0[shape=record, label="  %14 = xor i32 %6, -1"];
	Node0x2047f20[shape=record, label="  %15 = and i32 %7, %6"];
	Node0x2047f90[shape=record, label="  %16 = shl i32 %11, 1"];
	Node0x2048000[shape=record, label="  %17 = and i32 %7, %14"];
	Node0x2048070[shape=record, label="  %18 = mul i32 %17, -3"];
	Node0x20480e0[shape=record, label="  %19 = shl i32 %15, 1"];
	Node0x2048150[shape=record, label="  %20 = sub i32 1, %6"];
	Node0x20481c0[shape=record, label="  %21 = sub i32 %20, %11"];
	Node0x2048230[shape=record, label="  %22 = add i32 %21, %13"];
	Node0x20482a0[shape=record, label="  %23 = add i32 %22, %15"];
	Node0x2048310[shape=record, label="  %24 = add i32 %23, %8"];
	Node0x2048380[shape=record, label="  %25 = sub i32 %24, %12"];
	Node0x20483f0[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x2048460[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x20484d0[shape=record, label="  %28 = sub i32 %27, %19"];
	Node0x2048540[shape=record, label="  %29 = icmp eq i32 %28, %9"];
	Node0x1fe69d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x20485d0[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x2048828[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2048988[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2048a48[shape=record, label="  ret i32 0"];
	Node0x2045bb8 -> Node0x2045c38;
	Node0x2045c38 -> Node0x2045cc8;
	Node0x2045cc8 -> Node0x2046128;
	Node0x2046128 -> Node0x2046208;
	Node0x2046208 -> Node0x2046328;
	Node0x2046328 -> Node0x2046560;
	Node0x2046560 -> Node0x2046618;
	Node0x2046618 -> Node0x2047588;
	Node0x2047588 -> Node0x2047c10;
	Node0x2047c10 -> Node0x2047c80;
	Node0x2047c80 -> Node0x2047cf0;
	Node0x2047cf0 -> Node0x2047d60;
	Node0x2047d60 -> Node0x2047dd0;
	Node0x2047dd0 -> Node0x2047e40;
	Node0x2047e40 -> Node0x2047eb0;
	Node0x2047eb0 -> Node0x2047f20;
	Node0x2047f20 -> Node0x2047f90;
	Node0x2047f90 -> Node0x2048000;
	Node0x2048000 -> Node0x2048070;
	Node0x2048070 -> Node0x20480e0;
	Node0x20480e0 -> Node0x2048150;
	Node0x2048150 -> Node0x20481c0;
	Node0x20481c0 -> Node0x2048230;
	Node0x2048230 -> Node0x20482a0;
	Node0x20482a0 -> Node0x2048310;
	Node0x2048310 -> Node0x2048380;
	Node0x2048380 -> Node0x20483f0;
	Node0x20483f0 -> Node0x2048460;
	Node0x2048460 -> Node0x20484d0;
	Node0x20484d0 -> Node0x2048540;
	Node0x2048540 -> Node0x1fe69d8;
	Node0x1fe69d8 -> Node0x20485d0;
	Node0x20485d0 -> Node0x2048828;
	Node0x2048828 -> Node0x2048988;
	Node0x2048988 -> Node0x2048a48;
edge [color=red]
	Node0x2045bb8 -> Node0x2045cc8;
	Node0x2045cc8 -> Node0x2046128;
	Node0x2045c38 -> Node0x2046208;
	Node0x2046208 -> Node0x2046328;
	Node0x2045bb8 -> Node0x2046560;
	Node0x2045c38 -> Node0x2046560;
	Node0x2045bb8 -> Node0x2046618;
	Node0x2045c38 -> Node0x2047588;
	Node0x2047588 -> Node0x2047c10;
	Node0x2046618 -> Node0x2047c10;
	Node0x2047c10 -> Node0x2047c80;
	Node0x2047588 -> Node0x2047cf0;
	Node0x2047588 -> Node0x2047d60;
	Node0x2046618 -> Node0x2047d60;
	Node0x2046618 -> Node0x2047dd0;
	Node0x2047cf0 -> Node0x2047dd0;
	Node0x2047dd0 -> Node0x2047e40;
	Node0x2046618 -> Node0x2047eb0;
	Node0x2047588 -> Node0x2047f20;
	Node0x2046618 -> Node0x2047f20;
	Node0x2047d60 -> Node0x2047f90;
	Node0x2047588 -> Node0x2048000;
	Node0x2047eb0 -> Node0x2048000;
	Node0x2048000 -> Node0x2048070;
	Node0x2047f20 -> Node0x20480e0;
	Node0x2046618 -> Node0x2048150;
	Node0x2048150 -> Node0x20481c0;
	Node0x2047d60 -> Node0x20481c0;
	Node0x20481c0 -> Node0x2048230;
	Node0x2047e40 -> Node0x2048230;
	Node0x2048230 -> Node0x20482a0;
	Node0x2047f20 -> Node0x20482a0;
	Node0x20482a0 -> Node0x2048310;
	Node0x2047c10 -> Node0x2048310;
	Node0x2048310 -> Node0x2048380;
	Node0x2047dd0 -> Node0x2048380;
	Node0x2048380 -> Node0x20483f0;
	Node0x2047f90 -> Node0x20483f0;
	Node0x20483f0 -> Node0x2048460;
	Node0x2048070 -> Node0x2048460;
	Node0x2048460 -> Node0x20484d0;
	Node0x20480e0 -> Node0x20484d0;
	Node0x20484d0 -> Node0x2048540;
	Node0x2047c80 -> Node0x2048540;
	Node0x2048540 -> Node0x1fe69d8;
	Node0x1fe69d8 -> Node0x20485d0;
	Node0x2046208 -> Node0x2048828;
	Node0x2045cc8 -> Node0x2048988;
}
