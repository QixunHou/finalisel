digraph "DFG for'main' function" {
	Node0x6b5cb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x6b5d38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x6b5dc8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x6b5e28[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x6b62a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6b6388[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x6b6488[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6bcea8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x6bcf38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6bd198[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x6bd258[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x6be1c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x6be838[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x6be930[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x6beb38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6bec98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6beda8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6bee68[shape=record, label="  ret i32 0"];
	Node0x6b5cb8 -> Node0x6b5d38;
	Node0x6b5d38 -> Node0x6b5dc8;
	Node0x6b5dc8 -> Node0x6b5e28;
	Node0x6b5e28 -> Node0x6b62a8;
	Node0x6b62a8 -> Node0x6b6388;
	Node0x6b6388 -> Node0x6b6488;
	Node0x6b6488 -> Node0x6bcea8;
	Node0x6bcea8 -> Node0x6bcf38;
	Node0x6bcf38 -> Node0x6bd198;
	Node0x6bd198 -> Node0x6bd258;
	Node0x6bd258 -> Node0x6be1c8;
	Node0x6be1c8 -> Node0x6be838;
	Node0x6be838 -> Node0x6be930;
	Node0x6be930 -> Node0x6beb38;
	Node0x6beb38 -> Node0x6bec98;
	Node0x6bec98 -> Node0x6beda8;
	Node0x6beda8 -> Node0x6bee68;
edge [color=red]
	Node0x6b5cb8 -> Node0x6b5e28;
	Node0x6b5e28 -> Node0x6b62a8;
	Node0x6b5d38 -> Node0x6b6388;
	Node0x6b6388 -> Node0x6b6488;
	Node0x6b5dc8 -> Node0x6bcea8;
	Node0x6bcea8 -> Node0x6bcf38;
	Node0x6b5cb8 -> Node0x6bd198;
	Node0x6b5d38 -> Node0x6bd198;
	Node0x6b5dc8 -> Node0x6bd198;
	Node0x6b5cb8 -> Node0x6bd258;
	Node0x6b5d38 -> Node0x6be1c8;
	Node0x6b5dc8 -> Node0x6be838;
	Node0x6bd258 -> Node0x6be930;
	Node0x6be1c8 -> Node0x6be930;
	Node0x6be838 -> Node0x6be930;
	Node0x6bcea8 -> Node0x6beb38;
	Node0x6b6388 -> Node0x6bec98;
	Node0x6b5e28 -> Node0x6beda8;
}
