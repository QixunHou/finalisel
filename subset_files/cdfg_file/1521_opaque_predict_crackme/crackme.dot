digraph "DFG for'crackme' function" {
	Node0x209efa0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x209f010[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x209f080[shape=record, label="  %7 = sub i32 %2, %6"];
	Node0x209f0f0[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x209f160[shape=record, label="  %9 = and i32 %8, %3"];
	Node0x209f1d0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x209f240[shape=record, label="  %11 = add i32 %7, %10"];
	Node0x209f2b0[shape=record, label="  %12 = or i32 %8, %3"];
	Node0x209f320[shape=record, label="  %13 = sub i32 %11, %12"];
	Node0x209f390[shape=record, label="  %14 = or i32 %2, %1"];
	Node0x209f430[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x209f4a0[shape=record, label="  %16 = and i32 %5, %1"];
	Node0x209f510[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x209f580[shape=record, label="  %18 = xor i32 %2, %1"];
	Node0x209f5f0[shape=record, label="  %19 = and i32 %2, %1"];
	Node0x209f660[shape=record, label="  %20 = shl i32 %16, 1"];
	Node0x209f6d0[shape=record, label="  %21 = shl i32 %19, 1"];
	Node0x209f740[shape=record, label="  %22 = shl i32 %12, 1"];
	Node0x209f7e0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x209f850[shape=record, label="  %24 = and i32 %3, %0"];
	Node0x209f8f0[shape=record, label="  %25 = sub i32 3, %0"];
	Node0x209f960[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x209f9d0[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x209fa40[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x209fab0[shape=record, label="  %29 = add i32 %28, %6"];
	Node0x209fb20[shape=record, label="  %30 = add i32 %29, %15"];
	Node0x209fb90[shape=record, label="  %31 = sub i32 %30, %20"];
	Node0x209fc00[shape=record, label="  %32 = sub i32 %31, %21"];
	Node0x209fe80[shape=record, label="  %33 = sub i32 %32, %9"];
	Node0x209fef0[shape=record, label="  %34 = add i32 %33, %24"];
	Node0x209ff60[shape=record, label="  %35 = add i32 %34, %23"];
	Node0x209ffd0[shape=record, label="  %36 = icmp eq i32 %13, %35"];
	Node0x203f268[shape=record, label="  %37 = select i1 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x20a0470[shape=record, label="  %38 = tail call i32 @puts(i8* nonnull dereferenceable(1) %37)"];
	Node0x20a04c0[shape=record, label="  ret void"];
	Node0x209efa0 -> Node0x209f010;
	Node0x209f010 -> Node0x209f080;
	Node0x209f080 -> Node0x209f0f0;
	Node0x209f0f0 -> Node0x209f160;
	Node0x209f160 -> Node0x209f1d0;
	Node0x209f1d0 -> Node0x209f240;
	Node0x209f240 -> Node0x209f2b0;
	Node0x209f2b0 -> Node0x209f320;
	Node0x209f320 -> Node0x209f390;
	Node0x209f390 -> Node0x209f430;
	Node0x209f430 -> Node0x209f4a0;
	Node0x209f4a0 -> Node0x209f510;
	Node0x209f510 -> Node0x209f580;
	Node0x209f580 -> Node0x209f5f0;
	Node0x209f5f0 -> Node0x209f660;
	Node0x209f660 -> Node0x209f6d0;
	Node0x209f6d0 -> Node0x209f740;
	Node0x209f740 -> Node0x209f7e0;
	Node0x209f7e0 -> Node0x209f850;
	Node0x209f850 -> Node0x209f8f0;
	Node0x209f8f0 -> Node0x209f960;
	Node0x209f960 -> Node0x209f9d0;
	Node0x209f9d0 -> Node0x209fa40;
	Node0x209fa40 -> Node0x209fab0;
	Node0x209fab0 -> Node0x209fb20;
	Node0x209fb20 -> Node0x209fb90;
	Node0x209fb90 -> Node0x209fc00;
	Node0x209fc00 -> Node0x209fe80;
	Node0x209fe80 -> Node0x209fef0;
	Node0x209fef0 -> Node0x209ff60;
	Node0x209ff60 -> Node0x209ffd0;
	Node0x209ffd0 -> Node0x203f268;
	Node0x203f268 -> Node0x20a0470;
	Node0x20a0470 -> Node0x20a04c0;
edge [color=red]
	Node0x209efa0 -> Node0x209f010;
	Node0x209f010 -> Node0x209f080;
	Node0x209f0f0 -> Node0x209f160;
	Node0x209f160 -> Node0x209f1d0;
	Node0x209f080 -> Node0x209f240;
	Node0x209f1d0 -> Node0x209f240;
	Node0x209f0f0 -> Node0x209f2b0;
	Node0x209f240 -> Node0x209f320;
	Node0x209f2b0 -> Node0x209f320;
	Node0x209f390 -> Node0x209f430;
	Node0x209efa0 -> Node0x209f4a0;
	Node0x209f4a0 -> Node0x209f510;
	Node0x209f4a0 -> Node0x209f660;
	Node0x209f5f0 -> Node0x209f6d0;
	Node0x209f2b0 -> Node0x209f740;
	Node0x209f740 -> Node0x209f7e0;
	Node0x209f8f0 -> Node0x209f960;
	Node0x209f510 -> Node0x209f960;
	Node0x209f960 -> Node0x209f9d0;
	Node0x209f580 -> Node0x209f9d0;
	Node0x209f9d0 -> Node0x209fa40;
	Node0x209f5f0 -> Node0x209fa40;
	Node0x209fa40 -> Node0x209fab0;
	Node0x209f010 -> Node0x209fab0;
	Node0x209fab0 -> Node0x209fb20;
	Node0x209f430 -> Node0x209fb20;
	Node0x209fb20 -> Node0x209fb90;
	Node0x209f660 -> Node0x209fb90;
	Node0x209fb90 -> Node0x209fc00;
	Node0x209f6d0 -> Node0x209fc00;
	Node0x209fc00 -> Node0x209fe80;
	Node0x209f160 -> Node0x209fe80;
	Node0x209fe80 -> Node0x209fef0;
	Node0x209f850 -> Node0x209fef0;
	Node0x209fef0 -> Node0x209ff60;
	Node0x209f7e0 -> Node0x209ff60;
	Node0x209f320 -> Node0x209ffd0;
	Node0x209ff60 -> Node0x209ffd0;
	Node0x209ffd0 -> Node0x203f268;
	Node0x203f268 -> Node0x20a0470;
}
