digraph "DFG for'main' function" {
	Node0x20a0688[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x20a0708[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x20a0798[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x20a07f8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x20a08a8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x20a0cd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20a0db8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x20a0eb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20a0f78[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x20a1028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20a10e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x20a1198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x209b9c0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x20a1398[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20a2308[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20a2978[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x20a29d8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x20a2a50[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x20a2ac0[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x20a2b30[shape=record, label="  %16 = sub i32 %12, %15"];
	Node0x20a2ba0[shape=record, label="  %17 = xor i32 %10, -1"];
	Node0x20a2c10[shape=record, label="  %18 = and i32 %13, %17"];
	Node0x20a2c80[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x20a2cf0[shape=record, label="  %20 = add i32 %16, %19"];
	Node0x20a2d60[shape=record, label="  %21 = or i32 %13, %17"];
	Node0x20a2dd0[shape=record, label="  %22 = sub i32 %20, %21"];
	Node0x20a2e40[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x20a2eb0[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x20a2f20[shape=record, label="  %25 = and i32 %11, %14"];
	Node0x20a2f90[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x20a3000[shape=record, label="  %27 = xor i32 %12, %11"];
	Node0x20a3070[shape=record, label="  %28 = and i32 %12, %11"];
	Node0x20a30e0[shape=record, label="  %29 = shl i32 %25, 1"];
	Node0x20a3150[shape=record, label="  %30 = shl i32 %28, 1"];
	Node0x20a31c0[shape=record, label="  %31 = shl i32 %21, 1"];
	Node0x20a3230[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0x20a32a0[shape=record, label="  %33 = and i32 %13, %10"];
	Node0x20a3310[shape=record, label="  %34 = sub i32 3, %10"];
	Node0x20a3380[shape=record, label="  %35 = add i32 %34, %26"];
	Node0x20a33f0[shape=record, label="  %36 = add i32 %35, %27"];
	Node0x20a3460[shape=record, label="  %37 = add i32 %36, %28"];
	Node0x20a34d0[shape=record, label="  %38 = add i32 %37, %15"];
	Node0x20a3540[shape=record, label="  %39 = add i32 %38, %24"];
	Node0x20a35b0[shape=record, label="  %40 = sub i32 %39, %29"];
	Node0x20a3620[shape=record, label="  %41 = sub i32 %40, %30"];
	Node0x20a3690[shape=record, label="  %42 = sub i32 %41, %18"];
	Node0x20a3700[shape=record, label="  %43 = add i32 %42, %33"];
	Node0x20a3770[shape=record, label="  %44 = add i32 %43, %32"];
	Node0x20a37e0[shape=record, label="  %45 = icmp eq i32 %22, %44"];
	Node0x20408b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x20a3870[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0x20a3b18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20a3c78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20a3d88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20a3e98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20a3f58[shape=record, label="  ret i32 0"];
	Node0x20a0688 -> Node0x20a0708;
	Node0x20a0708 -> Node0x20a0798;
	Node0x20a0798 -> Node0x20a07f8;
	Node0x20a07f8 -> Node0x20a08a8;
	Node0x20a08a8 -> Node0x20a0cd8;
	Node0x20a0cd8 -> Node0x20a0db8;
	Node0x20a0db8 -> Node0x20a0eb8;
	Node0x20a0eb8 -> Node0x20a0f78;
	Node0x20a0f78 -> Node0x20a1028;
	Node0x20a1028 -> Node0x20a10e8;
	Node0x20a10e8 -> Node0x20a1198;
	Node0x20a1198 -> Node0x209b9c0;
	Node0x209b9c0 -> Node0x20a1398;
	Node0x20a1398 -> Node0x20a2308;
	Node0x20a2308 -> Node0x20a2978;
	Node0x20a2978 -> Node0x20a29d8;
	Node0x20a29d8 -> Node0x20a2a50;
	Node0x20a2a50 -> Node0x20a2ac0;
	Node0x20a2ac0 -> Node0x20a2b30;
	Node0x20a2b30 -> Node0x20a2ba0;
	Node0x20a2ba0 -> Node0x20a2c10;
	Node0x20a2c10 -> Node0x20a2c80;
	Node0x20a2c80 -> Node0x20a2cf0;
	Node0x20a2cf0 -> Node0x20a2d60;
	Node0x20a2d60 -> Node0x20a2dd0;
	Node0x20a2dd0 -> Node0x20a2e40;
	Node0x20a2e40 -> Node0x20a2eb0;
	Node0x20a2eb0 -> Node0x20a2f20;
	Node0x20a2f20 -> Node0x20a2f90;
	Node0x20a2f90 -> Node0x20a3000;
	Node0x20a3000 -> Node0x20a3070;
	Node0x20a3070 -> Node0x20a30e0;
	Node0x20a30e0 -> Node0x20a3150;
	Node0x20a3150 -> Node0x20a31c0;
	Node0x20a31c0 -> Node0x20a3230;
	Node0x20a3230 -> Node0x20a32a0;
	Node0x20a32a0 -> Node0x20a3310;
	Node0x20a3310 -> Node0x20a3380;
	Node0x20a3380 -> Node0x20a33f0;
	Node0x20a33f0 -> Node0x20a3460;
	Node0x20a3460 -> Node0x20a34d0;
	Node0x20a34d0 -> Node0x20a3540;
	Node0x20a3540 -> Node0x20a35b0;
	Node0x20a35b0 -> Node0x20a3620;
	Node0x20a3620 -> Node0x20a3690;
	Node0x20a3690 -> Node0x20a3700;
	Node0x20a3700 -> Node0x20a3770;
	Node0x20a3770 -> Node0x20a37e0;
	Node0x20a37e0 -> Node0x20408b8;
	Node0x20408b8 -> Node0x20a3870;
	Node0x20a3870 -> Node0x20a3b18;
	Node0x20a3b18 -> Node0x20a3c78;
	Node0x20a3c78 -> Node0x20a3d88;
	Node0x20a3d88 -> Node0x20a3e98;
	Node0x20a3e98 -> Node0x20a3f58;
edge [color=red]
	Node0x20a0688 -> Node0x20a08a8;
	Node0x20a08a8 -> Node0x20a0cd8;
	Node0x20a0708 -> Node0x20a0db8;
	Node0x20a0db8 -> Node0x20a0eb8;
	Node0x20a0798 -> Node0x20a0f78;
	Node0x20a0f78 -> Node0x20a1028;
	Node0x20a07f8 -> Node0x20a10e8;
	Node0x20a10e8 -> Node0x20a1198;
	Node0x20a0688 -> Node0x209b9c0;
	Node0x20a0708 -> Node0x209b9c0;
	Node0x20a0798 -> Node0x209b9c0;
	Node0x20a07f8 -> Node0x209b9c0;
	Node0x20a0688 -> Node0x20a1398;
	Node0x20a0708 -> Node0x20a2308;
	Node0x20a0798 -> Node0x20a2978;
	Node0x20a07f8 -> Node0x20a29d8;
	Node0x20a2978 -> Node0x20a2a50;
	Node0x20a2308 -> Node0x20a2ac0;
	Node0x20a2a50 -> Node0x20a2ac0;
	Node0x20a2978 -> Node0x20a2b30;
	Node0x20a2ac0 -> Node0x20a2b30;
	Node0x20a1398 -> Node0x20a2ba0;
	Node0x20a29d8 -> Node0x20a2c10;
	Node0x20a2ba0 -> Node0x20a2c10;
	Node0x20a2c10 -> Node0x20a2c80;
	Node0x20a2b30 -> Node0x20a2cf0;
	Node0x20a2c80 -> Node0x20a2cf0;
	Node0x20a29d8 -> Node0x20a2d60;
	Node0x20a2ba0 -> Node0x20a2d60;
	Node0x20a2cf0 -> Node0x20a2dd0;
	Node0x20a2d60 -> Node0x20a2dd0;
	Node0x20a2978 -> Node0x20a2e40;
	Node0x20a2308 -> Node0x20a2e40;
	Node0x20a2e40 -> Node0x20a2eb0;
	Node0x20a2308 -> Node0x20a2f20;
	Node0x20a2a50 -> Node0x20a2f20;
	Node0x20a2f20 -> Node0x20a2f90;
	Node0x20a2978 -> Node0x20a3000;
	Node0x20a2308 -> Node0x20a3000;
	Node0x20a2978 -> Node0x20a3070;
	Node0x20a2308 -> Node0x20a3070;
	Node0x20a2f20 -> Node0x20a30e0;
	Node0x20a3070 -> Node0x20a3150;
	Node0x20a2d60 -> Node0x20a31c0;
	Node0x20a31c0 -> Node0x20a3230;
	Node0x20a29d8 -> Node0x20a32a0;
	Node0x20a1398 -> Node0x20a32a0;
	Node0x20a1398 -> Node0x20a3310;
	Node0x20a3310 -> Node0x20a3380;
	Node0x20a2f90 -> Node0x20a3380;
	Node0x20a3380 -> Node0x20a33f0;
	Node0x20a3000 -> Node0x20a33f0;
	Node0x20a33f0 -> Node0x20a3460;
	Node0x20a3070 -> Node0x20a3460;
	Node0x20a3460 -> Node0x20a34d0;
	Node0x20a2ac0 -> Node0x20a34d0;
	Node0x20a34d0 -> Node0x20a3540;
	Node0x20a2eb0 -> Node0x20a3540;
	Node0x20a3540 -> Node0x20a35b0;
	Node0x20a30e0 -> Node0x20a35b0;
	Node0x20a35b0 -> Node0x20a3620;
	Node0x20a3150 -> Node0x20a3620;
	Node0x20a3620 -> Node0x20a3690;
	Node0x20a2c10 -> Node0x20a3690;
	Node0x20a3690 -> Node0x20a3700;
	Node0x20a32a0 -> Node0x20a3700;
	Node0x20a3700 -> Node0x20a3770;
	Node0x20a3230 -> Node0x20a3770;
	Node0x20a2dd0 -> Node0x20a37e0;
	Node0x20a3770 -> Node0x20a37e0;
	Node0x20a37e0 -> Node0x20408b8;
	Node0x20408b8 -> Node0x20a3870;
	Node0x20a10e8 -> Node0x20a3b18;
	Node0x20a0f78 -> Node0x20a3c78;
	Node0x20a0db8 -> Node0x20a3d88;
	Node0x20a08a8 -> Node0x20a3e98;
}
