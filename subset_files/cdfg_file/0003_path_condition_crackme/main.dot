digraph "DFG for'main' function" {
	Node0xff6d28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xff6da8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xff6e38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xff7298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xff7378[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xff7498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xff76d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xff7788[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xff86f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xff8d80[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0xff8df0[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0xff8e60[shape=record, label="  %10 = or i32 %7, %6"];
	Node0xff8ed0[shape=record, label="  %11 = xor i32 %8, -1"];
	Node0xff8f40[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0xff8fb0[shape=record, label="  %13 = or i32 %6, %12"];
	Node0xff9020[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0xff9090[shape=record, label="  %15 = shl i32 %13, 2"];
	Node0xff9100[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0xff9170[shape=record, label="  %17 = and i32 %6, %12"];
	Node0xff91e0[shape=record, label="  %18 = shl i32 %17, 2"];
	Node0xff9250[shape=record, label="  %19 = and i32 %7, %6"];
	Node0xff92c0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0xff9330[shape=record, label="  %21 = add i32 %10, %12"];
	Node0xff93a0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0xff9410[shape=record, label="  %23 = add i32 %6, 1"];
	Node0xff9480[shape=record, label="  %24 = add i32 %23, %7"];
	Node0xff94f0[shape=record, label="  %25 = add i32 %24, %11"];
	Node0xff9560[shape=record, label="  %26 = sub i32 %25, %14"];
	Node0xff95d0[shape=record, label="  %27 = sub i32 %26, %18"];
	Node0xff9640[shape=record, label="  %28 = sub i32 %27, %20"];
	Node0xff96b0[shape=record, label="  %29 = sub i32 %28, %16"];
	Node0xff9720[shape=record, label="  %30 = add i32 %29, %22"];
	Node0xff9790[shape=record, label="  %31 = icmp eq i32 %9, %30"];
	Node0xf979d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xff9a30[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0xff9c88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xff9de8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xff9ea8[shape=record, label="  ret i32 0"];
	Node0xff6d28 -> Node0xff6da8;
	Node0xff6da8 -> Node0xff6e38;
	Node0xff6e38 -> Node0xff7298;
	Node0xff7298 -> Node0xff7378;
	Node0xff7378 -> Node0xff7498;
	Node0xff7498 -> Node0xff76d0;
	Node0xff76d0 -> Node0xff7788;
	Node0xff7788 -> Node0xff86f8;
	Node0xff86f8 -> Node0xff8d80;
	Node0xff8d80 -> Node0xff8df0;
	Node0xff8df0 -> Node0xff8e60;
	Node0xff8e60 -> Node0xff8ed0;
	Node0xff8ed0 -> Node0xff8f40;
	Node0xff8f40 -> Node0xff8fb0;
	Node0xff8fb0 -> Node0xff9020;
	Node0xff9020 -> Node0xff9090;
	Node0xff9090 -> Node0xff9100;
	Node0xff9100 -> Node0xff9170;
	Node0xff9170 -> Node0xff91e0;
	Node0xff91e0 -> Node0xff9250;
	Node0xff9250 -> Node0xff92c0;
	Node0xff92c0 -> Node0xff9330;
	Node0xff9330 -> Node0xff93a0;
	Node0xff93a0 -> Node0xff9410;
	Node0xff9410 -> Node0xff9480;
	Node0xff9480 -> Node0xff94f0;
	Node0xff94f0 -> Node0xff9560;
	Node0xff9560 -> Node0xff95d0;
	Node0xff95d0 -> Node0xff9640;
	Node0xff9640 -> Node0xff96b0;
	Node0xff96b0 -> Node0xff9720;
	Node0xff9720 -> Node0xff9790;
	Node0xff9790 -> Node0xf979d8;
	Node0xf979d8 -> Node0xff9a30;
	Node0xff9a30 -> Node0xff9c88;
	Node0xff9c88 -> Node0xff9de8;
	Node0xff9de8 -> Node0xff9ea8;
edge [color=red]
	Node0xff6d28 -> Node0xff6e38;
	Node0xff6e38 -> Node0xff7298;
	Node0xff6da8 -> Node0xff7378;
	Node0xff7378 -> Node0xff7498;
	Node0xff6d28 -> Node0xff76d0;
	Node0xff6da8 -> Node0xff76d0;
	Node0xff6d28 -> Node0xff7788;
	Node0xff6da8 -> Node0xff86f8;
	Node0xff86f8 -> Node0xff8d80;
	Node0xff7788 -> Node0xff8d80;
	Node0xff8d80 -> Node0xff8df0;
	Node0xff86f8 -> Node0xff8e60;
	Node0xff7788 -> Node0xff8e60;
	Node0xff8d80 -> Node0xff8ed0;
	Node0xff86f8 -> Node0xff8f40;
	Node0xff7788 -> Node0xff8fb0;
	Node0xff8f40 -> Node0xff8fb0;
	Node0xff8fb0 -> Node0xff9020;
	Node0xff8fb0 -> Node0xff9090;
	Node0xff9090 -> Node0xff9100;
	Node0xff7788 -> Node0xff9170;
	Node0xff8f40 -> Node0xff9170;
	Node0xff9170 -> Node0xff91e0;
	Node0xff86f8 -> Node0xff9250;
	Node0xff7788 -> Node0xff9250;
	Node0xff9250 -> Node0xff92c0;
	Node0xff8e60 -> Node0xff9330;
	Node0xff8f40 -> Node0xff9330;
	Node0xff9330 -> Node0xff93a0;
	Node0xff7788 -> Node0xff9410;
	Node0xff9410 -> Node0xff9480;
	Node0xff86f8 -> Node0xff9480;
	Node0xff9480 -> Node0xff94f0;
	Node0xff8ed0 -> Node0xff94f0;
	Node0xff94f0 -> Node0xff9560;
	Node0xff9020 -> Node0xff9560;
	Node0xff9560 -> Node0xff95d0;
	Node0xff91e0 -> Node0xff95d0;
	Node0xff95d0 -> Node0xff9640;
	Node0xff92c0 -> Node0xff9640;
	Node0xff9640 -> Node0xff96b0;
	Node0xff9100 -> Node0xff96b0;
	Node0xff96b0 -> Node0xff9720;
	Node0xff93a0 -> Node0xff9720;
	Node0xff8df0 -> Node0xff9790;
	Node0xff9720 -> Node0xff9790;
	Node0xff9790 -> Node0xf979d8;
	Node0xf979d8 -> Node0xff9a30;
	Node0xff7378 -> Node0xff9c88;
	Node0xff6e38 -> Node0xff9de8;
}
