digraph "DFG for'main' function" {
	Node0x83b908[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x83b988[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x83ba18[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x83be78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x83bf58[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x83c078[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x83c2b0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x83c368[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x83d2d8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x83d960[shape=record, label="  %8 = add i32 %7, %6"];
	Node0x83d9d0[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x83da40[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x83dab0[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x83db20[shape=record, label="  %12 = and i32 %6, %10"];
	Node0x83db90[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x83dc00[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x83dc70[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x83dce0[shape=record, label="  %16 = xor i32 %11, -1"];
	Node0x83dd50[shape=record, label="  %17 = and i32 %7, %6"];
	Node0x83ddc0[shape=record, label="  %18 = shl i32 %12, 1"];
	Node0x83de30[shape=record, label="  %19 = add i32 %8, %11"];
	Node0x83dea0[shape=record, label="  %20 = add i32 %19, %13"];
	Node0x83df10[shape=record, label="  %21 = sub i32 %15, %20"];
	Node0x83df80[shape=record, label="  %22 = add i32 %21, %16"];
	Node0x83dff0[shape=record, label="  %23 = add i32 %22, %17"];
	Node0x83e060[shape=record, label="  %24 = add i32 %23, %18"];
	Node0x83e0d0[shape=record, label="  %25 = icmp eq i32 %24, %9"];
	Node0x7dc9d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x83e160[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0x83e3b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x83e518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x83e5d8[shape=record, label="  ret i32 0"];
	Node0x83b908 -> Node0x83b988;
	Node0x83b988 -> Node0x83ba18;
	Node0x83ba18 -> Node0x83be78;
	Node0x83be78 -> Node0x83bf58;
	Node0x83bf58 -> Node0x83c078;
	Node0x83c078 -> Node0x83c2b0;
	Node0x83c2b0 -> Node0x83c368;
	Node0x83c368 -> Node0x83d2d8;
	Node0x83d2d8 -> Node0x83d960;
	Node0x83d960 -> Node0x83d9d0;
	Node0x83d9d0 -> Node0x83da40;
	Node0x83da40 -> Node0x83dab0;
	Node0x83dab0 -> Node0x83db20;
	Node0x83db20 -> Node0x83db90;
	Node0x83db90 -> Node0x83dc00;
	Node0x83dc00 -> Node0x83dc70;
	Node0x83dc70 -> Node0x83dce0;
	Node0x83dce0 -> Node0x83dd50;
	Node0x83dd50 -> Node0x83ddc0;
	Node0x83ddc0 -> Node0x83de30;
	Node0x83de30 -> Node0x83dea0;
	Node0x83dea0 -> Node0x83df10;
	Node0x83df10 -> Node0x83df80;
	Node0x83df80 -> Node0x83dff0;
	Node0x83dff0 -> Node0x83e060;
	Node0x83e060 -> Node0x83e0d0;
	Node0x83e0d0 -> Node0x7dc9d8;
	Node0x7dc9d8 -> Node0x83e160;
	Node0x83e160 -> Node0x83e3b8;
	Node0x83e3b8 -> Node0x83e518;
	Node0x83e518 -> Node0x83e5d8;
edge [color=red]
	Node0x83b908 -> Node0x83ba18;
	Node0x83ba18 -> Node0x83be78;
	Node0x83b988 -> Node0x83bf58;
	Node0x83bf58 -> Node0x83c078;
	Node0x83b908 -> Node0x83c2b0;
	Node0x83b988 -> Node0x83c2b0;
	Node0x83b908 -> Node0x83c368;
	Node0x83b988 -> Node0x83d2d8;
	Node0x83d2d8 -> Node0x83d960;
	Node0x83c368 -> Node0x83d960;
	Node0x83d960 -> Node0x83d9d0;
	Node0x83d2d8 -> Node0x83da40;
	Node0x83c368 -> Node0x83dab0;
	Node0x83da40 -> Node0x83dab0;
	Node0x83c368 -> Node0x83db20;
	Node0x83da40 -> Node0x83db20;
	Node0x83d2d8 -> Node0x83db90;
	Node0x83c368 -> Node0x83db90;
	Node0x83d2d8 -> Node0x83dc00;
	Node0x83c368 -> Node0x83dc00;
	Node0x83dc00 -> Node0x83dc70;
	Node0x83dab0 -> Node0x83dce0;
	Node0x83d2d8 -> Node0x83dd50;
	Node0x83c368 -> Node0x83dd50;
	Node0x83db20 -> Node0x83ddc0;
	Node0x83d960 -> Node0x83de30;
	Node0x83dab0 -> Node0x83de30;
	Node0x83de30 -> Node0x83dea0;
	Node0x83db90 -> Node0x83dea0;
	Node0x83dc70 -> Node0x83df10;
	Node0x83dea0 -> Node0x83df10;
	Node0x83df10 -> Node0x83df80;
	Node0x83dce0 -> Node0x83df80;
	Node0x83df80 -> Node0x83dff0;
	Node0x83dd50 -> Node0x83dff0;
	Node0x83dff0 -> Node0x83e060;
	Node0x83ddc0 -> Node0x83e060;
	Node0x83e060 -> Node0x83e0d0;
	Node0x83d9d0 -> Node0x83e0d0;
	Node0x83e0d0 -> Node0x7dc9d8;
	Node0x7dc9d8 -> Node0x83e160;
	Node0x83bf58 -> Node0x83e3b8;
	Node0x83ba18 -> Node0x83e518;
}
