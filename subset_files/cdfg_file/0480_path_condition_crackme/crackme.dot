digraph "DFG for'crackme' function" {
	Node0x83a420[shape=record, label="  %3 = add i32 %1, %0"];
	Node0x83aad0[shape=record, label="  %4 = sub i32 0, %3"];
	Node0x83ab90[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x83ac00[shape=record, label="  %6 = or i32 %5, %0"];
	Node0x83ac70[shape=record, label="  %7 = and i32 %5, %0"];
	Node0x83ace0[shape=record, label="  %8 = xor i32 %1, %0"];
	Node0x83ad50[shape=record, label="  %9 = or i32 %1, %0"];
	Node0x83adc0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x83ae30[shape=record, label="  %11 = xor i32 %6, -1"];
	Node0x83aea0[shape=record, label="  %12 = and i32 %1, %0"];
	Node0x83af40[shape=record, label="  %13 = shl i32 %7, 1"];
	Node0x83afb0[shape=record, label="  %14 = add i32 %3, %6"];
	Node0x83b020[shape=record, label="  %15 = add i32 %14, %8"];
	Node0x83b090[shape=record, label="  %16 = sub i32 %10, %15"];
	Node0x83b100[shape=record, label="  %17 = add i32 %16, %11"];
	Node0x83b170[shape=record, label="  %18 = add i32 %17, %12"];
	Node0x83b1e0[shape=record, label="  %19 = add i32 %18, %13"];
	Node0x83b250[shape=record, label="  %20 = icmp eq i32 %19, %4"];
	Node0x7db268[shape=record, label="  %21 = select i1 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x83b6f0[shape=record, label="  %22 = tail call i32 @puts(i8* nonnull dereferenceable(1) %21)"];
	Node0x83b740[shape=record, label="  ret void"];
	Node0x83a420 -> Node0x83aad0;
	Node0x83aad0 -> Node0x83ab90;
	Node0x83ab90 -> Node0x83ac00;
	Node0x83ac00 -> Node0x83ac70;
	Node0x83ac70 -> Node0x83ace0;
	Node0x83ace0 -> Node0x83ad50;
	Node0x83ad50 -> Node0x83adc0;
	Node0x83adc0 -> Node0x83ae30;
	Node0x83ae30 -> Node0x83aea0;
	Node0x83aea0 -> Node0x83af40;
	Node0x83af40 -> Node0x83afb0;
	Node0x83afb0 -> Node0x83b020;
	Node0x83b020 -> Node0x83b090;
	Node0x83b090 -> Node0x83b100;
	Node0x83b100 -> Node0x83b170;
	Node0x83b170 -> Node0x83b1e0;
	Node0x83b1e0 -> Node0x83b250;
	Node0x83b250 -> Node0x7db268;
	Node0x7db268 -> Node0x83b6f0;
	Node0x83b6f0 -> Node0x83b740;
edge [color=red]
	Node0x83a420 -> Node0x83aad0;
	Node0x83ab90 -> Node0x83ac00;
	Node0x83ab90 -> Node0x83ac70;
	Node0x83ad50 -> Node0x83adc0;
	Node0x83ac00 -> Node0x83ae30;
	Node0x83ac70 -> Node0x83af40;
	Node0x83a420 -> Node0x83afb0;
	Node0x83ac00 -> Node0x83afb0;
	Node0x83afb0 -> Node0x83b020;
	Node0x83ace0 -> Node0x83b020;
	Node0x83adc0 -> Node0x83b090;
	Node0x83b020 -> Node0x83b090;
	Node0x83b090 -> Node0x83b100;
	Node0x83ae30 -> Node0x83b100;
	Node0x83b100 -> Node0x83b170;
	Node0x83aea0 -> Node0x83b170;
	Node0x83b170 -> Node0x83b1e0;
	Node0x83af40 -> Node0x83b1e0;
	Node0x83b1e0 -> Node0x83b250;
	Node0x83aad0 -> Node0x83b250;
	Node0x83b250 -> Node0x7db268;
	Node0x7db268 -> Node0x83b6f0;
}
