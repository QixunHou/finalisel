digraph "DFG for'main' function" {
	Node0xbbc708[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xbbc788[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xbbc818[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xbbc878[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xbbc928[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xbbcd58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xbbce38[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xbbcf38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xbbcff8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xbbd0a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xbbd168[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xbbd218[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xbb79d0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xbbd418[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xbbe388[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xbbe9f8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xbbea58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xbbead0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0xbbeb40[shape=record, label="  %15 = and i32 %12, %11"];
	Node0xbbebb0[shape=record, label="  %16 = add i32 %14, 1"];
	Node0xbbec20[shape=record, label="  %17 = add i32 %16, %15"];
	Node0xbbec90[shape=record, label="  %18 = xor i32 %10, -1"];
	Node0xbbed00[shape=record, label="  %19 = and i32 %13, %18"];
	Node0xbbed70[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0xbbede0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0xbbee50[shape=record, label="  %22 = add i32 %17, %21"];
	Node0xbbeec0[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0xbbef30[shape=record, label="  %24 = xor i32 %12, -1"];
	Node0xbbefa0[shape=record, label="  %25 = or i32 %11, %24"];
	Node0xbbf010[shape=record, label="  %26 = mul i32 %25, -3"];
	Node0xbbf080[shape=record, label="  %27 = and i32 %11, %24"];
	Node0xbbf0f0[shape=record, label="  %28 = or i32 %13, %18"];
	Node0xbbf160[shape=record, label="  %29 = or i32 %13, %10"];
	Node0xbbf1d0[shape=record, label="  %30 = xor i32 %29, -1"];
	Node0xbbf240[shape=record, label="  %31 = and i32 %13, %10"];
	Node0xbbf2b0[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0xbbf320[shape=record, label="  %33 = sub i32 %10, %23"];
	Node0xbbf390[shape=record, label="  %34 = add i32 %33, %27"];
	Node0xbbf400[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0xbbf470[shape=record, label="  %36 = add i32 %11, -2"];
	Node0xbbf4e0[shape=record, label="  %37 = add i32 %36, %15"];
	Node0xbbf550[shape=record, label="  %38 = add i32 %37, %13"];
	Node0xbbf5c0[shape=record, label="  %39 = add i32 %38, %26"];
	Node0xbbf630[shape=record, label="  %40 = add i32 %39, %28"];
	Node0xbbf6a0[shape=record, label="  %41 = add i32 %40, %30"];
	Node0xbbf710[shape=record, label="  %42 = sub i32 %41, %20"];
	Node0xbbf780[shape=record, label="  %43 = sub i32 %42, %32"];
	Node0xbbf7f0[shape=record, label="  %44 = add i32 %43, %35"];
	Node0xbbf860[shape=record, label="  %45 = icmp eq i32 %22, %44"];
	Node0xb5c8b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xbbf8f0[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0xbbfb98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xbbfcf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xbbfe08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xbbff18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xbbffd8[shape=record, label="  ret i32 0"];
	Node0xbbc708 -> Node0xbbc788;
	Node0xbbc788 -> Node0xbbc818;
	Node0xbbc818 -> Node0xbbc878;
	Node0xbbc878 -> Node0xbbc928;
	Node0xbbc928 -> Node0xbbcd58;
	Node0xbbcd58 -> Node0xbbce38;
	Node0xbbce38 -> Node0xbbcf38;
	Node0xbbcf38 -> Node0xbbcff8;
	Node0xbbcff8 -> Node0xbbd0a8;
	Node0xbbd0a8 -> Node0xbbd168;
	Node0xbbd168 -> Node0xbbd218;
	Node0xbbd218 -> Node0xbb79d0;
	Node0xbb79d0 -> Node0xbbd418;
	Node0xbbd418 -> Node0xbbe388;
	Node0xbbe388 -> Node0xbbe9f8;
	Node0xbbe9f8 -> Node0xbbea58;
	Node0xbbea58 -> Node0xbbead0;
	Node0xbbead0 -> Node0xbbeb40;
	Node0xbbeb40 -> Node0xbbebb0;
	Node0xbbebb0 -> Node0xbbec20;
	Node0xbbec20 -> Node0xbbec90;
	Node0xbbec90 -> Node0xbbed00;
	Node0xbbed00 -> Node0xbbed70;
	Node0xbbed70 -> Node0xbbede0;
	Node0xbbede0 -> Node0xbbee50;
	Node0xbbee50 -> Node0xbbeec0;
	Node0xbbeec0 -> Node0xbbef30;
	Node0xbbef30 -> Node0xbbefa0;
	Node0xbbefa0 -> Node0xbbf010;
	Node0xbbf010 -> Node0xbbf080;
	Node0xbbf080 -> Node0xbbf0f0;
	Node0xbbf0f0 -> Node0xbbf160;
	Node0xbbf160 -> Node0xbbf1d0;
	Node0xbbf1d0 -> Node0xbbf240;
	Node0xbbf240 -> Node0xbbf2b0;
	Node0xbbf2b0 -> Node0xbbf320;
	Node0xbbf320 -> Node0xbbf390;
	Node0xbbf390 -> Node0xbbf400;
	Node0xbbf400 -> Node0xbbf470;
	Node0xbbf470 -> Node0xbbf4e0;
	Node0xbbf4e0 -> Node0xbbf550;
	Node0xbbf550 -> Node0xbbf5c0;
	Node0xbbf5c0 -> Node0xbbf630;
	Node0xbbf630 -> Node0xbbf6a0;
	Node0xbbf6a0 -> Node0xbbf710;
	Node0xbbf710 -> Node0xbbf780;
	Node0xbbf780 -> Node0xbbf7f0;
	Node0xbbf7f0 -> Node0xbbf860;
	Node0xbbf860 -> Node0xb5c8b8;
	Node0xb5c8b8 -> Node0xbbf8f0;
	Node0xbbf8f0 -> Node0xbbfb98;
	Node0xbbfb98 -> Node0xbbfcf8;
	Node0xbbfcf8 -> Node0xbbfe08;
	Node0xbbfe08 -> Node0xbbff18;
	Node0xbbff18 -> Node0xbbffd8;
edge [color=red]
	Node0xbbc708 -> Node0xbbc928;
	Node0xbbc928 -> Node0xbbcd58;
	Node0xbbc788 -> Node0xbbce38;
	Node0xbbce38 -> Node0xbbcf38;
	Node0xbbc818 -> Node0xbbcff8;
	Node0xbbcff8 -> Node0xbbd0a8;
	Node0xbbc878 -> Node0xbbd168;
	Node0xbbd168 -> Node0xbbd218;
	Node0xbbc708 -> Node0xbb79d0;
	Node0xbbc788 -> Node0xbb79d0;
	Node0xbbc818 -> Node0xbb79d0;
	Node0xbbc878 -> Node0xbb79d0;
	Node0xbbc708 -> Node0xbbd418;
	Node0xbbc788 -> Node0xbbe388;
	Node0xbbc818 -> Node0xbbe9f8;
	Node0xbbc878 -> Node0xbbea58;
	Node0xbbe9f8 -> Node0xbbead0;
	Node0xbbe388 -> Node0xbbead0;
	Node0xbbe9f8 -> Node0xbbeb40;
	Node0xbbe388 -> Node0xbbeb40;
	Node0xbbead0 -> Node0xbbebb0;
	Node0xbbebb0 -> Node0xbbec20;
	Node0xbbeb40 -> Node0xbbec20;
	Node0xbbd418 -> Node0xbbec90;
	Node0xbbea58 -> Node0xbbed00;
	Node0xbbec90 -> Node0xbbed00;
	Node0xbbed00 -> Node0xbbed70;
	Node0xbbed70 -> Node0xbbede0;
	Node0xbbec20 -> Node0xbbee50;
	Node0xbbede0 -> Node0xbbee50;
	Node0xbbe9f8 -> Node0xbbeec0;
	Node0xbbe388 -> Node0xbbeec0;
	Node0xbbe9f8 -> Node0xbbef30;
	Node0xbbe388 -> Node0xbbefa0;
	Node0xbbef30 -> Node0xbbefa0;
	Node0xbbefa0 -> Node0xbbf010;
	Node0xbbe388 -> Node0xbbf080;
	Node0xbbef30 -> Node0xbbf080;
	Node0xbbea58 -> Node0xbbf0f0;
	Node0xbbec90 -> Node0xbbf0f0;
	Node0xbbea58 -> Node0xbbf160;
	Node0xbbd418 -> Node0xbbf160;
	Node0xbbf160 -> Node0xbbf1d0;
	Node0xbbea58 -> Node0xbbf240;
	Node0xbbd418 -> Node0xbbf240;
	Node0xbbf240 -> Node0xbbf2b0;
	Node0xbbd418 -> Node0xbbf320;
	Node0xbbeec0 -> Node0xbbf320;
	Node0xbbf320 -> Node0xbbf390;
	Node0xbbf080 -> Node0xbbf390;
	Node0xbbf390 -> Node0xbbf400;
	Node0xbbe388 -> Node0xbbf470;
	Node0xbbf470 -> Node0xbbf4e0;
	Node0xbbeb40 -> Node0xbbf4e0;
	Node0xbbf4e0 -> Node0xbbf550;
	Node0xbbea58 -> Node0xbbf550;
	Node0xbbf550 -> Node0xbbf5c0;
	Node0xbbf010 -> Node0xbbf5c0;
	Node0xbbf5c0 -> Node0xbbf630;
	Node0xbbf0f0 -> Node0xbbf630;
	Node0xbbf630 -> Node0xbbf6a0;
	Node0xbbf1d0 -> Node0xbbf6a0;
	Node0xbbf6a0 -> Node0xbbf710;
	Node0xbbed70 -> Node0xbbf710;
	Node0xbbf710 -> Node0xbbf780;
	Node0xbbf2b0 -> Node0xbbf780;
	Node0xbbf780 -> Node0xbbf7f0;
	Node0xbbf400 -> Node0xbbf7f0;
	Node0xbbee50 -> Node0xbbf860;
	Node0xbbf7f0 -> Node0xbbf860;
	Node0xbbf860 -> Node0xb5c8b8;
	Node0xb5c8b8 -> Node0xbbf8f0;
	Node0xbbd168 -> Node0xbbfb98;
	Node0xbbcff8 -> Node0xbbfcf8;
	Node0xbbce38 -> Node0xbbfe08;
	Node0xbbc928 -> Node0xbbff18;
}
