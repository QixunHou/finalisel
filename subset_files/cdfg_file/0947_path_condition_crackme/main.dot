digraph "DFG for'main' function" {
	Node0x91d098[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x91d118[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x91d1a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x91d208[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x91d688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x91d768[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x91d868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x91d928[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x91d9d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x91dc38[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x91dcf8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x91de58[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x91deb8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x923190[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x923398[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9234f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x923608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9236c8[shape=record, label="  ret i32 0"];
	Node0x91d098 -> Node0x91d118;
	Node0x91d118 -> Node0x91d1a8;
	Node0x91d1a8 -> Node0x91d208;
	Node0x91d208 -> Node0x91d688;
	Node0x91d688 -> Node0x91d768;
	Node0x91d768 -> Node0x91d868;
	Node0x91d868 -> Node0x91d928;
	Node0x91d928 -> Node0x91d9d8;
	Node0x91d9d8 -> Node0x91dc38;
	Node0x91dc38 -> Node0x91dcf8;
	Node0x91dcf8 -> Node0x91de58;
	Node0x91de58 -> Node0x91deb8;
	Node0x91deb8 -> Node0x923190;
	Node0x923190 -> Node0x923398;
	Node0x923398 -> Node0x9234f8;
	Node0x9234f8 -> Node0x923608;
	Node0x923608 -> Node0x9236c8;
edge [color=red]
	Node0x91d098 -> Node0x91d208;
	Node0x91d208 -> Node0x91d688;
	Node0x91d118 -> Node0x91d768;
	Node0x91d768 -> Node0x91d868;
	Node0x91d1a8 -> Node0x91d928;
	Node0x91d928 -> Node0x91d9d8;
	Node0x91d098 -> Node0x91dc38;
	Node0x91d118 -> Node0x91dc38;
	Node0x91d1a8 -> Node0x91dc38;
	Node0x91d098 -> Node0x91dcf8;
	Node0x91d118 -> Node0x91de58;
	Node0x91d1a8 -> Node0x91deb8;
	Node0x91dcf8 -> Node0x923190;
	Node0x91de58 -> Node0x923190;
	Node0x91deb8 -> Node0x923190;
	Node0x91d928 -> Node0x923398;
	Node0x91d768 -> Node0x9234f8;
	Node0x91d208 -> Node0x923608;
}
