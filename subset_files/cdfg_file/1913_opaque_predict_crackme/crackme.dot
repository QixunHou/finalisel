digraph "DFG for'crackme' function" {
	Node0x19d9040[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x19d90b0[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x19d9150[shape=record, label="  %7 = mul i32 %6, -5"];
	Node0x19d91f0[shape=record, label="  %8 = shl i32 %3, 1"];
	Node0x19d9290[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x19d9300[shape=record, label="  %10 = sub i32 %7, %9"];
	Node0x19d9370[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x19d93e0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x19d9450[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x19d94c0[shape=record, label="  %14 = xor i32 %6, -1"];
	Node0x19d9560[shape=record, label="  %15 = mul i32 %14, 5"];
	Node0x19d95d0[shape=record, label="  %16 = xor i32 %0, -1"];
	Node0x19d9640[shape=record, label="  %17 = or i32 %16, %3"];
	Node0x19d96b0[shape=record, label="  %18 = and i32 %16, %3"];
	Node0x19d9720[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x19d9790[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x19d9800[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x19d9870[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x19d98e0[shape=record, label="  %23 = add i32 %0, 1"];
	Node0x19d9950[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0x19d99f0[shape=record, label="  %25 = shl i32 %18, 2"];
	Node0x19d9a60[shape=record, label="  %26 = and i32 %3, %0"];
	Node0x19d9b00[shape=record, label="  %27 = mul i32 %26, 3"];
	Node0x19d9b70[shape=record, label="  %28 = add i32 %23, %0"];
	Node0x19d9be0[shape=record, label="  %29 = add i32 %28, 1"];
	Node0x19d9c50[shape=record, label="  %30 = sub i32 %29, %3"];
	Node0x19d9cc0[shape=record, label="  %31 = sub i32 %30, %12"];
	Node0x19d9d30[shape=record, label="  %32 = add i32 %31, %15"];
	Node0x19d9fb0[shape=record, label="  %33 = sub i32 %32, %17"];
	Node0x19da020[shape=record, label="  %34 = sub i32 %33, %24"];
	Node0x19da090[shape=record, label="  %35 = sub i32 %34, %13"];
	Node0x19da100[shape=record, label="  %36 = sub i32 %35, %22"];
	Node0x19da170[shape=record, label="  %37 = add i32 %36, %25"];
	Node0x19da1e0[shape=record, label="  %38 = add i32 %37, %27"];
	Node0x19da250[shape=record, label="  %39 = sub i32 %38, %20"];
	Node0x19da2c0[shape=record, label="  %40 = icmp eq i32 %10, %39"];
	Node0x1979268[shape=record, label="  %41 = select i1 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x19da760[shape=record, label="  %42 = tail call i32 @puts(i8* nonnull dereferenceable(1) %41)"];
	Node0x19da7b0[shape=record, label="  ret void"];
	Node0x19d9040 -> Node0x19d90b0;
	Node0x19d90b0 -> Node0x19d9150;
	Node0x19d9150 -> Node0x19d91f0;
	Node0x19d91f0 -> Node0x19d9290;
	Node0x19d9290 -> Node0x19d9300;
	Node0x19d9300 -> Node0x19d9370;
	Node0x19d9370 -> Node0x19d93e0;
	Node0x19d93e0 -> Node0x19d9450;
	Node0x19d9450 -> Node0x19d94c0;
	Node0x19d94c0 -> Node0x19d9560;
	Node0x19d9560 -> Node0x19d95d0;
	Node0x19d95d0 -> Node0x19d9640;
	Node0x19d9640 -> Node0x19d96b0;
	Node0x19d96b0 -> Node0x19d9720;
	Node0x19d9720 -> Node0x19d9790;
	Node0x19d9790 -> Node0x19d9800;
	Node0x19d9800 -> Node0x19d9870;
	Node0x19d9870 -> Node0x19d98e0;
	Node0x19d98e0 -> Node0x19d9950;
	Node0x19d9950 -> Node0x19d99f0;
	Node0x19d99f0 -> Node0x19d9a60;
	Node0x19d9a60 -> Node0x19d9b00;
	Node0x19d9b00 -> Node0x19d9b70;
	Node0x19d9b70 -> Node0x19d9be0;
	Node0x19d9be0 -> Node0x19d9c50;
	Node0x19d9c50 -> Node0x19d9cc0;
	Node0x19d9cc0 -> Node0x19d9d30;
	Node0x19d9d30 -> Node0x19d9fb0;
	Node0x19d9fb0 -> Node0x19da020;
	Node0x19da020 -> Node0x19da090;
	Node0x19da090 -> Node0x19da100;
	Node0x19da100 -> Node0x19da170;
	Node0x19da170 -> Node0x19da1e0;
	Node0x19da1e0 -> Node0x19da250;
	Node0x19da250 -> Node0x19da2c0;
	Node0x19da2c0 -> Node0x1979268;
	Node0x1979268 -> Node0x19da760;
	Node0x19da760 -> Node0x19da7b0;
edge [color=red]
	Node0x19d9040 -> Node0x19d90b0;
	Node0x19d90b0 -> Node0x19d9150;
	Node0x19d91f0 -> Node0x19d9290;
	Node0x19d9150 -> Node0x19d9300;
	Node0x19d9290 -> Node0x19d9300;
	Node0x19d9370 -> Node0x19d93e0;
	Node0x19d93e0 -> Node0x19d9450;
	Node0x19d90b0 -> Node0x19d94c0;
	Node0x19d94c0 -> Node0x19d9560;
	Node0x19d95d0 -> Node0x19d9640;
	Node0x19d95d0 -> Node0x19d96b0;
	Node0x19d96b0 -> Node0x19d9720;
	Node0x19d9720 -> Node0x19d9790;
	Node0x19d9800 -> Node0x19d9870;
	Node0x19d96b0 -> Node0x19d99f0;
	Node0x19d9a60 -> Node0x19d9b00;
	Node0x19d98e0 -> Node0x19d9b70;
	Node0x19d9b70 -> Node0x19d9be0;
	Node0x19d9be0 -> Node0x19d9c50;
	Node0x19d9c50 -> Node0x19d9cc0;
	Node0x19d93e0 -> Node0x19d9cc0;
	Node0x19d9cc0 -> Node0x19d9d30;
	Node0x19d9560 -> Node0x19d9d30;
	Node0x19d9d30 -> Node0x19d9fb0;
	Node0x19d9640 -> Node0x19d9fb0;
	Node0x19d9fb0 -> Node0x19da020;
	Node0x19d9950 -> Node0x19da020;
	Node0x19da020 -> Node0x19da090;
	Node0x19d9450 -> Node0x19da090;
	Node0x19da090 -> Node0x19da100;
	Node0x19d9870 -> Node0x19da100;
	Node0x19da100 -> Node0x19da170;
	Node0x19d99f0 -> Node0x19da170;
	Node0x19da170 -> Node0x19da1e0;
	Node0x19d9b00 -> Node0x19da1e0;
	Node0x19da1e0 -> Node0x19da250;
	Node0x19d9790 -> Node0x19da250;
	Node0x19d9300 -> Node0x19da2c0;
	Node0x19da250 -> Node0x19da2c0;
	Node0x19da2c0 -> Node0x1979268;
	Node0x1979268 -> Node0x19da760;
}
