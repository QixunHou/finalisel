digraph "DFG for'main' function" {
	Node0x9a8dc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x9a8e48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x9a8ed8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x9a9338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x9a9418[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x9a9538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9a9770[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x9a9828[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x9aa798[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x9aae20[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x9aae90[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x9aaf00[shape=record, label="  %10 = sub i32 %9, %7"];
	Node0x9aaf70[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x9aafe0[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x9ab050[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x9ab0c0[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x9ab130[shape=record, label="  %15 = xor i32 %6, -1"];
	Node0x9ab1a0[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x9ab210[shape=record, label="  %17 = shl i32 %14, 1"];
	Node0x9ab280[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x9ab2f0[shape=record, label="  %19 = xor i32 %16, -1"];
	Node0x9ab360[shape=record, label="  %20 = and i32 %7, %15"];
	Node0x9ab3d0[shape=record, label="  %21 = shl i32 %8, 2"];
	Node0x9ab440[shape=record, label="  %22 = add i32 %20, %19"];
	Node0x9ab4b0[shape=record, label="  %23 = mul i32 %22, -3"];
	Node0x9ab520[shape=record, label="  %24 = sub i32 %11, %6"];
	Node0x9ab590[shape=record, label="  %25 = add i32 %24, %13"];
	Node0x9ab600[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x9ab670[shape=record, label="  %27 = add i32 %26, %16"];
	Node0x9ab6e0[shape=record, label="  %28 = sub i32 %27, %12"];
	Node0x9ab750[shape=record, label="  %29 = sub i32 %28, %21"];
	Node0x9ab7c0[shape=record, label="  %30 = add i32 %29, %18"];
	Node0x9ab830[shape=record, label="  %31 = add i32 %30, %23"];
	Node0x9ab8a0[shape=record, label="  %32 = icmp eq i32 %10, %31"];
	Node0x9499d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x9abb40[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x9abd98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9abef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x9abfb8[shape=record, label="  ret i32 0"];
	Node0x9a8dc8 -> Node0x9a8e48;
	Node0x9a8e48 -> Node0x9a8ed8;
	Node0x9a8ed8 -> Node0x9a9338;
	Node0x9a9338 -> Node0x9a9418;
	Node0x9a9418 -> Node0x9a9538;
	Node0x9a9538 -> Node0x9a9770;
	Node0x9a9770 -> Node0x9a9828;
	Node0x9a9828 -> Node0x9aa798;
	Node0x9aa798 -> Node0x9aae20;
	Node0x9aae20 -> Node0x9aae90;
	Node0x9aae90 -> Node0x9aaf00;
	Node0x9aaf00 -> Node0x9aaf70;
	Node0x9aaf70 -> Node0x9aafe0;
	Node0x9aafe0 -> Node0x9ab050;
	Node0x9ab050 -> Node0x9ab0c0;
	Node0x9ab0c0 -> Node0x9ab130;
	Node0x9ab130 -> Node0x9ab1a0;
	Node0x9ab1a0 -> Node0x9ab210;
	Node0x9ab210 -> Node0x9ab280;
	Node0x9ab280 -> Node0x9ab2f0;
	Node0x9ab2f0 -> Node0x9ab360;
	Node0x9ab360 -> Node0x9ab3d0;
	Node0x9ab3d0 -> Node0x9ab440;
	Node0x9ab440 -> Node0x9ab4b0;
	Node0x9ab4b0 -> Node0x9ab520;
	Node0x9ab520 -> Node0x9ab590;
	Node0x9ab590 -> Node0x9ab600;
	Node0x9ab600 -> Node0x9ab670;
	Node0x9ab670 -> Node0x9ab6e0;
	Node0x9ab6e0 -> Node0x9ab750;
	Node0x9ab750 -> Node0x9ab7c0;
	Node0x9ab7c0 -> Node0x9ab830;
	Node0x9ab830 -> Node0x9ab8a0;
	Node0x9ab8a0 -> Node0x9499d8;
	Node0x9499d8 -> Node0x9abb40;
	Node0x9abb40 -> Node0x9abd98;
	Node0x9abd98 -> Node0x9abef8;
	Node0x9abef8 -> Node0x9abfb8;
edge [color=red]
	Node0x9a8dc8 -> Node0x9a8ed8;
	Node0x9a8ed8 -> Node0x9a9338;
	Node0x9a8e48 -> Node0x9a9418;
	Node0x9a9418 -> Node0x9a9538;
	Node0x9a8dc8 -> Node0x9a9770;
	Node0x9a8e48 -> Node0x9a9770;
	Node0x9a8dc8 -> Node0x9a9828;
	Node0x9a8e48 -> Node0x9aa798;
	Node0x9aa798 -> Node0x9aae20;
	Node0x9a9828 -> Node0x9aae20;
	Node0x9aae20 -> Node0x9aae90;
	Node0x9aae90 -> Node0x9aaf00;
	Node0x9aa798 -> Node0x9aaf00;
	Node0x9aa798 -> Node0x9aaf70;
	Node0x9a9828 -> Node0x9aafe0;
	Node0x9aaf70 -> Node0x9aafe0;
	Node0x9aafe0 -> Node0x9ab050;
	Node0x9aa798 -> Node0x9ab0c0;
	Node0x9a9828 -> Node0x9ab0c0;
	Node0x9a9828 -> Node0x9ab130;
	Node0x9aa798 -> Node0x9ab1a0;
	Node0x9a9828 -> Node0x9ab1a0;
	Node0x9ab0c0 -> Node0x9ab210;
	Node0x9ab210 -> Node0x9ab280;
	Node0x9ab1a0 -> Node0x9ab2f0;
	Node0x9aa798 -> Node0x9ab360;
	Node0x9ab130 -> Node0x9ab360;
	Node0x9aae20 -> Node0x9ab3d0;
	Node0x9ab360 -> Node0x9ab440;
	Node0x9ab2f0 -> Node0x9ab440;
	Node0x9ab440 -> Node0x9ab4b0;
	Node0x9aaf70 -> Node0x9ab520;
	Node0x9a9828 -> Node0x9ab520;
	Node0x9ab520 -> Node0x9ab590;
	Node0x9ab050 -> Node0x9ab590;
	Node0x9ab590 -> Node0x9ab600;
	Node0x9ab0c0 -> Node0x9ab600;
	Node0x9ab600 -> Node0x9ab670;
	Node0x9ab1a0 -> Node0x9ab670;
	Node0x9ab670 -> Node0x9ab6e0;
	Node0x9aafe0 -> Node0x9ab6e0;
	Node0x9ab6e0 -> Node0x9ab750;
	Node0x9ab3d0 -> Node0x9ab750;
	Node0x9ab750 -> Node0x9ab7c0;
	Node0x9ab280 -> Node0x9ab7c0;
	Node0x9ab7c0 -> Node0x9ab830;
	Node0x9ab4b0 -> Node0x9ab830;
	Node0x9aaf00 -> Node0x9ab8a0;
	Node0x9ab830 -> Node0x9ab8a0;
	Node0x9ab8a0 -> Node0x9499d8;
	Node0x9499d8 -> Node0x9abb40;
	Node0x9a9418 -> Node0x9abd98;
	Node0x9a8ed8 -> Node0x9abef8;
}
