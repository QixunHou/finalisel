digraph "DFG for'main' function" {
	Node0x22255e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2225668[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x22256f8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2225758[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2225bd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2225cb8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x2225db8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2225e78[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2225f28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2226188[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x2226248[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x22263a8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2226408[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x22288f0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x2228af8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2228c58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2228d68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2228e28[shape=record, label="  ret i32 0"];
	Node0x22255e8 -> Node0x2225668;
	Node0x2225668 -> Node0x22256f8;
	Node0x22256f8 -> Node0x2225758;
	Node0x2225758 -> Node0x2225bd8;
	Node0x2225bd8 -> Node0x2225cb8;
	Node0x2225cb8 -> Node0x2225db8;
	Node0x2225db8 -> Node0x2225e78;
	Node0x2225e78 -> Node0x2225f28;
	Node0x2225f28 -> Node0x2226188;
	Node0x2226188 -> Node0x2226248;
	Node0x2226248 -> Node0x22263a8;
	Node0x22263a8 -> Node0x2226408;
	Node0x2226408 -> Node0x22288f0;
	Node0x22288f0 -> Node0x2228af8;
	Node0x2228af8 -> Node0x2228c58;
	Node0x2228c58 -> Node0x2228d68;
	Node0x2228d68 -> Node0x2228e28;
edge [color=red]
	Node0x22255e8 -> Node0x2225758;
	Node0x2225758 -> Node0x2225bd8;
	Node0x2225668 -> Node0x2225cb8;
	Node0x2225cb8 -> Node0x2225db8;
	Node0x22256f8 -> Node0x2225e78;
	Node0x2225e78 -> Node0x2225f28;
	Node0x22255e8 -> Node0x2226188;
	Node0x2225668 -> Node0x2226188;
	Node0x22256f8 -> Node0x2226188;
	Node0x22255e8 -> Node0x2226248;
	Node0x2225668 -> Node0x22263a8;
	Node0x22256f8 -> Node0x2226408;
	Node0x2226248 -> Node0x22288f0;
	Node0x22263a8 -> Node0x22288f0;
	Node0x2226408 -> Node0x22288f0;
	Node0x2225e78 -> Node0x2228af8;
	Node0x2225cb8 -> Node0x2228c58;
	Node0x2225758 -> Node0x2228d68;
}
