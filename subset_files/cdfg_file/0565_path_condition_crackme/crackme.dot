digraph "DFG for'crackme' function" {
	Node0x23101e0[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x2310250[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x23102c0[shape=record, label="  %7 = and i32 %6, %3"];
	Node0x2310360[shape=record, label="  %8 = add i32 %7, 2"];
	Node0x23103d0[shape=record, label="  %9 = or i32 %6, %3"];
	Node0x2310440[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0x23104b0[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x2310520[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x23105c0[shape=record, label="  %13 = mul i32 %12, -4"];
	Node0x2310630[shape=record, label="  %14 = xor i32 %2, -1"];
	Node0x23106a0[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x2310710[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x2310780[shape=record, label="  %17 = and i32 %14, %1"];
	Node0x2310820[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x23108c0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x2310930[shape=record, label="  %20 = or i32 %14, %1"];
	Node0x23109a0[shape=record, label="  %21 = or i32 %2, %1"];
	Node0x2310a10[shape=record, label="  %22 = xor i32 %20, -1"];
	Node0x2310ab0[shape=record, label="  %23 = mul i32 %22, -9"];
	Node0x2310b20[shape=record, label="  %24 = or i32 %3, %0"];
	Node0x2310b90[shape=record, label="  %25 = xor i32 %3, %0"];
	Node0x2310c00[shape=record, label="  %26 = xor i32 %24, -1"];
	Node0x2310c70[shape=record, label="  %27 = shl i32 %7, 1"];
	Node0x2310ce0[shape=record, label="  %28 = and i32 %3, %0"];
	Node0x2310d80[shape=record, label="  %29 = mul i32 %28, -3"];
	Node0x2310df0[shape=record, label="  %30 = add i32 %17, %26"];
	Node0x2310e90[shape=record, label="  %31 = mul i32 %30, -5"];
	Node0x2310f00[shape=record, label="  %32 = add i32 %21, %11"];
	Node0x2311180[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x23111f0[shape=record, label="  %34 = sub i32 -2, %0"];
	Node0x2311260[shape=record, label="  %35 = add i32 %34, %5"];
	Node0x23112d0[shape=record, label="  %36 = add i32 %35, %16"];
	Node0x2311340[shape=record, label="  %37 = sub i32 %36, %20"];
	Node0x23113b0[shape=record, label="  %38 = add i32 %37, %13"];
	Node0x2311420[shape=record, label="  %39 = add i32 %38, %23"];
	Node0x2311490[shape=record, label="  %40 = sub i32 %39, %24"];
	Node0x2311500[shape=record, label="  %41 = sub i32 %40, %25"];
	Node0x2311570[shape=record, label="  %42 = add i32 %41, %9"];
	Node0x23115e0[shape=record, label="  %43 = add i32 %42, %19"];
	Node0x2311650[shape=record, label="  %44 = sub i32 %43, %27"];
	Node0x23116c0[shape=record, label="  %45 = add i32 %44, %29"];
	Node0x2311730[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x23117a0[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x2311810[shape=record, label="  %48 = icmp eq i32 %10, %47"];
	Node0x22b0268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2311cb0[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x2311d00[shape=record, label="  ret void"];
	Node0x23101e0 -> Node0x2310250;
	Node0x2310250 -> Node0x23102c0;
	Node0x23102c0 -> Node0x2310360;
	Node0x2310360 -> Node0x23103d0;
	Node0x23103d0 -> Node0x2310440;
	Node0x2310440 -> Node0x23104b0;
	Node0x23104b0 -> Node0x2310520;
	Node0x2310520 -> Node0x23105c0;
	Node0x23105c0 -> Node0x2310630;
	Node0x2310630 -> Node0x23106a0;
	Node0x23106a0 -> Node0x2310710;
	Node0x2310710 -> Node0x2310780;
	Node0x2310780 -> Node0x2310820;
	Node0x2310820 -> Node0x23108c0;
	Node0x23108c0 -> Node0x2310930;
	Node0x2310930 -> Node0x23109a0;
	Node0x23109a0 -> Node0x2310a10;
	Node0x2310a10 -> Node0x2310ab0;
	Node0x2310ab0 -> Node0x2310b20;
	Node0x2310b20 -> Node0x2310b90;
	Node0x2310b90 -> Node0x2310c00;
	Node0x2310c00 -> Node0x2310c70;
	Node0x2310c70 -> Node0x2310ce0;
	Node0x2310ce0 -> Node0x2310d80;
	Node0x2310d80 -> Node0x2310df0;
	Node0x2310df0 -> Node0x2310e90;
	Node0x2310e90 -> Node0x2310f00;
	Node0x2310f00 -> Node0x2311180;
	Node0x2311180 -> Node0x23111f0;
	Node0x23111f0 -> Node0x2311260;
	Node0x2311260 -> Node0x23112d0;
	Node0x23112d0 -> Node0x2311340;
	Node0x2311340 -> Node0x23113b0;
	Node0x23113b0 -> Node0x2311420;
	Node0x2311420 -> Node0x2311490;
	Node0x2311490 -> Node0x2311500;
	Node0x2311500 -> Node0x2311570;
	Node0x2311570 -> Node0x23115e0;
	Node0x23115e0 -> Node0x2311650;
	Node0x2311650 -> Node0x23116c0;
	Node0x23116c0 -> Node0x2311730;
	Node0x2311730 -> Node0x23117a0;
	Node0x23117a0 -> Node0x2311810;
	Node0x2311810 -> Node0x22b0268;
	Node0x22b0268 -> Node0x2311cb0;
	Node0x2311cb0 -> Node0x2311d00;
edge [color=red]
	Node0x2310250 -> Node0x23102c0;
	Node0x23102c0 -> Node0x2310360;
	Node0x2310250 -> Node0x23103d0;
	Node0x2310360 -> Node0x2310440;
	Node0x23103d0 -> Node0x2310440;
	Node0x23104b0 -> Node0x2310520;
	Node0x2310520 -> Node0x23105c0;
	Node0x23106a0 -> Node0x2310710;
	Node0x2310630 -> Node0x2310780;
	Node0x2310780 -> Node0x2310820;
	Node0x2310820 -> Node0x23108c0;
	Node0x2310630 -> Node0x2310930;
	Node0x2310930 -> Node0x2310a10;
	Node0x2310a10 -> Node0x2310ab0;
	Node0x2310b20 -> Node0x2310c00;
	Node0x23102c0 -> Node0x2310c70;
	Node0x2310ce0 -> Node0x2310d80;
	Node0x2310780 -> Node0x2310df0;
	Node0x2310c00 -> Node0x2310df0;
	Node0x2310df0 -> Node0x2310e90;
	Node0x23109a0 -> Node0x2310f00;
	Node0x23104b0 -> Node0x2310f00;
	Node0x2310f00 -> Node0x2311180;
	Node0x23111f0 -> Node0x2311260;
	Node0x23101e0 -> Node0x2311260;
	Node0x2311260 -> Node0x23112d0;
	Node0x2310710 -> Node0x23112d0;
	Node0x23112d0 -> Node0x2311340;
	Node0x2310930 -> Node0x2311340;
	Node0x2311340 -> Node0x23113b0;
	Node0x23105c0 -> Node0x23113b0;
	Node0x23113b0 -> Node0x2311420;
	Node0x2310ab0 -> Node0x2311420;
	Node0x2311420 -> Node0x2311490;
	Node0x2310b20 -> Node0x2311490;
	Node0x2311490 -> Node0x2311500;
	Node0x2310b90 -> Node0x2311500;
	Node0x2311500 -> Node0x2311570;
	Node0x23103d0 -> Node0x2311570;
	Node0x2311570 -> Node0x23115e0;
	Node0x23108c0 -> Node0x23115e0;
	Node0x23115e0 -> Node0x2311650;
	Node0x2310c70 -> Node0x2311650;
	Node0x2311650 -> Node0x23116c0;
	Node0x2310d80 -> Node0x23116c0;
	Node0x23116c0 -> Node0x2311730;
	Node0x2311180 -> Node0x2311730;
	Node0x2311730 -> Node0x23117a0;
	Node0x2310e90 -> Node0x23117a0;
	Node0x2310440 -> Node0x2311810;
	Node0x23117a0 -> Node0x2311810;
	Node0x2311810 -> Node0x22b0268;
	Node0x22b0268 -> Node0x2311cb0;
}
