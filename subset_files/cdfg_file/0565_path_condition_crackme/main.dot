digraph "DFG for'main' function" {
	Node0x2311ec8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2311f48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2311fd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2312038[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x23120e8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x2312518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23125f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x23126f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23127b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x2312868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2312928[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x23129d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x230cc00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x2312bd8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2313b48[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23141b8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2314218[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x2314290[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x2314300[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x2314370[shape=record, label="  %16 = and i32 %13, %15"];
	Node0x23143e0[shape=record, label="  %17 = add i32 %16, 2"];
	Node0x2314450[shape=record, label="  %18 = or i32 %13, %15"];
	Node0x23144c0[shape=record, label="  %19 = sub i32 %17, %18"];
	Node0x2314530[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x23145a0[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x2314610[shape=record, label="  %22 = mul i32 %21, -4"];
	Node0x2314680[shape=record, label="  %23 = xor i32 %12, -1"];
	Node0x23146f0[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x2314760[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x23147d0[shape=record, label="  %26 = and i32 %11, %23"];
	Node0x2314840[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x23148b0[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x2314920[shape=record, label="  %29 = or i32 %11, %23"];
	Node0x2314990[shape=record, label="  %30 = or i32 %12, %11"];
	Node0x2314a00[shape=record, label="  %31 = xor i32 %29, -1"];
	Node0x2314a70[shape=record, label="  %32 = mul i32 %31, -9"];
	Node0x2314ae0[shape=record, label="  %33 = or i32 %13, %10"];
	Node0x2314b50[shape=record, label="  %34 = xor i32 %13, %10"];
	Node0x2314bc0[shape=record, label="  %35 = xor i32 %33, -1"];
	Node0x2314c30[shape=record, label="  %36 = shl i32 %16, 1"];
	Node0x2314ca0[shape=record, label="  %37 = and i32 %13, %10"];
	Node0x2314d10[shape=record, label="  %38 = mul i32 %37, -3"];
	Node0x2314d80[shape=record, label="  %39 = add i32 %26, %35"];
	Node0x2314df0[shape=record, label="  %40 = mul i32 %39, -5"];
	Node0x2314e60[shape=record, label="  %41 = add i32 %30, %20"];
	Node0x2314ed0[shape=record, label="  %42 = shl i32 %41, 1"];
	Node0x2314f40[shape=record, label="  %43 = sub i32 -2, %10"];
	Node0x2314fb0[shape=record, label="  %44 = add i32 %43, %14"];
	Node0x2315020[shape=record, label="  %45 = add i32 %44, %25"];
	Node0x2315090[shape=record, label="  %46 = sub i32 %45, %29"];
	Node0x2315100[shape=record, label="  %47 = add i32 %46, %22"];
	Node0x2315170[shape=record, label="  %48 = add i32 %47, %32"];
	Node0x23151e0[shape=record, label="  %49 = sub i32 %48, %33"];
	Node0x2315250[shape=record, label="  %50 = sub i32 %49, %34"];
	Node0x23152c0[shape=record, label="  %51 = add i32 %50, %18"];
	Node0x2315330[shape=record, label="  %52 = add i32 %51, %28"];
	Node0x23153a0[shape=record, label="  %53 = sub i32 %52, %36"];
	Node0x2315410[shape=record, label="  %54 = add i32 %53, %38"];
	Node0x2315480[shape=record, label="  %55 = add i32 %54, %42"];
	Node0x23154f0[shape=record, label="  %56 = add i32 %55, %40"];
	Node0x2315560[shape=record, label="  %57 = icmp eq i32 %19, %56"];
	Node0x22b18b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23155f0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0x2315898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x23159f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2315b08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2315c18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2315cd8[shape=record, label="  ret i32 0"];
	Node0x2311ec8 -> Node0x2311f48;
	Node0x2311f48 -> Node0x2311fd8;
	Node0x2311fd8 -> Node0x2312038;
	Node0x2312038 -> Node0x23120e8;
	Node0x23120e8 -> Node0x2312518;
	Node0x2312518 -> Node0x23125f8;
	Node0x23125f8 -> Node0x23126f8;
	Node0x23126f8 -> Node0x23127b8;
	Node0x23127b8 -> Node0x2312868;
	Node0x2312868 -> Node0x2312928;
	Node0x2312928 -> Node0x23129d8;
	Node0x23129d8 -> Node0x230cc00;
	Node0x230cc00 -> Node0x2312bd8;
	Node0x2312bd8 -> Node0x2313b48;
	Node0x2313b48 -> Node0x23141b8;
	Node0x23141b8 -> Node0x2314218;
	Node0x2314218 -> Node0x2314290;
	Node0x2314290 -> Node0x2314300;
	Node0x2314300 -> Node0x2314370;
	Node0x2314370 -> Node0x23143e0;
	Node0x23143e0 -> Node0x2314450;
	Node0x2314450 -> Node0x23144c0;
	Node0x23144c0 -> Node0x2314530;
	Node0x2314530 -> Node0x23145a0;
	Node0x23145a0 -> Node0x2314610;
	Node0x2314610 -> Node0x2314680;
	Node0x2314680 -> Node0x23146f0;
	Node0x23146f0 -> Node0x2314760;
	Node0x2314760 -> Node0x23147d0;
	Node0x23147d0 -> Node0x2314840;
	Node0x2314840 -> Node0x23148b0;
	Node0x23148b0 -> Node0x2314920;
	Node0x2314920 -> Node0x2314990;
	Node0x2314990 -> Node0x2314a00;
	Node0x2314a00 -> Node0x2314a70;
	Node0x2314a70 -> Node0x2314ae0;
	Node0x2314ae0 -> Node0x2314b50;
	Node0x2314b50 -> Node0x2314bc0;
	Node0x2314bc0 -> Node0x2314c30;
	Node0x2314c30 -> Node0x2314ca0;
	Node0x2314ca0 -> Node0x2314d10;
	Node0x2314d10 -> Node0x2314d80;
	Node0x2314d80 -> Node0x2314df0;
	Node0x2314df0 -> Node0x2314e60;
	Node0x2314e60 -> Node0x2314ed0;
	Node0x2314ed0 -> Node0x2314f40;
	Node0x2314f40 -> Node0x2314fb0;
	Node0x2314fb0 -> Node0x2315020;
	Node0x2315020 -> Node0x2315090;
	Node0x2315090 -> Node0x2315100;
	Node0x2315100 -> Node0x2315170;
	Node0x2315170 -> Node0x23151e0;
	Node0x23151e0 -> Node0x2315250;
	Node0x2315250 -> Node0x23152c0;
	Node0x23152c0 -> Node0x2315330;
	Node0x2315330 -> Node0x23153a0;
	Node0x23153a0 -> Node0x2315410;
	Node0x2315410 -> Node0x2315480;
	Node0x2315480 -> Node0x23154f0;
	Node0x23154f0 -> Node0x2315560;
	Node0x2315560 -> Node0x22b18b8;
	Node0x22b18b8 -> Node0x23155f0;
	Node0x23155f0 -> Node0x2315898;
	Node0x2315898 -> Node0x23159f8;
	Node0x23159f8 -> Node0x2315b08;
	Node0x2315b08 -> Node0x2315c18;
	Node0x2315c18 -> Node0x2315cd8;
edge [color=red]
	Node0x2311ec8 -> Node0x23120e8;
	Node0x23120e8 -> Node0x2312518;
	Node0x2311f48 -> Node0x23125f8;
	Node0x23125f8 -> Node0x23126f8;
	Node0x2311fd8 -> Node0x23127b8;
	Node0x23127b8 -> Node0x2312868;
	Node0x2312038 -> Node0x2312928;
	Node0x2312928 -> Node0x23129d8;
	Node0x2311ec8 -> Node0x230cc00;
	Node0x2311f48 -> Node0x230cc00;
	Node0x2311fd8 -> Node0x230cc00;
	Node0x2312038 -> Node0x230cc00;
	Node0x2311ec8 -> Node0x2312bd8;
	Node0x2311f48 -> Node0x2313b48;
	Node0x2311fd8 -> Node0x23141b8;
	Node0x2312038 -> Node0x2314218;
	Node0x2313b48 -> Node0x2314290;
	Node0x2312bd8 -> Node0x2314300;
	Node0x2314218 -> Node0x2314370;
	Node0x2314300 -> Node0x2314370;
	Node0x2314370 -> Node0x23143e0;
	Node0x2314218 -> Node0x2314450;
	Node0x2314300 -> Node0x2314450;
	Node0x23143e0 -> Node0x23144c0;
	Node0x2314450 -> Node0x23144c0;
	Node0x23141b8 -> Node0x2314530;
	Node0x2313b48 -> Node0x2314530;
	Node0x2314530 -> Node0x23145a0;
	Node0x23145a0 -> Node0x2314610;
	Node0x23141b8 -> Node0x2314680;
	Node0x23141b8 -> Node0x23146f0;
	Node0x2313b48 -> Node0x23146f0;
	Node0x23146f0 -> Node0x2314760;
	Node0x2313b48 -> Node0x23147d0;
	Node0x2314680 -> Node0x23147d0;
	Node0x23147d0 -> Node0x2314840;
	Node0x2314840 -> Node0x23148b0;
	Node0x2313b48 -> Node0x2314920;
	Node0x2314680 -> Node0x2314920;
	Node0x23141b8 -> Node0x2314990;
	Node0x2313b48 -> Node0x2314990;
	Node0x2314920 -> Node0x2314a00;
	Node0x2314a00 -> Node0x2314a70;
	Node0x2314218 -> Node0x2314ae0;
	Node0x2312bd8 -> Node0x2314ae0;
	Node0x2314218 -> Node0x2314b50;
	Node0x2312bd8 -> Node0x2314b50;
	Node0x2314ae0 -> Node0x2314bc0;
	Node0x2314370 -> Node0x2314c30;
	Node0x2314218 -> Node0x2314ca0;
	Node0x2312bd8 -> Node0x2314ca0;
	Node0x2314ca0 -> Node0x2314d10;
	Node0x23147d0 -> Node0x2314d80;
	Node0x2314bc0 -> Node0x2314d80;
	Node0x2314d80 -> Node0x2314df0;
	Node0x2314990 -> Node0x2314e60;
	Node0x2314530 -> Node0x2314e60;
	Node0x2314e60 -> Node0x2314ed0;
	Node0x2312bd8 -> Node0x2314f40;
	Node0x2314f40 -> Node0x2314fb0;
	Node0x2314290 -> Node0x2314fb0;
	Node0x2314fb0 -> Node0x2315020;
	Node0x2314760 -> Node0x2315020;
	Node0x2315020 -> Node0x2315090;
	Node0x2314920 -> Node0x2315090;
	Node0x2315090 -> Node0x2315100;
	Node0x2314610 -> Node0x2315100;
	Node0x2315100 -> Node0x2315170;
	Node0x2314a70 -> Node0x2315170;
	Node0x2315170 -> Node0x23151e0;
	Node0x2314ae0 -> Node0x23151e0;
	Node0x23151e0 -> Node0x2315250;
	Node0x2314b50 -> Node0x2315250;
	Node0x2315250 -> Node0x23152c0;
	Node0x2314450 -> Node0x23152c0;
	Node0x23152c0 -> Node0x2315330;
	Node0x23148b0 -> Node0x2315330;
	Node0x2315330 -> Node0x23153a0;
	Node0x2314c30 -> Node0x23153a0;
	Node0x23153a0 -> Node0x2315410;
	Node0x2314d10 -> Node0x2315410;
	Node0x2315410 -> Node0x2315480;
	Node0x2314ed0 -> Node0x2315480;
	Node0x2315480 -> Node0x23154f0;
	Node0x2314df0 -> Node0x23154f0;
	Node0x23144c0 -> Node0x2315560;
	Node0x23154f0 -> Node0x2315560;
	Node0x2315560 -> Node0x22b18b8;
	Node0x22b18b8 -> Node0x23155f0;
	Node0x2312928 -> Node0x2315898;
	Node0x23127b8 -> Node0x23159f8;
	Node0x23125f8 -> Node0x2315b08;
	Node0x23120e8 -> Node0x2315c18;
}
