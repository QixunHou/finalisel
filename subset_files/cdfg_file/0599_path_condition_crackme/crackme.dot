digraph "DFG for'crackme' function" {
	Node0x591770[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x591df0[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x591e90[shape=record, label="  %7 = shl i32 %1, 1"];
	Node0x591f00[shape=record, label="  %8 = sub i32 %6, %7"];
	Node0x591f70[shape=record, label="  %9 = and i32 %3, %0"];
	Node0x591fe0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x592080[shape=record, label="  %11 = mul i32 %10, 3"];
	Node0x5920f0[shape=record, label="  %12 = add i32 %8, %11"];
	Node0x592160[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0x5921d0[shape=record, label="  %14 = xor i32 %1, -1"];
	Node0x592240[shape=record, label="  %15 = or i32 %14, %2"];
	Node0x5922b0[shape=record, label="  %16 = shl i32 %5, 1"];
	Node0x592320[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x592390[shape=record, label="  %18 = or i32 %2, %1"];
	Node0x592400[shape=record, label="  %19 = or i32 %13, %1"];
	Node0x592470[shape=record, label="  %20 = shl i32 %18, 1"];
	Node0x592510[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x592580[shape=record, label="  %22 = xor i32 %19, -1"];
	Node0x5925f0[shape=record, label="  %23 = xor i32 %3, %0"];
	Node0x592660[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x592700[shape=record, label="  %25 = mul i32 %24, -3"];
	Node0x592770[shape=record, label="  %26 = xor i32 %0, -1"];
	Node0x5927e0[shape=record, label="  %27 = or i32 %26, %3"];
	Node0x592850[shape=record, label="  %28 = xor i32 %3, -1"];
	Node0x5928c0[shape=record, label="  %29 = or i32 %3, %0"];
	Node0x592930[shape=record, label="  %30 = and i32 %26, %3"];
	Node0x5929a0[shape=record, label="  %31 = xor i32 %29, -1"];
	Node0x592a10[shape=record, label="  %32 = shl i32 %27, 1"];
	Node0x592c90[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x592d30[shape=record, label="  %34 = shl i32 %30, 2"];
	Node0x592da0[shape=record, label="  %35 = add i32 %9, %31"];
	Node0x592e40[shape=record, label="  %36 = mul i32 %35, 5"];
	Node0x592eb0[shape=record, label="  %37 = sub i32 %14, %0"];
	Node0x592f20[shape=record, label="  %38 = sub i32 %37, %15"];
	Node0x592f90[shape=record, label="  %39 = add i32 %38, %18"];
	Node0x593000[shape=record, label="  %40 = sub i32 %39, %19"];
	Node0x593070[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x5930e0[shape=record, label="  %42 = add i32 %41, %28"];
	Node0x593150[shape=record, label="  %43 = add i32 %42, %17"];
	Node0x5931c0[shape=record, label="  %44 = sub i32 %43, %27"];
	Node0x593230[shape=record, label="  %45 = sub i32 %44, %29"];
	Node0x5932a0[shape=record, label="  %46 = add i32 %45, %23"];
	Node0x593310[shape=record, label="  %47 = sub i32 %46, %30"];
	Node0x593380[shape=record, label="  %48 = add i32 %47, %21"];
	Node0x5933f0[shape=record, label="  %49 = add i32 %48, %25"];
	Node0x593460[shape=record, label="  %50 = add i32 %49, %34"];
	Node0x5934d0[shape=record, label="  %51 = add i32 %50, %33"];
	Node0x593540[shape=record, label="  %52 = add i32 %51, %36"];
	Node0x5935b0[shape=record, label="  %53 = icmp eq i32 %12, %52"];
	Node0x532268[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x593a50[shape=record, label="  %55 = tail call i32 @puts(i8* nonnull dereferenceable(1) %54)"];
	Node0x593aa0[shape=record, label="  ret void"];
	Node0x591770 -> Node0x591df0;
	Node0x591df0 -> Node0x591e90;
	Node0x591e90 -> Node0x591f00;
	Node0x591f00 -> Node0x591f70;
	Node0x591f70 -> Node0x591fe0;
	Node0x591fe0 -> Node0x592080;
	Node0x592080 -> Node0x5920f0;
	Node0x5920f0 -> Node0x592160;
	Node0x592160 -> Node0x5921d0;
	Node0x5921d0 -> Node0x592240;
	Node0x592240 -> Node0x5922b0;
	Node0x5922b0 -> Node0x592320;
	Node0x592320 -> Node0x592390;
	Node0x592390 -> Node0x592400;
	Node0x592400 -> Node0x592470;
	Node0x592470 -> Node0x592510;
	Node0x592510 -> Node0x592580;
	Node0x592580 -> Node0x5925f0;
	Node0x5925f0 -> Node0x592660;
	Node0x592660 -> Node0x592700;
	Node0x592700 -> Node0x592770;
	Node0x592770 -> Node0x5927e0;
	Node0x5927e0 -> Node0x592850;
	Node0x592850 -> Node0x5928c0;
	Node0x5928c0 -> Node0x592930;
	Node0x592930 -> Node0x5929a0;
	Node0x5929a0 -> Node0x592a10;
	Node0x592a10 -> Node0x592c90;
	Node0x592c90 -> Node0x592d30;
	Node0x592d30 -> Node0x592da0;
	Node0x592da0 -> Node0x592e40;
	Node0x592e40 -> Node0x592eb0;
	Node0x592eb0 -> Node0x592f20;
	Node0x592f20 -> Node0x592f90;
	Node0x592f90 -> Node0x593000;
	Node0x593000 -> Node0x593070;
	Node0x593070 -> Node0x5930e0;
	Node0x5930e0 -> Node0x593150;
	Node0x593150 -> Node0x5931c0;
	Node0x5931c0 -> Node0x593230;
	Node0x593230 -> Node0x5932a0;
	Node0x5932a0 -> Node0x593310;
	Node0x593310 -> Node0x593380;
	Node0x593380 -> Node0x5933f0;
	Node0x5933f0 -> Node0x593460;
	Node0x593460 -> Node0x5934d0;
	Node0x5934d0 -> Node0x593540;
	Node0x593540 -> Node0x5935b0;
	Node0x5935b0 -> Node0x532268;
	Node0x532268 -> Node0x593a50;
	Node0x593a50 -> Node0x593aa0;
edge [color=red]
	Node0x591770 -> Node0x591df0;
	Node0x591df0 -> Node0x591f00;
	Node0x591e90 -> Node0x591f00;
	Node0x591f70 -> Node0x591fe0;
	Node0x591fe0 -> Node0x592080;
	Node0x591f00 -> Node0x5920f0;
	Node0x592080 -> Node0x5920f0;
	Node0x5921d0 -> Node0x592240;
	Node0x591770 -> Node0x5922b0;
	Node0x5922b0 -> Node0x592320;
	Node0x592160 -> Node0x592400;
	Node0x592390 -> Node0x592470;
	Node0x592470 -> Node0x592510;
	Node0x592400 -> Node0x592580;
	Node0x5925f0 -> Node0x592660;
	Node0x592660 -> Node0x592700;
	Node0x592770 -> Node0x5927e0;
	Node0x592770 -> Node0x592930;
	Node0x5928c0 -> Node0x5929a0;
	Node0x5927e0 -> Node0x592a10;
	Node0x592a10 -> Node0x592c90;
	Node0x592930 -> Node0x592d30;
	Node0x591f70 -> Node0x592da0;
	Node0x5929a0 -> Node0x592da0;
	Node0x592da0 -> Node0x592e40;
	Node0x5921d0 -> Node0x592eb0;
	Node0x592eb0 -> Node0x592f20;
	Node0x592240 -> Node0x592f20;
	Node0x592f20 -> Node0x592f90;
	Node0x592390 -> Node0x592f90;
	Node0x592f90 -> Node0x593000;
	Node0x592400 -> Node0x593000;
	Node0x593000 -> Node0x593070;
	Node0x592580 -> Node0x593070;
	Node0x593070 -> Node0x5930e0;
	Node0x592850 -> Node0x5930e0;
	Node0x5930e0 -> Node0x593150;
	Node0x592320 -> Node0x593150;
	Node0x593150 -> Node0x5931c0;
	Node0x5927e0 -> Node0x5931c0;
	Node0x5931c0 -> Node0x593230;
	Node0x5928c0 -> Node0x593230;
	Node0x593230 -> Node0x5932a0;
	Node0x5925f0 -> Node0x5932a0;
	Node0x5932a0 -> Node0x593310;
	Node0x592930 -> Node0x593310;
	Node0x593310 -> Node0x593380;
	Node0x592510 -> Node0x593380;
	Node0x593380 -> Node0x5933f0;
	Node0x592700 -> Node0x5933f0;
	Node0x5933f0 -> Node0x593460;
	Node0x592d30 -> Node0x593460;
	Node0x593460 -> Node0x5934d0;
	Node0x592c90 -> Node0x5934d0;
	Node0x5934d0 -> Node0x593540;
	Node0x592e40 -> Node0x593540;
	Node0x5920f0 -> Node0x5935b0;
	Node0x593540 -> Node0x5935b0;
	Node0x5935b0 -> Node0x532268;
	Node0x532268 -> Node0x593a50;
}
