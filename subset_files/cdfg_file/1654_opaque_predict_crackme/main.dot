digraph "DFG for'main' function" {
	Node0x1424808[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1424888[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1424918[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1424978[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1424df8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1424ed8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1424fd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1425098[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1425148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14253a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1425468[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14255c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1425628[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14284b0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x14286b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1428818[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1428928[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14289e8[shape=record, label="  ret i32 0"];
	Node0x1424808 -> Node0x1424888;
	Node0x1424888 -> Node0x1424918;
	Node0x1424918 -> Node0x1424978;
	Node0x1424978 -> Node0x1424df8;
	Node0x1424df8 -> Node0x1424ed8;
	Node0x1424ed8 -> Node0x1424fd8;
	Node0x1424fd8 -> Node0x1425098;
	Node0x1425098 -> Node0x1425148;
	Node0x1425148 -> Node0x14253a8;
	Node0x14253a8 -> Node0x1425468;
	Node0x1425468 -> Node0x14255c8;
	Node0x14255c8 -> Node0x1425628;
	Node0x1425628 -> Node0x14284b0;
	Node0x14284b0 -> Node0x14286b8;
	Node0x14286b8 -> Node0x1428818;
	Node0x1428818 -> Node0x1428928;
	Node0x1428928 -> Node0x14289e8;
edge [color=red]
	Node0x1424808 -> Node0x1424978;
	Node0x1424978 -> Node0x1424df8;
	Node0x1424888 -> Node0x1424ed8;
	Node0x1424ed8 -> Node0x1424fd8;
	Node0x1424918 -> Node0x1425098;
	Node0x1425098 -> Node0x1425148;
	Node0x1424808 -> Node0x14253a8;
	Node0x1424888 -> Node0x14253a8;
	Node0x1424918 -> Node0x14253a8;
	Node0x1424808 -> Node0x1425468;
	Node0x1424888 -> Node0x14255c8;
	Node0x1424918 -> Node0x1425628;
	Node0x1425468 -> Node0x14284b0;
	Node0x14255c8 -> Node0x14284b0;
	Node0x1425628 -> Node0x14284b0;
	Node0x1425098 -> Node0x14286b8;
	Node0x1424ed8 -> Node0x1428818;
	Node0x1424978 -> Node0x1428928;
}
