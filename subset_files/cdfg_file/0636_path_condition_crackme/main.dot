digraph "DFG for'main' function" {
	Node0x1523ad8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1523b58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1523be8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1524048[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1524128[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1524248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1524480[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1524538[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x15254a8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1525b30[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x1525ba0[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1525c10[shape=record, label="  %10 = mul i32 %9, 3"];
	Node0x1525c80[shape=record, label="  %11 = shl i32 %6, 1"];
	Node0x1525cf0[shape=record, label="  %12 = or i32 %11, 1"];
	Node0x1525d60[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x1525dd0[shape=record, label="  %14 = xor i32 %6, %13"];
	Node0x1525e40[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x1525eb0[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0x1525f20[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x1525f90[shape=record, label="  %18 = and i32 %6, %13"];
	Node0x1526000[shape=record, label="  %19 = mul i32 %8, -6"];
	Node0x1526070[shape=record, label="  %20 = add i32 %7, 1"];
	Node0x15260e0[shape=record, label="  %21 = add i32 %20, %14"];
	Node0x1526150[shape=record, label="  %22 = add i32 %21, %12"];
	Node0x15261c0[shape=record, label="  %23 = sub i32 %22, %18"];
	Node0x1526230[shape=record, label="  %24 = add i32 %23, %16"];
	Node0x15262a0[shape=record, label="  %25 = add i32 %24, %19"];
	Node0x1526310[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x1526380[shape=record, label="  %27 = icmp eq i32 %10, %26"];
	Node0x14c49d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1526410[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0x1526668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x15267c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1526888[shape=record, label="  ret i32 0"];
	Node0x1523ad8 -> Node0x1523b58;
	Node0x1523b58 -> Node0x1523be8;
	Node0x1523be8 -> Node0x1524048;
	Node0x1524048 -> Node0x1524128;
	Node0x1524128 -> Node0x1524248;
	Node0x1524248 -> Node0x1524480;
	Node0x1524480 -> Node0x1524538;
	Node0x1524538 -> Node0x15254a8;
	Node0x15254a8 -> Node0x1525b30;
	Node0x1525b30 -> Node0x1525ba0;
	Node0x1525ba0 -> Node0x1525c10;
	Node0x1525c10 -> Node0x1525c80;
	Node0x1525c80 -> Node0x1525cf0;
	Node0x1525cf0 -> Node0x1525d60;
	Node0x1525d60 -> Node0x1525dd0;
	Node0x1525dd0 -> Node0x1525e40;
	Node0x1525e40 -> Node0x1525eb0;
	Node0x1525eb0 -> Node0x1525f20;
	Node0x1525f20 -> Node0x1525f90;
	Node0x1525f90 -> Node0x1526000;
	Node0x1526000 -> Node0x1526070;
	Node0x1526070 -> Node0x15260e0;
	Node0x15260e0 -> Node0x1526150;
	Node0x1526150 -> Node0x15261c0;
	Node0x15261c0 -> Node0x1526230;
	Node0x1526230 -> Node0x15262a0;
	Node0x15262a0 -> Node0x1526310;
	Node0x1526310 -> Node0x1526380;
	Node0x1526380 -> Node0x14c49d8;
	Node0x14c49d8 -> Node0x1526410;
	Node0x1526410 -> Node0x1526668;
	Node0x1526668 -> Node0x15267c8;
	Node0x15267c8 -> Node0x1526888;
edge [color=red]
	Node0x1523ad8 -> Node0x1523be8;
	Node0x1523be8 -> Node0x1524048;
	Node0x1523b58 -> Node0x1524128;
	Node0x1524128 -> Node0x1524248;
	Node0x1523ad8 -> Node0x1524480;
	Node0x1523b58 -> Node0x1524480;
	Node0x1523ad8 -> Node0x1524538;
	Node0x1523b58 -> Node0x15254a8;
	Node0x15254a8 -> Node0x1525b30;
	Node0x1524538 -> Node0x1525b30;
	Node0x1525b30 -> Node0x1525ba0;
	Node0x1525ba0 -> Node0x1525c10;
	Node0x1524538 -> Node0x1525c80;
	Node0x1525c80 -> Node0x1525cf0;
	Node0x15254a8 -> Node0x1525d60;
	Node0x1524538 -> Node0x1525dd0;
	Node0x1525d60 -> Node0x1525dd0;
	Node0x15254a8 -> Node0x1525e40;
	Node0x1524538 -> Node0x1525e40;
	Node0x1525e40 -> Node0x1525eb0;
	Node0x1525eb0 -> Node0x1525f20;
	Node0x1524538 -> Node0x1525f90;
	Node0x1525d60 -> Node0x1525f90;
	Node0x1525b30 -> Node0x1526000;
	Node0x15254a8 -> Node0x1526070;
	Node0x1526070 -> Node0x15260e0;
	Node0x1525dd0 -> Node0x15260e0;
	Node0x15260e0 -> Node0x1526150;
	Node0x1525cf0 -> Node0x1526150;
	Node0x1526150 -> Node0x15261c0;
	Node0x1525f90 -> Node0x15261c0;
	Node0x15261c0 -> Node0x1526230;
	Node0x1525eb0 -> Node0x1526230;
	Node0x1526230 -> Node0x15262a0;
	Node0x1526000 -> Node0x15262a0;
	Node0x15262a0 -> Node0x1526310;
	Node0x1525f20 -> Node0x1526310;
	Node0x1525c10 -> Node0x1526380;
	Node0x1526310 -> Node0x1526380;
	Node0x1526380 -> Node0x14c49d8;
	Node0x14c49d8 -> Node0x1526410;
	Node0x1524128 -> Node0x1526668;
	Node0x1523be8 -> Node0x15267c8;
}
