digraph "DFG for'main' function" {
	Node0x799db8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x799e38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x799ec8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x79a328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x79a408[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x79a528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x79a760[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x79a818[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x79b788[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x79be10[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x79be80[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x79bef0[shape=record, label="  %10 = mul i32 %9, -2"];
	Node0x79bf60[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x79bfd0[shape=record, label="  %12 = shl i32 %6, 1"];
	Node0x79c040[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x79c0b0[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x79c120[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x79c190[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x79c200[shape=record, label="  %17 = and i32 %6, %8"];
	Node0x79c270[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x79c2e0[shape=record, label="  %19 = shl i32 %14, 2"];
	Node0x79c350[shape=record, label="  %20 = shl i32 %13, 1"];
	Node0x79c3c0[shape=record, label="  %21 = sub i32 %6, %9"];
	Node0x79c430[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0x79c4a0[shape=record, label="  %23 = sub i32 2, %12"];
	Node0x79c510[shape=record, label="  %24 = sub i32 %23, %7"];
	Node0x79c580[shape=record, label="  %25 = add i32 %24, %8"];
	Node0x79c5f0[shape=record, label="  %26 = sub i32 %25, %11"];
	Node0x79c660[shape=record, label="  %27 = sub i32 %26, %18"];
	Node0x79c6d0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x79c740[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x79c7b0[shape=record, label="  %30 = add i32 %29, %16"];
	Node0x79c820[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x79c890[shape=record, label="  %32 = icmp eq i32 %10, %31"];
	Node0x73a9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x79cb30[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x79cd88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x79cee8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x79cfa8[shape=record, label="  ret i32 0"];
	Node0x799db8 -> Node0x799e38;
	Node0x799e38 -> Node0x799ec8;
	Node0x799ec8 -> Node0x79a328;
	Node0x79a328 -> Node0x79a408;
	Node0x79a408 -> Node0x79a528;
	Node0x79a528 -> Node0x79a760;
	Node0x79a760 -> Node0x79a818;
	Node0x79a818 -> Node0x79b788;
	Node0x79b788 -> Node0x79be10;
	Node0x79be10 -> Node0x79be80;
	Node0x79be80 -> Node0x79bef0;
	Node0x79bef0 -> Node0x79bf60;
	Node0x79bf60 -> Node0x79bfd0;
	Node0x79bfd0 -> Node0x79c040;
	Node0x79c040 -> Node0x79c0b0;
	Node0x79c0b0 -> Node0x79c120;
	Node0x79c120 -> Node0x79c190;
	Node0x79c190 -> Node0x79c200;
	Node0x79c200 -> Node0x79c270;
	Node0x79c270 -> Node0x79c2e0;
	Node0x79c2e0 -> Node0x79c350;
	Node0x79c350 -> Node0x79c3c0;
	Node0x79c3c0 -> Node0x79c430;
	Node0x79c430 -> Node0x79c4a0;
	Node0x79c4a0 -> Node0x79c510;
	Node0x79c510 -> Node0x79c580;
	Node0x79c580 -> Node0x79c5f0;
	Node0x79c5f0 -> Node0x79c660;
	Node0x79c660 -> Node0x79c6d0;
	Node0x79c6d0 -> Node0x79c740;
	Node0x79c740 -> Node0x79c7b0;
	Node0x79c7b0 -> Node0x79c820;
	Node0x79c820 -> Node0x79c890;
	Node0x79c890 -> Node0x73a9d8;
	Node0x73a9d8 -> Node0x79cb30;
	Node0x79cb30 -> Node0x79cd88;
	Node0x79cd88 -> Node0x79cee8;
	Node0x79cee8 -> Node0x79cfa8;
edge [color=red]
	Node0x799db8 -> Node0x799ec8;
	Node0x799ec8 -> Node0x79a328;
	Node0x799e38 -> Node0x79a408;
	Node0x79a408 -> Node0x79a528;
	Node0x799db8 -> Node0x79a760;
	Node0x799e38 -> Node0x79a760;
	Node0x799db8 -> Node0x79a818;
	Node0x799e38 -> Node0x79b788;
	Node0x79b788 -> Node0x79be10;
	Node0x79a818 -> Node0x79be80;
	Node0x79be10 -> Node0x79be80;
	Node0x79be80 -> Node0x79bef0;
	Node0x79b788 -> Node0x79bf60;
	Node0x79a818 -> Node0x79bf60;
	Node0x79a818 -> Node0x79bfd0;
	Node0x79b788 -> Node0x79c040;
	Node0x79a818 -> Node0x79c040;
	Node0x79b788 -> Node0x79c0b0;
	Node0x79a818 -> Node0x79c0b0;
	Node0x79c0b0 -> Node0x79c120;
	Node0x79c120 -> Node0x79c190;
	Node0x79a818 -> Node0x79c200;
	Node0x79be10 -> Node0x79c200;
	Node0x79c200 -> Node0x79c270;
	Node0x79c0b0 -> Node0x79c2e0;
	Node0x79c040 -> Node0x79c350;
	Node0x79a818 -> Node0x79c3c0;
	Node0x79be80 -> Node0x79c3c0;
	Node0x79c3c0 -> Node0x79c430;
	Node0x79bfd0 -> Node0x79c4a0;
	Node0x79c4a0 -> Node0x79c510;
	Node0x79b788 -> Node0x79c510;
	Node0x79c510 -> Node0x79c580;
	Node0x79be10 -> Node0x79c580;
	Node0x79c580 -> Node0x79c5f0;
	Node0x79bf60 -> Node0x79c5f0;
	Node0x79c5f0 -> Node0x79c660;
	Node0x79c270 -> Node0x79c660;
	Node0x79c660 -> Node0x79c6d0;
	Node0x79c2e0 -> Node0x79c6d0;
	Node0x79c6d0 -> Node0x79c740;
	Node0x79c350 -> Node0x79c740;
	Node0x79c740 -> Node0x79c7b0;
	Node0x79c190 -> Node0x79c7b0;
	Node0x79c7b0 -> Node0x79c820;
	Node0x79c430 -> Node0x79c820;
	Node0x79bef0 -> Node0x79c890;
	Node0x79c820 -> Node0x79c890;
	Node0x79c890 -> Node0x73a9d8;
	Node0x73a9d8 -> Node0x79cb30;
	Node0x79a408 -> Node0x79cd88;
	Node0x799ec8 -> Node0x79cee8;
}
