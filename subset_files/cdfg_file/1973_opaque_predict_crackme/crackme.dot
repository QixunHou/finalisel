digraph "DFG for'crackme' function" {
	Node0x1365420[shape=record, label="  %3 = or i32 %1, %0"];
	Node0x1365490[shape=record, label="  %4 = sub i32 %1, %3"];
	Node0x1365b60[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x1365bd0[shape=record, label="  %6 = or i32 %5, %0"];
	Node0x1365c70[shape=record, label="  %7 = mul i32 %6, 5"];
	Node0x1365ce0[shape=record, label="  %8 = and i32 %5, %0"];
	Node0x1365d80[shape=record, label="  %9 = shl i32 %8, 2"];
	Node0x1365df0[shape=record, label="  %10 = and i32 %1, %0"];
	Node0x1365e60[shape=record, label="  %11 = sub i32 %3, %6"];
	Node0x1365f00[shape=record, label="  %12 = mul i32 %11, 3"];
	Node0x1365f70[shape=record, label="  %13 = sub i32 3, %0"];
	Node0x1365fe0[shape=record, label="  %14 = add i32 %13, %5"];
	Node0x1366050[shape=record, label="  %15 = add i32 %14, %8"];
	Node0x13660c0[shape=record, label="  %16 = sub i32 %15, %10"];
	Node0x1366130[shape=record, label="  %17 = add i32 %16, %7"];
	Node0x13661a0[shape=record, label="  %18 = sub i32 %17, %9"];
	Node0x1366210[shape=record, label="  %19 = add i32 %18, %12"];
	Node0x1366280[shape=record, label="  %20 = icmp eq i32 %4, %19"];
	Node0x1306268[shape=record, label="  %21 = select i1 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1366720[shape=record, label="  %22 = tail call i32 @puts(i8* nonnull dereferenceable(1) %21)"];
	Node0x1366770[shape=record, label="  ret void"];
	Node0x1365420 -> Node0x1365490;
	Node0x1365490 -> Node0x1365b60;
	Node0x1365b60 -> Node0x1365bd0;
	Node0x1365bd0 -> Node0x1365c70;
	Node0x1365c70 -> Node0x1365ce0;
	Node0x1365ce0 -> Node0x1365d80;
	Node0x1365d80 -> Node0x1365df0;
	Node0x1365df0 -> Node0x1365e60;
	Node0x1365e60 -> Node0x1365f00;
	Node0x1365f00 -> Node0x1365f70;
	Node0x1365f70 -> Node0x1365fe0;
	Node0x1365fe0 -> Node0x1366050;
	Node0x1366050 -> Node0x13660c0;
	Node0x13660c0 -> Node0x1366130;
	Node0x1366130 -> Node0x13661a0;
	Node0x13661a0 -> Node0x1366210;
	Node0x1366210 -> Node0x1366280;
	Node0x1366280 -> Node0x1306268;
	Node0x1306268 -> Node0x1366720;
	Node0x1366720 -> Node0x1366770;
edge [color=red]
	Node0x1365420 -> Node0x1365490;
	Node0x1365b60 -> Node0x1365bd0;
	Node0x1365bd0 -> Node0x1365c70;
	Node0x1365b60 -> Node0x1365ce0;
	Node0x1365ce0 -> Node0x1365d80;
	Node0x1365420 -> Node0x1365e60;
	Node0x1365bd0 -> Node0x1365e60;
	Node0x1365e60 -> Node0x1365f00;
	Node0x1365f70 -> Node0x1365fe0;
	Node0x1365b60 -> Node0x1365fe0;
	Node0x1365fe0 -> Node0x1366050;
	Node0x1365ce0 -> Node0x1366050;
	Node0x1366050 -> Node0x13660c0;
	Node0x1365df0 -> Node0x13660c0;
	Node0x13660c0 -> Node0x1366130;
	Node0x1365c70 -> Node0x1366130;
	Node0x1366130 -> Node0x13661a0;
	Node0x1365d80 -> Node0x13661a0;
	Node0x13661a0 -> Node0x1366210;
	Node0x1365f00 -> Node0x1366210;
	Node0x1365490 -> Node0x1366280;
	Node0x1366210 -> Node0x1366280;
	Node0x1366280 -> Node0x1306268;
	Node0x1306268 -> Node0x1366720;
}
