; ModuleID = '../.././c_source_file/1161_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1161_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %1, %0
  %8 = xor i32 %7, %2
  %9 = xor i32 %1, -1
  %10 = and i32 %9, %2
  %11 = and i32 %10, %0
  %12 = xor i32 %0, -1
  %13 = or i32 %9, %2
  %14 = and i32 %13, %12
  %15 = xor i32 %14, -1
  %16 = xor i32 %11, %15
  %17 = and i32 %5, %3
  %18 = xor i32 %17, -1
  %19 = xor i32 %18, %4
  %20 = and i32 %17, %4
  %21 = or i32 %5, %3
  %22 = xor i32 %21, %4
  %23 = or i32 %20, %22
  %24 = add i32 %23, %19
  %25 = shl i32 %24, 1
  %26 = add i32 %16, %8
  %27 = sub i32 %25, %26
  %28 = and i32 %2, %1
  %29 = and i32 %28, %12
  %30 = or i32 %2, %1
  %31 = and i32 %30, %0
  %32 = or i32 %29, %31
  %33 = and i32 %1, %0
  %34 = xor i32 %33, -1
  %35 = xor i32 %34, %2
  %36 = xor i32 %2, -1
  %37 = xor i32 %1, %0
  %38 = xor i32 %37, -1
  %39 = or i32 %36, %38
  %40 = and i32 %36, %1
  %41 = xor i32 %40, -1
  %42 = and i32 %2, %0
  %43 = or i32 %42, %1
  %44 = or i32 %36, %0
  %45 = xor i32 %44, %1
  %46 = or i32 %42, %9
  %47 = xor i32 %2, %1
  %48 = or i32 %47, %0
  %49 = xor i32 %11, %48
  %50 = xor i32 %30, -1
  %51 = xor i32 %50, %0
  %52 = xor i32 %7, -1
  %53 = xor i32 %2, %0
  %54 = or i32 %53, %52
  %55 = and i32 %36, %0
  %56 = xor i32 %55, -1
  %57 = and i32 %56, %1
  %58 = or i32 %42, %37
  %59 = and i32 %28, %0
  %60 = and i32 %47, %12
  %61 = or i32 %59, %60
  %62 = shl i32 %61, 1
  %63 = and i32 %10, %12
  %64 = or i32 %47, %12
  %65 = xor i32 %64, -1
  %66 = or i32 %63, %65
  %67 = and i32 %44, %37
  %68 = xor i32 %44, -1
  %69 = or i32 %37, %68
  %70 = or i32 %33, %68
  %71 = or i32 %2, %0
  %72 = xor i32 %71, -1
  %73 = or i32 %37, %72
  %74 = or i32 %36, %1
  %75 = xor i32 %74, -1
  %76 = xor i32 %75, %0
  %77 = and i32 %47, %34
  %78 = and i32 %53, %38
  %79 = xor i32 %47, -1
  %80 = or i32 %33, %79
  %81 = or i32 %68, %38
  %82 = and i32 %9, %0
  %83 = xor i32 %82, -1
  %84 = and i32 %79, %83
  %85 = xor i32 %42, %1
  %86 = shl i32 %85, 1
  %87 = and i32 %47, %0
  %88 = xor i32 %29, -1
  %89 = xor i32 %87, %88
  %90 = shl i32 %87, 1
  %91 = or i32 %75, %0
  %92 = or i32 %9, %0
  %93 = and i32 %92, %79
  %94 = or i32 %79, %52
  %95 = and i32 %71, %38
  %96 = or i32 %79, %12
  %97 = and i32 %7, %2
  %98 = or i32 %37, %2
  %99 = xor i32 %41, %0
  %100 = or i32 %53, %1
  %101 = shl i32 %100, 1
  %102 = xor i32 %47, %0
  %103 = xor i32 %102, -1
  %104 = or i32 %59, %103
  %105 = or i32 %41, %0
  %106 = or i32 %33, %2
  %107 = and i32 %37, %56
  %108 = xor i32 %74, %33
  %109 = xor i32 %33, %2
  %110 = xor i32 %44, %33
  %111 = xor i32 %42, -1
  %112 = and i32 %111, %1
  %113 = shl i32 %112, 1
  %114 = or i32 %11, %14
  %115 = add i32 %47, 1
  %116 = and i32 %53, %83
  %117 = or i32 %74, %12
  %118 = or i32 %36, %52
  %119 = add i32 %2, 1
  %120 = and i32 %44, %38
  %121 = xor i32 %42, %7
  %122 = xor i32 %53, -1
  %123 = and i32 %122, %38
  %124 = xor i32 %28, -1
  %125 = or i32 %124, %12
  %126 = or i32 %29, %87
  %127 = xor i32 %92, -1
  %128 = add i32 %92, 1
  %129 = xor i32 %0, 2147483647
  %130 = xor i32 %129, %13
  %131 = xor i32 %130, %11
  %132 = shl i32 %131, 1
  %133 = xor i32 %132, -1
  %134 = xor i32 %72, %1
  %135 = and i32 %79, %0
  %136 = or i32 %122, %38
  %137 = xor i32 %42, %41
  %138 = shl i32 %137, 1
  %139 = or i32 %75, %12
  %140 = add i32 %74, 1
  %141 = or i32 %55, %38
  %142 = shl i32 %141, 1
  %143 = or i32 %53, %33
  %144 = or i32 %68, %9
  %145 = and i32 %53, %9
  %146 = or i32 %42, %40
  %147 = and i32 %37, %122
  %148 = xor i32 %31, %88
  %149 = xor i32 %30, %0
  %150 = xor i32 %59, -1
  %151 = xor i32 %149, %150
  %152 = and i32 %79, %12
  %153 = and i32 %124, %0
  %154 = xor i32 %83, %2
  %155 = and i32 %7, %79
  %156 = and i32 %37, %36
  %157 = and i32 %111, %38
  %158 = and i32 %41, %0
  %159 = add i32 %33, 1
  %160 = and i32 %122, %34
  %161 = or i32 %33, %72
  %162 = add i32 %55, 1
  %163 = and i32 %47, %83
  %164 = xor i32 %40, %0
  %165 = shl i32 %164, 1
  %166 = or i32 %37, %122
  %167 = or i32 %40, %12
  %168 = xor i32 %71, %1
  %169 = or i32 %40, %0
  %170 = xor i32 %11, %103
  %171 = or i32 %47, %127
  %172 = or i32 %42, %127
  %173 = and i32 %53, %34
  %174 = or i32 %30, %12
  %175 = and i32 %7, %122
  %176 = shl i32 %175, 1
  %177 = or i32 %37, %36
  %178 = or i32 %122, %1
  %179 = or i32 %74, %0
  %180 = and i32 %30, %12
  %181 = xor i32 %180, 2147483647
  %182 = xor i32 %181, %59
  %183 = xor i32 %60, %150
  %184 = and i32 %44, %9
  %185 = or i32 %55, %37
  %186 = and i32 %71, %9
  %187 = and i32 %124, %12
  %188 = and i32 %53, %92
  %189 = xor i32 %79, %0
  %190 = and i32 %92, %36
  %191 = or i32 %53, %127
  %192 = and i32 %79, %34
  %193 = and i32 %7, %36
  %194 = shl i32 %193, 1
  %195 = and i32 %41, %12
  %196 = or i32 %79, %0
  %197 = xor i32 %63, %64
  %198 = and i32 %56, %38
  %199 = or i32 %40, %82
  %200 = or i32 %68, %1
  %201 = shl i32 %53, 1
  %202 = and i32 %13, %0
  %203 = xor i32 %202, -1
  %204 = xor i32 %63, %203
  %205 = or i32 %53, %38
  %206 = xor i32 %30, %33
  %207 = or i32 %72, %1
  %208 = and i32 %36, %38
  %209 = xor i32 %74, %0
  %210 = or i32 %42, %38
  %211 = xor i32 %52, %2
  %212 = and i32 %74, %0
  %213 = or i32 %33, %122
  %214 = or i32 %55, %1
  %215 = or i32 %82, %79
  %216 = or i32 %122, %127
  %217 = xor i32 %127, %2
  %218 = shl i32 %217, 2
  %219 = xor i32 %42, %92
  %220 = or i32 %122, %9
  %221 = shl i32 %220, 1
  %222 = shl i32 %82, 1
  %223 = and i32 %34, %2
  %224 = xor i32 %55, %74
  %225 = xor i32 %59, %102
  %226 = or i32 %33, %50
  %227 = and i32 %74, %12
  %228 = or i32 %82, %36
  %229 = or i32 %50, %12
  %230 = or i32 %122, %52
  %231 = and i32 %36, %83
  %232 = xor i32 %55, %124
  %233 = or i32 %50, %0
  %234 = and i32 %37, %111
  %235 = or i32 %55, %75
  %236 = shl i32 %235, 1
  %237 = and i32 %83, %2
  %238 = or i32 %79, %127
  %239 = or i32 %38, %2
  %240 = or i32 %124, %0
  %241 = and i32 %53, %37
  %242 = shl i32 %241, 1
  %243 = or i32 %72, %38
  %244 = xor i32 %92, %2
  %245 = and i32 %47, %92
  %246 = and i32 %36, %34
  %247 = or i32 %33, %36
  %248 = and i32 %122, %1
  %249 = or i32 %63, %202
  %250 = or i32 %127, %2
  %251 = xor i32 %124, %0
  %252 = shl i32 %251, 2
  %253 = xor i32 %71, %33
  %254 = shl i32 %253, 1
  %255 = or i32 %82, %2
  %256 = or i32 %33, %75
  %257 = xor i32 %82, %41
  %258 = or i32 %59, %149
  %259 = and i32 %71, %37
  %260 = or i32 %28, %12
  %261 = and i32 %111, %9
  %262 = and i32 %53, %7
  %263 = shl i32 %262, 1
  %264 = shl i32 %72, 1
  %265 = or i32 %72, %9
  %266 = or i32 %59, %180
  %267 = and i32 %71, %1
  %268 = shl i32 %267, 1
  %269 = and i32 %92, %2
  %270 = xor i32 %55, %1
  %271 = or i32 %55, %9
  %272 = xor i32 %42, %30
  %273 = and i32 %37, %2
  %274 = shl i32 %273, 1
  %275 = or i32 %47, %52
  %276 = or i32 %41, %12
  %277 = xor i32 %82, %2
  %278 = or i32 %42, %52
  %279 = or i32 %28, %0
  %280 = or i32 %53, %37
  %281 = xor i32 %111, %1
  %282 = xor i32 %56, %1
  %283 = or i32 %36, %127
  %284 = and i32 %122, %83
  %285 = or i32 %30, %0
  %286 = and i32 %50, %12
  %287 = mul i32 %286, -12
  %288 = and i32 %40, %12
  %289 = and i32 %50, %0
  %290 = shl i32 %289, 3
  %291 = and i32 %40, %0
  %292 = mul i32 %291, -7
  %293 = and i32 %75, %12
  %294 = and i32 %75, %0
  %295 = xor i32 %5, %4
  %296 = or i32 %295, %3
  %297 = xor i32 %4, -1
  %298 = xor i32 %3, -1
  %299 = and i32 %298, %5
  %300 = and i32 %299, %297
  %301 = or i32 %298, %5
  %302 = and i32 %301, %4
  %303 = xor i32 %302, -1
  %304 = xor i32 %300, %303
  %305 = and i32 %4, %3
  %306 = xor i32 %21, %305
  %307 = xor i32 %5, -1
  %308 = or i32 %307, %4
  %309 = xor i32 %308, -1
  %310 = xor i32 %4, %3
  %311 = or i32 %310, %309
  %312 = or i32 %5, %4
  %313 = xor i32 %312, -1
  %314 = or i32 %313, %298
  %315 = and i32 %307, %4
  %316 = xor i32 %315, -1
  %317 = xor i32 %316, %3
  %318 = xor i32 %21, -1
  %319 = or i32 %305, %318
  %320 = or i32 %298, %4
  %321 = xor i32 %320, -1
  %322 = xor i32 %5, %3
  %323 = or i32 %322, %321
  %324 = or i32 %322, %305
  %325 = or i32 %4, %3
  %326 = xor i32 %325, -1
  %327 = or i32 %322, %326
  %328 = xor i32 %295, -1
  %329 = and i32 %325, %328
  %330 = and i32 %322, %297
  %331 = xor i32 %330, -1
  %332 = xor i32 %20, %331
  %333 = and i32 %328, %298
  %334 = xor i32 %313, %3
  %335 = and i32 %320, %328
  %336 = shl i32 %335, 1
  %337 = and i32 %295, %325
  %338 = xor i32 %315, %3
  %339 = shl i32 %338, 1
  %340 = and i32 %298, %4
  %341 = or i32 %295, %340
  %342 = xor i32 %312, %3
  %343 = xor i32 %310, -1
  %344 = or i32 %313, %343
  %345 = and i32 %17, %297
  %346 = and i32 %21, %4
  %347 = xor i32 %346, -1
  %348 = xor i32 %345, %347
  %349 = xor i32 %322, -1
  %350 = or i32 %349, %4
  %351 = and i32 %322, %325
  %352 = or i32 %328, %3
  %353 = or i32 %318, %4
  %354 = and i32 %5, %4
  %355 = or i32 %354, %318
  %356 = shl i32 %355, 1
  %357 = xor i32 %340, -1
  %358 = add i32 %340, 1
  %359 = or i32 %307, %3
  %360 = xor i32 %359, %305
  %361 = and i32 %21, %297
  %362 = or i32 %354, %343
  %363 = or i32 %307, %343
  %364 = or i32 %18, %4
  %365 = and i32 %328, %3
  %366 = shl i32 %320, 1
  %367 = and i32 %299, %4
  %368 = xor i32 %301, %4
  %369 = or i32 %367, %368
  %370 = or i32 %295, %310
  %371 = xor i32 %359, -1
  %372 = or i32 %305, %371
  %373 = and i32 %357, %5
  %374 = or i32 %313, %3
  %375 = xor i32 %359, %4
  %376 = and i32 %322, %4
  %377 = or i32 %328, %321
  %378 = and i32 %18, %4
  %379 = and i32 %310, %307
  %380 = or i32 %328, %326
  %381 = or i32 %310, %328
  %382 = or i32 %322, %297
  %383 = xor i32 %382, -1
  %384 = or i32 %300, %383
  %385 = and i32 %312, %3
  %386 = or i32 %318, %297
  %387 = and i32 %307, %343
  %388 = or i32 %20, %361
  %389 = or i32 %315, %3
  %390 = or i32 %18, %297
  %391 = and i32 %307, %3
  %392 = xor i32 %391, -1
  %393 = and i32 %392, %297
  %394 = and i32 %312, %343
  %395 = and i32 %18, %297
  %396 = or i32 %349, %321
  %397 = xor i32 %354, %21
  %398 = or i32 %310, %5
  %399 = shl i32 %398, 1
  %400 = or i32 %315, %343
  %401 = xor i32 %308, %305
  %402 = xor i32 %322, %4
  %403 = xor i32 %402, -1
  %404 = or i32 %20, %403
  %405 = or i32 %354, %326
  %406 = xor i32 %326, %5
  %407 = and i32 %310, %328
  %408 = or i32 %359, %297
  %409 = xor i32 %300, %382
  %410 = xor i32 %305, -1
  %411 = and i32 %307, %410
  %412 = or i32 %310, %313
  %413 = or i32 %321, %5
  %414 = or i32 %391, %297
  %415 = xor i32 %312, %305
  %416 = xor i32 %391, %4
  %417 = or i32 %349, %326
  %418 = and i32 %308, %343
  %419 = and i32 %320, %307
  %420 = xor i32 %340, %392
  %421 = and i32 %307, %357
  %422 = and i32 %322, %410
  %423 = or i32 %322, %4
  %424 = or i32 %354, %310
  %425 = xor i32 %367, %423
  %426 = or i32 %315, %310
  %427 = or i32 %309, %3
  %428 = or i32 %295, %343
  %429 = and i32 %392, %4
  %430 = and i32 %349, %297
  %431 = and i32 %410, %5
  %432 = and i32 %325, %5
  %433 = xor i32 %321, %5
  %434 = xor i32 %340, %18
  %435 = or i32 %307, %326
  %436 = or i32 %340, %307
  %437 = and i32 %359, %297
  %438 = shl i32 %437, 1
  %439 = xor i32 %354, -1
  %440 = add i32 %354, 1
  %441 = or i32 %371, %4
  %442 = add i32 %312, 1
  %443 = and i32 %328, %343
  %444 = and i32 %295, %310
  %445 = xor i32 %17, %4
  %446 = xor i32 %439, %3
  %447 = or i32 %305, %349
  %448 = or i32 %295, %321
  %449 = or i32 %17, %297
  %450 = and i32 %295, %343
  %451 = and i32 %343, %5
  %452 = and i32 %359, %4
  %453 = or i32 %391, %4
  %454 = and i32 %439, %298
  %455 = xor i32 %20, %402
  %456 = and i32 %295, %298
  %457 = xor i32 %376, 1073741823
  %458 = xor i32 %457, %345
  %459 = xor i32 %305, %5
  %460 = or i32 %345, %376
  %461 = or i32 %354, %391
  %462 = and i32 %318, %297
  %463 = and i32 %391, %297
  %464 = and i32 %318, %4
  %465 = mul i32 %464, -14
  %466 = and i32 %391, %4
  %467 = shl i32 %466, 2
  %468 = and i32 %371, %297
  %469 = mul i32 %468, -13
  %470 = and i32 %371, %4
  %471 = shl i32 %20, 2
  %472 = add i32 %269, %37
  %473 = add i32 %472, %255
  %474 = add i32 %473, %68
  %475 = add i32 %474, %237
  %476 = add i32 %475, %231
  %477 = add i32 %476, %28
  %478 = add i32 %477, %190
  %479 = add i32 %478, %118
  %480 = add i32 %479, %42
  %481 = add i32 %480, %285
  %482 = add i32 %481, %260
  %483 = add i32 %482, %31
  %484 = add i32 %483, %245
  %485 = add i32 %484, %191
  %486 = add i32 %485, %184
  %487 = add i32 %486, %173
  %488 = add i32 %487, %121
  %489 = add i32 %488, %117
  %490 = add i32 %489, %93
  %491 = add i32 %490, %57
  %492 = add i32 %491, %5
  %493 = add i32 %492, %182
  %494 = add i32 %493, %22
  %495 = add i32 %494, %461
  %496 = add i32 %495, %444
  %497 = add i32 %496, %415
  %498 = add i32 %497, %389
  %499 = add i32 %498, %385
  %500 = add i32 %499, %377
  %501 = add i32 %500, %376
  %502 = add i32 %501, %353
  %503 = add i32 %502, %337
  %504 = add i32 %503, %334
  %505 = add i32 %504, %296
  %506 = shl i32 %505, 1
  %507 = add i32 %288, %50
  %508 = sub i32 %507, %135
  %509 = add i32 %508, %95
  %510 = add i32 %509, %76
  %511 = sub i32 %510, %126
  %512 = add i32 %511, %379
  %513 = sub i32 %512, %404
  %514 = mul i32 %513, 3
  %515 = sub i32 %186, %277
  %516 = sub i32 %515, %167
  %517 = sub i32 %516, %426
  %518 = sub i32 %517, %443
  %519 = add i32 %518, %417
  %520 = add i32 %519, %400
  %521 = mul i32 %520, 5
  %522 = add i32 %294, %12
  %523 = add i32 %522, %322
  %524 = add i32 %523, %458
  %525 = shl i32 %524, 2
  %526 = sub i32 %462, %345
  %527 = mul i32 %526, 9
  %528 = sub i32 %29, %59
  %529 = mul i32 %528, 6
  %530 = sub i32 %1, %0
  %531 = sub i32 %530, %33
  %532 = add i32 %531, %119
  %533 = add i32 %532, %128
  %534 = add i32 %533, %92
  %535 = add i32 %534, %159
  %536 = add i32 %535, %2
  %537 = add i32 %536, %38
  %538 = sub i32 %537, %35
  %539 = sub i32 %538, %39
  %540 = add i32 %539, %97
  %541 = add i32 %540, %98
  %542 = add i32 %541, %106
  %543 = add i32 %542, %109
  %544 = add i32 %543, %115
  %545 = add i32 %544, %140
  %546 = sub i32 %545, %154
  %547 = add i32 %546, %156
  %548 = add i32 %547, %162
  %549 = sub i32 %548, %71
  %550 = add i32 %549, %177
  %551 = add i32 %550, %208
  %552 = add i32 %551, %211
  %553 = sub i32 %552, %222
  %554 = sub i32 %553, %44
  %555 = sub i32 %554, %223
  %556 = add i32 %555, %228
  %557 = sub i32 %556, %239
  %558 = add i32 %557, %244
  %559 = add i32 %558, %246
  %560 = add i32 %559, %247
  %561 = sub i32 %560, %250
  %562 = add i32 %561, %283
  %563 = add i32 %562, %43
  %564 = sub i32 %563, %45
  %565 = add i32 %564, %46
  %566 = add i32 %565, %51
  %567 = sub i32 %566, %48
  %568 = add i32 %567, %54
  %569 = add i32 %568, %58
  %570 = add i32 %569, %67
  %571 = sub i32 %570, %69
  %572 = sub i32 %571, %70
  %573 = sub i32 %572, %73
  %574 = sub i32 %573, %77
  %575 = sub i32 %574, %78
  %576 = add i32 %575, %60
  %577 = add i32 %576, %80
  %578 = sub i32 %577, %81
  %579 = add i32 %578, %84
  %580 = add i32 %579, %91
  %581 = sub i32 %580, %94
  %582 = sub i32 %581, %96
  %583 = add i32 %582, %99
  %584 = sub i32 %583, %105
  %585 = add i32 %584, %107
  %586 = add i32 %585, %108
  %587 = sub i32 %586, %110
  %588 = sub i32 %587, %116
  %589 = add i32 %588, %120
  %590 = sub i32 %589, %123
  %591 = sub i32 %590, %125
  %592 = sub i32 %591, %134
  %593 = add i32 %592, %136
  %594 = add i32 %593, %139
  %595 = add i32 %594, %143
  %596 = sub i32 %595, %144
  %597 = add i32 %596, %145
  %598 = add i32 %597, %146
  %599 = add i32 %598, %147
  %600 = sub i32 %599, %152
  %601 = sub i32 %600, %153
  %602 = add i32 %601, %155
  %603 = sub i32 %602, %157
  %604 = sub i32 %603, %158
  %605 = add i32 %604, %160
  %606 = add i32 %605, %161
  %607 = sub i32 %606, %163
  %608 = sub i32 %607, %166
  %609 = sub i32 %608, %168
  %610 = add i32 %609, %169
  %611 = sub i32 %610, %171
  %612 = sub i32 %611, %172
  %613 = sub i32 %612, %174
  %614 = sub i32 %613, %178
  %615 = add i32 %614, %179
  %616 = add i32 %615, %185
  %617 = sub i32 %616, %187
  %618 = sub i32 %617, %188
  %619 = add i32 %618, %189
  %620 = sub i32 %619, %64
  %621 = sub i32 %620, %192
  %622 = sub i32 %621, %194
  %623 = add i32 %622, %195
  %624 = sub i32 %623, %196
  %625 = add i32 %624, %198
  %626 = add i32 %625, %199
  %627 = add i32 %626, %200
  %628 = sub i32 %627, %201
  %629 = add i32 %628, %205
  %630 = sub i32 %629, %206
  %631 = add i32 %630, %207
  %632 = sub i32 %631, %209
  %633 = sub i32 %632, %210
  %634 = sub i32 %633, %212
  %635 = add i32 %634, %213
  %636 = add i32 %635, %214
  %637 = sub i32 %636, %215
  %638 = sub i32 %637, %216
  %639 = sub i32 %638, %218
  %640 = add i32 %639, %219
  %641 = add i32 %640, %224
  %642 = add i32 %641, %226
  %643 = sub i32 %642, %227
  %644 = add i32 %643, %229
  %645 = sub i32 %644, %230
  %646 = add i32 %645, %232
  %647 = add i32 %646, %233
  %648 = sub i32 %647, %234
  %649 = sub i32 %648, %238
  %650 = add i32 %649, %240
  %651 = sub i32 %650, %243
  %652 = add i32 %651, %248
  %653 = sub i32 %652, %256
  %654 = add i32 %653, %257
  %655 = sub i32 %654, %102
  %656 = sub i32 %655, %259
  %657 = sub i32 %656, %261
  %658 = sub i32 %657, %264
  %659 = sub i32 %658, %265
  %660 = add i32 %659, %270
  %661 = sub i32 %660, %271
  %662 = sub i32 %661, %272
  %663 = sub i32 %662, %274
  %664 = add i32 %663, %275
  %665 = add i32 %664, %276
  %666 = add i32 %665, %278
  %667 = sub i32 %666, %279
  %668 = add i32 %667, %280
  %669 = add i32 %668, %281
  %670 = sub i32 %669, %282
  %671 = add i32 %670, %284
  %672 = add i32 %671, %293
  %673 = add i32 %672, %32
  %674 = sub i32 %673, %49
  %675 = add i32 %674, %66
  %676 = sub i32 %675, %86
  %677 = add i32 %676, %89
  %678 = sub i32 %677, %90
  %679 = sub i32 %678, %101
  %680 = sub i32 %679, %104
  %681 = sub i32 %680, %113
  %682 = add i32 %681, %114
  %683 = sub i32 %682, %138
  %684 = sub i32 %683, %142
  %685 = add i32 %684, %148
  %686 = add i32 %685, %151
  %687 = sub i32 %686, %165
  %688 = sub i32 %687, %170
  %689 = sub i32 %688, %176
  %690 = add i32 %689, %183
  %691 = add i32 %690, %197
  %692 = sub i32 %691, %204
  %693 = sub i32 %692, %221
  %694 = add i32 %693, %225
  %695 = sub i32 %694, %236
  %696 = sub i32 %695, %242
  %697 = sub i32 %696, %249
  %698 = sub i32 %697, %252
  %699 = sub i32 %698, %254
  %700 = add i32 %699, %258
  %701 = sub i32 %700, %263
  %702 = sub i32 %701, %266
  %703 = sub i32 %702, %268
  %704 = add i32 %703, %287
  %705 = sub i32 %704, %290
  %706 = add i32 %705, %292
  %707 = add i32 %706, %358
  %708 = add i32 %707, %340
  %709 = add i32 %708, %326
  %710 = sub i32 %709, %62
  %711 = add i32 %710, %309
  %712 = sub i32 %711, %354
  %713 = sub i32 %712, %363
  %714 = sub i32 %713, %366
  %715 = sub i32 %714, %373
  %716 = add i32 %715, %328
  %717 = add i32 %716, %387
  %718 = add i32 %717, %316
  %719 = sub i32 %718, %21
  %720 = add i32 %719, %406
  %721 = sub i32 %720, %411
  %722 = add i32 %721, %413
  %723 = sub i32 %722, %419
  %724 = sub i32 %723, %421
  %725 = sub i32 %724, %431
  %726 = sub i32 %725, %432
  %727 = add i32 %726, %433
  %728 = sub i32 %727, %391
  %729 = sub i32 %728, %435
  %730 = add i32 %729, %436
  %731 = add i32 %730, %440
  %732 = add i32 %731, %442
  %733 = add i32 %732, %359
  %734 = add i32 %733, %451
  %735 = sub i32 %734, %459
  %736 = add i32 %735, %529
  %737 = add i32 %736, %133
  %738 = add i32 %737, %306
  %739 = add i32 %738, %311
  %740 = sub i32 %739, %314
  %741 = sub i32 %740, %317
  %742 = add i32 %741, %319
  %743 = add i32 %742, %323
  %744 = add i32 %743, %324
  %745 = add i32 %744, %327
  %746 = add i32 %745, %329
  %747 = sub i32 %746, %333
  %748 = add i32 %747, %341
  %749 = add i32 %748, %342
  %750 = sub i32 %749, %344
  %751 = add i32 %750, %350
  %752 = add i32 %751, %351
  %753 = sub i32 %752, %352
  %754 = add i32 %753, %360
  %755 = sub i32 %754, %361
  %756 = sub i32 %755, %362
  %757 = sub i32 %756, %364
  %758 = add i32 %757, %365
  %759 = sub i32 %758, %370
  %760 = sub i32 %759, %372
  %761 = add i32 %760, %374
  %762 = sub i32 %761, %375
  %763 = add i32 %762, %378
  %764 = sub i32 %763, %380
  %765 = sub i32 %764, %381
  %766 = add i32 %765, %386
  %767 = sub i32 %766, %390
  %768 = add i32 %767, %393
  %769 = sub i32 %768, %346
  %770 = sub i32 %769, %394
  %771 = sub i32 %770, %395
  %772 = add i32 %771, %396
  %773 = add i32 %772, %397
  %774 = sub i32 %773, %399
  %775 = sub i32 %774, %401
  %776 = add i32 %775, %405
  %777 = sub i32 %776, %407
  %778 = sub i32 %777, %408
  %779 = sub i32 %778, %412
  %780 = add i32 %779, %414
  %781 = add i32 %780, %416
  %782 = sub i32 %781, %418
  %783 = sub i32 %782, %420
  %784 = sub i32 %783, %422
  %785 = add i32 %784, %423
  %786 = sub i32 %785, %424
  %787 = add i32 %786, %427
  %788 = add i32 %787, %428
  %789 = add i32 %788, %429
  %790 = sub i32 %789, %430
  %791 = add i32 %790, %402
  %792 = sub i32 %791, %434
  %793 = sub i32 %792, %441
  %794 = add i32 %793, %445
  %795 = sub i32 %794, %446
  %796 = sub i32 %795, %447
  %797 = sub i32 %796, %448
  %798 = sub i32 %797, %449
  %799 = sub i32 %798, %450
  %800 = sub i32 %799, %452
  %801 = sub i32 %800, %453
  %802 = add i32 %801, %454
  %803 = sub i32 %802, %456
  %804 = sub i32 %803, %330
  %805 = sub i32 %804, %463
  %806 = add i32 %805, %470
  %807 = sub i32 %806, %304
  %808 = sub i32 %807, %332
  %809 = sub i32 %808, %336
  %810 = sub i32 %809, %339
  %811 = add i32 %810, %348
  %812 = sub i32 %811, %356
  %813 = add i32 %812, %369
  %814 = add i32 %813, %384
  %815 = add i32 %814, %388
  %816 = add i32 %815, %409
  %817 = sub i32 %816, %425
  %818 = sub i32 %817, %438
  %819 = add i32 %818, %455
  %820 = add i32 %819, %460
  %821 = add i32 %820, %465
  %822 = sub i32 %821, %467
  %823 = add i32 %822, %469
  %824 = sub i32 %823, %471
  %825 = add i32 %824, %527
  %826 = add i32 %825, %525
  %827 = add i32 %826, %521
  %828 = add i32 %827, %514
  %829 = add i32 %828, %506
  %830 = icmp eq i32 %27, %829
  %831 = select i1 %830, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %832 = tail call i32 @puts(i8* nonnull dereferenceable(1) %831)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
