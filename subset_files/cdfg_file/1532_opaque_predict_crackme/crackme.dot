digraph "DFG for'crackme' function" {
	Node0x2387720[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x2387da0[shape=record, label="  %6 = xor i32 %0, 2147483647"];
	Node0x2387e40[shape=record, label="  %7 = shl i32 %0, 1"];
	Node0x2387eb0[shape=record, label="  %8 = sub i32 1, %0"];
	Node0x2387f20[shape=record, label="  %9 = sub i32 %8, %7"];
	Node0x2387f90[shape=record, label="  %10 = add i32 %9, %5"];
	Node0x2388030[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x23880a0[shape=record, label="  %12 = or i32 %11, %1"];
	Node0x2388110[shape=record, label="  %13 = or i32 %2, %1"];
	Node0x2388180[shape=record, label="  %14 = and i32 %11, %1"];
	Node0x23881f0[shape=record, label="  %15 = xor i32 %2, %1"];
	Node0x2388260[shape=record, label="  %16 = add i32 %2, 1"];
	Node0x23882d0[shape=record, label="  %17 = shl i32 %13, 1"];
	Node0x2388370[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x23883e0[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x2388480[shape=record, label="  %20 = mul i32 %19, -6"];
	Node0x23884f0[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x2388560[shape=record, label="  %22 = xor i32 %6, %3"];
	Node0x2388600[shape=record, label="  %23 = xor i32 %3, 1073741823"];
	Node0x2388670[shape=record, label="  %24 = and i32 %23, %0"];
	Node0x2388710[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0x2388780[shape=record, label="  %26 = and i32 %6, %3"];
	Node0x23887f0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x2388860[shape=record, label="  %28 = and i32 %3, %0"];
	Node0x2388900[shape=record, label="  %29 = mul i32 %28, -7"];
	Node0x23889a0[shape=record, label="  %30 = mul i32 %1, -3"];
	Node0x2388a10[shape=record, label="  %31 = add i32 %21, %15"];
	Node0x2388a80[shape=record, label="  %32 = add i32 %31, %22"];
	Node0x2388d00[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x2388d70[shape=record, label="  %34 = sub i32 1, %1"];
	Node0x2388de0[shape=record, label="  %35 = add i32 %34, %2"];
	Node0x2388e50[shape=record, label="  %36 = add i32 %35, %16"];
	Node0x2388ec0[shape=record, label="  %37 = add i32 %36, %12"];
	Node0x2388f30[shape=record, label="  %38 = add i32 %37, %13"];
	Node0x2388fa0[shape=record, label="  %39 = sub i32 %38, %14"];
	Node0x2389010[shape=record, label="  %40 = add i32 %39, %3"];
	Node0x2389080[shape=record, label="  %41 = add i32 %40, %20"];
	Node0x23890f0[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x2389160[shape=record, label="  %43 = sub i32 %42, %18"];
	Node0x23891d0[shape=record, label="  %44 = sub i32 %43, %27"];
	Node0x2389240[shape=record, label="  %45 = add i32 %44, %29"];
	Node0x23892b0[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x2389320[shape=record, label="  %47 = sub i32 %46, %25"];
	Node0x2389390[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x2389400[shape=record, label="  %49 = icmp eq i32 %10, %48"];
	Node0x2328268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23898a0[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x23898f0[shape=record, label="  ret void"];
	Node0x2387720 -> Node0x2387da0;
	Node0x2387da0 -> Node0x2387e40;
	Node0x2387e40 -> Node0x2387eb0;
	Node0x2387eb0 -> Node0x2387f20;
	Node0x2387f20 -> Node0x2387f90;
	Node0x2387f90 -> Node0x2388030;
	Node0x2388030 -> Node0x23880a0;
	Node0x23880a0 -> Node0x2388110;
	Node0x2388110 -> Node0x2388180;
	Node0x2388180 -> Node0x23881f0;
	Node0x23881f0 -> Node0x2388260;
	Node0x2388260 -> Node0x23882d0;
	Node0x23882d0 -> Node0x2388370;
	Node0x2388370 -> Node0x23883e0;
	Node0x23883e0 -> Node0x2388480;
	Node0x2388480 -> Node0x23884f0;
	Node0x23884f0 -> Node0x2388560;
	Node0x2388560 -> Node0x2388600;
	Node0x2388600 -> Node0x2388670;
	Node0x2388670 -> Node0x2388710;
	Node0x2388710 -> Node0x2388780;
	Node0x2388780 -> Node0x23887f0;
	Node0x23887f0 -> Node0x2388860;
	Node0x2388860 -> Node0x2388900;
	Node0x2388900 -> Node0x23889a0;
	Node0x23889a0 -> Node0x2388a10;
	Node0x2388a10 -> Node0x2388a80;
	Node0x2388a80 -> Node0x2388d00;
	Node0x2388d00 -> Node0x2388d70;
	Node0x2388d70 -> Node0x2388de0;
	Node0x2388de0 -> Node0x2388e50;
	Node0x2388e50 -> Node0x2388ec0;
	Node0x2388ec0 -> Node0x2388f30;
	Node0x2388f30 -> Node0x2388fa0;
	Node0x2388fa0 -> Node0x2389010;
	Node0x2389010 -> Node0x2389080;
	Node0x2389080 -> Node0x23890f0;
	Node0x23890f0 -> Node0x2389160;
	Node0x2389160 -> Node0x23891d0;
	Node0x23891d0 -> Node0x2389240;
	Node0x2389240 -> Node0x23892b0;
	Node0x23892b0 -> Node0x2389320;
	Node0x2389320 -> Node0x2389390;
	Node0x2389390 -> Node0x2389400;
	Node0x2389400 -> Node0x2328268;
	Node0x2328268 -> Node0x23898a0;
	Node0x23898a0 -> Node0x23898f0;
edge [color=red]
	Node0x2387eb0 -> Node0x2387f20;
	Node0x2387e40 -> Node0x2387f20;
	Node0x2387f20 -> Node0x2387f90;
	Node0x2387720 -> Node0x2387f90;
	Node0x2388030 -> Node0x23880a0;
	Node0x2388030 -> Node0x2388180;
	Node0x2388110 -> Node0x23882d0;
	Node0x23882d0 -> Node0x2388370;
	Node0x23880a0 -> Node0x23883e0;
	Node0x23883e0 -> Node0x2388480;
	Node0x2387da0 -> Node0x2388560;
	Node0x2388600 -> Node0x2388670;
	Node0x2388670 -> Node0x2388710;
	Node0x2387da0 -> Node0x2388780;
	Node0x2388780 -> Node0x23887f0;
	Node0x2388860 -> Node0x2388900;
	Node0x23884f0 -> Node0x2388a10;
	Node0x23881f0 -> Node0x2388a10;
	Node0x2388a10 -> Node0x2388a80;
	Node0x2388560 -> Node0x2388a80;
	Node0x2388a80 -> Node0x2388d00;
	Node0x2388d70 -> Node0x2388de0;
	Node0x2388de0 -> Node0x2388e50;
	Node0x2388260 -> Node0x2388e50;
	Node0x2388e50 -> Node0x2388ec0;
	Node0x23880a0 -> Node0x2388ec0;
	Node0x2388ec0 -> Node0x2388f30;
	Node0x2388110 -> Node0x2388f30;
	Node0x2388f30 -> Node0x2388fa0;
	Node0x2388180 -> Node0x2388fa0;
	Node0x2388fa0 -> Node0x2389010;
	Node0x2389010 -> Node0x2389080;
	Node0x2388480 -> Node0x2389080;
	Node0x2389080 -> Node0x23890f0;
	Node0x23884f0 -> Node0x23890f0;
	Node0x23890f0 -> Node0x2389160;
	Node0x2388370 -> Node0x2389160;
	Node0x2389160 -> Node0x23891d0;
	Node0x23887f0 -> Node0x23891d0;
	Node0x23891d0 -> Node0x2389240;
	Node0x2388900 -> Node0x2389240;
	Node0x2389240 -> Node0x23892b0;
	Node0x23889a0 -> Node0x23892b0;
	Node0x23892b0 -> Node0x2389320;
	Node0x2388710 -> Node0x2389320;
	Node0x2389320 -> Node0x2389390;
	Node0x2388d00 -> Node0x2389390;
	Node0x2387f90 -> Node0x2389400;
	Node0x2389390 -> Node0x2389400;
	Node0x2389400 -> Node0x2328268;
	Node0x2328268 -> Node0x23898a0;
}
