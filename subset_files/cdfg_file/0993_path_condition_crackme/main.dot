digraph "DFG for'main' function" {
	Node0xb39ec8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb39f48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb39fd8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xb3a438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xb3a518[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xb3a638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb3a870[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xb3a928[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb3b898[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb3bf20[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xb3bf90[shape=record, label="  %9 = add i32 %7, 1"];
	Node0xb3c000[shape=record, label="  %10 = shl i32 %7, 2"];
	Node0xb3c070[shape=record, label="  %11 = add i32 %9, %10"];
	Node0xb3c0e0[shape=record, label="  %12 = and i32 %6, %8"];
	Node0xb3c150[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xb3c1c0[shape=record, label="  %14 = mul i32 %13, -5"];
	Node0xb3c230[shape=record, label="  %15 = or i32 %6, %8"];
	Node0xb3c2a0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0xb3c310[shape=record, label="  %17 = or i32 %7, %6"];
	Node0xb3c380[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0xb3c3f0[shape=record, label="  %19 = mul i32 %18, 3"];
	Node0xb3c460[shape=record, label="  %20 = xor i32 %15, -1"];
	Node0xb3c4d0[shape=record, label="  %21 = mul i32 %20, 9"];
	Node0xb3c540[shape=record, label="  %22 = shl i32 %12, 2"];
	Node0xb3c5b0[shape=record, label="  %23 = and i32 %7, %6"];
	Node0xb3c620[shape=record, label="  %24 = mul i32 %23, 6"];
	Node0xb3c690[shape=record, label="  %25 = add i32 %6, 1"];
	Node0xb3c700[shape=record, label="  %26 = add i32 %25, %17"];
	Node0xb3c770[shape=record, label="  %27 = add i32 %26, %14"];
	Node0xb3c7e0[shape=record, label="  %28 = add i32 %27, %16"];
	Node0xb3c850[shape=record, label="  %29 = add i32 %28, %19"];
	Node0xb3c8c0[shape=record, label="  %30 = add i32 %29, %21"];
	Node0xb3c930[shape=record, label="  %31 = sub i32 %30, %22"];
	Node0xb3c9a0[shape=record, label="  %32 = add i32 %31, %24"];
	Node0xb3cc20[shape=record, label="  %33 = icmp eq i32 %11, %32"];
	Node0xada9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb3ccb0[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xb3cf08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb3d068[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xb3d128[shape=record, label="  ret i32 0"];
	Node0xb39ec8 -> Node0xb39f48;
	Node0xb39f48 -> Node0xb39fd8;
	Node0xb39fd8 -> Node0xb3a438;
	Node0xb3a438 -> Node0xb3a518;
	Node0xb3a518 -> Node0xb3a638;
	Node0xb3a638 -> Node0xb3a870;
	Node0xb3a870 -> Node0xb3a928;
	Node0xb3a928 -> Node0xb3b898;
	Node0xb3b898 -> Node0xb3bf20;
	Node0xb3bf20 -> Node0xb3bf90;
	Node0xb3bf90 -> Node0xb3c000;
	Node0xb3c000 -> Node0xb3c070;
	Node0xb3c070 -> Node0xb3c0e0;
	Node0xb3c0e0 -> Node0xb3c150;
	Node0xb3c150 -> Node0xb3c1c0;
	Node0xb3c1c0 -> Node0xb3c230;
	Node0xb3c230 -> Node0xb3c2a0;
	Node0xb3c2a0 -> Node0xb3c310;
	Node0xb3c310 -> Node0xb3c380;
	Node0xb3c380 -> Node0xb3c3f0;
	Node0xb3c3f0 -> Node0xb3c460;
	Node0xb3c460 -> Node0xb3c4d0;
	Node0xb3c4d0 -> Node0xb3c540;
	Node0xb3c540 -> Node0xb3c5b0;
	Node0xb3c5b0 -> Node0xb3c620;
	Node0xb3c620 -> Node0xb3c690;
	Node0xb3c690 -> Node0xb3c700;
	Node0xb3c700 -> Node0xb3c770;
	Node0xb3c770 -> Node0xb3c7e0;
	Node0xb3c7e0 -> Node0xb3c850;
	Node0xb3c850 -> Node0xb3c8c0;
	Node0xb3c8c0 -> Node0xb3c930;
	Node0xb3c930 -> Node0xb3c9a0;
	Node0xb3c9a0 -> Node0xb3cc20;
	Node0xb3cc20 -> Node0xada9d8;
	Node0xada9d8 -> Node0xb3ccb0;
	Node0xb3ccb0 -> Node0xb3cf08;
	Node0xb3cf08 -> Node0xb3d068;
	Node0xb3d068 -> Node0xb3d128;
edge [color=red]
	Node0xb39ec8 -> Node0xb39fd8;
	Node0xb39fd8 -> Node0xb3a438;
	Node0xb39f48 -> Node0xb3a518;
	Node0xb3a518 -> Node0xb3a638;
	Node0xb39ec8 -> Node0xb3a870;
	Node0xb39f48 -> Node0xb3a870;
	Node0xb39ec8 -> Node0xb3a928;
	Node0xb39f48 -> Node0xb3b898;
	Node0xb3b898 -> Node0xb3bf20;
	Node0xb3b898 -> Node0xb3bf90;
	Node0xb3b898 -> Node0xb3c000;
	Node0xb3bf90 -> Node0xb3c070;
	Node0xb3c000 -> Node0xb3c070;
	Node0xb3a928 -> Node0xb3c0e0;
	Node0xb3bf20 -> Node0xb3c0e0;
	Node0xb3c0e0 -> Node0xb3c150;
	Node0xb3c150 -> Node0xb3c1c0;
	Node0xb3a928 -> Node0xb3c230;
	Node0xb3bf20 -> Node0xb3c230;
	Node0xb3c230 -> Node0xb3c2a0;
	Node0xb3b898 -> Node0xb3c310;
	Node0xb3a928 -> Node0xb3c310;
	Node0xb3c310 -> Node0xb3c380;
	Node0xb3c380 -> Node0xb3c3f0;
	Node0xb3c230 -> Node0xb3c460;
	Node0xb3c460 -> Node0xb3c4d0;
	Node0xb3c0e0 -> Node0xb3c540;
	Node0xb3b898 -> Node0xb3c5b0;
	Node0xb3a928 -> Node0xb3c5b0;
	Node0xb3c5b0 -> Node0xb3c620;
	Node0xb3a928 -> Node0xb3c690;
	Node0xb3c690 -> Node0xb3c700;
	Node0xb3c310 -> Node0xb3c700;
	Node0xb3c700 -> Node0xb3c770;
	Node0xb3c1c0 -> Node0xb3c770;
	Node0xb3c770 -> Node0xb3c7e0;
	Node0xb3c2a0 -> Node0xb3c7e0;
	Node0xb3c7e0 -> Node0xb3c850;
	Node0xb3c3f0 -> Node0xb3c850;
	Node0xb3c850 -> Node0xb3c8c0;
	Node0xb3c4d0 -> Node0xb3c8c0;
	Node0xb3c8c0 -> Node0xb3c930;
	Node0xb3c540 -> Node0xb3c930;
	Node0xb3c930 -> Node0xb3c9a0;
	Node0xb3c620 -> Node0xb3c9a0;
	Node0xb3c070 -> Node0xb3cc20;
	Node0xb3c9a0 -> Node0xb3cc20;
	Node0xb3cc20 -> Node0xada9d8;
	Node0xada9d8 -> Node0xb3ccb0;
	Node0xb3a518 -> Node0xb3cf08;
	Node0xb39fd8 -> Node0xb3d068;
}
