digraph "DFG for'main' function" {
	Node0x8bcc58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x8bccd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x8bcd68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x8bd1c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x8bd2a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x8bd3c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8bd600[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x8bd6b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x8be628[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x8becb0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x8bed20[shape=record, label="  %9 = add i32 %8, 1"];
	Node0x8bed90[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x8bee00[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x8bee70[shape=record, label="  %12 = or i32 %6, %10"];
	Node0x8beee0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x8bef50[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x8befc0[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x8bf030[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x8bf0a0[shape=record, label="  %17 = and i32 %6, %10"];
	Node0x8bf110[shape=record, label="  %18 = mul i32 %16, -5"];
	Node0x8bf180[shape=record, label="  %19 = shl i32 %17, 1"];
	Node0x8bf1f0[shape=record, label="  %20 = mul i32 %8, -3"];
	Node0x8bf260[shape=record, label="  %21 = add i32 %7, %6"];
	Node0x8bf2d0[shape=record, label="  %22 = add i32 %21, %12"];
	Node0x8bf340[shape=record, label="  %23 = add i32 %22, %11"];
	Node0x8bf3b0[shape=record, label="  %24 = add i32 %23, %16"];
	Node0x8bf420[shape=record, label="  %25 = sub i32 %24, %17"];
	Node0x8bf490[shape=record, label="  %26 = sub i32 %25, %14"];
	Node0x8bf500[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x8bf570[shape=record, label="  %28 = sub i32 %27, %19"];
	Node0x8bf5e0[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x8bf650[shape=record, label="  %30 = icmp eq i32 %9, %29"];
	Node0x85d9d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8bf6e0[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x8bfb48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8bfca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x8bfd68[shape=record, label="  ret i32 0"];
	Node0x8bcc58 -> Node0x8bccd8;
	Node0x8bccd8 -> Node0x8bcd68;
	Node0x8bcd68 -> Node0x8bd1c8;
	Node0x8bd1c8 -> Node0x8bd2a8;
	Node0x8bd2a8 -> Node0x8bd3c8;
	Node0x8bd3c8 -> Node0x8bd600;
	Node0x8bd600 -> Node0x8bd6b8;
	Node0x8bd6b8 -> Node0x8be628;
	Node0x8be628 -> Node0x8becb0;
	Node0x8becb0 -> Node0x8bed20;
	Node0x8bed20 -> Node0x8bed90;
	Node0x8bed90 -> Node0x8bee00;
	Node0x8bee00 -> Node0x8bee70;
	Node0x8bee70 -> Node0x8beee0;
	Node0x8beee0 -> Node0x8bef50;
	Node0x8bef50 -> Node0x8befc0;
	Node0x8befc0 -> Node0x8bf030;
	Node0x8bf030 -> Node0x8bf0a0;
	Node0x8bf0a0 -> Node0x8bf110;
	Node0x8bf110 -> Node0x8bf180;
	Node0x8bf180 -> Node0x8bf1f0;
	Node0x8bf1f0 -> Node0x8bf260;
	Node0x8bf260 -> Node0x8bf2d0;
	Node0x8bf2d0 -> Node0x8bf340;
	Node0x8bf340 -> Node0x8bf3b0;
	Node0x8bf3b0 -> Node0x8bf420;
	Node0x8bf420 -> Node0x8bf490;
	Node0x8bf490 -> Node0x8bf500;
	Node0x8bf500 -> Node0x8bf570;
	Node0x8bf570 -> Node0x8bf5e0;
	Node0x8bf5e0 -> Node0x8bf650;
	Node0x8bf650 -> Node0x85d9d8;
	Node0x85d9d8 -> Node0x8bf6e0;
	Node0x8bf6e0 -> Node0x8bfb48;
	Node0x8bfb48 -> Node0x8bfca8;
	Node0x8bfca8 -> Node0x8bfd68;
edge [color=red]
	Node0x8bcc58 -> Node0x8bcd68;
	Node0x8bcd68 -> Node0x8bd1c8;
	Node0x8bccd8 -> Node0x8bd2a8;
	Node0x8bd2a8 -> Node0x8bd3c8;
	Node0x8bcc58 -> Node0x8bd600;
	Node0x8bccd8 -> Node0x8bd600;
	Node0x8bcc58 -> Node0x8bd6b8;
	Node0x8bccd8 -> Node0x8be628;
	Node0x8be628 -> Node0x8becb0;
	Node0x8bd6b8 -> Node0x8becb0;
	Node0x8becb0 -> Node0x8bed20;
	Node0x8be628 -> Node0x8bed90;
	Node0x8bed90 -> Node0x8bee00;
	Node0x8bd6b8 -> Node0x8bee70;
	Node0x8bed90 -> Node0x8bee70;
	Node0x8be628 -> Node0x8beee0;
	Node0x8bd6b8 -> Node0x8beee0;
	Node0x8beee0 -> Node0x8bef50;
	Node0x8be628 -> Node0x8befc0;
	Node0x8bd6b8 -> Node0x8befc0;
	Node0x8befc0 -> Node0x8bf030;
	Node0x8bd6b8 -> Node0x8bf0a0;
	Node0x8bed90 -> Node0x8bf0a0;
	Node0x8bf030 -> Node0x8bf110;
	Node0x8bf0a0 -> Node0x8bf180;
	Node0x8becb0 -> Node0x8bf1f0;
	Node0x8be628 -> Node0x8bf260;
	Node0x8bd6b8 -> Node0x8bf260;
	Node0x8bf260 -> Node0x8bf2d0;
	Node0x8bee70 -> Node0x8bf2d0;
	Node0x8bf2d0 -> Node0x8bf340;
	Node0x8bee00 -> Node0x8bf340;
	Node0x8bf340 -> Node0x8bf3b0;
	Node0x8bf030 -> Node0x8bf3b0;
	Node0x8bf3b0 -> Node0x8bf420;
	Node0x8bf0a0 -> Node0x8bf420;
	Node0x8bf420 -> Node0x8bf490;
	Node0x8bef50 -> Node0x8bf490;
	Node0x8bf490 -> Node0x8bf500;
	Node0x8bf110 -> Node0x8bf500;
	Node0x8bf500 -> Node0x8bf570;
	Node0x8bf180 -> Node0x8bf570;
	Node0x8bf570 -> Node0x8bf5e0;
	Node0x8bf1f0 -> Node0x8bf5e0;
	Node0x8bed20 -> Node0x8bf650;
	Node0x8bf5e0 -> Node0x8bf650;
	Node0x8bf650 -> Node0x85d9d8;
	Node0x85d9d8 -> Node0x8bf6e0;
	Node0x8bd2a8 -> Node0x8bfb48;
	Node0x8bcd68 -> Node0x8bfca8;
}
