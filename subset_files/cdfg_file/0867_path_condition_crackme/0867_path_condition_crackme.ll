; ModuleID = '../.././c_source_file/0867_path_condition_crackme.c'
source_filename = "../.././c_source_file/0867_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, %0
  %8 = xor i32 %2, %0
  %9 = and i32 %8, %7
  %10 = xor i32 %5, -1
  %11 = or i32 %10, %4
  %12 = xor i32 %11, -1
  %13 = xor i32 %4, %3
  %14 = or i32 %13, %12
  %15 = add i32 %14, %9
  %16 = and i32 %1, %0
  %17 = xor i32 %16, -1
  %18 = xor i32 %8, -1
  %19 = and i32 %18, %17
  %20 = xor i32 %1, -1
  %21 = or i32 %20, %0
  %22 = and i32 %21, %18
  %23 = xor i32 %2, -1
  %24 = xor i32 %21, -1
  %25 = or i32 %23, %24
  %26 = or i32 %23, %1
  %27 = and i32 %26, %0
  %28 = shl i32 %27, 1
  %29 = add i32 %16, 1
  %30 = xor i32 %2, %1
  %31 = xor i32 %30, -1
  %32 = xor i32 %31, %0
  %33 = and i32 %23, %17
  %34 = xor i32 %0, -1
  %35 = and i32 %20, %2
  %36 = and i32 %35, %34
  %37 = or i32 %30, %34
  %38 = xor i32 %36, %37
  %39 = shl i32 %8, 1
  %40 = xor i32 %21, %2
  %41 = and i32 %2, %1
  %42 = and i32 %41, %0
  %43 = and i32 %30, %34
  %44 = xor i32 %42, -1
  %45 = xor i32 %43, %44
  %46 = and i32 %23, %1
  %47 = xor i32 %46, -1
  %48 = or i32 %47, %0
  %49 = or i32 %2, %1
  %50 = and i32 %49, %34
  %51 = or i32 %42, %50
  %52 = xor i32 %7, -1
  %53 = or i32 %23, %52
  %54 = and i32 %23, %52
  %55 = or i32 %46, %34
  %56 = xor i32 %30, %0
  %57 = xor i32 %56, -1
  %58 = or i32 %42, %57
  %59 = and i32 %20, %0
  %60 = xor i32 %59, %2
  %61 = or i32 %49, %0
  %62 = and i32 %2, %0
  %63 = or i32 %62, %52
  %64 = and i32 %18, %20
  %65 = xor i32 %26, %0
  %66 = and i32 %47, %0
  %67 = and i32 %31, %17
  %68 = or i32 %1, %0
  %69 = xor i32 %68, -1
  %70 = or i32 %30, %69
  %71 = and i32 %7, %23
  %72 = or i32 %8, %52
  %73 = or i32 %2, %0
  %74 = and i32 %73, %1
  %75 = xor i32 %62, -1
  %76 = and i32 %75, %52
  %77 = xor i32 %24, %2
  %78 = xor i32 %73, -1
  %79 = or i32 %78, %52
  %80 = xor i32 %68, %2
  %81 = or i32 %16, %23
  %82 = xor i32 %62, %21
  %83 = or i32 %46, %59
  %84 = xor i32 %42, %56
  %85 = and i32 %75, %1
  %86 = and i32 %21, %23
  %87 = and i32 %75, %20
  %88 = xor i32 %59, %47
  %89 = shl i32 %88, 1
  %90 = and i32 %68, %2
  %91 = and i32 %8, %68
  %92 = or i32 %16, %18
  %93 = and i32 %35, %0
  %94 = or i32 %30, %0
  %95 = xor i32 %94, -1
  %96 = or i32 %93, %95
  %97 = xor i32 %16, %2
  %98 = and i32 %41, %34
  %99 = and i32 %49, %0
  %100 = or i32 %98, %99
  %101 = xor i32 %49, %0
  %102 = or i32 %42, %101
  %103 = and i32 %30, %21
  %104 = or i32 %18, %1
  %105 = xor i32 %59, -1
  %106 = and i32 %23, %105
  %107 = and i32 %23, %0
  %108 = xor i32 %107, -1
  %109 = and i32 %7, %108
  %110 = xor i32 %62, %68
  %111 = or i32 %8, %69
  %112 = or i32 %20, %2
  %113 = and i32 %112, %34
  %114 = or i32 %93, %113
  %115 = xor i32 %113, -1
  %116 = xor i32 %93, %115
  %117 = or i32 %26, %0
  %118 = or i32 %78, %20
  %119 = or i32 %62, %46
  %120 = or i32 %59, %31
  %121 = or i32 %42, %43
  %122 = xor i32 %105, %2
  %123 = xor i32 %46, %0
  %124 = shl i32 %123, 1
  %125 = or i32 %49, %34
  %126 = or i32 %16, %78
  %127 = or i32 %30, %59
  %128 = or i32 %78, %1
  %129 = xor i32 %62, %47
  %130 = shl i32 %129, 1
  %131 = and i32 %26, %34
  %132 = xor i32 %93, %57
  %133 = shl i32 %132, 1
  %134 = or i32 %23, %0
  %135 = and i32 %134, %20
  %136 = or i32 %52, %2
  %137 = or i32 %31, %34
  %138 = add i32 %68, 1
  %139 = and i32 %68, %18
  %140 = or i32 %62, %1
  %141 = xor i32 %17, %2
  %142 = or i32 %8, %7
  %143 = xor i32 %108, %1
  %144 = or i32 %8, %16
  %145 = or i32 %7, %2
  %146 = or i32 %18, %52
  %147 = xor i32 %49, -1
  %148 = or i32 %62, %147
  %149 = xor i32 %134, -1
  %150 = or i32 %149, %20
  %151 = and i32 %30, %0
  %152 = or i32 %98, %151
  %153 = and i32 %30, %68
  %154 = or i32 %69, %2
  %155 = xor i32 %75, %1
  %156 = and i32 %105, %2
  %157 = or i32 %41, %34
  %158 = xor i32 %69, %2
  %159 = shl i32 %158, 1
  %160 = and i32 %8, %21
  %161 = and i32 %108, %52
  %162 = or i32 %31, %0
  %163 = xor i32 %41, -1
  %164 = xor i32 %163, %0
  %165 = shl i32 %164, 1
  %166 = and i32 %8, %1
  %167 = and i32 %8, %17
  %168 = shl i32 %167, 1
  %169 = and i32 %18, %1
  %170 = and i32 %47, %34
  %171 = or i32 %24, %2
  %172 = or i32 %147, %34
  %173 = or i32 %59, %23
  %174 = and i32 %52, %2
  %175 = shl i32 %16, 1
  %176 = or i32 %62, %20
  %177 = and i32 %31, %34
  %178 = or i32 %30, %16
  %179 = and i32 %8, %52
  %180 = shl i32 %179, 1
  %181 = or i32 %163, %34
  %182 = or i32 %18, %20
  %183 = or i32 %7, %23
  %184 = or i32 %107, %20
  %185 = xor i32 %134, %1
  %186 = shl i32 %185, 2
  %187 = and i32 %73, %7
  %188 = or i32 %23, %69
  %189 = or i32 %163, %0
  %190 = shl i32 %189, 1
  %191 = add i32 %62, 1
  %192 = add i32 %49, 1
  %193 = add i32 %8, 1
  %194 = and i32 %68, %23
  %195 = and i32 %21, %2
  %196 = or i32 %16, %2
  %197 = and i32 %134, %7
  %198 = xor i32 %50, %44
  %199 = xor i32 %93, %94
  %200 = and i32 %134, %52
  %201 = or i32 %18, %69
  %202 = and i32 %8, %105
  %203 = or i32 %16, %147
  %204 = and i32 %73, %52
  %205 = or i32 %30, %24
  %206 = and i32 %7, %2
  %207 = or i32 %41, %0
  %208 = or i32 %149, %52
  %209 = or i32 %16, %149
  %210 = xor i32 %26, -1
  %211 = or i32 %210, %34
  %212 = xor i32 %107, %163
  %213 = and i32 %112, %0
  %214 = or i32 %36, %213
  %215 = shl i32 %163, 1
  %216 = or i32 %62, %24
  %217 = or i32 %46, %0
  %218 = shl i32 %217, 1
  %219 = xor i32 %213, 2147483647
  %220 = xor i32 %219, %36
  %221 = or i32 %47, %34
  %222 = and i32 %108, %20
  %223 = xor i32 %62, %1
  %224 = xor i32 %151, -1
  %225 = xor i32 %98, %224
  %226 = or i32 %8, %59
  %227 = or i32 %107, %41
  %228 = xor i32 %41, %0
  %229 = or i32 %210, %0
  %230 = shl i32 %229, 1
  %231 = xor i32 %134, %16
  %232 = or i32 %93, %56
  %233 = or i32 %7, %78
  %234 = and i32 %7, %18
  %235 = shl i32 %234, 1
  %236 = xor i32 %62, %49
  %237 = add i32 %7, 1
  %238 = or i32 %59, %18
  %239 = or i32 %107, %7
  %240 = xor i32 %147, %0
  %241 = or i32 %31, %24
  %242 = and i32 %7, %75
  %243 = shl i32 %242, 1
  %244 = and i32 %134, %1
  %245 = xor i32 %101, %44
  %246 = shl i32 %108, 1
  %247 = or i32 %107, %210
  %248 = or i32 %149, %1
  %249 = or i32 %8, %24
  %250 = or i32 %7, %18
  %251 = xor i32 %49, %16
  %252 = xor i32 %37, -1
  %253 = or i32 %36, %252
  %254 = and i32 %8, %20
  %255 = or i32 %16, %31
  %256 = and i32 %68, %31
  %257 = or i32 %31, %69
  %258 = or i32 %107, %52
  %259 = and i32 %18, %52
  %260 = xor i32 %107, %26
  %261 = and i32 %31, %0
  %262 = and i32 %147, %34
  %263 = mul i32 %262, 18
  %264 = and i32 %46, %34
  %265 = mul i32 %264, 9
  %266 = and i32 %147, %0
  %267 = mul i32 %266, 12
  %268 = and i32 %46, %0
  %269 = mul i32 %268, 11
  %270 = and i32 %210, %34
  %271 = mul i32 %98, 14
  %272 = and i32 %210, %0
  %273 = xor i32 %3, -1
  %274 = or i32 %273, %4
  %275 = xor i32 %274, -1
  %276 = or i32 %275, %5
  %277 = shl i32 %276, 1
  %278 = and i32 %10, %3
  %279 = and i32 %273, %4
  %280 = xor i32 %279, -1
  %281 = and i32 %280, %5
  %282 = xor i32 %13, -1
  %283 = or i32 %12, %282
  %284 = and i32 %11, %3
  %285 = shl i32 %284, 1
  %286 = and i32 %5, %4
  %287 = or i32 %5, %3
  %288 = xor i32 %287, -1
  %289 = or i32 %286, %288
  %290 = shl i32 %289, 2
  %291 = and i32 %4, %3
  %292 = xor i32 %5, %4
  %293 = xor i32 %292, -1
  %294 = or i32 %291, %293
  %295 = and i32 %10, %4
  %296 = xor i32 %295, -1
  %297 = and i32 %13, %296
  %298 = xor i32 %5, %3
  %299 = xor i32 %298, -1
  %300 = or i32 %291, %299
  %301 = xor i32 %4, -1
  %302 = or i32 %287, %301
  %303 = and i32 %5, %3
  %304 = and i32 %303, %4
  %305 = and i32 %298, %301
  %306 = xor i32 %304, -1
  %307 = xor i32 %305, %306
  %308 = or i32 %279, %293
  %309 = xor i32 %303, -1
  %310 = xor i32 %279, %309
  %311 = shl i32 %310, 1
  %312 = xor i32 %298, %4
  %313 = xor i32 %312, -1
  %314 = or i32 %304, %313
  %315 = and i32 %11, %273
  %316 = and i32 %298, %280
  %317 = and i32 %273, %5
  %318 = and i32 %317, %301
  %319 = or i32 %298, %301
  %320 = xor i32 %318, %319
  %321 = shl i32 %320, 1
  %322 = xor i32 %11, %291
  %323 = or i32 %286, %275
  %324 = or i32 %4, %3
  %325 = xor i32 %324, -1
  %326 = xor i32 %325, %5
  %327 = or i32 %10, %3
  %328 = xor i32 %327, %4
  %329 = and i32 %287, %301
  %330 = or i32 %304, %329
  %331 = or i32 %5, %4
  %332 = xor i32 %331, -1
  %333 = and i32 %317, %4
  %334 = or i32 %298, %4
  %335 = xor i32 %334, -1
  %336 = or i32 %333, %335
  %337 = or i32 %295, %13
  %338 = or i32 %278, %301
  %339 = or i32 %292, %3
  %340 = and i32 %292, %273
  %341 = and i32 %10, %280
  %342 = or i32 %298, %279
  %343 = xor i32 %288, %4
  %344 = or i32 %327, %4
  %345 = and i32 %299, %280
  %346 = shl i32 %345, 1
  %347 = xor i32 %299, %4
  %348 = xor i32 %331, %291
  %349 = and i32 %296, %3
  %350 = and i32 %292, %282
  %351 = or i32 %286, %282
  %352 = shl i32 %351, 1
  %353 = and i32 %287, %4
  %354 = and i32 %293, %282
  %355 = or i32 %325, %5
  %356 = xor i32 %12, %3
  %357 = shl i32 %356, 1
  %358 = or i32 %291, %5
  %359 = or i32 %291, %12
  %360 = shl i32 %359, 1
  %361 = or i32 %279, %10
  %362 = or i32 %303, %301
  %363 = and i32 %331, %273
  %364 = or i32 %299, %325
  %365 = add i32 %274, 1
  %366 = or i32 %293, %282
  %367 = or i32 %292, %275
  %368 = xor i32 %278, -1
  %369 = or i32 %368, %301
  %370 = xor i32 %291, -1
  %371 = xor i32 %274, %5
  %372 = or i32 %291, %332
  %373 = or i32 %10, %325
  %374 = and i32 %293, %273
  %375 = add i32 %303, 1
  %376 = xor i32 %331, %3
  %377 = or i32 %292, %279
  %378 = and i32 %303, %301
  %379 = and i32 %298, %4
  %380 = xor i32 %379, 1073741823
  %381 = xor i32 %380, %378
  %382 = shl i32 %381, 2
  %383 = and i32 %11, %13
  %384 = xor i32 %327, -1
  %385 = or i32 %291, %384
  %386 = and i32 %274, %5
  %387 = and i32 %324, %10
  %388 = xor i32 %324, %5
  %389 = and i32 %292, %274
  %390 = xor i32 %286, %274
  %391 = and i32 %368, %301
  %392 = xor i32 %278, %4
  %393 = or i32 %273, %5
  %394 = and i32 %393, %4
  %395 = xor i32 %394, 2147483647
  %396 = xor i32 %395, %318
  %397 = shl i32 %396, 1
  %398 = xor i32 %287, %4
  %399 = and i32 %292, %324
  %400 = or i32 %384, %301
  %401 = xor i32 %286, %368
  %402 = and i32 %298, %274
  %403 = shl i32 %402, 1
  %404 = xor i32 %296, %3
  %405 = add i32 %5, 1
  %406 = and i32 %331, %3
  %407 = or i32 %286, %273
  %408 = or i32 %293, %273
  %409 = shl i32 %408, 2
  %410 = or i32 %368, %4
  %411 = add i32 %278, 1
  %412 = xor i32 %393, %4
  %413 = or i32 %333, %412
  %414 = xor i32 %286, %3
  %415 = shl i32 %384, 1
  %416 = and i32 %331, %282
  %417 = or i32 %293, %275
  %418 = xor i32 %295, %3
  %419 = and i32 %293, %3
  %420 = xor i32 %384, %4
  %421 = add i32 %3, 1
  %422 = or i32 %278, %4
  %423 = xor i32 %291, %5
  %424 = shl i32 %423, 1
  %425 = or i32 %293, %3
  %426 = shl i32 %425, 1
  %427 = xor i32 %286, -1
  %428 = xor i32 %427, %3
  %429 = and i32 %427, %273
  %430 = or i32 %286, %325
  %431 = or i32 %288, %301
  %432 = or i32 %13, %293
  %433 = xor i32 %279, %368
  %434 = and i32 %298, %370
  %435 = and i32 %327, %4
  %436 = or i32 %299, %301
  %437 = or i32 %279, %299
  %438 = shl i32 %379, 1
  %439 = xor i32 %275, %5
  %440 = or i32 %295, %384
  %441 = and i32 %309, %4
  %442 = and i32 %274, %299
  %443 = xor i32 %286, %324
  %444 = or i32 %295, %303
  %445 = or i32 %278, %279
  %446 = and i32 %10, %282
  %447 = xor i32 %286, %287
  %448 = or i32 %332, %282
  %449 = or i32 %291, %10
  %450 = or i32 %13, %10
  %451 = and i32 %309, %301
  %452 = shl i32 %451, 1
  %453 = or i32 %298, %275
  %454 = or i32 %309, %4
  %455 = xor i32 %295, %309
  %456 = or i32 %384, %4
  %457 = or i32 %295, %3
  %458 = or i32 %304, %398
  %459 = or i32 %291, %288
  %460 = xor i32 %303, %4
  %461 = xor i32 %327, %291
  %462 = or i32 %304, %305
  %463 = and i32 %331, %13
  %464 = or i32 %299, %275
  %465 = or i32 %288, %4
  %466 = and i32 %292, %370
  %467 = xor i32 %398, %306
  %468 = and i32 %296, %273
  %469 = xor i32 %333, %334
  %470 = shl i32 %469, 1
  %471 = and i32 %13, %10
  %472 = and i32 %292, %280
  %473 = or i32 %293, %325
  %474 = xor i32 %412, 2147483647
  %475 = xor i32 %474, %333
  %476 = shl i32 %475, 1
  %477 = and i32 %324, %293
  %478 = xor i32 %304, %312
  %479 = xor i32 %368, %4
  %480 = and i32 %393, %301
  %481 = or i32 %333, %480
  %482 = and i32 %296, %282
  %483 = or i32 %332, %273
  %484 = or i32 %13, %332
  %485 = shl i32 %484, 2
  %486 = or i32 %279, %5
  %487 = or i32 %295, %273
  %488 = add i32 %295, 1
  %489 = and i32 %427, %282
  %490 = shl i32 %489, 2
  %491 = or i32 %292, %325
  %492 = or i32 %287, %4
  %493 = or i32 %292, %291
  %494 = xor i32 %280, %5
  %495 = or i32 %286, %278
  %496 = shl i32 %495, 1
  %497 = or i32 %292, %282
  %498 = shl i32 %497, 1
  %499 = xor i32 %370, %5
  %500 = or i32 %299, %4
  %501 = or i32 %303, %279
  %502 = and i32 %13, %293
  %503 = and i32 %13, %5
  %504 = or i32 %282, %5
  %505 = or i32 %378, %379
  %506 = and i32 %292, %13
  %507 = and i32 %298, %324
  %508 = or i32 %298, %325
  %509 = and i32 %427, %3
  %510 = xor i32 %11, %3
  %511 = xor i32 %329, 2147483647
  %512 = xor i32 %511, %304
  %513 = shl i32 %512, 1
  %514 = and i32 %274, %10
  %515 = xor i32 %333, %313
  %516 = xor i32 %353, -1
  %517 = xor i32 %378, %516
  %518 = or i32 %12, %3
  %519 = and i32 %327, %301
  %520 = or i32 %303, %4
  %521 = xor i32 %480, -1
  %522 = xor i32 %333, %521
  %523 = and i32 %292, %3
  %524 = or i32 %286, %13
  %525 = add i32 %11, 1
  %526 = or i32 %10, %275
  %527 = or i32 %309, %301
  %528 = and i32 %293, %280
  %529 = or i32 %292, %13
  %530 = or i32 %295, %282
  %531 = or i32 %286, %3
  %532 = or i32 %13, %5
  %533 = or i32 %333, %312
  %534 = and i32 %282, %5
  %535 = or i32 %12, %273
  %536 = and i32 %10, %370
  %537 = and i32 %324, %5
  %538 = and i32 %299, %370
  %539 = or i32 %318, %394
  %540 = and i32 %370, %5
  %541 = or i32 %327, %301
  %542 = xor i32 %287, %291
  %543 = xor i32 %319, 2147483647
  %544 = or i32 %543, %318
  %545 = shl i32 %544, 1
  %546 = shl i32 %427, 1
  %547 = and i32 %299, %4
  %548 = and i32 %13, %427
  %549 = or i32 %298, %291
  %550 = xor i32 %332, %3
  %551 = shl i32 %550, 1
  %552 = and i32 %324, %299
  %553 = and i32 %299, %301
  %554 = shl i32 %553, 1
  %555 = and i32 %274, %293
  %556 = and i32 %368, %4
  %557 = and i32 %293, %370
  %558 = or i32 %10, %282
  %559 = xor i32 %295, %327
  %560 = xor i32 %309, %4
  %561 = and i32 %288, %301
  %562 = mul i32 %561, 7
  %563 = and i32 %278, %301
  %564 = shl i32 %563, 2
  %565 = and i32 %288, %4
  %566 = and i32 %278, %4
  %567 = and i32 %384, %301
  %568 = and i32 %384, %4
  %569 = mul i32 %568, 23
  %570 = shl i32 %304, 3
  %571 = add i32 %59, -1
  %572 = add i32 %571, %174
  %573 = add i32 %572, %86
  %574 = add i32 %573, %53
  %575 = add i32 %574, %25
  %576 = add i32 %575, %249
  %577 = add i32 %576, %244
  %578 = add i32 %577, %216
  %579 = add i32 %578, %211
  %580 = add i32 %579, %184
  %581 = add i32 %580, %162
  %582 = add i32 %581, %148
  %583 = add i32 %582, %143
  %584 = add i32 %583, %125
  %585 = add i32 %584, %103
  %586 = add i32 %585, %70
  %587 = add i32 %586, %280
  %588 = add i32 %587, %282
  %589 = add i32 %588, %51
  %590 = add i32 %589, %558
  %591 = add i32 %590, %327
  %592 = add i32 %591, %292
  %593 = add i32 %592, %514
  %594 = add i32 %593, %288
  %595 = add i32 %594, %386
  %596 = add i32 %595, %220
  %597 = add i32 %596, %378
  %598 = add i32 %597, %552
  %599 = add i32 %598, %541
  %600 = add i32 %599, %509
  %601 = add i32 %600, %508
  %602 = add i32 %601, %506
  %603 = add i32 %602, %500
  %604 = add i32 %603, %468
  %605 = add i32 %604, %434
  %606 = add i32 %605, %414
  %607 = add i32 %606, %305
  %608 = add i32 %607, %322
  %609 = add i32 %608, %481
  %610 = add i32 %609, %533
  %611 = shl i32 %610, 1
  %612 = sub i32 %3, %204
  %613 = sub i32 %612, %181
  %614 = sub i32 %613, %274
  %615 = sub i32 %614, %245
  %616 = add i32 %615, %11
  %617 = sub i32 %616, %295
  %618 = add i32 %617, %457
  %619 = add i32 %618, %538
  %620 = mul i32 %619, 5
  %621 = sub i32 %101, %30
  %622 = add i32 %621, %198
  %623 = sub i32 %622, %102
  %624 = add i32 %623, %278
  %625 = add i32 %624, %419
  %626 = sub i32 %625, %444
  %627 = add i32 %626, %406
  %628 = sub i32 %627, %404
  %629 = mul i32 %628, 3
  %630 = sub i32 %272, %565
  %631 = add i32 %630, %566
  %632 = mul i32 %631, 15
  %633 = add i32 %270, %42
  %634 = add i32 %633, %567
  %635 = mul i32 %634, 21
  %636 = add i32 %473, %91
  %637 = shl i32 %636, 2
  %638 = sub i32 -6, %0
  %639 = add i32 %638, %29
  %640 = add i32 %639, %23
  %641 = add i32 %640, %21
  %642 = add i32 %641, %138
  %643 = sub i32 %642, %2
  %644 = add i32 %643, %105
  %645 = add i32 %644, %237
  %646 = add i32 %645, %33
  %647 = sub i32 %646, %40
  %648 = sub i32 %647, %54
  %649 = sub i32 %648, %60
  %650 = sub i32 %649, %71
  %651 = sub i32 %650, %77
  %652 = add i32 %651, %80
  %653 = sub i32 %652, %81
  %654 = add i32 %653, %90
  %655 = sub i32 %654, %97
  %656 = sub i32 %655, %106
  %657 = sub i32 %656, %62
  %658 = sub i32 %657, %122
  %659 = add i32 %658, %136
  %660 = sub i32 %659, %141
  %661 = add i32 %660, %145
  %662 = sub i32 %661, %49
  %663 = sub i32 %662, %154
  %664 = add i32 %663, %156
  %665 = add i32 %664, %107
  %666 = add i32 %665, %171
  %667 = add i32 %666, %173
  %668 = sub i32 %667, %175
  %669 = sub i32 %668, %183
  %670 = add i32 %669, %188
  %671 = add i32 %670, %191
  %672 = add i32 %671, %192
  %673 = add i32 %672, %193
  %674 = add i32 %673, %194
  %675 = sub i32 %674, %195
  %676 = sub i32 %675, %196
  %677 = add i32 %676, %206
  %678 = sub i32 %677, %134
  %679 = sub i32 %678, %41
  %680 = add i32 %679, %421
  %681 = sub i32 %680, %22
  %682 = sub i32 %681, %19
  %683 = add i32 %682, %32
  %684 = sub i32 %683, %39
  %685 = add i32 %684, %48
  %686 = add i32 %685, %55
  %687 = add i32 %686, %61
  %688 = add i32 %687, %63
  %689 = add i32 %688, %64
  %690 = add i32 %689, %65
  %691 = add i32 %690, %66
  %692 = sub i32 %691, %67
  %693 = sub i32 %692, %72
  %694 = sub i32 %693, %74
  %695 = sub i32 %694, %76
  %696 = sub i32 %695, %79
  %697 = sub i32 %696, %82
  %698 = sub i32 %697, %83
  %699 = sub i32 %698, %85
  %700 = sub i32 %699, %87
  %701 = sub i32 %700, %92
  %702 = sub i32 %701, %104
  %703 = add i32 %702, %109
  %704 = add i32 %703, %110
  %705 = sub i32 %704, %111
  %706 = sub i32 %705, %117
  %707 = sub i32 %706, %118
  %708 = add i32 %707, %119
  %709 = add i32 %708, %120
  %710 = add i32 %709, %99
  %711 = sub i32 %710, %56
  %712 = sub i32 %711, %126
  %713 = sub i32 %712, %127
  %714 = add i32 %713, %128
  %715 = sub i32 %714, %131
  %716 = sub i32 %715, %135
  %717 = sub i32 %716, %137
  %718 = add i32 %717, %139
  %719 = sub i32 %718, %140
  %720 = sub i32 %719, %142
  %721 = sub i32 %720, %144
  %722 = add i32 %721, %146
  %723 = sub i32 %722, %150
  %724 = add i32 %723, %153
  %725 = add i32 %724, %155
  %726 = sub i32 %725, %157
  %727 = sub i32 %726, %159
  %728 = sub i32 %727, %160
  %729 = sub i32 %728, %161
  %730 = add i32 %729, %166
  %731 = sub i32 %730, %169
  %732 = add i32 %731, %170
  %733 = sub i32 %732, %172
  %734 = sub i32 %733, %176
  %735 = add i32 %734, %177
  %736 = add i32 %735, %178
  %737 = sub i32 %736, %182
  %738 = add i32 %737, %187
  %739 = sub i32 %738, %37
  %740 = add i32 %739, %197
  %741 = sub i32 %740, %200
  %742 = sub i32 %741, %201
  %743 = sub i32 %742, %202
  %744 = add i32 %743, %203
  %745 = sub i32 %744, %205
  %746 = sub i32 %745, %207
  %747 = add i32 %746, %208
  %748 = add i32 %747, %209
  %749 = sub i32 %748, %212
  %750 = sub i32 %749, %215
  %751 = add i32 %750, %151
  %752 = sub i32 %751, %221
  %753 = add i32 %752, %222
  %754 = sub i32 %753, %223
  %755 = sub i32 %754, %226
  %756 = sub i32 %755, %227
  %757 = sub i32 %756, %228
  %758 = add i32 %757, %231
  %759 = add i32 %758, %43
  %760 = add i32 %759, %233
  %761 = add i32 %760, %236
  %762 = sub i32 %761, %238
  %763 = add i32 %762, %239
  %764 = add i32 %763, %240
  %765 = add i32 %764, %241
  %766 = sub i32 %765, %246
  %767 = sub i32 %766, %247
  %768 = sub i32 %767, %248
  %769 = sub i32 %768, %250
  %770 = add i32 %769, %251
  %771 = add i32 %770, %254
  %772 = add i32 %771, %255
  %773 = sub i32 %772, %256
  %774 = add i32 %773, %257
  %775 = add i32 %774, %258
  %776 = sub i32 %775, %259
  %777 = sub i32 %776, %260
  %778 = sub i32 %777, %261
  %779 = sub i32 %778, %28
  %780 = add i32 %779, %38
  %781 = sub i32 %780, %45
  %782 = add i32 %781, %58
  %783 = add i32 %782, %84
  %784 = sub i32 %783, %89
  %785 = sub i32 %784, %96
  %786 = sub i32 %785, %100
  %787 = sub i32 %786, %114
  %788 = add i32 %787, %116
  %789 = sub i32 %788, %121
  %790 = sub i32 %789, %124
  %791 = sub i32 %790, %130
  %792 = sub i32 %791, %152
  %793 = sub i32 %792, %165
  %794 = sub i32 %793, %168
  %795 = sub i32 %794, %180
  %796 = sub i32 %795, %186
  %797 = sub i32 %796, %190
  %798 = sub i32 %797, %199
  %799 = add i32 %798, %214
  %800 = sub i32 %799, %218
  %801 = add i32 %800, %225
  %802 = sub i32 %801, %230
  %803 = add i32 %802, %232
  %804 = sub i32 %803, %235
  %805 = sub i32 %804, %243
  %806 = add i32 %805, %253
  %807 = add i32 %806, %263
  %808 = add i32 %807, %265
  %809 = add i32 %808, %267
  %810 = add i32 %809, %269
  %811 = add i32 %810, %271
  %812 = add i32 %811, %13
  %813 = add i32 %812, %365
  %814 = add i32 %813, %279
  %815 = add i32 %814, %405
  %816 = add i32 %815, %325
  %817 = sub i32 %816, %5
  %818 = sub i32 %817, %324
  %819 = sub i32 %818, %133
  %820 = sub i32 %819, %281
  %821 = sub i32 %820, %326
  %822 = sub i32 %821, %286
  %823 = sub i32 %822, %341
  %824 = add i32 %823, %299
  %825 = add i32 %824, %355
  %826 = sub i32 %825, %358
  %827 = add i32 %826, %361
  %828 = add i32 %827, %371
  %829 = add i32 %828, %373
  %830 = add i32 %829, %375
  %831 = add i32 %830, %387
  %832 = sub i32 %831, %388
  %833 = add i32 %832, %411
  %834 = sub i32 %833, %439
  %835 = sub i32 %834, %446
  %836 = add i32 %835, %449
  %837 = sub i32 %836, %450
  %838 = sub i32 %837, %287
  %839 = add i32 %838, %471
  %840 = sub i32 %839, %303
  %841 = sub i32 %840, %486
  %842 = add i32 %841, %488
  %843 = add i32 %842, %494
  %844 = add i32 %843, %499
  %845 = sub i32 %844, %503
  %846 = sub i32 %845, %504
  %847 = add i32 %846, %525
  %848 = add i32 %847, %526
  %849 = sub i32 %848, %532
  %850 = sub i32 %849, %534
  %851 = add i32 %850, %536
  %852 = sub i32 %851, %298
  %853 = sub i32 %852, %537
  %854 = add i32 %853, %293
  %855 = add i32 %854, %540
  %856 = sub i32 %855, %277
  %857 = add i32 %856, %283
  %858 = add i32 %857, %294
  %859 = sub i32 %858, %297
  %860 = sub i32 %859, %300
  %861 = sub i32 %860, %302
  %862 = sub i32 %861, %308
  %863 = add i32 %862, %315
  %864 = sub i32 %863, %316
  %865 = add i32 %864, %323
  %866 = sub i32 %865, %328
  %867 = sub i32 %866, %337
  %868 = sub i32 %867, %338
  %869 = sub i32 %868, %339
  %870 = add i32 %869, %340
  %871 = sub i32 %870, %342
  %872 = sub i32 %871, %343
  %873 = add i32 %872, %344
  %874 = sub i32 %873, %347
  %875 = add i32 %874, %334
  %876 = add i32 %875, %348
  %877 = sub i32 %876, %349
  %878 = sub i32 %877, %350
  %879 = add i32 %878, %353
  %880 = sub i32 %879, %354
  %881 = add i32 %880, %362
  %882 = sub i32 %881, %363
  %883 = add i32 %882, %364
  %884 = add i32 %883, %366
  %885 = add i32 %884, %367
  %886 = add i32 %885, %369
  %887 = sub i32 %886, %372
  %888 = add i32 %887, %374
  %889 = add i32 %888, %376
  %890 = sub i32 %889, %377
  %891 = add i32 %890, %383
  %892 = sub i32 %891, %385
  %893 = add i32 %892, %389
  %894 = add i32 %893, %390
  %895 = sub i32 %894, %391
  %896 = add i32 %895, %392
  %897 = add i32 %896, %398
  %898 = add i32 %897, %399
  %899 = sub i32 %898, %400
  %900 = add i32 %899, %401
  %901 = sub i32 %900, %407
  %902 = sub i32 %901, %410
  %903 = sub i32 %902, %319
  %904 = sub i32 %903, %415
  %905 = sub i32 %904, %416
  %906 = sub i32 %905, %417
  %907 = sub i32 %906, %418
  %908 = add i32 %907, %420
  %909 = sub i32 %908, %422
  %910 = sub i32 %909, %424
  %911 = add i32 %910, %428
  %912 = sub i32 %911, %329
  %913 = add i32 %912, %429
  %914 = sub i32 %913, %430
  %915 = add i32 %914, %431
  %916 = add i32 %915, %432
  %917 = add i32 %916, %433
  %918 = add i32 %917, %435
  %919 = sub i32 %918, %436
  %920 = add i32 %919, %437
  %921 = sub i32 %920, %440
  %922 = add i32 %921, %441
  %923 = sub i32 %922, %442
  %924 = add i32 %923, %443
  %925 = sub i32 %924, %445
  %926 = sub i32 %925, %447
  %927 = add i32 %926, %448
  %928 = sub i32 %927, %453
  %929 = add i32 %928, %454
  %930 = sub i32 %929, %455
  %931 = add i32 %930, %456
  %932 = sub i32 %931, %459
  %933 = sub i32 %932, %460
  %934 = sub i32 %933, %461
  %935 = add i32 %934, %463
  %936 = add i32 %935, %464
  %937 = add i32 %936, %465
  %938 = add i32 %937, %466
  %939 = sub i32 %938, %472
  %940 = sub i32 %939, %477
  %941 = add i32 %940, %479
  %942 = add i32 %941, %482
  %943 = sub i32 %942, %483
  %944 = add i32 %943, %487
  %945 = add i32 %944, %491
  %946 = add i32 %945, %492
  %947 = sub i32 %946, %493
  %948 = add i32 %947, %501
  %949 = add i32 %948, %502
  %950 = sub i32 %949, %507
  %951 = add i32 %950, %510
  %952 = add i32 %951, %518
  %953 = add i32 %952, %519
  %954 = sub i32 %953, %520
  %955 = sub i32 %954, %523
  %956 = sub i32 %955, %524
  %957 = add i32 %956, %527
  %958 = sub i32 %957, %528
  %959 = sub i32 %958, %529
  %960 = add i32 %959, %530
  %961 = add i32 %960, %531
  %962 = add i32 %961, %312
  %963 = sub i32 %962, %535
  %964 = add i32 %963, %542
  %965 = sub i32 %964, %546
  %966 = sub i32 %965, %547
  %967 = sub i32 %966, %548
  %968 = sub i32 %967, %549
  %969 = sub i32 %968, %555
  %970 = add i32 %969, %556
  %971 = sub i32 %970, %557
  %972 = sub i32 %971, %559
  %973 = sub i32 %972, %560
  %974 = sub i32 %973, %285
  %975 = sub i32 %974, %290
  %976 = sub i32 %975, %307
  %977 = sub i32 %976, %311
  %978 = add i32 %977, %314
  %979 = sub i32 %978, %330
  %980 = sub i32 %979, %336
  %981 = sub i32 %980, %346
  %982 = sub i32 %981, %352
  %983 = sub i32 %982, %357
  %984 = sub i32 %983, %360
  %985 = sub i32 %984, %403
  %986 = sub i32 %985, %409
  %987 = add i32 %986, %413
  %988 = sub i32 %987, %426
  %989 = sub i32 %988, %438
  %990 = sub i32 %989, %452
  %991 = add i32 %990, %458
  %992 = add i32 %991, %462
  %993 = add i32 %992, %467
  %994 = sub i32 %993, %478
  %995 = sub i32 %994, %485
  %996 = sub i32 %995, %490
  %997 = sub i32 %996, %496
  %998 = sub i32 %997, %498
  %999 = add i32 %998, %505
  %1000 = sub i32 %999, %515
  %1001 = add i32 %1000, %517
  %1002 = sub i32 %1001, %522
  %1003 = add i32 %1002, %539
  %1004 = sub i32 %1003, %551
  %1005 = sub i32 %1004, %554
  %1006 = add i32 %1005, %562
  %1007 = sub i32 %1006, %564
  %1008 = add i32 %1007, %569
  %1009 = add i32 %1008, %570
  %1010 = sub i32 %1009, %321
  %1011 = sub i32 %1010, %470
  %1012 = add i32 %1011, %637
  %1013 = sub i32 %1012, %382
  %1014 = sub i32 %1013, %397
  %1015 = sub i32 %1014, %476
  %1016 = sub i32 %1015, %513
  %1017 = sub i32 %1016, %545
  %1018 = add i32 %1017, %632
  %1019 = add i32 %1018, %635
  %1020 = add i32 %1019, %620
  %1021 = add i32 %1020, %629
  %1022 = add i32 %1021, %611
  %1023 = icmp eq i32 %15, %1022
  %1024 = select i1 %1023, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1025 = tail call i32 @puts(i8* nonnull dereferenceable(1) %1024)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
