digraph "DFG for'crackme' function" {
	Node0x15f0710[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x15f0d90[shape=record, label="  %6 = add i32 %1, 1"];
	Node0x15f0e00[shape=record, label="  %7 = add i32 %6, %5"];
	Node0x15f0e70[shape=record, label="  %8 = sub i32 %7, %3"];
	Node0x15f0f10[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x15f0fb0[shape=record, label="  %10 = shl i32 %5, 2"];
	Node0x15f1050[shape=record, label="  %11 = xor i32 %10, -4"];
	Node0x15f10c0[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x15f1130[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x15f11d0[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x15f1240[shape=record, label="  %15 = and i32 %9, %1"];
	Node0x15f12b0[shape=record, label="  %16 = or i32 %9, %1"];
	Node0x15f1320[shape=record, label="  %17 = or i32 %2, %1"];
	Node0x15f1390[shape=record, label="  %18 = shl i32 %16, 1"];
	Node0x15f1400[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x15f1470[shape=record, label="  %20 = shl i32 %15, 2"];
	Node0x15f14e0[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x15f1550[shape=record, label="  %22 = or i32 %3, %0"];
	Node0x15f15c0[shape=record, label="  %23 = xor i32 %0, -1"];
	Node0x15f1630[shape=record, label="  %24 = and i32 %23, %3"];
	Node0x15f16a0[shape=record, label="  %25 = or i32 %23, %3"];
	Node0x15f1710[shape=record, label="  %26 = xor i32 %3, %0"];
	Node0x15f1780[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x15f1820[shape=record, label="  %28 = mul i32 %21, -5"];
	Node0x15f1890[shape=record, label="  %29 = sub i32 %12, %24"];
	Node0x15f1930[shape=record, label="  %30 = mul i32 %29, 3"];
	Node0x15f19a0[shape=record, label="  %31 = add i32 %22, %9"];
	Node0x15f1a10[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x15f1c90[shape=record, label="  %33 = add i32 %2, 3"];
	Node0x15f1d00[shape=record, label="  %34 = add i32 %33, %15"];
	Node0x15f1d70[shape=record, label="  %35 = add i32 %34, %16"];
	Node0x15f1de0[shape=record, label="  %36 = add i32 %35, %17"];
	Node0x15f1e50[shape=record, label="  %37 = sub i32 %36, %20"];
	Node0x15f1ec0[shape=record, label="  %38 = add i32 %37, %21"];
	Node0x15f1f30[shape=record, label="  %39 = add i32 %38, %24"];
	Node0x15f1fa0[shape=record, label="  %40 = add i32 %39, %25"];
	Node0x15f2010[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x15f2080[shape=record, label="  %42 = sub i32 %41, %11"];
	Node0x15f20f0[shape=record, label="  %43 = add i32 %42, %14"];
	Node0x15f2160[shape=record, label="  %44 = sub i32 %43, %19"];
	Node0x15f21d0[shape=record, label="  %45 = sub i32 %44, %27"];
	Node0x15f2240[shape=record, label="  %46 = add i32 %45, %28"];
	Node0x15f22b0[shape=record, label="  %47 = add i32 %46, %30"];
	Node0x15f2320[shape=record, label="  %48 = add i32 %47, %32"];
	Node0x15f2390[shape=record, label="  %49 = icmp eq i32 %8, %48"];
	Node0x1591268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x15f2830[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x15f2880[shape=record, label="  ret void"];
	Node0x15f0710 -> Node0x15f0d90;
	Node0x15f0d90 -> Node0x15f0e00;
	Node0x15f0e00 -> Node0x15f0e70;
	Node0x15f0e70 -> Node0x15f0f10;
	Node0x15f0f10 -> Node0x15f0fb0;
	Node0x15f0fb0 -> Node0x15f1050;
	Node0x15f1050 -> Node0x15f10c0;
	Node0x15f10c0 -> Node0x15f1130;
	Node0x15f1130 -> Node0x15f11d0;
	Node0x15f11d0 -> Node0x15f1240;
	Node0x15f1240 -> Node0x15f12b0;
	Node0x15f12b0 -> Node0x15f1320;
	Node0x15f1320 -> Node0x15f1390;
	Node0x15f1390 -> Node0x15f1400;
	Node0x15f1400 -> Node0x15f1470;
	Node0x15f1470 -> Node0x15f14e0;
	Node0x15f14e0 -> Node0x15f1550;
	Node0x15f1550 -> Node0x15f15c0;
	Node0x15f15c0 -> Node0x15f1630;
	Node0x15f1630 -> Node0x15f16a0;
	Node0x15f16a0 -> Node0x15f1710;
	Node0x15f1710 -> Node0x15f1780;
	Node0x15f1780 -> Node0x15f1820;
	Node0x15f1820 -> Node0x15f1890;
	Node0x15f1890 -> Node0x15f1930;
	Node0x15f1930 -> Node0x15f19a0;
	Node0x15f19a0 -> Node0x15f1a10;
	Node0x15f1a10 -> Node0x15f1c90;
	Node0x15f1c90 -> Node0x15f1d00;
	Node0x15f1d00 -> Node0x15f1d70;
	Node0x15f1d70 -> Node0x15f1de0;
	Node0x15f1de0 -> Node0x15f1e50;
	Node0x15f1e50 -> Node0x15f1ec0;
	Node0x15f1ec0 -> Node0x15f1f30;
	Node0x15f1f30 -> Node0x15f1fa0;
	Node0x15f1fa0 -> Node0x15f2010;
	Node0x15f2010 -> Node0x15f2080;
	Node0x15f2080 -> Node0x15f20f0;
	Node0x15f20f0 -> Node0x15f2160;
	Node0x15f2160 -> Node0x15f21d0;
	Node0x15f21d0 -> Node0x15f2240;
	Node0x15f2240 -> Node0x15f22b0;
	Node0x15f22b0 -> Node0x15f2320;
	Node0x15f2320 -> Node0x15f2390;
	Node0x15f2390 -> Node0x1591268;
	Node0x1591268 -> Node0x15f2830;
	Node0x15f2830 -> Node0x15f2880;
edge [color=red]
	Node0x15f0d90 -> Node0x15f0e00;
	Node0x15f0710 -> Node0x15f0e00;
	Node0x15f0e00 -> Node0x15f0e70;
	Node0x15f0710 -> Node0x15f0fb0;
	Node0x15f0fb0 -> Node0x15f1050;
	Node0x15f10c0 -> Node0x15f1130;
	Node0x15f1130 -> Node0x15f11d0;
	Node0x15f0f10 -> Node0x15f1240;
	Node0x15f0f10 -> Node0x15f12b0;
	Node0x15f12b0 -> Node0x15f1390;
	Node0x15f1390 -> Node0x15f1400;
	Node0x15f1240 -> Node0x15f1470;
	Node0x15f15c0 -> Node0x15f1630;
	Node0x15f15c0 -> Node0x15f16a0;
	Node0x15f1710 -> Node0x15f1780;
	Node0x15f14e0 -> Node0x15f1820;
	Node0x15f10c0 -> Node0x15f1890;
	Node0x15f1630 -> Node0x15f1890;
	Node0x15f1890 -> Node0x15f1930;
	Node0x15f1550 -> Node0x15f19a0;
	Node0x15f0f10 -> Node0x15f19a0;
	Node0x15f19a0 -> Node0x15f1a10;
	Node0x15f1c90 -> Node0x15f1d00;
	Node0x15f1240 -> Node0x15f1d00;
	Node0x15f1d00 -> Node0x15f1d70;
	Node0x15f12b0 -> Node0x15f1d70;
	Node0x15f1d70 -> Node0x15f1de0;
	Node0x15f1320 -> Node0x15f1de0;
	Node0x15f1de0 -> Node0x15f1e50;
	Node0x15f1470 -> Node0x15f1e50;
	Node0x15f1e50 -> Node0x15f1ec0;
	Node0x15f14e0 -> Node0x15f1ec0;
	Node0x15f1ec0 -> Node0x15f1f30;
	Node0x15f1630 -> Node0x15f1f30;
	Node0x15f1f30 -> Node0x15f1fa0;
	Node0x15f16a0 -> Node0x15f1fa0;
	Node0x15f1fa0 -> Node0x15f2010;
	Node0x15f1550 -> Node0x15f2010;
	Node0x15f2010 -> Node0x15f2080;
	Node0x15f1050 -> Node0x15f2080;
	Node0x15f2080 -> Node0x15f20f0;
	Node0x15f11d0 -> Node0x15f20f0;
	Node0x15f20f0 -> Node0x15f2160;
	Node0x15f1400 -> Node0x15f2160;
	Node0x15f2160 -> Node0x15f21d0;
	Node0x15f1780 -> Node0x15f21d0;
	Node0x15f21d0 -> Node0x15f2240;
	Node0x15f1820 -> Node0x15f2240;
	Node0x15f2240 -> Node0x15f22b0;
	Node0x15f1930 -> Node0x15f22b0;
	Node0x15f22b0 -> Node0x15f2320;
	Node0x15f1a10 -> Node0x15f2320;
	Node0x15f0e70 -> Node0x15f2390;
	Node0x15f2320 -> Node0x15f2390;
	Node0x15f2390 -> Node0x1591268;
	Node0x1591268 -> Node0x15f2830;
}
