digraph "DFG for'main' function" {
	Node0x1ca0df8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ca0e78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ca0f08[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1ca1368[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ca1448[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1ca1568[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ca17a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1ca1858[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ca27c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ca2e50[shape=record, label="  %8 = sub i32 0, %6"];
	Node0x1ca2ec0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x1ca2f30[shape=record, label="  %10 = mul i32 %9, -5"];
	Node0x1ca2fa0[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x1ca3010[shape=record, label="  %12 = or i32 %6, %9"];
	Node0x1ca3080[shape=record, label="  %13 = xor i32 %6, 2147483647"];
	Node0x1ca30f0[shape=record, label="  %14 = or i32 %13, %7"];
	Node0x1ca3160[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1ca31d0[shape=record, label="  %16 = shl i32 %11, 2"];
	Node0x1ca3240[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x1ca32b0[shape=record, label="  %18 = and i32 %7, %6"];
	Node0x1ca3320[shape=record, label="  %19 = shl i32 %12, 1"];
	Node0x1ca3390[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x1ca3400[shape=record, label="  %21 = mul i32 %18, -6"];
	Node0x1ca3470[shape=record, label="  %22 = add i32 %7, -2"];
	Node0x1ca34e0[shape=record, label="  %23 = add i32 %22, %11"];
	Node0x1ca3550[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x1ca35c0[shape=record, label="  %25 = add i32 %24, %12"];
	Node0x1ca3630[shape=record, label="  %26 = sub i32 %25, %18"];
	Node0x1ca36a0[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0x1ca3710[shape=record, label="  %28 = add i32 %27, %21"];
	Node0x1ca3780[shape=record, label="  %29 = add i32 %28, %17"];
	Node0x1ca37f0[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0x1ca3860[shape=record, label="  %31 = icmp eq i32 %30, %8"];
	Node0x1c419d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ca3b00[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x1ca3d58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ca3eb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ca3f78[shape=record, label="  ret i32 0"];
	Node0x1ca0df8 -> Node0x1ca0e78;
	Node0x1ca0e78 -> Node0x1ca0f08;
	Node0x1ca0f08 -> Node0x1ca1368;
	Node0x1ca1368 -> Node0x1ca1448;
	Node0x1ca1448 -> Node0x1ca1568;
	Node0x1ca1568 -> Node0x1ca17a0;
	Node0x1ca17a0 -> Node0x1ca1858;
	Node0x1ca1858 -> Node0x1ca27c8;
	Node0x1ca27c8 -> Node0x1ca2e50;
	Node0x1ca2e50 -> Node0x1ca2ec0;
	Node0x1ca2ec0 -> Node0x1ca2f30;
	Node0x1ca2f30 -> Node0x1ca2fa0;
	Node0x1ca2fa0 -> Node0x1ca3010;
	Node0x1ca3010 -> Node0x1ca3080;
	Node0x1ca3080 -> Node0x1ca30f0;
	Node0x1ca30f0 -> Node0x1ca3160;
	Node0x1ca3160 -> Node0x1ca31d0;
	Node0x1ca31d0 -> Node0x1ca3240;
	Node0x1ca3240 -> Node0x1ca32b0;
	Node0x1ca32b0 -> Node0x1ca3320;
	Node0x1ca3320 -> Node0x1ca3390;
	Node0x1ca3390 -> Node0x1ca3400;
	Node0x1ca3400 -> Node0x1ca3470;
	Node0x1ca3470 -> Node0x1ca34e0;
	Node0x1ca34e0 -> Node0x1ca3550;
	Node0x1ca3550 -> Node0x1ca35c0;
	Node0x1ca35c0 -> Node0x1ca3630;
	Node0x1ca3630 -> Node0x1ca36a0;
	Node0x1ca36a0 -> Node0x1ca3710;
	Node0x1ca3710 -> Node0x1ca3780;
	Node0x1ca3780 -> Node0x1ca37f0;
	Node0x1ca37f0 -> Node0x1ca3860;
	Node0x1ca3860 -> Node0x1c419d8;
	Node0x1c419d8 -> Node0x1ca3b00;
	Node0x1ca3b00 -> Node0x1ca3d58;
	Node0x1ca3d58 -> Node0x1ca3eb8;
	Node0x1ca3eb8 -> Node0x1ca3f78;
edge [color=red]
	Node0x1ca0df8 -> Node0x1ca0f08;
	Node0x1ca0f08 -> Node0x1ca1368;
	Node0x1ca0e78 -> Node0x1ca1448;
	Node0x1ca1448 -> Node0x1ca1568;
	Node0x1ca0df8 -> Node0x1ca17a0;
	Node0x1ca0e78 -> Node0x1ca17a0;
	Node0x1ca0df8 -> Node0x1ca1858;
	Node0x1ca0e78 -> Node0x1ca27c8;
	Node0x1ca1858 -> Node0x1ca2e50;
	Node0x1ca27c8 -> Node0x1ca2ec0;
	Node0x1ca2ec0 -> Node0x1ca2f30;
	Node0x1ca27c8 -> Node0x1ca2fa0;
	Node0x1ca1858 -> Node0x1ca2fa0;
	Node0x1ca1858 -> Node0x1ca3010;
	Node0x1ca2ec0 -> Node0x1ca3010;
	Node0x1ca1858 -> Node0x1ca3080;
	Node0x1ca3080 -> Node0x1ca30f0;
	Node0x1ca27c8 -> Node0x1ca30f0;
	Node0x1ca30f0 -> Node0x1ca3160;
	Node0x1ca2fa0 -> Node0x1ca31d0;
	Node0x1ca31d0 -> Node0x1ca3240;
	Node0x1ca27c8 -> Node0x1ca32b0;
	Node0x1ca1858 -> Node0x1ca32b0;
	Node0x1ca3010 -> Node0x1ca3320;
	Node0x1ca3320 -> Node0x1ca3390;
	Node0x1ca32b0 -> Node0x1ca3400;
	Node0x1ca27c8 -> Node0x1ca3470;
	Node0x1ca3470 -> Node0x1ca34e0;
	Node0x1ca2fa0 -> Node0x1ca34e0;
	Node0x1ca34e0 -> Node0x1ca3550;
	Node0x1ca2f30 -> Node0x1ca3550;
	Node0x1ca3550 -> Node0x1ca35c0;
	Node0x1ca3010 -> Node0x1ca35c0;
	Node0x1ca35c0 -> Node0x1ca3630;
	Node0x1ca32b0 -> Node0x1ca3630;
	Node0x1ca3630 -> Node0x1ca36a0;
	Node0x1ca3160 -> Node0x1ca36a0;
	Node0x1ca36a0 -> Node0x1ca3710;
	Node0x1ca3400 -> Node0x1ca3710;
	Node0x1ca3710 -> Node0x1ca3780;
	Node0x1ca3240 -> Node0x1ca3780;
	Node0x1ca3780 -> Node0x1ca37f0;
	Node0x1ca3390 -> Node0x1ca37f0;
	Node0x1ca37f0 -> Node0x1ca3860;
	Node0x1ca2e50 -> Node0x1ca3860;
	Node0x1ca3860 -> Node0x1c419d8;
	Node0x1c419d8 -> Node0x1ca3b00;
	Node0x1ca1448 -> Node0x1ca3d58;
	Node0x1ca0f08 -> Node0x1ca3eb8;
}
