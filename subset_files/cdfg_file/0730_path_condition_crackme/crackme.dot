digraph "DFG for'crackme' function" {
	Node0x214d430[shape=record, label="  %3 = xor i32 %1, %0"];
	Node0x214dae0[shape=record, label="  %4 = sub i32 0, %3"];
	Node0x214dba0[shape=record, label="  %5 = shl i32 %3, 1"];
	Node0x214dc40[shape=record, label="  %6 = xor i32 %5, -2"];
	Node0x214dce0[shape=record, label="  %7 = shl i32 %0, 2"];
	Node0x214dd50[shape=record, label="  %8 = shl i32 %0, 1"];
	Node0x214ddc0[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x214de30[shape=record, label="  %10 = and i32 %1, %0"];
	Node0x214ded0[shape=record, label="  %11 = xor i32 %1, 2147483647"];
	Node0x214df40[shape=record, label="  %12 = or i32 %1, %0"];
	Node0x214dfb0[shape=record, label="  %13 = and i32 %11, %0"];
	Node0x214e020[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x214e090[shape=record, label="  %15 = add i32 %7, %9"];
	Node0x214e100[shape=record, label="  %16 = sub i32 %10, %15"];
	Node0x214e170[shape=record, label="  %17 = add i32 %16, %12"];
	Node0x214e1e0[shape=record, label="  %18 = add i32 %17, %14"];
	Node0x214e250[shape=record, label="  %19 = add i32 %18, %6"];
	Node0x214e2c0[shape=record, label="  %20 = icmp eq i32 %19, %4"];
	Node0x20ee268[shape=record, label="  %21 = select i1 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x214e760[shape=record, label="  %22 = tail call i32 @puts(i8* nonnull dereferenceable(1) %21)"];
	Node0x214e7b0[shape=record, label="  ret void"];
	Node0x214d430 -> Node0x214dae0;
	Node0x214dae0 -> Node0x214dba0;
	Node0x214dba0 -> Node0x214dc40;
	Node0x214dc40 -> Node0x214dce0;
	Node0x214dce0 -> Node0x214dd50;
	Node0x214dd50 -> Node0x214ddc0;
	Node0x214ddc0 -> Node0x214de30;
	Node0x214de30 -> Node0x214ded0;
	Node0x214ded0 -> Node0x214df40;
	Node0x214df40 -> Node0x214dfb0;
	Node0x214dfb0 -> Node0x214e020;
	Node0x214e020 -> Node0x214e090;
	Node0x214e090 -> Node0x214e100;
	Node0x214e100 -> Node0x214e170;
	Node0x214e170 -> Node0x214e1e0;
	Node0x214e1e0 -> Node0x214e250;
	Node0x214e250 -> Node0x214e2c0;
	Node0x214e2c0 -> Node0x20ee268;
	Node0x20ee268 -> Node0x214e760;
	Node0x214e760 -> Node0x214e7b0;
edge [color=red]
	Node0x214d430 -> Node0x214dae0;
	Node0x214d430 -> Node0x214dba0;
	Node0x214dba0 -> Node0x214dc40;
	Node0x214dd50 -> Node0x214ddc0;
	Node0x214ded0 -> Node0x214dfb0;
	Node0x214dfb0 -> Node0x214e020;
	Node0x214dce0 -> Node0x214e090;
	Node0x214ddc0 -> Node0x214e090;
	Node0x214de30 -> Node0x214e100;
	Node0x214e090 -> Node0x214e100;
	Node0x214e100 -> Node0x214e170;
	Node0x214df40 -> Node0x214e170;
	Node0x214e170 -> Node0x214e1e0;
	Node0x214e020 -> Node0x214e1e0;
	Node0x214e1e0 -> Node0x214e250;
	Node0x214dc40 -> Node0x214e250;
	Node0x214e250 -> Node0x214e2c0;
	Node0x214dae0 -> Node0x214e2c0;
	Node0x214e2c0 -> Node0x20ee268;
	Node0x20ee268 -> Node0x214e760;
}
