digraph "DFG for'main' function" {
	Node0x11c4568[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11c45e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11c4678[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x11c46d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x11c4b58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11c4c38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x11c4d38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11c4df8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x11c4ea8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11c5108[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x11c51c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11c5328[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11c5388[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x11cbe50[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x11cc058[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11cc1b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11cc2c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11cc388[shape=record, label="  ret i32 0"];
	Node0x11c4568 -> Node0x11c45e8;
	Node0x11c45e8 -> Node0x11c4678;
	Node0x11c4678 -> Node0x11c46d8;
	Node0x11c46d8 -> Node0x11c4b58;
	Node0x11c4b58 -> Node0x11c4c38;
	Node0x11c4c38 -> Node0x11c4d38;
	Node0x11c4d38 -> Node0x11c4df8;
	Node0x11c4df8 -> Node0x11c4ea8;
	Node0x11c4ea8 -> Node0x11c5108;
	Node0x11c5108 -> Node0x11c51c8;
	Node0x11c51c8 -> Node0x11c5328;
	Node0x11c5328 -> Node0x11c5388;
	Node0x11c5388 -> Node0x11cbe50;
	Node0x11cbe50 -> Node0x11cc058;
	Node0x11cc058 -> Node0x11cc1b8;
	Node0x11cc1b8 -> Node0x11cc2c8;
	Node0x11cc2c8 -> Node0x11cc388;
edge [color=red]
	Node0x11c4568 -> Node0x11c46d8;
	Node0x11c46d8 -> Node0x11c4b58;
	Node0x11c45e8 -> Node0x11c4c38;
	Node0x11c4c38 -> Node0x11c4d38;
	Node0x11c4678 -> Node0x11c4df8;
	Node0x11c4df8 -> Node0x11c4ea8;
	Node0x11c4568 -> Node0x11c5108;
	Node0x11c45e8 -> Node0x11c5108;
	Node0x11c4678 -> Node0x11c5108;
	Node0x11c4568 -> Node0x11c51c8;
	Node0x11c45e8 -> Node0x11c5328;
	Node0x11c4678 -> Node0x11c5388;
	Node0x11c51c8 -> Node0x11cbe50;
	Node0x11c5328 -> Node0x11cbe50;
	Node0x11c5388 -> Node0x11cbe50;
	Node0x11c4df8 -> Node0x11cc058;
	Node0x11c4c38 -> Node0x11cc1b8;
	Node0x11c46d8 -> Node0x11cc2c8;
}
