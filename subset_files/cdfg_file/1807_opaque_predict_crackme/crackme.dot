digraph "DFG for'crackme' function" {
	Node0x1142630[shape=record, label="  %3 = xor i32 %1, %0"];
	Node0x1142ce0[shape=record, label="  %4 = xor i32 %1, -1"];
	Node0x1142da0[shape=record, label="  %5 = and i32 %4, %0"];
	Node0x1142e10[shape=record, label="  %6 = sub i32 1, %3"];
	Node0x1142e80[shape=record, label="  %7 = add i32 %6, %5"];
	Node0x1142ef0[shape=record, label="  %8 = shl i32 %4, 1"];
	Node0x1142f60[shape=record, label="  %9 = sub i32 %1, %8"];
	Node0x1142fd0[shape=record, label="  %10 = or i32 %4, %0"];
	Node0x1143040[shape=record, label="  %11 = add i32 %9, %10"];
	Node0x11430e0[shape=record, label="  %12 = shl i32 %0, 2"];
	Node0x1143180[shape=record, label="  %13 = xor i32 %12, -4"];
	Node0x11431f0[shape=record, label="  %14 = add i32 %11, %13"];
	Node0x1143260[shape=record, label="  %15 = or i32 %1, %0"];
	Node0x11432d0[shape=record, label="  %16 = add i32 %14, %15"];
	Node0x1143340[shape=record, label="  %17 = shl i32 %3, 1"];
	Node0x11433e0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x1143450[shape=record, label="  %19 = and i32 %1, %0"];
	Node0x11434c0[shape=record, label="  %20 = xor i32 %15, -1"];
	Node0x1143560[shape=record, label="  %21 = mul i32 %20, -6"];
	Node0x1143600[shape=record, label="  %22 = shl i32 %10, 3"];
	Node0x11436a0[shape=record, label="  %23 = xor i32 %22, -8"];
	Node0x1143740[shape=record, label="  %24 = mul i32 %19, -7"];
	Node0x11437b0[shape=record, label="  %25 = add i32 %16, %19"];
	Node0x1143820[shape=record, label="  %26 = sub i32 %25, %5"];
	Node0x1143890[shape=record, label="  %27 = add i32 %26, %21"];
	Node0x1143900[shape=record, label="  %28 = add i32 %27, %24"];
	Node0x1143970[shape=record, label="  %29 = add i32 %28, %18"];
	Node0x11439e0[shape=record, label="  %30 = sub i32 %29, %23"];
	Node0x1143a50[shape=record, label="  %31 = icmp eq i32 %7, %30"];
	Node0x10e3268[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1144100[shape=record, label="  %33 = tail call i32 @puts(i8* nonnull dereferenceable(1) %32)"];
	Node0x1144150[shape=record, label="  ret void"];
	Node0x1142630 -> Node0x1142ce0;
	Node0x1142ce0 -> Node0x1142da0;
	Node0x1142da0 -> Node0x1142e10;
	Node0x1142e10 -> Node0x1142e80;
	Node0x1142e80 -> Node0x1142ef0;
	Node0x1142ef0 -> Node0x1142f60;
	Node0x1142f60 -> Node0x1142fd0;
	Node0x1142fd0 -> Node0x1143040;
	Node0x1143040 -> Node0x11430e0;
	Node0x11430e0 -> Node0x1143180;
	Node0x1143180 -> Node0x11431f0;
	Node0x11431f0 -> Node0x1143260;
	Node0x1143260 -> Node0x11432d0;
	Node0x11432d0 -> Node0x1143340;
	Node0x1143340 -> Node0x11433e0;
	Node0x11433e0 -> Node0x1143450;
	Node0x1143450 -> Node0x11434c0;
	Node0x11434c0 -> Node0x1143560;
	Node0x1143560 -> Node0x1143600;
	Node0x1143600 -> Node0x11436a0;
	Node0x11436a0 -> Node0x1143740;
	Node0x1143740 -> Node0x11437b0;
	Node0x11437b0 -> Node0x1143820;
	Node0x1143820 -> Node0x1143890;
	Node0x1143890 -> Node0x1143900;
	Node0x1143900 -> Node0x1143970;
	Node0x1143970 -> Node0x11439e0;
	Node0x11439e0 -> Node0x1143a50;
	Node0x1143a50 -> Node0x10e3268;
	Node0x10e3268 -> Node0x1144100;
	Node0x1144100 -> Node0x1144150;
edge [color=red]
	Node0x1142ce0 -> Node0x1142da0;
	Node0x1142630 -> Node0x1142e10;
	Node0x1142e10 -> Node0x1142e80;
	Node0x1142da0 -> Node0x1142e80;
	Node0x1142ce0 -> Node0x1142ef0;
	Node0x1142ef0 -> Node0x1142f60;
	Node0x1142ce0 -> Node0x1142fd0;
	Node0x1142f60 -> Node0x1143040;
	Node0x1142fd0 -> Node0x1143040;
	Node0x11430e0 -> Node0x1143180;
	Node0x1143040 -> Node0x11431f0;
	Node0x1143180 -> Node0x11431f0;
	Node0x11431f0 -> Node0x11432d0;
	Node0x1143260 -> Node0x11432d0;
	Node0x1142630 -> Node0x1143340;
	Node0x1143340 -> Node0x11433e0;
	Node0x1143260 -> Node0x11434c0;
	Node0x11434c0 -> Node0x1143560;
	Node0x1142fd0 -> Node0x1143600;
	Node0x1143600 -> Node0x11436a0;
	Node0x1143450 -> Node0x1143740;
	Node0x11432d0 -> Node0x11437b0;
	Node0x1143450 -> Node0x11437b0;
	Node0x11437b0 -> Node0x1143820;
	Node0x1142da0 -> Node0x1143820;
	Node0x1143820 -> Node0x1143890;
	Node0x1143560 -> Node0x1143890;
	Node0x1143890 -> Node0x1143900;
	Node0x1143740 -> Node0x1143900;
	Node0x1143900 -> Node0x1143970;
	Node0x11433e0 -> Node0x1143970;
	Node0x1143970 -> Node0x11439e0;
	Node0x11436a0 -> Node0x11439e0;
	Node0x1142e80 -> Node0x1143a50;
	Node0x11439e0 -> Node0x1143a50;
	Node0x1143a50 -> Node0x10e3268;
	Node0x10e3268 -> Node0x1144100;
}
