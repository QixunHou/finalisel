digraph "DFG for'main' function" {
	Node0x9eac18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x9eac98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x9ead28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x9ead88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x9eae38[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x9eb268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x9eb348[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x9eb448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9eb508[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x9eb5b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x9eb678[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x9eb728[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x9e5770[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x9eb928[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x9ec898[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x9ecf08[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x9ecf68[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x9ed078[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x9ed2d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x9ed438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x9ed548[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9ed658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x9ed718[shape=record, label="  ret i32 0"];
	Node0x9eac18 -> Node0x9eac98;
	Node0x9eac98 -> Node0x9ead28;
	Node0x9ead28 -> Node0x9ead88;
	Node0x9ead88 -> Node0x9eae38;
	Node0x9eae38 -> Node0x9eb268;
	Node0x9eb268 -> Node0x9eb348;
	Node0x9eb348 -> Node0x9eb448;
	Node0x9eb448 -> Node0x9eb508;
	Node0x9eb508 -> Node0x9eb5b8;
	Node0x9eb5b8 -> Node0x9eb678;
	Node0x9eb678 -> Node0x9eb728;
	Node0x9eb728 -> Node0x9e5770;
	Node0x9e5770 -> Node0x9eb928;
	Node0x9eb928 -> Node0x9ec898;
	Node0x9ec898 -> Node0x9ecf08;
	Node0x9ecf08 -> Node0x9ecf68;
	Node0x9ecf68 -> Node0x9ed078;
	Node0x9ed078 -> Node0x9ed2d8;
	Node0x9ed2d8 -> Node0x9ed438;
	Node0x9ed438 -> Node0x9ed548;
	Node0x9ed548 -> Node0x9ed658;
	Node0x9ed658 -> Node0x9ed718;
edge [color=red]
	Node0x9eac18 -> Node0x9eae38;
	Node0x9eae38 -> Node0x9eb268;
	Node0x9eac98 -> Node0x9eb348;
	Node0x9eb348 -> Node0x9eb448;
	Node0x9ead28 -> Node0x9eb508;
	Node0x9eb508 -> Node0x9eb5b8;
	Node0x9ead88 -> Node0x9eb678;
	Node0x9eb678 -> Node0x9eb728;
	Node0x9eac18 -> Node0x9e5770;
	Node0x9eac98 -> Node0x9e5770;
	Node0x9ead28 -> Node0x9e5770;
	Node0x9ead88 -> Node0x9e5770;
	Node0x9eac18 -> Node0x9eb928;
	Node0x9eac98 -> Node0x9ec898;
	Node0x9ead28 -> Node0x9ecf08;
	Node0x9ead88 -> Node0x9ecf68;
	Node0x9eb928 -> Node0x9ed078;
	Node0x9ec898 -> Node0x9ed078;
	Node0x9ecf08 -> Node0x9ed078;
	Node0x9ecf68 -> Node0x9ed078;
	Node0x9eb678 -> Node0x9ed2d8;
	Node0x9eb508 -> Node0x9ed438;
	Node0x9eb348 -> Node0x9ed548;
	Node0x9eae38 -> Node0x9ed658;
}
