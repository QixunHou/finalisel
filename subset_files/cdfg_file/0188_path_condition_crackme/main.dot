digraph "DFG for'main' function" {
	Node0x2370c28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2370ca8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2370d38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x2371198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2371278[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x2371398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23715d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x2371688[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23725f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2372c80[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x2372cf0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x2372d60[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x2372dd0[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x2372e40[shape=record, label="  %12 = sub i32 %9, %11"];
	Node0x2372eb0[shape=record, label="  %13 = and i32 %6, %10"];
	Node0x2372f20[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x2372f90[shape=record, label="  %15 = xor i32 %11, -1"];
	Node0x2373000[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x2373070[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x23730e0[shape=record, label="  %18 = sub i32 %15, %14"];
	Node0x2373150[shape=record, label="  %19 = add i32 %18, %13"];
	Node0x23731c0[shape=record, label="  %20 = mul i32 %19, 5"];
	Node0x2373230[shape=record, label="  %21 = sub i32 1, %6"];
	Node0x23732a0[shape=record, label="  %22 = add i32 %21, %7"];
	Node0x2373310[shape=record, label="  %23 = add i32 %22, %8"];
	Node0x2373380[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x23733f0[shape=record, label="  %25 = add i32 %24, %13"];
	Node0x2373460[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x23734d0[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x2373540[shape=record, label="  %28 = icmp eq i32 %12, %27"];
	Node0x23119d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23735d0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x2373828[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2373988[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2373a48[shape=record, label="  ret i32 0"];
	Node0x2370c28 -> Node0x2370ca8;
	Node0x2370ca8 -> Node0x2370d38;
	Node0x2370d38 -> Node0x2371198;
	Node0x2371198 -> Node0x2371278;
	Node0x2371278 -> Node0x2371398;
	Node0x2371398 -> Node0x23715d0;
	Node0x23715d0 -> Node0x2371688;
	Node0x2371688 -> Node0x23725f8;
	Node0x23725f8 -> Node0x2372c80;
	Node0x2372c80 -> Node0x2372cf0;
	Node0x2372cf0 -> Node0x2372d60;
	Node0x2372d60 -> Node0x2372dd0;
	Node0x2372dd0 -> Node0x2372e40;
	Node0x2372e40 -> Node0x2372eb0;
	Node0x2372eb0 -> Node0x2372f20;
	Node0x2372f20 -> Node0x2372f90;
	Node0x2372f90 -> Node0x2373000;
	Node0x2373000 -> Node0x2373070;
	Node0x2373070 -> Node0x23730e0;
	Node0x23730e0 -> Node0x2373150;
	Node0x2373150 -> Node0x23731c0;
	Node0x23731c0 -> Node0x2373230;
	Node0x2373230 -> Node0x23732a0;
	Node0x23732a0 -> Node0x2373310;
	Node0x2373310 -> Node0x2373380;
	Node0x2373380 -> Node0x23733f0;
	Node0x23733f0 -> Node0x2373460;
	Node0x2373460 -> Node0x23734d0;
	Node0x23734d0 -> Node0x2373540;
	Node0x2373540 -> Node0x23119d8;
	Node0x23119d8 -> Node0x23735d0;
	Node0x23735d0 -> Node0x2373828;
	Node0x2373828 -> Node0x2373988;
	Node0x2373988 -> Node0x2373a48;
edge [color=red]
	Node0x2370c28 -> Node0x2370d38;
	Node0x2370d38 -> Node0x2371198;
	Node0x2370ca8 -> Node0x2371278;
	Node0x2371278 -> Node0x2371398;
	Node0x2370c28 -> Node0x23715d0;
	Node0x2370ca8 -> Node0x23715d0;
	Node0x2370c28 -> Node0x2371688;
	Node0x2370ca8 -> Node0x23725f8;
	Node0x23725f8 -> Node0x2372c80;
	Node0x2371688 -> Node0x2372c80;
	Node0x2372c80 -> Node0x2372cf0;
	Node0x23725f8 -> Node0x2372d60;
	Node0x2371688 -> Node0x2372dd0;
	Node0x2372d60 -> Node0x2372dd0;
	Node0x2372cf0 -> Node0x2372e40;
	Node0x2372dd0 -> Node0x2372e40;
	Node0x2371688 -> Node0x2372eb0;
	Node0x2372d60 -> Node0x2372eb0;
	Node0x23725f8 -> Node0x2372f20;
	Node0x2371688 -> Node0x2372f20;
	Node0x2372dd0 -> Node0x2372f90;
	Node0x23725f8 -> Node0x2373000;
	Node0x2371688 -> Node0x2373000;
	Node0x2373000 -> Node0x2373070;
	Node0x2372f90 -> Node0x23730e0;
	Node0x2372f20 -> Node0x23730e0;
	Node0x23730e0 -> Node0x2373150;
	Node0x2372eb0 -> Node0x2373150;
	Node0x2373150 -> Node0x23731c0;
	Node0x2371688 -> Node0x2373230;
	Node0x2373230 -> Node0x23732a0;
	Node0x23725f8 -> Node0x23732a0;
	Node0x23732a0 -> Node0x2373310;
	Node0x2372c80 -> Node0x2373310;
	Node0x2373310 -> Node0x2373380;
	Node0x2372f20 -> Node0x2373380;
	Node0x2373380 -> Node0x23733f0;
	Node0x2372eb0 -> Node0x23733f0;
	Node0x23733f0 -> Node0x2373460;
	Node0x2373070 -> Node0x2373460;
	Node0x2373460 -> Node0x23734d0;
	Node0x23731c0 -> Node0x23734d0;
	Node0x2372e40 -> Node0x2373540;
	Node0x23734d0 -> Node0x2373540;
	Node0x2373540 -> Node0x23119d8;
	Node0x23119d8 -> Node0x23735d0;
	Node0x2371278 -> Node0x2373828;
	Node0x2370d38 -> Node0x2373988;
}
