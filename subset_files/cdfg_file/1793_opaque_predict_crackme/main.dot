digraph "DFG for'main' function" {
	Node0x19b2ad8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x19b2b58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x19b2be8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x19b2c48[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x19b30c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19b31a8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x19b32a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19b3368[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x19b3418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19b3678[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x19b3738[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x19b3898[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x19b38f8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x19b7350[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x19b7558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19b76b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19b77c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19b7888[shape=record, label="  ret i32 0"];
	Node0x19b2ad8 -> Node0x19b2b58;
	Node0x19b2b58 -> Node0x19b2be8;
	Node0x19b2be8 -> Node0x19b2c48;
	Node0x19b2c48 -> Node0x19b30c8;
	Node0x19b30c8 -> Node0x19b31a8;
	Node0x19b31a8 -> Node0x19b32a8;
	Node0x19b32a8 -> Node0x19b3368;
	Node0x19b3368 -> Node0x19b3418;
	Node0x19b3418 -> Node0x19b3678;
	Node0x19b3678 -> Node0x19b3738;
	Node0x19b3738 -> Node0x19b3898;
	Node0x19b3898 -> Node0x19b38f8;
	Node0x19b38f8 -> Node0x19b7350;
	Node0x19b7350 -> Node0x19b7558;
	Node0x19b7558 -> Node0x19b76b8;
	Node0x19b76b8 -> Node0x19b77c8;
	Node0x19b77c8 -> Node0x19b7888;
edge [color=red]
	Node0x19b2ad8 -> Node0x19b2c48;
	Node0x19b2c48 -> Node0x19b30c8;
	Node0x19b2b58 -> Node0x19b31a8;
	Node0x19b31a8 -> Node0x19b32a8;
	Node0x19b2be8 -> Node0x19b3368;
	Node0x19b3368 -> Node0x19b3418;
	Node0x19b2ad8 -> Node0x19b3678;
	Node0x19b2b58 -> Node0x19b3678;
	Node0x19b2be8 -> Node0x19b3678;
	Node0x19b2ad8 -> Node0x19b3738;
	Node0x19b2b58 -> Node0x19b3898;
	Node0x19b2be8 -> Node0x19b38f8;
	Node0x19b3738 -> Node0x19b7350;
	Node0x19b3898 -> Node0x19b7350;
	Node0x19b38f8 -> Node0x19b7350;
	Node0x19b3368 -> Node0x19b7558;
	Node0x19b31a8 -> Node0x19b76b8;
	Node0x19b2c48 -> Node0x19b77c8;
}
