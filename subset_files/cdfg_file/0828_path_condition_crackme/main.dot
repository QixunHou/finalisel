digraph "DFG for'main' function" {
	Node0x16c9688[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x16c9708[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x16c9798[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x16c97f8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x16c98a8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x16c9cd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x16c9db8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x16c9eb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16c9f78[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x16ca028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x16ca0e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x16ca198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x16c49c0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x16ca398[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x16cb308[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x16cb978[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x16cb9d8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x16cba50[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x16cbac0[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x16cbb30[shape=record, label="  %16 = xor i32 %13, %10"];
	Node0x16cbba0[shape=record, label="  %17 = sub i32 %15, %16"];
	Node0x16cbc10[shape=record, label="  %18 = or i32 %13, %10"];
	Node0x16cbc80[shape=record, label="  %19 = sub i32 %17, %18"];
	Node0x16cbcf0[shape=record, label="  %20 = xor i32 %11, -1"];
	Node0x16cbd60[shape=record, label="  %21 = xor i32 %12, %20"];
	Node0x16cbdd0[shape=record, label="  %22 = or i32 %12, %20"];
	Node0x16cbe40[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x16cbeb0[shape=record, label="  %24 = and i32 %13, %10"];
	Node0x16cbf20[shape=record, label="  %25 = xor i32 %16, -1"];
	Node0x16cbf90[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0x16cc000[shape=record, label="  %27 = or i32 %13, %26"];
	Node0x16cc070[shape=record, label="  %28 = and i32 %13, %26"];
	Node0x16cc0e0[shape=record, label="  %29 = shl i32 %28, 2"];
	Node0x16cc150[shape=record, label="  %30 = shl i32 %24, 2"];
	Node0x16cc1c0[shape=record, label="  %31 = shl i32 %13, 1"];
	Node0x16cc230[shape=record, label="  %32 = sub i32 3, %10"];
	Node0x16cc2a0[shape=record, label="  %33 = add i32 %32, %20"];
	Node0x16cc310[shape=record, label="  %34 = sub i32 %33, %22"];
	Node0x16cc380[shape=record, label="  %35 = add i32 %34, %21"];
	Node0x16cc3f0[shape=record, label="  %36 = add i32 %35, %23"];
	Node0x16cc460[shape=record, label="  %37 = add i32 %36, %15"];
	Node0x16cc4d0[shape=record, label="  %38 = add i32 %37, %24"];
	Node0x16cc540[shape=record, label="  %39 = add i32 %38, %25"];
	Node0x16cc5b0[shape=record, label="  %40 = add i32 %39, %27"];
	Node0x16cc620[shape=record, label="  %41 = add i32 %40, %18"];
	Node0x16cc690[shape=record, label="  %42 = add i32 %41, %31"];
	Node0x16cc700[shape=record, label="  %43 = sub i32 %42, %29"];
	Node0x16cc770[shape=record, label="  %44 = sub i32 %43, %30"];
	Node0x16cc7e0[shape=record, label="  %45 = icmp eq i32 %19, %44"];
	Node0x16698b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x16cc870[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0x16ccb18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x16ccc78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x16ccd88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16cce98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x16ccf58[shape=record, label="  ret i32 0"];
	Node0x16c9688 -> Node0x16c9708;
	Node0x16c9708 -> Node0x16c9798;
	Node0x16c9798 -> Node0x16c97f8;
	Node0x16c97f8 -> Node0x16c98a8;
	Node0x16c98a8 -> Node0x16c9cd8;
	Node0x16c9cd8 -> Node0x16c9db8;
	Node0x16c9db8 -> Node0x16c9eb8;
	Node0x16c9eb8 -> Node0x16c9f78;
	Node0x16c9f78 -> Node0x16ca028;
	Node0x16ca028 -> Node0x16ca0e8;
	Node0x16ca0e8 -> Node0x16ca198;
	Node0x16ca198 -> Node0x16c49c0;
	Node0x16c49c0 -> Node0x16ca398;
	Node0x16ca398 -> Node0x16cb308;
	Node0x16cb308 -> Node0x16cb978;
	Node0x16cb978 -> Node0x16cb9d8;
	Node0x16cb9d8 -> Node0x16cba50;
	Node0x16cba50 -> Node0x16cbac0;
	Node0x16cbac0 -> Node0x16cbb30;
	Node0x16cbb30 -> Node0x16cbba0;
	Node0x16cbba0 -> Node0x16cbc10;
	Node0x16cbc10 -> Node0x16cbc80;
	Node0x16cbc80 -> Node0x16cbcf0;
	Node0x16cbcf0 -> Node0x16cbd60;
	Node0x16cbd60 -> Node0x16cbdd0;
	Node0x16cbdd0 -> Node0x16cbe40;
	Node0x16cbe40 -> Node0x16cbeb0;
	Node0x16cbeb0 -> Node0x16cbf20;
	Node0x16cbf20 -> Node0x16cbf90;
	Node0x16cbf90 -> Node0x16cc000;
	Node0x16cc000 -> Node0x16cc070;
	Node0x16cc070 -> Node0x16cc0e0;
	Node0x16cc0e0 -> Node0x16cc150;
	Node0x16cc150 -> Node0x16cc1c0;
	Node0x16cc1c0 -> Node0x16cc230;
	Node0x16cc230 -> Node0x16cc2a0;
	Node0x16cc2a0 -> Node0x16cc310;
	Node0x16cc310 -> Node0x16cc380;
	Node0x16cc380 -> Node0x16cc3f0;
	Node0x16cc3f0 -> Node0x16cc460;
	Node0x16cc460 -> Node0x16cc4d0;
	Node0x16cc4d0 -> Node0x16cc540;
	Node0x16cc540 -> Node0x16cc5b0;
	Node0x16cc5b0 -> Node0x16cc620;
	Node0x16cc620 -> Node0x16cc690;
	Node0x16cc690 -> Node0x16cc700;
	Node0x16cc700 -> Node0x16cc770;
	Node0x16cc770 -> Node0x16cc7e0;
	Node0x16cc7e0 -> Node0x16698b8;
	Node0x16698b8 -> Node0x16cc870;
	Node0x16cc870 -> Node0x16ccb18;
	Node0x16ccb18 -> Node0x16ccc78;
	Node0x16ccc78 -> Node0x16ccd88;
	Node0x16ccd88 -> Node0x16cce98;
	Node0x16cce98 -> Node0x16ccf58;
edge [color=red]
	Node0x16c9688 -> Node0x16c98a8;
	Node0x16c98a8 -> Node0x16c9cd8;
	Node0x16c9708 -> Node0x16c9db8;
	Node0x16c9db8 -> Node0x16c9eb8;
	Node0x16c9798 -> Node0x16c9f78;
	Node0x16c9f78 -> Node0x16ca028;
	Node0x16c97f8 -> Node0x16ca0e8;
	Node0x16ca0e8 -> Node0x16ca198;
	Node0x16c9688 -> Node0x16c49c0;
	Node0x16c9708 -> Node0x16c49c0;
	Node0x16c9798 -> Node0x16c49c0;
	Node0x16c97f8 -> Node0x16c49c0;
	Node0x16c9688 -> Node0x16ca398;
	Node0x16c9708 -> Node0x16cb308;
	Node0x16c9798 -> Node0x16cb978;
	Node0x16c97f8 -> Node0x16cb9d8;
	Node0x16cb978 -> Node0x16cba50;
	Node0x16cb308 -> Node0x16cbac0;
	Node0x16cba50 -> Node0x16cbac0;
	Node0x16cb9d8 -> Node0x16cbb30;
	Node0x16ca398 -> Node0x16cbb30;
	Node0x16cbac0 -> Node0x16cbba0;
	Node0x16cbb30 -> Node0x16cbba0;
	Node0x16cb9d8 -> Node0x16cbc10;
	Node0x16ca398 -> Node0x16cbc10;
	Node0x16cbba0 -> Node0x16cbc80;
	Node0x16cbc10 -> Node0x16cbc80;
	Node0x16cb308 -> Node0x16cbcf0;
	Node0x16cb978 -> Node0x16cbd60;
	Node0x16cbcf0 -> Node0x16cbd60;
	Node0x16cb978 -> Node0x16cbdd0;
	Node0x16cbcf0 -> Node0x16cbdd0;
	Node0x16cb978 -> Node0x16cbe40;
	Node0x16cb308 -> Node0x16cbe40;
	Node0x16cb9d8 -> Node0x16cbeb0;
	Node0x16ca398 -> Node0x16cbeb0;
	Node0x16cbb30 -> Node0x16cbf20;
	Node0x16ca398 -> Node0x16cbf90;
	Node0x16cb9d8 -> Node0x16cc000;
	Node0x16cbf90 -> Node0x16cc000;
	Node0x16cb9d8 -> Node0x16cc070;
	Node0x16cbf90 -> Node0x16cc070;
	Node0x16cc070 -> Node0x16cc0e0;
	Node0x16cbeb0 -> Node0x16cc150;
	Node0x16cb9d8 -> Node0x16cc1c0;
	Node0x16ca398 -> Node0x16cc230;
	Node0x16cc230 -> Node0x16cc2a0;
	Node0x16cbcf0 -> Node0x16cc2a0;
	Node0x16cc2a0 -> Node0x16cc310;
	Node0x16cbdd0 -> Node0x16cc310;
	Node0x16cc310 -> Node0x16cc380;
	Node0x16cbd60 -> Node0x16cc380;
	Node0x16cc380 -> Node0x16cc3f0;
	Node0x16cbe40 -> Node0x16cc3f0;
	Node0x16cc3f0 -> Node0x16cc460;
	Node0x16cbac0 -> Node0x16cc460;
	Node0x16cc460 -> Node0x16cc4d0;
	Node0x16cbeb0 -> Node0x16cc4d0;
	Node0x16cc4d0 -> Node0x16cc540;
	Node0x16cbf20 -> Node0x16cc540;
	Node0x16cc540 -> Node0x16cc5b0;
	Node0x16cc000 -> Node0x16cc5b0;
	Node0x16cc5b0 -> Node0x16cc620;
	Node0x16cbc10 -> Node0x16cc620;
	Node0x16cc620 -> Node0x16cc690;
	Node0x16cc1c0 -> Node0x16cc690;
	Node0x16cc690 -> Node0x16cc700;
	Node0x16cc0e0 -> Node0x16cc700;
	Node0x16cc700 -> Node0x16cc770;
	Node0x16cc150 -> Node0x16cc770;
	Node0x16cbc80 -> Node0x16cc7e0;
	Node0x16cc770 -> Node0x16cc7e0;
	Node0x16cc7e0 -> Node0x16698b8;
	Node0x16698b8 -> Node0x16cc870;
	Node0x16ca0e8 -> Node0x16ccb18;
	Node0x16c9f78 -> Node0x16ccc78;
	Node0x16c9db8 -> Node0x16ccd88;
	Node0x16c98a8 -> Node0x16cce98;
}
