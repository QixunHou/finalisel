digraph "DFG for'crackme' function" {
	Node0x16ccfc0[shape=record, label="  %6 = xor i32 %4, -1"];
	Node0x16cd030[shape=record, label="  %7 = xor i32 %3, -1"];
	Node0x16cd0a0[shape=record, label="  %8 = or i32 %7, %4"];
	Node0x16cd110[shape=record, label="  %9 = xor i32 %4, %3"];
	Node0x16cd1b0[shape=record, label="  %10 = xor i32 %1, 2147483647"];
	Node0x16cd220[shape=record, label="  %11 = xor i32 %0, -1"];
	Node0x16cd290[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x16cd300[shape=record, label="  %13 = xor i32 %12, %2"];
	Node0x16cd370[shape=record, label="  %14 = or i32 %11, %1"];
	Node0x16cd3e0[shape=record, label="  %15 = xor i32 %14, %2"];
	Node0x16cd450[shape=record, label="  %16 = sub i32 %15, %13"];
	Node0x16cd4c0[shape=record, label="  %17 = add i32 %16, %9"];
	Node0x16cd530[shape=record, label="  %18 = add i32 %17, %8"];
	Node0x16cd5a0[shape=record, label="  %19 = or i32 %6, %3"];
	Node0x16cd610[shape=record, label="  %20 = and i32 %4, %3"];
	Node0x16cd6b0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x16cd750[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x16cd7c0[shape=record, label="  %23 = xor i32 %9, -1"];
	Node0x16cd830[shape=record, label="  %24 = shl i32 %3, 1"];
	Node0x16cd8a0[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x16cd910[shape=record, label="  %26 = xor i32 %19, -1"];
	Node0x16cd980[shape=record, label="  %27 = xor i32 %2, -1"];
	Node0x16cd9f0[shape=record, label="  %28 = or i32 %27, %0"];
	Node0x16cda60[shape=record, label="  %29 = and i32 %28, %10"];
	Node0x16cdad0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x16cdb40[shape=record, label="  %31 = or i32 %27, %1"];
	Node0x16cdbb0[shape=record, label="  %32 = or i32 %2, %1"];
	Node0x16cde30[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0x16cdea0[shape=record, label="  %34 = or i32 %33, %11"];
	Node0x16cdf10[shape=record, label="  %35 = xor i32 %11, %1"];
	Node0x16cdf80[shape=record, label="  %36 = or i32 %35, %27"];
	Node0x16cdff0[shape=record, label="  %37 = and i32 %33, %11"];
	Node0x16ce060[shape=record, label="  %38 = and i32 %12, %27"];
	Node0x16ce100[shape=record, label="  %39 = shl i32 %38, 2"];
	Node0x16ce170[shape=record, label="  %40 = xor i32 %31, -1"];
	Node0x16ce1e0[shape=record, label="  %41 = and i32 %40, %11"];
	Node0x16ce250[shape=record, label="  %42 = and i32 %2, %1"];
	Node0x16ce2c0[shape=record, label="  %43 = and i32 %42, %11"];
	Node0x16ce330[shape=record, label="  %44 = and i32 %42, %0"];
	Node0x16ce3a0[shape=record, label="  %45 = shl i32 %44, 1"];
	Node0x16ce410[shape=record, label="  %46 = add i32 %41, %43"];
	Node0x16ce480[shape=record, label="  %47 = sub i32 %26, %46"];
	Node0x16ce520[shape=record, label="  %48 = mul i32 %47, 3"];
	Node0x16ce590[shape=record, label="  %49 = xor i32 %31, %0"];
	Node0x16ce600[shape=record, label="  %50 = shl i32 %49, 1"];
	Node0x16ce670[shape=record, label="  %51 = sub i32 1, %3"];
	Node0x16ce6e0[shape=record, label="  %52 = add i32 %51, %36"];
	Node0x16ce750[shape=record, label="  %53 = add i32 %52, %34"];
	Node0x16ce7c0[shape=record, label="  %54 = sub i32 %53, %37"];
	Node0x16ce830[shape=record, label="  %55 = add i32 %54, %19"];
	Node0x16ce8a0[shape=record, label="  %56 = add i32 %55, %23"];
	Node0x16ce910[shape=record, label="  %57 = sub i32 %56, %25"];
	Node0x16ce980[shape=record, label="  %58 = add i32 %57, %20"];
	Node0x16ce9f0[shape=record, label="  %59 = sub i32 %58, %30"];
	Node0x16cea60[shape=record, label="  %60 = sub i32 %59, %39"];
	Node0x16cead0[shape=record, label="  %61 = sub i32 %60, %45"];
	Node0x16ceb40[shape=record, label="  %62 = add i32 %61, %50"];
	Node0x16cebb0[shape=record, label="  %63 = add i32 %62, %22"];
	Node0x16cec20[shape=record, label="  %64 = add i32 %63, %48"];
	Node0x16cf0a0[shape=record, label="  %65 = icmp eq i32 %18, %64"];
	Node0x166d268[shape=record, label="  %66 = select i1 %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x16cf330[shape=record, label="  %67 = tail call i32 @puts(i8* nonnull dereferenceable(1) %66)"];
	Node0x16cf380[shape=record, label="  ret void"];
	Node0x16ccfc0 -> Node0x16cd030;
	Node0x16cd030 -> Node0x16cd0a0;
	Node0x16cd0a0 -> Node0x16cd110;
	Node0x16cd110 -> Node0x16cd1b0;
	Node0x16cd1b0 -> Node0x16cd220;
	Node0x16cd220 -> Node0x16cd290;
	Node0x16cd290 -> Node0x16cd300;
	Node0x16cd300 -> Node0x16cd370;
	Node0x16cd370 -> Node0x16cd3e0;
	Node0x16cd3e0 -> Node0x16cd450;
	Node0x16cd450 -> Node0x16cd4c0;
	Node0x16cd4c0 -> Node0x16cd530;
	Node0x16cd530 -> Node0x16cd5a0;
	Node0x16cd5a0 -> Node0x16cd610;
	Node0x16cd610 -> Node0x16cd6b0;
	Node0x16cd6b0 -> Node0x16cd750;
	Node0x16cd750 -> Node0x16cd7c0;
	Node0x16cd7c0 -> Node0x16cd830;
	Node0x16cd830 -> Node0x16cd8a0;
	Node0x16cd8a0 -> Node0x16cd910;
	Node0x16cd910 -> Node0x16cd980;
	Node0x16cd980 -> Node0x16cd9f0;
	Node0x16cd9f0 -> Node0x16cda60;
	Node0x16cda60 -> Node0x16cdad0;
	Node0x16cdad0 -> Node0x16cdb40;
	Node0x16cdb40 -> Node0x16cdbb0;
	Node0x16cdbb0 -> Node0x16cde30;
	Node0x16cde30 -> Node0x16cdea0;
	Node0x16cdea0 -> Node0x16cdf10;
	Node0x16cdf10 -> Node0x16cdf80;
	Node0x16cdf80 -> Node0x16cdff0;
	Node0x16cdff0 -> Node0x16ce060;
	Node0x16ce060 -> Node0x16ce100;
	Node0x16ce100 -> Node0x16ce170;
	Node0x16ce170 -> Node0x16ce1e0;
	Node0x16ce1e0 -> Node0x16ce250;
	Node0x16ce250 -> Node0x16ce2c0;
	Node0x16ce2c0 -> Node0x16ce330;
	Node0x16ce330 -> Node0x16ce3a0;
	Node0x16ce3a0 -> Node0x16ce410;
	Node0x16ce410 -> Node0x16ce480;
	Node0x16ce480 -> Node0x16ce520;
	Node0x16ce520 -> Node0x16ce590;
	Node0x16ce590 -> Node0x16ce600;
	Node0x16ce600 -> Node0x16ce670;
	Node0x16ce670 -> Node0x16ce6e0;
	Node0x16ce6e0 -> Node0x16ce750;
	Node0x16ce750 -> Node0x16ce7c0;
	Node0x16ce7c0 -> Node0x16ce830;
	Node0x16ce830 -> Node0x16ce8a0;
	Node0x16ce8a0 -> Node0x16ce910;
	Node0x16ce910 -> Node0x16ce980;
	Node0x16ce980 -> Node0x16ce9f0;
	Node0x16ce9f0 -> Node0x16cea60;
	Node0x16cea60 -> Node0x16cead0;
	Node0x16cead0 -> Node0x16ceb40;
	Node0x16ceb40 -> Node0x16cebb0;
	Node0x16cebb0 -> Node0x16cec20;
	Node0x16cec20 -> Node0x16cf0a0;
	Node0x16cf0a0 -> Node0x166d268;
	Node0x166d268 -> Node0x16cf330;
	Node0x16cf330 -> Node0x16cf380;
edge [color=red]
	Node0x16cd030 -> Node0x16cd0a0;
	Node0x16cd220 -> Node0x16cd290;
	Node0x16cd290 -> Node0x16cd300;
	Node0x16cd220 -> Node0x16cd370;
	Node0x16cd370 -> Node0x16cd3e0;
	Node0x16cd3e0 -> Node0x16cd450;
	Node0x16cd300 -> Node0x16cd450;
	Node0x16cd450 -> Node0x16cd4c0;
	Node0x16cd110 -> Node0x16cd4c0;
	Node0x16cd4c0 -> Node0x16cd530;
	Node0x16cd0a0 -> Node0x16cd530;
	Node0x16ccfc0 -> Node0x16cd5a0;
	Node0x16cd610 -> Node0x16cd6b0;
	Node0x16cd6b0 -> Node0x16cd750;
	Node0x16cd110 -> Node0x16cd7c0;
	Node0x16cd830 -> Node0x16cd8a0;
	Node0x16cd5a0 -> Node0x16cd910;
	Node0x16cd980 -> Node0x16cd9f0;
	Node0x16cd9f0 -> Node0x16cda60;
	Node0x16cd1b0 -> Node0x16cda60;
	Node0x16cda60 -> Node0x16cdad0;
	Node0x16cd980 -> Node0x16cdb40;
	Node0x16cdbb0 -> Node0x16cde30;
	Node0x16cde30 -> Node0x16cdea0;
	Node0x16cd220 -> Node0x16cdea0;
	Node0x16cd220 -> Node0x16cdf10;
	Node0x16cdf10 -> Node0x16cdf80;
	Node0x16cd980 -> Node0x16cdf80;
	Node0x16cde30 -> Node0x16cdff0;
	Node0x16cd220 -> Node0x16cdff0;
	Node0x16cd290 -> Node0x16ce060;
	Node0x16cd980 -> Node0x16ce060;
	Node0x16ce060 -> Node0x16ce100;
	Node0x16cdb40 -> Node0x16ce170;
	Node0x16ce170 -> Node0x16ce1e0;
	Node0x16cd220 -> Node0x16ce1e0;
	Node0x16ce250 -> Node0x16ce2c0;
	Node0x16cd220 -> Node0x16ce2c0;
	Node0x16ce250 -> Node0x16ce330;
	Node0x16ce330 -> Node0x16ce3a0;
	Node0x16ce1e0 -> Node0x16ce410;
	Node0x16ce2c0 -> Node0x16ce410;
	Node0x16cd910 -> Node0x16ce480;
	Node0x16ce410 -> Node0x16ce480;
	Node0x16ce480 -> Node0x16ce520;
	Node0x16cdb40 -> Node0x16ce590;
	Node0x16ce590 -> Node0x16ce600;
	Node0x16ce670 -> Node0x16ce6e0;
	Node0x16cdf80 -> Node0x16ce6e0;
	Node0x16ce6e0 -> Node0x16ce750;
	Node0x16cdea0 -> Node0x16ce750;
	Node0x16ce750 -> Node0x16ce7c0;
	Node0x16cdff0 -> Node0x16ce7c0;
	Node0x16ce7c0 -> Node0x16ce830;
	Node0x16cd5a0 -> Node0x16ce830;
	Node0x16ce830 -> Node0x16ce8a0;
	Node0x16cd7c0 -> Node0x16ce8a0;
	Node0x16ce8a0 -> Node0x16ce910;
	Node0x16cd8a0 -> Node0x16ce910;
	Node0x16ce910 -> Node0x16ce980;
	Node0x16cd610 -> Node0x16ce980;
	Node0x16ce980 -> Node0x16ce9f0;
	Node0x16cdad0 -> Node0x16ce9f0;
	Node0x16ce9f0 -> Node0x16cea60;
	Node0x16ce100 -> Node0x16cea60;
	Node0x16cea60 -> Node0x16cead0;
	Node0x16ce3a0 -> Node0x16cead0;
	Node0x16cead0 -> Node0x16ceb40;
	Node0x16ce600 -> Node0x16ceb40;
	Node0x16ceb40 -> Node0x16cebb0;
	Node0x16cd750 -> Node0x16cebb0;
	Node0x16cebb0 -> Node0x16cec20;
	Node0x16ce520 -> Node0x16cec20;
	Node0x16cd530 -> Node0x16cf0a0;
	Node0x16cec20 -> Node0x16cf0a0;
	Node0x16cf0a0 -> Node0x166d268;
	Node0x166d268 -> Node0x16cf330;
}
