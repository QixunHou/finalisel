digraph "DFG for'main' function" {
	Node0x7ee278[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x7ee2f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x7ee388[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x7ee3e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x7ee868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7ee948[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x7eea48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7eeb08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x7eebb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7eee18[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x7eeed8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x7ef038[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x7ef098[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x7f0800[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x7f0a08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7f0b68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7f0c78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7f0d38[shape=record, label="  ret i32 0"];
	Node0x7ee278 -> Node0x7ee2f8;
	Node0x7ee2f8 -> Node0x7ee388;
	Node0x7ee388 -> Node0x7ee3e8;
	Node0x7ee3e8 -> Node0x7ee868;
	Node0x7ee868 -> Node0x7ee948;
	Node0x7ee948 -> Node0x7eea48;
	Node0x7eea48 -> Node0x7eeb08;
	Node0x7eeb08 -> Node0x7eebb8;
	Node0x7eebb8 -> Node0x7eee18;
	Node0x7eee18 -> Node0x7eeed8;
	Node0x7eeed8 -> Node0x7ef038;
	Node0x7ef038 -> Node0x7ef098;
	Node0x7ef098 -> Node0x7f0800;
	Node0x7f0800 -> Node0x7f0a08;
	Node0x7f0a08 -> Node0x7f0b68;
	Node0x7f0b68 -> Node0x7f0c78;
	Node0x7f0c78 -> Node0x7f0d38;
edge [color=red]
	Node0x7ee278 -> Node0x7ee3e8;
	Node0x7ee3e8 -> Node0x7ee868;
	Node0x7ee2f8 -> Node0x7ee948;
	Node0x7ee948 -> Node0x7eea48;
	Node0x7ee388 -> Node0x7eeb08;
	Node0x7eeb08 -> Node0x7eebb8;
	Node0x7ee278 -> Node0x7eee18;
	Node0x7ee2f8 -> Node0x7eee18;
	Node0x7ee388 -> Node0x7eee18;
	Node0x7ee278 -> Node0x7eeed8;
	Node0x7ee2f8 -> Node0x7ef038;
	Node0x7ee388 -> Node0x7ef098;
	Node0x7eeed8 -> Node0x7f0800;
	Node0x7ef038 -> Node0x7f0800;
	Node0x7ef098 -> Node0x7f0800;
	Node0x7eeb08 -> Node0x7f0a08;
	Node0x7ee948 -> Node0x7f0b68;
	Node0x7ee3e8 -> Node0x7f0c78;
}
