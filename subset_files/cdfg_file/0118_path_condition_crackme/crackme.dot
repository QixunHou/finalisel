digraph "DFG for'crackme' function" {
	Node0x11625c0[shape=record, label="  %3 = xor i32 %1, %0"];
	Node0x1162c70[shape=record, label="  %4 = sub i32 0, %3"];
	Node0x1162d30[shape=record, label="  %5 = shl i32 %0, 1"];
	Node0x1162da0[shape=record, label="  %6 = and i32 %1, %0"];
	Node0x1162e40[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x1162eb0[shape=record, label="  %8 = xor i32 %3, -1"];
	Node0x1162f20[shape=record, label="  %9 = xor i32 %1, -1"];
	Node0x1162f90[shape=record, label="  %10 = and i32 %9, %0"];
	Node0x1163000[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x1163070[shape=record, label="  %12 = or i32 %1, %0"];
	Node0x11630e0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1163150[shape=record, label="  %14 = or i32 %9, %0"];
	Node0x11631c0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1163230[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x11632d0[shape=record, label="  %17 = shl i32 %6, 2"];
	Node0x1163340[shape=record, label="  %18 = add i32 %10, %16"];
	Node0x11633e0[shape=record, label="  %19 = mul i32 %18, -5"];
	Node0x1163450[shape=record, label="  %20 = sub i32 %0, %1"];
	Node0x11634c0[shape=record, label="  %21 = add i32 %20, %5"];
	Node0x1163530[shape=record, label="  %22 = add i32 %21, %7"];
	Node0x11635a0[shape=record, label="  %23 = add i32 %22, %8"];
	Node0x1163610[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x1163680[shape=record, label="  %25 = sub i32 %24, %13"];
	Node0x11636f0[shape=record, label="  %26 = add i32 %25, %15"];
	Node0x1163760[shape=record, label="  %27 = sub i32 %26, %17"];
	Node0x11637d0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x1163840[shape=record, label="  %29 = icmp eq i32 %28, %4"];
	Node0x1103268[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1163ce0[shape=record, label="  %31 = tail call i32 @puts(i8* nonnull dereferenceable(1) %30)"];
	Node0x1163d30[shape=record, label="  ret void"];
	Node0x11625c0 -> Node0x1162c70;
	Node0x1162c70 -> Node0x1162d30;
	Node0x1162d30 -> Node0x1162da0;
	Node0x1162da0 -> Node0x1162e40;
	Node0x1162e40 -> Node0x1162eb0;
	Node0x1162eb0 -> Node0x1162f20;
	Node0x1162f20 -> Node0x1162f90;
	Node0x1162f90 -> Node0x1163000;
	Node0x1163000 -> Node0x1163070;
	Node0x1163070 -> Node0x11630e0;
	Node0x11630e0 -> Node0x1163150;
	Node0x1163150 -> Node0x11631c0;
	Node0x11631c0 -> Node0x1163230;
	Node0x1163230 -> Node0x11632d0;
	Node0x11632d0 -> Node0x1163340;
	Node0x1163340 -> Node0x11633e0;
	Node0x11633e0 -> Node0x1163450;
	Node0x1163450 -> Node0x11634c0;
	Node0x11634c0 -> Node0x1163530;
	Node0x1163530 -> Node0x11635a0;
	Node0x11635a0 -> Node0x1163610;
	Node0x1163610 -> Node0x1163680;
	Node0x1163680 -> Node0x11636f0;
	Node0x11636f0 -> Node0x1163760;
	Node0x1163760 -> Node0x11637d0;
	Node0x11637d0 -> Node0x1163840;
	Node0x1163840 -> Node0x1103268;
	Node0x1103268 -> Node0x1163ce0;
	Node0x1163ce0 -> Node0x1163d30;
edge [color=red]
	Node0x11625c0 -> Node0x1162c70;
	Node0x1162da0 -> Node0x1162e40;
	Node0x11625c0 -> Node0x1162eb0;
	Node0x1162f20 -> Node0x1162f90;
	Node0x1162f90 -> Node0x1163000;
	Node0x1163070 -> Node0x11630e0;
	Node0x1162f20 -> Node0x1163150;
	Node0x1163150 -> Node0x11631c0;
	Node0x1163070 -> Node0x1163230;
	Node0x1162da0 -> Node0x11632d0;
	Node0x1162f90 -> Node0x1163340;
	Node0x1163230 -> Node0x1163340;
	Node0x1163340 -> Node0x11633e0;
	Node0x1163450 -> Node0x11634c0;
	Node0x1162d30 -> Node0x11634c0;
	Node0x11634c0 -> Node0x1163530;
	Node0x1162e40 -> Node0x1163530;
	Node0x1163530 -> Node0x11635a0;
	Node0x1162eb0 -> Node0x11635a0;
	Node0x11635a0 -> Node0x1163610;
	Node0x1163000 -> Node0x1163610;
	Node0x1163610 -> Node0x1163680;
	Node0x11630e0 -> Node0x1163680;
	Node0x1163680 -> Node0x11636f0;
	Node0x11631c0 -> Node0x11636f0;
	Node0x11636f0 -> Node0x1163760;
	Node0x11632d0 -> Node0x1163760;
	Node0x1163760 -> Node0x11637d0;
	Node0x11633e0 -> Node0x11637d0;
	Node0x11637d0 -> Node0x1163840;
	Node0x1162c70 -> Node0x1163840;
	Node0x1163840 -> Node0x1103268;
	Node0x1103268 -> Node0x1163ce0;
}
