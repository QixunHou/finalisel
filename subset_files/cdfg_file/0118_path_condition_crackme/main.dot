digraph "DFG for'main' function" {
	Node0x1163ef8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1163f78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1164008[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1164468[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1164548[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1164668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11648a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1164958[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11658c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1165f50[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1165fc0[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x1166030[shape=record, label="  %10 = and i32 %7, %6"];
	Node0x11660a0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x1166110[shape=record, label="  %12 = xor i32 %8, -1"];
	Node0x1166180[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x11661f0[shape=record, label="  %14 = and i32 %6, %13"];
	Node0x1166260[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x11662d0[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x1166340[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x11663b0[shape=record, label="  %18 = or i32 %6, %13"];
	Node0x1166420[shape=record, label="  %19 = xor i32 %16, -1"];
	Node0x1166490[shape=record, label="  %20 = shl i32 %10, 2"];
	Node0x1166500[shape=record, label="  %21 = add i32 %14, %19"];
	Node0x1166570[shape=record, label="  %22 = mul i32 %21, -5"];
	Node0x11665e0[shape=record, label="  %23 = add i32 %18, %6"];
	Node0x1166650[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x11666c0[shape=record, label="  %25 = sub i32 %6, %7"];
	Node0x1166730[shape=record, label="  %26 = add i32 %25, %11"];
	Node0x11667a0[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x1166810[shape=record, label="  %28 = add i32 %27, %15"];
	Node0x1166880[shape=record, label="  %29 = sub i32 %28, %17"];
	Node0x11668f0[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0x1166960[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x11669d0[shape=record, label="  %32 = add i32 %31, %24"];
	Node0x1166c50[shape=record, label="  %33 = icmp eq i32 %32, %9"];
	Node0x11049d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1166ce0[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x1166f38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1167098[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1167158[shape=record, label="  ret i32 0"];
	Node0x1163ef8 -> Node0x1163f78;
	Node0x1163f78 -> Node0x1164008;
	Node0x1164008 -> Node0x1164468;
	Node0x1164468 -> Node0x1164548;
	Node0x1164548 -> Node0x1164668;
	Node0x1164668 -> Node0x11648a0;
	Node0x11648a0 -> Node0x1164958;
	Node0x1164958 -> Node0x11658c8;
	Node0x11658c8 -> Node0x1165f50;
	Node0x1165f50 -> Node0x1165fc0;
	Node0x1165fc0 -> Node0x1166030;
	Node0x1166030 -> Node0x11660a0;
	Node0x11660a0 -> Node0x1166110;
	Node0x1166110 -> Node0x1166180;
	Node0x1166180 -> Node0x11661f0;
	Node0x11661f0 -> Node0x1166260;
	Node0x1166260 -> Node0x11662d0;
	Node0x11662d0 -> Node0x1166340;
	Node0x1166340 -> Node0x11663b0;
	Node0x11663b0 -> Node0x1166420;
	Node0x1166420 -> Node0x1166490;
	Node0x1166490 -> Node0x1166500;
	Node0x1166500 -> Node0x1166570;
	Node0x1166570 -> Node0x11665e0;
	Node0x11665e0 -> Node0x1166650;
	Node0x1166650 -> Node0x11666c0;
	Node0x11666c0 -> Node0x1166730;
	Node0x1166730 -> Node0x11667a0;
	Node0x11667a0 -> Node0x1166810;
	Node0x1166810 -> Node0x1166880;
	Node0x1166880 -> Node0x11668f0;
	Node0x11668f0 -> Node0x1166960;
	Node0x1166960 -> Node0x11669d0;
	Node0x11669d0 -> Node0x1166c50;
	Node0x1166c50 -> Node0x11049d8;
	Node0x11049d8 -> Node0x1166ce0;
	Node0x1166ce0 -> Node0x1166f38;
	Node0x1166f38 -> Node0x1167098;
	Node0x1167098 -> Node0x1167158;
edge [color=red]
	Node0x1163ef8 -> Node0x1164008;
	Node0x1164008 -> Node0x1164468;
	Node0x1163f78 -> Node0x1164548;
	Node0x1164548 -> Node0x1164668;
	Node0x1163ef8 -> Node0x11648a0;
	Node0x1163f78 -> Node0x11648a0;
	Node0x1163ef8 -> Node0x1164958;
	Node0x1163f78 -> Node0x11658c8;
	Node0x11658c8 -> Node0x1165f50;
	Node0x1164958 -> Node0x1165f50;
	Node0x1165f50 -> Node0x1165fc0;
	Node0x11658c8 -> Node0x1166030;
	Node0x1164958 -> Node0x1166030;
	Node0x1166030 -> Node0x11660a0;
	Node0x1165f50 -> Node0x1166110;
	Node0x11658c8 -> Node0x1166180;
	Node0x1164958 -> Node0x11661f0;
	Node0x1166180 -> Node0x11661f0;
	Node0x11661f0 -> Node0x1166260;
	Node0x11658c8 -> Node0x11662d0;
	Node0x1164958 -> Node0x11662d0;
	Node0x11662d0 -> Node0x1166340;
	Node0x1164958 -> Node0x11663b0;
	Node0x1166180 -> Node0x11663b0;
	Node0x11662d0 -> Node0x1166420;
	Node0x1166030 -> Node0x1166490;
	Node0x11661f0 -> Node0x1166500;
	Node0x1166420 -> Node0x1166500;
	Node0x1166500 -> Node0x1166570;
	Node0x11663b0 -> Node0x11665e0;
	Node0x1164958 -> Node0x11665e0;
	Node0x11665e0 -> Node0x1166650;
	Node0x1164958 -> Node0x11666c0;
	Node0x11658c8 -> Node0x11666c0;
	Node0x11666c0 -> Node0x1166730;
	Node0x11660a0 -> Node0x1166730;
	Node0x1166730 -> Node0x11667a0;
	Node0x1166110 -> Node0x11667a0;
	Node0x11667a0 -> Node0x1166810;
	Node0x1166260 -> Node0x1166810;
	Node0x1166810 -> Node0x1166880;
	Node0x1166340 -> Node0x1166880;
	Node0x1166880 -> Node0x11668f0;
	Node0x1166490 -> Node0x11668f0;
	Node0x11668f0 -> Node0x1166960;
	Node0x1166570 -> Node0x1166960;
	Node0x1166960 -> Node0x11669d0;
	Node0x1166650 -> Node0x11669d0;
	Node0x11669d0 -> Node0x1166c50;
	Node0x1165fc0 -> Node0x1166c50;
	Node0x1166c50 -> Node0x11049d8;
	Node0x11049d8 -> Node0x1166ce0;
	Node0x1164548 -> Node0x1166f38;
	Node0x1164008 -> Node0x1167098;
}
