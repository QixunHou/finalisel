digraph "DFG for'main' function" {
	Node0x1c90f98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c91018[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c910a8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1c91508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c915e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1c91708[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c91940[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1c919f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c92968[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c92ff0[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x1c93060[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0x1c930d0[shape=record, label="  %10 = or i32 %9, 1"];
	Node0x1c93140[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x1c931b0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1c93220[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x1c93290[shape=record, label="  %14 = xor i32 %7, -1"];
	Node0x1c93300[shape=record, label="  %15 = or i32 %6, %14"];
	Node0x1c93370[shape=record, label="  %16 = and i32 %6, %14"];
	Node0x1c933e0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1c93450[shape=record, label="  %18 = xor i32 %8, -1"];
	Node0x1c934c0[shape=record, label="  %19 = mul i32 %18, 7"];
	Node0x1c93530[shape=record, label="  %20 = shl i32 %15, 2"];
	Node0x1c935a0[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0x1c93610[shape=record, label="  %22 = shl i32 %16, 3"];
	Node0x1c93680[shape=record, label="  %23 = shl i32 %6, 1"];
	Node0x1c936f0[shape=record, label="  %24 = sub i32 %11, %15"];
	Node0x1c93760[shape=record, label="  %25 = mul i32 %24, 5"];
	Node0x1c937d0[shape=record, label="  %26 = add i32 %23, -1"];
	Node0x1c93840[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x1c938b0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x1c93920[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x1c93990[shape=record, label="  %30 = add i32 %29, %10"];
	Node0x1c93a00[shape=record, label="  %31 = sub i32 %30, %13"];
	Node0x1c93a70[shape=record, label="  %32 = add i32 %31, %21"];
	Node0x1c93cf0[shape=record, label="  %33 = add i32 %32, %25"];
	Node0x1c93d60[shape=record, label="  %34 = icmp eq i32 %33, -1"];
	Node0x1c319d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c93df0[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0x1c94048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c941a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c94268[shape=record, label="  ret i32 0"];
	Node0x1c90f98 -> Node0x1c91018;
	Node0x1c91018 -> Node0x1c910a8;
	Node0x1c910a8 -> Node0x1c91508;
	Node0x1c91508 -> Node0x1c915e8;
	Node0x1c915e8 -> Node0x1c91708;
	Node0x1c91708 -> Node0x1c91940;
	Node0x1c91940 -> Node0x1c919f8;
	Node0x1c919f8 -> Node0x1c92968;
	Node0x1c92968 -> Node0x1c92ff0;
	Node0x1c92ff0 -> Node0x1c93060;
	Node0x1c93060 -> Node0x1c930d0;
	Node0x1c930d0 -> Node0x1c93140;
	Node0x1c93140 -> Node0x1c931b0;
	Node0x1c931b0 -> Node0x1c93220;
	Node0x1c93220 -> Node0x1c93290;
	Node0x1c93290 -> Node0x1c93300;
	Node0x1c93300 -> Node0x1c93370;
	Node0x1c93370 -> Node0x1c933e0;
	Node0x1c933e0 -> Node0x1c93450;
	Node0x1c93450 -> Node0x1c934c0;
	Node0x1c934c0 -> Node0x1c93530;
	Node0x1c93530 -> Node0x1c935a0;
	Node0x1c935a0 -> Node0x1c93610;
	Node0x1c93610 -> Node0x1c93680;
	Node0x1c93680 -> Node0x1c936f0;
	Node0x1c936f0 -> Node0x1c93760;
	Node0x1c93760 -> Node0x1c937d0;
	Node0x1c937d0 -> Node0x1c93840;
	Node0x1c93840 -> Node0x1c938b0;
	Node0x1c938b0 -> Node0x1c93920;
	Node0x1c93920 -> Node0x1c93990;
	Node0x1c93990 -> Node0x1c93a00;
	Node0x1c93a00 -> Node0x1c93a70;
	Node0x1c93a70 -> Node0x1c93cf0;
	Node0x1c93cf0 -> Node0x1c93d60;
	Node0x1c93d60 -> Node0x1c319d8;
	Node0x1c319d8 -> Node0x1c93df0;
	Node0x1c93df0 -> Node0x1c94048;
	Node0x1c94048 -> Node0x1c941a8;
	Node0x1c941a8 -> Node0x1c94268;
edge [color=red]
	Node0x1c90f98 -> Node0x1c910a8;
	Node0x1c910a8 -> Node0x1c91508;
	Node0x1c91018 -> Node0x1c915e8;
	Node0x1c915e8 -> Node0x1c91708;
	Node0x1c90f98 -> Node0x1c91940;
	Node0x1c91018 -> Node0x1c91940;
	Node0x1c90f98 -> Node0x1c919f8;
	Node0x1c91018 -> Node0x1c92968;
	Node0x1c92968 -> Node0x1c92ff0;
	Node0x1c919f8 -> Node0x1c92ff0;
	Node0x1c92ff0 -> Node0x1c93060;
	Node0x1c93060 -> Node0x1c930d0;
	Node0x1c92968 -> Node0x1c93140;
	Node0x1c919f8 -> Node0x1c93140;
	Node0x1c93140 -> Node0x1c931b0;
	Node0x1c931b0 -> Node0x1c93220;
	Node0x1c92968 -> Node0x1c93290;
	Node0x1c919f8 -> Node0x1c93300;
	Node0x1c93290 -> Node0x1c93300;
	Node0x1c919f8 -> Node0x1c93370;
	Node0x1c93290 -> Node0x1c93370;
	Node0x1c93370 -> Node0x1c933e0;
	Node0x1c92ff0 -> Node0x1c93450;
	Node0x1c93450 -> Node0x1c934c0;
	Node0x1c93300 -> Node0x1c93530;
	Node0x1c93530 -> Node0x1c935a0;
	Node0x1c93370 -> Node0x1c93610;
	Node0x1c919f8 -> Node0x1c93680;
	Node0x1c93140 -> Node0x1c936f0;
	Node0x1c93300 -> Node0x1c936f0;
	Node0x1c936f0 -> Node0x1c93760;
	Node0x1c93680 -> Node0x1c937d0;
	Node0x1c937d0 -> Node0x1c93840;
	Node0x1c933e0 -> Node0x1c93840;
	Node0x1c93840 -> Node0x1c938b0;
	Node0x1c934c0 -> Node0x1c938b0;
	Node0x1c938b0 -> Node0x1c93920;
	Node0x1c93610 -> Node0x1c93920;
	Node0x1c93920 -> Node0x1c93990;
	Node0x1c930d0 -> Node0x1c93990;
	Node0x1c93990 -> Node0x1c93a00;
	Node0x1c93220 -> Node0x1c93a00;
	Node0x1c93a00 -> Node0x1c93a70;
	Node0x1c935a0 -> Node0x1c93a70;
	Node0x1c93a70 -> Node0x1c93cf0;
	Node0x1c93760 -> Node0x1c93cf0;
	Node0x1c93cf0 -> Node0x1c93d60;
	Node0x1c93d60 -> Node0x1c319d8;
	Node0x1c319d8 -> Node0x1c93df0;
	Node0x1c915e8 -> Node0x1c94048;
	Node0x1c910a8 -> Node0x1c941a8;
}
