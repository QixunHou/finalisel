digraph "DFG for'crackme' function" {
	Node0x1c8f5d0[shape=record, label="  %3 = or i32 %1, %0"];
	Node0x1c8fc80[shape=record, label="  %4 = mul i32 %3, -2"];
	Node0x1c8fd40[shape=record, label="  %5 = or i32 %4, 1"];
	Node0x1c8fdb0[shape=record, label="  %6 = and i32 %1, %0"];
	Node0x1c8fe20[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x1c8fe90[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0x1c8ff30[shape=record, label="  %9 = xor i32 %1, -1"];
	Node0x1c8ffa0[shape=record, label="  %10 = or i32 %9, %0"];
	Node0x1c90010[shape=record, label="  %11 = and i32 %9, %0"];
	Node0x1c90080[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1c900f0[shape=record, label="  %13 = xor i32 %3, -1"];
	Node0x1c90190[shape=record, label="  %14 = mul i32 %13, 7"];
	Node0x1c90230[shape=record, label="  %15 = shl i32 %10, 2"];
	Node0x1c902d0[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x1c90370[shape=record, label="  %17 = shl i32 %11, 3"];
	Node0x1c903e0[shape=record, label="  %18 = shl i32 %0, 1"];
	Node0x1c90450[shape=record, label="  %19 = sub i32 %6, %10"];
	Node0x1c904f0[shape=record, label="  %20 = mul i32 %19, 5"];
	Node0x1c90560[shape=record, label="  %21 = add i32 %18, -1"];
	Node0x1c905d0[shape=record, label="  %22 = add i32 %21, %12"];
	Node0x1c90640[shape=record, label="  %23 = add i32 %22, %14"];
	Node0x1c906b0[shape=record, label="  %24 = add i32 %23, %17"];
	Node0x1c90720[shape=record, label="  %25 = add i32 %24, %5"];
	Node0x1c90790[shape=record, label="  %26 = sub i32 %25, %8"];
	Node0x1c90800[shape=record, label="  %27 = add i32 %26, %16"];
	Node0x1c90870[shape=record, label="  %28 = add i32 %27, %20"];
	Node0x1c908e0[shape=record, label="  %29 = icmp eq i32 %28, -1"];
	Node0x1c30268[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c90d80[shape=record, label="  %31 = tail call i32 @puts(i8* nonnull dereferenceable(1) %30)"];
	Node0x1c90dd0[shape=record, label="  ret void"];
	Node0x1c8f5d0 -> Node0x1c8fc80;
	Node0x1c8fc80 -> Node0x1c8fd40;
	Node0x1c8fd40 -> Node0x1c8fdb0;
	Node0x1c8fdb0 -> Node0x1c8fe20;
	Node0x1c8fe20 -> Node0x1c8fe90;
	Node0x1c8fe90 -> Node0x1c8ff30;
	Node0x1c8ff30 -> Node0x1c8ffa0;
	Node0x1c8ffa0 -> Node0x1c90010;
	Node0x1c90010 -> Node0x1c90080;
	Node0x1c90080 -> Node0x1c900f0;
	Node0x1c900f0 -> Node0x1c90190;
	Node0x1c90190 -> Node0x1c90230;
	Node0x1c90230 -> Node0x1c902d0;
	Node0x1c902d0 -> Node0x1c90370;
	Node0x1c90370 -> Node0x1c903e0;
	Node0x1c903e0 -> Node0x1c90450;
	Node0x1c90450 -> Node0x1c904f0;
	Node0x1c904f0 -> Node0x1c90560;
	Node0x1c90560 -> Node0x1c905d0;
	Node0x1c905d0 -> Node0x1c90640;
	Node0x1c90640 -> Node0x1c906b0;
	Node0x1c906b0 -> Node0x1c90720;
	Node0x1c90720 -> Node0x1c90790;
	Node0x1c90790 -> Node0x1c90800;
	Node0x1c90800 -> Node0x1c90870;
	Node0x1c90870 -> Node0x1c908e0;
	Node0x1c908e0 -> Node0x1c30268;
	Node0x1c30268 -> Node0x1c90d80;
	Node0x1c90d80 -> Node0x1c90dd0;
edge [color=red]
	Node0x1c8f5d0 -> Node0x1c8fc80;
	Node0x1c8fc80 -> Node0x1c8fd40;
	Node0x1c8fdb0 -> Node0x1c8fe20;
	Node0x1c8fe20 -> Node0x1c8fe90;
	Node0x1c8ff30 -> Node0x1c8ffa0;
	Node0x1c8ff30 -> Node0x1c90010;
	Node0x1c90010 -> Node0x1c90080;
	Node0x1c8f5d0 -> Node0x1c900f0;
	Node0x1c900f0 -> Node0x1c90190;
	Node0x1c8ffa0 -> Node0x1c90230;
	Node0x1c90230 -> Node0x1c902d0;
	Node0x1c90010 -> Node0x1c90370;
	Node0x1c8fdb0 -> Node0x1c90450;
	Node0x1c8ffa0 -> Node0x1c90450;
	Node0x1c90450 -> Node0x1c904f0;
	Node0x1c903e0 -> Node0x1c90560;
	Node0x1c90560 -> Node0x1c905d0;
	Node0x1c90080 -> Node0x1c905d0;
	Node0x1c905d0 -> Node0x1c90640;
	Node0x1c90190 -> Node0x1c90640;
	Node0x1c90640 -> Node0x1c906b0;
	Node0x1c90370 -> Node0x1c906b0;
	Node0x1c906b0 -> Node0x1c90720;
	Node0x1c8fd40 -> Node0x1c90720;
	Node0x1c90720 -> Node0x1c90790;
	Node0x1c8fe90 -> Node0x1c90790;
	Node0x1c90790 -> Node0x1c90800;
	Node0x1c902d0 -> Node0x1c90800;
	Node0x1c90800 -> Node0x1c90870;
	Node0x1c904f0 -> Node0x1c90870;
	Node0x1c90870 -> Node0x1c908e0;
	Node0x1c908e0 -> Node0x1c30268;
	Node0x1c30268 -> Node0x1c90d80;
}
