; ModuleID = '../.././c_source_file/0435_path_condition_crackme.c'
source_filename = "../.././c_source_file/0435_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %2, -1
  %5 = and i32 %4, %0
  %6 = xor i32 %1, %0
  %7 = or i32 %5, %6
  %8 = mul i32 %7, -2
  %9 = xor i32 %6, -1
  %10 = and i32 %9, %2
  %11 = add i32 %8, %10
  %12 = xor i32 %1, -1
  %13 = or i32 %12, %0
  %14 = xor i32 %13, -1
  %15 = xor i32 %14, %2
  %16 = or i32 %1, %0
  %17 = xor i32 %2, %1
  %18 = and i32 %17, %16
  %19 = and i32 %2, %0
  %20 = xor i32 %19, -1
  %21 = and i32 %6, %20
  %22 = or i32 %5, %1
  %23 = or i32 %19, %12
  %24 = or i32 %4, %1
  %25 = xor i32 %24, -1
  %26 = or i32 %25, %0
  %27 = and i32 %12, %0
  %28 = xor i32 %17, -1
  %29 = or i32 %27, %28
  %30 = or i32 %4, %0
  %31 = and i32 %30, %1
  %32 = xor i32 %5, -1
  %33 = and i32 %32, %12
  %34 = xor i32 %16, -1
  %35 = or i32 %19, %34
  %36 = xor i32 %16, %2
  %37 = and i32 %4, %9
  %38 = and i32 %1, %0
  %39 = xor i32 %38, -1
  %40 = xor i32 %2, %0
  %41 = xor i32 %40, -1
  %42 = and i32 %41, %39
  %43 = xor i32 %0, -1
  %44 = and i32 %12, %2
  %45 = and i32 %44, %43
  %46 = or i32 %12, %2
  %47 = and i32 %46, %0
  %48 = xor i32 %47, -1
  %49 = xor i32 %45, %48
  %50 = or i32 %14, %2
  %51 = xor i32 %30, -1
  %52 = or i32 %51, %1
  %53 = shl i32 %52, 1
  %54 = or i32 %19, %14
  %55 = shl i32 %54, 1
  %56 = or i32 %2, %0
  %57 = xor i32 %56, %38
  %58 = and i32 %2, %1
  %59 = xor i32 %58, -1
  %60 = add i32 %58, 1
  %61 = or i32 %40, %9
  %62 = and i32 %16, %4
  %63 = shl i32 %62, 1
  %64 = or i32 %28, %14
  %65 = or i32 %17, %0
  %66 = shl i32 %65, 2
  %67 = or i32 %40, %1
  %68 = xor i32 %59, %0
  %69 = or i32 %19, %9
  %70 = xor i32 %27, -1
  %71 = and i32 %28, %70
  %72 = xor i32 %24, %0
  %73 = or i32 %59, %43
  %74 = or i32 %40, %38
  %75 = and i32 %56, %6
  %76 = shl i32 %75, 1
  %77 = xor i32 %20, %1
  %78 = and i32 %13, %4
  %79 = or i32 %2, %1
  %80 = xor i32 %79, %38
  %81 = or i32 %5, %9
  %82 = or i32 %40, %34
  %83 = or i32 %45, %47
  %84 = or i32 %38, %41
  %85 = and i32 %4, %1
  %86 = xor i32 %85, %0
  %87 = or i32 %40, %12
  %88 = or i32 %38, %25
  %89 = xor i32 %85, -1
  %90 = add i32 %85, 1
  %91 = and i32 %58, %43
  %92 = and i32 %79, %0
  %93 = xor i32 %91, -1
  %94 = xor i32 %92, %93
  %95 = and i32 %56, %12
  %96 = or i32 %34, %2
  %97 = xor i32 %79, -1
  %98 = or i32 %19, %97
  %99 = and i32 %79, %43
  %100 = add i32 %17, 1
  %101 = xor i32 %34, %2
  %102 = or i32 %6, %41
  %103 = add i32 %79, 1
  %104 = or i32 %97, %43
  %105 = and i32 %58, %0
  %106 = and i32 %17, %43
  %107 = or i32 %105, %106
  %108 = xor i32 %27, %2
  %109 = and i32 %17, %39
  %110 = or i32 %17, %38
  %111 = and i32 %41, %12
  %112 = or i32 %40, %14
  %113 = and i32 %16, %2
  %114 = and i32 %6, %41
  %115 = xor i32 %56, -1
  %116 = or i32 %6, %115
  %117 = shl i32 %116, 1
  %118 = xor i32 %17, %0
  %119 = xor i32 %118, -1
  %120 = or i32 %105, %119
  %121 = and i32 %4, %70
  %122 = xor i32 %79, %0
  %123 = or i32 %105, %122
  %124 = and i32 %17, %13
  %125 = or i32 %17, %14
  %126 = xor i32 %5, %24
  %127 = or i32 %6, %51
  %128 = xor i32 %105, %118
  %129 = xor i32 %5, %59
  %130 = shl i32 %129, 1
  %131 = xor i32 %19, %13
  %132 = shl i32 %131, 1
  %133 = and i32 %44, %0
  %134 = xor i32 %133, %119
  %135 = xor i32 %70, %2
  %136 = shl i32 %135, 1
  %137 = or i32 %38, %4
  %138 = or i32 %17, %34
  %139 = and i32 %46, %43
  %140 = or i32 %133, %139
  %141 = xor i32 %19, %79
  %142 = or i32 %28, %34
  %143 = or i32 %89, %43
  %144 = or i32 %51, %12
  %145 = shl i32 %144, 1
  %146 = and i32 %13, %41
  %147 = and i32 %6, %2
  %148 = or i32 %4, %9
  %149 = or i32 %85, %27
  %150 = xor i32 %122, -1
  %151 = xor i32 %105, %150
  %152 = or i32 %41, %34
  %153 = xor i32 %28, %0
  %154 = xor i32 %32, %1
  %155 = shl i32 %154, 1
  %156 = or i32 %115, %12
  %157 = xor i32 %5, %1
  %158 = or i32 %27, %2
  %159 = xor i32 %46, %0
  %160 = or i32 %133, %159
  %161 = and i32 %28, %39
  %162 = add i32 %30, 1
  %163 = xor i32 %39, %2
  %164 = or i32 %41, %1
  %165 = and i32 %6, %32
  %166 = or i32 %58, %43
  %167 = and i32 %20, %1
  %168 = shl i32 %167, 1
  %169 = or i32 %17, %43
  %170 = shl i32 %169, 1
  %171 = or i32 %41, %14
  %172 = xor i32 %105, 2147483647
  %173 = xor i32 %172, %99
  %174 = or i32 %40, %6
  %175 = and i32 %16, %41
  %176 = or i32 %133, %118
  %177 = or i32 %28, %43
  %178 = or i32 %38, %51
  %179 = or i32 %41, %9
  %180 = and i32 %13, %2
  %181 = xor i32 %25, %0
  %182 = and i32 %40, %13
  %183 = xor i32 %169, -1
  %184 = or i32 %45, %183
  %185 = and i32 %56, %1
  %186 = xor i32 %19, %1
  %187 = and i32 %40, %12
  %188 = xor i32 %89, %0
  %189 = or i32 %40, %27
  %190 = and i32 %17, %0
  %191 = or i32 %91, %190
  %192 = or i32 %27, %41
  %193 = and i32 %20, %9
  %194 = xor i32 %115, %1
  %195 = or i32 %51, %9
  %196 = xor i32 %30, %38
  %197 = or i32 %19, %6
  %198 = or i32 %38, %28
  %199 = and i32 %40, %6
  %200 = add i32 %38, 1
  %201 = and i32 %40, %9
  %202 = or i32 %79, %0
  %203 = or i32 %24, %43
  %204 = and i32 %32, %9
  %205 = and i32 %24, %43
  %206 = xor i32 %133, -1
  %207 = xor i32 %139, %206
  %208 = and i32 %30, %12
  %209 = or i32 %19, %85
  %210 = or i32 %5, %12
  %211 = or i32 %115, %1
  %212 = xor i32 %97, %0
  %213 = shl i32 %212, 1
  %214 = or i32 %4, %14
  %215 = or i32 %5, %25
  %216 = and i32 %56, %9
  %217 = or i32 %58, %0
  %218 = xor i32 %172, %106
  %219 = shl i32 %218, 1
  %220 = and i32 %16, %28
  %221 = shl i32 %220, 1
  %222 = and i32 %89, %43
  %223 = shl i32 %222, 1
  %224 = and i32 %39, %2
  %225 = and i32 %59, %43
  %226 = xor i32 %38, %2
  %227 = or i32 %6, %2
  %228 = add i32 %6, 1
  %229 = or i32 %27, %4
  %230 = and i32 %41, %70
  %231 = xor i32 %19, %89
  %232 = and i32 %4, %39
  %233 = xor i32 %65, -1
  %234 = or i32 %133, %233
  %235 = or i32 %25, %43
  %236 = xor i32 %159, %206
  %237 = and i32 %6, %4
  %238 = and i32 %17, %70
  %239 = and i32 %32, %1
  %240 = shl i32 %239, 1
  %241 = or i32 %38, %2
  %242 = or i32 %5, %58
  %243 = and i32 %20, %12
  %244 = or i32 %28, %0
  %245 = or i32 %6, %4
  %246 = and i32 %30, %6
  %247 = xor i32 %190, %93
  %248 = and i32 %28, %0
  %249 = or i32 %105, %99
  %250 = or i32 %115, %9
  %251 = and i32 %40, %70
  %252 = or i32 %89, %0
  %253 = or i32 %85, %43
  %254 = or i32 %85, %0
  %255 = or i32 %24, %0
  %256 = and i32 %41, %9
  %257 = and i32 %41, %1
  %258 = or i32 %91, %92
  %259 = xor i32 %27, %89
  %260 = xor i32 %133, %65
  %261 = or i32 %41, %12
  %262 = add i32 %2, 1
  %263 = and i32 %30, %9
  %264 = or i32 %59, %0
  %265 = shl i32 %264, 1
  %266 = and i32 %13, %28
  %267 = and i32 %70, %2
  %268 = or i32 %97, %0
  %269 = shl i32 %268, 1
  %270 = shl i32 %40, 1
  %271 = or i32 %79, %43
  %272 = xor i32 %56, %1
  %273 = shl i32 %272, 1
  %274 = or i32 %38, %97
  %275 = and i32 %40, %16
  %276 = or i32 %4, %34
  %277 = xor i32 %30, %1
  %278 = or i32 %38, %115
  %279 = or i32 %17, %27
  %280 = shl i32 %279, 1
  %281 = or i32 %19, %1
  %282 = shl i32 %281, 1
  %283 = xor i32 %19, %16
  %284 = or i32 %58, %27
  %285 = shl i32 %284, 1
  %286 = xor i32 %13, %2
  %287 = shl i32 %30, 1
  %288 = xor i32 %51, %1
  %289 = xor i32 %27, %59
  %290 = and i32 %97, %43
  %291 = shl i32 %290, 1
  %292 = and i32 %85, %43
  %293 = shl i32 %292, 2
  %294 = and i32 %97, %0
  %295 = and i32 %85, %0
  %296 = mul i32 %295, 30
  %297 = and i32 %25, %43
  %298 = mul i32 %297, 19
  %299 = mul i32 %91, 12
  %300 = and i32 %25, %0
  %301 = sub i32 %60, %242
  %302 = add i32 %301, %278
  %303 = add i32 %302, %179
  %304 = add i32 %303, %104
  %305 = mul i32 %304, 5
  %306 = add i32 %266, %14
  %307 = sub i32 %306, %283
  %308 = sub i32 %307, %171
  %309 = sub i32 %308, %21
  %310 = mul i32 %309, 3
  %311 = add i32 %84, %245
  %312 = add i32 %311, %83
  %313 = shl i32 %312, 2
  %314 = add i32 %300, %294
  %315 = mul i32 %314, 17
  %316 = add i32 %16, -1
  %317 = add i32 %316, %19
  %318 = add i32 %317, %232
  %319 = add i32 %318, %113
  %320 = add i32 %319, %56
  %321 = add i32 %320, %50
  %322 = add i32 %321, %105
  %323 = add i32 %322, %277
  %324 = add i32 %323, %257
  %325 = add i32 %324, %256
  %326 = add i32 %325, %255
  %327 = add i32 %326, %235
  %328 = add i32 %327, %210
  %329 = add i32 %328, %197
  %330 = add i32 %329, %196
  %331 = add i32 %330, %189
  %332 = add i32 %331, %182
  %333 = add i32 %332, %146
  %334 = add i32 %333, %143
  %335 = add i32 %334, %112
  %336 = add i32 %335, %102
  %337 = add i32 %336, %73
  %338 = add i32 %337, %71
  %339 = add i32 %338, %249
  %340 = add i32 %339, %173
  %341 = shl i32 %340, 1
  %342 = add i32 %6, %27
  %343 = add i32 %342, 5
  %344 = sub i32 %343, %13
  %345 = add i32 %344, %2
  %346 = add i32 %345, %34
  %347 = add i32 %346, %200
  %348 = add i32 %347, %228
  %349 = add i32 %348, %27
  %350 = add i32 %349, %38
  %351 = add i32 %350, %262
  %352 = add i32 %351, %15
  %353 = add i32 %352, %20
  %354 = sub i32 %353, %36
  %355 = add i32 %354, %37
  %356 = add i32 %355, %41
  %357 = add i32 %356, %78
  %358 = add i32 %357, %90
  %359 = sub i32 %358, %96
  %360 = add i32 %359, %100
  %361 = add i32 %360, %101
  %362 = add i32 %361, %103
  %363 = add i32 %362, %108
  %364 = sub i32 %363, %85
  %365 = add i32 %364, %121
  %366 = add i32 %365, %79
  %367 = sub i32 %366, %58
  %368 = add i32 %367, %137
  %369 = add i32 %368, %147
  %370 = sub i32 %369, %148
  %371 = sub i32 %370, %158
  %372 = add i32 %371, %162
  %373 = sub i32 %372, %163
  %374 = sub i32 %373, %5
  %375 = sub i32 %374, %180
  %376 = add i32 %375, %24
  %377 = add i32 %376, %214
  %378 = add i32 %377, %115
  %379 = add i32 %378, %224
  %380 = sub i32 %379, %226
  %381 = add i32 %380, %32
  %382 = add i32 %381, %227
  %383 = add i32 %382, %229
  %384 = add i32 %383, %237
  %385 = sub i32 %384, %241
  %386 = sub i32 %385, %267
  %387 = add i32 %386, %276
  %388 = sub i32 %387, %286
  %389 = add i32 %388, %18
  %390 = sub i32 %389, %22
  %391 = sub i32 %390, %23
  %392 = sub i32 %391, %26
  %393 = add i32 %392, %29
  %394 = sub i32 %393, %31
  %395 = sub i32 %394, %33
  %396 = add i32 %395, %35
  %397 = sub i32 %396, %42
  %398 = sub i32 %397, %57
  %399 = add i32 %398, %61
  %400 = sub i32 %399, %63
  %401 = add i32 %400, %64
  %402 = add i32 %401, %67
  %403 = sub i32 %402, %68
  %404 = add i32 %403, %69
  %405 = sub i32 %404, %72
  %406 = sub i32 %405, %74
  %407 = add i32 %406, %77
  %408 = add i32 %407, %80
  %409 = sub i32 %408, %81
  %410 = sub i32 %409, %82
  %411 = add i32 %410, %86
  %412 = sub i32 %411, %87
  %413 = sub i32 %412, %88
  %414 = sub i32 %413, %95
  %415 = sub i32 %414, %98
  %416 = add i32 %415, %99
  %417 = sub i32 %416, %109
  %418 = sub i32 %417, %110
  %419 = sub i32 %418, %111
  %420 = sub i32 %419, %114
  %421 = add i32 %420, %122
  %422 = sub i32 %421, %124
  %423 = sub i32 %422, %125
  %424 = sub i32 %423, %126
  %425 = add i32 %424, %127
  %426 = sub i32 %425, %136
  %427 = sub i32 %426, %138
  %428 = sub i32 %427, %141
  %429 = sub i32 %428, %142
  %430 = sub i32 %429, %149
  %431 = sub i32 %430, %152
  %432 = sub i32 %431, %153
  %433 = sub i32 %432, %156
  %434 = add i32 %433, %157
  %435 = sub i32 %434, %161
  %436 = sub i32 %435, %164
  %437 = add i32 %436, %165
  %438 = sub i32 %437, %166
  %439 = sub i32 %438, %174
  %440 = add i32 %439, %175
  %441 = sub i32 %440, %177
  %442 = sub i32 %441, %178
  %443 = add i32 %442, %181
  %444 = sub i32 %443, %92
  %445 = sub i32 %444, %185
  %446 = add i32 %445, %186
  %447 = add i32 %446, %187
  %448 = add i32 %447, %188
  %449 = sub i32 %448, %192
  %450 = sub i32 %449, %193
  %451 = sub i32 %450, %194
  %452 = sub i32 %451, %195
  %453 = add i32 %452, %198
  %454 = sub i32 %453, %199
  %455 = sub i32 %454, %201
  %456 = sub i32 %455, %202
  %457 = sub i32 %456, %203
  %458 = add i32 %457, %204
  %459 = add i32 %458, %205
  %460 = add i32 %459, %208
  %461 = sub i32 %460, %209
  %462 = add i32 %461, %211
  %463 = sub i32 %462, %215
  %464 = add i32 %463, %216
  %465 = sub i32 %464, %217
  %466 = sub i32 %465, %225
  %467 = sub i32 %466, %230
  %468 = add i32 %467, %231
  %469 = add i32 %468, %238
  %470 = add i32 %469, %243
  %471 = sub i32 %470, %244
  %472 = sub i32 %471, %246
  %473 = sub i32 %472, %248
  %474 = add i32 %473, %250
  %475 = sub i32 %474, %251
  %476 = sub i32 %475, %252
  %477 = sub i32 %476, %253
  %478 = add i32 %477, %254
  %479 = sub i32 %478, %118
  %480 = add i32 %479, %259
  %481 = sub i32 %480, %261
  %482 = add i32 %481, %263
  %483 = sub i32 %482, %106
  %484 = sub i32 %483, %270
  %485 = sub i32 %484, %271
  %486 = sub i32 %485, %274
  %487 = sub i32 %486, %275
  %488 = sub i32 %487, %287
  %489 = add i32 %488, %288
  %490 = add i32 %489, %289
  %491 = add i32 %490, %49
  %492 = sub i32 %491, %53
  %493 = sub i32 %492, %55
  %494 = sub i32 %493, %66
  %495 = sub i32 %494, %76
  %496 = sub i32 %495, %94
  %497 = add i32 %496, %107
  %498 = sub i32 %497, %117
  %499 = sub i32 %498, %120
  %500 = add i32 %499, %123
  %501 = add i32 %500, %128
  %502 = sub i32 %501, %130
  %503 = sub i32 %502, %132
  %504 = add i32 %503, %134
  %505 = sub i32 %504, %140
  %506 = sub i32 %505, %145
  %507 = sub i32 %506, %151
  %508 = sub i32 %507, %155
  %509 = add i32 %508, %160
  %510 = sub i32 %509, %168
  %511 = sub i32 %510, %170
  %512 = sub i32 %511, %176
  %513 = sub i32 %512, %184
  %514 = sub i32 %513, %191
  %515 = sub i32 %514, %207
  %516 = sub i32 %515, %213
  %517 = sub i32 %516, %221
  %518 = sub i32 %517, %223
  %519 = sub i32 %518, %234
  %520 = sub i32 %519, %236
  %521 = sub i32 %520, %240
  %522 = add i32 %521, %247
  %523 = add i32 %522, %258
  %524 = add i32 %523, %260
  %525 = sub i32 %524, %265
  %526 = sub i32 %525, %269
  %527 = sub i32 %526, %273
  %528 = sub i32 %527, %280
  %529 = sub i32 %528, %282
  %530 = sub i32 %529, %285
  %531 = sub i32 %530, %291
  %532 = sub i32 %531, %293
  %533 = add i32 %532, %296
  %534 = add i32 %533, %298
  %535 = add i32 %534, %299
  %536 = add i32 %535, %315
  %537 = sub i32 %536, %219
  %538 = add i32 %537, %313
  %539 = add i32 %538, %305
  %540 = add i32 %539, %310
  %541 = add i32 %540, %341
  %542 = icmp eq i32 %11, %541
  %543 = select i1 %542, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %544 = tail call i32 @puts(i8* nonnull dereferenceable(1) %543)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
