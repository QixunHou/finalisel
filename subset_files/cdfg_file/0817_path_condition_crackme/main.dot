digraph "DFG for'main' function" {
	Node0x1e5f0f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e5f178[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e5f208[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1e5f268[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1e66088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e66168[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1e66268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e66328[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1e663d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e66638[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1e666f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e67668[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e67cd8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1e67dd0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1e67fd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e68138[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e68248[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e68308[shape=record, label="  ret i32 0"];
	Node0x1e5f0f8 -> Node0x1e5f178;
	Node0x1e5f178 -> Node0x1e5f208;
	Node0x1e5f208 -> Node0x1e5f268;
	Node0x1e5f268 -> Node0x1e66088;
	Node0x1e66088 -> Node0x1e66168;
	Node0x1e66168 -> Node0x1e66268;
	Node0x1e66268 -> Node0x1e66328;
	Node0x1e66328 -> Node0x1e663d8;
	Node0x1e663d8 -> Node0x1e66638;
	Node0x1e66638 -> Node0x1e666f8;
	Node0x1e666f8 -> Node0x1e67668;
	Node0x1e67668 -> Node0x1e67cd8;
	Node0x1e67cd8 -> Node0x1e67dd0;
	Node0x1e67dd0 -> Node0x1e67fd8;
	Node0x1e67fd8 -> Node0x1e68138;
	Node0x1e68138 -> Node0x1e68248;
	Node0x1e68248 -> Node0x1e68308;
edge [color=red]
	Node0x1e5f0f8 -> Node0x1e5f268;
	Node0x1e5f268 -> Node0x1e66088;
	Node0x1e5f178 -> Node0x1e66168;
	Node0x1e66168 -> Node0x1e66268;
	Node0x1e5f208 -> Node0x1e66328;
	Node0x1e66328 -> Node0x1e663d8;
	Node0x1e5f0f8 -> Node0x1e66638;
	Node0x1e5f178 -> Node0x1e66638;
	Node0x1e5f208 -> Node0x1e66638;
	Node0x1e5f0f8 -> Node0x1e666f8;
	Node0x1e5f178 -> Node0x1e67668;
	Node0x1e5f208 -> Node0x1e67cd8;
	Node0x1e666f8 -> Node0x1e67dd0;
	Node0x1e67668 -> Node0x1e67dd0;
	Node0x1e67cd8 -> Node0x1e67dd0;
	Node0x1e66328 -> Node0x1e67fd8;
	Node0x1e66168 -> Node0x1e68138;
	Node0x1e5f268 -> Node0x1e68248;
}
