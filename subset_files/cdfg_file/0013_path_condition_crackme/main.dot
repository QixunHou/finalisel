digraph "DFG for'main' function" {
	Node0x117d968[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x117d9e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x117da78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x117dad8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x117df58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x117fe58[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x117ff38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x117fff8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x11800a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1180308[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x11803c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1181338[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11819a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1181aa0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1181ca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1181e08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1181f18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1181fd8[shape=record, label="  ret i32 0"];
	Node0x117d968 -> Node0x117d9e8;
	Node0x117d9e8 -> Node0x117da78;
	Node0x117da78 -> Node0x117dad8;
	Node0x117dad8 -> Node0x117df58;
	Node0x117df58 -> Node0x117fe58;
	Node0x117fe58 -> Node0x117ff38;
	Node0x117ff38 -> Node0x117fff8;
	Node0x117fff8 -> Node0x11800a8;
	Node0x11800a8 -> Node0x1180308;
	Node0x1180308 -> Node0x11803c8;
	Node0x11803c8 -> Node0x1181338;
	Node0x1181338 -> Node0x11819a8;
	Node0x11819a8 -> Node0x1181aa0;
	Node0x1181aa0 -> Node0x1181ca8;
	Node0x1181ca8 -> Node0x1181e08;
	Node0x1181e08 -> Node0x1181f18;
	Node0x1181f18 -> Node0x1181fd8;
edge [color=red]
	Node0x117d968 -> Node0x117dad8;
	Node0x117dad8 -> Node0x117df58;
	Node0x117d9e8 -> Node0x117fe58;
	Node0x117fe58 -> Node0x117ff38;
	Node0x117da78 -> Node0x117fff8;
	Node0x117fff8 -> Node0x11800a8;
	Node0x117d968 -> Node0x1180308;
	Node0x117d9e8 -> Node0x1180308;
	Node0x117da78 -> Node0x1180308;
	Node0x117d968 -> Node0x11803c8;
	Node0x117d9e8 -> Node0x1181338;
	Node0x117da78 -> Node0x11819a8;
	Node0x11803c8 -> Node0x1181aa0;
	Node0x1181338 -> Node0x1181aa0;
	Node0x11819a8 -> Node0x1181aa0;
	Node0x117fff8 -> Node0x1181ca8;
	Node0x117fe58 -> Node0x1181e08;
	Node0x117dad8 -> Node0x1181f18;
}
