digraph "DFG for'crackme' function" {
	Node0x18a49d0[shape=record, label="  %3 = shl i32 %0, 1"];
	Node0x18a4a70[shape=record, label="  %4 = xor i32 %3, -2"];
	Node0x18a4b30[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x18a4ba0[shape=record, label="  %6 = and i32 %5, %0"];
	Node0x18a4c10[shape=record, label="  %7 = and i32 %1, %0"];
	Node0x18a4c80[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x18a4cf0[shape=record, label="  %9 = or i32 %1, %0"];
	Node0x18a4d90[shape=record, label="  %10 = mul i32 %6, -3"];
	Node0x18a4e00[shape=record, label="  %11 = xor i32 %0, -1"];
	Node0x18a4e70[shape=record, label="  %12 = sub i32 %11, %1"];
	Node0x18a4ee0[shape=record, label="  %13 = add i32 %12, %6"];
	Node0x18a4f50[shape=record, label="  %14 = add i32 %13, %8"];
	Node0x18a4fc0[shape=record, label="  %15 = add i32 %14, %9"];
	Node0x18a5030[shape=record, label="  %16 = add i32 %15, %10"];
	Node0x18a50a0[shape=record, label="  %17 = icmp eq i32 %4, %16"];
	Node0x1845268[shape=record, label="  %18 = select i1 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18a5540[shape=record, label="  %19 = tail call i32 @puts(i8* nonnull dereferenceable(1) %18)"];
	Node0x18a5590[shape=record, label="  ret void"];
	Node0x18a49d0 -> Node0x18a4a70;
	Node0x18a4a70 -> Node0x18a4b30;
	Node0x18a4b30 -> Node0x18a4ba0;
	Node0x18a4ba0 -> Node0x18a4c10;
	Node0x18a4c10 -> Node0x18a4c80;
	Node0x18a4c80 -> Node0x18a4cf0;
	Node0x18a4cf0 -> Node0x18a4d90;
	Node0x18a4d90 -> Node0x18a4e00;
	Node0x18a4e00 -> Node0x18a4e70;
	Node0x18a4e70 -> Node0x18a4ee0;
	Node0x18a4ee0 -> Node0x18a4f50;
	Node0x18a4f50 -> Node0x18a4fc0;
	Node0x18a4fc0 -> Node0x18a5030;
	Node0x18a5030 -> Node0x18a50a0;
	Node0x18a50a0 -> Node0x1845268;
	Node0x1845268 -> Node0x18a5540;
	Node0x18a5540 -> Node0x18a5590;
edge [color=red]
	Node0x18a49d0 -> Node0x18a4a70;
	Node0x18a4b30 -> Node0x18a4ba0;
	Node0x18a4c10 -> Node0x18a4c80;
	Node0x18a4ba0 -> Node0x18a4d90;
	Node0x18a4e00 -> Node0x18a4e70;
	Node0x18a4e70 -> Node0x18a4ee0;
	Node0x18a4ba0 -> Node0x18a4ee0;
	Node0x18a4ee0 -> Node0x18a4f50;
	Node0x18a4c80 -> Node0x18a4f50;
	Node0x18a4f50 -> Node0x18a4fc0;
	Node0x18a4cf0 -> Node0x18a4fc0;
	Node0x18a4fc0 -> Node0x18a5030;
	Node0x18a4d90 -> Node0x18a5030;
	Node0x18a4a70 -> Node0x18a50a0;
	Node0x18a5030 -> Node0x18a50a0;
	Node0x18a50a0 -> Node0x1845268;
	Node0x1845268 -> Node0x18a5540;
}
