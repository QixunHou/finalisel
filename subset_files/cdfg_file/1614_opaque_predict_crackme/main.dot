digraph "DFG for'main' function" {
	Node0x249b668[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x249b6e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x249b778[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x249b7d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x249bc58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x249bd38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x249be38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x249bef8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x249bfa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x249c208[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x249c2c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x249c428[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x249c488[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x24a3d60[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x24a3f68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x24a40c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x24a41d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24a4298[shape=record, label="  ret i32 0"];
	Node0x249b668 -> Node0x249b6e8;
	Node0x249b6e8 -> Node0x249b778;
	Node0x249b778 -> Node0x249b7d8;
	Node0x249b7d8 -> Node0x249bc58;
	Node0x249bc58 -> Node0x249bd38;
	Node0x249bd38 -> Node0x249be38;
	Node0x249be38 -> Node0x249bef8;
	Node0x249bef8 -> Node0x249bfa8;
	Node0x249bfa8 -> Node0x249c208;
	Node0x249c208 -> Node0x249c2c8;
	Node0x249c2c8 -> Node0x249c428;
	Node0x249c428 -> Node0x249c488;
	Node0x249c488 -> Node0x24a3d60;
	Node0x24a3d60 -> Node0x24a3f68;
	Node0x24a3f68 -> Node0x24a40c8;
	Node0x24a40c8 -> Node0x24a41d8;
	Node0x24a41d8 -> Node0x24a4298;
edge [color=red]
	Node0x249b668 -> Node0x249b7d8;
	Node0x249b7d8 -> Node0x249bc58;
	Node0x249b6e8 -> Node0x249bd38;
	Node0x249bd38 -> Node0x249be38;
	Node0x249b778 -> Node0x249bef8;
	Node0x249bef8 -> Node0x249bfa8;
	Node0x249b668 -> Node0x249c208;
	Node0x249b6e8 -> Node0x249c208;
	Node0x249b778 -> Node0x249c208;
	Node0x249b668 -> Node0x249c2c8;
	Node0x249b6e8 -> Node0x249c428;
	Node0x249b778 -> Node0x249c488;
	Node0x249c2c8 -> Node0x24a3d60;
	Node0x249c428 -> Node0x24a3d60;
	Node0x249c488 -> Node0x24a3d60;
	Node0x249bef8 -> Node0x24a3f68;
	Node0x249bd38 -> Node0x24a40c8;
	Node0x249b7d8 -> Node0x24a41d8;
}
