digraph "DFG for'crackme' function" {
	Node0x1c1c8b0[shape=record, label="  %3 = mul i32 %0, -2"];
	Node0x1c1c950[shape=record, label="  %4 = shl i32 %1, 1"];
	Node0x1c1ca10[shape=record, label="  %5 = sub i32 %3, %4"];
	Node0x1c1ca80[shape=record, label="  %6 = and i32 %1, %0"];
	Node0x1c1caf0[shape=record, label="  %7 = mul i32 %6, -4"];
	Node0x1c1cb60[shape=record, label="  %8 = xor i32 %1, %0"];
	Node0x1c1cbd0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x1c1cc40[shape=record, label="  %10 = sub i32 %7, %9"];
	Node0x1c1ccb0[shape=record, label="  %11 = icmp eq i32 %5, %10"];
	Node0x1bbd388[shape=record, label="  %12 = select i1 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c1d150[shape=record, label="  %13 = tail call i32 @puts(i8* nonnull dereferenceable(1) %12)"];
	Node0x1c1d1a0[shape=record, label="  ret void"];
	Node0x1c1c8b0 -> Node0x1c1c950;
	Node0x1c1c950 -> Node0x1c1ca10;
	Node0x1c1ca10 -> Node0x1c1ca80;
	Node0x1c1ca80 -> Node0x1c1caf0;
	Node0x1c1caf0 -> Node0x1c1cb60;
	Node0x1c1cb60 -> Node0x1c1cbd0;
	Node0x1c1cbd0 -> Node0x1c1cc40;
	Node0x1c1cc40 -> Node0x1c1ccb0;
	Node0x1c1ccb0 -> Node0x1bbd388;
	Node0x1bbd388 -> Node0x1c1d150;
	Node0x1c1d150 -> Node0x1c1d1a0;
edge [color=red]
	Node0x1c1c8b0 -> Node0x1c1ca10;
	Node0x1c1c950 -> Node0x1c1ca10;
	Node0x1c1ca80 -> Node0x1c1caf0;
	Node0x1c1cb60 -> Node0x1c1cbd0;
	Node0x1c1caf0 -> Node0x1c1cc40;
	Node0x1c1cbd0 -> Node0x1c1cc40;
	Node0x1c1ca10 -> Node0x1c1ccb0;
	Node0x1c1cc40 -> Node0x1c1ccb0;
	Node0x1c1ccb0 -> Node0x1bbd388;
	Node0x1bbd388 -> Node0x1c1d150;
}
