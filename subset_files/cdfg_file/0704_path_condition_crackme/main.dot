digraph "DFG for'main' function" {
	Node0x1c1d368[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c1d3e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c1d478[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1c1d8d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c1d9b8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1c1dad8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c1dd10[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1c1ddc8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c1ed38[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c1f3c0[shape=record, label="  %8 = mul i32 %6, -2"];
	Node0x1c1f430[shape=record, label="  %9 = shl i32 %7, 1"];
	Node0x1c1f4a0[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0x1c1f510[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x1c1f580[shape=record, label="  %12 = mul i32 %11, -4"];
	Node0x1c1f5f0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x1c1f660[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1c1f6d0[shape=record, label="  %15 = sub i32 %12, %14"];
	Node0x1c1f740[shape=record, label="  %16 = icmp eq i32 %10, %15"];
	Node0x1bbe9d8[shape=record, label="  %17 = select i1 %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c1f7d0[shape=record, label="  %18 = call i32 @puts(i8* nonnull dereferenceable(1) %17) #5"];
	Node0x1c1fa28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c1fb88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c1fc48[shape=record, label="  ret i32 0"];
	Node0x1c1d368 -> Node0x1c1d3e8;
	Node0x1c1d3e8 -> Node0x1c1d478;
	Node0x1c1d478 -> Node0x1c1d8d8;
	Node0x1c1d8d8 -> Node0x1c1d9b8;
	Node0x1c1d9b8 -> Node0x1c1dad8;
	Node0x1c1dad8 -> Node0x1c1dd10;
	Node0x1c1dd10 -> Node0x1c1ddc8;
	Node0x1c1ddc8 -> Node0x1c1ed38;
	Node0x1c1ed38 -> Node0x1c1f3c0;
	Node0x1c1f3c0 -> Node0x1c1f430;
	Node0x1c1f430 -> Node0x1c1f4a0;
	Node0x1c1f4a0 -> Node0x1c1f510;
	Node0x1c1f510 -> Node0x1c1f580;
	Node0x1c1f580 -> Node0x1c1f5f0;
	Node0x1c1f5f0 -> Node0x1c1f660;
	Node0x1c1f660 -> Node0x1c1f6d0;
	Node0x1c1f6d0 -> Node0x1c1f740;
	Node0x1c1f740 -> Node0x1bbe9d8;
	Node0x1bbe9d8 -> Node0x1c1f7d0;
	Node0x1c1f7d0 -> Node0x1c1fa28;
	Node0x1c1fa28 -> Node0x1c1fb88;
	Node0x1c1fb88 -> Node0x1c1fc48;
edge [color=red]
	Node0x1c1d368 -> Node0x1c1d478;
	Node0x1c1d478 -> Node0x1c1d8d8;
	Node0x1c1d3e8 -> Node0x1c1d9b8;
	Node0x1c1d9b8 -> Node0x1c1dad8;
	Node0x1c1d368 -> Node0x1c1dd10;
	Node0x1c1d3e8 -> Node0x1c1dd10;
	Node0x1c1d368 -> Node0x1c1ddc8;
	Node0x1c1d3e8 -> Node0x1c1ed38;
	Node0x1c1ddc8 -> Node0x1c1f3c0;
	Node0x1c1ed38 -> Node0x1c1f430;
	Node0x1c1f3c0 -> Node0x1c1f4a0;
	Node0x1c1f430 -> Node0x1c1f4a0;
	Node0x1c1ed38 -> Node0x1c1f510;
	Node0x1c1ddc8 -> Node0x1c1f510;
	Node0x1c1f510 -> Node0x1c1f580;
	Node0x1c1ed38 -> Node0x1c1f5f0;
	Node0x1c1ddc8 -> Node0x1c1f5f0;
	Node0x1c1f5f0 -> Node0x1c1f660;
	Node0x1c1f580 -> Node0x1c1f6d0;
	Node0x1c1f660 -> Node0x1c1f6d0;
	Node0x1c1f4a0 -> Node0x1c1f740;
	Node0x1c1f6d0 -> Node0x1c1f740;
	Node0x1c1f740 -> Node0x1bbe9d8;
	Node0x1bbe9d8 -> Node0x1c1f7d0;
	Node0x1c1d9b8 -> Node0x1c1fa28;
	Node0x1c1d478 -> Node0x1c1fb88;
}
