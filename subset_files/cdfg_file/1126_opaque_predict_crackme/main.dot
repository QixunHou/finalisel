digraph "DFG for'main' function" {
	Node0x20ed668[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x20ed6e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x20ed778[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x20ed7d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x20edc58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20edd38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x20ede38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20edef8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x20edfa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20ee208[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x20ee2c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20ee428[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20ee488[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x20f6450[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x20f6658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20f67b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20f68c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20f6988[shape=record, label="  ret i32 0"];
	Node0x20ed668 -> Node0x20ed6e8;
	Node0x20ed6e8 -> Node0x20ed778;
	Node0x20ed778 -> Node0x20ed7d8;
	Node0x20ed7d8 -> Node0x20edc58;
	Node0x20edc58 -> Node0x20edd38;
	Node0x20edd38 -> Node0x20ede38;
	Node0x20ede38 -> Node0x20edef8;
	Node0x20edef8 -> Node0x20edfa8;
	Node0x20edfa8 -> Node0x20ee208;
	Node0x20ee208 -> Node0x20ee2c8;
	Node0x20ee2c8 -> Node0x20ee428;
	Node0x20ee428 -> Node0x20ee488;
	Node0x20ee488 -> Node0x20f6450;
	Node0x20f6450 -> Node0x20f6658;
	Node0x20f6658 -> Node0x20f67b8;
	Node0x20f67b8 -> Node0x20f68c8;
	Node0x20f68c8 -> Node0x20f6988;
edge [color=red]
	Node0x20ed668 -> Node0x20ed7d8;
	Node0x20ed7d8 -> Node0x20edc58;
	Node0x20ed6e8 -> Node0x20edd38;
	Node0x20edd38 -> Node0x20ede38;
	Node0x20ed778 -> Node0x20edef8;
	Node0x20edef8 -> Node0x20edfa8;
	Node0x20ed668 -> Node0x20ee208;
	Node0x20ed6e8 -> Node0x20ee208;
	Node0x20ed778 -> Node0x20ee208;
	Node0x20ed668 -> Node0x20ee2c8;
	Node0x20ed6e8 -> Node0x20ee428;
	Node0x20ed778 -> Node0x20ee488;
	Node0x20ee2c8 -> Node0x20f6450;
	Node0x20ee428 -> Node0x20f6450;
	Node0x20ee488 -> Node0x20f6450;
	Node0x20edef8 -> Node0x20f6658;
	Node0x20edd38 -> Node0x20f67b8;
	Node0x20ed7d8 -> Node0x20f68c8;
}
