digraph "DFG for'main' function" {
	Node0x120b468[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x120b4e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x120b578[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x120b5d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x120ba58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x120bb38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x120bc38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x120bcf8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x120bda8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x120c008[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x120c0c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x120d038[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x120d6a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x120d7a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x120d9a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x120db08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x120dc18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x120dcd8[shape=record, label="  ret i32 0"];
	Node0x120b468 -> Node0x120b4e8;
	Node0x120b4e8 -> Node0x120b578;
	Node0x120b578 -> Node0x120b5d8;
	Node0x120b5d8 -> Node0x120ba58;
	Node0x120ba58 -> Node0x120bb38;
	Node0x120bb38 -> Node0x120bc38;
	Node0x120bc38 -> Node0x120bcf8;
	Node0x120bcf8 -> Node0x120bda8;
	Node0x120bda8 -> Node0x120c008;
	Node0x120c008 -> Node0x120c0c8;
	Node0x120c0c8 -> Node0x120d038;
	Node0x120d038 -> Node0x120d6a8;
	Node0x120d6a8 -> Node0x120d7a0;
	Node0x120d7a0 -> Node0x120d9a8;
	Node0x120d9a8 -> Node0x120db08;
	Node0x120db08 -> Node0x120dc18;
	Node0x120dc18 -> Node0x120dcd8;
edge [color=red]
	Node0x120b468 -> Node0x120b5d8;
	Node0x120b5d8 -> Node0x120ba58;
	Node0x120b4e8 -> Node0x120bb38;
	Node0x120bb38 -> Node0x120bc38;
	Node0x120b578 -> Node0x120bcf8;
	Node0x120bcf8 -> Node0x120bda8;
	Node0x120b468 -> Node0x120c008;
	Node0x120b4e8 -> Node0x120c008;
	Node0x120b578 -> Node0x120c008;
	Node0x120b468 -> Node0x120c0c8;
	Node0x120b4e8 -> Node0x120d038;
	Node0x120b578 -> Node0x120d6a8;
	Node0x120c0c8 -> Node0x120d7a0;
	Node0x120d038 -> Node0x120d7a0;
	Node0x120d6a8 -> Node0x120d7a0;
	Node0x120bcf8 -> Node0x120d9a8;
	Node0x120bb38 -> Node0x120db08;
	Node0x120b5d8 -> Node0x120dc18;
}
