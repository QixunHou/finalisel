digraph "DFG for'main' function" {
	Node0x21aefb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21af038[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21af0c8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x21af128[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x21af5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21af688[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x21af788[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21af848[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x21af8f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21afb58[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x21afc18[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21b0b88[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21b0be8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x21b0ce0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x21b16a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21b1808[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21b1918[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21b19d8[shape=record, label="  ret i32 0"];
	Node0x21aefb8 -> Node0x21af038;
	Node0x21af038 -> Node0x21af0c8;
	Node0x21af0c8 -> Node0x21af128;
	Node0x21af128 -> Node0x21af5a8;
	Node0x21af5a8 -> Node0x21af688;
	Node0x21af688 -> Node0x21af788;
	Node0x21af788 -> Node0x21af848;
	Node0x21af848 -> Node0x21af8f8;
	Node0x21af8f8 -> Node0x21afb58;
	Node0x21afb58 -> Node0x21afc18;
	Node0x21afc18 -> Node0x21b0b88;
	Node0x21b0b88 -> Node0x21b0be8;
	Node0x21b0be8 -> Node0x21b0ce0;
	Node0x21b0ce0 -> Node0x21b16a8;
	Node0x21b16a8 -> Node0x21b1808;
	Node0x21b1808 -> Node0x21b1918;
	Node0x21b1918 -> Node0x21b19d8;
edge [color=red]
	Node0x21aefb8 -> Node0x21af128;
	Node0x21af128 -> Node0x21af5a8;
	Node0x21af038 -> Node0x21af688;
	Node0x21af688 -> Node0x21af788;
	Node0x21af0c8 -> Node0x21af848;
	Node0x21af848 -> Node0x21af8f8;
	Node0x21aefb8 -> Node0x21afb58;
	Node0x21af038 -> Node0x21afb58;
	Node0x21af0c8 -> Node0x21afb58;
	Node0x21aefb8 -> Node0x21afc18;
	Node0x21af038 -> Node0x21b0b88;
	Node0x21af0c8 -> Node0x21b0be8;
	Node0x21afc18 -> Node0x21b0ce0;
	Node0x21b0b88 -> Node0x21b0ce0;
	Node0x21b0be8 -> Node0x21b0ce0;
	Node0x21af848 -> Node0x21b16a8;
	Node0x21af688 -> Node0x21b1808;
	Node0x21af128 -> Node0x21b1918;
}
