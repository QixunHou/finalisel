digraph "DFG for'crackme' function" {
	Node0x228d9d0[shape=record, label="  %3 = mul i32 %1, -5"];
	Node0x228da70[shape=record, label="  %4 = add i32 %3, -1"];
	Node0x228db30[shape=record, label="  %5 = and i32 %1, %0"];
	Node0x228dba0[shape=record, label="  %6 = or i32 %1, %0"];
	Node0x228dc10[shape=record, label="  %7 = xor i32 %1, -1"];
	Node0x228dc80[shape=record, label="  %8 = or i32 %7, %0"];
	Node0x228dcf0[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x228dd60[shape=record, label="  %10 = mul i32 %9, -3"];
	Node0x228de00[shape=record, label="  %11 = shl i32 %5, 2"];
	Node0x228de70[shape=record, label="  %12 = sub i32 %0, %5"];
	Node0x228dee0[shape=record, label="  %13 = sub i32 %12, %6"];
	Node0x228df50[shape=record, label="  %14 = add i32 %13, %8"];
	Node0x228dfc0[shape=record, label="  %15 = add i32 %14, %10"];
	Node0x228e030[shape=record, label="  %16 = sub i32 %15, %11"];
	Node0x228e0a0[shape=record, label="  %17 = icmp eq i32 %4, %16"];
	Node0x222e268[shape=record, label="  %18 = select i1 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x228e540[shape=record, label="  %19 = tail call i32 @puts(i8* nonnull dereferenceable(1) %18)"];
	Node0x228e590[shape=record, label="  ret void"];
	Node0x228d9d0 -> Node0x228da70;
	Node0x228da70 -> Node0x228db30;
	Node0x228db30 -> Node0x228dba0;
	Node0x228dba0 -> Node0x228dc10;
	Node0x228dc10 -> Node0x228dc80;
	Node0x228dc80 -> Node0x228dcf0;
	Node0x228dcf0 -> Node0x228dd60;
	Node0x228dd60 -> Node0x228de00;
	Node0x228de00 -> Node0x228de70;
	Node0x228de70 -> Node0x228dee0;
	Node0x228dee0 -> Node0x228df50;
	Node0x228df50 -> Node0x228dfc0;
	Node0x228dfc0 -> Node0x228e030;
	Node0x228e030 -> Node0x228e0a0;
	Node0x228e0a0 -> Node0x222e268;
	Node0x222e268 -> Node0x228e540;
	Node0x228e540 -> Node0x228e590;
edge [color=red]
	Node0x228d9d0 -> Node0x228da70;
	Node0x228dc10 -> Node0x228dc80;
	Node0x228dc80 -> Node0x228dcf0;
	Node0x228dcf0 -> Node0x228dd60;
	Node0x228db30 -> Node0x228de00;
	Node0x228db30 -> Node0x228de70;
	Node0x228de70 -> Node0x228dee0;
	Node0x228dba0 -> Node0x228dee0;
	Node0x228dee0 -> Node0x228df50;
	Node0x228dc80 -> Node0x228df50;
	Node0x228df50 -> Node0x228dfc0;
	Node0x228dd60 -> Node0x228dfc0;
	Node0x228dfc0 -> Node0x228e030;
	Node0x228de00 -> Node0x228e030;
	Node0x228da70 -> Node0x228e0a0;
	Node0x228e030 -> Node0x228e0a0;
	Node0x228e0a0 -> Node0x222e268;
	Node0x222e268 -> Node0x228e540;
}
