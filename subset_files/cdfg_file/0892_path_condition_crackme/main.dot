digraph "DFG for'main' function" {
	Node0xdcd398[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xdcd418[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xdcd4a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xdcd508[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xdcd988[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdcda68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xdcdb68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xdcdc28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xdcdcd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xdcdf38[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xdcdff8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xdce158[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xdce1b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xdd4170[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xdd4378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xdd44d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xdd45e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdd46a8[shape=record, label="  ret i32 0"];
	Node0xdcd398 -> Node0xdcd418;
	Node0xdcd418 -> Node0xdcd4a8;
	Node0xdcd4a8 -> Node0xdcd508;
	Node0xdcd508 -> Node0xdcd988;
	Node0xdcd988 -> Node0xdcda68;
	Node0xdcda68 -> Node0xdcdb68;
	Node0xdcdb68 -> Node0xdcdc28;
	Node0xdcdc28 -> Node0xdcdcd8;
	Node0xdcdcd8 -> Node0xdcdf38;
	Node0xdcdf38 -> Node0xdcdff8;
	Node0xdcdff8 -> Node0xdce158;
	Node0xdce158 -> Node0xdce1b8;
	Node0xdce1b8 -> Node0xdd4170;
	Node0xdd4170 -> Node0xdd4378;
	Node0xdd4378 -> Node0xdd44d8;
	Node0xdd44d8 -> Node0xdd45e8;
	Node0xdd45e8 -> Node0xdd46a8;
edge [color=red]
	Node0xdcd398 -> Node0xdcd508;
	Node0xdcd508 -> Node0xdcd988;
	Node0xdcd418 -> Node0xdcda68;
	Node0xdcda68 -> Node0xdcdb68;
	Node0xdcd4a8 -> Node0xdcdc28;
	Node0xdcdc28 -> Node0xdcdcd8;
	Node0xdcd398 -> Node0xdcdf38;
	Node0xdcd418 -> Node0xdcdf38;
	Node0xdcd4a8 -> Node0xdcdf38;
	Node0xdcd398 -> Node0xdcdff8;
	Node0xdcd418 -> Node0xdce158;
	Node0xdcd4a8 -> Node0xdce1b8;
	Node0xdcdff8 -> Node0xdd4170;
	Node0xdce158 -> Node0xdd4170;
	Node0xdce1b8 -> Node0xdd4170;
	Node0xdcdc28 -> Node0xdd4378;
	Node0xdcda68 -> Node0xdd44d8;
	Node0xdcd508 -> Node0xdd45e8;
}
