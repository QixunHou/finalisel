digraph "DFG for'main' function" {
	Node0x162c938[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x162c9b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x162ca48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x162cea8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x162cf88[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x162d0a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x162d2e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x162d398[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x162e308[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x162e990[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x162ea00[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x162ea70[shape=record, label="  %10 = sub i32 %9, %8"];
	Node0x162eae0[shape=record, label="  %11 = xor i32 %6, -1"];
	Node0x162eb50[shape=record, label="  %12 = and i32 %6, %9"];
	Node0x162ebc0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x162ec30[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x162eca0[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x162ed10[shape=record, label="  %16 = and i32 %7, %11"];
	Node0x162ed80[shape=record, label="  %17 = mul i32 %16, -3"];
	Node0x162edf0[shape=record, label="  %18 = and i32 %7, %6"];
	Node0x162ee60[shape=record, label="  %19 = sub i32 1, %6"];
	Node0x162eed0[shape=record, label="  %20 = add i32 %19, %15"];
	Node0x162ef40[shape=record, label="  %21 = add i32 %20, %12"];
	Node0x162efb0[shape=record, label="  %22 = sub i32 %21, %18"];
	Node0x162f020[shape=record, label="  %23 = add i32 %22, %17"];
	Node0x162f090[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x162f100[shape=record, label="  %25 = icmp eq i32 %10, %24"];
	Node0x15cd9d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x162f190[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0x162f3e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x162f548[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x162f608[shape=record, label="  ret i32 0"];
	Node0x162c938 -> Node0x162c9b8;
	Node0x162c9b8 -> Node0x162ca48;
	Node0x162ca48 -> Node0x162cea8;
	Node0x162cea8 -> Node0x162cf88;
	Node0x162cf88 -> Node0x162d0a8;
	Node0x162d0a8 -> Node0x162d2e0;
	Node0x162d2e0 -> Node0x162d398;
	Node0x162d398 -> Node0x162e308;
	Node0x162e308 -> Node0x162e990;
	Node0x162e990 -> Node0x162ea00;
	Node0x162ea00 -> Node0x162ea70;
	Node0x162ea70 -> Node0x162eae0;
	Node0x162eae0 -> Node0x162eb50;
	Node0x162eb50 -> Node0x162ebc0;
	Node0x162ebc0 -> Node0x162ec30;
	Node0x162ec30 -> Node0x162eca0;
	Node0x162eca0 -> Node0x162ed10;
	Node0x162ed10 -> Node0x162ed80;
	Node0x162ed80 -> Node0x162edf0;
	Node0x162edf0 -> Node0x162ee60;
	Node0x162ee60 -> Node0x162eed0;
	Node0x162eed0 -> Node0x162ef40;
	Node0x162ef40 -> Node0x162efb0;
	Node0x162efb0 -> Node0x162f020;
	Node0x162f020 -> Node0x162f090;
	Node0x162f090 -> Node0x162f100;
	Node0x162f100 -> Node0x15cd9d8;
	Node0x15cd9d8 -> Node0x162f190;
	Node0x162f190 -> Node0x162f3e8;
	Node0x162f3e8 -> Node0x162f548;
	Node0x162f548 -> Node0x162f608;
edge [color=red]
	Node0x162c938 -> Node0x162ca48;
	Node0x162ca48 -> Node0x162cea8;
	Node0x162c9b8 -> Node0x162cf88;
	Node0x162cf88 -> Node0x162d0a8;
	Node0x162c938 -> Node0x162d2e0;
	Node0x162c9b8 -> Node0x162d2e0;
	Node0x162c938 -> Node0x162d398;
	Node0x162c9b8 -> Node0x162e308;
	Node0x162e308 -> Node0x162e990;
	Node0x162d398 -> Node0x162e990;
	Node0x162e308 -> Node0x162ea00;
	Node0x162ea00 -> Node0x162ea70;
	Node0x162e990 -> Node0x162ea70;
	Node0x162d398 -> Node0x162eae0;
	Node0x162d398 -> Node0x162eb50;
	Node0x162ea00 -> Node0x162eb50;
	Node0x162eb50 -> Node0x162ebc0;
	Node0x162ebc0 -> Node0x162ec30;
	Node0x162e308 -> Node0x162eca0;
	Node0x162d398 -> Node0x162eca0;
	Node0x162e308 -> Node0x162ed10;
	Node0x162eae0 -> Node0x162ed10;
	Node0x162ed10 -> Node0x162ed80;
	Node0x162e308 -> Node0x162edf0;
	Node0x162d398 -> Node0x162edf0;
	Node0x162d398 -> Node0x162ee60;
	Node0x162ee60 -> Node0x162eed0;
	Node0x162eca0 -> Node0x162eed0;
	Node0x162eed0 -> Node0x162ef40;
	Node0x162eb50 -> Node0x162ef40;
	Node0x162ef40 -> Node0x162efb0;
	Node0x162edf0 -> Node0x162efb0;
	Node0x162efb0 -> Node0x162f020;
	Node0x162ed80 -> Node0x162f020;
	Node0x162f020 -> Node0x162f090;
	Node0x162ec30 -> Node0x162f090;
	Node0x162ea70 -> Node0x162f100;
	Node0x162f090 -> Node0x162f100;
	Node0x162f100 -> Node0x15cd9d8;
	Node0x15cd9d8 -> Node0x162f190;
	Node0x162cf88 -> Node0x162f3e8;
	Node0x162ca48 -> Node0x162f548;
}
