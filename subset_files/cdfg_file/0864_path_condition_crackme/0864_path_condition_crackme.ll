; ModuleID = '../.././c_source_file/0864_path_condition_crackme.c'
source_filename = "../.././c_source_file/0864_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %2, -1
  %10 = and i32 %7, %9
  %11 = sub i32 %8, %10
  %12 = and i32 %4, %3
  %13 = xor i32 %5, -1
  %14 = or i32 %13, %4
  %15 = xor i32 %14, -1
  %16 = or i32 %12, %15
  %17 = sub i32 %11, %16
  %18 = and i32 %5, %4
  %19 = xor i32 %18, -1
  %20 = xor i32 %19, %3
  %21 = mul i32 %20, 3
  %22 = add i32 %17, %21
  %23 = xor i32 %1, -1
  %24 = and i32 %23, %2
  %25 = and i32 %24, %0
  %26 = xor i32 %0, -1
  %27 = or i32 %23, %2
  %28 = and i32 %27, %26
  %29 = or i32 %25, %28
  %30 = xor i32 %2, %1
  %31 = and i32 %23, %0
  %32 = xor i32 %2, %0
  %33 = or i32 %32, %31
  %34 = xor i32 %30, -1
  %35 = and i32 %34, %0
  %36 = or i32 %1, %0
  %37 = and i32 %24, %26
  %38 = and i32 %27, %0
  %39 = xor i32 %38, 2147483647
  %40 = xor i32 %39, %37
  %41 = shl i32 %40, 1
  %42 = or i32 %31, %9
  %43 = and i32 %2, %0
  %44 = or i32 %43, %23
  %45 = and i32 %1, %0
  %46 = or i32 %45, %2
  %47 = or i32 %9, %1
  %48 = xor i32 %47, -1
  %49 = or i32 %30, %31
  %50 = and i32 %32, %8
  %51 = xor i32 %27, %0
  %52 = xor i32 %25, -1
  %53 = xor i32 %51, %52
  %54 = or i32 %7, %2
  %55 = and i32 %9, %1
  %56 = xor i32 %55, %0
  %57 = xor i32 %45, -1
  %58 = xor i32 %32, -1
  %59 = and i32 %58, %57
  %60 = xor i32 %30, %0
  %61 = or i32 %25, %60
  %62 = or i32 %9, %0
  %63 = xor i32 %62, -1
  %64 = or i32 %63, %1
  %65 = or i32 %2, %0
  %66 = xor i32 %65, -1
  %67 = or i32 %66, %23
  %68 = and i32 %9, %0
  %69 = xor i32 %43, -1
  %70 = and i32 %69, %8
  %71 = xor i32 %31, -1
  %72 = and i32 %32, %71
  %73 = shl i32 %72, 1
  %74 = xor i32 %68, %1
  %75 = or i32 %43, %7
  %76 = or i32 %2, %1
  %77 = or i32 %76, %26
  %78 = and i32 %65, %8
  %79 = or i32 %45, %66
  %80 = shl i32 %79, 1
  %81 = or i32 %32, %8
  %82 = and i32 %2, %1
  %83 = xor i32 %82, -1
  %84 = xor i32 %31, %83
  %85 = or i32 %47, %26
  %86 = or i32 %7, %66
  %87 = xor i32 %47, %0
  %88 = xor i32 %68, -1
  %89 = and i32 %88, %8
  %90 = or i32 %68, %1
  %91 = and i32 %88, %1
  %92 = add i32 %82, 1
  %93 = xor i32 %55, -1
  %94 = or i32 %93, %0
  %95 = xor i32 %36, -1
  %96 = or i32 %30, %95
  %97 = and i32 %57, %2
  %98 = or i32 %83, %26
  %99 = or i32 %83, %0
  %100 = shl i32 %99, 1
  %101 = or i32 %25, %51
  %102 = or i32 %68, %23
  %103 = and i32 %82, %0
  %104 = and i32 %30, %26
  %105 = or i32 %103, %104
  %106 = xor i32 %43, %1
  %107 = and i32 %82, %26
  %108 = and i32 %30, %0
  %109 = or i32 %107, %108
  %110 = or i32 %93, %26
  %111 = and i32 %69, %23
  %112 = and i32 %62, %7
  %113 = or i32 %23, %0
  %114 = and i32 %30, %113
  %115 = and i32 %9, %57
  %116 = and i32 %30, %57
  %117 = xor i32 %57, %2
  %118 = or i32 %45, %58
  %119 = and i32 %113, %9
  %120 = shl i32 %119, 1
  %121 = or i32 %30, %26
  %122 = or i32 %32, %23
  %123 = xor i32 %76, -1
  %124 = or i32 %43, %123
  %125 = or i32 %31, %2
  %126 = xor i32 %88, %1
  %127 = xor i32 %121, 2147483647
  %128 = or i32 %127, %37
  %129 = shl i32 %128, 1
  %130 = or i32 %58, %1
  %131 = or i32 %123, %0
  %132 = xor i32 %103, %131
  %133 = and i32 %30, %36
  %134 = shl i32 %133, 1
  %135 = and i32 %7, %58
  %136 = xor i32 %62, %1
  %137 = and i32 %7, %69
  %138 = xor i32 %95, %2
  %139 = or i32 %45, %63
  %140 = xor i32 %123, %0
  %141 = shl i32 %140, 1
  %142 = xor i32 %113, %2
  %143 = xor i32 %104, 2147483647
  %144 = xor i32 %143, %103
  %145 = shl i32 %144, 1
  %146 = xor i32 %65, %1
  %147 = or i32 %31, %58
  %148 = xor i32 %43, %76
  %149 = and i32 %36, %2
  %150 = xor i32 %36, %2
  %151 = shl i32 %150, 1
  %152 = or i32 %63, %23
  %153 = xor i32 %68, %47
  %154 = or i32 %32, %1
  %155 = and i32 %58, %1
  %156 = or i32 %55, %0
  %157 = or i32 %55, %26
  %158 = or i32 %32, %7
  %159 = and i32 %9, %71
  %160 = and i32 %76, %0
  %161 = or i32 %107, %160
  %162 = and i32 %88, %23
  %163 = or i32 %58, %8
  %164 = or i32 %7, %9
  %165 = and i32 %62, %1
  %166 = or i32 %82, %0
  %167 = add i32 %0, 1
  %168 = and i32 %47, %0
  %169 = shl i32 %45, 1
  %170 = or i32 %68, %82
  %171 = xor i32 %37, %121
  %172 = and i32 %58, %23
  %173 = and i32 %7, %2
  %174 = or i32 %30, %45
  %175 = xor i32 %160, 2147483647
  %176 = xor i32 %175, %107
  %177 = or i32 %30, %0
  %178 = xor i32 %177, -1
  %179 = or i32 %25, %178
  %180 = xor i32 %69, %1
  %181 = and i32 %69, %1
  %182 = and i32 %34, %71
  %183 = xor i32 %83, %0
  %184 = and i32 %9, %8
  %185 = xor i32 %66, %1
  %186 = and i32 %62, %23
  %187 = shl i32 %186, 2
  %188 = and i32 %93, %26
  %189 = or i32 %68, %8
  %190 = or i32 %58, %23
  %191 = or i32 %82, %26
  %192 = or i32 %34, %95
  %193 = shl i32 %192, 1
  %194 = and i32 %83, %26
  %195 = xor i32 %31, %93
  %196 = or i32 %76, %0
  %197 = shl i32 %196, 1
  %198 = or i32 %47, %0
  %199 = or i32 %8, %2
  %200 = shl i32 %199, 1
  %201 = and i32 %32, %7
  %202 = and i32 %36, %34
  %203 = xor i32 %82, %0
  %204 = or i32 %68, %48
  %205 = or i32 %43, %55
  %206 = or i32 %45, %9
  %207 = or i32 %7, %63
  %208 = add i32 %31, 1
  %209 = xor i32 %28, %52
  %210 = or i32 %34, %0
  %211 = xor i32 %43, %93
  %212 = or i32 %43, %1
  %213 = xor i32 %76, %0
  %214 = or i32 %103, %213
  %215 = and i32 %123, %26
  %216 = mul i32 %215, -19
  %217 = and i32 %55, %26
  %218 = and i32 %123, %0
  %219 = mul i32 %218, 9
  %220 = and i32 %55, %0
  %221 = mul i32 %220, 22
  %222 = and i32 %48, %26
  %223 = shl i32 %107, 3
  %224 = and i32 %48, %0
  %225 = xor i32 %4, %3
  %226 = and i32 %13, %4
  %227 = or i32 %226, %3
  %228 = xor i32 %4, -1
  %229 = xor i32 %5, %3
  %230 = xor i32 %229, -1
  %231 = and i32 %230, %228
  %232 = and i32 %229, %4
  %233 = or i32 %229, %12
  %234 = xor i32 %3, -1
  %235 = and i32 %234, %5
  %236 = and i32 %235, %228
  %237 = or i32 %229, %228
  %238 = xor i32 %237, -1
  %239 = or i32 %236, %238
  %240 = xor i32 %225, -1
  %241 = or i32 %13, %240
  %242 = xor i32 %12, -1
  %243 = and i32 %242, %5
  %244 = or i32 %18, %234
  %245 = and i32 %235, %4
  %246 = xor i32 %229, %4
  %247 = xor i32 %246, -1
  %248 = xor i32 %245, %247
  %249 = shl i32 %248, 1
  %250 = xor i32 %5, %4
  %251 = xor i32 %250, -1
  %252 = and i32 %251, %234
  %253 = xor i32 %18, %3
  %254 = or i32 %234, %4
  %255 = xor i32 %18, %254
  %256 = and i32 %234, %4
  %257 = xor i32 %256, -1
  %258 = xor i32 %257, %5
  %259 = or i32 %18, %240
  %260 = shl i32 %259, 1
  %261 = or i32 %5, %3
  %262 = xor i32 %261, %12
  %263 = xor i32 %254, -1
  %264 = or i32 %229, %263
  %265 = or i32 %229, %4
  %266 = xor i32 %265, -1
  %267 = or i32 %245, %266
  %268 = and i32 %13, %3
  %269 = or i32 %18, %268
  %270 = xor i32 %230, %4
  %271 = or i32 %268, %256
  %272 = or i32 %225, %15
  %273 = shl i32 %272, 1
  %274 = or i32 %250, %240
  %275 = or i32 %250, %256
  %276 = or i32 %4, %3
  %277 = xor i32 %276, -1
  %278 = xor i32 %277, %5
  %279 = and i32 %229, %254
  %280 = or i32 %245, %246
  %281 = and i32 %5, %3
  %282 = and i32 %281, %228
  %283 = or i32 %282, %232
  %284 = shl i32 %283, 1
  %285 = or i32 %234, %5
  %286 = and i32 %285, %228
  %287 = xor i32 %245, -1
  %288 = xor i32 %286, %287
  %289 = and i32 %14, %234
  %290 = or i32 %12, %13
  %291 = or i32 %13, %3
  %292 = xor i32 %291, -1
  %293 = or i32 %292, %4
  %294 = or i32 %268, %4
  %295 = xor i32 %226, %291
  %296 = or i32 %5, %4
  %297 = xor i32 %296, -1
  %298 = xor i32 %297, %3
  %299 = shl i32 %18, 1
  %300 = add i32 %250, 1
  %301 = or i32 %226, %225
  %302 = shl i32 %277, 1
  %303 = or i32 %277, %5
  %304 = xor i32 %268, %4
  %305 = or i32 %230, %228
  %306 = xor i32 %281, -1
  %307 = and i32 %306, %228
  %308 = or i32 %245, %286
  %309 = and i32 %285, %4
  %310 = xor i32 %309, -1
  %311 = xor i32 %236, %310
  %312 = or i32 %261, %228
  %313 = and i32 %225, %19
  %314 = or i32 %229, %277
  %315 = shl i32 %314, 1
  %316 = and i32 %225, %251
  %317 = or i32 %263, %5
  %318 = or i32 %291, %4
  %319 = and i32 %276, %13
  %320 = xor i32 %242, %5
  %321 = or i32 %12, %251
  %322 = shl i32 %321, 1
  %323 = xor i32 %226, %306
  %324 = xor i32 %226, -1
  %325 = and i32 %324, %234
  %326 = and i32 %250, %225
  %327 = xor i32 %261, -1
  %328 = or i32 %18, %327
  %329 = or i32 %292, %228
  %330 = shl i32 %329, 2
  %331 = and i32 %257, %5
  %332 = or i32 %251, %234
  %333 = and i32 %324, %3
  %334 = or i32 %226, %240
  %335 = xor i32 %291, %4
  %336 = add i32 %254, 1
  %337 = and i32 %281, %4
  %338 = xor i32 %261, %4
  %339 = or i32 %337, %338
  %340 = and i32 %19, %240
  %341 = xor i32 %292, %4
  %342 = and i32 %250, %276
  %343 = xor i32 %285, %228
  %344 = xor i32 %343, %245
  %345 = xor i32 %337, %246
  %346 = or i32 %268, %228
  %347 = shl i32 %346, 2
  %348 = and i32 %240, %5
  %349 = shl i32 %348, 1
  %350 = or i32 %337, %247
  %351 = and i32 %250, %3
  %352 = xor i32 %327, %4
  %353 = and i32 %296, %225
  %354 = and i32 %254, %13
  %355 = and i32 %19, %3
  %356 = and i32 %14, %225
  %357 = xor i32 %18, %276
  %358 = and i32 %229, %228
  %359 = or i32 %337, %358
  %360 = or i32 %256, %13
  %361 = or i32 %297, %3
  %362 = and i32 %250, %240
  %363 = add i32 %3, 1
  %364 = or i32 %12, %327
  %365 = or i32 %15, %234
  %366 = add i32 %5, 1
  %367 = xor i32 %268, -1
  %368 = and i32 %367, %228
  %369 = and i32 %225, %324
  %370 = shl i32 %369, 1
  %371 = and i32 %230, %257
  %372 = and i32 %225, %5
  %373 = and i32 %230, %242
  %374 = or i32 %256, %251
  %375 = shl i32 %374, 1
  %376 = or i32 %225, %297
  %377 = or i32 %256, %230
  %378 = and i32 %296, %234
  %379 = xor i32 %291, %12
  %380 = xor i32 %296, %3
  %381 = or i32 %281, %228
  %382 = or i32 %251, %3
  %383 = or i32 %225, %251
  %384 = xor i32 %15, %3
  %385 = or i32 %250, %263
  %386 = or i32 %226, %292
  %387 = xor i32 %263, %5
  %388 = xor i32 %18, %261
  %389 = or i32 %250, %225
  %390 = xor i32 %254, %5
  %391 = xor i32 %14, %3
  %392 = or i32 %230, %4
  %393 = and i32 %229, %257
  %394 = shl i32 %393, 1
  %395 = and i32 %296, %240
  %396 = xor i32 %306, %4
  %397 = and i32 %250, %234
  %398 = or i32 %306, %228
  %399 = and i32 %261, %228
  %400 = or i32 %337, %399
  %401 = and i32 %251, %242
  %402 = or i32 %226, %234
  %403 = add i32 %225, 1
  %404 = and i32 %306, %4
  %405 = or i32 %297, %234
  %406 = shl i32 %405, 1
  %407 = or i32 %306, %4
  %408 = or i32 %13, %277
  %409 = xor i32 %14, %12
  %410 = or i32 %12, %230
  %411 = add i32 %281, 1
  %412 = shl i32 %5, 1
  %413 = or i32 %226, %281
  %414 = or i32 %297, %240
  %415 = or i32 %261, %4
  %416 = or i32 %229, %256
  %417 = or i32 %327, %4
  %418 = and i32 %230, %4
  %419 = and i32 %250, %254
  %420 = or i32 %291, %228
  %421 = or i32 %225, %13
  %422 = and i32 %291, %4
  %423 = xor i32 %12, %5
  %424 = xor i32 %367, %4
  %425 = and i32 %225, %13
  %426 = shl i32 %425, 1
  %427 = add i32 %226, 1
  %428 = xor i32 %226, %3
  %429 = and i32 %229, %276
  %430 = and i32 %367, %4
  %431 = xor i32 %18, %367
  %432 = shl i32 %431, 1
  %433 = xor i32 %399, -1
  %434 = xor i32 %337, %433
  %435 = and i32 %13, %240
  %436 = xor i32 %276, %5
  %437 = xor i32 %232, -1
  %438 = xor i32 %282, %437
  %439 = or i32 %281, %256
  %440 = or i32 %250, %234
  %441 = and i32 %251, %257
  %442 = xor i32 %281, %4
  %443 = shl i32 %442, 2
  %444 = xor i32 %245, %265
  %445 = or i32 %230, %277
  %446 = add i32 %291, 1
  %447 = and i32 %251, %240
  %448 = or i32 %250, %12
  %449 = or i32 %15, %240
  %450 = or i32 %250, %277
  %451 = or i32 %281, %4
  %452 = or i32 %256, %5
  %453 = or i32 %251, %277
  %454 = and i32 %254, %230
  %455 = and i32 %19, %234
  %456 = shl i32 %455, 1
  %457 = and i32 %13, %257
  %458 = or i32 %251, %263
  %459 = or i32 %236, %309
  %460 = and i32 %14, %240
  %461 = add i32 %268, 1
  %462 = or i32 %18, %3
  %463 = and i32 %276, %5
  %464 = and i32 %291, %228
  %465 = shl i32 %464, 1
  %466 = or i32 %12, %297
  %467 = and i32 %276, %230
  %468 = or i32 %251, %240
  %469 = or i32 %230, %263
  %470 = and i32 %327, %228
  %471 = mul i32 %470, 15
  %472 = and i32 %268, %228
  %473 = mul i32 %472, 29
  %474 = and i32 %327, %4
  %475 = mul i32 %474, 11
  %476 = and i32 %268, %4
  %477 = mul i32 %476, 17
  %478 = and i32 %292, %228
  %479 = mul i32 %478, 20
  %480 = mul i32 %282, 28
  %481 = and i32 %292, %4
  %482 = mul i32 %481, 33
  %483 = shl i32 %337, 3
  %484 = add i32 %173, %3
  %485 = add i32 %484, %194
  %486 = add i32 %485, %191
  %487 = add i32 %486, %183
  %488 = add i32 %487, %174
  %489 = add i32 %488, %165
  %490 = add i32 %489, %153
  %491 = add i32 %490, %108
  %492 = add i32 %491, %130
  %493 = add i32 %492, %111
  %494 = add i32 %493, %35
  %495 = add i32 %494, %101
  %496 = add i32 %495, %435
  %497 = add i32 %496, %250
  %498 = add i32 %497, %290
  %499 = add i32 %498, %176
  %500 = add i32 %499, %439
  %501 = add i32 %500, %453
  %502 = add i32 %501, %418
  %503 = add i32 %502, %414
  %504 = add i32 %503, %410
  %505 = add i32 %504, %407
  %506 = add i32 %505, %404
  %507 = add i32 %506, %396
  %508 = add i32 %507, %379
  %509 = add i32 %508, %368
  %510 = add i32 %509, %364
  %511 = add i32 %510, %342
  %512 = add i32 %511, %323
  %513 = add i32 %512, %304
  %514 = add i32 %513, %244
  %515 = add i32 %514, %232
  %516 = shl i32 %515, 1
  %517 = add i32 %198, %224
  %518 = sub i32 %517, %166
  %519 = add i32 %518, %163
  %520 = add i32 %519, %281
  %521 = sub i32 %520, %229
  %522 = add i32 %521, %381
  %523 = sub i32 %522, %385
  %524 = mul i32 %523, 3
  %525 = sub i32 %121, %33
  %526 = add i32 %525, %53
  %527 = sub i32 %526, %318
  %528 = add i32 %527, %378
  %529 = sub i32 %528, %275
  %530 = mul i32 %529, 5
  %531 = add i32 %222, %217
  %532 = mul i32 %531, -7
  %533 = add i32 %167, %0
  %534 = sub i32 %533, %1
  %535 = sub i32 %534, %36
  %536 = sub i32 %535, %7
  %537 = sub i32 %536, %31
  %538 = sub i32 %537, %142
  %539 = add i32 %538, %208
  %540 = sub i32 %539, %30
  %541 = add i32 %540, %42
  %542 = sub i32 %541, %46
  %543 = add i32 %542, %48
  %544 = sub i32 %543, %54
  %545 = sub i32 %544, %68
  %546 = add i32 %545, %32
  %547 = add i32 %546, %92
  %548 = sub i32 %547, %97
  %549 = sub i32 %548, %62
  %550 = sub i32 %549, %65
  %551 = add i32 %550, %115
  %552 = sub i32 %551, %117
  %553 = add i32 %552, %125
  %554 = add i32 %553, %138
  %555 = add i32 %554, %149
  %556 = add i32 %555, %159
  %557 = add i32 %556, %63
  %558 = sub i32 %557, %164
  %559 = sub i32 %558, %169
  %560 = sub i32 %559, %142
  %561 = add i32 %560, %184
  %562 = add i32 %561, %206
  %563 = add i32 %562, %363
  %564 = add i32 %563, %44
  %565 = sub i32 %564, %49
  %566 = add i32 %565, %50
  %567 = sub i32 %566, %56
  %568 = sub i32 %567, %59
  %569 = add i32 %568, %64
  %570 = add i32 %569, %67
  %571 = sub i32 %570, %70
  %572 = add i32 %571, %74
  %573 = sub i32 %572, %75
  %574 = sub i32 %573, %77
  %575 = add i32 %574, %78
  %576 = sub i32 %575, %81
  %577 = sub i32 %576, %84
  %578 = add i32 %577, %85
  %579 = sub i32 %578, %86
  %580 = add i32 %579, %87
  %581 = add i32 %580, %89
  %582 = sub i32 %581, %90
  %583 = sub i32 %582, %91
  %584 = add i32 %583, %94
  %585 = add i32 %584, %96
  %586 = add i32 %585, %98
  %587 = sub i32 %586, %102
  %588 = add i32 %587, %106
  %589 = add i32 %588, %110
  %590 = add i32 %589, %112
  %591 = add i32 %590, %114
  %592 = sub i32 %591, %116
  %593 = sub i32 %592, %118
  %594 = sub i32 %593, %120
  %595 = add i32 %594, %122
  %596 = add i32 %595, %124
  %597 = sub i32 %596, %126
  %598 = sub i32 %597, %135
  %599 = add i32 %598, %136
  %600 = add i32 %599, %137
  %601 = add i32 %600, %139
  %602 = add i32 %601, %146
  %603 = sub i32 %602, %147
  %604 = add i32 %603, %148
  %605 = sub i32 %604, %151
  %606 = add i32 %605, %152
  %607 = sub i32 %606, %154
  %608 = add i32 %607, %155
  %609 = sub i32 %608, %156
  %610 = add i32 %609, %157
  %611 = sub i32 %610, %158
  %612 = add i32 %611, %162
  %613 = sub i32 %612, %168
  %614 = add i32 %613, %170
  %615 = add i32 %614, %131
  %616 = add i32 %615, %172
  %617 = add i32 %616, %180
  %618 = sub i32 %617, %181
  %619 = add i32 %618, %182
  %620 = sub i32 %619, %60
  %621 = add i32 %620, %185
  %622 = add i32 %621, %188
  %623 = add i32 %622, %189
  %624 = sub i32 %623, %190
  %625 = sub i32 %624, %195
  %626 = sub i32 %625, %200
  %627 = sub i32 %626, %201
  %628 = sub i32 %627, %202
  %629 = sub i32 %628, %203
  %630 = add i32 %629, %204
  %631 = sub i32 %630, %205
  %632 = sub i32 %631, %207
  %633 = sub i32 %632, %210
  %634 = sub i32 %633, %211
  %635 = sub i32 %634, %212
  %636 = sub i32 %635, %103
  %637 = add i32 %636, %228
  %638 = sub i32 %637, %29
  %639 = add i32 %638, %61
  %640 = sub i32 %639, %73
  %641 = sub i32 %640, %80
  %642 = sub i32 %641, %100
  %643 = sub i32 %642, %105
  %644 = sub i32 %643, %109
  %645 = sub i32 %644, %132
  %646 = sub i32 %645, %134
  %647 = sub i32 %646, %141
  %648 = sub i32 %647, %161
  %649 = sub i32 %648, %171
  %650 = add i32 %649, %179
  %651 = add i32 %650, %187
  %652 = sub i32 %651, %193
  %653 = sub i32 %652, %197
  %654 = sub i32 %653, %209
  %655 = add i32 %654, %214
  %656 = add i32 %655, %216
  %657 = add i32 %656, %219
  %658 = add i32 %657, %221
  %659 = add i32 %658, %223
  %660 = sub i32 %659, %225
  %661 = add i32 %660, %12
  %662 = add i32 %661, %336
  %663 = sub i32 %662, %276
  %664 = add i32 %663, %366
  %665 = add i32 %664, %403
  %666 = sub i32 %665, %256
  %667 = sub i32 %666, %241
  %668 = add i32 %667, %243
  %669 = add i32 %668, %258
  %670 = sub i32 %669, %278
  %671 = add i32 %670, %268
  %672 = add i32 %671, %230
  %673 = add i32 %672, %300
  %674 = sub i32 %673, %302
  %675 = add i32 %674, %303
  %676 = sub i32 %675, %317
  %677 = sub i32 %676, %319
  %678 = add i32 %677, %320
  %679 = add i32 %678, %331
  %680 = sub i32 %679, %291
  %681 = add i32 %680, %354
  %682 = add i32 %681, %360
  %683 = sub i32 %682, %372
  %684 = sub i32 %683, %387
  %685 = sub i32 %684, %390
  %686 = sub i32 %685, %408
  %687 = add i32 %686, %411
  %688 = sub i32 %687, %412
  %689 = add i32 %688, %421
  %690 = add i32 %689, %423
  %691 = add i32 %690, %427
  %692 = sub i32 %691, %436
  %693 = add i32 %692, %446
  %694 = sub i32 %693, %452
  %695 = sub i32 %694, %457
  %696 = add i32 %695, %461
  %697 = add i32 %696, %463
  %698 = add i32 %697, %261
  %699 = add i32 %698, %532
  %700 = sub i32 %699, %41
  %701 = sub i32 %700, %129
  %702 = sub i32 %701, %145
  %703 = add i32 %702, %227
  %704 = sub i32 %703, %231
  %705 = sub i32 %704, %233
  %706 = add i32 %705, %252
  %707 = add i32 %706, %253
  %708 = add i32 %707, %255
  %709 = sub i32 %708, %262
  %710 = add i32 %709, %264
  %711 = sub i32 %710, %269
  %712 = add i32 %711, %270
  %713 = sub i32 %712, %271
  %714 = sub i32 %713, %274
  %715 = sub i32 %714, %279
  %716 = sub i32 %715, %289
  %717 = sub i32 %716, %293
  %718 = sub i32 %717, %294
  %719 = add i32 %718, %295
  %720 = sub i32 %719, %298
  %721 = sub i32 %720, %299
  %722 = sub i32 %721, %301
  %723 = sub i32 %722, %305
  %724 = add i32 %723, %307
  %725 = sub i32 %724, %312
  %726 = sub i32 %725, %313
  %727 = add i32 %726, %316
  %728 = sub i32 %727, %325
  %729 = add i32 %728, %326
  %730 = sub i32 %729, %328
  %731 = add i32 %730, %332
  %732 = sub i32 %731, %333
  %733 = add i32 %732, %334
  %734 = add i32 %733, %335
  %735 = sub i32 %734, %340
  %736 = add i32 %735, %341
  %737 = sub i32 %736, %349
  %738 = sub i32 %737, %351
  %739 = add i32 %738, %338
  %740 = add i32 %739, %352
  %741 = add i32 %740, %353
  %742 = sub i32 %741, %355
  %743 = sub i32 %742, %356
  %744 = sub i32 %743, %357
  %745 = sub i32 %744, %361
  %746 = add i32 %745, %362
  %747 = sub i32 %746, %365
  %748 = add i32 %747, %371
  %749 = add i32 %748, %373
  %750 = add i32 %749, %376
  %751 = sub i32 %750, %377
  %752 = sub i32 %751, %380
  %753 = sub i32 %752, %382
  %754 = add i32 %753, %383
  %755 = add i32 %754, %384
  %756 = add i32 %755, %386
  %757 = add i32 %756, %246
  %758 = sub i32 %757, %388
  %759 = add i32 %758, %389
  %760 = sub i32 %759, %391
  %761 = sub i32 %760, %392
  %762 = add i32 %761, %395
  %763 = add i32 %762, %397
  %764 = sub i32 %763, %398
  %765 = add i32 %764, %401
  %766 = add i32 %765, %402
  %767 = sub i32 %766, %409
  %768 = add i32 %767, %413
  %769 = add i32 %768, %415
  %770 = add i32 %769, %416
  %771 = add i32 %770, %417
  %772 = sub i32 %771, %419
  %773 = add i32 %772, %420
  %774 = add i32 %773, %422
  %775 = add i32 %774, %424
  %776 = sub i32 %775, %426
  %777 = sub i32 %776, %428
  %778 = sub i32 %777, %429
  %779 = sub i32 %778, %430
  %780 = sub i32 %779, %237
  %781 = sub i32 %780, %440
  %782 = sub i32 %781, %441
  %783 = sub i32 %782, %445
  %784 = sub i32 %783, %399
  %785 = add i32 %784, %447
  %786 = add i32 %785, %448
  %787 = add i32 %786, %449
  %788 = add i32 %787, %450
  %789 = sub i32 %788, %451
  %790 = add i32 %789, %454
  %791 = add i32 %790, %458
  %792 = sub i32 %791, %460
  %793 = add i32 %792, %462
  %794 = sub i32 %793, %265
  %795 = add i32 %794, %466
  %796 = sub i32 %795, %467
  %797 = add i32 %796, %468
  %798 = sub i32 %797, %469
  %799 = add i32 %798, %239
  %800 = sub i32 %799, %260
  %801 = add i32 %800, %267
  %802 = sub i32 %801, %273
  %803 = sub i32 %802, %280
  %804 = add i32 %803, %288
  %805 = sub i32 %804, %308
  %806 = sub i32 %805, %311
  %807 = sub i32 %806, %315
  %808 = sub i32 %807, %322
  %809 = sub i32 %808, %330
  %810 = add i32 %809, %339
  %811 = add i32 %810, %344
  %812 = add i32 %811, %345
  %813 = sub i32 %812, %347
  %814 = sub i32 %813, %350
  %815 = add i32 %814, %359
  %816 = sub i32 %815, %370
  %817 = sub i32 %816, %375
  %818 = sub i32 %817, %394
  %819 = sub i32 %818, %400
  %820 = sub i32 %819, %406
  %821 = sub i32 %820, %432
  %822 = add i32 %821, %434
  %823 = sub i32 %822, %438
  %824 = sub i32 %823, %443
  %825 = sub i32 %824, %444
  %826 = sub i32 %825, %456
  %827 = add i32 %826, %459
  %828 = sub i32 %827, %465
  %829 = add i32 %828, %471
  %830 = add i32 %829, %473
  %831 = add i32 %830, %475
  %832 = add i32 %831, %477
  %833 = add i32 %832, %479
  %834 = add i32 %833, %480
  %835 = add i32 %834, %482
  %836 = sub i32 %835, %483
  %837 = sub i32 %836, %249
  %838 = sub i32 %837, %284
  %839 = add i32 %838, %530
  %840 = add i32 %839, %524
  %841 = add i32 %840, %516
  %842 = icmp eq i32 %22, %841
  %843 = select i1 %842, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %844 = tail call i32 @puts(i8* nonnull dereferenceable(1) %843)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
