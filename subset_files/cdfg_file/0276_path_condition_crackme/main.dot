digraph "DFG for'main' function" {
	Node0x24cbe28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x24cbea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x24cbf38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x24cc398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24cc478[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x24cc598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24cc7d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x24cc888[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x24cd7f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x24cde80[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x24cdef0[shape=record, label="  %9 = xor i32 %6, %8"];
	Node0x24cdf60[shape=record, label="  %10 = add i32 %9, %8"];
	Node0x24cdfd0[shape=record, label="  %11 = or i32 %6, %8"];
	Node0x24ce040[shape=record, label="  %12 = and i32 %6, %8"];
	Node0x24ce0b0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x24ce120[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x24ce190[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x24ce200[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x24ce270[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x24ce2e0[shape=record, label="  %18 = shl i32 %15, 2"];
	Node0x24ce350[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0x24ce3c0[shape=record, label="  %20 = shl i32 %11, 1"];
	Node0x24ce430[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x24ce4a0[shape=record, label="  %22 = mul i32 %12, 3"];
	Node0x24ce510[shape=record, label="  %23 = mul i32 %16, 6"];
	Node0x24ce580[shape=record, label="  %24 = add i32 %11, %6"];
	Node0x24ce5f0[shape=record, label="  %25 = add i32 %24, %15"];
	Node0x24ce660[shape=record, label="  %26 = sub i32 %17, %25"];
	Node0x24ce6d0[shape=record, label="  %27 = add i32 %26, %22"];
	Node0x24ce740[shape=record, label="  %28 = add i32 %27, %23"];
	Node0x24ce7b0[shape=record, label="  %29 = sub i32 %28, %14"];
	Node0x24ce820[shape=record, label="  %30 = add i32 %29, %19"];
	Node0x24ce890[shape=record, label="  %31 = add i32 %30, %21"];
	Node0x24ce900[shape=record, label="  %32 = icmp eq i32 %10, %31"];
	Node0x246c9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x24ceba0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x24cedf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24cef58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24cf018[shape=record, label="  ret i32 0"];
	Node0x24cbe28 -> Node0x24cbea8;
	Node0x24cbea8 -> Node0x24cbf38;
	Node0x24cbf38 -> Node0x24cc398;
	Node0x24cc398 -> Node0x24cc478;
	Node0x24cc478 -> Node0x24cc598;
	Node0x24cc598 -> Node0x24cc7d0;
	Node0x24cc7d0 -> Node0x24cc888;
	Node0x24cc888 -> Node0x24cd7f8;
	Node0x24cd7f8 -> Node0x24cde80;
	Node0x24cde80 -> Node0x24cdef0;
	Node0x24cdef0 -> Node0x24cdf60;
	Node0x24cdf60 -> Node0x24cdfd0;
	Node0x24cdfd0 -> Node0x24ce040;
	Node0x24ce040 -> Node0x24ce0b0;
	Node0x24ce0b0 -> Node0x24ce120;
	Node0x24ce120 -> Node0x24ce190;
	Node0x24ce190 -> Node0x24ce200;
	Node0x24ce200 -> Node0x24ce270;
	Node0x24ce270 -> Node0x24ce2e0;
	Node0x24ce2e0 -> Node0x24ce350;
	Node0x24ce350 -> Node0x24ce3c0;
	Node0x24ce3c0 -> Node0x24ce430;
	Node0x24ce430 -> Node0x24ce4a0;
	Node0x24ce4a0 -> Node0x24ce510;
	Node0x24ce510 -> Node0x24ce580;
	Node0x24ce580 -> Node0x24ce5f0;
	Node0x24ce5f0 -> Node0x24ce660;
	Node0x24ce660 -> Node0x24ce6d0;
	Node0x24ce6d0 -> Node0x24ce740;
	Node0x24ce740 -> Node0x24ce7b0;
	Node0x24ce7b0 -> Node0x24ce820;
	Node0x24ce820 -> Node0x24ce890;
	Node0x24ce890 -> Node0x24ce900;
	Node0x24ce900 -> Node0x246c9d8;
	Node0x246c9d8 -> Node0x24ceba0;
	Node0x24ceba0 -> Node0x24cedf8;
	Node0x24cedf8 -> Node0x24cef58;
	Node0x24cef58 -> Node0x24cf018;
edge [color=red]
	Node0x24cbe28 -> Node0x24cbf38;
	Node0x24cbf38 -> Node0x24cc398;
	Node0x24cbea8 -> Node0x24cc478;
	Node0x24cc478 -> Node0x24cc598;
	Node0x24cbe28 -> Node0x24cc7d0;
	Node0x24cbea8 -> Node0x24cc7d0;
	Node0x24cbe28 -> Node0x24cc888;
	Node0x24cbea8 -> Node0x24cd7f8;
	Node0x24cd7f8 -> Node0x24cde80;
	Node0x24cc888 -> Node0x24cdef0;
	Node0x24cde80 -> Node0x24cdef0;
	Node0x24cdef0 -> Node0x24cdf60;
	Node0x24cde80 -> Node0x24cdf60;
	Node0x24cc888 -> Node0x24cdfd0;
	Node0x24cde80 -> Node0x24cdfd0;
	Node0x24cc888 -> Node0x24ce040;
	Node0x24cde80 -> Node0x24ce040;
	Node0x24ce040 -> Node0x24ce0b0;
	Node0x24ce0b0 -> Node0x24ce120;
	Node0x24cd7f8 -> Node0x24ce190;
	Node0x24cc888 -> Node0x24ce190;
	Node0x24cd7f8 -> Node0x24ce200;
	Node0x24cc888 -> Node0x24ce200;
	Node0x24ce200 -> Node0x24ce270;
	Node0x24ce190 -> Node0x24ce2e0;
	Node0x24ce2e0 -> Node0x24ce350;
	Node0x24cdfd0 -> Node0x24ce3c0;
	Node0x24ce3c0 -> Node0x24ce430;
	Node0x24ce040 -> Node0x24ce4a0;
	Node0x24ce200 -> Node0x24ce510;
	Node0x24cdfd0 -> Node0x24ce580;
	Node0x24cc888 -> Node0x24ce580;
	Node0x24ce580 -> Node0x24ce5f0;
	Node0x24ce190 -> Node0x24ce5f0;
	Node0x24ce270 -> Node0x24ce660;
	Node0x24ce5f0 -> Node0x24ce660;
	Node0x24ce660 -> Node0x24ce6d0;
	Node0x24ce4a0 -> Node0x24ce6d0;
	Node0x24ce6d0 -> Node0x24ce740;
	Node0x24ce510 -> Node0x24ce740;
	Node0x24ce740 -> Node0x24ce7b0;
	Node0x24ce120 -> Node0x24ce7b0;
	Node0x24ce7b0 -> Node0x24ce820;
	Node0x24ce350 -> Node0x24ce820;
	Node0x24ce820 -> Node0x24ce890;
	Node0x24ce430 -> Node0x24ce890;
	Node0x24cdf60 -> Node0x24ce900;
	Node0x24ce890 -> Node0x24ce900;
	Node0x24ce900 -> Node0x246c9d8;
	Node0x246c9d8 -> Node0x24ceba0;
	Node0x24cc478 -> Node0x24cedf8;
	Node0x24cbf38 -> Node0x24cef58;
}
