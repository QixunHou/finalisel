digraph "DFG for'main' function" {
	Node0x10f62f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x10f6378[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x10f6408[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x10f6468[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x10f6518[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x10f6948[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10f6a28[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x10f6b28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10f6be8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x10f6c98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10f6d58[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x10f6e08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10f18a0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x10f7008[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10f7f78[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10f85e8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x10f8648[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x10f86c0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x10f8730[shape=record, label="  %15 = and i32 %12, %11"];
	Node0x10f87a0[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x10f8810[shape=record, label="  %17 = or i32 %13, %16"];
	Node0x10f8880[shape=record, label="  %18 = add i32 %15, %17"];
	Node0x10f88f0[shape=record, label="  %19 = sub i32 0, %18"];
	Node0x10f8960[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x10f89d0[shape=record, label="  %21 = or i32 %11, %20"];
	Node0x10f8a40[shape=record, label="  %22 = and i32 %11, %20"];
	Node0x10f8ab0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x10f8b20[shape=record, label="  %24 = xor i32 %13, %10"];
	Node0x10f8b90[shape=record, label="  %25 = and i32 %13, %16"];
	Node0x10f8c00[shape=record, label="  %26 = mul i32 %25, -3"];
	Node0x10f8c70[shape=record, label="  %27 = add i32 %24, %11"];
	Node0x10f8ce0[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x10f8d50[shape=record, label="  %29 = sub i32 2, %11"];
	Node0x10f8dc0[shape=record, label="  %30 = sub i32 %29, %12"];
	Node0x10f8e30[shape=record, label="  %31 = add i32 %30, %20"];
	Node0x10f8ea0[shape=record, label="  %32 = sub i32 %31, %21"];
	Node0x10f8f10[shape=record, label="  %33 = add i32 %32, %14"];
	Node0x10f8f80[shape=record, label="  %34 = sub i32 %33, %23"];
	Node0x10f8ff0[shape=record, label="  %35 = add i32 %34, %25"];
	Node0x10f9060[shape=record, label="  %36 = add i32 %35, %17"];
	Node0x10f90d0[shape=record, label="  %37 = add i32 %36, %26"];
	Node0x10f9140[shape=record, label="  %38 = add i32 %37, %28"];
	Node0x10f91b0[shape=record, label="  %39 = icmp eq i32 %38, %19"];
	Node0x10968b8[shape=record, label="  %40 = select i1 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x10f9240[shape=record, label="  %41 = call i32 @puts(i8* nonnull dereferenceable(1) %40) #5"];
	Node0x10f94e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10f9648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10f9758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10f9868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10f9928[shape=record, label="  ret i32 0"];
	Node0x10f62f8 -> Node0x10f6378;
	Node0x10f6378 -> Node0x10f6408;
	Node0x10f6408 -> Node0x10f6468;
	Node0x10f6468 -> Node0x10f6518;
	Node0x10f6518 -> Node0x10f6948;
	Node0x10f6948 -> Node0x10f6a28;
	Node0x10f6a28 -> Node0x10f6b28;
	Node0x10f6b28 -> Node0x10f6be8;
	Node0x10f6be8 -> Node0x10f6c98;
	Node0x10f6c98 -> Node0x10f6d58;
	Node0x10f6d58 -> Node0x10f6e08;
	Node0x10f6e08 -> Node0x10f18a0;
	Node0x10f18a0 -> Node0x10f7008;
	Node0x10f7008 -> Node0x10f7f78;
	Node0x10f7f78 -> Node0x10f85e8;
	Node0x10f85e8 -> Node0x10f8648;
	Node0x10f8648 -> Node0x10f86c0;
	Node0x10f86c0 -> Node0x10f8730;
	Node0x10f8730 -> Node0x10f87a0;
	Node0x10f87a0 -> Node0x10f8810;
	Node0x10f8810 -> Node0x10f8880;
	Node0x10f8880 -> Node0x10f88f0;
	Node0x10f88f0 -> Node0x10f8960;
	Node0x10f8960 -> Node0x10f89d0;
	Node0x10f89d0 -> Node0x10f8a40;
	Node0x10f8a40 -> Node0x10f8ab0;
	Node0x10f8ab0 -> Node0x10f8b20;
	Node0x10f8b20 -> Node0x10f8b90;
	Node0x10f8b90 -> Node0x10f8c00;
	Node0x10f8c00 -> Node0x10f8c70;
	Node0x10f8c70 -> Node0x10f8ce0;
	Node0x10f8ce0 -> Node0x10f8d50;
	Node0x10f8d50 -> Node0x10f8dc0;
	Node0x10f8dc0 -> Node0x10f8e30;
	Node0x10f8e30 -> Node0x10f8ea0;
	Node0x10f8ea0 -> Node0x10f8f10;
	Node0x10f8f10 -> Node0x10f8f80;
	Node0x10f8f80 -> Node0x10f8ff0;
	Node0x10f8ff0 -> Node0x10f9060;
	Node0x10f9060 -> Node0x10f90d0;
	Node0x10f90d0 -> Node0x10f9140;
	Node0x10f9140 -> Node0x10f91b0;
	Node0x10f91b0 -> Node0x10968b8;
	Node0x10968b8 -> Node0x10f9240;
	Node0x10f9240 -> Node0x10f94e8;
	Node0x10f94e8 -> Node0x10f9648;
	Node0x10f9648 -> Node0x10f9758;
	Node0x10f9758 -> Node0x10f9868;
	Node0x10f9868 -> Node0x10f9928;
edge [color=red]
	Node0x10f62f8 -> Node0x10f6518;
	Node0x10f6518 -> Node0x10f6948;
	Node0x10f6378 -> Node0x10f6a28;
	Node0x10f6a28 -> Node0x10f6b28;
	Node0x10f6408 -> Node0x10f6be8;
	Node0x10f6be8 -> Node0x10f6c98;
	Node0x10f6468 -> Node0x10f6d58;
	Node0x10f6d58 -> Node0x10f6e08;
	Node0x10f62f8 -> Node0x10f18a0;
	Node0x10f6378 -> Node0x10f18a0;
	Node0x10f6408 -> Node0x10f18a0;
	Node0x10f6468 -> Node0x10f18a0;
	Node0x10f62f8 -> Node0x10f7008;
	Node0x10f6378 -> Node0x10f7f78;
	Node0x10f6408 -> Node0x10f85e8;
	Node0x10f6468 -> Node0x10f8648;
	Node0x10f85e8 -> Node0x10f86c0;
	Node0x10f7f78 -> Node0x10f86c0;
	Node0x10f85e8 -> Node0x10f8730;
	Node0x10f7f78 -> Node0x10f8730;
	Node0x10f7008 -> Node0x10f87a0;
	Node0x10f8648 -> Node0x10f8810;
	Node0x10f87a0 -> Node0x10f8810;
	Node0x10f8730 -> Node0x10f8880;
	Node0x10f8810 -> Node0x10f8880;
	Node0x10f8880 -> Node0x10f88f0;
	Node0x10f85e8 -> Node0x10f8960;
	Node0x10f7f78 -> Node0x10f89d0;
	Node0x10f8960 -> Node0x10f89d0;
	Node0x10f7f78 -> Node0x10f8a40;
	Node0x10f8960 -> Node0x10f8a40;
	Node0x10f8a40 -> Node0x10f8ab0;
	Node0x10f8648 -> Node0x10f8b20;
	Node0x10f7008 -> Node0x10f8b20;
	Node0x10f8648 -> Node0x10f8b90;
	Node0x10f87a0 -> Node0x10f8b90;
	Node0x10f8b90 -> Node0x10f8c00;
	Node0x10f8b20 -> Node0x10f8c70;
	Node0x10f7f78 -> Node0x10f8c70;
	Node0x10f8c70 -> Node0x10f8ce0;
	Node0x10f7f78 -> Node0x10f8d50;
	Node0x10f8d50 -> Node0x10f8dc0;
	Node0x10f85e8 -> Node0x10f8dc0;
	Node0x10f8dc0 -> Node0x10f8e30;
	Node0x10f8960 -> Node0x10f8e30;
	Node0x10f8e30 -> Node0x10f8ea0;
	Node0x10f89d0 -> Node0x10f8ea0;
	Node0x10f8ea0 -> Node0x10f8f10;
	Node0x10f86c0 -> Node0x10f8f10;
	Node0x10f8f10 -> Node0x10f8f80;
	Node0x10f8ab0 -> Node0x10f8f80;
	Node0x10f8f80 -> Node0x10f8ff0;
	Node0x10f8b90 -> Node0x10f8ff0;
	Node0x10f8ff0 -> Node0x10f9060;
	Node0x10f8810 -> Node0x10f9060;
	Node0x10f9060 -> Node0x10f90d0;
	Node0x10f8c00 -> Node0x10f90d0;
	Node0x10f90d0 -> Node0x10f9140;
	Node0x10f8ce0 -> Node0x10f9140;
	Node0x10f9140 -> Node0x10f91b0;
	Node0x10f88f0 -> Node0x10f91b0;
	Node0x10f91b0 -> Node0x10968b8;
	Node0x10968b8 -> Node0x10f9240;
	Node0x10f6d58 -> Node0x10f94e8;
	Node0x10f6be8 -> Node0x10f9648;
	Node0x10f6a28 -> Node0x10f9758;
	Node0x10f6518 -> Node0x10f9868;
}
