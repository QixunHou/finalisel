digraph "DFG for'main' function" {
	Node0x130dd28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x130dda8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x130de38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x130de98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x130df48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x130e378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x130e458[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x130e558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x130e618[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x130e6c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x130e788[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x130e838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1308ba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x130ea38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x130f9a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1310018[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1310078[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x13100f0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x1310160[shape=record, label="  %15 = xor i32 %12, %11"];
	Node0x13101d0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1310240[shape=record, label="  %17 = and i32 %13, %10"];
	Node0x13102b0[shape=record, label="  %18 = sub i32 1, %14"];
	Node0x1310320[shape=record, label="  %19 = sub i32 %18, %16"];
	Node0x1310390[shape=record, label="  %20 = add i32 %19, %17"];
	Node0x1310400[shape=record, label="  %21 = xor i32 %12, -1"];
	Node0x1310470[shape=record, label="  %22 = and i32 %11, %21"];
	Node0x13104e0[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x1310550[shape=record, label="  %24 = xor i32 %11, -1"];
	Node0x13105c0[shape=record, label="  %25 = and i32 %12, %24"];
	Node0x1310630[shape=record, label="  %26 = mul i32 %25, 5"];
	Node0x13106a0[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x1310710[shape=record, label="  %28 = xor i32 %10, -1"];
	Node0x1310780[shape=record, label="  %29 = or i32 %13, %28"];
	Node0x13107f0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x1310860[shape=record, label="  %31 = shl i32 %13, 1"];
	Node0x13108d0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x1310940[shape=record, label="  %33 = shl i32 %28, 1"];
	Node0x13109b0[shape=record, label="  %34 = xor i32 %13, %10"];
	Node0x1310a20[shape=record, label="  %35 = xor i32 %32, -1"];
	Node0x1310a90[shape=record, label="  %36 = xor i32 %29, -1"];
	Node0x1310b00[shape=record, label="  %37 = mul i32 %13, 6"];
	Node0x1310b70[shape=record, label="  %38 = add i32 %36, %35"];
	Node0x1310be0[shape=record, label="  %39 = mul i32 %38, 5"];
	Node0x1310c50[shape=record, label="  %40 = mul i32 %11, -3"];
	Node0x1310cc0[shape=record, label="  %41 = sub i32 7, %33"];
	Node0x1310d30[shape=record, label="  %42 = add i32 %41, %12"];
	Node0x1310da0[shape=record, label="  %43 = add i32 %42, %40"];
	Node0x1310e10[shape=record, label="  %44 = sub i32 %43, %22"];
	Node0x1310e80[shape=record, label="  %45 = add i32 %44, %15"];
	Node0x1310ef0[shape=record, label="  %46 = add i32 %45, %23"];
	Node0x1310f60[shape=record, label="  %47 = add i32 %46, %13"];
	Node0x1310fd0[shape=record, label="  %48 = add i32 %47, %27"];
	Node0x1311040[shape=record, label="  %49 = sub i32 %48, %31"];
	Node0x13110b0[shape=record, label="  %50 = sub i32 %49, %32"];
	Node0x1311120[shape=record, label="  %51 = add i32 %50, %34"];
	Node0x1311190[shape=record, label="  %52 = add i32 %51, %37"];
	Node0x1311200[shape=record, label="  %53 = add i32 %52, %30"];
	Node0x1311270[shape=record, label="  %54 = add i32 %53, %39"];
	Node0x13112e0[shape=record, label="  %55 = icmp eq i32 %20, %54"];
	Node0x12ad8b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1311370[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x1311618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1311778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1311888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1311998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1311a58[shape=record, label="  ret i32 0"];
	Node0x130dd28 -> Node0x130dda8;
	Node0x130dda8 -> Node0x130de38;
	Node0x130de38 -> Node0x130de98;
	Node0x130de98 -> Node0x130df48;
	Node0x130df48 -> Node0x130e378;
	Node0x130e378 -> Node0x130e458;
	Node0x130e458 -> Node0x130e558;
	Node0x130e558 -> Node0x130e618;
	Node0x130e618 -> Node0x130e6c8;
	Node0x130e6c8 -> Node0x130e788;
	Node0x130e788 -> Node0x130e838;
	Node0x130e838 -> Node0x1308ba0;
	Node0x1308ba0 -> Node0x130ea38;
	Node0x130ea38 -> Node0x130f9a8;
	Node0x130f9a8 -> Node0x1310018;
	Node0x1310018 -> Node0x1310078;
	Node0x1310078 -> Node0x13100f0;
	Node0x13100f0 -> Node0x1310160;
	Node0x1310160 -> Node0x13101d0;
	Node0x13101d0 -> Node0x1310240;
	Node0x1310240 -> Node0x13102b0;
	Node0x13102b0 -> Node0x1310320;
	Node0x1310320 -> Node0x1310390;
	Node0x1310390 -> Node0x1310400;
	Node0x1310400 -> Node0x1310470;
	Node0x1310470 -> Node0x13104e0;
	Node0x13104e0 -> Node0x1310550;
	Node0x1310550 -> Node0x13105c0;
	Node0x13105c0 -> Node0x1310630;
	Node0x1310630 -> Node0x13106a0;
	Node0x13106a0 -> Node0x1310710;
	Node0x1310710 -> Node0x1310780;
	Node0x1310780 -> Node0x13107f0;
	Node0x13107f0 -> Node0x1310860;
	Node0x1310860 -> Node0x13108d0;
	Node0x13108d0 -> Node0x1310940;
	Node0x1310940 -> Node0x13109b0;
	Node0x13109b0 -> Node0x1310a20;
	Node0x1310a20 -> Node0x1310a90;
	Node0x1310a90 -> Node0x1310b00;
	Node0x1310b00 -> Node0x1310b70;
	Node0x1310b70 -> Node0x1310be0;
	Node0x1310be0 -> Node0x1310c50;
	Node0x1310c50 -> Node0x1310cc0;
	Node0x1310cc0 -> Node0x1310d30;
	Node0x1310d30 -> Node0x1310da0;
	Node0x1310da0 -> Node0x1310e10;
	Node0x1310e10 -> Node0x1310e80;
	Node0x1310e80 -> Node0x1310ef0;
	Node0x1310ef0 -> Node0x1310f60;
	Node0x1310f60 -> Node0x1310fd0;
	Node0x1310fd0 -> Node0x1311040;
	Node0x1311040 -> Node0x13110b0;
	Node0x13110b0 -> Node0x1311120;
	Node0x1311120 -> Node0x1311190;
	Node0x1311190 -> Node0x1311200;
	Node0x1311200 -> Node0x1311270;
	Node0x1311270 -> Node0x13112e0;
	Node0x13112e0 -> Node0x12ad8b8;
	Node0x12ad8b8 -> Node0x1311370;
	Node0x1311370 -> Node0x1311618;
	Node0x1311618 -> Node0x1311778;
	Node0x1311778 -> Node0x1311888;
	Node0x1311888 -> Node0x1311998;
	Node0x1311998 -> Node0x1311a58;
edge [color=red]
	Node0x130dd28 -> Node0x130df48;
	Node0x130df48 -> Node0x130e378;
	Node0x130dda8 -> Node0x130e458;
	Node0x130e458 -> Node0x130e558;
	Node0x130de38 -> Node0x130e618;
	Node0x130e618 -> Node0x130e6c8;
	Node0x130de98 -> Node0x130e788;
	Node0x130e788 -> Node0x130e838;
	Node0x130dd28 -> Node0x1308ba0;
	Node0x130dda8 -> Node0x1308ba0;
	Node0x130de38 -> Node0x1308ba0;
	Node0x130de98 -> Node0x1308ba0;
	Node0x130dd28 -> Node0x130ea38;
	Node0x130dda8 -> Node0x130f9a8;
	Node0x130de38 -> Node0x1310018;
	Node0x130de98 -> Node0x1310078;
	Node0x1310018 -> Node0x13100f0;
	Node0x130f9a8 -> Node0x13100f0;
	Node0x1310018 -> Node0x1310160;
	Node0x130f9a8 -> Node0x1310160;
	Node0x1310160 -> Node0x13101d0;
	Node0x1310078 -> Node0x1310240;
	Node0x130ea38 -> Node0x1310240;
	Node0x13100f0 -> Node0x13102b0;
	Node0x13102b0 -> Node0x1310320;
	Node0x13101d0 -> Node0x1310320;
	Node0x1310320 -> Node0x1310390;
	Node0x1310240 -> Node0x1310390;
	Node0x1310018 -> Node0x1310400;
	Node0x130f9a8 -> Node0x1310470;
	Node0x1310400 -> Node0x1310470;
	Node0x1310018 -> Node0x13104e0;
	Node0x130f9a8 -> Node0x13104e0;
	Node0x130f9a8 -> Node0x1310550;
	Node0x1310018 -> Node0x13105c0;
	Node0x1310550 -> Node0x13105c0;
	Node0x13105c0 -> Node0x1310630;
	Node0x1310630 -> Node0x13106a0;
	Node0x130ea38 -> Node0x1310710;
	Node0x1310078 -> Node0x1310780;
	Node0x1310710 -> Node0x1310780;
	Node0x1310780 -> Node0x13107f0;
	Node0x1310078 -> Node0x1310860;
	Node0x1310078 -> Node0x13108d0;
	Node0x130ea38 -> Node0x13108d0;
	Node0x1310710 -> Node0x1310940;
	Node0x1310078 -> Node0x13109b0;
	Node0x130ea38 -> Node0x13109b0;
	Node0x13108d0 -> Node0x1310a20;
	Node0x1310780 -> Node0x1310a90;
	Node0x1310078 -> Node0x1310b00;
	Node0x1310a90 -> Node0x1310b70;
	Node0x1310a20 -> Node0x1310b70;
	Node0x1310b70 -> Node0x1310be0;
	Node0x130f9a8 -> Node0x1310c50;
	Node0x1310940 -> Node0x1310cc0;
	Node0x1310cc0 -> Node0x1310d30;
	Node0x1310018 -> Node0x1310d30;
	Node0x1310d30 -> Node0x1310da0;
	Node0x1310c50 -> Node0x1310da0;
	Node0x1310da0 -> Node0x1310e10;
	Node0x1310470 -> Node0x1310e10;
	Node0x1310e10 -> Node0x1310e80;
	Node0x1310160 -> Node0x1310e80;
	Node0x1310e80 -> Node0x1310ef0;
	Node0x13104e0 -> Node0x1310ef0;
	Node0x1310ef0 -> Node0x1310f60;
	Node0x1310078 -> Node0x1310f60;
	Node0x1310f60 -> Node0x1310fd0;
	Node0x13106a0 -> Node0x1310fd0;
	Node0x1310fd0 -> Node0x1311040;
	Node0x1310860 -> Node0x1311040;
	Node0x1311040 -> Node0x13110b0;
	Node0x13108d0 -> Node0x13110b0;
	Node0x13110b0 -> Node0x1311120;
	Node0x13109b0 -> Node0x1311120;
	Node0x1311120 -> Node0x1311190;
	Node0x1310b00 -> Node0x1311190;
	Node0x1311190 -> Node0x1311200;
	Node0x13107f0 -> Node0x1311200;
	Node0x1311200 -> Node0x1311270;
	Node0x1310be0 -> Node0x1311270;
	Node0x1310390 -> Node0x13112e0;
	Node0x1311270 -> Node0x13112e0;
	Node0x13112e0 -> Node0x12ad8b8;
	Node0x12ad8b8 -> Node0x1311370;
	Node0x130e788 -> Node0x1311618;
	Node0x130e618 -> Node0x1311778;
	Node0x130e458 -> Node0x1311888;
	Node0x130df48 -> Node0x1311998;
}
