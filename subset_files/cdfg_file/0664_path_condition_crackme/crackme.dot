digraph "DFG for'crackme' function" {
	Node0x2179110[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x2179180[shape=record, label="  %6 = xor i32 %3, %0"];
	Node0x21791f0[shape=record, label="  %7 = add i32 %6, %5"];
	Node0x2179260[shape=record, label="  %8 = or i32 %2, %1"];
	Node0x21792d0[shape=record, label="  %9 = and i32 %2, %1"];
	Node0x2179340[shape=record, label="  %10 = xor i32 %8, -1"];
	Node0x21793e0[shape=record, label="  %11 = xor i32 %2, 1073741823"];
	Node0x2179480[shape=record, label="  %12 = xor i32 %1, 2147483647"];
	Node0x21794f0[shape=record, label="  %13 = and i32 %12, %2"];
	Node0x2179590[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x2179600[shape=record, label="  %15 = and i32 %11, %1"];
	Node0x21796a0[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0x2179710[shape=record, label="  %17 = xor i32 %0, -1"];
	Node0x2179780[shape=record, label="  %18 = or i32 %17, %3"];
	Node0x21797f0[shape=record, label="  %19 = and i32 %17, %3"];
	Node0x2179860[shape=record, label="  %20 = shl i32 %17, 1"];
	Node0x21798d0[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x2179940[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x21799e0[shape=record, label="  %23 = mul i32 %22, 7"];
	Node0x2179a50[shape=record, label="  %24 = xor i32 %18, -1"];
	Node0x2179af0[shape=record, label="  %25 = mul i32 %24, 5"];
	Node0x2179b60[shape=record, label="  %26 = xor i32 %2, %1"];
	Node0x2179bd0[shape=record, label="  %27 = sub i32 %26, %18"];
	Node0x2179c70[shape=record, label="  %28 = mul i32 %27, 3"];
	Node0x2179ce0[shape=record, label="  %29 = shl i32 %3, 3"];
	Node0x2179d80[shape=record, label="  %30 = add i32 %0, 6"];
	Node0x2179df0[shape=record, label="  %31 = add i32 %30, %1"];
	Node0x2179e60[shape=record, label="  %32 = add i32 %31, %20"];
	Node0x217a0e0[shape=record, label="  %33 = sub i32 %32, %9"];
	Node0x217a150[shape=record, label="  %34 = add i32 %33, %10"];
	Node0x217a1c0[shape=record, label="  %35 = sub i32 %34, %14"];
	Node0x217a230[shape=record, label="  %36 = sub i32 %35, %19"];
	Node0x217a2a0[shape=record, label="  %37 = add i32 %36, %6"];
	Node0x217a310[shape=record, label="  %38 = sub i32 %37, %16"];
	Node0x217a380[shape=record, label="  %39 = add i32 %38, %23"];
	Node0x217a3f0[shape=record, label="  %40 = add i32 %39, %25"];
	Node0x217a460[shape=record, label="  %41 = add i32 %40, %29"];
	Node0x217a4d0[shape=record, label="  %42 = add i32 %41, %28"];
	Node0x217a540[shape=record, label="  %43 = icmp eq i32 %7, %42"];
	Node0x2119268[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x217a9e0[shape=record, label="  %45 = tail call i32 @puts(i8* nonnull dereferenceable(1) %44)"];
	Node0x217aa30[shape=record, label="  ret void"];
	Node0x2179110 -> Node0x2179180;
	Node0x2179180 -> Node0x21791f0;
	Node0x21791f0 -> Node0x2179260;
	Node0x2179260 -> Node0x21792d0;
	Node0x21792d0 -> Node0x2179340;
	Node0x2179340 -> Node0x21793e0;
	Node0x21793e0 -> Node0x2179480;
	Node0x2179480 -> Node0x21794f0;
	Node0x21794f0 -> Node0x2179590;
	Node0x2179590 -> Node0x2179600;
	Node0x2179600 -> Node0x21796a0;
	Node0x21796a0 -> Node0x2179710;
	Node0x2179710 -> Node0x2179780;
	Node0x2179780 -> Node0x21797f0;
	Node0x21797f0 -> Node0x2179860;
	Node0x2179860 -> Node0x21798d0;
	Node0x21798d0 -> Node0x2179940;
	Node0x2179940 -> Node0x21799e0;
	Node0x21799e0 -> Node0x2179a50;
	Node0x2179a50 -> Node0x2179af0;
	Node0x2179af0 -> Node0x2179b60;
	Node0x2179b60 -> Node0x2179bd0;
	Node0x2179bd0 -> Node0x2179c70;
	Node0x2179c70 -> Node0x2179ce0;
	Node0x2179ce0 -> Node0x2179d80;
	Node0x2179d80 -> Node0x2179df0;
	Node0x2179df0 -> Node0x2179e60;
	Node0x2179e60 -> Node0x217a0e0;
	Node0x217a0e0 -> Node0x217a150;
	Node0x217a150 -> Node0x217a1c0;
	Node0x217a1c0 -> Node0x217a230;
	Node0x217a230 -> Node0x217a2a0;
	Node0x217a2a0 -> Node0x217a310;
	Node0x217a310 -> Node0x217a380;
	Node0x217a380 -> Node0x217a3f0;
	Node0x217a3f0 -> Node0x217a460;
	Node0x217a460 -> Node0x217a4d0;
	Node0x217a4d0 -> Node0x217a540;
	Node0x217a540 -> Node0x2119268;
	Node0x2119268 -> Node0x217a9e0;
	Node0x217a9e0 -> Node0x217aa30;
edge [color=red]
	Node0x2179180 -> Node0x21791f0;
	Node0x2179110 -> Node0x21791f0;
	Node0x2179260 -> Node0x2179340;
	Node0x2179480 -> Node0x21794f0;
	Node0x21794f0 -> Node0x2179590;
	Node0x21793e0 -> Node0x2179600;
	Node0x2179600 -> Node0x21796a0;
	Node0x2179710 -> Node0x2179780;
	Node0x2179710 -> Node0x21797f0;
	Node0x2179710 -> Node0x2179860;
	Node0x21798d0 -> Node0x2179940;
	Node0x2179940 -> Node0x21799e0;
	Node0x2179780 -> Node0x2179a50;
	Node0x2179a50 -> Node0x2179af0;
	Node0x2179b60 -> Node0x2179bd0;
	Node0x2179780 -> Node0x2179bd0;
	Node0x2179bd0 -> Node0x2179c70;
	Node0x2179d80 -> Node0x2179df0;
	Node0x2179df0 -> Node0x2179e60;
	Node0x2179860 -> Node0x2179e60;
	Node0x2179e60 -> Node0x217a0e0;
	Node0x21792d0 -> Node0x217a0e0;
	Node0x217a0e0 -> Node0x217a150;
	Node0x2179340 -> Node0x217a150;
	Node0x217a150 -> Node0x217a1c0;
	Node0x2179590 -> Node0x217a1c0;
	Node0x217a1c0 -> Node0x217a230;
	Node0x21797f0 -> Node0x217a230;
	Node0x217a230 -> Node0x217a2a0;
	Node0x2179180 -> Node0x217a2a0;
	Node0x217a2a0 -> Node0x217a310;
	Node0x21796a0 -> Node0x217a310;
	Node0x217a310 -> Node0x217a380;
	Node0x21799e0 -> Node0x217a380;
	Node0x217a380 -> Node0x217a3f0;
	Node0x2179af0 -> Node0x217a3f0;
	Node0x217a3f0 -> Node0x217a460;
	Node0x2179ce0 -> Node0x217a460;
	Node0x217a460 -> Node0x217a4d0;
	Node0x2179c70 -> Node0x217a4d0;
	Node0x21791f0 -> Node0x217a540;
	Node0x217a4d0 -> Node0x217a540;
	Node0x217a540 -> Node0x2119268;
	Node0x2119268 -> Node0x217a9e0;
}
