digraph "DFG for'main' function" {
	Node0x217abf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x217ac78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x217ad08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x217ad68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x217ae18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x217b248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x217b328[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x217b428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x217b4e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x217b598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x217b658[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x217b708[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2175b30[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x217b908[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x217c878[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x217cee8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x217cf48[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x217cfc0[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x217d030[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0x217d0a0[shape=record, label="  %16 = add i32 %15, %14"];
	Node0x217d110[shape=record, label="  %17 = or i32 %12, %11"];
	Node0x217d180[shape=record, label="  %18 = and i32 %12, %11"];
	Node0x217d1f0[shape=record, label="  %19 = xor i32 %17, -1"];
	Node0x217d260[shape=record, label="  %20 = xor i32 %12, 1073741823"];
	Node0x217d2d0[shape=record, label="  %21 = xor i32 %11, 2147483647"];
	Node0x217d340[shape=record, label="  %22 = and i32 %21, %12"];
	Node0x217d3b0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x217d420[shape=record, label="  %24 = and i32 %20, %11"];
	Node0x217d490[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0x217d500[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0x217d570[shape=record, label="  %27 = or i32 %13, %26"];
	Node0x217d5e0[shape=record, label="  %28 = and i32 %13, %26"];
	Node0x217d650[shape=record, label="  %29 = shl i32 %26, 1"];
	Node0x217d6c0[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x217d730[shape=record, label="  %31 = xor i32 %30, -1"];
	Node0x217d7a0[shape=record, label="  %32 = mul i32 %31, 7"];
	Node0x217d810[shape=record, label="  %33 = xor i32 %27, -1"];
	Node0x217d880[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0x217d8f0[shape=record, label="  %35 = xor i32 %12, %11"];
	Node0x217d960[shape=record, label="  %36 = sub i32 %35, %27"];
	Node0x217d9d0[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x217da40[shape=record, label="  %38 = shl i32 %13, 3"];
	Node0x217dab0[shape=record, label="  %39 = add i32 %10, 6"];
	Node0x217db20[shape=record, label="  %40 = add i32 %39, %11"];
	Node0x217db90[shape=record, label="  %41 = add i32 %40, %29"];
	Node0x217dc00[shape=record, label="  %42 = sub i32 %41, %18"];
	Node0x217dc70[shape=record, label="  %43 = add i32 %42, %19"];
	Node0x217dce0[shape=record, label="  %44 = sub i32 %43, %23"];
	Node0x217dd50[shape=record, label="  %45 = sub i32 %44, %28"];
	Node0x217ddc0[shape=record, label="  %46 = add i32 %45, %15"];
	Node0x217de30[shape=record, label="  %47 = add i32 %46, %38"];
	Node0x217dea0[shape=record, label="  %48 = sub i32 %47, %25"];
	Node0x217df10[shape=record, label="  %49 = add i32 %48, %32"];
	Node0x217df80[shape=record, label="  %50 = add i32 %49, %34"];
	Node0x217dff0[shape=record, label="  %51 = add i32 %50, %37"];
	Node0x217e060[shape=record, label="  %52 = icmp eq i32 %16, %51"];
	Node0x211a8b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x217e0f0[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x217e398[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x217e4f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x217e608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x217e718[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x217e7d8[shape=record, label="  ret i32 0"];
	Node0x217abf8 -> Node0x217ac78;
	Node0x217ac78 -> Node0x217ad08;
	Node0x217ad08 -> Node0x217ad68;
	Node0x217ad68 -> Node0x217ae18;
	Node0x217ae18 -> Node0x217b248;
	Node0x217b248 -> Node0x217b328;
	Node0x217b328 -> Node0x217b428;
	Node0x217b428 -> Node0x217b4e8;
	Node0x217b4e8 -> Node0x217b598;
	Node0x217b598 -> Node0x217b658;
	Node0x217b658 -> Node0x217b708;
	Node0x217b708 -> Node0x2175b30;
	Node0x2175b30 -> Node0x217b908;
	Node0x217b908 -> Node0x217c878;
	Node0x217c878 -> Node0x217cee8;
	Node0x217cee8 -> Node0x217cf48;
	Node0x217cf48 -> Node0x217cfc0;
	Node0x217cfc0 -> Node0x217d030;
	Node0x217d030 -> Node0x217d0a0;
	Node0x217d0a0 -> Node0x217d110;
	Node0x217d110 -> Node0x217d180;
	Node0x217d180 -> Node0x217d1f0;
	Node0x217d1f0 -> Node0x217d260;
	Node0x217d260 -> Node0x217d2d0;
	Node0x217d2d0 -> Node0x217d340;
	Node0x217d340 -> Node0x217d3b0;
	Node0x217d3b0 -> Node0x217d420;
	Node0x217d420 -> Node0x217d490;
	Node0x217d490 -> Node0x217d500;
	Node0x217d500 -> Node0x217d570;
	Node0x217d570 -> Node0x217d5e0;
	Node0x217d5e0 -> Node0x217d650;
	Node0x217d650 -> Node0x217d6c0;
	Node0x217d6c0 -> Node0x217d730;
	Node0x217d730 -> Node0x217d7a0;
	Node0x217d7a0 -> Node0x217d810;
	Node0x217d810 -> Node0x217d880;
	Node0x217d880 -> Node0x217d8f0;
	Node0x217d8f0 -> Node0x217d960;
	Node0x217d960 -> Node0x217d9d0;
	Node0x217d9d0 -> Node0x217da40;
	Node0x217da40 -> Node0x217dab0;
	Node0x217dab0 -> Node0x217db20;
	Node0x217db20 -> Node0x217db90;
	Node0x217db90 -> Node0x217dc00;
	Node0x217dc00 -> Node0x217dc70;
	Node0x217dc70 -> Node0x217dce0;
	Node0x217dce0 -> Node0x217dd50;
	Node0x217dd50 -> Node0x217ddc0;
	Node0x217ddc0 -> Node0x217de30;
	Node0x217de30 -> Node0x217dea0;
	Node0x217dea0 -> Node0x217df10;
	Node0x217df10 -> Node0x217df80;
	Node0x217df80 -> Node0x217dff0;
	Node0x217dff0 -> Node0x217e060;
	Node0x217e060 -> Node0x211a8b8;
	Node0x211a8b8 -> Node0x217e0f0;
	Node0x217e0f0 -> Node0x217e398;
	Node0x217e398 -> Node0x217e4f8;
	Node0x217e4f8 -> Node0x217e608;
	Node0x217e608 -> Node0x217e718;
	Node0x217e718 -> Node0x217e7d8;
edge [color=red]
	Node0x217abf8 -> Node0x217ae18;
	Node0x217ae18 -> Node0x217b248;
	Node0x217ac78 -> Node0x217b328;
	Node0x217b328 -> Node0x217b428;
	Node0x217ad08 -> Node0x217b4e8;
	Node0x217b4e8 -> Node0x217b598;
	Node0x217ad68 -> Node0x217b658;
	Node0x217b658 -> Node0x217b708;
	Node0x217abf8 -> Node0x2175b30;
	Node0x217ac78 -> Node0x2175b30;
	Node0x217ad08 -> Node0x2175b30;
	Node0x217ad68 -> Node0x2175b30;
	Node0x217abf8 -> Node0x217b908;
	Node0x217ac78 -> Node0x217c878;
	Node0x217ad08 -> Node0x217cee8;
	Node0x217ad68 -> Node0x217cf48;
	Node0x217c878 -> Node0x217cfc0;
	Node0x217cf48 -> Node0x217d030;
	Node0x217b908 -> Node0x217d030;
	Node0x217d030 -> Node0x217d0a0;
	Node0x217cfc0 -> Node0x217d0a0;
	Node0x217cee8 -> Node0x217d110;
	Node0x217c878 -> Node0x217d110;
	Node0x217cee8 -> Node0x217d180;
	Node0x217c878 -> Node0x217d180;
	Node0x217d110 -> Node0x217d1f0;
	Node0x217cee8 -> Node0x217d260;
	Node0x217c878 -> Node0x217d2d0;
	Node0x217d2d0 -> Node0x217d340;
	Node0x217cee8 -> Node0x217d340;
	Node0x217d340 -> Node0x217d3b0;
	Node0x217d260 -> Node0x217d420;
	Node0x217c878 -> Node0x217d420;
	Node0x217d420 -> Node0x217d490;
	Node0x217b908 -> Node0x217d500;
	Node0x217cf48 -> Node0x217d570;
	Node0x217d500 -> Node0x217d570;
	Node0x217cf48 -> Node0x217d5e0;
	Node0x217d500 -> Node0x217d5e0;
	Node0x217d500 -> Node0x217d650;
	Node0x217cf48 -> Node0x217d6c0;
	Node0x217b908 -> Node0x217d6c0;
	Node0x217d6c0 -> Node0x217d730;
	Node0x217d730 -> Node0x217d7a0;
	Node0x217d570 -> Node0x217d810;
	Node0x217d810 -> Node0x217d880;
	Node0x217cee8 -> Node0x217d8f0;
	Node0x217c878 -> Node0x217d8f0;
	Node0x217d8f0 -> Node0x217d960;
	Node0x217d570 -> Node0x217d960;
	Node0x217d960 -> Node0x217d9d0;
	Node0x217cf48 -> Node0x217da40;
	Node0x217b908 -> Node0x217dab0;
	Node0x217dab0 -> Node0x217db20;
	Node0x217c878 -> Node0x217db20;
	Node0x217db20 -> Node0x217db90;
	Node0x217d650 -> Node0x217db90;
	Node0x217db90 -> Node0x217dc00;
	Node0x217d180 -> Node0x217dc00;
	Node0x217dc00 -> Node0x217dc70;
	Node0x217d1f0 -> Node0x217dc70;
	Node0x217dc70 -> Node0x217dce0;
	Node0x217d3b0 -> Node0x217dce0;
	Node0x217dce0 -> Node0x217dd50;
	Node0x217d5e0 -> Node0x217dd50;
	Node0x217dd50 -> Node0x217ddc0;
	Node0x217d030 -> Node0x217ddc0;
	Node0x217ddc0 -> Node0x217de30;
	Node0x217da40 -> Node0x217de30;
	Node0x217de30 -> Node0x217dea0;
	Node0x217d490 -> Node0x217dea0;
	Node0x217dea0 -> Node0x217df10;
	Node0x217d7a0 -> Node0x217df10;
	Node0x217df10 -> Node0x217df80;
	Node0x217d880 -> Node0x217df80;
	Node0x217df80 -> Node0x217dff0;
	Node0x217d9d0 -> Node0x217dff0;
	Node0x217d0a0 -> Node0x217e060;
	Node0x217dff0 -> Node0x217e060;
	Node0x217e060 -> Node0x211a8b8;
	Node0x211a8b8 -> Node0x217e0f0;
	Node0x217b658 -> Node0x217e398;
	Node0x217b4e8 -> Node0x217e4f8;
	Node0x217b328 -> Node0x217e608;
	Node0x217ae18 -> Node0x217e718;
}
