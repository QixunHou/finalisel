digraph "DFG for'main' function" {
	Node0x1a13c58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a13cd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a13d68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1a13dc8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1a14248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a14328[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1a14428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a1ae48[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1a1aed8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a1b138[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1a1b1f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a1c168[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a1c7d8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1a1c8d0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1a1cad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a1cc38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a1cd48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a1ce08[shape=record, label="  ret i32 0"];
	Node0x1a13c58 -> Node0x1a13cd8;
	Node0x1a13cd8 -> Node0x1a13d68;
	Node0x1a13d68 -> Node0x1a13dc8;
	Node0x1a13dc8 -> Node0x1a14248;
	Node0x1a14248 -> Node0x1a14328;
	Node0x1a14328 -> Node0x1a14428;
	Node0x1a14428 -> Node0x1a1ae48;
	Node0x1a1ae48 -> Node0x1a1aed8;
	Node0x1a1aed8 -> Node0x1a1b138;
	Node0x1a1b138 -> Node0x1a1b1f8;
	Node0x1a1b1f8 -> Node0x1a1c168;
	Node0x1a1c168 -> Node0x1a1c7d8;
	Node0x1a1c7d8 -> Node0x1a1c8d0;
	Node0x1a1c8d0 -> Node0x1a1cad8;
	Node0x1a1cad8 -> Node0x1a1cc38;
	Node0x1a1cc38 -> Node0x1a1cd48;
	Node0x1a1cd48 -> Node0x1a1ce08;
edge [color=red]
	Node0x1a13c58 -> Node0x1a13dc8;
	Node0x1a13dc8 -> Node0x1a14248;
	Node0x1a13cd8 -> Node0x1a14328;
	Node0x1a14328 -> Node0x1a14428;
	Node0x1a13d68 -> Node0x1a1ae48;
	Node0x1a1ae48 -> Node0x1a1aed8;
	Node0x1a13c58 -> Node0x1a1b138;
	Node0x1a13cd8 -> Node0x1a1b138;
	Node0x1a13d68 -> Node0x1a1b138;
	Node0x1a13c58 -> Node0x1a1b1f8;
	Node0x1a13cd8 -> Node0x1a1c168;
	Node0x1a13d68 -> Node0x1a1c7d8;
	Node0x1a1b1f8 -> Node0x1a1c8d0;
	Node0x1a1c168 -> Node0x1a1c8d0;
	Node0x1a1c7d8 -> Node0x1a1c8d0;
	Node0x1a1ae48 -> Node0x1a1cad8;
	Node0x1a14328 -> Node0x1a1cc38;
	Node0x1a13dc8 -> Node0x1a1cd48;
}
