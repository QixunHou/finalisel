; ModuleID = '../.././c_source_file/0176_path_condition_crackme.c'
source_filename = "../.././c_source_file/0176_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = xor i32 %1, -1
  %9 = and i32 %8, %2
  %10 = and i32 %9, %7
  %11 = xor i32 %2, %1
  %12 = or i32 %11, %7
  %13 = xor i32 %12, -1
  %14 = or i32 %10, %13
  %15 = or i32 %8, %0
  %16 = and i32 %11, %15
  %17 = shl i32 %16, 2
  %18 = add i32 %14, %17
  %19 = add i32 %18, %5
  %20 = and i32 %5, %4
  %21 = xor i32 %20, %3
  %22 = sub i32 %21, %19
  %23 = xor i32 %2, -1
  %24 = and i32 %23, %0
  %25 = xor i32 %24, -1
  %26 = xor i32 %1, %0
  %27 = xor i32 %26, -1
  %28 = and i32 %25, %27
  %29 = xor i32 %2, %0
  %30 = xor i32 %29, -1
  %31 = or i32 %30, %27
  %32 = and i32 %23, %27
  %33 = or i32 %1, %0
  %34 = and i32 %11, %33
  %35 = and i32 %1, %0
  %36 = or i32 %35, %23
  %37 = and i32 %29, %26
  %38 = or i32 %24, %1
  %39 = or i32 %29, %35
  %40 = or i32 %30, %1
  %41 = xor i32 %35, -1
  %42 = and i32 %23, %41
  %43 = and i32 %2, %0
  %44 = xor i32 %43, %1
  %45 = and i32 %23, %1
  %46 = xor i32 %45, %0
  %47 = xor i32 %15, -1
  %48 = or i32 %30, %47
  %49 = and i32 %2, %1
  %50 = and i32 %49, %7
  %51 = and i32 %11, %0
  %52 = or i32 %50, %51
  %53 = or i32 %23, %1
  %54 = or i32 %53, %7
  %55 = xor i32 %15, %2
  %56 = or i32 %23, %0
  %57 = and i32 %56, %26
  %58 = and i32 %30, %41
  %59 = and i32 %9, %0
  %60 = or i32 %11, %0
  %61 = xor i32 %60, -1
  %62 = or i32 %59, %61
  %63 = xor i32 %56, -1
  %64 = or i32 %63, %27
  %65 = or i32 %35, %30
  %66 = xor i32 %25, %1
  %67 = or i32 %11, %47
  %68 = xor i32 %33, %2
  %69 = or i32 %2, %1
  %70 = xor i32 %69, -1
  %71 = or i32 %70, %0
  %72 = shl i32 %56, 1
  %73 = and i32 %29, %15
  %74 = xor i32 %43, %15
  %75 = or i32 %2, %0
  %76 = xor i32 %75, -1
  %77 = or i32 %76, %27
  %78 = or i32 %43, %45
  %79 = xor i32 %11, -1
  %80 = or i32 %79, %7
  %81 = or i32 %26, %63
  %82 = and i32 %8, %0
  %83 = xor i32 %82, -1
  %84 = and i32 %29, %83
  %85 = xor i32 %53, -1
  %86 = or i32 %24, %85
  %87 = xor i32 %47, %2
  %88 = or i32 %49, %7
  %89 = and i32 %49, %0
  %90 = and i32 %69, %7
  %91 = or i32 %89, %90
  %92 = xor i32 %33, -1
  %93 = or i32 %29, %92
  %94 = xor i32 %70, %0
  %95 = or i32 %29, %26
  %96 = and i32 %11, %7
  %97 = xor i32 %89, -1
  %98 = xor i32 %96, %97
  %99 = xor i32 %69, %0
  %100 = or i32 %89, %99
  %101 = xor i32 %45, -1
  %102 = xor i32 %43, %101
  %103 = and i32 %101, %0
  %104 = or i32 %35, %85
  %105 = and i32 %75, %1
  %106 = and i32 %26, %25
  %107 = or i32 %26, %2
  %108 = and i32 %79, %41
  %109 = or i32 %35, %70
  %110 = xor i32 %24, %1
  %111 = or i32 %24, %26
  %112 = shl i32 %111, 1
  %113 = and i32 %11, %41
  %114 = or i32 %101, %0
  %115 = xor i32 %43, %69
  %116 = shl i32 %115, 1
  %117 = and i32 %26, %2
  %118 = xor i32 %82, %2
  %119 = xor i32 %53, %0
  %120 = shl i32 %119, 1
  %121 = or i32 %45, %7
  %122 = xor i32 %59, %60
  %123 = or i32 %29, %8
  %124 = and i32 %79, %7
  %125 = or i32 %76, %8
  %126 = or i32 %23, %27
  %127 = xor i32 %49, -1
  %128 = or i32 %76, %1
  %129 = and i32 %69, %0
  %130 = or i32 %50, %129
  %131 = and i32 %30, %83
  %132 = or i32 %45, %0
  %133 = and i32 %30, %27
  %134 = or i32 %85, %0
  %135 = and i32 %79, %0
  %136 = and i32 %29, %8
  %137 = shl i32 %136, 1
  %138 = and i32 %29, %27
  %139 = shl i32 %33, 1
  %140 = or i32 %8, %2
  %141 = and i32 %140, %0
  %142 = or i32 %10, %141
  %143 = xor i32 %90, %97
  %144 = xor i32 %11, %0
  %145 = xor i32 %89, %144
  %146 = or i32 %63, %1
  %147 = shl i32 %146, 1
  %148 = or i32 %45, %82
  %149 = shl i32 %26, 2
  %150 = xor i32 %75, %35
  %151 = and i32 %25, %1
  %152 = shl i32 %151, 1
  %153 = and i32 %41, %2
  %154 = or i32 %49, %82
  %155 = xor i32 %76, %1
  %156 = shl i32 %51, 1
  %157 = or i32 %79, %0
  %158 = or i32 %82, %30
  %159 = xor i32 %141, -1
  %160 = xor i32 %10, %159
  %161 = or i32 %24, %27
  %162 = or i32 %127, %0
  %163 = xor i32 %41, %2
  %164 = shl i32 %163, 1
  %165 = or i32 %79, %92
  %166 = and i32 %75, %27
  %167 = or i32 %92, %2
  %168 = and i32 %15, %79
  %169 = and i32 %33, %30
  %170 = or i32 %11, %35
  %171 = and i32 %75, %26
  %172 = or i32 %26, %30
  %173 = and i32 %83, %2
  %174 = or i32 %29, %47
  %175 = or i32 %29, %82
  %176 = or i32 %82, %23
  %177 = or i32 %43, %70
  %178 = shl i32 %96, 2
  %179 = xor i32 %10, %12
  %180 = xor i32 %144, -1
  %181 = or i32 %89, %180
  %182 = xor i32 %83, %2
  %183 = or i32 %43, %47
  %184 = or i32 %70, %7
  %185 = xor i32 %59, %180
  %186 = or i32 %85, %7
  %187 = shl i32 %186, 1
  %188 = and i32 %127, %7
  %189 = shl i32 %188, 1
  %190 = xor i32 %24, %53
  %191 = and i32 %56, %8
  %192 = add i32 %35, 1
  %193 = and i32 %101, %7
  %194 = and i32 %29, %33
  %195 = and i32 %75, %8
  %196 = xor i32 %43, -1
  %197 = xor i32 %101, %0
  %198 = or i32 %26, %23
  %199 = or i32 %43, %27
  %200 = and i32 %33, %23
  %201 = shl i32 %200, 1
  %202 = shl i32 %76, 1
  %203 = or i32 %69, %7
  %204 = shl i32 %203, 2
  %205 = or i32 %26, %76
  %206 = or i32 %23, %92
  %207 = xor i32 %56, %35
  %208 = xor i32 %140, %0
  %209 = or i32 %59, %208
  %210 = or i32 %35, %76
  %211 = or i32 %29, %1
  %212 = and i32 %196, %27
  %213 = shl i32 %212, 1
  %214 = and i32 %33, %79
  %215 = xor i32 %24, %127
  %216 = xor i32 %75, %1
  %217 = or i32 %59, %144
  %218 = and i32 %11, %83
  %219 = shl i32 %218, 2
  %220 = or i32 %53, %0
  %221 = shl i32 %220, 1
  %222 = or i32 %35, %63
  %223 = or i32 %82, %79
  %224 = or i32 %49, %0
  %225 = and i32 %53, %7
  %226 = and i32 %26, %30
  %227 = shl i32 %226, 1
  %228 = and i32 %25, %8
  %229 = and i32 %27, %2
  %230 = or i32 %101, %7
  %231 = or i32 %89, %96
  %232 = xor i32 %56, %1
  %233 = shl i32 %232, 2
  %234 = and i32 %56, %27
  %235 = or i32 %24, %49
  %236 = xor i32 %127, %0
  %237 = shl i32 %236, 1
  %238 = or i32 %82, %2
  %239 = or i32 %127, %7
  %240 = xor i32 %99, %97
  %241 = and i32 %15, %30
  %242 = shl i32 %35, 1
  %243 = and i32 %15, %2
  %244 = xor i32 %129, 2147483647
  %245 = xor i32 %244, %50
  %246 = or i32 %11, %82
  %247 = shl i32 %246, 1
  %248 = add i32 %82, 1
  %249 = and i32 %23, %83
  %250 = shl i32 %249, 1
  %251 = and i32 %26, %23
  %252 = xor i32 %82, %101
  %253 = or i32 %24, %8
  %254 = shl i32 %253, 1
  %255 = or i32 %30, %8
  %256 = or i32 %23, %47
  %257 = and i32 %33, %2
  %258 = or i32 %63, %8
  %259 = xor i32 %82, %127
  %260 = xor i32 %63, %1
  %261 = and i32 %30, %1
  %262 = xor i32 %53, %35
  %263 = and i32 %15, %23
  %264 = and i32 %53, %0
  %265 = or i32 %27, %2
  %266 = and i32 %127, %0
  %267 = xor i32 %208, -1
  %268 = xor i32 %59, %267
  %269 = or i32 %11, %92
  %270 = or i32 %47, %2
  %271 = xor i32 %49, %0
  %272 = shl i32 %271, 1
  %273 = or i32 %43, %92
  %274 = and i32 %30, %8
  %275 = and i32 %79, %83
  %276 = and i32 %29, %1
  %277 = or i32 %30, %92
  %278 = xor i32 %92, %2
  %279 = xor i32 %140, 2147483647
  %280 = or i32 %279, %0
  %281 = xor i32 %280, %59
  %282 = or i32 %79, %47
  %283 = shl i32 %282, 1
  %284 = and i32 %196, %8
  %285 = and i32 %29, %41
  %286 = xor i32 %35, %2
  %287 = or i32 %43, %26
  %288 = add i32 %11, 1
  %289 = xor i32 %196, %1
  %290 = xor i32 %79, %0
  %291 = and i32 %56, %1
  %292 = add i32 %69, 1
  %293 = xor i32 %51, -1
  %294 = xor i32 %50, %293
  %295 = and i32 %26, %196
  %296 = and i32 %196, %1
  %297 = or i32 %29, %27
  %298 = or i32 %35, %79
  %299 = xor i32 %69, %35
  %300 = and i32 %45, %7
  %301 = mul i32 %300, 22
  %302 = and i32 %70, %0
  %303 = and i32 %45, %0
  %304 = mul i32 %303, 9
  %305 = and i32 %85, %7
  %306 = mul i32 %305, -26
  %307 = shl i32 %50, 1
  %308 = and i32 %85, %0
  %309 = shl i32 %308, 2
  %310 = shl i32 %89, 3
  %311 = xor i32 %5, -1
  %312 = and i32 %311, %3
  %313 = xor i32 %312, %4
  %314 = or i32 %4, %3
  %315 = xor i32 %314, -1
  %316 = xor i32 %5, %3
  %317 = or i32 %316, %315
  %318 = xor i32 %3, -1
  %319 = and i32 %311, %4
  %320 = xor i32 %319, -1
  %321 = and i32 %320, %318
  %322 = or i32 %318, %4
  %323 = xor i32 %316, -1
  %324 = and i32 %322, %323
  %325 = xor i32 %316, %4
  %326 = add i32 %319, 1
  %327 = xor i32 %4, %3
  %328 = and i32 %327, %5
  %329 = shl i32 %328, 1
  %330 = add i32 %316, 1
  %331 = and i32 %4, %3
  %332 = or i32 %331, %5
  %333 = and i32 %327, %311
  %334 = xor i32 %5, %4
  %335 = xor i32 %334, -1
  %336 = and i32 %314, %335
  %337 = and i32 %318, %5
  %338 = and i32 %337, %4
  %339 = or i32 %318, %5
  %340 = xor i32 %339, %4
  %341 = or i32 %338, %340
  %342 = and i32 %5, %3
  %343 = xor i32 %342, %4
  %344 = or i32 %311, %4
  %345 = xor i32 %344, -1
  %346 = or i32 %345, %318
  %347 = and i32 %342, %4
  %348 = xor i32 %4, -1
  %349 = or i32 %5, %3
  %350 = and i32 %349, %348
  %351 = xor i32 %347, -1
  %352 = xor i32 %350, %351
  %353 = or i32 %316, %4
  %354 = or i32 %311, %3
  %355 = and i32 %354, %4
  %356 = or i32 %20, %315
  %357 = xor i32 %20, -1
  %358 = xor i32 %327, -1
  %359 = and i32 %357, %358
  %360 = shl i32 %359, 2
  %361 = xor i32 %349, %4
  %362 = xor i32 %361, %351
  %363 = and i32 %318, %4
  %364 = or i32 %363, %323
  %365 = or i32 %20, %327
  %366 = xor i32 %331, -1
  %367 = and i32 %366, %5
  %368 = xor i32 %20, %322
  %369 = shl i32 %368, 1
  %370 = add i32 %3, 1
  %371 = xor i32 %312, -1
  %372 = xor i32 %20, %371
  %373 = shl i32 %372, 1
  %374 = xor i32 %349, -1
  %375 = or i32 %374, %4
  %376 = xor i32 %20, %349
  %377 = xor i32 %347, %325
  %378 = shl i32 %377, 1
  %379 = xor i32 %322, -1
  %380 = or i32 %20, %379
  %381 = xor i32 %342, -1
  %382 = and i32 %381, %4
  %383 = and i32 %316, %322
  %384 = or i32 %379, %5
  %385 = xor i32 %345, %3
  %386 = or i32 %345, %3
  %387 = or i32 %349, %4
  %388 = shl i32 %387, 2
  %389 = or i32 %331, %374
  %390 = or i32 %316, %363
  %391 = or i32 %347, %361
  %392 = add i32 %322, 1
  %393 = or i32 %342, %363
  %394 = or i32 %354, %4
  %395 = xor i32 %319, %381
  %396 = and i32 %311, %366
  %397 = add i32 %331, 1
  %398 = xor i32 %357, %3
  %399 = or i32 %334, %3
  %400 = shl i32 %399, 1
  %401 = or i32 %331, %311
  %402 = and i32 %320, %3
  %403 = or i32 %334, %363
  %404 = and i32 %344, %318
  %405 = and i32 %323, %348
  %406 = or i32 %323, %4
  %407 = or i32 %5, %4
  %408 = xor i32 %407, %331
  %409 = xor i32 %363, -1
  %410 = and i32 %334, %409
  %411 = or i32 %335, %379
  %412 = xor i32 %354, -1
  %413 = xor i32 %412, %4
  %414 = xor i32 %407, -1
  %415 = or i32 %371, %348
  %416 = or i32 %319, %318
  %417 = xor i32 %344, %331
  %418 = xor i32 %319, %3
  %419 = or i32 %311, %379
  %420 = or i32 %335, %318
  %421 = or i32 %371, %4
  %422 = xor i32 %20, %314
  %423 = or i32 %335, %358
  %424 = xor i32 %340, -1
  %425 = xor i32 %338, %424
  %426 = or i32 %335, %315
  %427 = or i32 %381, %348
  %428 = and i32 %337, %348
  %429 = and i32 %339, %4
  %430 = xor i32 %429, -1
  %431 = xor i32 %428, %430
  %432 = or i32 %20, %358
  %433 = and i32 %334, %3
  %434 = and i32 %314, %311
  %435 = and i32 %407, %318
  %436 = xor i32 %363, %381
  %437 = xor i32 %366, %5
  %438 = xor i32 %325, 2147483647
  %439 = or i32 %438, %347
  %440 = shl i32 %439, 1
  %441 = or i32 %414, %3
  %442 = shl i32 %441, 1
  %443 = add i32 %354, 1
  %444 = and i32 %344, %3
  %445 = and i32 %335, %366
  %446 = or i32 %316, %379
  %447 = xor i32 %363, %371
  %448 = add i32 %349, 1
  %449 = or i32 %349, %348
  %450 = shl i32 %449, 1
  %451 = and i32 %371, %348
  %452 = xor i32 %381, %4
  %453 = or i32 %20, %3
  %454 = and i32 %322, %311
  %455 = and i32 %316, %409
  %456 = or i32 %334, %379
  %457 = and i32 %407, %327
  %458 = add i32 %20, 1
  %459 = xor i32 %322, %5
  %460 = add i32 %327, 1
  %461 = and i32 %316, %4
  %462 = xor i32 %344, %3
  %463 = and i32 %316, %348
  %464 = or i32 %347, %463
  %465 = or i32 %315, %5
  %466 = and i32 %327, %320
  %467 = or i32 %319, %327
  %468 = xor i32 %339, -1
  %469 = or i32 %468, %4
  %470 = xor i32 %338, %469
  %471 = and i32 %334, %327
  %472 = shl i32 %471, 1
  %473 = or i32 %331, %345
  %474 = or i32 %20, %374
  %475 = and i32 %371, %4
  %476 = xor i32 %338, %353
  %477 = and i32 %381, %348
  %478 = and i32 %344, %327
  %479 = or i32 %363, %5
  %480 = shl i32 %479, 1
  %481 = or i32 %334, %331
  %482 = and i32 %342, %348
  %483 = or i32 %482, %461
  %484 = or i32 %327, %5
  %485 = or i32 %311, %315
  %486 = and i32 %334, %318
  %487 = or i32 %374, %348
  %488 = shl i32 %487, 1
  %489 = and i32 %335, %358
  %490 = xor i32 %349, %331
  %491 = or i32 %312, %363
  %492 = shl i32 %491, 1
  %493 = or i32 %342, %4
  %494 = or i32 %312, %4
  %495 = xor i32 %371, %4
  %496 = and i32 %311, %358
  %497 = and i32 %357, %3
  %498 = or i32 %319, %342
  %499 = or i32 %428, %429
  %500 = and i32 %314, %323
  %501 = or i32 %414, %358
  %502 = or i32 %327, %414
  %503 = and i32 %344, %358
  %504 = and i32 %327, %335
  %505 = and i32 %316, %314
  %506 = xor i32 %354, %331
  %507 = and i32 %349, %4
  %508 = or i32 %482, %507
  %509 = or i32 %354, %348
  %510 = and i32 %407, %358
  %511 = xor i32 %379, %5
  %512 = or i32 %342, %348
  %513 = xor i32 %319, %354
  %514 = xor i32 %320, %3
  %515 = and i32 %327, %357
  %516 = xor i32 %482, -1
  %517 = xor i32 %507, %516
  %518 = or i32 %327, %335
  %519 = xor i32 %461, %516
  %520 = xor i32 %414, %3
  %521 = or i32 %319, %3
  %522 = and i32 %334, %366
  %523 = or i32 %331, %323
  %524 = or i32 %311, %358
  %525 = and i32 %354, %348
  %526 = xor i32 %409, %5
  %527 = or i32 %358, %5
  %528 = and i32 %311, %409
  %529 = shl i32 %528, 1
  %530 = and i32 %334, %358
  %531 = or i32 %327, %345
  %532 = xor i32 %363, %5
  %533 = and i32 %374, %348
  %534 = mul i32 %533, -7
  %535 = and i32 %312, %348
  %536 = and i32 %374, %4
  %537 = and i32 %312, %4
  %538 = and i32 %412, %348
  %539 = shl i32 %538, 4
  %540 = and i32 %412, %4
  %541 = mul i32 %540, -18
  %542 = add i32 %69, %85
  %543 = add i32 %542, %29
  %544 = add i32 %543, %25
  %545 = add i32 %544, %32
  %546 = add i32 %545, %298
  %547 = add i32 %546, %284
  %548 = add i32 %547, %275
  %549 = add i32 %548, %274
  %550 = add i32 %549, %228
  %551 = add i32 %550, %222
  %552 = add i32 %551, %216
  %553 = add i32 %552, %211
  %554 = add i32 %553, %205
  %555 = add i32 %554, %193
  %556 = add i32 %555, %169
  %557 = add i32 %556, %166
  %558 = add i32 %557, %132
  %559 = add i32 %558, %114
  %560 = add i32 %559, %102
  %561 = add i32 %560, %37
  %562 = add i32 %561, %331
  %563 = add i32 %562, %142
  %564 = add i32 %563, %485
  %565 = add i32 %564, %349
  %566 = add i32 %565, %381
  %567 = add i32 %566, %396
  %568 = add i32 %567, %281
  %569 = add i32 %568, %245
  %570 = add i32 %569, %347
  %571 = add i32 %570, %514
  %572 = add i32 %571, %513
  %573 = add i32 %572, %481
  %574 = add i32 %573, %453
  %575 = add i32 %574, %423
  %576 = add i32 %575, %417
  %577 = add i32 %576, %413
  %578 = add i32 %577, %410
  %579 = add i32 %578, %408
  %580 = add i32 %579, %383
  %581 = add i32 %580, %380
  %582 = add i32 %581, %375
  %583 = add i32 %582, %464
  %584 = add i32 %583, %508
  %585 = shl i32 %584, 1
  %586 = sub i32 %278, %302
  %587 = add i32 %586, %60
  %588 = sub i32 %587, %290
  %589 = sub i32 %588, %105
  %590 = add i32 %589, %64
  %591 = sub i32 %590, %143
  %592 = sub i32 %591, %122
  %593 = add i32 %592, %489
  %594 = sub i32 %593, %477
  %595 = add i32 %594, %420
  %596 = sub i32 %595, %364
  %597 = sub i32 %596, %470
  %598 = mul i32 %597, 5
  %599 = add i32 %478, %47
  %600 = shl i32 %599, 2
  %601 = or i32 %69, %0
  %602 = add i32 %126, %601
  %603 = add i32 %602, %86
  %604 = sub i32 %603, %535
  %605 = add i32 %604, %482
  %606 = add i32 %605, %495
  %607 = sub i32 %606, %490
  %608 = add i32 %607, %445
  %609 = add i32 %608, %404
  %610 = sub i32 %609, %353
  %611 = mul i32 %610, 3
  %612 = add i32 %2, 4
  %613 = add i32 %612, %92
  %614 = sub i32 %613, %15
  %615 = add i32 %614, %82
  %616 = add i32 %615, %192
  %617 = add i32 %616, %2
  %618 = add i32 %617, %248
  %619 = add i32 %618, %27
  %620 = sub i32 %619, %36
  %621 = sub i32 %620, %42
  %622 = add i32 %621, %55
  %623 = sub i32 %622, %68
  %624 = sub i32 %623, %87
  %625 = sub i32 %624, %107
  %626 = sub i32 %625, %43
  %627 = add i32 %626, %117
  %628 = sub i32 %627, %118
  %629 = add i32 %628, %11
  %630 = add i32 %629, %63
  %631 = sub i32 %630, %139
  %632 = add i32 %631, %75
  %633 = sub i32 %632, %149
  %634 = add i32 %633, %153
  %635 = sub i32 %634, %167
  %636 = add i32 %635, %173
  %637 = add i32 %636, %176
  %638 = add i32 %637, %182
  %639 = sub i32 %638, %43
  %640 = sub i32 %639, %198
  %641 = sub i32 %640, %206
  %642 = add i32 %641, %30
  %643 = sub i32 %642, %229
  %644 = add i32 %643, %24
  %645 = sub i32 %644, %238
  %646 = sub i32 %645, %242
  %647 = sub i32 %646, %243
  %648 = sub i32 %647, %251
  %649 = add i32 %648, %256
  %650 = sub i32 %649, %257
  %651 = add i32 %650, %263
  %652 = add i32 %651, %265
  %653 = add i32 %652, %270
  %654 = sub i32 %653, %286
  %655 = add i32 %654, %288
  %656 = add i32 %655, %292
  %657 = add i32 %656, %53
  %658 = add i32 %657, %370
  %659 = add i32 %658, %3
  %660 = sub i32 %659, %28
  %661 = add i32 %660, %31
  %662 = sub i32 %661, %34
  %663 = add i32 %662, %38
  %664 = add i32 %663, %39
  %665 = sub i32 %664, %40
  %666 = sub i32 %665, %44
  %667 = sub i32 %666, %46
  %668 = add i32 %667, %48
  %669 = add i32 %668, %54
  %670 = sub i32 %669, %57
  %671 = add i32 %670, %58
  %672 = sub i32 %671, %65
  %673 = add i32 %672, %66
  %674 = add i32 %673, %67
  %675 = add i32 %674, %71
  %676 = sub i32 %675, %72
  %677 = sub i32 %676, %73
  %678 = add i32 %677, %74
  %679 = add i32 %678, %77
  %680 = sub i32 %679, %78
  %681 = sub i32 %680, %80
  %682 = add i32 %681, %81
  %683 = add i32 %682, %84
  %684 = add i32 %683, %88
  %685 = add i32 %684, %93
  %686 = add i32 %685, %94
  %687 = sub i32 %686, %95
  %688 = add i32 %687, %103
  %689 = sub i32 %688, %104
  %690 = sub i32 %689, %106
  %691 = add i32 %690, %108
  %692 = sub i32 %691, %109
  %693 = sub i32 %692, %110
  %694 = sub i32 %693, %113
  %695 = sub i32 %694, %121
  %696 = add i32 %695, %123
  %697 = add i32 %696, %124
  %698 = add i32 %697, %125
  %699 = sub i32 %698, %128
  %700 = sub i32 %699, %131
  %701 = sub i32 %700, %133
  %702 = sub i32 %701, %134
  %703 = add i32 %702, %135
  %704 = sub i32 %703, %138
  %705 = add i32 %704, %148
  %706 = add i32 %705, %150
  %707 = add i32 %706, %154
  %708 = sub i32 %707, %155
  %709 = add i32 %708, %90
  %710 = sub i32 %709, %157
  %711 = add i32 %710, %158
  %712 = sub i32 %711, %161
  %713 = add i32 %712, %162
  %714 = sub i32 %713, %164
  %715 = add i32 %714, %165
  %716 = add i32 %715, %168
  %717 = add i32 %716, %170
  %718 = add i32 %717, %171
  %719 = add i32 %718, %172
  %720 = add i32 %719, %174
  %721 = sub i32 %720, %175
  %722 = add i32 %721, %177
  %723 = sub i32 %722, %12
  %724 = add i32 %723, %183
  %725 = add i32 %724, %184
  %726 = add i32 %725, %190
  %727 = add i32 %726, %191
  %728 = add i32 %727, %194
  %729 = add i32 %728, %195
  %730 = sub i32 %729, %197
  %731 = sub i32 %730, %199
  %732 = sub i32 %731, %201
  %733 = sub i32 %732, %202
  %734 = sub i32 %733, %99
  %735 = sub i32 %734, %207
  %736 = add i32 %735, %210
  %737 = sub i32 %736, %214
  %738 = add i32 %737, %215
  %739 = sub i32 %738, %223
  %740 = add i32 %739, %224
  %741 = add i32 %740, %225
  %742 = sub i32 %741, %144
  %743 = add i32 %742, %129
  %744 = sub i32 %743, %230
  %745 = sub i32 %744, %234
  %746 = sub i32 %745, %235
  %747 = add i32 %746, %239
  %748 = sub i32 %747, %241
  %749 = sub i32 %748, %250
  %750 = sub i32 %749, %252
  %751 = add i32 %750, %255
  %752 = add i32 %751, %258
  %753 = add i32 %752, %259
  %754 = add i32 %753, %260
  %755 = sub i32 %754, %261
  %756 = sub i32 %755, %262
  %757 = sub i32 %756, %264
  %758 = add i32 %757, %266
  %759 = add i32 %758, %269
  %760 = add i32 %759, %273
  %761 = sub i32 %760, %276
  %762 = add i32 %761, %277
  %763 = sub i32 %762, %285
  %764 = sub i32 %763, %287
  %765 = add i32 %764, %289
  %766 = add i32 %765, %291
  %767 = sub i32 %766, %295
  %768 = add i32 %767, %296
  %769 = add i32 %768, %297
  %770 = add i32 %769, %299
  %771 = add i32 %770, %4
  %772 = add i32 %771, %52
  %773 = sub i32 %772, %62
  %774 = sub i32 %773, %91
  %775 = add i32 %774, %98
  %776 = add i32 %775, %100
  %777 = sub i32 %776, %112
  %778 = sub i32 %777, %116
  %779 = sub i32 %778, %120
  %780 = add i32 %779, %130
  %781 = sub i32 %780, %137
  %782 = add i32 %781, %145
  %783 = sub i32 %782, %147
  %784 = sub i32 %783, %152
  %785 = sub i32 %784, %156
  %786 = add i32 %785, %160
  %787 = sub i32 %786, %178
  %788 = sub i32 %787, %179
  %789 = sub i32 %788, %181
  %790 = sub i32 %789, %185
  %791 = sub i32 %790, %187
  %792 = sub i32 %791, %189
  %793 = sub i32 %792, %204
  %794 = sub i32 %793, %209
  %795 = sub i32 %794, %213
  %796 = sub i32 %795, %217
  %797 = sub i32 %796, %219
  %798 = sub i32 %797, %221
  %799 = sub i32 %798, %227
  %800 = add i32 %799, %231
  %801 = sub i32 %800, %233
  %802 = sub i32 %801, %237
  %803 = sub i32 %802, %240
  %804 = sub i32 %803, %247
  %805 = sub i32 %804, %254
  %806 = add i32 %805, %268
  %807 = sub i32 %806, %272
  %808 = sub i32 %807, %283
  %809 = sub i32 %808, %294
  %810 = add i32 %809, %301
  %811 = add i32 %810, %304
  %812 = add i32 %811, %306
  %813 = sub i32 %812, %307
  %814 = sub i32 %813, %309
  %815 = sub i32 %814, %310
  %816 = add i32 %815, %315
  %817 = add i32 %816, %311
  %818 = add i32 %817, %392
  %819 = add i32 %818, %397
  %820 = sub i32 %819, %322
  %821 = sub i32 %820, %314
  %822 = add i32 %821, %460
  %823 = add i32 %822, %363
  %824 = add i32 %823, %327
  %825 = add i32 %824, %326
  %826 = add i32 %825, %330
  %827 = add i32 %826, %332
  %828 = add i32 %827, %333
  %829 = add i32 %828, %342
  %830 = sub i32 %829, %367
  %831 = sub i32 %830, %384
  %832 = sub i32 %831, %401
  %833 = add i32 %832, %419
  %834 = add i32 %833, %335
  %835 = add i32 %834, %434
  %836 = sub i32 %835, %437
  %837 = add i32 %836, %443
  %838 = add i32 %837, %448
  %839 = sub i32 %838, %454
  %840 = add i32 %839, %458
  %841 = add i32 %840, %459
  %842 = sub i32 %841, %465
  %843 = add i32 %842, %20
  %844 = sub i32 %843, %484
  %845 = add i32 %844, %496
  %846 = sub i32 %845, %511
  %847 = sub i32 %846, %334
  %848 = add i32 %847, %312
  %849 = add i32 %848, %354
  %850 = sub i32 %849, %524
  %851 = add i32 %850, %526
  %852 = add i32 %851, %527
  %853 = add i32 %852, %532
  %854 = add i32 %853, %313
  %855 = sub i32 %854, %317
  %856 = sub i32 %855, %321
  %857 = add i32 %856, %324
  %858 = sub i32 %857, %325
  %859 = sub i32 %858, %329
  %860 = sub i32 %859, %336
  %861 = sub i32 %860, %343
  %862 = sub i32 %861, %346
  %863 = add i32 %862, %355
  %864 = sub i32 %863, %356
  %865 = add i32 %864, %365
  %866 = sub i32 %865, %376
  %867 = add i32 %866, %382
  %868 = sub i32 %867, %385
  %869 = sub i32 %868, %386
  %870 = sub i32 %869, %389
  %871 = sub i32 %870, %390
  %872 = add i32 %871, %393
  %873 = add i32 %872, %394
  %874 = add i32 %873, %395
  %875 = add i32 %874, %398
  %876 = sub i32 %875, %402
  %877 = sub i32 %876, %403
  %878 = add i32 %877, %405
  %879 = sub i32 %878, %406
  %880 = add i32 %879, %411
  %881 = sub i32 %880, %415
  %882 = sub i32 %881, %416
  %883 = add i32 %882, %418
  %884 = sub i32 %883, %421
  %885 = add i32 %884, %422
  %886 = sub i32 %885, %426
  %887 = add i32 %886, %427
  %888 = add i32 %887, %432
  %889 = add i32 %888, %433
  %890 = add i32 %889, %435
  %891 = sub i32 %890, %436
  %892 = sub i32 %891, %444
  %893 = add i32 %892, %446
  %894 = sub i32 %893, %447
  %895 = add i32 %894, %451
  %896 = sub i32 %895, %452
  %897 = sub i32 %896, %455
  %898 = add i32 %897, %456
  %899 = add i32 %898, %457
  %900 = add i32 %899, %461
  %901 = add i32 %900, %462
  %902 = add i32 %901, %466
  %903 = add i32 %902, %467
  %904 = sub i32 %903, %473
  %905 = sub i32 %904, %474
  %906 = add i32 %905, %475
  %907 = sub i32 %906, %480
  %908 = add i32 %907, %486
  %909 = sub i32 %908, %493
  %910 = add i32 %909, %494
  %911 = add i32 %910, %497
  %912 = sub i32 %911, %498
  %913 = sub i32 %912, %500
  %914 = add i32 %913, %501
  %915 = add i32 %914, %502
  %916 = add i32 %915, %503
  %917 = add i32 %916, %504
  %918 = add i32 %917, %505
  %919 = add i32 %918, %506
  %920 = add i32 %919, %509
  %921 = sub i32 %920, %510
  %922 = add i32 %921, %512
  %923 = add i32 %922, %515
  %924 = add i32 %923, %518
  %925 = add i32 %924, %520
  %926 = sub i32 %925, %521
  %927 = add i32 %926, %522
  %928 = sub i32 %927, %523
  %929 = add i32 %928, %525
  %930 = sub i32 %929, %529
  %931 = add i32 %930, %530
  %932 = add i32 %931, %531
  %933 = sub i32 %932, %350
  %934 = sub i32 %933, %536
  %935 = add i32 %934, %537
  %936 = add i32 %935, %341
  %937 = sub i32 %936, %352
  %938 = sub i32 %937, %360
  %939 = sub i32 %938, %362
  %940 = sub i32 %939, %369
  %941 = sub i32 %940, %373
  %942 = sub i32 %941, %388
  %943 = sub i32 %942, %391
  %944 = sub i32 %943, %400
  %945 = sub i32 %944, %425
  %946 = sub i32 %945, %431
  %947 = sub i32 %946, %442
  %948 = sub i32 %947, %450
  %949 = sub i32 %948, %472
  %950 = sub i32 %949, %476
  %951 = add i32 %950, %483
  %952 = sub i32 %951, %488
  %953 = sub i32 %952, %492
  %954 = add i32 %953, %499
  %955 = add i32 %954, %517
  %956 = add i32 %955, %519
  %957 = add i32 %956, %534
  %958 = add i32 %957, %539
  %959 = add i32 %958, %541
  %960 = sub i32 %959, %378
  %961 = add i32 %960, %600
  %962 = sub i32 %961, %440
  %963 = add i32 %962, %611
  %964 = add i32 %963, %598
  %965 = add i32 %964, %585
  %966 = icmp eq i32 %22, %965
  %967 = select i1 %966, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %968 = tail call i32 @puts(i8* nonnull dereferenceable(1) %967)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
