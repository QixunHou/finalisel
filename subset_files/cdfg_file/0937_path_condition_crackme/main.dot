digraph "DFG for'main' function" {
	Node0x22f3d58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x22f3dd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x22f3e68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x22f3ec8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x22f3f78[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x22f43a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22f4488[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x22f4588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22f4648[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x22f46f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x22f47b8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x22f4868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x22eeba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x22f4a68[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x22f59d8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x22f6048[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x22f60a8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x22f6120[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x22f6190[shape=record, label="  %15 = sub i32 1, %14"];
	Node0x22f6200[shape=record, label="  %16 = xor i32 %13, %10"];
	Node0x22f6270[shape=record, label="  %17 = add i32 %15, %16"];
	Node0x22f62e0[shape=record, label="  %18 = and i32 %12, %11"];
	Node0x22f6350[shape=record, label="  %19 = xor i32 %14, -1"];
	Node0x22f63c0[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x22f6430[shape=record, label="  %21 = or i32 %11, %20"];
	Node0x22f64a0[shape=record, label="  %22 = and i32 %11, %20"];
	Node0x22f6510[shape=record, label="  %23 = shl i32 %18, 2"];
	Node0x22f6580[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0x22f65f0[shape=record, label="  %25 = xor i32 %13, -1"];
	Node0x22f6660[shape=record, label="  %26 = or i32 %10, %25"];
	Node0x22f66d0[shape=record, label="  %27 = or i32 %13, %10"];
	Node0x22f6740[shape=record, label="  %28 = or i32 %13, %24"];
	Node0x22f67b0[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x22f6820[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x22f6890[shape=record, label="  %31 = shl i32 %10, 2"];
	Node0x22f6900[shape=record, label="  %32 = shl i32 %13, 2"];
	Node0x22f6970[shape=record, label="  %33 = xor i32 %32, -4"];
	Node0x22f69e0[shape=record, label="  %34 = xor i32 %28, -1"];
	Node0x22f6a50[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x22f6ac0[shape=record, label="  %36 = mul i32 %13, 6"];
	Node0x22f6b30[shape=record, label="  %37 = add i32 %21, %12"];
	Node0x22f6ba0[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x22f6c10[shape=record, label="  %39 = add i32 %10, 7"];
	Node0x22f6c80[shape=record, label="  %40 = add i32 %39, %11"];
	Node0x22f6cf0[shape=record, label="  %41 = sub i32 %40, %31"];
	Node0x22f6d60[shape=record, label="  %42 = add i32 %41, %18"];
	Node0x22f6dd0[shape=record, label="  %43 = add i32 %42, %19"];
	Node0x22f6e40[shape=record, label="  %44 = sub i32 %43, %22"];
	Node0x22f6eb0[shape=record, label="  %45 = add i32 %44, %13"];
	Node0x22f6f20[shape=record, label="  %46 = sub i32 %45, %23"];
	Node0x22f6f90[shape=record, label="  %47 = add i32 %46, %26"];
	Node0x22f7000[shape=record, label="  %48 = sub i32 %47, %27"];
	Node0x22f7070[shape=record, label="  %49 = add i32 %48, %30"];
	Node0x22f70e0[shape=record, label="  %50 = add i32 %49, %36"];
	Node0x22f7150[shape=record, label="  %51 = sub i32 %50, %29"];
	Node0x22f71c0[shape=record, label="  %52 = add i32 %51, %33"];
	Node0x22f7230[shape=record, label="  %53 = add i32 %52, %35"];
	Node0x22f72a0[shape=record, label="  %54 = add i32 %53, %38"];
	Node0x22f7310[shape=record, label="  %55 = icmp eq i32 %17, %54"];
	Node0x22938b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22f73a0[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x22f7648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x22f77a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x22f78b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22f79c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22f7a88[shape=record, label="  ret i32 0"];
	Node0x22f3d58 -> Node0x22f3dd8;
	Node0x22f3dd8 -> Node0x22f3e68;
	Node0x22f3e68 -> Node0x22f3ec8;
	Node0x22f3ec8 -> Node0x22f3f78;
	Node0x22f3f78 -> Node0x22f43a8;
	Node0x22f43a8 -> Node0x22f4488;
	Node0x22f4488 -> Node0x22f4588;
	Node0x22f4588 -> Node0x22f4648;
	Node0x22f4648 -> Node0x22f46f8;
	Node0x22f46f8 -> Node0x22f47b8;
	Node0x22f47b8 -> Node0x22f4868;
	Node0x22f4868 -> Node0x22eeba0;
	Node0x22eeba0 -> Node0x22f4a68;
	Node0x22f4a68 -> Node0x22f59d8;
	Node0x22f59d8 -> Node0x22f6048;
	Node0x22f6048 -> Node0x22f60a8;
	Node0x22f60a8 -> Node0x22f6120;
	Node0x22f6120 -> Node0x22f6190;
	Node0x22f6190 -> Node0x22f6200;
	Node0x22f6200 -> Node0x22f6270;
	Node0x22f6270 -> Node0x22f62e0;
	Node0x22f62e0 -> Node0x22f6350;
	Node0x22f6350 -> Node0x22f63c0;
	Node0x22f63c0 -> Node0x22f6430;
	Node0x22f6430 -> Node0x22f64a0;
	Node0x22f64a0 -> Node0x22f6510;
	Node0x22f6510 -> Node0x22f6580;
	Node0x22f6580 -> Node0x22f65f0;
	Node0x22f65f0 -> Node0x22f6660;
	Node0x22f6660 -> Node0x22f66d0;
	Node0x22f66d0 -> Node0x22f6740;
	Node0x22f6740 -> Node0x22f67b0;
	Node0x22f67b0 -> Node0x22f6820;
	Node0x22f6820 -> Node0x22f6890;
	Node0x22f6890 -> Node0x22f6900;
	Node0x22f6900 -> Node0x22f6970;
	Node0x22f6970 -> Node0x22f69e0;
	Node0x22f69e0 -> Node0x22f6a50;
	Node0x22f6a50 -> Node0x22f6ac0;
	Node0x22f6ac0 -> Node0x22f6b30;
	Node0x22f6b30 -> Node0x22f6ba0;
	Node0x22f6ba0 -> Node0x22f6c10;
	Node0x22f6c10 -> Node0x22f6c80;
	Node0x22f6c80 -> Node0x22f6cf0;
	Node0x22f6cf0 -> Node0x22f6d60;
	Node0x22f6d60 -> Node0x22f6dd0;
	Node0x22f6dd0 -> Node0x22f6e40;
	Node0x22f6e40 -> Node0x22f6eb0;
	Node0x22f6eb0 -> Node0x22f6f20;
	Node0x22f6f20 -> Node0x22f6f90;
	Node0x22f6f90 -> Node0x22f7000;
	Node0x22f7000 -> Node0x22f7070;
	Node0x22f7070 -> Node0x22f70e0;
	Node0x22f70e0 -> Node0x22f7150;
	Node0x22f7150 -> Node0x22f71c0;
	Node0x22f71c0 -> Node0x22f7230;
	Node0x22f7230 -> Node0x22f72a0;
	Node0x22f72a0 -> Node0x22f7310;
	Node0x22f7310 -> Node0x22938b8;
	Node0x22938b8 -> Node0x22f73a0;
	Node0x22f73a0 -> Node0x22f7648;
	Node0x22f7648 -> Node0x22f77a8;
	Node0x22f77a8 -> Node0x22f78b8;
	Node0x22f78b8 -> Node0x22f79c8;
	Node0x22f79c8 -> Node0x22f7a88;
edge [color=red]
	Node0x22f3d58 -> Node0x22f3f78;
	Node0x22f3f78 -> Node0x22f43a8;
	Node0x22f3dd8 -> Node0x22f4488;
	Node0x22f4488 -> Node0x22f4588;
	Node0x22f3e68 -> Node0x22f4648;
	Node0x22f4648 -> Node0x22f46f8;
	Node0x22f3ec8 -> Node0x22f47b8;
	Node0x22f47b8 -> Node0x22f4868;
	Node0x22f3d58 -> Node0x22eeba0;
	Node0x22f3dd8 -> Node0x22eeba0;
	Node0x22f3e68 -> Node0x22eeba0;
	Node0x22f3ec8 -> Node0x22eeba0;
	Node0x22f3d58 -> Node0x22f4a68;
	Node0x22f3dd8 -> Node0x22f59d8;
	Node0x22f3e68 -> Node0x22f6048;
	Node0x22f3ec8 -> Node0x22f60a8;
	Node0x22f6048 -> Node0x22f6120;
	Node0x22f59d8 -> Node0x22f6120;
	Node0x22f6120 -> Node0x22f6190;
	Node0x22f60a8 -> Node0x22f6200;
	Node0x22f4a68 -> Node0x22f6200;
	Node0x22f6190 -> Node0x22f6270;
	Node0x22f6200 -> Node0x22f6270;
	Node0x22f6048 -> Node0x22f62e0;
	Node0x22f59d8 -> Node0x22f62e0;
	Node0x22f6120 -> Node0x22f6350;
	Node0x22f6048 -> Node0x22f63c0;
	Node0x22f59d8 -> Node0x22f6430;
	Node0x22f63c0 -> Node0x22f6430;
	Node0x22f59d8 -> Node0x22f64a0;
	Node0x22f63c0 -> Node0x22f64a0;
	Node0x22f62e0 -> Node0x22f6510;
	Node0x22f4a68 -> Node0x22f6580;
	Node0x22f60a8 -> Node0x22f65f0;
	Node0x22f4a68 -> Node0x22f6660;
	Node0x22f65f0 -> Node0x22f6660;
	Node0x22f60a8 -> Node0x22f66d0;
	Node0x22f4a68 -> Node0x22f66d0;
	Node0x22f60a8 -> Node0x22f6740;
	Node0x22f6580 -> Node0x22f6740;
	Node0x22f6740 -> Node0x22f67b0;
	Node0x22f60a8 -> Node0x22f6820;
	Node0x22f4a68 -> Node0x22f6820;
	Node0x22f4a68 -> Node0x22f6890;
	Node0x22f60a8 -> Node0x22f6900;
	Node0x22f6900 -> Node0x22f6970;
	Node0x22f6740 -> Node0x22f69e0;
	Node0x22f69e0 -> Node0x22f6a50;
	Node0x22f60a8 -> Node0x22f6ac0;
	Node0x22f6430 -> Node0x22f6b30;
	Node0x22f6048 -> Node0x22f6b30;
	Node0x22f6b30 -> Node0x22f6ba0;
	Node0x22f4a68 -> Node0x22f6c10;
	Node0x22f6c10 -> Node0x22f6c80;
	Node0x22f59d8 -> Node0x22f6c80;
	Node0x22f6c80 -> Node0x22f6cf0;
	Node0x22f6890 -> Node0x22f6cf0;
	Node0x22f6cf0 -> Node0x22f6d60;
	Node0x22f62e0 -> Node0x22f6d60;
	Node0x22f6d60 -> Node0x22f6dd0;
	Node0x22f6350 -> Node0x22f6dd0;
	Node0x22f6dd0 -> Node0x22f6e40;
	Node0x22f64a0 -> Node0x22f6e40;
	Node0x22f6e40 -> Node0x22f6eb0;
	Node0x22f60a8 -> Node0x22f6eb0;
	Node0x22f6eb0 -> Node0x22f6f20;
	Node0x22f6510 -> Node0x22f6f20;
	Node0x22f6f20 -> Node0x22f6f90;
	Node0x22f6660 -> Node0x22f6f90;
	Node0x22f6f90 -> Node0x22f7000;
	Node0x22f66d0 -> Node0x22f7000;
	Node0x22f7000 -> Node0x22f7070;
	Node0x22f6820 -> Node0x22f7070;
	Node0x22f7070 -> Node0x22f70e0;
	Node0x22f6ac0 -> Node0x22f70e0;
	Node0x22f70e0 -> Node0x22f7150;
	Node0x22f67b0 -> Node0x22f7150;
	Node0x22f7150 -> Node0x22f71c0;
	Node0x22f6970 -> Node0x22f71c0;
	Node0x22f71c0 -> Node0x22f7230;
	Node0x22f6a50 -> Node0x22f7230;
	Node0x22f7230 -> Node0x22f72a0;
	Node0x22f6ba0 -> Node0x22f72a0;
	Node0x22f6270 -> Node0x22f7310;
	Node0x22f72a0 -> Node0x22f7310;
	Node0x22f7310 -> Node0x22938b8;
	Node0x22938b8 -> Node0x22f73a0;
	Node0x22f47b8 -> Node0x22f7648;
	Node0x22f4648 -> Node0x22f77a8;
	Node0x22f4488 -> Node0x22f78b8;
	Node0x22f3f78 -> Node0x22f79c8;
}
