digraph "DFG for'crackme' function" {
	Node0x985bd0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x986250[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x9862c0[shape=record, label="  %7 = sub i32 %5, %0"];
	Node0x986330[shape=record, label="  %8 = xor i32 %3, %0"];
	Node0x9863a0[shape=record, label="  %9 = add i32 %7, %8"];
	Node0x986410[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x986480[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x986520[shape=record, label="  %12 = shl i32 %1, 1"];
	Node0x9865c0[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x986630[shape=record, label="  %14 = or i32 %10, %1"];
	Node0x9866a0[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x986710[shape=record, label="  %16 = xor i32 %11, -1"];
	Node0x9867b0[shape=record, label="  %17 = mul i32 %16, -5"];
	Node0x986820[shape=record, label="  %18 = or i32 %6, %3"];
	Node0x9868c0[shape=record, label="  %19 = shl i32 %3, 2"];
	Node0x986930[shape=record, label="  %20 = or i32 %3, %0"];
	Node0x9869a0[shape=record, label="  %21 = and i32 %6, %3"];
	Node0x986a10[shape=record, label="  %22 = and i32 %3, %0"];
	Node0x986a80[shape=record, label="  %23 = shl i32 %20, 2"];
	Node0x986b20[shape=record, label="  %24 = xor i32 %23, -4"];
	Node0x986b90[shape=record, label="  %25 = shl i32 %18, 2"];
	Node0x986c00[shape=record, label="  %26 = xor i32 %25, -4"];
	Node0x986ca0[shape=record, label="  %27 = shl i32 %21, 3"];
	Node0x986d40[shape=record, label="  %28 = mul i32 %22, 6"];
	Node0x986de0[shape=record, label="  %29 = add i32 %0, 4"];
	Node0x986e50[shape=record, label="  %30 = sub i32 %29, %1"];
	Node0x986ec0[shape=record, label="  %31 = add i32 %30, %10"];
	Node0x986f30[shape=record, label="  %32 = sub i32 %31, %2"];
	Node0x9871b0[shape=record, label="  %33 = sub i32 %32, %11"];
	Node0x987220[shape=record, label="  %34 = add i32 %33, %13"];
	Node0x987290[shape=record, label="  %35 = add i32 %34, %14"];
	Node0x987300[shape=record, label="  %36 = add i32 %35, %15"];
	Node0x987370[shape=record, label="  %37 = add i32 %36, %17"];
	Node0x9873e0[shape=record, label="  %38 = add i32 %37, %18"];
	Node0x987450[shape=record, label="  %39 = add i32 %38, %8"];
	Node0x9874c0[shape=record, label="  %40 = sub i32 %39, %19"];
	Node0x987530[shape=record, label="  %41 = sub i32 %40, %20"];
	Node0x9875a0[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x987610[shape=record, label="  %43 = add i32 %42, %22"];
	Node0x987680[shape=record, label="  %44 = add i32 %43, %27"];
	Node0x9876f0[shape=record, label="  %45 = add i32 %44, %28"];
	Node0x987760[shape=record, label="  %46 = add i32 %45, %24"];
	Node0x9877d0[shape=record, label="  %47 = add i32 %46, %26"];
	Node0x987840[shape=record, label="  %48 = icmp eq i32 %9, %47"];
	Node0x926268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x987ce0[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x987d30[shape=record, label="  ret void"];
	Node0x985bd0 -> Node0x986250;
	Node0x986250 -> Node0x9862c0;
	Node0x9862c0 -> Node0x986330;
	Node0x986330 -> Node0x9863a0;
	Node0x9863a0 -> Node0x986410;
	Node0x986410 -> Node0x986480;
	Node0x986480 -> Node0x986520;
	Node0x986520 -> Node0x9865c0;
	Node0x9865c0 -> Node0x986630;
	Node0x986630 -> Node0x9866a0;
	Node0x9866a0 -> Node0x986710;
	Node0x986710 -> Node0x9867b0;
	Node0x9867b0 -> Node0x986820;
	Node0x986820 -> Node0x9868c0;
	Node0x9868c0 -> Node0x986930;
	Node0x986930 -> Node0x9869a0;
	Node0x9869a0 -> Node0x986a10;
	Node0x986a10 -> Node0x986a80;
	Node0x986a80 -> Node0x986b20;
	Node0x986b20 -> Node0x986b90;
	Node0x986b90 -> Node0x986c00;
	Node0x986c00 -> Node0x986ca0;
	Node0x986ca0 -> Node0x986d40;
	Node0x986d40 -> Node0x986de0;
	Node0x986de0 -> Node0x986e50;
	Node0x986e50 -> Node0x986ec0;
	Node0x986ec0 -> Node0x986f30;
	Node0x986f30 -> Node0x9871b0;
	Node0x9871b0 -> Node0x987220;
	Node0x987220 -> Node0x987290;
	Node0x987290 -> Node0x987300;
	Node0x987300 -> Node0x987370;
	Node0x987370 -> Node0x9873e0;
	Node0x9873e0 -> Node0x987450;
	Node0x987450 -> Node0x9874c0;
	Node0x9874c0 -> Node0x987530;
	Node0x987530 -> Node0x9875a0;
	Node0x9875a0 -> Node0x987610;
	Node0x987610 -> Node0x987680;
	Node0x987680 -> Node0x9876f0;
	Node0x9876f0 -> Node0x987760;
	Node0x987760 -> Node0x9877d0;
	Node0x9877d0 -> Node0x987840;
	Node0x987840 -> Node0x926268;
	Node0x926268 -> Node0x987ce0;
	Node0x987ce0 -> Node0x987d30;
edge [color=red]
	Node0x985bd0 -> Node0x9862c0;
	Node0x9862c0 -> Node0x9863a0;
	Node0x986330 -> Node0x9863a0;
	Node0x986520 -> Node0x9865c0;
	Node0x986410 -> Node0x986630;
	Node0x986480 -> Node0x986710;
	Node0x986710 -> Node0x9867b0;
	Node0x986250 -> Node0x986820;
	Node0x986250 -> Node0x9869a0;
	Node0x986930 -> Node0x986a80;
	Node0x986a80 -> Node0x986b20;
	Node0x986820 -> Node0x986b90;
	Node0x986b90 -> Node0x986c00;
	Node0x9869a0 -> Node0x986ca0;
	Node0x986a10 -> Node0x986d40;
	Node0x986de0 -> Node0x986e50;
	Node0x986e50 -> Node0x986ec0;
	Node0x986410 -> Node0x986ec0;
	Node0x986ec0 -> Node0x986f30;
	Node0x986f30 -> Node0x9871b0;
	Node0x986480 -> Node0x9871b0;
	Node0x9871b0 -> Node0x987220;
	Node0x9865c0 -> Node0x987220;
	Node0x987220 -> Node0x987290;
	Node0x986630 -> Node0x987290;
	Node0x987290 -> Node0x987300;
	Node0x9866a0 -> Node0x987300;
	Node0x987300 -> Node0x987370;
	Node0x9867b0 -> Node0x987370;
	Node0x987370 -> Node0x9873e0;
	Node0x986820 -> Node0x9873e0;
	Node0x9873e0 -> Node0x987450;
	Node0x986330 -> Node0x987450;
	Node0x987450 -> Node0x9874c0;
	Node0x9868c0 -> Node0x9874c0;
	Node0x9874c0 -> Node0x987530;
	Node0x986930 -> Node0x987530;
	Node0x987530 -> Node0x9875a0;
	Node0x9869a0 -> Node0x9875a0;
	Node0x9875a0 -> Node0x987610;
	Node0x986a10 -> Node0x987610;
	Node0x987610 -> Node0x987680;
	Node0x986ca0 -> Node0x987680;
	Node0x987680 -> Node0x9876f0;
	Node0x986d40 -> Node0x9876f0;
	Node0x9876f0 -> Node0x987760;
	Node0x986b20 -> Node0x987760;
	Node0x987760 -> Node0x9877d0;
	Node0x986c00 -> Node0x9877d0;
	Node0x9863a0 -> Node0x987840;
	Node0x9877d0 -> Node0x987840;
	Node0x987840 -> Node0x926268;
	Node0x926268 -> Node0x987ce0;
}
