digraph "DFG for'main' function" {
	Node0x228a678[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x228a6f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x228a788[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x228a7e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x228ac68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x228ad48[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x228ae48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x228af08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x228afb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x228b218[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x228b2d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x228b438[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x228b498[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x228dbb0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x228ddb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x228df18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x228e028[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x228e0e8[shape=record, label="  ret i32 0"];
	Node0x228a678 -> Node0x228a6f8;
	Node0x228a6f8 -> Node0x228a788;
	Node0x228a788 -> Node0x228a7e8;
	Node0x228a7e8 -> Node0x228ac68;
	Node0x228ac68 -> Node0x228ad48;
	Node0x228ad48 -> Node0x228ae48;
	Node0x228ae48 -> Node0x228af08;
	Node0x228af08 -> Node0x228afb8;
	Node0x228afb8 -> Node0x228b218;
	Node0x228b218 -> Node0x228b2d8;
	Node0x228b2d8 -> Node0x228b438;
	Node0x228b438 -> Node0x228b498;
	Node0x228b498 -> Node0x228dbb0;
	Node0x228dbb0 -> Node0x228ddb8;
	Node0x228ddb8 -> Node0x228df18;
	Node0x228df18 -> Node0x228e028;
	Node0x228e028 -> Node0x228e0e8;
edge [color=red]
	Node0x228a678 -> Node0x228a7e8;
	Node0x228a7e8 -> Node0x228ac68;
	Node0x228a6f8 -> Node0x228ad48;
	Node0x228ad48 -> Node0x228ae48;
	Node0x228a788 -> Node0x228af08;
	Node0x228af08 -> Node0x228afb8;
	Node0x228a678 -> Node0x228b218;
	Node0x228a6f8 -> Node0x228b218;
	Node0x228a788 -> Node0x228b218;
	Node0x228a678 -> Node0x228b2d8;
	Node0x228a6f8 -> Node0x228b438;
	Node0x228a788 -> Node0x228b498;
	Node0x228b2d8 -> Node0x228dbb0;
	Node0x228b438 -> Node0x228dbb0;
	Node0x228b498 -> Node0x228dbb0;
	Node0x228af08 -> Node0x228ddb8;
	Node0x228ad48 -> Node0x228df18;
	Node0x228a7e8 -> Node0x228e028;
}
