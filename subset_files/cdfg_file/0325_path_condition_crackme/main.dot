digraph "DFG for'main' function" {
	Node0x20b4808[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x20b4888[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x20b4918[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x20b4978[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x20b4a28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x20b4e58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20b4f38[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x20b5038[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20b50f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x20b51a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20b5268[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x20b5318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20afa30[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x20b5518[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20b6488[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20b6af8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x20b6b58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x20b6bd0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x20b6c40[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x20b6cb0[shape=record, label="  %16 = and i32 %12, %11"];
	Node0x20b6d20[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x20b6d90[shape=record, label="  %18 = add i32 %15, %17"];
	Node0x20b6e00[shape=record, label="  %19 = shl i32 %13, 1"];
	Node0x20b6e70[shape=record, label="  %20 = sub i32 %18, %19"];
	Node0x20b6ee0[shape=record, label="  %21 = xor i32 %11, 2147483647"];
	Node0x20b6f50[shape=record, label="  %22 = and i32 %21, %12"];
	Node0x20b6fc0[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x20b7030[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x20b70a0[shape=record, label="  %25 = mul i32 %24, 3"];
	Node0x20b7110[shape=record, label="  %26 = and i32 %11, %14"];
	Node0x20b7180[shape=record, label="  %27 = shl i32 %26, 2"];
	Node0x20b71f0[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0x20b7260[shape=record, label="  %29 = xor i32 %10, -1"];
	Node0x20b72d0[shape=record, label="  %30 = and i32 %13, %29"];
	Node0x20b7340[shape=record, label="  %31 = xor i32 %13, -1"];
	Node0x20b73b0[shape=record, label="  %32 = and i32 %13, %10"];
	Node0x20b7420[shape=record, label="  %33 = shl i32 %30, 2"];
	Node0x20b7490[shape=record, label="  %34 = sub i32 %22, %10"];
	Node0x20b7500[shape=record, label="  %35 = add i32 %34, %32"];
	Node0x20b7570[shape=record, label="  %36 = add i32 %35, %28"];
	Node0x20b75e0[shape=record, label="  %37 = shl i32 %36, 1"];
	Node0x20b7650[shape=record, label="  %38 = sub i32 1, %23"];
	Node0x20b76c0[shape=record, label="  %39 = add i32 %38, %16"];
	Node0x20b7730[shape=record, label="  %40 = add i32 %39, %31"];
	Node0x20b77a0[shape=record, label="  %41 = add i32 %40, %25"];
	Node0x20b7810[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x20b7880[shape=record, label="  %43 = add i32 %42, %30"];
	Node0x20b78f0[shape=record, label="  %44 = sub i32 %43, %32"];
	Node0x20b7960[shape=record, label="  %45 = sub i32 %44, %33"];
	Node0x20b79d0[shape=record, label="  %46 = add i32 %45, %37"];
	Node0x20b7a40[shape=record, label="  %47 = icmp eq i32 %20, %46"];
	Node0x20548b8[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x20b7ad0[shape=record, label="  %49 = call i32 @puts(i8* nonnull dereferenceable(1) %48) #5"];
	Node0x20b7d78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20b7ed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20b7fe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20b80f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20b81b8[shape=record, label="  ret i32 0"];
	Node0x20b4808 -> Node0x20b4888;
	Node0x20b4888 -> Node0x20b4918;
	Node0x20b4918 -> Node0x20b4978;
	Node0x20b4978 -> Node0x20b4a28;
	Node0x20b4a28 -> Node0x20b4e58;
	Node0x20b4e58 -> Node0x20b4f38;
	Node0x20b4f38 -> Node0x20b5038;
	Node0x20b5038 -> Node0x20b50f8;
	Node0x20b50f8 -> Node0x20b51a8;
	Node0x20b51a8 -> Node0x20b5268;
	Node0x20b5268 -> Node0x20b5318;
	Node0x20b5318 -> Node0x20afa30;
	Node0x20afa30 -> Node0x20b5518;
	Node0x20b5518 -> Node0x20b6488;
	Node0x20b6488 -> Node0x20b6af8;
	Node0x20b6af8 -> Node0x20b6b58;
	Node0x20b6b58 -> Node0x20b6bd0;
	Node0x20b6bd0 -> Node0x20b6c40;
	Node0x20b6c40 -> Node0x20b6cb0;
	Node0x20b6cb0 -> Node0x20b6d20;
	Node0x20b6d20 -> Node0x20b6d90;
	Node0x20b6d90 -> Node0x20b6e00;
	Node0x20b6e00 -> Node0x20b6e70;
	Node0x20b6e70 -> Node0x20b6ee0;
	Node0x20b6ee0 -> Node0x20b6f50;
	Node0x20b6f50 -> Node0x20b6fc0;
	Node0x20b6fc0 -> Node0x20b7030;
	Node0x20b7030 -> Node0x20b70a0;
	Node0x20b70a0 -> Node0x20b7110;
	Node0x20b7110 -> Node0x20b7180;
	Node0x20b7180 -> Node0x20b71f0;
	Node0x20b71f0 -> Node0x20b7260;
	Node0x20b7260 -> Node0x20b72d0;
	Node0x20b72d0 -> Node0x20b7340;
	Node0x20b7340 -> Node0x20b73b0;
	Node0x20b73b0 -> Node0x20b7420;
	Node0x20b7420 -> Node0x20b7490;
	Node0x20b7490 -> Node0x20b7500;
	Node0x20b7500 -> Node0x20b7570;
	Node0x20b7570 -> Node0x20b75e0;
	Node0x20b75e0 -> Node0x20b7650;
	Node0x20b7650 -> Node0x20b76c0;
	Node0x20b76c0 -> Node0x20b7730;
	Node0x20b7730 -> Node0x20b77a0;
	Node0x20b77a0 -> Node0x20b7810;
	Node0x20b7810 -> Node0x20b7880;
	Node0x20b7880 -> Node0x20b78f0;
	Node0x20b78f0 -> Node0x20b7960;
	Node0x20b7960 -> Node0x20b79d0;
	Node0x20b79d0 -> Node0x20b7a40;
	Node0x20b7a40 -> Node0x20548b8;
	Node0x20548b8 -> Node0x20b7ad0;
	Node0x20b7ad0 -> Node0x20b7d78;
	Node0x20b7d78 -> Node0x20b7ed8;
	Node0x20b7ed8 -> Node0x20b7fe8;
	Node0x20b7fe8 -> Node0x20b80f8;
	Node0x20b80f8 -> Node0x20b81b8;
edge [color=red]
	Node0x20b4808 -> Node0x20b4a28;
	Node0x20b4a28 -> Node0x20b4e58;
	Node0x20b4888 -> Node0x20b4f38;
	Node0x20b4f38 -> Node0x20b5038;
	Node0x20b4918 -> Node0x20b50f8;
	Node0x20b50f8 -> Node0x20b51a8;
	Node0x20b4978 -> Node0x20b5268;
	Node0x20b5268 -> Node0x20b5318;
	Node0x20b4808 -> Node0x20afa30;
	Node0x20b4888 -> Node0x20afa30;
	Node0x20b4918 -> Node0x20afa30;
	Node0x20b4978 -> Node0x20afa30;
	Node0x20b4808 -> Node0x20b5518;
	Node0x20b4888 -> Node0x20b6488;
	Node0x20b4918 -> Node0x20b6af8;
	Node0x20b4978 -> Node0x20b6b58;
	Node0x20b6af8 -> Node0x20b6bd0;
	Node0x20b6bd0 -> Node0x20b6c40;
	Node0x20b6af8 -> Node0x20b6cb0;
	Node0x20b6488 -> Node0x20b6cb0;
	Node0x20b6cb0 -> Node0x20b6d20;
	Node0x20b6c40 -> Node0x20b6d90;
	Node0x20b6d20 -> Node0x20b6d90;
	Node0x20b6b58 -> Node0x20b6e00;
	Node0x20b6d90 -> Node0x20b6e70;
	Node0x20b6e00 -> Node0x20b6e70;
	Node0x20b6488 -> Node0x20b6ee0;
	Node0x20b6ee0 -> Node0x20b6f50;
	Node0x20b6af8 -> Node0x20b6f50;
	Node0x20b6af8 -> Node0x20b6fc0;
	Node0x20b6488 -> Node0x20b6fc0;
	Node0x20b6fc0 -> Node0x20b7030;
	Node0x20b7030 -> Node0x20b70a0;
	Node0x20b6488 -> Node0x20b7110;
	Node0x20b6bd0 -> Node0x20b7110;
	Node0x20b7110 -> Node0x20b7180;
	Node0x20b6b58 -> Node0x20b71f0;
	Node0x20b5518 -> Node0x20b71f0;
	Node0x20b5518 -> Node0x20b7260;
	Node0x20b6b58 -> Node0x20b72d0;
	Node0x20b7260 -> Node0x20b72d0;
	Node0x20b6b58 -> Node0x20b7340;
	Node0x20b6b58 -> Node0x20b73b0;
	Node0x20b5518 -> Node0x20b73b0;
	Node0x20b72d0 -> Node0x20b7420;
	Node0x20b6f50 -> Node0x20b7490;
	Node0x20b5518 -> Node0x20b7490;
	Node0x20b7490 -> Node0x20b7500;
	Node0x20b73b0 -> Node0x20b7500;
	Node0x20b7500 -> Node0x20b7570;
	Node0x20b71f0 -> Node0x20b7570;
	Node0x20b7570 -> Node0x20b75e0;
	Node0x20b6fc0 -> Node0x20b7650;
	Node0x20b7650 -> Node0x20b76c0;
	Node0x20b6cb0 -> Node0x20b76c0;
	Node0x20b76c0 -> Node0x20b7730;
	Node0x20b7340 -> Node0x20b7730;
	Node0x20b7730 -> Node0x20b77a0;
	Node0x20b70a0 -> Node0x20b77a0;
	Node0x20b77a0 -> Node0x20b7810;
	Node0x20b7180 -> Node0x20b7810;
	Node0x20b7810 -> Node0x20b7880;
	Node0x20b72d0 -> Node0x20b7880;
	Node0x20b7880 -> Node0x20b78f0;
	Node0x20b73b0 -> Node0x20b78f0;
	Node0x20b78f0 -> Node0x20b7960;
	Node0x20b7420 -> Node0x20b7960;
	Node0x20b7960 -> Node0x20b79d0;
	Node0x20b75e0 -> Node0x20b79d0;
	Node0x20b6e70 -> Node0x20b7a40;
	Node0x20b79d0 -> Node0x20b7a40;
	Node0x20b7a40 -> Node0x20548b8;
	Node0x20548b8 -> Node0x20b7ad0;
	Node0x20b5268 -> Node0x20b7d78;
	Node0x20b50f8 -> Node0x20b7ed8;
	Node0x20b4f38 -> Node0x20b7fe8;
	Node0x20b4a28 -> Node0x20b80f8;
}
