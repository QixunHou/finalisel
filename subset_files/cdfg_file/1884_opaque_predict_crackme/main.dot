digraph "DFG for'main' function" {
	Node0xdbcdc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xdbce48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xdbced8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xdbd338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xdbd418[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xdbd538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdbd770[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xdbd828[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xdbe798[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xdbee20[shape=record, label="  %8 = and i32 %7, %6"];
	Node0xdbee90[shape=record, label="  %9 = add i32 %8, 1"];
	Node0xdbef00[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0xdbef70[shape=record, label="  %11 = and i32 %6, %10"];
	Node0xdbefe0[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0xdbf050[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xdbf0c0[shape=record, label="  %14 = or i32 %7, %6"];
	Node0xdbf130[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xdbf1a0[shape=record, label="  %16 = mul i32 %15, -6"];
	Node0xdbf210[shape=record, label="  %17 = xor i32 %6, -1"];
	Node0xdbf280[shape=record, label="  %18 = and i32 %7, %17"];
	Node0xdbf2f0[shape=record, label="  %19 = mul i32 %18, -3"];
	Node0xdbf360[shape=record, label="  %20 = shl i32 %11, 2"];
	Node0xdbf3d0[shape=record, label="  %21 = shl i32 %8, 2"];
	Node0xdbf440[shape=record, label="  %22 = sub i32 -3, %7"];
	Node0xdbf4b0[shape=record, label="  %23 = add i32 %22, %10"];
	Node0xdbf520[shape=record, label="  %24 = sub i32 %23, %11"];
	Node0xdbf590[shape=record, label="  %25 = sub i32 %24, %12"];
	Node0xdbf600[shape=record, label="  %26 = add i32 %25, %13"];
	Node0xdbf670[shape=record, label="  %27 = add i32 %26, %14"];
	Node0xdbf6e0[shape=record, label="  %28 = add i32 %27, %16"];
	Node0xdbf750[shape=record, label="  %29 = add i32 %28, %19"];
	Node0xdbf7c0[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0xdbf830[shape=record, label="  %31 = sub i32 %30, %21"];
	Node0xdbf8a0[shape=record, label="  %32 = icmp eq i32 %9, %31"];
	Node0xd5d9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xdbfb40[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0xdbfd98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdbfef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xdbffb8[shape=record, label="  ret i32 0"];
	Node0xdbcdc8 -> Node0xdbce48;
	Node0xdbce48 -> Node0xdbced8;
	Node0xdbced8 -> Node0xdbd338;
	Node0xdbd338 -> Node0xdbd418;
	Node0xdbd418 -> Node0xdbd538;
	Node0xdbd538 -> Node0xdbd770;
	Node0xdbd770 -> Node0xdbd828;
	Node0xdbd828 -> Node0xdbe798;
	Node0xdbe798 -> Node0xdbee20;
	Node0xdbee20 -> Node0xdbee90;
	Node0xdbee90 -> Node0xdbef00;
	Node0xdbef00 -> Node0xdbef70;
	Node0xdbef70 -> Node0xdbefe0;
	Node0xdbefe0 -> Node0xdbf050;
	Node0xdbf050 -> Node0xdbf0c0;
	Node0xdbf0c0 -> Node0xdbf130;
	Node0xdbf130 -> Node0xdbf1a0;
	Node0xdbf1a0 -> Node0xdbf210;
	Node0xdbf210 -> Node0xdbf280;
	Node0xdbf280 -> Node0xdbf2f0;
	Node0xdbf2f0 -> Node0xdbf360;
	Node0xdbf360 -> Node0xdbf3d0;
	Node0xdbf3d0 -> Node0xdbf440;
	Node0xdbf440 -> Node0xdbf4b0;
	Node0xdbf4b0 -> Node0xdbf520;
	Node0xdbf520 -> Node0xdbf590;
	Node0xdbf590 -> Node0xdbf600;
	Node0xdbf600 -> Node0xdbf670;
	Node0xdbf670 -> Node0xdbf6e0;
	Node0xdbf6e0 -> Node0xdbf750;
	Node0xdbf750 -> Node0xdbf7c0;
	Node0xdbf7c0 -> Node0xdbf830;
	Node0xdbf830 -> Node0xdbf8a0;
	Node0xdbf8a0 -> Node0xd5d9d8;
	Node0xd5d9d8 -> Node0xdbfb40;
	Node0xdbfb40 -> Node0xdbfd98;
	Node0xdbfd98 -> Node0xdbfef8;
	Node0xdbfef8 -> Node0xdbffb8;
edge [color=red]
	Node0xdbcdc8 -> Node0xdbced8;
	Node0xdbced8 -> Node0xdbd338;
	Node0xdbce48 -> Node0xdbd418;
	Node0xdbd418 -> Node0xdbd538;
	Node0xdbcdc8 -> Node0xdbd770;
	Node0xdbce48 -> Node0xdbd770;
	Node0xdbcdc8 -> Node0xdbd828;
	Node0xdbce48 -> Node0xdbe798;
	Node0xdbe798 -> Node0xdbee20;
	Node0xdbd828 -> Node0xdbee20;
	Node0xdbee20 -> Node0xdbee90;
	Node0xdbe798 -> Node0xdbef00;
	Node0xdbd828 -> Node0xdbef70;
	Node0xdbef00 -> Node0xdbef70;
	Node0xdbe798 -> Node0xdbefe0;
	Node0xdbd828 -> Node0xdbefe0;
	Node0xdbefe0 -> Node0xdbf050;
	Node0xdbe798 -> Node0xdbf0c0;
	Node0xdbd828 -> Node0xdbf0c0;
	Node0xdbf0c0 -> Node0xdbf130;
	Node0xdbf130 -> Node0xdbf1a0;
	Node0xdbd828 -> Node0xdbf210;
	Node0xdbe798 -> Node0xdbf280;
	Node0xdbf210 -> Node0xdbf280;
	Node0xdbf280 -> Node0xdbf2f0;
	Node0xdbef70 -> Node0xdbf360;
	Node0xdbee20 -> Node0xdbf3d0;
	Node0xdbe798 -> Node0xdbf440;
	Node0xdbf440 -> Node0xdbf4b0;
	Node0xdbef00 -> Node0xdbf4b0;
	Node0xdbf4b0 -> Node0xdbf520;
	Node0xdbef70 -> Node0xdbf520;
	Node0xdbf520 -> Node0xdbf590;
	Node0xdbefe0 -> Node0xdbf590;
	Node0xdbf590 -> Node0xdbf600;
	Node0xdbf050 -> Node0xdbf600;
	Node0xdbf600 -> Node0xdbf670;
	Node0xdbf0c0 -> Node0xdbf670;
	Node0xdbf670 -> Node0xdbf6e0;
	Node0xdbf1a0 -> Node0xdbf6e0;
	Node0xdbf6e0 -> Node0xdbf750;
	Node0xdbf2f0 -> Node0xdbf750;
	Node0xdbf750 -> Node0xdbf7c0;
	Node0xdbf360 -> Node0xdbf7c0;
	Node0xdbf7c0 -> Node0xdbf830;
	Node0xdbf3d0 -> Node0xdbf830;
	Node0xdbee90 -> Node0xdbf8a0;
	Node0xdbf830 -> Node0xdbf8a0;
	Node0xdbf8a0 -> Node0xd5d9d8;
	Node0xd5d9d8 -> Node0xdbfb40;
	Node0xdbd418 -> Node0xdbfd98;
	Node0xdbced8 -> Node0xdbfef8;
}
