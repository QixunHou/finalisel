digraph "DFG for'crackme' function" {
	Node0x1c43ba0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1c44220[shape=record, label="  %6 = mul i32 %5, 3"];
	Node0x1c44290[shape=record, label="  %7 = or i32 %3, %0"];
	Node0x1c44330[shape=record, label="  %8 = add i32 %3, 1"];
	Node0x1c443a0[shape=record, label="  %9 = sub i32 %8, %7"];
	Node0x1c44410[shape=record, label="  %10 = add i32 %9, %6"];
	Node0x1c444b0[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x1c44520[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1c44590[shape=record, label="  %13 = or i32 %11, %1"];
	Node0x1c44600[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x1c44670[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x1c44710[shape=record, label="  %16 = shl i32 %13, 2"];
	Node0x1c447b0[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x1c44820[shape=record, label="  %18 = and i32 %11, %1"];
	Node0x1c44890[shape=record, label="  %19 = xor i32 %0, -1"];
	Node0x1c44900[shape=record, label="  %20 = xor i32 %3, %0"];
	Node0x1c44970[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x1c449e0[shape=record, label="  %22 = and i32 %19, %3"];
	Node0x1c44a50[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x1c44ac0[shape=record, label="  %24 = mul i32 %23, 3"];
	Node0x1c44b30[shape=record, label="  %25 = or i32 %19, %3"];
	Node0x1c44ba0[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x1c44c40[shape=record, label="  %27 = mul i32 %26, -6"];
	Node0x1c44cb0[shape=record, label="  %28 = shl i32 %21, 1"];
	Node0x1c44d20[shape=record, label="  %29 = add i32 %20, %22"];
	Node0x1c44d90[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x1c44e30[shape=record, label="  %31 = add i32 %0, 4"];
	Node0x1c44ea0[shape=record, label="  %32 = add i32 %31, %0"];
	Node0x1c45120[shape=record, label="  %33 = add i32 %32, %1"];
	Node0x1c45190[shape=record, label="  %34 = sub i32 %33, %2"];
	Node0x1c45200[shape=record, label="  %35 = sub i32 %34, %13"];
	Node0x1c45270[shape=record, label="  %36 = add i32 %35, %12"];
	Node0x1c452e0[shape=record, label="  %37 = add i32 %36, %14"];
	Node0x1c45350[shape=record, label="  %38 = add i32 %37, %15"];
	Node0x1c453c0[shape=record, label="  %39 = add i32 %38, %18"];
	Node0x1c45430[shape=record, label="  %40 = sub i32 %39, %3"];
	Node0x1c454a0[shape=record, label="  %41 = add i32 %40, %21"];
	Node0x1c45510[shape=record, label="  %42 = sub i32 %41, %25"];
	Node0x1c45580[shape=record, label="  %43 = add i32 %42, %17"];
	Node0x1c455f0[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x1c45660[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x1c456d0[shape=record, label="  %46 = sub i32 %45, %28"];
	Node0x1c45740[shape=record, label="  %47 = add i32 %46, %30"];
	Node0x1c457b0[shape=record, label="  %48 = icmp eq i32 %10, %47"];
	Node0x1be4268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c45c50[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x1c45ca0[shape=record, label="  ret void"];
	Node0x1c43ba0 -> Node0x1c44220;
	Node0x1c44220 -> Node0x1c44290;
	Node0x1c44290 -> Node0x1c44330;
	Node0x1c44330 -> Node0x1c443a0;
	Node0x1c443a0 -> Node0x1c44410;
	Node0x1c44410 -> Node0x1c444b0;
	Node0x1c444b0 -> Node0x1c44520;
	Node0x1c44520 -> Node0x1c44590;
	Node0x1c44590 -> Node0x1c44600;
	Node0x1c44600 -> Node0x1c44670;
	Node0x1c44670 -> Node0x1c44710;
	Node0x1c44710 -> Node0x1c447b0;
	Node0x1c447b0 -> Node0x1c44820;
	Node0x1c44820 -> Node0x1c44890;
	Node0x1c44890 -> Node0x1c44900;
	Node0x1c44900 -> Node0x1c44970;
	Node0x1c44970 -> Node0x1c449e0;
	Node0x1c449e0 -> Node0x1c44a50;
	Node0x1c44a50 -> Node0x1c44ac0;
	Node0x1c44ac0 -> Node0x1c44b30;
	Node0x1c44b30 -> Node0x1c44ba0;
	Node0x1c44ba0 -> Node0x1c44c40;
	Node0x1c44c40 -> Node0x1c44cb0;
	Node0x1c44cb0 -> Node0x1c44d20;
	Node0x1c44d20 -> Node0x1c44d90;
	Node0x1c44d90 -> Node0x1c44e30;
	Node0x1c44e30 -> Node0x1c44ea0;
	Node0x1c44ea0 -> Node0x1c45120;
	Node0x1c45120 -> Node0x1c45190;
	Node0x1c45190 -> Node0x1c45200;
	Node0x1c45200 -> Node0x1c45270;
	Node0x1c45270 -> Node0x1c452e0;
	Node0x1c452e0 -> Node0x1c45350;
	Node0x1c45350 -> Node0x1c453c0;
	Node0x1c453c0 -> Node0x1c45430;
	Node0x1c45430 -> Node0x1c454a0;
	Node0x1c454a0 -> Node0x1c45510;
	Node0x1c45510 -> Node0x1c45580;
	Node0x1c45580 -> Node0x1c455f0;
	Node0x1c455f0 -> Node0x1c45660;
	Node0x1c45660 -> Node0x1c456d0;
	Node0x1c456d0 -> Node0x1c45740;
	Node0x1c45740 -> Node0x1c457b0;
	Node0x1c457b0 -> Node0x1be4268;
	Node0x1be4268 -> Node0x1c45c50;
	Node0x1c45c50 -> Node0x1c45ca0;
edge [color=red]
	Node0x1c43ba0 -> Node0x1c44220;
	Node0x1c44330 -> Node0x1c443a0;
	Node0x1c44290 -> Node0x1c443a0;
	Node0x1c443a0 -> Node0x1c44410;
	Node0x1c44220 -> Node0x1c44410;
	Node0x1c444b0 -> Node0x1c44520;
	Node0x1c444b0 -> Node0x1c44590;
	Node0x1c44590 -> Node0x1c44710;
	Node0x1c44710 -> Node0x1c447b0;
	Node0x1c444b0 -> Node0x1c44820;
	Node0x1c44890 -> Node0x1c449e0;
	Node0x1c449e0 -> Node0x1c44a50;
	Node0x1c44a50 -> Node0x1c44ac0;
	Node0x1c44890 -> Node0x1c44b30;
	Node0x1c44b30 -> Node0x1c44ba0;
	Node0x1c44ba0 -> Node0x1c44c40;
	Node0x1c44970 -> Node0x1c44cb0;
	Node0x1c44900 -> Node0x1c44d20;
	Node0x1c449e0 -> Node0x1c44d20;
	Node0x1c44d20 -> Node0x1c44d90;
	Node0x1c44e30 -> Node0x1c44ea0;
	Node0x1c44ea0 -> Node0x1c45120;
	Node0x1c45120 -> Node0x1c45190;
	Node0x1c45190 -> Node0x1c45200;
	Node0x1c44590 -> Node0x1c45200;
	Node0x1c45200 -> Node0x1c45270;
	Node0x1c44520 -> Node0x1c45270;
	Node0x1c45270 -> Node0x1c452e0;
	Node0x1c44600 -> Node0x1c452e0;
	Node0x1c452e0 -> Node0x1c45350;
	Node0x1c44670 -> Node0x1c45350;
	Node0x1c45350 -> Node0x1c453c0;
	Node0x1c44820 -> Node0x1c453c0;
	Node0x1c453c0 -> Node0x1c45430;
	Node0x1c45430 -> Node0x1c454a0;
	Node0x1c44970 -> Node0x1c454a0;
	Node0x1c454a0 -> Node0x1c45510;
	Node0x1c44b30 -> Node0x1c45510;
	Node0x1c45510 -> Node0x1c45580;
	Node0x1c447b0 -> Node0x1c45580;
	Node0x1c45580 -> Node0x1c455f0;
	Node0x1c44ac0 -> Node0x1c455f0;
	Node0x1c455f0 -> Node0x1c45660;
	Node0x1c44c40 -> Node0x1c45660;
	Node0x1c45660 -> Node0x1c456d0;
	Node0x1c44cb0 -> Node0x1c456d0;
	Node0x1c456d0 -> Node0x1c45740;
	Node0x1c44d90 -> Node0x1c45740;
	Node0x1c44410 -> Node0x1c457b0;
	Node0x1c45740 -> Node0x1c457b0;
	Node0x1c457b0 -> Node0x1be4268;
	Node0x1be4268 -> Node0x1c45c50;
}
