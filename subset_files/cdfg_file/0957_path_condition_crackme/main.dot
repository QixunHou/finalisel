digraph "DFG for'main' function" {
	Node0x1c45e68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c45ee8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c45f78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c45fd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1c46088[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1c464b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c46598[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1c46698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c46758[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1c46808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c468c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1c46978[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c40bd0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1c46b78[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c47ae8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c48158[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c481b8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1c48230[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1c482a0[shape=record, label="  %15 = mul i32 %14, 3"];
	Node0x1c48310[shape=record, label="  %16 = or i32 %13, %10"];
	Node0x1c48380[shape=record, label="  %17 = add i32 %13, 1"];
	Node0x1c483f0[shape=record, label="  %18 = sub i32 %17, %16"];
	Node0x1c48460[shape=record, label="  %19 = add i32 %18, %15"];
	Node0x1c484d0[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x1c48540[shape=record, label="  %21 = or i32 %11, %20"];
	Node0x1c485b0[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x1c48620[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x1c48690[shape=record, label="  %24 = shl i32 %21, 2"];
	Node0x1c48700[shape=record, label="  %25 = xor i32 %24, -4"];
	Node0x1c48770[shape=record, label="  %26 = and i32 %11, %20"];
	Node0x1c487e0[shape=record, label="  %27 = xor i32 %10, -1"];
	Node0x1c48850[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0x1c488c0[shape=record, label="  %29 = and i32 %13, %10"];
	Node0x1c48930[shape=record, label="  %30 = and i32 %13, %27"];
	Node0x1c489a0[shape=record, label="  %31 = xor i32 %30, -1"];
	Node0x1c48a10[shape=record, label="  %32 = mul i32 %31, 3"];
	Node0x1c48a80[shape=record, label="  %33 = or i32 %13, %27"];
	Node0x1c48af0[shape=record, label="  %34 = xor i32 %33, -1"];
	Node0x1c48b60[shape=record, label="  %35 = mul i32 %34, -6"];
	Node0x1c48bd0[shape=record, label="  %36 = shl i32 %29, 1"];
	Node0x1c48c40[shape=record, label="  %37 = add i32 %10, %20"];
	Node0x1c48cb0[shape=record, label="  %38 = add i32 %37, %30"];
	Node0x1c48d20[shape=record, label="  %39 = add i32 %38, %28"];
	Node0x1c48d90[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x1c48e00[shape=record, label="  %41 = add i32 %11, 4"];
	Node0x1c48e70[shape=record, label="  %42 = sub i32 %41, %12"];
	Node0x1c48ee0[shape=record, label="  %43 = sub i32 %42, %21"];
	Node0x1c48f50[shape=record, label="  %44 = add i32 %43, %22"];
	Node0x1c48fc0[shape=record, label="  %45 = add i32 %44, %23"];
	Node0x1c49030[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x1c490a0[shape=record, label="  %47 = sub i32 %46, %13"];
	Node0x1c49110[shape=record, label="  %48 = add i32 %47, %29"];
	Node0x1c49180[shape=record, label="  %49 = sub i32 %48, %33"];
	Node0x1c491f0[shape=record, label="  %50 = add i32 %49, %25"];
	Node0x1c49260[shape=record, label="  %51 = add i32 %50, %32"];
	Node0x1c492d0[shape=record, label="  %52 = add i32 %51, %35"];
	Node0x1c49340[shape=record, label="  %53 = sub i32 %52, %36"];
	Node0x1c493b0[shape=record, label="  %54 = add i32 %53, %40"];
	Node0x1c49420[shape=record, label="  %55 = icmp eq i32 %19, %54"];
	Node0x1be58b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c494b0[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x1c49758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c498b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c499c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c49ad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c49b98[shape=record, label="  ret i32 0"];
	Node0x1c45e68 -> Node0x1c45ee8;
	Node0x1c45ee8 -> Node0x1c45f78;
	Node0x1c45f78 -> Node0x1c45fd8;
	Node0x1c45fd8 -> Node0x1c46088;
	Node0x1c46088 -> Node0x1c464b8;
	Node0x1c464b8 -> Node0x1c46598;
	Node0x1c46598 -> Node0x1c46698;
	Node0x1c46698 -> Node0x1c46758;
	Node0x1c46758 -> Node0x1c46808;
	Node0x1c46808 -> Node0x1c468c8;
	Node0x1c468c8 -> Node0x1c46978;
	Node0x1c46978 -> Node0x1c40bd0;
	Node0x1c40bd0 -> Node0x1c46b78;
	Node0x1c46b78 -> Node0x1c47ae8;
	Node0x1c47ae8 -> Node0x1c48158;
	Node0x1c48158 -> Node0x1c481b8;
	Node0x1c481b8 -> Node0x1c48230;
	Node0x1c48230 -> Node0x1c482a0;
	Node0x1c482a0 -> Node0x1c48310;
	Node0x1c48310 -> Node0x1c48380;
	Node0x1c48380 -> Node0x1c483f0;
	Node0x1c483f0 -> Node0x1c48460;
	Node0x1c48460 -> Node0x1c484d0;
	Node0x1c484d0 -> Node0x1c48540;
	Node0x1c48540 -> Node0x1c485b0;
	Node0x1c485b0 -> Node0x1c48620;
	Node0x1c48620 -> Node0x1c48690;
	Node0x1c48690 -> Node0x1c48700;
	Node0x1c48700 -> Node0x1c48770;
	Node0x1c48770 -> Node0x1c487e0;
	Node0x1c487e0 -> Node0x1c48850;
	Node0x1c48850 -> Node0x1c488c0;
	Node0x1c488c0 -> Node0x1c48930;
	Node0x1c48930 -> Node0x1c489a0;
	Node0x1c489a0 -> Node0x1c48a10;
	Node0x1c48a10 -> Node0x1c48a80;
	Node0x1c48a80 -> Node0x1c48af0;
	Node0x1c48af0 -> Node0x1c48b60;
	Node0x1c48b60 -> Node0x1c48bd0;
	Node0x1c48bd0 -> Node0x1c48c40;
	Node0x1c48c40 -> Node0x1c48cb0;
	Node0x1c48cb0 -> Node0x1c48d20;
	Node0x1c48d20 -> Node0x1c48d90;
	Node0x1c48d90 -> Node0x1c48e00;
	Node0x1c48e00 -> Node0x1c48e70;
	Node0x1c48e70 -> Node0x1c48ee0;
	Node0x1c48ee0 -> Node0x1c48f50;
	Node0x1c48f50 -> Node0x1c48fc0;
	Node0x1c48fc0 -> Node0x1c49030;
	Node0x1c49030 -> Node0x1c490a0;
	Node0x1c490a0 -> Node0x1c49110;
	Node0x1c49110 -> Node0x1c49180;
	Node0x1c49180 -> Node0x1c491f0;
	Node0x1c491f0 -> Node0x1c49260;
	Node0x1c49260 -> Node0x1c492d0;
	Node0x1c492d0 -> Node0x1c49340;
	Node0x1c49340 -> Node0x1c493b0;
	Node0x1c493b0 -> Node0x1c49420;
	Node0x1c49420 -> Node0x1be58b8;
	Node0x1be58b8 -> Node0x1c494b0;
	Node0x1c494b0 -> Node0x1c49758;
	Node0x1c49758 -> Node0x1c498b8;
	Node0x1c498b8 -> Node0x1c499c8;
	Node0x1c499c8 -> Node0x1c49ad8;
	Node0x1c49ad8 -> Node0x1c49b98;
edge [color=red]
	Node0x1c45e68 -> Node0x1c46088;
	Node0x1c46088 -> Node0x1c464b8;
	Node0x1c45ee8 -> Node0x1c46598;
	Node0x1c46598 -> Node0x1c46698;
	Node0x1c45f78 -> Node0x1c46758;
	Node0x1c46758 -> Node0x1c46808;
	Node0x1c45fd8 -> Node0x1c468c8;
	Node0x1c468c8 -> Node0x1c46978;
	Node0x1c45e68 -> Node0x1c40bd0;
	Node0x1c45ee8 -> Node0x1c40bd0;
	Node0x1c45f78 -> Node0x1c40bd0;
	Node0x1c45fd8 -> Node0x1c40bd0;
	Node0x1c45e68 -> Node0x1c46b78;
	Node0x1c45ee8 -> Node0x1c47ae8;
	Node0x1c45f78 -> Node0x1c48158;
	Node0x1c45fd8 -> Node0x1c481b8;
	Node0x1c48158 -> Node0x1c48230;
	Node0x1c47ae8 -> Node0x1c48230;
	Node0x1c48230 -> Node0x1c482a0;
	Node0x1c481b8 -> Node0x1c48310;
	Node0x1c46b78 -> Node0x1c48310;
	Node0x1c481b8 -> Node0x1c48380;
	Node0x1c48380 -> Node0x1c483f0;
	Node0x1c48310 -> Node0x1c483f0;
	Node0x1c483f0 -> Node0x1c48460;
	Node0x1c482a0 -> Node0x1c48460;
	Node0x1c48158 -> Node0x1c484d0;
	Node0x1c47ae8 -> Node0x1c48540;
	Node0x1c484d0 -> Node0x1c48540;
	Node0x1c48158 -> Node0x1c485b0;
	Node0x1c47ae8 -> Node0x1c485b0;
	Node0x1c48158 -> Node0x1c48620;
	Node0x1c47ae8 -> Node0x1c48620;
	Node0x1c48540 -> Node0x1c48690;
	Node0x1c48690 -> Node0x1c48700;
	Node0x1c47ae8 -> Node0x1c48770;
	Node0x1c484d0 -> Node0x1c48770;
	Node0x1c46b78 -> Node0x1c487e0;
	Node0x1c481b8 -> Node0x1c48850;
	Node0x1c46b78 -> Node0x1c48850;
	Node0x1c481b8 -> Node0x1c488c0;
	Node0x1c46b78 -> Node0x1c488c0;
	Node0x1c481b8 -> Node0x1c48930;
	Node0x1c487e0 -> Node0x1c48930;
	Node0x1c48930 -> Node0x1c489a0;
	Node0x1c489a0 -> Node0x1c48a10;
	Node0x1c481b8 -> Node0x1c48a80;
	Node0x1c487e0 -> Node0x1c48a80;
	Node0x1c48a80 -> Node0x1c48af0;
	Node0x1c48af0 -> Node0x1c48b60;
	Node0x1c488c0 -> Node0x1c48bd0;
	Node0x1c46b78 -> Node0x1c48c40;
	Node0x1c484d0 -> Node0x1c48c40;
	Node0x1c48c40 -> Node0x1c48cb0;
	Node0x1c48930 -> Node0x1c48cb0;
	Node0x1c48cb0 -> Node0x1c48d20;
	Node0x1c48850 -> Node0x1c48d20;
	Node0x1c48d20 -> Node0x1c48d90;
	Node0x1c47ae8 -> Node0x1c48e00;
	Node0x1c48e00 -> Node0x1c48e70;
	Node0x1c48158 -> Node0x1c48e70;
	Node0x1c48e70 -> Node0x1c48ee0;
	Node0x1c48540 -> Node0x1c48ee0;
	Node0x1c48ee0 -> Node0x1c48f50;
	Node0x1c485b0 -> Node0x1c48f50;
	Node0x1c48f50 -> Node0x1c48fc0;
	Node0x1c48620 -> Node0x1c48fc0;
	Node0x1c48fc0 -> Node0x1c49030;
	Node0x1c48770 -> Node0x1c49030;
	Node0x1c49030 -> Node0x1c490a0;
	Node0x1c481b8 -> Node0x1c490a0;
	Node0x1c490a0 -> Node0x1c49110;
	Node0x1c488c0 -> Node0x1c49110;
	Node0x1c49110 -> Node0x1c49180;
	Node0x1c48a80 -> Node0x1c49180;
	Node0x1c49180 -> Node0x1c491f0;
	Node0x1c48700 -> Node0x1c491f0;
	Node0x1c491f0 -> Node0x1c49260;
	Node0x1c48a10 -> Node0x1c49260;
	Node0x1c49260 -> Node0x1c492d0;
	Node0x1c48b60 -> Node0x1c492d0;
	Node0x1c492d0 -> Node0x1c49340;
	Node0x1c48bd0 -> Node0x1c49340;
	Node0x1c49340 -> Node0x1c493b0;
	Node0x1c48d90 -> Node0x1c493b0;
	Node0x1c48460 -> Node0x1c49420;
	Node0x1c493b0 -> Node0x1c49420;
	Node0x1c49420 -> Node0x1be58b8;
	Node0x1be58b8 -> Node0x1c494b0;
	Node0x1c468c8 -> Node0x1c49758;
	Node0x1c46758 -> Node0x1c498b8;
	Node0x1c46598 -> Node0x1c499c8;
	Node0x1c46088 -> Node0x1c49ad8;
}
