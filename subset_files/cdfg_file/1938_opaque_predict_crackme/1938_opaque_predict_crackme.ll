; ModuleID = '../.././c_source_file/1938_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1938_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %8, -1
  %10 = add i32 %8, 1
  %11 = xor i32 %2, -1
  %12 = and i32 %11, %0
  %13 = and i32 %2, %1
  %14 = or i32 %12, %13
  %15 = add i32 %10, %14
  %16 = xor i32 %5, -1
  %17 = or i32 %16, %4
  %18 = xor i32 %4, %3
  %19 = and i32 %17, %18
  %20 = add i32 %15, %19
  %21 = xor i32 %18, -1
  %22 = xor i32 %5, %4
  %23 = xor i32 %22, -1
  %24 = or i32 %23, %21
  %25 = sub i32 %20, %24
  %26 = xor i32 %0, -1
  %27 = xor i32 %13, -1
  %28 = and i32 %27, %26
  %29 = xor i32 %1, %0
  %30 = xor i32 %29, -1
  %31 = add i32 %29, 1
  %32 = and i32 %2, %0
  %33 = or i32 %2, %1
  %34 = xor i32 %32, %33
  %35 = or i32 %2, %0
  %36 = and i32 %13, %0
  %37 = xor i32 %33, %0
  %38 = xor i32 %36, -1
  %39 = xor i32 %37, %38
  %40 = xor i32 %2, %1
  %41 = and i32 %1, %0
  %42 = xor i32 %40, -1
  %43 = or i32 %41, %42
  %44 = or i32 %7, %0
  %45 = and i32 %44, %11
  %46 = and i32 %27, %0
  %47 = xor i32 %35, -1
  %48 = or i32 %47, %7
  %49 = or i32 %11, %0
  %50 = xor i32 %49, -1
  %51 = xor i32 %50, %1
  %52 = and i32 %35, %30
  %53 = and i32 %7, %2
  %54 = and i32 %53, %0
  %55 = xor i32 %40, %0
  %56 = xor i32 %55, -1
  %57 = xor i32 %54, %56
  %58 = xor i32 %12, -1
  %59 = shl i32 %58, 1
  %60 = or i32 %33, %0
  %61 = and i32 %11, %1
  %62 = or i32 %32, %61
  %63 = or i32 %7, %2
  %64 = xor i32 %63, %0
  %65 = or i32 %54, %64
  %66 = or i32 %1, %0
  %67 = xor i32 %2, %0
  %68 = and i32 %67, %66
  %69 = or i32 %40, %0
  %70 = xor i32 %54, %69
  %71 = and i32 %66, %11
  %72 = xor i32 %61, -1
  %73 = xor i32 %8, %72
  %74 = shl i32 %73, 1
  %75 = or i32 %67, %30
  %76 = and i32 %40, %26
  %77 = xor i32 %76, %38
  %78 = or i32 %32, %7
  %79 = xor i32 %12, %1
  %80 = xor i32 %67, -1
  %81 = and i32 %66, %80
  %82 = xor i32 %66, -1
  %83 = or i32 %67, %82
  %84 = or i32 %32, %1
  %85 = or i32 %27, %26
  %86 = and i32 %44, %2
  %87 = shl i32 %86, 1
  %88 = xor i32 %32, -1
  %89 = and i32 %88, %30
  %90 = shl i32 %89, 1
  %91 = or i32 %50, %7
  %92 = or i32 %11, %1
  %93 = xor i32 %92, -1
  %94 = or i32 %93, %0
  %95 = and i32 %67, %9
  %96 = or i32 %42, %82
  %97 = or i32 %29, %80
  %98 = or i32 %80, %30
  %99 = shl i32 %98, 1
  %100 = and i32 %53, %26
  %101 = or i32 %40, %26
  %102 = xor i32 %101, -1
  %103 = or i32 %100, %102
  %104 = or i32 %50, %1
  %105 = xor i32 %44, -1
  %106 = or i32 %11, %105
  %107 = and i32 %33, %26
  %108 = xor i32 %107, %38
  %109 = or i32 %105, %2
  %110 = xor i32 %41, -1
  %111 = and i32 %80, %110
  %112 = xor i32 %44, %2
  %113 = shl i32 %112, 1
  %114 = xor i32 %8, %27
  %115 = shl i32 %114, 2
  %116 = and i32 %80, %9
  %117 = or i32 %67, %8
  %118 = and i32 %63, %0
  %119 = xor i32 %118, 2147483647
  %120 = xor i32 %119, %100
  %121 = or i32 %41, %80
  %122 = and i32 %11, %30
  %123 = or i32 %47, %30
  %124 = xor i32 %32, %1
  %125 = or i32 %32, %105
  %126 = xor i32 %72, %0
  %127 = shl i32 %126, 1
  %128 = or i32 %50, %30
  %129 = or i32 %72, %0
  %130 = xor i32 %33, -1
  %131 = or i32 %130, %0
  %132 = xor i32 %92, %41
  %133 = add i32 %40, 1
  %134 = or i32 %40, %82
  %135 = xor i32 %100, %101
  %136 = add i32 %66, 1
  %137 = or i32 %12, %7
  %138 = or i32 %42, %26
  %139 = or i32 %41, %130
  %140 = xor i32 %64, -1
  %141 = xor i32 %54, %140
  %142 = xor i32 %66, %2
  %143 = or i32 %41, %50
  %144 = shl i32 %143, 1
  %145 = or i32 %92, %26
  %146 = or i32 %13, %0
  %147 = and i32 %66, %2
  %148 = xor i32 %36, %55
  %149 = xor i32 %61, %0
  %150 = xor i32 %8, %2
  %151 = or i32 %41, %11
  %152 = or i32 %40, %105
  %153 = shl i32 %152, 1
  %154 = or i32 %93, %26
  %155 = and i32 %67, %44
  %156 = or i32 %80, %7
  %157 = or i32 %36, %56
  %158 = and i32 %9, %2
  %159 = xor i32 %32, %66
  %160 = or i32 %27, %0
  %161 = and i32 %92, %26
  %162 = and i32 %44, %42
  %163 = or i32 %29, %47
  %164 = xor i32 %110, %2
  %165 = shl i32 %164, 1
  %166 = or i32 %61, %8
  %167 = and i32 %13, %26
  %168 = and i32 %33, %0
  %169 = xor i32 %168, 2147483647
  %170 = xor i32 %169, %167
  %171 = and i32 %72, %26
  %172 = xor i32 %13, %0
  %173 = and i32 %92, %0
  %174 = and i32 %29, %88
  %175 = or i32 %67, %41
  %176 = or i32 %13, %8
  %177 = or i32 %11, %82
  %178 = and i32 %40, %44
  %179 = and i32 %72, %0
  %180 = and i32 %42, %26
  %181 = and i32 %80, %30
  %182 = xor i32 %41, %2
  %183 = and i32 %110, %2
  %184 = and i32 %58, %30
  %185 = or i32 %82, %2
  %186 = or i32 %67, %7
  %187 = xor i32 %69, 2147483647
  %188 = or i32 %187, %54
  %189 = shl i32 %188, 1
  %190 = xor i32 %105, %2
  %191 = or i32 %41, %47
  %192 = shl i32 %191, 1
  %193 = or i32 %29, %2
  %194 = or i32 %36, %37
  %195 = or i32 %12, %1
  %196 = and i32 %58, %1
  %197 = xor i32 %93, %0
  %198 = xor i32 %92, %0
  %199 = or i32 %130, %26
  %200 = xor i32 %35, %1
  %201 = or i32 %32, %30
  %202 = or i32 %12, %29
  %203 = or i32 %67, %105
  %204 = and i32 %80, %1
  %205 = or i32 %33, %26
  %206 = and i32 %49, %30
  %207 = or i32 %47, %1
  %208 = or i32 %8, %11
  %209 = xor i32 %88, %1
  %210 = and i32 %63, %26
  %211 = or i32 %54, %210
  %212 = and i32 %49, %1
  %213 = shl i32 %72, 1
  %214 = and i32 %67, %29
  %215 = and i32 %80, %7
  %216 = or i32 %80, %82
  %217 = or i32 %67, %29
  %218 = xor i32 %42, %0
  %219 = and i32 %42, %0
  %220 = or i32 %61, %26
  %221 = and i32 %58, %7
  %222 = and i32 %40, %0
  %223 = or i32 %167, %222
  %224 = or i32 %72, %26
  %225 = xor i32 %12, %92
  %226 = or i32 %40, %8
  %227 = and i32 %67, %110
  %228 = and i32 %42, %9
  %229 = xor i32 %210, 1073741823
  %230 = xor i32 %229, %54
  %231 = and i32 %40, %9
  %232 = shl i32 %231, 1
  %233 = xor i32 %32, %72
  %234 = and i32 %44, %80
  %235 = xor i32 %33, %41
  %236 = and i32 %88, %7
  %237 = and i32 %67, %7
  %238 = or i32 %30, %2
  %239 = add i32 %67, 1
  %240 = and i32 %29, %58
  %241 = and i32 %42, %110
  %242 = xor i32 %82, %2
  %243 = and i32 %40, %110
  %244 = or i32 %12, %93
  %245 = and i32 %35, %29
  %246 = or i32 %61, %0
  %247 = or i32 %92, %0
  %248 = and i32 %29, %2
  %249 = shl i32 %248, 1
  %250 = and i32 %66, %42
  %251 = shl i32 %250, 1
  %252 = or i32 %54, %55
  %253 = and i32 %40, %66
  %254 = or i32 %8, %80
  %255 = and i32 %67, %1
  %256 = and i32 %49, %7
  %257 = xor i32 %9, %2
  %258 = and i32 %30, %2
  %259 = or i32 %67, %1
  %260 = or i32 %41, %2
  %261 = xor i32 %49, %1
  %262 = or i32 %42, %0
  %263 = xor i32 %12, %27
  %264 = or i32 %32, %29
  %265 = shl i32 %264, 1
  %266 = xor i32 %222, -1
  %267 = xor i32 %167, %266
  %268 = and i32 %35, %7
  %269 = or i32 %80, %1
  %270 = and i32 %88, %1
  %271 = shl i32 %270, 1
  %272 = or i32 %36, %76
  %273 = shl i32 %272, 1
  %274 = add i32 %44, 1
  %275 = xor i32 %58, %1
  %276 = shl i32 %275, 1
  %277 = or i32 %32, %130
  %278 = shl i32 %277, 1
  %279 = or i32 %167, %168
  %280 = xor i32 %27, %0
  %281 = or i32 %29, %50
  %282 = or i32 %11, %30
  %283 = or i32 %8, %42
  %284 = and i32 %11, %9
  %285 = xor i32 %35, %41
  %286 = shl i32 %285, 1
  %287 = or i32 %42, %105
  %288 = xor i32 %32, %44
  %289 = xor i32 %130, %0
  %290 = or i32 %12, %30
  %291 = and i32 %29, %80
  %292 = shl i32 %291, 1
  %293 = and i32 %11, %110
  %294 = or i32 %8, %2
  %295 = shl i32 %294, 1
  %296 = add i32 %33, 1
  %297 = and i32 %49, %29
  %298 = add i32 %35, 1
  %299 = and i32 %35, %1
  %300 = or i32 %13, %26
  %301 = or i32 %29, %11
  %302 = or i32 %41, %93
  %303 = xor i32 %47, %1
  %304 = or i32 %36, %107
  %305 = or i32 %40, %41
  %306 = or i32 %32, %82
  %307 = shl i32 %168, 1
  %308 = or i32 %100, %118
  %309 = and i32 %130, %26
  %310 = and i32 %61, %26
  %311 = and i32 %130, %0
  %312 = mul i32 %311, -26
  %313 = and i32 %61, %0
  %314 = and i32 %93, %26
  %315 = mul i32 %314, 19
  %316 = and i32 %93, %0
  %317 = mul i32 %316, 10
  %318 = mul i32 %36, 22
  %319 = xor i32 %3, -1
  %320 = or i32 %319, %4
  %321 = xor i32 %320, -1
  %322 = or i32 %22, %321
  %323 = or i32 %4, %3
  %324 = xor i32 %323, -1
  %325 = or i32 %23, %324
  %326 = or i32 %5, %4
  %327 = and i32 %326, %21
  %328 = xor i32 %17, -1
  %329 = or i32 %328, %3
  %330 = or i32 %5, %3
  %331 = xor i32 %330, %4
  %332 = shl i32 %331, 1
  %333 = or i32 %16, %3
  %334 = xor i32 %333, %4
  %335 = and i32 %319, %4
  %336 = xor i32 %5, %3
  %337 = xor i32 %336, -1
  %338 = or i32 %335, %337
  %339 = and i32 %4, %3
  %340 = or i32 %22, %339
  %341 = or i32 %328, %21
  %342 = and i32 %5, %4
  %343 = or i32 %342, %3
  %344 = and i32 %23, %3
  %345 = or i32 %337, %321
  %346 = xor i32 %342, -1
  %347 = and i32 %346, %21
  %348 = shl i32 %347, 1
  %349 = xor i32 %342, %330
  %350 = and i32 %16, %4
  %351 = xor i32 %350, %3
  %352 = xor i32 %326, -1
  %353 = or i32 %352, %21
  %354 = or i32 %352, %3
  %355 = xor i32 %335, -1
  %356 = and i32 %22, %355
  %357 = shl i32 %356, 1
  %358 = or i32 %23, %319
  %359 = and i32 %346, %319
  %360 = shl i32 %359, 1
  %361 = or i32 %339, %23
  %362 = and i32 %16, %3
  %363 = xor i32 %362, -1
  %364 = or i32 %363, %4
  %365 = xor i32 %4, -1
  %366 = and i32 %5, %3
  %367 = xor i32 %366, -1
  %368 = or i32 %367, %365
  %369 = and i32 %335, %5
  %370 = or i32 %319, %5
  %371 = and i32 %370, %365
  %372 = xor i32 %369, -1
  %373 = xor i32 %371, %372
  %374 = xor i32 %339, -1
  %375 = and i32 %336, %374
  %376 = and i32 %337, %355
  %377 = shl i32 %376, 1
  %378 = or i32 %362, %335
  %379 = or i32 %22, %324
  %380 = xor i32 %323, %5
  %381 = and i32 %320, %5
  %382 = xor i32 %337, %4
  %383 = or i32 %333, %365
  %384 = xor i32 %366, %4
  %385 = and i32 %18, %16
  %386 = shl i32 %385, 1
  %387 = or i32 %369, %371
  %388 = xor i32 %320, %5
  %389 = xor i32 %370, %4
  %390 = or i32 %369, %389
  %391 = and i32 %22, %319
  %392 = add i32 %362, 1
  %393 = or i32 %336, %321
  %394 = and i32 %17, %319
  %395 = and i32 %366, %4
  %396 = and i32 %330, %365
  %397 = or i32 %395, %396
  %398 = and i32 %323, %337
  %399 = and i32 %320, %337
  %400 = xor i32 %389, %372
  %401 = or i32 %342, %18
  %402 = and i32 %323, %5
  %403 = or i32 %342, %321
  %404 = xor i32 %335, %367
  %405 = or i32 %336, %339
  %406 = or i32 %363, %365
  %407 = or i32 %22, %21
  %408 = xor i32 %350, 2147483647
  %409 = and i32 %408, %21
  %410 = shl i32 %409, 1
  %411 = xor i32 %333, -1
  %412 = or i32 %339, %411
  %413 = or i32 %366, %365
  %414 = and i32 %366, %365
  %415 = and i32 %330, %4
  %416 = or i32 %414, %415
  %417 = or i32 %328, %319
  %418 = shl i32 %417, 1
  %419 = and i32 %22, %323
  %420 = and i32 %21, %5
  %421 = add i32 %333, 1
  %422 = shl i32 %320, 2
  %423 = or i32 %18, %328
  %424 = xor i32 %321, %5
  %425 = or i32 %337, %4
  %426 = xor i32 %395, %425
  %427 = or i32 %330, %4
  %428 = or i32 %336, %335
  %429 = or i32 %22, %319
  %430 = xor i32 %411, %4
  %431 = and i32 %16, %374
  %432 = or i32 %395, %331
  %433 = xor i32 %336, %4
  %434 = xor i32 %433, %395
  %435 = or i32 %339, %5
  %436 = xor i32 %342, %320
  %437 = or i32 %350, %366
  %438 = and i32 %22, %18
  %439 = or i32 %336, %4
  %440 = xor i32 %369, %439
  %441 = add i32 %18, 1
  %442 = and i32 %346, %3
  %443 = and i32 %374, %5
  %444 = and i32 %18, %5
  %445 = or i32 %335, %16
  %446 = shl i32 %445, 1
  %447 = xor i32 %342, %3
  %448 = and i32 %355, %5
  %449 = and i32 %320, %16
  %450 = shl i32 %449, 1
  %451 = xor i32 %342, %363
  %452 = xor i32 %330, -1
  %453 = and i32 %452, %365
  %454 = and i32 %362, %365
  %455 = and i32 %452, %4
  %456 = and i32 %362, %4
  %457 = mul i32 %456, -13
  %458 = and i32 %411, %365
  %459 = and i32 %411, %4
  %460 = add i32 %190, %50
  %461 = add i32 %460, %183
  %462 = add i32 %461, %32
  %463 = add i32 %462, %158
  %464 = add i32 %463, %4
  %465 = add i32 %464, %302
  %466 = add i32 %465, %283
  %467 = add i32 %466, %236
  %468 = add i32 %467, %209
  %469 = add i32 %468, %205
  %470 = add i32 %469, %186
  %471 = add i32 %470, %171
  %472 = add i32 %471, %138
  %473 = add i32 %472, %117
  %474 = add i32 %473, %97
  %475 = add i32 %474, %68
  %476 = add i32 %475, %388
  %477 = add i32 %476, %170
  %478 = add i32 %477, %120
  %479 = add i32 %478, %423
  %480 = add i32 %479, %394
  %481 = add i32 %480, %383
  %482 = add i32 %481, %368
  %483 = add i32 %482, %387
  %484 = shl i32 %483, 1
  %485 = sub i32 %45, %201
  %486 = sub i32 %485, %184
  %487 = add i32 %486, %173
  %488 = sub i32 %487, %252
  %489 = sub i32 %488, %135
  %490 = sub i32 %489, %399
  %491 = add i32 %490, %404
  %492 = add i32 %491, %341
  %493 = mul i32 %492, 5
  %494 = sub i32 %8, %282
  %495 = add i32 %494, %208
  %496 = sub i32 %495, %253
  %497 = add i32 %496, %83
  %498 = sub i32 %497, %381
  %499 = add i32 %498, %454
  %500 = sub i32 %499, %414
  %501 = add i32 %500, %453
  %502 = mul i32 %501, 3
  %503 = sub i32 %459, %313
  %504 = add i32 %503, %395
  %505 = mul i32 %504, 12
  %506 = add i32 %230, %288
  %507 = add i32 %506, %340
  %508 = shl i32 %507, 2
  %509 = sub i32 %455, %458
  %510 = mul i32 %509, 9
  %511 = mul i32 %310, 6
  %512 = add i32 %511, -6
  %513 = sub i32 %26, %0
  %514 = sub i32 %513, %1
  %515 = add i32 %514, %7
  %516 = add i32 %515, %31
  %517 = sub i32 %516, %44
  %518 = add i32 %517, %136
  %519 = add i32 %518, %29
  %520 = sub i32 %519, %66
  %521 = add i32 %520, %274
  %522 = sub i32 %521, %35
  %523 = add i32 %522, %40
  %524 = add i32 %523, %71
  %525 = add i32 %524, %106
  %526 = sub i32 %525, %12
  %527 = sub i32 %526, %109
  %528 = sub i32 %527, %122
  %529 = add i32 %528, %133
  %530 = sub i32 %529, %142
  %531 = add i32 %530, %88
  %532 = add i32 %531, %147
  %533 = add i32 %532, %33
  %534 = sub i32 %533, %150
  %535 = sub i32 %534, %151
  %536 = add i32 %535, %177
  %537 = add i32 %536, %182
  %538 = sub i32 %537, %185
  %539 = add i32 %538, %193
  %540 = add i32 %539, %49
  %541 = sub i32 %540, %238
  %542 = add i32 %541, %239
  %543 = sub i32 %542, %242
  %544 = sub i32 %543, %61
  %545 = add i32 %544, %257
  %546 = sub i32 %545, %258
  %547 = sub i32 %546, %260
  %548 = add i32 %547, %284
  %549 = sub i32 %548, %293
  %550 = add i32 %549, %296
  %551 = add i32 %550, %298
  %552 = sub i32 %551, %301
  %553 = add i32 %552, %67
  %554 = add i32 %553, %28
  %555 = add i32 %554, %34
  %556 = add i32 %555, %43
  %557 = add i32 %556, %46
  %558 = add i32 %557, %48
  %559 = add i32 %558, %51
  %560 = sub i32 %559, %52
  %561 = sub i32 %560, %59
  %562 = add i32 %561, %60
  %563 = add i32 %562, %62
  %564 = add i32 %563, %75
  %565 = add i32 %564, %78
  %566 = sub i32 %565, %79
  %567 = add i32 %566, %81
  %568 = add i32 %567, %84
  %569 = sub i32 %568, %85
  %570 = sub i32 %569, %87
  %571 = sub i32 %570, %91
  %572 = sub i32 %571, %37
  %573 = sub i32 %572, %94
  %574 = sub i32 %573, %95
  %575 = sub i32 %574, %96
  %576 = add i32 %575, %104
  %577 = add i32 %576, %111
  %578 = sub i32 %577, %113
  %579 = add i32 %578, %116
  %580 = add i32 %579, %121
  %581 = add i32 %580, %123
  %582 = add i32 %581, %124
  %583 = add i32 %582, %125
  %584 = sub i32 %583, %128
  %585 = sub i32 %584, %129
  %586 = add i32 %585, %131
  %587 = sub i32 %586, %132
  %588 = add i32 %587, %134
  %589 = add i32 %588, %137
  %590 = add i32 %589, %139
  %591 = add i32 %590, %55
  %592 = sub i32 %591, %145
  %593 = add i32 %592, %146
  %594 = add i32 %593, %149
  %595 = sub i32 %594, %154
  %596 = sub i32 %595, %155
  %597 = sub i32 %596, %156
  %598 = add i32 %597, %159
  %599 = sub i32 %598, %160
  %600 = sub i32 %599, %161
  %601 = add i32 %600, %162
  %602 = add i32 %601, %163
  %603 = sub i32 %602, %165
  %604 = sub i32 %603, %166
  %605 = sub i32 %604, %172
  %606 = add i32 %605, %174
  %607 = sub i32 %606, %175
  %608 = sub i32 %607, %176
  %609 = sub i32 %608, %178
  %610 = sub i32 %609, %179
  %611 = add i32 %610, %180
  %612 = add i32 %611, %181
  %613 = sub i32 %612, %195
  %614 = sub i32 %613, %196
  %615 = sub i32 %614, %197
  %616 = sub i32 %615, %198
  %617 = add i32 %616, %199
  %618 = sub i32 %617, %200
  %619 = sub i32 %618, %202
  %620 = add i32 %619, %203
  %621 = add i32 %620, %204
  %622 = sub i32 %621, %206
  %623 = add i32 %622, %207
  %624 = sub i32 %623, %76
  %625 = add i32 %624, %212
  %626 = sub i32 %625, %213
  %627 = add i32 %626, %214
  %628 = add i32 %627, %215
  %629 = sub i32 %628, %216
  %630 = add i32 %629, %217
  %631 = add i32 %630, %218
  %632 = sub i32 %631, %219
  %633 = add i32 %632, %220
  %634 = sub i32 %633, %221
  %635 = sub i32 %634, %224
  %636 = add i32 %635, %225
  %637 = add i32 %636, %226
  %638 = add i32 %637, %227
  %639 = sub i32 %638, %228
  %640 = add i32 %639, %233
  %641 = add i32 %640, %234
  %642 = add i32 %641, %235
  %643 = sub i32 %642, %237
  %644 = sub i32 %643, %240
  %645 = add i32 %644, %241
  %646 = sub i32 %645, %243
  %647 = add i32 %646, %69
  %648 = sub i32 %647, %244
  %649 = sub i32 %648, %245
  %650 = add i32 %649, %246
  %651 = add i32 %650, %247
  %652 = sub i32 %651, %249
  %653 = sub i32 %652, %254
  %654 = add i32 %653, %255
  %655 = add i32 %654, %256
  %656 = add i32 %655, %259
  %657 = add i32 %656, %261
  %658 = add i32 %657, %262
  %659 = add i32 %658, %263
  %660 = add i32 %659, %268
  %661 = sub i32 %660, %269
  %662 = sub i32 %661, %280
  %663 = sub i32 %662, %281
  %664 = sub i32 %663, %287
  %665 = add i32 %664, %289
  %666 = add i32 %665, %290
  %667 = sub i32 %666, %101
  %668 = sub i32 %667, %295
  %669 = sub i32 %668, %107
  %670 = add i32 %669, %297
  %671 = add i32 %670, %222
  %672 = add i32 %671, %299
  %673 = sub i32 %672, %300
  %674 = sub i32 %673, %303
  %675 = add i32 %674, %305
  %676 = sub i32 %675, %306
  %677 = add i32 %676, %309
  %678 = sub i32 %677, %39
  %679 = add i32 %678, %57
  %680 = sub i32 %679, %65
  %681 = sub i32 %680, %70
  %682 = sub i32 %681, %74
  %683 = add i32 %682, %77
  %684 = sub i32 %683, %90
  %685 = sub i32 %684, %99
  %686 = add i32 %685, %103
  %687 = add i32 %686, %108
  %688 = sub i32 %687, %115
  %689 = sub i32 %688, %127
  %690 = sub i32 %689, %141
  %691 = sub i32 %690, %144
  %692 = add i32 %691, %148
  %693 = sub i32 %692, %153
  %694 = add i32 %693, %157
  %695 = sub i32 %694, %192
  %696 = sub i32 %695, %194
  %697 = add i32 %696, %211
  %698 = add i32 %697, %223
  %699 = sub i32 %698, %232
  %700 = sub i32 %699, %251
  %701 = sub i32 %700, %265
  %702 = sub i32 %701, %267
  %703 = sub i32 %702, %271
  %704 = sub i32 %703, %276
  %705 = sub i32 %704, %278
  %706 = sub i32 %705, %279
  %707 = sub i32 %706, %286
  %708 = sub i32 %707, %292
  %709 = add i32 %708, %304
  %710 = sub i32 %709, %307
  %711 = sub i32 %710, %308
  %712 = add i32 %711, %312
  %713 = add i32 %712, %315
  %714 = add i32 %713, %317
  %715 = add i32 %714, %318
  %716 = add i32 %715, %321
  %717 = sub i32 %716, %18
  %718 = sub i32 %717, %5
  %719 = add i32 %718, %339
  %720 = add i32 %719, %441
  %721 = sub i32 %720, %273
  %722 = sub i32 %721, %333
  %723 = add i32 %722, %380
  %724 = add i32 %723, %392
  %725 = sub i32 %724, %402
  %726 = add i32 %725, %350
  %727 = sub i32 %726, %420
  %728 = add i32 %727, %421
  %729 = sub i32 %728, %422
  %730 = sub i32 %729, %424
  %731 = sub i32 %730, %330
  %732 = sub i32 %731, %431
  %733 = add i32 %732, %435
  %734 = add i32 %733, %443
  %735 = sub i32 %734, %444
  %736 = add i32 %735, %346
  %737 = add i32 %736, %448
  %738 = add i32 %737, %512
  %739 = sub i32 %738, %189
  %740 = sub i32 %739, %322
  %741 = add i32 %740, %325
  %742 = add i32 %741, %327
  %743 = sub i32 %742, %329
  %744 = add i32 %743, %334
  %745 = sub i32 %744, %338
  %746 = sub i32 %745, %343
  %747 = sub i32 %746, %344
  %748 = sub i32 %747, %345
  %749 = sub i32 %748, %349
  %750 = sub i32 %749, %351
  %751 = add i32 %750, %353
  %752 = sub i32 %751, %354
  %753 = sub i32 %752, %358
  %754 = add i32 %753, %361
  %755 = sub i32 %754, %364
  %756 = sub i32 %755, %375
  %757 = sub i32 %756, %378
  %758 = add i32 %757, %379
  %759 = sub i32 %758, %382
  %760 = add i32 %759, %384
  %761 = sub i32 %760, %386
  %762 = add i32 %761, %391
  %763 = sub i32 %762, %393
  %764 = add i32 %763, %398
  %765 = sub i32 %764, %401
  %766 = sub i32 %765, %403
  %767 = add i32 %766, %405
  %768 = sub i32 %767, %406
  %769 = sub i32 %768, %407
  %770 = add i32 %769, %412
  %771 = add i32 %770, %413
  %772 = add i32 %771, %419
  %773 = sub i32 %772, %427
  %774 = add i32 %773, %428
  %775 = add i32 %774, %429
  %776 = sub i32 %775, %430
  %777 = add i32 %776, %436
  %778 = add i32 %777, %437
  %779 = sub i32 %778, %438
  %780 = add i32 %779, %442
  %781 = sub i32 %780, %446
  %782 = sub i32 %781, %447
  %783 = sub i32 %782, %450
  %784 = add i32 %783, %451
  %785 = sub i32 %784, %332
  %786 = sub i32 %785, %348
  %787 = sub i32 %786, %357
  %788 = sub i32 %787, %360
  %789 = sub i32 %788, %373
  %790 = sub i32 %789, %377
  %791 = add i32 %790, %390
  %792 = add i32 %791, %397
  %793 = sub i32 %792, %400
  %794 = sub i32 %793, %416
  %795 = sub i32 %794, %418
  %796 = sub i32 %795, %426
  %797 = add i32 %796, %432
  %798 = add i32 %797, %434
  %799 = add i32 %798, %440
  %800 = add i32 %799, %457
  %801 = sub i32 %800, %410
  %802 = add i32 %801, %510
  %803 = add i32 %802, %505
  %804 = add i32 %803, %508
  %805 = add i32 %804, %493
  %806 = add i32 %805, %502
  %807 = add i32 %806, %484
  %808 = icmp eq i32 %25, %807
  %809 = select i1 %808, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %810 = tail call i32 @puts(i8* nonnull dereferenceable(1) %809)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
