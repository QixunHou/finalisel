digraph "DFG for'crackme' function" {
	Node0x61ac70[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x61ace0[shape=record, label="  %4 = xor i32 %1, %0"];
	Node0x61ada0[shape=record, label="  %5 = shl i32 %4, 1"];
	Node0x61ae10[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x61aeb0[shape=record, label="  %7 = mul i32 %6, -5"];
	Node0x61af20[shape=record, label="  %8 = and i32 %3, %0"];
	Node0x61afc0[shape=record, label="  %9 = shl i32 %8, 2"];
	Node0x61b060[shape=record, label="  %10 = xor i32 %9, -4"];
	Node0x61b0d0[shape=record, label="  %11 = xor i32 %4, -1"];
	Node0x61b170[shape=record, label="  %12 = mul i32 %11, -3"];
	Node0x61b1e0[shape=record, label="  %13 = and i32 %1, %0"];
	Node0x61b250[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x61b2c0[shape=record, label="  %15 = or i32 %1, %0"];
	Node0x61b330[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x61b3d0[shape=record, label="  %17 = mul i32 %16, 9"];
	Node0x61b440[shape=record, label="  %18 = and i32 %6, %1"];
	Node0x61b4b0[shape=record, label="  %19 = sub i32 %13, %8"];
	Node0x61b520[shape=record, label="  %20 = add i32 %19, %18"];
	Node0x61b5c0[shape=record, label="  %21 = mul i32 %20, 6"];
	Node0x61b630[shape=record, label="  %22 = add i32 %0, -1"];
	Node0x61b6a0[shape=record, label="  %23 = add i32 %22, %3"];
	Node0x61b710[shape=record, label="  %24 = add i32 %23, %7"];
	Node0x61b780[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x61b7f0[shape=record, label="  %26 = add i32 %25, %5"];
	Node0x61b860[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x61b8d0[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x61b940[shape=record, label="  %29 = sub i32 %28, %10"];
	Node0x61b9b0[shape=record, label="  %30 = add i32 %29, %21"];
	Node0x61ba20[shape=record, label="  %31 = icmp eq i32 %30, %1"];
	Node0x5bb268[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x61c0d0[shape=record, label="  %33 = tail call i32 @puts(i8* nonnull dereferenceable(1) %32)"];
	Node0x61c120[shape=record, label="  ret void"];
	Node0x61ac70 -> Node0x61ace0;
	Node0x61ace0 -> Node0x61ada0;
	Node0x61ada0 -> Node0x61ae10;
	Node0x61ae10 -> Node0x61aeb0;
	Node0x61aeb0 -> Node0x61af20;
	Node0x61af20 -> Node0x61afc0;
	Node0x61afc0 -> Node0x61b060;
	Node0x61b060 -> Node0x61b0d0;
	Node0x61b0d0 -> Node0x61b170;
	Node0x61b170 -> Node0x61b1e0;
	Node0x61b1e0 -> Node0x61b250;
	Node0x61b250 -> Node0x61b2c0;
	Node0x61b2c0 -> Node0x61b330;
	Node0x61b330 -> Node0x61b3d0;
	Node0x61b3d0 -> Node0x61b440;
	Node0x61b440 -> Node0x61b4b0;
	Node0x61b4b0 -> Node0x61b520;
	Node0x61b520 -> Node0x61b5c0;
	Node0x61b5c0 -> Node0x61b630;
	Node0x61b630 -> Node0x61b6a0;
	Node0x61b6a0 -> Node0x61b710;
	Node0x61b710 -> Node0x61b780;
	Node0x61b780 -> Node0x61b7f0;
	Node0x61b7f0 -> Node0x61b860;
	Node0x61b860 -> Node0x61b8d0;
	Node0x61b8d0 -> Node0x61b940;
	Node0x61b940 -> Node0x61b9b0;
	Node0x61b9b0 -> Node0x61ba20;
	Node0x61ba20 -> Node0x5bb268;
	Node0x5bb268 -> Node0x61c0d0;
	Node0x61c0d0 -> Node0x61c120;
edge [color=red]
	Node0x61ace0 -> Node0x61ada0;
	Node0x61ae10 -> Node0x61aeb0;
	Node0x61ac70 -> Node0x61af20;
	Node0x61af20 -> Node0x61afc0;
	Node0x61afc0 -> Node0x61b060;
	Node0x61ace0 -> Node0x61b0d0;
	Node0x61b0d0 -> Node0x61b170;
	Node0x61b1e0 -> Node0x61b250;
	Node0x61b2c0 -> Node0x61b330;
	Node0x61b330 -> Node0x61b3d0;
	Node0x61ae10 -> Node0x61b440;
	Node0x61b1e0 -> Node0x61b4b0;
	Node0x61af20 -> Node0x61b4b0;
	Node0x61b4b0 -> Node0x61b520;
	Node0x61b440 -> Node0x61b520;
	Node0x61b520 -> Node0x61b5c0;
	Node0x61b630 -> Node0x61b6a0;
	Node0x61ac70 -> Node0x61b6a0;
	Node0x61b6a0 -> Node0x61b710;
	Node0x61aeb0 -> Node0x61b710;
	Node0x61b710 -> Node0x61b780;
	Node0x61b250 -> Node0x61b780;
	Node0x61b780 -> Node0x61b7f0;
	Node0x61ada0 -> Node0x61b7f0;
	Node0x61b7f0 -> Node0x61b860;
	Node0x61b170 -> Node0x61b860;
	Node0x61b860 -> Node0x61b8d0;
	Node0x61b3d0 -> Node0x61b8d0;
	Node0x61b8d0 -> Node0x61b940;
	Node0x61b060 -> Node0x61b940;
	Node0x61b940 -> Node0x61b9b0;
	Node0x61b5c0 -> Node0x61b9b0;
	Node0x61b9b0 -> Node0x61ba20;
	Node0x61ba20 -> Node0x5bb268;
	Node0x5bb268 -> Node0x61c0d0;
}
