; ModuleID = '../.././c_source_file/0786_path_condition_crackme.c'
source_filename = "../.././c_source_file/0786_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = xor i32 %4, %3
  %7 = shl i32 %6, 1
  %8 = xor i32 %7, -2
  %9 = and i32 %1, %0
  %10 = xor i32 %2, %1
  %11 = xor i32 %10, -1
  %12 = or i32 %9, %11
  %13 = sub i32 -2, %12
  %14 = add i32 %13, %8
  %15 = shl i32 %4, 1
  %16 = xor i32 %4, -1
  %17 = and i32 %16, %3
  %18 = shl i32 %17, 1
  %19 = xor i32 %18, -2
  %20 = or i32 %16, %3
  %21 = and i32 %4, %3
  %22 = xor i32 %21, -1
  %23 = or i32 %4, %3
  %24 = xor i32 %23, -1
  %25 = or i32 %2, %0
  %26 = xor i32 %1, %0
  %27 = and i32 %25, %26
  %28 = and i32 %2, %0
  %29 = or i32 %28, %1
  %30 = or i32 %1, %0
  %31 = and i32 %10, %30
  %32 = or i32 %28, %26
  %33 = xor i32 %2, -1
  %34 = and i32 %33, %1
  %35 = xor i32 %1, -1
  %36 = xor i32 %2, %0
  %37 = and i32 %36, %35
  %38 = or i32 %33, %1
  %39 = or i32 %35, %0
  %40 = xor i32 %39, -1
  %41 = or i32 %40, %2
  %42 = xor i32 %34, %0
  %43 = xor i32 %9, -1
  %44 = xor i32 %36, -1
  %45 = and i32 %44, %43
  %46 = xor i32 %25, -1
  %47 = xor i32 %26, -1
  %48 = or i32 %46, %47
  %49 = xor i32 %0, -1
  %50 = and i32 %2, %1
  %51 = and i32 %50, %49
  %52 = and i32 %10, %0
  %53 = xor i32 %52, -1
  %54 = xor i32 %51, %53
  %55 = and i32 %36, %30
  %56 = and i32 %35, %0
  %57 = or i32 %56, %2
  %58 = or i32 %2, %1
  %59 = and i32 %58, %0
  %60 = xor i32 %59, 2147483647
  %61 = xor i32 %60, %51
  %62 = xor i32 %30, -1
  %63 = xor i32 %62, %2
  %64 = and i32 %38, %0
  %65 = or i32 %36, %35
  %66 = xor i32 %56, %2
  %67 = xor i32 %50, -1
  %68 = and i32 %67, %49
  %69 = or i32 %47, %2
  %70 = xor i32 %56, -1
  %71 = and i32 %36, %70
  %72 = xor i32 %56, %67
  %73 = or i32 %28, %40
  %74 = and i32 %10, %39
  %75 = or i32 %10, %56
  %76 = xor i32 %50, %0
  %77 = shl i32 %76, 1
  %78 = and i32 %11, %43
  %79 = or i32 %33, %0
  %80 = xor i32 %79, -1
  %81 = or i32 %80, %47
  %82 = or i32 %80, %35
  %83 = or i32 %44, %40
  %84 = and i32 %33, %0
  %85 = or i32 %84, %47
  %86 = or i32 %44, %47
  %87 = and i32 %30, %33
  %88 = and i32 %50, %0
  %89 = and i32 %58, %49
  %90 = xor i32 %88, -1
  %91 = xor i32 %89, %90
  %92 = or i32 %46, %1
  %93 = or i32 %38, %0
  %94 = and i32 %26, %2
  %95 = or i32 %28, %35
  %96 = or i32 %56, %44
  %97 = xor i32 %34, -1
  %98 = or i32 %97, %0
  %99 = xor i32 %79, %1
  %100 = shl i32 %62, 1
  %101 = and i32 %43, %2
  %102 = xor i32 %30, %2
  %103 = and i32 %36, %47
  %104 = and i32 %25, %1
  %105 = shl i32 %104, 1
  %106 = xor i32 %56, %97
  %107 = or i32 %36, %40
  %108 = xor i32 %58, %9
  %109 = xor i32 %28, -1
  %110 = add i32 %28, 1
  %111 = or i32 %9, %46
  %112 = shl i32 %111, 1
  %113 = xor i32 %38, -1
  %114 = or i32 %113, %49
  %115 = xor i32 %58, %0
  %116 = and i32 %39, %11
  %117 = or i32 %36, %62
  %118 = xor i32 %28, %58
  %119 = shl i32 %118, 1
  %120 = or i32 %9, %2
  %121 = and i32 %44, %70
  %122 = xor i32 %84, -1
  %123 = and i32 %122, %47
  %124 = xor i32 %79, %9
  %125 = xor i32 %28, %30
  %126 = or i32 %51, %52
  %127 = or i32 %10, %49
  %128 = shl i32 %127, 2
  %129 = xor i32 %115, %90
  %130 = or i32 %36, %26
  %131 = and i32 %109, %1
  %132 = and i32 %38, %49
  %133 = xor i32 %46, %1
  %134 = xor i32 %58, -1
  %135 = or i32 %9, %134
  %136 = and i32 %35, %2
  %137 = and i32 %136, %0
  %138 = or i32 %35, %2
  %139 = xor i32 %138, %0
  %140 = or i32 %137, %139
  %141 = shl i32 %140, 1
  %142 = or i32 %9, %113
  %143 = xor i32 %9, %2
  %144 = and i32 %36, %1
  %145 = and i32 %122, %1
  %146 = shl i32 %145, 1
  %147 = or i32 %26, %80
  %148 = or i32 %84, %113
  %149 = and i32 %136, %49
  %150 = and i32 %138, %0
  %151 = or i32 %149, %150
  %152 = xor i32 %84, %67
  %153 = and i32 %39, %2
  %154 = and i32 %30, %11
  %155 = xor i32 %139, 2147483647
  %156 = xor i32 %155, %137
  %157 = or i32 %34, %56
  %158 = xor i32 %38, %0
  %159 = and i32 %44, %47
  %160 = or i32 %36, %9
  %161 = or i32 %67, %0
  %162 = xor i32 %25, %1
  %163 = and i32 %70, %2
  %164 = shl i32 %163, 1
  %165 = xor i32 %10, %0
  %166 = or i32 %137, %165
  %167 = or i32 %97, %49
  %168 = and i32 %33, %70
  %169 = or i32 %28, %62
  %170 = shl i32 %169, 1
  %171 = and i32 %25, %47
  %172 = and i32 %39, %33
  %173 = or i32 %50, %56
  %174 = or i32 %11, %0
  %175 = xor i32 %138, -1
  %176 = or i32 %175, %0
  %177 = xor i32 %137, %176
  %178 = or i32 %134, %0
  %179 = shl i32 %178, 1
  %180 = and i32 %36, %39
  %181 = and i32 %97, %49
  %182 = or i32 %134, %49
  %183 = or i32 %58, %0
  %184 = shl i32 %183, 1
  %185 = or i32 %80, %1
  %186 = and i32 %26, %122
  %187 = xor i32 %84, %38
  %188 = and i32 %26, %33
  %189 = or i32 %28, %47
  %190 = shl i32 %189, 2
  %191 = or i32 %26, %33
  %192 = shl i32 %191, 1
  %193 = and i32 %44, %1
  %194 = xor i32 %109, %1
  %195 = or i32 %26, %44
  %196 = xor i32 %67, %0
  %197 = or i32 %62, %2
  %198 = or i32 %84, %1
  %199 = xor i32 %97, %0
  %200 = or i32 %88, %89
  %201 = or i32 %28, %34
  %202 = shl i32 %201, 1
  %203 = xor i32 %70, %2
  %204 = shl i32 %203, 1
  %205 = and i32 %11, %70
  %206 = xor i32 %122, %1
  %207 = and i32 %10, %49
  %208 = or i32 %50, %49
  %209 = shl i32 %208, 1
  %210 = or i32 %46, %35
  %211 = or i32 %9, %33
  %212 = shl i32 %211, 1
  %213 = and i32 %134, %49
  %214 = and i32 %34, %49
  %215 = mul i32 %214, 19
  %216 = and i32 %134, %0
  %217 = shl i32 %216, 3
  %218 = and i32 %34, %0
  %219 = mul i32 %218, 28
  %220 = and i32 %113, %49
  %221 = mul i32 %220, 21
  %222 = mul i32 %51, 11
  %223 = and i32 %113, %0
  %224 = add i32 %210, %197
  %225 = add i32 %224, %181
  %226 = add i32 %225, %157
  %227 = add i32 %226, %135
  %228 = add i32 %227, %130
  %229 = add i32 %228, %98
  %230 = add i32 %229, %64
  %231 = add i32 %230, %151
  %232 = add i32 %231, %61
  %233 = add i32 %232, %156
  %234 = shl i32 %233, 1
  %235 = add i32 %205, %26
  %236 = add i32 %235, %75
  %237 = add i32 %236, %21
  %238 = shl i32 %237, 2
  %239 = add i32 %213, %24
  %240 = add i32 %239, %54
  %241 = mul i32 %240, 5
  %242 = sub i32 %69, %79
  %243 = sub i32 %242, %68
  %244 = mul i32 %243, 3
  %245 = add i32 %88, %223
  %246 = mul i32 %245, 15
  %247 = sub i32 %49, %1
  %248 = add i32 %247, %35
  %249 = sub i32 %248, %9
  %250 = sub i32 %249, %2
  %251 = sub i32 %250, %56
  %252 = add i32 %251, %70
  %253 = add i32 %252, %33
  %254 = sub i32 %253, %34
  %255 = sub i32 %254, %41
  %256 = sub i32 %255, %57
  %257 = add i32 %256, %63
  %258 = sub i32 %257, %25
  %259 = sub i32 %258, %66
  %260 = add i32 %259, %87
  %261 = add i32 %260, %94
  %262 = sub i32 %261, %28
  %263 = sub i32 %262, %100
  %264 = sub i32 %263, %101
  %265 = add i32 %264, %102
  %266 = add i32 %265, %110
  %267 = sub i32 %266, %58
  %268 = sub i32 %267, %120
  %269 = sub i32 %268, %50
  %270 = sub i32 %269, %143
  %271 = sub i32 %270, %153
  %272 = sub i32 %271, %168
  %273 = sub i32 %272, %10
  %274 = sub i32 %273, %172
  %275 = sub i32 %274, %188
  %276 = add i32 %275, %36
  %277 = add i32 %276, %27
  %278 = sub i32 %277, %29
  %279 = add i32 %278, %31
  %280 = add i32 %279, %32
  %281 = sub i32 %280, %37
  %282 = sub i32 %281, %42
  %283 = add i32 %282, %45
  %284 = add i32 %283, %48
  %285 = add i32 %284, %55
  %286 = sub i32 %285, %65
  %287 = sub i32 %286, %71
  %288 = sub i32 %287, %72
  %289 = sub i32 %288, %73
  %290 = sub i32 %289, %74
  %291 = sub i32 %290, %78
  %292 = add i32 %291, %81
  %293 = add i32 %292, %82
  %294 = add i32 %293, %83
  %295 = sub i32 %294, %85
  %296 = sub i32 %295, %86
  %297 = add i32 %296, %92
  %298 = sub i32 %297, %93
  %299 = add i32 %298, %95
  %300 = add i32 %299, %96
  %301 = add i32 %300, %99
  %302 = sub i32 %301, %103
  %303 = add i32 %302, %106
  %304 = add i32 %303, %107
  %305 = sub i32 %304, %108
  %306 = sub i32 %305, %114
  %307 = sub i32 %306, %115
  %308 = add i32 %307, %116
  %309 = sub i32 %308, %117
  %310 = sub i32 %309, %121
  %311 = add i32 %310, %123
  %312 = sub i32 %311, %124
  %313 = sub i32 %312, %125
  %314 = sub i32 %313, %131
  %315 = sub i32 %314, %132
  %316 = add i32 %315, %133
  %317 = sub i32 %316, %142
  %318 = sub i32 %317, %144
  %319 = sub i32 %318, %147
  %320 = add i32 %319, %148
  %321 = add i32 %320, %59
  %322 = sub i32 %321, %152
  %323 = add i32 %322, %154
  %324 = add i32 %323, %158
  %325 = sub i32 %324, %159
  %326 = sub i32 %325, %160
  %327 = sub i32 %326, %161
  %328 = sub i32 %327, %162
  %329 = sub i32 %328, %164
  %330 = sub i32 %329, %167
  %331 = sub i32 %330, %171
  %332 = sub i32 %331, %173
  %333 = sub i32 %332, %174
  %334 = sub i32 %333, %180
  %335 = sub i32 %334, %182
  %336 = sub i32 %335, %185
  %337 = add i32 %336, %186
  %338 = add i32 %337, %187
  %339 = sub i32 %338, %192
  %340 = sub i32 %339, %193
  %341 = sub i32 %340, %194
  %342 = add i32 %341, %195
  %343 = sub i32 %342, %196
  %344 = sub i32 %343, %198
  %345 = add i32 %344, %199
  %346 = sub i32 %345, %204
  %347 = add i32 %346, %206
  %348 = sub i32 %347, %207
  %349 = sub i32 %348, %212
  %350 = add i32 %349, %15
  %351 = add i32 %350, %20
  %352 = add i32 %351, %22
  %353 = sub i32 %352, %17
  %354 = sub i32 %353, %77
  %355 = sub i32 %354, %91
  %356 = sub i32 %355, %105
  %357 = sub i32 %356, %112
  %358 = sub i32 %357, %119
  %359 = add i32 %358, %126
  %360 = sub i32 %359, %128
  %361 = add i32 %360, %129
  %362 = sub i32 %361, %146
  %363 = sub i32 %362, %166
  %364 = sub i32 %363, %170
  %365 = add i32 %364, %177
  %366 = sub i32 %365, %179
  %367 = sub i32 %366, %184
  %368 = sub i32 %367, %190
  %369 = add i32 %368, %200
  %370 = sub i32 %369, %202
  %371 = sub i32 %370, %209
  %372 = add i32 %371, %215
  %373 = sub i32 %372, %217
  %374 = add i32 %373, %219
  %375 = add i32 %374, %221
  %376 = add i32 %375, %222
  %377 = add i32 %376, %7
  %378 = sub i32 %377, %141
  %379 = add i32 %378, %246
  %380 = sub i32 %379, %19
  %381 = add i32 %380, %244
  %382 = add i32 %381, %241
  %383 = add i32 %382, %238
  %384 = add i32 %383, %234
  %385 = icmp eq i32 %14, %384
  %386 = select i1 %385, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %387 = tail call i32 @puts(i8* nonnull dereferenceable(1) %386)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
