digraph "DFG for'main' function" {
	Node0x204a968[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x204a9e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x204aa78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x204aed8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x204afb8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x204b0d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x204b310[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x204b3c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x204c338[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x204c9c0[shape=record, label="  %8 = mul i32 %6, -2"];
	Node0x204ca30[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x204caa0[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0x204cb10[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x204cb80[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x204cbf0[shape=record, label="  %13 = or i32 %6, %12"];
	Node0x204cc60[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x204ccd0[shape=record, label="  %15 = and i32 %6, %12"];
	Node0x204cd40[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0x204cdb0[shape=record, label="  %17 = mul i32 %11, -5"];
	Node0x204ce20[shape=record, label="  %18 = add i32 %6, 1"];
	Node0x204ce90[shape=record, label="  %19 = sub i32 %18, %9"];
	Node0x204cf00[shape=record, label="  %20 = add i32 %19, %11"];
	Node0x204cf70[shape=record, label="  %21 = add i32 %20, %13"];
	Node0x204cfe0[shape=record, label="  %22 = add i32 %21, %14"];
	Node0x204d050[shape=record, label="  %23 = sub i32 %22, %16"];
	Node0x204d0c0[shape=record, label="  %24 = add i32 %23, %17"];
	Node0x204d130[shape=record, label="  %25 = icmp eq i32 %10, %24"];
	Node0x1feb9d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x204d1c0[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0x204d418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x204d578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x204d638[shape=record, label="  ret i32 0"];
	Node0x204a968 -> Node0x204a9e8;
	Node0x204a9e8 -> Node0x204aa78;
	Node0x204aa78 -> Node0x204aed8;
	Node0x204aed8 -> Node0x204afb8;
	Node0x204afb8 -> Node0x204b0d8;
	Node0x204b0d8 -> Node0x204b310;
	Node0x204b310 -> Node0x204b3c8;
	Node0x204b3c8 -> Node0x204c338;
	Node0x204c338 -> Node0x204c9c0;
	Node0x204c9c0 -> Node0x204ca30;
	Node0x204ca30 -> Node0x204caa0;
	Node0x204caa0 -> Node0x204cb10;
	Node0x204cb10 -> Node0x204cb80;
	Node0x204cb80 -> Node0x204cbf0;
	Node0x204cbf0 -> Node0x204cc60;
	Node0x204cc60 -> Node0x204ccd0;
	Node0x204ccd0 -> Node0x204cd40;
	Node0x204cd40 -> Node0x204cdb0;
	Node0x204cdb0 -> Node0x204ce20;
	Node0x204ce20 -> Node0x204ce90;
	Node0x204ce90 -> Node0x204cf00;
	Node0x204cf00 -> Node0x204cf70;
	Node0x204cf70 -> Node0x204cfe0;
	Node0x204cfe0 -> Node0x204d050;
	Node0x204d050 -> Node0x204d0c0;
	Node0x204d0c0 -> Node0x204d130;
	Node0x204d130 -> Node0x1feb9d8;
	Node0x1feb9d8 -> Node0x204d1c0;
	Node0x204d1c0 -> Node0x204d418;
	Node0x204d418 -> Node0x204d578;
	Node0x204d578 -> Node0x204d638;
edge [color=red]
	Node0x204a968 -> Node0x204aa78;
	Node0x204aa78 -> Node0x204aed8;
	Node0x204a9e8 -> Node0x204afb8;
	Node0x204afb8 -> Node0x204b0d8;
	Node0x204a968 -> Node0x204b310;
	Node0x204a9e8 -> Node0x204b310;
	Node0x204a968 -> Node0x204b3c8;
	Node0x204a9e8 -> Node0x204c338;
	Node0x204b3c8 -> Node0x204c9c0;
	Node0x204c338 -> Node0x204ca30;
	Node0x204b3c8 -> Node0x204ca30;
	Node0x204c9c0 -> Node0x204caa0;
	Node0x204ca30 -> Node0x204caa0;
	Node0x204c338 -> Node0x204cb10;
	Node0x204b3c8 -> Node0x204cb10;
	Node0x204c338 -> Node0x204cb80;
	Node0x204b3c8 -> Node0x204cbf0;
	Node0x204cb80 -> Node0x204cbf0;
	Node0x204c338 -> Node0x204cc60;
	Node0x204b3c8 -> Node0x204cc60;
	Node0x204b3c8 -> Node0x204ccd0;
	Node0x204cb80 -> Node0x204ccd0;
	Node0x204ccd0 -> Node0x204cd40;
	Node0x204cb10 -> Node0x204cdb0;
	Node0x204b3c8 -> Node0x204ce20;
	Node0x204ce20 -> Node0x204ce90;
	Node0x204ca30 -> Node0x204ce90;
	Node0x204ce90 -> Node0x204cf00;
	Node0x204cb10 -> Node0x204cf00;
	Node0x204cf00 -> Node0x204cf70;
	Node0x204cbf0 -> Node0x204cf70;
	Node0x204cf70 -> Node0x204cfe0;
	Node0x204cc60 -> Node0x204cfe0;
	Node0x204cfe0 -> Node0x204d050;
	Node0x204cd40 -> Node0x204d050;
	Node0x204d050 -> Node0x204d0c0;
	Node0x204cdb0 -> Node0x204d0c0;
	Node0x204caa0 -> Node0x204d130;
	Node0x204d0c0 -> Node0x204d130;
	Node0x204d130 -> Node0x1feb9d8;
	Node0x1feb9d8 -> Node0x204d1c0;
	Node0x204afb8 -> Node0x204d418;
	Node0x204aa78 -> Node0x204d578;
}
