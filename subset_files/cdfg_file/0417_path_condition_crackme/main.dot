digraph "DFG for'main' function" {
	Node0x13fec98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x13fed18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x13feda8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x13fee08[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x13feeb8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x13ff2e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13ff3c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x13ff4c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13ff588[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x13ff638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x13ff6f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x13ff7a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x13f97a0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x13ff9a8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1400918[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1400f88[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1400fe8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x14010f8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1401358[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14014b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14015c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14016d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1401798[shape=record, label="  ret i32 0"];
	Node0x13fec98 -> Node0x13fed18;
	Node0x13fed18 -> Node0x13feda8;
	Node0x13feda8 -> Node0x13fee08;
	Node0x13fee08 -> Node0x13feeb8;
	Node0x13feeb8 -> Node0x13ff2e8;
	Node0x13ff2e8 -> Node0x13ff3c8;
	Node0x13ff3c8 -> Node0x13ff4c8;
	Node0x13ff4c8 -> Node0x13ff588;
	Node0x13ff588 -> Node0x13ff638;
	Node0x13ff638 -> Node0x13ff6f8;
	Node0x13ff6f8 -> Node0x13ff7a8;
	Node0x13ff7a8 -> Node0x13f97a0;
	Node0x13f97a0 -> Node0x13ff9a8;
	Node0x13ff9a8 -> Node0x1400918;
	Node0x1400918 -> Node0x1400f88;
	Node0x1400f88 -> Node0x1400fe8;
	Node0x1400fe8 -> Node0x14010f8;
	Node0x14010f8 -> Node0x1401358;
	Node0x1401358 -> Node0x14014b8;
	Node0x14014b8 -> Node0x14015c8;
	Node0x14015c8 -> Node0x14016d8;
	Node0x14016d8 -> Node0x1401798;
edge [color=red]
	Node0x13fec98 -> Node0x13feeb8;
	Node0x13feeb8 -> Node0x13ff2e8;
	Node0x13fed18 -> Node0x13ff3c8;
	Node0x13ff3c8 -> Node0x13ff4c8;
	Node0x13feda8 -> Node0x13ff588;
	Node0x13ff588 -> Node0x13ff638;
	Node0x13fee08 -> Node0x13ff6f8;
	Node0x13ff6f8 -> Node0x13ff7a8;
	Node0x13fec98 -> Node0x13f97a0;
	Node0x13fed18 -> Node0x13f97a0;
	Node0x13feda8 -> Node0x13f97a0;
	Node0x13fee08 -> Node0x13f97a0;
	Node0x13fec98 -> Node0x13ff9a8;
	Node0x13fed18 -> Node0x1400918;
	Node0x13feda8 -> Node0x1400f88;
	Node0x13fee08 -> Node0x1400fe8;
	Node0x13ff9a8 -> Node0x14010f8;
	Node0x1400918 -> Node0x14010f8;
	Node0x1400f88 -> Node0x14010f8;
	Node0x1400fe8 -> Node0x14010f8;
	Node0x13ff6f8 -> Node0x1401358;
	Node0x13ff588 -> Node0x14014b8;
	Node0x13ff3c8 -> Node0x14015c8;
	Node0x13feeb8 -> Node0x14016d8;
}
