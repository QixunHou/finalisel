digraph "DFG for'crackme' function" {
	Node0x623020[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x623090[shape=record, label="  %6 = xor i32 %5, %1"];
	Node0x623100[shape=record, label="  %7 = xor i32 %3, -1"];
	Node0x623170[shape=record, label="  %8 = add i32 %6, %7"];
	Node0x6231e0[shape=record, label="  %9 = and i32 %2, %1"];
	Node0x623250[shape=record, label="  %10 = or i32 %2, %1"];
	Node0x6232f0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x623360[shape=record, label="  %12 = or i32 %5, %1"];
	Node0x6233d0[shape=record, label="  %13 = and i32 %5, %1"];
	Node0x623440[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x6234b0[shape=record, label="  %15 = xor i32 %3, %0"];
	Node0x623520[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x6235c0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x623660[shape=record, label="  %18 = xor i32 %3, 1073741823"];
	Node0x6236d0[shape=record, label="  %19 = or i32 %18, %0"];
	Node0x623770[shape=record, label="  %20 = shl i32 %19, 2"];
	Node0x623810[shape=record, label="  %21 = xor i32 %3, 2147483647"];
	Node0x623880[shape=record, label="  %22 = and i32 %21, %0"];
	Node0x6238f0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x623960[shape=record, label="  %24 = sub i32 %13, %10"];
	Node0x623a00[shape=record, label="  %25 = mul i32 %24, 3"];
	Node0x623a70[shape=record, label="  %26 = sub i32 1, %0"];
	Node0x623ae0[shape=record, label="  %27 = sub i32 %26, %1"];
	Node0x623b50[shape=record, label="  %28 = add i32 %27, %2"];
	Node0x623bc0[shape=record, label="  %29 = add i32 %28, %9"];
	Node0x623c30[shape=record, label="  %30 = add i32 %29, %12"];
	Node0x623ca0[shape=record, label="  %31 = add i32 %30, %11"];
	Node0x623d10[shape=record, label="  %32 = sub i32 %31, %14"];
	Node0x623f90[shape=record, label="  %33 = add i32 %32, %15"];
	Node0x624000[shape=record, label="  %34 = add i32 %33, %25"];
	Node0x624070[shape=record, label="  %35 = sub i32 %34, %17"];
	Node0x6240e0[shape=record, label="  %36 = add i32 %35, %20"];
	Node0x624150[shape=record, label="  %37 = sub i32 %36, %23"];
	Node0x6241c0[shape=record, label="  %38 = icmp eq i32 %8, %37"];
	Node0x5c3268[shape=record, label="  %39 = select i1 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x624660[shape=record, label="  %40 = tail call i32 @puts(i8* nonnull dereferenceable(1) %39)"];
	Node0x6246b0[shape=record, label="  ret void"];
	Node0x623020 -> Node0x623090;
	Node0x623090 -> Node0x623100;
	Node0x623100 -> Node0x623170;
	Node0x623170 -> Node0x6231e0;
	Node0x6231e0 -> Node0x623250;
	Node0x623250 -> Node0x6232f0;
	Node0x6232f0 -> Node0x623360;
	Node0x623360 -> Node0x6233d0;
	Node0x6233d0 -> Node0x623440;
	Node0x623440 -> Node0x6234b0;
	Node0x6234b0 -> Node0x623520;
	Node0x623520 -> Node0x6235c0;
	Node0x6235c0 -> Node0x623660;
	Node0x623660 -> Node0x6236d0;
	Node0x6236d0 -> Node0x623770;
	Node0x623770 -> Node0x623810;
	Node0x623810 -> Node0x623880;
	Node0x623880 -> Node0x6238f0;
	Node0x6238f0 -> Node0x623960;
	Node0x623960 -> Node0x623a00;
	Node0x623a00 -> Node0x623a70;
	Node0x623a70 -> Node0x623ae0;
	Node0x623ae0 -> Node0x623b50;
	Node0x623b50 -> Node0x623bc0;
	Node0x623bc0 -> Node0x623c30;
	Node0x623c30 -> Node0x623ca0;
	Node0x623ca0 -> Node0x623d10;
	Node0x623d10 -> Node0x623f90;
	Node0x623f90 -> Node0x624000;
	Node0x624000 -> Node0x624070;
	Node0x624070 -> Node0x6240e0;
	Node0x6240e0 -> Node0x624150;
	Node0x624150 -> Node0x6241c0;
	Node0x6241c0 -> Node0x5c3268;
	Node0x5c3268 -> Node0x624660;
	Node0x624660 -> Node0x6246b0;
edge [color=red]
	Node0x623020 -> Node0x623090;
	Node0x623090 -> Node0x623170;
	Node0x623100 -> Node0x623170;
	Node0x623250 -> Node0x6232f0;
	Node0x623020 -> Node0x623360;
	Node0x623020 -> Node0x6233d0;
	Node0x6233d0 -> Node0x623440;
	Node0x6234b0 -> Node0x623520;
	Node0x623520 -> Node0x6235c0;
	Node0x623660 -> Node0x6236d0;
	Node0x6236d0 -> Node0x623770;
	Node0x623810 -> Node0x623880;
	Node0x623880 -> Node0x6238f0;
	Node0x6233d0 -> Node0x623960;
	Node0x623250 -> Node0x623960;
	Node0x623960 -> Node0x623a00;
	Node0x623a70 -> Node0x623ae0;
	Node0x623ae0 -> Node0x623b50;
	Node0x623b50 -> Node0x623bc0;
	Node0x6231e0 -> Node0x623bc0;
	Node0x623bc0 -> Node0x623c30;
	Node0x623360 -> Node0x623c30;
	Node0x623c30 -> Node0x623ca0;
	Node0x6232f0 -> Node0x623ca0;
	Node0x623ca0 -> Node0x623d10;
	Node0x623440 -> Node0x623d10;
	Node0x623d10 -> Node0x623f90;
	Node0x6234b0 -> Node0x623f90;
	Node0x623f90 -> Node0x624000;
	Node0x623a00 -> Node0x624000;
	Node0x624000 -> Node0x624070;
	Node0x6235c0 -> Node0x624070;
	Node0x624070 -> Node0x6240e0;
	Node0x623770 -> Node0x6240e0;
	Node0x6240e0 -> Node0x624150;
	Node0x6238f0 -> Node0x624150;
	Node0x623170 -> Node0x6241c0;
	Node0x624150 -> Node0x6241c0;
	Node0x6241c0 -> Node0x5c3268;
	Node0x5c3268 -> Node0x624660;
}
