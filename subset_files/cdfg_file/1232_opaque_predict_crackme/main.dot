digraph "DFG for'main' function" {
	Node0x804278[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x8042f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x804388[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x8043e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x804868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x804948[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x804a48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x804b08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x804bb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x804e18[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x804ed8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x805e48[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x8064b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x8065b0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x8067b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x806918[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x806a28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x806ae8[shape=record, label="  ret i32 0"];
	Node0x804278 -> Node0x8042f8;
	Node0x8042f8 -> Node0x804388;
	Node0x804388 -> Node0x8043e8;
	Node0x8043e8 -> Node0x804868;
	Node0x804868 -> Node0x804948;
	Node0x804948 -> Node0x804a48;
	Node0x804a48 -> Node0x804b08;
	Node0x804b08 -> Node0x804bb8;
	Node0x804bb8 -> Node0x804e18;
	Node0x804e18 -> Node0x804ed8;
	Node0x804ed8 -> Node0x805e48;
	Node0x805e48 -> Node0x8064b8;
	Node0x8064b8 -> Node0x8065b0;
	Node0x8065b0 -> Node0x8067b8;
	Node0x8067b8 -> Node0x806918;
	Node0x806918 -> Node0x806a28;
	Node0x806a28 -> Node0x806ae8;
edge [color=red]
	Node0x804278 -> Node0x8043e8;
	Node0x8043e8 -> Node0x804868;
	Node0x8042f8 -> Node0x804948;
	Node0x804948 -> Node0x804a48;
	Node0x804388 -> Node0x804b08;
	Node0x804b08 -> Node0x804bb8;
	Node0x804278 -> Node0x804e18;
	Node0x8042f8 -> Node0x804e18;
	Node0x804388 -> Node0x804e18;
	Node0x804278 -> Node0x804ed8;
	Node0x8042f8 -> Node0x805e48;
	Node0x804388 -> Node0x8064b8;
	Node0x804ed8 -> Node0x8065b0;
	Node0x805e48 -> Node0x8065b0;
	Node0x8064b8 -> Node0x8065b0;
	Node0x804b08 -> Node0x8067b8;
	Node0x804948 -> Node0x806918;
	Node0x8043e8 -> Node0x806a28;
}
