; ModuleID = '../.././c_source_file/1600_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1600_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, %0
  %8 = or i32 %7, %1
  %9 = and i32 %5, %4
  %10 = xor i32 %4, %3
  %11 = or i32 %9, %10
  %12 = sub i32 %11, %8
  %13 = xor i32 %5, -1
  %14 = and i32 %13, %4
  %15 = xor i32 %14, -1
  %16 = xor i32 %10, -1
  %17 = and i32 %15, %16
  %18 = add i32 %12, %17
  %19 = xor i32 %2, -1
  %20 = and i32 %19, %0
  %21 = or i32 %19, %1
  %22 = xor i32 %21, -1
  %23 = or i32 %20, %22
  %24 = or i32 %1, %0
  %25 = xor i32 %24, -1
  %26 = or i32 %7, %25
  %27 = xor i32 %20, %1
  %28 = shl i32 %27, 1
  %29 = xor i32 %1, -1
  %30 = and i32 %29, %2
  %31 = and i32 %30, %0
  %32 = xor i32 %2, %1
  %33 = or i32 %32, %0
  %34 = xor i32 %33, -1
  %35 = or i32 %31, %34
  %36 = xor i32 %1, %0
  %37 = xor i32 %36, -1
  %38 = or i32 %37, %2
  %39 = shl i32 %25, 1
  %40 = or i32 %2, %0
  %41 = xor i32 %40, %1
  %42 = and i32 %2, %0
  %43 = xor i32 %42, %1
  %44 = or i32 %19, %0
  %45 = xor i32 %44, -1
  %46 = and i32 %1, %0
  %47 = or i32 %46, %22
  %48 = or i32 %25, %2
  %49 = or i32 %29, %0
  %50 = xor i32 %42, %49
  %51 = xor i32 %20, -1
  %52 = and i32 %51, %37
  %53 = xor i32 %32, -1
  %54 = and i32 %49, %53
  %55 = xor i32 %7, -1
  %56 = and i32 %55, %1
  %57 = and i32 %32, %49
  %58 = and i32 %2, %1
  %59 = and i32 %32, %24
  %60 = shl i32 %59, 1
  %61 = xor i32 %46, -1
  %62 = and i32 %61, %2
  %63 = and i32 %29, %0
  %64 = or i32 %63, %19
  %65 = shl i32 %64, 1
  %66 = xor i32 %0, -1
  %67 = and i32 %53, %66
  %68 = or i32 %2, %1
  %69 = xor i32 %68, %46
  %70 = or i32 %29, %2
  %71 = xor i32 %70, -1
  %72 = or i32 %71, %0
  %73 = xor i32 %31, %72
  %74 = and i32 %58, %0
  %75 = and i32 %32, %66
  %76 = or i32 %74, %75
  %77 = shl i32 %76, 1
  %78 = xor i32 %68, -1
  %79 = xor i32 %78, %0
  %80 = and i32 %36, %55
  %81 = and i32 %44, %1
  %82 = shl i32 %81, 1
  %83 = and i32 %19, %1
  %84 = xor i32 %83, -1
  %85 = and i32 %84, %66
  %86 = xor i32 %32, %0
  %87 = xor i32 %74, %86
  %88 = and i32 %40, %29
  %89 = or i32 %63, %55
  %90 = and i32 %7, %24
  %91 = shl i32 %90, 1
  %92 = xor i32 %21, %46
  %93 = and i32 %40, %1
  %94 = and i32 %21, %0
  %95 = and i32 %55, %37
  %96 = or i32 %20, %29
  %97 = xor i32 %25, %2
  %98 = xor i32 %46, %2
  %99 = xor i32 %40, %46
  %100 = or i32 %20, %58
  %101 = shl i32 %20, 1
  %102 = xor i32 %58, -1
  %103 = xor i32 %20, %102
  %104 = and i32 %7, %29
  %105 = or i32 %55, %37
  %106 = and i32 %53, %0
  %107 = or i32 %42, %1
  %108 = xor i32 %44, %1
  %109 = and i32 %24, %19
  %110 = or i32 %63, %2
  %111 = xor i32 %42, %84
  %112 = xor i32 %42, -1
  %113 = and i32 %112, %1
  %114 = and i32 %55, %29
  %115 = and i32 %21, %66
  %116 = and i32 %58, %66
  %117 = and i32 %68, %0
  %118 = or i32 %116, %117
  %119 = and i32 %40, %36
  %120 = or i32 %55, %25
  %121 = shl i32 %120, 2
  %122 = xor i32 %40, -1
  %123 = or i32 %122, %37
  %124 = and i32 %36, %112
  %125 = or i32 %36, %19
  %126 = or i32 %84, %0
  %127 = and i32 %112, %29
  %128 = and i32 %30, %66
  %129 = and i32 %70, %0
  %130 = or i32 %128, %129
  %131 = or i32 %53, %66
  %132 = xor i32 %49, -1
  %133 = or i32 %7, %132
  %134 = or i32 %55, %1
  %135 = xor i32 %42, %68
  %136 = or i32 %32, %63
  %137 = or i32 %36, %55
  %138 = xor i32 %22, %0
  %139 = and i32 %32, %0
  %140 = xor i32 %45, %1
  %141 = or i32 %21, %66
  %142 = or i32 %46, %53
  %143 = xor i32 %42, %24
  %144 = or i32 %7, %46
  %145 = xor i32 %116, -1
  %146 = xor i32 %139, %145
  %147 = xor i32 %70, %0
  %148 = or i32 %31, %147
  %149 = or i32 %122, %29
  %150 = or i32 %36, %122
  %151 = xor i32 %63, %84
  %152 = xor i32 %53, %0
  %153 = or i32 %78, %0
  %154 = or i32 %19, %25
  %155 = xor i32 %86, -1
  %156 = xor i32 %31, %155
  %157 = or i32 %22, %0
  %158 = and i32 %102, %0
  %159 = and i32 %84, %0
  %160 = or i32 %22, %66
  %161 = xor i32 %129, -1
  %162 = xor i32 %128, %161
  %163 = xor i32 %68, %0
  %164 = or i32 %74, %163
  %165 = or i32 %42, %29
  %166 = or i32 %36, %45
  %167 = xor i32 %63, %2
  %168 = shl i32 %167, 1
  %169 = and i32 %44, %37
  %170 = xor i32 %63, -1
  %171 = and i32 %170, %2
  %172 = and i32 %112, %37
  %173 = add i32 %63, 1
  %174 = or i32 %102, %0
  %175 = or i32 %7, %37
  %176 = and i32 %36, %2
  %177 = and i32 %51, %29
  %178 = shl i32 %177, 1
  %179 = and i32 %55, %61
  %180 = xor i32 %83, %0
  %181 = or i32 %42, %132
  %182 = add i32 %40, 1
  %183 = or i32 %68, %0
  %184 = xor i32 %122, %1
  %185 = xor i32 %20, %21
  %186 = and i32 %36, %51
  %187 = xor i32 %58, %0
  %188 = or i32 %42, %83
  %189 = xor i32 %163, -1
  %190 = xor i32 %74, %189
  %191 = or i32 %74, %155
  %192 = or i32 %32, %66
  %193 = or i32 %83, %0
  %194 = shl i32 %193, 1
  %195 = and i32 %49, %19
  %196 = and i32 %53, %61
  %197 = and i32 %51, %1
  %198 = and i32 %19, %170
  %199 = xor i32 %147, -1
  %200 = xor i32 %31, %199
  %201 = xor i32 %61, %2
  %202 = or i32 %53, %132
  %203 = or i32 %55, %132
  %204 = and i32 %102, %66
  %205 = and i32 %7, %36
  %206 = and i32 %7, %37
  %207 = and i32 %44, %36
  %208 = and i32 %24, %2
  %209 = shl i32 %208, 1
  %210 = or i32 %83, %66
  %211 = or i32 %102, %66
  %212 = or i32 %46, %2
  %213 = and i32 %24, %55
  %214 = xor i32 %84, %0
  %215 = xor i32 %192, -1
  %216 = or i32 %128, %215
  %217 = or i32 %58, %63
  %218 = shl i32 %217, 1
  %219 = or i32 %84, %66
  %220 = or i32 %83, %63
  %221 = or i32 %20, %36
  %222 = add i32 %42, 1
  %223 = or i32 %58, %66
  %224 = xor i32 %132, %2
  %225 = and i32 %32, %61
  %226 = or i32 %46, %78
  %227 = xor i32 %75, 2147483647
  %228 = xor i32 %227, %74
  %229 = or i32 %53, %0
  %230 = and i32 %19, %37
  %231 = or i32 %42, %36
  %232 = or i32 %19, %132
  %233 = and i32 %55, %170
  %234 = and i32 %7, %170
  %235 = or i32 %21, %0
  %236 = xor i32 %63, %102
  %237 = or i32 %7, %29
  %238 = shl i32 %237, 1
  %239 = xor i32 %128, %192
  %240 = and i32 %53, %170
  %241 = or i32 %46, %122
  %242 = xor i32 %102, %0
  %243 = xor i32 %21, %0
  %244 = and i32 %24, %53
  %245 = or i32 %42, %78
  %246 = and i32 %37, %2
  %247 = or i32 %32, %25
  %248 = xor i32 %117, %145
  %249 = and i32 %68, %66
  %250 = or i32 %68, %66
  %251 = shl i32 %250, 1
  %252 = and i32 %36, %19
  %253 = xor i32 %170, %2
  %254 = and i32 %49, %2
  %255 = or i32 %45, %37
  %256 = shl i32 %255, 1
  %257 = add i32 %21, 1
  %258 = and i32 %78, %66
  %259 = and i32 %83, %66
  %260 = mul i32 %259, -13
  %261 = and i32 %78, %0
  %262 = mul i32 %261, -15
  %263 = and i32 %83, %0
  %264 = mul i32 %263, 12
  %265 = and i32 %22, %66
  %266 = shl i32 %116, 1
  %267 = and i32 %22, %0
  %268 = mul i32 %267, 9
  %269 = or i32 %5, %4
  %270 = and i32 %269, %16
  %271 = or i32 %5, %3
  %272 = or i32 %271, %4
  %273 = and i32 %5, %3
  %274 = and i32 %273, %4
  %275 = xor i32 %4, -1
  %276 = xor i32 %5, %3
  %277 = and i32 %276, %275
  %278 = or i32 %274, %277
  %279 = shl i32 %278, 1
  %280 = or i32 %13, %4
  %281 = xor i32 %280, -1
  %282 = or i32 %13, %3
  %283 = xor i32 %282, -1
  %284 = xor i32 %283, %4
  %285 = or i32 %9, %3
  %286 = xor i32 %3, -1
  %287 = and i32 %286, %4
  %288 = xor i32 %287, -1
  %289 = xor i32 %5, %4
  %290 = xor i32 %289, -1
  %291 = and i32 %290, %288
  %292 = or i32 %4, %3
  %293 = and i32 %292, %290
  %294 = or i32 %14, %283
  %295 = or i32 %283, %4
  %296 = xor i32 %269, -1
  %297 = or i32 %10, %296
  %298 = or i32 %286, %4
  %299 = and i32 %298, %290
  %300 = xor i32 %276, %4
  %301 = and i32 %13, %3
  %302 = xor i32 %301, -1
  %303 = xor i32 %9, %302
  %304 = and i32 %286, %5
  %305 = and i32 %304, %4
  %306 = or i32 %276, %4
  %307 = xor i32 %306, -1
  %308 = or i32 %305, %307
  %309 = or i32 %273, %275
  %310 = or i32 %289, %16
  %311 = shl i32 %310, 2
  %312 = or i32 %16, %5
  %313 = or i32 %10, %290
  %314 = or i32 %282, %4
  %315 = and i32 %269, %286
  %316 = and i32 %271, %4
  %317 = xor i32 %288, %5
  %318 = or i32 %14, %16
  %319 = xor i32 %292, -1
  %320 = xor i32 %273, -1
  %321 = xor i32 %320, %4
  %322 = shl i32 %321, 1
  %323 = xor i32 %298, -1
  %324 = or i32 %289, %323
  %325 = and i32 %4, %3
  %326 = xor i32 %325, -1
  %327 = xor i32 %276, -1
  %328 = and i32 %327, %326
  %329 = and i32 %10, %5
  %330 = and i32 %273, %275
  %331 = or i32 %330, %316
  %332 = and i32 %326, %5
  %333 = or i32 %9, %323
  %334 = and i32 %276, %326
  %335 = shl i32 %334, 1
  %336 = and i32 %276, %292
  %337 = shl i32 %296, 1
  %338 = xor i32 %9, -1
  %339 = xor i32 %338, %3
  %340 = and i32 %298, %13
  %341 = or i32 %282, %275
  %342 = xor i32 %271, %4
  %343 = or i32 %301, %275
  %344 = or i32 %276, %319
  %345 = and i32 %338, %286
  %346 = xor i32 %302, %4
  %347 = and i32 %290, %286
  %348 = shl i32 %347, 1
  %349 = xor i32 %271, -1
  %350 = or i32 %325, %349
  %351 = or i32 %287, %327
  %352 = xor i32 %319, %5
  %353 = and i32 %289, %10
  %354 = shl i32 %282, 1
  %355 = or i32 %287, %5
  %356 = xor i32 %300, -1
  %357 = xor i32 %305, %356
  %358 = or i32 %10, %13
  %359 = or i32 %327, %323
  %360 = shl i32 %359, 1
  %361 = and i32 %304, %275
  %362 = or i32 %276, %275
  %363 = xor i32 %361, %362
  %364 = or i32 %290, %286
  %365 = shl i32 %364, 1
  %366 = and i32 %327, %275
  %367 = or i32 %290, %319
  %368 = or i32 %325, %290
  %369 = xor i32 %14, %282
  %370 = and i32 %269, %10
  %371 = and i32 %15, %286
  %372 = and i32 %13, %288
  %373 = and i32 %338, %3
  %374 = xor i32 %325, %5
  %375 = and i32 %10, %338
  %376 = or i32 %286, %5
  %377 = xor i32 %376, %4
  %378 = xor i32 %377, -1
  %379 = xor i32 %305, %378
  %380 = or i32 %289, %319
  %381 = shl i32 %380, 1
  %382 = or i32 %273, %4
  %383 = or i32 %274, %342
  %384 = xor i32 %292, %5
  %385 = and i32 %280, %10
  %386 = and i32 %280, %286
  %387 = and i32 %15, %3
  %388 = or i32 %14, %286
  %389 = and i32 %290, %3
  %390 = or i32 %281, %286
  %391 = and i32 %302, %4
  %392 = or i32 %319, %5
  %393 = xor i32 %301, %4
  %394 = and i32 %292, %5
  %395 = shl i32 %320, 2
  %396 = and i32 %292, %13
  %397 = xor i32 %274, %300
  %398 = and i32 %10, %13
  %399 = add i32 %298, 1
  %400 = xor i32 %15, %3
  %401 = and i32 %289, %3
  %402 = or i32 %13, %16
  %403 = or i32 %305, %377
  %404 = or i32 %327, %319
  %405 = shl i32 %280, 1
  %406 = and i32 %327, %288
  %407 = or i32 %325, %13
  %408 = shl i32 %4, 1
  %409 = or i32 %296, %286
  %410 = add i32 %287, 1
  %411 = and i32 %276, %4
  %412 = or i32 %349, %275
  %413 = add i32 %10, 1
  %414 = and i32 %289, %326
  %415 = or i32 %302, %275
  %416 = or i32 %14, %273
  %417 = or i32 %290, %3
  %418 = or i32 %10, %281
  %419 = and i32 %271, %275
  %420 = or i32 %274, %419
  %421 = or i32 %287, %290
  %422 = or i32 %9, %319
  %423 = or i32 %323, %5
  %424 = xor i32 %298, %5
  %425 = and i32 %298, %5
  %426 = or i32 %9, %286
  %427 = and i32 %327, %4
  %428 = or i32 %302, %4
  %429 = and i32 %282, %275
  %430 = and i32 %376, %4
  %431 = or i32 %361, %430
  %432 = or i32 %301, %287
  %433 = or i32 %290, %16
  %434 = xor i32 %419, 1073741823
  %435 = xor i32 %434, %274
  %436 = or i32 %320, %275
  %437 = shl i32 %436, 1
  %438 = xor i32 %280, %3
  %439 = and i32 %289, %286
  %440 = xor i32 %274, -1
  %441 = xor i32 %342, %440
  %442 = and i32 %10, %290
  %443 = or i32 %290, %323
  %444 = and i32 %10, %15
  %445 = or i32 %296, %3
  %446 = or i32 %330, %411
  %447 = xor i32 %281, %3
  %448 = and i32 %289, %16
  %449 = xor i32 %277, %440
  %450 = or i32 %327, %4
  %451 = or i32 %14, %10
  %452 = shl i32 %451, 1
  %453 = and i32 %276, %288
  %454 = or i32 %325, %296
  %455 = or i32 %289, %325
  %456 = xor i32 %330, -1
  %457 = xor i32 %411, %456
  %458 = and i32 %282, %4
  %459 = add i32 %301, 1
  %460 = or i32 %14, %3
  %461 = xor i32 %273, %4
  %462 = shl i32 %419, 1
  %463 = or i32 %9, %301
  %464 = or i32 %287, %13
  %465 = shl i32 %464, 1
  %466 = xor i32 %430, -1
  %467 = xor i32 %361, %466
  %468 = or i32 %289, %3
  %469 = and i32 %298, %327
  %470 = or i32 %301, %4
  %471 = shl i32 %470, 1
  %472 = shl i32 %292, 1
  %473 = and i32 %290, %16
  %474 = or i32 %13, %323
  %475 = and i32 %276, %298
  %476 = xor i32 %14, %3
  %477 = xor i32 %327, %4
  %478 = and i32 %302, %275
  %479 = shl i32 %478, 1
  %480 = and i32 %289, %298
  %481 = or i32 %327, %275
  %482 = xor i32 %326, %5
  %483 = or i32 %325, %281
  %484 = or i32 %271, %275
  %485 = and i32 %289, %288
  %486 = xor i32 %269, %3
  %487 = or i32 %276, %287
  %488 = xor i32 %362, -1
  %489 = or i32 %361, %488
  %490 = xor i32 %282, %4
  %491 = or i32 %276, %325
  %492 = xor i32 %9, %3
  %493 = xor i32 %316, %456
  %494 = xor i32 %349, %4
  %495 = shl i32 %10, 1
  %496 = xor i32 %305, %306
  %497 = and i32 %320, %4
  %498 = xor i32 %287, %320
  %499 = and i32 %288, %5
  %500 = or i32 %9, %16
  %501 = or i32 %10, %5
  %502 = xor i32 %287, %5
  %503 = or i32 %325, %327
  %504 = or i32 %289, %287
  %505 = and i32 %280, %16
  %506 = xor i32 %9, %292
  %507 = xor i32 %282, %325
  %508 = or i32 %349, %4
  %509 = or i32 %276, %323
  %510 = or i32 %9, %349
  %511 = add i32 %9, 1
  %512 = or i32 %281, %16
  %513 = add i32 %271, 1
  %514 = or i32 %274, %356
  %515 = xor i32 %280, %325
  %516 = or i32 %273, %287
  %517 = and i32 %280, %3
  %518 = xor i32 %287, %302
  %519 = and i32 %320, %275
  %520 = shl i32 %326, 1
  %521 = and i32 %269, %3
  %522 = or i32 %325, %283
  %523 = and i32 %16, %5
  %524 = xor i32 %271, %325
  %525 = shl i32 %269, 1
  %526 = and i32 %349, %275
  %527 = mul i32 %526, 23
  %528 = and i32 %301, %275
  %529 = mul i32 %528, 36
  %530 = and i32 %349, %4
  %531 = mul i32 %530, 28
  %532 = and i32 %301, %4
  %533 = and i32 %283, %275
  %534 = and i32 %283, %4
  %535 = add i32 %212, %246
  %536 = sub i32 %55, %535
  %537 = sub i32 %536, %68
  %538 = add i32 %537, %74
  %539 = add i32 %538, %265
  %540 = sub i32 %539, %258
  %541 = sub i32 %540, %184
  %542 = add i32 %541, %511
  %543 = add i32 %542, %508
  %544 = add i32 %543, %417
  %545 = sub i32 %544, %291
  %546 = sub i32 %545, %397
  %547 = mul i32 %546, 5
  %548 = add i32 %224, %0
  %549 = sub i32 %548, %42
  %550 = add i32 %549, %325
  %551 = add i32 %550, %162
  %552 = sub i32 %551, %329
  %553 = sub i32 %552, %496
  %554 = mul i32 %553, 3
  %555 = add i32 %532, %86
  %556 = add i32 %555, %448
  %557 = add i32 %556, %435
  %558 = shl i32 %557, 2
  %559 = shl i32 %273, 3
  %560 = add i32 %534, %533
  %561 = mul i32 %560, 10
  %562 = add i32 %63, -1
  %563 = add i32 %562, %24
  %564 = add i32 %563, %286
  %565 = add i32 %564, %253
  %566 = add i32 %565, %78
  %567 = add i32 %566, %21
  %568 = add i32 %567, %84
  %569 = add i32 %568, %171
  %570 = add i32 %569, %45
  %571 = add i32 %570, %275
  %572 = add i32 %571, %219
  %573 = add i32 %572, %196
  %574 = add i32 %573, %192
  %575 = add i32 %574, %179
  %576 = add i32 %575, %174
  %577 = add i32 %576, %149
  %578 = add i32 %577, %131
  %579 = add i32 %578, %105
  %580 = add i32 %579, %100
  %581 = add i32 %580, %69
  %582 = add i32 %581, %298
  %583 = add i32 %582, %474
  %584 = add i32 %583, %327
  %585 = add i32 %584, %228
  %586 = add i32 %585, %515
  %587 = add i32 %586, %277
  %588 = add i32 %587, %510
  %589 = add i32 %588, %507
  %590 = add i32 %589, %486
  %591 = add i32 %590, %485
  %592 = add i32 %591, %481
  %593 = add i32 %592, %476
  %594 = add i32 %593, %362
  %595 = add i32 %594, %345
  %596 = add i32 %595, %344
  %597 = add i32 %596, %342
  %598 = add i32 %597, %324
  %599 = add i32 %598, %318
  %600 = add i32 %599, %315
  %601 = shl i32 %600, 1
  %602 = add i32 %0, %1
  %603 = add i32 %602, 4
  %604 = add i32 %603, %49
  %605 = add i32 %604, %46
  %606 = add i32 %605, %19
  %607 = add i32 %606, %173
  %608 = add i32 %607, %38
  %609 = sub i32 %608, %39
  %610 = add i32 %609, %48
  %611 = add i32 %610, %51
  %612 = add i32 %611, %58
  %613 = sub i32 %612, %62
  %614 = sub i32 %613, %97
  %615 = sub i32 %614, %98
  %616 = add i32 %615, %109
  %617 = add i32 %616, %110
  %618 = sub i32 %617, %125
  %619 = sub i32 %618, %154
  %620 = add i32 %619, %176
  %621 = add i32 %620, %182
  %622 = sub i32 %621, %44
  %623 = sub i32 %622, %195
  %624 = sub i32 %623, %198
  %625 = sub i32 %624, %201
  %626 = add i32 %625, %83
  %627 = add i32 %626, %222
  %628 = sub i32 %627, %230
  %629 = sub i32 %628, %232
  %630 = sub i32 %629, %252
  %631 = sub i32 %630, %254
  %632 = add i32 %631, %257
  %633 = add i32 %632, %40
  %634 = add i32 %633, %3
  %635 = add i32 %634, %26
  %636 = add i32 %635, %23
  %637 = sub i32 %636, %41
  %638 = add i32 %637, %43
  %639 = sub i32 %638, %47
  %640 = add i32 %639, %33
  %641 = sub i32 %640, %50
  %642 = sub i32 %641, %52
  %643 = sub i32 %642, %54
  %644 = sub i32 %643, %56
  %645 = sub i32 %644, %57
  %646 = sub i32 %645, %65
  %647 = add i32 %646, %67
  %648 = sub i32 %647, %79
  %649 = sub i32 %648, %80
  %650 = sub i32 %649, %85
  %651 = sub i32 %650, %88
  %652 = add i32 %651, %89
  %653 = sub i32 %652, %92
  %654 = sub i32 %653, %93
  %655 = add i32 %654, %94
  %656 = add i32 %655, %95
  %657 = sub i32 %656, %96
  %658 = sub i32 %657, %99
  %659 = sub i32 %658, %101
  %660 = sub i32 %659, %103
  %661 = sub i32 %660, %104
  %662 = sub i32 %661, %106
  %663 = add i32 %662, %107
  %664 = sub i32 %663, %108
  %665 = add i32 %664, %111
  %666 = add i32 %665, %113
  %667 = add i32 %666, %114
  %668 = sub i32 %667, %115
  %669 = add i32 %668, %119
  %670 = add i32 %669, %123
  %671 = add i32 %670, %124
  %672 = sub i32 %671, %126
  %673 = sub i32 %672, %127
  %674 = sub i32 %673, %133
  %675 = add i32 %674, %134
  %676 = add i32 %675, %135
  %677 = add i32 %676, %136
  %678 = add i32 %677, %137
  %679 = sub i32 %678, %138
  %680 = sub i32 %679, %139
  %681 = add i32 %680, %140
  %682 = add i32 %681, %141
  %683 = sub i32 %682, %142
  %684 = sub i32 %683, %143
  %685 = add i32 %684, %144
  %686 = sub i32 %685, %150
  %687 = add i32 %686, %151
  %688 = add i32 %687, %152
  %689 = sub i32 %688, %153
  %690 = add i32 %689, %157
  %691 = sub i32 %690, %158
  %692 = sub i32 %691, %159
  %693 = add i32 %692, %160
  %694 = add i32 %693, %165
  %695 = add i32 %694, %166
  %696 = sub i32 %695, %168
  %697 = add i32 %696, %169
  %698 = add i32 %697, %172
  %699 = add i32 %698, %175
  %700 = sub i32 %699, %180
  %701 = add i32 %700, %181
  %702 = sub i32 %701, %183
  %703 = sub i32 %702, %185
  %704 = sub i32 %703, %186
  %705 = add i32 %704, %187
  %706 = sub i32 %705, %188
  %707 = add i32 %706, %197
  %708 = add i32 %707, %202
  %709 = sub i32 %708, %203
  %710 = sub i32 %709, %204
  %711 = add i32 %710, %205
  %712 = sub i32 %711, %206
  %713 = sub i32 %712, %207
  %714 = sub i32 %713, %209
  %715 = sub i32 %714, %210
  %716 = sub i32 %715, %211
  %717 = sub i32 %716, %213
  %718 = add i32 %717, %214
  %719 = add i32 %718, %220
  %720 = add i32 %719, %221
  %721 = add i32 %720, %223
  %722 = add i32 %721, %225
  %723 = add i32 %722, %226
  %724 = sub i32 %723, %229
  %725 = add i32 %724, %75
  %726 = add i32 %725, %231
  %727 = add i32 %726, %233
  %728 = add i32 %727, %234
  %729 = sub i32 %728, %235
  %730 = add i32 %729, %236
  %731 = add i32 %730, %240
  %732 = sub i32 %731, %117
  %733 = sub i32 %732, %241
  %734 = sub i32 %733, %242
  %735 = sub i32 %734, %243
  %736 = add i32 %735, %244
  %737 = add i32 %736, %245
  %738 = add i32 %737, %247
  %739 = sub i32 %738, %249
  %740 = sub i32 %739, %28
  %741 = add i32 %740, %35
  %742 = sub i32 %741, %60
  %743 = add i32 %742, %73
  %744 = sub i32 %743, %82
  %745 = add i32 %744, %87
  %746 = sub i32 %745, %91
  %747 = sub i32 %746, %118
  %748 = sub i32 %747, %121
  %749 = sub i32 %748, %130
  %750 = add i32 %749, %146
  %751 = sub i32 %750, %148
  %752 = add i32 %751, %156
  %753 = sub i32 %752, %164
  %754 = sub i32 %753, %178
  %755 = sub i32 %754, %190
  %756 = sub i32 %755, %191
  %757 = sub i32 %756, %194
  %758 = add i32 %757, %200
  %759 = add i32 %758, %216
  %760 = sub i32 %759, %218
  %761 = sub i32 %760, %238
  %762 = sub i32 %761, %239
  %763 = add i32 %762, %248
  %764 = sub i32 %763, %251
  %765 = sub i32 %764, %256
  %766 = add i32 %765, %260
  %767 = add i32 %766, %262
  %768 = add i32 %767, %264
  %769 = sub i32 %768, %266
  %770 = add i32 %769, %268
  %771 = sub i32 %770, %287
  %772 = add i32 %771, %319
  %773 = add i32 %772, %399
  %774 = sub i32 %773, %408
  %775 = add i32 %774, %410
  %776 = add i32 %775, %413
  %777 = add i32 %776, %13
  %778 = sub i32 %777, %5
  %779 = sub i32 %778, %77
  %780 = add i32 %779, %281
  %781 = sub i32 %780, %312
  %782 = sub i32 %781, %317
  %783 = add i32 %782, %332
  %784 = sub i32 %783, %340
  %785 = add i32 %784, %352
  %786 = add i32 %785, %355
  %787 = sub i32 %786, %358
  %788 = sub i32 %787, %9
  %789 = add i32 %788, %283
  %790 = sub i32 %789, %372
  %791 = add i32 %790, %374
  %792 = sub i32 %791, %384
  %793 = add i32 %792, %392
  %794 = sub i32 %793, %394
  %795 = add i32 %794, %271
  %796 = sub i32 %795, %396
  %797 = sub i32 %796, %398
  %798 = sub i32 %797, %402
  %799 = add i32 %798, %407
  %800 = add i32 %799, %301
  %801 = add i32 %800, %423
  %802 = add i32 %801, %289
  %803 = sub i32 %802, %424
  %804 = add i32 %803, %425
  %805 = sub i32 %804, %276
  %806 = add i32 %805, %459
  %807 = sub i32 %806, %472
  %808 = add i32 %807, %273
  %809 = sub i32 %808, %482
  %810 = sub i32 %809, %495
  %811 = add i32 %810, %499
  %812 = add i32 %811, %501
  %813 = sub i32 %812, %502
  %814 = add i32 %813, %513
  %815 = sub i32 %814, %520
  %816 = add i32 %815, %523
  %817 = add i32 %816, %270
  %818 = add i32 %817, %272
  %819 = add i32 %818, %284
  %820 = sub i32 %819, %285
  %821 = sub i32 %820, %293
  %822 = sub i32 %821, %294
  %823 = sub i32 %822, %295
  %824 = add i32 %823, %297
  %825 = add i32 %824, %299
  %826 = add i32 %825, %300
  %827 = sub i32 %826, %303
  %828 = sub i32 %827, %309
  %829 = add i32 %828, %313
  %830 = sub i32 %829, %314
  %831 = add i32 %830, %316
  %832 = sub i32 %831, %328
  %833 = sub i32 %832, %333
  %834 = add i32 %833, %336
  %835 = sub i32 %834, %337
  %836 = add i32 %835, %339
  %837 = add i32 %836, %306
  %838 = add i32 %837, %341
  %839 = sub i32 %838, %343
  %840 = sub i32 %839, %346
  %841 = sub i32 %840, %350
  %842 = sub i32 %841, %351
  %843 = sub i32 %842, %353
  %844 = sub i32 %843, %354
  %845 = add i32 %844, %366
  %846 = sub i32 %845, %367
  %847 = add i32 %846, %368
  %848 = add i32 %847, %369
  %849 = add i32 %848, %370
  %850 = add i32 %849, %371
  %851 = sub i32 %850, %373
  %852 = sub i32 %851, %375
  %853 = sub i32 %852, %382
  %854 = sub i32 %853, %385
  %855 = sub i32 %854, %386
  %856 = sub i32 %855, %387
  %857 = sub i32 %856, %388
  %858 = add i32 %857, %389
  %859 = sub i32 %858, %390
  %860 = add i32 %859, %391
  %861 = add i32 %860, %393
  %862 = sub i32 %861, %395
  %863 = sub i32 %862, %400
  %864 = sub i32 %863, %401
  %865 = add i32 %864, %404
  %866 = sub i32 %865, %405
  %867 = add i32 %866, %406
  %868 = sub i32 %867, %409
  %869 = add i32 %868, %411
  %870 = sub i32 %869, %412
  %871 = add i32 %870, %414
  %872 = sub i32 %871, %415
  %873 = add i32 %872, %416
  %874 = add i32 %873, %418
  %875 = sub i32 %874, %421
  %876 = add i32 %875, %422
  %877 = sub i32 %876, %426
  %878 = sub i32 %877, %427
  %879 = add i32 %878, %428
  %880 = sub i32 %879, %429
  %881 = sub i32 %880, %432
  %882 = sub i32 %881, %433
  %883 = sub i32 %882, %438
  %884 = sub i32 %883, %439
  %885 = add i32 %884, %442
  %886 = sub i32 %885, %443
  %887 = add i32 %886, %444
  %888 = sub i32 %887, %445
  %889 = add i32 %888, %447
  %890 = sub i32 %889, %450
  %891 = sub i32 %890, %453
  %892 = sub i32 %891, %454
  %893 = add i32 %892, %455
  %894 = sub i32 %893, %458
  %895 = add i32 %894, %460
  %896 = add i32 %895, %461
  %897 = add i32 %896, %463
  %898 = sub i32 %897, %465
  %899 = add i32 %898, %468
  %900 = sub i32 %899, %469
  %901 = add i32 %900, %473
  %902 = add i32 %901, %475
  %903 = add i32 %902, %477
  %904 = add i32 %903, %480
  %905 = sub i32 %904, %483
  %906 = add i32 %905, %484
  %907 = sub i32 %906, %487
  %908 = sub i32 %907, %490
  %909 = sub i32 %908, %491
  %910 = sub i32 %909, %492
  %911 = sub i32 %910, %494
  %912 = sub i32 %911, %497
  %913 = add i32 %912, %498
  %914 = add i32 %913, %500
  %915 = sub i32 %914, %503
  %916 = add i32 %915, %504
  %917 = add i32 %916, %505
  %918 = add i32 %917, %506
  %919 = add i32 %918, %509
  %920 = sub i32 %919, %512
  %921 = add i32 %920, %516
  %922 = add i32 %921, %517
  %923 = add i32 %922, %518
  %924 = sub i32 %923, %519
  %925 = add i32 %924, %521
  %926 = sub i32 %925, %522
  %927 = sub i32 %926, %524
  %928 = sub i32 %927, %525
  %929 = sub i32 %928, %308
  %930 = sub i32 %929, %311
  %931 = sub i32 %930, %322
  %932 = sub i32 %931, %331
  %933 = sub i32 %932, %335
  %934 = sub i32 %933, %348
  %935 = add i32 %934, %357
  %936 = sub i32 %935, %360
  %937 = add i32 %936, %363
  %938 = sub i32 %937, %365
  %939 = sub i32 %938, %379
  %940 = sub i32 %939, %381
  %941 = sub i32 %940, %383
  %942 = sub i32 %941, %403
  %943 = add i32 %942, %420
  %944 = sub i32 %943, %431
  %945 = sub i32 %944, %437
  %946 = sub i32 %945, %441
  %947 = add i32 %946, %446
  %948 = add i32 %947, %449
  %949 = sub i32 %948, %452
  %950 = sub i32 %949, %457
  %951 = sub i32 %950, %462
  %952 = add i32 %951, %467
  %953 = sub i32 %952, %471
  %954 = sub i32 %953, %479
  %955 = sub i32 %954, %489
  %956 = sub i32 %955, %493
  %957 = sub i32 %956, %514
  %958 = add i32 %957, %527
  %959 = add i32 %958, %529
  %960 = add i32 %959, %531
  %961 = sub i32 %960, %279
  %962 = add i32 %961, %559
  %963 = add i32 %962, %561
  %964 = add i32 %963, %558
  %965 = add i32 %964, %554
  %966 = add i32 %965, %547
  %967 = add i32 %966, %601
  %968 = icmp eq i32 %18, %967
  %969 = select i1 %968, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %970 = tail call i32 @puts(i8* nonnull dereferenceable(1) %969)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
