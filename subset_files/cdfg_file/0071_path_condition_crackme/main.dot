digraph "DFG for'main' function" {
	Node0x790b78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x790bf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x790c88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x7910e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x7911c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x7912e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x791520[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x7915d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x792548[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x792bd0[shape=record, label="  %8 = sub i32 0, %6"];
	Node0x792c40[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x792cb0[shape=record, label="  %10 = and i32 %6, %9"];
	Node0x792d20[shape=record, label="  %11 = mul i32 %10, -2"];
	Node0x792d90[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0x792e00[shape=record, label="  %13 = shl i32 %12, 2"];
	Node0x792e70[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x792ee0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x792f50[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x792fc0[shape=record, label="  %17 = mul i32 %16, 3"];
	Node0x793030[shape=record, label="  %18 = or i32 %6, %9"];
	Node0x7930a0[shape=record, label="  %19 = xor i32 %6, -1"];
	Node0x793110[shape=record, label="  %20 = add i32 %6, 1"];
	Node0x793180[shape=record, label="  %21 = or i32 %7, %19"];
	Node0x7931f0[shape=record, label="  %22 = sub i32 %20, %18"];
	Node0x793260[shape=record, label="  %23 = sub i32 %22, %21"];
	Node0x7932d0[shape=record, label="  %24 = add i32 %23, %13"];
	Node0x793340[shape=record, label="  %25 = add i32 %24, %11"];
	Node0x7933b0[shape=record, label="  %26 = sub i32 %25, %15"];
	Node0x793420[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x793490[shape=record, label="  %28 = icmp eq i32 %27, %8"];
	Node0x7319d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x793520[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x793778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7938d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x793998[shape=record, label="  ret i32 0"];
	Node0x790b78 -> Node0x790bf8;
	Node0x790bf8 -> Node0x790c88;
	Node0x790c88 -> Node0x7910e8;
	Node0x7910e8 -> Node0x7911c8;
	Node0x7911c8 -> Node0x7912e8;
	Node0x7912e8 -> Node0x791520;
	Node0x791520 -> Node0x7915d8;
	Node0x7915d8 -> Node0x792548;
	Node0x792548 -> Node0x792bd0;
	Node0x792bd0 -> Node0x792c40;
	Node0x792c40 -> Node0x792cb0;
	Node0x792cb0 -> Node0x792d20;
	Node0x792d20 -> Node0x792d90;
	Node0x792d90 -> Node0x792e00;
	Node0x792e00 -> Node0x792e70;
	Node0x792e70 -> Node0x792ee0;
	Node0x792ee0 -> Node0x792f50;
	Node0x792f50 -> Node0x792fc0;
	Node0x792fc0 -> Node0x793030;
	Node0x793030 -> Node0x7930a0;
	Node0x7930a0 -> Node0x793110;
	Node0x793110 -> Node0x793180;
	Node0x793180 -> Node0x7931f0;
	Node0x7931f0 -> Node0x793260;
	Node0x793260 -> Node0x7932d0;
	Node0x7932d0 -> Node0x793340;
	Node0x793340 -> Node0x7933b0;
	Node0x7933b0 -> Node0x793420;
	Node0x793420 -> Node0x793490;
	Node0x793490 -> Node0x7319d8;
	Node0x7319d8 -> Node0x793520;
	Node0x793520 -> Node0x793778;
	Node0x793778 -> Node0x7938d8;
	Node0x7938d8 -> Node0x793998;
edge [color=red]
	Node0x790b78 -> Node0x790c88;
	Node0x790c88 -> Node0x7910e8;
	Node0x790bf8 -> Node0x7911c8;
	Node0x7911c8 -> Node0x7912e8;
	Node0x790b78 -> Node0x791520;
	Node0x790bf8 -> Node0x791520;
	Node0x790b78 -> Node0x7915d8;
	Node0x790bf8 -> Node0x792548;
	Node0x7915d8 -> Node0x792bd0;
	Node0x792548 -> Node0x792c40;
	Node0x7915d8 -> Node0x792cb0;
	Node0x792c40 -> Node0x792cb0;
	Node0x792cb0 -> Node0x792d20;
	Node0x792548 -> Node0x792d90;
	Node0x7915d8 -> Node0x792d90;
	Node0x792d90 -> Node0x792e00;
	Node0x792548 -> Node0x792e70;
	Node0x7915d8 -> Node0x792e70;
	Node0x792e70 -> Node0x792ee0;
	Node0x792d90 -> Node0x792f50;
	Node0x792f50 -> Node0x792fc0;
	Node0x7915d8 -> Node0x793030;
	Node0x792c40 -> Node0x793030;
	Node0x7915d8 -> Node0x7930a0;
	Node0x7915d8 -> Node0x793110;
	Node0x792548 -> Node0x793180;
	Node0x7930a0 -> Node0x793180;
	Node0x793110 -> Node0x7931f0;
	Node0x793030 -> Node0x7931f0;
	Node0x7931f0 -> Node0x793260;
	Node0x793180 -> Node0x793260;
	Node0x793260 -> Node0x7932d0;
	Node0x792e00 -> Node0x7932d0;
	Node0x7932d0 -> Node0x793340;
	Node0x792d20 -> Node0x793340;
	Node0x793340 -> Node0x7933b0;
	Node0x792ee0 -> Node0x7933b0;
	Node0x7933b0 -> Node0x793420;
	Node0x792fc0 -> Node0x793420;
	Node0x793420 -> Node0x793490;
	Node0x792bd0 -> Node0x793490;
	Node0x793490 -> Node0x7319d8;
	Node0x7319d8 -> Node0x793520;
	Node0x7911c8 -> Node0x793778;
	Node0x790c88 -> Node0x7938d8;
}
