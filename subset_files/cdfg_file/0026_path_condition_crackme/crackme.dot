digraph "DFG for'crackme' function" {
	Node0x1d7b600[shape=record, label="  %3 = xor i32 %1, %0"];
	Node0x1d7bcb0[shape=record, label="  %4 = shl i32 %3, 2"];
	Node0x1d7bd70[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x1d7bde0[shape=record, label="  %6 = and i32 %5, %0"];
	Node0x1d7be50[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x1d7bec0[shape=record, label="  %8 = or i32 %1, %0"];
	Node0x1d7bf30[shape=record, label="  %9 = and i32 %1, %0"];
	Node0x1d7bfd0[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x1d7c070[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x1d7c0e0[shape=record, label="  %12 = xor i32 %3, -1"];
	Node0x1d7c150[shape=record, label="  %13 = or i32 %5, %0"];
	Node0x1d7c1c0[shape=record, label="  %14 = shl i32 %5, 1"];
	Node0x1d7c230[shape=record, label="  %15 = xor i32 %8, -1"];
	Node0x1d7c2d0[shape=record, label="  %16 = mul i32 %15, -5"];
	Node0x1d7c340[shape=record, label="  %17 = xor i32 %13, -1"];
	Node0x1d7c3b0[shape=record, label="  %18 = add i32 %6, %17"];
	Node0x1d7c450[shape=record, label="  %19 = mul i32 %18, 3"];
	Node0x1d7c4c0[shape=record, label="  %20 = add i32 %1, %0"];
	Node0x1d7c530[shape=record, label="  %21 = sub i32 %7, %20"];
	Node0x1d7c5a0[shape=record, label="  %22 = sub i32 %21, %8"];
	Node0x1d7c610[shape=record, label="  %23 = add i32 %22, %12"];
	Node0x1d7c680[shape=record, label="  %24 = sub i32 %23, %13"];
	Node0x1d7c6f0[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x1d7c760[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x1d7c7d0[shape=record, label="  %27 = add i32 %26, %10"];
	Node0x1d7c840[shape=record, label="  %28 = add i32 %27, %11"];
	Node0x1d7c8b0[shape=record, label="  %29 = add i32 %28, %19"];
	Node0x1d7c920[shape=record, label="  %30 = icmp eq i32 %4, %29"];
	Node0x1d1c268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d7cdc0[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x1d7d020[shape=record, label="  ret void"];
	Node0x1d7b600 -> Node0x1d7bcb0;
	Node0x1d7bcb0 -> Node0x1d7bd70;
	Node0x1d7bd70 -> Node0x1d7bde0;
	Node0x1d7bde0 -> Node0x1d7be50;
	Node0x1d7be50 -> Node0x1d7bec0;
	Node0x1d7bec0 -> Node0x1d7bf30;
	Node0x1d7bf30 -> Node0x1d7bfd0;
	Node0x1d7bfd0 -> Node0x1d7c070;
	Node0x1d7c070 -> Node0x1d7c0e0;
	Node0x1d7c0e0 -> Node0x1d7c150;
	Node0x1d7c150 -> Node0x1d7c1c0;
	Node0x1d7c1c0 -> Node0x1d7c230;
	Node0x1d7c230 -> Node0x1d7c2d0;
	Node0x1d7c2d0 -> Node0x1d7c340;
	Node0x1d7c340 -> Node0x1d7c3b0;
	Node0x1d7c3b0 -> Node0x1d7c450;
	Node0x1d7c450 -> Node0x1d7c4c0;
	Node0x1d7c4c0 -> Node0x1d7c530;
	Node0x1d7c530 -> Node0x1d7c5a0;
	Node0x1d7c5a0 -> Node0x1d7c610;
	Node0x1d7c610 -> Node0x1d7c680;
	Node0x1d7c680 -> Node0x1d7c6f0;
	Node0x1d7c6f0 -> Node0x1d7c760;
	Node0x1d7c760 -> Node0x1d7c7d0;
	Node0x1d7c7d0 -> Node0x1d7c840;
	Node0x1d7c840 -> Node0x1d7c8b0;
	Node0x1d7c8b0 -> Node0x1d7c920;
	Node0x1d7c920 -> Node0x1d1c268;
	Node0x1d1c268 -> Node0x1d7cdc0;
	Node0x1d7cdc0 -> Node0x1d7d020;
edge [color=red]
	Node0x1d7b600 -> Node0x1d7bcb0;
	Node0x1d7bd70 -> Node0x1d7bde0;
	Node0x1d7bde0 -> Node0x1d7be50;
	Node0x1d7bf30 -> Node0x1d7bfd0;
	Node0x1d7bfd0 -> Node0x1d7c070;
	Node0x1d7b600 -> Node0x1d7c0e0;
	Node0x1d7bd70 -> Node0x1d7c150;
	Node0x1d7bd70 -> Node0x1d7c1c0;
	Node0x1d7bec0 -> Node0x1d7c230;
	Node0x1d7c230 -> Node0x1d7c2d0;
	Node0x1d7c150 -> Node0x1d7c340;
	Node0x1d7bde0 -> Node0x1d7c3b0;
	Node0x1d7c340 -> Node0x1d7c3b0;
	Node0x1d7c3b0 -> Node0x1d7c450;
	Node0x1d7be50 -> Node0x1d7c530;
	Node0x1d7c4c0 -> Node0x1d7c530;
	Node0x1d7c530 -> Node0x1d7c5a0;
	Node0x1d7bec0 -> Node0x1d7c5a0;
	Node0x1d7c5a0 -> Node0x1d7c610;
	Node0x1d7c0e0 -> Node0x1d7c610;
	Node0x1d7c610 -> Node0x1d7c680;
	Node0x1d7c150 -> Node0x1d7c680;
	Node0x1d7c680 -> Node0x1d7c6f0;
	Node0x1d7c1c0 -> Node0x1d7c6f0;
	Node0x1d7c6f0 -> Node0x1d7c760;
	Node0x1d7c2d0 -> Node0x1d7c760;
	Node0x1d7c760 -> Node0x1d7c7d0;
	Node0x1d7bfd0 -> Node0x1d7c7d0;
	Node0x1d7c7d0 -> Node0x1d7c840;
	Node0x1d7c070 -> Node0x1d7c840;
	Node0x1d7c840 -> Node0x1d7c8b0;
	Node0x1d7c450 -> Node0x1d7c8b0;
	Node0x1d7bcb0 -> Node0x1d7c920;
	Node0x1d7c8b0 -> Node0x1d7c920;
	Node0x1d7c920 -> Node0x1d1c268;
	Node0x1d1c268 -> Node0x1d7cdc0;
}
