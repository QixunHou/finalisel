; ModuleID = '../.././c_source_file/1588_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1588_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %1
  %8 = and i32 %7, %0
  %9 = or i32 %2, %1
  %10 = xor i32 %9, %0
  %11 = xor i32 %10, 2147483647
  %12 = xor i32 %11, %8
  %13 = shl i32 %12, 1
  %14 = xor i32 %5, -1
  %15 = and i32 %14, %4
  %16 = xor i32 %15, -1
  %17 = and i32 %16, %3
  %18 = add i32 %13, %17
  %19 = xor i32 %1, %0
  %20 = xor i32 %19, -1
  %21 = xor i32 %2, %0
  %22 = xor i32 %21, %20
  %23 = and i32 %1, %0
  %24 = or i32 %2, %0
  %25 = xor i32 %24, -1
  %26 = or i32 %23, %25
  %27 = shl i32 %26, 1
  %28 = or i32 %23, %2
  %29 = shl i32 %28, 1
  %30 = xor i32 %2, -1
  %31 = or i32 %30, %1
  %32 = xor i32 %31, -1
  %33 = xor i32 %32, %0
  %34 = or i32 %1, %0
  %35 = xor i32 %21, -1
  %36 = and i32 %34, %35
  %37 = or i32 %30, %0
  %38 = xor i32 %37, -1
  %39 = or i32 %38, %1
  %40 = xor i32 %37, %1
  %41 = xor i32 %1, -1
  %42 = or i32 %41, %0
  %43 = and i32 %42, %2
  %44 = or i32 %31, %0
  %45 = and i32 %41, %0
  %46 = and i32 %30, %1
  %47 = or i32 %46, %45
  %48 = or i32 %45, %35
  %49 = xor i32 %2, %1
  %50 = and i32 %49, %34
  %51 = and i32 %2, %0
  %52 = xor i32 %0, -1
  %53 = xor i32 %51, -1
  %54 = and i32 %19, %53
  %55 = xor i32 %45, -1
  %56 = and i32 %21, %55
  %57 = shl i32 %34, 1
  %58 = and i32 %21, %34
  %59 = and i32 %30, %0
  %60 = xor i32 %59, -1
  %61 = and i32 %60, %20
  %62 = xor i32 %34, -1
  %63 = xor i32 %49, -1
  %64 = or i32 %63, %62
  %65 = and i32 %37, %20
  %66 = or i32 %31, %52
  %67 = xor i32 %7, -1
  %68 = xor i32 %45, %67
  %69 = xor i32 %42, -1
  %70 = or i32 %30, %69
  %71 = or i32 %49, %69
  %72 = and i32 %21, %42
  %73 = shl i32 %72, 1
  %74 = or i32 %45, %30
  %75 = or i32 %51, %69
  %76 = and i32 %41, %2
  %77 = and i32 %76, %0
  %78 = or i32 %41, %2
  %79 = xor i32 %78, %0
  %80 = or i32 %77, %79
  %81 = xor i32 %51, %1
  %82 = or i32 %69, %2
  %83 = xor i32 %9, -1
  %84 = or i32 %51, %83
  %85 = xor i32 %53, %1
  %86 = add i32 %59, 1
  %87 = or i32 %63, %52
  %88 = xor i32 %60, %1
  %89 = and i32 %9, %52
  %90 = xor i32 %23, -1
  %91 = or i32 %49, %45
  %92 = or i32 %45, %2
  %93 = and i32 %67, %0
  %94 = and i32 %35, %90
  %95 = and i32 %31, %52
  %96 = and i32 %37, %19
  %97 = shl i32 %69, 1
  %98 = and i32 %9, %0
  %99 = shl i32 %98, 1
  %100 = and i32 %63, %90
  %101 = and i32 %78, %52
  %102 = or i32 %77, %101
  %103 = shl i32 %102, 1
  %104 = or i32 %32, %52
  %105 = or i32 %21, %45
  %106 = and i32 %24, %1
  %107 = xor i32 %23, %2
  %108 = xor i32 %49, %0
  %109 = xor i32 %8, %108
  %110 = or i32 %9, %52
  %111 = and i32 %76, %52
  %112 = or i32 %49, %52
  %113 = xor i32 %112, -1
  %114 = or i32 %111, %113
  %115 = add i32 %45, 1
  %116 = and i32 %63, %55
  %117 = and i32 %7, %52
  %118 = or i32 %117, %98
  %119 = and i32 %49, %52
  %120 = or i32 %30, %62
  %121 = xor i32 %98, 2147483647
  %122 = xor i32 %121, %117
  %123 = or i32 %25, %1
  %124 = xor i32 %24, %23
  %125 = shl i32 %124, 1
  %126 = or i32 %21, %41
  %127 = and i32 %30, %20
  %128 = and i32 %35, %1
  %129 = and i32 %49, %42
  %130 = shl i32 %129, 1
  %131 = or i32 %59, %19
  %132 = or i32 %46, %52
  %133 = and i32 %35, %55
  %134 = shl i32 %133, 1
  %135 = or i32 %21, %62
  %136 = and i32 %31, %0
  %137 = shl i32 %136, 1
  %138 = shl i32 %46, 1
  %139 = xor i32 %101, 2147483647
  %140 = xor i32 %139, %77
  %141 = shl i32 %140, 1
  %142 = or i32 %19, %38
  %143 = or i32 %7, %52
  %144 = and i32 %49, %0
  %145 = xor i32 %144, -1
  %146 = xor i32 %117, %145
  %147 = or i32 %8, %10
  %148 = or i32 %45, %63
  %149 = xor i32 %108, -1
  %150 = or i32 %8, %149
  %151 = or i32 %63, %0
  %152 = or i32 %23, %83
  %153 = or i32 %25, %41
  %154 = or i32 %23, %38
  %155 = or i32 %35, %62
  %156 = shl i32 %155, 2
  %157 = xor i32 %46, -1
  %158 = and i32 %157, %52
  %159 = xor i32 %51, %9
  %160 = shl i32 %159, 1
  %161 = or i32 %35, %20
  %162 = and i32 %21, %41
  %163 = xor i32 %25, %1
  %164 = or i32 %67, %0
  %165 = or i32 %59, %1
  %166 = xor i32 %51, %157
  %167 = xor i32 %90, %2
  %168 = xor i32 %59, %31
  %169 = or i32 %49, %0
  %170 = or i32 %83, %0
  %171 = shl i32 %170, 1
  %172 = xor i32 %157, %0
  %173 = or i32 %77, %108
  %174 = and i32 %19, %35
  %175 = and i32 %30, %90
  %176 = or i32 %51, %41
  %177 = xor i32 %46, %0
  %178 = and i32 %21, %19
  %179 = or i32 %59, %20
  %180 = or i32 %59, %41
  %181 = and i32 %37, %41
  %182 = and i32 %19, %60
  %183 = shl i32 %182, 2
  %184 = and i32 %42, %63
  %185 = or i32 %7, %45
  %186 = shl i32 %62, 1
  %187 = and i32 %55, %2
  %188 = shl i32 %2, 1
  %189 = xor i32 %59, %67
  %190 = and i32 %49, %55
  %191 = and i32 %24, %19
  %192 = xor i32 %59, %1
  %193 = and i32 %157, %0
  %194 = and i32 %78, %0
  %195 = xor i32 %194, 2147483647
  %196 = xor i32 %195, %111
  %197 = add i32 %46, 1
  %198 = or i32 %20, %2
  %199 = and i32 %53, %1
  %200 = xor i32 %37, %23
  %201 = or i32 %21, %1
  %202 = xor i32 %77, %169
  %203 = shl i32 %202, 1
  %204 = or i32 %23, %32
  %205 = and i32 %63, %0
  %206 = and i32 %34, %2
  %207 = xor i32 %9, %23
  %208 = and i32 %21, %90
  %209 = shl i32 %208, 1
  %210 = or i32 %46, %0
  %211 = or i32 %51, %19
  %212 = xor i32 %69, %2
  %213 = or i32 %23, %30
  %214 = xor i32 %31, %0
  %215 = and i32 %24, %41
  %216 = or i32 %117, %144
  %217 = add i32 %7, 1
  %218 = xor i32 %38, %1
  %219 = shl i32 %218, 1
  %220 = and i32 %60, %41
  %221 = xor i32 %169, -1
  %222 = or i32 %77, %221
  %223 = and i32 %63, %52
  %224 = add i32 %21, 1
  %225 = or i32 %8, %89
  %226 = xor i32 %55, %2
  %227 = shl i32 %226, 1
  %228 = xor i32 %51, %34
  %229 = xor i32 %34, %2
  %230 = or i32 %62, %2
  %231 = xor i32 %51, %42
  %232 = or i32 %35, %41
  %233 = and i32 %90, %2
  %234 = xor i32 %42, %2
  %235 = and i32 %49, %90
  %236 = and i32 %83, %52
  %237 = and i32 %46, %52
  %238 = mul i32 %237, -14
  %239 = and i32 %83, %0
  %240 = mul i32 %239, -19
  %241 = and i32 %46, %0
  %242 = shl i32 %241, 4
  %243 = and i32 %32, %52
  %244 = and i32 %32, %0
  %245 = and i32 %5, %4
  %246 = or i32 %245, %3
  %247 = or i32 %14, %3
  %248 = xor i32 %247, -1
  %249 = or i32 %248, %4
  %250 = xor i32 %3, -1
  %251 = or i32 %245, %250
  %252 = xor i32 %4, %3
  %253 = xor i32 %252, -1
  %254 = xor i32 %5, %4
  %255 = xor i32 %254, -1
  %256 = or i32 %255, %253
  %257 = or i32 %5, %3
  %258 = xor i32 %257, -1
  %259 = xor i32 %258, %4
  %260 = shl i32 %259, 1
  %261 = and i32 %250, %5
  %262 = and i32 %261, %4
  %263 = or i32 %250, %5
  %264 = xor i32 %263, %4
  %265 = or i32 %262, %264
  %266 = and i32 %4, %3
  %267 = xor i32 %266, -1
  %268 = and i32 %254, %267
  %269 = shl i32 %268, 1
  %270 = and i32 %250, %4
  %271 = or i32 %270, %255
  %272 = xor i32 %257, %266
  %273 = and i32 %5, %3
  %274 = or i32 %273, %270
  %275 = or i32 %14, %4
  %276 = shl i32 %275, 1
  %277 = and i32 %254, %3
  %278 = shl i32 %277, 1
  %279 = xor i32 %4, -1
  %280 = and i32 %263, %279
  %281 = xor i32 %262, -1
  %282 = xor i32 %280, %281
  %283 = and i32 %16, %253
  %284 = xor i32 %275, -1
  %285 = or i32 %266, %284
  %286 = xor i32 %248, %4
  %287 = or i32 %4, %3
  %288 = xor i32 %287, -1
  %289 = xor i32 %5, %3
  %290 = or i32 %289, %288
  %291 = or i32 %289, %4
  %292 = xor i32 %262, %291
  %293 = and i32 %287, %5
  %294 = xor i32 %245, %3
  %295 = shl i32 %294, 1
  %296 = or i32 %254, %250
  %297 = and i32 %275, %253
  %298 = and i32 %289, %267
  %299 = or i32 %270, %5
  %300 = or i32 %255, %250
  %301 = xor i32 %270, %5
  %302 = and i32 %255, %3
  %303 = and i32 %273, %4
  %304 = and i32 %257, %279
  %305 = or i32 %303, %304
  %306 = xor i32 %273, -1
  %307 = xor i32 %270, %306
  %308 = xor i32 %304, 2147483647
  %309 = xor i32 %308, %303
  %310 = or i32 %250, %4
  %311 = and i32 %310, %255
  %312 = shl i32 %311, 1
  %313 = or i32 %284, %250
  %314 = and i32 %310, %5
  %315 = or i32 %245, %252
  %316 = and i32 %289, %279
  %317 = and i32 %261, %279
  %318 = and i32 %263, %4
  %319 = or i32 %317, %318
  %320 = or i32 %255, %3
  %321 = or i32 %245, %258
  %322 = or i32 %289, %279
  %323 = xor i32 %317, %322
  %324 = xor i32 %267, %5
  %325 = and i32 %275, %3
  %326 = and i32 %14, %3
  %327 = xor i32 %326, -1
  %328 = and i32 %327, %4
  %329 = or i32 %5, %4
  %330 = xor i32 %270, %327
  %331 = xor i32 %289, -1
  %332 = or i32 %266, %331
  %333 = and i32 %257, %4
  %334 = or i32 %326, %279
  %335 = xor i32 %247, %266
  %336 = and i32 %254, %287
  %337 = add i32 %273, 1
  %338 = xor i32 %273, %4
  %339 = xor i32 %270, -1
  %340 = and i32 %255, %339
  %341 = or i32 %284, %3
  %342 = xor i32 %326, %4
  %343 = xor i32 %310, -1
  %344 = xor i32 %15, %247
  %345 = or i32 %327, %4
  %346 = add i32 %266, 1
  %347 = or i32 %266, %14
  %348 = and i32 %331, %4
  %349 = shl i32 %348, 1
  %350 = and i32 %14, %267
  %351 = and i32 %329, %253
  %352 = or i32 %262, %280
  %353 = xor i32 %289, %4
  %354 = xor i32 %353, -1
  %355 = xor i32 %262, %354
  %356 = and i32 %255, %253
  %357 = and i32 %310, %331
  %358 = or i32 %252, %14
  %359 = xor i32 %15, %306
  %360 = shl i32 %359, 1
  %361 = or i32 %14, %288
  %362 = xor i32 %15, %3
  %363 = shl i32 %362, 1
  %364 = or i32 %14, %253
  %365 = or i32 %248, %279
  %366 = and i32 %289, %4
  %367 = or i32 %252, %255
  %368 = or i32 %303, %316
  %369 = xor i32 %245, %310
  %370 = add i32 %257, 1
  %371 = or i32 %14, %343
  %372 = shl i32 %371, 1
  %373 = and i32 %254, %310
  %374 = or i32 %252, %284
  %375 = and i32 %247, %279
  %376 = or i32 %262, %353
  %377 = and i32 %14, %253
  %378 = xor i32 %329, -1
  %379 = or i32 %378, %250
  %380 = or i32 %331, %4
  %381 = xor i32 %264, %281
  %382 = add i32 %15, 1
  %383 = and i32 %252, %255
  %384 = shl i32 %383, 1
  %385 = xor i32 %245, %257
  %386 = and i32 %310, %14
  %387 = and i32 %14, %339
  %388 = or i32 %273, %279
  %389 = or i32 %245, %343
  %390 = or i32 %258, %279
  %391 = shl i32 %390, 1
  %392 = and i32 %247, %4
  %393 = shl i32 %392, 1
  %394 = and i32 %327, %279
  %395 = or i32 %273, %4
  %396 = shl i32 %395, 1
  %397 = or i32 %245, %288
  %398 = and i32 %273, %279
  %399 = xor i32 %398, -1
  %400 = xor i32 %366, %399
  %401 = and i32 %255, %250
  %402 = or i32 %266, %5
  %403 = or i32 %289, %343
  %404 = shl i32 %287, 1
  %405 = and i32 %329, %252
  %406 = shl i32 %405, 1
  %407 = or i32 %303, %354
  %408 = or i32 %378, %253
  %409 = or i32 %288, %5
  %410 = shl i32 %409, 1
  %411 = or i32 %266, %248
  %412 = and i32 %329, %3
  %413 = or i32 %245, %326
  %414 = xor i32 %245, -1
  %415 = and i32 %414, %250
  %416 = shl i32 %415, 1
  %417 = and i32 %252, %14
  %418 = xor i32 %275, %3
  %419 = and i32 %254, %252
  %420 = xor i32 %331, %4
  %421 = xor i32 %333, %399
  %422 = or i32 %247, %279
  %423 = xor i32 %16, %3
  %424 = or i32 %398, %333
  %425 = and i32 %331, %267
  %426 = and i32 %252, %5
  %427 = or i32 %289, %270
  %428 = and i32 %275, %252
  %429 = or i32 %255, %343
  %430 = shl i32 %429, 1
  %431 = xor i32 %275, %266
  %432 = add i32 %254, 1
  %433 = xor i32 %288, %5
  %434 = and i32 %414, %253
  %435 = or i32 %306, %4
  %436 = xor i32 %316, -1
  %437 = xor i32 %303, %436
  %438 = or i32 %252, %378
  %439 = shl i32 %438, 1
  %440 = or i32 %254, %252
  %441 = xor i32 %247, %4
  %442 = or i32 %15, %253
  %443 = xor i32 %245, %327
  %444 = and i32 %289, %287
  %445 = or i32 %245, %253
  %446 = xor i32 %329, %3
  %447 = xor i32 %318, -1
  %448 = xor i32 %317, %447
  %449 = or i32 %289, %266
  %450 = and i32 %289, %339
  %451 = shl i32 %450, 1
  %452 = xor i32 %329, %266
  %453 = or i32 %254, %288
  %454 = xor i32 %266, %5
  %455 = xor i32 %306, %4
  %456 = shl i32 %455, 1
  %457 = and i32 %252, %16
  %458 = or i32 %255, %288
  %459 = shl i32 %458, 1
  %460 = or i32 %15, %250
  %461 = shl i32 %460, 1
  %462 = or i32 %343, %5
  %463 = xor i32 %339, %5
  %464 = or i32 %252, %5
  %465 = and i32 %306, %279
  %466 = and i32 %331, %279
  %467 = or i32 %15, %3
  %468 = or i32 %284, %253
  %469 = and i32 %287, %255
  %470 = xor i32 %291, -1
  %471 = or i32 %262, %470
  %472 = and i32 %258, %279
  %473 = and i32 %326, %279
  %474 = and i32 %258, %4
  %475 = mul i32 %474, 18
  %476 = and i32 %326, %4
  %477 = and i32 %248, %279
  %478 = and i32 %248, %4
  %479 = mul i32 %478, 22
  %480 = add i32 %45, -1
  %481 = add i32 %480, %37
  %482 = add i32 %481, %24
  %483 = add i32 %482, %92
  %484 = add i32 %483, %10
  %485 = add i32 %484, %199
  %486 = add i32 %485, %181
  %487 = add i32 %486, %172
  %488 = add i32 %487, %166
  %489 = add i32 %488, %165
  %490 = add i32 %489, %94
  %491 = add i32 %490, %66
  %492 = add i32 %491, %50
  %493 = add i32 %492, %33
  %494 = add i32 %493, %225
  %495 = add i32 %494, %426
  %496 = add i32 %495, %387
  %497 = add i32 %496, %377
  %498 = add i32 %497, %324
  %499 = add i32 %498, %196
  %500 = add i32 %499, %122
  %501 = add i32 %500, %476
  %502 = add i32 %501, %449
  %503 = add i32 %502, %444
  %504 = add i32 %503, %441
  %505 = add i32 %504, %403
  %506 = add i32 %505, %374
  %507 = add i32 %506, %341
  %508 = add i32 %507, %334
  %509 = add i32 %508, %330
  %510 = add i32 %509, %325
  %511 = add i32 %510, %302
  %512 = add i32 %511, %352
  %513 = add i32 %512, %305
  %514 = add i32 %513, %309
  %515 = shl i32 %514, 1
  %516 = sub i32 %244, %231
  %517 = add i32 %516, %153
  %518 = add i32 %517, %131
  %519 = add i32 %518, %119
  %520 = sub i32 %519, %81
  %521 = add i32 %520, %337
  %522 = sub i32 %521, %420
  %523 = mul i32 %522, 5
  %524 = sub i32 %48, %118
  %525 = add i32 %524, %331
  %526 = sub i32 %525, %299
  %527 = add i32 %526, %338
  %528 = add i32 %527, %398
  %529 = mul i32 %528, 3
  %530 = add i32 %243, %117
  %531 = add i32 %530, %88
  %532 = add i32 %531, %251
  %533 = add i32 %532, %367
  %534 = shl i32 %533, 2
  %535 = sub i32 %8, %236
  %536 = add i32 %535, %473
  %537 = mul i32 %536, 6
  %538 = add i32 %477, %472
  %539 = shl i32 %538, 3
  %540 = shl i32 %0, 1
  %541 = add i32 %540, %41
  %542 = add i32 %541, %90
  %543 = add i32 %542, %115
  %544 = add i32 %543, %20
  %545 = add i32 %544, %30
  %546 = sub i32 %545, %43
  %547 = sub i32 %546, %57
  %548 = sub i32 %547, %70
  %549 = sub i32 %548, %74
  %550 = add i32 %549, %82
  %551 = add i32 %550, %86
  %552 = add i32 %551, %51
  %553 = sub i32 %552, %97
  %554 = sub i32 %553, %107
  %555 = sub i32 %554, %120
  %556 = add i32 %555, %127
  %557 = add i32 %556, %167
  %558 = sub i32 %557, %175
  %559 = sub i32 %558, %186
  %560 = sub i32 %559, %187
  %561 = sub i32 %560, %188
  %562 = add i32 %561, %197
  %563 = sub i32 %562, %198
  %564 = add i32 %563, %206
  %565 = add i32 %564, %212
  %566 = sub i32 %565, %213
  %567 = add i32 %566, %217
  %568 = add i32 %567, %224
  %569 = add i32 %568, %229
  %570 = sub i32 %569, %230
  %571 = sub i32 %570, %233
  %572 = sub i32 %571, %234
  %573 = add i32 %572, %250
  %574 = sub i32 %573, %22
  %575 = sub i32 %574, %29
  %576 = add i32 %575, %36
  %577 = add i32 %576, %39
  %578 = add i32 %577, %40
  %579 = sub i32 %578, %44
  %580 = sub i32 %579, %47
  %581 = add i32 %580, %54
  %582 = sub i32 %581, %56
  %583 = add i32 %582, %58
  %584 = sub i32 %583, %61
  %585 = add i32 %584, %64
  %586 = add i32 %585, %65
  %587 = sub i32 %586, %68
  %588 = add i32 %587, %71
  %589 = add i32 %588, %75
  %590 = sub i32 %589, %84
  %591 = sub i32 %590, %85
  %592 = sub i32 %591, %87
  %593 = sub i32 %592, %89
  %594 = sub i32 %593, %91
  %595 = add i32 %594, %93
  %596 = add i32 %595, %95
  %597 = add i32 %596, %96
  %598 = add i32 %597, %100
  %599 = sub i32 %598, %104
  %600 = add i32 %599, %105
  %601 = sub i32 %600, %106
  %602 = add i32 %601, %110
  %603 = sub i32 %602, %116
  %604 = add i32 %603, %123
  %605 = add i32 %604, %126
  %606 = add i32 %605, %128
  %607 = add i32 %606, %132
  %608 = sub i32 %607, %135
  %609 = sub i32 %608, %138
  %610 = sub i32 %609, %142
  %611 = sub i32 %610, %143
  %612 = add i32 %611, %148
  %613 = sub i32 %612, %151
  %614 = sub i32 %613, %152
  %615 = add i32 %614, %154
  %616 = add i32 %615, %158
  %617 = add i32 %616, %161
  %618 = sub i32 %617, %162
  %619 = add i32 %618, %163
  %620 = add i32 %619, %164
  %621 = sub i32 %620, %168
  %622 = sub i32 %621, %169
  %623 = sub i32 %622, %174
  %624 = add i32 %623, %176
  %625 = sub i32 %624, %177
  %626 = add i32 %625, %144
  %627 = add i32 %626, %178
  %628 = sub i32 %627, %179
  %629 = add i32 %628, %180
  %630 = add i32 %629, %184
  %631 = sub i32 %630, %185
  %632 = add i32 %631, %189
  %633 = sub i32 %632, %190
  %634 = sub i32 %633, %191
  %635 = sub i32 %634, %112
  %636 = add i32 %635, %192
  %637 = add i32 %636, %193
  %638 = add i32 %637, %200
  %639 = add i32 %638, %201
  %640 = sub i32 %639, %204
  %641 = sub i32 %640, %205
  %642 = sub i32 %641, %207
  %643 = sub i32 %642, %210
  %644 = add i32 %643, %211
  %645 = add i32 %644, %214
  %646 = sub i32 %645, %215
  %647 = sub i32 %646, %220
  %648 = add i32 %647, %223
  %649 = sub i32 %648, %227
  %650 = add i32 %649, %228
  %651 = add i32 %650, %232
  %652 = add i32 %651, %235
  %653 = add i32 %652, %27
  %654 = sub i32 %653, %73
  %655 = sub i32 %654, %80
  %656 = sub i32 %655, %99
  %657 = add i32 %656, %109
  %658 = add i32 %657, %114
  %659 = sub i32 %658, %125
  %660 = sub i32 %659, %130
  %661 = sub i32 %660, %134
  %662 = sub i32 %661, %137
  %663 = add i32 %662, %146
  %664 = add i32 %663, %147
  %665 = sub i32 %664, %150
  %666 = sub i32 %665, %156
  %667 = sub i32 %666, %160
  %668 = sub i32 %667, %171
  %669 = add i32 %668, %173
  %670 = sub i32 %669, %183
  %671 = sub i32 %670, %209
  %672 = sub i32 %671, %216
  %673 = sub i32 %672, %219
  %674 = add i32 %673, %222
  %675 = add i32 %674, %238
  %676 = add i32 %675, %240
  %677 = add i32 %676, %242
  %678 = sub i32 %677, %5
  %679 = add i32 %678, %287
  %680 = add i32 %679, 2
  %681 = add i32 %680, %343
  %682 = add i32 %681, %346
  %683 = sub i32 %682, %270
  %684 = add i32 %683, %266
  %685 = sub i32 %684, %103
  %686 = sub i32 %685, %203
  %687 = add i32 %686, %273
  %688 = sub i32 %687, %293
  %689 = sub i32 %688, %301
  %690 = add i32 %689, %254
  %691 = add i32 %690, %314
  %692 = add i32 %691, %329
  %693 = sub i32 %692, %347
  %694 = sub i32 %693, %350
  %695 = sub i32 %694, %358
  %696 = add i32 %695, %361
  %697 = add i32 %696, %327
  %698 = sub i32 %697, %364
  %699 = sub i32 %698, %289
  %700 = add i32 %699, %370
  %701 = add i32 %700, %382
  %702 = add i32 %701, %386
  %703 = sub i32 %702, %402
  %704 = sub i32 %703, %404
  %705 = sub i32 %704, %417
  %706 = add i32 %705, %15
  %707 = add i32 %706, %432
  %708 = add i32 %707, %433
  %709 = sub i32 %708, %245
  %710 = sub i32 %709, %454
  %711 = sub i32 %710, %462
  %712 = add i32 %711, %463
  %713 = add i32 %712, %464
  %714 = sub i32 %713, %141
  %715 = sub i32 %714, %246
  %716 = add i32 %715, %249
  %717 = sub i32 %716, %256
  %718 = sub i32 %717, %271
  %719 = sub i32 %718, %272
  %720 = sub i32 %719, %274
  %721 = sub i32 %720, %276
  %722 = sub i32 %721, %283
  %723 = sub i32 %722, %285
  %724 = sub i32 %723, %286
  %725 = sub i32 %724, %290
  %726 = add i32 %725, %296
  %727 = add i32 %726, %297
  %728 = sub i32 %727, %298
  %729 = add i32 %728, %300
  %730 = add i32 %729, %307
  %731 = sub i32 %730, %313
  %732 = add i32 %731, %315
  %733 = add i32 %732, %316
  %734 = add i32 %733, %320
  %735 = sub i32 %734, %321
  %736 = sub i32 %735, %328
  %737 = sub i32 %736, %332
  %738 = sub i32 %737, %333
  %739 = add i32 %738, %335
  %740 = sub i32 %739, %336
  %741 = sub i32 %740, %340
  %742 = sub i32 %741, %342
  %743 = add i32 %742, %344
  %744 = add i32 %743, %345
  %745 = add i32 %744, %351
  %746 = add i32 %745, %356
  %747 = sub i32 %746, %357
  %748 = sub i32 %747, %365
  %749 = sub i32 %748, %366
  %750 = sub i32 %749, %369
  %751 = sub i32 %750, %372
  %752 = sub i32 %751, %373
  %753 = sub i32 %752, %375
  %754 = sub i32 %753, %379
  %755 = sub i32 %754, %380
  %756 = sub i32 %755, %353
  %757 = sub i32 %756, %385
  %758 = sub i32 %757, %388
  %759 = add i32 %758, %389
  %760 = sub i32 %759, %394
  %761 = add i32 %760, %397
  %762 = add i32 %761, %401
  %763 = add i32 %762, %408
  %764 = sub i32 %763, %410
  %765 = sub i32 %764, %411
  %766 = add i32 %765, %412
  %767 = add i32 %766, %413
  %768 = add i32 %767, %418
  %769 = add i32 %768, %419
  %770 = add i32 %769, %422
  %771 = sub i32 %770, %423
  %772 = add i32 %771, %425
  %773 = add i32 %772, %427
  %774 = sub i32 %773, %428
  %775 = sub i32 %774, %431
  %776 = add i32 %775, %434
  %777 = sub i32 %776, %435
  %778 = add i32 %777, %322
  %779 = sub i32 %778, %440
  %780 = add i32 %779, %442
  %781 = sub i32 %780, %443
  %782 = add i32 %781, %445
  %783 = sub i32 %782, %446
  %784 = sub i32 %783, %452
  %785 = add i32 %784, %453
  %786 = add i32 %785, %457
  %787 = add i32 %786, %291
  %788 = sub i32 %787, %465
  %789 = add i32 %788, %466
  %790 = add i32 %789, %467
  %791 = sub i32 %790, %468
  %792 = add i32 %791, %469
  %793 = add i32 %792, %303
  %794 = sub i32 %793, %260
  %795 = add i32 %794, %265
  %796 = sub i32 %795, %269
  %797 = sub i32 %796, %278
  %798 = sub i32 %797, %282
  %799 = add i32 %798, %292
  %800 = sub i32 %799, %295
  %801 = sub i32 %800, %312
  %802 = add i32 %801, %319
  %803 = add i32 %802, %323
  %804 = sub i32 %803, %349
  %805 = add i32 %804, %355
  %806 = sub i32 %805, %360
  %807 = sub i32 %806, %363
  %808 = add i32 %807, %368
  %809 = add i32 %808, %376
  %810 = sub i32 %809, %381
  %811 = sub i32 %810, %384
  %812 = sub i32 %811, %391
  %813 = sub i32 %812, %393
  %814 = sub i32 %813, %396
  %815 = add i32 %814, %400
  %816 = sub i32 %815, %406
  %817 = sub i32 %816, %407
  %818 = sub i32 %817, %416
  %819 = add i32 %818, %421
  %820 = add i32 %819, %424
  %821 = sub i32 %820, %430
  %822 = sub i32 %821, %437
  %823 = sub i32 %822, %439
  %824 = add i32 %823, %448
  %825 = sub i32 %824, %451
  %826 = sub i32 %825, %456
  %827 = sub i32 %826, %459
  %828 = sub i32 %827, %461
  %829 = sub i32 %828, %471
  %830 = add i32 %829, %475
  %831 = add i32 %830, %479
  %832 = add i32 %831, %539
  %833 = add i32 %832, %537
  %834 = add i32 %833, %534
  %835 = add i32 %834, %529
  %836 = add i32 %835, %523
  %837 = add i32 %836, %515
  %838 = icmp eq i32 %18, %837
  %839 = select i1 %838, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %840 = tail call i32 @puts(i8* nonnull dereferenceable(1) %839)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
