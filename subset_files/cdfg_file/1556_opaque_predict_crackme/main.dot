digraph "DFG for'main' function" {
	Node0x190ea48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x190eac8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x190eb58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x190efb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x190f098[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x190f1b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x190f3f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x190f4a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1910418[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1910aa0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1910b10[shape=record, label="  %9 = and i32 %7, %6"];
	Node0x1910b80[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1910bf0[shape=record, label="  %11 = add i32 %10, %8"];
	Node0x1910c60[shape=record, label="  %12 = and i32 %6, %8"];
	Node0x1910cd0[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x1910d40[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x1910db0[shape=record, label="  %15 = xor i32 %13, -1"];
	Node0x1910e20[shape=record, label="  %16 = mul i32 %15, 3"];
	Node0x1910e90[shape=record, label="  %17 = xor i32 %6, -1"];
	Node0x1910f00[shape=record, label="  %18 = and i32 %7, %17"];
	Node0x1910f70[shape=record, label="  %19 = shl i32 %12, 1"];
	Node0x1910fe0[shape=record, label="  %20 = sub i32 1, %6"];
	Node0x1911050[shape=record, label="  %21 = add i32 %20, %7"];
	Node0x19110c0[shape=record, label="  %22 = add i32 %21, %13"];
	Node0x1911130[shape=record, label="  %23 = add i32 %22, %14"];
	Node0x19111a0[shape=record, label="  %24 = sub i32 %23, %18"];
	Node0x1911210[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x1911280[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x19112f0[shape=record, label="  %27 = icmp eq i32 %11, %26"];
	Node0x18af9d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1911380[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0x19115d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1911738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x19117f8[shape=record, label="  ret i32 0"];
	Node0x190ea48 -> Node0x190eac8;
	Node0x190eac8 -> Node0x190eb58;
	Node0x190eb58 -> Node0x190efb8;
	Node0x190efb8 -> Node0x190f098;
	Node0x190f098 -> Node0x190f1b8;
	Node0x190f1b8 -> Node0x190f3f0;
	Node0x190f3f0 -> Node0x190f4a8;
	Node0x190f4a8 -> Node0x1910418;
	Node0x1910418 -> Node0x1910aa0;
	Node0x1910aa0 -> Node0x1910b10;
	Node0x1910b10 -> Node0x1910b80;
	Node0x1910b80 -> Node0x1910bf0;
	Node0x1910bf0 -> Node0x1910c60;
	Node0x1910c60 -> Node0x1910cd0;
	Node0x1910cd0 -> Node0x1910d40;
	Node0x1910d40 -> Node0x1910db0;
	Node0x1910db0 -> Node0x1910e20;
	Node0x1910e20 -> Node0x1910e90;
	Node0x1910e90 -> Node0x1910f00;
	Node0x1910f00 -> Node0x1910f70;
	Node0x1910f70 -> Node0x1910fe0;
	Node0x1910fe0 -> Node0x1911050;
	Node0x1911050 -> Node0x19110c0;
	Node0x19110c0 -> Node0x1911130;
	Node0x1911130 -> Node0x19111a0;
	Node0x19111a0 -> Node0x1911210;
	Node0x1911210 -> Node0x1911280;
	Node0x1911280 -> Node0x19112f0;
	Node0x19112f0 -> Node0x18af9d8;
	Node0x18af9d8 -> Node0x1911380;
	Node0x1911380 -> Node0x19115d8;
	Node0x19115d8 -> Node0x1911738;
	Node0x1911738 -> Node0x19117f8;
edge [color=red]
	Node0x190ea48 -> Node0x190eb58;
	Node0x190eb58 -> Node0x190efb8;
	Node0x190eac8 -> Node0x190f098;
	Node0x190f098 -> Node0x190f1b8;
	Node0x190ea48 -> Node0x190f3f0;
	Node0x190eac8 -> Node0x190f3f0;
	Node0x190ea48 -> Node0x190f4a8;
	Node0x190eac8 -> Node0x1910418;
	Node0x1910418 -> Node0x1910aa0;
	Node0x1910418 -> Node0x1910b10;
	Node0x190f4a8 -> Node0x1910b10;
	Node0x1910b10 -> Node0x1910b80;
	Node0x1910b80 -> Node0x1910bf0;
	Node0x1910aa0 -> Node0x1910bf0;
	Node0x190f4a8 -> Node0x1910c60;
	Node0x1910aa0 -> Node0x1910c60;
	Node0x1910418 -> Node0x1910cd0;
	Node0x190f4a8 -> Node0x1910cd0;
	Node0x1910418 -> Node0x1910d40;
	Node0x190f4a8 -> Node0x1910d40;
	Node0x1910cd0 -> Node0x1910db0;
	Node0x1910db0 -> Node0x1910e20;
	Node0x190f4a8 -> Node0x1910e90;
	Node0x1910418 -> Node0x1910f00;
	Node0x1910e90 -> Node0x1910f00;
	Node0x1910c60 -> Node0x1910f70;
	Node0x190f4a8 -> Node0x1910fe0;
	Node0x1910fe0 -> Node0x1911050;
	Node0x1910418 -> Node0x1911050;
	Node0x1911050 -> Node0x19110c0;
	Node0x1910cd0 -> Node0x19110c0;
	Node0x19110c0 -> Node0x1911130;
	Node0x1910d40 -> Node0x1911130;
	Node0x1911130 -> Node0x19111a0;
	Node0x1910f00 -> Node0x19111a0;
	Node0x19111a0 -> Node0x1911210;
	Node0x1910e20 -> Node0x1911210;
	Node0x1911210 -> Node0x1911280;
	Node0x1910f70 -> Node0x1911280;
	Node0x1910bf0 -> Node0x19112f0;
	Node0x1911280 -> Node0x19112f0;
	Node0x19112f0 -> Node0x18af9d8;
	Node0x18af9d8 -> Node0x1911380;
	Node0x190f098 -> Node0x19115d8;
	Node0x190eb58 -> Node0x1911738;
}
