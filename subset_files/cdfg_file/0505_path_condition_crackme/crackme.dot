digraph "DFG for'crackme' function" {
	Node0xa9c9c0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0xa9d040[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0xa9d0e0[shape=record, label="  %7 = xor i32 %6, -2"];
	Node0xa9d150[shape=record, label="  %8 = shl i32 %3, 1"];
	Node0xa9d1c0[shape=record, label="  %9 = add i32 %7, %8"];
	Node0xa9d260[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0xa9d2d0[shape=record, label="  %11 = and i32 %2, %1"];
	Node0xa9d340[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0xa9d3e0[shape=record, label="  %13 = mul i32 %11, 3"];
	Node0xa9d450[shape=record, label="  %14 = xor i32 %0, -1"];
	Node0xa9d4c0[shape=record, label="  %15 = xor i32 %3, -1"];
	Node0xa9d530[shape=record, label="  %16 = or i32 %15, %0"];
	Node0xa9d5a0[shape=record, label="  %17 = xor i32 %3, %0"];
	Node0xa9d610[shape=record, label="  %18 = or i32 %14, %3"];
	Node0xa9d680[shape=record, label="  %19 = or i32 %3, %0"];
	Node0xa9d6f0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0xa9d760[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0xa9d7d0[shape=record, label="  %22 = xor i32 %18, -1"];
	Node0xa9d870[shape=record, label="  %23 = shl i32 %3, 2"];
	Node0xa9d8e0[shape=record, label="  %24 = sub i32 2, %1"];
	Node0xa9d950[shape=record, label="  %25 = add i32 %24, %10"];
	Node0xa9d9c0[shape=record, label="  %26 = add i32 %25, %12"];
	Node0xa9da30[shape=record, label="  %27 = sub i32 %26, %5"];
	Node0xa9daa0[shape=record, label="  %28 = add i32 %27, %3"];
	Node0xa9db10[shape=record, label="  %29 = add i32 %28, %13"];
	Node0xa9db80[shape=record, label="  %30 = add i32 %29, %16"];
	Node0xa9dbf0[shape=record, label="  %31 = add i32 %30, %17"];
	Node0xa9dc60[shape=record, label="  %32 = sub i32 %31, %18"];
	Node0xa9dee0[shape=record, label="  %33 = sub i32 %32, %19"];
	Node0xa9df50[shape=record, label="  %34 = add i32 %33, %22"];
	Node0xa9dfc0[shape=record, label="  %35 = add i32 %34, %21"];
	Node0xa9e030[shape=record, label="  %36 = add i32 %35, %23"];
	Node0xa9e0a0[shape=record, label="  %37 = icmp eq i32 %9, %36"];
	Node0xa3d268[shape=record, label="  %38 = select i1 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa9e540[shape=record, label="  %39 = tail call i32 @puts(i8* nonnull dereferenceable(1) %38)"];
	Node0xa9e590[shape=record, label="  ret void"];
	Node0xa9c9c0 -> Node0xa9d040;
	Node0xa9d040 -> Node0xa9d0e0;
	Node0xa9d0e0 -> Node0xa9d150;
	Node0xa9d150 -> Node0xa9d1c0;
	Node0xa9d1c0 -> Node0xa9d260;
	Node0xa9d260 -> Node0xa9d2d0;
	Node0xa9d2d0 -> Node0xa9d340;
	Node0xa9d340 -> Node0xa9d3e0;
	Node0xa9d3e0 -> Node0xa9d450;
	Node0xa9d450 -> Node0xa9d4c0;
	Node0xa9d4c0 -> Node0xa9d530;
	Node0xa9d530 -> Node0xa9d5a0;
	Node0xa9d5a0 -> Node0xa9d610;
	Node0xa9d610 -> Node0xa9d680;
	Node0xa9d680 -> Node0xa9d6f0;
	Node0xa9d6f0 -> Node0xa9d760;
	Node0xa9d760 -> Node0xa9d7d0;
	Node0xa9d7d0 -> Node0xa9d870;
	Node0xa9d870 -> Node0xa9d8e0;
	Node0xa9d8e0 -> Node0xa9d950;
	Node0xa9d950 -> Node0xa9d9c0;
	Node0xa9d9c0 -> Node0xa9da30;
	Node0xa9da30 -> Node0xa9daa0;
	Node0xa9daa0 -> Node0xa9db10;
	Node0xa9db10 -> Node0xa9db80;
	Node0xa9db80 -> Node0xa9dbf0;
	Node0xa9dbf0 -> Node0xa9dc60;
	Node0xa9dc60 -> Node0xa9dee0;
	Node0xa9dee0 -> Node0xa9df50;
	Node0xa9df50 -> Node0xa9dfc0;
	Node0xa9dfc0 -> Node0xa9e030;
	Node0xa9e030 -> Node0xa9e0a0;
	Node0xa9e0a0 -> Node0xa3d268;
	Node0xa3d268 -> Node0xa9e540;
	Node0xa9e540 -> Node0xa9e590;
edge [color=red]
	Node0xa9c9c0 -> Node0xa9d040;
	Node0xa9d040 -> Node0xa9d0e0;
	Node0xa9d0e0 -> Node0xa9d1c0;
	Node0xa9d150 -> Node0xa9d1c0;
	Node0xa9d2d0 -> Node0xa9d340;
	Node0xa9d2d0 -> Node0xa9d3e0;
	Node0xa9d4c0 -> Node0xa9d530;
	Node0xa9d450 -> Node0xa9d610;
	Node0xa9d680 -> Node0xa9d6f0;
	Node0xa9d6f0 -> Node0xa9d760;
	Node0xa9d610 -> Node0xa9d7d0;
	Node0xa9d8e0 -> Node0xa9d950;
	Node0xa9d260 -> Node0xa9d950;
	Node0xa9d950 -> Node0xa9d9c0;
	Node0xa9d340 -> Node0xa9d9c0;
	Node0xa9d9c0 -> Node0xa9da30;
	Node0xa9c9c0 -> Node0xa9da30;
	Node0xa9da30 -> Node0xa9daa0;
	Node0xa9daa0 -> Node0xa9db10;
	Node0xa9d3e0 -> Node0xa9db10;
	Node0xa9db10 -> Node0xa9db80;
	Node0xa9d530 -> Node0xa9db80;
	Node0xa9db80 -> Node0xa9dbf0;
	Node0xa9d5a0 -> Node0xa9dbf0;
	Node0xa9dbf0 -> Node0xa9dc60;
	Node0xa9d610 -> Node0xa9dc60;
	Node0xa9dc60 -> Node0xa9dee0;
	Node0xa9d680 -> Node0xa9dee0;
	Node0xa9dee0 -> Node0xa9df50;
	Node0xa9d7d0 -> Node0xa9df50;
	Node0xa9df50 -> Node0xa9dfc0;
	Node0xa9d760 -> Node0xa9dfc0;
	Node0xa9dfc0 -> Node0xa9e030;
	Node0xa9d870 -> Node0xa9e030;
	Node0xa9d1c0 -> Node0xa9e0a0;
	Node0xa9e030 -> Node0xa9e0a0;
	Node0xa9e0a0 -> Node0xa3d268;
	Node0xa3d268 -> Node0xa9e540;
}
