digraph "DFG for'crackme' function" {
	Node0x17190f0[shape=record, label="  %5 = xor i32 %0, -1"];
	Node0x1719160[shape=record, label="  %6 = or i32 %5, %3"];
	Node0x17191d0[shape=record, label="  %7 = sub i32 %1, %6"];
	Node0x1719240[shape=record, label="  %8 = or i32 %2, %1"];
	Node0x17192e0[shape=record, label="  %9 = mul i32 %2, -5"];
	Node0x1719350[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x17193c0[shape=record, label="  %11 = or i32 %10, %1"];
	Node0x1719430[shape=record, label="  %12 = xor i32 %10, %1"];
	Node0x17194a0[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x1719510[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x17195b0[shape=record, label="  %15 = add i32 %2, 1"];
	Node0x1719620[shape=record, label="  %16 = add i32 %8, 1"];
	Node0x17196c0[shape=record, label="  %17 = shl i32 %11, 2"];
	Node0x1719760[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x17197d0[shape=record, label="  %19 = and i32 %10, %1"];
	Node0x1719840[shape=record, label="  %20 = and i32 %3, %0"];
	Node0x17198b0[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x1719920[shape=record, label="  %22 = shl i32 %0, 1"];
	Node0x1719990[shape=record, label="  %23 = xor i32 %6, -1"];
	Node0x1719a00[shape=record, label="  %24 = shl i32 %20, 1"];
	Node0x1719a70[shape=record, label="  %25 = add i32 %16, %13"];
	Node0x1719ae0[shape=record, label="  %26 = add i32 %25, %23"];
	Node0x1719b80[shape=record, label="  %27 = mul i32 %26, 3"];
	Node0x1719bf0[shape=record, label="  %28 = sub i32 %1, %0"];
	Node0x1719c60[shape=record, label="  %29 = sub i32 %28, %22"];
	Node0x1719cd0[shape=record, label="  %30 = add i32 %29, %15"];
	Node0x1719d40[shape=record, label="  %31 = sub i32 %30, %8"];
	Node0x1719db0[shape=record, label="  %32 = add i32 %31, %9"];
	Node0x171a030[shape=record, label="  %33 = add i32 %32, %11"];
	Node0x171a0a0[shape=record, label="  %34 = add i32 %33, %12"];
	Node0x171a110[shape=record, label="  %35 = add i32 %34, %14"];
	Node0x171a180[shape=record, label="  %36 = sub i32 %35, %19"];
	Node0x171a1f0[shape=record, label="  %37 = sub i32 %36, %3"];
	Node0x171a260[shape=record, label="  %38 = add i32 %37, %20"];
	Node0x171a2d0[shape=record, label="  %39 = add i32 %38, %21"];
	Node0x171a340[shape=record, label="  %40 = add i32 %39, %18"];
	Node0x171a3b0[shape=record, label="  %41 = add i32 %40, %24"];
	Node0x171a420[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x171a490[shape=record, label="  %43 = icmp eq i32 %7, %42"];
	Node0x16b9268[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x171a930[shape=record, label="  %45 = tail call i32 @puts(i8* nonnull dereferenceable(1) %44)"];
	Node0x171a980[shape=record, label="  ret void"];
	Node0x17190f0 -> Node0x1719160;
	Node0x1719160 -> Node0x17191d0;
	Node0x17191d0 -> Node0x1719240;
	Node0x1719240 -> Node0x17192e0;
	Node0x17192e0 -> Node0x1719350;
	Node0x1719350 -> Node0x17193c0;
	Node0x17193c0 -> Node0x1719430;
	Node0x1719430 -> Node0x17194a0;
	Node0x17194a0 -> Node0x1719510;
	Node0x1719510 -> Node0x17195b0;
	Node0x17195b0 -> Node0x1719620;
	Node0x1719620 -> Node0x17196c0;
	Node0x17196c0 -> Node0x1719760;
	Node0x1719760 -> Node0x17197d0;
	Node0x17197d0 -> Node0x1719840;
	Node0x1719840 -> Node0x17198b0;
	Node0x17198b0 -> Node0x1719920;
	Node0x1719920 -> Node0x1719990;
	Node0x1719990 -> Node0x1719a00;
	Node0x1719a00 -> Node0x1719a70;
	Node0x1719a70 -> Node0x1719ae0;
	Node0x1719ae0 -> Node0x1719b80;
	Node0x1719b80 -> Node0x1719bf0;
	Node0x1719bf0 -> Node0x1719c60;
	Node0x1719c60 -> Node0x1719cd0;
	Node0x1719cd0 -> Node0x1719d40;
	Node0x1719d40 -> Node0x1719db0;
	Node0x1719db0 -> Node0x171a030;
	Node0x171a030 -> Node0x171a0a0;
	Node0x171a0a0 -> Node0x171a110;
	Node0x171a110 -> Node0x171a180;
	Node0x171a180 -> Node0x171a1f0;
	Node0x171a1f0 -> Node0x171a260;
	Node0x171a260 -> Node0x171a2d0;
	Node0x171a2d0 -> Node0x171a340;
	Node0x171a340 -> Node0x171a3b0;
	Node0x171a3b0 -> Node0x171a420;
	Node0x171a420 -> Node0x171a490;
	Node0x171a490 -> Node0x16b9268;
	Node0x16b9268 -> Node0x171a930;
	Node0x171a930 -> Node0x171a980;
edge [color=red]
	Node0x17190f0 -> Node0x1719160;
	Node0x1719160 -> Node0x17191d0;
	Node0x1719350 -> Node0x17193c0;
	Node0x1719350 -> Node0x1719430;
	Node0x17194a0 -> Node0x1719510;
	Node0x1719240 -> Node0x1719620;
	Node0x17193c0 -> Node0x17196c0;
	Node0x17196c0 -> Node0x1719760;
	Node0x1719350 -> Node0x17197d0;
	Node0x1719160 -> Node0x1719990;
	Node0x1719840 -> Node0x1719a00;
	Node0x1719620 -> Node0x1719a70;
	Node0x17194a0 -> Node0x1719a70;
	Node0x1719a70 -> Node0x1719ae0;
	Node0x1719990 -> Node0x1719ae0;
	Node0x1719ae0 -> Node0x1719b80;
	Node0x1719bf0 -> Node0x1719c60;
	Node0x1719920 -> Node0x1719c60;
	Node0x1719c60 -> Node0x1719cd0;
	Node0x17195b0 -> Node0x1719cd0;
	Node0x1719cd0 -> Node0x1719d40;
	Node0x1719240 -> Node0x1719d40;
	Node0x1719d40 -> Node0x1719db0;
	Node0x17192e0 -> Node0x1719db0;
	Node0x1719db0 -> Node0x171a030;
	Node0x17193c0 -> Node0x171a030;
	Node0x171a030 -> Node0x171a0a0;
	Node0x1719430 -> Node0x171a0a0;
	Node0x171a0a0 -> Node0x171a110;
	Node0x1719510 -> Node0x171a110;
	Node0x171a110 -> Node0x171a180;
	Node0x17197d0 -> Node0x171a180;
	Node0x171a180 -> Node0x171a1f0;
	Node0x171a1f0 -> Node0x171a260;
	Node0x1719840 -> Node0x171a260;
	Node0x171a260 -> Node0x171a2d0;
	Node0x17198b0 -> Node0x171a2d0;
	Node0x171a2d0 -> Node0x171a340;
	Node0x1719760 -> Node0x171a340;
	Node0x171a340 -> Node0x171a3b0;
	Node0x1719a00 -> Node0x171a3b0;
	Node0x171a3b0 -> Node0x171a420;
	Node0x1719b80 -> Node0x171a420;
	Node0x17191d0 -> Node0x171a490;
	Node0x171a420 -> Node0x171a490;
	Node0x171a490 -> Node0x16b9268;
	Node0x16b9268 -> Node0x171a930;
}
