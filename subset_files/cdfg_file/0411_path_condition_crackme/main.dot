digraph "DFG for'main' function" {
	Node0x171ab48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x171abc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x171ac58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x171acb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x171ad68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x171b198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x171b278[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x171b378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x171b438[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x171b4e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x171b5a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x171b658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1715b10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x171b858[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x171c7c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x171ce38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x171ce98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x171cf10[shape=record, label="  %14 = xor i32 %10, -1"];
	Node0x171cf80[shape=record, label="  %15 = or i32 %13, %14"];
	Node0x171cff0[shape=record, label="  %16 = sub i32 %11, %15"];
	Node0x171d060[shape=record, label="  %17 = or i32 %12, %11"];
	Node0x171d0d0[shape=record, label="  %18 = mul i32 %12, -5"];
	Node0x171d140[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x171d1b0[shape=record, label="  %20 = or i32 %11, %19"];
	Node0x171d220[shape=record, label="  %21 = xor i32 %11, %19"];
	Node0x171d290[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x171d300[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x171d370[shape=record, label="  %24 = add i32 %17, 1"];
	Node0x171d3e0[shape=record, label="  %25 = shl i32 %20, 2"];
	Node0x171d450[shape=record, label="  %26 = xor i32 %25, -4"];
	Node0x171d4c0[shape=record, label="  %27 = and i32 %11, %19"];
	Node0x171d530[shape=record, label="  %28 = and i32 %13, %10"];
	Node0x171d5a0[shape=record, label="  %29 = or i32 %13, %10"];
	Node0x171d610[shape=record, label="  %30 = shl i32 %10, 1"];
	Node0x171d680[shape=record, label="  %31 = xor i32 %15, -1"];
	Node0x171d6f0[shape=record, label="  %32 = shl i32 %28, 1"];
	Node0x171d760[shape=record, label="  %33 = add i32 %24, %22"];
	Node0x171d7d0[shape=record, label="  %34 = add i32 %33, %31"];
	Node0x171d840[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x171d8b0[shape=record, label="  %36 = sub i32 1, %10"];
	Node0x171d920[shape=record, label="  %37 = add i32 %36, %11"];
	Node0x171d990[shape=record, label="  %38 = sub i32 %37, %30"];
	Node0x171da00[shape=record, label="  %39 = add i32 %38, %12"];
	Node0x171da70[shape=record, label="  %40 = sub i32 %39, %17"];
	Node0x171dae0[shape=record, label="  %41 = add i32 %40, %18"];
	Node0x171db50[shape=record, label="  %42 = add i32 %41, %20"];
	Node0x171dbc0[shape=record, label="  %43 = add i32 %42, %21"];
	Node0x171dc30[shape=record, label="  %44 = add i32 %43, %23"];
	Node0x171dca0[shape=record, label="  %45 = sub i32 %44, %27"];
	Node0x171dd10[shape=record, label="  %46 = sub i32 %45, %13"];
	Node0x171dd80[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x171ddf0[shape=record, label="  %48 = add i32 %47, %29"];
	Node0x171de60[shape=record, label="  %49 = add i32 %48, %26"];
	Node0x171ded0[shape=record, label="  %50 = add i32 %49, %32"];
	Node0x171df40[shape=record, label="  %51 = add i32 %50, %35"];
	Node0x171dfb0[shape=record, label="  %52 = icmp eq i32 %16, %51"];
	Node0x16ba8b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x171e040[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x171e2e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x171e448[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x171e558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x171e668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x171e728[shape=record, label="  ret i32 0"];
	Node0x171ab48 -> Node0x171abc8;
	Node0x171abc8 -> Node0x171ac58;
	Node0x171ac58 -> Node0x171acb8;
	Node0x171acb8 -> Node0x171ad68;
	Node0x171ad68 -> Node0x171b198;
	Node0x171b198 -> Node0x171b278;
	Node0x171b278 -> Node0x171b378;
	Node0x171b378 -> Node0x171b438;
	Node0x171b438 -> Node0x171b4e8;
	Node0x171b4e8 -> Node0x171b5a8;
	Node0x171b5a8 -> Node0x171b658;
	Node0x171b658 -> Node0x1715b10;
	Node0x1715b10 -> Node0x171b858;
	Node0x171b858 -> Node0x171c7c8;
	Node0x171c7c8 -> Node0x171ce38;
	Node0x171ce38 -> Node0x171ce98;
	Node0x171ce98 -> Node0x171cf10;
	Node0x171cf10 -> Node0x171cf80;
	Node0x171cf80 -> Node0x171cff0;
	Node0x171cff0 -> Node0x171d060;
	Node0x171d060 -> Node0x171d0d0;
	Node0x171d0d0 -> Node0x171d140;
	Node0x171d140 -> Node0x171d1b0;
	Node0x171d1b0 -> Node0x171d220;
	Node0x171d220 -> Node0x171d290;
	Node0x171d290 -> Node0x171d300;
	Node0x171d300 -> Node0x171d370;
	Node0x171d370 -> Node0x171d3e0;
	Node0x171d3e0 -> Node0x171d450;
	Node0x171d450 -> Node0x171d4c0;
	Node0x171d4c0 -> Node0x171d530;
	Node0x171d530 -> Node0x171d5a0;
	Node0x171d5a0 -> Node0x171d610;
	Node0x171d610 -> Node0x171d680;
	Node0x171d680 -> Node0x171d6f0;
	Node0x171d6f0 -> Node0x171d760;
	Node0x171d760 -> Node0x171d7d0;
	Node0x171d7d0 -> Node0x171d840;
	Node0x171d840 -> Node0x171d8b0;
	Node0x171d8b0 -> Node0x171d920;
	Node0x171d920 -> Node0x171d990;
	Node0x171d990 -> Node0x171da00;
	Node0x171da00 -> Node0x171da70;
	Node0x171da70 -> Node0x171dae0;
	Node0x171dae0 -> Node0x171db50;
	Node0x171db50 -> Node0x171dbc0;
	Node0x171dbc0 -> Node0x171dc30;
	Node0x171dc30 -> Node0x171dca0;
	Node0x171dca0 -> Node0x171dd10;
	Node0x171dd10 -> Node0x171dd80;
	Node0x171dd80 -> Node0x171ddf0;
	Node0x171ddf0 -> Node0x171de60;
	Node0x171de60 -> Node0x171ded0;
	Node0x171ded0 -> Node0x171df40;
	Node0x171df40 -> Node0x171dfb0;
	Node0x171dfb0 -> Node0x16ba8b8;
	Node0x16ba8b8 -> Node0x171e040;
	Node0x171e040 -> Node0x171e2e8;
	Node0x171e2e8 -> Node0x171e448;
	Node0x171e448 -> Node0x171e558;
	Node0x171e558 -> Node0x171e668;
	Node0x171e668 -> Node0x171e728;
edge [color=red]
	Node0x171ab48 -> Node0x171ad68;
	Node0x171ad68 -> Node0x171b198;
	Node0x171abc8 -> Node0x171b278;
	Node0x171b278 -> Node0x171b378;
	Node0x171ac58 -> Node0x171b438;
	Node0x171b438 -> Node0x171b4e8;
	Node0x171acb8 -> Node0x171b5a8;
	Node0x171b5a8 -> Node0x171b658;
	Node0x171ab48 -> Node0x1715b10;
	Node0x171abc8 -> Node0x1715b10;
	Node0x171ac58 -> Node0x1715b10;
	Node0x171acb8 -> Node0x1715b10;
	Node0x171ab48 -> Node0x171b858;
	Node0x171abc8 -> Node0x171c7c8;
	Node0x171ac58 -> Node0x171ce38;
	Node0x171acb8 -> Node0x171ce98;
	Node0x171b858 -> Node0x171cf10;
	Node0x171ce98 -> Node0x171cf80;
	Node0x171cf10 -> Node0x171cf80;
	Node0x171c7c8 -> Node0x171cff0;
	Node0x171cf80 -> Node0x171cff0;
	Node0x171ce38 -> Node0x171d060;
	Node0x171c7c8 -> Node0x171d060;
	Node0x171ce38 -> Node0x171d0d0;
	Node0x171ce38 -> Node0x171d140;
	Node0x171c7c8 -> Node0x171d1b0;
	Node0x171d140 -> Node0x171d1b0;
	Node0x171c7c8 -> Node0x171d220;
	Node0x171d140 -> Node0x171d220;
	Node0x171ce38 -> Node0x171d290;
	Node0x171c7c8 -> Node0x171d290;
	Node0x171d290 -> Node0x171d300;
	Node0x171d060 -> Node0x171d370;
	Node0x171d1b0 -> Node0x171d3e0;
	Node0x171d3e0 -> Node0x171d450;
	Node0x171c7c8 -> Node0x171d4c0;
	Node0x171d140 -> Node0x171d4c0;
	Node0x171ce98 -> Node0x171d530;
	Node0x171b858 -> Node0x171d530;
	Node0x171ce98 -> Node0x171d5a0;
	Node0x171b858 -> Node0x171d5a0;
	Node0x171b858 -> Node0x171d610;
	Node0x171cf80 -> Node0x171d680;
	Node0x171d530 -> Node0x171d6f0;
	Node0x171d370 -> Node0x171d760;
	Node0x171d290 -> Node0x171d760;
	Node0x171d760 -> Node0x171d7d0;
	Node0x171d680 -> Node0x171d7d0;
	Node0x171d7d0 -> Node0x171d840;
	Node0x171b858 -> Node0x171d8b0;
	Node0x171d8b0 -> Node0x171d920;
	Node0x171c7c8 -> Node0x171d920;
	Node0x171d920 -> Node0x171d990;
	Node0x171d610 -> Node0x171d990;
	Node0x171d990 -> Node0x171da00;
	Node0x171ce38 -> Node0x171da00;
	Node0x171da00 -> Node0x171da70;
	Node0x171d060 -> Node0x171da70;
	Node0x171da70 -> Node0x171dae0;
	Node0x171d0d0 -> Node0x171dae0;
	Node0x171dae0 -> Node0x171db50;
	Node0x171d1b0 -> Node0x171db50;
	Node0x171db50 -> Node0x171dbc0;
	Node0x171d220 -> Node0x171dbc0;
	Node0x171dbc0 -> Node0x171dc30;
	Node0x171d300 -> Node0x171dc30;
	Node0x171dc30 -> Node0x171dca0;
	Node0x171d4c0 -> Node0x171dca0;
	Node0x171dca0 -> Node0x171dd10;
	Node0x171ce98 -> Node0x171dd10;
	Node0x171dd10 -> Node0x171dd80;
	Node0x171d530 -> Node0x171dd80;
	Node0x171dd80 -> Node0x171ddf0;
	Node0x171d5a0 -> Node0x171ddf0;
	Node0x171ddf0 -> Node0x171de60;
	Node0x171d450 -> Node0x171de60;
	Node0x171de60 -> Node0x171ded0;
	Node0x171d6f0 -> Node0x171ded0;
	Node0x171ded0 -> Node0x171df40;
	Node0x171d840 -> Node0x171df40;
	Node0x171cff0 -> Node0x171dfb0;
	Node0x171df40 -> Node0x171dfb0;
	Node0x171dfb0 -> Node0x16ba8b8;
	Node0x16ba8b8 -> Node0x171e040;
	Node0x171b5a8 -> Node0x171e2e8;
	Node0x171b438 -> Node0x171e448;
	Node0x171b278 -> Node0x171e558;
	Node0x171ad68 -> Node0x171e668;
}
