digraph "DFG for'main' function" {
	Node0x24a1858[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x24a18d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x24a1968[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x24a19c8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x24a1e48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24a1f28[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x24a2028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x24a20e8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x24a2198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x24a23f8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x24a24b8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x24a3428[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x24a3a98[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x24a3b90[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x24a3d98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x24a3ef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x24a4008[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24a40c8[shape=record, label="  ret i32 0"];
	Node0x24a1858 -> Node0x24a18d8;
	Node0x24a18d8 -> Node0x24a1968;
	Node0x24a1968 -> Node0x24a19c8;
	Node0x24a19c8 -> Node0x24a1e48;
	Node0x24a1e48 -> Node0x24a1f28;
	Node0x24a1f28 -> Node0x24a2028;
	Node0x24a2028 -> Node0x24a20e8;
	Node0x24a20e8 -> Node0x24a2198;
	Node0x24a2198 -> Node0x24a23f8;
	Node0x24a23f8 -> Node0x24a24b8;
	Node0x24a24b8 -> Node0x24a3428;
	Node0x24a3428 -> Node0x24a3a98;
	Node0x24a3a98 -> Node0x24a3b90;
	Node0x24a3b90 -> Node0x24a3d98;
	Node0x24a3d98 -> Node0x24a3ef8;
	Node0x24a3ef8 -> Node0x24a4008;
	Node0x24a4008 -> Node0x24a40c8;
edge [color=red]
	Node0x24a1858 -> Node0x24a19c8;
	Node0x24a19c8 -> Node0x24a1e48;
	Node0x24a18d8 -> Node0x24a1f28;
	Node0x24a1f28 -> Node0x24a2028;
	Node0x24a1968 -> Node0x24a20e8;
	Node0x24a20e8 -> Node0x24a2198;
	Node0x24a1858 -> Node0x24a23f8;
	Node0x24a18d8 -> Node0x24a23f8;
	Node0x24a1968 -> Node0x24a23f8;
	Node0x24a1858 -> Node0x24a24b8;
	Node0x24a18d8 -> Node0x24a3428;
	Node0x24a1968 -> Node0x24a3a98;
	Node0x24a24b8 -> Node0x24a3b90;
	Node0x24a3428 -> Node0x24a3b90;
	Node0x24a3a98 -> Node0x24a3b90;
	Node0x24a20e8 -> Node0x24a3d98;
	Node0x24a1f28 -> Node0x24a3ef8;
	Node0x24a19c8 -> Node0x24a4008;
}
