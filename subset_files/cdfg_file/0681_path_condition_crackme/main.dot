digraph "DFG for'main' function" {
	Node0x1ab3708[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ab3788[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ab3818[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ab3878[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1ab3cf8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ab3dd8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1ab3ed8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ab3f98[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1ab4048[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ab42a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1ab4368[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ab44c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ab4528[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ab6c40[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1ab6e48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ab6fa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ab70b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ab7178[shape=record, label="  ret i32 0"];
	Node0x1ab3708 -> Node0x1ab3788;
	Node0x1ab3788 -> Node0x1ab3818;
	Node0x1ab3818 -> Node0x1ab3878;
	Node0x1ab3878 -> Node0x1ab3cf8;
	Node0x1ab3cf8 -> Node0x1ab3dd8;
	Node0x1ab3dd8 -> Node0x1ab3ed8;
	Node0x1ab3ed8 -> Node0x1ab3f98;
	Node0x1ab3f98 -> Node0x1ab4048;
	Node0x1ab4048 -> Node0x1ab42a8;
	Node0x1ab42a8 -> Node0x1ab4368;
	Node0x1ab4368 -> Node0x1ab44c8;
	Node0x1ab44c8 -> Node0x1ab4528;
	Node0x1ab4528 -> Node0x1ab6c40;
	Node0x1ab6c40 -> Node0x1ab6e48;
	Node0x1ab6e48 -> Node0x1ab6fa8;
	Node0x1ab6fa8 -> Node0x1ab70b8;
	Node0x1ab70b8 -> Node0x1ab7178;
edge [color=red]
	Node0x1ab3708 -> Node0x1ab3878;
	Node0x1ab3878 -> Node0x1ab3cf8;
	Node0x1ab3788 -> Node0x1ab3dd8;
	Node0x1ab3dd8 -> Node0x1ab3ed8;
	Node0x1ab3818 -> Node0x1ab3f98;
	Node0x1ab3f98 -> Node0x1ab4048;
	Node0x1ab3708 -> Node0x1ab42a8;
	Node0x1ab3788 -> Node0x1ab42a8;
	Node0x1ab3818 -> Node0x1ab42a8;
	Node0x1ab3708 -> Node0x1ab4368;
	Node0x1ab3788 -> Node0x1ab44c8;
	Node0x1ab3818 -> Node0x1ab4528;
	Node0x1ab4368 -> Node0x1ab6c40;
	Node0x1ab44c8 -> Node0x1ab6c40;
	Node0x1ab4528 -> Node0x1ab6c40;
	Node0x1ab3f98 -> Node0x1ab6e48;
	Node0x1ab3dd8 -> Node0x1ab6fa8;
	Node0x1ab3878 -> Node0x1ab70b8;
}
