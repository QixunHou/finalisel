; ModuleID = '../.././c_source_file/1400_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1400_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %2, %0
  %8 = xor i32 %7, -1
  %9 = or i32 %8, %1
  %10 = and i32 %1, %0
  %11 = xor i32 %2, %1
  %12 = or i32 %11, %10
  %13 = sub i32 %12, %9
  %14 = and i32 %5, %4
  %15 = xor i32 %4, %3
  %16 = or i32 %14, %15
  %17 = sub i32 %13, %16
  %18 = xor i32 %1, -1
  %19 = and i32 %2, %0
  %20 = or i32 %19, %18
  %21 = and i32 %18, %0
  %22 = xor i32 %21, %2
  %23 = xor i32 %2, -1
  %24 = or i32 %23, %1
  %25 = xor i32 %24, -1
  %26 = xor i32 %10, -1
  %27 = xor i32 %26, %2
  %28 = shl i32 %27, 1
  %29 = xor i32 %2, %0
  %30 = or i32 %29, %1
  %31 = shl i32 %30, 1
  %32 = and i32 %23, %0
  %33 = xor i32 %32, %1
  %34 = or i32 %2, %1
  %35 = xor i32 %34, -1
  %36 = xor i32 %35, %0
  %37 = xor i32 %11, -1
  %38 = or i32 %21, %37
  %39 = xor i32 %32, -1
  %40 = and i32 %39, %1
  %41 = and i32 %26, %2
  %42 = and i32 %18, %2
  %43 = and i32 %42, %0
  %44 = xor i32 %11, %0
  %45 = xor i32 %43, -1
  %46 = xor i32 %44, %45
  %47 = xor i32 %1, %0
  %48 = and i32 %7, %47
  %49 = or i32 %18, %0
  %50 = xor i32 %49, -1
  %51 = xor i32 %29, -1
  %52 = or i32 %51, %50
  %53 = or i32 %1, %0
  %54 = xor i32 %53, -1
  %55 = or i32 %23, %54
  %56 = or i32 %19, %47
  %57 = and i32 %49, %23
  %58 = or i32 %29, %18
  %59 = shl i32 %58, 1
  %60 = or i32 %29, %47
  %61 = and i32 %2, %1
  %62 = and i32 %61, %0
  %63 = xor i32 %34, %0
  %64 = or i32 %62, %63
  %65 = or i32 %23, %0
  %66 = xor i32 %65, -1
  %67 = or i32 %66, %18
  %68 = shl i32 %67, 2
  %69 = add i32 %53, 1
  %70 = and i32 %29, %18
  %71 = or i32 %19, %54
  %72 = or i32 %21, %23
  %73 = xor i32 %0, -1
  %74 = or i32 %34, %73
  %75 = xor i32 %61, -1
  %76 = or i32 %75, %0
  %77 = and i32 %47, %51
  %78 = or i32 %34, %0
  %79 = xor i32 %7, %1
  %80 = xor i32 %66, %1
  %81 = or i32 %21, %2
  %82 = and i32 %29, %53
  %83 = xor i32 %21, -1
  %84 = and i32 %23, %83
  %85 = and i32 %29, %26
  %86 = and i32 %23, %1
  %87 = xor i32 %86, -1
  %88 = xor i32 %21, %87
  %89 = xor i32 %47, -1
  %90 = or i32 %89, %2
  %91 = or i32 %87, %73
  %92 = and i32 %51, %89
  %93 = xor i32 %24, %10
  %94 = xor i32 %54, %2
  %95 = and i32 %34, %73
  %96 = xor i32 %87, %0
  %97 = and i32 %47, %39
  %98 = and i32 %23, %26
  %99 = or i32 %11, %54
  %100 = xor i32 %10, %2
  %101 = shl i32 %100, 1
  %102 = xor i32 %19, -1
  %103 = or i32 %50, %2
  %104 = xor i32 %102, %1
  %105 = shl i32 %104, 2
  %106 = and i32 %102, %18
  %107 = shl i32 %106, 1
  %108 = or i32 %8, %89
  %109 = or i32 %18, %2
  %110 = xor i32 %109, %73
  %111 = xor i32 %110, %43
  %112 = and i32 %61, %73
  %113 = and i32 %11, %0
  %114 = xor i32 %113, -1
  %115 = xor i32 %112, %114
  %116 = xor i32 %61, %0
  %117 = add i32 %29, 1
  %118 = and i32 %49, %2
  %119 = and i32 %83, %2
  %120 = or i32 %11, %0
  %121 = or i32 %47, %66
  %122 = or i32 %61, %0
  %123 = and i32 %29, %83
  %124 = and i32 %37, %0
  %125 = and i32 %53, %51
  %126 = add i32 %2, 1
  %127 = xor i32 %21, %75
  %128 = and i32 %34, %0
  %129 = or i32 %37, %50
  %130 = or i32 %24, %73
  %131 = and i32 %42, %73
  %132 = or i32 %11, %73
  %133 = xor i32 %132, -1
  %134 = or i32 %131, %133
  %135 = and i32 %29, %1
  %136 = xor i32 %49, %2
  %137 = xor i32 %25, %0
  %138 = or i32 %11, %21
  %139 = and i32 %87, %73
  %140 = or i32 %32, %18
  %141 = or i32 %54, %2
  %142 = xor i32 %19, %53
  %143 = shl i32 %142, 1
  %144 = xor i32 %62, %44
  %145 = or i32 %19, %1
  %146 = shl i32 %145, 1
  %147 = and i32 %7, %1
  %148 = and i32 %75, %73
  %149 = shl i32 %50, 2
  %150 = xor i32 %75, %0
  %151 = or i32 %61, %73
  %152 = shl i32 %151, 1
  %153 = or i32 %61, %21
  %154 = xor i32 %65, %10
  %155 = xor i32 %131, %132
  %156 = or i32 %8, %18
  %157 = xor i32 %83, %2
  %158 = and i32 %47, %23
  %159 = or i32 %35, %0
  %160 = xor i32 %34, %10
  %161 = and i32 %65, %18
  %162 = and i32 %65, %47
  %163 = xor i32 %19, %1
  %164 = or i32 %37, %73
  %165 = and i32 %35, %73
  %166 = and i32 %86, %73
  %167 = mul i32 %166, -23
  %168 = and i32 %35, %0
  %169 = mul i32 %168, -22
  %170 = and i32 %86, %0
  %171 = mul i32 %170, -19
  %172 = and i32 %25, %73
  %173 = mul i32 %112, -9
  %174 = and i32 %25, %0
  %175 = mul i32 %174, -24
  %176 = mul i32 %62, -20
  %177 = xor i32 %3, -1
  %178 = and i32 %177, %4
  %179 = xor i32 %5, %4
  %180 = or i32 %179, %178
  %181 = xor i32 %5, -1
  %182 = or i32 %181, %4
  %183 = xor i32 %15, -1
  %184 = and i32 %182, %183
  %185 = xor i32 %4, -1
  %186 = or i32 %181, %3
  %187 = xor i32 %186, -1
  %188 = or i32 %187, %185
  %189 = or i32 %14, %177
  %190 = and i32 %186, %4
  %191 = or i32 %5, %4
  %192 = xor i32 %191, %3
  %193 = and i32 %5, %3
  %194 = xor i32 %193, -1
  %195 = shl i32 %194, 1
  %196 = or i32 %5, %3
  %197 = xor i32 %196, -1
  %198 = or i32 %197, %185
  %199 = or i32 %177, %4
  %200 = xor i32 %14, %199
  %201 = and i32 %181, %3
  %202 = xor i32 %201, -1
  %203 = and i32 %202, %4
  %204 = and i32 %193, %4
  %205 = and i32 %196, %185
  %206 = or i32 %204, %205
  %207 = and i32 %181, %4
  %208 = xor i32 %207, -1
  %209 = and i32 %15, %208
  %210 = xor i32 %191, -1
  %211 = xor i32 %210, %3
  %212 = xor i32 %5, %3
  %213 = and i32 %212, %4
  %214 = xor i32 %207, %186
  %215 = xor i32 %178, -1
  %216 = and i32 %179, %215
  %217 = xor i32 %196, %4
  %218 = and i32 %194, %4
  %219 = or i32 %193, %178
  %220 = and i32 %4, %3
  %221 = xor i32 %220, -1
  %222 = and i32 %179, %221
  %223 = or i32 %220, %187
  %224 = and i32 %177, %5
  %225 = and i32 %224, %4
  %226 = or i32 %177, %5
  %227 = xor i32 %226, %4
  %228 = or i32 %225, %227
  %229 = xor i32 %212, -1
  %230 = and i32 %229, %4
  %231 = xor i32 %179, -1
  %232 = and i32 %231, %177
  %233 = or i32 %4, %3
  %234 = xor i32 %233, -1
  %235 = xor i32 %234, %5
  %236 = and i32 %186, %185
  %237 = xor i32 %14, -1
  %238 = and i32 %237, %3
  %239 = xor i32 %207, %3
  %240 = xor i32 %212, %4
  %241 = xor i32 %204, %240
  %242 = or i32 %194, %185
  %243 = and i32 %226, %185
  %244 = xor i32 %243, -1
  %245 = xor i32 %225, %244
  %246 = and i32 %224, %185
  %247 = and i32 %226, %4
  %248 = or i32 %246, %247
  %249 = or i32 %187, %4
  %250 = shl i32 %249, 1
  %251 = xor i32 %227, 2147483647
  %252 = xor i32 %251, %225
  %253 = add i32 %207, 1
  %254 = xor i32 %199, -1
  %255 = or i32 %254, %5
  %256 = or i32 %207, %3
  %257 = xor i32 %178, %5
  %258 = or i32 %181, %234
  %259 = add i32 %5, 1
  %260 = xor i32 %182, %3
  %261 = add i32 %186, 1
  %262 = and i32 %193, %185
  %263 = xor i32 %213, 2147483647
  %264 = xor i32 %263, %262
  %265 = and i32 %179, %183
  %266 = or i32 %229, %4
  %267 = or i32 %196, %4
  %268 = and i32 %212, %185
  %269 = and i32 %196, %4
  %270 = xor i32 %269, -1
  %271 = xor i32 %262, %270
  %272 = and i32 %233, %181
  %273 = and i32 %202, %185
  %274 = or i32 %262, %213
  %275 = and i32 %179, %199
  %276 = xor i32 %208, %3
  %277 = or i32 %212, %185
  %278 = shl i32 %277, 1
  %279 = xor i32 %240, -1
  %280 = or i32 %204, %279
  %281 = xor i32 %204, -1
  %282 = xor i32 %205, %281
  %283 = or i32 %15, %231
  %284 = or i32 %15, %181
  %285 = or i32 %212, %178
  %286 = or i32 %202, %185
  %287 = or i32 %14, %201
  %288 = or i32 %14, %183
  %289 = or i32 %207, %183
  %290 = shl i32 %289, 1
  %291 = or i32 %15, %5
  %292 = and i32 %212, %233
  %293 = and i32 %212, %199
  %294 = and i32 %181, %183
  %295 = or i32 %181, %183
  %296 = xor i32 %202, %4
  %297 = and i32 %231, %215
  %298 = and i32 %221, %5
  %299 = and i32 %179, %3
  %300 = add i32 %220, 1
  %301 = and i32 %191, %15
  %302 = or i32 %231, %183
  %303 = xor i32 %237, %3
  %304 = or i32 %229, %234
  %305 = shl i32 %304, 1
  %306 = and i32 %229, %185
  %307 = and i32 %15, %5
  %308 = and i32 %215, %5
  %309 = xor i32 %194, %4
  %310 = xor i32 %215, %5
  %311 = and i32 %179, %15
  %312 = or i32 %204, %268
  %313 = or i32 %231, %3
  %314 = shl i32 %313, 1
  %315 = and i32 %199, %5
  %316 = or i32 %220, %197
  %317 = and i32 %194, %185
  %318 = and i32 %237, %177
  %319 = or i32 %262, %269
  %320 = xor i32 %182, -1
  %321 = or i32 %220, %320
  %322 = xor i32 %201, %4
  %323 = or i32 %178, %231
  %324 = and i32 %229, %215
  %325 = or i32 %207, %187
  %326 = and i32 %182, %177
  %327 = and i32 %233, %231
  %328 = or i32 %193, %4
  %329 = or i32 %14, %234
  %330 = or i32 %193, %185
  %331 = or i32 %231, %254
  %332 = or i32 %207, %177
  %333 = or i32 %229, %185
  %334 = or i32 %197, %4
  %335 = xor i32 %217, 2147483647
  %336 = xor i32 %335, %204
  %337 = shl i32 %336, 1
  %338 = xor i32 %196, %220
  %339 = and i32 %212, %215
  %340 = xor i32 %220, %5
  %341 = or i32 %15, %320
  %342 = or i32 %14, %3
  %343 = or i32 %201, %185
  %344 = and i32 %199, %229
  %345 = or i32 %186, %4
  %346 = and i32 %208, %3
  %347 = xor i32 %178, %202
  %348 = and i32 %199, %231
  %349 = xor i32 %14, %202
  %350 = or i32 %212, %4
  %351 = or i32 %14, %254
  %352 = xor i32 %247, -1
  %353 = xor i32 %246, %352
  %354 = or i32 %210, %183
  %355 = and i32 %182, %3
  %356 = shl i32 %355, 1
  %357 = and i32 %179, %233
  %358 = and i32 %181, %221
  %359 = or i32 %179, %254
  %360 = xor i32 %221, %5
  %361 = shl i32 %360, 1
  %362 = and i32 %191, %3
  %363 = and i32 %208, %183
  %364 = shl i32 %363, 1
  %365 = and i32 %191, %177
  %366 = add i32 %233, 1
  %367 = or i32 %212, %254
  %368 = shl i32 %367, 2
  %369 = or i32 %231, %177
  %370 = shl i32 %369, 1
  %371 = or i32 %320, %3
  %372 = xor i32 %246, %277
  %373 = or i32 %186, %185
  %374 = shl i32 %202, 1
  %375 = add i32 %182, 1
  %376 = or i32 %15, %210
  %377 = xor i32 %199, %5
  %378 = and i32 %229, %221
  %379 = and i32 %231, %221
  %380 = xor i32 %225, %350
  %381 = or i32 %220, %229
  %382 = or i32 %212, %234
  %383 = and i32 %15, %181
  %384 = xor i32 %14, %196
  %385 = shl i32 %384, 1
  %386 = or i32 %179, %234
  %387 = or i32 %212, %220
  %388 = xor i32 %186, %4
  %389 = or i32 %14, %197
  %390 = and i32 %199, %181
  %391 = or i32 %210, %177
  %392 = and i32 %181, %215
  %393 = or i32 %201, %178
  %394 = xor i32 %182, %220
  %395 = or i32 %220, %210
  %396 = xor i32 %187, %4
  %397 = or i32 %178, %229
  %398 = xor i32 %191, %220
  %399 = or i32 %178, %181
  %400 = xor i32 %14, %233
  %401 = and i32 %183, %5
  %402 = and i32 %233, %229
  %403 = or i32 %178, %5
  %404 = shl i32 %403, 1
  %405 = xor i32 %350, -1
  %406 = or i32 %225, %405
  %407 = or i32 %225, %243
  %408 = and i32 %231, %3
  %409 = or i32 %229, %254
  %410 = or i32 %320, %183
  %411 = xor i32 %225, %279
  %412 = xor i32 %268, %281
  %413 = xor i32 %229, %4
  %414 = or i32 %225, %240
  %415 = or i32 %202, %4
  %416 = or i32 %320, %177
  %417 = shl i32 %416, 1
  %418 = xor i32 %320, %3
  %419 = and i32 %233, %5
  %420 = or i32 %204, %217
  %421 = and i32 %212, %221
  %422 = add i32 %191, 1
  %423 = xor i32 %207, %194
  %424 = or i32 %220, %231
  %425 = or i32 %196, %185
  %426 = or i32 %179, %15
  %427 = xor i32 %233, %5
  %428 = add i32 %178, 1
  %429 = and i32 %231, %183
  %430 = and i32 %15, %237
  %431 = or i32 %201, %4
  %432 = or i32 %234, %5
  %433 = shl i32 %233, 1
  %434 = add i32 %199, 1
  %435 = xor i32 %277, 2147483647
  %436 = or i32 %435, %246
  %437 = or i32 %179, %183
  %438 = shl i32 %437, 1
  %439 = or i32 %220, %5
  %440 = or i32 %194, %4
  %441 = shl i32 %440, 1
  %442 = xor i32 %186, %220
  %443 = or i32 %179, %177
  %444 = and i32 %191, %183
  %445 = and i32 %179, %177
  %446 = or i32 %207, %193
  %447 = and i32 %208, %177
  %448 = and i32 %182, %15
  %449 = and i32 %237, %183
  %450 = xor i32 %254, %5
  %451 = or i32 %210, %3
  %452 = or i32 %179, %3
  %453 = or i32 %183, %5
  %454 = and i32 %15, %231
  %455 = xor i32 %14, %3
  %456 = or i32 %220, %181
  %457 = or i32 %207, %15
  %458 = xor i32 %193, %4
  %459 = xor i32 %197, %4
  %460 = or i32 %231, %234
  %461 = or i32 %181, %254
  %462 = or i32 %179, %220
  %463 = and i32 %197, %185
  %464 = and i32 %201, %185
  %465 = mul i32 %464, 10
  %466 = and i32 %197, %4
  %467 = mul i32 %466, -14
  %468 = and i32 %201, %4
  %469 = and i32 %187, %185
  %470 = shl i32 %469, 4
  %471 = and i32 %187, %4
  %472 = add i32 %136, %21
  %473 = add i32 %472, %103
  %474 = add i32 %473, %98
  %475 = add i32 %474, %37
  %476 = add i32 %475, %72
  %477 = add i32 %476, %7
  %478 = add i32 %477, %25
  %479 = add i32 %478, %164
  %480 = add i32 %479, %159
  %481 = add i32 %480, %138
  %482 = add i32 %481, %137
  %483 = add i32 %482, %127
  %484 = add i32 %483, %93
  %485 = add i32 %484, %80
  %486 = add i32 %485, %33
  %487 = add i32 %486, %20
  %488 = add i32 %487, %144
  %489 = add i32 %488, %201
  %490 = add i32 %489, %229
  %491 = add i32 %490, %392
  %492 = add i32 %491, %295
  %493 = add i32 %492, %468
  %494 = add i32 %493, %446
  %495 = add i32 %494, %442
  %496 = add i32 %495, %430
  %497 = add i32 %496, %429
  %498 = add i32 %497, %389
  %499 = add i32 %498, %379
  %500 = add i32 %499, %378
  %501 = add i32 %500, %342
  %502 = add i32 %501, %327
  %503 = add i32 %502, %324
  %504 = add i32 %503, %309
  %505 = add i32 %504, %268
  %506 = add i32 %505, %267
  %507 = add i32 %506, %265
  %508 = add i32 %507, %414
  %509 = add i32 %508, %248
  %510 = add i32 %509, %264
  %511 = add i32 %510, %436
  %512 = add i32 %511, %252
  %513 = shl i32 %512, 1
  %514 = sub i32 %69, %358
  %515 = add i32 %514, %294
  %516 = sub i32 %515, %395
  %517 = mul i32 %516, 5
  %518 = add i32 %471, %463
  %519 = shl i32 %518, 3
  %520 = add i32 %301, %180
  %521 = shl i32 %520, 2
  %522 = add i32 %262, %172
  %523 = mul i32 %522, -11
  %524 = add i32 %204, %165
  %525 = mul i32 %524, -7
  %526 = add i32 %78, -1
  %527 = add i32 %526, %439
  %528 = sub i32 %527, %409
  %529 = add i32 %528, %420
  %530 = mul i32 %529, 3
  %531 = add i32 %0, %1
  %532 = add i32 %531, %47
  %533 = sub i32 %10, %532
  %534 = add i32 %533, %53
  %535 = add i32 %534, %126
  %536 = add i32 %535, %83
  %537 = add i32 %536, %22
  %538 = add i32 %537, %41
  %539 = add i32 %538, %55
  %540 = add i32 %539, %8
  %541 = sub i32 %540, %57
  %542 = add i32 %541, %81
  %543 = sub i32 %542, %34
  %544 = add i32 %543, %84
  %545 = add i32 %544, %90
  %546 = add i32 %545, %94
  %547 = sub i32 %546, %86
  %548 = add i32 %547, %102
  %549 = add i32 %548, %117
  %550 = add i32 %549, %118
  %551 = sub i32 %550, %119
  %552 = sub i32 %551, %11
  %553 = add i32 %552, %141
  %554 = add i32 %553, %66
  %555 = sub i32 %554, %149
  %556 = add i32 %555, %157
  %557 = sub i32 %556, %158
  %558 = add i32 %557, %75
  %559 = add i32 %558, %24
  %560 = add i32 %559, 1
  %561 = sub i32 %560, %28
  %562 = add i32 %561, %36
  %563 = add i32 %562, %38
  %564 = sub i32 %563, %40
  %565 = sub i32 %564, %48
  %566 = add i32 %565, %52
  %567 = add i32 %566, %56
  %568 = add i32 %567, %60
  %569 = add i32 %568, %70
  %570 = sub i32 %569, %71
  %571 = sub i32 %570, %74
  %572 = add i32 %571, %76
  %573 = add i32 %572, %77
  %574 = add i32 %573, %79
  %575 = sub i32 %574, %82
  %576 = sub i32 %575, %85
  %577 = sub i32 %576, %88
  %578 = add i32 %577, %91
  %579 = sub i32 %578, %92
  %580 = sub i32 %579, %95
  %581 = sub i32 %580, %96
  %582 = sub i32 %581, %97
  %583 = add i32 %582, %99
  %584 = sub i32 %583, %101
  %585 = add i32 %584, %108
  %586 = add i32 %585, %116
  %587 = add i32 %586, %120
  %588 = add i32 %587, %121
  %589 = add i32 %588, %122
  %590 = sub i32 %589, %123
  %591 = add i32 %590, %124
  %592 = add i32 %591, %125
  %593 = sub i32 %592, %128
  %594 = sub i32 %593, %129
  %595 = add i32 %594, %130
  %596 = add i32 %595, %135
  %597 = add i32 %596, %139
  %598 = sub i32 %597, %140
  %599 = add i32 %598, %147
  %600 = sub i32 %599, %148
  %601 = add i32 %600, %150
  %602 = sub i32 %601, %153
  %603 = add i32 %602, %154
  %604 = sub i32 %603, %156
  %605 = add i32 %604, %160
  %606 = sub i32 %605, %161
  %607 = add i32 %606, %162
  %608 = add i32 %607, %44
  %609 = add i32 %608, %163
  %610 = sub i32 %609, %31
  %611 = sub i32 %610, %46
  %612 = sub i32 %611, %59
  %613 = add i32 %612, %64
  %614 = sub i32 %613, %68
  %615 = sub i32 %614, %105
  %616 = sub i32 %615, %107
  %617 = sub i32 %616, %111
  %618 = sub i32 %617, %115
  %619 = sub i32 %618, %134
  %620 = sub i32 %619, %143
  %621 = sub i32 %620, %146
  %622 = sub i32 %621, %152
  %623 = add i32 %622, %155
  %624 = add i32 %623, %167
  %625 = add i32 %624, %169
  %626 = add i32 %625, %171
  %627 = add i32 %626, %173
  %628 = add i32 %627, %175
  %629 = add i32 %628, %176
  %630 = add i32 %629, %259
  %631 = sub i32 %630, %199
  %632 = add i32 %631, %300
  %633 = add i32 %632, %178
  %634 = add i32 %633, %366
  %635 = sub i32 %634, %5
  %636 = add i32 %635, %220
  %637 = add i32 %636, %428
  %638 = add i32 %637, %434
  %639 = add i32 %638, %191
  %640 = add i32 %639, %182
  %641 = add i32 %640, %235
  %642 = sub i32 %641, %212
  %643 = add i32 %642, %253
  %644 = add i32 %643, %255
  %645 = sub i32 %644, %257
  %646 = sub i32 %645, %186
  %647 = add i32 %646, %258
  %648 = add i32 %647, %261
  %649 = add i32 %648, %272
  %650 = add i32 %649, %207
  %651 = add i32 %650, %284
  %652 = add i32 %651, %291
  %653 = sub i32 %652, %298
  %654 = sub i32 %653, %307
  %655 = sub i32 %654, %308
  %656 = sub i32 %655, %310
  %657 = add i32 %656, %231
  %658 = sub i32 %657, %315
  %659 = add i32 %658, %237
  %660 = sub i32 %659, %179
  %661 = sub i32 %660, %340
  %662 = sub i32 %661, %14
  %663 = add i32 %662, %375
  %664 = sub i32 %663, %377
  %665 = sub i32 %664, %383
  %666 = add i32 %665, %390
  %667 = sub i32 %666, %399
  %668 = sub i32 %667, %401
  %669 = add i32 %668, %419
  %670 = add i32 %669, %422
  %671 = add i32 %670, %427
  %672 = add i32 %671, %432
  %673 = sub i32 %672, %433
  %674 = add i32 %673, %193
  %675 = sub i32 %674, %450
  %676 = add i32 %675, %453
  %677 = sub i32 %676, %456
  %678 = add i32 %677, %461
  %679 = add i32 %678, %184
  %680 = sub i32 %679, %188
  %681 = add i32 %680, %189
  %682 = sub i32 %681, %190
  %683 = sub i32 %682, %192
  %684 = sub i32 %683, %195
  %685 = sub i32 %684, %198
  %686 = sub i32 %685, %200
  %687 = add i32 %686, %203
  %688 = sub i32 %687, %209
  %689 = add i32 %688, %211
  %690 = sub i32 %689, %213
  %691 = sub i32 %690, %214
  %692 = sub i32 %691, %216
  %693 = add i32 %692, %217
  %694 = sub i32 %693, %218
  %695 = sub i32 %694, %219
  %696 = sub i32 %695, %222
  %697 = add i32 %696, %223
  %698 = add i32 %697, %230
  %699 = add i32 %698, %232
  %700 = sub i32 %699, %236
  %701 = sub i32 %700, %238
  %702 = add i32 %701, %239
  %703 = sub i32 %702, %242
  %704 = add i32 %703, %256
  %705 = add i32 %704, %260
  %706 = add i32 %705, %266
  %707 = sub i32 %706, %273
  %708 = sub i32 %707, %275
  %709 = sub i32 %708, %276
  %710 = sub i32 %709, %283
  %711 = sub i32 %710, %285
  %712 = add i32 %711, %286
  %713 = sub i32 %712, %287
  %714 = sub i32 %713, %288
  %715 = add i32 %714, %292
  %716 = add i32 %715, %293
  %717 = add i32 %716, %296
  %718 = add i32 %717, %297
  %719 = add i32 %718, %299
  %720 = sub i32 %719, %302
  %721 = add i32 %720, %303
  %722 = add i32 %721, %306
  %723 = sub i32 %722, %311
  %724 = sub i32 %723, %316
  %725 = sub i32 %724, %317
  %726 = add i32 %725, %318
  %727 = sub i32 %726, %321
  %728 = add i32 %727, %322
  %729 = sub i32 %728, %323
  %730 = add i32 %729, %325
  %731 = add i32 %730, %205
  %732 = add i32 %731, %326
  %733 = sub i32 %732, %328
  %734 = add i32 %733, %329
  %735 = add i32 %734, %330
  %736 = add i32 %735, %331
  %737 = add i32 %736, %332
  %738 = add i32 %737, %333
  %739 = add i32 %738, %334
  %740 = sub i32 %739, %338
  %741 = add i32 %740, %339
  %742 = add i32 %741, %341
  %743 = sub i32 %742, %343
  %744 = add i32 %743, %344
  %745 = add i32 %744, %345
  %746 = sub i32 %745, %346
  %747 = add i32 %746, %347
  %748 = sub i32 %747, %348
  %749 = add i32 %748, %349
  %750 = sub i32 %749, %350
  %751 = sub i32 %750, %351
  %752 = sub i32 %751, %354
  %753 = sub i32 %752, %357
  %754 = add i32 %753, %359
  %755 = sub i32 %754, %361
  %756 = add i32 %755, %362
  %757 = add i32 %756, %365
  %758 = sub i32 %757, %371
  %759 = add i32 %758, %373
  %760 = sub i32 %759, %374
  %761 = sub i32 %760, %376
  %762 = add i32 %761, %381
  %763 = sub i32 %762, %382
  %764 = add i32 %763, %386
  %765 = add i32 %764, %387
  %766 = add i32 %765, %388
  %767 = sub i32 %766, %391
  %768 = add i32 %767, %393
  %769 = add i32 %768, %394
  %770 = sub i32 %769, %396
  %771 = sub i32 %770, %397
  %772 = sub i32 %771, %398
  %773 = add i32 %772, %400
  %774 = add i32 %773, %402
  %775 = sub i32 %774, %404
  %776 = add i32 %775, %408
  %777 = add i32 %776, %240
  %778 = sub i32 %777, %410
  %779 = add i32 %778, %413
  %780 = add i32 %779, %415
  %781 = sub i32 %780, %418
  %782 = add i32 %781, %421
  %783 = sub i32 %782, %423
  %784 = sub i32 %783, %424
  %785 = sub i32 %784, %425
  %786 = sub i32 %785, %426
  %787 = sub i32 %786, %431
  %788 = sub i32 %787, %443
  %789 = add i32 %788, %444
  %790 = sub i32 %789, %445
  %791 = sub i32 %790, %447
  %792 = sub i32 %791, %448
  %793 = add i32 %792, %449
  %794 = add i32 %793, %451
  %795 = add i32 %794, %452
  %796 = add i32 %795, %454
  %797 = add i32 %796, %455
  %798 = add i32 %797, %457
  %799 = add i32 %798, %458
  %800 = add i32 %799, %459
  %801 = sub i32 %800, %269
  %802 = sub i32 %801, %460
  %803 = add i32 %802, %462
  %804 = add i32 %803, %206
  %805 = add i32 %804, %228
  %806 = sub i32 %805, %241
  %807 = sub i32 %806, %245
  %808 = sub i32 %807, %250
  %809 = sub i32 %808, %271
  %810 = sub i32 %809, %274
  %811 = sub i32 %810, %278
  %812 = sub i32 %811, %280
  %813 = sub i32 %812, %282
  %814 = sub i32 %813, %290
  %815 = sub i32 %814, %305
  %816 = sub i32 %815, %312
  %817 = sub i32 %816, %314
  %818 = sub i32 %817, %319
  %819 = add i32 %818, %353
  %820 = sub i32 %819, %356
  %821 = sub i32 %820, %364
  %822 = sub i32 %821, %368
  %823 = sub i32 %822, %370
  %824 = add i32 %823, %372
  %825 = sub i32 %824, %380
  %826 = sub i32 %825, %385
  %827 = sub i32 %826, %406
  %828 = sub i32 %827, %407
  %829 = add i32 %828, %411
  %830 = add i32 %829, %412
  %831 = sub i32 %830, %417
  %832 = sub i32 %831, %438
  %833 = sub i32 %832, %441
  %834 = add i32 %833, %465
  %835 = add i32 %834, %467
  %836 = add i32 %835, %470
  %837 = add i32 %836, %519
  %838 = add i32 %837, %521
  %839 = add i32 %838, %523
  %840 = add i32 %839, %525
  %841 = sub i32 %840, %337
  %842 = add i32 %841, %517
  %843 = add i32 %842, %530
  %844 = add i32 %843, %513
  %845 = icmp eq i32 %17, %844
  %846 = select i1 %845, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %847 = tail call i32 @puts(i8* nonnull dereferenceable(1) %846)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
