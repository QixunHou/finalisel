digraph "DFG for'main' function" {
	Node0x2097f98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2098018[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x20980a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2098108[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2098588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2098668[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x2098768[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2098828[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x20988d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2098b38[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x2098bf8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2099b68[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2099bc8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2099cc0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x209a578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x209a6b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x209a7c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x209a888[shape=record, label="  ret i32 0"];
	Node0x2097f98 -> Node0x2098018;
	Node0x2098018 -> Node0x20980a8;
	Node0x20980a8 -> Node0x2098108;
	Node0x2098108 -> Node0x2098588;
	Node0x2098588 -> Node0x2098668;
	Node0x2098668 -> Node0x2098768;
	Node0x2098768 -> Node0x2098828;
	Node0x2098828 -> Node0x20988d8;
	Node0x20988d8 -> Node0x2098b38;
	Node0x2098b38 -> Node0x2098bf8;
	Node0x2098bf8 -> Node0x2099b68;
	Node0x2099b68 -> Node0x2099bc8;
	Node0x2099bc8 -> Node0x2099cc0;
	Node0x2099cc0 -> Node0x209a578;
	Node0x209a578 -> Node0x209a6b8;
	Node0x209a6b8 -> Node0x209a7c8;
	Node0x209a7c8 -> Node0x209a888;
edge [color=red]
	Node0x2097f98 -> Node0x2098108;
	Node0x2098108 -> Node0x2098588;
	Node0x2098018 -> Node0x2098668;
	Node0x2098668 -> Node0x2098768;
	Node0x20980a8 -> Node0x2098828;
	Node0x2098828 -> Node0x20988d8;
	Node0x2097f98 -> Node0x2098b38;
	Node0x2098018 -> Node0x2098b38;
	Node0x20980a8 -> Node0x2098b38;
	Node0x2097f98 -> Node0x2098bf8;
	Node0x2098018 -> Node0x2099b68;
	Node0x20980a8 -> Node0x2099bc8;
	Node0x2098bf8 -> Node0x2099cc0;
	Node0x2099b68 -> Node0x2099cc0;
	Node0x2099bc8 -> Node0x2099cc0;
	Node0x2098828 -> Node0x209a578;
	Node0x2098668 -> Node0x209a6b8;
	Node0x2098108 -> Node0x209a7c8;
}
