; ModuleID = '../.././c_source_file/0539_path_condition_crackme.c'
source_filename = "../.././c_source_file/0539_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %2, -1
  %5 = xor i32 %1, %0
  %6 = xor i32 %5, -1
  %7 = or i32 %4, %6
  %8 = and i32 %2, %0
  %9 = or i32 %2, %1
  %10 = xor i32 %8, %9
  %11 = sub i32 %10, %7
  %12 = xor i32 %1, -1
  %13 = xor i32 %2, %0
  %14 = and i32 %13, %12
  %15 = or i32 %1, %0
  %16 = xor i32 %15, -1
  %17 = or i32 %16, %2
  %18 = xor i32 %13, -1
  %19 = and i32 %5, %18
  %20 = and i32 %4, %0
  %21 = or i32 %4, %1
  %22 = xor i32 %21, -1
  %23 = or i32 %20, %22
  %24 = and i32 %12, %0
  %25 = or i32 %24, %2
  %26 = shl i32 %21, 1
  %27 = or i32 %2, %0
  %28 = and i32 %27, %5
  %29 = and i32 %12, %2
  %30 = and i32 %29, %0
  %31 = xor i32 %2, %1
  %32 = xor i32 %31, %0
  %33 = xor i32 %32, -1
  %34 = xor i32 %30, %33
  %35 = and i32 %2, %1
  %36 = and i32 %35, %0
  %37 = xor i32 %0, -1
  %38 = and i32 %9, %37
  %39 = xor i32 %36, 2147483647
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 1
  %42 = xor i32 %24, -1
  %43 = xor i32 %31, -1
  %44 = and i32 %43, %42
  %45 = and i32 %1, %0
  %46 = xor i32 %27, %45
  %47 = xor i32 %27, -1
  %48 = add i32 %27, 1
  %49 = or i32 %12, %0
  %50 = xor i32 %49, -1
  %51 = or i32 %13, %50
  %52 = or i32 %12, %2
  %53 = xor i32 %52, %0
  %54 = xor i32 %53, -1
  %55 = xor i32 %30, %54
  %56 = and i32 %4, %1
  %57 = xor i32 %56, %0
  %58 = add i32 %31, 1
  %59 = or i32 %31, %45
  %60 = or i32 %21, %0
  %61 = xor i32 %8, -1
  %62 = and i32 %61, %12
  %63 = xor i32 %22, %0
  %64 = or i32 %18, %1
  %65 = xor i32 %42, %2
  %66 = or i32 %22, %0
  %67 = and i32 %52, %37
  %68 = or i32 %30, %67
  %69 = and i32 %49, %4
  %70 = xor i32 %36, %32
  %71 = shl i32 %70, 1
  %72 = or i32 %30, %53
  %73 = or i32 %22, %37
  %74 = xor i32 %9, %0
  %75 = or i32 %4, %0
  %76 = xor i32 %75, -1
  %77 = or i32 %76, %1
  %78 = and i32 %43, %37
  %79 = add i32 %5, 1
  %80 = or i32 %45, %43
  %81 = or i32 %4, %50
  %82 = or i32 %20, %1
  %83 = and i32 %6, %2
  %84 = and i32 %21, %37
  %85 = xor i32 %15, %2
  %86 = and i32 %31, %37
  %87 = or i32 %36, %86
  %88 = or i32 %18, %12
  %89 = or i32 %31, %0
  %90 = xor i32 %89, 2147483647
  %91 = or i32 %90, %30
  %92 = or i32 %13, %24
  %93 = and i32 %49, %18
  %94 = or i32 %36, %38
  %95 = and i32 %5, %61
  %96 = xor i32 %8, %15
  %97 = xor i32 %9, -1
  %98 = shl i32 %97, 2
  %99 = or i32 %97, %0
  %100 = xor i32 %45, -1
  %101 = and i32 %43, %100
  %102 = xor i32 %74, -1
  %103 = xor i32 %36, %102
  %104 = or i32 %47, %12
  %105 = or i32 %50, %2
  %106 = xor i32 %20, %1
  %107 = and i32 %15, %2
  %108 = or i32 %13, %12
  %109 = or i32 %8, %97
  %110 = xor i32 %8, %1
  %111 = and i32 %100, %2
  %112 = or i32 %18, %50
  %113 = xor i32 %47, %1
  %114 = xor i32 %20, -1
  %115 = and i32 %114, %1
  %116 = or i32 %24, %4
  %117 = shl i32 %116, 1
  %118 = and i32 %27, %12
  %119 = or i32 %5, %47
  %120 = xor i32 %75, %45
  %121 = xor i32 %76, %1
  %122 = or i32 %20, %35
  %123 = or i32 %5, %4
  %124 = shl i32 %8, 1
  %125 = and i32 %61, %6
  %126 = or i32 %5, %18
  %127 = and i32 %61, %1
  %128 = shl i32 %127, 1
  %129 = xor i32 %56, -1
  %130 = and i32 %129, %37
  %131 = or i32 %45, %76
  %132 = xor i32 %114, %1
  %133 = or i32 %13, %1
  %134 = and i32 %15, %43
  %135 = or i32 %31, %16
  %136 = or i32 %18, %16
  %137 = or i32 %56, %37
  %138 = xor i32 %24, %2
  %139 = or i32 %76, %6
  %140 = shl i32 %139, 1
  %141 = or i32 %8, %1
  %142 = xor i32 %61, %1
  %143 = xor i32 %35, %0
  %144 = shl i32 %143, 1
  %145 = xor i32 %35, -1
  %146 = add i32 %35, 1
  %147 = or i32 %6, %2
  %148 = and i32 %35, %37
  %149 = and i32 %9, %0
  %150 = or i32 %148, %149
  %151 = or i32 %8, %12
  %152 = and i32 %49, %2
  %153 = or i32 %30, %32
  %154 = and i32 %13, %100
  %155 = or i32 %9, %37
  %156 = shl i32 %155, 1
  %157 = xor i32 %97, %0
  %158 = and i32 %13, %5
  %159 = or i32 %145, %0
  %160 = and i32 %29, %37
  %161 = and i32 %52, %0
  %162 = xor i32 %161, 2147483647
  %163 = xor i32 %162, %160
  %164 = shl i32 %163, 1
  %165 = and i32 %5, %2
  %166 = shl i32 %165, 1
  %167 = or i32 %20, %6
  %168 = shl i32 %167, 1
  %169 = and i32 %13, %6
  %170 = or i32 %13, %5
  %171 = or i32 %4, %16
  %172 = xor i32 %8, %129
  %173 = and i32 %31, %100
  %174 = or i32 %129, %37
  %175 = and i32 %27, %1
  %176 = or i32 %24, %18
  %177 = shl i32 %176, 1
  %178 = and i32 %27, %6
  %179 = shl i32 %15, 1
  %180 = or i32 %36, %33
  %181 = and i32 %75, %12
  %182 = or i32 %47, %1
  %183 = or i32 %45, %97
  %184 = and i32 %31, %42
  %185 = or i32 %56, %0
  %186 = or i32 %35, %37
  %187 = shl i32 %186, 1
  %188 = and i32 %43, %0
  %189 = or i32 %13, %6
  %190 = and i32 %114, %6
  %191 = xor i32 %24, %129
  %192 = or i32 %45, %47
  %193 = or i32 %43, %0
  %194 = or i32 %20, %12
  %195 = or i32 %9, %0
  %196 = or i32 %43, %50
  %197 = and i32 %129, %0
  %198 = and i32 %31, %0
  %199 = xor i32 %16, %2
  %200 = or i32 %148, %198
  %201 = or i32 %97, %37
  %202 = or i32 %21, %37
  %203 = and i32 %75, %6
  %204 = shl i32 %27, 1
  %205 = xor i32 %75, %1
  %206 = xor i32 %24, %145
  %207 = or i32 %76, %12
  %208 = xor i32 %145, %0
  %209 = and i32 %4, %6
  %210 = or i32 %5, %76
  %211 = xor i32 %50, %2
  %212 = and i32 %4, %100
  %213 = and i32 %5, %4
  %214 = shl i32 %213, 1
  %215 = and i32 %75, %5
  %216 = and i32 %145, %0
  %217 = shl i32 %45, 1
  %218 = or i32 %8, %50
  %219 = xor i32 %30, %89
  %220 = or i32 %13, %16
  %221 = shl i32 %220, 1
  %222 = or i32 %145, %37
  %223 = xor i32 %21, %0
  %224 = or i32 %35, %0
  %225 = or i32 %13, %45
  %226 = or i32 %160, %161
  %227 = and i32 %5, %114
  %228 = xor i32 %21, %45
  %229 = xor i32 %149, -1
  %230 = xor i32 %148, %229
  %231 = or i32 %31, %50
  %232 = add i32 %56, 1
  %233 = and i32 %13, %49
  %234 = or i32 %5, %2
  %235 = and i32 %13, %42
  %236 = xor i32 %8, %49
  %237 = and i32 %13, %1
  %238 = shl i32 %237, 1
  %239 = or i32 %45, %22
  %240 = xor i32 %39, %86
  %241 = and i32 %18, %12
  %242 = shl i32 %241, 1
  %243 = or i32 %8, %6
  %244 = or i32 %43, %37
  %245 = or i32 %8, %56
  %246 = or i32 %129, %0
  %247 = and i32 %145, %37
  %248 = and i32 %75, %1
  %249 = shl i32 %248, 1
  %250 = xor i32 %43, %0
  %251 = xor i32 %129, %0
  %252 = xor i32 %49, %2
  %253 = and i32 %15, %4
  %254 = xor i32 %20, %145
  %255 = xor i32 %45, %2
  %256 = shl i32 %255, 1
  %257 = or i32 %24, %43
  %258 = or i32 %8, %16
  %259 = xor i32 %9, %45
  %260 = or i32 %31, %24
  %261 = shl i32 %260, 1
  %262 = and i32 %21, %0
  %263 = and i32 %31, %15
  %264 = or i32 %47, %6
  %265 = xor i32 %27, %1
  %266 = and i32 %49, %43
  %267 = or i32 %45, %4
  %268 = and i32 %4, %42
  %269 = or i32 %45, %18
  %270 = or i32 %43, %16
  %271 = and i32 %13, %15
  %272 = xor i32 %271, -1
  %273 = or i32 %18, %6
  %274 = or i32 %36, %74
  %275 = and i32 %18, %100
  %276 = or i32 %31, %37
  %277 = and i32 %15, %18
  %278 = and i32 %18, %6
  %279 = shl i32 %278, 1
  %280 = xor i32 %100, %2
  %281 = or i32 %35, %24
  %282 = xor i32 %160, %276
  %283 = xor i32 %276, -1
  %284 = or i32 %160, %283
  %285 = shl i32 %100, 1
  %286 = shl i32 %61, 1
  %287 = and i32 %18, %42
  %288 = shl i32 %287, 1
  %289 = or i32 %8, %5
  %290 = or i32 %20, %5
  %291 = xor i32 %20, %21
  %292 = and i32 %97, %37
  %293 = and i32 %56, %37
  %294 = and i32 %97, %0
  %295 = shl i32 %294, 3
  %296 = and i32 %56, %0
  %297 = and i32 %22, %37
  %298 = mul i32 %297, -21
  %299 = mul i32 %148, -10
  %300 = and i32 %22, %0
  %301 = shl i32 %300, 2
  %302 = mul i32 %36, -12
  %303 = add i32 %253, %0
  %304 = add i32 %303, %22
  %305 = add i32 %304, %56
  %306 = add i32 %305, %105
  %307 = add i32 %306, %65
  %308 = add i32 %307, %269
  %309 = add i32 %308, %258
  %310 = add i32 %309, %244
  %311 = add i32 %310, %233
  %312 = add i32 %311, %231
  %313 = add i32 %312, %225
  %314 = add i32 %313, %222
  %315 = add i32 %314, %205
  %316 = add i32 %315, %191
  %317 = add i32 %316, %188
  %318 = add i32 %317, %181
  %319 = add i32 %318, %132
  %320 = add i32 %319, %121
  %321 = add i32 %320, %113
  %322 = add i32 %321, %101
  %323 = add i32 %322, %95
  %324 = add i32 %323, %219
  %325 = add i32 %324, %91
  %326 = add i32 %325, %240
  %327 = shl i32 %326, 1
  %328 = sub i32 %196, %276
  %329 = add i32 %328, %169
  %330 = add i32 %329, %141
  %331 = add i32 %330, %122
  %332 = sub i32 %331, %153
  %333 = mul i32 %332, 3
  %334 = add i32 %292, %77
  %335 = add i32 %334, %66
  %336 = add i32 %335, %14
  %337 = mul i32 %336, 5
  %338 = sub i32 %296, %293
  %339 = mul i32 %338, 11
  %340 = add i32 %32, 1073741823
  %341 = add i32 %340, %88
  %342 = shl i32 %341, 2
  %343 = add i32 %0, 2
  %344 = add i32 %343, %16
  %345 = add i32 %344, %79
  %346 = add i32 %345, %4
  %347 = add i32 %346, %50
  %348 = sub i32 %347, %2
  %349 = add i32 %348, %5
  %350 = sub i32 %349, %49
  %351 = sub i32 %350, %17
  %352 = sub i32 %351, %25
  %353 = add i32 %352, %48
  %354 = add i32 %353, %31
  %355 = add i32 %354, %58
  %356 = sub i32 %355, %69
  %357 = sub i32 %356, %9
  %358 = add i32 %357, %81
  %359 = sub i32 %358, %83
  %360 = add i32 %359, %85
  %361 = add i32 %360, %107
  %362 = add i32 %361, %111
  %363 = add i32 %362, %35
  %364 = add i32 %363, %123
  %365 = sub i32 %364, %138
  %366 = add i32 %365, %146
  %367 = add i32 %366, %147
  %368 = sub i32 %367, %152
  %369 = sub i32 %368, %171
  %370 = sub i32 %369, %179
  %371 = add i32 %370, %199
  %372 = add i32 %371, %209
  %373 = add i32 %372, %211
  %374 = add i32 %373, %212
  %375 = sub i32 %374, %217
  %376 = add i32 %375, %232
  %377 = add i32 %376, %234
  %378 = sub i32 %377, %252
  %379 = add i32 %378, %267
  %380 = sub i32 %379, %268
  %381 = sub i32 %380, %280
  %382 = sub i32 %381, %285
  %383 = add i32 %382, %19
  %384 = sub i32 %383, %23
  %385 = sub i32 %384, %26
  %386 = sub i32 %385, %28
  %387 = sub i32 %386, %44
  %388 = sub i32 %387, %46
  %389 = sub i32 %388, %51
  %390 = sub i32 %389, %57
  %391 = add i32 %390, %59
  %392 = sub i32 %391, %60
  %393 = add i32 %392, %62
  %394 = sub i32 %393, %63
  %395 = add i32 %394, %64
  %396 = add i32 %395, %73
  %397 = sub i32 %396, %74
  %398 = add i32 %397, %78
  %399 = sub i32 %398, %80
  %400 = sub i32 %399, %82
  %401 = sub i32 %400, %84
  %402 = add i32 %401, %92
  %403 = sub i32 %402, %93
  %404 = sub i32 %403, %96
  %405 = sub i32 %404, %98
  %406 = add i32 %405, %99
  %407 = add i32 %406, %104
  %408 = add i32 %407, %106
  %409 = sub i32 %408, %108
  %410 = sub i32 %409, %109
  %411 = sub i32 %410, %110
  %412 = sub i32 %411, %89
  %413 = add i32 %412, %112
  %414 = sub i32 %413, %115
  %415 = sub i32 %414, %117
  %416 = sub i32 %415, %118
  %417 = add i32 %416, %119
  %418 = sub i32 %417, %120
  %419 = sub i32 %418, %124
  %420 = sub i32 %419, %125
  %421 = add i32 %420, %126
  %422 = sub i32 %421, %130
  %423 = add i32 %422, %131
  %424 = add i32 %423, %133
  %425 = sub i32 %424, %134
  %426 = sub i32 %425, %135
  %427 = sub i32 %426, %136
  %428 = add i32 %427, %137
  %429 = add i32 %428, %142
  %430 = add i32 %429, %151
  %431 = add i32 %430, %154
  %432 = sub i32 %431, %157
  %433 = sub i32 %432, %158
  %434 = sub i32 %433, %159
  %435 = sub i32 %434, %166
  %436 = add i32 %435, %38
  %437 = sub i32 %436, %170
  %438 = add i32 %437, %86
  %439 = sub i32 %438, %172
  %440 = sub i32 %439, %173
  %441 = add i32 %440, %174
  %442 = sub i32 %441, %175
  %443 = sub i32 %442, %178
  %444 = add i32 %443, %149
  %445 = add i32 %444, %182
  %446 = sub i32 %445, %183
  %447 = sub i32 %446, %184
  %448 = sub i32 %447, %185
  %449 = sub i32 %448, %189
  %450 = add i32 %449, %190
  %451 = sub i32 %450, %192
  %452 = sub i32 %451, %193
  %453 = add i32 %452, %194
  %454 = add i32 %453, %195
  %455 = add i32 %454, %197
  %456 = sub i32 %455, %198
  %457 = add i32 %456, %201
  %458 = add i32 %457, %202
  %459 = sub i32 %458, %203
  %460 = sub i32 %459, %204
  %461 = add i32 %460, %206
  %462 = sub i32 %461, %207
  %463 = add i32 %462, %208
  %464 = add i32 %463, %210
  %465 = sub i32 %464, %214
  %466 = sub i32 %465, %215
  %467 = sub i32 %466, %216
  %468 = add i32 %467, %218
  %469 = add i32 %468, %223
  %470 = sub i32 %469, %224
  %471 = add i32 %470, %227
  %472 = sub i32 %471, %228
  %473 = sub i32 %472, %235
  %474 = add i32 %473, %236
  %475 = add i32 %474, %239
  %476 = sub i32 %475, %243
  %477 = sub i32 %476, %245
  %478 = sub i32 %477, %246
  %479 = sub i32 %478, %247
  %480 = add i32 %479, %250
  %481 = sub i32 %480, %251
  %482 = add i32 %481, %254
  %483 = sub i32 %482, %256
  %484 = add i32 %483, %257
  %485 = add i32 %484, %259
  %486 = sub i32 %485, %262
  %487 = sub i32 %486, %263
  %488 = sub i32 %487, %264
  %489 = add i32 %488, %265
  %490 = sub i32 %489, %266
  %491 = add i32 %490, %270
  %492 = add i32 %491, %272
  %493 = sub i32 %492, %273
  %494 = sub i32 %493, %275
  %495 = sub i32 %494, %277
  %496 = add i32 %495, %281
  %497 = sub i32 %496, %286
  %498 = add i32 %497, %289
  %499 = sub i32 %498, %290
  %500 = add i32 %499, %291
  %501 = add i32 %500, %34
  %502 = sub i32 %501, %55
  %503 = add i32 %502, %68
  %504 = sub i32 %503, %72
  %505 = sub i32 %504, %87
  %506 = sub i32 %505, %94
  %507 = sub i32 %506, %103
  %508 = sub i32 %507, %128
  %509 = sub i32 %508, %140
  %510 = sub i32 %509, %144
  %511 = sub i32 %510, %150
  %512 = sub i32 %511, %156
  %513 = sub i32 %512, %168
  %514 = sub i32 %513, %177
  %515 = add i32 %514, %180
  %516 = sub i32 %515, %187
  %517 = add i32 %516, %200
  %518 = sub i32 %517, %221
  %519 = sub i32 %518, %226
  %520 = add i32 %519, %230
  %521 = sub i32 %520, %238
  %522 = sub i32 %521, %242
  %523 = sub i32 %522, %249
  %524 = sub i32 %523, %261
  %525 = add i32 %524, %274
  %526 = sub i32 %525, %279
  %527 = sub i32 %526, %282
  %528 = add i32 %527, %284
  %529 = sub i32 %528, %288
  %530 = sub i32 %529, %295
  %531 = add i32 %530, %298
  %532 = add i32 %531, %299
  %533 = sub i32 %532, %301
  %534 = add i32 %533, %302
  %535 = sub i32 %534, %71
  %536 = add i32 %535, %339
  %537 = sub i32 %536, %41
  %538 = sub i32 %537, %164
  %539 = add i32 %538, %342
  %540 = add i32 %539, %337
  %541 = add i32 %540, %333
  %542 = add i32 %541, %327
  %543 = icmp eq i32 %11, %542
  %544 = select i1 %543, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %545 = tail call i32 @puts(i8* nonnull dereferenceable(1) %544)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
