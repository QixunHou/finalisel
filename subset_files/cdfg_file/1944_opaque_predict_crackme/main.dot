digraph "DFG for'main' function" {
	Node0xddcf28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xddcfa8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xddd038[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xddd498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xddd578[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xddd698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xddd8d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xddd988[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xdde8f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xddef80[shape=record, label="  %8 = or i32 %7, %6"];
	Node0xddeff0[shape=record, label="  %9 = sub i32 0, %8"];
	Node0xddf060[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0xddf0d0[shape=record, label="  %11 = or i32 %6, %10"];
	Node0xddf140[shape=record, label="  %12 = shl i32 %7, 1"];
	Node0xddf1b0[shape=record, label="  %13 = shl i32 %6, 2"];
	Node0xddf220[shape=record, label="  %14 = and i32 %6, %10"];
	Node0xddf290[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xddf300[shape=record, label="  %16 = xor i32 %6, %10"];
	Node0xddf370[shape=record, label="  %17 = xor i32 %8, -1"];
	Node0xddf3e0[shape=record, label="  %18 = mul i32 %17, -5"];
	Node0xddf450[shape=record, label="  %19 = xor i32 %11, -1"];
	Node0xddf4c0[shape=record, label="  %20 = mul i32 %19, -6"];
	Node0xddf530[shape=record, label="  %21 = shl i32 %14, 3"];
	Node0xddf5a0[shape=record, label="  %22 = and i32 %7, %6"];
	Node0xddf610[shape=record, label="  %23 = mul i32 %22, -12"];
	Node0xddf680[shape=record, label="  %24 = add i32 %13, -2"];
	Node0xddf6f0[shape=record, label="  %25 = add i32 %24, %12"];
	Node0xddf760[shape=record, label="  %26 = add i32 %25, %11"];
	Node0xddf7d0[shape=record, label="  %27 = add i32 %26, %15"];
	Node0xddf840[shape=record, label="  %28 = add i32 %27, %16"];
	Node0xddf8b0[shape=record, label="  %29 = add i32 %28, %18"];
	Node0xddf920[shape=record, label="  %30 = add i32 %29, %20"];
	Node0xddf990[shape=record, label="  %31 = sub i32 %30, %21"];
	Node0xddfa00[shape=record, label="  %32 = add i32 %31, %23"];
	Node0xddfc80[shape=record, label="  %33 = icmp eq i32 %32, %9"];
	Node0xd7d9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xddfd10[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xddff68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xde00c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xde0188[shape=record, label="  ret i32 0"];
	Node0xddcf28 -> Node0xddcfa8;
	Node0xddcfa8 -> Node0xddd038;
	Node0xddd038 -> Node0xddd498;
	Node0xddd498 -> Node0xddd578;
	Node0xddd578 -> Node0xddd698;
	Node0xddd698 -> Node0xddd8d0;
	Node0xddd8d0 -> Node0xddd988;
	Node0xddd988 -> Node0xdde8f8;
	Node0xdde8f8 -> Node0xddef80;
	Node0xddef80 -> Node0xddeff0;
	Node0xddeff0 -> Node0xddf060;
	Node0xddf060 -> Node0xddf0d0;
	Node0xddf0d0 -> Node0xddf140;
	Node0xddf140 -> Node0xddf1b0;
	Node0xddf1b0 -> Node0xddf220;
	Node0xddf220 -> Node0xddf290;
	Node0xddf290 -> Node0xddf300;
	Node0xddf300 -> Node0xddf370;
	Node0xddf370 -> Node0xddf3e0;
	Node0xddf3e0 -> Node0xddf450;
	Node0xddf450 -> Node0xddf4c0;
	Node0xddf4c0 -> Node0xddf530;
	Node0xddf530 -> Node0xddf5a0;
	Node0xddf5a0 -> Node0xddf610;
	Node0xddf610 -> Node0xddf680;
	Node0xddf680 -> Node0xddf6f0;
	Node0xddf6f0 -> Node0xddf760;
	Node0xddf760 -> Node0xddf7d0;
	Node0xddf7d0 -> Node0xddf840;
	Node0xddf840 -> Node0xddf8b0;
	Node0xddf8b0 -> Node0xddf920;
	Node0xddf920 -> Node0xddf990;
	Node0xddf990 -> Node0xddfa00;
	Node0xddfa00 -> Node0xddfc80;
	Node0xddfc80 -> Node0xd7d9d8;
	Node0xd7d9d8 -> Node0xddfd10;
	Node0xddfd10 -> Node0xddff68;
	Node0xddff68 -> Node0xde00c8;
	Node0xde00c8 -> Node0xde0188;
edge [color=red]
	Node0xddcf28 -> Node0xddd038;
	Node0xddd038 -> Node0xddd498;
	Node0xddcfa8 -> Node0xddd578;
	Node0xddd578 -> Node0xddd698;
	Node0xddcf28 -> Node0xddd8d0;
	Node0xddcfa8 -> Node0xddd8d0;
	Node0xddcf28 -> Node0xddd988;
	Node0xddcfa8 -> Node0xdde8f8;
	Node0xdde8f8 -> Node0xddef80;
	Node0xddd988 -> Node0xddef80;
	Node0xddef80 -> Node0xddeff0;
	Node0xdde8f8 -> Node0xddf060;
	Node0xddd988 -> Node0xddf0d0;
	Node0xddf060 -> Node0xddf0d0;
	Node0xdde8f8 -> Node0xddf140;
	Node0xddd988 -> Node0xddf1b0;
	Node0xddd988 -> Node0xddf220;
	Node0xddf060 -> Node0xddf220;
	Node0xddf220 -> Node0xddf290;
	Node0xddd988 -> Node0xddf300;
	Node0xddf060 -> Node0xddf300;
	Node0xddef80 -> Node0xddf370;
	Node0xddf370 -> Node0xddf3e0;
	Node0xddf0d0 -> Node0xddf450;
	Node0xddf450 -> Node0xddf4c0;
	Node0xddf220 -> Node0xddf530;
	Node0xdde8f8 -> Node0xddf5a0;
	Node0xddd988 -> Node0xddf5a0;
	Node0xddf5a0 -> Node0xddf610;
	Node0xddf1b0 -> Node0xddf680;
	Node0xddf680 -> Node0xddf6f0;
	Node0xddf140 -> Node0xddf6f0;
	Node0xddf6f0 -> Node0xddf760;
	Node0xddf0d0 -> Node0xddf760;
	Node0xddf760 -> Node0xddf7d0;
	Node0xddf290 -> Node0xddf7d0;
	Node0xddf7d0 -> Node0xddf840;
	Node0xddf300 -> Node0xddf840;
	Node0xddf840 -> Node0xddf8b0;
	Node0xddf3e0 -> Node0xddf8b0;
	Node0xddf8b0 -> Node0xddf920;
	Node0xddf4c0 -> Node0xddf920;
	Node0xddf920 -> Node0xddf990;
	Node0xddf530 -> Node0xddf990;
	Node0xddf990 -> Node0xddfa00;
	Node0xddf610 -> Node0xddfa00;
	Node0xddfa00 -> Node0xddfc80;
	Node0xddeff0 -> Node0xddfc80;
	Node0xddfc80 -> Node0xd7d9d8;
	Node0xd7d9d8 -> Node0xddfd10;
	Node0xddd578 -> Node0xddff68;
	Node0xddd038 -> Node0xde00c8;
}
