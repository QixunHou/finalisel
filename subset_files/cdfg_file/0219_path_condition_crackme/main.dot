digraph "DFG for'main' function" {
	Node0x1cafba8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1cafc28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1cafcb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1cafd18[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1cafdc8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1cb01f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1cb02d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1cb03d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1cb0498[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1cb0548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1cb0608[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1cb06b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1caab10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1cb08b8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1cb1828[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1cb1e98[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1cb1ef8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1cb1f70[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1cb1fe0[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x1cb2050[shape=record, label="  %16 = mul i32 %15, 3"];
	Node0x1cb20c0[shape=record, label="  %17 = xor i32 %10, -1"];
	Node0x1cb2130[shape=record, label="  %18 = or i32 %13, %10"];
	Node0x1cb21a0[shape=record, label="  %19 = add i32 %10, 2"];
	Node0x1cb2210[shape=record, label="  %20 = add i32 %19, %11"];
	Node0x1cb2280[shape=record, label="  %21 = add i32 %20, %16"];
	Node0x1cb22f0[shape=record, label="  %22 = add i32 %21, %18"];
	Node0x1cb2360[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x1cb23d0[shape=record, label="  %24 = xor i32 %12, %11"];
	Node0x1cb2440[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x1cb24b0[shape=record, label="  %26 = or i32 %12, %11"];
	Node0x1cb2520[shape=record, label="  %27 = and i32 %11, %14"];
	Node0x1cb2590[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x1cb2600[shape=record, label="  %29 = xor i32 %26, -1"];
	Node0x1cb2670[shape=record, label="  %30 = mul i32 %29, 7"];
	Node0x1cb26e0[shape=record, label="  %31 = shl i32 %27, 2"];
	Node0x1cb2750[shape=record, label="  %32 = mul i32 %23, 5"];
	Node0x1cb27c0[shape=record, label="  %33 = and i32 %13, %17"];
	Node0x1cb2830[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x1cb28a0[shape=record, label="  %35 = xor i32 %34, -2"];
	Node0x1cb2910[shape=record, label="  %36 = and i32 %13, %10"];
	Node0x1cb2980[shape=record, label="  %37 = or i32 %13, %17"];
	Node0x1cb29f0[shape=record, label="  %38 = add i32 %11, 8"];
	Node0x1cb2a60[shape=record, label="  %39 = add i32 %38, %23"];
	Node0x1cb2ad0[shape=record, label="  %40 = add i32 %39, %26"];
	Node0x1cb2b40[shape=record, label="  %41 = add i32 %40, %28"];
	Node0x1cb2bb0[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x1cb2c20[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x1cb2c90[shape=record, label="  %44 = add i32 %43, %30"];
	Node0x1cb2d00[shape=record, label="  %45 = add i32 %44, %31"];
	Node0x1cb2d70[shape=record, label="  %46 = add i32 %45, %32"];
	Node0x1cb2de0[shape=record, label="  %47 = add i32 %46, %36"];
	Node0x1cb2e50[shape=record, label="  %48 = sub i32 %47, %37"];
	Node0x1cb2ec0[shape=record, label="  %49 = add i32 %48, %18"];
	Node0x1cb2f30[shape=record, label="  %50 = add i32 %49, %34"];
	Node0x1cb2fa0[shape=record, label="  %51 = add i32 %50, %35"];
	Node0x1cb3010[shape=record, label="  %52 = icmp eq i32 %22, %51"];
	Node0x1c4f8b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1cb30a0[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x1cb3348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1cb34a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1cb35b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1cb36c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1cb3788[shape=record, label="  ret i32 0"];
	Node0x1cafba8 -> Node0x1cafc28;
	Node0x1cafc28 -> Node0x1cafcb8;
	Node0x1cafcb8 -> Node0x1cafd18;
	Node0x1cafd18 -> Node0x1cafdc8;
	Node0x1cafdc8 -> Node0x1cb01f8;
	Node0x1cb01f8 -> Node0x1cb02d8;
	Node0x1cb02d8 -> Node0x1cb03d8;
	Node0x1cb03d8 -> Node0x1cb0498;
	Node0x1cb0498 -> Node0x1cb0548;
	Node0x1cb0548 -> Node0x1cb0608;
	Node0x1cb0608 -> Node0x1cb06b8;
	Node0x1cb06b8 -> Node0x1caab10;
	Node0x1caab10 -> Node0x1cb08b8;
	Node0x1cb08b8 -> Node0x1cb1828;
	Node0x1cb1828 -> Node0x1cb1e98;
	Node0x1cb1e98 -> Node0x1cb1ef8;
	Node0x1cb1ef8 -> Node0x1cb1f70;
	Node0x1cb1f70 -> Node0x1cb1fe0;
	Node0x1cb1fe0 -> Node0x1cb2050;
	Node0x1cb2050 -> Node0x1cb20c0;
	Node0x1cb20c0 -> Node0x1cb2130;
	Node0x1cb2130 -> Node0x1cb21a0;
	Node0x1cb21a0 -> Node0x1cb2210;
	Node0x1cb2210 -> Node0x1cb2280;
	Node0x1cb2280 -> Node0x1cb22f0;
	Node0x1cb22f0 -> Node0x1cb2360;
	Node0x1cb2360 -> Node0x1cb23d0;
	Node0x1cb23d0 -> Node0x1cb2440;
	Node0x1cb2440 -> Node0x1cb24b0;
	Node0x1cb24b0 -> Node0x1cb2520;
	Node0x1cb2520 -> Node0x1cb2590;
	Node0x1cb2590 -> Node0x1cb2600;
	Node0x1cb2600 -> Node0x1cb2670;
	Node0x1cb2670 -> Node0x1cb26e0;
	Node0x1cb26e0 -> Node0x1cb2750;
	Node0x1cb2750 -> Node0x1cb27c0;
	Node0x1cb27c0 -> Node0x1cb2830;
	Node0x1cb2830 -> Node0x1cb28a0;
	Node0x1cb28a0 -> Node0x1cb2910;
	Node0x1cb2910 -> Node0x1cb2980;
	Node0x1cb2980 -> Node0x1cb29f0;
	Node0x1cb29f0 -> Node0x1cb2a60;
	Node0x1cb2a60 -> Node0x1cb2ad0;
	Node0x1cb2ad0 -> Node0x1cb2b40;
	Node0x1cb2b40 -> Node0x1cb2bb0;
	Node0x1cb2bb0 -> Node0x1cb2c20;
	Node0x1cb2c20 -> Node0x1cb2c90;
	Node0x1cb2c90 -> Node0x1cb2d00;
	Node0x1cb2d00 -> Node0x1cb2d70;
	Node0x1cb2d70 -> Node0x1cb2de0;
	Node0x1cb2de0 -> Node0x1cb2e50;
	Node0x1cb2e50 -> Node0x1cb2ec0;
	Node0x1cb2ec0 -> Node0x1cb2f30;
	Node0x1cb2f30 -> Node0x1cb2fa0;
	Node0x1cb2fa0 -> Node0x1cb3010;
	Node0x1cb3010 -> Node0x1c4f8b8;
	Node0x1c4f8b8 -> Node0x1cb30a0;
	Node0x1cb30a0 -> Node0x1cb3348;
	Node0x1cb3348 -> Node0x1cb34a8;
	Node0x1cb34a8 -> Node0x1cb35b8;
	Node0x1cb35b8 -> Node0x1cb36c8;
	Node0x1cb36c8 -> Node0x1cb3788;
edge [color=red]
	Node0x1cafba8 -> Node0x1cafdc8;
	Node0x1cafdc8 -> Node0x1cb01f8;
	Node0x1cafc28 -> Node0x1cb02d8;
	Node0x1cb02d8 -> Node0x1cb03d8;
	Node0x1cafcb8 -> Node0x1cb0498;
	Node0x1cb0498 -> Node0x1cb0548;
	Node0x1cafd18 -> Node0x1cb0608;
	Node0x1cb0608 -> Node0x1cb06b8;
	Node0x1cafba8 -> Node0x1caab10;
	Node0x1cafc28 -> Node0x1caab10;
	Node0x1cafcb8 -> Node0x1caab10;
	Node0x1cafd18 -> Node0x1caab10;
	Node0x1cafba8 -> Node0x1cb08b8;
	Node0x1cafc28 -> Node0x1cb1828;
	Node0x1cafcb8 -> Node0x1cb1e98;
	Node0x1cafd18 -> Node0x1cb1ef8;
	Node0x1cb1e98 -> Node0x1cb1f70;
	Node0x1cb1828 -> Node0x1cb1fe0;
	Node0x1cb1f70 -> Node0x1cb1fe0;
	Node0x1cb1fe0 -> Node0x1cb2050;
	Node0x1cb08b8 -> Node0x1cb20c0;
	Node0x1cb1ef8 -> Node0x1cb2130;
	Node0x1cb08b8 -> Node0x1cb2130;
	Node0x1cb08b8 -> Node0x1cb21a0;
	Node0x1cb21a0 -> Node0x1cb2210;
	Node0x1cb1828 -> Node0x1cb2210;
	Node0x1cb2210 -> Node0x1cb2280;
	Node0x1cb2050 -> Node0x1cb2280;
	Node0x1cb2280 -> Node0x1cb22f0;
	Node0x1cb2130 -> Node0x1cb22f0;
	Node0x1cb1e98 -> Node0x1cb2360;
	Node0x1cb1828 -> Node0x1cb2360;
	Node0x1cb1e98 -> Node0x1cb23d0;
	Node0x1cb1828 -> Node0x1cb23d0;
	Node0x1cb23d0 -> Node0x1cb2440;
	Node0x1cb1e98 -> Node0x1cb24b0;
	Node0x1cb1828 -> Node0x1cb24b0;
	Node0x1cb1828 -> Node0x1cb2520;
	Node0x1cb1f70 -> Node0x1cb2520;
	Node0x1cb2520 -> Node0x1cb2590;
	Node0x1cb24b0 -> Node0x1cb2600;
	Node0x1cb2600 -> Node0x1cb2670;
	Node0x1cb2520 -> Node0x1cb26e0;
	Node0x1cb2360 -> Node0x1cb2750;
	Node0x1cb1ef8 -> Node0x1cb27c0;
	Node0x1cb20c0 -> Node0x1cb27c0;
	Node0x1cb27c0 -> Node0x1cb2830;
	Node0x1cb2830 -> Node0x1cb28a0;
	Node0x1cb1ef8 -> Node0x1cb2910;
	Node0x1cb08b8 -> Node0x1cb2910;
	Node0x1cb1ef8 -> Node0x1cb2980;
	Node0x1cb20c0 -> Node0x1cb2980;
	Node0x1cb1828 -> Node0x1cb29f0;
	Node0x1cb29f0 -> Node0x1cb2a60;
	Node0x1cb2360 -> Node0x1cb2a60;
	Node0x1cb2a60 -> Node0x1cb2ad0;
	Node0x1cb24b0 -> Node0x1cb2ad0;
	Node0x1cb2ad0 -> Node0x1cb2b40;
	Node0x1cb2590 -> Node0x1cb2b40;
	Node0x1cb2b40 -> Node0x1cb2bb0;
	Node0x1cb23d0 -> Node0x1cb2bb0;
	Node0x1cb2bb0 -> Node0x1cb2c20;
	Node0x1cb2440 -> Node0x1cb2c20;
	Node0x1cb2c20 -> Node0x1cb2c90;
	Node0x1cb2670 -> Node0x1cb2c90;
	Node0x1cb2c90 -> Node0x1cb2d00;
	Node0x1cb26e0 -> Node0x1cb2d00;
	Node0x1cb2d00 -> Node0x1cb2d70;
	Node0x1cb2750 -> Node0x1cb2d70;
	Node0x1cb2d70 -> Node0x1cb2de0;
	Node0x1cb2910 -> Node0x1cb2de0;
	Node0x1cb2de0 -> Node0x1cb2e50;
	Node0x1cb2980 -> Node0x1cb2e50;
	Node0x1cb2e50 -> Node0x1cb2ec0;
	Node0x1cb2130 -> Node0x1cb2ec0;
	Node0x1cb2ec0 -> Node0x1cb2f30;
	Node0x1cb2830 -> Node0x1cb2f30;
	Node0x1cb2f30 -> Node0x1cb2fa0;
	Node0x1cb28a0 -> Node0x1cb2fa0;
	Node0x1cb22f0 -> Node0x1cb3010;
	Node0x1cb2fa0 -> Node0x1cb3010;
	Node0x1cb3010 -> Node0x1c4f8b8;
	Node0x1c4f8b8 -> Node0x1cb30a0;
	Node0x1cb0608 -> Node0x1cb3348;
	Node0x1cb0498 -> Node0x1cb34a8;
	Node0x1cb02d8 -> Node0x1cb35b8;
	Node0x1cafdc8 -> Node0x1cb36c8;
}
