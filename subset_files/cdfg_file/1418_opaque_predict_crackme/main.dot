digraph "DFG for'main' function" {
	Node0x77ad58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x77add8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x77ae68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x77aec8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x77b348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x77e678[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x77e758[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x77e818[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x77e8c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x77eb28[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x77ebe8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x77fb58[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x7801c8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x7802c0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x7804c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x780628[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x780738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7807f8[shape=record, label="  ret i32 0"];
	Node0x77ad58 -> Node0x77add8;
	Node0x77add8 -> Node0x77ae68;
	Node0x77ae68 -> Node0x77aec8;
	Node0x77aec8 -> Node0x77b348;
	Node0x77b348 -> Node0x77e678;
	Node0x77e678 -> Node0x77e758;
	Node0x77e758 -> Node0x77e818;
	Node0x77e818 -> Node0x77e8c8;
	Node0x77e8c8 -> Node0x77eb28;
	Node0x77eb28 -> Node0x77ebe8;
	Node0x77ebe8 -> Node0x77fb58;
	Node0x77fb58 -> Node0x7801c8;
	Node0x7801c8 -> Node0x7802c0;
	Node0x7802c0 -> Node0x7804c8;
	Node0x7804c8 -> Node0x780628;
	Node0x780628 -> Node0x780738;
	Node0x780738 -> Node0x7807f8;
edge [color=red]
	Node0x77ad58 -> Node0x77aec8;
	Node0x77aec8 -> Node0x77b348;
	Node0x77add8 -> Node0x77e678;
	Node0x77e678 -> Node0x77e758;
	Node0x77ae68 -> Node0x77e818;
	Node0x77e818 -> Node0x77e8c8;
	Node0x77ad58 -> Node0x77eb28;
	Node0x77add8 -> Node0x77eb28;
	Node0x77ae68 -> Node0x77eb28;
	Node0x77ad58 -> Node0x77ebe8;
	Node0x77add8 -> Node0x77fb58;
	Node0x77ae68 -> Node0x7801c8;
	Node0x77ebe8 -> Node0x7802c0;
	Node0x77fb58 -> Node0x7802c0;
	Node0x7801c8 -> Node0x7802c0;
	Node0x77e818 -> Node0x7804c8;
	Node0x77e678 -> Node0x780628;
	Node0x77aec8 -> Node0x780738;
}
