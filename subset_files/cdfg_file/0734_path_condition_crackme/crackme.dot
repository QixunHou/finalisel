digraph "DFG for'crackme' function" {
	Node0x1304bc0[shape=record, label="  %5 = xor i32 %3, %0"];
	Node0x1304c30[shape=record, label="  %6 = sub i32 %1, %5"];
	Node0x13052b0[shape=record, label="  %7 = xor i32 %2, -1"];
	Node0x1305320[shape=record, label="  %8 = and i32 %7, %1"];
	Node0x13053c0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x1305460[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x13054d0[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x1305540[shape=record, label="  %12 = or i32 %7, %1"];
	Node0x13055b0[shape=record, label="  %13 = or i32 %2, %1"];
	Node0x1305620[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1305690[shape=record, label="  %15 = or i32 %3, %0"];
	Node0x1305700[shape=record, label="  %16 = xor i32 %0, -1"];
	Node0x1305770[shape=record, label="  %17 = and i32 %16, %3"];
	Node0x13057e0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x1305850[shape=record, label="  %19 = or i32 %16, %3"];
	Node0x13058c0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x1305930[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x13059a0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x1305a10[shape=record, label="  %23 = xor i32 %15, -1"];
	Node0x1305a80[shape=record, label="  %24 = xor i32 %19, -1"];
	Node0x1305b20[shape=record, label="  %25 = mul i32 %24, -7"];
	Node0x1305bc0[shape=record, label="  %26 = mul i32 %17, -5"];
	Node0x1305c60[shape=record, label="  %27 = mul i32 %21, -6"];
	Node0x1305cd0[shape=record, label="  %28 = add i32 %23, %14"];
	Node0x1305d70[shape=record, label="  %29 = mul i32 %28, -3"];
	Node0x1305de0[shape=record, label="  %30 = add i32 %12, %3"];
	Node0x1305e50[shape=record, label="  %31 = sub i32 %30, %2"];
	Node0x1305ec0[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x1306140[shape=record, label="  %33 = shl i32 %0, 1"];
	Node0x13061b0[shape=record, label="  %34 = add i32 %33, -2"];
	Node0x1306220[shape=record, label="  %35 = add i32 %34, %11"];
	Node0x1306290[shape=record, label="  %36 = sub i32 %35, %8"];
	Node0x1306300[shape=record, label="  %37 = add i32 %36, %3"];
	Node0x1306370[shape=record, label="  %38 = sub i32 %37, %15"];
	Node0x13063e0[shape=record, label="  %39 = add i32 %38, %18"];
	Node0x1306450[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x13064c0[shape=record, label="  %41 = add i32 %40, %10"];
	Node0x1306530[shape=record, label="  %42 = sub i32 %41, %20"];
	Node0x13065a0[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x1306610[shape=record, label="  %44 = add i32 %43, %26"];
	Node0x1306680[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x13066f0[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x1306760[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x13067d0[shape=record, label="  %48 = icmp eq i32 %6, %47"];
	Node0x12a5268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1306c70[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x1306cc0[shape=record, label="  ret void"];
	Node0x1304bc0 -> Node0x1304c30;
	Node0x1304c30 -> Node0x13052b0;
	Node0x13052b0 -> Node0x1305320;
	Node0x1305320 -> Node0x13053c0;
	Node0x13053c0 -> Node0x1305460;
	Node0x1305460 -> Node0x13054d0;
	Node0x13054d0 -> Node0x1305540;
	Node0x1305540 -> Node0x13055b0;
	Node0x13055b0 -> Node0x1305620;
	Node0x1305620 -> Node0x1305690;
	Node0x1305690 -> Node0x1305700;
	Node0x1305700 -> Node0x1305770;
	Node0x1305770 -> Node0x13057e0;
	Node0x13057e0 -> Node0x1305850;
	Node0x1305850 -> Node0x13058c0;
	Node0x13058c0 -> Node0x1305930;
	Node0x1305930 -> Node0x13059a0;
	Node0x13059a0 -> Node0x1305a10;
	Node0x1305a10 -> Node0x1305a80;
	Node0x1305a80 -> Node0x1305b20;
	Node0x1305b20 -> Node0x1305bc0;
	Node0x1305bc0 -> Node0x1305c60;
	Node0x1305c60 -> Node0x1305cd0;
	Node0x1305cd0 -> Node0x1305d70;
	Node0x1305d70 -> Node0x1305de0;
	Node0x1305de0 -> Node0x1305e50;
	Node0x1305e50 -> Node0x1305ec0;
	Node0x1305ec0 -> Node0x1306140;
	Node0x1306140 -> Node0x13061b0;
	Node0x13061b0 -> Node0x1306220;
	Node0x1306220 -> Node0x1306290;
	Node0x1306290 -> Node0x1306300;
	Node0x1306300 -> Node0x1306370;
	Node0x1306370 -> Node0x13063e0;
	Node0x13063e0 -> Node0x1306450;
	Node0x1306450 -> Node0x13064c0;
	Node0x13064c0 -> Node0x1306530;
	Node0x1306530 -> Node0x13065a0;
	Node0x13065a0 -> Node0x1306610;
	Node0x1306610 -> Node0x1306680;
	Node0x1306680 -> Node0x13066f0;
	Node0x13066f0 -> Node0x1306760;
	Node0x1306760 -> Node0x13067d0;
	Node0x13067d0 -> Node0x12a5268;
	Node0x12a5268 -> Node0x1306c70;
	Node0x1306c70 -> Node0x1306cc0;
edge [color=red]
	Node0x1304bc0 -> Node0x1304c30;
	Node0x13052b0 -> Node0x1305320;
	Node0x1305320 -> Node0x13053c0;
	Node0x13053c0 -> Node0x1305460;
	Node0x13052b0 -> Node0x1305540;
	Node0x13055b0 -> Node0x1305620;
	Node0x1305700 -> Node0x1305770;
	Node0x1305770 -> Node0x13057e0;
	Node0x1305700 -> Node0x1305850;
	Node0x1305850 -> Node0x13058c0;
	Node0x1305930 -> Node0x13059a0;
	Node0x1305690 -> Node0x1305a10;
	Node0x1305850 -> Node0x1305a80;
	Node0x1305a80 -> Node0x1305b20;
	Node0x1305770 -> Node0x1305bc0;
	Node0x1305930 -> Node0x1305c60;
	Node0x1305a10 -> Node0x1305cd0;
	Node0x1305620 -> Node0x1305cd0;
	Node0x1305cd0 -> Node0x1305d70;
	Node0x1305540 -> Node0x1305de0;
	Node0x1305de0 -> Node0x1305e50;
	Node0x1305e50 -> Node0x1305ec0;
	Node0x1306140 -> Node0x13061b0;
	Node0x13061b0 -> Node0x1306220;
	Node0x13054d0 -> Node0x1306220;
	Node0x1306220 -> Node0x1306290;
	Node0x1305320 -> Node0x1306290;
	Node0x1306290 -> Node0x1306300;
	Node0x1306300 -> Node0x1306370;
	Node0x1305690 -> Node0x1306370;
	Node0x1306370 -> Node0x13063e0;
	Node0x13057e0 -> Node0x13063e0;
	Node0x13063e0 -> Node0x1306450;
	Node0x13059a0 -> Node0x1306450;
	Node0x1306450 -> Node0x13064c0;
	Node0x1305460 -> Node0x13064c0;
	Node0x13064c0 -> Node0x1306530;
	Node0x13058c0 -> Node0x1306530;
	Node0x1306530 -> Node0x13065a0;
	Node0x1305b20 -> Node0x13065a0;
	Node0x13065a0 -> Node0x1306610;
	Node0x1305bc0 -> Node0x1306610;
	Node0x1306610 -> Node0x1306680;
	Node0x1305c60 -> Node0x1306680;
	Node0x1306680 -> Node0x13066f0;
	Node0x1305d70 -> Node0x13066f0;
	Node0x13066f0 -> Node0x1306760;
	Node0x1305ec0 -> Node0x1306760;
	Node0x1304c30 -> Node0x13067d0;
	Node0x1306760 -> Node0x13067d0;
	Node0x13067d0 -> Node0x12a5268;
	Node0x12a5268 -> Node0x1306c70;
}
