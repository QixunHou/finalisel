digraph "DFG for'main' function" {
	Node0x1306e88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1306f08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1306f98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1306ff8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x13070a8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x13074d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13075b8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x13076b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1307778[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1307828[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x13078e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1307998[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1301bf0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1307b98[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1308b08[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1309178[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x13091d8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1309250[shape=record, label="  %14 = xor i32 %13, %10"];
	Node0x13092c0[shape=record, label="  %15 = sub i32 %11, %14"];
	Node0x1309330[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x13093a0[shape=record, label="  %17 = and i32 %11, %16"];
	Node0x1309410[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x1309480[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x13094f0[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x1309560[shape=record, label="  %21 = or i32 %11, %16"];
	Node0x13095d0[shape=record, label="  %22 = or i32 %12, %11"];
	Node0x1309640[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x13096b0[shape=record, label="  %24 = or i32 %13, %10"];
	Node0x1309720[shape=record, label="  %25 = xor i32 %10, -1"];
	Node0x1309790[shape=record, label="  %26 = and i32 %13, %25"];
	Node0x1309800[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x1309870[shape=record, label="  %28 = or i32 %13, %25"];
	Node0x13098e0[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x1309950[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x13099c0[shape=record, label="  %31 = xor i32 %30, -1"];
	Node0x1309a30[shape=record, label="  %32 = xor i32 %24, -1"];
	Node0x1309aa0[shape=record, label="  %33 = xor i32 %28, -1"];
	Node0x1309b10[shape=record, label="  %34 = mul i32 %33, -7"];
	Node0x1309b80[shape=record, label="  %35 = mul i32 %26, -5"];
	Node0x1309bf0[shape=record, label="  %36 = mul i32 %30, -6"];
	Node0x1309c60[shape=record, label="  %37 = add i32 %32, %23"];
	Node0x1309cd0[shape=record, label="  %38 = mul i32 %37, -3"];
	Node0x1309d40[shape=record, label="  %39 = sub i32 %10, %12"];
	Node0x1309db0[shape=record, label="  %40 = add i32 %39, %13"];
	Node0x1309e20[shape=record, label="  %41 = add i32 %40, %21"];
	Node0x1309e90[shape=record, label="  %42 = shl i32 %41, 1"];
	Node0x1309f00[shape=record, label="  %43 = add i32 %20, -2"];
	Node0x1309f70[shape=record, label="  %44 = sub i32 %43, %17"];
	Node0x1309fe0[shape=record, label="  %45 = add i32 %44, %13"];
	Node0x130a050[shape=record, label="  %46 = sub i32 %45, %24"];
	Node0x130a0c0[shape=record, label="  %47 = add i32 %46, %27"];
	Node0x130a130[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x130a1a0[shape=record, label="  %49 = add i32 %48, %19"];
	Node0x130a210[shape=record, label="  %50 = sub i32 %49, %29"];
	Node0x130a280[shape=record, label="  %51 = add i32 %50, %34"];
	Node0x130a2f0[shape=record, label="  %52 = add i32 %51, %35"];
	Node0x130a360[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x130a3d0[shape=record, label="  %54 = add i32 %53, %38"];
	Node0x130a440[shape=record, label="  %55 = add i32 %54, %42"];
	Node0x130a4b0[shape=record, label="  %56 = icmp eq i32 %15, %55"];
	Node0x12a68b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x130a540[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x130a7e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x130a948[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x130aa58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x130ab68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x130ac28[shape=record, label="  ret i32 0"];
	Node0x1306e88 -> Node0x1306f08;
	Node0x1306f08 -> Node0x1306f98;
	Node0x1306f98 -> Node0x1306ff8;
	Node0x1306ff8 -> Node0x13070a8;
	Node0x13070a8 -> Node0x13074d8;
	Node0x13074d8 -> Node0x13075b8;
	Node0x13075b8 -> Node0x13076b8;
	Node0x13076b8 -> Node0x1307778;
	Node0x1307778 -> Node0x1307828;
	Node0x1307828 -> Node0x13078e8;
	Node0x13078e8 -> Node0x1307998;
	Node0x1307998 -> Node0x1301bf0;
	Node0x1301bf0 -> Node0x1307b98;
	Node0x1307b98 -> Node0x1308b08;
	Node0x1308b08 -> Node0x1309178;
	Node0x1309178 -> Node0x13091d8;
	Node0x13091d8 -> Node0x1309250;
	Node0x1309250 -> Node0x13092c0;
	Node0x13092c0 -> Node0x1309330;
	Node0x1309330 -> Node0x13093a0;
	Node0x13093a0 -> Node0x1309410;
	Node0x1309410 -> Node0x1309480;
	Node0x1309480 -> Node0x13094f0;
	Node0x13094f0 -> Node0x1309560;
	Node0x1309560 -> Node0x13095d0;
	Node0x13095d0 -> Node0x1309640;
	Node0x1309640 -> Node0x13096b0;
	Node0x13096b0 -> Node0x1309720;
	Node0x1309720 -> Node0x1309790;
	Node0x1309790 -> Node0x1309800;
	Node0x1309800 -> Node0x1309870;
	Node0x1309870 -> Node0x13098e0;
	Node0x13098e0 -> Node0x1309950;
	Node0x1309950 -> Node0x13099c0;
	Node0x13099c0 -> Node0x1309a30;
	Node0x1309a30 -> Node0x1309aa0;
	Node0x1309aa0 -> Node0x1309b10;
	Node0x1309b10 -> Node0x1309b80;
	Node0x1309b80 -> Node0x1309bf0;
	Node0x1309bf0 -> Node0x1309c60;
	Node0x1309c60 -> Node0x1309cd0;
	Node0x1309cd0 -> Node0x1309d40;
	Node0x1309d40 -> Node0x1309db0;
	Node0x1309db0 -> Node0x1309e20;
	Node0x1309e20 -> Node0x1309e90;
	Node0x1309e90 -> Node0x1309f00;
	Node0x1309f00 -> Node0x1309f70;
	Node0x1309f70 -> Node0x1309fe0;
	Node0x1309fe0 -> Node0x130a050;
	Node0x130a050 -> Node0x130a0c0;
	Node0x130a0c0 -> Node0x130a130;
	Node0x130a130 -> Node0x130a1a0;
	Node0x130a1a0 -> Node0x130a210;
	Node0x130a210 -> Node0x130a280;
	Node0x130a280 -> Node0x130a2f0;
	Node0x130a2f0 -> Node0x130a360;
	Node0x130a360 -> Node0x130a3d0;
	Node0x130a3d0 -> Node0x130a440;
	Node0x130a440 -> Node0x130a4b0;
	Node0x130a4b0 -> Node0x12a68b8;
	Node0x12a68b8 -> Node0x130a540;
	Node0x130a540 -> Node0x130a7e8;
	Node0x130a7e8 -> Node0x130a948;
	Node0x130a948 -> Node0x130aa58;
	Node0x130aa58 -> Node0x130ab68;
	Node0x130ab68 -> Node0x130ac28;
edge [color=red]
	Node0x1306e88 -> Node0x13070a8;
	Node0x13070a8 -> Node0x13074d8;
	Node0x1306f08 -> Node0x13075b8;
	Node0x13075b8 -> Node0x13076b8;
	Node0x1306f98 -> Node0x1307778;
	Node0x1307778 -> Node0x1307828;
	Node0x1306ff8 -> Node0x13078e8;
	Node0x13078e8 -> Node0x1307998;
	Node0x1306e88 -> Node0x1301bf0;
	Node0x1306f08 -> Node0x1301bf0;
	Node0x1306f98 -> Node0x1301bf0;
	Node0x1306ff8 -> Node0x1301bf0;
	Node0x1306e88 -> Node0x1307b98;
	Node0x1306f08 -> Node0x1308b08;
	Node0x1306f98 -> Node0x1309178;
	Node0x1306ff8 -> Node0x13091d8;
	Node0x13091d8 -> Node0x1309250;
	Node0x1307b98 -> Node0x1309250;
	Node0x1308b08 -> Node0x13092c0;
	Node0x1309250 -> Node0x13092c0;
	Node0x1309178 -> Node0x1309330;
	Node0x1308b08 -> Node0x13093a0;
	Node0x1309330 -> Node0x13093a0;
	Node0x13093a0 -> Node0x1309410;
	Node0x1309410 -> Node0x1309480;
	Node0x1309178 -> Node0x13094f0;
	Node0x1308b08 -> Node0x13094f0;
	Node0x1308b08 -> Node0x1309560;
	Node0x1309330 -> Node0x1309560;
	Node0x1309178 -> Node0x13095d0;
	Node0x1308b08 -> Node0x13095d0;
	Node0x13095d0 -> Node0x1309640;
	Node0x13091d8 -> Node0x13096b0;
	Node0x1307b98 -> Node0x13096b0;
	Node0x1307b98 -> Node0x1309720;
	Node0x13091d8 -> Node0x1309790;
	Node0x1309720 -> Node0x1309790;
	Node0x1309790 -> Node0x1309800;
	Node0x13091d8 -> Node0x1309870;
	Node0x1309720 -> Node0x1309870;
	Node0x1309870 -> Node0x13098e0;
	Node0x13091d8 -> Node0x1309950;
	Node0x1307b98 -> Node0x1309950;
	Node0x1309950 -> Node0x13099c0;
	Node0x13096b0 -> Node0x1309a30;
	Node0x1309870 -> Node0x1309aa0;
	Node0x1309aa0 -> Node0x1309b10;
	Node0x1309790 -> Node0x1309b80;
	Node0x1309950 -> Node0x1309bf0;
	Node0x1309a30 -> Node0x1309c60;
	Node0x1309640 -> Node0x1309c60;
	Node0x1309c60 -> Node0x1309cd0;
	Node0x1307b98 -> Node0x1309d40;
	Node0x1309178 -> Node0x1309d40;
	Node0x1309d40 -> Node0x1309db0;
	Node0x13091d8 -> Node0x1309db0;
	Node0x1309db0 -> Node0x1309e20;
	Node0x1309560 -> Node0x1309e20;
	Node0x1309e20 -> Node0x1309e90;
	Node0x13094f0 -> Node0x1309f00;
	Node0x1309f00 -> Node0x1309f70;
	Node0x13093a0 -> Node0x1309f70;
	Node0x1309f70 -> Node0x1309fe0;
	Node0x13091d8 -> Node0x1309fe0;
	Node0x1309fe0 -> Node0x130a050;
	Node0x13096b0 -> Node0x130a050;
	Node0x130a050 -> Node0x130a0c0;
	Node0x1309800 -> Node0x130a0c0;
	Node0x130a0c0 -> Node0x130a130;
	Node0x13099c0 -> Node0x130a130;
	Node0x130a130 -> Node0x130a1a0;
	Node0x1309480 -> Node0x130a1a0;
	Node0x130a1a0 -> Node0x130a210;
	Node0x13098e0 -> Node0x130a210;
	Node0x130a210 -> Node0x130a280;
	Node0x1309b10 -> Node0x130a280;
	Node0x130a280 -> Node0x130a2f0;
	Node0x1309b80 -> Node0x130a2f0;
	Node0x130a2f0 -> Node0x130a360;
	Node0x1309bf0 -> Node0x130a360;
	Node0x130a360 -> Node0x130a3d0;
	Node0x1309cd0 -> Node0x130a3d0;
	Node0x130a3d0 -> Node0x130a440;
	Node0x1309e90 -> Node0x130a440;
	Node0x13092c0 -> Node0x130a4b0;
	Node0x130a440 -> Node0x130a4b0;
	Node0x130a4b0 -> Node0x12a68b8;
	Node0x12a68b8 -> Node0x130a540;
	Node0x13078e8 -> Node0x130a7e8;
	Node0x1307778 -> Node0x130a948;
	Node0x13075b8 -> Node0x130aa58;
	Node0x13070a8 -> Node0x130ab68;
}
