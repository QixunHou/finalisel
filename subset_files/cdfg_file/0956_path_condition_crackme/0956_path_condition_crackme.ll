; ModuleID = '../.././c_source_file/0956_path_condition_crackme.c'
source_filename = "../.././c_source_file/0956_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = or i32 %7, %0
  %9 = xor i32 %8, -1
  %10 = xor i32 %1, %0
  %11 = or i32 %10, %9
  %12 = and i32 %2, %0
  %13 = xor i32 %12, -1
  %14 = xor i32 %13, %1
  %15 = sub i32 %11, %14
  %16 = xor i32 %4, %3
  %17 = xor i32 %16, -1
  %18 = and i32 %17, %5
  %19 = add i32 %15, %18
  %20 = xor i32 %2, %0
  %21 = xor i32 %20, -1
  %22 = xor i32 %1, -1
  %23 = and i32 %22, %0
  %24 = or i32 %23, %2
  %25 = or i32 %22, %0
  %26 = xor i32 %25, -1
  %27 = or i32 %7, %26
  %28 = and i32 %2, %1
  %29 = or i32 %20, %26
  %30 = and i32 %22, %2
  %31 = and i32 %30, %0
  %32 = xor i32 %2, %1
  %33 = xor i32 %32, %0
  %34 = xor i32 %33, -1
  %35 = xor i32 %31, %34
  %36 = and i32 %1, %0
  %37 = xor i32 %32, -1
  %38 = or i32 %36, %37
  %39 = and i32 %25, %21
  %40 = or i32 %28, %0
  %41 = xor i32 %0, -1
  %42 = xor i32 %28, -1
  %43 = or i32 %42, %41
  %44 = and i32 %30, %41
  %45 = or i32 %22, %2
  %46 = and i32 %45, %0
  %47 = xor i32 %46, -1
  %48 = xor i32 %44, %47
  %49 = or i32 %2, %1
  %50 = xor i32 %49, -1
  %51 = or i32 %50, %41
  %52 = xor i32 %45, %0
  %53 = xor i32 %52, 2147483647
  %54 = xor i32 %53, %31
  %55 = shl i32 %8, 1
  %56 = or i32 %2, %0
  %57 = xor i32 %56, -1
  %58 = or i32 %57, %1
  %59 = and i32 %7, %1
  %60 = xor i32 %59, -1
  %61 = or i32 %60, %41
  %62 = add i32 %49, 1
  %63 = or i32 %1, %0
  %64 = xor i32 %63, -1
  %65 = xor i32 %64, %2
  %66 = xor i32 %36, -1
  %67 = and i32 %66, %2
  %68 = or i32 %36, %9
  %69 = shl i32 %68, 1
  %70 = xor i32 %10, -1
  %71 = and i32 %21, %70
  %72 = xor i32 %59, %0
  %73 = or i32 %12, %64
  %74 = and i32 %28, %0
  %75 = and i32 %49, %41
  %76 = xor i32 %75, 2147483647
  %77 = xor i32 %76, %74
  %78 = or i32 %7, %1
  %79 = xor i32 %78, -1
  %80 = xor i32 %79, %0
  %81 = or i32 %59, %0
  %82 = or i32 %44, %46
  %83 = or i32 %32, %64
  %84 = and i32 %7, %0
  %85 = or i32 %84, %10
  %86 = xor i32 %84, -1
  %87 = and i32 %10, %86
  %88 = xor i32 %28, %0
  %89 = and i32 %20, %66
  %90 = or i32 %64, %2
  %91 = xor i32 %60, %0
  %92 = or i32 %36, %79
  %93 = or i32 %32, %36
  %94 = and i32 %56, %1
  %95 = and i32 %10, %7
  %96 = and i32 %32, %0
  %97 = and i32 %25, %37
  %98 = shl i32 %97, 1
  %99 = or i32 %7, %64
  %100 = or i32 %12, %10
  %101 = and i32 %32, %41
  %102 = xor i32 %74, -1
  %103 = xor i32 %101, %102
  %104 = or i32 %28, %23
  %105 = or i32 %31, %52
  %106 = shl i32 %105, 1
  %107 = or i32 %7, %70
  %108 = and i32 %21, %22
  %109 = and i32 %78, %41
  %110 = or i32 %50, %0
  %111 = and i32 %45, %41
  %112 = or i32 %31, %111
  %113 = or i32 %20, %22
  %114 = shl i32 %113, 1
  %115 = and i32 %86, %22
  %116 = and i32 %28, %41
  %117 = xor i32 %116, 2147483647
  %118 = xor i32 %117, %96
  %119 = shl i32 %118, 1
  %120 = and i32 %63, %2
  %121 = or i32 %12, %70
  %122 = add i32 %25, 1
  %123 = or i32 %32, %41
  %124 = xor i32 %25, %2
  %125 = or i32 %10, %57
  %126 = xor i32 %56, %1
  %127 = xor i32 %23, %60
  %128 = or i32 %84, %28
  %129 = and i32 %78, %0
  %130 = shl i32 %129, 2
  %131 = and i32 %20, %10
  %132 = or i32 %23, %37
  %133 = shl i32 %132, 1
  %134 = or i32 %49, %0
  %135 = and i32 %37, %41
  %136 = xor i32 %23, -1
  %137 = and i32 %136, %2
  %138 = xor i32 %42, %0
  %139 = and i32 %49, %0
  %140 = or i32 %116, %139
  %141 = and i32 %56, %22
  %142 = or i32 %116, %96
  %143 = and i32 %20, %22
  %144 = add i32 %36, 1
  %145 = xor i32 %78, %36
  %146 = or i32 %9, %70
  %147 = and i32 %56, %70
  %148 = or i32 %9, %1
  %149 = and i32 %37, %66
  %150 = xor i32 %84, %1
  %151 = or i32 %79, %41
  %152 = or i32 %74, %34
  %153 = or i32 %36, %57
  %154 = or i32 %78, %41
  %155 = or i32 %57, %70
  %156 = and i32 %20, %63
  %157 = shl i32 %156, 1
  %158 = or i32 %31, %33
  %159 = and i32 %63, %21
  %160 = or i32 %84, %1
  %161 = xor i32 %117, %139
  %162 = shl i32 %161, 1
  %163 = or i32 %79, %0
  %164 = or i32 %28, %41
  %165 = shl i32 %164, 1
  %166 = xor i32 %66, %2
  %167 = and i32 %86, %1
  %168 = and i32 %25, %7
  %169 = and i32 %8, %22
  %170 = xor i32 %78, %0
  %171 = and i32 %7, %136
  %172 = or i32 %10, %2
  %173 = or i32 %20, %23
  %174 = and i32 %13, %1
  %175 = xor i32 %26, %2
  %176 = and i32 %32, %136
  %177 = or i32 %21, %26
  %178 = xor i32 %49, %0
  %179 = and i32 %70, %2
  %180 = and i32 %21, %66
  %181 = and i32 %20, %25
  %182 = xor i32 %12, %60
  %183 = or i32 %36, %7
  %184 = xor i32 %123, -1
  %185 = or i32 %44, %184
  %186 = xor i32 %12, %25
  %187 = or i32 %37, %0
  %188 = shl i32 %187, 1
  %189 = or i32 %59, %41
  %190 = xor i32 %84, %42
  %191 = xor i32 %49, %36
  %192 = or i32 %12, %59
  %193 = xor i32 %44, %123
  %194 = or i32 %20, %64
  %195 = or i32 %74, %101
  %196 = or i32 %32, %0
  %197 = and i32 %63, %37
  %198 = xor i32 %50, %0
  %199 = or i32 %36, %21
  %200 = and i32 %25, %2
  %201 = shl i32 %200, 1
  %202 = or i32 %12, %26
  %203 = and i32 %37, %0
  %204 = and i32 %32, %66
  %205 = or i32 %74, %178
  %206 = xor i32 %196, -1
  %207 = or i32 %31, %206
  %208 = or i32 %78, %0
  %209 = and i32 %21, %136
  %210 = and i32 %8, %1
  %211 = shl i32 %63, 1
  %212 = or i32 %32, %23
  %213 = or i32 %32, %26
  %214 = xor i32 %84, %78
  %215 = xor i32 %63, %2
  %216 = or i32 %23, %7
  %217 = or i32 %60, %0
  %218 = or i32 %10, %21
  %219 = and i32 %13, %70
  %220 = shl i32 %42, 1
  %221 = or i32 %36, %2
  %222 = and i32 %10, %21
  %223 = shl i32 %222, 1
  %224 = and i32 %42, %0
  %225 = shl i32 %224, 1
  %226 = and i32 %42, %41
  %227 = or i32 %21, %22
  %228 = xor i32 %8, %36
  %229 = or i32 %84, %70
  %230 = shl i32 %229, 1
  %231 = or i32 %12, %1
  %232 = xor i32 %12, %49
  %233 = or i32 %21, %64
  %234 = shl i32 %233, 1
  %235 = or i32 %12, %50
  %236 = shl i32 %235, 2
  %237 = or i32 %37, %41
  %238 = or i32 %20, %70
  %239 = or i32 %10, %7
  %240 = and i32 %86, %70
  %241 = and i32 %8, %70
  %242 = xor i32 %8, %1
  %243 = xor i32 %86, %1
  %244 = or i32 %37, %64
  %245 = shl i32 %244, 1
  %246 = or i32 %21, %1
  %247 = shl i32 %246, 1
  %248 = and i32 %21, %1
  %249 = and i32 %13, %22
  %250 = xor i32 %74, %33
  %251 = or i32 %74, %75
  %252 = or i32 %70, %2
  %253 = or i32 %57, %22
  %254 = and i32 %56, %10
  %255 = xor i32 %136, %2
  %256 = and i32 %60, %0
  %257 = and i32 %60, %41
  %258 = and i32 %7, %66
  %259 = shl i32 %79, 1
  %260 = or i32 %20, %36
  %261 = or i32 %59, %23
  %262 = and i32 %32, %25
  %263 = xor i32 %23, %2
  %264 = shl i32 %263, 1
  %265 = and i32 %10, %13
  %266 = xor i32 %31, %196
  %267 = and i32 %20, %1
  %268 = xor i32 %36, %2
  %269 = xor i32 %56, %36
  %270 = xor i32 %111, -1
  %271 = xor i32 %31, %270
  %272 = and i32 %20, %70
  %273 = or i32 %49, %41
  %274 = or i32 %20, %1
  %275 = xor i32 %178, %102
  %276 = add i32 %1, 1
  %277 = and i32 %50, %41
  %278 = mul i32 %277, 6
  %279 = and i32 %59, %41
  %280 = and i32 %50, %0
  %281 = and i32 %59, %0
  %282 = and i32 %79, %41
  %283 = shl i32 %116, 2
  %284 = and i32 %79, %0
  %285 = mul i32 %284, -11
  %286 = mul i32 %74, -9
  %287 = xor i32 %5, -1
  %288 = and i32 %287, %4
  %289 = xor i32 %288, -1
  %290 = and i32 %289, %17
  %291 = and i32 %4, %3
  %292 = or i32 %287, %3
  %293 = xor i32 %292, -1
  %294 = or i32 %291, %293
  %295 = xor i32 %291, -1
  %296 = xor i32 %5, %3
  %297 = and i32 %296, %295
  %298 = xor i32 %3, -1
  %299 = and i32 %298, %4
  %300 = xor i32 %299, -1
  %301 = xor i32 %296, -1
  %302 = and i32 %301, %300
  %303 = or i32 %299, %5
  %304 = xor i32 %4, -1
  %305 = or i32 %5, %3
  %306 = or i32 %305, %304
  %307 = and i32 %305, %4
  %308 = xor i32 %5, %4
  %309 = or i32 %308, %17
  %310 = and i32 %5, %3
  %311 = and i32 %310, %304
  %312 = and i32 %296, %4
  %313 = or i32 %311, %312
  %314 = and i32 %5, %4
  %315 = xor i32 %314, -1
  %316 = and i32 %315, %298
  %317 = xor i32 %308, -1
  %318 = and i32 %317, %300
  %319 = or i32 %310, %299
  %320 = and i32 %298, %5
  %321 = and i32 %320, %4
  %322 = or i32 %298, %5
  %323 = and i32 %322, %304
  %324 = xor i32 %321, -1
  %325 = xor i32 %323, %324
  %326 = or i32 %287, %4
  %327 = and i32 %326, %3
  %328 = and i32 %310, %4
  %329 = and i32 %305, %304
  %330 = xor i32 %329, 2147483647
  %331 = xor i32 %330, %328
  %332 = or i32 %298, %4
  %333 = and i32 %332, %317
  %334 = and i32 %287, %3
  %335 = xor i32 %334, -1
  %336 = and i32 %335, %4
  %337 = and i32 %308, %332
  %338 = and i32 %287, %17
  %339 = or i32 %308, %291
  %340 = or i32 %328, %329
  %341 = xor i32 %288, %3
  %342 = or i32 %4, %3
  %343 = xor i32 %342, %5
  %344 = and i32 %289, %3
  %345 = and i32 %296, %342
  %346 = or i32 %288, %310
  %347 = xor i32 %305, %4
  %348 = or i32 %328, %347
  %349 = xor i32 %342, -1
  %350 = or i32 %349, %5
  %351 = xor i32 %305, -1
  %352 = and i32 %317, %3
  %353 = or i32 %308, %16
  %354 = or i32 %296, %349
  %355 = and i32 %317, %17
  %356 = or i32 %308, %3
  %357 = or i32 %351, %4
  %358 = and i32 %308, %342
  %359 = shl i32 %358, 1
  %360 = and i32 %332, %287
  %361 = xor i32 %332, -1
  %362 = or i32 %317, %361
  %363 = xor i32 %311, 2147483647
  %364 = xor i32 %363, %307
  %365 = shl i32 %364, 1
  %366 = or i32 %5, %4
  %367 = xor i32 %366, -1
  %368 = or i32 %16, %367
  %369 = shl i32 %368, 1
  %370 = or i32 %288, %298
  %371 = add i32 %296, 1
  %372 = or i32 %291, %301
  %373 = and i32 %287, %300
  %374 = and i32 %16, %289
  %375 = xor i32 %326, %3
  %376 = shl i32 %375, 1
  %377 = xor i32 %299, %5
  %378 = shl i32 %377, 1
  %379 = xor i32 %310, -1
  %380 = and i32 %379, %4
  %381 = or i32 %296, %304
  %382 = xor i32 %296, %4
  %383 = or i32 %321, %382
  %384 = shl i32 %383, 1
  %385 = or i32 %334, %4
  %386 = shl i32 %385, 1
  %387 = and i32 %308, %300
  %388 = or i32 %296, %361
  %389 = xor i32 %328, %382
  %390 = xor i32 %382, -1
  %391 = xor i32 %321, %390
  %392 = and i32 %342, %287
  %393 = or i32 %367, %17
  %394 = and i32 %308, %3
  %395 = shl i32 %394, 1
  %396 = or i32 %317, %17
  %397 = or i32 %301, %361
  %398 = shl i32 %397, 2
  %399 = and i32 %308, %17
  %400 = xor i32 %326, -1
  %401 = xor i32 %400, %3
  %402 = shl i32 %291, 1
  %403 = or i32 %299, %287
  %404 = shl i32 %403, 1
  %405 = and i32 %292, %4
  %406 = or i32 %314, %17
  %407 = xor i32 %299, %379
  %408 = or i32 %308, %349
  %409 = or i32 %400, %17
  %410 = or i32 %321, %323
  %411 = xor i32 %366, %291
  %412 = or i32 %314, %361
  %413 = and i32 %342, %5
  %414 = or i32 %291, %5
  %415 = or i32 %287, %361
  %416 = xor i32 %366, %3
  %417 = or i32 %311, %307
  %418 = or i32 %301, %4
  %419 = and i32 %317, %295
  %420 = or i32 %292, %4
  %421 = or i32 %287, %17
  %422 = and i32 %308, %295
  %423 = and i32 %301, %295
  %424 = or i32 %296, %299
  %425 = or i32 %317, %298
  %426 = or i32 %301, %304
  %427 = shl i32 %426, 1
  %428 = xor i32 %301, %4
  %429 = or i32 %296, %4
  %430 = xor i32 %321, %429
  %431 = or i32 %308, %298
  %432 = shl i32 %431, 1
  %433 = xor i32 %315, %3
  %434 = and i32 %289, %298
  %435 = or i32 %292, %304
  %436 = or i32 %314, %351
  %437 = or i32 %291, %317
  %438 = or i32 %335, %304
  %439 = add i32 %299, 1
  %440 = and i32 %301, %304
  %441 = xor i32 %295, %5
  %442 = and i32 %296, %300
  %443 = shl i32 %442, 1
  %444 = or i32 %16, %287
  %445 = and i32 %326, %16
  %446 = or i32 %288, %17
  %447 = or i32 %334, %304
  %448 = or i32 %288, %3
  %449 = xor i32 %314, %342
  %450 = shl i32 %308, 1
  %451 = xor i32 %326, %291
  %452 = and i32 %292, %304
  %453 = xor i32 %299, %335
  %454 = xor i32 %314, %332
  %455 = or i32 %296, %291
  %456 = xor i32 %351, %4
  %457 = xor i32 %310, %4
  %458 = or i32 %305, %4
  %459 = and i32 %320, %304
  %460 = xor i32 %381, -1
  %461 = or i32 %459, %460
  %462 = xor i32 %293, %4
  %463 = shl i32 %462, 1
  %464 = xor i32 %305, %291
  %465 = or i32 %16, %5
  %466 = or i32 %334, %299
  %467 = shl i32 %466, 1
  %468 = and i32 %296, %304
  %469 = or i32 %400, %3
  %470 = or i32 %293, %4
  %471 = xor i32 %361, %5
  %472 = xor i32 %322, %4
  %473 = xor i32 %472, %324
  %474 = and i32 %366, %298
  %475 = and i32 %308, %298
  %476 = xor i32 %292, %4
  %477 = xor i32 %288, %379
  %478 = or i32 %308, %299
  %479 = shl i32 %478, 1
  %480 = or i32 %299, %317
  %481 = and i32 %335, %304
  %482 = xor i32 %291, %5
  %483 = or i32 %317, %3
  %484 = shl i32 %483, 1
  %485 = or i32 %301, %349
  %486 = xor i32 %289, %3
  %487 = xor i32 %429, -1
  %488 = or i32 %321, %487
  %489 = xor i32 %367, %3
  %490 = shl i32 %489, 1
  %491 = xor i32 %363, %312
  %492 = shl i32 %491, 1
  %493 = or i32 %299, %301
  %494 = and i32 %315, %17
  %495 = xor i32 %314, %3
  %496 = shl i32 %304, 1
  %497 = xor i32 %335, %4
  %498 = or i32 %314, %334
  %499 = and i32 %308, %16
  %500 = shl i32 %499, 2
  %501 = and i32 %332, %5
  %502 = or i32 %317, %349
  %503 = and i32 %366, %3
  %504 = xor i32 %334, %4
  %505 = or i32 %321, %472
  %506 = shl i32 %505, 1
  %507 = and i32 %326, %298
  %508 = shl i32 %507, 1
  %509 = xor i32 %292, %291
  %510 = xor i32 %332, %5
  %511 = or i32 %16, %317
  %512 = and i32 %16, %5
  %513 = or i32 %291, %400
  %514 = or i32 %314, %16
  %515 = or i32 %328, %390
  %516 = and i32 %16, %317
  %517 = or i32 %314, %298
  %518 = and i32 %366, %17
  %519 = xor i32 %300, %5
  %520 = or i32 %367, %3
  %521 = or i32 %314, %349
  %522 = xor i32 %314, %305
  %523 = shl i32 %522, 1
  %524 = or i32 %17, %5
  %525 = and i32 %301, %4
  %526 = and i32 %342, %301
  %527 = shl i32 %526, 1
  %528 = or i32 %291, %351
  %529 = xor i32 %349, %5
  %530 = and i32 %322, %4
  %531 = or i32 %459, %530
  %532 = or i32 %361, %5
  %533 = add i32 %288, 1
  %534 = or i32 %310, %4
  %535 = or i32 %379, %304
  %536 = and i32 %351, %304
  %537 = mul i32 %536, 28
  %538 = and i32 %334, %304
  %539 = mul i32 %538, 33
  %540 = and i32 %351, %4
  %541 = shl i32 %540, 3
  %542 = and i32 %334, %4
  %543 = mul i32 %542, 15
  %544 = and i32 %293, %304
  %545 = mul i32 %311, 46
  %546 = and i32 %293, %4
  %547 = add i32 %36, %1
  %548 = add i32 %547, %268
  %549 = add i32 %548, %255
  %550 = add i32 %549, %84
  %551 = add i32 %550, %60
  %552 = add i32 %551, %137
  %553 = add i32 %552, %99
  %554 = sub i32 %12, %2
  %555 = sub i32 %554, %281
  %556 = sub i32 %555, %232
  %557 = add i32 %556, %146
  %558 = add i32 %557, %158
  %559 = sub i32 %558, %471
  %560 = add i32 %559, %546
  %561 = sub i32 %560, %396
  %562 = sub i32 %561, %488
  %563 = mul i32 %562, 3
  %564 = add i32 %4, %0
  %565 = sub i32 %564, %279
  %566 = add i32 %565, %439
  %567 = sub i32 %566, %251
  %568 = sub i32 %567, %428
  %569 = add i32 %568, %456
  %570 = sub i32 %569, %362
  %571 = mul i32 %570, 5
  %572 = add i32 %328, %544
  %573 = mul i32 %572, 26
  %574 = add i32 %553, %20
  %575 = add i32 %574, %280
  %576 = add i32 %575, %33
  %577 = add i32 %576, %243
  %578 = add i32 %577, %217
  %579 = add i32 %578, %197
  %580 = add i32 %579, %176
  %581 = add i32 %580, %170
  %582 = add i32 %581, %159
  %583 = add i32 %582, %134
  %584 = add i32 %583, %104
  %585 = add i32 %584, %73
  %586 = add i32 %585, %29
  %587 = add i32 %586, %349
  %588 = add i32 %587, %482
  %589 = add i32 %588, %444
  %590 = add i32 %589, %350
  %591 = add i32 %590, %315
  %592 = add i32 %591, %317
  %593 = add i32 %592, %77
  %594 = add i32 %593, %54
  %595 = add i32 %594, %534
  %596 = add i32 %595, %503
  %597 = add i32 %596, %464
  %598 = add i32 %597, %454
  %599 = add i32 %598, %436
  %600 = add i32 %599, %416
  %601 = add i32 %600, %387
  %602 = add i32 %601, %336
  %603 = add i32 %602, %294
  %604 = add i32 %603, %313
  %605 = add i32 %604, %331
  %606 = shl i32 %605, 1
  %607 = add i32 %2, 1073741823
  %608 = add i32 %607, %136
  %609 = add i32 %608, %209
  %610 = add i32 %609, %343
  %611 = add i32 %610, %413
  %612 = shl i32 %611, 2
  %613 = sub i32 2, %0
  %614 = add i32 %613, %276
  %615 = add i32 %614, %23
  %616 = add i32 %615, %25
  %617 = sub i32 %616, %10
  %618 = add i32 %617, %122
  %619 = add i32 %618, %144
  %620 = add i32 %619, %24
  %621 = add i32 %620, %27
  %622 = sub i32 %621, %28
  %623 = add i32 %622, %62
  %624 = sub i32 %623, %65
  %625 = sub i32 %624, %67
  %626 = add i32 %625, %90
  %627 = sub i32 %626, %95
  %628 = add i32 %627, %107
  %629 = add i32 %628, %9
  %630 = sub i32 %629, %120
  %631 = add i32 %630, %124
  %632 = sub i32 %631, %12
  %633 = add i32 %632, %86
  %634 = sub i32 %633, %166
  %635 = sub i32 %634, %168
  %636 = sub i32 %635, %171
  %637 = add i32 %636, %172
  %638 = add i32 %637, %175
  %639 = sub i32 %638, %179
  %640 = add i32 %639, %183
  %641 = sub i32 %640, %211
  %642 = sub i32 %641, %215
  %643 = sub i32 %642, %216
  %644 = sub i32 %643, %221
  %645 = sub i32 %644, %59
  %646 = add i32 %645, %239
  %647 = add i32 %646, %78
  %648 = sub i32 %647, %56
  %649 = add i32 %648, %252
  %650 = add i32 %649, %258
  %651 = add i32 %650, %49
  %652 = sub i32 %651, %3
  %653 = add i32 %652, %298
  %654 = add i32 %653, %38
  %655 = add i32 %654, %39
  %656 = add i32 %655, %40
  %657 = add i32 %656, %43
  %658 = add i32 %657, %51
  %659 = sub i32 %658, %55
  %660 = add i32 %659, %58
  %661 = sub i32 %660, %61
  %662 = add i32 %661, %71
  %663 = sub i32 %662, %72
  %664 = add i32 %663, %80
  %665 = add i32 %664, %81
  %666 = sub i32 %665, %83
  %667 = sub i32 %666, %85
  %668 = add i32 %667, %87
  %669 = add i32 %668, %88
  %670 = sub i32 %669, %89
  %671 = add i32 %670, %91
  %672 = add i32 %671, %92
  %673 = add i32 %672, %93
  %674 = sub i32 %673, %94
  %675 = sub i32 %674, %96
  %676 = add i32 %675, %100
  %677 = sub i32 %676, %108
  %678 = sub i32 %677, %109
  %679 = add i32 %678, %110
  %680 = add i32 %679, %115
  %681 = add i32 %680, %121
  %682 = add i32 %681, %123
  %683 = add i32 %682, %101
  %684 = sub i32 %683, %125
  %685 = add i32 %684, %126
  %686 = sub i32 %685, %127
  %687 = sub i32 %686, %128
  %688 = add i32 %687, %131
  %689 = sub i32 %688, %135
  %690 = sub i32 %689, %138
  %691 = sub i32 %690, %141
  %692 = sub i32 %691, %143
  %693 = sub i32 %692, %145
  %694 = sub i32 %693, %147
  %695 = add i32 %694, %148
  %696 = add i32 %695, %149
  %697 = sub i32 %696, %150
  %698 = sub i32 %697, %151
  %699 = sub i32 %698, %153
  %700 = sub i32 %699, %154
  %701 = sub i32 %700, %155
  %702 = add i32 %701, %160
  %703 = sub i32 %702, %163
  %704 = sub i32 %703, %167
  %705 = add i32 %704, %169
  %706 = sub i32 %705, %173
  %707 = sub i32 %706, %174
  %708 = add i32 %707, %177
  %709 = sub i32 %708, %178
  %710 = sub i32 %709, %180
  %711 = sub i32 %710, %181
  %712 = add i32 %711, %182
  %713 = sub i32 %712, %186
  %714 = add i32 %713, %189
  %715 = sub i32 %714, %190
  %716 = add i32 %715, %191
  %717 = sub i32 %716, %192
  %718 = sub i32 %717, %194
  %719 = add i32 %718, %196
  %720 = sub i32 %719, %198
  %721 = add i32 %720, %199
  %722 = sub i32 %721, %201
  %723 = add i32 %722, %202
  %724 = add i32 %723, %203
  %725 = add i32 %724, %204
  %726 = add i32 %725, %208
  %727 = sub i32 %726, %210
  %728 = sub i32 %727, %212
  %729 = add i32 %728, %213
  %730 = add i32 %729, %214
  %731 = sub i32 %730, %218
  %732 = sub i32 %731, %219
  %733 = sub i32 %732, %220
  %734 = add i32 %733, %226
  %735 = sub i32 %734, %227
  %736 = sub i32 %735, %228
  %737 = sub i32 %736, %231
  %738 = add i32 %737, %237
  %739 = sub i32 %738, %238
  %740 = sub i32 %739, %240
  %741 = sub i32 %740, %241
  %742 = sub i32 %741, %139
  %743 = sub i32 %742, %242
  %744 = sub i32 %743, %248
  %745 = sub i32 %744, %249
  %746 = add i32 %745, %253
  %747 = add i32 %746, %254
  %748 = add i32 %747, %256
  %749 = sub i32 %748, %257
  %750 = sub i32 %749, %259
  %751 = add i32 %750, %260
  %752 = add i32 %751, %261
  %753 = sub i32 %752, %262
  %754 = sub i32 %753, %264
  %755 = add i32 %754, %265
  %756 = sub i32 %755, %267
  %757 = add i32 %756, %269
  %758 = sub i32 %757, %272
  %759 = sub i32 %758, %273
  %760 = sub i32 %759, %274
  %761 = add i32 %760, %282
  %762 = sub i32 %761, %35
  %763 = sub i32 %762, %48
  %764 = sub i32 %763, %69
  %765 = add i32 %764, %82
  %766 = sub i32 %765, %98
  %767 = add i32 %766, %103
  %768 = sub i32 %767, %112
  %769 = sub i32 %768, %114
  %770 = sub i32 %769, %130
  %771 = sub i32 %770, %133
  %772 = add i32 %771, %140
  %773 = sub i32 %772, %142
  %774 = add i32 %773, %152
  %775 = sub i32 %774, %157
  %776 = sub i32 %775, %165
  %777 = sub i32 %776, %185
  %778 = sub i32 %777, %188
  %779 = add i32 %778, %193
  %780 = add i32 %779, %195
  %781 = add i32 %780, %205
  %782 = add i32 %781, %207
  %783 = sub i32 %782, %223
  %784 = sub i32 %783, %225
  %785 = sub i32 %784, %230
  %786 = sub i32 %785, %234
  %787 = sub i32 %786, %236
  %788 = sub i32 %787, %245
  %789 = sub i32 %788, %247
  %790 = add i32 %789, %250
  %791 = sub i32 %790, %266
  %792 = sub i32 %791, %271
  %793 = add i32 %792, %275
  %794 = add i32 %793, %278
  %795 = sub i32 %794, %283
  %796 = add i32 %795, %285
  %797 = add i32 %796, %286
  %798 = add i32 %797, %299
  %799 = add i32 %798, %17
  %800 = add i32 %799, %295
  %801 = add i32 %800, %342
  %802 = sub i32 %801, %496
  %803 = add i32 %802, 1
  %804 = sub i32 %803, %106
  %805 = add i32 %804, %303
  %806 = add i32 %805, %338
  %807 = sub i32 %806, %288
  %808 = add i32 %807, %351
  %809 = sub i32 %808, %326
  %810 = add i32 %809, %360
  %811 = add i32 %810, %371
  %812 = sub i32 %811, %305
  %813 = add i32 %812, %373
  %814 = sub i32 %813, %366
  %815 = add i32 %814, %293
  %816 = add i32 %815, %392
  %817 = sub i32 %816, %402
  %818 = sub i32 %817, %292
  %819 = sub i32 %818, %414
  %820 = add i32 %819, %415
  %821 = sub i32 %820, %421
  %822 = sub i32 %821, %314
  %823 = sub i32 %822, %441
  %824 = sub i32 %823, %465
  %825 = add i32 %824, %367
  %826 = sub i32 %825, %501
  %827 = add i32 %826, %510
  %828 = sub i32 %827, %512
  %829 = add i32 %828, %519
  %830 = add i32 %829, %524
  %831 = sub i32 %830, %529
  %832 = sub i32 %831, %532
  %833 = add i32 %832, %533
  %834 = sub i32 %833, %119
  %835 = sub i32 %834, %162
  %836 = sub i32 %835, %290
  %837 = sub i32 %836, %297
  %838 = sub i32 %837, %302
  %839 = sub i32 %838, %306
  %840 = add i32 %839, %307
  %841 = add i32 %840, %309
  %842 = sub i32 %841, %316
  %843 = add i32 %842, %318
  %844 = add i32 %843, %319
  %845 = sub i32 %844, %327
  %846 = add i32 %845, %333
  %847 = add i32 %846, %337
  %848 = sub i32 %847, %339
  %849 = add i32 %848, %341
  %850 = sub i32 %849, %344
  %851 = add i32 %850, %345
  %852 = sub i32 %851, %346
  %853 = sub i32 %852, %352
  %854 = sub i32 %853, %353
  %855 = sub i32 %854, %354
  %856 = add i32 %855, %355
  %857 = sub i32 %856, %356
  %858 = add i32 %857, %357
  %859 = add i32 %858, %370
  %860 = sub i32 %859, %372
  %861 = sub i32 %860, %374
  %862 = sub i32 %861, %378
  %863 = sub i32 %862, %380
  %864 = sub i32 %863, %381
  %865 = add i32 %864, %388
  %866 = sub i32 %865, %393
  %867 = sub i32 %866, %399
  %868 = sub i32 %867, %401
  %869 = sub i32 %868, %404
  %870 = sub i32 %869, %405
  %871 = add i32 %870, %406
  %872 = sub i32 %871, %407
  %873 = sub i32 %872, %408
  %874 = add i32 %873, %409
  %875 = sub i32 %874, %411
  %876 = add i32 %875, %412
  %877 = sub i32 %876, %418
  %878 = sub i32 %877, %419
  %879 = sub i32 %878, %420
  %880 = add i32 %879, %422
  %881 = add i32 %880, %423
  %882 = sub i32 %881, %424
  %883 = sub i32 %882, %425
  %884 = add i32 %883, %433
  %885 = sub i32 %884, %434
  %886 = add i32 %885, %435
  %887 = add i32 %886, %437
  %888 = add i32 %887, %438
  %889 = sub i32 %888, %440
  %890 = add i32 %889, %445
  %891 = sub i32 %890, %446
  %892 = sub i32 %891, %447
  %893 = sub i32 %892, %448
  %894 = add i32 %893, %449
  %895 = sub i32 %894, %450
  %896 = add i32 %895, %451
  %897 = sub i32 %896, %452
  %898 = sub i32 %897, %453
  %899 = add i32 %898, %455
  %900 = add i32 %899, %457
  %901 = add i32 %900, %458
  %902 = add i32 %901, %468
  %903 = sub i32 %902, %469
  %904 = sub i32 %903, %470
  %905 = add i32 %904, %474
  %906 = sub i32 %905, %475
  %907 = add i32 %906, %476
  %908 = add i32 %907, %477
  %909 = sub i32 %908, %480
  %910 = sub i32 %909, %481
  %911 = add i32 %910, %485
  %912 = sub i32 %911, %486
  %913 = sub i32 %912, %493
  %914 = add i32 %913, %494
  %915 = sub i32 %914, %495
  %916 = sub i32 %915, %497
  %917 = sub i32 %916, %498
  %918 = add i32 %917, %502
  %919 = add i32 %918, %504
  %920 = add i32 %919, %509
  %921 = add i32 %920, %511
  %922 = sub i32 %921, %513
  %923 = sub i32 %922, %514
  %924 = sub i32 %923, %516
  %925 = sub i32 %924, %517
  %926 = sub i32 %925, %518
  %927 = sub i32 %926, %520
  %928 = sub i32 %927, %521
  %929 = add i32 %928, %525
  %930 = sub i32 %929, %528
  %931 = add i32 %930, %329
  %932 = add i32 %931, %429
  %933 = add i32 %932, %535
  %934 = add i32 %933, %325
  %935 = sub i32 %934, %340
  %936 = sub i32 %935, %348
  %937 = sub i32 %936, %359
  %938 = sub i32 %937, %369
  %939 = sub i32 %938, %376
  %940 = sub i32 %939, %386
  %941 = add i32 %940, %389
  %942 = add i32 %941, %391
  %943 = sub i32 %942, %395
  %944 = sub i32 %943, %398
  %945 = sub i32 %944, %410
  %946 = add i32 %945, %417
  %947 = sub i32 %946, %427
  %948 = add i32 %947, %430
  %949 = sub i32 %948, %432
  %950 = sub i32 %949, %443
  %951 = add i32 %950, %461
  %952 = sub i32 %951, %463
  %953 = sub i32 %952, %467
  %954 = add i32 %953, %473
  %955 = sub i32 %954, %479
  %956 = sub i32 %955, %484
  %957 = sub i32 %956, %490
  %958 = sub i32 %957, %500
  %959 = sub i32 %958, %508
  %960 = add i32 %959, %515
  %961 = sub i32 %960, %523
  %962 = sub i32 %961, %527
  %963 = add i32 %962, %531
  %964 = add i32 %963, %537
  %965 = add i32 %964, %539
  %966 = add i32 %965, %541
  %967 = add i32 %966, %543
  %968 = add i32 %967, %545
  %969 = sub i32 %968, %384
  %970 = sub i32 %969, %506
  %971 = add i32 %970, %573
  %972 = sub i32 %971, %365
  %973 = sub i32 %972, %492
  %974 = add i32 %973, %612
  %975 = add i32 %974, %571
  %976 = add i32 %975, %563
  %977 = add i32 %976, %606
  %978 = icmp eq i32 %19, %977
  %979 = select i1 %978, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %980 = tail call i32 @puts(i8* nonnull dereferenceable(1) %979)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
