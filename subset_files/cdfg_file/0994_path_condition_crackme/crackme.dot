digraph "DFG for'crackme' function" {
	Node0x1379ca0[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x1379d40[shape=record, label="  %4 = shl i32 %3, 1"];
	Node0x1379e00[shape=record, label="  %5 = or i32 %1, %0"];
	Node0x1379e70[shape=record, label="  %6 = add i32 %4, %5"];
	Node0x1379ee0[shape=record, label="  %7 = xor i32 %1, %0"];
	Node0x1379f50[shape=record, label="  %8 = mul i32 %7, -2"];
	Node0x1379fc0[shape=record, label="  %9 = shl i32 %0, 1"];
	Node0x137a030[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0x137a0a0[shape=record, label="  %11 = or i32 %10, 1"];
	Node0x137a110[shape=record, label="  %12 = and i32 %3, %0"];
	Node0x137a180[shape=record, label="  %13 = or i32 %3, %0"];
	Node0x137a1f0[shape=record, label="  %14 = and i32 %1, %0"];
	Node0x137a260[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x137a2d0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x137a340[shape=record, label="  %17 = xor i32 %5, -1"];
	Node0x137a3b0[shape=record, label="  %18 = xor i32 %13, -1"];
	Node0x137a450[shape=record, label="  %19 = mul i32 %12, 9"];
	Node0x137a4f0[shape=record, label="  %20 = shl i32 %14, 2"];
	Node0x137a560[shape=record, label="  %21 = add i32 %18, %17"];
	Node0x137a600[shape=record, label="  %22 = mul i32 %21, 6"];
	Node0x137a670[shape=record, label="  %23 = add i32 %1, 2"];
	Node0x137a6e0[shape=record, label="  %24 = add i32 %23, %7"];
	Node0x137a750[shape=record, label="  %25 = add i32 %24, %12"];
	Node0x137a7c0[shape=record, label="  %26 = add i32 %25, %13"];
	Node0x137a830[shape=record, label="  %27 = add i32 %26, %19"];
	Node0x137a8a0[shape=record, label="  %28 = add i32 %27, %20"];
	Node0x137a910[shape=record, label="  %29 = sub i32 %28, %16"];
	Node0x137a980[shape=record, label="  %30 = add i32 %29, %22"];
	Node0x137a9f0[shape=record, label="  %31 = add i32 %30, %11"];
	Node0x137aa60[shape=record, label="  %32 = icmp eq i32 %6, %31"];
	Node0x131a268[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x137b110[shape=record, label="  %34 = tail call i32 @puts(i8* nonnull dereferenceable(1) %33)"];
	Node0x137b160[shape=record, label="  ret void"];
	Node0x1379ca0 -> Node0x1379d40;
	Node0x1379d40 -> Node0x1379e00;
	Node0x1379e00 -> Node0x1379e70;
	Node0x1379e70 -> Node0x1379ee0;
	Node0x1379ee0 -> Node0x1379f50;
	Node0x1379f50 -> Node0x1379fc0;
	Node0x1379fc0 -> Node0x137a030;
	Node0x137a030 -> Node0x137a0a0;
	Node0x137a0a0 -> Node0x137a110;
	Node0x137a110 -> Node0x137a180;
	Node0x137a180 -> Node0x137a1f0;
	Node0x137a1f0 -> Node0x137a260;
	Node0x137a260 -> Node0x137a2d0;
	Node0x137a2d0 -> Node0x137a340;
	Node0x137a340 -> Node0x137a3b0;
	Node0x137a3b0 -> Node0x137a450;
	Node0x137a450 -> Node0x137a4f0;
	Node0x137a4f0 -> Node0x137a560;
	Node0x137a560 -> Node0x137a600;
	Node0x137a600 -> Node0x137a670;
	Node0x137a670 -> Node0x137a6e0;
	Node0x137a6e0 -> Node0x137a750;
	Node0x137a750 -> Node0x137a7c0;
	Node0x137a7c0 -> Node0x137a830;
	Node0x137a830 -> Node0x137a8a0;
	Node0x137a8a0 -> Node0x137a910;
	Node0x137a910 -> Node0x137a980;
	Node0x137a980 -> Node0x137a9f0;
	Node0x137a9f0 -> Node0x137aa60;
	Node0x137aa60 -> Node0x131a268;
	Node0x131a268 -> Node0x137b110;
	Node0x137b110 -> Node0x137b160;
edge [color=red]
	Node0x1379ca0 -> Node0x1379d40;
	Node0x1379d40 -> Node0x1379e70;
	Node0x1379e00 -> Node0x1379e70;
	Node0x1379ee0 -> Node0x1379f50;
	Node0x1379f50 -> Node0x137a030;
	Node0x1379fc0 -> Node0x137a030;
	Node0x137a030 -> Node0x137a0a0;
	Node0x1379ca0 -> Node0x137a110;
	Node0x1379ca0 -> Node0x137a180;
	Node0x137a1f0 -> Node0x137a260;
	Node0x137a260 -> Node0x137a2d0;
	Node0x1379e00 -> Node0x137a340;
	Node0x137a180 -> Node0x137a3b0;
	Node0x137a110 -> Node0x137a450;
	Node0x137a1f0 -> Node0x137a4f0;
	Node0x137a3b0 -> Node0x137a560;
	Node0x137a340 -> Node0x137a560;
	Node0x137a560 -> Node0x137a600;
	Node0x137a670 -> Node0x137a6e0;
	Node0x1379ee0 -> Node0x137a6e0;
	Node0x137a6e0 -> Node0x137a750;
	Node0x137a110 -> Node0x137a750;
	Node0x137a750 -> Node0x137a7c0;
	Node0x137a180 -> Node0x137a7c0;
	Node0x137a7c0 -> Node0x137a830;
	Node0x137a450 -> Node0x137a830;
	Node0x137a830 -> Node0x137a8a0;
	Node0x137a4f0 -> Node0x137a8a0;
	Node0x137a8a0 -> Node0x137a910;
	Node0x137a2d0 -> Node0x137a910;
	Node0x137a910 -> Node0x137a980;
	Node0x137a600 -> Node0x137a980;
	Node0x137a980 -> Node0x137a9f0;
	Node0x137a0a0 -> Node0x137a9f0;
	Node0x1379e70 -> Node0x137aa60;
	Node0x137a9f0 -> Node0x137aa60;
	Node0x137aa60 -> Node0x131a268;
	Node0x131a268 -> Node0x137b110;
}
