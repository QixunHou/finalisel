digraph "DFG for'main' function" {
	Node0x137b328[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x137b3a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x137b438[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x137b898[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x137b978[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x137ba98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x137bcd0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x137bd88[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x137ccf8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x137d380[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x137d3f0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x137d460[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x137d4d0[shape=record, label="  %11 = add i32 %9, %10"];
	Node0x137d540[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0x137d5b0[shape=record, label="  %13 = mul i32 %12, -2"];
	Node0x137d620[shape=record, label="  %14 = shl i32 %6, 1"];
	Node0x137d690[shape=record, label="  %15 = sub i32 %13, %14"];
	Node0x137d700[shape=record, label="  %16 = or i32 %15, 1"];
	Node0x137d770[shape=record, label="  %17 = and i32 %6, %8"];
	Node0x137d7e0[shape=record, label="  %18 = or i32 %6, %8"];
	Node0x137d850[shape=record, label="  %19 = and i32 %7, %6"];
	Node0x137d8c0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x137d930[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x137d9a0[shape=record, label="  %22 = xor i32 %10, -1"];
	Node0x137da10[shape=record, label="  %23 = xor i32 %18, -1"];
	Node0x137da80[shape=record, label="  %24 = mul i32 %17, 9"];
	Node0x137daf0[shape=record, label="  %25 = shl i32 %19, 2"];
	Node0x137db60[shape=record, label="  %26 = add i32 %23, %22"];
	Node0x137dbd0[shape=record, label="  %27 = mul i32 %26, 6"];
	Node0x137dc40[shape=record, label="  %28 = add i32 %7, 2"];
	Node0x137dcb0[shape=record, label="  %29 = add i32 %28, %12"];
	Node0x137dd20[shape=record, label="  %30 = add i32 %29, %17"];
	Node0x137dd90[shape=record, label="  %31 = add i32 %30, %18"];
	Node0x137de00[shape=record, label="  %32 = add i32 %31, %24"];
	Node0x137de70[shape=record, label="  %33 = add i32 %32, %25"];
	Node0x137dee0[shape=record, label="  %34 = sub i32 %33, %21"];
	Node0x137df50[shape=record, label="  %35 = add i32 %34, %27"];
	Node0x137dfc0[shape=record, label="  %36 = add i32 %35, %16"];
	Node0x137e030[shape=record, label="  %37 = icmp eq i32 %11, %36"];
	Node0x131b9d8[shape=record, label="  %38 = select i1 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x137e0c0[shape=record, label="  %39 = call i32 @puts(i8* nonnull dereferenceable(1) %38) #5"];
	Node0x137e318[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x137e478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x137e538[shape=record, label="  ret i32 0"];
	Node0x137b328 -> Node0x137b3a8;
	Node0x137b3a8 -> Node0x137b438;
	Node0x137b438 -> Node0x137b898;
	Node0x137b898 -> Node0x137b978;
	Node0x137b978 -> Node0x137ba98;
	Node0x137ba98 -> Node0x137bcd0;
	Node0x137bcd0 -> Node0x137bd88;
	Node0x137bd88 -> Node0x137ccf8;
	Node0x137ccf8 -> Node0x137d380;
	Node0x137d380 -> Node0x137d3f0;
	Node0x137d3f0 -> Node0x137d460;
	Node0x137d460 -> Node0x137d4d0;
	Node0x137d4d0 -> Node0x137d540;
	Node0x137d540 -> Node0x137d5b0;
	Node0x137d5b0 -> Node0x137d620;
	Node0x137d620 -> Node0x137d690;
	Node0x137d690 -> Node0x137d700;
	Node0x137d700 -> Node0x137d770;
	Node0x137d770 -> Node0x137d7e0;
	Node0x137d7e0 -> Node0x137d850;
	Node0x137d850 -> Node0x137d8c0;
	Node0x137d8c0 -> Node0x137d930;
	Node0x137d930 -> Node0x137d9a0;
	Node0x137d9a0 -> Node0x137da10;
	Node0x137da10 -> Node0x137da80;
	Node0x137da80 -> Node0x137daf0;
	Node0x137daf0 -> Node0x137db60;
	Node0x137db60 -> Node0x137dbd0;
	Node0x137dbd0 -> Node0x137dc40;
	Node0x137dc40 -> Node0x137dcb0;
	Node0x137dcb0 -> Node0x137dd20;
	Node0x137dd20 -> Node0x137dd90;
	Node0x137dd90 -> Node0x137de00;
	Node0x137de00 -> Node0x137de70;
	Node0x137de70 -> Node0x137dee0;
	Node0x137dee0 -> Node0x137df50;
	Node0x137df50 -> Node0x137dfc0;
	Node0x137dfc0 -> Node0x137e030;
	Node0x137e030 -> Node0x131b9d8;
	Node0x131b9d8 -> Node0x137e0c0;
	Node0x137e0c0 -> Node0x137e318;
	Node0x137e318 -> Node0x137e478;
	Node0x137e478 -> Node0x137e538;
edge [color=red]
	Node0x137b328 -> Node0x137b438;
	Node0x137b438 -> Node0x137b898;
	Node0x137b3a8 -> Node0x137b978;
	Node0x137b978 -> Node0x137ba98;
	Node0x137b328 -> Node0x137bcd0;
	Node0x137b3a8 -> Node0x137bcd0;
	Node0x137b328 -> Node0x137bd88;
	Node0x137b3a8 -> Node0x137ccf8;
	Node0x137ccf8 -> Node0x137d380;
	Node0x137d380 -> Node0x137d3f0;
	Node0x137ccf8 -> Node0x137d460;
	Node0x137bd88 -> Node0x137d460;
	Node0x137d3f0 -> Node0x137d4d0;
	Node0x137d460 -> Node0x137d4d0;
	Node0x137ccf8 -> Node0x137d540;
	Node0x137bd88 -> Node0x137d540;
	Node0x137d540 -> Node0x137d5b0;
	Node0x137bd88 -> Node0x137d620;
	Node0x137d5b0 -> Node0x137d690;
	Node0x137d620 -> Node0x137d690;
	Node0x137d690 -> Node0x137d700;
	Node0x137bd88 -> Node0x137d770;
	Node0x137d380 -> Node0x137d770;
	Node0x137bd88 -> Node0x137d7e0;
	Node0x137d380 -> Node0x137d7e0;
	Node0x137ccf8 -> Node0x137d850;
	Node0x137bd88 -> Node0x137d850;
	Node0x137d850 -> Node0x137d8c0;
	Node0x137d8c0 -> Node0x137d930;
	Node0x137d460 -> Node0x137d9a0;
	Node0x137d7e0 -> Node0x137da10;
	Node0x137d770 -> Node0x137da80;
	Node0x137d850 -> Node0x137daf0;
	Node0x137da10 -> Node0x137db60;
	Node0x137d9a0 -> Node0x137db60;
	Node0x137db60 -> Node0x137dbd0;
	Node0x137ccf8 -> Node0x137dc40;
	Node0x137dc40 -> Node0x137dcb0;
	Node0x137d540 -> Node0x137dcb0;
	Node0x137dcb0 -> Node0x137dd20;
	Node0x137d770 -> Node0x137dd20;
	Node0x137dd20 -> Node0x137dd90;
	Node0x137d7e0 -> Node0x137dd90;
	Node0x137dd90 -> Node0x137de00;
	Node0x137da80 -> Node0x137de00;
	Node0x137de00 -> Node0x137de70;
	Node0x137daf0 -> Node0x137de70;
	Node0x137de70 -> Node0x137dee0;
	Node0x137d930 -> Node0x137dee0;
	Node0x137dee0 -> Node0x137df50;
	Node0x137dbd0 -> Node0x137df50;
	Node0x137df50 -> Node0x137dfc0;
	Node0x137d700 -> Node0x137dfc0;
	Node0x137d4d0 -> Node0x137e030;
	Node0x137dfc0 -> Node0x137e030;
	Node0x137e030 -> Node0x131b9d8;
	Node0x131b9d8 -> Node0x137e0c0;
	Node0x137b978 -> Node0x137e318;
	Node0x137b438 -> Node0x137e478;
}
