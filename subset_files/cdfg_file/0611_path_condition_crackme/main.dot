digraph "DFG for'main' function" {
	Node0xd85c58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd85cd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd85d68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xd861c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xd862a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xd863c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd86600[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xd866b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd87628[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd87cb0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xd87d20[shape=record, label="  %9 = xor i32 %6, -1"];
	Node0xd87d90[shape=record, label="  %10 = add i32 %8, %9"];
	Node0xd87e00[shape=record, label="  %11 = and i32 %6, %8"];
	Node0xd87e70[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0xd87ee0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xd87f50[shape=record, label="  %14 = or i32 %7, %6"];
	Node0xd87fc0[shape=record, label="  %15 = or i32 %6, %8"];
	Node0xd88030[shape=record, label="  %16 = shl i32 %14, 1"];
	Node0xd880a0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0xd88110[shape=record, label="  %18 = shl i32 %15, 1"];
	Node0xd88180[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0xd881f0[shape=record, label="  %20 = shl i32 %11, 2"];
	Node0xd88260[shape=record, label="  %21 = sub i32 2, %6"];
	Node0xd882d0[shape=record, label="  %22 = add i32 %21, %7"];
	Node0xd88340[shape=record, label="  %23 = add i32 %22, %12"];
	Node0xd883b0[shape=record, label="  %24 = add i32 %23, %13"];
	Node0xd88420[shape=record, label="  %25 = sub i32 %24, %14"];
	Node0xd88490[shape=record, label="  %26 = add i32 %25, %15"];
	Node0xd88500[shape=record, label="  %27 = add i32 %26, %20"];
	Node0xd88570[shape=record, label="  %28 = add i32 %27, %17"];
	Node0xd885e0[shape=record, label="  %29 = add i32 %28, %19"];
	Node0xd88650[shape=record, label="  %30 = icmp eq i32 %10, %29"];
	Node0xd269d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xd886e0[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0xd88b48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd88ca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xd88d68[shape=record, label="  ret i32 0"];
	Node0xd85c58 -> Node0xd85cd8;
	Node0xd85cd8 -> Node0xd85d68;
	Node0xd85d68 -> Node0xd861c8;
	Node0xd861c8 -> Node0xd862a8;
	Node0xd862a8 -> Node0xd863c8;
	Node0xd863c8 -> Node0xd86600;
	Node0xd86600 -> Node0xd866b8;
	Node0xd866b8 -> Node0xd87628;
	Node0xd87628 -> Node0xd87cb0;
	Node0xd87cb0 -> Node0xd87d20;
	Node0xd87d20 -> Node0xd87d90;
	Node0xd87d90 -> Node0xd87e00;
	Node0xd87e00 -> Node0xd87e70;
	Node0xd87e70 -> Node0xd87ee0;
	Node0xd87ee0 -> Node0xd87f50;
	Node0xd87f50 -> Node0xd87fc0;
	Node0xd87fc0 -> Node0xd88030;
	Node0xd88030 -> Node0xd880a0;
	Node0xd880a0 -> Node0xd88110;
	Node0xd88110 -> Node0xd88180;
	Node0xd88180 -> Node0xd881f0;
	Node0xd881f0 -> Node0xd88260;
	Node0xd88260 -> Node0xd882d0;
	Node0xd882d0 -> Node0xd88340;
	Node0xd88340 -> Node0xd883b0;
	Node0xd883b0 -> Node0xd88420;
	Node0xd88420 -> Node0xd88490;
	Node0xd88490 -> Node0xd88500;
	Node0xd88500 -> Node0xd88570;
	Node0xd88570 -> Node0xd885e0;
	Node0xd885e0 -> Node0xd88650;
	Node0xd88650 -> Node0xd269d8;
	Node0xd269d8 -> Node0xd886e0;
	Node0xd886e0 -> Node0xd88b48;
	Node0xd88b48 -> Node0xd88ca8;
	Node0xd88ca8 -> Node0xd88d68;
edge [color=red]
	Node0xd85c58 -> Node0xd85d68;
	Node0xd85d68 -> Node0xd861c8;
	Node0xd85cd8 -> Node0xd862a8;
	Node0xd862a8 -> Node0xd863c8;
	Node0xd85c58 -> Node0xd86600;
	Node0xd85cd8 -> Node0xd86600;
	Node0xd85c58 -> Node0xd866b8;
	Node0xd85cd8 -> Node0xd87628;
	Node0xd87628 -> Node0xd87cb0;
	Node0xd866b8 -> Node0xd87d20;
	Node0xd87cb0 -> Node0xd87d90;
	Node0xd87d20 -> Node0xd87d90;
	Node0xd866b8 -> Node0xd87e00;
	Node0xd87cb0 -> Node0xd87e00;
	Node0xd87e00 -> Node0xd87e70;
	Node0xd87628 -> Node0xd87ee0;
	Node0xd866b8 -> Node0xd87ee0;
	Node0xd87628 -> Node0xd87f50;
	Node0xd866b8 -> Node0xd87f50;
	Node0xd866b8 -> Node0xd87fc0;
	Node0xd87cb0 -> Node0xd87fc0;
	Node0xd87f50 -> Node0xd88030;
	Node0xd88030 -> Node0xd880a0;
	Node0xd87fc0 -> Node0xd88110;
	Node0xd88110 -> Node0xd88180;
	Node0xd87e00 -> Node0xd881f0;
	Node0xd866b8 -> Node0xd88260;
	Node0xd88260 -> Node0xd882d0;
	Node0xd87628 -> Node0xd882d0;
	Node0xd882d0 -> Node0xd88340;
	Node0xd87e70 -> Node0xd88340;
	Node0xd88340 -> Node0xd883b0;
	Node0xd87ee0 -> Node0xd883b0;
	Node0xd883b0 -> Node0xd88420;
	Node0xd87f50 -> Node0xd88420;
	Node0xd88420 -> Node0xd88490;
	Node0xd87fc0 -> Node0xd88490;
	Node0xd88490 -> Node0xd88500;
	Node0xd881f0 -> Node0xd88500;
	Node0xd88500 -> Node0xd88570;
	Node0xd880a0 -> Node0xd88570;
	Node0xd88570 -> Node0xd885e0;
	Node0xd88180 -> Node0xd885e0;
	Node0xd87d90 -> Node0xd88650;
	Node0xd885e0 -> Node0xd88650;
	Node0xd88650 -> Node0xd269d8;
	Node0xd269d8 -> Node0xd886e0;
	Node0xd862a8 -> Node0xd88b48;
	Node0xd85d68 -> Node0xd88ca8;
}
