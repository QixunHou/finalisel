digraph "DFG for'main' function" {
	Node0x19f7b88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x19f7c08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x19f7c98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x19f80f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x19f81d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x19f82f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19f8530[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x19f85e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x19f9558[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x19f9be0[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x19f9c50[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0x19f9cc0[shape=record, label="  %10 = add i32 %9, %6"];
	Node0x19f9d30[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x19f9da0[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x19f9e10[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x19f9e80[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x19f9ef0[shape=record, label="  %15 = xor i32 %8, -1"];
	Node0x19f9f60[shape=record, label="  %16 = mul i32 %15, 5"];
	Node0x19f9fd0[shape=record, label="  %17 = xor i32 %6, 2147483647"];
	Node0x19fa040[shape=record, label="  %18 = and i32 %17, %7"];
	Node0x19fa0b0[shape=record, label="  %19 = mul i32 %13, 3"];
	Node0x19fa120[shape=record, label="  %20 = or i32 %12, %18"];
	Node0x19fa190[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x19fa200[shape=record, label="  %22 = add i32 %12, 5"];
	Node0x19fa270[shape=record, label="  %23 = add i32 %22, %13"];
	Node0x19fa2e0[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x19fa350[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x19fa3c0[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x19fa430[shape=record, label="  %27 = add i32 %26, %21"];
	Node0x19fa4a0[shape=record, label="  %28 = icmp eq i32 %10, %27"];
	Node0x19989d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x19fa530[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x19fa788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19fa8e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x19fa9a8[shape=record, label="  ret i32 0"];
	Node0x19f7b88 -> Node0x19f7c08;
	Node0x19f7c08 -> Node0x19f7c98;
	Node0x19f7c98 -> Node0x19f80f8;
	Node0x19f80f8 -> Node0x19f81d8;
	Node0x19f81d8 -> Node0x19f82f8;
	Node0x19f82f8 -> Node0x19f8530;
	Node0x19f8530 -> Node0x19f85e8;
	Node0x19f85e8 -> Node0x19f9558;
	Node0x19f9558 -> Node0x19f9be0;
	Node0x19f9be0 -> Node0x19f9c50;
	Node0x19f9c50 -> Node0x19f9cc0;
	Node0x19f9cc0 -> Node0x19f9d30;
	Node0x19f9d30 -> Node0x19f9da0;
	Node0x19f9da0 -> Node0x19f9e10;
	Node0x19f9e10 -> Node0x19f9e80;
	Node0x19f9e80 -> Node0x19f9ef0;
	Node0x19f9ef0 -> Node0x19f9f60;
	Node0x19f9f60 -> Node0x19f9fd0;
	Node0x19f9fd0 -> Node0x19fa040;
	Node0x19fa040 -> Node0x19fa0b0;
	Node0x19fa0b0 -> Node0x19fa120;
	Node0x19fa120 -> Node0x19fa190;
	Node0x19fa190 -> Node0x19fa200;
	Node0x19fa200 -> Node0x19fa270;
	Node0x19fa270 -> Node0x19fa2e0;
	Node0x19fa2e0 -> Node0x19fa350;
	Node0x19fa350 -> Node0x19fa3c0;
	Node0x19fa3c0 -> Node0x19fa430;
	Node0x19fa430 -> Node0x19fa4a0;
	Node0x19fa4a0 -> Node0x19989d8;
	Node0x19989d8 -> Node0x19fa530;
	Node0x19fa530 -> Node0x19fa788;
	Node0x19fa788 -> Node0x19fa8e8;
	Node0x19fa8e8 -> Node0x19fa9a8;
edge [color=red]
	Node0x19f7b88 -> Node0x19f7c98;
	Node0x19f7c98 -> Node0x19f80f8;
	Node0x19f7c08 -> Node0x19f81d8;
	Node0x19f81d8 -> Node0x19f82f8;
	Node0x19f7b88 -> Node0x19f8530;
	Node0x19f7c08 -> Node0x19f8530;
	Node0x19f7b88 -> Node0x19f85e8;
	Node0x19f7c08 -> Node0x19f9558;
	Node0x19f9558 -> Node0x19f9be0;
	Node0x19f85e8 -> Node0x19f9be0;
	Node0x19f9be0 -> Node0x19f9c50;
	Node0x19f9c50 -> Node0x19f9cc0;
	Node0x19f85e8 -> Node0x19f9cc0;
	Node0x19f9558 -> Node0x19f9d30;
	Node0x19f85e8 -> Node0x19f9da0;
	Node0x19f9d30 -> Node0x19f9da0;
	Node0x19f9558 -> Node0x19f9e10;
	Node0x19f85e8 -> Node0x19f9e10;
	Node0x19f9558 -> Node0x19f9e80;
	Node0x19f85e8 -> Node0x19f9e80;
	Node0x19f9be0 -> Node0x19f9ef0;
	Node0x19f9ef0 -> Node0x19f9f60;
	Node0x19f85e8 -> Node0x19f9fd0;
	Node0x19f9fd0 -> Node0x19fa040;
	Node0x19f9558 -> Node0x19fa040;
	Node0x19f9e10 -> Node0x19fa0b0;
	Node0x19f9da0 -> Node0x19fa120;
	Node0x19fa040 -> Node0x19fa120;
	Node0x19fa120 -> Node0x19fa190;
	Node0x19f9da0 -> Node0x19fa200;
	Node0x19fa200 -> Node0x19fa270;
	Node0x19f9e10 -> Node0x19fa270;
	Node0x19fa270 -> Node0x19fa2e0;
	Node0x19f9e80 -> Node0x19fa2e0;
	Node0x19fa2e0 -> Node0x19fa350;
	Node0x19f9f60 -> Node0x19fa350;
	Node0x19fa350 -> Node0x19fa3c0;
	Node0x19fa0b0 -> Node0x19fa3c0;
	Node0x19fa3c0 -> Node0x19fa430;
	Node0x19fa190 -> Node0x19fa430;
	Node0x19f9cc0 -> Node0x19fa4a0;
	Node0x19fa430 -> Node0x19fa4a0;
	Node0x19fa4a0 -> Node0x19989d8;
	Node0x19989d8 -> Node0x19fa530;
	Node0x19f81d8 -> Node0x19fa788;
	Node0x19f7c98 -> Node0x19fa8e8;
}
