digraph "DFG for'main' function" {
	Node0xd2f948[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd2f9c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd2fa58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xd2fab8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xd2ff38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd30018[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xd30118[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd301d8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xd30288[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd304e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xd305a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd30708[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd30768[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xd33cf0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xd33ef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd34058[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd34168[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd34228[shape=record, label="  ret i32 0"];
	Node0xd2f948 -> Node0xd2f9c8;
	Node0xd2f9c8 -> Node0xd2fa58;
	Node0xd2fa58 -> Node0xd2fab8;
	Node0xd2fab8 -> Node0xd2ff38;
	Node0xd2ff38 -> Node0xd30018;
	Node0xd30018 -> Node0xd30118;
	Node0xd30118 -> Node0xd301d8;
	Node0xd301d8 -> Node0xd30288;
	Node0xd30288 -> Node0xd304e8;
	Node0xd304e8 -> Node0xd305a8;
	Node0xd305a8 -> Node0xd30708;
	Node0xd30708 -> Node0xd30768;
	Node0xd30768 -> Node0xd33cf0;
	Node0xd33cf0 -> Node0xd33ef8;
	Node0xd33ef8 -> Node0xd34058;
	Node0xd34058 -> Node0xd34168;
	Node0xd34168 -> Node0xd34228;
edge [color=red]
	Node0xd2f948 -> Node0xd2fab8;
	Node0xd2fab8 -> Node0xd2ff38;
	Node0xd2f9c8 -> Node0xd30018;
	Node0xd30018 -> Node0xd30118;
	Node0xd2fa58 -> Node0xd301d8;
	Node0xd301d8 -> Node0xd30288;
	Node0xd2f948 -> Node0xd304e8;
	Node0xd2f9c8 -> Node0xd304e8;
	Node0xd2fa58 -> Node0xd304e8;
	Node0xd2f948 -> Node0xd305a8;
	Node0xd2f9c8 -> Node0xd30708;
	Node0xd2fa58 -> Node0xd30768;
	Node0xd305a8 -> Node0xd33cf0;
	Node0xd30708 -> Node0xd33cf0;
	Node0xd30768 -> Node0xd33cf0;
	Node0xd301d8 -> Node0xd33ef8;
	Node0xd30018 -> Node0xd34058;
	Node0xd2fab8 -> Node0xd34168;
}
