digraph "DFG for'crackme' function" {
	Node0xbc69d0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0xbc6a40[shape=record, label="  %6 = xor i32 %3, %0"];
	Node0xbc6ab0[shape=record, label="  %7 = add i32 %6, %5"];
	Node0xbc7130[shape=record, label="  %8 = sub i32 0, %7"];
	Node0xbc71a0[shape=record, label="  %9 = xor i32 %2, %1"];
	Node0xbc7240[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0xbc72b0[shape=record, label="  %11 = and i32 %2, %1"];
	Node0xbc7320[shape=record, label="  %12 = shl i32 %5, 1"];
	Node0xbc73c0[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0xbc7460[shape=record, label="  %14 = xor i32 %2, 1073741823"];
	Node0xbc74d0[shape=record, label="  %15 = and i32 %14, %1"];
	Node0xbc7570[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0xbc75e0[shape=record, label="  %17 = or i32 %3, %0"];
	Node0xbc7650[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0xbc76f0[shape=record, label="  %19 = xor i32 %0, -1"];
	Node0xbc7760[shape=record, label="  %20 = and i32 %19, %3"];
	Node0xbc77d0[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0xbc7840[shape=record, label="  %22 = xor i32 %18, -2"];
	Node0xbc78e0[shape=record, label="  %23 = mul i32 %2, -5"];
	Node0xbc7980[shape=record, label="  %24 = sub i32 -3, %0"];
	Node0xbc79f0[shape=record, label="  %25 = add i32 %24, %2"];
	Node0xbc7a60[shape=record, label="  %26 = sub i32 %25, %9"];
	Node0xbc7ad0[shape=record, label="  %27 = add i32 %26, %11"];
	Node0xbc7b40[shape=record, label="  %28 = add i32 %27, %3"];
	Node0xbc7bb0[shape=record, label="  %29 = add i32 %28, %10"];
	Node0xbc7c20[shape=record, label="  %30 = add i32 %29, %21"];
	Node0xbc7c90[shape=record, label="  %31 = sub i32 %30, %20"];
	Node0xbc7d00[shape=record, label="  %32 = sub i32 %31, %13"];
	Node0xbc7f80[shape=record, label="  %33 = sub i32 %32, %16"];
	Node0xbc7ff0[shape=record, label="  %34 = sub i32 %33, %18"];
	Node0xbc8060[shape=record, label="  %35 = add i32 %34, %23"];
	Node0xbc80d0[shape=record, label="  %36 = sub i32 %35, %22"];
	Node0xbc8140[shape=record, label="  %37 = icmp eq i32 %36, %8"];
	Node0xb67268[shape=record, label="  %38 = select i1 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xbc85e0[shape=record, label="  %39 = tail call i32 @puts(i8* nonnull dereferenceable(1) %38)"];
	Node0xbc8630[shape=record, label="  ret void"];
	Node0xbc69d0 -> Node0xbc6a40;
	Node0xbc6a40 -> Node0xbc6ab0;
	Node0xbc6ab0 -> Node0xbc7130;
	Node0xbc7130 -> Node0xbc71a0;
	Node0xbc71a0 -> Node0xbc7240;
	Node0xbc7240 -> Node0xbc72b0;
	Node0xbc72b0 -> Node0xbc7320;
	Node0xbc7320 -> Node0xbc73c0;
	Node0xbc73c0 -> Node0xbc7460;
	Node0xbc7460 -> Node0xbc74d0;
	Node0xbc74d0 -> Node0xbc7570;
	Node0xbc7570 -> Node0xbc75e0;
	Node0xbc75e0 -> Node0xbc7650;
	Node0xbc7650 -> Node0xbc76f0;
	Node0xbc76f0 -> Node0xbc7760;
	Node0xbc7760 -> Node0xbc77d0;
	Node0xbc77d0 -> Node0xbc7840;
	Node0xbc7840 -> Node0xbc78e0;
	Node0xbc78e0 -> Node0xbc7980;
	Node0xbc7980 -> Node0xbc79f0;
	Node0xbc79f0 -> Node0xbc7a60;
	Node0xbc7a60 -> Node0xbc7ad0;
	Node0xbc7ad0 -> Node0xbc7b40;
	Node0xbc7b40 -> Node0xbc7bb0;
	Node0xbc7bb0 -> Node0xbc7c20;
	Node0xbc7c20 -> Node0xbc7c90;
	Node0xbc7c90 -> Node0xbc7d00;
	Node0xbc7d00 -> Node0xbc7f80;
	Node0xbc7f80 -> Node0xbc7ff0;
	Node0xbc7ff0 -> Node0xbc8060;
	Node0xbc8060 -> Node0xbc80d0;
	Node0xbc80d0 -> Node0xbc8140;
	Node0xbc8140 -> Node0xb67268;
	Node0xb67268 -> Node0xbc85e0;
	Node0xbc85e0 -> Node0xbc8630;
edge [color=red]
	Node0xbc6a40 -> Node0xbc6ab0;
	Node0xbc69d0 -> Node0xbc6ab0;
	Node0xbc6ab0 -> Node0xbc7130;
	Node0xbc71a0 -> Node0xbc7240;
	Node0xbc69d0 -> Node0xbc7320;
	Node0xbc7320 -> Node0xbc73c0;
	Node0xbc7460 -> Node0xbc74d0;
	Node0xbc74d0 -> Node0xbc7570;
	Node0xbc75e0 -> Node0xbc7650;
	Node0xbc76f0 -> Node0xbc7760;
	Node0xbc7760 -> Node0xbc77d0;
	Node0xbc7650 -> Node0xbc7840;
	Node0xbc7980 -> Node0xbc79f0;
	Node0xbc79f0 -> Node0xbc7a60;
	Node0xbc71a0 -> Node0xbc7a60;
	Node0xbc7a60 -> Node0xbc7ad0;
	Node0xbc72b0 -> Node0xbc7ad0;
	Node0xbc7ad0 -> Node0xbc7b40;
	Node0xbc7b40 -> Node0xbc7bb0;
	Node0xbc7240 -> Node0xbc7bb0;
	Node0xbc7bb0 -> Node0xbc7c20;
	Node0xbc77d0 -> Node0xbc7c20;
	Node0xbc7c20 -> Node0xbc7c90;
	Node0xbc7760 -> Node0xbc7c90;
	Node0xbc7c90 -> Node0xbc7d00;
	Node0xbc73c0 -> Node0xbc7d00;
	Node0xbc7d00 -> Node0xbc7f80;
	Node0xbc7570 -> Node0xbc7f80;
	Node0xbc7f80 -> Node0xbc7ff0;
	Node0xbc7650 -> Node0xbc7ff0;
	Node0xbc7ff0 -> Node0xbc8060;
	Node0xbc78e0 -> Node0xbc8060;
	Node0xbc8060 -> Node0xbc80d0;
	Node0xbc7840 -> Node0xbc80d0;
	Node0xbc80d0 -> Node0xbc8140;
	Node0xbc7130 -> Node0xbc8140;
	Node0xbc8140 -> Node0xb67268;
	Node0xb67268 -> Node0xbc85e0;
}
