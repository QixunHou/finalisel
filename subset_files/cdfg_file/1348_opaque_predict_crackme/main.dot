digraph "DFG for'main' function" {
	Node0xbc87f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xbc8878[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xbc8908[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xbc8968[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xbc8a18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xbc8e48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xbc8f28[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xbc9028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xbc90e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xbc9198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xbc9258[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xbc9308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xbc3a00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xbc9508[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xbca478[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xbcaae8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xbcab48[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xbcabc0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0xbcac30[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0xbcaca0[shape=record, label="  %16 = add i32 %14, %15"];
	Node0xbcad10[shape=record, label="  %17 = sub i32 0, %16"];
	Node0xbcad80[shape=record, label="  %18 = xor i32 %12, %11"];
	Node0xbcadf0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0xbcae60[shape=record, label="  %20 = and i32 %12, %11"];
	Node0xbcaed0[shape=record, label="  %21 = shl i32 %14, 1"];
	Node0xbcaf40[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0xbcafb0[shape=record, label="  %23 = xor i32 %12, 1073741823"];
	Node0xbcb020[shape=record, label="  %24 = and i32 %23, %11"];
	Node0xbcb090[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0xbcb100[shape=record, label="  %26 = or i32 %13, %10"];
	Node0xbcb170[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0xbcb1e0[shape=record, label="  %28 = xor i32 %10, -1"];
	Node0xbcb250[shape=record, label="  %29 = and i32 %13, %28"];
	Node0xbcb2c0[shape=record, label="  %30 = xor i32 %29, -1"];
	Node0xbcb330[shape=record, label="  %31 = xor i32 %27, -2"];
	Node0xbcb3a0[shape=record, label="  %32 = mul i32 %12, -5"];
	Node0xbcb410[shape=record, label="  %33 = sub i32 -3, %10"];
	Node0xbcb480[shape=record, label="  %34 = add i32 %33, %12"];
	Node0xbcb4f0[shape=record, label="  %35 = sub i32 %34, %18"];
	Node0xbcb560[shape=record, label="  %36 = add i32 %35, %20"];
	Node0xbcb5d0[shape=record, label="  %37 = add i32 %36, %13"];
	Node0xbcb640[shape=record, label="  %38 = add i32 %37, %32"];
	Node0xbcb6b0[shape=record, label="  %39 = add i32 %38, %19"];
	Node0xbcb720[shape=record, label="  %40 = add i32 %39, %30"];
	Node0xbcb790[shape=record, label="  %41 = sub i32 %40, %29"];
	Node0xbcb800[shape=record, label="  %42 = sub i32 %41, %22"];
	Node0xbcb870[shape=record, label="  %43 = sub i32 %42, %25"];
	Node0xbcb8e0[shape=record, label="  %44 = sub i32 %43, %27"];
	Node0xbcb950[shape=record, label="  %45 = sub i32 %44, %31"];
	Node0xbcb9c0[shape=record, label="  %46 = icmp eq i32 %45, %17"];
	Node0xb688b8[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xbcba50[shape=record, label="  %48 = call i32 @puts(i8* nonnull dereferenceable(1) %47) #5"];
	Node0xbcbcf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xbcbe58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xbcbf68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xbcc078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xbcc138[shape=record, label="  ret i32 0"];
	Node0xbc87f8 -> Node0xbc8878;
	Node0xbc8878 -> Node0xbc8908;
	Node0xbc8908 -> Node0xbc8968;
	Node0xbc8968 -> Node0xbc8a18;
	Node0xbc8a18 -> Node0xbc8e48;
	Node0xbc8e48 -> Node0xbc8f28;
	Node0xbc8f28 -> Node0xbc9028;
	Node0xbc9028 -> Node0xbc90e8;
	Node0xbc90e8 -> Node0xbc9198;
	Node0xbc9198 -> Node0xbc9258;
	Node0xbc9258 -> Node0xbc9308;
	Node0xbc9308 -> Node0xbc3a00;
	Node0xbc3a00 -> Node0xbc9508;
	Node0xbc9508 -> Node0xbca478;
	Node0xbca478 -> Node0xbcaae8;
	Node0xbcaae8 -> Node0xbcab48;
	Node0xbcab48 -> Node0xbcabc0;
	Node0xbcabc0 -> Node0xbcac30;
	Node0xbcac30 -> Node0xbcaca0;
	Node0xbcaca0 -> Node0xbcad10;
	Node0xbcad10 -> Node0xbcad80;
	Node0xbcad80 -> Node0xbcadf0;
	Node0xbcadf0 -> Node0xbcae60;
	Node0xbcae60 -> Node0xbcaed0;
	Node0xbcaed0 -> Node0xbcaf40;
	Node0xbcaf40 -> Node0xbcafb0;
	Node0xbcafb0 -> Node0xbcb020;
	Node0xbcb020 -> Node0xbcb090;
	Node0xbcb090 -> Node0xbcb100;
	Node0xbcb100 -> Node0xbcb170;
	Node0xbcb170 -> Node0xbcb1e0;
	Node0xbcb1e0 -> Node0xbcb250;
	Node0xbcb250 -> Node0xbcb2c0;
	Node0xbcb2c0 -> Node0xbcb330;
	Node0xbcb330 -> Node0xbcb3a0;
	Node0xbcb3a0 -> Node0xbcb410;
	Node0xbcb410 -> Node0xbcb480;
	Node0xbcb480 -> Node0xbcb4f0;
	Node0xbcb4f0 -> Node0xbcb560;
	Node0xbcb560 -> Node0xbcb5d0;
	Node0xbcb5d0 -> Node0xbcb640;
	Node0xbcb640 -> Node0xbcb6b0;
	Node0xbcb6b0 -> Node0xbcb720;
	Node0xbcb720 -> Node0xbcb790;
	Node0xbcb790 -> Node0xbcb800;
	Node0xbcb800 -> Node0xbcb870;
	Node0xbcb870 -> Node0xbcb8e0;
	Node0xbcb8e0 -> Node0xbcb950;
	Node0xbcb950 -> Node0xbcb9c0;
	Node0xbcb9c0 -> Node0xb688b8;
	Node0xb688b8 -> Node0xbcba50;
	Node0xbcba50 -> Node0xbcbcf8;
	Node0xbcbcf8 -> Node0xbcbe58;
	Node0xbcbe58 -> Node0xbcbf68;
	Node0xbcbf68 -> Node0xbcc078;
	Node0xbcc078 -> Node0xbcc138;
edge [color=red]
	Node0xbc87f8 -> Node0xbc8a18;
	Node0xbc8a18 -> Node0xbc8e48;
	Node0xbc8878 -> Node0xbc8f28;
	Node0xbc8f28 -> Node0xbc9028;
	Node0xbc8908 -> Node0xbc90e8;
	Node0xbc90e8 -> Node0xbc9198;
	Node0xbc8968 -> Node0xbc9258;
	Node0xbc9258 -> Node0xbc9308;
	Node0xbc87f8 -> Node0xbc3a00;
	Node0xbc8878 -> Node0xbc3a00;
	Node0xbc8908 -> Node0xbc3a00;
	Node0xbc8968 -> Node0xbc3a00;
	Node0xbc87f8 -> Node0xbc9508;
	Node0xbc8878 -> Node0xbca478;
	Node0xbc8908 -> Node0xbcaae8;
	Node0xbc8968 -> Node0xbcab48;
	Node0xbcaae8 -> Node0xbcabc0;
	Node0xbca478 -> Node0xbcabc0;
	Node0xbcab48 -> Node0xbcac30;
	Node0xbc9508 -> Node0xbcac30;
	Node0xbcabc0 -> Node0xbcaca0;
	Node0xbcac30 -> Node0xbcaca0;
	Node0xbcaca0 -> Node0xbcad10;
	Node0xbcaae8 -> Node0xbcad80;
	Node0xbca478 -> Node0xbcad80;
	Node0xbcad80 -> Node0xbcadf0;
	Node0xbcaae8 -> Node0xbcae60;
	Node0xbca478 -> Node0xbcae60;
	Node0xbcabc0 -> Node0xbcaed0;
	Node0xbcaed0 -> Node0xbcaf40;
	Node0xbcaae8 -> Node0xbcafb0;
	Node0xbcafb0 -> Node0xbcb020;
	Node0xbca478 -> Node0xbcb020;
	Node0xbcb020 -> Node0xbcb090;
	Node0xbcab48 -> Node0xbcb100;
	Node0xbc9508 -> Node0xbcb100;
	Node0xbcb100 -> Node0xbcb170;
	Node0xbc9508 -> Node0xbcb1e0;
	Node0xbcab48 -> Node0xbcb250;
	Node0xbcb1e0 -> Node0xbcb250;
	Node0xbcb250 -> Node0xbcb2c0;
	Node0xbcb170 -> Node0xbcb330;
	Node0xbcaae8 -> Node0xbcb3a0;
	Node0xbc9508 -> Node0xbcb410;
	Node0xbcb410 -> Node0xbcb480;
	Node0xbcaae8 -> Node0xbcb480;
	Node0xbcb480 -> Node0xbcb4f0;
	Node0xbcad80 -> Node0xbcb4f0;
	Node0xbcb4f0 -> Node0xbcb560;
	Node0xbcae60 -> Node0xbcb560;
	Node0xbcb560 -> Node0xbcb5d0;
	Node0xbcab48 -> Node0xbcb5d0;
	Node0xbcb5d0 -> Node0xbcb640;
	Node0xbcb3a0 -> Node0xbcb640;
	Node0xbcb640 -> Node0xbcb6b0;
	Node0xbcadf0 -> Node0xbcb6b0;
	Node0xbcb6b0 -> Node0xbcb720;
	Node0xbcb2c0 -> Node0xbcb720;
	Node0xbcb720 -> Node0xbcb790;
	Node0xbcb250 -> Node0xbcb790;
	Node0xbcb790 -> Node0xbcb800;
	Node0xbcaf40 -> Node0xbcb800;
	Node0xbcb800 -> Node0xbcb870;
	Node0xbcb090 -> Node0xbcb870;
	Node0xbcb870 -> Node0xbcb8e0;
	Node0xbcb170 -> Node0xbcb8e0;
	Node0xbcb8e0 -> Node0xbcb950;
	Node0xbcb330 -> Node0xbcb950;
	Node0xbcb950 -> Node0xbcb9c0;
	Node0xbcad10 -> Node0xbcb9c0;
	Node0xbcb9c0 -> Node0xb688b8;
	Node0xb688b8 -> Node0xbcba50;
	Node0xbc9258 -> Node0xbcbcf8;
	Node0xbc90e8 -> Node0xbcbe58;
	Node0xbc8f28 -> Node0xbcbf68;
	Node0xbc8a18 -> Node0xbcc078;
}
