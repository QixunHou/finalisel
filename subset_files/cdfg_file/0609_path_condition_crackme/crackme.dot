digraph "DFG for'crackme' function" {
	Node0x12c51a0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x12c5210[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x12c52b0[shape=record, label="  %7 = add i32 %6, 1"];
	Node0x12c5320[shape=record, label="  %8 = xor i32 %3, %0"];
	Node0x12c5390[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x12c5430[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x12c54a0[shape=record, label="  %11 = add i32 %7, %10"];
	Node0x12c5510[shape=record, label="  %12 = or i32 %2, %1"];
	Node0x12c5580[shape=record, label="  %13 = add i32 %2, 1"];
	Node0x12c55f0[shape=record, label="  %14 = xor i32 %1, -1"];
	Node0x12c5660[shape=record, label="  %15 = xor i32 %2, %1"];
	Node0x12c56d0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x12c5740[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0x12c57b0[shape=record, label="  %18 = and i32 %14, %2"];
	Node0x12c5850[shape=record, label="  %19 = mul i32 %18, 6"];
	Node0x12c58f0[shape=record, label="  %20 = mul i32 %6, 9"];
	Node0x12c5960[shape=record, label="  %21 = and i32 %2, %1"];
	Node0x12c5a00[shape=record, label="  %22 = mul i32 %21, 5"];
	Node0x12c5a70[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x12c5b10[shape=record, label="  %24 = xor i32 %0, 2147483647"];
	Node0x12c5b80[shape=record, label="  %25 = or i32 %24, %3"];
	Node0x12c5bf0[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x12c5c60[shape=record, label="  %27 = xor i32 %3, -1"];
	Node0x12c5cd0[shape=record, label="  %28 = or i32 %27, %0"];
	Node0x12c5d40[shape=record, label="  %29 = xor i32 %26, -1"];
	Node0x12c5db0[shape=record, label="  %30 = add i32 %29, %17"];
	Node0x12c5e50[shape=record, label="  %31 = mul i32 %30, 3"];
	Node0x12c5ec0[shape=record, label="  %32 = sub i32 %25, %12"];
	Node0x12c6140[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x12c61e0[shape=record, label="  %34 = add i32 %0, 8"];
	Node0x12c6250[shape=record, label="  %35 = add i32 %34, %14"];
	Node0x12c62c0[shape=record, label="  %36 = add i32 %35, %13"];
	Node0x12c6330[shape=record, label="  %37 = sub i32 %36, %16"];
	Node0x12c63a0[shape=record, label="  %38 = add i32 %37, %19"];
	Node0x12c6410[shape=record, label="  %39 = add i32 %38, %20"];
	Node0x12c6480[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x12c64f0[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x12c6560[shape=record, label="  %42 = add i32 %41, %26"];
	Node0x12c65d0[shape=record, label="  %43 = add i32 %42, %8"];
	Node0x12c6640[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x12c66b0[shape=record, label="  %45 = add i32 %44, %31"];
	Node0x12c6720[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x12c6790[shape=record, label="  %47 = icmp eq i32 %11, %46"];
	Node0x1265268[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x12c6c30[shape=record, label="  %49 = tail call i32 @puts(i8* nonnull dereferenceable(1) %48)"];
	Node0x12c6c80[shape=record, label="  ret void"];
	Node0x12c51a0 -> Node0x12c5210;
	Node0x12c5210 -> Node0x12c52b0;
	Node0x12c52b0 -> Node0x12c5320;
	Node0x12c5320 -> Node0x12c5390;
	Node0x12c5390 -> Node0x12c5430;
	Node0x12c5430 -> Node0x12c54a0;
	Node0x12c54a0 -> Node0x12c5510;
	Node0x12c5510 -> Node0x12c5580;
	Node0x12c5580 -> Node0x12c55f0;
	Node0x12c55f0 -> Node0x12c5660;
	Node0x12c5660 -> Node0x12c56d0;
	Node0x12c56d0 -> Node0x12c5740;
	Node0x12c5740 -> Node0x12c57b0;
	Node0x12c57b0 -> Node0x12c5850;
	Node0x12c5850 -> Node0x12c58f0;
	Node0x12c58f0 -> Node0x12c5960;
	Node0x12c5960 -> Node0x12c5a00;
	Node0x12c5a00 -> Node0x12c5a70;
	Node0x12c5a70 -> Node0x12c5b10;
	Node0x12c5b10 -> Node0x12c5b80;
	Node0x12c5b80 -> Node0x12c5bf0;
	Node0x12c5bf0 -> Node0x12c5c60;
	Node0x12c5c60 -> Node0x12c5cd0;
	Node0x12c5cd0 -> Node0x12c5d40;
	Node0x12c5d40 -> Node0x12c5db0;
	Node0x12c5db0 -> Node0x12c5e50;
	Node0x12c5e50 -> Node0x12c5ec0;
	Node0x12c5ec0 -> Node0x12c6140;
	Node0x12c6140 -> Node0x12c61e0;
	Node0x12c61e0 -> Node0x12c6250;
	Node0x12c6250 -> Node0x12c62c0;
	Node0x12c62c0 -> Node0x12c6330;
	Node0x12c6330 -> Node0x12c63a0;
	Node0x12c63a0 -> Node0x12c6410;
	Node0x12c6410 -> Node0x12c6480;
	Node0x12c6480 -> Node0x12c64f0;
	Node0x12c64f0 -> Node0x12c6560;
	Node0x12c6560 -> Node0x12c65d0;
	Node0x12c65d0 -> Node0x12c6640;
	Node0x12c6640 -> Node0x12c66b0;
	Node0x12c66b0 -> Node0x12c6720;
	Node0x12c6720 -> Node0x12c6790;
	Node0x12c6790 -> Node0x1265268;
	Node0x1265268 -> Node0x12c6c30;
	Node0x12c6c30 -> Node0x12c6c80;
edge [color=red]
	Node0x12c51a0 -> Node0x12c5210;
	Node0x12c5210 -> Node0x12c52b0;
	Node0x12c5320 -> Node0x12c5390;
	Node0x12c5390 -> Node0x12c5430;
	Node0x12c52b0 -> Node0x12c54a0;
	Node0x12c5430 -> Node0x12c54a0;
	Node0x12c5660 -> Node0x12c56d0;
	Node0x12c5510 -> Node0x12c5740;
	Node0x12c55f0 -> Node0x12c57b0;
	Node0x12c57b0 -> Node0x12c5850;
	Node0x12c5210 -> Node0x12c58f0;
	Node0x12c5960 -> Node0x12c5a00;
	Node0x12c5b10 -> Node0x12c5b80;
	Node0x12c5c60 -> Node0x12c5cd0;
	Node0x12c5bf0 -> Node0x12c5d40;
	Node0x12c5d40 -> Node0x12c5db0;
	Node0x12c5740 -> Node0x12c5db0;
	Node0x12c5db0 -> Node0x12c5e50;
	Node0x12c5b80 -> Node0x12c5ec0;
	Node0x12c5510 -> Node0x12c5ec0;
	Node0x12c5ec0 -> Node0x12c6140;
	Node0x12c61e0 -> Node0x12c6250;
	Node0x12c55f0 -> Node0x12c6250;
	Node0x12c6250 -> Node0x12c62c0;
	Node0x12c5580 -> Node0x12c62c0;
	Node0x12c62c0 -> Node0x12c6330;
	Node0x12c56d0 -> Node0x12c6330;
	Node0x12c6330 -> Node0x12c63a0;
	Node0x12c5850 -> Node0x12c63a0;
	Node0x12c63a0 -> Node0x12c6410;
	Node0x12c58f0 -> Node0x12c6410;
	Node0x12c6410 -> Node0x12c6480;
	Node0x12c5a00 -> Node0x12c6480;
	Node0x12c6480 -> Node0x12c64f0;
	Node0x12c5a70 -> Node0x12c64f0;
	Node0x12c64f0 -> Node0x12c6560;
	Node0x12c5bf0 -> Node0x12c6560;
	Node0x12c6560 -> Node0x12c65d0;
	Node0x12c5320 -> Node0x12c65d0;
	Node0x12c65d0 -> Node0x12c6640;
	Node0x12c5cd0 -> Node0x12c6640;
	Node0x12c6640 -> Node0x12c66b0;
	Node0x12c5e50 -> Node0x12c66b0;
	Node0x12c66b0 -> Node0x12c6720;
	Node0x12c6140 -> Node0x12c6720;
	Node0x12c54a0 -> Node0x12c6790;
	Node0x12c6720 -> Node0x12c6790;
	Node0x12c6790 -> Node0x1265268;
	Node0x1265268 -> Node0x12c6c30;
}
