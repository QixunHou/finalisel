digraph "DFG for'crackme' function" {
	Node0xc41a40[shape=record, label="  %5 = or i32 %2, %1"];
	Node0xc420c0[shape=record, label="  %6 = mul i32 %5, -2"];
	Node0xc42130[shape=record, label="  %7 = and i32 %3, %0"];
	Node0xc421d0[shape=record, label="  %8 = or i32 %6, 1"];
	Node0xc42240[shape=record, label="  %9 = add i32 %8, %7"];
	Node0xc422e0[shape=record, label="  %10 = xor i32 %0, -1"];
	Node0xc42350[shape=record, label="  %11 = or i32 %10, %3"];
	Node0xc423c0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0xc42430[shape=record, label="  %13 = sub i32 %9, %12"];
	Node0xc424a0[shape=record, label="  %14 = xor i32 %2, -1"];
	Node0xc42510[shape=record, label="  %15 = or i32 %14, %1"];
	Node0xc42580[shape=record, label="  %16 = and i32 %2, %1"];
	Node0xc425f0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0xc42660[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0xc426d0[shape=record, label="  %19 = shl i32 %14, 1"];
	Node0xc42740[shape=record, label="  %20 = and i32 %14, %1"];
	Node0xc427e0[shape=record, label="  %21 = shl i32 %20, 2"];
	Node0xc42850[shape=record, label="  %22 = xor i32 %10, %3"];
	Node0xc428c0[shape=record, label="  %23 = or i32 %3, %0"];
	Node0xc42930[shape=record, label="  %24 = shl i32 %23, 2"];
	Node0xc429d0[shape=record, label="  %25 = xor i32 %24, -4"];
	Node0xc42a40[shape=record, label="  %26 = and i32 %10, %3"];
	Node0xc42ab0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0xc42b50[shape=record, label="  %28 = sub i32 5, %0"];
	Node0xc42bc0[shape=record, label="  %29 = add i32 %28, %1"];
	Node0xc42c30[shape=record, label="  %30 = add i32 %29, %15"];
	Node0xc42ca0[shape=record, label="  %31 = add i32 %30, %19"];
	Node0xc42d10[shape=record, label="  %32 = add i32 %31, %5"];
	Node0xc42f90[shape=record, label="  %33 = sub i32 %32, %3"];
	Node0xc43000[shape=record, label="  %34 = sub i32 %33, %21"];
	Node0xc43070[shape=record, label="  %35 = add i32 %34, %22"];
	Node0xc430e0[shape=record, label="  %36 = sub i32 %35, %7"];
	Node0xc43150[shape=record, label="  %37 = add i32 %36, %18"];
	Node0xc431c0[shape=record, label="  %38 = sub i32 %37, %27"];
	Node0xc43230[shape=record, label="  %39 = sub i32 %38, %25"];
	Node0xc432a0[shape=record, label="  %40 = icmp eq i32 %13, %39"];
	Node0xbe2268[shape=record, label="  %41 = select i1 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc43740[shape=record, label="  %42 = tail call i32 @puts(i8* nonnull dereferenceable(1) %41)"];
	Node0xc43790[shape=record, label="  ret void"];
	Node0xc41a40 -> Node0xc420c0;
	Node0xc420c0 -> Node0xc42130;
	Node0xc42130 -> Node0xc421d0;
	Node0xc421d0 -> Node0xc42240;
	Node0xc42240 -> Node0xc422e0;
	Node0xc422e0 -> Node0xc42350;
	Node0xc42350 -> Node0xc423c0;
	Node0xc423c0 -> Node0xc42430;
	Node0xc42430 -> Node0xc424a0;
	Node0xc424a0 -> Node0xc42510;
	Node0xc42510 -> Node0xc42580;
	Node0xc42580 -> Node0xc425f0;
	Node0xc425f0 -> Node0xc42660;
	Node0xc42660 -> Node0xc426d0;
	Node0xc426d0 -> Node0xc42740;
	Node0xc42740 -> Node0xc427e0;
	Node0xc427e0 -> Node0xc42850;
	Node0xc42850 -> Node0xc428c0;
	Node0xc428c0 -> Node0xc42930;
	Node0xc42930 -> Node0xc429d0;
	Node0xc429d0 -> Node0xc42a40;
	Node0xc42a40 -> Node0xc42ab0;
	Node0xc42ab0 -> Node0xc42b50;
	Node0xc42b50 -> Node0xc42bc0;
	Node0xc42bc0 -> Node0xc42c30;
	Node0xc42c30 -> Node0xc42ca0;
	Node0xc42ca0 -> Node0xc42d10;
	Node0xc42d10 -> Node0xc42f90;
	Node0xc42f90 -> Node0xc43000;
	Node0xc43000 -> Node0xc43070;
	Node0xc43070 -> Node0xc430e0;
	Node0xc430e0 -> Node0xc43150;
	Node0xc43150 -> Node0xc431c0;
	Node0xc431c0 -> Node0xc43230;
	Node0xc43230 -> Node0xc432a0;
	Node0xc432a0 -> Node0xbe2268;
	Node0xbe2268 -> Node0xc43740;
	Node0xc43740 -> Node0xc43790;
edge [color=red]
	Node0xc41a40 -> Node0xc420c0;
	Node0xc420c0 -> Node0xc421d0;
	Node0xc421d0 -> Node0xc42240;
	Node0xc42130 -> Node0xc42240;
	Node0xc422e0 -> Node0xc42350;
	Node0xc42350 -> Node0xc423c0;
	Node0xc42240 -> Node0xc42430;
	Node0xc423c0 -> Node0xc42430;
	Node0xc424a0 -> Node0xc42510;
	Node0xc42580 -> Node0xc425f0;
	Node0xc425f0 -> Node0xc42660;
	Node0xc424a0 -> Node0xc426d0;
	Node0xc424a0 -> Node0xc42740;
	Node0xc42740 -> Node0xc427e0;
	Node0xc422e0 -> Node0xc42850;
	Node0xc428c0 -> Node0xc42930;
	Node0xc42930 -> Node0xc429d0;
	Node0xc422e0 -> Node0xc42a40;
	Node0xc42a40 -> Node0xc42ab0;
	Node0xc42b50 -> Node0xc42bc0;
	Node0xc42bc0 -> Node0xc42c30;
	Node0xc42510 -> Node0xc42c30;
	Node0xc42c30 -> Node0xc42ca0;
	Node0xc426d0 -> Node0xc42ca0;
	Node0xc42ca0 -> Node0xc42d10;
	Node0xc41a40 -> Node0xc42d10;
	Node0xc42d10 -> Node0xc42f90;
	Node0xc42f90 -> Node0xc43000;
	Node0xc427e0 -> Node0xc43000;
	Node0xc43000 -> Node0xc43070;
	Node0xc42850 -> Node0xc43070;
	Node0xc43070 -> Node0xc430e0;
	Node0xc42130 -> Node0xc430e0;
	Node0xc430e0 -> Node0xc43150;
	Node0xc42660 -> Node0xc43150;
	Node0xc43150 -> Node0xc431c0;
	Node0xc42ab0 -> Node0xc431c0;
	Node0xc431c0 -> Node0xc43230;
	Node0xc429d0 -> Node0xc43230;
	Node0xc42430 -> Node0xc432a0;
	Node0xc43230 -> Node0xc432a0;
	Node0xc432a0 -> Node0xbe2268;
	Node0xbe2268 -> Node0xc43740;
}
