digraph "DFG for'main' function" {
	Node0x2106fc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2107048[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21070d8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x2107538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2107618[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x2107738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2107970[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x2107a28[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2108998[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2109020[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x2109090[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x2109100[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x2109170[shape=record, label="  %11 = add i32 %7, 1"];
	Node0x21091e0[shape=record, label="  %12 = and i32 %6, %10"];
	Node0x2109250[shape=record, label="  %13 = shl i32 %12, 2"];
	Node0x21092c0[shape=record, label="  %14 = xor i32 %13, -4"];
	Node0x2109330[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x21093a0[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x2109410[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x2109480[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x21094f0[shape=record, label="  %19 = xor i32 %8, -1"];
	Node0x2109560[shape=record, label="  %20 = mul i32 %19, 12"];
	Node0x21095d0[shape=record, label="  %21 = xor i32 %6, -1"];
	Node0x2109640[shape=record, label="  %22 = and i32 %7, %21"];
	Node0x21096b0[shape=record, label="  %23 = mul i32 %12, 6"];
	Node0x2109720[shape=record, label="  %24 = shl i32 %16, 2"];
	Node0x2109790[shape=record, label="  %25 = add i32 %11, %22"];
	Node0x2109800[shape=record, label="  %26 = mul i32 %25, 5"];
	Node0x2109870[shape=record, label="  %27 = add i32 %15, 1"];
	Node0x21098e0[shape=record, label="  %28 = add i32 %27, %20"];
	Node0x2109950[shape=record, label="  %29 = add i32 %28, %23"];
	Node0x21099c0[shape=record, label="  %30 = add i32 %29, %24"];
	Node0x2109a30[shape=record, label="  %31 = sub i32 %30, %14"];
	Node0x2109aa0[shape=record, label="  %32 = sub i32 %31, %18"];
	Node0x2109d20[shape=record, label="  %33 = add i32 %32, %26"];
	Node0x2109d90[shape=record, label="  %34 = icmp eq i32 %33, %9"];
	Node0x20a79d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2109e20[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0x210a078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x210a1d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x210a298[shape=record, label="  ret i32 0"];
	Node0x2106fc8 -> Node0x2107048;
	Node0x2107048 -> Node0x21070d8;
	Node0x21070d8 -> Node0x2107538;
	Node0x2107538 -> Node0x2107618;
	Node0x2107618 -> Node0x2107738;
	Node0x2107738 -> Node0x2107970;
	Node0x2107970 -> Node0x2107a28;
	Node0x2107a28 -> Node0x2108998;
	Node0x2108998 -> Node0x2109020;
	Node0x2109020 -> Node0x2109090;
	Node0x2109090 -> Node0x2109100;
	Node0x2109100 -> Node0x2109170;
	Node0x2109170 -> Node0x21091e0;
	Node0x21091e0 -> Node0x2109250;
	Node0x2109250 -> Node0x21092c0;
	Node0x21092c0 -> Node0x2109330;
	Node0x2109330 -> Node0x21093a0;
	Node0x21093a0 -> Node0x2109410;
	Node0x2109410 -> Node0x2109480;
	Node0x2109480 -> Node0x21094f0;
	Node0x21094f0 -> Node0x2109560;
	Node0x2109560 -> Node0x21095d0;
	Node0x21095d0 -> Node0x2109640;
	Node0x2109640 -> Node0x21096b0;
	Node0x21096b0 -> Node0x2109720;
	Node0x2109720 -> Node0x2109790;
	Node0x2109790 -> Node0x2109800;
	Node0x2109800 -> Node0x2109870;
	Node0x2109870 -> Node0x21098e0;
	Node0x21098e0 -> Node0x2109950;
	Node0x2109950 -> Node0x21099c0;
	Node0x21099c0 -> Node0x2109a30;
	Node0x2109a30 -> Node0x2109aa0;
	Node0x2109aa0 -> Node0x2109d20;
	Node0x2109d20 -> Node0x2109d90;
	Node0x2109d90 -> Node0x20a79d8;
	Node0x20a79d8 -> Node0x2109e20;
	Node0x2109e20 -> Node0x210a078;
	Node0x210a078 -> Node0x210a1d8;
	Node0x210a1d8 -> Node0x210a298;
edge [color=red]
	Node0x2106fc8 -> Node0x21070d8;
	Node0x21070d8 -> Node0x2107538;
	Node0x2107048 -> Node0x2107618;
	Node0x2107618 -> Node0x2107738;
	Node0x2106fc8 -> Node0x2107970;
	Node0x2107048 -> Node0x2107970;
	Node0x2106fc8 -> Node0x2107a28;
	Node0x2107048 -> Node0x2108998;
	Node0x2108998 -> Node0x2109020;
	Node0x2107a28 -> Node0x2109020;
	Node0x2109020 -> Node0x2109090;
	Node0x2108998 -> Node0x2109100;
	Node0x2108998 -> Node0x2109170;
	Node0x2107a28 -> Node0x21091e0;
	Node0x2109100 -> Node0x21091e0;
	Node0x21091e0 -> Node0x2109250;
	Node0x2109250 -> Node0x21092c0;
	Node0x2108998 -> Node0x2109330;
	Node0x2107a28 -> Node0x2109330;
	Node0x2108998 -> Node0x21093a0;
	Node0x2107a28 -> Node0x21093a0;
	Node0x21093a0 -> Node0x2109410;
	Node0x2109410 -> Node0x2109480;
	Node0x2109020 -> Node0x21094f0;
	Node0x21094f0 -> Node0x2109560;
	Node0x2107a28 -> Node0x21095d0;
	Node0x2108998 -> Node0x2109640;
	Node0x21095d0 -> Node0x2109640;
	Node0x21091e0 -> Node0x21096b0;
	Node0x21093a0 -> Node0x2109720;
	Node0x2109170 -> Node0x2109790;
	Node0x2109640 -> Node0x2109790;
	Node0x2109790 -> Node0x2109800;
	Node0x2109330 -> Node0x2109870;
	Node0x2109870 -> Node0x21098e0;
	Node0x2109560 -> Node0x21098e0;
	Node0x21098e0 -> Node0x2109950;
	Node0x21096b0 -> Node0x2109950;
	Node0x2109950 -> Node0x21099c0;
	Node0x2109720 -> Node0x21099c0;
	Node0x21099c0 -> Node0x2109a30;
	Node0x21092c0 -> Node0x2109a30;
	Node0x2109a30 -> Node0x2109aa0;
	Node0x2109480 -> Node0x2109aa0;
	Node0x2109aa0 -> Node0x2109d20;
	Node0x2109800 -> Node0x2109d20;
	Node0x2109d20 -> Node0x2109d90;
	Node0x2109090 -> Node0x2109d90;
	Node0x2109d90 -> Node0x20a79d8;
	Node0x20a79d8 -> Node0x2109e20;
	Node0x2107618 -> Node0x210a078;
	Node0x21070d8 -> Node0x210a1d8;
}
