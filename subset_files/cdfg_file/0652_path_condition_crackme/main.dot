digraph "DFG for'main' function" {
	Node0x18f4ef8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x18f4f78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x18f5008[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x18f5468[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x18f5548[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x18f5668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18f58a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x18f5958[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18f68c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x18f6f50[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x18f6fc0[shape=record, label="  %9 = add i32 %8, 1"];
	Node0x18f7030[shape=record, label="  %10 = shl i32 %6, 1"];
	Node0x18f70a0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x18f7110[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x18f7180[shape=record, label="  %13 = and i32 %6, %12"];
	Node0x18f71f0[shape=record, label="  %14 = or i32 %6, %12"];
	Node0x18f7260[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x18f72d0[shape=record, label="  %16 = xor i32 %7, %6"];
	Node0x18f7340[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x18f73b0[shape=record, label="  %18 = shl i32 %16, 2"];
	Node0x18f7420[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0x18f7490[shape=record, label="  %20 = shl i32 %15, 3"];
	Node0x18f7500[shape=record, label="  %21 = xor i32 %20, -8"];
	Node0x18f7570[shape=record, label="  %22 = mul i32 %8, -5"];
	Node0x18f75e0[shape=record, label="  %23 = shl i32 %14, 1"];
	Node0x18f7650[shape=record, label="  %24 = add i32 %7, 1"];
	Node0x18f76c0[shape=record, label="  %25 = add i32 %24, %13"];
	Node0x18f7730[shape=record, label="  %26 = add i32 %25, %11"];
	Node0x18f77a0[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0x18f7810[shape=record, label="  %28 = sub i32 %27, %17"];
	Node0x18f7880[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x18f78f0[shape=record, label="  %30 = add i32 %29, %23"];
	Node0x18f7960[shape=record, label="  %31 = add i32 %30, %19"];
	Node0x18f79d0[shape=record, label="  %32 = sub i32 %31, %21"];
	Node0x18f7c50[shape=record, label="  %33 = icmp eq i32 %9, %32"];
	Node0x18959d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18f7ce0[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x18f7f38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18f8098[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x18f8158[shape=record, label="  ret i32 0"];
	Node0x18f4ef8 -> Node0x18f4f78;
	Node0x18f4f78 -> Node0x18f5008;
	Node0x18f5008 -> Node0x18f5468;
	Node0x18f5468 -> Node0x18f5548;
	Node0x18f5548 -> Node0x18f5668;
	Node0x18f5668 -> Node0x18f58a0;
	Node0x18f58a0 -> Node0x18f5958;
	Node0x18f5958 -> Node0x18f68c8;
	Node0x18f68c8 -> Node0x18f6f50;
	Node0x18f6f50 -> Node0x18f6fc0;
	Node0x18f6fc0 -> Node0x18f7030;
	Node0x18f7030 -> Node0x18f70a0;
	Node0x18f70a0 -> Node0x18f7110;
	Node0x18f7110 -> Node0x18f7180;
	Node0x18f7180 -> Node0x18f71f0;
	Node0x18f71f0 -> Node0x18f7260;
	Node0x18f7260 -> Node0x18f72d0;
	Node0x18f72d0 -> Node0x18f7340;
	Node0x18f7340 -> Node0x18f73b0;
	Node0x18f73b0 -> Node0x18f7420;
	Node0x18f7420 -> Node0x18f7490;
	Node0x18f7490 -> Node0x18f7500;
	Node0x18f7500 -> Node0x18f7570;
	Node0x18f7570 -> Node0x18f75e0;
	Node0x18f75e0 -> Node0x18f7650;
	Node0x18f7650 -> Node0x18f76c0;
	Node0x18f76c0 -> Node0x18f7730;
	Node0x18f7730 -> Node0x18f77a0;
	Node0x18f77a0 -> Node0x18f7810;
	Node0x18f7810 -> Node0x18f7880;
	Node0x18f7880 -> Node0x18f78f0;
	Node0x18f78f0 -> Node0x18f7960;
	Node0x18f7960 -> Node0x18f79d0;
	Node0x18f79d0 -> Node0x18f7c50;
	Node0x18f7c50 -> Node0x18959d8;
	Node0x18959d8 -> Node0x18f7ce0;
	Node0x18f7ce0 -> Node0x18f7f38;
	Node0x18f7f38 -> Node0x18f8098;
	Node0x18f8098 -> Node0x18f8158;
edge [color=red]
	Node0x18f4ef8 -> Node0x18f5008;
	Node0x18f5008 -> Node0x18f5468;
	Node0x18f4f78 -> Node0x18f5548;
	Node0x18f5548 -> Node0x18f5668;
	Node0x18f4ef8 -> Node0x18f58a0;
	Node0x18f4f78 -> Node0x18f58a0;
	Node0x18f4ef8 -> Node0x18f5958;
	Node0x18f4f78 -> Node0x18f68c8;
	Node0x18f68c8 -> Node0x18f6f50;
	Node0x18f5958 -> Node0x18f6f50;
	Node0x18f6f50 -> Node0x18f6fc0;
	Node0x18f5958 -> Node0x18f7030;
	Node0x18f7030 -> Node0x18f70a0;
	Node0x18f68c8 -> Node0x18f7110;
	Node0x18f5958 -> Node0x18f7180;
	Node0x18f7110 -> Node0x18f7180;
	Node0x18f5958 -> Node0x18f71f0;
	Node0x18f7110 -> Node0x18f71f0;
	Node0x18f68c8 -> Node0x18f7260;
	Node0x18f5958 -> Node0x18f7260;
	Node0x18f68c8 -> Node0x18f72d0;
	Node0x18f5958 -> Node0x18f72d0;
	Node0x18f72d0 -> Node0x18f7340;
	Node0x18f72d0 -> Node0x18f73b0;
	Node0x18f73b0 -> Node0x18f7420;
	Node0x18f7260 -> Node0x18f7490;
	Node0x18f7490 -> Node0x18f7500;
	Node0x18f6f50 -> Node0x18f7570;
	Node0x18f71f0 -> Node0x18f75e0;
	Node0x18f68c8 -> Node0x18f7650;
	Node0x18f7650 -> Node0x18f76c0;
	Node0x18f7180 -> Node0x18f76c0;
	Node0x18f76c0 -> Node0x18f7730;
	Node0x18f70a0 -> Node0x18f7730;
	Node0x18f7730 -> Node0x18f77a0;
	Node0x18f7260 -> Node0x18f77a0;
	Node0x18f77a0 -> Node0x18f7810;
	Node0x18f7340 -> Node0x18f7810;
	Node0x18f7810 -> Node0x18f7880;
	Node0x18f7570 -> Node0x18f7880;
	Node0x18f7880 -> Node0x18f78f0;
	Node0x18f75e0 -> Node0x18f78f0;
	Node0x18f78f0 -> Node0x18f7960;
	Node0x18f7420 -> Node0x18f7960;
	Node0x18f7960 -> Node0x18f79d0;
	Node0x18f7500 -> Node0x18f79d0;
	Node0x18f6fc0 -> Node0x18f7c50;
	Node0x18f79d0 -> Node0x18f7c50;
	Node0x18f7c50 -> Node0x18959d8;
	Node0x18959d8 -> Node0x18f7ce0;
	Node0x18f5548 -> Node0x18f7f38;
	Node0x18f5008 -> Node0x18f8098;
}
