digraph "DFG for'main' function" {
	Node0xf75ea8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf75f28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf75fb8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xf76418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xf764f8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xf76618[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf76850[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xf76908[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf77878[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf77f00[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xf77f70[shape=record, label="  %9 = and i32 %6, %8"];
	Node0xf77fe0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0xf78050[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0xf780c0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0xf78130[shape=record, label="  %13 = add i32 %12, %10"];
	Node0xf781a0[shape=record, label="  %14 = xor i32 %6, -1"];
	Node0xf78210[shape=record, label="  %15 = add i32 %7, 1"];
	Node0xf78280[shape=record, label="  %16 = and i32 %7, %6"];
	Node0xf782f0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0xf78360[shape=record, label="  %18 = or i32 %7, %6"];
	Node0xf783d0[shape=record, label="  %19 = shl i32 %18, 2"];
	Node0xf78440[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0xf784b0[shape=record, label="  %21 = xor i32 %6, 1073741823"];
	Node0xf78520[shape=record, label="  %22 = and i32 %21, %7"];
	Node0xf78590[shape=record, label="  %23 = add i32 %9, %14"];
	Node0xf78600[shape=record, label="  %24 = add i32 %23, %16"];
	Node0xf78670[shape=record, label="  %25 = mul i32 %24, -3"];
	Node0xf786e0[shape=record, label="  %26 = add i32 %22, %6"];
	Node0xf78750[shape=record, label="  %27 = shl i32 %26, 2"];
	Node0xf787c0[shape=record, label="  %28 = add i32 %15, %11"];
	Node0xf78830[shape=record, label="  %29 = add i32 %28, %17"];
	Node0xf788a0[shape=record, label="  %30 = add i32 %29, %20"];
	Node0xf78910[shape=record, label="  %31 = add i32 %30, %27"];
	Node0xf78980[shape=record, label="  %32 = add i32 %31, %25"];
	Node0xf78c00[shape=record, label="  %33 = icmp eq i32 %13, %32"];
	Node0xf169d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf78c90[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xf78ee8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf79048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xf79108[shape=record, label="  ret i32 0"];
	Node0xf75ea8 -> Node0xf75f28;
	Node0xf75f28 -> Node0xf75fb8;
	Node0xf75fb8 -> Node0xf76418;
	Node0xf76418 -> Node0xf764f8;
	Node0xf764f8 -> Node0xf76618;
	Node0xf76618 -> Node0xf76850;
	Node0xf76850 -> Node0xf76908;
	Node0xf76908 -> Node0xf77878;
	Node0xf77878 -> Node0xf77f00;
	Node0xf77f00 -> Node0xf77f70;
	Node0xf77f70 -> Node0xf77fe0;
	Node0xf77fe0 -> Node0xf78050;
	Node0xf78050 -> Node0xf780c0;
	Node0xf780c0 -> Node0xf78130;
	Node0xf78130 -> Node0xf781a0;
	Node0xf781a0 -> Node0xf78210;
	Node0xf78210 -> Node0xf78280;
	Node0xf78280 -> Node0xf782f0;
	Node0xf782f0 -> Node0xf78360;
	Node0xf78360 -> Node0xf783d0;
	Node0xf783d0 -> Node0xf78440;
	Node0xf78440 -> Node0xf784b0;
	Node0xf784b0 -> Node0xf78520;
	Node0xf78520 -> Node0xf78590;
	Node0xf78590 -> Node0xf78600;
	Node0xf78600 -> Node0xf78670;
	Node0xf78670 -> Node0xf786e0;
	Node0xf786e0 -> Node0xf78750;
	Node0xf78750 -> Node0xf787c0;
	Node0xf787c0 -> Node0xf78830;
	Node0xf78830 -> Node0xf788a0;
	Node0xf788a0 -> Node0xf78910;
	Node0xf78910 -> Node0xf78980;
	Node0xf78980 -> Node0xf78c00;
	Node0xf78c00 -> Node0xf169d8;
	Node0xf169d8 -> Node0xf78c90;
	Node0xf78c90 -> Node0xf78ee8;
	Node0xf78ee8 -> Node0xf79048;
	Node0xf79048 -> Node0xf79108;
edge [color=red]
	Node0xf75ea8 -> Node0xf75fb8;
	Node0xf75fb8 -> Node0xf76418;
	Node0xf75f28 -> Node0xf764f8;
	Node0xf764f8 -> Node0xf76618;
	Node0xf75ea8 -> Node0xf76850;
	Node0xf75f28 -> Node0xf76850;
	Node0xf75ea8 -> Node0xf76908;
	Node0xf75f28 -> Node0xf77878;
	Node0xf77878 -> Node0xf77f00;
	Node0xf76908 -> Node0xf77f70;
	Node0xf77f00 -> Node0xf77f70;
	Node0xf77f70 -> Node0xf77fe0;
	Node0xf77878 -> Node0xf78050;
	Node0xf76908 -> Node0xf78050;
	Node0xf78050 -> Node0xf780c0;
	Node0xf780c0 -> Node0xf78130;
	Node0xf77fe0 -> Node0xf78130;
	Node0xf76908 -> Node0xf781a0;
	Node0xf77878 -> Node0xf78210;
	Node0xf77878 -> Node0xf78280;
	Node0xf76908 -> Node0xf78280;
	Node0xf78280 -> Node0xf782f0;
	Node0xf77878 -> Node0xf78360;
	Node0xf76908 -> Node0xf78360;
	Node0xf78360 -> Node0xf783d0;
	Node0xf783d0 -> Node0xf78440;
	Node0xf76908 -> Node0xf784b0;
	Node0xf784b0 -> Node0xf78520;
	Node0xf77878 -> Node0xf78520;
	Node0xf77f70 -> Node0xf78590;
	Node0xf781a0 -> Node0xf78590;
	Node0xf78590 -> Node0xf78600;
	Node0xf78280 -> Node0xf78600;
	Node0xf78600 -> Node0xf78670;
	Node0xf78520 -> Node0xf786e0;
	Node0xf76908 -> Node0xf786e0;
	Node0xf786e0 -> Node0xf78750;
	Node0xf78210 -> Node0xf787c0;
	Node0xf78050 -> Node0xf787c0;
	Node0xf787c0 -> Node0xf78830;
	Node0xf782f0 -> Node0xf78830;
	Node0xf78830 -> Node0xf788a0;
	Node0xf78440 -> Node0xf788a0;
	Node0xf788a0 -> Node0xf78910;
	Node0xf78750 -> Node0xf78910;
	Node0xf78910 -> Node0xf78980;
	Node0xf78670 -> Node0xf78980;
	Node0xf78130 -> Node0xf78c00;
	Node0xf78980 -> Node0xf78c00;
	Node0xf78c00 -> Node0xf169d8;
	Node0xf169d8 -> Node0xf78c90;
	Node0xf764f8 -> Node0xf78ee8;
	Node0xf75fb8 -> Node0xf79048;
}
