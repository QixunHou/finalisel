digraph "DFG for'main' function" {
	Node0x1ec3cb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ec3d68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ec3df8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1ec4258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ec4338[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1ec4458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ec4690[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1ec4748[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ec56b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ec5d40[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1ec5db0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1ec5e20[shape=record, label="  %10 = sub i32 0, %9"];
	Node0x1ec5e90[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x1ec5f00[shape=record, label="  %12 = and i32 %6, %8"];
	Node0x1ec5f70[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x1ec5fe0[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x1ec6050[shape=record, label="  %15 = shl i32 %14, 3"];
	Node0x1ec60c0[shape=record, label="  %16 = xor i32 %15, -8"];
	Node0x1ec6130[shape=record, label="  %17 = xor i32 %9, -1"];
	Node0x1ec61a0[shape=record, label="  %18 = mul i32 %12, -7"];
	Node0x1ec6210[shape=record, label="  %19 = and i32 %7, %6"];
	Node0x1ec6280[shape=record, label="  %20 = add i32 %19, %17"];
	Node0x1ec62f0[shape=record, label="  %21 = mul i32 %20, -5"];
	Node0x1ec6360[shape=record, label="  %22 = sub i32 -5, %7"];
	Node0x1ec63d0[shape=record, label="  %23 = add i32 %22, %8"];
	Node0x1ec6440[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x1ec64b0[shape=record, label="  %25 = add i32 %24, %13"];
	Node0x1ec6520[shape=record, label="  %26 = sub i32 %25, %14"];
	Node0x1ec6590[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x1ec6600[shape=record, label="  %28 = sub i32 %27, %16"];
	Node0x1ec6670[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x1ec66e0[shape=record, label="  %30 = icmp eq i32 %29, %10"];
	Node0x1e649d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ec6770[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x1ec6bd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ec6d38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ec6df8[shape=record, label="  ret i32 0"];
	Node0x1ec3cb8 -> Node0x1ec3d68;
	Node0x1ec3d68 -> Node0x1ec3df8;
	Node0x1ec3df8 -> Node0x1ec4258;
	Node0x1ec4258 -> Node0x1ec4338;
	Node0x1ec4338 -> Node0x1ec4458;
	Node0x1ec4458 -> Node0x1ec4690;
	Node0x1ec4690 -> Node0x1ec4748;
	Node0x1ec4748 -> Node0x1ec56b8;
	Node0x1ec56b8 -> Node0x1ec5d40;
	Node0x1ec5d40 -> Node0x1ec5db0;
	Node0x1ec5db0 -> Node0x1ec5e20;
	Node0x1ec5e20 -> Node0x1ec5e90;
	Node0x1ec5e90 -> Node0x1ec5f00;
	Node0x1ec5f00 -> Node0x1ec5f70;
	Node0x1ec5f70 -> Node0x1ec5fe0;
	Node0x1ec5fe0 -> Node0x1ec6050;
	Node0x1ec6050 -> Node0x1ec60c0;
	Node0x1ec60c0 -> Node0x1ec6130;
	Node0x1ec6130 -> Node0x1ec61a0;
	Node0x1ec61a0 -> Node0x1ec6210;
	Node0x1ec6210 -> Node0x1ec6280;
	Node0x1ec6280 -> Node0x1ec62f0;
	Node0x1ec62f0 -> Node0x1ec6360;
	Node0x1ec6360 -> Node0x1ec63d0;
	Node0x1ec63d0 -> Node0x1ec6440;
	Node0x1ec6440 -> Node0x1ec64b0;
	Node0x1ec64b0 -> Node0x1ec6520;
	Node0x1ec6520 -> Node0x1ec6590;
	Node0x1ec6590 -> Node0x1ec6600;
	Node0x1ec6600 -> Node0x1ec6670;
	Node0x1ec6670 -> Node0x1ec66e0;
	Node0x1ec66e0 -> Node0x1e649d8;
	Node0x1e649d8 -> Node0x1ec6770;
	Node0x1ec6770 -> Node0x1ec6bd8;
	Node0x1ec6bd8 -> Node0x1ec6d38;
	Node0x1ec6d38 -> Node0x1ec6df8;
edge [color=red]
	Node0x1ec3cb8 -> Node0x1ec3df8;
	Node0x1ec3df8 -> Node0x1ec4258;
	Node0x1ec3d68 -> Node0x1ec4338;
	Node0x1ec4338 -> Node0x1ec4458;
	Node0x1ec3cb8 -> Node0x1ec4690;
	Node0x1ec3d68 -> Node0x1ec4690;
	Node0x1ec3cb8 -> Node0x1ec4748;
	Node0x1ec3d68 -> Node0x1ec56b8;
	Node0x1ec56b8 -> Node0x1ec5d40;
	Node0x1ec4748 -> Node0x1ec5db0;
	Node0x1ec5d40 -> Node0x1ec5db0;
	Node0x1ec5db0 -> Node0x1ec5e20;
	Node0x1ec56b8 -> Node0x1ec5e90;
	Node0x1ec4748 -> Node0x1ec5e90;
	Node0x1ec4748 -> Node0x1ec5f00;
	Node0x1ec5d40 -> Node0x1ec5f00;
	Node0x1ec5f00 -> Node0x1ec5f70;
	Node0x1ec56b8 -> Node0x1ec5fe0;
	Node0x1ec4748 -> Node0x1ec5fe0;
	Node0x1ec5fe0 -> Node0x1ec6050;
	Node0x1ec6050 -> Node0x1ec60c0;
	Node0x1ec5db0 -> Node0x1ec6130;
	Node0x1ec5f00 -> Node0x1ec61a0;
	Node0x1ec56b8 -> Node0x1ec6210;
	Node0x1ec4748 -> Node0x1ec6210;
	Node0x1ec6210 -> Node0x1ec6280;
	Node0x1ec6130 -> Node0x1ec6280;
	Node0x1ec6280 -> Node0x1ec62f0;
	Node0x1ec56b8 -> Node0x1ec6360;
	Node0x1ec6360 -> Node0x1ec63d0;
	Node0x1ec5d40 -> Node0x1ec63d0;
	Node0x1ec63d0 -> Node0x1ec6440;
	Node0x1ec5e90 -> Node0x1ec6440;
	Node0x1ec6440 -> Node0x1ec64b0;
	Node0x1ec5f70 -> Node0x1ec64b0;
	Node0x1ec64b0 -> Node0x1ec6520;
	Node0x1ec5fe0 -> Node0x1ec6520;
	Node0x1ec6520 -> Node0x1ec6590;
	Node0x1ec61a0 -> Node0x1ec6590;
	Node0x1ec6590 -> Node0x1ec6600;
	Node0x1ec60c0 -> Node0x1ec6600;
	Node0x1ec6600 -> Node0x1ec6670;
	Node0x1ec62f0 -> Node0x1ec6670;
	Node0x1ec6670 -> Node0x1ec66e0;
	Node0x1ec5e20 -> Node0x1ec66e0;
	Node0x1ec66e0 -> Node0x1e649d8;
	Node0x1e649d8 -> Node0x1ec6770;
	Node0x1ec4338 -> Node0x1ec6bd8;
	Node0x1ec3df8 -> Node0x1ec6d38;
}
