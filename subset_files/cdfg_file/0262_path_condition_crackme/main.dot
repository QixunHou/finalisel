digraph "DFG for'main' function" {
	Node0x1e30f68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e30fe8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e31078[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1e310d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1e31558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e31638[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1e31738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e317f8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1e318a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e31b08[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1e31bc8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e32b38[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e331a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1e332a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1e334a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e33608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e33718[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e337d8[shape=record, label="  ret i32 0"];
	Node0x1e30f68 -> Node0x1e30fe8;
	Node0x1e30fe8 -> Node0x1e31078;
	Node0x1e31078 -> Node0x1e310d8;
	Node0x1e310d8 -> Node0x1e31558;
	Node0x1e31558 -> Node0x1e31638;
	Node0x1e31638 -> Node0x1e31738;
	Node0x1e31738 -> Node0x1e317f8;
	Node0x1e317f8 -> Node0x1e318a8;
	Node0x1e318a8 -> Node0x1e31b08;
	Node0x1e31b08 -> Node0x1e31bc8;
	Node0x1e31bc8 -> Node0x1e32b38;
	Node0x1e32b38 -> Node0x1e331a8;
	Node0x1e331a8 -> Node0x1e332a0;
	Node0x1e332a0 -> Node0x1e334a8;
	Node0x1e334a8 -> Node0x1e33608;
	Node0x1e33608 -> Node0x1e33718;
	Node0x1e33718 -> Node0x1e337d8;
edge [color=red]
	Node0x1e30f68 -> Node0x1e310d8;
	Node0x1e310d8 -> Node0x1e31558;
	Node0x1e30fe8 -> Node0x1e31638;
	Node0x1e31638 -> Node0x1e31738;
	Node0x1e31078 -> Node0x1e317f8;
	Node0x1e317f8 -> Node0x1e318a8;
	Node0x1e30f68 -> Node0x1e31b08;
	Node0x1e30fe8 -> Node0x1e31b08;
	Node0x1e31078 -> Node0x1e31b08;
	Node0x1e30f68 -> Node0x1e31bc8;
	Node0x1e30fe8 -> Node0x1e32b38;
	Node0x1e31078 -> Node0x1e331a8;
	Node0x1e31bc8 -> Node0x1e332a0;
	Node0x1e32b38 -> Node0x1e332a0;
	Node0x1e331a8 -> Node0x1e332a0;
	Node0x1e317f8 -> Node0x1e334a8;
	Node0x1e31638 -> Node0x1e33608;
	Node0x1e310d8 -> Node0x1e33718;
}
