digraph "DFG for'main' function" {
	Node0x51aa78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x51aaf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x51ab88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x51abe8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x51ac98[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x51b0c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x51b1a8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x51b2a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x51b368[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x51b418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x51b4d8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x51b588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x515ae0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x51b788[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x51c6f8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x51cd68[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x51cdc8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x51ce40[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x51ceb0[shape=record, label="  %15 = shl i32 %10, 1"];
	Node0x51cf20[shape=record, label="  %16 = or i32 %15, 1"];
	Node0x51cf90[shape=record, label="  %17 = add i32 %16, %12"];
	Node0x51d000[shape=record, label="  %18 = xor i32 %12, %11"];
	Node0x51d070[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x51d0e0[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x51d150[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x51d1c0[shape=record, label="  %22 = and i32 %11, %14"];
	Node0x51d230[shape=record, label="  %23 = or i32 %11, %14"];
	Node0x51d2a0[shape=record, label="  %24 = xor i32 %21, -1"];
	Node0x51d310[shape=record, label="  %25 = mul i32 %24, -3"];
	Node0x51d380[shape=record, label="  %26 = shl i32 %22, 1"];
	Node0x51d3f0[shape=record, label="  %27 = and i32 %12, %11"];
	Node0x51d460[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x51d4d0[shape=record, label="  %29 = xor i32 %10, -1"];
	Node0x51d540[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x51d5b0[shape=record, label="  %31 = or i32 %13, %29"];
	Node0x51d620[shape=record, label="  %32 = xor i32 %31, -1"];
	Node0x51d690[shape=record, label="  %33 = and i32 %13, %29"];
	Node0x51d700[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x51d770[shape=record, label="  %35 = and i32 %13, %10"];
	Node0x51d7e0[shape=record, label="  %36 = add i32 %35, %29"];
	Node0x51d850[shape=record, label="  %37 = add i32 %36, %30"];
	Node0x51d8c0[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x51d930[shape=record, label="  %39 = sub i32 2, %11"];
	Node0x51d9a0[shape=record, label="  %40 = add i32 %39, %21"];
	Node0x51da10[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x51da80[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x51daf0[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x51db60[shape=record, label="  %44 = sub i32 %43, %26"];
	Node0x51dbd0[shape=record, label="  %45 = sub i32 %44, %28"];
	Node0x51dc40[shape=record, label="  %46 = sub i32 %45, %31"];
	Node0x51dcb0[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x51dd20[shape=record, label="  %48 = add i32 %47, %20"];
	Node0x51dd90[shape=record, label="  %49 = sub i32 %48, %34"];
	Node0x51de00[shape=record, label="  %50 = add i32 %49, %38"];
	Node0x51de70[shape=record, label="  %51 = icmp eq i32 %17, %50"];
	Node0x4ba8b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x51df00[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0x51e1a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x51e308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x51e418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x51e528[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x51e5e8[shape=record, label="  ret i32 0"];
	Node0x51aa78 -> Node0x51aaf8;
	Node0x51aaf8 -> Node0x51ab88;
	Node0x51ab88 -> Node0x51abe8;
	Node0x51abe8 -> Node0x51ac98;
	Node0x51ac98 -> Node0x51b0c8;
	Node0x51b0c8 -> Node0x51b1a8;
	Node0x51b1a8 -> Node0x51b2a8;
	Node0x51b2a8 -> Node0x51b368;
	Node0x51b368 -> Node0x51b418;
	Node0x51b418 -> Node0x51b4d8;
	Node0x51b4d8 -> Node0x51b588;
	Node0x51b588 -> Node0x515ae0;
	Node0x515ae0 -> Node0x51b788;
	Node0x51b788 -> Node0x51c6f8;
	Node0x51c6f8 -> Node0x51cd68;
	Node0x51cd68 -> Node0x51cdc8;
	Node0x51cdc8 -> Node0x51ce40;
	Node0x51ce40 -> Node0x51ceb0;
	Node0x51ceb0 -> Node0x51cf20;
	Node0x51cf20 -> Node0x51cf90;
	Node0x51cf90 -> Node0x51d000;
	Node0x51d000 -> Node0x51d070;
	Node0x51d070 -> Node0x51d0e0;
	Node0x51d0e0 -> Node0x51d150;
	Node0x51d150 -> Node0x51d1c0;
	Node0x51d1c0 -> Node0x51d230;
	Node0x51d230 -> Node0x51d2a0;
	Node0x51d2a0 -> Node0x51d310;
	Node0x51d310 -> Node0x51d380;
	Node0x51d380 -> Node0x51d3f0;
	Node0x51d3f0 -> Node0x51d460;
	Node0x51d460 -> Node0x51d4d0;
	Node0x51d4d0 -> Node0x51d540;
	Node0x51d540 -> Node0x51d5b0;
	Node0x51d5b0 -> Node0x51d620;
	Node0x51d620 -> Node0x51d690;
	Node0x51d690 -> Node0x51d700;
	Node0x51d700 -> Node0x51d770;
	Node0x51d770 -> Node0x51d7e0;
	Node0x51d7e0 -> Node0x51d850;
	Node0x51d850 -> Node0x51d8c0;
	Node0x51d8c0 -> Node0x51d930;
	Node0x51d930 -> Node0x51d9a0;
	Node0x51d9a0 -> Node0x51da10;
	Node0x51da10 -> Node0x51da80;
	Node0x51da80 -> Node0x51daf0;
	Node0x51daf0 -> Node0x51db60;
	Node0x51db60 -> Node0x51dbd0;
	Node0x51dbd0 -> Node0x51dc40;
	Node0x51dc40 -> Node0x51dcb0;
	Node0x51dcb0 -> Node0x51dd20;
	Node0x51dd20 -> Node0x51dd90;
	Node0x51dd90 -> Node0x51de00;
	Node0x51de00 -> Node0x51de70;
	Node0x51de70 -> Node0x4ba8b8;
	Node0x4ba8b8 -> Node0x51df00;
	Node0x51df00 -> Node0x51e1a8;
	Node0x51e1a8 -> Node0x51e308;
	Node0x51e308 -> Node0x51e418;
	Node0x51e418 -> Node0x51e528;
	Node0x51e528 -> Node0x51e5e8;
edge [color=red]
	Node0x51aa78 -> Node0x51ac98;
	Node0x51ac98 -> Node0x51b0c8;
	Node0x51aaf8 -> Node0x51b1a8;
	Node0x51b1a8 -> Node0x51b2a8;
	Node0x51ab88 -> Node0x51b368;
	Node0x51b368 -> Node0x51b418;
	Node0x51abe8 -> Node0x51b4d8;
	Node0x51b4d8 -> Node0x51b588;
	Node0x51aa78 -> Node0x515ae0;
	Node0x51aaf8 -> Node0x515ae0;
	Node0x51ab88 -> Node0x515ae0;
	Node0x51abe8 -> Node0x515ae0;
	Node0x51aa78 -> Node0x51b788;
	Node0x51aaf8 -> Node0x51c6f8;
	Node0x51ab88 -> Node0x51cd68;
	Node0x51abe8 -> Node0x51cdc8;
	Node0x51cd68 -> Node0x51ce40;
	Node0x51b788 -> Node0x51ceb0;
	Node0x51ceb0 -> Node0x51cf20;
	Node0x51cf20 -> Node0x51cf90;
	Node0x51cd68 -> Node0x51cf90;
	Node0x51cd68 -> Node0x51d000;
	Node0x51c6f8 -> Node0x51d000;
	Node0x51d000 -> Node0x51d070;
	Node0x51d070 -> Node0x51d0e0;
	Node0x51cd68 -> Node0x51d150;
	Node0x51c6f8 -> Node0x51d150;
	Node0x51c6f8 -> Node0x51d1c0;
	Node0x51ce40 -> Node0x51d1c0;
	Node0x51c6f8 -> Node0x51d230;
	Node0x51ce40 -> Node0x51d230;
	Node0x51d150 -> Node0x51d2a0;
	Node0x51d2a0 -> Node0x51d310;
	Node0x51d1c0 -> Node0x51d380;
	Node0x51cd68 -> Node0x51d3f0;
	Node0x51c6f8 -> Node0x51d3f0;
	Node0x51d3f0 -> Node0x51d460;
	Node0x51b788 -> Node0x51d4d0;
	Node0x51cdc8 -> Node0x51d540;
	Node0x51b788 -> Node0x51d540;
	Node0x51cdc8 -> Node0x51d5b0;
	Node0x51d4d0 -> Node0x51d5b0;
	Node0x51d5b0 -> Node0x51d620;
	Node0x51cdc8 -> Node0x51d690;
	Node0x51d4d0 -> Node0x51d690;
	Node0x51d690 -> Node0x51d700;
	Node0x51cdc8 -> Node0x51d770;
	Node0x51b788 -> Node0x51d770;
	Node0x51d770 -> Node0x51d7e0;
	Node0x51d4d0 -> Node0x51d7e0;
	Node0x51d7e0 -> Node0x51d850;
	Node0x51d540 -> Node0x51d850;
	Node0x51d850 -> Node0x51d8c0;
	Node0x51c6f8 -> Node0x51d930;
	Node0x51d930 -> Node0x51d9a0;
	Node0x51d150 -> Node0x51d9a0;
	Node0x51d9a0 -> Node0x51da10;
	Node0x51d1c0 -> Node0x51da10;
	Node0x51da10 -> Node0x51da80;
	Node0x51d230 -> Node0x51da80;
	Node0x51da80 -> Node0x51daf0;
	Node0x51d310 -> Node0x51daf0;
	Node0x51daf0 -> Node0x51db60;
	Node0x51d380 -> Node0x51db60;
	Node0x51db60 -> Node0x51dbd0;
	Node0x51d460 -> Node0x51dbd0;
	Node0x51dbd0 -> Node0x51dc40;
	Node0x51d5b0 -> Node0x51dc40;
	Node0x51dc40 -> Node0x51dcb0;
	Node0x51d620 -> Node0x51dcb0;
	Node0x51dcb0 -> Node0x51dd20;
	Node0x51d0e0 -> Node0x51dd20;
	Node0x51dd20 -> Node0x51dd90;
	Node0x51d700 -> Node0x51dd90;
	Node0x51dd90 -> Node0x51de00;
	Node0x51d8c0 -> Node0x51de00;
	Node0x51cf90 -> Node0x51de70;
	Node0x51de00 -> Node0x51de70;
	Node0x51de70 -> Node0x4ba8b8;
	Node0x4ba8b8 -> Node0x51df00;
	Node0x51b4d8 -> Node0x51e1a8;
	Node0x51b368 -> Node0x51e308;
	Node0x51b1a8 -> Node0x51e418;
	Node0x51ac98 -> Node0x51e528;
}
