digraph "DFG for'crackme' function" {
	Node0xc94760[shape=record, label="  %5 = and i32 %2, %1"];
	Node0xc94de0[shape=record, label="  %6 = shl i32 %1, 1"];
	Node0xc94e80[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0xc94ef0[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0xc94f90[shape=record, label="  %9 = sub i32 2, %8"];
	Node0xc95000[shape=record, label="  %10 = sub i32 %9, %6"];
	Node0xc95070[shape=record, label="  %11 = add i32 %10, %5"];
	Node0xc950e0[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0xc95150[shape=record, label="  %13 = or i32 %12, %1"];
	Node0xc951c0[shape=record, label="  %14 = shl i32 %2, 1"];
	Node0xc95230[shape=record, label="  %15 = xor i32 %2, %1"];
	Node0xc952a0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0xc95340[shape=record, label="  %17 = mul i32 %15, -5"];
	Node0xc953e0[shape=record, label="  %18 = shl i32 %13, 3"];
	Node0xc95480[shape=record, label="  %19 = xor i32 %18, -8"];
	Node0xc954f0[shape=record, label="  %20 = and i32 %12, %1"];
	Node0xc95560[shape=record, label="  %21 = xor i32 %7, %3"];
	Node0xc955d0[shape=record, label="  %22 = shl i32 %0, 1"];
	Node0xc95640[shape=record, label="  %23 = and i32 %7, %3"];
	Node0xc956b0[shape=record, label="  %24 = and i32 %3, %0"];
	Node0xc95720[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0xc957c0[shape=record, label="  %26 = xor i32 %25, -4"];
	Node0xc95830[shape=record, label="  %27 = or i32 %3, %0"];
	Node0xc958a0[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0xc95940[shape=record, label="  %29 = xor i32 %3, 2147483647"];
	Node0xc959b0[shape=record, label="  %30 = and i32 %29, %0"];
	Node0xc95a20[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0xc95a90[shape=record, label="  %32 = mul i32 %20, 3"];
	Node0xc95d40[shape=record, label="  %33 = add i32 %32, -3"];
	Node0xc95db0[shape=record, label="  %34 = add i32 %23, %28"];
	Node0xc95e50[shape=record, label="  %35 = mul i32 %34, -7"];
	Node0xc95ef0[shape=record, label="  %36 = add i32 %1, 6"];
	Node0xc95f60[shape=record, label="  %37 = sub i32 %36, %22"];
	Node0xc95fd0[shape=record, label="  %38 = add i32 %37, %12"];
	Node0xc96040[shape=record, label="  %39 = sub i32 %38, %13"];
	Node0xc960b0[shape=record, label="  %40 = sub i32 %39, %14"];
	Node0xc96120[shape=record, label="  %41 = add i32 %40, %16"];
	Node0xc96190[shape=record, label="  %42 = add i32 %41, %5"];
	Node0xc96200[shape=record, label="  %43 = add i32 %42, %17"];
	Node0xc96270[shape=record, label="  %44 = add i32 %43, %21"];
	Node0xc962e0[shape=record, label="  %45 = add i32 %44, %23"];
	Node0xc96350[shape=record, label="  %46 = add i32 %45, %24"];
	Node0xc963c0[shape=record, label="  %47 = add i32 %46, %19"];
	Node0xc96430[shape=record, label="  %48 = add i32 %47, %26"];
	Node0xc964a0[shape=record, label="  %49 = sub i32 %48, %31"];
	Node0xc96510[shape=record, label="  %50 = add i32 %49, %33"];
	Node0xc96580[shape=record, label="  %51 = add i32 %50, %35"];
	Node0xc965f0[shape=record, label="  %52 = icmp eq i32 %11, %51"];
	Node0xc35268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc96a90[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0xc96ae0[shape=record, label="  ret void"];
	Node0xc94760 -> Node0xc94de0;
	Node0xc94de0 -> Node0xc94e80;
	Node0xc94e80 -> Node0xc94ef0;
	Node0xc94ef0 -> Node0xc94f90;
	Node0xc94f90 -> Node0xc95000;
	Node0xc95000 -> Node0xc95070;
	Node0xc95070 -> Node0xc950e0;
	Node0xc950e0 -> Node0xc95150;
	Node0xc95150 -> Node0xc951c0;
	Node0xc951c0 -> Node0xc95230;
	Node0xc95230 -> Node0xc952a0;
	Node0xc952a0 -> Node0xc95340;
	Node0xc95340 -> Node0xc953e0;
	Node0xc953e0 -> Node0xc95480;
	Node0xc95480 -> Node0xc954f0;
	Node0xc954f0 -> Node0xc95560;
	Node0xc95560 -> Node0xc955d0;
	Node0xc955d0 -> Node0xc95640;
	Node0xc95640 -> Node0xc956b0;
	Node0xc956b0 -> Node0xc95720;
	Node0xc95720 -> Node0xc957c0;
	Node0xc957c0 -> Node0xc95830;
	Node0xc95830 -> Node0xc958a0;
	Node0xc958a0 -> Node0xc95940;
	Node0xc95940 -> Node0xc959b0;
	Node0xc959b0 -> Node0xc95a20;
	Node0xc95a20 -> Node0xc95a90;
	Node0xc95a90 -> Node0xc95d40;
	Node0xc95d40 -> Node0xc95db0;
	Node0xc95db0 -> Node0xc95e50;
	Node0xc95e50 -> Node0xc95ef0;
	Node0xc95ef0 -> Node0xc95f60;
	Node0xc95f60 -> Node0xc95fd0;
	Node0xc95fd0 -> Node0xc96040;
	Node0xc96040 -> Node0xc960b0;
	Node0xc960b0 -> Node0xc96120;
	Node0xc96120 -> Node0xc96190;
	Node0xc96190 -> Node0xc96200;
	Node0xc96200 -> Node0xc96270;
	Node0xc96270 -> Node0xc962e0;
	Node0xc962e0 -> Node0xc96350;
	Node0xc96350 -> Node0xc963c0;
	Node0xc963c0 -> Node0xc96430;
	Node0xc96430 -> Node0xc964a0;
	Node0xc964a0 -> Node0xc96510;
	Node0xc96510 -> Node0xc96580;
	Node0xc96580 -> Node0xc965f0;
	Node0xc965f0 -> Node0xc35268;
	Node0xc35268 -> Node0xc96a90;
	Node0xc96a90 -> Node0xc96ae0;
edge [color=red]
	Node0xc94e80 -> Node0xc94ef0;
	Node0xc94ef0 -> Node0xc94f90;
	Node0xc94f90 -> Node0xc95000;
	Node0xc94de0 -> Node0xc95000;
	Node0xc95000 -> Node0xc95070;
	Node0xc94760 -> Node0xc95070;
	Node0xc950e0 -> Node0xc95150;
	Node0xc95230 -> Node0xc952a0;
	Node0xc95230 -> Node0xc95340;
	Node0xc95150 -> Node0xc953e0;
	Node0xc953e0 -> Node0xc95480;
	Node0xc950e0 -> Node0xc954f0;
	Node0xc94e80 -> Node0xc95560;
	Node0xc94e80 -> Node0xc95640;
	Node0xc956b0 -> Node0xc95720;
	Node0xc95720 -> Node0xc957c0;
	Node0xc95830 -> Node0xc958a0;
	Node0xc95940 -> Node0xc959b0;
	Node0xc959b0 -> Node0xc95a20;
	Node0xc954f0 -> Node0xc95a90;
	Node0xc95a90 -> Node0xc95d40;
	Node0xc95640 -> Node0xc95db0;
	Node0xc958a0 -> Node0xc95db0;
	Node0xc95db0 -> Node0xc95e50;
	Node0xc95ef0 -> Node0xc95f60;
	Node0xc955d0 -> Node0xc95f60;
	Node0xc95f60 -> Node0xc95fd0;
	Node0xc950e0 -> Node0xc95fd0;
	Node0xc95fd0 -> Node0xc96040;
	Node0xc95150 -> Node0xc96040;
	Node0xc96040 -> Node0xc960b0;
	Node0xc951c0 -> Node0xc960b0;
	Node0xc960b0 -> Node0xc96120;
	Node0xc952a0 -> Node0xc96120;
	Node0xc96120 -> Node0xc96190;
	Node0xc94760 -> Node0xc96190;
	Node0xc96190 -> Node0xc96200;
	Node0xc95340 -> Node0xc96200;
	Node0xc96200 -> Node0xc96270;
	Node0xc95560 -> Node0xc96270;
	Node0xc96270 -> Node0xc962e0;
	Node0xc95640 -> Node0xc962e0;
	Node0xc962e0 -> Node0xc96350;
	Node0xc956b0 -> Node0xc96350;
	Node0xc96350 -> Node0xc963c0;
	Node0xc95480 -> Node0xc963c0;
	Node0xc963c0 -> Node0xc96430;
	Node0xc957c0 -> Node0xc96430;
	Node0xc96430 -> Node0xc964a0;
	Node0xc95a20 -> Node0xc964a0;
	Node0xc964a0 -> Node0xc96510;
	Node0xc95d40 -> Node0xc96510;
	Node0xc96510 -> Node0xc96580;
	Node0xc95e50 -> Node0xc96580;
	Node0xc95070 -> Node0xc965f0;
	Node0xc96580 -> Node0xc965f0;
	Node0xc965f0 -> Node0xc35268;
	Node0xc35268 -> Node0xc96a90;
}
