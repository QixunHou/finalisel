digraph "DFG for'main' function" {
	Node0xc96ca8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc96d28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc96db8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xc96e18[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xc96ec8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xc972f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc973d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xc974d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc97598[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xc97648[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xc97708[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xc977b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xc91790[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xc979b8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc98928[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc98f98[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xc98ff8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xc99108[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xc99368[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xc994c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xc995d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc996e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc997a8[shape=record, label="  ret i32 0"];
	Node0xc96ca8 -> Node0xc96d28;
	Node0xc96d28 -> Node0xc96db8;
	Node0xc96db8 -> Node0xc96e18;
	Node0xc96e18 -> Node0xc96ec8;
	Node0xc96ec8 -> Node0xc972f8;
	Node0xc972f8 -> Node0xc973d8;
	Node0xc973d8 -> Node0xc974d8;
	Node0xc974d8 -> Node0xc97598;
	Node0xc97598 -> Node0xc97648;
	Node0xc97648 -> Node0xc97708;
	Node0xc97708 -> Node0xc977b8;
	Node0xc977b8 -> Node0xc91790;
	Node0xc91790 -> Node0xc979b8;
	Node0xc979b8 -> Node0xc98928;
	Node0xc98928 -> Node0xc98f98;
	Node0xc98f98 -> Node0xc98ff8;
	Node0xc98ff8 -> Node0xc99108;
	Node0xc99108 -> Node0xc99368;
	Node0xc99368 -> Node0xc994c8;
	Node0xc994c8 -> Node0xc995d8;
	Node0xc995d8 -> Node0xc996e8;
	Node0xc996e8 -> Node0xc997a8;
edge [color=red]
	Node0xc96ca8 -> Node0xc96ec8;
	Node0xc96ec8 -> Node0xc972f8;
	Node0xc96d28 -> Node0xc973d8;
	Node0xc973d8 -> Node0xc974d8;
	Node0xc96db8 -> Node0xc97598;
	Node0xc97598 -> Node0xc97648;
	Node0xc96e18 -> Node0xc97708;
	Node0xc97708 -> Node0xc977b8;
	Node0xc96ca8 -> Node0xc91790;
	Node0xc96d28 -> Node0xc91790;
	Node0xc96db8 -> Node0xc91790;
	Node0xc96e18 -> Node0xc91790;
	Node0xc96ca8 -> Node0xc979b8;
	Node0xc96d28 -> Node0xc98928;
	Node0xc96db8 -> Node0xc98f98;
	Node0xc96e18 -> Node0xc98ff8;
	Node0xc979b8 -> Node0xc99108;
	Node0xc98928 -> Node0xc99108;
	Node0xc98f98 -> Node0xc99108;
	Node0xc98ff8 -> Node0xc99108;
	Node0xc97708 -> Node0xc99368;
	Node0xc97598 -> Node0xc994c8;
	Node0xc973d8 -> Node0xc995d8;
	Node0xc96ec8 -> Node0xc996e8;
}
