digraph "DFG for'crackme' function" {
	Node0xf3d400[shape=record, label="  %3 = or i32 %1, %0"];
	Node0xf3d470[shape=record, label="  %4 = and i32 %1, %0"];
	Node0xf3d530[shape=record, label="  %5 = xor i32 %1, %0"];
	Node0xf3dbb0[shape=record, label="  %6 = xor i32 %3, -1"];
	Node0xf3dc20[shape=record, label="  %7 = xor i32 %1, -1"];
	Node0xf3dcc0[shape=record, label="  %8 = xor i32 %0, 2147483647"];
	Node0xf3dd30[shape=record, label="  %9 = and i32 %8, %1"];
	Node0xf3dda0[shape=record, label="  %10 = and i32 %7, %0"];
	Node0xf3de10[shape=record, label="  %11 = add i32 %4, %9"];
	Node0xf3deb0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0xf3df20[shape=record, label="  %13 = sub i32 1, %1"];
	Node0xf3df90[shape=record, label="  %14 = add i32 %13, %4"];
	Node0xf3e000[shape=record, label="  %15 = add i32 %14, %5"];
	Node0xf3e070[shape=record, label="  %16 = add i32 %15, %6"];
	Node0xf3e0e0[shape=record, label="  %17 = add i32 %16, %10"];
	Node0xf3e150[shape=record, label="  %18 = add i32 %17, %12"];
	Node0xf3e1c0[shape=record, label="  %19 = icmp eq i32 %3, %18"];
	Node0xede268[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf3e660[shape=record, label="  %21 = tail call i32 @puts(i8* nonnull dereferenceable(1) %20)"];
	Node0xf3e6b0[shape=record, label="  ret void"];
	Node0xf3d400 -> Node0xf3d470;
	Node0xf3d470 -> Node0xf3d530;
	Node0xf3d530 -> Node0xf3dbb0;
	Node0xf3dbb0 -> Node0xf3dc20;
	Node0xf3dc20 -> Node0xf3dcc0;
	Node0xf3dcc0 -> Node0xf3dd30;
	Node0xf3dd30 -> Node0xf3dda0;
	Node0xf3dda0 -> Node0xf3de10;
	Node0xf3de10 -> Node0xf3deb0;
	Node0xf3deb0 -> Node0xf3df20;
	Node0xf3df20 -> Node0xf3df90;
	Node0xf3df90 -> Node0xf3e000;
	Node0xf3e000 -> Node0xf3e070;
	Node0xf3e070 -> Node0xf3e0e0;
	Node0xf3e0e0 -> Node0xf3e150;
	Node0xf3e150 -> Node0xf3e1c0;
	Node0xf3e1c0 -> Node0xede268;
	Node0xede268 -> Node0xf3e660;
	Node0xf3e660 -> Node0xf3e6b0;
edge [color=red]
	Node0xf3d400 -> Node0xf3dbb0;
	Node0xf3dcc0 -> Node0xf3dd30;
	Node0xf3dc20 -> Node0xf3dda0;
	Node0xf3d470 -> Node0xf3de10;
	Node0xf3dd30 -> Node0xf3de10;
	Node0xf3de10 -> Node0xf3deb0;
	Node0xf3df20 -> Node0xf3df90;
	Node0xf3d470 -> Node0xf3df90;
	Node0xf3df90 -> Node0xf3e000;
	Node0xf3d530 -> Node0xf3e000;
	Node0xf3e000 -> Node0xf3e070;
	Node0xf3dbb0 -> Node0xf3e070;
	Node0xf3e070 -> Node0xf3e0e0;
	Node0xf3dda0 -> Node0xf3e0e0;
	Node0xf3e0e0 -> Node0xf3e150;
	Node0xf3deb0 -> Node0xf3e150;
	Node0xf3d400 -> Node0xf3e1c0;
	Node0xf3e150 -> Node0xf3e1c0;
	Node0xf3e1c0 -> Node0xede268;
	Node0xede268 -> Node0xf3e660;
}
