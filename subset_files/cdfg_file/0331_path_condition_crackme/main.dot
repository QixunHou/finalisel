digraph "DFG for'main' function" {
	Node0x861e78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x861ef8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x861f88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x8623e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x8624c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x8625e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x862820[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x8628d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x863848[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x863ed0[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x863f40[shape=record, label="  %9 = shl i32 %6, 1"];
	Node0x863fb0[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x864020[shape=record, label="  %11 = and i32 %6, %10"];
	Node0x864090[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x864100[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x864170[shape=record, label="  %14 = shl i32 %10, 1"];
	Node0x8641e0[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x864250[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x8642c0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x864330[shape=record, label="  %18 = shl i32 %15, 1"];
	Node0x8643a0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x864410[shape=record, label="  %20 = xor i32 %6, 2147483647"];
	Node0x864480[shape=record, label="  %21 = and i32 %20, %7"];
	Node0x8644f0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x864560[shape=record, label="  %23 = sub i32 2, %9"];
	Node0x8645d0[shape=record, label="  %24 = sub i32 %23, %7"];
	Node0x864640[shape=record, label="  %25 = sub i32 %24, %14"];
	Node0x8646b0[shape=record, label="  %26 = add i32 %25, %15"];
	Node0x864720[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x864790[shape=record, label="  %28 = sub i32 %27, %22"];
	Node0x864800[shape=record, label="  %29 = add i32 %28, %12"];
	Node0x864870[shape=record, label="  %30 = add i32 %29, %18"];
	Node0x8648e0[shape=record, label="  %31 = add i32 %30, %13"];
	Node0x864950[shape=record, label="  %32 = add i32 %31, %19"];
	Node0x864bd0[shape=record, label="  %33 = icmp eq i32 %32, %8"];
	Node0x8029d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x864c60[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x864eb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x865018[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x8650d8[shape=record, label="  ret i32 0"];
	Node0x861e78 -> Node0x861ef8;
	Node0x861ef8 -> Node0x861f88;
	Node0x861f88 -> Node0x8623e8;
	Node0x8623e8 -> Node0x8624c8;
	Node0x8624c8 -> Node0x8625e8;
	Node0x8625e8 -> Node0x862820;
	Node0x862820 -> Node0x8628d8;
	Node0x8628d8 -> Node0x863848;
	Node0x863848 -> Node0x863ed0;
	Node0x863ed0 -> Node0x863f40;
	Node0x863f40 -> Node0x863fb0;
	Node0x863fb0 -> Node0x864020;
	Node0x864020 -> Node0x864090;
	Node0x864090 -> Node0x864100;
	Node0x864100 -> Node0x864170;
	Node0x864170 -> Node0x8641e0;
	Node0x8641e0 -> Node0x864250;
	Node0x864250 -> Node0x8642c0;
	Node0x8642c0 -> Node0x864330;
	Node0x864330 -> Node0x8643a0;
	Node0x8643a0 -> Node0x864410;
	Node0x864410 -> Node0x864480;
	Node0x864480 -> Node0x8644f0;
	Node0x8644f0 -> Node0x864560;
	Node0x864560 -> Node0x8645d0;
	Node0x8645d0 -> Node0x864640;
	Node0x864640 -> Node0x8646b0;
	Node0x8646b0 -> Node0x864720;
	Node0x864720 -> Node0x864790;
	Node0x864790 -> Node0x864800;
	Node0x864800 -> Node0x864870;
	Node0x864870 -> Node0x8648e0;
	Node0x8648e0 -> Node0x864950;
	Node0x864950 -> Node0x864bd0;
	Node0x864bd0 -> Node0x8029d8;
	Node0x8029d8 -> Node0x864c60;
	Node0x864c60 -> Node0x864eb8;
	Node0x864eb8 -> Node0x865018;
	Node0x865018 -> Node0x8650d8;
edge [color=red]
	Node0x861e78 -> Node0x861f88;
	Node0x861f88 -> Node0x8623e8;
	Node0x861ef8 -> Node0x8624c8;
	Node0x8624c8 -> Node0x8625e8;
	Node0x861e78 -> Node0x862820;
	Node0x861ef8 -> Node0x862820;
	Node0x861e78 -> Node0x8628d8;
	Node0x861ef8 -> Node0x863848;
	Node0x8628d8 -> Node0x863ed0;
	Node0x8628d8 -> Node0x863f40;
	Node0x863848 -> Node0x863fb0;
	Node0x8628d8 -> Node0x864020;
	Node0x863fb0 -> Node0x864020;
	Node0x864020 -> Node0x864090;
	Node0x864090 -> Node0x864100;
	Node0x863fb0 -> Node0x864170;
	Node0x863848 -> Node0x8641e0;
	Node0x8628d8 -> Node0x8641e0;
	Node0x863848 -> Node0x864250;
	Node0x8628d8 -> Node0x864250;
	Node0x864250 -> Node0x8642c0;
	Node0x8641e0 -> Node0x864330;
	Node0x864330 -> Node0x8643a0;
	Node0x8628d8 -> Node0x864410;
	Node0x864410 -> Node0x864480;
	Node0x863848 -> Node0x864480;
	Node0x864480 -> Node0x8644f0;
	Node0x863f40 -> Node0x864560;
	Node0x864560 -> Node0x8645d0;
	Node0x863848 -> Node0x8645d0;
	Node0x8645d0 -> Node0x864640;
	Node0x864170 -> Node0x864640;
	Node0x864640 -> Node0x8646b0;
	Node0x8641e0 -> Node0x8646b0;
	Node0x8646b0 -> Node0x864720;
	Node0x8642c0 -> Node0x864720;
	Node0x864720 -> Node0x864790;
	Node0x8644f0 -> Node0x864790;
	Node0x864790 -> Node0x864800;
	Node0x864090 -> Node0x864800;
	Node0x864800 -> Node0x864870;
	Node0x864330 -> Node0x864870;
	Node0x864870 -> Node0x8648e0;
	Node0x864100 -> Node0x8648e0;
	Node0x8648e0 -> Node0x864950;
	Node0x8643a0 -> Node0x864950;
	Node0x864950 -> Node0x864bd0;
	Node0x863ed0 -> Node0x864bd0;
	Node0x864bd0 -> Node0x8029d8;
	Node0x8029d8 -> Node0x864c60;
	Node0x8624c8 -> Node0x864eb8;
	Node0x861f88 -> Node0x865018;
}
