; ModuleID = '../.././c_source_file/0457_path_condition_crackme.c'
source_filename = "../.././c_source_file/0457_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %8, %1
  %10 = xor i32 %5, -1
  %11 = and i32 %10, %4
  %12 = xor i32 %4, %3
  %13 = or i32 %11, %12
  %14 = shl i32 %13, 1
  %15 = add i32 %14, %9
  %16 = sub i32 0, %15
  %17 = xor i32 %0, -1
  %18 = and i32 %2, %1
  %19 = xor i32 %18, -1
  %20 = and i32 %19, %17
  %21 = shl i32 %20, 2
  %22 = and i32 %2, %0
  %23 = xor i32 %22, -1
  %24 = xor i32 %1, %0
  %25 = and i32 %24, %23
  %26 = or i32 %8, %1
  %27 = and i32 %7, %1
  %28 = xor i32 %27, -1
  %29 = xor i32 %22, %28
  %30 = xor i32 %8, -1
  %31 = and i32 %30, %1
  %32 = or i32 %7, %1
  %33 = xor i32 %32, -1
  %34 = or i32 %33, %0
  %35 = or i32 %22, %1
  %36 = and i32 %1, %0
  %37 = xor i32 %36, -1
  %38 = xor i32 %2, %1
  %39 = and i32 %38, %37
  %40 = or i32 %7, %0
  %41 = xor i32 %40, -1
  %42 = add i32 %40, 1
  %43 = xor i32 %2, %0
  %44 = xor i32 %43, -1
  %45 = and i32 %44, %37
  %46 = xor i32 %1, -1
  %47 = and i32 %46, %2
  %48 = and i32 %47, %0
  %49 = or i32 %46, %2
  %50 = and i32 %49, %17
  %51 = xor i32 %48, -1
  %52 = xor i32 %50, %51
  %53 = and i32 %18, %17
  %54 = and i32 %38, %0
  %55 = or i32 %53, %54
  %56 = shl i32 %55, 2
  %57 = xor i32 %28, %0
  %58 = or i32 %43, %24
  %59 = or i32 %2, %1
  %60 = or i32 %59, %0
  %61 = or i32 %24, %2
  %62 = and i32 %18, %0
  %63 = and i32 %59, %17
  %64 = or i32 %62, %63
  %65 = and i32 %38, %17
  %66 = or i32 %62, %65
  %67 = xor i32 %54, -1
  %68 = xor i32 %53, %67
  %69 = xor i32 %32, %36
  %70 = xor i32 %59, %0
  %71 = or i32 %46, %0
  %72 = and i32 %43, %71
  %73 = or i32 %44, %46
  %74 = or i32 %2, %0
  %75 = xor i32 %74, -1
  %76 = xor i32 %24, -1
  %77 = or i32 %75, %76
  %78 = and i32 %47, %17
  %79 = or i32 %38, %17
  %80 = xor i32 %78, %79
  %81 = and i32 %46, %0
  %82 = xor i32 %81, -1
  %83 = and i32 %44, %82
  %84 = xor i32 %38, -1
  %85 = or i32 %36, %84
  %86 = shl i32 %85, 1
  %87 = xor i32 %79, -1
  %88 = or i32 %78, %87
  %89 = and i32 %24, %2
  %90 = xor i32 %59, %36
  %91 = and i32 %37, %2
  %92 = and i32 %84, %37
  %93 = or i32 %22, %27
  %94 = xor i32 %71, -1
  %95 = or i32 %22, %94
  %96 = or i32 %43, %36
  %97 = or i32 %27, %0
  %98 = xor i32 %74, %36
  %99 = shl i32 %28, 1
  %100 = and i32 %71, %7
  %101 = and i32 %71, %2
  %102 = or i32 %36, %7
  %103 = shl i32 %102, 1
  %104 = and i32 %32, %0
  %105 = or i32 %24, %75
  %106 = xor i32 %81, %19
  %107 = or i32 %36, %44
  %108 = shl i32 %107, 2
  %109 = xor i32 %41, %1
  %110 = and i32 %7, %37
  %111 = shl i32 %110, 1
  %112 = and i32 %84, %0
  %113 = or i32 %8, %24
  %114 = or i32 %1, %0
  %115 = xor i32 %22, %114
  %116 = shl i32 %115, 1
  %117 = xor i32 %22, %1
  %118 = and i32 %19, %0
  %119 = and i32 %28, %17
  %120 = or i32 %22, %46
  %121 = xor i32 %62, -1
  %122 = xor i32 %70, %121
  %123 = and i32 %43, %1
  %124 = shl i32 %123, 1
  %125 = add i32 %2, 1
  %126 = or i32 %24, %41
  %127 = xor i32 %114, %2
  %128 = and i32 %40, %76
  %129 = and i32 %84, %17
  %130 = shl i32 %129, 1
  %131 = or i32 %38, %0
  %132 = or i32 %18, %17
  %133 = xor i32 %38, %0
  %134 = xor i32 %133, %51
  %135 = xor i32 %114, -1
  %136 = or i32 %84, %135
  %137 = shl i32 %84, 1
  %138 = and i32 %30, %76
  %139 = add i32 %81, 1
  %140 = or i32 %36, %75
  %141 = shl i32 %140, 1
  %142 = and i32 %40, %46
  %143 = xor i32 %59, -1
  %144 = or i32 %22, %143
  %145 = xor i32 %131, 2147483647
  %146 = or i32 %145, %48
  %147 = shl i32 %146, 1
  %148 = or i32 %135, %2
  %149 = and i32 %43, %37
  %150 = or i32 %81, %44
  %151 = add i32 %22, 1
  %152 = and i32 %74, %24
  %153 = or i32 %7, %76
  %154 = or i32 %8, %18
  %155 = shl i32 %154, 2
  %156 = or i32 %32, %17
  %157 = shl i32 %156, 1
  %158 = xor i32 %23, %1
  %159 = and i32 %32, %17
  %160 = or i32 %41, %46
  %161 = xor i32 %84, %0
  %162 = and i32 %114, %44
  %163 = or i32 %38, %94
  %164 = and i32 %49, %0
  %165 = or i32 %78, %164
  %166 = and i32 %23, %76
  %167 = or i32 %81, %84
  %168 = or i32 %143, %17
  %169 = and i32 %43, %76
  %170 = or i32 %84, %0
  %171 = and i32 %24, %7
  %172 = or i32 %36, %33
  %173 = xor i32 %32, %0
  %174 = or i32 %44, %94
  %175 = or i32 %75, %46
  %176 = or i32 %81, %2
  %177 = xor i32 %63, %121
  %178 = xor i32 %40, %36
  %179 = or i32 %24, %7
  %180 = xor i32 %164, -1
  %181 = xor i32 %78, %180
  %182 = shl i32 %135, 1
  %183 = xor i32 %82, %2
  %184 = or i32 %43, %81
  %185 = shl i32 %184, 1
  %186 = or i32 %94, %2
  %187 = xor i32 %48, %131
  %188 = and i32 %7, %76
  %189 = xor i32 %81, %28
  %190 = and i32 %38, %71
  %191 = shl i32 %190, 1
  %192 = or i32 %44, %135
  %193 = xor i32 %18, %0
  %194 = or i32 %7, %94
  %195 = add i32 %8, 1
  %196 = and i32 %44, %1
  %197 = xor i32 %30, %1
  %198 = shl i32 %59, 1
  %199 = or i32 %32, %0
  %200 = shl i32 %199, 1
  %201 = or i32 %44, %76
  %202 = and i32 %43, %24
  %203 = shl i32 %202, 2
  %204 = xor i32 %62, %133
  %205 = or i32 %84, %94
  %206 = and i32 %114, %2
  %207 = or i32 %27, %17
  %208 = xor i32 %8, %32
  %209 = shl i32 %81, 1
  %210 = and i32 %44, %46
  %211 = or i32 %28, %17
  %212 = shl i32 %211, 1
  %213 = xor i32 %40, %1
  %214 = xor i32 %75, %1
  %215 = xor i32 %27, %0
  %216 = or i32 %44, %1
  %217 = or i32 %33, %17
  %218 = xor i32 %135, %2
  %219 = and i32 %84, %82
  %220 = or i32 %62, %70
  %221 = or i32 %38, %36
  %222 = or i32 %59, %17
  %223 = or i32 %18, %81
  %224 = xor i32 %143, %0
  %225 = or i32 %43, %46
  %226 = xor i32 %74, %1
  %227 = shl i32 %226, 1
  %228 = or i32 %48, %133
  %229 = shl i32 %228, 1
  %230 = or i32 %43, %1
  %231 = shl i32 %230, 1
  %232 = or i32 %24, %44
  %233 = xor i32 %71, %2
  %234 = and i32 %74, %76
  %235 = and i32 %43, %82
  %236 = or i32 %38, %135
  %237 = or i32 %81, %7
  %238 = or i32 %22, %76
  %239 = or i32 %8, %76
  %240 = and i32 %59, %0
  %241 = or i32 %53, %240
  %242 = xor i32 %0, 2147483647
  %243 = xor i32 %242, %49
  %244 = xor i32 %243, %48
  %245 = xor i32 %94, %2
  %246 = xor i32 %33, %0
  %247 = or i32 %36, %41
  %248 = shl i32 %247, 1
  %249 = and i32 %114, %7
  %250 = and i32 %74, %46
  %251 = and i32 %43, %114
  %252 = and i32 %40, %1
  %253 = or i32 %22, %135
  %254 = or i32 %48, %50
  %255 = or i32 %7, %135
  %256 = and i32 %143, %17
  %257 = mul i32 %256, 21
  %258 = and i32 %27, %17
  %259 = mul i32 %258, -6
  %260 = and i32 %143, %0
  %261 = mul i32 %260, 24
  %262 = and i32 %27, %0
  %263 = and i32 %33, %17
  %264 = mul i32 %53, 31
  %265 = and i32 %33, %0
  %266 = mul i32 %265, 20
  %267 = or i32 %5, %3
  %268 = or i32 %267, %4
  %269 = and i32 %5, %4
  %270 = or i32 %4, %3
  %271 = xor i32 %270, -1
  %272 = or i32 %269, %271
  %273 = and i32 %4, %3
  %274 = xor i32 %273, %5
  %275 = or i32 %10, %4
  %276 = xor i32 %275, %273
  %277 = xor i32 %5, %3
  %278 = and i32 %277, %270
  %279 = or i32 %12, %10
  %280 = or i32 %277, %273
  %281 = or i32 %273, %5
  %282 = or i32 %5, %4
  %283 = xor i32 %282, %273
  %284 = xor i32 %273, -1
  %285 = xor i32 %284, %5
  %286 = xor i32 %282, -1
  %287 = add i32 %282, 1
  %288 = xor i32 %3, -1
  %289 = or i32 %288, %4
  %290 = xor i32 %289, -1
  %291 = or i32 %269, %290
  %292 = xor i32 %11, -1
  %293 = and i32 %12, %292
  %294 = and i32 %5, %3
  %295 = and i32 %294, %4
  %296 = xor i32 %277, %4
  %297 = xor i32 %295, %296
  %298 = xor i32 %5, %4
  %299 = xor i32 %298, -1
  %300 = and i32 %270, %299
  %301 = shl i32 %300, 2
  %302 = and i32 %288, %5
  %303 = or i32 %11, %302
  %304 = xor i32 %275, %3
  %305 = and i32 %288, %4
  %306 = xor i32 %305, -1
  %307 = xor i32 %12, -1
  %308 = and i32 %292, %307
  %309 = or i32 %298, %305
  %310 = or i32 %277, %271
  %311 = xor i32 %275, -1
  %312 = or i32 %273, %311
  %313 = xor i32 %269, -1
  %314 = and i32 %313, %307
  %315 = and i32 %275, %288
  %316 = xor i32 %267, %4
  %317 = xor i32 %316, 2147483647
  %318 = xor i32 %317, %295
  %319 = shl i32 %318, 1
  %320 = or i32 %299, %290
  %321 = or i32 %305, %5
  %322 = and i32 %10, %3
  %323 = xor i32 %322, %4
  %324 = or i32 %299, %271
  %325 = or i32 %273, %299
  %326 = and i32 %298, %284
  %327 = and i32 %12, %313
  %328 = or i32 %299, %3
  %329 = or i32 %269, %3
  %330 = shl i32 %329, 1
  %331 = xor i32 %322, -1
  %332 = xor i32 %305, %331
  %333 = or i32 %311, %307
  %334 = xor i32 %294, -1
  %335 = xor i32 %334, %4
  %336 = or i32 %302, %273
  %337 = shl i32 %336, 2
  %338 = or i32 %331, %4
  %339 = and i32 %299, %284
  %340 = xor i32 %269, %3
  %341 = and i32 %292, %3
  %342 = xor i32 %4, -1
  %343 = and i32 %331, %342
  %344 = or i32 %334, %4
  %345 = and i32 %302, %4
  %346 = or i32 %345, %296
  %347 = shl i32 %342, 1
  %348 = or i32 %277, %4
  %349 = and i32 %12, %299
  %350 = or i32 %12, %286
  %351 = xor i32 %267, -1
  %352 = and i32 %351, %342
  %353 = mul i32 %352, 13
  %354 = and i32 %322, %342
  %355 = and i32 %351, %4
  %356 = and i32 %322, %4
  %357 = and i32 %302, %342
  %358 = and i32 %294, %342
  %359 = shl i32 %295, 4
  %360 = add i32 %192, %255
  %361 = add i32 %360, %169
  %362 = add i32 %361, %131
  %363 = sub i32 %362, %120
  %364 = add i32 %363, %354
  %365 = add i32 %364, %358
  %366 = add i32 %365, %314
  %367 = mul i32 %366, 3
  %368 = sub i32 %249, %100
  %369 = add i32 %368, %251
  %370 = sub i32 %369, %239
  %371 = sub i32 %370, %72
  %372 = sub i32 %371, %338
  %373 = mul i32 %372, 5
  %374 = or i32 %357, %356
  %375 = shl i32 %374, 3
  %376 = add i32 %345, %263
  %377 = mul i32 %376, 11
  %378 = add i32 %62, %262
  %379 = mul i32 %378, 22
  %380 = sub i32 -2, %24
  %381 = add i32 %380, %43
  %382 = add i32 %381, %40
  %383 = add i32 %382, %89
  %384 = add i32 %383, %246
  %385 = add i32 %384, %224
  %386 = add i32 %385, %207
  %387 = add i32 %386, %168
  %388 = add i32 %387, %31
  %389 = add i32 %388, %244
  %390 = shl i32 %389, 1
  %391 = sub i32 1, %1
  %392 = add i32 %391, %2
  %393 = add i32 %392, %125
  %394 = add i32 %393, %139
  %395 = sub i32 %394, %71
  %396 = add i32 %395, %94
  %397 = add i32 %396, %42
  %398 = add i32 %397, %27
  %399 = add i32 %398, %61
  %400 = sub i32 %399, %91
  %401 = sub i32 %400, %101
  %402 = sub i32 %401, %74
  %403 = add i32 %402, %127
  %404 = add i32 %403, %38
  %405 = add i32 %404, %148
  %406 = add i32 %405, %151
  %407 = add i32 %406, %153
  %408 = add i32 %407, %171
  %409 = add i32 %408, %176
  %410 = sub i32 %409, %179
  %411 = sub i32 %410, %182
  %412 = add i32 %411, %183
  %413 = sub i32 %412, %22
  %414 = sub i32 %413, %186
  %415 = add i32 %414, %188
  %416 = add i32 %415, %194
  %417 = add i32 %416, %195
  %418 = add i32 %417, %206
  %419 = add i32 %418, %75
  %420 = sub i32 %419, %209
  %421 = sub i32 %420, %32
  %422 = sub i32 %421, %218
  %423 = sub i32 %422, %233
  %424 = add i32 %423, %237
  %425 = sub i32 %424, %245
  %426 = add i32 %425, %25
  %427 = add i32 %426, %26
  %428 = sub i32 %427, %29
  %429 = add i32 %428, %34
  %430 = add i32 %429, %35
  %431 = add i32 %430, %39
  %432 = sub i32 %431, %45
  %433 = sub i32 %432, %57
  %434 = sub i32 %433, %58
  %435 = sub i32 %434, %60
  %436 = add i32 %435, %69
  %437 = add i32 %436, %70
  %438 = add i32 %437, %73
  %439 = add i32 %438, %77
  %440 = sub i32 %439, %83
  %441 = sub i32 %440, %90
  %442 = sub i32 %441, %92
  %443 = add i32 %442, %93
  %444 = add i32 %443, %95
  %445 = add i32 %444, %96
  %446 = sub i32 %445, %97
  %447 = sub i32 %446, %98
  %448 = sub i32 %447, %99
  %449 = sub i32 %448, %103
  %450 = add i32 %449, %104
  %451 = sub i32 %450, %105
  %452 = sub i32 %451, %106
  %453 = add i32 %452, %109
  %454 = sub i32 %453, %111
  %455 = add i32 %454, %79
  %456 = sub i32 %455, %112
  %457 = add i32 %456, %113
  %458 = sub i32 %457, %117
  %459 = add i32 %458, %65
  %460 = add i32 %459, %118
  %461 = add i32 %460, %119
  %462 = add i32 %461, %126
  %463 = add i32 %462, %128
  %464 = add i32 %463, %132
  %465 = sub i32 %464, %136
  %466 = sub i32 %465, %137
  %467 = add i32 %466, %138
  %468 = add i32 %467, %142
  %469 = add i32 %468, %144
  %470 = sub i32 %469, %149
  %471 = sub i32 %470, %150
  %472 = add i32 %471, %152
  %473 = add i32 %472, %158
  %474 = add i32 %473, %159
  %475 = add i32 %474, %160
  %476 = add i32 %475, %161
  %477 = add i32 %476, %162
  %478 = sub i32 %477, %163
  %479 = add i32 %478, %166
  %480 = sub i32 %479, %167
  %481 = add i32 %480, %170
  %482 = sub i32 %481, %172
  %483 = add i32 %482, %173
  %484 = add i32 %483, %174
  %485 = add i32 %484, %175
  %486 = sub i32 %485, %178
  %487 = add i32 %486, %189
  %488 = sub i32 %487, %193
  %489 = add i32 %488, %196
  %490 = sub i32 %489, %197
  %491 = sub i32 %490, %198
  %492 = sub i32 %491, %201
  %493 = sub i32 %492, %205
  %494 = sub i32 %493, %208
  %495 = add i32 %494, %210
  %496 = add i32 %495, %213
  %497 = sub i32 %496, %214
  %498 = add i32 %497, %63
  %499 = sub i32 %498, %215
  %500 = sub i32 %499, %216
  %501 = sub i32 %500, %217
  %502 = add i32 %501, %219
  %503 = sub i32 %502, %221
  %504 = sub i32 %503, %222
  %505 = sub i32 %504, %223
  %506 = sub i32 %505, %225
  %507 = add i32 %506, %232
  %508 = sub i32 %507, %234
  %509 = add i32 %508, %235
  %510 = sub i32 %509, %236
  %511 = add i32 %510, %238
  %512 = add i32 %511, %250
  %513 = add i32 %512, %252
  %514 = add i32 %513, %54
  %515 = add i32 %514, %253
  %516 = add i32 %515, %4
  %517 = add i32 %516, %21
  %518 = add i32 %517, %52
  %519 = sub i32 %518, %64
  %520 = sub i32 %519, %66
  %521 = sub i32 %520, %68
  %522 = sub i32 %521, %80
  %523 = sub i32 %522, %86
  %524 = add i32 %523, %88
  %525 = sub i32 %524, %108
  %526 = sub i32 %525, %116
  %527 = add i32 %526, %122
  %528 = sub i32 %527, %124
  %529 = sub i32 %528, %130
  %530 = sub i32 %529, %134
  %531 = sub i32 %530, %141
  %532 = sub i32 %531, %155
  %533 = sub i32 %532, %157
  %534 = sub i32 %533, %165
  %535 = sub i32 %534, %177
  %536 = sub i32 %535, %181
  %537 = sub i32 %536, %185
  %538 = sub i32 %537, %187
  %539 = sub i32 %538, %191
  %540 = sub i32 %539, %200
  %541 = sub i32 %540, %203
  %542 = add i32 %541, %204
  %543 = sub i32 %542, %212
  %544 = sub i32 %543, %220
  %545 = sub i32 %544, %227
  %546 = sub i32 %545, %231
  %547 = sub i32 %546, %241
  %548 = sub i32 %547, %248
  %549 = sub i32 %548, %254
  %550 = add i32 %549, %257
  %551 = add i32 %550, %259
  %552 = add i32 %551, %261
  %553 = add i32 %552, %264
  %554 = add i32 %553, %266
  %555 = add i32 %554, %306
  %556 = sub i32 %555, %347
  %557 = sub i32 %556, %289
  %558 = sub i32 %557, %56
  %559 = sub i32 %558, %229
  %560 = add i32 %559, %274
  %561 = sub i32 %560, %279
  %562 = add i32 %561, %281
  %563 = sub i32 %562, %285
  %564 = add i32 %563, %287
  %565 = sub i32 %564, %321
  %566 = add i32 %565, %379
  %567 = sub i32 %566, %147
  %568 = add i32 %567, %268
  %569 = sub i32 %568, %272
  %570 = add i32 %569, %276
  %571 = sub i32 %570, %278
  %572 = add i32 %571, %280
  %573 = add i32 %572, %283
  %574 = add i32 %573, %291
  %575 = add i32 %574, %293
  %576 = add i32 %575, %303
  %577 = add i32 %576, %304
  %578 = sub i32 %577, %308
  %579 = sub i32 %578, %309
  %580 = sub i32 %579, %310
  %581 = sub i32 %580, %312
  %582 = add i32 %581, %315
  %583 = sub i32 %582, %320
  %584 = add i32 %583, %323
  %585 = sub i32 %584, %324
  %586 = add i32 %585, %325
  %587 = add i32 %586, %326
  %588 = sub i32 %587, %327
  %589 = add i32 %588, %328
  %590 = sub i32 %589, %332
  %591 = sub i32 %590, %333
  %592 = add i32 %591, %335
  %593 = add i32 %592, %316
  %594 = sub i32 %593, %339
  %595 = add i32 %594, %340
  %596 = add i32 %595, %341
  %597 = add i32 %596, %343
  %598 = sub i32 %597, %344
  %599 = sub i32 %598, %348
  %600 = add i32 %599, %349
  %601 = sub i32 %600, %350
  %602 = add i32 %601, %355
  %603 = add i32 %602, %297
  %604 = sub i32 %603, %301
  %605 = sub i32 %604, %330
  %606 = sub i32 %605, %337
  %607 = add i32 %606, %346
  %608 = add i32 %607, %353
  %609 = add i32 %608, %359
  %610 = add i32 %609, %375
  %611 = add i32 %610, %377
  %612 = sub i32 %611, %319
  %613 = add i32 %612, %373
  %614 = add i32 %613, %367
  %615 = add i32 %614, %390
  %616 = icmp eq i32 %615, %16
  %617 = select i1 %616, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %618 = tail call i32 @puts(i8* nonnull dereferenceable(1) %617)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
