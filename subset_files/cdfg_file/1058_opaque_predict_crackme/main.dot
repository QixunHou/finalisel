digraph "DFG for'main' function" {
	Node0x77b278[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x77b2f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x77b388[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x77b3e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x77b868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x77b948[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x77ba48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x77bb08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x77bbb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x77be18[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x77bed8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x77c038[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x77c098[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x781d40[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x781f48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7820a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7821b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x782278[shape=record, label="  ret i32 0"];
	Node0x77b278 -> Node0x77b2f8;
	Node0x77b2f8 -> Node0x77b388;
	Node0x77b388 -> Node0x77b3e8;
	Node0x77b3e8 -> Node0x77b868;
	Node0x77b868 -> Node0x77b948;
	Node0x77b948 -> Node0x77ba48;
	Node0x77ba48 -> Node0x77bb08;
	Node0x77bb08 -> Node0x77bbb8;
	Node0x77bbb8 -> Node0x77be18;
	Node0x77be18 -> Node0x77bed8;
	Node0x77bed8 -> Node0x77c038;
	Node0x77c038 -> Node0x77c098;
	Node0x77c098 -> Node0x781d40;
	Node0x781d40 -> Node0x781f48;
	Node0x781f48 -> Node0x7820a8;
	Node0x7820a8 -> Node0x7821b8;
	Node0x7821b8 -> Node0x782278;
edge [color=red]
	Node0x77b278 -> Node0x77b3e8;
	Node0x77b3e8 -> Node0x77b868;
	Node0x77b2f8 -> Node0x77b948;
	Node0x77b948 -> Node0x77ba48;
	Node0x77b388 -> Node0x77bb08;
	Node0x77bb08 -> Node0x77bbb8;
	Node0x77b278 -> Node0x77be18;
	Node0x77b2f8 -> Node0x77be18;
	Node0x77b388 -> Node0x77be18;
	Node0x77b278 -> Node0x77bed8;
	Node0x77b2f8 -> Node0x77c038;
	Node0x77b388 -> Node0x77c098;
	Node0x77bed8 -> Node0x781d40;
	Node0x77c038 -> Node0x781d40;
	Node0x77c098 -> Node0x781d40;
	Node0x77bb08 -> Node0x781f48;
	Node0x77b948 -> Node0x7820a8;
	Node0x77b3e8 -> Node0x7821b8;
}
