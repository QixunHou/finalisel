digraph "DFG for'crackme' function" {
	Node0x2456c40[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x2456ce0[shape=record, label="  %4 = mul i32 %3, 3"];
	Node0x2456da0[shape=record, label="  %5 = xor i32 %1, %0"];
	Node0x2456e10[shape=record, label="  %6 = or i32 %1, %0"];
	Node0x2456e80[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x2456ef0[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x2456f60[shape=record, label="  %9 = and i32 %1, %0"];
	Node0x2456fd0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x2457040[shape=record, label="  %11 = or i32 %3, %0"];
	Node0x24570e0[shape=record, label="  %12 = shl i32 %5, 2"];
	Node0x2457180[shape=record, label="  %13 = xor i32 %12, -4"];
	Node0x24571f0[shape=record, label="  %14 = xor i32 %6, -1"];
	Node0x2457290[shape=record, label="  %15 = mul i32 %14, -9"];
	Node0x2457300[shape=record, label="  %16 = xor i32 %11, -1"];
	Node0x24573a0[shape=record, label="  %17 = mul i32 %16, -5"];
	Node0x2457410[shape=record, label="  %18 = shl i32 %9, 3"];
	Node0x2457480[shape=record, label="  %19 = sub i32 -5, %0"];
	Node0x24574f0[shape=record, label="  %20 = add i32 %19, %8"];
	Node0x2457560[shape=record, label="  %21 = add i32 %20, %1"];
	Node0x24575d0[shape=record, label="  %22 = sub i32 %21, %5"];
	Node0x2457640[shape=record, label="  %23 = add i32 %22, %10"];
	Node0x24576b0[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x2457720[shape=record, label="  %25 = sub i32 %24, %7"];
	Node0x2457790[shape=record, label="  %26 = add i32 %25, %15"];
	Node0x2457800[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x2457870[shape=record, label="  %28 = sub i32 %27, %18"];
	Node0x24578e0[shape=record, label="  %29 = add i32 %28, %13"];
	Node0x2457950[shape=record, label="  %30 = icmp eq i32 %4, %29"];
	Node0x23f7268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2457df0[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x2458050[shape=record, label="  ret void"];
	Node0x2456c40 -> Node0x2456ce0;
	Node0x2456ce0 -> Node0x2456da0;
	Node0x2456da0 -> Node0x2456e10;
	Node0x2456e10 -> Node0x2456e80;
	Node0x2456e80 -> Node0x2456ef0;
	Node0x2456ef0 -> Node0x2456f60;
	Node0x2456f60 -> Node0x2456fd0;
	Node0x2456fd0 -> Node0x2457040;
	Node0x2457040 -> Node0x24570e0;
	Node0x24570e0 -> Node0x2457180;
	Node0x2457180 -> Node0x24571f0;
	Node0x24571f0 -> Node0x2457290;
	Node0x2457290 -> Node0x2457300;
	Node0x2457300 -> Node0x24573a0;
	Node0x24573a0 -> Node0x2457410;
	Node0x2457410 -> Node0x2457480;
	Node0x2457480 -> Node0x24574f0;
	Node0x24574f0 -> Node0x2457560;
	Node0x2457560 -> Node0x24575d0;
	Node0x24575d0 -> Node0x2457640;
	Node0x2457640 -> Node0x24576b0;
	Node0x24576b0 -> Node0x2457720;
	Node0x2457720 -> Node0x2457790;
	Node0x2457790 -> Node0x2457800;
	Node0x2457800 -> Node0x2457870;
	Node0x2457870 -> Node0x24578e0;
	Node0x24578e0 -> Node0x2457950;
	Node0x2457950 -> Node0x23f7268;
	Node0x23f7268 -> Node0x2457df0;
	Node0x2457df0 -> Node0x2458050;
edge [color=red]
	Node0x2456c40 -> Node0x2456ce0;
	Node0x2456e10 -> Node0x2456e80;
	Node0x2456f60 -> Node0x2456fd0;
	Node0x2456c40 -> Node0x2457040;
	Node0x2456da0 -> Node0x24570e0;
	Node0x24570e0 -> Node0x2457180;
	Node0x2456e10 -> Node0x24571f0;
	Node0x24571f0 -> Node0x2457290;
	Node0x2457040 -> Node0x2457300;
	Node0x2457300 -> Node0x24573a0;
	Node0x2456f60 -> Node0x2457410;
	Node0x2457480 -> Node0x24574f0;
	Node0x2456ef0 -> Node0x24574f0;
	Node0x24574f0 -> Node0x2457560;
	Node0x2457560 -> Node0x24575d0;
	Node0x2456da0 -> Node0x24575d0;
	Node0x24575d0 -> Node0x2457640;
	Node0x2456fd0 -> Node0x2457640;
	Node0x2457640 -> Node0x24576b0;
	Node0x2457040 -> Node0x24576b0;
	Node0x24576b0 -> Node0x2457720;
	Node0x2456e80 -> Node0x2457720;
	Node0x2457720 -> Node0x2457790;
	Node0x2457290 -> Node0x2457790;
	Node0x2457790 -> Node0x2457800;
	Node0x24573a0 -> Node0x2457800;
	Node0x2457800 -> Node0x2457870;
	Node0x2457410 -> Node0x2457870;
	Node0x2457870 -> Node0x24578e0;
	Node0x2457180 -> Node0x24578e0;
	Node0x2456ce0 -> Node0x2457950;
	Node0x24578e0 -> Node0x2457950;
	Node0x2457950 -> Node0x23f7268;
	Node0x23f7268 -> Node0x2457df0;
}
