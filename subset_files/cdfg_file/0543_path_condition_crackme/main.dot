digraph "DFG for'main' function" {
	Node0x22f8a08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x22f8a88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x22f8b18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x22f8b78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x22f8c28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x22f9058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22f9138[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x22f9238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22f92f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x22f93a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x22f9468[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x22f9518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x22f3ab0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x22f9718[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x22fa688[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x22facf8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x22fad58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x22fadd0[shape=record, label="  %14 = and i32 %12, %11"];
	Node0x22fae40[shape=record, label="  %15 = or i32 %13, %10"];
	Node0x22faeb0[shape=record, label="  %16 = sub i32 %15, %14"];
	Node0x22faf20[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0x22faf90[shape=record, label="  %18 = and i32 %11, %17"];
	Node0x22fb000[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x22fb070[shape=record, label="  %20 = shl i32 %11, 1"];
	Node0x22fb0e0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x22fb150[shape=record, label="  %22 = or i32 %12, %11"];
	Node0x22fb1c0[shape=record, label="  %23 = shl i32 %22, 2"];
	Node0x22fb230[shape=record, label="  %24 = or i32 %23, 3"];
	Node0x22fb2a0[shape=record, label="  %25 = shl i32 %18, 1"];
	Node0x22fb310[shape=record, label="  %26 = xor i32 %10, 2147483647"];
	Node0x22fb380[shape=record, label="  %27 = and i32 %13, %26"];
	Node0x22fb3f0[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0x22fb460[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x22fb4d0[shape=record, label="  %30 = xor i32 %28, -1"];
	Node0x22fb540[shape=record, label="  %31 = shl i32 %15, 1"];
	Node0x22fb5b0[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0x22fb620[shape=record, label="  %33 = xor i32 %13, -1"];
	Node0x22fb690[shape=record, label="  %34 = and i32 %10, %33"];
	Node0x22fb700[shape=record, label="  %35 = shl i32 %27, 1"];
	Node0x22fb770[shape=record, label="  %36 = sub i32 %34, %12"];
	Node0x22fb7e0[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x22fb850[shape=record, label="  %38 = xor i32 %10, -1"];
	Node0x22fb8c0[shape=record, label="  %39 = add i32 %11, %38"];
	Node0x22fb930[shape=record, label="  %40 = sub i32 %39, %12"];
	Node0x22fb9a0[shape=record, label="  %41 = add i32 %40, %19"];
	Node0x22fba10[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x22fba80[shape=record, label="  %43 = sub i32 %42, %25"];
	Node0x22fbaf0[shape=record, label="  %44 = add i32 %43, %30"];
	Node0x22fbb60[shape=record, label="  %45 = add i32 %44, %24"];
	Node0x22fbbd0[shape=record, label="  %46 = sub i32 %45, %29"];
	Node0x22fbc40[shape=record, label="  %47 = add i32 %46, %35"];
	Node0x22fbcb0[shape=record, label="  %48 = sub i32 %47, %32"];
	Node0x22fbd20[shape=record, label="  %49 = add i32 %48, %37"];
	Node0x22fbd90[shape=record, label="  %50 = icmp eq i32 %16, %49"];
	Node0x22988b8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22fbe20[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0x22fc0c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x22fc228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x22fc338[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22fc448[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22fc508[shape=record, label="  ret i32 0"];
	Node0x22f8a08 -> Node0x22f8a88;
	Node0x22f8a88 -> Node0x22f8b18;
	Node0x22f8b18 -> Node0x22f8b78;
	Node0x22f8b78 -> Node0x22f8c28;
	Node0x22f8c28 -> Node0x22f9058;
	Node0x22f9058 -> Node0x22f9138;
	Node0x22f9138 -> Node0x22f9238;
	Node0x22f9238 -> Node0x22f92f8;
	Node0x22f92f8 -> Node0x22f93a8;
	Node0x22f93a8 -> Node0x22f9468;
	Node0x22f9468 -> Node0x22f9518;
	Node0x22f9518 -> Node0x22f3ab0;
	Node0x22f3ab0 -> Node0x22f9718;
	Node0x22f9718 -> Node0x22fa688;
	Node0x22fa688 -> Node0x22facf8;
	Node0x22facf8 -> Node0x22fad58;
	Node0x22fad58 -> Node0x22fadd0;
	Node0x22fadd0 -> Node0x22fae40;
	Node0x22fae40 -> Node0x22faeb0;
	Node0x22faeb0 -> Node0x22faf20;
	Node0x22faf20 -> Node0x22faf90;
	Node0x22faf90 -> Node0x22fb000;
	Node0x22fb000 -> Node0x22fb070;
	Node0x22fb070 -> Node0x22fb0e0;
	Node0x22fb0e0 -> Node0x22fb150;
	Node0x22fb150 -> Node0x22fb1c0;
	Node0x22fb1c0 -> Node0x22fb230;
	Node0x22fb230 -> Node0x22fb2a0;
	Node0x22fb2a0 -> Node0x22fb310;
	Node0x22fb310 -> Node0x22fb380;
	Node0x22fb380 -> Node0x22fb3f0;
	Node0x22fb3f0 -> Node0x22fb460;
	Node0x22fb460 -> Node0x22fb4d0;
	Node0x22fb4d0 -> Node0x22fb540;
	Node0x22fb540 -> Node0x22fb5b0;
	Node0x22fb5b0 -> Node0x22fb620;
	Node0x22fb620 -> Node0x22fb690;
	Node0x22fb690 -> Node0x22fb700;
	Node0x22fb700 -> Node0x22fb770;
	Node0x22fb770 -> Node0x22fb7e0;
	Node0x22fb7e0 -> Node0x22fb850;
	Node0x22fb850 -> Node0x22fb8c0;
	Node0x22fb8c0 -> Node0x22fb930;
	Node0x22fb930 -> Node0x22fb9a0;
	Node0x22fb9a0 -> Node0x22fba10;
	Node0x22fba10 -> Node0x22fba80;
	Node0x22fba80 -> Node0x22fbaf0;
	Node0x22fbaf0 -> Node0x22fbb60;
	Node0x22fbb60 -> Node0x22fbbd0;
	Node0x22fbbd0 -> Node0x22fbc40;
	Node0x22fbc40 -> Node0x22fbcb0;
	Node0x22fbcb0 -> Node0x22fbd20;
	Node0x22fbd20 -> Node0x22fbd90;
	Node0x22fbd90 -> Node0x22988b8;
	Node0x22988b8 -> Node0x22fbe20;
	Node0x22fbe20 -> Node0x22fc0c8;
	Node0x22fc0c8 -> Node0x22fc228;
	Node0x22fc228 -> Node0x22fc338;
	Node0x22fc338 -> Node0x22fc448;
	Node0x22fc448 -> Node0x22fc508;
edge [color=red]
	Node0x22f8a08 -> Node0x22f8c28;
	Node0x22f8c28 -> Node0x22f9058;
	Node0x22f8a88 -> Node0x22f9138;
	Node0x22f9138 -> Node0x22f9238;
	Node0x22f8b18 -> Node0x22f92f8;
	Node0x22f92f8 -> Node0x22f93a8;
	Node0x22f8b78 -> Node0x22f9468;
	Node0x22f9468 -> Node0x22f9518;
	Node0x22f8a08 -> Node0x22f3ab0;
	Node0x22f8a88 -> Node0x22f3ab0;
	Node0x22f8b18 -> Node0x22f3ab0;
	Node0x22f8b78 -> Node0x22f3ab0;
	Node0x22f8a08 -> Node0x22f9718;
	Node0x22f8a88 -> Node0x22fa688;
	Node0x22f8b18 -> Node0x22facf8;
	Node0x22f8b78 -> Node0x22fad58;
	Node0x22facf8 -> Node0x22fadd0;
	Node0x22fa688 -> Node0x22fadd0;
	Node0x22fad58 -> Node0x22fae40;
	Node0x22f9718 -> Node0x22fae40;
	Node0x22fae40 -> Node0x22faeb0;
	Node0x22fadd0 -> Node0x22faeb0;
	Node0x22facf8 -> Node0x22faf20;
	Node0x22fa688 -> Node0x22faf90;
	Node0x22faf20 -> Node0x22faf90;
	Node0x22faf90 -> Node0x22fb000;
	Node0x22fa688 -> Node0x22fb070;
	Node0x22fb070 -> Node0x22fb0e0;
	Node0x22facf8 -> Node0x22fb150;
	Node0x22fa688 -> Node0x22fb150;
	Node0x22fb150 -> Node0x22fb1c0;
	Node0x22fb1c0 -> Node0x22fb230;
	Node0x22faf90 -> Node0x22fb2a0;
	Node0x22f9718 -> Node0x22fb310;
	Node0x22fad58 -> Node0x22fb380;
	Node0x22fb310 -> Node0x22fb380;
	Node0x22fad58 -> Node0x22fb3f0;
	Node0x22f9718 -> Node0x22fb3f0;
	Node0x22fb3f0 -> Node0x22fb460;
	Node0x22fb3f0 -> Node0x22fb4d0;
	Node0x22fae40 -> Node0x22fb540;
	Node0x22fb540 -> Node0x22fb5b0;
	Node0x22fad58 -> Node0x22fb620;
	Node0x22f9718 -> Node0x22fb690;
	Node0x22fb620 -> Node0x22fb690;
	Node0x22fb380 -> Node0x22fb700;
	Node0x22fb690 -> Node0x22fb770;
	Node0x22facf8 -> Node0x22fb770;
	Node0x22fb770 -> Node0x22fb7e0;
	Node0x22f9718 -> Node0x22fb850;
	Node0x22fa688 -> Node0x22fb8c0;
	Node0x22fb850 -> Node0x22fb8c0;
	Node0x22fb8c0 -> Node0x22fb930;
	Node0x22facf8 -> Node0x22fb930;
	Node0x22fb930 -> Node0x22fb9a0;
	Node0x22fb000 -> Node0x22fb9a0;
	Node0x22fb9a0 -> Node0x22fba10;
	Node0x22fb0e0 -> Node0x22fba10;
	Node0x22fba10 -> Node0x22fba80;
	Node0x22fb2a0 -> Node0x22fba80;
	Node0x22fba80 -> Node0x22fbaf0;
	Node0x22fb4d0 -> Node0x22fbaf0;
	Node0x22fbaf0 -> Node0x22fbb60;
	Node0x22fb230 -> Node0x22fbb60;
	Node0x22fbb60 -> Node0x22fbbd0;
	Node0x22fb460 -> Node0x22fbbd0;
	Node0x22fbbd0 -> Node0x22fbc40;
	Node0x22fb700 -> Node0x22fbc40;
	Node0x22fbc40 -> Node0x22fbcb0;
	Node0x22fb5b0 -> Node0x22fbcb0;
	Node0x22fbcb0 -> Node0x22fbd20;
	Node0x22fb7e0 -> Node0x22fbd20;
	Node0x22faeb0 -> Node0x22fbd90;
	Node0x22fbd20 -> Node0x22fbd90;
	Node0x22fbd90 -> Node0x22988b8;
	Node0x22988b8 -> Node0x22fbe20;
	Node0x22f9468 -> Node0x22fc0c8;
	Node0x22f92f8 -> Node0x22fc228;
	Node0x22f9138 -> Node0x22fc338;
	Node0x22f8c28 -> Node0x22fc448;
}
