digraph "DFG for'crackme' function" {
	Node0x229c170[shape=record, label="  %5 = mul i32 %2, -2"];
	Node0x229c1e0[shape=record, label="  %6 = add i32 %5, %3"];
	Node0x229c250[shape=record, label="  %7 = xor i32 %3, %0"];
	Node0x229c2c0[shape=record, label="  %8 = sub i32 %6, %7"];
	Node0x229c330[shape=record, label="  %9 = xor i32 %2, %1"];
	Node0x229c3a0[shape=record, label="  %10 = or i32 %2, %1"];
	Node0x229c440[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x229c4e0[shape=record, label="  %12 = add i32 %2, 1"];
	Node0x229c550[shape=record, label="  %13 = or i32 %11, %1"];
	Node0x229c5c0[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x229c630[shape=record, label="  %15 = xor i32 %13, -1"];
	Node0x229c6d0[shape=record, label="  %16 = mul i32 %15, -5"];
	Node0x229c740[shape=record, label="  %17 = xor i32 %0, -1"];
	Node0x229c7b0[shape=record, label="  %18 = or i32 %17, %3"];
	Node0x229c820[shape=record, label="  %19 = and i32 %17, %3"];
	Node0x229c890[shape=record, label="  %20 = or i32 %3, %0"];
	Node0x229c900[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x229c970[shape=record, label="  %22 = xor i32 %7, -1"];
	Node0x229c9e0[shape=record, label="  %23 = xor i32 %21, -2"];
	Node0x229ca50[shape=record, label="  %24 = xor i32 %18, -1"];
	Node0x229cac0[shape=record, label="  %25 = and i32 %3, %0"];
	Node0x229cb60[shape=record, label="  %26 = shl i32 %25, 2"];
	Node0x229cbd0[shape=record, label="  %27 = sub i32 %24, %1"];
	Node0x229cc40[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x229cce0[shape=record, label="  %29 = mul i32 %28, 3"];
	Node0x229cd50[shape=record, label="  %30 = add i32 %9, %10"];
	Node0x229cdc0[shape=record, label="  %31 = add i32 %30, %13"];
	Node0x229ce30[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x229d0b0[shape=record, label="  %33 = sub i32 3, %1"];
	Node0x229d120[shape=record, label="  %34 = add i32 %33, %12"];
	Node0x229d190[shape=record, label="  %35 = sub i32 %34, %14"];
	Node0x229d200[shape=record, label="  %36 = add i32 %35, %3"];
	Node0x229d270[shape=record, label="  %37 = add i32 %36, %16"];
	Node0x229d2e0[shape=record, label="  %38 = sub i32 %37, %18"];
	Node0x229d350[shape=record, label="  %39 = add i32 %38, %19"];
	Node0x229d3c0[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x229d430[shape=record, label="  %41 = sub i32 %40, %21"];
	Node0x229d4a0[shape=record, label="  %42 = add i32 %41, %26"];
	Node0x229d510[shape=record, label="  %43 = add i32 %42, %23"];
	Node0x229d580[shape=record, label="  %44 = add i32 %43, %32"];
	Node0x229d5f0[shape=record, label="  %45 = add i32 %44, %29"];
	Node0x229d660[shape=record, label="  %46 = icmp eq i32 %8, %45"];
	Node0x223c268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x229db00[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0x229db50[shape=record, label="  ret void"];
	Node0x229c170 -> Node0x229c1e0;
	Node0x229c1e0 -> Node0x229c250;
	Node0x229c250 -> Node0x229c2c0;
	Node0x229c2c0 -> Node0x229c330;
	Node0x229c330 -> Node0x229c3a0;
	Node0x229c3a0 -> Node0x229c440;
	Node0x229c440 -> Node0x229c4e0;
	Node0x229c4e0 -> Node0x229c550;
	Node0x229c550 -> Node0x229c5c0;
	Node0x229c5c0 -> Node0x229c630;
	Node0x229c630 -> Node0x229c6d0;
	Node0x229c6d0 -> Node0x229c740;
	Node0x229c740 -> Node0x229c7b0;
	Node0x229c7b0 -> Node0x229c820;
	Node0x229c820 -> Node0x229c890;
	Node0x229c890 -> Node0x229c900;
	Node0x229c900 -> Node0x229c970;
	Node0x229c970 -> Node0x229c9e0;
	Node0x229c9e0 -> Node0x229ca50;
	Node0x229ca50 -> Node0x229cac0;
	Node0x229cac0 -> Node0x229cb60;
	Node0x229cb60 -> Node0x229cbd0;
	Node0x229cbd0 -> Node0x229cc40;
	Node0x229cc40 -> Node0x229cce0;
	Node0x229cce0 -> Node0x229cd50;
	Node0x229cd50 -> Node0x229cdc0;
	Node0x229cdc0 -> Node0x229ce30;
	Node0x229ce30 -> Node0x229d0b0;
	Node0x229d0b0 -> Node0x229d120;
	Node0x229d120 -> Node0x229d190;
	Node0x229d190 -> Node0x229d200;
	Node0x229d200 -> Node0x229d270;
	Node0x229d270 -> Node0x229d2e0;
	Node0x229d2e0 -> Node0x229d350;
	Node0x229d350 -> Node0x229d3c0;
	Node0x229d3c0 -> Node0x229d430;
	Node0x229d430 -> Node0x229d4a0;
	Node0x229d4a0 -> Node0x229d510;
	Node0x229d510 -> Node0x229d580;
	Node0x229d580 -> Node0x229d5f0;
	Node0x229d5f0 -> Node0x229d660;
	Node0x229d660 -> Node0x223c268;
	Node0x223c268 -> Node0x229db00;
	Node0x229db00 -> Node0x229db50;
edge [color=red]
	Node0x229c170 -> Node0x229c1e0;
	Node0x229c1e0 -> Node0x229c2c0;
	Node0x229c250 -> Node0x229c2c0;
	Node0x229c440 -> Node0x229c550;
	Node0x229c550 -> Node0x229c630;
	Node0x229c630 -> Node0x229c6d0;
	Node0x229c740 -> Node0x229c7b0;
	Node0x229c740 -> Node0x229c820;
	Node0x229c890 -> Node0x229c900;
	Node0x229c250 -> Node0x229c970;
	Node0x229c900 -> Node0x229c9e0;
	Node0x229c7b0 -> Node0x229ca50;
	Node0x229cac0 -> Node0x229cb60;
	Node0x229ca50 -> Node0x229cbd0;
	Node0x229cbd0 -> Node0x229cc40;
	Node0x229c820 -> Node0x229cc40;
	Node0x229cc40 -> Node0x229cce0;
	Node0x229c330 -> Node0x229cd50;
	Node0x229c3a0 -> Node0x229cd50;
	Node0x229cd50 -> Node0x229cdc0;
	Node0x229c550 -> Node0x229cdc0;
	Node0x229cdc0 -> Node0x229ce30;
	Node0x229d0b0 -> Node0x229d120;
	Node0x229c4e0 -> Node0x229d120;
	Node0x229d120 -> Node0x229d190;
	Node0x229c5c0 -> Node0x229d190;
	Node0x229d190 -> Node0x229d200;
	Node0x229d200 -> Node0x229d270;
	Node0x229c6d0 -> Node0x229d270;
	Node0x229d270 -> Node0x229d2e0;
	Node0x229c7b0 -> Node0x229d2e0;
	Node0x229d2e0 -> Node0x229d350;
	Node0x229c820 -> Node0x229d350;
	Node0x229d350 -> Node0x229d3c0;
	Node0x229c970 -> Node0x229d3c0;
	Node0x229d3c0 -> Node0x229d430;
	Node0x229c900 -> Node0x229d430;
	Node0x229d430 -> Node0x229d4a0;
	Node0x229cb60 -> Node0x229d4a0;
	Node0x229d4a0 -> Node0x229d510;
	Node0x229c9e0 -> Node0x229d510;
	Node0x229d510 -> Node0x229d580;
	Node0x229ce30 -> Node0x229d580;
	Node0x229d580 -> Node0x229d5f0;
	Node0x229cce0 -> Node0x229d5f0;
	Node0x229c2c0 -> Node0x229d660;
	Node0x229d5f0 -> Node0x229d660;
	Node0x229d660 -> Node0x223c268;
	Node0x223c268 -> Node0x229db00;
}
