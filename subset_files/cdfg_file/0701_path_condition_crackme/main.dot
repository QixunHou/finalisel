digraph "DFG for'main' function" {
	Node0x12ed288[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12ed308[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x12ed398[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x12ed7f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x12ed8d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x12ed9f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12edc30[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x12edce8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12eec58[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x12ef2e0[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x12ef350[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0x12ef3c0[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x12ef430[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x12ef4a0[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x12ef510[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x12ef580[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x12ef5f0[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x12ef660[shape=record, label="  %16 = and i32 %6, %10"];
	Node0x12ef6d0[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x12ef740[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x12ef7b0[shape=record, label="  %19 = mul i32 %18, -3"];
	Node0x12ef820[shape=record, label="  %20 = shl i32 %11, 1"];
	Node0x12ef890[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x12ef900[shape=record, label="  %22 = shl i32 %16, 1"];
	Node0x12ef970[shape=record, label="  %23 = shl i32 %12, 2"];
	Node0x12ef9e0[shape=record, label="  %24 = shl i32 %15, 1"];
	Node0x12efa50[shape=record, label="  %25 = sub i32 3, %6"];
	Node0x12efac0[shape=record, label="  %26 = add i32 %25, %10"];
	Node0x12efb30[shape=record, label="  %27 = add i32 %26, %11"];
	Node0x12efba0[shape=record, label="  %28 = add i32 %27, %16"];
	Node0x12efc10[shape=record, label="  %29 = sub i32 %28, %17"];
	Node0x12efc80[shape=record, label="  %30 = add i32 %29, %19"];
	Node0x12efcf0[shape=record, label="  %31 = sub i32 %30, %22"];
	Node0x12efd60[shape=record, label="  %32 = add i32 %31, %23"];
	Node0x12efdd0[shape=record, label="  %33 = add i32 %32, %24"];
	Node0x12efe40[shape=record, label="  %34 = add i32 %33, %14"];
	Node0x12efeb0[shape=record, label="  %35 = sub i32 %34, %21"];
	Node0x12eff20[shape=record, label="  %36 = icmp eq i32 %9, %35"];
	Node0x128d9d8[shape=record, label="  %37 = select i1 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x12effb0[shape=record, label="  %38 = call i32 @puts(i8* nonnull dereferenceable(1) %37) #5"];
	Node0x12f0208[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12f0368[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x12f0428[shape=record, label="  ret i32 0"];
	Node0x12ed288 -> Node0x12ed308;
	Node0x12ed308 -> Node0x12ed398;
	Node0x12ed398 -> Node0x12ed7f8;
	Node0x12ed7f8 -> Node0x12ed8d8;
	Node0x12ed8d8 -> Node0x12ed9f8;
	Node0x12ed9f8 -> Node0x12edc30;
	Node0x12edc30 -> Node0x12edce8;
	Node0x12edce8 -> Node0x12eec58;
	Node0x12eec58 -> Node0x12ef2e0;
	Node0x12ef2e0 -> Node0x12ef350;
	Node0x12ef350 -> Node0x12ef3c0;
	Node0x12ef3c0 -> Node0x12ef430;
	Node0x12ef430 -> Node0x12ef4a0;
	Node0x12ef4a0 -> Node0x12ef510;
	Node0x12ef510 -> Node0x12ef580;
	Node0x12ef580 -> Node0x12ef5f0;
	Node0x12ef5f0 -> Node0x12ef660;
	Node0x12ef660 -> Node0x12ef6d0;
	Node0x12ef6d0 -> Node0x12ef740;
	Node0x12ef740 -> Node0x12ef7b0;
	Node0x12ef7b0 -> Node0x12ef820;
	Node0x12ef820 -> Node0x12ef890;
	Node0x12ef890 -> Node0x12ef900;
	Node0x12ef900 -> Node0x12ef970;
	Node0x12ef970 -> Node0x12ef9e0;
	Node0x12ef9e0 -> Node0x12efa50;
	Node0x12efa50 -> Node0x12efac0;
	Node0x12efac0 -> Node0x12efb30;
	Node0x12efb30 -> Node0x12efba0;
	Node0x12efba0 -> Node0x12efc10;
	Node0x12efc10 -> Node0x12efc80;
	Node0x12efc80 -> Node0x12efcf0;
	Node0x12efcf0 -> Node0x12efd60;
	Node0x12efd60 -> Node0x12efdd0;
	Node0x12efdd0 -> Node0x12efe40;
	Node0x12efe40 -> Node0x12efeb0;
	Node0x12efeb0 -> Node0x12eff20;
	Node0x12eff20 -> Node0x128d9d8;
	Node0x128d9d8 -> Node0x12effb0;
	Node0x12effb0 -> Node0x12f0208;
	Node0x12f0208 -> Node0x12f0368;
	Node0x12f0368 -> Node0x12f0428;
edge [color=red]
	Node0x12ed288 -> Node0x12ed398;
	Node0x12ed398 -> Node0x12ed7f8;
	Node0x12ed308 -> Node0x12ed8d8;
	Node0x12ed8d8 -> Node0x12ed9f8;
	Node0x12ed288 -> Node0x12edc30;
	Node0x12ed308 -> Node0x12edc30;
	Node0x12ed288 -> Node0x12edce8;
	Node0x12ed308 -> Node0x12eec58;
	Node0x12edce8 -> Node0x12ef2e0;
	Node0x12ef2e0 -> Node0x12ef350;
	Node0x12eec58 -> Node0x12ef3c0;
	Node0x12edce8 -> Node0x12ef430;
	Node0x12ef3c0 -> Node0x12ef430;
	Node0x12eec58 -> Node0x12ef4a0;
	Node0x12edce8 -> Node0x12ef4a0;
	Node0x12ef4a0 -> Node0x12ef510;
	Node0x12ef510 -> Node0x12ef580;
	Node0x12eec58 -> Node0x12ef5f0;
	Node0x12edce8 -> Node0x12ef5f0;
	Node0x12edce8 -> Node0x12ef660;
	Node0x12ef3c0 -> Node0x12ef660;
	Node0x12eec58 -> Node0x12ef6d0;
	Node0x12edce8 -> Node0x12ef6d0;
	Node0x12ef6d0 -> Node0x12ef740;
	Node0x12ef740 -> Node0x12ef7b0;
	Node0x12ef430 -> Node0x12ef820;
	Node0x12ef820 -> Node0x12ef890;
	Node0x12ef660 -> Node0x12ef900;
	Node0x12ef4a0 -> Node0x12ef970;
	Node0x12ef5f0 -> Node0x12ef9e0;
	Node0x12edce8 -> Node0x12efa50;
	Node0x12efa50 -> Node0x12efac0;
	Node0x12ef3c0 -> Node0x12efac0;
	Node0x12efac0 -> Node0x12efb30;
	Node0x12ef430 -> Node0x12efb30;
	Node0x12efb30 -> Node0x12efba0;
	Node0x12ef660 -> Node0x12efba0;
	Node0x12efba0 -> Node0x12efc10;
	Node0x12ef6d0 -> Node0x12efc10;
	Node0x12efc10 -> Node0x12efc80;
	Node0x12ef7b0 -> Node0x12efc80;
	Node0x12efc80 -> Node0x12efcf0;
	Node0x12ef900 -> Node0x12efcf0;
	Node0x12efcf0 -> Node0x12efd60;
	Node0x12ef970 -> Node0x12efd60;
	Node0x12efd60 -> Node0x12efdd0;
	Node0x12ef9e0 -> Node0x12efdd0;
	Node0x12efdd0 -> Node0x12efe40;
	Node0x12ef580 -> Node0x12efe40;
	Node0x12efe40 -> Node0x12efeb0;
	Node0x12ef890 -> Node0x12efeb0;
	Node0x12ef350 -> Node0x12eff20;
	Node0x12efeb0 -> Node0x12eff20;
	Node0x12eff20 -> Node0x128d9d8;
	Node0x128d9d8 -> Node0x12effb0;
	Node0x12ed8d8 -> Node0x12f0208;
	Node0x12ed398 -> Node0x12f0368;
}
