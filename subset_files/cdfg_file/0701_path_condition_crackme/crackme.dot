digraph "DFG for'crackme' function" {
	Node0x12ebc70[shape=record, label="  %3 = xor i32 %0, -1"];
	Node0x12ebd10[shape=record, label="  %4 = mul i32 %3, -2"];
	Node0x12ebdd0[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x12ebe40[shape=record, label="  %6 = or i32 %5, %0"];
	Node0x12ebeb0[shape=record, label="  %7 = and i32 %1, %0"];
	Node0x12ebf20[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x12ebf90[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x12ec000[shape=record, label="  %10 = xor i32 %1, %0"];
	Node0x12ec070[shape=record, label="  %11 = and i32 %5, %0"];
	Node0x12ec0e0[shape=record, label="  %12 = or i32 %1, %0"];
	Node0x12ec150[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x12ec1f0[shape=record, label="  %14 = mul i32 %13, -3"];
	Node0x12ec260[shape=record, label="  %15 = shl i32 %6, 1"];
	Node0x12ec2d0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x12ec340[shape=record, label="  %17 = shl i32 %11, 1"];
	Node0x12ec3e0[shape=record, label="  %18 = shl i32 %7, 2"];
	Node0x12ec450[shape=record, label="  %19 = shl i32 %10, 1"];
	Node0x12ec4f0[shape=record, label="  %20 = sub i32 3, %0"];
	Node0x12ec560[shape=record, label="  %21 = add i32 %20, %5"];
	Node0x12ec5d0[shape=record, label="  %22 = add i32 %21, %6"];
	Node0x12ec640[shape=record, label="  %23 = add i32 %22, %11"];
	Node0x12ec6b0[shape=record, label="  %24 = sub i32 %23, %12"];
	Node0x12ec720[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x12ec790[shape=record, label="  %26 = sub i32 %25, %17"];
	Node0x12ec800[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x12ec870[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x12ec8e0[shape=record, label="  %29 = add i32 %28, %9"];
	Node0x12ec950[shape=record, label="  %30 = sub i32 %29, %16"];
	Node0x12ec9c0[shape=record, label="  %31 = icmp eq i32 %4, %30"];
	Node0x128c268[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x12ed070[shape=record, label="  %33 = tail call i32 @puts(i8* nonnull dereferenceable(1) %32)"];
	Node0x12ed0c0[shape=record, label="  ret void"];
	Node0x12ebc70 -> Node0x12ebd10;
	Node0x12ebd10 -> Node0x12ebdd0;
	Node0x12ebdd0 -> Node0x12ebe40;
	Node0x12ebe40 -> Node0x12ebeb0;
	Node0x12ebeb0 -> Node0x12ebf20;
	Node0x12ebf20 -> Node0x12ebf90;
	Node0x12ebf90 -> Node0x12ec000;
	Node0x12ec000 -> Node0x12ec070;
	Node0x12ec070 -> Node0x12ec0e0;
	Node0x12ec0e0 -> Node0x12ec150;
	Node0x12ec150 -> Node0x12ec1f0;
	Node0x12ec1f0 -> Node0x12ec260;
	Node0x12ec260 -> Node0x12ec2d0;
	Node0x12ec2d0 -> Node0x12ec340;
	Node0x12ec340 -> Node0x12ec3e0;
	Node0x12ec3e0 -> Node0x12ec450;
	Node0x12ec450 -> Node0x12ec4f0;
	Node0x12ec4f0 -> Node0x12ec560;
	Node0x12ec560 -> Node0x12ec5d0;
	Node0x12ec5d0 -> Node0x12ec640;
	Node0x12ec640 -> Node0x12ec6b0;
	Node0x12ec6b0 -> Node0x12ec720;
	Node0x12ec720 -> Node0x12ec790;
	Node0x12ec790 -> Node0x12ec800;
	Node0x12ec800 -> Node0x12ec870;
	Node0x12ec870 -> Node0x12ec8e0;
	Node0x12ec8e0 -> Node0x12ec950;
	Node0x12ec950 -> Node0x12ec9c0;
	Node0x12ec9c0 -> Node0x128c268;
	Node0x128c268 -> Node0x12ed070;
	Node0x12ed070 -> Node0x12ed0c0;
edge [color=red]
	Node0x12ebc70 -> Node0x12ebd10;
	Node0x12ebdd0 -> Node0x12ebe40;
	Node0x12ebeb0 -> Node0x12ebf20;
	Node0x12ebf20 -> Node0x12ebf90;
	Node0x12ebdd0 -> Node0x12ec070;
	Node0x12ec0e0 -> Node0x12ec150;
	Node0x12ec150 -> Node0x12ec1f0;
	Node0x12ebe40 -> Node0x12ec260;
	Node0x12ec260 -> Node0x12ec2d0;
	Node0x12ec070 -> Node0x12ec340;
	Node0x12ebeb0 -> Node0x12ec3e0;
	Node0x12ec000 -> Node0x12ec450;
	Node0x12ec4f0 -> Node0x12ec560;
	Node0x12ebdd0 -> Node0x12ec560;
	Node0x12ec560 -> Node0x12ec5d0;
	Node0x12ebe40 -> Node0x12ec5d0;
	Node0x12ec5d0 -> Node0x12ec640;
	Node0x12ec070 -> Node0x12ec640;
	Node0x12ec640 -> Node0x12ec6b0;
	Node0x12ec0e0 -> Node0x12ec6b0;
	Node0x12ec6b0 -> Node0x12ec720;
	Node0x12ec1f0 -> Node0x12ec720;
	Node0x12ec720 -> Node0x12ec790;
	Node0x12ec340 -> Node0x12ec790;
	Node0x12ec790 -> Node0x12ec800;
	Node0x12ec3e0 -> Node0x12ec800;
	Node0x12ec800 -> Node0x12ec870;
	Node0x12ec450 -> Node0x12ec870;
	Node0x12ec870 -> Node0x12ec8e0;
	Node0x12ebf90 -> Node0x12ec8e0;
	Node0x12ec8e0 -> Node0x12ec950;
	Node0x12ec2d0 -> Node0x12ec950;
	Node0x12ebd10 -> Node0x12ec9c0;
	Node0x12ec950 -> Node0x12ec9c0;
	Node0x12ec9c0 -> Node0x128c268;
	Node0x128c268 -> Node0x12ed070;
}
