; ModuleID = '../.././c_source_file/1999_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1999_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %2, %1
  %5 = xor i32 %4, -1
  %6 = xor i32 %5, %0
  %7 = and i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %2, %1
  %10 = xor i32 %9, -1
  %11 = and i32 %10, %8
  %12 = sub i32 %11, %6
  %13 = xor i32 %2, %0
  %14 = xor i32 %13, -1
  %15 = and i32 %14, %8
  %16 = xor i32 %1, -1
  %17 = or i32 %16, %0
  %18 = xor i32 %17, -1
  %19 = or i32 %13, %18
  %20 = xor i32 %2, -1
  %21 = and i32 %20, %0
  %22 = or i32 %21, %1
  %23 = and i32 %16, %0
  %24 = xor i32 %23, -1
  %25 = and i32 %20, %24
  %26 = and i32 %9, %24
  %27 = or i32 %14, %1
  %28 = or i32 %9, %7
  %29 = xor i32 %0, -1
  %30 = and i32 %5, %29
  %31 = and i32 %9, %29
  %32 = or i32 %2, %1
  %33 = xor i32 %32, -1
  %34 = or i32 %7, %33
  %35 = or i32 %5, %29
  %36 = or i32 %2, %0
  %37 = and i32 %36, %1
  %38 = xor i32 %1, %0
  %39 = xor i32 %38, -1
  %40 = and i32 %20, %39
  %41 = shl i32 %40, 1
  %42 = xor i32 %17, %2
  %43 = shl i32 %42, 1
  %44 = or i32 %1, %0
  %45 = and i32 %44, %14
  %46 = and i32 %13, %44
  %47 = shl i32 %46, 1
  %48 = and i32 %4, %0
  %49 = or i32 %33, %0
  %50 = xor i32 %48, %49
  %51 = and i32 %38, %20
  %52 = shl i32 %51, 2
  %53 = shl i32 %9, 1
  %54 = or i32 %20, %1
  %55 = xor i32 %54, -1
  %56 = add i32 %54, 1
  %57 = xor i32 %21, -1
  %58 = and i32 %38, %57
  %59 = or i32 %23, %20
  %60 = or i32 %55, %0
  %61 = or i32 %7, %14
  %62 = shl i32 %61, 1
  %63 = and i32 %20, %1
  %64 = xor i32 %63, -1
  %65 = and i32 %64, %29
  %66 = and i32 %17, %2
  %67 = xor i32 %32, %0
  %68 = or i32 %48, %67
  %69 = add i32 %21, 1
  %70 = or i32 %39, %2
  %71 = or i32 %9, %29
  %72 = and i32 %17, %20
  %73 = and i32 %16, %2
  %74 = and i32 %73, %0
  %75 = or i32 %9, %0
  %76 = xor i32 %74, %75
  %77 = and i32 %2, %0
  %78 = xor i32 %77, %1
  %79 = or i32 %10, %18
  %80 = and i32 %73, %29
  %81 = or i32 %16, %2
  %82 = and i32 %81, %0
  %83 = xor i32 %82, -1
  %84 = xor i32 %80, %83
  %85 = xor i32 %9, %0
  %86 = or i32 %74, %85
  %87 = or i32 %20, %0
  %88 = xor i32 %87, -1
  %89 = xor i32 %88, %1
  %90 = and i32 %38, %14
  %91 = and i32 %13, %1
  %92 = or i32 %7, %55
  %93 = or i32 %14, %18
  %94 = and i32 %13, %17
  %95 = and i32 %10, %29
  %96 = shl i32 %95, 1
  %97 = and i32 %38, %2
  %98 = xor i32 %44, -1
  %99 = or i32 %10, %98
  %100 = and i32 %9, %17
  %101 = or i32 %13, %23
  %102 = or i32 %21, %4
  %103 = xor i32 %36, -1
  %104 = or i32 %103, %39
  %105 = or i32 %7, %103
  %106 = or i32 %77, %63
  %107 = xor i32 %21, %5
  %108 = xor i32 %31, 2147483647
  %109 = xor i32 %108, %48
  %110 = xor i32 %81, %0
  %111 = xor i32 %110, 2147483647
  %112 = xor i32 %111, %74
  %113 = shl i32 %112, 1
  %114 = or i32 %13, %16
  %115 = xor i32 %21, %54
  %116 = shl i32 %115, 1
  %117 = and i32 %4, %29
  %118 = and i32 %9, %0
  %119 = or i32 %117, %118
  %120 = or i32 %23, %14
  %121 = or i32 %9, %23
  %122 = or i32 %77, %98
  %123 = add i32 %63, 1
  %124 = or i32 %32, %29
  %125 = xor i32 %23, %64
  %126 = and i32 %57, %39
  %127 = xor i32 %77, -1
  %128 = add i32 %77, 1
  %129 = or i32 %14, %39
  %130 = and i32 %32, %0
  %131 = xor i32 %130, -1
  %132 = xor i32 %117, %131
  %133 = xor i32 %21, %1
  %134 = and i32 %9, %8
  %135 = and i32 %14, %24
  %136 = xor i32 %64, %0
  %137 = or i32 %9, %98
  %138 = or i32 %88, %39
  %139 = xor i32 %44, %2
  %140 = or i32 %63, %29
  %141 = or i32 %13, %1
  %142 = or i32 %5, %0
  %143 = or i32 %38, %2
  %144 = and i32 %38, %127
  %145 = shl i32 %130, 1
  %146 = or i32 %38, %103
  %147 = and i32 %81, %29
  %148 = or i32 %74, %147
  %149 = xor i32 %8, %2
  %150 = or i32 %23, %10
  %151 = xor i32 %23, %2
  %152 = or i32 %77, %39
  %153 = and i32 %17, %14
  %154 = or i32 %10, %0
  %155 = xor i32 %85, -1
  %156 = xor i32 %74, %155
  %157 = xor i32 %55, %0
  %158 = xor i32 %33, %0
  %159 = shl i32 %158, 1
  %160 = and i32 %54, %0
  %161 = and i32 %20, %8
  %162 = or i32 %38, %14
  %163 = and i32 %57, %16
  %164 = or i32 %80, %82
  %165 = or i32 %77, %1
  %166 = or i32 %9, %18
  %167 = or i32 %7, %20
  %168 = or i32 %77, %16
  %169 = or i32 %54, %0
  %170 = xor i32 %103, %1
  %171 = xor i32 %4, %0
  %172 = and i32 %54, %29
  %173 = or i32 %4, %0
  %174 = and i32 %87, %16
  %175 = shl i32 %17, 1
  %176 = add i32 %36, 1
  %177 = and i32 %44, %20
  %178 = xor i32 %54, %0
  %179 = or i32 %7, %2
  %180 = xor i32 %127, %1
  %181 = or i32 %13, %38
  %182 = xor i32 %118, 1073741823
  %183 = xor i32 %182, %117
  %184 = xor i32 %23, %5
  %185 = or i32 %117, %130
  %186 = and i32 %17, %10
  %187 = or i32 %74, %110
  %188 = shl i32 %187, 1
  %189 = or i32 %103, %16
  %190 = or i32 %20, %98
  %191 = or i32 %32, %0
  %192 = or i32 %38, %20
  %193 = shl i32 %85, 1
  %194 = or i32 %55, %29
  %195 = and i32 %39, %2
  %196 = shl i32 %195, 1
  %197 = or i32 %63, %23
  %198 = and i32 %5, %0
  %199 = shl i32 %33, 1
  %200 = xor i32 %57, %1
  %201 = add i32 %44, 1
  %202 = xor i32 %80, %71
  %203 = xor i32 %77, %32
  %204 = shl i32 %203, 1
  %205 = or i32 %88, %1
  %206 = xor i32 %77, %64
  %207 = or i32 %13, %39
  %208 = and i32 %24, %2
  %209 = and i32 %33, %29
  %210 = mul i32 %209, 10
  %211 = and i32 %63, %29
  %212 = and i32 %33, %0
  %213 = shl i32 %212, 3
  %214 = and i32 %63, %0
  %215 = mul i32 %214, 21
  %216 = and i32 %55, %29
  %217 = mul i32 %117, 18
  %218 = and i32 %55, %0
  %219 = mul i32 %218, 7
  %220 = add i32 %151, -1
  %221 = add i32 %220, %25
  %222 = add i32 %221, %189
  %223 = add i32 %222, %154
  %224 = add i32 %223, %120
  %225 = add i32 %224, %107
  %226 = add i32 %225, %106
  %227 = add i32 %226, %89
  %228 = add i32 %227, %26
  %229 = add i32 %228, %164
  %230 = add i32 %229, %109
  %231 = shl i32 %230, 1
  %232 = add i32 %48, %216
  %233 = mul i32 %232, 6
  %234 = add i32 %183, %138
  %235 = shl i32 %234, 2
  %236 = add i32 %126, %101
  %237 = mul i32 %236, -5
  %238 = sub i32 %14, %180
  %239 = mul i32 %238, 3
  %240 = add i32 %0, 2
  %241 = add i32 %240, %0
  %242 = add i32 %241, %20
  %243 = sub i32 %242, %44
  %244 = add i32 %243, %24
  %245 = add i32 %244, %18
  %246 = add i32 %245, %8
  %247 = add i32 %246, %201
  %248 = sub i32 %247, %4
  %249 = add i32 %248, %56
  %250 = add i32 %249, %59
  %251 = add i32 %250, %66
  %252 = add i32 %251, %69
  %253 = add i32 %252, %70
  %254 = add i32 %253, %72
  %255 = add i32 %254, %36
  %256 = sub i32 %255, %77
  %257 = add i32 %256, %97
  %258 = add i32 %257, %88
  %259 = sub i32 %258, %87
  %260 = add i32 %259, %123
  %261 = add i32 %260, %128
  %262 = sub i32 %261, %54
  %263 = sub i32 %262, %63
  %264 = add i32 %263, %139
  %265 = add i32 %264, %143
  %266 = sub i32 %265, %149
  %267 = add i32 %266, %161
  %268 = add i32 %267, %167
  %269 = add i32 %268, %5
  %270 = sub i32 %269, %175
  %271 = add i32 %270, %176
  %272 = sub i32 %271, %177
  %273 = add i32 %272, %179
  %274 = add i32 %273, %13
  %275 = add i32 %274, %190
  %276 = sub i32 %275, %192
  %277 = add i32 %276, %21
  %278 = add i32 %277, %208
  %279 = sub i32 %278, %15
  %280 = add i32 %279, %19
  %281 = sub i32 %280, %22
  %282 = add i32 %281, %27
  %283 = add i32 %282, %28
  %284 = sub i32 %283, %30
  %285 = sub i32 %284, %31
  %286 = sub i32 %285, %34
  %287 = sub i32 %286, %35
  %288 = sub i32 %287, %37
  %289 = sub i32 %288, %41
  %290 = sub i32 %289, %43
  %291 = add i32 %290, %45
  %292 = sub i32 %291, %52
  %293 = sub i32 %292, %53
  %294 = sub i32 %293, %58
  %295 = sub i32 %294, %60
  %296 = sub i32 %295, %65
  %297 = sub i32 %296, %71
  %298 = sub i32 %297, %78
  %299 = add i32 %298, %79
  %300 = add i32 %299, %90
  %301 = add i32 %300, %91
  %302 = sub i32 %301, %92
  %303 = add i32 %302, %93
  %304 = add i32 %303, %94
  %305 = add i32 %304, %99
  %306 = add i32 %305, %100
  %307 = sub i32 %306, %102
  %308 = add i32 %307, %104
  %309 = add i32 %308, %105
  %310 = sub i32 %309, %114
  %311 = sub i32 %310, %121
  %312 = sub i32 %311, %122
  %313 = sub i32 %312, %124
  %314 = add i32 %313, %125
  %315 = sub i32 %314, %129
  %316 = sub i32 %315, %133
  %317 = add i32 %316, %134
  %318 = add i32 %317, %135
  %319 = sub i32 %318, %136
  %320 = add i32 %319, %137
  %321 = sub i32 %320, %118
  %322 = sub i32 %321, %75
  %323 = add i32 %322, %140
  %324 = sub i32 %323, %141
  %325 = sub i32 %324, %142
  %326 = add i32 %325, %144
  %327 = sub i32 %326, %146
  %328 = add i32 %327, %150
  %329 = add i32 %328, %152
  %330 = sub i32 %329, %153
  %331 = sub i32 %330, %157
  %332 = sub i32 %331, %160
  %333 = add i32 %332, %162
  %334 = sub i32 %333, %163
  %335 = sub i32 %334, %165
  %336 = sub i32 %335, %166
  %337 = add i32 %336, %168
  %338 = add i32 %337, %169
  %339 = sub i32 %338, %170
  %340 = sub i32 %339, %171
  %341 = sub i32 %340, %172
  %342 = sub i32 %341, %173
  %343 = add i32 %342, %174
  %344 = sub i32 %343, %178
  %345 = add i32 %344, %181
  %346 = sub i32 %345, %184
  %347 = sub i32 %346, %186
  %348 = sub i32 %347, %191
  %349 = add i32 %348, %194
  %350 = sub i32 %349, %196
  %351 = add i32 %350, %197
  %352 = add i32 %351, %198
  %353 = sub i32 %352, %199
  %354 = sub i32 %353, %200
  %355 = sub i32 %354, %205
  %356 = add i32 %355, %206
  %357 = add i32 %356, %207
  %358 = add i32 %357, %211
  %359 = sub i32 %358, %47
  %360 = sub i32 %359, %50
  %361 = sub i32 %360, %62
  %362 = sub i32 %361, %68
  %363 = sub i32 %362, %76
  %364 = sub i32 %363, %84
  %365 = add i32 %364, %86
  %366 = sub i32 %365, %96
  %367 = sub i32 %366, %116
  %368 = sub i32 %367, %119
  %369 = sub i32 %368, %132
  %370 = sub i32 %369, %145
  %371 = sub i32 %370, %148
  %372 = sub i32 %371, %156
  %373 = sub i32 %372, %159
  %374 = sub i32 %373, %185
  %375 = sub i32 %374, %193
  %376 = sub i32 %375, %202
  %377 = sub i32 %376, %204
  %378 = add i32 %377, %210
  %379 = add i32 %378, %213
  %380 = add i32 %379, %215
  %381 = add i32 %380, %217
  %382 = add i32 %381, %219
  %383 = sub i32 %382, %188
  %384 = add i32 %383, %233
  %385 = add i32 %384, %237
  %386 = add i32 %385, %239
  %387 = sub i32 %386, %113
  %388 = add i32 %387, %235
  %389 = add i32 %388, %231
  %390 = icmp eq i32 %12, %389
  %391 = select i1 %390, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %392 = tail call i32 @puts(i8* nonnull dereferenceable(1) %391)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
