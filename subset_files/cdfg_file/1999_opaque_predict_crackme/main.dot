digraph "DFG for'main' function" {
	Node0xd55f18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd55f98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd56028[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xd56088[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xd56508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd565e8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xd566e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd567a8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xd56858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd56ab8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xd56b78[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd56cd8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd56d38[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xd5b7c0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xd5b9c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd5bb28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd5bc38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd5bcf8[shape=record, label="  ret i32 0"];
	Node0xd55f18 -> Node0xd55f98;
	Node0xd55f98 -> Node0xd56028;
	Node0xd56028 -> Node0xd56088;
	Node0xd56088 -> Node0xd56508;
	Node0xd56508 -> Node0xd565e8;
	Node0xd565e8 -> Node0xd566e8;
	Node0xd566e8 -> Node0xd567a8;
	Node0xd567a8 -> Node0xd56858;
	Node0xd56858 -> Node0xd56ab8;
	Node0xd56ab8 -> Node0xd56b78;
	Node0xd56b78 -> Node0xd56cd8;
	Node0xd56cd8 -> Node0xd56d38;
	Node0xd56d38 -> Node0xd5b7c0;
	Node0xd5b7c0 -> Node0xd5b9c8;
	Node0xd5b9c8 -> Node0xd5bb28;
	Node0xd5bb28 -> Node0xd5bc38;
	Node0xd5bc38 -> Node0xd5bcf8;
edge [color=red]
	Node0xd55f18 -> Node0xd56088;
	Node0xd56088 -> Node0xd56508;
	Node0xd55f98 -> Node0xd565e8;
	Node0xd565e8 -> Node0xd566e8;
	Node0xd56028 -> Node0xd567a8;
	Node0xd567a8 -> Node0xd56858;
	Node0xd55f18 -> Node0xd56ab8;
	Node0xd55f98 -> Node0xd56ab8;
	Node0xd56028 -> Node0xd56ab8;
	Node0xd55f18 -> Node0xd56b78;
	Node0xd55f98 -> Node0xd56cd8;
	Node0xd56028 -> Node0xd56d38;
	Node0xd56b78 -> Node0xd5b7c0;
	Node0xd56cd8 -> Node0xd5b7c0;
	Node0xd56d38 -> Node0xd5b7c0;
	Node0xd567a8 -> Node0xd5b9c8;
	Node0xd565e8 -> Node0xd5bb28;
	Node0xd56088 -> Node0xd5bc38;
}
