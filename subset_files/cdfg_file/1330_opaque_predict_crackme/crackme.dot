digraph "DFG for'crackme' function" {
	Node0x1229a90[shape=record, label="  %5 = or i32 %3, %0"];
	Node0x122a110[shape=record, label="  %6 = add i32 %5, -1"];
	Node0x122a180[shape=record, label="  %7 = xor i32 %2, %1"];
	Node0x122a1f0[shape=record, label="  %8 = xor i32 %2, -1"];
	Node0x122a260[shape=record, label="  %9 = or i32 %8, %1"];
	Node0x122a300[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x122a370[shape=record, label="  %11 = and i32 %2, %1"];
	Node0x122a3e0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x122a480[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x122a4f0[shape=record, label="  %14 = and i32 %8, %1"];
	Node0x122a590[shape=record, label="  %15 = shl i32 %11, 2"];
	Node0x122a600[shape=record, label="  %16 = xor i32 %0, -1"];
	Node0x122a670[shape=record, label="  %17 = and i32 %16, %3"];
	Node0x122a6e0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x122a750[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x122a7c0[shape=record, label="  %20 = xor i32 %3, -1"];
	Node0x122a830[shape=record, label="  %21 = shl i32 %16, 1"];
	Node0x122a8d0[shape=record, label="  %22 = xor i32 %3, 2147483647"];
	Node0x122a940[shape=record, label="  %23 = and i32 %22, %0"];
	Node0x122a9b0[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x122aa50[shape=record, label="  %25 = mul i32 %17, 5"];
	Node0x122aac0[shape=record, label="  %26 = add i32 %0, 2"];
	Node0x122ab30[shape=record, label="  %27 = sub i32 %26, %21"];
	Node0x122aba0[shape=record, label="  %28 = add i32 %27, %8"];
	Node0x122ac10[shape=record, label="  %29 = sub i32 %28, %2"];
	Node0x122ac80[shape=record, label="  %30 = add i32 %29, %7"];
	Node0x122acf0[shape=record, label="  %31 = add i32 %30, %9"];
	Node0x122ad60[shape=record, label="  %32 = sub i32 %31, %14"];
	Node0x122afe0[shape=record, label="  %33 = sub i32 %32, %3"];
	Node0x122b050[shape=record, label="  %34 = add i32 %33, %20"];
	Node0x122b0c0[shape=record, label="  %35 = sub i32 %34, %10"];
	Node0x122b130[shape=record, label="  %36 = add i32 %35, %15"];
	Node0x122b1a0[shape=record, label="  %37 = add i32 %36, %13"];
	Node0x122b210[shape=record, label="  %38 = add i32 %37, %25"];
	Node0x122b280[shape=record, label="  %39 = add i32 %38, %19"];
	Node0x122b2f0[shape=record, label="  %40 = sub i32 %39, %24"];
	Node0x122b360[shape=record, label="  %41 = icmp eq i32 %6, %40"];
	Node0x11ca268[shape=record, label="  %42 = select i1 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x122b800[shape=record, label="  %43 = tail call i32 @puts(i8* nonnull dereferenceable(1) %42)"];
	Node0x122b850[shape=record, label="  ret void"];
	Node0x1229a90 -> Node0x122a110;
	Node0x122a110 -> Node0x122a180;
	Node0x122a180 -> Node0x122a1f0;
	Node0x122a1f0 -> Node0x122a260;
	Node0x122a260 -> Node0x122a300;
	Node0x122a300 -> Node0x122a370;
	Node0x122a370 -> Node0x122a3e0;
	Node0x122a3e0 -> Node0x122a480;
	Node0x122a480 -> Node0x122a4f0;
	Node0x122a4f0 -> Node0x122a590;
	Node0x122a590 -> Node0x122a600;
	Node0x122a600 -> Node0x122a670;
	Node0x122a670 -> Node0x122a6e0;
	Node0x122a6e0 -> Node0x122a750;
	Node0x122a750 -> Node0x122a7c0;
	Node0x122a7c0 -> Node0x122a830;
	Node0x122a830 -> Node0x122a8d0;
	Node0x122a8d0 -> Node0x122a940;
	Node0x122a940 -> Node0x122a9b0;
	Node0x122a9b0 -> Node0x122aa50;
	Node0x122aa50 -> Node0x122aac0;
	Node0x122aac0 -> Node0x122ab30;
	Node0x122ab30 -> Node0x122aba0;
	Node0x122aba0 -> Node0x122ac10;
	Node0x122ac10 -> Node0x122ac80;
	Node0x122ac80 -> Node0x122acf0;
	Node0x122acf0 -> Node0x122ad60;
	Node0x122ad60 -> Node0x122afe0;
	Node0x122afe0 -> Node0x122b050;
	Node0x122b050 -> Node0x122b0c0;
	Node0x122b0c0 -> Node0x122b130;
	Node0x122b130 -> Node0x122b1a0;
	Node0x122b1a0 -> Node0x122b210;
	Node0x122b210 -> Node0x122b280;
	Node0x122b280 -> Node0x122b2f0;
	Node0x122b2f0 -> Node0x122b360;
	Node0x122b360 -> Node0x11ca268;
	Node0x11ca268 -> Node0x122b800;
	Node0x122b800 -> Node0x122b850;
edge [color=red]
	Node0x1229a90 -> Node0x122a110;
	Node0x122a1f0 -> Node0x122a260;
	Node0x122a260 -> Node0x122a300;
	Node0x122a370 -> Node0x122a3e0;
	Node0x122a3e0 -> Node0x122a480;
	Node0x122a1f0 -> Node0x122a4f0;
	Node0x122a370 -> Node0x122a590;
	Node0x122a600 -> Node0x122a670;
	Node0x122a670 -> Node0x122a6e0;
	Node0x122a6e0 -> Node0x122a750;
	Node0x122a600 -> Node0x122a830;
	Node0x122a8d0 -> Node0x122a940;
	Node0x122a940 -> Node0x122a9b0;
	Node0x122a670 -> Node0x122aa50;
	Node0x122aac0 -> Node0x122ab30;
	Node0x122a830 -> Node0x122ab30;
	Node0x122ab30 -> Node0x122aba0;
	Node0x122a1f0 -> Node0x122aba0;
	Node0x122aba0 -> Node0x122ac10;
	Node0x122ac10 -> Node0x122ac80;
	Node0x122a180 -> Node0x122ac80;
	Node0x122ac80 -> Node0x122acf0;
	Node0x122a260 -> Node0x122acf0;
	Node0x122acf0 -> Node0x122ad60;
	Node0x122a4f0 -> Node0x122ad60;
	Node0x122ad60 -> Node0x122afe0;
	Node0x122afe0 -> Node0x122b050;
	Node0x122a7c0 -> Node0x122b050;
	Node0x122b050 -> Node0x122b0c0;
	Node0x122a300 -> Node0x122b0c0;
	Node0x122b0c0 -> Node0x122b130;
	Node0x122a590 -> Node0x122b130;
	Node0x122b130 -> Node0x122b1a0;
	Node0x122a480 -> Node0x122b1a0;
	Node0x122b1a0 -> Node0x122b210;
	Node0x122aa50 -> Node0x122b210;
	Node0x122b210 -> Node0x122b280;
	Node0x122a750 -> Node0x122b280;
	Node0x122b280 -> Node0x122b2f0;
	Node0x122a9b0 -> Node0x122b2f0;
	Node0x122a110 -> Node0x122b360;
	Node0x122b2f0 -> Node0x122b360;
	Node0x122b360 -> Node0x11ca268;
	Node0x11ca268 -> Node0x122b800;
}
