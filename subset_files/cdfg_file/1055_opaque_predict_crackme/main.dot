digraph "DFG for'main' function" {
	Node0xfe9d88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xfe9e08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xfe9e98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xfea2f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xfea3d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xfea4f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfea730[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xfea7e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xfeb758[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xfebde0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0xfebe50[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0xfebec0[shape=record, label="  %10 = xor i32 %6, -1"];
	Node0xfebf30[shape=record, label="  %11 = mul i32 %10, -3"];
	Node0xfebfa0[shape=record, label="  %12 = add i32 %9, %11"];
	Node0xfec010[shape=record, label="  %13 = mul i32 %6, -2"];
	Node0xfec080[shape=record, label="  %14 = xor i32 %7, -1"];
	Node0xfec0f0[shape=record, label="  %15 = or i32 %6, %14"];
	Node0xfec160[shape=record, label="  %16 = or i32 %7, %10"];
	Node0xfec1d0[shape=record, label="  %17 = shl i32 %8, 1"];
	Node0xfec240[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0xfec2b0[shape=record, label="  %19 = or i32 %7, %6"];
	Node0xfec320[shape=record, label="  %20 = shl i32 %19, 2"];
	Node0xfec390[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0xfec400[shape=record, label="  %22 = xor i32 %15, -1"];
	Node0xfec470[shape=record, label="  %23 = mul i32 %22, -6"];
	Node0xfec4e0[shape=record, label="  %24 = add i32 %13, -1"];
	Node0xfec550[shape=record, label="  %25 = add i32 %24, %7"];
	Node0xfec5c0[shape=record, label="  %26 = sub i32 %25, %15"];
	Node0xfec630[shape=record, label="  %27 = sub i32 %26, %16"];
	Node0xfec6a0[shape=record, label="  %28 = add i32 %27, %23"];
	Node0xfec710[shape=record, label="  %29 = add i32 %28, %18"];
	Node0xfec780[shape=record, label="  %30 = sub i32 %29, %21"];
	Node0xfec7f0[shape=record, label="  %31 = icmp eq i32 %12, %30"];
	Node0xf8a9d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xfeca90[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0xfecce8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfece48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xfecf08[shape=record, label="  ret i32 0"];
	Node0xfe9d88 -> Node0xfe9e08;
	Node0xfe9e08 -> Node0xfe9e98;
	Node0xfe9e98 -> Node0xfea2f8;
	Node0xfea2f8 -> Node0xfea3d8;
	Node0xfea3d8 -> Node0xfea4f8;
	Node0xfea4f8 -> Node0xfea730;
	Node0xfea730 -> Node0xfea7e8;
	Node0xfea7e8 -> Node0xfeb758;
	Node0xfeb758 -> Node0xfebde0;
	Node0xfebde0 -> Node0xfebe50;
	Node0xfebe50 -> Node0xfebec0;
	Node0xfebec0 -> Node0xfebf30;
	Node0xfebf30 -> Node0xfebfa0;
	Node0xfebfa0 -> Node0xfec010;
	Node0xfec010 -> Node0xfec080;
	Node0xfec080 -> Node0xfec0f0;
	Node0xfec0f0 -> Node0xfec160;
	Node0xfec160 -> Node0xfec1d0;
	Node0xfec1d0 -> Node0xfec240;
	Node0xfec240 -> Node0xfec2b0;
	Node0xfec2b0 -> Node0xfec320;
	Node0xfec320 -> Node0xfec390;
	Node0xfec390 -> Node0xfec400;
	Node0xfec400 -> Node0xfec470;
	Node0xfec470 -> Node0xfec4e0;
	Node0xfec4e0 -> Node0xfec550;
	Node0xfec550 -> Node0xfec5c0;
	Node0xfec5c0 -> Node0xfec630;
	Node0xfec630 -> Node0xfec6a0;
	Node0xfec6a0 -> Node0xfec710;
	Node0xfec710 -> Node0xfec780;
	Node0xfec780 -> Node0xfec7f0;
	Node0xfec7f0 -> Node0xf8a9d8;
	Node0xf8a9d8 -> Node0xfeca90;
	Node0xfeca90 -> Node0xfecce8;
	Node0xfecce8 -> Node0xfece48;
	Node0xfece48 -> Node0xfecf08;
edge [color=red]
	Node0xfe9d88 -> Node0xfe9e98;
	Node0xfe9e98 -> Node0xfea2f8;
	Node0xfe9e08 -> Node0xfea3d8;
	Node0xfea3d8 -> Node0xfea4f8;
	Node0xfe9d88 -> Node0xfea730;
	Node0xfe9e08 -> Node0xfea730;
	Node0xfe9d88 -> Node0xfea7e8;
	Node0xfe9e08 -> Node0xfeb758;
	Node0xfeb758 -> Node0xfebde0;
	Node0xfea7e8 -> Node0xfebde0;
	Node0xfebde0 -> Node0xfebe50;
	Node0xfea7e8 -> Node0xfebec0;
	Node0xfebec0 -> Node0xfebf30;
	Node0xfebe50 -> Node0xfebfa0;
	Node0xfebf30 -> Node0xfebfa0;
	Node0xfea7e8 -> Node0xfec010;
	Node0xfeb758 -> Node0xfec080;
	Node0xfea7e8 -> Node0xfec0f0;
	Node0xfec080 -> Node0xfec0f0;
	Node0xfeb758 -> Node0xfec160;
	Node0xfebec0 -> Node0xfec160;
	Node0xfebde0 -> Node0xfec1d0;
	Node0xfec1d0 -> Node0xfec240;
	Node0xfeb758 -> Node0xfec2b0;
	Node0xfea7e8 -> Node0xfec2b0;
	Node0xfec2b0 -> Node0xfec320;
	Node0xfec320 -> Node0xfec390;
	Node0xfec0f0 -> Node0xfec400;
	Node0xfec400 -> Node0xfec470;
	Node0xfec010 -> Node0xfec4e0;
	Node0xfec4e0 -> Node0xfec550;
	Node0xfeb758 -> Node0xfec550;
	Node0xfec550 -> Node0xfec5c0;
	Node0xfec0f0 -> Node0xfec5c0;
	Node0xfec5c0 -> Node0xfec630;
	Node0xfec160 -> Node0xfec630;
	Node0xfec630 -> Node0xfec6a0;
	Node0xfec470 -> Node0xfec6a0;
	Node0xfec6a0 -> Node0xfec710;
	Node0xfec240 -> Node0xfec710;
	Node0xfec710 -> Node0xfec780;
	Node0xfec390 -> Node0xfec780;
	Node0xfebfa0 -> Node0xfec7f0;
	Node0xfec780 -> Node0xfec7f0;
	Node0xfec7f0 -> Node0xf8a9d8;
	Node0xf8a9d8 -> Node0xfeca90;
	Node0xfea3d8 -> Node0xfecce8;
	Node0xfe9e98 -> Node0xfece48;
}
