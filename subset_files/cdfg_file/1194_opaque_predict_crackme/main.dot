digraph "DFG for'main' function" {
	Node0x10bbc58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x10bbcd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x10bbd68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x10bc1c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x10bc2a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x10bc3c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10bc600[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x10bc6b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10bd628[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10bdcb0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x10bdd20[shape=record, label="  %9 = xor i32 %6, %8"];
	Node0x10bdd90[shape=record, label="  %10 = mul i32 %9, -2"];
	Node0x10bde00[shape=record, label="  %11 = sub i32 %10, %8"];
	Node0x10bde70[shape=record, label="  %12 = and i32 %6, %8"];
	Node0x10bdee0[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x10bdf50[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x10bdfc0[shape=record, label="  %15 = or i32 %6, %8"];
	Node0x10be030[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x10be0a0[shape=record, label="  %17 = shl i32 %13, 1"];
	Node0x10be110[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x10be180[shape=record, label="  %19 = or i32 %17, 1"];
	Node0x10be1f0[shape=record, label="  %20 = add i32 %12, %16"];
	Node0x10be260[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x10be2d0[shape=record, label="  %22 = add i32 %6, 3"];
	Node0x10be340[shape=record, label="  %23 = sub i32 %22, %13"];
	Node0x10be3b0[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x10be420[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x10be490[shape=record, label="  %26 = sub i32 %25, %15"];
	Node0x10be500[shape=record, label="  %27 = add i32 %26, %19"];
	Node0x10be570[shape=record, label="  %28 = add i32 %27, %18"];
	Node0x10be5e0[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x10be650[shape=record, label="  %30 = icmp eq i32 %11, %29"];
	Node0x105c9d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x10be6e0[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x10beb48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10beca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x10bed68[shape=record, label="  ret i32 0"];
	Node0x10bbc58 -> Node0x10bbcd8;
	Node0x10bbcd8 -> Node0x10bbd68;
	Node0x10bbd68 -> Node0x10bc1c8;
	Node0x10bc1c8 -> Node0x10bc2a8;
	Node0x10bc2a8 -> Node0x10bc3c8;
	Node0x10bc3c8 -> Node0x10bc600;
	Node0x10bc600 -> Node0x10bc6b8;
	Node0x10bc6b8 -> Node0x10bd628;
	Node0x10bd628 -> Node0x10bdcb0;
	Node0x10bdcb0 -> Node0x10bdd20;
	Node0x10bdd20 -> Node0x10bdd90;
	Node0x10bdd90 -> Node0x10bde00;
	Node0x10bde00 -> Node0x10bde70;
	Node0x10bde70 -> Node0x10bdee0;
	Node0x10bdee0 -> Node0x10bdf50;
	Node0x10bdf50 -> Node0x10bdfc0;
	Node0x10bdfc0 -> Node0x10be030;
	Node0x10be030 -> Node0x10be0a0;
	Node0x10be0a0 -> Node0x10be110;
	Node0x10be110 -> Node0x10be180;
	Node0x10be180 -> Node0x10be1f0;
	Node0x10be1f0 -> Node0x10be260;
	Node0x10be260 -> Node0x10be2d0;
	Node0x10be2d0 -> Node0x10be340;
	Node0x10be340 -> Node0x10be3b0;
	Node0x10be3b0 -> Node0x10be420;
	Node0x10be420 -> Node0x10be490;
	Node0x10be490 -> Node0x10be500;
	Node0x10be500 -> Node0x10be570;
	Node0x10be570 -> Node0x10be5e0;
	Node0x10be5e0 -> Node0x10be650;
	Node0x10be650 -> Node0x105c9d8;
	Node0x105c9d8 -> Node0x10be6e0;
	Node0x10be6e0 -> Node0x10beb48;
	Node0x10beb48 -> Node0x10beca8;
	Node0x10beca8 -> Node0x10bed68;
edge [color=red]
	Node0x10bbc58 -> Node0x10bbd68;
	Node0x10bbd68 -> Node0x10bc1c8;
	Node0x10bbcd8 -> Node0x10bc2a8;
	Node0x10bc2a8 -> Node0x10bc3c8;
	Node0x10bbc58 -> Node0x10bc600;
	Node0x10bbcd8 -> Node0x10bc600;
	Node0x10bbc58 -> Node0x10bc6b8;
	Node0x10bbcd8 -> Node0x10bd628;
	Node0x10bd628 -> Node0x10bdcb0;
	Node0x10bc6b8 -> Node0x10bdd20;
	Node0x10bdcb0 -> Node0x10bdd20;
	Node0x10bdd20 -> Node0x10bdd90;
	Node0x10bdd90 -> Node0x10bde00;
	Node0x10bdcb0 -> Node0x10bde00;
	Node0x10bc6b8 -> Node0x10bde70;
	Node0x10bdcb0 -> Node0x10bde70;
	Node0x10bd628 -> Node0x10bdee0;
	Node0x10bc6b8 -> Node0x10bdee0;
	Node0x10bd628 -> Node0x10bdf50;
	Node0x10bc6b8 -> Node0x10bdf50;
	Node0x10bc6b8 -> Node0x10bdfc0;
	Node0x10bdcb0 -> Node0x10bdfc0;
	Node0x10bdfc0 -> Node0x10be030;
	Node0x10bdee0 -> Node0x10be0a0;
	Node0x10be0a0 -> Node0x10be110;
	Node0x10be0a0 -> Node0x10be180;
	Node0x10bde70 -> Node0x10be1f0;
	Node0x10be030 -> Node0x10be1f0;
	Node0x10be1f0 -> Node0x10be260;
	Node0x10bc6b8 -> Node0x10be2d0;
	Node0x10be2d0 -> Node0x10be340;
	Node0x10bdee0 -> Node0x10be340;
	Node0x10be340 -> Node0x10be3b0;
	Node0x10bdf50 -> Node0x10be3b0;
	Node0x10be3b0 -> Node0x10be420;
	Node0x10be030 -> Node0x10be420;
	Node0x10be420 -> Node0x10be490;
	Node0x10bdfc0 -> Node0x10be490;
	Node0x10be490 -> Node0x10be500;
	Node0x10be180 -> Node0x10be500;
	Node0x10be500 -> Node0x10be570;
	Node0x10be110 -> Node0x10be570;
	Node0x10be570 -> Node0x10be5e0;
	Node0x10be260 -> Node0x10be5e0;
	Node0x10bde00 -> Node0x10be650;
	Node0x10be5e0 -> Node0x10be650;
	Node0x10be650 -> Node0x105c9d8;
	Node0x105c9d8 -> Node0x10be6e0;
	Node0x10bc2a8 -> Node0x10beb48;
	Node0x10bbd68 -> Node0x10beca8;
}
