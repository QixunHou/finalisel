digraph "DFG for'main' function" {
	Node0x1ab28b8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ab2938[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ab29c8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ab2a28[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1ab2ad8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1ab2f08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ab2fe8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1ab30e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ab31a8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1ab3258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1ab3318[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1ab33c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1aada40[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1ab35c8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ab4538[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ab4ba8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ab4c08[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1ab4c80[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1ab4cf0[shape=record, label="  %15 = and i32 %12, %11"];
	Node0x1ab4d60[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x1ab4dd0[shape=record, label="  %17 = sub i32 %16, %14"];
	Node0x1ab4e40[shape=record, label="  %18 = add i32 %17, %13"];
	Node0x1ab4eb0[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x1ab4f20[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x1ab4f90[shape=record, label="  %21 = and i32 %11, %20"];
	Node0x1ab5000[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x1ab5070[shape=record, label="  %23 = or i32 %11, %20"];
	Node0x1ab50e0[shape=record, label="  %24 = xor i32 %14, -1"];
	Node0x1ab5150[shape=record, label="  %25 = shl i32 %19, 1"];
	Node0x1ab51c0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x1ab5230[shape=record, label="  %27 = shl i32 %21, 1"];
	Node0x1ab52a0[shape=record, label="  %28 = mul i32 %15, -3"];
	Node0x1ab5310[shape=record, label="  %29 = xor i32 %13, -1"];
	Node0x1ab5380[shape=record, label="  %30 = or i32 %10, %29"];
	Node0x1ab53f0[shape=record, label="  %31 = xor i32 %10, %29"];
	Node0x1ab5460[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x1ab54d0[shape=record, label="  %33 = sub i32 2147483646, %12"];
	Node0x1ab5540[shape=record, label="  %34 = add i32 %33, %23"];
	Node0x1ab55b0[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x1ab5620[shape=record, label="  %36 = add i32 %31, 5"];
	Node0x1ab5690[shape=record, label="  %37 = add i32 %36, %12"];
	Node0x1ab5700[shape=record, label="  %38 = add i32 %37, %22"];
	Node0x1ab5770[shape=record, label="  %39 = add i32 %38, %19"];
	Node0x1ab57e0[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x1ab5850[shape=record, label="  %41 = sub i32 %40, %27"];
	Node0x1ab58c0[shape=record, label="  %42 = add i32 %41, %28"];
	Node0x1ab5930[shape=record, label="  %43 = sub i32 %42, %30"];
	Node0x1ab59a0[shape=record, label="  %44 = add i32 %43, %32"];
	Node0x1ab5a10[shape=record, label="  %45 = sub i32 %44, %26"];
	Node0x1ab5a80[shape=record, label="  %46 = add i32 %45, %35"];
	Node0x1ab5af0[shape=record, label="  %47 = icmp eq i32 %18, %46"];
	Node0x1a528b8[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ab5b80[shape=record, label="  %49 = call i32 @puts(i8* nonnull dereferenceable(1) %48) #5"];
	Node0x1ab5e28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1ab5f88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1ab6098[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ab61a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ab6268[shape=record, label="  ret i32 0"];
	Node0x1ab28b8 -> Node0x1ab2938;
	Node0x1ab2938 -> Node0x1ab29c8;
	Node0x1ab29c8 -> Node0x1ab2a28;
	Node0x1ab2a28 -> Node0x1ab2ad8;
	Node0x1ab2ad8 -> Node0x1ab2f08;
	Node0x1ab2f08 -> Node0x1ab2fe8;
	Node0x1ab2fe8 -> Node0x1ab30e8;
	Node0x1ab30e8 -> Node0x1ab31a8;
	Node0x1ab31a8 -> Node0x1ab3258;
	Node0x1ab3258 -> Node0x1ab3318;
	Node0x1ab3318 -> Node0x1ab33c8;
	Node0x1ab33c8 -> Node0x1aada40;
	Node0x1aada40 -> Node0x1ab35c8;
	Node0x1ab35c8 -> Node0x1ab4538;
	Node0x1ab4538 -> Node0x1ab4ba8;
	Node0x1ab4ba8 -> Node0x1ab4c08;
	Node0x1ab4c08 -> Node0x1ab4c80;
	Node0x1ab4c80 -> Node0x1ab4cf0;
	Node0x1ab4cf0 -> Node0x1ab4d60;
	Node0x1ab4d60 -> Node0x1ab4dd0;
	Node0x1ab4dd0 -> Node0x1ab4e40;
	Node0x1ab4e40 -> Node0x1ab4eb0;
	Node0x1ab4eb0 -> Node0x1ab4f20;
	Node0x1ab4f20 -> Node0x1ab4f90;
	Node0x1ab4f90 -> Node0x1ab5000;
	Node0x1ab5000 -> Node0x1ab5070;
	Node0x1ab5070 -> Node0x1ab50e0;
	Node0x1ab50e0 -> Node0x1ab5150;
	Node0x1ab5150 -> Node0x1ab51c0;
	Node0x1ab51c0 -> Node0x1ab5230;
	Node0x1ab5230 -> Node0x1ab52a0;
	Node0x1ab52a0 -> Node0x1ab5310;
	Node0x1ab5310 -> Node0x1ab5380;
	Node0x1ab5380 -> Node0x1ab53f0;
	Node0x1ab53f0 -> Node0x1ab5460;
	Node0x1ab5460 -> Node0x1ab54d0;
	Node0x1ab54d0 -> Node0x1ab5540;
	Node0x1ab5540 -> Node0x1ab55b0;
	Node0x1ab55b0 -> Node0x1ab5620;
	Node0x1ab5620 -> Node0x1ab5690;
	Node0x1ab5690 -> Node0x1ab5700;
	Node0x1ab5700 -> Node0x1ab5770;
	Node0x1ab5770 -> Node0x1ab57e0;
	Node0x1ab57e0 -> Node0x1ab5850;
	Node0x1ab5850 -> Node0x1ab58c0;
	Node0x1ab58c0 -> Node0x1ab5930;
	Node0x1ab5930 -> Node0x1ab59a0;
	Node0x1ab59a0 -> Node0x1ab5a10;
	Node0x1ab5a10 -> Node0x1ab5a80;
	Node0x1ab5a80 -> Node0x1ab5af0;
	Node0x1ab5af0 -> Node0x1a528b8;
	Node0x1a528b8 -> Node0x1ab5b80;
	Node0x1ab5b80 -> Node0x1ab5e28;
	Node0x1ab5e28 -> Node0x1ab5f88;
	Node0x1ab5f88 -> Node0x1ab6098;
	Node0x1ab6098 -> Node0x1ab61a8;
	Node0x1ab61a8 -> Node0x1ab6268;
edge [color=red]
	Node0x1ab28b8 -> Node0x1ab2ad8;
	Node0x1ab2ad8 -> Node0x1ab2f08;
	Node0x1ab2938 -> Node0x1ab2fe8;
	Node0x1ab2fe8 -> Node0x1ab30e8;
	Node0x1ab29c8 -> Node0x1ab31a8;
	Node0x1ab31a8 -> Node0x1ab3258;
	Node0x1ab2a28 -> Node0x1ab3318;
	Node0x1ab3318 -> Node0x1ab33c8;
	Node0x1ab28b8 -> Node0x1aada40;
	Node0x1ab2938 -> Node0x1aada40;
	Node0x1ab29c8 -> Node0x1aada40;
	Node0x1ab2a28 -> Node0x1aada40;
	Node0x1ab28b8 -> Node0x1ab35c8;
	Node0x1ab2938 -> Node0x1ab4538;
	Node0x1ab29c8 -> Node0x1ab4ba8;
	Node0x1ab2a28 -> Node0x1ab4c08;
	Node0x1ab4ba8 -> Node0x1ab4c80;
	Node0x1ab4538 -> Node0x1ab4c80;
	Node0x1ab4ba8 -> Node0x1ab4cf0;
	Node0x1ab4538 -> Node0x1ab4cf0;
	Node0x1ab4cf0 -> Node0x1ab4d60;
	Node0x1ab4d60 -> Node0x1ab4dd0;
	Node0x1ab4c80 -> Node0x1ab4dd0;
	Node0x1ab4dd0 -> Node0x1ab4e40;
	Node0x1ab4c08 -> Node0x1ab4e40;
	Node0x1ab4ba8 -> Node0x1ab4eb0;
	Node0x1ab4538 -> Node0x1ab4eb0;
	Node0x1ab4ba8 -> Node0x1ab4f20;
	Node0x1ab4538 -> Node0x1ab4f90;
	Node0x1ab4f20 -> Node0x1ab4f90;
	Node0x1ab4f90 -> Node0x1ab5000;
	Node0x1ab4538 -> Node0x1ab5070;
	Node0x1ab4f20 -> Node0x1ab5070;
	Node0x1ab4c80 -> Node0x1ab50e0;
	Node0x1ab4eb0 -> Node0x1ab5150;
	Node0x1ab5150 -> Node0x1ab51c0;
	Node0x1ab4f90 -> Node0x1ab5230;
	Node0x1ab4cf0 -> Node0x1ab52a0;
	Node0x1ab4c08 -> Node0x1ab5310;
	Node0x1ab35c8 -> Node0x1ab5380;
	Node0x1ab5310 -> Node0x1ab5380;
	Node0x1ab35c8 -> Node0x1ab53f0;
	Node0x1ab5310 -> Node0x1ab53f0;
	Node0x1ab4c08 -> Node0x1ab5460;
	Node0x1ab35c8 -> Node0x1ab5460;
	Node0x1ab4ba8 -> Node0x1ab54d0;
	Node0x1ab54d0 -> Node0x1ab5540;
	Node0x1ab5070 -> Node0x1ab5540;
	Node0x1ab5540 -> Node0x1ab55b0;
	Node0x1ab53f0 -> Node0x1ab5620;
	Node0x1ab5620 -> Node0x1ab5690;
	Node0x1ab4ba8 -> Node0x1ab5690;
	Node0x1ab5690 -> Node0x1ab5700;
	Node0x1ab5000 -> Node0x1ab5700;
	Node0x1ab5700 -> Node0x1ab5770;
	Node0x1ab4eb0 -> Node0x1ab5770;
	Node0x1ab5770 -> Node0x1ab57e0;
	Node0x1ab50e0 -> Node0x1ab57e0;
	Node0x1ab57e0 -> Node0x1ab5850;
	Node0x1ab5230 -> Node0x1ab5850;
	Node0x1ab5850 -> Node0x1ab58c0;
	Node0x1ab52a0 -> Node0x1ab58c0;
	Node0x1ab58c0 -> Node0x1ab5930;
	Node0x1ab5380 -> Node0x1ab5930;
	Node0x1ab5930 -> Node0x1ab59a0;
	Node0x1ab5460 -> Node0x1ab59a0;
	Node0x1ab59a0 -> Node0x1ab5a10;
	Node0x1ab51c0 -> Node0x1ab5a10;
	Node0x1ab5a10 -> Node0x1ab5a80;
	Node0x1ab55b0 -> Node0x1ab5a80;
	Node0x1ab4e40 -> Node0x1ab5af0;
	Node0x1ab5a80 -> Node0x1ab5af0;
	Node0x1ab5af0 -> Node0x1a528b8;
	Node0x1a528b8 -> Node0x1ab5b80;
	Node0x1ab3318 -> Node0x1ab5e28;
	Node0x1ab31a8 -> Node0x1ab5f88;
	Node0x1ab2fe8 -> Node0x1ab6098;
	Node0x1ab2ad8 -> Node0x1ab61a8;
}
