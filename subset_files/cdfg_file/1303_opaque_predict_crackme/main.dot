digraph "DFG for'main' function" {
	Node0x1a2ea38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a2eab8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a2eb48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1a2eba8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1a2ec58[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1a2f088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a2f168[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1a2f268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a2f328[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1a2f3d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1a2f498[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1a2f548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1a29ab0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1a2f748[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a306b8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a30d28[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1a30d88[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1a30e00[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1a30e70[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1a30ee0[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x1a30f50[shape=record, label="  %17 = and i32 %11, %16"];
	Node0x1a30fc0[shape=record, label="  %18 = xor i32 %13, %10"];
	Node0x1a31030[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x1a310a0[shape=record, label="  %20 = sub i32 -2, %17"];
	Node0x1a31110[shape=record, label="  %21 = add i32 %20, %15"];
	Node0x1a31180[shape=record, label="  %22 = add i32 %21, %19"];
	Node0x1a311f0[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x1a31260[shape=record, label="  %24 = or i32 %11, %16"];
	Node0x1a312d0[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0x1a31340[shape=record, label="  %26 = xor i32 %25, -4"];
	Node0x1a313b0[shape=record, label="  %27 = xor i32 %13, -1"];
	Node0x1a31420[shape=record, label="  %28 = or i32 %10, %27"];
	Node0x1a31490[shape=record, label="  %29 = shl i32 %10, 1"];
	Node0x1a31500[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x1a31570[shape=record, label="  %31 = xor i32 %30, -1"];
	Node0x1a315e0[shape=record, label="  %32 = mul i32 %31, 3"];
	Node0x1a31650[shape=record, label="  %33 = and i32 %10, %27"];
	Node0x1a316c0[shape=record, label="  %34 = add i32 %33, %13"];
	Node0x1a31730[shape=record, label="  %35 = mul i32 %34, 5"];
	Node0x1a317a0[shape=record, label="  %36 = sub i32 %24, %11"];
	Node0x1a31810[shape=record, label="  %37 = add i32 %36, %17"];
	Node0x1a31880[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x1a318f0[shape=record, label="  %39 = add i32 %10, 3"];
	Node0x1a31960[shape=record, label="  %40 = add i32 %39, %11"];
	Node0x1a319d0[shape=record, label="  %41 = sub i32 %40, %29"];
	Node0x1a31a40[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x1a31ab0[shape=record, label="  %43 = add i32 %42, %28"];
	Node0x1a31b20[shape=record, label="  %44 = sub i32 %43, %18"];
	Node0x1a31b90[shape=record, label="  %45 = sub i32 %44, %30"];
	Node0x1a31c00[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x1a31c70[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x1a31ce0[shape=record, label="  %48 = add i32 %47, %38"];
	Node0x1a31d50[shape=record, label="  %49 = add i32 %48, %35"];
	Node0x1a31dc0[shape=record, label="  %50 = icmp eq i32 %22, %49"];
	Node0x19ce8b8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a31e50[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0x1a320f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1a32258[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1a32368[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a32478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a32538[shape=record, label="  ret i32 0"];
	Node0x1a2ea38 -> Node0x1a2eab8;
	Node0x1a2eab8 -> Node0x1a2eb48;
	Node0x1a2eb48 -> Node0x1a2eba8;
	Node0x1a2eba8 -> Node0x1a2ec58;
	Node0x1a2ec58 -> Node0x1a2f088;
	Node0x1a2f088 -> Node0x1a2f168;
	Node0x1a2f168 -> Node0x1a2f268;
	Node0x1a2f268 -> Node0x1a2f328;
	Node0x1a2f328 -> Node0x1a2f3d8;
	Node0x1a2f3d8 -> Node0x1a2f498;
	Node0x1a2f498 -> Node0x1a2f548;
	Node0x1a2f548 -> Node0x1a29ab0;
	Node0x1a29ab0 -> Node0x1a2f748;
	Node0x1a2f748 -> Node0x1a306b8;
	Node0x1a306b8 -> Node0x1a30d28;
	Node0x1a30d28 -> Node0x1a30d88;
	Node0x1a30d88 -> Node0x1a30e00;
	Node0x1a30e00 -> Node0x1a30e70;
	Node0x1a30e70 -> Node0x1a30ee0;
	Node0x1a30ee0 -> Node0x1a30f50;
	Node0x1a30f50 -> Node0x1a30fc0;
	Node0x1a30fc0 -> Node0x1a31030;
	Node0x1a31030 -> Node0x1a310a0;
	Node0x1a310a0 -> Node0x1a31110;
	Node0x1a31110 -> Node0x1a31180;
	Node0x1a31180 -> Node0x1a311f0;
	Node0x1a311f0 -> Node0x1a31260;
	Node0x1a31260 -> Node0x1a312d0;
	Node0x1a312d0 -> Node0x1a31340;
	Node0x1a31340 -> Node0x1a313b0;
	Node0x1a313b0 -> Node0x1a31420;
	Node0x1a31420 -> Node0x1a31490;
	Node0x1a31490 -> Node0x1a31500;
	Node0x1a31500 -> Node0x1a31570;
	Node0x1a31570 -> Node0x1a315e0;
	Node0x1a315e0 -> Node0x1a31650;
	Node0x1a31650 -> Node0x1a316c0;
	Node0x1a316c0 -> Node0x1a31730;
	Node0x1a31730 -> Node0x1a317a0;
	Node0x1a317a0 -> Node0x1a31810;
	Node0x1a31810 -> Node0x1a31880;
	Node0x1a31880 -> Node0x1a318f0;
	Node0x1a318f0 -> Node0x1a31960;
	Node0x1a31960 -> Node0x1a319d0;
	Node0x1a319d0 -> Node0x1a31a40;
	Node0x1a31a40 -> Node0x1a31ab0;
	Node0x1a31ab0 -> Node0x1a31b20;
	Node0x1a31b20 -> Node0x1a31b90;
	Node0x1a31b90 -> Node0x1a31c00;
	Node0x1a31c00 -> Node0x1a31c70;
	Node0x1a31c70 -> Node0x1a31ce0;
	Node0x1a31ce0 -> Node0x1a31d50;
	Node0x1a31d50 -> Node0x1a31dc0;
	Node0x1a31dc0 -> Node0x19ce8b8;
	Node0x19ce8b8 -> Node0x1a31e50;
	Node0x1a31e50 -> Node0x1a320f8;
	Node0x1a320f8 -> Node0x1a32258;
	Node0x1a32258 -> Node0x1a32368;
	Node0x1a32368 -> Node0x1a32478;
	Node0x1a32478 -> Node0x1a32538;
edge [color=red]
	Node0x1a2ea38 -> Node0x1a2ec58;
	Node0x1a2ec58 -> Node0x1a2f088;
	Node0x1a2eab8 -> Node0x1a2f168;
	Node0x1a2f168 -> Node0x1a2f268;
	Node0x1a2eb48 -> Node0x1a2f328;
	Node0x1a2f328 -> Node0x1a2f3d8;
	Node0x1a2eba8 -> Node0x1a2f498;
	Node0x1a2f498 -> Node0x1a2f548;
	Node0x1a2ea38 -> Node0x1a29ab0;
	Node0x1a2eab8 -> Node0x1a29ab0;
	Node0x1a2eb48 -> Node0x1a29ab0;
	Node0x1a2eba8 -> Node0x1a29ab0;
	Node0x1a2ea38 -> Node0x1a2f748;
	Node0x1a2eab8 -> Node0x1a306b8;
	Node0x1a2eb48 -> Node0x1a30d28;
	Node0x1a2eba8 -> Node0x1a30d88;
	Node0x1a30d28 -> Node0x1a30e00;
	Node0x1a306b8 -> Node0x1a30e00;
	Node0x1a30e00 -> Node0x1a30e70;
	Node0x1a30d28 -> Node0x1a30ee0;
	Node0x1a306b8 -> Node0x1a30f50;
	Node0x1a30ee0 -> Node0x1a30f50;
	Node0x1a30d88 -> Node0x1a30fc0;
	Node0x1a2f748 -> Node0x1a30fc0;
	Node0x1a30fc0 -> Node0x1a31030;
	Node0x1a30f50 -> Node0x1a310a0;
	Node0x1a310a0 -> Node0x1a31110;
	Node0x1a30e70 -> Node0x1a31110;
	Node0x1a31110 -> Node0x1a31180;
	Node0x1a31030 -> Node0x1a31180;
	Node0x1a30d28 -> Node0x1a311f0;
	Node0x1a306b8 -> Node0x1a311f0;
	Node0x1a306b8 -> Node0x1a31260;
	Node0x1a30ee0 -> Node0x1a31260;
	Node0x1a31260 -> Node0x1a312d0;
	Node0x1a312d0 -> Node0x1a31340;
	Node0x1a30d88 -> Node0x1a313b0;
	Node0x1a2f748 -> Node0x1a31420;
	Node0x1a313b0 -> Node0x1a31420;
	Node0x1a2f748 -> Node0x1a31490;
	Node0x1a30d88 -> Node0x1a31500;
	Node0x1a2f748 -> Node0x1a31500;
	Node0x1a31500 -> Node0x1a31570;
	Node0x1a31570 -> Node0x1a315e0;
	Node0x1a2f748 -> Node0x1a31650;
	Node0x1a313b0 -> Node0x1a31650;
	Node0x1a31650 -> Node0x1a316c0;
	Node0x1a30d88 -> Node0x1a316c0;
	Node0x1a316c0 -> Node0x1a31730;
	Node0x1a31260 -> Node0x1a317a0;
	Node0x1a306b8 -> Node0x1a317a0;
	Node0x1a317a0 -> Node0x1a31810;
	Node0x1a30f50 -> Node0x1a31810;
	Node0x1a31810 -> Node0x1a31880;
	Node0x1a2f748 -> Node0x1a318f0;
	Node0x1a318f0 -> Node0x1a31960;
	Node0x1a306b8 -> Node0x1a31960;
	Node0x1a31960 -> Node0x1a319d0;
	Node0x1a31490 -> Node0x1a319d0;
	Node0x1a319d0 -> Node0x1a31a40;
	Node0x1a311f0 -> Node0x1a31a40;
	Node0x1a31a40 -> Node0x1a31ab0;
	Node0x1a31420 -> Node0x1a31ab0;
	Node0x1a31ab0 -> Node0x1a31b20;
	Node0x1a30fc0 -> Node0x1a31b20;
	Node0x1a31b20 -> Node0x1a31b90;
	Node0x1a31500 -> Node0x1a31b90;
	Node0x1a31b90 -> Node0x1a31c00;
	Node0x1a31340 -> Node0x1a31c00;
	Node0x1a31c00 -> Node0x1a31c70;
	Node0x1a315e0 -> Node0x1a31c70;
	Node0x1a31c70 -> Node0x1a31ce0;
	Node0x1a31880 -> Node0x1a31ce0;
	Node0x1a31ce0 -> Node0x1a31d50;
	Node0x1a31730 -> Node0x1a31d50;
	Node0x1a31180 -> Node0x1a31dc0;
	Node0x1a31d50 -> Node0x1a31dc0;
	Node0x1a31dc0 -> Node0x19ce8b8;
	Node0x19ce8b8 -> Node0x1a31e50;
	Node0x1a2f498 -> Node0x1a320f8;
	Node0x1a2f328 -> Node0x1a32258;
	Node0x1a2f168 -> Node0x1a32368;
	Node0x1a2ec58 -> Node0x1a32478;
}
