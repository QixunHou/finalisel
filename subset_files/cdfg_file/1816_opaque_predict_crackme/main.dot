digraph "DFG for'main' function" {
	Node0x215dc88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x215dd08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x215dd98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x215ddf8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x215dea8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x215e2d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x215e3b8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x215e4b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x215e578[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x215e628[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x215e6e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x215e798[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2158b70[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x215e998[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x215f908[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x215ff78[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x215ffd8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x2160050[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x21600c0[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x2160130[shape=record, label="  %16 = and i32 %11, %14"];
	Node0x21601a0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x2160210[shape=record, label="  %18 = add i32 %15, %17"];
	Node0x2160280[shape=record, label="  %19 = xor i32 %13, %10"];
	Node0x21602f0[shape=record, label="  %20 = xor i32 %13, -1"];
	Node0x2160360[shape=record, label="  %21 = add i32 %18, %20"];
	Node0x21603d0[shape=record, label="  %22 = sub i32 %21, %19"];
	Node0x2160440[shape=record, label="  %23 = xor i32 %11, -1"];
	Node0x21604b0[shape=record, label="  %24 = or i32 %12, %11"];
	Node0x2160520[shape=record, label="  %25 = mul i32 %23, -3"];
	Node0x2160590[shape=record, label="  %26 = xor i32 %12, %11"];
	Node0x2160600[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x2160670[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x21606e0[shape=record, label="  %29 = shl i32 %24, 1"];
	Node0x2160750[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0x21607c0[shape=record, label="  %31 = shl i32 %15, 2"];
	Node0x2160830[shape=record, label="  %32 = xor i32 %31, -4"];
	Node0x21608a0[shape=record, label="  %33 = or i32 %13, %10"];
	Node0x2160910[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x2160980[shape=record, label="  %35 = and i32 %13, %10"];
	Node0x21609f0[shape=record, label="  %36 = xor i32 %35, -1"];
	Node0x2160a60[shape=record, label="  %37 = xor i32 %10, -1"];
	Node0x2160ad0[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x2160b40[shape=record, label="  %39 = or i32 %13, %37"];
	Node0x2160bb0[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x2160c20[shape=record, label="  %41 = sub i32 %14, %38"];
	Node0x2160c90[shape=record, label="  %42 = add i32 %41, %25"];
	Node0x2160d00[shape=record, label="  %43 = sub i32 %42, %12"];
	Node0x2160d70[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x2160de0[shape=record, label="  %45 = sub i32 %44, %16"];
	Node0x2160e50[shape=record, label="  %46 = sub i32 %45, %13"];
	Node0x2160ec0[shape=record, label="  %47 = add i32 %46, %36"];
	Node0x2160f30[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x2160fa0[shape=record, label="  %49 = add i32 %48, %28"];
	Node0x2161010[shape=record, label="  %50 = add i32 %49, %30"];
	Node0x2161080[shape=record, label="  %51 = add i32 %50, %32"];
	Node0x21610f0[shape=record, label="  %52 = sub i32 %51, %34"];
	Node0x2161160[shape=record, label="  %53 = add i32 %52, %40"];
	Node0x21611d0[shape=record, label="  %54 = icmp eq i32 %22, %53"];
	Node0x20fd8b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2161260[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x2161508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2161668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2161778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2161888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2161948[shape=record, label="  ret i32 0"];
	Node0x215dc88 -> Node0x215dd08;
	Node0x215dd08 -> Node0x215dd98;
	Node0x215dd98 -> Node0x215ddf8;
	Node0x215ddf8 -> Node0x215dea8;
	Node0x215dea8 -> Node0x215e2d8;
	Node0x215e2d8 -> Node0x215e3b8;
	Node0x215e3b8 -> Node0x215e4b8;
	Node0x215e4b8 -> Node0x215e578;
	Node0x215e578 -> Node0x215e628;
	Node0x215e628 -> Node0x215e6e8;
	Node0x215e6e8 -> Node0x215e798;
	Node0x215e798 -> Node0x2158b70;
	Node0x2158b70 -> Node0x215e998;
	Node0x215e998 -> Node0x215f908;
	Node0x215f908 -> Node0x215ff78;
	Node0x215ff78 -> Node0x215ffd8;
	Node0x215ffd8 -> Node0x2160050;
	Node0x2160050 -> Node0x21600c0;
	Node0x21600c0 -> Node0x2160130;
	Node0x2160130 -> Node0x21601a0;
	Node0x21601a0 -> Node0x2160210;
	Node0x2160210 -> Node0x2160280;
	Node0x2160280 -> Node0x21602f0;
	Node0x21602f0 -> Node0x2160360;
	Node0x2160360 -> Node0x21603d0;
	Node0x21603d0 -> Node0x2160440;
	Node0x2160440 -> Node0x21604b0;
	Node0x21604b0 -> Node0x2160520;
	Node0x2160520 -> Node0x2160590;
	Node0x2160590 -> Node0x2160600;
	Node0x2160600 -> Node0x2160670;
	Node0x2160670 -> Node0x21606e0;
	Node0x21606e0 -> Node0x2160750;
	Node0x2160750 -> Node0x21607c0;
	Node0x21607c0 -> Node0x2160830;
	Node0x2160830 -> Node0x21608a0;
	Node0x21608a0 -> Node0x2160910;
	Node0x2160910 -> Node0x2160980;
	Node0x2160980 -> Node0x21609f0;
	Node0x21609f0 -> Node0x2160a60;
	Node0x2160a60 -> Node0x2160ad0;
	Node0x2160ad0 -> Node0x2160b40;
	Node0x2160b40 -> Node0x2160bb0;
	Node0x2160bb0 -> Node0x2160c20;
	Node0x2160c20 -> Node0x2160c90;
	Node0x2160c90 -> Node0x2160d00;
	Node0x2160d00 -> Node0x2160d70;
	Node0x2160d70 -> Node0x2160de0;
	Node0x2160de0 -> Node0x2160e50;
	Node0x2160e50 -> Node0x2160ec0;
	Node0x2160ec0 -> Node0x2160f30;
	Node0x2160f30 -> Node0x2160fa0;
	Node0x2160fa0 -> Node0x2161010;
	Node0x2161010 -> Node0x2161080;
	Node0x2161080 -> Node0x21610f0;
	Node0x21610f0 -> Node0x2161160;
	Node0x2161160 -> Node0x21611d0;
	Node0x21611d0 -> Node0x20fd8b8;
	Node0x20fd8b8 -> Node0x2161260;
	Node0x2161260 -> Node0x2161508;
	Node0x2161508 -> Node0x2161668;
	Node0x2161668 -> Node0x2161778;
	Node0x2161778 -> Node0x2161888;
	Node0x2161888 -> Node0x2161948;
edge [color=red]
	Node0x215dc88 -> Node0x215dea8;
	Node0x215dea8 -> Node0x215e2d8;
	Node0x215dd08 -> Node0x215e3b8;
	Node0x215e3b8 -> Node0x215e4b8;
	Node0x215dd98 -> Node0x215e578;
	Node0x215e578 -> Node0x215e628;
	Node0x215ddf8 -> Node0x215e6e8;
	Node0x215e6e8 -> Node0x215e798;
	Node0x215dc88 -> Node0x2158b70;
	Node0x215dd08 -> Node0x2158b70;
	Node0x215dd98 -> Node0x2158b70;
	Node0x215ddf8 -> Node0x2158b70;
	Node0x215dc88 -> Node0x215e998;
	Node0x215dd08 -> Node0x215f908;
	Node0x215dd98 -> Node0x215ff78;
	Node0x215ddf8 -> Node0x215ffd8;
	Node0x215ff78 -> Node0x2160050;
	Node0x215f908 -> Node0x21600c0;
	Node0x2160050 -> Node0x21600c0;
	Node0x215f908 -> Node0x2160130;
	Node0x2160050 -> Node0x2160130;
	Node0x2160130 -> Node0x21601a0;
	Node0x21600c0 -> Node0x2160210;
	Node0x21601a0 -> Node0x2160210;
	Node0x215ffd8 -> Node0x2160280;
	Node0x215e998 -> Node0x2160280;
	Node0x215ffd8 -> Node0x21602f0;
	Node0x2160210 -> Node0x2160360;
	Node0x21602f0 -> Node0x2160360;
	Node0x2160360 -> Node0x21603d0;
	Node0x2160280 -> Node0x21603d0;
	Node0x215f908 -> Node0x2160440;
	Node0x215ff78 -> Node0x21604b0;
	Node0x215f908 -> Node0x21604b0;
	Node0x2160440 -> Node0x2160520;
	Node0x215ff78 -> Node0x2160590;
	Node0x215f908 -> Node0x2160590;
	Node0x2160590 -> Node0x2160600;
	Node0x2160600 -> Node0x2160670;
	Node0x21604b0 -> Node0x21606e0;
	Node0x21606e0 -> Node0x2160750;
	Node0x21600c0 -> Node0x21607c0;
	Node0x21607c0 -> Node0x2160830;
	Node0x215ffd8 -> Node0x21608a0;
	Node0x215e998 -> Node0x21608a0;
	Node0x21608a0 -> Node0x2160910;
	Node0x215ffd8 -> Node0x2160980;
	Node0x215e998 -> Node0x2160980;
	Node0x2160980 -> Node0x21609f0;
	Node0x215e998 -> Node0x2160a60;
	Node0x2160a60 -> Node0x2160ad0;
	Node0x215ffd8 -> Node0x2160b40;
	Node0x2160a60 -> Node0x2160b40;
	Node0x2160b40 -> Node0x2160bb0;
	Node0x2160050 -> Node0x2160c20;
	Node0x2160ad0 -> Node0x2160c20;
	Node0x2160c20 -> Node0x2160c90;
	Node0x2160520 -> Node0x2160c90;
	Node0x2160c90 -> Node0x2160d00;
	Node0x215ff78 -> Node0x2160d00;
	Node0x2160d00 -> Node0x2160d70;
	Node0x21604b0 -> Node0x2160d70;
	Node0x2160d70 -> Node0x2160de0;
	Node0x2160130 -> Node0x2160de0;
	Node0x2160de0 -> Node0x2160e50;
	Node0x215ffd8 -> Node0x2160e50;
	Node0x2160e50 -> Node0x2160ec0;
	Node0x21609f0 -> Node0x2160ec0;
	Node0x2160ec0 -> Node0x2160f30;
	Node0x21608a0 -> Node0x2160f30;
	Node0x2160f30 -> Node0x2160fa0;
	Node0x2160670 -> Node0x2160fa0;
	Node0x2160fa0 -> Node0x2161010;
	Node0x2160750 -> Node0x2161010;
	Node0x2161010 -> Node0x2161080;
	Node0x2160830 -> Node0x2161080;
	Node0x2161080 -> Node0x21610f0;
	Node0x2160910 -> Node0x21610f0;
	Node0x21610f0 -> Node0x2161160;
	Node0x2160bb0 -> Node0x2161160;
	Node0x21603d0 -> Node0x21611d0;
	Node0x2161160 -> Node0x21611d0;
	Node0x21611d0 -> Node0x20fd8b8;
	Node0x20fd8b8 -> Node0x2161260;
	Node0x215e6e8 -> Node0x2161508;
	Node0x215e578 -> Node0x2161668;
	Node0x215e3b8 -> Node0x2161778;
	Node0x215dea8 -> Node0x2161888;
}
