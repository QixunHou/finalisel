; ModuleID = '../.././c_source_file/0399_path_condition_crackme.c'
source_filename = "../.././c_source_file/0399_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %2, %0
  %10 = and i32 %9, %8
  %11 = xor i32 %1, -1
  %12 = or i32 %11, %0
  %13 = and i32 %9, %12
  %14 = add i32 %10, %13
  %15 = xor i32 %5, -1
  %16 = xor i32 %3, -1
  %17 = or i32 %16, %4
  %18 = and i32 %17, %15
  %19 = sub i32 %14, %18
  %20 = xor i32 %4, -1
  %21 = or i32 %5, %3
  %22 = and i32 %21, %20
  %23 = shl i32 %22, 1
  %24 = add i32 %19, %23
  %25 = and i32 %11, %2
  %26 = and i32 %25, %0
  %27 = xor i32 %2, %1
  %28 = or i32 %27, %0
  %29 = xor i32 %26, %28
  %30 = or i32 %9, %8
  %31 = xor i32 %2, -1
  %32 = or i32 %31, %0
  %33 = and i32 %32, %8
  %34 = and i32 %11, %0
  %35 = xor i32 %34, %2
  %36 = xor i32 %0, -1
  %37 = shl i32 %36, 1
  %38 = or i32 %11, %2
  %39 = xor i32 %38, %0
  %40 = or i32 %26, %39
  %41 = and i32 %2, %0
  %42 = xor i32 %41, -1
  %43 = and i32 %42, %8
  %44 = xor i32 %27, %0
  %45 = xor i32 %44, -1
  %46 = xor i32 %26, %45
  %47 = or i32 %2, %0
  %48 = xor i32 %47, -1
  %49 = or i32 %7, %48
  %50 = and i32 %25, %36
  %51 = or i32 %27, %36
  %52 = xor i32 %51, -1
  %53 = or i32 %50, %52
  %54 = and i32 %2, %1
  %55 = and i32 %54, %36
  %56 = and i32 %27, %0
  %57 = or i32 %55, %56
  %58 = xor i32 %9, -1
  %59 = or i32 %58, %8
  %60 = and i32 %27, %36
  %61 = and i32 %31, %0
  %62 = or i32 %31, %1
  %63 = xor i32 %61, %62
  %64 = and i32 %1, %0
  %65 = xor i32 %62, -1
  %66 = or i32 %64, %65
  %67 = and i32 %32, %1
  %68 = xor i32 %34, -1
  %69 = and i32 %58, %68
  %70 = and i32 %31, %1
  %71 = xor i32 %70, -1
  %72 = or i32 %71, %0
  %73 = add i32 %70, 1
  %74 = or i32 %54, %34
  %75 = shl i32 %74, 1
  %76 = or i32 %2, %1
  %77 = xor i32 %56, 1073741823
  %78 = xor i32 %77, %55
  %79 = xor i32 %27, -1
  %80 = and i32 %79, %36
  %81 = xor i32 %61, -1
  %82 = xor i32 %81, %1
  %83 = xor i32 %54, -1
  %84 = or i32 %83, %36
  %85 = and i32 %12, %31
  %86 = and i32 %31, %68
  %87 = xor i32 %32, %64
  %88 = or i32 %58, %1
  %89 = or i32 %1, %0
  %90 = and i32 %89, %79
  %91 = xor i32 %34, %83
  %92 = xor i32 %41, %71
  %93 = and i32 %58, %1
  %94 = xor i32 %41, %76
  %95 = and i32 %68, %2
  %96 = shl i32 %95, 1
  %97 = and i32 %54, %0
  %98 = xor i32 %76, %0
  %99 = or i32 %97, %98
  %100 = shl i32 %99, 1
  %101 = xor i32 %61, %83
  %102 = or i32 %64, %31
  %103 = and i32 %58, %8
  %104 = or i32 %41, %8
  %105 = xor i32 %47, %1
  %106 = and i32 %47, %8
  %107 = xor i32 %32, -1
  %108 = or i32 %70, %0
  %109 = xor i32 %107, %1
  %110 = xor i32 %68, %2
  %111 = or i32 %61, %11
  %112 = or i32 %107, %1
  %113 = xor i32 %12, -1
  %114 = xor i32 %113, %2
  %115 = and i32 %81, %1
  %116 = and i32 %31, %8
  %117 = and i32 %76, %0
  %118 = or i32 %64, %48
  %119 = or i32 %9, %64
  %120 = and i32 %7, %2
  %121 = or i32 %48, %11
  %122 = and i32 %76, %36
  %123 = xor i32 %41, %1
  %124 = xor i32 %62, %0
  %125 = and i32 %89, %58
  %126 = shl i32 %125, 1
  %127 = and i32 %38, %36
  %128 = or i32 %26, %127
  %129 = shl i32 %68, 1
  %130 = xor i32 %64, -1
  %131 = xor i32 %130, %2
  %132 = shl i32 %131, 1
  %133 = or i32 %65, %0
  %134 = or i32 %61, %1
  %135 = xor i32 %61, %1
  %136 = and i32 %32, %7
  %137 = xor i32 %76, -1
  %138 = or i32 %64, %137
  %139 = and i32 %38, %0
  %140 = or i32 %50, %139
  %141 = or i32 %107, %8
  %142 = or i32 %27, %113
  %143 = xor i32 %89, -1
  %144 = or i32 %41, %143
  %145 = xor i32 %62, %64
  %146 = or i32 %34, %58
  %147 = or i32 %143, %2
  %148 = xor i32 %97, -1
  %149 = xor i32 %122, %148
  %150 = xor i32 %28, -1
  %151 = or i32 %26, %150
  %152 = xor i32 %76, %64
  %153 = or i32 %62, %36
  %154 = and i32 %83, %0
  %155 = and i32 %62, %0
  %156 = and i32 %9, %7
  %157 = xor i32 %64, %2
  %158 = or i32 %61, %54
  %159 = or i32 %137, %0
  %160 = or i32 %31, %143
  %161 = and i32 %7, %81
  %162 = or i32 %9, %11
  %163 = xor i32 %41, %12
  %164 = xor i32 %98, %148
  %165 = shl i32 %143, 1
  %166 = and i32 %12, %58
  %167 = xor i32 %89, %2
  %168 = or i32 %58, %143
  %169 = and i32 %8, %2
  %170 = and i32 %9, %1
  %171 = or i32 %61, %65
  %172 = and i32 %9, %68
  %173 = or i32 %34, %2
  %174 = shl i32 %173, 1
  %175 = or i32 %79, %113
  %176 = and i32 %27, %130
  %177 = xor i32 %83, %0
  %178 = or i32 %79, %143
  %179 = shl i32 %178, 1
  %180 = or i32 %64, %58
  %181 = xor i32 %26, -1
  %182 = xor i32 %127, %181
  %183 = xor i32 %137, %0
  %184 = shl i32 %183, 1
  %185 = shl i32 %1, 1
  %186 = and i32 %9, %89
  %187 = or i32 %58, %113
  %188 = and i32 %79, %130
  %189 = or i32 %55, %117
  %190 = and i32 %12, %2
  %191 = shl i32 %190, 1
  %192 = xor i32 %50, %51
  %193 = xor i32 %34, %71
  %194 = or i32 %27, %143
  %195 = add i32 %2, 1
  %196 = add i32 %1, 1
  %197 = or i32 %97, %122
  %198 = or i32 %41, %70
  %199 = or i32 %97, %45
  %200 = or i32 %7, %107
  %201 = or i32 %54, %0
  %202 = and i32 %9, %130
  %203 = shl i32 %202, 1
  %204 = xor i32 %48, %1
  %205 = shl i32 %204, 1
  %206 = xor i32 %54, %0
  %207 = and i32 %42, %11
  %208 = or i32 %58, %11
  %209 = or i32 %71, %36
  %210 = shl i32 %209, 1
  %211 = or i32 %9, %1
  %212 = or i32 %64, %79
  %213 = or i32 %9, %7
  %214 = or i32 %7, %58
  %215 = or i32 %83, %0
  %216 = and i32 %31, %130
  %217 = and i32 %7, %42
  %218 = and i32 %62, %36
  %219 = or i32 %76, %36
  %220 = or i32 %79, %36
  %221 = or i32 %34, %31
  %222 = xor i32 %39, %181
  %223 = or i32 %76, %0
  %224 = and i32 %81, %11
  %225 = shl i32 %224, 1
  %226 = and i32 %47, %7
  %227 = or i32 %137, %36
  %228 = xor i32 %117, -1
  %229 = xor i32 %55, %228
  %230 = or i32 %113, %2
  %231 = and i32 %32, %11
  %232 = xor i32 %71, %0
  %233 = and i32 %7, %58
  %234 = or i32 %41, %11
  %235 = or i32 %27, %34
  %236 = or i32 %41, %137
  %237 = xor i32 %42, %1
  %238 = shl i32 %237, 1
  %239 = xor i32 %12, %2
  %240 = and i32 %42, %1
  %241 = and i32 %27, %89
  %242 = or i32 %70, %36
  %243 = or i32 %41, %1
  %244 = and i32 %58, %130
  %245 = shl i32 %244, 1
  %246 = shl i32 %113, 1
  %247 = or i32 %61, %8
  %248 = or i32 %9, %113
  %249 = and i32 %12, %79
  %250 = or i32 %97, %60
  %251 = and i32 %27, %12
  %252 = shl i32 %251, 1
  %253 = and i32 %83, %36
  %254 = or i32 %26, %44
  %255 = and i32 %7, %31
  %256 = and i32 %71, %0
  %257 = and i32 %137, %36
  %258 = mul i32 %257, -7
  %259 = and i32 %70, %36
  %260 = and i32 %137, %0
  %261 = and i32 %70, %0
  %262 = mul i32 %261, -9
  %263 = mul i32 %55, 13
  %264 = and i32 %65, %0
  %265 = mul i32 %264, -10
  %266 = or i32 %15, %4
  %267 = xor i32 %266, -1
  %268 = or i32 %267, %3
  %269 = and i32 %4, %3
  %270 = or i32 %269, %5
  %271 = and i32 %16, %4
  %272 = xor i32 %271, -1
  %273 = xor i32 %5, %4
  %274 = and i32 %273, %272
  %275 = or i32 %4, %3
  %276 = xor i32 %275, -1
  %277 = or i32 %276, %5
  %278 = xor i32 %269, -1
  %279 = shl i32 %21, 1
  %280 = or i32 %15, %3
  %281 = or i32 %269, %267
  %282 = and i32 %5, %3
  %283 = xor i32 %282, -1
  %284 = and i32 %283, %4
  %285 = xor i32 %273, -1
  %286 = or i32 %269, %285
  %287 = or i32 %273, %271
  %288 = and i32 %5, %4
  %289 = and i32 %15, %3
  %290 = or i32 %288, %289
  %291 = or i32 %5, %4
  %292 = xor i32 %291, -1
  %293 = xor i32 %292, %3
  %294 = and i32 %280, %4
  %295 = xor i32 %288, -1
  %296 = and i32 %295, %16
  %297 = add i32 %275, 1
  %298 = or i32 %288, %3
  %299 = and i32 %266, %16
  %300 = shl i32 %299, 1
  %301 = xor i32 %275, %5
  %302 = xor i32 %278, %5
  %303 = xor i32 %4, %3
  %304 = and i32 %303, %295
  %305 = xor i32 %5, %3
  %306 = and i32 %305, %17
  %307 = xor i32 %271, %5
  %308 = xor i32 %17, -1
  %309 = xor i32 %308, %5
  %310 = or i32 %273, %303
  %311 = shl i32 %310, 1
  %312 = xor i32 %280, -1
  %313 = or i32 %282, %271
  %314 = or i32 %305, %269
  %315 = xor i32 %289, -1
  %316 = xor i32 %315, %4
  %317 = and i32 %266, %3
  %318 = xor i32 %271, %283
  %319 = and i32 %275, %15
  %320 = and i32 %282, %4
  %321 = and i32 %305, %20
  %322 = or i32 %320, %321
  %323 = xor i32 %288, %21
  %324 = and i32 %15, %4
  %325 = xor i32 %324, -1
  %326 = xor i32 %303, -1
  %327 = and i32 %325, %326
  %328 = shl i32 %327, 1
  %329 = or i32 %283, %4
  %330 = shl i32 %329, 1
  %331 = shl i32 %321, 1
  %332 = and i32 %282, %20
  %333 = and i32 %305, %4
  %334 = xor i32 %333, -1
  %335 = xor i32 %332, %334
  %336 = and i32 %21, %4
  %337 = or i32 %289, %20
  %338 = xor i32 %305, -1
  %339 = or i32 %338, %4
  %340 = or i32 %312, %20
  %341 = or i32 %320, %22
  %342 = shl i32 %341, 2
  %343 = and i32 %305, %272
  %344 = xor i32 %324, %280
  %345 = shl i32 %344, 1
  %346 = or i32 %280, %20
  %347 = shl i32 %346, 1
  %348 = or i32 %305, %308
  %349 = and i32 %273, %3
  %350 = shl i32 %349, 1
  %351 = shl i32 %291, 1
  %352 = shl i32 %305, 1
  %353 = or i32 %273, %3
  %354 = or i32 %338, %276
  %355 = shl i32 %354, 2
  %356 = and i32 %305, %278
  %357 = and i32 %303, %325
  %358 = and i32 %15, %272
  %359 = shl i32 %358, 1
  %360 = or i32 %305, %276
  %361 = shl i32 %360, 1
  %362 = xor i32 %324, %283
  %363 = or i32 %15, %276
  %364 = xor i32 %291, %269
  %365 = or i32 %271, %285
  %366 = and i32 %17, %5
  %367 = or i32 %338, %308
  %368 = and i32 %16, %5
  %369 = and i32 %368, %4
  %370 = or i32 %16, %5
  %371 = and i32 %370, %20
  %372 = or i32 %369, %371
  %373 = xor i32 %305, %4
  %374 = xor i32 %320, %373
  %375 = xor i32 %291, %3
  %376 = and i32 %285, %326
  %377 = xor i32 %17, %5
  %378 = xor i32 %289, %4
  %379 = and i32 %291, %3
  %380 = xor i32 %295, %3
  %381 = or i32 %305, %4
  %382 = xor i32 %320, -1
  %383 = xor i32 %321, %382
  %384 = or i32 %292, %326
  %385 = and i32 %272, %5
  %386 = or i32 %288, %308
  %387 = or i32 %283, %20
  %388 = or i32 %267, %16
  %389 = or i32 %271, %15
  %390 = shl i32 %272, 1
  %391 = and i32 %291, %326
  %392 = or i32 %305, %271
  %393 = and i32 %17, %285
  %394 = shl i32 %393, 1
  %395 = xor i32 %21, %269
  %396 = xor i32 %21, -1
  %397 = or i32 %396, %4
  %398 = and i32 %291, %16
  %399 = and i32 %285, %278
  %400 = and i32 %285, %16
  %401 = and i32 %368, %20
  %402 = and i32 %370, %4
  %403 = or i32 %401, %402
  %404 = xor i32 %21, %4
  %405 = xor i32 %288, %3
  %406 = add i32 %21, 1
  %407 = xor i32 %338, %4
  %408 = or i32 %15, %326
  %409 = xor i32 %282, %4
  %410 = and i32 %285, %272
  %411 = xor i32 %272, %5
  %412 = and i32 %303, %15
  %413 = or i32 %326, %5
  %414 = xor i32 %271, %315
  %415 = and i32 %273, %275
  %416 = and i32 %289, %4
  %417 = or i32 %269, %15
  %418 = and i32 %273, %16
  %419 = or i32 %324, %16
  %420 = or i32 %269, %312
  %421 = xor i32 %370, %4
  %422 = xor i32 %369, -1
  %423 = xor i32 %421, %422
  %424 = and i32 %283, %20
  %425 = or i32 %332, %336
  %426 = xor i32 %266, %3
  %427 = and i32 %325, %3
  %428 = or i32 %305, %20
  %429 = xor i32 %312, %4
  %430 = xor i32 %288, %275
  %431 = shl i32 %430, 1
  %432 = or i32 %308, %5
  %433 = and i32 %315, %20
  %434 = add i32 %289, 1
  %435 = xor i32 %401, %428
  %436 = and i32 %273, %278
  %437 = or i32 %303, %267
  %438 = and i32 %338, %278
  %439 = or i32 %369, %373
  %440 = xor i32 %269, %5
  %441 = and i32 %295, %326
  %442 = xor i32 %288, %315
  %443 = or i32 %271, %5
  %444 = xor i32 %428, -1
  %445 = or i32 %401, %444
  %446 = or i32 %273, %308
  %447 = and i32 %273, %303
  %448 = and i32 %326, %5
  %449 = or i32 %288, %303
  %450 = or i32 %303, %15
  %451 = and i32 %291, %303
  %452 = or i32 %285, %16
  %453 = add i32 %273, 1
  %454 = xor i32 %373, -1
  %455 = or i32 %320, %454
  %456 = and i32 %338, %272
  %457 = or i32 %320, %404
  %458 = or i32 %267, %326
  %459 = or i32 %285, %326
  %460 = and i32 %266, %303
  %461 = or i32 %282, %4
  %462 = and i32 %325, %16
  %463 = and i32 %273, %17
  %464 = and i32 %266, %326
  %465 = xor i32 %324, %3
  %466 = and i32 %278, %5
  %467 = xor i32 %22, 2147483647
  %468 = xor i32 %467, %320
  %469 = or i32 %303, %285
  %470 = or i32 %273, %269
  %471 = and i32 %15, %326
  %472 = or i32 %285, %276
  %473 = xor i32 %283, %4
  %474 = or i32 %303, %292
  %475 = and i32 %275, %285
  %476 = shl i32 %325, 2
  %477 = or i32 %303, %5
  %478 = xor i32 %267, %3
  %479 = xor i32 %371, %422
  %480 = and i32 %315, %4
  %481 = and i32 %275, %338
  %482 = or i32 %21, %20
  %483 = xor i32 %381, -1
  %484 = or i32 %369, %483
  %485 = or i32 %273, %16
  %486 = or i32 %324, %3
  %487 = or i32 %271, %338
  %488 = or i32 %324, %326
  %489 = and i32 %273, %326
  %490 = shl i32 %489, 1
  %491 = and i32 %338, %4
  %492 = or i32 %15, %308
  %493 = shl i32 %492, 1
  %494 = xor i32 %276, %5
  %495 = or i32 %292, %3
  %496 = or i32 %269, %292
  %497 = xor i32 %325, %3
  %498 = or i32 %324, %282
  %499 = xor i32 %404, %382
  %500 = or i32 %269, %396
  %501 = and i32 %15, %278
  %502 = or i32 %285, %3
  %503 = shl i32 %502, 1
  %504 = and i32 %17, %338
  %505 = xor i32 %266, %269
  %506 = shl i32 %505, 1
  %507 = or i32 %312, %4
  %508 = xor i32 %396, %4
  %509 = and i32 %295, %3
  %510 = or i32 %292, %16
  %511 = or i32 %273, %276
  %512 = or i32 %285, %308
  %513 = and i32 %303, %5
  %514 = and i32 %280, %20
  %515 = or i32 %289, %4
  %516 = add i32 %5, 1
  %517 = xor i32 %280, %269
  %518 = or i32 %332, %333
  %519 = shl i32 %518, 2
  %520 = and i32 %275, %5
  %521 = xor i32 %402, 2147483647
  %522 = xor i32 %521, %401
  %523 = shl i32 %522, 1
  %524 = and i32 %305, %275
  %525 = or i32 %273, %326
  %526 = or i32 %369, %421
  %527 = or i32 %324, %312
  %528 = shl i32 %527, 1
  %529 = or i32 %269, %338
  %530 = or i32 %288, %276
  %531 = and i32 %338, %20
  %532 = and i32 %396, %20
  %533 = mul i32 %532, 20
  %534 = and i32 %289, %20
  %535 = mul i32 %534, 40
  %536 = and i32 %396, %4
  %537 = mul i32 %536, 11
  %538 = mul i32 %416, 38
  %539 = and i32 %312, %20
  %540 = mul i32 %539, 29
  %541 = mul i32 %332, 14
  %542 = and i32 %312, %4
  %543 = mul i32 %542, 24
  %544 = shl i32 %320, 4
  %545 = add i32 %65, %79
  %546 = add i32 %545, %110
  %547 = add i32 %546, %76
  %548 = add i32 %547, %42
  %549 = add i32 %548, %256
  %550 = add i32 %549, %223
  %551 = add i32 %550, %214
  %552 = add i32 %551, %168
  %553 = add i32 %552, %162
  %554 = add i32 %553, %28
  %555 = add i32 %554, %69
  %556 = add i32 %555, %278
  %557 = add i32 %556, %254
  %558 = add i32 %557, %197
  %559 = add i32 %558, %477
  %560 = add i32 %559, %411
  %561 = add i32 %560, %510
  %562 = add i32 %561, %497
  %563 = add i32 %562, %480
  %564 = add i32 %563, %464
  %565 = add i32 %564, %458
  %566 = add i32 %565, %407
  %567 = add i32 %566, %379
  %568 = add i32 %567, %376
  %569 = add i32 %568, %314
  %570 = add i32 %569, %468
  %571 = shl i32 %570, 1
  %572 = add i32 %97, %230
  %573 = add i32 %572, %188
  %574 = add i32 %573, %146
  %575 = sub i32 %88, %574
  %576 = sub i32 %575, %303
  %577 = sub i32 %576, %389
  %578 = sub i32 %577, %491
  %579 = add i32 %578, %517
  %580 = sub i32 %579, %364
  %581 = add i32 %580, %281
  %582 = mul i32 %581, 3
  %583 = add i32 %78, %260
  %584 = add i32 %583, %443
  %585 = shl i32 %584, 2
  %586 = add i32 %147, %32
  %587 = add i32 %586, %116
  %588 = sub i32 %587, %412
  %589 = sub i32 %588, %266
  %590 = add i32 %589, %319
  %591 = sub i32 %590, %415
  %592 = add i32 %591, %481
  %593 = mul i32 %592, 5
  %594 = sub i32 %196, %37
  %595 = sub i32 %594, %64
  %596 = sub i32 %595, %89
  %597 = sub i32 %596, %185
  %598 = add i32 %597, %195
  %599 = add i32 %598, %2
  %600 = add i32 %599, %12
  %601 = add i32 %600, %130
  %602 = sub i32 %601, %35
  %603 = add i32 %602, %73
  %604 = sub i32 %603, %85
  %605 = sub i32 %604, %86
  %606 = sub i32 %605, %61
  %607 = add i32 %606, %102
  %608 = add i32 %607, %107
  %609 = add i32 %608, %70
  %610 = add i32 %609, %114
  %611 = sub i32 %610, %120
  %612 = sub i32 %611, %129
  %613 = add i32 %612, %147
  %614 = add i32 %613, %41
  %615 = add i32 %614, %157
  %616 = add i32 %615, %160
  %617 = sub i32 %616, %165
  %618 = sub i32 %617, %167
  %619 = sub i32 %618, %169
  %620 = add i32 %619, %9
  %621 = sub i32 %620, %54
  %622 = add i32 %621, %216
  %623 = sub i32 %622, %221
  %624 = add i32 %623, %137
  %625 = sub i32 %624, %27
  %626 = add i32 %625, %239
  %627 = sub i32 %626, %246
  %628 = sub i32 %627, %255
  %629 = add i32 %628, 1
  %630 = add i32 %629, %30
  %631 = add i32 %630, %33
  %632 = sub i32 %631, %43
  %633 = sub i32 %632, %49
  %634 = sub i32 %633, %59
  %635 = add i32 %634, %60
  %636 = sub i32 %635, %63
  %637 = add i32 %636, %66
  %638 = sub i32 %637, %67
  %639 = sub i32 %638, %72
  %640 = sub i32 %639, %80
  %641 = sub i32 %640, %82
  %642 = sub i32 %641, %84
  %643 = sub i32 %642, %87
  %644 = sub i32 %643, %90
  %645 = add i32 %644, %91
  %646 = sub i32 %645, %92
  %647 = sub i32 %646, %93
  %648 = add i32 %647, %94
  %649 = sub i32 %648, %96
  %650 = add i32 %649, %101
  %651 = add i32 %650, %103
  %652 = add i32 %651, %104
  %653 = add i32 %652, %105
  %654 = sub i32 %653, %106
  %655 = sub i32 %654, %108
  %656 = add i32 %655, %109
  %657 = sub i32 %656, %111
  %658 = add i32 %657, %112
  %659 = sub i32 %658, %115
  %660 = add i32 %659, %117
  %661 = add i32 %660, %118
  %662 = sub i32 %661, %119
  %663 = sub i32 %662, %121
  %664 = sub i32 %663, %122
  %665 = add i32 %664, %123
  %666 = sub i32 %665, %124
  %667 = add i32 %666, %44
  %668 = sub i32 %667, %132
  %669 = add i32 %668, %133
  %670 = add i32 %669, %134
  %671 = add i32 %670, %135
  %672 = sub i32 %671, %136
  %673 = sub i32 %672, %138
  %674 = add i32 %673, %141
  %675 = sub i32 %674, %142
  %676 = add i32 %675, %144
  %677 = add i32 %676, %145
  %678 = add i32 %677, %152
  %679 = sub i32 %678, %153
  %680 = add i32 %679, %154
  %681 = add i32 %680, %155
  %682 = add i32 %681, %156
  %683 = add i32 %682, %158
  %684 = sub i32 %683, %159
  %685 = add i32 %684, %161
  %686 = add i32 %685, %163
  %687 = add i32 %686, %166
  %688 = add i32 %687, %98
  %689 = add i32 %688, %170
  %690 = add i32 %689, %171
  %691 = sub i32 %690, %172
  %692 = sub i32 %691, %174
  %693 = sub i32 %692, %175
  %694 = sub i32 %693, %176
  %695 = sub i32 %694, %177
  %696 = add i32 %695, %180
  %697 = sub i32 %696, %186
  %698 = add i32 %697, %187
  %699 = sub i32 %698, %191
  %700 = sub i32 %699, %193
  %701 = add i32 %700, %194
  %702 = sub i32 %701, %198
  %703 = add i32 %702, %200
  %704 = add i32 %703, %201
  %705 = add i32 %704, %206
  %706 = add i32 %705, %207
  %707 = add i32 %706, %208
  %708 = add i32 %707, %211
  %709 = sub i32 %708, %212
  %710 = add i32 %709, %213
  %711 = add i32 %710, %215
  %712 = sub i32 %711, %217
  %713 = add i32 %712, %218
  %714 = sub i32 %713, %219
  %715 = sub i32 %714, %220
  %716 = sub i32 %715, %51
  %717 = sub i32 %716, %226
  %718 = add i32 %717, %227
  %719 = sub i32 %718, %231
  %720 = sub i32 %719, %232
  %721 = sub i32 %720, %233
  %722 = add i32 %721, %234
  %723 = sub i32 %722, %235
  %724 = add i32 %723, %236
  %725 = sub i32 %724, %240
  %726 = add i32 %725, %241
  %727 = sub i32 %726, %242
  %728 = sub i32 %727, %243
  %729 = add i32 %728, %247
  %730 = sub i32 %729, %248
  %731 = sub i32 %730, %249
  %732 = sub i32 %731, %253
  %733 = sub i32 %732, %259
  %734 = sub i32 %733, %29
  %735 = sub i32 %734, %40
  %736 = add i32 %735, %46
  %737 = add i32 %736, %53
  %738 = sub i32 %737, %57
  %739 = sub i32 %738, %75
  %740 = sub i32 %739, %126
  %741 = add i32 %740, %128
  %742 = sub i32 %741, %140
  %743 = sub i32 %742, %149
  %744 = add i32 %743, %151
  %745 = add i32 %744, %164
  %746 = sub i32 %745, %179
  %747 = sub i32 %746, %182
  %748 = sub i32 %747, %184
  %749 = sub i32 %748, %189
  %750 = add i32 %749, %192
  %751 = add i32 %750, %199
  %752 = sub i32 %751, %203
  %753 = sub i32 %752, %205
  %754 = sub i32 %753, %210
  %755 = sub i32 %754, %222
  %756 = sub i32 %755, %225
  %757 = add i32 %756, %229
  %758 = sub i32 %757, %238
  %759 = sub i32 %758, %245
  %760 = add i32 %759, %250
  %761 = sub i32 %760, %252
  %762 = add i32 %761, %258
  %763 = add i32 %762, %262
  %764 = add i32 %763, %263
  %765 = add i32 %764, %265
  %766 = add i32 %765, %297
  %767 = sub i32 %766, %17
  %768 = sub i32 %767, %5
  %769 = add i32 %768, %271
  %770 = sub i32 %769, %275
  %771 = add i32 %770, %326
  %772 = add i32 %771, %308
  %773 = sub i32 %772, %269
  %774 = add i32 %773, %516
  %775 = sub i32 %774, %100
  %776 = sub i32 %775, %270
  %777 = sub i32 %776, %277
  %778 = sub i32 %777, %301
  %779 = add i32 %778, %302
  %780 = sub i32 %779, %307
  %781 = add i32 %780, %309
  %782 = add i32 %781, %292
  %783 = add i32 %782, %338
  %784 = add i32 %783, %363
  %785 = add i32 %784, %366
  %786 = add i32 %785, %377
  %787 = add i32 %786, %385
  %788 = sub i32 %787, %390
  %789 = add i32 %788, %406
  %790 = sub i32 %789, %408
  %791 = add i32 %790, %413
  %792 = add i32 %791, %417
  %793 = add i32 %792, %288
  %794 = add i32 %793, %432
  %795 = add i32 %794, %434
  %796 = add i32 %795, %440
  %797 = sub i32 %796, %448
  %798 = sub i32 %797, %450
  %799 = add i32 %798, %453
  %800 = sub i32 %799, %466
  %801 = add i32 %800, %471
  %802 = add i32 %801, %494
  %803 = add i32 %802, %324
  %804 = add i32 %803, %273
  %805 = add i32 %804, %501
  %806 = sub i32 %805, %513
  %807 = sub i32 %806, %520
  %808 = sub i32 %807, %289
  %809 = sub i32 %808, %268
  %810 = sub i32 %809, %274
  %811 = sub i32 %810, %279
  %812 = sub i32 %811, %284
  %813 = add i32 %812, %286
  %814 = sub i32 %813, %287
  %815 = sub i32 %814, %290
  %816 = sub i32 %815, %293
  %817 = add i32 %816, %294
  %818 = add i32 %817, %296
  %819 = sub i32 %818, %298
  %820 = sub i32 %819, %304
  %821 = sub i32 %820, %306
  %822 = add i32 %821, %313
  %823 = sub i32 %822, %316
  %824 = sub i32 %823, %317
  %825 = sub i32 %824, %318
  %826 = sub i32 %825, %323
  %827 = sub i32 %826, %336
  %828 = sub i32 %827, %337
  %829 = sub i32 %828, %339
  %830 = add i32 %829, %340
  %831 = sub i32 %830, %343
  %832 = add i32 %831, %348
  %833 = sub i32 %832, %351
  %834 = sub i32 %833, %352
  %835 = add i32 %834, %353
  %836 = sub i32 %835, %356
  %837 = add i32 %836, %357
  %838 = sub i32 %837, %359
  %839 = sub i32 %838, %362
  %840 = sub i32 %839, %365
  %841 = add i32 %840, %367
  %842 = add i32 %841, %375
  %843 = sub i32 %842, %378
  %844 = add i32 %843, %380
  %845 = sub i32 %844, %381
  %846 = sub i32 %845, %384
  %847 = add i32 %846, %386
  %848 = sub i32 %847, %387
  %849 = add i32 %848, %388
  %850 = sub i32 %849, %391
  %851 = sub i32 %850, %392
  %852 = sub i32 %851, %395
  %853 = sub i32 %852, %397
  %854 = sub i32 %853, %398
  %855 = sub i32 %854, %399
  %856 = add i32 %855, %400
  %857 = add i32 %856, %404
  %858 = sub i32 %857, %405
  %859 = add i32 %858, %409
  %860 = sub i32 %859, %410
  %861 = sub i32 %860, %414
  %862 = add i32 %861, %416
  %863 = sub i32 %862, %418
  %864 = add i32 %863, %419
  %865 = sub i32 %864, %420
  %866 = add i32 %865, %424
  %867 = add i32 %866, %426
  %868 = add i32 %867, %427
  %869 = sub i32 %868, %428
  %870 = sub i32 %869, %429
  %871 = add i32 %870, %433
  %872 = add i32 %871, %436
  %873 = add i32 %872, %437
  %874 = sub i32 %873, %438
  %875 = sub i32 %874, %441
  %876 = add i32 %875, %442
  %877 = add i32 %876, %446
  %878 = add i32 %877, %447
  %879 = add i32 %878, %449
  %880 = add i32 %879, %451
  %881 = add i32 %880, %452
  %882 = sub i32 %881, %456
  %883 = sub i32 %882, %459
  %884 = sub i32 %883, %460
  %885 = add i32 %884, %461
  %886 = sub i32 %885, %462
  %887 = sub i32 %886, %463
  %888 = sub i32 %887, %465
  %889 = add i32 %888, %469
  %890 = add i32 %889, %470
  %891 = sub i32 %890, %472
  %892 = add i32 %891, %473
  %893 = add i32 %892, %474
  %894 = add i32 %893, %475
  %895 = sub i32 %894, %476
  %896 = add i32 %895, %333
  %897 = add i32 %896, %478
  %898 = add i32 %897, %482
  %899 = add i32 %898, %485
  %900 = add i32 %899, %486
  %901 = add i32 %900, %487
  %902 = add i32 %901, %488
  %903 = sub i32 %902, %493
  %904 = add i32 %903, %495
  %905 = sub i32 %904, %496
  %906 = add i32 %905, %498
  %907 = sub i32 %906, %500
  %908 = sub i32 %907, %504
  %909 = sub i32 %908, %507
  %910 = sub i32 %909, %508
  %911 = add i32 %910, %509
  %912 = sub i32 %911, %511
  %913 = sub i32 %912, %512
  %914 = sub i32 %913, %514
  %915 = add i32 %914, %515
  %916 = sub i32 %915, %524
  %917 = sub i32 %916, %525
  %918 = add i32 %917, %529
  %919 = add i32 %918, %530
  %920 = add i32 %919, %531
  %921 = sub i32 %920, %300
  %922 = sub i32 %921, %311
  %923 = sub i32 %922, %322
  %924 = sub i32 %923, %328
  %925 = sub i32 %924, %330
  %926 = sub i32 %925, %331
  %927 = sub i32 %926, %335
  %928 = sub i32 %927, %345
  %929 = sub i32 %928, %347
  %930 = sub i32 %929, %350
  %931 = sub i32 %930, %355
  %932 = sub i32 %931, %361
  %933 = add i32 %932, %372
  %934 = sub i32 %933, %374
  %935 = sub i32 %934, %383
  %936 = sub i32 %935, %394
  %937 = add i32 %936, %403
  %938 = add i32 %937, %423
  %939 = sub i32 %938, %425
  %940 = sub i32 %939, %431
  %941 = add i32 %940, %435
  %942 = add i32 %941, %439
  %943 = sub i32 %942, %445
  %944 = sub i32 %943, %455
  %945 = add i32 %944, %457
  %946 = sub i32 %945, %479
  %947 = sub i32 %946, %484
  %948 = sub i32 %947, %490
  %949 = add i32 %948, %499
  %950 = sub i32 %949, %503
  %951 = sub i32 %950, %506
  %952 = add i32 %951, %526
  %953 = sub i32 %952, %528
  %954 = add i32 %953, %533
  %955 = add i32 %954, %535
  %956 = add i32 %955, %537
  %957 = add i32 %956, %538
  %958 = add i32 %957, %540
  %959 = add i32 %958, %541
  %960 = add i32 %959, %543
  %961 = add i32 %960, %544
  %962 = sub i32 %961, %342
  %963 = sub i32 %962, %519
  %964 = add i32 %963, %585
  %965 = sub i32 %964, %523
  %966 = add i32 %965, %593
  %967 = add i32 %966, %582
  %968 = add i32 %967, %571
  %969 = icmp eq i32 %24, %968
  %970 = select i1 %969, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %971 = tail call i32 @puts(i8* nonnull dereferenceable(1) %970)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
