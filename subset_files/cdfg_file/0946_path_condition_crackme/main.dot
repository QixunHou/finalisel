digraph "DFG for'main' function" {
	Node0x1bfb4e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1bfb568[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1bfb5f8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1bfb658[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1bfbad8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1bfc5b8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1bfc698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bfc758[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1bfc808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bfca68[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1bfcb28[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1bfda98[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1bfe108[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1bfe200[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1bfe408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bfe568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bfe678[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1bfe738[shape=record, label="  ret i32 0"];
	Node0x1bfb4e8 -> Node0x1bfb568;
	Node0x1bfb568 -> Node0x1bfb5f8;
	Node0x1bfb5f8 -> Node0x1bfb658;
	Node0x1bfb658 -> Node0x1bfbad8;
	Node0x1bfbad8 -> Node0x1bfc5b8;
	Node0x1bfc5b8 -> Node0x1bfc698;
	Node0x1bfc698 -> Node0x1bfc758;
	Node0x1bfc758 -> Node0x1bfc808;
	Node0x1bfc808 -> Node0x1bfca68;
	Node0x1bfca68 -> Node0x1bfcb28;
	Node0x1bfcb28 -> Node0x1bfda98;
	Node0x1bfda98 -> Node0x1bfe108;
	Node0x1bfe108 -> Node0x1bfe200;
	Node0x1bfe200 -> Node0x1bfe408;
	Node0x1bfe408 -> Node0x1bfe568;
	Node0x1bfe568 -> Node0x1bfe678;
	Node0x1bfe678 -> Node0x1bfe738;
edge [color=red]
	Node0x1bfb4e8 -> Node0x1bfb658;
	Node0x1bfb658 -> Node0x1bfbad8;
	Node0x1bfb568 -> Node0x1bfc5b8;
	Node0x1bfc5b8 -> Node0x1bfc698;
	Node0x1bfb5f8 -> Node0x1bfc758;
	Node0x1bfc758 -> Node0x1bfc808;
	Node0x1bfb4e8 -> Node0x1bfca68;
	Node0x1bfb568 -> Node0x1bfca68;
	Node0x1bfb5f8 -> Node0x1bfca68;
	Node0x1bfb4e8 -> Node0x1bfcb28;
	Node0x1bfb568 -> Node0x1bfda98;
	Node0x1bfb5f8 -> Node0x1bfe108;
	Node0x1bfcb28 -> Node0x1bfe200;
	Node0x1bfda98 -> Node0x1bfe200;
	Node0x1bfe108 -> Node0x1bfe200;
	Node0x1bfc758 -> Node0x1bfe408;
	Node0x1bfc5b8 -> Node0x1bfe568;
	Node0x1bfb658 -> Node0x1bfe678;
}
