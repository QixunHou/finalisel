; ModuleID = '../.././c_source_file/1536_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1536_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = xor i32 %2, -1
  %9 = or i32 %8, %0
  %10 = and i32 %9, %7
  %11 = xor i32 %5, -1
  %12 = or i32 %11, %4
  %13 = xor i32 %4, %3
  %14 = and i32 %12, %13
  %15 = add i32 %14, %10
  %16 = and i32 %2, %1
  %17 = and i32 %16, %0
  %18 = xor i32 %0, -1
  %19 = xor i32 %2, %1
  %20 = and i32 %19, %18
  %21 = or i32 %17, %20
  %22 = and i32 %7, %0
  %23 = and i32 %8, %1
  %24 = xor i32 %23, -1
  %25 = xor i32 %22, %24
  %26 = xor i32 %1, %0
  %27 = or i32 %26, %8
  %28 = and i32 %2, %0
  %29 = or i32 %28, %1
  %30 = shl i32 %29, 1
  %31 = xor i32 %26, -1
  %32 = or i32 %8, %31
  %33 = and i32 %7, %2
  %34 = and i32 %33, %0
  %35 = xor i32 %19, %0
  %36 = or i32 %34, %35
  %37 = xor i32 %2, %0
  %38 = xor i32 %37, -1
  %39 = and i32 %38, %31
  %40 = and i32 %1, %0
  %41 = xor i32 %9, %40
  %42 = shl i32 %41, 2
  %43 = or i32 %7, %0
  %44 = xor i32 %43, -1
  %45 = or i32 %28, %44
  %46 = xor i32 %22, -1
  %47 = add i32 %22, 1
  %48 = or i32 %2, %0
  %49 = xor i32 %48, -1
  %50 = or i32 %49, %7
  %51 = xor i32 %16, -1
  %52 = and i32 %51, %18
  %53 = or i32 %19, %0
  %54 = shl i32 %53, 1
  %55 = or i32 %2, %1
  %56 = or i32 %55, %0
  %57 = or i32 %1, %0
  %58 = xor i32 %19, -1
  %59 = and i32 %57, %58
  %60 = shl i32 %59, 1
  %61 = and i32 %33, %18
  %62 = or i32 %19, %18
  %63 = xor i32 %61, %62
  %64 = xor i32 %22, %51
  %65 = shl i32 %64, 1
  %66 = xor i32 %34, %53
  %67 = or i32 %8, %1
  %68 = and i32 %67, %18
  %69 = add i32 %19, 1
  %70 = xor i32 %35, -1
  %71 = or i32 %17, %70
  %72 = or i32 %55, %18
  %73 = and i32 %19, %0
  %74 = xor i32 %57, -1
  %75 = or i32 %19, %74
  %76 = xor i32 %23, %0
  %77 = and i32 %8, %0
  %78 = xor i32 %77, -1
  %79 = xor i32 %78, %1
  %80 = or i32 %7, %2
  %81 = and i32 %80, %0
  %82 = or i32 %61, %81
  %83 = xor i32 %55, -1
  %84 = or i32 %40, %83
  %85 = xor i32 %9, -1
  %86 = or i32 %40, %85
  %87 = shl i32 %86, 1
  %88 = xor i32 %67, -1
  %89 = or i32 %77, %88
  %90 = shl i32 %89, 1
  %91 = and i32 %55, %0
  %92 = or i32 %38, %31
  %93 = or i32 %40, %49
  %94 = and i32 %58, %0
  %95 = or i32 %77, %1
  %96 = shl i32 %95, 2
  %97 = or i32 %38, %74
  %98 = xor i32 %28, -1
  %99 = and i32 %98, %7
  %100 = shl i32 %99, 1
  %101 = or i32 %37, %44
  %102 = and i32 %26, %98
  %103 = or i32 %38, %44
  %104 = shl i32 %57, 1
  %105 = or i32 %22, %38
  %106 = xor i32 %51, %0
  %107 = shl i32 %106, 1
  %108 = or i32 %40, %88
  %109 = or i32 %88, %18
  %110 = and i32 %43, %8
  %111 = xor i32 %55, %0
  %112 = xor i32 %17, -1
  %113 = xor i32 %111, %112
  %114 = or i32 %37, %22
  %115 = or i32 %58, %18
  %116 = or i32 %28, %23
  %117 = and i32 %57, %38
  %118 = xor i32 %28, %57
  %119 = shl i32 %118, 2
  %120 = and i32 %37, %26
  %121 = and i32 %98, %31
  %122 = or i32 %67, %0
  %123 = xor i32 %40, -1
  %124 = and i32 %38, %123
  %125 = and i32 %78, %31
  %126 = or i32 %24, %18
  %127 = or i32 %40, %58
  %128 = and i32 %67, %0
  %129 = xor i32 %17, %35
  %130 = xor i32 %40, %2
  %131 = and i32 %48, %7
  %132 = add i32 %48, 1
  %133 = and i32 %55, %18
  %134 = xor i32 %133, %112
  %135 = or i32 %28, %74
  %136 = or i32 %77, %16
  %137 = xor i32 %53, -1
  %138 = or i32 %34, %137
  %139 = add i32 %28, 1
  %140 = and i32 %8, %31
  %141 = and i32 %48, %1
  %142 = or i32 %74, %2
  %143 = and i32 %16, %18
  %144 = xor i32 %143, -1
  %145 = xor i32 %91, %144
  %146 = or i32 %26, %85
  %147 = and i32 %57, %8
  %148 = and i32 %43, %58
  %149 = xor i32 %123, %2
  %150 = shl i32 %149, 1
  %151 = or i32 %37, %7
  %152 = or i32 %58, %44
  %153 = xor i32 %62, -1
  %154 = or i32 %61, %153
  %155 = and i32 %37, %7
  %156 = and i32 %51, %0
  %157 = or i32 %23, %18
  %158 = or i32 %83, %18
  %159 = xor i32 %20, %112
  %160 = and i32 %19, %123
  %161 = shl i32 %160, 1
  %162 = and i32 %26, %2
  %163 = xor i32 %80, %0
  %164 = or i32 %34, %163
  %165 = or i32 %16, %18
  %166 = or i32 %143, %73
  %167 = or i32 %19, %40
  %168 = or i32 %51, %18
  %169 = and i32 %38, %1
  %170 = xor i32 %49, %1
  %171 = or i32 %26, %2
  %172 = shl i32 %171, 1
  %173 = xor i32 %73, %144
  %174 = and i32 %19, %57
  %175 = or i32 %23, %22
  %176 = or i32 %40, %38
  %177 = or i32 %40, %8
  %178 = shl i32 %177, 1
  %179 = or i32 %8, %74
  %180 = xor i32 %16, %0
  %181 = and i32 %48, %31
  %182 = xor i32 %28, %1
  %183 = xor i32 %24, %0
  %184 = and i32 %78, %1
  %185 = and i32 %37, %57
  %186 = xor i32 %77, %1
  %187 = and i32 %58, %18
  %188 = or i32 %37, %1
  %189 = or i32 %24, %0
  %190 = xor i32 %81, 2147483647
  %191 = xor i32 %190, %61
  %192 = shl i32 %191, 1
  %193 = or i32 %22, %58
  %194 = or i32 %58, %0
  %195 = and i32 %80, %18
  %196 = xor i32 %34, 2147483647
  %197 = xor i32 %196, %195
  %198 = shl i32 %197, 1
  %199 = add i32 %40, 1
  %200 = or i32 %28, %26
  %201 = and i32 %9, %31
  %202 = xor i32 %196, %163
  %203 = xor i32 %83, %0
  %204 = xor i32 %88, %0
  %205 = and i32 %24, %0
  %206 = and i32 %26, %78
  %207 = shl i32 %206, 2
  %208 = or i32 %77, %31
  %209 = xor i32 %58, %0
  %210 = or i32 %16, %0
  %211 = and i32 %9, %1
  %212 = xor i32 %22, %2
  %213 = and i32 %57, %2
  %214 = or i32 %34, %195
  %215 = and i32 %8, %123
  %216 = or i32 %85, %7
  %217 = xor i32 %48, %40
  %218 = and i32 %19, %46
  %219 = or i32 %77, %7
  %220 = or i32 %49, %1
  %221 = or i32 %31, %2
  %222 = and i32 %123, %2
  %223 = and i32 %38, %7
  %224 = or i32 %85, %1
  %225 = xor i32 %57, %2
  %226 = and i32 %26, %38
  %227 = or i32 %37, %31
  %228 = and i32 %8, %46
  %229 = or i32 %28, %7
  %230 = shl i32 %229, 1
  %231 = or i32 %28, %31
  %232 = shl i32 %231, 1
  %233 = or i32 %37, %74
  %234 = and i32 %43, %2
  %235 = or i32 %38, %7
  %236 = or i32 %83, %0
  %237 = and i32 %37, %123
  %238 = xor i32 %46, %2
  %239 = and i32 %37, %46
  %240 = add i32 %2, 1
  %241 = xor i32 %67, %40
  %242 = or i32 %26, %49
  %243 = and i32 %37, %31
  %244 = or i32 %49, %31
  %245 = and i32 %26, %8
  %246 = or i32 %40, %2
  %247 = or i32 %44, %2
  %248 = shl i32 %247, 1
  %249 = and i32 %9, %26
  %250 = or i32 %19, %44
  %251 = or i32 %19, %22
  %252 = add i32 %9, 1
  %253 = or i32 %28, %83
  %254 = and i32 %19, %43
  %255 = xor i32 %44, %2
  %256 = or i32 %67, %18
  %257 = and i32 %48, %26
  %258 = or i32 %23, %0
  %259 = and i32 %37, %43
  %260 = and i32 %78, %7
  %261 = xor i32 %74, %2
  %262 = xor i32 %28, %43
  %263 = and i32 %58, %123
  %264 = and i32 %98, %1
  %265 = or i32 %26, %38
  %266 = xor i32 %98, %1
  %267 = or i32 %85, %31
  %268 = xor i32 %34, %70
  %269 = xor i32 %28, %24
  %270 = or i32 %22, %2
  %271 = xor i32 %77, %67
  %272 = or i32 %38, %1
  %273 = or i32 %58, %74
  %274 = or i32 %37, %40
  %275 = and i32 %37, %1
  %276 = shl i32 %275, 1
  %277 = or i32 %8, %44
  %278 = or i32 %16, %22
  %279 = and i32 %31, %2
  %280 = or i32 %51, %0
  %281 = and i32 %58, %46
  %282 = xor i32 %55, %40
  %283 = xor i32 %67, %0
  %284 = or i32 %143, %91
  %285 = and i32 %46, %2
  %286 = and i32 %24, %18
  %287 = and i32 %43, %38
  %288 = or i32 %17, %133
  %289 = xor i32 %48, %1
  %290 = or i32 %88, %0
  %291 = xor i32 %43, %2
  %292 = or i32 %37, %26
  %293 = add i32 %55, 1
  %294 = and i32 %38, %46
  %295 = xor i32 %9, %1
  %296 = add i32 %26, 1
  %297 = xor i32 %28, %55
  %298 = or i32 %22, %8
  %299 = or i32 %77, %26
  %300 = xor i32 %77, %51
  %301 = shl i32 %300, 1
  %302 = and i32 %83, %18
  %303 = mul i32 %302, 19
  %304 = and i32 %23, %18
  %305 = and i32 %83, %0
  %306 = and i32 %23, %0
  %307 = and i32 %88, %18
  %308 = shl i32 %307, 2
  %309 = mul i32 %143, 11
  %310 = and i32 %88, %0
  %311 = or i32 %5, %4
  %312 = and i32 %5, %3
  %313 = or i32 %312, %4
  %314 = xor i32 %3, -1
  %315 = xor i32 %5, %4
  %316 = xor i32 %315, -1
  %317 = and i32 %316, %314
  %318 = xor i32 %4, -1
  %319 = or i32 %5, %3
  %320 = or i32 %319, %318
  %321 = and i32 %11, %4
  %322 = or i32 %321, %312
  %323 = or i32 %4, %3
  %324 = xor i32 %323, -1
  %325 = or i32 %316, %324
  %326 = or i32 %314, %4
  %327 = xor i32 %326, -1
  %328 = xor i32 %5, %3
  %329 = or i32 %328, %327
  %330 = xor i32 %321, -1
  %331 = add i32 %321, 1
  %332 = and i32 %312, %4
  %333 = and i32 %319, %318
  %334 = xor i32 %332, -1
  %335 = xor i32 %333, %334
  %336 = xor i32 %328, -1
  %337 = xor i32 %336, %4
  %338 = and i32 %326, %11
  %339 = shl i32 %338, 1
  %340 = and i32 %314, %5
  %341 = and i32 %340, %4
  %342 = or i32 %328, %4
  %343 = xor i32 %342, -1
  %344 = or i32 %341, %343
  %345 = and i32 %340, %318
  %346 = or i32 %314, %5
  %347 = and i32 %346, %4
  %348 = or i32 %345, %347
  %349 = and i32 %4, %3
  %350 = xor i32 %349, -1
  %351 = and i32 %350, %5
  %352 = and i32 %314, %4
  %353 = xor i32 %352, -1
  %354 = and i32 %336, %353
  %355 = xor i32 %319, -1
  %356 = xor i32 %312, -1
  %357 = or i32 %356, %318
  %358 = and i32 %319, %4
  %359 = xor i32 %12, %349
  %360 = and i32 %5, %4
  %361 = xor i32 %360, %3
  %362 = or i32 %349, %355
  %363 = or i32 %315, %13
  %364 = shl i32 %363, 1
  %365 = and i32 %353, %5
  %366 = and i32 %356, %318
  %367 = xor i32 %12, -1
  %368 = or i32 %13, %367
  %369 = shl i32 %368, 1
  %370 = and i32 %311, %314
  %371 = or i32 %321, %314
  %372 = xor i32 %360, -1
  %373 = xor i32 %372, %3
  %374 = xor i32 %13, -1
  %375 = and i32 %330, %374
  %376 = shl i32 %3, 1
  %377 = or i32 %316, %327
  %378 = and i32 %11, %3
  %379 = xor i32 %378, -1
  %380 = xor i32 %379, %4
  %381 = shl i32 %380, 1
  %382 = and i32 %315, %353
  %383 = or i32 %11, %3
  %384 = or i32 %383, %4
  %385 = and i32 %356, %4
  %386 = or i32 %13, %11
  %387 = or i32 %315, %314
  %388 = xor i32 %311, -1
  %389 = xor i32 %388, %3
  %390 = xor i32 %347, -1
  %391 = xor i32 %345, %390
  %392 = and i32 %323, %316
  %393 = or i32 %321, %374
  %394 = xor i32 %328, %4
  %395 = or i32 %341, %394
  %396 = and i32 %326, %316
  %397 = and i32 %326, %5
  %398 = and i32 %374, %5
  %399 = shl i32 %13, 1
  %400 = and i32 %312, %318
  %401 = and i32 %328, %4
  %402 = xor i32 %400, -1
  %403 = xor i32 %401, %402
  %404 = xor i32 %323, %5
  %405 = shl i32 %321, 1
  %406 = or i32 %374, %5
  %407 = and i32 %315, %314
  %408 = or i32 %360, %3
  %409 = xor i32 %311, %3
  %410 = shl i32 %409, 1
  %411 = and i32 %316, %350
  %412 = and i32 %315, %323
  %413 = and i32 %311, %3
  %414 = and i32 %13, %330
  %415 = and i32 %336, %4
  %416 = shl i32 %415, 1
  %417 = or i32 %13, %388
  %418 = or i32 %328, %318
  %419 = xor i32 %345, %418
  %420 = shl i32 %419, 1
  %421 = or i32 %312, %318
  %422 = xor i32 %319, %4
  %423 = xor i32 %352, %356
  %424 = and i32 %328, %326
  %425 = shl i32 %424, 2
  %426 = or i32 %349, %336
  %427 = or i32 %360, %374
  %428 = or i32 %315, %3
  %429 = and i32 %315, %350
  %430 = and i32 %316, %353
  %431 = xor i32 %383, -1
  %432 = xor i32 %431, %4
  %433 = xor i32 %346, %4
  %434 = or i32 %341, %433
  %435 = shl i32 %434, 1
  %436 = and i32 %11, %353
  %437 = or i32 %316, %3
  %438 = and i32 %346, %318
  %439 = or i32 %341, %438
  %440 = shl i32 %439, 1
  %441 = and i32 %315, %3
  %442 = xor i32 %312, %4
  %443 = or i32 %360, %314
  %444 = or i32 %316, %314
  %445 = or i32 %367, %314
  %446 = and i32 %383, %4
  %447 = or i32 %360, %355
  %448 = or i32 %321, %3
  %449 = and i32 %13, %316
  %450 = xor i32 %327, %5
  %451 = and i32 %316, %3
  %452 = xor i32 %321, %356
  %453 = or i32 %349, %431
  %454 = or i32 %367, %3
  %455 = and i32 %12, %314
  %456 = or i32 %315, %352
  %457 = xor i32 %394, -1
  %458 = xor i32 %341, %457
  %459 = or i32 %388, %374
  %460 = xor i32 %360, %323
  %461 = or i32 %13, %5
  %462 = xor i32 %422, 1073741823
  %463 = xor i32 %462, %332
  %464 = shl i32 %463, 2
  %465 = or i32 %400, %358
  %466 = shl i32 %379, 1
  %467 = xor i32 %341, -1
  %468 = xor i32 %438, %467
  %469 = or i32 %328, %324
  %470 = or i32 %315, %349
  %471 = xor i32 %352, %5
  %472 = xor i32 %360, %319
  %473 = shl i32 %472, 1
  %474 = xor i32 %353, %5
  %475 = or i32 %367, %374
  %476 = and i32 %372, %3
  %477 = or i32 %360, %378
  %478 = xor i32 %349, %5
  %479 = shl i32 %318, 1
  %480 = or i32 %11, %327
  %481 = shl i32 %480, 1
  %482 = or i32 %336, %318
  %483 = or i32 %388, %314
  %484 = xor i32 %418, -1
  %485 = or i32 %345, %484
  %486 = xor i32 %352, %379
  %487 = xor i32 %326, %5
  %488 = or i32 %378, %4
  %489 = or i32 %356, %4
  %490 = or i32 %315, %374
  %491 = and i32 %328, %323
  %492 = or i32 %11, %374
  %493 = xor i32 %383, %349
  %494 = or i32 %378, %352
  %495 = shl i32 %494, 1
  %496 = or i32 %352, %11
  %497 = or i32 %332, %333
  %498 = xor i32 %433, %467
  %499 = or i32 %321, %431
  %500 = and i32 %315, %374
  %501 = and i32 %13, %5
  %502 = and i32 %12, %3
  %503 = and i32 %328, %353
  %504 = and i32 %323, %11
  %505 = or i32 %431, %318
  %506 = add i32 %349, 1
  %507 = xor i32 %358, %402
  %508 = or i32 %349, %11
  %509 = or i32 %352, %336
  %510 = or i32 %321, %13
  %511 = or i32 %388, %3
  %512 = shl i32 %511, 1
  %513 = or i32 %431, %4
  %514 = xor i32 %360, %326
  %515 = and i32 %328, %318
  %516 = or i32 %312, %352
  %517 = or i32 %328, %352
  %518 = and i32 %311, %13
  %519 = or i32 %336, %324
  %520 = or i32 %336, %4
  %521 = xor i32 %355, %4
  %522 = and i32 %316, %374
  %523 = or i32 %315, %327
  %524 = shl i32 %523, 2
  %525 = xor i32 %311, %349
  %526 = or i32 %327, %5
  %527 = and i32 %383, %318
  %528 = xor i32 %330, %3
  %529 = or i32 %328, %349
  %530 = xor i32 %515, %334
  %531 = xor i32 %321, %383
  %532 = and i32 %315, %13
  %533 = and i32 %330, %3
  %534 = and i32 %315, %326
  %535 = or i32 %332, %422
  %536 = xor i32 %383, %4
  %537 = or i32 %315, %324
  %538 = or i32 %352, %5
  %539 = or i32 %332, %457
  %540 = or i32 %352, %316
  %541 = or i32 %332, %515
  %542 = or i32 %379, %318
  %543 = shl i32 %542, 1
  %544 = and i32 %372, %314
  %545 = and i32 %328, %350
  %546 = and i32 %13, %372
  %547 = and i32 %11, %374
  %548 = and i32 %372, %374
  %549 = shl i32 %548, 1
  %550 = xor i32 %341, %342
  %551 = and i32 %355, %318
  %552 = mul i32 %551, 7
  %553 = and i32 %378, %318
  %554 = and i32 %355, %4
  %555 = and i32 %378, %4
  %556 = mul i32 %555, 20
  %557 = and i32 %431, %318
  %558 = mul i32 %557, 12
  %559 = and i32 %431, %4
  %560 = mul i32 %332, -9
  %561 = add i32 %23, %44
  %562 = add i32 %561, %179
  %563 = add i32 %562, %17
  %564 = add i32 %563, %304
  %565 = add i32 %564, %299
  %566 = add i32 %565, %282
  %567 = add i32 %566, %272
  %568 = add i32 %567, %264
  %569 = add i32 %568, %259
  %570 = add i32 %569, %258
  %571 = add i32 %570, %244
  %572 = add i32 %571, %220
  %573 = add i32 %572, %148
  %574 = add i32 %573, %126
  %575 = add i32 %574, %62
  %576 = add i32 %575, %101
  %577 = add i32 %576, %92
  %578 = add i32 %577, %45
  %579 = add i32 %578, %36
  %580 = sub i32 %579, %21
  %581 = add i32 %580, %319
  %582 = add i32 %581, %388
  %583 = add i32 %582, %471
  %584 = add i32 %583, %316
  %585 = add i32 %584, %202
  %586 = add i32 %585, %545
  %587 = add i32 %586, %529
  %588 = add i32 %587, %527
  %589 = add i32 %588, %515
  %590 = add i32 %589, %503
  %591 = add i32 %590, %437
  %592 = add i32 %591, %426
  %593 = add i32 %592, %412
  %594 = add i32 %593, %393
  %595 = add i32 %594, %373
  %596 = add i32 %595, %362
  %597 = add i32 %596, %550
  %598 = shl i32 %597, 1
  %599 = sub i32 %234, %298
  %600 = sub i32 %599, %235
  %601 = sub i32 %600, %185
  %602 = add i32 %601, %120
  %603 = add i32 %602, %76
  %604 = sub i32 %603, %452
  %605 = add i32 %604, %414
  %606 = add i32 %605, %392
  %607 = add i32 %606, %458
  %608 = mul i32 %607, 5
  %609 = or i32 %559, %553
  %610 = mul i32 %609, 10
  %611 = add i32 %400, %310
  %612 = mul i32 %611, 13
  %613 = sub i32 %554, %306
  %614 = mul i32 %613, 6
  %615 = sub i32 -2, %1
  %616 = add i32 %615, %305
  %617 = add i32 %616, %251
  %618 = add i32 %617, %208
  %619 = sub i32 %618, %184
  %620 = add i32 %619, %127
  %621 = sub i32 %620, %125
  %622 = add i32 %621, %383
  %623 = sub i32 %622, %459
  %624 = add i32 %623, %483
  %625 = add i32 %624, %456
  %626 = mul i32 %625, 3
  %627 = shl i32 %0, 1
  %628 = add i32 %627, 2
  %629 = sub i32 %628, %1
  %630 = sub i32 %629, %2
  %631 = add i32 %630, %47
  %632 = add i32 %631, %26
  %633 = sub i32 %632, %22
  %634 = add i32 %633, %43
  %635 = add i32 %634, %199
  %636 = add i32 %635, %74
  %637 = add i32 %636, %240
  %638 = add i32 %637, %40
  %639 = add i32 %638, %296
  %640 = sub i32 %639, %27
  %641 = add i32 %640, %32
  %642 = add i32 %641, %69
  %643 = add i32 %642, %19
  %644 = sub i32 %643, %104
  %645 = add i32 %644, %28
  %646 = sub i32 %645, %110
  %647 = sub i32 %646, %9
  %648 = sub i32 %647, %130
  %649 = add i32 %648, %132
  %650 = add i32 %649, %139
  %651 = add i32 %650, %140
  %652 = sub i32 %651, %142
  %653 = sub i32 %652, %147
  %654 = sub i32 %653, %55
  %655 = sub i32 %654, %162
  %656 = add i32 %655, %24
  %657 = sub i32 %656, %67
  %658 = add i32 %657, %48
  %659 = add i32 %658, %77
  %660 = add i32 %659, %212
  %661 = sub i32 %660, %213
  %662 = sub i32 %661, %215
  %663 = sub i32 %662, %221
  %664 = add i32 %663, %222
  %665 = sub i32 %664, %225
  %666 = add i32 %665, %228
  %667 = add i32 %666, %238
  %668 = add i32 %667, %245
  %669 = add i32 %668, %246
  %670 = add i32 %669, %252
  %671 = add i32 %670, %255
  %672 = sub i32 %671, %261
  %673 = sub i32 %672, %270
  %674 = add i32 %673, %277
  %675 = sub i32 %674, %279
  %676 = sub i32 %675, %285
  %677 = add i32 %676, %291
  %678 = add i32 %677, %293
  %679 = add i32 %678, %25
  %680 = add i32 %679, %39
  %681 = add i32 %680, %50
  %682 = add i32 %681, %52
  %683 = add i32 %682, %56
  %684 = add i32 %683, %68
  %685 = sub i32 %684, %72
  %686 = sub i32 %685, %73
  %687 = add i32 %686, %75
  %688 = add i32 %687, %79
  %689 = sub i32 %688, %84
  %690 = add i32 %689, %91
  %691 = add i32 %690, %93
  %692 = sub i32 %691, %94
  %693 = add i32 %692, %97
  %694 = sub i32 %693, %102
  %695 = sub i32 %694, %103
  %696 = add i32 %695, %105
  %697 = sub i32 %696, %108
  %698 = sub i32 %697, %109
  %699 = add i32 %698, %114
  %700 = sub i32 %699, %115
  %701 = sub i32 %700, %116
  %702 = sub i32 %701, %117
  %703 = sub i32 %702, %121
  %704 = sub i32 %703, %122
  %705 = sub i32 %704, %124
  %706 = add i32 %705, %128
  %707 = sub i32 %706, %131
  %708 = add i32 %707, %135
  %709 = add i32 %708, %136
  %710 = add i32 %709, %141
  %711 = add i32 %710, %146
  %712 = sub i32 %711, %150
  %713 = sub i32 %712, %151
  %714 = add i32 %713, %152
  %715 = add i32 %714, %155
  %716 = add i32 %715, %156
  %717 = add i32 %716, %157
  %718 = sub i32 %717, %158
  %719 = add i32 %718, %165
  %720 = add i32 %719, %167
  %721 = sub i32 %720, %168
  %722 = add i32 %721, %169
  %723 = sub i32 %722, %170
  %724 = sub i32 %723, %172
  %725 = add i32 %724, %174
  %726 = sub i32 %725, %175
  %727 = sub i32 %726, %176
  %728 = sub i32 %727, %178
  %729 = sub i32 %728, %180
  %730 = add i32 %729, %181
  %731 = add i32 %730, %182
  %732 = sub i32 %731, %183
  %733 = add i32 %732, %186
  %734 = sub i32 %733, %187
  %735 = add i32 %734, %188
  %736 = sub i32 %735, %189
  %737 = sub i32 %736, %193
  %738 = sub i32 %737, %194
  %739 = add i32 %738, %200
  %740 = sub i32 %739, %201
  %741 = sub i32 %740, %203
  %742 = add i32 %741, %204
  %743 = sub i32 %742, %205
  %744 = add i32 %743, %209
  %745 = sub i32 %744, %210
  %746 = add i32 %745, %211
  %747 = sub i32 %746, %216
  %748 = add i32 %747, %217
  %749 = sub i32 %748, %218
  %750 = add i32 %749, %219
  %751 = sub i32 %750, %111
  %752 = add i32 %751, %223
  %753 = sub i32 %752, %224
  %754 = sub i32 %753, %226
  %755 = add i32 %754, %227
  %756 = add i32 %755, %233
  %757 = sub i32 %756, %236
  %758 = sub i32 %757, %237
  %759 = add i32 %758, %239
  %760 = add i32 %759, %133
  %761 = add i32 %760, %241
  %762 = add i32 %761, %242
  %763 = sub i32 %762, %243
  %764 = sub i32 %763, %248
  %765 = sub i32 %764, %249
  %766 = sub i32 %765, %250
  %767 = add i32 %766, %253
  %768 = add i32 %767, %254
  %769 = sub i32 %768, %256
  %770 = sub i32 %769, %257
  %771 = add i32 %770, %20
  %772 = sub i32 %771, %260
  %773 = sub i32 %772, %262
  %774 = sub i32 %773, %263
  %775 = sub i32 %774, %265
  %776 = add i32 %775, %266
  %777 = add i32 %776, %267
  %778 = sub i32 %777, %269
  %779 = sub i32 %778, %271
  %780 = sub i32 %779, %273
  %781 = add i32 %780, %274
  %782 = sub i32 %781, %278
  %783 = add i32 %782, %280
  %784 = add i32 %783, %281
  %785 = sub i32 %784, %283
  %786 = add i32 %785, %35
  %787 = sub i32 %786, %286
  %788 = sub i32 %787, %287
  %789 = add i32 %788, %289
  %790 = sub i32 %789, %290
  %791 = sub i32 %790, %292
  %792 = add i32 %791, %294
  %793 = sub i32 %792, %295
  %794 = add i32 %793, %297
  %795 = sub i32 %794, %4
  %796 = sub i32 %795, %376
  %797 = sub i32 %796, %30
  %798 = sub i32 %797, %42
  %799 = sub i32 %798, %54
  %800 = sub i32 %799, %60
  %801 = add i32 %800, %63
  %802 = sub i32 %801, %65
  %803 = add i32 %802, %66
  %804 = add i32 %803, %71
  %805 = sub i32 %804, %82
  %806 = sub i32 %805, %87
  %807 = sub i32 %806, %90
  %808 = sub i32 %807, %96
  %809 = sub i32 %808, %100
  %810 = sub i32 %809, %107
  %811 = sub i32 %810, %113
  %812 = add i32 %811, %119
  %813 = add i32 %812, %129
  %814 = add i32 %813, %134
  %815 = add i32 %814, %138
  %816 = sub i32 %815, %145
  %817 = add i32 %816, %154
  %818 = add i32 %817, %159
  %819 = sub i32 %818, %161
  %820 = sub i32 %819, %164
  %821 = sub i32 %820, %166
  %822 = add i32 %821, %173
  %823 = sub i32 %822, %207
  %824 = add i32 %823, %214
  %825 = sub i32 %824, %230
  %826 = sub i32 %825, %232
  %827 = add i32 %826, %268
  %828 = sub i32 %827, %276
  %829 = add i32 %828, %284
  %830 = add i32 %829, %288
  %831 = sub i32 %830, %301
  %832 = add i32 %831, %303
  %833 = sub i32 %832, %308
  %834 = add i32 %833, %309
  %835 = add i32 %834, %324
  %836 = sub i32 %835, %479
  %837 = add i32 %836, %327
  %838 = add i32 %837, %506
  %839 = add i32 %838, %11
  %840 = add i32 %839, %349
  %841 = add i32 %840, %12
  %842 = add i32 %841, %311
  %843 = add i32 %842, %331
  %844 = sub i32 %843, %351
  %845 = add i32 %844, %355
  %846 = sub i32 %845, %365
  %847 = add i32 %846, %312
  %848 = sub i32 %847, %386
  %849 = add i32 %848, %397
  %850 = add i32 %849, %398
  %851 = sub i32 %850, %399
  %852 = sub i32 %851, %404
  %853 = sub i32 %852, %406
  %854 = sub i32 %853, %315
  %855 = add i32 %854, %360
  %856 = add i32 %855, %436
  %857 = add i32 %856, %450
  %858 = add i32 %857, %461
  %859 = sub i32 %858, %474
  %860 = add i32 %859, %478
  %861 = add i32 %860, %487
  %862 = sub i32 %861, %492
  %863 = add i32 %862, %496
  %864 = sub i32 %863, %378
  %865 = add i32 %864, %501
  %866 = sub i32 %865, %504
  %867 = sub i32 %866, %328
  %868 = sub i32 %867, %508
  %869 = sub i32 %868, %526
  %870 = sub i32 %869, %538
  %871 = add i32 %870, %547
  %872 = sub i32 %871, %192
  %873 = sub i32 %872, %198
  %874 = sub i32 %873, %313
  %875 = add i32 %874, %317
  %876 = add i32 %875, %320
  %877 = add i32 %876, %322
  %878 = add i32 %877, %325
  %879 = sub i32 %878, %329
  %880 = add i32 %879, %337
  %881 = sub i32 %880, %339
  %882 = sub i32 %881, %354
  %883 = sub i32 %882, %357
  %884 = add i32 %883, %358
  %885 = add i32 %884, %359
  %886 = sub i32 %885, %361
  %887 = add i32 %886, %366
  %888 = add i32 %887, %370
  %889 = add i32 %888, %371
  %890 = add i32 %889, %375
  %891 = sub i32 %890, %377
  %892 = sub i32 %891, %382
  %893 = sub i32 %892, %384
  %894 = sub i32 %893, %385
  %895 = add i32 %894, %387
  %896 = add i32 %895, %389
  %897 = sub i32 %896, %396
  %898 = sub i32 %897, %405
  %899 = add i32 %898, %407
  %900 = sub i32 %899, %408
  %901 = sub i32 %900, %411
  %902 = sub i32 %901, %413
  %903 = sub i32 %902, %417
  %904 = add i32 %903, %421
  %905 = sub i32 %904, %422
  %906 = add i32 %905, %423
  %907 = sub i32 %906, %427
  %908 = add i32 %907, %428
  %909 = sub i32 %908, %429
  %910 = add i32 %909, %430
  %911 = sub i32 %910, %432
  %912 = add i32 %911, %441
  %913 = sub i32 %912, %442
  %914 = sub i32 %913, %443
  %915 = add i32 %914, %444
  %916 = add i32 %915, %445
  %917 = sub i32 %916, %446
  %918 = sub i32 %917, %447
  %919 = add i32 %918, %448
  %920 = sub i32 %919, %449
  %921 = sub i32 %920, %451
  %922 = sub i32 %921, %453
  %923 = add i32 %922, %454
  %924 = add i32 %923, %455
  %925 = sub i32 %924, %460
  %926 = sub i32 %925, %466
  %927 = add i32 %926, %469
  %928 = sub i32 %927, %470
  %929 = add i32 %928, %475
  %930 = sub i32 %929, %476
  %931 = sub i32 %930, %477
  %932 = sub i32 %931, %481
  %933 = sub i32 %932, %482
  %934 = add i32 %933, %486
  %935 = add i32 %934, %488
  %936 = sub i32 %935, %489
  %937 = sub i32 %936, %490
  %938 = sub i32 %937, %491
  %939 = sub i32 %938, %493
  %940 = add i32 %939, %499
  %941 = add i32 %940, %500
  %942 = sub i32 %941, %502
  %943 = add i32 %942, %505
  %944 = add i32 %943, %401
  %945 = sub i32 %944, %509
  %946 = add i32 %945, %510
  %947 = add i32 %946, %513
  %948 = sub i32 %947, %514
  %949 = add i32 %948, %516
  %950 = sub i32 %949, %333
  %951 = add i32 %950, %517
  %952 = add i32 %951, %518
  %953 = add i32 %952, %519
  %954 = sub i32 %953, %520
  %955 = add i32 %954, %521
  %956 = sub i32 %955, %522
  %957 = sub i32 %956, %342
  %958 = add i32 %957, %525
  %959 = sub i32 %958, %528
  %960 = add i32 %959, %531
  %961 = add i32 %960, %532
  %962 = sub i32 %961, %533
  %963 = add i32 %962, %534
  %964 = sub i32 %963, %536
  %965 = sub i32 %964, %537
  %966 = add i32 %965, %540
  %967 = sub i32 %966, %544
  %968 = add i32 %967, %546
  %969 = sub i32 %968, %335
  %970 = add i32 %969, %344
  %971 = add i32 %970, %348
  %972 = sub i32 %971, %364
  %973 = sub i32 %972, %369
  %974 = sub i32 %973, %381
  %975 = sub i32 %974, %391
  %976 = add i32 %975, %395
  %977 = sub i32 %976, %403
  %978 = sub i32 %977, %410
  %979 = sub i32 %978, %416
  %980 = sub i32 %979, %425
  %981 = sub i32 %980, %465
  %982 = add i32 %981, %468
  %983 = sub i32 %982, %473
  %984 = sub i32 %983, %485
  %985 = sub i32 %984, %495
  %986 = sub i32 %985, %497
  %987 = sub i32 %986, %498
  %988 = add i32 %987, %507
  %989 = sub i32 %988, %512
  %990 = sub i32 %989, %524
  %991 = sub i32 %990, %530
  %992 = add i32 %991, %535
  %993 = sub i32 %992, %539
  %994 = sub i32 %993, %541
  %995 = sub i32 %994, %543
  %996 = sub i32 %995, %549
  %997 = add i32 %996, %552
  %998 = add i32 %997, %556
  %999 = add i32 %998, %558
  %1000 = add i32 %999, %560
  %1001 = sub i32 %1000, %420
  %1002 = sub i32 %1001, %435
  %1003 = sub i32 %1002, %440
  %1004 = add i32 %1003, %610
  %1005 = add i32 %1004, %612
  %1006 = add i32 %1005, %614
  %1007 = sub i32 %1006, %464
  %1008 = add i32 %1007, %608
  %1009 = add i32 %1008, %626
  %1010 = add i32 %1009, %598
  %1011 = icmp eq i32 %15, %1010
  %1012 = select i1 %1011, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1013 = tail call i32 @puts(i8* nonnull dereferenceable(1) %1012)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
