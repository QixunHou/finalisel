; ModuleID = '../.././c_source_file/1969_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1969_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = or i32 %7, %0
  %9 = xor i32 %2, %0
  %10 = and i32 %9, %8
  %11 = xor i32 %4, -1
  %12 = and i32 %5, %3
  %13 = and i32 %12, %11
  %14 = or i32 %5, %3
  %15 = and i32 %14, %4
  %16 = or i32 %13, %15
  %17 = add i32 %10, 1
  %18 = add i32 %17, %16
  %19 = xor i32 %0, -1
  %20 = xor i32 %2, %1
  %21 = xor i32 %20, -1
  %22 = or i32 %21, %19
  %23 = xor i32 %8, -1
  %24 = xor i32 %9, -1
  %25 = or i32 %24, %23
  %26 = shl i32 %25, 1
  %27 = or i32 %20, %0
  %28 = xor i32 %2, -1
  %29 = and i32 %28, %0
  %30 = xor i32 %1, %0
  %31 = xor i32 %30, -1
  %32 = or i32 %29, %31
  %33 = and i32 %2, %0
  %34 = or i32 %33, %30
  %35 = or i32 %28, %1
  %36 = xor i32 %35, -1
  %37 = add i32 %35, 1
  %38 = and i32 %2, %1
  %39 = and i32 %38, %19
  %40 = and i32 %20, %0
  %41 = or i32 %39, %40
  %42 = and i32 %1, %0
  %43 = or i32 %2, %1
  %44 = xor i32 %43, %42
  %45 = and i32 %20, %19
  %46 = or i32 %29, %36
  %47 = or i32 %24, %31
  %48 = or i32 %28, %0
  %49 = xor i32 %48, -1
  %50 = xor i32 %38, -1
  %51 = and i32 %50, %0
  %52 = or i32 %33, %1
  %53 = and i32 %24, %1
  %54 = or i32 %21, %23
  %55 = and i32 %38, %0
  %56 = xor i32 %20, %0
  %57 = xor i32 %55, %56
  %58 = shl i32 %57, 2
  %59 = and i32 %7, %0
  %60 = or i32 %9, %59
  %61 = or i32 %59, %24
  %62 = xor i32 %48, %42
  %63 = or i32 %49, %31
  %64 = shl i32 %63, 1
  %65 = or i32 %1, %0
  %66 = xor i32 %65, -1
  %67 = or i32 %66, %2
  %68 = and i32 %7, %2
  %69 = and i32 %68, %0
  %70 = xor i32 %69, %27
  %71 = or i32 %2, %0
  %72 = xor i32 %71, -1
  %73 = or i32 %42, %72
  %74 = or i32 %69, %56
  %75 = or i32 %29, %30
  %76 = or i32 %33, %23
  %77 = or i32 %9, %42
  %78 = shl i32 %77, 1
  %79 = xor i32 %29, -1
  %80 = and i32 %79, %1
  %81 = or i32 %9, %30
  %82 = and i32 %20, %65
  %83 = shl i32 %82, 1
  %84 = and i32 %68, %19
  %85 = or i32 %20, %19
  %86 = xor i32 %85, 1073741823
  %87 = or i32 %86, %84
  %88 = shl i32 %87, 2
  %89 = and i32 %71, %31
  %90 = and i32 %8, %2
  %91 = and i32 %65, %24
  %92 = and i32 %71, %30
  %93 = shl i32 %92, 1
  %94 = and i32 %28, %1
  %95 = xor i32 %94, -1
  %96 = and i32 %95, %19
  %97 = and i32 %35, %0
  %98 = shl i32 %97, 1
  %99 = and i32 %48, %1
  %100 = or i32 %30, %72
  %101 = or i32 %42, %2
  %102 = xor i32 %38, %0
  %103 = xor i32 %33, -1
  %104 = shl i32 %103, 2
  %105 = shl i32 %21, 1
  %106 = or i32 %36, %19
  %107 = or i32 %49, %7
  %108 = xor i32 %71, %1
  %109 = shl i32 %108, 1
  %110 = or i32 %29, %7
  %111 = and i32 %65, %28
  %112 = and i32 %9, %31
  %113 = xor i32 %43, -1
  %114 = or i32 %113, %0
  %115 = xor i32 %36, %0
  %116 = or i32 %9, %1
  %117 = or i32 %21, %66
  %118 = and i32 %65, %2
  %119 = xor i32 %42, -1
  %120 = and i32 %28, %119
  %121 = or i32 %38, %19
  %122 = or i32 %24, %1
  %123 = and i32 %119, %2
  %124 = or i32 %33, %113
  %125 = or i32 %72, %7
  %126 = or i32 %50, %19
  %127 = xor i32 %35, %0
  %128 = xor i32 %33, %65
  %129 = or i32 %42, %28
  %130 = and i32 %30, %2
  %131 = or i32 %43, %0
  %132 = or i32 %59, %21
  %133 = shl i32 %132, 1
  %134 = or i32 %72, %1
  %135 = or i32 %38, %59
  %136 = xor i32 %50, %0
  %137 = or i32 %42, %21
  %138 = xor i32 %39, -1
  %139 = xor i32 %40, %138
  %140 = xor i32 %59, -1
  %141 = add i32 %59, 1
  %142 = or i32 %7, %2
  %143 = xor i32 %142, %0
  %144 = xor i32 %143, -1
  %145 = xor i32 %69, %144
  %146 = and i32 %9, %119
  %147 = or i32 %33, %94
  %148 = xor i32 %33, %8
  %149 = and i32 %50, %19
  %150 = add i32 %9, 1
  %151 = xor i32 %79, %1
  %152 = or i32 %24, %7
  %153 = or i32 %28, %66
  %154 = and i32 %31, %2
  %155 = or i32 %59, %28
  %156 = or i32 %50, %0
  %157 = shl i32 %156, 1
  %158 = xor i32 %66, %2
  %159 = or i32 %94, %19
  %160 = and i32 %43, %0
  %161 = xor i32 %160, %138
  %162 = or i32 %29, %38
  %163 = xor i32 %95, %0
  %164 = xor i32 %43, %0
  %165 = xor i32 %164, -1
  %166 = xor i32 %55, %165
  %167 = and i32 %24, %31
  %168 = and i32 %65, %21
  %169 = or i32 %69, %143
  %170 = shl i32 %169, 1
  %171 = xor i32 %27, -1
  %172 = or i32 %69, %171
  %173 = xor i32 %65, %2
  %174 = and i32 %71, %1
  %175 = or i32 %55, %45
  %176 = add i32 %8, 1
  %177 = xor i32 %48, %7
  %178 = and i32 %9, %140
  %179 = or i32 %24, %66
  %180 = xor i32 %21, %0
  %181 = and i32 %95, %0
  %182 = shl i32 %181, 2
  %183 = and i32 %35, %19
  %184 = xor i32 %72, %1
  %185 = or i32 %29, %1
  %186 = xor i32 %119, %2
  %187 = xor i32 %59, %2
  %188 = and i32 %28, %31
  %189 = or i32 %9, %7
  %190 = and i32 %21, %19
  %191 = or i32 %42, %36
  %192 = and i32 %9, %1
  %193 = and i32 %20, %8
  %194 = shl i32 %193, 1
  %195 = xor i32 %33, %43
  %196 = or i32 %42, %49
  %197 = or i32 %33, %7
  %198 = or i32 %28, %31
  %199 = or i32 %30, %2
  %200 = and i32 %24, %119
  %201 = or i32 %9, %23
  %202 = and i32 %48, %30
  %203 = shl i32 %202, 1
  %204 = and i32 %30, %24
  %205 = or i32 %39, %160
  %206 = or i32 %31, %2
  %207 = or i32 %20, %66
  %208 = and i32 %103, %7
  %209 = and i32 %103, %1
  %210 = or i32 %94, %0
  %211 = or i32 %42, %113
  %212 = xor i32 %42, %2
  %213 = add i32 %1, 1
  %214 = or i32 %28, %23
  %215 = shl i32 %214, 1
  %216 = or i32 %21, %0
  %217 = and i32 %43, %19
  %218 = xor i32 %217, 2147483647
  %219 = xor i32 %218, %55
  %220 = shl i32 %219, 1
  %221 = xor i32 %33, %1
  %222 = xor i32 %140, %2
  %223 = and i32 %9, %30
  %224 = or i32 %113, %19
  %225 = or i32 %23, %2
  %226 = and i32 %20, %119
  %227 = or i32 %49, %1
  %228 = and i32 %9, %7
  %229 = and i32 %48, %7
  %230 = or i32 %38, %0
  %231 = shl i32 %8, 1
  %232 = xor i32 %59, %95
  %233 = and i32 %20, %140
  %234 = or i32 %95, %19
  %235 = and i32 %8, %21
  %236 = xor i32 %29, %1
  %237 = xor i32 %59, %50
  %238 = shl i32 %237, 1
  %239 = xor i32 %103, %1
  %240 = xor i32 %33, %95
  %241 = or i32 %20, %59
  %242 = or i32 %30, %28
  %243 = and i32 %21, %140
  %244 = and i32 %21, %0
  %245 = or i32 %95, %0
  %246 = and i32 %24, %140
  %247 = or i32 %55, %217
  %248 = or i32 %42, %24
  %249 = and i32 %8, %28
  %250 = and i32 %79, %31
  %251 = xor i32 %23, %2
  %252 = and i32 %8, %24
  %253 = and i32 %21, %119
  %254 = xor i32 %35, %42
  %255 = shl i32 %254, 1
  %256 = or i32 %35, %19
  %257 = and i32 %30, %28
  %258 = or i32 %55, %164
  %259 = and i32 %142, %0
  %260 = xor i32 %259, 2147483647
  %261 = xor i32 %260, %84
  %262 = and i32 %9, %65
  %263 = or i32 %59, %2
  %264 = or i32 %72, %31
  %265 = and i32 %30, %79
  %266 = shl i32 %29, 1
  %267 = xor i32 %8, %2
  %268 = and i32 %24, %7
  %269 = or i32 %43, %19
  %270 = xor i32 %94, %0
  %271 = or i32 %9, %31
  %272 = and i32 %71, %7
  %273 = and i32 %113, %19
  %274 = and i32 %94, %19
  %275 = mul i32 %274, -24
  %276 = and i32 %113, %0
  %277 = mul i32 %276, 27
  %278 = and i32 %94, %0
  %279 = mul i32 %278, -9
  %280 = and i32 %36, %19
  %281 = mul i32 %280, 17
  %282 = mul i32 %39, 10
  %283 = and i32 %36, %0
  %284 = mul i32 %55, -7
  %285 = or i32 %12, %4
  %286 = xor i32 %14, -1
  %287 = xor i32 %286, %4
  %288 = xor i32 %5, -1
  %289 = and i32 %288, %4
  %290 = xor i32 %12, -1
  %291 = xor i32 %289, %290
  %292 = xor i32 %3, -1
  %293 = and i32 %292, %5
  %294 = and i32 %293, %4
  %295 = or i32 %292, %5
  %296 = xor i32 %295, %4
  %297 = xor i32 %296, -1
  %298 = xor i32 %294, %297
  %299 = or i32 %288, %4
  %300 = xor i32 %299, -1
  %301 = or i32 %300, %3
  %302 = and i32 %4, %3
  %303 = or i32 %5, %4
  %304 = xor i32 %303, %302
  %305 = shl i32 %304, 1
  %306 = xor i32 %5, %4
  %307 = xor i32 %306, -1
  %308 = or i32 %307, %292
  %309 = xor i32 %302, -1
  %310 = xor i32 %5, %3
  %311 = xor i32 %310, -1
  %312 = and i32 %311, %309
  %313 = or i32 %307, %3
  %314 = or i32 %292, %4
  %315 = and i32 %314, %5
  %316 = xor i32 %4, %3
  %317 = xor i32 %316, -1
  %318 = and i32 %306, %317
  %319 = and i32 %12, %4
  %320 = xor i32 %14, %11
  %321 = xor i32 %320, %319
  %322 = and i32 %293, %11
  %323 = or i32 %310, %11
  %324 = xor i32 %322, %323
  %325 = xor i32 %12, %4
  %326 = or i32 %288, %3
  %327 = or i32 %326, %11
  %328 = xor i32 %326, -1
  %329 = or i32 %328, %11
  %330 = xor i32 %289, -1
  %331 = xor i32 %314, -1
  %332 = or i32 %289, %12
  %333 = and i32 %292, %4
  %334 = xor i32 %333, -1
  %335 = and i32 %288, %334
  %336 = and i32 %307, %334
  %337 = or i32 %331, %5
  %338 = xor i32 %302, %5
  %339 = or i32 %4, %3
  %340 = xor i32 %339, -1
  %341 = or i32 %288, %340
  %342 = and i32 %314, %311
  %343 = and i32 %5, %4
  %344 = or i32 %343, %331
  %345 = and i32 %316, %330
  %346 = and i32 %299, %317
  %347 = and i32 %299, %316
  %348 = and i32 %330, %292
  %349 = xor i32 %343, %14
  %350 = and i32 %307, %309
  %351 = or i32 %306, %316
  %352 = shl i32 %351, 1
  %353 = or i32 %300, %317
  %354 = and i32 %306, %314
  %355 = or i32 %343, %292
  %356 = shl i32 %355, 1
  %357 = and i32 %288, %3
  %358 = xor i32 %357, -1
  %359 = xor i32 %343, %358
  %360 = shl i32 %359, 1
  %361 = or i32 %294, %296
  %362 = or i32 %358, %4
  %363 = or i32 %311, %340
  %364 = and i32 %306, %334
  %365 = and i32 %288, %309
  %366 = xor i32 %303, -1
  %367 = or i32 %366, %292
  %368 = and i32 %334, %5
  %369 = or i32 %286, %4
  %370 = or i32 %289, %328
  %371 = or i32 %306, %302
  %372 = or i32 %333, %307
  %373 = shl i32 %372, 1
  %374 = or i32 %358, %11
  %375 = or i32 %310, %4
  %376 = and i32 %307, %317
  %377 = shl i32 %376, 1
  %378 = xor i32 %366, %3
  %379 = and i32 %299, %292
  %380 = and i32 %303, %316
  %381 = and i32 %290, %4
  %382 = and i32 %358, %4
  %383 = and i32 %317, %5
  %384 = or i32 %343, %340
  %385 = and i32 %311, %334
  %386 = and i32 %339, %307
  %387 = shl i32 %386, 1
  %388 = xor i32 %358, %4
  %389 = and i32 %314, %288
  %390 = or i32 %289, %292
  %391 = and i32 %306, %292
  %392 = shl i32 %343, 1
  %393 = and i32 %306, %316
  %394 = or i32 %300, %292
  %395 = xor i32 %333, %290
  %396 = and i32 %295, %4
  %397 = xor i32 %396, -1
  %398 = xor i32 %322, %397
  %399 = or i32 %328, %4
  %400 = and i32 %330, %3
  %401 = and i32 %306, %3
  %402 = and i32 %311, %4
  %403 = xor i32 %13, -1
  %404 = xor i32 %15, %403
  %405 = xor i32 %328, %4
  %406 = and i32 %303, %317
  %407 = xor i32 %289, %3
  %408 = xor i32 %310, %11
  %409 = or i32 %319, %408
  %410 = and i32 %310, %334
  %411 = and i32 %326, %11
  %412 = and i32 %316, %288
  %413 = and i32 %295, %11
  %414 = or i32 %294, %413
  %415 = add i32 %310, 1
  %416 = and i32 %316, %307
  %417 = or i32 %302, %5
  %418 = xor i32 %413, 2147483647
  %419 = xor i32 %418, %294
  %420 = xor i32 %343, 2147483647
  %421 = and i32 %420, %316
  %422 = and i32 %307, %292
  %423 = xor i32 %326, %302
  %424 = xor i32 %326, %4
  %425 = xor i32 %299, %3
  %426 = shl i32 %425, 1
  %427 = and i32 %303, %3
  %428 = add i32 %302, 1
  %429 = and i32 %310, %4
  %430 = xor i32 %429, %403
  %431 = or i32 %307, %340
  %432 = xor i32 %330, %3
  %433 = and i32 %357, %11
  %434 = and i32 %286, %4
  %435 = and i32 %357, %4
  %436 = shl i32 %435, 2
  %437 = and i32 %328, %11
  %438 = shl i32 %437, 3
  %439 = and i32 %328, %4
  %440 = mul i32 %439, 13
  %441 = add i32 %42, -1
  %442 = add i32 %441, %267
  %443 = add i32 %442, %257
  %444 = add i32 %443, %72
  %445 = add i32 %444, %188
  %446 = add i32 %445, %173
  %447 = add i32 %446, %154
  %448 = add i32 %447, %118
  %449 = add i32 %448, %49
  %450 = add i32 %449, %248
  %451 = add i32 %450, %160
  %452 = add i32 %451, %241
  %453 = add i32 %452, %174
  %454 = add i32 %453, %85
  %455 = add i32 %454, %149
  %456 = add i32 %455, %137
  %457 = add i32 %456, %80
  %458 = sub i32 %457, %22
  %459 = add i32 %458, %316
  %460 = add i32 %459, %175
  %461 = add i32 %460, %307
  %462 = add i32 %461, %261
  %463 = add i32 %462, %434
  %464 = add i32 %463, %422
  %465 = add i32 %464, %407
  %466 = add i32 %465, %405
  %467 = add i32 %466, %385
  %468 = add i32 %467, %364
  %469 = add i32 %468, %325
  %470 = add i32 %469, %421
  %471 = add i32 %470, %419
  %472 = shl i32 %471, 1
  %473 = sub i32 %264, %146
  %474 = sub i32 %473, %135
  %475 = sub i32 %474, %107
  %476 = add i32 %475, %340
  %477 = add i32 %476, %315
  %478 = sub i32 %477, %350
  %479 = mul i32 %478, 5
  %480 = add i32 %283, %119
  %481 = add i32 %480, %235
  %482 = add i32 %481, %286
  %483 = add i32 %482, %13
  %484 = shl i32 %483, 2
  %485 = add i32 %319, %273
  %486 = mul i32 %485, -6
  %487 = add i32 %94, %113
  %488 = add i32 %487, %353
  %489 = mul i32 %488, 3
  %490 = add i32 %213, %1
  %491 = add i32 %490, %59
  %492 = add i32 %491, %141
  %493 = add i32 %492, %176
  %494 = add i32 %493, 1
  %495 = add i32 %494, %30
  %496 = add i32 %495, %37
  %497 = add i32 %496, %67
  %498 = sub i32 %497, %33
  %499 = add i32 %498, %90
  %500 = sub i32 %499, %35
  %501 = add i32 %500, %48
  %502 = sub i32 %501, %101
  %503 = add i32 %502, %111
  %504 = sub i32 %503, %120
  %505 = sub i32 %504, %123
  %506 = add i32 %505, %129
  %507 = add i32 %506, %130
  %508 = add i32 %507, %150
  %509 = sub i32 %508, %153
  %510 = sub i32 %509, %155
  %511 = add i32 %510, %158
  %512 = sub i32 %511, %186
  %513 = sub i32 %512, %187
  %514 = add i32 %513, %9
  %515 = add i32 %514, %198
  %516 = sub i32 %515, %199
  %517 = sub i32 %516, %71
  %518 = sub i32 %517, %206
  %519 = sub i32 %518, %212
  %520 = sub i32 %519, %222
  %521 = add i32 %520, %113
  %522 = sub i32 %521, %225
  %523 = sub i32 %522, %231
  %524 = add i32 %523, %242
  %525 = add i32 %524, %249
  %526 = add i32 %525, %251
  %527 = sub i32 %526, %263
  %528 = add i32 %527, %95
  %529 = sub i32 %528, %3
  %530 = add i32 %529, %292
  %531 = add i32 %530, %27
  %532 = sub i32 %531, %32
  %533 = add i32 %532, %34
  %534 = sub i32 %533, %44
  %535 = add i32 %534, %45
  %536 = sub i32 %535, %46
  %537 = add i32 %536, %47
  %538 = add i32 %537, %51
  %539 = add i32 %538, %52
  %540 = add i32 %539, %53
  %541 = sub i32 %540, %54
  %542 = add i32 %541, %60
  %543 = add i32 %542, %61
  %544 = sub i32 %543, %62
  %545 = add i32 %544, %73
  %546 = add i32 %545, %75
  %547 = sub i32 %546, %76
  %548 = add i32 %547, %81
  %549 = sub i32 %548, %89
  %550 = add i32 %549, %91
  %551 = sub i32 %550, %96
  %552 = sub i32 %551, %99
  %553 = sub i32 %552, %100
  %554 = add i32 %553, %102
  %555 = sub i32 %554, %104
  %556 = sub i32 %555, %105
  %557 = add i32 %556, %106
  %558 = add i32 %557, %110
  %559 = sub i32 %558, %112
  %560 = sub i32 %559, %114
  %561 = sub i32 %560, %40
  %562 = sub i32 %561, %115
  %563 = add i32 %562, %116
  %564 = sub i32 %563, %117
  %565 = sub i32 %564, %121
  %566 = add i32 %565, %122
  %567 = add i32 %566, %124
  %568 = add i32 %567, %125
  %569 = sub i32 %568, %126
  %570 = add i32 %569, %127
  %571 = add i32 %570, %128
  %572 = add i32 %571, %131
  %573 = sub i32 %572, %134
  %574 = add i32 %573, %136
  %575 = sub i32 %574, %147
  %576 = add i32 %575, %148
  %577 = sub i32 %576, %151
  %578 = add i32 %577, %152
  %579 = sub i32 %578, %159
  %580 = sub i32 %579, %162
  %581 = add i32 %580, %163
  %582 = sub i32 %581, %167
  %583 = sub i32 %582, %168
  %584 = add i32 %583, %177
  %585 = sub i32 %584, %178
  %586 = sub i32 %585, %179
  %587 = add i32 %586, %180
  %588 = add i32 %587, %183
  %589 = add i32 %588, %184
  %590 = add i32 %589, %185
  %591 = sub i32 %590, %189
  %592 = add i32 %591, %190
  %593 = add i32 %592, %191
  %594 = add i32 %593, %192
  %595 = sub i32 %594, %195
  %596 = add i32 %595, %196
  %597 = add i32 %596, %197
  %598 = add i32 %597, %200
  %599 = sub i32 %598, %201
  %600 = add i32 %599, %204
  %601 = sub i32 %600, %207
  %602 = sub i32 %601, %208
  %603 = add i32 %602, %209
  %604 = add i32 %603, %210
  %605 = sub i32 %604, %211
  %606 = sub i32 %605, %215
  %607 = add i32 %606, %216
  %608 = add i32 %607, %221
  %609 = sub i32 %608, %223
  %610 = add i32 %609, %224
  %611 = add i32 %610, %226
  %612 = add i32 %611, %227
  %613 = sub i32 %612, %228
  %614 = sub i32 %613, %229
  %615 = sub i32 %614, %230
  %616 = sub i32 %615, %232
  %617 = sub i32 %616, %233
  %618 = add i32 %617, %217
  %619 = add i32 %618, %234
  %620 = add i32 %619, %236
  %621 = add i32 %620, %239
  %622 = add i32 %621, %240
  %623 = sub i32 %622, %243
  %624 = add i32 %623, %244
  %625 = add i32 %624, %245
  %626 = sub i32 %625, %246
  %627 = sub i32 %626, %250
  %628 = sub i32 %627, %56
  %629 = add i32 %628, %252
  %630 = sub i32 %629, %253
  %631 = add i32 %630, %256
  %632 = sub i32 %631, %262
  %633 = sub i32 %632, %265
  %634 = sub i32 %633, %266
  %635 = add i32 %634, %268
  %636 = add i32 %635, %269
  %637 = add i32 %636, %270
  %638 = add i32 %637, %271
  %639 = add i32 %638, %272
  %640 = sub i32 %639, %26
  %641 = add i32 %640, %41
  %642 = sub i32 %641, %64
  %643 = sub i32 %642, %70
  %644 = add i32 %643, %74
  %645 = sub i32 %644, %78
  %646 = sub i32 %645, %83
  %647 = sub i32 %646, %93
  %648 = sub i32 %647, %98
  %649 = sub i32 %648, %109
  %650 = sub i32 %649, %133
  %651 = add i32 %650, %139
  %652 = add i32 %651, %145
  %653 = sub i32 %652, %157
  %654 = sub i32 %653, %161
  %655 = add i32 %654, %166
  %656 = add i32 %655, %172
  %657 = sub i32 %656, %182
  %658 = sub i32 %657, %194
  %659 = sub i32 %658, %203
  %660 = sub i32 %659, %205
  %661 = sub i32 %660, %238
  %662 = add i32 %661, %247
  %663 = sub i32 %662, %255
  %664 = add i32 %663, %258
  %665 = add i32 %664, %275
  %666 = add i32 %665, %277
  %667 = add i32 %666, %279
  %668 = add i32 %667, %281
  %669 = add i32 %668, %282
  %670 = add i32 %669, %284
  %671 = add i32 %670, %5
  %672 = add i32 %671, %428
  %673 = sub i32 %672, %58
  %674 = sub i32 %673, %170
  %675 = add i32 %674, %330
  %676 = add i32 %675, %335
  %677 = sub i32 %676, %337
  %678 = add i32 %677, %338
  %679 = add i32 %678, %341
  %680 = sub i32 %679, %310
  %681 = sub i32 %680, %365
  %682 = sub i32 %681, %368
  %683 = sub i32 %682, %383
  %684 = sub i32 %683, %389
  %685 = sub i32 %684, %14
  %686 = add i32 %685, %412
  %687 = add i32 %686, %415
  %688 = sub i32 %687, %417
  %689 = sub i32 %688, %306
  %690 = sub i32 %689, %88
  %691 = sub i32 %690, %220
  %692 = sub i32 %691, %285
  %693 = add i32 %692, %287
  %694 = add i32 %693, %291
  %695 = add i32 %694, %301
  %696 = add i32 %695, %308
  %697 = sub i32 %696, %312
  %698 = sub i32 %697, %313
  %699 = sub i32 %698, %318
  %700 = sub i32 %699, %327
  %701 = sub i32 %700, %329
  %702 = sub i32 %701, %332
  %703 = add i32 %702, %336
  %704 = add i32 %703, %342
  %705 = add i32 %704, %344
  %706 = sub i32 %705, %345
  %707 = sub i32 %706, %346
  %708 = sub i32 %707, %347
  %709 = add i32 %708, %348
  %710 = add i32 %709, %349
  %711 = sub i32 %710, %354
  %712 = sub i32 %711, %362
  %713 = add i32 %712, %363
  %714 = sub i32 %713, %367
  %715 = sub i32 %714, %369
  %716 = sub i32 %715, %370
  %717 = add i32 %716, %371
  %718 = add i32 %717, %15
  %719 = sub i32 %718, %374
  %720 = sub i32 %719, %375
  %721 = add i32 %720, %378
  %722 = sub i32 %721, %379
  %723 = add i32 %722, %380
  %724 = add i32 %723, %381
  %725 = sub i32 %724, %382
  %726 = sub i32 %725, %384
  %727 = sub i32 %726, %388
  %728 = sub i32 %727, %390
  %729 = add i32 %728, %391
  %730 = sub i32 %729, %392
  %731 = add i32 %730, %393
  %732 = sub i32 %731, %394
  %733 = add i32 %732, %395
  %734 = add i32 %733, %399
  %735 = sub i32 %734, %400
  %736 = add i32 %735, %323
  %737 = add i32 %736, %401
  %738 = add i32 %737, %402
  %739 = add i32 %738, %406
  %740 = add i32 %739, %410
  %741 = add i32 %740, %411
  %742 = add i32 %741, %416
  %743 = sub i32 %742, %423
  %744 = sub i32 %743, %424
  %745 = sub i32 %744, %427
  %746 = add i32 %745, %431
  %747 = sub i32 %746, %432
  %748 = add i32 %747, %433
  %749 = sub i32 %748, %298
  %750 = sub i32 %749, %305
  %751 = add i32 %750, %321
  %752 = sub i32 %751, %324
  %753 = sub i32 %752, %352
  %754 = sub i32 %753, %356
  %755 = sub i32 %754, %360
  %756 = sub i32 %755, %361
  %757 = sub i32 %756, %373
  %758 = sub i32 %757, %377
  %759 = sub i32 %758, %387
  %760 = sub i32 %759, %398
  %761 = add i32 %760, %404
  %762 = add i32 %761, %409
  %763 = sub i32 %762, %414
  %764 = sub i32 %763, %426
  %765 = add i32 %764, %430
  %766 = sub i32 %765, %436
  %767 = sub i32 %766, %438
  %768 = add i32 %767, %440
  %769 = add i32 %768, %486
  %770 = add i32 %769, %489
  %771 = add i32 %770, %484
  %772 = add i32 %771, %479
  %773 = add i32 %772, %472
  %774 = icmp eq i32 %18, %773
  %775 = select i1 %774, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %776 = tail call i32 @puts(i8* nonnull dereferenceable(1) %775)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
