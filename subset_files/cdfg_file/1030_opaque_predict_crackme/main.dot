digraph "DFG for'main' function" {
	Node0xcfadf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xcfae78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xcfaf08[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xcfb368[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xcfb448[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xcfb568[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xcfb7a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xcfb858[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xcfc7c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xcfce50[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xcfcec0[shape=record, label="  %9 = and i32 %6, %8"];
	Node0xcfcf30[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0xcfcfa0[shape=record, label="  %11 = and i32 %7, %6"];
	Node0xcfd010[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0xcfd080[shape=record, label="  %13 = mul i32 %12, -5"];
	Node0xcfd0f0[shape=record, label="  %14 = add i32 %13, %10"];
	Node0xcfd160[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0xcfd1d0[shape=record, label="  %16 = mul i32 %7, 5"];
	Node0xcfd240[shape=record, label="  %17 = or i32 %6, %8"];
	Node0xcfd2b0[shape=record, label="  %18 = or i32 %7, %6"];
	Node0xcfd320[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0xcfd390[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0xcfd400[shape=record, label="  %21 = xor i32 %17, -1"];
	Node0xcfd470[shape=record, label="  %22 = mul i32 %21, -7"];
	Node0xcfd4e0[shape=record, label="  %23 = shl i32 %15, 1"];
	Node0xcfd550[shape=record, label="  %24 = add i32 %7, 5"];
	Node0xcfd5c0[shape=record, label="  %25 = add i32 %24, %16"];
	Node0xcfd630[shape=record, label="  %26 = sub i32 %25, %17"];
	Node0xcfd6a0[shape=record, label="  %27 = sub i32 %26, %9"];
	Node0xcfd710[shape=record, label="  %28 = add i32 %27, %11"];
	Node0xcfd780[shape=record, label="  %29 = add i32 %28, %22"];
	Node0xcfd7f0[shape=record, label="  %30 = add i32 %29, %23"];
	Node0xcfd860[shape=record, label="  %31 = add i32 %30, %20"];
	Node0xcfd8d0[shape=record, label="  %32 = icmp eq i32 %14, %31"];
	Node0xc9b9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xcfdb70[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0xcfddc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xcfdf28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xcfdfe8[shape=record, label="  ret i32 0"];
	Node0xcfadf8 -> Node0xcfae78;
	Node0xcfae78 -> Node0xcfaf08;
	Node0xcfaf08 -> Node0xcfb368;
	Node0xcfb368 -> Node0xcfb448;
	Node0xcfb448 -> Node0xcfb568;
	Node0xcfb568 -> Node0xcfb7a0;
	Node0xcfb7a0 -> Node0xcfb858;
	Node0xcfb858 -> Node0xcfc7c8;
	Node0xcfc7c8 -> Node0xcfce50;
	Node0xcfce50 -> Node0xcfcec0;
	Node0xcfcec0 -> Node0xcfcf30;
	Node0xcfcf30 -> Node0xcfcfa0;
	Node0xcfcfa0 -> Node0xcfd010;
	Node0xcfd010 -> Node0xcfd080;
	Node0xcfd080 -> Node0xcfd0f0;
	Node0xcfd0f0 -> Node0xcfd160;
	Node0xcfd160 -> Node0xcfd1d0;
	Node0xcfd1d0 -> Node0xcfd240;
	Node0xcfd240 -> Node0xcfd2b0;
	Node0xcfd2b0 -> Node0xcfd320;
	Node0xcfd320 -> Node0xcfd390;
	Node0xcfd390 -> Node0xcfd400;
	Node0xcfd400 -> Node0xcfd470;
	Node0xcfd470 -> Node0xcfd4e0;
	Node0xcfd4e0 -> Node0xcfd550;
	Node0xcfd550 -> Node0xcfd5c0;
	Node0xcfd5c0 -> Node0xcfd630;
	Node0xcfd630 -> Node0xcfd6a0;
	Node0xcfd6a0 -> Node0xcfd710;
	Node0xcfd710 -> Node0xcfd780;
	Node0xcfd780 -> Node0xcfd7f0;
	Node0xcfd7f0 -> Node0xcfd860;
	Node0xcfd860 -> Node0xcfd8d0;
	Node0xcfd8d0 -> Node0xc9b9d8;
	Node0xc9b9d8 -> Node0xcfdb70;
	Node0xcfdb70 -> Node0xcfddc8;
	Node0xcfddc8 -> Node0xcfdf28;
	Node0xcfdf28 -> Node0xcfdfe8;
edge [color=red]
	Node0xcfadf8 -> Node0xcfaf08;
	Node0xcfaf08 -> Node0xcfb368;
	Node0xcfae78 -> Node0xcfb448;
	Node0xcfb448 -> Node0xcfb568;
	Node0xcfadf8 -> Node0xcfb7a0;
	Node0xcfae78 -> Node0xcfb7a0;
	Node0xcfadf8 -> Node0xcfb858;
	Node0xcfae78 -> Node0xcfc7c8;
	Node0xcfc7c8 -> Node0xcfce50;
	Node0xcfb858 -> Node0xcfcec0;
	Node0xcfce50 -> Node0xcfcec0;
	Node0xcfcec0 -> Node0xcfcf30;
	Node0xcfc7c8 -> Node0xcfcfa0;
	Node0xcfb858 -> Node0xcfcfa0;
	Node0xcfcfa0 -> Node0xcfd010;
	Node0xcfd010 -> Node0xcfd080;
	Node0xcfd080 -> Node0xcfd0f0;
	Node0xcfcf30 -> Node0xcfd0f0;
	Node0xcfc7c8 -> Node0xcfd160;
	Node0xcfb858 -> Node0xcfd160;
	Node0xcfc7c8 -> Node0xcfd1d0;
	Node0xcfb858 -> Node0xcfd240;
	Node0xcfce50 -> Node0xcfd240;
	Node0xcfc7c8 -> Node0xcfd2b0;
	Node0xcfb858 -> Node0xcfd2b0;
	Node0xcfd2b0 -> Node0xcfd320;
	Node0xcfd320 -> Node0xcfd390;
	Node0xcfd240 -> Node0xcfd400;
	Node0xcfd400 -> Node0xcfd470;
	Node0xcfd160 -> Node0xcfd4e0;
	Node0xcfc7c8 -> Node0xcfd550;
	Node0xcfd550 -> Node0xcfd5c0;
	Node0xcfd1d0 -> Node0xcfd5c0;
	Node0xcfd5c0 -> Node0xcfd630;
	Node0xcfd240 -> Node0xcfd630;
	Node0xcfd630 -> Node0xcfd6a0;
	Node0xcfcec0 -> Node0xcfd6a0;
	Node0xcfd6a0 -> Node0xcfd710;
	Node0xcfcfa0 -> Node0xcfd710;
	Node0xcfd710 -> Node0xcfd780;
	Node0xcfd470 -> Node0xcfd780;
	Node0xcfd780 -> Node0xcfd7f0;
	Node0xcfd4e0 -> Node0xcfd7f0;
	Node0xcfd7f0 -> Node0xcfd860;
	Node0xcfd390 -> Node0xcfd860;
	Node0xcfd0f0 -> Node0xcfd8d0;
	Node0xcfd860 -> Node0xcfd8d0;
	Node0xcfd8d0 -> Node0xc9b9d8;
	Node0xc9b9d8 -> Node0xcfdb70;
	Node0xcfb448 -> Node0xcfddc8;
	Node0xcfaf08 -> Node0xcfdf28;
}
