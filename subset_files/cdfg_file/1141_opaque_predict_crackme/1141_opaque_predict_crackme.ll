; ModuleID = '../.././c_source_file/1141_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1141_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %1, -1
  %5 = and i32 %4, %0
  %6 = xor i32 %5, -1
  %7 = add i32 %5, 1
  %8 = xor i32 %2, -1
  %9 = and i32 %8, %0
  %10 = and i32 %2, %1
  %11 = or i32 %9, %10
  %12 = add i32 %7, %11
  %13 = xor i32 %0, -1
  %14 = xor i32 %10, -1
  %15 = and i32 %14, %13
  %16 = xor i32 %1, %0
  %17 = xor i32 %16, -1
  %18 = add i32 %16, 1
  %19 = and i32 %2, %0
  %20 = or i32 %2, %1
  %21 = xor i32 %19, %20
  %22 = or i32 %2, %0
  %23 = and i32 %10, %0
  %24 = xor i32 %20, %0
  %25 = xor i32 %23, -1
  %26 = xor i32 %24, %25
  %27 = xor i32 %2, %1
  %28 = and i32 %1, %0
  %29 = xor i32 %27, -1
  %30 = or i32 %28, %29
  %31 = or i32 %4, %0
  %32 = and i32 %31, %8
  %33 = and i32 %14, %0
  %34 = xor i32 %22, -1
  %35 = or i32 %34, %4
  %36 = or i32 %8, %0
  %37 = xor i32 %36, -1
  %38 = xor i32 %37, %1
  %39 = and i32 %22, %17
  %40 = and i32 %4, %2
  %41 = and i32 %40, %0
  %42 = xor i32 %27, %0
  %43 = xor i32 %42, -1
  %44 = xor i32 %41, %43
  %45 = xor i32 %9, -1
  %46 = shl i32 %45, 1
  %47 = or i32 %20, %0
  %48 = and i32 %8, %1
  %49 = or i32 %19, %48
  %50 = or i32 %4, %2
  %51 = xor i32 %50, %0
  %52 = or i32 %41, %51
  %53 = or i32 %1, %0
  %54 = xor i32 %2, %0
  %55 = and i32 %54, %53
  %56 = or i32 %27, %0
  %57 = xor i32 %41, %56
  %58 = and i32 %53, %8
  %59 = xor i32 %48, -1
  %60 = xor i32 %5, %59
  %61 = shl i32 %60, 1
  %62 = or i32 %54, %17
  %63 = and i32 %27, %13
  %64 = xor i32 %63, %25
  %65 = or i32 %19, %4
  %66 = xor i32 %9, %1
  %67 = xor i32 %54, -1
  %68 = and i32 %53, %67
  %69 = xor i32 %53, -1
  %70 = or i32 %54, %69
  %71 = or i32 %19, %1
  %72 = or i32 %14, %13
  %73 = and i32 %31, %2
  %74 = shl i32 %73, 1
  %75 = xor i32 %19, -1
  %76 = and i32 %75, %17
  %77 = shl i32 %76, 1
  %78 = or i32 %37, %4
  %79 = or i32 %8, %1
  %80 = xor i32 %79, -1
  %81 = or i32 %80, %0
  %82 = and i32 %54, %6
  %83 = or i32 %29, %69
  %84 = or i32 %16, %67
  %85 = or i32 %67, %17
  %86 = shl i32 %85, 1
  %87 = and i32 %40, %13
  %88 = or i32 %27, %13
  %89 = xor i32 %88, -1
  %90 = or i32 %87, %89
  %91 = or i32 %37, %1
  %92 = xor i32 %31, -1
  %93 = or i32 %8, %92
  %94 = and i32 %20, %13
  %95 = xor i32 %94, %25
  %96 = or i32 %92, %2
  %97 = xor i32 %28, -1
  %98 = and i32 %67, %97
  %99 = xor i32 %31, %2
  %100 = shl i32 %99, 1
  %101 = xor i32 %5, %14
  %102 = shl i32 %101, 2
  %103 = and i32 %67, %6
  %104 = or i32 %54, %5
  %105 = and i32 %50, %0
  %106 = xor i32 %105, 2147483647
  %107 = xor i32 %106, %87
  %108 = or i32 %28, %67
  %109 = and i32 %8, %17
  %110 = or i32 %34, %17
  %111 = xor i32 %19, %1
  %112 = or i32 %19, %92
  %113 = xor i32 %59, %0
  %114 = shl i32 %113, 1
  %115 = or i32 %37, %17
  %116 = or i32 %59, %0
  %117 = xor i32 %20, -1
  %118 = or i32 %117, %0
  %119 = xor i32 %79, %28
  %120 = add i32 %27, 1
  %121 = or i32 %27, %69
  %122 = xor i32 %87, %88
  %123 = add i32 %53, 1
  %124 = or i32 %9, %4
  %125 = or i32 %29, %13
  %126 = or i32 %28, %117
  %127 = xor i32 %51, -1
  %128 = xor i32 %41, %127
  %129 = xor i32 %53, %2
  %130 = or i32 %28, %37
  %131 = shl i32 %130, 1
  %132 = or i32 %79, %13
  %133 = or i32 %10, %0
  %134 = and i32 %53, %2
  %135 = xor i32 %23, %42
  %136 = xor i32 %48, %0
  %137 = xor i32 %5, %2
  %138 = or i32 %28, %8
  %139 = or i32 %27, %92
  %140 = shl i32 %139, 1
  %141 = or i32 %80, %13
  %142 = and i32 %54, %31
  %143 = or i32 %67, %4
  %144 = or i32 %23, %43
  %145 = and i32 %6, %2
  %146 = xor i32 %19, %53
  %147 = or i32 %14, %0
  %148 = and i32 %79, %13
  %149 = and i32 %31, %29
  %150 = or i32 %16, %34
  %151 = xor i32 %97, %2
  %152 = shl i32 %151, 1
  %153 = or i32 %48, %5
  %154 = and i32 %10, %13
  %155 = and i32 %20, %0
  %156 = xor i32 %155, 2147483647
  %157 = xor i32 %156, %154
  %158 = and i32 %59, %13
  %159 = xor i32 %10, %0
  %160 = and i32 %79, %0
  %161 = and i32 %16, %75
  %162 = or i32 %54, %28
  %163 = or i32 %10, %5
  %164 = or i32 %8, %69
  %165 = and i32 %27, %31
  %166 = and i32 %59, %0
  %167 = and i32 %29, %13
  %168 = and i32 %67, %17
  %169 = xor i32 %28, %2
  %170 = and i32 %97, %2
  %171 = and i32 %45, %17
  %172 = or i32 %69, %2
  %173 = or i32 %54, %4
  %174 = xor i32 %56, 2147483647
  %175 = or i32 %174, %41
  %176 = shl i32 %175, 1
  %177 = xor i32 %92, %2
  %178 = or i32 %28, %34
  %179 = shl i32 %178, 1
  %180 = or i32 %16, %2
  %181 = or i32 %23, %24
  %182 = or i32 %9, %1
  %183 = and i32 %45, %1
  %184 = xor i32 %80, %0
  %185 = xor i32 %79, %0
  %186 = or i32 %117, %13
  %187 = xor i32 %22, %1
  %188 = or i32 %9, %16
  %189 = or i32 %54, %92
  %190 = and i32 %67, %1
  %191 = or i32 %20, %13
  %192 = and i32 %36, %17
  %193 = or i32 %34, %1
  %194 = or i32 %5, %8
  %195 = xor i32 %75, %1
  %196 = and i32 %50, %13
  %197 = or i32 %41, %196
  %198 = and i32 %36, %1
  %199 = shl i32 %59, 1
  %200 = and i32 %54, %16
  %201 = and i32 %67, %4
  %202 = or i32 %67, %69
  %203 = or i32 %54, %16
  %204 = xor i32 %29, %0
  %205 = and i32 %29, %0
  %206 = or i32 %48, %13
  %207 = and i32 %45, %4
  %208 = and i32 %27, %0
  %209 = or i32 %154, %208
  %210 = or i32 %59, %13
  %211 = xor i32 %9, %79
  %212 = or i32 %27, %5
  %213 = and i32 %54, %97
  %214 = and i32 %29, %6
  %215 = xor i32 %196, 1073741823
  %216 = xor i32 %215, %41
  %217 = and i32 %27, %6
  %218 = shl i32 %217, 1
  %219 = xor i32 %19, %59
  %220 = and i32 %31, %67
  %221 = xor i32 %20, %28
  %222 = and i32 %75, %4
  %223 = and i32 %54, %4
  %224 = or i32 %17, %2
  %225 = add i32 %54, 1
  %226 = and i32 %16, %45
  %227 = and i32 %29, %97
  %228 = xor i32 %69, %2
  %229 = and i32 %27, %97
  %230 = or i32 %9, %80
  %231 = and i32 %22, %16
  %232 = or i32 %48, %0
  %233 = or i32 %79, %0
  %234 = and i32 %16, %2
  %235 = shl i32 %234, 1
  %236 = and i32 %53, %29
  %237 = shl i32 %236, 1
  %238 = or i32 %41, %42
  %239 = and i32 %27, %53
  %240 = or i32 %5, %67
  %241 = and i32 %54, %1
  %242 = and i32 %36, %4
  %243 = xor i32 %6, %2
  %244 = and i32 %17, %2
  %245 = or i32 %54, %1
  %246 = or i32 %28, %2
  %247 = xor i32 %36, %1
  %248 = or i32 %29, %0
  %249 = xor i32 %9, %14
  %250 = or i32 %19, %16
  %251 = shl i32 %250, 1
  %252 = xor i32 %208, -1
  %253 = xor i32 %154, %252
  %254 = and i32 %22, %4
  %255 = or i32 %67, %1
  %256 = and i32 %75, %1
  %257 = shl i32 %256, 1
  %258 = or i32 %23, %63
  %259 = shl i32 %258, 1
  %260 = add i32 %31, 1
  %261 = xor i32 %45, %1
  %262 = shl i32 %261, 1
  %263 = or i32 %19, %117
  %264 = shl i32 %263, 1
  %265 = or i32 %154, %155
  %266 = xor i32 %14, %0
  %267 = or i32 %16, %37
  %268 = or i32 %8, %17
  %269 = or i32 %5, %29
  %270 = and i32 %8, %6
  %271 = xor i32 %22, %28
  %272 = shl i32 %271, 1
  %273 = or i32 %29, %92
  %274 = xor i32 %19, %31
  %275 = xor i32 %117, %0
  %276 = or i32 %9, %17
  %277 = and i32 %16, %67
  %278 = shl i32 %277, 1
  %279 = and i32 %8, %97
  %280 = or i32 %5, %2
  %281 = shl i32 %280, 1
  %282 = add i32 %20, 1
  %283 = and i32 %36, %16
  %284 = add i32 %22, 1
  %285 = and i32 %22, %1
  %286 = or i32 %10, %13
  %287 = or i32 %16, %8
  %288 = or i32 %28, %80
  %289 = xor i32 %34, %1
  %290 = or i32 %23, %94
  %291 = or i32 %27, %28
  %292 = or i32 %19, %69
  %293 = shl i32 %155, 1
  %294 = or i32 %87, %105
  %295 = and i32 %117, %13
  %296 = and i32 %48, %13
  %297 = mul i32 %296, 6
  %298 = and i32 %117, %0
  %299 = mul i32 %298, -26
  %300 = and i32 %48, %0
  %301 = mul i32 %300, -12
  %302 = and i32 %80, %13
  %303 = mul i32 %302, 19
  %304 = and i32 %80, %0
  %305 = mul i32 %304, 10
  %306 = mul i32 %23, 22
  %307 = add i32 %177, %37
  %308 = add i32 %307, %170
  %309 = add i32 %308, %19
  %310 = add i32 %309, %145
  %311 = add i32 %310, %288
  %312 = add i32 %311, %269
  %313 = add i32 %312, %222
  %314 = add i32 %313, %195
  %315 = add i32 %314, %191
  %316 = add i32 %315, %173
  %317 = add i32 %316, %158
  %318 = add i32 %317, %125
  %319 = add i32 %318, %104
  %320 = add i32 %319, %84
  %321 = add i32 %320, %55
  %322 = add i32 %321, %107
  %323 = add i32 %322, %157
  %324 = shl i32 %323, 1
  %325 = sub i32 %5, %268
  %326 = add i32 %325, %194
  %327 = add i32 %326, %70
  %328 = sub i32 %327, %239
  %329 = mul i32 %328, 3
  %330 = add i32 %216, %274
  %331 = shl i32 %330, 2
  %332 = add i32 %32, %161
  %333 = sub i32 %332, %171
  %334 = add i32 %333, %160
  %335 = sub i32 %334, %122
  %336 = sub i32 %335, %238
  %337 = mul i32 %336, 5
  %338 = sub i32 %13, %0
  %339 = sub i32 %338, %1
  %340 = add i32 %339, %4
  %341 = add i32 %340, %18
  %342 = sub i32 %341, %31
  %343 = add i32 %342, %123
  %344 = add i32 %343, %16
  %345 = sub i32 %344, %53
  %346 = add i32 %345, %260
  %347 = sub i32 %346, %22
  %348 = add i32 %347, %27
  %349 = add i32 %348, %58
  %350 = add i32 %349, %93
  %351 = sub i32 %350, %9
  %352 = sub i32 %351, %96
  %353 = sub i32 %352, %109
  %354 = add i32 %353, %120
  %355 = sub i32 %354, %129
  %356 = add i32 %355, %75
  %357 = add i32 %356, %134
  %358 = add i32 %357, %20
  %359 = sub i32 %358, %137
  %360 = sub i32 %359, %138
  %361 = add i32 %360, %164
  %362 = add i32 %361, %169
  %363 = sub i32 %362, %172
  %364 = add i32 %363, %180
  %365 = add i32 %364, %36
  %366 = sub i32 %365, %224
  %367 = add i32 %366, %225
  %368 = sub i32 %367, %228
  %369 = sub i32 %368, %48
  %370 = add i32 %369, %243
  %371 = sub i32 %370, %244
  %372 = sub i32 %371, %246
  %373 = add i32 %372, %270
  %374 = sub i32 %373, %279
  %375 = add i32 %374, %282
  %376 = add i32 %375, %284
  %377 = sub i32 %376, %287
  %378 = add i32 %377, %54
  %379 = add i32 %378, %15
  %380 = add i32 %379, %21
  %381 = add i32 %380, %30
  %382 = add i32 %381, %33
  %383 = add i32 %382, %35
  %384 = add i32 %383, %38
  %385 = sub i32 %384, %39
  %386 = sub i32 %385, %46
  %387 = add i32 %386, %47
  %388 = add i32 %387, %49
  %389 = add i32 %388, %62
  %390 = add i32 %389, %65
  %391 = sub i32 %390, %66
  %392 = add i32 %391, %68
  %393 = add i32 %392, %71
  %394 = sub i32 %393, %72
  %395 = sub i32 %394, %74
  %396 = sub i32 %395, %78
  %397 = sub i32 %396, %24
  %398 = sub i32 %397, %81
  %399 = sub i32 %398, %82
  %400 = sub i32 %399, %83
  %401 = add i32 %400, %91
  %402 = add i32 %401, %98
  %403 = sub i32 %402, %100
  %404 = add i32 %403, %103
  %405 = add i32 %404, %108
  %406 = add i32 %405, %110
  %407 = add i32 %406, %111
  %408 = add i32 %407, %112
  %409 = sub i32 %408, %115
  %410 = sub i32 %409, %116
  %411 = add i32 %410, %118
  %412 = sub i32 %411, %119
  %413 = add i32 %412, %121
  %414 = add i32 %413, %124
  %415 = add i32 %414, %126
  %416 = add i32 %415, %42
  %417 = sub i32 %416, %132
  %418 = add i32 %417, %133
  %419 = add i32 %418, %136
  %420 = sub i32 %419, %141
  %421 = sub i32 %420, %142
  %422 = sub i32 %421, %143
  %423 = add i32 %422, %146
  %424 = sub i32 %423, %147
  %425 = sub i32 %424, %148
  %426 = add i32 %425, %149
  %427 = add i32 %426, %150
  %428 = sub i32 %427, %152
  %429 = sub i32 %428, %153
  %430 = sub i32 %429, %159
  %431 = add i32 %430, %161
  %432 = sub i32 %431, %162
  %433 = sub i32 %432, %163
  %434 = sub i32 %433, %165
  %435 = sub i32 %434, %166
  %436 = add i32 %435, %167
  %437 = add i32 %436, %168
  %438 = sub i32 %437, %182
  %439 = sub i32 %438, %183
  %440 = sub i32 %439, %184
  %441 = sub i32 %440, %185
  %442 = add i32 %441, %186
  %443 = sub i32 %442, %187
  %444 = sub i32 %443, %188
  %445 = add i32 %444, %189
  %446 = add i32 %445, %190
  %447 = sub i32 %446, %192
  %448 = add i32 %447, %193
  %449 = sub i32 %448, %63
  %450 = add i32 %449, %198
  %451 = sub i32 %450, %199
  %452 = add i32 %451, %200
  %453 = add i32 %452, %201
  %454 = sub i32 %453, %202
  %455 = add i32 %454, %203
  %456 = add i32 %455, %204
  %457 = sub i32 %456, %205
  %458 = add i32 %457, %206
  %459 = sub i32 %458, %207
  %460 = sub i32 %459, %210
  %461 = add i32 %460, %211
  %462 = add i32 %461, %212
  %463 = add i32 %462, %213
  %464 = sub i32 %463, %214
  %465 = add i32 %464, %219
  %466 = add i32 %465, %220
  %467 = add i32 %466, %221
  %468 = sub i32 %467, %223
  %469 = sub i32 %468, %226
  %470 = add i32 %469, %227
  %471 = sub i32 %470, %229
  %472 = add i32 %471, %56
  %473 = sub i32 %472, %230
  %474 = sub i32 %473, %231
  %475 = add i32 %474, %232
  %476 = add i32 %475, %233
  %477 = sub i32 %476, %235
  %478 = sub i32 %477, %240
  %479 = add i32 %478, %241
  %480 = add i32 %479, %242
  %481 = add i32 %480, %245
  %482 = add i32 %481, %247
  %483 = add i32 %482, %248
  %484 = add i32 %483, %249
  %485 = add i32 %484, %254
  %486 = sub i32 %485, %255
  %487 = sub i32 %486, %266
  %488 = sub i32 %487, %267
  %489 = sub i32 %488, %273
  %490 = add i32 %489, %275
  %491 = add i32 %490, %276
  %492 = sub i32 %491, %88
  %493 = sub i32 %492, %281
  %494 = sub i32 %493, %94
  %495 = add i32 %494, %283
  %496 = add i32 %495, %208
  %497 = add i32 %496, %285
  %498 = sub i32 %497, %286
  %499 = sub i32 %498, %289
  %500 = add i32 %499, %291
  %501 = sub i32 %500, %292
  %502 = add i32 %501, %295
  %503 = sub i32 %502, %26
  %504 = add i32 %503, %44
  %505 = sub i32 %504, %52
  %506 = sub i32 %505, %57
  %507 = sub i32 %506, %61
  %508 = add i32 %507, %64
  %509 = sub i32 %508, %77
  %510 = sub i32 %509, %86
  %511 = add i32 %510, %90
  %512 = add i32 %511, %95
  %513 = sub i32 %512, %102
  %514 = sub i32 %513, %114
  %515 = sub i32 %514, %128
  %516 = sub i32 %515, %131
  %517 = add i32 %516, %135
  %518 = sub i32 %517, %140
  %519 = add i32 %518, %144
  %520 = sub i32 %519, %179
  %521 = sub i32 %520, %181
  %522 = add i32 %521, %197
  %523 = add i32 %522, %209
  %524 = sub i32 %523, %218
  %525 = sub i32 %524, %237
  %526 = sub i32 %525, %251
  %527 = sub i32 %526, %253
  %528 = sub i32 %527, %257
  %529 = sub i32 %528, %262
  %530 = sub i32 %529, %264
  %531 = sub i32 %530, %265
  %532 = sub i32 %531, %272
  %533 = sub i32 %532, %278
  %534 = add i32 %533, %290
  %535 = sub i32 %534, %293
  %536 = sub i32 %535, %294
  %537 = add i32 %536, %297
  %538 = add i32 %537, %299
  %539 = add i32 %538, %301
  %540 = add i32 %539, %303
  %541 = add i32 %540, %305
  %542 = add i32 %541, %306
  %543 = sub i32 %542, %259
  %544 = sub i32 %543, %176
  %545 = add i32 %544, %331
  %546 = add i32 %545, %329
  %547 = add i32 %546, %337
  %548 = add i32 %547, %324
  %549 = icmp eq i32 %12, %548
  %550 = select i1 %549, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %551 = tail call i32 @puts(i8* nonnull dereferenceable(1) %550)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
