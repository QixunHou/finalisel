digraph "DFG for'main' function" {
	Node0x2479ff8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x247a078[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x247a108[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x247a168[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x247a5e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x247a6c8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x247a7c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x247a888[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x247a938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x247ab98[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x247ac58[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x247bbc8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x247bc28[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x247bd20[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x247c878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x247c9b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x247cac8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x247cb88[shape=record, label="  ret i32 0"];
	Node0x2479ff8 -> Node0x247a078;
	Node0x247a078 -> Node0x247a108;
	Node0x247a108 -> Node0x247a168;
	Node0x247a168 -> Node0x247a5e8;
	Node0x247a5e8 -> Node0x247a6c8;
	Node0x247a6c8 -> Node0x247a7c8;
	Node0x247a7c8 -> Node0x247a888;
	Node0x247a888 -> Node0x247a938;
	Node0x247a938 -> Node0x247ab98;
	Node0x247ab98 -> Node0x247ac58;
	Node0x247ac58 -> Node0x247bbc8;
	Node0x247bbc8 -> Node0x247bc28;
	Node0x247bc28 -> Node0x247bd20;
	Node0x247bd20 -> Node0x247c878;
	Node0x247c878 -> Node0x247c9b8;
	Node0x247c9b8 -> Node0x247cac8;
	Node0x247cac8 -> Node0x247cb88;
edge [color=red]
	Node0x2479ff8 -> Node0x247a168;
	Node0x247a168 -> Node0x247a5e8;
	Node0x247a078 -> Node0x247a6c8;
	Node0x247a6c8 -> Node0x247a7c8;
	Node0x247a108 -> Node0x247a888;
	Node0x247a888 -> Node0x247a938;
	Node0x2479ff8 -> Node0x247ab98;
	Node0x247a078 -> Node0x247ab98;
	Node0x247a108 -> Node0x247ab98;
	Node0x2479ff8 -> Node0x247ac58;
	Node0x247a078 -> Node0x247bbc8;
	Node0x247a108 -> Node0x247bc28;
	Node0x247ac58 -> Node0x247bd20;
	Node0x247bbc8 -> Node0x247bd20;
	Node0x247bc28 -> Node0x247bd20;
	Node0x247a888 -> Node0x247c878;
	Node0x247a6c8 -> Node0x247c9b8;
	Node0x247a168 -> Node0x247cac8;
}
