digraph "DFG for'main' function" {
	Node0x230cc08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x230cc88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x230cd18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x230cd78[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x230d1f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x230d2d8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x230d3d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x230d498[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x230d548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x230d7a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x230d868[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x230d9c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x230da28[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2311b10[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x2311d18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2311e78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2311f88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2312048[shape=record, label="  ret i32 0"];
	Node0x230cc08 -> Node0x230cc88;
	Node0x230cc88 -> Node0x230cd18;
	Node0x230cd18 -> Node0x230cd78;
	Node0x230cd78 -> Node0x230d1f8;
	Node0x230d1f8 -> Node0x230d2d8;
	Node0x230d2d8 -> Node0x230d3d8;
	Node0x230d3d8 -> Node0x230d498;
	Node0x230d498 -> Node0x230d548;
	Node0x230d548 -> Node0x230d7a8;
	Node0x230d7a8 -> Node0x230d868;
	Node0x230d868 -> Node0x230d9c8;
	Node0x230d9c8 -> Node0x230da28;
	Node0x230da28 -> Node0x2311b10;
	Node0x2311b10 -> Node0x2311d18;
	Node0x2311d18 -> Node0x2311e78;
	Node0x2311e78 -> Node0x2311f88;
	Node0x2311f88 -> Node0x2312048;
edge [color=red]
	Node0x230cc08 -> Node0x230cd78;
	Node0x230cd78 -> Node0x230d1f8;
	Node0x230cc88 -> Node0x230d2d8;
	Node0x230d2d8 -> Node0x230d3d8;
	Node0x230cd18 -> Node0x230d498;
	Node0x230d498 -> Node0x230d548;
	Node0x230cc08 -> Node0x230d7a8;
	Node0x230cc88 -> Node0x230d7a8;
	Node0x230cd18 -> Node0x230d7a8;
	Node0x230cc08 -> Node0x230d868;
	Node0x230cc88 -> Node0x230d9c8;
	Node0x230cd18 -> Node0x230da28;
	Node0x230d868 -> Node0x2311b10;
	Node0x230d9c8 -> Node0x2311b10;
	Node0x230da28 -> Node0x2311b10;
	Node0x230d498 -> Node0x2311d18;
	Node0x230d2d8 -> Node0x2311e78;
	Node0x230cd78 -> Node0x2311f88;
}
