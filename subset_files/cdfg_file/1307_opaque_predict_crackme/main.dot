digraph "DFG for'main' function" {
	Node0x7e4558[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x7e45d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x7e4668[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x7e46c8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x7e4b48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7e4c28[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x7e4d28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7e4de8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x7e4e98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7e50f8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x7e51b8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x7e5318[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x7e5378[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x7eba60[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x7ebc68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7ebdc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7ebed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7ebf98[shape=record, label="  ret i32 0"];
	Node0x7e4558 -> Node0x7e45d8;
	Node0x7e45d8 -> Node0x7e4668;
	Node0x7e4668 -> Node0x7e46c8;
	Node0x7e46c8 -> Node0x7e4b48;
	Node0x7e4b48 -> Node0x7e4c28;
	Node0x7e4c28 -> Node0x7e4d28;
	Node0x7e4d28 -> Node0x7e4de8;
	Node0x7e4de8 -> Node0x7e4e98;
	Node0x7e4e98 -> Node0x7e50f8;
	Node0x7e50f8 -> Node0x7e51b8;
	Node0x7e51b8 -> Node0x7e5318;
	Node0x7e5318 -> Node0x7e5378;
	Node0x7e5378 -> Node0x7eba60;
	Node0x7eba60 -> Node0x7ebc68;
	Node0x7ebc68 -> Node0x7ebdc8;
	Node0x7ebdc8 -> Node0x7ebed8;
	Node0x7ebed8 -> Node0x7ebf98;
edge [color=red]
	Node0x7e4558 -> Node0x7e46c8;
	Node0x7e46c8 -> Node0x7e4b48;
	Node0x7e45d8 -> Node0x7e4c28;
	Node0x7e4c28 -> Node0x7e4d28;
	Node0x7e4668 -> Node0x7e4de8;
	Node0x7e4de8 -> Node0x7e4e98;
	Node0x7e4558 -> Node0x7e50f8;
	Node0x7e45d8 -> Node0x7e50f8;
	Node0x7e4668 -> Node0x7e50f8;
	Node0x7e4558 -> Node0x7e51b8;
	Node0x7e45d8 -> Node0x7e5318;
	Node0x7e4668 -> Node0x7e5378;
	Node0x7e51b8 -> Node0x7eba60;
	Node0x7e5318 -> Node0x7eba60;
	Node0x7e5378 -> Node0x7eba60;
	Node0x7e4de8 -> Node0x7ebc68;
	Node0x7e4c28 -> Node0x7ebdc8;
	Node0x7e46c8 -> Node0x7ebed8;
}
