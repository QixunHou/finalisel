digraph "DFG for'main' function" {
	Node0x586e38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x586eb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x586f48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x5873a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x587488[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x5875a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5877e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x587898[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x588808[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x588e90[shape=record, label="  %8 = mul i32 %6, 3"];
	Node0x588f00[shape=record, label="  %9 = and i32 %7, %6"];
	Node0x588f70[shape=record, label="  %10 = add i32 %8, 1"];
	Node0x588fe0[shape=record, label="  %11 = add i32 %10, %9"];
	Node0x589050[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x5890c0[shape=record, label="  %13 = and i32 %6, %12"];
	Node0x589130[shape=record, label="  %14 = add i32 %13, 1"];
	Node0x5891a0[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x589210[shape=record, label="  %16 = shl i32 %7, 1"];
	Node0x589280[shape=record, label="  %17 = shl i32 %12, 2"];
	Node0x5892f0[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x589360[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x5893d0[shape=record, label="  %20 = xor i32 %6, 2147483647"];
	Node0x589440[shape=record, label="  %21 = and i32 %20, %7"];
	Node0x5894b0[shape=record, label="  %22 = mul i32 %9, 7"];
	Node0x589520[shape=record, label="  %23 = add i32 %13, %19"];
	Node0x589590[shape=record, label="  %24 = mul i32 %23, -3"];
	Node0x589600[shape=record, label="  %25 = add i32 %14, %21"];
	Node0x589670[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x5896e0[shape=record, label="  %27 = sub i32 %15, %16"];
	Node0x589750[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x5897c0[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x589830[shape=record, label="  %30 = add i32 %29, %24"];
	Node0x5898a0[shape=record, label="  %31 = add i32 %30, %26"];
	Node0x589910[shape=record, label="  %32 = icmp eq i32 %11, %31"];
	Node0x5279d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x589bb0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x589e08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x589f68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x58a028[shape=record, label="  ret i32 0"];
	Node0x586e38 -> Node0x586eb8;
	Node0x586eb8 -> Node0x586f48;
	Node0x586f48 -> Node0x5873a8;
	Node0x5873a8 -> Node0x587488;
	Node0x587488 -> Node0x5875a8;
	Node0x5875a8 -> Node0x5877e0;
	Node0x5877e0 -> Node0x587898;
	Node0x587898 -> Node0x588808;
	Node0x588808 -> Node0x588e90;
	Node0x588e90 -> Node0x588f00;
	Node0x588f00 -> Node0x588f70;
	Node0x588f70 -> Node0x588fe0;
	Node0x588fe0 -> Node0x589050;
	Node0x589050 -> Node0x5890c0;
	Node0x5890c0 -> Node0x589130;
	Node0x589130 -> Node0x5891a0;
	Node0x5891a0 -> Node0x589210;
	Node0x589210 -> Node0x589280;
	Node0x589280 -> Node0x5892f0;
	Node0x5892f0 -> Node0x589360;
	Node0x589360 -> Node0x5893d0;
	Node0x5893d0 -> Node0x589440;
	Node0x589440 -> Node0x5894b0;
	Node0x5894b0 -> Node0x589520;
	Node0x589520 -> Node0x589590;
	Node0x589590 -> Node0x589600;
	Node0x589600 -> Node0x589670;
	Node0x589670 -> Node0x5896e0;
	Node0x5896e0 -> Node0x589750;
	Node0x589750 -> Node0x5897c0;
	Node0x5897c0 -> Node0x589830;
	Node0x589830 -> Node0x5898a0;
	Node0x5898a0 -> Node0x589910;
	Node0x589910 -> Node0x5279d8;
	Node0x5279d8 -> Node0x589bb0;
	Node0x589bb0 -> Node0x589e08;
	Node0x589e08 -> Node0x589f68;
	Node0x589f68 -> Node0x58a028;
edge [color=red]
	Node0x586e38 -> Node0x586f48;
	Node0x586f48 -> Node0x5873a8;
	Node0x586eb8 -> Node0x587488;
	Node0x587488 -> Node0x5875a8;
	Node0x586e38 -> Node0x5877e0;
	Node0x586eb8 -> Node0x5877e0;
	Node0x586e38 -> Node0x587898;
	Node0x586eb8 -> Node0x588808;
	Node0x587898 -> Node0x588e90;
	Node0x588808 -> Node0x588f00;
	Node0x587898 -> Node0x588f00;
	Node0x588e90 -> Node0x588f70;
	Node0x588f70 -> Node0x588fe0;
	Node0x588f00 -> Node0x588fe0;
	Node0x588808 -> Node0x589050;
	Node0x587898 -> Node0x5890c0;
	Node0x589050 -> Node0x5890c0;
	Node0x5890c0 -> Node0x589130;
	Node0x588808 -> Node0x5891a0;
	Node0x587898 -> Node0x5891a0;
	Node0x588808 -> Node0x589210;
	Node0x589050 -> Node0x589280;
	Node0x588808 -> Node0x5892f0;
	Node0x587898 -> Node0x5892f0;
	Node0x5892f0 -> Node0x589360;
	Node0x587898 -> Node0x5893d0;
	Node0x5893d0 -> Node0x589440;
	Node0x588808 -> Node0x589440;
	Node0x588f00 -> Node0x5894b0;
	Node0x5890c0 -> Node0x589520;
	Node0x589360 -> Node0x589520;
	Node0x589520 -> Node0x589590;
	Node0x589130 -> Node0x589600;
	Node0x589440 -> Node0x589600;
	Node0x589600 -> Node0x589670;
	Node0x5891a0 -> Node0x5896e0;
	Node0x589210 -> Node0x5896e0;
	Node0x5896e0 -> Node0x589750;
	Node0x589280 -> Node0x589750;
	Node0x589750 -> Node0x5897c0;
	Node0x5894b0 -> Node0x5897c0;
	Node0x5897c0 -> Node0x589830;
	Node0x589590 -> Node0x589830;
	Node0x589830 -> Node0x5898a0;
	Node0x589670 -> Node0x5898a0;
	Node0x588fe0 -> Node0x589910;
	Node0x5898a0 -> Node0x589910;
	Node0x589910 -> Node0x5279d8;
	Node0x5279d8 -> Node0x589bb0;
	Node0x587488 -> Node0x589e08;
	Node0x586f48 -> Node0x589f68;
}
