; ModuleID = '../.././c_source_file/0849_path_condition_crackme.c'
source_filename = "../.././c_source_file/0849_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = xor i32 %2, %0
  %9 = and i32 %8, %7
  %10 = xor i32 %2, -1
  %11 = or i32 %10, %0
  %12 = sub i32 %9, %11
  %13 = and i32 %5, %3
  %14 = and i32 %13, %4
  %15 = xor i32 %5, %3
  %16 = xor i32 %15, %4
  %17 = xor i32 %14, %16
  %18 = shl i32 %17, 1
  %19 = add i32 %12, %18
  %20 = and i32 %1, %0
  %21 = or i32 %2, %0
  %22 = xor i32 %21, -1
  %23 = or i32 %20, %22
  %24 = or i32 %10, %1
  %25 = xor i32 %24, %20
  %26 = xor i32 %1, %0
  %27 = xor i32 %26, -1
  %28 = or i32 %10, %27
  %29 = or i32 %2, %1
  %30 = xor i32 %29, %0
  %31 = xor i32 %0, -1
  %32 = xor i32 %2, %1
  %33 = and i32 %32, %31
  %34 = or i32 %29, %31
  %35 = xor i32 %20, -1
  %36 = and i32 %24, %31
  %37 = xor i32 %24, -1
  %38 = or i32 %20, %37
  %39 = xor i32 %8, -1
  %40 = and i32 %26, %39
  %41 = and i32 %7, %2
  %42 = and i32 %41, %0
  %43 = or i32 %32, %0
  %44 = xor i32 %43, -1
  %45 = or i32 %42, %44
  %46 = and i32 %41, %31
  %47 = or i32 %32, %31
  %48 = xor i32 %46, %47
  %49 = and i32 %26, %2
  %50 = and i32 %29, %0
  %51 = and i32 %10, %0
  %52 = and i32 %2, %1
  %53 = xor i32 %52, -1
  %54 = xor i32 %51, %53
  %55 = or i32 %7, %0
  %56 = and i32 %55, %39
  %57 = or i32 %52, %31
  %58 = xor i32 %55, -1
  %59 = or i32 %32, %58
  %60 = shl i32 %59, 1
  %61 = or i32 %39, %1
  %62 = shl i32 %58, 1
  %63 = or i32 %1, %0
  %64 = and i32 %63, %10
  %65 = or i32 %26, %10
  %66 = add i32 %8, 1
  %67 = or i32 %29, %0
  %68 = and i32 %52, %31
  %69 = and i32 %32, %0
  %70 = xor i32 %69, 1073741823
  %71 = xor i32 %70, %68
  %72 = shl i32 %71, 2
  %73 = xor i32 %11, -1
  %74 = or i32 %73, %1
  %75 = or i32 %8, %26
  %76 = xor i32 %21, %1
  %77 = or i32 %7, %2
  %78 = xor i32 %77, %0
  %79 = or i32 %42, %78
  %80 = and i32 %7, %0
  %81 = shl i32 %80, 1
  %82 = and i32 %32, %35
  %83 = xor i32 %80, -1
  %84 = and i32 %8, %83
  %85 = or i32 %22, %1
  %86 = shl i32 %85, 1
  %87 = or i32 %80, %39
  %88 = and i32 %77, %0
  %89 = or i32 %46, %88
  %90 = xor i32 %63, -1
  %91 = xor i32 %32, -1
  %92 = or i32 %91, %90
  %93 = shl i32 %92, 1
  %94 = and i32 %2, %0
  %95 = or i32 %94, %1
  %96 = and i32 %55, %2
  %97 = shl i32 %96, 1
  %98 = or i32 %91, %31
  %99 = and i32 %10, %1
  %100 = xor i32 %99, -1
  %101 = xor i32 %80, %100
  %102 = shl i32 %101, 2
  %103 = and i32 %8, %35
  %104 = or i32 %99, %0
  %105 = or i32 %94, %26
  %106 = xor i32 %90, %2
  %107 = xor i32 %78, 2147483647
  %108 = xor i32 %107, %42
  %109 = xor i32 %94, %55
  %110 = and i32 %53, %31
  %111 = or i32 %80, %2
  %112 = xor i32 %94, -1
  %113 = and i32 %112, %1
  %114 = or i32 %53, %0
  %115 = and i32 %52, %0
  %116 = and i32 %29, %31
  %117 = or i32 %115, %116
  %118 = shl i32 %117, 1
  %119 = and i32 %77, %31
  %120 = or i32 %42, %119
  %121 = xor i32 %51, %1
  %122 = or i32 %39, %58
  %123 = and i32 %35, %2
  %124 = xor i32 %37, %0
  %125 = or i32 %8, %1
  %126 = or i32 %80, %10
  %127 = and i32 %8, %26
  %128 = xor i32 %53, %0
  %129 = xor i32 %29, -1
  %130 = or i32 %129, %0
  %131 = or i32 %68, %50
  %132 = or i32 %26, %73
  %133 = and i32 %11, %7
  %134 = xor i32 %29, %20
  %135 = and i32 %27, %2
  %136 = xor i32 %116, -1
  %137 = xor i32 %115, %136
  %138 = and i32 %21, %27
  %139 = or i32 %32, %80
  %140 = xor i32 %73, %1
  %141 = or i32 %20, %10
  %142 = xor i32 %63, %2
  %143 = shl i32 %142, 1
  %144 = and i32 %39, %83
  %145 = or i32 %68, %69
  %146 = and i32 %10, %35
  %147 = xor i32 %119, -1
  %148 = xor i32 %42, %147
  %149 = or i32 %52, %0
  %150 = shl i32 %149, 1
  %151 = and i32 %83, %2
  %152 = and i32 %10, %27
  %153 = or i32 %94, %7
  %154 = xor i32 %51, -1
  %155 = xor i32 %154, %1
  %156 = shl i32 %155, 1
  %157 = and i32 %8, %1
  %158 = shl i32 %157, 1
  %159 = and i32 %91, %0
  %160 = or i32 %8, %90
  %161 = shl i32 %160, 1
  %162 = and i32 %26, %112
  %163 = xor i32 %88, -1
  %164 = xor i32 %46, %163
  %165 = and i32 %8, %63
  %166 = and i32 %100, %0
  %167 = or i32 %90, %2
  %168 = xor i32 %100, %0
  %169 = or i32 %32, %20
  %170 = or i32 %58, %2
  %171 = or i32 %94, %27
  %172 = or i32 %37, %0
  %173 = or i32 %100, %0
  %174 = and i32 %10, %83
  %175 = xor i32 %50, -1
  %176 = xor i32 %68, %175
  %177 = and i32 %154, %7
  %178 = or i32 %53, %31
  %179 = or i32 %51, %27
  %180 = xor i32 %94, %100
  %181 = or i32 %73, %27
  %182 = and i32 %24, %0
  %183 = add i32 %99, 1
  %184 = and i32 %32, %55
  %185 = and i32 %26, %154
  %186 = shl i32 %185, 1
  %187 = or i32 %8, %20
  %188 = or i32 %39, %27
  %189 = and i32 %91, %35
  %190 = or i32 %8, %58
  %191 = or i32 %24, %31
  %192 = add i32 %24, 1
  %193 = or i32 %99, %80
  %194 = xor i32 %35, %2
  %195 = or i32 %20, %39
  %196 = xor i32 %22, %1
  %197 = and i32 %100, %31
  %198 = shl i32 %197, 1
  %199 = and i32 %8, %27
  %200 = or i32 %51, %7
  %201 = xor i32 %129, %0
  %202 = xor i32 %91, %0
  %203 = or i32 %8, %80
  %204 = shl i32 %203, 1
  %205 = and i32 %112, %7
  %206 = xor i32 %11, %20
  %207 = and i32 %129, %31
  %208 = and i32 %99, %31
  %209 = and i32 %129, %0
  %210 = and i32 %99, %0
  %211 = mul i32 %210, 6
  %212 = and i32 %37, %31
  %213 = and i32 %37, %0
  %214 = shl i32 %213, 1
  %215 = xor i32 %13, -1
  %216 = or i32 %215, %4
  %217 = or i32 %5, %3
  %218 = xor i32 %217, -1
  %219 = or i32 %218, %4
  %220 = shl i32 %219, 1
  %221 = or i32 %5, %4
  %222 = xor i32 %221, -1
  %223 = xor i32 %4, %3
  %224 = xor i32 %223, -1
  %225 = or i32 %222, %224
  %226 = shl i32 %225, 1
  %227 = and i32 %4, %3
  %228 = xor i32 %5, -1
  %229 = or i32 %228, %3
  %230 = xor i32 %229, -1
  %231 = or i32 %227, %230
  %232 = and i32 %5, %4
  %233 = or i32 %232, %223
  %234 = shl i32 %233, 1
  %235 = xor i32 %3, -1
  %236 = or i32 %235, %4
  %237 = xor i32 %236, -1
  %238 = or i32 %232, %237
  %239 = or i32 %232, %235
  %240 = and i32 %235, %5
  %241 = and i32 %240, %4
  %242 = or i32 %235, %5
  %243 = xor i32 %242, %4
  %244 = xor i32 %241, -1
  %245 = xor i32 %243, %244
  %246 = and i32 %235, %4
  %247 = xor i32 %246, -1
  %248 = xor i32 %5, %4
  %249 = xor i32 %248, -1
  %250 = and i32 %249, %247
  %251 = xor i32 %221, %3
  %252 = xor i32 %15, -1
  %253 = or i32 %246, %252
  %254 = shl i32 %253, 1
  %255 = xor i32 %4, -1
  %256 = and i32 %15, %255
  %257 = or i32 %14, %256
  %258 = or i32 %15, %4
  %259 = xor i32 %241, %258
  %260 = xor i32 %232, -1
  %261 = and i32 %260, %235
  %262 = or i32 %4, %3
  %263 = xor i32 %262, -1
  %264 = or i32 %263, %5
  %265 = xor i32 %16, -1
  %266 = or i32 %14, %265
  %267 = xor i32 %230, %4
  %268 = shl i32 %267, 1
  %269 = xor i32 %247, %5
  %270 = or i32 %222, %3
  %271 = and i32 %252, %4
  %272 = xor i32 %246, %5
  %273 = add i32 %217, 1
  %274 = and i32 %228, %4
  %275 = or i32 %274, %223
  %276 = xor i32 %227, -1
  %277 = and i32 %248, %276
  %278 = xor i32 %217, %4
  %279 = or i32 %249, %237
  %280 = and i32 %262, %252
  %281 = and i32 %224, %5
  %282 = xor i32 %222, %3
  %283 = and i32 %228, %247
  %284 = shl i32 %283, 1
  %285 = or i32 %228, %4
  %286 = xor i32 %285, -1
  %287 = or i32 %286, %235
  %288 = or i32 %13, %255
  %289 = and i32 %229, %4
  %290 = and i32 %229, %255
  %291 = or i32 %248, %223
  %292 = shl i32 %291, 1
  %293 = or i32 %14, %278
  %294 = and i32 %249, %235
  %295 = and i32 %217, %255
  %296 = xor i32 %14, -1
  %297 = xor i32 %295, %296
  %298 = shl i32 %222, 1
  %299 = and i32 %262, %228
  %300 = xor i32 %241, %265
  %301 = or i32 %249, %235
  %302 = or i32 %223, %222
  %303 = and i32 %228, %3
  %304 = xor i32 %262, %5
  %305 = or i32 %217, %255
  %306 = xor i32 %236, %5
  %307 = shl i32 %306, 1
  %308 = and i32 %13, %255
  %309 = and i32 %15, %4
  %310 = or i32 %308, %309
  %311 = or i32 %237, %5
  %312 = and i32 %221, %223
  %313 = or i32 %286, %3
  %314 = xor i32 %303, -1
  %315 = xor i32 %314, %4
  %316 = and i32 %15, %262
  %317 = shl i32 %316, 1
  %318 = or i32 %222, %235
  %319 = and i32 %223, %228
  %320 = xor i32 %274, %215
  %321 = xor i32 %274, -1
  %322 = and i32 %321, %3
  %323 = xor i32 %274, %229
  %324 = shl i32 %323, 1
  %325 = and i32 %242, %255
  %326 = or i32 %241, %325
  %327 = and i32 %15, %276
  %328 = or i32 %252, %263
  %329 = and i32 %285, %224
  %330 = or i32 %252, %237
  %331 = and i32 %221, %3
  %332 = or i32 %303, %4
  %333 = xor i32 %229, %227
  %334 = or i32 %248, %235
  %335 = or i32 %232, %224
  %336 = add i32 %5, 1
  %337 = or i32 %232, %303
  %338 = and i32 %248, %223
  %339 = shl i32 %338, 1
  %340 = or i32 %252, %4
  %341 = xor i32 %232, %3
  %342 = or i32 %223, %249
  %343 = or i32 %248, %246
  %344 = shl i32 %343, 1
  %345 = and i32 %217, %4
  %346 = or i32 %308, %345
  %347 = and i32 %215, %4
  %348 = and i32 %321, %224
  %349 = or i32 %224, %5
  %350 = or i32 %252, %255
  %351 = and i32 %228, %276
  %352 = or i32 %228, %263
  %353 = or i32 %303, %246
  %354 = and i32 %248, %224
  %355 = shl i32 %354, 1
  %356 = or i32 %303, %255
  %357 = or i32 %227, %5
  %358 = xor i32 %256, %296
  %359 = add i32 %227, 1
  %360 = or i32 %228, %237
  %361 = or i32 %230, %255
  %362 = shl i32 %361, 1
  %363 = xor i32 %309, 1073741823
  %364 = xor i32 %363, %308
  %365 = shl i32 %364, 2
  %366 = and i32 %223, %321
  %367 = and i32 %262, %5
  %368 = shl i32 %367, 1
  %369 = or i32 %223, %228
  %370 = or i32 %286, %224
  %371 = and i32 %248, %235
  %372 = and i32 %260, %3
  %373 = or i32 %241, %243
  %374 = and i32 %260, %224
  %375 = or i32 %314, %4
  %376 = or i32 %230, %4
  %377 = and i32 %248, %3
  %378 = shl i32 %377, 1
  %379 = and i32 %252, %255
  %380 = shl i32 %256, 1
  %381 = and i32 %276, %5
  %382 = xor i32 %285, %227
  %383 = or i32 %218, %255
  %384 = xor i32 %286, %3
  %385 = and i32 %252, %247
  %386 = xor i32 %232, %236
  %387 = xor i32 %278, %296
  %388 = add i32 %15, 1
  %389 = or i32 %15, %237
  %390 = xor i32 %232, %217
  %391 = add i32 %274, 1
  %392 = or i32 %15, %246
  %393 = xor i32 %246, %314
  %394 = and i32 %236, %5
  %395 = shl i32 %394, 1
  %396 = xor i32 %218, %4
  %397 = shl i32 %249, 1
  %398 = or i32 %274, %224
  %399 = and i32 %248, %262
  %400 = shl i32 %232, 1
  %401 = and i32 %240, %255
  %402 = and i32 %242, %4
  %403 = xor i32 %402, 2147483647
  %404 = xor i32 %403, %401
  %405 = shl i32 %404, 1
  %406 = and i32 %285, %3
  %407 = shl i32 %406, 1
  %408 = and i32 %248, %247
  %409 = xor i32 %325, %244
  %410 = or i32 %232, %218
  %411 = xor i32 %227, %5
  %412 = xor i32 %217, %227
  %413 = xor i32 %263, %5
  %414 = shl i32 %413, 1
  %415 = and i32 %262, %249
  %416 = or i32 %223, %5
  %417 = xor i32 %276, %5
  %418 = or i32 %274, %3
  %419 = and i32 %236, %249
  %420 = xor i32 %252, %4
  %421 = or i32 %227, %249
  %422 = or i32 %15, %263
  %423 = xor i32 %232, %314
  %424 = shl i32 %423, 1
  %425 = or i32 %249, %263
  %426 = or i32 %14, %295
  %427 = or i32 %13, %4
  %428 = shl i32 %427, 1
  %429 = add i32 %303, 1
  %430 = or i32 %241, %16
  %431 = xor i32 %321, %3
  %432 = or i32 %15, %255
  %433 = and i32 %285, %223
  %434 = and i32 %223, %5
  %435 = and i32 %285, %235
  %436 = or i32 %227, %252
  %437 = shl i32 %345, 1
  %438 = or i32 %246, %5
  %439 = and i32 %218, %255
  %440 = and i32 %303, %255
  %441 = mul i32 %440, 36
  %442 = and i32 %218, %4
  %443 = shl i32 %442, 3
  %444 = and i32 %303, %4
  %445 = mul i32 %444, 31
  %446 = and i32 %230, %255
  %447 = mul i32 %446, 19
  %448 = and i32 %230, %4
  %449 = mul i32 %448, 18
  %450 = mul i32 %14, 28
  %451 = sub i32 %82, %165
  %452 = add i32 %451, %237
  %453 = sub i32 %452, %120
  %454 = sub i32 %453, %281
  %455 = sub i32 %454, %216
  %456 = add i32 %455, %430
  %457 = mul i32 %456, 3
  %458 = sub i32 %180, %3
  %459 = sub i32 %458, %122
  %460 = sub i32 %459, %84
  %461 = add i32 %460, %282
  %462 = sub i32 %461, %305
  %463 = add i32 %462, %231
  %464 = mul i32 %463, 5
  %465 = add i32 %95, %207
  %466 = add i32 %465, %48
  %467 = add i32 %466, %434
  %468 = shl i32 %467, 2
  %469 = sub i32 %212, %115
  %470 = add i32 %469, %308
  %471 = mul i32 %470, 12
  %472 = add i32 %439, %68
  %473 = mul i32 %472, 22
  %474 = sub i32 -2, %26
  %475 = add i32 %474, %22
  %476 = add i32 %475, %141
  %477 = add i32 %476, %106
  %478 = add i32 %477, %206
  %479 = add i32 %478, %191
  %480 = add i32 %479, %190
  %481 = add i32 %480, %182
  %482 = add i32 %481, %177
  %483 = add i32 %482, %144
  %484 = add i32 %483, %140
  %485 = add i32 %484, %124
  %486 = add i32 %485, %121
  %487 = add i32 %486, %67
  %488 = add i32 %487, %57
  %489 = add i32 %488, %50
  %490 = add i32 %489, %236
  %491 = add i32 %490, %108
  %492 = add i32 %491, %412
  %493 = add i32 %492, %433
  %494 = add i32 %493, %410
  %495 = add i32 %494, %408
  %496 = add i32 %495, %399
  %497 = add i32 %496, %385
  %498 = add i32 %497, %347
  %499 = add i32 %498, %342
  %500 = add i32 %499, %329
  %501 = add i32 %500, %328
  %502 = add i32 %501, %277
  %503 = shl i32 %502, 1
  %504 = add i32 %80, %2
  %505 = add i32 %504, 3
  %506 = add i32 %505, %90
  %507 = sub i32 %506, %28
  %508 = add i32 %507, %49
  %509 = sub i32 %508, %62
  %510 = add i32 %509, %64
  %511 = sub i32 %510, %65
  %512 = add i32 %511, %66
  %513 = sub i32 %512, %81
  %514 = sub i32 %513, %111
  %515 = add i32 %514, %123
  %516 = sub i32 %515, %126
  %517 = add i32 %516, %94
  %518 = add i32 %517, %135
  %519 = sub i32 %518, %146
  %520 = add i32 %519, %151
  %521 = sub i32 %520, %152
  %522 = sub i32 %521, %99
  %523 = add i32 %522, %167
  %524 = add i32 %523, %170
  %525 = add i32 %524, %174
  %526 = add i32 %525, %53
  %527 = sub i32 %526, %29
  %528 = sub i32 %527, %52
  %529 = add i32 %528, %183
  %530 = add i32 %529, %192
  %531 = sub i32 %530, %194
  %532 = sub i32 %531, %25
  %533 = sub i32 %532, %23
  %534 = add i32 %533, %30
  %535 = sub i32 %534, %33
  %536 = add i32 %535, %34
  %537 = add i32 %536, %36
  %538 = add i32 %537, %38
  %539 = add i32 %538, %40
  %540 = add i32 %539, %54
  %541 = sub i32 %540, %56
  %542 = sub i32 %541, %61
  %543 = sub i32 %542, %74
  %544 = sub i32 %543, %75
  %545 = sub i32 %544, %76
  %546 = add i32 %545, %87
  %547 = sub i32 %546, %97
  %548 = sub i32 %547, %98
  %549 = add i32 %548, %103
  %550 = add i32 %549, %104
  %551 = add i32 %550, %105
  %552 = sub i32 %551, %109
  %553 = sub i32 %552, %110
  %554 = sub i32 %553, %113
  %555 = sub i32 %554, %114
  %556 = sub i32 %555, %125
  %557 = add i32 %556, %127
  %558 = add i32 %557, %128
  %559 = add i32 %558, %130
  %560 = sub i32 %559, %132
  %561 = add i32 %560, %133
  %562 = sub i32 %561, %134
  %563 = add i32 %562, %138
  %564 = sub i32 %563, %139
  %565 = sub i32 %564, %143
  %566 = add i32 %565, %69
  %567 = add i32 %566, %153
  %568 = add i32 %567, %159
  %569 = sub i32 %568, %162
  %570 = add i32 %569, %166
  %571 = sub i32 %570, %168
  %572 = add i32 %571, %169
  %573 = add i32 %572, %171
  %574 = sub i32 %573, %172
  %575 = add i32 %574, %173
  %576 = sub i32 %575, %178
  %577 = add i32 %576, %179
  %578 = sub i32 %577, %181
  %579 = add i32 %578, %184
  %580 = add i32 %579, %187
  %581 = sub i32 %580, %188
  %582 = add i32 %581, %189
  %583 = sub i32 %582, %193
  %584 = sub i32 %583, %195
  %585 = sub i32 %584, %196
  %586 = add i32 %585, %199
  %587 = sub i32 %586, %200
  %588 = add i32 %587, %201
  %589 = add i32 %588, %202
  %590 = add i32 %589, %205
  %591 = add i32 %590, %208
  %592 = sub i32 %591, %209
  %593 = add i32 %592, 1
  %594 = add i32 %593, %45
  %595 = sub i32 %594, %60
  %596 = sub i32 %595, %79
  %597 = sub i32 %596, %86
  %598 = add i32 %597, %89
  %599 = sub i32 %598, %93
  %600 = sub i32 %599, %102
  %601 = sub i32 %600, %131
  %602 = sub i32 %601, %137
  %603 = sub i32 %602, %145
  %604 = add i32 %603, %148
  %605 = sub i32 %604, %150
  %606 = sub i32 %605, %156
  %607 = sub i32 %606, %158
  %608 = sub i32 %607, %161
  %609 = add i32 %608, %164
  %610 = sub i32 %609, %176
  %611 = sub i32 %610, %186
  %612 = sub i32 %611, %198
  %613 = sub i32 %612, %204
  %614 = add i32 %613, %211
  %615 = sub i32 %614, %214
  %616 = add i32 %615, %227
  %617 = add i32 %616, %246
  %618 = add i32 %617, %336
  %619 = add i32 %618, %359
  %620 = sub i32 %619, %223
  %621 = sub i32 %620, %5
  %622 = add i32 %621, %224
  %623 = sub i32 %622, %118
  %624 = sub i32 %623, %264
  %625 = sub i32 %624, %269
  %626 = add i32 %625, %272
  %627 = add i32 %626, %273
  %628 = sub i32 %627, %221
  %629 = sub i32 %628, %299
  %630 = sub i32 %629, %303
  %631 = sub i32 %630, %304
  %632 = sub i32 %631, %311
  %633 = add i32 %632, %319
  %634 = add i32 %633, %285
  %635 = add i32 %634, %248
  %636 = add i32 %635, %215
  %637 = add i32 %636, %349
  %638 = sub i32 %637, %351
  %639 = add i32 %638, %352
  %640 = sub i32 %639, %357
  %641 = sub i32 %640, %360
  %642 = sub i32 %641, %369
  %643 = sub i32 %642, %381
  %644 = add i32 %643, %388
  %645 = add i32 %644, %391
  %646 = sub i32 %645, %15
  %647 = add i32 %646, %411
  %648 = add i32 %647, %260
  %649 = sub i32 %648, %416
  %650 = sub i32 %649, %417
  %651 = add i32 %650, %429
  %652 = add i32 %651, %438
  %653 = sub i32 %652, %72
  %654 = add i32 %653, %238
  %655 = add i32 %654, %239
  %656 = add i32 %655, %250
  %657 = sub i32 %656, %251
  %658 = add i32 %657, %261
  %659 = sub i32 %658, %270
  %660 = sub i32 %659, %271
  %661 = sub i32 %660, %275
  %662 = add i32 %661, %278
  %663 = add i32 %662, %279
  %664 = add i32 %663, %280
  %665 = sub i32 %664, %284
  %666 = add i32 %665, %287
  %667 = sub i32 %666, %288
  %668 = sub i32 %667, %289
  %669 = add i32 %668, %290
  %670 = add i32 %669, %294
  %671 = sub i32 %670, %298
  %672 = sub i32 %671, %301
  %673 = add i32 %672, %302
  %674 = sub i32 %673, %307
  %675 = add i32 %674, %312
  %676 = add i32 %675, %313
  %677 = sub i32 %676, %315
  %678 = sub i32 %677, %318
  %679 = add i32 %678, %320
  %680 = sub i32 %679, %322
  %681 = sub i32 %680, %327
  %682 = add i32 %681, %330
  %683 = sub i32 %682, %331
  %684 = add i32 %683, %332
  %685 = sub i32 %684, %333
  %686 = add i32 %685, %334
  %687 = sub i32 %686, %335
  %688 = sub i32 %687, %295
  %689 = sub i32 %688, %337
  %690 = add i32 %689, %340
  %691 = sub i32 %690, %341
  %692 = sub i32 %691, %348
  %693 = add i32 %692, %350
  %694 = add i32 %693, %353
  %695 = sub i32 %694, %356
  %696 = add i32 %695, %366
  %697 = sub i32 %696, %368
  %698 = sub i32 %697, %370
  %699 = sub i32 %698, %371
  %700 = add i32 %699, %372
  %701 = add i32 %700, %374
  %702 = add i32 %701, %375
  %703 = add i32 %702, %376
  %704 = add i32 %703, %379
  %705 = add i32 %704, %382
  %706 = add i32 %705, %383
  %707 = add i32 %706, %384
  %708 = add i32 %707, %386
  %709 = add i32 %708, %389
  %710 = add i32 %709, %390
  %711 = sub i32 %710, %392
  %712 = add i32 %711, %16
  %713 = sub i32 %712, %393
  %714 = sub i32 %713, %395
  %715 = sub i32 %714, %396
  %716 = sub i32 %715, %397
  %717 = sub i32 %716, %398
  %718 = sub i32 %717, %400
  %719 = sub i32 %718, %414
  %720 = sub i32 %719, %415
  %721 = add i32 %720, %418
  %722 = sub i32 %721, %309
  %723 = add i32 %722, %419
  %724 = sub i32 %723, %420
  %725 = add i32 %724, %421
  %726 = sub i32 %725, %422
  %727 = add i32 %726, %425
  %728 = sub i32 %727, %431
  %729 = sub i32 %728, %432
  %730 = add i32 %729, %435
  %731 = sub i32 %730, %436
  %732 = sub i32 %731, %220
  %733 = sub i32 %732, %226
  %734 = sub i32 %733, %234
  %735 = sub i32 %734, %245
  %736 = sub i32 %735, %254
  %737 = add i32 %736, %257
  %738 = sub i32 %737, %259
  %739 = sub i32 %738, %266
  %740 = sub i32 %739, %268
  %741 = sub i32 %740, %292
  %742 = add i32 %741, %293
  %743 = sub i32 %742, %297
  %744 = add i32 %743, %300
  %745 = add i32 %744, %310
  %746 = sub i32 %745, %317
  %747 = sub i32 %746, %324
  %748 = add i32 %747, %326
  %749 = sub i32 %748, %339
  %750 = sub i32 %749, %344
  %751 = sub i32 %750, %346
  %752 = sub i32 %751, %355
  %753 = add i32 %752, %358
  %754 = sub i32 %753, %362
  %755 = sub i32 %754, %373
  %756 = sub i32 %755, %378
  %757 = sub i32 %756, %380
  %758 = sub i32 %757, %387
  %759 = sub i32 %758, %407
  %760 = sub i32 %759, %409
  %761 = sub i32 %760, %424
  %762 = add i32 %761, %426
  %763 = sub i32 %762, %428
  %764 = sub i32 %763, %437
  %765 = add i32 %764, %441
  %766 = add i32 %765, %443
  %767 = add i32 %766, %445
  %768 = add i32 %767, %447
  %769 = add i32 %768, %449
  %770 = add i32 %769, %450
  %771 = add i32 %770, %473
  %772 = sub i32 %771, %365
  %773 = sub i32 %772, %405
  %774 = add i32 %773, %468
  %775 = add i32 %774, %471
  %776 = add i32 %775, %464
  %777 = add i32 %776, %457
  %778 = add i32 %777, %503
  %779 = icmp eq i32 %19, %778
  %780 = select i1 %779, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %781 = tail call i32 @puts(i8* nonnull dereferenceable(1) %780)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
