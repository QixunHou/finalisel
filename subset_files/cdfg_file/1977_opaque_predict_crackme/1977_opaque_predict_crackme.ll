; ModuleID = '../.././c_source_file/1977_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1977_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %1
  %8 = or i32 %7, %0
  %9 = and i32 %5, %3
  %10 = and i32 %9, %4
  %11 = xor i32 %4, -1
  %12 = xor i32 %5, %3
  %13 = and i32 %12, %11
  %14 = or i32 %10, %13
  %15 = or i32 %4, %3
  %16 = xor i32 %15, -1
  %17 = add i32 %15, 1
  %18 = sub i32 %17, %8
  %19 = sub i32 %18, %14
  %20 = xor i32 %0, -1
  %21 = xor i32 %2, -1
  %22 = or i32 %21, %1
  %23 = or i32 %22, %20
  %24 = or i32 %2, %1
  %25 = sub i32 %23, %24
  %26 = xor i32 %1, -1
  %27 = and i32 %26, %2
  %28 = and i32 %27, %0
  %29 = xor i32 %2, %1
  %30 = or i32 %29, %0
  %31 = xor i32 %28, %30
  %32 = and i32 %2, %0
  %33 = or i32 %26, %0
  %34 = xor i32 %33, -1
  %35 = or i32 %32, %34
  %36 = or i32 %1, %0
  %37 = xor i32 %36, -1
  %38 = xor i32 %2, %0
  %39 = or i32 %38, %37
  %40 = and i32 %1, %0
  %41 = or i32 %21, %0
  %42 = xor i32 %41, -1
  %43 = or i32 %40, %42
  %44 = and i32 %27, %20
  %45 = or i32 %29, %20
  %46 = xor i32 %44, %45
  %47 = or i32 %24, %0
  %48 = xor i32 %1, %0
  %49 = xor i32 %48, -1
  %50 = or i32 %42, %49
  %51 = and i32 %26, %0
  %52 = xor i32 %29, -1
  %53 = or i32 %51, %52
  %54 = or i32 %29, %34
  %55 = xor i32 %51, -1
  %56 = and i32 %38, %55
  %57 = shl i32 %56, 1
  %58 = and i32 %52, %20
  %59 = xor i32 %30, -1
  %60 = or i32 %28, %59
  %61 = or i32 %38, %34
  %62 = xor i32 %34, %2
  %63 = shl i32 %62, 2
  %64 = or i32 %2, %0
  %65 = or i32 %29, %51
  %66 = or i32 %29, %37
  %67 = xor i32 %24, %40
  %68 = shl i32 %67, 1
  %69 = and i32 %55, %2
  %70 = and i32 %7, %0
  %71 = and i32 %29, %20
  %72 = or i32 %70, %71
  %73 = xor i32 %40, -1
  %74 = or i32 %52, %37
  %75 = xor i32 %38, -1
  %76 = and i32 %36, %75
  %77 = shl i32 %76, 1
  %78 = and i32 %29, %73
  %79 = or i32 %21, %49
  %80 = xor i32 %22, -1
  %81 = or i32 %80, %20
  %82 = and i32 %22, %20
  %83 = xor i32 %24, -1
  %84 = or i32 %83, %20
  %85 = xor i32 %42, %1
  %86 = xor i32 %32, %33
  %87 = shl i32 %86, 1
  %88 = or i32 %21, %34
  %89 = or i32 %52, %0
  %90 = or i32 %40, %2
  %91 = shl i32 %49, 1
  %92 = or i32 %40, %75
  %93 = and i32 %21, %1
  %94 = or i32 %32, %93
  %95 = and i32 %29, %0
  %96 = xor i32 %51, %2
  %97 = and i32 %24, %20
  %98 = or i32 %34, %2
  %99 = or i32 %21, %37
  %100 = or i32 %75, %1
  %101 = or i32 %29, %40
  %102 = xor i32 %29, %0
  %103 = or i32 %28, %102
  %104 = and i32 %33, %21
  %105 = xor i32 %102, -1
  %106 = or i32 %70, %105
  %107 = xor i32 %7, -1
  %108 = or i32 %107, %0
  %109 = and i32 %33, %52
  %110 = xor i32 %32, -1
  %111 = xor i32 %110, %1
  %112 = or i32 %51, %75
  %113 = xor i32 %24, %0
  %114 = or i32 %70, %113
  %115 = shl i32 %114, 1
  %116 = and i32 %21, %73
  %117 = shl i32 %116, 1
  %118 = and i32 %7, %20
  %119 = or i32 %118, %95
  %120 = or i32 %40, %21
  %121 = and i32 %21, %0
  %122 = xor i32 %121, -1
  %123 = and i32 %122, %26
  %124 = or i32 %48, %21
  %125 = and i32 %33, %2
  %126 = and i32 %38, %36
  %127 = xor i32 %93, -1
  %128 = xor i32 %51, %127
  %129 = or i32 %75, %37
  %130 = or i32 %52, %20
  %131 = or i32 %40, %52
  %132 = or i32 %93, %0
  %133 = and i32 %24, %0
  %134 = xor i32 %133, -1
  %135 = xor i32 %118, %134
  %136 = or i32 %26, %2
  %137 = xor i32 %136, %0
  %138 = or i32 %28, %137
  %139 = and i32 %64, %49
  %140 = and i32 %52, %0
  %141 = or i32 %51, %2
  %142 = and i32 %64, %26
  %143 = add i32 %38, 1
  %144 = xor i32 %127, %0
  %145 = or i32 %121, %48
  %146 = and i32 %36, %52
  %147 = and i32 %75, %49
  %148 = shl i32 %133, 2
  %149 = or i32 %42, %1
  %150 = or i32 %37, %2
  %151 = shl i32 %150, 1
  %152 = and i32 %107, %0
  %153 = xor i32 %37, %2
  %154 = and i32 %64, %48
  %155 = and i32 %21, %55
  %156 = shl i32 %155, 1
  %157 = and i32 %75, %1
  %158 = and i32 %41, %48
  %159 = or i32 %24, %20
  %160 = xor i32 %32, %127
  %161 = or i32 %75, %34
  %162 = xor i32 %73, %2
  %163 = or i32 %48, %2
  %164 = or i32 %32, %37
  %165 = or i32 %107, %20
  %166 = and i32 %48, %75
  %167 = shl i32 %166, 1
  %168 = or i32 %83, %0
  %169 = or i32 %75, %26
  %170 = and i32 %127, %0
  %171 = shl i32 %29, 1
  %172 = or i32 %121, %26
  %173 = and i32 %110, %49
  %174 = xor i32 %107, %0
  %175 = and i32 %38, %48
  %176 = or i32 %32, %49
  %177 = and i32 %29, %36
  %178 = xor i32 %22, %0
  %179 = and i32 %38, %49
  %180 = and i32 %136, %0
  %181 = or i32 %44, %180
  %182 = and i32 %83, %20
  %183 = mul i32 %182, -15
  %184 = and i32 %93, %20
  %185 = and i32 %83, %0
  %186 = mul i32 %185, -20
  %187 = and i32 %93, %0
  %188 = and i32 %80, %20
  %189 = mul i32 %118, -7
  %190 = and i32 %80, %0
  %191 = shl i32 %190, 4
  %192 = xor i32 %5, -1
  %193 = or i32 %192, %4
  %194 = xor i32 %193, -1
  %195 = xor i32 %4, %3
  %196 = xor i32 %195, -1
  %197 = or i32 %194, %196
  %198 = and i32 %12, %15
  %199 = xor i32 %3, -1
  %200 = or i32 %5, %4
  %201 = xor i32 %200, -1
  %202 = or i32 %201, %199
  %203 = and i32 %5, %4
  %204 = or i32 %203, %3
  %205 = or i32 %5, %3
  %206 = xor i32 %205, %4
  %207 = and i32 %205, %11
  %208 = xor i32 %10, -1
  %209 = xor i32 %207, %208
  %210 = or i32 %199, %4
  %211 = xor i32 %210, -1
  %212 = xor i32 %211, %5
  %213 = shl i32 %212, 1
  %214 = or i32 %201, %3
  %215 = xor i32 %12, -1
  %216 = or i32 %215, %11
  %217 = or i32 %215, %4
  %218 = and i32 %210, %192
  %219 = or i32 %195, %201
  %220 = shl i32 %219, 1
  %221 = and i32 %199, %4
  %222 = xor i32 %221, -1
  %223 = xor i32 %5, %4
  %224 = and i32 %223, %222
  %225 = xor i32 %200, %3
  %226 = shl i32 %225, 1
  %227 = and i32 %4, %3
  %228 = xor i32 %227, -1
  %229 = xor i32 %223, -1
  %230 = and i32 %229, %228
  %231 = xor i32 %228, %5
  %232 = shl i32 %231, 1
  %233 = or i32 %223, %3
  %234 = xor i32 %205, -1
  %235 = or i32 %227, %234
  %236 = and i32 %192, %4
  %237 = xor i32 %236, -1
  %238 = xor i32 %203, %3
  %239 = or i32 %192, %3
  %240 = xor i32 %239, -1
  %241 = or i32 %236, %240
  %242 = or i32 %203, %16
  %243 = shl i32 %242, 1
  %244 = or i32 %211, %5
  %245 = or i32 %221, %215
  %246 = or i32 %229, %196
  %247 = and i32 %199, %5
  %248 = and i32 %247, %4
  %249 = xor i32 %12, %4
  %250 = or i32 %248, %249
  %251 = and i32 %9, %11
  %252 = and i32 %205, %4
  %253 = xor i32 %252, -1
  %254 = xor i32 %251, %253
  %255 = xor i32 %9, -1
  %256 = xor i32 %255, %4
  %257 = and i32 %200, %195
  %258 = and i32 %192, %3
  %259 = xor i32 %258, -1
  %260 = and i32 %259, %4
  %261 = and i32 %237, %196
  %262 = or i32 %223, %211
  %263 = or i32 %195, %194
  %264 = and i32 %195, %192
  %265 = xor i32 %194, %3
  %266 = shl i32 %265, 1
  %267 = or i32 %192, %211
  %268 = or i32 %12, %4
  %269 = or i32 %227, %192
  %270 = shl i32 %240, 1
  %271 = or i32 %223, %221
  %272 = xor i32 %13, %208
  %273 = or i32 %12, %221
  %274 = and i32 %237, %3
  %275 = xor i32 %203, -1
  %276 = and i32 %275, %196
  %277 = xor i32 %240, %4
  %278 = xor i32 %236, %239
  %279 = and i32 %15, %229
  %280 = or i32 %221, %229
  %281 = and i32 %12, %4
  %282 = or i32 %251, %281
  %283 = or i32 %203, %258
  %284 = xor i32 %268, 2147483647
  %285 = or i32 %284, %248
  %286 = shl i32 %285, 1
  %287 = or i32 %10, %207
  %288 = and i32 %200, %3
  %289 = and i32 %193, %196
  %290 = and i32 %229, %199
  %291 = or i32 %258, %221
  %292 = or i32 %199, %5
  %293 = xor i32 %292, -1
  %294 = or i32 %293, %4
  %295 = xor i32 %248, %294
  %296 = or i32 %194, %199
  %297 = and i32 %223, %199
  %298 = shl i32 %258, 2
  %299 = or i32 %234, %11
  %300 = or i32 %259, %4
  %301 = shl i32 %300, 1
  %302 = xor i32 %10, %249
  %303 = or i32 %236, %196
  %304 = or i32 %201, %196
  %305 = and i32 %255, %4
  %306 = and i32 %192, %228
  %307 = or i32 %195, %229
  %308 = and i32 %215, %228
  %309 = xor i32 %193, %3
  %310 = and i32 %237, %199
  %311 = and i32 %195, %237
  %312 = xor i32 %203, %259
  %313 = and i32 %196, %5
  %314 = or i32 %229, %16
  %315 = xor i32 %236, %255
  %316 = or i32 %12, %211
  %317 = xor i32 %221, %255
  %318 = or i32 %16, %5
  %319 = or i32 %258, %11
  %320 = or i32 %205, %11
  %321 = shl i32 %320, 1
  %322 = and i32 %192, %196
  %323 = or i32 %240, %4
  %324 = or i32 %215, %211
  %325 = and i32 %215, %11
  %326 = or i32 %223, %195
  %327 = or i32 %203, %195
  %328 = xor i32 %16, %5
  %329 = or i32 %258, %4
  %330 = and i32 %223, %210
  %331 = or i32 %196, %5
  %332 = and i32 %275, %3
  %333 = and i32 %210, %215
  %334 = xor i32 %203, %210
  %335 = or i32 %9, %11
  %336 = xor i32 %249, -1
  %337 = or i32 %10, %336
  %338 = or i32 %215, %16
  %339 = xor i32 %201, %3
  %340 = shl i32 %339, 1
  %341 = and i32 %193, %199
  %342 = or i32 %203, %196
  %343 = or i32 %227, %201
  %344 = and i32 %195, %275
  %345 = xor i32 %248, %336
  %346 = and i32 %12, %210
  %347 = or i32 %192, %16
  %348 = or i32 %12, %11
  %349 = add i32 %221, 1
  %350 = or i32 %255, %11
  %351 = and i32 %195, %229
  %352 = or i32 %12, %227
  %353 = shl i32 %352, 2
  %354 = or i32 %203, %234
  %355 = and i32 %223, %196
  %356 = and i32 %239, %4
  %357 = shl i32 %356, 2
  %358 = xor i32 %227, %5
  %359 = xor i32 %239, %4
  %360 = or i32 %223, %16
  %361 = or i32 %223, %196
  %362 = and i32 %215, %4
  %363 = or i32 %205, %4
  %364 = shl i32 %363, 1
  %365 = or i32 %259, %11
  %366 = xor i32 %221, %259
  %367 = or i32 %227, %215
  %368 = xor i32 %234, %4
  %369 = and i32 %229, %196
  %370 = and i32 %15, %5
  %371 = and i32 %239, %11
  %372 = add i32 %3, 1
  %373 = or i32 %239, %11
  %374 = or i32 %236, %195
  %375 = or i32 %227, %5
  %376 = xor i32 %203, %205
  %377 = shl i32 %223, 2
  %378 = or i32 %236, %3
  %379 = or i32 %10, %206
  %380 = or i32 %229, %3
  %381 = shl i32 %380, 1
  %382 = and i32 %228, %5
  %383 = and i32 %275, %199
  %384 = or i32 %9, %221
  %385 = xor i32 %200, %227
  %386 = xor i32 %205, %227
  %387 = or i32 %195, %5
  %388 = add i32 %205, 1
  %389 = or i32 %194, %3
  %390 = shl i32 %389, 1
  %391 = or i32 %221, %5
  %392 = and i32 %215, %222
  %393 = xor i32 %237, %3
  %394 = or i32 %221, %192
  %395 = xor i32 %210, %5
  %396 = shl i32 %395, 1
  %397 = and i32 %193, %195
  %398 = and i32 %223, %3
  %399 = shl i32 %195, 1
  %400 = and i32 %247, %11
  %401 = xor i32 %400, %348
  %402 = or i32 %251, %252
  %403 = xor i32 %239, %227
  %404 = or i32 %223, %227
  %405 = xor i32 %248, %268
  %406 = or i32 %12, %16
  %407 = xor i32 %206, %208
  %408 = xor i32 %215, %4
  %409 = xor i32 %292, %4
  %410 = or i32 %248, %409
  %411 = or i32 %223, %199
  %412 = and i32 %255, %11
  %413 = xor i32 %236, %3
  %414 = shl i32 %413, 1
  %415 = xor i32 %9, %4
  %416 = xor i32 %275, %3
  %417 = and i32 %292, %4
  %418 = xor i32 %417, -1
  %419 = xor i32 %400, %418
  %420 = and i32 %193, %3
  %421 = xor i32 %409, -1
  %422 = xor i32 %248, %421
  %423 = and i32 %192, %222
  %424 = or i32 %227, %240
  %425 = and i32 %259, %11
  %426 = and i32 %200, %199
  %427 = or i32 %239, %4
  %428 = or i32 %195, %192
  %429 = and i32 %210, %229
  %430 = xor i32 %259, %4
  %431 = or i32 %400, %417
  %432 = shl i32 %431, 1
  %433 = and i32 %234, %11
  %434 = shl i32 %433, 2
  %435 = and i32 %258, %11
  %436 = and i32 %234, %4
  %437 = and i32 %258, %4
  %438 = mul i32 %437, 10
  %439 = and i32 %240, %11
  %440 = mul i32 %439, 11
  %441 = mul i32 %251, 19
  %442 = and i32 %240, %4
  %443 = mul i32 %10, 13
  %444 = add i32 %48, %21
  %445 = add i32 %444, %163
  %446 = add i32 %445, %179
  %447 = add i32 %446, %169
  %448 = add i32 %447, %131
  %449 = add i32 %448, %94
  %450 = add i32 %449, %82
  %451 = add i32 %450, %39
  %452 = add i32 %451, %221
  %453 = add i32 %452, %227
  %454 = add i32 %453, %25
  %455 = add i32 %454, %428
  %456 = add i32 %455, %236
  %457 = add i32 %456, %9
  %458 = add i32 %457, %331
  %459 = add i32 %458, %322
  %460 = add i32 %459, %306
  %461 = add i32 %460, %229
  %462 = add i32 %461, %429
  %463 = add i32 %462, %415
  %464 = add i32 %463, %404
  %465 = add i32 %464, %393
  %466 = add i32 %465, %371
  %467 = add i32 %466, %311
  %468 = add i32 %467, %262
  %469 = add i32 %162, %51
  %470 = add i32 %469, %177
  %471 = add i32 %470, %173
  %472 = add i32 %471, %157
  %473 = add i32 %472, %264
  %474 = add i32 %473, %283
  %475 = add i32 %474, %369
  %476 = shl i32 %475, 2
  %477 = sub i32 %69, %124
  %478 = add i32 %477, %52
  %479 = add i32 %478, %315
  %480 = sub i32 %479, %342
  %481 = mul i32 %480, 5
  %482 = sub i32 %435, %70
  %483 = mul i32 %482, 14
  %484 = add i32 %436, %188
  %485 = shl i32 %484, 3
  %486 = sub i32 %184, %187
  %487 = mul i32 %486, 6
  %488 = add i32 %468, %271
  %489 = add i32 %488, %401
  %490 = add i32 %489, %402
  %491 = shl i32 %490, 1
  %492 = sub i32 %21, %126
  %493 = add i32 %492, %50
  %494 = sub i32 %493, %411
  %495 = sub i32 %494, %442
  %496 = sub i32 %495, %374
  %497 = add i32 %496, %346
  %498 = add i32 %497, %206
  %499 = mul i32 %498, 3
  %500 = sub i32 %36, %1
  %501 = add i32 %500, %51
  %502 = add i32 %501, %36
  %503 = add i32 %502, 3
  %504 = sub i32 %503, %41
  %505 = add i32 %504, %64
  %506 = sub i32 %505, %79
  %507 = add i32 %506, %88
  %508 = add i32 %507, %90
  %509 = sub i32 %508, %91
  %510 = sub i32 %509, %96
  %511 = sub i32 %510, %98
  %512 = add i32 %511, %99
  %513 = add i32 %512, %104
  %514 = add i32 %513, %120
  %515 = add i32 %514, %125
  %516 = sub i32 %515, %141
  %517 = add i32 %516, %143
  %518 = sub i32 %517, %22
  %519 = add i32 %518, %153
  %520 = add i32 %519, %42
  %521 = add i32 %520, %3
  %522 = add i32 %521, %372
  %523 = sub i32 %522, %35
  %524 = add i32 %523, %43
  %525 = sub i32 %524, %47
  %526 = add i32 %525, %53
  %527 = sub i32 %526, %54
  %528 = add i32 %527, %58
  %529 = add i32 %528, %61
  %530 = sub i32 %529, %63
  %531 = add i32 %530, %65
  %532 = sub i32 %531, %66
  %533 = add i32 %532, %74
  %534 = sub i32 %533, %78
  %535 = add i32 %534, %81
  %536 = add i32 %535, %84
  %537 = add i32 %536, %85
  %538 = add i32 %537, %89
  %539 = sub i32 %538, %92
  %540 = sub i32 %539, %95
  %541 = sub i32 %540, %97
  %542 = add i32 %541, %100
  %543 = add i32 %542, %101
  %544 = add i32 %543, %108
  %545 = add i32 %544, %109
  %546 = add i32 %545, %111
  %547 = add i32 %546, %112
  %548 = sub i32 %547, %117
  %549 = sub i32 %548, %123
  %550 = sub i32 %549, %128
  %551 = sub i32 %550, %129
  %552 = sub i32 %551, %130
  %553 = add i32 %552, %132
  %554 = sub i32 %553, %139
  %555 = add i32 %554, %140
  %556 = sub i32 %555, %142
  %557 = add i32 %556, %144
  %558 = sub i32 %557, %145
  %559 = add i32 %558, %146
  %560 = add i32 %559, %147
  %561 = add i32 %560, %149
  %562 = sub i32 %561, %151
  %563 = sub i32 %562, %152
  %564 = sub i32 %563, %154
  %565 = sub i32 %564, %156
  %566 = sub i32 %565, %158
  %567 = sub i32 %566, %159
  %568 = sub i32 %567, %160
  %569 = sub i32 %568, %161
  %570 = sub i32 %569, %164
  %571 = sub i32 %570, %165
  %572 = add i32 %571, %168
  %573 = add i32 %572, %170
  %574 = sub i32 %573, %171
  %575 = sub i32 %574, %172
  %576 = sub i32 %575, %71
  %577 = sub i32 %576, %174
  %578 = sub i32 %577, %175
  %579 = sub i32 %578, %176
  %580 = sub i32 %579, %178
  %581 = add i32 %580, 1
  %582 = add i32 %581, %31
  %583 = add i32 %582, %46
  %584 = sub i32 %583, %57
  %585 = add i32 %584, %60
  %586 = sub i32 %585, %68
  %587 = sub i32 %586, %72
  %588 = sub i32 %587, %77
  %589 = sub i32 %588, %87
  %590 = add i32 %589, %103
  %591 = add i32 %590, %106
  %592 = add i32 %591, %119
  %593 = add i32 %592, %135
  %594 = add i32 %593, %138
  %595 = sub i32 %594, %148
  %596 = sub i32 %595, %167
  %597 = sub i32 %596, %181
  %598 = add i32 %597, %183
  %599 = add i32 %598, %186
  %600 = add i32 %599, %189
  %601 = add i32 %600, %191
  %602 = add i32 %601, %196
  %603 = sub i32 %602, %210
  %604 = add i32 %603, %228
  %605 = add i32 %604, %349
  %606 = sub i32 %605, %15
  %607 = sub i32 %606, %115
  %608 = add i32 %607, %218
  %609 = add i32 %608, %237
  %610 = add i32 %609, %244
  %611 = sub i32 %610, %267
  %612 = sub i32 %611, %269
  %613 = add i32 %612, %313
  %614 = sub i32 %613, %318
  %615 = sub i32 %614, %328
  %616 = sub i32 %615, %239
  %617 = add i32 %616, %205
  %618 = add i32 %617, %347
  %619 = add i32 %618, %358
  %620 = add i32 %619, %370
  %621 = sub i32 %620, %375
  %622 = add i32 %621, %203
  %623 = sub i32 %622, %382
  %624 = add i32 %623, %387
  %625 = add i32 %624, %388
  %626 = add i32 %625, %391
  %627 = add i32 %626, %394
  %628 = sub i32 %627, %399
  %629 = add i32 %628, %255
  %630 = add i32 %629, %423
  %631 = add i32 %630, %259
  %632 = add i32 %631, %201
  %633 = add i32 %632, %487
  %634 = add i32 %633, %197
  %635 = sub i32 %634, %198
  %636 = add i32 %635, %202
  %637 = add i32 %636, %204
  %638 = sub i32 %637, %213
  %639 = add i32 %638, %214
  %640 = sub i32 %639, %216
  %641 = add i32 %640, %217
  %642 = sub i32 %641, %224
  %643 = add i32 %642, %230
  %644 = sub i32 %643, %232
  %645 = sub i32 %644, %233
  %646 = sub i32 %645, %235
  %647 = sub i32 %646, %238
  %648 = sub i32 %647, %241
  %649 = sub i32 %648, %245
  %650 = add i32 %649, %246
  %651 = sub i32 %650, %256
  %652 = add i32 %651, %257
  %653 = sub i32 %652, %260
  %654 = add i32 %653, %261
  %655 = sub i32 %654, %263
  %656 = sub i32 %655, %268
  %657 = sub i32 %656, %270
  %658 = add i32 %657, %273
  %659 = sub i32 %658, %274
  %660 = sub i32 %659, %276
  %661 = sub i32 %660, %277
  %662 = sub i32 %661, %278
  %663 = sub i32 %662, %279
  %664 = sub i32 %663, %280
  %665 = add i32 %664, %288
  %666 = sub i32 %665, %289
  %667 = add i32 %666, %290
  %668 = sub i32 %667, %291
  %669 = sub i32 %668, %296
  %670 = add i32 %669, %297
  %671 = sub i32 %670, %298
  %672 = sub i32 %671, %13
  %673 = sub i32 %672, %299
  %674 = add i32 %673, %303
  %675 = add i32 %674, %304
  %676 = sub i32 %675, %305
  %677 = sub i32 %676, %307
  %678 = add i32 %677, %308
  %679 = sub i32 %678, %309
  %680 = add i32 %679, %310
  %681 = add i32 %680, %312
  %682 = add i32 %681, %314
  %683 = sub i32 %682, %316
  %684 = add i32 %683, %317
  %685 = sub i32 %684, %319
  %686 = add i32 %685, %323
  %687 = sub i32 %686, %324
  %688 = sub i32 %687, %325
  %689 = add i32 %688, %326
  %690 = add i32 %689, %327
  %691 = add i32 %690, %329
  %692 = sub i32 %691, %330
  %693 = add i32 %692, %332
  %694 = add i32 %693, %333
  %695 = add i32 %694, %334
  %696 = sub i32 %695, %335
  %697 = sub i32 %696, %338
  %698 = add i32 %697, %341
  %699 = sub i32 %698, %343
  %700 = sub i32 %699, %344
  %701 = sub i32 %700, %207
  %702 = sub i32 %701, %348
  %703 = sub i32 %702, %350
  %704 = sub i32 %703, %351
  %705 = add i32 %704, %354
  %706 = add i32 %705, %355
  %707 = sub i32 %706, %359
  %708 = sub i32 %707, %360
  %709 = add i32 %708, %361
  %710 = sub i32 %709, %362
  %711 = sub i32 %710, %281
  %712 = sub i32 %711, %365
  %713 = add i32 %712, %366
  %714 = add i32 %713, %367
  %715 = sub i32 %714, %368
  %716 = sub i32 %715, %373
  %717 = sub i32 %716, %376
  %718 = sub i32 %717, %377
  %719 = sub i32 %718, %378
  %720 = add i32 %719, %383
  %721 = add i32 %720, %384
  %722 = add i32 %721, %385
  %723 = sub i32 %722, %386
  %724 = sub i32 %723, %392
  %725 = sub i32 %724, %396
  %726 = sub i32 %725, %397
  %727 = sub i32 %726, %398
  %728 = add i32 %727, %403
  %729 = add i32 %728, %406
  %730 = sub i32 %729, %408
  %731 = sub i32 %730, %412
  %732 = add i32 %731, %416
  %733 = sub i32 %732, %420
  %734 = sub i32 %733, %424
  %735 = sub i32 %734, %425
  %736 = add i32 %735, %426
  %737 = add i32 %736, %427
  %738 = sub i32 %737, %249
  %739 = sub i32 %738, %430
  %740 = add i32 %739, %252
  %741 = add i32 %740, %209
  %742 = sub i32 %741, %220
  %743 = sub i32 %742, %226
  %744 = sub i32 %743, %243
  %745 = add i32 %744, %250
  %746 = sub i32 %745, %254
  %747 = sub i32 %746, %266
  %748 = sub i32 %747, %272
  %749 = add i32 %748, %282
  %750 = sub i32 %749, %287
  %751 = add i32 %750, %295
  %752 = sub i32 %751, %301
  %753 = add i32 %752, %302
  %754 = sub i32 %753, %321
  %755 = add i32 %754, %337
  %756 = sub i32 %755, %340
  %757 = add i32 %756, %345
  %758 = sub i32 %757, %353
  %759 = sub i32 %758, %357
  %760 = sub i32 %759, %364
  %761 = sub i32 %760, %379
  %762 = sub i32 %761, %381
  %763 = sub i32 %762, %390
  %764 = add i32 %763, %405
  %765 = add i32 %764, %407
  %766 = add i32 %765, %410
  %767 = sub i32 %766, %414
  %768 = sub i32 %767, %419
  %769 = sub i32 %768, %422
  %770 = sub i32 %769, %434
  %771 = add i32 %770, %438
  %772 = add i32 %771, %440
  %773 = add i32 %772, %441
  %774 = add i32 %773, %443
  %775 = sub i32 %774, %432
  %776 = add i32 %775, %483
  %777 = add i32 %776, %485
  %778 = sub i32 %777, %286
  %779 = add i32 %778, %481
  %780 = add i32 %779, %476
  %781 = add i32 %780, %499
  %782 = add i32 %781, %491
  %783 = icmp eq i32 %19, %782
  %784 = select i1 %783, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %785 = tail call i32 @puts(i8* nonnull dereferenceable(1) %784)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
