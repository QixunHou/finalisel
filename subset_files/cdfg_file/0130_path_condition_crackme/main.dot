digraph "DFG for'main' function" {
	Node0x793b08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x793b88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x793c18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x793c78[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x7940f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7941d8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x7942d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x794398[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x794448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x79afb8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x79b078[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x79bfe8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x79c658[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x79c750[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x79c958[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x79cab8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x79cbc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x79cc88[shape=record, label="  ret i32 0"];
	Node0x793b08 -> Node0x793b88;
	Node0x793b88 -> Node0x793c18;
	Node0x793c18 -> Node0x793c78;
	Node0x793c78 -> Node0x7940f8;
	Node0x7940f8 -> Node0x7941d8;
	Node0x7941d8 -> Node0x7942d8;
	Node0x7942d8 -> Node0x794398;
	Node0x794398 -> Node0x794448;
	Node0x794448 -> Node0x79afb8;
	Node0x79afb8 -> Node0x79b078;
	Node0x79b078 -> Node0x79bfe8;
	Node0x79bfe8 -> Node0x79c658;
	Node0x79c658 -> Node0x79c750;
	Node0x79c750 -> Node0x79c958;
	Node0x79c958 -> Node0x79cab8;
	Node0x79cab8 -> Node0x79cbc8;
	Node0x79cbc8 -> Node0x79cc88;
edge [color=red]
	Node0x793b08 -> Node0x793c78;
	Node0x793c78 -> Node0x7940f8;
	Node0x793b88 -> Node0x7941d8;
	Node0x7941d8 -> Node0x7942d8;
	Node0x793c18 -> Node0x794398;
	Node0x794398 -> Node0x794448;
	Node0x793b08 -> Node0x79afb8;
	Node0x793b88 -> Node0x79afb8;
	Node0x793c18 -> Node0x79afb8;
	Node0x793b08 -> Node0x79b078;
	Node0x793b88 -> Node0x79bfe8;
	Node0x793c18 -> Node0x79c658;
	Node0x79b078 -> Node0x79c750;
	Node0x79bfe8 -> Node0x79c750;
	Node0x79c658 -> Node0x79c750;
	Node0x794398 -> Node0x79c958;
	Node0x7941d8 -> Node0x79cab8;
	Node0x793c78 -> Node0x79cbc8;
}
