digraph "DFG for'main' function" {
	Node0x925f08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x925f88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x926018[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x926078[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x9264f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9265d8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x9266d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x926798[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x926848[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x926aa8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x926b68[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x927ad8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x927b38[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x927c30[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x9287f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x928938[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x928a48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x928b08[shape=record, label="  ret i32 0"];
	Node0x925f08 -> Node0x925f88;
	Node0x925f88 -> Node0x926018;
	Node0x926018 -> Node0x926078;
	Node0x926078 -> Node0x9264f8;
	Node0x9264f8 -> Node0x9265d8;
	Node0x9265d8 -> Node0x9266d8;
	Node0x9266d8 -> Node0x926798;
	Node0x926798 -> Node0x926848;
	Node0x926848 -> Node0x926aa8;
	Node0x926aa8 -> Node0x926b68;
	Node0x926b68 -> Node0x927ad8;
	Node0x927ad8 -> Node0x927b38;
	Node0x927b38 -> Node0x927c30;
	Node0x927c30 -> Node0x9287f8;
	Node0x9287f8 -> Node0x928938;
	Node0x928938 -> Node0x928a48;
	Node0x928a48 -> Node0x928b08;
edge [color=red]
	Node0x925f08 -> Node0x926078;
	Node0x926078 -> Node0x9264f8;
	Node0x925f88 -> Node0x9265d8;
	Node0x9265d8 -> Node0x9266d8;
	Node0x926018 -> Node0x926798;
	Node0x926798 -> Node0x926848;
	Node0x925f08 -> Node0x926aa8;
	Node0x925f88 -> Node0x926aa8;
	Node0x926018 -> Node0x926aa8;
	Node0x925f08 -> Node0x926b68;
	Node0x925f88 -> Node0x927ad8;
	Node0x926018 -> Node0x927b38;
	Node0x926b68 -> Node0x927c30;
	Node0x927ad8 -> Node0x927c30;
	Node0x927b38 -> Node0x927c30;
	Node0x926798 -> Node0x9287f8;
	Node0x9265d8 -> Node0x928938;
	Node0x926078 -> Node0x928a48;
}
