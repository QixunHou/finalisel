; ModuleID = '../.././c_source_file/0468_path_condition_crackme.c'
source_filename = "../.././c_source_file/0468_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %2, -1
  %5 = add i32 %2, 1
  %6 = or i32 %4, %0
  %7 = xor i32 %6, %1
  %8 = add i32 %5, %7
  %9 = xor i32 %6, -1
  %10 = xor i32 %1, -1
  %11 = or i32 %10, %0
  %12 = and i32 %2, %0
  %13 = xor i32 %12, %11
  %14 = xor i32 %2, %1
  %15 = xor i32 %0, -1
  %16 = or i32 %2, %1
  %17 = and i32 %16, %15
  %18 = shl i32 %17, 1
  %19 = or i32 %4, %1
  %20 = and i32 %19, %15
  %21 = xor i32 %19, -1
  %22 = xor i32 %21, %0
  %23 = xor i32 %1, %0
  %24 = xor i32 %23, -1
  %25 = or i32 %9, %24
  %26 = shl i32 %25, 1
  %27 = or i32 %1, %0
  %28 = xor i32 %27, -1
  %29 = or i32 %28, %2
  %30 = and i32 %4, %0
  %31 = or i32 %30, %1
  %32 = xor i32 %2, %0
  %33 = or i32 %32, %23
  %34 = shl i32 %33, 1
  %35 = xor i32 %30, -1
  %36 = and i32 %35, %10
  %37 = and i32 %11, %4
  %38 = or i32 %19, %15
  %39 = and i32 %23, %35
  %40 = and i32 %2, %1
  %41 = xor i32 %40, -1
  %42 = and i32 %41, %15
  %43 = shl i32 %42, 1
  %44 = or i32 %12, %1
  %45 = and i32 %10, %2
  %46 = and i32 %45, %0
  %47 = or i32 %14, %0
  %48 = xor i32 %46, %47
  %49 = and i32 %40, %0
  %50 = xor i32 %16, %0
  %51 = or i32 %49, %50
  %52 = and i32 %40, %15
  %53 = and i32 %16, %0
  %54 = or i32 %52, %53
  %55 = xor i32 %14, -1
  %56 = shl i32 %55, 1
  %57 = xor i32 %52, -1
  %58 = xor i32 %53, %57
  %59 = xor i32 %11, -1
  %60 = or i32 %14, %59
  %61 = xor i32 %12, %1
  %62 = and i32 %4, %1
  %63 = xor i32 %62, -1
  %64 = and i32 %63, %0
  %65 = xor i32 %32, -1
  %66 = or i32 %23, %65
  %67 = shl i32 %66, 2
  %68 = add i32 %1, 1
  %69 = and i32 %14, %0
  %70 = or i32 %52, %69
  %71 = shl i32 %21, 1
  %72 = xor i32 %35, %1
  %73 = or i32 %40, %15
  %74 = or i32 %12, %24
  %75 = shl i32 %74, 1
  %76 = and i32 %10, %0
  %77 = xor i32 %76, -1
  %78 = and i32 %14, %77
  %79 = xor i32 %12, -1
  %80 = or i32 %14, %28
  %81 = xor i32 %19, %0
  %82 = xor i32 %28, %2
  %83 = or i32 %62, %15
  %84 = xor i32 %14, %0
  %85 = xor i32 %84, -1
  %86 = or i32 %49, %85
  %87 = or i32 %4, %59
  %88 = and i32 %11, %65
  %89 = and i32 %32, %11
  %90 = xor i32 %16, -1
  %91 = or i32 %12, %90
  %92 = or i32 %2, %0
  %93 = xor i32 %92, -1
  %94 = xor i32 %76, %63
  %95 = and i32 %1, %0
  %96 = or i32 %95, %2
  %97 = shl i32 %96, 1
  %98 = and i32 %6, %10
  %99 = and i32 %65, %24
  %100 = shl i32 %99, 1
  %101 = xor i32 %40, %0
  %102 = or i32 %10, %2
  %103 = xor i32 %102, %0
  %104 = xor i32 %46, -1
  %105 = xor i32 %103, %104
  %106 = and i32 %11, %2
  %107 = shl i32 %106, 1
  %108 = and i32 %65, %10
  %109 = and i32 %6, %24
  %110 = and i32 %32, %23
  %111 = and i32 %92, %10
  %112 = xor i32 %41, %0
  %113 = xor i32 %92, %1
  %114 = or i32 %32, %76
  %115 = shl i32 %114, 1
  %116 = or i32 %95, %21
  %117 = or i32 %9, %10
  %118 = xor i32 %12, %16
  %119 = shl i32 %118, 1
  %120 = or i32 %19, %0
  %121 = or i32 %41, %0
  %122 = and i32 %14, %15
  %123 = and i32 %14, %27
  %124 = shl i32 %123, 1
  %125 = and i32 %23, %2
  %126 = or i32 %32, %1
  %127 = or i32 %16, %0
  %128 = xor i32 %79, %1
  %129 = or i32 %4, %24
  %130 = or i32 %9, %1
  %131 = or i32 %21, %15
  %132 = and i32 %102, %15
  %133 = xor i32 %132, %104
  %134 = and i32 %79, %1
  %135 = xor i32 %95, -1
  %136 = and i32 %4, %135
  %137 = shl i32 %136, 1
  %138 = or i32 %95, %93
  %139 = and i32 %135, %2
  %140 = xor i32 %69, %57
  %141 = xor i32 %46, %85
  %142 = and i32 %23, %65
  %143 = shl i32 %142, 1
  %144 = xor i32 %76, %2
  %145 = and i32 %77, %2
  %146 = xor i32 %30, %19
  %147 = or i32 %14, %76
  %148 = and i32 %6, %1
  %149 = xor i32 %77, %2
  %150 = and i32 %4, %24
  %151 = shl i32 %150, 1
  %152 = add i32 %16, 1
  %153 = or i32 %32, %28
  %154 = and i32 %65, %77
  %155 = or i32 %63, %15
  %156 = xor i32 %19, %95
  %157 = or i32 %32, %10
  %158 = shl i32 %157, 1
  %159 = or i32 %23, %2
  %160 = or i32 %12, %59
  %161 = or i32 %32, %24
  %162 = or i32 %30, %23
  %163 = xor i32 %11, %2
  %164 = xor i32 %92, %95
  %165 = xor i32 %49, -1
  %166 = xor i32 %122, %165
  %167 = and i32 %45, %15
  %168 = or i32 %14, %15
  %169 = xor i32 %167, %168
  %170 = and i32 %14, %135
  %171 = xor i32 %17, %165
  %172 = or i32 %55, %59
  %173 = and i32 %32, %77
  %174 = add i32 %27, 1
  %175 = xor i32 %59, %2
  %176 = and i32 %32, %135
  %177 = or i32 %23, %93
  %178 = or i32 %65, %10
  %179 = and i32 %65, %1
  %180 = or i32 %59, %2
  %181 = or i32 %95, %65
  %182 = and i32 %63, %15
  %183 = and i32 %6, %23
  %184 = and i32 %102, %0
  %185 = xor i32 %184, -1
  %186 = xor i32 %167, %185
  %187 = or i32 %30, %24
  %188 = xor i32 %9, %1
  %189 = or i32 %93, %10
  %190 = or i32 %65, %24
  %191 = xor i32 %16, %95
  %192 = or i32 %76, %65
  %193 = xor i32 %50, %165
  %194 = shl i32 %12, 1
  %195 = xor i32 %6, %95
  %196 = or i32 %46, %103
  %197 = xor i32 %90, %0
  %198 = and i32 %55, %0
  %199 = or i32 %55, %28
  %200 = or i32 %95, %9
  %201 = or i32 %30, %21
  %202 = and i32 %23, %79
  %203 = xor i32 %95, %2
  %204 = or i32 %46, %132
  %205 = and i32 %79, %10
  %206 = and i32 %55, %135
  %207 = or i32 %76, %55
  %208 = and i32 %27, %2
  %209 = or i32 %12, %10
  %210 = and i32 %55, %15
  %211 = xor i32 %12, %63
  %212 = xor i32 %62, %0
  %213 = or i32 %90, %0
  %214 = and i32 %4, %77
  %215 = or i32 %46, %84
  %216 = or i32 %16, %15
  %217 = and i32 %32, %1
  %218 = or i32 %30, %40
  %219 = or i32 %65, %1
  %220 = add i32 %32, 1
  %221 = or i32 %4, %28
  %222 = and i32 %92, %1
  %223 = and i32 %14, %11
  %224 = or i32 %14, %95
  %225 = or i32 %49, %122
  %226 = and i32 %27, %55
  %227 = and i32 %23, %4
  %228 = or i32 %12, %62
  %229 = or i32 %41, %15
  %230 = or i32 %167, %184
  %231 = xor i32 %135, %2
  %232 = or i32 %93, %1
  %233 = xor i32 %63, %0
  %234 = and i32 %55, %77
  %235 = xor i32 %49, %84
  %236 = and i32 %65, %135
  %237 = or i32 %55, %0
  %238 = and i32 %92, %23
  %239 = shl i32 %30, 1
  %240 = and i32 %32, %10
  %241 = and i32 %92, %24
  %242 = shl i32 %241, 1
  %243 = or i32 %95, %90
  %244 = and i32 %11, %55
  %245 = or i32 %95, %55
  %246 = xor i32 %93, %1
  %247 = shl i32 %246, 1
  %248 = or i32 %65, %59
  %249 = or i32 %93, %24
  %250 = shl i32 %249, 1
  %251 = or i32 %40, %0
  %252 = or i32 %23, %9
  %253 = or i32 %76, %2
  %254 = or i32 %65, %28
  %255 = xor i32 %47, -1
  %256 = or i32 %46, %255
  %257 = and i32 %24, %2
  %258 = and i32 %19, %0
  %259 = or i32 %12, %28
  %260 = or i32 %21, %0
  %261 = and i32 %32, %24
  %262 = and i32 %41, %0
  %263 = shl i32 %262, 1
  %264 = and i32 %79, %24
  %265 = shl i32 %264, 1
  %266 = or i32 %76, %4
  %267 = or i32 %23, %4
  %268 = xor i32 %55, %0
  %269 = or i32 %62, %0
  %270 = shl i32 %269, 1
  %271 = or i32 %12, %23
  %272 = or i32 %95, %4
  %273 = or i32 %55, %15
  %274 = and i32 %27, %65
  %275 = or i32 %24, %2
  %276 = or i32 %30, %10
  %277 = xor i32 %12, %27
  %278 = or i32 %90, %15
  %279 = or i32 %62, %76
  %280 = shl i32 %279, 1
  %281 = and i32 %35, %1
  %282 = xor i32 %168, 2147483647
  %283 = or i32 %282, %167
  %284 = shl i32 %283, 1
  %285 = and i32 %35, %24
  %286 = or i32 %32, %95
  %287 = or i32 %49, %17
  %288 = xor i32 %30, %1
  %289 = xor i32 %27, %2
  %290 = or i32 %63, %0
  %291 = or i32 %40, %76
  %292 = and i32 %90, %15
  %293 = and i32 %62, %15
  %294 = and i32 %90, %0
  %295 = shl i32 %294, 2
  %296 = and i32 %62, %0
  %297 = mul i32 %296, 10
  %298 = and i32 %21, %15
  %299 = mul i32 %52, -19
  %300 = and i32 %21, %0
  %301 = sub i32 %159, %221
  %302 = sub i32 %301, %300
  %303 = sub i32 %302, %49
  %304 = sub i32 %303, %234
  %305 = sub i32 %304, %122
  %306 = add i32 %305, %112
  %307 = sub i32 %306, %31
  %308 = mul i32 %307, 5
  %309 = sub i32 %16, %62
  %310 = sub i32 %309, %292
  %311 = add i32 %310, %298
  %312 = add i32 %311, %278
  %313 = sub i32 %312, %273
  %314 = sub i32 %313, %64
  %315 = mul i32 %314, 3
  %316 = add i32 %53, %23
  %317 = add i32 %316, %213
  %318 = shl i32 %317, 2
  %319 = add i32 %208, %0
  %320 = add i32 %319, %175
  %321 = add i32 %320, %144
  %322 = add i32 %321, %82
  %323 = add i32 %322, %41
  %324 = add i32 %323, %252
  %325 = add i32 %324, %218
  %326 = add i32 %325, %207
  %327 = add i32 %326, %197
  %328 = add i32 %327, %177
  %329 = add i32 %328, %155
  %330 = add i32 %329, %131
  %331 = add i32 %330, %120
  %332 = add i32 %331, %94
  %333 = add i32 %332, %83
  %334 = add i32 %333, %73
  %335 = add i32 %334, %72
  %336 = add i32 %335, %60
  %337 = add i32 %336, %39
  %338 = add i32 %337, %70
  %339 = add i32 %338, %86
  %340 = add i32 %339, %48
  %341 = shl i32 %340, 1
  %342 = add i32 %68, %1
  %343 = sub i32 %342, %11
  %344 = sub i32 %343, %76
  %345 = add i32 %344, %174
  %346 = add i32 %345, %59
  %347 = add i32 %346, %24
  %348 = add i32 %347, %2
  %349 = sub i32 %348, %27
  %350 = add i32 %349, %135
  %351 = add i32 %350, %77
  %352 = sub i32 %351, %95
  %353 = add i32 %352, %9
  %354 = add i32 %353, %14
  %355 = sub i32 %354, %29
  %356 = add i32 %355, %37
  %357 = sub i32 %356, %6
  %358 = add i32 %357, %79
  %359 = sub i32 %358, %40
  %360 = sub i32 %359, %87
  %361 = add i32 %360, %19
  %362 = add i32 %361, %93
  %363 = sub i32 %362, %125
  %364 = sub i32 %363, %129
  %365 = add i32 %364, %139
  %366 = add i32 %365, %35
  %367 = add i32 %366, %145
  %368 = sub i32 %367, %149
  %369 = add i32 %368, %152
  %370 = add i32 %369, %163
  %371 = add i32 %370, %180
  %372 = add i32 %371, %32
  %373 = sub i32 %372, %203
  %374 = sub i32 %373, %214
  %375 = add i32 %374, %220
  %376 = sub i32 %375, %227
  %377 = add i32 %376, %231
  %378 = add i32 %377, %63
  %379 = sub i32 %378, %253
  %380 = sub i32 %379, %257
  %381 = add i32 %380, %266
  %382 = sub i32 %381, %267
  %383 = add i32 %382, %272
  %384 = sub i32 %383, %275
  %385 = sub i32 %384, %289
  %386 = sub i32 %385, %92
  %387 = add i32 %386, %13
  %388 = add i32 %387, %20
  %389 = add i32 %388, %22
  %390 = sub i32 %389, %36
  %391 = add i32 %390, %38
  %392 = sub i32 %391, %44
  %393 = sub i32 %392, %56
  %394 = sub i32 %393, %47
  %395 = add i32 %394, %61
  %396 = sub i32 %395, %71
  %397 = add i32 %396, %78
  %398 = sub i32 %397, %69
  %399 = add i32 %398, %80
  %400 = sub i32 %399, %81
  %401 = sub i32 %400, %88
  %402 = add i32 %401, %89
  %403 = add i32 %402, %91
  %404 = sub i32 %403, %97
  %405 = add i32 %404, %98
  %406 = add i32 %405, %101
  %407 = sub i32 %406, %107
  %408 = sub i32 %407, %108
  %409 = add i32 %408, %109
  %410 = add i32 %409, %110
  %411 = sub i32 %410, %111
  %412 = sub i32 %411, %113
  %413 = add i32 %412, %116
  %414 = sub i32 %413, %117
  %415 = add i32 %414, %121
  %416 = add i32 %415, %126
  %417 = add i32 %416, %127
  %418 = sub i32 %417, %128
  %419 = add i32 %418, %130
  %420 = add i32 %419, %134
  %421 = sub i32 %420, %137
  %422 = sub i32 %421, %138
  %423 = add i32 %422, %146
  %424 = add i32 %423, %147
  %425 = add i32 %424, %148
  %426 = sub i32 %425, %151
  %427 = sub i32 %426, %153
  %428 = sub i32 %427, %154
  %429 = sub i32 %428, %156
  %430 = sub i32 %429, %160
  %431 = sub i32 %430, %161
  %432 = add i32 %431, %162
  %433 = sub i32 %432, %50
  %434 = sub i32 %433, %164
  %435 = sub i32 %434, %170
  %436 = add i32 %435, %172
  %437 = add i32 %436, %173
  %438 = add i32 %437, %176
  %439 = add i32 %438, %178
  %440 = sub i32 %439, %179
  %441 = add i32 %440, %181
  %442 = add i32 %441, %182
  %443 = add i32 %442, %183
  %444 = add i32 %443, %187
  %445 = sub i32 %444, %188
  %446 = sub i32 %445, %189
  %447 = sub i32 %446, %190
  %448 = add i32 %447, %191
  %449 = sub i32 %448, %192
  %450 = sub i32 %449, %194
  %451 = add i32 %450, %195
  %452 = add i32 %451, %198
  %453 = add i32 %452, %199
  %454 = add i32 %453, %200
  %455 = sub i32 %454, %201
  %456 = add i32 %455, %202
  %457 = sub i32 %456, %205
  %458 = add i32 %457, %206
  %459 = add i32 %458, %209
  %460 = add i32 %459, %210
  %461 = add i32 %460, %211
  %462 = sub i32 %461, %212
  %463 = sub i32 %462, %216
  %464 = sub i32 %463, %217
  %465 = add i32 %464, %219
  %466 = sub i32 %465, %222
  %467 = sub i32 %466, %223
  %468 = sub i32 %467, %168
  %469 = sub i32 %468, %224
  %470 = add i32 %469, %226
  %471 = sub i32 %470, %228
  %472 = sub i32 %471, %229
  %473 = add i32 %472, %232
  %474 = sub i32 %473, %233
  %475 = sub i32 %474, %236
  %476 = sub i32 %475, %237
  %477 = add i32 %476, %238
  %478 = sub i32 %477, %239
  %479 = add i32 %478, %240
  %480 = add i32 %479, %243
  %481 = add i32 %480, %244
  %482 = add i32 %481, %245
  %483 = add i32 %482, %84
  %484 = add i32 %483, %248
  %485 = sub i32 %484, %251
  %486 = sub i32 %485, %254
  %487 = sub i32 %486, %258
  %488 = sub i32 %487, %259
  %489 = add i32 %488, %260
  %490 = add i32 %489, %261
  %491 = sub i32 %490, %268
  %492 = add i32 %491, %271
  %493 = add i32 %492, %274
  %494 = add i32 %493, %276
  %495 = sub i32 %494, %277
  %496 = sub i32 %495, %281
  %497 = add i32 %496, %285
  %498 = sub i32 %497, %286
  %499 = sub i32 %498, %288
  %500 = add i32 %499, %290
  %501 = sub i32 %500, %291
  %502 = add i32 %501, %293
  %503 = sub i32 %502, %18
  %504 = sub i32 %503, %26
  %505 = sub i32 %504, %34
  %506 = sub i32 %505, %43
  %507 = sub i32 %506, %51
  %508 = sub i32 %507, %54
  %509 = add i32 %508, %58
  %510 = sub i32 %509, %67
  %511 = sub i32 %510, %75
  %512 = sub i32 %511, %100
  %513 = sub i32 %512, %105
  %514 = sub i32 %513, %115
  %515 = sub i32 %514, %119
  %516 = sub i32 %515, %124
  %517 = add i32 %516, %133
  %518 = sub i32 %517, %140
  %519 = add i32 %518, %141
  %520 = sub i32 %519, %143
  %521 = sub i32 %520, %158
  %522 = sub i32 %521, %166
  %523 = sub i32 %522, %169
  %524 = add i32 %523, %171
  %525 = sub i32 %524, %186
  %526 = add i32 %525, %193
  %527 = sub i32 %526, %196
  %528 = sub i32 %527, %204
  %529 = add i32 %528, %215
  %530 = sub i32 %529, %225
  %531 = sub i32 %530, %230
  %532 = sub i32 %531, %235
  %533 = sub i32 %532, %242
  %534 = sub i32 %533, %247
  %535 = sub i32 %534, %250
  %536 = add i32 %535, %256
  %537 = sub i32 %536, %263
  %538 = sub i32 %537, %265
  %539 = sub i32 %538, %270
  %540 = sub i32 %539, %280
  %541 = sub i32 %540, %287
  %542 = sub i32 %541, %295
  %543 = add i32 %542, %297
  %544 = add i32 %543, %299
  %545 = sub i32 %544, %284
  %546 = add i32 %545, %318
  %547 = add i32 %546, %315
  %548 = add i32 %547, %308
  %549 = add i32 %548, %341
  %550 = icmp eq i32 %8, %549
  %551 = select i1 %550, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %552 = tail call i32 @puts(i8* nonnull dereferenceable(1) %551)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
