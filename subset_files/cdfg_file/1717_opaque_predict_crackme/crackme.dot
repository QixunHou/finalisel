digraph "DFG for'crackme' function" {
	Node0x1d59930[shape=record, label="  %5 = xor i32 %3, %0"];
	Node0x1d59fb0[shape=record, label="  %6 = shl i32 %0, 1"];
	Node0x1d5a050[shape=record, label="  %7 = sub i32 2, %6"];
	Node0x1d5a0c0[shape=record, label="  %8 = add i32 %7, %5"];
	Node0x1d5a160[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x1d5a1d0[shape=record, label="  %10 = or i32 %9, %1"];
	Node0x1d5a240[shape=record, label="  %11 = and i32 %9, %1"];
	Node0x1d5a2b0[shape=record, label="  %12 = and i32 %3, %0"];
	Node0x1d5a320[shape=record, label="  %13 = or i32 %3, %0"];
	Node0x1d5a390[shape=record, label="  %14 = shl i32 %5, 1"];
	Node0x1d5a430[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1d5a4a0[shape=record, label="  %16 = xor i32 %0, -1"];
	Node0x1d5a510[shape=record, label="  %17 = or i32 %16, %3"];
	Node0x1d5a580[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x1d5a5f0[shape=record, label="  %19 = sub i32 %10, %13"];
	Node0x1d5a690[shape=record, label="  %20 = mul i32 %19, 3"];
	Node0x1d5a700[shape=record, label="  %21 = sub i32 %16, %1"];
	Node0x1d5a770[shape=record, label="  %22 = add i32 %21, %2"];
	Node0x1d5a7e0[shape=record, label="  %23 = add i32 %22, %11"];
	Node0x1d5a850[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x1d5a8c0[shape=record, label="  %25 = sub i32 3, %10"];
	Node0x1d5a930[shape=record, label="  %26 = add i32 %25, %3"];
	Node0x1d5a9a0[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x1d5aa10[shape=record, label="  %28 = add i32 %27, %13"];
	Node0x1d5aa80[shape=record, label="  %29 = add i32 %28, %17"];
	Node0x1d5aaf0[shape=record, label="  %30 = sub i32 %29, %18"];
	Node0x1d5ab60[shape=record, label="  %31 = sub i32 %30, %15"];
	Node0x1d5abd0[shape=record, label="  %32 = add i32 %31, %20"];
	Node0x1d5ae50[shape=record, label="  %33 = add i32 %32, %24"];
	Node0x1d5aec0[shape=record, label="  %34 = icmp eq i32 %8, %33"];
	Node0x1cfa268[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d5b360[shape=record, label="  %36 = tail call i32 @puts(i8* nonnull dereferenceable(1) %35)"];
	Node0x1d5b3b0[shape=record, label="  ret void"];
	Node0x1d59930 -> Node0x1d59fb0;
	Node0x1d59fb0 -> Node0x1d5a050;
	Node0x1d5a050 -> Node0x1d5a0c0;
	Node0x1d5a0c0 -> Node0x1d5a160;
	Node0x1d5a160 -> Node0x1d5a1d0;
	Node0x1d5a1d0 -> Node0x1d5a240;
	Node0x1d5a240 -> Node0x1d5a2b0;
	Node0x1d5a2b0 -> Node0x1d5a320;
	Node0x1d5a320 -> Node0x1d5a390;
	Node0x1d5a390 -> Node0x1d5a430;
	Node0x1d5a430 -> Node0x1d5a4a0;
	Node0x1d5a4a0 -> Node0x1d5a510;
	Node0x1d5a510 -> Node0x1d5a580;
	Node0x1d5a580 -> Node0x1d5a5f0;
	Node0x1d5a5f0 -> Node0x1d5a690;
	Node0x1d5a690 -> Node0x1d5a700;
	Node0x1d5a700 -> Node0x1d5a770;
	Node0x1d5a770 -> Node0x1d5a7e0;
	Node0x1d5a7e0 -> Node0x1d5a850;
	Node0x1d5a850 -> Node0x1d5a8c0;
	Node0x1d5a8c0 -> Node0x1d5a930;
	Node0x1d5a930 -> Node0x1d5a9a0;
	Node0x1d5a9a0 -> Node0x1d5aa10;
	Node0x1d5aa10 -> Node0x1d5aa80;
	Node0x1d5aa80 -> Node0x1d5aaf0;
	Node0x1d5aaf0 -> Node0x1d5ab60;
	Node0x1d5ab60 -> Node0x1d5abd0;
	Node0x1d5abd0 -> Node0x1d5ae50;
	Node0x1d5ae50 -> Node0x1d5aec0;
	Node0x1d5aec0 -> Node0x1cfa268;
	Node0x1cfa268 -> Node0x1d5b360;
	Node0x1d5b360 -> Node0x1d5b3b0;
edge [color=red]
	Node0x1d59fb0 -> Node0x1d5a050;
	Node0x1d5a050 -> Node0x1d5a0c0;
	Node0x1d59930 -> Node0x1d5a0c0;
	Node0x1d5a160 -> Node0x1d5a1d0;
	Node0x1d5a160 -> Node0x1d5a240;
	Node0x1d59930 -> Node0x1d5a390;
	Node0x1d5a390 -> Node0x1d5a430;
	Node0x1d5a4a0 -> Node0x1d5a510;
	Node0x1d5a510 -> Node0x1d5a580;
	Node0x1d5a1d0 -> Node0x1d5a5f0;
	Node0x1d5a320 -> Node0x1d5a5f0;
	Node0x1d5a5f0 -> Node0x1d5a690;
	Node0x1d5a4a0 -> Node0x1d5a700;
	Node0x1d5a700 -> Node0x1d5a770;
	Node0x1d5a770 -> Node0x1d5a7e0;
	Node0x1d5a240 -> Node0x1d5a7e0;
	Node0x1d5a7e0 -> Node0x1d5a850;
	Node0x1d5a1d0 -> Node0x1d5a8c0;
	Node0x1d5a8c0 -> Node0x1d5a930;
	Node0x1d5a930 -> Node0x1d5a9a0;
	Node0x1d5a2b0 -> Node0x1d5a9a0;
	Node0x1d5a9a0 -> Node0x1d5aa10;
	Node0x1d5a320 -> Node0x1d5aa10;
	Node0x1d5aa10 -> Node0x1d5aa80;
	Node0x1d5a510 -> Node0x1d5aa80;
	Node0x1d5aa80 -> Node0x1d5aaf0;
	Node0x1d5a580 -> Node0x1d5aaf0;
	Node0x1d5aaf0 -> Node0x1d5ab60;
	Node0x1d5a430 -> Node0x1d5ab60;
	Node0x1d5ab60 -> Node0x1d5abd0;
	Node0x1d5a690 -> Node0x1d5abd0;
	Node0x1d5abd0 -> Node0x1d5ae50;
	Node0x1d5a850 -> Node0x1d5ae50;
	Node0x1d5a0c0 -> Node0x1d5aec0;
	Node0x1d5ae50 -> Node0x1d5aec0;
	Node0x1d5aec0 -> Node0x1cfa268;
	Node0x1cfa268 -> Node0x1d5b360;
}
