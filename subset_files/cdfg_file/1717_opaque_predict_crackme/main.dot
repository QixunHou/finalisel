digraph "DFG for'main' function" {
	Node0x1d5b578[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d5b5f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d5b688[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1d5b6e8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1d5b798[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1d5bbc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d5bca8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1d5bda8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d5be68[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1d5bf18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1d5bfd8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1d5c088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1d56960[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1d5c288[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d5d1f8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d5d868[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1d5d8c8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1d5d940[shape=record, label="  %14 = xor i32 %13, %10"];
	Node0x1d5d9b0[shape=record, label="  %15 = shl i32 %10, 1"];
	Node0x1d5da20[shape=record, label="  %16 = sub i32 2, %15"];
	Node0x1d5da90[shape=record, label="  %17 = add i32 %16, %14"];
	Node0x1d5db00[shape=record, label="  %18 = xor i32 %12, -1"];
	Node0x1d5db70[shape=record, label="  %19 = or i32 %11, %18"];
	Node0x1d5dbe0[shape=record, label="  %20 = and i32 %11, %18"];
	Node0x1d5dc50[shape=record, label="  %21 = and i32 %13, %10"];
	Node0x1d5dcc0[shape=record, label="  %22 = or i32 %13, %10"];
	Node0x1d5dd30[shape=record, label="  %23 = shl i32 %14, 1"];
	Node0x1d5dda0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x1d5de10[shape=record, label="  %25 = xor i32 %10, -1"];
	Node0x1d5de80[shape=record, label="  %26 = or i32 %13, %25"];
	Node0x1d5def0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x1d5df60[shape=record, label="  %28 = sub i32 %19, %22"];
	Node0x1d5dfd0[shape=record, label="  %29 = mul i32 %28, 3"];
	Node0x1d5e040[shape=record, label="  %30 = sub i32 %25, %11"];
	Node0x1d5e0b0[shape=record, label="  %31 = add i32 %30, %12"];
	Node0x1d5e120[shape=record, label="  %32 = add i32 %31, %20"];
	Node0x1d5e190[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x1d5e200[shape=record, label="  %34 = sub i32 3, %19"];
	Node0x1d5e270[shape=record, label="  %35 = add i32 %34, %13"];
	Node0x1d5e2e0[shape=record, label="  %36 = add i32 %35, %21"];
	Node0x1d5e350[shape=record, label="  %37 = add i32 %36, %22"];
	Node0x1d5e3c0[shape=record, label="  %38 = add i32 %37, %26"];
	Node0x1d5e430[shape=record, label="  %39 = sub i32 %38, %27"];
	Node0x1d5e4a0[shape=record, label="  %40 = add i32 %39, %33"];
	Node0x1d5e510[shape=record, label="  %41 = sub i32 %40, %24"];
	Node0x1d5e580[shape=record, label="  %42 = add i32 %41, %29"];
	Node0x1d5e5f0[shape=record, label="  %43 = icmp eq i32 %17, %42"];
	Node0x1cfb8b8[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d5e680[shape=record, label="  %45 = call i32 @puts(i8* nonnull dereferenceable(1) %44) #5"];
	Node0x1d5e928[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1d5ea88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1d5eb98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d5eca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d5ed68[shape=record, label="  ret i32 0"];
	Node0x1d5b578 -> Node0x1d5b5f8;
	Node0x1d5b5f8 -> Node0x1d5b688;
	Node0x1d5b688 -> Node0x1d5b6e8;
	Node0x1d5b6e8 -> Node0x1d5b798;
	Node0x1d5b798 -> Node0x1d5bbc8;
	Node0x1d5bbc8 -> Node0x1d5bca8;
	Node0x1d5bca8 -> Node0x1d5bda8;
	Node0x1d5bda8 -> Node0x1d5be68;
	Node0x1d5be68 -> Node0x1d5bf18;
	Node0x1d5bf18 -> Node0x1d5bfd8;
	Node0x1d5bfd8 -> Node0x1d5c088;
	Node0x1d5c088 -> Node0x1d56960;
	Node0x1d56960 -> Node0x1d5c288;
	Node0x1d5c288 -> Node0x1d5d1f8;
	Node0x1d5d1f8 -> Node0x1d5d868;
	Node0x1d5d868 -> Node0x1d5d8c8;
	Node0x1d5d8c8 -> Node0x1d5d940;
	Node0x1d5d940 -> Node0x1d5d9b0;
	Node0x1d5d9b0 -> Node0x1d5da20;
	Node0x1d5da20 -> Node0x1d5da90;
	Node0x1d5da90 -> Node0x1d5db00;
	Node0x1d5db00 -> Node0x1d5db70;
	Node0x1d5db70 -> Node0x1d5dbe0;
	Node0x1d5dbe0 -> Node0x1d5dc50;
	Node0x1d5dc50 -> Node0x1d5dcc0;
	Node0x1d5dcc0 -> Node0x1d5dd30;
	Node0x1d5dd30 -> Node0x1d5dda0;
	Node0x1d5dda0 -> Node0x1d5de10;
	Node0x1d5de10 -> Node0x1d5de80;
	Node0x1d5de80 -> Node0x1d5def0;
	Node0x1d5def0 -> Node0x1d5df60;
	Node0x1d5df60 -> Node0x1d5dfd0;
	Node0x1d5dfd0 -> Node0x1d5e040;
	Node0x1d5e040 -> Node0x1d5e0b0;
	Node0x1d5e0b0 -> Node0x1d5e120;
	Node0x1d5e120 -> Node0x1d5e190;
	Node0x1d5e190 -> Node0x1d5e200;
	Node0x1d5e200 -> Node0x1d5e270;
	Node0x1d5e270 -> Node0x1d5e2e0;
	Node0x1d5e2e0 -> Node0x1d5e350;
	Node0x1d5e350 -> Node0x1d5e3c0;
	Node0x1d5e3c0 -> Node0x1d5e430;
	Node0x1d5e430 -> Node0x1d5e4a0;
	Node0x1d5e4a0 -> Node0x1d5e510;
	Node0x1d5e510 -> Node0x1d5e580;
	Node0x1d5e580 -> Node0x1d5e5f0;
	Node0x1d5e5f0 -> Node0x1cfb8b8;
	Node0x1cfb8b8 -> Node0x1d5e680;
	Node0x1d5e680 -> Node0x1d5e928;
	Node0x1d5e928 -> Node0x1d5ea88;
	Node0x1d5ea88 -> Node0x1d5eb98;
	Node0x1d5eb98 -> Node0x1d5eca8;
	Node0x1d5eca8 -> Node0x1d5ed68;
edge [color=red]
	Node0x1d5b578 -> Node0x1d5b798;
	Node0x1d5b798 -> Node0x1d5bbc8;
	Node0x1d5b5f8 -> Node0x1d5bca8;
	Node0x1d5bca8 -> Node0x1d5bda8;
	Node0x1d5b688 -> Node0x1d5be68;
	Node0x1d5be68 -> Node0x1d5bf18;
	Node0x1d5b6e8 -> Node0x1d5bfd8;
	Node0x1d5bfd8 -> Node0x1d5c088;
	Node0x1d5b578 -> Node0x1d56960;
	Node0x1d5b5f8 -> Node0x1d56960;
	Node0x1d5b688 -> Node0x1d56960;
	Node0x1d5b6e8 -> Node0x1d56960;
	Node0x1d5b578 -> Node0x1d5c288;
	Node0x1d5b5f8 -> Node0x1d5d1f8;
	Node0x1d5b688 -> Node0x1d5d868;
	Node0x1d5b6e8 -> Node0x1d5d8c8;
	Node0x1d5d8c8 -> Node0x1d5d940;
	Node0x1d5c288 -> Node0x1d5d940;
	Node0x1d5c288 -> Node0x1d5d9b0;
	Node0x1d5d9b0 -> Node0x1d5da20;
	Node0x1d5da20 -> Node0x1d5da90;
	Node0x1d5d940 -> Node0x1d5da90;
	Node0x1d5d868 -> Node0x1d5db00;
	Node0x1d5d1f8 -> Node0x1d5db70;
	Node0x1d5db00 -> Node0x1d5db70;
	Node0x1d5d1f8 -> Node0x1d5dbe0;
	Node0x1d5db00 -> Node0x1d5dbe0;
	Node0x1d5d8c8 -> Node0x1d5dc50;
	Node0x1d5c288 -> Node0x1d5dc50;
	Node0x1d5d8c8 -> Node0x1d5dcc0;
	Node0x1d5c288 -> Node0x1d5dcc0;
	Node0x1d5d940 -> Node0x1d5dd30;
	Node0x1d5dd30 -> Node0x1d5dda0;
	Node0x1d5c288 -> Node0x1d5de10;
	Node0x1d5d8c8 -> Node0x1d5de80;
	Node0x1d5de10 -> Node0x1d5de80;
	Node0x1d5de80 -> Node0x1d5def0;
	Node0x1d5db70 -> Node0x1d5df60;
	Node0x1d5dcc0 -> Node0x1d5df60;
	Node0x1d5df60 -> Node0x1d5dfd0;
	Node0x1d5de10 -> Node0x1d5e040;
	Node0x1d5d1f8 -> Node0x1d5e040;
	Node0x1d5e040 -> Node0x1d5e0b0;
	Node0x1d5d868 -> Node0x1d5e0b0;
	Node0x1d5e0b0 -> Node0x1d5e120;
	Node0x1d5dbe0 -> Node0x1d5e120;
	Node0x1d5e120 -> Node0x1d5e190;
	Node0x1d5db70 -> Node0x1d5e200;
	Node0x1d5e200 -> Node0x1d5e270;
	Node0x1d5d8c8 -> Node0x1d5e270;
	Node0x1d5e270 -> Node0x1d5e2e0;
	Node0x1d5dc50 -> Node0x1d5e2e0;
	Node0x1d5e2e0 -> Node0x1d5e350;
	Node0x1d5dcc0 -> Node0x1d5e350;
	Node0x1d5e350 -> Node0x1d5e3c0;
	Node0x1d5de80 -> Node0x1d5e3c0;
	Node0x1d5e3c0 -> Node0x1d5e430;
	Node0x1d5def0 -> Node0x1d5e430;
	Node0x1d5e430 -> Node0x1d5e4a0;
	Node0x1d5e190 -> Node0x1d5e4a0;
	Node0x1d5e4a0 -> Node0x1d5e510;
	Node0x1d5dda0 -> Node0x1d5e510;
	Node0x1d5e510 -> Node0x1d5e580;
	Node0x1d5dfd0 -> Node0x1d5e580;
	Node0x1d5da90 -> Node0x1d5e5f0;
	Node0x1d5e580 -> Node0x1d5e5f0;
	Node0x1d5e5f0 -> Node0x1cfb8b8;
	Node0x1cfb8b8 -> Node0x1d5e680;
	Node0x1d5bfd8 -> Node0x1d5e928;
	Node0x1d5be68 -> Node0x1d5ea88;
	Node0x1d5bca8 -> Node0x1d5eb98;
	Node0x1d5b798 -> Node0x1d5eca8;
}
