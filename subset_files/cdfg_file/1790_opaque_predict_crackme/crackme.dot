digraph "DFG for'crackme' function" {
	Node0x13545d0[shape=record, label="  %4 = and i32 %2, %0"];
	Node0x1354690[shape=record, label="  %5 = or i32 %1, %0"];
	Node0x1354d10[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x1354d80[shape=record, label="  %7 = or i32 %4, %6"];
	Node0x1354df0[shape=record, label="  %8 = xor i32 %1, -1"];
	Node0x1354e60[shape=record, label="  %9 = and i32 %2, %1"];
	Node0x1354ed0[shape=record, label="  %10 = xor i32 %0, -1"];
	Node0x1354f40[shape=record, label="  %11 = or i32 %10, %1"];
	Node0x1354fb0[shape=record, label="  %12 = xor i32 %11, %9"];
	Node0x1355020[shape=record, label="  %13 = and i32 %10, %1"];
	Node0x1355090[shape=record, label="  %14 = or i32 %4, %13"];
	Node0x1355100[shape=record, label="  %15 = sub i32 %12, %14"];
	Node0x13551a0[shape=record, label="  %16 = xor i32 %0, 2147483647"];
	Node0x1355210[shape=record, label="  %17 = xor i32 %16, %1"];
	Node0x1355280[shape=record, label="  %18 = or i32 %4, %17"];
	Node0x1355320[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1355390[shape=record, label="  %20 = xor i32 %10, %2"];
	Node0x1355400[shape=record, label="  %21 = or i32 %20, %6"];
	Node0x1355470[shape=record, label="  %22 = and i32 %9, %0"];
	Node0x13554e0[shape=record, label="  %23 = or i32 %2, %1"];
	Node0x1355550[shape=record, label="  %24 = xor i32 %23, %10"];
	Node0x13555c0[shape=record, label="  %25 = xor i32 %24, %22"];
	Node0x1355660[shape=record, label="  %26 = xor i32 %23, 1073741823"];
	Node0x13556d0[shape=record, label="  %27 = and i32 %26, %10"];
	Node0x1355770[shape=record, label="  %28 = shl i32 %27, 2"];
	Node0x13557e0[shape=record, label="  %29 = xor i32 %2, -1"];
	Node0x1355850[shape=record, label="  %30 = and i32 %29, %1"];
	Node0x13558c0[shape=record, label="  %31 = and i32 %30, %10"];
	Node0x1355930[shape=record, label="  %32 = and i32 %30, %0"];
	Node0x1355bb0[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x1355c20[shape=record, label="  %34 = and i32 %8, %2"];
	Node0x1355c90[shape=record, label="  %35 = and i32 %34, %10"];
	Node0x1355d30[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0x1355da0[shape=record, label="  %37 = and i32 %9, %10"];
	Node0x1355e10[shape=record, label="  %38 = and i32 %34, %0"];
	Node0x1355eb0[shape=record, label="  %39 = mul i32 %38, 6"];
	Node0x1355f50[shape=record, label="  %40 = mul i32 %22, 5"];
	Node0x1355fc0[shape=record, label="  %41 = sub i32 %15, %21"];
	Node0x1356030[shape=record, label="  %42 = add i32 %41, %31"];
	Node0x13560a0[shape=record, label="  %43 = add i32 %42, %37"];
	Node0x1356110[shape=record, label="  %44 = sub i32 %43, %19"];
	Node0x1356180[shape=record, label="  %45 = sub i32 %44, %25"];
	Node0x13561f0[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x1356260[shape=record, label="  %47 = add i32 %46, %36"];
	Node0x13562d0[shape=record, label="  %48 = add i32 %47, %39"];
	Node0x1356340[shape=record, label="  %49 = add i32 %48, %40"];
	Node0x13563b0[shape=record, label="  %50 = add i32 %49, %28"];
	Node0x1356420[shape=record, label="  %51 = icmp eq i32 %7, %50"];
	Node0x12f5268[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x13568c0[shape=record, label="  %53 = tail call i32 @puts(i8* nonnull dereferenceable(1) %52)"];
	Node0x1356910[shape=record, label="  ret void"];
	Node0x13545d0 -> Node0x1354690;
	Node0x1354690 -> Node0x1354d10;
	Node0x1354d10 -> Node0x1354d80;
	Node0x1354d80 -> Node0x1354df0;
	Node0x1354df0 -> Node0x1354e60;
	Node0x1354e60 -> Node0x1354ed0;
	Node0x1354ed0 -> Node0x1354f40;
	Node0x1354f40 -> Node0x1354fb0;
	Node0x1354fb0 -> Node0x1355020;
	Node0x1355020 -> Node0x1355090;
	Node0x1355090 -> Node0x1355100;
	Node0x1355100 -> Node0x13551a0;
	Node0x13551a0 -> Node0x1355210;
	Node0x1355210 -> Node0x1355280;
	Node0x1355280 -> Node0x1355320;
	Node0x1355320 -> Node0x1355390;
	Node0x1355390 -> Node0x1355400;
	Node0x1355400 -> Node0x1355470;
	Node0x1355470 -> Node0x13554e0;
	Node0x13554e0 -> Node0x1355550;
	Node0x1355550 -> Node0x13555c0;
	Node0x13555c0 -> Node0x1355660;
	Node0x1355660 -> Node0x13556d0;
	Node0x13556d0 -> Node0x1355770;
	Node0x1355770 -> Node0x13557e0;
	Node0x13557e0 -> Node0x1355850;
	Node0x1355850 -> Node0x13558c0;
	Node0x13558c0 -> Node0x1355930;
	Node0x1355930 -> Node0x1355bb0;
	Node0x1355bb0 -> Node0x1355c20;
	Node0x1355c20 -> Node0x1355c90;
	Node0x1355c90 -> Node0x1355d30;
	Node0x1355d30 -> Node0x1355da0;
	Node0x1355da0 -> Node0x1355e10;
	Node0x1355e10 -> Node0x1355eb0;
	Node0x1355eb0 -> Node0x1355f50;
	Node0x1355f50 -> Node0x1355fc0;
	Node0x1355fc0 -> Node0x1356030;
	Node0x1356030 -> Node0x13560a0;
	Node0x13560a0 -> Node0x1356110;
	Node0x1356110 -> Node0x1356180;
	Node0x1356180 -> Node0x13561f0;
	Node0x13561f0 -> Node0x1356260;
	Node0x1356260 -> Node0x13562d0;
	Node0x13562d0 -> Node0x1356340;
	Node0x1356340 -> Node0x13563b0;
	Node0x13563b0 -> Node0x1356420;
	Node0x1356420 -> Node0x12f5268;
	Node0x12f5268 -> Node0x13568c0;
	Node0x13568c0 -> Node0x1356910;
edge [color=red]
	Node0x1354690 -> Node0x1354d10;
	Node0x13545d0 -> Node0x1354d80;
	Node0x1354d10 -> Node0x1354d80;
	Node0x1354ed0 -> Node0x1354f40;
	Node0x1354f40 -> Node0x1354fb0;
	Node0x1354e60 -> Node0x1354fb0;
	Node0x1354ed0 -> Node0x1355020;
	Node0x13545d0 -> Node0x1355090;
	Node0x1355020 -> Node0x1355090;
	Node0x1354fb0 -> Node0x1355100;
	Node0x1355090 -> Node0x1355100;
	Node0x13551a0 -> Node0x1355210;
	Node0x13545d0 -> Node0x1355280;
	Node0x1355210 -> Node0x1355280;
	Node0x1355280 -> Node0x1355320;
	Node0x1354ed0 -> Node0x1355390;
	Node0x1355390 -> Node0x1355400;
	Node0x1354d10 -> Node0x1355400;
	Node0x1354e60 -> Node0x1355470;
	Node0x13554e0 -> Node0x1355550;
	Node0x1354ed0 -> Node0x1355550;
	Node0x1355550 -> Node0x13555c0;
	Node0x1355470 -> Node0x13555c0;
	Node0x13554e0 -> Node0x1355660;
	Node0x1355660 -> Node0x13556d0;
	Node0x1354ed0 -> Node0x13556d0;
	Node0x13556d0 -> Node0x1355770;
	Node0x13557e0 -> Node0x1355850;
	Node0x1355850 -> Node0x13558c0;
	Node0x1354ed0 -> Node0x13558c0;
	Node0x1355850 -> Node0x1355930;
	Node0x1355930 -> Node0x1355bb0;
	Node0x1354df0 -> Node0x1355c20;
	Node0x1355c20 -> Node0x1355c90;
	Node0x1354ed0 -> Node0x1355c90;
	Node0x1355c90 -> Node0x1355d30;
	Node0x1354e60 -> Node0x1355da0;
	Node0x1354ed0 -> Node0x1355da0;
	Node0x1355c20 -> Node0x1355e10;
	Node0x1355e10 -> Node0x1355eb0;
	Node0x1355470 -> Node0x1355f50;
	Node0x1355100 -> Node0x1355fc0;
	Node0x1355400 -> Node0x1355fc0;
	Node0x1355fc0 -> Node0x1356030;
	Node0x13558c0 -> Node0x1356030;
	Node0x1356030 -> Node0x13560a0;
	Node0x1355da0 -> Node0x13560a0;
	Node0x13560a0 -> Node0x1356110;
	Node0x1355320 -> Node0x1356110;
	Node0x1356110 -> Node0x1356180;
	Node0x13555c0 -> Node0x1356180;
	Node0x1356180 -> Node0x13561f0;
	Node0x1355bb0 -> Node0x13561f0;
	Node0x13561f0 -> Node0x1356260;
	Node0x1355d30 -> Node0x1356260;
	Node0x1356260 -> Node0x13562d0;
	Node0x1355eb0 -> Node0x13562d0;
	Node0x13562d0 -> Node0x1356340;
	Node0x1355f50 -> Node0x1356340;
	Node0x1356340 -> Node0x13563b0;
	Node0x1355770 -> Node0x13563b0;
	Node0x1354d80 -> Node0x1356420;
	Node0x13563b0 -> Node0x1356420;
	Node0x1356420 -> Node0x12f5268;
	Node0x12f5268 -> Node0x13568c0;
}
