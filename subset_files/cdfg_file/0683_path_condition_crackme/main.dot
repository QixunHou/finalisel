digraph "DFG for'main' function" {
	Node0x9e7a08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x9e7a88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x9e7b18[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x9e7f78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x9e8058[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x9e8178[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9e83b0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x9e8468[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x9e93d8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x9e9a60[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x9e9ad0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x9e9b40[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x9e9bb0[shape=record, label="  %11 = sub i32 %9, %10"];
	Node0x9e9c20[shape=record, label="  %12 = shl i32 %8, 1"];
	Node0x9e9c90[shape=record, label="  %13 = and i32 %6, %8"];
	Node0x9e9d00[shape=record, label="  %14 = xor i32 %10, -1"];
	Node0x9e9d70[shape=record, label="  %15 = xor i32 %9, -1"];
	Node0x9e9de0[shape=record, label="  %16 = mul i32 %13, -5"];
	Node0x9e9e50[shape=record, label="  %17 = and i32 %7, %6"];
	Node0x9e9ec0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x9e9f30[shape=record, label="  %19 = add i32 %15, %14"];
	Node0x9e9fa0[shape=record, label="  %20 = mul i32 %19, -3"];
	Node0x9ea010[shape=record, label="  %21 = add i32 %12, -2"];
	Node0x9ea080[shape=record, label="  %22 = add i32 %21, %13"];
	Node0x9ea0f0[shape=record, label="  %23 = add i32 %22, %16"];
	Node0x9ea160[shape=record, label="  %24 = sub i32 %23, %18"];
	Node0x9ea1d0[shape=record, label="  %25 = add i32 %24, %20"];
	Node0x9ea240[shape=record, label="  %26 = icmp eq i32 %11, %25"];
	Node0x9889d8[shape=record, label="  %27 = select i1 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x9ea2d0[shape=record, label="  %28 = call i32 @puts(i8* nonnull dereferenceable(1) %27) #5"];
	Node0x9ea528[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9ea688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x9ea748[shape=record, label="  ret i32 0"];
	Node0x9e7a08 -> Node0x9e7a88;
	Node0x9e7a88 -> Node0x9e7b18;
	Node0x9e7b18 -> Node0x9e7f78;
	Node0x9e7f78 -> Node0x9e8058;
	Node0x9e8058 -> Node0x9e8178;
	Node0x9e8178 -> Node0x9e83b0;
	Node0x9e83b0 -> Node0x9e8468;
	Node0x9e8468 -> Node0x9e93d8;
	Node0x9e93d8 -> Node0x9e9a60;
	Node0x9e9a60 -> Node0x9e9ad0;
	Node0x9e9ad0 -> Node0x9e9b40;
	Node0x9e9b40 -> Node0x9e9bb0;
	Node0x9e9bb0 -> Node0x9e9c20;
	Node0x9e9c20 -> Node0x9e9c90;
	Node0x9e9c90 -> Node0x9e9d00;
	Node0x9e9d00 -> Node0x9e9d70;
	Node0x9e9d70 -> Node0x9e9de0;
	Node0x9e9de0 -> Node0x9e9e50;
	Node0x9e9e50 -> Node0x9e9ec0;
	Node0x9e9ec0 -> Node0x9e9f30;
	Node0x9e9f30 -> Node0x9e9fa0;
	Node0x9e9fa0 -> Node0x9ea010;
	Node0x9ea010 -> Node0x9ea080;
	Node0x9ea080 -> Node0x9ea0f0;
	Node0x9ea0f0 -> Node0x9ea160;
	Node0x9ea160 -> Node0x9ea1d0;
	Node0x9ea1d0 -> Node0x9ea240;
	Node0x9ea240 -> Node0x9889d8;
	Node0x9889d8 -> Node0x9ea2d0;
	Node0x9ea2d0 -> Node0x9ea528;
	Node0x9ea528 -> Node0x9ea688;
	Node0x9ea688 -> Node0x9ea748;
edge [color=red]
	Node0x9e7a08 -> Node0x9e7b18;
	Node0x9e7b18 -> Node0x9e7f78;
	Node0x9e7a88 -> Node0x9e8058;
	Node0x9e8058 -> Node0x9e8178;
	Node0x9e7a08 -> Node0x9e83b0;
	Node0x9e7a88 -> Node0x9e83b0;
	Node0x9e7a08 -> Node0x9e8468;
	Node0x9e7a88 -> Node0x9e93d8;
	Node0x9e93d8 -> Node0x9e9a60;
	Node0x9e8468 -> Node0x9e9ad0;
	Node0x9e9a60 -> Node0x9e9ad0;
	Node0x9e93d8 -> Node0x9e9b40;
	Node0x9e8468 -> Node0x9e9b40;
	Node0x9e9ad0 -> Node0x9e9bb0;
	Node0x9e9b40 -> Node0x9e9bb0;
	Node0x9e9a60 -> Node0x9e9c20;
	Node0x9e8468 -> Node0x9e9c90;
	Node0x9e9a60 -> Node0x9e9c90;
	Node0x9e9b40 -> Node0x9e9d00;
	Node0x9e9ad0 -> Node0x9e9d70;
	Node0x9e9c90 -> Node0x9e9de0;
	Node0x9e93d8 -> Node0x9e9e50;
	Node0x9e8468 -> Node0x9e9e50;
	Node0x9e9e50 -> Node0x9e9ec0;
	Node0x9e9d70 -> Node0x9e9f30;
	Node0x9e9d00 -> Node0x9e9f30;
	Node0x9e9f30 -> Node0x9e9fa0;
	Node0x9e9c20 -> Node0x9ea010;
	Node0x9ea010 -> Node0x9ea080;
	Node0x9e9c90 -> Node0x9ea080;
	Node0x9ea080 -> Node0x9ea0f0;
	Node0x9e9de0 -> Node0x9ea0f0;
	Node0x9ea0f0 -> Node0x9ea160;
	Node0x9e9ec0 -> Node0x9ea160;
	Node0x9ea160 -> Node0x9ea1d0;
	Node0x9e9fa0 -> Node0x9ea1d0;
	Node0x9e9bb0 -> Node0x9ea240;
	Node0x9ea1d0 -> Node0x9ea240;
	Node0x9ea240 -> Node0x9889d8;
	Node0x9889d8 -> Node0x9ea2d0;
	Node0x9e8058 -> Node0x9ea528;
	Node0x9e7b18 -> Node0x9ea688;
}
