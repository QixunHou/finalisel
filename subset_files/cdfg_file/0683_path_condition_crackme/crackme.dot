digraph "DFG for'crackme' function" {
	Node0x9e6a90[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x9e6b00[shape=record, label="  %4 = or i32 %3, %0"];
	Node0x9e6bc0[shape=record, label="  %5 = or i32 %1, %0"];
	Node0x9e6c30[shape=record, label="  %6 = sub i32 %4, %5"];
	Node0x9e6ca0[shape=record, label="  %7 = shl i32 %3, 1"];
	Node0x9e6d10[shape=record, label="  %8 = and i32 %3, %0"];
	Node0x9e6d80[shape=record, label="  %9 = xor i32 %5, -1"];
	Node0x9e6df0[shape=record, label="  %10 = xor i32 %4, -1"];
	Node0x9e6e90[shape=record, label="  %11 = mul i32 %8, -5"];
	Node0x9e6f00[shape=record, label="  %12 = and i32 %1, %0"];
	Node0x9e6f70[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x9e6fe0[shape=record, label="  %14 = add i32 %10, %9"];
	Node0x9e7080[shape=record, label="  %15 = mul i32 %14, -3"];
	Node0x9e7120[shape=record, label="  %16 = add i32 %7, -2"];
	Node0x9e7190[shape=record, label="  %17 = add i32 %16, %8"];
	Node0x9e7200[shape=record, label="  %18 = add i32 %17, %11"];
	Node0x9e7270[shape=record, label="  %19 = sub i32 %18, %13"];
	Node0x9e72e0[shape=record, label="  %20 = add i32 %19, %15"];
	Node0x9e7350[shape=record, label="  %21 = icmp eq i32 %6, %20"];
	Node0x987268[shape=record, label="  %22 = select i1 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x9e77f0[shape=record, label="  %23 = tail call i32 @puts(i8* nonnull dereferenceable(1) %22)"];
	Node0x9e7840[shape=record, label="  ret void"];
	Node0x9e6a90 -> Node0x9e6b00;
	Node0x9e6b00 -> Node0x9e6bc0;
	Node0x9e6bc0 -> Node0x9e6c30;
	Node0x9e6c30 -> Node0x9e6ca0;
	Node0x9e6ca0 -> Node0x9e6d10;
	Node0x9e6d10 -> Node0x9e6d80;
	Node0x9e6d80 -> Node0x9e6df0;
	Node0x9e6df0 -> Node0x9e6e90;
	Node0x9e6e90 -> Node0x9e6f00;
	Node0x9e6f00 -> Node0x9e6f70;
	Node0x9e6f70 -> Node0x9e6fe0;
	Node0x9e6fe0 -> Node0x9e7080;
	Node0x9e7080 -> Node0x9e7120;
	Node0x9e7120 -> Node0x9e7190;
	Node0x9e7190 -> Node0x9e7200;
	Node0x9e7200 -> Node0x9e7270;
	Node0x9e7270 -> Node0x9e72e0;
	Node0x9e72e0 -> Node0x9e7350;
	Node0x9e7350 -> Node0x987268;
	Node0x987268 -> Node0x9e77f0;
	Node0x9e77f0 -> Node0x9e7840;
edge [color=red]
	Node0x9e6a90 -> Node0x9e6b00;
	Node0x9e6b00 -> Node0x9e6c30;
	Node0x9e6bc0 -> Node0x9e6c30;
	Node0x9e6a90 -> Node0x9e6ca0;
	Node0x9e6a90 -> Node0x9e6d10;
	Node0x9e6bc0 -> Node0x9e6d80;
	Node0x9e6b00 -> Node0x9e6df0;
	Node0x9e6d10 -> Node0x9e6e90;
	Node0x9e6f00 -> Node0x9e6f70;
	Node0x9e6df0 -> Node0x9e6fe0;
	Node0x9e6d80 -> Node0x9e6fe0;
	Node0x9e6fe0 -> Node0x9e7080;
	Node0x9e6ca0 -> Node0x9e7120;
	Node0x9e7120 -> Node0x9e7190;
	Node0x9e6d10 -> Node0x9e7190;
	Node0x9e7190 -> Node0x9e7200;
	Node0x9e6e90 -> Node0x9e7200;
	Node0x9e7200 -> Node0x9e7270;
	Node0x9e6f70 -> Node0x9e7270;
	Node0x9e7270 -> Node0x9e72e0;
	Node0x9e7080 -> Node0x9e72e0;
	Node0x9e6c30 -> Node0x9e7350;
	Node0x9e72e0 -> Node0x9e7350;
	Node0x9e7350 -> Node0x987268;
	Node0x987268 -> Node0x9e77f0;
}
