; ModuleID = '../.././c_source_file/1332_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1332_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %2, %1
  %5 = xor i32 %4, -1
  %6 = mul i32 %5, -2
  %7 = xor i32 %2, %1
  %8 = or i32 %1, %0
  %9 = xor i32 %8, %2
  %10 = xor i32 %7, -1
  %11 = xor i32 %10, %0
  %12 = xor i32 %1, -1
  %13 = or i32 %12, %0
  %14 = xor i32 %2, %0
  %15 = and i32 %14, %13
  %16 = and i32 %2, %0
  %17 = xor i32 %16, %1
  %18 = or i32 %2, %0
  %19 = xor i32 %18, -1
  %20 = xor i32 %1, %0
  %21 = or i32 %20, %19
  %22 = xor i32 %2, -1
  %23 = or i32 %22, %0
  %24 = shl i32 %23, 1
  %25 = and i32 %22, %0
  %26 = xor i32 %25, %1
  %27 = shl i32 %26, 1
  %28 = and i32 %22, %1
  %29 = xor i32 %28, -1
  %30 = xor i32 %16, %29
  %31 = and i32 %8, %10
  %32 = xor i32 %8, -1
  %33 = or i32 %10, %32
  %34 = and i32 %1, %0
  %35 = xor i32 %23, -1
  %36 = or i32 %34, %35
  %37 = xor i32 %13, -1
  %38 = or i32 %10, %37
  %39 = or i32 %22, %1
  %40 = xor i32 %39, -1
  %41 = xor i32 %20, -1
  %42 = or i32 %16, %41
  %43 = xor i32 %14, -1
  %44 = or i32 %20, %43
  %45 = or i32 %16, %32
  %46 = shl i32 %45, 1
  %47 = and i32 %23, %12
  %48 = shl i32 %47, 1
  %49 = and i32 %12, %0
  %50 = xor i32 %49, -1
  %51 = xor i32 %50, %2
  %52 = and i32 %29, %0
  %53 = or i32 %35, %41
  %54 = or i32 %14, %49
  %55 = xor i32 %34, -1
  %56 = and i32 %7, %55
  %57 = xor i32 %0, -1
  %58 = and i32 %4, %57
  %59 = and i32 %7, %0
  %60 = xor i32 %59, -1
  %61 = xor i32 %58, %60
  %62 = and i32 %41, %2
  %63 = or i32 %2, %1
  %64 = or i32 %63, %57
  %65 = or i32 %16, %12
  %66 = and i32 %14, %8
  %67 = and i32 %18, %41
  %68 = shl i32 %67, 1
  %69 = or i32 %35, %12
  %70 = xor i32 %25, -1
  %71 = xor i32 %70, %1
  %72 = and i32 %14, %50
  %73 = shl i32 %72, 2
  %74 = or i32 %25, %40
  %75 = or i32 %14, %1
  %76 = or i32 %7, %34
  %77 = or i32 %35, %1
  %78 = xor i32 %63, -1
  %79 = xor i32 %78, %0
  %80 = or i32 %40, %57
  %81 = and i32 %13, %10
  %82 = shl i32 %81, 1
  %83 = shl i32 %12, 1
  %84 = and i32 %14, %1
  %85 = or i32 %25, %20
  %86 = or i32 %25, %1
  %87 = or i32 %7, %57
  %88 = shl i32 %87, 1
  %89 = and i32 %12, %2
  %90 = and i32 %89, %57
  %91 = or i32 %12, %2
  %92 = and i32 %91, %0
  %93 = xor i32 %92, 2147483647
  %94 = xor i32 %93, %90
  %95 = shl i32 %94, 1
  %96 = or i32 %20, %22
  %97 = xor i32 %49, %5
  %98 = shl i32 %97, 1
  %99 = or i32 %39, %0
  %100 = and i32 %4, %0
  %101 = xor i32 %63, %0
  %102 = or i32 %100, %101
  %103 = add i32 %49, 1
  %104 = or i32 %4, %57
  %105 = shl i32 %104, 1
  %106 = or i32 %43, %41
  %107 = or i32 %14, %12
  %108 = shl i32 %107, 1
  %109 = and i32 %13, %43
  %110 = or i32 %4, %0
  %111 = and i32 %13, %22
  %112 = and i32 %89, %0
  %113 = and i32 %91, %57
  %114 = xor i32 %112, -1
  %115 = xor i32 %113, %114
  %116 = shl i32 %49, 1
  %117 = and i32 %20, %22
  %118 = xor i32 %16, -1
  %119 = and i32 %118, %41
  %120 = xor i32 %100, -1
  %121 = xor i32 %101, %120
  %122 = and i32 %43, %12
  %123 = or i32 %14, %37
  %124 = and i32 %63, %0
  %125 = xor i32 %124, 2147483647
  %126 = xor i32 %125, %58
  %127 = or i32 %7, %0
  %128 = xor i32 %112, %127
  %129 = or i32 %28, %57
  %130 = xor i32 %7, %0
  %131 = and i32 %10, %55
  %132 = shl i32 %127, 2
  %133 = or i32 %10, %0
  %134 = xor i32 %118, %1
  %135 = and i32 %7, %50
  %136 = or i32 %49, %43
  %137 = and i32 %20, %70
  %138 = and i32 %23, %1
  %139 = xor i32 %127, -1
  %140 = or i32 %112, %139
  %141 = xor i32 %16, %63
  %142 = and i32 %5, %57
  %143 = shl i32 %142, 1
  %144 = xor i32 %35, %1
  %145 = or i32 %34, %2
  %146 = or i32 %49, %22
  %147 = and i32 %18, %1
  %148 = or i32 %14, %41
  %149 = or i32 %4, %49
  %150 = and i32 %43, %50
  %151 = xor i32 %90, %87
  %152 = and i32 %7, %8
  %153 = and i32 %43, %41
  %154 = and i32 %118, %1
  %155 = and i32 %10, %57
  %156 = and i32 %8, %22
  %157 = xor i32 %87, 2147483647
  %158 = or i32 %157, %90
  %159 = or i32 %29, %0
  %160 = shl i32 %29, 1
  %161 = xor i32 %32, %2
  %162 = xor i32 %29, %0
  %163 = or i32 %43, %37
  %164 = and i32 %14, %20
  %165 = and i32 %43, %1
  %166 = or i32 %34, %22
  %167 = xor i32 %19, %1
  %168 = or i32 %16, %1
  %169 = or i32 %19, %41
  %170 = and i32 %63, %57
  %171 = or i32 %100, %170
  %172 = add i32 %13, 1
  %173 = or i32 %28, %0
  %174 = xor i32 %23, %1
  %175 = or i32 %5, %0
  %176 = or i32 %34, %19
  %177 = and i32 %39, %0
  %178 = or i32 %49, %10
  %179 = or i32 %43, %12
  %180 = shl i32 %179, 1
  %181 = and i32 %22, %50
  %182 = add i32 %25, 1
  %183 = and i32 %22, %41
  %184 = xor i32 %16, %13
  %185 = and i32 %7, %57
  %186 = xor i32 %185, %120
  %187 = and i32 %13, %2
  %188 = and i32 %8, %43
  %189 = and i32 %14, %12
  %190 = or i32 %16, %20
  %191 = add i32 %14, 1
  %192 = and i32 %20, %118
  %193 = xor i32 %25, %5
  %194 = or i32 %43, %1
  %195 = xor i32 %28, %0
  %196 = or i32 %78, %0
  %197 = add i32 %8, 1
  %198 = and i32 %18, %20
  %199 = or i32 %10, %57
  %200 = or i32 %25, %12
  %201 = xor i32 %37, %2
  %202 = xor i32 %16, %8
  %203 = xor i32 %34, %2
  %204 = and i32 %39, %57
  %205 = or i32 %90, %92
  %206 = shl i32 %205, 1
  %207 = or i32 %63, %0
  %208 = or i32 %19, %1
  %209 = xor i32 %18, %34
  %210 = or i32 %32, %2
  %211 = or i32 %43, %32
  %212 = xor i32 %91, %0
  %213 = or i32 %112, %212
  %214 = and i32 %5, %0
  %215 = and i32 %8, %2
  %216 = or i32 %28, %49
  %217 = or i32 %112, %130
  %218 = and i32 %29, %57
  %219 = xor i32 %39, %34
  %220 = xor i32 %49, %2
  %221 = or i32 %29, %57
  %222 = and i32 %14, %55
  %223 = xor i32 %13, %2
  %224 = or i32 %34, %43
  %225 = xor i32 %49, %29
  %226 = or i32 %58, %124
  %227 = or i32 %78, %57
  %228 = or i32 %25, %41
  %229 = xor i32 %23, %34
  %230 = or i32 %5, %57
  %231 = or i32 %58, %59
  %232 = and i32 %14, %41
  %233 = xor i32 %212, %114
  %234 = xor i32 %39, %0
  %235 = or i32 %34, %78
  %236 = or i32 %16, %78
  %237 = or i32 %37, %2
  %238 = and i32 %22, %55
  %239 = or i32 %7, %37
  %240 = shl i32 %239, 2
  %241 = xor i32 %100, %130
  %242 = or i32 %7, %49
  %243 = or i32 %22, %37
  %244 = and i32 %118, %12
  %245 = shl i32 %244, 1
  %246 = and i32 %70, %1
  %247 = or i32 %49, %2
  %248 = xor i32 %130, %114
  %249 = and i32 %70, %41
  %250 = shl i32 %249, 1
  %251 = xor i32 %5, %0
  %252 = or i32 %16, %37
  %253 = or i32 %34, %40
  %254 = or i32 %112, %113
  %255 = xor i32 %18, %1
  %256 = or i32 %22, %41
  %257 = and i32 %78, %57
  %258 = shl i32 %257, 2
  %259 = and i32 %28, %57
  %260 = mul i32 %259, -12
  %261 = and i32 %78, %0
  %262 = mul i32 %261, -21
  %263 = and i32 %28, %0
  %264 = mul i32 %263, -9
  %265 = and i32 %40, %57
  %266 = mul i32 %265, 10
  %267 = shl i32 %58, 2
  %268 = and i32 %40, %0
  %269 = add i32 %237, %243
  %270 = add i32 %269, %118
  %271 = add i32 %270, %39
  %272 = add i32 %271, %28
  %273 = add i32 %272, %96
  %274 = add i32 %273, %252
  %275 = add i32 %274, %227
  %276 = add i32 %275, %207
  %277 = add i32 %276, %189
  %278 = add i32 %277, %163
  %279 = add i32 %278, %153
  %280 = add i32 %279, %149
  %281 = add i32 %280, %99
  %282 = add i32 %281, %74
  %283 = add i32 %282, %64
  %284 = add i32 %283, %54
  %285 = add i32 %284, %126
  %286 = add i32 %285, %158
  %287 = shl i32 %286, 1
  %288 = sub i32 %223, %210
  %289 = sub i32 %288, %203
  %290 = add i32 %289, %137
  %291 = add i32 %290, %268
  %292 = sub i32 %291, %17
  %293 = mul i32 %292, 5
  %294 = add i32 %39, %23
  %295 = add i32 %294, 2
  %296 = add i32 %295, %190
  %297 = sub i32 %296, %100
  %298 = mul i32 %297, 3
  %299 = sub i32 -2, %0
  %300 = sub i32 %299, %83
  %301 = add i32 %300, %103
  %302 = sub i32 %301, %20
  %303 = add i32 %302, %172
  %304 = sub i32 %303, %8
  %305 = sub i32 %304, %34
  %306 = add i32 %305, %197
  %307 = add i32 %306, %55
  %308 = add i32 %307, %13
  %309 = sub i32 %308, %9
  %310 = sub i32 %309, %4
  %311 = add i32 %310, %51
  %312 = add i32 %311, %62
  %313 = add i32 %312, %111
  %314 = sub i32 %313, %116
  %315 = add i32 %314, %117
  %316 = add i32 %315, %145
  %317 = sub i32 %316, %146
  %318 = sub i32 %317, %156
  %319 = add i32 %318, %14
  %320 = sub i32 %319, %161
  %321 = sub i32 %320, %166
  %322 = add i32 %321, %181
  %323 = add i32 %322, %182
  %324 = sub i32 %323, %183
  %325 = add i32 %324, %187
  %326 = add i32 %325, %191
  %327 = sub i32 %326, %201
  %328 = sub i32 %327, %215
  %329 = add i32 %328, %19
  %330 = add i32 %329, %220
  %331 = add i32 %330, %238
  %332 = sub i32 %331, %247
  %333 = add i32 %332, %256
  %334 = add i32 %333, %11
  %335 = add i32 %334, %15
  %336 = sub i32 %335, %21
  %337 = sub i32 %336, %24
  %338 = add i32 %337, %30
  %339 = add i32 %338, %31
  %340 = add i32 %339, %33
  %341 = add i32 %340, %36
  %342 = sub i32 %341, %38
  %343 = add i32 %342, %42
  %344 = add i32 %343, %44
  %345 = sub i32 %344, %52
  %346 = add i32 %345, %53
  %347 = add i32 %346, %56
  %348 = add i32 %347, %65
  %349 = add i32 %348, %66
  %350 = sub i32 %349, %69
  %351 = sub i32 %350, %71
  %352 = sub i32 %351, %75
  %353 = add i32 %352, %76
  %354 = sub i32 %353, %77
  %355 = add i32 %354, %79
  %356 = add i32 %355, %80
  %357 = add i32 %356, %84
  %358 = sub i32 %357, %85
  %359 = sub i32 %358, %86
  %360 = sub i32 %359, %106
  %361 = add i32 %360, %109
  %362 = add i32 %361, %110
  %363 = add i32 %362, %119
  %364 = sub i32 %363, %122
  %365 = add i32 %364, %123
  %366 = add i32 %365, %129
  %367 = sub i32 %366, %130
  %368 = sub i32 %367, %131
  %369 = add i32 %368, %133
  %370 = add i32 %369, %134
  %371 = sub i32 %370, %135
  %372 = sub i32 %371, %136
  %373 = add i32 %372, %138
  %374 = add i32 %373, %141
  %375 = sub i32 %374, %144
  %376 = sub i32 %375, %147
  %377 = sub i32 %376, %148
  %378 = sub i32 %377, %150
  %379 = add i32 %378, %152
  %380 = sub i32 %379, %154
  %381 = sub i32 %380, %155
  %382 = sub i32 %381, %159
  %383 = sub i32 %382, %160
  %384 = sub i32 %383, %162
  %385 = add i32 %384, %164
  %386 = sub i32 %385, %165
  %387 = add i32 %386, %167
  %388 = sub i32 %387, %168
  %389 = add i32 %388, %169
  %390 = sub i32 %389, %173
  %391 = add i32 %390, %174
  %392 = add i32 %391, %175
  %393 = sub i32 %392, %176
  %394 = sub i32 %393, %177
  %395 = add i32 %394, %178
  %396 = add i32 %395, %101
  %397 = sub i32 %396, %184
  %398 = add i32 %397, %188
  %399 = sub i32 %398, %192
  %400 = sub i32 %399, %193
  %401 = add i32 %400, %194
  %402 = sub i32 %401, %195
  %403 = sub i32 %402, %196
  %404 = sub i32 %403, %198
  %405 = add i32 %404, %199
  %406 = sub i32 %405, %200
  %407 = add i32 %406, %202
  %408 = sub i32 %407, %170
  %409 = add i32 %408, %204
  %410 = add i32 %409, %208
  %411 = add i32 %410, %209
  %412 = add i32 %411, %211
  %413 = add i32 %412, %124
  %414 = sub i32 %413, %214
  %415 = sub i32 %414, %216
  %416 = sub i32 %415, %185
  %417 = add i32 %416, %218
  %418 = sub i32 %417, %219
  %419 = add i32 %418, %221
  %420 = sub i32 %419, %222
  %421 = add i32 %420, %224
  %422 = add i32 %421, %225
  %423 = add i32 %422, %228
  %424 = add i32 %423, %229
  %425 = add i32 %424, %230
  %426 = sub i32 %425, %232
  %427 = sub i32 %426, %234
  %428 = sub i32 %427, %235
  %429 = sub i32 %428, %236
  %430 = add i32 %429, %242
  %431 = sub i32 %430, %246
  %432 = sub i32 %431, %251
  %433 = add i32 %432, %253
  %434 = add i32 %433, %255
  %435 = sub i32 %434, %27
  %436 = sub i32 %435, %46
  %437 = sub i32 %436, %48
  %438 = add i32 %437, %61
  %439 = sub i32 %438, %68
  %440 = sub i32 %439, %73
  %441 = sub i32 %440, %82
  %442 = sub i32 %441, %88
  %443 = sub i32 %442, %98
  %444 = sub i32 %443, %102
  %445 = sub i32 %444, %105
  %446 = sub i32 %445, %108
  %447 = add i32 %446, %115
  %448 = add i32 %447, %121
  %449 = add i32 %448, %128
  %450 = add i32 %449, %132
  %451 = add i32 %450, %140
  %452 = sub i32 %451, %143
  %453 = sub i32 %452, %151
  %454 = sub i32 %453, %171
  %455 = sub i32 %454, %180
  %456 = sub i32 %455, %186
  %457 = add i32 %456, %213
  %458 = sub i32 %457, %217
  %459 = sub i32 %458, %226
  %460 = add i32 %459, %231
  %461 = add i32 %460, %233
  %462 = sub i32 %461, %240
  %463 = add i32 %462, %241
  %464 = sub i32 %463, %245
  %465 = add i32 %464, %248
  %466 = sub i32 %465, %250
  %467 = sub i32 %466, %254
  %468 = sub i32 %467, %258
  %469 = add i32 %468, %260
  %470 = add i32 %469, %262
  %471 = add i32 %470, %264
  %472 = add i32 %471, %266
  %473 = sub i32 %472, %267
  %474 = sub i32 %473, %206
  %475 = sub i32 %474, %95
  %476 = add i32 %475, %298
  %477 = add i32 %476, %293
  %478 = add i32 %477, %287
  %479 = icmp eq i32 %6, %478
  %480 = select i1 %479, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %481 = tail call i32 @puts(i8* nonnull dereferenceable(1) %480)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
