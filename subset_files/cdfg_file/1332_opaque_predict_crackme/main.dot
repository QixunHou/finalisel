digraph "DFG for'main' function" {
	Node0x2304678[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23046f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2304788[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23047e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2304c68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2304d48[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x2304e48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2304f08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2304fb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2305218[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x23052d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2305438[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2305498[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x230c770[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x230c958[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x230cab8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x230cbc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x230cc88[shape=record, label="  ret i32 0"];
	Node0x2304678 -> Node0x23046f8;
	Node0x23046f8 -> Node0x2304788;
	Node0x2304788 -> Node0x23047e8;
	Node0x23047e8 -> Node0x2304c68;
	Node0x2304c68 -> Node0x2304d48;
	Node0x2304d48 -> Node0x2304e48;
	Node0x2304e48 -> Node0x2304f08;
	Node0x2304f08 -> Node0x2304fb8;
	Node0x2304fb8 -> Node0x2305218;
	Node0x2305218 -> Node0x23052d8;
	Node0x23052d8 -> Node0x2305438;
	Node0x2305438 -> Node0x2305498;
	Node0x2305498 -> Node0x230c770;
	Node0x230c770 -> Node0x230c958;
	Node0x230c958 -> Node0x230cab8;
	Node0x230cab8 -> Node0x230cbc8;
	Node0x230cbc8 -> Node0x230cc88;
edge [color=red]
	Node0x2304678 -> Node0x23047e8;
	Node0x23047e8 -> Node0x2304c68;
	Node0x23046f8 -> Node0x2304d48;
	Node0x2304d48 -> Node0x2304e48;
	Node0x2304788 -> Node0x2304f08;
	Node0x2304f08 -> Node0x2304fb8;
	Node0x2304678 -> Node0x2305218;
	Node0x23046f8 -> Node0x2305218;
	Node0x2304788 -> Node0x2305218;
	Node0x2304678 -> Node0x23052d8;
	Node0x23046f8 -> Node0x2305438;
	Node0x2304788 -> Node0x2305498;
	Node0x23052d8 -> Node0x230c770;
	Node0x2305438 -> Node0x230c770;
	Node0x2305498 -> Node0x230c770;
	Node0x2304f08 -> Node0x230c958;
	Node0x2304d48 -> Node0x230cab8;
	Node0x23047e8 -> Node0x230cbc8;
}
