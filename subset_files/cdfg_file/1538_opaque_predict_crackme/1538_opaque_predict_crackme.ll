; ModuleID = '../.././c_source_file/1538_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1538_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = xor i32 %1, -1
  %9 = and i32 %8, %2
  %10 = and i32 %9, %7
  %11 = or i32 %8, %2
  %12 = and i32 %11, %0
  %13 = or i32 %10, %12
  %14 = xor i32 %3, -1
  %15 = and i32 %14, %5
  %16 = and i32 %15, %4
  %17 = xor i32 %5, %3
  %18 = xor i32 %17, %4
  %19 = or i32 %16, %18
  %20 = sub i32 %19, %13
  %21 = and i32 %2, %0
  %22 = xor i32 %2, -1
  %23 = and i32 %22, %1
  %24 = or i32 %21, %23
  %25 = or i32 %1, %0
  %26 = xor i32 %25, -1
  %27 = xor i32 %2, %1
  %28 = xor i32 %27, -1
  %29 = or i32 %28, %26
  %30 = xor i32 %2, %0
  %31 = xor i32 %30, -1
  %32 = or i32 %31, %26
  %33 = and i32 %22, %0
  %34 = or i32 %22, %1
  %35 = xor i32 %34, -1
  %36 = or i32 %33, %35
  %37 = or i32 %8, %0
  %38 = xor i32 %37, -1
  %39 = or i32 %22, %38
  %40 = or i32 %2, %1
  %41 = and i32 %28, %0
  %42 = and i32 %8, %0
  %43 = or i32 %27, %42
  %44 = and i32 %2, %1
  %45 = xor i32 %44, -1
  %46 = or i32 %45, %0
  %47 = or i32 %26, %2
  %48 = and i32 %9, %0
  %49 = and i32 %11, %7
  %50 = or i32 %48, %49
  %51 = or i32 %31, %1
  %52 = xor i32 %11, %0
  %53 = xor i32 %48, -1
  %54 = xor i32 %52, %53
  %55 = and i32 %44, %0
  %56 = xor i32 %40, %0
  %57 = xor i32 %56, 2147483647
  %58 = xor i32 %57, %55
  %59 = and i32 %1, %0
  %60 = or i32 %59, %35
  %61 = or i32 %33, %8
  %62 = or i32 %21, %26
  %63 = and i32 %37, %31
  %64 = xor i32 %1, %0
  %65 = or i32 %64, %2
  %66 = xor i32 %59, -1
  %67 = xor i32 %66, %2
  %68 = xor i32 %33, -1
  %69 = xor i32 %64, -1
  %70 = and i32 %68, %69
  %71 = xor i32 %23, %0
  %72 = shl i32 %71, 1
  %73 = and i32 %64, %31
  %74 = and i32 %44, %7
  %75 = and i32 %40, %0
  %76 = xor i32 %74, -1
  %77 = xor i32 %75, %76
  %78 = xor i32 %42, %45
  %79 = xor i32 %27, %0
  %80 = shl i32 %79, 1
  %81 = or i32 %27, %0
  %82 = xor i32 %81, -1
  %83 = or i32 %48, %82
  %84 = or i32 %30, %69
  %85 = or i32 %21, %69
  %86 = or i32 %35, %0
  %87 = and i32 %30, %64
  %88 = or i32 %27, %7
  %89 = xor i32 %10, %88
  %90 = or i32 %22, %0
  %91 = xor i32 %90, -1
  %92 = or i32 %64, %91
  %93 = or i32 %2, %0
  %94 = xor i32 %93, -1
  %95 = or i32 %59, %94
  %96 = xor i32 %91, %1
  %97 = or i32 %33, %69
  %98 = or i32 %33, %64
  %99 = and i32 %68, %1
  %100 = or i32 %94, %1
  %101 = shl i32 %100, 1
  %102 = or i32 %23, %7
  %103 = or i32 %48, %52
  %104 = or i32 %21, %8
  %105 = xor i32 %37, %2
  %106 = or i32 %28, %7
  %107 = xor i32 %40, -1
  %108 = or i32 %107, %7
  %109 = and i32 %27, %7
  %110 = or i32 %21, %107
  %111 = xor i32 %21, -1
  %112 = xor i32 %111, %1
  %113 = or i32 %64, %31
  %114 = and i32 %69, %2
  %115 = or i32 %107, %0
  %116 = xor i32 %55, %115
  %117 = xor i32 %23, -1
  %118 = xor i32 %117, %0
  %119 = xor i32 %42, -1
  %120 = and i32 %22, %119
  %121 = xor i32 %59, %2
  %122 = or i32 %34, %7
  %123 = or i32 %59, %22
  %124 = or i32 %59, %31
  %125 = or i32 %31, %8
  %126 = and i32 %30, %66
  %127 = or i32 %27, %38
  %128 = shl i32 %127, 1
  %129 = or i32 %38, %2
  %130 = or i32 %55, %56
  %131 = and i32 %90, %8
  %132 = add i32 %30, 1
  %133 = and i32 %27, %0
  %134 = xor i32 %133, %76
  %135 = and i32 %111, %69
  %136 = and i32 %93, %8
  %137 = or i32 %91, %1
  %138 = xor i32 %35, %0
  %139 = or i32 %22, %26
  %140 = xor i32 %21, %25
  %141 = xor i32 %68, %1
  %142 = xor i32 %12, 2147483647
  %143 = xor i32 %142, %10
  %144 = xor i32 %21, %117
  %145 = xor i32 %107, %0
  %146 = or i32 %45, %7
  %147 = or i32 %91, %8
  %148 = and i32 %111, %8
  %149 = or i32 %33, %44
  %150 = or i32 %94, %69
  %151 = and i32 %64, %22
  %152 = or i32 %30, %64
  %153 = and i32 %68, %8
  %154 = shl i32 %153, 1
  %155 = xor i32 %90, %1
  %156 = shl i32 %25, 1
  %157 = and i32 %45, %0
  %158 = shl i32 %157, 1
  %159 = xor i32 %109, -1
  %160 = xor i32 %55, %159
  %161 = and i32 %93, %69
  %162 = and i32 %30, %37
  %163 = shl i32 %162, 1
  %164 = or i32 %28, %0
  %165 = xor i32 %88, -1
  %166 = or i32 %10, %165
  %167 = and i32 %30, %69
  %168 = or i32 %40, %7
  %169 = or i32 %30, %38
  %170 = and i32 %27, %66
  %171 = add i32 %27, 1
  %172 = and i32 %37, %28
  %173 = xor i32 %33, %34
  %174 = and i32 %28, %7
  %175 = xor i32 %21, %1
  %176 = shl i32 %175, 1
  %177 = xor i32 %42, %2
  %178 = xor i32 %34, %59
  %179 = or i32 %34, %0
  %180 = xor i32 %21, %37
  %181 = and i32 %25, %31
  %182 = shl i32 %181, 1
  %183 = or i32 %42, %31
  %184 = or i32 %27, %59
  %185 = and i32 %25, %28
  %186 = xor i32 %26, %2
  %187 = or i32 %44, %0
  %188 = or i32 %28, %38
  %189 = xor i32 %40, %59
  %190 = xor i32 %38, %2
  %191 = or i32 %48, %79
  %192 = shl i32 %191, 1
  %193 = and i32 %90, %64
  %194 = and i32 %45, %7
  %195 = or i32 %27, %26
  %196 = and i32 %34, %7
  %197 = shl i32 %196, 1
  %198 = xor i32 %28, %0
  %199 = xor i32 %79, %53
  %200 = or i32 %59, %107
  %201 = or i32 %59, %28
  %202 = and i32 %90, %69
  %203 = shl i32 %202, 2
  %204 = shl i32 %8, 1
  %205 = and i32 %107, %7
  %206 = mul i32 %205, -13
  %207 = and i32 %23, %7
  %208 = and i32 %107, %0
  %209 = and i32 %23, %0
  %210 = and i32 %35, %7
  %211 = mul i32 %210, -18
  %212 = and i32 %35, %0
  %213 = shl i32 %212, 2
  %214 = xor i32 %4, %3
  %215 = xor i32 %214, -1
  %216 = xor i32 %5, %4
  %217 = xor i32 %216, -1
  %218 = or i32 %217, %215
  %219 = or i32 %5, %3
  %220 = xor i32 %219, %4
  %221 = xor i32 %5, -1
  %222 = and i32 %221, %4
  %223 = xor i32 %222, -1
  %224 = and i32 %223, %14
  %225 = and i32 %14, %4
  %226 = xor i32 %225, -1
  %227 = and i32 %217, %226
  %228 = or i32 %14, %4
  %229 = and i32 %216, %228
  %230 = or i32 %17, %4
  %231 = xor i32 %16, %230
  %232 = and i32 %219, %4
  %233 = and i32 %5, %4
  %234 = xor i32 %233, -1
  %235 = and i32 %234, %215
  %236 = xor i32 %4, -1
  %237 = or i32 %221, %3
  %238 = or i32 %237, %236
  %239 = or i32 %221, %4
  %240 = and i32 %239, %14
  %241 = and i32 %217, %3
  %242 = xor i32 %239, -1
  %243 = or i32 %242, %215
  %244 = xor i32 %17, -1
  %245 = or i32 %244, %4
  %246 = or i32 %214, %5
  %247 = xor i32 %228, -1
  %248 = or i32 %217, %247
  %249 = or i32 %214, %221
  %250 = and i32 %4, %3
  %251 = or i32 %17, %250
  %252 = shl i32 %239, 1
  %253 = or i32 %14, %5
  %254 = and i32 %253, %236
  %255 = xor i32 %254, 2147483647
  %256 = xor i32 %255, %16
  %257 = shl i32 %256, 1
  %258 = and i32 %5, %3
  %259 = and i32 %258, %4
  %260 = and i32 %17, %236
  %261 = or i32 %259, %260
  %262 = or i32 %216, %250
  %263 = or i32 %4, %3
  %264 = xor i32 %263, -1
  %265 = or i32 %233, %264
  %266 = xor i32 %258, -1
  %267 = and i32 %266, %236
  %268 = or i32 %233, %215
  %269 = xor i32 %237, -1
  %270 = or i32 %269, %236
  %271 = xor i32 %223, %3
  %272 = shl i32 %271, 2
  %273 = xor i32 %230, 2147483647
  %274 = or i32 %273, %16
  %275 = xor i32 %259, %18
  %276 = xor i32 %250, -1
  %277 = xor i32 %276, %5
  %278 = xor i32 %237, %4
  %279 = add i32 %250, 1
  %280 = or i32 %250, %242
  %281 = and i32 %216, %276
  %282 = shl i32 %281, 1
  %283 = xor i32 %219, -1
  %284 = xor i32 %283, %4
  %285 = or i32 %216, %215
  %286 = or i32 %5, %4
  %287 = xor i32 %286, -1
  %288 = or i32 %214, %287
  %289 = or i32 %244, %247
  %290 = and i32 %17, %4
  %291 = and i32 %15, %236
  %292 = or i32 %17, %236
  %293 = xor i32 %292, -1
  %294 = or i32 %291, %293
  %295 = or i32 %250, %217
  %296 = xor i32 %234, %3
  %297 = shl i32 %296, 1
  %298 = and i32 %244, %236
  %299 = add i32 %263, 1
  %300 = xor i32 %253, %4
  %301 = or i32 %16, %300
  %302 = and i32 %216, %263
  %303 = xor i32 %237, %250
  %304 = and i32 %244, %226
  %305 = and i32 %219, %236
  %306 = or i32 %259, %305
  %307 = or i32 %214, %242
  %308 = and i32 %286, %214
  %309 = or i32 %259, %220
  %310 = or i32 %225, %217
  %311 = and i32 %263, %244
  %312 = or i32 %250, %244
  %313 = shl i32 %312, 1
  %314 = or i32 %217, %264
  %315 = and i32 %228, %5
  %316 = and i32 %17, %228
  %317 = shl i32 %316, 1
  %318 = and i32 %263, %217
  %319 = or i32 %283, %4
  %320 = or i32 %221, %264
  %321 = xor i32 %242, %3
  %322 = xor i32 %222, %3
  %323 = add i32 %219, 1
  %324 = and i32 %258, %236
  %325 = or i32 %324, %232
  %326 = and i32 %237, %4
  %327 = shl i32 %223, 1
  %328 = xor i32 %226, %5
  %329 = or i32 %250, %287
  %330 = shl i32 %329, 1
  %331 = or i32 %225, %244
  %332 = and i32 %221, %3
  %333 = xor i32 %332, -1
  %334 = and i32 %333, %236
  %335 = xor i32 %233, %228
  %336 = or i32 %216, %14
  %337 = or i32 %250, %5
  %338 = and i32 %244, %4
  %339 = and i32 %286, %3
  %340 = and i32 %237, %236
  %341 = xor i32 %286, %3
  %342 = or i32 %266, %236
  %343 = shl i32 %342, 1
  %344 = and i32 %228, %217
  %345 = shl i32 %344, 1
  %346 = add i32 %233, 1
  %347 = and i32 %253, %4
  %348 = or i32 %291, %347
  %349 = xor i32 %18, -1
  %350 = xor i32 %16, %349
  %351 = shl i32 %350, 1
  %352 = and i32 %333, %4
  %353 = xor i32 %233, %333
  %354 = and i32 %239, %3
  %355 = xor i32 %239, %250
  %356 = shl i32 %355, 1
  %357 = and i32 %215, %5
  %358 = shl i32 %357, 1
  %359 = or i32 %221, %247
  %360 = or i32 %333, %4
  %361 = and i32 %239, %214
  %362 = xor i32 %225, %5
  %363 = and i32 %214, %234
  %364 = or i32 %233, %14
  %365 = xor i32 %222, %237
  %366 = and i32 %234, %14
  %367 = or i32 %324, %290
  %368 = shl i32 %367, 1
  %369 = or i32 %242, %3
  %370 = or i32 %250, %221
  %371 = shl i32 %370, 1
  %372 = xor i32 %233, %263
  %373 = or i32 %266, %4
  %374 = or i32 %225, %5
  %375 = or i32 %332, %225
  %376 = and i32 %214, %217
  %377 = xor i32 %233, %3
  %378 = or i32 %216, %225
  %379 = xor i32 %286, %250
  %380 = xor i32 %244, %4
  %381 = or i32 %222, %269
  %382 = and i32 %239, %215
  %383 = or i32 %17, %247
  %384 = or i32 %283, %236
  %385 = xor i32 %264, %5
  %386 = xor i32 %259, -1
  %387 = xor i32 %305, %386
  %388 = or i32 %219, %4
  %389 = shl i32 %388, 1
  %390 = or i32 %214, %217
  %391 = xor i32 %260, %386
  %392 = or i32 %287, %14
  %393 = xor i32 %258, %4
  %394 = and i32 %266, %4
  %395 = and i32 %263, %5
  %396 = xor i32 %269, %4
  %397 = or i32 %222, %215
  %398 = shl i32 %397, 1
  %399 = or i32 %17, %225
  %400 = xor i32 %266, %4
  %401 = or i32 %221, %215
  %402 = shl i32 %401, 1
  %403 = add i32 %239, 1
  %404 = or i32 %332, %4
  %405 = and i32 %17, %226
  %406 = xor i32 %228, %5
  %407 = or i32 %287, %3
  %408 = or i32 %222, %3
  %409 = shl i32 %408, 2
  %410 = or i32 %233, %332
  %411 = shl i32 %410, 1
  %412 = or i32 %250, %269
  %413 = or i32 %287, %215
  %414 = or i32 %258, %236
  %415 = or i32 %217, %3
  %416 = and i32 %244, %276
  %417 = or i32 %217, %14
  %418 = xor i32 %347, -1
  %419 = xor i32 %291, %418
  %420 = and i32 %223, %3
  %421 = or i32 %250, %283
  %422 = or i32 %233, %247
  %423 = xor i32 %225, %333
  %424 = and i32 %214, %223
  %425 = or i32 %269, %4
  %426 = or i32 %17, %264
  %427 = and i32 %17, %263
  %428 = or i32 %333, %236
  %429 = xor i32 %239, %3
  %430 = and i32 %217, %14
  %431 = xor i32 %300, -1
  %432 = xor i32 %16, %431
  %433 = and i32 %234, %3
  %434 = and i32 %228, %221
  %435 = and i32 %263, %221
  %436 = or i32 %216, %214
  %437 = shl i32 %436, 1
  %438 = or i32 %216, %3
  %439 = and i32 %216, %214
  %440 = xor i32 %324, -1
  %441 = xor i32 %232, %440
  %442 = and i32 %276, %5
  %443 = xor i32 %290, %440
  %444 = or i32 %16, %254
  %445 = or i32 %222, %14
  %446 = or i32 %242, %14
  %447 = shl i32 %446, 1
  %448 = and i32 %226, %5
  %449 = xor i32 %219, %250
  %450 = and i32 %217, %215
  %451 = xor i32 %233, %219
  %452 = or i32 %219, %236
  %453 = and i32 %228, %244
  %454 = and i32 %214, %221
  %455 = or i32 %222, %258
  %456 = shl i32 %455, 1
  %457 = or i32 %332, %236
  %458 = or i32 %233, %3
  %459 = or i32 %237, %4
  %460 = or i32 %233, %283
  %461 = shl i32 %292, 1
  %462 = and i32 %216, %226
  %463 = xor i32 %263, %5
  %464 = xor i32 %225, %266
  %465 = and i32 %223, %215
  %466 = xor i32 %332, %4
  %467 = and i32 %221, %276
  %468 = and i32 %221, %215
  %469 = xor i32 %291, %292
  %470 = or i32 %216, %264
  %471 = or i32 %264, %5
  %472 = or i32 %259, %349
  %473 = or i32 %222, %214
  %474 = or i32 %244, %236
  %475 = or i32 %233, %214
  %476 = shl i32 %332, 1
  %477 = xor i32 %247, %5
  %478 = add i32 %237, 1
  %479 = or i32 %216, %247
  %480 = and i32 %214, %5
  %481 = or i32 %225, %221
  %482 = and i32 %286, %14
  %483 = and i32 %216, %3
  %484 = shl i32 %226, 1
  %485 = and i32 %217, %276
  %486 = and i32 %221, %226
  %487 = or i32 %258, %225
  %488 = or i32 %247, %5
  %489 = xor i32 %287, %3
  %490 = add i32 %258, 1
  %491 = xor i32 %333, %4
  %492 = shl i32 %491, 1
  %493 = and i32 %286, %215
  %494 = xor i32 %250, %5
  %495 = or i32 %244, %264
  %496 = or i32 %215, %5
  %497 = and i32 %17, %276
  %498 = and i32 %283, %236
  %499 = mul i32 %498, 14
  %500 = and i32 %332, %236
  %501 = mul i32 %500, 9
  %502 = and i32 %283, %4
  %503 = mul i32 %502, 21
  %504 = and i32 %332, %4
  %505 = mul i32 %504, 31
  %506 = and i32 %269, %236
  %507 = and i32 %269, %4
  %508 = mul i32 %507, -6
  %509 = add i32 %59, %69
  %510 = add i32 %509, %3
  %511 = add i32 %510, %45
  %512 = add i32 %511, %91
  %513 = add i32 %512, %65
  %514 = add i32 %513, %55
  %515 = add i32 %514, %208
  %516 = add i32 %515, %115
  %517 = add i32 %516, %152
  %518 = add i32 %517, %81
  %519 = add i32 %518, %118
  %520 = add i32 %519, %84
  %521 = add i32 %520, %78
  %522 = add i32 %521, %214
  %523 = add i32 %522, %103
  %524 = add i32 %523, %89
  %525 = add i32 %524, %486
  %526 = add i32 %525, %395
  %527 = add i32 %526, %143
  %528 = add i32 %527, %58
  %529 = add i32 %528, %489
  %530 = add i32 %529, %485
  %531 = add i32 %530, %475
  %532 = add i32 %531, %260
  %533 = add i32 %532, %425
  %534 = add i32 %533, %420
  %535 = add i32 %534, %412
  %536 = add i32 %535, %375
  %537 = add i32 %536, %352
  %538 = add i32 %537, %321
  %539 = add i32 %538, %235
  %540 = add i32 %539, %469
  %541 = add i32 %540, %274
  %542 = shl i32 %541, 1
  %543 = sub i32 %1, %207
  %544 = sub i32 %543, %179
  %545 = add i32 %544, %141
  %546 = sub i32 %545, %62
  %547 = sub i32 %546, %463
  %548 = add i32 %547, %337
  %549 = add i32 %548, %482
  %550 = sub i32 %549, %259
  %551 = mul i32 %550, 5
  %552 = sub i32 %174, %168
  %553 = add i32 %552, %146
  %554 = sub i32 %553, %166
  %555 = add i32 %554, %217
  %556 = add i32 %555, %462
  %557 = sub i32 %556, %405
  %558 = add i32 %557, %325
  %559 = mul i32 %558, 3
  %560 = or i32 %209, %74
  %561 = sub i32 %506, %560
  %562 = mul i32 %561, 20
  %563 = add i32 %40, 1073741823
  %564 = add i32 %563, %374
  %565 = add i32 %564, %278
  %566 = shl i32 %565, 2
  %567 = sub i32 1, %0
  %568 = sub i32 %567, %0
  %569 = sub i32 %568, %37
  %570 = sub i32 %569, %204
  %571 = sub i32 %570, %39
  %572 = add i32 %571, %47
  %573 = add i32 %572, %67
  %574 = add i32 %573, %23
  %575 = add i32 %574, %105
  %576 = add i32 %575, %93
  %577 = sub i32 %576, %114
  %578 = sub i32 %577, %120
  %579 = sub i32 %578, %121
  %580 = sub i32 %579, %123
  %581 = add i32 %580, %129
  %582 = add i32 %581, %132
  %583 = add i32 %582, %139
  %584 = add i32 %583, %151
  %585 = sub i32 %584, %156
  %586 = sub i32 %585, %33
  %587 = add i32 %586, %171
  %588 = sub i32 %587, %177
  %589 = add i32 %588, %186
  %590 = add i32 %589, %35
  %591 = sub i32 %590, %90
  %592 = add i32 %591, %190
  %593 = add i32 %592, %14
  %594 = sub i32 %593, %29
  %595 = add i32 %594, %24
  %596 = add i32 %595, %32
  %597 = add i32 %596, %36
  %598 = sub i32 %597, %41
  %599 = add i32 %598, %43
  %600 = sub i32 %599, %46
  %601 = add i32 %600, %51
  %602 = sub i32 %601, %60
  %603 = sub i32 %602, %61
  %604 = sub i32 %603, %63
  %605 = add i32 %604, %70
  %606 = sub i32 %605, %73
  %607 = add i32 %606, %85
  %608 = add i32 %607, %86
  %609 = sub i32 %608, %87
  %610 = add i32 %609, %92
  %611 = add i32 %610, %95
  %612 = sub i32 %611, %96
  %613 = sub i32 %612, %56
  %614 = sub i32 %613, %97
  %615 = sub i32 %614, %98
  %616 = add i32 %615, %99
  %617 = add i32 %616, %102
  %618 = add i32 %617, %104
  %619 = sub i32 %618, %106
  %620 = sub i32 %619, %108
  %621 = add i32 %620, %109
  %622 = add i32 %621, %110
  %623 = sub i32 %622, %112
  %624 = add i32 %623, %113
  %625 = add i32 %624, %122
  %626 = sub i32 %625, %124
  %627 = add i32 %626, %125
  %628 = sub i32 %627, %126
  %629 = add i32 %628, %131
  %630 = sub i32 %629, %135
  %631 = sub i32 %630, %136
  %632 = add i32 %631, %137
  %633 = add i32 %632, %138
  %634 = sub i32 %633, %140
  %635 = add i32 %634, %144
  %636 = sub i32 %635, %145
  %637 = add i32 %636, %147
  %638 = sub i32 %637, %75
  %639 = add i32 %638, %148
  %640 = add i32 %639, %149
  %641 = add i32 %640, %150
  %642 = add i32 %641, %155
  %643 = sub i32 %642, %161
  %644 = add i32 %643, %164
  %645 = sub i32 %644, %167
  %646 = add i32 %645, %169
  %647 = sub i32 %646, %170
  %648 = add i32 %647, %172
  %649 = sub i32 %648, %173
  %650 = sub i32 %649, %178
  %651 = add i32 %650, %180
  %652 = sub i32 %651, %183
  %653 = add i32 %652, %184
  %654 = sub i32 %653, %185
  %655 = add i32 %654, %187
  %656 = add i32 %655, %188
  %657 = sub i32 %656, %189
  %658 = sub i32 %657, %193
  %659 = sub i32 %658, %194
  %660 = sub i32 %659, %195
  %661 = sub i32 %660, %198
  %662 = add i32 %661, %200
  %663 = sub i32 %662, %201
  %664 = add i32 %663, %236
  %665 = sub i32 %664, %4
  %666 = add i32 %665, %50
  %667 = add i32 %666, %54
  %668 = sub i32 %667, %72
  %669 = sub i32 %668, %77
  %670 = sub i32 %669, %80
  %671 = add i32 %670, %83
  %672 = sub i32 %671, %101
  %673 = add i32 %672, %116
  %674 = sub i32 %673, %128
  %675 = add i32 %674, %130
  %676 = add i32 %675, %134
  %677 = sub i32 %676, %154
  %678 = sub i32 %677, %158
  %679 = sub i32 %678, %160
  %680 = sub i32 %679, %163
  %681 = sub i32 %680, %176
  %682 = sub i32 %681, %182
  %683 = sub i32 %682, %197
  %684 = add i32 %683, %199
  %685 = sub i32 %684, %203
  %686 = add i32 %685, %206
  %687 = add i32 %686, %211
  %688 = sub i32 %687, %213
  %689 = add i32 %688, %279
  %690 = add i32 %689, %299
  %691 = add i32 %690, %263
  %692 = sub i32 %691, %228
  %693 = add i32 %692, %215
  %694 = add i32 %693, %250
  %695 = sub i32 %694, %225
  %696 = add i32 %695, %247
  %697 = sub i32 %696, %192
  %698 = sub i32 %697, %246
  %699 = add i32 %698, %249
  %700 = add i32 %699, %277
  %701 = sub i32 %700, %315
  %702 = add i32 %701, %320
  %703 = add i32 %702, %323
  %704 = sub i32 %703, %237
  %705 = sub i32 %704, %328
  %706 = add i32 %705, %346
  %707 = sub i32 %706, %258
  %708 = add i32 %707, %333
  %709 = sub i32 %708, %359
  %710 = sub i32 %709, %362
  %711 = add i32 %710, %385
  %712 = sub i32 %711, %222
  %713 = add i32 %712, %403
  %714 = add i32 %713, %406
  %715 = add i32 %714, %434
  %716 = add i32 %715, %435
  %717 = sub i32 %716, %442
  %718 = add i32 %717, %448
  %719 = add i32 %718, %454
  %720 = sub i32 %719, %467
  %721 = add i32 %720, %468
  %722 = sub i32 %721, %216
  %723 = add i32 %722, %471
  %724 = add i32 %723, %477
  %725 = add i32 %724, %478
  %726 = add i32 %725, %480
  %727 = add i32 %726, %481
  %728 = sub i32 %727, %484
  %729 = add i32 %728, %233
  %730 = add i32 %729, %488
  %731 = add i32 %730, %490
  %732 = sub i32 %731, %494
  %733 = sub i32 %732, %496
  %734 = add i32 %733, %219
  %735 = add i32 %734, %218
  %736 = add i32 %735, %220
  %737 = sub i32 %736, %224
  %738 = add i32 %737, %227
  %739 = sub i32 %738, %229
  %740 = sub i32 %739, %232
  %741 = sub i32 %740, %238
  %742 = sub i32 %741, %240
  %743 = sub i32 %742, %241
  %744 = sub i32 %743, %243
  %745 = sub i32 %744, %245
  %746 = sub i32 %745, %248
  %747 = add i32 %746, %251
  %748 = sub i32 %747, %252
  %749 = sub i32 %748, %262
  %750 = add i32 %749, %265
  %751 = sub i32 %750, %267
  %752 = sub i32 %751, %268
  %753 = sub i32 %752, %270
  %754 = sub i32 %753, %280
  %755 = sub i32 %754, %284
  %756 = sub i32 %755, %285
  %757 = sub i32 %756, %288
  %758 = add i32 %757, %289
  %759 = sub i32 %758, %290
  %760 = add i32 %759, %295
  %761 = sub i32 %760, %298
  %762 = add i32 %761, %302
  %763 = add i32 %762, %303
  %764 = sub i32 %763, %304
  %765 = add i32 %764, %307
  %766 = add i32 %765, %308
  %767 = sub i32 %766, %310
  %768 = add i32 %767, %311
  %769 = sub i32 %768, %314
  %770 = add i32 %769, %18
  %771 = add i32 %770, %318
  %772 = add i32 %771, %305
  %773 = add i32 %772, %319
  %774 = sub i32 %773, %322
  %775 = add i32 %774, %326
  %776 = sub i32 %775, %230
  %777 = sub i32 %776, %327
  %778 = add i32 %777, %331
  %779 = add i32 %778, %334
  %780 = sub i32 %779, %335
  %781 = sub i32 %780, %336
  %782 = sub i32 %781, %338
  %783 = add i32 %782, %339
  %784 = add i32 %783, %340
  %785 = add i32 %784, %341
  %786 = add i32 %785, %353
  %787 = add i32 %786, %354
  %788 = sub i32 %787, %358
  %789 = sub i32 %788, %360
  %790 = sub i32 %789, %361
  %791 = sub i32 %790, %363
  %792 = add i32 %791, %364
  %793 = add i32 %792, %365
  %794 = add i32 %793, %366
  %795 = add i32 %794, %369
  %796 = sub i32 %795, %371
  %797 = sub i32 %796, %372
  %798 = add i32 %797, %373
  %799 = add i32 %798, %376
  %800 = sub i32 %799, %377
  %801 = sub i32 %800, %378
  %802 = sub i32 %801, %379
  %803 = sub i32 %802, %380
  %804 = sub i32 %803, %381
  %805 = add i32 %804, %382
  %806 = sub i32 %805, %383
  %807 = sub i32 %806, %384
  %808 = add i32 %807, %390
  %809 = add i32 %808, %392
  %810 = sub i32 %809, %393
  %811 = add i32 %810, %394
  %812 = add i32 %811, %396
  %813 = sub i32 %812, %399
  %814 = add i32 %813, %400
  %815 = sub i32 %814, %402
  %816 = add i32 %815, %404
  %817 = add i32 %816, %407
  %818 = sub i32 %817, %413
  %819 = add i32 %818, %414
  %820 = sub i32 %819, %415
  %821 = sub i32 %820, %416
  %822 = sub i32 %821, %417
  %823 = add i32 %822, %421
  %824 = add i32 %823, %422
  %825 = sub i32 %824, %423
  %826 = add i32 %825, %424
  %827 = sub i32 %826, %426
  %828 = sub i32 %827, %427
  %829 = sub i32 %828, %428
  %830 = add i32 %829, %429
  %831 = add i32 %830, %430
  %832 = sub i32 %831, %433
  %833 = add i32 %832, %438
  %834 = add i32 %833, %439
  %835 = add i32 %834, %445
  %836 = sub i32 %835, %449
  %837 = add i32 %836, %450
  %838 = sub i32 %837, %451
  %839 = sub i32 %838, %452
  %840 = add i32 %839, %453
  %841 = add i32 %840, %457
  %842 = sub i32 %841, %458
  %843 = add i32 %842, %459
  %844 = sub i32 %843, %460
  %845 = add i32 %844, %464
  %846 = add i32 %845, %465
  %847 = sub i32 %846, %466
  %848 = add i32 %847, %470
  %849 = add i32 %848, %473
  %850 = sub i32 %849, %474
  %851 = sub i32 %850, %476
  %852 = add i32 %851, %479
  %853 = add i32 %852, %483
  %854 = sub i32 %853, %487
  %855 = add i32 %854, %493
  %856 = sub i32 %855, %495
  %857 = sub i32 %856, %497
  %858 = sub i32 %857, %324
  %859 = sub i32 %858, %231
  %860 = sub i32 %859, %261
  %861 = sub i32 %860, %272
  %862 = add i32 %861, %275
  %863 = sub i32 %862, %282
  %864 = sub i32 %863, %294
  %865 = sub i32 %864, %297
  %866 = add i32 %865, %301
  %867 = add i32 %866, %306
  %868 = add i32 %867, %309
  %869 = sub i32 %868, %313
  %870 = sub i32 %869, %317
  %871 = sub i32 %870, %330
  %872 = sub i32 %871, %343
  %873 = sub i32 %872, %345
  %874 = add i32 %873, %348
  %875 = sub i32 %874, %356
  %876 = add i32 %875, %387
  %877 = sub i32 %876, %389
  %878 = sub i32 %877, %391
  %879 = sub i32 %878, %398
  %880 = sub i32 %879, %409
  %881 = sub i32 %880, %411
  %882 = sub i32 %881, %419
  %883 = sub i32 %882, %432
  %884 = sub i32 %883, %437
  %885 = sub i32 %884, %441
  %886 = add i32 %885, %443
  %887 = add i32 %886, %444
  %888 = sub i32 %887, %447
  %889 = sub i32 %888, %456
  %890 = sub i32 %889, %461
  %891 = sub i32 %890, %472
  %892 = sub i32 %891, %492
  %893 = add i32 %892, %499
  %894 = add i32 %893, %501
  %895 = add i32 %894, %503
  %896 = add i32 %895, %505
  %897 = add i32 %896, %508
  %898 = sub i32 %897, %351
  %899 = sub i32 %898, %368
  %900 = sub i32 %899, %257
  %901 = add i32 %900, %562
  %902 = add i32 %901, %566
  %903 = add i32 %902, %551
  %904 = add i32 %903, %559
  %905 = add i32 %904, %542
  %906 = icmp eq i32 %20, %905
  %907 = select i1 %906, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %908 = tail call i32 @puts(i8* nonnull dereferenceable(1) %907)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
