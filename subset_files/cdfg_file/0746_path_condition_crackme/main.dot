digraph "DFG for'main' function" {
	Node0x24afc28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x24afca8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x24afd38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x24afd98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x24afe48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x24b0278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x24b0358[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x24b0458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x24b0518[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x24b05c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x24b0688[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x24b0738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x24aab50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x24b0938[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x24b18a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x24b1f18[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x24b1f78[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x24b1ff0[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x24b2060[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x24b20d0[shape=record, label="  %16 = or i32 %13, %15"];
	Node0x24b2140[shape=record, label="  %17 = sub i32 %10, %11"];
	Node0x24b21b0[shape=record, label="  %18 = sub i32 %17, %16"];
	Node0x24b2220[shape=record, label="  %19 = xor i32 %11, 2147483647"];
	Node0x24b2290[shape=record, label="  %20 = xor i32 %19, %12"];
	Node0x24b2300[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x24b2370[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0x24b23e0[shape=record, label="  %23 = xor i32 %21, -1"];
	Node0x24b2450[shape=record, label="  %24 = mul i32 %23, 3"];
	Node0x24b24c0[shape=record, label="  %25 = and i32 %12, %14"];
	Node0x24b2530[shape=record, label="  %26 = and i32 %11, %22"];
	Node0x24b25a0[shape=record, label="  %27 = and i32 %13, %10"];
	Node0x24b2610[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x24b2680[shape=record, label="  %29 = and i32 %13, %15"];
	Node0x24b26f0[shape=record, label="  %30 = xor i32 %29, -1"];
	Node0x24b2760[shape=record, label="  %31 = mul i32 %30, 5"];
	Node0x24b27d0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x24b2840[shape=record, label="  %33 = shl i32 %32, 3"];
	Node0x24b28b0[shape=record, label="  %34 = xor i32 %33, -8"];
	Node0x24b2920[shape=record, label="  %35 = xor i32 %16, -1"];
	Node0x24b2990[shape=record, label="  %36 = shl i32 %27, 3"];
	Node0x24b2a00[shape=record, label="  %37 = add i32 %29, %35"];
	Node0x24b2a70[shape=record, label="  %38 = mul i32 %37, -6"];
	Node0x24b2ae0[shape=record, label="  %39 = sub i32 %13, %20"];
	Node0x24b2b50[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x24b2bc0[shape=record, label="  %41 = sub i32 %12, %10"];
	Node0x24b2c30[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x24b2ca0[shape=record, label="  %43 = sub i32 %42, %25"];
	Node0x24b2d10[shape=record, label="  %44 = sub i32 %43, %26"];
	Node0x24b2d80[shape=record, label="  %45 = add i32 %44, %24"];
	Node0x24b2df0[shape=record, label="  %46 = add i32 %45, %28"];
	Node0x24b2e60[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x24b2ed0[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x24b2f40[shape=record, label="  %49 = sub i32 %48, %36"];
	Node0x24b2fb0[shape=record, label="  %50 = add i32 %49, %40"];
	Node0x24b3020[shape=record, label="  %51 = sub i32 %50, %34"];
	Node0x24b3090[shape=record, label="  %52 = add i32 %51, %38"];
	Node0x24b3100[shape=record, label="  %53 = icmp eq i32 %18, %52"];
	Node0x244f8b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x24b3190[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x24b3438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x24b3598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x24b36a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x24b37b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x24b3878[shape=record, label="  ret i32 0"];
	Node0x24afc28 -> Node0x24afca8;
	Node0x24afca8 -> Node0x24afd38;
	Node0x24afd38 -> Node0x24afd98;
	Node0x24afd98 -> Node0x24afe48;
	Node0x24afe48 -> Node0x24b0278;
	Node0x24b0278 -> Node0x24b0358;
	Node0x24b0358 -> Node0x24b0458;
	Node0x24b0458 -> Node0x24b0518;
	Node0x24b0518 -> Node0x24b05c8;
	Node0x24b05c8 -> Node0x24b0688;
	Node0x24b0688 -> Node0x24b0738;
	Node0x24b0738 -> Node0x24aab50;
	Node0x24aab50 -> Node0x24b0938;
	Node0x24b0938 -> Node0x24b18a8;
	Node0x24b18a8 -> Node0x24b1f18;
	Node0x24b1f18 -> Node0x24b1f78;
	Node0x24b1f78 -> Node0x24b1ff0;
	Node0x24b1ff0 -> Node0x24b2060;
	Node0x24b2060 -> Node0x24b20d0;
	Node0x24b20d0 -> Node0x24b2140;
	Node0x24b2140 -> Node0x24b21b0;
	Node0x24b21b0 -> Node0x24b2220;
	Node0x24b2220 -> Node0x24b2290;
	Node0x24b2290 -> Node0x24b2300;
	Node0x24b2300 -> Node0x24b2370;
	Node0x24b2370 -> Node0x24b23e0;
	Node0x24b23e0 -> Node0x24b2450;
	Node0x24b2450 -> Node0x24b24c0;
	Node0x24b24c0 -> Node0x24b2530;
	Node0x24b2530 -> Node0x24b25a0;
	Node0x24b25a0 -> Node0x24b2610;
	Node0x24b2610 -> Node0x24b2680;
	Node0x24b2680 -> Node0x24b26f0;
	Node0x24b26f0 -> Node0x24b2760;
	Node0x24b2760 -> Node0x24b27d0;
	Node0x24b27d0 -> Node0x24b2840;
	Node0x24b2840 -> Node0x24b28b0;
	Node0x24b28b0 -> Node0x24b2920;
	Node0x24b2920 -> Node0x24b2990;
	Node0x24b2990 -> Node0x24b2a00;
	Node0x24b2a00 -> Node0x24b2a70;
	Node0x24b2a70 -> Node0x24b2ae0;
	Node0x24b2ae0 -> Node0x24b2b50;
	Node0x24b2b50 -> Node0x24b2bc0;
	Node0x24b2bc0 -> Node0x24b2c30;
	Node0x24b2c30 -> Node0x24b2ca0;
	Node0x24b2ca0 -> Node0x24b2d10;
	Node0x24b2d10 -> Node0x24b2d80;
	Node0x24b2d80 -> Node0x24b2df0;
	Node0x24b2df0 -> Node0x24b2e60;
	Node0x24b2e60 -> Node0x24b2ed0;
	Node0x24b2ed0 -> Node0x24b2f40;
	Node0x24b2f40 -> Node0x24b2fb0;
	Node0x24b2fb0 -> Node0x24b3020;
	Node0x24b3020 -> Node0x24b3090;
	Node0x24b3090 -> Node0x24b3100;
	Node0x24b3100 -> Node0x244f8b8;
	Node0x244f8b8 -> Node0x24b3190;
	Node0x24b3190 -> Node0x24b3438;
	Node0x24b3438 -> Node0x24b3598;
	Node0x24b3598 -> Node0x24b36a8;
	Node0x24b36a8 -> Node0x24b37b8;
	Node0x24b37b8 -> Node0x24b3878;
edge [color=red]
	Node0x24afc28 -> Node0x24afe48;
	Node0x24afe48 -> Node0x24b0278;
	Node0x24afca8 -> Node0x24b0358;
	Node0x24b0358 -> Node0x24b0458;
	Node0x24afd38 -> Node0x24b0518;
	Node0x24b0518 -> Node0x24b05c8;
	Node0x24afd98 -> Node0x24b0688;
	Node0x24b0688 -> Node0x24b0738;
	Node0x24afc28 -> Node0x24aab50;
	Node0x24afca8 -> Node0x24aab50;
	Node0x24afd38 -> Node0x24aab50;
	Node0x24afd98 -> Node0x24aab50;
	Node0x24afc28 -> Node0x24b0938;
	Node0x24afca8 -> Node0x24b18a8;
	Node0x24afd38 -> Node0x24b1f18;
	Node0x24afd98 -> Node0x24b1f78;
	Node0x24b18a8 -> Node0x24b1ff0;
	Node0x24b0938 -> Node0x24b2060;
	Node0x24b1f78 -> Node0x24b20d0;
	Node0x24b2060 -> Node0x24b20d0;
	Node0x24b0938 -> Node0x24b2140;
	Node0x24b18a8 -> Node0x24b2140;
	Node0x24b2140 -> Node0x24b21b0;
	Node0x24b20d0 -> Node0x24b21b0;
	Node0x24b18a8 -> Node0x24b2220;
	Node0x24b2220 -> Node0x24b2290;
	Node0x24b1f18 -> Node0x24b2290;
	Node0x24b1f18 -> Node0x24b2300;
	Node0x24b18a8 -> Node0x24b2300;
	Node0x24b1f18 -> Node0x24b2370;
	Node0x24b2300 -> Node0x24b23e0;
	Node0x24b23e0 -> Node0x24b2450;
	Node0x24b1f18 -> Node0x24b24c0;
	Node0x24b1ff0 -> Node0x24b24c0;
	Node0x24b18a8 -> Node0x24b2530;
	Node0x24b2370 -> Node0x24b2530;
	Node0x24b1f78 -> Node0x24b25a0;
	Node0x24b0938 -> Node0x24b25a0;
	Node0x24b25a0 -> Node0x24b2610;
	Node0x24b1f78 -> Node0x24b2680;
	Node0x24b2060 -> Node0x24b2680;
	Node0x24b2680 -> Node0x24b26f0;
	Node0x24b26f0 -> Node0x24b2760;
	Node0x24b1f78 -> Node0x24b27d0;
	Node0x24b0938 -> Node0x24b27d0;
	Node0x24b27d0 -> Node0x24b2840;
	Node0x24b2840 -> Node0x24b28b0;
	Node0x24b20d0 -> Node0x24b2920;
	Node0x24b25a0 -> Node0x24b2990;
	Node0x24b2680 -> Node0x24b2a00;
	Node0x24b2920 -> Node0x24b2a00;
	Node0x24b2a00 -> Node0x24b2a70;
	Node0x24b1f78 -> Node0x24b2ae0;
	Node0x24b2290 -> Node0x24b2ae0;
	Node0x24b2ae0 -> Node0x24b2b50;
	Node0x24b1f18 -> Node0x24b2bc0;
	Node0x24b0938 -> Node0x24b2bc0;
	Node0x24b2bc0 -> Node0x24b2c30;
	Node0x24b2300 -> Node0x24b2c30;
	Node0x24b2c30 -> Node0x24b2ca0;
	Node0x24b24c0 -> Node0x24b2ca0;
	Node0x24b2ca0 -> Node0x24b2d10;
	Node0x24b2530 -> Node0x24b2d10;
	Node0x24b2d10 -> Node0x24b2d80;
	Node0x24b2450 -> Node0x24b2d80;
	Node0x24b2d80 -> Node0x24b2df0;
	Node0x24b2610 -> Node0x24b2df0;
	Node0x24b2df0 -> Node0x24b2e60;
	Node0x24b27d0 -> Node0x24b2e60;
	Node0x24b2e60 -> Node0x24b2ed0;
	Node0x24b2760 -> Node0x24b2ed0;
	Node0x24b2ed0 -> Node0x24b2f40;
	Node0x24b2990 -> Node0x24b2f40;
	Node0x24b2f40 -> Node0x24b2fb0;
	Node0x24b2b50 -> Node0x24b2fb0;
	Node0x24b2fb0 -> Node0x24b3020;
	Node0x24b28b0 -> Node0x24b3020;
	Node0x24b3020 -> Node0x24b3090;
	Node0x24b2a70 -> Node0x24b3090;
	Node0x24b21b0 -> Node0x24b3100;
	Node0x24b3090 -> Node0x24b3100;
	Node0x24b3100 -> Node0x244f8b8;
	Node0x244f8b8 -> Node0x24b3190;
	Node0x24b0688 -> Node0x24b3438;
	Node0x24b0518 -> Node0x24b3598;
	Node0x24b0358 -> Node0x24b36a8;
	Node0x24afe48 -> Node0x24b37b8;
}
