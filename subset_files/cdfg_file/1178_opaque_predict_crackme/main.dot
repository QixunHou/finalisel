digraph "DFG for'main' function" {
	Node0x692a78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x692af8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x692b88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x692fe8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x6930c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x6931e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x693420[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x6934d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x694448[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x694ad0[shape=record, label="  %8 = add i32 %7, 1"];
	Node0x694b40[shape=record, label="  %9 = and i32 %7, %6"];
	Node0x694bb0[shape=record, label="  %10 = xor i32 %6, -1"];
	Node0x694c20[shape=record, label="  %11 = or i32 %7, %10"];
	Node0x694c90[shape=record, label="  %12 = xor i32 %7, %10"];
	Node0x694d00[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x694d70[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x694de0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x694e50[shape=record, label="  %16 = and i32 %7, %10"];
	Node0x694ec0[shape=record, label="  %17 = mul i32 %16, 5"];
	Node0x694f30[shape=record, label="  %18 = add i32 %6, 1"];
	Node0x694fa0[shape=record, label="  %19 = add i32 %18, %9"];
	Node0x695010[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x695080[shape=record, label="  %21 = sub i32 1, %7"];
	Node0x6950f0[shape=record, label="  %22 = sub i32 %21, %11"];
	Node0x695160[shape=record, label="  %23 = add i32 %22, %12"];
	Node0x6951d0[shape=record, label="  %24 = add i32 %23, %17"];
	Node0x695240[shape=record, label="  %25 = add i32 %24, %15"];
	Node0x6952b0[shape=record, label="  %26 = add i32 %25, %20"];
	Node0x695320[shape=record, label="  %27 = icmp eq i32 %8, %26"];
	Node0x6339d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6953b0[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0x695608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x695768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x695828[shape=record, label="  ret i32 0"];
	Node0x692a78 -> Node0x692af8;
	Node0x692af8 -> Node0x692b88;
	Node0x692b88 -> Node0x692fe8;
	Node0x692fe8 -> Node0x6930c8;
	Node0x6930c8 -> Node0x6931e8;
	Node0x6931e8 -> Node0x693420;
	Node0x693420 -> Node0x6934d8;
	Node0x6934d8 -> Node0x694448;
	Node0x694448 -> Node0x694ad0;
	Node0x694ad0 -> Node0x694b40;
	Node0x694b40 -> Node0x694bb0;
	Node0x694bb0 -> Node0x694c20;
	Node0x694c20 -> Node0x694c90;
	Node0x694c90 -> Node0x694d00;
	Node0x694d00 -> Node0x694d70;
	Node0x694d70 -> Node0x694de0;
	Node0x694de0 -> Node0x694e50;
	Node0x694e50 -> Node0x694ec0;
	Node0x694ec0 -> Node0x694f30;
	Node0x694f30 -> Node0x694fa0;
	Node0x694fa0 -> Node0x695010;
	Node0x695010 -> Node0x695080;
	Node0x695080 -> Node0x6950f0;
	Node0x6950f0 -> Node0x695160;
	Node0x695160 -> Node0x6951d0;
	Node0x6951d0 -> Node0x695240;
	Node0x695240 -> Node0x6952b0;
	Node0x6952b0 -> Node0x695320;
	Node0x695320 -> Node0x6339d8;
	Node0x6339d8 -> Node0x6953b0;
	Node0x6953b0 -> Node0x695608;
	Node0x695608 -> Node0x695768;
	Node0x695768 -> Node0x695828;
edge [color=red]
	Node0x692a78 -> Node0x692b88;
	Node0x692b88 -> Node0x692fe8;
	Node0x692af8 -> Node0x6930c8;
	Node0x6930c8 -> Node0x6931e8;
	Node0x692a78 -> Node0x693420;
	Node0x692af8 -> Node0x693420;
	Node0x692a78 -> Node0x6934d8;
	Node0x692af8 -> Node0x694448;
	Node0x694448 -> Node0x694ad0;
	Node0x694448 -> Node0x694b40;
	Node0x6934d8 -> Node0x694b40;
	Node0x6934d8 -> Node0x694bb0;
	Node0x694448 -> Node0x694c20;
	Node0x694bb0 -> Node0x694c20;
	Node0x694448 -> Node0x694c90;
	Node0x694bb0 -> Node0x694c90;
	Node0x694448 -> Node0x694d00;
	Node0x6934d8 -> Node0x694d00;
	Node0x694d00 -> Node0x694d70;
	Node0x694d70 -> Node0x694de0;
	Node0x694448 -> Node0x694e50;
	Node0x694bb0 -> Node0x694e50;
	Node0x694e50 -> Node0x694ec0;
	Node0x6934d8 -> Node0x694f30;
	Node0x694f30 -> Node0x694fa0;
	Node0x694b40 -> Node0x694fa0;
	Node0x694fa0 -> Node0x695010;
	Node0x694448 -> Node0x695080;
	Node0x695080 -> Node0x6950f0;
	Node0x694c20 -> Node0x6950f0;
	Node0x6950f0 -> Node0x695160;
	Node0x694c90 -> Node0x695160;
	Node0x695160 -> Node0x6951d0;
	Node0x694ec0 -> Node0x6951d0;
	Node0x6951d0 -> Node0x695240;
	Node0x694de0 -> Node0x695240;
	Node0x695240 -> Node0x6952b0;
	Node0x695010 -> Node0x6952b0;
	Node0x694ad0 -> Node0x695320;
	Node0x6952b0 -> Node0x695320;
	Node0x695320 -> Node0x6339d8;
	Node0x6339d8 -> Node0x6953b0;
	Node0x6930c8 -> Node0x695608;
	Node0x692b88 -> Node0x695768;
}
