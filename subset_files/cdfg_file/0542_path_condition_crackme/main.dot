digraph "DFG for'main' function" {
	Node0x24aa338[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x24aa3b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x24aa448[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x24aa8a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24aa988[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x24aaaa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24aace0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x24aad98[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x24abd08[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x24ac390[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x24ac400[shape=record, label="  %9 = add i32 %8, 1"];
	Node0x24ac470[shape=record, label="  %10 = xor i32 %6, -1"];
	Node0x24ac4e0[shape=record, label="  %11 = or i32 %7, %10"];
	Node0x24ac550[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x24ac5c0[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x24ac630[shape=record, label="  %14 = and i32 %6, %13"];
	Node0x24ac6a0[shape=record, label="  %15 = add i32 %12, %14"];
	Node0x24ac710[shape=record, label="  %16 = icmp eq i32 %8, %15"];
	Node0x244b9d8[shape=record, label="  %17 = select i1 %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x24ac7a0[shape=record, label="  %18 = call i32 @puts(i8* nonnull dereferenceable(1) %17) #5"];
	Node0x24ac9f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24acb58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24acc18[shape=record, label="  ret i32 0"];
	Node0x24aa338 -> Node0x24aa3b8;
	Node0x24aa3b8 -> Node0x24aa448;
	Node0x24aa448 -> Node0x24aa8a8;
	Node0x24aa8a8 -> Node0x24aa988;
	Node0x24aa988 -> Node0x24aaaa8;
	Node0x24aaaa8 -> Node0x24aace0;
	Node0x24aace0 -> Node0x24aad98;
	Node0x24aad98 -> Node0x24abd08;
	Node0x24abd08 -> Node0x24ac390;
	Node0x24ac390 -> Node0x24ac400;
	Node0x24ac400 -> Node0x24ac470;
	Node0x24ac470 -> Node0x24ac4e0;
	Node0x24ac4e0 -> Node0x24ac550;
	Node0x24ac550 -> Node0x24ac5c0;
	Node0x24ac5c0 -> Node0x24ac630;
	Node0x24ac630 -> Node0x24ac6a0;
	Node0x24ac6a0 -> Node0x24ac710;
	Node0x24ac710 -> Node0x244b9d8;
	Node0x244b9d8 -> Node0x24ac7a0;
	Node0x24ac7a0 -> Node0x24ac9f8;
	Node0x24ac9f8 -> Node0x24acb58;
	Node0x24acb58 -> Node0x24acc18;
edge [color=red]
	Node0x24aa338 -> Node0x24aa448;
	Node0x24aa448 -> Node0x24aa8a8;
	Node0x24aa3b8 -> Node0x24aa988;
	Node0x24aa988 -> Node0x24aaaa8;
	Node0x24aa338 -> Node0x24aace0;
	Node0x24aa3b8 -> Node0x24aace0;
	Node0x24aa338 -> Node0x24aad98;
	Node0x24aa3b8 -> Node0x24abd08;
	Node0x24abd08 -> Node0x24ac390;
	Node0x24aad98 -> Node0x24ac390;
	Node0x24ac390 -> Node0x24ac400;
	Node0x24aad98 -> Node0x24ac470;
	Node0x24abd08 -> Node0x24ac4e0;
	Node0x24ac470 -> Node0x24ac4e0;
	Node0x24ac400 -> Node0x24ac550;
	Node0x24ac4e0 -> Node0x24ac550;
	Node0x24abd08 -> Node0x24ac5c0;
	Node0x24aad98 -> Node0x24ac630;
	Node0x24ac5c0 -> Node0x24ac630;
	Node0x24ac550 -> Node0x24ac6a0;
	Node0x24ac630 -> Node0x24ac6a0;
	Node0x24ac390 -> Node0x24ac710;
	Node0x24ac6a0 -> Node0x24ac710;
	Node0x24ac710 -> Node0x244b9d8;
	Node0x244b9d8 -> Node0x24ac7a0;
	Node0x24aa988 -> Node0x24ac9f8;
	Node0x24aa448 -> Node0x24acb58;
}
