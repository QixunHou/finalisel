digraph "DFG for'main' function" {
	Node0x64a9d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x64aa58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x64aae8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x64af48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x64b028[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x64b148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x64b380[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x64b438[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x64c3a8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x64ca30[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x64caa0[shape=record, label="  %9 = add i32 %8, 1"];
	Node0x64cb10[shape=record, label="  %10 = shl i32 %6, 1"];
	Node0x64cb80[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x64cbf0[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x64cc60[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x64ccd0[shape=record, label="  %14 = xor i32 %7, -1"];
	Node0x64cd40[shape=record, label="  %15 = or i32 %6, %14"];
	Node0x64cdb0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x64ce20[shape=record, label="  %17 = shl i32 %7, 1"];
	Node0x64ce90[shape=record, label="  %18 = xor i32 %15, -1"];
	Node0x64cf00[shape=record, label="  %19 = mul i32 %18, 7"];
	Node0x64cf70[shape=record, label="  %20 = sub i32 1, %7"];
	Node0x64cfe0[shape=record, label="  %21 = add i32 %20, %13"];
	Node0x64d050[shape=record, label="  %22 = sub i32 %21, %17"];
	Node0x64d0c0[shape=record, label="  %23 = sub i32 %22, %8"];
	Node0x64d130[shape=record, label="  %24 = add i32 %23, %16"];
	Node0x64d1a0[shape=record, label="  %25 = add i32 %24, %19"];
	Node0x64d210[shape=record, label="  %26 = icmp eq i32 %12, %25"];
	Node0x5eb9d8[shape=record, label="  %27 = select i1 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x64d2a0[shape=record, label="  %28 = call i32 @puts(i8* nonnull dereferenceable(1) %27) #5"];
	Node0x64d4f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x64d658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x64d718[shape=record, label="  ret i32 0"];
	Node0x64a9d8 -> Node0x64aa58;
	Node0x64aa58 -> Node0x64aae8;
	Node0x64aae8 -> Node0x64af48;
	Node0x64af48 -> Node0x64b028;
	Node0x64b028 -> Node0x64b148;
	Node0x64b148 -> Node0x64b380;
	Node0x64b380 -> Node0x64b438;
	Node0x64b438 -> Node0x64c3a8;
	Node0x64c3a8 -> Node0x64ca30;
	Node0x64ca30 -> Node0x64caa0;
	Node0x64caa0 -> Node0x64cb10;
	Node0x64cb10 -> Node0x64cb80;
	Node0x64cb80 -> Node0x64cbf0;
	Node0x64cbf0 -> Node0x64cc60;
	Node0x64cc60 -> Node0x64ccd0;
	Node0x64ccd0 -> Node0x64cd40;
	Node0x64cd40 -> Node0x64cdb0;
	Node0x64cdb0 -> Node0x64ce20;
	Node0x64ce20 -> Node0x64ce90;
	Node0x64ce90 -> Node0x64cf00;
	Node0x64cf00 -> Node0x64cf70;
	Node0x64cf70 -> Node0x64cfe0;
	Node0x64cfe0 -> Node0x64d050;
	Node0x64d050 -> Node0x64d0c0;
	Node0x64d0c0 -> Node0x64d130;
	Node0x64d130 -> Node0x64d1a0;
	Node0x64d1a0 -> Node0x64d210;
	Node0x64d210 -> Node0x5eb9d8;
	Node0x5eb9d8 -> Node0x64d2a0;
	Node0x64d2a0 -> Node0x64d4f8;
	Node0x64d4f8 -> Node0x64d658;
	Node0x64d658 -> Node0x64d718;
edge [color=red]
	Node0x64a9d8 -> Node0x64aae8;
	Node0x64aae8 -> Node0x64af48;
	Node0x64aa58 -> Node0x64b028;
	Node0x64b028 -> Node0x64b148;
	Node0x64a9d8 -> Node0x64b380;
	Node0x64aa58 -> Node0x64b380;
	Node0x64a9d8 -> Node0x64b438;
	Node0x64aa58 -> Node0x64c3a8;
	Node0x64c3a8 -> Node0x64ca30;
	Node0x64b438 -> Node0x64ca30;
	Node0x64ca30 -> Node0x64caa0;
	Node0x64b438 -> Node0x64cb10;
	Node0x64cb10 -> Node0x64cb80;
	Node0x64caa0 -> Node0x64cbf0;
	Node0x64cb80 -> Node0x64cbf0;
	Node0x64c3a8 -> Node0x64cc60;
	Node0x64b438 -> Node0x64cc60;
	Node0x64c3a8 -> Node0x64ccd0;
	Node0x64b438 -> Node0x64cd40;
	Node0x64ccd0 -> Node0x64cd40;
	Node0x64cd40 -> Node0x64cdb0;
	Node0x64c3a8 -> Node0x64ce20;
	Node0x64cd40 -> Node0x64ce90;
	Node0x64ce90 -> Node0x64cf00;
	Node0x64c3a8 -> Node0x64cf70;
	Node0x64cf70 -> Node0x64cfe0;
	Node0x64cc60 -> Node0x64cfe0;
	Node0x64cfe0 -> Node0x64d050;
	Node0x64ce20 -> Node0x64d050;
	Node0x64d050 -> Node0x64d0c0;
	Node0x64ca30 -> Node0x64d0c0;
	Node0x64d0c0 -> Node0x64d130;
	Node0x64cdb0 -> Node0x64d130;
	Node0x64d130 -> Node0x64d1a0;
	Node0x64cf00 -> Node0x64d1a0;
	Node0x64cbf0 -> Node0x64d210;
	Node0x64d1a0 -> Node0x64d210;
	Node0x64d210 -> Node0x5eb9d8;
	Node0x5eb9d8 -> Node0x64d2a0;
	Node0x64b028 -> Node0x64d4f8;
	Node0x64aae8 -> Node0x64d658;
}
