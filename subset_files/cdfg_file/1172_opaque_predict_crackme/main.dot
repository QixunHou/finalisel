digraph "DFG for'main' function" {
	Node0x1239e98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1239f18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1239fa8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x123a008[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x123a0b8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x123a4e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x123a5c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x123a6c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x123a788[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x123a838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x123a8f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x123a9a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1234c00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x123aba8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x123bb18[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x123c188[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x123c1e8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x123c260[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x123c2d0[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0x123c340[shape=record, label="  %16 = add i32 %12, %10"];
	Node0x123c3b0[shape=record, label="  %17 = sub i32 %15, %16"];
	Node0x123c420[shape=record, label="  %18 = shl i32 %11, 1"];
	Node0x123c490[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x123c500[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x123c570[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x123c5e0[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x123c650[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x123c6c0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x123c730[shape=record, label="  %25 = and i32 %11, %14"];
	Node0x123c7a0[shape=record, label="  %26 = shl i32 %21, 1"];
	Node0x123c810[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x123c880[shape=record, label="  %28 = mul i32 %25, 6"];
	Node0x123c8f0[shape=record, label="  %29 = xor i32 %10, -1"];
	Node0x123c960[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x123c9d0[shape=record, label="  %31 = or i32 %13, %29"];
	Node0x123ca40[shape=record, label="  %32 = and i32 %13, %10"];
	Node0x123cab0[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0x123cb20[shape=record, label="  %34 = shl i32 %30, 2"];
	Node0x123cb90[shape=record, label="  %35 = xor i32 %34, -4"];
	Node0x123cc00[shape=record, label="  %36 = shl i32 %31, 2"];
	Node0x123cc70[shape=record, label="  %37 = xor i32 %36, -4"];
	Node0x123cce0[shape=record, label="  %38 = sub i32 %12, %32"];
	Node0x123cd50[shape=record, label="  %39 = mul i32 %38, 3"];
	Node0x123cdc0[shape=record, label="  %40 = add i32 %10, -2"];
	Node0x123ce30[shape=record, label="  %41 = sub i32 %40, %11"];
	Node0x123cea0[shape=record, label="  %42 = add i32 %41, %19"];
	Node0x123cf10[shape=record, label="  %43 = sub i32 %42, %20"];
	Node0x123cf80[shape=record, label="  %44 = sub i32 %43, %21"];
	Node0x123cff0[shape=record, label="  %45 = add i32 %44, %25"];
	Node0x123d060[shape=record, label="  %46 = sub i32 %45, %13"];
	Node0x123d0d0[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x123d140[shape=record, label="  %48 = sub i32 %47, %15"];
	Node0x123d1b0[shape=record, label="  %49 = sub i32 %48, %30"];
	Node0x123d220[shape=record, label="  %50 = sub i32 %49, %31"];
	Node0x123d290[shape=record, label="  %51 = add i32 %50, %33"];
	Node0x123d300[shape=record, label="  %52 = sub i32 %51, %24"];
	Node0x123d370[shape=record, label="  %53 = add i32 %52, %27"];
	Node0x123d3e0[shape=record, label="  %54 = sub i32 %53, %35"];
	Node0x123d450[shape=record, label="  %55 = sub i32 %54, %37"];
	Node0x123d4c0[shape=record, label="  %56 = add i32 %55, %39"];
	Node0x123d530[shape=record, label="  %57 = icmp eq i32 %17, %56"];
	Node0x11d98b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x123d5c0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0x123d868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x123d9c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x123dad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x123dbe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x123dca8[shape=record, label="  ret i32 0"];
	Node0x1239e98 -> Node0x1239f18;
	Node0x1239f18 -> Node0x1239fa8;
	Node0x1239fa8 -> Node0x123a008;
	Node0x123a008 -> Node0x123a0b8;
	Node0x123a0b8 -> Node0x123a4e8;
	Node0x123a4e8 -> Node0x123a5c8;
	Node0x123a5c8 -> Node0x123a6c8;
	Node0x123a6c8 -> Node0x123a788;
	Node0x123a788 -> Node0x123a838;
	Node0x123a838 -> Node0x123a8f8;
	Node0x123a8f8 -> Node0x123a9a8;
	Node0x123a9a8 -> Node0x1234c00;
	Node0x1234c00 -> Node0x123aba8;
	Node0x123aba8 -> Node0x123bb18;
	Node0x123bb18 -> Node0x123c188;
	Node0x123c188 -> Node0x123c1e8;
	Node0x123c1e8 -> Node0x123c260;
	Node0x123c260 -> Node0x123c2d0;
	Node0x123c2d0 -> Node0x123c340;
	Node0x123c340 -> Node0x123c3b0;
	Node0x123c3b0 -> Node0x123c420;
	Node0x123c420 -> Node0x123c490;
	Node0x123c490 -> Node0x123c500;
	Node0x123c500 -> Node0x123c570;
	Node0x123c570 -> Node0x123c5e0;
	Node0x123c5e0 -> Node0x123c650;
	Node0x123c650 -> Node0x123c6c0;
	Node0x123c6c0 -> Node0x123c730;
	Node0x123c730 -> Node0x123c7a0;
	Node0x123c7a0 -> Node0x123c810;
	Node0x123c810 -> Node0x123c880;
	Node0x123c880 -> Node0x123c8f0;
	Node0x123c8f0 -> Node0x123c960;
	Node0x123c960 -> Node0x123c9d0;
	Node0x123c9d0 -> Node0x123ca40;
	Node0x123ca40 -> Node0x123cab0;
	Node0x123cab0 -> Node0x123cb20;
	Node0x123cb20 -> Node0x123cb90;
	Node0x123cb90 -> Node0x123cc00;
	Node0x123cc00 -> Node0x123cc70;
	Node0x123cc70 -> Node0x123cce0;
	Node0x123cce0 -> Node0x123cd50;
	Node0x123cd50 -> Node0x123cdc0;
	Node0x123cdc0 -> Node0x123ce30;
	Node0x123ce30 -> Node0x123cea0;
	Node0x123cea0 -> Node0x123cf10;
	Node0x123cf10 -> Node0x123cf80;
	Node0x123cf80 -> Node0x123cff0;
	Node0x123cff0 -> Node0x123d060;
	Node0x123d060 -> Node0x123d0d0;
	Node0x123d0d0 -> Node0x123d140;
	Node0x123d140 -> Node0x123d1b0;
	Node0x123d1b0 -> Node0x123d220;
	Node0x123d220 -> Node0x123d290;
	Node0x123d290 -> Node0x123d300;
	Node0x123d300 -> Node0x123d370;
	Node0x123d370 -> Node0x123d3e0;
	Node0x123d3e0 -> Node0x123d450;
	Node0x123d450 -> Node0x123d4c0;
	Node0x123d4c0 -> Node0x123d530;
	Node0x123d530 -> Node0x11d98b8;
	Node0x11d98b8 -> Node0x123d5c0;
	Node0x123d5c0 -> Node0x123d868;
	Node0x123d868 -> Node0x123d9c8;
	Node0x123d9c8 -> Node0x123dad8;
	Node0x123dad8 -> Node0x123dbe8;
	Node0x123dbe8 -> Node0x123dca8;
edge [color=red]
	Node0x1239e98 -> Node0x123a0b8;
	Node0x123a0b8 -> Node0x123a4e8;
	Node0x1239f18 -> Node0x123a5c8;
	Node0x123a5c8 -> Node0x123a6c8;
	Node0x1239fa8 -> Node0x123a788;
	Node0x123a788 -> Node0x123a838;
	Node0x123a008 -> Node0x123a8f8;
	Node0x123a8f8 -> Node0x123a9a8;
	Node0x1239e98 -> Node0x1234c00;
	Node0x1239f18 -> Node0x1234c00;
	Node0x1239fa8 -> Node0x1234c00;
	Node0x123a008 -> Node0x1234c00;
	Node0x1239e98 -> Node0x123aba8;
	Node0x1239f18 -> Node0x123bb18;
	Node0x1239fa8 -> Node0x123c188;
	Node0x123a008 -> Node0x123c1e8;
	Node0x123c188 -> Node0x123c260;
	Node0x123c1e8 -> Node0x123c2d0;
	Node0x123aba8 -> Node0x123c2d0;
	Node0x123c188 -> Node0x123c340;
	Node0x123aba8 -> Node0x123c340;
	Node0x123c2d0 -> Node0x123c3b0;
	Node0x123c340 -> Node0x123c3b0;
	Node0x123bb18 -> Node0x123c420;
	Node0x123c420 -> Node0x123c490;
	Node0x123c188 -> Node0x123c500;
	Node0x123bb18 -> Node0x123c500;
	Node0x123c188 -> Node0x123c570;
	Node0x123bb18 -> Node0x123c570;
	Node0x123c188 -> Node0x123c5e0;
	Node0x123bb18 -> Node0x123c5e0;
	Node0x123c5e0 -> Node0x123c650;
	Node0x123c650 -> Node0x123c6c0;
	Node0x123bb18 -> Node0x123c730;
	Node0x123c260 -> Node0x123c730;
	Node0x123c570 -> Node0x123c7a0;
	Node0x123c7a0 -> Node0x123c810;
	Node0x123c730 -> Node0x123c880;
	Node0x123aba8 -> Node0x123c8f0;
	Node0x123c1e8 -> Node0x123c960;
	Node0x123aba8 -> Node0x123c960;
	Node0x123c1e8 -> Node0x123c9d0;
	Node0x123c8f0 -> Node0x123c9d0;
	Node0x123c1e8 -> Node0x123ca40;
	Node0x123aba8 -> Node0x123ca40;
	Node0x123ca40 -> Node0x123cab0;
	Node0x123c960 -> Node0x123cb20;
	Node0x123cb20 -> Node0x123cb90;
	Node0x123c9d0 -> Node0x123cc00;
	Node0x123cc00 -> Node0x123cc70;
	Node0x123c188 -> Node0x123cce0;
	Node0x123ca40 -> Node0x123cce0;
	Node0x123cce0 -> Node0x123cd50;
	Node0x123aba8 -> Node0x123cdc0;
	Node0x123cdc0 -> Node0x123ce30;
	Node0x123bb18 -> Node0x123ce30;
	Node0x123ce30 -> Node0x123cea0;
	Node0x123c490 -> Node0x123cea0;
	Node0x123cea0 -> Node0x123cf10;
	Node0x123c500 -> Node0x123cf10;
	Node0x123cf10 -> Node0x123cf80;
	Node0x123c570 -> Node0x123cf80;
	Node0x123cf80 -> Node0x123cff0;
	Node0x123c730 -> Node0x123cff0;
	Node0x123cff0 -> Node0x123d060;
	Node0x123c1e8 -> Node0x123d060;
	Node0x123d060 -> Node0x123d0d0;
	Node0x123c880 -> Node0x123d0d0;
	Node0x123d0d0 -> Node0x123d140;
	Node0x123c2d0 -> Node0x123d140;
	Node0x123d140 -> Node0x123d1b0;
	Node0x123c960 -> Node0x123d1b0;
	Node0x123d1b0 -> Node0x123d220;
	Node0x123c9d0 -> Node0x123d220;
	Node0x123d220 -> Node0x123d290;
	Node0x123cab0 -> Node0x123d290;
	Node0x123d290 -> Node0x123d300;
	Node0x123c6c0 -> Node0x123d300;
	Node0x123d300 -> Node0x123d370;
	Node0x123c810 -> Node0x123d370;
	Node0x123d370 -> Node0x123d3e0;
	Node0x123cb90 -> Node0x123d3e0;
	Node0x123d3e0 -> Node0x123d450;
	Node0x123cc70 -> Node0x123d450;
	Node0x123d450 -> Node0x123d4c0;
	Node0x123cd50 -> Node0x123d4c0;
	Node0x123c3b0 -> Node0x123d530;
	Node0x123d4c0 -> Node0x123d530;
	Node0x123d530 -> Node0x11d98b8;
	Node0x11d98b8 -> Node0x123d5c0;
	Node0x123a8f8 -> Node0x123d868;
	Node0x123a788 -> Node0x123d9c8;
	Node0x123a5c8 -> Node0x123dad8;
	Node0x123a0b8 -> Node0x123dbe8;
}
