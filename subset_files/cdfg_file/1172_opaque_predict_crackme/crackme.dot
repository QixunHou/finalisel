digraph "DFG for'crackme' function" {
	Node0x12381e0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1238250[shape=record, label="  %6 = xor i32 %3, %0"];
	Node0x12382c0[shape=record, label="  %7 = add i32 %2, %0"];
	Node0x1238330[shape=record, label="  %8 = sub i32 %6, %7"];
	Node0x12383d0[shape=record, label="  %9 = shl i32 %1, 1"];
	Node0x1238470[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x12384e0[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x1238550[shape=record, label="  %12 = or i32 %2, %1"];
	Node0x12385c0[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x1238630[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x12386a0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1238710[shape=record, label="  %16 = and i32 %5, %1"];
	Node0x1238780[shape=record, label="  %17 = shl i32 %12, 1"];
	Node0x12387f0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x1238890[shape=record, label="  %19 = mul i32 %16, 6"];
	Node0x1238900[shape=record, label="  %20 = xor i32 %0, -1"];
	Node0x1238970[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x12389e0[shape=record, label="  %22 = or i32 %20, %3"];
	Node0x1238a50[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x1238ac0[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x1238b60[shape=record, label="  %25 = shl i32 %21, 2"];
	Node0x1238c00[shape=record, label="  %26 = xor i32 %25, -4"];
	Node0x1238c70[shape=record, label="  %27 = shl i32 %22, 2"];
	Node0x1238ce0[shape=record, label="  %28 = xor i32 %27, -4"];
	Node0x1238d50[shape=record, label="  %29 = sub i32 %2, %23"];
	Node0x1238df0[shape=record, label="  %30 = mul i32 %29, 3"];
	Node0x1238e60[shape=record, label="  %31 = add i32 %0, -2"];
	Node0x1238ed0[shape=record, label="  %32 = sub i32 %31, %1"];
	Node0x1239150[shape=record, label="  %33 = add i32 %32, %10"];
	Node0x12391c0[shape=record, label="  %34 = sub i32 %33, %11"];
	Node0x1239230[shape=record, label="  %35 = sub i32 %34, %12"];
	Node0x12392a0[shape=record, label="  %36 = add i32 %35, %16"];
	Node0x1239310[shape=record, label="  %37 = sub i32 %36, %3"];
	Node0x1239380[shape=record, label="  %38 = add i32 %37, %19"];
	Node0x12393f0[shape=record, label="  %39 = sub i32 %38, %6"];
	Node0x1239460[shape=record, label="  %40 = sub i32 %39, %21"];
	Node0x12394d0[shape=record, label="  %41 = sub i32 %40, %22"];
	Node0x1239540[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x12395b0[shape=record, label="  %43 = sub i32 %42, %15"];
	Node0x1239620[shape=record, label="  %44 = add i32 %43, %18"];
	Node0x1239690[shape=record, label="  %45 = sub i32 %44, %26"];
	Node0x1239700[shape=record, label="  %46 = sub i32 %45, %28"];
	Node0x1239770[shape=record, label="  %47 = add i32 %46, %30"];
	Node0x12397e0[shape=record, label="  %48 = icmp eq i32 %8, %47"];
	Node0x11d8268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1239c80[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x1239cd0[shape=record, label="  ret void"];
	Node0x12381e0 -> Node0x1238250;
	Node0x1238250 -> Node0x12382c0;
	Node0x12382c0 -> Node0x1238330;
	Node0x1238330 -> Node0x12383d0;
	Node0x12383d0 -> Node0x1238470;
	Node0x1238470 -> Node0x12384e0;
	Node0x12384e0 -> Node0x1238550;
	Node0x1238550 -> Node0x12385c0;
	Node0x12385c0 -> Node0x1238630;
	Node0x1238630 -> Node0x12386a0;
	Node0x12386a0 -> Node0x1238710;
	Node0x1238710 -> Node0x1238780;
	Node0x1238780 -> Node0x12387f0;
	Node0x12387f0 -> Node0x1238890;
	Node0x1238890 -> Node0x1238900;
	Node0x1238900 -> Node0x1238970;
	Node0x1238970 -> Node0x12389e0;
	Node0x12389e0 -> Node0x1238a50;
	Node0x1238a50 -> Node0x1238ac0;
	Node0x1238ac0 -> Node0x1238b60;
	Node0x1238b60 -> Node0x1238c00;
	Node0x1238c00 -> Node0x1238c70;
	Node0x1238c70 -> Node0x1238ce0;
	Node0x1238ce0 -> Node0x1238d50;
	Node0x1238d50 -> Node0x1238df0;
	Node0x1238df0 -> Node0x1238e60;
	Node0x1238e60 -> Node0x1238ed0;
	Node0x1238ed0 -> Node0x1239150;
	Node0x1239150 -> Node0x12391c0;
	Node0x12391c0 -> Node0x1239230;
	Node0x1239230 -> Node0x12392a0;
	Node0x12392a0 -> Node0x1239310;
	Node0x1239310 -> Node0x1239380;
	Node0x1239380 -> Node0x12393f0;
	Node0x12393f0 -> Node0x1239460;
	Node0x1239460 -> Node0x12394d0;
	Node0x12394d0 -> Node0x1239540;
	Node0x1239540 -> Node0x12395b0;
	Node0x12395b0 -> Node0x1239620;
	Node0x1239620 -> Node0x1239690;
	Node0x1239690 -> Node0x1239700;
	Node0x1239700 -> Node0x1239770;
	Node0x1239770 -> Node0x12397e0;
	Node0x12397e0 -> Node0x11d8268;
	Node0x11d8268 -> Node0x1239c80;
	Node0x1239c80 -> Node0x1239cd0;
edge [color=red]
	Node0x1238250 -> Node0x1238330;
	Node0x12382c0 -> Node0x1238330;
	Node0x12383d0 -> Node0x1238470;
	Node0x12385c0 -> Node0x1238630;
	Node0x1238630 -> Node0x12386a0;
	Node0x12381e0 -> Node0x1238710;
	Node0x1238550 -> Node0x1238780;
	Node0x1238780 -> Node0x12387f0;
	Node0x1238710 -> Node0x1238890;
	Node0x1238900 -> Node0x12389e0;
	Node0x1238a50 -> Node0x1238ac0;
	Node0x1238970 -> Node0x1238b60;
	Node0x1238b60 -> Node0x1238c00;
	Node0x12389e0 -> Node0x1238c70;
	Node0x1238c70 -> Node0x1238ce0;
	Node0x1238a50 -> Node0x1238d50;
	Node0x1238d50 -> Node0x1238df0;
	Node0x1238e60 -> Node0x1238ed0;
	Node0x1238ed0 -> Node0x1239150;
	Node0x1238470 -> Node0x1239150;
	Node0x1239150 -> Node0x12391c0;
	Node0x12384e0 -> Node0x12391c0;
	Node0x12391c0 -> Node0x1239230;
	Node0x1238550 -> Node0x1239230;
	Node0x1239230 -> Node0x12392a0;
	Node0x1238710 -> Node0x12392a0;
	Node0x12392a0 -> Node0x1239310;
	Node0x1239310 -> Node0x1239380;
	Node0x1238890 -> Node0x1239380;
	Node0x1239380 -> Node0x12393f0;
	Node0x1238250 -> Node0x12393f0;
	Node0x12393f0 -> Node0x1239460;
	Node0x1238970 -> Node0x1239460;
	Node0x1239460 -> Node0x12394d0;
	Node0x12389e0 -> Node0x12394d0;
	Node0x12394d0 -> Node0x1239540;
	Node0x1238ac0 -> Node0x1239540;
	Node0x1239540 -> Node0x12395b0;
	Node0x12386a0 -> Node0x12395b0;
	Node0x12395b0 -> Node0x1239620;
	Node0x12387f0 -> Node0x1239620;
	Node0x1239620 -> Node0x1239690;
	Node0x1238c00 -> Node0x1239690;
	Node0x1239690 -> Node0x1239700;
	Node0x1238ce0 -> Node0x1239700;
	Node0x1239700 -> Node0x1239770;
	Node0x1238df0 -> Node0x1239770;
	Node0x1238330 -> Node0x12397e0;
	Node0x1239770 -> Node0x12397e0;
	Node0x12397e0 -> Node0x11d8268;
	Node0x11d8268 -> Node0x1239c80;
}
