; ModuleID = '../.././c_source_file/1794_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1794_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = shl i32 %3, 1
  %7 = and i32 %1, %0
  %8 = xor i32 %2, %1
  %9 = or i32 %8, %7
  %10 = shl i32 %9, 2
  %11 = add i32 %10, %6
  %12 = xor i32 %4, -1
  %13 = and i32 %12, %3
  %14 = xor i32 %12, %3
  %15 = or i32 %4, %3
  %16 = or i32 %12, %3
  %17 = and i32 %4, %3
  %18 = xor i32 %17, -1
  %19 = xor i32 %15, -1
  %20 = shl i32 %16, 2
  %21 = xor i32 %20, -4
  %22 = mul i32 %17, 11
  %23 = xor i32 %2, -1
  %24 = xor i32 %1, %0
  %25 = xor i32 %24, -1
  %26 = and i32 %23, %25
  %27 = and i32 %2, %0
  %28 = or i32 %2, %1
  %29 = xor i32 %27, %28
  %30 = shl i32 %29, 1
  %31 = shl i32 %24, 1
  %32 = xor i32 %0, -1
  %33 = and i32 %2, %1
  %34 = and i32 %33, %32
  %35 = and i32 %8, %0
  %36 = or i32 %34, %35
  %37 = or i32 %8, %0
  %38 = xor i32 %1, -1
  %39 = or i32 %38, %0
  %40 = xor i32 %2, %0
  %41 = and i32 %40, %39
  %42 = shl i32 %41, 1
  %43 = or i32 %23, %1
  %44 = and i32 %23, %0
  %45 = xor i32 %44, -1
  %46 = and i32 %24, %45
  %47 = and i32 %40, %24
  %48 = shl i32 %47, 1
  %49 = and i32 %38, %0
  %50 = or i32 %8, %49
  %51 = or i32 %2, %0
  %52 = xor i32 %51, %1
  %53 = or i32 %24, %23
  %54 = xor i32 %49, -1
  %55 = and i32 %40, %54
  %56 = and i32 %38, %2
  %57 = and i32 %56, %0
  %58 = xor i32 %57, %37
  %59 = or i32 %1, %0
  %60 = xor i32 %59, -1
  %61 = xor i32 %60, %2
  %62 = and i32 %33, %0
  %63 = and i32 %8, %32
  %64 = xor i32 %62, -1
  %65 = xor i32 %63, %64
  %66 = and i32 %23, %1
  %67 = xor i32 %66, -1
  %68 = xor i32 %67, %0
  %69 = or i32 %23, %0
  %70 = or i32 %66, %0
  %71 = or i32 %49, %2
  %72 = xor i32 %8, -1
  %73 = and i32 %59, %72
  %74 = xor i32 %33, -1
  %75 = xor i32 %49, %74
  %76 = and i32 %40, %1
  %77 = and i32 %45, %25
  %78 = xor i32 %27, %67
  %79 = and i32 %74, %32
  %80 = xor i32 %51, -1
  %81 = or i32 %80, %25
  %82 = xor i32 %44, %43
  %83 = and i32 %39, %72
  %84 = xor i32 %27, -1
  %85 = add i32 %27, 1
  %86 = xor i32 %40, -1
  %87 = or i32 %86, %1
  %88 = xor i32 %39, -1
  %89 = xor i32 %88, %2
  %90 = shl i32 %44, 1
  %91 = or i32 %7, %86
  %92 = or i32 %44, %38
  %93 = or i32 %27, %38
  %94 = or i32 %38, %2
  %95 = xor i32 %94, %0
  %96 = or i32 %57, %95
  %97 = and i32 %69, %24
  %98 = or i32 %24, %86
  %99 = xor i32 %66, %0
  %100 = shl i32 %99, 1
  %101 = shl i32 %0, 1
  %102 = xor i32 %43, -1
  %103 = add i32 %43, 1
  %104 = or i32 %8, %88
  %105 = xor i32 %69, -1
  %106 = or i32 %105, %38
  %107 = and i32 %69, %1
  %108 = or i32 %7, %2
  %109 = xor i32 %69, %7
  %110 = or i32 %25, %2
  %111 = or i32 %40, %38
  %112 = or i32 %62, %63
  %113 = or i32 %44, %25
  %114 = or i32 %27, %60
  %115 = and i32 %51, %1
  %116 = and i32 %28, %32
  %117 = or i32 %66, %32
  %118 = or i32 %86, %88
  %119 = xor i32 %54, %2
  %120 = or i32 %7, %102
  %121 = and i32 %28, %0
  %122 = xor i32 %80, %1
  %123 = or i32 %40, %1
  %124 = xor i32 %7, -1
  %125 = and i32 %124, %2
  %126 = shl i32 %125, 1
  %127 = xor i32 %72, %0
  %128 = or i32 %28, %0
  %129 = and i32 %24, %23
  %130 = and i32 %51, %38
  %131 = shl i32 %130, 2
  %132 = xor i32 %28, %0
  %133 = or i32 %62, %132
  %134 = or i32 %86, %25
  %135 = and i32 %51, %24
  %136 = and i32 %86, %38
  %137 = shl i32 %136, 2
  %138 = or i32 %27, %25
  %139 = shl i32 %138, 1
  %140 = and i32 %56, %32
  %141 = and i32 %94, %0
  %142 = or i32 %140, %141
  %143 = or i32 %72, %0
  %144 = xor i32 %141, -1
  %145 = xor i32 %140, %144
  %146 = or i32 %67, %32
  %147 = or i32 %80, %1
  %148 = and i32 %72, %124
  %149 = or i32 %8, %32
  %150 = xor i32 %140, %149
  %151 = and i32 %67, %32
  %152 = or i32 %74, %32
  %153 = xor i32 %132, %64
  %154 = xor i32 %28, -1
  %155 = or i32 %154, %32
  %156 = or i32 %40, %60
  %157 = or i32 %49, %86
  %158 = xor i32 %84, %1
  %159 = or i32 %27, %88
  %160 = and i32 %24, %84
  %161 = shl i32 %160, 1
  %162 = or i32 %28, %32
  %163 = or i32 %105, %1
  %164 = shl i32 %163, 1
  %165 = and i32 %84, %38
  %166 = xor i32 %69, %1
  %167 = shl i32 %166, 1
  %168 = add i32 %40, 1
  %169 = shl i32 %8, 1
  %170 = xor i32 %45, %1
  %171 = xor i32 %49, %2
  %172 = or i32 %72, %60
  %173 = and i32 %40, %59
  %174 = or i32 %33, %0
  %175 = and i32 %86, %54
  %176 = and i32 %40, %25
  %177 = xor i32 %8, %0
  %178 = xor i32 %62, %177
  %179 = or i32 %57, %177
  %180 = and i32 %39, %86
  %181 = or i32 %34, %121
  %182 = xor i32 %121, -1
  %183 = xor i32 %34, %182
  %184 = xor i32 %49, %67
  %185 = or i32 %40, %88
  %186 = and i32 %23, %54
  %187 = or i32 %49, %72
  %188 = xor i32 %44, %1
  %189 = and i32 %86, %1
  %190 = or i32 %24, %80
  %191 = and i32 %40, %38
  %192 = xor i32 %7, %2
  %193 = xor i32 %37, 2147483647
  %194 = or i32 %193, %57
  %195 = shl i32 %194, 1
  %196 = or i32 %49, %23
  %197 = shl i32 %1, 1
  %198 = shl i32 %25, 1
  %199 = or i32 %7, %72
  %200 = and i32 %8, %124
  %201 = xor i32 %27, %59
  %202 = or i32 %27, %24
  %203 = or i32 %154, %0
  %204 = or i32 %40, %25
  %205 = or i32 %33, %32
  %206 = and i32 %72, %32
  %207 = or i32 %44, %24
  %208 = and i32 %43, %0
  %209 = shl i32 %208, 1
  %210 = or i32 %43, %0
  %211 = or i32 %7, %80
  %212 = or i32 %43, %32
  %213 = xor i32 %35, 2147483647
  %214 = xor i32 %213, %34
  %215 = or i32 %27, %154
  %216 = or i32 %66, %49
  %217 = and i32 %25, %2
  %218 = or i32 %102, %0
  %219 = shl i32 %218, 1
  %220 = xor i32 %149, -1
  %221 = or i32 %140, %220
  %222 = or i32 %105, %25
  %223 = and i32 %54, %2
  %224 = and i32 %86, %124
  %225 = or i32 %88, %2
  %226 = add i32 %39, 1
  %227 = and i32 %69, %25
  %228 = shl i32 %227, 1
  %229 = and i32 %8, %39
  %230 = and i32 %74, %0
  %231 = xor i32 %27, %39
  %232 = xor i32 %102, %0
  %233 = and i32 %24, %2
  %234 = xor i32 %59, %2
  %235 = and i32 %84, %1
  %236 = and i32 %8, %54
  %237 = and i32 %84, %25
  %238 = and i32 %59, %23
  %239 = shl i32 %238, 2
  %240 = and i32 %51, %25
  %241 = or i32 %62, %116
  %242 = shl i32 %241, 1
  %243 = xor i32 %177, -1
  %244 = xor i32 %57, %243
  %245 = or i32 %102, %32
  %246 = or i32 %7, %154
  %247 = add i32 %51, 1
  %248 = and i32 %59, %86
  %249 = and i32 %67, %0
  %250 = or i32 %67, %0
  %251 = or i32 %62, %243
  %252 = xor i32 %124, %2
  %253 = or i32 %24, %105
  %254 = or i32 %27, %1
  %255 = and i32 %69, %38
  %256 = xor i32 %51, %7
  %257 = or i32 %7, %105
  %258 = or i32 %40, %24
  %259 = xor i32 %43, %0
  %260 = add i32 %8, 1
  %261 = or i32 %23, %25
  %262 = shl i32 %261, 1
  %263 = or i32 %27, %66
  %264 = or i32 %60, %2
  %265 = or i32 %24, %2
  %266 = and i32 %45, %38
  %267 = and i32 %59, %2
  %268 = shl i32 %267, 1
  %269 = or i32 %7, %23
  %270 = and i32 %39, %23
  %271 = and i32 %40, %124
  %272 = and i32 %24, %86
  %273 = xor i32 %28, %7
  %274 = and i32 %39, %2
  %275 = or i32 %86, %60
  %276 = and i32 %23, %124
  %277 = and i32 %94, %32
  %278 = or i32 %57, %277
  %279 = shl i32 %74, 1
  %280 = xor i32 %116, %64
  %281 = or i32 %74, %0
  %282 = shl i32 %281, 1
  %283 = xor i32 %43, %7
  %284 = or i32 %40, %7
  %285 = and i32 %154, %32
  %286 = shl i32 %285, 2
  %287 = and i32 %66, %32
  %288 = and i32 %154, %0
  %289 = shl i32 %288, 2
  %290 = and i32 %66, %0
  %291 = and i32 %102, %32
  %292 = mul i32 %34, -19
  %293 = and i32 %102, %0
  %294 = sub i32 %287, %2
  %295 = sub i32 %294, %257
  %296 = sub i32 %295, %180
  %297 = add i32 %296, %122
  %298 = sub i32 %297, %14
  %299 = add i32 %298, %19
  %300 = mul i32 %299, 5
  %301 = add i32 %272, %62
  %302 = add i32 %301, %58
  %303 = add i32 %302, %142
  %304 = shl i32 %303, 2
  %305 = sub i32 %103, %51
  %306 = add i32 %305, %133
  %307 = mul i32 %306, 3
  %308 = add i32 %293, %290
  %309 = mul i32 %308, 10
  %310 = add i32 %276, -1
  %311 = add i32 %310, %264
  %312 = add i32 %311, %225
  %313 = add i32 %312, %192
  %314 = add i32 %313, %108
  %315 = add i32 %314, %89
  %316 = add i32 %315, %67
  %317 = add i32 %316, %273
  %318 = add i32 %317, %254
  %319 = add i32 %318, %250
  %320 = add i32 %319, %230
  %321 = add i32 %320, %222
  %322 = add i32 %321, %202
  %323 = add i32 %322, %188
  %324 = add i32 %323, %148
  %325 = add i32 %324, %121
  %326 = add i32 %325, %113
  %327 = add i32 %326, %111
  %328 = add i32 %327, %78
  %329 = add i32 %328, %55
  %330 = add i32 %329, %52
  %331 = add i32 %330, %13
  %332 = add i32 %331, %214
  %333 = shl i32 %332, 1
  %334 = add i32 %0, 5
  %335 = sub i32 %334, %101
  %336 = add i32 %335, %38
  %337 = add i32 %336, %49
  %338 = add i32 %337, %39
  %339 = add i32 %338, %7
  %340 = sub i32 %339, %197
  %341 = add i32 %340, %226
  %342 = sub i32 %341, %26
  %343 = sub i32 %342, %31
  %344 = add i32 %343, %43
  %345 = sub i32 %344, %53
  %346 = add i32 %345, %61
  %347 = add i32 %346, %71
  %348 = add i32 %347, %85
  %349 = add i32 %348, %110
  %350 = sub i32 %349, %119
  %351 = add i32 %350, %45
  %352 = add i32 %351, %129
  %353 = add i32 %352, %168
  %354 = sub i32 %353, %171
  %355 = add i32 %354, %186
  %356 = sub i32 %355, %196
  %357 = sub i32 %356, %198
  %358 = sub i32 %357, %66
  %359 = add i32 %358, %217
  %360 = sub i32 %359, %223
  %361 = add i32 %360, %27
  %362 = add i32 %361, %233
  %363 = add i32 %362, %234
  %364 = add i32 %363, %28
  %365 = add i32 %364, %247
  %366 = add i32 %365, %252
  %367 = add i32 %366, %260
  %368 = add i32 %367, %265
  %369 = sub i32 %368, %269
  %370 = add i32 %369, %270
  %371 = sub i32 %370, %33
  %372 = sub i32 %371, %274
  %373 = sub i32 %372, %4
  %374 = add i32 %373, %12
  %375 = add i32 %374, %37
  %376 = add i32 %375, %46
  %377 = sub i32 %376, %50
  %378 = add i32 %377, %68
  %379 = sub i32 %378, %70
  %380 = add i32 %379, %73
  %381 = add i32 %380, %75
  %382 = sub i32 %381, %76
  %383 = sub i32 %382, %77
  %384 = sub i32 %383, %79
  %385 = sub i32 %384, %81
  %386 = sub i32 %385, %82
  %387 = sub i32 %386, %83
  %388 = add i32 %387, %87
  %389 = sub i32 %388, %90
  %390 = sub i32 %389, %91
  %391 = sub i32 %390, %92
  %392 = add i32 %391, %93
  %393 = sub i32 %392, %97
  %394 = sub i32 %393, %98
  %395 = add i32 %394, %104
  %396 = add i32 %395, %106
  %397 = add i32 %396, %107
  %398 = sub i32 %397, %109
  %399 = sub i32 %398, %114
  %400 = sub i32 %399, %115
  %401 = sub i32 %400, %116
  %402 = add i32 %401, %117
  %403 = add i32 %402, %118
  %404 = sub i32 %403, %120
  %405 = add i32 %404, %123
  %406 = sub i32 %405, %126
  %407 = add i32 %406, %127
  %408 = add i32 %407, %128
  %409 = sub i32 %408, %134
  %410 = sub i32 %409, %35
  %411 = sub i32 %410, %135
  %412 = add i32 %411, %143
  %413 = sub i32 %412, %146
  %414 = add i32 %413, %147
  %415 = sub i32 %414, %151
  %416 = add i32 %415, %152
  %417 = add i32 %416, %155
  %418 = add i32 %417, %156
  %419 = sub i32 %418, %157
  %420 = sub i32 %419, %158
  %421 = sub i32 %420, %159
  %422 = sub i32 %421, %162
  %423 = add i32 %422, %165
  %424 = sub i32 %423, %132
  %425 = sub i32 %424, %169
  %426 = sub i32 %425, %170
  %427 = add i32 %426, %172
  %428 = add i32 %427, %173
  %429 = sub i32 %428, %174
  %430 = sub i32 %429, %175
  %431 = add i32 %430, %176
  %432 = add i32 %431, %184
  %433 = add i32 %432, %185
  %434 = add i32 %433, %187
  %435 = add i32 %434, %189
  %436 = sub i32 %435, %190
  %437 = add i32 %436, %191
  %438 = add i32 %437, %199
  %439 = add i32 %438, %200
  %440 = sub i32 %439, %201
  %441 = sub i32 %440, %203
  %442 = sub i32 %441, %204
  %443 = sub i32 %442, %205
  %444 = add i32 %443, %206
  %445 = add i32 %444, %207
  %446 = add i32 %445, %210
  %447 = add i32 %446, %211
  %448 = add i32 %447, %212
  %449 = add i32 %448, %215
  %450 = sub i32 %449, %216
  %451 = add i32 %450, %224
  %452 = sub i32 %451, %229
  %453 = sub i32 %452, %231
  %454 = add i32 %453, %232
  %455 = add i32 %454, %235
  %456 = add i32 %455, %236
  %457 = sub i32 %456, %237
  %458 = sub i32 %457, %239
  %459 = sub i32 %458, %240
  %460 = add i32 %459, %149
  %461 = sub i32 %460, %177
  %462 = add i32 %461, %245
  %463 = sub i32 %462, %246
  %464 = sub i32 %463, %248
  %465 = add i32 %464, %249
  %466 = add i32 %465, %253
  %467 = add i32 %466, %255
  %468 = add i32 %467, %256
  %469 = sub i32 %468, %258
  %470 = sub i32 %469, %259
  %471 = sub i32 %470, %262
  %472 = add i32 %471, %263
  %473 = add i32 %472, %266
  %474 = sub i32 %473, %268
  %475 = add i32 %474, %271
  %476 = sub i32 %475, %63
  %477 = add i32 %476, %275
  %478 = sub i32 %477, %279
  %479 = sub i32 %478, %283
  %480 = add i32 %479, %284
  %481 = sub i32 %480, %291
  %482 = add i32 %481, %13
  %483 = sub i32 %482, %15
  %484 = add i32 %483, %16
  %485 = add i32 %484, %18
  %486 = sub i32 %485, %30
  %487 = sub i32 %486, %36
  %488 = sub i32 %487, %42
  %489 = sub i32 %488, %48
  %490 = sub i32 %489, %65
  %491 = add i32 %490, %96
  %492 = sub i32 %491, %100
  %493 = sub i32 %492, %112
  %494 = sub i32 %493, %131
  %495 = sub i32 %494, %137
  %496 = sub i32 %495, %139
  %497 = add i32 %496, %145
  %498 = sub i32 %497, %150
  %499 = sub i32 %498, %153
  %500 = sub i32 %499, %161
  %501 = sub i32 %500, %164
  %502 = sub i32 %501, %167
  %503 = sub i32 %502, %178
  %504 = sub i32 %503, %179
  %505 = sub i32 %504, %181
  %506 = sub i32 %505, %183
  %507 = sub i32 %506, %209
  %508 = sub i32 %507, %219
  %509 = sub i32 %508, %221
  %510 = sub i32 %509, %228
  %511 = add i32 %510, %244
  %512 = add i32 %511, %251
  %513 = add i32 %512, %278
  %514 = add i32 %513, %280
  %515 = sub i32 %514, %282
  %516 = sub i32 %515, %286
  %517 = sub i32 %516, %289
  %518 = add i32 %517, %292
  %519 = add i32 %518, %22
  %520 = sub i32 %519, %242
  %521 = add i32 %520, %309
  %522 = add i32 %521, %21
  %523 = sub i32 %522, %195
  %524 = add i32 %523, %307
  %525 = add i32 %524, %304
  %526 = add i32 %525, %300
  %527 = add i32 %526, %333
  %528 = icmp eq i32 %11, %527
  %529 = select i1 %528, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %530 = tail call i32 @puts(i8* nonnull dereferenceable(1) %529)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
