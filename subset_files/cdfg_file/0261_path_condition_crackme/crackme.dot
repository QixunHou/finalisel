digraph "DFG for'crackme' function" {
	Node0x1593420[shape=record, label="  %3 = or i32 %1, %0"];
	Node0x1593ad0[shape=record, label="  %4 = shl i32 %3, 1"];
	Node0x1593b90[shape=record, label="  %5 = and i32 %1, %0"];
	Node0x1593c00[shape=record, label="  %6 = shl i32 %1, 1"];
	Node0x1593c70[shape=record, label="  %7 = xor i32 %6, -2"];
	Node0x1593ce0[shape=record, label="  %8 = xor i32 %1, %0"];
	Node0x1593d80[shape=record, label="  %9 = shl i32 %0, 2"];
	Node0x1593e20[shape=record, label="  %10 = xor i32 %3, -1"];
	Node0x1593ec0[shape=record, label="  %11 = mul i32 %10, 3"];
	Node0x1593f30[shape=record, label="  %12 = shl i32 %5, 2"];
	Node0x1593fa0[shape=record, label="  %13 = or i32 %9, 1"];
	Node0x1594010[shape=record, label="  %14 = add i32 %13, %5"];
	Node0x1594080[shape=record, label="  %15 = add i32 %14, %6"];
	Node0x15940f0[shape=record, label="  %16 = sub i32 %15, %7"];
	Node0x1594160[shape=record, label="  %17 = add i32 %16, %8"];
	Node0x15941d0[shape=record, label="  %18 = add i32 %17, %11"];
	Node0x1594240[shape=record, label="  %19 = sub i32 %18, %12"];
	Node0x15942b0[shape=record, label="  %20 = icmp eq i32 %4, %19"];
	Node0x1534268[shape=record, label="  %21 = select i1 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1594750[shape=record, label="  %22 = tail call i32 @puts(i8* nonnull dereferenceable(1) %21)"];
	Node0x15947a0[shape=record, label="  ret void"];
	Node0x1593420 -> Node0x1593ad0;
	Node0x1593ad0 -> Node0x1593b90;
	Node0x1593b90 -> Node0x1593c00;
	Node0x1593c00 -> Node0x1593c70;
	Node0x1593c70 -> Node0x1593ce0;
	Node0x1593ce0 -> Node0x1593d80;
	Node0x1593d80 -> Node0x1593e20;
	Node0x1593e20 -> Node0x1593ec0;
	Node0x1593ec0 -> Node0x1593f30;
	Node0x1593f30 -> Node0x1593fa0;
	Node0x1593fa0 -> Node0x1594010;
	Node0x1594010 -> Node0x1594080;
	Node0x1594080 -> Node0x15940f0;
	Node0x15940f0 -> Node0x1594160;
	Node0x1594160 -> Node0x15941d0;
	Node0x15941d0 -> Node0x1594240;
	Node0x1594240 -> Node0x15942b0;
	Node0x15942b0 -> Node0x1534268;
	Node0x1534268 -> Node0x1594750;
	Node0x1594750 -> Node0x15947a0;
edge [color=red]
	Node0x1593420 -> Node0x1593ad0;
	Node0x1593c00 -> Node0x1593c70;
	Node0x1593420 -> Node0x1593e20;
	Node0x1593e20 -> Node0x1593ec0;
	Node0x1593b90 -> Node0x1593f30;
	Node0x1593d80 -> Node0x1593fa0;
	Node0x1593fa0 -> Node0x1594010;
	Node0x1593b90 -> Node0x1594010;
	Node0x1594010 -> Node0x1594080;
	Node0x1593c00 -> Node0x1594080;
	Node0x1594080 -> Node0x15940f0;
	Node0x1593c70 -> Node0x15940f0;
	Node0x15940f0 -> Node0x1594160;
	Node0x1593ce0 -> Node0x1594160;
	Node0x1594160 -> Node0x15941d0;
	Node0x1593ec0 -> Node0x15941d0;
	Node0x15941d0 -> Node0x1594240;
	Node0x1593f30 -> Node0x1594240;
	Node0x1593ad0 -> Node0x15942b0;
	Node0x1594240 -> Node0x15942b0;
	Node0x15942b0 -> Node0x1534268;
	Node0x1534268 -> Node0x1594750;
}
