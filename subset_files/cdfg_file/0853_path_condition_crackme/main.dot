digraph "DFG for'main' function" {
	Node0xf82d08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf82d88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf82e18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf82e78[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xf832f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf833d8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xf834d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf83598[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xf83648[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf838a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xf83968[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf83ac8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf83b28[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf87b30[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xf87d38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf87e98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf87fa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf88068[shape=record, label="  ret i32 0"];
	Node0xf82d08 -> Node0xf82d88;
	Node0xf82d88 -> Node0xf82e18;
	Node0xf82e18 -> Node0xf82e78;
	Node0xf82e78 -> Node0xf832f8;
	Node0xf832f8 -> Node0xf833d8;
	Node0xf833d8 -> Node0xf834d8;
	Node0xf834d8 -> Node0xf83598;
	Node0xf83598 -> Node0xf83648;
	Node0xf83648 -> Node0xf838a8;
	Node0xf838a8 -> Node0xf83968;
	Node0xf83968 -> Node0xf83ac8;
	Node0xf83ac8 -> Node0xf83b28;
	Node0xf83b28 -> Node0xf87b30;
	Node0xf87b30 -> Node0xf87d38;
	Node0xf87d38 -> Node0xf87e98;
	Node0xf87e98 -> Node0xf87fa8;
	Node0xf87fa8 -> Node0xf88068;
edge [color=red]
	Node0xf82d08 -> Node0xf82e78;
	Node0xf82e78 -> Node0xf832f8;
	Node0xf82d88 -> Node0xf833d8;
	Node0xf833d8 -> Node0xf834d8;
	Node0xf82e18 -> Node0xf83598;
	Node0xf83598 -> Node0xf83648;
	Node0xf82d08 -> Node0xf838a8;
	Node0xf82d88 -> Node0xf838a8;
	Node0xf82e18 -> Node0xf838a8;
	Node0xf82d08 -> Node0xf83968;
	Node0xf82d88 -> Node0xf83ac8;
	Node0xf82e18 -> Node0xf83b28;
	Node0xf83968 -> Node0xf87b30;
	Node0xf83ac8 -> Node0xf87b30;
	Node0xf83b28 -> Node0xf87b30;
	Node0xf83598 -> Node0xf87d38;
	Node0xf833d8 -> Node0xf87e98;
	Node0xf82e78 -> Node0xf87fa8;
}
