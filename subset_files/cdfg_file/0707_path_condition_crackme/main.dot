digraph "DFG for'main' function" {
	Node0xf21a68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf21ae8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf21b78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf21bd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xf21c88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xf220b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf22198[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xf22298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf22358[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xf22408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf224c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xf22578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf1cab0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xf22778[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf236e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf23d58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf23db8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xf23e30[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0xf23ea0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xf23f10[shape=record, label="  %16 = and i32 %13, %10"];
	Node0xf23f80[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0xf23ff0[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0xf24060[shape=record, label="  %19 = sub i32 %15, %18"];
	Node0xf240d0[shape=record, label="  %20 = xor i32 %11, -1"];
	Node0xf24140[shape=record, label="  %21 = or i32 %12, %20"];
	Node0xf241b0[shape=record, label="  %22 = or i32 %12, %11"];
	Node0xf24220[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0xf24290[shape=record, label="  %24 = or i32 %13, %10"];
	Node0xf24300[shape=record, label="  %25 = mul i32 %10, -3"];
	Node0xf24370[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0xf243e0[shape=record, label="  %27 = shl i32 %26, 2"];
	Node0xf24450[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0xf244c0[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0xf24530[shape=record, label="  %30 = shl i32 %28, 1"];
	Node0xf245a0[shape=record, label="  %31 = shl i32 %24, 3"];
	Node0xf24610[shape=record, label="  %32 = xor i32 %31, -8"];
	Node0xf24680[shape=record, label="  %33 = xor i32 %13, -1"];
	Node0xf246f0[shape=record, label="  %34 = and i32 %10, %33"];
	Node0xf24760[shape=record, label="  %35 = and i32 %13, %26"];
	Node0xf247d0[shape=record, label="  %36 = mul i32 %35, -6"];
	Node0xf24840[shape=record, label="  %37 = shl i32 %16, 1"];
	Node0xf248b0[shape=record, label="  %38 = add i32 %27, %25"];
	Node0xf24920[shape=record, label="  %39 = add i32 %38, %12"];
	Node0xf24990[shape=record, label="  %40 = sub i32 %39, %14"];
	Node0xf24a00[shape=record, label="  %41 = sub i32 %40, %21"];
	Node0xf24a70[shape=record, label="  %42 = add i32 %41, %23"];
	Node0xf24ae0[shape=record, label="  %43 = add i32 %42, %24"];
	Node0xf24b50[shape=record, label="  %44 = add i32 %43, %29"];
	Node0xf24bc0[shape=record, label="  %45 = add i32 %44, %34"];
	Node0xf24c30[shape=record, label="  %46 = sub i32 %45, %30"];
	Node0xf24ca0[shape=record, label="  %47 = add i32 %46, %36"];
	Node0xf24d10[shape=record, label="  %48 = add i32 %47, %37"];
	Node0xf24d80[shape=record, label="  %49 = sub i32 %48, %32"];
	Node0xf24df0[shape=record, label="  %50 = icmp eq i32 %19, %49"];
	Node0xec18b8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf24e80[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0xf25128[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf25288[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf25398[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf254a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf25568[shape=record, label="  ret i32 0"];
	Node0xf21a68 -> Node0xf21ae8;
	Node0xf21ae8 -> Node0xf21b78;
	Node0xf21b78 -> Node0xf21bd8;
	Node0xf21bd8 -> Node0xf21c88;
	Node0xf21c88 -> Node0xf220b8;
	Node0xf220b8 -> Node0xf22198;
	Node0xf22198 -> Node0xf22298;
	Node0xf22298 -> Node0xf22358;
	Node0xf22358 -> Node0xf22408;
	Node0xf22408 -> Node0xf224c8;
	Node0xf224c8 -> Node0xf22578;
	Node0xf22578 -> Node0xf1cab0;
	Node0xf1cab0 -> Node0xf22778;
	Node0xf22778 -> Node0xf236e8;
	Node0xf236e8 -> Node0xf23d58;
	Node0xf23d58 -> Node0xf23db8;
	Node0xf23db8 -> Node0xf23e30;
	Node0xf23e30 -> Node0xf23ea0;
	Node0xf23ea0 -> Node0xf23f10;
	Node0xf23f10 -> Node0xf23f80;
	Node0xf23f80 -> Node0xf23ff0;
	Node0xf23ff0 -> Node0xf24060;
	Node0xf24060 -> Node0xf240d0;
	Node0xf240d0 -> Node0xf24140;
	Node0xf24140 -> Node0xf241b0;
	Node0xf241b0 -> Node0xf24220;
	Node0xf24220 -> Node0xf24290;
	Node0xf24290 -> Node0xf24300;
	Node0xf24300 -> Node0xf24370;
	Node0xf24370 -> Node0xf243e0;
	Node0xf243e0 -> Node0xf24450;
	Node0xf24450 -> Node0xf244c0;
	Node0xf244c0 -> Node0xf24530;
	Node0xf24530 -> Node0xf245a0;
	Node0xf245a0 -> Node0xf24610;
	Node0xf24610 -> Node0xf24680;
	Node0xf24680 -> Node0xf246f0;
	Node0xf246f0 -> Node0xf24760;
	Node0xf24760 -> Node0xf247d0;
	Node0xf247d0 -> Node0xf24840;
	Node0xf24840 -> Node0xf248b0;
	Node0xf248b0 -> Node0xf24920;
	Node0xf24920 -> Node0xf24990;
	Node0xf24990 -> Node0xf24a00;
	Node0xf24a00 -> Node0xf24a70;
	Node0xf24a70 -> Node0xf24ae0;
	Node0xf24ae0 -> Node0xf24b50;
	Node0xf24b50 -> Node0xf24bc0;
	Node0xf24bc0 -> Node0xf24c30;
	Node0xf24c30 -> Node0xf24ca0;
	Node0xf24ca0 -> Node0xf24d10;
	Node0xf24d10 -> Node0xf24d80;
	Node0xf24d80 -> Node0xf24df0;
	Node0xf24df0 -> Node0xec18b8;
	Node0xec18b8 -> Node0xf24e80;
	Node0xf24e80 -> Node0xf25128;
	Node0xf25128 -> Node0xf25288;
	Node0xf25288 -> Node0xf25398;
	Node0xf25398 -> Node0xf254a8;
	Node0xf254a8 -> Node0xf25568;
edge [color=red]
	Node0xf21a68 -> Node0xf21c88;
	Node0xf21c88 -> Node0xf220b8;
	Node0xf21ae8 -> Node0xf22198;
	Node0xf22198 -> Node0xf22298;
	Node0xf21b78 -> Node0xf22358;
	Node0xf22358 -> Node0xf22408;
	Node0xf21bd8 -> Node0xf224c8;
	Node0xf224c8 -> Node0xf22578;
	Node0xf21a68 -> Node0xf1cab0;
	Node0xf21ae8 -> Node0xf1cab0;
	Node0xf21b78 -> Node0xf1cab0;
	Node0xf21bd8 -> Node0xf1cab0;
	Node0xf21a68 -> Node0xf22778;
	Node0xf21ae8 -> Node0xf236e8;
	Node0xf21b78 -> Node0xf23d58;
	Node0xf21bd8 -> Node0xf23db8;
	Node0xf23d58 -> Node0xf23e30;
	Node0xf236e8 -> Node0xf23e30;
	Node0xf23e30 -> Node0xf23ea0;
	Node0xf23db8 -> Node0xf23f10;
	Node0xf22778 -> Node0xf23f10;
	Node0xf23f10 -> Node0xf23f80;
	Node0xf23f80 -> Node0xf23ff0;
	Node0xf23ea0 -> Node0xf24060;
	Node0xf23ff0 -> Node0xf24060;
	Node0xf236e8 -> Node0xf240d0;
	Node0xf23d58 -> Node0xf24140;
	Node0xf240d0 -> Node0xf24140;
	Node0xf23d58 -> Node0xf241b0;
	Node0xf236e8 -> Node0xf241b0;
	Node0xf241b0 -> Node0xf24220;
	Node0xf23db8 -> Node0xf24290;
	Node0xf22778 -> Node0xf24290;
	Node0xf22778 -> Node0xf24300;
	Node0xf22778 -> Node0xf24370;
	Node0xf24370 -> Node0xf243e0;
	Node0xf23db8 -> Node0xf24450;
	Node0xf22778 -> Node0xf24450;
	Node0xf24450 -> Node0xf244c0;
	Node0xf24450 -> Node0xf24530;
	Node0xf24290 -> Node0xf245a0;
	Node0xf245a0 -> Node0xf24610;
	Node0xf23db8 -> Node0xf24680;
	Node0xf22778 -> Node0xf246f0;
	Node0xf24680 -> Node0xf246f0;
	Node0xf23db8 -> Node0xf24760;
	Node0xf24370 -> Node0xf24760;
	Node0xf24760 -> Node0xf247d0;
	Node0xf23f10 -> Node0xf24840;
	Node0xf243e0 -> Node0xf248b0;
	Node0xf24300 -> Node0xf248b0;
	Node0xf248b0 -> Node0xf24920;
	Node0xf23d58 -> Node0xf24920;
	Node0xf24920 -> Node0xf24990;
	Node0xf23e30 -> Node0xf24990;
	Node0xf24990 -> Node0xf24a00;
	Node0xf24140 -> Node0xf24a00;
	Node0xf24a00 -> Node0xf24a70;
	Node0xf24220 -> Node0xf24a70;
	Node0xf24a70 -> Node0xf24ae0;
	Node0xf24290 -> Node0xf24ae0;
	Node0xf24ae0 -> Node0xf24b50;
	Node0xf244c0 -> Node0xf24b50;
	Node0xf24b50 -> Node0xf24bc0;
	Node0xf246f0 -> Node0xf24bc0;
	Node0xf24bc0 -> Node0xf24c30;
	Node0xf24530 -> Node0xf24c30;
	Node0xf24c30 -> Node0xf24ca0;
	Node0xf247d0 -> Node0xf24ca0;
	Node0xf24ca0 -> Node0xf24d10;
	Node0xf24840 -> Node0xf24d10;
	Node0xf24d10 -> Node0xf24d80;
	Node0xf24610 -> Node0xf24d80;
	Node0xf24060 -> Node0xf24df0;
	Node0xf24d80 -> Node0xf24df0;
	Node0xf24df0 -> Node0xec18b8;
	Node0xec18b8 -> Node0xf24e80;
	Node0xf224c8 -> Node0xf25128;
	Node0xf22358 -> Node0xf25288;
	Node0xf22198 -> Node0xf25398;
	Node0xf21c88 -> Node0xf254a8;
}
