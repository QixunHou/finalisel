digraph "DFG for'main' function" {
	Node0x129b2c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x129b348[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x129b3d8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x129b838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x129b918[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x129ba38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x129bc70[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x129bd28[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x129cc98[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x129d320[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x129d390[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x129d400[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x129d470[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x129d4e0[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x129d550[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x129d5c0[shape=record, label="  %14 = shl i32 %6, 1"];
	Node0x129d630[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x129d6a0[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x129d710[shape=record, label="  %17 = xor i32 %6, 2147483647"];
	Node0x129d780[shape=record, label="  %18 = or i32 %17, %7"];
	Node0x129d7f0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x129d860[shape=record, label="  %20 = shl i32 %16, 2"];
	Node0x129d8d0[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0x129d940[shape=record, label="  %22 = shl i32 %11, 2"];
	Node0x129d9b0[shape=record, label="  %23 = xor i32 %22, -4"];
	Node0x129da20[shape=record, label="  %24 = mul i32 %12, 5"];
	Node0x129da90[shape=record, label="  %25 = add i32 %7, %6"];
	Node0x129db00[shape=record, label="  %26 = sub i32 %10, %25"];
	Node0x129db70[shape=record, label="  %27 = sub i32 %26, %8"];
	Node0x129dbe0[shape=record, label="  %28 = sub i32 %27, %11"];
	Node0x129dc50[shape=record, label="  %29 = add i32 %28, %13"];
	Node0x129dcc0[shape=record, label="  %30 = sub i32 %29, %15"];
	Node0x129dd30[shape=record, label="  %31 = add i32 %30, %16"];
	Node0x129dda0[shape=record, label="  %32 = sub i32 %31, %19"];
	Node0x129de10[shape=record, label="  %33 = add i32 %32, %24"];
	Node0x129de80[shape=record, label="  %34 = add i32 %33, %21"];
	Node0x129def0[shape=record, label="  %35 = add i32 %34, %23"];
	Node0x129df60[shape=record, label="  %36 = icmp eq i32 %35, %9"];
	Node0x123b9d8[shape=record, label="  %37 = select i1 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x129dff0[shape=record, label="  %38 = call i32 @puts(i8* nonnull dereferenceable(1) %37) #5"];
	Node0x129e248[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x129e3a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x129e468[shape=record, label="  ret i32 0"];
	Node0x129b2c8 -> Node0x129b348;
	Node0x129b348 -> Node0x129b3d8;
	Node0x129b3d8 -> Node0x129b838;
	Node0x129b838 -> Node0x129b918;
	Node0x129b918 -> Node0x129ba38;
	Node0x129ba38 -> Node0x129bc70;
	Node0x129bc70 -> Node0x129bd28;
	Node0x129bd28 -> Node0x129cc98;
	Node0x129cc98 -> Node0x129d320;
	Node0x129d320 -> Node0x129d390;
	Node0x129d390 -> Node0x129d400;
	Node0x129d400 -> Node0x129d470;
	Node0x129d470 -> Node0x129d4e0;
	Node0x129d4e0 -> Node0x129d550;
	Node0x129d550 -> Node0x129d5c0;
	Node0x129d5c0 -> Node0x129d630;
	Node0x129d630 -> Node0x129d6a0;
	Node0x129d6a0 -> Node0x129d710;
	Node0x129d710 -> Node0x129d780;
	Node0x129d780 -> Node0x129d7f0;
	Node0x129d7f0 -> Node0x129d860;
	Node0x129d860 -> Node0x129d8d0;
	Node0x129d8d0 -> Node0x129d940;
	Node0x129d940 -> Node0x129d9b0;
	Node0x129d9b0 -> Node0x129da20;
	Node0x129da20 -> Node0x129da90;
	Node0x129da90 -> Node0x129db00;
	Node0x129db00 -> Node0x129db70;
	Node0x129db70 -> Node0x129dbe0;
	Node0x129dbe0 -> Node0x129dc50;
	Node0x129dc50 -> Node0x129dcc0;
	Node0x129dcc0 -> Node0x129dd30;
	Node0x129dd30 -> Node0x129dda0;
	Node0x129dda0 -> Node0x129de10;
	Node0x129de10 -> Node0x129de80;
	Node0x129de80 -> Node0x129def0;
	Node0x129def0 -> Node0x129df60;
	Node0x129df60 -> Node0x123b9d8;
	Node0x123b9d8 -> Node0x129dff0;
	Node0x129dff0 -> Node0x129e248;
	Node0x129e248 -> Node0x129e3a8;
	Node0x129e3a8 -> Node0x129e468;
edge [color=red]
	Node0x129b2c8 -> Node0x129b3d8;
	Node0x129b3d8 -> Node0x129b838;
	Node0x129b348 -> Node0x129b918;
	Node0x129b918 -> Node0x129ba38;
	Node0x129b2c8 -> Node0x129bc70;
	Node0x129b348 -> Node0x129bc70;
	Node0x129b2c8 -> Node0x129bd28;
	Node0x129b348 -> Node0x129cc98;
	Node0x129cc98 -> Node0x129d320;
	Node0x129bd28 -> Node0x129d320;
	Node0x129d320 -> Node0x129d390;
	Node0x129cc98 -> Node0x129d400;
	Node0x129bd28 -> Node0x129d470;
	Node0x129d400 -> Node0x129d470;
	Node0x129cc98 -> Node0x129d4e0;
	Node0x129bd28 -> Node0x129d4e0;
	Node0x129d4e0 -> Node0x129d550;
	Node0x129bd28 -> Node0x129d5c0;
	Node0x129d5c0 -> Node0x129d630;
	Node0x129cc98 -> Node0x129d6a0;
	Node0x129bd28 -> Node0x129d6a0;
	Node0x129bd28 -> Node0x129d710;
	Node0x129d710 -> Node0x129d780;
	Node0x129cc98 -> Node0x129d780;
	Node0x129d780 -> Node0x129d7f0;
	Node0x129d6a0 -> Node0x129d860;
	Node0x129d860 -> Node0x129d8d0;
	Node0x129d470 -> Node0x129d940;
	Node0x129d940 -> Node0x129d9b0;
	Node0x129d4e0 -> Node0x129da20;
	Node0x129cc98 -> Node0x129da90;
	Node0x129bd28 -> Node0x129da90;
	Node0x129d400 -> Node0x129db00;
	Node0x129da90 -> Node0x129db00;
	Node0x129db00 -> Node0x129db70;
	Node0x129d320 -> Node0x129db70;
	Node0x129db70 -> Node0x129dbe0;
	Node0x129d470 -> Node0x129dbe0;
	Node0x129dbe0 -> Node0x129dc50;
	Node0x129d550 -> Node0x129dc50;
	Node0x129dc50 -> Node0x129dcc0;
	Node0x129d630 -> Node0x129dcc0;
	Node0x129dcc0 -> Node0x129dd30;
	Node0x129d6a0 -> Node0x129dd30;
	Node0x129dd30 -> Node0x129dda0;
	Node0x129d7f0 -> Node0x129dda0;
	Node0x129dda0 -> Node0x129de10;
	Node0x129da20 -> Node0x129de10;
	Node0x129de10 -> Node0x129de80;
	Node0x129d8d0 -> Node0x129de80;
	Node0x129de80 -> Node0x129def0;
	Node0x129d9b0 -> Node0x129def0;
	Node0x129def0 -> Node0x129df60;
	Node0x129d390 -> Node0x129df60;
	Node0x129df60 -> Node0x123b9d8;
	Node0x123b9d8 -> Node0x129dff0;
	Node0x129b918 -> Node0x129e248;
	Node0x129b3d8 -> Node0x129e3a8;
}
