digraph "DFG for'main' function" {
	Node0x85edf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x85ee78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x85ef08[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x85f368[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x85f448[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x85f568[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x85f7a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x85f858[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x8607c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x860e50[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x860ec0[shape=record, label="  %9 = add i32 %7, 1"];
	Node0x860f30[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x860fa0[shape=record, label="  %11 = add i32 %9, %10"];
	Node0x861010[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x861080[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x8610f0[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x861160[shape=record, label="  %15 = or i32 %6, %8"];
	Node0x8611d0[shape=record, label="  %16 = mul i32 %7, 5"];
	Node0x861240[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x8612b0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x861320[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x861390[shape=record, label="  %20 = xor i32 %15, -1"];
	Node0x861400[shape=record, label="  %21 = mul i32 %20, -6"];
	Node0x861470[shape=record, label="  %22 = and i32 %6, %8"];
	Node0x8614e0[shape=record, label="  %23 = mul i32 %12, -3"];
	Node0x861550[shape=record, label="  %24 = sub i32 %10, %15"];
	Node0x8615c0[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x861630[shape=record, label="  %26 = sub i32 %25, %17"];
	Node0x8616a0[shape=record, label="  %27 = sub i32 %26, %22"];
	Node0x861710[shape=record, label="  %28 = add i32 %27, %21"];
	Node0x861780[shape=record, label="  %29 = add i32 %28, %23"];
	Node0x8617f0[shape=record, label="  %30 = add i32 %29, %14"];
	Node0x861860[shape=record, label="  %31 = sub i32 %30, %19"];
	Node0x8618d0[shape=record, label="  %32 = icmp eq i32 %11, %31"];
	Node0x7ff9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x861b70[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x861dc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x861f28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x861fe8[shape=record, label="  ret i32 0"];
	Node0x85edf8 -> Node0x85ee78;
	Node0x85ee78 -> Node0x85ef08;
	Node0x85ef08 -> Node0x85f368;
	Node0x85f368 -> Node0x85f448;
	Node0x85f448 -> Node0x85f568;
	Node0x85f568 -> Node0x85f7a0;
	Node0x85f7a0 -> Node0x85f858;
	Node0x85f858 -> Node0x8607c8;
	Node0x8607c8 -> Node0x860e50;
	Node0x860e50 -> Node0x860ec0;
	Node0x860ec0 -> Node0x860f30;
	Node0x860f30 -> Node0x860fa0;
	Node0x860fa0 -> Node0x861010;
	Node0x861010 -> Node0x861080;
	Node0x861080 -> Node0x8610f0;
	Node0x8610f0 -> Node0x861160;
	Node0x861160 -> Node0x8611d0;
	Node0x8611d0 -> Node0x861240;
	Node0x861240 -> Node0x8612b0;
	Node0x8612b0 -> Node0x861320;
	Node0x861320 -> Node0x861390;
	Node0x861390 -> Node0x861400;
	Node0x861400 -> Node0x861470;
	Node0x861470 -> Node0x8614e0;
	Node0x8614e0 -> Node0x861550;
	Node0x861550 -> Node0x8615c0;
	Node0x8615c0 -> Node0x861630;
	Node0x861630 -> Node0x8616a0;
	Node0x8616a0 -> Node0x861710;
	Node0x861710 -> Node0x861780;
	Node0x861780 -> Node0x8617f0;
	Node0x8617f0 -> Node0x861860;
	Node0x861860 -> Node0x8618d0;
	Node0x8618d0 -> Node0x7ff9d8;
	Node0x7ff9d8 -> Node0x861b70;
	Node0x861b70 -> Node0x861dc8;
	Node0x861dc8 -> Node0x861f28;
	Node0x861f28 -> Node0x861fe8;
edge [color=red]
	Node0x85edf8 -> Node0x85ef08;
	Node0x85ef08 -> Node0x85f368;
	Node0x85ee78 -> Node0x85f448;
	Node0x85f448 -> Node0x85f568;
	Node0x85edf8 -> Node0x85f7a0;
	Node0x85ee78 -> Node0x85f7a0;
	Node0x85edf8 -> Node0x85f858;
	Node0x85ee78 -> Node0x8607c8;
	Node0x8607c8 -> Node0x860e50;
	Node0x8607c8 -> Node0x860ec0;
	Node0x8607c8 -> Node0x860f30;
	Node0x85f858 -> Node0x860f30;
	Node0x860ec0 -> Node0x860fa0;
	Node0x860f30 -> Node0x860fa0;
	Node0x8607c8 -> Node0x861010;
	Node0x85f858 -> Node0x861010;
	Node0x861010 -> Node0x861080;
	Node0x861080 -> Node0x8610f0;
	Node0x85f858 -> Node0x861160;
	Node0x860e50 -> Node0x861160;
	Node0x8607c8 -> Node0x8611d0;
	Node0x8607c8 -> Node0x861240;
	Node0x85f858 -> Node0x861240;
	Node0x861240 -> Node0x8612b0;
	Node0x8612b0 -> Node0x861320;
	Node0x861160 -> Node0x861390;
	Node0x861390 -> Node0x861400;
	Node0x85f858 -> Node0x861470;
	Node0x860e50 -> Node0x861470;
	Node0x861010 -> Node0x8614e0;
	Node0x860f30 -> Node0x861550;
	Node0x861160 -> Node0x861550;
	Node0x861550 -> Node0x8615c0;
	Node0x8611d0 -> Node0x8615c0;
	Node0x8615c0 -> Node0x861630;
	Node0x861240 -> Node0x861630;
	Node0x861630 -> Node0x8616a0;
	Node0x861470 -> Node0x8616a0;
	Node0x8616a0 -> Node0x861710;
	Node0x861400 -> Node0x861710;
	Node0x861710 -> Node0x861780;
	Node0x8614e0 -> Node0x861780;
	Node0x861780 -> Node0x8617f0;
	Node0x8610f0 -> Node0x8617f0;
	Node0x8617f0 -> Node0x861860;
	Node0x861320 -> Node0x861860;
	Node0x860fa0 -> Node0x8618d0;
	Node0x861860 -> Node0x8618d0;
	Node0x8618d0 -> Node0x7ff9d8;
	Node0x7ff9d8 -> Node0x861b70;
	Node0x85f448 -> Node0x861dc8;
	Node0x85ef08 -> Node0x861f28;
}
