digraph "DFG for'main' function" {
	Node0x8e15f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x8e1678[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x8e1708[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x8e1768[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x8e1be8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8e1cc8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x8e1dc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8e1e88[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x8e1f38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8e2198[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x8e2258[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x8e23b8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x8e2418[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x8e4900[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x8e4b08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8e4c68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8e4d78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8e4e38[shape=record, label="  ret i32 0"];
	Node0x8e15f8 -> Node0x8e1678;
	Node0x8e1678 -> Node0x8e1708;
	Node0x8e1708 -> Node0x8e1768;
	Node0x8e1768 -> Node0x8e1be8;
	Node0x8e1be8 -> Node0x8e1cc8;
	Node0x8e1cc8 -> Node0x8e1dc8;
	Node0x8e1dc8 -> Node0x8e1e88;
	Node0x8e1e88 -> Node0x8e1f38;
	Node0x8e1f38 -> Node0x8e2198;
	Node0x8e2198 -> Node0x8e2258;
	Node0x8e2258 -> Node0x8e23b8;
	Node0x8e23b8 -> Node0x8e2418;
	Node0x8e2418 -> Node0x8e4900;
	Node0x8e4900 -> Node0x8e4b08;
	Node0x8e4b08 -> Node0x8e4c68;
	Node0x8e4c68 -> Node0x8e4d78;
	Node0x8e4d78 -> Node0x8e4e38;
edge [color=red]
	Node0x8e15f8 -> Node0x8e1768;
	Node0x8e1768 -> Node0x8e1be8;
	Node0x8e1678 -> Node0x8e1cc8;
	Node0x8e1cc8 -> Node0x8e1dc8;
	Node0x8e1708 -> Node0x8e1e88;
	Node0x8e1e88 -> Node0x8e1f38;
	Node0x8e15f8 -> Node0x8e2198;
	Node0x8e1678 -> Node0x8e2198;
	Node0x8e1708 -> Node0x8e2198;
	Node0x8e15f8 -> Node0x8e2258;
	Node0x8e1678 -> Node0x8e23b8;
	Node0x8e1708 -> Node0x8e2418;
	Node0x8e2258 -> Node0x8e4900;
	Node0x8e23b8 -> Node0x8e4900;
	Node0x8e2418 -> Node0x8e4900;
	Node0x8e1e88 -> Node0x8e4b08;
	Node0x8e1cc8 -> Node0x8e4c68;
	Node0x8e1768 -> Node0x8e4d78;
}
