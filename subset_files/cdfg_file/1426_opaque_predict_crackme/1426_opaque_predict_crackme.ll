; ModuleID = '../.././c_source_file/1426_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1426_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %2, %0
  %10 = xor i32 %9, -1
  %11 = and i32 %10, %8
  %12 = or i32 %2, %0
  %13 = xor i32 %12, -1
  %14 = or i32 %13, %1
  %15 = sub i32 %14, %11
  %16 = xor i32 %4, %3
  %17 = xor i32 %16, -1
  %18 = add i32 %15, %17
  %19 = xor i32 %5, -1
  %20 = and i32 %16, %19
  %21 = sub i32 %18, %20
  %22 = xor i32 %0, -1
  %23 = and i32 %2, %1
  %24 = and i32 %23, %22
  %25 = xor i32 %2, %1
  %26 = and i32 %25, %0
  %27 = xor i32 %26, -1
  %28 = xor i32 %24, %27
  %29 = xor i32 %1, -1
  %30 = xor i32 %2, -1
  %31 = or i32 %30, %0
  %32 = xor i32 %31, -1
  %33 = or i32 %32, %29
  %34 = and i32 %30, %0
  %35 = or i32 %34, %29
  %36 = or i32 %10, %29
  %37 = or i32 %30, %1
  %38 = xor i32 %37, -1
  %39 = or i32 %38, %22
  %40 = and i32 %2, %0
  %41 = or i32 %40, %1
  %42 = and i32 %29, %0
  %43 = or i32 %42, %10
  %44 = or i32 %1, %0
  %45 = and i32 %9, %44
  %46 = and i32 %8, %2
  %47 = xor i32 %31, %1
  %48 = and i32 %9, %29
  %49 = xor i32 %40, -1
  %50 = and i32 %49, %8
  %51 = and i32 %23, %0
  %52 = and i32 %25, %22
  %53 = xor i32 %52, 2147483647
  %54 = xor i32 %53, %51
  %55 = or i32 %13, %8
  %56 = shl i32 %55, 1
  %57 = and i32 %29, %2
  %58 = and i32 %57, %0
  %59 = or i32 %29, %2
  %60 = and i32 %59, %22
  %61 = xor i32 %60, 2147483647
  %62 = xor i32 %61, %58
  %63 = shl i32 %62, 1
  %64 = and i32 %57, %22
  %65 = and i32 %59, %0
  %66 = or i32 %64, %65
  %67 = or i32 %2, %1
  %68 = xor i32 %67, -1
  %69 = xor i32 %25, %0
  %70 = xor i32 %51, %69
  %71 = xor i32 %42, -1
  %72 = and i32 %30, %71
  %73 = or i32 %29, %0
  %74 = xor i32 %73, -1
  %75 = or i32 %30, %74
  %76 = or i32 %42, %30
  %77 = or i32 %9, %42
  %78 = xor i32 %44, -1
  %79 = and i32 %1, %0
  %80 = xor i32 %67, %79
  %81 = xor i32 %40, %44
  %82 = shl i32 %81, 1
  %83 = or i32 %10, %74
  %84 = and i32 %31, %8
  %85 = or i32 %9, %74
  %86 = xor i32 %25, -1
  %87 = or i32 %86, %78
  %88 = xor i32 %37, %79
  %89 = or i32 %10, %1
  %90 = shl i32 %67, 2
  %91 = or i32 %51, %52
  %92 = xor i32 %69, -1
  %93 = xor i32 %58, %92
  %94 = and i32 %10, %29
  %95 = and i32 %73, %2
  %96 = and i32 %30, %1
  %97 = or i32 %96, %0
  %98 = or i32 %24, %26
  %99 = and i32 %25, %73
  %100 = or i32 %9, %1
  %101 = shl i32 %100, 2
  %102 = or i32 %34, %1
  %103 = and i32 %7, %49
  %104 = shl i32 %103, 1
  %105 = and i32 %12, %1
  %106 = and i32 %9, %7
  %107 = xor i32 %67, %0
  %108 = shl i32 %40, 1
  %109 = or i32 %23, %42
  %110 = or i32 %9, %79
  %111 = shl i32 %110, 1
  %112 = or i32 %68, %0
  %113 = or i32 %13, %29
  %114 = xor i32 %96, -1
  %115 = add i32 %96, 1
  %116 = and i32 %37, %0
  %117 = xor i32 %74, %2
  %118 = xor i32 %42, %2
  %119 = and i32 %49, %1
  %120 = or i32 %23, %22
  %121 = shl i32 %120, 1
  %122 = or i32 %51, %92
  %123 = or i32 %40, %74
  %124 = and i32 %7, %30
  %125 = and i32 %44, %30
  %126 = or i32 %79, %86
  %127 = or i32 %8, %2
  %128 = xor i32 %40, %114
  %129 = or i32 %86, %22
  %130 = xor i32 %44, %2
  %131 = and i32 %30, %8
  %132 = and i32 %9, %73
  %133 = or i32 %25, %42
  %134 = xor i32 %23, -1
  %135 = and i32 %134, %0
  %136 = or i32 %40, %7
  %137 = xor i32 %34, %134
  %138 = xor i32 %71, %2
  %139 = xor i32 %79, -1
  %140 = and i32 %9, %139
  %141 = and i32 %86, %139
  %142 = or i32 %25, %0
  %143 = xor i32 %142, 2147483647
  %144 = or i32 %143, %58
  %145 = and i32 %114, %22
  %146 = or i32 %79, %10
  %147 = and i32 %86, %22
  %148 = or i32 %32, %1
  %149 = xor i32 %79, %2
  %150 = or i32 %40, %78
  %151 = or i32 %38, %0
  %152 = and i32 %10, %139
  %153 = add i32 %37, 1
  %154 = and i32 %67, %22
  %155 = or i32 %9, %8
  %156 = xor i32 %34, %37
  %157 = xor i32 %65, -1
  %158 = xor i32 %64, %157
  %159 = xor i32 %139, %2
  %160 = and i32 %30, %139
  %161 = shl i32 %142, 1
  %162 = or i32 %67, %22
  %163 = or i32 %7, %2
  %164 = xor i32 %23, %0
  %165 = xor i32 %68, %0
  %166 = or i32 %79, %13
  %167 = and i32 %12, %7
  %168 = or i32 %10, %78
  %169 = shl i32 %168, 1
  %170 = or i32 %51, %107
  %171 = shl i32 %170, 1
  %172 = and i32 %44, %86
  %173 = and i32 %31, %7
  %174 = xor i32 %12, %1
  %175 = xor i32 %86, %0
  %176 = or i32 %37, %0
  %177 = or i32 %7, %10
  %178 = xor i32 %31, %79
  %179 = and i32 %73, %30
  %180 = or i32 %7, %13
  %181 = or i32 %40, %29
  %182 = shl i32 %181, 1
  %183 = or i32 %96, %42
  %184 = shl i32 %183, 1
  %185 = or i32 %23, %0
  %186 = or i32 %86, %74
  %187 = or i32 %40, %8
  %188 = and i32 %73, %86
  %189 = and i32 %139, %2
  %190 = xor i32 %96, %0
  %191 = or i32 %79, %38
  %192 = shl i32 %12, 1
  %193 = or i32 %7, %30
  %194 = or i32 %37, %22
  %195 = and i32 %25, %44
  %196 = shl i32 %195, 1
  %197 = and i32 %86, %71
  %198 = shl i32 %197, 1
  %199 = or i32 %34, %8
  %200 = or i32 %74, %2
  %201 = shl i32 %200, 1
  %202 = or i32 %34, %7
  %203 = or i32 %40, %68
  %204 = and i32 %86, %0
  %205 = xor i32 %58, %142
  %206 = xor i32 %49, %1
  %207 = shl i32 %206, 1
  %208 = xor i32 %12, %79
  %209 = shl i32 %208, 1
  %210 = xor i32 %51, -1
  %211 = xor i32 %107, %210
  %212 = and i32 %7, %10
  %213 = shl i32 %52, 1
  %214 = or i32 %114, %0
  %215 = shl i32 %214, 1
  %216 = xor i32 %154, %210
  %217 = and i32 %7, %2
  %218 = or i32 %114, %22
  %219 = xor i32 %40, %73
  %220 = or i32 %9, %78
  %221 = or i32 %9, %29
  %222 = xor i32 %73, %2
  %223 = and i32 %37, %22
  %224 = or i32 %25, %79
  %225 = or i32 %86, %0
  %226 = xor i32 %37, %0
  %227 = or i32 %58, %60
  %228 = shl i32 %86, 1
  %229 = xor i32 %40, %1
  %230 = shl i32 %229, 1
  %231 = xor i32 %34, %29
  %232 = xor i32 %42, %134
  %233 = and i32 %67, %0
  %234 = xor i32 %233, 2147483647
  %235 = xor i32 %234, %24
  %236 = shl i32 %235, 1
  %237 = xor i32 %59, %22
  %238 = xor i32 %237, %58
  %239 = xor i32 %38, %0
  %240 = and i32 %25, %139
  %241 = or i32 %96, %22
  %242 = or i32 %134, %22
  %243 = and i32 %68, %22
  %244 = mul i32 %243, 6
  %245 = and i32 %96, %22
  %246 = mul i32 %245, 24
  %247 = and i32 %68, %0
  %248 = mul i32 %247, 17
  %249 = and i32 %96, %0
  %250 = and i32 %38, %22
  %251 = mul i32 %250, 56
  %252 = and i32 %38, %0
  %253 = mul i32 %252, 15
  %254 = mul i32 %51, 33
  %255 = xor i32 %3, -1
  %256 = and i32 %255, %5
  %257 = and i32 %256, %4
  %258 = xor i32 %4, -1
  %259 = or i32 %255, %5
  %260 = and i32 %259, %258
  %261 = or i32 %257, %260
  %262 = xor i32 %5, %3
  %263 = and i32 %255, %4
  %264 = xor i32 %5, %4
  %265 = or i32 %264, %263
  %266 = xor i32 %262, -1
  %267 = and i32 %266, %4
  %268 = or i32 %4, %3
  %269 = and i32 %256, %258
  %270 = and i32 %259, %4
  %271 = xor i32 %270, 2147483647
  %272 = xor i32 %271, %269
  %273 = shl i32 %272, 1
  %274 = or i32 %263, %19
  %275 = and i32 %5, %4
  %276 = or i32 %275, %255
  %277 = and i32 %4, %3
  %278 = or i32 %277, %5
  %279 = or i32 %19, %3
  %280 = xor i32 %279, -1
  %281 = or i32 %262, %263
  %282 = and i32 %264, %17
  %283 = xor i32 %259, %4
  %284 = xor i32 %257, -1
  %285 = xor i32 %283, %284
  %286 = or i32 %16, %5
  %287 = and i32 %19, %3
  %288 = xor i32 %287, %4
  %289 = xor i32 %277, -1
  %290 = xor i32 %264, -1
  %291 = and i32 %290, %289
  %292 = xor i32 %262, %4
  %293 = or i32 %257, %292
  %294 = or i32 %19, %4
  %295 = xor i32 %294, -1
  %296 = or i32 %295, %3
  %297 = or i32 %5, %4
  %298 = xor i32 %297, -1
  %299 = or i32 %298, %255
  %300 = and i32 %19, %4
  %301 = xor i32 %275, -1
  %302 = and i32 %301, %17
  %303 = xor i32 %263, -1
  %304 = and i32 %264, %303
  %305 = shl i32 %304, 1
  %306 = xor i32 %300, %3
  %307 = or i32 %275, %16
  %308 = or i32 %5, %3
  %309 = or i32 %308, %258
  %310 = and i32 %297, %17
  %311 = or i32 %277, %298
  %312 = shl i32 %311, 1
  %313 = or i32 %264, %17
  %314 = and i32 %5, %3
  %315 = xor i32 %314, -1
  %316 = xor i32 %263, %315
  %317 = or i32 %279, %258
  %318 = or i32 %16, %298
  %319 = xor i32 %279, %4
  %320 = xor i32 %300, -1
  %321 = and i32 %320, %17
  %322 = or i32 %300, %3
  %323 = and i32 %320, %3
  %324 = add i32 %314, 1
  %325 = xor i32 %287, -1
  %326 = or i32 %325, %4
  %327 = xor i32 %268, -1
  %328 = or i32 %262, %327
  %329 = and i32 %289, %5
  %330 = or i32 %315, %258
  %331 = or i32 %315, %4
  %332 = shl i32 %331, 1
  %333 = or i32 %257, %283
  %334 = or i32 %300, %255
  %335 = and i32 %314, %4
  %336 = and i32 %262, %258
  %337 = or i32 %335, %336
  %338 = xor i32 %275, %3
  %339 = and i32 %314, %258
  %340 = and i32 %262, %4
  %341 = or i32 %339, %340
  %342 = or i32 %325, %258
  %343 = and i32 %301, %255
  %344 = and i32 %294, %16
  %345 = or i32 %255, %4
  %346 = and i32 %262, %345
  %347 = and i32 %19, %289
  %348 = and i32 %262, %289
  %349 = xor i32 %289, %5
  %350 = or i32 %277, %290
  %351 = and i32 %345, %19
  %352 = shl i32 %351, 1
  %353 = or i32 %262, %258
  %354 = or i32 %264, %255
  %355 = xor i32 %308, -1
  %356 = or i32 %275, %355
  %357 = or i32 %263, %5
  %358 = xor i32 %320, %3
  %359 = xor i32 %353, 2147483647
  %360 = or i32 %359, %269
  %361 = shl i32 %360, 1
  %362 = or i32 %290, %3
  %363 = or i32 %355, %4
  %364 = xor i32 %335, %363
  %365 = and i32 %262, %268
  %366 = shl i32 %365, 1
  %367 = and i32 %16, %290
  %368 = xor i32 %294, %3
  %369 = and i32 %16, %301
  %370 = xor i32 %327, %5
  %371 = or i32 %277, %295
  %372 = xor i32 %355, %4
  %373 = shl i32 %372, 1
  %374 = xor i32 %345, %5
  %375 = xor i32 %336, 2147483647
  %376 = xor i32 %375, %335
  %377 = shl i32 %376, 1
  %378 = xor i32 %297, %3
  %379 = or i32 %263, %290
  %380 = xor i32 %275, %308
  %381 = and i32 %268, %5
  %382 = xor i32 %268, %5
  %383 = shl i32 %382, 1
  %384 = or i32 %295, %255
  %385 = xor i32 %300, %279
  %386 = or i32 %264, %3
  %387 = and i32 %290, %3
  %388 = or i32 %287, %4
  %389 = or i32 %287, %258
  %390 = or i32 %264, %16
  %391 = and i32 %19, %303
  %392 = and i32 %308, %4
  %393 = or i32 %339, %392
  %394 = and i32 %320, %255
  %395 = or i32 %290, %17
  %396 = or i32 %16, %19
  %397 = and i32 %294, %3
  %398 = or i32 %314, %4
  %399 = add i32 %4, 1
  %400 = and i32 %279, %4
  %401 = shl i32 %277, 1
  %402 = or i32 %300, %314
  %403 = xor i32 %269, %353
  %404 = and i32 %290, %255
  %405 = and i32 %16, %5
  %406 = or i32 %262, %277
  %407 = xor i32 %392, 2147483647
  %408 = xor i32 %407, %339
  %409 = or i32 %262, %4
  %410 = xor i32 %409, -1
  %411 = or i32 %257, %410
  %412 = xor i32 %301, %3
  %413 = and i32 %301, %3
  %414 = and i32 %266, %303
  %415 = xor i32 %315, %4
  %416 = and i32 %19, %17
  %417 = xor i32 %298, %3
  %418 = and i32 %294, %255
  %419 = shl i32 %418, 2
  %420 = and i32 %325, %258
  %421 = or i32 %300, %17
  %422 = or i32 %290, %255
  %423 = or i32 %314, %258
  %424 = or i32 %266, %327
  %425 = shl i32 %424, 1
  %426 = and i32 %315, %258
  %427 = xor i32 %263, %325
  %428 = or i32 %308, %4
  %429 = shl i32 %428, 1
  %430 = or i32 %279, %4
  %431 = or i32 %17, %5
  %432 = shl i32 %431, 1
  %433 = and i32 %264, %16
  %434 = and i32 %268, %266
  %435 = xor i32 %314, %4
  %436 = or i32 %300, %280
  %437 = or i32 %275, %287
  %438 = or i32 %277, %19
  %439 = or i32 %16, %295
  %440 = add i32 %263, 1
  %441 = xor i32 %260, %284
  %442 = or i32 %266, %4
  %443 = xor i32 %275, %325
  %444 = or i32 %275, %3
  %445 = xor i32 %308, %4
  %446 = or i32 %335, %445
  %447 = and i32 %355, %258
  %448 = mul i32 %447, -19
  %449 = and i32 %287, %258
  %450 = and i32 %355, %4
  %451 = mul i32 %450, 9
  %452 = and i32 %287, %4
  %453 = mul i32 %452, 22
  %454 = and i32 %280, %258
  %455 = shl i32 %339, 3
  %456 = and i32 %280, %4
  %457 = add i32 %42, %74
  %458 = add i32 %457, %8
  %459 = add i32 %458, %32
  %460 = add i32 %459, %138
  %461 = add i32 %460, %130
  %462 = add i32 %461, %125
  %463 = add i32 %462, %212
  %464 = add i32 %463, %180
  %465 = add i32 %464, %177
  %466 = add i32 %465, %167
  %467 = add i32 %466, %136
  %468 = add i32 %467, %102
  %469 = add i32 %468, %94
  %470 = add i32 %469, %91
  %471 = add i32 %470, %405
  %472 = add i32 %471, %144
  %473 = add i32 %472, %54
  %474 = add i32 %473, %426
  %475 = add i32 %474, %423
  %476 = add i32 %475, %415
  %477 = add i32 %476, %406
  %478 = add i32 %477, %397
  %479 = add i32 %478, %385
  %480 = add i32 %479, %340
  %481 = add i32 %480, %362
  %482 = add i32 %481, %343
  %483 = add i32 %482, %267
  %484 = add i32 %483, %333
  %485 = add i32 %484, %408
  %486 = shl i32 %485, 1
  %487 = add i32 %75, %9
  %488 = sub i32 %487, %46
  %489 = add i32 %488, %176
  %490 = sub i32 %489, %172
  %491 = sub i32 %490, %227
  %492 = add i32 %491, %353
  %493 = sub i32 %492, %265
  %494 = add i32 %493, %285
  %495 = mul i32 %494, 5
  %496 = add i32 %25, %7
  %497 = sub i32 %188, %496
  %498 = sub i32 %497, %129
  %499 = sub i32 %498, %158
  %500 = add i32 %499, %430
  %501 = add i32 %500, %456
  %502 = sub i32 %501, %398
  %503 = add i32 %502, %395
  %504 = mul i32 %503, 3
  %505 = add i32 %454, %449
  %506 = mul i32 %505, -7
  %507 = or i32 %24, %249
  %508 = mul i32 %507, 14
  %509 = add i32 %1, %2
  %510 = add i32 %509, 2
  %511 = add i32 %510, %78
  %512 = sub i32 %511, %44
  %513 = sub i32 %512, %79
  %514 = add i32 %513, %68
  %515 = add i32 %514, %72
  %516 = sub i32 %515, %76
  %517 = add i32 %516, %37
  %518 = sub i32 %517, %95
  %519 = add i32 %518, %115
  %520 = add i32 %519, %117
  %521 = add i32 %520, %118
  %522 = add i32 %521, %124
  %523 = sub i32 %522, %127
  %524 = sub i32 %523, %31
  %525 = sub i32 %524, %131
  %526 = add i32 %525, %134
  %527 = add i32 %526, %149
  %528 = add i32 %527, %10
  %529 = add i32 %528, %153
  %530 = sub i32 %529, %159
  %531 = sub i32 %530, %160
  %532 = sub i32 %531, %23
  %533 = add i32 %532, %163
  %534 = sub i32 %533, %179
  %535 = sub i32 %534, %96
  %536 = add i32 %535, %189
  %537 = add i32 %536, %193
  %538 = add i32 %537, %217
  %539 = sub i32 %538, %34
  %540 = add i32 %539, %222
  %541 = sub i32 %540, %3
  %542 = add i32 %541, %33
  %543 = sub i32 %542, %35
  %544 = sub i32 %543, %36
  %545 = sub i32 %544, %39
  %546 = sub i32 %545, %41
  %547 = add i32 %546, %43
  %548 = add i32 %547, %45
  %549 = sub i32 %548, %47
  %550 = add i32 %549, %48
  %551 = sub i32 %550, %50
  %552 = sub i32 %551, %77
  %553 = sub i32 %552, %80
  %554 = add i32 %553, %83
  %555 = sub i32 %554, %84
  %556 = sub i32 %555, %85
  %557 = add i32 %556, %87
  %558 = add i32 %557, %88
  %559 = sub i32 %558, %89
  %560 = sub i32 %559, %90
  %561 = add i32 %560, %97
  %562 = sub i32 %561, %99
  %563 = sub i32 %562, %105
  %564 = sub i32 %563, %106
  %565 = sub i32 %564, %107
  %566 = sub i32 %565, %108
  %567 = sub i32 %566, %109
  %568 = add i32 %567, %112
  %569 = sub i32 %568, %113
  %570 = add i32 %569, %116
  %571 = add i32 %570, %119
  %572 = add i32 %571, %123
  %573 = add i32 %572, %126
  %574 = sub i32 %573, %128
  %575 = sub i32 %574, %132
  %576 = add i32 %575, %133
  %577 = sub i32 %576, %135
  %578 = sub i32 %577, %137
  %579 = sub i32 %578, %140
  %580 = add i32 %579, %141
  %581 = sub i32 %580, %145
  %582 = add i32 %581, %146
  %583 = add i32 %582, %147
  %584 = add i32 %583, %148
  %585 = add i32 %584, %150
  %586 = sub i32 %585, %151
  %587 = sub i32 %586, %152
  %588 = add i32 %587, %154
  %589 = sub i32 %588, %155
  %590 = sub i32 %589, %156
  %591 = sub i32 %590, %69
  %592 = add i32 %591, %162
  %593 = add i32 %592, %164
  %594 = add i32 %593, %165
  %595 = add i32 %594, %166
  %596 = sub i32 %595, %173
  %597 = sub i32 %596, %174
  %598 = sub i32 %597, %175
  %599 = sub i32 %598, %178
  %600 = add i32 %599, %185
  %601 = add i32 %600, %186
  %602 = add i32 %601, %187
  %603 = sub i32 %602, %190
  %604 = sub i32 %603, %191
  %605 = sub i32 %604, %192
  %606 = sub i32 %605, %194
  %607 = sub i32 %606, %199
  %608 = sub i32 %607, %201
  %609 = add i32 %608, %202
  %610 = add i32 %609, %203
  %611 = add i32 %610, %204
  %612 = sub i32 %611, %218
  %613 = sub i32 %612, %219
  %614 = add i32 %613, %220
  %615 = sub i32 %614, %221
  %616 = add i32 %615, %223
  %617 = sub i32 %616, %224
  %618 = add i32 %617, %225
  %619 = add i32 %618, %226
  %620 = sub i32 %619, %228
  %621 = add i32 %620, %231
  %622 = sub i32 %621, %232
  %623 = add i32 %622, %239
  %624 = add i32 %623, %240
  %625 = sub i32 %624, %241
  %626 = add i32 %625, %242
  %627 = add i32 %626, %399
  %628 = add i32 %627, %4
  %629 = sub i32 %628, %28
  %630 = sub i32 %629, %56
  %631 = sub i32 %630, %66
  %632 = sub i32 %631, %70
  %633 = sub i32 %632, %82
  %634 = sub i32 %633, %93
  %635 = add i32 %634, %98
  %636 = sub i32 %635, %101
  %637 = sub i32 %636, %104
  %638 = sub i32 %637, %111
  %639 = sub i32 %638, %121
  %640 = add i32 %639, %122
  %641 = sub i32 %640, %161
  %642 = sub i32 %641, %169
  %643 = sub i32 %642, %182
  %644 = sub i32 %643, %184
  %645 = sub i32 %644, %196
  %646 = sub i32 %645, %198
  %647 = sub i32 %646, %205
  %648 = sub i32 %647, %207
  %649 = sub i32 %648, %209
  %650 = add i32 %649, %211
  %651 = sub i32 %650, %213
  %652 = sub i32 %651, %215
  %653 = sub i32 %652, %216
  %654 = sub i32 %653, %230
  %655 = add i32 %654, %238
  %656 = add i32 %655, %244
  %657 = add i32 %656, %246
  %658 = add i32 %657, %248
  %659 = add i32 %658, %251
  %660 = add i32 %659, %253
  %661 = add i32 %660, %254
  %662 = sub i32 %661, %268
  %663 = sub i32 %662, %16
  %664 = sub i32 %663, %263
  %665 = sub i32 %664, %374
  %666 = add i32 %665, %440
  %667 = sub i32 %666, %171
  %668 = sub i32 %667, %262
  %669 = add i32 %668, %274
  %670 = sub i32 %669, %278
  %671 = add i32 %670, %280
  %672 = sub i32 %671, %286
  %673 = sub i32 %672, %300
  %674 = add i32 %673, %264
  %675 = add i32 %674, %324
  %676 = sub i32 %675, %329
  %677 = sub i32 %676, %294
  %678 = sub i32 %677, %297
  %679 = add i32 %678, %347
  %680 = sub i32 %679, %349
  %681 = add i32 %680, %357
  %682 = add i32 %681, %370
  %683 = add i32 %682, %381
  %684 = add i32 %683, %391
  %685 = add i32 %684, %295
  %686 = sub i32 %685, %396
  %687 = sub i32 %686, %401
  %688 = sub i32 %687, %374
  %689 = add i32 %688, %416
  %690 = add i32 %689, %438
  %691 = add i32 %690, %508
  %692 = sub i32 %691, %63
  %693 = sub i32 %692, %236
  %694 = add i32 %693, %276
  %695 = sub i32 %694, %281
  %696 = add i32 %695, %282
  %697 = sub i32 %696, %288
  %698 = sub i32 %697, %291
  %699 = add i32 %698, %296
  %700 = add i32 %699, %299
  %701 = sub i32 %700, %302
  %702 = add i32 %701, %306
  %703 = sub i32 %702, %307
  %704 = sub i32 %703, %309
  %705 = add i32 %704, %310
  %706 = sub i32 %705, %313
  %707 = sub i32 %706, %316
  %708 = add i32 %707, %317
  %709 = sub i32 %708, %318
  %710 = add i32 %709, %319
  %711 = add i32 %710, %321
  %712 = sub i32 %711, %322
  %713 = sub i32 %712, %323
  %714 = add i32 %713, %326
  %715 = add i32 %714, %328
  %716 = add i32 %715, %330
  %717 = sub i32 %716, %334
  %718 = add i32 %717, %338
  %719 = add i32 %718, %342
  %720 = add i32 %719, %344
  %721 = add i32 %720, %346
  %722 = sub i32 %721, %348
  %723 = sub i32 %722, %350
  %724 = sub i32 %723, %352
  %725 = add i32 %724, %354
  %726 = add i32 %725, %356
  %727 = sub i32 %726, %358
  %728 = sub i32 %727, %367
  %729 = add i32 %728, %368
  %730 = add i32 %729, %369
  %731 = add i32 %730, %371
  %732 = add i32 %731, %378
  %733 = sub i32 %732, %379
  %734 = add i32 %733, %380
  %735 = sub i32 %734, %383
  %736 = add i32 %735, %384
  %737 = sub i32 %736, %386
  %738 = add i32 %737, %387
  %739 = sub i32 %738, %388
  %740 = add i32 %739, %389
  %741 = sub i32 %740, %390
  %742 = add i32 %741, %394
  %743 = sub i32 %742, %400
  %744 = add i32 %743, %402
  %745 = add i32 %744, %363
  %746 = add i32 %745, %404
  %747 = add i32 %746, %412
  %748 = sub i32 %747, %413
  %749 = add i32 %748, %414
  %750 = sub i32 %749, %292
  %751 = add i32 %750, %417
  %752 = add i32 %751, %420
  %753 = add i32 %752, %421
  %754 = sub i32 %753, %422
  %755 = sub i32 %754, %427
  %756 = sub i32 %755, %432
  %757 = sub i32 %756, %433
  %758 = sub i32 %757, %434
  %759 = sub i32 %758, %435
  %760 = add i32 %759, %436
  %761 = sub i32 %760, %437
  %762 = sub i32 %761, %439
  %763 = sub i32 %762, %442
  %764 = sub i32 %763, %443
  %765 = sub i32 %764, %444
  %766 = sub i32 %765, %335
  %767 = sub i32 %766, %261
  %768 = add i32 %767, %293
  %769 = sub i32 %768, %305
  %770 = sub i32 %769, %312
  %771 = sub i32 %770, %332
  %772 = sub i32 %771, %337
  %773 = sub i32 %772, %341
  %774 = sub i32 %773, %364
  %775 = sub i32 %774, %366
  %776 = sub i32 %775, %373
  %777 = sub i32 %776, %393
  %778 = sub i32 %777, %403
  %779 = add i32 %778, %411
  %780 = add i32 %779, %419
  %781 = sub i32 %780, %425
  %782 = sub i32 %781, %429
  %783 = sub i32 %782, %441
  %784 = add i32 %783, %446
  %785 = add i32 %784, %448
  %786 = add i32 %785, %451
  %787 = add i32 %786, %453
  %788 = add i32 %787, %455
  %789 = add i32 %788, %506
  %790 = sub i32 %789, %273
  %791 = sub i32 %790, %361
  %792 = sub i32 %791, %377
  %793 = add i32 %792, %504
  %794 = add i32 %793, %495
  %795 = add i32 %794, %486
  %796 = icmp eq i32 %21, %795
  %797 = select i1 %796, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %798 = tail call i32 @puts(i8* nonnull dereferenceable(1) %797)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
