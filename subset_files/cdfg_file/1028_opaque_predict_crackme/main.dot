digraph "DFG for'main' function" {
	Node0x2458578[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x24585f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2458688[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x24586e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2458b68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2458c48[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x2458d48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2458e08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2458eb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2459118[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x24591d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2459338[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2459398[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x245fd10[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x245ff18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2460078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2460188[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2460248[shape=record, label="  ret i32 0"];
	Node0x2458578 -> Node0x24585f8;
	Node0x24585f8 -> Node0x2458688;
	Node0x2458688 -> Node0x24586e8;
	Node0x24586e8 -> Node0x2458b68;
	Node0x2458b68 -> Node0x2458c48;
	Node0x2458c48 -> Node0x2458d48;
	Node0x2458d48 -> Node0x2458e08;
	Node0x2458e08 -> Node0x2458eb8;
	Node0x2458eb8 -> Node0x2459118;
	Node0x2459118 -> Node0x24591d8;
	Node0x24591d8 -> Node0x2459338;
	Node0x2459338 -> Node0x2459398;
	Node0x2459398 -> Node0x245fd10;
	Node0x245fd10 -> Node0x245ff18;
	Node0x245ff18 -> Node0x2460078;
	Node0x2460078 -> Node0x2460188;
	Node0x2460188 -> Node0x2460248;
edge [color=red]
	Node0x2458578 -> Node0x24586e8;
	Node0x24586e8 -> Node0x2458b68;
	Node0x24585f8 -> Node0x2458c48;
	Node0x2458c48 -> Node0x2458d48;
	Node0x2458688 -> Node0x2458e08;
	Node0x2458e08 -> Node0x2458eb8;
	Node0x2458578 -> Node0x2459118;
	Node0x24585f8 -> Node0x2459118;
	Node0x2458688 -> Node0x2459118;
	Node0x2458578 -> Node0x24591d8;
	Node0x24585f8 -> Node0x2459338;
	Node0x2458688 -> Node0x2459398;
	Node0x24591d8 -> Node0x245fd10;
	Node0x2459338 -> Node0x245fd10;
	Node0x2459398 -> Node0x245fd10;
	Node0x2458e08 -> Node0x245ff18;
	Node0x2458c48 -> Node0x2460078;
	Node0x24586e8 -> Node0x2460188;
}
