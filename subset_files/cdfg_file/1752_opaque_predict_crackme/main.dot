digraph "DFG for'main' function" {
	Node0x8e16c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x8e1748[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x8e17d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x8e1838[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x8e1cb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8e1d98[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x8e1e98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8e1f58[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x8e2008[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8e2268[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x8e2328[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x8e2488[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x8e24e8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x8e9e50[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x8ea058[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8ea1b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8ea2c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8ea388[shape=record, label="  ret i32 0"];
	Node0x8e16c8 -> Node0x8e1748;
	Node0x8e1748 -> Node0x8e17d8;
	Node0x8e17d8 -> Node0x8e1838;
	Node0x8e1838 -> Node0x8e1cb8;
	Node0x8e1cb8 -> Node0x8e1d98;
	Node0x8e1d98 -> Node0x8e1e98;
	Node0x8e1e98 -> Node0x8e1f58;
	Node0x8e1f58 -> Node0x8e2008;
	Node0x8e2008 -> Node0x8e2268;
	Node0x8e2268 -> Node0x8e2328;
	Node0x8e2328 -> Node0x8e2488;
	Node0x8e2488 -> Node0x8e24e8;
	Node0x8e24e8 -> Node0x8e9e50;
	Node0x8e9e50 -> Node0x8ea058;
	Node0x8ea058 -> Node0x8ea1b8;
	Node0x8ea1b8 -> Node0x8ea2c8;
	Node0x8ea2c8 -> Node0x8ea388;
edge [color=red]
	Node0x8e16c8 -> Node0x8e1838;
	Node0x8e1838 -> Node0x8e1cb8;
	Node0x8e1748 -> Node0x8e1d98;
	Node0x8e1d98 -> Node0x8e1e98;
	Node0x8e17d8 -> Node0x8e1f58;
	Node0x8e1f58 -> Node0x8e2008;
	Node0x8e16c8 -> Node0x8e2268;
	Node0x8e1748 -> Node0x8e2268;
	Node0x8e17d8 -> Node0x8e2268;
	Node0x8e16c8 -> Node0x8e2328;
	Node0x8e1748 -> Node0x8e2488;
	Node0x8e17d8 -> Node0x8e24e8;
	Node0x8e2328 -> Node0x8e9e50;
	Node0x8e2488 -> Node0x8e9e50;
	Node0x8e24e8 -> Node0x8e9e50;
	Node0x8e1f58 -> Node0x8ea058;
	Node0x8e1d98 -> Node0x8ea1b8;
	Node0x8e1838 -> Node0x8ea2c8;
}
