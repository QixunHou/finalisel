digraph "DFG for'main' function" {
	Node0xab2c88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xab2d08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xab2d98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xab31f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xab32d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xab33f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xab3630[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xab36e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xab4658[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xab4ce0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xab4d50[shape=record, label="  %9 = add i32 %7, 1"];
	Node0xab4dc0[shape=record, label="  %10 = or i32 %6, %8"];
	Node0xab4e30[shape=record, label="  %11 = and i32 %6, %8"];
	Node0xab4ea0[shape=record, label="  %12 = and i32 %7, %6"];
	Node0xab4f10[shape=record, label="  %13 = or i32 %7, %6"];
	Node0xab4f80[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0xab4ff0[shape=record, label="  %15 = xor i32 %13, -1"];
	Node0xab5060[shape=record, label="  %16 = mul i32 %15, 5"];
	Node0xab50d0[shape=record, label="  %17 = xor i32 %10, -1"];
	Node0xab5140[shape=record, label="  %18 = mul i32 %17, 3"];
	Node0xab51b0[shape=record, label="  %19 = shl i32 %11, 1"];
	Node0xab5220[shape=record, label="  %20 = shl i32 %12, 2"];
	Node0xab5290[shape=record, label="  %21 = sub i32 5, %10"];
	Node0xab5300[shape=record, label="  %22 = add i32 %21, %11"];
	Node0xab5370[shape=record, label="  %23 = add i32 %22, %12"];
	Node0xab53e0[shape=record, label="  %24 = add i32 %23, %13"];
	Node0xab5450[shape=record, label="  %25 = add i32 %24, %14"];
	Node0xab54c0[shape=record, label="  %26 = add i32 %25, %16"];
	Node0xab5530[shape=record, label="  %27 = add i32 %26, %18"];
	Node0xab55a0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0xab5610[shape=record, label="  %29 = add i32 %28, %20"];
	Node0xab5680[shape=record, label="  %30 = icmp eq i32 %9, %29"];
	Node0xa539d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xab5710[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0xab5b78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xab5cd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xab5d98[shape=record, label="  ret i32 0"];
	Node0xab2c88 -> Node0xab2d08;
	Node0xab2d08 -> Node0xab2d98;
	Node0xab2d98 -> Node0xab31f8;
	Node0xab31f8 -> Node0xab32d8;
	Node0xab32d8 -> Node0xab33f8;
	Node0xab33f8 -> Node0xab3630;
	Node0xab3630 -> Node0xab36e8;
	Node0xab36e8 -> Node0xab4658;
	Node0xab4658 -> Node0xab4ce0;
	Node0xab4ce0 -> Node0xab4d50;
	Node0xab4d50 -> Node0xab4dc0;
	Node0xab4dc0 -> Node0xab4e30;
	Node0xab4e30 -> Node0xab4ea0;
	Node0xab4ea0 -> Node0xab4f10;
	Node0xab4f10 -> Node0xab4f80;
	Node0xab4f80 -> Node0xab4ff0;
	Node0xab4ff0 -> Node0xab5060;
	Node0xab5060 -> Node0xab50d0;
	Node0xab50d0 -> Node0xab5140;
	Node0xab5140 -> Node0xab51b0;
	Node0xab51b0 -> Node0xab5220;
	Node0xab5220 -> Node0xab5290;
	Node0xab5290 -> Node0xab5300;
	Node0xab5300 -> Node0xab5370;
	Node0xab5370 -> Node0xab53e0;
	Node0xab53e0 -> Node0xab5450;
	Node0xab5450 -> Node0xab54c0;
	Node0xab54c0 -> Node0xab5530;
	Node0xab5530 -> Node0xab55a0;
	Node0xab55a0 -> Node0xab5610;
	Node0xab5610 -> Node0xab5680;
	Node0xab5680 -> Node0xa539d8;
	Node0xa539d8 -> Node0xab5710;
	Node0xab5710 -> Node0xab5b78;
	Node0xab5b78 -> Node0xab5cd8;
	Node0xab5cd8 -> Node0xab5d98;
edge [color=red]
	Node0xab2c88 -> Node0xab2d98;
	Node0xab2d98 -> Node0xab31f8;
	Node0xab2d08 -> Node0xab32d8;
	Node0xab32d8 -> Node0xab33f8;
	Node0xab2c88 -> Node0xab3630;
	Node0xab2d08 -> Node0xab3630;
	Node0xab2c88 -> Node0xab36e8;
	Node0xab2d08 -> Node0xab4658;
	Node0xab4658 -> Node0xab4ce0;
	Node0xab4658 -> Node0xab4d50;
	Node0xab36e8 -> Node0xab4dc0;
	Node0xab4ce0 -> Node0xab4dc0;
	Node0xab36e8 -> Node0xab4e30;
	Node0xab4ce0 -> Node0xab4e30;
	Node0xab4658 -> Node0xab4ea0;
	Node0xab36e8 -> Node0xab4ea0;
	Node0xab4658 -> Node0xab4f10;
	Node0xab36e8 -> Node0xab4f10;
	Node0xab4658 -> Node0xab4f80;
	Node0xab36e8 -> Node0xab4f80;
	Node0xab4f10 -> Node0xab4ff0;
	Node0xab4ff0 -> Node0xab5060;
	Node0xab4dc0 -> Node0xab50d0;
	Node0xab50d0 -> Node0xab5140;
	Node0xab4e30 -> Node0xab51b0;
	Node0xab4ea0 -> Node0xab5220;
	Node0xab4dc0 -> Node0xab5290;
	Node0xab5290 -> Node0xab5300;
	Node0xab4e30 -> Node0xab5300;
	Node0xab5300 -> Node0xab5370;
	Node0xab4ea0 -> Node0xab5370;
	Node0xab5370 -> Node0xab53e0;
	Node0xab4f10 -> Node0xab53e0;
	Node0xab53e0 -> Node0xab5450;
	Node0xab4f80 -> Node0xab5450;
	Node0xab5450 -> Node0xab54c0;
	Node0xab5060 -> Node0xab54c0;
	Node0xab54c0 -> Node0xab5530;
	Node0xab5140 -> Node0xab5530;
	Node0xab5530 -> Node0xab55a0;
	Node0xab51b0 -> Node0xab55a0;
	Node0xab55a0 -> Node0xab5610;
	Node0xab5220 -> Node0xab5610;
	Node0xab4d50 -> Node0xab5680;
	Node0xab5610 -> Node0xab5680;
	Node0xab5680 -> Node0xa539d8;
	Node0xa539d8 -> Node0xab5710;
	Node0xab32d8 -> Node0xab5b78;
	Node0xab2d98 -> Node0xab5cd8;
}
