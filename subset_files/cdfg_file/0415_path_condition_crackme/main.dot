digraph "DFG for'main' function" {
	Node0x1153c18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1153c98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1153d28[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1154188[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1154268[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1154388[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11545c0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1154678[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11555e8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1155c70[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x1155ce0[shape=record, label="  %9 = mul i32 %8, -4"];
	Node0x1155d50[shape=record, label="  %10 = sub i32 %9, %6"];
	Node0x1155dc0[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x1155e30[shape=record, label="  %12 = shl i32 %7, 1"];
	Node0x1155ea0[shape=record, label="  %13 = sub i32 %12, %11"];
	Node0x1155f10[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x1155f80[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1155ff0[shape=record, label="  %16 = add i32 %13, %15"];
	Node0x1156060[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x11560d0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x1156140[shape=record, label="  %19 = mul i32 %18, -5"];
	Node0x11561b0[shape=record, label="  %20 = xor i32 %7, -1"];
	Node0x1156220[shape=record, label="  %21 = and i32 %7, %8"];
	Node0x1156290[shape=record, label="  %22 = mul i32 %21, -6"];
	Node0x1156300[shape=record, label="  %23 = and i32 %6, %20"];
	Node0x1156370[shape=record, label="  %24 = mul i32 %14, -3"];
	Node0x11563e0[shape=record, label="  %25 = sub i32 %16, %23"];
	Node0x1156450[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x11564c0[shape=record, label="  %27 = add i32 %26, %22"];
	Node0x1156530[shape=record, label="  %28 = add i32 %27, %24"];
	Node0x11565a0[shape=record, label="  %29 = icmp eq i32 %10, %28"];
	Node0x10f49d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1156630[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x1156888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11569e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1156aa8[shape=record, label="  ret i32 0"];
	Node0x1153c18 -> Node0x1153c98;
	Node0x1153c98 -> Node0x1153d28;
	Node0x1153d28 -> Node0x1154188;
	Node0x1154188 -> Node0x1154268;
	Node0x1154268 -> Node0x1154388;
	Node0x1154388 -> Node0x11545c0;
	Node0x11545c0 -> Node0x1154678;
	Node0x1154678 -> Node0x11555e8;
	Node0x11555e8 -> Node0x1155c70;
	Node0x1155c70 -> Node0x1155ce0;
	Node0x1155ce0 -> Node0x1155d50;
	Node0x1155d50 -> Node0x1155dc0;
	Node0x1155dc0 -> Node0x1155e30;
	Node0x1155e30 -> Node0x1155ea0;
	Node0x1155ea0 -> Node0x1155f10;
	Node0x1155f10 -> Node0x1155f80;
	Node0x1155f80 -> Node0x1155ff0;
	Node0x1155ff0 -> Node0x1156060;
	Node0x1156060 -> Node0x11560d0;
	Node0x11560d0 -> Node0x1156140;
	Node0x1156140 -> Node0x11561b0;
	Node0x11561b0 -> Node0x1156220;
	Node0x1156220 -> Node0x1156290;
	Node0x1156290 -> Node0x1156300;
	Node0x1156300 -> Node0x1156370;
	Node0x1156370 -> Node0x11563e0;
	Node0x11563e0 -> Node0x1156450;
	Node0x1156450 -> Node0x11564c0;
	Node0x11564c0 -> Node0x1156530;
	Node0x1156530 -> Node0x11565a0;
	Node0x11565a0 -> Node0x10f49d8;
	Node0x10f49d8 -> Node0x1156630;
	Node0x1156630 -> Node0x1156888;
	Node0x1156888 -> Node0x11569e8;
	Node0x11569e8 -> Node0x1156aa8;
edge [color=red]
	Node0x1153c18 -> Node0x1153d28;
	Node0x1153d28 -> Node0x1154188;
	Node0x1153c98 -> Node0x1154268;
	Node0x1154268 -> Node0x1154388;
	Node0x1153c18 -> Node0x11545c0;
	Node0x1153c98 -> Node0x11545c0;
	Node0x1153c18 -> Node0x1154678;
	Node0x1153c98 -> Node0x11555e8;
	Node0x1154678 -> Node0x1155c70;
	Node0x1155c70 -> Node0x1155ce0;
	Node0x1155ce0 -> Node0x1155d50;
	Node0x1154678 -> Node0x1155d50;
	Node0x11555e8 -> Node0x1155dc0;
	Node0x1154678 -> Node0x1155dc0;
	Node0x11555e8 -> Node0x1155e30;
	Node0x1155e30 -> Node0x1155ea0;
	Node0x1155dc0 -> Node0x1155ea0;
	Node0x11555e8 -> Node0x1155f10;
	Node0x1154678 -> Node0x1155f10;
	Node0x1155f10 -> Node0x1155f80;
	Node0x1155ea0 -> Node0x1155ff0;
	Node0x1155f80 -> Node0x1155ff0;
	Node0x11555e8 -> Node0x1156060;
	Node0x1154678 -> Node0x1156060;
	Node0x1156060 -> Node0x11560d0;
	Node0x11560d0 -> Node0x1156140;
	Node0x11555e8 -> Node0x11561b0;
	Node0x11555e8 -> Node0x1156220;
	Node0x1155c70 -> Node0x1156220;
	Node0x1156220 -> Node0x1156290;
	Node0x1154678 -> Node0x1156300;
	Node0x11561b0 -> Node0x1156300;
	Node0x1155f10 -> Node0x1156370;
	Node0x1155ff0 -> Node0x11563e0;
	Node0x1156300 -> Node0x11563e0;
	Node0x11563e0 -> Node0x1156450;
	Node0x1156140 -> Node0x1156450;
	Node0x1156450 -> Node0x11564c0;
	Node0x1156290 -> Node0x11564c0;
	Node0x11564c0 -> Node0x1156530;
	Node0x1156370 -> Node0x1156530;
	Node0x1155d50 -> Node0x11565a0;
	Node0x1156530 -> Node0x11565a0;
	Node0x11565a0 -> Node0x10f49d8;
	Node0x10f49d8 -> Node0x1156630;
	Node0x1154268 -> Node0x1156888;
	Node0x1153d28 -> Node0x11569e8;
}
