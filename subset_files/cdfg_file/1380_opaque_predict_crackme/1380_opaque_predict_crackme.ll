; ModuleID = '../.././c_source_file/1380_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1380_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = or i32 %7, %0
  %9 = xor i32 %8, %1
  %10 = xor i32 %5, -1
  %11 = or i32 %4, %3
  %12 = and i32 %11, %10
  %13 = shl i32 %12, 1
  %14 = sub i32 %9, %13
  %15 = xor i32 %3, -1
  %16 = xor i32 %5, %4
  %17 = xor i32 %16, -1
  %18 = or i32 %17, %15
  %19 = sub i32 %14, %18
  %20 = xor i32 %1, %0
  %21 = or i32 %20, %7
  %22 = xor i32 %1, -1
  %23 = and i32 %2, %0
  %24 = xor i32 %23, -1
  %25 = and i32 %24, %22
  %26 = xor i32 %0, -1
  %27 = xor i32 %2, %1
  %28 = and i32 %27, %26
  %29 = xor i32 %2, %0
  %30 = or i32 %29, %22
  %31 = and i32 %1, %0
  %32 = or i32 %31, %2
  %33 = shl i32 %32, 1
  %34 = xor i32 %20, -1
  %35 = xor i32 %29, -1
  %36 = and i32 %35, %34
  %37 = and i32 %2, %1
  %38 = and i32 %37, %26
  %39 = and i32 %27, %0
  %40 = xor i32 %39, -1
  %41 = xor i32 %38, %40
  %42 = or i32 %2, %1
  %43 = xor i32 %42, -1
  %44 = or i32 %31, %43
  %45 = shl i32 %44, 1
  %46 = and i32 %22, %0
  %47 = xor i32 %46, -1
  %48 = and i32 %29, %47
  %49 = or i32 %2, %0
  %50 = or i32 %22, %0
  %51 = xor i32 %50, -1
  %52 = xor i32 %27, -1
  %53 = or i32 %52, %51
  %54 = and i32 %50, %2
  %55 = xor i32 %8, -1
  %56 = xor i32 %55, %1
  %57 = xor i32 %37, %0
  %58 = and i32 %20, %24
  %59 = or i32 %46, %2
  %60 = or i32 %37, %46
  %61 = or i32 %7, %1
  %62 = or i32 %27, %0
  %63 = and i32 %22, %2
  %64 = and i32 %63, %0
  %65 = xor i32 %27, %0
  %66 = xor i32 %64, -1
  %67 = xor i32 %65, %66
  %68 = and i32 %7, %1
  %69 = xor i32 %68, -1
  %70 = or i32 %69, %26
  %71 = and i32 %20, %35
  %72 = or i32 %1, %0
  %73 = xor i32 %72, %2
  %74 = and i32 %7, %0
  %75 = xor i32 %74, -1
  %76 = add i32 %74, 1
  %77 = xor i32 %49, -1
  %78 = or i32 %31, %77
  %79 = and i32 %50, %7
  %80 = xor i32 %61, -1
  %81 = or i32 %74, %80
  %82 = xor i32 %64, %62
  %83 = shl i32 %82, 1
  %84 = or i32 %55, %34
  %85 = xor i32 %80, %0
  %86 = and i32 %35, %1
  %87 = xor i32 %23, %72
  %88 = and i32 %72, %7
  %89 = and i32 %50, %52
  %90 = xor i32 %37, -1
  %91 = xor i32 %74, %90
  %92 = and i32 %52, %0
  %93 = and i32 %7, %47
  %94 = and i32 %20, %2
  %95 = xor i32 %31, -1
  %96 = and i32 %7, %95
  %97 = xor i32 %24, %1
  %98 = shl i32 %50, 1
  %99 = or i32 %22, %2
  %100 = xor i32 %99, %0
  %101 = xor i32 %100, %66
  %102 = or i32 %34, %2
  %103 = shl i32 %68, 1
  %104 = xor i32 %61, %31
  %105 = and i32 %37, %0
  %106 = and i32 %42, %26
  %107 = xor i32 %105, -1
  %108 = xor i32 %106, %107
  %109 = xor i32 %49, %1
  %110 = or i32 %43, %26
  %111 = and i32 %63, %26
  %112 = and i32 %99, %0
  %113 = xor i32 %112, 2147483647
  %114 = xor i32 %113, %111
  %115 = shl i32 %114, 1
  %116 = and i32 %61, %0
  %117 = or i32 %69, %0
  %118 = or i32 %52, %26
  %119 = or i32 %74, %1
  %120 = and i32 %29, %72
  %121 = or i32 %27, %26
  %122 = xor i32 %111, %121
  %123 = or i32 %7, %34
  %124 = shl i32 %123, 1
  %125 = or i32 %23, %20
  %126 = xor i32 %62, -1
  %127 = or i32 %64, %126
  %128 = add i32 %50, 1
  %129 = or i32 %20, %77
  %130 = or i32 %23, %34
  %131 = or i32 %27, %31
  %132 = xor i32 %99, -1
  %133 = or i32 %132, %0
  %134 = xor i32 %64, %133
  %135 = xor i32 %105, %65
  %136 = xor i32 %72, -1
  %137 = or i32 %27, %136
  %138 = xor i32 %23, %42
  %139 = add i32 %49, 1
  %140 = and i32 %49, %34
  %141 = xor i32 %74, %61
  %142 = and i32 %29, %50
  %143 = or i32 %29, %1
  %144 = and i32 %35, %95
  %145 = xor i32 %69, %0
  %146 = or i32 %68, %0
  %147 = or i32 %42, %26
  %148 = or i32 %29, %34
  %149 = xor i32 %95, %2
  %150 = or i32 %29, %20
  %151 = or i32 %31, %55
  %152 = or i32 %80, %0
  %153 = xor i32 %68, %0
  %154 = and i32 %69, %0
  %155 = shl i32 %154, 1
  %156 = xor i32 %90, %0
  %157 = and i32 %29, %95
  %158 = and i32 %35, %22
  %159 = and i32 %27, %47
  %160 = xor i32 %75, %1
  %161 = and i32 %8, %22
  %162 = xor i32 %28, %107
  %163 = xor i32 %42, %0
  %164 = xor i32 %163, 1073741823
  %165 = xor i32 %164, %105
  %166 = shl i32 %165, 2
  %167 = or i32 %52, %0
  %168 = or i32 %35, %22
  %169 = or i32 %80, %26
  %170 = and i32 %24, %34
  %171 = or i32 %64, %100
  %172 = or i32 %31, %80
  %173 = or i32 %35, %34
  %174 = and i32 %20, %75
  %175 = or i32 %42, %0
  %176 = shl i32 %175, 1
  %177 = xor i32 %74, %1
  %178 = or i32 %74, %37
  %179 = and i32 %75, %34
  %180 = shl i32 %179, 1
  %181 = or i32 %51, %2
  %182 = and i32 %42, %0
  %183 = and i32 %8, %1
  %184 = shl i32 %183, 1
  %185 = or i32 %27, %46
  %186 = or i32 %68, %46
  %187 = shl i32 %69, 1
  %188 = and i32 %27, %72
  %189 = add i32 %8, 1
  %190 = and i32 %50, %35
  %191 = or i32 %46, %52
  %192 = and i32 %43, %26
  %193 = and i32 %68, %26
  %194 = and i32 %43, %0
  %195 = shl i32 %194, 2
  %196 = and i32 %68, %0
  %197 = and i32 %80, %26
  %198 = shl i32 %197, 3
  %199 = shl i32 %38, 1
  %200 = and i32 %80, %0
  %201 = shl i32 %200, 4
  %202 = and i32 %16, %15
  %203 = and i32 %4, %3
  %204 = or i32 %203, %17
  %205 = shl i32 %204, 1
  %206 = and i32 %5, %4
  %207 = or i32 %15, %4
  %208 = xor i32 %206, %207
  %209 = and i32 %207, %17
  %210 = or i32 %5, %4
  %211 = and i32 %210, %3
  %212 = and i32 %10, %4
  %213 = or i32 %10, %3
  %214 = xor i32 %213, -1
  %215 = or i32 %212, %214
  %216 = xor i32 %4, -1
  %217 = xor i32 %5, %3
  %218 = xor i32 %217, -1
  %219 = or i32 %218, %216
  %220 = and i32 %11, %17
  %221 = and i32 %15, %4
  %222 = or i32 %16, %221
  %223 = and i32 %5, %3
  %224 = xor i32 %223, %4
  %225 = and i32 %10, %3
  %226 = or i32 %225, %216
  %227 = shl i32 %218, 1
  %228 = or i32 %217, %221
  %229 = xor i32 %213, %203
  %230 = or i32 %221, %10
  %231 = or i32 %206, %15
  %232 = xor i32 %206, -1
  %233 = and i32 %232, %15
  %234 = and i32 %17, %3
  %235 = and i32 %223, %4
  %236 = or i32 %5, %3
  %237 = xor i32 %236, %4
  %238 = or i32 %235, %237
  %239 = and i32 %15, %5
  %240 = and i32 %239, %4
  %241 = or i32 %217, %4
  %242 = xor i32 %241, -1
  %243 = or i32 %240, %242
  %244 = or i32 %221, %218
  %245 = xor i32 %221, -1
  %246 = and i32 %245, %5
  %247 = and i32 %232, %3
  %248 = shl i32 %15, 2
  %249 = xor i32 %11, %5
  %250 = and i32 %213, %216
  %251 = or i32 %10, %4
  %252 = xor i32 %4, %3
  %253 = xor i32 %252, -1
  %254 = and i32 %251, %253
  %255 = or i32 %16, %252
  %256 = xor i32 %225, -1
  %257 = xor i32 %206, %256
  %258 = or i32 %221, %5
  %259 = xor i32 %207, -1
  %260 = or i32 %17, %259
  %261 = xor i32 %236, -1
  %262 = or i32 %261, %216
  %263 = or i32 %261, %4
  %264 = and i32 %207, %5
  %265 = or i32 %214, %216
  %266 = shl i32 %265, 2
  %267 = and i32 %252, %17
  %268 = xor i32 %223, -1
  %269 = or i32 %268, %216
  %270 = and i32 %223, %216
  %271 = and i32 %217, %4
  %272 = xor i32 %271, -1
  %273 = xor i32 %270, %272
  %274 = and i32 %17, %245
  %275 = xor i32 %11, -1
  %276 = or i32 %10, %275
  %277 = xor i32 %210, %203
  %278 = and i32 %218, %245
  %279 = xor i32 %210, -1
  %280 = or i32 %252, %279
  %281 = and i32 %252, %10
  %282 = xor i32 %203, -1
  %283 = and i32 %218, %282
  %284 = and i32 %217, %216
  %285 = and i32 %16, %207
  %286 = and i32 %239, %216
  %287 = or i32 %217, %216
  %288 = xor i32 %287, -1
  %289 = or i32 %286, %288
  %290 = xor i32 %279, %3
  %291 = and i32 %217, %207
  %292 = or i32 %15, %5
  %293 = xor i32 %292, -1
  %294 = or i32 %293, %4
  %295 = xor i32 %240, %294
  %296 = and i32 %16, %252
  %297 = and i32 %218, %216
  %298 = or i32 %218, %4
  %299 = xor i32 %275, %5
  %300 = xor i32 %292, %4
  %301 = or i32 %240, %300
  %302 = and i32 %236, %4
  %303 = xor i32 %251, -1
  %304 = or i32 %203, %303
  %305 = shl i32 %304, 1
  %306 = or i32 %235, %284
  %307 = and i32 %251, %252
  %308 = and i32 %256, %216
  %309 = or i32 %206, %252
  %310 = or i32 %252, %5
  %311 = or i32 %256, %4
  %312 = and i32 %232, %253
  %313 = or i32 %203, %5
  %314 = and i32 %253, %5
  %315 = xor i32 %282, %5
  %316 = xor i32 %303, %3
  %317 = xor i32 %236, 1073741823
  %318 = or i32 %317, %4
  %319 = xor i32 %318, %235
  %320 = xor i32 %225, %4
  %321 = xor i32 %210, %3
  %322 = shl i32 %321, 1
  %323 = xor i32 %217, %4
  %324 = or i32 %240, %323
  %325 = or i32 %17, %253
  %326 = shl i32 %325, 2
  %327 = xor i32 %212, %3
  %328 = or i32 %225, %221
  %329 = and i32 %218, %4
  %330 = or i32 %212, %15
  %331 = or i32 %275, %5
  %332 = xor i32 %203, %5
  %333 = or i32 %303, %3
  %334 = or i32 %206, %275
  %335 = xor i32 %251, %3
  %336 = shl i32 %335, 1
  %337 = xor i32 %240, %241
  %338 = xor i32 %268, %4
  %339 = xor i32 %300, -1
  %340 = xor i32 %240, %339
  %341 = or i32 %16, %253
  %342 = and i32 %213, %4
  %343 = xor i32 %212, %213
  %344 = or i32 %217, %259
  %345 = add i32 %221, 1
  %346 = and i32 %16, %3
  %347 = xor i32 %214, %4
  %348 = xor i32 %323, 2147483647
  %349 = xor i32 %348, %240
  %350 = shl i32 %349, 1
  %351 = xor i32 %207, %5
  %352 = and i32 %210, %15
  %353 = or i32 %16, %275
  %354 = or i32 %223, %216
  %355 = and i32 %217, %282
  %356 = or i32 %16, %259
  %357 = and i32 %16, %282
  %358 = shl i32 %17, 1
  %359 = xor i32 %286, %287
  %360 = and i32 %210, %252
  %361 = and i32 %17, %15
  %362 = or i32 %203, %279
  %363 = and i32 %251, %15
  %364 = shl i32 %363, 1
  %365 = or i32 %206, %3
  %366 = or i32 %270, %302
  %367 = xor i32 %235, -1
  %368 = xor i32 %237, %367
  %369 = xor i32 %232, %3
  %370 = and i32 %207, %10
  %371 = or i32 %259, %5
  %372 = xor i32 %284, %367
  %373 = or i32 %16, %203
  %374 = and i32 %256, %4
  %375 = or i32 %303, %253
  %376 = xor i32 %206, %3
  %377 = shl i32 %206, 1
  %378 = xor i32 %221, %268
  %379 = xor i32 %206, %236
  %380 = or i32 %206, %253
  %381 = shl i32 %256, 1
  %382 = or i32 %212, %253
  %383 = or i32 %203, %261
  %384 = xor i32 %221, %5
  %385 = xor i32 %259, %5
  %386 = xor i32 %256, %4
  %387 = and i32 %207, %218
  %388 = or i32 %212, %252
  %389 = and i32 %217, %11
  %390 = or i32 %214, %4
  %391 = and i32 %261, %216
  %392 = and i32 %225, %216
  %393 = and i32 %261, %4
  %394 = mul i32 %393, -12
  %395 = and i32 %225, %4
  %396 = mul i32 %395, -7
  %397 = and i32 %214, %216
  %398 = mul i32 %270, -10
  %399 = and i32 %214, %4
  %400 = mul i32 %399, 11
  %401 = mul i32 %235, 13
  %402 = sub i32 %95, %169
  %403 = sub i32 %402, %346
  %404 = add i32 %403, %356
  %405 = add i32 %404, %308
  %406 = add i32 %405, %277
  %407 = sub i32 %406, %269
  %408 = sub i32 %407, %260
  %409 = mul i32 %408, 5
  %410 = add i32 %196, %105
  %411 = add i32 %410, %391
  %412 = sub i32 %411, %397
  %413 = mul i32 %412, 14
  %414 = add i32 %357, %259
  %415 = sub i32 %414, %387
  %416 = mul i32 %415, 3
  %417 = add i32 %291, %170
  %418 = add i32 %417, %319
  %419 = shl i32 %418, 2
  %420 = sub i32 %192, %392
  %421 = mul i32 %420, 6
  %422 = add i32 %2, -1
  %423 = add i32 %422, %46
  %424 = add i32 %423, %102
  %425 = add i32 %424, %61
  %426 = add i32 %425, %54
  %427 = sub i32 %426, %21
  %428 = add i32 %427, %193
  %429 = add i32 %428, %177
  %430 = add i32 %429, %163
  %431 = add i32 %430, %156
  %432 = add i32 %431, %144
  %433 = add i32 %432, %109
  %434 = add i32 %433, %86
  %435 = add i32 %434, %60
  %436 = add i32 %435, %48
  %437 = add i32 %436, %281
  %438 = add i32 %437, %353
  %439 = add i32 %438, %334
  %440 = add i32 %439, %316
  %441 = add i32 %440, %309
  %442 = add i32 %441, %284
  %443 = add i32 %442, %229
  %444 = add i32 %443, %222
  %445 = add i32 %444, %238
  %446 = shl i32 %445, 1
  %447 = sub i32 1, %0
  %448 = add i32 %447, %34
  %449 = sub i32 %448, %31
  %450 = add i32 %449, %7
  %451 = add i32 %450, %128
  %452 = add i32 %451, %47
  %453 = sub i32 %452, %49
  %454 = sub i32 %453, %59
  %455 = add i32 %454, %35
  %456 = sub i32 %455, %73
  %457 = add i32 %456, %76
  %458 = add i32 %457, %79
  %459 = add i32 %458, %88
  %460 = add i32 %459, %24
  %461 = add i32 %460, %93
  %462 = sub i32 %461, %94
  %463 = add i32 %462, %96
  %464 = sub i32 %463, %98
  %465 = add i32 %464, %43
  %466 = sub i32 %465, %8
  %467 = sub i32 %466, %27
  %468 = add i32 %467, %139
  %469 = sub i32 %468, %149
  %470 = sub i32 %469, %181
  %471 = sub i32 %470, %42
  %472 = add i32 %471, %80
  %473 = add i32 %472, %90
  %474 = add i32 %473, %189
  %475 = sub i32 %474, %3
  %476 = sub i32 %475, %25
  %477 = sub i32 %476, %28
  %478 = sub i32 %477, %30
  %479 = sub i32 %478, %33
  %480 = add i32 %479, %36
  %481 = add i32 %480, %53
  %482 = sub i32 %481, %56
  %483 = add i32 %482, %57
  %484 = add i32 %483, %58
  %485 = add i32 %484, %62
  %486 = add i32 %485, %70
  %487 = sub i32 %486, %71
  %488 = add i32 %487, %78
  %489 = add i32 %488, %81
  %490 = sub i32 %489, %84
  %491 = add i32 %490, %85
  %492 = add i32 %491, %87
  %493 = sub i32 %492, %89
  %494 = sub i32 %493, %91
  %495 = add i32 %494, %92
  %496 = sub i32 %495, %97
  %497 = sub i32 %496, %103
  %498 = sub i32 %497, %104
  %499 = sub i32 %498, %110
  %500 = sub i32 %499, %116
  %501 = add i32 %500, %117
  %502 = sub i32 %501, %118
  %503 = add i32 %502, %119
  %504 = add i32 %503, %120
  %505 = sub i32 %504, %124
  %506 = sub i32 %505, %125
  %507 = sub i32 %506, %121
  %508 = add i32 %507, %129
  %509 = sub i32 %508, %130
  %510 = add i32 %509, %131
  %511 = sub i32 %510, %137
  %512 = add i32 %511, %138
  %513 = sub i32 %512, %140
  %514 = add i32 %513, %141
  %515 = sub i32 %514, %142
  %516 = sub i32 %515, %143
  %517 = add i32 %516, %145
  %518 = sub i32 %517, %146
  %519 = sub i32 %518, %147
  %520 = sub i32 %519, %148
  %521 = add i32 %520, %150
  %522 = add i32 %521, %151
  %523 = sub i32 %522, %152
  %524 = add i32 %523, %153
  %525 = sub i32 %524, %39
  %526 = add i32 %525, %157
  %527 = add i32 %526, %158
  %528 = add i32 %527, %159
  %529 = add i32 %528, %160
  %530 = sub i32 %529, %161
  %531 = sub i32 %530, %167
  %532 = add i32 %531, %168
  %533 = sub i32 %532, %172
  %534 = sub i32 %533, %173
  %535 = sub i32 %534, %174
  %536 = add i32 %535, %178
  %537 = sub i32 %536, %182
  %538 = sub i32 %537, %106
  %539 = sub i32 %538, %185
  %540 = sub i32 %539, %186
  %541 = sub i32 %540, %187
  %542 = sub i32 %541, %188
  %543 = sub i32 %542, %190
  %544 = sub i32 %543, %191
  %545 = sub i32 %544, %248
  %546 = add i32 %545, %4
  %547 = sub i32 %546, %41
  %548 = sub i32 %547, %45
  %549 = add i32 %548, %67
  %550 = add i32 %549, %101
  %551 = add i32 %550, %108
  %552 = add i32 %551, %122
  %553 = add i32 %552, %127
  %554 = add i32 %553, %134
  %555 = add i32 %554, %135
  %556 = sub i32 %555, %155
  %557 = add i32 %556, %162
  %558 = sub i32 %557, %171
  %559 = sub i32 %558, %176
  %560 = sub i32 %559, %180
  %561 = sub i32 %560, %184
  %562 = sub i32 %561, %195
  %563 = add i32 %562, %198
  %564 = sub i32 %563, %199
  %565 = add i32 %564, %201
  %566 = sub i32 %565, %11
  %567 = add i32 %566, %345
  %568 = add i32 %567, %275
  %569 = sub i32 %568, %83
  %570 = add i32 %569, %230
  %571 = sub i32 %570, %246
  %572 = add i32 %571, %249
  %573 = add i32 %572, %212
  %574 = add i32 %573, %258
  %575 = add i32 %574, %264
  %576 = sub i32 %575, %276
  %577 = add i32 %576, %299
  %578 = add i32 %577, %310
  %579 = add i32 %578, %313
  %580 = sub i32 %579, %314
  %581 = sub i32 %580, %315
  %582 = sub i32 %581, %331
  %583 = sub i32 %582, %332
  %584 = add i32 %583, %223
  %585 = add i32 %584, %279
  %586 = add i32 %585, %351
  %587 = sub i32 %586, %16
  %588 = sub i32 %587, %236
  %589 = sub i32 %588, %370
  %590 = add i32 %589, %232
  %591 = add i32 %590, %371
  %592 = add i32 %591, %384
  %593 = add i32 %592, %385
  %594 = sub i32 %593, %115
  %595 = sub i32 %594, %166
  %596 = sub i32 %595, %202
  %597 = add i32 %596, %208
  %598 = add i32 %597, %209
  %599 = add i32 %598, %211
  %600 = add i32 %599, %215
  %601 = sub i32 %600, %219
  %602 = add i32 %601, %220
  %603 = add i32 %602, %224
  %604 = add i32 %603, %226
  %605 = sub i32 %604, %227
  %606 = sub i32 %605, %228
  %607 = sub i32 %606, %231
  %608 = sub i32 %607, %233
  %609 = add i32 %608, %234
  %610 = add i32 %609, %244
  %611 = sub i32 %610, %247
  %612 = add i32 %611, %250
  %613 = add i32 %612, %254
  %614 = add i32 %613, %237
  %615 = sub i32 %614, %255
  %616 = sub i32 %615, %257
  %617 = add i32 %616, %262
  %618 = sub i32 %617, %263
  %619 = sub i32 %618, %267
  %620 = add i32 %619, %274
  %621 = sub i32 %620, %278
  %622 = sub i32 %621, %280
  %623 = add i32 %622, %283
  %624 = add i32 %623, %285
  %625 = sub i32 %624, %290
  %626 = add i32 %625, %296
  %627 = sub i32 %626, %297
  %628 = sub i32 %627, %298
  %629 = sub i32 %628, %302
  %630 = add i32 %629, %307
  %631 = add i32 %630, %311
  %632 = add i32 %631, %312
  %633 = sub i32 %632, %320
  %634 = add i32 %633, %327
  %635 = sub i32 %634, %328
  %636 = sub i32 %635, %329
  %637 = add i32 %636, %330
  %638 = add i32 %637, %333
  %639 = sub i32 %638, %338
  %640 = sub i32 %639, %341
  %641 = add i32 %640, %342
  %642 = add i32 %641, %343
  %643 = add i32 %642, %344
  %644 = sub i32 %643, %347
  %645 = sub i32 %644, %352
  %646 = add i32 %645, %354
  %647 = sub i32 %646, %355
  %648 = sub i32 %647, %358
  %649 = sub i32 %648, %360
  %650 = add i32 %649, %361
  %651 = add i32 %650, %362
  %652 = sub i32 %651, %365
  %653 = sub i32 %652, %369
  %654 = sub i32 %653, %373
  %655 = add i32 %654, %374
  %656 = add i32 %655, %375
  %657 = sub i32 %656, %376
  %658 = sub i32 %657, %377
  %659 = add i32 %658, %378
  %660 = add i32 %659, %379
  %661 = sub i32 %660, %380
  %662 = sub i32 %661, %381
  %663 = sub i32 %662, %382
  %664 = add i32 %663, %383
  %665 = add i32 %664, %386
  %666 = add i32 %665, %388
  %667 = add i32 %666, %389
  %668 = sub i32 %667, %390
  %669 = sub i32 %668, %205
  %670 = add i32 %669, %243
  %671 = sub i32 %670, %266
  %672 = add i32 %671, %273
  %673 = sub i32 %672, %289
  %674 = sub i32 %673, %295
  %675 = sub i32 %674, %301
  %676 = sub i32 %675, %305
  %677 = sub i32 %676, %306
  %678 = sub i32 %677, %322
  %679 = add i32 %678, %324
  %680 = sub i32 %679, %326
  %681 = sub i32 %680, %336
  %682 = add i32 %681, %337
  %683 = sub i32 %682, %340
  %684 = sub i32 %683, %359
  %685 = sub i32 %684, %364
  %686 = add i32 %685, %366
  %687 = add i32 %686, %368
  %688 = add i32 %687, %372
  %689 = add i32 %688, %394
  %690 = add i32 %689, %396
  %691 = add i32 %690, %398
  %692 = add i32 %691, %400
  %693 = add i32 %692, %401
  %694 = add i32 %693, %421
  %695 = sub i32 %694, %350
  %696 = add i32 %695, %416
  %697 = add i32 %696, %413
  %698 = add i32 %697, %419
  %699 = add i32 %698, %409
  %700 = add i32 %699, %446
  %701 = icmp eq i32 %19, %700
  %702 = select i1 %701, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %703 = tail call i32 @puts(i8* nonnull dereferenceable(1) %702)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
