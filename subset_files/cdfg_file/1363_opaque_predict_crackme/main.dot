digraph "DFG for'main' function" {
	Node0x849c88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x849d08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x849d98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x84a1f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x84a2d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x84a3f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x84a630[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x84a6e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x84b658[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x84bce0[shape=record, label="  %8 = add i32 %6, 1"];
	Node0x84bd50[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x84bdc0[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x84be30[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x84bea0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x84bf10[shape=record, label="  %13 = and i32 %6, %12"];
	Node0x84bf80[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x84bff0[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x84c060[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x84c0d0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x84c140[shape=record, label="  %18 = and i32 %7, %6"];
	Node0x84c1b0[shape=record, label="  %19 = sub i32 %13, %18"];
	Node0x84c220[shape=record, label="  %20 = mul i32 %19, 3"];
	Node0x84c290[shape=record, label="  %21 = shl i32 %7, 1"];
	Node0x84c300[shape=record, label="  %22 = add i32 %6, 2"];
	Node0x84c370[shape=record, label="  %23 = add i32 %22, %14"];
	Node0x84c3e0[shape=record, label="  %24 = sub i32 %23, %9"];
	Node0x84c450[shape=record, label="  %25 = sub i32 %24, %15"];
	Node0x84c4c0[shape=record, label="  %26 = add i32 %25, %21"];
	Node0x84c530[shape=record, label="  %27 = add i32 %26, %11"];
	Node0x84c5a0[shape=record, label="  %28 = sub i32 %27, %17"];
	Node0x84c610[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x84c680[shape=record, label="  %30 = icmp eq i32 %8, %29"];
	Node0x7ea9d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x84c710[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x84cb78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x84ccd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x84cd98[shape=record, label="  ret i32 0"];
	Node0x849c88 -> Node0x849d08;
	Node0x849d08 -> Node0x849d98;
	Node0x849d98 -> Node0x84a1f8;
	Node0x84a1f8 -> Node0x84a2d8;
	Node0x84a2d8 -> Node0x84a3f8;
	Node0x84a3f8 -> Node0x84a630;
	Node0x84a630 -> Node0x84a6e8;
	Node0x84a6e8 -> Node0x84b658;
	Node0x84b658 -> Node0x84bce0;
	Node0x84bce0 -> Node0x84bd50;
	Node0x84bd50 -> Node0x84bdc0;
	Node0x84bdc0 -> Node0x84be30;
	Node0x84be30 -> Node0x84bea0;
	Node0x84bea0 -> Node0x84bf10;
	Node0x84bf10 -> Node0x84bf80;
	Node0x84bf80 -> Node0x84bff0;
	Node0x84bff0 -> Node0x84c060;
	Node0x84c060 -> Node0x84c0d0;
	Node0x84c0d0 -> Node0x84c140;
	Node0x84c140 -> Node0x84c1b0;
	Node0x84c1b0 -> Node0x84c220;
	Node0x84c220 -> Node0x84c290;
	Node0x84c290 -> Node0x84c300;
	Node0x84c300 -> Node0x84c370;
	Node0x84c370 -> Node0x84c3e0;
	Node0x84c3e0 -> Node0x84c450;
	Node0x84c450 -> Node0x84c4c0;
	Node0x84c4c0 -> Node0x84c530;
	Node0x84c530 -> Node0x84c5a0;
	Node0x84c5a0 -> Node0x84c610;
	Node0x84c610 -> Node0x84c680;
	Node0x84c680 -> Node0x7ea9d8;
	Node0x7ea9d8 -> Node0x84c710;
	Node0x84c710 -> Node0x84cb78;
	Node0x84cb78 -> Node0x84ccd8;
	Node0x84ccd8 -> Node0x84cd98;
edge [color=red]
	Node0x849c88 -> Node0x849d98;
	Node0x849d98 -> Node0x84a1f8;
	Node0x849d08 -> Node0x84a2d8;
	Node0x84a2d8 -> Node0x84a3f8;
	Node0x849c88 -> Node0x84a630;
	Node0x849d08 -> Node0x84a630;
	Node0x849c88 -> Node0x84a6e8;
	Node0x849d08 -> Node0x84b658;
	Node0x84a6e8 -> Node0x84bce0;
	Node0x84b658 -> Node0x84bd50;
	Node0x84a6e8 -> Node0x84bd50;
	Node0x84bd50 -> Node0x84bdc0;
	Node0x84bdc0 -> Node0x84be30;
	Node0x84b658 -> Node0x84bea0;
	Node0x84a6e8 -> Node0x84bf10;
	Node0x84bea0 -> Node0x84bf10;
	Node0x84bf10 -> Node0x84bf80;
	Node0x84b658 -> Node0x84bff0;
	Node0x84a6e8 -> Node0x84bff0;
	Node0x84bff0 -> Node0x84c060;
	Node0x84c060 -> Node0x84c0d0;
	Node0x84b658 -> Node0x84c140;
	Node0x84a6e8 -> Node0x84c140;
	Node0x84bf10 -> Node0x84c1b0;
	Node0x84c140 -> Node0x84c1b0;
	Node0x84c1b0 -> Node0x84c220;
	Node0x84b658 -> Node0x84c290;
	Node0x84a6e8 -> Node0x84c300;
	Node0x84c300 -> Node0x84c370;
	Node0x84bf80 -> Node0x84c370;
	Node0x84c370 -> Node0x84c3e0;
	Node0x84bd50 -> Node0x84c3e0;
	Node0x84c3e0 -> Node0x84c450;
	Node0x84bff0 -> Node0x84c450;
	Node0x84c450 -> Node0x84c4c0;
	Node0x84c290 -> Node0x84c4c0;
	Node0x84c4c0 -> Node0x84c530;
	Node0x84be30 -> Node0x84c530;
	Node0x84c530 -> Node0x84c5a0;
	Node0x84c0d0 -> Node0x84c5a0;
	Node0x84c5a0 -> Node0x84c610;
	Node0x84c220 -> Node0x84c610;
	Node0x84bce0 -> Node0x84c680;
	Node0x84c610 -> Node0x84c680;
	Node0x84c680 -> Node0x7ea9d8;
	Node0x7ea9d8 -> Node0x84c710;
	Node0x84a2d8 -> Node0x84cb78;
	Node0x849d98 -> Node0x84ccd8;
}
