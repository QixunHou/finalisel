digraph "DFG for'main' function" {
	Node0x1bfca48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1bfcac8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1bfcb58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1bfcbb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1bfcc68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1bfd098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bfd178[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1bfd278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bfd338[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1bfd3e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1bfd4a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1bfd558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1bf7ab0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1bfd758[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1bfe6c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1bfed38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1bfed98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1bfee10[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1bfee80[shape=record, label="  %15 = and i32 %11, %14"];
	Node0x1bfeef0[shape=record, label="  %16 = and i32 %13, %10"];
	Node0x1bfef60[shape=record, label="  %17 = xor i32 %10, -1"];
	Node0x1bfefd0[shape=record, label="  %18 = xor i32 %13, %17"];
	Node0x1bff040[shape=record, label="  %19 = add i32 %11, 2"];
	Node0x1bff0b0[shape=record, label="  %20 = add i32 %19, %15"];
	Node0x1bff120[shape=record, label="  %21 = add i32 %20, %16"];
	Node0x1bff190[shape=record, label="  %22 = add i32 %21, %18"];
	Node0x1bff200[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0x1bff270[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x1bff2e0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x1bff350[shape=record, label="  %26 = or i32 %12, %11"];
	Node0x1bff3c0[shape=record, label="  %27 = xor i32 %11, -1"];
	Node0x1bff430[shape=record, label="  %28 = and i32 %12, %27"];
	Node0x1bff4a0[shape=record, label="  %29 = and i32 %13, %17"];
	Node0x1bff510[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x1bff580[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x1bff5f0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x1bff660[shape=record, label="  %33 = shl i32 %13, 1"];
	Node0x1bff6d0[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x1bff740[shape=record, label="  %35 = mul i32 %16, 5"];
	Node0x1bff7b0[shape=record, label="  %36 = sub i32 %26, %10"];
	Node0x1bff820[shape=record, label="  %37 = shl i32 %36, 1"];
	Node0x1bff890[shape=record, label="  %38 = sub i32 2, %23"];
	Node0x1bff900[shape=record, label="  %39 = add i32 %38, %25"];
	Node0x1bff970[shape=record, label="  %40 = sub i32 %39, %28"];
	Node0x1bff9e0[shape=record, label="  %41 = add i32 %40, %15"];
	Node0x1bffa50[shape=record, label="  %42 = sub i32 %41, %13"];
	Node0x1bffac0[shape=record, label="  %43 = add i32 %42, %32"];
	Node0x1bffb30[shape=record, label="  %44 = sub i32 %43, %29"];
	Node0x1bffba0[shape=record, label="  %45 = add i32 %44, %34"];
	Node0x1bffc10[shape=record, label="  %46 = add i32 %45, %35"];
	Node0x1bffc80[shape=record, label="  %47 = add i32 %46, %37"];
	Node0x1bffcf0[shape=record, label="  %48 = sub i32 %47, %31"];
	Node0x1bffd60[shape=record, label="  %49 = icmp eq i32 %22, %48"];
	Node0x1b9c8b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1bffdf0[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0x1c00098[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c001f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c00308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c00418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c004d8[shape=record, label="  ret i32 0"];
	Node0x1bfca48 -> Node0x1bfcac8;
	Node0x1bfcac8 -> Node0x1bfcb58;
	Node0x1bfcb58 -> Node0x1bfcbb8;
	Node0x1bfcbb8 -> Node0x1bfcc68;
	Node0x1bfcc68 -> Node0x1bfd098;
	Node0x1bfd098 -> Node0x1bfd178;
	Node0x1bfd178 -> Node0x1bfd278;
	Node0x1bfd278 -> Node0x1bfd338;
	Node0x1bfd338 -> Node0x1bfd3e8;
	Node0x1bfd3e8 -> Node0x1bfd4a8;
	Node0x1bfd4a8 -> Node0x1bfd558;
	Node0x1bfd558 -> Node0x1bf7ab0;
	Node0x1bf7ab0 -> Node0x1bfd758;
	Node0x1bfd758 -> Node0x1bfe6c8;
	Node0x1bfe6c8 -> Node0x1bfed38;
	Node0x1bfed38 -> Node0x1bfed98;
	Node0x1bfed98 -> Node0x1bfee10;
	Node0x1bfee10 -> Node0x1bfee80;
	Node0x1bfee80 -> Node0x1bfeef0;
	Node0x1bfeef0 -> Node0x1bfef60;
	Node0x1bfef60 -> Node0x1bfefd0;
	Node0x1bfefd0 -> Node0x1bff040;
	Node0x1bff040 -> Node0x1bff0b0;
	Node0x1bff0b0 -> Node0x1bff120;
	Node0x1bff120 -> Node0x1bff190;
	Node0x1bff190 -> Node0x1bff200;
	Node0x1bff200 -> Node0x1bff270;
	Node0x1bff270 -> Node0x1bff2e0;
	Node0x1bff2e0 -> Node0x1bff350;
	Node0x1bff350 -> Node0x1bff3c0;
	Node0x1bff3c0 -> Node0x1bff430;
	Node0x1bff430 -> Node0x1bff4a0;
	Node0x1bff4a0 -> Node0x1bff510;
	Node0x1bff510 -> Node0x1bff580;
	Node0x1bff580 -> Node0x1bff5f0;
	Node0x1bff5f0 -> Node0x1bff660;
	Node0x1bff660 -> Node0x1bff6d0;
	Node0x1bff6d0 -> Node0x1bff740;
	Node0x1bff740 -> Node0x1bff7b0;
	Node0x1bff7b0 -> Node0x1bff820;
	Node0x1bff820 -> Node0x1bff890;
	Node0x1bff890 -> Node0x1bff900;
	Node0x1bff900 -> Node0x1bff970;
	Node0x1bff970 -> Node0x1bff9e0;
	Node0x1bff9e0 -> Node0x1bffa50;
	Node0x1bffa50 -> Node0x1bffac0;
	Node0x1bffac0 -> Node0x1bffb30;
	Node0x1bffb30 -> Node0x1bffba0;
	Node0x1bffba0 -> Node0x1bffc10;
	Node0x1bffc10 -> Node0x1bffc80;
	Node0x1bffc80 -> Node0x1bffcf0;
	Node0x1bffcf0 -> Node0x1bffd60;
	Node0x1bffd60 -> Node0x1b9c8b8;
	Node0x1b9c8b8 -> Node0x1bffdf0;
	Node0x1bffdf0 -> Node0x1c00098;
	Node0x1c00098 -> Node0x1c001f8;
	Node0x1c001f8 -> Node0x1c00308;
	Node0x1c00308 -> Node0x1c00418;
	Node0x1c00418 -> Node0x1c004d8;
edge [color=red]
	Node0x1bfca48 -> Node0x1bfcc68;
	Node0x1bfcc68 -> Node0x1bfd098;
	Node0x1bfcac8 -> Node0x1bfd178;
	Node0x1bfd178 -> Node0x1bfd278;
	Node0x1bfcb58 -> Node0x1bfd338;
	Node0x1bfd338 -> Node0x1bfd3e8;
	Node0x1bfcbb8 -> Node0x1bfd4a8;
	Node0x1bfd4a8 -> Node0x1bfd558;
	Node0x1bfca48 -> Node0x1bf7ab0;
	Node0x1bfcac8 -> Node0x1bf7ab0;
	Node0x1bfcb58 -> Node0x1bf7ab0;
	Node0x1bfcbb8 -> Node0x1bf7ab0;
	Node0x1bfca48 -> Node0x1bfd758;
	Node0x1bfcac8 -> Node0x1bfe6c8;
	Node0x1bfcb58 -> Node0x1bfed38;
	Node0x1bfcbb8 -> Node0x1bfed98;
	Node0x1bfed38 -> Node0x1bfee10;
	Node0x1bfe6c8 -> Node0x1bfee80;
	Node0x1bfee10 -> Node0x1bfee80;
	Node0x1bfed98 -> Node0x1bfeef0;
	Node0x1bfd758 -> Node0x1bfeef0;
	Node0x1bfd758 -> Node0x1bfef60;
	Node0x1bfed98 -> Node0x1bfefd0;
	Node0x1bfef60 -> Node0x1bfefd0;
	Node0x1bfe6c8 -> Node0x1bff040;
	Node0x1bff040 -> Node0x1bff0b0;
	Node0x1bfee80 -> Node0x1bff0b0;
	Node0x1bff0b0 -> Node0x1bff120;
	Node0x1bfeef0 -> Node0x1bff120;
	Node0x1bff120 -> Node0x1bff190;
	Node0x1bfefd0 -> Node0x1bff190;
	Node0x1bfed38 -> Node0x1bff200;
	Node0x1bfe6c8 -> Node0x1bff200;
	Node0x1bfed38 -> Node0x1bff270;
	Node0x1bfe6c8 -> Node0x1bff270;
	Node0x1bff270 -> Node0x1bff2e0;
	Node0x1bfed38 -> Node0x1bff350;
	Node0x1bfe6c8 -> Node0x1bff350;
	Node0x1bfe6c8 -> Node0x1bff3c0;
	Node0x1bfed38 -> Node0x1bff430;
	Node0x1bff3c0 -> Node0x1bff430;
	Node0x1bfed98 -> Node0x1bff4a0;
	Node0x1bfef60 -> Node0x1bff4a0;
	Node0x1bff4a0 -> Node0x1bff510;
	Node0x1bff510 -> Node0x1bff580;
	Node0x1bfed98 -> Node0x1bff5f0;
	Node0x1bfd758 -> Node0x1bff5f0;
	Node0x1bfed98 -> Node0x1bff660;
	Node0x1bff660 -> Node0x1bff6d0;
	Node0x1bfeef0 -> Node0x1bff740;
	Node0x1bff350 -> Node0x1bff7b0;
	Node0x1bfd758 -> Node0x1bff7b0;
	Node0x1bff7b0 -> Node0x1bff820;
	Node0x1bff200 -> Node0x1bff890;
	Node0x1bff890 -> Node0x1bff900;
	Node0x1bff2e0 -> Node0x1bff900;
	Node0x1bff900 -> Node0x1bff970;
	Node0x1bff430 -> Node0x1bff970;
	Node0x1bff970 -> Node0x1bff9e0;
	Node0x1bfee80 -> Node0x1bff9e0;
	Node0x1bff9e0 -> Node0x1bffa50;
	Node0x1bfed98 -> Node0x1bffa50;
	Node0x1bffa50 -> Node0x1bffac0;
	Node0x1bff5f0 -> Node0x1bffac0;
	Node0x1bffac0 -> Node0x1bffb30;
	Node0x1bff4a0 -> Node0x1bffb30;
	Node0x1bffb30 -> Node0x1bffba0;
	Node0x1bff6d0 -> Node0x1bffba0;
	Node0x1bffba0 -> Node0x1bffc10;
	Node0x1bff740 -> Node0x1bffc10;
	Node0x1bffc10 -> Node0x1bffc80;
	Node0x1bff820 -> Node0x1bffc80;
	Node0x1bffc80 -> Node0x1bffcf0;
	Node0x1bff580 -> Node0x1bffcf0;
	Node0x1bff190 -> Node0x1bffd60;
	Node0x1bffcf0 -> Node0x1bffd60;
	Node0x1bffd60 -> Node0x1b9c8b8;
	Node0x1b9c8b8 -> Node0x1bffdf0;
	Node0x1bfd4a8 -> Node0x1c00098;
	Node0x1bfd338 -> Node0x1c001f8;
	Node0x1bfd178 -> Node0x1c00308;
	Node0x1bfcc68 -> Node0x1c00418;
}
