digraph "DFG for'main' function" {
	Node0x1208738[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12087b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1208848[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x12088a8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1208d28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x120a138[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x120a218[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x120a2d8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x120a388[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x120a5e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x120a6a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x120b618[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x120bc88[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x120bd80[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x120bf88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x120c0e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x120c1f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x120c2b8[shape=record, label="  ret i32 0"];
	Node0x1208738 -> Node0x12087b8;
	Node0x12087b8 -> Node0x1208848;
	Node0x1208848 -> Node0x12088a8;
	Node0x12088a8 -> Node0x1208d28;
	Node0x1208d28 -> Node0x120a138;
	Node0x120a138 -> Node0x120a218;
	Node0x120a218 -> Node0x120a2d8;
	Node0x120a2d8 -> Node0x120a388;
	Node0x120a388 -> Node0x120a5e8;
	Node0x120a5e8 -> Node0x120a6a8;
	Node0x120a6a8 -> Node0x120b618;
	Node0x120b618 -> Node0x120bc88;
	Node0x120bc88 -> Node0x120bd80;
	Node0x120bd80 -> Node0x120bf88;
	Node0x120bf88 -> Node0x120c0e8;
	Node0x120c0e8 -> Node0x120c1f8;
	Node0x120c1f8 -> Node0x120c2b8;
edge [color=red]
	Node0x1208738 -> Node0x12088a8;
	Node0x12088a8 -> Node0x1208d28;
	Node0x12087b8 -> Node0x120a138;
	Node0x120a138 -> Node0x120a218;
	Node0x1208848 -> Node0x120a2d8;
	Node0x120a2d8 -> Node0x120a388;
	Node0x1208738 -> Node0x120a5e8;
	Node0x12087b8 -> Node0x120a5e8;
	Node0x1208848 -> Node0x120a5e8;
	Node0x1208738 -> Node0x120a6a8;
	Node0x12087b8 -> Node0x120b618;
	Node0x1208848 -> Node0x120bc88;
	Node0x120a6a8 -> Node0x120bd80;
	Node0x120b618 -> Node0x120bd80;
	Node0x120bc88 -> Node0x120bd80;
	Node0x120a2d8 -> Node0x120bf88;
	Node0x120a138 -> Node0x120c0e8;
	Node0x12088a8 -> Node0x120c1f8;
}
