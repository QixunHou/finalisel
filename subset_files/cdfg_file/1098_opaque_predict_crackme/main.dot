digraph "DFG for'main' function" {
	Node0x103a7c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x103a878[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x103a908[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x103a968[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x103aa18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x103ae48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x103af28[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x103b028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x103b0e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x103b198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x103b258[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x103b308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1035a20[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x103b508[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x103c478[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x103cae8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x103cb48[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x103cbc0[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x103cc30[shape=record, label="  %15 = sub i32 %14, %11"];
	Node0x103cca0[shape=record, label="  %16 = or i32 %13, %10"];
	Node0x103cd10[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x103cd80[shape=record, label="  %18 = add i32 %15, %17"];
	Node0x103cdf0[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x103ce60[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x103ced0[shape=record, label="  %21 = and i32 %11, %20"];
	Node0x103cf40[shape=record, label="  %22 = or i32 %11, %20"];
	Node0x103cfb0[shape=record, label="  %23 = shl i32 %19, 2"];
	Node0x103d020[shape=record, label="  %24 = xor i32 %23, -4"];
	Node0x103d090[shape=record, label="  %25 = xor i32 %22, -1"];
	Node0x103d100[shape=record, label="  %26 = and i32 %13, %10"];
	Node0x103d170[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x103d1e0[shape=record, label="  %28 = xor i32 %10, -1"];
	Node0x103d250[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x103d2c0[shape=record, label="  %30 = and i32 %13, %28"];
	Node0x103d330[shape=record, label="  %31 = xor i32 %30, -1"];
	Node0x103d3a0[shape=record, label="  %32 = xor i32 %13, -1"];
	Node0x103d410[shape=record, label="  %33 = and i32 %10, %32"];
	Node0x103d480[shape=record, label="  %34 = add i32 %12, 4"];
	Node0x103d4f0[shape=record, label="  %35 = add i32 %34, %21"];
	Node0x103d560[shape=record, label="  %36 = add i32 %35, %19"];
	Node0x103d5d0[shape=record, label="  %37 = sub i32 %36, %22"];
	Node0x103d640[shape=record, label="  %38 = add i32 %37, %25"];
	Node0x103d6b0[shape=record, label="  %39 = add i32 %38, %13"];
	Node0x103d720[shape=record, label="  %40 = add i32 %39, %27"];
	Node0x103d790[shape=record, label="  %41 = add i32 %40, %29"];
	Node0x103d800[shape=record, label="  %42 = add i32 %41, %31"];
	Node0x103d870[shape=record, label="  %43 = add i32 %42, %17"];
	Node0x103d8e0[shape=record, label="  %44 = sub i32 %43, %33"];
	Node0x103d950[shape=record, label="  %45 = sub i32 %44, %30"];
	Node0x103d9c0[shape=record, label="  %46 = add i32 %45, %24"];
	Node0x103da30[shape=record, label="  %47 = icmp eq i32 %18, %46"];
	Node0xfda8b8[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x103dac0[shape=record, label="  %49 = call i32 @puts(i8* nonnull dereferenceable(1) %48) #5"];
	Node0x103dd68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x103dec8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x103dfd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x103e0e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x103e1a8[shape=record, label="  ret i32 0"];
	Node0x103a7c8 -> Node0x103a878;
	Node0x103a878 -> Node0x103a908;
	Node0x103a908 -> Node0x103a968;
	Node0x103a968 -> Node0x103aa18;
	Node0x103aa18 -> Node0x103ae48;
	Node0x103ae48 -> Node0x103af28;
	Node0x103af28 -> Node0x103b028;
	Node0x103b028 -> Node0x103b0e8;
	Node0x103b0e8 -> Node0x103b198;
	Node0x103b198 -> Node0x103b258;
	Node0x103b258 -> Node0x103b308;
	Node0x103b308 -> Node0x1035a20;
	Node0x1035a20 -> Node0x103b508;
	Node0x103b508 -> Node0x103c478;
	Node0x103c478 -> Node0x103cae8;
	Node0x103cae8 -> Node0x103cb48;
	Node0x103cb48 -> Node0x103cbc0;
	Node0x103cbc0 -> Node0x103cc30;
	Node0x103cc30 -> Node0x103cca0;
	Node0x103cca0 -> Node0x103cd10;
	Node0x103cd10 -> Node0x103cd80;
	Node0x103cd80 -> Node0x103cdf0;
	Node0x103cdf0 -> Node0x103ce60;
	Node0x103ce60 -> Node0x103ced0;
	Node0x103ced0 -> Node0x103cf40;
	Node0x103cf40 -> Node0x103cfb0;
	Node0x103cfb0 -> Node0x103d020;
	Node0x103d020 -> Node0x103d090;
	Node0x103d090 -> Node0x103d100;
	Node0x103d100 -> Node0x103d170;
	Node0x103d170 -> Node0x103d1e0;
	Node0x103d1e0 -> Node0x103d250;
	Node0x103d250 -> Node0x103d2c0;
	Node0x103d2c0 -> Node0x103d330;
	Node0x103d330 -> Node0x103d3a0;
	Node0x103d3a0 -> Node0x103d410;
	Node0x103d410 -> Node0x103d480;
	Node0x103d480 -> Node0x103d4f0;
	Node0x103d4f0 -> Node0x103d560;
	Node0x103d560 -> Node0x103d5d0;
	Node0x103d5d0 -> Node0x103d640;
	Node0x103d640 -> Node0x103d6b0;
	Node0x103d6b0 -> Node0x103d720;
	Node0x103d720 -> Node0x103d790;
	Node0x103d790 -> Node0x103d800;
	Node0x103d800 -> Node0x103d870;
	Node0x103d870 -> Node0x103d8e0;
	Node0x103d8e0 -> Node0x103d950;
	Node0x103d950 -> Node0x103d9c0;
	Node0x103d9c0 -> Node0x103da30;
	Node0x103da30 -> Node0xfda8b8;
	Node0xfda8b8 -> Node0x103dac0;
	Node0x103dac0 -> Node0x103dd68;
	Node0x103dd68 -> Node0x103dec8;
	Node0x103dec8 -> Node0x103dfd8;
	Node0x103dfd8 -> Node0x103e0e8;
	Node0x103e0e8 -> Node0x103e1a8;
edge [color=red]
	Node0x103a7c8 -> Node0x103aa18;
	Node0x103aa18 -> Node0x103ae48;
	Node0x103a878 -> Node0x103af28;
	Node0x103af28 -> Node0x103b028;
	Node0x103a908 -> Node0x103b0e8;
	Node0x103b0e8 -> Node0x103b198;
	Node0x103a968 -> Node0x103b258;
	Node0x103b258 -> Node0x103b308;
	Node0x103a7c8 -> Node0x1035a20;
	Node0x103a878 -> Node0x1035a20;
	Node0x103a908 -> Node0x1035a20;
	Node0x103a968 -> Node0x1035a20;
	Node0x103a7c8 -> Node0x103b508;
	Node0x103a878 -> Node0x103c478;
	Node0x103a908 -> Node0x103cae8;
	Node0x103a968 -> Node0x103cb48;
	Node0x103c478 -> Node0x103cbc0;
	Node0x103cbc0 -> Node0x103cc30;
	Node0x103c478 -> Node0x103cc30;
	Node0x103cb48 -> Node0x103cca0;
	Node0x103b508 -> Node0x103cca0;
	Node0x103cca0 -> Node0x103cd10;
	Node0x103cc30 -> Node0x103cd80;
	Node0x103cd10 -> Node0x103cd80;
	Node0x103cae8 -> Node0x103cdf0;
	Node0x103c478 -> Node0x103cdf0;
	Node0x103cae8 -> Node0x103ce60;
	Node0x103c478 -> Node0x103ced0;
	Node0x103ce60 -> Node0x103ced0;
	Node0x103c478 -> Node0x103cf40;
	Node0x103ce60 -> Node0x103cf40;
	Node0x103cdf0 -> Node0x103cfb0;
	Node0x103cfb0 -> Node0x103d020;
	Node0x103cf40 -> Node0x103d090;
	Node0x103cb48 -> Node0x103d100;
	Node0x103b508 -> Node0x103d100;
	Node0x103d100 -> Node0x103d170;
	Node0x103b508 -> Node0x103d1e0;
	Node0x103cb48 -> Node0x103d250;
	Node0x103b508 -> Node0x103d250;
	Node0x103cb48 -> Node0x103d2c0;
	Node0x103d1e0 -> Node0x103d2c0;
	Node0x103d2c0 -> Node0x103d330;
	Node0x103cb48 -> Node0x103d3a0;
	Node0x103b508 -> Node0x103d410;
	Node0x103d3a0 -> Node0x103d410;
	Node0x103cae8 -> Node0x103d480;
	Node0x103d480 -> Node0x103d4f0;
	Node0x103ced0 -> Node0x103d4f0;
	Node0x103d4f0 -> Node0x103d560;
	Node0x103cdf0 -> Node0x103d560;
	Node0x103d560 -> Node0x103d5d0;
	Node0x103cf40 -> Node0x103d5d0;
	Node0x103d5d0 -> Node0x103d640;
	Node0x103d090 -> Node0x103d640;
	Node0x103d640 -> Node0x103d6b0;
	Node0x103cb48 -> Node0x103d6b0;
	Node0x103d6b0 -> Node0x103d720;
	Node0x103d170 -> Node0x103d720;
	Node0x103d720 -> Node0x103d790;
	Node0x103d250 -> Node0x103d790;
	Node0x103d790 -> Node0x103d800;
	Node0x103d330 -> Node0x103d800;
	Node0x103d800 -> Node0x103d870;
	Node0x103cd10 -> Node0x103d870;
	Node0x103d870 -> Node0x103d8e0;
	Node0x103d410 -> Node0x103d8e0;
	Node0x103d8e0 -> Node0x103d950;
	Node0x103d2c0 -> Node0x103d950;
	Node0x103d950 -> Node0x103d9c0;
	Node0x103d020 -> Node0x103d9c0;
	Node0x103cd80 -> Node0x103da30;
	Node0x103d9c0 -> Node0x103da30;
	Node0x103da30 -> Node0xfda8b8;
	Node0xfda8b8 -> Node0x103dac0;
	Node0x103b258 -> Node0x103dd68;
	Node0x103b0e8 -> Node0x103dec8;
	Node0x103af28 -> Node0x103dfd8;
	Node0x103aa18 -> Node0x103e0e8;
}
