digraph "DFG for'main' function" {
	Node0x249abd8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x249ac58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x249ace8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x249ad48[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x249b1c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x249b2a8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x249b3a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x249b468[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x249b518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x249b778[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x249b838[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x249b998[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x249b9f8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x249f7d0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x249f9d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x249fb38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x249fc48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x249fd08[shape=record, label="  ret i32 0"];
	Node0x249abd8 -> Node0x249ac58;
	Node0x249ac58 -> Node0x249ace8;
	Node0x249ace8 -> Node0x249ad48;
	Node0x249ad48 -> Node0x249b1c8;
	Node0x249b1c8 -> Node0x249b2a8;
	Node0x249b2a8 -> Node0x249b3a8;
	Node0x249b3a8 -> Node0x249b468;
	Node0x249b468 -> Node0x249b518;
	Node0x249b518 -> Node0x249b778;
	Node0x249b778 -> Node0x249b838;
	Node0x249b838 -> Node0x249b998;
	Node0x249b998 -> Node0x249b9f8;
	Node0x249b9f8 -> Node0x249f7d0;
	Node0x249f7d0 -> Node0x249f9d8;
	Node0x249f9d8 -> Node0x249fb38;
	Node0x249fb38 -> Node0x249fc48;
	Node0x249fc48 -> Node0x249fd08;
edge [color=red]
	Node0x249abd8 -> Node0x249ad48;
	Node0x249ad48 -> Node0x249b1c8;
	Node0x249ac58 -> Node0x249b2a8;
	Node0x249b2a8 -> Node0x249b3a8;
	Node0x249ace8 -> Node0x249b468;
	Node0x249b468 -> Node0x249b518;
	Node0x249abd8 -> Node0x249b778;
	Node0x249ac58 -> Node0x249b778;
	Node0x249ace8 -> Node0x249b778;
	Node0x249abd8 -> Node0x249b838;
	Node0x249ac58 -> Node0x249b998;
	Node0x249ace8 -> Node0x249b9f8;
	Node0x249b838 -> Node0x249f7d0;
	Node0x249b998 -> Node0x249f7d0;
	Node0x249b9f8 -> Node0x249f7d0;
	Node0x249b468 -> Node0x249f9d8;
	Node0x249b2a8 -> Node0x249fb38;
	Node0x249ad48 -> Node0x249fc48;
}
