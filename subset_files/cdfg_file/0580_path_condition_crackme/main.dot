digraph "DFG for'main' function" {
	Node0x813da8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x813e28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x813eb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x813f18[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x814398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x814478[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x81ae98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x81af58[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x81b028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x81b288[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x81b348[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x81c2b8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x81c928[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x81ca20[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x81cc28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x81cd88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x81ce98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x81cf58[shape=record, label="  ret i32 0"];
	Node0x813da8 -> Node0x813e28;
	Node0x813e28 -> Node0x813eb8;
	Node0x813eb8 -> Node0x813f18;
	Node0x813f18 -> Node0x814398;
	Node0x814398 -> Node0x814478;
	Node0x814478 -> Node0x81ae98;
	Node0x81ae98 -> Node0x81af58;
	Node0x81af58 -> Node0x81b028;
	Node0x81b028 -> Node0x81b288;
	Node0x81b288 -> Node0x81b348;
	Node0x81b348 -> Node0x81c2b8;
	Node0x81c2b8 -> Node0x81c928;
	Node0x81c928 -> Node0x81ca20;
	Node0x81ca20 -> Node0x81cc28;
	Node0x81cc28 -> Node0x81cd88;
	Node0x81cd88 -> Node0x81ce98;
	Node0x81ce98 -> Node0x81cf58;
edge [color=red]
	Node0x813da8 -> Node0x813f18;
	Node0x813f18 -> Node0x814398;
	Node0x813e28 -> Node0x814478;
	Node0x814478 -> Node0x81ae98;
	Node0x813eb8 -> Node0x81af58;
	Node0x81af58 -> Node0x81b028;
	Node0x813da8 -> Node0x81b288;
	Node0x813e28 -> Node0x81b288;
	Node0x813eb8 -> Node0x81b288;
	Node0x813da8 -> Node0x81b348;
	Node0x813e28 -> Node0x81c2b8;
	Node0x813eb8 -> Node0x81c928;
	Node0x81b348 -> Node0x81ca20;
	Node0x81c2b8 -> Node0x81ca20;
	Node0x81c928 -> Node0x81ca20;
	Node0x81af58 -> Node0x81cc28;
	Node0x814478 -> Node0x81cd88;
	Node0x813f18 -> Node0x81ce98;
}
