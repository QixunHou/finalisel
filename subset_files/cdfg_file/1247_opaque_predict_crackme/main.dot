digraph "DFG for'main' function" {
	Node0xf64be8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf64c68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf64cf8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xf65158[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xf65238[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xf65358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf65590[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xf65648[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf665b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf66c40[shape=record, label="  %8 = or i32 %7, %6"];
	Node0xf66cb0[shape=record, label="  %9 = sub i32 0, %8"];
	Node0xf66d20[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0xf66d90[shape=record, label="  %11 = and i32 %6, %10"];
	Node0xf66e00[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0xf66e70[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0xf66ee0[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0xf66f50[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xf66fc0[shape=record, label="  %16 = and i32 %7, %6"];
	Node0xf67030[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0xf670a0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0xf67110[shape=record, label="  %19 = shl i32 %8, 1"];
	Node0xf67180[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0xf671f0[shape=record, label="  %21 = shl i32 %16, 2"];
	Node0xf67260[shape=record, label="  %22 = add i32 %15, %10"];
	Node0xf672d0[shape=record, label="  %23 = sub i32 %22, %14"];
	Node0xf67340[shape=record, label="  %24 = add i32 %23, %11"];
	Node0xf673b0[shape=record, label="  %25 = sub i32 %24, %21"];
	Node0xf67420[shape=record, label="  %26 = add i32 %25, %13"];
	Node0xf67490[shape=record, label="  %27 = sub i32 %26, %18"];
	Node0xf67500[shape=record, label="  %28 = sub i32 %27, %20"];
	Node0xf67570[shape=record, label="  %29 = icmp eq i32 %28, %9"];
	Node0xf059d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf67600[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0xf67858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf679b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xf67a78[shape=record, label="  ret i32 0"];
	Node0xf64be8 -> Node0xf64c68;
	Node0xf64c68 -> Node0xf64cf8;
	Node0xf64cf8 -> Node0xf65158;
	Node0xf65158 -> Node0xf65238;
	Node0xf65238 -> Node0xf65358;
	Node0xf65358 -> Node0xf65590;
	Node0xf65590 -> Node0xf65648;
	Node0xf65648 -> Node0xf665b8;
	Node0xf665b8 -> Node0xf66c40;
	Node0xf66c40 -> Node0xf66cb0;
	Node0xf66cb0 -> Node0xf66d20;
	Node0xf66d20 -> Node0xf66d90;
	Node0xf66d90 -> Node0xf66e00;
	Node0xf66e00 -> Node0xf66e70;
	Node0xf66e70 -> Node0xf66ee0;
	Node0xf66ee0 -> Node0xf66f50;
	Node0xf66f50 -> Node0xf66fc0;
	Node0xf66fc0 -> Node0xf67030;
	Node0xf67030 -> Node0xf670a0;
	Node0xf670a0 -> Node0xf67110;
	Node0xf67110 -> Node0xf67180;
	Node0xf67180 -> Node0xf671f0;
	Node0xf671f0 -> Node0xf67260;
	Node0xf67260 -> Node0xf672d0;
	Node0xf672d0 -> Node0xf67340;
	Node0xf67340 -> Node0xf673b0;
	Node0xf673b0 -> Node0xf67420;
	Node0xf67420 -> Node0xf67490;
	Node0xf67490 -> Node0xf67500;
	Node0xf67500 -> Node0xf67570;
	Node0xf67570 -> Node0xf059d8;
	Node0xf059d8 -> Node0xf67600;
	Node0xf67600 -> Node0xf67858;
	Node0xf67858 -> Node0xf679b8;
	Node0xf679b8 -> Node0xf67a78;
edge [color=red]
	Node0xf64be8 -> Node0xf64cf8;
	Node0xf64cf8 -> Node0xf65158;
	Node0xf64c68 -> Node0xf65238;
	Node0xf65238 -> Node0xf65358;
	Node0xf64be8 -> Node0xf65590;
	Node0xf64c68 -> Node0xf65590;
	Node0xf64be8 -> Node0xf65648;
	Node0xf64c68 -> Node0xf665b8;
	Node0xf665b8 -> Node0xf66c40;
	Node0xf65648 -> Node0xf66c40;
	Node0xf66c40 -> Node0xf66cb0;
	Node0xf665b8 -> Node0xf66d20;
	Node0xf65648 -> Node0xf66d90;
	Node0xf66d20 -> Node0xf66d90;
	Node0xf66d90 -> Node0xf66e00;
	Node0xf66e00 -> Node0xf66e70;
	Node0xf665b8 -> Node0xf66ee0;
	Node0xf65648 -> Node0xf66ee0;
	Node0xf66ee0 -> Node0xf66f50;
	Node0xf665b8 -> Node0xf66fc0;
	Node0xf65648 -> Node0xf66fc0;
	Node0xf66fc0 -> Node0xf67030;
	Node0xf67030 -> Node0xf670a0;
	Node0xf66c40 -> Node0xf67110;
	Node0xf67110 -> Node0xf67180;
	Node0xf66fc0 -> Node0xf671f0;
	Node0xf66f50 -> Node0xf67260;
	Node0xf66d20 -> Node0xf67260;
	Node0xf67260 -> Node0xf672d0;
	Node0xf66ee0 -> Node0xf672d0;
	Node0xf672d0 -> Node0xf67340;
	Node0xf66d90 -> Node0xf67340;
	Node0xf67340 -> Node0xf673b0;
	Node0xf671f0 -> Node0xf673b0;
	Node0xf673b0 -> Node0xf67420;
	Node0xf66e70 -> Node0xf67420;
	Node0xf67420 -> Node0xf67490;
	Node0xf670a0 -> Node0xf67490;
	Node0xf67490 -> Node0xf67500;
	Node0xf67180 -> Node0xf67500;
	Node0xf67500 -> Node0xf67570;
	Node0xf66cb0 -> Node0xf67570;
	Node0xf67570 -> Node0xf059d8;
	Node0xf059d8 -> Node0xf67600;
	Node0xf65238 -> Node0xf67858;
	Node0xf64cf8 -> Node0xf679b8;
}
