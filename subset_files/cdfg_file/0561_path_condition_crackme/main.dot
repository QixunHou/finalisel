digraph "DFG for'main' function" {
	Node0x11dcd98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11dce18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11dcea8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x11dd308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x11dd3e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x11dd508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11dd740[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x11dd7f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11de768[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11dedf0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x11dee60[shape=record, label="  %9 = sub i32 %8, %7"];
	Node0x11deed0[shape=record, label="  %10 = shl i32 %8, 1"];
	Node0x11def40[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x11defb0[shape=record, label="  %12 = or i32 %7, %6"];
	Node0x11df020[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x11df090[shape=record, label="  %14 = xor i32 %7, -1"];
	Node0x11df100[shape=record, label="  %15 = and i32 %6, %14"];
	Node0x11df170[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x11df1e0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x11df250[shape=record, label="  %18 = or i32 %6, %14"];
	Node0x11df2c0[shape=record, label="  %19 = add i32 %12, 1"];
	Node0x11df330[shape=record, label="  %20 = shl i32 %18, 1"];
	Node0x11df3a0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x11df410[shape=record, label="  %22 = add i32 %19, %15"];
	Node0x11df480[shape=record, label="  %23 = mul i32 %22, 3"];
	Node0x11df4f0[shape=record, label="  %24 = sub i32 1, %15"];
	Node0x11df560[shape=record, label="  %25 = add i32 %24, %17"];
	Node0x11df5d0[shape=record, label="  %26 = add i32 %25, %18"];
	Node0x11df640[shape=record, label="  %27 = sub i32 %26, %16"];
	Node0x11df6b0[shape=record, label="  %28 = sub i32 %27, %13"];
	Node0x11df720[shape=record, label="  %29 = add i32 %28, %11"];
	Node0x11df790[shape=record, label="  %30 = add i32 %29, %21"];
	Node0x11df800[shape=record, label="  %31 = add i32 %30, %23"];
	Node0x11df870[shape=record, label="  %32 = icmp eq i32 %9, %31"];
	Node0x117d9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x11dfb10[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x11dfd68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11dfec8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x11dff88[shape=record, label="  ret i32 0"];
	Node0x11dcd98 -> Node0x11dce18;
	Node0x11dce18 -> Node0x11dcea8;
	Node0x11dcea8 -> Node0x11dd308;
	Node0x11dd308 -> Node0x11dd3e8;
	Node0x11dd3e8 -> Node0x11dd508;
	Node0x11dd508 -> Node0x11dd740;
	Node0x11dd740 -> Node0x11dd7f8;
	Node0x11dd7f8 -> Node0x11de768;
	Node0x11de768 -> Node0x11dedf0;
	Node0x11dedf0 -> Node0x11dee60;
	Node0x11dee60 -> Node0x11deed0;
	Node0x11deed0 -> Node0x11def40;
	Node0x11def40 -> Node0x11defb0;
	Node0x11defb0 -> Node0x11df020;
	Node0x11df020 -> Node0x11df090;
	Node0x11df090 -> Node0x11df100;
	Node0x11df100 -> Node0x11df170;
	Node0x11df170 -> Node0x11df1e0;
	Node0x11df1e0 -> Node0x11df250;
	Node0x11df250 -> Node0x11df2c0;
	Node0x11df2c0 -> Node0x11df330;
	Node0x11df330 -> Node0x11df3a0;
	Node0x11df3a0 -> Node0x11df410;
	Node0x11df410 -> Node0x11df480;
	Node0x11df480 -> Node0x11df4f0;
	Node0x11df4f0 -> Node0x11df560;
	Node0x11df560 -> Node0x11df5d0;
	Node0x11df5d0 -> Node0x11df640;
	Node0x11df640 -> Node0x11df6b0;
	Node0x11df6b0 -> Node0x11df720;
	Node0x11df720 -> Node0x11df790;
	Node0x11df790 -> Node0x11df800;
	Node0x11df800 -> Node0x11df870;
	Node0x11df870 -> Node0x117d9d8;
	Node0x117d9d8 -> Node0x11dfb10;
	Node0x11dfb10 -> Node0x11dfd68;
	Node0x11dfd68 -> Node0x11dfec8;
	Node0x11dfec8 -> Node0x11dff88;
edge [color=red]
	Node0x11dcd98 -> Node0x11dcea8;
	Node0x11dcea8 -> Node0x11dd308;
	Node0x11dce18 -> Node0x11dd3e8;
	Node0x11dd3e8 -> Node0x11dd508;
	Node0x11dcd98 -> Node0x11dd740;
	Node0x11dce18 -> Node0x11dd740;
	Node0x11dcd98 -> Node0x11dd7f8;
	Node0x11dce18 -> Node0x11de768;
	Node0x11de768 -> Node0x11dedf0;
	Node0x11dd7f8 -> Node0x11dedf0;
	Node0x11dedf0 -> Node0x11dee60;
	Node0x11de768 -> Node0x11dee60;
	Node0x11dedf0 -> Node0x11deed0;
	Node0x11deed0 -> Node0x11def40;
	Node0x11de768 -> Node0x11defb0;
	Node0x11dd7f8 -> Node0x11defb0;
	Node0x11defb0 -> Node0x11df020;
	Node0x11de768 -> Node0x11df090;
	Node0x11dd7f8 -> Node0x11df100;
	Node0x11df090 -> Node0x11df100;
	Node0x11de768 -> Node0x11df170;
	Node0x11dd7f8 -> Node0x11df170;
	Node0x11df170 -> Node0x11df1e0;
	Node0x11dd7f8 -> Node0x11df250;
	Node0x11df090 -> Node0x11df250;
	Node0x11defb0 -> Node0x11df2c0;
	Node0x11df250 -> Node0x11df330;
	Node0x11df330 -> Node0x11df3a0;
	Node0x11df2c0 -> Node0x11df410;
	Node0x11df100 -> Node0x11df410;
	Node0x11df410 -> Node0x11df480;
	Node0x11df100 -> Node0x11df4f0;
	Node0x11df4f0 -> Node0x11df560;
	Node0x11df1e0 -> Node0x11df560;
	Node0x11df560 -> Node0x11df5d0;
	Node0x11df250 -> Node0x11df5d0;
	Node0x11df5d0 -> Node0x11df640;
	Node0x11df170 -> Node0x11df640;
	Node0x11df640 -> Node0x11df6b0;
	Node0x11df020 -> Node0x11df6b0;
	Node0x11df6b0 -> Node0x11df720;
	Node0x11def40 -> Node0x11df720;
	Node0x11df720 -> Node0x11df790;
	Node0x11df3a0 -> Node0x11df790;
	Node0x11df790 -> Node0x11df800;
	Node0x11df480 -> Node0x11df800;
	Node0x11dee60 -> Node0x11df870;
	Node0x11df800 -> Node0x11df870;
	Node0x11df870 -> Node0x117d9d8;
	Node0x117d9d8 -> Node0x11dfb10;
	Node0x11dd3e8 -> Node0x11dfd68;
	Node0x11dcea8 -> Node0x11dfec8;
}
