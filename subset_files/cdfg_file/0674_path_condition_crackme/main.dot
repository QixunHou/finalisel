digraph "DFG for'main' function" {
	Node0xfca948[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xfca9c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xfcaa58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xfcaab8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xfcaf38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfcb018[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xfcb118[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfcb1d8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xfcb288[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfcb4e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xfcb5a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xfcb708[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xfcb768[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xfcee40[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xfcf048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfcf1a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfcf2b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfcf378[shape=record, label="  ret i32 0"];
	Node0xfca948 -> Node0xfca9c8;
	Node0xfca9c8 -> Node0xfcaa58;
	Node0xfcaa58 -> Node0xfcaab8;
	Node0xfcaab8 -> Node0xfcaf38;
	Node0xfcaf38 -> Node0xfcb018;
	Node0xfcb018 -> Node0xfcb118;
	Node0xfcb118 -> Node0xfcb1d8;
	Node0xfcb1d8 -> Node0xfcb288;
	Node0xfcb288 -> Node0xfcb4e8;
	Node0xfcb4e8 -> Node0xfcb5a8;
	Node0xfcb5a8 -> Node0xfcb708;
	Node0xfcb708 -> Node0xfcb768;
	Node0xfcb768 -> Node0xfcee40;
	Node0xfcee40 -> Node0xfcf048;
	Node0xfcf048 -> Node0xfcf1a8;
	Node0xfcf1a8 -> Node0xfcf2b8;
	Node0xfcf2b8 -> Node0xfcf378;
edge [color=red]
	Node0xfca948 -> Node0xfcaab8;
	Node0xfcaab8 -> Node0xfcaf38;
	Node0xfca9c8 -> Node0xfcb018;
	Node0xfcb018 -> Node0xfcb118;
	Node0xfcaa58 -> Node0xfcb1d8;
	Node0xfcb1d8 -> Node0xfcb288;
	Node0xfca948 -> Node0xfcb4e8;
	Node0xfca9c8 -> Node0xfcb4e8;
	Node0xfcaa58 -> Node0xfcb4e8;
	Node0xfca948 -> Node0xfcb5a8;
	Node0xfca9c8 -> Node0xfcb708;
	Node0xfcaa58 -> Node0xfcb768;
	Node0xfcb5a8 -> Node0xfcee40;
	Node0xfcb708 -> Node0xfcee40;
	Node0xfcb768 -> Node0xfcee40;
	Node0xfcb1d8 -> Node0xfcf048;
	Node0xfcb018 -> Node0xfcf1a8;
	Node0xfcaab8 -> Node0xfcf2b8;
}
