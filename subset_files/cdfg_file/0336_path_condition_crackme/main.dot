digraph "DFG for'main' function" {
	Node0x11ace58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11aced8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11acf68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x11acfc8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x11ad078[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x11ad4a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11ad588[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x11ad688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11ad748[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x11ad7f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x11ad8b8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x11ad968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x11a7bf0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x11adb68[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11aead8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11af148[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x11af1a8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x11af220[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x11af290[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0x11af300[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x11af370[shape=record, label="  %17 = add i32 %14, %12"];
	Node0x11af3e0[shape=record, label="  %18 = sub i32 %16, %17"];
	Node0x11af450[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x11af4c0[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x11af530[shape=record, label="  %21 = or i32 %11, %20"];
	Node0x11af5a0[shape=record, label="  %22 = xor i32 %14, -1"];
	Node0x11af610[shape=record, label="  %23 = shl i32 %21, 2"];
	Node0x11af680[shape=record, label="  %24 = xor i32 %23, -4"];
	Node0x11af6f0[shape=record, label="  %25 = and i32 %11, %20"];
	Node0x11af760[shape=record, label="  %26 = and i32 %12, %11"];
	Node0x11af7d0[shape=record, label="  %27 = xor i32 %10, -1"];
	Node0x11af840[shape=record, label="  %28 = or i32 %13, %27"];
	Node0x11af8b0[shape=record, label="  %29 = xor i32 %13, -1"];
	Node0x11af920[shape=record, label="  %30 = or i32 %10, %29"];
	Node0x11af990[shape=record, label="  %31 = shl i32 %13, 1"];
	Node0x11afa00[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x11afa70[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x11afae0[shape=record, label="  %34 = and i32 %13, %10"];
	Node0x11afb50[shape=record, label="  %35 = shl i32 %34, 2"];
	Node0x11afbc0[shape=record, label="  %36 = add i32 %10, 2"];
	Node0x11afc30[shape=record, label="  %37 = sub i32 %36, %26"];
	Node0x11afca0[shape=record, label="  %38 = add i32 %37, %28"];
	Node0x11afd10[shape=record, label="  %39 = add i32 %38, %32"];
	Node0x11afd80[shape=record, label="  %40 = mul i32 %39, 3"];
	Node0x11afdf0[shape=record, label="  %41 = sub i32 -2, %10"];
	Node0x11afe60[shape=record, label="  %42 = add i32 %41, %12"];
	Node0x11afed0[shape=record, label="  %43 = add i32 %42, %19"];
	Node0x11aff40[shape=record, label="  %44 = sub i32 %43, %21"];
	Node0x11affb0[shape=record, label="  %45 = add i32 %44, %22"];
	Node0x11b0020[shape=record, label="  %46 = sub i32 %45, %25"];
	Node0x11b0090[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x11b0100[shape=record, label="  %48 = sub i32 %47, %28"];
	Node0x11b0170[shape=record, label="  %49 = add i32 %48, %30"];
	Node0x11b01e0[shape=record, label="  %50 = add i32 %49, %31"];
	Node0x11b0250[shape=record, label="  %51 = add i32 %50, %15"];
	Node0x11b02c0[shape=record, label="  %52 = sub i32 %51, %24"];
	Node0x11b0330[shape=record, label="  %53 = sub i32 %52, %33"];
	Node0x11b03a0[shape=record, label="  %54 = sub i32 %53, %35"];
	Node0x11b0410[shape=record, label="  %55 = add i32 %54, %40"];
	Node0x11b0480[shape=record, label="  %56 = icmp eq i32 %18, %55"];
	Node0x114c8b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x11b0510[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x11b07b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x11b0918[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x11b0a28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11b0b38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11b0bf8[shape=record, label="  ret i32 0"];
	Node0x11ace58 -> Node0x11aced8;
	Node0x11aced8 -> Node0x11acf68;
	Node0x11acf68 -> Node0x11acfc8;
	Node0x11acfc8 -> Node0x11ad078;
	Node0x11ad078 -> Node0x11ad4a8;
	Node0x11ad4a8 -> Node0x11ad588;
	Node0x11ad588 -> Node0x11ad688;
	Node0x11ad688 -> Node0x11ad748;
	Node0x11ad748 -> Node0x11ad7f8;
	Node0x11ad7f8 -> Node0x11ad8b8;
	Node0x11ad8b8 -> Node0x11ad968;
	Node0x11ad968 -> Node0x11a7bf0;
	Node0x11a7bf0 -> Node0x11adb68;
	Node0x11adb68 -> Node0x11aead8;
	Node0x11aead8 -> Node0x11af148;
	Node0x11af148 -> Node0x11af1a8;
	Node0x11af1a8 -> Node0x11af220;
	Node0x11af220 -> Node0x11af290;
	Node0x11af290 -> Node0x11af300;
	Node0x11af300 -> Node0x11af370;
	Node0x11af370 -> Node0x11af3e0;
	Node0x11af3e0 -> Node0x11af450;
	Node0x11af450 -> Node0x11af4c0;
	Node0x11af4c0 -> Node0x11af530;
	Node0x11af530 -> Node0x11af5a0;
	Node0x11af5a0 -> Node0x11af610;
	Node0x11af610 -> Node0x11af680;
	Node0x11af680 -> Node0x11af6f0;
	Node0x11af6f0 -> Node0x11af760;
	Node0x11af760 -> Node0x11af7d0;
	Node0x11af7d0 -> Node0x11af840;
	Node0x11af840 -> Node0x11af8b0;
	Node0x11af8b0 -> Node0x11af920;
	Node0x11af920 -> Node0x11af990;
	Node0x11af990 -> Node0x11afa00;
	Node0x11afa00 -> Node0x11afa70;
	Node0x11afa70 -> Node0x11afae0;
	Node0x11afae0 -> Node0x11afb50;
	Node0x11afb50 -> Node0x11afbc0;
	Node0x11afbc0 -> Node0x11afc30;
	Node0x11afc30 -> Node0x11afca0;
	Node0x11afca0 -> Node0x11afd10;
	Node0x11afd10 -> Node0x11afd80;
	Node0x11afd80 -> Node0x11afdf0;
	Node0x11afdf0 -> Node0x11afe60;
	Node0x11afe60 -> Node0x11afed0;
	Node0x11afed0 -> Node0x11aff40;
	Node0x11aff40 -> Node0x11affb0;
	Node0x11affb0 -> Node0x11b0020;
	Node0x11b0020 -> Node0x11b0090;
	Node0x11b0090 -> Node0x11b0100;
	Node0x11b0100 -> Node0x11b0170;
	Node0x11b0170 -> Node0x11b01e0;
	Node0x11b01e0 -> Node0x11b0250;
	Node0x11b0250 -> Node0x11b02c0;
	Node0x11b02c0 -> Node0x11b0330;
	Node0x11b0330 -> Node0x11b03a0;
	Node0x11b03a0 -> Node0x11b0410;
	Node0x11b0410 -> Node0x11b0480;
	Node0x11b0480 -> Node0x114c8b8;
	Node0x114c8b8 -> Node0x11b0510;
	Node0x11b0510 -> Node0x11b07b8;
	Node0x11b07b8 -> Node0x11b0918;
	Node0x11b0918 -> Node0x11b0a28;
	Node0x11b0a28 -> Node0x11b0b38;
	Node0x11b0b38 -> Node0x11b0bf8;
edge [color=red]
	Node0x11ace58 -> Node0x11ad078;
	Node0x11ad078 -> Node0x11ad4a8;
	Node0x11aced8 -> Node0x11ad588;
	Node0x11ad588 -> Node0x11ad688;
	Node0x11acf68 -> Node0x11ad748;
	Node0x11ad748 -> Node0x11ad7f8;
	Node0x11acfc8 -> Node0x11ad8b8;
	Node0x11ad8b8 -> Node0x11ad968;
	Node0x11ace58 -> Node0x11a7bf0;
	Node0x11aced8 -> Node0x11a7bf0;
	Node0x11acf68 -> Node0x11a7bf0;
	Node0x11acfc8 -> Node0x11a7bf0;
	Node0x11ace58 -> Node0x11adb68;
	Node0x11aced8 -> Node0x11aead8;
	Node0x11acf68 -> Node0x11af148;
	Node0x11acfc8 -> Node0x11af1a8;
	Node0x11af148 -> Node0x11af220;
	Node0x11aead8 -> Node0x11af220;
	Node0x11af1a8 -> Node0x11af290;
	Node0x11adb68 -> Node0x11af290;
	Node0x11af290 -> Node0x11af300;
	Node0x11af220 -> Node0x11af370;
	Node0x11af148 -> Node0x11af370;
	Node0x11af300 -> Node0x11af3e0;
	Node0x11af370 -> Node0x11af3e0;
	Node0x11af148 -> Node0x11af450;
	Node0x11aead8 -> Node0x11af450;
	Node0x11af148 -> Node0x11af4c0;
	Node0x11aead8 -> Node0x11af530;
	Node0x11af4c0 -> Node0x11af530;
	Node0x11af220 -> Node0x11af5a0;
	Node0x11af530 -> Node0x11af610;
	Node0x11af610 -> Node0x11af680;
	Node0x11aead8 -> Node0x11af6f0;
	Node0x11af4c0 -> Node0x11af6f0;
	Node0x11af148 -> Node0x11af760;
	Node0x11aead8 -> Node0x11af760;
	Node0x11adb68 -> Node0x11af7d0;
	Node0x11af1a8 -> Node0x11af840;
	Node0x11af7d0 -> Node0x11af840;
	Node0x11af1a8 -> Node0x11af8b0;
	Node0x11adb68 -> Node0x11af920;
	Node0x11af8b0 -> Node0x11af920;
	Node0x11af1a8 -> Node0x11af990;
	Node0x11af1a8 -> Node0x11afa00;
	Node0x11adb68 -> Node0x11afa00;
	Node0x11afa00 -> Node0x11afa70;
	Node0x11af1a8 -> Node0x11afae0;
	Node0x11adb68 -> Node0x11afae0;
	Node0x11afae0 -> Node0x11afb50;
	Node0x11adb68 -> Node0x11afbc0;
	Node0x11afbc0 -> Node0x11afc30;
	Node0x11af760 -> Node0x11afc30;
	Node0x11afc30 -> Node0x11afca0;
	Node0x11af840 -> Node0x11afca0;
	Node0x11afca0 -> Node0x11afd10;
	Node0x11afa00 -> Node0x11afd10;
	Node0x11afd10 -> Node0x11afd80;
	Node0x11adb68 -> Node0x11afdf0;
	Node0x11afdf0 -> Node0x11afe60;
	Node0x11af148 -> Node0x11afe60;
	Node0x11afe60 -> Node0x11afed0;
	Node0x11af450 -> Node0x11afed0;
	Node0x11afed0 -> Node0x11aff40;
	Node0x11af530 -> Node0x11aff40;
	Node0x11aff40 -> Node0x11affb0;
	Node0x11af5a0 -> Node0x11affb0;
	Node0x11affb0 -> Node0x11b0020;
	Node0x11af6f0 -> Node0x11b0020;
	Node0x11b0020 -> Node0x11b0090;
	Node0x11af8b0 -> Node0x11b0090;
	Node0x11b0090 -> Node0x11b0100;
	Node0x11af840 -> Node0x11b0100;
	Node0x11b0100 -> Node0x11b0170;
	Node0x11af920 -> Node0x11b0170;
	Node0x11b0170 -> Node0x11b01e0;
	Node0x11af990 -> Node0x11b01e0;
	Node0x11b01e0 -> Node0x11b0250;
	Node0x11af290 -> Node0x11b0250;
	Node0x11b0250 -> Node0x11b02c0;
	Node0x11af680 -> Node0x11b02c0;
	Node0x11b02c0 -> Node0x11b0330;
	Node0x11afa70 -> Node0x11b0330;
	Node0x11b0330 -> Node0x11b03a0;
	Node0x11afb50 -> Node0x11b03a0;
	Node0x11b03a0 -> Node0x11b0410;
	Node0x11afd80 -> Node0x11b0410;
	Node0x11af3e0 -> Node0x11b0480;
	Node0x11b0410 -> Node0x11b0480;
	Node0x11b0480 -> Node0x114c8b8;
	Node0x114c8b8 -> Node0x11b0510;
	Node0x11ad8b8 -> Node0x11b07b8;
	Node0x11ad748 -> Node0x11b0918;
	Node0x11ad588 -> Node0x11b0a28;
	Node0x11ad078 -> Node0x11b0b38;
}
