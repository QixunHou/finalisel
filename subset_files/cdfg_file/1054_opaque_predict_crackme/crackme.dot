digraph "DFG for'crackme' function" {
	Node0x222e0e0[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x222e150[shape=record, label="  %6 = or i32 %5, %2"];
	Node0x222e1c0[shape=record, label="  %7 = or i32 %3, %0"];
	Node0x222e260[shape=record, label="  %8 = add i32 %6, 1"];
	Node0x222e2d0[shape=record, label="  %9 = add i32 %8, %3"];
	Node0x222e340[shape=record, label="  %10 = sub i32 %9, %7"];
	Node0x222e3b0[shape=record, label="  %11 = and i32 %2, %1"];
	Node0x222e420[shape=record, label="  %12 = xor i32 %2, %1"];
	Node0x222e490[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x222e500[shape=record, label="  %14 = or i32 %2, %1"];
	Node0x222e570[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x222e610[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x222e680[shape=record, label="  %17 = xor i32 %0, -1"];
	Node0x222e6f0[shape=record, label="  %18 = xor i32 %3, %0"];
	Node0x222e760[shape=record, label="  %19 = and i32 %3, %0"];
	Node0x222e7d0[shape=record, label="  %20 = and i32 %17, %3"];
	Node0x222e840[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x222e8e0[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0x222e950[shape=record, label="  %23 = or i32 %17, %3"];
	Node0x222e9c0[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x222ea60[shape=record, label="  %25 = mul i32 %24, -6"];
	Node0x222ead0[shape=record, label="  %26 = shl i32 %19, 1"];
	Node0x222eb40[shape=record, label="  %27 = add i32 %20, %12"];
	Node0x222ebb0[shape=record, label="  %28 = add i32 %27, %18"];
	Node0x222ec20[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x222ecc0[shape=record, label="  %30 = add i32 %0, 5"];
	Node0x222ed30[shape=record, label="  %31 = add i32 %30, %0"];
	Node0x222eda0[shape=record, label="  %32 = add i32 %31, %2"];
	Node0x222f020[shape=record, label="  %33 = add i32 %32, %11"];
	Node0x222f090[shape=record, label="  %34 = add i32 %33, %13"];
	Node0x222f100[shape=record, label="  %35 = sub i32 %34, %3"];
	Node0x222f170[shape=record, label="  %36 = add i32 %35, %19"];
	Node0x222f1e0[shape=record, label="  %37 = sub i32 %36, %23"];
	Node0x222f250[shape=record, label="  %38 = add i32 %37, %16"];
	Node0x222f2c0[shape=record, label="  %39 = add i32 %38, %22"];
	Node0x222f330[shape=record, label="  %40 = add i32 %39, %25"];
	Node0x222f3a0[shape=record, label="  %41 = sub i32 %40, %26"];
	Node0x222f410[shape=record, label="  %42 = add i32 %41, %29"];
	Node0x222f480[shape=record, label="  %43 = icmp eq i32 %10, %42"];
	Node0x21ce268[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x222f920[shape=record, label="  %45 = tail call i32 @puts(i8* nonnull dereferenceable(1) %44)"];
	Node0x222f970[shape=record, label="  ret void"];
	Node0x222e0e0 -> Node0x222e150;
	Node0x222e150 -> Node0x222e1c0;
	Node0x222e1c0 -> Node0x222e260;
	Node0x222e260 -> Node0x222e2d0;
	Node0x222e2d0 -> Node0x222e340;
	Node0x222e340 -> Node0x222e3b0;
	Node0x222e3b0 -> Node0x222e420;
	Node0x222e420 -> Node0x222e490;
	Node0x222e490 -> Node0x222e500;
	Node0x222e500 -> Node0x222e570;
	Node0x222e570 -> Node0x222e610;
	Node0x222e610 -> Node0x222e680;
	Node0x222e680 -> Node0x222e6f0;
	Node0x222e6f0 -> Node0x222e760;
	Node0x222e760 -> Node0x222e7d0;
	Node0x222e7d0 -> Node0x222e840;
	Node0x222e840 -> Node0x222e8e0;
	Node0x222e8e0 -> Node0x222e950;
	Node0x222e950 -> Node0x222e9c0;
	Node0x222e9c0 -> Node0x222ea60;
	Node0x222ea60 -> Node0x222ead0;
	Node0x222ead0 -> Node0x222eb40;
	Node0x222eb40 -> Node0x222ebb0;
	Node0x222ebb0 -> Node0x222ec20;
	Node0x222ec20 -> Node0x222ecc0;
	Node0x222ecc0 -> Node0x222ed30;
	Node0x222ed30 -> Node0x222eda0;
	Node0x222eda0 -> Node0x222f020;
	Node0x222f020 -> Node0x222f090;
	Node0x222f090 -> Node0x222f100;
	Node0x222f100 -> Node0x222f170;
	Node0x222f170 -> Node0x222f1e0;
	Node0x222f1e0 -> Node0x222f250;
	Node0x222f250 -> Node0x222f2c0;
	Node0x222f2c0 -> Node0x222f330;
	Node0x222f330 -> Node0x222f3a0;
	Node0x222f3a0 -> Node0x222f410;
	Node0x222f410 -> Node0x222f480;
	Node0x222f480 -> Node0x21ce268;
	Node0x21ce268 -> Node0x222f920;
	Node0x222f920 -> Node0x222f970;
edge [color=red]
	Node0x222e0e0 -> Node0x222e150;
	Node0x222e150 -> Node0x222e260;
	Node0x222e260 -> Node0x222e2d0;
	Node0x222e2d0 -> Node0x222e340;
	Node0x222e1c0 -> Node0x222e340;
	Node0x222e420 -> Node0x222e490;
	Node0x222e500 -> Node0x222e570;
	Node0x222e570 -> Node0x222e610;
	Node0x222e680 -> Node0x222e7d0;
	Node0x222e7d0 -> Node0x222e840;
	Node0x222e840 -> Node0x222e8e0;
	Node0x222e680 -> Node0x222e950;
	Node0x222e950 -> Node0x222e9c0;
	Node0x222e9c0 -> Node0x222ea60;
	Node0x222e760 -> Node0x222ead0;
	Node0x222e7d0 -> Node0x222eb40;
	Node0x222e420 -> Node0x222eb40;
	Node0x222eb40 -> Node0x222ebb0;
	Node0x222e6f0 -> Node0x222ebb0;
	Node0x222ebb0 -> Node0x222ec20;
	Node0x222ecc0 -> Node0x222ed30;
	Node0x222ed30 -> Node0x222eda0;
	Node0x222eda0 -> Node0x222f020;
	Node0x222e3b0 -> Node0x222f020;
	Node0x222f020 -> Node0x222f090;
	Node0x222e490 -> Node0x222f090;
	Node0x222f090 -> Node0x222f100;
	Node0x222f100 -> Node0x222f170;
	Node0x222e760 -> Node0x222f170;
	Node0x222f170 -> Node0x222f1e0;
	Node0x222e950 -> Node0x222f1e0;
	Node0x222f1e0 -> Node0x222f250;
	Node0x222e610 -> Node0x222f250;
	Node0x222f250 -> Node0x222f2c0;
	Node0x222e8e0 -> Node0x222f2c0;
	Node0x222f2c0 -> Node0x222f330;
	Node0x222ea60 -> Node0x222f330;
	Node0x222f330 -> Node0x222f3a0;
	Node0x222ead0 -> Node0x222f3a0;
	Node0x222f3a0 -> Node0x222f410;
	Node0x222ec20 -> Node0x222f410;
	Node0x222e340 -> Node0x222f480;
	Node0x222f410 -> Node0x222f480;
	Node0x222f480 -> Node0x21ce268;
	Node0x21ce268 -> Node0x222f920;
}
