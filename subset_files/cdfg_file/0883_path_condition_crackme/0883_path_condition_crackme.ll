; ModuleID = '../.././c_source_file/0883_path_condition_crackme.c'
source_filename = "../.././c_source_file/0883_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %1, -1
  %5 = or i32 %4, %0
  %6 = xor i32 %5, %2
  %7 = mul i32 %6, -5
  %8 = xor i32 %2, -1
  %9 = or i32 %8, %1
  %10 = xor i32 %9, %0
  %11 = xor i32 %5, -1
  %12 = or i32 %11, %2
  %13 = and i32 %4, %2
  %14 = and i32 %13, %0
  %15 = xor i32 %2, %1
  %16 = xor i32 %15, %0
  %17 = xor i32 %16, -1
  %18 = xor i32 %14, %17
  %19 = and i32 %2, %1
  %20 = xor i32 %19, %0
  %21 = and i32 %8, %0
  %22 = xor i32 %9, -1
  %23 = or i32 %21, %22
  %24 = and i32 %2, %0
  %25 = xor i32 %24, -1
  %26 = and i32 %25, %4
  %27 = or i32 %2, %1
  %28 = xor i32 %27, -1
  %29 = add i32 %27, 1
  %30 = or i32 %14, %16
  %31 = and i32 %19, %0
  %32 = xor i32 %27, %0
  %33 = xor i32 %31, -1
  %34 = xor i32 %32, %33
  %35 = xor i32 %1, %0
  %36 = and i32 %35, %8
  %37 = and i32 %8, %1
  %38 = or i32 %8, %0
  %39 = xor i32 %38, -1
  %40 = or i32 %39, %4
  %41 = or i32 %15, %0
  %42 = xor i32 %2, %0
  %43 = or i32 %42, %35
  %44 = xor i32 %0, -1
  %45 = and i32 %27, %44
  %46 = xor i32 %45, 2147483647
  %47 = xor i32 %46, %31
  %48 = and i32 %1, %0
  %49 = xor i32 %42, -1
  %50 = or i32 %48, %49
  %51 = or i32 %2, %0
  %52 = xor i32 %22, %0
  %53 = and i32 %38, %1
  %54 = shl i32 %53, 1
  %55 = xor i32 %37, -1
  %56 = xor i32 %55, %0
  %57 = xor i32 %48, -1
  %58 = and i32 %57, %2
  %59 = and i32 %8, %57
  %60 = or i32 %48, %8
  %61 = xor i32 %19, -1
  %62 = or i32 %61, %44
  %63 = xor i32 %31, %16
  %64 = xor i32 %15, -1
  %65 = xor i32 %64, %0
  %66 = or i32 %1, %0
  %67 = xor i32 %66, -1
  %68 = or i32 %67, %2
  %69 = and i32 %64, %0
  %70 = or i32 %42, %48
  %71 = or i32 %4, %2
  %72 = and i32 %71, %44
  %73 = or i32 %14, %72
  %74 = xor i32 %24, %5
  %75 = and i32 %64, %57
  %76 = or i32 %64, %44
  %77 = or i32 %15, %67
  %78 = add i32 %42, 1
  %79 = xor i32 %37, %0
  %80 = shl i32 %79, 1
  %81 = and i32 %51, %35
  %82 = and i32 %35, %2
  %83 = shl i32 %82, 1
  %84 = and i32 %61, %0
  %85 = or i32 %27, %44
  %86 = shl i32 %85, 1
  %87 = or i32 %42, %11
  %88 = shl i32 %87, 2
  %89 = and i32 %55, %0
  %90 = and i32 %13, %44
  %91 = and i32 %71, %0
  %92 = xor i32 %91, -1
  %93 = xor i32 %90, %92
  %94 = xor i32 %21, -1
  %95 = add i32 %9, 1
  %96 = and i32 %19, %44
  %97 = and i32 %27, %0
  %98 = or i32 %96, %97
  %99 = xor i32 %35, -1
  %100 = or i32 %99, %2
  %101 = or i32 %24, %11
  %102 = xor i32 %21, %61
  %103 = and i32 %66, %64
  %104 = and i32 %66, %2
  %105 = and i32 %49, %57
  %106 = xor i32 %51, %1
  %107 = shl i32 %21, 1
  %108 = xor i32 %51, -1
  %109 = xor i32 %108, %1
  %110 = xor i32 %57, %2
  %111 = shl i32 %110, 1
  %112 = xor i32 %21, %1
  %113 = and i32 %4, %0
  %114 = xor i32 %113, -1
  %115 = and i32 %42, %114
  %116 = and i32 %114, %2
  %117 = and i32 %42, %66
  %118 = xor i32 %27, %48
  %119 = shl i32 %118, 1
  %120 = and i32 %15, %57
  %121 = shl i32 %120, 1
  %122 = xor i32 %48, %2
  %123 = or i32 %49, %1
  %124 = or i32 %55, %0
  %125 = or i32 %64, %0
  %126 = and i32 %15, %44
  %127 = xor i32 %126, %33
  %128 = or i32 %28, %44
  %129 = or i32 %49, %11
  %130 = shl i32 %129, 1
  %131 = and i32 %94, %1
  %132 = shl i32 %114, 1
  %133 = or i32 %48, %39
  %134 = shl i32 %133, 2
  %135 = or i32 %113, %8
  %136 = xor i32 %71, %0
  %137 = or i32 %14, %136
  %138 = xor i32 %24, %55
  %139 = or i32 %24, %1
  %140 = and i32 %38, %99
  %141 = or i32 %35, %8
  %142 = shl i32 %141, 1
  %143 = and i32 %5, %49
  %144 = or i32 %49, %99
  %145 = or i32 %8, %99
  %146 = shl i32 %145, 1
  %147 = or i32 %24, %67
  %148 = and i32 %5, %8
  %149 = or i32 %39, %1
  %150 = or i32 %24, %28
  %151 = and i32 %15, %66
  %152 = or i32 %21, %4
  %153 = or i32 %19, %0
  %154 = or i32 %22, %44
  %155 = or i32 %113, %64
  %156 = and i32 %15, %114
  %157 = xor i32 %28, %0
  %158 = xor i32 %51, %48
  %159 = or i32 %21, %99
  %160 = add i32 %38, 1
  %161 = or i32 %108, %99
  %162 = or i32 %15, %44
  %163 = xor i32 %90, %162
  %164 = and i32 %38, %4
  %165 = and i32 %25, %1
  %166 = xor i32 %24, %27
  %167 = shl i32 %166, 1
  %168 = and i32 %64, %114
  %169 = xor i32 %113, %2
  %170 = or i32 %113, %49
  %171 = xor i32 %9, %48
  %172 = xor i32 %25, %1
  %173 = or i32 %31, %17
  %174 = shl i32 %173, 1
  %175 = and i32 %42, %4
  %176 = and i32 %8, %114
  %177 = or i32 %31, %126
  %178 = xor i32 %38, %1
  %179 = and i32 %51, %99
  %180 = and i32 %5, %64
  %181 = shl i32 %180, 1
  %182 = or i32 %48, %108
  %183 = or i32 %8, %67
  %184 = shl i32 %183, 1
  %185 = and i32 %42, %57
  %186 = or i32 %15, %48
  %187 = shl i32 %186, 1
  %188 = and i32 %42, %35
  %189 = and i32 %25, %99
  %190 = or i32 %35, %108
  %191 = and i32 %35, %49
  %192 = xor i32 %39, %1
  %193 = or i32 %22, %0
  %194 = and i32 %94, %99
  %195 = or i32 %9, %0
  %196 = shl i32 %16, 1
  %197 = and i32 %15, %0
  %198 = or i32 %96, %197
  %199 = or i32 %37, %44
  %200 = or i32 %90, %91
  %201 = xor i32 %38, %48
  %202 = xor i32 %114, %2
  %203 = and i32 %94, %4
  %204 = or i32 %21, %35
  %205 = and i32 %35, %94
  %206 = or i32 %42, %4
  %207 = shl i32 %206, 1
  %208 = xor i32 %66, %2
  %209 = xor i32 %11, %2
  %210 = or i32 %48, %22
  %211 = and i32 %35, %25
  %212 = or i32 %49, %67
  %213 = shl i32 %212, 1
  %214 = and i32 %55, %44
  %215 = or i32 %108, %4
  %216 = and i32 %61, %44
  %217 = and i32 %49, %1
  %218 = add i32 %37, 1
  %219 = or i32 %35, %2
  %220 = or i32 %48, %2
  %221 = or i32 %35, %39
  %222 = and i32 %9, %0
  %223 = and i32 %8, %99
  %224 = and i32 %49, %99
  %225 = and i32 %66, %8
  %226 = xor i32 %94, %1
  %227 = or i32 %24, %35
  %228 = and i32 %99, %2
  %229 = or i32 %64, %11
  %230 = and i32 %15, %5
  %231 = xor i32 %24, %1
  %232 = or i32 %48, %64
  %233 = and i32 %49, %4
  %234 = or i32 %113, %2
  %235 = shl i32 %234, 2
  %236 = or i32 %37, %0
  %237 = or i32 %19, %113
  %238 = or i32 %42, %1
  %239 = shl i32 %45, 1
  %240 = xor i32 %41, -1
  %241 = or i32 %14, %240
  %242 = or i32 %24, %99
  %243 = xor i32 %14, %41
  %244 = or i32 %49, %4
  %245 = shl i32 %244, 1
  %246 = or i32 %24, %37
  %247 = or i32 %21, %19
  %248 = and i32 %51, %4
  %249 = or i32 %31, %45
  %250 = and i32 %64, %44
  %251 = and i32 %66, %49
  %252 = xor i32 %72, 2147483647
  %253 = xor i32 %252, %14
  %254 = shl i32 %253, 1
  %255 = and i32 %49, %114
  %256 = or i32 %21, %1
  %257 = xor i32 %24, %66
  %258 = and i32 %42, %99
  %259 = or i32 %24, %4
  %260 = or i32 %9, %44
  %261 = shl i32 %260, 1
  %262 = or i32 %42, %67
  %263 = or i32 %28, %0
  %264 = or i32 %15, %11
  %265 = or i32 %64, %67
  %266 = xor i32 %113, %61
  %267 = or i32 %108, %1
  %268 = xor i32 %136, -1
  %269 = xor i32 %14, %268
  %270 = or i32 %55, %44
  %271 = or i32 %48, %28
  %272 = shl i32 %271, 2
  %273 = add i32 %2, 1
  %274 = xor i32 %162, 2147483647
  %275 = or i32 %274, %90
  %276 = and i32 %38, %35
  %277 = xor i32 %67, %2
  %278 = or i32 %42, %113
  %279 = and i32 %42, %5
  %280 = xor i32 %21, %9
  %281 = or i32 %61, %0
  %282 = xor i32 %97, -1
  %283 = xor i32 %96, %282
  %284 = or i32 %8, %11
  %285 = and i32 %28, %44
  %286 = mul i32 %285, 7
  %287 = and i32 %37, %44
  %288 = and i32 %28, %0
  %289 = mul i32 %288, 11
  %290 = and i32 %37, %0
  %291 = mul i32 %290, 25
  %292 = and i32 %22, %44
  %293 = mul i32 %292, 31
  %294 = mul i32 %96, 9
  %295 = and i32 %22, %0
  %296 = mul i32 %295, 13
  %297 = add i32 %48, %44
  %298 = add i32 %297, %277
  %299 = add i32 %298, %226
  %300 = add i32 %299, %214
  %301 = add i32 %300, %210
  %302 = add i32 %301, %150
  %303 = add i32 %302, %128
  %304 = add i32 %303, %89
  %305 = add i32 %304, %81
  %306 = add i32 %305, %69
  %307 = add i32 %306, %23
  %308 = add i32 %307, %249
  %309 = add i32 %308, %47
  %310 = add i32 %309, %275
  %311 = shl i32 %310, 1
  %312 = sub i32 %42, %270
  %313 = sub i32 %312, %247
  %314 = add i32 %313, %236
  %315 = add i32 %314, %188
  %316 = sub i32 %315, %243
  %317 = mul i32 %316, 5
  %318 = sub i32 %104, %0
  %319 = add i32 %318, %101
  %320 = sub i32 %319, %159
  %321 = mul i32 %320, 3
  %322 = or i32 %31, %287
  %323 = mul i32 %322, 24
  %324 = sub i32 1073741822, %15
  %325 = add i32 %324, %229
  %326 = shl i32 %325, 2
  %327 = add i32 %273, %66
  %328 = add i32 %327, %113
  %329 = add i32 %328, %57
  %330 = add i32 %329, %273
  %331 = add i32 %330, %12
  %332 = add i32 %331, %29
  %333 = add i32 %332, %36
  %334 = add i32 %333, %37
  %335 = sub i32 %334, %51
  %336 = sub i32 %335, %58
  %337 = sub i32 %336, %59
  %338 = add i32 %337, %60
  %339 = add i32 %338, %68
  %340 = sub i32 %339, %27
  %341 = add i32 %340, %78
  %342 = add i32 %341, %94
  %343 = add i32 %342, %95
  %344 = sub i32 %343, %100
  %345 = sub i32 %344, %116
  %346 = sub i32 %345, %122
  %347 = add i32 %346, %61
  %348 = sub i32 %347, %132
  %349 = add i32 %348, %135
  %350 = sub i32 %349, %148
  %351 = add i32 %350, %160
  %352 = sub i32 %351, %169
  %353 = add i32 %352, %176
  %354 = sub i32 %353, %202
  %355 = add i32 %354, %108
  %356 = add i32 %355, %208
  %357 = add i32 %356, %209
  %358 = add i32 %357, %218
  %359 = add i32 %358, %219
  %360 = add i32 %359, %220
  %361 = add i32 %360, %223
  %362 = add i32 %361, %225
  %363 = add i32 %362, %228
  %364 = add i32 %363, %38
  %365 = add i32 %364, %9
  %366 = sub i32 %365, %15
  %367 = sub i32 %366, %19
  %368 = sub i32 %367, %284
  %369 = add i32 %368, %10
  %370 = sub i32 %369, %20
  %371 = sub i32 %370, %26
  %372 = sub i32 %371, %40
  %373 = sub i32 %372, %41
  %374 = add i32 %373, %43
  %375 = add i32 %374, %50
  %376 = sub i32 %375, %52
  %377 = sub i32 %376, %56
  %378 = add i32 %377, %62
  %379 = sub i32 %378, %32
  %380 = sub i32 %379, %65
  %381 = add i32 %380, %70
  %382 = add i32 %381, %74
  %383 = sub i32 %382, %75
  %384 = sub i32 %383, %76
  %385 = add i32 %384, %77
  %386 = sub i32 %385, %83
  %387 = sub i32 %386, %84
  %388 = add i32 %387, %102
  %389 = sub i32 %388, %103
  %390 = sub i32 %389, %105
  %391 = add i32 %390, %106
  %392 = sub i32 %391, %107
  %393 = add i32 %392, %109
  %394 = sub i32 %393, %111
  %395 = add i32 %394, %112
  %396 = add i32 %395, %115
  %397 = sub i32 %396, %117
  %398 = sub i32 %397, %123
  %399 = sub i32 %398, %124
  %400 = add i32 %399, %125
  %401 = add i32 %400, %131
  %402 = add i32 %401, %138
  %403 = sub i32 %402, %139
  %404 = add i32 %403, %140
  %405 = sub i32 %404, %142
  %406 = add i32 %405, %143
  %407 = sub i32 %406, %144
  %408 = sub i32 %407, %146
  %409 = sub i32 %408, %147
  %410 = add i32 %409, %149
  %411 = add i32 %410, %151
  %412 = add i32 %411, %152
  %413 = sub i32 %412, %153
  %414 = add i32 %413, %154
  %415 = add i32 %414, %155
  %416 = add i32 %415, %156
  %417 = sub i32 %416, %157
  %418 = sub i32 %417, %158
  %419 = sub i32 %418, %161
  %420 = add i32 %419, %164
  %421 = sub i32 %420, %165
  %422 = sub i32 %421, %168
  %423 = sub i32 %422, %170
  %424 = sub i32 %423, %171
  %425 = add i32 %424, %172
  %426 = sub i32 %425, %175
  %427 = sub i32 %426, %178
  %428 = sub i32 %427, %179
  %429 = add i32 %428, %182
  %430 = sub i32 %429, %184
  %431 = add i32 %430, %185
  %432 = sub i32 %431, %97
  %433 = add i32 %432, %189
  %434 = sub i32 %433, %190
  %435 = sub i32 %434, %191
  %436 = sub i32 %435, %192
  %437 = sub i32 %436, %193
  %438 = add i32 %437, %194
  %439 = sub i32 %438, %195
  %440 = sub i32 %439, %199
  %441 = sub i32 %440, %201
  %442 = add i32 %441, %203
  %443 = sub i32 %442, %126
  %444 = sub i32 %443, %204
  %445 = sub i32 %444, %205
  %446 = sub i32 %445, %211
  %447 = sub i32 %446, %215
  %448 = add i32 %447, %216
  %449 = sub i32 %448, %217
  %450 = add i32 %449, %221
  %451 = add i32 %450, %222
  %452 = add i32 %451, %224
  %453 = add i32 %452, %227
  %454 = sub i32 %453, %230
  %455 = add i32 %454, %231
  %456 = add i32 %455, %232
  %457 = sub i32 %456, %233
  %458 = sub i32 %457, %235
  %459 = add i32 %458, %237
  %460 = add i32 %459, %238
  %461 = sub i32 %460, %242
  %462 = add i32 %461, %246
  %463 = sub i32 %462, %248
  %464 = add i32 %463, %250
  %465 = add i32 %464, %251
  %466 = sub i32 %465, %255
  %467 = add i32 %466, %256
  %468 = add i32 %467, %257
  %469 = add i32 %468, %258
  %470 = sub i32 %469, %259
  %471 = sub i32 %470, %262
  %472 = sub i32 %471, %263
  %473 = sub i32 %472, %264
  %474 = add i32 %473, %265
  %475 = add i32 %474, %266
  %476 = sub i32 %475, %267
  %477 = add i32 %476, %197
  %478 = sub i32 %477, %162
  %479 = sub i32 %478, %276
  %480 = sub i32 %479, %278
  %481 = add i32 %480, %279
  %482 = sub i32 %481, %280
  %483 = add i32 %482, %281
  %484 = sub i32 %483, %18
  %485 = add i32 %484, %30
  %486 = add i32 %485, %34
  %487 = sub i32 %486, %54
  %488 = sub i32 %487, %63
  %489 = sub i32 %488, %73
  %490 = sub i32 %489, %80
  %491 = sub i32 %490, %86
  %492 = sub i32 %491, %88
  %493 = sub i32 %492, %93
  %494 = sub i32 %493, %98
  %495 = sub i32 %494, %119
  %496 = sub i32 %495, %121
  %497 = add i32 %496, %127
  %498 = sub i32 %497, %130
  %499 = sub i32 %498, %134
  %500 = add i32 %499, %137
  %501 = add i32 %500, %163
  %502 = sub i32 %501, %167
  %503 = sub i32 %502, %177
  %504 = sub i32 %503, %181
  %505 = sub i32 %504, %187
  %506 = sub i32 %505, %196
  %507 = sub i32 %506, %198
  %508 = sub i32 %507, %200
  %509 = sub i32 %508, %207
  %510 = sub i32 %509, %213
  %511 = sub i32 %510, %239
  %512 = add i32 %511, %241
  %513 = sub i32 %512, %245
  %514 = sub i32 %513, %261
  %515 = add i32 %514, %269
  %516 = sub i32 %515, %272
  %517 = add i32 %516, %283
  %518 = add i32 %517, %286
  %519 = add i32 %518, %289
  %520 = add i32 %519, %291
  %521 = add i32 %520, %293
  %522 = add i32 %521, %294
  %523 = add i32 %522, %296
  %524 = sub i32 %523, %174
  %525 = add i32 %524, %323
  %526 = sub i32 %525, %254
  %527 = add i32 %526, %326
  %528 = add i32 %527, %321
  %529 = add i32 %528, %317
  %530 = add i32 %529, %311
  %531 = icmp eq i32 %7, %530
  %532 = select i1 %531, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %533 = tail call i32 @puts(i8* nonnull dereferenceable(1) %532)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
