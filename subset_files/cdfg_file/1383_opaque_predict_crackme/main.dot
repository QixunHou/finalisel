digraph "DFG for'main' function" {
	Node0x10e5b78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x10e5bf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x10e5c88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x10e60e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x10e61c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x10e62e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10e6520[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x10e65d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10e7548[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10e7bd0[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x10e7c40[shape=record, label="  %9 = xor i32 %7, %8"];
	Node0x10e7cb0[shape=record, label="  %10 = mul i32 %9, 3"];
	Node0x10e7d20[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x10e7d90[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x10e7e00[shape=record, label="  %13 = or i32 %7, %8"];
	Node0x10e7e70[shape=record, label="  %14 = or i32 %6, %12"];
	Node0x10e7ee0[shape=record, label="  %15 = shl i32 %11, 3"];
	Node0x10e7f50[shape=record, label="  %16 = xor i32 %15, -8"];
	Node0x10e7fc0[shape=record, label="  %17 = and i32 %7, %6"];
	Node0x10e8030[shape=record, label="  %18 = shl i32 %17, 2"];
	Node0x10e80a0[shape=record, label="  %19 = sub i32 %6, %14"];
	Node0x10e8110[shape=record, label="  %20 = mul i32 %19, 5"];
	Node0x10e8180[shape=record, label="  %21 = shl i32 %7, 1"];
	Node0x10e81f0[shape=record, label="  %22 = sub i32 %13, %21"];
	Node0x10e8260[shape=record, label="  %23 = add i32 %22, %11"];
	Node0x10e82d0[shape=record, label="  %24 = sub i32 %23, %14"];
	Node0x10e8340[shape=record, label="  %25 = add i32 %24, %18"];
	Node0x10e83b0[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x10e8420[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x10e8490[shape=record, label="  %28 = icmp eq i32 %10, %27"];
	Node0x10869d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x10e8520[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x10e8778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10e88d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x10e8998[shape=record, label="  ret i32 0"];
	Node0x10e5b78 -> Node0x10e5bf8;
	Node0x10e5bf8 -> Node0x10e5c88;
	Node0x10e5c88 -> Node0x10e60e8;
	Node0x10e60e8 -> Node0x10e61c8;
	Node0x10e61c8 -> Node0x10e62e8;
	Node0x10e62e8 -> Node0x10e6520;
	Node0x10e6520 -> Node0x10e65d8;
	Node0x10e65d8 -> Node0x10e7548;
	Node0x10e7548 -> Node0x10e7bd0;
	Node0x10e7bd0 -> Node0x10e7c40;
	Node0x10e7c40 -> Node0x10e7cb0;
	Node0x10e7cb0 -> Node0x10e7d20;
	Node0x10e7d20 -> Node0x10e7d90;
	Node0x10e7d90 -> Node0x10e7e00;
	Node0x10e7e00 -> Node0x10e7e70;
	Node0x10e7e70 -> Node0x10e7ee0;
	Node0x10e7ee0 -> Node0x10e7f50;
	Node0x10e7f50 -> Node0x10e7fc0;
	Node0x10e7fc0 -> Node0x10e8030;
	Node0x10e8030 -> Node0x10e80a0;
	Node0x10e80a0 -> Node0x10e8110;
	Node0x10e8110 -> Node0x10e8180;
	Node0x10e8180 -> Node0x10e81f0;
	Node0x10e81f0 -> Node0x10e8260;
	Node0x10e8260 -> Node0x10e82d0;
	Node0x10e82d0 -> Node0x10e8340;
	Node0x10e8340 -> Node0x10e83b0;
	Node0x10e83b0 -> Node0x10e8420;
	Node0x10e8420 -> Node0x10e8490;
	Node0x10e8490 -> Node0x10869d8;
	Node0x10869d8 -> Node0x10e8520;
	Node0x10e8520 -> Node0x10e8778;
	Node0x10e8778 -> Node0x10e88d8;
	Node0x10e88d8 -> Node0x10e8998;
edge [color=red]
	Node0x10e5b78 -> Node0x10e5c88;
	Node0x10e5c88 -> Node0x10e60e8;
	Node0x10e5bf8 -> Node0x10e61c8;
	Node0x10e61c8 -> Node0x10e62e8;
	Node0x10e5b78 -> Node0x10e6520;
	Node0x10e5bf8 -> Node0x10e6520;
	Node0x10e5b78 -> Node0x10e65d8;
	Node0x10e5bf8 -> Node0x10e7548;
	Node0x10e65d8 -> Node0x10e7bd0;
	Node0x10e7548 -> Node0x10e7c40;
	Node0x10e7bd0 -> Node0x10e7c40;
	Node0x10e7c40 -> Node0x10e7cb0;
	Node0x10e7548 -> Node0x10e7d20;
	Node0x10e65d8 -> Node0x10e7d20;
	Node0x10e7548 -> Node0x10e7d90;
	Node0x10e7548 -> Node0x10e7e00;
	Node0x10e7bd0 -> Node0x10e7e00;
	Node0x10e65d8 -> Node0x10e7e70;
	Node0x10e7d90 -> Node0x10e7e70;
	Node0x10e7d20 -> Node0x10e7ee0;
	Node0x10e7ee0 -> Node0x10e7f50;
	Node0x10e7548 -> Node0x10e7fc0;
	Node0x10e65d8 -> Node0x10e7fc0;
	Node0x10e7fc0 -> Node0x10e8030;
	Node0x10e65d8 -> Node0x10e80a0;
	Node0x10e7e70 -> Node0x10e80a0;
	Node0x10e80a0 -> Node0x10e8110;
	Node0x10e7548 -> Node0x10e8180;
	Node0x10e7e00 -> Node0x10e81f0;
	Node0x10e8180 -> Node0x10e81f0;
	Node0x10e81f0 -> Node0x10e8260;
	Node0x10e7d20 -> Node0x10e8260;
	Node0x10e8260 -> Node0x10e82d0;
	Node0x10e7e70 -> Node0x10e82d0;
	Node0x10e82d0 -> Node0x10e8340;
	Node0x10e8030 -> Node0x10e8340;
	Node0x10e8340 -> Node0x10e83b0;
	Node0x10e7f50 -> Node0x10e83b0;
	Node0x10e83b0 -> Node0x10e8420;
	Node0x10e8110 -> Node0x10e8420;
	Node0x10e7cb0 -> Node0x10e8490;
	Node0x10e8420 -> Node0x10e8490;
	Node0x10e8490 -> Node0x10869d8;
	Node0x10869d8 -> Node0x10e8520;
	Node0x10e61c8 -> Node0x10e8778;
	Node0x10e5c88 -> Node0x10e88d8;
}
