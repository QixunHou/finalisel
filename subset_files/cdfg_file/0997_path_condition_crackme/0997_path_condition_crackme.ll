; ModuleID = '../.././c_source_file/0997_path_condition_crackme.c'
source_filename = "../.././c_source_file/0997_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = shl i32 %0, 1
  %8 = xor i32 %3, -1
  %9 = sub i32 %7, %8
  %10 = xor i32 %1, -1
  %11 = and i32 %10, %0
  %12 = xor i32 %2, -1
  %13 = and i32 %12, %1
  %14 = or i32 %13, %11
  %15 = and i32 %1, %0
  %16 = or i32 %2, %1
  %17 = xor i32 %16, %15
  %18 = xor i32 %13, %0
  %19 = and i32 %2, %1
  %20 = and i32 %19, %0
  %21 = xor i32 %0, -1
  %22 = xor i32 %16, %21
  %23 = xor i32 %22, %20
  %24 = or i32 %12, %0
  %25 = xor i32 %1, %0
  %26 = and i32 %24, %25
  %27 = or i32 %2, %0
  %28 = xor i32 %27, -1
  %29 = or i32 %28, %1
  %30 = and i32 %16, %21
  %31 = xor i32 %11, -1
  %32 = xor i32 %2, %1
  %33 = and i32 %32, %31
  %34 = or i32 %11, %2
  %35 = and i32 %2, %0
  %36 = or i32 %35, %25
  %37 = or i32 %1, %0
  %38 = and i32 %37, %2
  %39 = shl i32 %38, 1
  %40 = xor i32 %24, -1
  %41 = or i32 %40, %1
  %42 = and i32 %12, %0
  %43 = or i32 %42, %1
  %44 = xor i32 %19, -1
  %45 = or i32 %44, %0
  %46 = or i32 %15, %2
  %47 = or i32 %12, %1
  %48 = xor i32 %47, -1
  %49 = or i32 %42, %48
  %50 = xor i32 %35, -1
  %51 = or i32 %32, %0
  %52 = xor i32 %2, %0
  %53 = xor i32 %52, -1
  %54 = or i32 %25, %53
  %55 = xor i32 %25, -1
  %56 = or i32 %42, %55
  %57 = xor i32 %13, -1
  %58 = and i32 %57, %0
  %59 = xor i32 %16, -1
  %60 = or i32 %59, %0
  %61 = or i32 %19, %0
  %62 = and i32 %53, %1
  %63 = or i32 %15, %12
  %64 = and i32 %10, %2
  %65 = and i32 %64, %0
  %66 = xor i32 %32, %0
  %67 = or i32 %65, %66
  %68 = or i32 %10, %0
  %69 = and i32 %68, %2
  %70 = shl i32 %69, 1
  %71 = xor i32 %37, -1
  %72 = xor i32 %32, -1
  %73 = or i32 %72, %71
  %74 = and i32 %19, %21
  %75 = and i32 %16, %0
  %76 = or i32 %74, %75
  %77 = xor i32 %35, %68
  %78 = add i32 %19, 1
  %79 = xor i32 %24, %1
  %80 = xor i32 %42, %47
  %81 = or i32 %55, %2
  %82 = xor i32 %47, %15
  %83 = or i32 %10, %2
  %84 = xor i32 %83, %21
  %85 = xor i32 %84, %65
  %86 = xor i32 %68, -1
  %87 = or i32 %86, %2
  %88 = xor i32 %42, -1
  %89 = and i32 %88, %10
  %90 = or i32 %35, %1
  %91 = or i32 %35, %13
  %92 = or i32 %40, %55
  %93 = xor i32 %68, %2
  %94 = or i32 %28, %55
  %95 = xor i32 %11, %57
  %96 = or i32 %71, %2
  %97 = and i32 %44, %21
  %98 = and i32 %25, %12
  %99 = or i32 %72, %86
  %100 = and i32 %88, %55
  %101 = or i32 %15, %72
  %102 = and i32 %52, %37
  %103 = or i32 %52, %1
  %104 = xor i32 %27, %15
  %105 = xor i32 %57, %0
  %106 = and i32 %68, %72
  %107 = xor i32 %19, %0
  %108 = shl i32 %107, 1
  %109 = xor i32 %31, %2
  %110 = xor i32 %48, %0
  %111 = and i32 %64, %21
  %112 = and i32 %83, %0
  %113 = xor i32 %112, -1
  %114 = xor i32 %111, %113
  %115 = or i32 %72, %0
  %116 = and i32 %32, %0
  %117 = and i32 %57, %21
  %118 = or i32 %25, %12
  %119 = and i32 %83, %21
  %120 = xor i32 %119, 1073741823
  %121 = xor i32 %120, %65
  %122 = shl i32 %121, 2
  %123 = xor i32 %20, -1
  %124 = xor i32 %30, %123
  %125 = and i32 %24, %55
  %126 = and i32 %37, %53
  %127 = shl i32 %126, 1
  %128 = and i32 %32, %68
  %129 = or i32 %16, %21
  %130 = add i32 %47, 1
  %131 = or i32 %35, %55
  %132 = or i32 %32, %21
  %133 = or i32 %25, %40
  %134 = and i32 %72, %21
  %135 = and i32 %24, %10
  %136 = or i32 %25, %28
  %137 = and i32 %52, %31
  %138 = xor i32 %15, %2
  %139 = xor i32 %27, %1
  %140 = xor i32 %50, %1
  %141 = and i32 %50, %1
  %142 = and i32 %53, %55
  %143 = and i32 %47, %0
  %144 = or i32 %32, %11
  %145 = and i32 %52, %25
  %146 = shl i32 %145, 1
  %147 = or i32 %53, %86
  %148 = or i32 %42, %19
  %149 = or i32 %15, %28
  %150 = or i32 %15, %48
  %151 = and i32 %27, %1
  %152 = shl i32 %151, 1
  %153 = and i32 %52, %55
  %154 = or i32 %19, %11
  %155 = shl i32 %154, 1
  %156 = or i32 %52, %25
  %157 = shl i32 %156, 1
  %158 = xor i32 %15, -1
  %159 = and i32 %72, %158
  %160 = xor i32 %88, %1
  %161 = and i32 %32, %21
  %162 = and i32 %53, %31
  %163 = or i32 %32, %71
  %164 = xor i32 %24, %15
  %165 = or i32 %44, %21
  %166 = or i32 %48, %21
  %167 = add i32 %11, 1
  %168 = or i32 %42, %25
  %169 = add i32 %15, 1
  %170 = or i32 %40, %10
  %171 = and i32 %47, %21
  %172 = xor i32 %35, %10
  %173 = and i32 %27, %10
  %174 = xor i32 %158, %2
  %175 = or i32 %13, %0
  %176 = and i32 %32, %37
  %177 = xor i32 %116, -1
  %178 = xor i32 %74, %177
  %179 = or i32 %53, %71
  %180 = shl i32 %179, 1
  %181 = and i32 %53, %158
  %182 = xor i32 %35, %37
  %183 = xor i32 %75, 2147483647
  %184 = xor i32 %183, %74
  %185 = shl i32 %184, 1
  %186 = and i32 %12, %158
  %187 = xor i32 %44, %0
  %188 = or i32 %35, %10
  %189 = or i32 %65, %119
  %190 = and i32 %24, %1
  %191 = and i32 %59, %21
  %192 = mul i32 %191, -15
  %193 = and i32 %13, %21
  %194 = shl i32 %193, 1
  %195 = and i32 %59, %0
  %196 = and i32 %13, %0
  %197 = and i32 %48, %21
  %198 = mul i32 %197, -12
  %199 = mul i32 %74, 7
  %200 = and i32 %48, %0
  %201 = mul i32 %200, -9
  %202 = shl i32 %20, 1
  %203 = xor i32 %5, %4
  %204 = xor i32 %203, -1
  %205 = or i32 %204, %3
  %206 = xor i32 %4, %3
  %207 = xor i32 %206, -1
  %208 = and i32 %203, %207
  %209 = or i32 %5, %4
  %210 = xor i32 %209, %3
  %211 = xor i32 %5, %3
  %212 = and i32 %211, %4
  %213 = shl i32 %212, 1
  %214 = xor i32 %211, -1
  %215 = and i32 %214, %4
  %216 = xor i32 %5, -1
  %217 = and i32 %216, %4
  %218 = xor i32 %217, %3
  %219 = or i32 %216, %4
  %220 = xor i32 %219, -1
  %221 = or i32 %220, %207
  %222 = shl i32 %221, 1
  %223 = or i32 %8, %4
  %224 = xor i32 %223, -1
  %225 = or i32 %224, %5
  %226 = and i32 %4, %3
  %227 = or i32 %216, %3
  %228 = xor i32 %227, -1
  %229 = or i32 %226, %228
  %230 = and i32 %8, %4
  %231 = xor i32 %230, -1
  %232 = and i32 %8, %5
  %233 = and i32 %232, %4
  %234 = xor i32 %4, -1
  %235 = or i32 %8, %5
  %236 = and i32 %235, %234
  %237 = xor i32 %236, 2147483647
  %238 = xor i32 %237, %233
  %239 = shl i32 %238, 1
  %240 = and i32 %5, %3
  %241 = and i32 %240, %234
  %242 = or i32 %5, %3
  %243 = and i32 %242, %4
  %244 = or i32 %241, %243
  %245 = or i32 %204, %224
  %246 = and i32 %216, %3
  %247 = xor i32 %246, -1
  %248 = shl i32 %247, 1
  %249 = and i32 %5, %4
  %250 = or i32 %249, %206
  %251 = or i32 %242, %4
  %252 = shl i32 %223, 1
  %253 = xor i32 %252, -1
  %254 = and i32 %209, %207
  %255 = xor i32 %242, -1
  %256 = xor i32 %255, %4
  %257 = xor i32 %240, -1
  %258 = xor i32 %257, %4
  %259 = xor i32 %230, %257
  %260 = and i32 %203, %8
  %261 = or i32 %203, %224
  %262 = and i32 %240, %4
  %263 = xor i32 %242, %4
  %264 = xor i32 %262, -1
  %265 = xor i32 %263, %264
  %266 = or i32 %246, %230
  %267 = or i32 %203, %3
  %268 = and i32 %204, %3
  %269 = xor i32 %211, %4
  %270 = xor i32 %269, -1
  %271 = or i32 %262, %270
  %272 = or i32 %226, %255
  %273 = and i32 %223, %204
  %274 = and i32 %204, %207
  %275 = or i32 %206, %216
  %276 = xor i32 %226, -1
  %277 = xor i32 %276, %5
  %278 = or i32 %4, %3
  %279 = xor i32 %278, -1
  %280 = or i32 %214, %279
  %281 = or i32 %211, %230
  %282 = shl i32 %281, 1
  %283 = xor i32 %209, -1
  %284 = xor i32 %283, %3
  %285 = and i32 %227, %234
  %286 = shl i32 %216, 1
  %287 = and i32 %232, %234
  %288 = or i32 %211, %234
  %289 = xor i32 %288, 2147483647
  %290 = or i32 %289, %287
  %291 = shl i32 %290, 1
  %292 = or i32 %204, %8
  %293 = xor i32 %231, %5
  %294 = and i32 %214, %276
  %295 = or i32 %228, %4
  %296 = and i32 %203, %206
  %297 = or i32 %203, %226
  %298 = or i32 %226, %204
  %299 = and i32 %219, %8
  %300 = or i32 %203, %207
  %301 = or i32 %233, %269
  %302 = or i32 %220, %8
  %303 = or i32 %220, %3
  %304 = xor i32 %249, -1
  %305 = add i32 %249, 1
  %306 = or i32 %233, %236
  %307 = or i32 %242, %234
  %308 = or i32 %230, %204
  %309 = and i32 %257, %234
  %310 = and i32 %257, %4
  %311 = xor i32 %217, %227
  %312 = and i32 %203, %276
  %313 = xor i32 %212, -1
  %314 = xor i32 %241, %313
  %315 = xor i32 %217, -1
  %316 = and i32 %315, %3
  %317 = xor i32 %249, %242
  %318 = or i32 %257, %4
  %319 = and i32 %223, %214
  %320 = xor i32 %220, %3
  %321 = shl i32 %219, 2
  %322 = or i32 %249, %3
  %323 = shl i32 %322, 1
  %324 = or i32 %262, %263
  %325 = and i32 %204, %231
  %326 = and i32 %304, %8
  %327 = shl i32 %326, 1
  %328 = or i32 %249, %207
  %329 = and i32 %211, %276
  %330 = xor i32 %209, %226
  %331 = or i32 %249, %8
  %332 = xor i32 %235, %4
  %333 = xor i32 %332, -1
  %334 = xor i32 %233, %333
  %335 = and i32 %219, %206
  %336 = shl i32 %335, 1
  %337 = and i32 %219, %207
  %338 = or i32 %227, %234
  %339 = or i32 %247, %234
  %340 = or i32 %233, %332
  %341 = and i32 %227, %4
  %342 = shl i32 %279, 1
  %343 = and i32 %216, %207
  %344 = shl i32 %343, 1
  %345 = or i32 %217, %8
  %346 = shl i32 %345, 2
  %347 = shl i32 %207, 1
  %348 = or i32 %203, %8
  %349 = and i32 %206, %304
  %350 = or i32 %240, %4
  %351 = or i32 %226, %216
  %352 = or i32 %217, %206
  %353 = xor i32 %287, %288
  %354 = add i32 %209, 1
  %355 = and i32 %304, %3
  %356 = xor i32 %278, %5
  %357 = or i32 %211, %226
  %358 = xor i32 %249, %278
  %359 = shl i32 %358, 1
  %360 = and i32 %206, %204
  %361 = or i32 %206, %283
  %362 = and i32 %276, %5
  %363 = shl i32 %362, 1
  %364 = xor i32 %230, %247
  %365 = or i32 %211, %4
  %366 = or i32 %206, %220
  %367 = and i32 %216, %276
  %368 = or i32 %211, %279
  %369 = xor i32 %227, %4
  %370 = shl i32 %369, 1
  %371 = and i32 %216, %231
  %372 = and i32 %278, %5
  %373 = and i32 %242, %234
  %374 = and i32 %206, %315
  %375 = or i32 %230, %216
  %376 = add i32 %217, 1
  %377 = or i32 %217, %3
  %378 = xor i32 %249, %223
  %379 = and i32 %204, %8
  %380 = xor i32 %214, %4
  %381 = and i32 %206, %5
  %382 = or i32 %216, %224
  %383 = or i32 %204, %279
  %384 = shl i32 %383, 1
  %385 = and i32 %214, %234
  %386 = or i32 %262, %373
  %387 = xor i32 %249, %247
  %388 = xor i32 %228, %4
  %389 = or i32 %211, %224
  %390 = or i32 %249, %224
  %391 = shl i32 %390, 1
  %392 = or i32 %204, %207
  %393 = xor i32 %233, %365
  %394 = xor i32 %365, -1
  %395 = or i32 %233, %394
  %396 = or i32 %247, %4
  %397 = shl i32 %396, 1
  %398 = and i32 %209, %3
  %399 = and i32 %203, %278
  %400 = shl i32 %399, 1
  %401 = or i32 %257, %234
  %402 = or i32 %283, %3
  %403 = or i32 %226, %283
  %404 = or i32 %214, %4
  %405 = xor i32 %262, %404
  %406 = or i32 %217, %207
  %407 = or i32 %230, %5
  %408 = xor i32 %219, %3
  %409 = or i32 %206, %204
  %410 = or i32 %279, %5
  %411 = shl i32 %214, 1
  %412 = and i32 %223, %216
  %413 = or i32 %255, %234
  %414 = shl i32 %413, 1
  %415 = xor i32 %243, 2147483647
  %416 = xor i32 %415, %241
  %417 = or i32 %216, %279
  %418 = shl i32 %417, 1
  %419 = or i32 %217, %240
  %420 = and i32 %223, %5
  %421 = and i32 %235, %4
  %422 = xor i32 %421, -1
  %423 = xor i32 %287, %422
  %424 = xor i32 %315, %3
  %425 = and i32 %206, %216
  %426 = and i32 %209, %8
  %427 = and i32 %247, %4
  %428 = or i32 %203, %279
  %429 = or i32 %249, %246
  %430 = or i32 %230, %214
  %431 = xor i32 %224, %5
  %432 = and i32 %219, %3
  %433 = or i32 %226, %214
  %434 = xor i32 %249, %3
  %435 = add i32 %226, 1
  %436 = or i32 %249, %279
  %437 = or i32 %203, %206
  %438 = xor i32 %223, %5
  %439 = and i32 %304, %207
  %440 = or i32 %217, %228
  %441 = and i32 %214, %231
  %442 = or i32 %214, %224
  %443 = and i32 %203, %231
  %444 = or i32 %226, %5
  %445 = and i32 %231, %5
  %446 = or i32 %240, %230
  %447 = xor i32 %304, %3
  %448 = xor i32 %242, %226
  %449 = or i32 %246, %4
  %450 = or i32 %241, %212
  %451 = or i32 %207, %5
  %452 = xor i32 %240, %4
  %453 = shl i32 %452, 1
  %454 = or i32 %255, %4
  %455 = xor i32 %247, %4
  %456 = and i32 %211, %231
  %457 = and i32 %247, %234
  %458 = and i32 %278, %214
  %459 = xor i32 %230, %5
  %460 = xor i32 %279, %5
  %461 = xor i32 %233, %270
  %462 = and i32 %315, %8
  %463 = add i32 %227, 1
  %464 = or i32 %214, %234
  %465 = and i32 %278, %204
  %466 = and i32 %203, %223
  %467 = and i32 %207, %5
  %468 = and i32 %209, %206
  %469 = xor i32 %373, %264
  %470 = and i32 %211, %278
  %471 = xor i32 %226, %5
  %472 = xor i32 %227, %226
  %473 = or i32 %283, %207
  %474 = or i32 %287, %421
  %475 = or i32 %226, %220
  %476 = or i32 %228, %234
  %477 = or i32 %240, %234
  %478 = or i32 %203, %230
  %479 = shl i32 %478, 1
  %480 = xor i32 %246, %4
  %481 = xor i32 %217, %257
  %482 = or i32 %283, %8
  %483 = and i32 %255, %234
  %484 = and i32 %246, %234
  %485 = and i32 %255, %4
  %486 = and i32 %246, %4
  %487 = mul i32 %486, 30
  %488 = and i32 %228, %234
  %489 = mul i32 %488, 19
  %490 = mul i32 %241, 13
  %491 = and i32 %228, %4
  %492 = shl i32 %262, 2
  %493 = add i32 %164, %81
  %494 = add i32 %493, %159
  %495 = add i32 %494, %150
  %496 = add i32 %495, %140
  %497 = add i32 %496, %139
  %498 = add i32 %497, %131
  %499 = add i32 %498, %95
  %500 = add i32 %499, %91
  %501 = add i32 %500, %58
  %502 = add i32 %501, %56
  %503 = add i32 %502, %412
  %504 = add i32 %503, %204
  %505 = add i32 %504, %246
  %506 = add i32 %505, %209
  %507 = add i32 %506, %430
  %508 = add i32 %507, %419
  %509 = add i32 %508, %408
  %510 = add i32 %509, %368
  %511 = add i32 %510, %361
  %512 = add i32 %511, %325
  %513 = add i32 %512, %274
  %514 = add i32 %513, %474
  %515 = add i32 %514, %324
  %516 = add i32 %515, %416
  %517 = shl i32 %516, 1
  %518 = add i32 %195, %4
  %519 = add i32 %518, %168
  %520 = add i32 %519, %165
  %521 = sub i32 %520, %163
  %522 = sub i32 %521, %117
  %523 = sub i32 %522, %61
  %524 = add i32 %523, %231
  %525 = sub i32 %524, %277
  %526 = sub i32 %525, %466
  %527 = add i32 %526, %404
  %528 = mul i32 %527, 3
  %529 = sub i32 %138, %196
  %530 = sub i32 %529, %203
  %531 = sub i32 %530, %448
  %532 = sub i32 %531, %491
  %533 = add i32 %532, %436
  %534 = add i32 %533, %374
  %535 = mul i32 %534, 5
  %536 = add i32 %330, %45
  %537 = add i32 %536, %379
  %538 = shl i32 %537, 2
  %539 = or i32 %485, %484
  %540 = shl i32 %539, 3
  %541 = add i32 %11, %10
  %542 = add i32 %541, %71
  %543 = add i32 %542, %2
  %544 = add i32 %543, %167
  %545 = add i32 %544, %169
  %546 = sub i32 %545, %34
  %547 = sub i32 %546, %46
  %548 = add i32 %547, %50
  %549 = add i32 %548, %63
  %550 = add i32 %549, %78
  %551 = add i32 %550, %87
  %552 = sub i32 %551, %93
  %553 = sub i32 %552, %96
  %554 = sub i32 %553, %98
  %555 = sub i32 %554, %109
  %556 = sub i32 %555, %52
  %557 = add i32 %556, %16
  %558 = add i32 %557, %118
  %559 = add i32 %558, %130
  %560 = add i32 %559, %72
  %561 = add i32 %560, %174
  %562 = add i32 %561, %186
  %563 = add i32 %562, %3
  %564 = sub i32 %563, %14
  %565 = add i32 %564, %17
  %566 = add i32 %565, %18
  %567 = sub i32 %566, %26
  %568 = add i32 %567, %29
  %569 = add i32 %568, %30
  %570 = sub i32 %569, %33
  %571 = sub i32 %570, %36
  %572 = sub i32 %571, %39
  %573 = sub i32 %572, %41
  %574 = sub i32 %573, %43
  %575 = add i32 %574, %49
  %576 = add i32 %575, %51
  %577 = sub i32 %576, %54
  %578 = add i32 %577, %60
  %579 = add i32 %578, %62
  %580 = sub i32 %579, %70
  %581 = add i32 %580, %73
  %582 = sub i32 %581, %77
  %583 = sub i32 %582, %79
  %584 = add i32 %583, %80
  %585 = sub i32 %584, %82
  %586 = add i32 %585, %89
  %587 = add i32 %586, %90
  %588 = sub i32 %587, %92
  %589 = sub i32 %588, %94
  %590 = add i32 %589, %97
  %591 = sub i32 %590, %99
  %592 = sub i32 %591, %100
  %593 = sub i32 %592, %101
  %594 = sub i32 %593, %102
  %595 = sub i32 %594, %103
  %596 = sub i32 %595, %104
  %597 = sub i32 %596, %105
  %598 = add i32 %597, %106
  %599 = sub i32 %598, %110
  %600 = add i32 %599, %115
  %601 = sub i32 %600, %116
  %602 = sub i32 %601, %125
  %603 = add i32 %602, %128
  %604 = sub i32 %603, %129
  %605 = add i32 %604, %132
  %606 = add i32 %605, %133
  %607 = add i32 %606, %134
  %608 = sub i32 %607, %135
  %609 = sub i32 %608, %136
  %610 = add i32 %609, %137
  %611 = add i32 %610, %141
  %612 = add i32 %611, %142
  %613 = add i32 %612, %143
  %614 = add i32 %613, %144
  %615 = sub i32 %614, %147
  %616 = sub i32 %615, %148
  %617 = add i32 %616, %149
  %618 = sub i32 %617, %153
  %619 = add i32 %618, %160
  %620 = sub i32 %619, %161
  %621 = sub i32 %620, %162
  %622 = sub i32 %621, %166
  %623 = sub i32 %622, %170
  %624 = add i32 %623, %171
  %625 = add i32 %624, %172
  %626 = sub i32 %625, %173
  %627 = sub i32 %626, %175
  %628 = add i32 %627, %176
  %629 = sub i32 %628, %181
  %630 = sub i32 %629, %182
  %631 = add i32 %630, %187
  %632 = add i32 %631, %188
  %633 = add i32 %632, %190
  %634 = add i32 %633, %23
  %635 = add i32 %634, %67
  %636 = add i32 %635, %76
  %637 = sub i32 %636, %85
  %638 = sub i32 %637, %108
  %639 = add i32 %638, %114
  %640 = add i32 %639, %124
  %641 = sub i32 %640, %127
  %642 = sub i32 %641, %146
  %643 = sub i32 %642, %152
  %644 = sub i32 %643, %155
  %645 = sub i32 %644, %157
  %646 = add i32 %645, %178
  %647 = sub i32 %646, %180
  %648 = add i32 %647, %189
  %649 = add i32 %648, %192
  %650 = sub i32 %649, %194
  %651 = add i32 %650, %198
  %652 = add i32 %651, %199
  %653 = add i32 %652, %201
  %654 = sub i32 %653, %202
  %655 = sub i32 %654, %226
  %656 = add i32 %655, %206
  %657 = add i32 %656, %435
  %658 = add i32 %657, %278
  %659 = sub i32 %658, %225
  %660 = add i32 %659, %253
  %661 = add i32 %660, %275
  %662 = sub i32 %661, %286
  %663 = sub i32 %662, %293
  %664 = add i32 %663, %305
  %665 = sub i32 %664, %342
  %666 = sub i32 %665, %347
  %667 = sub i32 %666, %240
  %668 = sub i32 %667, %351
  %669 = add i32 %668, %354
  %670 = sub i32 %669, %356
  %671 = add i32 %670, %367
  %672 = add i32 %671, %211
  %673 = add i32 %672, %371
  %674 = sub i32 %673, %372
  %675 = sub i32 %674, %375
  %676 = add i32 %675, %376
  %677 = sub i32 %676, %381
  %678 = add i32 %677, %382
  %679 = add i32 %678, %407
  %680 = add i32 %679, %410
  %681 = sub i32 %680, %420
  %682 = add i32 %681, %425
  %683 = sub i32 %682, %431
  %684 = add i32 %683, %438
  %685 = add i32 %684, %444
  %686 = sub i32 %685, %445
  %687 = sub i32 %686, %451
  %688 = add i32 %687, %249
  %689 = sub i32 %688, %459
  %690 = add i32 %689, %460
  %691 = add i32 %690, %463
  %692 = sub i32 %691, %467
  %693 = add i32 %692, %257
  %694 = sub i32 %693, %227
  %695 = sub i32 %694, %471
  %696 = sub i32 %695, %122
  %697 = sub i32 %696, %185
  %698 = sub i32 %697, %205
  %699 = add i32 %698, %208
  %700 = sub i32 %699, %210
  %701 = add i32 %700, %215
  %702 = add i32 %701, %218
  %703 = add i32 %702, %229
  %704 = sub i32 %703, %245
  %705 = sub i32 %704, %248
  %706 = add i32 %705, %250
  %707 = sub i32 %706, %251
  %708 = sub i32 %707, %254
  %709 = add i32 %708, %256
  %710 = add i32 %709, %258
  %711 = add i32 %710, %259
  %712 = sub i32 %711, %260
  %713 = sub i32 %712, %261
  %714 = add i32 %713, %266
  %715 = add i32 %714, %267
  %716 = add i32 %715, %268
  %717 = add i32 %716, %272
  %718 = add i32 %717, %263
  %719 = add i32 %718, %273
  %720 = sub i32 %719, %280
  %721 = add i32 %720, %284
  %722 = add i32 %721, %285
  %723 = add i32 %722, %292
  %724 = add i32 %723, %294
  %725 = sub i32 %724, %295
  %726 = sub i32 %725, %296
  %727 = sub i32 %726, %297
  %728 = add i32 %727, %298
  %729 = add i32 %728, %299
  %730 = add i32 %729, %300
  %731 = sub i32 %730, %302
  %732 = sub i32 %731, %303
  %733 = add i32 %732, %307
  %734 = add i32 %733, %308
  %735 = add i32 %734, %309
  %736 = add i32 %735, %310
  %737 = add i32 %736, %311
  %738 = add i32 %737, %312
  %739 = add i32 %738, %316
  %740 = sub i32 %739, %317
  %741 = sub i32 %740, %318
  %742 = add i32 %741, %319
  %743 = add i32 %742, %320
  %744 = sub i32 %743, %321
  %745 = sub i32 %744, %328
  %746 = add i32 %745, %329
  %747 = add i32 %746, %331
  %748 = sub i32 %747, %337
  %749 = add i32 %748, %338
  %750 = add i32 %749, %339
  %751 = add i32 %750, %269
  %752 = sub i32 %751, %341
  %753 = sub i32 %752, %344
  %754 = add i32 %753, %348
  %755 = sub i32 %754, %349
  %756 = sub i32 %755, %350
  %757 = sub i32 %756, %352
  %758 = sub i32 %757, %355
  %759 = sub i32 %758, %357
  %760 = add i32 %759, %360
  %761 = sub i32 %760, %363
  %762 = sub i32 %761, %364
  %763 = add i32 %762, %365
  %764 = sub i32 %763, %366
  %765 = add i32 %764, %373
  %766 = sub i32 %765, %288
  %767 = sub i32 %766, %377
  %768 = add i32 %767, %378
  %769 = sub i32 %768, %380
  %770 = sub i32 %769, %385
  %771 = add i32 %770, %387
  %772 = add i32 %771, %388
  %773 = sub i32 %772, %389
  %774 = add i32 %773, %392
  %775 = sub i32 %774, %398
  %776 = sub i32 %775, %401
  %777 = sub i32 %776, %402
  %778 = sub i32 %777, %403
  %779 = sub i32 %778, %406
  %780 = sub i32 %779, %409
  %781 = sub i32 %780, %411
  %782 = sub i32 %781, %418
  %783 = sub i32 %782, %424
  %784 = add i32 %783, %426
  %785 = add i32 %784, %427
  %786 = add i32 %785, %428
  %787 = sub i32 %786, %429
  %788 = add i32 %787, %243
  %789 = add i32 %788, %432
  %790 = sub i32 %789, %433
  %791 = add i32 %790, %434
  %792 = add i32 %791, %437
  %793 = sub i32 %792, %439
  %794 = add i32 %793, %440
  %795 = sub i32 %794, %441
  %796 = sub i32 %795, %442
  %797 = add i32 %796, %443
  %798 = add i32 %797, %446
  %799 = add i32 %798, %447
  %800 = sub i32 %799, %449
  %801 = add i32 %800, %454
  %802 = sub i32 %801, %455
  %803 = add i32 %802, %456
  %804 = add i32 %803, %457
  %805 = sub i32 %804, %458
  %806 = add i32 %805, %462
  %807 = add i32 %806, %464
  %808 = sub i32 %807, %465
  %809 = add i32 %808, %468
  %810 = sub i32 %809, %470
  %811 = sub i32 %810, %472
  %812 = sub i32 %811, %473
  %813 = sub i32 %812, %475
  %814 = add i32 %813, %476
  %815 = add i32 %814, %477
  %816 = sub i32 %815, %480
  %817 = sub i32 %816, %481
  %818 = sub i32 %817, %482
  %819 = sub i32 %818, %483
  %820 = sub i32 %819, %213
  %821 = sub i32 %820, %222
  %822 = add i32 %821, %244
  %823 = sub i32 %822, %265
  %824 = add i32 %823, %271
  %825 = sub i32 %824, %282
  %826 = add i32 %825, %301
  %827 = add i32 %826, %306
  %828 = sub i32 %827, %314
  %829 = sub i32 %828, %323
  %830 = sub i32 %829, %327
  %831 = add i32 %830, %334
  %832 = sub i32 %831, %336
  %833 = sub i32 %832, %340
  %834 = sub i32 %833, %346
  %835 = add i32 %834, %353
  %836 = sub i32 %835, %359
  %837 = sub i32 %836, %370
  %838 = sub i32 %837, %384
  %839 = sub i32 %838, %386
  %840 = sub i32 %839, %391
  %841 = add i32 %840, %393
  %842 = sub i32 %841, %395
  %843 = sub i32 %842, %397
  %844 = sub i32 %843, %400
  %845 = add i32 %844, %405
  %846 = sub i32 %845, %414
  %847 = sub i32 %846, %423
  %848 = sub i32 %847, %450
  %849 = sub i32 %848, %453
  %850 = add i32 %849, %461
  %851 = sub i32 %850, %469
  %852 = sub i32 %851, %479
  %853 = add i32 %852, %487
  %854 = add i32 %853, %489
  %855 = add i32 %854, %490
  %856 = sub i32 %855, %492
  %857 = add i32 %856, %540
  %858 = sub i32 %857, %239
  %859 = sub i32 %858, %291
  %860 = add i32 %859, %538
  %861 = add i32 %860, %535
  %862 = add i32 %861, %528
  %863 = add i32 %862, %517
  %864 = icmp eq i32 %9, %863
  %865 = select i1 %864, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %866 = tail call i32 @puts(i8* nonnull dereferenceable(1) %865)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
