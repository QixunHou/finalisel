digraph "DFG for'main' function" {
	Node0xac0ea8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xac0f28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xac0fb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xac1018[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xac10c8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xac14f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xac15d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xac16d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xac1798[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xac1848[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xac1908[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xac19b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xabbc10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xac1bb8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xac2b28[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xac3198[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xac31f8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xac3270[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0xac32e0[shape=record, label="  %15 = xor i32 %12, %14"];
	Node0xac3350[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0xac33c0[shape=record, label="  %17 = or i32 %13, %16"];
	Node0xac3430[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0xac34a0[shape=record, label="  %19 = sub i32 %15, %18"];
	Node0xac3510[shape=record, label="  %20 = shl i32 %11, 1"];
	Node0xac3580[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0xac35f0[shape=record, label="  %22 = shl i32 %12, 1"];
	Node0xac3660[shape=record, label="  %23 = or i32 %12, %11"];
	Node0xac36d0[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0xac3740[shape=record, label="  %25 = and i32 %12, %11"];
	Node0xac37b0[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0xac3820[shape=record, label="  %27 = xor i32 %11, 1073741823"];
	Node0xac3890[shape=record, label="  %28 = and i32 %27, %12"];
	Node0xac3900[shape=record, label="  %29 = shl i32 %28, 2"];
	Node0xac3970[shape=record, label="  %30 = xor i32 %13, -1"];
	Node0xac39e0[shape=record, label="  %31 = xor i32 %13, %10"];
	Node0xac3a50[shape=record, label="  %32 = shl i32 %16, 1"];
	Node0xac3ac0[shape=record, label="  %33 = and i32 %13, %16"];
	Node0xac3b30[shape=record, label="  %34 = shl i32 %33, 2"];
	Node0xac3ba0[shape=record, label="  %35 = xor i32 %34, -4"];
	Node0xac3c10[shape=record, label="  %36 = or i32 %13, %10"];
	Node0xac3c80[shape=record, label="  %37 = xor i32 %36, -1"];
	Node0xac3cf0[shape=record, label="  %38 = shl i32 %33, 1"];
	Node0xac3d60[shape=record, label="  %39 = add i32 %25, %24"];
	Node0xac3dd0[shape=record, label="  %40 = add i32 %39, %37"];
	Node0xac3e40[shape=record, label="  %41 = mul i32 %40, 3"];
	Node0xac3eb0[shape=record, label="  %42 = add i32 %10, 2"];
	Node0xac3f20[shape=record, label="  %43 = add i32 %42, %11"];
	Node0xac3f90[shape=record, label="  %44 = sub i32 %43, %32"];
	Node0xac4000[shape=record, label="  %45 = add i32 %44, %12"];
	Node0xac4070[shape=record, label="  %46 = sub i32 %45, %21"];
	Node0xac40e0[shape=record, label="  %47 = sub i32 %46, %22"];
	Node0xac4150[shape=record, label="  %48 = add i32 %47, %24"];
	Node0xac41c0[shape=record, label="  %49 = add i32 %48, %26"];
	Node0xac4230[shape=record, label="  %50 = add i32 %49, %30"];
	Node0xac42a0[shape=record, label="  %51 = add i32 %50, %29"];
	Node0xac4310[shape=record, label="  %52 = add i32 %51, %31"];
	Node0xac4380[shape=record, label="  %53 = add i32 %52, %36"];
	Node0xac43f0[shape=record, label="  %54 = sub i32 %53, %38"];
	Node0xac4460[shape=record, label="  %55 = sub i32 %54, %35"];
	Node0xac44d0[shape=record, label="  %56 = add i32 %55, %41"];
	Node0xac4540[shape=record, label="  %57 = icmp eq i32 %19, %56"];
	Node0xa608b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xac45d0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0xac4878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xac49d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xac4ae8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xac4bf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xac4cb8[shape=record, label="  ret i32 0"];
	Node0xac0ea8 -> Node0xac0f28;
	Node0xac0f28 -> Node0xac0fb8;
	Node0xac0fb8 -> Node0xac1018;
	Node0xac1018 -> Node0xac10c8;
	Node0xac10c8 -> Node0xac14f8;
	Node0xac14f8 -> Node0xac15d8;
	Node0xac15d8 -> Node0xac16d8;
	Node0xac16d8 -> Node0xac1798;
	Node0xac1798 -> Node0xac1848;
	Node0xac1848 -> Node0xac1908;
	Node0xac1908 -> Node0xac19b8;
	Node0xac19b8 -> Node0xabbc10;
	Node0xabbc10 -> Node0xac1bb8;
	Node0xac1bb8 -> Node0xac2b28;
	Node0xac2b28 -> Node0xac3198;
	Node0xac3198 -> Node0xac31f8;
	Node0xac31f8 -> Node0xac3270;
	Node0xac3270 -> Node0xac32e0;
	Node0xac32e0 -> Node0xac3350;
	Node0xac3350 -> Node0xac33c0;
	Node0xac33c0 -> Node0xac3430;
	Node0xac3430 -> Node0xac34a0;
	Node0xac34a0 -> Node0xac3510;
	Node0xac3510 -> Node0xac3580;
	Node0xac3580 -> Node0xac35f0;
	Node0xac35f0 -> Node0xac3660;
	Node0xac3660 -> Node0xac36d0;
	Node0xac36d0 -> Node0xac3740;
	Node0xac3740 -> Node0xac37b0;
	Node0xac37b0 -> Node0xac3820;
	Node0xac3820 -> Node0xac3890;
	Node0xac3890 -> Node0xac3900;
	Node0xac3900 -> Node0xac3970;
	Node0xac3970 -> Node0xac39e0;
	Node0xac39e0 -> Node0xac3a50;
	Node0xac3a50 -> Node0xac3ac0;
	Node0xac3ac0 -> Node0xac3b30;
	Node0xac3b30 -> Node0xac3ba0;
	Node0xac3ba0 -> Node0xac3c10;
	Node0xac3c10 -> Node0xac3c80;
	Node0xac3c80 -> Node0xac3cf0;
	Node0xac3cf0 -> Node0xac3d60;
	Node0xac3d60 -> Node0xac3dd0;
	Node0xac3dd0 -> Node0xac3e40;
	Node0xac3e40 -> Node0xac3eb0;
	Node0xac3eb0 -> Node0xac3f20;
	Node0xac3f20 -> Node0xac3f90;
	Node0xac3f90 -> Node0xac4000;
	Node0xac4000 -> Node0xac4070;
	Node0xac4070 -> Node0xac40e0;
	Node0xac40e0 -> Node0xac4150;
	Node0xac4150 -> Node0xac41c0;
	Node0xac41c0 -> Node0xac4230;
	Node0xac4230 -> Node0xac42a0;
	Node0xac42a0 -> Node0xac4310;
	Node0xac4310 -> Node0xac4380;
	Node0xac4380 -> Node0xac43f0;
	Node0xac43f0 -> Node0xac4460;
	Node0xac4460 -> Node0xac44d0;
	Node0xac44d0 -> Node0xac4540;
	Node0xac4540 -> Node0xa608b8;
	Node0xa608b8 -> Node0xac45d0;
	Node0xac45d0 -> Node0xac4878;
	Node0xac4878 -> Node0xac49d8;
	Node0xac49d8 -> Node0xac4ae8;
	Node0xac4ae8 -> Node0xac4bf8;
	Node0xac4bf8 -> Node0xac4cb8;
edge [color=red]
	Node0xac0ea8 -> Node0xac10c8;
	Node0xac10c8 -> Node0xac14f8;
	Node0xac0f28 -> Node0xac15d8;
	Node0xac15d8 -> Node0xac16d8;
	Node0xac0fb8 -> Node0xac1798;
	Node0xac1798 -> Node0xac1848;
	Node0xac1018 -> Node0xac1908;
	Node0xac1908 -> Node0xac19b8;
	Node0xac0ea8 -> Node0xabbc10;
	Node0xac0f28 -> Node0xabbc10;
	Node0xac0fb8 -> Node0xabbc10;
	Node0xac1018 -> Node0xabbc10;
	Node0xac0ea8 -> Node0xac1bb8;
	Node0xac0f28 -> Node0xac2b28;
	Node0xac0fb8 -> Node0xac3198;
	Node0xac1018 -> Node0xac31f8;
	Node0xac2b28 -> Node0xac3270;
	Node0xac3198 -> Node0xac32e0;
	Node0xac3270 -> Node0xac32e0;
	Node0xac1bb8 -> Node0xac3350;
	Node0xac31f8 -> Node0xac33c0;
	Node0xac3350 -> Node0xac33c0;
	Node0xac33c0 -> Node0xac3430;
	Node0xac32e0 -> Node0xac34a0;
	Node0xac3430 -> Node0xac34a0;
	Node0xac2b28 -> Node0xac3510;
	Node0xac3510 -> Node0xac3580;
	Node0xac3198 -> Node0xac35f0;
	Node0xac3198 -> Node0xac3660;
	Node0xac2b28 -> Node0xac3660;
	Node0xac3660 -> Node0xac36d0;
	Node0xac3198 -> Node0xac3740;
	Node0xac2b28 -> Node0xac3740;
	Node0xac3740 -> Node0xac37b0;
	Node0xac2b28 -> Node0xac3820;
	Node0xac3820 -> Node0xac3890;
	Node0xac3198 -> Node0xac3890;
	Node0xac3890 -> Node0xac3900;
	Node0xac31f8 -> Node0xac3970;
	Node0xac31f8 -> Node0xac39e0;
	Node0xac1bb8 -> Node0xac39e0;
	Node0xac3350 -> Node0xac3a50;
	Node0xac31f8 -> Node0xac3ac0;
	Node0xac3350 -> Node0xac3ac0;
	Node0xac3ac0 -> Node0xac3b30;
	Node0xac3b30 -> Node0xac3ba0;
	Node0xac31f8 -> Node0xac3c10;
	Node0xac1bb8 -> Node0xac3c10;
	Node0xac3c10 -> Node0xac3c80;
	Node0xac3ac0 -> Node0xac3cf0;
	Node0xac3740 -> Node0xac3d60;
	Node0xac36d0 -> Node0xac3d60;
	Node0xac3d60 -> Node0xac3dd0;
	Node0xac3c80 -> Node0xac3dd0;
	Node0xac3dd0 -> Node0xac3e40;
	Node0xac1bb8 -> Node0xac3eb0;
	Node0xac3eb0 -> Node0xac3f20;
	Node0xac2b28 -> Node0xac3f20;
	Node0xac3f20 -> Node0xac3f90;
	Node0xac3a50 -> Node0xac3f90;
	Node0xac3f90 -> Node0xac4000;
	Node0xac3198 -> Node0xac4000;
	Node0xac4000 -> Node0xac4070;
	Node0xac3580 -> Node0xac4070;
	Node0xac4070 -> Node0xac40e0;
	Node0xac35f0 -> Node0xac40e0;
	Node0xac40e0 -> Node0xac4150;
	Node0xac36d0 -> Node0xac4150;
	Node0xac4150 -> Node0xac41c0;
	Node0xac37b0 -> Node0xac41c0;
	Node0xac41c0 -> Node0xac4230;
	Node0xac3970 -> Node0xac4230;
	Node0xac4230 -> Node0xac42a0;
	Node0xac3900 -> Node0xac42a0;
	Node0xac42a0 -> Node0xac4310;
	Node0xac39e0 -> Node0xac4310;
	Node0xac4310 -> Node0xac4380;
	Node0xac3c10 -> Node0xac4380;
	Node0xac4380 -> Node0xac43f0;
	Node0xac3cf0 -> Node0xac43f0;
	Node0xac43f0 -> Node0xac4460;
	Node0xac3ba0 -> Node0xac4460;
	Node0xac4460 -> Node0xac44d0;
	Node0xac3e40 -> Node0xac44d0;
	Node0xac34a0 -> Node0xac4540;
	Node0xac44d0 -> Node0xac4540;
	Node0xac4540 -> Node0xa608b8;
	Node0xa608b8 -> Node0xac45d0;
	Node0xac1908 -> Node0xac4878;
	Node0xac1798 -> Node0xac49d8;
	Node0xac15d8 -> Node0xac4ae8;
	Node0xac10c8 -> Node0xac4bf8;
}
