digraph "DFG for'main' function" {
	Node0xa504a8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa50528[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa505b8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xa50618[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xa50a98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa50b78[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xa50c78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa50d38[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xa50de8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa51048[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xa51108[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa51268[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa512c8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xa57a20[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xa57c28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa57d88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa57e98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa57f58[shape=record, label="  ret i32 0"];
	Node0xa504a8 -> Node0xa50528;
	Node0xa50528 -> Node0xa505b8;
	Node0xa505b8 -> Node0xa50618;
	Node0xa50618 -> Node0xa50a98;
	Node0xa50a98 -> Node0xa50b78;
	Node0xa50b78 -> Node0xa50c78;
	Node0xa50c78 -> Node0xa50d38;
	Node0xa50d38 -> Node0xa50de8;
	Node0xa50de8 -> Node0xa51048;
	Node0xa51048 -> Node0xa51108;
	Node0xa51108 -> Node0xa51268;
	Node0xa51268 -> Node0xa512c8;
	Node0xa512c8 -> Node0xa57a20;
	Node0xa57a20 -> Node0xa57c28;
	Node0xa57c28 -> Node0xa57d88;
	Node0xa57d88 -> Node0xa57e98;
	Node0xa57e98 -> Node0xa57f58;
edge [color=red]
	Node0xa504a8 -> Node0xa50618;
	Node0xa50618 -> Node0xa50a98;
	Node0xa50528 -> Node0xa50b78;
	Node0xa50b78 -> Node0xa50c78;
	Node0xa505b8 -> Node0xa50d38;
	Node0xa50d38 -> Node0xa50de8;
	Node0xa504a8 -> Node0xa51048;
	Node0xa50528 -> Node0xa51048;
	Node0xa505b8 -> Node0xa51048;
	Node0xa504a8 -> Node0xa51108;
	Node0xa50528 -> Node0xa51268;
	Node0xa505b8 -> Node0xa512c8;
	Node0xa51108 -> Node0xa57a20;
	Node0xa51268 -> Node0xa57a20;
	Node0xa512c8 -> Node0xa57a20;
	Node0xa50d38 -> Node0xa57c28;
	Node0xa50b78 -> Node0xa57d88;
	Node0xa50618 -> Node0xa57e98;
}
