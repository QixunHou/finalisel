digraph "DFG for'main' function" {
	Node0x20bcd68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x20bcde8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x20bce78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x20bced8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x20bcf88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x20bd3b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20bd498[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x20bd598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20bd658[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x20bd708[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20bd7c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x20bd878[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20b7bb0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x20bda78[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20be9e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20bf058[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x20bf0b8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x20bf130[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x20bf1a0[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0x20bf210[shape=record, label="  %16 = sub i32 %15, %14"];
	Node0x20bf280[shape=record, label="  %17 = shl i32 %13, 1"];
	Node0x20bf2f0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x20bf360[shape=record, label="  %19 = sub i32 %16, %18"];
	Node0x20bf3d0[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x20bf440[shape=record, label="  %21 = and i32 %11, %20"];
	Node0x20bf4b0[shape=record, label="  %22 = xor i32 %11, -1"];
	Node0x20bf520[shape=record, label="  %23 = xor i32 %14, -1"];
	Node0x20bf590[shape=record, label="  %24 = or i32 %12, %11"];
	Node0x20bf600[shape=record, label="  %25 = or i32 %11, %20"];
	Node0x20bf670[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x20bf6e0[shape=record, label="  %27 = shl i32 %24, 1"];
	Node0x20bf750[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x20bf7c0[shape=record, label="  %29 = xor i32 %25, -1"];
	Node0x20bf830[shape=record, label="  %30 = mul i32 %29, -5"];
	Node0x20bf8a0[shape=record, label="  %31 = and i32 %12, %11"];
	Node0x20bf910[shape=record, label="  %32 = shl i32 %31, 2"];
	Node0x20bf980[shape=record, label="  %33 = or i32 %13, %10"];
	Node0x20bf9f0[shape=record, label="  %34 = and i32 %13, %10"];
	Node0x20bfa60[shape=record, label="  %35 = add i32 %34, %21"];
	Node0x20bfad0[shape=record, label="  %36 = mul i32 %35, -3"];
	Node0x20bfb40[shape=record, label="  %37 = add i32 %11, 2147483647"];
	Node0x20bfbb0[shape=record, label="  %38 = add i32 %37, %12"];
	Node0x20bfc20[shape=record, label="  %39 = add i32 %38, %13"];
	Node0x20bfc90[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x20bfd00[shape=record, label="  %41 = add i32 %10, 2"];
	Node0x20bfd70[shape=record, label="  %42 = add i32 %41, %22"];
	Node0x20bfde0[shape=record, label="  %43 = add i32 %42, %21"];
	Node0x20bfe50[shape=record, label="  %44 = add i32 %43, %23"];
	Node0x20bfec0[shape=record, label="  %45 = sub i32 %44, %24"];
	Node0x20bff30[shape=record, label="  %46 = add i32 %45, %13"];
	Node0x20bffa0[shape=record, label="  %47 = sub i32 %46, %26"];
	Node0x20c0010[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x20c0080[shape=record, label="  %49 = sub i32 %48, %32"];
	Node0x20c00f0[shape=record, label="  %50 = sub i32 %49, %15"];
	Node0x20c0160[shape=record, label="  %51 = add i32 %50, %33"];
	Node0x20c01d0[shape=record, label="  %52 = sub i32 %51, %28"];
	Node0x20c0240[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x20c02b0[shape=record, label="  %54 = add i32 %53, %40"];
	Node0x20c0320[shape=record, label="  %55 = icmp eq i32 %19, %54"];
	Node0x205c8b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x20c03b0[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x20c0658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20c07b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20c08c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20c09d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20c0a98[shape=record, label="  ret i32 0"];
	Node0x20bcd68 -> Node0x20bcde8;
	Node0x20bcde8 -> Node0x20bce78;
	Node0x20bce78 -> Node0x20bced8;
	Node0x20bced8 -> Node0x20bcf88;
	Node0x20bcf88 -> Node0x20bd3b8;
	Node0x20bd3b8 -> Node0x20bd498;
	Node0x20bd498 -> Node0x20bd598;
	Node0x20bd598 -> Node0x20bd658;
	Node0x20bd658 -> Node0x20bd708;
	Node0x20bd708 -> Node0x20bd7c8;
	Node0x20bd7c8 -> Node0x20bd878;
	Node0x20bd878 -> Node0x20b7bb0;
	Node0x20b7bb0 -> Node0x20bda78;
	Node0x20bda78 -> Node0x20be9e8;
	Node0x20be9e8 -> Node0x20bf058;
	Node0x20bf058 -> Node0x20bf0b8;
	Node0x20bf0b8 -> Node0x20bf130;
	Node0x20bf130 -> Node0x20bf1a0;
	Node0x20bf1a0 -> Node0x20bf210;
	Node0x20bf210 -> Node0x20bf280;
	Node0x20bf280 -> Node0x20bf2f0;
	Node0x20bf2f0 -> Node0x20bf360;
	Node0x20bf360 -> Node0x20bf3d0;
	Node0x20bf3d0 -> Node0x20bf440;
	Node0x20bf440 -> Node0x20bf4b0;
	Node0x20bf4b0 -> Node0x20bf520;
	Node0x20bf520 -> Node0x20bf590;
	Node0x20bf590 -> Node0x20bf600;
	Node0x20bf600 -> Node0x20bf670;
	Node0x20bf670 -> Node0x20bf6e0;
	Node0x20bf6e0 -> Node0x20bf750;
	Node0x20bf750 -> Node0x20bf7c0;
	Node0x20bf7c0 -> Node0x20bf830;
	Node0x20bf830 -> Node0x20bf8a0;
	Node0x20bf8a0 -> Node0x20bf910;
	Node0x20bf910 -> Node0x20bf980;
	Node0x20bf980 -> Node0x20bf9f0;
	Node0x20bf9f0 -> Node0x20bfa60;
	Node0x20bfa60 -> Node0x20bfad0;
	Node0x20bfad0 -> Node0x20bfb40;
	Node0x20bfb40 -> Node0x20bfbb0;
	Node0x20bfbb0 -> Node0x20bfc20;
	Node0x20bfc20 -> Node0x20bfc90;
	Node0x20bfc90 -> Node0x20bfd00;
	Node0x20bfd00 -> Node0x20bfd70;
	Node0x20bfd70 -> Node0x20bfde0;
	Node0x20bfde0 -> Node0x20bfe50;
	Node0x20bfe50 -> Node0x20bfec0;
	Node0x20bfec0 -> Node0x20bff30;
	Node0x20bff30 -> Node0x20bffa0;
	Node0x20bffa0 -> Node0x20c0010;
	Node0x20c0010 -> Node0x20c0080;
	Node0x20c0080 -> Node0x20c00f0;
	Node0x20c00f0 -> Node0x20c0160;
	Node0x20c0160 -> Node0x20c01d0;
	Node0x20c01d0 -> Node0x20c0240;
	Node0x20c0240 -> Node0x20c02b0;
	Node0x20c02b0 -> Node0x20c0320;
	Node0x20c0320 -> Node0x205c8b8;
	Node0x205c8b8 -> Node0x20c03b0;
	Node0x20c03b0 -> Node0x20c0658;
	Node0x20c0658 -> Node0x20c07b8;
	Node0x20c07b8 -> Node0x20c08c8;
	Node0x20c08c8 -> Node0x20c09d8;
	Node0x20c09d8 -> Node0x20c0a98;
edge [color=red]
	Node0x20bcd68 -> Node0x20bcf88;
	Node0x20bcf88 -> Node0x20bd3b8;
	Node0x20bcde8 -> Node0x20bd498;
	Node0x20bd498 -> Node0x20bd598;
	Node0x20bce78 -> Node0x20bd658;
	Node0x20bd658 -> Node0x20bd708;
	Node0x20bced8 -> Node0x20bd7c8;
	Node0x20bd7c8 -> Node0x20bd878;
	Node0x20bcd68 -> Node0x20b7bb0;
	Node0x20bcde8 -> Node0x20b7bb0;
	Node0x20bce78 -> Node0x20b7bb0;
	Node0x20bced8 -> Node0x20b7bb0;
	Node0x20bcd68 -> Node0x20bda78;
	Node0x20bcde8 -> Node0x20be9e8;
	Node0x20bce78 -> Node0x20bf058;
	Node0x20bced8 -> Node0x20bf0b8;
	Node0x20bf058 -> Node0x20bf130;
	Node0x20be9e8 -> Node0x20bf130;
	Node0x20bf0b8 -> Node0x20bf1a0;
	Node0x20bda78 -> Node0x20bf1a0;
	Node0x20bf1a0 -> Node0x20bf210;
	Node0x20bf130 -> Node0x20bf210;
	Node0x20bf0b8 -> Node0x20bf280;
	Node0x20bf280 -> Node0x20bf2f0;
	Node0x20bf210 -> Node0x20bf360;
	Node0x20bf2f0 -> Node0x20bf360;
	Node0x20bf058 -> Node0x20bf3d0;
	Node0x20be9e8 -> Node0x20bf440;
	Node0x20bf3d0 -> Node0x20bf440;
	Node0x20be9e8 -> Node0x20bf4b0;
	Node0x20bf130 -> Node0x20bf520;
	Node0x20bf058 -> Node0x20bf590;
	Node0x20be9e8 -> Node0x20bf590;
	Node0x20be9e8 -> Node0x20bf600;
	Node0x20bf3d0 -> Node0x20bf600;
	Node0x20bf600 -> Node0x20bf670;
	Node0x20bf590 -> Node0x20bf6e0;
	Node0x20bf6e0 -> Node0x20bf750;
	Node0x20bf600 -> Node0x20bf7c0;
	Node0x20bf7c0 -> Node0x20bf830;
	Node0x20bf058 -> Node0x20bf8a0;
	Node0x20be9e8 -> Node0x20bf8a0;
	Node0x20bf8a0 -> Node0x20bf910;
	Node0x20bf0b8 -> Node0x20bf980;
	Node0x20bda78 -> Node0x20bf980;
	Node0x20bf0b8 -> Node0x20bf9f0;
	Node0x20bda78 -> Node0x20bf9f0;
	Node0x20bf9f0 -> Node0x20bfa60;
	Node0x20bf440 -> Node0x20bfa60;
	Node0x20bfa60 -> Node0x20bfad0;
	Node0x20be9e8 -> Node0x20bfb40;
	Node0x20bfb40 -> Node0x20bfbb0;
	Node0x20bf058 -> Node0x20bfbb0;
	Node0x20bfbb0 -> Node0x20bfc20;
	Node0x20bf0b8 -> Node0x20bfc20;
	Node0x20bfc20 -> Node0x20bfc90;
	Node0x20bda78 -> Node0x20bfd00;
	Node0x20bfd00 -> Node0x20bfd70;
	Node0x20bf4b0 -> Node0x20bfd70;
	Node0x20bfd70 -> Node0x20bfde0;
	Node0x20bf440 -> Node0x20bfde0;
	Node0x20bfde0 -> Node0x20bfe50;
	Node0x20bf520 -> Node0x20bfe50;
	Node0x20bfe50 -> Node0x20bfec0;
	Node0x20bf590 -> Node0x20bfec0;
	Node0x20bfec0 -> Node0x20bff30;
	Node0x20bf0b8 -> Node0x20bff30;
	Node0x20bff30 -> Node0x20bffa0;
	Node0x20bf670 -> Node0x20bffa0;
	Node0x20bffa0 -> Node0x20c0010;
	Node0x20bf830 -> Node0x20c0010;
	Node0x20c0010 -> Node0x20c0080;
	Node0x20bf910 -> Node0x20c0080;
	Node0x20c0080 -> Node0x20c00f0;
	Node0x20bf1a0 -> Node0x20c00f0;
	Node0x20c00f0 -> Node0x20c0160;
	Node0x20bf980 -> Node0x20c0160;
	Node0x20c0160 -> Node0x20c01d0;
	Node0x20bf750 -> Node0x20c01d0;
	Node0x20c01d0 -> Node0x20c0240;
	Node0x20bfad0 -> Node0x20c0240;
	Node0x20c0240 -> Node0x20c02b0;
	Node0x20bfc90 -> Node0x20c02b0;
	Node0x20bf360 -> Node0x20c0320;
	Node0x20c02b0 -> Node0x20c0320;
	Node0x20c0320 -> Node0x205c8b8;
	Node0x205c8b8 -> Node0x20c03b0;
	Node0x20bd7c8 -> Node0x20c0658;
	Node0x20bd658 -> Node0x20c07b8;
	Node0x20bd498 -> Node0x20c08c8;
	Node0x20bcf88 -> Node0x20c09d8;
}
