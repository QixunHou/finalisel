digraph "DFG for'main' function" {
	Node0x1d0eb68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d0ebe8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d0ec78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1d0ecd8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1d0f158[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d11a48[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1d11b28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d11be8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1d11c98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d11ef8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1d11fb8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d12f28[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d13598[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1d13690[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1d13898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d139f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d13b08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d13bc8[shape=record, label="  ret i32 0"];
	Node0x1d0eb68 -> Node0x1d0ebe8;
	Node0x1d0ebe8 -> Node0x1d0ec78;
	Node0x1d0ec78 -> Node0x1d0ecd8;
	Node0x1d0ecd8 -> Node0x1d0f158;
	Node0x1d0f158 -> Node0x1d11a48;
	Node0x1d11a48 -> Node0x1d11b28;
	Node0x1d11b28 -> Node0x1d11be8;
	Node0x1d11be8 -> Node0x1d11c98;
	Node0x1d11c98 -> Node0x1d11ef8;
	Node0x1d11ef8 -> Node0x1d11fb8;
	Node0x1d11fb8 -> Node0x1d12f28;
	Node0x1d12f28 -> Node0x1d13598;
	Node0x1d13598 -> Node0x1d13690;
	Node0x1d13690 -> Node0x1d13898;
	Node0x1d13898 -> Node0x1d139f8;
	Node0x1d139f8 -> Node0x1d13b08;
	Node0x1d13b08 -> Node0x1d13bc8;
edge [color=red]
	Node0x1d0eb68 -> Node0x1d0ecd8;
	Node0x1d0ecd8 -> Node0x1d0f158;
	Node0x1d0ebe8 -> Node0x1d11a48;
	Node0x1d11a48 -> Node0x1d11b28;
	Node0x1d0ec78 -> Node0x1d11be8;
	Node0x1d11be8 -> Node0x1d11c98;
	Node0x1d0eb68 -> Node0x1d11ef8;
	Node0x1d0ebe8 -> Node0x1d11ef8;
	Node0x1d0ec78 -> Node0x1d11ef8;
	Node0x1d0eb68 -> Node0x1d11fb8;
	Node0x1d0ebe8 -> Node0x1d12f28;
	Node0x1d0ec78 -> Node0x1d13598;
	Node0x1d11fb8 -> Node0x1d13690;
	Node0x1d12f28 -> Node0x1d13690;
	Node0x1d13598 -> Node0x1d13690;
	Node0x1d11be8 -> Node0x1d13898;
	Node0x1d11a48 -> Node0x1d139f8;
	Node0x1d0ecd8 -> Node0x1d13b08;
}
