digraph "DFG for'main' function" {
	Node0xc82ad8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc82b58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc82be8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xc83048[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc83128[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xc83248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc83480[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xc83538[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc844a8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc84b30[shape=record, label="  %8 = and i32 %7, %6"];
	Node0xc84ba0[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0xc84c10[shape=record, label="  %10 = mul i32 %9, 3"];
	Node0xc84c80[shape=record, label="  %11 = shl i32 %6, 1"];
	Node0xc84cf0[shape=record, label="  %12 = or i32 %11, 1"];
	Node0xc84d60[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0xc84dd0[shape=record, label="  %14 = xor i32 %6, %13"];
	Node0xc84e40[shape=record, label="  %15 = or i32 %7, %6"];
	Node0xc84eb0[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0xc84f20[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0xc84f90[shape=record, label="  %18 = and i32 %6, %13"];
	Node0xc85000[shape=record, label="  %19 = mul i32 %8, -6"];
	Node0xc85070[shape=record, label="  %20 = add i32 %7, 1"];
	Node0xc850e0[shape=record, label="  %21 = add i32 %20, %14"];
	Node0xc85150[shape=record, label="  %22 = add i32 %21, %12"];
	Node0xc851c0[shape=record, label="  %23 = sub i32 %22, %18"];
	Node0xc85230[shape=record, label="  %24 = add i32 %23, %16"];
	Node0xc852a0[shape=record, label="  %25 = add i32 %24, %19"];
	Node0xc85310[shape=record, label="  %26 = add i32 %25, %17"];
	Node0xc85380[shape=record, label="  %27 = icmp eq i32 %10, %26"];
	Node0xc239d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc85410[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0xc85668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc857c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc85888[shape=record, label="  ret i32 0"];
	Node0xc82ad8 -> Node0xc82b58;
	Node0xc82b58 -> Node0xc82be8;
	Node0xc82be8 -> Node0xc83048;
	Node0xc83048 -> Node0xc83128;
	Node0xc83128 -> Node0xc83248;
	Node0xc83248 -> Node0xc83480;
	Node0xc83480 -> Node0xc83538;
	Node0xc83538 -> Node0xc844a8;
	Node0xc844a8 -> Node0xc84b30;
	Node0xc84b30 -> Node0xc84ba0;
	Node0xc84ba0 -> Node0xc84c10;
	Node0xc84c10 -> Node0xc84c80;
	Node0xc84c80 -> Node0xc84cf0;
	Node0xc84cf0 -> Node0xc84d60;
	Node0xc84d60 -> Node0xc84dd0;
	Node0xc84dd0 -> Node0xc84e40;
	Node0xc84e40 -> Node0xc84eb0;
	Node0xc84eb0 -> Node0xc84f20;
	Node0xc84f20 -> Node0xc84f90;
	Node0xc84f90 -> Node0xc85000;
	Node0xc85000 -> Node0xc85070;
	Node0xc85070 -> Node0xc850e0;
	Node0xc850e0 -> Node0xc85150;
	Node0xc85150 -> Node0xc851c0;
	Node0xc851c0 -> Node0xc85230;
	Node0xc85230 -> Node0xc852a0;
	Node0xc852a0 -> Node0xc85310;
	Node0xc85310 -> Node0xc85380;
	Node0xc85380 -> Node0xc239d8;
	Node0xc239d8 -> Node0xc85410;
	Node0xc85410 -> Node0xc85668;
	Node0xc85668 -> Node0xc857c8;
	Node0xc857c8 -> Node0xc85888;
edge [color=red]
	Node0xc82ad8 -> Node0xc82be8;
	Node0xc82be8 -> Node0xc83048;
	Node0xc82b58 -> Node0xc83128;
	Node0xc83128 -> Node0xc83248;
	Node0xc82ad8 -> Node0xc83480;
	Node0xc82b58 -> Node0xc83480;
	Node0xc82ad8 -> Node0xc83538;
	Node0xc82b58 -> Node0xc844a8;
	Node0xc844a8 -> Node0xc84b30;
	Node0xc83538 -> Node0xc84b30;
	Node0xc84b30 -> Node0xc84ba0;
	Node0xc84ba0 -> Node0xc84c10;
	Node0xc83538 -> Node0xc84c80;
	Node0xc84c80 -> Node0xc84cf0;
	Node0xc844a8 -> Node0xc84d60;
	Node0xc83538 -> Node0xc84dd0;
	Node0xc84d60 -> Node0xc84dd0;
	Node0xc844a8 -> Node0xc84e40;
	Node0xc83538 -> Node0xc84e40;
	Node0xc84e40 -> Node0xc84eb0;
	Node0xc84eb0 -> Node0xc84f20;
	Node0xc83538 -> Node0xc84f90;
	Node0xc84d60 -> Node0xc84f90;
	Node0xc84b30 -> Node0xc85000;
	Node0xc844a8 -> Node0xc85070;
	Node0xc85070 -> Node0xc850e0;
	Node0xc84dd0 -> Node0xc850e0;
	Node0xc850e0 -> Node0xc85150;
	Node0xc84cf0 -> Node0xc85150;
	Node0xc85150 -> Node0xc851c0;
	Node0xc84f90 -> Node0xc851c0;
	Node0xc851c0 -> Node0xc85230;
	Node0xc84eb0 -> Node0xc85230;
	Node0xc85230 -> Node0xc852a0;
	Node0xc85000 -> Node0xc852a0;
	Node0xc852a0 -> Node0xc85310;
	Node0xc84f20 -> Node0xc85310;
	Node0xc84c10 -> Node0xc85380;
	Node0xc85310 -> Node0xc85380;
	Node0xc85380 -> Node0xc239d8;
	Node0xc239d8 -> Node0xc85410;
	Node0xc83128 -> Node0xc85668;
	Node0xc82be8 -> Node0xc857c8;
}
