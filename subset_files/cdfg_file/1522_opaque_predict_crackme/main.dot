digraph "DFG for'main' function" {
	Node0x1dcaa68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1dcaae8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1dcab78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1dcabd8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1dcb058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1dcd228[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1dcd308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1dcd3c8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1dcd478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1dcd6d8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1dcd798[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1dce708[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1dced78[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1dcee70[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1dcf078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1dcf1d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1dcf2e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1dcf3a8[shape=record, label="  ret i32 0"];
	Node0x1dcaa68 -> Node0x1dcaae8;
	Node0x1dcaae8 -> Node0x1dcab78;
	Node0x1dcab78 -> Node0x1dcabd8;
	Node0x1dcabd8 -> Node0x1dcb058;
	Node0x1dcb058 -> Node0x1dcd228;
	Node0x1dcd228 -> Node0x1dcd308;
	Node0x1dcd308 -> Node0x1dcd3c8;
	Node0x1dcd3c8 -> Node0x1dcd478;
	Node0x1dcd478 -> Node0x1dcd6d8;
	Node0x1dcd6d8 -> Node0x1dcd798;
	Node0x1dcd798 -> Node0x1dce708;
	Node0x1dce708 -> Node0x1dced78;
	Node0x1dced78 -> Node0x1dcee70;
	Node0x1dcee70 -> Node0x1dcf078;
	Node0x1dcf078 -> Node0x1dcf1d8;
	Node0x1dcf1d8 -> Node0x1dcf2e8;
	Node0x1dcf2e8 -> Node0x1dcf3a8;
edge [color=red]
	Node0x1dcaa68 -> Node0x1dcabd8;
	Node0x1dcabd8 -> Node0x1dcb058;
	Node0x1dcaae8 -> Node0x1dcd228;
	Node0x1dcd228 -> Node0x1dcd308;
	Node0x1dcab78 -> Node0x1dcd3c8;
	Node0x1dcd3c8 -> Node0x1dcd478;
	Node0x1dcaa68 -> Node0x1dcd6d8;
	Node0x1dcaae8 -> Node0x1dcd6d8;
	Node0x1dcab78 -> Node0x1dcd6d8;
	Node0x1dcaa68 -> Node0x1dcd798;
	Node0x1dcaae8 -> Node0x1dce708;
	Node0x1dcab78 -> Node0x1dced78;
	Node0x1dcd798 -> Node0x1dcee70;
	Node0x1dce708 -> Node0x1dcee70;
	Node0x1dced78 -> Node0x1dcee70;
	Node0x1dcd3c8 -> Node0x1dcf078;
	Node0x1dcd228 -> Node0x1dcf1d8;
	Node0x1dcabd8 -> Node0x1dcf2e8;
}
