digraph "DFG for'main' function" {
	Node0x14e0a28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14e0aa8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14e0b38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14e0b98[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x14e1018[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14e10f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x14e11f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14e12b8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x14e1368[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14e15c8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x14e1688[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14e25f8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14e2c68[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14e2ce0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x14e2d50[shape=record, label="  %12 = or i32 %8, %11"];
	Node0x14e2dc0[shape=record, label="  %13 = xor i32 %9, %8"];
	Node0x14e2e30[shape=record, label="  %14 = and i32 %12, %13"];
	Node0x14e2ea0[shape=record, label="  %15 = xor i32 %10, %9"];
	Node0x14e2f10[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x14e2f80[shape=record, label="  %17 = and i32 %9, %8"];
	Node0x14e2ff0[shape=record, label="  %18 = or i32 %17, %16"];
	Node0x14e3060[shape=record, label="  %19 = xor i32 %10, %8"];
	Node0x14e30d0[shape=record, label="  %20 = or i32 %19, %9"];
	Node0x14e3140[shape=record, label="  %21 = and i32 %10, %8"];
	Node0x14e31b0[shape=record, label="  %22 = xor i32 %21, %9"];
	Node0x14e3220[shape=record, label="  %23 = or i32 %9, %8"];
	Node0x14e3290[shape=record, label="  %24 = and i32 %23, %10"];
	Node0x14e3300[shape=record, label="  %25 = xor i32 %8, -1"];
	Node0x14e3370[shape=record, label="  %26 = and i32 %9, %25"];
	Node0x14e33e0[shape=record, label="  %27 = or i32 %21, %26"];
	Node0x14e3450[shape=record, label="  %28 = and i32 %15, %23"];
	Node0x14e34c0[shape=record, label="  %29 = and i32 %26, %11"];
	Node0x14e3530[shape=record, label="  %30 = xor i32 %9, -1"];
	Node0x14e35a0[shape=record, label="  %31 = and i32 %10, %30"];
	Node0x14e3610[shape=record, label="  %32 = and i32 %31, %25"];
	Node0x14e3680[shape=record, label="  %33 = and i32 %10, %9"];
	Node0x14e36f0[shape=record, label="  %34 = and i32 %33, %25"];
	Node0x14e3760[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x14e37d0[shape=record, label="  %36 = and i32 %31, %8"];
	Node0x14e3840[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x14e38b0[shape=record, label="  %38 = and i32 %33, %8"];
	Node0x14e3920[shape=record, label="  %39 = sub i32 %16, %24"];
	Node0x14e3990[shape=record, label="  %40 = add i32 %39, %29"];
	Node0x14e3a00[shape=record, label="  %41 = sub i32 %40, %18"];
	Node0x14e3a70[shape=record, label="  %42 = add i32 %41, %20"];
	Node0x14e3ae0[shape=record, label="  %43 = sub i32 %42, %22"];
	Node0x14e3b50[shape=record, label="  %44 = sub i32 %43, %27"];
	Node0x14e3bc0[shape=record, label="  %45 = add i32 %44, %28"];
	Node0x14e3c30[shape=record, label="  %46 = sub i32 %45, %32"];
	Node0x14e3ca0[shape=record, label="  %47 = add i32 %46, %38"];
	Node0x14e3d10[shape=record, label="  %48 = add i32 %47, %35"];
	Node0x14e3d80[shape=record, label="  %49 = add i32 %48, %37"];
	Node0x14e3df0[shape=record, label="  %50 = icmp eq i32 %14, %49"];
	Node0x14809d8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14e3e80[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0x14e40d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14e4238[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14e4348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14e4408[shape=record, label="  ret i32 0"];
	Node0x14e0a28 -> Node0x14e0aa8;
	Node0x14e0aa8 -> Node0x14e0b38;
	Node0x14e0b38 -> Node0x14e0b98;
	Node0x14e0b98 -> Node0x14e1018;
	Node0x14e1018 -> Node0x14e10f8;
	Node0x14e10f8 -> Node0x14e11f8;
	Node0x14e11f8 -> Node0x14e12b8;
	Node0x14e12b8 -> Node0x14e1368;
	Node0x14e1368 -> Node0x14e15c8;
	Node0x14e15c8 -> Node0x14e1688;
	Node0x14e1688 -> Node0x14e25f8;
	Node0x14e25f8 -> Node0x14e2c68;
	Node0x14e2c68 -> Node0x14e2ce0;
	Node0x14e2ce0 -> Node0x14e2d50;
	Node0x14e2d50 -> Node0x14e2dc0;
	Node0x14e2dc0 -> Node0x14e2e30;
	Node0x14e2e30 -> Node0x14e2ea0;
	Node0x14e2ea0 -> Node0x14e2f10;
	Node0x14e2f10 -> Node0x14e2f80;
	Node0x14e2f80 -> Node0x14e2ff0;
	Node0x14e2ff0 -> Node0x14e3060;
	Node0x14e3060 -> Node0x14e30d0;
	Node0x14e30d0 -> Node0x14e3140;
	Node0x14e3140 -> Node0x14e31b0;
	Node0x14e31b0 -> Node0x14e3220;
	Node0x14e3220 -> Node0x14e3290;
	Node0x14e3290 -> Node0x14e3300;
	Node0x14e3300 -> Node0x14e3370;
	Node0x14e3370 -> Node0x14e33e0;
	Node0x14e33e0 -> Node0x14e3450;
	Node0x14e3450 -> Node0x14e34c0;
	Node0x14e34c0 -> Node0x14e3530;
	Node0x14e3530 -> Node0x14e35a0;
	Node0x14e35a0 -> Node0x14e3610;
	Node0x14e3610 -> Node0x14e3680;
	Node0x14e3680 -> Node0x14e36f0;
	Node0x14e36f0 -> Node0x14e3760;
	Node0x14e3760 -> Node0x14e37d0;
	Node0x14e37d0 -> Node0x14e3840;
	Node0x14e3840 -> Node0x14e38b0;
	Node0x14e38b0 -> Node0x14e3920;
	Node0x14e3920 -> Node0x14e3990;
	Node0x14e3990 -> Node0x14e3a00;
	Node0x14e3a00 -> Node0x14e3a70;
	Node0x14e3a70 -> Node0x14e3ae0;
	Node0x14e3ae0 -> Node0x14e3b50;
	Node0x14e3b50 -> Node0x14e3bc0;
	Node0x14e3bc0 -> Node0x14e3c30;
	Node0x14e3c30 -> Node0x14e3ca0;
	Node0x14e3ca0 -> Node0x14e3d10;
	Node0x14e3d10 -> Node0x14e3d80;
	Node0x14e3d80 -> Node0x14e3df0;
	Node0x14e3df0 -> Node0x14809d8;
	Node0x14809d8 -> Node0x14e3e80;
	Node0x14e3e80 -> Node0x14e40d8;
	Node0x14e40d8 -> Node0x14e4238;
	Node0x14e4238 -> Node0x14e4348;
	Node0x14e4348 -> Node0x14e4408;
edge [color=red]
	Node0x14e0a28 -> Node0x14e0b98;
	Node0x14e0b98 -> Node0x14e1018;
	Node0x14e0aa8 -> Node0x14e10f8;
	Node0x14e10f8 -> Node0x14e11f8;
	Node0x14e0b38 -> Node0x14e12b8;
	Node0x14e12b8 -> Node0x14e1368;
	Node0x14e0a28 -> Node0x14e15c8;
	Node0x14e0aa8 -> Node0x14e15c8;
	Node0x14e0b38 -> Node0x14e15c8;
	Node0x14e0a28 -> Node0x14e1688;
	Node0x14e0aa8 -> Node0x14e25f8;
	Node0x14e0b38 -> Node0x14e2c68;
	Node0x14e2c68 -> Node0x14e2ce0;
	Node0x14e1688 -> Node0x14e2d50;
	Node0x14e2ce0 -> Node0x14e2d50;
	Node0x14e25f8 -> Node0x14e2dc0;
	Node0x14e1688 -> Node0x14e2dc0;
	Node0x14e2d50 -> Node0x14e2e30;
	Node0x14e2dc0 -> Node0x14e2e30;
	Node0x14e2c68 -> Node0x14e2ea0;
	Node0x14e25f8 -> Node0x14e2ea0;
	Node0x14e2ea0 -> Node0x14e2f10;
	Node0x14e25f8 -> Node0x14e2f80;
	Node0x14e1688 -> Node0x14e2f80;
	Node0x14e2f80 -> Node0x14e2ff0;
	Node0x14e2f10 -> Node0x14e2ff0;
	Node0x14e2c68 -> Node0x14e3060;
	Node0x14e1688 -> Node0x14e3060;
	Node0x14e3060 -> Node0x14e30d0;
	Node0x14e25f8 -> Node0x14e30d0;
	Node0x14e2c68 -> Node0x14e3140;
	Node0x14e1688 -> Node0x14e3140;
	Node0x14e3140 -> Node0x14e31b0;
	Node0x14e25f8 -> Node0x14e31b0;
	Node0x14e25f8 -> Node0x14e3220;
	Node0x14e1688 -> Node0x14e3220;
	Node0x14e3220 -> Node0x14e3290;
	Node0x14e2c68 -> Node0x14e3290;
	Node0x14e1688 -> Node0x14e3300;
	Node0x14e25f8 -> Node0x14e3370;
	Node0x14e3300 -> Node0x14e3370;
	Node0x14e3140 -> Node0x14e33e0;
	Node0x14e3370 -> Node0x14e33e0;
	Node0x14e2ea0 -> Node0x14e3450;
	Node0x14e3220 -> Node0x14e3450;
	Node0x14e3370 -> Node0x14e34c0;
	Node0x14e2ce0 -> Node0x14e34c0;
	Node0x14e25f8 -> Node0x14e3530;
	Node0x14e2c68 -> Node0x14e35a0;
	Node0x14e3530 -> Node0x14e35a0;
	Node0x14e35a0 -> Node0x14e3610;
	Node0x14e3300 -> Node0x14e3610;
	Node0x14e2c68 -> Node0x14e3680;
	Node0x14e25f8 -> Node0x14e3680;
	Node0x14e3680 -> Node0x14e36f0;
	Node0x14e3300 -> Node0x14e36f0;
	Node0x14e36f0 -> Node0x14e3760;
	Node0x14e35a0 -> Node0x14e37d0;
	Node0x14e1688 -> Node0x14e37d0;
	Node0x14e37d0 -> Node0x14e3840;
	Node0x14e3680 -> Node0x14e38b0;
	Node0x14e1688 -> Node0x14e38b0;
	Node0x14e2f10 -> Node0x14e3920;
	Node0x14e3290 -> Node0x14e3920;
	Node0x14e3920 -> Node0x14e3990;
	Node0x14e34c0 -> Node0x14e3990;
	Node0x14e3990 -> Node0x14e3a00;
	Node0x14e2ff0 -> Node0x14e3a00;
	Node0x14e3a00 -> Node0x14e3a70;
	Node0x14e30d0 -> Node0x14e3a70;
	Node0x14e3a70 -> Node0x14e3ae0;
	Node0x14e31b0 -> Node0x14e3ae0;
	Node0x14e3ae0 -> Node0x14e3b50;
	Node0x14e33e0 -> Node0x14e3b50;
	Node0x14e3b50 -> Node0x14e3bc0;
	Node0x14e3450 -> Node0x14e3bc0;
	Node0x14e3bc0 -> Node0x14e3c30;
	Node0x14e3610 -> Node0x14e3c30;
	Node0x14e3c30 -> Node0x14e3ca0;
	Node0x14e38b0 -> Node0x14e3ca0;
	Node0x14e3ca0 -> Node0x14e3d10;
	Node0x14e3760 -> Node0x14e3d10;
	Node0x14e3d10 -> Node0x14e3d80;
	Node0x14e3840 -> Node0x14e3d80;
	Node0x14e2e30 -> Node0x14e3df0;
	Node0x14e3d80 -> Node0x14e3df0;
	Node0x14e3df0 -> Node0x14809d8;
	Node0x14809d8 -> Node0x14e3e80;
	Node0x14e12b8 -> Node0x14e40d8;
	Node0x14e10f8 -> Node0x14e4238;
	Node0x14e0b98 -> Node0x14e4348;
}
