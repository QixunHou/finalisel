digraph "DFG for'main' function" {
	Node0x84f348[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x84f3c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x84f458[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x84f4b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x84f938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x84fa18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x84fb18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x84fbd8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x84fc88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x84fee8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x84ffa8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x850108[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x850168[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x855d30[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x855f38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x856098[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8561a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x856268[shape=record, label="  ret i32 0"];
	Node0x84f348 -> Node0x84f3c8;
	Node0x84f3c8 -> Node0x84f458;
	Node0x84f458 -> Node0x84f4b8;
	Node0x84f4b8 -> Node0x84f938;
	Node0x84f938 -> Node0x84fa18;
	Node0x84fa18 -> Node0x84fb18;
	Node0x84fb18 -> Node0x84fbd8;
	Node0x84fbd8 -> Node0x84fc88;
	Node0x84fc88 -> Node0x84fee8;
	Node0x84fee8 -> Node0x84ffa8;
	Node0x84ffa8 -> Node0x850108;
	Node0x850108 -> Node0x850168;
	Node0x850168 -> Node0x855d30;
	Node0x855d30 -> Node0x855f38;
	Node0x855f38 -> Node0x856098;
	Node0x856098 -> Node0x8561a8;
	Node0x8561a8 -> Node0x856268;
edge [color=red]
	Node0x84f348 -> Node0x84f4b8;
	Node0x84f4b8 -> Node0x84f938;
	Node0x84f3c8 -> Node0x84fa18;
	Node0x84fa18 -> Node0x84fb18;
	Node0x84f458 -> Node0x84fbd8;
	Node0x84fbd8 -> Node0x84fc88;
	Node0x84f348 -> Node0x84fee8;
	Node0x84f3c8 -> Node0x84fee8;
	Node0x84f458 -> Node0x84fee8;
	Node0x84f348 -> Node0x84ffa8;
	Node0x84f3c8 -> Node0x850108;
	Node0x84f458 -> Node0x850168;
	Node0x84ffa8 -> Node0x855d30;
	Node0x850108 -> Node0x855d30;
	Node0x850168 -> Node0x855d30;
	Node0x84fbd8 -> Node0x855f38;
	Node0x84fa18 -> Node0x856098;
	Node0x84f4b8 -> Node0x8561a8;
}
