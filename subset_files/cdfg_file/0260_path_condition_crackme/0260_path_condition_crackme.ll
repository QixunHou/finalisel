; ModuleID = '../.././c_source_file/0260_path_condition_crackme.c'
source_filename = "../.././c_source_file/0260_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %2, -1
  %5 = and i32 %4, %0
  %6 = or i32 %4, %1
  %7 = xor i32 %6, -1
  %8 = or i32 %5, %7
  %9 = and i32 %1, %0
  %10 = xor i32 %9, -1
  %11 = xor i32 %10, %2
  %12 = xor i32 %1, -1
  %13 = and i32 %12, %0
  %14 = xor i32 %13, -1
  %15 = and i32 %14, %2
  %16 = xor i32 %2, %0
  %17 = xor i32 %0, -1
  %18 = and i32 %4, %1
  %19 = xor i32 %18, -1
  %20 = and i32 %19, %17
  %21 = shl i32 %20, 2
  %22 = and i32 %4, %14
  %23 = xor i32 %2, %1
  %24 = xor i32 %23, -1
  %25 = or i32 %13, %24
  %26 = and i32 %2, %1
  %27 = xor i32 %26, -1
  %28 = or i32 %12, %0
  %29 = xor i32 %28, -1
  %30 = or i32 %29, %2
  %31 = or i32 %2, %0
  %32 = xor i32 %31, %9
  %33 = and i32 %2, %0
  %34 = or i32 %2, %1
  %35 = xor i32 %34, -1
  %36 = or i32 %33, %35
  %37 = xor i32 %16, -1
  %38 = or i32 %13, %37
  %39 = and i32 %12, %2
  %40 = and i32 %39, %0
  %41 = or i32 %12, %2
  %42 = and i32 %41, %17
  %43 = xor i32 %42, -1
  %44 = xor i32 %40, %43
  %45 = or i32 %16, %1
  %46 = xor i32 %5, %1
  %47 = or i32 %4, %29
  %48 = or i32 %1, %0
  %49 = and i32 %16, %48
  %50 = or i32 %23, %13
  %51 = and i32 %31, %12
  %52 = shl i32 %51, 2
  %53 = xor i32 %48, -1
  %54 = xor i32 %53, %2
  %55 = xor i32 %1, %0
  %56 = and i32 %16, %55
  %57 = and i32 %34, %0
  %58 = xor i32 %55, -1
  %59 = or i32 %4, %58
  %60 = or i32 %9, %2
  %61 = xor i32 %24, %0
  %62 = or i32 %24, %0
  %63 = and i32 %26, %0
  %64 = xor i32 %23, %0
  %65 = xor i32 %64, -1
  %66 = or i32 %63, %65
  %67 = or i32 %6, %17
  %68 = or i32 %18, %13
  %69 = and i32 %16, %10
  %70 = xor i32 %14, %2
  %71 = and i32 %28, %24
  %72 = and i32 %4, %58
  %73 = or i32 %23, %0
  %74 = xor i32 %73, -1
  %75 = or i32 %40, %74
  %76 = xor i32 %33, %1
  %77 = xor i32 %27, %0
  %78 = and i32 %58, %2
  %79 = and i32 %48, %24
  %80 = and i32 %6, %17
  %81 = xor i32 %31, -1
  %82 = or i32 %55, %4
  %83 = xor i32 %33, -1
  %84 = xor i32 %83, %1
  %85 = or i32 %5, %12
  %86 = or i32 %4, %0
  %87 = xor i32 %86, -1
  %88 = and i32 %16, %1
  %89 = or i32 %81, %58
  %90 = and i32 %31, %58
  %91 = or i32 %81, %1
  %92 = or i32 %37, %53
  %93 = xor i32 %35, %0
  %94 = xor i32 %28, %2
  %95 = shl i32 %94, 1
  %96 = or i32 %16, %13
  %97 = xor i32 %5, -1
  %98 = and i32 %55, %97
  %99 = xor i32 %9, %2
  %100 = or i32 %33, %58
  %101 = or i32 %5, %26
  %102 = and i32 %27, %17
  %103 = or i32 %16, %53
  %104 = or i32 %19, %17
  %105 = xor i32 %5, %6
  %106 = and i32 %34, %17
  %107 = xor i32 %63, -1
  %108 = xor i32 %106, %107
  %109 = or i32 %18, %17
  %110 = or i32 %53, %2
  %111 = shl i32 %110, 1
  %112 = xor i32 %29, %2
  %113 = or i32 %33, %1
  %114 = and i32 %6, %0
  %115 = xor i32 %34, %0
  %116 = or i32 %63, %115
  %117 = and i32 %31, %55
  %118 = and i32 %16, %12
  %119 = xor i32 %86, %9
  %120 = and i32 %39, %17
  %121 = and i32 %41, %0
  %122 = xor i32 %121, 2147483647
  %123 = xor i32 %122, %120
  %124 = shl i32 %123, 1
  %125 = and i32 %4, %10
  %126 = or i32 %27, %0
  %127 = or i32 %24, %17
  %128 = shl i32 %127, 2
  %129 = or i32 %16, %9
  %130 = or i32 %7, %0
  %131 = or i32 %37, %29
  %132 = xor i32 %26, %0
  %133 = xor i32 %115, 2147483647
  %134 = xor i32 %133, %63
  %135 = shl i32 %134, 1
  %136 = or i32 %23, %17
  %137 = xor i32 %136, -1
  %138 = or i32 %120, %137
  %139 = or i32 %26, %17
  %140 = or i32 %9, %37
  %141 = and i32 %55, %4
  %142 = xor i32 %7, %0
  %143 = xor i32 %81, %1
  %144 = add i32 %28, 1
  %145 = or i32 %18, %0
  %146 = xor i32 %18, %0
  %147 = or i32 %33, %55
  %148 = and i32 %28, %2
  %149 = and i32 %23, %17
  %150 = or i32 %19, %0
  %151 = xor i32 %33, %48
  %152 = xor i32 %34, %9
  %153 = and i32 %23, %14
  %154 = and i32 %55, %2
  %155 = shl i32 %154, 1
  %156 = or i32 %37, %12
  %157 = or i32 %6, %0
  %158 = shl i32 %157, 1
  %159 = and i32 %86, %55
  %160 = and i32 %83, %58
  %161 = or i32 %26, %0
  %162 = and i32 %23, %10
  %163 = or i32 %7, %17
  %164 = xor i32 %63, %64
  %165 = shl i32 %164, 1
  %166 = xor i32 %87, %1
  %167 = or i32 %16, %58
  %168 = and i32 %37, %58
  %169 = or i32 %120, %121
  %170 = or i32 %58, %2
  %171 = or i32 %81, %12
  %172 = and i32 %48, %2
  %173 = or i32 %55, %2
  %174 = or i32 %9, %35
  %175 = and i32 %16, %58
  %176 = or i32 %5, %1
  %177 = or i32 %9, %87
  %178 = xor i32 %6, %0
  %179 = shl i32 %178, 1
  %180 = or i32 %34, %0
  %181 = shl i32 %180, 1
  %182 = or i32 %87, %1
  %183 = or i32 %37, %58
  %184 = or i32 %23, %29
  %185 = or i32 %27, %17
  %186 = shl i32 %185, 1
  %187 = and i32 %37, %12
  %188 = and i32 %83, %12
  %189 = or i32 %63, %149
  %190 = xor i32 %13, %27
  %191 = and i32 %97, %12
  %192 = and i32 %31, %1
  %193 = and i32 %24, %0
  %194 = or i32 %23, %9
  %195 = xor i32 %48, %2
  %196 = xor i32 %33, %19
  %197 = or i32 %55, %37
  %198 = or i32 %9, %81
  %199 = or i32 %5, %58
  %200 = or i32 %40, %64
  %201 = and i32 %26, %17
  %202 = and i32 %23, %0
  %203 = xor i32 %201, -1
  %204 = xor i32 %202, %203
  %205 = or i32 %4, %53
  %206 = xor i32 %41, %0
  %207 = or i32 %40, %206
  %208 = shl i32 %13, 1
  %209 = or i32 %13, %2
  %210 = and i32 %23, %48
  %211 = and i32 %86, %58
  %212 = shl i32 %211, 1
  %213 = or i32 %87, %58
  %214 = shl i32 %213, 1
  %215 = xor i32 %40, %65
  %216 = and i32 %27, %0
  %217 = xor i32 %206, 2147483647
  %218 = xor i32 %217, %40
  %219 = shl i32 %218, 1
  %220 = or i32 %24, %29
  %221 = and i32 %86, %1
  %222 = and i32 %83, %1
  %223 = or i32 %40, %42
  %224 = or i32 %87, %12
  %225 = and i32 %86, %12
  %226 = and i32 %24, %10
  %227 = or i32 %55, %81
  %228 = and i32 %97, %58
  %229 = and i32 %37, %14
  %230 = or i32 %26, %13
  %231 = or i32 %9, %4
  %232 = or i32 %35, %17
  %233 = or i32 %33, %18
  %234 = add i32 %34, 1
  %235 = xor i32 %57, %203
  %236 = and i32 %10, %2
  %237 = xor i32 %33, %28
  %238 = or i32 %23, %53
  %239 = or i32 %16, %12
  %240 = shl i32 %239, 1
  %241 = or i32 %5, %55
  %242 = or i32 %16, %55
  %243 = xor i32 %13, %2
  %244 = xor i32 %33, %34
  %245 = or i32 %9, %7
  %246 = or i32 %55, %87
  %247 = shl i32 %246, 1
  %248 = and i32 %19, %0
  %249 = shl i32 %248, 1
  %250 = and i32 %24, %14
  %251 = xor i32 %149, %107
  %252 = xor i32 %13, %19
  %253 = shl i32 %252, 1
  %254 = or i32 %201, %57
  %255 = or i32 %33, %29
  %256 = or i32 %63, %106
  %257 = xor i32 %86, %1
  %258 = or i32 %33, %53
  %259 = xor i32 %97, %1
  %260 = xor i32 %120, %136
  %261 = or i32 %201, %202
  %262 = or i32 %13, %4
  %263 = and i32 %55, %83
  %264 = and i32 %37, %1
  %265 = or i32 %16, %29
  %266 = or i32 %37, %1
  %267 = or i32 %33, %12
  %268 = shl i32 %267, 1
  %269 = and i32 %97, %1
  %270 = or i32 %24, %53
  %271 = and i32 %48, %4
  %272 = xor i32 %19, %0
  %273 = and i32 %28, %4
  %274 = or i32 %34, %17
  %275 = and i32 %48, %37
  %276 = shl i32 %275, 1
  %277 = and i32 %24, %17
  %278 = xor i32 %5, %27
  %279 = and i32 %23, %28
  %280 = shl i32 %202, 1
  %281 = xor i32 %6, %9
  %282 = xor i32 %31, %1
  %283 = or i32 %35, %0
  %284 = shl i32 %283, 1
  %285 = and i32 %55, %37
  %286 = xor i32 %40, %73
  %287 = and i32 %35, %17
  %288 = and i32 %18, %17
  %289 = mul i32 %288, -30
  %290 = and i32 %35, %0
  %291 = mul i32 %290, -18
  %292 = and i32 %18, %0
  %293 = mul i32 %292, -9
  %294 = and i32 %7, %17
  %295 = mul i32 %294, -24
  %296 = mul i32 %201, -12
  %297 = and i32 %7, %0
  %298 = shl i32 %297, 2
  %299 = mul i32 %63, -14
  %300 = add i32 %170, %10
  %301 = add i32 %300, %87
  %302 = add i32 %301, %26
  %303 = add i32 %302, %22
  %304 = add i32 %303, %278
  %305 = add i32 %304, %274
  %306 = add i32 %305, %228
  %307 = add i32 %306, %222
  %308 = add i32 %307, %193
  %309 = add i32 %308, %175
  %310 = add i32 %309, %156
  %311 = add i32 %310, %151
  %312 = add i32 %311, %147
  %313 = add i32 %312, %129
  %314 = add i32 %313, %118
  %315 = add i32 %314, %106
  %316 = add i32 %315, %98
  %317 = add i32 %316, %71
  %318 = add i32 %317, %50
  %319 = add i32 %318, %25
  %320 = add i32 %319, %200
  %321 = shl i32 %320, 1
  %322 = add i32 %321, -4
  %323 = sub i32 %73, %167
  %324 = add i32 %323, %44
  %325 = add i32 %324, %116
  %326 = mul i32 %325, 3
  %327 = sub i32 %257, %287
  %328 = add i32 %327, %162
  %329 = add i32 %328, %102
  %330 = mul i32 %329, 5
  %331 = add i32 %49, %59
  %332 = add i32 %331, %233
  %333 = shl i32 %332, 2
  %334 = sub i32 -5, %1
  %335 = add i32 %334, %12
  %336 = add i32 %335, %28
  %337 = add i32 %336, %144
  %338 = add i32 %337, %9
  %339 = sub i32 %338, %11
  %340 = add i32 %339, %15
  %341 = add i32 %340, %27
  %342 = sub i32 %341, %30
  %343 = add i32 %342, %47
  %344 = add i32 %343, %54
  %345 = add i32 %344, %34
  %346 = sub i32 %345, %60
  %347 = sub i32 %346, %70
  %348 = sub i32 %347, %72
  %349 = add i32 %348, %78
  %350 = add i32 %349, %81
  %351 = sub i32 %350, %82
  %352 = sub i32 %351, %99
  %353 = add i32 %352, %112
  %354 = add i32 %353, %19
  %355 = add i32 %354, %125
  %356 = add i32 %355, %6
  %357 = sub i32 %356, %141
  %358 = add i32 %357, %148
  %359 = add i32 %358, %172
  %360 = add i32 %359, %173
  %361 = add i32 %360, %195
  %362 = sub i32 %361, %205
  %363 = sub i32 %362, %208
  %364 = sub i32 %363, %209
  %365 = sub i32 %364, %231
  %366 = add i32 %365, %234
  %367 = add i32 %366, %236
  %368 = sub i32 %367, %243
  %369 = sub i32 %368, %262
  %370 = sub i32 %369, %271
  %371 = sub i32 %370, %273
  %372 = sub i32 %371, %31
  %373 = sub i32 %372, %32
  %374 = add i32 %373, %36
  %375 = sub i32 %374, %38
  %376 = add i32 %375, %45
  %377 = sub i32 %376, %46
  %378 = sub i32 %377, %56
  %379 = add i32 %378, %57
  %380 = add i32 %379, %61
  %381 = sub i32 %380, %62
  %382 = add i32 %381, %67
  %383 = add i32 %382, %68
  %384 = sub i32 %383, %69
  %385 = sub i32 %384, %76
  %386 = sub i32 %385, %77
  %387 = sub i32 %386, %79
  %388 = add i32 %387, %80
  %389 = add i32 %388, %84
  %390 = sub i32 %389, %85
  %391 = add i32 %390, %88
  %392 = sub i32 %391, %89
  %393 = add i32 %392, %90
  %394 = sub i32 %393, %91
  %395 = sub i32 %394, %92
  %396 = sub i32 %395, %93
  %397 = sub i32 %396, %95
  %398 = sub i32 %397, %96
  %399 = add i32 %398, %100
  %400 = add i32 %399, %101
  %401 = sub i32 %400, %103
  %402 = add i32 %401, %104
  %403 = sub i32 %402, %105
  %404 = add i32 %403, %109
  %405 = sub i32 %404, %111
  %406 = sub i32 %405, %113
  %407 = add i32 %406, %114
  %408 = add i32 %407, %117
  %409 = sub i32 %408, %119
  %410 = add i32 %409, %126
  %411 = sub i32 %410, %130
  %412 = add i32 %411, %131
  %413 = add i32 %412, %132
  %414 = add i32 %413, %139
  %415 = sub i32 %414, %140
  %416 = sub i32 %415, %142
  %417 = add i32 %416, %143
  %418 = sub i32 %417, %145
  %419 = sub i32 %418, %146
  %420 = sub i32 %419, %149
  %421 = sub i32 %420, %150
  %422 = sub i32 %421, %152
  %423 = sub i32 %422, %153
  %424 = sub i32 %423, %155
  %425 = add i32 %424, %159
  %426 = sub i32 %425, %160
  %427 = sub i32 %426, %161
  %428 = sub i32 %427, %163
  %429 = sub i32 %428, %166
  %430 = sub i32 %429, %168
  %431 = sub i32 %430, %171
  %432 = add i32 %431, %174
  %433 = add i32 %432, %176
  %434 = sub i32 %433, %177
  %435 = add i32 %434, %136
  %436 = add i32 %435, %182
  %437 = sub i32 %436, %183
  %438 = add i32 %437, %184
  %439 = sub i32 %438, %187
  %440 = add i32 %439, %188
  %441 = add i32 %440, %190
  %442 = add i32 %441, %191
  %443 = add i32 %442, %64
  %444 = add i32 %443, %192
  %445 = sub i32 %444, %194
  %446 = sub i32 %445, %196
  %447 = add i32 %446, %197
  %448 = add i32 %447, %198
  %449 = add i32 %448, %199
  %450 = sub i32 %449, %210
  %451 = add i32 %450, %216
  %452 = sub i32 %451, %220
  %453 = sub i32 %452, %221
  %454 = add i32 %453, %224
  %455 = add i32 %454, %225
  %456 = sub i32 %455, %226
  %457 = sub i32 %456, %227
  %458 = sub i32 %457, %229
  %459 = add i32 %458, %230
  %460 = add i32 %459, %232
  %461 = sub i32 %460, %237
  %462 = add i32 %461, %238
  %463 = sub i32 %462, %241
  %464 = add i32 %463, %242
  %465 = sub i32 %464, %244
  %466 = sub i32 %465, %245
  %467 = sub i32 %466, %250
  %468 = sub i32 %467, %255
  %469 = sub i32 %468, %258
  %470 = sub i32 %469, %259
  %471 = add i32 %470, %263
  %472 = sub i32 %471, %264
  %473 = sub i32 %472, %265
  %474 = sub i32 %473, %266
  %475 = sub i32 %474, %269
  %476 = add i32 %475, %270
  %477 = add i32 %476, %272
  %478 = sub i32 %477, %277
  %479 = sub i32 %478, %279
  %480 = add i32 %479, %281
  %481 = add i32 %480, %282
  %482 = sub i32 %481, %285
  %483 = sub i32 %482, %21
  %484 = sub i32 %483, %52
  %485 = sub i32 %484, %66
  %486 = add i32 %485, %75
  %487 = sub i32 %486, %108
  %488 = sub i32 %487, %128
  %489 = add i32 %488, %138
  %490 = sub i32 %489, %158
  %491 = sub i32 %490, %169
  %492 = sub i32 %491, %179
  %493 = sub i32 %492, %181
  %494 = sub i32 %493, %186
  %495 = add i32 %494, %189
  %496 = add i32 %495, %204
  %497 = add i32 %496, %207
  %498 = sub i32 %497, %212
  %499 = sub i32 %498, %214
  %500 = add i32 %499, %215
  %501 = sub i32 %500, %223
  %502 = add i32 %501, %235
  %503 = sub i32 %502, %240
  %504 = sub i32 %503, %247
  %505 = sub i32 %504, %249
  %506 = add i32 %505, %251
  %507 = sub i32 %506, %253
  %508 = sub i32 %507, %254
  %509 = add i32 %508, %256
  %510 = add i32 %509, %260
  %511 = add i32 %510, %261
  %512 = sub i32 %511, %268
  %513 = sub i32 %512, %276
  %514 = sub i32 %513, %280
  %515 = sub i32 %514, %284
  %516 = sub i32 %515, %286
  %517 = add i32 %516, %289
  %518 = add i32 %517, %291
  %519 = add i32 %518, %293
  %520 = add i32 %519, %295
  %521 = add i32 %520, %296
  %522 = sub i32 %521, %298
  %523 = add i32 %522, %299
  %524 = sub i32 %523, %165
  %525 = sub i32 %524, %124
  %526 = sub i32 %525, %135
  %527 = sub i32 %526, %219
  %528 = add i32 %527, %333
  %529 = add i32 %528, %330
  %530 = add i32 %529, %326
  %531 = add i32 %530, %322
  %532 = icmp eq i32 %8, %531
  %533 = select i1 %532, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %534 = tail call i32 @puts(i8* nonnull dereferenceable(1) %533)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
