digraph "DFG for'main' function" {
	Node0x215fc58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x215fcd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x215fd68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x215fdc8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x215fe78[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x21602a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2160388[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x2160488[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2160548[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x21605f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21606b8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x2160768[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x215ab70[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x2160968[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21618d8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2161f48[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2161fa8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x2162020[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x2162090[shape=record, label="  %15 = add i32 %14, 1"];
	Node0x2162100[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x2162170[shape=record, label="  %17 = or i32 %13, %16"];
	Node0x21621e0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x2162250[shape=record, label="  %19 = sub i32 %15, %18"];
	Node0x21622c0[shape=record, label="  %20 = and i32 %12, %11"];
	Node0x2162330[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x21623a0[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0x2162410[shape=record, label="  %23 = or i32 %11, %22"];
	Node0x2162480[shape=record, label="  %24 = or i32 %12, %11"];
	Node0x21624f0[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x2162560[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x21625d0[shape=record, label="  %27 = and i32 %11, %22"];
	Node0x2162640[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0x21626b0[shape=record, label="  %29 = or i32 %13, %10"];
	Node0x2162720[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x2162790[shape=record, label="  %31 = and i32 %13, %16"];
	Node0x2162800[shape=record, label="  %32 = shl i32 %29, 1"];
	Node0x2162870[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x21628e0[shape=record, label="  %34 = xor i32 %18, -2"];
	Node0x2162950[shape=record, label="  %35 = add i32 %31, %27"];
	Node0x21629c0[shape=record, label="  %36 = mul i32 %35, -3"];
	Node0x2162a30[shape=record, label="  %37 = add i32 %28, %13"];
	Node0x2162aa0[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x2162b10[shape=record, label="  %39 = add i32 %11, 5"];
	Node0x2162b80[shape=record, label="  %40 = sub i32 %39, %12"];
	Node0x2162bf0[shape=record, label="  %41 = add i32 %40, %21"];
	Node0x2162c60[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x2162cd0[shape=record, label="  %43 = add i32 %42, %14"];
	Node0x2162d40[shape=record, label="  %44 = sub i32 %43, %20"];
	Node0x2162db0[shape=record, label="  %45 = sub i32 %44, %29"];
	Node0x2162e20[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x2162e90[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x2162f00[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x2162f70[shape=record, label="  %49 = sub i32 %48, %26"];
	Node0x2162fe0[shape=record, label="  %50 = add i32 %49, %33"];
	Node0x2163050[shape=record, label="  %51 = add i32 %50, %34"];
	Node0x21630c0[shape=record, label="  %52 = add i32 %51, %36"];
	Node0x2163130[shape=record, label="  %53 = add i32 %52, %38"];
	Node0x21631a0[shape=record, label="  %54 = icmp eq i32 %19, %53"];
	Node0x20ff8b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2163230[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x21634d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2163638[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2163748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2163858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2163918[shape=record, label="  ret i32 0"];
	Node0x215fc58 -> Node0x215fcd8;
	Node0x215fcd8 -> Node0x215fd68;
	Node0x215fd68 -> Node0x215fdc8;
	Node0x215fdc8 -> Node0x215fe78;
	Node0x215fe78 -> Node0x21602a8;
	Node0x21602a8 -> Node0x2160388;
	Node0x2160388 -> Node0x2160488;
	Node0x2160488 -> Node0x2160548;
	Node0x2160548 -> Node0x21605f8;
	Node0x21605f8 -> Node0x21606b8;
	Node0x21606b8 -> Node0x2160768;
	Node0x2160768 -> Node0x215ab70;
	Node0x215ab70 -> Node0x2160968;
	Node0x2160968 -> Node0x21618d8;
	Node0x21618d8 -> Node0x2161f48;
	Node0x2161f48 -> Node0x2161fa8;
	Node0x2161fa8 -> Node0x2162020;
	Node0x2162020 -> Node0x2162090;
	Node0x2162090 -> Node0x2162100;
	Node0x2162100 -> Node0x2162170;
	Node0x2162170 -> Node0x21621e0;
	Node0x21621e0 -> Node0x2162250;
	Node0x2162250 -> Node0x21622c0;
	Node0x21622c0 -> Node0x2162330;
	Node0x2162330 -> Node0x21623a0;
	Node0x21623a0 -> Node0x2162410;
	Node0x2162410 -> Node0x2162480;
	Node0x2162480 -> Node0x21624f0;
	Node0x21624f0 -> Node0x2162560;
	Node0x2162560 -> Node0x21625d0;
	Node0x21625d0 -> Node0x2162640;
	Node0x2162640 -> Node0x21626b0;
	Node0x21626b0 -> Node0x2162720;
	Node0x2162720 -> Node0x2162790;
	Node0x2162790 -> Node0x2162800;
	Node0x2162800 -> Node0x2162870;
	Node0x2162870 -> Node0x21628e0;
	Node0x21628e0 -> Node0x2162950;
	Node0x2162950 -> Node0x21629c0;
	Node0x21629c0 -> Node0x2162a30;
	Node0x2162a30 -> Node0x2162aa0;
	Node0x2162aa0 -> Node0x2162b10;
	Node0x2162b10 -> Node0x2162b80;
	Node0x2162b80 -> Node0x2162bf0;
	Node0x2162bf0 -> Node0x2162c60;
	Node0x2162c60 -> Node0x2162cd0;
	Node0x2162cd0 -> Node0x2162d40;
	Node0x2162d40 -> Node0x2162db0;
	Node0x2162db0 -> Node0x2162e20;
	Node0x2162e20 -> Node0x2162e90;
	Node0x2162e90 -> Node0x2162f00;
	Node0x2162f00 -> Node0x2162f70;
	Node0x2162f70 -> Node0x2162fe0;
	Node0x2162fe0 -> Node0x2163050;
	Node0x2163050 -> Node0x21630c0;
	Node0x21630c0 -> Node0x2163130;
	Node0x2163130 -> Node0x21631a0;
	Node0x21631a0 -> Node0x20ff8b8;
	Node0x20ff8b8 -> Node0x2163230;
	Node0x2163230 -> Node0x21634d8;
	Node0x21634d8 -> Node0x2163638;
	Node0x2163638 -> Node0x2163748;
	Node0x2163748 -> Node0x2163858;
	Node0x2163858 -> Node0x2163918;
edge [color=red]
	Node0x215fc58 -> Node0x215fe78;
	Node0x215fe78 -> Node0x21602a8;
	Node0x215fcd8 -> Node0x2160388;
	Node0x2160388 -> Node0x2160488;
	Node0x215fd68 -> Node0x2160548;
	Node0x2160548 -> Node0x21605f8;
	Node0x215fdc8 -> Node0x21606b8;
	Node0x21606b8 -> Node0x2160768;
	Node0x215fc58 -> Node0x215ab70;
	Node0x215fcd8 -> Node0x215ab70;
	Node0x215fd68 -> Node0x215ab70;
	Node0x215fdc8 -> Node0x215ab70;
	Node0x215fc58 -> Node0x2160968;
	Node0x215fcd8 -> Node0x21618d8;
	Node0x215fd68 -> Node0x2161f48;
	Node0x215fdc8 -> Node0x2161fa8;
	Node0x2161f48 -> Node0x2162020;
	Node0x21618d8 -> Node0x2162020;
	Node0x2162020 -> Node0x2162090;
	Node0x2160968 -> Node0x2162100;
	Node0x2161fa8 -> Node0x2162170;
	Node0x2162100 -> Node0x2162170;
	Node0x2162170 -> Node0x21621e0;
	Node0x2162090 -> Node0x2162250;
	Node0x21621e0 -> Node0x2162250;
	Node0x2161f48 -> Node0x21622c0;
	Node0x21618d8 -> Node0x21622c0;
	Node0x21622c0 -> Node0x2162330;
	Node0x2161f48 -> Node0x21623a0;
	Node0x21618d8 -> Node0x2162410;
	Node0x21623a0 -> Node0x2162410;
	Node0x2161f48 -> Node0x2162480;
	Node0x21618d8 -> Node0x2162480;
	Node0x2162480 -> Node0x21624f0;
	Node0x21624f0 -> Node0x2162560;
	Node0x21618d8 -> Node0x21625d0;
	Node0x21623a0 -> Node0x21625d0;
	Node0x2161fa8 -> Node0x2162640;
	Node0x2160968 -> Node0x2162640;
	Node0x2161fa8 -> Node0x21626b0;
	Node0x2160968 -> Node0x21626b0;
	Node0x2161fa8 -> Node0x2162720;
	Node0x2160968 -> Node0x2162720;
	Node0x2161fa8 -> Node0x2162790;
	Node0x2162100 -> Node0x2162790;
	Node0x21626b0 -> Node0x2162800;
	Node0x2162800 -> Node0x2162870;
	Node0x21621e0 -> Node0x21628e0;
	Node0x2162790 -> Node0x2162950;
	Node0x21625d0 -> Node0x2162950;
	Node0x2162950 -> Node0x21629c0;
	Node0x2162640 -> Node0x2162a30;
	Node0x2161fa8 -> Node0x2162a30;
	Node0x2162a30 -> Node0x2162aa0;
	Node0x21618d8 -> Node0x2162b10;
	Node0x2162b10 -> Node0x2162b80;
	Node0x2161f48 -> Node0x2162b80;
	Node0x2162b80 -> Node0x2162bf0;
	Node0x2162330 -> Node0x2162bf0;
	Node0x2162bf0 -> Node0x2162c60;
	Node0x2162410 -> Node0x2162c60;
	Node0x2162c60 -> Node0x2162cd0;
	Node0x2162020 -> Node0x2162cd0;
	Node0x2162cd0 -> Node0x2162d40;
	Node0x21622c0 -> Node0x2162d40;
	Node0x2162d40 -> Node0x2162db0;
	Node0x21626b0 -> Node0x2162db0;
	Node0x2162db0 -> Node0x2162e20;
	Node0x2162720 -> Node0x2162e20;
	Node0x2162e20 -> Node0x2162e90;
	Node0x2162640 -> Node0x2162e90;
	Node0x2162e90 -> Node0x2162f00;
	Node0x2162790 -> Node0x2162f00;
	Node0x2162f00 -> Node0x2162f70;
	Node0x2162560 -> Node0x2162f70;
	Node0x2162f70 -> Node0x2162fe0;
	Node0x2162870 -> Node0x2162fe0;
	Node0x2162fe0 -> Node0x2163050;
	Node0x21628e0 -> Node0x2163050;
	Node0x2163050 -> Node0x21630c0;
	Node0x21629c0 -> Node0x21630c0;
	Node0x21630c0 -> Node0x2163130;
	Node0x2162aa0 -> Node0x2163130;
	Node0x2162250 -> Node0x21631a0;
	Node0x2163130 -> Node0x21631a0;
	Node0x21631a0 -> Node0x20ff8b8;
	Node0x20ff8b8 -> Node0x2163230;
	Node0x21606b8 -> Node0x21634d8;
	Node0x2160548 -> Node0x2163638;
	Node0x2160388 -> Node0x2163748;
	Node0x215fe78 -> Node0x2163858;
}
