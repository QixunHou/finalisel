digraph "DFG for'main' function" {
	Node0xb0ad88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb0ae08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb0ae98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xb0b2f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xb0b3d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xb0b4f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb0b730[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xb0b7e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb0c758[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb0cde0[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0xb0ce50[shape=record, label="  %9 = sub i32 1, %8"];
	Node0xb0cec0[shape=record, label="  %10 = or i32 %7, %6"];
	Node0xb0cf30[shape=record, label="  %11 = and i32 %7, %6"];
	Node0xb0cfa0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0xb0d010[shape=record, label="  %13 = and i32 %6, %12"];
	Node0xb0d080[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0xb0d0f0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0xb0d160[shape=record, label="  %16 = shl i32 %6, 1"];
	Node0xb0d1d0[shape=record, label="  %17 = shl i32 %10, 2"];
	Node0xb0d240[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0xb0d2b0[shape=record, label="  %19 = xor i32 %6, -1"];
	Node0xb0d320[shape=record, label="  %20 = and i32 %7, %19"];
	Node0xb0d390[shape=record, label="  %21 = mul i32 %20, -5"];
	Node0xb0d400[shape=record, label="  %22 = shl i32 %13, 2"];
	Node0xb0d470[shape=record, label="  %23 = mul i32 %11, -6"];
	Node0xb0d4e0[shape=record, label="  %24 = add i32 %16, %12"];
	Node0xb0d550[shape=record, label="  %25 = sub i32 %24, %11"];
	Node0xb0d5c0[shape=record, label="  %26 = add i32 %25, %21"];
	Node0xb0d630[shape=record, label="  %27 = sub i32 %26, %22"];
	Node0xb0d6a0[shape=record, label="  %28 = add i32 %27, %23"];
	Node0xb0d710[shape=record, label="  %29 = add i32 %28, %15"];
	Node0xb0d780[shape=record, label="  %30 = sub i32 %29, %18"];
	Node0xb0d7f0[shape=record, label="  %31 = icmp eq i32 %9, %30"];
	Node0xaab9d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb0da90[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0xb0dce8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb0de48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xb0df08[shape=record, label="  ret i32 0"];
	Node0xb0ad88 -> Node0xb0ae08;
	Node0xb0ae08 -> Node0xb0ae98;
	Node0xb0ae98 -> Node0xb0b2f8;
	Node0xb0b2f8 -> Node0xb0b3d8;
	Node0xb0b3d8 -> Node0xb0b4f8;
	Node0xb0b4f8 -> Node0xb0b730;
	Node0xb0b730 -> Node0xb0b7e8;
	Node0xb0b7e8 -> Node0xb0c758;
	Node0xb0c758 -> Node0xb0cde0;
	Node0xb0cde0 -> Node0xb0ce50;
	Node0xb0ce50 -> Node0xb0cec0;
	Node0xb0cec0 -> Node0xb0cf30;
	Node0xb0cf30 -> Node0xb0cfa0;
	Node0xb0cfa0 -> Node0xb0d010;
	Node0xb0d010 -> Node0xb0d080;
	Node0xb0d080 -> Node0xb0d0f0;
	Node0xb0d0f0 -> Node0xb0d160;
	Node0xb0d160 -> Node0xb0d1d0;
	Node0xb0d1d0 -> Node0xb0d240;
	Node0xb0d240 -> Node0xb0d2b0;
	Node0xb0d2b0 -> Node0xb0d320;
	Node0xb0d320 -> Node0xb0d390;
	Node0xb0d390 -> Node0xb0d400;
	Node0xb0d400 -> Node0xb0d470;
	Node0xb0d470 -> Node0xb0d4e0;
	Node0xb0d4e0 -> Node0xb0d550;
	Node0xb0d550 -> Node0xb0d5c0;
	Node0xb0d5c0 -> Node0xb0d630;
	Node0xb0d630 -> Node0xb0d6a0;
	Node0xb0d6a0 -> Node0xb0d710;
	Node0xb0d710 -> Node0xb0d780;
	Node0xb0d780 -> Node0xb0d7f0;
	Node0xb0d7f0 -> Node0xaab9d8;
	Node0xaab9d8 -> Node0xb0da90;
	Node0xb0da90 -> Node0xb0dce8;
	Node0xb0dce8 -> Node0xb0de48;
	Node0xb0de48 -> Node0xb0df08;
edge [color=red]
	Node0xb0ad88 -> Node0xb0ae98;
	Node0xb0ae98 -> Node0xb0b2f8;
	Node0xb0ae08 -> Node0xb0b3d8;
	Node0xb0b3d8 -> Node0xb0b4f8;
	Node0xb0ad88 -> Node0xb0b730;
	Node0xb0ae08 -> Node0xb0b730;
	Node0xb0ad88 -> Node0xb0b7e8;
	Node0xb0ae08 -> Node0xb0c758;
	Node0xb0c758 -> Node0xb0cde0;
	Node0xb0cde0 -> Node0xb0ce50;
	Node0xb0c758 -> Node0xb0cec0;
	Node0xb0b7e8 -> Node0xb0cec0;
	Node0xb0c758 -> Node0xb0cf30;
	Node0xb0b7e8 -> Node0xb0cf30;
	Node0xb0c758 -> Node0xb0cfa0;
	Node0xb0b7e8 -> Node0xb0d010;
	Node0xb0cfa0 -> Node0xb0d010;
	Node0xb0d010 -> Node0xb0d080;
	Node0xb0d080 -> Node0xb0d0f0;
	Node0xb0b7e8 -> Node0xb0d160;
	Node0xb0cec0 -> Node0xb0d1d0;
	Node0xb0d1d0 -> Node0xb0d240;
	Node0xb0b7e8 -> Node0xb0d2b0;
	Node0xb0c758 -> Node0xb0d320;
	Node0xb0d2b0 -> Node0xb0d320;
	Node0xb0d320 -> Node0xb0d390;
	Node0xb0d010 -> Node0xb0d400;
	Node0xb0cf30 -> Node0xb0d470;
	Node0xb0d160 -> Node0xb0d4e0;
	Node0xb0cfa0 -> Node0xb0d4e0;
	Node0xb0d4e0 -> Node0xb0d550;
	Node0xb0cf30 -> Node0xb0d550;
	Node0xb0d550 -> Node0xb0d5c0;
	Node0xb0d390 -> Node0xb0d5c0;
	Node0xb0d5c0 -> Node0xb0d630;
	Node0xb0d400 -> Node0xb0d630;
	Node0xb0d630 -> Node0xb0d6a0;
	Node0xb0d470 -> Node0xb0d6a0;
	Node0xb0d6a0 -> Node0xb0d710;
	Node0xb0d0f0 -> Node0xb0d710;
	Node0xb0d710 -> Node0xb0d780;
	Node0xb0d240 -> Node0xb0d780;
	Node0xb0ce50 -> Node0xb0d7f0;
	Node0xb0d780 -> Node0xb0d7f0;
	Node0xb0d7f0 -> Node0xaab9d8;
	Node0xaab9d8 -> Node0xb0da90;
	Node0xb0b3d8 -> Node0xb0dce8;
	Node0xb0ae98 -> Node0xb0de48;
}
