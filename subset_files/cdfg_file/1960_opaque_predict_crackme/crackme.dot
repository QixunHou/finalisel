digraph "DFG for'crackme' function" {
	Node0x20501f0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x2050260[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x20502d0[shape=record, label="  %7 = and i32 %2, %1"];
	Node0x2050370[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x2050410[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x2050480[shape=record, label="  %10 = xor i32 %0, -1"];
	Node0x20504f0[shape=record, label="  %11 = and i32 %10, %3"];
	Node0x2050560[shape=record, label="  %12 = xor i32 %3, %0"];
	Node0x2050600[shape=record, label="  %13 = add i32 %6, 3"];
	Node0x2050670[shape=record, label="  %14 = add i32 %13, %11"];
	Node0x20506e0[shape=record, label="  %15 = add i32 %14, %12"];
	Node0x2050750[shape=record, label="  %16 = add i32 %15, %9"];
	Node0x20507c0[shape=record, label="  %17 = or i32 %2, %1"];
	Node0x2050860[shape=record, label="  %18 = xor i32 %1, 2147483647"];
	Node0x20508d0[shape=record, label="  %19 = and i32 %18, %2"];
	Node0x2050940[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x20509b0[shape=record, label="  %21 = shl i32 %6, 1"];
	Node0x2050a50[shape=record, label="  %22 = mul i32 %7, -6"];
	Node0x2050ac0[shape=record, label="  %23 = or i32 %10, %3"];
	Node0x2050b30[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x2050ba0[shape=record, label="  %25 = xor i32 %3, -1"];
	Node0x2050c10[shape=record, label="  %26 = and i32 %3, %0"];
	Node0x2050c80[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x2050cf0[shape=record, label="  %28 = or i32 %3, %0"];
	Node0x2050d60[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x2050e00[shape=record, label="  %30 = mul i32 %29, -3"];
	Node0x2050ea0[shape=record, label="  %31 = shl i32 %23, 2"];
	Node0x2050f40[shape=record, label="  %32 = xor i32 %31, -4"];
	Node0x20511c0[shape=record, label="  %33 = add i32 %2, %1"];
	Node0x2051230[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x20512a0[shape=record, label="  %35 = add i32 %5, %10"];
	Node0x2051310[shape=record, label="  %36 = add i32 %35, %17"];
	Node0x2051380[shape=record, label="  %37 = add i32 %36, %25"];
	Node0x20513f0[shape=record, label="  %38 = sub i32 %37, %20"];
	Node0x2051460[shape=record, label="  %39 = sub i32 %38, %21"];
	Node0x20514d0[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x2051540[shape=record, label="  %41 = add i32 %40, %27"];
	Node0x20515b0[shape=record, label="  %42 = add i32 %41, %12"];
	Node0x2051620[shape=record, label="  %43 = sub i32 %42, %11"];
	Node0x2051690[shape=record, label="  %44 = add i32 %43, %34"];
	Node0x2051700[shape=record, label="  %45 = sub i32 %44, %24"];
	Node0x2051770[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x20517e0[shape=record, label="  %47 = sub i32 %46, %32"];
	Node0x2051850[shape=record, label="  %48 = icmp eq i32 %16, %47"];
	Node0x1ff0268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2051cf0[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x2051d40[shape=record, label="  ret void"];
	Node0x20501f0 -> Node0x2050260;
	Node0x2050260 -> Node0x20502d0;
	Node0x20502d0 -> Node0x2050370;
	Node0x2050370 -> Node0x2050410;
	Node0x2050410 -> Node0x2050480;
	Node0x2050480 -> Node0x20504f0;
	Node0x20504f0 -> Node0x2050560;
	Node0x2050560 -> Node0x2050600;
	Node0x2050600 -> Node0x2050670;
	Node0x2050670 -> Node0x20506e0;
	Node0x20506e0 -> Node0x2050750;
	Node0x2050750 -> Node0x20507c0;
	Node0x20507c0 -> Node0x2050860;
	Node0x2050860 -> Node0x20508d0;
	Node0x20508d0 -> Node0x2050940;
	Node0x2050940 -> Node0x20509b0;
	Node0x20509b0 -> Node0x2050a50;
	Node0x2050a50 -> Node0x2050ac0;
	Node0x2050ac0 -> Node0x2050b30;
	Node0x2050b30 -> Node0x2050ba0;
	Node0x2050ba0 -> Node0x2050c10;
	Node0x2050c10 -> Node0x2050c80;
	Node0x2050c80 -> Node0x2050cf0;
	Node0x2050cf0 -> Node0x2050d60;
	Node0x2050d60 -> Node0x2050e00;
	Node0x2050e00 -> Node0x2050ea0;
	Node0x2050ea0 -> Node0x2050f40;
	Node0x2050f40 -> Node0x20511c0;
	Node0x20511c0 -> Node0x2051230;
	Node0x2051230 -> Node0x20512a0;
	Node0x20512a0 -> Node0x2051310;
	Node0x2051310 -> Node0x2051380;
	Node0x2051380 -> Node0x20513f0;
	Node0x20513f0 -> Node0x2051460;
	Node0x2051460 -> Node0x20514d0;
	Node0x20514d0 -> Node0x2051540;
	Node0x2051540 -> Node0x20515b0;
	Node0x20515b0 -> Node0x2051620;
	Node0x2051620 -> Node0x2051690;
	Node0x2051690 -> Node0x2051700;
	Node0x2051700 -> Node0x2051770;
	Node0x2051770 -> Node0x20517e0;
	Node0x20517e0 -> Node0x2051850;
	Node0x2051850 -> Node0x1ff0268;
	Node0x1ff0268 -> Node0x2051cf0;
	Node0x2051cf0 -> Node0x2051d40;
edge [color=red]
	Node0x20501f0 -> Node0x2050260;
	Node0x20502d0 -> Node0x2050370;
	Node0x2050370 -> Node0x2050410;
	Node0x2050480 -> Node0x20504f0;
	Node0x2050260 -> Node0x2050600;
	Node0x2050600 -> Node0x2050670;
	Node0x20504f0 -> Node0x2050670;
	Node0x2050670 -> Node0x20506e0;
	Node0x2050560 -> Node0x20506e0;
	Node0x20506e0 -> Node0x2050750;
	Node0x2050410 -> Node0x2050750;
	Node0x2050860 -> Node0x20508d0;
	Node0x20508d0 -> Node0x2050940;
	Node0x2050260 -> Node0x20509b0;
	Node0x20502d0 -> Node0x2050a50;
	Node0x2050480 -> Node0x2050ac0;
	Node0x2050ac0 -> Node0x2050b30;
	Node0x2050c10 -> Node0x2050c80;
	Node0x2050cf0 -> Node0x2050d60;
	Node0x2050d60 -> Node0x2050e00;
	Node0x2050ac0 -> Node0x2050ea0;
	Node0x2050ea0 -> Node0x2050f40;
	Node0x20511c0 -> Node0x2051230;
	Node0x20501f0 -> Node0x20512a0;
	Node0x2050480 -> Node0x20512a0;
	Node0x20512a0 -> Node0x2051310;
	Node0x20507c0 -> Node0x2051310;
	Node0x2051310 -> Node0x2051380;
	Node0x2050ba0 -> Node0x2051380;
	Node0x2051380 -> Node0x20513f0;
	Node0x2050940 -> Node0x20513f0;
	Node0x20513f0 -> Node0x2051460;
	Node0x20509b0 -> Node0x2051460;
	Node0x2051460 -> Node0x20514d0;
	Node0x2050a50 -> Node0x20514d0;
	Node0x20514d0 -> Node0x2051540;
	Node0x2050c80 -> Node0x2051540;
	Node0x2051540 -> Node0x20515b0;
	Node0x2050560 -> Node0x20515b0;
	Node0x20515b0 -> Node0x2051620;
	Node0x20504f0 -> Node0x2051620;
	Node0x2051620 -> Node0x2051690;
	Node0x2051230 -> Node0x2051690;
	Node0x2051690 -> Node0x2051700;
	Node0x2050b30 -> Node0x2051700;
	Node0x2051700 -> Node0x2051770;
	Node0x2050e00 -> Node0x2051770;
	Node0x2051770 -> Node0x20517e0;
	Node0x2050f40 -> Node0x20517e0;
	Node0x2050750 -> Node0x2051850;
	Node0x20517e0 -> Node0x2051850;
	Node0x2051850 -> Node0x1ff0268;
	Node0x1ff0268 -> Node0x2051cf0;
}
