digraph "DFG for'main' function" {
	Node0x2051f08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2051f88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2052018[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2052078[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x2052128[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x2052558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2052638[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x2052738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20527f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x20528a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2052968[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x2052a18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x204cc10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x2052c18[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2053b88[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20541f8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2054258[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x20542d0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x2054340[shape=record, label="  %15 = and i32 %11, %14"];
	Node0x20543b0[shape=record, label="  %16 = and i32 %12, %11"];
	Node0x2054420[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x2054490[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x2054500[shape=record, label="  %19 = xor i32 %10, -1"];
	Node0x2054570[shape=record, label="  %20 = and i32 %13, %19"];
	Node0x20545e0[shape=record, label="  %21 = xor i32 %13, %10"];
	Node0x2054650[shape=record, label="  %22 = add i32 %15, 3"];
	Node0x20546c0[shape=record, label="  %23 = add i32 %22, %20"];
	Node0x2054730[shape=record, label="  %24 = add i32 %23, %21"];
	Node0x20547a0[shape=record, label="  %25 = add i32 %24, %18"];
	Node0x2054810[shape=record, label="  %26 = or i32 %12, %11"];
	Node0x2054880[shape=record, label="  %27 = xor i32 %11, 2147483647"];
	Node0x20548f0[shape=record, label="  %28 = and i32 %27, %12"];
	Node0x2054960[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x20549d0[shape=record, label="  %30 = shl i32 %15, 1"];
	Node0x2054a40[shape=record, label="  %31 = mul i32 %16, -6"];
	Node0x2054ab0[shape=record, label="  %32 = or i32 %13, %19"];
	Node0x2054b20[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x2054b90[shape=record, label="  %34 = xor i32 %13, -1"];
	Node0x2054c00[shape=record, label="  %35 = and i32 %13, %10"];
	Node0x2054c70[shape=record, label="  %36 = xor i32 %35, -1"];
	Node0x2054ce0[shape=record, label="  %37 = or i32 %13, %10"];
	Node0x2054d50[shape=record, label="  %38 = xor i32 %37, -1"];
	Node0x2054dc0[shape=record, label="  %39 = mul i32 %38, -3"];
	Node0x2054e30[shape=record, label="  %40 = shl i32 %32, 2"];
	Node0x2054ea0[shape=record, label="  %41 = xor i32 %40, -4"];
	Node0x2054f10[shape=record, label="  %42 = add i32 %12, %11"];
	Node0x2054f80[shape=record, label="  %43 = shl i32 %42, 1"];
	Node0x2054ff0[shape=record, label="  %44 = add i32 %14, %19"];
	Node0x2055060[shape=record, label="  %45 = add i32 %44, %26"];
	Node0x20550d0[shape=record, label="  %46 = add i32 %45, %34"];
	Node0x2055140[shape=record, label="  %47 = sub i32 %46, %29"];
	Node0x20551b0[shape=record, label="  %48 = sub i32 %47, %30"];
	Node0x2055220[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x2055290[shape=record, label="  %50 = add i32 %49, %36"];
	Node0x2055300[shape=record, label="  %51 = add i32 %50, %21"];
	Node0x2055370[shape=record, label="  %52 = sub i32 %51, %20"];
	Node0x20553e0[shape=record, label="  %53 = add i32 %52, %43"];
	Node0x2055450[shape=record, label="  %54 = sub i32 %53, %33"];
	Node0x20554c0[shape=record, label="  %55 = add i32 %54, %39"];
	Node0x2055530[shape=record, label="  %56 = sub i32 %55, %41"];
	Node0x20555a0[shape=record, label="  %57 = icmp eq i32 %25, %56"];
	Node0x1ff18b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2055630[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0x20558d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2055a38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2055b48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2055c58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2055d18[shape=record, label="  ret i32 0"];
	Node0x2051f08 -> Node0x2051f88;
	Node0x2051f88 -> Node0x2052018;
	Node0x2052018 -> Node0x2052078;
	Node0x2052078 -> Node0x2052128;
	Node0x2052128 -> Node0x2052558;
	Node0x2052558 -> Node0x2052638;
	Node0x2052638 -> Node0x2052738;
	Node0x2052738 -> Node0x20527f8;
	Node0x20527f8 -> Node0x20528a8;
	Node0x20528a8 -> Node0x2052968;
	Node0x2052968 -> Node0x2052a18;
	Node0x2052a18 -> Node0x204cc10;
	Node0x204cc10 -> Node0x2052c18;
	Node0x2052c18 -> Node0x2053b88;
	Node0x2053b88 -> Node0x20541f8;
	Node0x20541f8 -> Node0x2054258;
	Node0x2054258 -> Node0x20542d0;
	Node0x20542d0 -> Node0x2054340;
	Node0x2054340 -> Node0x20543b0;
	Node0x20543b0 -> Node0x2054420;
	Node0x2054420 -> Node0x2054490;
	Node0x2054490 -> Node0x2054500;
	Node0x2054500 -> Node0x2054570;
	Node0x2054570 -> Node0x20545e0;
	Node0x20545e0 -> Node0x2054650;
	Node0x2054650 -> Node0x20546c0;
	Node0x20546c0 -> Node0x2054730;
	Node0x2054730 -> Node0x20547a0;
	Node0x20547a0 -> Node0x2054810;
	Node0x2054810 -> Node0x2054880;
	Node0x2054880 -> Node0x20548f0;
	Node0x20548f0 -> Node0x2054960;
	Node0x2054960 -> Node0x20549d0;
	Node0x20549d0 -> Node0x2054a40;
	Node0x2054a40 -> Node0x2054ab0;
	Node0x2054ab0 -> Node0x2054b20;
	Node0x2054b20 -> Node0x2054b90;
	Node0x2054b90 -> Node0x2054c00;
	Node0x2054c00 -> Node0x2054c70;
	Node0x2054c70 -> Node0x2054ce0;
	Node0x2054ce0 -> Node0x2054d50;
	Node0x2054d50 -> Node0x2054dc0;
	Node0x2054dc0 -> Node0x2054e30;
	Node0x2054e30 -> Node0x2054ea0;
	Node0x2054ea0 -> Node0x2054f10;
	Node0x2054f10 -> Node0x2054f80;
	Node0x2054f80 -> Node0x2054ff0;
	Node0x2054ff0 -> Node0x2055060;
	Node0x2055060 -> Node0x20550d0;
	Node0x20550d0 -> Node0x2055140;
	Node0x2055140 -> Node0x20551b0;
	Node0x20551b0 -> Node0x2055220;
	Node0x2055220 -> Node0x2055290;
	Node0x2055290 -> Node0x2055300;
	Node0x2055300 -> Node0x2055370;
	Node0x2055370 -> Node0x20553e0;
	Node0x20553e0 -> Node0x2055450;
	Node0x2055450 -> Node0x20554c0;
	Node0x20554c0 -> Node0x2055530;
	Node0x2055530 -> Node0x20555a0;
	Node0x20555a0 -> Node0x1ff18b8;
	Node0x1ff18b8 -> Node0x2055630;
	Node0x2055630 -> Node0x20558d8;
	Node0x20558d8 -> Node0x2055a38;
	Node0x2055a38 -> Node0x2055b48;
	Node0x2055b48 -> Node0x2055c58;
	Node0x2055c58 -> Node0x2055d18;
edge [color=red]
	Node0x2051f08 -> Node0x2052128;
	Node0x2052128 -> Node0x2052558;
	Node0x2051f88 -> Node0x2052638;
	Node0x2052638 -> Node0x2052738;
	Node0x2052018 -> Node0x20527f8;
	Node0x20527f8 -> Node0x20528a8;
	Node0x2052078 -> Node0x2052968;
	Node0x2052968 -> Node0x2052a18;
	Node0x2051f08 -> Node0x204cc10;
	Node0x2051f88 -> Node0x204cc10;
	Node0x2052018 -> Node0x204cc10;
	Node0x2052078 -> Node0x204cc10;
	Node0x2051f08 -> Node0x2052c18;
	Node0x2051f88 -> Node0x2053b88;
	Node0x2052018 -> Node0x20541f8;
	Node0x2052078 -> Node0x2054258;
	Node0x20541f8 -> Node0x20542d0;
	Node0x2053b88 -> Node0x2054340;
	Node0x20542d0 -> Node0x2054340;
	Node0x20541f8 -> Node0x20543b0;
	Node0x2053b88 -> Node0x20543b0;
	Node0x20543b0 -> Node0x2054420;
	Node0x2054420 -> Node0x2054490;
	Node0x2052c18 -> Node0x2054500;
	Node0x2054258 -> Node0x2054570;
	Node0x2054500 -> Node0x2054570;
	Node0x2054258 -> Node0x20545e0;
	Node0x2052c18 -> Node0x20545e0;
	Node0x2054340 -> Node0x2054650;
	Node0x2054650 -> Node0x20546c0;
	Node0x2054570 -> Node0x20546c0;
	Node0x20546c0 -> Node0x2054730;
	Node0x20545e0 -> Node0x2054730;
	Node0x2054730 -> Node0x20547a0;
	Node0x2054490 -> Node0x20547a0;
	Node0x20541f8 -> Node0x2054810;
	Node0x2053b88 -> Node0x2054810;
	Node0x2053b88 -> Node0x2054880;
	Node0x2054880 -> Node0x20548f0;
	Node0x20541f8 -> Node0x20548f0;
	Node0x20548f0 -> Node0x2054960;
	Node0x2054340 -> Node0x20549d0;
	Node0x20543b0 -> Node0x2054a40;
	Node0x2054258 -> Node0x2054ab0;
	Node0x2054500 -> Node0x2054ab0;
	Node0x2054ab0 -> Node0x2054b20;
	Node0x2054258 -> Node0x2054b90;
	Node0x2054258 -> Node0x2054c00;
	Node0x2052c18 -> Node0x2054c00;
	Node0x2054c00 -> Node0x2054c70;
	Node0x2054258 -> Node0x2054ce0;
	Node0x2052c18 -> Node0x2054ce0;
	Node0x2054ce0 -> Node0x2054d50;
	Node0x2054d50 -> Node0x2054dc0;
	Node0x2054ab0 -> Node0x2054e30;
	Node0x2054e30 -> Node0x2054ea0;
	Node0x20541f8 -> Node0x2054f10;
	Node0x2053b88 -> Node0x2054f10;
	Node0x2054f10 -> Node0x2054f80;
	Node0x20542d0 -> Node0x2054ff0;
	Node0x2054500 -> Node0x2054ff0;
	Node0x2054ff0 -> Node0x2055060;
	Node0x2054810 -> Node0x2055060;
	Node0x2055060 -> Node0x20550d0;
	Node0x2054b90 -> Node0x20550d0;
	Node0x20550d0 -> Node0x2055140;
	Node0x2054960 -> Node0x2055140;
	Node0x2055140 -> Node0x20551b0;
	Node0x20549d0 -> Node0x20551b0;
	Node0x20551b0 -> Node0x2055220;
	Node0x2054a40 -> Node0x2055220;
	Node0x2055220 -> Node0x2055290;
	Node0x2054c70 -> Node0x2055290;
	Node0x2055290 -> Node0x2055300;
	Node0x20545e0 -> Node0x2055300;
	Node0x2055300 -> Node0x2055370;
	Node0x2054570 -> Node0x2055370;
	Node0x2055370 -> Node0x20553e0;
	Node0x2054f80 -> Node0x20553e0;
	Node0x20553e0 -> Node0x2055450;
	Node0x2054b20 -> Node0x2055450;
	Node0x2055450 -> Node0x20554c0;
	Node0x2054dc0 -> Node0x20554c0;
	Node0x20554c0 -> Node0x2055530;
	Node0x2054ea0 -> Node0x2055530;
	Node0x20547a0 -> Node0x20555a0;
	Node0x2055530 -> Node0x20555a0;
	Node0x20555a0 -> Node0x1ff18b8;
	Node0x1ff18b8 -> Node0x2055630;
	Node0x2052968 -> Node0x20558d8;
	Node0x20527f8 -> Node0x2055a38;
	Node0x2052638 -> Node0x2055b48;
	Node0x2052128 -> Node0x2055c58;
}
