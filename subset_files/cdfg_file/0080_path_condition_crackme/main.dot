digraph "DFG for'main' function" {
	Node0x16c8c98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x16c8d48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x16c8dd8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x16c9238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x16c9318[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x16c9438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16c9670[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x16c9728[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x16ca698[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x16cad20[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x16cad90[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0x16cae00[shape=record, label="  %10 = xor i32 %6, -1"];
	Node0x16cae70[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x16caee0[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x16caf50[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x16cafc0[shape=record, label="  %14 = and i32 %6, %11"];
	Node0x16cb030[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x16cb0a0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x16cb110[shape=record, label="  %17 = mul i32 %16, -3"];
	Node0x16cb180[shape=record, label="  %18 = and i32 %7, %10"];
	Node0x16cb1f0[shape=record, label="  %19 = mul i32 %18, -6"];
	Node0x16cb260[shape=record, label="  %20 = mul i32 %14, -5"];
	Node0x16cb2d0[shape=record, label="  %21 = mul i32 %6, -2"];
	Node0x16cb340[shape=record, label="  %22 = add i32 %21, -2"];
	Node0x16cb3b0[shape=record, label="  %23 = add i32 %22, %13"];
	Node0x16cb420[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x16cb490[shape=record, label="  %25 = add i32 %24, %15"];
	Node0x16cb500[shape=record, label="  %26 = sub i32 %25, %12"];
	Node0x16cb570[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x16cb5e0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x16cb650[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x16cb6c0[shape=record, label="  %30 = icmp eq i32 %9, %29"];
	Node0x16699d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x16cb750[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x16cbbb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16cbd18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x16cbdd8[shape=record, label="  ret i32 0"];
	Node0x16c8c98 -> Node0x16c8d48;
	Node0x16c8d48 -> Node0x16c8dd8;
	Node0x16c8dd8 -> Node0x16c9238;
	Node0x16c9238 -> Node0x16c9318;
	Node0x16c9318 -> Node0x16c9438;
	Node0x16c9438 -> Node0x16c9670;
	Node0x16c9670 -> Node0x16c9728;
	Node0x16c9728 -> Node0x16ca698;
	Node0x16ca698 -> Node0x16cad20;
	Node0x16cad20 -> Node0x16cad90;
	Node0x16cad90 -> Node0x16cae00;
	Node0x16cae00 -> Node0x16cae70;
	Node0x16cae70 -> Node0x16caee0;
	Node0x16caee0 -> Node0x16caf50;
	Node0x16caf50 -> Node0x16cafc0;
	Node0x16cafc0 -> Node0x16cb030;
	Node0x16cb030 -> Node0x16cb0a0;
	Node0x16cb0a0 -> Node0x16cb110;
	Node0x16cb110 -> Node0x16cb180;
	Node0x16cb180 -> Node0x16cb1f0;
	Node0x16cb1f0 -> Node0x16cb260;
	Node0x16cb260 -> Node0x16cb2d0;
	Node0x16cb2d0 -> Node0x16cb340;
	Node0x16cb340 -> Node0x16cb3b0;
	Node0x16cb3b0 -> Node0x16cb420;
	Node0x16cb420 -> Node0x16cb490;
	Node0x16cb490 -> Node0x16cb500;
	Node0x16cb500 -> Node0x16cb570;
	Node0x16cb570 -> Node0x16cb5e0;
	Node0x16cb5e0 -> Node0x16cb650;
	Node0x16cb650 -> Node0x16cb6c0;
	Node0x16cb6c0 -> Node0x16699d8;
	Node0x16699d8 -> Node0x16cb750;
	Node0x16cb750 -> Node0x16cbbb8;
	Node0x16cbbb8 -> Node0x16cbd18;
	Node0x16cbd18 -> Node0x16cbdd8;
edge [color=red]
	Node0x16c8c98 -> Node0x16c8dd8;
	Node0x16c8dd8 -> Node0x16c9238;
	Node0x16c8d48 -> Node0x16c9318;
	Node0x16c9318 -> Node0x16c9438;
	Node0x16c8c98 -> Node0x16c9670;
	Node0x16c8d48 -> Node0x16c9670;
	Node0x16c8c98 -> Node0x16c9728;
	Node0x16c8d48 -> Node0x16ca698;
	Node0x16ca698 -> Node0x16cad20;
	Node0x16c9728 -> Node0x16cad20;
	Node0x16cad20 -> Node0x16cad90;
	Node0x16c9728 -> Node0x16cae00;
	Node0x16ca698 -> Node0x16cae70;
	Node0x16ca698 -> Node0x16caee0;
	Node0x16c9728 -> Node0x16caee0;
	Node0x16caee0 -> Node0x16caf50;
	Node0x16c9728 -> Node0x16cafc0;
	Node0x16cae70 -> Node0x16cafc0;
	Node0x16ca698 -> Node0x16cb030;
	Node0x16c9728 -> Node0x16cb030;
	Node0x16cb030 -> Node0x16cb0a0;
	Node0x16cb0a0 -> Node0x16cb110;
	Node0x16ca698 -> Node0x16cb180;
	Node0x16cae00 -> Node0x16cb180;
	Node0x16cb180 -> Node0x16cb1f0;
	Node0x16cafc0 -> Node0x16cb260;
	Node0x16c9728 -> Node0x16cb2d0;
	Node0x16cb2d0 -> Node0x16cb340;
	Node0x16cb340 -> Node0x16cb3b0;
	Node0x16caf50 -> Node0x16cb3b0;
	Node0x16cb3b0 -> Node0x16cb420;
	Node0x16cafc0 -> Node0x16cb420;
	Node0x16cb420 -> Node0x16cb490;
	Node0x16cb030 -> Node0x16cb490;
	Node0x16cb490 -> Node0x16cb500;
	Node0x16caee0 -> Node0x16cb500;
	Node0x16cb500 -> Node0x16cb570;
	Node0x16cb110 -> Node0x16cb570;
	Node0x16cb570 -> Node0x16cb5e0;
	Node0x16cb1f0 -> Node0x16cb5e0;
	Node0x16cb5e0 -> Node0x16cb650;
	Node0x16cb260 -> Node0x16cb650;
	Node0x16cad90 -> Node0x16cb6c0;
	Node0x16cb650 -> Node0x16cb6c0;
	Node0x16cb6c0 -> Node0x16699d8;
	Node0x16699d8 -> Node0x16cb750;
	Node0x16c9318 -> Node0x16cbbb8;
	Node0x16c8dd8 -> Node0x16cbd18;
}
