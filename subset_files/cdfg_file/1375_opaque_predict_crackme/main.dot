digraph "DFG for'main' function" {
	Node0x14cfc08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14cfc88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14cfd18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14cfd78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x14cfe28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x14d0258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14d0338[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x14d0438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14d04f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x14d05a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14d0668[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x14d0718[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14cab60[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x14d0918[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14d1888[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14d1ef8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14d1f58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x14d1fd0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x14d2040[shape=record, label="  %15 = add i32 %12, 1"];
	Node0x14d20b0[shape=record, label="  %16 = add i32 %15, %14"];
	Node0x14d2120[shape=record, label="  %17 = and i32 %13, %10"];
	Node0x14d2190[shape=record, label="  %18 = xor i32 %10, -1"];
	Node0x14d2200[shape=record, label="  %19 = and i32 %13, %18"];
	Node0x14d2270[shape=record, label="  %20 = sub i32 %16, %17"];
	Node0x14d22e0[shape=record, label="  %21 = add i32 %20, %19"];
	Node0x14d2350[shape=record, label="  %22 = or i32 %12, %11"];
	Node0x14d23c0[shape=record, label="  %23 = xor i32 %11, -1"];
	Node0x14d2430[shape=record, label="  %24 = and i32 %12, %23"];
	Node0x14d24a0[shape=record, label="  %25 = shl i32 %12, 1"];
	Node0x14d2510[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x14d2580[shape=record, label="  %27 = and i32 %12, %11"];
	Node0x14d25f0[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x14d2660[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x14d26d0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x14d2740[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x14d27b0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x14d2820[shape=record, label="  %33 = xor i32 %13, 2147483647"];
	Node0x14d2890[shape=record, label="  %34 = and i32 %33, %10"];
	Node0x14d2900[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x14d2970[shape=record, label="  %36 = shl i32 %19, 1"];
	Node0x14d29e0[shape=record, label="  %37 = sub i32 2147483646, %10"];
	Node0x14d2a50[shape=record, label="  %38 = add i32 %37, %11"];
	Node0x14d2ac0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x14d2b30[shape=record, label="  %40 = add i32 %10, 2"];
	Node0x14d2ba0[shape=record, label="  %41 = sub i32 %40, %22"];
	Node0x14d2c10[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x14d2c80[shape=record, label="  %43 = add i32 %42, %28"];
	Node0x14d2cf0[shape=record, label="  %44 = sub i32 %43, %27"];
	Node0x14d2d60[shape=record, label="  %45 = add i32 %44, %39"];
	Node0x14d2dd0[shape=record, label="  %46 = sub i32 %45, %26"];
	Node0x14d2e40[shape=record, label="  %47 = sub i32 %46, %32"];
	Node0x14d2eb0[shape=record, label="  %48 = add i32 %47, %17"];
	Node0x14d2f20[shape=record, label="  %49 = add i32 %48, %30"];
	Node0x14d2f90[shape=record, label="  %50 = sub i32 %49, %36"];
	Node0x14d3000[shape=record, label="  %51 = sub i32 %50, %31"];
	Node0x14d3070[shape=record, label="  %52 = sub i32 %51, %35"];
	Node0x14d30e0[shape=record, label="  %53 = icmp eq i32 %21, %52"];
	Node0x146f8b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14d3170[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x14d3418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14d3578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14d3688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14d3798[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14d3858[shape=record, label="  ret i32 0"];
	Node0x14cfc08 -> Node0x14cfc88;
	Node0x14cfc88 -> Node0x14cfd18;
	Node0x14cfd18 -> Node0x14cfd78;
	Node0x14cfd78 -> Node0x14cfe28;
	Node0x14cfe28 -> Node0x14d0258;
	Node0x14d0258 -> Node0x14d0338;
	Node0x14d0338 -> Node0x14d0438;
	Node0x14d0438 -> Node0x14d04f8;
	Node0x14d04f8 -> Node0x14d05a8;
	Node0x14d05a8 -> Node0x14d0668;
	Node0x14d0668 -> Node0x14d0718;
	Node0x14d0718 -> Node0x14cab60;
	Node0x14cab60 -> Node0x14d0918;
	Node0x14d0918 -> Node0x14d1888;
	Node0x14d1888 -> Node0x14d1ef8;
	Node0x14d1ef8 -> Node0x14d1f58;
	Node0x14d1f58 -> Node0x14d1fd0;
	Node0x14d1fd0 -> Node0x14d2040;
	Node0x14d2040 -> Node0x14d20b0;
	Node0x14d20b0 -> Node0x14d2120;
	Node0x14d2120 -> Node0x14d2190;
	Node0x14d2190 -> Node0x14d2200;
	Node0x14d2200 -> Node0x14d2270;
	Node0x14d2270 -> Node0x14d22e0;
	Node0x14d22e0 -> Node0x14d2350;
	Node0x14d2350 -> Node0x14d23c0;
	Node0x14d23c0 -> Node0x14d2430;
	Node0x14d2430 -> Node0x14d24a0;
	Node0x14d24a0 -> Node0x14d2510;
	Node0x14d2510 -> Node0x14d2580;
	Node0x14d2580 -> Node0x14d25f0;
	Node0x14d25f0 -> Node0x14d2660;
	Node0x14d2660 -> Node0x14d26d0;
	Node0x14d26d0 -> Node0x14d2740;
	Node0x14d2740 -> Node0x14d27b0;
	Node0x14d27b0 -> Node0x14d2820;
	Node0x14d2820 -> Node0x14d2890;
	Node0x14d2890 -> Node0x14d2900;
	Node0x14d2900 -> Node0x14d2970;
	Node0x14d2970 -> Node0x14d29e0;
	Node0x14d29e0 -> Node0x14d2a50;
	Node0x14d2a50 -> Node0x14d2ac0;
	Node0x14d2ac0 -> Node0x14d2b30;
	Node0x14d2b30 -> Node0x14d2ba0;
	Node0x14d2ba0 -> Node0x14d2c10;
	Node0x14d2c10 -> Node0x14d2c80;
	Node0x14d2c80 -> Node0x14d2cf0;
	Node0x14d2cf0 -> Node0x14d2d60;
	Node0x14d2d60 -> Node0x14d2dd0;
	Node0x14d2dd0 -> Node0x14d2e40;
	Node0x14d2e40 -> Node0x14d2eb0;
	Node0x14d2eb0 -> Node0x14d2f20;
	Node0x14d2f20 -> Node0x14d2f90;
	Node0x14d2f90 -> Node0x14d3000;
	Node0x14d3000 -> Node0x14d3070;
	Node0x14d3070 -> Node0x14d30e0;
	Node0x14d30e0 -> Node0x146f8b8;
	Node0x146f8b8 -> Node0x14d3170;
	Node0x14d3170 -> Node0x14d3418;
	Node0x14d3418 -> Node0x14d3578;
	Node0x14d3578 -> Node0x14d3688;
	Node0x14d3688 -> Node0x14d3798;
	Node0x14d3798 -> Node0x14d3858;
edge [color=red]
	Node0x14cfc08 -> Node0x14cfe28;
	Node0x14cfe28 -> Node0x14d0258;
	Node0x14cfc88 -> Node0x14d0338;
	Node0x14d0338 -> Node0x14d0438;
	Node0x14cfd18 -> Node0x14d04f8;
	Node0x14d04f8 -> Node0x14d05a8;
	Node0x14cfd78 -> Node0x14d0668;
	Node0x14d0668 -> Node0x14d0718;
	Node0x14cfc08 -> Node0x14cab60;
	Node0x14cfc88 -> Node0x14cab60;
	Node0x14cfd18 -> Node0x14cab60;
	Node0x14cfd78 -> Node0x14cab60;
	Node0x14cfc08 -> Node0x14d0918;
	Node0x14cfc88 -> Node0x14d1888;
	Node0x14cfd18 -> Node0x14d1ef8;
	Node0x14cfd78 -> Node0x14d1f58;
	Node0x14d1ef8 -> Node0x14d1fd0;
	Node0x14d1888 -> Node0x14d1fd0;
	Node0x14d1ef8 -> Node0x14d2040;
	Node0x14d2040 -> Node0x14d20b0;
	Node0x14d1fd0 -> Node0x14d20b0;
	Node0x14d1f58 -> Node0x14d2120;
	Node0x14d0918 -> Node0x14d2120;
	Node0x14d0918 -> Node0x14d2190;
	Node0x14d1f58 -> Node0x14d2200;
	Node0x14d2190 -> Node0x14d2200;
	Node0x14d20b0 -> Node0x14d2270;
	Node0x14d2120 -> Node0x14d2270;
	Node0x14d2270 -> Node0x14d22e0;
	Node0x14d2200 -> Node0x14d22e0;
	Node0x14d1ef8 -> Node0x14d2350;
	Node0x14d1888 -> Node0x14d2350;
	Node0x14d1888 -> Node0x14d23c0;
	Node0x14d1ef8 -> Node0x14d2430;
	Node0x14d23c0 -> Node0x14d2430;
	Node0x14d1ef8 -> Node0x14d24a0;
	Node0x14d24a0 -> Node0x14d2510;
	Node0x14d1ef8 -> Node0x14d2580;
	Node0x14d1888 -> Node0x14d2580;
	Node0x14d2580 -> Node0x14d25f0;
	Node0x14d1f58 -> Node0x14d2660;
	Node0x14d0918 -> Node0x14d2660;
	Node0x14d2660 -> Node0x14d26d0;
	Node0x14d26d0 -> Node0x14d2740;
	Node0x14d1f58 -> Node0x14d27b0;
	Node0x14d0918 -> Node0x14d27b0;
	Node0x14d1f58 -> Node0x14d2820;
	Node0x14d2820 -> Node0x14d2890;
	Node0x14d0918 -> Node0x14d2890;
	Node0x14d2890 -> Node0x14d2900;
	Node0x14d2200 -> Node0x14d2970;
	Node0x14d0918 -> Node0x14d29e0;
	Node0x14d29e0 -> Node0x14d2a50;
	Node0x14d1888 -> Node0x14d2a50;
	Node0x14d2a50 -> Node0x14d2ac0;
	Node0x14d0918 -> Node0x14d2b30;
	Node0x14d2b30 -> Node0x14d2ba0;
	Node0x14d2350 -> Node0x14d2ba0;
	Node0x14d2ba0 -> Node0x14d2c10;
	Node0x14d2430 -> Node0x14d2c10;
	Node0x14d2c10 -> Node0x14d2c80;
	Node0x14d25f0 -> Node0x14d2c80;
	Node0x14d2c80 -> Node0x14d2cf0;
	Node0x14d2580 -> Node0x14d2cf0;
	Node0x14d2cf0 -> Node0x14d2d60;
	Node0x14d2ac0 -> Node0x14d2d60;
	Node0x14d2d60 -> Node0x14d2dd0;
	Node0x14d2510 -> Node0x14d2dd0;
	Node0x14d2dd0 -> Node0x14d2e40;
	Node0x14d27b0 -> Node0x14d2e40;
	Node0x14d2e40 -> Node0x14d2eb0;
	Node0x14d2120 -> Node0x14d2eb0;
	Node0x14d2eb0 -> Node0x14d2f20;
	Node0x14d26d0 -> Node0x14d2f20;
	Node0x14d2f20 -> Node0x14d2f90;
	Node0x14d2970 -> Node0x14d2f90;
	Node0x14d2f90 -> Node0x14d3000;
	Node0x14d2740 -> Node0x14d3000;
	Node0x14d3000 -> Node0x14d3070;
	Node0x14d2900 -> Node0x14d3070;
	Node0x14d22e0 -> Node0x14d30e0;
	Node0x14d3070 -> Node0x14d30e0;
	Node0x14d30e0 -> Node0x146f8b8;
	Node0x146f8b8 -> Node0x14d3170;
	Node0x14d0668 -> Node0x14d3418;
	Node0x14d04f8 -> Node0x14d3578;
	Node0x14d0338 -> Node0x14d3688;
	Node0x14cfe28 -> Node0x14d3798;
}
