digraph "DFG for'main' function" {
	Node0x1766978[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x17669f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1766a88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1766ee8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1766fc8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x17670e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1767320[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x17673d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1768348[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x17689d0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1768a40[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x1768ab0[shape=record, label="  %10 = and i32 %7, %6"];
	Node0x1768b20[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x1768b90[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x1768c00[shape=record, label="  %13 = xor i32 %6, 2147483647"];
	Node0x1768c70[shape=record, label="  %14 = and i32 %13, %7"];
	Node0x1768ce0[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x1768d50[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x1768dc0[shape=record, label="  %17 = mul i32 %16, 3"];
	Node0x1768e30[shape=record, label="  %18 = and i32 %6, %8"];
	Node0x1768ea0[shape=record, label="  %19 = shl i32 %18, 2"];
	Node0x1768f10[shape=record, label="  %20 = shl i32 %14, 1"];
	Node0x1768f80[shape=record, label="  %21 = sub i32 %10, %15"];
	Node0x1768ff0[shape=record, label="  %22 = add i32 %21, %17"];
	Node0x1769060[shape=record, label="  %23 = add i32 %22, %19"];
	Node0x17690d0[shape=record, label="  %24 = add i32 %23, %20"];
	Node0x1769140[shape=record, label="  %25 = icmp eq i32 %12, %24"];
	Node0x17079d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x17691d0[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0x1769428[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1769588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1769648[shape=record, label="  ret i32 0"];
	Node0x1766978 -> Node0x17669f8;
	Node0x17669f8 -> Node0x1766a88;
	Node0x1766a88 -> Node0x1766ee8;
	Node0x1766ee8 -> Node0x1766fc8;
	Node0x1766fc8 -> Node0x17670e8;
	Node0x17670e8 -> Node0x1767320;
	Node0x1767320 -> Node0x17673d8;
	Node0x17673d8 -> Node0x1768348;
	Node0x1768348 -> Node0x17689d0;
	Node0x17689d0 -> Node0x1768a40;
	Node0x1768a40 -> Node0x1768ab0;
	Node0x1768ab0 -> Node0x1768b20;
	Node0x1768b20 -> Node0x1768b90;
	Node0x1768b90 -> Node0x1768c00;
	Node0x1768c00 -> Node0x1768c70;
	Node0x1768c70 -> Node0x1768ce0;
	Node0x1768ce0 -> Node0x1768d50;
	Node0x1768d50 -> Node0x1768dc0;
	Node0x1768dc0 -> Node0x1768e30;
	Node0x1768e30 -> Node0x1768ea0;
	Node0x1768ea0 -> Node0x1768f10;
	Node0x1768f10 -> Node0x1768f80;
	Node0x1768f80 -> Node0x1768ff0;
	Node0x1768ff0 -> Node0x1769060;
	Node0x1769060 -> Node0x17690d0;
	Node0x17690d0 -> Node0x1769140;
	Node0x1769140 -> Node0x17079d8;
	Node0x17079d8 -> Node0x17691d0;
	Node0x17691d0 -> Node0x1769428;
	Node0x1769428 -> Node0x1769588;
	Node0x1769588 -> Node0x1769648;
edge [color=red]
	Node0x1766978 -> Node0x1766a88;
	Node0x1766a88 -> Node0x1766ee8;
	Node0x17669f8 -> Node0x1766fc8;
	Node0x1766fc8 -> Node0x17670e8;
	Node0x1766978 -> Node0x1767320;
	Node0x17669f8 -> Node0x1767320;
	Node0x1766978 -> Node0x17673d8;
	Node0x17669f8 -> Node0x1768348;
	Node0x1768348 -> Node0x17689d0;
	Node0x17689d0 -> Node0x1768a40;
	Node0x1768348 -> Node0x1768ab0;
	Node0x17673d8 -> Node0x1768ab0;
	Node0x1768ab0 -> Node0x1768b20;
	Node0x1768a40 -> Node0x1768b90;
	Node0x1768b20 -> Node0x1768b90;
	Node0x17673d8 -> Node0x1768c00;
	Node0x1768c00 -> Node0x1768c70;
	Node0x1768348 -> Node0x1768c70;
	Node0x1768348 -> Node0x1768ce0;
	Node0x17673d8 -> Node0x1768ce0;
	Node0x1768ce0 -> Node0x1768d50;
	Node0x1768d50 -> Node0x1768dc0;
	Node0x17673d8 -> Node0x1768e30;
	Node0x17689d0 -> Node0x1768e30;
	Node0x1768e30 -> Node0x1768ea0;
	Node0x1768c70 -> Node0x1768f10;
	Node0x1768ab0 -> Node0x1768f80;
	Node0x1768ce0 -> Node0x1768f80;
	Node0x1768f80 -> Node0x1768ff0;
	Node0x1768dc0 -> Node0x1768ff0;
	Node0x1768ff0 -> Node0x1769060;
	Node0x1768ea0 -> Node0x1769060;
	Node0x1769060 -> Node0x17690d0;
	Node0x1768f10 -> Node0x17690d0;
	Node0x1768b90 -> Node0x1769140;
	Node0x17690d0 -> Node0x1769140;
	Node0x1769140 -> Node0x17079d8;
	Node0x17079d8 -> Node0x17691d0;
	Node0x1766fc8 -> Node0x1769428;
	Node0x1766a88 -> Node0x1769588;
}
