digraph "DFG for'crackme' function" {
	Node0x1765a70[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x1765b10[shape=record, label="  %4 = shl i32 %3, 1"];
	Node0x1765bd0[shape=record, label="  %5 = and i32 %1, %0"];
	Node0x1765c40[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x1765cb0[shape=record, label="  %7 = add i32 %4, %6"];
	Node0x1765d20[shape=record, label="  %8 = xor i32 %0, 2147483647"];
	Node0x1765d90[shape=record, label="  %9 = and i32 %8, %1"];
	Node0x1765e00[shape=record, label="  %10 = or i32 %1, %0"];
	Node0x1765e70[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x1765f10[shape=record, label="  %12 = mul i32 %11, 3"];
	Node0x1765f80[shape=record, label="  %13 = and i32 %3, %0"];
	Node0x1766020[shape=record, label="  %14 = shl i32 %13, 2"];
	Node0x1766090[shape=record, label="  %15 = shl i32 %9, 1"];
	Node0x1766100[shape=record, label="  %16 = sub i32 %5, %10"];
	Node0x1766170[shape=record, label="  %17 = add i32 %16, %12"];
	Node0x17661e0[shape=record, label="  %18 = add i32 %17, %14"];
	Node0x1766250[shape=record, label="  %19 = add i32 %18, %15"];
	Node0x17662c0[shape=record, label="  %20 = icmp eq i32 %7, %19"];
	Node0x1706268[shape=record, label="  %21 = select i1 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1766760[shape=record, label="  %22 = tail call i32 @puts(i8* nonnull dereferenceable(1) %21)"];
	Node0x17667b0[shape=record, label="  ret void"];
	Node0x1765a70 -> Node0x1765b10;
	Node0x1765b10 -> Node0x1765bd0;
	Node0x1765bd0 -> Node0x1765c40;
	Node0x1765c40 -> Node0x1765cb0;
	Node0x1765cb0 -> Node0x1765d20;
	Node0x1765d20 -> Node0x1765d90;
	Node0x1765d90 -> Node0x1765e00;
	Node0x1765e00 -> Node0x1765e70;
	Node0x1765e70 -> Node0x1765f10;
	Node0x1765f10 -> Node0x1765f80;
	Node0x1765f80 -> Node0x1766020;
	Node0x1766020 -> Node0x1766090;
	Node0x1766090 -> Node0x1766100;
	Node0x1766100 -> Node0x1766170;
	Node0x1766170 -> Node0x17661e0;
	Node0x17661e0 -> Node0x1766250;
	Node0x1766250 -> Node0x17662c0;
	Node0x17662c0 -> Node0x1706268;
	Node0x1706268 -> Node0x1766760;
	Node0x1766760 -> Node0x17667b0;
edge [color=red]
	Node0x1765a70 -> Node0x1765b10;
	Node0x1765bd0 -> Node0x1765c40;
	Node0x1765b10 -> Node0x1765cb0;
	Node0x1765c40 -> Node0x1765cb0;
	Node0x1765d20 -> Node0x1765d90;
	Node0x1765e00 -> Node0x1765e70;
	Node0x1765e70 -> Node0x1765f10;
	Node0x1765a70 -> Node0x1765f80;
	Node0x1765f80 -> Node0x1766020;
	Node0x1765d90 -> Node0x1766090;
	Node0x1765bd0 -> Node0x1766100;
	Node0x1765e00 -> Node0x1766100;
	Node0x1766100 -> Node0x1766170;
	Node0x1765f10 -> Node0x1766170;
	Node0x1766170 -> Node0x17661e0;
	Node0x1766020 -> Node0x17661e0;
	Node0x17661e0 -> Node0x1766250;
	Node0x1766090 -> Node0x1766250;
	Node0x1765cb0 -> Node0x17662c0;
	Node0x1766250 -> Node0x17662c0;
	Node0x17662c0 -> Node0x1706268;
	Node0x1706268 -> Node0x1766760;
}
