digraph "DFG for'crackme' function" {
	Node0x94ad90[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x94ae00[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x94ae70[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x94aee0[shape=record, label="  %8 = and i32 %7, %3"];
	Node0x94af50[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x94afc0[shape=record, label="  %10 = sub i32 %6, %0"];
	Node0x94b060[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x94b0d0[shape=record, label="  %12 = add i32 %9, %1"];
	Node0x94b140[shape=record, label="  %13 = add i32 %12, %11"];
	Node0x94b1b0[shape=record, label="  %14 = or i32 %5, %1"];
	Node0x94b220[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x94b290[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x94b330[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x94b3a0[shape=record, label="  %18 = or i32 %2, %1"];
	Node0x94b410[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x94b480[shape=record, label="  %20 = shl i32 %14, 1"];
	Node0x94b4f0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x94b590[shape=record, label="  %22 = mul i32 %6, 6"];
	Node0x94b600[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x94b670[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x94b6e0[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x94b750[shape=record, label="  %26 = xor i32 %3, %0"];
	Node0x94b7c0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x94b830[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x94b8a0[shape=record, label="  %29 = or i32 %3, %0"];
	Node0x94b910[shape=record, label="  %30 = or i32 %7, %3"];
	Node0x94b9b0[shape=record, label="  %31 = shl i32 %29, 2"];
	Node0x94ba50[shape=record, label="  %32 = xor i32 %31, -4"];
	Node0x94bcd0[shape=record, label="  %33 = shl i32 %30, 2"];
	Node0x94bd40[shape=record, label="  %34 = xor i32 %33, -4"];
	Node0x94bdb0[shape=record, label="  %35 = shl i32 %8, 2"];
	Node0x94be20[shape=record, label="  %36 = sub i32 %15, %23"];
	Node0x94bec0[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x94bf60[shape=record, label="  %38 = sub i32 -3, %1"];
	Node0x94bfd0[shape=record, label="  %39 = sub i32 %38, %2"];
	Node0x94c040[shape=record, label="  %40 = sub i32 %39, %14"];
	Node0x94c0b0[shape=record, label="  %41 = sub i32 %40, %19"];
	Node0x94c120[shape=record, label="  %42 = add i32 %41, %22"];
	Node0x94c190[shape=record, label="  %43 = sub i32 %42, %29"];
	Node0x94c200[shape=record, label="  %44 = add i32 %43, %30"];
	Node0x94c270[shape=record, label="  %45 = sub i32 %44, %17"];
	Node0x94c2e0[shape=record, label="  %46 = add i32 %45, %21"];
	Node0x94c350[shape=record, label="  %47 = add i32 %46, %27"];
	Node0x94c3c0[shape=record, label="  %48 = sub i32 %47, %35"];
	Node0x94c430[shape=record, label="  %49 = add i32 %48, %25"];
	Node0x94c4a0[shape=record, label="  %50 = add i32 %49, %28"];
	Node0x94c510[shape=record, label="  %51 = sub i32 %50, %32"];
	Node0x94c580[shape=record, label="  %52 = sub i32 %51, %34"];
	Node0x94c5f0[shape=record, label="  %53 = add i32 %52, %37"];
	Node0x94c660[shape=record, label="  %54 = icmp eq i32 %13, %53"];
	Node0x8eb268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x94cb00[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0x94cb50[shape=record, label="  ret void"];
	Node0x94ad90 -> Node0x94ae00;
	Node0x94ae00 -> Node0x94ae70;
	Node0x94ae70 -> Node0x94aee0;
	Node0x94aee0 -> Node0x94af50;
	Node0x94af50 -> Node0x94afc0;
	Node0x94afc0 -> Node0x94b060;
	Node0x94b060 -> Node0x94b0d0;
	Node0x94b0d0 -> Node0x94b140;
	Node0x94b140 -> Node0x94b1b0;
	Node0x94b1b0 -> Node0x94b220;
	Node0x94b220 -> Node0x94b290;
	Node0x94b290 -> Node0x94b330;
	Node0x94b330 -> Node0x94b3a0;
	Node0x94b3a0 -> Node0x94b410;
	Node0x94b410 -> Node0x94b480;
	Node0x94b480 -> Node0x94b4f0;
	Node0x94b4f0 -> Node0x94b590;
	Node0x94b590 -> Node0x94b600;
	Node0x94b600 -> Node0x94b670;
	Node0x94b670 -> Node0x94b6e0;
	Node0x94b6e0 -> Node0x94b750;
	Node0x94b750 -> Node0x94b7c0;
	Node0x94b7c0 -> Node0x94b830;
	Node0x94b830 -> Node0x94b8a0;
	Node0x94b8a0 -> Node0x94b910;
	Node0x94b910 -> Node0x94b9b0;
	Node0x94b9b0 -> Node0x94ba50;
	Node0x94ba50 -> Node0x94bcd0;
	Node0x94bcd0 -> Node0x94bd40;
	Node0x94bd40 -> Node0x94bdb0;
	Node0x94bdb0 -> Node0x94be20;
	Node0x94be20 -> Node0x94bec0;
	Node0x94bec0 -> Node0x94bf60;
	Node0x94bf60 -> Node0x94bfd0;
	Node0x94bfd0 -> Node0x94c040;
	Node0x94c040 -> Node0x94c0b0;
	Node0x94c0b0 -> Node0x94c120;
	Node0x94c120 -> Node0x94c190;
	Node0x94c190 -> Node0x94c200;
	Node0x94c200 -> Node0x94c270;
	Node0x94c270 -> Node0x94c2e0;
	Node0x94c2e0 -> Node0x94c350;
	Node0x94c350 -> Node0x94c3c0;
	Node0x94c3c0 -> Node0x94c430;
	Node0x94c430 -> Node0x94c4a0;
	Node0x94c4a0 -> Node0x94c510;
	Node0x94c510 -> Node0x94c580;
	Node0x94c580 -> Node0x94c5f0;
	Node0x94c5f0 -> Node0x94c660;
	Node0x94c660 -> Node0x8eb268;
	Node0x8eb268 -> Node0x94cb00;
	Node0x94cb00 -> Node0x94cb50;
edge [color=red]
	Node0x94ad90 -> Node0x94ae00;
	Node0x94ae70 -> Node0x94aee0;
	Node0x94aee0 -> Node0x94af50;
	Node0x94ae00 -> Node0x94afc0;
	Node0x94afc0 -> Node0x94b060;
	Node0x94af50 -> Node0x94b0d0;
	Node0x94b0d0 -> Node0x94b140;
	Node0x94b060 -> Node0x94b140;
	Node0x94ad90 -> Node0x94b1b0;
	Node0x94b220 -> Node0x94b290;
	Node0x94b290 -> Node0x94b330;
	Node0x94b3a0 -> Node0x94b410;
	Node0x94b1b0 -> Node0x94b480;
	Node0x94b480 -> Node0x94b4f0;
	Node0x94ae00 -> Node0x94b590;
	Node0x94b600 -> Node0x94b670;
	Node0x94b670 -> Node0x94b6e0;
	Node0x94b750 -> Node0x94b7c0;
	Node0x94b7c0 -> Node0x94b830;
	Node0x94ae70 -> Node0x94b910;
	Node0x94b8a0 -> Node0x94b9b0;
	Node0x94b9b0 -> Node0x94ba50;
	Node0x94b910 -> Node0x94bcd0;
	Node0x94bcd0 -> Node0x94bd40;
	Node0x94aee0 -> Node0x94bdb0;
	Node0x94b220 -> Node0x94be20;
	Node0x94b600 -> Node0x94be20;
	Node0x94be20 -> Node0x94bec0;
	Node0x94bf60 -> Node0x94bfd0;
	Node0x94bfd0 -> Node0x94c040;
	Node0x94b1b0 -> Node0x94c040;
	Node0x94c040 -> Node0x94c0b0;
	Node0x94b410 -> Node0x94c0b0;
	Node0x94c0b0 -> Node0x94c120;
	Node0x94b590 -> Node0x94c120;
	Node0x94c120 -> Node0x94c190;
	Node0x94b8a0 -> Node0x94c190;
	Node0x94c190 -> Node0x94c200;
	Node0x94b910 -> Node0x94c200;
	Node0x94c200 -> Node0x94c270;
	Node0x94b330 -> Node0x94c270;
	Node0x94c270 -> Node0x94c2e0;
	Node0x94b4f0 -> Node0x94c2e0;
	Node0x94c2e0 -> Node0x94c350;
	Node0x94b7c0 -> Node0x94c350;
	Node0x94c350 -> Node0x94c3c0;
	Node0x94bdb0 -> Node0x94c3c0;
	Node0x94c3c0 -> Node0x94c430;
	Node0x94b6e0 -> Node0x94c430;
	Node0x94c430 -> Node0x94c4a0;
	Node0x94b830 -> Node0x94c4a0;
	Node0x94c4a0 -> Node0x94c510;
	Node0x94ba50 -> Node0x94c510;
	Node0x94c510 -> Node0x94c580;
	Node0x94bd40 -> Node0x94c580;
	Node0x94c580 -> Node0x94c5f0;
	Node0x94bec0 -> Node0x94c5f0;
	Node0x94b140 -> Node0x94c660;
	Node0x94c5f0 -> Node0x94c660;
	Node0x94c660 -> Node0x8eb268;
	Node0x8eb268 -> Node0x94cb00;
}
