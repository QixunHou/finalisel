digraph "DFG for'main' function" {
	Node0x94cd18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x94cd98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x94ce28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x94ce88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x94cf38[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x94d368[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x94d448[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x94d548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x94d608[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x94d6b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x94d778[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x94d828[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x9477b0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x94da28[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x94e998[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x94f008[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x94f068[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x94f178[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x94f3d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x94f538[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x94f648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x94f758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x94f818[shape=record, label="  ret i32 0"];
	Node0x94cd18 -> Node0x94cd98;
	Node0x94cd98 -> Node0x94ce28;
	Node0x94ce28 -> Node0x94ce88;
	Node0x94ce88 -> Node0x94cf38;
	Node0x94cf38 -> Node0x94d368;
	Node0x94d368 -> Node0x94d448;
	Node0x94d448 -> Node0x94d548;
	Node0x94d548 -> Node0x94d608;
	Node0x94d608 -> Node0x94d6b8;
	Node0x94d6b8 -> Node0x94d778;
	Node0x94d778 -> Node0x94d828;
	Node0x94d828 -> Node0x9477b0;
	Node0x9477b0 -> Node0x94da28;
	Node0x94da28 -> Node0x94e998;
	Node0x94e998 -> Node0x94f008;
	Node0x94f008 -> Node0x94f068;
	Node0x94f068 -> Node0x94f178;
	Node0x94f178 -> Node0x94f3d8;
	Node0x94f3d8 -> Node0x94f538;
	Node0x94f538 -> Node0x94f648;
	Node0x94f648 -> Node0x94f758;
	Node0x94f758 -> Node0x94f818;
edge [color=red]
	Node0x94cd18 -> Node0x94cf38;
	Node0x94cf38 -> Node0x94d368;
	Node0x94cd98 -> Node0x94d448;
	Node0x94d448 -> Node0x94d548;
	Node0x94ce28 -> Node0x94d608;
	Node0x94d608 -> Node0x94d6b8;
	Node0x94ce88 -> Node0x94d778;
	Node0x94d778 -> Node0x94d828;
	Node0x94cd18 -> Node0x9477b0;
	Node0x94cd98 -> Node0x9477b0;
	Node0x94ce28 -> Node0x9477b0;
	Node0x94ce88 -> Node0x9477b0;
	Node0x94cd18 -> Node0x94da28;
	Node0x94cd98 -> Node0x94e998;
	Node0x94ce28 -> Node0x94f008;
	Node0x94ce88 -> Node0x94f068;
	Node0x94da28 -> Node0x94f178;
	Node0x94e998 -> Node0x94f178;
	Node0x94f008 -> Node0x94f178;
	Node0x94f068 -> Node0x94f178;
	Node0x94d778 -> Node0x94f3d8;
	Node0x94d608 -> Node0x94f538;
	Node0x94d448 -> Node0x94f648;
	Node0x94cf38 -> Node0x94f758;
}
