digraph "DFG for'crackme' function" {
	Node0x1075ba0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x1076220[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x1076290[shape=record, label="  %7 = and i32 %6, %3"];
	Node0x1076330[shape=record, label="  %8 = sub i32 1, %5"];
	Node0x10763a0[shape=record, label="  %9 = add i32 %8, %7"];
	Node0x1076410[shape=record, label="  %10 = and i32 %2, %1"];
	Node0x1076480[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x1076520[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x1076590[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0x1076600[shape=record, label="  %14 = or i32 %13, %1"];
	Node0x1076670[shape=record, label="  %15 = xor i32 %2, %1"];
	Node0x10766e0[shape=record, label="  %16 = shl i32 %13, 1"];
	Node0x1076750[shape=record, label="  %17 = xor i32 %14, -1"];
	Node0x10767f0[shape=record, label="  %18 = mul i32 %17, -5"];
	Node0x1076860[shape=record, label="  %19 = shl i32 %3, 1"];
	Node0x10768d0[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x1076940[shape=record, label="  %21 = shl i32 %0, 1"];
	Node0x10769b0[shape=record, label="  %22 = or i32 %3, %0"];
	Node0x1076a50[shape=record, label="  %23 = shl i32 %22, 2"];
	Node0x1076ac0[shape=record, label="  %24 = or i32 %6, %3"];
	Node0x1076b30[shape=record, label="  %25 = add i32 %22, 1"];
	Node0x1076ba0[shape=record, label="  %26 = shl i32 %24, 1"];
	Node0x1076c10[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x1076c80[shape=record, label="  %28 = shl i32 %7, 1"];
	Node0x1076cf0[shape=record, label="  %29 = and i32 %3, %0"];
	Node0x1076d60[shape=record, label="  %30 = sub i32 %25, %1"];
	Node0x1076dd0[shape=record, label="  %31 = add i32 %30, %29"];
	Node0x1076e70[shape=record, label="  %32 = mul i32 %31, 3"];
	Node0x10770f0[shape=record, label="  %33 = sub i32 %2, %21"];
	Node0x1077160[shape=record, label="  %34 = add i32 %33, %14"];
	Node0x10771d0[shape=record, label="  %35 = add i32 %34, %15"];
	Node0x1077240[shape=record, label="  %36 = sub i32 %35, %16"];
	Node0x10772b0[shape=record, label="  %37 = add i32 %36, %5"];
	Node0x1077320[shape=record, label="  %38 = add i32 %37, %18"];
	Node0x1077390[shape=record, label="  %39 = add i32 %38, %19"];
	Node0x1077400[shape=record, label="  %40 = sub i32 %39, %24"];
	Node0x1077470[shape=record, label="  %41 = add i32 %40, %12"];
	Node0x10774e0[shape=record, label="  %42 = add i32 %41, %20"];
	Node0x1077550[shape=record, label="  %43 = sub i32 %42, %23"];
	Node0x10775c0[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x1077630[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x10776a0[shape=record, label="  %46 = add i32 %45, %32"];
	Node0x1077710[shape=record, label="  %47 = icmp eq i32 %9, %46"];
	Node0x1016268[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1077bb0[shape=record, label="  %49 = tail call i32 @puts(i8* nonnull dereferenceable(1) %48)"];
	Node0x1077c00[shape=record, label="  ret void"];
	Node0x1075ba0 -> Node0x1076220;
	Node0x1076220 -> Node0x1076290;
	Node0x1076290 -> Node0x1076330;
	Node0x1076330 -> Node0x10763a0;
	Node0x10763a0 -> Node0x1076410;
	Node0x1076410 -> Node0x1076480;
	Node0x1076480 -> Node0x1076520;
	Node0x1076520 -> Node0x1076590;
	Node0x1076590 -> Node0x1076600;
	Node0x1076600 -> Node0x1076670;
	Node0x1076670 -> Node0x10766e0;
	Node0x10766e0 -> Node0x1076750;
	Node0x1076750 -> Node0x10767f0;
	Node0x10767f0 -> Node0x1076860;
	Node0x1076860 -> Node0x10768d0;
	Node0x10768d0 -> Node0x1076940;
	Node0x1076940 -> Node0x10769b0;
	Node0x10769b0 -> Node0x1076a50;
	Node0x1076a50 -> Node0x1076ac0;
	Node0x1076ac0 -> Node0x1076b30;
	Node0x1076b30 -> Node0x1076ba0;
	Node0x1076ba0 -> Node0x1076c10;
	Node0x1076c10 -> Node0x1076c80;
	Node0x1076c80 -> Node0x1076cf0;
	Node0x1076cf0 -> Node0x1076d60;
	Node0x1076d60 -> Node0x1076dd0;
	Node0x1076dd0 -> Node0x1076e70;
	Node0x1076e70 -> Node0x10770f0;
	Node0x10770f0 -> Node0x1077160;
	Node0x1077160 -> Node0x10771d0;
	Node0x10771d0 -> Node0x1077240;
	Node0x1077240 -> Node0x10772b0;
	Node0x10772b0 -> Node0x1077320;
	Node0x1077320 -> Node0x1077390;
	Node0x1077390 -> Node0x1077400;
	Node0x1077400 -> Node0x1077470;
	Node0x1077470 -> Node0x10774e0;
	Node0x10774e0 -> Node0x1077550;
	Node0x1077550 -> Node0x10775c0;
	Node0x10775c0 -> Node0x1077630;
	Node0x1077630 -> Node0x10776a0;
	Node0x10776a0 -> Node0x1077710;
	Node0x1077710 -> Node0x1016268;
	Node0x1016268 -> Node0x1077bb0;
	Node0x1077bb0 -> Node0x1077c00;
edge [color=red]
	Node0x1076220 -> Node0x1076290;
	Node0x1075ba0 -> Node0x1076330;
	Node0x1076330 -> Node0x10763a0;
	Node0x1076290 -> Node0x10763a0;
	Node0x1076410 -> Node0x1076480;
	Node0x1076480 -> Node0x1076520;
	Node0x1076590 -> Node0x1076600;
	Node0x1076590 -> Node0x10766e0;
	Node0x1076600 -> Node0x1076750;
	Node0x1076750 -> Node0x10767f0;
	Node0x1076860 -> Node0x10768d0;
	Node0x10769b0 -> Node0x1076a50;
	Node0x1076220 -> Node0x1076ac0;
	Node0x10769b0 -> Node0x1076b30;
	Node0x1076ac0 -> Node0x1076ba0;
	Node0x1076ba0 -> Node0x1076c10;
	Node0x1076290 -> Node0x1076c80;
	Node0x1076b30 -> Node0x1076d60;
	Node0x1076d60 -> Node0x1076dd0;
	Node0x1076cf0 -> Node0x1076dd0;
	Node0x1076dd0 -> Node0x1076e70;
	Node0x1076940 -> Node0x10770f0;
	Node0x10770f0 -> Node0x1077160;
	Node0x1076600 -> Node0x1077160;
	Node0x1077160 -> Node0x10771d0;
	Node0x1076670 -> Node0x10771d0;
	Node0x10771d0 -> Node0x1077240;
	Node0x10766e0 -> Node0x1077240;
	Node0x1077240 -> Node0x10772b0;
	Node0x1075ba0 -> Node0x10772b0;
	Node0x10772b0 -> Node0x1077320;
	Node0x10767f0 -> Node0x1077320;
	Node0x1077320 -> Node0x1077390;
	Node0x1076860 -> Node0x1077390;
	Node0x1077390 -> Node0x1077400;
	Node0x1076ac0 -> Node0x1077400;
	Node0x1077400 -> Node0x1077470;
	Node0x1076520 -> Node0x1077470;
	Node0x1077470 -> Node0x10774e0;
	Node0x10768d0 -> Node0x10774e0;
	Node0x10774e0 -> Node0x1077550;
	Node0x1076a50 -> Node0x1077550;
	Node0x1077550 -> Node0x10775c0;
	Node0x1076c80 -> Node0x10775c0;
	Node0x10775c0 -> Node0x1077630;
	Node0x1076c10 -> Node0x1077630;
	Node0x1077630 -> Node0x10776a0;
	Node0x1076e70 -> Node0x10776a0;
	Node0x10763a0 -> Node0x1077710;
	Node0x10776a0 -> Node0x1077710;
	Node0x1077710 -> Node0x1016268;
	Node0x1016268 -> Node0x1077bb0;
}
