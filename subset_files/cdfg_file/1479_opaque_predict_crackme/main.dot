digraph "DFG for'main' function" {
	Node0x1077dc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1077e48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1077ed8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1077f38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1077fe8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1078418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10784f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x10785f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10786b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1078768[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1078828[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x10788d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1072bd0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1078ad8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1079a48[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x107a0b8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x107a118[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x107a190[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x107a200[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x107a270[shape=record, label="  %16 = and i32 %13, %15"];
	Node0x107a2e0[shape=record, label="  %17 = sub i32 1, %14"];
	Node0x107a350[shape=record, label="  %18 = add i32 %17, %16"];
	Node0x107a3c0[shape=record, label="  %19 = and i32 %12, %11"];
	Node0x107a430[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x107a4a0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x107a510[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0x107a580[shape=record, label="  %23 = or i32 %11, %22"];
	Node0x107a5f0[shape=record, label="  %24 = xor i32 %12, %11"];
	Node0x107a660[shape=record, label="  %25 = shl i32 %22, 1"];
	Node0x107a6d0[shape=record, label="  %26 = xor i32 %23, -1"];
	Node0x107a740[shape=record, label="  %27 = mul i32 %26, -5"];
	Node0x107a7b0[shape=record, label="  %28 = shl i32 %13, 1"];
	Node0x107a820[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x107a890[shape=record, label="  %30 = shl i32 %10, 1"];
	Node0x107a900[shape=record, label="  %31 = or i32 %13, %10"];
	Node0x107a970[shape=record, label="  %32 = shl i32 %31, 2"];
	Node0x107a9e0[shape=record, label="  %33 = or i32 %13, %15"];
	Node0x107aa50[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x107aac0[shape=record, label="  %35 = xor i32 %34, -2"];
	Node0x107ab30[shape=record, label="  %36 = shl i32 %16, 1"];
	Node0x107aba0[shape=record, label="  %37 = and i32 %13, %10"];
	Node0x107ac10[shape=record, label="  %38 = sub i32 1, %11"];
	Node0x107ac80[shape=record, label="  %39 = add i32 %38, %31"];
	Node0x107acf0[shape=record, label="  %40 = add i32 %39, %37"];
	Node0x107ad60[shape=record, label="  %41 = mul i32 %40, 3"];
	Node0x107add0[shape=record, label="  %42 = sub i32 %12, %30"];
	Node0x107ae40[shape=record, label="  %43 = add i32 %42, %23"];
	Node0x107aeb0[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x107af20[shape=record, label="  %45 = sub i32 %44, %25"];
	Node0x107af90[shape=record, label="  %46 = add i32 %45, %14"];
	Node0x107b000[shape=record, label="  %47 = add i32 %46, %27"];
	Node0x107b070[shape=record, label="  %48 = add i32 %47, %28"];
	Node0x107b0e0[shape=record, label="  %49 = sub i32 %48, %33"];
	Node0x107b150[shape=record, label="  %50 = add i32 %49, %21"];
	Node0x107b1c0[shape=record, label="  %51 = add i32 %50, %29"];
	Node0x107b230[shape=record, label="  %52 = sub i32 %51, %32"];
	Node0x107b2a0[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x107b310[shape=record, label="  %54 = add i32 %53, %35"];
	Node0x107b380[shape=record, label="  %55 = add i32 %54, %41"];
	Node0x107b3f0[shape=record, label="  %56 = icmp eq i32 %18, %55"];
	Node0x10178b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x107b480[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x107b728[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x107b888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x107b998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x107baa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x107bb68[shape=record, label="  ret i32 0"];
	Node0x1077dc8 -> Node0x1077e48;
	Node0x1077e48 -> Node0x1077ed8;
	Node0x1077ed8 -> Node0x1077f38;
	Node0x1077f38 -> Node0x1077fe8;
	Node0x1077fe8 -> Node0x1078418;
	Node0x1078418 -> Node0x10784f8;
	Node0x10784f8 -> Node0x10785f8;
	Node0x10785f8 -> Node0x10786b8;
	Node0x10786b8 -> Node0x1078768;
	Node0x1078768 -> Node0x1078828;
	Node0x1078828 -> Node0x10788d8;
	Node0x10788d8 -> Node0x1072bd0;
	Node0x1072bd0 -> Node0x1078ad8;
	Node0x1078ad8 -> Node0x1079a48;
	Node0x1079a48 -> Node0x107a0b8;
	Node0x107a0b8 -> Node0x107a118;
	Node0x107a118 -> Node0x107a190;
	Node0x107a190 -> Node0x107a200;
	Node0x107a200 -> Node0x107a270;
	Node0x107a270 -> Node0x107a2e0;
	Node0x107a2e0 -> Node0x107a350;
	Node0x107a350 -> Node0x107a3c0;
	Node0x107a3c0 -> Node0x107a430;
	Node0x107a430 -> Node0x107a4a0;
	Node0x107a4a0 -> Node0x107a510;
	Node0x107a510 -> Node0x107a580;
	Node0x107a580 -> Node0x107a5f0;
	Node0x107a5f0 -> Node0x107a660;
	Node0x107a660 -> Node0x107a6d0;
	Node0x107a6d0 -> Node0x107a740;
	Node0x107a740 -> Node0x107a7b0;
	Node0x107a7b0 -> Node0x107a820;
	Node0x107a820 -> Node0x107a890;
	Node0x107a890 -> Node0x107a900;
	Node0x107a900 -> Node0x107a970;
	Node0x107a970 -> Node0x107a9e0;
	Node0x107a9e0 -> Node0x107aa50;
	Node0x107aa50 -> Node0x107aac0;
	Node0x107aac0 -> Node0x107ab30;
	Node0x107ab30 -> Node0x107aba0;
	Node0x107aba0 -> Node0x107ac10;
	Node0x107ac10 -> Node0x107ac80;
	Node0x107ac80 -> Node0x107acf0;
	Node0x107acf0 -> Node0x107ad60;
	Node0x107ad60 -> Node0x107add0;
	Node0x107add0 -> Node0x107ae40;
	Node0x107ae40 -> Node0x107aeb0;
	Node0x107aeb0 -> Node0x107af20;
	Node0x107af20 -> Node0x107af90;
	Node0x107af90 -> Node0x107b000;
	Node0x107b000 -> Node0x107b070;
	Node0x107b070 -> Node0x107b0e0;
	Node0x107b0e0 -> Node0x107b150;
	Node0x107b150 -> Node0x107b1c0;
	Node0x107b1c0 -> Node0x107b230;
	Node0x107b230 -> Node0x107b2a0;
	Node0x107b2a0 -> Node0x107b310;
	Node0x107b310 -> Node0x107b380;
	Node0x107b380 -> Node0x107b3f0;
	Node0x107b3f0 -> Node0x10178b8;
	Node0x10178b8 -> Node0x107b480;
	Node0x107b480 -> Node0x107b728;
	Node0x107b728 -> Node0x107b888;
	Node0x107b888 -> Node0x107b998;
	Node0x107b998 -> Node0x107baa8;
	Node0x107baa8 -> Node0x107bb68;
edge [color=red]
	Node0x1077dc8 -> Node0x1077fe8;
	Node0x1077fe8 -> Node0x1078418;
	Node0x1077e48 -> Node0x10784f8;
	Node0x10784f8 -> Node0x10785f8;
	Node0x1077ed8 -> Node0x10786b8;
	Node0x10786b8 -> Node0x1078768;
	Node0x1077f38 -> Node0x1078828;
	Node0x1078828 -> Node0x10788d8;
	Node0x1077dc8 -> Node0x1072bd0;
	Node0x1077e48 -> Node0x1072bd0;
	Node0x1077ed8 -> Node0x1072bd0;
	Node0x1077f38 -> Node0x1072bd0;
	Node0x1077dc8 -> Node0x1078ad8;
	Node0x1077e48 -> Node0x1079a48;
	Node0x1077ed8 -> Node0x107a0b8;
	Node0x1077f38 -> Node0x107a118;
	Node0x107a0b8 -> Node0x107a190;
	Node0x1079a48 -> Node0x107a190;
	Node0x1078ad8 -> Node0x107a200;
	Node0x107a118 -> Node0x107a270;
	Node0x107a200 -> Node0x107a270;
	Node0x107a190 -> Node0x107a2e0;
	Node0x107a2e0 -> Node0x107a350;
	Node0x107a270 -> Node0x107a350;
	Node0x107a0b8 -> Node0x107a3c0;
	Node0x1079a48 -> Node0x107a3c0;
	Node0x107a3c0 -> Node0x107a430;
	Node0x107a430 -> Node0x107a4a0;
	Node0x107a0b8 -> Node0x107a510;
	Node0x1079a48 -> Node0x107a580;
	Node0x107a510 -> Node0x107a580;
	Node0x107a0b8 -> Node0x107a5f0;
	Node0x1079a48 -> Node0x107a5f0;
	Node0x107a510 -> Node0x107a660;
	Node0x107a580 -> Node0x107a6d0;
	Node0x107a6d0 -> Node0x107a740;
	Node0x107a118 -> Node0x107a7b0;
	Node0x107a7b0 -> Node0x107a820;
	Node0x1078ad8 -> Node0x107a890;
	Node0x107a118 -> Node0x107a900;
	Node0x1078ad8 -> Node0x107a900;
	Node0x107a900 -> Node0x107a970;
	Node0x107a118 -> Node0x107a9e0;
	Node0x107a200 -> Node0x107a9e0;
	Node0x107a9e0 -> Node0x107aa50;
	Node0x107aa50 -> Node0x107aac0;
	Node0x107a270 -> Node0x107ab30;
	Node0x107a118 -> Node0x107aba0;
	Node0x1078ad8 -> Node0x107aba0;
	Node0x1079a48 -> Node0x107ac10;
	Node0x107ac10 -> Node0x107ac80;
	Node0x107a900 -> Node0x107ac80;
	Node0x107ac80 -> Node0x107acf0;
	Node0x107aba0 -> Node0x107acf0;
	Node0x107acf0 -> Node0x107ad60;
	Node0x107a0b8 -> Node0x107add0;
	Node0x107a890 -> Node0x107add0;
	Node0x107add0 -> Node0x107ae40;
	Node0x107a580 -> Node0x107ae40;
	Node0x107ae40 -> Node0x107aeb0;
	Node0x107a5f0 -> Node0x107aeb0;
	Node0x107aeb0 -> Node0x107af20;
	Node0x107a660 -> Node0x107af20;
	Node0x107af20 -> Node0x107af90;
	Node0x107a190 -> Node0x107af90;
	Node0x107af90 -> Node0x107b000;
	Node0x107a740 -> Node0x107b000;
	Node0x107b000 -> Node0x107b070;
	Node0x107a7b0 -> Node0x107b070;
	Node0x107b070 -> Node0x107b0e0;
	Node0x107a9e0 -> Node0x107b0e0;
	Node0x107b0e0 -> Node0x107b150;
	Node0x107a4a0 -> Node0x107b150;
	Node0x107b150 -> Node0x107b1c0;
	Node0x107a820 -> Node0x107b1c0;
	Node0x107b1c0 -> Node0x107b230;
	Node0x107a970 -> Node0x107b230;
	Node0x107b230 -> Node0x107b2a0;
	Node0x107ab30 -> Node0x107b2a0;
	Node0x107b2a0 -> Node0x107b310;
	Node0x107aac0 -> Node0x107b310;
	Node0x107b310 -> Node0x107b380;
	Node0x107ad60 -> Node0x107b380;
	Node0x107a350 -> Node0x107b3f0;
	Node0x107b380 -> Node0x107b3f0;
	Node0x107b3f0 -> Node0x10178b8;
	Node0x10178b8 -> Node0x107b480;
	Node0x1078828 -> Node0x107b728;
	Node0x10786b8 -> Node0x107b888;
	Node0x10784f8 -> Node0x107b998;
	Node0x1077fe8 -> Node0x107baa8;
}
