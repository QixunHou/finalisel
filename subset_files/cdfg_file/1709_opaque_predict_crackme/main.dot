digraph "DFG for'main' function" {
	Node0xbaf9d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xbafa58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xbafae8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xbaff48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xbb0028[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xbb0148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xbb0380[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xbb0438[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xbb13a8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xbb1a30[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xbb1aa0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0xbb1b10[shape=record, label="  %10 = or i32 %7, %6"];
	Node0xbb1b80[shape=record, label="  %11 = and i32 %6, %8"];
	Node0xbb1bf0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0xbb1c60[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xbb1cd0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0xbb1d40[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0xbb1db0[shape=record, label="  %16 = mul i32 %15, -3"];
	Node0xbb1e20[shape=record, label="  %17 = shl i32 %9, 1"];
	Node0xbb1e90[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0xbb1f00[shape=record, label="  %19 = sub i32 -2, %7"];
	Node0xbb1f70[shape=record, label="  %20 = sub i32 %19, %10"];
	Node0xbb1fe0[shape=record, label="  %21 = add i32 %20, %12"];
	Node0xbb2050[shape=record, label="  %22 = add i32 %21, %14"];
	Node0xbb20c0[shape=record, label="  %23 = sub i32 %22, %11"];
	Node0xbb2130[shape=record, label="  %24 = add i32 %23, %16"];
	Node0xbb21a0[shape=record, label="  %25 = sub i32 %24, %18"];
	Node0xbb2210[shape=record, label="  %26 = icmp eq i32 %9, %25"];
	Node0xb509d8[shape=record, label="  %27 = select i1 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xbb22a0[shape=record, label="  %28 = call i32 @puts(i8* nonnull dereferenceable(1) %27) #5"];
	Node0xbb24f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xbb2658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xbb2718[shape=record, label="  ret i32 0"];
	Node0xbaf9d8 -> Node0xbafa58;
	Node0xbafa58 -> Node0xbafae8;
	Node0xbafae8 -> Node0xbaff48;
	Node0xbaff48 -> Node0xbb0028;
	Node0xbb0028 -> Node0xbb0148;
	Node0xbb0148 -> Node0xbb0380;
	Node0xbb0380 -> Node0xbb0438;
	Node0xbb0438 -> Node0xbb13a8;
	Node0xbb13a8 -> Node0xbb1a30;
	Node0xbb1a30 -> Node0xbb1aa0;
	Node0xbb1aa0 -> Node0xbb1b10;
	Node0xbb1b10 -> Node0xbb1b80;
	Node0xbb1b80 -> Node0xbb1bf0;
	Node0xbb1bf0 -> Node0xbb1c60;
	Node0xbb1c60 -> Node0xbb1cd0;
	Node0xbb1cd0 -> Node0xbb1d40;
	Node0xbb1d40 -> Node0xbb1db0;
	Node0xbb1db0 -> Node0xbb1e20;
	Node0xbb1e20 -> Node0xbb1e90;
	Node0xbb1e90 -> Node0xbb1f00;
	Node0xbb1f00 -> Node0xbb1f70;
	Node0xbb1f70 -> Node0xbb1fe0;
	Node0xbb1fe0 -> Node0xbb2050;
	Node0xbb2050 -> Node0xbb20c0;
	Node0xbb20c0 -> Node0xbb2130;
	Node0xbb2130 -> Node0xbb21a0;
	Node0xbb21a0 -> Node0xbb2210;
	Node0xbb2210 -> Node0xb509d8;
	Node0xb509d8 -> Node0xbb22a0;
	Node0xbb22a0 -> Node0xbb24f8;
	Node0xbb24f8 -> Node0xbb2658;
	Node0xbb2658 -> Node0xbb2718;
edge [color=red]
	Node0xbaf9d8 -> Node0xbafae8;
	Node0xbafae8 -> Node0xbaff48;
	Node0xbafa58 -> Node0xbb0028;
	Node0xbb0028 -> Node0xbb0148;
	Node0xbaf9d8 -> Node0xbb0380;
	Node0xbafa58 -> Node0xbb0380;
	Node0xbaf9d8 -> Node0xbb0438;
	Node0xbafa58 -> Node0xbb13a8;
	Node0xbb13a8 -> Node0xbb1a30;
	Node0xbb0438 -> Node0xbb1aa0;
	Node0xbb1a30 -> Node0xbb1aa0;
	Node0xbb13a8 -> Node0xbb1b10;
	Node0xbb0438 -> Node0xbb1b10;
	Node0xbb0438 -> Node0xbb1b80;
	Node0xbb1a30 -> Node0xbb1b80;
	Node0xbb1b80 -> Node0xbb1bf0;
	Node0xbb13a8 -> Node0xbb1c60;
	Node0xbb0438 -> Node0xbb1c60;
	Node0xbb1c60 -> Node0xbb1cd0;
	Node0xbb1b10 -> Node0xbb1d40;
	Node0xbb1d40 -> Node0xbb1db0;
	Node0xbb1aa0 -> Node0xbb1e20;
	Node0xbb1e20 -> Node0xbb1e90;
	Node0xbb13a8 -> Node0xbb1f00;
	Node0xbb1f00 -> Node0xbb1f70;
	Node0xbb1b10 -> Node0xbb1f70;
	Node0xbb1f70 -> Node0xbb1fe0;
	Node0xbb1bf0 -> Node0xbb1fe0;
	Node0xbb1fe0 -> Node0xbb2050;
	Node0xbb1cd0 -> Node0xbb2050;
	Node0xbb2050 -> Node0xbb20c0;
	Node0xbb1b80 -> Node0xbb20c0;
	Node0xbb20c0 -> Node0xbb2130;
	Node0xbb1db0 -> Node0xbb2130;
	Node0xbb2130 -> Node0xbb21a0;
	Node0xbb1e90 -> Node0xbb21a0;
	Node0xbb1aa0 -> Node0xbb2210;
	Node0xbb21a0 -> Node0xbb2210;
	Node0xbb2210 -> Node0xb509d8;
	Node0xb509d8 -> Node0xbb22a0;
	Node0xbb0028 -> Node0xbb24f8;
	Node0xbafae8 -> Node0xbb2658;
}
