; ModuleID = '../.././c_source_file/1561_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1561_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %0
  %8 = xor i32 %1, -1
  %9 = or i32 %8, %0
  %10 = xor i32 %9, -1
  %11 = or i32 %7, %10
  %12 = xor i32 %5, -1
  %13 = or i32 %12, %4
  %14 = and i32 %13, %3
  %15 = add i32 %14, %11
  %16 = or i32 %7, %8
  %17 = xor i32 %0, -1
  %18 = xor i32 %2, -1
  %19 = and i32 %18, %1
  %20 = or i32 %19, %17
  %21 = xor i32 %2, %1
  %22 = xor i32 %21, -1
  %23 = add i32 %21, 1
  %24 = or i32 %18, %0
  %25 = xor i32 %1, %0
  %26 = xor i32 %25, -1
  %27 = and i32 %24, %26
  %28 = xor i32 %2, %0
  %29 = and i32 %28, %25
  %30 = and i32 %2, %1
  %31 = xor i32 %30, -1
  %32 = xor i32 %31, %0
  %33 = shl i32 %32, 1
  %34 = add i32 %9, 1
  %35 = and i32 %28, %26
  %36 = or i32 %18, %26
  %37 = and i32 %18, %0
  %38 = xor i32 %37, -1
  %39 = and i32 %38, %26
  %40 = shl i32 %39, 1
  %41 = and i32 %1, %0
  %42 = or i32 %41, %22
  %43 = and i32 %22, %0
  %44 = or i32 %18, %1
  %45 = xor i32 %44, %41
  %46 = xor i32 %41, -1
  %47 = and i32 %22, %46
  %48 = and i32 %8, %0
  %49 = xor i32 %48, -1
  %50 = and i32 %49, %2
  %51 = xor i32 %44, -1
  %52 = or i32 %51, %17
  %53 = and i32 %28, %46
  %54 = xor i32 %7, -1
  %55 = and i32 %54, %26
  %56 = or i32 %7, %26
  %57 = shl i32 %56, 1
  %58 = and i32 %28, %9
  %59 = or i32 %48, %22
  %60 = or i32 %1, %0
  %61 = xor i32 %60, -1
  %62 = shl i32 %61, 1
  %63 = xor i32 %24, -1
  %64 = xor i32 %63, %1
  %65 = or i32 %28, %41
  %66 = and i32 %30, %17
  %67 = and i32 %21, %0
  %68 = or i32 %66, %67
  %69 = and i32 %26, %2
  %70 = or i32 %37, %25
  %71 = xor i32 %28, -1
  %72 = or i32 %71, %26
  %73 = or i32 %2, %1
  %74 = xor i32 %73, %0
  %75 = or i32 %63, %26
  %76 = xor i32 %73, -1
  %77 = or i32 %76, %0
  %78 = and i32 %60, %22
  %79 = or i32 %22, %61
  %80 = or i32 %2, %0
  %81 = xor i32 %80, -1
  %82 = or i32 %25, %81
  %83 = shl i32 %24, 1
  %84 = xor i32 %76, %0
  %85 = shl i32 %84, 1
  %86 = xor i32 %19, %0
  %87 = shl i32 %86, 1
  %88 = xor i32 %37, %31
  %89 = or i32 %7, %1
  %90 = add i32 %25, 1
  %91 = xor i32 %19, -1
  %92 = xor i32 %91, %0
  %93 = or i32 %73, %17
  %94 = or i32 %41, %81
  %95 = or i32 %30, %0
  %96 = or i32 %81, %26
  %97 = xor i32 %30, %0
  %98 = xor i32 %7, %1
  %99 = and i32 %8, %2
  %100 = and i32 %99, %0
  %101 = or i32 %21, %0
  %102 = xor i32 %100, %101
  %103 = and i32 %71, %46
  %104 = or i32 %91, %0
  %105 = shl i32 %104, 1
  %106 = and i32 %31, %0
  %107 = shl i32 %106, 1
  %108 = add i32 %44, 1
  %109 = or i32 %81, %8
  %110 = or i32 %7, %76
  %111 = shl i32 %110, 1
  %112 = xor i32 %7, %60
  %113 = and i32 %25, %71
  %114 = shl i32 %113, 1
  %115 = or i32 %76, %17
  %116 = and i32 %91, %17
  %117 = or i32 %25, %63
  %118 = or i32 %31, %17
  %119 = and i32 %24, %25
  %120 = and i32 %28, %8
  %121 = or i32 %21, %61
  %122 = and i32 %71, %49
  %123 = and i32 %24, %1
  %124 = xor i32 %37, %1
  %125 = and i32 %30, %0
  %126 = and i32 %21, %17
  %127 = xor i32 %125, -1
  %128 = xor i32 %126, %127
  %129 = or i32 %30, %48
  %130 = xor i32 %7, %73
  %131 = or i32 %25, %18
  %132 = and i32 %9, %18
  %133 = xor i32 %80, %41
  %134 = and i32 %18, %26
  %135 = and i32 %21, %9
  %136 = shl i32 %135, 1
  %137 = xor i32 %21, %0
  %138 = and i32 %9, %22
  %139 = add i32 %41, 1
  %140 = and i32 %71, %8
  %141 = and i32 %44, %17
  %142 = shl i32 %141, 1
  %143 = and i32 %99, %17
  %144 = or i32 %8, %2
  %145 = and i32 %144, %0
  %146 = or i32 %143, %145
  %147 = shl i32 %91, 1
  %148 = shl i32 %60, 1
  %149 = and i32 %28, %60
  %150 = xor i32 %74, %127
  %151 = xor i32 %73, %41
  %152 = and i32 %25, %54
  %153 = xor i32 %80, %1
  %154 = or i32 %18, %61
  %155 = xor i32 %101, -1
  %156 = or i32 %100, %155
  %157 = and i32 %73, %0
  %158 = or i32 %66, %157
  %159 = and i32 %21, %49
  %160 = or i32 %41, %63
  %161 = or i32 %7, %25
  %162 = xor i32 %24, %1
  %163 = shl i32 %49, 1
  %164 = and i32 %28, %49
  %165 = and i32 %144, %17
  %166 = xor i32 %165, 2147483647
  %167 = xor i32 %166, %100
  %168 = or i32 %10, %2
  %169 = or i32 %22, %10
  %170 = or i32 %48, %71
  %171 = or i32 %21, %17
  %172 = xor i32 %143, %171
  %173 = or i32 %28, %26
  %174 = or i32 %28, %8
  %175 = or i32 %71, %1
  %176 = shl i32 %175, 1
  %177 = and i32 %21, %46
  %178 = and i32 %60, %18
  %179 = xor i32 %44, %0
  %180 = xor i32 %37, %44
  %181 = and i32 %71, %26
  %182 = or i32 %7, %19
  %183 = or i32 %19, %48
  %184 = and i32 %38, %1
  %185 = xor i32 %144, %0
  %186 = or i32 %100, %185
  %187 = xor i32 %125, %137
  %188 = or i32 %125, %74
  %189 = and i32 %21, %60
  %190 = or i32 %71, %61
  %191 = xor i32 %137, -1
  %192 = or i32 %125, %191
  %193 = and i32 %25, %18
  %194 = and i32 %91, %0
  %195 = or i32 %28, %25
  %196 = or i32 %30, %17
  %197 = or i32 %21, %10
  %198 = or i32 %37, %8
  %199 = add i32 %37, 1
  %200 = or i32 %28, %1
  %201 = xor i32 %41, %2
  %202 = or i32 %41, %18
  %203 = or i32 %37, %26
  %204 = and i32 %25, %2
  %205 = xor i32 %7, %91
  %206 = or i32 %7, %61
  %207 = xor i32 %145, -1
  %208 = xor i32 %143, %207
  %209 = and i32 %38, %8
  %210 = xor i32 %38, %1
  %211 = and i32 %60, %2
  %212 = xor i32 %46, %2
  %213 = or i32 %71, %10
  %214 = or i32 %51, %0
  %215 = and i32 %54, %8
  %216 = xor i32 %60, %2
  %217 = and i32 %80, %26
  %218 = and i32 %73, %17
  %219 = or i32 %125, %218
  %220 = shl i32 %219, 1
  %221 = or i32 %28, %10
  %222 = and i32 %25, %38
  %223 = or i32 %63, %1
  %224 = xor i32 %48, %31
  %225 = xor i32 %67, -1
  %226 = xor i32 %66, %225
  %227 = and i32 %18, %49
  %228 = and i32 %24, %8
  %229 = or i32 %61, %2
  %230 = xor i32 %9, %2
  %231 = xor i32 %48, %2
  %232 = or i32 %100, %165
  %233 = and i32 %22, %49
  %234 = or i32 %44, %17
  %235 = or i32 %26, %2
  %236 = or i32 %41, %51
  %237 = or i32 %63, %8
  %238 = xor i32 %10, %2
  %239 = or i32 %48, %2
  %240 = xor i32 %185, -1
  %241 = xor i32 %100, %240
  %242 = or i32 %25, %2
  %243 = shl i32 %242, 1
  %244 = or i32 %31, %0
  %245 = and i32 %80, %1
  %246 = or i32 %28, %61
  %247 = or i32 %37, %30
  %248 = or i32 %37, %51
  %249 = and i32 %44, %0
  %250 = or i32 %41, %76
  %251 = shl i32 %250, 1
  %252 = and i32 %71, %1
  %253 = xor i32 %54, %1
  %254 = xor i32 %48, %91
  %255 = and i32 %54, %1
  %256 = and i32 %31, %17
  %257 = or i32 %44, %0
  %258 = add i32 %73, 1
  %259 = xor i32 %171, -1
  %260 = or i32 %143, %259
  %261 = xor i32 %218, %127
  %262 = xor i32 %24, %41
  %263 = add i32 %7, 1
  %264 = or i32 %91, %17
  %265 = or i32 %28, %48
  %266 = xor i32 %51, %0
  %267 = or i32 %37, %1
  %268 = or i32 %100, %137
  %269 = shl i32 %268, 1
  %270 = and i32 %76, %17
  %271 = mul i32 %270, 6
  %272 = and i32 %19, %17
  %273 = and i32 %76, %0
  %274 = mul i32 %273, -10
  %275 = and i32 %19, %0
  %276 = shl i32 %275, 2
  %277 = and i32 %51, %17
  %278 = mul i32 %277, -19
  %279 = and i32 %51, %0
  %280 = xor i32 %3, -1
  %281 = or i32 %5, %4
  %282 = xor i32 %281, -1
  %283 = or i32 %282, %3
  %284 = and i32 %5, %4
  %285 = shl i32 %284, 1
  %286 = and i32 %5, %3
  %287 = xor i32 %286, -1
  %288 = xor i32 %4, -1
  %289 = or i32 %5, %3
  %290 = and i32 %289, %288
  %291 = xor i32 %13, -1
  %292 = or i32 %291, %280
  %293 = or i32 %284, %3
  %294 = or i32 %4, %3
  %295 = and i32 %12, %3
  %296 = xor i32 %295, -1
  %297 = and i32 %296, %288
  %298 = and i32 %280, %4
  %299 = xor i32 %298, %296
  %300 = and i32 %13, %280
  %301 = xor i32 %281, %3
  %302 = xor i32 %284, %294
  %303 = xor i32 %4, %3
  %304 = xor i32 %303, -1
  %305 = or i32 %284, %304
  %306 = shl i32 %305, 1
  %307 = xor i32 %5, %4
  %308 = xor i32 %307, -1
  %309 = or i32 %308, %280
  %310 = or i32 %280, %4
  %311 = and i32 %307, %310
  %312 = and i32 %4, %3
  %313 = xor i32 %312, -1
  %314 = and i32 %313, %5
  %315 = or i32 %12, %3
  %316 = xor i32 %315, %4
  %317 = shl i32 %316, 1
  %318 = and i32 %286, %4
  %319 = or i32 %318, %290
  %320 = xor i32 %284, -1
  %321 = and i32 %320, %280
  %322 = and i32 %12, %304
  %323 = or i32 %291, %3
  %324 = shl i32 %323, 1
  %325 = and i32 %281, %303
  %326 = or i32 %315, %288
  %327 = or i32 %288, %5
  %328 = and i32 %327, %280
  %329 = or i32 %295, %4
  %330 = xor i32 %289, -1
  %331 = or i32 %330, %288
  %332 = and i32 %304, %5
  %333 = xor i32 %298, -1
  %334 = and i32 %12, %333
  %335 = and i32 %289, %4
  %336 = xor i32 %310, -1
  %337 = or i32 %12, %336
  %338 = xor i32 %280, %5
  %339 = and i32 %338, %294
  %340 = xor i32 %294, -1
  %341 = or i32 %308, %340
  %342 = and i32 %330, %288
  %343 = and i32 %330, %4
  %344 = and i32 %295, %4
  %345 = xor i32 %315, -1
  %346 = and i32 %345, %288
  %347 = and i32 %286, %288
  %348 = and i32 %345, %4
  %349 = add i32 %41, %18
  %350 = add i32 %349, %71
  %351 = add i32 %350, %231
  %352 = add i32 %351, %229
  %353 = add i32 %352, %21
  %354 = add i32 %353, %193
  %355 = add i32 %354, %134
  %356 = add i32 %355, %236
  %357 = add i32 %356, %221
  %358 = add i32 %357, %213
  %359 = add i32 %358, %197
  %360 = add i32 %359, %164
  %361 = add i32 %360, %140
  %362 = add i32 %361, %124
  %363 = add i32 %362, %120
  %364 = add i32 %363, %119
  %365 = add i32 %364, %115
  %366 = add i32 %365, %101
  %367 = add i32 %366, %42
  %368 = add i32 %367, %313
  %369 = add i32 %368, %188
  %370 = add i32 %369, %146
  %371 = add i32 %370, %167
  %372 = add i32 %371, %286
  %373 = shl i32 %372, 1
  %374 = sub i32 %50, %125
  %375 = sub i32 %374, %267
  %376 = add i32 %375, %217
  %377 = sub i32 %376, %209
  %378 = add i32 %377, %205
  %379 = sub i32 %378, %192
  %380 = sub i32 %379, %347
  %381 = add i32 %380, %318
  %382 = add i32 %381, %344
  %383 = mul i32 %382, 3
  %384 = add i32 %248, %66
  %385 = sub i32 %126, %384
  %386 = sub i32 %385, %152
  %387 = add i32 %386, %151
  %388 = add i32 %387, %311
  %389 = sub i32 %388, %335
  %390 = mul i32 %389, 5
  %391 = add i32 %121, %132
  %392 = add i32 %391, %329
  %393 = add i32 %392, %348
  %394 = shl i32 %393, 2
  %395 = sub i32 %279, %343
  %396 = mul i32 %395, 14
  %397 = add i32 %346, %272
  %398 = mul i32 %397, -9
  %399 = shl i32 %1, 1
  %400 = sub i32 %34, %399
  %401 = add i32 %400, %90
  %402 = sub i32 %401, %9
  %403 = add i32 %402, %139
  %404 = sub i32 %403, %48
  %405 = add i32 %404, %25
  %406 = add i32 %405, %23
  %407 = add i32 %406, %36
  %408 = sub i32 %407, %62
  %409 = sub i32 %408, %69
  %410 = add i32 %409, %108
  %411 = sub i32 %410, %131
  %412 = add i32 %411, %37
  %413 = sub i32 %412, %148
  %414 = add i32 %413, %154
  %415 = sub i32 %414, %163
  %416 = add i32 %415, %168
  %417 = sub i32 %416, %178
  %418 = add i32 %417, %73
  %419 = add i32 %418, %80
  %420 = add i32 %419, %199
  %421 = sub i32 %420, %201
  %422 = add i32 %421, %202
  %423 = sub i32 %422, %204
  %424 = add i32 %423, %211
  %425 = sub i32 %424, %7
  %426 = add i32 %425, %212
  %427 = sub i32 %426, %216
  %428 = sub i32 %427, %227
  %429 = add i32 %428, %230
  %430 = sub i32 %429, %235
  %431 = sub i32 %430, %238
  %432 = add i32 %431, %239
  %433 = add i32 %432, %63
  %434 = add i32 %433, %258
  %435 = add i32 %434, %263
  %436 = add i32 %435, %280
  %437 = add i32 %436, %20
  %438 = add i32 %437, %16
  %439 = add i32 %438, %27
  %440 = add i32 %439, %29
  %441 = add i32 %440, %35
  %442 = add i32 %441, %43
  %443 = sub i32 %442, %45
  %444 = add i32 %443, %47
  %445 = add i32 %444, %52
  %446 = add i32 %445, %53
  %447 = add i32 %446, %55
  %448 = sub i32 %447, %58
  %449 = add i32 %448, %59
  %450 = sub i32 %449, %64
  %451 = sub i32 %450, %65
  %452 = add i32 %451, %70
  %453 = sub i32 %452, %72
  %454 = add i32 %453, %74
  %455 = sub i32 %454, %75
  %456 = add i32 %455, %77
  %457 = add i32 %456, %78
  %458 = add i32 %457, %79
  %459 = sub i32 %458, %82
  %460 = sub i32 %459, %83
  %461 = sub i32 %460, %88
  %462 = add i32 %461, %89
  %463 = sub i32 %462, %92
  %464 = add i32 %463, %93
  %465 = add i32 %464, %94
  %466 = add i32 %465, %95
  %467 = add i32 %466, %96
  %468 = add i32 %467, %97
  %469 = sub i32 %468, %98
  %470 = add i32 %469, %103
  %471 = sub i32 %470, %109
  %472 = sub i32 %471, %112
  %473 = sub i32 %472, %116
  %474 = sub i32 %473, %117
  %475 = sub i32 %474, %118
  %476 = sub i32 %475, %122
  %477 = add i32 %476, %123
  %478 = sub i32 %477, %67
  %479 = sub i32 %478, %129
  %480 = add i32 %479, %130
  %481 = sub i32 %480, %133
  %482 = sub i32 %481, %137
  %483 = sub i32 %482, %138
  %484 = sub i32 %483, %147
  %485 = sub i32 %484, %149
  %486 = add i32 %485, %153
  %487 = add i32 %486, %159
  %488 = sub i32 %487, %160
  %489 = add i32 %488, %161
  %490 = add i32 %489, %162
  %491 = add i32 %490, %169
  %492 = sub i32 %491, %170
  %493 = add i32 %492, %173
  %494 = add i32 %493, %174
  %495 = add i32 %494, %177
  %496 = sub i32 %495, %179
  %497 = add i32 %496, %180
  %498 = add i32 %497, %181
  %499 = add i32 %498, %182
  %500 = add i32 %499, %183
  %501 = sub i32 %500, %184
  %502 = add i32 %501, %189
  %503 = sub i32 %502, %190
  %504 = add i32 %503, %194
  %505 = sub i32 %504, %195
  %506 = sub i32 %505, %196
  %507 = sub i32 %506, %198
  %508 = sub i32 %507, %200
  %509 = sub i32 %508, %203
  %510 = sub i32 %509, %206
  %511 = add i32 %510, %157
  %512 = add i32 %511, %210
  %513 = sub i32 %512, %214
  %514 = add i32 %513, %215
  %515 = add i32 %514, %222
  %516 = add i32 %515, %223
  %517 = add i32 %516, %224
  %518 = sub i32 %517, %228
  %519 = add i32 %518, %233
  %520 = add i32 %519, %234
  %521 = sub i32 %520, %237
  %522 = sub i32 %521, %171
  %523 = add i32 %522, %221
  %524 = sub i32 %523, %243
  %525 = add i32 %524, %244
  %526 = add i32 %525, %245
  %527 = sub i32 %526, %246
  %528 = sub i32 %527, %247
  %529 = add i32 %528, %249
  %530 = sub i32 %529, %252
  %531 = add i32 %530, %253
  %532 = add i32 %531, %254
  %533 = sub i32 %532, %255
  %534 = sub i32 %533, %256
  %535 = add i32 %534, %257
  %536 = sub i32 %535, %262
  %537 = add i32 %536, %264
  %538 = add i32 %537, %265
  %539 = add i32 %538, %266
  %540 = add i32 %539, %288
  %541 = sub i32 %540, %33
  %542 = sub i32 %541, %40
  %543 = sub i32 %542, %57
  %544 = sub i32 %543, %68
  %545 = sub i32 %544, %85
  %546 = sub i32 %545, %87
  %547 = sub i32 %546, %102
  %548 = sub i32 %547, %105
  %549 = sub i32 %548, %107
  %550 = sub i32 %549, %111
  %551 = sub i32 %550, %114
  %552 = add i32 %551, %128
  %553 = sub i32 %552, %136
  %554 = sub i32 %553, %142
  %555 = sub i32 %554, %150
  %556 = sub i32 %555, %156
  %557 = sub i32 %556, %158
  %558 = sub i32 %557, %172
  %559 = sub i32 %558, %176
  %560 = add i32 %559, %186
  %561 = add i32 %560, %187
  %562 = sub i32 %561, %208
  %563 = add i32 %562, %226
  %564 = add i32 %563, %232
  %565 = add i32 %564, %241
  %566 = sub i32 %565, %251
  %567 = add i32 %566, %260
  %568 = sub i32 %567, %261
  %569 = add i32 %568, %271
  %570 = add i32 %569, %274
  %571 = sub i32 %570, %276
  %572 = add i32 %571, %278
  %573 = sub i32 %572, %294
  %574 = sub i32 %573, %220
  %575 = sub i32 %574, %269
  %576 = add i32 %575, %281
  %577 = add i32 %576, %287
  %578 = sub i32 %577, %314
  %579 = sub i32 %578, %322
  %580 = add i32 %579, %332
  %581 = sub i32 %580, %334
  %582 = add i32 %581, %337
  %583 = sub i32 %582, %283
  %584 = sub i32 %583, %285
  %585 = sub i32 %584, %290
  %586 = sub i32 %585, %292
  %587 = add i32 %586, %293
  %588 = add i32 %587, %297
  %589 = add i32 %588, %299
  %590 = sub i32 %589, %300
  %591 = sub i32 %590, %301
  %592 = sub i32 %591, %302
  %593 = add i32 %592, %309
  %594 = add i32 %593, %321
  %595 = add i32 %594, %325
  %596 = sub i32 %595, %326
  %597 = add i32 %596, %328
  %598 = add i32 %597, %331
  %599 = add i32 %598, %339
  %600 = sub i32 %599, %341
  %601 = sub i32 %600, %342
  %602 = sub i32 %601, %306
  %603 = sub i32 %602, %317
  %604 = add i32 %603, %319
  %605 = sub i32 %604, %324
  %606 = add i32 %605, %396
  %607 = add i32 %606, %398
  %608 = add i32 %607, %394
  %609 = add i32 %608, %390
  %610 = add i32 %609, %383
  %611 = add i32 %610, %373
  %612 = icmp eq i32 %15, %611
  %613 = select i1 %612, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %614 = tail call i32 @puts(i8* nonnull dereferenceable(1) %613)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
