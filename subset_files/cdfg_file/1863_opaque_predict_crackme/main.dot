digraph "DFG for'main' function" {
	Node0x14bdbe8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14bdc68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14bdcf8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x14be158[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x14be238[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x14be358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14be590[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x14be648[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14bf5b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14bfc40[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x14bfcb0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x14bfd20[shape=record, label="  %10 = or i32 %6, %9"];
	Node0x14bfd90[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x14bfe00[shape=record, label="  %12 = add i32 %11, %8"];
	Node0x14bfe70[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x14bfee0[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x14bff50[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x14bffc0[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x14c0030[shape=record, label="  %17 = mul i32 %16, 3"];
	Node0x14c00a0[shape=record, label="  %18 = and i32 %6, %9"];
	Node0x14c0110[shape=record, label="  %19 = and i32 %7, %6"];
	Node0x14c0180[shape=record, label="  %20 = shl i32 %19, 2"];
	Node0x14c01f0[shape=record, label="  %21 = add i32 %18, %15"];
	Node0x14c0260[shape=record, label="  %22 = mul i32 %21, 5"];
	Node0x14c02d0[shape=record, label="  %23 = sub i32 2, %6"];
	Node0x14c0340[shape=record, label="  %24 = sub i32 %23, %13"];
	Node0x14c03b0[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x14c0420[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x14c0490[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x14c0500[shape=record, label="  %28 = add i32 %27, %22"];
	Node0x14c0570[shape=record, label="  %29 = icmp eq i32 %12, %28"];
	Node0x145e9d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14c0600[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x14c0858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14c09b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x14c0a78[shape=record, label="  ret i32 0"];
	Node0x14bdbe8 -> Node0x14bdc68;
	Node0x14bdc68 -> Node0x14bdcf8;
	Node0x14bdcf8 -> Node0x14be158;
	Node0x14be158 -> Node0x14be238;
	Node0x14be238 -> Node0x14be358;
	Node0x14be358 -> Node0x14be590;
	Node0x14be590 -> Node0x14be648;
	Node0x14be648 -> Node0x14bf5b8;
	Node0x14bf5b8 -> Node0x14bfc40;
	Node0x14bfc40 -> Node0x14bfcb0;
	Node0x14bfcb0 -> Node0x14bfd20;
	Node0x14bfd20 -> Node0x14bfd90;
	Node0x14bfd90 -> Node0x14bfe00;
	Node0x14bfe00 -> Node0x14bfe70;
	Node0x14bfe70 -> Node0x14bfee0;
	Node0x14bfee0 -> Node0x14bff50;
	Node0x14bff50 -> Node0x14bffc0;
	Node0x14bffc0 -> Node0x14c0030;
	Node0x14c0030 -> Node0x14c00a0;
	Node0x14c00a0 -> Node0x14c0110;
	Node0x14c0110 -> Node0x14c0180;
	Node0x14c0180 -> Node0x14c01f0;
	Node0x14c01f0 -> Node0x14c0260;
	Node0x14c0260 -> Node0x14c02d0;
	Node0x14c02d0 -> Node0x14c0340;
	Node0x14c0340 -> Node0x14c03b0;
	Node0x14c03b0 -> Node0x14c0420;
	Node0x14c0420 -> Node0x14c0490;
	Node0x14c0490 -> Node0x14c0500;
	Node0x14c0500 -> Node0x14c0570;
	Node0x14c0570 -> Node0x145e9d8;
	Node0x145e9d8 -> Node0x14c0600;
	Node0x14c0600 -> Node0x14c0858;
	Node0x14c0858 -> Node0x14c09b8;
	Node0x14c09b8 -> Node0x14c0a78;
edge [color=red]
	Node0x14bdbe8 -> Node0x14bdcf8;
	Node0x14bdcf8 -> Node0x14be158;
	Node0x14bdc68 -> Node0x14be238;
	Node0x14be238 -> Node0x14be358;
	Node0x14bdbe8 -> Node0x14be590;
	Node0x14bdc68 -> Node0x14be590;
	Node0x14bdbe8 -> Node0x14be648;
	Node0x14bdc68 -> Node0x14bf5b8;
	Node0x14be648 -> Node0x14bfc40;
	Node0x14bf5b8 -> Node0x14bfcb0;
	Node0x14be648 -> Node0x14bfd20;
	Node0x14bfcb0 -> Node0x14bfd20;
	Node0x14bfd20 -> Node0x14bfd90;
	Node0x14bfd90 -> Node0x14bfe00;
	Node0x14bfc40 -> Node0x14bfe00;
	Node0x14bf5b8 -> Node0x14bfe70;
	Node0x14be648 -> Node0x14bfe70;
	Node0x14bf5b8 -> Node0x14bfee0;
	Node0x14be648 -> Node0x14bfee0;
	Node0x14bfee0 -> Node0x14bff50;
	Node0x14bfd20 -> Node0x14bffc0;
	Node0x14bffc0 -> Node0x14c0030;
	Node0x14be648 -> Node0x14c00a0;
	Node0x14bfcb0 -> Node0x14c00a0;
	Node0x14bf5b8 -> Node0x14c0110;
	Node0x14be648 -> Node0x14c0110;
	Node0x14c0110 -> Node0x14c0180;
	Node0x14c00a0 -> Node0x14c01f0;
	Node0x14bff50 -> Node0x14c01f0;
	Node0x14c01f0 -> Node0x14c0260;
	Node0x14be648 -> Node0x14c02d0;
	Node0x14c02d0 -> Node0x14c0340;
	Node0x14bfe70 -> Node0x14c0340;
	Node0x14c0340 -> Node0x14c03b0;
	Node0x14bfee0 -> Node0x14c03b0;
	Node0x14c03b0 -> Node0x14c0420;
	Node0x14c0030 -> Node0x14c0420;
	Node0x14c0420 -> Node0x14c0490;
	Node0x14c0180 -> Node0x14c0490;
	Node0x14c0490 -> Node0x14c0500;
	Node0x14c0260 -> Node0x14c0500;
	Node0x14bfe00 -> Node0x14c0570;
	Node0x14c0500 -> Node0x14c0570;
	Node0x14c0570 -> Node0x145e9d8;
	Node0x145e9d8 -> Node0x14c0600;
	Node0x14be238 -> Node0x14c0858;
	Node0x14bdcf8 -> Node0x14c09b8;
}
