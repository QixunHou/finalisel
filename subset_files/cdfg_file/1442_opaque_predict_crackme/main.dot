digraph "DFG for'main' function" {
	Node0x1906c68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1906ce8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1906d78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1906dd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1906e88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x19072b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1907398[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1907498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1907558[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1907608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x19076c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1907778[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x19017a0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1907978[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x19088e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1908f58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1908fb8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x19090c8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1909328[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1909488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1909598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19096a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1909768[shape=record, label="  ret i32 0"];
	Node0x1906c68 -> Node0x1906ce8;
	Node0x1906ce8 -> Node0x1906d78;
	Node0x1906d78 -> Node0x1906dd8;
	Node0x1906dd8 -> Node0x1906e88;
	Node0x1906e88 -> Node0x19072b8;
	Node0x19072b8 -> Node0x1907398;
	Node0x1907398 -> Node0x1907498;
	Node0x1907498 -> Node0x1907558;
	Node0x1907558 -> Node0x1907608;
	Node0x1907608 -> Node0x19076c8;
	Node0x19076c8 -> Node0x1907778;
	Node0x1907778 -> Node0x19017a0;
	Node0x19017a0 -> Node0x1907978;
	Node0x1907978 -> Node0x19088e8;
	Node0x19088e8 -> Node0x1908f58;
	Node0x1908f58 -> Node0x1908fb8;
	Node0x1908fb8 -> Node0x19090c8;
	Node0x19090c8 -> Node0x1909328;
	Node0x1909328 -> Node0x1909488;
	Node0x1909488 -> Node0x1909598;
	Node0x1909598 -> Node0x19096a8;
	Node0x19096a8 -> Node0x1909768;
edge [color=red]
	Node0x1906c68 -> Node0x1906e88;
	Node0x1906e88 -> Node0x19072b8;
	Node0x1906ce8 -> Node0x1907398;
	Node0x1907398 -> Node0x1907498;
	Node0x1906d78 -> Node0x1907558;
	Node0x1907558 -> Node0x1907608;
	Node0x1906dd8 -> Node0x19076c8;
	Node0x19076c8 -> Node0x1907778;
	Node0x1906c68 -> Node0x19017a0;
	Node0x1906ce8 -> Node0x19017a0;
	Node0x1906d78 -> Node0x19017a0;
	Node0x1906dd8 -> Node0x19017a0;
	Node0x1906c68 -> Node0x1907978;
	Node0x1906ce8 -> Node0x19088e8;
	Node0x1906d78 -> Node0x1908f58;
	Node0x1906dd8 -> Node0x1908fb8;
	Node0x1907978 -> Node0x19090c8;
	Node0x19088e8 -> Node0x19090c8;
	Node0x1908f58 -> Node0x19090c8;
	Node0x1908fb8 -> Node0x19090c8;
	Node0x19076c8 -> Node0x1909328;
	Node0x1907558 -> Node0x1909488;
	Node0x1907398 -> Node0x1909598;
	Node0x1906e88 -> Node0x19096a8;
}
