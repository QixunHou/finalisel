digraph "DFG for'main' function" {
	Node0x759148[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x7591a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x759238[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x759298[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x759348[shape=record, label="  %5 = alloca i32, align 4"];
	Node0x7593a8[shape=record, label="  %6 = bitcast i32* %1 to i8*"];
	Node0x7597b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x759898[shape=record, label="  %7 = bitcast i32* %2 to i8*"];
	Node0x759998[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x759a58[shape=record, label="  %8 = bitcast i32* %3 to i8*"];
	Node0x759b08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x759b78[shape=record, label="  %9 = bitcast i32* %4 to i8*"];
	Node0x759c28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5"];
	Node0x759ce8[shape=record, label="  %10 = bitcast i32* %5 to i8*"];
	Node0x759d98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5"];
	Node0x75a038[shape=record, label="  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)"];
	Node0x75a0f8[shape=record, label="  %12 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x75b068[shape=record, label="  %13 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x75b6d8[shape=record, label="  %14 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x75b738[shape=record, label="  %15 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x75b798[shape=record, label="  %16 = load i32, i32* %5, align 4, !tbaa !2"];
	Node0x74de10[shape=record, label="  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)"];
	Node0x75b9a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5"];
	Node0x75bb08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5"];
	Node0x75bc18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x75bd28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x75be38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x75bef8[shape=record, label="  ret i32 0"];
	Node0x759148 -> Node0x7591a8;
	Node0x7591a8 -> Node0x759238;
	Node0x759238 -> Node0x759298;
	Node0x759298 -> Node0x759348;
	Node0x759348 -> Node0x7593a8;
	Node0x7593a8 -> Node0x7597b8;
	Node0x7597b8 -> Node0x759898;
	Node0x759898 -> Node0x759998;
	Node0x759998 -> Node0x759a58;
	Node0x759a58 -> Node0x759b08;
	Node0x759b08 -> Node0x759b78;
	Node0x759b78 -> Node0x759c28;
	Node0x759c28 -> Node0x759ce8;
	Node0x759ce8 -> Node0x759d98;
	Node0x759d98 -> Node0x75a038;
	Node0x75a038 -> Node0x75a0f8;
	Node0x75a0f8 -> Node0x75b068;
	Node0x75b068 -> Node0x75b6d8;
	Node0x75b6d8 -> Node0x75b738;
	Node0x75b738 -> Node0x75b798;
	Node0x75b798 -> Node0x74de10;
	Node0x74de10 -> Node0x75b9a8;
	Node0x75b9a8 -> Node0x75bb08;
	Node0x75bb08 -> Node0x75bc18;
	Node0x75bc18 -> Node0x75bd28;
	Node0x75bd28 -> Node0x75be38;
	Node0x75be38 -> Node0x75bef8;
edge [color=red]
	Node0x759148 -> Node0x7593a8;
	Node0x7593a8 -> Node0x7597b8;
	Node0x7591a8 -> Node0x759898;
	Node0x759898 -> Node0x759998;
	Node0x759238 -> Node0x759a58;
	Node0x759a58 -> Node0x759b08;
	Node0x759298 -> Node0x759b78;
	Node0x759b78 -> Node0x759c28;
	Node0x759348 -> Node0x759ce8;
	Node0x759ce8 -> Node0x759d98;
	Node0x759148 -> Node0x75a038;
	Node0x7591a8 -> Node0x75a038;
	Node0x759238 -> Node0x75a038;
	Node0x759298 -> Node0x75a038;
	Node0x759348 -> Node0x75a038;
	Node0x759148 -> Node0x75a0f8;
	Node0x7591a8 -> Node0x75b068;
	Node0x759238 -> Node0x75b6d8;
	Node0x759298 -> Node0x75b738;
	Node0x759348 -> Node0x75b798;
	Node0x75a0f8 -> Node0x74de10;
	Node0x75b068 -> Node0x74de10;
	Node0x75b6d8 -> Node0x74de10;
	Node0x75b738 -> Node0x74de10;
	Node0x75b798 -> Node0x74de10;
	Node0x759ce8 -> Node0x75b9a8;
	Node0x759b78 -> Node0x75bb08;
	Node0x759a58 -> Node0x75bc18;
	Node0x759898 -> Node0x75bd28;
	Node0x7593a8 -> Node0x75be38;
}
