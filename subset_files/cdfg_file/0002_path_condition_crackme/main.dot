digraph "DFG for'main' function" {
	Node0x14a6ac8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14a6b48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14a6bd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14a6c38[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x14a70b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14a7198[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x14a7298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14a7358[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x14a7408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14a7668[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x14a7728[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14a7888[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14a78e8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14ab570[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x14ab778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14ab8d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14ab9e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14abaa8[shape=record, label="  ret i32 0"];
	Node0x14a6ac8 -> Node0x14a6b48;
	Node0x14a6b48 -> Node0x14a6bd8;
	Node0x14a6bd8 -> Node0x14a6c38;
	Node0x14a6c38 -> Node0x14a70b8;
	Node0x14a70b8 -> Node0x14a7198;
	Node0x14a7198 -> Node0x14a7298;
	Node0x14a7298 -> Node0x14a7358;
	Node0x14a7358 -> Node0x14a7408;
	Node0x14a7408 -> Node0x14a7668;
	Node0x14a7668 -> Node0x14a7728;
	Node0x14a7728 -> Node0x14a7888;
	Node0x14a7888 -> Node0x14a78e8;
	Node0x14a78e8 -> Node0x14ab570;
	Node0x14ab570 -> Node0x14ab778;
	Node0x14ab778 -> Node0x14ab8d8;
	Node0x14ab8d8 -> Node0x14ab9e8;
	Node0x14ab9e8 -> Node0x14abaa8;
edge [color=red]
	Node0x14a6ac8 -> Node0x14a6c38;
	Node0x14a6c38 -> Node0x14a70b8;
	Node0x14a6b48 -> Node0x14a7198;
	Node0x14a7198 -> Node0x14a7298;
	Node0x14a6bd8 -> Node0x14a7358;
	Node0x14a7358 -> Node0x14a7408;
	Node0x14a6ac8 -> Node0x14a7668;
	Node0x14a6b48 -> Node0x14a7668;
	Node0x14a6bd8 -> Node0x14a7668;
	Node0x14a6ac8 -> Node0x14a7728;
	Node0x14a6b48 -> Node0x14a7888;
	Node0x14a6bd8 -> Node0x14a78e8;
	Node0x14a7728 -> Node0x14ab570;
	Node0x14a7888 -> Node0x14ab570;
	Node0x14a78e8 -> Node0x14ab570;
	Node0x14a7358 -> Node0x14ab778;
	Node0x14a7198 -> Node0x14ab8d8;
	Node0x14a6c38 -> Node0x14ab9e8;
}
