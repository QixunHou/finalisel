digraph "DFG for'main' function" {
	Node0x1053a88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1053b08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1053b98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1053bf8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1053ca8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x10540d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10541b8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x10542b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1054378[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1054428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10544e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1054598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x104eaa0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1054798[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1055708[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1055d78[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1055dd8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1055e50[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1055ec0[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x1055f30[shape=record, label="  %16 = and i32 %12, %11"];
	Node0x1055fa0[shape=record, label="  %17 = sub i32 2, %15"];
	Node0x1056010[shape=record, label="  %18 = add i32 %17, %16"];
	Node0x1056080[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x10560f0[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x1056160[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x10561d0[shape=record, label="  %22 = shl i32 %19, 2"];
	Node0x1056240[shape=record, label="  %23 = xor i32 %22, -4"];
	Node0x10562b0[shape=record, label="  %24 = xor i32 %15, -1"];
	Node0x1056320[shape=record, label="  %25 = mul i32 %24, -5"];
	Node0x1056390[shape=record, label="  %26 = and i32 %11, %14"];
	Node0x1056400[shape=record, label="  %27 = mul i32 %26, -6"];
	Node0x1056470[shape=record, label="  %28 = shl i32 %16, 2"];
	Node0x10564e0[shape=record, label="  %29 = shl i32 %13, 1"];
	Node0x1056550[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0x10565c0[shape=record, label="  %31 = xor i32 %13, %10"];
	Node0x1056630[shape=record, label="  %32 = and i32 %13, %10"];
	Node0x10566a0[shape=record, label="  %33 = or i32 %13, %10"];
	Node0x1056710[shape=record, label="  %34 = sub i32 2147483647, %10"];
	Node0x1056780[shape=record, label="  %35 = add i32 %34, %20"];
	Node0x10567f0[shape=record, label="  %36 = add i32 %35, %32"];
	Node0x1056860[shape=record, label="  %37 = shl i32 %36, 1"];
	Node0x10568d0[shape=record, label="  %38 = add i32 %19, 4"];
	Node0x1056940[shape=record, label="  %39 = add i32 %38, %21"];
	Node0x10569b0[shape=record, label="  %40 = add i32 %39, %25"];
	Node0x1056a20[shape=record, label="  %41 = add i32 %40, %27"];
	Node0x1056a90[shape=record, label="  %42 = sub i32 %41, %28"];
	Node0x1056b00[shape=record, label="  %43 = add i32 %42, %31"];
	Node0x1056b70[shape=record, label="  %44 = add i32 %43, %32"];
	Node0x1056be0[shape=record, label="  %45 = add i32 %44, %33"];
	Node0x1056c50[shape=record, label="  %46 = sub i32 %45, %23"];
	Node0x1056cc0[shape=record, label="  %47 = add i32 %46, %30"];
	Node0x1056d30[shape=record, label="  %48 = add i32 %47, %37"];
	Node0x1056da0[shape=record, label="  %49 = icmp eq i32 %18, %48"];
	Node0xff38b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1056e30[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0x10570d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1057238[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1057348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1057458[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1057518[shape=record, label="  ret i32 0"];
	Node0x1053a88 -> Node0x1053b08;
	Node0x1053b08 -> Node0x1053b98;
	Node0x1053b98 -> Node0x1053bf8;
	Node0x1053bf8 -> Node0x1053ca8;
	Node0x1053ca8 -> Node0x10540d8;
	Node0x10540d8 -> Node0x10541b8;
	Node0x10541b8 -> Node0x10542b8;
	Node0x10542b8 -> Node0x1054378;
	Node0x1054378 -> Node0x1054428;
	Node0x1054428 -> Node0x10544e8;
	Node0x10544e8 -> Node0x1054598;
	Node0x1054598 -> Node0x104eaa0;
	Node0x104eaa0 -> Node0x1054798;
	Node0x1054798 -> Node0x1055708;
	Node0x1055708 -> Node0x1055d78;
	Node0x1055d78 -> Node0x1055dd8;
	Node0x1055dd8 -> Node0x1055e50;
	Node0x1055e50 -> Node0x1055ec0;
	Node0x1055ec0 -> Node0x1055f30;
	Node0x1055f30 -> Node0x1055fa0;
	Node0x1055fa0 -> Node0x1056010;
	Node0x1056010 -> Node0x1056080;
	Node0x1056080 -> Node0x10560f0;
	Node0x10560f0 -> Node0x1056160;
	Node0x1056160 -> Node0x10561d0;
	Node0x10561d0 -> Node0x1056240;
	Node0x1056240 -> Node0x10562b0;
	Node0x10562b0 -> Node0x1056320;
	Node0x1056320 -> Node0x1056390;
	Node0x1056390 -> Node0x1056400;
	Node0x1056400 -> Node0x1056470;
	Node0x1056470 -> Node0x10564e0;
	Node0x10564e0 -> Node0x1056550;
	Node0x1056550 -> Node0x10565c0;
	Node0x10565c0 -> Node0x1056630;
	Node0x1056630 -> Node0x10566a0;
	Node0x10566a0 -> Node0x1056710;
	Node0x1056710 -> Node0x1056780;
	Node0x1056780 -> Node0x10567f0;
	Node0x10567f0 -> Node0x1056860;
	Node0x1056860 -> Node0x10568d0;
	Node0x10568d0 -> Node0x1056940;
	Node0x1056940 -> Node0x10569b0;
	Node0x10569b0 -> Node0x1056a20;
	Node0x1056a20 -> Node0x1056a90;
	Node0x1056a90 -> Node0x1056b00;
	Node0x1056b00 -> Node0x1056b70;
	Node0x1056b70 -> Node0x1056be0;
	Node0x1056be0 -> Node0x1056c50;
	Node0x1056c50 -> Node0x1056cc0;
	Node0x1056cc0 -> Node0x1056d30;
	Node0x1056d30 -> Node0x1056da0;
	Node0x1056da0 -> Node0xff38b8;
	Node0xff38b8 -> Node0x1056e30;
	Node0x1056e30 -> Node0x10570d8;
	Node0x10570d8 -> Node0x1057238;
	Node0x1057238 -> Node0x1057348;
	Node0x1057348 -> Node0x1057458;
	Node0x1057458 -> Node0x1057518;
edge [color=red]
	Node0x1053a88 -> Node0x1053ca8;
	Node0x1053ca8 -> Node0x10540d8;
	Node0x1053b08 -> Node0x10541b8;
	Node0x10541b8 -> Node0x10542b8;
	Node0x1053b98 -> Node0x1054378;
	Node0x1054378 -> Node0x1054428;
	Node0x1053bf8 -> Node0x10544e8;
	Node0x10544e8 -> Node0x1054598;
	Node0x1053a88 -> Node0x104eaa0;
	Node0x1053b08 -> Node0x104eaa0;
	Node0x1053b98 -> Node0x104eaa0;
	Node0x1053bf8 -> Node0x104eaa0;
	Node0x1053a88 -> Node0x1054798;
	Node0x1053b08 -> Node0x1055708;
	Node0x1053b98 -> Node0x1055d78;
	Node0x1053bf8 -> Node0x1055dd8;
	Node0x1055d78 -> Node0x1055e50;
	Node0x1055708 -> Node0x1055ec0;
	Node0x1055e50 -> Node0x1055ec0;
	Node0x1055d78 -> Node0x1055f30;
	Node0x1055708 -> Node0x1055f30;
	Node0x1055ec0 -> Node0x1055fa0;
	Node0x1055fa0 -> Node0x1056010;
	Node0x1055f30 -> Node0x1056010;
	Node0x1055d78 -> Node0x1056080;
	Node0x1055708 -> Node0x1056080;
	Node0x1055d78 -> Node0x10560f0;
	Node0x1055708 -> Node0x10560f0;
	Node0x10560f0 -> Node0x1056160;
	Node0x1056080 -> Node0x10561d0;
	Node0x10561d0 -> Node0x1056240;
	Node0x1055ec0 -> Node0x10562b0;
	Node0x10562b0 -> Node0x1056320;
	Node0x1055708 -> Node0x1056390;
	Node0x1055e50 -> Node0x1056390;
	Node0x1056390 -> Node0x1056400;
	Node0x1055f30 -> Node0x1056470;
	Node0x1055dd8 -> Node0x10564e0;
	Node0x10564e0 -> Node0x1056550;
	Node0x1055dd8 -> Node0x10565c0;
	Node0x1054798 -> Node0x10565c0;
	Node0x1055dd8 -> Node0x1056630;
	Node0x1054798 -> Node0x1056630;
	Node0x1055dd8 -> Node0x10566a0;
	Node0x1054798 -> Node0x10566a0;
	Node0x1054798 -> Node0x1056710;
	Node0x1056710 -> Node0x1056780;
	Node0x10560f0 -> Node0x1056780;
	Node0x1056780 -> Node0x10567f0;
	Node0x1056630 -> Node0x10567f0;
	Node0x10567f0 -> Node0x1056860;
	Node0x1056080 -> Node0x10568d0;
	Node0x10568d0 -> Node0x1056940;
	Node0x1056160 -> Node0x1056940;
	Node0x1056940 -> Node0x10569b0;
	Node0x1056320 -> Node0x10569b0;
	Node0x10569b0 -> Node0x1056a20;
	Node0x1056400 -> Node0x1056a20;
	Node0x1056a20 -> Node0x1056a90;
	Node0x1056470 -> Node0x1056a90;
	Node0x1056a90 -> Node0x1056b00;
	Node0x10565c0 -> Node0x1056b00;
	Node0x1056b00 -> Node0x1056b70;
	Node0x1056630 -> Node0x1056b70;
	Node0x1056b70 -> Node0x1056be0;
	Node0x10566a0 -> Node0x1056be0;
	Node0x1056be0 -> Node0x1056c50;
	Node0x1056240 -> Node0x1056c50;
	Node0x1056c50 -> Node0x1056cc0;
	Node0x1056550 -> Node0x1056cc0;
	Node0x1056cc0 -> Node0x1056d30;
	Node0x1056860 -> Node0x1056d30;
	Node0x1056010 -> Node0x1056da0;
	Node0x1056d30 -> Node0x1056da0;
	Node0x1056da0 -> Node0xff38b8;
	Node0xff38b8 -> Node0x1056e30;
	Node0x10544e8 -> Node0x10570d8;
	Node0x1054378 -> Node0x1057238;
	Node0x10541b8 -> Node0x1057348;
	Node0x1053ca8 -> Node0x1057458;
}
