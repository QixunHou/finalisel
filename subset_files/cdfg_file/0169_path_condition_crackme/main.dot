digraph "DFG for'main' function" {
	Node0xdb6b08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xdb6b88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xdb6c18[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xdb7078[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xdb7158[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xdb7278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdb74b0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xdb7568[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xdb84d8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xdb8b60[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0xdb8bd0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0xdb8c40[shape=record, label="  %10 = add i32 %7, 2"];
	Node0xdb8cb0[shape=record, label="  %11 = add i32 %10, %8"];
	Node0xdb8d20[shape=record, label="  %12 = and i32 %7, %6"];
	Node0xdb8d90[shape=record, label="  %13 = and i32 %6, %9"];
	Node0xdb8e00[shape=record, label="  %14 = xor i32 %6, -1"];
	Node0xdb8e70[shape=record, label="  %15 = and i32 %7, %14"];
	Node0xdb8ee0[shape=record, label="  %16 = mul i32 %13, -5"];
	Node0xdb8f50[shape=record, label="  %17 = shl i32 %12, 1"];
	Node0xdb8fc0[shape=record, label="  %18 = add i32 %8, %6"];
	Node0xdb9030[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0xdb90a0[shape=record, label="  %20 = add i32 %10, %6"];
	Node0xdb9110[shape=record, label="  %21 = sub i32 %20, %12"];
	Node0xdb9180[shape=record, label="  %22 = add i32 %21, %13"];
	Node0xdb91f0[shape=record, label="  %23 = sub i32 %22, %15"];
	Node0xdb9260[shape=record, label="  %24 = add i32 %23, %16"];
	Node0xdb92d0[shape=record, label="  %25 = sub i32 %24, %17"];
	Node0xdb9340[shape=record, label="  %26 = add i32 %25, %19"];
	Node0xdb93b0[shape=record, label="  %27 = icmp eq i32 %11, %26"];
	Node0xd579d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xdb9440[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0xdb9698[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdb97f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xdb98b8[shape=record, label="  ret i32 0"];
	Node0xdb6b08 -> Node0xdb6b88;
	Node0xdb6b88 -> Node0xdb6c18;
	Node0xdb6c18 -> Node0xdb7078;
	Node0xdb7078 -> Node0xdb7158;
	Node0xdb7158 -> Node0xdb7278;
	Node0xdb7278 -> Node0xdb74b0;
	Node0xdb74b0 -> Node0xdb7568;
	Node0xdb7568 -> Node0xdb84d8;
	Node0xdb84d8 -> Node0xdb8b60;
	Node0xdb8b60 -> Node0xdb8bd0;
	Node0xdb8bd0 -> Node0xdb8c40;
	Node0xdb8c40 -> Node0xdb8cb0;
	Node0xdb8cb0 -> Node0xdb8d20;
	Node0xdb8d20 -> Node0xdb8d90;
	Node0xdb8d90 -> Node0xdb8e00;
	Node0xdb8e00 -> Node0xdb8e70;
	Node0xdb8e70 -> Node0xdb8ee0;
	Node0xdb8ee0 -> Node0xdb8f50;
	Node0xdb8f50 -> Node0xdb8fc0;
	Node0xdb8fc0 -> Node0xdb9030;
	Node0xdb9030 -> Node0xdb90a0;
	Node0xdb90a0 -> Node0xdb9110;
	Node0xdb9110 -> Node0xdb9180;
	Node0xdb9180 -> Node0xdb91f0;
	Node0xdb91f0 -> Node0xdb9260;
	Node0xdb9260 -> Node0xdb92d0;
	Node0xdb92d0 -> Node0xdb9340;
	Node0xdb9340 -> Node0xdb93b0;
	Node0xdb93b0 -> Node0xd579d8;
	Node0xd579d8 -> Node0xdb9440;
	Node0xdb9440 -> Node0xdb9698;
	Node0xdb9698 -> Node0xdb97f8;
	Node0xdb97f8 -> Node0xdb98b8;
edge [color=red]
	Node0xdb6b08 -> Node0xdb6c18;
	Node0xdb6c18 -> Node0xdb7078;
	Node0xdb6b88 -> Node0xdb7158;
	Node0xdb7158 -> Node0xdb7278;
	Node0xdb6b08 -> Node0xdb74b0;
	Node0xdb6b88 -> Node0xdb74b0;
	Node0xdb6b08 -> Node0xdb7568;
	Node0xdb6b88 -> Node0xdb84d8;
	Node0xdb84d8 -> Node0xdb8b60;
	Node0xdb7568 -> Node0xdb8b60;
	Node0xdb84d8 -> Node0xdb8bd0;
	Node0xdb84d8 -> Node0xdb8c40;
	Node0xdb8c40 -> Node0xdb8cb0;
	Node0xdb8b60 -> Node0xdb8cb0;
	Node0xdb84d8 -> Node0xdb8d20;
	Node0xdb7568 -> Node0xdb8d20;
	Node0xdb7568 -> Node0xdb8d90;
	Node0xdb8bd0 -> Node0xdb8d90;
	Node0xdb7568 -> Node0xdb8e00;
	Node0xdb84d8 -> Node0xdb8e70;
	Node0xdb8e00 -> Node0xdb8e70;
	Node0xdb8d90 -> Node0xdb8ee0;
	Node0xdb8d20 -> Node0xdb8f50;
	Node0xdb8b60 -> Node0xdb8fc0;
	Node0xdb7568 -> Node0xdb8fc0;
	Node0xdb8fc0 -> Node0xdb9030;
	Node0xdb8c40 -> Node0xdb90a0;
	Node0xdb7568 -> Node0xdb90a0;
	Node0xdb90a0 -> Node0xdb9110;
	Node0xdb8d20 -> Node0xdb9110;
	Node0xdb9110 -> Node0xdb9180;
	Node0xdb8d90 -> Node0xdb9180;
	Node0xdb9180 -> Node0xdb91f0;
	Node0xdb8e70 -> Node0xdb91f0;
	Node0xdb91f0 -> Node0xdb9260;
	Node0xdb8ee0 -> Node0xdb9260;
	Node0xdb9260 -> Node0xdb92d0;
	Node0xdb8f50 -> Node0xdb92d0;
	Node0xdb92d0 -> Node0xdb9340;
	Node0xdb9030 -> Node0xdb9340;
	Node0xdb8cb0 -> Node0xdb93b0;
	Node0xdb9340 -> Node0xdb93b0;
	Node0xdb93b0 -> Node0xd579d8;
	Node0xd579d8 -> Node0xdb9440;
	Node0xdb7158 -> Node0xdb9698;
	Node0xdb6c18 -> Node0xdb97f8;
}
