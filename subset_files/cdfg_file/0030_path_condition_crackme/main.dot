digraph "DFG for'main' function" {
	Node0x16bed28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x16beda8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x16bee38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x16bee98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x16bef48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x16bf378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x16bf458[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x16bf558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16bf618[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x16bf6c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x16bf788[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x16bf838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x16b9ba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x16bfa38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x16c09a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x16c1018[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x16c1078[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x16c10f0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x16c1160[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0x16c11d0[shape=record, label="  %16 = and i32 %11, %15"];
	Node0x16c1240[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x16c12b0[shape=record, label="  %18 = add i32 %14, %17"];
	Node0x16c1320[shape=record, label="  %19 = xor i32 %10, -1"];
	Node0x16c1390[shape=record, label="  %20 = and i32 %13, %19"];
	Node0x16c1400[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x16c1470[shape=record, label="  %22 = add i32 %18, %21"];
	Node0x16c14e0[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0x16c1550[shape=record, label="  %24 = or i32 %11, %15"];
	Node0x16c15c0[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x16c1630[shape=record, label="  %26 = and i32 %12, %11"];
	Node0x16c16a0[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x16c1710[shape=record, label="  %28 = and i32 %13, %10"];
	Node0x16c1780[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x16c17f0[shape=record, label="  %30 = or i32 %13, %19"];
	Node0x16c1860[shape=record, label="  %31 = or i32 %13, %10"];
	Node0x16c18d0[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x16c1940[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x16c19b0[shape=record, label="  %34 = xor i32 %30, -1"];
	Node0x16c1a20[shape=record, label="  %35 = mul i32 %34, 6"];
	Node0x16c1a90[shape=record, label="  %36 = add i32 %28, %26"];
	Node0x16c1b00[shape=record, label="  %37 = shl i32 %36, 2"];
	Node0x16c1b70[shape=record, label="  %38 = add i32 %23, %13"];
	Node0x16c1be0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x16c1c50[shape=record, label="  %40 = sub i32 3, %10"];
	Node0x16c1cc0[shape=record, label="  %41 = add i32 %40, %15"];
	Node0x16c1d30[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x16c1da0[shape=record, label="  %43 = sub i32 %42, %14"];
	Node0x16c1e10[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x16c1e80[shape=record, label="  %45 = sub i32 %44, %16"];
	Node0x16c1ef0[shape=record, label="  %46 = sub i32 %45, %25"];
	Node0x16c1f60[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x16c1fd0[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x16c2040[shape=record, label="  %49 = add i32 %48, %20"];
	Node0x16c20b0[shape=record, label="  %50 = sub i32 %49, %32"];
	Node0x16c2120[shape=record, label="  %51 = add i32 %50, %35"];
	Node0x16c2190[shape=record, label="  %52 = add i32 %51, %39"];
	Node0x16c2200[shape=record, label="  %53 = add i32 %52, %33"];
	Node0x16c2270[shape=record, label="  %54 = add i32 %53, %37"];
	Node0x16c22e0[shape=record, label="  %55 = icmp eq i32 %22, %54"];
	Node0x165e8b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x16c2370[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x16c2618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x16c2778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x16c2888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16c2998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x16c2a58[shape=record, label="  ret i32 0"];
	Node0x16bed28 -> Node0x16beda8;
	Node0x16beda8 -> Node0x16bee38;
	Node0x16bee38 -> Node0x16bee98;
	Node0x16bee98 -> Node0x16bef48;
	Node0x16bef48 -> Node0x16bf378;
	Node0x16bf378 -> Node0x16bf458;
	Node0x16bf458 -> Node0x16bf558;
	Node0x16bf558 -> Node0x16bf618;
	Node0x16bf618 -> Node0x16bf6c8;
	Node0x16bf6c8 -> Node0x16bf788;
	Node0x16bf788 -> Node0x16bf838;
	Node0x16bf838 -> Node0x16b9ba0;
	Node0x16b9ba0 -> Node0x16bfa38;
	Node0x16bfa38 -> Node0x16c09a8;
	Node0x16c09a8 -> Node0x16c1018;
	Node0x16c1018 -> Node0x16c1078;
	Node0x16c1078 -> Node0x16c10f0;
	Node0x16c10f0 -> Node0x16c1160;
	Node0x16c1160 -> Node0x16c11d0;
	Node0x16c11d0 -> Node0x16c1240;
	Node0x16c1240 -> Node0x16c12b0;
	Node0x16c12b0 -> Node0x16c1320;
	Node0x16c1320 -> Node0x16c1390;
	Node0x16c1390 -> Node0x16c1400;
	Node0x16c1400 -> Node0x16c1470;
	Node0x16c1470 -> Node0x16c14e0;
	Node0x16c14e0 -> Node0x16c1550;
	Node0x16c1550 -> Node0x16c15c0;
	Node0x16c15c0 -> Node0x16c1630;
	Node0x16c1630 -> Node0x16c16a0;
	Node0x16c16a0 -> Node0x16c1710;
	Node0x16c1710 -> Node0x16c1780;
	Node0x16c1780 -> Node0x16c17f0;
	Node0x16c17f0 -> Node0x16c1860;
	Node0x16c1860 -> Node0x16c18d0;
	Node0x16c18d0 -> Node0x16c1940;
	Node0x16c1940 -> Node0x16c19b0;
	Node0x16c19b0 -> Node0x16c1a20;
	Node0x16c1a20 -> Node0x16c1a90;
	Node0x16c1a90 -> Node0x16c1b00;
	Node0x16c1b00 -> Node0x16c1b70;
	Node0x16c1b70 -> Node0x16c1be0;
	Node0x16c1be0 -> Node0x16c1c50;
	Node0x16c1c50 -> Node0x16c1cc0;
	Node0x16c1cc0 -> Node0x16c1d30;
	Node0x16c1d30 -> Node0x16c1da0;
	Node0x16c1da0 -> Node0x16c1e10;
	Node0x16c1e10 -> Node0x16c1e80;
	Node0x16c1e80 -> Node0x16c1ef0;
	Node0x16c1ef0 -> Node0x16c1f60;
	Node0x16c1f60 -> Node0x16c1fd0;
	Node0x16c1fd0 -> Node0x16c2040;
	Node0x16c2040 -> Node0x16c20b0;
	Node0x16c20b0 -> Node0x16c2120;
	Node0x16c2120 -> Node0x16c2190;
	Node0x16c2190 -> Node0x16c2200;
	Node0x16c2200 -> Node0x16c2270;
	Node0x16c2270 -> Node0x16c22e0;
	Node0x16c22e0 -> Node0x165e8b8;
	Node0x165e8b8 -> Node0x16c2370;
	Node0x16c2370 -> Node0x16c2618;
	Node0x16c2618 -> Node0x16c2778;
	Node0x16c2778 -> Node0x16c2888;
	Node0x16c2888 -> Node0x16c2998;
	Node0x16c2998 -> Node0x16c2a58;
edge [color=red]
	Node0x16bed28 -> Node0x16bef48;
	Node0x16bef48 -> Node0x16bf378;
	Node0x16beda8 -> Node0x16bf458;
	Node0x16bf458 -> Node0x16bf558;
	Node0x16bee38 -> Node0x16bf618;
	Node0x16bf618 -> Node0x16bf6c8;
	Node0x16bee98 -> Node0x16bf788;
	Node0x16bf788 -> Node0x16bf838;
	Node0x16bed28 -> Node0x16b9ba0;
	Node0x16beda8 -> Node0x16b9ba0;
	Node0x16bee38 -> Node0x16b9ba0;
	Node0x16bee98 -> Node0x16b9ba0;
	Node0x16bed28 -> Node0x16bfa38;
	Node0x16beda8 -> Node0x16c09a8;
	Node0x16bee38 -> Node0x16c1018;
	Node0x16bee98 -> Node0x16c1078;
	Node0x16c1018 -> Node0x16c10f0;
	Node0x16c09a8 -> Node0x16c10f0;
	Node0x16c1018 -> Node0x16c1160;
	Node0x16c09a8 -> Node0x16c11d0;
	Node0x16c1160 -> Node0x16c11d0;
	Node0x16c11d0 -> Node0x16c1240;
	Node0x16c10f0 -> Node0x16c12b0;
	Node0x16c1240 -> Node0x16c12b0;
	Node0x16bfa38 -> Node0x16c1320;
	Node0x16c1078 -> Node0x16c1390;
	Node0x16c1320 -> Node0x16c1390;
	Node0x16c1390 -> Node0x16c1400;
	Node0x16c12b0 -> Node0x16c1470;
	Node0x16c1400 -> Node0x16c1470;
	Node0x16c1018 -> Node0x16c14e0;
	Node0x16c09a8 -> Node0x16c14e0;
	Node0x16c09a8 -> Node0x16c1550;
	Node0x16c1160 -> Node0x16c1550;
	Node0x16c1550 -> Node0x16c15c0;
	Node0x16c1018 -> Node0x16c1630;
	Node0x16c09a8 -> Node0x16c1630;
	Node0x16c1630 -> Node0x16c16a0;
	Node0x16c1078 -> Node0x16c1710;
	Node0x16bfa38 -> Node0x16c1710;
	Node0x16c1710 -> Node0x16c1780;
	Node0x16c1078 -> Node0x16c17f0;
	Node0x16c1320 -> Node0x16c17f0;
	Node0x16c1078 -> Node0x16c1860;
	Node0x16bfa38 -> Node0x16c1860;
	Node0x16c1860 -> Node0x16c18d0;
	Node0x16c18d0 -> Node0x16c1940;
	Node0x16c17f0 -> Node0x16c19b0;
	Node0x16c19b0 -> Node0x16c1a20;
	Node0x16c1710 -> Node0x16c1a90;
	Node0x16c1630 -> Node0x16c1a90;
	Node0x16c1a90 -> Node0x16c1b00;
	Node0x16c14e0 -> Node0x16c1b70;
	Node0x16c1078 -> Node0x16c1b70;
	Node0x16c1b70 -> Node0x16c1be0;
	Node0x16bfa38 -> Node0x16c1c50;
	Node0x16c1c50 -> Node0x16c1cc0;
	Node0x16c1160 -> Node0x16c1cc0;
	Node0x16c1cc0 -> Node0x16c1d30;
	Node0x16c16a0 -> Node0x16c1d30;
	Node0x16c1d30 -> Node0x16c1da0;
	Node0x16c10f0 -> Node0x16c1da0;
	Node0x16c1da0 -> Node0x16c1e10;
	Node0x16c1550 -> Node0x16c1e10;
	Node0x16c1e10 -> Node0x16c1e80;
	Node0x16c11d0 -> Node0x16c1e80;
	Node0x16c1e80 -> Node0x16c1ef0;
	Node0x16c15c0 -> Node0x16c1ef0;
	Node0x16c1ef0 -> Node0x16c1f60;
	Node0x16c1780 -> Node0x16c1f60;
	Node0x16c1f60 -> Node0x16c1fd0;
	Node0x16c17f0 -> Node0x16c1fd0;
	Node0x16c1fd0 -> Node0x16c2040;
	Node0x16c1390 -> Node0x16c2040;
	Node0x16c2040 -> Node0x16c20b0;
	Node0x16c18d0 -> Node0x16c20b0;
	Node0x16c20b0 -> Node0x16c2120;
	Node0x16c1a20 -> Node0x16c2120;
	Node0x16c2120 -> Node0x16c2190;
	Node0x16c1be0 -> Node0x16c2190;
	Node0x16c2190 -> Node0x16c2200;
	Node0x16c1940 -> Node0x16c2200;
	Node0x16c2200 -> Node0x16c2270;
	Node0x16c1b00 -> Node0x16c2270;
	Node0x16c1470 -> Node0x16c22e0;
	Node0x16c2270 -> Node0x16c22e0;
	Node0x16c22e0 -> Node0x165e8b8;
	Node0x165e8b8 -> Node0x16c2370;
	Node0x16bf788 -> Node0x16c2618;
	Node0x16bf618 -> Node0x16c2778;
	Node0x16bf458 -> Node0x16c2888;
	Node0x16bef48 -> Node0x16c2998;
}
