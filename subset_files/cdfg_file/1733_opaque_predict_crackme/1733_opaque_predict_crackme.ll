; ModuleID = '../.././c_source_file/1733_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1733_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = xor i32 %2, %0
  %9 = xor i32 %8, -1
  %10 = or i32 %9, %7
  %11 = shl i32 %10, 2
  %12 = and i32 %1, %0
  %13 = xor i32 %12, -1
  %14 = and i32 %8, %13
  %15 = shl i32 %14, 1
  %16 = add i32 %11, %15
  %17 = or i32 %5, %3
  %18 = xor i32 %17, -1
  %19 = or i32 %18, %4
  %20 = sub i32 %16, %19
  %21 = xor i32 %4, -1
  %22 = xor i32 %5, -1
  %23 = or i32 %22, %3
  %24 = xor i32 %23, -1
  %25 = or i32 %24, %21
  %26 = add i32 %20, %25
  %27 = xor i32 %2, -1
  %28 = and i32 %27, %0
  %29 = xor i32 %1, %0
  %30 = xor i32 %29, -1
  %31 = or i32 %28, %30
  %32 = or i32 %27, %0
  %33 = xor i32 %32, -1
  %34 = or i32 %12, %33
  %35 = and i32 %7, %0
  %36 = xor i32 %35, -1
  %37 = xor i32 %2, %1
  %38 = and i32 %37, %36
  %39 = xor i32 %0, -1
  %40 = and i32 %7, %2
  %41 = and i32 %40, %39
  %42 = or i32 %37, %39
  %43 = xor i32 %41, %42
  %44 = shl i32 %43, 2
  %45 = or i32 %7, %0
  %46 = xor i32 %45, -1
  %47 = or i32 %27, %46
  %48 = xor i32 %37, -1
  %49 = and i32 %48, %36
  %50 = and i32 %40, %0
  %51 = or i32 %7, %2
  %52 = and i32 %51, %39
  %53 = xor i32 %52, 2147483647
  %54 = xor i32 %53, %50
  %55 = add i32 %45, 1
  %56 = or i32 %1, %0
  %57 = and i32 %56, %2
  %58 = or i32 %8, %12
  %59 = or i32 %2, %0
  %60 = xor i32 %59, -1
  %61 = or i32 %29, %60
  %62 = xor i32 %28, -1
  %63 = and i32 %29, %62
  %64 = xor i32 %56, -1
  %65 = or i32 %64, %2
  %66 = or i32 %27, %1
  %67 = and i32 %66, %39
  %68 = and i32 %2, %1
  %69 = shl i32 %68, 1
  %70 = and i32 %27, %1
  %71 = or i32 %68, %35
  %72 = shl i32 %71, 1
  %73 = and i32 %68, %0
  %74 = or i32 %2, %1
  %75 = and i32 %74, %39
  %76 = xor i32 %75, -1
  %77 = xor i32 %73, %76
  %78 = or i32 %9, %46
  %79 = xor i32 %37, %0
  %80 = xor i32 %73, %79
  %81 = shl i32 %80, 1
  %82 = and i32 %66, %0
  %83 = and i32 %32, %7
  %84 = and i32 %45, %27
  %85 = xor i32 %70, -1
  %86 = and i32 %85, %0
  %87 = and i32 %32, %1
  %88 = or i32 %8, %46
  %89 = and i32 %36, %2
  %90 = shl i32 %89, 1
  %91 = add i32 %59, 1
  %92 = and i32 %45, %48
  %93 = or i32 %37, %0
  %94 = xor i32 %50, %93
  %95 = shl i32 %94, 1
  %96 = xor i32 %62, %1
  %97 = shl i32 %96, 1
  %98 = or i32 %37, %64
  %99 = and i32 %2, %0
  %100 = xor i32 %99, %56
  %101 = xor i32 %99, -1
  %102 = add i32 %99, 1
  %103 = or i32 %99, %1
  %104 = xor i32 %48, %0
  %105 = xor i32 %33, %1
  %106 = xor i32 %68, -1
  %107 = and i32 %106, %0
  %108 = xor i32 %74, %12
  %109 = and i32 %37, %13
  %110 = and i32 %29, %27
  %111 = and i32 %101, %30
  %112 = xor i32 %59, %1
  %113 = and i32 %9, %13
  %114 = and i32 %48, %0
  %115 = or i32 %68, %0
  %116 = or i32 %68, %39
  %117 = or i32 %35, %2
  %118 = or i32 %37, %46
  %119 = shl i32 %118, 1
  %120 = xor i32 %42, -1
  %121 = or i32 %41, %120
  %122 = and i32 %51, %0
  %123 = xor i32 %122, -1
  %124 = xor i32 %41, %123
  %125 = or i32 %73, %75
  %126 = or i32 %12, %2
  %127 = and i32 %9, %36
  %128 = or i32 %29, %33
  %129 = xor i32 %66, %0
  %130 = or i32 %35, %9
  %131 = or i32 %85, %0
  %132 = xor i32 %79, -1
  %133 = or i32 %73, %132
  %134 = and i32 %9, %7
  %135 = and i32 %27, %13
  %136 = and i32 %106, %39
  %137 = or i32 %50, %79
  %138 = or i32 %99, %30
  %139 = and i32 %48, %13
  %140 = xor i32 %45, %2
  %141 = xor i32 %66, -1
  %142 = xor i32 %141, %0
  %143 = xor i32 %106, %0
  %144 = or i32 %41, %122
  %145 = shl i32 %144, 1
  %146 = xor i32 %32, %1
  %147 = or i32 %33, %30
  %148 = xor i32 %70, %0
  %149 = or i32 %50, %52
  %150 = xor i32 %74, -1
  %151 = and i32 %150, %39
  %152 = and i32 %70, %39
  %153 = mul i32 %152, 11
  %154 = and i32 %150, %0
  %155 = and i32 %70, %0
  %156 = and i32 %141, %39
  %157 = and i32 %68, %39
  %158 = mul i32 %157, 7
  %159 = and i32 %141, %0
  %160 = and i32 %4, %3
  %161 = xor i32 %160, %5
  %162 = xor i32 %3, -1
  %163 = or i32 %22, %4
  %164 = xor i32 %163, -1
  %165 = or i32 %164, %162
  %166 = or i32 %162, %4
  %167 = xor i32 %166, -1
  %168 = or i32 %22, %167
  %169 = or i32 %4, %3
  %170 = and i32 %169, %22
  %171 = and i32 %22, %4
  %172 = or i32 %171, %162
  %173 = and i32 %162, %4
  %174 = xor i32 %173, -1
  %175 = xor i32 %174, %5
  %176 = and i32 %22, %3
  %177 = xor i32 %163, %3
  %178 = and i32 %5, %3
  %179 = xor i32 %178, -1
  %180 = xor i32 %179, %4
  %181 = xor i32 %17, %4
  %182 = or i32 %160, %22
  %183 = or i32 %176, %21
  %184 = or i32 %17, %4
  %185 = and i32 %162, %5
  %186 = and i32 %185, %4
  %187 = or i32 %162, %5
  %188 = xor i32 %187, %4
  %189 = or i32 %186, %188
  %190 = xor i32 %5, %3
  %191 = or i32 %190, %160
  %192 = and i32 %185, %21
  %193 = and i32 %187, %4
  %194 = xor i32 %193, -1
  %195 = xor i32 %192, %194
  %196 = and i32 %187, %21
  %197 = or i32 %186, %196
  %198 = and i32 %5, %4
  %199 = xor i32 %4, %3
  %200 = or i32 %198, %199
  %201 = xor i32 %199, -1
  %202 = or i32 %164, %201
  %203 = xor i32 %5, %4
  %204 = xor i32 %203, -1
  %205 = or i32 %176, %4
  %206 = xor i32 %176, %4
  %207 = or i32 %160, %5
  %208 = or i32 %23, %21
  %209 = or i32 %203, %162
  %210 = and i32 %204, %3
  %211 = or i32 %5, %4
  %212 = and i32 %211, %199
  %213 = and i32 %163, %199
  %214 = xor i32 %211, -1
  %215 = or i32 %214, %3
  %216 = xor i32 %190, -1
  %217 = and i32 %216, %174
  %218 = or i32 %204, %3
  %219 = and i32 %203, %3
  %220 = xor i32 %176, -1
  %221 = xor i32 %220, %4
  %222 = and i32 %174, %5
  %223 = or i32 %178, %21
  %224 = or i32 %199, %204
  %225 = xor i32 %160, -1
  %226 = and i32 %190, %225
  %227 = and i32 %203, %199
  %228 = xor i32 %169, -1
  %229 = xor i32 %228, %5
  %230 = or i32 %199, %164
  %231 = xor i32 %198, -1
  %232 = or i32 %204, %228
  %233 = or i32 %198, %228
  %234 = xor i32 %171, %23
  %235 = or i32 %190, %21
  %236 = xor i32 %235, 2147483647
  %237 = or i32 %236, %192
  %238 = and i32 %211, %3
  %239 = and i32 %17, %21
  %240 = and i32 %166, %216
  %241 = or i32 %18, %21
  %242 = xor i32 %171, -1
  %243 = add i32 %171, 1
  %244 = or i32 %203, %173
  %245 = or i32 %178, %173
  %246 = or i32 %179, %4
  %247 = and i32 %203, %162
  %248 = and i32 %178, %4
  %249 = or i32 %248, %239
  %250 = or i32 %190, %4
  %251 = and i32 %190, %166
  %252 = xor i32 %163, %160
  %253 = or i32 %22, %201
  %254 = and i32 %166, %204
  %255 = or i32 %173, %204
  %256 = or i32 %216, %21
  %257 = or i32 %173, %216
  %258 = xor i32 %198, %3
  %259 = or i32 %17, %21
  %260 = xor i32 %190, %4
  %261 = xor i32 %248, %260
  %262 = or i32 %198, %3
  %263 = or i32 %199, %5
  %264 = shl i32 %263, 1
  %265 = or i32 %22, %228
  %266 = xor i32 %23, %4
  %267 = add i32 %169, 1
  %268 = or i32 %190, %173
  %269 = or i32 %203, %201
  %270 = xor i32 %17, %160
  %271 = or i32 %198, %162
  %272 = and i32 %220, %4
  %273 = xor i32 %211, %3
  %274 = and i32 %23, %4
  %275 = or i32 %186, %260
  %276 = shl i32 %171, 1
  %277 = or i32 %178, %4
  %278 = or i32 %24, %4
  %279 = and i32 %179, %21
  %280 = or i32 %190, %228
  %281 = and i32 %190, %174
  %282 = xor i32 %173, %5
  %283 = or i32 %203, %160
  %284 = shl i32 %283, 1
  %285 = and i32 %190, %21
  %286 = or i32 %248, %285
  %287 = or i32 %173, %5
  %288 = or i32 %198, %176
  %289 = shl i32 %288, 1
  %290 = and i32 %203, %201
  %291 = and i32 %163, %201
  %292 = shl i32 %291, 1
  %293 = and i32 %169, %216
  %294 = or i32 %198, %201
  %295 = xor i32 %169, %5
  %296 = or i32 %214, %201
  %297 = or i32 %204, %162
  %298 = or i32 %199, %22
  %299 = xor i32 %164, %3
  %300 = or i32 %203, %228
  %301 = xor i32 %248, -1
  %302 = xor i32 %239, %301
  %303 = xor i32 %171, %179
  %304 = shl i32 %303, 1
  %305 = xor i32 %198, %169
  %306 = and i32 %163, %3
  %307 = add i32 %160, 1
  %308 = and i32 %204, %174
  %309 = xor i32 %173, %220
  %310 = xor i32 %196, -1
  %311 = xor i32 %186, %310
  %312 = and i32 %199, %22
  %313 = or i32 %171, %24
  %314 = or i32 %199, %214
  %315 = or i32 %173, %22
  %316 = add i32 %3, 1
  %317 = or i32 %203, %3
  %318 = shl i32 %317, 1
  %319 = xor i32 %166, %5
  %320 = or i32 %228, %5
  %321 = add i32 %176, 1
  %322 = and i32 %163, %162
  %323 = or i32 %201, %5
  %324 = xor i32 %23, %160
  %325 = or i32 %203, %199
  %326 = xor i32 %188, 2147483647
  %327 = xor i32 %326, %186
  %328 = shl i32 %327, 1
  %329 = or i32 %204, %201
  %330 = or i32 %204, %167
  %331 = shl i32 %3, 1
  %332 = or i32 %160, %164
  %333 = and i32 %22, %201
  %334 = shl i32 %333, 1
  %335 = and i32 %203, %225
  %336 = xor i32 %250, -1
  %337 = or i32 %186, %336
  %338 = xor i32 %225, %5
  %339 = shl i32 %338, 1
  %340 = and i32 %216, %4
  %341 = xor i32 %214, %3
  %342 = and i32 %203, %166
  %343 = and i32 %178, %21
  %344 = and i32 %190, %4
  %345 = or i32 %343, %344
  %346 = or i32 %190, %167
  %347 = shl i32 %346, 1
  %348 = xor i32 %343, -1
  %349 = xor i32 %344, %348
  %350 = xor i32 %216, %4
  %351 = and i32 %22, %174
  %352 = add i32 %166, 1
  %353 = and i32 %211, %201
  %354 = and i32 %169, %204
  %355 = or i32 %171, %178
  %356 = and i32 %203, %169
  %357 = xor i32 %198, %166
  %358 = xor i32 %24, %4
  %359 = and i32 %231, %201
  %360 = xor i32 %181, 2147483647
  %361 = xor i32 %360, %248
  %362 = shl i32 %361, 1
  %363 = xor i32 %231, %3
  %364 = and i32 %216, %21
  %365 = or i32 %160, %18
  %366 = xor i32 %167, %5
  %367 = and i32 %204, %201
  %368 = or i32 %160, %24
  %369 = shl i32 %368, 1
  %370 = and i32 %169, %5
  %371 = xor i32 %18, %4
  %372 = and i32 %225, %5
  %373 = or i32 %164, %3
  %374 = and i32 %220, %21
  %375 = and i32 %242, %3
  %376 = or i32 %220, %4
  %377 = and i32 %17, %4
  %378 = xor i32 %377, %348
  %379 = or i32 %216, %4
  %380 = or i32 %23, %4
  %381 = or i32 %179, %21
  %382 = and i32 %216, %225
  %383 = or i32 %160, %216
  %384 = or i32 %192, %193
  %385 = or i32 %214, %162
  %386 = xor i32 %285, %301
  %387 = xor i32 %171, %3
  %388 = add i32 %4, 1
  %389 = and i32 %166, %22
  %390 = shl i32 %235, 1
  %391 = and i32 %199, %204
  %392 = or i32 %198, %167
  %393 = or i32 %171, %199
  %394 = and i32 %242, %201
  %395 = shl i32 %260, 2
  %396 = and i32 %231, %162
  %397 = xor i32 %192, %235
  %398 = or i32 %216, %228
  %399 = and i32 %204, %225
  %400 = or i32 %198, %18
  %401 = xor i32 %211, %160
  %402 = shl i32 %401, 1
  %403 = or i32 %220, %21
  %404 = xor i32 %260, -1
  %405 = xor i32 %186, %404
  %406 = shl i32 %405, 1
  %407 = or i32 %248, %181
  %408 = xor i32 %186, %250
  %409 = xor i32 %178, %4
  %410 = and i32 %204, %162
  %411 = and i32 %190, %169
  %412 = or i32 %203, %167
  %413 = and i32 %22, %225
  %414 = xor i32 %198, %17
  %415 = and i32 %242, %162
  %416 = or i32 %171, %201
  %417 = or i32 %343, %377
  %418 = or i32 %160, %204
  %419 = xor i32 %198, %220
  %420 = and i32 %231, %3
  %421 = or i32 %248, %404
  %422 = and i32 %166, %5
  %423 = and i32 %199, %5
  %424 = or i32 %216, %167
  %425 = or i32 %167, %5
  %426 = and i32 %211, %162
  %427 = or i32 %176, %173
  %428 = xor i32 %242, %3
  %429 = and i32 %201, %5
  %430 = and i32 %179, %4
  %431 = xor i32 %173, %179
  %432 = and i32 %199, %242
  %433 = or i32 %160, %214
  %434 = add i32 %163, 1
  %435 = and i32 %23, %21
  %436 = and i32 %18, %21
  %437 = mul i32 %436, -28
  %438 = and i32 %176, %21
  %439 = shl i32 %438, 4
  %440 = and i32 %18, %4
  %441 = and i32 %176, %4
  %442 = shl i32 %441, 4
  %443 = and i32 %24, %21
  %444 = mul i32 %343, -23
  %445 = and i32 %24, %4
  %446 = mul i32 %445, -15
  %447 = shl i32 %248, 4
  %448 = add i32 %99, %64
  %449 = add i32 %448, %117
  %450 = add i32 %449, %65
  %451 = add i32 %450, %154
  %452 = add i32 %451, %148
  %453 = add i32 %452, %143
  %454 = add i32 %453, %128
  %455 = add i32 %454, %98
  %456 = add i32 %455, %88
  %457 = add i32 %456, %211
  %458 = add i32 %457, %163
  %459 = add i32 %458, %175
  %460 = add i32 %459, %54
  %461 = add i32 %460, %415
  %462 = add i32 %461, %414
  %463 = add i32 %462, %398
  %464 = add i32 %463, %393
  %465 = add i32 %464, %374
  %466 = add i32 %465, %371
  %467 = add i32 %466, %367
  %468 = add i32 %467, %363
  %469 = add i32 %468, %353
  %470 = add i32 %469, %330
  %471 = add i32 %470, %324
  %472 = add i32 %471, %314
  %473 = add i32 %472, %309
  %474 = add i32 %473, %305
  %475 = add i32 %474, %297
  %476 = add i32 %475, %274
  %477 = add i32 %476, %266
  %478 = add i32 %477, %259
  %479 = add i32 %478, %254
  %480 = add i32 %479, %252
  %481 = add i32 %480, %212
  %482 = add i32 %481, %202
  %483 = add i32 %482, %184
  %484 = add i32 %483, %181
  %485 = add i32 %484, %189
  %486 = add i32 %485, %237
  %487 = shl i32 %486, 1
  %488 = sub i32 %155, %159
  %489 = add i32 %488, %169
  %490 = add i32 %489, %174
  %491 = add i32 %490, %295
  %492 = add i32 %491, %409
  %493 = sub i32 %492, %380
  %494 = sub i32 %493, %300
  %495 = sub i32 %494, %275
  %496 = mul i32 %495, 5
  %497 = sub i32 %267, %38
  %498 = add i32 %497, %18
  %499 = add i32 %498, %183
  %500 = add i32 %499, %431
  %501 = add i32 %500, %180
  %502 = mul i32 %501, 3
  %503 = add i32 %156, %151
  %504 = add i32 %503, %83
  %505 = shl i32 %504, 2
  %506 = add i32 %443, %440
  %507 = mul i32 %506, -6
  %508 = sub i32 -2, %1
  %509 = add i32 %508, %12
  %510 = add i32 %509, %55
  %511 = sub i32 %510, %56
  %512 = add i32 %511, %30
  %513 = add i32 %512, %9
  %514 = sub i32 %513, %47
  %515 = add i32 %514, %57
  %516 = add i32 %515, %70
  %517 = sub i32 %516, %84
  %518 = add i32 %517, %91
  %519 = add i32 %518, %102
  %520 = sub i32 %519, %110
  %521 = add i32 %520, %126
  %522 = sub i32 %521, %135
  %523 = add i32 %522, %48
  %524 = add i32 %523, %140
  %525 = add i32 %524, %316
  %526 = sub i32 %525, %31
  %527 = add i32 %526, %34
  %528 = sub i32 %527, %49
  %529 = add i32 %528, %58
  %530 = add i32 %529, %61
  %531 = sub i32 %530, %63
  %532 = add i32 %531, %67
  %533 = sub i32 %532, %69
  %534 = add i32 %533, %78
  %535 = sub i32 %534, %82
  %536 = add i32 %535, %86
  %537 = add i32 %536, %87
  %538 = sub i32 %537, %90
  %539 = sub i32 %538, %92
  %540 = add i32 %539, %100
  %541 = sub i32 %540, %103
  %542 = add i32 %541, %104
  %543 = sub i32 %542, %105
  %544 = add i32 %543, %107
  %545 = add i32 %544, %108
  %546 = sub i32 %545, %109
  %547 = sub i32 %546, %111
  %548 = add i32 %547, %112
  %549 = sub i32 %548, %113
  %550 = sub i32 %549, %114
  %551 = sub i32 %550, %115
  %552 = sub i32 %551, %116
  %553 = sub i32 %552, %127
  %554 = sub i32 %553, %129
  %555 = sub i32 %554, %130
  %556 = sub i32 %555, %131
  %557 = add i32 %556, %134
  %558 = sub i32 %557, %136
  %559 = sub i32 %558, %75
  %560 = add i32 %559, %138
  %561 = sub i32 %560, %139
  %562 = add i32 %561, %142
  %563 = sub i32 %562, %146
  %564 = sub i32 %563, %147
  %565 = add i32 %564, %73
  %566 = add i32 %565, %4
  %567 = sub i32 %566, %331
  %568 = add i32 %567, %388
  %569 = sub i32 %568, %72
  %570 = add i32 %569, %77
  %571 = sub i32 %570, %97
  %572 = sub i32 %571, %119
  %573 = add i32 %572, %121
  %574 = add i32 %573, %124
  %575 = add i32 %574, %125
  %576 = sub i32 %575, %133
  %577 = add i32 %576, %137
  %578 = add i32 %577, %149
  %579 = add i32 %578, %153
  %580 = add i32 %579, %158
  %581 = sub i32 %580, %166
  %582 = add i32 %581, %173
  %583 = add i32 %582, %307
  %584 = add i32 %583, %352
  %585 = add i32 %584, %5
  %586 = add i32 %585, 2
  %587 = add i32 %586, %5
  %588 = sub i32 %587, %160
  %589 = sub i32 %588, %44
  %590 = sub i32 %589, %81
  %591 = sub i32 %590, %95
  %592 = sub i32 %591, %145
  %593 = sub i32 %592, %161
  %594 = sub i32 %593, %168
  %595 = sub i32 %594, %170
  %596 = add i32 %595, %17
  %597 = sub i32 %596, %176
  %598 = add i32 %597, %182
  %599 = sub i32 %598, %207
  %600 = add i32 %599, %222
  %601 = sub i32 %600, %229
  %602 = sub i32 %601, %178
  %603 = sub i32 %602, %23
  %604 = add i32 %603, %243
  %605 = add i32 %604, %24
  %606 = sub i32 %605, %253
  %607 = add i32 %606, %265
  %608 = add i32 %607, %216
  %609 = sub i32 %608, %282
  %610 = add i32 %609, %287
  %611 = add i32 %610, %179
  %612 = add i32 %611, %298
  %613 = sub i32 %612, %312
  %614 = sub i32 %613, %190
  %615 = add i32 %614, %315
  %616 = sub i32 %615, %319
  %617 = sub i32 %616, %320
  %618 = add i32 %617, %321
  %619 = sub i32 %618, %323
  %620 = add i32 %619, %351
  %621 = add i32 %620, %366
  %622 = add i32 %621, %370
  %623 = sub i32 %622, %372
  %624 = sub i32 %623, %389
  %625 = sub i32 %624, %413
  %626 = sub i32 %625, %422
  %627 = sub i32 %626, %423
  %628 = add i32 %627, %425
  %629 = add i32 %628, %429
  %630 = add i32 %629, %434
  %631 = sub i32 %630, %165
  %632 = sub i32 %631, %172
  %633 = add i32 %632, %177
  %634 = sub i32 %633, %191
  %635 = add i32 %634, %200
  %636 = sub i32 %635, %205
  %637 = sub i32 %636, %206
  %638 = sub i32 %637, %208
  %639 = add i32 %638, %209
  %640 = add i32 %639, %210
  %641 = sub i32 %640, %213
  %642 = sub i32 %641, %215
  %643 = add i32 %642, %217
  %644 = add i32 %643, %218
  %645 = sub i32 %644, %219
  %646 = add i32 %645, %221
  %647 = add i32 %646, %223
  %648 = add i32 %647, %224
  %649 = sub i32 %648, %226
  %650 = add i32 %649, %227
  %651 = add i32 %650, %230
  %652 = sub i32 %651, %232
  %653 = add i32 %652, %233
  %654 = sub i32 %653, %234
  %655 = add i32 %654, %238
  %656 = add i32 %655, %239
  %657 = sub i32 %656, %240
  %658 = sub i32 %657, %241
  %659 = add i32 %658, %244
  %660 = sub i32 %659, %245
  %661 = add i32 %660, %246
  %662 = sub i32 %661, %247
  %663 = sub i32 %662, %250
  %664 = sub i32 %663, %251
  %665 = sub i32 %664, %255
  %666 = sub i32 %665, %256
  %667 = sub i32 %666, %257
  %668 = add i32 %667, %258
  %669 = sub i32 %668, %262
  %670 = sub i32 %669, %264
  %671 = add i32 %670, %268
  %672 = add i32 %671, %269
  %673 = sub i32 %672, %270
  %674 = sub i32 %673, %271
  %675 = add i32 %674, %272
  %676 = sub i32 %675, %273
  %677 = sub i32 %676, %276
  %678 = add i32 %677, %277
  %679 = sub i32 %678, %278
  %680 = sub i32 %679, %279
  %681 = sub i32 %680, %280
  %682 = add i32 %681, %281
  %683 = sub i32 %682, %290
  %684 = sub i32 %683, %293
  %685 = add i32 %684, %294
  %686 = add i32 %685, %296
  %687 = add i32 %686, %299
  %688 = add i32 %687, %306
  %689 = add i32 %688, %308
  %690 = add i32 %689, %313
  %691 = add i32 %690, %322
  %692 = sub i32 %691, %325
  %693 = sub i32 %692, %329
  %694 = add i32 %693, %332
  %695 = sub i32 %694, %334
  %696 = add i32 %695, %335
  %697 = sub i32 %696, %339
  %698 = add i32 %697, %340
  %699 = add i32 %698, %341
  %700 = sub i32 %699, %342
  %701 = sub i32 %700, %350
  %702 = add i32 %701, %354
  %703 = sub i32 %702, %355
  %704 = sub i32 %703, %356
  %705 = sub i32 %704, %357
  %706 = add i32 %705, %358
  %707 = add i32 %706, %359
  %708 = sub i32 %707, %364
  %709 = add i32 %708, %365
  %710 = sub i32 %709, %373
  %711 = add i32 %710, %375
  %712 = add i32 %711, %376
  %713 = sub i32 %712, %379
  %714 = add i32 %713, %381
  %715 = add i32 %714, %382
  %716 = add i32 %715, %383
  %717 = sub i32 %716, %344
  %718 = add i32 %717, %385
  %719 = sub i32 %718, %387
  %720 = add i32 %719, %391
  %721 = add i32 %720, %392
  %722 = sub i32 %721, %394
  %723 = sub i32 %722, %396
  %724 = add i32 %723, %399
  %725 = add i32 %724, %400
  %726 = add i32 %725, %403
  %727 = add i32 %726, %410
  %728 = sub i32 %727, %411
  %729 = sub i32 %728, %412
  %730 = add i32 %729, %416
  %731 = add i32 %730, %418
  %732 = add i32 %731, %419
  %733 = add i32 %732, %420
  %734 = add i32 %733, %424
  %735 = sub i32 %734, %426
  %736 = sub i32 %735, %427
  %737 = add i32 %736, %285
  %738 = sub i32 %737, %377
  %739 = add i32 %738, %428
  %740 = add i32 %739, %430
  %741 = add i32 %740, %432
  %742 = add i32 %741, %433
  %743 = sub i32 %742, %435
  %744 = add i32 %743, %505
  %745 = add i32 %744, %195
  %746 = add i32 %745, %197
  %747 = sub i32 %746, %249
  %748 = add i32 %747, %261
  %749 = sub i32 %748, %284
  %750 = sub i32 %749, %286
  %751 = sub i32 %750, %289
  %752 = sub i32 %751, %292
  %753 = sub i32 %752, %302
  %754 = sub i32 %753, %304
  %755 = sub i32 %754, %311
  %756 = sub i32 %755, %318
  %757 = sub i32 %756, %337
  %758 = add i32 %757, %345
  %759 = sub i32 %758, %347
  %760 = add i32 %759, %349
  %761 = sub i32 %760, %369
  %762 = sub i32 %761, %378
  %763 = sub i32 %762, %384
  %764 = sub i32 %763, %386
  %765 = sub i32 %764, %390
  %766 = sub i32 %765, %395
  %767 = add i32 %766, %397
  %768 = sub i32 %767, %402
  %769 = sub i32 %768, %407
  %770 = sub i32 %769, %408
  %771 = add i32 %770, %417
  %772 = sub i32 %771, %421
  %773 = add i32 %772, %437
  %774 = sub i32 %773, %439
  %775 = sub i32 %774, %442
  %776 = add i32 %775, %444
  %777 = add i32 %776, %446
  %778 = sub i32 %777, %447
  %779 = sub i32 %778, %406
  %780 = add i32 %779, %507
  %781 = sub i32 %780, %328
  %782 = sub i32 %781, %362
  %783 = add i32 %782, %502
  %784 = add i32 %783, %496
  %785 = add i32 %784, %487
  %786 = icmp eq i32 %26, %785
  %787 = select i1 %786, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %788 = tail call i32 @puts(i8* nonnull dereferenceable(1) %787)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
