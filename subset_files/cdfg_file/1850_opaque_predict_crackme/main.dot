digraph "DFG for'main' function" {
	Node0xfb1488[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xfb1508[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xfb1598[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xfb15f8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xfb1a78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfb1b58[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xfb1c58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfb1d18[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xfb1dc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfb2028[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xfb20e8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xfb2248[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xfb22a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xfb4090[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xfb4298[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfb43f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfb4508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfb45c8[shape=record, label="  ret i32 0"];
	Node0xfb1488 -> Node0xfb1508;
	Node0xfb1508 -> Node0xfb1598;
	Node0xfb1598 -> Node0xfb15f8;
	Node0xfb15f8 -> Node0xfb1a78;
	Node0xfb1a78 -> Node0xfb1b58;
	Node0xfb1b58 -> Node0xfb1c58;
	Node0xfb1c58 -> Node0xfb1d18;
	Node0xfb1d18 -> Node0xfb1dc8;
	Node0xfb1dc8 -> Node0xfb2028;
	Node0xfb2028 -> Node0xfb20e8;
	Node0xfb20e8 -> Node0xfb2248;
	Node0xfb2248 -> Node0xfb22a8;
	Node0xfb22a8 -> Node0xfb4090;
	Node0xfb4090 -> Node0xfb4298;
	Node0xfb4298 -> Node0xfb43f8;
	Node0xfb43f8 -> Node0xfb4508;
	Node0xfb4508 -> Node0xfb45c8;
edge [color=red]
	Node0xfb1488 -> Node0xfb15f8;
	Node0xfb15f8 -> Node0xfb1a78;
	Node0xfb1508 -> Node0xfb1b58;
	Node0xfb1b58 -> Node0xfb1c58;
	Node0xfb1598 -> Node0xfb1d18;
	Node0xfb1d18 -> Node0xfb1dc8;
	Node0xfb1488 -> Node0xfb2028;
	Node0xfb1508 -> Node0xfb2028;
	Node0xfb1598 -> Node0xfb2028;
	Node0xfb1488 -> Node0xfb20e8;
	Node0xfb1508 -> Node0xfb2248;
	Node0xfb1598 -> Node0xfb22a8;
	Node0xfb20e8 -> Node0xfb4090;
	Node0xfb2248 -> Node0xfb4090;
	Node0xfb22a8 -> Node0xfb4090;
	Node0xfb1d18 -> Node0xfb4298;
	Node0xfb1b58 -> Node0xfb43f8;
	Node0xfb15f8 -> Node0xfb4508;
}
