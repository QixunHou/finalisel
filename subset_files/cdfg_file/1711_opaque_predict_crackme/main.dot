digraph "DFG for'main' function" {
	Node0x22b1938[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x22b19b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x22b1a48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x22b1aa8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x22b1f28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x22b3958[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x22b3a38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22b3af8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x22b3ba8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22b3e08[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x22b3ec8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x22b4e38[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x22b54a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x22b55a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x22b57a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22b5908[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22b5a18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x22b5ad8[shape=record, label="  ret i32 0"];
	Node0x22b1938 -> Node0x22b19b8;
	Node0x22b19b8 -> Node0x22b1a48;
	Node0x22b1a48 -> Node0x22b1aa8;
	Node0x22b1aa8 -> Node0x22b1f28;
	Node0x22b1f28 -> Node0x22b3958;
	Node0x22b3958 -> Node0x22b3a38;
	Node0x22b3a38 -> Node0x22b3af8;
	Node0x22b3af8 -> Node0x22b3ba8;
	Node0x22b3ba8 -> Node0x22b3e08;
	Node0x22b3e08 -> Node0x22b3ec8;
	Node0x22b3ec8 -> Node0x22b4e38;
	Node0x22b4e38 -> Node0x22b54a8;
	Node0x22b54a8 -> Node0x22b55a0;
	Node0x22b55a0 -> Node0x22b57a8;
	Node0x22b57a8 -> Node0x22b5908;
	Node0x22b5908 -> Node0x22b5a18;
	Node0x22b5a18 -> Node0x22b5ad8;
edge [color=red]
	Node0x22b1938 -> Node0x22b1aa8;
	Node0x22b1aa8 -> Node0x22b1f28;
	Node0x22b19b8 -> Node0x22b3958;
	Node0x22b3958 -> Node0x22b3a38;
	Node0x22b1a48 -> Node0x22b3af8;
	Node0x22b3af8 -> Node0x22b3ba8;
	Node0x22b1938 -> Node0x22b3e08;
	Node0x22b19b8 -> Node0x22b3e08;
	Node0x22b1a48 -> Node0x22b3e08;
	Node0x22b1938 -> Node0x22b3ec8;
	Node0x22b19b8 -> Node0x22b4e38;
	Node0x22b1a48 -> Node0x22b54a8;
	Node0x22b3ec8 -> Node0x22b55a0;
	Node0x22b4e38 -> Node0x22b55a0;
	Node0x22b54a8 -> Node0x22b55a0;
	Node0x22b3af8 -> Node0x22b57a8;
	Node0x22b3958 -> Node0x22b5908;
	Node0x22b1aa8 -> Node0x22b5a18;
}
