digraph "DFG for'crackme' function" {
	Node0x1781d80[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1781df0[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x1781e90[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x1781f30[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0x1781fa0[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0x1782010[shape=record, label="  %10 = or i32 %9, %3"];
	Node0x1782080[shape=record, label="  %11 = xor i32 %3, %0"];
	Node0x17820f0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1782160[shape=record, label="  %13 = add i32 %10, %2"];
	Node0x17821d0[shape=record, label="  %14 = add i32 %13, %12"];
	Node0x1782240[shape=record, label="  %15 = add i32 %14, %8"];
	Node0x17822b0[shape=record, label="  %16 = and i32 %2, %1"];
	Node0x1782320[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x17823c0[shape=record, label="  %18 = mul i32 %17, -5"];
	Node0x1782430[shape=record, label="  %19 = add i32 %2, 1"];
	Node0x17824a0[shape=record, label="  %20 = or i32 %2, %1"];
	Node0x1782510[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1782580[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x17825f0[shape=record, label="  %23 = xor i32 %20, -1"];
	Node0x1782660[shape=record, label="  %24 = xor i32 %1, -1"];
	Node0x17826d0[shape=record, label="  %25 = and i32 %24, %2"];
	Node0x1782770[shape=record, label="  %26 = mul i32 %25, 9"];
	Node0x1782810[shape=record, label="  %27 = shl i32 %16, 2"];
	Node0x1782880[shape=record, label="  %28 = and i32 %3, %0"];
	Node0x17828f0[shape=record, label="  %29 = shl i32 %28, 2"];
	Node0x1782990[shape=record, label="  %30 = xor i32 %29, -4"];
	Node0x1782a00[shape=record, label="  %31 = and i32 %9, %3"];
	Node0x1782a70[shape=record, label="  %32 = xor i32 %31, -1"];
	Node0x1782cf0[shape=record, label="  %33 = or i32 %3, %0"];
	Node0x1782d60[shape=record, label="  %34 = shl i32 %33, 2"];
	Node0x1782e00[shape=record, label="  %35 = or i32 %34, 3"];
	Node0x1782e70[shape=record, label="  %36 = xor i32 %10, -1"];
	Node0x1782ee0[shape=record, label="  %37 = add i32 %31, %36"];
	Node0x1782f80[shape=record, label="  %38 = mul i32 %37, -6"];
	Node0x1782ff0[shape=record, label="  %39 = add i32 %6, %23"];
	Node0x1783090[shape=record, label="  %40 = mul i32 %39, 7"];
	Node0x1783100[shape=record, label="  %41 = sub i32 %19, %0"];
	Node0x1783170[shape=record, label="  %42 = add i32 %41, %3"];
	Node0x17831e0[shape=record, label="  %43 = add i32 %42, %18"];
	Node0x1783250[shape=record, label="  %44 = add i32 %43, %22"];
	Node0x17832c0[shape=record, label="  %45 = add i32 %44, %26"];
	Node0x1783330[shape=record, label="  %46 = add i32 %45, %27"];
	Node0x17833a0[shape=record, label="  %47 = add i32 %46, %11"];
	Node0x1783410[shape=record, label="  %48 = add i32 %47, %32"];
	Node0x1783480[shape=record, label="  %49 = add i32 %48, %40"];
	Node0x17834f0[shape=record, label="  %50 = add i32 %49, %30"];
	Node0x1783560[shape=record, label="  %51 = add i32 %50, %35"];
	Node0x17835d0[shape=record, label="  %52 = add i32 %51, %38"];
	Node0x1783640[shape=record, label="  %53 = icmp eq i32 %15, %52"];
	Node0x1722268[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1783ae0[shape=record, label="  %55 = tail call i32 @puts(i8* nonnull dereferenceable(1) %54)"];
	Node0x1783b30[shape=record, label="  ret void"];
	Node0x1781d80 -> Node0x1781df0;
	Node0x1781df0 -> Node0x1781e90;
	Node0x1781e90 -> Node0x1781f30;
	Node0x1781f30 -> Node0x1781fa0;
	Node0x1781fa0 -> Node0x1782010;
	Node0x1782010 -> Node0x1782080;
	Node0x1782080 -> Node0x17820f0;
	Node0x17820f0 -> Node0x1782160;
	Node0x1782160 -> Node0x17821d0;
	Node0x17821d0 -> Node0x1782240;
	Node0x1782240 -> Node0x17822b0;
	Node0x17822b0 -> Node0x1782320;
	Node0x1782320 -> Node0x17823c0;
	Node0x17823c0 -> Node0x1782430;
	Node0x1782430 -> Node0x17824a0;
	Node0x17824a0 -> Node0x1782510;
	Node0x1782510 -> Node0x1782580;
	Node0x1782580 -> Node0x17825f0;
	Node0x17825f0 -> Node0x1782660;
	Node0x1782660 -> Node0x17826d0;
	Node0x17826d0 -> Node0x1782770;
	Node0x1782770 -> Node0x1782810;
	Node0x1782810 -> Node0x1782880;
	Node0x1782880 -> Node0x17828f0;
	Node0x17828f0 -> Node0x1782990;
	Node0x1782990 -> Node0x1782a00;
	Node0x1782a00 -> Node0x1782a70;
	Node0x1782a70 -> Node0x1782cf0;
	Node0x1782cf0 -> Node0x1782d60;
	Node0x1782d60 -> Node0x1782e00;
	Node0x1782e00 -> Node0x1782e70;
	Node0x1782e70 -> Node0x1782ee0;
	Node0x1782ee0 -> Node0x1782f80;
	Node0x1782f80 -> Node0x1782ff0;
	Node0x1782ff0 -> Node0x1783090;
	Node0x1783090 -> Node0x1783100;
	Node0x1783100 -> Node0x1783170;
	Node0x1783170 -> Node0x17831e0;
	Node0x17831e0 -> Node0x1783250;
	Node0x1783250 -> Node0x17832c0;
	Node0x17832c0 -> Node0x1783330;
	Node0x1783330 -> Node0x17833a0;
	Node0x17833a0 -> Node0x1783410;
	Node0x1783410 -> Node0x1783480;
	Node0x1783480 -> Node0x17834f0;
	Node0x17834f0 -> Node0x1783560;
	Node0x1783560 -> Node0x17835d0;
	Node0x17835d0 -> Node0x1783640;
	Node0x1783640 -> Node0x1722268;
	Node0x1722268 -> Node0x1783ae0;
	Node0x1783ae0 -> Node0x1783b30;
edge [color=red]
	Node0x1781d80 -> Node0x1781df0;
	Node0x1781df0 -> Node0x1781e90;
	Node0x1781e90 -> Node0x1781f30;
	Node0x1781fa0 -> Node0x1782010;
	Node0x1782080 -> Node0x17820f0;
	Node0x1782010 -> Node0x1782160;
	Node0x1782160 -> Node0x17821d0;
	Node0x17820f0 -> Node0x17821d0;
	Node0x17821d0 -> Node0x1782240;
	Node0x1781f30 -> Node0x1782240;
	Node0x17822b0 -> Node0x1782320;
	Node0x1782320 -> Node0x17823c0;
	Node0x17824a0 -> Node0x1782510;
	Node0x1782510 -> Node0x1782580;
	Node0x17824a0 -> Node0x17825f0;
	Node0x1782660 -> Node0x17826d0;
	Node0x17826d0 -> Node0x1782770;
	Node0x17822b0 -> Node0x1782810;
	Node0x1782880 -> Node0x17828f0;
	Node0x17828f0 -> Node0x1782990;
	Node0x1781fa0 -> Node0x1782a00;
	Node0x1782a00 -> Node0x1782a70;
	Node0x1782cf0 -> Node0x1782d60;
	Node0x1782d60 -> Node0x1782e00;
	Node0x1782010 -> Node0x1782e70;
	Node0x1782a00 -> Node0x1782ee0;
	Node0x1782e70 -> Node0x1782ee0;
	Node0x1782ee0 -> Node0x1782f80;
	Node0x1781df0 -> Node0x1782ff0;
	Node0x17825f0 -> Node0x1782ff0;
	Node0x1782ff0 -> Node0x1783090;
	Node0x1782430 -> Node0x1783100;
	Node0x1783100 -> Node0x1783170;
	Node0x1783170 -> Node0x17831e0;
	Node0x17823c0 -> Node0x17831e0;
	Node0x17831e0 -> Node0x1783250;
	Node0x1782580 -> Node0x1783250;
	Node0x1783250 -> Node0x17832c0;
	Node0x1782770 -> Node0x17832c0;
	Node0x17832c0 -> Node0x1783330;
	Node0x1782810 -> Node0x1783330;
	Node0x1783330 -> Node0x17833a0;
	Node0x1782080 -> Node0x17833a0;
	Node0x17833a0 -> Node0x1783410;
	Node0x1782a70 -> Node0x1783410;
	Node0x1783410 -> Node0x1783480;
	Node0x1783090 -> Node0x1783480;
	Node0x1783480 -> Node0x17834f0;
	Node0x1782990 -> Node0x17834f0;
	Node0x17834f0 -> Node0x1783560;
	Node0x1782e00 -> Node0x1783560;
	Node0x1783560 -> Node0x17835d0;
	Node0x1782f80 -> Node0x17835d0;
	Node0x1782240 -> Node0x1783640;
	Node0x17835d0 -> Node0x1783640;
	Node0x1783640 -> Node0x1722268;
	Node0x1722268 -> Node0x1783ae0;
}
