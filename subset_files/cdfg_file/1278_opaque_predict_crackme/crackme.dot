digraph "DFG for'crackme' function" {
	Node0x1fd8da0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1fd8e10[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x1fd8e80[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x1fd8f20[shape=record, label="  %8 = mul i32 %7, -2"];
	Node0x1fd8f90[shape=record, label="  %9 = add i32 %8, %1"];
	Node0x1fd9000[shape=record, label="  %10 = and i32 %3, %0"];
	Node0x1fd9070[shape=record, label="  %11 = xor i32 %0, -1"];
	Node0x1fd90e0[shape=record, label="  %12 = and i32 %11, %3"];
	Node0x1fd9150[shape=record, label="  %13 = sub i32 %9, %10"];
	Node0x1fd91c0[shape=record, label="  %14 = add i32 %13, %12"];
	Node0x1fd9230[shape=record, label="  %15 = xor i32 %1, -1"];
	Node0x1fd92a0[shape=record, label="  %16 = or i32 %5, %1"];
	Node0x1fd9310[shape=record, label="  %17 = and i32 %2, %1"];
	Node0x1fd93b0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x1fd9420[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x1fd9490[shape=record, label="  %20 = or i32 %2, %1"];
	Node0x1fd9500[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1fd9570[shape=record, label="  %22 = shl i32 %16, 1"];
	Node0x1fd95e0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x1fd9680[shape=record, label="  %24 = mul i32 %6, 6"];
	Node0x1fd96f0[shape=record, label="  %25 = shl i32 %3, 1"];
	Node0x1fd9760[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x1fd97d0[shape=record, label="  %27 = or i32 %11, %3"];
	Node0x1fd9840[shape=record, label="  %28 = xor i32 %25, -2"];
	Node0x1fd98b0[shape=record, label="  %29 = xor i32 %3, %0"];
	Node0x1fd9920[shape=record, label="  %30 = add i32 %29, 1"];
	Node0x1fd9990[shape=record, label="  %31 = xor i32 %26, -1"];
	Node0x1fd9a30[shape=record, label="  %32 = mul i32 %31, 5"];
	Node0x1fd9cb0[shape=record, label="  %33 = xor i32 %27, -1"];
	Node0x1fd9d20[shape=record, label="  %34 = add i32 %30, %17"];
	Node0x1fd9d90[shape=record, label="  %35 = add i32 %34, %33"];
	Node0x1fd9e30[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0x1fd9ea0[shape=record, label="  %37 = sub i32 %11, %0"];
	Node0x1fd9f10[shape=record, label="  %38 = add i32 %37, %15"];
	Node0x1fd9f80[shape=record, label="  %39 = sub i32 %38, %2"];
	Node0x1fd9ff0[shape=record, label="  %40 = sub i32 %39, %16"];
	Node0x1fda060[shape=record, label="  %41 = sub i32 %40, %21"];
	Node0x1fda0d0[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x1fda140[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x1fda1b0[shape=record, label="  %44 = add i32 %43, %26"];
	Node0x1fda220[shape=record, label="  %45 = sub i32 %44, %27"];
	Node0x1fda290[shape=record, label="  %46 = sub i32 %45, %29"];
	Node0x1fda300[shape=record, label="  %47 = sub i32 %46, %12"];
	Node0x1fda370[shape=record, label="  %48 = add i32 %47, %10"];
	Node0x1fda3e0[shape=record, label="  %49 = sub i32 %48, %19"];
	Node0x1fda450[shape=record, label="  %50 = add i32 %49, %23"];
	Node0x1fda4c0[shape=record, label="  %51 = sub i32 %50, %28"];
	Node0x1fda530[shape=record, label="  %52 = add i32 %51, %32"];
	Node0x1fda5a0[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x1fda610[shape=record, label="  %54 = icmp eq i32 %14, %53"];
	Node0x1f79268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1fdaab0[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0x1fdab00[shape=record, label="  ret void"];
	Node0x1fd8da0 -> Node0x1fd8e10;
	Node0x1fd8e10 -> Node0x1fd8e80;
	Node0x1fd8e80 -> Node0x1fd8f20;
	Node0x1fd8f20 -> Node0x1fd8f90;
	Node0x1fd8f90 -> Node0x1fd9000;
	Node0x1fd9000 -> Node0x1fd9070;
	Node0x1fd9070 -> Node0x1fd90e0;
	Node0x1fd90e0 -> Node0x1fd9150;
	Node0x1fd9150 -> Node0x1fd91c0;
	Node0x1fd91c0 -> Node0x1fd9230;
	Node0x1fd9230 -> Node0x1fd92a0;
	Node0x1fd92a0 -> Node0x1fd9310;
	Node0x1fd9310 -> Node0x1fd93b0;
	Node0x1fd93b0 -> Node0x1fd9420;
	Node0x1fd9420 -> Node0x1fd9490;
	Node0x1fd9490 -> Node0x1fd9500;
	Node0x1fd9500 -> Node0x1fd9570;
	Node0x1fd9570 -> Node0x1fd95e0;
	Node0x1fd95e0 -> Node0x1fd9680;
	Node0x1fd9680 -> Node0x1fd96f0;
	Node0x1fd96f0 -> Node0x1fd9760;
	Node0x1fd9760 -> Node0x1fd97d0;
	Node0x1fd97d0 -> Node0x1fd9840;
	Node0x1fd9840 -> Node0x1fd98b0;
	Node0x1fd98b0 -> Node0x1fd9920;
	Node0x1fd9920 -> Node0x1fd9990;
	Node0x1fd9990 -> Node0x1fd9a30;
	Node0x1fd9a30 -> Node0x1fd9cb0;
	Node0x1fd9cb0 -> Node0x1fd9d20;
	Node0x1fd9d20 -> Node0x1fd9d90;
	Node0x1fd9d90 -> Node0x1fd9e30;
	Node0x1fd9e30 -> Node0x1fd9ea0;
	Node0x1fd9ea0 -> Node0x1fd9f10;
	Node0x1fd9f10 -> Node0x1fd9f80;
	Node0x1fd9f80 -> Node0x1fd9ff0;
	Node0x1fd9ff0 -> Node0x1fda060;
	Node0x1fda060 -> Node0x1fda0d0;
	Node0x1fda0d0 -> Node0x1fda140;
	Node0x1fda140 -> Node0x1fda1b0;
	Node0x1fda1b0 -> Node0x1fda220;
	Node0x1fda220 -> Node0x1fda290;
	Node0x1fda290 -> Node0x1fda300;
	Node0x1fda300 -> Node0x1fda370;
	Node0x1fda370 -> Node0x1fda3e0;
	Node0x1fda3e0 -> Node0x1fda450;
	Node0x1fda450 -> Node0x1fda4c0;
	Node0x1fda4c0 -> Node0x1fda530;
	Node0x1fda530 -> Node0x1fda5a0;
	Node0x1fda5a0 -> Node0x1fda610;
	Node0x1fda610 -> Node0x1f79268;
	Node0x1f79268 -> Node0x1fdaab0;
	Node0x1fdaab0 -> Node0x1fdab00;
edge [color=red]
	Node0x1fd8da0 -> Node0x1fd8e10;
	Node0x1fd8e10 -> Node0x1fd8e80;
	Node0x1fd8e80 -> Node0x1fd8f20;
	Node0x1fd8f20 -> Node0x1fd8f90;
	Node0x1fd9070 -> Node0x1fd90e0;
	Node0x1fd8f90 -> Node0x1fd9150;
	Node0x1fd9000 -> Node0x1fd9150;
	Node0x1fd9150 -> Node0x1fd91c0;
	Node0x1fd90e0 -> Node0x1fd91c0;
	Node0x1fd8da0 -> Node0x1fd92a0;
	Node0x1fd9310 -> Node0x1fd93b0;
	Node0x1fd93b0 -> Node0x1fd9420;
	Node0x1fd9490 -> Node0x1fd9500;
	Node0x1fd92a0 -> Node0x1fd9570;
	Node0x1fd9570 -> Node0x1fd95e0;
	Node0x1fd8e10 -> Node0x1fd9680;
	Node0x1fd9070 -> Node0x1fd97d0;
	Node0x1fd96f0 -> Node0x1fd9840;
	Node0x1fd98b0 -> Node0x1fd9920;
	Node0x1fd9760 -> Node0x1fd9990;
	Node0x1fd9990 -> Node0x1fd9a30;
	Node0x1fd97d0 -> Node0x1fd9cb0;
	Node0x1fd9920 -> Node0x1fd9d20;
	Node0x1fd9310 -> Node0x1fd9d20;
	Node0x1fd9d20 -> Node0x1fd9d90;
	Node0x1fd9cb0 -> Node0x1fd9d90;
	Node0x1fd9d90 -> Node0x1fd9e30;
	Node0x1fd9070 -> Node0x1fd9ea0;
	Node0x1fd9ea0 -> Node0x1fd9f10;
	Node0x1fd9230 -> Node0x1fd9f10;
	Node0x1fd9f10 -> Node0x1fd9f80;
	Node0x1fd9f80 -> Node0x1fd9ff0;
	Node0x1fd92a0 -> Node0x1fd9ff0;
	Node0x1fd9ff0 -> Node0x1fda060;
	Node0x1fd9500 -> Node0x1fda060;
	Node0x1fda060 -> Node0x1fda0d0;
	Node0x1fd9680 -> Node0x1fda0d0;
	Node0x1fda0d0 -> Node0x1fda140;
	Node0x1fd96f0 -> Node0x1fda140;
	Node0x1fda140 -> Node0x1fda1b0;
	Node0x1fd9760 -> Node0x1fda1b0;
	Node0x1fda1b0 -> Node0x1fda220;
	Node0x1fd97d0 -> Node0x1fda220;
	Node0x1fda220 -> Node0x1fda290;
	Node0x1fd98b0 -> Node0x1fda290;
	Node0x1fda290 -> Node0x1fda300;
	Node0x1fd90e0 -> Node0x1fda300;
	Node0x1fda300 -> Node0x1fda370;
	Node0x1fd9000 -> Node0x1fda370;
	Node0x1fda370 -> Node0x1fda3e0;
	Node0x1fd9420 -> Node0x1fda3e0;
	Node0x1fda3e0 -> Node0x1fda450;
	Node0x1fd95e0 -> Node0x1fda450;
	Node0x1fda450 -> Node0x1fda4c0;
	Node0x1fd9840 -> Node0x1fda4c0;
	Node0x1fda4c0 -> Node0x1fda530;
	Node0x1fd9a30 -> Node0x1fda530;
	Node0x1fda530 -> Node0x1fda5a0;
	Node0x1fd9e30 -> Node0x1fda5a0;
	Node0x1fd91c0 -> Node0x1fda610;
	Node0x1fda5a0 -> Node0x1fda610;
	Node0x1fda610 -> Node0x1f79268;
	Node0x1f79268 -> Node0x1fdaab0;
}
