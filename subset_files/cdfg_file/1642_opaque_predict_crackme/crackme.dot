digraph "DFG for'crackme' function" {
	Node0x1d49750[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x1d497c0[shape=record, label="  %6 = xor i32 %3, %0"];
	Node0x1d49e40[shape=record, label="  %7 = sub i32 1, %5"];
	Node0x1d49eb0[shape=record, label="  %8 = add i32 %7, %6"];
	Node0x1d49f50[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x1d49fc0[shape=record, label="  %10 = or i32 %9, %1"];
	Node0x1d4a030[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x1d4a0a0[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x1d4a110[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x1d4a180[shape=record, label="  %14 = shl i32 %5, 1"];
	Node0x1d4a220[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1d4a290[shape=record, label="  %16 = shl i32 %10, 1"];
	Node0x1d4a300[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1d4a370[shape=record, label="  %18 = and i32 %9, %1"];
	Node0x1d4a410[shape=record, label="  %19 = shl i32 %18, 2"];
	Node0x1d4a480[shape=record, label="  %20 = xor i32 %0, -1"];
	Node0x1d4a4f0[shape=record, label="  %21 = or i32 %20, %3"];
	Node0x1d4a560[shape=record, label="  %22 = and i32 %3, %0"];
	Node0x1d4a5d0[shape=record, label="  %23 = shl i32 %22, 2"];
	Node0x1d4a670[shape=record, label="  %24 = xor i32 %23, -4"];
	Node0x1d4a6e0[shape=record, label="  %25 = and i32 %20, %3"];
	Node0x1d4a750[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x1d4a7c0[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x1d4a830[shape=record, label="  %28 = or i32 %3, %0"];
	Node0x1d4a8a0[shape=record, label="  %29 = shl i32 %6, 1"];
	Node0x1d4a910[shape=record, label="  %30 = xor i32 %28, -1"];
	Node0x1d4a980[shape=record, label="  %31 = shl i32 %21, 1"];
	Node0x1d4a9f0[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0x1d4ac70[shape=record, label="  %33 = sub i32 %30, %22"];
	Node0x1d4ad10[shape=record, label="  %34 = mul i32 %33, 3"];
	Node0x1d4ad80[shape=record, label="  %35 = sub i32 3, %2"];
	Node0x1d4adf0[shape=record, label="  %36 = add i32 %35, %10"];
	Node0x1d4ae60[shape=record, label="  %37 = add i32 %36, %11"];
	Node0x1d4aed0[shape=record, label="  %38 = add i32 %37, %13"];
	Node0x1d4af40[shape=record, label="  %39 = sub i32 %38, %12"];
	Node0x1d4afb0[shape=record, label="  %40 = add i32 %39, %3"];
	Node0x1d4b020[shape=record, label="  %41 = sub i32 %40, %19"];
	Node0x1d4b090[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x1d4b100[shape=record, label="  %43 = add i32 %42, %28"];
	Node0x1d4b170[shape=record, label="  %44 = sub i32 %43, %15"];
	Node0x1d4b1e0[shape=record, label="  %45 = sub i32 %44, %17"];
	Node0x1d4b250[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x1d4b2c0[shape=record, label="  %47 = add i32 %46, %26"];
	Node0x1d4b330[shape=record, label="  %48 = sub i32 %47, %24"];
	Node0x1d4b3a0[shape=record, label="  %49 = add i32 %48, %27"];
	Node0x1d4b410[shape=record, label="  %50 = add i32 %49, %32"];
	Node0x1d4b480[shape=record, label="  %51 = add i32 %50, %34"];
	Node0x1d4b4f0[shape=record, label="  %52 = icmp eq i32 %8, %51"];
	Node0x1cea268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d4b990[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0x1d4b9e0[shape=record, label="  ret void"];
	Node0x1d49750 -> Node0x1d497c0;
	Node0x1d497c0 -> Node0x1d49e40;
	Node0x1d49e40 -> Node0x1d49eb0;
	Node0x1d49eb0 -> Node0x1d49f50;
	Node0x1d49f50 -> Node0x1d49fc0;
	Node0x1d49fc0 -> Node0x1d4a030;
	Node0x1d4a030 -> Node0x1d4a0a0;
	Node0x1d4a0a0 -> Node0x1d4a110;
	Node0x1d4a110 -> Node0x1d4a180;
	Node0x1d4a180 -> Node0x1d4a220;
	Node0x1d4a220 -> Node0x1d4a290;
	Node0x1d4a290 -> Node0x1d4a300;
	Node0x1d4a300 -> Node0x1d4a370;
	Node0x1d4a370 -> Node0x1d4a410;
	Node0x1d4a410 -> Node0x1d4a480;
	Node0x1d4a480 -> Node0x1d4a4f0;
	Node0x1d4a4f0 -> Node0x1d4a560;
	Node0x1d4a560 -> Node0x1d4a5d0;
	Node0x1d4a5d0 -> Node0x1d4a670;
	Node0x1d4a670 -> Node0x1d4a6e0;
	Node0x1d4a6e0 -> Node0x1d4a750;
	Node0x1d4a750 -> Node0x1d4a7c0;
	Node0x1d4a7c0 -> Node0x1d4a830;
	Node0x1d4a830 -> Node0x1d4a8a0;
	Node0x1d4a8a0 -> Node0x1d4a910;
	Node0x1d4a910 -> Node0x1d4a980;
	Node0x1d4a980 -> Node0x1d4a9f0;
	Node0x1d4a9f0 -> Node0x1d4ac70;
	Node0x1d4ac70 -> Node0x1d4ad10;
	Node0x1d4ad10 -> Node0x1d4ad80;
	Node0x1d4ad80 -> Node0x1d4adf0;
	Node0x1d4adf0 -> Node0x1d4ae60;
	Node0x1d4ae60 -> Node0x1d4aed0;
	Node0x1d4aed0 -> Node0x1d4af40;
	Node0x1d4af40 -> Node0x1d4afb0;
	Node0x1d4afb0 -> Node0x1d4b020;
	Node0x1d4b020 -> Node0x1d4b090;
	Node0x1d4b090 -> Node0x1d4b100;
	Node0x1d4b100 -> Node0x1d4b170;
	Node0x1d4b170 -> Node0x1d4b1e0;
	Node0x1d4b1e0 -> Node0x1d4b250;
	Node0x1d4b250 -> Node0x1d4b2c0;
	Node0x1d4b2c0 -> Node0x1d4b330;
	Node0x1d4b330 -> Node0x1d4b3a0;
	Node0x1d4b3a0 -> Node0x1d4b410;
	Node0x1d4b410 -> Node0x1d4b480;
	Node0x1d4b480 -> Node0x1d4b4f0;
	Node0x1d4b4f0 -> Node0x1cea268;
	Node0x1cea268 -> Node0x1d4b990;
	Node0x1d4b990 -> Node0x1d4b9e0;
edge [color=red]
	Node0x1d49750 -> Node0x1d49e40;
	Node0x1d49e40 -> Node0x1d49eb0;
	Node0x1d497c0 -> Node0x1d49eb0;
	Node0x1d49f50 -> Node0x1d49fc0;
	Node0x1d4a0a0 -> Node0x1d4a110;
	Node0x1d49750 -> Node0x1d4a180;
	Node0x1d4a180 -> Node0x1d4a220;
	Node0x1d49fc0 -> Node0x1d4a290;
	Node0x1d4a290 -> Node0x1d4a300;
	Node0x1d49f50 -> Node0x1d4a370;
	Node0x1d4a370 -> Node0x1d4a410;
	Node0x1d4a480 -> Node0x1d4a4f0;
	Node0x1d4a560 -> Node0x1d4a5d0;
	Node0x1d4a5d0 -> Node0x1d4a670;
	Node0x1d4a480 -> Node0x1d4a6e0;
	Node0x1d4a6e0 -> Node0x1d4a750;
	Node0x1d4a750 -> Node0x1d4a7c0;
	Node0x1d497c0 -> Node0x1d4a8a0;
	Node0x1d4a830 -> Node0x1d4a910;
	Node0x1d4a4f0 -> Node0x1d4a980;
	Node0x1d4a980 -> Node0x1d4a9f0;
	Node0x1d4a910 -> Node0x1d4ac70;
	Node0x1d4a560 -> Node0x1d4ac70;
	Node0x1d4ac70 -> Node0x1d4ad10;
	Node0x1d4ad80 -> Node0x1d4adf0;
	Node0x1d49fc0 -> Node0x1d4adf0;
	Node0x1d4adf0 -> Node0x1d4ae60;
	Node0x1d4a030 -> Node0x1d4ae60;
	Node0x1d4ae60 -> Node0x1d4aed0;
	Node0x1d4a110 -> Node0x1d4aed0;
	Node0x1d4aed0 -> Node0x1d4af40;
	Node0x1d4a0a0 -> Node0x1d4af40;
	Node0x1d4af40 -> Node0x1d4afb0;
	Node0x1d4afb0 -> Node0x1d4b020;
	Node0x1d4a410 -> Node0x1d4b020;
	Node0x1d4b020 -> Node0x1d4b090;
	Node0x1d4a4f0 -> Node0x1d4b090;
	Node0x1d4b090 -> Node0x1d4b100;
	Node0x1d4a830 -> Node0x1d4b100;
	Node0x1d4b100 -> Node0x1d4b170;
	Node0x1d4a220 -> Node0x1d4b170;
	Node0x1d4b170 -> Node0x1d4b1e0;
	Node0x1d4a300 -> Node0x1d4b1e0;
	Node0x1d4b1e0 -> Node0x1d4b250;
	Node0x1d4a8a0 -> Node0x1d4b250;
	Node0x1d4b250 -> Node0x1d4b2c0;
	Node0x1d4a750 -> Node0x1d4b2c0;
	Node0x1d4b2c0 -> Node0x1d4b330;
	Node0x1d4a670 -> Node0x1d4b330;
	Node0x1d4b330 -> Node0x1d4b3a0;
	Node0x1d4a7c0 -> Node0x1d4b3a0;
	Node0x1d4b3a0 -> Node0x1d4b410;
	Node0x1d4a9f0 -> Node0x1d4b410;
	Node0x1d4b410 -> Node0x1d4b480;
	Node0x1d4ad10 -> Node0x1d4b480;
	Node0x1d49eb0 -> Node0x1d4b4f0;
	Node0x1d4b480 -> Node0x1d4b4f0;
	Node0x1d4b4f0 -> Node0x1cea268;
	Node0x1cea268 -> Node0x1d4b990;
}
