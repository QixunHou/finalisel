digraph "DFG for'crackme' function" {
	Node0x175f680[shape=record, label="  %3 = and i32 %1, %0"];
	Node0x175fd30[shape=record, label="  %4 = xor i32 %3, -1"];
	Node0x175fdf0[shape=record, label="  %5 = mul i32 %4, -5"];
	Node0x175fe60[shape=record, label="  %6 = xor i32 %1, %0"];
	Node0x175ff00[shape=record, label="  %7 = add i32 %6, 1"];
	Node0x175ff70[shape=record, label="  %8 = add i32 %7, %5"];
	Node0x175ffe0[shape=record, label="  %9 = shl i32 %6, 1"];
	Node0x1760050[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x17600c0[shape=record, label="  %11 = xor i32 %1, -1"];
	Node0x1760130[shape=record, label="  %12 = add i32 %1, 1"];
	Node0x17601a0[shape=record, label="  %13 = and i32 %11, %0"];
	Node0x1760210[shape=record, label="  %14 = shl i32 %0, 1"];
	Node0x17602b0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1760320[shape=record, label="  %16 = or i32 %1, %0"];
	Node0x1760390[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1760430[shape=record, label="  %18 = xor i32 %0, 2147483647"];
	Node0x17604a0[shape=record, label="  %19 = and i32 %18, %1"];
	Node0x1760510[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x17605b0[shape=record, label="  %21 = shl i32 %13, 2"];
	Node0x1760620[shape=record, label="  %22 = add i32 %3, %17"];
	Node0x17606c0[shape=record, label="  %23 = mul i32 %22, -3"];
	Node0x1760730[shape=record, label="  %24 = add i32 %0, 1"];
	Node0x17607a0[shape=record, label="  %25 = add i32 %24, %1"];
	Node0x1760810[shape=record, label="  %26 = add i32 %25, %12"];
	Node0x1760880[shape=record, label="  %27 = add i32 %26, %13"];
	Node0x17608f0[shape=record, label="  %28 = sub i32 %27, %15"];
	Node0x1760960[shape=record, label="  %29 = add i32 %28, %10"];
	Node0x17609d0[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0x1760a40[shape=record, label="  %31 = sub i32 %30, %21"];
	Node0x1760ab0[shape=record, label="  %32 = add i32 %31, %23"];
	Node0x1760d30[shape=record, label="  %33 = icmp eq i32 %8, %32"];
	Node0x1700268[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x17611d0[shape=record, label="  %35 = tail call i32 @puts(i8* nonnull dereferenceable(1) %34)"];
	Node0x1761220[shape=record, label="  ret void"];
	Node0x175f680 -> Node0x175fd30;
	Node0x175fd30 -> Node0x175fdf0;
	Node0x175fdf0 -> Node0x175fe60;
	Node0x175fe60 -> Node0x175ff00;
	Node0x175ff00 -> Node0x175ff70;
	Node0x175ff70 -> Node0x175ffe0;
	Node0x175ffe0 -> Node0x1760050;
	Node0x1760050 -> Node0x17600c0;
	Node0x17600c0 -> Node0x1760130;
	Node0x1760130 -> Node0x17601a0;
	Node0x17601a0 -> Node0x1760210;
	Node0x1760210 -> Node0x17602b0;
	Node0x17602b0 -> Node0x1760320;
	Node0x1760320 -> Node0x1760390;
	Node0x1760390 -> Node0x1760430;
	Node0x1760430 -> Node0x17604a0;
	Node0x17604a0 -> Node0x1760510;
	Node0x1760510 -> Node0x17605b0;
	Node0x17605b0 -> Node0x1760620;
	Node0x1760620 -> Node0x17606c0;
	Node0x17606c0 -> Node0x1760730;
	Node0x1760730 -> Node0x17607a0;
	Node0x17607a0 -> Node0x1760810;
	Node0x1760810 -> Node0x1760880;
	Node0x1760880 -> Node0x17608f0;
	Node0x17608f0 -> Node0x1760960;
	Node0x1760960 -> Node0x17609d0;
	Node0x17609d0 -> Node0x1760a40;
	Node0x1760a40 -> Node0x1760ab0;
	Node0x1760ab0 -> Node0x1760d30;
	Node0x1760d30 -> Node0x1700268;
	Node0x1700268 -> Node0x17611d0;
	Node0x17611d0 -> Node0x1761220;
edge [color=red]
	Node0x175f680 -> Node0x175fd30;
	Node0x175fd30 -> Node0x175fdf0;
	Node0x175fe60 -> Node0x175ff00;
	Node0x175ff00 -> Node0x175ff70;
	Node0x175fdf0 -> Node0x175ff70;
	Node0x175fe60 -> Node0x175ffe0;
	Node0x175ffe0 -> Node0x1760050;
	Node0x17600c0 -> Node0x17601a0;
	Node0x1760210 -> Node0x17602b0;
	Node0x1760320 -> Node0x1760390;
	Node0x1760430 -> Node0x17604a0;
	Node0x17604a0 -> Node0x1760510;
	Node0x17601a0 -> Node0x17605b0;
	Node0x175f680 -> Node0x1760620;
	Node0x1760390 -> Node0x1760620;
	Node0x1760620 -> Node0x17606c0;
	Node0x1760730 -> Node0x17607a0;
	Node0x17607a0 -> Node0x1760810;
	Node0x1760130 -> Node0x1760810;
	Node0x1760810 -> Node0x1760880;
	Node0x17601a0 -> Node0x1760880;
	Node0x1760880 -> Node0x17608f0;
	Node0x17602b0 -> Node0x17608f0;
	Node0x17608f0 -> Node0x1760960;
	Node0x1760050 -> Node0x1760960;
	Node0x1760960 -> Node0x17609d0;
	Node0x1760510 -> Node0x17609d0;
	Node0x17609d0 -> Node0x1760a40;
	Node0x17605b0 -> Node0x1760a40;
	Node0x1760a40 -> Node0x1760ab0;
	Node0x17606c0 -> Node0x1760ab0;
	Node0x175ff70 -> Node0x1760d30;
	Node0x1760ab0 -> Node0x1760d30;
	Node0x1760d30 -> Node0x1700268;
	Node0x1700268 -> Node0x17611d0;
}
