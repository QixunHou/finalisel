digraph "DFG for'crackme' function" {
	Node0xd37d70[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xd37de0[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0xd37e50[shape=record, label="  %7 = and i32 %6, %3"];
	Node0xd37ec0[shape=record, label="  %8 = sub i32 %7, %2"];
	Node0xd37f30[shape=record, label="  %9 = or i32 %2, %1"];
	Node0xd37fa0[shape=record, label="  %10 = xor i32 %2, %1"];
	Node0xd38010[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0xd380b0[shape=record, label="  %12 = shl i32 %10, 2"];
	Node0xd38120[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xd38190[shape=record, label="  %14 = and i32 %5, %1"];
	Node0xd38200[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xd382a0[shape=record, label="  %16 = shl i32 %9, 1"];
	Node0xd38340[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0xd383b0[shape=record, label="  %18 = xor i32 %1, -1"];
	Node0xd38420[shape=record, label="  %19 = and i32 %18, %2"];
	Node0xd38490[shape=record, label="  %20 = and i32 %2, %1"];
	Node0xd38530[shape=record, label="  %21 = mul i32 %20, -6"];
	Node0xd385a0[shape=record, label="  %22 = xor i32 %3, %0"];
	Node0xd38610[shape=record, label="  %23 = or i32 %3, %0"];
	Node0xd38680[shape=record, label="  %24 = and i32 %3, %0"];
	Node0xd386f0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0xd38760[shape=record, label="  %26 = xor i32 %3, -1"];
	Node0xd387d0[shape=record, label="  %27 = shl i32 %23, 2"];
	Node0xd38870[shape=record, label="  %28 = xor i32 %27, -4"];
	Node0xd388e0[shape=record, label="  %29 = and i32 %26, %0"];
	Node0xd38980[shape=record, label="  %30 = mul i32 %7, -5"];
	Node0xd389f0[shape=record, label="  %31 = sub i32 %14, %29"];
	Node0xd38a90[shape=record, label="  %32 = mul i32 %31, 3"];
	Node0xd38d10[shape=record, label="  %33 = add i32 %3, %2"];
	Node0xd38d80[shape=record, label="  %34 = add i32 %33, %22"];
	Node0xd38df0[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0xd38e60[shape=record, label="  %36 = sub i32 %6, %0"];
	Node0xd38ed0[shape=record, label="  %37 = add i32 %36, %11"];
	Node0xd38f40[shape=record, label="  %38 = add i32 %37, %9"];
	Node0xd38fb0[shape=record, label="  %39 = add i32 %38, %15"];
	Node0xd39020[shape=record, label="  %40 = sub i32 %39, %19"];
	Node0xd39090[shape=record, label="  %41 = add i32 %40, %26"];
	Node0xd39100[shape=record, label="  %42 = add i32 %41, %13"];
	Node0xd39170[shape=record, label="  %43 = add i32 %42, %21"];
	Node0xd391e0[shape=record, label="  %44 = sub i32 %43, %23"];
	Node0xd39250[shape=record, label="  %45 = add i32 %44, %25"];
	Node0xd392c0[shape=record, label="  %46 = sub i32 %45, %24"];
	Node0xd39330[shape=record, label="  %47 = sub i32 %46, %17"];
	Node0xd393a0[shape=record, label="  %48 = add i32 %47, %30"];
	Node0xd39410[shape=record, label="  %49 = sub i32 %48, %28"];
	Node0xd39480[shape=record, label="  %50 = add i32 %49, %32"];
	Node0xd394f0[shape=record, label="  %51 = add i32 %50, %35"];
	Node0xd39560[shape=record, label="  %52 = icmp eq i32 %8, %51"];
	Node0xcd8268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xd39a00[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0xd39a50[shape=record, label="  ret void"];
	Node0xd37d70 -> Node0xd37de0;
	Node0xd37de0 -> Node0xd37e50;
	Node0xd37e50 -> Node0xd37ec0;
	Node0xd37ec0 -> Node0xd37f30;
	Node0xd37f30 -> Node0xd37fa0;
	Node0xd37fa0 -> Node0xd38010;
	Node0xd38010 -> Node0xd380b0;
	Node0xd380b0 -> Node0xd38120;
	Node0xd38120 -> Node0xd38190;
	Node0xd38190 -> Node0xd38200;
	Node0xd38200 -> Node0xd382a0;
	Node0xd382a0 -> Node0xd38340;
	Node0xd38340 -> Node0xd383b0;
	Node0xd383b0 -> Node0xd38420;
	Node0xd38420 -> Node0xd38490;
	Node0xd38490 -> Node0xd38530;
	Node0xd38530 -> Node0xd385a0;
	Node0xd385a0 -> Node0xd38610;
	Node0xd38610 -> Node0xd38680;
	Node0xd38680 -> Node0xd386f0;
	Node0xd386f0 -> Node0xd38760;
	Node0xd38760 -> Node0xd387d0;
	Node0xd387d0 -> Node0xd38870;
	Node0xd38870 -> Node0xd388e0;
	Node0xd388e0 -> Node0xd38980;
	Node0xd38980 -> Node0xd389f0;
	Node0xd389f0 -> Node0xd38a90;
	Node0xd38a90 -> Node0xd38d10;
	Node0xd38d10 -> Node0xd38d80;
	Node0xd38d80 -> Node0xd38df0;
	Node0xd38df0 -> Node0xd38e60;
	Node0xd38e60 -> Node0xd38ed0;
	Node0xd38ed0 -> Node0xd38f40;
	Node0xd38f40 -> Node0xd38fb0;
	Node0xd38fb0 -> Node0xd39020;
	Node0xd39020 -> Node0xd39090;
	Node0xd39090 -> Node0xd39100;
	Node0xd39100 -> Node0xd39170;
	Node0xd39170 -> Node0xd391e0;
	Node0xd391e0 -> Node0xd39250;
	Node0xd39250 -> Node0xd392c0;
	Node0xd392c0 -> Node0xd39330;
	Node0xd39330 -> Node0xd393a0;
	Node0xd393a0 -> Node0xd39410;
	Node0xd39410 -> Node0xd39480;
	Node0xd39480 -> Node0xd394f0;
	Node0xd394f0 -> Node0xd39560;
	Node0xd39560 -> Node0xcd8268;
	Node0xcd8268 -> Node0xd39a00;
	Node0xd39a00 -> Node0xd39a50;
edge [color=red]
	Node0xd37de0 -> Node0xd37e50;
	Node0xd37e50 -> Node0xd37ec0;
	Node0xd37fa0 -> Node0xd38010;
	Node0xd37fa0 -> Node0xd380b0;
	Node0xd380b0 -> Node0xd38120;
	Node0xd37d70 -> Node0xd38190;
	Node0xd38190 -> Node0xd38200;
	Node0xd37f30 -> Node0xd382a0;
	Node0xd382a0 -> Node0xd38340;
	Node0xd383b0 -> Node0xd38420;
	Node0xd38490 -> Node0xd38530;
	Node0xd38680 -> Node0xd386f0;
	Node0xd38610 -> Node0xd387d0;
	Node0xd387d0 -> Node0xd38870;
	Node0xd38760 -> Node0xd388e0;
	Node0xd37e50 -> Node0xd38980;
	Node0xd38190 -> Node0xd389f0;
	Node0xd388e0 -> Node0xd389f0;
	Node0xd389f0 -> Node0xd38a90;
	Node0xd38d10 -> Node0xd38d80;
	Node0xd385a0 -> Node0xd38d80;
	Node0xd38d80 -> Node0xd38df0;
	Node0xd37de0 -> Node0xd38e60;
	Node0xd38e60 -> Node0xd38ed0;
	Node0xd38010 -> Node0xd38ed0;
	Node0xd38ed0 -> Node0xd38f40;
	Node0xd37f30 -> Node0xd38f40;
	Node0xd38f40 -> Node0xd38fb0;
	Node0xd38200 -> Node0xd38fb0;
	Node0xd38fb0 -> Node0xd39020;
	Node0xd38420 -> Node0xd39020;
	Node0xd39020 -> Node0xd39090;
	Node0xd38760 -> Node0xd39090;
	Node0xd39090 -> Node0xd39100;
	Node0xd38120 -> Node0xd39100;
	Node0xd39100 -> Node0xd39170;
	Node0xd38530 -> Node0xd39170;
	Node0xd39170 -> Node0xd391e0;
	Node0xd38610 -> Node0xd391e0;
	Node0xd391e0 -> Node0xd39250;
	Node0xd386f0 -> Node0xd39250;
	Node0xd39250 -> Node0xd392c0;
	Node0xd38680 -> Node0xd392c0;
	Node0xd392c0 -> Node0xd39330;
	Node0xd38340 -> Node0xd39330;
	Node0xd39330 -> Node0xd393a0;
	Node0xd38980 -> Node0xd393a0;
	Node0xd393a0 -> Node0xd39410;
	Node0xd38870 -> Node0xd39410;
	Node0xd39410 -> Node0xd39480;
	Node0xd38a90 -> Node0xd39480;
	Node0xd39480 -> Node0xd394f0;
	Node0xd38df0 -> Node0xd394f0;
	Node0xd37ec0 -> Node0xd39560;
	Node0xd394f0 -> Node0xd39560;
	Node0xd39560 -> Node0xcd8268;
	Node0xcd8268 -> Node0xd39a00;
}
