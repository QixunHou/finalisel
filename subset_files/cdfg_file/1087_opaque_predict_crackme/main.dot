digraph "DFG for'main' function" {
	Node0xbc1ec8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xbc1f48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xbc1fd8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xbc2438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xbc2518[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xbc2638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xbc2870[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xbc2928[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xbc3898[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xbc3f20[shape=record, label="  %8 = shl i32 %6, 1"];
	Node0xbc3f90[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0xbc4000[shape=record, label="  %10 = and i32 %6, %9"];
	Node0xbc4070[shape=record, label="  %11 = xor i32 %6, %9"];
	Node0xbc40e0[shape=record, label="  %12 = or i32 %7, %6"];
	Node0xbc4150[shape=record, label="  %13 = or i32 %6, %9"];
	Node0xbc41c0[shape=record, label="  %14 = and i32 %7, %6"];
	Node0xbc4230[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xbc42a0[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0xbc4310[shape=record, label="  %17 = shl i32 %13, 2"];
	Node0xbc4380[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0xbc43f0[shape=record, label="  %19 = shl i32 %10, 1"];
	Node0xbc4460[shape=record, label="  %20 = mul i32 %14, 11"];
	Node0xbc44d0[shape=record, label="  %21 = sub i32 %16, %11"];
	Node0xbc4540[shape=record, label="  %22 = mul i32 %21, 5"];
	Node0xbc45b0[shape=record, label="  %23 = sub i32 3, %7"];
	Node0xbc4620[shape=record, label="  %24 = add i32 %23, %9"];
	Node0xbc4690[shape=record, label="  %25 = add i32 %24, %10"];
	Node0xbc4700[shape=record, label="  %26 = sub i32 %25, %12"];
	Node0xbc4770[shape=record, label="  %27 = add i32 %26, %13"];
	Node0xbc47e0[shape=record, label="  %28 = add i32 %27, %15"];
	Node0xbc4850[shape=record, label="  %29 = add i32 %28, %19"];
	Node0xbc48c0[shape=record, label="  %30 = add i32 %29, %20"];
	Node0xbc4930[shape=record, label="  %31 = add i32 %30, %18"];
	Node0xbc49a0[shape=record, label="  %32 = add i32 %31, %22"];
	Node0xbc4c20[shape=record, label="  %33 = icmp eq i32 %8, %32"];
	Node0xb629d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xbc4cb0[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xbc4f08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xbc5068[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xbc5128[shape=record, label="  ret i32 0"];
	Node0xbc1ec8 -> Node0xbc1f48;
	Node0xbc1f48 -> Node0xbc1fd8;
	Node0xbc1fd8 -> Node0xbc2438;
	Node0xbc2438 -> Node0xbc2518;
	Node0xbc2518 -> Node0xbc2638;
	Node0xbc2638 -> Node0xbc2870;
	Node0xbc2870 -> Node0xbc2928;
	Node0xbc2928 -> Node0xbc3898;
	Node0xbc3898 -> Node0xbc3f20;
	Node0xbc3f20 -> Node0xbc3f90;
	Node0xbc3f90 -> Node0xbc4000;
	Node0xbc4000 -> Node0xbc4070;
	Node0xbc4070 -> Node0xbc40e0;
	Node0xbc40e0 -> Node0xbc4150;
	Node0xbc4150 -> Node0xbc41c0;
	Node0xbc41c0 -> Node0xbc4230;
	Node0xbc4230 -> Node0xbc42a0;
	Node0xbc42a0 -> Node0xbc4310;
	Node0xbc4310 -> Node0xbc4380;
	Node0xbc4380 -> Node0xbc43f0;
	Node0xbc43f0 -> Node0xbc4460;
	Node0xbc4460 -> Node0xbc44d0;
	Node0xbc44d0 -> Node0xbc4540;
	Node0xbc4540 -> Node0xbc45b0;
	Node0xbc45b0 -> Node0xbc4620;
	Node0xbc4620 -> Node0xbc4690;
	Node0xbc4690 -> Node0xbc4700;
	Node0xbc4700 -> Node0xbc4770;
	Node0xbc4770 -> Node0xbc47e0;
	Node0xbc47e0 -> Node0xbc4850;
	Node0xbc4850 -> Node0xbc48c0;
	Node0xbc48c0 -> Node0xbc4930;
	Node0xbc4930 -> Node0xbc49a0;
	Node0xbc49a0 -> Node0xbc4c20;
	Node0xbc4c20 -> Node0xb629d8;
	Node0xb629d8 -> Node0xbc4cb0;
	Node0xbc4cb0 -> Node0xbc4f08;
	Node0xbc4f08 -> Node0xbc5068;
	Node0xbc5068 -> Node0xbc5128;
edge [color=red]
	Node0xbc1ec8 -> Node0xbc1fd8;
	Node0xbc1fd8 -> Node0xbc2438;
	Node0xbc1f48 -> Node0xbc2518;
	Node0xbc2518 -> Node0xbc2638;
	Node0xbc1ec8 -> Node0xbc2870;
	Node0xbc1f48 -> Node0xbc2870;
	Node0xbc1ec8 -> Node0xbc2928;
	Node0xbc1f48 -> Node0xbc3898;
	Node0xbc2928 -> Node0xbc3f20;
	Node0xbc3898 -> Node0xbc3f90;
	Node0xbc2928 -> Node0xbc4000;
	Node0xbc3f90 -> Node0xbc4000;
	Node0xbc2928 -> Node0xbc4070;
	Node0xbc3f90 -> Node0xbc4070;
	Node0xbc3898 -> Node0xbc40e0;
	Node0xbc2928 -> Node0xbc40e0;
	Node0xbc2928 -> Node0xbc4150;
	Node0xbc3f90 -> Node0xbc4150;
	Node0xbc3898 -> Node0xbc41c0;
	Node0xbc2928 -> Node0xbc41c0;
	Node0xbc41c0 -> Node0xbc4230;
	Node0xbc40e0 -> Node0xbc42a0;
	Node0xbc4150 -> Node0xbc4310;
	Node0xbc4310 -> Node0xbc4380;
	Node0xbc4000 -> Node0xbc43f0;
	Node0xbc41c0 -> Node0xbc4460;
	Node0xbc42a0 -> Node0xbc44d0;
	Node0xbc4070 -> Node0xbc44d0;
	Node0xbc44d0 -> Node0xbc4540;
	Node0xbc3898 -> Node0xbc45b0;
	Node0xbc45b0 -> Node0xbc4620;
	Node0xbc3f90 -> Node0xbc4620;
	Node0xbc4620 -> Node0xbc4690;
	Node0xbc4000 -> Node0xbc4690;
	Node0xbc4690 -> Node0xbc4700;
	Node0xbc40e0 -> Node0xbc4700;
	Node0xbc4700 -> Node0xbc4770;
	Node0xbc4150 -> Node0xbc4770;
	Node0xbc4770 -> Node0xbc47e0;
	Node0xbc4230 -> Node0xbc47e0;
	Node0xbc47e0 -> Node0xbc4850;
	Node0xbc43f0 -> Node0xbc4850;
	Node0xbc4850 -> Node0xbc48c0;
	Node0xbc4460 -> Node0xbc48c0;
	Node0xbc48c0 -> Node0xbc4930;
	Node0xbc4380 -> Node0xbc4930;
	Node0xbc4930 -> Node0xbc49a0;
	Node0xbc4540 -> Node0xbc49a0;
	Node0xbc3f20 -> Node0xbc4c20;
	Node0xbc49a0 -> Node0xbc4c20;
	Node0xbc4c20 -> Node0xb629d8;
	Node0xb629d8 -> Node0xbc4cb0;
	Node0xbc2518 -> Node0xbc4f08;
	Node0xbc1fd8 -> Node0xbc5068;
}
