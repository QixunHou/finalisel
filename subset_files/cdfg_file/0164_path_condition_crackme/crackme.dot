digraph "DFG for'crackme' function" {
	Node0xb87710[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0xb87d90[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0xb87e00[shape=record, label="  %7 = sub i32 %6, %3"];
	Node0xb87ea0[shape=record, label="  %8 = xor i32 %2, -1"];
	Node0xb87f10[shape=record, label="  %9 = and i32 %8, %1"];
	Node0xb87f80[shape=record, label="  %10 = add i32 %2, 1"];
	Node0xb87ff0[shape=record, label="  %11 = or i32 %2, %1"];
	Node0xb88060[shape=record, label="  %12 = or i32 %8, %1"];
	Node0xb880d0[shape=record, label="  %13 = shl i32 %11, 1"];
	Node0xb88170[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0xb881e0[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0xb88280[shape=record, label="  %16 = mul i32 %15, 3"];
	Node0xb882f0[shape=record, label="  %17 = shl i32 %9, 1"];
	Node0xb88360[shape=record, label="  %18 = xor i32 %3, %0"];
	Node0xb883d0[shape=record, label="  %19 = xor i32 %0, -1"];
	Node0xb88440[shape=record, label="  %20 = or i32 %19, %3"];
	Node0xb884b0[shape=record, label="  %21 = or i32 %3, %0"];
	Node0xb88550[shape=record, label="  %22 = shl i32 %21, 2"];
	Node0xb885c0[shape=record, label="  %23 = shl i32 %21, 1"];
	Node0xb88630[shape=record, label="  %24 = or i32 %23, 1"];
	Node0xb886a0[shape=record, label="  %25 = xor i32 %20, -1"];
	Node0xb88740[shape=record, label="  %26 = mul i32 %25, -5"];
	Node0xb887b0[shape=record, label="  %27 = and i32 %19, %3"];
	Node0xb88820[shape=record, label="  %28 = shl i32 %27, 3"];
	Node0xb88890[shape=record, label="  %29 = and i32 %3, %0"];
	Node0xb88930[shape=record, label="  %30 = mul i32 %29, -6"];
	Node0xb889a0[shape=record, label="  %31 = sub i32 2, %0"];
	Node0xb88a10[shape=record, label="  %32 = add i32 %31, %1"];
	Node0xb88c90[shape=record, label="  %33 = add i32 %32, %10"];
	Node0xb88d00[shape=record, label="  %34 = add i32 %33, %2"];
	Node0xb88d70[shape=record, label="  %35 = add i32 %34, %9"];
	Node0xb88de0[shape=record, label="  %36 = sub i32 %35, %11"];
	Node0xb88e50[shape=record, label="  %37 = add i32 %36, %5"];
	Node0xb88ec0[shape=record, label="  %38 = add i32 %37, %12"];
	Node0xb88f30[shape=record, label="  %39 = add i32 %38, %16"];
	Node0xb88fa0[shape=record, label="  %40 = add i32 %39, %17"];
	Node0xb89010[shape=record, label="  %41 = add i32 %40, %18"];
	Node0xb89080[shape=record, label="  %42 = add i32 %41, %20"];
	Node0xb890f0[shape=record, label="  %43 = add i32 %42, %14"];
	Node0xb89160[shape=record, label="  %44 = add i32 %43, %22"];
	Node0xb891d0[shape=record, label="  %45 = add i32 %44, %26"];
	Node0xb89240[shape=record, label="  %46 = sub i32 %45, %28"];
	Node0xb892b0[shape=record, label="  %47 = add i32 %46, %30"];
	Node0xb89320[shape=record, label="  %48 = add i32 %47, %24"];
	Node0xb89390[shape=record, label="  %49 = icmp eq i32 %7, %48"];
	Node0xb28268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb89830[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0xb89880[shape=record, label="  ret void"];
	Node0xb87710 -> Node0xb87d90;
	Node0xb87d90 -> Node0xb87e00;
	Node0xb87e00 -> Node0xb87ea0;
	Node0xb87ea0 -> Node0xb87f10;
	Node0xb87f10 -> Node0xb87f80;
	Node0xb87f80 -> Node0xb87ff0;
	Node0xb87ff0 -> Node0xb88060;
	Node0xb88060 -> Node0xb880d0;
	Node0xb880d0 -> Node0xb88170;
	Node0xb88170 -> Node0xb881e0;
	Node0xb881e0 -> Node0xb88280;
	Node0xb88280 -> Node0xb882f0;
	Node0xb882f0 -> Node0xb88360;
	Node0xb88360 -> Node0xb883d0;
	Node0xb883d0 -> Node0xb88440;
	Node0xb88440 -> Node0xb884b0;
	Node0xb884b0 -> Node0xb88550;
	Node0xb88550 -> Node0xb885c0;
	Node0xb885c0 -> Node0xb88630;
	Node0xb88630 -> Node0xb886a0;
	Node0xb886a0 -> Node0xb88740;
	Node0xb88740 -> Node0xb887b0;
	Node0xb887b0 -> Node0xb88820;
	Node0xb88820 -> Node0xb88890;
	Node0xb88890 -> Node0xb88930;
	Node0xb88930 -> Node0xb889a0;
	Node0xb889a0 -> Node0xb88a10;
	Node0xb88a10 -> Node0xb88c90;
	Node0xb88c90 -> Node0xb88d00;
	Node0xb88d00 -> Node0xb88d70;
	Node0xb88d70 -> Node0xb88de0;
	Node0xb88de0 -> Node0xb88e50;
	Node0xb88e50 -> Node0xb88ec0;
	Node0xb88ec0 -> Node0xb88f30;
	Node0xb88f30 -> Node0xb88fa0;
	Node0xb88fa0 -> Node0xb89010;
	Node0xb89010 -> Node0xb89080;
	Node0xb89080 -> Node0xb890f0;
	Node0xb890f0 -> Node0xb89160;
	Node0xb89160 -> Node0xb891d0;
	Node0xb891d0 -> Node0xb89240;
	Node0xb89240 -> Node0xb892b0;
	Node0xb892b0 -> Node0xb89320;
	Node0xb89320 -> Node0xb89390;
	Node0xb89390 -> Node0xb28268;
	Node0xb28268 -> Node0xb89830;
	Node0xb89830 -> Node0xb89880;
edge [color=red]
	Node0xb87710 -> Node0xb87d90;
	Node0xb87d90 -> Node0xb87e00;
	Node0xb87ea0 -> Node0xb87f10;
	Node0xb87ea0 -> Node0xb88060;
	Node0xb87ff0 -> Node0xb880d0;
	Node0xb880d0 -> Node0xb88170;
	Node0xb88060 -> Node0xb881e0;
	Node0xb881e0 -> Node0xb88280;
	Node0xb87f10 -> Node0xb882f0;
	Node0xb883d0 -> Node0xb88440;
	Node0xb884b0 -> Node0xb88550;
	Node0xb884b0 -> Node0xb885c0;
	Node0xb885c0 -> Node0xb88630;
	Node0xb88440 -> Node0xb886a0;
	Node0xb886a0 -> Node0xb88740;
	Node0xb883d0 -> Node0xb887b0;
	Node0xb887b0 -> Node0xb88820;
	Node0xb88890 -> Node0xb88930;
	Node0xb889a0 -> Node0xb88a10;
	Node0xb88a10 -> Node0xb88c90;
	Node0xb87f80 -> Node0xb88c90;
	Node0xb88c90 -> Node0xb88d00;
	Node0xb88d00 -> Node0xb88d70;
	Node0xb87f10 -> Node0xb88d70;
	Node0xb88d70 -> Node0xb88de0;
	Node0xb87ff0 -> Node0xb88de0;
	Node0xb88de0 -> Node0xb88e50;
	Node0xb87710 -> Node0xb88e50;
	Node0xb88e50 -> Node0xb88ec0;
	Node0xb88060 -> Node0xb88ec0;
	Node0xb88ec0 -> Node0xb88f30;
	Node0xb88280 -> Node0xb88f30;
	Node0xb88f30 -> Node0xb88fa0;
	Node0xb882f0 -> Node0xb88fa0;
	Node0xb88fa0 -> Node0xb89010;
	Node0xb88360 -> Node0xb89010;
	Node0xb89010 -> Node0xb89080;
	Node0xb88440 -> Node0xb89080;
	Node0xb89080 -> Node0xb890f0;
	Node0xb88170 -> Node0xb890f0;
	Node0xb890f0 -> Node0xb89160;
	Node0xb88550 -> Node0xb89160;
	Node0xb89160 -> Node0xb891d0;
	Node0xb88740 -> Node0xb891d0;
	Node0xb891d0 -> Node0xb89240;
	Node0xb88820 -> Node0xb89240;
	Node0xb89240 -> Node0xb892b0;
	Node0xb88930 -> Node0xb892b0;
	Node0xb892b0 -> Node0xb89320;
	Node0xb88630 -> Node0xb89320;
	Node0xb87e00 -> Node0xb89390;
	Node0xb89320 -> Node0xb89390;
	Node0xb89390 -> Node0xb28268;
	Node0xb28268 -> Node0xb89830;
}
