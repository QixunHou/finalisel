digraph "DFG for'main' function" {
	Node0xb89a48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb89ac8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb89b58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb89bb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xb89c68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xb8a098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb8a178[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xb8a278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb8a338[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xb8a3e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb8a4a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xb8a558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb84740[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xb8a758[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb8b6c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb8bd38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb8bd98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xb8bea8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xb8c108[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb8c268[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb8c378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb8c488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb8c548[shape=record, label="  ret i32 0"];
	Node0xb89a48 -> Node0xb89ac8;
	Node0xb89ac8 -> Node0xb89b58;
	Node0xb89b58 -> Node0xb89bb8;
	Node0xb89bb8 -> Node0xb89c68;
	Node0xb89c68 -> Node0xb8a098;
	Node0xb8a098 -> Node0xb8a178;
	Node0xb8a178 -> Node0xb8a278;
	Node0xb8a278 -> Node0xb8a338;
	Node0xb8a338 -> Node0xb8a3e8;
	Node0xb8a3e8 -> Node0xb8a4a8;
	Node0xb8a4a8 -> Node0xb8a558;
	Node0xb8a558 -> Node0xb84740;
	Node0xb84740 -> Node0xb8a758;
	Node0xb8a758 -> Node0xb8b6c8;
	Node0xb8b6c8 -> Node0xb8bd38;
	Node0xb8bd38 -> Node0xb8bd98;
	Node0xb8bd98 -> Node0xb8bea8;
	Node0xb8bea8 -> Node0xb8c108;
	Node0xb8c108 -> Node0xb8c268;
	Node0xb8c268 -> Node0xb8c378;
	Node0xb8c378 -> Node0xb8c488;
	Node0xb8c488 -> Node0xb8c548;
edge [color=red]
	Node0xb89a48 -> Node0xb89c68;
	Node0xb89c68 -> Node0xb8a098;
	Node0xb89ac8 -> Node0xb8a178;
	Node0xb8a178 -> Node0xb8a278;
	Node0xb89b58 -> Node0xb8a338;
	Node0xb8a338 -> Node0xb8a3e8;
	Node0xb89bb8 -> Node0xb8a4a8;
	Node0xb8a4a8 -> Node0xb8a558;
	Node0xb89a48 -> Node0xb84740;
	Node0xb89ac8 -> Node0xb84740;
	Node0xb89b58 -> Node0xb84740;
	Node0xb89bb8 -> Node0xb84740;
	Node0xb89a48 -> Node0xb8a758;
	Node0xb89ac8 -> Node0xb8b6c8;
	Node0xb89b58 -> Node0xb8bd38;
	Node0xb89bb8 -> Node0xb8bd98;
	Node0xb8a758 -> Node0xb8bea8;
	Node0xb8b6c8 -> Node0xb8bea8;
	Node0xb8bd38 -> Node0xb8bea8;
	Node0xb8bd98 -> Node0xb8bea8;
	Node0xb8a4a8 -> Node0xb8c108;
	Node0xb8a338 -> Node0xb8c268;
	Node0xb8a178 -> Node0xb8c378;
	Node0xb89c68 -> Node0xb8c488;
}
