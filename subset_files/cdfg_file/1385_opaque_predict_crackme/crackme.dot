digraph "DFG for'crackme' function" {
	Node0x18934e0[shape=record, label="  %3 = and i32 %1, %0"];
	Node0x1893b90[shape=record, label="  %4 = add i32 %3, 1"];
	Node0x1893c50[shape=record, label="  %5 = xor i32 %1, %0"];
	Node0x1893cc0[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0x1893d30[shape=record, label="  %7 = or i32 %1, %0"];
	Node0x1893da0[shape=record, label="  %8 = or i32 %6, %0"];
	Node0x1893e10[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x1893eb0[shape=record, label="  %10 = mul i32 %9, 3"];
	Node0x1893f20[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x1893f90[shape=record, label="  %12 = shl i32 %8, 1"];
	Node0x1894030[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x18940a0[shape=record, label="  %14 = and i32 %6, %0"];
	Node0x1894110[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1894180[shape=record, label="  %16 = sub i32 %0, %1"];
	Node0x18941f0[shape=record, label="  %17 = sub i32 %16, %1"];
	Node0x1894260[shape=record, label="  %18 = sub i32 %17, %5"];
	Node0x18942d0[shape=record, label="  %19 = sub i32 %18, %7"];
	Node0x1894340[shape=record, label="  %20 = add i32 %19, %8"];
	Node0x18943b0[shape=record, label="  %21 = add i32 %20, %11"];
	Node0x1894420[shape=record, label="  %22 = sub i32 %21, %15"];
	Node0x1894490[shape=record, label="  %23 = add i32 %22, %13"];
	Node0x1894500[shape=record, label="  %24 = icmp eq i32 %4, %23"];
	Node0x1834268[shape=record, label="  %25 = select i1 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18949a0[shape=record, label="  %26 = tail call i32 @puts(i8* nonnull dereferenceable(1) %25)"];
	Node0x18949f0[shape=record, label="  ret void"];
	Node0x18934e0 -> Node0x1893b90;
	Node0x1893b90 -> Node0x1893c50;
	Node0x1893c50 -> Node0x1893cc0;
	Node0x1893cc0 -> Node0x1893d30;
	Node0x1893d30 -> Node0x1893da0;
	Node0x1893da0 -> Node0x1893e10;
	Node0x1893e10 -> Node0x1893eb0;
	Node0x1893eb0 -> Node0x1893f20;
	Node0x1893f20 -> Node0x1893f90;
	Node0x1893f90 -> Node0x1894030;
	Node0x1894030 -> Node0x18940a0;
	Node0x18940a0 -> Node0x1894110;
	Node0x1894110 -> Node0x1894180;
	Node0x1894180 -> Node0x18941f0;
	Node0x18941f0 -> Node0x1894260;
	Node0x1894260 -> Node0x18942d0;
	Node0x18942d0 -> Node0x1894340;
	Node0x1894340 -> Node0x18943b0;
	Node0x18943b0 -> Node0x1894420;
	Node0x1894420 -> Node0x1894490;
	Node0x1894490 -> Node0x1894500;
	Node0x1894500 -> Node0x1834268;
	Node0x1834268 -> Node0x18949a0;
	Node0x18949a0 -> Node0x18949f0;
edge [color=red]
	Node0x18934e0 -> Node0x1893b90;
	Node0x1893cc0 -> Node0x1893da0;
	Node0x1893d30 -> Node0x1893e10;
	Node0x1893e10 -> Node0x1893eb0;
	Node0x1893eb0 -> Node0x1893f20;
	Node0x1893da0 -> Node0x1893f90;
	Node0x1893f90 -> Node0x1894030;
	Node0x1893cc0 -> Node0x18940a0;
	Node0x18940a0 -> Node0x1894110;
	Node0x1894180 -> Node0x18941f0;
	Node0x18941f0 -> Node0x1894260;
	Node0x1893c50 -> Node0x1894260;
	Node0x1894260 -> Node0x18942d0;
	Node0x1893d30 -> Node0x18942d0;
	Node0x18942d0 -> Node0x1894340;
	Node0x1893da0 -> Node0x1894340;
	Node0x1894340 -> Node0x18943b0;
	Node0x1893f20 -> Node0x18943b0;
	Node0x18943b0 -> Node0x1894420;
	Node0x1894110 -> Node0x1894420;
	Node0x1894420 -> Node0x1894490;
	Node0x1894030 -> Node0x1894490;
	Node0x1893b90 -> Node0x1894500;
	Node0x1894490 -> Node0x1894500;
	Node0x1894500 -> Node0x1834268;
	Node0x1834268 -> Node0x18949a0;
}
