digraph "DFG for'crackme' function" {
	Node0xdbed90[shape=record, label="  %5 = shl i32 %1, 1"];
	Node0xdbee00[shape=record, label="  %6 = sub i32 %5, %0"];
	Node0xdbeea0[shape=record, label="  %7 = xor i32 %2, -1"];
	Node0xdbef10[shape=record, label="  %8 = and i32 %7, %1"];
	Node0xdbef80[shape=record, label="  %9 = xor i32 %7, %1"];
	Node0xdbeff0[shape=record, label="  %10 = or i32 %2, %1"];
	Node0xdbf060[shape=record, label="  %11 = or i32 %7, %1"];
	Node0xdbf0d0[shape=record, label="  %12 = and i32 %2, %1"];
	Node0xdbf140[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xdbf1b0[shape=record, label="  %14 = xor i32 %10, -1"];
	Node0xdbf250[shape=record, label="  %15 = shl i32 %11, 2"];
	Node0xdbf2f0[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0xdbf390[shape=record, label="  %17 = mul i32 %12, 11"];
	Node0xdbf400[shape=record, label="  %18 = and i32 %3, %0"];
	Node0xdbf470[shape=record, label="  %19 = xor i32 %0, -1"];
	Node0xdbf4e0[shape=record, label="  %20 = and i32 %19, %3"];
	Node0xdbf550[shape=record, label="  %21 = xor i32 %3, %0"];
	Node0xdbf5c0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0xdbf630[shape=record, label="  %23 = shl i32 %19, 1"];
	Node0xdbf6a0[shape=record, label="  %24 = shl i32 %3, 1"];
	Node0xdbf740[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0xdbf7b0[shape=record, label="  %26 = or i32 %3, %0"];
	Node0xdbf820[shape=record, label="  %27 = shl i32 %26, 2"];
	Node0xdbf890[shape=record, label="  %28 = xor i32 %27, -4"];
	Node0xdbf900[shape=record, label="  %29 = xor i32 %3, -1"];
	Node0xdbf970[shape=record, label="  %30 = and i32 %29, %0"];
	Node0xdbfa10[shape=record, label="  %31 = mul i32 %30, 3"];
	Node0xdbfa80[shape=record, label="  %32 = add i32 %20, %8"];
	Node0xdbfd00[shape=record, label="  %33 = sub i32 %14, %9"];
	Node0xdbfda0[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0xdbfe10[shape=record, label="  %35 = sub i32 %32, %18"];
	Node0xdbfe80[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0xdbfef0[shape=record, label="  %37 = sub i32 3, %23"];
	Node0xdbff60[shape=record, label="  %38 = sub i32 %37, %2"];
	Node0xdbffd0[shape=record, label="  %39 = add i32 %38, %7"];
	Node0xdc0040[shape=record, label="  %40 = add i32 %39, %8"];
	Node0xdc00b0[shape=record, label="  %41 = sub i32 %40, %10"];
	Node0xdc0120[shape=record, label="  %42 = add i32 %41, %11"];
	Node0xdc0190[shape=record, label="  %43 = add i32 %42, %13"];
	Node0xdc0200[shape=record, label="  %44 = add i32 %43, %3"];
	Node0xdc0270[shape=record, label="  %45 = add i32 %44, %17"];
	Node0xdc02e0[shape=record, label="  %46 = add i32 %45, %20"];
	Node0xdc0350[shape=record, label="  %47 = add i32 %46, %16"];
	Node0xdc03c0[shape=record, label="  %48 = sub i32 %47, %22"];
	Node0xdc0430[shape=record, label="  %49 = sub i32 %48, %25"];
	Node0xdc04a0[shape=record, label="  %50 = add i32 %49, %31"];
	Node0xdc0510[shape=record, label="  %51 = add i32 %50, %34"];
	Node0xdc0580[shape=record, label="  %52 = add i32 %51, %28"];
	Node0xdc05f0[shape=record, label="  %53 = add i32 %52, %36"];
	Node0xdc0660[shape=record, label="  %54 = icmp eq i32 %6, %53"];
	Node0xd5f268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xdc0b00[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0xdc0b50[shape=record, label="  ret void"];
	Node0xdbed90 -> Node0xdbee00;
	Node0xdbee00 -> Node0xdbeea0;
	Node0xdbeea0 -> Node0xdbef10;
	Node0xdbef10 -> Node0xdbef80;
	Node0xdbef80 -> Node0xdbeff0;
	Node0xdbeff0 -> Node0xdbf060;
	Node0xdbf060 -> Node0xdbf0d0;
	Node0xdbf0d0 -> Node0xdbf140;
	Node0xdbf140 -> Node0xdbf1b0;
	Node0xdbf1b0 -> Node0xdbf250;
	Node0xdbf250 -> Node0xdbf2f0;
	Node0xdbf2f0 -> Node0xdbf390;
	Node0xdbf390 -> Node0xdbf400;
	Node0xdbf400 -> Node0xdbf470;
	Node0xdbf470 -> Node0xdbf4e0;
	Node0xdbf4e0 -> Node0xdbf550;
	Node0xdbf550 -> Node0xdbf5c0;
	Node0xdbf5c0 -> Node0xdbf630;
	Node0xdbf630 -> Node0xdbf6a0;
	Node0xdbf6a0 -> Node0xdbf740;
	Node0xdbf740 -> Node0xdbf7b0;
	Node0xdbf7b0 -> Node0xdbf820;
	Node0xdbf820 -> Node0xdbf890;
	Node0xdbf890 -> Node0xdbf900;
	Node0xdbf900 -> Node0xdbf970;
	Node0xdbf970 -> Node0xdbfa10;
	Node0xdbfa10 -> Node0xdbfa80;
	Node0xdbfa80 -> Node0xdbfd00;
	Node0xdbfd00 -> Node0xdbfda0;
	Node0xdbfda0 -> Node0xdbfe10;
	Node0xdbfe10 -> Node0xdbfe80;
	Node0xdbfe80 -> Node0xdbfef0;
	Node0xdbfef0 -> Node0xdbff60;
	Node0xdbff60 -> Node0xdbffd0;
	Node0xdbffd0 -> Node0xdc0040;
	Node0xdc0040 -> Node0xdc00b0;
	Node0xdc00b0 -> Node0xdc0120;
	Node0xdc0120 -> Node0xdc0190;
	Node0xdc0190 -> Node0xdc0200;
	Node0xdc0200 -> Node0xdc0270;
	Node0xdc0270 -> Node0xdc02e0;
	Node0xdc02e0 -> Node0xdc0350;
	Node0xdc0350 -> Node0xdc03c0;
	Node0xdc03c0 -> Node0xdc0430;
	Node0xdc0430 -> Node0xdc04a0;
	Node0xdc04a0 -> Node0xdc0510;
	Node0xdc0510 -> Node0xdc0580;
	Node0xdc0580 -> Node0xdc05f0;
	Node0xdc05f0 -> Node0xdc0660;
	Node0xdc0660 -> Node0xd5f268;
	Node0xd5f268 -> Node0xdc0b00;
	Node0xdc0b00 -> Node0xdc0b50;
edge [color=red]
	Node0xdbed90 -> Node0xdbee00;
	Node0xdbeea0 -> Node0xdbef10;
	Node0xdbeea0 -> Node0xdbef80;
	Node0xdbeea0 -> Node0xdbf060;
	Node0xdbf0d0 -> Node0xdbf140;
	Node0xdbeff0 -> Node0xdbf1b0;
	Node0xdbf060 -> Node0xdbf250;
	Node0xdbf250 -> Node0xdbf2f0;
	Node0xdbf0d0 -> Node0xdbf390;
	Node0xdbf470 -> Node0xdbf4e0;
	Node0xdbf550 -> Node0xdbf5c0;
	Node0xdbf470 -> Node0xdbf630;
	Node0xdbf6a0 -> Node0xdbf740;
	Node0xdbf7b0 -> Node0xdbf820;
	Node0xdbf820 -> Node0xdbf890;
	Node0xdbf900 -> Node0xdbf970;
	Node0xdbf970 -> Node0xdbfa10;
	Node0xdbf4e0 -> Node0xdbfa80;
	Node0xdbef10 -> Node0xdbfa80;
	Node0xdbf1b0 -> Node0xdbfd00;
	Node0xdbef80 -> Node0xdbfd00;
	Node0xdbfd00 -> Node0xdbfda0;
	Node0xdbfa80 -> Node0xdbfe10;
	Node0xdbf400 -> Node0xdbfe10;
	Node0xdbfe10 -> Node0xdbfe80;
	Node0xdbf630 -> Node0xdbfef0;
	Node0xdbfef0 -> Node0xdbff60;
	Node0xdbff60 -> Node0xdbffd0;
	Node0xdbeea0 -> Node0xdbffd0;
	Node0xdbffd0 -> Node0xdc0040;
	Node0xdbef10 -> Node0xdc0040;
	Node0xdc0040 -> Node0xdc00b0;
	Node0xdbeff0 -> Node0xdc00b0;
	Node0xdc00b0 -> Node0xdc0120;
	Node0xdbf060 -> Node0xdc0120;
	Node0xdc0120 -> Node0xdc0190;
	Node0xdbf140 -> Node0xdc0190;
	Node0xdc0190 -> Node0xdc0200;
	Node0xdc0200 -> Node0xdc0270;
	Node0xdbf390 -> Node0xdc0270;
	Node0xdc0270 -> Node0xdc02e0;
	Node0xdbf4e0 -> Node0xdc02e0;
	Node0xdc02e0 -> Node0xdc0350;
	Node0xdbf2f0 -> Node0xdc0350;
	Node0xdc0350 -> Node0xdc03c0;
	Node0xdbf5c0 -> Node0xdc03c0;
	Node0xdc03c0 -> Node0xdc0430;
	Node0xdbf740 -> Node0xdc0430;
	Node0xdc0430 -> Node0xdc04a0;
	Node0xdbfa10 -> Node0xdc04a0;
	Node0xdc04a0 -> Node0xdc0510;
	Node0xdbfda0 -> Node0xdc0510;
	Node0xdc0510 -> Node0xdc0580;
	Node0xdbf890 -> Node0xdc0580;
	Node0xdc0580 -> Node0xdc05f0;
	Node0xdbfe80 -> Node0xdc05f0;
	Node0xdbee00 -> Node0xdc0660;
	Node0xdc05f0 -> Node0xdc0660;
	Node0xdc0660 -> Node0xd5f268;
	Node0xd5f268 -> Node0xdc0b00;
}
