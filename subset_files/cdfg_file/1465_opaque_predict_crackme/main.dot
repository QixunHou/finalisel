digraph "DFG for'main' function" {
	Node0x1e21b88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e21c08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e21c98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1e21cf8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1e21da8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1e221d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e222b8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1e223b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e22478[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1e22528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1e225e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1e22698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1e1cb20[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1e22898[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e23808[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e23e78[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1e23ed8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1e23f50[shape=record, label="  %14 = xor i32 %13, %10"];
	Node0x1e23fc0[shape=record, label="  %15 = sub i32 %11, %14"];
	Node0x1e24030[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x1e240a0[shape=record, label="  %17 = or i32 %11, %16"];
	Node0x1e24110[shape=record, label="  %18 = and i32 %11, %16"];
	Node0x1e24180[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x1e241f0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x1e24260[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x1e242d0[shape=record, label="  %22 = xor i32 %17, -1"];
	Node0x1e24340[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x1e243b0[shape=record, label="  %24 = shl i32 %23, 3"];
	Node0x1e24420[shape=record, label="  %25 = xor i32 %13, -1"];
	Node0x1e24490[shape=record, label="  %26 = or i32 %13, %10"];
	Node0x1e24500[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x1e24570[shape=record, label="  %28 = xor i32 %10, 2147483647"];
	Node0x1e245e0[shape=record, label="  %29 = or i32 %13, %28"];
	Node0x1e24650[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x1e246c0[shape=record, label="  %31 = or i32 %10, %25"];
	Node0x1e24730[shape=record, label="  %32 = xor i32 %27, -2"];
	Node0x1e247a0[shape=record, label="  %33 = shl i32 %29, 1"];
	Node0x1e24810[shape=record, label="  %34 = add i32 %18, %22"];
	Node0x1e24880[shape=record, label="  %35 = mul i32 %34, 5"];
	Node0x1e248f0[shape=record, label="  %36 = sub i32 8, %11"];
	Node0x1e24960[shape=record, label="  %37 = sub i32 %36, %12"];
	Node0x1e249d0[shape=record, label="  %38 = add i32 %37, %16"];
	Node0x1e24a40[shape=record, label="  %39 = sub i32 %38, %17"];
	Node0x1e24ab0[shape=record, label="  %40 = add i32 %39, %18"];
	Node0x1e24b20[shape=record, label="  %41 = add i32 %40, %25"];
	Node0x1e24b90[shape=record, label="  %42 = sub i32 %41, %20"];
	Node0x1e24c00[shape=record, label="  %43 = add i32 %42, %24"];
	Node0x1e24c70[shape=record, label="  %44 = add i32 %43, %14"];
	Node0x1e24ce0[shape=record, label="  %45 = add i32 %44, %30"];
	Node0x1e24d50[shape=record, label="  %46 = add i32 %45, %31"];
	Node0x1e24dc0[shape=record, label="  %47 = add i32 %46, %21"];
	Node0x1e24e30[shape=record, label="  %48 = add i32 %47, %27"];
	Node0x1e24ea0[shape=record, label="  %49 = add i32 %48, %33"];
	Node0x1e24f10[shape=record, label="  %50 = add i32 %49, %35"];
	Node0x1e24f80[shape=record, label="  %51 = add i32 %50, %32"];
	Node0x1e24ff0[shape=record, label="  %52 = icmp eq i32 %15, %51"];
	Node0x1dc18b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e25080[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x1e25328[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1e25488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1e25598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e256a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e25768[shape=record, label="  ret i32 0"];
	Node0x1e21b88 -> Node0x1e21c08;
	Node0x1e21c08 -> Node0x1e21c98;
	Node0x1e21c98 -> Node0x1e21cf8;
	Node0x1e21cf8 -> Node0x1e21da8;
	Node0x1e21da8 -> Node0x1e221d8;
	Node0x1e221d8 -> Node0x1e222b8;
	Node0x1e222b8 -> Node0x1e223b8;
	Node0x1e223b8 -> Node0x1e22478;
	Node0x1e22478 -> Node0x1e22528;
	Node0x1e22528 -> Node0x1e225e8;
	Node0x1e225e8 -> Node0x1e22698;
	Node0x1e22698 -> Node0x1e1cb20;
	Node0x1e1cb20 -> Node0x1e22898;
	Node0x1e22898 -> Node0x1e23808;
	Node0x1e23808 -> Node0x1e23e78;
	Node0x1e23e78 -> Node0x1e23ed8;
	Node0x1e23ed8 -> Node0x1e23f50;
	Node0x1e23f50 -> Node0x1e23fc0;
	Node0x1e23fc0 -> Node0x1e24030;
	Node0x1e24030 -> Node0x1e240a0;
	Node0x1e240a0 -> Node0x1e24110;
	Node0x1e24110 -> Node0x1e24180;
	Node0x1e24180 -> Node0x1e241f0;
	Node0x1e241f0 -> Node0x1e24260;
	Node0x1e24260 -> Node0x1e242d0;
	Node0x1e242d0 -> Node0x1e24340;
	Node0x1e24340 -> Node0x1e243b0;
	Node0x1e243b0 -> Node0x1e24420;
	Node0x1e24420 -> Node0x1e24490;
	Node0x1e24490 -> Node0x1e24500;
	Node0x1e24500 -> Node0x1e24570;
	Node0x1e24570 -> Node0x1e245e0;
	Node0x1e245e0 -> Node0x1e24650;
	Node0x1e24650 -> Node0x1e246c0;
	Node0x1e246c0 -> Node0x1e24730;
	Node0x1e24730 -> Node0x1e247a0;
	Node0x1e247a0 -> Node0x1e24810;
	Node0x1e24810 -> Node0x1e24880;
	Node0x1e24880 -> Node0x1e248f0;
	Node0x1e248f0 -> Node0x1e24960;
	Node0x1e24960 -> Node0x1e249d0;
	Node0x1e249d0 -> Node0x1e24a40;
	Node0x1e24a40 -> Node0x1e24ab0;
	Node0x1e24ab0 -> Node0x1e24b20;
	Node0x1e24b20 -> Node0x1e24b90;
	Node0x1e24b90 -> Node0x1e24c00;
	Node0x1e24c00 -> Node0x1e24c70;
	Node0x1e24c70 -> Node0x1e24ce0;
	Node0x1e24ce0 -> Node0x1e24d50;
	Node0x1e24d50 -> Node0x1e24dc0;
	Node0x1e24dc0 -> Node0x1e24e30;
	Node0x1e24e30 -> Node0x1e24ea0;
	Node0x1e24ea0 -> Node0x1e24f10;
	Node0x1e24f10 -> Node0x1e24f80;
	Node0x1e24f80 -> Node0x1e24ff0;
	Node0x1e24ff0 -> Node0x1dc18b8;
	Node0x1dc18b8 -> Node0x1e25080;
	Node0x1e25080 -> Node0x1e25328;
	Node0x1e25328 -> Node0x1e25488;
	Node0x1e25488 -> Node0x1e25598;
	Node0x1e25598 -> Node0x1e256a8;
	Node0x1e256a8 -> Node0x1e25768;
edge [color=red]
	Node0x1e21b88 -> Node0x1e21da8;
	Node0x1e21da8 -> Node0x1e221d8;
	Node0x1e21c08 -> Node0x1e222b8;
	Node0x1e222b8 -> Node0x1e223b8;
	Node0x1e21c98 -> Node0x1e22478;
	Node0x1e22478 -> Node0x1e22528;
	Node0x1e21cf8 -> Node0x1e225e8;
	Node0x1e225e8 -> Node0x1e22698;
	Node0x1e21b88 -> Node0x1e1cb20;
	Node0x1e21c08 -> Node0x1e1cb20;
	Node0x1e21c98 -> Node0x1e1cb20;
	Node0x1e21cf8 -> Node0x1e1cb20;
	Node0x1e21b88 -> Node0x1e22898;
	Node0x1e21c08 -> Node0x1e23808;
	Node0x1e21c98 -> Node0x1e23e78;
	Node0x1e21cf8 -> Node0x1e23ed8;
	Node0x1e23ed8 -> Node0x1e23f50;
	Node0x1e22898 -> Node0x1e23f50;
	Node0x1e23808 -> Node0x1e23fc0;
	Node0x1e23f50 -> Node0x1e23fc0;
	Node0x1e23e78 -> Node0x1e24030;
	Node0x1e23808 -> Node0x1e240a0;
	Node0x1e24030 -> Node0x1e240a0;
	Node0x1e23808 -> Node0x1e24110;
	Node0x1e24030 -> Node0x1e24110;
	Node0x1e23e78 -> Node0x1e24180;
	Node0x1e23808 -> Node0x1e24180;
	Node0x1e24180 -> Node0x1e241f0;
	Node0x1e241f0 -> Node0x1e24260;
	Node0x1e240a0 -> Node0x1e242d0;
	Node0x1e23e78 -> Node0x1e24340;
	Node0x1e23808 -> Node0x1e24340;
	Node0x1e24340 -> Node0x1e243b0;
	Node0x1e23ed8 -> Node0x1e24420;
	Node0x1e23ed8 -> Node0x1e24490;
	Node0x1e22898 -> Node0x1e24490;
	Node0x1e24490 -> Node0x1e24500;
	Node0x1e22898 -> Node0x1e24570;
	Node0x1e23ed8 -> Node0x1e245e0;
	Node0x1e24570 -> Node0x1e245e0;
	Node0x1e23ed8 -> Node0x1e24650;
	Node0x1e22898 -> Node0x1e24650;
	Node0x1e22898 -> Node0x1e246c0;
	Node0x1e24420 -> Node0x1e246c0;
	Node0x1e24500 -> Node0x1e24730;
	Node0x1e245e0 -> Node0x1e247a0;
	Node0x1e24110 -> Node0x1e24810;
	Node0x1e242d0 -> Node0x1e24810;
	Node0x1e24810 -> Node0x1e24880;
	Node0x1e23808 -> Node0x1e248f0;
	Node0x1e248f0 -> Node0x1e24960;
	Node0x1e23e78 -> Node0x1e24960;
	Node0x1e24960 -> Node0x1e249d0;
	Node0x1e24030 -> Node0x1e249d0;
	Node0x1e249d0 -> Node0x1e24a40;
	Node0x1e240a0 -> Node0x1e24a40;
	Node0x1e24a40 -> Node0x1e24ab0;
	Node0x1e24110 -> Node0x1e24ab0;
	Node0x1e24ab0 -> Node0x1e24b20;
	Node0x1e24420 -> Node0x1e24b20;
	Node0x1e24b20 -> Node0x1e24b90;
	Node0x1e241f0 -> Node0x1e24b90;
	Node0x1e24b90 -> Node0x1e24c00;
	Node0x1e243b0 -> Node0x1e24c00;
	Node0x1e24c00 -> Node0x1e24c70;
	Node0x1e23f50 -> Node0x1e24c70;
	Node0x1e24c70 -> Node0x1e24ce0;
	Node0x1e24650 -> Node0x1e24ce0;
	Node0x1e24ce0 -> Node0x1e24d50;
	Node0x1e246c0 -> Node0x1e24d50;
	Node0x1e24d50 -> Node0x1e24dc0;
	Node0x1e24260 -> Node0x1e24dc0;
	Node0x1e24dc0 -> Node0x1e24e30;
	Node0x1e24500 -> Node0x1e24e30;
	Node0x1e24e30 -> Node0x1e24ea0;
	Node0x1e247a0 -> Node0x1e24ea0;
	Node0x1e24ea0 -> Node0x1e24f10;
	Node0x1e24880 -> Node0x1e24f10;
	Node0x1e24f10 -> Node0x1e24f80;
	Node0x1e24730 -> Node0x1e24f80;
	Node0x1e23fc0 -> Node0x1e24ff0;
	Node0x1e24f80 -> Node0x1e24ff0;
	Node0x1e24ff0 -> Node0x1dc18b8;
	Node0x1dc18b8 -> Node0x1e25080;
	Node0x1e225e8 -> Node0x1e25328;
	Node0x1e22478 -> Node0x1e25488;
	Node0x1e222b8 -> Node0x1e25598;
	Node0x1e21da8 -> Node0x1e256a8;
}
