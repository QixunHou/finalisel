digraph "DFG for'crackme' function" {
	Node0x1e1faf0[shape=record, label="  %5 = xor i32 %3, %0"];
	Node0x1e1fb60[shape=record, label="  %6 = sub i32 %1, %5"];
	Node0x1e201e0[shape=record, label="  %7 = xor i32 %2, -1"];
	Node0x1e20250[shape=record, label="  %8 = or i32 %7, %1"];
	Node0x1e202c0[shape=record, label="  %9 = and i32 %7, %1"];
	Node0x1e20330[shape=record, label="  %10 = or i32 %2, %1"];
	Node0x1e203d0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x1e20470[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x1e204e0[shape=record, label="  %13 = xor i32 %8, -1"];
	Node0x1e20550[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x1e205f0[shape=record, label="  %15 = shl i32 %14, 3"];
	Node0x1e20660[shape=record, label="  %16 = xor i32 %3, -1"];
	Node0x1e206d0[shape=record, label="  %17 = or i32 %3, %0"];
	Node0x1e20740[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x1e207e0[shape=record, label="  %19 = xor i32 %0, 2147483647"];
	Node0x1e20850[shape=record, label="  %20 = or i32 %19, %3"];
	Node0x1e208c0[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x1e20930[shape=record, label="  %22 = or i32 %16, %0"];
	Node0x1e209a0[shape=record, label="  %23 = xor i32 %18, -2"];
	Node0x1e20a10[shape=record, label="  %24 = shl i32 %20, 1"];
	Node0x1e20a80[shape=record, label="  %25 = add i32 %9, %13"];
	Node0x1e20b20[shape=record, label="  %26 = mul i32 %25, 5"];
	Node0x1e20bc0[shape=record, label="  %27 = sub i32 8, %1"];
	Node0x1e20c30[shape=record, label="  %28 = sub i32 %27, %2"];
	Node0x1e20ca0[shape=record, label="  %29 = add i32 %28, %7"];
	Node0x1e20d10[shape=record, label="  %30 = sub i32 %29, %8"];
	Node0x1e20d80[shape=record, label="  %31 = add i32 %30, %9"];
	Node0x1e20df0[shape=record, label="  %32 = add i32 %31, %16"];
	Node0x1e21070[shape=record, label="  %33 = sub i32 %32, %11"];
	Node0x1e210e0[shape=record, label="  %34 = add i32 %33, %15"];
	Node0x1e21150[shape=record, label="  %35 = add i32 %34, %5"];
	Node0x1e211c0[shape=record, label="  %36 = add i32 %35, %21"];
	Node0x1e21230[shape=record, label="  %37 = add i32 %36, %22"];
	Node0x1e212a0[shape=record, label="  %38 = add i32 %37, %12"];
	Node0x1e21310[shape=record, label="  %39 = add i32 %38, %18"];
	Node0x1e21380[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x1e213f0[shape=record, label="  %41 = add i32 %40, %26"];
	Node0x1e21460[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x1e214d0[shape=record, label="  %43 = icmp eq i32 %6, %42"];
	Node0x1dc0268[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e21970[shape=record, label="  %45 = tail call i32 @puts(i8* nonnull dereferenceable(1) %44)"];
	Node0x1e219c0[shape=record, label="  ret void"];
	Node0x1e1faf0 -> Node0x1e1fb60;
	Node0x1e1fb60 -> Node0x1e201e0;
	Node0x1e201e0 -> Node0x1e20250;
	Node0x1e20250 -> Node0x1e202c0;
	Node0x1e202c0 -> Node0x1e20330;
	Node0x1e20330 -> Node0x1e203d0;
	Node0x1e203d0 -> Node0x1e20470;
	Node0x1e20470 -> Node0x1e204e0;
	Node0x1e204e0 -> Node0x1e20550;
	Node0x1e20550 -> Node0x1e205f0;
	Node0x1e205f0 -> Node0x1e20660;
	Node0x1e20660 -> Node0x1e206d0;
	Node0x1e206d0 -> Node0x1e20740;
	Node0x1e20740 -> Node0x1e207e0;
	Node0x1e207e0 -> Node0x1e20850;
	Node0x1e20850 -> Node0x1e208c0;
	Node0x1e208c0 -> Node0x1e20930;
	Node0x1e20930 -> Node0x1e209a0;
	Node0x1e209a0 -> Node0x1e20a10;
	Node0x1e20a10 -> Node0x1e20a80;
	Node0x1e20a80 -> Node0x1e20b20;
	Node0x1e20b20 -> Node0x1e20bc0;
	Node0x1e20bc0 -> Node0x1e20c30;
	Node0x1e20c30 -> Node0x1e20ca0;
	Node0x1e20ca0 -> Node0x1e20d10;
	Node0x1e20d10 -> Node0x1e20d80;
	Node0x1e20d80 -> Node0x1e20df0;
	Node0x1e20df0 -> Node0x1e21070;
	Node0x1e21070 -> Node0x1e210e0;
	Node0x1e210e0 -> Node0x1e21150;
	Node0x1e21150 -> Node0x1e211c0;
	Node0x1e211c0 -> Node0x1e21230;
	Node0x1e21230 -> Node0x1e212a0;
	Node0x1e212a0 -> Node0x1e21310;
	Node0x1e21310 -> Node0x1e21380;
	Node0x1e21380 -> Node0x1e213f0;
	Node0x1e213f0 -> Node0x1e21460;
	Node0x1e21460 -> Node0x1e214d0;
	Node0x1e214d0 -> Node0x1dc0268;
	Node0x1dc0268 -> Node0x1e21970;
	Node0x1e21970 -> Node0x1e219c0;
edge [color=red]
	Node0x1e1faf0 -> Node0x1e1fb60;
	Node0x1e201e0 -> Node0x1e20250;
	Node0x1e201e0 -> Node0x1e202c0;
	Node0x1e20330 -> Node0x1e203d0;
	Node0x1e203d0 -> Node0x1e20470;
	Node0x1e20250 -> Node0x1e204e0;
	Node0x1e20550 -> Node0x1e205f0;
	Node0x1e206d0 -> Node0x1e20740;
	Node0x1e207e0 -> Node0x1e20850;
	Node0x1e20660 -> Node0x1e20930;
	Node0x1e20740 -> Node0x1e209a0;
	Node0x1e20850 -> Node0x1e20a10;
	Node0x1e202c0 -> Node0x1e20a80;
	Node0x1e204e0 -> Node0x1e20a80;
	Node0x1e20a80 -> Node0x1e20b20;
	Node0x1e20bc0 -> Node0x1e20c30;
	Node0x1e20c30 -> Node0x1e20ca0;
	Node0x1e201e0 -> Node0x1e20ca0;
	Node0x1e20ca0 -> Node0x1e20d10;
	Node0x1e20250 -> Node0x1e20d10;
	Node0x1e20d10 -> Node0x1e20d80;
	Node0x1e202c0 -> Node0x1e20d80;
	Node0x1e20d80 -> Node0x1e20df0;
	Node0x1e20660 -> Node0x1e20df0;
	Node0x1e20df0 -> Node0x1e21070;
	Node0x1e203d0 -> Node0x1e21070;
	Node0x1e21070 -> Node0x1e210e0;
	Node0x1e205f0 -> Node0x1e210e0;
	Node0x1e210e0 -> Node0x1e21150;
	Node0x1e1faf0 -> Node0x1e21150;
	Node0x1e21150 -> Node0x1e211c0;
	Node0x1e208c0 -> Node0x1e211c0;
	Node0x1e211c0 -> Node0x1e21230;
	Node0x1e20930 -> Node0x1e21230;
	Node0x1e21230 -> Node0x1e212a0;
	Node0x1e20470 -> Node0x1e212a0;
	Node0x1e212a0 -> Node0x1e21310;
	Node0x1e20740 -> Node0x1e21310;
	Node0x1e21310 -> Node0x1e21380;
	Node0x1e20a10 -> Node0x1e21380;
	Node0x1e21380 -> Node0x1e213f0;
	Node0x1e20b20 -> Node0x1e213f0;
	Node0x1e213f0 -> Node0x1e21460;
	Node0x1e209a0 -> Node0x1e21460;
	Node0x1e1fb60 -> Node0x1e214d0;
	Node0x1e21460 -> Node0x1e214d0;
	Node0x1e214d0 -> Node0x1dc0268;
	Node0x1dc0268 -> Node0x1e21970;
}
