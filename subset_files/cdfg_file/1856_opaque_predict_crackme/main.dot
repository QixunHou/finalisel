digraph "DFG for'main' function" {
	Node0xf8d978[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf8d9f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf8da88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf8dae8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xf8db98[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xf8dfc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf8e0a8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xf8e1a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf8e268[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xf8e318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf8e3d8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xf8e488[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf88a90[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xf8e688[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf8f5f8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf8fc68[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf8fcc8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xf8fd40[shape=record, label="  %14 = and i32 %12, %11"];
	Node0xf8fdb0[shape=record, label="  %15 = shl i32 %13, 1"];
	Node0xf8fe20[shape=record, label="  %16 = sub i32 1, %14"];
	Node0xf8fe90[shape=record, label="  %17 = add i32 %16, %15"];
	Node0xf8ff00[shape=record, label="  %18 = xor i32 %12, %11"];
	Node0xf8ff70[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0xf8ffe0[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0xf90050[shape=record, label="  %21 = or i32 %12, %11"];
	Node0xf900c0[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0xf90130[shape=record, label="  %23 = shl i32 %21, 1"];
	Node0xf901a0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0xf90210[shape=record, label="  %25 = and i32 %11, %22"];
	Node0xf90280[shape=record, label="  %26 = shl i32 %10, 1"];
	Node0xf902f0[shape=record, label="  %27 = xor i32 %10, -1"];
	Node0xf90360[shape=record, label="  %28 = and i32 %13, %27"];
	Node0xf903d0[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0xf90440[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0xf904b0[shape=record, label="  %31 = or i32 %13, %10"];
	Node0xf90520[shape=record, label="  %32 = shl i32 %31, 2"];
	Node0xf90590[shape=record, label="  %33 = xor i32 %32, -4"];
	Node0xf90600[shape=record, label="  %34 = xor i32 %13, 2147483647"];
	Node0xf90670[shape=record, label="  %35 = and i32 %34, %10"];
	Node0xf906e0[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0xf90750[shape=record, label="  %37 = sub i32 %27, %26"];
	Node0xf907c0[shape=record, label="  %38 = add i32 %37, %12"];
	Node0xf90830[shape=record, label="  %39 = sub i32 %38, %21"];
	Node0xf908a0[shape=record, label="  %40 = add i32 %39, %25"];
	Node0xf90910[shape=record, label="  %41 = add i32 %40, %14"];
	Node0xf90980[shape=record, label="  %42 = add i32 %41, %31"];
	Node0xf909f0[shape=record, label="  %43 = sub i32 %42, %28"];
	Node0xf90a60[shape=record, label="  %44 = sub i32 %43, %20"];
	Node0xf90ad0[shape=record, label="  %45 = add i32 %44, %24"];
	Node0xf90b40[shape=record, label="  %46 = add i32 %45, %30"];
	Node0xf90bb0[shape=record, label="  %47 = sub i32 %46, %33"];
	Node0xf90c20[shape=record, label="  %48 = sub i32 %47, %36"];
	Node0xf90c90[shape=record, label="  %49 = icmp eq i32 %17, %48"];
	Node0xf2d8b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf90d20[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0xf90fc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf91128[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf91238[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf91348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf91408[shape=record, label="  ret i32 0"];
	Node0xf8d978 -> Node0xf8d9f8;
	Node0xf8d9f8 -> Node0xf8da88;
	Node0xf8da88 -> Node0xf8dae8;
	Node0xf8dae8 -> Node0xf8db98;
	Node0xf8db98 -> Node0xf8dfc8;
	Node0xf8dfc8 -> Node0xf8e0a8;
	Node0xf8e0a8 -> Node0xf8e1a8;
	Node0xf8e1a8 -> Node0xf8e268;
	Node0xf8e268 -> Node0xf8e318;
	Node0xf8e318 -> Node0xf8e3d8;
	Node0xf8e3d8 -> Node0xf8e488;
	Node0xf8e488 -> Node0xf88a90;
	Node0xf88a90 -> Node0xf8e688;
	Node0xf8e688 -> Node0xf8f5f8;
	Node0xf8f5f8 -> Node0xf8fc68;
	Node0xf8fc68 -> Node0xf8fcc8;
	Node0xf8fcc8 -> Node0xf8fd40;
	Node0xf8fd40 -> Node0xf8fdb0;
	Node0xf8fdb0 -> Node0xf8fe20;
	Node0xf8fe20 -> Node0xf8fe90;
	Node0xf8fe90 -> Node0xf8ff00;
	Node0xf8ff00 -> Node0xf8ff70;
	Node0xf8ff70 -> Node0xf8ffe0;
	Node0xf8ffe0 -> Node0xf90050;
	Node0xf90050 -> Node0xf900c0;
	Node0xf900c0 -> Node0xf90130;
	Node0xf90130 -> Node0xf901a0;
	Node0xf901a0 -> Node0xf90210;
	Node0xf90210 -> Node0xf90280;
	Node0xf90280 -> Node0xf902f0;
	Node0xf902f0 -> Node0xf90360;
	Node0xf90360 -> Node0xf903d0;
	Node0xf903d0 -> Node0xf90440;
	Node0xf90440 -> Node0xf904b0;
	Node0xf904b0 -> Node0xf90520;
	Node0xf90520 -> Node0xf90590;
	Node0xf90590 -> Node0xf90600;
	Node0xf90600 -> Node0xf90670;
	Node0xf90670 -> Node0xf906e0;
	Node0xf906e0 -> Node0xf90750;
	Node0xf90750 -> Node0xf907c0;
	Node0xf907c0 -> Node0xf90830;
	Node0xf90830 -> Node0xf908a0;
	Node0xf908a0 -> Node0xf90910;
	Node0xf90910 -> Node0xf90980;
	Node0xf90980 -> Node0xf909f0;
	Node0xf909f0 -> Node0xf90a60;
	Node0xf90a60 -> Node0xf90ad0;
	Node0xf90ad0 -> Node0xf90b40;
	Node0xf90b40 -> Node0xf90bb0;
	Node0xf90bb0 -> Node0xf90c20;
	Node0xf90c20 -> Node0xf90c90;
	Node0xf90c90 -> Node0xf2d8b8;
	Node0xf2d8b8 -> Node0xf90d20;
	Node0xf90d20 -> Node0xf90fc8;
	Node0xf90fc8 -> Node0xf91128;
	Node0xf91128 -> Node0xf91238;
	Node0xf91238 -> Node0xf91348;
	Node0xf91348 -> Node0xf91408;
edge [color=red]
	Node0xf8d978 -> Node0xf8db98;
	Node0xf8db98 -> Node0xf8dfc8;
	Node0xf8d9f8 -> Node0xf8e0a8;
	Node0xf8e0a8 -> Node0xf8e1a8;
	Node0xf8da88 -> Node0xf8e268;
	Node0xf8e268 -> Node0xf8e318;
	Node0xf8dae8 -> Node0xf8e3d8;
	Node0xf8e3d8 -> Node0xf8e488;
	Node0xf8d978 -> Node0xf88a90;
	Node0xf8d9f8 -> Node0xf88a90;
	Node0xf8da88 -> Node0xf88a90;
	Node0xf8dae8 -> Node0xf88a90;
	Node0xf8d978 -> Node0xf8e688;
	Node0xf8d9f8 -> Node0xf8f5f8;
	Node0xf8da88 -> Node0xf8fc68;
	Node0xf8dae8 -> Node0xf8fcc8;
	Node0xf8fc68 -> Node0xf8fd40;
	Node0xf8f5f8 -> Node0xf8fd40;
	Node0xf8fcc8 -> Node0xf8fdb0;
	Node0xf8fd40 -> Node0xf8fe20;
	Node0xf8fe20 -> Node0xf8fe90;
	Node0xf8fdb0 -> Node0xf8fe90;
	Node0xf8fc68 -> Node0xf8ff00;
	Node0xf8f5f8 -> Node0xf8ff00;
	Node0xf8ff00 -> Node0xf8ff70;
	Node0xf8ff70 -> Node0xf8ffe0;
	Node0xf8fc68 -> Node0xf90050;
	Node0xf8f5f8 -> Node0xf90050;
	Node0xf8fc68 -> Node0xf900c0;
	Node0xf90050 -> Node0xf90130;
	Node0xf90130 -> Node0xf901a0;
	Node0xf8f5f8 -> Node0xf90210;
	Node0xf900c0 -> Node0xf90210;
	Node0xf8e688 -> Node0xf90280;
	Node0xf8e688 -> Node0xf902f0;
	Node0xf8fcc8 -> Node0xf90360;
	Node0xf902f0 -> Node0xf90360;
	Node0xf90360 -> Node0xf903d0;
	Node0xf903d0 -> Node0xf90440;
	Node0xf8fcc8 -> Node0xf904b0;
	Node0xf8e688 -> Node0xf904b0;
	Node0xf904b0 -> Node0xf90520;
	Node0xf90520 -> Node0xf90590;
	Node0xf8fcc8 -> Node0xf90600;
	Node0xf90600 -> Node0xf90670;
	Node0xf8e688 -> Node0xf90670;
	Node0xf90670 -> Node0xf906e0;
	Node0xf902f0 -> Node0xf90750;
	Node0xf90280 -> Node0xf90750;
	Node0xf90750 -> Node0xf907c0;
	Node0xf8fc68 -> Node0xf907c0;
	Node0xf907c0 -> Node0xf90830;
	Node0xf90050 -> Node0xf90830;
	Node0xf90830 -> Node0xf908a0;
	Node0xf90210 -> Node0xf908a0;
	Node0xf908a0 -> Node0xf90910;
	Node0xf8fd40 -> Node0xf90910;
	Node0xf90910 -> Node0xf90980;
	Node0xf904b0 -> Node0xf90980;
	Node0xf90980 -> Node0xf909f0;
	Node0xf90360 -> Node0xf909f0;
	Node0xf909f0 -> Node0xf90a60;
	Node0xf8ffe0 -> Node0xf90a60;
	Node0xf90a60 -> Node0xf90ad0;
	Node0xf901a0 -> Node0xf90ad0;
	Node0xf90ad0 -> Node0xf90b40;
	Node0xf90440 -> Node0xf90b40;
	Node0xf90b40 -> Node0xf90bb0;
	Node0xf90590 -> Node0xf90bb0;
	Node0xf90bb0 -> Node0xf90c20;
	Node0xf906e0 -> Node0xf90c20;
	Node0xf8fe90 -> Node0xf90c90;
	Node0xf90c20 -> Node0xf90c90;
	Node0xf90c90 -> Node0xf2d8b8;
	Node0xf2d8b8 -> Node0xf90d20;
	Node0xf8e3d8 -> Node0xf90fc8;
	Node0xf8e268 -> Node0xf91128;
	Node0xf8e0a8 -> Node0xf91238;
	Node0xf8db98 -> Node0xf91348;
}
