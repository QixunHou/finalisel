digraph "DFG for'crackme' function" {
	Node0xf8ba60[shape=record, label="  %5 = and i32 %2, %1"];
	Node0xf8c0e0[shape=record, label="  %6 = shl i32 %3, 1"];
	Node0xf8c150[shape=record, label="  %7 = sub i32 1, %5"];
	Node0xf8c1c0[shape=record, label="  %8 = add i32 %7, %6"];
	Node0xf8c230[shape=record, label="  %9 = xor i32 %2, %1"];
	Node0xf8c2a0[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0xf8c340[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0xf8c3b0[shape=record, label="  %12 = or i32 %2, %1"];
	Node0xf8c450[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0xf8c4c0[shape=record, label="  %14 = shl i32 %12, 1"];
	Node0xf8c530[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0xf8c5a0[shape=record, label="  %16 = and i32 %13, %1"];
	Node0xf8c610[shape=record, label="  %17 = shl i32 %0, 1"];
	Node0xf8c680[shape=record, label="  %18 = xor i32 %0, -1"];
	Node0xf8c6f0[shape=record, label="  %19 = and i32 %18, %3"];
	Node0xf8c760[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0xf8c7d0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0xf8c840[shape=record, label="  %22 = or i32 %3, %0"];
	Node0xf8c8e0[shape=record, label="  %23 = shl i32 %22, 2"];
	Node0xf8c980[shape=record, label="  %24 = xor i32 %23, -4"];
	Node0xf8ca20[shape=record, label="  %25 = xor i32 %3, 2147483647"];
	Node0xf8ca90[shape=record, label="  %26 = and i32 %25, %0"];
	Node0xf8cb00[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0xf8cb70[shape=record, label="  %28 = sub i32 %18, %17"];
	Node0xf8cbe0[shape=record, label="  %29 = add i32 %28, %2"];
	Node0xf8cc50[shape=record, label="  %30 = sub i32 %29, %12"];
	Node0xf8ccc0[shape=record, label="  %31 = add i32 %30, %16"];
	Node0xf8cd30[shape=record, label="  %32 = add i32 %31, %5"];
	Node0xf8cfb0[shape=record, label="  %33 = add i32 %32, %22"];
	Node0xf8d020[shape=record, label="  %34 = sub i32 %33, %19"];
	Node0xf8d090[shape=record, label="  %35 = sub i32 %34, %11"];
	Node0xf8d100[shape=record, label="  %36 = add i32 %35, %15"];
	Node0xf8d170[shape=record, label="  %37 = add i32 %36, %21"];
	Node0xf8d1e0[shape=record, label="  %38 = sub i32 %37, %24"];
	Node0xf8d250[shape=record, label="  %39 = sub i32 %38, %27"];
	Node0xf8d2c0[shape=record, label="  %40 = icmp eq i32 %8, %39"];
	Node0xf2c268[shape=record, label="  %41 = select i1 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf8d760[shape=record, label="  %42 = tail call i32 @puts(i8* nonnull dereferenceable(1) %41)"];
	Node0xf8d7b0[shape=record, label="  ret void"];
	Node0xf8ba60 -> Node0xf8c0e0;
	Node0xf8c0e0 -> Node0xf8c150;
	Node0xf8c150 -> Node0xf8c1c0;
	Node0xf8c1c0 -> Node0xf8c230;
	Node0xf8c230 -> Node0xf8c2a0;
	Node0xf8c2a0 -> Node0xf8c340;
	Node0xf8c340 -> Node0xf8c3b0;
	Node0xf8c3b0 -> Node0xf8c450;
	Node0xf8c450 -> Node0xf8c4c0;
	Node0xf8c4c0 -> Node0xf8c530;
	Node0xf8c530 -> Node0xf8c5a0;
	Node0xf8c5a0 -> Node0xf8c610;
	Node0xf8c610 -> Node0xf8c680;
	Node0xf8c680 -> Node0xf8c6f0;
	Node0xf8c6f0 -> Node0xf8c760;
	Node0xf8c760 -> Node0xf8c7d0;
	Node0xf8c7d0 -> Node0xf8c840;
	Node0xf8c840 -> Node0xf8c8e0;
	Node0xf8c8e0 -> Node0xf8c980;
	Node0xf8c980 -> Node0xf8ca20;
	Node0xf8ca20 -> Node0xf8ca90;
	Node0xf8ca90 -> Node0xf8cb00;
	Node0xf8cb00 -> Node0xf8cb70;
	Node0xf8cb70 -> Node0xf8cbe0;
	Node0xf8cbe0 -> Node0xf8cc50;
	Node0xf8cc50 -> Node0xf8ccc0;
	Node0xf8ccc0 -> Node0xf8cd30;
	Node0xf8cd30 -> Node0xf8cfb0;
	Node0xf8cfb0 -> Node0xf8d020;
	Node0xf8d020 -> Node0xf8d090;
	Node0xf8d090 -> Node0xf8d100;
	Node0xf8d100 -> Node0xf8d170;
	Node0xf8d170 -> Node0xf8d1e0;
	Node0xf8d1e0 -> Node0xf8d250;
	Node0xf8d250 -> Node0xf8d2c0;
	Node0xf8d2c0 -> Node0xf2c268;
	Node0xf2c268 -> Node0xf8d760;
	Node0xf8d760 -> Node0xf8d7b0;
edge [color=red]
	Node0xf8ba60 -> Node0xf8c150;
	Node0xf8c150 -> Node0xf8c1c0;
	Node0xf8c0e0 -> Node0xf8c1c0;
	Node0xf8c230 -> Node0xf8c2a0;
	Node0xf8c2a0 -> Node0xf8c340;
	Node0xf8c3b0 -> Node0xf8c4c0;
	Node0xf8c4c0 -> Node0xf8c530;
	Node0xf8c450 -> Node0xf8c5a0;
	Node0xf8c680 -> Node0xf8c6f0;
	Node0xf8c6f0 -> Node0xf8c760;
	Node0xf8c760 -> Node0xf8c7d0;
	Node0xf8c840 -> Node0xf8c8e0;
	Node0xf8c8e0 -> Node0xf8c980;
	Node0xf8ca20 -> Node0xf8ca90;
	Node0xf8ca90 -> Node0xf8cb00;
	Node0xf8c680 -> Node0xf8cb70;
	Node0xf8c610 -> Node0xf8cb70;
	Node0xf8cb70 -> Node0xf8cbe0;
	Node0xf8cbe0 -> Node0xf8cc50;
	Node0xf8c3b0 -> Node0xf8cc50;
	Node0xf8cc50 -> Node0xf8ccc0;
	Node0xf8c5a0 -> Node0xf8ccc0;
	Node0xf8ccc0 -> Node0xf8cd30;
	Node0xf8ba60 -> Node0xf8cd30;
	Node0xf8cd30 -> Node0xf8cfb0;
	Node0xf8c840 -> Node0xf8cfb0;
	Node0xf8cfb0 -> Node0xf8d020;
	Node0xf8c6f0 -> Node0xf8d020;
	Node0xf8d020 -> Node0xf8d090;
	Node0xf8c340 -> Node0xf8d090;
	Node0xf8d090 -> Node0xf8d100;
	Node0xf8c530 -> Node0xf8d100;
	Node0xf8d100 -> Node0xf8d170;
	Node0xf8c7d0 -> Node0xf8d170;
	Node0xf8d170 -> Node0xf8d1e0;
	Node0xf8c980 -> Node0xf8d1e0;
	Node0xf8d1e0 -> Node0xf8d250;
	Node0xf8cb00 -> Node0xf8d250;
	Node0xf8c1c0 -> Node0xf8d2c0;
	Node0xf8d250 -> Node0xf8d2c0;
	Node0xf8d2c0 -> Node0xf2c268;
	Node0xf2c268 -> Node0xf8d760;
}
