digraph "DFG for'main' function" {
	Node0x18f6b78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x18f6bf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x18f6c88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x18f6ce8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x18f6d98[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x18f71c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18f72a8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x18f73a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18f7468[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x18f7518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x18f75d8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x18f7688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x18f1b10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x18f7888[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18f87f8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x18f8e68[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x18f8ec8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x18f8f40[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x18f8fb0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x18f9020[shape=record, label="  %16 = xor i32 %13, %10"];
	Node0x18f9090[shape=record, label="  %17 = sub i32 %15, %16"];
	Node0x18f9100[shape=record, label="  %18 = xor i32 %12, %11"];
	Node0x18f9170[shape=record, label="  %19 = shl i32 %11, 1"];
	Node0x18f91e0[shape=record, label="  %20 = or i32 %11, %14"];
	Node0x18f9250[shape=record, label="  %21 = and i32 %12, %11"];
	Node0x18f92c0[shape=record, label="  %22 = and i32 %11, %14"];
	Node0x18f9330[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x18f93a0[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x18f9410[shape=record, label="  %25 = mul i32 %24, 5"];
	Node0x18f9480[shape=record, label="  %26 = mul i32 %21, 6"];
	Node0x18f94f0[shape=record, label="  %27 = or i32 %13, %10"];
	Node0x18f9560[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x18f95d0[shape=record, label="  %29 = xor i32 %13, -1"];
	Node0x18f9640[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x18f96b0[shape=record, label="  %31 = and i32 %13, %30"];
	Node0x18f9720[shape=record, label="  %32 = xor i32 %31, -1"];
	Node0x18f9790[shape=record, label="  %33 = and i32 %13, %10"];
	Node0x18f9800[shape=record, label="  %34 = mul i32 %33, 3"];
	Node0x18f9870[shape=record, label="  %35 = shl i32 %18, 1"];
	Node0x18f98e0[shape=record, label="  %36 = add i32 %31, %22"];
	Node0x18f9950[shape=record, label="  %37 = shl i32 %36, 2"];
	Node0x18f99c0[shape=record, label="  %38 = add i32 %10, 4"];
	Node0x18f9a30[shape=record, label="  %39 = sub i32 %38, %19"];
	Node0x18f9aa0[shape=record, label="  %40 = sub i32 %39, %20"];
	Node0x18f9b10[shape=record, label="  %41 = sub i32 %40, %21"];
	Node0x18f9b80[shape=record, label="  %42 = add i32 %41, %22"];
	Node0x18f9bf0[shape=record, label="  %43 = add i32 %42, %29"];
	Node0x18f9c60[shape=record, label="  %44 = sub i32 %43, %13"];
	Node0x18f9cd0[shape=record, label="  %45 = add i32 %44, %25"];
	Node0x18f9d40[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x18f9db0[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x18f9e20[shape=record, label="  %48 = add i32 %47, %35"];
	Node0x18f9e90[shape=record, label="  %49 = sub i32 %48, %28"];
	Node0x18f9f00[shape=record, label="  %50 = add i32 %49, %34"];
	Node0x18f9f70[shape=record, label="  %51 = add i32 %50, %37"];
	Node0x18f9fe0[shape=record, label="  %52 = icmp eq i32 %17, %51"];
	Node0x18968b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18fa070[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x18fa318[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x18fa478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x18fa588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18fa698[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18fa758[shape=record, label="  ret i32 0"];
	Node0x18f6b78 -> Node0x18f6bf8;
	Node0x18f6bf8 -> Node0x18f6c88;
	Node0x18f6c88 -> Node0x18f6ce8;
	Node0x18f6ce8 -> Node0x18f6d98;
	Node0x18f6d98 -> Node0x18f71c8;
	Node0x18f71c8 -> Node0x18f72a8;
	Node0x18f72a8 -> Node0x18f73a8;
	Node0x18f73a8 -> Node0x18f7468;
	Node0x18f7468 -> Node0x18f7518;
	Node0x18f7518 -> Node0x18f75d8;
	Node0x18f75d8 -> Node0x18f7688;
	Node0x18f7688 -> Node0x18f1b10;
	Node0x18f1b10 -> Node0x18f7888;
	Node0x18f7888 -> Node0x18f87f8;
	Node0x18f87f8 -> Node0x18f8e68;
	Node0x18f8e68 -> Node0x18f8ec8;
	Node0x18f8ec8 -> Node0x18f8f40;
	Node0x18f8f40 -> Node0x18f8fb0;
	Node0x18f8fb0 -> Node0x18f9020;
	Node0x18f9020 -> Node0x18f9090;
	Node0x18f9090 -> Node0x18f9100;
	Node0x18f9100 -> Node0x18f9170;
	Node0x18f9170 -> Node0x18f91e0;
	Node0x18f91e0 -> Node0x18f9250;
	Node0x18f9250 -> Node0x18f92c0;
	Node0x18f92c0 -> Node0x18f9330;
	Node0x18f9330 -> Node0x18f93a0;
	Node0x18f93a0 -> Node0x18f9410;
	Node0x18f9410 -> Node0x18f9480;
	Node0x18f9480 -> Node0x18f94f0;
	Node0x18f94f0 -> Node0x18f9560;
	Node0x18f9560 -> Node0x18f95d0;
	Node0x18f95d0 -> Node0x18f9640;
	Node0x18f9640 -> Node0x18f96b0;
	Node0x18f96b0 -> Node0x18f9720;
	Node0x18f9720 -> Node0x18f9790;
	Node0x18f9790 -> Node0x18f9800;
	Node0x18f9800 -> Node0x18f9870;
	Node0x18f9870 -> Node0x18f98e0;
	Node0x18f98e0 -> Node0x18f9950;
	Node0x18f9950 -> Node0x18f99c0;
	Node0x18f99c0 -> Node0x18f9a30;
	Node0x18f9a30 -> Node0x18f9aa0;
	Node0x18f9aa0 -> Node0x18f9b10;
	Node0x18f9b10 -> Node0x18f9b80;
	Node0x18f9b80 -> Node0x18f9bf0;
	Node0x18f9bf0 -> Node0x18f9c60;
	Node0x18f9c60 -> Node0x18f9cd0;
	Node0x18f9cd0 -> Node0x18f9d40;
	Node0x18f9d40 -> Node0x18f9db0;
	Node0x18f9db0 -> Node0x18f9e20;
	Node0x18f9e20 -> Node0x18f9e90;
	Node0x18f9e90 -> Node0x18f9f00;
	Node0x18f9f00 -> Node0x18f9f70;
	Node0x18f9f70 -> Node0x18f9fe0;
	Node0x18f9fe0 -> Node0x18968b8;
	Node0x18968b8 -> Node0x18fa070;
	Node0x18fa070 -> Node0x18fa318;
	Node0x18fa318 -> Node0x18fa478;
	Node0x18fa478 -> Node0x18fa588;
	Node0x18fa588 -> Node0x18fa698;
	Node0x18fa698 -> Node0x18fa758;
edge [color=red]
	Node0x18f6b78 -> Node0x18f6d98;
	Node0x18f6d98 -> Node0x18f71c8;
	Node0x18f6bf8 -> Node0x18f72a8;
	Node0x18f72a8 -> Node0x18f73a8;
	Node0x18f6c88 -> Node0x18f7468;
	Node0x18f7468 -> Node0x18f7518;
	Node0x18f6ce8 -> Node0x18f75d8;
	Node0x18f75d8 -> Node0x18f7688;
	Node0x18f6b78 -> Node0x18f1b10;
	Node0x18f6bf8 -> Node0x18f1b10;
	Node0x18f6c88 -> Node0x18f1b10;
	Node0x18f6ce8 -> Node0x18f1b10;
	Node0x18f6b78 -> Node0x18f7888;
	Node0x18f6bf8 -> Node0x18f87f8;
	Node0x18f6c88 -> Node0x18f8e68;
	Node0x18f6ce8 -> Node0x18f8ec8;
	Node0x18f8e68 -> Node0x18f8f40;
	Node0x18f8f40 -> Node0x18f8fb0;
	Node0x18f8ec8 -> Node0x18f9020;
	Node0x18f7888 -> Node0x18f9020;
	Node0x18f8fb0 -> Node0x18f9090;
	Node0x18f9020 -> Node0x18f9090;
	Node0x18f8e68 -> Node0x18f9100;
	Node0x18f87f8 -> Node0x18f9100;
	Node0x18f87f8 -> Node0x18f9170;
	Node0x18f87f8 -> Node0x18f91e0;
	Node0x18f8f40 -> Node0x18f91e0;
	Node0x18f8e68 -> Node0x18f9250;
	Node0x18f87f8 -> Node0x18f9250;
	Node0x18f87f8 -> Node0x18f92c0;
	Node0x18f8f40 -> Node0x18f92c0;
	Node0x18f8e68 -> Node0x18f9330;
	Node0x18f87f8 -> Node0x18f9330;
	Node0x18f9330 -> Node0x18f93a0;
	Node0x18f93a0 -> Node0x18f9410;
	Node0x18f9250 -> Node0x18f9480;
	Node0x18f8ec8 -> Node0x18f94f0;
	Node0x18f7888 -> Node0x18f94f0;
	Node0x18f94f0 -> Node0x18f9560;
	Node0x18f8ec8 -> Node0x18f95d0;
	Node0x18f7888 -> Node0x18f9640;
	Node0x18f8ec8 -> Node0x18f96b0;
	Node0x18f9640 -> Node0x18f96b0;
	Node0x18f96b0 -> Node0x18f9720;
	Node0x18f8ec8 -> Node0x18f9790;
	Node0x18f7888 -> Node0x18f9790;
	Node0x18f9790 -> Node0x18f9800;
	Node0x18f9100 -> Node0x18f9870;
	Node0x18f96b0 -> Node0x18f98e0;
	Node0x18f92c0 -> Node0x18f98e0;
	Node0x18f98e0 -> Node0x18f9950;
	Node0x18f7888 -> Node0x18f99c0;
	Node0x18f99c0 -> Node0x18f9a30;
	Node0x18f9170 -> Node0x18f9a30;
	Node0x18f9a30 -> Node0x18f9aa0;
	Node0x18f91e0 -> Node0x18f9aa0;
	Node0x18f9aa0 -> Node0x18f9b10;
	Node0x18f9250 -> Node0x18f9b10;
	Node0x18f9b10 -> Node0x18f9b80;
	Node0x18f92c0 -> Node0x18f9b80;
	Node0x18f9b80 -> Node0x18f9bf0;
	Node0x18f95d0 -> Node0x18f9bf0;
	Node0x18f9bf0 -> Node0x18f9c60;
	Node0x18f8ec8 -> Node0x18f9c60;
	Node0x18f9c60 -> Node0x18f9cd0;
	Node0x18f9410 -> Node0x18f9cd0;
	Node0x18f9cd0 -> Node0x18f9d40;
	Node0x18f9480 -> Node0x18f9d40;
	Node0x18f9d40 -> Node0x18f9db0;
	Node0x18f9720 -> Node0x18f9db0;
	Node0x18f9db0 -> Node0x18f9e20;
	Node0x18f9870 -> Node0x18f9e20;
	Node0x18f9e20 -> Node0x18f9e90;
	Node0x18f9560 -> Node0x18f9e90;
	Node0x18f9e90 -> Node0x18f9f00;
	Node0x18f9800 -> Node0x18f9f00;
	Node0x18f9f00 -> Node0x18f9f70;
	Node0x18f9950 -> Node0x18f9f70;
	Node0x18f9090 -> Node0x18f9fe0;
	Node0x18f9f70 -> Node0x18f9fe0;
	Node0x18f9fe0 -> Node0x18968b8;
	Node0x18968b8 -> Node0x18fa070;
	Node0x18f75d8 -> Node0x18fa318;
	Node0x18f7468 -> Node0x18fa478;
	Node0x18f72a8 -> Node0x18fa588;
	Node0x18f6d98 -> Node0x18fa698;
}
