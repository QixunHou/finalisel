digraph "DFG for'main' function" {
	Node0xaece38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xaeceb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xaecf48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xaed3a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xaed488[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xaed5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xaed7e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xaed898[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xaee808[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xaeee90[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0xaeef00[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0xaeef70[shape=record, label="  %10 = or i32 %6, %9"];
	Node0xaeefe0[shape=record, label="  %11 = and i32 %7, %6"];
	Node0xaef050[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0xaef0c0[shape=record, label="  %13 = or i32 %7, %6"];
	Node0xaef130[shape=record, label="  %14 = and i32 %6, %9"];
	Node0xaef1a0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xaef210[shape=record, label="  %16 = shl i32 %10, 2"];
	Node0xaef280[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0xaef2f0[shape=record, label="  %18 = shl i32 %14, 2"];
	Node0xaef360[shape=record, label="  %19 = shl i32 %11, 2"];
	Node0xaef3d0[shape=record, label="  %20 = add i32 %8, %13"];
	Node0xaef440[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0xaef4b0[shape=record, label="  %22 = add i32 %6, 2"];
	Node0xaef520[shape=record, label="  %23 = add i32 %22, %7"];
	Node0xaef590[shape=record, label="  %24 = sub i32 %23, %8"];
	Node0xaef600[shape=record, label="  %25 = add i32 %24, %10"];
	Node0xaef670[shape=record, label="  %26 = add i32 %25, %12"];
	Node0xaef6e0[shape=record, label="  %27 = add i32 %26, %15"];
	Node0xaef750[shape=record, label="  %28 = add i32 %27, %13"];
	Node0xaef7c0[shape=record, label="  %29 = sub i32 %28, %18"];
	Node0xaef830[shape=record, label="  %30 = sub i32 %29, %19"];
	Node0xaef8a0[shape=record, label="  %31 = sub i32 %30, %17"];
	Node0xaef910[shape=record, label="  %32 = add i32 %31, %21"];
	Node0xaefb90[shape=record, label="  %33 = icmp eq i32 %32, -1"];
	Node0xa8d9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xaefc20[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xaefe78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xaeffd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xaf0098[shape=record, label="  ret i32 0"];
	Node0xaece38 -> Node0xaeceb8;
	Node0xaeceb8 -> Node0xaecf48;
	Node0xaecf48 -> Node0xaed3a8;
	Node0xaed3a8 -> Node0xaed488;
	Node0xaed488 -> Node0xaed5a8;
	Node0xaed5a8 -> Node0xaed7e0;
	Node0xaed7e0 -> Node0xaed898;
	Node0xaed898 -> Node0xaee808;
	Node0xaee808 -> Node0xaeee90;
	Node0xaeee90 -> Node0xaeef00;
	Node0xaeef00 -> Node0xaeef70;
	Node0xaeef70 -> Node0xaeefe0;
	Node0xaeefe0 -> Node0xaef050;
	Node0xaef050 -> Node0xaef0c0;
	Node0xaef0c0 -> Node0xaef130;
	Node0xaef130 -> Node0xaef1a0;
	Node0xaef1a0 -> Node0xaef210;
	Node0xaef210 -> Node0xaef280;
	Node0xaef280 -> Node0xaef2f0;
	Node0xaef2f0 -> Node0xaef360;
	Node0xaef360 -> Node0xaef3d0;
	Node0xaef3d0 -> Node0xaef440;
	Node0xaef440 -> Node0xaef4b0;
	Node0xaef4b0 -> Node0xaef520;
	Node0xaef520 -> Node0xaef590;
	Node0xaef590 -> Node0xaef600;
	Node0xaef600 -> Node0xaef670;
	Node0xaef670 -> Node0xaef6e0;
	Node0xaef6e0 -> Node0xaef750;
	Node0xaef750 -> Node0xaef7c0;
	Node0xaef7c0 -> Node0xaef830;
	Node0xaef830 -> Node0xaef8a0;
	Node0xaef8a0 -> Node0xaef910;
	Node0xaef910 -> Node0xaefb90;
	Node0xaefb90 -> Node0xa8d9d8;
	Node0xa8d9d8 -> Node0xaefc20;
	Node0xaefc20 -> Node0xaefe78;
	Node0xaefe78 -> Node0xaeffd8;
	Node0xaeffd8 -> Node0xaf0098;
edge [color=red]
	Node0xaece38 -> Node0xaecf48;
	Node0xaecf48 -> Node0xaed3a8;
	Node0xaeceb8 -> Node0xaed488;
	Node0xaed488 -> Node0xaed5a8;
	Node0xaece38 -> Node0xaed7e0;
	Node0xaeceb8 -> Node0xaed7e0;
	Node0xaece38 -> Node0xaed898;
	Node0xaeceb8 -> Node0xaee808;
	Node0xaee808 -> Node0xaeee90;
	Node0xaed898 -> Node0xaeee90;
	Node0xaee808 -> Node0xaeef00;
	Node0xaed898 -> Node0xaeef70;
	Node0xaeef00 -> Node0xaeef70;
	Node0xaee808 -> Node0xaeefe0;
	Node0xaed898 -> Node0xaeefe0;
	Node0xaeefe0 -> Node0xaef050;
	Node0xaee808 -> Node0xaef0c0;
	Node0xaed898 -> Node0xaef0c0;
	Node0xaed898 -> Node0xaef130;
	Node0xaeef00 -> Node0xaef130;
	Node0xaef130 -> Node0xaef1a0;
	Node0xaeef70 -> Node0xaef210;
	Node0xaef210 -> Node0xaef280;
	Node0xaef130 -> Node0xaef2f0;
	Node0xaeefe0 -> Node0xaef360;
	Node0xaeee90 -> Node0xaef3d0;
	Node0xaef0c0 -> Node0xaef3d0;
	Node0xaef3d0 -> Node0xaef440;
	Node0xaed898 -> Node0xaef4b0;
	Node0xaef4b0 -> Node0xaef520;
	Node0xaee808 -> Node0xaef520;
	Node0xaef520 -> Node0xaef590;
	Node0xaeee90 -> Node0xaef590;
	Node0xaef590 -> Node0xaef600;
	Node0xaeef70 -> Node0xaef600;
	Node0xaef600 -> Node0xaef670;
	Node0xaef050 -> Node0xaef670;
	Node0xaef670 -> Node0xaef6e0;
	Node0xaef1a0 -> Node0xaef6e0;
	Node0xaef6e0 -> Node0xaef750;
	Node0xaef0c0 -> Node0xaef750;
	Node0xaef750 -> Node0xaef7c0;
	Node0xaef2f0 -> Node0xaef7c0;
	Node0xaef7c0 -> Node0xaef830;
	Node0xaef360 -> Node0xaef830;
	Node0xaef830 -> Node0xaef8a0;
	Node0xaef280 -> Node0xaef8a0;
	Node0xaef8a0 -> Node0xaef910;
	Node0xaef440 -> Node0xaef910;
	Node0xaef910 -> Node0xaefb90;
	Node0xaefb90 -> Node0xa8d9d8;
	Node0xa8d9d8 -> Node0xaefc20;
	Node0xaed488 -> Node0xaefe78;
	Node0xaecf48 -> Node0xaeffd8;
}
