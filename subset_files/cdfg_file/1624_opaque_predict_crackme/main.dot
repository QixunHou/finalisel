digraph "DFG for'main' function" {
	Node0x240a898[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x240a918[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x240a9a8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x240ae08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x240aee8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x240b008[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x240b240[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x240b2f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x240c268[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x240c8f0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x240c960[shape=record, label="  %9 = sub i32 1, %8"];
	Node0x240c9d0[shape=record, label="  %10 = and i32 %7, %6"];
	Node0x240ca40[shape=record, label="  %11 = xor i32 %8, -1"];
	Node0x240cab0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x240cb20[shape=record, label="  %13 = or i32 %6, %12"];
	Node0x240cb90[shape=record, label="  %14 = and i32 %6, %12"];
	Node0x240cc00[shape=record, label="  %15 = shl i32 %10, 2"];
	Node0x240cc70[shape=record, label="  %16 = add i32 %13, %7"];
	Node0x240cce0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x240cd50[shape=record, label="  %18 = add i32 %6, 4"];
	Node0x240cdc0[shape=record, label="  %19 = add i32 %18, %10"];
	Node0x240ce30[shape=record, label="  %20 = add i32 %19, %11"];
	Node0x240cea0[shape=record, label="  %21 = sub i32 %20, %14"];
	Node0x240cf10[shape=record, label="  %22 = sub i32 %21, %15"];
	Node0x240cf80[shape=record, label="  %23 = add i32 %22, %17"];
	Node0x240cff0[shape=record, label="  %24 = icmp eq i32 %9, %23"];
	Node0x23ab9d8[shape=record, label="  %25 = select i1 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x240d080[shape=record, label="  %26 = call i32 @puts(i8* nonnull dereferenceable(1) %25) #5"];
	Node0x240d2d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x240d438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x240d4f8[shape=record, label="  ret i32 0"];
	Node0x240a898 -> Node0x240a918;
	Node0x240a918 -> Node0x240a9a8;
	Node0x240a9a8 -> Node0x240ae08;
	Node0x240ae08 -> Node0x240aee8;
	Node0x240aee8 -> Node0x240b008;
	Node0x240b008 -> Node0x240b240;
	Node0x240b240 -> Node0x240b2f8;
	Node0x240b2f8 -> Node0x240c268;
	Node0x240c268 -> Node0x240c8f0;
	Node0x240c8f0 -> Node0x240c960;
	Node0x240c960 -> Node0x240c9d0;
	Node0x240c9d0 -> Node0x240ca40;
	Node0x240ca40 -> Node0x240cab0;
	Node0x240cab0 -> Node0x240cb20;
	Node0x240cb20 -> Node0x240cb90;
	Node0x240cb90 -> Node0x240cc00;
	Node0x240cc00 -> Node0x240cc70;
	Node0x240cc70 -> Node0x240cce0;
	Node0x240cce0 -> Node0x240cd50;
	Node0x240cd50 -> Node0x240cdc0;
	Node0x240cdc0 -> Node0x240ce30;
	Node0x240ce30 -> Node0x240cea0;
	Node0x240cea0 -> Node0x240cf10;
	Node0x240cf10 -> Node0x240cf80;
	Node0x240cf80 -> Node0x240cff0;
	Node0x240cff0 -> Node0x23ab9d8;
	Node0x23ab9d8 -> Node0x240d080;
	Node0x240d080 -> Node0x240d2d8;
	Node0x240d2d8 -> Node0x240d438;
	Node0x240d438 -> Node0x240d4f8;
edge [color=red]
	Node0x240a898 -> Node0x240a9a8;
	Node0x240a9a8 -> Node0x240ae08;
	Node0x240a918 -> Node0x240aee8;
	Node0x240aee8 -> Node0x240b008;
	Node0x240a898 -> Node0x240b240;
	Node0x240a918 -> Node0x240b240;
	Node0x240a898 -> Node0x240b2f8;
	Node0x240a918 -> Node0x240c268;
	Node0x240c268 -> Node0x240c8f0;
	Node0x240b2f8 -> Node0x240c8f0;
	Node0x240c8f0 -> Node0x240c960;
	Node0x240c268 -> Node0x240c9d0;
	Node0x240b2f8 -> Node0x240c9d0;
	Node0x240c8f0 -> Node0x240ca40;
	Node0x240c268 -> Node0x240cab0;
	Node0x240b2f8 -> Node0x240cb20;
	Node0x240cab0 -> Node0x240cb20;
	Node0x240b2f8 -> Node0x240cb90;
	Node0x240cab0 -> Node0x240cb90;
	Node0x240c9d0 -> Node0x240cc00;
	Node0x240cb20 -> Node0x240cc70;
	Node0x240c268 -> Node0x240cc70;
	Node0x240cc70 -> Node0x240cce0;
	Node0x240b2f8 -> Node0x240cd50;
	Node0x240cd50 -> Node0x240cdc0;
	Node0x240c9d0 -> Node0x240cdc0;
	Node0x240cdc0 -> Node0x240ce30;
	Node0x240ca40 -> Node0x240ce30;
	Node0x240ce30 -> Node0x240cea0;
	Node0x240cb90 -> Node0x240cea0;
	Node0x240cea0 -> Node0x240cf10;
	Node0x240cc00 -> Node0x240cf10;
	Node0x240cf10 -> Node0x240cf80;
	Node0x240cce0 -> Node0x240cf80;
	Node0x240c960 -> Node0x240cff0;
	Node0x240cf80 -> Node0x240cff0;
	Node0x240cff0 -> Node0x23ab9d8;
	Node0x23ab9d8 -> Node0x240d080;
	Node0x240aee8 -> Node0x240d2d8;
	Node0x240a9a8 -> Node0x240d438;
}
