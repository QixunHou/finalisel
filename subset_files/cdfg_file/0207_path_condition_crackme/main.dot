digraph "DFG for'main' function" {
	Node0x1d45ce8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d45d68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d45df8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1d45e58[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1d45f08[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1d46338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d46418[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1d46518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d465d8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1d46688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1d46748[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1d467f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1d40b90[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1d469f8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d47968[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d47fd8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1d48038[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1d480b0[shape=record, label="  %14 = add i32 %11, 1"];
	Node0x1d48120[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0x1d48190[shape=record, label="  %16 = or i32 %11, %15"];
	Node0x1d48200[shape=record, label="  %17 = sub i32 %14, %16"];
	Node0x1d48270[shape=record, label="  %18 = or i32 %13, %10"];
	Node0x1d482e0[shape=record, label="  %19 = add i32 %17, %18"];
	Node0x1d48350[shape=record, label="  %20 = and i32 %11, %15"];
	Node0x1d483c0[shape=record, label="  %21 = and i32 %12, %11"];
	Node0x1d48430[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x1d484a0[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x1d48510[shape=record, label="  %24 = xor i32 %13, %10"];
	Node0x1d48580[shape=record, label="  %25 = xor i32 %10, -1"];
	Node0x1d485f0[shape=record, label="  %26 = or i32 %13, %25"];
	Node0x1d48660[shape=record, label="  %27 = and i32 %13, %10"];
	Node0x1d486d0[shape=record, label="  %28 = xor i32 %13, -1"];
	Node0x1d48740[shape=record, label="  %29 = and i32 %13, %25"];
	Node0x1d487b0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x1d48820[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x1d48890[shape=record, label="  %32 = xor i32 %26, -1"];
	Node0x1d48900[shape=record, label="  %33 = mul i32 %32, 6"];
	Node0x1d489a0[shape=record, label="  %34 = sub i32 2, %11"];
	Node0x1d48a10[shape=record, label="  %35 = add i32 %34, %23"];
	Node0x1d48a80[shape=record, label="  %36 = add i32 %35, %16"];
	Node0x1d48af0[shape=record, label="  %37 = add i32 %36, %29"];
	Node0x1d48b60[shape=record, label="  %38 = add i32 %37, %27"];
	Node0x1d48bd0[shape=record, label="  %39 = mul i32 %38, 3"];
	Node0x1d48c40[shape=record, label="  %40 = sub i32 %26, %24"];
	Node0x1d48cb0[shape=record, label="  %41 = shl i32 %40, 1"];
	Node0x1d48d20[shape=record, label="  %42 = sub i32 1, %10"];
	Node0x1d48d90[shape=record, label="  %43 = add i32 %42, %11"];
	Node0x1d48e00[shape=record, label="  %44 = sub i32 %43, %20"];
	Node0x1d48e70[shape=record, label="  %45 = add i32 %44, %22"];
	Node0x1d48ee0[shape=record, label="  %46 = add i32 %45, %23"];
	Node0x1d48f50[shape=record, label="  %47 = sub i32 %46, %13"];
	Node0x1d48fc0[shape=record, label="  %48 = add i32 %47, %28"];
	Node0x1d49030[shape=record, label="  %49 = add i32 %48, %27"];
	Node0x1d490a0[shape=record, label="  %50 = add i32 %49, %33"];
	Node0x1d49110[shape=record, label="  %51 = sub i32 %50, %31"];
	Node0x1d49180[shape=record, label="  %52 = add i32 %51, %41"];
	Node0x1d491f0[shape=record, label="  %53 = add i32 %52, %39"];
	Node0x1d49260[shape=record, label="  %54 = icmp eq i32 %19, %53"];
	Node0x1ce58b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d492f0[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x1d49598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1d496f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1d49808[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d49918[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d499d8[shape=record, label="  ret i32 0"];
	Node0x1d45ce8 -> Node0x1d45d68;
	Node0x1d45d68 -> Node0x1d45df8;
	Node0x1d45df8 -> Node0x1d45e58;
	Node0x1d45e58 -> Node0x1d45f08;
	Node0x1d45f08 -> Node0x1d46338;
	Node0x1d46338 -> Node0x1d46418;
	Node0x1d46418 -> Node0x1d46518;
	Node0x1d46518 -> Node0x1d465d8;
	Node0x1d465d8 -> Node0x1d46688;
	Node0x1d46688 -> Node0x1d46748;
	Node0x1d46748 -> Node0x1d467f8;
	Node0x1d467f8 -> Node0x1d40b90;
	Node0x1d40b90 -> Node0x1d469f8;
	Node0x1d469f8 -> Node0x1d47968;
	Node0x1d47968 -> Node0x1d47fd8;
	Node0x1d47fd8 -> Node0x1d48038;
	Node0x1d48038 -> Node0x1d480b0;
	Node0x1d480b0 -> Node0x1d48120;
	Node0x1d48120 -> Node0x1d48190;
	Node0x1d48190 -> Node0x1d48200;
	Node0x1d48200 -> Node0x1d48270;
	Node0x1d48270 -> Node0x1d482e0;
	Node0x1d482e0 -> Node0x1d48350;
	Node0x1d48350 -> Node0x1d483c0;
	Node0x1d483c0 -> Node0x1d48430;
	Node0x1d48430 -> Node0x1d484a0;
	Node0x1d484a0 -> Node0x1d48510;
	Node0x1d48510 -> Node0x1d48580;
	Node0x1d48580 -> Node0x1d485f0;
	Node0x1d485f0 -> Node0x1d48660;
	Node0x1d48660 -> Node0x1d486d0;
	Node0x1d486d0 -> Node0x1d48740;
	Node0x1d48740 -> Node0x1d487b0;
	Node0x1d487b0 -> Node0x1d48820;
	Node0x1d48820 -> Node0x1d48890;
	Node0x1d48890 -> Node0x1d48900;
	Node0x1d48900 -> Node0x1d489a0;
	Node0x1d489a0 -> Node0x1d48a10;
	Node0x1d48a10 -> Node0x1d48a80;
	Node0x1d48a80 -> Node0x1d48af0;
	Node0x1d48af0 -> Node0x1d48b60;
	Node0x1d48b60 -> Node0x1d48bd0;
	Node0x1d48bd0 -> Node0x1d48c40;
	Node0x1d48c40 -> Node0x1d48cb0;
	Node0x1d48cb0 -> Node0x1d48d20;
	Node0x1d48d20 -> Node0x1d48d90;
	Node0x1d48d90 -> Node0x1d48e00;
	Node0x1d48e00 -> Node0x1d48e70;
	Node0x1d48e70 -> Node0x1d48ee0;
	Node0x1d48ee0 -> Node0x1d48f50;
	Node0x1d48f50 -> Node0x1d48fc0;
	Node0x1d48fc0 -> Node0x1d49030;
	Node0x1d49030 -> Node0x1d490a0;
	Node0x1d490a0 -> Node0x1d49110;
	Node0x1d49110 -> Node0x1d49180;
	Node0x1d49180 -> Node0x1d491f0;
	Node0x1d491f0 -> Node0x1d49260;
	Node0x1d49260 -> Node0x1ce58b8;
	Node0x1ce58b8 -> Node0x1d492f0;
	Node0x1d492f0 -> Node0x1d49598;
	Node0x1d49598 -> Node0x1d496f8;
	Node0x1d496f8 -> Node0x1d49808;
	Node0x1d49808 -> Node0x1d49918;
	Node0x1d49918 -> Node0x1d499d8;
edge [color=red]
	Node0x1d45ce8 -> Node0x1d45f08;
	Node0x1d45f08 -> Node0x1d46338;
	Node0x1d45d68 -> Node0x1d46418;
	Node0x1d46418 -> Node0x1d46518;
	Node0x1d45df8 -> Node0x1d465d8;
	Node0x1d465d8 -> Node0x1d46688;
	Node0x1d45e58 -> Node0x1d46748;
	Node0x1d46748 -> Node0x1d467f8;
	Node0x1d45ce8 -> Node0x1d40b90;
	Node0x1d45d68 -> Node0x1d40b90;
	Node0x1d45df8 -> Node0x1d40b90;
	Node0x1d45e58 -> Node0x1d40b90;
	Node0x1d45ce8 -> Node0x1d469f8;
	Node0x1d45d68 -> Node0x1d47968;
	Node0x1d45df8 -> Node0x1d47fd8;
	Node0x1d45e58 -> Node0x1d48038;
	Node0x1d47968 -> Node0x1d480b0;
	Node0x1d47fd8 -> Node0x1d48120;
	Node0x1d47968 -> Node0x1d48190;
	Node0x1d48120 -> Node0x1d48190;
	Node0x1d480b0 -> Node0x1d48200;
	Node0x1d48190 -> Node0x1d48200;
	Node0x1d48038 -> Node0x1d48270;
	Node0x1d469f8 -> Node0x1d48270;
	Node0x1d48200 -> Node0x1d482e0;
	Node0x1d48270 -> Node0x1d482e0;
	Node0x1d47968 -> Node0x1d48350;
	Node0x1d48120 -> Node0x1d48350;
	Node0x1d47fd8 -> Node0x1d483c0;
	Node0x1d47968 -> Node0x1d483c0;
	Node0x1d483c0 -> Node0x1d48430;
	Node0x1d47fd8 -> Node0x1d484a0;
	Node0x1d47968 -> Node0x1d484a0;
	Node0x1d48038 -> Node0x1d48510;
	Node0x1d469f8 -> Node0x1d48510;
	Node0x1d469f8 -> Node0x1d48580;
	Node0x1d48038 -> Node0x1d485f0;
	Node0x1d48580 -> Node0x1d485f0;
	Node0x1d48038 -> Node0x1d48660;
	Node0x1d469f8 -> Node0x1d48660;
	Node0x1d48038 -> Node0x1d486d0;
	Node0x1d48038 -> Node0x1d48740;
	Node0x1d48580 -> Node0x1d48740;
	Node0x1d48740 -> Node0x1d487b0;
	Node0x1d487b0 -> Node0x1d48820;
	Node0x1d485f0 -> Node0x1d48890;
	Node0x1d48890 -> Node0x1d48900;
	Node0x1d47968 -> Node0x1d489a0;
	Node0x1d489a0 -> Node0x1d48a10;
	Node0x1d484a0 -> Node0x1d48a10;
	Node0x1d48a10 -> Node0x1d48a80;
	Node0x1d48190 -> Node0x1d48a80;
	Node0x1d48a80 -> Node0x1d48af0;
	Node0x1d48740 -> Node0x1d48af0;
	Node0x1d48af0 -> Node0x1d48b60;
	Node0x1d48660 -> Node0x1d48b60;
	Node0x1d48b60 -> Node0x1d48bd0;
	Node0x1d485f0 -> Node0x1d48c40;
	Node0x1d48510 -> Node0x1d48c40;
	Node0x1d48c40 -> Node0x1d48cb0;
	Node0x1d469f8 -> Node0x1d48d20;
	Node0x1d48d20 -> Node0x1d48d90;
	Node0x1d47968 -> Node0x1d48d90;
	Node0x1d48d90 -> Node0x1d48e00;
	Node0x1d48350 -> Node0x1d48e00;
	Node0x1d48e00 -> Node0x1d48e70;
	Node0x1d48430 -> Node0x1d48e70;
	Node0x1d48e70 -> Node0x1d48ee0;
	Node0x1d484a0 -> Node0x1d48ee0;
	Node0x1d48ee0 -> Node0x1d48f50;
	Node0x1d48038 -> Node0x1d48f50;
	Node0x1d48f50 -> Node0x1d48fc0;
	Node0x1d486d0 -> Node0x1d48fc0;
	Node0x1d48fc0 -> Node0x1d49030;
	Node0x1d48660 -> Node0x1d49030;
	Node0x1d49030 -> Node0x1d490a0;
	Node0x1d48900 -> Node0x1d490a0;
	Node0x1d490a0 -> Node0x1d49110;
	Node0x1d48820 -> Node0x1d49110;
	Node0x1d49110 -> Node0x1d49180;
	Node0x1d48cb0 -> Node0x1d49180;
	Node0x1d49180 -> Node0x1d491f0;
	Node0x1d48bd0 -> Node0x1d491f0;
	Node0x1d482e0 -> Node0x1d49260;
	Node0x1d491f0 -> Node0x1d49260;
	Node0x1d49260 -> Node0x1ce58b8;
	Node0x1ce58b8 -> Node0x1d492f0;
	Node0x1d46748 -> Node0x1d49598;
	Node0x1d465d8 -> Node0x1d496f8;
	Node0x1d46418 -> Node0x1d49808;
	Node0x1d45f08 -> Node0x1d49918;
}
