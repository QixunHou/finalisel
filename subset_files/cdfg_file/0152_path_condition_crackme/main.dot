digraph "DFG for'main' function" {
	Node0x1bb3b58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1bb3bd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1bb3c68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1bb3cc8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1bb4148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1bb68f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1bb69d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bb6a98[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1bb6b48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bb6da8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1bb6e68[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1bb7dd8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1bb8448[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1bb8540[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1bb8748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bb88a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bb89b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1bb8a78[shape=record, label="  ret i32 0"];
	Node0x1bb3b58 -> Node0x1bb3bd8;
	Node0x1bb3bd8 -> Node0x1bb3c68;
	Node0x1bb3c68 -> Node0x1bb3cc8;
	Node0x1bb3cc8 -> Node0x1bb4148;
	Node0x1bb4148 -> Node0x1bb68f8;
	Node0x1bb68f8 -> Node0x1bb69d8;
	Node0x1bb69d8 -> Node0x1bb6a98;
	Node0x1bb6a98 -> Node0x1bb6b48;
	Node0x1bb6b48 -> Node0x1bb6da8;
	Node0x1bb6da8 -> Node0x1bb6e68;
	Node0x1bb6e68 -> Node0x1bb7dd8;
	Node0x1bb7dd8 -> Node0x1bb8448;
	Node0x1bb8448 -> Node0x1bb8540;
	Node0x1bb8540 -> Node0x1bb8748;
	Node0x1bb8748 -> Node0x1bb88a8;
	Node0x1bb88a8 -> Node0x1bb89b8;
	Node0x1bb89b8 -> Node0x1bb8a78;
edge [color=red]
	Node0x1bb3b58 -> Node0x1bb3cc8;
	Node0x1bb3cc8 -> Node0x1bb4148;
	Node0x1bb3bd8 -> Node0x1bb68f8;
	Node0x1bb68f8 -> Node0x1bb69d8;
	Node0x1bb3c68 -> Node0x1bb6a98;
	Node0x1bb6a98 -> Node0x1bb6b48;
	Node0x1bb3b58 -> Node0x1bb6da8;
	Node0x1bb3bd8 -> Node0x1bb6da8;
	Node0x1bb3c68 -> Node0x1bb6da8;
	Node0x1bb3b58 -> Node0x1bb6e68;
	Node0x1bb3bd8 -> Node0x1bb7dd8;
	Node0x1bb3c68 -> Node0x1bb8448;
	Node0x1bb6e68 -> Node0x1bb8540;
	Node0x1bb7dd8 -> Node0x1bb8540;
	Node0x1bb8448 -> Node0x1bb8540;
	Node0x1bb6a98 -> Node0x1bb8748;
	Node0x1bb68f8 -> Node0x1bb88a8;
	Node0x1bb3cc8 -> Node0x1bb89b8;
}
