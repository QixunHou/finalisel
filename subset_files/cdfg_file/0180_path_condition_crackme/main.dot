digraph "DFG for'main' function" {
	Node0x6b1dc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x6b1e48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x6b1ed8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x6b2338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x6b2418[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x6b2538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6b2770[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x6b2828[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x6b3798[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x6b3e20[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x6b3e90[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0x6b3f00[shape=record, label="  %10 = shl i32 %8, 1"];
	Node0x6b3f70[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x6b3fe0[shape=record, label="  %12 = or i32 %7, %6"];
	Node0x6b4050[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x6b40c0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x6b4130[shape=record, label="  %15 = shl i32 %6, 1"];
	Node0x6b41a0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x6b4210[shape=record, label="  %17 = and i32 %6, %13"];
	Node0x6b4280[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x6b42f0[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x6b4360[shape=record, label="  %20 = mul i32 %19, -3"];
	Node0x6b43d0[shape=record, label="  %21 = mul i32 %17, 5"];
	Node0x6b4440[shape=record, label="  %22 = and i32 %7, %6"];
	Node0x6b44b0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x6b4520[shape=record, label="  %24 = sub i32 %19, %14"];
	Node0x6b4590[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x6b4600[shape=record, label="  %26 = add i32 %25, %18"];
	Node0x6b4670[shape=record, label="  %27 = add i32 %26, %9"];
	Node0x6b46e0[shape=record, label="  %28 = add i32 %27, %20"];
	Node0x6b4750[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x6b47c0[shape=record, label="  %30 = sub i32 %29, %23"];
	Node0x6b4830[shape=record, label="  %31 = add i32 %30, %11"];
	Node0x6b48a0[shape=record, label="  %32 = icmp eq i32 %31, -1"];
	Node0x6529d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6b4b40[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x6b4d98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6b4ef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x6b4fb8[shape=record, label="  ret i32 0"];
	Node0x6b1dc8 -> Node0x6b1e48;
	Node0x6b1e48 -> Node0x6b1ed8;
	Node0x6b1ed8 -> Node0x6b2338;
	Node0x6b2338 -> Node0x6b2418;
	Node0x6b2418 -> Node0x6b2538;
	Node0x6b2538 -> Node0x6b2770;
	Node0x6b2770 -> Node0x6b2828;
	Node0x6b2828 -> Node0x6b3798;
	Node0x6b3798 -> Node0x6b3e20;
	Node0x6b3e20 -> Node0x6b3e90;
	Node0x6b3e90 -> Node0x6b3f00;
	Node0x6b3f00 -> Node0x6b3f70;
	Node0x6b3f70 -> Node0x6b3fe0;
	Node0x6b3fe0 -> Node0x6b4050;
	Node0x6b4050 -> Node0x6b40c0;
	Node0x6b40c0 -> Node0x6b4130;
	Node0x6b4130 -> Node0x6b41a0;
	Node0x6b41a0 -> Node0x6b4210;
	Node0x6b4210 -> Node0x6b4280;
	Node0x6b4280 -> Node0x6b42f0;
	Node0x6b42f0 -> Node0x6b4360;
	Node0x6b4360 -> Node0x6b43d0;
	Node0x6b43d0 -> Node0x6b4440;
	Node0x6b4440 -> Node0x6b44b0;
	Node0x6b44b0 -> Node0x6b4520;
	Node0x6b4520 -> Node0x6b4590;
	Node0x6b4590 -> Node0x6b4600;
	Node0x6b4600 -> Node0x6b4670;
	Node0x6b4670 -> Node0x6b46e0;
	Node0x6b46e0 -> Node0x6b4750;
	Node0x6b4750 -> Node0x6b47c0;
	Node0x6b47c0 -> Node0x6b4830;
	Node0x6b4830 -> Node0x6b48a0;
	Node0x6b48a0 -> Node0x6529d8;
	Node0x6529d8 -> Node0x6b4b40;
	Node0x6b4b40 -> Node0x6b4d98;
	Node0x6b4d98 -> Node0x6b4ef8;
	Node0x6b4ef8 -> Node0x6b4fb8;
edge [color=red]
	Node0x6b1dc8 -> Node0x6b1ed8;
	Node0x6b1ed8 -> Node0x6b2338;
	Node0x6b1e48 -> Node0x6b2418;
	Node0x6b2418 -> Node0x6b2538;
	Node0x6b1dc8 -> Node0x6b2770;
	Node0x6b1e48 -> Node0x6b2770;
	Node0x6b1dc8 -> Node0x6b2828;
	Node0x6b1e48 -> Node0x6b3798;
	Node0x6b3798 -> Node0x6b3e20;
	Node0x6b2828 -> Node0x6b3e20;
	Node0x6b3e20 -> Node0x6b3e90;
	Node0x6b3e20 -> Node0x6b3f00;
	Node0x6b3f00 -> Node0x6b3f70;
	Node0x6b3798 -> Node0x6b3fe0;
	Node0x6b2828 -> Node0x6b3fe0;
	Node0x6b3798 -> Node0x6b4050;
	Node0x6b4050 -> Node0x6b40c0;
	Node0x6b2828 -> Node0x6b4130;
	Node0x6b4130 -> Node0x6b41a0;
	Node0x6b2828 -> Node0x6b4210;
	Node0x6b4050 -> Node0x6b4210;
	Node0x6b4210 -> Node0x6b4280;
	Node0x6b3fe0 -> Node0x6b42f0;
	Node0x6b42f0 -> Node0x6b4360;
	Node0x6b4210 -> Node0x6b43d0;
	Node0x6b3798 -> Node0x6b4440;
	Node0x6b2828 -> Node0x6b4440;
	Node0x6b4440 -> Node0x6b44b0;
	Node0x6b42f0 -> Node0x6b4520;
	Node0x6b40c0 -> Node0x6b4520;
	Node0x6b4520 -> Node0x6b4590;
	Node0x6b41a0 -> Node0x6b4590;
	Node0x6b4590 -> Node0x6b4600;
	Node0x6b4280 -> Node0x6b4600;
	Node0x6b4600 -> Node0x6b4670;
	Node0x6b3e90 -> Node0x6b4670;
	Node0x6b4670 -> Node0x6b46e0;
	Node0x6b4360 -> Node0x6b46e0;
	Node0x6b46e0 -> Node0x6b4750;
	Node0x6b43d0 -> Node0x6b4750;
	Node0x6b4750 -> Node0x6b47c0;
	Node0x6b44b0 -> Node0x6b47c0;
	Node0x6b47c0 -> Node0x6b4830;
	Node0x6b3f70 -> Node0x6b4830;
	Node0x6b4830 -> Node0x6b48a0;
	Node0x6b48a0 -> Node0x6529d8;
	Node0x6529d8 -> Node0x6b4b40;
	Node0x6b2418 -> Node0x6b4d98;
	Node0x6b1ed8 -> Node0x6b4ef8;
}
