digraph "DFG for'main' function" {
	Node0x1e2b1e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e2b268[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e2b2f8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e2b758[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e2b838[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e2b958[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e2bb90[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e2bc48[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e2cbb8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e2d240[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1e2d2b0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1e2d320[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x1e2d390[shape=record, label="  %11 = sub i32 %9, %10"];
	Node0x1e2d400[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1e2d470[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x1e2d4e0[shape=record, label="  %14 = shl i32 %10, 1"];
	Node0x1e2d550[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1e2d5c0[shape=record, label="  %16 = and i32 %6, %8"];
	Node0x1e2d630[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1e2d6a0[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x1e2d710[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1e2d780[shape=record, label="  %20 = shl i32 %18, 2"];
	Node0x1e2d7f0[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0x1e2d860[shape=record, label="  %22 = mul i32 %13, 3"];
	Node0x1e2d8d0[shape=record, label="  %23 = add i32 %16, %6"];
	Node0x1e2d940[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x1e2d9b0[shape=record, label="  %25 = sub i32 2, %6"];
	Node0x1e2da20[shape=record, label="  %26 = add i32 %25, %7"];
	Node0x1e2da90[shape=record, label="  %27 = add i32 %26, %13"];
	Node0x1e2db00[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x1e2db70[shape=record, label="  %29 = add i32 %28, %9"];
	Node0x1e2dbe0[shape=record, label="  %30 = sub i32 %29, %19"];
	Node0x1e2dc50[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x1e2dcc0[shape=record, label="  %32 = sub i32 %31, %15"];
	Node0x1e2dd30[shape=record, label="  %33 = add i32 %32, %21"];
	Node0x1e2dda0[shape=record, label="  %34 = add i32 %33, %24"];
	Node0x1e2de10[shape=record, label="  %35 = icmp eq i32 %12, %34"];
	Node0x1dcb9d8[shape=record, label="  %36 = select i1 %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e2dea0[shape=record, label="  %37 = call i32 @puts(i8* nonnull dereferenceable(1) %36) #5"];
	Node0x1e2e0f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e2e258[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e2e318[shape=record, label="  ret i32 0"];
	Node0x1e2b1e8 -> Node0x1e2b268;
	Node0x1e2b268 -> Node0x1e2b2f8;
	Node0x1e2b2f8 -> Node0x1e2b758;
	Node0x1e2b758 -> Node0x1e2b838;
	Node0x1e2b838 -> Node0x1e2b958;
	Node0x1e2b958 -> Node0x1e2bb90;
	Node0x1e2bb90 -> Node0x1e2bc48;
	Node0x1e2bc48 -> Node0x1e2cbb8;
	Node0x1e2cbb8 -> Node0x1e2d240;
	Node0x1e2d240 -> Node0x1e2d2b0;
	Node0x1e2d2b0 -> Node0x1e2d320;
	Node0x1e2d320 -> Node0x1e2d390;
	Node0x1e2d390 -> Node0x1e2d400;
	Node0x1e2d400 -> Node0x1e2d470;
	Node0x1e2d470 -> Node0x1e2d4e0;
	Node0x1e2d4e0 -> Node0x1e2d550;
	Node0x1e2d550 -> Node0x1e2d5c0;
	Node0x1e2d5c0 -> Node0x1e2d630;
	Node0x1e2d630 -> Node0x1e2d6a0;
	Node0x1e2d6a0 -> Node0x1e2d710;
	Node0x1e2d710 -> Node0x1e2d780;
	Node0x1e2d780 -> Node0x1e2d7f0;
	Node0x1e2d7f0 -> Node0x1e2d860;
	Node0x1e2d860 -> Node0x1e2d8d0;
	Node0x1e2d8d0 -> Node0x1e2d940;
	Node0x1e2d940 -> Node0x1e2d9b0;
	Node0x1e2d9b0 -> Node0x1e2da20;
	Node0x1e2da20 -> Node0x1e2da90;
	Node0x1e2da90 -> Node0x1e2db00;
	Node0x1e2db00 -> Node0x1e2db70;
	Node0x1e2db70 -> Node0x1e2dbe0;
	Node0x1e2dbe0 -> Node0x1e2dc50;
	Node0x1e2dc50 -> Node0x1e2dcc0;
	Node0x1e2dcc0 -> Node0x1e2dd30;
	Node0x1e2dd30 -> Node0x1e2dda0;
	Node0x1e2dda0 -> Node0x1e2de10;
	Node0x1e2de10 -> Node0x1dcb9d8;
	Node0x1dcb9d8 -> Node0x1e2dea0;
	Node0x1e2dea0 -> Node0x1e2e0f8;
	Node0x1e2e0f8 -> Node0x1e2e258;
	Node0x1e2e258 -> Node0x1e2e318;
edge [color=red]
	Node0x1e2b1e8 -> Node0x1e2b2f8;
	Node0x1e2b2f8 -> Node0x1e2b758;
	Node0x1e2b268 -> Node0x1e2b838;
	Node0x1e2b838 -> Node0x1e2b958;
	Node0x1e2b1e8 -> Node0x1e2bb90;
	Node0x1e2b268 -> Node0x1e2bb90;
	Node0x1e2b1e8 -> Node0x1e2bc48;
	Node0x1e2b268 -> Node0x1e2cbb8;
	Node0x1e2cbb8 -> Node0x1e2d240;
	Node0x1e2bc48 -> Node0x1e2d2b0;
	Node0x1e2d240 -> Node0x1e2d2b0;
	Node0x1e2cbb8 -> Node0x1e2d320;
	Node0x1e2bc48 -> Node0x1e2d320;
	Node0x1e2d2b0 -> Node0x1e2d390;
	Node0x1e2d320 -> Node0x1e2d390;
	Node0x1e2d390 -> Node0x1e2d400;
	Node0x1e2cbb8 -> Node0x1e2d470;
	Node0x1e2bc48 -> Node0x1e2d470;
	Node0x1e2d320 -> Node0x1e2d4e0;
	Node0x1e2d4e0 -> Node0x1e2d550;
	Node0x1e2bc48 -> Node0x1e2d5c0;
	Node0x1e2d240 -> Node0x1e2d5c0;
	Node0x1e2d5c0 -> Node0x1e2d630;
	Node0x1e2cbb8 -> Node0x1e2d6a0;
	Node0x1e2bc48 -> Node0x1e2d6a0;
	Node0x1e2d6a0 -> Node0x1e2d710;
	Node0x1e2d6a0 -> Node0x1e2d780;
	Node0x1e2d780 -> Node0x1e2d7f0;
	Node0x1e2d470 -> Node0x1e2d860;
	Node0x1e2d5c0 -> Node0x1e2d8d0;
	Node0x1e2bc48 -> Node0x1e2d8d0;
	Node0x1e2d8d0 -> Node0x1e2d940;
	Node0x1e2bc48 -> Node0x1e2d9b0;
	Node0x1e2d9b0 -> Node0x1e2da20;
	Node0x1e2cbb8 -> Node0x1e2da20;
	Node0x1e2da20 -> Node0x1e2da90;
	Node0x1e2d470 -> Node0x1e2da90;
	Node0x1e2da90 -> Node0x1e2db00;
	Node0x1e2d630 -> Node0x1e2db00;
	Node0x1e2db00 -> Node0x1e2db70;
	Node0x1e2d2b0 -> Node0x1e2db70;
	Node0x1e2db70 -> Node0x1e2dbe0;
	Node0x1e2d710 -> Node0x1e2dbe0;
	Node0x1e2dbe0 -> Node0x1e2dc50;
	Node0x1e2d860 -> Node0x1e2dc50;
	Node0x1e2dc50 -> Node0x1e2dcc0;
	Node0x1e2d550 -> Node0x1e2dcc0;
	Node0x1e2dcc0 -> Node0x1e2dd30;
	Node0x1e2d7f0 -> Node0x1e2dd30;
	Node0x1e2dd30 -> Node0x1e2dda0;
	Node0x1e2d940 -> Node0x1e2dda0;
	Node0x1e2d400 -> Node0x1e2de10;
	Node0x1e2dda0 -> Node0x1e2de10;
	Node0x1e2de10 -> Node0x1dcb9d8;
	Node0x1dcb9d8 -> Node0x1e2dea0;
	Node0x1e2b838 -> Node0x1e2e0f8;
	Node0x1e2b2f8 -> Node0x1e2e258;
}
