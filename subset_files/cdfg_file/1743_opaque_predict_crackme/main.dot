digraph "DFG for'main' function" {
	Node0x16b8eb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x16b8f38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x16b8fc8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x16b9028[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x16b90d8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x16b9508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x16b95e8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x16b96e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16b97a8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x16b9858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x16b9918[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x16b99c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x16b3800[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x16b9bc8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x16bab38[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x16bb1a8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x16bb208[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x16bb318[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x16bb578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x16bb6d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x16bb7e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16bb8f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x16bb9b8[shape=record, label="  ret i32 0"];
	Node0x16b8eb8 -> Node0x16b8f38;
	Node0x16b8f38 -> Node0x16b8fc8;
	Node0x16b8fc8 -> Node0x16b9028;
	Node0x16b9028 -> Node0x16b90d8;
	Node0x16b90d8 -> Node0x16b9508;
	Node0x16b9508 -> Node0x16b95e8;
	Node0x16b95e8 -> Node0x16b96e8;
	Node0x16b96e8 -> Node0x16b97a8;
	Node0x16b97a8 -> Node0x16b9858;
	Node0x16b9858 -> Node0x16b9918;
	Node0x16b9918 -> Node0x16b99c8;
	Node0x16b99c8 -> Node0x16b3800;
	Node0x16b3800 -> Node0x16b9bc8;
	Node0x16b9bc8 -> Node0x16bab38;
	Node0x16bab38 -> Node0x16bb1a8;
	Node0x16bb1a8 -> Node0x16bb208;
	Node0x16bb208 -> Node0x16bb318;
	Node0x16bb318 -> Node0x16bb578;
	Node0x16bb578 -> Node0x16bb6d8;
	Node0x16bb6d8 -> Node0x16bb7e8;
	Node0x16bb7e8 -> Node0x16bb8f8;
	Node0x16bb8f8 -> Node0x16bb9b8;
edge [color=red]
	Node0x16b8eb8 -> Node0x16b90d8;
	Node0x16b90d8 -> Node0x16b9508;
	Node0x16b8f38 -> Node0x16b95e8;
	Node0x16b95e8 -> Node0x16b96e8;
	Node0x16b8fc8 -> Node0x16b97a8;
	Node0x16b97a8 -> Node0x16b9858;
	Node0x16b9028 -> Node0x16b9918;
	Node0x16b9918 -> Node0x16b99c8;
	Node0x16b8eb8 -> Node0x16b3800;
	Node0x16b8f38 -> Node0x16b3800;
	Node0x16b8fc8 -> Node0x16b3800;
	Node0x16b9028 -> Node0x16b3800;
	Node0x16b8eb8 -> Node0x16b9bc8;
	Node0x16b8f38 -> Node0x16bab38;
	Node0x16b8fc8 -> Node0x16bb1a8;
	Node0x16b9028 -> Node0x16bb208;
	Node0x16b9bc8 -> Node0x16bb318;
	Node0x16bab38 -> Node0x16bb318;
	Node0x16bb1a8 -> Node0x16bb318;
	Node0x16bb208 -> Node0x16bb318;
	Node0x16b9918 -> Node0x16bb578;
	Node0x16b97a8 -> Node0x16bb6d8;
	Node0x16b95e8 -> Node0x16bb7e8;
	Node0x16b90d8 -> Node0x16bb8f8;
}
