digraph "DFG for'main' function" {
	Node0x92b698[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x92b718[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x92b7a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x92b808[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x92bc88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x92bd68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x92be68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x92bf28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x92bfd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x92c238[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x92c2f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x92c458[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x92c4b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x933fa0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x9341a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x934308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x934418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9344d8[shape=record, label="  ret i32 0"];
	Node0x92b698 -> Node0x92b718;
	Node0x92b718 -> Node0x92b7a8;
	Node0x92b7a8 -> Node0x92b808;
	Node0x92b808 -> Node0x92bc88;
	Node0x92bc88 -> Node0x92bd68;
	Node0x92bd68 -> Node0x92be68;
	Node0x92be68 -> Node0x92bf28;
	Node0x92bf28 -> Node0x92bfd8;
	Node0x92bfd8 -> Node0x92c238;
	Node0x92c238 -> Node0x92c2f8;
	Node0x92c2f8 -> Node0x92c458;
	Node0x92c458 -> Node0x92c4b8;
	Node0x92c4b8 -> Node0x933fa0;
	Node0x933fa0 -> Node0x9341a8;
	Node0x9341a8 -> Node0x934308;
	Node0x934308 -> Node0x934418;
	Node0x934418 -> Node0x9344d8;
edge [color=red]
	Node0x92b698 -> Node0x92b808;
	Node0x92b808 -> Node0x92bc88;
	Node0x92b718 -> Node0x92bd68;
	Node0x92bd68 -> Node0x92be68;
	Node0x92b7a8 -> Node0x92bf28;
	Node0x92bf28 -> Node0x92bfd8;
	Node0x92b698 -> Node0x92c238;
	Node0x92b718 -> Node0x92c238;
	Node0x92b7a8 -> Node0x92c238;
	Node0x92b698 -> Node0x92c2f8;
	Node0x92b718 -> Node0x92c458;
	Node0x92b7a8 -> Node0x92c4b8;
	Node0x92c2f8 -> Node0x933fa0;
	Node0x92c458 -> Node0x933fa0;
	Node0x92c4b8 -> Node0x933fa0;
	Node0x92bf28 -> Node0x9341a8;
	Node0x92bd68 -> Node0x934308;
	Node0x92b808 -> Node0x934418;
}
