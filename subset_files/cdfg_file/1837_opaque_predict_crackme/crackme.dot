digraph "DFG for'crackme' function" {
	Node0x1491fe0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1492050[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x14920c0[shape=record, label="  %7 = sub i32 %6, %0"];
	Node0x1492130[shape=record, label="  %8 = xor i32 %2, %1"];
	Node0x14921d0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x1492270[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x14922e0[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x1492350[shape=record, label="  %12 = and i32 %5, %1"];
	Node0x14923c0[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x1492460[shape=record, label="  %14 = mul i32 %13, 3"];
	Node0x14924d0[shape=record, label="  %15 = and i32 %3, %0"];
	Node0x1492540[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x14925b0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1492650[shape=record, label="  %18 = xor i32 %0, 2147483647"];
	Node0x14926c0[shape=record, label="  %19 = or i32 %18, %3"];
	Node0x1492730[shape=record, label="  %20 = xor i32 %3, -1"];
	Node0x14927a0[shape=record, label="  %21 = xor i32 %3, %0"];
	Node0x1492810[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x1492880[shape=record, label="  %23 = or i32 %20, %0"];
	Node0x14928f0[shape=record, label="  %24 = add i32 %21, %5"];
	Node0x1492960[shape=record, label="  %25 = add i32 %24, %19"];
	Node0x14929d0[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x1492a40[shape=record, label="  %27 = add i32 %11, %12"];
	Node0x1492ab0[shape=record, label="  %28 = add i32 %27, %3"];
	Node0x1492b20[shape=record, label="  %29 = sub i32 %20, %28"];
	Node0x1492b90[shape=record, label="  %30 = add i32 %29, %14"];
	Node0x1492c00[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x1492c70[shape=record, label="  %32 = sub i32 %31, %23"];
	Node0x1492ef0[shape=record, label="  %33 = sub i32 %32, %15"];
	Node0x1492f60[shape=record, label="  %34 = sub i32 %33, %10"];
	Node0x1492fd0[shape=record, label="  %35 = sub i32 %34, %17"];
	Node0x1493040[shape=record, label="  %36 = add i32 %35, %26"];
	Node0x14930b0[shape=record, label="  %37 = icmp eq i32 %7, %36"];
	Node0x1432268[shape=record, label="  %38 = select i1 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1493550[shape=record, label="  %39 = tail call i32 @puts(i8* nonnull dereferenceable(1) %38)"];
	Node0x14935a0[shape=record, label="  ret void"];
	Node0x1491fe0 -> Node0x1492050;
	Node0x1492050 -> Node0x14920c0;
	Node0x14920c0 -> Node0x1492130;
	Node0x1492130 -> Node0x14921d0;
	Node0x14921d0 -> Node0x1492270;
	Node0x1492270 -> Node0x14922e0;
	Node0x14922e0 -> Node0x1492350;
	Node0x1492350 -> Node0x14923c0;
	Node0x14923c0 -> Node0x1492460;
	Node0x1492460 -> Node0x14924d0;
	Node0x14924d0 -> Node0x1492540;
	Node0x1492540 -> Node0x14925b0;
	Node0x14925b0 -> Node0x1492650;
	Node0x1492650 -> Node0x14926c0;
	Node0x14926c0 -> Node0x1492730;
	Node0x1492730 -> Node0x14927a0;
	Node0x14927a0 -> Node0x1492810;
	Node0x1492810 -> Node0x1492880;
	Node0x1492880 -> Node0x14928f0;
	Node0x14928f0 -> Node0x1492960;
	Node0x1492960 -> Node0x14929d0;
	Node0x14929d0 -> Node0x1492a40;
	Node0x1492a40 -> Node0x1492ab0;
	Node0x1492ab0 -> Node0x1492b20;
	Node0x1492b20 -> Node0x1492b90;
	Node0x1492b90 -> Node0x1492c00;
	Node0x1492c00 -> Node0x1492c70;
	Node0x1492c70 -> Node0x1492ef0;
	Node0x1492ef0 -> Node0x1492f60;
	Node0x1492f60 -> Node0x1492fd0;
	Node0x1492fd0 -> Node0x1493040;
	Node0x1493040 -> Node0x14930b0;
	Node0x14930b0 -> Node0x1432268;
	Node0x1432268 -> Node0x1493550;
	Node0x1493550 -> Node0x14935a0;
edge [color=red]
	Node0x1491fe0 -> Node0x1492050;
	Node0x1492050 -> Node0x14920c0;
	Node0x1492130 -> Node0x14921d0;
	Node0x14921d0 -> Node0x1492270;
	Node0x1491fe0 -> Node0x1492350;
	Node0x14923c0 -> Node0x1492460;
	Node0x14924d0 -> Node0x1492540;
	Node0x1492540 -> Node0x14925b0;
	Node0x1492650 -> Node0x14926c0;
	Node0x14927a0 -> Node0x1492810;
	Node0x1492730 -> Node0x1492880;
	Node0x14927a0 -> Node0x14928f0;
	Node0x1491fe0 -> Node0x14928f0;
	Node0x14928f0 -> Node0x1492960;
	Node0x14926c0 -> Node0x1492960;
	Node0x1492960 -> Node0x14929d0;
	Node0x14922e0 -> Node0x1492a40;
	Node0x1492350 -> Node0x1492a40;
	Node0x1492a40 -> Node0x1492ab0;
	Node0x1492730 -> Node0x1492b20;
	Node0x1492ab0 -> Node0x1492b20;
	Node0x1492b20 -> Node0x1492b90;
	Node0x1492460 -> Node0x1492b90;
	Node0x1492b90 -> Node0x1492c00;
	Node0x1492810 -> Node0x1492c00;
	Node0x1492c00 -> Node0x1492c70;
	Node0x1492880 -> Node0x1492c70;
	Node0x1492c70 -> Node0x1492ef0;
	Node0x14924d0 -> Node0x1492ef0;
	Node0x1492ef0 -> Node0x1492f60;
	Node0x1492270 -> Node0x1492f60;
	Node0x1492f60 -> Node0x1492fd0;
	Node0x14925b0 -> Node0x1492fd0;
	Node0x1492fd0 -> Node0x1493040;
	Node0x14929d0 -> Node0x1493040;
	Node0x14920c0 -> Node0x14930b0;
	Node0x1493040 -> Node0x14930b0;
	Node0x14930b0 -> Node0x1432268;
	Node0x1432268 -> Node0x1493550;
}
