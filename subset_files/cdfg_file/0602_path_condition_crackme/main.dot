digraph "DFG for'main' function" {
	Node0x1d48278[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d482f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d48388[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1d483e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1d4f1b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d4f298[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1d4f398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d4f458[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1d4f508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d4f768[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1d4f828[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d50798[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d50e08[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1d50f00[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1d51108[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d51268[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d51378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d51438[shape=record, label="  ret i32 0"];
	Node0x1d48278 -> Node0x1d482f8;
	Node0x1d482f8 -> Node0x1d48388;
	Node0x1d48388 -> Node0x1d483e8;
	Node0x1d483e8 -> Node0x1d4f1b8;
	Node0x1d4f1b8 -> Node0x1d4f298;
	Node0x1d4f298 -> Node0x1d4f398;
	Node0x1d4f398 -> Node0x1d4f458;
	Node0x1d4f458 -> Node0x1d4f508;
	Node0x1d4f508 -> Node0x1d4f768;
	Node0x1d4f768 -> Node0x1d4f828;
	Node0x1d4f828 -> Node0x1d50798;
	Node0x1d50798 -> Node0x1d50e08;
	Node0x1d50e08 -> Node0x1d50f00;
	Node0x1d50f00 -> Node0x1d51108;
	Node0x1d51108 -> Node0x1d51268;
	Node0x1d51268 -> Node0x1d51378;
	Node0x1d51378 -> Node0x1d51438;
edge [color=red]
	Node0x1d48278 -> Node0x1d483e8;
	Node0x1d483e8 -> Node0x1d4f1b8;
	Node0x1d482f8 -> Node0x1d4f298;
	Node0x1d4f298 -> Node0x1d4f398;
	Node0x1d48388 -> Node0x1d4f458;
	Node0x1d4f458 -> Node0x1d4f508;
	Node0x1d48278 -> Node0x1d4f768;
	Node0x1d482f8 -> Node0x1d4f768;
	Node0x1d48388 -> Node0x1d4f768;
	Node0x1d48278 -> Node0x1d4f828;
	Node0x1d482f8 -> Node0x1d50798;
	Node0x1d48388 -> Node0x1d50e08;
	Node0x1d4f828 -> Node0x1d50f00;
	Node0x1d50798 -> Node0x1d50f00;
	Node0x1d50e08 -> Node0x1d50f00;
	Node0x1d4f458 -> Node0x1d51108;
	Node0x1d4f298 -> Node0x1d51268;
	Node0x1d483e8 -> Node0x1d51378;
}
