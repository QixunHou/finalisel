; ModuleID = '../.././c_source_file/0602_path_condition_crackme.c'
source_filename = "../.././c_source_file/0602_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %2, -1
  %5 = and i32 %4, %0
  %6 = xor i32 %5, -1
  %7 = and i32 %6, %1
  %8 = shl i32 %7, 1
  %9 = and i32 %2, %1
  %10 = or i32 %9, %0
  %11 = or i32 %1, %0
  %12 = and i32 %1, %0
  %13 = or i32 %2, %1
  %14 = xor i32 %13, -1
  %15 = or i32 %12, %14
  %16 = xor i32 %1, -1
  %17 = or i32 %16, %0
  %18 = xor i32 %17, -1
  %19 = xor i32 %2, %0
  %20 = xor i32 %19, -1
  %21 = or i32 %20, %18
  %22 = or i32 %4, %1
  %23 = xor i32 %22, %0
  %24 = xor i32 %13, %12
  %25 = and i32 %2, %0
  %26 = xor i32 %25, %11
  %27 = xor i32 %2, %1
  %28 = or i32 %27, %12
  %29 = xor i32 %0, -1
  %30 = or i32 %22, %29
  %31 = or i32 %4, %18
  %32 = shl i32 %31, 1
  %33 = and i32 %27, %11
  %34 = and i32 %9, %0
  %35 = and i32 %27, %29
  %36 = or i32 %34, %35
  %37 = or i32 %2, %0
  %38 = xor i32 %37, -1
  %39 = or i32 %38, %16
  %40 = xor i32 %9, -1
  %41 = xor i32 %40, %0
  %42 = xor i32 %5, %40
  %43 = and i32 %16, %0
  %44 = xor i32 %22, -1
  %45 = add i32 %22, 1
  %46 = and i32 %9, %29
  %47 = and i32 %13, %0
  %48 = or i32 %46, %47
  %49 = xor i32 %1, %0
  %50 = xor i32 %49, -1
  %51 = or i32 %20, %50
  %52 = or i32 %27, %0
  %53 = or i32 %49, %4
  %54 = and i32 %6, %16
  %55 = add i32 %49, 1
  %56 = or i32 %12, %44
  %57 = xor i32 %27, -1
  %58 = and i32 %17, %57
  %59 = or i32 %4, %0
  %60 = xor i32 %59, -1
  %61 = shl i32 %60, 1
  %62 = and i32 %4, %1
  %63 = xor i32 %62, -1
  %64 = add i32 %62, 1
  %65 = and i32 %13, %29
  %66 = or i32 %57, %18
  %67 = shl i32 %66, 1
  %68 = and i32 %37, %49
  %69 = or i32 %40, %29
  %70 = or i32 %4, %50
  %71 = or i32 %43, %2
  %72 = xor i32 %11, -1
  %73 = or i32 %19, %72
  %74 = add i32 %19, 1
  %75 = and i32 %16, %2
  %76 = and i32 %75, %0
  %77 = xor i32 %27, %0
  %78 = or i32 %76, %77
  %79 = shl i32 %78, 1
  %80 = xor i32 %37, %12
  %81 = xor i32 %25, %13
  %82 = shl i32 %81, 1
  %83 = and i32 %17, %20
  %84 = and i32 %11, %57
  %85 = xor i32 %25, -1
  %86 = and i32 %49, %85
  %87 = or i32 %44, %0
  %88 = and i32 %85, %1
  %89 = or i32 %44, %29
  %90 = and i32 %49, %2
  %91 = or i32 %19, %12
  %92 = or i32 %34, %65
  %93 = and i32 %85, %16
  %94 = and i32 %59, %16
  %95 = shl i32 %94, 1
  %96 = and i32 %63, %0
  %97 = or i32 %25, %1
  %98 = and i32 %49, %20
  %99 = xor i32 %12, -1
  %100 = xor i32 %99, %2
  %101 = and i32 %27, %0
  %102 = or i32 %46, %101
  %103 = shl i32 %102, 1
  %104 = xor i32 %43, -1
  %105 = and i32 %19, %104
  %106 = add i32 %9, 1
  %107 = or i32 %25, %72
  %108 = shl i32 %85, 1
  %109 = or i32 %5, %16
  %110 = or i32 %60, %1
  %111 = shl i32 %110, 1
  %112 = or i32 %25, %62
  %113 = or i32 %14, %29
  %114 = shl i32 %113, 2
  %115 = xor i32 %104, %2
  %116 = or i32 %49, %60
  %117 = xor i32 %76, %52
  %118 = or i32 %60, %16
  %119 = and i32 %20, %1
  %120 = and i32 %27, %17
  %121 = and i32 %57, %99
  %122 = add i32 %5, 1
  %123 = or i32 %27, %29
  %124 = xor i32 %38, %1
  %125 = xor i32 %13, %0
  %126 = or i32 %34, %125
  %127 = and i32 %20, %99
  %128 = and i32 %11, %4
  %129 = xor i32 %34, -1
  %130 = xor i32 %35, %129
  %131 = and i32 %17, %4
  %132 = or i32 %22, %0
  %133 = or i32 %19, %1
  %134 = or i32 %62, %0
  %135 = or i32 %5, %1
  %136 = shl i32 %135, 1
  %137 = and i32 %59, %1
  %138 = xor i32 %59, %1
  %139 = and i32 %22, %29
  %140 = or i32 %16, %2
  %141 = and i32 %140, %29
  %142 = xor i32 %76, -1
  %143 = xor i32 %141, %142
  %144 = xor i32 %77, -1
  %145 = xor i32 %76, %144
  %146 = xor i32 %60, %1
  %147 = or i32 %57, %0
  %148 = xor i32 %34, %77
  %149 = and i32 %37, %16
  %150 = or i32 %43, %4
  %151 = xor i32 %5, %22
  %152 = or i32 %12, %57
  %153 = shl i32 %152, 1
  %154 = or i32 %5, %44
  %155 = and i32 %57, %29
  %156 = and i32 %11, %20
  %157 = or i32 %5, %9
  %158 = or i32 %13, %0
  %159 = or i32 %40, %0
  %160 = and i32 %22, %0
  %161 = or i32 %34, %144
  %162 = or i32 %25, %14
  %163 = or i32 %4, %72
  %164 = or i32 %57, %72
  %165 = or i32 %76, %141
  %166 = xor i32 %43, %2
  %167 = or i32 %12, %4
  %168 = and i32 %17, %2
  %169 = or i32 %63, %29
  %170 = and i32 %63, %29
  %171 = xor i32 %6, %1
  %172 = xor i32 %25, %17
  %173 = and i32 %75, %29
  %174 = and i32 %140, %0
  %175 = or i32 %173, %174
  %176 = xor i32 %25, %63
  %177 = shl i32 %176, 1
  %178 = and i32 %19, %49
  %179 = xor i32 %140, %0
  %180 = xor i32 %179, %142
  %181 = and i32 %99, %2
  %182 = xor i32 %5, %1
  %183 = xor i32 %11, %2
  %184 = add i32 %43, 1
  %185 = and i32 %4, %50
  %186 = and i32 %40, %29
  %187 = or i32 %12, %20
  %188 = xor i32 %44, %0
  %189 = shl i32 %188, 1
  %190 = or i32 %62, %43
  %191 = and i32 %4, %99
  %192 = or i32 %12, %2
  %193 = shl i32 %192, 1
  %194 = and i32 %11, %2
  %195 = shl i32 %194, 1
  %196 = xor i32 %63, %0
  %197 = and i32 %19, %17
  %198 = or i32 %76, %179
  %199 = shl i32 %198, 1
  %200 = or i32 %43, %57
  %201 = or i32 %25, %18
  %202 = or i32 %72, %2
  %203 = shl i32 %202, 1
  %204 = or i32 %12, %60
  %205 = or i32 %5, %50
  %206 = and i32 %20, %50
  %207 = and i32 %57, %0
  %208 = shl i32 %13, 1
  %209 = xor i32 %123, -1
  %210 = or i32 %173, %209
  %211 = and i32 %50, %2
  %212 = and i32 %27, %104
  %213 = or i32 %57, %29
  %214 = xor i32 %18, %2
  %215 = xor i32 %37, %1
  %216 = xor i32 %72, %2
  %217 = or i32 %38, %1
  %218 = or i32 %49, %2
  %219 = or i32 %49, %38
  %220 = xor i32 %174, 2147483647
  %221 = xor i32 %220, %173
  %222 = and i32 %49, %4
  %223 = or i32 %25, %49
  %224 = or i32 %19, %43
  %225 = or i32 %62, %29
  %226 = and i32 %20, %104
  %227 = and i32 %6, %50
  %228 = shl i32 %227, 2
  %229 = and i32 %59, %50
  %230 = or i32 %19, %18
  %231 = and i32 %40, %0
  %232 = or i32 %27, %18
  %233 = xor i32 %47, -1
  %234 = xor i32 %46, %233
  %235 = and i32 %20, %16
  %236 = or i32 %20, %16
  %237 = and i32 %27, %99
  %238 = shl i32 %237, 1
  %239 = or i32 %63, %0
  %240 = shl i32 %239, 1
  %241 = and i32 %57, %104
  %242 = or i32 %27, %43
  %243 = xor i32 %43, %40
  %244 = or i32 %19, %50
  %245 = shl i32 %244, 1
  %246 = or i32 %50, %2
  %247 = xor i32 %62, %0
  %248 = xor i32 %25, %1
  %249 = xor i32 %59, %12
  %250 = or i32 %38, %50
  %251 = xor i32 %125, %129
  %252 = or i32 %19, %49
  %253 = and i32 %19, %99
  %254 = shl i32 %253, 1
  %255 = xor i32 %52, -1
  %256 = or i32 %76, %255
  %257 = or i32 %9, %29
  %258 = or i32 %25, %50
  %259 = xor i32 %22, %12
  %260 = and i32 %4, %104
  %261 = xor i32 %43, %63
  %262 = or i32 %12, %38
  %263 = and i32 %49, %6
  %264 = and i32 %104, %2
  %265 = and i32 %37, %1
  %266 = add i32 %12, 1
  %267 = xor i32 %101, 2147483647
  %268 = xor i32 %267, %46
  %269 = and i32 %19, %11
  %270 = and i32 %37, %50
  %271 = or i32 %9, %43
  %272 = add i32 %27, 1
  %273 = or i32 %20, %72
  %274 = xor i32 %85, %1
  %275 = or i32 %14, %0
  %276 = xor i32 %173, %123
  %277 = shl i32 %276, 1
  %278 = or i32 %5, %49
  %279 = or i32 %13, %29
  %280 = or i32 %25, %16
  %281 = xor i32 %57, %0
  %282 = or i32 %19, %16
  %283 = or i32 %18, %2
  %284 = xor i32 %9, %0
  %285 = xor i32 %14, %0
  %286 = or i32 %27, %72
  %287 = xor i32 %12, %2
  %288 = xor i32 %65, %129
  %289 = and i32 %14, %29
  %290 = and i32 %14, %0
  %291 = and i32 %44, %29
  %292 = mul i32 %291, 10
  %293 = mul i32 %46, 7
  %294 = and i32 %44, %0
  %295 = mul i32 %34, 19
  %296 = add i32 %19, %2
  %297 = add i32 %296, %38
  %298 = add i32 %297, %181
  %299 = add i32 %298, %59
  %300 = add i32 %299, %282
  %301 = add i32 %300, %230
  %302 = add i32 %301, %213
  %303 = add i32 %302, %201
  %304 = add i32 %303, %196
  %305 = add i32 %304, %190
  %306 = add i32 %305, %186
  %307 = add i32 %306, %182
  %308 = add i32 %307, %158
  %309 = add i32 %308, %155
  %310 = add i32 %309, %132
  %311 = add i32 %310, %120
  %312 = add i32 %311, %101
  %313 = add i32 %312, %107
  %314 = add i32 %313, %93
  %315 = add i32 %314, %84
  %316 = add i32 %315, %148
  %317 = add i32 %316, %221
  %318 = add i32 %317, %268
  %319 = shl i32 %318, 1
  %320 = sub i32 %219, %62
  %321 = sub i32 %320, %164
  %322 = sub i32 %321, %98
  %323 = add i32 %322, %165
  %324 = mul i32 %323, 5
  %325 = sub i32 %225, %264
  %326 = add i32 %325, %124
  %327 = add i32 %326, %96
  %328 = add i32 %327, %83
  %329 = sub i32 %328, %256
  %330 = mul i32 %329, 3
  %331 = add i32 %28, %185
  %332 = add i32 %331, %86
  %333 = shl i32 %332, 2
  %334 = add i32 %294, %289
  %335 = mul i32 %334, -9
  %336 = sub i32 -3, %11
  %337 = add i32 %336, %43
  %338 = add i32 %337, %55
  %339 = add i32 %338, %4
  %340 = add i32 %339, %184
  %341 = sub i32 %340, %49
  %342 = add i32 %341, %12
  %343 = add i32 %342, %266
  %344 = add i32 %343, %45
  %345 = add i32 %344, %53
  %346 = add i32 %345, %64
  %347 = add i32 %346, %70
  %348 = add i32 %347, %71
  %349 = add i32 %348, %74
  %350 = add i32 %349, %90
  %351 = sub i32 %350, %100
  %352 = add i32 %351, %106
  %353 = add i32 %352, %115
  %354 = add i32 %353, %122
  %355 = sub i32 %354, %128
  %356 = add i32 %355, %131
  %357 = sub i32 %356, %150
  %358 = add i32 %357, %163
  %359 = sub i32 %358, %166
  %360 = sub i32 %359, %167
  %361 = sub i32 %360, %168
  %362 = add i32 %361, %183
  %363 = sub i32 %362, %22
  %364 = sub i32 %363, %27
  %365 = add i32 %364, %9
  %366 = add i32 %365, %191
  %367 = add i32 %366, %211
  %368 = sub i32 %367, %214
  %369 = sub i32 %368, %216
  %370 = add i32 %369, %218
  %371 = add i32 %370, %14
  %372 = sub i32 %371, %222
  %373 = sub i32 %372, %25
  %374 = sub i32 %373, %37
  %375 = add i32 %374, %246
  %376 = sub i32 %375, %260
  %377 = add i32 %376, %272
  %378 = sub i32 %377, %283
  %379 = add i32 %378, %287
  %380 = sub i32 %379, %10
  %381 = sub i32 %380, %15
  %382 = sub i32 %381, %21
  %383 = add i32 %382, %23
  %384 = add i32 %383, %24
  %385 = sub i32 %384, %26
  %386 = add i32 %385, %30
  %387 = sub i32 %386, %32
  %388 = sub i32 %387, %33
  %389 = sub i32 %388, %39
  %390 = add i32 %389, %41
  %391 = sub i32 %390, %42
  %392 = sub i32 %391, %51
  %393 = sub i32 %392, %52
  %394 = sub i32 %393, %54
  %395 = sub i32 %394, %56
  %396 = sub i32 %395, %58
  %397 = sub i32 %396, %61
  %398 = sub i32 %397, %65
  %399 = sub i32 %398, %68
  %400 = sub i32 %399, %69
  %401 = add i32 %400, %73
  %402 = sub i32 %401, %80
  %403 = add i32 %402, %87
  %404 = sub i32 %403, %88
  %405 = add i32 %404, %89
  %406 = sub i32 %405, %91
  %407 = sub i32 %406, %97
  %408 = sub i32 %407, %105
  %409 = sub i32 %408, %108
  %410 = add i32 %409, %109
  %411 = sub i32 %410, %112
  %412 = sub i32 %411, %116
  %413 = sub i32 %412, %118
  %414 = sub i32 %413, %119
  %415 = add i32 %414, %121
  %416 = add i32 %415, %123
  %417 = sub i32 %416, %127
  %418 = sub i32 %417, %133
  %419 = sub i32 %418, %134
  %420 = sub i32 %419, %137
  %421 = sub i32 %420, %138
  %422 = add i32 %421, %139
  %423 = add i32 %422, %146
  %424 = add i32 %423, %147
  %425 = sub i32 %424, %77
  %426 = sub i32 %425, %149
  %427 = sub i32 %426, %151
  %428 = add i32 %427, %154
  %429 = add i32 %428, %156
  %430 = add i32 %429, %157
  %431 = add i32 %430, %159
  %432 = sub i32 %431, %160
  %433 = sub i32 %432, %162
  %434 = add i32 %433, %47
  %435 = add i32 %434, %169
  %436 = sub i32 %435, %125
  %437 = add i32 %436, %170
  %438 = sub i32 %437, %171
  %439 = sub i32 %438, %172
  %440 = sub i32 %439, %178
  %441 = sub i32 %440, %187
  %442 = sub i32 %441, %193
  %443 = sub i32 %442, %195
  %444 = add i32 %443, %197
  %445 = add i32 %444, %200
  %446 = sub i32 %445, %203
  %447 = add i32 %446, %204
  %448 = sub i32 %447, %205
  %449 = sub i32 %448, %206
  %450 = add i32 %449, %207
  %451 = sub i32 %450, %208
  %452 = add i32 %451, %212
  %453 = add i32 %452, %215
  %454 = sub i32 %453, %217
  %455 = add i32 %454, %223
  %456 = add i32 %455, %224
  %457 = add i32 %456, %226
  %458 = add i32 %457, %229
  %459 = sub i32 %458, %231
  %460 = sub i32 %459, %232
  %461 = add i32 %460, %235
  %462 = add i32 %461, %236
  %463 = sub i32 %462, %241
  %464 = add i32 %463, %242
  %465 = sub i32 %464, %243
  %466 = add i32 %465, %247
  %467 = add i32 %466, %248
  %468 = add i32 %467, %249
  %469 = sub i32 %468, %250
  %470 = sub i32 %469, %252
  %471 = add i32 %470, %257
  %472 = sub i32 %471, %258
  %473 = add i32 %472, %259
  %474 = sub i32 %473, %261
  %475 = sub i32 %474, %262
  %476 = add i32 %475, %263
  %477 = add i32 %476, %265
  %478 = sub i32 %477, %269
  %479 = add i32 %478, %270
  %480 = sub i32 %479, %271
  %481 = add i32 %480, %273
  %482 = sub i32 %481, %274
  %483 = add i32 %482, %275
  %484 = add i32 %483, %278
  %485 = add i32 %484, %279
  %486 = add i32 %485, %280
  %487 = add i32 %486, %281
  %488 = add i32 %487, %284
  %489 = sub i32 %488, %285
  %490 = add i32 %489, %286
  %491 = sub i32 %490, %290
  %492 = sub i32 %491, %36
  %493 = add i32 %492, %48
  %494 = sub i32 %493, %67
  %495 = sub i32 %494, %82
  %496 = add i32 %495, %92
  %497 = sub i32 %496, %95
  %498 = sub i32 %497, %111
  %499 = sub i32 %498, %114
  %500 = sub i32 %499, %117
  %501 = add i32 %500, %126
  %502 = sub i32 %501, %130
  %503 = sub i32 %502, %136
  %504 = sub i32 %503, %143
  %505 = add i32 %504, %145
  %506 = sub i32 %505, %153
  %507 = sub i32 %506, %161
  %508 = sub i32 %507, %175
  %509 = sub i32 %508, %177
  %510 = add i32 %509, %180
  %511 = sub i32 %510, %189
  %512 = sub i32 %511, %210
  %513 = sub i32 %512, %228
  %514 = add i32 %513, %234
  %515 = sub i32 %514, %238
  %516 = sub i32 %515, %240
  %517 = sub i32 %516, %245
  %518 = add i32 %517, %251
  %519 = sub i32 %518, %254
  %520 = add i32 %519, %288
  %521 = add i32 %520, %292
  %522 = add i32 %521, %293
  %523 = add i32 %522, %295
  %524 = sub i32 %523, %79
  %525 = sub i32 %524, %103
  %526 = sub i32 %525, %199
  %527 = sub i32 %526, %277
  %528 = add i32 %527, %335
  %529 = add i32 %528, %333
  %530 = add i32 %529, %324
  %531 = add i32 %530, %330
  %532 = add i32 %531, %319
  %533 = icmp eq i32 %8, %532
  %534 = select i1 %533, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %535 = tail call i32 @puts(i8* nonnull dereferenceable(1) %534)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
