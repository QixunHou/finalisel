digraph "DFG for'main' function" {
	Node0x123ddb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x123de38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x123dec8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x123df28[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x123e3a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x123e488[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x123e588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x123e648[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x123e6f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x123e958[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x123ea18[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x123eb78[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x123ebd8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1243120[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1243328[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1243488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1243598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1243658[shape=record, label="  ret i32 0"];
	Node0x123ddb8 -> Node0x123de38;
	Node0x123de38 -> Node0x123dec8;
	Node0x123dec8 -> Node0x123df28;
	Node0x123df28 -> Node0x123e3a8;
	Node0x123e3a8 -> Node0x123e488;
	Node0x123e488 -> Node0x123e588;
	Node0x123e588 -> Node0x123e648;
	Node0x123e648 -> Node0x123e6f8;
	Node0x123e6f8 -> Node0x123e958;
	Node0x123e958 -> Node0x123ea18;
	Node0x123ea18 -> Node0x123eb78;
	Node0x123eb78 -> Node0x123ebd8;
	Node0x123ebd8 -> Node0x1243120;
	Node0x1243120 -> Node0x1243328;
	Node0x1243328 -> Node0x1243488;
	Node0x1243488 -> Node0x1243598;
	Node0x1243598 -> Node0x1243658;
edge [color=red]
	Node0x123ddb8 -> Node0x123df28;
	Node0x123df28 -> Node0x123e3a8;
	Node0x123de38 -> Node0x123e488;
	Node0x123e488 -> Node0x123e588;
	Node0x123dec8 -> Node0x123e648;
	Node0x123e648 -> Node0x123e6f8;
	Node0x123ddb8 -> Node0x123e958;
	Node0x123de38 -> Node0x123e958;
	Node0x123dec8 -> Node0x123e958;
	Node0x123ddb8 -> Node0x123ea18;
	Node0x123de38 -> Node0x123eb78;
	Node0x123dec8 -> Node0x123ebd8;
	Node0x123ea18 -> Node0x1243120;
	Node0x123eb78 -> Node0x1243120;
	Node0x123ebd8 -> Node0x1243120;
	Node0x123e648 -> Node0x1243328;
	Node0x123e488 -> Node0x1243488;
	Node0x123df28 -> Node0x1243598;
}
