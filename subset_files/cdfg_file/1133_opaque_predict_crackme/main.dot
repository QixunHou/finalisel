digraph "DFG for'main' function" {
	Node0xab7df8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xab7e78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xab7f08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xab7f68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xab8018[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xab8448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xab8528[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xab8628[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xab86e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xab8798[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xab8858[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xab8908[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xab27e0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xab8b08[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xab9a78[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xaba0e8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xaba148[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xaba258[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xaba4b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xaba618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xaba728[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xaba838[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xaba8f8[shape=record, label="  ret i32 0"];
	Node0xab7df8 -> Node0xab7e78;
	Node0xab7e78 -> Node0xab7f08;
	Node0xab7f08 -> Node0xab7f68;
	Node0xab7f68 -> Node0xab8018;
	Node0xab8018 -> Node0xab8448;
	Node0xab8448 -> Node0xab8528;
	Node0xab8528 -> Node0xab8628;
	Node0xab8628 -> Node0xab86e8;
	Node0xab86e8 -> Node0xab8798;
	Node0xab8798 -> Node0xab8858;
	Node0xab8858 -> Node0xab8908;
	Node0xab8908 -> Node0xab27e0;
	Node0xab27e0 -> Node0xab8b08;
	Node0xab8b08 -> Node0xab9a78;
	Node0xab9a78 -> Node0xaba0e8;
	Node0xaba0e8 -> Node0xaba148;
	Node0xaba148 -> Node0xaba258;
	Node0xaba258 -> Node0xaba4b8;
	Node0xaba4b8 -> Node0xaba618;
	Node0xaba618 -> Node0xaba728;
	Node0xaba728 -> Node0xaba838;
	Node0xaba838 -> Node0xaba8f8;
edge [color=red]
	Node0xab7df8 -> Node0xab8018;
	Node0xab8018 -> Node0xab8448;
	Node0xab7e78 -> Node0xab8528;
	Node0xab8528 -> Node0xab8628;
	Node0xab7f08 -> Node0xab86e8;
	Node0xab86e8 -> Node0xab8798;
	Node0xab7f68 -> Node0xab8858;
	Node0xab8858 -> Node0xab8908;
	Node0xab7df8 -> Node0xab27e0;
	Node0xab7e78 -> Node0xab27e0;
	Node0xab7f08 -> Node0xab27e0;
	Node0xab7f68 -> Node0xab27e0;
	Node0xab7df8 -> Node0xab8b08;
	Node0xab7e78 -> Node0xab9a78;
	Node0xab7f08 -> Node0xaba0e8;
	Node0xab7f68 -> Node0xaba148;
	Node0xab8b08 -> Node0xaba258;
	Node0xab9a78 -> Node0xaba258;
	Node0xaba0e8 -> Node0xaba258;
	Node0xaba148 -> Node0xaba258;
	Node0xab8858 -> Node0xaba4b8;
	Node0xab86e8 -> Node0xaba618;
	Node0xab8528 -> Node0xaba728;
	Node0xab8018 -> Node0xaba838;
}
