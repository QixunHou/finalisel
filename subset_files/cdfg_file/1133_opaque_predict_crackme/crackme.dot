digraph "DFG for'crackme' function" {
	Node0xab57b0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0xab5e30[shape=record, label="  %6 = add i32 %5, 1"];
	Node0xab5ed0[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0xab5f40[shape=record, label="  %8 = and i32 %7, %3"];
	Node0xab5fb0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xab6050[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0xab60c0[shape=record, label="  %11 = sub i32 %6, %10"];
	Node0xab6130[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0xab61a0[shape=record, label="  %13 = and i32 %12, %1"];
	Node0xab6240[shape=record, label="  %14 = shl i32 %2, 2"];
	Node0xab62b0[shape=record, label="  %15 = or i32 %12, %1"];
	Node0xab6320[shape=record, label="  %16 = or i32 %2, %1"];
	Node0xab6390[shape=record, label="  %17 = and i32 %2, %1"];
	Node0xab6400[shape=record, label="  %18 = shl i32 %16, 1"];
	Node0xab6470[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0xab64e0[shape=record, label="  %20 = xor i32 %15, -1"];
	Node0xab6580[shape=record, label="  %21 = mul i32 %20, 5"];
	Node0xab65f0[shape=record, label="  %22 = shl i32 %13, 1"];
	Node0xab6660[shape=record, label="  %23 = or i32 %7, %3"];
	Node0xab66d0[shape=record, label="  %24 = or i32 %3, %0"];
	Node0xab6740[shape=record, label="  %25 = and i32 %3, %0"];
	Node0xab67b0[shape=record, label="  %26 = xor i32 %3, %0"];
	Node0xab6820[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0xab6890[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0xab6900[shape=record, label="  %29 = xor i32 %24, -1"];
	Node0xab6970[shape=record, label="  %30 = shl i32 %23, 1"];
	Node0xab69e0[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0xab6a80[shape=record, label="  %32 = mul i32 %8, -3"];
	Node0xab6d00[shape=record, label="  %33 = add i32 %25, %29"];
	Node0xab6da0[shape=record, label="  %34 = mul i32 %33, -6"];
	Node0xab6e10[shape=record, label="  %35 = shl i32 %17, 1"];
	Node0xab6e80[shape=record, label="  %36 = add i32 %35, -2"];
	Node0xab6ef0[shape=record, label="  %37 = sub i32 2, %0"];
	Node0xab6f60[shape=record, label="  %38 = add i32 %37, %7"];
	Node0xab6fd0[shape=record, label="  %39 = sub i32 %38, %2"];
	Node0xab7040[shape=record, label="  %40 = add i32 %39, %13"];
	Node0xab70b0[shape=record, label="  %41 = sub i32 %40, %14"];
	Node0xab7120[shape=record, label="  %42 = sub i32 %41, %5"];
	Node0xab7190[shape=record, label="  %43 = add i32 %42, %15"];
	Node0xab7200[shape=record, label="  %44 = add i32 %43, %16"];
	Node0xab7270[shape=record, label="  %45 = add i32 %44, %21"];
	Node0xab72e0[shape=record, label="  %46 = sub i32 %45, %22"];
	Node0xab7350[shape=record, label="  %47 = add i32 %46, %23"];
	Node0xab73c0[shape=record, label="  %48 = add i32 %47, %24"];
	Node0xab7430[shape=record, label="  %49 = add i32 %48, %25"];
	Node0xab74a0[shape=record, label="  %50 = sub i32 %49, %19"];
	Node0xab7510[shape=record, label="  %51 = add i32 %50, %32"];
	Node0xab7580[shape=record, label="  %52 = add i32 %51, %36"];
	Node0xab75f0[shape=record, label="  %53 = add i32 %52, %28"];
	Node0xab7660[shape=record, label="  %54 = sub i32 %53, %31"];
	Node0xab76d0[shape=record, label="  %55 = add i32 %54, %34"];
	Node0xab7740[shape=record, label="  %56 = icmp eq i32 %11, %55"];
	Node0xa56268[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xab7be0[shape=record, label="  %58 = tail call i32 @puts(i8* nonnull dereferenceable(1) %57)"];
	Node0xab7c30[shape=record, label="  ret void"];
	Node0xab57b0 -> Node0xab5e30;
	Node0xab5e30 -> Node0xab5ed0;
	Node0xab5ed0 -> Node0xab5f40;
	Node0xab5f40 -> Node0xab5fb0;
	Node0xab5fb0 -> Node0xab6050;
	Node0xab6050 -> Node0xab60c0;
	Node0xab60c0 -> Node0xab6130;
	Node0xab6130 -> Node0xab61a0;
	Node0xab61a0 -> Node0xab6240;
	Node0xab6240 -> Node0xab62b0;
	Node0xab62b0 -> Node0xab6320;
	Node0xab6320 -> Node0xab6390;
	Node0xab6390 -> Node0xab6400;
	Node0xab6400 -> Node0xab6470;
	Node0xab6470 -> Node0xab64e0;
	Node0xab64e0 -> Node0xab6580;
	Node0xab6580 -> Node0xab65f0;
	Node0xab65f0 -> Node0xab6660;
	Node0xab6660 -> Node0xab66d0;
	Node0xab66d0 -> Node0xab6740;
	Node0xab6740 -> Node0xab67b0;
	Node0xab67b0 -> Node0xab6820;
	Node0xab6820 -> Node0xab6890;
	Node0xab6890 -> Node0xab6900;
	Node0xab6900 -> Node0xab6970;
	Node0xab6970 -> Node0xab69e0;
	Node0xab69e0 -> Node0xab6a80;
	Node0xab6a80 -> Node0xab6d00;
	Node0xab6d00 -> Node0xab6da0;
	Node0xab6da0 -> Node0xab6e10;
	Node0xab6e10 -> Node0xab6e80;
	Node0xab6e80 -> Node0xab6ef0;
	Node0xab6ef0 -> Node0xab6f60;
	Node0xab6f60 -> Node0xab6fd0;
	Node0xab6fd0 -> Node0xab7040;
	Node0xab7040 -> Node0xab70b0;
	Node0xab70b0 -> Node0xab7120;
	Node0xab7120 -> Node0xab7190;
	Node0xab7190 -> Node0xab7200;
	Node0xab7200 -> Node0xab7270;
	Node0xab7270 -> Node0xab72e0;
	Node0xab72e0 -> Node0xab7350;
	Node0xab7350 -> Node0xab73c0;
	Node0xab73c0 -> Node0xab7430;
	Node0xab7430 -> Node0xab74a0;
	Node0xab74a0 -> Node0xab7510;
	Node0xab7510 -> Node0xab7580;
	Node0xab7580 -> Node0xab75f0;
	Node0xab75f0 -> Node0xab7660;
	Node0xab7660 -> Node0xab76d0;
	Node0xab76d0 -> Node0xab7740;
	Node0xab7740 -> Node0xa56268;
	Node0xa56268 -> Node0xab7be0;
	Node0xab7be0 -> Node0xab7c30;
edge [color=red]
	Node0xab57b0 -> Node0xab5e30;
	Node0xab5ed0 -> Node0xab5f40;
	Node0xab5f40 -> Node0xab5fb0;
	Node0xab5fb0 -> Node0xab6050;
	Node0xab5e30 -> Node0xab60c0;
	Node0xab6050 -> Node0xab60c0;
	Node0xab6130 -> Node0xab61a0;
	Node0xab6130 -> Node0xab62b0;
	Node0xab6320 -> Node0xab6400;
	Node0xab6400 -> Node0xab6470;
	Node0xab62b0 -> Node0xab64e0;
	Node0xab64e0 -> Node0xab6580;
	Node0xab61a0 -> Node0xab65f0;
	Node0xab5ed0 -> Node0xab6660;
	Node0xab67b0 -> Node0xab6820;
	Node0xab6820 -> Node0xab6890;
	Node0xab66d0 -> Node0xab6900;
	Node0xab6660 -> Node0xab6970;
	Node0xab6970 -> Node0xab69e0;
	Node0xab5f40 -> Node0xab6a80;
	Node0xab6740 -> Node0xab6d00;
	Node0xab6900 -> Node0xab6d00;
	Node0xab6d00 -> Node0xab6da0;
	Node0xab6390 -> Node0xab6e10;
	Node0xab6e10 -> Node0xab6e80;
	Node0xab6ef0 -> Node0xab6f60;
	Node0xab5ed0 -> Node0xab6f60;
	Node0xab6f60 -> Node0xab6fd0;
	Node0xab6fd0 -> Node0xab7040;
	Node0xab61a0 -> Node0xab7040;
	Node0xab7040 -> Node0xab70b0;
	Node0xab6240 -> Node0xab70b0;
	Node0xab70b0 -> Node0xab7120;
	Node0xab57b0 -> Node0xab7120;
	Node0xab7120 -> Node0xab7190;
	Node0xab62b0 -> Node0xab7190;
	Node0xab7190 -> Node0xab7200;
	Node0xab6320 -> Node0xab7200;
	Node0xab7200 -> Node0xab7270;
	Node0xab6580 -> Node0xab7270;
	Node0xab7270 -> Node0xab72e0;
	Node0xab65f0 -> Node0xab72e0;
	Node0xab72e0 -> Node0xab7350;
	Node0xab6660 -> Node0xab7350;
	Node0xab7350 -> Node0xab73c0;
	Node0xab66d0 -> Node0xab73c0;
	Node0xab73c0 -> Node0xab7430;
	Node0xab6740 -> Node0xab7430;
	Node0xab7430 -> Node0xab74a0;
	Node0xab6470 -> Node0xab74a0;
	Node0xab74a0 -> Node0xab7510;
	Node0xab6a80 -> Node0xab7510;
	Node0xab7510 -> Node0xab7580;
	Node0xab6e80 -> Node0xab7580;
	Node0xab7580 -> Node0xab75f0;
	Node0xab6890 -> Node0xab75f0;
	Node0xab75f0 -> Node0xab7660;
	Node0xab69e0 -> Node0xab7660;
	Node0xab7660 -> Node0xab76d0;
	Node0xab6da0 -> Node0xab76d0;
	Node0xab60c0 -> Node0xab7740;
	Node0xab76d0 -> Node0xab7740;
	Node0xab7740 -> Node0xa56268;
	Node0xa56268 -> Node0xab7be0;
}
