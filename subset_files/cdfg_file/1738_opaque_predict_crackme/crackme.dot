digraph "DFG for'crackme' function" {
	Node0x21569d0[shape=record, label="  %3 = xor i32 %0, -1"];
	Node0x2156a70[shape=record, label="  %4 = mul i32 %3, -2"];
	Node0x2156b30[shape=record, label="  %5 = or i32 %3, %1"];
	Node0x2156ba0[shape=record, label="  %6 = shl i32 %1, 1"];
	Node0x2156c10[shape=record, label="  %7 = sub i32 %5, %6"];
	Node0x2156c80[shape=record, label="  %8 = xor i32 %3, %1"];
	Node0x2156cf0[shape=record, label="  %9 = add i32 %7, %8"];
	Node0x2156d60[shape=record, label="  %10 = or i32 %1, %0"];
	Node0x2156dd0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x2156e40[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x2156ee0[shape=record, label="  %13 = mul i32 %11, -5"];
	Node0x2156f50[shape=record, label="  %14 = and i32 %3, %1"];
	Node0x2156fc0[shape=record, label="  %15 = sub i32 %12, %14"];
	Node0x2157030[shape=record, label="  %16 = add i32 %15, %13"];
	Node0x21570a0[shape=record, label="  %17 = icmp eq i32 %4, %16"];
	Node0x20f7268[shape=record, label="  %18 = select i1 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2157540[shape=record, label="  %19 = tail call i32 @puts(i8* nonnull dereferenceable(1) %18)"];
	Node0x2157590[shape=record, label="  ret void"];
	Node0x21569d0 -> Node0x2156a70;
	Node0x2156a70 -> Node0x2156b30;
	Node0x2156b30 -> Node0x2156ba0;
	Node0x2156ba0 -> Node0x2156c10;
	Node0x2156c10 -> Node0x2156c80;
	Node0x2156c80 -> Node0x2156cf0;
	Node0x2156cf0 -> Node0x2156d60;
	Node0x2156d60 -> Node0x2156dd0;
	Node0x2156dd0 -> Node0x2156e40;
	Node0x2156e40 -> Node0x2156ee0;
	Node0x2156ee0 -> Node0x2156f50;
	Node0x2156f50 -> Node0x2156fc0;
	Node0x2156fc0 -> Node0x2157030;
	Node0x2157030 -> Node0x21570a0;
	Node0x21570a0 -> Node0x20f7268;
	Node0x20f7268 -> Node0x2157540;
	Node0x2157540 -> Node0x2157590;
edge [color=red]
	Node0x21569d0 -> Node0x2156a70;
	Node0x21569d0 -> Node0x2156b30;
	Node0x2156b30 -> Node0x2156c10;
	Node0x2156ba0 -> Node0x2156c10;
	Node0x21569d0 -> Node0x2156c80;
	Node0x2156c10 -> Node0x2156cf0;
	Node0x2156c80 -> Node0x2156cf0;
	Node0x2156d60 -> Node0x2156dd0;
	Node0x2156cf0 -> Node0x2156e40;
	Node0x2156dd0 -> Node0x2156e40;
	Node0x2156dd0 -> Node0x2156ee0;
	Node0x21569d0 -> Node0x2156f50;
	Node0x2156e40 -> Node0x2156fc0;
	Node0x2156f50 -> Node0x2156fc0;
	Node0x2156fc0 -> Node0x2157030;
	Node0x2156ee0 -> Node0x2157030;
	Node0x2156a70 -> Node0x21570a0;
	Node0x2157030 -> Node0x21570a0;
	Node0x21570a0 -> Node0x20f7268;
	Node0x20f7268 -> Node0x2157540;
}
