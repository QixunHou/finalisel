digraph "DFG for'main' function" {
	Node0x1ed1318[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ed1398[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ed1428[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ed1488[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1ed81b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ed8298[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1ed8398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ed8458[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1ed8508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ed8768[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1ed8828[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ed9798[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ed9e08[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ed9f00[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1eda108[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1eda268[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1eda378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1eda438[shape=record, label="  ret i32 0"];
	Node0x1ed1318 -> Node0x1ed1398;
	Node0x1ed1398 -> Node0x1ed1428;
	Node0x1ed1428 -> Node0x1ed1488;
	Node0x1ed1488 -> Node0x1ed81b8;
	Node0x1ed81b8 -> Node0x1ed8298;
	Node0x1ed8298 -> Node0x1ed8398;
	Node0x1ed8398 -> Node0x1ed8458;
	Node0x1ed8458 -> Node0x1ed8508;
	Node0x1ed8508 -> Node0x1ed8768;
	Node0x1ed8768 -> Node0x1ed8828;
	Node0x1ed8828 -> Node0x1ed9798;
	Node0x1ed9798 -> Node0x1ed9e08;
	Node0x1ed9e08 -> Node0x1ed9f00;
	Node0x1ed9f00 -> Node0x1eda108;
	Node0x1eda108 -> Node0x1eda268;
	Node0x1eda268 -> Node0x1eda378;
	Node0x1eda378 -> Node0x1eda438;
edge [color=red]
	Node0x1ed1318 -> Node0x1ed1488;
	Node0x1ed1488 -> Node0x1ed81b8;
	Node0x1ed1398 -> Node0x1ed8298;
	Node0x1ed8298 -> Node0x1ed8398;
	Node0x1ed1428 -> Node0x1ed8458;
	Node0x1ed8458 -> Node0x1ed8508;
	Node0x1ed1318 -> Node0x1ed8768;
	Node0x1ed1398 -> Node0x1ed8768;
	Node0x1ed1428 -> Node0x1ed8768;
	Node0x1ed1318 -> Node0x1ed8828;
	Node0x1ed1398 -> Node0x1ed9798;
	Node0x1ed1428 -> Node0x1ed9e08;
	Node0x1ed8828 -> Node0x1ed9f00;
	Node0x1ed9798 -> Node0x1ed9f00;
	Node0x1ed9e08 -> Node0x1ed9f00;
	Node0x1ed8458 -> Node0x1eda108;
	Node0x1ed8298 -> Node0x1eda268;
	Node0x1ed1488 -> Node0x1eda378;
}
