; ModuleID = '../.././c_source_file/1407_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1407_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %0, -1
  %5 = xor i32 %1, -1
  %6 = and i32 %5, %2
  %7 = and i32 %6, %4
  %8 = or i32 %5, %2
  %9 = and i32 %8, %0
  %10 = xor i32 %9, -1
  %11 = xor i32 %7, %10
  %12 = xor i32 %2, %0
  %13 = xor i32 %12, -1
  %14 = and i32 %13, %5
  %15 = shl i32 %14, 1
  %16 = sub i32 %15, %11
  %17 = and i32 %5, %0
  %18 = xor i32 %17, -1
  %19 = and i32 %12, %18
  %20 = and i32 %2, %1
  %21 = xor i32 %20, %0
  %22 = xor i32 %2, -1
  %23 = and i32 %22, %0
  %24 = xor i32 %23, %1
  %25 = or i32 %7, %9
  %26 = and i32 %2, %0
  %27 = xor i32 %1, %0
  %28 = or i32 %26, %27
  %29 = and i32 %22, %18
  %30 = or i32 %5, %0
  %31 = and i32 %30, %2
  %32 = or i32 %20, %4
  %33 = and i32 %1, %0
  %34 = xor i32 %33, -1
  %35 = xor i32 %34, %2
  %36 = or i32 %22, %0
  %37 = xor i32 %36, -1
  %38 = or i32 %37, %1
  %39 = or i32 %2, %1
  %40 = and i32 %39, %0
  %41 = xor i32 %2, %1
  %42 = and i32 %41, %18
  %43 = xor i32 %18, %2
  %44 = or i32 %2, %0
  %45 = and i32 %44, %1
  %46 = shl i32 %45, 1
  %47 = xor i32 %27, -1
  %48 = and i32 %47, %2
  %49 = or i32 %13, %1
  %50 = and i32 %22, %1
  %51 = or i32 %39, %4
  %52 = or i32 %37, %47
  %53 = shl i32 %52, 1
  %54 = xor i32 %44, -1
  %55 = shl i32 %54, 1
  %56 = or i32 %27, %54
  %57 = or i32 %22, %1
  %58 = xor i32 %57, -1
  %59 = add i32 %57, 1
  %60 = xor i32 %23, -1
  %61 = and i32 %60, %1
  %62 = xor i32 %30, -1
  %63 = add i32 %30, 1
  %64 = or i32 %47, %2
  %65 = or i32 %1, %0
  %66 = and i32 %65, %13
  %67 = or i32 %12, %5
  %68 = xor i32 %20, -1
  %69 = or i32 %68, %0
  %70 = xor i32 %39, -1
  %71 = or i32 %70, %4
  %72 = and i32 %41, %0
  %73 = xor i32 %50, -1
  %74 = xor i32 %26, %73
  %75 = xor i32 %26, %30
  %76 = and i32 %44, %27
  %77 = or i32 %12, %1
  %78 = and i32 %12, %30
  %79 = and i32 %18, %2
  %80 = xor i32 %41, -1
  %81 = and i32 %80, %18
  %82 = xor i32 %70, %0
  %83 = and i32 %41, %34
  %84 = or i32 %41, %33
  %85 = xor i32 %65, -1
  %86 = or i32 %80, %85
  %87 = shl i32 %86, 1
  %88 = and i32 %80, %34
  %89 = xor i32 %36, %33
  %90 = or i32 %12, %33
  %91 = add i32 %12, 1
  %92 = and i32 %13, %18
  %93 = xor i32 %44, %33
  %94 = xor i32 %26, -1
  %95 = and i32 %27, %94
  %96 = or i32 %73, %4
  %97 = and i32 %73, %0
  %98 = add i32 %20, 1
  %99 = xor i32 %41, %0
  %100 = xor i32 %73, %0
  %101 = xor i32 %17, %73
  %102 = xor i32 %50, %0
  %103 = and i32 %34, %2
  %104 = or i32 %13, %5
  %105 = xor i32 %26, %39
  %106 = or i32 %57, %0
  %107 = and i32 %6, %0
  %108 = xor i32 %8, %0
  %109 = or i32 %107, %108
  %110 = and i32 %60, %5
  %111 = or i32 %41, %0
  %112 = xor i32 %107, %111
  %113 = or i32 %26, %85
  %114 = shl i32 %57, 2
  %115 = and i32 %94, %1
  %116 = or i32 %54, %1
  %117 = and i32 %68, %0
  %118 = or i32 %33, %2
  %119 = and i32 %36, %27
  %120 = or i32 %57, %4
  %121 = and i32 %27, %22
  %122 = and i32 %20, %0
  %123 = xor i32 %99, -1
  %124 = or i32 %122, %123
  %125 = and i32 %12, %5
  %126 = xor i32 %62, %2
  %127 = shl i32 %34, 1
  %128 = and i32 %13, %47
  %129 = shl i32 %128, 1
  %130 = or i32 %23, %5
  %131 = or i32 %41, %62
  %132 = xor i32 %94, %1
  %133 = or i32 %107, %99
  %134 = shl i32 %133, 2
  %135 = xor i32 %57, %0
  %136 = and i32 %27, %60
  %137 = or i32 %20, %17
  %138 = xor i32 %107, %123
  %139 = or i32 %12, %62
  %140 = or i32 %70, %0
  %141 = or i32 %33, %37
  %142 = or i32 %17, %80
  %143 = or i32 %41, %4
  %144 = or i32 %23, %47
  %145 = xor i32 %23, %57
  %146 = and i32 %57, %0
  %147 = and i32 %13, %34
  %148 = xor i32 %80, %0
  %149 = or i32 %50, %4
  %150 = or i32 %80, %4
  %151 = xor i32 %26, %65
  %152 = shl i32 %151, 1
  %153 = or i32 %26, %1
  %154 = or i32 %17, %13
  %155 = and i32 %39, %4
  %156 = xor i32 %155, 1073741823
  %157 = xor i32 %156, %122
  %158 = shl i32 %157, 2
  %159 = add i32 %17, 1
  %160 = xor i32 %39, %0
  %161 = xor i32 %160, 2147483647
  %162 = xor i32 %161, %122
  %163 = and i32 %44, %5
  %164 = xor i32 %58, %0
  %165 = and i32 %65, %2
  %166 = or i32 %26, %47
  %167 = or i32 %54, %47
  %168 = or i32 %27, %13
  %169 = xor i32 %60, %1
  %170 = or i32 %27, %37
  %171 = shl i32 %170, 1
  %172 = or i32 %58, %4
  %173 = and i32 %20, %4
  %174 = xor i32 %173, -1
  %175 = xor i32 %72, %174
  %176 = xor i32 %17, %68
  %177 = xor i32 %108, -1
  %178 = xor i32 %107, %177
  %179 = or i32 %80, %62
  %180 = xor i32 %44, %1
  %181 = xor i32 %30, %2
  %182 = shl i32 %181, 2
  %183 = or i32 %26, %62
  %184 = shl i32 %183, 1
  %185 = or i32 %12, %27
  %186 = and i32 %57, %4
  %187 = and i32 %22, %34
  %188 = or i32 %50, %0
  %189 = or i32 %23, %1
  %190 = or i32 %33, %80
  %191 = and i32 %94, %5
  %192 = shl i32 %191, 1
  %193 = or i32 %39, %0
  %194 = or i32 %68, %4
  %195 = xor i32 %17, %2
  %196 = or i32 %23, %20
  %197 = shl i32 %196, 1
  %198 = or i32 %41, %85
  %199 = and i32 %27, %2
  %200 = and i32 %94, %47
  %201 = and i32 %36, %5
  %202 = and i32 %41, %4
  %203 = and i32 %41, %65
  %204 = and i32 %30, %22
  %205 = or i32 %22, %62
  %206 = or i32 %73, %0
  %207 = or i32 %173, %72
  %208 = or i32 %33, %70
  %209 = and i32 %60, %47
  %210 = or i32 %13, %62
  %211 = shl i32 %210, 1
  %212 = or i32 %33, %22
  %213 = or i32 %41, %17
  %214 = shl i32 %213, 1
  %215 = and i32 %36, %1
  %216 = and i32 %12, %1
  %217 = xor i32 %33, %2
  %218 = and i32 %8, %4
  %219 = or i32 %107, %218
  %220 = xor i32 %7, %143
  %221 = or i32 %12, %85
  %222 = or i32 %22, %85
  %223 = and i32 %73, %4
  %224 = shl i32 %223, 1
  %225 = and i32 %30, %13
  %226 = and i32 %13, %1
  %227 = and i32 %80, %0
  %228 = or i32 %13, %47
  %229 = or i32 %80, %0
  %230 = shl i32 %229, 1
  %231 = or i32 %122, %202
  %232 = or i32 %20, %0
  %233 = and i32 %30, %80
  %234 = and i32 %12, %34
  %235 = and i32 %65, %22
  %236 = xor i32 %23, %68
  %237 = and i32 %22, %47
  %238 = add i32 %23, 1
  %239 = or i32 %37, %5
  %240 = and i32 %80, %4
  %241 = xor i32 %111, -1
  %242 = or i32 %107, %241
  %243 = or i32 %122, %160
  %244 = xor i32 %40, %174
  %245 = and i32 %68, %4
  %246 = or i32 %62, %2
  %247 = xor i32 %143, -1
  %248 = or i32 %7, %247
  %249 = xor i32 %37, %1
  %250 = and i32 %12, %65
  %251 = or i32 %122, %155
  %252 = or i32 %13, %85
  %253 = xor i32 %68, %0
  %254 = or i32 %33, %54
  %255 = xor i32 %36, %1
  %256 = and i32 %27, %13
  %257 = shl i32 %256, 1
  %258 = or i32 %17, %2
  %259 = or i32 %26, %70
  %260 = and i32 %65, %80
  %261 = or i32 %26, %5
  %262 = or i32 %33, %13
  %263 = or i32 %50, %17
  %264 = or i32 %173, %40
  %265 = or i32 %22, %47
  %266 = or i32 %54, %5
  %267 = shl i32 %266, 1
  %268 = and i32 %41, %30
  %269 = or i32 %27, %22
  %270 = add i32 %27, 1
  %271 = xor i32 %122, %99
  %272 = and i32 %12, %27
  %273 = and i32 %44, %47
  %274 = xor i32 %85, %2
  %275 = xor i32 %57, %33
  %276 = or i32 %27, %2
  %277 = or i32 %12, %47
  %278 = or i32 %12, %17
  %279 = xor i32 %39, %33
  %280 = or i32 %17, %22
  %281 = add i32 %39, 1
  %282 = or i32 %23, %58
  %283 = xor i32 %54, %1
  %284 = and i32 %36, %47
  %285 = and i32 %70, %4
  %286 = shl i32 %285, 1
  %287 = and i32 %70, %0
  %288 = and i32 %50, %0
  %289 = mul i32 %288, 9
  %290 = and i32 %58, %4
  %291 = and i32 %58, %0
  %292 = shl i32 %291, 3
  %293 = shl i32 %122, 3
  %294 = add i32 %94, %22
  %295 = add i32 %294, %44
  %296 = add i32 %295, %73
  %297 = add i32 %296, %29
  %298 = add i32 %297, %278
  %299 = add i32 %298, %254
  %300 = add i32 %299, %240
  %301 = add i32 %300, %236
  %302 = add i32 %301, %111
  %303 = add i32 %302, %150
  %304 = add i32 %303, %148
  %305 = add i32 %304, %147
  %306 = add i32 %305, %139
  %307 = add i32 %306, %136
  %308 = add i32 %307, %131
  %309 = add i32 %308, %113
  %310 = add i32 %309, %106
  %311 = add i32 %310, %74
  %312 = add i32 %311, %61
  %313 = sub i32 %312, %19
  %314 = add i32 %313, %162
  %315 = shl i32 %314, 1
  %316 = add i32 %252, %253
  %317 = sub i32 %316, %125
  %318 = sub i32 %317, %251
  %319 = mul i32 %318, 3
  %320 = sub i32 %101, %36
  %321 = sub i32 %320, %283
  %322 = mul i32 %321, 5
  %323 = or i32 %173, %287
  %324 = mul i32 %323, 7
  %325 = sub i32 %4, %1
  %326 = add i32 %325, %5
  %327 = add i32 %326, %63
  %328 = add i32 %327, %2
  %329 = sub i32 %328, %30
  %330 = sub i32 %329, %27
  %331 = add i32 %330, %17
  %332 = add i32 %331, %159
  %333 = add i32 %332, %33
  %334 = add i32 %333, %270
  %335 = add i32 %334, %31
  %336 = add i32 %335, %35
  %337 = add i32 %336, %43
  %338 = sub i32 %337, %48
  %339 = add i32 %338, %50
  %340 = add i32 %339, %59
  %341 = add i32 %340, %64
  %342 = sub i32 %341, %79
  %343 = add i32 %342, %23
  %344 = add i32 %343, %91
  %345 = add i32 %344, %98
  %346 = add i32 %345, %103
  %347 = add i32 %346, %118
  %348 = sub i32 %347, %121
  %349 = add i32 %348, %26
  %350 = add i32 %349, %126
  %351 = sub i32 %350, %127
  %352 = sub i32 %351, %39
  %353 = add i32 %352, %37
  %354 = add i32 %353, %165
  %355 = sub i32 %354, %187
  %356 = sub i32 %355, %195
  %357 = sub i32 %356, %199
  %358 = sub i32 %357, %204
  %359 = add i32 %358, %205
  %360 = add i32 %359, %212
  %361 = sub i32 %360, %217
  %362 = add i32 %361, %222
  %363 = add i32 %362, %20
  %364 = sub i32 %363, %41
  %365 = add i32 %364, %235
  %366 = sub i32 %365, %237
  %367 = add i32 %366, %238
  %368 = add i32 %367, %246
  %369 = sub i32 %368, %12
  %370 = add i32 %369, %258
  %371 = add i32 %370, %265
  %372 = sub i32 %371, %269
  %373 = add i32 %372, %274
  %374 = sub i32 %373, %276
  %375 = sub i32 %374, %280
  %376 = add i32 %375, %281
  %377 = sub i32 %376, %21
  %378 = sub i32 %377, %24
  %379 = add i32 %378, %28
  %380 = sub i32 %379, %32
  %381 = sub i32 %380, %38
  %382 = sub i32 %381, %40
  %383 = add i32 %382, %42
  %384 = add i32 %383, %49
  %385 = sub i32 %384, %51
  %386 = sub i32 %385, %55
  %387 = sub i32 %386, %56
  %388 = sub i32 %387, %66
  %389 = sub i32 %388, %67
  %390 = sub i32 %389, %69
  %391 = add i32 %390, %71
  %392 = add i32 %391, %72
  %393 = add i32 %392, %75
  %394 = add i32 %393, %76
  %395 = add i32 %394, %77
  %396 = add i32 %395, %78
  %397 = add i32 %396, %81
  %398 = sub i32 %397, %82
  %399 = add i32 %398, %83
  %400 = sub i32 %399, %84
  %401 = add i32 %400, %88
  %402 = sub i32 %401, %89
  %403 = add i32 %402, %90
  %404 = add i32 %403, %92
  %405 = sub i32 %404, %93
  %406 = sub i32 %405, %95
  %407 = sub i32 %406, %96
  %408 = sub i32 %407, %97
  %409 = sub i32 %408, %99
  %410 = add i32 %409, %100
  %411 = add i32 %410, %102
  %412 = add i32 %411, %104
  %413 = sub i32 %412, %105
  %414 = add i32 %413, %110
  %415 = add i32 %414, %114
  %416 = add i32 %415, %115
  %417 = sub i32 %416, %116
  %418 = sub i32 %417, %117
  %419 = add i32 %418, %119
  %420 = sub i32 %419, %120
  %421 = sub i32 %420, %130
  %422 = add i32 %421, %132
  %423 = add i32 %422, %135
  %424 = add i32 %423, %137
  %425 = add i32 %424, %140
  %426 = sub i32 %425, %141
  %427 = add i32 %426, %142
  %428 = sub i32 %427, %143
  %429 = add i32 %428, %144
  %430 = add i32 %429, %145
  %431 = add i32 %430, %146
  %432 = sub i32 %431, %149
  %433 = add i32 %432, %153
  %434 = add i32 %433, %154
  %435 = sub i32 %434, %163
  %436 = add i32 %435, %164
  %437 = sub i32 %436, %166
  %438 = sub i32 %437, %167
  %439 = sub i32 %438, %168
  %440 = add i32 %439, %169
  %441 = sub i32 %440, %172
  %442 = sub i32 %441, %176
  %443 = add i32 %442, %179
  %444 = add i32 %443, %180
  %445 = sub i32 %444, %182
  %446 = sub i32 %445, %185
  %447 = add i32 %446, %186
  %448 = sub i32 %447, %188
  %449 = add i32 %448, %189
  %450 = add i32 %449, %190
  %451 = add i32 %450, %193
  %452 = sub i32 %451, %194
  %453 = sub i32 %452, %198
  %454 = sub i32 %453, %200
  %455 = sub i32 %454, %201
  %456 = sub i32 %455, %202
  %457 = add i32 %456, %203
  %458 = sub i32 %457, %206
  %459 = sub i32 %458, %160
  %460 = add i32 %459, %208
  %461 = sub i32 %460, %209
  %462 = add i32 %461, %155
  %463 = add i32 %462, %215
  %464 = sub i32 %463, %216
  %465 = add i32 %464, %221
  %466 = add i32 %465, %225
  %467 = add i32 %466, %226
  %468 = sub i32 %467, %227
  %469 = add i32 %468, %228
  %470 = sub i32 %469, %232
  %471 = sub i32 %470, %233
  %472 = sub i32 %471, %234
  %473 = add i32 %472, %239
  %474 = sub i32 %473, %245
  %475 = sub i32 %474, %249
  %476 = add i32 %475, %250
  %477 = sub i32 %476, %255
  %478 = add i32 %477, %259
  %479 = add i32 %478, %260
  %480 = add i32 %479, %261
  %481 = sub i32 %480, %262
  %482 = add i32 %481, %263
  %483 = add i32 %482, %268
  %484 = sub i32 %483, %272
  %485 = sub i32 %484, %273
  %486 = sub i32 %485, %275
  %487 = add i32 %486, %277
  %488 = sub i32 %487, %279
  %489 = add i32 %488, %282
  %490 = add i32 %489, %284
  %491 = add i32 %490, %290
  %492 = add i32 %491, %25
  %493 = sub i32 %492, %46
  %494 = sub i32 %493, %53
  %495 = sub i32 %494, %87
  %496 = sub i32 %495, %109
  %497 = add i32 %496, %112
  %498 = sub i32 %497, %124
  %499 = sub i32 %498, %129
  %500 = add i32 %499, %138
  %501 = sub i32 %500, %152
  %502 = sub i32 %501, %171
  %503 = sub i32 %502, %175
  %504 = add i32 %503, %178
  %505 = sub i32 %504, %184
  %506 = sub i32 %505, %192
  %507 = sub i32 %506, %197
  %508 = sub i32 %507, %207
  %509 = sub i32 %508, %211
  %510 = sub i32 %509, %214
  %511 = add i32 %510, %219
  %512 = sub i32 %511, %220
  %513 = sub i32 %512, %224
  %514 = sub i32 %513, %230
  %515 = add i32 %514, %231
  %516 = add i32 %515, %242
  %517 = sub i32 %516, %243
  %518 = add i32 %517, %244
  %519 = add i32 %518, %248
  %520 = sub i32 %519, %257
  %521 = sub i32 %520, %264
  %522 = sub i32 %521, %267
  %523 = add i32 %522, %271
  %524 = sub i32 %523, %286
  %525 = add i32 %524, %289
  %526 = add i32 %525, %292
  %527 = sub i32 %526, %293
  %528 = sub i32 %527, %134
  %529 = add i32 %528, %324
  %530 = sub i32 %529, %158
  %531 = add i32 %530, %322
  %532 = add i32 %531, %319
  %533 = add i32 %532, %315
  %534 = icmp eq i32 %16, %533
  %535 = select i1 %534, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %536 = tail call i32 @puts(i8* nonnull dereferenceable(1) %535)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
