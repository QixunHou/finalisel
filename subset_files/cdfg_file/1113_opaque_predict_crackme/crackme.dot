digraph "DFG for'crackme' function" {
	Node0x812d20[shape=record, label="  %5 = shl i32 %0, 1"];
	Node0x812d90[shape=record, label="  %6 = add i32 %5, %1"];
	Node0x812e30[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x812ea0[shape=record, label="  %8 = or i32 %7, %3"];
	Node0x812f10[shape=record, label="  %9 = sub i32 %8, %6"];
	Node0x812f80[shape=record, label="  %10 = and i32 %2, %1"];
	Node0x812ff0[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x813060[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x8130d0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x813140[shape=record, label="  %14 = xor i32 %1, -1"];
	Node0x8131b0[shape=record, label="  %15 = and i32 %14, %2"];
	Node0x813220[shape=record, label="  %16 = shl i32 %2, 1"];
	Node0x813290[shape=record, label="  %17 = or i32 %2, %1"];
	Node0x813300[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x813370[shape=record, label="  %19 = xor i32 %3, %0"];
	Node0x8133e0[shape=record, label="  %20 = and i32 %7, %3"];
	Node0x813450[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x8134f0[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x813560[shape=record, label="  %23 = or i32 %3, %0"];
	Node0x8135d0[shape=record, label="  %24 = and i32 %3, %0"];
	Node0x813640[shape=record, label="  %25 = shl i32 %23, 1"];
	Node0x8136b0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x813720[shape=record, label="  %27 = xor i32 %8, -1"];
	Node0x8137c0[shape=record, label="  %28 = shl i32 %24, 2"];
	Node0x813830[shape=record, label="  %29 = add i32 %15, %18"];
	Node0x8138a0[shape=record, label="  %30 = add i32 %29, %27"];
	Node0x813940[shape=record, label="  %31 = mul i32 %30, 3"];
	Node0x8139b0[shape=record, label="  %32 = add i32 %12, %7"];
	Node0x813c30[shape=record, label="  %33 = add i32 %32, %10"];
	Node0x813ca0[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x813d10[shape=record, label="  %35 = add i32 %1, %2"];
	Node0x813db0[shape=record, label="  %36 = add i32 %35, 5"];
	Node0x813e20[shape=record, label="  %37 = add i32 %36, %13"];
	Node0x813e90[shape=record, label="  %38 = add i32 %37, %15"];
	Node0x813f00[shape=record, label="  %39 = sub i32 %38, %16"];
	Node0x813f70[shape=record, label="  %40 = sub i32 %39, %19"];
	Node0x813fe0[shape=record, label="  %41 = sub i32 %40, %23"];
	Node0x814050[shape=record, label="  %42 = sub i32 %41, %24"];
	Node0x8140c0[shape=record, label="  %43 = add i32 %42, %21"];
	Node0x814130[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x8141a0[shape=record, label="  %45 = sub i32 %44, %22"];
	Node0x814210[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x814280[shape=record, label="  %47 = add i32 %46, %34"];
	Node0x8142f0[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x814360[shape=record, label="  %49 = icmp eq i32 %9, %48"];
	Node0x7b3268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x814800[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x814850[shape=record, label="  ret void"];
	Node0x812d20 -> Node0x812d90;
	Node0x812d90 -> Node0x812e30;
	Node0x812e30 -> Node0x812ea0;
	Node0x812ea0 -> Node0x812f10;
	Node0x812f10 -> Node0x812f80;
	Node0x812f80 -> Node0x812ff0;
	Node0x812ff0 -> Node0x813060;
	Node0x813060 -> Node0x8130d0;
	Node0x8130d0 -> Node0x813140;
	Node0x813140 -> Node0x8131b0;
	Node0x8131b0 -> Node0x813220;
	Node0x813220 -> Node0x813290;
	Node0x813290 -> Node0x813300;
	Node0x813300 -> Node0x813370;
	Node0x813370 -> Node0x8133e0;
	Node0x8133e0 -> Node0x813450;
	Node0x813450 -> Node0x8134f0;
	Node0x8134f0 -> Node0x813560;
	Node0x813560 -> Node0x8135d0;
	Node0x8135d0 -> Node0x813640;
	Node0x813640 -> Node0x8136b0;
	Node0x8136b0 -> Node0x813720;
	Node0x813720 -> Node0x8137c0;
	Node0x8137c0 -> Node0x813830;
	Node0x813830 -> Node0x8138a0;
	Node0x8138a0 -> Node0x813940;
	Node0x813940 -> Node0x8139b0;
	Node0x8139b0 -> Node0x813c30;
	Node0x813c30 -> Node0x813ca0;
	Node0x813ca0 -> Node0x813d10;
	Node0x813d10 -> Node0x813db0;
	Node0x813db0 -> Node0x813e20;
	Node0x813e20 -> Node0x813e90;
	Node0x813e90 -> Node0x813f00;
	Node0x813f00 -> Node0x813f70;
	Node0x813f70 -> Node0x813fe0;
	Node0x813fe0 -> Node0x814050;
	Node0x814050 -> Node0x8140c0;
	Node0x8140c0 -> Node0x814130;
	Node0x814130 -> Node0x8141a0;
	Node0x8141a0 -> Node0x814210;
	Node0x814210 -> Node0x814280;
	Node0x814280 -> Node0x8142f0;
	Node0x8142f0 -> Node0x814360;
	Node0x814360 -> Node0x7b3268;
	Node0x7b3268 -> Node0x814800;
	Node0x814800 -> Node0x814850;
edge [color=red]
	Node0x812d20 -> Node0x812d90;
	Node0x812e30 -> Node0x812ea0;
	Node0x812ea0 -> Node0x812f10;
	Node0x812d90 -> Node0x812f10;
	Node0x812ff0 -> Node0x813060;
	Node0x813060 -> Node0x8130d0;
	Node0x813140 -> Node0x8131b0;
	Node0x813290 -> Node0x813300;
	Node0x812e30 -> Node0x8133e0;
	Node0x8133e0 -> Node0x813450;
	Node0x813450 -> Node0x8134f0;
	Node0x813560 -> Node0x813640;
	Node0x813640 -> Node0x8136b0;
	Node0x812ea0 -> Node0x813720;
	Node0x8135d0 -> Node0x8137c0;
	Node0x8131b0 -> Node0x813830;
	Node0x813300 -> Node0x813830;
	Node0x813830 -> Node0x8138a0;
	Node0x813720 -> Node0x8138a0;
	Node0x8138a0 -> Node0x813940;
	Node0x813060 -> Node0x8139b0;
	Node0x812e30 -> Node0x8139b0;
	Node0x8139b0 -> Node0x813c30;
	Node0x812f80 -> Node0x813c30;
	Node0x813c30 -> Node0x813ca0;
	Node0x813d10 -> Node0x813db0;
	Node0x813db0 -> Node0x813e20;
	Node0x8130d0 -> Node0x813e20;
	Node0x813e20 -> Node0x813e90;
	Node0x8131b0 -> Node0x813e90;
	Node0x813e90 -> Node0x813f00;
	Node0x813220 -> Node0x813f00;
	Node0x813f00 -> Node0x813f70;
	Node0x813370 -> Node0x813f70;
	Node0x813f70 -> Node0x813fe0;
	Node0x813560 -> Node0x813fe0;
	Node0x813fe0 -> Node0x814050;
	Node0x8135d0 -> Node0x814050;
	Node0x814050 -> Node0x8140c0;
	Node0x813450 -> Node0x8140c0;
	Node0x8140c0 -> Node0x814130;
	Node0x8137c0 -> Node0x814130;
	Node0x814130 -> Node0x8141a0;
	Node0x8134f0 -> Node0x8141a0;
	Node0x8141a0 -> Node0x814210;
	Node0x8136b0 -> Node0x814210;
	Node0x814210 -> Node0x814280;
	Node0x813ca0 -> Node0x814280;
	Node0x814280 -> Node0x8142f0;
	Node0x813940 -> Node0x8142f0;
	Node0x812f10 -> Node0x814360;
	Node0x8142f0 -> Node0x814360;
	Node0x814360 -> Node0x7b3268;
	Node0x7b3268 -> Node0x814800;
}
