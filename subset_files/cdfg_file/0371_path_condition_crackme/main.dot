digraph "DFG for'main' function" {
	Node0x1275e78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1275ef8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1275f88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x12763e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x12764c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x12765e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1276820[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x12768d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1277848[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1277ed0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1277f40[shape=record, label="  %9 = add i32 %7, 1"];
	Node0x1277fb0[shape=record, label="  %10 = shl i32 %6, 1"];
	Node0x1278020[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x1278090[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x1278100[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x1278170[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x12781e0[shape=record, label="  %15 = or i32 %6, %8"];
	Node0x1278250[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x12782c0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1278330[shape=record, label="  %18 = mul i32 %17, 3"];
	Node0x12783a0[shape=record, label="  %19 = shl i32 %15, 2"];
	Node0x1278410[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0x1278480[shape=record, label="  %21 = and i32 %6, %8"];
	Node0x12784f0[shape=record, label="  %22 = shl i32 %21, 2"];
	Node0x1278560[shape=record, label="  %23 = add i32 %14, %7"];
	Node0x12785d0[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x1278640[shape=record, label="  %25 = sub i32 3, %10"];
	Node0x12786b0[shape=record, label="  %26 = sub i32 %25, %13"];
	Node0x1278720[shape=record, label="  %27 = add i32 %26, %15"];
	Node0x1278790[shape=record, label="  %28 = add i32 %27, %18"];
	Node0x1278800[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x1278870[shape=record, label="  %30 = add i32 %29, %20"];
	Node0x12788e0[shape=record, label="  %31 = add i32 %30, %24"];
	Node0x1278950[shape=record, label="  %32 = icmp eq i32 %12, %31"];
	Node0x12169d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1278bf0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x1278e48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1278fa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1279068[shape=record, label="  ret i32 0"];
	Node0x1275e78 -> Node0x1275ef8;
	Node0x1275ef8 -> Node0x1275f88;
	Node0x1275f88 -> Node0x12763e8;
	Node0x12763e8 -> Node0x12764c8;
	Node0x12764c8 -> Node0x12765e8;
	Node0x12765e8 -> Node0x1276820;
	Node0x1276820 -> Node0x12768d8;
	Node0x12768d8 -> Node0x1277848;
	Node0x1277848 -> Node0x1277ed0;
	Node0x1277ed0 -> Node0x1277f40;
	Node0x1277f40 -> Node0x1277fb0;
	Node0x1277fb0 -> Node0x1278020;
	Node0x1278020 -> Node0x1278090;
	Node0x1278090 -> Node0x1278100;
	Node0x1278100 -> Node0x1278170;
	Node0x1278170 -> Node0x12781e0;
	Node0x12781e0 -> Node0x1278250;
	Node0x1278250 -> Node0x12782c0;
	Node0x12782c0 -> Node0x1278330;
	Node0x1278330 -> Node0x12783a0;
	Node0x12783a0 -> Node0x1278410;
	Node0x1278410 -> Node0x1278480;
	Node0x1278480 -> Node0x12784f0;
	Node0x12784f0 -> Node0x1278560;
	Node0x1278560 -> Node0x12785d0;
	Node0x12785d0 -> Node0x1278640;
	Node0x1278640 -> Node0x12786b0;
	Node0x12786b0 -> Node0x1278720;
	Node0x1278720 -> Node0x1278790;
	Node0x1278790 -> Node0x1278800;
	Node0x1278800 -> Node0x1278870;
	Node0x1278870 -> Node0x12788e0;
	Node0x12788e0 -> Node0x1278950;
	Node0x1278950 -> Node0x12169d8;
	Node0x12169d8 -> Node0x1278bf0;
	Node0x1278bf0 -> Node0x1278e48;
	Node0x1278e48 -> Node0x1278fa8;
	Node0x1278fa8 -> Node0x1279068;
edge [color=red]
	Node0x1275e78 -> Node0x1275f88;
	Node0x1275f88 -> Node0x12763e8;
	Node0x1275ef8 -> Node0x12764c8;
	Node0x12764c8 -> Node0x12765e8;
	Node0x1275e78 -> Node0x1276820;
	Node0x1275ef8 -> Node0x1276820;
	Node0x1275e78 -> Node0x12768d8;
	Node0x1275ef8 -> Node0x1277848;
	Node0x1277848 -> Node0x1277ed0;
	Node0x1277848 -> Node0x1277f40;
	Node0x12768d8 -> Node0x1277fb0;
	Node0x1277fb0 -> Node0x1278020;
	Node0x1277f40 -> Node0x1278090;
	Node0x1278020 -> Node0x1278090;
	Node0x1277848 -> Node0x1278100;
	Node0x12768d8 -> Node0x1278100;
	Node0x1277848 -> Node0x1278170;
	Node0x12768d8 -> Node0x1278170;
	Node0x12768d8 -> Node0x12781e0;
	Node0x1277ed0 -> Node0x12781e0;
	Node0x1277848 -> Node0x1278250;
	Node0x12768d8 -> Node0x1278250;
	Node0x1278250 -> Node0x12782c0;
	Node0x12782c0 -> Node0x1278330;
	Node0x12781e0 -> Node0x12783a0;
	Node0x12783a0 -> Node0x1278410;
	Node0x12768d8 -> Node0x1278480;
	Node0x1277ed0 -> Node0x1278480;
	Node0x1278480 -> Node0x12784f0;
	Node0x1278170 -> Node0x1278560;
	Node0x1277848 -> Node0x1278560;
	Node0x1278560 -> Node0x12785d0;
	Node0x1277fb0 -> Node0x1278640;
	Node0x1278640 -> Node0x12786b0;
	Node0x1278100 -> Node0x12786b0;
	Node0x12786b0 -> Node0x1278720;
	Node0x12781e0 -> Node0x1278720;
	Node0x1278720 -> Node0x1278790;
	Node0x1278330 -> Node0x1278790;
	Node0x1278790 -> Node0x1278800;
	Node0x12784f0 -> Node0x1278800;
	Node0x1278800 -> Node0x1278870;
	Node0x1278410 -> Node0x1278870;
	Node0x1278870 -> Node0x12788e0;
	Node0x12785d0 -> Node0x12788e0;
	Node0x1278090 -> Node0x1278950;
	Node0x12788e0 -> Node0x1278950;
	Node0x1278950 -> Node0x12169d8;
	Node0x12169d8 -> Node0x1278bf0;
	Node0x12764c8 -> Node0x1278e48;
	Node0x1275f88 -> Node0x1278fa8;
}
