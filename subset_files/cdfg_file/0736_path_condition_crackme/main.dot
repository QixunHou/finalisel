digraph "DFG for'main' function" {
	Node0x18f2ba8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x18f2c28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x18f2cb8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x18f3118[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x18f31f8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x18f3318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18f3550[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x18f3608[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18f4578[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x18f4c00[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x18f4c70[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x18f4ce0[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x18f4d50[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x18f4dc0[shape=record, label="  %12 = or i32 %6, %11"];
	Node0x18f4e30[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x18f4ea0[shape=record, label="  %14 = and i32 %6, %11"];
	Node0x18f4f10[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x18f4f80[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x18f4ff0[shape=record, label="  %17 = shl i32 %12, 2"];
	Node0x18f5060[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x18f50d0[shape=record, label="  %19 = mul i32 %14, -3"];
	Node0x18f5140[shape=record, label="  %20 = sub i32 %10, %7"];
	Node0x18f51b0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x18f5220[shape=record, label="  %22 = add i32 %14, %8"];
	Node0x18f5290[shape=record, label="  %23 = sub i32 %22, %13"];
	Node0x18f5300[shape=record, label="  %24 = add i32 %23, %19"];
	Node0x18f5370[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x18f53e0[shape=record, label="  %26 = sub i32 %25, %18"];
	Node0x18f5450[shape=record, label="  %27 = add i32 %26, %21"];
	Node0x18f54c0[shape=record, label="  %28 = icmp eq i32 %27, %9"];
	Node0x18939d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18f5550[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x18f57a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18f5908[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x18f59c8[shape=record, label="  ret i32 0"];
	Node0x18f2ba8 -> Node0x18f2c28;
	Node0x18f2c28 -> Node0x18f2cb8;
	Node0x18f2cb8 -> Node0x18f3118;
	Node0x18f3118 -> Node0x18f31f8;
	Node0x18f31f8 -> Node0x18f3318;
	Node0x18f3318 -> Node0x18f3550;
	Node0x18f3550 -> Node0x18f3608;
	Node0x18f3608 -> Node0x18f4578;
	Node0x18f4578 -> Node0x18f4c00;
	Node0x18f4c00 -> Node0x18f4c70;
	Node0x18f4c70 -> Node0x18f4ce0;
	Node0x18f4ce0 -> Node0x18f4d50;
	Node0x18f4d50 -> Node0x18f4dc0;
	Node0x18f4dc0 -> Node0x18f4e30;
	Node0x18f4e30 -> Node0x18f4ea0;
	Node0x18f4ea0 -> Node0x18f4f10;
	Node0x18f4f10 -> Node0x18f4f80;
	Node0x18f4f80 -> Node0x18f4ff0;
	Node0x18f4ff0 -> Node0x18f5060;
	Node0x18f5060 -> Node0x18f50d0;
	Node0x18f50d0 -> Node0x18f5140;
	Node0x18f5140 -> Node0x18f51b0;
	Node0x18f51b0 -> Node0x18f5220;
	Node0x18f5220 -> Node0x18f5290;
	Node0x18f5290 -> Node0x18f5300;
	Node0x18f5300 -> Node0x18f5370;
	Node0x18f5370 -> Node0x18f53e0;
	Node0x18f53e0 -> Node0x18f5450;
	Node0x18f5450 -> Node0x18f54c0;
	Node0x18f54c0 -> Node0x18939d8;
	Node0x18939d8 -> Node0x18f5550;
	Node0x18f5550 -> Node0x18f57a8;
	Node0x18f57a8 -> Node0x18f5908;
	Node0x18f5908 -> Node0x18f59c8;
edge [color=red]
	Node0x18f2ba8 -> Node0x18f2cb8;
	Node0x18f2cb8 -> Node0x18f3118;
	Node0x18f2c28 -> Node0x18f31f8;
	Node0x18f31f8 -> Node0x18f3318;
	Node0x18f2ba8 -> Node0x18f3550;
	Node0x18f2c28 -> Node0x18f3550;
	Node0x18f2ba8 -> Node0x18f3608;
	Node0x18f2c28 -> Node0x18f4578;
	Node0x18f4578 -> Node0x18f4c00;
	Node0x18f3608 -> Node0x18f4c00;
	Node0x18f4c00 -> Node0x18f4c70;
	Node0x18f4578 -> Node0x18f4ce0;
	Node0x18f3608 -> Node0x18f4ce0;
	Node0x18f4578 -> Node0x18f4d50;
	Node0x18f3608 -> Node0x18f4dc0;
	Node0x18f4d50 -> Node0x18f4dc0;
	Node0x18f4dc0 -> Node0x18f4e30;
	Node0x18f3608 -> Node0x18f4ea0;
	Node0x18f4d50 -> Node0x18f4ea0;
	Node0x18f4ea0 -> Node0x18f4f10;
	Node0x18f4f10 -> Node0x18f4f80;
	Node0x18f4dc0 -> Node0x18f4ff0;
	Node0x18f4ff0 -> Node0x18f5060;
	Node0x18f4ea0 -> Node0x18f50d0;
	Node0x18f4ce0 -> Node0x18f5140;
	Node0x18f4578 -> Node0x18f5140;
	Node0x18f5140 -> Node0x18f51b0;
	Node0x18f4ea0 -> Node0x18f5220;
	Node0x18f4c00 -> Node0x18f5220;
	Node0x18f5220 -> Node0x18f5290;
	Node0x18f4e30 -> Node0x18f5290;
	Node0x18f5290 -> Node0x18f5300;
	Node0x18f50d0 -> Node0x18f5300;
	Node0x18f5300 -> Node0x18f5370;
	Node0x18f4f80 -> Node0x18f5370;
	Node0x18f5370 -> Node0x18f53e0;
	Node0x18f5060 -> Node0x18f53e0;
	Node0x18f53e0 -> Node0x18f5450;
	Node0x18f51b0 -> Node0x18f5450;
	Node0x18f5450 -> Node0x18f54c0;
	Node0x18f4c70 -> Node0x18f54c0;
	Node0x18f54c0 -> Node0x18939d8;
	Node0x18939d8 -> Node0x18f5550;
	Node0x18f31f8 -> Node0x18f57a8;
	Node0x18f2cb8 -> Node0x18f5908;
}
