digraph "DFG for'main' function" {
	Node0xc1be98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc1bf18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc1bfa8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xc1c008[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xc1c0b8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xc1c4e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc1c5c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xc1c6c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc1c788[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xc1c838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xc1c8f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xc1c9a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xc16c00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xc1cba8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc1db18[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc1e188[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xc1e1e8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xc1e260[shape=record, label="  %14 = xor i32 %10, -1"];
	Node0xc1e2d0[shape=record, label="  %15 = or i32 %13, %10"];
	Node0xc1e340[shape=record, label="  %16 = sub i32 %10, %15"];
	Node0xc1e3b0[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0xc1e420[shape=record, label="  %18 = shl i32 %17, 2"];
	Node0xc1e490[shape=record, label="  %19 = or i32 %11, %17"];
	Node0xc1e500[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0xc1e570[shape=record, label="  %21 = and i32 %11, %17"];
	Node0xc1e5e0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0xc1e650[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0xc1e6c0[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0xc1e730[shape=record, label="  %25 = or i32 %12, %11"];
	Node0xc1e7a0[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0xc1e810[shape=record, label="  %27 = shl i32 %25, 3"];
	Node0xc1e880[shape=record, label="  %28 = xor i32 %27, -8"];
	Node0xc1e8f0[shape=record, label="  %29 = shl i32 %21, 1"];
	Node0xc1e960[shape=record, label="  %30 = shl i32 %10, 1"];
	Node0xc1e9d0[shape=record, label="  %31 = xor i32 %13, %10"];
	Node0xc1ea40[shape=record, label="  %32 = and i32 %13, %14"];
	Node0xc1eab0[shape=record, label="  %33 = or i32 %13, %14"];
	Node0xc1eb20[shape=record, label="  %34 = mul i32 %31, 5"];
	Node0xc1eb90[shape=record, label="  %35 = shl i32 %15, 1"];
	Node0xc1ec00[shape=record, label="  %36 = xor i32 %35, -2"];
	Node0xc1ec70[shape=record, label="  %37 = shl i32 %32, 3"];
	Node0xc1ece0[shape=record, label="  %38 = sub i32 %33, %19"];
	Node0xc1ed50[shape=record, label="  %39 = mul i32 %38, 3"];
	Node0xc1edc0[shape=record, label="  %40 = sub i32 -2, %11"];
	Node0xc1ee30[shape=record, label="  %41 = sub i32 %40, %30"];
	Node0xc1eea0[shape=record, label="  %42 = sub i32 %41, %12"];
	Node0xc1ef10[shape=record, label="  %43 = add i32 %42, %18"];
	Node0xc1ef80[shape=record, label="  %44 = add i32 %43, %22"];
	Node0xc1eff0[shape=record, label="  %45 = add i32 %44, %20"];
	Node0xc1f060[shape=record, label="  %46 = sub i32 %45, %24"];
	Node0xc1f0d0[shape=record, label="  %47 = sub i32 %46, %26"];
	Node0xc1f140[shape=record, label="  %48 = sub i32 %47, %29"];
	Node0xc1f1b0[shape=record, label="  %49 = sub i32 %48, %31"];
	Node0xc1f220[shape=record, label="  %50 = add i32 %49, %32"];
	Node0xc1f290[shape=record, label="  %51 = add i32 %50, %33"];
	Node0xc1f300[shape=record, label="  %52 = sub i32 %51, %28"];
	Node0xc1f370[shape=record, label="  %53 = add i32 %52, %34"];
	Node0xc1f3e0[shape=record, label="  %54 = sub i32 %53, %37"];
	Node0xc1f450[shape=record, label="  %55 = sub i32 %54, %36"];
	Node0xc1f4c0[shape=record, label="  %56 = add i32 %55, %39"];
	Node0xc1f530[shape=record, label="  %57 = icmp eq i32 %16, %56"];
	Node0xbbb8b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc1f5c0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0xc1f868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xc1f9c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xc1fad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc1fbe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc1fca8[shape=record, label="  ret i32 0"];
	Node0xc1be98 -> Node0xc1bf18;
	Node0xc1bf18 -> Node0xc1bfa8;
	Node0xc1bfa8 -> Node0xc1c008;
	Node0xc1c008 -> Node0xc1c0b8;
	Node0xc1c0b8 -> Node0xc1c4e8;
	Node0xc1c4e8 -> Node0xc1c5c8;
	Node0xc1c5c8 -> Node0xc1c6c8;
	Node0xc1c6c8 -> Node0xc1c788;
	Node0xc1c788 -> Node0xc1c838;
	Node0xc1c838 -> Node0xc1c8f8;
	Node0xc1c8f8 -> Node0xc1c9a8;
	Node0xc1c9a8 -> Node0xc16c00;
	Node0xc16c00 -> Node0xc1cba8;
	Node0xc1cba8 -> Node0xc1db18;
	Node0xc1db18 -> Node0xc1e188;
	Node0xc1e188 -> Node0xc1e1e8;
	Node0xc1e1e8 -> Node0xc1e260;
	Node0xc1e260 -> Node0xc1e2d0;
	Node0xc1e2d0 -> Node0xc1e340;
	Node0xc1e340 -> Node0xc1e3b0;
	Node0xc1e3b0 -> Node0xc1e420;
	Node0xc1e420 -> Node0xc1e490;
	Node0xc1e490 -> Node0xc1e500;
	Node0xc1e500 -> Node0xc1e570;
	Node0xc1e570 -> Node0xc1e5e0;
	Node0xc1e5e0 -> Node0xc1e650;
	Node0xc1e650 -> Node0xc1e6c0;
	Node0xc1e6c0 -> Node0xc1e730;
	Node0xc1e730 -> Node0xc1e7a0;
	Node0xc1e7a0 -> Node0xc1e810;
	Node0xc1e810 -> Node0xc1e880;
	Node0xc1e880 -> Node0xc1e8f0;
	Node0xc1e8f0 -> Node0xc1e960;
	Node0xc1e960 -> Node0xc1e9d0;
	Node0xc1e9d0 -> Node0xc1ea40;
	Node0xc1ea40 -> Node0xc1eab0;
	Node0xc1eab0 -> Node0xc1eb20;
	Node0xc1eb20 -> Node0xc1eb90;
	Node0xc1eb90 -> Node0xc1ec00;
	Node0xc1ec00 -> Node0xc1ec70;
	Node0xc1ec70 -> Node0xc1ece0;
	Node0xc1ece0 -> Node0xc1ed50;
	Node0xc1ed50 -> Node0xc1edc0;
	Node0xc1edc0 -> Node0xc1ee30;
	Node0xc1ee30 -> Node0xc1eea0;
	Node0xc1eea0 -> Node0xc1ef10;
	Node0xc1ef10 -> Node0xc1ef80;
	Node0xc1ef80 -> Node0xc1eff0;
	Node0xc1eff0 -> Node0xc1f060;
	Node0xc1f060 -> Node0xc1f0d0;
	Node0xc1f0d0 -> Node0xc1f140;
	Node0xc1f140 -> Node0xc1f1b0;
	Node0xc1f1b0 -> Node0xc1f220;
	Node0xc1f220 -> Node0xc1f290;
	Node0xc1f290 -> Node0xc1f300;
	Node0xc1f300 -> Node0xc1f370;
	Node0xc1f370 -> Node0xc1f3e0;
	Node0xc1f3e0 -> Node0xc1f450;
	Node0xc1f450 -> Node0xc1f4c0;
	Node0xc1f4c0 -> Node0xc1f530;
	Node0xc1f530 -> Node0xbbb8b8;
	Node0xbbb8b8 -> Node0xc1f5c0;
	Node0xc1f5c0 -> Node0xc1f868;
	Node0xc1f868 -> Node0xc1f9c8;
	Node0xc1f9c8 -> Node0xc1fad8;
	Node0xc1fad8 -> Node0xc1fbe8;
	Node0xc1fbe8 -> Node0xc1fca8;
edge [color=red]
	Node0xc1be98 -> Node0xc1c0b8;
	Node0xc1c0b8 -> Node0xc1c4e8;
	Node0xc1bf18 -> Node0xc1c5c8;
	Node0xc1c5c8 -> Node0xc1c6c8;
	Node0xc1bfa8 -> Node0xc1c788;
	Node0xc1c788 -> Node0xc1c838;
	Node0xc1c008 -> Node0xc1c8f8;
	Node0xc1c8f8 -> Node0xc1c9a8;
	Node0xc1be98 -> Node0xc16c00;
	Node0xc1bf18 -> Node0xc16c00;
	Node0xc1bfa8 -> Node0xc16c00;
	Node0xc1c008 -> Node0xc16c00;
	Node0xc1be98 -> Node0xc1cba8;
	Node0xc1bf18 -> Node0xc1db18;
	Node0xc1bfa8 -> Node0xc1e188;
	Node0xc1c008 -> Node0xc1e1e8;
	Node0xc1cba8 -> Node0xc1e260;
	Node0xc1e1e8 -> Node0xc1e2d0;
	Node0xc1cba8 -> Node0xc1e2d0;
	Node0xc1cba8 -> Node0xc1e340;
	Node0xc1e2d0 -> Node0xc1e340;
	Node0xc1e188 -> Node0xc1e3b0;
	Node0xc1e3b0 -> Node0xc1e420;
	Node0xc1db18 -> Node0xc1e490;
	Node0xc1e3b0 -> Node0xc1e490;
	Node0xc1e490 -> Node0xc1e500;
	Node0xc1db18 -> Node0xc1e570;
	Node0xc1e3b0 -> Node0xc1e570;
	Node0xc1e570 -> Node0xc1e5e0;
	Node0xc1e188 -> Node0xc1e650;
	Node0xc1db18 -> Node0xc1e650;
	Node0xc1e650 -> Node0xc1e6c0;
	Node0xc1e188 -> Node0xc1e730;
	Node0xc1db18 -> Node0xc1e730;
	Node0xc1e730 -> Node0xc1e7a0;
	Node0xc1e730 -> Node0xc1e810;
	Node0xc1e810 -> Node0xc1e880;
	Node0xc1e570 -> Node0xc1e8f0;
	Node0xc1cba8 -> Node0xc1e960;
	Node0xc1e1e8 -> Node0xc1e9d0;
	Node0xc1cba8 -> Node0xc1e9d0;
	Node0xc1e1e8 -> Node0xc1ea40;
	Node0xc1e260 -> Node0xc1ea40;
	Node0xc1e1e8 -> Node0xc1eab0;
	Node0xc1e260 -> Node0xc1eab0;
	Node0xc1e9d0 -> Node0xc1eb20;
	Node0xc1e2d0 -> Node0xc1eb90;
	Node0xc1eb90 -> Node0xc1ec00;
	Node0xc1ea40 -> Node0xc1ec70;
	Node0xc1eab0 -> Node0xc1ece0;
	Node0xc1e490 -> Node0xc1ece0;
	Node0xc1ece0 -> Node0xc1ed50;
	Node0xc1db18 -> Node0xc1edc0;
	Node0xc1edc0 -> Node0xc1ee30;
	Node0xc1e960 -> Node0xc1ee30;
	Node0xc1ee30 -> Node0xc1eea0;
	Node0xc1e188 -> Node0xc1eea0;
	Node0xc1eea0 -> Node0xc1ef10;
	Node0xc1e420 -> Node0xc1ef10;
	Node0xc1ef10 -> Node0xc1ef80;
	Node0xc1e5e0 -> Node0xc1ef80;
	Node0xc1ef80 -> Node0xc1eff0;
	Node0xc1e500 -> Node0xc1eff0;
	Node0xc1eff0 -> Node0xc1f060;
	Node0xc1e6c0 -> Node0xc1f060;
	Node0xc1f060 -> Node0xc1f0d0;
	Node0xc1e7a0 -> Node0xc1f0d0;
	Node0xc1f0d0 -> Node0xc1f140;
	Node0xc1e8f0 -> Node0xc1f140;
	Node0xc1f140 -> Node0xc1f1b0;
	Node0xc1e9d0 -> Node0xc1f1b0;
	Node0xc1f1b0 -> Node0xc1f220;
	Node0xc1ea40 -> Node0xc1f220;
	Node0xc1f220 -> Node0xc1f290;
	Node0xc1eab0 -> Node0xc1f290;
	Node0xc1f290 -> Node0xc1f300;
	Node0xc1e880 -> Node0xc1f300;
	Node0xc1f300 -> Node0xc1f370;
	Node0xc1eb20 -> Node0xc1f370;
	Node0xc1f370 -> Node0xc1f3e0;
	Node0xc1ec70 -> Node0xc1f3e0;
	Node0xc1f3e0 -> Node0xc1f450;
	Node0xc1ec00 -> Node0xc1f450;
	Node0xc1f450 -> Node0xc1f4c0;
	Node0xc1ed50 -> Node0xc1f4c0;
	Node0xc1e340 -> Node0xc1f530;
	Node0xc1f4c0 -> Node0xc1f530;
	Node0xc1f530 -> Node0xbbb8b8;
	Node0xbbb8b8 -> Node0xc1f5c0;
	Node0xc1c8f8 -> Node0xc1f868;
	Node0xc1c788 -> Node0xc1f9c8;
	Node0xc1c5c8 -> Node0xc1fad8;
	Node0xc1c0b8 -> Node0xc1fbe8;
}
