digraph "DFG for'main' function" {
	Node0x1a3fbb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a3fc38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a3fcc8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1a40128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a40208[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1a40328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a40560[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1a40618[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a41588[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a41c10[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1a41c80[shape=record, label="  %9 = or i32 %7, %6"];
	Node0x1a41cf0[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0x1a41d60[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x1a41dd0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1a41e40[shape=record, label="  %13 = xor i32 %6, -1"];
	Node0x1a41eb0[shape=record, label="  %14 = xor i32 %8, -1"];
	Node0x1a41f20[shape=record, label="  %15 = xor i32 %7, -1"];
	Node0x1a41f90[shape=record, label="  %16 = or i32 %6, %15"];
	Node0x1a42000[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1a42070[shape=record, label="  %18 = xor i32 %9, -1"];
	Node0x1a420e0[shape=record, label="  %19 = mul i32 %18, -3"];
	Node0x1a42150[shape=record, label="  %20 = shl i32 %16, 1"];
	Node0x1a421c0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x1a42230[shape=record, label="  %22 = sub i32 %13, %6"];
	Node0x1a422a0[shape=record, label="  %23 = sub i32 %22, %7"];
	Node0x1a42310[shape=record, label="  %24 = add i32 %23, %12"];
	Node0x1a42380[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x1a423f0[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x1a42460[shape=record, label="  %27 = add i32 %26, %19"];
	Node0x1a424d0[shape=record, label="  %28 = sub i32 %27, %21"];
	Node0x1a42540[shape=record, label="  %29 = icmp eq i32 %10, %28"];
	Node0x19e09d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a425d0[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x1a42828[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a42988[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a42a48[shape=record, label="  ret i32 0"];
	Node0x1a3fbb8 -> Node0x1a3fc38;
	Node0x1a3fc38 -> Node0x1a3fcc8;
	Node0x1a3fcc8 -> Node0x1a40128;
	Node0x1a40128 -> Node0x1a40208;
	Node0x1a40208 -> Node0x1a40328;
	Node0x1a40328 -> Node0x1a40560;
	Node0x1a40560 -> Node0x1a40618;
	Node0x1a40618 -> Node0x1a41588;
	Node0x1a41588 -> Node0x1a41c10;
	Node0x1a41c10 -> Node0x1a41c80;
	Node0x1a41c80 -> Node0x1a41cf0;
	Node0x1a41cf0 -> Node0x1a41d60;
	Node0x1a41d60 -> Node0x1a41dd0;
	Node0x1a41dd0 -> Node0x1a41e40;
	Node0x1a41e40 -> Node0x1a41eb0;
	Node0x1a41eb0 -> Node0x1a41f20;
	Node0x1a41f20 -> Node0x1a41f90;
	Node0x1a41f90 -> Node0x1a42000;
	Node0x1a42000 -> Node0x1a42070;
	Node0x1a42070 -> Node0x1a420e0;
	Node0x1a420e0 -> Node0x1a42150;
	Node0x1a42150 -> Node0x1a421c0;
	Node0x1a421c0 -> Node0x1a42230;
	Node0x1a42230 -> Node0x1a422a0;
	Node0x1a422a0 -> Node0x1a42310;
	Node0x1a42310 -> Node0x1a42380;
	Node0x1a42380 -> Node0x1a423f0;
	Node0x1a423f0 -> Node0x1a42460;
	Node0x1a42460 -> Node0x1a424d0;
	Node0x1a424d0 -> Node0x1a42540;
	Node0x1a42540 -> Node0x19e09d8;
	Node0x19e09d8 -> Node0x1a425d0;
	Node0x1a425d0 -> Node0x1a42828;
	Node0x1a42828 -> Node0x1a42988;
	Node0x1a42988 -> Node0x1a42a48;
edge [color=red]
	Node0x1a3fbb8 -> Node0x1a3fcc8;
	Node0x1a3fcc8 -> Node0x1a40128;
	Node0x1a3fc38 -> Node0x1a40208;
	Node0x1a40208 -> Node0x1a40328;
	Node0x1a3fbb8 -> Node0x1a40560;
	Node0x1a3fc38 -> Node0x1a40560;
	Node0x1a3fbb8 -> Node0x1a40618;
	Node0x1a3fc38 -> Node0x1a41588;
	Node0x1a41588 -> Node0x1a41c10;
	Node0x1a40618 -> Node0x1a41c10;
	Node0x1a41588 -> Node0x1a41c80;
	Node0x1a40618 -> Node0x1a41c80;
	Node0x1a41c10 -> Node0x1a41cf0;
	Node0x1a41c80 -> Node0x1a41cf0;
	Node0x1a41588 -> Node0x1a41d60;
	Node0x1a40618 -> Node0x1a41d60;
	Node0x1a41d60 -> Node0x1a41dd0;
	Node0x1a40618 -> Node0x1a41e40;
	Node0x1a41c10 -> Node0x1a41eb0;
	Node0x1a41588 -> Node0x1a41f20;
	Node0x1a40618 -> Node0x1a41f90;
	Node0x1a41f20 -> Node0x1a41f90;
	Node0x1a41f90 -> Node0x1a42000;
	Node0x1a41c80 -> Node0x1a42070;
	Node0x1a42070 -> Node0x1a420e0;
	Node0x1a41f90 -> Node0x1a42150;
	Node0x1a42150 -> Node0x1a421c0;
	Node0x1a41e40 -> Node0x1a42230;
	Node0x1a40618 -> Node0x1a42230;
	Node0x1a42230 -> Node0x1a422a0;
	Node0x1a41588 -> Node0x1a422a0;
	Node0x1a422a0 -> Node0x1a42310;
	Node0x1a41dd0 -> Node0x1a42310;
	Node0x1a42310 -> Node0x1a42380;
	Node0x1a41eb0 -> Node0x1a42380;
	Node0x1a42380 -> Node0x1a423f0;
	Node0x1a42000 -> Node0x1a423f0;
	Node0x1a423f0 -> Node0x1a42460;
	Node0x1a420e0 -> Node0x1a42460;
	Node0x1a42460 -> Node0x1a424d0;
	Node0x1a421c0 -> Node0x1a424d0;
	Node0x1a41cf0 -> Node0x1a42540;
	Node0x1a424d0 -> Node0x1a42540;
	Node0x1a42540 -> Node0x19e09d8;
	Node0x19e09d8 -> Node0x1a425d0;
	Node0x1a40208 -> Node0x1a42828;
	Node0x1a3fcc8 -> Node0x1a42988;
}
