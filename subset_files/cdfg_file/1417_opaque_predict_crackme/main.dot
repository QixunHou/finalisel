digraph "DFG for'main' function" {
	Node0x1407cb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1407d38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1407dc8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1408228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1408308[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1408428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1408660[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1408718[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1409688[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1409d10[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x1409d80[shape=record, label="  %9 = shl i32 %7, 1"];
	Node0x1409df0[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x1409e60[shape=record, label="  %11 = shl i32 %10, 2"];
	Node0x1409ed0[shape=record, label="  %12 = xor i32 %11, -4"];
	Node0x1409f40[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x1409fb0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x140a020[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x140a090[shape=record, label="  %16 = xor i32 %7, -1"];
	Node0x140a100[shape=record, label="  %17 = or i32 %6, %16"];
	Node0x140a170[shape=record, label="  %18 = shl i32 %6, 1"];
	Node0x140a1e0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x140a250[shape=record, label="  %20 = mul i32 %13, 7"];
	Node0x140a2c0[shape=record, label="  %21 = sub i32 1, %6"];
	Node0x140a330[shape=record, label="  %22 = sub i32 %21, %9"];
	Node0x140a3a0[shape=record, label="  %23 = add i32 %22, %17"];
	Node0x140a410[shape=record, label="  %24 = add i32 %23, %19"];
	Node0x140a480[shape=record, label="  %25 = sub i32 %24, %10"];
	Node0x140a4f0[shape=record, label="  %26 = add i32 %25, %8"];
	Node0x140a560[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x140a5d0[shape=record, label="  %28 = sub i32 %27, %12"];
	Node0x140a640[shape=record, label="  %29 = add i32 %28, %15"];
	Node0x140a6b0[shape=record, label="  %30 = icmp eq i32 %8, %29"];
	Node0x13a89d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x140a740[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x140aba8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x140ad08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x140adc8[shape=record, label="  ret i32 0"];
	Node0x1407cb8 -> Node0x1407d38;
	Node0x1407d38 -> Node0x1407dc8;
	Node0x1407dc8 -> Node0x1408228;
	Node0x1408228 -> Node0x1408308;
	Node0x1408308 -> Node0x1408428;
	Node0x1408428 -> Node0x1408660;
	Node0x1408660 -> Node0x1408718;
	Node0x1408718 -> Node0x1409688;
	Node0x1409688 -> Node0x1409d10;
	Node0x1409d10 -> Node0x1409d80;
	Node0x1409d80 -> Node0x1409df0;
	Node0x1409df0 -> Node0x1409e60;
	Node0x1409e60 -> Node0x1409ed0;
	Node0x1409ed0 -> Node0x1409f40;
	Node0x1409f40 -> Node0x1409fb0;
	Node0x1409fb0 -> Node0x140a020;
	Node0x140a020 -> Node0x140a090;
	Node0x140a090 -> Node0x140a100;
	Node0x140a100 -> Node0x140a170;
	Node0x140a170 -> Node0x140a1e0;
	Node0x140a1e0 -> Node0x140a250;
	Node0x140a250 -> Node0x140a2c0;
	Node0x140a2c0 -> Node0x140a330;
	Node0x140a330 -> Node0x140a3a0;
	Node0x140a3a0 -> Node0x140a410;
	Node0x140a410 -> Node0x140a480;
	Node0x140a480 -> Node0x140a4f0;
	Node0x140a4f0 -> Node0x140a560;
	Node0x140a560 -> Node0x140a5d0;
	Node0x140a5d0 -> Node0x140a640;
	Node0x140a640 -> Node0x140a6b0;
	Node0x140a6b0 -> Node0x13a89d8;
	Node0x13a89d8 -> Node0x140a740;
	Node0x140a740 -> Node0x140aba8;
	Node0x140aba8 -> Node0x140ad08;
	Node0x140ad08 -> Node0x140adc8;
edge [color=red]
	Node0x1407cb8 -> Node0x1407dc8;
	Node0x1407dc8 -> Node0x1408228;
	Node0x1407d38 -> Node0x1408308;
	Node0x1408308 -> Node0x1408428;
	Node0x1407cb8 -> Node0x1408660;
	Node0x1407d38 -> Node0x1408660;
	Node0x1407cb8 -> Node0x1408718;
	Node0x1407d38 -> Node0x1409688;
	Node0x1409688 -> Node0x1409d10;
	Node0x1408718 -> Node0x1409d10;
	Node0x1409688 -> Node0x1409d80;
	Node0x1409688 -> Node0x1409df0;
	Node0x1408718 -> Node0x1409df0;
	Node0x1409df0 -> Node0x1409e60;
	Node0x1409e60 -> Node0x1409ed0;
	Node0x1409688 -> Node0x1409f40;
	Node0x1408718 -> Node0x1409f40;
	Node0x1409f40 -> Node0x1409fb0;
	Node0x1409fb0 -> Node0x140a020;
	Node0x1409688 -> Node0x140a090;
	Node0x1408718 -> Node0x140a100;
	Node0x140a090 -> Node0x140a100;
	Node0x1408718 -> Node0x140a170;
	Node0x140a170 -> Node0x140a1e0;
	Node0x1409f40 -> Node0x140a250;
	Node0x1408718 -> Node0x140a2c0;
	Node0x140a2c0 -> Node0x140a330;
	Node0x1409d80 -> Node0x140a330;
	Node0x140a330 -> Node0x140a3a0;
	Node0x140a100 -> Node0x140a3a0;
	Node0x140a3a0 -> Node0x140a410;
	Node0x140a1e0 -> Node0x140a410;
	Node0x140a410 -> Node0x140a480;
	Node0x1409df0 -> Node0x140a480;
	Node0x140a480 -> Node0x140a4f0;
	Node0x1409d10 -> Node0x140a4f0;
	Node0x140a4f0 -> Node0x140a560;
	Node0x140a250 -> Node0x140a560;
	Node0x140a560 -> Node0x140a5d0;
	Node0x1409ed0 -> Node0x140a5d0;
	Node0x140a5d0 -> Node0x140a640;
	Node0x140a020 -> Node0x140a640;
	Node0x1409d10 -> Node0x140a6b0;
	Node0x140a640 -> Node0x140a6b0;
	Node0x140a6b0 -> Node0x13a89d8;
	Node0x13a89d8 -> Node0x140a740;
	Node0x1408308 -> Node0x140aba8;
	Node0x1407dc8 -> Node0x140ad08;
}
