digraph "DFG for'main' function" {
	Node0xae4eb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xae4f38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xae4fc8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xae5028[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xae50d8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xae5508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xae55e8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xae56e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xae57a8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xae5858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xae5918[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xae59c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xadf800[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xae5bc8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xae6b38[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xae71a8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xae7208[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xae7318[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xae7578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xae76d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xae77e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xae78f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xae79b8[shape=record, label="  ret i32 0"];
	Node0xae4eb8 -> Node0xae4f38;
	Node0xae4f38 -> Node0xae4fc8;
	Node0xae4fc8 -> Node0xae5028;
	Node0xae5028 -> Node0xae50d8;
	Node0xae50d8 -> Node0xae5508;
	Node0xae5508 -> Node0xae55e8;
	Node0xae55e8 -> Node0xae56e8;
	Node0xae56e8 -> Node0xae57a8;
	Node0xae57a8 -> Node0xae5858;
	Node0xae5858 -> Node0xae5918;
	Node0xae5918 -> Node0xae59c8;
	Node0xae59c8 -> Node0xadf800;
	Node0xadf800 -> Node0xae5bc8;
	Node0xae5bc8 -> Node0xae6b38;
	Node0xae6b38 -> Node0xae71a8;
	Node0xae71a8 -> Node0xae7208;
	Node0xae7208 -> Node0xae7318;
	Node0xae7318 -> Node0xae7578;
	Node0xae7578 -> Node0xae76d8;
	Node0xae76d8 -> Node0xae77e8;
	Node0xae77e8 -> Node0xae78f8;
	Node0xae78f8 -> Node0xae79b8;
edge [color=red]
	Node0xae4eb8 -> Node0xae50d8;
	Node0xae50d8 -> Node0xae5508;
	Node0xae4f38 -> Node0xae55e8;
	Node0xae55e8 -> Node0xae56e8;
	Node0xae4fc8 -> Node0xae57a8;
	Node0xae57a8 -> Node0xae5858;
	Node0xae5028 -> Node0xae5918;
	Node0xae5918 -> Node0xae59c8;
	Node0xae4eb8 -> Node0xadf800;
	Node0xae4f38 -> Node0xadf800;
	Node0xae4fc8 -> Node0xadf800;
	Node0xae5028 -> Node0xadf800;
	Node0xae4eb8 -> Node0xae5bc8;
	Node0xae4f38 -> Node0xae6b38;
	Node0xae4fc8 -> Node0xae71a8;
	Node0xae5028 -> Node0xae7208;
	Node0xae5bc8 -> Node0xae7318;
	Node0xae6b38 -> Node0xae7318;
	Node0xae71a8 -> Node0xae7318;
	Node0xae7208 -> Node0xae7318;
	Node0xae5918 -> Node0xae7578;
	Node0xae57a8 -> Node0xae76d8;
	Node0xae55e8 -> Node0xae77e8;
	Node0xae50d8 -> Node0xae78f8;
}
