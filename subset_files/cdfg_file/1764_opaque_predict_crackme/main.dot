digraph "DFG for'main' function" {
	Node0x18fcc48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x18fccc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x18fcd58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x18fd1b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x18fd298[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x18fd3b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18fd5f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x18fd6a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18fe618[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x18feca0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x18fed10[shape=record, label="  %9 = xor i32 %6, -1"];
	Node0x18fed80[shape=record, label="  %10 = or i32 %7, %9"];
	Node0x18fedf0[shape=record, label="  %11 = sub i32 %10, %8"];
	Node0x18fee60[shape=record, label="  %12 = xor i32 %8, -1"];
	Node0x18feed0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x18fef40[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x18fefb0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x18ff020[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x18ff090[shape=record, label="  %17 = xor i32 %6, 2147483647"];
	Node0x18ff100[shape=record, label="  %18 = and i32 %17, %7"];
	Node0x18ff170[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x18ff1e0[shape=record, label="  %20 = sub i32 -2, %7"];
	Node0x18ff250[shape=record, label="  %21 = add i32 %20, %12"];
	Node0x18ff2c0[shape=record, label="  %22 = sub i32 %21, %16"];
	Node0x18ff330[shape=record, label="  %23 = add i32 %22, %19"];
	Node0x18ff3a0[shape=record, label="  %24 = sub i32 %23, %15"];
	Node0x18ff410[shape=record, label="  %25 = icmp eq i32 %11, %24"];
	Node0x189d9d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18ff4a0[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0x18ff6f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18ff858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x18ff918[shape=record, label="  ret i32 0"];
	Node0x18fcc48 -> Node0x18fccc8;
	Node0x18fccc8 -> Node0x18fcd58;
	Node0x18fcd58 -> Node0x18fd1b8;
	Node0x18fd1b8 -> Node0x18fd298;
	Node0x18fd298 -> Node0x18fd3b8;
	Node0x18fd3b8 -> Node0x18fd5f0;
	Node0x18fd5f0 -> Node0x18fd6a8;
	Node0x18fd6a8 -> Node0x18fe618;
	Node0x18fe618 -> Node0x18feca0;
	Node0x18feca0 -> Node0x18fed10;
	Node0x18fed10 -> Node0x18fed80;
	Node0x18fed80 -> Node0x18fedf0;
	Node0x18fedf0 -> Node0x18fee60;
	Node0x18fee60 -> Node0x18feed0;
	Node0x18feed0 -> Node0x18fef40;
	Node0x18fef40 -> Node0x18fefb0;
	Node0x18fefb0 -> Node0x18ff020;
	Node0x18ff020 -> Node0x18ff090;
	Node0x18ff090 -> Node0x18ff100;
	Node0x18ff100 -> Node0x18ff170;
	Node0x18ff170 -> Node0x18ff1e0;
	Node0x18ff1e0 -> Node0x18ff250;
	Node0x18ff250 -> Node0x18ff2c0;
	Node0x18ff2c0 -> Node0x18ff330;
	Node0x18ff330 -> Node0x18ff3a0;
	Node0x18ff3a0 -> Node0x18ff410;
	Node0x18ff410 -> Node0x189d9d8;
	Node0x189d9d8 -> Node0x18ff4a0;
	Node0x18ff4a0 -> Node0x18ff6f8;
	Node0x18ff6f8 -> Node0x18ff858;
	Node0x18ff858 -> Node0x18ff918;
edge [color=red]
	Node0x18fcc48 -> Node0x18fcd58;
	Node0x18fcd58 -> Node0x18fd1b8;
	Node0x18fccc8 -> Node0x18fd298;
	Node0x18fd298 -> Node0x18fd3b8;
	Node0x18fcc48 -> Node0x18fd5f0;
	Node0x18fccc8 -> Node0x18fd5f0;
	Node0x18fcc48 -> Node0x18fd6a8;
	Node0x18fccc8 -> Node0x18fe618;
	Node0x18fe618 -> Node0x18feca0;
	Node0x18fd6a8 -> Node0x18feca0;
	Node0x18fd6a8 -> Node0x18fed10;
	Node0x18fe618 -> Node0x18fed80;
	Node0x18fed10 -> Node0x18fed80;
	Node0x18fed80 -> Node0x18fedf0;
	Node0x18feca0 -> Node0x18fedf0;
	Node0x18feca0 -> Node0x18fee60;
	Node0x18fe618 -> Node0x18feed0;
	Node0x18fd6a8 -> Node0x18feed0;
	Node0x18feed0 -> Node0x18fef40;
	Node0x18fef40 -> Node0x18fefb0;
	Node0x18fe618 -> Node0x18ff020;
	Node0x18fd6a8 -> Node0x18ff020;
	Node0x18fd6a8 -> Node0x18ff090;
	Node0x18ff090 -> Node0x18ff100;
	Node0x18fe618 -> Node0x18ff100;
	Node0x18ff100 -> Node0x18ff170;
	Node0x18fe618 -> Node0x18ff1e0;
	Node0x18ff1e0 -> Node0x18ff250;
	Node0x18fee60 -> Node0x18ff250;
	Node0x18ff250 -> Node0x18ff2c0;
	Node0x18ff020 -> Node0x18ff2c0;
	Node0x18ff2c0 -> Node0x18ff330;
	Node0x18ff170 -> Node0x18ff330;
	Node0x18ff330 -> Node0x18ff3a0;
	Node0x18fefb0 -> Node0x18ff3a0;
	Node0x18fedf0 -> Node0x18ff410;
	Node0x18ff3a0 -> Node0x18ff410;
	Node0x18ff410 -> Node0x189d9d8;
	Node0x189d9d8 -> Node0x18ff4a0;
	Node0x18fd298 -> Node0x18ff6f8;
	Node0x18fcd58 -> Node0x18ff858;
}
