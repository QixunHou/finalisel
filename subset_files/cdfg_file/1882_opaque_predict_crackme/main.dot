digraph "DFG for'main' function" {
	Node0x1d32b48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d32bc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d32c58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1d330b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1d33198[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1d332b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d334f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1d335a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d34518[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d34ba0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1d34c10[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1d34c80[shape=record, label="  %10 = mul i32 %9, -4"];
	Node0x1d34cf0[shape=record, label="  %11 = shl i32 %7, 1"];
	Node0x1d34d60[shape=record, label="  %12 = or i32 %7, %6"];
	Node0x1d34dd0[shape=record, label="  %13 = xor i32 %11, -2"];
	Node0x1d34e40[shape=record, label="  %14 = xor i32 %6, -1"];
	Node0x1d34eb0[shape=record, label="  %15 = or i32 %7, %14"];
	Node0x1d34f20[shape=record, label="  %16 = shl i32 %12, 2"];
	Node0x1d34f90[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x1d35000[shape=record, label="  %18 = and i32 %7, %6"];
	Node0x1d35070[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1d350e0[shape=record, label="  %20 = sub i32 1, %6"];
	Node0x1d35150[shape=record, label="  %21 = add i32 %20, %11"];
	Node0x1d351c0[shape=record, label="  %22 = sub i32 %21, %12"];
	Node0x1d35230[shape=record, label="  %23 = add i32 %22, %8"];
	Node0x1d352a0[shape=record, label="  %24 = sub i32 %23, %15"];
	Node0x1d35310[shape=record, label="  %25 = add i32 %24, %13"];
	Node0x1d35380[shape=record, label="  %26 = sub i32 %25, %19"];
	Node0x1d353f0[shape=record, label="  %27 = sub i32 %26, %17"];
	Node0x1d35460[shape=record, label="  %28 = icmp eq i32 %10, %27"];
	Node0x1cd39d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d354f0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x1d35748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d358a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1d35968[shape=record, label="  ret i32 0"];
	Node0x1d32b48 -> Node0x1d32bc8;
	Node0x1d32bc8 -> Node0x1d32c58;
	Node0x1d32c58 -> Node0x1d330b8;
	Node0x1d330b8 -> Node0x1d33198;
	Node0x1d33198 -> Node0x1d332b8;
	Node0x1d332b8 -> Node0x1d334f0;
	Node0x1d334f0 -> Node0x1d335a8;
	Node0x1d335a8 -> Node0x1d34518;
	Node0x1d34518 -> Node0x1d34ba0;
	Node0x1d34ba0 -> Node0x1d34c10;
	Node0x1d34c10 -> Node0x1d34c80;
	Node0x1d34c80 -> Node0x1d34cf0;
	Node0x1d34cf0 -> Node0x1d34d60;
	Node0x1d34d60 -> Node0x1d34dd0;
	Node0x1d34dd0 -> Node0x1d34e40;
	Node0x1d34e40 -> Node0x1d34eb0;
	Node0x1d34eb0 -> Node0x1d34f20;
	Node0x1d34f20 -> Node0x1d34f90;
	Node0x1d34f90 -> Node0x1d35000;
	Node0x1d35000 -> Node0x1d35070;
	Node0x1d35070 -> Node0x1d350e0;
	Node0x1d350e0 -> Node0x1d35150;
	Node0x1d35150 -> Node0x1d351c0;
	Node0x1d351c0 -> Node0x1d35230;
	Node0x1d35230 -> Node0x1d352a0;
	Node0x1d352a0 -> Node0x1d35310;
	Node0x1d35310 -> Node0x1d35380;
	Node0x1d35380 -> Node0x1d353f0;
	Node0x1d353f0 -> Node0x1d35460;
	Node0x1d35460 -> Node0x1cd39d8;
	Node0x1cd39d8 -> Node0x1d354f0;
	Node0x1d354f0 -> Node0x1d35748;
	Node0x1d35748 -> Node0x1d358a8;
	Node0x1d358a8 -> Node0x1d35968;
edge [color=red]
	Node0x1d32b48 -> Node0x1d32c58;
	Node0x1d32c58 -> Node0x1d330b8;
	Node0x1d32bc8 -> Node0x1d33198;
	Node0x1d33198 -> Node0x1d332b8;
	Node0x1d32b48 -> Node0x1d334f0;
	Node0x1d32bc8 -> Node0x1d334f0;
	Node0x1d32b48 -> Node0x1d335a8;
	Node0x1d32bc8 -> Node0x1d34518;
	Node0x1d34518 -> Node0x1d34ba0;
	Node0x1d335a8 -> Node0x1d34ba0;
	Node0x1d34ba0 -> Node0x1d34c10;
	Node0x1d34c10 -> Node0x1d34c80;
	Node0x1d34518 -> Node0x1d34cf0;
	Node0x1d34518 -> Node0x1d34d60;
	Node0x1d335a8 -> Node0x1d34d60;
	Node0x1d34cf0 -> Node0x1d34dd0;
	Node0x1d335a8 -> Node0x1d34e40;
	Node0x1d34518 -> Node0x1d34eb0;
	Node0x1d34e40 -> Node0x1d34eb0;
	Node0x1d34d60 -> Node0x1d34f20;
	Node0x1d34f20 -> Node0x1d34f90;
	Node0x1d34518 -> Node0x1d35000;
	Node0x1d335a8 -> Node0x1d35000;
	Node0x1d35000 -> Node0x1d35070;
	Node0x1d335a8 -> Node0x1d350e0;
	Node0x1d350e0 -> Node0x1d35150;
	Node0x1d34cf0 -> Node0x1d35150;
	Node0x1d35150 -> Node0x1d351c0;
	Node0x1d34d60 -> Node0x1d351c0;
	Node0x1d351c0 -> Node0x1d35230;
	Node0x1d34ba0 -> Node0x1d35230;
	Node0x1d35230 -> Node0x1d352a0;
	Node0x1d34eb0 -> Node0x1d352a0;
	Node0x1d352a0 -> Node0x1d35310;
	Node0x1d34dd0 -> Node0x1d35310;
	Node0x1d35310 -> Node0x1d35380;
	Node0x1d35070 -> Node0x1d35380;
	Node0x1d35380 -> Node0x1d353f0;
	Node0x1d34f90 -> Node0x1d353f0;
	Node0x1d34c80 -> Node0x1d35460;
	Node0x1d353f0 -> Node0x1d35460;
	Node0x1d35460 -> Node0x1cd39d8;
	Node0x1cd39d8 -> Node0x1d354f0;
	Node0x1d33198 -> Node0x1d35748;
	Node0x1d32c58 -> Node0x1d358a8;
}
