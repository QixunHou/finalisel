digraph "DFG for'main' function" {
	Node0x67fbb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x67fc38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x67fcc8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x680128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x680208[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x680328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x680560[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x680618[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x681588[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x681c10[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x681c80[shape=record, label="  %9 = and i32 %7, %6"];
	Node0x681cf0[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x681d60[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x681dd0[shape=record, label="  %12 = sub i32 %8, %11"];
	Node0x681e40[shape=record, label="  %13 = or i32 %6, %8"];
	Node0x681eb0[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x681f20[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x681f90[shape=record, label="  %16 = xor i32 %6, -1"];
	Node0x682000[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x682070[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x6820e0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x682150[shape=record, label="  %20 = xor i32 %13, -1"];
	Node0x6821c0[shape=record, label="  %21 = mul i32 %20, -3"];
	Node0x682230[shape=record, label="  %22 = sub i32 %16, %13"];
	Node0x6822a0[shape=record, label="  %23 = add i32 %22, %15"];
	Node0x682310[shape=record, label="  %24 = sub i32 %23, %14"];
	Node0x682380[shape=record, label="  %25 = add i32 %24, %17"];
	Node0x6823f0[shape=record, label="  %26 = sub i32 %25, %9"];
	Node0x682460[shape=record, label="  %27 = add i32 %26, %21"];
	Node0x6824d0[shape=record, label="  %28 = sub i32 %27, %19"];
	Node0x682540[shape=record, label="  %29 = icmp eq i32 %12, %28"];
	Node0x6209d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6825d0[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x682828[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x682988[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x682a48[shape=record, label="  ret i32 0"];
	Node0x67fbb8 -> Node0x67fc38;
	Node0x67fc38 -> Node0x67fcc8;
	Node0x67fcc8 -> Node0x680128;
	Node0x680128 -> Node0x680208;
	Node0x680208 -> Node0x680328;
	Node0x680328 -> Node0x680560;
	Node0x680560 -> Node0x680618;
	Node0x680618 -> Node0x681588;
	Node0x681588 -> Node0x681c10;
	Node0x681c10 -> Node0x681c80;
	Node0x681c80 -> Node0x681cf0;
	Node0x681cf0 -> Node0x681d60;
	Node0x681d60 -> Node0x681dd0;
	Node0x681dd0 -> Node0x681e40;
	Node0x681e40 -> Node0x681eb0;
	Node0x681eb0 -> Node0x681f20;
	Node0x681f20 -> Node0x681f90;
	Node0x681f90 -> Node0x682000;
	Node0x682000 -> Node0x682070;
	Node0x682070 -> Node0x6820e0;
	Node0x6820e0 -> Node0x682150;
	Node0x682150 -> Node0x6821c0;
	Node0x6821c0 -> Node0x682230;
	Node0x682230 -> Node0x6822a0;
	Node0x6822a0 -> Node0x682310;
	Node0x682310 -> Node0x682380;
	Node0x682380 -> Node0x6823f0;
	Node0x6823f0 -> Node0x682460;
	Node0x682460 -> Node0x6824d0;
	Node0x6824d0 -> Node0x682540;
	Node0x682540 -> Node0x6209d8;
	Node0x6209d8 -> Node0x6825d0;
	Node0x6825d0 -> Node0x682828;
	Node0x682828 -> Node0x682988;
	Node0x682988 -> Node0x682a48;
edge [color=red]
	Node0x67fbb8 -> Node0x67fcc8;
	Node0x67fcc8 -> Node0x680128;
	Node0x67fc38 -> Node0x680208;
	Node0x680208 -> Node0x680328;
	Node0x67fbb8 -> Node0x680560;
	Node0x67fc38 -> Node0x680560;
	Node0x67fbb8 -> Node0x680618;
	Node0x67fc38 -> Node0x681588;
	Node0x681588 -> Node0x681c10;
	Node0x681588 -> Node0x681c80;
	Node0x680618 -> Node0x681c80;
	Node0x681c80 -> Node0x681cf0;
	Node0x681cf0 -> Node0x681d60;
	Node0x681c10 -> Node0x681dd0;
	Node0x681d60 -> Node0x681dd0;
	Node0x680618 -> Node0x681e40;
	Node0x681c10 -> Node0x681e40;
	Node0x681588 -> Node0x681eb0;
	Node0x680618 -> Node0x681eb0;
	Node0x681eb0 -> Node0x681f20;
	Node0x680618 -> Node0x681f90;
	Node0x681588 -> Node0x682000;
	Node0x680618 -> Node0x682000;
	Node0x682000 -> Node0x682070;
	Node0x682070 -> Node0x6820e0;
	Node0x681e40 -> Node0x682150;
	Node0x682150 -> Node0x6821c0;
	Node0x681f90 -> Node0x682230;
	Node0x681e40 -> Node0x682230;
	Node0x682230 -> Node0x6822a0;
	Node0x681f20 -> Node0x6822a0;
	Node0x6822a0 -> Node0x682310;
	Node0x681eb0 -> Node0x682310;
	Node0x682310 -> Node0x682380;
	Node0x682000 -> Node0x682380;
	Node0x682380 -> Node0x6823f0;
	Node0x681c80 -> Node0x6823f0;
	Node0x6823f0 -> Node0x682460;
	Node0x6821c0 -> Node0x682460;
	Node0x682460 -> Node0x6824d0;
	Node0x6820e0 -> Node0x6824d0;
	Node0x681dd0 -> Node0x682540;
	Node0x6824d0 -> Node0x682540;
	Node0x682540 -> Node0x6209d8;
	Node0x6209d8 -> Node0x6825d0;
	Node0x680208 -> Node0x682828;
	Node0x67fcc8 -> Node0x682988;
}
