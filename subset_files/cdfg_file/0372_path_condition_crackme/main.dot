digraph "DFG for'main' function" {
	Node0x1975b78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1975bf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1975c88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x19760e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x19761c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x19762e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1976520[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x19765d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1977548[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1977bd0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1977c40[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1977cb0[shape=record, label="  %10 = mul i32 %9, 5"];
	Node0x1977d20[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x1977d90[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1977e00[shape=record, label="  %13 = and i32 %6, %8"];
	Node0x1977e70[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1977ee0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1977f50[shape=record, label="  %16 = xor i32 %11, -1"];
	Node0x1977fc0[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x1978030[shape=record, label="  %18 = xor i32 %9, -1"];
	Node0x19780a0[shape=record, label="  %19 = mul i32 %18, 7"];
	Node0x1978110[shape=record, label="  %20 = sub i32 3, %6"];
	Node0x1978180[shape=record, label="  %21 = add i32 %20, %16"];
	Node0x19781f0[shape=record, label="  %22 = add i32 %21, %17"];
	Node0x1978260[shape=record, label="  %23 = add i32 %22, %13"];
	Node0x19782d0[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x1978340[shape=record, label="  %25 = sub i32 %24, %12"];
	Node0x19783b0[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x1978420[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0x1978490[shape=record, label="  %28 = icmp eq i32 %27, -1"];
	Node0x19169d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1978520[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x1978778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19788d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1978998[shape=record, label="  ret i32 0"];
	Node0x1975b78 -> Node0x1975bf8;
	Node0x1975bf8 -> Node0x1975c88;
	Node0x1975c88 -> Node0x19760e8;
	Node0x19760e8 -> Node0x19761c8;
	Node0x19761c8 -> Node0x19762e8;
	Node0x19762e8 -> Node0x1976520;
	Node0x1976520 -> Node0x19765d8;
	Node0x19765d8 -> Node0x1977548;
	Node0x1977548 -> Node0x1977bd0;
	Node0x1977bd0 -> Node0x1977c40;
	Node0x1977c40 -> Node0x1977cb0;
	Node0x1977cb0 -> Node0x1977d20;
	Node0x1977d20 -> Node0x1977d90;
	Node0x1977d90 -> Node0x1977e00;
	Node0x1977e00 -> Node0x1977e70;
	Node0x1977e70 -> Node0x1977ee0;
	Node0x1977ee0 -> Node0x1977f50;
	Node0x1977f50 -> Node0x1977fc0;
	Node0x1977fc0 -> Node0x1978030;
	Node0x1978030 -> Node0x19780a0;
	Node0x19780a0 -> Node0x1978110;
	Node0x1978110 -> Node0x1978180;
	Node0x1978180 -> Node0x19781f0;
	Node0x19781f0 -> Node0x1978260;
	Node0x1978260 -> Node0x19782d0;
	Node0x19782d0 -> Node0x1978340;
	Node0x1978340 -> Node0x19783b0;
	Node0x19783b0 -> Node0x1978420;
	Node0x1978420 -> Node0x1978490;
	Node0x1978490 -> Node0x19169d8;
	Node0x19169d8 -> Node0x1978520;
	Node0x1978520 -> Node0x1978778;
	Node0x1978778 -> Node0x19788d8;
	Node0x19788d8 -> Node0x1978998;
edge [color=red]
	Node0x1975b78 -> Node0x1975c88;
	Node0x1975c88 -> Node0x19760e8;
	Node0x1975bf8 -> Node0x19761c8;
	Node0x19761c8 -> Node0x19762e8;
	Node0x1975b78 -> Node0x1976520;
	Node0x1975bf8 -> Node0x1976520;
	Node0x1975b78 -> Node0x19765d8;
	Node0x1975bf8 -> Node0x1977548;
	Node0x1977548 -> Node0x1977bd0;
	Node0x19765d8 -> Node0x1977c40;
	Node0x1977bd0 -> Node0x1977c40;
	Node0x1977c40 -> Node0x1977cb0;
	Node0x1977548 -> Node0x1977d20;
	Node0x19765d8 -> Node0x1977d20;
	Node0x1977d20 -> Node0x1977d90;
	Node0x19765d8 -> Node0x1977e00;
	Node0x1977bd0 -> Node0x1977e00;
	Node0x1977e00 -> Node0x1977e70;
	Node0x1977e70 -> Node0x1977ee0;
	Node0x1977d20 -> Node0x1977f50;
	Node0x1977548 -> Node0x1977fc0;
	Node0x19765d8 -> Node0x1977fc0;
	Node0x1977c40 -> Node0x1978030;
	Node0x1978030 -> Node0x19780a0;
	Node0x19765d8 -> Node0x1978110;
	Node0x1978110 -> Node0x1978180;
	Node0x1977f50 -> Node0x1978180;
	Node0x1978180 -> Node0x19781f0;
	Node0x1977fc0 -> Node0x19781f0;
	Node0x19781f0 -> Node0x1978260;
	Node0x1977e00 -> Node0x1978260;
	Node0x1978260 -> Node0x19782d0;
	Node0x1977cb0 -> Node0x19782d0;
	Node0x19782d0 -> Node0x1978340;
	Node0x1977d90 -> Node0x1978340;
	Node0x1978340 -> Node0x19783b0;
	Node0x19780a0 -> Node0x19783b0;
	Node0x19783b0 -> Node0x1978420;
	Node0x1977ee0 -> Node0x1978420;
	Node0x1978420 -> Node0x1978490;
	Node0x1978490 -> Node0x19169d8;
	Node0x19169d8 -> Node0x1978520;
	Node0x19761c8 -> Node0x1978778;
	Node0x1975c88 -> Node0x19788d8;
}
