digraph "DFG for'main' function" {
	Node0x1884ce8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1884d68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1884df8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1885258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1885338[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1885458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1885690[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1885748[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18866b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1886d40[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1886db0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1886e20[shape=record, label="  %10 = sub i32 0, %9"];
	Node0x1886e90[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x1886f00[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1886f70[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x1886fe0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1887050[shape=record, label="  %15 = and i32 %6, %8"];
	Node0x18870c0[shape=record, label="  %16 = xor i32 %7, %6"];
	Node0x1887130[shape=record, label="  %17 = shl i32 %9, 2"];
	Node0x18871a0[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x1887210[shape=record, label="  %19 = shl i32 %15, 2"];
	Node0x1887280[shape=record, label="  %20 = mul i32 %13, 5"];
	Node0x18872f0[shape=record, label="  %21 = mul i32 %6, -2"];
	Node0x1887360[shape=record, label="  %22 = add i32 %21, 2"];
	Node0x18873d0[shape=record, label="  %23 = add i32 %22, %14"];
	Node0x1887440[shape=record, label="  %24 = add i32 %23, %15"];
	Node0x18874b0[shape=record, label="  %25 = sub i32 %24, %16"];
	Node0x1887520[shape=record, label="  %26 = sub i32 %25, %12"];
	Node0x1887590[shape=record, label="  %27 = add i32 %26, %19"];
	Node0x1887600[shape=record, label="  %28 = add i32 %27, %20"];
	Node0x1887670[shape=record, label="  %29 = add i32 %28, %18"];
	Node0x18876e0[shape=record, label="  %30 = icmp eq i32 %29, %10"];
	Node0x18259d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1887770[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x1887bd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1887d38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1887df8[shape=record, label="  ret i32 0"];
	Node0x1884ce8 -> Node0x1884d68;
	Node0x1884d68 -> Node0x1884df8;
	Node0x1884df8 -> Node0x1885258;
	Node0x1885258 -> Node0x1885338;
	Node0x1885338 -> Node0x1885458;
	Node0x1885458 -> Node0x1885690;
	Node0x1885690 -> Node0x1885748;
	Node0x1885748 -> Node0x18866b8;
	Node0x18866b8 -> Node0x1886d40;
	Node0x1886d40 -> Node0x1886db0;
	Node0x1886db0 -> Node0x1886e20;
	Node0x1886e20 -> Node0x1886e90;
	Node0x1886e90 -> Node0x1886f00;
	Node0x1886f00 -> Node0x1886f70;
	Node0x1886f70 -> Node0x1886fe0;
	Node0x1886fe0 -> Node0x1887050;
	Node0x1887050 -> Node0x18870c0;
	Node0x18870c0 -> Node0x1887130;
	Node0x1887130 -> Node0x18871a0;
	Node0x18871a0 -> Node0x1887210;
	Node0x1887210 -> Node0x1887280;
	Node0x1887280 -> Node0x18872f0;
	Node0x18872f0 -> Node0x1887360;
	Node0x1887360 -> Node0x18873d0;
	Node0x18873d0 -> Node0x1887440;
	Node0x1887440 -> Node0x18874b0;
	Node0x18874b0 -> Node0x1887520;
	Node0x1887520 -> Node0x1887590;
	Node0x1887590 -> Node0x1887600;
	Node0x1887600 -> Node0x1887670;
	Node0x1887670 -> Node0x18876e0;
	Node0x18876e0 -> Node0x18259d8;
	Node0x18259d8 -> Node0x1887770;
	Node0x1887770 -> Node0x1887bd8;
	Node0x1887bd8 -> Node0x1887d38;
	Node0x1887d38 -> Node0x1887df8;
edge [color=red]
	Node0x1884ce8 -> Node0x1884df8;
	Node0x1884df8 -> Node0x1885258;
	Node0x1884d68 -> Node0x1885338;
	Node0x1885338 -> Node0x1885458;
	Node0x1884ce8 -> Node0x1885690;
	Node0x1884d68 -> Node0x1885690;
	Node0x1884ce8 -> Node0x1885748;
	Node0x1884d68 -> Node0x18866b8;
	Node0x18866b8 -> Node0x1886d40;
	Node0x1885748 -> Node0x1886db0;
	Node0x1886d40 -> Node0x1886db0;
	Node0x1886db0 -> Node0x1886e20;
	Node0x18866b8 -> Node0x1886e90;
	Node0x1885748 -> Node0x1886e90;
	Node0x1886e90 -> Node0x1886f00;
	Node0x18866b8 -> Node0x1886f70;
	Node0x1885748 -> Node0x1886f70;
	Node0x1886f70 -> Node0x1886fe0;
	Node0x1885748 -> Node0x1887050;
	Node0x1886d40 -> Node0x1887050;
	Node0x18866b8 -> Node0x18870c0;
	Node0x1885748 -> Node0x18870c0;
	Node0x1886db0 -> Node0x1887130;
	Node0x1887130 -> Node0x18871a0;
	Node0x1887050 -> Node0x1887210;
	Node0x1886f70 -> Node0x1887280;
	Node0x1885748 -> Node0x18872f0;
	Node0x18872f0 -> Node0x1887360;
	Node0x1887360 -> Node0x18873d0;
	Node0x1886fe0 -> Node0x18873d0;
	Node0x18873d0 -> Node0x1887440;
	Node0x1887050 -> Node0x1887440;
	Node0x1887440 -> Node0x18874b0;
	Node0x18870c0 -> Node0x18874b0;
	Node0x18874b0 -> Node0x1887520;
	Node0x1886f00 -> Node0x1887520;
	Node0x1887520 -> Node0x1887590;
	Node0x1887210 -> Node0x1887590;
	Node0x1887590 -> Node0x1887600;
	Node0x1887280 -> Node0x1887600;
	Node0x1887600 -> Node0x1887670;
	Node0x18871a0 -> Node0x1887670;
	Node0x1887670 -> Node0x18876e0;
	Node0x1886e20 -> Node0x18876e0;
	Node0x18876e0 -> Node0x18259d8;
	Node0x18259d8 -> Node0x1887770;
	Node0x1885338 -> Node0x1887bd8;
	Node0x1884df8 -> Node0x1887d38;
}
