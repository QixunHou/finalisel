digraph "DFG for'main' function" {
	Node0x20eddb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x20ede38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x20edec8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x20ee328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x20ee408[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x20ee528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20ee760[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x20ee818[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20ef788[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20efe10[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x20efe80[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x20efef0[shape=record, label="  %10 = mul i32 %9, -2"];
	Node0x20eff60[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x20effd0[shape=record, label="  %12 = shl i32 %6, 1"];
	Node0x20f0040[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x20f00b0[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x20f0120[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x20f0190[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x20f0200[shape=record, label="  %17 = and i32 %6, %8"];
	Node0x20f0270[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x20f02e0[shape=record, label="  %19 = shl i32 %14, 2"];
	Node0x20f0350[shape=record, label="  %20 = shl i32 %13, 1"];
	Node0x20f03c0[shape=record, label="  %21 = sub i32 %6, %9"];
	Node0x20f0430[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0x20f04a0[shape=record, label="  %23 = sub i32 2, %12"];
	Node0x20f0510[shape=record, label="  %24 = sub i32 %23, %7"];
	Node0x20f0580[shape=record, label="  %25 = add i32 %24, %8"];
	Node0x20f05f0[shape=record, label="  %26 = sub i32 %25, %11"];
	Node0x20f0660[shape=record, label="  %27 = sub i32 %26, %18"];
	Node0x20f06d0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x20f0740[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x20f07b0[shape=record, label="  %30 = add i32 %29, %16"];
	Node0x20f0820[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x20f0890[shape=record, label="  %32 = icmp eq i32 %10, %31"];
	Node0x208e9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x20f0b30[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x20f0d88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20f0ee8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x20f0fa8[shape=record, label="  ret i32 0"];
	Node0x20eddb8 -> Node0x20ede38;
	Node0x20ede38 -> Node0x20edec8;
	Node0x20edec8 -> Node0x20ee328;
	Node0x20ee328 -> Node0x20ee408;
	Node0x20ee408 -> Node0x20ee528;
	Node0x20ee528 -> Node0x20ee760;
	Node0x20ee760 -> Node0x20ee818;
	Node0x20ee818 -> Node0x20ef788;
	Node0x20ef788 -> Node0x20efe10;
	Node0x20efe10 -> Node0x20efe80;
	Node0x20efe80 -> Node0x20efef0;
	Node0x20efef0 -> Node0x20eff60;
	Node0x20eff60 -> Node0x20effd0;
	Node0x20effd0 -> Node0x20f0040;
	Node0x20f0040 -> Node0x20f00b0;
	Node0x20f00b0 -> Node0x20f0120;
	Node0x20f0120 -> Node0x20f0190;
	Node0x20f0190 -> Node0x20f0200;
	Node0x20f0200 -> Node0x20f0270;
	Node0x20f0270 -> Node0x20f02e0;
	Node0x20f02e0 -> Node0x20f0350;
	Node0x20f0350 -> Node0x20f03c0;
	Node0x20f03c0 -> Node0x20f0430;
	Node0x20f0430 -> Node0x20f04a0;
	Node0x20f04a0 -> Node0x20f0510;
	Node0x20f0510 -> Node0x20f0580;
	Node0x20f0580 -> Node0x20f05f0;
	Node0x20f05f0 -> Node0x20f0660;
	Node0x20f0660 -> Node0x20f06d0;
	Node0x20f06d0 -> Node0x20f0740;
	Node0x20f0740 -> Node0x20f07b0;
	Node0x20f07b0 -> Node0x20f0820;
	Node0x20f0820 -> Node0x20f0890;
	Node0x20f0890 -> Node0x208e9d8;
	Node0x208e9d8 -> Node0x20f0b30;
	Node0x20f0b30 -> Node0x20f0d88;
	Node0x20f0d88 -> Node0x20f0ee8;
	Node0x20f0ee8 -> Node0x20f0fa8;
edge [color=red]
	Node0x20eddb8 -> Node0x20edec8;
	Node0x20edec8 -> Node0x20ee328;
	Node0x20ede38 -> Node0x20ee408;
	Node0x20ee408 -> Node0x20ee528;
	Node0x20eddb8 -> Node0x20ee760;
	Node0x20ede38 -> Node0x20ee760;
	Node0x20eddb8 -> Node0x20ee818;
	Node0x20ede38 -> Node0x20ef788;
	Node0x20ef788 -> Node0x20efe10;
	Node0x20ee818 -> Node0x20efe80;
	Node0x20efe10 -> Node0x20efe80;
	Node0x20efe80 -> Node0x20efef0;
	Node0x20ef788 -> Node0x20eff60;
	Node0x20ee818 -> Node0x20eff60;
	Node0x20ee818 -> Node0x20effd0;
	Node0x20ef788 -> Node0x20f0040;
	Node0x20ee818 -> Node0x20f0040;
	Node0x20ef788 -> Node0x20f00b0;
	Node0x20ee818 -> Node0x20f00b0;
	Node0x20f00b0 -> Node0x20f0120;
	Node0x20f0120 -> Node0x20f0190;
	Node0x20ee818 -> Node0x20f0200;
	Node0x20efe10 -> Node0x20f0200;
	Node0x20f0200 -> Node0x20f0270;
	Node0x20f00b0 -> Node0x20f02e0;
	Node0x20f0040 -> Node0x20f0350;
	Node0x20ee818 -> Node0x20f03c0;
	Node0x20efe80 -> Node0x20f03c0;
	Node0x20f03c0 -> Node0x20f0430;
	Node0x20effd0 -> Node0x20f04a0;
	Node0x20f04a0 -> Node0x20f0510;
	Node0x20ef788 -> Node0x20f0510;
	Node0x20f0510 -> Node0x20f0580;
	Node0x20efe10 -> Node0x20f0580;
	Node0x20f0580 -> Node0x20f05f0;
	Node0x20eff60 -> Node0x20f05f0;
	Node0x20f05f0 -> Node0x20f0660;
	Node0x20f0270 -> Node0x20f0660;
	Node0x20f0660 -> Node0x20f06d0;
	Node0x20f02e0 -> Node0x20f06d0;
	Node0x20f06d0 -> Node0x20f0740;
	Node0x20f0350 -> Node0x20f0740;
	Node0x20f0740 -> Node0x20f07b0;
	Node0x20f0190 -> Node0x20f07b0;
	Node0x20f07b0 -> Node0x20f0820;
	Node0x20f0430 -> Node0x20f0820;
	Node0x20efef0 -> Node0x20f0890;
	Node0x20f0820 -> Node0x20f0890;
	Node0x20f0890 -> Node0x208e9d8;
	Node0x208e9d8 -> Node0x20f0b30;
	Node0x20ee408 -> Node0x20f0d88;
	Node0x20edec8 -> Node0x20f0ee8;
}
