digraph "DFG for'main' function" {
	Node0xf64278[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf642f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf64388[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf643e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xf64868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf64948[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xf64a48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf64b08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xf64bb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf64e18[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xf64ed8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf65038[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf65098[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf6ad40[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xf6af48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf6b0a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf6b1b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf6b278[shape=record, label="  ret i32 0"];
	Node0xf64278 -> Node0xf642f8;
	Node0xf642f8 -> Node0xf64388;
	Node0xf64388 -> Node0xf643e8;
	Node0xf643e8 -> Node0xf64868;
	Node0xf64868 -> Node0xf64948;
	Node0xf64948 -> Node0xf64a48;
	Node0xf64a48 -> Node0xf64b08;
	Node0xf64b08 -> Node0xf64bb8;
	Node0xf64bb8 -> Node0xf64e18;
	Node0xf64e18 -> Node0xf64ed8;
	Node0xf64ed8 -> Node0xf65038;
	Node0xf65038 -> Node0xf65098;
	Node0xf65098 -> Node0xf6ad40;
	Node0xf6ad40 -> Node0xf6af48;
	Node0xf6af48 -> Node0xf6b0a8;
	Node0xf6b0a8 -> Node0xf6b1b8;
	Node0xf6b1b8 -> Node0xf6b278;
edge [color=red]
	Node0xf64278 -> Node0xf643e8;
	Node0xf643e8 -> Node0xf64868;
	Node0xf642f8 -> Node0xf64948;
	Node0xf64948 -> Node0xf64a48;
	Node0xf64388 -> Node0xf64b08;
	Node0xf64b08 -> Node0xf64bb8;
	Node0xf64278 -> Node0xf64e18;
	Node0xf642f8 -> Node0xf64e18;
	Node0xf64388 -> Node0xf64e18;
	Node0xf64278 -> Node0xf64ed8;
	Node0xf642f8 -> Node0xf65038;
	Node0xf64388 -> Node0xf65098;
	Node0xf64ed8 -> Node0xf6ad40;
	Node0xf65038 -> Node0xf6ad40;
	Node0xf65098 -> Node0xf6ad40;
	Node0xf64b08 -> Node0xf6af48;
	Node0xf64948 -> Node0xf6b0a8;
	Node0xf643e8 -> Node0xf6b1b8;
}
