digraph "DFG for'crackme' function" {
	Node0x2439c10[shape=record, label="  %3 = xor i32 %0, -1"];
	Node0x2439c80[shape=record, label="  %4 = and i32 %1, %0"];
	Node0x2439d40[shape=record, label="  %5 = shl i32 %4, 1"];
	Node0x2439de0[shape=record, label="  %6 = xor i32 %5, -2"];
	Node0x2439e50[shape=record, label="  %7 = xor i32 %1, %0"];
	Node0x2439ef0[shape=record, label="  %8 = shl i32 %7, 2"];
	Node0x2439f90[shape=record, label="  %9 = xor i32 %8, -4"];
	Node0x243a000[shape=record, label="  %10 = shl i32 %7, 1"];
	Node0x243a070[shape=record, label="  %11 = xor i32 %1, -1"];
	Node0x243a0e0[shape=record, label="  %12 = and i32 %11, %0"];
	Node0x243a150[shape=record, label="  %13 = or i32 %1, %0"];
	Node0x243a1c0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x243a230[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x243a2a0[shape=record, label="  %16 = and i32 %3, %1"];
	Node0x243a310[shape=record, label="  %17 = sub i32 %4, %12"];
	Node0x243a380[shape=record, label="  %18 = sub i32 %17, %16"];
	Node0x243a420[shape=record, label="  %19 = mul i32 %18, 3"];
	Node0x243a490[shape=record, label="  %20 = sub i32 1, %0"];
	Node0x243a500[shape=record, label="  %21 = add i32 %20, %3"];
	Node0x243a570[shape=record, label="  %22 = add i32 %21, %11"];
	Node0x243a5e0[shape=record, label="  %23 = add i32 %22, %12"];
	Node0x243a650[shape=record, label="  %24 = sub i32 %23, %10"];
	Node0x243a6c0[shape=record, label="  %25 = sub i32 %24, %9"];
	Node0x243a730[shape=record, label="  %26 = add i32 %25, %6"];
	Node0x243a7a0[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0x243a810[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x243a880[shape=record, label="  %29 = icmp eq i32 %28, 3"];
	Node0x23da268[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x243ad20[shape=record, label="  %31 = tail call i32 @puts(i8* nonnull dereferenceable(1) %30)"];
	Node0x243ad70[shape=record, label="  ret void"];
	Node0x2439c10 -> Node0x2439c80;
	Node0x2439c80 -> Node0x2439d40;
	Node0x2439d40 -> Node0x2439de0;
	Node0x2439de0 -> Node0x2439e50;
	Node0x2439e50 -> Node0x2439ef0;
	Node0x2439ef0 -> Node0x2439f90;
	Node0x2439f90 -> Node0x243a000;
	Node0x243a000 -> Node0x243a070;
	Node0x243a070 -> Node0x243a0e0;
	Node0x243a0e0 -> Node0x243a150;
	Node0x243a150 -> Node0x243a1c0;
	Node0x243a1c0 -> Node0x243a230;
	Node0x243a230 -> Node0x243a2a0;
	Node0x243a2a0 -> Node0x243a310;
	Node0x243a310 -> Node0x243a380;
	Node0x243a380 -> Node0x243a420;
	Node0x243a420 -> Node0x243a490;
	Node0x243a490 -> Node0x243a500;
	Node0x243a500 -> Node0x243a570;
	Node0x243a570 -> Node0x243a5e0;
	Node0x243a5e0 -> Node0x243a650;
	Node0x243a650 -> Node0x243a6c0;
	Node0x243a6c0 -> Node0x243a730;
	Node0x243a730 -> Node0x243a7a0;
	Node0x243a7a0 -> Node0x243a810;
	Node0x243a810 -> Node0x243a880;
	Node0x243a880 -> Node0x23da268;
	Node0x23da268 -> Node0x243ad20;
	Node0x243ad20 -> Node0x243ad70;
edge [color=red]
	Node0x2439c80 -> Node0x2439d40;
	Node0x2439d40 -> Node0x2439de0;
	Node0x2439e50 -> Node0x2439ef0;
	Node0x2439ef0 -> Node0x2439f90;
	Node0x2439e50 -> Node0x243a000;
	Node0x243a070 -> Node0x243a0e0;
	Node0x243a150 -> Node0x243a1c0;
	Node0x243a1c0 -> Node0x243a230;
	Node0x2439c10 -> Node0x243a2a0;
	Node0x2439c80 -> Node0x243a310;
	Node0x243a0e0 -> Node0x243a310;
	Node0x243a310 -> Node0x243a380;
	Node0x243a2a0 -> Node0x243a380;
	Node0x243a380 -> Node0x243a420;
	Node0x243a490 -> Node0x243a500;
	Node0x2439c10 -> Node0x243a500;
	Node0x243a500 -> Node0x243a570;
	Node0x243a070 -> Node0x243a570;
	Node0x243a570 -> Node0x243a5e0;
	Node0x243a0e0 -> Node0x243a5e0;
	Node0x243a5e0 -> Node0x243a650;
	Node0x243a000 -> Node0x243a650;
	Node0x243a650 -> Node0x243a6c0;
	Node0x2439f90 -> Node0x243a6c0;
	Node0x243a6c0 -> Node0x243a730;
	Node0x2439de0 -> Node0x243a730;
	Node0x243a730 -> Node0x243a7a0;
	Node0x243a230 -> Node0x243a7a0;
	Node0x243a7a0 -> Node0x243a810;
	Node0x243a420 -> Node0x243a810;
	Node0x243a810 -> Node0x243a880;
	Node0x243a880 -> Node0x23da268;
	Node0x23da268 -> Node0x243ad20;
}
