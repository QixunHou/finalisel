digraph "DFG for'main' function" {
	Node0x243af38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x243afb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x243b048[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x243b4a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x243b588[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x243b6a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x243b8e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x243b998[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x243c908[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x243cf90[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x243d000[shape=record, label="  %9 = and i32 %7, %6"];
	Node0x243d070[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x243d0e0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x243d150[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0x243d1c0[shape=record, label="  %13 = shl i32 %12, 2"];
	Node0x243d230[shape=record, label="  %14 = xor i32 %13, -4"];
	Node0x243d2a0[shape=record, label="  %15 = shl i32 %12, 1"];
	Node0x243d310[shape=record, label="  %16 = xor i32 %7, -1"];
	Node0x243d380[shape=record, label="  %17 = and i32 %6, %16"];
	Node0x243d3f0[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x243d460[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x243d4d0[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x243d540[shape=record, label="  %21 = and i32 %7, %8"];
	Node0x243d5b0[shape=record, label="  %22 = sub i32 %9, %17"];
	Node0x243d620[shape=record, label="  %23 = sub i32 %22, %21"];
	Node0x243d690[shape=record, label="  %24 = mul i32 %23, 3"];
	Node0x243d700[shape=record, label="  %25 = sub i32 1, %6"];
	Node0x243d770[shape=record, label="  %26 = add i32 %25, %8"];
	Node0x243d7e0[shape=record, label="  %27 = add i32 %26, %16"];
	Node0x243d850[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x243d8c0[shape=record, label="  %29 = sub i32 %28, %15"];
	Node0x243d930[shape=record, label="  %30 = sub i32 %29, %14"];
	Node0x243d9a0[shape=record, label="  %31 = add i32 %30, %11"];
	Node0x243da10[shape=record, label="  %32 = sub i32 %31, %20"];
	Node0x243dc90[shape=record, label="  %33 = add i32 %32, %24"];
	Node0x243dd00[shape=record, label="  %34 = icmp eq i32 %33, 3"];
	Node0x23db9d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x243dd90[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0x243dfe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x243e148[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x243e208[shape=record, label="  ret i32 0"];
	Node0x243af38 -> Node0x243afb8;
	Node0x243afb8 -> Node0x243b048;
	Node0x243b048 -> Node0x243b4a8;
	Node0x243b4a8 -> Node0x243b588;
	Node0x243b588 -> Node0x243b6a8;
	Node0x243b6a8 -> Node0x243b8e0;
	Node0x243b8e0 -> Node0x243b998;
	Node0x243b998 -> Node0x243c908;
	Node0x243c908 -> Node0x243cf90;
	Node0x243cf90 -> Node0x243d000;
	Node0x243d000 -> Node0x243d070;
	Node0x243d070 -> Node0x243d0e0;
	Node0x243d0e0 -> Node0x243d150;
	Node0x243d150 -> Node0x243d1c0;
	Node0x243d1c0 -> Node0x243d230;
	Node0x243d230 -> Node0x243d2a0;
	Node0x243d2a0 -> Node0x243d310;
	Node0x243d310 -> Node0x243d380;
	Node0x243d380 -> Node0x243d3f0;
	Node0x243d3f0 -> Node0x243d460;
	Node0x243d460 -> Node0x243d4d0;
	Node0x243d4d0 -> Node0x243d540;
	Node0x243d540 -> Node0x243d5b0;
	Node0x243d5b0 -> Node0x243d620;
	Node0x243d620 -> Node0x243d690;
	Node0x243d690 -> Node0x243d700;
	Node0x243d700 -> Node0x243d770;
	Node0x243d770 -> Node0x243d7e0;
	Node0x243d7e0 -> Node0x243d850;
	Node0x243d850 -> Node0x243d8c0;
	Node0x243d8c0 -> Node0x243d930;
	Node0x243d930 -> Node0x243d9a0;
	Node0x243d9a0 -> Node0x243da10;
	Node0x243da10 -> Node0x243dc90;
	Node0x243dc90 -> Node0x243dd00;
	Node0x243dd00 -> Node0x23db9d8;
	Node0x23db9d8 -> Node0x243dd90;
	Node0x243dd90 -> Node0x243dfe8;
	Node0x243dfe8 -> Node0x243e148;
	Node0x243e148 -> Node0x243e208;
edge [color=red]
	Node0x243af38 -> Node0x243b048;
	Node0x243b048 -> Node0x243b4a8;
	Node0x243afb8 -> Node0x243b588;
	Node0x243b588 -> Node0x243b6a8;
	Node0x243af38 -> Node0x243b8e0;
	Node0x243afb8 -> Node0x243b8e0;
	Node0x243af38 -> Node0x243b998;
	Node0x243afb8 -> Node0x243c908;
	Node0x243b998 -> Node0x243cf90;
	Node0x243c908 -> Node0x243d000;
	Node0x243b998 -> Node0x243d000;
	Node0x243d000 -> Node0x243d070;
	Node0x243d070 -> Node0x243d0e0;
	Node0x243c908 -> Node0x243d150;
	Node0x243b998 -> Node0x243d150;
	Node0x243d150 -> Node0x243d1c0;
	Node0x243d1c0 -> Node0x243d230;
	Node0x243d150 -> Node0x243d2a0;
	Node0x243c908 -> Node0x243d310;
	Node0x243b998 -> Node0x243d380;
	Node0x243d310 -> Node0x243d380;
	Node0x243c908 -> Node0x243d3f0;
	Node0x243b998 -> Node0x243d3f0;
	Node0x243d3f0 -> Node0x243d460;
	Node0x243d460 -> Node0x243d4d0;
	Node0x243c908 -> Node0x243d540;
	Node0x243cf90 -> Node0x243d540;
	Node0x243d000 -> Node0x243d5b0;
	Node0x243d380 -> Node0x243d5b0;
	Node0x243d5b0 -> Node0x243d620;
	Node0x243d540 -> Node0x243d620;
	Node0x243d620 -> Node0x243d690;
	Node0x243b998 -> Node0x243d700;
	Node0x243d700 -> Node0x243d770;
	Node0x243cf90 -> Node0x243d770;
	Node0x243d770 -> Node0x243d7e0;
	Node0x243d310 -> Node0x243d7e0;
	Node0x243d7e0 -> Node0x243d850;
	Node0x243d380 -> Node0x243d850;
	Node0x243d850 -> Node0x243d8c0;
	Node0x243d2a0 -> Node0x243d8c0;
	Node0x243d8c0 -> Node0x243d930;
	Node0x243d230 -> Node0x243d930;
	Node0x243d930 -> Node0x243d9a0;
	Node0x243d0e0 -> Node0x243d9a0;
	Node0x243d9a0 -> Node0x243da10;
	Node0x243d4d0 -> Node0x243da10;
	Node0x243da10 -> Node0x243dc90;
	Node0x243d690 -> Node0x243dc90;
	Node0x243dc90 -> Node0x243dd00;
	Node0x243dd00 -> Node0x23db9d8;
	Node0x23db9d8 -> Node0x243dd90;
	Node0x243b588 -> Node0x243dfe8;
	Node0x243b048 -> Node0x243e148;
}
