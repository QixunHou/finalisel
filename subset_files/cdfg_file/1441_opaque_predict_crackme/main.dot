digraph "DFG for'main' function" {
	Node0x1eec258[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1eec2d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1eec368[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1eec3c8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1eec848[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1eec928[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1eeca28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1eecae8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1eecb98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1eecdf8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1eeceb8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1eed018[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1eed078[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ef2b30[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1ef2d38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ef2e98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ef2fa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ef3068[shape=record, label="  ret i32 0"];
	Node0x1eec258 -> Node0x1eec2d8;
	Node0x1eec2d8 -> Node0x1eec368;
	Node0x1eec368 -> Node0x1eec3c8;
	Node0x1eec3c8 -> Node0x1eec848;
	Node0x1eec848 -> Node0x1eec928;
	Node0x1eec928 -> Node0x1eeca28;
	Node0x1eeca28 -> Node0x1eecae8;
	Node0x1eecae8 -> Node0x1eecb98;
	Node0x1eecb98 -> Node0x1eecdf8;
	Node0x1eecdf8 -> Node0x1eeceb8;
	Node0x1eeceb8 -> Node0x1eed018;
	Node0x1eed018 -> Node0x1eed078;
	Node0x1eed078 -> Node0x1ef2b30;
	Node0x1ef2b30 -> Node0x1ef2d38;
	Node0x1ef2d38 -> Node0x1ef2e98;
	Node0x1ef2e98 -> Node0x1ef2fa8;
	Node0x1ef2fa8 -> Node0x1ef3068;
edge [color=red]
	Node0x1eec258 -> Node0x1eec3c8;
	Node0x1eec3c8 -> Node0x1eec848;
	Node0x1eec2d8 -> Node0x1eec928;
	Node0x1eec928 -> Node0x1eeca28;
	Node0x1eec368 -> Node0x1eecae8;
	Node0x1eecae8 -> Node0x1eecb98;
	Node0x1eec258 -> Node0x1eecdf8;
	Node0x1eec2d8 -> Node0x1eecdf8;
	Node0x1eec368 -> Node0x1eecdf8;
	Node0x1eec258 -> Node0x1eeceb8;
	Node0x1eec2d8 -> Node0x1eed018;
	Node0x1eec368 -> Node0x1eed078;
	Node0x1eeceb8 -> Node0x1ef2b30;
	Node0x1eed018 -> Node0x1ef2b30;
	Node0x1eed078 -> Node0x1ef2b30;
	Node0x1eecae8 -> Node0x1ef2d38;
	Node0x1eec928 -> Node0x1ef2e98;
	Node0x1eec3c8 -> Node0x1ef2fa8;
}
