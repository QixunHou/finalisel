digraph "DFG for'main' function" {
	Node0x13af6b8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x13af738[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x13af7c8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x13af828[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x13af8d8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x13afd08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13afde8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x13afee8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13affa8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x13b0058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x13b0118[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x13b01c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x13aa9c0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x13b03c8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x13b1338[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x13b19a8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x13b1a08[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x13b1a80[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x13b1af0[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x13b1b60[shape=record, label="  %16 = and i32 %13, %10"];
	Node0x13b1bd0[shape=record, label="  %17 = sub i32 1, %15"];
	Node0x13b1c40[shape=record, label="  %18 = add i32 %17, %16"];
	Node0x13b1cb0[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x13b1d20[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x13b1d90[shape=record, label="  %21 = and i32 %11, %14"];
	Node0x13b1e00[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x13b1e70[shape=record, label="  %23 = xor i32 %13, -1"];
	Node0x13b1ee0[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0x13b1f50[shape=record, label="  %25 = or i32 %13, %24"];
	Node0x13b1fc0[shape=record, label="  %26 = or i32 %13, %10"];
	Node0x13b2030[shape=record, label="  %27 = shl i32 %13, 1"];
	Node0x13b20a0[shape=record, label="  %28 = add i32 %26, 1"];
	Node0x13b2110[shape=record, label="  %29 = xor i32 %25, -1"];
	Node0x13b2180[shape=record, label="  %30 = and i32 %13, %24"];
	Node0x13b21f0[shape=record, label="  %31 = shl i32 %16, 2"];
	Node0x13b2260[shape=record, label="  %32 = sub i32 %28, %30"];
	Node0x13b22d0[shape=record, label="  %33 = add i32 %32, %25"];
	Node0x13b2340[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0x13b23b0[shape=record, label="  %35 = sub i32 3, %12"];
	Node0x13b2420[shape=record, label="  %36 = add i32 %35, %19"];
	Node0x13b2490[shape=record, label="  %37 = add i32 %36, %20"];
	Node0x13b2500[shape=record, label="  %38 = add i32 %37, %23"];
	Node0x13b2570[shape=record, label="  %39 = sub i32 %38, %22"];
	Node0x13b25e0[shape=record, label="  %40 = sub i32 %39, %26"];
	Node0x13b2650[shape=record, label="  %41 = add i32 %40, %27"];
	Node0x13b26c0[shape=record, label="  %42 = add i32 %41, %29"];
	Node0x13b2730[shape=record, label="  %43 = sub i32 %42, %31"];
	Node0x13b27a0[shape=record, label="  %44 = add i32 %43, %34"];
	Node0x13b2810[shape=record, label="  %45 = icmp eq i32 %18, %44"];
	Node0x134f8b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x13b28a0[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0x13b2b48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x13b2ca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x13b2db8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13b2ec8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13b2f88[shape=record, label="  ret i32 0"];
	Node0x13af6b8 -> Node0x13af738;
	Node0x13af738 -> Node0x13af7c8;
	Node0x13af7c8 -> Node0x13af828;
	Node0x13af828 -> Node0x13af8d8;
	Node0x13af8d8 -> Node0x13afd08;
	Node0x13afd08 -> Node0x13afde8;
	Node0x13afde8 -> Node0x13afee8;
	Node0x13afee8 -> Node0x13affa8;
	Node0x13affa8 -> Node0x13b0058;
	Node0x13b0058 -> Node0x13b0118;
	Node0x13b0118 -> Node0x13b01c8;
	Node0x13b01c8 -> Node0x13aa9c0;
	Node0x13aa9c0 -> Node0x13b03c8;
	Node0x13b03c8 -> Node0x13b1338;
	Node0x13b1338 -> Node0x13b19a8;
	Node0x13b19a8 -> Node0x13b1a08;
	Node0x13b1a08 -> Node0x13b1a80;
	Node0x13b1a80 -> Node0x13b1af0;
	Node0x13b1af0 -> Node0x13b1b60;
	Node0x13b1b60 -> Node0x13b1bd0;
	Node0x13b1bd0 -> Node0x13b1c40;
	Node0x13b1c40 -> Node0x13b1cb0;
	Node0x13b1cb0 -> Node0x13b1d20;
	Node0x13b1d20 -> Node0x13b1d90;
	Node0x13b1d90 -> Node0x13b1e00;
	Node0x13b1e00 -> Node0x13b1e70;
	Node0x13b1e70 -> Node0x13b1ee0;
	Node0x13b1ee0 -> Node0x13b1f50;
	Node0x13b1f50 -> Node0x13b1fc0;
	Node0x13b1fc0 -> Node0x13b2030;
	Node0x13b2030 -> Node0x13b20a0;
	Node0x13b20a0 -> Node0x13b2110;
	Node0x13b2110 -> Node0x13b2180;
	Node0x13b2180 -> Node0x13b21f0;
	Node0x13b21f0 -> Node0x13b2260;
	Node0x13b2260 -> Node0x13b22d0;
	Node0x13b22d0 -> Node0x13b2340;
	Node0x13b2340 -> Node0x13b23b0;
	Node0x13b23b0 -> Node0x13b2420;
	Node0x13b2420 -> Node0x13b2490;
	Node0x13b2490 -> Node0x13b2500;
	Node0x13b2500 -> Node0x13b2570;
	Node0x13b2570 -> Node0x13b25e0;
	Node0x13b25e0 -> Node0x13b2650;
	Node0x13b2650 -> Node0x13b26c0;
	Node0x13b26c0 -> Node0x13b2730;
	Node0x13b2730 -> Node0x13b27a0;
	Node0x13b27a0 -> Node0x13b2810;
	Node0x13b2810 -> Node0x134f8b8;
	Node0x134f8b8 -> Node0x13b28a0;
	Node0x13b28a0 -> Node0x13b2b48;
	Node0x13b2b48 -> Node0x13b2ca8;
	Node0x13b2ca8 -> Node0x13b2db8;
	Node0x13b2db8 -> Node0x13b2ec8;
	Node0x13b2ec8 -> Node0x13b2f88;
edge [color=red]
	Node0x13af6b8 -> Node0x13af8d8;
	Node0x13af8d8 -> Node0x13afd08;
	Node0x13af738 -> Node0x13afde8;
	Node0x13afde8 -> Node0x13afee8;
	Node0x13af7c8 -> Node0x13affa8;
	Node0x13affa8 -> Node0x13b0058;
	Node0x13af828 -> Node0x13b0118;
	Node0x13b0118 -> Node0x13b01c8;
	Node0x13af6b8 -> Node0x13aa9c0;
	Node0x13af738 -> Node0x13aa9c0;
	Node0x13af7c8 -> Node0x13aa9c0;
	Node0x13af828 -> Node0x13aa9c0;
	Node0x13af6b8 -> Node0x13b03c8;
	Node0x13af738 -> Node0x13b1338;
	Node0x13af7c8 -> Node0x13b19a8;
	Node0x13af828 -> Node0x13b1a08;
	Node0x13b19a8 -> Node0x13b1a80;
	Node0x13b1338 -> Node0x13b1af0;
	Node0x13b1a80 -> Node0x13b1af0;
	Node0x13b1a08 -> Node0x13b1b60;
	Node0x13b03c8 -> Node0x13b1b60;
	Node0x13b1af0 -> Node0x13b1bd0;
	Node0x13b1bd0 -> Node0x13b1c40;
	Node0x13b1b60 -> Node0x13b1c40;
	Node0x13b19a8 -> Node0x13b1cb0;
	Node0x13b1338 -> Node0x13b1cb0;
	Node0x13b19a8 -> Node0x13b1d20;
	Node0x13b1338 -> Node0x13b1d20;
	Node0x13b1338 -> Node0x13b1d90;
	Node0x13b1a80 -> Node0x13b1d90;
	Node0x13b1d90 -> Node0x13b1e00;
	Node0x13b1a08 -> Node0x13b1e70;
	Node0x13b03c8 -> Node0x13b1ee0;
	Node0x13b1a08 -> Node0x13b1f50;
	Node0x13b1ee0 -> Node0x13b1f50;
	Node0x13b1a08 -> Node0x13b1fc0;
	Node0x13b03c8 -> Node0x13b1fc0;
	Node0x13b1a08 -> Node0x13b2030;
	Node0x13b1fc0 -> Node0x13b20a0;
	Node0x13b1f50 -> Node0x13b2110;
	Node0x13b1a08 -> Node0x13b2180;
	Node0x13b1ee0 -> Node0x13b2180;
	Node0x13b1b60 -> Node0x13b21f0;
	Node0x13b20a0 -> Node0x13b2260;
	Node0x13b2180 -> Node0x13b2260;
	Node0x13b2260 -> Node0x13b22d0;
	Node0x13b1f50 -> Node0x13b22d0;
	Node0x13b22d0 -> Node0x13b2340;
	Node0x13b19a8 -> Node0x13b23b0;
	Node0x13b23b0 -> Node0x13b2420;
	Node0x13b1cb0 -> Node0x13b2420;
	Node0x13b2420 -> Node0x13b2490;
	Node0x13b1d20 -> Node0x13b2490;
	Node0x13b2490 -> Node0x13b2500;
	Node0x13b1e70 -> Node0x13b2500;
	Node0x13b2500 -> Node0x13b2570;
	Node0x13b1e00 -> Node0x13b2570;
	Node0x13b2570 -> Node0x13b25e0;
	Node0x13b1fc0 -> Node0x13b25e0;
	Node0x13b25e0 -> Node0x13b2650;
	Node0x13b2030 -> Node0x13b2650;
	Node0x13b2650 -> Node0x13b26c0;
	Node0x13b2110 -> Node0x13b26c0;
	Node0x13b26c0 -> Node0x13b2730;
	Node0x13b21f0 -> Node0x13b2730;
	Node0x13b2730 -> Node0x13b27a0;
	Node0x13b2340 -> Node0x13b27a0;
	Node0x13b1c40 -> Node0x13b2810;
	Node0x13b27a0 -> Node0x13b2810;
	Node0x13b2810 -> Node0x134f8b8;
	Node0x134f8b8 -> Node0x13b28a0;
	Node0x13b0118 -> Node0x13b2b48;
	Node0x13affa8 -> Node0x13b2ca8;
	Node0x13afde8 -> Node0x13b2db8;
	Node0x13af8d8 -> Node0x13b2ec8;
}
