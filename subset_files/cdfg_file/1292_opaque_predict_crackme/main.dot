digraph "DFG for'main' function" {
	Node0x723c08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x723c88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x723d18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x723d78[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x7241f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7242d8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x7243d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x724498[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x724548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7247a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x724868[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x7249c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x724a28[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x728790[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x728998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x728af8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x728c08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x728cc8[shape=record, label="  ret i32 0"];
	Node0x723c08 -> Node0x723c88;
	Node0x723c88 -> Node0x723d18;
	Node0x723d18 -> Node0x723d78;
	Node0x723d78 -> Node0x7241f8;
	Node0x7241f8 -> Node0x7242d8;
	Node0x7242d8 -> Node0x7243d8;
	Node0x7243d8 -> Node0x724498;
	Node0x724498 -> Node0x724548;
	Node0x724548 -> Node0x7247a8;
	Node0x7247a8 -> Node0x724868;
	Node0x724868 -> Node0x7249c8;
	Node0x7249c8 -> Node0x724a28;
	Node0x724a28 -> Node0x728790;
	Node0x728790 -> Node0x728998;
	Node0x728998 -> Node0x728af8;
	Node0x728af8 -> Node0x728c08;
	Node0x728c08 -> Node0x728cc8;
edge [color=red]
	Node0x723c08 -> Node0x723d78;
	Node0x723d78 -> Node0x7241f8;
	Node0x723c88 -> Node0x7242d8;
	Node0x7242d8 -> Node0x7243d8;
	Node0x723d18 -> Node0x724498;
	Node0x724498 -> Node0x724548;
	Node0x723c08 -> Node0x7247a8;
	Node0x723c88 -> Node0x7247a8;
	Node0x723d18 -> Node0x7247a8;
	Node0x723c08 -> Node0x724868;
	Node0x723c88 -> Node0x7249c8;
	Node0x723d18 -> Node0x724a28;
	Node0x724868 -> Node0x728790;
	Node0x7249c8 -> Node0x728790;
	Node0x724a28 -> Node0x728790;
	Node0x724498 -> Node0x728998;
	Node0x7242d8 -> Node0x728af8;
	Node0x723d78 -> Node0x728c08;
}
