digraph "DFG for'crackme' function" {
	Node0x6cdb70[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x6ce1f0[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x6ce290[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x6ce300[shape=record, label="  %8 = or i32 %3, %0"];
	Node0x6ce370[shape=record, label="  %9 = sub i32 %7, %1"];
	Node0x6ce3e0[shape=record, label="  %10 = add i32 %9, %6"];
	Node0x6ce450[shape=record, label="  %11 = add i32 %10, %8"];
	Node0x6ce4c0[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x6ce530[shape=record, label="  %13 = or i32 %12, %1"];
	Node0x6ce5d0[shape=record, label="  %14 = mul i32 %13, -2"];
	Node0x6ce640[shape=record, label="  %15 = xor i32 %6, -2"];
	Node0x6ce6b0[shape=record, label="  %16 = sub i32 %14, %15"];
	Node0x6ce720[shape=record, label="  %17 = or i32 %16, 1"];
	Node0x6ce790[shape=record, label="  %18 = and i32 %2, %1"];
	Node0x6ce800[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x6ce870[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x6ce8e0[shape=record, label="  %21 = or i32 %2, %1"];
	Node0x6ce950[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x6ce9c0[shape=record, label="  %23 = xor i32 %13, -1"];
	Node0x6cea30[shape=record, label="  %24 = and i32 %12, %1"];
	Node0x6ceaa0[shape=record, label="  %25 = and i32 %3, %0"];
	Node0x6ceb10[shape=record, label="  %26 = and i32 %7, %3"];
	Node0x6ceb80[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x6cebf0[shape=record, label="  %28 = or i32 %7, %3"];
	Node0x6cec60[shape=record, label="  %29 = add i32 %8, 1"];
	Node0x6cecd0[shape=record, label="  %30 = shl i32 %28, 1"];
	Node0x6ced40[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x6cede0[shape=record, label="  %32 = shl i32 %25, 2"];
	Node0x6cf060[shape=record, label="  %33 = add i32 %24, %23"];
	Node0x6cf0d0[shape=record, label="  %34 = add i32 %33, %28"];
	Node0x6cf140[shape=record, label="  %35 = sub i32 %34, %26"];
	Node0x6cf1e0[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0x6cf250[shape=record, label="  %37 = add i32 %18, %22"];
	Node0x6cf2c0[shape=record, label="  %38 = add i32 %37, %29"];
	Node0x6cf360[shape=record, label="  %39 = mul i32 %38, 5"];
	Node0x6cf3d0[shape=record, label="  %40 = sub i32 %1, %25"];
	Node0x6cf440[shape=record, label="  %41 = add i32 %40, %27"];
	Node0x6cf4b0[shape=record, label="  %42 = add i32 %41, %20"];
	Node0x6cf520[shape=record, label="  %43 = sub i32 %42, %32"];
	Node0x6cf590[shape=record, label="  %44 = sub i32 %43, %31"];
	Node0x6cf600[shape=record, label="  %45 = add i32 %44, %17"];
	Node0x6cf670[shape=record, label="  %46 = add i32 %45, %39"];
	Node0x6cf6e0[shape=record, label="  %47 = add i32 %46, %36"];
	Node0x6cf750[shape=record, label="  %48 = icmp eq i32 %11, %47"];
	Node0x66e268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6cfbf0[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x6cfc40[shape=record, label="  ret void"];
	Node0x6cdb70 -> Node0x6ce1f0;
	Node0x6ce1f0 -> Node0x6ce290;
	Node0x6ce290 -> Node0x6ce300;
	Node0x6ce300 -> Node0x6ce370;
	Node0x6ce370 -> Node0x6ce3e0;
	Node0x6ce3e0 -> Node0x6ce450;
	Node0x6ce450 -> Node0x6ce4c0;
	Node0x6ce4c0 -> Node0x6ce530;
	Node0x6ce530 -> Node0x6ce5d0;
	Node0x6ce5d0 -> Node0x6ce640;
	Node0x6ce640 -> Node0x6ce6b0;
	Node0x6ce6b0 -> Node0x6ce720;
	Node0x6ce720 -> Node0x6ce790;
	Node0x6ce790 -> Node0x6ce800;
	Node0x6ce800 -> Node0x6ce870;
	Node0x6ce870 -> Node0x6ce8e0;
	Node0x6ce8e0 -> Node0x6ce950;
	Node0x6ce950 -> Node0x6ce9c0;
	Node0x6ce9c0 -> Node0x6cea30;
	Node0x6cea30 -> Node0x6ceaa0;
	Node0x6ceaa0 -> Node0x6ceb10;
	Node0x6ceb10 -> Node0x6ceb80;
	Node0x6ceb80 -> Node0x6cebf0;
	Node0x6cebf0 -> Node0x6cec60;
	Node0x6cec60 -> Node0x6cecd0;
	Node0x6cecd0 -> Node0x6ced40;
	Node0x6ced40 -> Node0x6cede0;
	Node0x6cede0 -> Node0x6cf060;
	Node0x6cf060 -> Node0x6cf0d0;
	Node0x6cf0d0 -> Node0x6cf140;
	Node0x6cf140 -> Node0x6cf1e0;
	Node0x6cf1e0 -> Node0x6cf250;
	Node0x6cf250 -> Node0x6cf2c0;
	Node0x6cf2c0 -> Node0x6cf360;
	Node0x6cf360 -> Node0x6cf3d0;
	Node0x6cf3d0 -> Node0x6cf440;
	Node0x6cf440 -> Node0x6cf4b0;
	Node0x6cf4b0 -> Node0x6cf520;
	Node0x6cf520 -> Node0x6cf590;
	Node0x6cf590 -> Node0x6cf600;
	Node0x6cf600 -> Node0x6cf670;
	Node0x6cf670 -> Node0x6cf6e0;
	Node0x6cf6e0 -> Node0x6cf750;
	Node0x6cf750 -> Node0x66e268;
	Node0x66e268 -> Node0x6cfbf0;
	Node0x6cfbf0 -> Node0x6cfc40;
edge [color=red]
	Node0x6cdb70 -> Node0x6ce1f0;
	Node0x6ce290 -> Node0x6ce370;
	Node0x6ce370 -> Node0x6ce3e0;
	Node0x6ce1f0 -> Node0x6ce3e0;
	Node0x6ce3e0 -> Node0x6ce450;
	Node0x6ce300 -> Node0x6ce450;
	Node0x6ce4c0 -> Node0x6ce530;
	Node0x6ce530 -> Node0x6ce5d0;
	Node0x6ce1f0 -> Node0x6ce640;
	Node0x6ce5d0 -> Node0x6ce6b0;
	Node0x6ce640 -> Node0x6ce6b0;
	Node0x6ce6b0 -> Node0x6ce720;
	Node0x6ce790 -> Node0x6ce800;
	Node0x6ce800 -> Node0x6ce870;
	Node0x6ce8e0 -> Node0x6ce950;
	Node0x6ce530 -> Node0x6ce9c0;
	Node0x6ce4c0 -> Node0x6cea30;
	Node0x6ce290 -> Node0x6ceb10;
	Node0x6ceb10 -> Node0x6ceb80;
	Node0x6ce290 -> Node0x6cebf0;
	Node0x6ce300 -> Node0x6cec60;
	Node0x6cebf0 -> Node0x6cecd0;
	Node0x6cecd0 -> Node0x6ced40;
	Node0x6ceaa0 -> Node0x6cede0;
	Node0x6cea30 -> Node0x6cf060;
	Node0x6ce9c0 -> Node0x6cf060;
	Node0x6cf060 -> Node0x6cf0d0;
	Node0x6cebf0 -> Node0x6cf0d0;
	Node0x6cf0d0 -> Node0x6cf140;
	Node0x6ceb10 -> Node0x6cf140;
	Node0x6cf140 -> Node0x6cf1e0;
	Node0x6ce790 -> Node0x6cf250;
	Node0x6ce950 -> Node0x6cf250;
	Node0x6cf250 -> Node0x6cf2c0;
	Node0x6cec60 -> Node0x6cf2c0;
	Node0x6cf2c0 -> Node0x6cf360;
	Node0x6ceaa0 -> Node0x6cf3d0;
	Node0x6cf3d0 -> Node0x6cf440;
	Node0x6ceb80 -> Node0x6cf440;
	Node0x6cf440 -> Node0x6cf4b0;
	Node0x6ce870 -> Node0x6cf4b0;
	Node0x6cf4b0 -> Node0x6cf520;
	Node0x6cede0 -> Node0x6cf520;
	Node0x6cf520 -> Node0x6cf590;
	Node0x6ced40 -> Node0x6cf590;
	Node0x6cf590 -> Node0x6cf600;
	Node0x6ce720 -> Node0x6cf600;
	Node0x6cf600 -> Node0x6cf670;
	Node0x6cf360 -> Node0x6cf670;
	Node0x6cf670 -> Node0x6cf6e0;
	Node0x6cf1e0 -> Node0x6cf6e0;
	Node0x6ce450 -> Node0x6cf750;
	Node0x6cf6e0 -> Node0x6cf750;
	Node0x6cf750 -> Node0x66e268;
	Node0x66e268 -> Node0x6cfbf0;
}
