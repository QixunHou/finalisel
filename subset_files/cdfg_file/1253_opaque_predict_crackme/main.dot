digraph "DFG for'main' function" {
	Node0x14d47c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14d4848[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14d48d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14d4938[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x14d4db8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14d4e98[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x14d4f98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14d5058[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x14d5108[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14d5368[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x14d5428[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14d5588[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14d55e8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14d82b0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x14d84b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14d8618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14d8728[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14d87e8[shape=record, label="  ret i32 0"];
	Node0x14d47c8 -> Node0x14d4848;
	Node0x14d4848 -> Node0x14d48d8;
	Node0x14d48d8 -> Node0x14d4938;
	Node0x14d4938 -> Node0x14d4db8;
	Node0x14d4db8 -> Node0x14d4e98;
	Node0x14d4e98 -> Node0x14d4f98;
	Node0x14d4f98 -> Node0x14d5058;
	Node0x14d5058 -> Node0x14d5108;
	Node0x14d5108 -> Node0x14d5368;
	Node0x14d5368 -> Node0x14d5428;
	Node0x14d5428 -> Node0x14d5588;
	Node0x14d5588 -> Node0x14d55e8;
	Node0x14d55e8 -> Node0x14d82b0;
	Node0x14d82b0 -> Node0x14d84b8;
	Node0x14d84b8 -> Node0x14d8618;
	Node0x14d8618 -> Node0x14d8728;
	Node0x14d8728 -> Node0x14d87e8;
edge [color=red]
	Node0x14d47c8 -> Node0x14d4938;
	Node0x14d4938 -> Node0x14d4db8;
	Node0x14d4848 -> Node0x14d4e98;
	Node0x14d4e98 -> Node0x14d4f98;
	Node0x14d48d8 -> Node0x14d5058;
	Node0x14d5058 -> Node0x14d5108;
	Node0x14d47c8 -> Node0x14d5368;
	Node0x14d4848 -> Node0x14d5368;
	Node0x14d48d8 -> Node0x14d5368;
	Node0x14d47c8 -> Node0x14d5428;
	Node0x14d4848 -> Node0x14d5588;
	Node0x14d48d8 -> Node0x14d55e8;
	Node0x14d5428 -> Node0x14d82b0;
	Node0x14d5588 -> Node0x14d82b0;
	Node0x14d55e8 -> Node0x14d82b0;
	Node0x14d5058 -> Node0x14d84b8;
	Node0x14d4e98 -> Node0x14d8618;
	Node0x14d4938 -> Node0x14d8728;
}
