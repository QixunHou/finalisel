; ModuleID = '../.././c_source_file/1548_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1548_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = or i32 %1, %0
  %9 = and i32 %8, %7
  %10 = and i32 %5, %4
  %11 = or i32 %5, %3
  %12 = xor i32 %11, -1
  %13 = or i32 %10, %12
  %14 = xor i32 %5, -1
  %15 = and i32 %14, %4
  %16 = sub i32 %9, %15
  %17 = sub i32 %16, %13
  %18 = xor i32 %0, -1
  %19 = xor i32 %1, -1
  %20 = and i32 %19, %2
  %21 = and i32 %20, %18
  %22 = or i32 %19, %2
  %23 = and i32 %22, %0
  %24 = xor i32 %23, 2147483647
  %25 = xor i32 %24, %21
  %26 = and i32 %2, %1
  %27 = and i32 %26, %18
  %28 = xor i32 %2, %1
  %29 = and i32 %28, %0
  %30 = or i32 %27, %29
  %31 = xor i32 %2, %0
  %32 = xor i32 %31, -1
  %33 = and i32 %32, %19
  %34 = xor i32 %8, -1
  %35 = or i32 %32, %34
  %36 = and i32 %28, %18
  %37 = and i32 %2, %0
  %38 = xor i32 %37, -1
  %39 = and i32 %38, %19
  %40 = and i32 %7, %1
  %41 = xor i32 %40, %0
  %42 = and i32 %8, %2
  %43 = xor i32 %40, -1
  %44 = or i32 %43, %0
  %45 = shl i32 %44, 1
  %46 = or i32 %19, %0
  %47 = xor i32 %46, -1
  %48 = or i32 %7, %47
  %49 = and i32 %26, %0
  %50 = or i32 %2, %1
  %51 = xor i32 %50, %0
  %52 = or i32 %49, %51
  %53 = or i32 %37, %1
  %54 = and i32 %19, %0
  %55 = xor i32 %54, -1
  %56 = and i32 %7, %55
  %57 = or i32 %7, %0
  %58 = xor i32 %57, -1
  %59 = or i32 %58, %1
  %60 = xor i32 %28, -1
  %61 = and i32 %46, %60
  %62 = and i32 %57, %19
  %63 = and i32 %46, %7
  %64 = xor i32 %38, %1
  %65 = shl i32 %64, 1
  %66 = xor i32 %1, %0
  %67 = and i32 %66, %32
  %68 = or i32 %26, %54
  %69 = or i32 %7, %1
  %70 = xor i32 %66, -1
  %71 = and i32 %57, %70
  %72 = or i32 %2, %0
  %73 = and i32 %72, %70
  %74 = and i32 %7, %0
  %75 = or i32 %74, %1
  %76 = xor i32 %54, %43
  %77 = and i32 %31, %70
  %78 = or i32 %66, %7
  %79 = xor i32 %69, -1
  %80 = or i32 %74, %79
  %81 = and i32 %50, %18
  %82 = xor i32 %49, -1
  %83 = xor i32 %81, %82
  %84 = xor i32 %54, %2
  %85 = xor i32 %28, %0
  %86 = xor i32 %49, %85
  %87 = and i32 %1, %0
  %88 = or i32 %87, %32
  %89 = shl i32 %29, 1
  %90 = and i32 %70, %2
  %91 = and i32 %20, %0
  %92 = xor i32 %22, %0
  %93 = or i32 %91, %92
  %94 = and i32 %60, %0
  %95 = xor i32 %46, %2
  %96 = xor i32 %72, -1
  %97 = or i32 %87, %96
  %98 = or i32 %54, %32
  %99 = and i32 %38, %70
  %100 = xor i32 %26, -1
  %101 = or i32 %100, %0
  %102 = xor i32 %50, %87
  %103 = shl i32 %102, 1
  %104 = and i32 %66, %2
  %105 = or i32 %28, %0
  %106 = xor i32 %105, -1
  %107 = or i32 %91, %106
  %108 = xor i32 %74, -1
  %109 = shl i32 %108, 1
  %110 = and i32 %28, %55
  %111 = or i32 %79, %18
  %112 = xor i32 %69, %87
  %113 = and i32 %60, %18
  %114 = and i32 %69, %0
  %115 = shl i32 %114, 1
  %116 = or i32 %28, %34
  %117 = and i32 %66, %38
  %118 = and i32 %8, %60
  %119 = xor i32 %37, %50
  %120 = and i32 %46, %2
  %121 = xor i32 %87, -1
  %122 = and i32 %31, %121
  %123 = or i32 %87, %58
  %124 = and i32 %50, %0
  %125 = xor i32 %27, -1
  %126 = xor i32 %124, %125
  %127 = add i32 %66, 1
  %128 = or i32 %60, %47
  %129 = or i32 %58, %19
  %130 = or i32 %47, %2
  %131 = or i32 %49, %36
  %132 = xor i32 %108, %1
  %133 = or i32 %66, %58
  %134 = and i32 %32, %1
  %135 = xor i32 %74, %69
  %136 = shl i32 %121, 1
  %137 = and i32 %100, %18
  %138 = xor i32 %50, -1
  %139 = xor i32 %138, %0
  %140 = xor i32 %57, %87
  %141 = and i32 %38, %1
  %142 = and i32 %7, %121
  %143 = or i32 %58, %70
  %144 = and i32 %22, %18
  %145 = xor i32 %144, 2147483647
  %146 = xor i32 %145, %91
  %147 = or i32 %21, %23
  %148 = xor i32 %57, %1
  %149 = or i32 %96, %70
  %150 = shl i32 %149, 1
  %151 = xor i32 %69, %0
  %152 = xor i32 %91, %105
  %153 = shl i32 %152, 1
  %154 = or i32 %138, %18
  %155 = and i32 %32, %121
  %156 = or i32 %60, %18
  %157 = and i32 %28, %8
  %158 = and i32 %108, %1
  %159 = shl i32 %105, 1
  %160 = and i32 %72, %19
  %161 = and i32 %32, %70
  %162 = or i32 %74, %26
  %163 = or i32 %60, %0
  %164 = shl i32 %163, 1
  %165 = and i32 %31, %46
  %166 = or i32 %7, %34
  %167 = shl i32 %166, 1
  %168 = and i32 %31, %8
  %169 = or i32 %96, %1
  %170 = or i32 %32, %70
  %171 = or i32 %31, %34
  %172 = xor i32 %47, %2
  %173 = or i32 %32, %19
  %174 = and i32 %60, %55
  %175 = xor i32 %85, -1
  %176 = xor i32 %91, %175
  %177 = or i32 %79, %0
  %178 = or i32 %28, %54
  %179 = xor i32 %100, %0
  %180 = shl i32 %87, 2
  %181 = and i32 %46, %32
  %182 = or i32 %54, %2
  %183 = or i32 %40, %18
  %184 = shl i32 %138, 1
  %185 = and i32 %72, %1
  %186 = xor i32 %72, %87
  %187 = and i32 %69, %18
  %188 = and i32 %43, %18
  %189 = and i32 %28, %46
  %190 = xor i32 %37, %46
  %191 = shl i32 %57, 1
  %192 = or i32 %31, %66
  %193 = or i32 %26, %0
  %194 = or i32 %34, %2
  %195 = or i32 %37, %66
  %196 = and i32 %55, %2
  %197 = or i32 %87, %138
  %198 = shl i32 %197, 1
  %199 = xor i32 %58, %1
  %200 = and i32 %57, %1
  %201 = or i32 %31, %19
  %202 = or i32 %66, %2
  %203 = or i32 %74, %70
  %204 = or i32 %87, %2
  %205 = xor i32 %43, %0
  %206 = or i32 %66, %96
  %207 = xor i32 %29, %125
  %208 = or i32 %37, %40
  %209 = or i32 %31, %70
  %210 = shl i32 %209, 1
  %211 = or i32 %7, %70
  %212 = and i32 %108, %19
  %213 = or i32 %70, %2
  %214 = and i32 %72, %66
  %215 = shl i32 %214, 1
  %216 = xor i32 %36, %82
  %217 = shl i32 %96, 1
  %218 = or i32 %87, %7
  %219 = or i32 %100, %18
  %220 = and i32 %100, %0
  %221 = xor i32 %8, %2
  %222 = or i32 %91, %85
  %223 = shl i32 %222, 1
  %224 = xor i32 %37, %43
  %225 = xor i32 %74, %100
  %226 = xor i32 %34, %2
  %227 = xor i32 %37, %1
  %228 = xor i32 %51, %82
  %229 = or i32 %49, %175
  %230 = or i32 %31, %1
  %231 = and i32 %60, %121
  %232 = or i32 %69, %18
  %233 = xor i32 %96, %1
  %234 = or i32 %28, %18
  %235 = xor i32 %21, %234
  %236 = xor i32 %87, %2
  %237 = or i32 %54, %7
  %238 = and i32 %121, %2
  %239 = or i32 %32, %47
  %240 = or i32 %27, %124
  %241 = xor i32 %121, %2
  %242 = or i32 %74, %66
  %243 = shl i32 %242, 1
  %244 = or i32 %138, %0
  %245 = and i32 %43, %0
  %246 = or i32 %31, %87
  %247 = or i32 %37, %47
  %248 = or i32 %96, %19
  %249 = or i32 %54, %60
  %250 = or i32 %50, %18
  %251 = shl i32 %79, 1
  %252 = or i32 %60, %34
  %253 = xor i32 %26, %0
  %254 = or i32 %87, %60
  %255 = and i32 %31, %66
  %256 = or i32 %43, %18
  %257 = or i32 %26, %18
  %258 = shl i32 %257, 1
  %259 = and i32 %108, %70
  %260 = or i32 %28, %47
  %261 = xor i32 %79, %0
  %262 = and i32 %66, %7
  %263 = shl i32 %50, 1
  %264 = or i32 %87, %79
  %265 = or i32 %74, %19
  %266 = and i32 %32, %55
  %267 = and i32 %66, %108
  %268 = shl i32 %267, 2
  %269 = or i32 %31, %54
  %270 = or i32 %50, %0
  %271 = or i32 %91, %144
  %272 = xor i32 %55, %2
  %273 = xor i32 %37, %8
  %274 = or i32 %37, %70
  %275 = shl i32 %26, 1
  %276 = and i32 %31, %55
  %277 = or i32 %40, %54
  %278 = or i32 %40, %0
  %279 = xor i32 %72, %1
  %280 = xor i32 %92, -1
  %281 = xor i32 %91, %280
  %282 = xor i32 %74, %1
  %283 = shl i32 %282, 1
  %284 = and i32 %8, %32
  %285 = and i32 %57, %66
  %286 = and i32 %31, %1
  %287 = xor i32 %234, 2147483647
  %288 = or i32 %287, %21
  %289 = shl i32 %288, 1
  %290 = and i32 %7, %70
  %291 = or i32 %37, %34
  %292 = or i32 %31, %47
  %293 = shl i32 %292, 1
  %294 = or i32 %49, %81
  %295 = and i32 %31, %19
  %296 = or i32 %69, %0
  %297 = or i32 %66, %32
  %298 = shl i32 %297, 1
  %299 = or i32 %37, %19
  %300 = or i32 %28, %87
  %301 = xor i32 %54, %100
  %302 = and i32 %28, %121
  %303 = xor i32 %60, %0
  %304 = or i32 %32, %1
  %305 = or i32 %37, %138
  %306 = shl i32 %54, 1
  %307 = and i32 %138, %18
  %308 = shl i32 %307, 4
  %309 = and i32 %40, %18
  %310 = and i32 %138, %0
  %311 = mul i32 %310, 15
  %312 = and i32 %40, %0
  %313 = mul i32 %312, 7
  %314 = and i32 %79, %18
  %315 = shl i32 %314, 5
  %316 = and i32 %79, %0
  %317 = mul i32 %316, -6
  %318 = mul i32 %49, 17
  %319 = xor i32 %5, %4
  %320 = xor i32 %319, -1
  %321 = and i32 %320, %3
  %322 = xor i32 %15, -1
  %323 = add i32 %15, 1
  %324 = and i32 %4, %3
  %325 = xor i32 %5, %3
  %326 = or i32 %325, %324
  %327 = shl i32 %326, 2
  %328 = add i32 %319, 1
  %329 = xor i32 %3, -1
  %330 = and i32 %329, %4
  %331 = xor i32 %330, -1
  %332 = xor i32 %331, %5
  %333 = xor i32 %324, -1
  %334 = and i32 %319, %333
  %335 = xor i32 %4, %3
  %336 = xor i32 %335, -1
  %337 = or i32 %15, %336
  %338 = and i32 %14, %3
  %339 = xor i32 %338, -1
  %340 = or i32 %339, %4
  %341 = or i32 %14, %3
  %342 = or i32 %5, %4
  %343 = xor i32 %342, %324
  %344 = or i32 %14, %4
  %345 = xor i32 %344, %324
  %346 = xor i32 %10, -1
  %347 = add i32 %10, 1
  %348 = xor i32 %344, -1
  %349 = or i32 %348, %336
  %350 = xor i32 %341, %324
  %351 = xor i32 %4, -1
  %352 = and i32 %5, %3
  %353 = xor i32 %352, -1
  %354 = and i32 %353, %351
  %355 = shl i32 %354, 1
  %356 = and i32 %319, %331
  %357 = and i32 %329, %5
  %358 = and i32 %357, %351
  %359 = or i32 %325, %351
  %360 = xor i32 %358, %359
  %361 = xor i32 %342, -1
  %362 = or i32 %335, %361
  %363 = xor i32 %359, 1073741823
  %364 = or i32 %363, %358
  %365 = shl i32 %364, 2
  %366 = xor i32 %325, -1
  %367 = xor i32 %11, %324
  %368 = xor i32 %341, -1
  %369 = shl i32 %368, 1
  %370 = or i32 %353, %351
  %371 = and i32 %322, %336
  %372 = shl i32 %371, 1
  %373 = and i32 %352, %4
  %374 = and i32 %325, %351
  %375 = or i32 %373, %374
  %376 = and i32 %335, %346
  %377 = xor i32 %322, %3
  %378 = shl i32 %377, 1
  %379 = and i32 %366, %4
  %380 = and i32 %320, %333
  %381 = or i32 %324, %14
  %382 = or i32 %10, %329
  %383 = and i32 %14, %331
  %384 = or i32 %4, %3
  %385 = xor i32 %384, -1
  %386 = add i32 %384, 1
  %387 = and i32 %344, %335
  %388 = and i32 %366, %331
  %389 = or i32 %329, %4
  %390 = xor i32 %389, -1
  %391 = add i32 %389, 1
  %392 = add i32 %342, 1
  %393 = and i32 %389, %320
  %394 = and i32 %341, %351
  %395 = or i32 %325, %330
  %396 = and i32 %384, %366
  %397 = xor i32 %333, %5
  %398 = and i32 %325, %333
  %399 = and i32 %357, %4
  %400 = or i32 %325, %4
  %401 = xor i32 %400, -1
  %402 = or i32 %399, %401
  %403 = or i32 %348, %329
  %404 = or i32 %319, %329
  %405 = or i32 %10, %338
  %406 = or i32 %319, %335
  %407 = add i32 %352, 1
  %408 = or i32 %10, %390
  %409 = and i32 %335, %320
  %410 = and i32 %319, %3
  %411 = or i32 %324, %361
  %412 = or i32 %338, %330
  %413 = and i32 %339, %4
  %414 = xor i32 %10, %389
  %415 = and i32 %344, %336
  %416 = or i32 %352, %4
  %417 = or i32 %348, %3
  %418 = shl i32 %417, 1
  %419 = and i32 %319, %384
  %420 = xor i32 %10, %11
  %421 = xor i32 %366, %4
  %422 = or i32 %339, %351
  %423 = or i32 %330, %5
  %424 = shl i32 %423, 1
  %425 = and i32 %325, %331
  %426 = shl i32 %425, 1
  %427 = or i32 %320, %336
  %428 = shl i32 %427, 1
  %429 = and i32 %320, %336
  %430 = or i32 %319, %3
  %431 = and i32 %389, %5
  %432 = xor i32 %330, %339
  %433 = or i32 %325, %385
  %434 = xor i32 %10, %339
  %435 = and i32 %319, %329
  %436 = and i32 %322, %329
  %437 = xor i32 %15, %353
  %438 = and i32 %335, %5
  %439 = and i32 %335, %14
  %440 = xor i32 %339, %4
  %441 = and i32 %389, %14
  %442 = xor i32 %389, %5
  %443 = or i32 %319, %336
  %444 = shl i32 %443, 1
  %445 = xor i32 %325, %4
  %446 = xor i32 %445, -1
  %447 = or i32 %373, %446
  %448 = xor i32 %12, %4
  %449 = or i32 %366, %351
  %450 = or i32 %10, %336
  %451 = or i32 %324, %368
  %452 = or i32 %385, %5
  %453 = or i32 %11, %4
  %454 = and i32 %11, %351
  %455 = or i32 %368, %351
  %456 = xor i32 %348, %3
  %457 = xor i32 %361, %3
  %458 = shl i32 %457, 1
  %459 = or i32 %320, %385
  %460 = or i32 %335, %348
  %461 = xor i32 %390, %5
  %462 = or i32 %15, %3
  %463 = and i32 %331, %5
  %464 = or i32 %368, %4
  %465 = and i32 %319, %335
  %466 = or i32 %329, %5
  %467 = and i32 %466, %351
  %468 = or i32 %399, %467
  %469 = shl i32 %4, 1
  %470 = and i32 %341, %4
  %471 = xor i32 %11, %4
  %472 = xor i32 %471, -1
  %473 = xor i32 %373, %472
  %474 = or i32 %335, %320
  %475 = and i32 %320, %329
  %476 = and i32 %352, %351
  %477 = and i32 %325, %4
  %478 = or i32 %476, %477
  %479 = and i32 %389, %366
  %480 = or i32 %399, %445
  %481 = xor i32 %399, %446
  %482 = xor i32 %466, %4
  %483 = xor i32 %399, -1
  %484 = xor i32 %482, %483
  %485 = and i32 %322, %3
  %486 = xor i32 %353, %4
  %487 = shl i32 %339, 1
  %488 = or i32 %14, %385
  %489 = or i32 %373, %454
  %490 = and i32 %11, %4
  %491 = or i32 %15, %335
  %492 = xor i32 %15, %341
  %493 = or i32 %390, %5
  %494 = or i32 %325, %390
  %495 = and i32 %466, %4
  %496 = or i32 %358, %495
  %497 = xor i32 %352, %4
  %498 = shl i32 %497, 1
  %499 = or i32 %12, %351
  %500 = xor i32 %373, %445
  %501 = or i32 %320, %329
  %502 = add i32 %4, 1
  %503 = xor i32 %490, -1
  %504 = xor i32 %476, %503
  %505 = and i32 %344, %3
  %506 = or i32 %319, %385
  %507 = shl i32 %506, 1
  %508 = xor i32 %10, %3
  %509 = shl i32 %508, 1
  %510 = and i32 %342, %329
  %511 = shl i32 %510, 1
  %512 = and i32 %342, %336
  %513 = or i32 %335, %14
  %514 = and i32 %335, %322
  %515 = or i32 %399, %482
  %516 = or i32 %15, %329
  %517 = and i32 %353, %4
  %518 = and i32 %384, %14
  %519 = or i32 %341, %351
  %520 = or i32 %361, %329
  %521 = or i32 %476, %490
  %522 = xor i32 %10, %384
  %523 = or i32 %14, %390
  %524 = or i32 %335, %5
  %525 = xor i32 %15, %3
  %526 = shl i32 %389, 1
  %527 = and i32 %336, %5
  %528 = shl i32 %527, 1
  %529 = or i32 %10, %3
  %530 = or i32 %330, %366
  %531 = and i32 %14, %333
  %532 = and i32 %346, %329
  %533 = or i32 %373, %471
  %534 = shl i32 %12, 1
  %535 = or i32 %10, %335
  %536 = xor i32 %467, %483
  %537 = and i32 %384, %320
  %538 = and i32 %325, %389
  %539 = or i32 %366, %390
  %540 = xor i32 %346, %3
  %541 = or i32 %324, %348
  %542 = or i32 %324, %366
  %543 = xor i32 %341, %4
  %544 = or i32 %12, %4
  %545 = or i32 %361, %336
  %546 = shl i32 %545, 1
  %547 = xor i32 %342, %3
  %548 = shl i32 %547, 1
  %549 = xor i32 %454, 2147483647
  %550 = xor i32 %549, %373
  %551 = shl i32 %550, 1
  %552 = and i32 %366, %333
  %553 = xor i32 %384, %5
  %554 = or i32 %352, %351
  %555 = and i32 %12, %351
  %556 = mul i32 %555, 11
  %557 = and i32 %338, %351
  %558 = and i32 %12, %4
  %559 = shl i32 %558, 1
  %560 = and i32 %338, %4
  %561 = mul i32 %560, 13
  %562 = and i32 %368, %351
  %563 = mul i32 %562, 33
  %564 = and i32 %368, %4
  %565 = mul i32 %564, 20
  %566 = mul i32 %373, 24
  %567 = sub i32 %261, %3
  %568 = add i32 %567, %248
  %569 = add i32 %568, %224
  %570 = sub i32 %569, %162
  %571 = sub i32 %570, %75
  %572 = add i32 %571, %557
  %573 = sub i32 %572, %499
  %574 = add i32 %573, %464
  %575 = add i32 %574, %380
  %576 = sub i32 %575, %504
  %577 = mul i32 %576, 3
  %578 = add i32 %140, %225
  %579 = add i32 %578, %118
  %580 = sub i32 %80, %579
  %581 = add i32 %580, %52
  %582 = add i32 %581, %325
  %583 = add i32 %582, %488
  %584 = mul i32 %583, 5
  %585 = add i32 %130, %37
  %586 = add i32 %585, %300
  %587 = add i32 %586, %291
  %588 = add i32 %587, %552
  %589 = shl i32 %588, 2
  %590 = add i32 %476, %309
  %591 = shl i32 %590, 3
  %592 = sub i32 -2, %1
  %593 = add i32 %592, %34
  %594 = add i32 %593, %202
  %595 = add i32 %594, %100
  %596 = add i32 %595, %104
  %597 = add i32 %596, %28
  %598 = sub i32 %597, %33
  %599 = add i32 %598, %304
  %600 = add i32 %599, %279
  %601 = add i32 %600, %276
  %602 = add i32 %601, %270
  %603 = add i32 %602, %256
  %604 = add i32 %603, %255
  %605 = add i32 %604, %253
  %606 = add i32 %605, %206
  %607 = add i32 %606, %199
  %608 = add i32 %607, %192
  %609 = add i32 %608, %186
  %610 = add i32 %609, %165
  %611 = add i32 %610, %155
  %612 = add i32 %611, %141
  %613 = add i32 %612, %134
  %614 = add i32 %613, %119
  %615 = add i32 %614, %62
  %616 = sub i32 %615, %30
  %617 = add i32 %616, %335
  %618 = add i32 %617, %86
  %619 = add i32 %618, %25
  %620 = add i32 %619, %553
  %621 = add i32 %620, %381
  %622 = add i32 %621, %366
  %623 = add i32 %622, %146
  %624 = add i32 %623, %543
  %625 = add i32 %624, %539
  %626 = add i32 %625, %532
  %627 = add i32 %626, %400
  %628 = add i32 %627, %462
  %629 = add i32 %628, %413
  %630 = add i32 %629, %411
  %631 = add i32 %630, %398
  %632 = add i32 %631, %396
  %633 = add i32 %632, %395
  %634 = add i32 %633, %394
  %635 = add i32 %634, %387
  %636 = add i32 %635, %362
  %637 = add i32 %636, %340
  %638 = add i32 %637, %481
  %639 = add i32 %638, %500
  %640 = shl i32 %639, 1
  %641 = shl i32 %0, 1
  %642 = add i32 %641, 5
  %643 = add i32 %642, %1
  %644 = add i32 %643, %127
  %645 = sub i32 %644, %54
  %646 = add i32 %645, %8
  %647 = sub i32 %646, %66
  %648 = sub i32 %647, %42
  %649 = sub i32 %648, %48
  %650 = add i32 %649, %56
  %651 = sub i32 %650, %63
  %652 = sub i32 %651, %69
  %653 = sub i32 %652, %78
  %654 = add i32 %653, %84
  %655 = sub i32 %654, %90
  %656 = sub i32 %655, %95
  %657 = add i32 %656, %58
  %658 = add i32 %657, %120
  %659 = sub i32 %658, %136
  %660 = sub i32 %659, %142
  %661 = add i32 %660, %38
  %662 = add i32 %661, %172
  %663 = sub i32 %662, %180
  %664 = add i32 %663, %182
  %665 = add i32 %664, %194
  %666 = sub i32 %665, %196
  %667 = add i32 %666, %74
  %668 = add i32 %667, %204
  %669 = add i32 %668, %211
  %670 = sub i32 %669, %213
  %671 = sub i32 %670, %218
  %672 = add i32 %671, %221
  %673 = add i32 %672, %226
  %674 = add i32 %673, %236
  %675 = sub i32 %674, %237
  %676 = add i32 %675, %238
  %677 = add i32 %676, %241
  %678 = add i32 %677, %72
  %679 = sub i32 %678, %262
  %680 = add i32 %679, %60
  %681 = sub i32 %680, %272
  %682 = sub i32 %681, %290
  %683 = add i32 %682, 1
  %684 = sub i32 %683, %306
  %685 = add i32 %684, %35
  %686 = add i32 %685, %36
  %687 = sub i32 %686, %39
  %688 = sub i32 %687, %41
  %689 = sub i32 %688, %53
  %690 = add i32 %689, %59
  %691 = sub i32 %690, %61
  %692 = sub i32 %691, %67
  %693 = add i32 %692, %68
  %694 = sub i32 %693, %71
  %695 = sub i32 %694, %73
  %696 = add i32 %695, %76
  %697 = add i32 %696, %77
  %698 = sub i32 %697, %88
  %699 = sub i32 %698, %94
  %700 = sub i32 %699, %97
  %701 = add i32 %700, %98
  %702 = sub i32 %701, %99
  %703 = sub i32 %702, %101
  %704 = sub i32 %703, %109
  %705 = add i32 %704, %110
  %706 = sub i32 %705, %111
  %707 = add i32 %706, %112
  %708 = sub i32 %707, %113
  %709 = add i32 %708, %116
  %710 = add i32 %709, %117
  %711 = add i32 %710, %122
  %712 = sub i32 %711, %123
  %713 = add i32 %712, %128
  %714 = add i32 %713, %129
  %715 = add i32 %714, %132
  %716 = sub i32 %715, %133
  %717 = sub i32 %716, %135
  %718 = add i32 %717, %137
  %719 = add i32 %718, %139
  %720 = add i32 %719, %143
  %721 = sub i32 %720, %148
  %722 = sub i32 %721, %151
  %723 = sub i32 %722, %154
  %724 = sub i32 %723, %156
  %725 = add i32 %724, %124
  %726 = add i32 %725, %157
  %727 = sub i32 %726, %158
  %728 = sub i32 %727, %160
  %729 = sub i32 %728, %161
  %730 = sub i32 %729, %167
  %731 = sub i32 %730, %168
  %732 = add i32 %731, %169
  %733 = sub i32 %732, %170
  %734 = sub i32 %733, %171
  %735 = sub i32 %734, %173
  %736 = add i32 %735, %174
  %737 = sub i32 %736, %177
  %738 = add i32 %737, %178
  %739 = add i32 %738, %179
  %740 = add i32 %739, %181
  %741 = add i32 %740, %183
  %742 = sub i32 %741, %184
  %743 = sub i32 %742, %185
  %744 = sub i32 %743, %187
  %745 = add i32 %744, %188
  %746 = sub i32 %745, %189
  %747 = sub i32 %746, %190
  %748 = sub i32 %747, %191
  %749 = add i32 %748, %193
  %750 = sub i32 %749, %195
  %751 = add i32 %750, %200
  %752 = add i32 %751, %201
  %753 = sub i32 %752, %203
  %754 = add i32 %753, %205
  %755 = sub i32 %754, %208
  %756 = add i32 %755, %212
  %757 = sub i32 %756, %217
  %758 = add i32 %757, %85
  %759 = add i32 %758, %219
  %760 = sub i32 %759, %220
  %761 = sub i32 %760, %227
  %762 = sub i32 %761, %230
  %763 = sub i32 %762, %231
  %764 = add i32 %763, %232
  %765 = add i32 %764, %233
  %766 = add i32 %765, %239
  %767 = sub i32 %766, %244
  %768 = sub i32 %767, %245
  %769 = sub i32 %768, %246
  %770 = sub i32 %769, %247
  %771 = sub i32 %770, %249
  %772 = sub i32 %771, %250
  %773 = sub i32 %772, %251
  %774 = add i32 %773, %252
  %775 = add i32 %774, %254
  %776 = sub i32 %775, %259
  %777 = add i32 %776, %260
  %778 = sub i32 %777, %263
  %779 = sub i32 %778, %264
  %780 = sub i32 %779, %265
  %781 = sub i32 %780, %266
  %782 = add i32 %781, %269
  %783 = sub i32 %782, %273
  %784 = add i32 %783, %274
  %785 = sub i32 %784, %275
  %786 = sub i32 %785, %277
  %787 = sub i32 %786, %278
  %788 = add i32 %787, %284
  %789 = add i32 %788, %285
  %790 = add i32 %789, %286
  %791 = sub i32 %790, %234
  %792 = add i32 %791, %295
  %793 = sub i32 %792, %296
  %794 = add i32 %793, %299
  %795 = sub i32 %794, %301
  %796 = sub i32 %795, %302
  %797 = add i32 %796, %81
  %798 = add i32 %797, %303
  %799 = add i32 %798, %305
  %800 = sub i32 %799, %27
  %801 = add i32 %800, %502
  %802 = sub i32 %801, %45
  %803 = sub i32 %802, %65
  %804 = add i32 %803, %83
  %805 = sub i32 %804, %89
  %806 = add i32 %805, %93
  %807 = sub i32 %806, %103
  %808 = add i32 %807, %107
  %809 = sub i32 %808, %115
  %810 = add i32 %809, %126
  %811 = sub i32 %810, %131
  %812 = sub i32 %811, %147
  %813 = sub i32 %812, %150
  %814 = sub i32 %813, %159
  %815 = sub i32 %814, %164
  %816 = sub i32 %815, %176
  %817 = sub i32 %816, %198
  %818 = sub i32 %817, %207
  %819 = sub i32 %818, %210
  %820 = sub i32 %819, %215
  %821 = add i32 %820, %216
  %822 = sub i32 %821, %228
  %823 = add i32 %822, %229
  %824 = add i32 %823, %235
  %825 = sub i32 %824, %240
  %826 = sub i32 %825, %243
  %827 = sub i32 %826, %258
  %828 = sub i32 %827, %268
  %829 = sub i32 %828, %271
  %830 = add i32 %829, %281
  %831 = sub i32 %830, %283
  %832 = sub i32 %831, %293
  %833 = sub i32 %832, %294
  %834 = sub i32 %833, %298
  %835 = add i32 %834, %308
  %836 = add i32 %835, %311
  %837 = add i32 %836, %313
  %838 = sub i32 %837, %315
  %839 = add i32 %838, %317
  %840 = add i32 %839, %318
  %841 = add i32 %840, %336
  %842 = add i32 %841, %386
  %843 = add i32 %842, %391
  %844 = sub i32 %843, %324
  %845 = sub i32 %844, %469
  %846 = add i32 %845, %5
  %847 = add i32 %846, %384
  %848 = add i32 %847, %331
  %849 = sub i32 %848, %153
  %850 = sub i32 %849, %223
  %851 = add i32 %850, %323
  %852 = add i32 %851, %328
  %853 = add i32 %852, %332
  %854 = add i32 %853, %341
  %855 = add i32 %854, %347
  %856 = sub i32 %855, %383
  %857 = add i32 %856, %392
  %858 = sub i32 %857, %397
  %859 = add i32 %858, %319
  %860 = add i32 %859, %407
  %861 = add i32 %860, %431
  %862 = add i32 %861, %438
  %863 = add i32 %862, %439
  %864 = sub i32 %863, %441
  %865 = add i32 %864, %442
  %866 = add i32 %865, %348
  %867 = sub i32 %866, %452
  %868 = sub i32 %867, %344
  %869 = add i32 %868, %461
  %870 = sub i32 %869, %463
  %871 = sub i32 %870, %493
  %872 = sub i32 %871, %10
  %873 = sub i32 %872, %513
  %874 = sub i32 %873, %352
  %875 = add i32 %874, %518
  %876 = add i32 %875, %11
  %877 = sub i32 %876, %523
  %878 = add i32 %877, %524
  %879 = sub i32 %878, %526
  %880 = add i32 %879, %531
  %881 = sub i32 %880, %342
  %882 = sub i32 %881, %289
  %883 = sub i32 %882, %321
  %884 = sub i32 %883, %334
  %885 = add i32 %884, %337
  %886 = sub i32 %885, %343
  %887 = sub i32 %886, %345
  %888 = add i32 %887, %349
  %889 = add i32 %888, %350
  %890 = add i32 %889, %356
  %891 = sub i32 %890, %367
  %892 = sub i32 %891, %369
  %893 = sub i32 %892, %359
  %894 = sub i32 %893, %370
  %895 = sub i32 %894, %376
  %896 = add i32 %895, %379
  %897 = sub i32 %896, %382
  %898 = add i32 %897, %388
  %899 = sub i32 %898, %393
  %900 = add i32 %899, %403
  %901 = sub i32 %900, %404
  %902 = sub i32 %901, %405
  %903 = sub i32 %902, %406
  %904 = sub i32 %903, %408
  %905 = sub i32 %904, %409
  %906 = add i32 %905, %410
  %907 = add i32 %906, %412
  %908 = add i32 %907, %414
  %909 = add i32 %908, %415
  %910 = sub i32 %909, %416
  %911 = sub i32 %910, %419
  %912 = sub i32 %911, %420
  %913 = add i32 %912, %421
  %914 = add i32 %913, %422
  %915 = sub i32 %914, %424
  %916 = sub i32 %915, %429
  %917 = sub i32 %916, %430
  %918 = add i32 %917, %432
  %919 = sub i32 %918, %433
  %920 = add i32 %919, %434
  %921 = sub i32 %920, %435
  %922 = sub i32 %921, %436
  %923 = add i32 %922, %437
  %924 = sub i32 %923, %440
  %925 = add i32 %924, %448
  %926 = sub i32 %925, %449
  %927 = add i32 %926, %450
  %928 = sub i32 %927, %451
  %929 = sub i32 %928, %453
  %930 = add i32 %929, %454
  %931 = sub i32 %930, %455
  %932 = sub i32 %931, %456
  %933 = add i32 %932, %459
  %934 = sub i32 %933, %460
  %935 = add i32 %934, %465
  %936 = sub i32 %935, %470
  %937 = sub i32 %936, %474
  %938 = sub i32 %937, %475
  %939 = add i32 %938, %479
  %940 = add i32 %939, %485
  %941 = sub i32 %940, %486
  %942 = sub i32 %941, %487
  %943 = sub i32 %942, %490
  %944 = add i32 %943, %491
  %945 = add i32 %944, %492
  %946 = sub i32 %945, %494
  %947 = sub i32 %946, %501
  %948 = sub i32 %947, %505
  %949 = sub i32 %948, %512
  %950 = add i32 %949, %514
  %951 = add i32 %950, %374
  %952 = add i32 %951, %516
  %953 = add i32 %952, %517
  %954 = add i32 %953, %519
  %955 = sub i32 %954, %520
  %956 = add i32 %955, %522
  %957 = sub i32 %956, %477
  %958 = add i32 %957, %525
  %959 = sub i32 %958, %528
  %960 = sub i32 %959, %529
  %961 = sub i32 %960, %530
  %962 = sub i32 %961, %534
  %963 = sub i32 %962, %535
  %964 = add i32 %963, %537
  %965 = add i32 %964, %538
  %966 = sub i32 %965, %540
  %967 = sub i32 %966, %541
  %968 = add i32 %967, %542
  %969 = sub i32 %968, %544
  %970 = add i32 %969, %554
  %971 = sub i32 %970, %327
  %972 = sub i32 %971, %355
  %973 = sub i32 %972, %360
  %974 = sub i32 %973, %372
  %975 = add i32 %974, %375
  %976 = sub i32 %975, %378
  %977 = sub i32 %976, %402
  %978 = sub i32 %977, %418
  %979 = sub i32 %978, %426
  %980 = sub i32 %979, %428
  %981 = sub i32 %980, %444
  %982 = sub i32 %981, %447
  %983 = sub i32 %982, %458
  %984 = add i32 %983, %468
  %985 = sub i32 %984, %473
  %986 = add i32 %985, %478
  %987 = add i32 %986, %480
  %988 = sub i32 %987, %484
  %989 = sub i32 %988, %489
  %990 = sub i32 %989, %496
  %991 = sub i32 %990, %498
  %992 = sub i32 %991, %507
  %993 = sub i32 %992, %509
  %994 = sub i32 %993, %511
  %995 = sub i32 %994, %515
  %996 = add i32 %995, %521
  %997 = sub i32 %996, %533
  %998 = add i32 %997, %536
  %999 = sub i32 %998, %546
  %1000 = sub i32 %999, %548
  %1001 = add i32 %1000, %556
  %1002 = sub i32 %1001, %559
  %1003 = add i32 %1002, %561
  %1004 = add i32 %1003, %563
  %1005 = add i32 %1004, %565
  %1006 = add i32 %1005, %566
  %1007 = add i32 %1006, %591
  %1008 = sub i32 %1007, %365
  %1009 = sub i32 %1008, %551
  %1010 = add i32 %1009, %589
  %1011 = add i32 %1010, %584
  %1012 = add i32 %1011, %577
  %1013 = add i32 %1012, %640
  %1014 = icmp eq i32 %17, %1013
  %1015 = select i1 %1014, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1016 = tail call i32 @puts(i8* nonnull dereferenceable(1) %1015)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
