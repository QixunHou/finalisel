digraph "DFG for'main' function" {
	Node0x19f7d98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x19f7e18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x19f7ea8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x19f7f08[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x19f8388[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19fb7d8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x19fb8b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19fb978[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x19fba28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19fbc88[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x19fbd48[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x19fccb8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x19fd328[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x19fd420[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x19fd628[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19fd788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19fd898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19fd958[shape=record, label="  ret i32 0"];
	Node0x19f7d98 -> Node0x19f7e18;
	Node0x19f7e18 -> Node0x19f7ea8;
	Node0x19f7ea8 -> Node0x19f7f08;
	Node0x19f7f08 -> Node0x19f8388;
	Node0x19f8388 -> Node0x19fb7d8;
	Node0x19fb7d8 -> Node0x19fb8b8;
	Node0x19fb8b8 -> Node0x19fb978;
	Node0x19fb978 -> Node0x19fba28;
	Node0x19fba28 -> Node0x19fbc88;
	Node0x19fbc88 -> Node0x19fbd48;
	Node0x19fbd48 -> Node0x19fccb8;
	Node0x19fccb8 -> Node0x19fd328;
	Node0x19fd328 -> Node0x19fd420;
	Node0x19fd420 -> Node0x19fd628;
	Node0x19fd628 -> Node0x19fd788;
	Node0x19fd788 -> Node0x19fd898;
	Node0x19fd898 -> Node0x19fd958;
edge [color=red]
	Node0x19f7d98 -> Node0x19f7f08;
	Node0x19f7f08 -> Node0x19f8388;
	Node0x19f7e18 -> Node0x19fb7d8;
	Node0x19fb7d8 -> Node0x19fb8b8;
	Node0x19f7ea8 -> Node0x19fb978;
	Node0x19fb978 -> Node0x19fba28;
	Node0x19f7d98 -> Node0x19fbc88;
	Node0x19f7e18 -> Node0x19fbc88;
	Node0x19f7ea8 -> Node0x19fbc88;
	Node0x19f7d98 -> Node0x19fbd48;
	Node0x19f7e18 -> Node0x19fccb8;
	Node0x19f7ea8 -> Node0x19fd328;
	Node0x19fbd48 -> Node0x19fd420;
	Node0x19fccb8 -> Node0x19fd420;
	Node0x19fd328 -> Node0x19fd420;
	Node0x19fb978 -> Node0x19fd628;
	Node0x19fb7d8 -> Node0x19fd788;
	Node0x19f7f08 -> Node0x19fd898;
}
