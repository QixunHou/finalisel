digraph "DFG for'main' function" {
	Node0x1bd3bd8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1bd3c58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1bd3ce8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1bd3d48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1bd3df8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1bd4228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bd4308[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1bd4408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bd44c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1bd4578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1bd4638[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1bd46e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1bce780[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1bd48e8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1bd5858[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1bd5ec8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1bd5f28[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1bd6038[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1bd6298[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1bd63f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1bd6508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bd6618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bd66d8[shape=record, label="  ret i32 0"];
	Node0x1bd3bd8 -> Node0x1bd3c58;
	Node0x1bd3c58 -> Node0x1bd3ce8;
	Node0x1bd3ce8 -> Node0x1bd3d48;
	Node0x1bd3d48 -> Node0x1bd3df8;
	Node0x1bd3df8 -> Node0x1bd4228;
	Node0x1bd4228 -> Node0x1bd4308;
	Node0x1bd4308 -> Node0x1bd4408;
	Node0x1bd4408 -> Node0x1bd44c8;
	Node0x1bd44c8 -> Node0x1bd4578;
	Node0x1bd4578 -> Node0x1bd4638;
	Node0x1bd4638 -> Node0x1bd46e8;
	Node0x1bd46e8 -> Node0x1bce780;
	Node0x1bce780 -> Node0x1bd48e8;
	Node0x1bd48e8 -> Node0x1bd5858;
	Node0x1bd5858 -> Node0x1bd5ec8;
	Node0x1bd5ec8 -> Node0x1bd5f28;
	Node0x1bd5f28 -> Node0x1bd6038;
	Node0x1bd6038 -> Node0x1bd6298;
	Node0x1bd6298 -> Node0x1bd63f8;
	Node0x1bd63f8 -> Node0x1bd6508;
	Node0x1bd6508 -> Node0x1bd6618;
	Node0x1bd6618 -> Node0x1bd66d8;
edge [color=red]
	Node0x1bd3bd8 -> Node0x1bd3df8;
	Node0x1bd3df8 -> Node0x1bd4228;
	Node0x1bd3c58 -> Node0x1bd4308;
	Node0x1bd4308 -> Node0x1bd4408;
	Node0x1bd3ce8 -> Node0x1bd44c8;
	Node0x1bd44c8 -> Node0x1bd4578;
	Node0x1bd3d48 -> Node0x1bd4638;
	Node0x1bd4638 -> Node0x1bd46e8;
	Node0x1bd3bd8 -> Node0x1bce780;
	Node0x1bd3c58 -> Node0x1bce780;
	Node0x1bd3ce8 -> Node0x1bce780;
	Node0x1bd3d48 -> Node0x1bce780;
	Node0x1bd3bd8 -> Node0x1bd48e8;
	Node0x1bd3c58 -> Node0x1bd5858;
	Node0x1bd3ce8 -> Node0x1bd5ec8;
	Node0x1bd3d48 -> Node0x1bd5f28;
	Node0x1bd48e8 -> Node0x1bd6038;
	Node0x1bd5858 -> Node0x1bd6038;
	Node0x1bd5ec8 -> Node0x1bd6038;
	Node0x1bd5f28 -> Node0x1bd6038;
	Node0x1bd4638 -> Node0x1bd6298;
	Node0x1bd44c8 -> Node0x1bd63f8;
	Node0x1bd4308 -> Node0x1bd6508;
	Node0x1bd3df8 -> Node0x1bd6618;
}
