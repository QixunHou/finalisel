digraph "DFG for'main' function" {
	Node0x1a89438[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a894b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a89548[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1a899a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a89a88[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1a89ba8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a89de0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1a89e98[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a8ae08[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a8b490[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1a8b500[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x1a8b570[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x1a8b5e0[shape=record, label="  %11 = shl i32 %6, 1"];
	Node0x1a8b650[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x1a8b6c0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x1a8b730[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1a8b7a0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1a8b810[shape=record, label="  %16 = and i32 %6, %10"];
	Node0x1a8b880[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x1a8b8f0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x1a8b960[shape=record, label="  %19 = or i32 %7, %6"];
	Node0x1a8b9d0[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x1a8ba40[shape=record, label="  %21 = xor i32 %6, 536870911"];
	Node0x1a8bab0[shape=record, label="  %22 = and i32 %21, %7"];
	Node0x1a8bb20[shape=record, label="  %23 = shl i32 %22, 3"];
	Node0x1a8bb90[shape=record, label="  %24 = mul i32 %16, -3"];
	Node0x1a8bc00[shape=record, label="  %25 = shl i32 %7, 1"];
	Node0x1a8bc70[shape=record, label="  %26 = add i32 %13, %20"];
	Node0x1a8bce0[shape=record, label="  %27 = mul i32 %26, -5"];
	Node0x1a8bd50[shape=record, label="  %28 = add i32 %6, 1"];
	Node0x1a8bdc0[shape=record, label="  %29 = sub i32 %28, %8"];
	Node0x1a8be30[shape=record, label="  %30 = add i32 %29, %12"];
	Node0x1a8bea0[shape=record, label="  %31 = add i32 %30, %19"];
	Node0x1a8bf10[shape=record, label="  %32 = add i32 %31, %25"];
	Node0x1a8bf80[shape=record, label="  %33 = sub i32 %32, %23"];
	Node0x1a8bff0[shape=record, label="  %34 = add i32 %33, %24"];
	Node0x1a8c060[shape=record, label="  %35 = add i32 %34, %15"];
	Node0x1a8c0d0[shape=record, label="  %36 = add i32 %35, %18"];
	Node0x1a8c140[shape=record, label="  %37 = add i32 %36, %27"];
	Node0x1a8c1b0[shape=record, label="  %38 = icmp eq i32 %37, %9"];
	Node0x1a299d8[shape=record, label="  %39 = select i1 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a8c240[shape=record, label="  %40 = call i32 @puts(i8* nonnull dereferenceable(1) %39) #5"];
	Node0x1a8c498[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a8c5f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a8c6b8[shape=record, label="  ret i32 0"];
	Node0x1a89438 -> Node0x1a894b8;
	Node0x1a894b8 -> Node0x1a89548;
	Node0x1a89548 -> Node0x1a899a8;
	Node0x1a899a8 -> Node0x1a89a88;
	Node0x1a89a88 -> Node0x1a89ba8;
	Node0x1a89ba8 -> Node0x1a89de0;
	Node0x1a89de0 -> Node0x1a89e98;
	Node0x1a89e98 -> Node0x1a8ae08;
	Node0x1a8ae08 -> Node0x1a8b490;
	Node0x1a8b490 -> Node0x1a8b500;
	Node0x1a8b500 -> Node0x1a8b570;
	Node0x1a8b570 -> Node0x1a8b5e0;
	Node0x1a8b5e0 -> Node0x1a8b650;
	Node0x1a8b650 -> Node0x1a8b6c0;
	Node0x1a8b6c0 -> Node0x1a8b730;
	Node0x1a8b730 -> Node0x1a8b7a0;
	Node0x1a8b7a0 -> Node0x1a8b810;
	Node0x1a8b810 -> Node0x1a8b880;
	Node0x1a8b880 -> Node0x1a8b8f0;
	Node0x1a8b8f0 -> Node0x1a8b960;
	Node0x1a8b960 -> Node0x1a8b9d0;
	Node0x1a8b9d0 -> Node0x1a8ba40;
	Node0x1a8ba40 -> Node0x1a8bab0;
	Node0x1a8bab0 -> Node0x1a8bb20;
	Node0x1a8bb20 -> Node0x1a8bb90;
	Node0x1a8bb90 -> Node0x1a8bc00;
	Node0x1a8bc00 -> Node0x1a8bc70;
	Node0x1a8bc70 -> Node0x1a8bce0;
	Node0x1a8bce0 -> Node0x1a8bd50;
	Node0x1a8bd50 -> Node0x1a8bdc0;
	Node0x1a8bdc0 -> Node0x1a8be30;
	Node0x1a8be30 -> Node0x1a8bea0;
	Node0x1a8bea0 -> Node0x1a8bf10;
	Node0x1a8bf10 -> Node0x1a8bf80;
	Node0x1a8bf80 -> Node0x1a8bff0;
	Node0x1a8bff0 -> Node0x1a8c060;
	Node0x1a8c060 -> Node0x1a8c0d0;
	Node0x1a8c0d0 -> Node0x1a8c140;
	Node0x1a8c140 -> Node0x1a8c1b0;
	Node0x1a8c1b0 -> Node0x1a299d8;
	Node0x1a299d8 -> Node0x1a8c240;
	Node0x1a8c240 -> Node0x1a8c498;
	Node0x1a8c498 -> Node0x1a8c5f8;
	Node0x1a8c5f8 -> Node0x1a8c6b8;
edge [color=red]
	Node0x1a89438 -> Node0x1a89548;
	Node0x1a89548 -> Node0x1a899a8;
	Node0x1a894b8 -> Node0x1a89a88;
	Node0x1a89a88 -> Node0x1a89ba8;
	Node0x1a89438 -> Node0x1a89de0;
	Node0x1a894b8 -> Node0x1a89de0;
	Node0x1a89438 -> Node0x1a89e98;
	Node0x1a894b8 -> Node0x1a8ae08;
	Node0x1a8ae08 -> Node0x1a8b490;
	Node0x1a89e98 -> Node0x1a8b490;
	Node0x1a8b490 -> Node0x1a8b500;
	Node0x1a8ae08 -> Node0x1a8b570;
	Node0x1a89e98 -> Node0x1a8b5e0;
	Node0x1a8b5e0 -> Node0x1a8b650;
	Node0x1a8ae08 -> Node0x1a8b6c0;
	Node0x1a89e98 -> Node0x1a8b6c0;
	Node0x1a8b6c0 -> Node0x1a8b730;
	Node0x1a8b730 -> Node0x1a8b7a0;
	Node0x1a89e98 -> Node0x1a8b810;
	Node0x1a8b570 -> Node0x1a8b810;
	Node0x1a8b810 -> Node0x1a8b880;
	Node0x1a8b880 -> Node0x1a8b8f0;
	Node0x1a8ae08 -> Node0x1a8b960;
	Node0x1a89e98 -> Node0x1a8b960;
	Node0x1a8b960 -> Node0x1a8b9d0;
	Node0x1a89e98 -> Node0x1a8ba40;
	Node0x1a8ba40 -> Node0x1a8bab0;
	Node0x1a8ae08 -> Node0x1a8bab0;
	Node0x1a8bab0 -> Node0x1a8bb20;
	Node0x1a8b810 -> Node0x1a8bb90;
	Node0x1a8ae08 -> Node0x1a8bc00;
	Node0x1a8b6c0 -> Node0x1a8bc70;
	Node0x1a8b9d0 -> Node0x1a8bc70;
	Node0x1a8bc70 -> Node0x1a8bce0;
	Node0x1a89e98 -> Node0x1a8bd50;
	Node0x1a8bd50 -> Node0x1a8bdc0;
	Node0x1a8b490 -> Node0x1a8bdc0;
	Node0x1a8bdc0 -> Node0x1a8be30;
	Node0x1a8b650 -> Node0x1a8be30;
	Node0x1a8be30 -> Node0x1a8bea0;
	Node0x1a8b960 -> Node0x1a8bea0;
	Node0x1a8bea0 -> Node0x1a8bf10;
	Node0x1a8bc00 -> Node0x1a8bf10;
	Node0x1a8bf10 -> Node0x1a8bf80;
	Node0x1a8bb20 -> Node0x1a8bf80;
	Node0x1a8bf80 -> Node0x1a8bff0;
	Node0x1a8bb90 -> Node0x1a8bff0;
	Node0x1a8bff0 -> Node0x1a8c060;
	Node0x1a8b7a0 -> Node0x1a8c060;
	Node0x1a8c060 -> Node0x1a8c0d0;
	Node0x1a8b8f0 -> Node0x1a8c0d0;
	Node0x1a8c0d0 -> Node0x1a8c140;
	Node0x1a8bce0 -> Node0x1a8c140;
	Node0x1a8c140 -> Node0x1a8c1b0;
	Node0x1a8b500 -> Node0x1a8c1b0;
	Node0x1a8c1b0 -> Node0x1a299d8;
	Node0x1a299d8 -> Node0x1a8c240;
	Node0x1a89a88 -> Node0x1a8c498;
	Node0x1a89548 -> Node0x1a8c5f8;
}
