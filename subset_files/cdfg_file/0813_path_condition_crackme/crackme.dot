digraph "DFG for'crackme' function" {
	Node0x1e0e9d0[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x1e0ea70[shape=record, label="  %4 = mul i32 %3, 3"];
	Node0x1e0eb30[shape=record, label="  %5 = add i32 %4, %1"];
	Node0x1e0eba0[shape=record, label="  %6 = or i32 %3, %0"];
	Node0x1e0ec10[shape=record, label="  %7 = and i32 %1, %0"];
	Node0x1e0ec80[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1e0ecf0[shape=record, label="  %9 = xor i32 %6, -1"];
	Node0x1e0ed60[shape=record, label="  %10 = mul i32 %9, -3"];
	Node0x1e0edd0[shape=record, label="  %11 = and i32 %3, %0"];
	Node0x1e0ee40[shape=record, label="  %12 = sub i32 -3, %0"];
	Node0x1e0eeb0[shape=record, label="  %13 = sub i32 %12, %6"];
	Node0x1e0ef20[shape=record, label="  %14 = add i32 %13, %8"];
	Node0x1e0ef90[shape=record, label="  %15 = add i32 %14, %11"];
	Node0x1e0f000[shape=record, label="  %16 = add i32 %15, %10"];
	Node0x1e0f070[shape=record, label="  %17 = icmp eq i32 %5, %16"];
	Node0x1daf268[shape=record, label="  %18 = select i1 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e0f510[shape=record, label="  %19 = tail call i32 @puts(i8* nonnull dereferenceable(1) %18)"];
	Node0x1e0f560[shape=record, label="  ret void"];
	Node0x1e0e9d0 -> Node0x1e0ea70;
	Node0x1e0ea70 -> Node0x1e0eb30;
	Node0x1e0eb30 -> Node0x1e0eba0;
	Node0x1e0eba0 -> Node0x1e0ec10;
	Node0x1e0ec10 -> Node0x1e0ec80;
	Node0x1e0ec80 -> Node0x1e0ecf0;
	Node0x1e0ecf0 -> Node0x1e0ed60;
	Node0x1e0ed60 -> Node0x1e0edd0;
	Node0x1e0edd0 -> Node0x1e0ee40;
	Node0x1e0ee40 -> Node0x1e0eeb0;
	Node0x1e0eeb0 -> Node0x1e0ef20;
	Node0x1e0ef20 -> Node0x1e0ef90;
	Node0x1e0ef90 -> Node0x1e0f000;
	Node0x1e0f000 -> Node0x1e0f070;
	Node0x1e0f070 -> Node0x1daf268;
	Node0x1daf268 -> Node0x1e0f510;
	Node0x1e0f510 -> Node0x1e0f560;
edge [color=red]
	Node0x1e0e9d0 -> Node0x1e0ea70;
	Node0x1e0ea70 -> Node0x1e0eb30;
	Node0x1e0e9d0 -> Node0x1e0eba0;
	Node0x1e0ec10 -> Node0x1e0ec80;
	Node0x1e0eba0 -> Node0x1e0ecf0;
	Node0x1e0ecf0 -> Node0x1e0ed60;
	Node0x1e0e9d0 -> Node0x1e0edd0;
	Node0x1e0ee40 -> Node0x1e0eeb0;
	Node0x1e0eba0 -> Node0x1e0eeb0;
	Node0x1e0eeb0 -> Node0x1e0ef20;
	Node0x1e0ec80 -> Node0x1e0ef20;
	Node0x1e0ef20 -> Node0x1e0ef90;
	Node0x1e0edd0 -> Node0x1e0ef90;
	Node0x1e0ef90 -> Node0x1e0f000;
	Node0x1e0ed60 -> Node0x1e0f000;
	Node0x1e0eb30 -> Node0x1e0f070;
	Node0x1e0f000 -> Node0x1e0f070;
	Node0x1e0f070 -> Node0x1daf268;
	Node0x1daf268 -> Node0x1e0f510;
}
