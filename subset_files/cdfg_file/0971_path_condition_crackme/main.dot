digraph "DFG for'main' function" {
	Node0x21b9c98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21b9d18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21b9da8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x21b9e08[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x21b9eb8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x21ba2e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21ba3c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x21ba4c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21ba588[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x21ba638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21ba6f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x21ba7a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x21b4b30[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x21ba9a8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21bb918[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21bbf88[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x21bbfe8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x21bc060[shape=record, label="  %14 = and i32 %12, %11"];
	Node0x21bc0d0[shape=record, label="  %15 = sub i32 -2, %14"];
	Node0x21bc140[shape=record, label="  %16 = or i32 %12, %11"];
	Node0x21bc1b0[shape=record, label="  %17 = xor i32 %12, 2147483647"];
	Node0x21bc220[shape=record, label="  %18 = xor i32 %12, %11"];
	Node0x21bc290[shape=record, label="  %19 = and i32 %17, %11"];
	Node0x21bc300[shape=record, label="  %20 = shl i32 %16, 2"];
	Node0x21bc370[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0x21bc3e0[shape=record, label="  %22 = mul i32 %14, 3"];
	Node0x21bc450[shape=record, label="  %23 = or i32 %13, %10"];
	Node0x21bc4c0[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0x21bc530[shape=record, label="  %25 = and i32 %13, %24"];
	Node0x21bc5a0[shape=record, label="  %26 = or i32 %13, %24"];
	Node0x21bc610[shape=record, label="  %27 = and i32 %13, %10"];
	Node0x21bc680[shape=record, label="  %28 = shl i32 %23, 1"];
	Node0x21bc6f0[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x21bc760[shape=record, label="  %30 = xor i32 %26, -1"];
	Node0x21bc7d0[shape=record, label="  %31 = mul i32 %25, 6"];
	Node0x21bc840[shape=record, label="  %32 = mul i32 %27, 7"];
	Node0x21bc8b0[shape=record, label="  %33 = sub i32 %30, %13"];
	Node0x21bc920[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0x21bc990[shape=record, label="  %35 = sub i32 %18, %11"];
	Node0x21bca00[shape=record, label="  %36 = add i32 %35, %16"];
	Node0x21bca70[shape=record, label="  %37 = add i32 %36, %19"];
	Node0x21bcae0[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x21bcb50[shape=record, label="  %39 = sub i32 5, %10"];
	Node0x21bcbc0[shape=record, label="  %40 = add i32 %39, %13"];
	Node0x21bcc30[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x21bcca0[shape=record, label="  %42 = sub i32 %41, %23"];
	Node0x21bcd10[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x21bcd80[shape=record, label="  %44 = add i32 %43, %26"];
	Node0x21bcdf0[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x21bce60[shape=record, label="  %46 = add i32 %45, %21"];
	Node0x21bced0[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x21bcf40[shape=record, label="  %48 = add i32 %47, %32"];
	Node0x21bcfb0[shape=record, label="  %49 = add i32 %48, %29"];
	Node0x21bd020[shape=record, label="  %50 = add i32 %49, %34"];
	Node0x21bd090[shape=record, label="  %51 = add i32 %50, %38"];
	Node0x21bd100[shape=record, label="  %52 = icmp eq i32 %15, %51"];
	Node0x21598b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x21bd190[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x21bd438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x21bd598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21bd6a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21bd7b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21bd878[shape=record, label="  ret i32 0"];
	Node0x21b9c98 -> Node0x21b9d18;
	Node0x21b9d18 -> Node0x21b9da8;
	Node0x21b9da8 -> Node0x21b9e08;
	Node0x21b9e08 -> Node0x21b9eb8;
	Node0x21b9eb8 -> Node0x21ba2e8;
	Node0x21ba2e8 -> Node0x21ba3c8;
	Node0x21ba3c8 -> Node0x21ba4c8;
	Node0x21ba4c8 -> Node0x21ba588;
	Node0x21ba588 -> Node0x21ba638;
	Node0x21ba638 -> Node0x21ba6f8;
	Node0x21ba6f8 -> Node0x21ba7a8;
	Node0x21ba7a8 -> Node0x21b4b30;
	Node0x21b4b30 -> Node0x21ba9a8;
	Node0x21ba9a8 -> Node0x21bb918;
	Node0x21bb918 -> Node0x21bbf88;
	Node0x21bbf88 -> Node0x21bbfe8;
	Node0x21bbfe8 -> Node0x21bc060;
	Node0x21bc060 -> Node0x21bc0d0;
	Node0x21bc0d0 -> Node0x21bc140;
	Node0x21bc140 -> Node0x21bc1b0;
	Node0x21bc1b0 -> Node0x21bc220;
	Node0x21bc220 -> Node0x21bc290;
	Node0x21bc290 -> Node0x21bc300;
	Node0x21bc300 -> Node0x21bc370;
	Node0x21bc370 -> Node0x21bc3e0;
	Node0x21bc3e0 -> Node0x21bc450;
	Node0x21bc450 -> Node0x21bc4c0;
	Node0x21bc4c0 -> Node0x21bc530;
	Node0x21bc530 -> Node0x21bc5a0;
	Node0x21bc5a0 -> Node0x21bc610;
	Node0x21bc610 -> Node0x21bc680;
	Node0x21bc680 -> Node0x21bc6f0;
	Node0x21bc6f0 -> Node0x21bc760;
	Node0x21bc760 -> Node0x21bc7d0;
	Node0x21bc7d0 -> Node0x21bc840;
	Node0x21bc840 -> Node0x21bc8b0;
	Node0x21bc8b0 -> Node0x21bc920;
	Node0x21bc920 -> Node0x21bc990;
	Node0x21bc990 -> Node0x21bca00;
	Node0x21bca00 -> Node0x21bca70;
	Node0x21bca70 -> Node0x21bcae0;
	Node0x21bcae0 -> Node0x21bcb50;
	Node0x21bcb50 -> Node0x21bcbc0;
	Node0x21bcbc0 -> Node0x21bcc30;
	Node0x21bcc30 -> Node0x21bcca0;
	Node0x21bcca0 -> Node0x21bcd10;
	Node0x21bcd10 -> Node0x21bcd80;
	Node0x21bcd80 -> Node0x21bcdf0;
	Node0x21bcdf0 -> Node0x21bce60;
	Node0x21bce60 -> Node0x21bced0;
	Node0x21bced0 -> Node0x21bcf40;
	Node0x21bcf40 -> Node0x21bcfb0;
	Node0x21bcfb0 -> Node0x21bd020;
	Node0x21bd020 -> Node0x21bd090;
	Node0x21bd090 -> Node0x21bd100;
	Node0x21bd100 -> Node0x21598b8;
	Node0x21598b8 -> Node0x21bd190;
	Node0x21bd190 -> Node0x21bd438;
	Node0x21bd438 -> Node0x21bd598;
	Node0x21bd598 -> Node0x21bd6a8;
	Node0x21bd6a8 -> Node0x21bd7b8;
	Node0x21bd7b8 -> Node0x21bd878;
edge [color=red]
	Node0x21b9c98 -> Node0x21b9eb8;
	Node0x21b9eb8 -> Node0x21ba2e8;
	Node0x21b9d18 -> Node0x21ba3c8;
	Node0x21ba3c8 -> Node0x21ba4c8;
	Node0x21b9da8 -> Node0x21ba588;
	Node0x21ba588 -> Node0x21ba638;
	Node0x21b9e08 -> Node0x21ba6f8;
	Node0x21ba6f8 -> Node0x21ba7a8;
	Node0x21b9c98 -> Node0x21b4b30;
	Node0x21b9d18 -> Node0x21b4b30;
	Node0x21b9da8 -> Node0x21b4b30;
	Node0x21b9e08 -> Node0x21b4b30;
	Node0x21b9c98 -> Node0x21ba9a8;
	Node0x21b9d18 -> Node0x21bb918;
	Node0x21b9da8 -> Node0x21bbf88;
	Node0x21b9e08 -> Node0x21bbfe8;
	Node0x21bbf88 -> Node0x21bc060;
	Node0x21bb918 -> Node0x21bc060;
	Node0x21bc060 -> Node0x21bc0d0;
	Node0x21bbf88 -> Node0x21bc140;
	Node0x21bb918 -> Node0x21bc140;
	Node0x21bbf88 -> Node0x21bc1b0;
	Node0x21bbf88 -> Node0x21bc220;
	Node0x21bb918 -> Node0x21bc220;
	Node0x21bc1b0 -> Node0x21bc290;
	Node0x21bb918 -> Node0x21bc290;
	Node0x21bc140 -> Node0x21bc300;
	Node0x21bc300 -> Node0x21bc370;
	Node0x21bc060 -> Node0x21bc3e0;
	Node0x21bbfe8 -> Node0x21bc450;
	Node0x21ba9a8 -> Node0x21bc450;
	Node0x21ba9a8 -> Node0x21bc4c0;
	Node0x21bbfe8 -> Node0x21bc530;
	Node0x21bc4c0 -> Node0x21bc530;
	Node0x21bbfe8 -> Node0x21bc5a0;
	Node0x21bc4c0 -> Node0x21bc5a0;
	Node0x21bbfe8 -> Node0x21bc610;
	Node0x21ba9a8 -> Node0x21bc610;
	Node0x21bc450 -> Node0x21bc680;
	Node0x21bc680 -> Node0x21bc6f0;
	Node0x21bc5a0 -> Node0x21bc760;
	Node0x21bc530 -> Node0x21bc7d0;
	Node0x21bc610 -> Node0x21bc840;
	Node0x21bc760 -> Node0x21bc8b0;
	Node0x21bbfe8 -> Node0x21bc8b0;
	Node0x21bc8b0 -> Node0x21bc920;
	Node0x21bc220 -> Node0x21bc990;
	Node0x21bb918 -> Node0x21bc990;
	Node0x21bc990 -> Node0x21bca00;
	Node0x21bc140 -> Node0x21bca00;
	Node0x21bca00 -> Node0x21bca70;
	Node0x21bc290 -> Node0x21bca70;
	Node0x21bca70 -> Node0x21bcae0;
	Node0x21ba9a8 -> Node0x21bcb50;
	Node0x21bcb50 -> Node0x21bcbc0;
	Node0x21bbfe8 -> Node0x21bcbc0;
	Node0x21bcbc0 -> Node0x21bcc30;
	Node0x21bc3e0 -> Node0x21bcc30;
	Node0x21bcc30 -> Node0x21bcca0;
	Node0x21bc450 -> Node0x21bcca0;
	Node0x21bcca0 -> Node0x21bcd10;
	Node0x21bc530 -> Node0x21bcd10;
	Node0x21bcd10 -> Node0x21bcd80;
	Node0x21bc5a0 -> Node0x21bcd80;
	Node0x21bcd80 -> Node0x21bcdf0;
	Node0x21bc610 -> Node0x21bcdf0;
	Node0x21bcdf0 -> Node0x21bce60;
	Node0x21bc370 -> Node0x21bce60;
	Node0x21bce60 -> Node0x21bced0;
	Node0x21bc7d0 -> Node0x21bced0;
	Node0x21bced0 -> Node0x21bcf40;
	Node0x21bc840 -> Node0x21bcf40;
	Node0x21bcf40 -> Node0x21bcfb0;
	Node0x21bc6f0 -> Node0x21bcfb0;
	Node0x21bcfb0 -> Node0x21bd020;
	Node0x21bc920 -> Node0x21bd020;
	Node0x21bd020 -> Node0x21bd090;
	Node0x21bcae0 -> Node0x21bd090;
	Node0x21bc0d0 -> Node0x21bd100;
	Node0x21bd090 -> Node0x21bd100;
	Node0x21bd100 -> Node0x21598b8;
	Node0x21598b8 -> Node0x21bd190;
	Node0x21ba6f8 -> Node0x21bd438;
	Node0x21ba588 -> Node0x21bd598;
	Node0x21ba3c8 -> Node0x21bd6a8;
	Node0x21b9eb8 -> Node0x21bd7b8;
}
