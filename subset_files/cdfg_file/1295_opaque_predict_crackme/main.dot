digraph "DFG for'main' function" {
	Node0x12eae68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12eaf18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x12eafa8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x12eb408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x12eb4e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x12eb608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12eb840[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x12eb8f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12ec868[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x12ecef0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x12ecf60[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x12ecfd0[shape=record, label="  %10 = add i32 %6, %9"];
	Node0x12ed040[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x12ed0b0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x12ed120[shape=record, label="  %13 = or i32 %6, %12"];
	Node0x12ed190[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x12ed200[shape=record, label="  %15 = shl i32 %14, 2"];
	Node0x12ed270[shape=record, label="  %16 = and i32 %6, %12"];
	Node0x12ed2e0[shape=record, label="  %17 = xor i32 %14, -1"];
	Node0x12ed350[shape=record, label="  %18 = mul i32 %17, 5"];
	Node0x12ed3c0[shape=record, label="  %19 = xor i32 %13, -1"];
	Node0x12ed430[shape=record, label="  %20 = shl i32 %16, 3"];
	Node0x12ed4a0[shape=record, label="  %21 = add i32 %11, %19"];
	Node0x12ed510[shape=record, label="  %22 = mul i32 %21, 9"];
	Node0x12ed580[shape=record, label="  %23 = add i32 %6, 3"];
	Node0x12ed5f0[shape=record, label="  %24 = sub i32 %23, %7"];
	Node0x12ed660[shape=record, label="  %25 = add i32 %24, %11"];
	Node0x12ed6d0[shape=record, label="  %26 = sub i32 %25, %13"];
	Node0x12ed740[shape=record, label="  %27 = sub i32 %26, %8"];
	Node0x12ed7b0[shape=record, label="  %28 = add i32 %27, %16"];
	Node0x12ed820[shape=record, label="  %29 = sub i32 %28, %15"];
	Node0x12ed890[shape=record, label="  %30 = add i32 %29, %18"];
	Node0x12ed900[shape=record, label="  %31 = add i32 %30, %20"];
	Node0x12ed970[shape=record, label="  %32 = add i32 %31, %22"];
	Node0x12edbf0[shape=record, label="  %33 = icmp eq i32 %10, %32"];
	Node0x128b9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x12edc80[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x12eded8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12ee038[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x12ee0f8[shape=record, label="  ret i32 0"];
	Node0x12eae68 -> Node0x12eaf18;
	Node0x12eaf18 -> Node0x12eafa8;
	Node0x12eafa8 -> Node0x12eb408;
	Node0x12eb408 -> Node0x12eb4e8;
	Node0x12eb4e8 -> Node0x12eb608;
	Node0x12eb608 -> Node0x12eb840;
	Node0x12eb840 -> Node0x12eb8f8;
	Node0x12eb8f8 -> Node0x12ec868;
	Node0x12ec868 -> Node0x12ecef0;
	Node0x12ecef0 -> Node0x12ecf60;
	Node0x12ecf60 -> Node0x12ecfd0;
	Node0x12ecfd0 -> Node0x12ed040;
	Node0x12ed040 -> Node0x12ed0b0;
	Node0x12ed0b0 -> Node0x12ed120;
	Node0x12ed120 -> Node0x12ed190;
	Node0x12ed190 -> Node0x12ed200;
	Node0x12ed200 -> Node0x12ed270;
	Node0x12ed270 -> Node0x12ed2e0;
	Node0x12ed2e0 -> Node0x12ed350;
	Node0x12ed350 -> Node0x12ed3c0;
	Node0x12ed3c0 -> Node0x12ed430;
	Node0x12ed430 -> Node0x12ed4a0;
	Node0x12ed4a0 -> Node0x12ed510;
	Node0x12ed510 -> Node0x12ed580;
	Node0x12ed580 -> Node0x12ed5f0;
	Node0x12ed5f0 -> Node0x12ed660;
	Node0x12ed660 -> Node0x12ed6d0;
	Node0x12ed6d0 -> Node0x12ed740;
	Node0x12ed740 -> Node0x12ed7b0;
	Node0x12ed7b0 -> Node0x12ed820;
	Node0x12ed820 -> Node0x12ed890;
	Node0x12ed890 -> Node0x12ed900;
	Node0x12ed900 -> Node0x12ed970;
	Node0x12ed970 -> Node0x12edbf0;
	Node0x12edbf0 -> Node0x128b9d8;
	Node0x128b9d8 -> Node0x12edc80;
	Node0x12edc80 -> Node0x12eded8;
	Node0x12eded8 -> Node0x12ee038;
	Node0x12ee038 -> Node0x12ee0f8;
edge [color=red]
	Node0x12eae68 -> Node0x12eafa8;
	Node0x12eafa8 -> Node0x12eb408;
	Node0x12eaf18 -> Node0x12eb4e8;
	Node0x12eb4e8 -> Node0x12eb608;
	Node0x12eae68 -> Node0x12eb840;
	Node0x12eaf18 -> Node0x12eb840;
	Node0x12eae68 -> Node0x12eb8f8;
	Node0x12eaf18 -> Node0x12ec868;
	Node0x12ec868 -> Node0x12ecef0;
	Node0x12eb8f8 -> Node0x12ecef0;
	Node0x12ecef0 -> Node0x12ecf60;
	Node0x12eb8f8 -> Node0x12ecfd0;
	Node0x12ecf60 -> Node0x12ecfd0;
	Node0x12ec868 -> Node0x12ed040;
	Node0x12eb8f8 -> Node0x12ed040;
	Node0x12ec868 -> Node0x12ed0b0;
	Node0x12eb8f8 -> Node0x12ed120;
	Node0x12ed0b0 -> Node0x12ed120;
	Node0x12ec868 -> Node0x12ed190;
	Node0x12eb8f8 -> Node0x12ed190;
	Node0x12ed190 -> Node0x12ed200;
	Node0x12eb8f8 -> Node0x12ed270;
	Node0x12ed0b0 -> Node0x12ed270;
	Node0x12ed190 -> Node0x12ed2e0;
	Node0x12ed2e0 -> Node0x12ed350;
	Node0x12ed120 -> Node0x12ed3c0;
	Node0x12ed270 -> Node0x12ed430;
	Node0x12ed040 -> Node0x12ed4a0;
	Node0x12ed3c0 -> Node0x12ed4a0;
	Node0x12ed4a0 -> Node0x12ed510;
	Node0x12eb8f8 -> Node0x12ed580;
	Node0x12ed580 -> Node0x12ed5f0;
	Node0x12ec868 -> Node0x12ed5f0;
	Node0x12ed5f0 -> Node0x12ed660;
	Node0x12ed040 -> Node0x12ed660;
	Node0x12ed660 -> Node0x12ed6d0;
	Node0x12ed120 -> Node0x12ed6d0;
	Node0x12ed6d0 -> Node0x12ed740;
	Node0x12ecef0 -> Node0x12ed740;
	Node0x12ed740 -> Node0x12ed7b0;
	Node0x12ed270 -> Node0x12ed7b0;
	Node0x12ed7b0 -> Node0x12ed820;
	Node0x12ed200 -> Node0x12ed820;
	Node0x12ed820 -> Node0x12ed890;
	Node0x12ed350 -> Node0x12ed890;
	Node0x12ed890 -> Node0x12ed900;
	Node0x12ed430 -> Node0x12ed900;
	Node0x12ed900 -> Node0x12ed970;
	Node0x12ed510 -> Node0x12ed970;
	Node0x12ecfd0 -> Node0x12edbf0;
	Node0x12ed970 -> Node0x12edbf0;
	Node0x12edbf0 -> Node0x128b9d8;
	Node0x128b9d8 -> Node0x12edc80;
	Node0x12eb4e8 -> Node0x12eded8;
	Node0x12eafa8 -> Node0x12ee038;
}
