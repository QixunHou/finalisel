; ModuleID = '../.././c_source_file/0751_path_condition_crackme.c'
source_filename = "../.././c_source_file/0751_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = mul i32 %1, -2
  %8 = xor i32 %3, -1
  %9 = and i32 %8, %5
  %10 = and i32 %9, %4
  %11 = xor i32 %5, %3
  %12 = xor i32 %11, %4
  %13 = or i32 %10, %12
  %14 = xor i32 %11, -1
  %15 = add i32 %7, %14
  %16 = sub i32 %15, %13
  %17 = xor i32 %0, -1
  %18 = and i32 %2, %1
  %19 = and i32 %18, %17
  %20 = or i32 %2, %1
  %21 = and i32 %20, %0
  %22 = or i32 %19, %21
  %23 = xor i32 %1, %0
  %24 = xor i32 %23, -1
  %25 = xor i32 %2, -1
  %26 = and i32 %25, %1
  %27 = xor i32 %26, -1
  %28 = or i32 %27, %17
  %29 = or i32 %25, %24
  %30 = xor i32 %1, -1
  %31 = xor i32 %2, %0
  %32 = xor i32 %31, -1
  %33 = or i32 %32, %30
  %34 = xor i32 %18, -1
  %35 = and i32 %34, %0
  %36 = xor i32 %2, %1
  %37 = xor i32 %36, -1
  %38 = or i32 %37, %17
  %39 = or i32 %30, %0
  %40 = xor i32 %39, -1
  %41 = or i32 %31, %40
  %42 = or i32 %25, %0
  %43 = xor i32 %42, -1
  %44 = or i32 %43, %1
  %45 = and i32 %36, %0
  %46 = xor i32 %19, -1
  %47 = xor i32 %45, %46
  %48 = or i32 %37, %40
  %49 = and i32 %30, %0
  %50 = or i32 %49, %25
  %51 = xor i32 %36, %0
  %52 = or i32 %1, %0
  %53 = and i32 %52, %37
  %54 = or i32 %49, %2
  %55 = shl i32 %54, 1
  %56 = or i32 %25, %1
  %57 = and i32 %56, %17
  %58 = or i32 %34, %17
  %59 = and i32 %1, %0
  %60 = xor i32 %59, -1
  %61 = xor i32 %60, %2
  %62 = or i32 %27, %0
  %63 = and i32 %25, %0
  %64 = or i32 %63, %23
  %65 = xor i32 %52, -1
  %66 = or i32 %32, %65
  %67 = or i32 %34, %0
  %68 = or i32 %18, %49
  %69 = and i32 %37, %0
  %70 = xor i32 %63, -1
  %71 = xor i32 %70, %1
  %72 = and i32 %18, %0
  %73 = and i32 %20, %17
  %74 = xor i32 %72, 2147483647
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 1
  %77 = and i32 %31, %24
  %78 = or i32 %23, %32
  %79 = xor i32 %43, %1
  %80 = or i32 %36, %40
  %81 = and i32 %2, %0
  %82 = or i32 %81, %24
  %83 = add i32 %39, 1
  %84 = xor i32 %20, -1
  %85 = or i32 %81, %84
  %86 = or i32 %36, %17
  %87 = xor i32 %34, %0
  %88 = or i32 %2, %0
  %89 = xor i32 %88, -1
  %90 = xor i32 %49, -1
  %91 = and i32 %36, %90
  %92 = and i32 %42, %1
  %93 = and i32 %30, %2
  %94 = and i32 %93, %0
  %95 = or i32 %30, %2
  %96 = and i32 %95, %17
  %97 = or i32 %94, %96
  %98 = or i32 %31, %24
  %99 = xor i32 %88, %1
  %100 = or i32 %63, %30
  %101 = and i32 %25, %24
  %102 = shl i32 %101, 1
  %103 = or i32 %59, %84
  %104 = xor i32 %37, %0
  %105 = or i32 %32, %40
  %106 = or i32 %56, %0
  %107 = or i32 %31, %49
  %108 = or i32 %89, %24
  %109 = shl i32 %108, 1
  %110 = or i32 %36, %0
  %111 = xor i32 %94, %110
  %112 = or i32 %25, %40
  %113 = xor i32 %56, %0
  %114 = xor i32 %81, -1
  %115 = and i32 %23, %114
  %116 = shl i32 %115, 1
  %117 = xor i32 %56, -1
  %118 = xor i32 %117, %0
  %119 = xor i32 %20, %0
  %120 = or i32 %89, %30
  %121 = and i32 %23, %2
  %122 = and i32 %37, %60
  %123 = xor i32 %52, %2
  %124 = shl i32 %123, 1
  %125 = xor i32 %56, %59
  %126 = shl i32 %20, 1
  %127 = shl i32 %81, 1
  %128 = or i32 %117, %17
  %129 = or i32 %25, %65
  %130 = and i32 %70, %24
  %131 = xor i32 %49, %27
  %132 = or i32 %43, %24
  %133 = or i32 %63, %1
  %134 = xor i32 %20, %59
  %135 = or i32 %94, %51
  %136 = or i32 %81, %30
  %137 = and i32 %88, %24
  %138 = and i32 %32, %30
  %139 = xor i32 %42, %1
  %140 = shl i32 %139, 2
  %141 = and i32 %36, %17
  %142 = or i32 %72, %141
  %143 = and i32 %39, %37
  %144 = and i32 %88, %1
  %145 = xor i32 %110, 2147483647
  %146 = or i32 %145, %94
  %147 = shl i32 %146, 1
  %148 = xor i32 %63, %1
  %149 = shl i32 %148, 2
  %150 = or i32 %59, %37
  %151 = xor i32 %88, %59
  %152 = or i32 %65, %2
  %153 = and i32 %60, %2
  %154 = or i32 %37, %0
  %155 = and i32 %114, %1
  %156 = or i32 %19, %45
  %157 = xor i32 %94, -1
  %158 = xor i32 %51, %157
  %159 = xor i32 %65, %2
  %160 = or i32 %81, %23
  %161 = xor i32 %63, %34
  %162 = or i32 %81, %40
  %163 = xor i32 %39, %2
  %164 = and i32 %88, %30
  %165 = xor i32 %40, %2
  %166 = or i32 %84, %0
  %167 = xor i32 %63, %56
  %168 = shl i32 %167, 1
  %169 = or i32 %81, %26
  %170 = xor i32 %74, %119
  %171 = shl i32 %170, 1
  %172 = and i32 %114, %30
  %173 = or i32 %117, %0
  %174 = or i32 %36, %59
  %175 = or i32 %31, %30
  %176 = and i32 %25, %60
  %177 = or i32 %49, %32
  %178 = xor i32 %96, %157
  %179 = or i32 %20, %0
  %180 = and i32 %31, %39
  %181 = and i32 %52, %25
  %182 = or i32 %59, %117
  %183 = or i32 %49, %37
  %184 = and i32 %23, %32
  %185 = and i32 %37, %90
  %186 = xor i32 %42, %59
  %187 = xor i32 %90, %2
  %188 = and i32 %93, %17
  %189 = and i32 %95, %0
  %190 = xor i32 %189, -1
  %191 = xor i32 %188, %190
  %192 = or i32 %63, %24
  %193 = add i32 %26, 1
  %194 = xor i32 %114, %1
  %195 = and i32 %31, %90
  %196 = and i32 %27, %17
  %197 = or i32 %26, %49
  %198 = xor i32 %81, %27
  %199 = shl i32 %198, 1
  %200 = or i32 %23, %89
  %201 = shl i32 %200, 1
  %202 = and i32 %32, %60
  %203 = and i32 %52, %2
  %204 = or i32 %56, %17
  %205 = and i32 %88, %23
  %206 = and i32 %25, %90
  %207 = shl i32 %206, 1
  %208 = and i32 %24, %2
  %209 = xor i32 %84, %0
  %210 = and i32 %37, %17
  %211 = shl i32 %63, 1
  %212 = add i32 %0, 1
  %213 = xor i32 %26, %0
  %214 = or i32 %36, %49
  %215 = or i32 %63, %117
  %216 = or i32 %81, %65
  %217 = xor i32 %81, %52
  %218 = and i32 %70, %1
  %219 = xor i32 %49, %34
  %220 = or i32 %18, %17
  %221 = or i32 %59, %32
  %222 = and i32 %36, %39
  %223 = shl i32 %222, 1
  %224 = xor i32 %27, %0
  %225 = and i32 %42, %24
  %226 = xor i32 %81, %20
  %227 = xor i32 %21, %46
  %228 = or i32 %89, %1
  %229 = and i32 %39, %2
  %230 = xor i32 %81, %39
  %231 = or i32 %20, %17
  %232 = shl i32 %231, 1
  %233 = and i32 %31, %1
  %234 = and i32 %90, %2
  %235 = shl i32 %234, 1
  %236 = or i32 %59, %2
  %237 = and i32 %31, %60
  %238 = and i32 %34, %17
  %239 = and i32 %36, %52
  %240 = and i32 %31, %23
  %241 = or i32 %40, %2
  %242 = or i32 %31, %65
  %243 = xor i32 %81, %1
  %244 = and i32 %23, %70
  %245 = xor i32 %141, -1
  %246 = xor i32 %72, %245
  %247 = or i32 %63, %18
  %248 = or i32 %31, %23
  %249 = shl i32 %248, 2
  %250 = or i32 %23, %25
  %251 = and i32 %39, %25
  %252 = xor i32 %188, %86
  %253 = and i32 %84, %17
  %254 = mul i32 %253, -6
  %255 = and i32 %26, %17
  %256 = mul i32 %255, -7
  %257 = and i32 %84, %0
  %258 = and i32 %26, %0
  %259 = mul i32 %258, 15
  %260 = and i32 %117, %17
  %261 = mul i32 %19, 19
  %262 = and i32 %117, %0
  %263 = mul i32 %262, 24
  %264 = xor i32 %4, %3
  %265 = xor i32 %5, %4
  %266 = xor i32 %265, -1
  %267 = or i32 %264, %266
  %268 = and i32 %8, %4
  %269 = xor i32 %268, %5
  %270 = xor i32 %5, -1
  %271 = and i32 %270, %3
  %272 = or i32 %271, %268
  %273 = shl i32 %272, 1
  %274 = and i32 %5, %4
  %275 = xor i32 %274, -1
  %276 = xor i32 %275, %3
  %277 = shl i32 %276, 1
  %278 = or i32 %270, %4
  %279 = xor i32 %278, -1
  %280 = or i32 %264, %279
  %281 = or i32 %5, %4
  %282 = xor i32 %281, -1
  %283 = and i32 %266, %3
  %284 = xor i32 %271, -1
  %285 = add i32 %271, 1
  %286 = xor i32 %4, -1
  %287 = or i32 %5, %3
  %288 = or i32 %287, %286
  %289 = xor i32 %264, -1
  %290 = and i32 %265, %289
  %291 = or i32 %270, %3
  %292 = or i32 %291, %4
  %293 = and i32 %278, %3
  %294 = xor i32 %287, -1
  %295 = or i32 %294, %4
  %296 = or i32 %4, %3
  %297 = xor i32 %296, -1
  %298 = or i32 %266, %297
  %299 = and i32 %5, %3
  %300 = xor i32 %299, -1
  %301 = and i32 %300, %4
  %302 = or i32 %266, %3
  %303 = and i32 %270, %4
  %304 = xor i32 %303, -1
  %305 = xor i32 %304, %3
  %306 = shl i32 %305, 1
  %307 = or i32 %8, %4
  %308 = and i32 %11, %307
  %309 = xor i32 %307, -1
  %310 = or i32 %14, %309
  %311 = xor i32 %291, -1
  %312 = add i32 %291, 1
  %313 = and i32 %264, %275
  %314 = and i32 %4, %3
  %315 = or i32 %11, %314
  %316 = xor i32 %294, %4
  %317 = xor i32 %271, %4
  %318 = or i32 %309, %5
  %319 = and i32 %299, %4
  %320 = xor i32 %12, -1
  %321 = or i32 %319, %320
  %322 = xor i32 %279, %3
  %323 = xor i32 %287, %4
  %324 = or i32 %319, %323
  %325 = and i32 %275, %8
  %326 = or i32 %289, %5
  %327 = xor i32 %278, %314
  %328 = and i32 %299, %286
  %329 = and i32 %11, %4
  %330 = xor i32 %329, 2147483647
  %331 = xor i32 %330, %328
  %332 = or i32 %11, %4
  %333 = xor i32 %332, -1
  %334 = or i32 %10, %333
  %335 = and i32 %307, %14
  %336 = and i32 %304, %3
  %337 = and i32 %9, %286
  %338 = or i32 %8, %5
  %339 = and i32 %338, %4
  %340 = xor i32 %339, -1
  %341 = xor i32 %337, %340
  %342 = or i32 %299, %268
  %343 = and i32 %266, %8
  %344 = or i32 %264, %270
  %345 = xor i32 %274, %284
  %346 = shl i32 %11, 1
  %347 = and i32 %14, %4
  %348 = or i32 %266, %8
  %349 = xor i32 %314, -1
  %350 = and i32 %270, %349
  %351 = shl i32 %350, 1
  %352 = and i32 %270, %289
  %353 = and i32 %307, %5
  %354 = and i32 %265, %296
  %355 = and i32 %265, %307
  %356 = or i32 %303, %264
  %357 = or i32 %299, %286
  %358 = or i32 %264, %282
  %359 = xor i32 %291, %314
  %360 = or i32 %268, %14
  %361 = or i32 %271, %286
  %362 = and i32 %289, %5
  %363 = and i32 %264, %304
  %364 = or i32 %274, %289
  %365 = and i32 %275, %289
  %366 = add i32 %314, 1
  %367 = xor i32 %284, %4
  %368 = and i32 %281, %264
  %369 = or i32 %274, %271
  %370 = or i32 %294, %286
  %371 = add i32 %299, 1
  %372 = or i32 %300, %4
  %373 = shl i32 %372, 2
  %374 = xor i32 %10, %332
  %375 = or i32 %299, %4
  %376 = shl i32 %375, 1
  %377 = or i32 %268, %266
  %378 = or i32 %274, %309
  %379 = and i32 %281, %289
  %380 = or i32 %265, %314
  %381 = xor i32 %278, %3
  %382 = add i32 %303, 1
  %383 = or i32 %274, %8
  %384 = xor i32 %296, %5
  %385 = and i32 %14, %286
  %386 = and i32 %307, %270
  %387 = or i32 %11, %309
  %388 = add i32 %264, 1
  %389 = and i32 %296, %14
  %390 = shl i32 %389, 1
  %391 = and i32 %275, %3
  %392 = and i32 %11, %286
  %393 = xor i32 %392, -1
  %394 = xor i32 %319, %393
  %395 = xor i32 %300, %4
  %396 = or i32 %303, %3
  %397 = or i32 %265, %268
  %398 = or i32 %282, %3
  %399 = or i32 %270, %309
  %400 = and i32 %265, %264
  %401 = and i32 %278, %264
  %402 = or i32 %319, %392
  %403 = or i32 %314, %14
  %404 = xor i32 %287, %314
  %405 = xor i32 %338, %4
  %406 = or i32 %10, %405
  %407 = or i32 %314, %279
  %408 = xor i32 %268, -1
  %409 = and i32 %11, %408
  %410 = or i32 %284, %4
  %411 = or i32 %300, %286
  %412 = shl i32 %411, 1
  %413 = or i32 %265, %264
  %414 = or i32 %314, %266
  %415 = xor i32 %303, %300
  %416 = and i32 %265, %408
  %417 = and i32 %265, %8
  %418 = shl i32 %417, 1
  %419 = or i32 %279, %289
  %420 = or i32 %271, %4
  %421 = or i32 %337, %347
  %422 = xor i32 %299, %4
  %423 = or i32 %265, %8
  %424 = shl i32 %423, 1
  %425 = xor i32 %338, -1
  %426 = or i32 %425, %4
  %427 = xor i32 %10, %426
  %428 = xor i32 %282, %3
  %429 = and i32 %11, %349
  %430 = and i32 %278, %8
  %431 = shl i32 %430, 1
  %432 = or i32 %303, %311
  %433 = xor i32 %10, %320
  %434 = or i32 %265, %309
  %435 = xor i32 %274, %3
  %436 = shl i32 %435, 1
  %437 = or i32 %270, %297
  %438 = xor i32 %268, %300
  %439 = and i32 %266, %408
  %440 = and i32 %304, %289
  %441 = add i32 %296, 1
  %442 = and i32 %291, %4
  %443 = xor i32 %14, %4
  %444 = and i32 %281, %3
  %445 = and i32 %264, %266
  %446 = or i32 %303, %299
  %447 = and i32 %278, %289
  %448 = or i32 %314, %294
  %449 = xor i32 %309, %5
  %450 = and i32 %265, %349
  %451 = xor i32 %297, %5
  %452 = and i32 %291, %286
  %453 = shl i32 %452, 1
  %454 = xor i32 %281, %3
  %455 = xor i32 %274, %296
  %456 = and i32 %14, %349
  %457 = and i32 %284, %286
  %458 = shl i32 %457, 1
  %459 = xor i32 %349, %5
  %460 = or i32 %291, %286
  %461 = shl i32 %460, 1
  %462 = xor i32 %307, %5
  %463 = and i32 %14, %408
  %464 = xor i32 %287, 2147483647
  %465 = or i32 %464, %4
  %466 = xor i32 %465, %319
  %467 = shl i32 %466, 1
  %468 = xor i32 %405, -1
  %469 = xor i32 %10, %468
  %470 = and i32 %294, %286
  %471 = and i32 %271, %286
  %472 = and i32 %294, %4
  %473 = mul i32 %472, 10
  %474 = and i32 %271, %4
  %475 = and i32 %311, %286
  %476 = and i32 %311, %4
  %477 = mul i32 %319, -9
  %478 = add i32 %39, %90
  %479 = add i32 %478, %56
  %480 = add i32 %479, %29
  %481 = add i32 %480, %286
  %482 = add i32 %481, %218
  %483 = add i32 %482, %214
  %484 = add i32 %483, %175
  %485 = add i32 %484, %172
  %486 = add i32 %485, %150
  %487 = add i32 %486, %144
  %488 = add i32 %487, %130
  %489 = add i32 %488, %98
  %490 = add i32 %489, %91
  %491 = add i32 %490, %87
  %492 = add i32 %491, %82
  %493 = add i32 %492, %79
  %494 = add i32 %493, %58
  %495 = add i32 %494, %307
  %496 = add i32 %495, %459
  %497 = add i32 %496, %275
  %498 = add i32 %497, %269
  %499 = add i32 %498, %392
  %500 = add i32 %499, %414
  %501 = add i32 %500, %410
  %502 = add i32 %501, %379
  %503 = add i32 %502, %369
  %504 = add i32 %503, %316
  %505 = add i32 %504, %308
  %506 = add i32 %505, %331
  %507 = shl i32 %506, 1
  %508 = sub i32 %165, %236
  %509 = add i32 %508, %89
  %510 = sub i32 %509, %230
  %511 = add i32 %510, %135
  %512 = add i32 %511, %355
  %513 = sub i32 %512, %360
  %514 = sub i32 %513, %280
  %515 = mul i32 %514, 5
  %516 = sub i32 %30, %22
  %517 = sub i32 %516, %358
  %518 = sub i32 %517, %334
  %519 = mul i32 %518, 3
  %520 = sub i32 %257, %260
  %521 = add i32 %520, %476
  %522 = mul i32 %521, 14
  %523 = add i32 %475, %471
  %524 = mul i32 %523, -11
  %525 = sub i32 %470, %474
  %526 = mul i32 %525, 12
  %527 = sub i32 %328, %72
  %528 = mul i32 %527, 13
  %529 = add i32 %122, 1073741823
  %530 = add i32 %529, %78
  %531 = add i32 %530, %264
  %532 = add i32 %531, %433
  %533 = shl i32 %532, 2
  %534 = add i32 %212, %2
  %535 = add i32 %534, %83
  %536 = sub i32 %535, %52
  %537 = add i32 %536, %65
  %538 = sub i32 %537, %49
  %539 = add i32 %538, %34
  %540 = sub i32 %539, %50
  %541 = sub i32 %540, %61
  %542 = add i32 %541, %31
  %543 = sub i32 %542, %26
  %544 = add i32 %543, %112
  %545 = sub i32 %544, %121
  %546 = add i32 %545, %37
  %547 = add i32 %546, %129
  %548 = add i32 %547, %114
  %549 = add i32 %548, %152
  %550 = sub i32 %549, %153
  %551 = sub i32 %550, %159
  %552 = sub i32 %551, %163
  %553 = sub i32 %552, %176
  %554 = add i32 %553, %181
  %555 = add i32 %554, %84
  %556 = sub i32 %555, %187
  %557 = add i32 %556, %193
  %558 = sub i32 %557, %203
  %559 = add i32 %558, %208
  %560 = sub i32 %559, %88
  %561 = add i32 %560, %229
  %562 = sub i32 %561, %42
  %563 = sub i32 %562, %241
  %564 = sub i32 %563, %250
  %565 = sub i32 %564, %251
  %566 = sub i32 %565, %28
  %567 = sub i32 %566, %33
  %568 = sub i32 %567, %35
  %569 = add i32 %568, %38
  %570 = sub i32 %569, %41
  %571 = add i32 %570, %44
  %572 = add i32 %571, %48
  %573 = add i32 %572, %51
  %574 = add i32 %573, %53
  %575 = sub i32 %574, %55
  %576 = add i32 %575, %57
  %577 = sub i32 %576, %62
  %578 = sub i32 %577, %64
  %579 = add i32 %578, %66
  %580 = sub i32 %579, %67
  %581 = sub i32 %580, %68
  %582 = add i32 %581, %69
  %583 = sub i32 %582, %71
  %584 = sub i32 %583, %77
  %585 = add i32 %584, %80
  %586 = add i32 %585, %85
  %587 = sub i32 %586, %86
  %588 = sub i32 %587, %92
  %589 = sub i32 %588, %99
  %590 = add i32 %589, %100
  %591 = sub i32 %590, %102
  %592 = sub i32 %591, %103
  %593 = sub i32 %592, %104
  %594 = sub i32 %593, %105
  %595 = sub i32 %594, %106
  %596 = sub i32 %595, %107
  %597 = sub i32 %596, %113
  %598 = sub i32 %597, %118
  %599 = sub i32 %598, %119
  %600 = sub i32 %599, %120
  %601 = sub i32 %600, %124
  %602 = sub i32 %601, %125
  %603 = sub i32 %602, %126
  %604 = sub i32 %603, %21
  %605 = sub i32 %604, %127
  %606 = add i32 %605, %128
  %607 = add i32 %606, %131
  %608 = sub i32 %607, %132
  %609 = sub i32 %608, %133
  %610 = add i32 %609, %134
  %611 = add i32 %610, %136
  %612 = add i32 %611, %137
  %613 = add i32 %612, %138
  %614 = add i32 %613, %143
  %615 = sub i32 %614, %151
  %616 = sub i32 %615, %154
  %617 = add i32 %616, %155
  %618 = sub i32 %617, %160
  %619 = add i32 %618, %161
  %620 = add i32 %619, %162
  %621 = sub i32 %620, %164
  %622 = sub i32 %621, %166
  %623 = sub i32 %622, %169
  %624 = add i32 %623, %173
  %625 = add i32 %624, %174
  %626 = sub i32 %625, %177
  %627 = add i32 %626, %179
  %628 = sub i32 %627, %180
  %629 = add i32 %628, %182
  %630 = sub i32 %629, %183
  %631 = sub i32 %630, %184
  %632 = add i32 %631, %185
  %633 = sub i32 %632, %186
  %634 = sub i32 %633, %192
  %635 = add i32 %634, %194
  %636 = add i32 %635, %195
  %637 = sub i32 %636, %196
  %638 = sub i32 %637, %197
  %639 = add i32 %638, %202
  %640 = add i32 %639, %204
  %641 = add i32 %640, %205
  %642 = sub i32 %641, %207
  %643 = sub i32 %642, %73
  %644 = add i32 %643, %110
  %645 = add i32 %644, %209
  %646 = add i32 %645, %210
  %647 = sub i32 %646, %211
  %648 = sub i32 %647, %213
  %649 = sub i32 %648, %215
  %650 = sub i32 %649, %216
  %651 = add i32 %650, %217
  %652 = add i32 %651, %219
  %653 = sub i32 %652, %220
  %654 = add i32 %653, %221
  %655 = add i32 %654, %224
  %656 = add i32 %655, %225
  %657 = add i32 %656, %226
  %658 = sub i32 %657, %228
  %659 = sub i32 %658, %233
  %660 = sub i32 %659, %235
  %661 = add i32 %660, %237
  %662 = sub i32 %661, %238
  %663 = sub i32 %662, %239
  %664 = sub i32 %663, %240
  %665 = sub i32 %664, %242
  %666 = add i32 %665, %243
  %667 = sub i32 %666, %244
  %668 = sub i32 %667, %247
  %669 = add i32 %668, %4
  %670 = sub i32 %669, %47
  %671 = add i32 %670, %97
  %672 = sub i32 %671, %109
  %673 = add i32 %672, %111
  %674 = sub i32 %673, %116
  %675 = sub i32 %674, %140
  %676 = sub i32 %675, %142
  %677 = sub i32 %676, %149
  %678 = add i32 %677, %156
  %679 = sub i32 %678, %158
  %680 = sub i32 %679, %168
  %681 = add i32 %680, %178
  %682 = add i32 %681, %191
  %683 = sub i32 %682, %199
  %684 = sub i32 %683, %201
  %685 = sub i32 %684, %223
  %686 = sub i32 %685, %227
  %687 = sub i32 %686, %232
  %688 = sub i32 %687, %246
  %689 = sub i32 %688, %249
  %690 = add i32 %689, %252
  %691 = add i32 %690, %254
  %692 = add i32 %691, %256
  %693 = add i32 %692, %259
  %694 = add i32 %693, %261
  %695 = add i32 %694, %263
  %696 = add i32 %695, %296
  %697 = add i32 %696, %366
  %698 = add i32 %697, %309
  %699 = add i32 %698, %388
  %700 = sub i32 %699, %314
  %701 = sub i32 %700, %268
  %702 = add i32 %701, %441
  %703 = add i32 %702, %408
  %704 = add i32 %703, %285
  %705 = add i32 %704, %271
  %706 = add i32 %705, %312
  %707 = add i32 %706, %318
  %708 = add i32 %707, %326
  %709 = add i32 %708, %344
  %710 = sub i32 %709, %352
  %711 = add i32 %710, %353
  %712 = add i32 %711, %266
  %713 = add i32 %712, %362
  %714 = add i32 %713, %294
  %715 = add i32 %714, %371
  %716 = add i32 %715, %274
  %717 = add i32 %716, %382
  %718 = add i32 %717, %384
  %719 = add i32 %718, %386
  %720 = add i32 %719, %399
  %721 = add i32 %720, %437
  %722 = sub i32 %721, %449
  %723 = add i32 %722, %451
  %724 = add i32 %723, %462
  %725 = sub i32 %724, %76
  %726 = sub i32 %725, %147
  %727 = sub i32 %726, %171
  %728 = sub i32 %727, %267
  %729 = add i32 %728, %283
  %730 = add i32 %729, %288
  %731 = add i32 %730, %290
  %732 = sub i32 %731, %292
  %733 = add i32 %732, %293
  %734 = sub i32 %733, %295
  %735 = sub i32 %734, %298
  %736 = add i32 %735, %301
  %737 = add i32 %736, %302
  %738 = add i32 %737, %310
  %739 = sub i32 %738, %313
  %740 = add i32 %739, %315
  %741 = sub i32 %740, %317
  %742 = add i32 %741, %322
  %743 = add i32 %742, %325
  %744 = sub i32 %743, %327
  %745 = sub i32 %744, %335
  %746 = sub i32 %745, %336
  %747 = add i32 %746, %342
  %748 = add i32 %747, %343
  %749 = add i32 %748, %345
  %750 = sub i32 %749, %346
  %751 = sub i32 %750, %347
  %752 = add i32 %751, %348
  %753 = sub i32 %752, %351
  %754 = sub i32 %753, %354
  %755 = add i32 %754, %356
  %756 = sub i32 %755, %357
  %757 = add i32 %756, %359
  %758 = sub i32 %757, %361
  %759 = add i32 %758, %363
  %760 = sub i32 %759, %364
  %761 = add i32 %760, %365
  %762 = sub i32 %761, %367
  %763 = sub i32 %762, %368
  %764 = add i32 %763, %370
  %765 = add i32 %764, %377
  %766 = add i32 %765, %378
  %767 = add i32 %766, %380
  %768 = sub i32 %767, %381
  %769 = sub i32 %768, %383
  %770 = sub i32 %769, %385
  %771 = sub i32 %770, %387
  %772 = sub i32 %771, %391
  %773 = sub i32 %772, %329
  %774 = add i32 %773, %395
  %775 = sub i32 %774, %396
  %776 = sub i32 %775, %397
  %777 = sub i32 %776, %398
  %778 = add i32 %777, %400
  %779 = add i32 %778, %401
  %780 = sub i32 %779, %403
  %781 = sub i32 %780, %404
  %782 = add i32 %781, %407
  %783 = add i32 %782, %409
  %784 = add i32 %783, %413
  %785 = add i32 %784, %415
  %786 = sub i32 %785, %416
  %787 = add i32 %786, %419
  %788 = add i32 %787, %420
  %789 = sub i32 %788, %422
  %790 = add i32 %789, %428
  %791 = add i32 %790, %429
  %792 = add i32 %791, %432
  %793 = add i32 %792, %434
  %794 = add i32 %793, %438
  %795 = add i32 %794, %439
  %796 = sub i32 %795, %440
  %797 = sub i32 %796, %442
  %798 = sub i32 %797, %443
  %799 = sub i32 %798, %444
  %800 = add i32 %799, %445
  %801 = add i32 %800, %446
  %802 = sub i32 %801, %447
  %803 = add i32 %802, %448
  %804 = sub i32 %803, %450
  %805 = add i32 %804, %454
  %806 = add i32 %805, %455
  %807 = add i32 %806, %456
  %808 = sub i32 %807, %463
  %809 = sub i32 %808, %273
  %810 = sub i32 %809, %277
  %811 = sub i32 %810, %306
  %812 = add i32 %811, %321
  %813 = add i32 %812, %324
  %814 = sub i32 %813, %341
  %815 = sub i32 %814, %373
  %816 = sub i32 %815, %374
  %817 = sub i32 %816, %376
  %818 = sub i32 %817, %390
  %819 = sub i32 %818, %394
  %820 = add i32 %819, %402
  %821 = add i32 %820, %406
  %822 = sub i32 %821, %412
  %823 = sub i32 %822, %418
  %824 = add i32 %823, %421
  %825 = sub i32 %824, %424
  %826 = sub i32 %825, %427
  %827 = sub i32 %826, %431
  %828 = sub i32 %827, %436
  %829 = sub i32 %828, %453
  %830 = sub i32 %829, %458
  %831 = sub i32 %830, %461
  %832 = sub i32 %831, %469
  %833 = add i32 %832, %473
  %834 = add i32 %833, %477
  %835 = add i32 %834, %524
  %836 = add i32 %835, %526
  %837 = add i32 %836, %528
  %838 = sub i32 %837, %467
  %839 = add i32 %838, %522
  %840 = add i32 %839, %519
  %841 = add i32 %840, %533
  %842 = add i32 %841, %515
  %843 = add i32 %842, %507
  %844 = icmp eq i32 %16, %843
  %845 = select i1 %844, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %846 = tail call i32 @puts(i8* nonnull dereferenceable(1) %845)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
