digraph "DFG for'main' function" {
	Node0x58db18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x58db98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x58dc28[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x58e088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x58e168[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x58e288[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x58e4c0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x58e578[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x58f4e8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x58fb70[shape=record, label="  %8 = add i32 %6, 1"];
	Node0x58fbe0[shape=record, label="  %9 = add i32 %8, %7"];
	Node0x58fc50[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x58fcc0[shape=record, label="  %11 = and i32 %6, %10"];
	Node0x58fd30[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x58fda0[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x58fe10[shape=record, label="  %14 = or i32 %6, %10"];
	Node0x58fe80[shape=record, label="  %15 = xor i32 %6, %10"];
	Node0x58fef0[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x58ff60[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x58ffd0[shape=record, label="  %18 = xor i32 %14, -1"];
	Node0x590040[shape=record, label="  %19 = mul i32 %16, 3"];
	Node0x5900b0[shape=record, label="  %20 = sub i32 %10, %14"];
	Node0x590120[shape=record, label="  %21 = add i32 %20, %15"];
	Node0x590190[shape=record, label="  %22 = sub i32 %21, %16"];
	Node0x590200[shape=record, label="  %23 = add i32 %22, %17"];
	Node0x590270[shape=record, label="  %24 = add i32 %23, %18"];
	Node0x5902e0[shape=record, label="  %25 = sub i32 %24, %11"];
	Node0x590350[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x5903c0[shape=record, label="  %27 = sub i32 %26, %13"];
	Node0x590430[shape=record, label="  %28 = icmp eq i32 %9, %27"];
	Node0x52e9d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x5904c0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x590718[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x590878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x590938[shape=record, label="  ret i32 0"];
	Node0x58db18 -> Node0x58db98;
	Node0x58db98 -> Node0x58dc28;
	Node0x58dc28 -> Node0x58e088;
	Node0x58e088 -> Node0x58e168;
	Node0x58e168 -> Node0x58e288;
	Node0x58e288 -> Node0x58e4c0;
	Node0x58e4c0 -> Node0x58e578;
	Node0x58e578 -> Node0x58f4e8;
	Node0x58f4e8 -> Node0x58fb70;
	Node0x58fb70 -> Node0x58fbe0;
	Node0x58fbe0 -> Node0x58fc50;
	Node0x58fc50 -> Node0x58fcc0;
	Node0x58fcc0 -> Node0x58fd30;
	Node0x58fd30 -> Node0x58fda0;
	Node0x58fda0 -> Node0x58fe10;
	Node0x58fe10 -> Node0x58fe80;
	Node0x58fe80 -> Node0x58fef0;
	Node0x58fef0 -> Node0x58ff60;
	Node0x58ff60 -> Node0x58ffd0;
	Node0x58ffd0 -> Node0x590040;
	Node0x590040 -> Node0x5900b0;
	Node0x5900b0 -> Node0x590120;
	Node0x590120 -> Node0x590190;
	Node0x590190 -> Node0x590200;
	Node0x590200 -> Node0x590270;
	Node0x590270 -> Node0x5902e0;
	Node0x5902e0 -> Node0x590350;
	Node0x590350 -> Node0x5903c0;
	Node0x5903c0 -> Node0x590430;
	Node0x590430 -> Node0x52e9d8;
	Node0x52e9d8 -> Node0x5904c0;
	Node0x5904c0 -> Node0x590718;
	Node0x590718 -> Node0x590878;
	Node0x590878 -> Node0x590938;
edge [color=red]
	Node0x58db18 -> Node0x58dc28;
	Node0x58dc28 -> Node0x58e088;
	Node0x58db98 -> Node0x58e168;
	Node0x58e168 -> Node0x58e288;
	Node0x58db18 -> Node0x58e4c0;
	Node0x58db98 -> Node0x58e4c0;
	Node0x58db18 -> Node0x58e578;
	Node0x58db98 -> Node0x58f4e8;
	Node0x58e578 -> Node0x58fb70;
	Node0x58fb70 -> Node0x58fbe0;
	Node0x58f4e8 -> Node0x58fbe0;
	Node0x58f4e8 -> Node0x58fc50;
	Node0x58e578 -> Node0x58fcc0;
	Node0x58fc50 -> Node0x58fcc0;
	Node0x58fcc0 -> Node0x58fd30;
	Node0x58fd30 -> Node0x58fda0;
	Node0x58e578 -> Node0x58fe10;
	Node0x58fc50 -> Node0x58fe10;
	Node0x58e578 -> Node0x58fe80;
	Node0x58fc50 -> Node0x58fe80;
	Node0x58f4e8 -> Node0x58fef0;
	Node0x58e578 -> Node0x58fef0;
	Node0x58f4e8 -> Node0x58ff60;
	Node0x58e578 -> Node0x58ff60;
	Node0x58fe10 -> Node0x58ffd0;
	Node0x58fef0 -> Node0x590040;
	Node0x58fc50 -> Node0x5900b0;
	Node0x58fe10 -> Node0x5900b0;
	Node0x5900b0 -> Node0x590120;
	Node0x58fe80 -> Node0x590120;
	Node0x590120 -> Node0x590190;
	Node0x58fef0 -> Node0x590190;
	Node0x590190 -> Node0x590200;
	Node0x58ff60 -> Node0x590200;
	Node0x590200 -> Node0x590270;
	Node0x58ffd0 -> Node0x590270;
	Node0x590270 -> Node0x5902e0;
	Node0x58fcc0 -> Node0x5902e0;
	Node0x5902e0 -> Node0x590350;
	Node0x590040 -> Node0x590350;
	Node0x590350 -> Node0x5903c0;
	Node0x58fda0 -> Node0x5903c0;
	Node0x58fbe0 -> Node0x590430;
	Node0x5903c0 -> Node0x590430;
	Node0x590430 -> Node0x52e9d8;
	Node0x52e9d8 -> Node0x5904c0;
	Node0x58e168 -> Node0x590718;
	Node0x58dc28 -> Node0x590878;
}
