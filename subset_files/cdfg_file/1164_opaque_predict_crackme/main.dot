digraph "DFG for'main' function" {
	Node0x956c58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x956cd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x956d68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x9571c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x9572a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x9573c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x957600[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x9576b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x958628[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x958cb0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x958d20[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x958d90[shape=record, label="  %10 = shl i32 %8, 1"];
	Node0x958e00[shape=record, label="  %11 = or i32 %10, 1"];
	Node0x958e70[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x958ee0[shape=record, label="  %13 = and i32 %6, %12"];
	Node0x958f50[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x958fc0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x959030[shape=record, label="  %16 = or i32 %6, %12"];
	Node0x9590a0[shape=record, label="  %17 = shl i32 %6, 1"];
	Node0x959110[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x959180[shape=record, label="  %19 = xor i32 %16, -1"];
	Node0x9591f0[shape=record, label="  %20 = mul i32 %19, -5"];
	Node0x959260[shape=record, label="  %21 = shl i32 %18, 1"];
	Node0x9592d0[shape=record, label="  %22 = add i32 %6, %12"];
	Node0x959340[shape=record, label="  %23 = sub i32 %22, %17"];
	Node0x9593b0[shape=record, label="  %24 = sub i32 %23, %16"];
	Node0x959420[shape=record, label="  %25 = add i32 %24, %20"];
	Node0x959490[shape=record, label="  %26 = sub i32 %25, %14"];
	Node0x959500[shape=record, label="  %27 = add i32 %26, %21"];
	Node0x959570[shape=record, label="  %28 = add i32 %27, %11"];
	Node0x9595e0[shape=record, label="  %29 = add i32 %28, %15"];
	Node0x959650[shape=record, label="  %30 = icmp eq i32 %29, %9"];
	Node0x8f79d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x9596e0[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x959b48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x959ca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x959d68[shape=record, label="  ret i32 0"];
	Node0x956c58 -> Node0x956cd8;
	Node0x956cd8 -> Node0x956d68;
	Node0x956d68 -> Node0x9571c8;
	Node0x9571c8 -> Node0x9572a8;
	Node0x9572a8 -> Node0x9573c8;
	Node0x9573c8 -> Node0x957600;
	Node0x957600 -> Node0x9576b8;
	Node0x9576b8 -> Node0x958628;
	Node0x958628 -> Node0x958cb0;
	Node0x958cb0 -> Node0x958d20;
	Node0x958d20 -> Node0x958d90;
	Node0x958d90 -> Node0x958e00;
	Node0x958e00 -> Node0x958e70;
	Node0x958e70 -> Node0x958ee0;
	Node0x958ee0 -> Node0x958f50;
	Node0x958f50 -> Node0x958fc0;
	Node0x958fc0 -> Node0x959030;
	Node0x959030 -> Node0x9590a0;
	Node0x9590a0 -> Node0x959110;
	Node0x959110 -> Node0x959180;
	Node0x959180 -> Node0x9591f0;
	Node0x9591f0 -> Node0x959260;
	Node0x959260 -> Node0x9592d0;
	Node0x9592d0 -> Node0x959340;
	Node0x959340 -> Node0x9593b0;
	Node0x9593b0 -> Node0x959420;
	Node0x959420 -> Node0x959490;
	Node0x959490 -> Node0x959500;
	Node0x959500 -> Node0x959570;
	Node0x959570 -> Node0x9595e0;
	Node0x9595e0 -> Node0x959650;
	Node0x959650 -> Node0x8f79d8;
	Node0x8f79d8 -> Node0x9596e0;
	Node0x9596e0 -> Node0x959b48;
	Node0x959b48 -> Node0x959ca8;
	Node0x959ca8 -> Node0x959d68;
edge [color=red]
	Node0x956c58 -> Node0x956d68;
	Node0x956d68 -> Node0x9571c8;
	Node0x956cd8 -> Node0x9572a8;
	Node0x9572a8 -> Node0x9573c8;
	Node0x956c58 -> Node0x957600;
	Node0x956cd8 -> Node0x957600;
	Node0x956c58 -> Node0x9576b8;
	Node0x956cd8 -> Node0x958628;
	Node0x958628 -> Node0x958cb0;
	Node0x9576b8 -> Node0x958cb0;
	Node0x958cb0 -> Node0x958d20;
	Node0x958cb0 -> Node0x958d90;
	Node0x958d90 -> Node0x958e00;
	Node0x958628 -> Node0x958e70;
	Node0x9576b8 -> Node0x958ee0;
	Node0x958e70 -> Node0x958ee0;
	Node0x958ee0 -> Node0x958f50;
	Node0x958f50 -> Node0x958fc0;
	Node0x9576b8 -> Node0x959030;
	Node0x958e70 -> Node0x959030;
	Node0x9576b8 -> Node0x9590a0;
	Node0x958628 -> Node0x959110;
	Node0x9576b8 -> Node0x959110;
	Node0x959030 -> Node0x959180;
	Node0x959180 -> Node0x9591f0;
	Node0x959110 -> Node0x959260;
	Node0x9576b8 -> Node0x9592d0;
	Node0x958e70 -> Node0x9592d0;
	Node0x9592d0 -> Node0x959340;
	Node0x9590a0 -> Node0x959340;
	Node0x959340 -> Node0x9593b0;
	Node0x959030 -> Node0x9593b0;
	Node0x9593b0 -> Node0x959420;
	Node0x9591f0 -> Node0x959420;
	Node0x959420 -> Node0x959490;
	Node0x958f50 -> Node0x959490;
	Node0x959490 -> Node0x959500;
	Node0x959260 -> Node0x959500;
	Node0x959500 -> Node0x959570;
	Node0x958e00 -> Node0x959570;
	Node0x959570 -> Node0x9595e0;
	Node0x958fc0 -> Node0x9595e0;
	Node0x9595e0 -> Node0x959650;
	Node0x958d20 -> Node0x959650;
	Node0x959650 -> Node0x8f79d8;
	Node0x8f79d8 -> Node0x9596e0;
	Node0x9572a8 -> Node0x959b48;
	Node0x956d68 -> Node0x959ca8;
}
