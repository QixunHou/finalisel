digraph "DFG for'main' function" {
	Node0x193cb28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x193cba8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x193cc38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x193cc98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x193cd48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x193d178[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x193d258[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x193d358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x193d418[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x193d4c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x193d588[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x193d638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1937770[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x193d838[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x193e7a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x193ee18[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x193ee78[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x193ef88[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x193f1e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x193f348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x193f458[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x193f568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x193f628[shape=record, label="  ret i32 0"];
	Node0x193cb28 -> Node0x193cba8;
	Node0x193cba8 -> Node0x193cc38;
	Node0x193cc38 -> Node0x193cc98;
	Node0x193cc98 -> Node0x193cd48;
	Node0x193cd48 -> Node0x193d178;
	Node0x193d178 -> Node0x193d258;
	Node0x193d258 -> Node0x193d358;
	Node0x193d358 -> Node0x193d418;
	Node0x193d418 -> Node0x193d4c8;
	Node0x193d4c8 -> Node0x193d588;
	Node0x193d588 -> Node0x193d638;
	Node0x193d638 -> Node0x1937770;
	Node0x1937770 -> Node0x193d838;
	Node0x193d838 -> Node0x193e7a8;
	Node0x193e7a8 -> Node0x193ee18;
	Node0x193ee18 -> Node0x193ee78;
	Node0x193ee78 -> Node0x193ef88;
	Node0x193ef88 -> Node0x193f1e8;
	Node0x193f1e8 -> Node0x193f348;
	Node0x193f348 -> Node0x193f458;
	Node0x193f458 -> Node0x193f568;
	Node0x193f568 -> Node0x193f628;
edge [color=red]
	Node0x193cb28 -> Node0x193cd48;
	Node0x193cd48 -> Node0x193d178;
	Node0x193cba8 -> Node0x193d258;
	Node0x193d258 -> Node0x193d358;
	Node0x193cc38 -> Node0x193d418;
	Node0x193d418 -> Node0x193d4c8;
	Node0x193cc98 -> Node0x193d588;
	Node0x193d588 -> Node0x193d638;
	Node0x193cb28 -> Node0x1937770;
	Node0x193cba8 -> Node0x1937770;
	Node0x193cc38 -> Node0x1937770;
	Node0x193cc98 -> Node0x1937770;
	Node0x193cb28 -> Node0x193d838;
	Node0x193cba8 -> Node0x193e7a8;
	Node0x193cc38 -> Node0x193ee18;
	Node0x193cc98 -> Node0x193ee78;
	Node0x193d838 -> Node0x193ef88;
	Node0x193e7a8 -> Node0x193ef88;
	Node0x193ee18 -> Node0x193ef88;
	Node0x193ee78 -> Node0x193ef88;
	Node0x193d588 -> Node0x193f1e8;
	Node0x193d418 -> Node0x193f348;
	Node0x193d258 -> Node0x193f458;
	Node0x193cd48 -> Node0x193f568;
}
