digraph "DFG for'crackme' function" {
	Node0x193a740[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x193a7b0[shape=record, label="  %6 = and i32 %3, %0"];
	Node0x193ae30[shape=record, label="  %7 = add i32 %5, 2"];
	Node0x193aea0[shape=record, label="  %8 = add i32 %7, %6"];
	Node0x193af10[shape=record, label="  %9 = or i32 %2, %1"];
	Node0x193afb0[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x193b020[shape=record, label="  %11 = or i32 %10, %1"];
	Node0x193b090[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x193b100[shape=record, label="  %13 = xor i32 %9, -1"];
	Node0x193b170[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x193b1e0[shape=record, label="  %15 = and i32 %10, %1"];
	Node0x193b250[shape=record, label="  %16 = xor i32 %3, %0"];
	Node0x193b2c0[shape=record, label="  %17 = xor i32 %0, -1"];
	Node0x193b330[shape=record, label="  %18 = or i32 %17, %3"];
	Node0x193b3a0[shape=record, label="  %19 = xor i32 %16, -1"];
	Node0x193b410[shape=record, label="  %20 = xor i32 %3, -1"];
	Node0x193b480[shape=record, label="  %21 = and i32 %17, %3"];
	Node0x193b520[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x193b5c0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x193b630[shape=record, label="  %24 = or i32 %3, %0"];
	Node0x193b6a0[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0x193b740[shape=record, label="  %26 = xor i32 %25, -4"];
	Node0x193b7b0[shape=record, label="  %27 = xor i32 %18, -1"];
	Node0x193b820[shape=record, label="  %28 = shl i32 %6, 2"];
	Node0x193b890[shape=record, label="  %29 = add i32 %12, %13"];
	Node0x193b900[shape=record, label="  %30 = add i32 %29, %27"];
	Node0x193b9a0[shape=record, label="  %31 = mul i32 %30, -3"];
	Node0x193ba10[shape=record, label="  %32 = add i32 %11, %3"];
	Node0x193bc90[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x193bd00[shape=record, label="  %34 = sub i32 1, %1"];
	Node0x193bd70[shape=record, label="  %35 = add i32 %34, %10"];
	Node0x193bde0[shape=record, label="  %36 = sub i32 %35, %5"];
	Node0x193be50[shape=record, label="  %37 = add i32 %36, %9"];
	Node0x193bec0[shape=record, label="  %38 = add i32 %37, %12"];
	Node0x193bf30[shape=record, label="  %39 = add i32 %38, %14"];
	Node0x193bfa0[shape=record, label="  %40 = sub i32 %39, %15"];
	Node0x193c010[shape=record, label="  %41 = add i32 %40, %20"];
	Node0x193c080[shape=record, label="  %42 = sub i32 %41, %16"];
	Node0x193c0f0[shape=record, label="  %43 = sub i32 %42, %18"];
	Node0x193c160[shape=record, label="  %44 = add i32 %43, %19"];
	Node0x193c1d0[shape=record, label="  %45 = sub i32 %44, %21"];
	Node0x193c240[shape=record, label="  %46 = sub i32 %45, %28"];
	Node0x193c2b0[shape=record, label="  %47 = add i32 %46, %33"];
	Node0x193c320[shape=record, label="  %48 = add i32 %47, %23"];
	Node0x193c390[shape=record, label="  %49 = sub i32 %48, %26"];
	Node0x193c400[shape=record, label="  %50 = add i32 %49, %31"];
	Node0x193c470[shape=record, label="  %51 = icmp eq i32 %8, %50"];
	Node0x18db268[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x193c910[shape=record, label="  %53 = tail call i32 @puts(i8* nonnull dereferenceable(1) %52)"];
	Node0x193c960[shape=record, label="  ret void"];
	Node0x193a740 -> Node0x193a7b0;
	Node0x193a7b0 -> Node0x193ae30;
	Node0x193ae30 -> Node0x193aea0;
	Node0x193aea0 -> Node0x193af10;
	Node0x193af10 -> Node0x193afb0;
	Node0x193afb0 -> Node0x193b020;
	Node0x193b020 -> Node0x193b090;
	Node0x193b090 -> Node0x193b100;
	Node0x193b100 -> Node0x193b170;
	Node0x193b170 -> Node0x193b1e0;
	Node0x193b1e0 -> Node0x193b250;
	Node0x193b250 -> Node0x193b2c0;
	Node0x193b2c0 -> Node0x193b330;
	Node0x193b330 -> Node0x193b3a0;
	Node0x193b3a0 -> Node0x193b410;
	Node0x193b410 -> Node0x193b480;
	Node0x193b480 -> Node0x193b520;
	Node0x193b520 -> Node0x193b5c0;
	Node0x193b5c0 -> Node0x193b630;
	Node0x193b630 -> Node0x193b6a0;
	Node0x193b6a0 -> Node0x193b740;
	Node0x193b740 -> Node0x193b7b0;
	Node0x193b7b0 -> Node0x193b820;
	Node0x193b820 -> Node0x193b890;
	Node0x193b890 -> Node0x193b900;
	Node0x193b900 -> Node0x193b9a0;
	Node0x193b9a0 -> Node0x193ba10;
	Node0x193ba10 -> Node0x193bc90;
	Node0x193bc90 -> Node0x193bd00;
	Node0x193bd00 -> Node0x193bd70;
	Node0x193bd70 -> Node0x193bde0;
	Node0x193bde0 -> Node0x193be50;
	Node0x193be50 -> Node0x193bec0;
	Node0x193bec0 -> Node0x193bf30;
	Node0x193bf30 -> Node0x193bfa0;
	Node0x193bfa0 -> Node0x193c010;
	Node0x193c010 -> Node0x193c080;
	Node0x193c080 -> Node0x193c0f0;
	Node0x193c0f0 -> Node0x193c160;
	Node0x193c160 -> Node0x193c1d0;
	Node0x193c1d0 -> Node0x193c240;
	Node0x193c240 -> Node0x193c2b0;
	Node0x193c2b0 -> Node0x193c320;
	Node0x193c320 -> Node0x193c390;
	Node0x193c390 -> Node0x193c400;
	Node0x193c400 -> Node0x193c470;
	Node0x193c470 -> Node0x18db268;
	Node0x18db268 -> Node0x193c910;
	Node0x193c910 -> Node0x193c960;
edge [color=red]
	Node0x193a740 -> Node0x193ae30;
	Node0x193ae30 -> Node0x193aea0;
	Node0x193a7b0 -> Node0x193aea0;
	Node0x193afb0 -> Node0x193b020;
	Node0x193af10 -> Node0x193b100;
	Node0x193b020 -> Node0x193b170;
	Node0x193afb0 -> Node0x193b1e0;
	Node0x193b2c0 -> Node0x193b330;
	Node0x193b250 -> Node0x193b3a0;
	Node0x193b2c0 -> Node0x193b480;
	Node0x193b480 -> Node0x193b520;
	Node0x193b520 -> Node0x193b5c0;
	Node0x193b630 -> Node0x193b6a0;
	Node0x193b6a0 -> Node0x193b740;
	Node0x193b330 -> Node0x193b7b0;
	Node0x193a7b0 -> Node0x193b820;
	Node0x193b090 -> Node0x193b890;
	Node0x193b100 -> Node0x193b890;
	Node0x193b890 -> Node0x193b900;
	Node0x193b7b0 -> Node0x193b900;
	Node0x193b900 -> Node0x193b9a0;
	Node0x193b020 -> Node0x193ba10;
	Node0x193ba10 -> Node0x193bc90;
	Node0x193bd00 -> Node0x193bd70;
	Node0x193afb0 -> Node0x193bd70;
	Node0x193bd70 -> Node0x193bde0;
	Node0x193a740 -> Node0x193bde0;
	Node0x193bde0 -> Node0x193be50;
	Node0x193af10 -> Node0x193be50;
	Node0x193be50 -> Node0x193bec0;
	Node0x193b090 -> Node0x193bec0;
	Node0x193bec0 -> Node0x193bf30;
	Node0x193b170 -> Node0x193bf30;
	Node0x193bf30 -> Node0x193bfa0;
	Node0x193b1e0 -> Node0x193bfa0;
	Node0x193bfa0 -> Node0x193c010;
	Node0x193b410 -> Node0x193c010;
	Node0x193c010 -> Node0x193c080;
	Node0x193b250 -> Node0x193c080;
	Node0x193c080 -> Node0x193c0f0;
	Node0x193b330 -> Node0x193c0f0;
	Node0x193c0f0 -> Node0x193c160;
	Node0x193b3a0 -> Node0x193c160;
	Node0x193c160 -> Node0x193c1d0;
	Node0x193b480 -> Node0x193c1d0;
	Node0x193c1d0 -> Node0x193c240;
	Node0x193b820 -> Node0x193c240;
	Node0x193c240 -> Node0x193c2b0;
	Node0x193bc90 -> Node0x193c2b0;
	Node0x193c2b0 -> Node0x193c320;
	Node0x193b5c0 -> Node0x193c320;
	Node0x193c320 -> Node0x193c390;
	Node0x193b740 -> Node0x193c390;
	Node0x193c390 -> Node0x193c400;
	Node0x193b9a0 -> Node0x193c400;
	Node0x193aea0 -> Node0x193c470;
	Node0x193c400 -> Node0x193c470;
	Node0x193c470 -> Node0x18db268;
	Node0x18db268 -> Node0x193c910;
}
