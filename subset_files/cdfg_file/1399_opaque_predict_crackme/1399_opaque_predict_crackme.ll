; ModuleID = '../.././c_source_file/1399_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1399_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %0
  %8 = xor i32 %1, -1
  %9 = or i32 %8, %0
  %10 = xor i32 %7, %9
  %11 = mul i32 %10, -2
  %12 = xor i32 %1, %0
  %13 = xor i32 %2, %0
  %14 = xor i32 %13, -1
  %15 = and i32 %12, %14
  %16 = add i32 %11, %15
  %17 = and i32 %4, %3
  %18 = sub i32 %16, %17
  %19 = and i32 %8, %0
  %20 = xor i32 %19, -1
  %21 = xor i32 %2, %1
  %22 = and i32 %21, %20
  %23 = xor i32 %2, -1
  %24 = or i32 %12, %23
  %25 = and i32 %1, %0
  %26 = or i32 %25, %23
  %27 = xor i32 %25, -1
  %28 = and i32 %14, %27
  %29 = and i32 %23, %0
  %30 = or i32 %29, %12
  %31 = and i32 %23, %1
  %32 = xor i32 %31, -1
  %33 = xor i32 %7, %32
  %34 = and i32 %13, %8
  %35 = or i32 %23, %0
  %36 = xor i32 %35, -1
  %37 = xor i32 %12, -1
  %38 = or i32 %36, %37
  %39 = xor i32 %0, -1
  %40 = and i32 %32, %39
  %41 = or i32 %1, %0
  %42 = xor i32 %41, -1
  %43 = or i32 %14, %42
  %44 = or i32 %2, %1
  %45 = xor i32 %44, -1
  %46 = or i32 %45, %0
  %47 = and i32 %9, %2
  %48 = and i32 %2, %1
  %49 = and i32 %48, %39
  %50 = and i32 %44, %0
  %51 = or i32 %49, %50
  %52 = or i32 %2, %0
  %53 = or i32 %31, %39
  %54 = shl i32 %53, 1
  %55 = xor i32 %7, %44
  %56 = xor i32 %52, -1
  %57 = xor i32 %56, %1
  %58 = and i32 %8, %2
  %59 = and i32 %58, %0
  %60 = xor i32 %21, %0
  %61 = or i32 %59, %60
  %62 = shl i32 %61, 1
  %63 = xor i32 %21, -1
  %64 = and i32 %63, %39
  %65 = or i32 %23, %1
  %66 = xor i32 %29, %65
  %67 = or i32 %7, %8
  %68 = or i32 %21, %0
  %69 = xor i32 %59, %68
  %70 = shl i32 %0, 2
  %71 = xor i32 %50, -1
  %72 = xor i32 %49, %71
  %73 = or i32 %29, %1
  %74 = and i32 %63, %27
  %75 = and i32 %9, %63
  %76 = xor i32 %19, %32
  %77 = or i32 %25, %45
  %78 = and i32 %20, %2
  %79 = shl i32 %78, 1
  %80 = or i32 %25, %2
  %81 = and i32 %21, %41
  %82 = and i32 %35, %1
  %83 = add i32 %31, 1
  %84 = and i32 %58, %39
  %85 = or i32 %8, %2
  %86 = and i32 %85, %0
  %87 = or i32 %84, %86
  %88 = or i32 %12, %2
  %89 = and i32 %9, %14
  %90 = xor i32 %9, %2
  %91 = and i32 %63, %20
  %92 = shl i32 %91, 1
  %93 = xor i32 %85, %0
  %94 = xor i32 %59, -1
  %95 = xor i32 %93, %94
  %96 = or i32 %45, %39
  %97 = xor i32 %44, %25
  %98 = and i32 %13, %1
  %99 = or i32 %21, %39
  %100 = xor i32 %84, %99
  %101 = or i32 %37, %2
  %102 = or i32 %44, %39
  %103 = and i32 %14, %20
  %104 = or i32 %63, %42
  %105 = add i32 %44, 1
  %106 = and i32 %9, %23
  %107 = or i32 %25, %56
  %108 = and i32 %41, %14
  %109 = xor i32 %9, -1
  %110 = or i32 %13, %109
  %111 = or i32 %13, %19
  %112 = or i32 %48, %39
  %113 = shl i32 %56, 1
  %114 = and i32 %13, %41
  %115 = or i32 %7, %12
  %116 = xor i32 %7, -1
  %117 = and i32 %12, %116
  %118 = and i32 %48, %0
  %119 = xor i32 %44, %0
  %120 = xor i32 %118, -1
  %121 = xor i32 %119, %120
  %122 = or i32 %13, %1
  %123 = or i32 %63, %0
  %124 = or i32 %65, %39
  %125 = or i32 %29, %37
  %126 = and i32 %21, %39
  %127 = or i32 %118, %126
  %128 = shl i32 %127, 2
  %129 = or i32 %14, %37
  %130 = or i32 %42, %2
  %131 = and i32 %23, %37
  %132 = or i32 %7, %42
  %133 = xor i32 %29, -1
  %134 = and i32 %133, %1
  %135 = and i32 %14, %8
  %136 = or i32 %56, %37
  %137 = xor i32 %19, %2
  %138 = or i32 %118, %119
  %139 = and i32 %52, %37
  %140 = and i32 %13, %37
  %141 = or i32 %36, %1
  %142 = and i32 %116, %8
  %143 = shl i32 %142, 1
  %144 = xor i32 %65, -1
  %145 = or i32 %25, %144
  %146 = xor i32 %25, %2
  %147 = xor i32 %60, -1
  %148 = xor i32 %59, %147
  %149 = and i32 %41, %63
  %150 = or i32 %29, %144
  %151 = or i32 %12, %56
  %152 = shl i32 %151, 1
  %153 = and i32 %27, %2
  %154 = or i32 %65, %0
  %155 = or i32 %7, %45
  %156 = and i32 %12, %23
  %157 = xor i32 %42, %2
  %158 = or i32 %59, %93
  %159 = and i32 %41, %2
  %160 = and i32 %44, %39
  %161 = and i32 %41, %23
  %162 = shl i32 %161, 1
  %163 = and i32 %14, %37
  %164 = and i32 %21, %9
  %165 = shl i32 %41, 1
  %166 = xor i32 %86, -1
  %167 = xor i32 %84, %166
  %168 = or i32 %21, %109
  %169 = and i32 %52, %1
  %170 = xor i32 %48, -1
  %171 = and i32 %170, %39
  %172 = or i32 %32, %39
  %173 = xor i32 %19, %170
  %174 = and i32 %35, %37
  %175 = xor i32 %29, %1
  %176 = or i32 %118, %160
  %177 = xor i32 %65, %0
  %178 = shl i32 %177, 1
  %179 = and i32 %12, %133
  %180 = or i32 %7, %109
  %181 = or i32 %170, %0
  %182 = shl i32 %31, 1
  %183 = or i32 %13, %12
  %184 = and i32 %65, %39
  %185 = or i32 %25, %36
  %186 = or i32 %12, %14
  %187 = or i32 %25, %63
  %188 = shl i32 %187, 1
  %189 = and i32 %170, %0
  %190 = shl i32 %189, 1
  %191 = xor i32 %35, %1
  %192 = or i32 %144, %39
  %193 = xor i32 %118, %60
  %194 = and i32 %63, %0
  %195 = xor i32 %133, %1
  %196 = add i32 %1, 1
  %197 = or i32 %14, %8
  %198 = shl i32 %65, 1
  %199 = and i32 %65, %0
  %200 = or i32 %109, %2
  %201 = or i32 %19, %23
  %202 = or i32 %29, %48
  %203 = and i32 %133, %8
  %204 = xor i32 %170, %0
  %205 = xor i32 %68, -1
  %206 = or i32 %59, %205
  %207 = xor i32 %35, %25
  %208 = or i32 %144, %0
  %209 = and i32 %13, %9
  %210 = or i32 %19, %2
  %211 = shl i32 %210, 1
  %212 = or i32 %63, %109
  %213 = or i32 %21, %19
  %214 = shl i32 %25, 1
  %215 = or i32 %44, %0
  %216 = or i32 %13, %25
  %217 = or i32 %21, %25
  %218 = or i32 %21, %42
  %219 = xor i32 %7, %1
  %220 = and i32 %13, %20
  %221 = xor i32 %41, %2
  %222 = or i32 %13, %42
  %223 = and i32 %37, %2
  %224 = xor i32 %48, %0
  %225 = xor i32 %31, %0
  %226 = or i32 %36, %8
  %227 = or i32 %14, %1
  %228 = shl i32 %227, 2
  %229 = and i32 %133, %37
  %230 = and i32 %32, %0
  %231 = xor i32 %36, %1
  %232 = and i32 %13, %12
  %233 = xor i32 %45, %0
  %234 = xor i32 %160, %120
  %235 = or i32 %25, %14
  %236 = and i32 %85, %39
  %237 = or i32 %59, %236
  %238 = xor i32 %99, -1
  %239 = or i32 %84, %238
  %240 = or i32 %31, %0
  %241 = or i32 %48, %0
  %242 = and i32 %21, %0
  %243 = or i32 %49, %242
  %244 = add i32 %41, 1
  %245 = or i32 %12, %36
  %246 = or i32 %118, %147
  %247 = and i32 %13, %27
  %248 = or i32 %14, %109
  %249 = xor i32 %236, %94
  %250 = and i32 %35, %8
  %251 = xor i32 %109, %2
  %252 = shl i32 %251, 1
  %253 = xor i32 %63, %0
  %254 = or i32 %7, %1
  %255 = or i32 %56, %8
  %256 = shl i32 %255, 1
  %257 = xor i32 %144, %0
  %258 = and i32 %116, %37
  %259 = or i32 %170, %39
  %260 = or i32 %56, %1
  %261 = and i32 %52, %8
  %262 = or i32 %32, %0
  %263 = or i32 %63, %39
  %264 = or i32 %19, %63
  %265 = or i32 %29, %8
  %266 = and i32 %35, %12
  %267 = and i32 %116, %1
  %268 = shl i32 %50, 1
  %269 = and i32 %23, %20
  %270 = and i32 %23, %27
  %271 = xor i32 %116, %1
  %272 = or i32 %13, %8
  %273 = and i32 %14, %1
  %274 = and i32 %21, %27
  %275 = xor i32 %52, %25
  %276 = or i32 %13, %37
  %277 = xor i32 %52, %1
  %278 = or i32 %31, %19
  %279 = xor i32 %29, %170
  %280 = or i32 %48, %19
  %281 = shl i32 %39, 1
  %282 = and i32 %52, %12
  %283 = shl i32 %282, 1
  %284 = xor i32 %126, 2147483647
  %285 = xor i32 %284, %118
  %286 = and i32 %45, %39
  %287 = and i32 %45, %0
  %288 = and i32 %144, %39
  %289 = mul i32 %288, -18
  %290 = and i32 %144, %0
  %291 = mul i32 %290, 12
  %292 = xor i32 %5, %4
  %293 = or i32 %292, %3
  %294 = xor i32 %4, -1
  %295 = or i32 %5, %3
  %296 = xor i32 %295, -1
  %297 = or i32 %296, %294
  %298 = xor i32 %5, -1
  %299 = or i32 %298, %4
  %300 = and i32 %299, %3
  %301 = and i32 %5, %3
  %302 = and i32 %301, %294
  %303 = xor i32 %5, %3
  %304 = and i32 %303, %4
  %305 = or i32 %302, %304
  %306 = xor i32 %299, -1
  %307 = xor i32 %4, %3
  %308 = or i32 %307, %306
  %309 = xor i32 %307, -1
  %310 = or i32 %298, %309
  %311 = shl i32 %310, 1
  %312 = xor i32 %17, -1
  %313 = xor i32 %292, -1
  %314 = and i32 %313, %312
  %315 = xor i32 %3, -1
  %316 = and i32 %315, %4
  %317 = xor i32 %316, -1
  %318 = and i32 %317, %5
  %319 = and i32 %298, %3
  %320 = or i32 %319, %4
  %321 = or i32 %292, %307
  %322 = and i32 %301, %4
  %323 = xor i32 %295, %4
  %324 = or i32 %322, %323
  %325 = and i32 %5, %4
  %326 = xor i32 %325, -1
  %327 = and i32 %326, %315
  %328 = and i32 %299, %309
  %329 = or i32 %315, %4
  %330 = and i32 %292, %329
  %331 = or i32 %4, %3
  %332 = and i32 %331, %5
  %333 = or i32 %316, %5
  %334 = xor i32 %303, -1
  %335 = or i32 %334, %294
  %336 = xor i32 %323, 2147483647
  %337 = xor i32 %336, %322
  %338 = shl i32 %337, 1
  %339 = and i32 %315, %5
  %340 = and i32 %339, %4
  %341 = or i32 %315, %5
  %342 = xor i32 %341, %4
  %343 = or i32 %340, %342
  %344 = or i32 %316, %313
  %345 = shl i32 %344, 1
  %346 = and i32 %298, %4
  %347 = xor i32 %346, -1
  %348 = xor i32 %347, %3
  %349 = shl i32 %348, 1
  %350 = and i32 %307, %347
  %351 = shl i32 %350, 1
  %352 = xor i32 %296, %4
  %353 = or i32 %301, %316
  %354 = and i32 %307, %298
  %355 = xor i32 %301, -1
  %356 = xor i32 %303, %4
  %357 = xor i32 %322, %356
  %358 = xor i32 %355, %4
  %359 = or i32 %298, %3
  %360 = xor i32 %346, %359
  %361 = and i32 %339, %294
  %362 = or i32 %303, %294
  %363 = xor i32 %362, -1
  %364 = or i32 %361, %363
  %365 = and i32 %298, %317
  %366 = xor i32 %329, -1
  %367 = or i32 %325, %366
  %368 = or i32 %292, %366
  %369 = or i32 %306, %315
  %370 = shl i32 %369, 1
  %371 = or i32 %340, %356
  %372 = or i32 %303, %4
  %373 = xor i32 %340, %372
  %374 = or i32 %295, %294
  %375 = and i32 %334, %312
  %376 = and i32 %292, %331
  %377 = xor i32 %359, -1
  %378 = xor i32 %377, %4
  %379 = or i32 %5, %4
  %380 = xor i32 %379, -1
  %381 = xor i32 %380, %3
  %382 = and i32 %347, %315
  %383 = shl i32 %382, 1
  %384 = or i32 %309, %5
  %385 = add i32 %303, 1
  %386 = xor i32 %359, %4
  %387 = add i32 %3, 1
  %388 = and i32 %379, %309
  %389 = or i32 %301, %294
  %390 = and i32 %326, %309
  %391 = and i32 %292, %307
  %392 = and i32 %292, %3
  %393 = and i32 %313, %317
  %394 = and i32 %295, %4
  %395 = xor i32 %302, -1
  %396 = xor i32 %394, %395
  %397 = and i32 %307, %5
  %398 = xor i32 %325, %3
  %399 = or i32 %306, %3
  %400 = or i32 %302, %394
  %401 = shl i32 %400, 1
  %402 = and i32 %303, %294
  %403 = xor i32 %304, %395
  %404 = xor i32 %316, %355
  %405 = or i32 %303, %17
  %406 = shl i32 %405, 2
  %407 = xor i32 %319, -1
  %408 = xor i32 %325, %407
  %409 = or i32 %325, %3
  %410 = and i32 %334, %317
  %411 = or i32 %307, %380
  %412 = shl i32 %411, 1
  %413 = shl i32 %304, 1
  %414 = or i32 %306, %309
  %415 = xor i32 %331, 2147483647
  %416 = or i32 %415, %298
  %417 = xor i32 %407, %4
  %418 = and i32 %379, %307
  %419 = add i32 %325, 1
  %420 = and i32 %329, %5
  %421 = xor i32 %366, %5
  %422 = shl i32 %421, 1
  %423 = or i32 %319, %294
  %424 = or i32 %301, %4
  %425 = and i32 %407, %294
  %426 = or i32 %407, %294
  %427 = or i32 %296, %4
  %428 = xor i32 %316, %5
  %429 = and i32 %303, %317
  %430 = or i32 %17, %296
  %431 = or i32 %334, %4
  %432 = and i32 %303, %329
  %433 = xor i32 %341, -1
  %434 = or i32 %433, %4
  %435 = xor i32 %340, %434
  %436 = xor i32 %361, %362
  %437 = or i32 %407, %4
  %438 = and i32 %307, %313
  %439 = or i32 %307, %313
  %440 = and i32 %347, %3
  %441 = and i32 %295, %294
  %442 = or i32 %322, %441
  %443 = or i32 %380, %309
  %444 = shl i32 %443, 1
  %445 = or i32 %359, %4
  %446 = xor i32 %316, %407
  %447 = and i32 %292, %312
  %448 = and i32 %379, %315
  %449 = and i32 %341, %4
  %450 = xor i32 %449, 2147483647
  %451 = xor i32 %450, %361
  %452 = xor i32 %334, %4
  %453 = xor i32 %17, %5
  %454 = shl i32 %453, 1
  %455 = and i32 %292, %315
  %456 = and i32 %303, %331
  %457 = or i32 %361, %449
  %458 = xor i32 %402, -1
  %459 = xor i32 %322, %458
  %460 = or i32 %325, %309
  %461 = and i32 %296, %294
  %462 = mul i32 %461, -10
  %463 = and i32 %319, %294
  %464 = and i32 %296, %4
  %465 = and i32 %319, %4
  %466 = and i32 %377, %294
  %467 = shl i32 %302, 1
  %468 = and i32 %377, %4
  %469 = mul i32 %322, -7
  %470 = add i32 %140, %49
  %471 = add i32 %470, %77
  %472 = sub i32 %355, %471
  %473 = add i32 %472, %466
  %474 = mul i32 %473, 5
  %475 = add i32 %174, %253
  %476 = sub i32 %475, %321
  %477 = sub i32 %476, %463
  %478 = mul i32 %477, 3
  %479 = sub i32 %287, %286
  %480 = sub i32 %479, %464
  %481 = mul i32 %480, 9
  %482 = add i32 %468, %118
  %483 = mul i32 %482, 19
  %484 = mul i32 %31, 6
  %485 = add i32 %222, %43
  %486 = shl i32 %485, 2
  %487 = sub i32 -2, %2
  %488 = add i32 %487, %144
  %489 = add i32 %488, %106
  %490 = add i32 %489, %262
  %491 = add i32 %490, %250
  %492 = add i32 %491, %229
  %493 = add i32 %492, %220
  %494 = add i32 %493, %216
  %495 = add i32 %494, %208
  %496 = add i32 %495, %99
  %497 = add i32 %496, %132
  %498 = add i32 %497, %122
  %499 = add i32 %498, %112
  %500 = add i32 %499, %104
  %501 = add i32 %500, %55
  %502 = add i32 %501, %40
  %503 = add i32 %502, %313
  %504 = add i32 %503, %384
  %505 = add i32 %504, %285
  %506 = add i32 %505, %456
  %507 = add i32 %506, %438
  %508 = add i32 %507, %426
  %509 = add i32 %508, %424
  %510 = add i32 %509, %416
  %511 = add i32 %510, %392
  %512 = add i32 %511, %360
  %513 = add i32 %512, %353
  %514 = add i32 %513, %457
  %515 = add i32 %514, %451
  %516 = shl i32 %515, 1
  %517 = sub i32 1, %70
  %518 = add i32 %517, %196
  %519 = add i32 %518, %1
  %520 = sub i32 %519, %281
  %521 = add i32 %520, %2
  %522 = sub i32 %521, %9
  %523 = add i32 %522, %12
  %524 = sub i32 %523, %9
  %525 = add i32 %524, %244
  %526 = add i32 %525, %27
  %527 = sub i32 %526, %24
  %528 = add i32 %527, %26
  %529 = sub i32 %528, %47
  %530 = sub i32 %529, %52
  %531 = add i32 %530, %44
  %532 = sub i32 %531, %29
  %533 = add i32 %532, %80
  %534 = add i32 %533, %83
  %535 = sub i32 %534, %88
  %536 = sub i32 %535, %90
  %537 = sub i32 %536, %7
  %538 = add i32 %537, %101
  %539 = add i32 %538, %105
  %540 = sub i32 %539, %130
  %541 = add i32 %540, %131
  %542 = add i32 %541, %137
  %543 = sub i32 %542, %146
  %544 = add i32 %543, %153
  %545 = add i32 %544, %156
  %546 = add i32 %545, %157
  %547 = add i32 %546, %159
  %548 = sub i32 %547, %165
  %549 = add i32 %548, %170
  %550 = add i32 %549, %133
  %551 = add i32 %550, %200
  %552 = sub i32 %551, %201
  %553 = sub i32 %552, %214
  %554 = sub i32 %553, %221
  %555 = sub i32 %554, %13
  %556 = sub i32 %555, %223
  %557 = add i32 %556, %116
  %558 = add i32 %557, %269
  %559 = add i32 %558, %270
  %560 = add i32 %559, %3
  %561 = add i32 %560, %387
  %562 = sub i32 %561, %22
  %563 = add i32 %562, %28
  %564 = sub i32 %563, %30
  %565 = add i32 %564, %33
  %566 = add i32 %565, %34
  %567 = add i32 %566, %38
  %568 = sub i32 %567, %46
  %569 = sub i32 %568, %57
  %570 = add i32 %569, %64
  %571 = add i32 %570, %66
  %572 = sub i32 %571, %67
  %573 = add i32 %572, %73
  %574 = add i32 %573, %74
  %575 = add i32 %574, %75
  %576 = sub i32 %575, %76
  %577 = sub i32 %576, %79
  %578 = sub i32 %577, %81
  %579 = add i32 %578, %82
  %580 = sub i32 %579, %89
  %581 = add i32 %580, %96
  %582 = add i32 %581, %97
  %583 = sub i32 %582, %98
  %584 = add i32 %583, %102
  %585 = sub i32 %584, %103
  %586 = add i32 %585, %107
  %587 = add i32 %586, %108
  %588 = add i32 %587, %110
  %589 = add i32 %588, %111
  %590 = sub i32 %589, %113
  %591 = add i32 %590, %114
  %592 = sub i32 %591, %115
  %593 = sub i32 %592, %117
  %594 = sub i32 %593, %123
  %595 = sub i32 %594, %124
  %596 = sub i32 %595, %125
  %597 = add i32 %596, %129
  %598 = sub i32 %597, %134
  %599 = sub i32 %598, %135
  %600 = sub i32 %599, %136
  %601 = sub i32 %600, %139
  %602 = sub i32 %601, %141
  %603 = sub i32 %602, %145
  %604 = add i32 %603, %149
  %605 = add i32 %604, %150
  %606 = sub i32 %605, %154
  %607 = sub i32 %606, %119
  %608 = sub i32 %607, %155
  %609 = add i32 %608, %68
  %610 = add i32 %609, %160
  %611 = sub i32 %610, %162
  %612 = add i32 %611, %163
  %613 = add i32 %612, %164
  %614 = add i32 %613, %168
  %615 = sub i32 %614, %169
  %616 = add i32 %615, %171
  %617 = sub i32 %616, %172
  %618 = sub i32 %617, %173
  %619 = sub i32 %618, %175
  %620 = sub i32 %619, %179
  %621 = sub i32 %620, %180
  %622 = add i32 %621, %181
  %623 = sub i32 %622, %182
  %624 = add i32 %623, %183
  %625 = sub i32 %624, %184
  %626 = sub i32 %625, %185
  %627 = sub i32 %626, %186
  %628 = sub i32 %627, %191
  %629 = sub i32 %628, %192
  %630 = add i32 %629, %194
  %631 = sub i32 %630, %195
  %632 = add i32 %631, %197
  %633 = sub i32 %632, %198
  %634 = sub i32 %633, %199
  %635 = add i32 %634, %202
  %636 = add i32 %635, %203
  %637 = sub i32 %636, %204
  %638 = sub i32 %637, %207
  %639 = add i32 %638, %60
  %640 = add i32 %639, %209
  %641 = sub i32 %640, %211
  %642 = add i32 %641, %212
  %643 = sub i32 %642, %213
  %644 = sub i32 %643, %215
  %645 = add i32 %644, %217
  %646 = add i32 %645, %218
  %647 = add i32 %646, %219
  %648 = add i32 %647, %224
  %649 = add i32 %648, %225
  %650 = add i32 %649, %226
  %651 = sub i32 %650, %230
  %652 = add i32 %651, %231
  %653 = sub i32 %652, %232
  %654 = sub i32 %653, %233
  %655 = add i32 %654, %235
  %656 = add i32 %655, %240
  %657 = sub i32 %656, %241
  %658 = add i32 %657, %245
  %659 = sub i32 %658, %247
  %660 = add i32 %659, %248
  %661 = sub i32 %660, %252
  %662 = add i32 %661, %254
  %663 = sub i32 %662, %257
  %664 = add i32 %663, %258
  %665 = sub i32 %664, %242
  %666 = add i32 %665, %259
  %667 = sub i32 %666, %260
  %668 = sub i32 %667, %261
  %669 = add i32 %668, %263
  %670 = add i32 %669, %264
  %671 = add i32 %670, %265
  %672 = sub i32 %671, %266
  %673 = sub i32 %672, %267
  %674 = sub i32 %673, %271
  %675 = sub i32 %674, %272
  %676 = sub i32 %675, %273
  %677 = sub i32 %676, %274
  %678 = sub i32 %677, %275
  %679 = add i32 %678, %276
  %680 = add i32 %679, %277
  %681 = add i32 %680, %278
  %682 = sub i32 %681, %279
  %683 = add i32 %682, %280
  %684 = add i32 %683, %294
  %685 = sub i32 %684, %51
  %686 = sub i32 %685, %54
  %687 = add i32 %686, %69
  %688 = add i32 %687, %72
  %689 = sub i32 %688, %87
  %690 = sub i32 %689, %92
  %691 = sub i32 %690, %95
  %692 = sub i32 %691, %100
  %693 = sub i32 %692, %121
  %694 = sub i32 %693, %138
  %695 = sub i32 %694, %143
  %696 = add i32 %695, %148
  %697 = sub i32 %696, %152
  %698 = add i32 %697, %158
  %699 = sub i32 %698, %167
  %700 = add i32 %699, %176
  %701 = sub i32 %700, %178
  %702 = sub i32 %701, %188
  %703 = sub i32 %702, %190
  %704 = add i32 %703, %193
  %705 = add i32 %704, %206
  %706 = sub i32 %705, %228
  %707 = sub i32 %706, %234
  %708 = sub i32 %707, %237
  %709 = sub i32 %708, %239
  %710 = sub i32 %709, %243
  %711 = sub i32 %710, %246
  %712 = sub i32 %711, %249
  %713 = sub i32 %712, %256
  %714 = sub i32 %713, %268
  %715 = sub i32 %714, %283
  %716 = add i32 %715, %289
  %717 = add i32 %716, %291
  %718 = add i32 %717, %331
  %719 = sub i32 %718, %316
  %720 = sub i32 %719, %62
  %721 = sub i32 %720, %128
  %722 = add i32 %721, %318
  %723 = sub i32 %722, %332
  %724 = sub i32 %723, %333
  %725 = sub i32 %724, %354
  %726 = add i32 %725, %299
  %727 = add i32 %726, %365
  %728 = add i32 %727, %385
  %729 = sub i32 %728, %397
  %730 = sub i32 %729, %292
  %731 = add i32 %730, %296
  %732 = add i32 %731, %419
  %733 = sub i32 %732, %420
  %734 = sub i32 %733, %428
  %735 = sub i32 %734, %359
  %736 = add i32 %735, %377
  %737 = add i32 %736, %484
  %738 = add i32 %737, %486
  %739 = add i32 %738, %293
  %740 = add i32 %739, %297
  %741 = sub i32 %740, %300
  %742 = sub i32 %741, %308
  %743 = sub i32 %742, %311
  %744 = add i32 %743, %314
  %745 = sub i32 %744, %320
  %746 = add i32 %745, %327
  %747 = sub i32 %746, %328
  %748 = add i32 %747, %330
  %749 = sub i32 %748, %335
  %750 = sub i32 %749, %352
  %751 = add i32 %750, %358
  %752 = sub i32 %751, %367
  %753 = sub i32 %752, %368
  %754 = sub i32 %753, %374
  %755 = add i32 %754, %375
  %756 = add i32 %755, %376
  %757 = add i32 %756, %378
  %758 = add i32 %757, %381
  %759 = sub i32 %758, %386
  %760 = add i32 %759, %388
  %761 = add i32 %760, %389
  %762 = add i32 %761, %390
  %763 = add i32 %762, %391
  %764 = add i32 %763, %393
  %765 = sub i32 %764, %398
  %766 = sub i32 %765, %394
  %767 = add i32 %766, %399
  %768 = sub i32 %767, %402
  %769 = sub i32 %768, %404
  %770 = add i32 %769, %372
  %771 = add i32 %770, %408
  %772 = sub i32 %771, %409
  %773 = add i32 %772, %356
  %774 = sub i32 %773, %410
  %775 = add i32 %774, %414
  %776 = add i32 %775, %417
  %777 = sub i32 %776, %418
  %778 = sub i32 %777, %422
  %779 = sub i32 %778, %423
  %780 = add i32 %779, %425
  %781 = sub i32 %780, %427
  %782 = sub i32 %781, %429
  %783 = add i32 %782, %430
  %784 = add i32 %783, %431
  %785 = sub i32 %784, %432
  %786 = add i32 %785, %437
  %787 = add i32 %786, %439
  %788 = add i32 %787, %440
  %789 = add i32 %788, %445
  %790 = sub i32 %789, %446
  %791 = sub i32 %790, %447
  %792 = sub i32 %791, %448
  %793 = sub i32 %792, %362
  %794 = add i32 %793, %452
  %795 = sub i32 %794, %454
  %796 = sub i32 %795, %455
  %797 = sub i32 %796, %460
  %798 = add i32 %797, %465
  %799 = sub i32 %798, %305
  %800 = add i32 %799, %324
  %801 = add i32 %800, %343
  %802 = sub i32 %801, %345
  %803 = sub i32 %802, %349
  %804 = sub i32 %803, %351
  %805 = sub i32 %804, %357
  %806 = sub i32 %805, %364
  %807 = sub i32 %806, %370
  %808 = add i32 %807, %371
  %809 = add i32 %808, %373
  %810 = sub i32 %809, %383
  %811 = add i32 %810, %396
  %812 = add i32 %811, %403
  %813 = sub i32 %812, %406
  %814 = sub i32 %813, %412
  %815 = sub i32 %814, %413
  %816 = add i32 %815, %435
  %817 = sub i32 %816, %436
  %818 = add i32 %817, %442
  %819 = sub i32 %818, %444
  %820 = add i32 %819, %459
  %821 = add i32 %820, %462
  %822 = sub i32 %821, %467
  %823 = add i32 %822, %469
  %824 = sub i32 %823, %401
  %825 = add i32 %824, %483
  %826 = sub i32 %825, %338
  %827 = add i32 %826, %481
  %828 = add i32 %827, %478
  %829 = add i32 %828, %474
  %830 = add i32 %829, %516
  %831 = icmp eq i32 %18, %830
  %832 = select i1 %831, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %833 = tail call i32 @puts(i8* nonnull dereferenceable(1) %832)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
