digraph "DFG for'main' function" {
	Node0xe4b278[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe4b2f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe4b388[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xe4b3e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xe4b868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe4b948[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xe4ba48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe4bb08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xe4bbb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe4be18[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xe4bed8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe4c038[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe4c098[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xe51e60[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xe52068[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe521c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe522d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe52398[shape=record, label="  ret i32 0"];
	Node0xe4b278 -> Node0xe4b2f8;
	Node0xe4b2f8 -> Node0xe4b388;
	Node0xe4b388 -> Node0xe4b3e8;
	Node0xe4b3e8 -> Node0xe4b868;
	Node0xe4b868 -> Node0xe4b948;
	Node0xe4b948 -> Node0xe4ba48;
	Node0xe4ba48 -> Node0xe4bb08;
	Node0xe4bb08 -> Node0xe4bbb8;
	Node0xe4bbb8 -> Node0xe4be18;
	Node0xe4be18 -> Node0xe4bed8;
	Node0xe4bed8 -> Node0xe4c038;
	Node0xe4c038 -> Node0xe4c098;
	Node0xe4c098 -> Node0xe51e60;
	Node0xe51e60 -> Node0xe52068;
	Node0xe52068 -> Node0xe521c8;
	Node0xe521c8 -> Node0xe522d8;
	Node0xe522d8 -> Node0xe52398;
edge [color=red]
	Node0xe4b278 -> Node0xe4b3e8;
	Node0xe4b3e8 -> Node0xe4b868;
	Node0xe4b2f8 -> Node0xe4b948;
	Node0xe4b948 -> Node0xe4ba48;
	Node0xe4b388 -> Node0xe4bb08;
	Node0xe4bb08 -> Node0xe4bbb8;
	Node0xe4b278 -> Node0xe4be18;
	Node0xe4b2f8 -> Node0xe4be18;
	Node0xe4b388 -> Node0xe4be18;
	Node0xe4b278 -> Node0xe4bed8;
	Node0xe4b2f8 -> Node0xe4c038;
	Node0xe4b388 -> Node0xe4c098;
	Node0xe4bed8 -> Node0xe51e60;
	Node0xe4c038 -> Node0xe51e60;
	Node0xe4c098 -> Node0xe51e60;
	Node0xe4bb08 -> Node0xe52068;
	Node0xe4b948 -> Node0xe521c8;
	Node0xe4b3e8 -> Node0xe522d8;
}
