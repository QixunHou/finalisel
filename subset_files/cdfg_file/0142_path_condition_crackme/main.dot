digraph "DFG for'main' function" {
	Node0x6ee678[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x6ee6f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x6ee788[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x6ee7e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x6eec68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6eed48[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x6eee48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6eef08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x6eefb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6ef218[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x6ef2d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x6ef438[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x6ef498[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x6f6650[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x6f6838[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6f6998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6f6aa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6f6b68[shape=record, label="  ret i32 0"];
	Node0x6ee678 -> Node0x6ee6f8;
	Node0x6ee6f8 -> Node0x6ee788;
	Node0x6ee788 -> Node0x6ee7e8;
	Node0x6ee7e8 -> Node0x6eec68;
	Node0x6eec68 -> Node0x6eed48;
	Node0x6eed48 -> Node0x6eee48;
	Node0x6eee48 -> Node0x6eef08;
	Node0x6eef08 -> Node0x6eefb8;
	Node0x6eefb8 -> Node0x6ef218;
	Node0x6ef218 -> Node0x6ef2d8;
	Node0x6ef2d8 -> Node0x6ef438;
	Node0x6ef438 -> Node0x6ef498;
	Node0x6ef498 -> Node0x6f6650;
	Node0x6f6650 -> Node0x6f6838;
	Node0x6f6838 -> Node0x6f6998;
	Node0x6f6998 -> Node0x6f6aa8;
	Node0x6f6aa8 -> Node0x6f6b68;
edge [color=red]
	Node0x6ee678 -> Node0x6ee7e8;
	Node0x6ee7e8 -> Node0x6eec68;
	Node0x6ee6f8 -> Node0x6eed48;
	Node0x6eed48 -> Node0x6eee48;
	Node0x6ee788 -> Node0x6eef08;
	Node0x6eef08 -> Node0x6eefb8;
	Node0x6ee678 -> Node0x6ef218;
	Node0x6ee6f8 -> Node0x6ef218;
	Node0x6ee788 -> Node0x6ef218;
	Node0x6ee678 -> Node0x6ef2d8;
	Node0x6ee6f8 -> Node0x6ef438;
	Node0x6ee788 -> Node0x6ef498;
	Node0x6ef2d8 -> Node0x6f6650;
	Node0x6ef438 -> Node0x6f6650;
	Node0x6ef498 -> Node0x6f6650;
	Node0x6eef08 -> Node0x6f6838;
	Node0x6eed48 -> Node0x6f6998;
	Node0x6ee7e8 -> Node0x6f6aa8;
}
