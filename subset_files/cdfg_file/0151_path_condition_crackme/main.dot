digraph "DFG for'main' function" {
	Node0x1552ba8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1552c28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1552cb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1552d18[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1552dc8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x15531f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x15532d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x15533d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1553498[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1553548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1553608[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x15536b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x154db10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x15538b8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1554828[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1554e98[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1554ef8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1554f70[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1554fe0[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x1555050[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x15550c0[shape=record, label="  %17 = xor i32 %13, -1"];
	Node0x1555130[shape=record, label="  %18 = xor i32 %15, -1"];
	Node0x15551a0[shape=record, label="  %19 = add i32 %18, %16"];
	Node0x1555210[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x1555280[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x15552f0[shape=record, label="  %22 = and i32 %11, %14"];
	Node0x1555360[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x15553d0[shape=record, label="  %24 = shl i32 %21, 2"];
	Node0x1555440[shape=record, label="  %25 = xor i32 %24, -4"];
	Node0x15554b0[shape=record, label="  %26 = shl i32 %15, 2"];
	Node0x1555520[shape=record, label="  %27 = xor i32 %26, -4"];
	Node0x1555590[shape=record, label="  %28 = mul i32 %22, -6"];
	Node0x1555600[shape=record, label="  %29 = and i32 %12, %11"];
	Node0x1555670[shape=record, label="  %30 = mul i32 %29, -5"];
	Node0x15556e0[shape=record, label="  %31 = and i32 %13, %10"];
	Node0x1555750[shape=record, label="  %32 = xor i32 %31, -1"];
	Node0x15557c0[shape=record, label="  %33 = or i32 %13, %16"];
	Node0x1555830[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x15558a0[shape=record, label="  %35 = xor i32 %34, -2"];
	Node0x1555910[shape=record, label="  %36 = shl i32 %13, 1"];
	Node0x1555980[shape=record, label="  %37 = add i32 %11, -3"];
	Node0x15559f0[shape=record, label="  %38 = sub i32 %37, %12"];
	Node0x1555a60[shape=record, label="  %39 = add i32 %38, %20"];
	Node0x1555ad0[shape=record, label="  %40 = add i32 %39, %21"];
	Node0x1555b40[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x1555bb0[shape=record, label="  %42 = add i32 %41, %17"];
	Node0x1555c20[shape=record, label="  %43 = sub i32 %42, %13"];
	Node0x1555c90[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x1555d00[shape=record, label="  %45 = add i32 %44, %30"];
	Node0x1555d70[shape=record, label="  %46 = add i32 %45, %32"];
	Node0x1555de0[shape=record, label="  %47 = sub i32 %46, %33"];
	Node0x1555e50[shape=record, label="  %48 = add i32 %47, %36"];
	Node0x1555ec0[shape=record, label="  %49 = sub i32 %48, %25"];
	Node0x1555f30[shape=record, label="  %50 = sub i32 %49, %27"];
	Node0x1555fa0[shape=record, label="  %51 = sub i32 %50, %35"];
	Node0x1556010[shape=record, label="  %52 = icmp eq i32 %19, %51"];
	Node0x14f28b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x15560a0[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x1556348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x15564a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x15565b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x15566c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1556788[shape=record, label="  ret i32 0"];
	Node0x1552ba8 -> Node0x1552c28;
	Node0x1552c28 -> Node0x1552cb8;
	Node0x1552cb8 -> Node0x1552d18;
	Node0x1552d18 -> Node0x1552dc8;
	Node0x1552dc8 -> Node0x15531f8;
	Node0x15531f8 -> Node0x15532d8;
	Node0x15532d8 -> Node0x15533d8;
	Node0x15533d8 -> Node0x1553498;
	Node0x1553498 -> Node0x1553548;
	Node0x1553548 -> Node0x1553608;
	Node0x1553608 -> Node0x15536b8;
	Node0x15536b8 -> Node0x154db10;
	Node0x154db10 -> Node0x15538b8;
	Node0x15538b8 -> Node0x1554828;
	Node0x1554828 -> Node0x1554e98;
	Node0x1554e98 -> Node0x1554ef8;
	Node0x1554ef8 -> Node0x1554f70;
	Node0x1554f70 -> Node0x1554fe0;
	Node0x1554fe0 -> Node0x1555050;
	Node0x1555050 -> Node0x15550c0;
	Node0x15550c0 -> Node0x1555130;
	Node0x1555130 -> Node0x15551a0;
	Node0x15551a0 -> Node0x1555210;
	Node0x1555210 -> Node0x1555280;
	Node0x1555280 -> Node0x15552f0;
	Node0x15552f0 -> Node0x1555360;
	Node0x1555360 -> Node0x15553d0;
	Node0x15553d0 -> Node0x1555440;
	Node0x1555440 -> Node0x15554b0;
	Node0x15554b0 -> Node0x1555520;
	Node0x1555520 -> Node0x1555590;
	Node0x1555590 -> Node0x1555600;
	Node0x1555600 -> Node0x1555670;
	Node0x1555670 -> Node0x15556e0;
	Node0x15556e0 -> Node0x1555750;
	Node0x1555750 -> Node0x15557c0;
	Node0x15557c0 -> Node0x1555830;
	Node0x1555830 -> Node0x15558a0;
	Node0x15558a0 -> Node0x1555910;
	Node0x1555910 -> Node0x1555980;
	Node0x1555980 -> Node0x15559f0;
	Node0x15559f0 -> Node0x1555a60;
	Node0x1555a60 -> Node0x1555ad0;
	Node0x1555ad0 -> Node0x1555b40;
	Node0x1555b40 -> Node0x1555bb0;
	Node0x1555bb0 -> Node0x1555c20;
	Node0x1555c20 -> Node0x1555c90;
	Node0x1555c90 -> Node0x1555d00;
	Node0x1555d00 -> Node0x1555d70;
	Node0x1555d70 -> Node0x1555de0;
	Node0x1555de0 -> Node0x1555e50;
	Node0x1555e50 -> Node0x1555ec0;
	Node0x1555ec0 -> Node0x1555f30;
	Node0x1555f30 -> Node0x1555fa0;
	Node0x1555fa0 -> Node0x1556010;
	Node0x1556010 -> Node0x14f28b8;
	Node0x14f28b8 -> Node0x15560a0;
	Node0x15560a0 -> Node0x1556348;
	Node0x1556348 -> Node0x15564a8;
	Node0x15564a8 -> Node0x15565b8;
	Node0x15565b8 -> Node0x15566c8;
	Node0x15566c8 -> Node0x1556788;
edge [color=red]
	Node0x1552ba8 -> Node0x1552dc8;
	Node0x1552dc8 -> Node0x15531f8;
	Node0x1552c28 -> Node0x15532d8;
	Node0x15532d8 -> Node0x15533d8;
	Node0x1552cb8 -> Node0x1553498;
	Node0x1553498 -> Node0x1553548;
	Node0x1552d18 -> Node0x1553608;
	Node0x1553608 -> Node0x15536b8;
	Node0x1552ba8 -> Node0x154db10;
	Node0x1552c28 -> Node0x154db10;
	Node0x1552cb8 -> Node0x154db10;
	Node0x1552d18 -> Node0x154db10;
	Node0x1552ba8 -> Node0x15538b8;
	Node0x1552c28 -> Node0x1554828;
	Node0x1552cb8 -> Node0x1554e98;
	Node0x1552d18 -> Node0x1554ef8;
	Node0x1554e98 -> Node0x1554f70;
	Node0x1554828 -> Node0x1554fe0;
	Node0x1554f70 -> Node0x1554fe0;
	Node0x15538b8 -> Node0x1555050;
	Node0x1554ef8 -> Node0x15550c0;
	Node0x1554fe0 -> Node0x1555130;
	Node0x1555130 -> Node0x15551a0;
	Node0x1555050 -> Node0x15551a0;
	Node0x1554e98 -> Node0x1555210;
	Node0x1554828 -> Node0x1555210;
	Node0x1554e98 -> Node0x1555280;
	Node0x1554828 -> Node0x1555280;
	Node0x1554828 -> Node0x15552f0;
	Node0x1554f70 -> Node0x15552f0;
	Node0x15552f0 -> Node0x1555360;
	Node0x1555280 -> Node0x15553d0;
	Node0x15553d0 -> Node0x1555440;
	Node0x1554fe0 -> Node0x15554b0;
	Node0x15554b0 -> Node0x1555520;
	Node0x15552f0 -> Node0x1555590;
	Node0x1554e98 -> Node0x1555600;
	Node0x1554828 -> Node0x1555600;
	Node0x1555600 -> Node0x1555670;
	Node0x1554ef8 -> Node0x15556e0;
	Node0x15538b8 -> Node0x15556e0;
	Node0x15556e0 -> Node0x1555750;
	Node0x1554ef8 -> Node0x15557c0;
	Node0x1555050 -> Node0x15557c0;
	Node0x15557c0 -> Node0x1555830;
	Node0x1555830 -> Node0x15558a0;
	Node0x1554ef8 -> Node0x1555910;
	Node0x1554828 -> Node0x1555980;
	Node0x1555980 -> Node0x15559f0;
	Node0x1554e98 -> Node0x15559f0;
	Node0x15559f0 -> Node0x1555a60;
	Node0x1555210 -> Node0x1555a60;
	Node0x1555a60 -> Node0x1555ad0;
	Node0x1555280 -> Node0x1555ad0;
	Node0x1555ad0 -> Node0x1555b40;
	Node0x1555360 -> Node0x1555b40;
	Node0x1555b40 -> Node0x1555bb0;
	Node0x15550c0 -> Node0x1555bb0;
	Node0x1555bb0 -> Node0x1555c20;
	Node0x1554ef8 -> Node0x1555c20;
	Node0x1555c20 -> Node0x1555c90;
	Node0x1555590 -> Node0x1555c90;
	Node0x1555c90 -> Node0x1555d00;
	Node0x1555670 -> Node0x1555d00;
	Node0x1555d00 -> Node0x1555d70;
	Node0x1555750 -> Node0x1555d70;
	Node0x1555d70 -> Node0x1555de0;
	Node0x15557c0 -> Node0x1555de0;
	Node0x1555de0 -> Node0x1555e50;
	Node0x1555910 -> Node0x1555e50;
	Node0x1555e50 -> Node0x1555ec0;
	Node0x1555440 -> Node0x1555ec0;
	Node0x1555ec0 -> Node0x1555f30;
	Node0x1555520 -> Node0x1555f30;
	Node0x1555f30 -> Node0x1555fa0;
	Node0x15558a0 -> Node0x1555fa0;
	Node0x15551a0 -> Node0x1556010;
	Node0x1555fa0 -> Node0x1556010;
	Node0x1556010 -> Node0x14f28b8;
	Node0x14f28b8 -> Node0x15560a0;
	Node0x1553608 -> Node0x1556348;
	Node0x1553498 -> Node0x15564a8;
	Node0x15532d8 -> Node0x15565b8;
	Node0x1552dc8 -> Node0x15566c8;
}
