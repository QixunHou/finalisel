digraph "DFG for'main' function" {
	Node0xe53f28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe53fa8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe54038[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xe54498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xe54578[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xe54698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe548d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xe54988[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe558f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe55f80[shape=record, label="  %8 = or i32 %7, %6"];
	Node0xe55ff0[shape=record, label="  %9 = sub i32 0, %8"];
	Node0xe56060[shape=record, label="  %10 = mul i32 %7, 5"];
	Node0xe560d0[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0xe56140[shape=record, label="  %12 = or i32 %6, %11"];
	Node0xe561b0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xe56220[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0xe56290[shape=record, label="  %15 = xor i32 %6, -1"];
	Node0xe56300[shape=record, label="  %16 = or i32 %7, %15"];
	Node0xe56370[shape=record, label="  %17 = xor i32 %7, %6"];
	Node0xe563e0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0xe56450[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0xe564c0[shape=record, label="  %20 = xor i32 %8, -1"];
	Node0xe56530[shape=record, label="  %21 = mul i32 %20, -3"];
	Node0xe565a0[shape=record, label="  %22 = shl i32 %12, 3"];
	Node0xe56610[shape=record, label="  %23 = xor i32 %22, -8"];
	Node0xe56680[shape=record, label="  %24 = mul i32 %13, -7"];
	Node0xe566f0[shape=record, label="  %25 = add i32 %12, %6"];
	Node0xe56760[shape=record, label="  %26 = sub i32 %10, %25"];
	Node0xe567d0[shape=record, label="  %27 = add i32 %26, %14"];
	Node0xe56840[shape=record, label="  %28 = add i32 %27, %16"];
	Node0xe568b0[shape=record, label="  %29 = add i32 %28, %21"];
	Node0xe56920[shape=record, label="  %30 = add i32 %29, %24"];
	Node0xe56990[shape=record, label="  %31 = add i32 %30, %19"];
	Node0xe56a00[shape=record, label="  %32 = sub i32 %31, %23"];
	Node0xe56c80[shape=record, label="  %33 = icmp eq i32 %32, %9"];
	Node0xdf49d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe56d10[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xe56f68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe570c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xe57188[shape=record, label="  ret i32 0"];
	Node0xe53f28 -> Node0xe53fa8;
	Node0xe53fa8 -> Node0xe54038;
	Node0xe54038 -> Node0xe54498;
	Node0xe54498 -> Node0xe54578;
	Node0xe54578 -> Node0xe54698;
	Node0xe54698 -> Node0xe548d0;
	Node0xe548d0 -> Node0xe54988;
	Node0xe54988 -> Node0xe558f8;
	Node0xe558f8 -> Node0xe55f80;
	Node0xe55f80 -> Node0xe55ff0;
	Node0xe55ff0 -> Node0xe56060;
	Node0xe56060 -> Node0xe560d0;
	Node0xe560d0 -> Node0xe56140;
	Node0xe56140 -> Node0xe561b0;
	Node0xe561b0 -> Node0xe56220;
	Node0xe56220 -> Node0xe56290;
	Node0xe56290 -> Node0xe56300;
	Node0xe56300 -> Node0xe56370;
	Node0xe56370 -> Node0xe563e0;
	Node0xe563e0 -> Node0xe56450;
	Node0xe56450 -> Node0xe564c0;
	Node0xe564c0 -> Node0xe56530;
	Node0xe56530 -> Node0xe565a0;
	Node0xe565a0 -> Node0xe56610;
	Node0xe56610 -> Node0xe56680;
	Node0xe56680 -> Node0xe566f0;
	Node0xe566f0 -> Node0xe56760;
	Node0xe56760 -> Node0xe567d0;
	Node0xe567d0 -> Node0xe56840;
	Node0xe56840 -> Node0xe568b0;
	Node0xe568b0 -> Node0xe56920;
	Node0xe56920 -> Node0xe56990;
	Node0xe56990 -> Node0xe56a00;
	Node0xe56a00 -> Node0xe56c80;
	Node0xe56c80 -> Node0xdf49d8;
	Node0xdf49d8 -> Node0xe56d10;
	Node0xe56d10 -> Node0xe56f68;
	Node0xe56f68 -> Node0xe570c8;
	Node0xe570c8 -> Node0xe57188;
edge [color=red]
	Node0xe53f28 -> Node0xe54038;
	Node0xe54038 -> Node0xe54498;
	Node0xe53fa8 -> Node0xe54578;
	Node0xe54578 -> Node0xe54698;
	Node0xe53f28 -> Node0xe548d0;
	Node0xe53fa8 -> Node0xe548d0;
	Node0xe53f28 -> Node0xe54988;
	Node0xe53fa8 -> Node0xe558f8;
	Node0xe558f8 -> Node0xe55f80;
	Node0xe54988 -> Node0xe55f80;
	Node0xe55f80 -> Node0xe55ff0;
	Node0xe558f8 -> Node0xe56060;
	Node0xe558f8 -> Node0xe560d0;
	Node0xe54988 -> Node0xe56140;
	Node0xe560d0 -> Node0xe56140;
	Node0xe558f8 -> Node0xe561b0;
	Node0xe54988 -> Node0xe561b0;
	Node0xe561b0 -> Node0xe56220;
	Node0xe54988 -> Node0xe56290;
	Node0xe558f8 -> Node0xe56300;
	Node0xe56290 -> Node0xe56300;
	Node0xe558f8 -> Node0xe56370;
	Node0xe54988 -> Node0xe56370;
	Node0xe56370 -> Node0xe563e0;
	Node0xe563e0 -> Node0xe56450;
	Node0xe55f80 -> Node0xe564c0;
	Node0xe564c0 -> Node0xe56530;
	Node0xe56140 -> Node0xe565a0;
	Node0xe565a0 -> Node0xe56610;
	Node0xe561b0 -> Node0xe56680;
	Node0xe56140 -> Node0xe566f0;
	Node0xe54988 -> Node0xe566f0;
	Node0xe56060 -> Node0xe56760;
	Node0xe566f0 -> Node0xe56760;
	Node0xe56760 -> Node0xe567d0;
	Node0xe56220 -> Node0xe567d0;
	Node0xe567d0 -> Node0xe56840;
	Node0xe56300 -> Node0xe56840;
	Node0xe56840 -> Node0xe568b0;
	Node0xe56530 -> Node0xe568b0;
	Node0xe568b0 -> Node0xe56920;
	Node0xe56680 -> Node0xe56920;
	Node0xe56920 -> Node0xe56990;
	Node0xe56450 -> Node0xe56990;
	Node0xe56990 -> Node0xe56a00;
	Node0xe56610 -> Node0xe56a00;
	Node0xe56a00 -> Node0xe56c80;
	Node0xe55ff0 -> Node0xe56c80;
	Node0xe56c80 -> Node0xdf49d8;
	Node0xdf49d8 -> Node0xe56d10;
	Node0xe54578 -> Node0xe56f68;
	Node0xe54038 -> Node0xe570c8;
}
