digraph "DFG for'main' function" {
	Node0x6f4898[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x6f4918[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x6f49a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x6f4a08[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x6f4e88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6f4f68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x6f5068[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6f5128[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x6f51d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6f5438[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x6f54f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x6f5658[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x6f56b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x6f8770[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x6f8978[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6f8ad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6f8be8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6f8ca8[shape=record, label="  ret i32 0"];
	Node0x6f4898 -> Node0x6f4918;
	Node0x6f4918 -> Node0x6f49a8;
	Node0x6f49a8 -> Node0x6f4a08;
	Node0x6f4a08 -> Node0x6f4e88;
	Node0x6f4e88 -> Node0x6f4f68;
	Node0x6f4f68 -> Node0x6f5068;
	Node0x6f5068 -> Node0x6f5128;
	Node0x6f5128 -> Node0x6f51d8;
	Node0x6f51d8 -> Node0x6f5438;
	Node0x6f5438 -> Node0x6f54f8;
	Node0x6f54f8 -> Node0x6f5658;
	Node0x6f5658 -> Node0x6f56b8;
	Node0x6f56b8 -> Node0x6f8770;
	Node0x6f8770 -> Node0x6f8978;
	Node0x6f8978 -> Node0x6f8ad8;
	Node0x6f8ad8 -> Node0x6f8be8;
	Node0x6f8be8 -> Node0x6f8ca8;
edge [color=red]
	Node0x6f4898 -> Node0x6f4a08;
	Node0x6f4a08 -> Node0x6f4e88;
	Node0x6f4918 -> Node0x6f4f68;
	Node0x6f4f68 -> Node0x6f5068;
	Node0x6f49a8 -> Node0x6f5128;
	Node0x6f5128 -> Node0x6f51d8;
	Node0x6f4898 -> Node0x6f5438;
	Node0x6f4918 -> Node0x6f5438;
	Node0x6f49a8 -> Node0x6f5438;
	Node0x6f4898 -> Node0x6f54f8;
	Node0x6f4918 -> Node0x6f5658;
	Node0x6f49a8 -> Node0x6f56b8;
	Node0x6f54f8 -> Node0x6f8770;
	Node0x6f5658 -> Node0x6f8770;
	Node0x6f56b8 -> Node0x6f8770;
	Node0x6f5128 -> Node0x6f8978;
	Node0x6f4f68 -> Node0x6f8ad8;
	Node0x6f4a08 -> Node0x6f8be8;
}
