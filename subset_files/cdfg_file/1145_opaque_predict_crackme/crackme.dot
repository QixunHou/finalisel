digraph "DFG for'crackme' function" {
	Node0x1c500c0[shape=record, label="  %5 = shl i32 %2, 1"];
	Node0x1c50160[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x1c501d0[shape=record, label="  %7 = or i32 %6, %3"];
	Node0x1c50240[shape=record, label="  %8 = add i32 %7, %5"];
	Node0x1c502b0[shape=record, label="  %9 = xor i32 %1, -1"];
	Node0x1c50320[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x1c50390[shape=record, label="  %11 = or i32 %10, %1"];
	Node0x1c50400[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x1c50470[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1c50510[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1c50580[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x1c505f0[shape=record, label="  %16 = xor i32 %11, -1"];
	Node0x1c50660[shape=record, label="  %17 = xor i32 %3, %0"];
	Node0x1c506d0[shape=record, label="  %18 = and i32 %6, %3"];
	Node0x1c50740[shape=record, label="  %19 = and i32 %3, %0"];
	Node0x1c507b0[shape=record, label="  %20 = or i32 %3, %0"];
	Node0x1c50820[shape=record, label="  %21 = shl i32 %17, 1"];
	Node0x1c50890[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x1c50900[shape=record, label="  %23 = shl i32 %20, 1"];
	Node0x1c50970[shape=record, label="  %24 = sub i32 %16, %18"];
	Node0x1c509e0[shape=record, label="  %25 = sub i32 %24, %19"];
	Node0x1c50a80[shape=record, label="  %26 = mul i32 %25, 3"];
	Node0x1c50af0[shape=record, label="  %27 = sub i32 3, %0"];
	Node0x1c50b60[shape=record, label="  %28 = add i32 %27, %9"];
	Node0x1c50bd0[shape=record, label="  %29 = add i32 %28, %10"];
	Node0x1c50c40[shape=record, label="  %30 = add i32 %29, %11"];
	Node0x1c50cb0[shape=record, label="  %31 = add i32 %30, %15"];
	Node0x1c50d20[shape=record, label="  %32 = add i32 %31, %12"];
	Node0x1c50fa0[shape=record, label="  %33 = add i32 %32, %3"];
	Node0x1c51010[shape=record, label="  %34 = add i32 %33, %17"];
	Node0x1c51080[shape=record, label="  %35 = add i32 %34, %18"];
	Node0x1c510f0[shape=record, label="  %36 = add i32 %35, %19"];
	Node0x1c51160[shape=record, label="  %37 = add i32 %36, %7"];
	Node0x1c511d0[shape=record, label="  %38 = sub i32 %37, %14"];
	Node0x1c51240[shape=record, label="  %39 = add i32 %38, %23"];
	Node0x1c512b0[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x1c51320[shape=record, label="  %41 = add i32 %40, %26"];
	Node0x1c51390[shape=record, label="  %42 = icmp eq i32 %8, %41"];
	Node0x1bf0268[shape=record, label="  %43 = select i1 %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c51830[shape=record, label="  %44 = tail call i32 @puts(i8* nonnull dereferenceable(1) %43)"];
	Node0x1c51880[shape=record, label="  ret void"];
	Node0x1c500c0 -> Node0x1c50160;
	Node0x1c50160 -> Node0x1c501d0;
	Node0x1c501d0 -> Node0x1c50240;
	Node0x1c50240 -> Node0x1c502b0;
	Node0x1c502b0 -> Node0x1c50320;
	Node0x1c50320 -> Node0x1c50390;
	Node0x1c50390 -> Node0x1c50400;
	Node0x1c50400 -> Node0x1c50470;
	Node0x1c50470 -> Node0x1c50510;
	Node0x1c50510 -> Node0x1c50580;
	Node0x1c50580 -> Node0x1c505f0;
	Node0x1c505f0 -> Node0x1c50660;
	Node0x1c50660 -> Node0x1c506d0;
	Node0x1c506d0 -> Node0x1c50740;
	Node0x1c50740 -> Node0x1c507b0;
	Node0x1c507b0 -> Node0x1c50820;
	Node0x1c50820 -> Node0x1c50890;
	Node0x1c50890 -> Node0x1c50900;
	Node0x1c50900 -> Node0x1c50970;
	Node0x1c50970 -> Node0x1c509e0;
	Node0x1c509e0 -> Node0x1c50a80;
	Node0x1c50a80 -> Node0x1c50af0;
	Node0x1c50af0 -> Node0x1c50b60;
	Node0x1c50b60 -> Node0x1c50bd0;
	Node0x1c50bd0 -> Node0x1c50c40;
	Node0x1c50c40 -> Node0x1c50cb0;
	Node0x1c50cb0 -> Node0x1c50d20;
	Node0x1c50d20 -> Node0x1c50fa0;
	Node0x1c50fa0 -> Node0x1c51010;
	Node0x1c51010 -> Node0x1c51080;
	Node0x1c51080 -> Node0x1c510f0;
	Node0x1c510f0 -> Node0x1c51160;
	Node0x1c51160 -> Node0x1c511d0;
	Node0x1c511d0 -> Node0x1c51240;
	Node0x1c51240 -> Node0x1c512b0;
	Node0x1c512b0 -> Node0x1c51320;
	Node0x1c51320 -> Node0x1c51390;
	Node0x1c51390 -> Node0x1bf0268;
	Node0x1bf0268 -> Node0x1c51830;
	Node0x1c51830 -> Node0x1c51880;
edge [color=red]
	Node0x1c50160 -> Node0x1c501d0;
	Node0x1c501d0 -> Node0x1c50240;
	Node0x1c500c0 -> Node0x1c50240;
	Node0x1c50320 -> Node0x1c50390;
	Node0x1c50400 -> Node0x1c50470;
	Node0x1c50470 -> Node0x1c50510;
	Node0x1c50390 -> Node0x1c505f0;
	Node0x1c50160 -> Node0x1c506d0;
	Node0x1c50660 -> Node0x1c50820;
	Node0x1c50820 -> Node0x1c50890;
	Node0x1c507b0 -> Node0x1c50900;
	Node0x1c505f0 -> Node0x1c50970;
	Node0x1c506d0 -> Node0x1c50970;
	Node0x1c50970 -> Node0x1c509e0;
	Node0x1c50740 -> Node0x1c509e0;
	Node0x1c509e0 -> Node0x1c50a80;
	Node0x1c50af0 -> Node0x1c50b60;
	Node0x1c502b0 -> Node0x1c50b60;
	Node0x1c50b60 -> Node0x1c50bd0;
	Node0x1c50320 -> Node0x1c50bd0;
	Node0x1c50bd0 -> Node0x1c50c40;
	Node0x1c50390 -> Node0x1c50c40;
	Node0x1c50c40 -> Node0x1c50cb0;
	Node0x1c50580 -> Node0x1c50cb0;
	Node0x1c50cb0 -> Node0x1c50d20;
	Node0x1c50400 -> Node0x1c50d20;
	Node0x1c50d20 -> Node0x1c50fa0;
	Node0x1c50fa0 -> Node0x1c51010;
	Node0x1c50660 -> Node0x1c51010;
	Node0x1c51010 -> Node0x1c51080;
	Node0x1c506d0 -> Node0x1c51080;
	Node0x1c51080 -> Node0x1c510f0;
	Node0x1c50740 -> Node0x1c510f0;
	Node0x1c510f0 -> Node0x1c51160;
	Node0x1c501d0 -> Node0x1c51160;
	Node0x1c51160 -> Node0x1c511d0;
	Node0x1c50510 -> Node0x1c511d0;
	Node0x1c511d0 -> Node0x1c51240;
	Node0x1c50900 -> Node0x1c51240;
	Node0x1c51240 -> Node0x1c512b0;
	Node0x1c50890 -> Node0x1c512b0;
	Node0x1c512b0 -> Node0x1c51320;
	Node0x1c50a80 -> Node0x1c51320;
	Node0x1c50240 -> Node0x1c51390;
	Node0x1c51320 -> Node0x1c51390;
	Node0x1c51390 -> Node0x1bf0268;
	Node0x1bf0268 -> Node0x1c51830;
}
