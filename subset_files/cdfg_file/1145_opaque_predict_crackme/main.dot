digraph "DFG for'main' function" {
	Node0x1c51a48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c51ac8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c51b58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c51bb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1c51c68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1c52098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c52178[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1c52278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c52338[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1c523e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c524a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1c52558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c4cae0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1c52758[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c536c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c53d38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c53d98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1c53e10[shape=record, label="  %14 = shl i32 %12, 1"];
	Node0x1c53e80[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x1c53ef0[shape=record, label="  %16 = or i32 %13, %15"];
	Node0x1c53f60[shape=record, label="  %17 = add i32 %16, %14"];
	Node0x1c53fd0[shape=record, label="  %18 = xor i32 %11, -1"];
	Node0x1c54040[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x1c540b0[shape=record, label="  %20 = or i32 %11, %19"];
	Node0x1c54120[shape=record, label="  %21 = and i32 %12, %11"];
	Node0x1c54190[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x1c54200[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x1c54270[shape=record, label="  %24 = or i32 %12, %11"];
	Node0x1c542e0[shape=record, label="  %25 = xor i32 %20, -1"];
	Node0x1c54350[shape=record, label="  %26 = xor i32 %13, %10"];
	Node0x1c543c0[shape=record, label="  %27 = and i32 %13, %15"];
	Node0x1c54430[shape=record, label="  %28 = and i32 %13, %10"];
	Node0x1c544a0[shape=record, label="  %29 = or i32 %13, %10"];
	Node0x1c54510[shape=record, label="  %30 = shl i32 %26, 1"];
	Node0x1c54580[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x1c545f0[shape=record, label="  %32 = shl i32 %29, 1"];
	Node0x1c54660[shape=record, label="  %33 = sub i32 %25, %27"];
	Node0x1c546d0[shape=record, label="  %34 = sub i32 %33, %28"];
	Node0x1c54740[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x1c547b0[shape=record, label="  %36 = sub i32 3, %10"];
	Node0x1c54820[shape=record, label="  %37 = add i32 %36, %18"];
	Node0x1c54890[shape=record, label="  %38 = add i32 %37, %19"];
	Node0x1c54900[shape=record, label="  %39 = add i32 %38, %20"];
	Node0x1c54970[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x1c549e0[shape=record, label="  %41 = add i32 %40, %21"];
	Node0x1c54a50[shape=record, label="  %42 = add i32 %41, %13"];
	Node0x1c54ac0[shape=record, label="  %43 = add i32 %42, %26"];
	Node0x1c54b30[shape=record, label="  %44 = add i32 %43, %27"];
	Node0x1c54ba0[shape=record, label="  %45 = add i32 %44, %28"];
	Node0x1c54c10[shape=record, label="  %46 = add i32 %45, %16"];
	Node0x1c54c80[shape=record, label="  %47 = sub i32 %46, %23"];
	Node0x1c54cf0[shape=record, label="  %48 = add i32 %47, %32"];
	Node0x1c54d60[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x1c54dd0[shape=record, label="  %50 = add i32 %49, %35"];
	Node0x1c54e40[shape=record, label="  %51 = icmp eq i32 %17, %50"];
	Node0x1bf18b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c54ed0[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0x1c55178[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c552d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c553e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c554f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c555b8[shape=record, label="  ret i32 0"];
	Node0x1c51a48 -> Node0x1c51ac8;
	Node0x1c51ac8 -> Node0x1c51b58;
	Node0x1c51b58 -> Node0x1c51bb8;
	Node0x1c51bb8 -> Node0x1c51c68;
	Node0x1c51c68 -> Node0x1c52098;
	Node0x1c52098 -> Node0x1c52178;
	Node0x1c52178 -> Node0x1c52278;
	Node0x1c52278 -> Node0x1c52338;
	Node0x1c52338 -> Node0x1c523e8;
	Node0x1c523e8 -> Node0x1c524a8;
	Node0x1c524a8 -> Node0x1c52558;
	Node0x1c52558 -> Node0x1c4cae0;
	Node0x1c4cae0 -> Node0x1c52758;
	Node0x1c52758 -> Node0x1c536c8;
	Node0x1c536c8 -> Node0x1c53d38;
	Node0x1c53d38 -> Node0x1c53d98;
	Node0x1c53d98 -> Node0x1c53e10;
	Node0x1c53e10 -> Node0x1c53e80;
	Node0x1c53e80 -> Node0x1c53ef0;
	Node0x1c53ef0 -> Node0x1c53f60;
	Node0x1c53f60 -> Node0x1c53fd0;
	Node0x1c53fd0 -> Node0x1c54040;
	Node0x1c54040 -> Node0x1c540b0;
	Node0x1c540b0 -> Node0x1c54120;
	Node0x1c54120 -> Node0x1c54190;
	Node0x1c54190 -> Node0x1c54200;
	Node0x1c54200 -> Node0x1c54270;
	Node0x1c54270 -> Node0x1c542e0;
	Node0x1c542e0 -> Node0x1c54350;
	Node0x1c54350 -> Node0x1c543c0;
	Node0x1c543c0 -> Node0x1c54430;
	Node0x1c54430 -> Node0x1c544a0;
	Node0x1c544a0 -> Node0x1c54510;
	Node0x1c54510 -> Node0x1c54580;
	Node0x1c54580 -> Node0x1c545f0;
	Node0x1c545f0 -> Node0x1c54660;
	Node0x1c54660 -> Node0x1c546d0;
	Node0x1c546d0 -> Node0x1c54740;
	Node0x1c54740 -> Node0x1c547b0;
	Node0x1c547b0 -> Node0x1c54820;
	Node0x1c54820 -> Node0x1c54890;
	Node0x1c54890 -> Node0x1c54900;
	Node0x1c54900 -> Node0x1c54970;
	Node0x1c54970 -> Node0x1c549e0;
	Node0x1c549e0 -> Node0x1c54a50;
	Node0x1c54a50 -> Node0x1c54ac0;
	Node0x1c54ac0 -> Node0x1c54b30;
	Node0x1c54b30 -> Node0x1c54ba0;
	Node0x1c54ba0 -> Node0x1c54c10;
	Node0x1c54c10 -> Node0x1c54c80;
	Node0x1c54c80 -> Node0x1c54cf0;
	Node0x1c54cf0 -> Node0x1c54d60;
	Node0x1c54d60 -> Node0x1c54dd0;
	Node0x1c54dd0 -> Node0x1c54e40;
	Node0x1c54e40 -> Node0x1bf18b8;
	Node0x1bf18b8 -> Node0x1c54ed0;
	Node0x1c54ed0 -> Node0x1c55178;
	Node0x1c55178 -> Node0x1c552d8;
	Node0x1c552d8 -> Node0x1c553e8;
	Node0x1c553e8 -> Node0x1c554f8;
	Node0x1c554f8 -> Node0x1c555b8;
edge [color=red]
	Node0x1c51a48 -> Node0x1c51c68;
	Node0x1c51c68 -> Node0x1c52098;
	Node0x1c51ac8 -> Node0x1c52178;
	Node0x1c52178 -> Node0x1c52278;
	Node0x1c51b58 -> Node0x1c52338;
	Node0x1c52338 -> Node0x1c523e8;
	Node0x1c51bb8 -> Node0x1c524a8;
	Node0x1c524a8 -> Node0x1c52558;
	Node0x1c51a48 -> Node0x1c4cae0;
	Node0x1c51ac8 -> Node0x1c4cae0;
	Node0x1c51b58 -> Node0x1c4cae0;
	Node0x1c51bb8 -> Node0x1c4cae0;
	Node0x1c51a48 -> Node0x1c52758;
	Node0x1c51ac8 -> Node0x1c536c8;
	Node0x1c51b58 -> Node0x1c53d38;
	Node0x1c51bb8 -> Node0x1c53d98;
	Node0x1c53d38 -> Node0x1c53e10;
	Node0x1c52758 -> Node0x1c53e80;
	Node0x1c53d98 -> Node0x1c53ef0;
	Node0x1c53e80 -> Node0x1c53ef0;
	Node0x1c53ef0 -> Node0x1c53f60;
	Node0x1c53e10 -> Node0x1c53f60;
	Node0x1c536c8 -> Node0x1c53fd0;
	Node0x1c53d38 -> Node0x1c54040;
	Node0x1c536c8 -> Node0x1c540b0;
	Node0x1c54040 -> Node0x1c540b0;
	Node0x1c53d38 -> Node0x1c54120;
	Node0x1c536c8 -> Node0x1c54120;
	Node0x1c54120 -> Node0x1c54190;
	Node0x1c54190 -> Node0x1c54200;
	Node0x1c53d38 -> Node0x1c54270;
	Node0x1c536c8 -> Node0x1c54270;
	Node0x1c540b0 -> Node0x1c542e0;
	Node0x1c53d98 -> Node0x1c54350;
	Node0x1c52758 -> Node0x1c54350;
	Node0x1c53d98 -> Node0x1c543c0;
	Node0x1c53e80 -> Node0x1c543c0;
	Node0x1c53d98 -> Node0x1c54430;
	Node0x1c52758 -> Node0x1c54430;
	Node0x1c53d98 -> Node0x1c544a0;
	Node0x1c52758 -> Node0x1c544a0;
	Node0x1c54350 -> Node0x1c54510;
	Node0x1c54510 -> Node0x1c54580;
	Node0x1c544a0 -> Node0x1c545f0;
	Node0x1c542e0 -> Node0x1c54660;
	Node0x1c543c0 -> Node0x1c54660;
	Node0x1c54660 -> Node0x1c546d0;
	Node0x1c54430 -> Node0x1c546d0;
	Node0x1c546d0 -> Node0x1c54740;
	Node0x1c52758 -> Node0x1c547b0;
	Node0x1c547b0 -> Node0x1c54820;
	Node0x1c53fd0 -> Node0x1c54820;
	Node0x1c54820 -> Node0x1c54890;
	Node0x1c54040 -> Node0x1c54890;
	Node0x1c54890 -> Node0x1c54900;
	Node0x1c540b0 -> Node0x1c54900;
	Node0x1c54900 -> Node0x1c54970;
	Node0x1c54270 -> Node0x1c54970;
	Node0x1c54970 -> Node0x1c549e0;
	Node0x1c54120 -> Node0x1c549e0;
	Node0x1c549e0 -> Node0x1c54a50;
	Node0x1c53d98 -> Node0x1c54a50;
	Node0x1c54a50 -> Node0x1c54ac0;
	Node0x1c54350 -> Node0x1c54ac0;
	Node0x1c54ac0 -> Node0x1c54b30;
	Node0x1c543c0 -> Node0x1c54b30;
	Node0x1c54b30 -> Node0x1c54ba0;
	Node0x1c54430 -> Node0x1c54ba0;
	Node0x1c54ba0 -> Node0x1c54c10;
	Node0x1c53ef0 -> Node0x1c54c10;
	Node0x1c54c10 -> Node0x1c54c80;
	Node0x1c54200 -> Node0x1c54c80;
	Node0x1c54c80 -> Node0x1c54cf0;
	Node0x1c545f0 -> Node0x1c54cf0;
	Node0x1c54cf0 -> Node0x1c54d60;
	Node0x1c54580 -> Node0x1c54d60;
	Node0x1c54d60 -> Node0x1c54dd0;
	Node0x1c54740 -> Node0x1c54dd0;
	Node0x1c53f60 -> Node0x1c54e40;
	Node0x1c54dd0 -> Node0x1c54e40;
	Node0x1c54e40 -> Node0x1bf18b8;
	Node0x1bf18b8 -> Node0x1c54ed0;
	Node0x1c524a8 -> Node0x1c55178;
	Node0x1c52338 -> Node0x1c552d8;
	Node0x1c52178 -> Node0x1c553e8;
	Node0x1c51c68 -> Node0x1c554f8;
}
