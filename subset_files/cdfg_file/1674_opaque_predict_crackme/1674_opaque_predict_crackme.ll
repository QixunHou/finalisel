; ModuleID = '../.././c_source_file/1674_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1674_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = or i32 %7, %0
  %9 = xor i32 %8, -1
  %10 = or i32 %9, %1
  %11 = or i32 %4, %3
  %12 = xor i32 %5, %3
  %13 = xor i32 %12, -1
  %14 = and i32 %11, %13
  %15 = add i32 %14, %10
  %16 = sub i32 0, %15
  %17 = and i32 %1, %0
  %18 = xor i32 %17, -1
  %19 = xor i32 %2, %1
  %20 = xor i32 %19, -1
  %21 = and i32 %20, %18
  %22 = and i32 %2, %0
  %23 = or i32 %1, %0
  %24 = xor i32 %23, -1
  %25 = or i32 %22, %24
  %26 = and i32 %7, %0
  %27 = and i32 %2, %1
  %28 = xor i32 %27, -1
  %29 = xor i32 %26, %28
  %30 = or i32 %17, %20
  %31 = or i32 %7, %1
  %32 = xor i32 %31, -1
  %33 = xor i32 %32, %0
  %34 = xor i32 %1, -1
  %35 = or i32 %34, %0
  %36 = xor i32 %35, -1
  %37 = or i32 %36, %2
  %38 = xor i32 %1, %0
  %39 = and i32 %38, %7
  %40 = and i32 %34, %2
  %41 = and i32 %40, %0
  %42 = xor i32 %19, %0
  %43 = or i32 %41, %42
  %44 = and i32 %7, %1
  %45 = xor i32 %44, %0
  %46 = and i32 %34, %0
  %47 = xor i32 %46, -1
  %48 = xor i32 %47, %2
  %49 = and i32 %38, %2
  %50 = and i32 %23, %7
  %51 = or i32 %46, %2
  %52 = or i32 %2, %0
  %53 = and i32 %52, %1
  %54 = and i32 %27, %0
  %55 = or i32 %2, %1
  %56 = xor i32 %55, %0
  %57 = or i32 %54, %56
  %58 = and i32 %19, %18
  %59 = xor i32 %0, -1
  %60 = and i32 %40, %59
  %61 = or i32 %34, %2
  %62 = and i32 %61, %0
  %63 = xor i32 %62, -1
  %64 = xor i32 %60, %63
  %65 = xor i32 %38, -1
  %66 = or i32 %65, %2
  %67 = xor i32 %2, %0
  %68 = or i32 %67, %1
  %69 = and i32 %65, %2
  %70 = xor i32 %46, %2
  %71 = and i32 %67, %23
  %72 = xor i32 %67, -1
  %73 = and i32 %72, %65
  %74 = and i32 %72, %34
  %75 = and i32 %67, %34
  %76 = shl i32 %75, 1
  %77 = and i32 %35, %7
  %78 = or i32 %67, %38
  %79 = and i32 %67, %35
  %80 = and i32 %67, %18
  %81 = or i32 %67, %17
  %82 = and i32 %19, %59
  %83 = or i32 %54, %82
  %84 = shl i32 %83, 1
  %85 = or i32 %27, %59
  %86 = add i32 %27, 1
  %87 = xor i32 %24, %2
  %88 = xor i32 %52, -1
  %89 = or i32 %88, %34
  %90 = xor i32 %52, %1
  %91 = and i32 %23, %72
  %92 = and i32 %38, %72
  %93 = or i32 %31, %59
  %94 = add i32 %31, 1
  %95 = or i32 %44, %59
  %96 = and i32 %31, %0
  %97 = xor i32 %36, %2
  %98 = xor i32 %22, -1
  %99 = xor i32 %98, %1
  %100 = xor i32 %54, %42
  %101 = xor i32 %42, -1
  %102 = or i32 %54, %101
  %103 = or i32 %22, %36
  %104 = or i32 %26, %27
  %105 = xor i32 %27, %0
  %106 = xor i32 %22, %55
  %107 = or i32 %72, %65
  %108 = or i32 %26, %1
  %109 = xor i32 %108, -1
  %110 = or i32 %67, %46
  %111 = or i32 %72, %34
  %112 = xor i32 %44, -1
  %113 = or i32 %112, %0
  %114 = or i32 %67, %36
  %115 = or i32 %17, %88
  %116 = and i32 %55, %59
  %117 = or i32 %38, %7
  %118 = or i32 %67, %24
  %119 = and i32 %23, %20
  %120 = and i32 %20, %0
  %121 = and i32 %8, %38
  %122 = or i32 %9, %34
  %123 = add i32 %52, 1
  %124 = or i32 %19, %59
  %125 = xor i32 %60, %124
  %126 = xor i32 %54, -1
  %127 = xor i32 %56, %126
  %128 = or i32 %67, %65
  %129 = or i32 %22, %38
  %130 = shl i32 %129, 1
  %131 = and i32 %7, %18
  %132 = and i32 %27, %59
  %133 = and i32 %19, %0
  %134 = xor i32 %132, -1
  %135 = xor i32 %133, %134
  %136 = or i32 %20, %0
  %137 = or i32 %60, %62
  %138 = and i32 %8, %1
  %139 = and i32 %28, %0
  %140 = shl i32 %139, 1
  %141 = or i32 %19, %17
  %142 = or i32 %55, %0
  %143 = xor i32 %35, %2
  %144 = xor i32 %112, %0
  %145 = xor i32 %82, %126
  %146 = or i32 %88, %1
  %147 = shl i32 %146, 1
  %148 = or i32 %27, %46
  %149 = or i32 %44, %46
  %150 = or i32 %17, %9
  %151 = shl i32 %150, 1
  %152 = xor i32 %8, %1
  %153 = shl i32 %152, 2
  %154 = xor i32 %26, -1
  %155 = and i32 %52, %34
  %156 = shl i32 %155, 1
  %157 = or i32 %32, %0
  %158 = and i32 %28, %59
  %159 = or i32 %17, %32
  %160 = and i32 %154, %34
  %161 = xor i32 %154, %1
  %162 = or i32 %132, %133
  %163 = and i32 %38, %98
  %164 = shl i32 %44, 1
  %165 = xor i32 %20, %0
  %166 = shl i32 %165, 1
  %167 = or i32 %7, %65
  %168 = or i32 %28, %0
  %169 = and i32 %47, %2
  %170 = xor i32 %31, %0
  %171 = or i32 %20, %59
  %172 = and i32 %18, %2
  %173 = shl i32 %172, 1
  %174 = add i32 %1, 1
  %175 = add i32 %2, 1
  %176 = or i32 %38, %72
  %177 = and i32 %7, %47
  %178 = or i32 %72, %1
  %179 = or i32 %28, %59
  %180 = and i32 %19, %35
  %181 = xor i32 %52, %17
  %182 = or i32 %72, %24
  %183 = or i32 %19, %46
  %184 = or i32 %9, %65
  %185 = or i32 %38, %88
  %186 = xor i32 %88, %1
  %187 = or i32 %22, %34
  %188 = or i32 %31, %0
  %189 = and i32 %67, %1
  %190 = xor i32 %28, %0
  %191 = shl i32 %190, 1
  %192 = xor i32 %55, -1
  %193 = or i32 %192, %59
  %194 = and i32 %72, %1
  %195 = shl i32 %194, 1
  %196 = and i32 %72, %47
  %197 = or i32 %22, %192
  %198 = xor i32 %26, %31
  %199 = add i32 %55, 1
  %200 = or i32 %19, %0
  %201 = xor i32 %200, 2147483647
  %202 = or i32 %201, %41
  %203 = and i32 %20, %59
  %204 = and i32 %61, %59
  %205 = or i32 %41, %204
  %206 = shl i32 %205, 2
  %207 = and i32 %35, %2
  %208 = and i32 %31, %59
  %209 = xor i32 %17, %2
  %210 = and i32 %7, %65
  %211 = or i32 %26, %65
  %212 = shl i32 %24, 1
  %213 = xor i32 %23, %2
  %214 = shl i32 %213, 2
  %215 = or i32 %44, %0
  %216 = xor i32 %61, %0
  %217 = or i32 %41, %216
  %218 = and i32 %35, %72
  %219 = xor i32 %46, %112
  %220 = xor i32 %26, %1
  %221 = xor i32 %31, %17
  %222 = or i32 %26, %32
  %223 = and i32 %55, %0
  %224 = or i32 %38, %2
  %225 = and i32 %72, %18
  %226 = and i32 %67, %65
  %227 = or i32 %17, %2
  %228 = xor i32 %223, %134
  %229 = or i32 %17, %192
  %230 = and i32 %67, %47
  %231 = and i32 %52, %38
  %232 = or i32 %22, %1
  %233 = xor i32 %41, %200
  %234 = or i32 %20, %36
  %235 = xor i32 %124, 2147483647
  %236 = or i32 %235, %60
  %237 = or i32 %27, %0
  %238 = shl i32 %237, 2
  %239 = xor i32 %18, %2
  %240 = xor i32 %22, %1
  %241 = and i32 %19, %47
  %242 = or i32 %88, %65
  %243 = shl i32 %242, 1
  %244 = and i32 %52, %65
  %245 = and i32 %8, %65
  %246 = and i32 %35, %20
  %247 = and i32 %154, %1
  %248 = and i32 %112, %0
  %249 = or i32 %72, %36
  %250 = or i32 %17, %7
  %251 = xor i32 %41, %101
  %252 = xor i32 %116, %126
  %253 = and i32 %19, %23
  %254 = or i32 %26, %38
  %255 = xor i32 %22, %112
  %256 = xor i32 %41, -1
  %257 = xor i32 %204, %256
  %258 = and i32 %23, %2
  %259 = or i32 %192, %0
  %260 = or i32 %38, %9
  %261 = xor i32 %8, %17
  %262 = or i32 %26, %34
  %263 = and i32 %154, %65
  %264 = or i32 %32, %59
  %265 = shl i32 %98, 2
  %266 = and i32 %67, %38
  %267 = or i32 %19, %36
  %268 = or i32 %22, %44
  %269 = xor i32 %46, %28
  %270 = or i32 %54, %116
  %271 = or i32 %67, %34
  %272 = or i32 %22, %65
  %273 = xor i32 %192, %0
  %274 = shl i32 %273, 1
  %275 = or i32 %55, %59
  %276 = shl i32 %65, 1
  %277 = or i32 %132, %223
  %278 = or i32 %46, %72
  %279 = xor i32 %22, %23
  %280 = and i32 %8, %34
  %281 = or i32 %20, %24
  %282 = xor i32 %55, %17
  %283 = and i32 %112, %59
  %284 = or i32 %46, %7
  %285 = or i32 %17, %72
  %286 = and i32 %20, %47
  %287 = add i32 %44, 1
  %288 = or i32 %24, %2
  %289 = and i32 %98, %34
  %290 = xor i32 %22, %35
  %291 = or i32 %112, %59
  %292 = xor i32 %9, %1
  %293 = or i32 %7, %36
  %294 = or i32 %7, %24
  %295 = and i32 %38, %154
  %296 = shl i32 %295, 1
  %297 = and i32 %98, %1
  %298 = or i32 %46, %20
  %299 = and i32 %98, %65
  %300 = shl i32 %299, 1
  %301 = xor i32 %216, %256
  %302 = and i32 %192, %59
  %303 = shl i32 %302, 3
  %304 = and i32 %44, %59
  %305 = shl i32 %304, 3
  %306 = and i32 %192, %0
  %307 = and i32 %44, %0
  %308 = mul i32 %307, -19
  %309 = and i32 %32, %59
  %310 = mul i32 %309, 11
  %311 = mul i32 %132, -29
  %312 = and i32 %32, %0
  %313 = mul i32 %312, -14
  %314 = mul i32 %54, -22
  %315 = xor i32 %4, -1
  %316 = xor i32 %3, -1
  %317 = and i32 %316, %5
  %318 = and i32 %317, %315
  %319 = and i32 %13, %4
  %320 = or i32 %318, %319
  %321 = or i32 %316, %4
  %322 = xor i32 %321, %5
  %323 = xor i32 %5, -1
  %324 = and i32 %323, %4
  %325 = and i32 %5, %3
  %326 = or i32 %324, %325
  %327 = and i32 %5, %4
  %328 = xor i32 %327, -1
  %329 = xor i32 %4, %3
  %330 = and i32 %329, %328
  %331 = and i32 %12, %11
  %332 = and i32 %317, %4
  %333 = or i32 %12, %4
  %334 = xor i32 %332, %333
  %335 = or i32 %323, %3
  %336 = xor i32 %335, %4
  %337 = xor i32 %327, %3
  %338 = xor i32 %5, %4
  %339 = and i32 %338, %3
  %340 = xor i32 %338, -1
  %341 = or i32 %340, %3
  %342 = and i32 %315, %5
  %343 = xor i32 %342, %3
  %344 = and i32 %11, %5
  %345 = and i32 %12, %4
  %346 = or i32 %5, %3
  %347 = xor i32 %346, -1
  %348 = and i32 %347, %315
  %349 = and i32 %323, %3
  %350 = and i32 %349, %315
  %351 = and i32 %347, %4
  %352 = and i32 %349, %4
  %353 = xor i32 %335, -1
  %354 = and i32 %353, %315
  %355 = and i32 %325, %315
  %356 = and i32 %353, %4
  %357 = and i32 %325, %4
  %358 = add i32 %42, %77
  %359 = add i32 %358, %120
  %360 = sub i32 %93, %359
  %361 = add i32 %360, %74
  %362 = sub i32 %361, %25
  %363 = add i32 %362, %351
  %364 = add i32 %363, %352
  %365 = sub i32 %364, %341
  %366 = mul i32 %365, 3
  %367 = sub i32 %1, %294
  %368 = add i32 %367, %306
  %369 = sub i32 %368, %275
  %370 = add i32 %369, %218
  %371 = add i32 %370, %33
  %372 = add i32 %371, %354
  %373 = sub i32 %372, %320
  %374 = mul i32 %373, 5
  %375 = add i32 %221, %52
  %376 = add i32 %375, %217
  %377 = add i32 %376, %357
  %378 = shl i32 %377, 2
  %379 = add i32 %0, -1
  %380 = add i32 %379, %18
  %381 = add i32 %380, %36
  %382 = add i32 %381, %55
  %383 = add i32 %382, %284
  %384 = add i32 %383, %210
  %385 = add i32 %384, %209
  %386 = add i32 %385, %70
  %387 = add i32 %386, %48
  %388 = add i32 %387, %22
  %389 = add i32 %388, %298
  %390 = add i32 %389, %279
  %391 = add i32 %390, %249
  %392 = add i32 %391, %248
  %393 = add i32 %392, %241
  %394 = add i32 %393, %189
  %395 = add i32 %394, %171
  %396 = add i32 %395, %159
  %397 = add i32 %396, %158
  %398 = add i32 %397, %124
  %399 = add i32 %398, %114
  %400 = add i32 %399, %110
  %401 = add i32 %400, %99
  %402 = add i32 %401, %91
  %403 = add i32 %402, %80
  %404 = add i32 %403, %30
  %405 = add i32 %404, %102
  %406 = add i32 %405, %236
  %407 = add i32 %406, %202
  %408 = add i32 %407, %348
  %409 = add i32 %408, %355
  %410 = add i32 %409, %336
  %411 = add i32 %410, %331
  %412 = shl i32 %411, 1
  %413 = sub i32 %174, %0
  %414 = add i32 %413, %17
  %415 = sub i32 %414, %2
  %416 = add i32 %415, %23
  %417 = add i32 %416, %175
  %418 = sub i32 %417, %38
  %419 = sub i32 %418, %35
  %420 = add i32 %419, %37
  %421 = add i32 %420, %39
  %422 = sub i32 %421, %49
  %423 = add i32 %422, %50
  %424 = sub i32 %423, %51
  %425 = add i32 %424, %66
  %426 = add i32 %425, %69
  %427 = add i32 %426, %86
  %428 = sub i32 %427, %87
  %429 = add i32 %428, %94
  %430 = add i32 %429, %97
  %431 = sub i32 %430, %26
  %432 = add i32 %431, %117
  %433 = add i32 %432, %123
  %434 = add i32 %433, %131
  %435 = add i32 %434, %143
  %436 = add i32 %435, %154
  %437 = sub i32 %436, %167
  %438 = add i32 %437, %9
  %439 = add i32 %438, %169
  %440 = add i32 %439, %177
  %441 = add i32 %440, %199
  %442 = sub i32 %441, %207
  %443 = sub i32 %442, %67
  %444 = sub i32 %443, %212
  %445 = add i32 %444, %224
  %446 = add i32 %445, %31
  %447 = sub i32 %446, %227
  %448 = add i32 %447, %72
  %449 = add i32 %448, %239
  %450 = sub i32 %449, %250
  %451 = add i32 %450, %258
  %452 = sub i32 %451, %8
  %453 = sub i32 %452, %276
  %454 = add i32 %453, %287
  %455 = add i32 %454, %288
  %456 = sub i32 %455, %293
  %457 = add i32 %456, %27
  %458 = add i32 %457, %21
  %459 = add i32 %458, %29
  %460 = sub i32 %459, %45
  %461 = sub i32 %460, %53
  %462 = sub i32 %461, %58
  %463 = add i32 %462, %68
  %464 = add i32 %463, %71
  %465 = add i32 %464, %73
  %466 = sub i32 %465, %78
  %467 = sub i32 %466, %79
  %468 = add i32 %467, %81
  %469 = add i32 %468, %85
  %470 = sub i32 %469, %89
  %471 = add i32 %470, %90
  %472 = sub i32 %471, %92
  %473 = add i32 %472, %95
  %474 = add i32 %473, %96
  %475 = sub i32 %474, %103
  %476 = sub i32 %475, %104
  %477 = sub i32 %476, %105
  %478 = sub i32 %477, %106
  %479 = add i32 %478, %107
  %480 = add i32 %479, %109
  %481 = add i32 %480, %111
  %482 = add i32 %481, %113
  %483 = add i32 %482, %115
  %484 = sub i32 %483, %116
  %485 = add i32 %484, %118
  %486 = add i32 %485, %119
  %487 = sub i32 %486, %121
  %488 = sub i32 %487, %122
  %489 = add i32 %488, %128
  %490 = add i32 %489, %136
  %491 = add i32 %490, %138
  %492 = sub i32 %491, %141
  %493 = add i32 %492, %142
  %494 = add i32 %493, %144
  %495 = sub i32 %494, %148
  %496 = add i32 %495, %149
  %497 = sub i32 %496, %157
  %498 = add i32 %497, %160
  %499 = sub i32 %498, %161
  %500 = sub i32 %499, %163
  %501 = sub i32 %500, %164
  %502 = sub i32 %501, %168
  %503 = sub i32 %502, %170
  %504 = sub i32 %503, %173
  %505 = sub i32 %504, %176
  %506 = sub i32 %505, %178
  %507 = add i32 %506, %179
  %508 = sub i32 %507, %180
  %509 = add i32 %508, %181
  %510 = add i32 %509, %182
  %511 = sub i32 %510, %183
  %512 = add i32 %511, %184
  %513 = add i32 %512, %185
  %514 = add i32 %513, %186
  %515 = sub i32 %514, %187
  %516 = add i32 %515, %188
  %517 = add i32 %516, %193
  %518 = add i32 %517, %196
  %519 = sub i32 %518, %197
  %520 = add i32 %519, %198
  %521 = add i32 %520, %56
  %522 = sub i32 %521, %203
  %523 = sub i32 %522, %208
  %524 = sub i32 %523, %211
  %525 = sub i32 %524, %200
  %526 = add i32 %525, %133
  %527 = sub i32 %526, %214
  %528 = add i32 %527, %215
  %529 = sub i32 %528, %219
  %530 = sub i32 %529, %220
  %531 = sub i32 %530, %222
  %532 = add i32 %531, %223
  %533 = add i32 %532, %225
  %534 = sub i32 %533, %226
  %535 = add i32 %534, %229
  %536 = add i32 %535, %230
  %537 = sub i32 %536, %231
  %538 = add i32 %537, %232
  %539 = sub i32 %538, %234
  %540 = add i32 %539, %240
  %541 = sub i32 %540, %244
  %542 = sub i32 %541, %245
  %543 = sub i32 %542, %246
  %544 = sub i32 %543, %247
  %545 = add i32 %544, %253
  %546 = add i32 %545, %254
  %547 = sub i32 %546, %255
  %548 = sub i32 %547, %259
  %549 = add i32 %548, %82
  %550 = sub i32 %549, %260
  %551 = sub i32 %550, %261
  %552 = add i32 %551, %262
  %553 = sub i32 %552, %263
  %554 = sub i32 %553, %264
  %555 = sub i32 %554, %265
  %556 = sub i32 %555, %266
  %557 = add i32 %556, %267
  %558 = add i32 %557, %268
  %559 = sub i32 %558, %269
  %560 = sub i32 %559, %271
  %561 = add i32 %560, %272
  %562 = add i32 %561, %278
  %563 = add i32 %562, %280
  %564 = add i32 %563, %281
  %565 = sub i32 %564, %282
  %566 = sub i32 %565, %283
  %567 = sub i32 %566, %285
  %568 = sub i32 %567, %286
  %569 = sub i32 %568, %289
  %570 = sub i32 %569, %290
  %571 = add i32 %570, %291
  %572 = sub i32 %571, %292
  %573 = sub i32 %572, %297
  %574 = sub i32 %573, %43
  %575 = sub i32 %574, %57
  %576 = add i32 %575, %64
  %577 = sub i32 %576, %76
  %578 = sub i32 %577, %100
  %579 = add i32 %578, %125
  %580 = add i32 %579, %127
  %581 = sub i32 %580, %130
  %582 = add i32 %581, %135
  %583 = sub i32 %582, %137
  %584 = sub i32 %583, %140
  %585 = sub i32 %584, %145
  %586 = sub i32 %585, %147
  %587 = sub i32 %586, %151
  %588 = sub i32 %587, %153
  %589 = sub i32 %588, %156
  %590 = add i32 %589, %162
  %591 = sub i32 %590, %166
  %592 = sub i32 %591, %191
  %593 = sub i32 %592, %195
  %594 = sub i32 %593, %228
  %595 = sub i32 %594, %233
  %596 = sub i32 %595, %238
  %597 = sub i32 %596, %243
  %598 = sub i32 %597, %251
  %599 = add i32 %598, %252
  %600 = add i32 %599, %257
  %601 = sub i32 %600, %270
  %602 = sub i32 %601, %274
  %603 = add i32 %602, %277
  %604 = sub i32 %603, %296
  %605 = sub i32 %604, %300
  %606 = sub i32 %605, %301
  %607 = sub i32 %606, %303
  %608 = sub i32 %607, %305
  %609 = add i32 %608, %308
  %610 = add i32 %609, %310
  %611 = add i32 %610, %311
  %612 = add i32 %611, %313
  %613 = add i32 %612, %314
  %614 = add i32 %613, %11
  %615 = add i32 %614, %321
  %616 = sub i32 %615, %84
  %617 = sub i32 %616, %206
  %618 = sub i32 %617, %322
  %619 = add i32 %618, %344
  %620 = add i32 %619, %326
  %621 = sub i32 %620, %330
  %622 = sub i32 %621, %337
  %623 = sub i32 %622, %339
  %624 = sub i32 %623, %343
  %625 = sub i32 %624, %345
  %626 = add i32 %625, %350
  %627 = sub i32 %626, %356
  %628 = add i32 %627, %334
  %629 = add i32 %628, %378
  %630 = add i32 %629, %366
  %631 = add i32 %630, %374
  %632 = add i32 %631, %412
  %633 = icmp eq i32 %632, %16
  %634 = select i1 %633, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %635 = tail call i32 @puts(i8* nonnull dereferenceable(1) %634)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
