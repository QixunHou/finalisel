digraph "DFG for'crackme' function" {
	Node0x1bfaca0[shape=record, label="  %3 = shl i32 %0, 1"];
	Node0x1bfad40[shape=record, label="  %4 = xor i32 %3, -2"];
	Node0x1bfae00[shape=record, label="  %5 = sub i32 1, %4"];
	Node0x1bfae70[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0x1bfaee0[shape=record, label="  %7 = and i32 %6, %0"];
	Node0x1bfaf50[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1bfafc0[shape=record, label="  %9 = xor i32 %1, %0"];
	Node0x1bfb030[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1bfb0a0[shape=record, label="  %11 = and i32 %1, %0"];
	Node0x1bfb110[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1bfb180[shape=record, label="  %13 = or i32 %6, %0"];
	Node0x1bfb1f0[shape=record, label="  %14 = shl i32 %1, 1"];
	Node0x1bfb260[shape=record, label="  %15 = or i32 %1, %0"];
	Node0x1bfb300[shape=record, label="  %16 = shl i32 %15, 3"];
	Node0x1bfb3a0[shape=record, label="  %17 = xor i32 %16, -8"];
	Node0x1bfb410[shape=record, label="  %18 = xor i32 %13, -1"];
	Node0x1bfb4b0[shape=record, label="  %19 = mul i32 %18, -6"];
	Node0x1bfb550[shape=record, label="  %20 = shl i32 %11, 2"];
	Node0x1bfb5c0[shape=record, label="  %21 = sub i32 %6, %3"];
	Node0x1bfb630[shape=record, label="  %22 = add i32 %21, %10"];
	Node0x1bfb6a0[shape=record, label="  %23 = add i32 %22, %8"];
	Node0x1bfb710[shape=record, label="  %24 = add i32 %23, %12"];
	Node0x1bfb780[shape=record, label="  %25 = sub i32 %24, %9"];
	Node0x1bfb7f0[shape=record, label="  %26 = add i32 %25, %13"];
	Node0x1bfb860[shape=record, label="  %27 = add i32 %26, %14"];
	Node0x1bfb8d0[shape=record, label="  %28 = sub i32 %27, %7"];
	Node0x1bfb940[shape=record, label="  %29 = add i32 %28, %19"];
	Node0x1bfb9b0[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0x1bfba20[shape=record, label="  %31 = sub i32 %30, %17"];
	Node0x1bfba90[shape=record, label="  %32 = icmp eq i32 %5, %31"];
	Node0x1b9b268[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1bfc140[shape=record, label="  %34 = tail call i32 @puts(i8* nonnull dereferenceable(1) %33)"];
	Node0x1bfc190[shape=record, label="  ret void"];
	Node0x1bfaca0 -> Node0x1bfad40;
	Node0x1bfad40 -> Node0x1bfae00;
	Node0x1bfae00 -> Node0x1bfae70;
	Node0x1bfae70 -> Node0x1bfaee0;
	Node0x1bfaee0 -> Node0x1bfaf50;
	Node0x1bfaf50 -> Node0x1bfafc0;
	Node0x1bfafc0 -> Node0x1bfb030;
	Node0x1bfb030 -> Node0x1bfb0a0;
	Node0x1bfb0a0 -> Node0x1bfb110;
	Node0x1bfb110 -> Node0x1bfb180;
	Node0x1bfb180 -> Node0x1bfb1f0;
	Node0x1bfb1f0 -> Node0x1bfb260;
	Node0x1bfb260 -> Node0x1bfb300;
	Node0x1bfb300 -> Node0x1bfb3a0;
	Node0x1bfb3a0 -> Node0x1bfb410;
	Node0x1bfb410 -> Node0x1bfb4b0;
	Node0x1bfb4b0 -> Node0x1bfb550;
	Node0x1bfb550 -> Node0x1bfb5c0;
	Node0x1bfb5c0 -> Node0x1bfb630;
	Node0x1bfb630 -> Node0x1bfb6a0;
	Node0x1bfb6a0 -> Node0x1bfb710;
	Node0x1bfb710 -> Node0x1bfb780;
	Node0x1bfb780 -> Node0x1bfb7f0;
	Node0x1bfb7f0 -> Node0x1bfb860;
	Node0x1bfb860 -> Node0x1bfb8d0;
	Node0x1bfb8d0 -> Node0x1bfb940;
	Node0x1bfb940 -> Node0x1bfb9b0;
	Node0x1bfb9b0 -> Node0x1bfba20;
	Node0x1bfba20 -> Node0x1bfba90;
	Node0x1bfba90 -> Node0x1b9b268;
	Node0x1b9b268 -> Node0x1bfc140;
	Node0x1bfc140 -> Node0x1bfc190;
edge [color=red]
	Node0x1bfaca0 -> Node0x1bfad40;
	Node0x1bfad40 -> Node0x1bfae00;
	Node0x1bfae70 -> Node0x1bfaee0;
	Node0x1bfaee0 -> Node0x1bfaf50;
	Node0x1bfafc0 -> Node0x1bfb030;
	Node0x1bfb0a0 -> Node0x1bfb110;
	Node0x1bfae70 -> Node0x1bfb180;
	Node0x1bfb260 -> Node0x1bfb300;
	Node0x1bfb300 -> Node0x1bfb3a0;
	Node0x1bfb180 -> Node0x1bfb410;
	Node0x1bfb410 -> Node0x1bfb4b0;
	Node0x1bfb0a0 -> Node0x1bfb550;
	Node0x1bfae70 -> Node0x1bfb5c0;
	Node0x1bfaca0 -> Node0x1bfb5c0;
	Node0x1bfb5c0 -> Node0x1bfb630;
	Node0x1bfb030 -> Node0x1bfb630;
	Node0x1bfb630 -> Node0x1bfb6a0;
	Node0x1bfaf50 -> Node0x1bfb6a0;
	Node0x1bfb6a0 -> Node0x1bfb710;
	Node0x1bfb110 -> Node0x1bfb710;
	Node0x1bfb710 -> Node0x1bfb780;
	Node0x1bfafc0 -> Node0x1bfb780;
	Node0x1bfb780 -> Node0x1bfb7f0;
	Node0x1bfb180 -> Node0x1bfb7f0;
	Node0x1bfb7f0 -> Node0x1bfb860;
	Node0x1bfb1f0 -> Node0x1bfb860;
	Node0x1bfb860 -> Node0x1bfb8d0;
	Node0x1bfaee0 -> Node0x1bfb8d0;
	Node0x1bfb8d0 -> Node0x1bfb940;
	Node0x1bfb4b0 -> Node0x1bfb940;
	Node0x1bfb940 -> Node0x1bfb9b0;
	Node0x1bfb550 -> Node0x1bfb9b0;
	Node0x1bfb9b0 -> Node0x1bfba20;
	Node0x1bfb3a0 -> Node0x1bfba20;
	Node0x1bfae00 -> Node0x1bfba90;
	Node0x1bfba20 -> Node0x1bfba90;
	Node0x1bfba90 -> Node0x1b9b268;
	Node0x1b9b268 -> Node0x1bfc140;
}
