digraph "DFG for'main' function" {
	Node0x1bfc358[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1bfc3d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1bfc468[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1bfc8c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1bfc9a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1bfcac8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1bfcd00[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1bfcdb8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1bfdd28[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1bfe3b0[shape=record, label="  %8 = shl i32 %6, 1"];
	Node0x1bfe420[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x1bfe490[shape=record, label="  %10 = sub i32 1, %9"];
	Node0x1bfe500[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1bfe570[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x1bfe5e0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x1bfe650[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x1bfe6c0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1bfe730[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x1bfe7a0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1bfe810[shape=record, label="  %18 = or i32 %6, %11"];
	Node0x1bfe880[shape=record, label="  %19 = shl i32 %7, 1"];
	Node0x1bfe8f0[shape=record, label="  %20 = or i32 %7, %6"];
	Node0x1bfe960[shape=record, label="  %21 = shl i32 %20, 3"];
	Node0x1bfe9d0[shape=record, label="  %22 = xor i32 %21, -8"];
	Node0x1bfea40[shape=record, label="  %23 = xor i32 %18, -1"];
	Node0x1bfeab0[shape=record, label="  %24 = mul i32 %23, -6"];
	Node0x1bfeb20[shape=record, label="  %25 = shl i32 %16, 2"];
	Node0x1bfeb90[shape=record, label="  %26 = sub i32 %11, %8"];
	Node0x1bfec00[shape=record, label="  %27 = add i32 %26, %15"];
	Node0x1bfec70[shape=record, label="  %28 = add i32 %27, %13"];
	Node0x1bfece0[shape=record, label="  %29 = add i32 %28, %17"];
	Node0x1bfed50[shape=record, label="  %30 = sub i32 %29, %14"];
	Node0x1bfedc0[shape=record, label="  %31 = add i32 %30, %18"];
	Node0x1bfee30[shape=record, label="  %32 = add i32 %31, %19"];
	Node0x1bfeea0[shape=record, label="  %33 = sub i32 %32, %12"];
	Node0x1bfef10[shape=record, label="  %34 = add i32 %33, %24"];
	Node0x1bfef80[shape=record, label="  %35 = sub i32 %34, %25"];
	Node0x1bfeff0[shape=record, label="  %36 = sub i32 %35, %22"];
	Node0x1bff060[shape=record, label="  %37 = icmp eq i32 %10, %36"];
	Node0x1b9c9d8[shape=record, label="  %38 = select i1 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1bff0f0[shape=record, label="  %39 = call i32 @puts(i8* nonnull dereferenceable(1) %38) #5"];
	Node0x1bff348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1bff4a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1bff568[shape=record, label="  ret i32 0"];
	Node0x1bfc358 -> Node0x1bfc3d8;
	Node0x1bfc3d8 -> Node0x1bfc468;
	Node0x1bfc468 -> Node0x1bfc8c8;
	Node0x1bfc8c8 -> Node0x1bfc9a8;
	Node0x1bfc9a8 -> Node0x1bfcac8;
	Node0x1bfcac8 -> Node0x1bfcd00;
	Node0x1bfcd00 -> Node0x1bfcdb8;
	Node0x1bfcdb8 -> Node0x1bfdd28;
	Node0x1bfdd28 -> Node0x1bfe3b0;
	Node0x1bfe3b0 -> Node0x1bfe420;
	Node0x1bfe420 -> Node0x1bfe490;
	Node0x1bfe490 -> Node0x1bfe500;
	Node0x1bfe500 -> Node0x1bfe570;
	Node0x1bfe570 -> Node0x1bfe5e0;
	Node0x1bfe5e0 -> Node0x1bfe650;
	Node0x1bfe650 -> Node0x1bfe6c0;
	Node0x1bfe6c0 -> Node0x1bfe730;
	Node0x1bfe730 -> Node0x1bfe7a0;
	Node0x1bfe7a0 -> Node0x1bfe810;
	Node0x1bfe810 -> Node0x1bfe880;
	Node0x1bfe880 -> Node0x1bfe8f0;
	Node0x1bfe8f0 -> Node0x1bfe960;
	Node0x1bfe960 -> Node0x1bfe9d0;
	Node0x1bfe9d0 -> Node0x1bfea40;
	Node0x1bfea40 -> Node0x1bfeab0;
	Node0x1bfeab0 -> Node0x1bfeb20;
	Node0x1bfeb20 -> Node0x1bfeb90;
	Node0x1bfeb90 -> Node0x1bfec00;
	Node0x1bfec00 -> Node0x1bfec70;
	Node0x1bfec70 -> Node0x1bfece0;
	Node0x1bfece0 -> Node0x1bfed50;
	Node0x1bfed50 -> Node0x1bfedc0;
	Node0x1bfedc0 -> Node0x1bfee30;
	Node0x1bfee30 -> Node0x1bfeea0;
	Node0x1bfeea0 -> Node0x1bfef10;
	Node0x1bfef10 -> Node0x1bfef80;
	Node0x1bfef80 -> Node0x1bfeff0;
	Node0x1bfeff0 -> Node0x1bff060;
	Node0x1bff060 -> Node0x1b9c9d8;
	Node0x1b9c9d8 -> Node0x1bff0f0;
	Node0x1bff0f0 -> Node0x1bff348;
	Node0x1bff348 -> Node0x1bff4a8;
	Node0x1bff4a8 -> Node0x1bff568;
edge [color=red]
	Node0x1bfc358 -> Node0x1bfc468;
	Node0x1bfc468 -> Node0x1bfc8c8;
	Node0x1bfc3d8 -> Node0x1bfc9a8;
	Node0x1bfc9a8 -> Node0x1bfcac8;
	Node0x1bfc358 -> Node0x1bfcd00;
	Node0x1bfc3d8 -> Node0x1bfcd00;
	Node0x1bfc358 -> Node0x1bfcdb8;
	Node0x1bfc3d8 -> Node0x1bfdd28;
	Node0x1bfcdb8 -> Node0x1bfe3b0;
	Node0x1bfe3b0 -> Node0x1bfe420;
	Node0x1bfe420 -> Node0x1bfe490;
	Node0x1bfdd28 -> Node0x1bfe500;
	Node0x1bfcdb8 -> Node0x1bfe570;
	Node0x1bfe500 -> Node0x1bfe570;
	Node0x1bfe570 -> Node0x1bfe5e0;
	Node0x1bfdd28 -> Node0x1bfe650;
	Node0x1bfcdb8 -> Node0x1bfe650;
	Node0x1bfe650 -> Node0x1bfe6c0;
	Node0x1bfdd28 -> Node0x1bfe730;
	Node0x1bfcdb8 -> Node0x1bfe730;
	Node0x1bfe730 -> Node0x1bfe7a0;
	Node0x1bfcdb8 -> Node0x1bfe810;
	Node0x1bfe500 -> Node0x1bfe810;
	Node0x1bfdd28 -> Node0x1bfe880;
	Node0x1bfdd28 -> Node0x1bfe8f0;
	Node0x1bfcdb8 -> Node0x1bfe8f0;
	Node0x1bfe8f0 -> Node0x1bfe960;
	Node0x1bfe960 -> Node0x1bfe9d0;
	Node0x1bfe810 -> Node0x1bfea40;
	Node0x1bfea40 -> Node0x1bfeab0;
	Node0x1bfe730 -> Node0x1bfeb20;
	Node0x1bfe500 -> Node0x1bfeb90;
	Node0x1bfe3b0 -> Node0x1bfeb90;
	Node0x1bfeb90 -> Node0x1bfec00;
	Node0x1bfe6c0 -> Node0x1bfec00;
	Node0x1bfec00 -> Node0x1bfec70;
	Node0x1bfe5e0 -> Node0x1bfec70;
	Node0x1bfec70 -> Node0x1bfece0;
	Node0x1bfe7a0 -> Node0x1bfece0;
	Node0x1bfece0 -> Node0x1bfed50;
	Node0x1bfe650 -> Node0x1bfed50;
	Node0x1bfed50 -> Node0x1bfedc0;
	Node0x1bfe810 -> Node0x1bfedc0;
	Node0x1bfedc0 -> Node0x1bfee30;
	Node0x1bfe880 -> Node0x1bfee30;
	Node0x1bfee30 -> Node0x1bfeea0;
	Node0x1bfe570 -> Node0x1bfeea0;
	Node0x1bfeea0 -> Node0x1bfef10;
	Node0x1bfeab0 -> Node0x1bfef10;
	Node0x1bfef10 -> Node0x1bfef80;
	Node0x1bfeb20 -> Node0x1bfef80;
	Node0x1bfef80 -> Node0x1bfeff0;
	Node0x1bfe9d0 -> Node0x1bfeff0;
	Node0x1bfe490 -> Node0x1bff060;
	Node0x1bfeff0 -> Node0x1bff060;
	Node0x1bff060 -> Node0x1b9c9d8;
	Node0x1b9c9d8 -> Node0x1bff0f0;
	Node0x1bfc9a8 -> Node0x1bff348;
	Node0x1bfc468 -> Node0x1bff4a8;
}
