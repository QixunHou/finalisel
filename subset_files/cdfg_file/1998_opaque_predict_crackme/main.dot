digraph "DFG for'main' function" {
	Node0x15dce98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x15dcf18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x15dcfa8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x15dd408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x15dd4e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x15dd608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x15dd840[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x15dd8f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x15de868[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x15deef0[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x15def60[shape=record, label="  %9 = and i32 %7, %6"];
	Node0x15defd0[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x15df040[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x15df0b0[shape=record, label="  %12 = add i32 %11, %8"];
	Node0x15df120[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x15df190[shape=record, label="  %14 = or i32 %6, %13"];
	Node0x15df200[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x15df270[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x15df2e0[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x15df350[shape=record, label="  %18 = xor i32 %6, -1"];
	Node0x15df3c0[shape=record, label="  %19 = or i32 %7, %18"];
	Node0x15df430[shape=record, label="  %20 = mul i32 %19, -3"];
	Node0x15df4a0[shape=record, label="  %21 = shl i32 %14, 3"];
	Node0x15df510[shape=record, label="  %22 = xor i32 %21, -8"];
	Node0x15df580[shape=record, label="  %23 = shl i32 %17, 1"];
	Node0x15df5f0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x15df660[shape=record, label="  %25 = add i32 %6, %13"];
	Node0x15df6d0[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x15df740[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0x15df7b0[shape=record, label="  %28 = add i32 %27, %16"];
	Node0x15df820[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x15df890[shape=record, label="  %30 = add i32 %29, %10"];
	Node0x15df900[shape=record, label="  %31 = add i32 %30, %24"];
	Node0x15df970[shape=record, label="  %32 = add i32 %31, %22"];
	Node0x15dfbf0[shape=record, label="  %33 = icmp eq i32 %12, %32"];
	Node0x157d9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x15dfc80[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x15dfed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x15e0038[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x15e00f8[shape=record, label="  ret i32 0"];
	Node0x15dce98 -> Node0x15dcf18;
	Node0x15dcf18 -> Node0x15dcfa8;
	Node0x15dcfa8 -> Node0x15dd408;
	Node0x15dd408 -> Node0x15dd4e8;
	Node0x15dd4e8 -> Node0x15dd608;
	Node0x15dd608 -> Node0x15dd840;
	Node0x15dd840 -> Node0x15dd8f8;
	Node0x15dd8f8 -> Node0x15de868;
	Node0x15de868 -> Node0x15deef0;
	Node0x15deef0 -> Node0x15def60;
	Node0x15def60 -> Node0x15defd0;
	Node0x15defd0 -> Node0x15df040;
	Node0x15df040 -> Node0x15df0b0;
	Node0x15df0b0 -> Node0x15df120;
	Node0x15df120 -> Node0x15df190;
	Node0x15df190 -> Node0x15df200;
	Node0x15df200 -> Node0x15df270;
	Node0x15df270 -> Node0x15df2e0;
	Node0x15df2e0 -> Node0x15df350;
	Node0x15df350 -> Node0x15df3c0;
	Node0x15df3c0 -> Node0x15df430;
	Node0x15df430 -> Node0x15df4a0;
	Node0x15df4a0 -> Node0x15df510;
	Node0x15df510 -> Node0x15df580;
	Node0x15df580 -> Node0x15df5f0;
	Node0x15df5f0 -> Node0x15df660;
	Node0x15df660 -> Node0x15df6d0;
	Node0x15df6d0 -> Node0x15df740;
	Node0x15df740 -> Node0x15df7b0;
	Node0x15df7b0 -> Node0x15df820;
	Node0x15df820 -> Node0x15df890;
	Node0x15df890 -> Node0x15df900;
	Node0x15df900 -> Node0x15df970;
	Node0x15df970 -> Node0x15dfbf0;
	Node0x15dfbf0 -> Node0x157d9d8;
	Node0x157d9d8 -> Node0x15dfc80;
	Node0x15dfc80 -> Node0x15dfed8;
	Node0x15dfed8 -> Node0x15e0038;
	Node0x15e0038 -> Node0x15e00f8;
edge [color=red]
	Node0x15dce98 -> Node0x15dcfa8;
	Node0x15dcfa8 -> Node0x15dd408;
	Node0x15dcf18 -> Node0x15dd4e8;
	Node0x15dd4e8 -> Node0x15dd608;
	Node0x15dce98 -> Node0x15dd840;
	Node0x15dcf18 -> Node0x15dd840;
	Node0x15dce98 -> Node0x15dd8f8;
	Node0x15dcf18 -> Node0x15de868;
	Node0x15de868 -> Node0x15deef0;
	Node0x15de868 -> Node0x15def60;
	Node0x15dd8f8 -> Node0x15def60;
	Node0x15def60 -> Node0x15defd0;
	Node0x15defd0 -> Node0x15df040;
	Node0x15df040 -> Node0x15df0b0;
	Node0x15deef0 -> Node0x15df0b0;
	Node0x15de868 -> Node0x15df120;
	Node0x15dd8f8 -> Node0x15df190;
	Node0x15df120 -> Node0x15df190;
	Node0x15de868 -> Node0x15df200;
	Node0x15dd8f8 -> Node0x15df200;
	Node0x15df200 -> Node0x15df270;
	Node0x15de868 -> Node0x15df2e0;
	Node0x15dd8f8 -> Node0x15df2e0;
	Node0x15dd8f8 -> Node0x15df350;
	Node0x15de868 -> Node0x15df3c0;
	Node0x15df350 -> Node0x15df3c0;
	Node0x15df3c0 -> Node0x15df430;
	Node0x15df190 -> Node0x15df4a0;
	Node0x15df4a0 -> Node0x15df510;
	Node0x15df2e0 -> Node0x15df580;
	Node0x15df580 -> Node0x15df5f0;
	Node0x15dd8f8 -> Node0x15df660;
	Node0x15df120 -> Node0x15df660;
	Node0x15df660 -> Node0x15df6d0;
	Node0x15df190 -> Node0x15df6d0;
	Node0x15df6d0 -> Node0x15df740;
	Node0x15df200 -> Node0x15df740;
	Node0x15df740 -> Node0x15df7b0;
	Node0x15df270 -> Node0x15df7b0;
	Node0x15df7b0 -> Node0x15df820;
	Node0x15df430 -> Node0x15df820;
	Node0x15df820 -> Node0x15df890;
	Node0x15defd0 -> Node0x15df890;
	Node0x15df890 -> Node0x15df900;
	Node0x15df5f0 -> Node0x15df900;
	Node0x15df900 -> Node0x15df970;
	Node0x15df510 -> Node0x15df970;
	Node0x15df0b0 -> Node0x15dfbf0;
	Node0x15df970 -> Node0x15dfbf0;
	Node0x15dfbf0 -> Node0x157d9d8;
	Node0x157d9d8 -> Node0x15dfc80;
	Node0x15dd4e8 -> Node0x15dfed8;
	Node0x15dcfa8 -> Node0x15e0038;
}
