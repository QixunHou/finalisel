digraph "DFG for'main' function" {
	Node0x15c6b48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x15c6bc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x15c6c58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x15c70b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x15c7198[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x15c72b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x15c74f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x15c75a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x15c8518[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x15c8ba0[shape=record, label="  %8 = add i32 %6, 1"];
	Node0x15c8c10[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x15c8c80[shape=record, label="  %10 = or i32 %6, %9"];
	Node0x15c8cf0[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x15c8d60[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x15c8dd0[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x15c8e40[shape=record, label="  %14 = shl i32 %7, 1"];
	Node0x15c8eb0[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x15c8f20[shape=record, label="  %16 = mul i32 %15, 5"];
	Node0x15c8f90[shape=record, label="  %17 = and i32 %6, %9"];
	Node0x15c9000[shape=record, label="  %18 = shl i32 %11, 2"];
	Node0x15c9070[shape=record, label="  %19 = add i32 %17, %9"];
	Node0x15c90e0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x15c9150[shape=record, label="  %21 = sub i32 2, %6"];
	Node0x15c91c0[shape=record, label="  %22 = add i32 %21, %10"];
	Node0x15c9230[shape=record, label="  %23 = sub i32 %22, %14"];
	Node0x15c92a0[shape=record, label="  %24 = add i32 %23, %16"];
	Node0x15c9310[shape=record, label="  %25 = add i32 %24, %18"];
	Node0x15c9380[shape=record, label="  %26 = sub i32 %25, %13"];
	Node0x15c93f0[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x15c9460[shape=record, label="  %28 = icmp eq i32 %8, %27"];
	Node0x15679d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x15c94f0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x15c9748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x15c98a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x15c9968[shape=record, label="  ret i32 0"];
	Node0x15c6b48 -> Node0x15c6bc8;
	Node0x15c6bc8 -> Node0x15c6c58;
	Node0x15c6c58 -> Node0x15c70b8;
	Node0x15c70b8 -> Node0x15c7198;
	Node0x15c7198 -> Node0x15c72b8;
	Node0x15c72b8 -> Node0x15c74f0;
	Node0x15c74f0 -> Node0x15c75a8;
	Node0x15c75a8 -> Node0x15c8518;
	Node0x15c8518 -> Node0x15c8ba0;
	Node0x15c8ba0 -> Node0x15c8c10;
	Node0x15c8c10 -> Node0x15c8c80;
	Node0x15c8c80 -> Node0x15c8cf0;
	Node0x15c8cf0 -> Node0x15c8d60;
	Node0x15c8d60 -> Node0x15c8dd0;
	Node0x15c8dd0 -> Node0x15c8e40;
	Node0x15c8e40 -> Node0x15c8eb0;
	Node0x15c8eb0 -> Node0x15c8f20;
	Node0x15c8f20 -> Node0x15c8f90;
	Node0x15c8f90 -> Node0x15c9000;
	Node0x15c9000 -> Node0x15c9070;
	Node0x15c9070 -> Node0x15c90e0;
	Node0x15c90e0 -> Node0x15c9150;
	Node0x15c9150 -> Node0x15c91c0;
	Node0x15c91c0 -> Node0x15c9230;
	Node0x15c9230 -> Node0x15c92a0;
	Node0x15c92a0 -> Node0x15c9310;
	Node0x15c9310 -> Node0x15c9380;
	Node0x15c9380 -> Node0x15c93f0;
	Node0x15c93f0 -> Node0x15c9460;
	Node0x15c9460 -> Node0x15679d8;
	Node0x15679d8 -> Node0x15c94f0;
	Node0x15c94f0 -> Node0x15c9748;
	Node0x15c9748 -> Node0x15c98a8;
	Node0x15c98a8 -> Node0x15c9968;
edge [color=red]
	Node0x15c6b48 -> Node0x15c6c58;
	Node0x15c6c58 -> Node0x15c70b8;
	Node0x15c6bc8 -> Node0x15c7198;
	Node0x15c7198 -> Node0x15c72b8;
	Node0x15c6b48 -> Node0x15c74f0;
	Node0x15c6bc8 -> Node0x15c74f0;
	Node0x15c6b48 -> Node0x15c75a8;
	Node0x15c6bc8 -> Node0x15c8518;
	Node0x15c75a8 -> Node0x15c8ba0;
	Node0x15c8518 -> Node0x15c8c10;
	Node0x15c75a8 -> Node0x15c8c80;
	Node0x15c8c10 -> Node0x15c8c80;
	Node0x15c8518 -> Node0x15c8cf0;
	Node0x15c75a8 -> Node0x15c8cf0;
	Node0x15c8cf0 -> Node0x15c8d60;
	Node0x15c8d60 -> Node0x15c8dd0;
	Node0x15c8518 -> Node0x15c8e40;
	Node0x15c8c80 -> Node0x15c8eb0;
	Node0x15c8eb0 -> Node0x15c8f20;
	Node0x15c75a8 -> Node0x15c8f90;
	Node0x15c8c10 -> Node0x15c8f90;
	Node0x15c8cf0 -> Node0x15c9000;
	Node0x15c8f90 -> Node0x15c9070;
	Node0x15c8c10 -> Node0x15c9070;
	Node0x15c9070 -> Node0x15c90e0;
	Node0x15c75a8 -> Node0x15c9150;
	Node0x15c9150 -> Node0x15c91c0;
	Node0x15c8c80 -> Node0x15c91c0;
	Node0x15c91c0 -> Node0x15c9230;
	Node0x15c8e40 -> Node0x15c9230;
	Node0x15c9230 -> Node0x15c92a0;
	Node0x15c8f20 -> Node0x15c92a0;
	Node0x15c92a0 -> Node0x15c9310;
	Node0x15c9000 -> Node0x15c9310;
	Node0x15c9310 -> Node0x15c9380;
	Node0x15c8dd0 -> Node0x15c9380;
	Node0x15c9380 -> Node0x15c93f0;
	Node0x15c90e0 -> Node0x15c93f0;
	Node0x15c8ba0 -> Node0x15c9460;
	Node0x15c93f0 -> Node0x15c9460;
	Node0x15c9460 -> Node0x15679d8;
	Node0x15679d8 -> Node0x15c94f0;
	Node0x15c7198 -> Node0x15c9748;
	Node0x15c6c58 -> Node0x15c98a8;
}
