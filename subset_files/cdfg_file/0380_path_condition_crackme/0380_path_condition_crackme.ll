; ModuleID = '../.././c_source_file/0380_path_condition_crackme.c'
source_filename = "../.././c_source_file/0380_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %2, %1
  %10 = or i32 %9, %8
  %11 = xor i32 %5, %3
  %12 = xor i32 %11, -1
  %13 = and i32 %12, %4
  %14 = sub i32 %13, %10
  %15 = and i32 %1, %0
  %16 = xor i32 %2, -1
  %17 = or i32 %16, %1
  %18 = xor i32 %17, %15
  %19 = shl i32 %18, 2
  %20 = or i32 %2, %0
  %21 = xor i32 %20, -1
  %22 = or i32 %15, %21
  %23 = xor i32 %1, %0
  %24 = xor i32 %23, -1
  %25 = or i32 %16, %24
  %26 = or i32 %16, %0
  %27 = and i32 %26, %1
  %28 = xor i32 %9, -1
  %29 = and i32 %28, %0
  %30 = and i32 %2, %0
  %31 = or i32 %30, %24
  %32 = and i32 %20, %23
  %33 = or i32 %7, %0
  %34 = xor i32 %33, -1
  %35 = or i32 %28, %34
  %36 = and i32 %2, %1
  %37 = or i32 %28, %0
  %38 = xor i32 %26, -1
  %39 = or i32 %38, %24
  %40 = and i32 %33, %28
  %41 = or i32 %1, %0
  %42 = xor i32 %41, -1
  %43 = or i32 %42, %2
  %44 = shl i32 %43, 1
  %45 = and i32 %7, %2
  %46 = and i32 %45, %0
  %47 = or i32 %9, %0
  %48 = xor i32 %47, -1
  %49 = or i32 %46, %48
  %50 = xor i32 %17, -1
  %51 = add i32 %17, 1
  %52 = xor i32 %2, %0
  %53 = xor i32 %52, -1
  %54 = and i32 %53, %24
  %55 = and i32 %26, %24
  %56 = or i32 %2, %1
  %57 = and i32 %20, %7
  %58 = xor i32 %0, -1
  %59 = or i32 %50, %58
  %60 = xor i32 %56, -1
  %61 = or i32 %30, %60
  %62 = xor i32 %50, %0
  %63 = shl i32 %62, 1
  %64 = and i32 %16, %1
  %65 = xor i32 %64, %0
  %66 = and i32 %28, %58
  %67 = and i32 %45, %58
  %68 = or i32 %7, %2
  %69 = and i32 %68, %0
  %70 = or i32 %67, %69
  %71 = or i32 %28, %58
  %72 = xor i32 %38, %1
  %73 = xor i32 %64, -1
  %74 = xor i32 %8, %73
  %75 = or i32 %9, %15
  %76 = or i32 %56, %0
  %77 = or i32 %15, %60
  %78 = xor i32 %15, -1
  %79 = and i32 %52, %78
  %80 = or i32 %23, %38
  %81 = shl i32 %80, 1
  %82 = xor i32 %9, %0
  %83 = and i32 %52, %1
  %84 = or i32 %8, %28
  %85 = xor i32 %82, -1
  %86 = xor i32 %46, %85
  %87 = and i32 %36, %0
  %88 = xor i32 %56, %0
  %89 = or i32 %87, %88
  %90 = xor i32 %8, -1
  %91 = and i32 %90, %2
  %92 = and i32 %73, %0
  %93 = xor i32 %30, -1
  %94 = and i32 %23, %93
  %95 = or i32 %17, %58
  %96 = and i32 %73, %58
  %97 = and i32 %16, %0
  %98 = xor i32 %97, -1
  %99 = xor i32 %98, %1
  %100 = or i32 %64, %0
  %101 = shl i32 %100, 1
  %102 = xor i32 %17, %0
  %103 = xor i32 %36, -1
  %104 = xor i32 %97, %103
  %105 = and i32 %78, %2
  %106 = and i32 %93, %24
  %107 = and i32 %52, %24
  %108 = and i32 %52, %41
  %109 = xor i32 %42, %2
  %110 = or i32 %73, %0
  %111 = and i32 %9, %78
  %112 = or i32 %52, %34
  %113 = shl i32 %112, 1
  %114 = or i32 %23, %21
  %115 = xor i32 %30, %33
  %116 = shl i32 %115, 1
  %117 = and i32 %23, %98
  %118 = and i32 %52, %33
  %119 = or i32 %21, %1
  %120 = or i32 %36, %8
  %121 = shl i32 %52, 2
  %122 = or i32 %53, %1
  %123 = or i32 %15, %38
  %124 = shl i32 %123, 1
  %125 = or i32 %30, %1
  %126 = and i32 %53, %90
  %127 = shl i32 %126, 1
  %128 = xor i32 %34, %2
  %129 = or i32 %97, %24
  %130 = or i32 %87, %85
  %131 = and i32 %93, %1
  %132 = shl i32 %131, 1
  %133 = or i32 %73, %58
  %134 = and i32 %16, %78
  %135 = shl i32 %134, 1
  %136 = xor i32 %56, %15
  %137 = and i32 %53, %78
  %138 = xor i32 %20, %15
  %139 = shl i32 %138, 1
  %140 = xor i32 %26, %15
  %141 = and i32 %33, %16
  %142 = or i32 %23, %2
  %143 = shl i32 %142, 1
  %144 = or i32 %56, %58
  %145 = or i32 %52, %8
  %146 = or i32 %15, %2
  %147 = xor i32 %90, %2
  %148 = or i32 %9, %58
  %149 = xor i32 %148, -1
  %150 = or i32 %67, %149
  %151 = and i32 %33, %2
  %152 = xor i32 %20, %1
  %153 = xor i32 %41, %2
  %154 = add i32 %30, 1
  %155 = or i32 %52, %1
  %156 = and i32 %98, %7
  %157 = and i32 %33, %53
  %158 = shl i32 %9, 2
  %159 = and i32 %26, %7
  %160 = shl i32 %159, 1
  %161 = xor i32 %69, -1
  %162 = xor i32 %67, %161
  %163 = shl i32 %60, 1
  %164 = xor i32 %78, %2
  %165 = or i32 %16, %34
  %166 = xor i32 %36, %0
  %167 = and i32 %9, %33
  %168 = or i32 %15, %50
  %169 = and i32 %52, %23
  %170 = and i32 %41, %2
  %171 = xor i32 %87, -1
  %172 = xor i32 %88, %171
  %173 = or i32 %36, %0
  %174 = or i32 %38, %7
  %175 = or i32 %23, %16
  %176 = and i32 %9, %58
  %177 = shl i32 %73, 1
  %178 = or i32 %24, %2
  %179 = and i32 %56, %58
  %180 = or i32 %87, %179
  %181 = and i32 %36, %58
  %182 = and i32 %56, %0
  %183 = xor i32 %181, -1
  %184 = xor i32 %182, %183
  %185 = and i32 %20, %1
  %186 = or i32 %97, %36
  %187 = xor i32 %46, %47
  %188 = xor i32 %87, %82
  %189 = xor i32 %73, %0
  %190 = or i32 %103, %0
  %191 = or i32 %9, %34
  %192 = shl i32 %191, 1
  %193 = xor i32 %68, %0
  %194 = or i32 %46, %193
  %195 = or i32 %15, %53
  %196 = xor i32 %30, %73
  %197 = or i32 %50, %0
  %198 = and i32 %41, %16
  %199 = shl i32 %198, 1
  %200 = or i32 %97, %1
  %201 = xor i32 %21, %1
  %202 = or i32 %60, %58
  %203 = and i32 %28, %78
  %204 = and i32 %52, %7
  %205 = and i32 %28, %90
  %206 = xor i32 %15, %2
  %207 = add i32 %36, 1
  %208 = or i32 %9, %42
  %209 = and i32 %23, %2
  %210 = and i32 %23, %16
  %211 = or i32 %52, %23
  %212 = or i32 %30, %7
  %213 = and i32 %16, %24
  %214 = and i32 %52, %90
  %215 = xor i32 %30, %56
  %216 = xor i32 %26, %1
  %217 = and i32 %20, %24
  %218 = or i32 %97, %23
  %219 = shl i32 %218, 1
  %220 = xor i32 %193, 2147483647
  %221 = xor i32 %220, %46
  %222 = shl i32 %182, 1
  %223 = or i32 %87, %176
  %224 = or i32 %52, %42
  %225 = xor i32 %103, %0
  %226 = shl i32 %225, 1
  %227 = or i32 %15, %28
  %228 = or i32 %52, %24
  %229 = add i32 %20, 1
  %230 = and i32 %9, %90
  %231 = or i32 %8, %16
  %232 = or i32 %17, %0
  %233 = or i32 %97, %7
  %234 = xor i32 %179, %171
  %235 = and i32 %23, %53
  %236 = shl i32 %235, 1
  %237 = and i32 %93, %7
  %238 = xor i32 %28, %0
  %239 = shl i32 %238, 1
  %240 = or i32 %52, %7
  %241 = and i32 %53, %1
  %242 = or i32 %30, %34
  %243 = xor i32 %67, %148
  %244 = and i32 %68, %58
  %245 = xor i32 %244, -1
  %246 = xor i32 %46, %245
  %247 = and i32 %24, %2
  %248 = or i32 %16, %42
  %249 = shl i32 %248, 1
  %250 = and i32 %103, %58
  %251 = or i32 %46, %244
  %252 = add i32 %8, 1
  %253 = or i32 %23, %53
  %254 = or i32 %53, %24
  %255 = shl i32 %254, 1
  %256 = or i32 %30, %42
  %257 = or i32 %21, %24
  %258 = and i32 %41, %28
  %259 = shl i32 %258, 1
  %260 = or i32 %181, %182
  %261 = or i32 %46, %82
  %262 = or i32 %60, %0
  %263 = or i32 %53, %42
  %264 = and i32 %17, %0
  %265 = xor i32 %30, %41
  %266 = or i32 %30, %64
  %267 = and i32 %98, %24
  %268 = and i32 %53, %7
  %269 = and i32 %41, %53
  %270 = and i32 %98, %1
  %271 = and i32 %9, %41
  %272 = and i32 %9, %0
  %273 = xor i32 %33, %2
  %274 = and i32 %26, %23
  %275 = xor i32 %30, %1
  %276 = or i32 %38, %1
  %277 = xor i32 %97, %1
  %278 = or i32 %28, %42
  %279 = and i32 %103, %0
  %280 = or i32 %8, %2
  %281 = xor i32 %60, %0
  %282 = shl i32 %281, 1
  %283 = or i32 %34, %2
  %284 = or i32 %181, %272
  %285 = or i32 %53, %7
  %286 = shl i32 %285, 1
  %287 = or i32 %52, %15
  %288 = or i32 %8, %53
  %289 = xor i32 %97, %17
  %290 = shl i32 %34, 1
  %291 = and i32 %16, %90
  %292 = or i32 %36, %58
  %293 = and i32 %17, %58
  %294 = xor i32 %176, %171
  %295 = xor i32 %272, %183
  %296 = and i32 %60, %58
  %297 = and i32 %64, %58
  %298 = mul i32 %297, 15
  %299 = and i32 %60, %0
  %300 = and i32 %64, %0
  %301 = mul i32 %300, 37
  %302 = and i32 %50, %58
  %303 = mul i32 %181, 18
  %304 = and i32 %50, %0
  %305 = xor i32 %4, %3
  %306 = xor i32 %5, %4
  %307 = or i32 %306, %305
  %308 = xor i32 %3, -1
  %309 = or i32 %308, %4
  %310 = xor i32 %309, -1
  %311 = xor i32 %310, %5
  %312 = or i32 %305, %5
  %313 = and i32 %4, %3
  %314 = xor i32 %313, -1
  %315 = and i32 %12, %314
  %316 = shl i32 %315, 1
  %317 = xor i32 %4, -1
  %318 = or i32 %11, %317
  %319 = and i32 %5, %4
  %320 = or i32 %319, %305
  %321 = shl i32 %320, 1
  %322 = add i32 %313, 1
  %323 = or i32 %5, %3
  %324 = xor i32 %319, %323
  %325 = and i32 %309, %5
  %326 = shl i32 %310, 1
  %327 = xor i32 %5, -1
  %328 = and i32 %327, %4
  %329 = or i32 %327, %3
  %330 = xor i32 %329, -1
  %331 = or i32 %328, %330
  %332 = and i32 %5, %3
  %333 = shl i32 %332, 2
  %334 = and i32 %308, %5
  %335 = and i32 %334, %4
  %336 = xor i32 %11, %4
  %337 = or i32 %335, %336
  %338 = xor i32 %328, -1
  %339 = xor i32 %338, %3
  %340 = xor i32 %12, %4
  %341 = or i32 %327, %4
  %342 = and i32 %341, %308
  %343 = or i32 %328, %3
  %344 = shl i32 %343, 1
  %345 = or i32 %4, %3
  %346 = xor i32 %345, -1
  %347 = or i32 %11, %346
  %348 = or i32 %319, %310
  %349 = and i32 %308, %4
  %350 = xor i32 %349, -1
  %351 = and i32 %306, %350
  %352 = shl i32 %351, 2
  %353 = xor i32 %319, %3
  %354 = or i32 %306, %313
  %355 = xor i32 %323, -1
  %356 = or i32 %355, %4
  %357 = or i32 %349, %12
  %358 = xor i32 %319, -1
  %359 = and i32 %358, %308
  %360 = and i32 %327, %3
  %361 = xor i32 %360, -1
  %362 = or i32 %361, %317
  %363 = or i32 %5, %4
  %364 = xor i32 %363, %3
  %365 = xor i32 %323, %313
  %366 = and i32 %332, %317
  %367 = and i32 %11, %4
  %368 = xor i32 %367, -1
  %369 = xor i32 %366, %368
  %370 = xor i32 %341, -1
  %371 = xor i32 %305, -1
  %372 = or i32 %370, %371
  %373 = shl i32 %372, 1
  %374 = or i32 %308, %5
  %375 = and i32 %374, %317
  %376 = xor i32 %335, -1
  %377 = xor i32 %375, %376
  %378 = and i32 %332, %4
  %379 = and i32 %11, %317
  %380 = or i32 %378, %379
  %381 = xor i32 %313, %5
  %382 = xor i32 %323, %4
  %383 = xor i32 %378, -1
  %384 = xor i32 %382, %383
  %385 = xor i32 %346, %5
  %386 = and i32 %327, %314
  %387 = or i32 %335, %375
  %388 = xor i32 %306, -1
  %389 = and i32 %388, %3
  %390 = and i32 %323, %4
  %391 = or i32 %328, %308
  %392 = or i32 %327, %346
  %393 = or i32 %329, %4
  %394 = and i32 %363, %371
  %395 = shl i32 %394, 1
  %396 = xor i32 %319, %361
  %397 = or i32 %306, %3
  %398 = and i32 %309, %388
  %399 = shl i32 %398, 1
  %400 = xor i32 %309, %5
  %401 = or i32 %323, %4
  %402 = or i32 %388, %3
  %403 = and i32 %338, %3
  %404 = or i32 %388, %346
  %405 = or i32 %330, %4
  %406 = or i32 %388, %310
  %407 = or i32 %313, %330
  %408 = and i32 %388, %350
  %409 = xor i32 %379, %383
  %410 = or i32 %332, %317
  %411 = xor i32 %378, %336
  %412 = or i32 %305, %370
  %413 = and i32 %306, %309
  %414 = shl i32 %364, 1
  %415 = xor i32 %414, -2
  %416 = or i32 %306, %371
  %417 = and i32 %371, %5
  %418 = xor i32 %336, %376
  %419 = or i32 %306, %308
  %420 = shl i32 %419, 1
  %421 = or i32 %306, %346
  %422 = and i32 %306, %305
  %423 = and i32 %11, %309
  %424 = xor i32 %378, %356
  %425 = or i32 %378, %382
  %426 = or i32 %319, %371
  %427 = or i32 %361, %4
  %428 = xor i32 %332, -1
  %429 = or i32 %428, %317
  %430 = xor i32 %360, %4
  %431 = xor i32 %349, %428
  %432 = shl i32 %431, 1
  %433 = or i32 %11, %313
  %434 = or i32 %306, %310
  %435 = and i32 %361, %4
  %436 = or i32 %388, %308
  %437 = xor i32 %358, %3
  %438 = xor i32 %332, %4
  %439 = and i32 %363, %308
  %440 = xor i32 %329, %4
  %441 = xor i32 %428, %4
  %442 = and i32 %11, %345
  %443 = xor i32 %370, %3
  %444 = and i32 %363, %305
  %445 = or i32 %313, %327
  %446 = and i32 %309, %12
  %447 = and i32 %329, %4
  %448 = xor i32 %328, %3
  %449 = or i32 %11, %4
  %450 = xor i32 %335, %449
  %451 = or i32 %323, %317
  %452 = or i32 %360, %349
  %453 = or i32 %355, %317
  %454 = or i32 %329, %317
  %455 = xor i32 %363, %313
  %456 = or i32 %428, %4
  %457 = or i32 %332, %4
  %458 = or i32 %310, %5
  %459 = or i32 %330, %317
  %460 = or i32 %313, %355
  %461 = add i32 %323, 1
  %462 = shl i32 %428, 1
  %463 = and i32 %306, %371
  %464 = and i32 %334, %317
  %465 = xor i32 %318, 2147483647
  %466 = or i32 %465, %464
  %467 = xor i32 %330, %4
  %468 = or i32 %313, %388
  %469 = and i32 %355, %317
  %470 = and i32 %360, %317
  %471 = and i32 %355, %4
  %472 = mul i32 %471, 7
  %473 = and i32 %360, %4
  %474 = and i32 %330, %317
  %475 = and i32 %330, %4
  %476 = add i32 %23, %58
  %477 = add i32 %476, %42
  %478 = add i32 %477, %308
  %479 = add i32 %478, %273
  %480 = add i32 %479, %231
  %481 = add i32 %480, %206
  %482 = add i32 %481, %151
  %483 = add i32 %482, %296
  %484 = add i32 %483, %268
  %485 = add i32 %484, %204
  %486 = add i32 %485, %202
  %487 = add i32 %486, %186
  %488 = add i32 %487, %140
  %489 = add i32 %488, %125
  %490 = add i32 %489, %122
  %491 = add i32 %490, %95
  %492 = add i32 %491, %29
  %493 = add i32 %492, %350
  %494 = add i32 %493, %251
  %495 = add i32 %494, %11
  %496 = add i32 %495, %417
  %497 = add i32 %496, %385
  %498 = add i32 %497, %221
  %499 = add i32 %498, %366
  %500 = add i32 %499, %468
  %501 = add i32 %500, %451
  %502 = add i32 %501, %448
  %503 = add i32 %502, %443
  %504 = add i32 %503, %430
  %505 = add i32 %504, %426
  %506 = add i32 %505, %422
  %507 = add i32 %506, %416
  %508 = add i32 %507, %390
  %509 = add i32 %508, %367
  %510 = add i32 %509, %359
  %511 = add i32 %510, %354
  %512 = add i32 %511, %307
  %513 = add i32 %512, %411
  %514 = add i32 %513, %466
  %515 = shl i32 %514, 1
  %516 = sub i32 %87, %109
  %517 = add i32 %516, %264
  %518 = sub i32 %517, %224
  %519 = add i32 %518, %150
  %520 = sub i32 %519, %341
  %521 = sub i32 %520, %406
  %522 = sub i32 %521, %378
  %523 = sub i32 %522, %340
  %524 = mul i32 %523, 5
  %525 = sub i32 %141, %64
  %526 = add i32 %525, %299
  %527 = add i32 %526, %176
  %528 = sub i32 %527, %470
  %529 = sub i32 %528, %475
  %530 = add i32 %529, %410
  %531 = sub i32 %530, %389
  %532 = mul i32 %531, 3
  %533 = add i32 %473, %458
  %534 = shl i32 %533, 2
  %535 = add i32 %469, %304
  %536 = mul i32 %535, 10
  %537 = sub i32 %302, %474
  %538 = mul i32 %537, 17
  %539 = sub i32 2, %0
  %540 = add i32 %539, %24
  %541 = add i32 %540, %16
  %542 = add i32 %541, %33
  %543 = sub i32 %542, %2
  %544 = add i32 %543, %78
  %545 = add i32 %544, %252
  %546 = add i32 %545, %41
  %547 = add i32 %546, %8
  %548 = sub i32 %547, %25
  %549 = sub i32 %548, %36
  %550 = add i32 %549, %51
  %551 = sub i32 %550, %56
  %552 = sub i32 %551, %26
  %553 = add i32 %552, %53
  %554 = add i32 %553, %91
  %555 = add i32 %554, %17
  %556 = sub i32 %555, %105
  %557 = sub i32 %556, %128
  %558 = add i32 %557, %20
  %559 = sub i32 %558, %146
  %560 = add i32 %559, %147
  %561 = add i32 %560, %153
  %562 = add i32 %561, %154
  %563 = sub i32 %562, %164
  %564 = add i32 %563, %165
  %565 = add i32 %564, %170
  %566 = sub i32 %565, %175
  %567 = add i32 %566, %178
  %568 = add i32 %567, %207
  %569 = add i32 %568, %209
  %570 = sub i32 %569, %210
  %571 = add i32 %570, %213
  %572 = add i32 %571, %229
  %573 = add i32 %572, %38
  %574 = sub i32 %573, %247
  %575 = add i32 %574, %30
  %576 = add i32 %575, %28
  %577 = add i32 %576, %280
  %578 = add i32 %577, %283
  %579 = sub i32 %578, %290
  %580 = sub i32 %579, %291
  %581 = sub i32 %580, %22
  %582 = sub i32 %581, %27
  %583 = sub i32 %582, %31
  %584 = add i32 %583, %32
  %585 = sub i32 %584, %35
  %586 = sub i32 %585, %37
  %587 = add i32 %586, %39
  %588 = add i32 %587, %40
  %589 = sub i32 %588, %44
  %590 = sub i32 %589, %54
  %591 = sub i32 %590, %55
  %592 = sub i32 %591, %57
  %593 = sub i32 %592, %59
  %594 = add i32 %593, %61
  %595 = add i32 %594, %65
  %596 = sub i32 %595, %66
  %597 = add i32 %596, %71
  %598 = add i32 %597, %72
  %599 = add i32 %598, %74
  %600 = sub i32 %599, %75
  %601 = add i32 %600, %76
  %602 = add i32 %601, %77
  %603 = sub i32 %602, %79
  %604 = sub i32 %603, %82
  %605 = sub i32 %604, %83
  %606 = add i32 %605, %84
  %607 = add i32 %606, %92
  %608 = sub i32 %607, %94
  %609 = add i32 %608, %96
  %610 = sub i32 %609, %99
  %611 = add i32 %610, %102
  %612 = add i32 %611, %104
  %613 = sub i32 %612, %106
  %614 = add i32 %613, %107
  %615 = sub i32 %614, %108
  %616 = add i32 %615, %110
  %617 = add i32 %616, %111
  %618 = sub i32 %617, %114
  %619 = add i32 %618, %117
  %620 = sub i32 %619, %118
  %621 = sub i32 %620, %119
  %622 = sub i32 %621, %120
  %623 = sub i32 %622, %121
  %624 = sub i32 %623, %129
  %625 = add i32 %624, %133
  %626 = sub i32 %625, %135
  %627 = add i32 %626, %136
  %628 = add i32 %627, %137
  %629 = sub i32 %628, %143
  %630 = add i32 %629, %144
  %631 = sub i32 %630, %145
  %632 = add i32 %631, %152
  %633 = sub i32 %632, %155
  %634 = add i32 %633, %156
  %635 = add i32 %634, %157
  %636 = sub i32 %635, %158
  %637 = sub i32 %636, %163
  %638 = add i32 %637, %166
  %639 = sub i32 %638, %167
  %640 = sub i32 %639, %168
  %641 = sub i32 %640, %169
  %642 = add i32 %641, %173
  %643 = sub i32 %642, %174
  %644 = sub i32 %643, %177
  %645 = sub i32 %644, %185
  %646 = sub i32 %645, %148
  %647 = sub i32 %646, %189
  %648 = sub i32 %647, %190
  %649 = add i32 %648, %195
  %650 = sub i32 %649, %196
  %651 = sub i32 %650, %197
  %652 = sub i32 %651, %199
  %653 = sub i32 %652, %200
  %654 = sub i32 %653, %201
  %655 = sub i32 %654, %203
  %656 = add i32 %655, %205
  %657 = add i32 %656, %208
  %658 = add i32 %657, %211
  %659 = sub i32 %658, %212
  %660 = sub i32 %659, %214
  %661 = sub i32 %660, %215
  %662 = sub i32 %661, %216
  %663 = add i32 %662, %217
  %664 = add i32 %663, %47
  %665 = add i32 %664, %227
  %666 = add i32 %665, %228
  %667 = sub i32 %666, %230
  %668 = sub i32 %667, %232
  %669 = sub i32 %668, %233
  %670 = add i32 %669, %237
  %671 = add i32 %670, %240
  %672 = sub i32 %671, %241
  %673 = add i32 %672, %242
  %674 = sub i32 %673, %249
  %675 = add i32 %674, %250
  %676 = add i32 %675, %253
  %677 = add i32 %676, %256
  %678 = add i32 %677, %257
  %679 = sub i32 %678, %262
  %680 = add i32 %679, %263
  %681 = sub i32 %680, %265
  %682 = sub i32 %681, %266
  %683 = sub i32 %682, %267
  %684 = add i32 %683, %269
  %685 = sub i32 %684, %270
  %686 = sub i32 %685, %271
  %687 = sub i32 %686, %272
  %688 = add i32 %687, %274
  %689 = sub i32 %688, %275
  %690 = add i32 %689, %276
  %691 = add i32 %690, %277
  %692 = add i32 %691, %278
  %693 = add i32 %692, %279
  %694 = add i32 %693, %287
  %695 = sub i32 %694, %88
  %696 = add i32 %695, %288
  %697 = sub i32 %696, %289
  %698 = sub i32 %697, %292
  %699 = sub i32 %698, %293
  %700 = add i32 %699, %19
  %701 = add i32 %700, %49
  %702 = sub i32 %701, %63
  %703 = sub i32 %702, %70
  %704 = sub i32 %703, %81
  %705 = sub i32 %704, %86
  %706 = sub i32 %705, %89
  %707 = sub i32 %706, %101
  %708 = sub i32 %707, %113
  %709 = sub i32 %708, %116
  %710 = sub i32 %709, %124
  %711 = sub i32 %710, %127
  %712 = sub i32 %711, %130
  %713 = sub i32 %712, %132
  %714 = sub i32 %713, %139
  %715 = sub i32 %714, %160
  %716 = add i32 %715, %162
  %717 = sub i32 %716, %172
  %718 = add i32 %717, %180
  %719 = add i32 %718, %184
  %720 = sub i32 %719, %187
  %721 = sub i32 %720, %188
  %722 = sub i32 %721, %192
  %723 = add i32 %722, %194
  %724 = sub i32 %723, %219
  %725 = sub i32 %724, %222
  %726 = add i32 %725, %223
  %727 = sub i32 %726, %226
  %728 = add i32 %727, %234
  %729 = sub i32 %728, %236
  %730 = sub i32 %729, %239
  %731 = add i32 %730, %243
  %732 = sub i32 %731, %246
  %733 = sub i32 %732, %255
  %734 = sub i32 %733, %259
  %735 = sub i32 %734, %260
  %736 = sub i32 %735, %261
  %737 = sub i32 %736, %282
  %738 = sub i32 %737, %284
  %739 = sub i32 %738, %286
  %740 = add i32 %739, %294
  %741 = add i32 %740, %295
  %742 = add i32 %741, %298
  %743 = add i32 %742, %301
  %744 = add i32 %743, %303
  %745 = add i32 %744, %322
  %746 = sub i32 %745, %345
  %747 = add i32 %746, %309
  %748 = add i32 %747, %5
  %749 = sub i32 %748, %349
  %750 = sub i32 %749, %305
  %751 = add i32 %750, %313
  %752 = add i32 %751, %371
  %753 = sub i32 %752, %311
  %754 = add i32 %753, %312
  %755 = sub i32 %754, %325
  %756 = sub i32 %755, %326
  %757 = sub i32 %756, %328
  %758 = sub i32 %757, %381
  %759 = sub i32 %758, %386
  %760 = sub i32 %759, %363
  %761 = sub i32 %760, %392
  %762 = add i32 %761, %400
  %763 = add i32 %762, %361
  %764 = sub i32 %763, %319
  %765 = add i32 %764, %445
  %766 = add i32 %765, %330
  %767 = add i32 %766, %370
  %768 = add i32 %767, %461
  %769 = add i32 %768, %318
  %770 = add i32 %769, %324
  %771 = sub i32 %770, %331
  %772 = sub i32 %771, %333
  %773 = sub i32 %772, %339
  %774 = add i32 %773, %342
  %775 = add i32 %774, %347
  %776 = add i32 %775, %348
  %777 = add i32 %776, %353
  %778 = sub i32 %777, %356
  %779 = add i32 %778, %357
  %780 = sub i32 %779, %362
  %781 = sub i32 %780, %364
  %782 = add i32 %781, %365
  %783 = add i32 %782, %391
  %784 = add i32 %783, %393
  %785 = sub i32 %784, %379
  %786 = sub i32 %785, %396
  %787 = add i32 %786, %397
  %788 = add i32 %787, %401
  %789 = add i32 %788, %402
  %790 = add i32 %789, %403
  %791 = add i32 %790, %404
  %792 = sub i32 %791, %405
  %793 = sub i32 %792, %407
  %794 = sub i32 %793, %408
  %795 = add i32 %794, %412
  %796 = sub i32 %795, %413
  %797 = add i32 %796, %421
  %798 = add i32 %797, %423
  %799 = add i32 %798, %427
  %800 = add i32 %799, %429
  %801 = add i32 %800, %433
  %802 = sub i32 %801, %434
  %803 = add i32 %802, %435
  %804 = sub i32 %803, %436
  %805 = sub i32 %804, %437
  %806 = sub i32 %805, %438
  %807 = add i32 %806, %439
  %808 = add i32 %807, %440
  %809 = add i32 %808, %441
  %810 = add i32 %809, %442
  %811 = add i32 %810, %444
  %812 = sub i32 %811, %446
  %813 = add i32 %812, %447
  %814 = sub i32 %813, %452
  %815 = sub i32 %814, %453
  %816 = add i32 %815, %454
  %817 = sub i32 %816, %455
  %818 = sub i32 %817, %456
  %819 = sub i32 %818, %457
  %820 = sub i32 %819, %459
  %821 = sub i32 %820, %336
  %822 = sub i32 %821, %460
  %823 = sub i32 %822, %462
  %824 = sub i32 %823, %463
  %825 = add i32 %824, %467
  %826 = sub i32 %825, %316
  %827 = sub i32 %826, %321
  %828 = add i32 %827, %337
  %829 = sub i32 %828, %344
  %830 = sub i32 %829, %352
  %831 = sub i32 %830, %369
  %832 = sub i32 %831, %373
  %833 = sub i32 %832, %377
  %834 = add i32 %833, %380
  %835 = sub i32 %834, %384
  %836 = sub i32 %835, %387
  %837 = sub i32 %836, %395
  %838 = sub i32 %837, %399
  %839 = sub i32 %838, %409
  %840 = add i32 %839, %418
  %841 = sub i32 %840, %420
  %842 = add i32 %841, %424
  %843 = sub i32 %842, %425
  %844 = sub i32 %843, %432
  %845 = sub i32 %844, %450
  %846 = add i32 %845, %472
  %847 = sub i32 %846, %415
  %848 = add i32 %847, %534
  %849 = add i32 %848, %536
  %850 = add i32 %849, %538
  %851 = add i32 %850, %532
  %852 = add i32 %851, %524
  %853 = add i32 %852, %515
  %854 = icmp eq i32 %14, %853
  %855 = select i1 %854, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %856 = tail call i32 @puts(i8* nonnull dereferenceable(1) %855)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
