digraph "DFG for'main' function" {
	Node0x9d9d28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x9d9da8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x9d9e38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x9d9e98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x9d9f48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x9da378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x9da458[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x9da558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9da618[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x9da6c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x9da788[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x9da838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x9d4ba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x9daa38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x9db9a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x9dc018[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x9dc078[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x9dc0f0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x9dc160[shape=record, label="  %15 = or i32 %13, %10"];
	Node0x9dc1d0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x9dc240[shape=record, label="  %17 = add i32 %14, %16"];
	Node0x9dc2b0[shape=record, label="  %18 = sub i32 0, %17"];
	Node0x9dc320[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x9dc390[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x9dc400[shape=record, label="  %21 = or i32 %11, %19"];
	Node0x9dc470[shape=record, label="  %22 = shl i32 %11, 1"];
	Node0x9dc4e0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x9dc550[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x9dc5c0[shape=record, label="  %25 = and i32 %11, %19"];
	Node0x9dc630[shape=record, label="  %26 = shl i32 %20, 1"];
	Node0x9dc6a0[shape=record, label="  %27 = xor i32 %10, -1"];
	Node0x9dc710[shape=record, label="  %28 = and i32 %13, %27"];
	Node0x9dc780[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x9dc7f0[shape=record, label="  %30 = xor i32 %13, %10"];
	Node0x9dc860[shape=record, label="  %31 = or i32 %13, %27"];
	Node0x9dc8d0[shape=record, label="  %32 = and i32 %13, %10"];
	Node0x9dc940[shape=record, label="  %33 = xor i32 %31, -1"];
	Node0x9dc9b0[shape=record, label="  %34 = mul i32 %33, -7"];
	Node0x9dca20[shape=record, label="  %35 = shl i32 %28, 1"];
	Node0x9dca90[shape=record, label="  %36 = mul i32 %32, -6"];
	Node0x9dcb00[shape=record, label="  %37 = add i32 %25, %10"];
	Node0x9dcb70[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x9dcbe0[shape=record, label="  %39 = add i32 %10, 1"];
	Node0x9dcc50[shape=record, label="  %40 = add i32 %39, %11"];
	Node0x9dccc0[shape=record, label="  %41 = sub i32 %40, %20"];
	Node0x9dcd30[shape=record, label="  %42 = sub i32 %41, %21"];
	Node0x9dcda0[shape=record, label="  %43 = add i32 %42, %23"];
	Node0x9dce10[shape=record, label="  %44 = sub i32 %43, %24"];
	Node0x9dce80[shape=record, label="  %45 = add i32 %44, %14"];
	Node0x9dcef0[shape=record, label="  %46 = sub i32 %45, %26"];
	Node0x9dcf60[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x9dcfd0[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x9dd040[shape=record, label="  %49 = sub i32 %48, %31"];
	Node0x9dd0b0[shape=record, label="  %50 = add i32 %49, %32"];
	Node0x9dd120[shape=record, label="  %51 = add i32 %50, %34"];
	Node0x9dd190[shape=record, label="  %52 = sub i32 %51, %35"];
	Node0x9dd200[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x9dd270[shape=record, label="  %54 = add i32 %53, %38"];
	Node0x9dd2e0[shape=record, label="  %55 = icmp eq i32 %54, %18"];
	Node0x9798b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x9dd370[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x9dd618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x9dd778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x9dd888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9dd998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x9dda58[shape=record, label="  ret i32 0"];
	Node0x9d9d28 -> Node0x9d9da8;
	Node0x9d9da8 -> Node0x9d9e38;
	Node0x9d9e38 -> Node0x9d9e98;
	Node0x9d9e98 -> Node0x9d9f48;
	Node0x9d9f48 -> Node0x9da378;
	Node0x9da378 -> Node0x9da458;
	Node0x9da458 -> Node0x9da558;
	Node0x9da558 -> Node0x9da618;
	Node0x9da618 -> Node0x9da6c8;
	Node0x9da6c8 -> Node0x9da788;
	Node0x9da788 -> Node0x9da838;
	Node0x9da838 -> Node0x9d4ba0;
	Node0x9d4ba0 -> Node0x9daa38;
	Node0x9daa38 -> Node0x9db9a8;
	Node0x9db9a8 -> Node0x9dc018;
	Node0x9dc018 -> Node0x9dc078;
	Node0x9dc078 -> Node0x9dc0f0;
	Node0x9dc0f0 -> Node0x9dc160;
	Node0x9dc160 -> Node0x9dc1d0;
	Node0x9dc1d0 -> Node0x9dc240;
	Node0x9dc240 -> Node0x9dc2b0;
	Node0x9dc2b0 -> Node0x9dc320;
	Node0x9dc320 -> Node0x9dc390;
	Node0x9dc390 -> Node0x9dc400;
	Node0x9dc400 -> Node0x9dc470;
	Node0x9dc470 -> Node0x9dc4e0;
	Node0x9dc4e0 -> Node0x9dc550;
	Node0x9dc550 -> Node0x9dc5c0;
	Node0x9dc5c0 -> Node0x9dc630;
	Node0x9dc630 -> Node0x9dc6a0;
	Node0x9dc6a0 -> Node0x9dc710;
	Node0x9dc710 -> Node0x9dc780;
	Node0x9dc780 -> Node0x9dc7f0;
	Node0x9dc7f0 -> Node0x9dc860;
	Node0x9dc860 -> Node0x9dc8d0;
	Node0x9dc8d0 -> Node0x9dc940;
	Node0x9dc940 -> Node0x9dc9b0;
	Node0x9dc9b0 -> Node0x9dca20;
	Node0x9dca20 -> Node0x9dca90;
	Node0x9dca90 -> Node0x9dcb00;
	Node0x9dcb00 -> Node0x9dcb70;
	Node0x9dcb70 -> Node0x9dcbe0;
	Node0x9dcbe0 -> Node0x9dcc50;
	Node0x9dcc50 -> Node0x9dccc0;
	Node0x9dccc0 -> Node0x9dcd30;
	Node0x9dcd30 -> Node0x9dcda0;
	Node0x9dcda0 -> Node0x9dce10;
	Node0x9dce10 -> Node0x9dce80;
	Node0x9dce80 -> Node0x9dcef0;
	Node0x9dcef0 -> Node0x9dcf60;
	Node0x9dcf60 -> Node0x9dcfd0;
	Node0x9dcfd0 -> Node0x9dd040;
	Node0x9dd040 -> Node0x9dd0b0;
	Node0x9dd0b0 -> Node0x9dd120;
	Node0x9dd120 -> Node0x9dd190;
	Node0x9dd190 -> Node0x9dd200;
	Node0x9dd200 -> Node0x9dd270;
	Node0x9dd270 -> Node0x9dd2e0;
	Node0x9dd2e0 -> Node0x9798b8;
	Node0x9798b8 -> Node0x9dd370;
	Node0x9dd370 -> Node0x9dd618;
	Node0x9dd618 -> Node0x9dd778;
	Node0x9dd778 -> Node0x9dd888;
	Node0x9dd888 -> Node0x9dd998;
	Node0x9dd998 -> Node0x9dda58;
edge [color=red]
	Node0x9d9d28 -> Node0x9d9f48;
	Node0x9d9f48 -> Node0x9da378;
	Node0x9d9da8 -> Node0x9da458;
	Node0x9da458 -> Node0x9da558;
	Node0x9d9e38 -> Node0x9da618;
	Node0x9da618 -> Node0x9da6c8;
	Node0x9d9e98 -> Node0x9da788;
	Node0x9da788 -> Node0x9da838;
	Node0x9d9d28 -> Node0x9d4ba0;
	Node0x9d9da8 -> Node0x9d4ba0;
	Node0x9d9e38 -> Node0x9d4ba0;
	Node0x9d9e98 -> Node0x9d4ba0;
	Node0x9d9d28 -> Node0x9daa38;
	Node0x9d9da8 -> Node0x9db9a8;
	Node0x9d9e38 -> Node0x9dc018;
	Node0x9d9e98 -> Node0x9dc078;
	Node0x9dc018 -> Node0x9dc0f0;
	Node0x9db9a8 -> Node0x9dc0f0;
	Node0x9dc078 -> Node0x9dc160;
	Node0x9daa38 -> Node0x9dc160;
	Node0x9dc160 -> Node0x9dc1d0;
	Node0x9dc0f0 -> Node0x9dc240;
	Node0x9dc1d0 -> Node0x9dc240;
	Node0x9dc240 -> Node0x9dc2b0;
	Node0x9dc018 -> Node0x9dc320;
	Node0x9dc018 -> Node0x9dc390;
	Node0x9db9a8 -> Node0x9dc390;
	Node0x9db9a8 -> Node0x9dc400;
	Node0x9dc320 -> Node0x9dc400;
	Node0x9db9a8 -> Node0x9dc470;
	Node0x9dc470 -> Node0x9dc4e0;
	Node0x9dc018 -> Node0x9dc550;
	Node0x9db9a8 -> Node0x9dc550;
	Node0x9db9a8 -> Node0x9dc5c0;
	Node0x9dc320 -> Node0x9dc5c0;
	Node0x9dc390 -> Node0x9dc630;
	Node0x9daa38 -> Node0x9dc6a0;
	Node0x9dc078 -> Node0x9dc710;
	Node0x9dc6a0 -> Node0x9dc710;
	Node0x9dc710 -> Node0x9dc780;
	Node0x9dc078 -> Node0x9dc7f0;
	Node0x9daa38 -> Node0x9dc7f0;
	Node0x9dc078 -> Node0x9dc860;
	Node0x9dc6a0 -> Node0x9dc860;
	Node0x9dc078 -> Node0x9dc8d0;
	Node0x9daa38 -> Node0x9dc8d0;
	Node0x9dc860 -> Node0x9dc940;
	Node0x9dc940 -> Node0x9dc9b0;
	Node0x9dc710 -> Node0x9dca20;
	Node0x9dc8d0 -> Node0x9dca90;
	Node0x9dc5c0 -> Node0x9dcb00;
	Node0x9daa38 -> Node0x9dcb00;
	Node0x9dcb00 -> Node0x9dcb70;
	Node0x9daa38 -> Node0x9dcbe0;
	Node0x9dcbe0 -> Node0x9dcc50;
	Node0x9db9a8 -> Node0x9dcc50;
	Node0x9dcc50 -> Node0x9dccc0;
	Node0x9dc390 -> Node0x9dccc0;
	Node0x9dccc0 -> Node0x9dcd30;
	Node0x9dc400 -> Node0x9dcd30;
	Node0x9dcd30 -> Node0x9dcda0;
	Node0x9dc4e0 -> Node0x9dcda0;
	Node0x9dcda0 -> Node0x9dce10;
	Node0x9dc550 -> Node0x9dce10;
	Node0x9dce10 -> Node0x9dce80;
	Node0x9dc0f0 -> Node0x9dce80;
	Node0x9dce80 -> Node0x9dcef0;
	Node0x9dc630 -> Node0x9dcef0;
	Node0x9dcef0 -> Node0x9dcf60;
	Node0x9dc780 -> Node0x9dcf60;
	Node0x9dcf60 -> Node0x9dcfd0;
	Node0x9dc7f0 -> Node0x9dcfd0;
	Node0x9dcfd0 -> Node0x9dd040;
	Node0x9dc860 -> Node0x9dd040;
	Node0x9dd040 -> Node0x9dd0b0;
	Node0x9dc8d0 -> Node0x9dd0b0;
	Node0x9dd0b0 -> Node0x9dd120;
	Node0x9dc9b0 -> Node0x9dd120;
	Node0x9dd120 -> Node0x9dd190;
	Node0x9dca20 -> Node0x9dd190;
	Node0x9dd190 -> Node0x9dd200;
	Node0x9dca90 -> Node0x9dd200;
	Node0x9dd200 -> Node0x9dd270;
	Node0x9dcb70 -> Node0x9dd270;
	Node0x9dd270 -> Node0x9dd2e0;
	Node0x9dc2b0 -> Node0x9dd2e0;
	Node0x9dd2e0 -> Node0x9798b8;
	Node0x9798b8 -> Node0x9dd370;
	Node0x9da788 -> Node0x9dd618;
	Node0x9da618 -> Node0x9dd778;
	Node0x9da458 -> Node0x9dd888;
	Node0x9d9f48 -> Node0x9dd998;
}
