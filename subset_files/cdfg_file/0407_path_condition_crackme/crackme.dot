digraph "DFG for'crackme' function" {
	Node0x15529a0[shape=record, label="  %3 = shl i32 %0, 1"];
	Node0x1552a10[shape=record, label="  %4 = sub i32 %3, %1"];
	Node0x1552ad0[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x1552b40[shape=record, label="  %6 = and i32 %5, %0"];
	Node0x1552be0[shape=record, label="  %7 = mul i32 %6, 3"];
	Node0x1552c50[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x1552cc0[shape=record, label="  %9 = and i32 %8, %1"];
	Node0x1552d30[shape=record, label="  %10 = or i32 %8, %1"];
	Node0x1552da0[shape=record, label="  %11 = and i32 %1, %0"];
	Node0x1552e10[shape=record, label="  %12 = sub i32 1, %9"];
	Node0x1552e80[shape=record, label="  %13 = add i32 %12, %10"];
	Node0x1552ef0[shape=record, label="  %14 = add i32 %13, %11"];
	Node0x1552f60[shape=record, label="  %15 = add i32 %14, %7"];
	Node0x1552fd0[shape=record, label="  %16 = icmp eq i32 %4, %15"];
	Node0x14f3268[shape=record, label="  %17 = select i1 %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1553470[shape=record, label="  %18 = tail call i32 @puts(i8* nonnull dereferenceable(1) %17)"];
	Node0x15534c0[shape=record, label="  ret void"];
	Node0x15529a0 -> Node0x1552a10;
	Node0x1552a10 -> Node0x1552ad0;
	Node0x1552ad0 -> Node0x1552b40;
	Node0x1552b40 -> Node0x1552be0;
	Node0x1552be0 -> Node0x1552c50;
	Node0x1552c50 -> Node0x1552cc0;
	Node0x1552cc0 -> Node0x1552d30;
	Node0x1552d30 -> Node0x1552da0;
	Node0x1552da0 -> Node0x1552e10;
	Node0x1552e10 -> Node0x1552e80;
	Node0x1552e80 -> Node0x1552ef0;
	Node0x1552ef0 -> Node0x1552f60;
	Node0x1552f60 -> Node0x1552fd0;
	Node0x1552fd0 -> Node0x14f3268;
	Node0x14f3268 -> Node0x1553470;
	Node0x1553470 -> Node0x15534c0;
edge [color=red]
	Node0x15529a0 -> Node0x1552a10;
	Node0x1552ad0 -> Node0x1552b40;
	Node0x1552b40 -> Node0x1552be0;
	Node0x1552c50 -> Node0x1552cc0;
	Node0x1552c50 -> Node0x1552d30;
	Node0x1552cc0 -> Node0x1552e10;
	Node0x1552e10 -> Node0x1552e80;
	Node0x1552d30 -> Node0x1552e80;
	Node0x1552e80 -> Node0x1552ef0;
	Node0x1552da0 -> Node0x1552ef0;
	Node0x1552ef0 -> Node0x1552f60;
	Node0x1552be0 -> Node0x1552f60;
	Node0x1552a10 -> Node0x1552fd0;
	Node0x1552f60 -> Node0x1552fd0;
	Node0x1552fd0 -> Node0x14f3268;
	Node0x14f3268 -> Node0x1553470;
}
