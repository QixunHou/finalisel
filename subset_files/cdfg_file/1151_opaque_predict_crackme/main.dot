digraph "DFG for'main' function" {
	Node0x9a2df8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x9a2e78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x9a2f08[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x9a3368[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x9a3448[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x9a3568[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9a37a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x9a3858[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x9a47c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x9a4e50[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x9a4ec0[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x9a4f30[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x9a4fa0[shape=record, label="  %11 = mul i32 %10, -4"];
	Node0x9a5010[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x9a5080[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x9a50f0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x9a5160[shape=record, label="  %15 = and i32 %6, %12"];
	Node0x9a51d0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x9a5240[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x9a52b0[shape=record, label="  %18 = or i32 %6, %12"];
	Node0x9a5320[shape=record, label="  %19 = or i32 %7, %6"];
	Node0x9a5390[shape=record, label="  %20 = xor i32 %18, -1"];
	Node0x9a5400[shape=record, label="  %21 = mul i32 %20, -9"];
	Node0x9a5470[shape=record, label="  %22 = mul i32 %15, -5"];
	Node0x9a54e0[shape=record, label="  %23 = add i32 %19, %9"];
	Node0x9a5550[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x9a55c0[shape=record, label="  %25 = add i32 %14, %8"];
	Node0x9a5630[shape=record, label="  %26 = sub i32 %25, %18"];
	Node0x9a56a0[shape=record, label="  %27 = add i32 %26, %11"];
	Node0x9a5710[shape=record, label="  %28 = add i32 %27, %21"];
	Node0x9a5780[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x9a57f0[shape=record, label="  %30 = add i32 %29, %17"];
	Node0x9a5860[shape=record, label="  %31 = add i32 %30, %24"];
	Node0x9a58d0[shape=record, label="  %32 = icmp eq i32 %31, 1"];
	Node0x9439d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x9a5b70[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x9a5dc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x9a5f28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x9a5fe8[shape=record, label="  ret i32 0"];
	Node0x9a2df8 -> Node0x9a2e78;
	Node0x9a2e78 -> Node0x9a2f08;
	Node0x9a2f08 -> Node0x9a3368;
	Node0x9a3368 -> Node0x9a3448;
	Node0x9a3448 -> Node0x9a3568;
	Node0x9a3568 -> Node0x9a37a0;
	Node0x9a37a0 -> Node0x9a3858;
	Node0x9a3858 -> Node0x9a47c8;
	Node0x9a47c8 -> Node0x9a4e50;
	Node0x9a4e50 -> Node0x9a4ec0;
	Node0x9a4ec0 -> Node0x9a4f30;
	Node0x9a4f30 -> Node0x9a4fa0;
	Node0x9a4fa0 -> Node0x9a5010;
	Node0x9a5010 -> Node0x9a5080;
	Node0x9a5080 -> Node0x9a50f0;
	Node0x9a50f0 -> Node0x9a5160;
	Node0x9a5160 -> Node0x9a51d0;
	Node0x9a51d0 -> Node0x9a5240;
	Node0x9a5240 -> Node0x9a52b0;
	Node0x9a52b0 -> Node0x9a5320;
	Node0x9a5320 -> Node0x9a5390;
	Node0x9a5390 -> Node0x9a5400;
	Node0x9a5400 -> Node0x9a5470;
	Node0x9a5470 -> Node0x9a54e0;
	Node0x9a54e0 -> Node0x9a5550;
	Node0x9a5550 -> Node0x9a55c0;
	Node0x9a55c0 -> Node0x9a5630;
	Node0x9a5630 -> Node0x9a56a0;
	Node0x9a56a0 -> Node0x9a5710;
	Node0x9a5710 -> Node0x9a5780;
	Node0x9a5780 -> Node0x9a57f0;
	Node0x9a57f0 -> Node0x9a5860;
	Node0x9a5860 -> Node0x9a58d0;
	Node0x9a58d0 -> Node0x9439d8;
	Node0x9439d8 -> Node0x9a5b70;
	Node0x9a5b70 -> Node0x9a5dc8;
	Node0x9a5dc8 -> Node0x9a5f28;
	Node0x9a5f28 -> Node0x9a5fe8;
edge [color=red]
	Node0x9a2df8 -> Node0x9a2f08;
	Node0x9a2f08 -> Node0x9a3368;
	Node0x9a2e78 -> Node0x9a3448;
	Node0x9a3448 -> Node0x9a3568;
	Node0x9a2df8 -> Node0x9a37a0;
	Node0x9a2e78 -> Node0x9a37a0;
	Node0x9a2df8 -> Node0x9a3858;
	Node0x9a2e78 -> Node0x9a47c8;
	Node0x9a3858 -> Node0x9a4e50;
	Node0x9a47c8 -> Node0x9a4ec0;
	Node0x9a3858 -> Node0x9a4ec0;
	Node0x9a4ec0 -> Node0x9a4f30;
	Node0x9a4f30 -> Node0x9a4fa0;
	Node0x9a47c8 -> Node0x9a5010;
	Node0x9a47c8 -> Node0x9a5080;
	Node0x9a3858 -> Node0x9a5080;
	Node0x9a5080 -> Node0x9a50f0;
	Node0x9a3858 -> Node0x9a5160;
	Node0x9a5010 -> Node0x9a5160;
	Node0x9a5160 -> Node0x9a51d0;
	Node0x9a51d0 -> Node0x9a5240;
	Node0x9a3858 -> Node0x9a52b0;
	Node0x9a5010 -> Node0x9a52b0;
	Node0x9a47c8 -> Node0x9a5320;
	Node0x9a3858 -> Node0x9a5320;
	Node0x9a52b0 -> Node0x9a5390;
	Node0x9a5390 -> Node0x9a5400;
	Node0x9a5160 -> Node0x9a5470;
	Node0x9a5320 -> Node0x9a54e0;
	Node0x9a4ec0 -> Node0x9a54e0;
	Node0x9a54e0 -> Node0x9a5550;
	Node0x9a50f0 -> Node0x9a55c0;
	Node0x9a4e50 -> Node0x9a55c0;
	Node0x9a55c0 -> Node0x9a5630;
	Node0x9a52b0 -> Node0x9a5630;
	Node0x9a5630 -> Node0x9a56a0;
	Node0x9a4fa0 -> Node0x9a56a0;
	Node0x9a56a0 -> Node0x9a5710;
	Node0x9a5400 -> Node0x9a5710;
	Node0x9a5710 -> Node0x9a5780;
	Node0x9a5470 -> Node0x9a5780;
	Node0x9a5780 -> Node0x9a57f0;
	Node0x9a5240 -> Node0x9a57f0;
	Node0x9a57f0 -> Node0x9a5860;
	Node0x9a5550 -> Node0x9a5860;
	Node0x9a5860 -> Node0x9a58d0;
	Node0x9a58d0 -> Node0x9439d8;
	Node0x9439d8 -> Node0x9a5b70;
	Node0x9a3448 -> Node0x9a5dc8;
	Node0x9a2f08 -> Node0x9a5f28;
}
