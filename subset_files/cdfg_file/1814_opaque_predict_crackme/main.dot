digraph "DFG for'main' function" {
	Node0x15afe28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x15afea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x15aff38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x15aff98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x15b0048[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x15b0478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x15b0558[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x15b0658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x15b0718[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x15b07c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x15b0888[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x15b0938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x15aa7e0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x15b0b38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x15b1aa8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x15b2118[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x15b2178[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x15b2288[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x15b24e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x15b2648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x15b2758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x15b2868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x15b2928[shape=record, label="  ret i32 0"];
	Node0x15afe28 -> Node0x15afea8;
	Node0x15afea8 -> Node0x15aff38;
	Node0x15aff38 -> Node0x15aff98;
	Node0x15aff98 -> Node0x15b0048;
	Node0x15b0048 -> Node0x15b0478;
	Node0x15b0478 -> Node0x15b0558;
	Node0x15b0558 -> Node0x15b0658;
	Node0x15b0658 -> Node0x15b0718;
	Node0x15b0718 -> Node0x15b07c8;
	Node0x15b07c8 -> Node0x15b0888;
	Node0x15b0888 -> Node0x15b0938;
	Node0x15b0938 -> Node0x15aa7e0;
	Node0x15aa7e0 -> Node0x15b0b38;
	Node0x15b0b38 -> Node0x15b1aa8;
	Node0x15b1aa8 -> Node0x15b2118;
	Node0x15b2118 -> Node0x15b2178;
	Node0x15b2178 -> Node0x15b2288;
	Node0x15b2288 -> Node0x15b24e8;
	Node0x15b24e8 -> Node0x15b2648;
	Node0x15b2648 -> Node0x15b2758;
	Node0x15b2758 -> Node0x15b2868;
	Node0x15b2868 -> Node0x15b2928;
edge [color=red]
	Node0x15afe28 -> Node0x15b0048;
	Node0x15b0048 -> Node0x15b0478;
	Node0x15afea8 -> Node0x15b0558;
	Node0x15b0558 -> Node0x15b0658;
	Node0x15aff38 -> Node0x15b0718;
	Node0x15b0718 -> Node0x15b07c8;
	Node0x15aff98 -> Node0x15b0888;
	Node0x15b0888 -> Node0x15b0938;
	Node0x15afe28 -> Node0x15aa7e0;
	Node0x15afea8 -> Node0x15aa7e0;
	Node0x15aff38 -> Node0x15aa7e0;
	Node0x15aff98 -> Node0x15aa7e0;
	Node0x15afe28 -> Node0x15b0b38;
	Node0x15afea8 -> Node0x15b1aa8;
	Node0x15aff38 -> Node0x15b2118;
	Node0x15aff98 -> Node0x15b2178;
	Node0x15b0b38 -> Node0x15b2288;
	Node0x15b1aa8 -> Node0x15b2288;
	Node0x15b2118 -> Node0x15b2288;
	Node0x15b2178 -> Node0x15b2288;
	Node0x15b0888 -> Node0x15b24e8;
	Node0x15b0718 -> Node0x15b2648;
	Node0x15b0558 -> Node0x15b2758;
	Node0x15b0048 -> Node0x15b2868;
}
