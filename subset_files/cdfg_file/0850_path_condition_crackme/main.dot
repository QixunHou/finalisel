digraph "DFG for'main' function" {
	Node0x1ce4d38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ce4db8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ce4e48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1ce52a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ce5388[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1ce54a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ce56e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1ce5798[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ce6708[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ce6d90[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1ce6e00[shape=record, label="  %9 = add i32 %6, 2"];
	Node0x1ce6e70[shape=record, label="  %10 = add i32 %9, %7"];
	Node0x1ce6ee0[shape=record, label="  %11 = shl i32 %6, 1"];
	Node0x1ce6f50[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x1ce6fc0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x1ce7030[shape=record, label="  %14 = and i32 %6, %8"];
	Node0x1ce70a0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1ce7110[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x1ce7180[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x1ce71f0[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x1ce7260[shape=record, label="  %19 = xor i32 %6, 1073741823"];
	Node0x1ce72d0[shape=record, label="  %20 = and i32 %19, %7"];
	Node0x1ce7340[shape=record, label="  %21 = shl i32 %20, 2"];
	Node0x1ce73b0[shape=record, label="  %22 = shl i32 %14, 2"];
	Node0x1ce7420[shape=record, label="  %23 = shl i32 %12, 2"];
	Node0x1ce7490[shape=record, label="  %24 = add i32 %11, %7"];
	Node0x1ce7500[shape=record, label="  %25 = add i32 %24, %13"];
	Node0x1ce7570[shape=record, label="  %26 = add i32 %25, %15"];
	Node0x1ce75e0[shape=record, label="  %27 = sub i32 %26, %21"];
	Node0x1ce7650[shape=record, label="  %28 = sub i32 %27, %22"];
	Node0x1ce76c0[shape=record, label="  %29 = sub i32 %28, %23"];
	Node0x1ce7730[shape=record, label="  %30 = sub i32 %29, %18"];
	Node0x1ce77a0[shape=record, label="  %31 = icmp eq i32 %10, %30"];
	Node0x1c859d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ce7a40[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x1ce7c98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ce7df8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ce7eb8[shape=record, label="  ret i32 0"];
	Node0x1ce4d38 -> Node0x1ce4db8;
	Node0x1ce4db8 -> Node0x1ce4e48;
	Node0x1ce4e48 -> Node0x1ce52a8;
	Node0x1ce52a8 -> Node0x1ce5388;
	Node0x1ce5388 -> Node0x1ce54a8;
	Node0x1ce54a8 -> Node0x1ce56e0;
	Node0x1ce56e0 -> Node0x1ce5798;
	Node0x1ce5798 -> Node0x1ce6708;
	Node0x1ce6708 -> Node0x1ce6d90;
	Node0x1ce6d90 -> Node0x1ce6e00;
	Node0x1ce6e00 -> Node0x1ce6e70;
	Node0x1ce6e70 -> Node0x1ce6ee0;
	Node0x1ce6ee0 -> Node0x1ce6f50;
	Node0x1ce6f50 -> Node0x1ce6fc0;
	Node0x1ce6fc0 -> Node0x1ce7030;
	Node0x1ce7030 -> Node0x1ce70a0;
	Node0x1ce70a0 -> Node0x1ce7110;
	Node0x1ce7110 -> Node0x1ce7180;
	Node0x1ce7180 -> Node0x1ce71f0;
	Node0x1ce71f0 -> Node0x1ce7260;
	Node0x1ce7260 -> Node0x1ce72d0;
	Node0x1ce72d0 -> Node0x1ce7340;
	Node0x1ce7340 -> Node0x1ce73b0;
	Node0x1ce73b0 -> Node0x1ce7420;
	Node0x1ce7420 -> Node0x1ce7490;
	Node0x1ce7490 -> Node0x1ce7500;
	Node0x1ce7500 -> Node0x1ce7570;
	Node0x1ce7570 -> Node0x1ce75e0;
	Node0x1ce75e0 -> Node0x1ce7650;
	Node0x1ce7650 -> Node0x1ce76c0;
	Node0x1ce76c0 -> Node0x1ce7730;
	Node0x1ce7730 -> Node0x1ce77a0;
	Node0x1ce77a0 -> Node0x1c859d8;
	Node0x1c859d8 -> Node0x1ce7a40;
	Node0x1ce7a40 -> Node0x1ce7c98;
	Node0x1ce7c98 -> Node0x1ce7df8;
	Node0x1ce7df8 -> Node0x1ce7eb8;
edge [color=red]
	Node0x1ce4d38 -> Node0x1ce4e48;
	Node0x1ce4e48 -> Node0x1ce52a8;
	Node0x1ce4db8 -> Node0x1ce5388;
	Node0x1ce5388 -> Node0x1ce54a8;
	Node0x1ce4d38 -> Node0x1ce56e0;
	Node0x1ce4db8 -> Node0x1ce56e0;
	Node0x1ce4d38 -> Node0x1ce5798;
	Node0x1ce4db8 -> Node0x1ce6708;
	Node0x1ce6708 -> Node0x1ce6d90;
	Node0x1ce5798 -> Node0x1ce6e00;
	Node0x1ce6e00 -> Node0x1ce6e70;
	Node0x1ce6708 -> Node0x1ce6e70;
	Node0x1ce5798 -> Node0x1ce6ee0;
	Node0x1ce6708 -> Node0x1ce6f50;
	Node0x1ce5798 -> Node0x1ce6f50;
	Node0x1ce6f50 -> Node0x1ce6fc0;
	Node0x1ce5798 -> Node0x1ce7030;
	Node0x1ce6d90 -> Node0x1ce7030;
	Node0x1ce7030 -> Node0x1ce70a0;
	Node0x1ce6708 -> Node0x1ce7110;
	Node0x1ce5798 -> Node0x1ce7110;
	Node0x1ce7110 -> Node0x1ce7180;
	Node0x1ce7180 -> Node0x1ce71f0;
	Node0x1ce5798 -> Node0x1ce7260;
	Node0x1ce7260 -> Node0x1ce72d0;
	Node0x1ce6708 -> Node0x1ce72d0;
	Node0x1ce72d0 -> Node0x1ce7340;
	Node0x1ce7030 -> Node0x1ce73b0;
	Node0x1ce6f50 -> Node0x1ce7420;
	Node0x1ce6ee0 -> Node0x1ce7490;
	Node0x1ce6708 -> Node0x1ce7490;
	Node0x1ce7490 -> Node0x1ce7500;
	Node0x1ce6fc0 -> Node0x1ce7500;
	Node0x1ce7500 -> Node0x1ce7570;
	Node0x1ce70a0 -> Node0x1ce7570;
	Node0x1ce7570 -> Node0x1ce75e0;
	Node0x1ce7340 -> Node0x1ce75e0;
	Node0x1ce75e0 -> Node0x1ce7650;
	Node0x1ce73b0 -> Node0x1ce7650;
	Node0x1ce7650 -> Node0x1ce76c0;
	Node0x1ce7420 -> Node0x1ce76c0;
	Node0x1ce76c0 -> Node0x1ce7730;
	Node0x1ce71f0 -> Node0x1ce7730;
	Node0x1ce6e70 -> Node0x1ce77a0;
	Node0x1ce7730 -> Node0x1ce77a0;
	Node0x1ce77a0 -> Node0x1c859d8;
	Node0x1c859d8 -> Node0x1ce7a40;
	Node0x1ce5388 -> Node0x1ce7c98;
	Node0x1ce4e48 -> Node0x1ce7df8;
}
