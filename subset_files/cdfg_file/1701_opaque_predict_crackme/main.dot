digraph "DFG for'main' function" {
	Node0x12f1a08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12f1a88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x12f1b18[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x12f1f78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x12f2058[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x12f2178[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12f23b0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x12f2468[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12f33d8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x12f3a60[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x12f3ad0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x12f3b40[shape=record, label="  %10 = and i32 %6, %8"];
	Node0x12f3bb0[shape=record, label="  %11 = sub i32 1, %7"];
	Node0x12f3c20[shape=record, label="  %12 = add i32 %11, %10"];
	Node0x12f3c90[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x12f3d00[shape=record, label="  %14 = sub i32 %12, %13"];
	Node0x12f3d70[shape=record, label="  %15 = shl i32 %13, 1"];
	Node0x12f3de0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x12f3e50[shape=record, label="  %17 = xor i32 %9, -1"];
	Node0x12f3ec0[shape=record, label="  %18 = mul i32 %17, 3"];
	Node0x12f3f30[shape=record, label="  %19 = shl i32 %10, 1"];
	Node0x12f3fa0[shape=record, label="  %20 = and i32 %7, %6"];
	Node0x12f4010[shape=record, label="  %21 = shl i32 %20, 2"];
	Node0x12f4080[shape=record, label="  %22 = add i32 %14, %18"];
	Node0x12f40f0[shape=record, label="  %23 = add i32 %22, %19"];
	Node0x12f4160[shape=record, label="  %24 = add i32 %23, %21"];
	Node0x12f41d0[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x12f4240[shape=record, label="  %26 = icmp eq i32 %9, %25"];
	Node0x12929d8[shape=record, label="  %27 = select i1 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x12f42d0[shape=record, label="  %28 = call i32 @puts(i8* nonnull dereferenceable(1) %27) #5"];
	Node0x12f4528[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12f4688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x12f4748[shape=record, label="  ret i32 0"];
	Node0x12f1a08 -> Node0x12f1a88;
	Node0x12f1a88 -> Node0x12f1b18;
	Node0x12f1b18 -> Node0x12f1f78;
	Node0x12f1f78 -> Node0x12f2058;
	Node0x12f2058 -> Node0x12f2178;
	Node0x12f2178 -> Node0x12f23b0;
	Node0x12f23b0 -> Node0x12f2468;
	Node0x12f2468 -> Node0x12f33d8;
	Node0x12f33d8 -> Node0x12f3a60;
	Node0x12f3a60 -> Node0x12f3ad0;
	Node0x12f3ad0 -> Node0x12f3b40;
	Node0x12f3b40 -> Node0x12f3bb0;
	Node0x12f3bb0 -> Node0x12f3c20;
	Node0x12f3c20 -> Node0x12f3c90;
	Node0x12f3c90 -> Node0x12f3d00;
	Node0x12f3d00 -> Node0x12f3d70;
	Node0x12f3d70 -> Node0x12f3de0;
	Node0x12f3de0 -> Node0x12f3e50;
	Node0x12f3e50 -> Node0x12f3ec0;
	Node0x12f3ec0 -> Node0x12f3f30;
	Node0x12f3f30 -> Node0x12f3fa0;
	Node0x12f3fa0 -> Node0x12f4010;
	Node0x12f4010 -> Node0x12f4080;
	Node0x12f4080 -> Node0x12f40f0;
	Node0x12f40f0 -> Node0x12f4160;
	Node0x12f4160 -> Node0x12f41d0;
	Node0x12f41d0 -> Node0x12f4240;
	Node0x12f4240 -> Node0x12929d8;
	Node0x12929d8 -> Node0x12f42d0;
	Node0x12f42d0 -> Node0x12f4528;
	Node0x12f4528 -> Node0x12f4688;
	Node0x12f4688 -> Node0x12f4748;
edge [color=red]
	Node0x12f1a08 -> Node0x12f1b18;
	Node0x12f1b18 -> Node0x12f1f78;
	Node0x12f1a88 -> Node0x12f2058;
	Node0x12f2058 -> Node0x12f2178;
	Node0x12f1a08 -> Node0x12f23b0;
	Node0x12f1a88 -> Node0x12f23b0;
	Node0x12f1a08 -> Node0x12f2468;
	Node0x12f1a88 -> Node0x12f33d8;
	Node0x12f33d8 -> Node0x12f3a60;
	Node0x12f2468 -> Node0x12f3ad0;
	Node0x12f3a60 -> Node0x12f3ad0;
	Node0x12f2468 -> Node0x12f3b40;
	Node0x12f3a60 -> Node0x12f3b40;
	Node0x12f33d8 -> Node0x12f3bb0;
	Node0x12f3bb0 -> Node0x12f3c20;
	Node0x12f3b40 -> Node0x12f3c20;
	Node0x12f33d8 -> Node0x12f3c90;
	Node0x12f2468 -> Node0x12f3c90;
	Node0x12f3c20 -> Node0x12f3d00;
	Node0x12f3c90 -> Node0x12f3d00;
	Node0x12f3c90 -> Node0x12f3d70;
	Node0x12f3d70 -> Node0x12f3de0;
	Node0x12f3ad0 -> Node0x12f3e50;
	Node0x12f3e50 -> Node0x12f3ec0;
	Node0x12f3b40 -> Node0x12f3f30;
	Node0x12f33d8 -> Node0x12f3fa0;
	Node0x12f2468 -> Node0x12f3fa0;
	Node0x12f3fa0 -> Node0x12f4010;
	Node0x12f3d00 -> Node0x12f4080;
	Node0x12f3ec0 -> Node0x12f4080;
	Node0x12f4080 -> Node0x12f40f0;
	Node0x12f3f30 -> Node0x12f40f0;
	Node0x12f40f0 -> Node0x12f4160;
	Node0x12f4010 -> Node0x12f4160;
	Node0x12f4160 -> Node0x12f41d0;
	Node0x12f3de0 -> Node0x12f41d0;
	Node0x12f3ad0 -> Node0x12f4240;
	Node0x12f41d0 -> Node0x12f4240;
	Node0x12f4240 -> Node0x12929d8;
	Node0x12929d8 -> Node0x12f42d0;
	Node0x12f2058 -> Node0x12f4528;
	Node0x12f1b18 -> Node0x12f4688;
}
