digraph "DFG for'main' function" {
	Node0x1e1b868[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e1b8e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e1b978[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e1bdd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e1beb8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e1bfd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e1c210[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e1c2c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e1d238[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e1d8c0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1e1d930[shape=record, label="  %9 = and i32 %7, %6"];
	Node0x1e1d9a0[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x1e1da10[shape=record, label="  %11 = or i32 %10, 1"];
	Node0x1e1da80[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x1e1daf0[shape=record, label="  %13 = and i32 %6, %12"];
	Node0x1e1db60[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1e1dbd0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1e1dc40[shape=record, label="  %16 = or i32 %6, %12"];
	Node0x1e1dcb0[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x1e1dd20[shape=record, label="  %18 = add i32 %16, %7"];
	Node0x1e1dd90[shape=record, label="  %19 = sub i32 %17, %18"];
	Node0x1e1de00[shape=record, label="  %20 = add i32 %19, %14"];
	Node0x1e1de70[shape=record, label="  %21 = sub i32 %20, %10"];
	Node0x1e1dee0[shape=record, label="  %22 = add i32 %21, %15"];
	Node0x1e1df50[shape=record, label="  %23 = add i32 %22, %11"];
	Node0x1e1dfc0[shape=record, label="  %24 = icmp eq i32 %8, %23"];
	Node0x1dbc9d8[shape=record, label="  %25 = select i1 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e1e050[shape=record, label="  %26 = call i32 @puts(i8* nonnull dereferenceable(1) %25) #5"];
	Node0x1e1e2a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e1e408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e1e4c8[shape=record, label="  ret i32 0"];
	Node0x1e1b868 -> Node0x1e1b8e8;
	Node0x1e1b8e8 -> Node0x1e1b978;
	Node0x1e1b978 -> Node0x1e1bdd8;
	Node0x1e1bdd8 -> Node0x1e1beb8;
	Node0x1e1beb8 -> Node0x1e1bfd8;
	Node0x1e1bfd8 -> Node0x1e1c210;
	Node0x1e1c210 -> Node0x1e1c2c8;
	Node0x1e1c2c8 -> Node0x1e1d238;
	Node0x1e1d238 -> Node0x1e1d8c0;
	Node0x1e1d8c0 -> Node0x1e1d930;
	Node0x1e1d930 -> Node0x1e1d9a0;
	Node0x1e1d9a0 -> Node0x1e1da10;
	Node0x1e1da10 -> Node0x1e1da80;
	Node0x1e1da80 -> Node0x1e1daf0;
	Node0x1e1daf0 -> Node0x1e1db60;
	Node0x1e1db60 -> Node0x1e1dbd0;
	Node0x1e1dbd0 -> Node0x1e1dc40;
	Node0x1e1dc40 -> Node0x1e1dcb0;
	Node0x1e1dcb0 -> Node0x1e1dd20;
	Node0x1e1dd20 -> Node0x1e1dd90;
	Node0x1e1dd90 -> Node0x1e1de00;
	Node0x1e1de00 -> Node0x1e1de70;
	Node0x1e1de70 -> Node0x1e1dee0;
	Node0x1e1dee0 -> Node0x1e1df50;
	Node0x1e1df50 -> Node0x1e1dfc0;
	Node0x1e1dfc0 -> Node0x1dbc9d8;
	Node0x1dbc9d8 -> Node0x1e1e050;
	Node0x1e1e050 -> Node0x1e1e2a8;
	Node0x1e1e2a8 -> Node0x1e1e408;
	Node0x1e1e408 -> Node0x1e1e4c8;
edge [color=red]
	Node0x1e1b868 -> Node0x1e1b978;
	Node0x1e1b978 -> Node0x1e1bdd8;
	Node0x1e1b8e8 -> Node0x1e1beb8;
	Node0x1e1beb8 -> Node0x1e1bfd8;
	Node0x1e1b868 -> Node0x1e1c210;
	Node0x1e1b8e8 -> Node0x1e1c210;
	Node0x1e1b868 -> Node0x1e1c2c8;
	Node0x1e1b8e8 -> Node0x1e1d238;
	Node0x1e1d238 -> Node0x1e1d8c0;
	Node0x1e1c2c8 -> Node0x1e1d8c0;
	Node0x1e1d238 -> Node0x1e1d930;
	Node0x1e1c2c8 -> Node0x1e1d930;
	Node0x1e1d930 -> Node0x1e1d9a0;
	Node0x1e1d9a0 -> Node0x1e1da10;
	Node0x1e1d238 -> Node0x1e1da80;
	Node0x1e1c2c8 -> Node0x1e1daf0;
	Node0x1e1da80 -> Node0x1e1daf0;
	Node0x1e1daf0 -> Node0x1e1db60;
	Node0x1e1db60 -> Node0x1e1dbd0;
	Node0x1e1c2c8 -> Node0x1e1dc40;
	Node0x1e1da80 -> Node0x1e1dc40;
	Node0x1e1d238 -> Node0x1e1dcb0;
	Node0x1e1c2c8 -> Node0x1e1dcb0;
	Node0x1e1dc40 -> Node0x1e1dd20;
	Node0x1e1d238 -> Node0x1e1dd20;
	Node0x1e1dcb0 -> Node0x1e1dd90;
	Node0x1e1dd20 -> Node0x1e1dd90;
	Node0x1e1dd90 -> Node0x1e1de00;
	Node0x1e1db60 -> Node0x1e1de00;
	Node0x1e1de00 -> Node0x1e1de70;
	Node0x1e1d9a0 -> Node0x1e1de70;
	Node0x1e1de70 -> Node0x1e1dee0;
	Node0x1e1dbd0 -> Node0x1e1dee0;
	Node0x1e1dee0 -> Node0x1e1df50;
	Node0x1e1da10 -> Node0x1e1df50;
	Node0x1e1d8c0 -> Node0x1e1dfc0;
	Node0x1e1df50 -> Node0x1e1dfc0;
	Node0x1e1dfc0 -> Node0x1dbc9d8;
	Node0x1dbc9d8 -> Node0x1e1e050;
	Node0x1e1beb8 -> Node0x1e1e2a8;
	Node0x1e1b978 -> Node0x1e1e408;
}
