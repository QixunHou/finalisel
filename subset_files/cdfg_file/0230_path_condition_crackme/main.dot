digraph "DFG for'main' function" {
	Node0x2349d28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2349da8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2349e38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2349e98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x2349f48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x234a378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x234a458[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x234a558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x234a618[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x234a6c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x234a788[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x234a838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2344b70[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x234aa38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x234b9a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x234c018[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x234c078[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x234c0f0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x234c160[shape=record, label="  %15 = and i32 %11, %14"];
	Node0x234c1d0[shape=record, label="  %16 = add i32 %15, 1"];
	Node0x234c240[shape=record, label="  %17 = xor i32 %13, %10"];
	Node0x234c2b0[shape=record, label="  %18 = sub i32 %16, %17"];
	Node0x234c320[shape=record, label="  %19 = and i32 %12, %11"];
	Node0x234c390[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x234c400[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x234c470[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x234c4e0[shape=record, label="  %23 = xor i32 %11, -1"];
	Node0x234c550[shape=record, label="  %24 = and i32 %12, %23"];
	Node0x234c5c0[shape=record, label="  %25 = shl i32 %10, 1"];
	Node0x234c630[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0x234c6a0[shape=record, label="  %27 = or i32 %13, %26"];
	Node0x234c710[shape=record, label="  %28 = and i32 %13, %10"];
	Node0x234c780[shape=record, label="  %29 = or i32 %13, %10"];
	Node0x234c7f0[shape=record, label="  %30 = and i32 %13, %26"];
	Node0x234c860[shape=record, label="  %31 = shl i32 %29, 2"];
	Node0x234c8d0[shape=record, label="  %32 = xor i32 %31, -4"];
	Node0x234c940[shape=record, label="  %33 = xor i32 %27, -1"];
	Node0x234c9b0[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0x234ca20[shape=record, label="  %35 = mul i32 %28, 6"];
	Node0x234ca90[shape=record, label="  %36 = add i32 %30, %22"];
	Node0x234cb00[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x234cb70[shape=record, label="  %38 = add i32 %15, %12"];
	Node0x234cbe0[shape=record, label="  %39 = add i32 %38, %20"];
	Node0x234cc50[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x234ccf0[shape=record, label="  %41 = sub i32 7, %25"];
	Node0x234cd60[shape=record, label="  %42 = add i32 %41, %19"];
	Node0x234cdd0[shape=record, label="  %43 = sub i32 %42, %24"];
	Node0x234ce40[shape=record, label="  %44 = sub i32 %43, %27"];
	Node0x234ceb0[shape=record, label="  %45 = add i32 %44, %28"];
	Node0x234cf20[shape=record, label="  %46 = sub i32 %45, %29"];
	Node0x234cf90[shape=record, label="  %47 = add i32 %46, %30"];
	Node0x234d000[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x234d070[shape=record, label="  %49 = add i32 %48, %35"];
	Node0x234d0e0[shape=record, label="  %50 = add i32 %49, %32"];
	Node0x234d150[shape=record, label="  %51 = add i32 %50, %37"];
	Node0x234d1c0[shape=record, label="  %52 = add i32 %51, %40"];
	Node0x234d230[shape=record, label="  %53 = icmp eq i32 %18, %52"];
	Node0x22e98b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x234d2c0[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x234d568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x234d6c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x234d7d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x234d8e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x234d9a8[shape=record, label="  ret i32 0"];
	Node0x2349d28 -> Node0x2349da8;
	Node0x2349da8 -> Node0x2349e38;
	Node0x2349e38 -> Node0x2349e98;
	Node0x2349e98 -> Node0x2349f48;
	Node0x2349f48 -> Node0x234a378;
	Node0x234a378 -> Node0x234a458;
	Node0x234a458 -> Node0x234a558;
	Node0x234a558 -> Node0x234a618;
	Node0x234a618 -> Node0x234a6c8;
	Node0x234a6c8 -> Node0x234a788;
	Node0x234a788 -> Node0x234a838;
	Node0x234a838 -> Node0x2344b70;
	Node0x2344b70 -> Node0x234aa38;
	Node0x234aa38 -> Node0x234b9a8;
	Node0x234b9a8 -> Node0x234c018;
	Node0x234c018 -> Node0x234c078;
	Node0x234c078 -> Node0x234c0f0;
	Node0x234c0f0 -> Node0x234c160;
	Node0x234c160 -> Node0x234c1d0;
	Node0x234c1d0 -> Node0x234c240;
	Node0x234c240 -> Node0x234c2b0;
	Node0x234c2b0 -> Node0x234c320;
	Node0x234c320 -> Node0x234c390;
	Node0x234c390 -> Node0x234c400;
	Node0x234c400 -> Node0x234c470;
	Node0x234c470 -> Node0x234c4e0;
	Node0x234c4e0 -> Node0x234c550;
	Node0x234c550 -> Node0x234c5c0;
	Node0x234c5c0 -> Node0x234c630;
	Node0x234c630 -> Node0x234c6a0;
	Node0x234c6a0 -> Node0x234c710;
	Node0x234c710 -> Node0x234c780;
	Node0x234c780 -> Node0x234c7f0;
	Node0x234c7f0 -> Node0x234c860;
	Node0x234c860 -> Node0x234c8d0;
	Node0x234c8d0 -> Node0x234c940;
	Node0x234c940 -> Node0x234c9b0;
	Node0x234c9b0 -> Node0x234ca20;
	Node0x234ca20 -> Node0x234ca90;
	Node0x234ca90 -> Node0x234cb00;
	Node0x234cb00 -> Node0x234cb70;
	Node0x234cb70 -> Node0x234cbe0;
	Node0x234cbe0 -> Node0x234cc50;
	Node0x234cc50 -> Node0x234ccf0;
	Node0x234ccf0 -> Node0x234cd60;
	Node0x234cd60 -> Node0x234cdd0;
	Node0x234cdd0 -> Node0x234ce40;
	Node0x234ce40 -> Node0x234ceb0;
	Node0x234ceb0 -> Node0x234cf20;
	Node0x234cf20 -> Node0x234cf90;
	Node0x234cf90 -> Node0x234d000;
	Node0x234d000 -> Node0x234d070;
	Node0x234d070 -> Node0x234d0e0;
	Node0x234d0e0 -> Node0x234d150;
	Node0x234d150 -> Node0x234d1c0;
	Node0x234d1c0 -> Node0x234d230;
	Node0x234d230 -> Node0x22e98b8;
	Node0x22e98b8 -> Node0x234d2c0;
	Node0x234d2c0 -> Node0x234d568;
	Node0x234d568 -> Node0x234d6c8;
	Node0x234d6c8 -> Node0x234d7d8;
	Node0x234d7d8 -> Node0x234d8e8;
	Node0x234d8e8 -> Node0x234d9a8;
edge [color=red]
	Node0x2349d28 -> Node0x2349f48;
	Node0x2349f48 -> Node0x234a378;
	Node0x2349da8 -> Node0x234a458;
	Node0x234a458 -> Node0x234a558;
	Node0x2349e38 -> Node0x234a618;
	Node0x234a618 -> Node0x234a6c8;
	Node0x2349e98 -> Node0x234a788;
	Node0x234a788 -> Node0x234a838;
	Node0x2349d28 -> Node0x2344b70;
	Node0x2349da8 -> Node0x2344b70;
	Node0x2349e38 -> Node0x2344b70;
	Node0x2349e98 -> Node0x2344b70;
	Node0x2349d28 -> Node0x234aa38;
	Node0x2349da8 -> Node0x234b9a8;
	Node0x2349e38 -> Node0x234c018;
	Node0x2349e98 -> Node0x234c078;
	Node0x234c018 -> Node0x234c0f0;
	Node0x234b9a8 -> Node0x234c160;
	Node0x234c0f0 -> Node0x234c160;
	Node0x234c160 -> Node0x234c1d0;
	Node0x234c078 -> Node0x234c240;
	Node0x234aa38 -> Node0x234c240;
	Node0x234c1d0 -> Node0x234c2b0;
	Node0x234c240 -> Node0x234c2b0;
	Node0x234c018 -> Node0x234c320;
	Node0x234b9a8 -> Node0x234c320;
	Node0x234c018 -> Node0x234c390;
	Node0x234b9a8 -> Node0x234c390;
	Node0x234c018 -> Node0x234c400;
	Node0x234b9a8 -> Node0x234c400;
	Node0x234c400 -> Node0x234c470;
	Node0x234b9a8 -> Node0x234c4e0;
	Node0x234c018 -> Node0x234c550;
	Node0x234c4e0 -> Node0x234c550;
	Node0x234aa38 -> Node0x234c5c0;
	Node0x234aa38 -> Node0x234c630;
	Node0x234c078 -> Node0x234c6a0;
	Node0x234c630 -> Node0x234c6a0;
	Node0x234c078 -> Node0x234c710;
	Node0x234aa38 -> Node0x234c710;
	Node0x234c078 -> Node0x234c780;
	Node0x234aa38 -> Node0x234c780;
	Node0x234c078 -> Node0x234c7f0;
	Node0x234c630 -> Node0x234c7f0;
	Node0x234c780 -> Node0x234c860;
	Node0x234c860 -> Node0x234c8d0;
	Node0x234c6a0 -> Node0x234c940;
	Node0x234c940 -> Node0x234c9b0;
	Node0x234c710 -> Node0x234ca20;
	Node0x234c7f0 -> Node0x234ca90;
	Node0x234c470 -> Node0x234ca90;
	Node0x234ca90 -> Node0x234cb00;
	Node0x234c160 -> Node0x234cb70;
	Node0x234c018 -> Node0x234cb70;
	Node0x234cb70 -> Node0x234cbe0;
	Node0x234c390 -> Node0x234cbe0;
	Node0x234cbe0 -> Node0x234cc50;
	Node0x234c5c0 -> Node0x234ccf0;
	Node0x234ccf0 -> Node0x234cd60;
	Node0x234c320 -> Node0x234cd60;
	Node0x234cd60 -> Node0x234cdd0;
	Node0x234c550 -> Node0x234cdd0;
	Node0x234cdd0 -> Node0x234ce40;
	Node0x234c6a0 -> Node0x234ce40;
	Node0x234ce40 -> Node0x234ceb0;
	Node0x234c710 -> Node0x234ceb0;
	Node0x234ceb0 -> Node0x234cf20;
	Node0x234c780 -> Node0x234cf20;
	Node0x234cf20 -> Node0x234cf90;
	Node0x234c7f0 -> Node0x234cf90;
	Node0x234cf90 -> Node0x234d000;
	Node0x234c9b0 -> Node0x234d000;
	Node0x234d000 -> Node0x234d070;
	Node0x234ca20 -> Node0x234d070;
	Node0x234d070 -> Node0x234d0e0;
	Node0x234c8d0 -> Node0x234d0e0;
	Node0x234d0e0 -> Node0x234d150;
	Node0x234cb00 -> Node0x234d150;
	Node0x234d150 -> Node0x234d1c0;
	Node0x234cc50 -> Node0x234d1c0;
	Node0x234c2b0 -> Node0x234d230;
	Node0x234d1c0 -> Node0x234d230;
	Node0x234d230 -> Node0x22e98b8;
	Node0x22e98b8 -> Node0x234d2c0;
	Node0x234a788 -> Node0x234d568;
	Node0x234a618 -> Node0x234d6c8;
	Node0x234a458 -> Node0x234d7d8;
	Node0x2349f48 -> Node0x234d8e8;
}
