digraph "DFG for'main' function" {
	Node0xac6ef8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xac6f78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xac7008[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xac7468[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xac7548[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xac7668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xac78a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xac7958[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xac88c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xac8f50[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xac8fc0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0xac9030[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0xac90a0[shape=record, label="  %11 = or i32 %10, 1"];
	Node0xac9110[shape=record, label="  %12 = and i32 %7, %6"];
	Node0xac9180[shape=record, label="  %13 = add i32 %7, 2"];
	Node0xac91f0[shape=record, label="  %14 = shl i32 %6, 1"];
	Node0xac9260[shape=record, label="  %15 = shl i32 %7, 1"];
	Node0xac92d0[shape=record, label="  %16 = xor i32 %7, %6"];
	Node0xac9340[shape=record, label="  %17 = and i32 %6, %8"];
	Node0xac93b0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0xac9420[shape=record, label="  %19 = or i32 %7, %6"];
	Node0xac9490[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0xac9500[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0xac9570[shape=record, label="  %22 = xor i32 %10, -2"];
	Node0xac95e0[shape=record, label="  %23 = mul i32 %17, 6"];
	Node0xac9650[shape=record, label="  %24 = shl i32 %12, 2"];
	Node0xac96c0[shape=record, label="  %25 = sub i32 %13, %14"];
	Node0xac9730[shape=record, label="  %26 = add i32 %25, %12"];
	Node0xac97a0[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0xac9810[shape=record, label="  %28 = sub i32 %27, %16"];
	Node0xac9880[shape=record, label="  %29 = add i32 %28, %18"];
	Node0xac98f0[shape=record, label="  %30 = add i32 %29, %23"];
	Node0xac9960[shape=record, label="  %31 = add i32 %30, %24"];
	Node0xac99d0[shape=record, label="  %32 = add i32 %31, %21"];
	Node0xac9c50[shape=record, label="  %33 = add i32 %32, %22"];
	Node0xac9cc0[shape=record, label="  %34 = icmp eq i32 %11, %33"];
	Node0xa679d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xac9d50[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0xac9fa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xaca108[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xaca1c8[shape=record, label="  ret i32 0"];
	Node0xac6ef8 -> Node0xac6f78;
	Node0xac6f78 -> Node0xac7008;
	Node0xac7008 -> Node0xac7468;
	Node0xac7468 -> Node0xac7548;
	Node0xac7548 -> Node0xac7668;
	Node0xac7668 -> Node0xac78a0;
	Node0xac78a0 -> Node0xac7958;
	Node0xac7958 -> Node0xac88c8;
	Node0xac88c8 -> Node0xac8f50;
	Node0xac8f50 -> Node0xac8fc0;
	Node0xac8fc0 -> Node0xac9030;
	Node0xac9030 -> Node0xac90a0;
	Node0xac90a0 -> Node0xac9110;
	Node0xac9110 -> Node0xac9180;
	Node0xac9180 -> Node0xac91f0;
	Node0xac91f0 -> Node0xac9260;
	Node0xac9260 -> Node0xac92d0;
	Node0xac92d0 -> Node0xac9340;
	Node0xac9340 -> Node0xac93b0;
	Node0xac93b0 -> Node0xac9420;
	Node0xac9420 -> Node0xac9490;
	Node0xac9490 -> Node0xac9500;
	Node0xac9500 -> Node0xac9570;
	Node0xac9570 -> Node0xac95e0;
	Node0xac95e0 -> Node0xac9650;
	Node0xac9650 -> Node0xac96c0;
	Node0xac96c0 -> Node0xac9730;
	Node0xac9730 -> Node0xac97a0;
	Node0xac97a0 -> Node0xac9810;
	Node0xac9810 -> Node0xac9880;
	Node0xac9880 -> Node0xac98f0;
	Node0xac98f0 -> Node0xac9960;
	Node0xac9960 -> Node0xac99d0;
	Node0xac99d0 -> Node0xac9c50;
	Node0xac9c50 -> Node0xac9cc0;
	Node0xac9cc0 -> Node0xa679d8;
	Node0xa679d8 -> Node0xac9d50;
	Node0xac9d50 -> Node0xac9fa8;
	Node0xac9fa8 -> Node0xaca108;
	Node0xaca108 -> Node0xaca1c8;
edge [color=red]
	Node0xac6ef8 -> Node0xac7008;
	Node0xac7008 -> Node0xac7468;
	Node0xac6f78 -> Node0xac7548;
	Node0xac7548 -> Node0xac7668;
	Node0xac6ef8 -> Node0xac78a0;
	Node0xac6f78 -> Node0xac78a0;
	Node0xac6ef8 -> Node0xac7958;
	Node0xac6f78 -> Node0xac88c8;
	Node0xac88c8 -> Node0xac8f50;
	Node0xac7958 -> Node0xac8fc0;
	Node0xac8f50 -> Node0xac8fc0;
	Node0xac8fc0 -> Node0xac9030;
	Node0xac9030 -> Node0xac90a0;
	Node0xac88c8 -> Node0xac9110;
	Node0xac7958 -> Node0xac9110;
	Node0xac88c8 -> Node0xac9180;
	Node0xac7958 -> Node0xac91f0;
	Node0xac88c8 -> Node0xac9260;
	Node0xac88c8 -> Node0xac92d0;
	Node0xac7958 -> Node0xac92d0;
	Node0xac7958 -> Node0xac9340;
	Node0xac8f50 -> Node0xac9340;
	Node0xac9340 -> Node0xac93b0;
	Node0xac88c8 -> Node0xac9420;
	Node0xac7958 -> Node0xac9420;
	Node0xac9420 -> Node0xac9490;
	Node0xac9490 -> Node0xac9500;
	Node0xac9030 -> Node0xac9570;
	Node0xac9340 -> Node0xac95e0;
	Node0xac9110 -> Node0xac9650;
	Node0xac9180 -> Node0xac96c0;
	Node0xac91f0 -> Node0xac96c0;
	Node0xac96c0 -> Node0xac9730;
	Node0xac9110 -> Node0xac9730;
	Node0xac9730 -> Node0xac97a0;
	Node0xac9260 -> Node0xac97a0;
	Node0xac97a0 -> Node0xac9810;
	Node0xac92d0 -> Node0xac9810;
	Node0xac9810 -> Node0xac9880;
	Node0xac93b0 -> Node0xac9880;
	Node0xac9880 -> Node0xac98f0;
	Node0xac95e0 -> Node0xac98f0;
	Node0xac98f0 -> Node0xac9960;
	Node0xac9650 -> Node0xac9960;
	Node0xac9960 -> Node0xac99d0;
	Node0xac9500 -> Node0xac99d0;
	Node0xac99d0 -> Node0xac9c50;
	Node0xac9570 -> Node0xac9c50;
	Node0xac90a0 -> Node0xac9cc0;
	Node0xac9c50 -> Node0xac9cc0;
	Node0xac9cc0 -> Node0xa679d8;
	Node0xa679d8 -> Node0xac9d50;
	Node0xac7548 -> Node0xac9fa8;
	Node0xac7008 -> Node0xaca108;
}
