digraph "DFG for'crackme' function" {
	Node0x1facd60[shape=record, label="  %5 = xor i32 %0, -1"];
	Node0x1face00[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x1face70[shape=record, label="  %7 = sub i32 1, %6"];
	Node0x1facee0[shape=record, label="  %8 = add i32 %7, %2"];
	Node0x1facf50[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x1facfc0[shape=record, label="  %10 = or i32 %9, %1"];
	Node0x1fad030[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x1fad0a0[shape=record, label="  %12 = shl i32 %1, 1"];
	Node0x1fad140[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x1fad1b0[shape=record, label="  %14 = xor i32 %9, %1"];
	Node0x1fad220[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x1fad290[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x1fad330[shape=record, label="  %17 = mul i32 %16, -6"];
	Node0x1fad3a0[shape=record, label="  %18 = and i32 %9, %1"];
	Node0x1fad440[shape=record, label="  %19 = mul i32 %18, -9"];
	Node0x1fad4b0[shape=record, label="  %20 = and i32 %2, %1"];
	Node0x1fad550[shape=record, label="  %21 = shl i32 %20, 3"];
	Node0x1fad5c0[shape=record, label="  %22 = xor i32 %5, %3"];
	Node0x1fad630[shape=record, label="  %23 = shl i32 %0, 1"];
	Node0x1fad6a0[shape=record, label="  %24 = and i32 %5, %3"];
	Node0x1fad710[shape=record, label="  %25 = and i32 %3, %0"];
	Node0x1fad7b0[shape=record, label="  %26 = shl i32 %25, 2"];
	Node0x1fad850[shape=record, label="  %27 = xor i32 %26, -4"];
	Node0x1fad8c0[shape=record, label="  %28 = or i32 %3, %0"];
	Node0x1fad930[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x1fad9d0[shape=record, label="  %30 = xor i32 %3, 2147483647"];
	Node0x1fada40[shape=record, label="  %31 = and i32 %30, %0"];
	Node0x1fadab0[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x1fadd30[shape=record, label="  %33 = add i32 %24, %29"];
	Node0x1faddd0[shape=record, label="  %34 = mul i32 %33, -7"];
	Node0x1fade40[shape=record, label="  %35 = sub nuw nsw i32 -2, %23"];
	Node0x1fadeb0[shape=record, label="  %36 = add i32 %35, %12"];
	Node0x1fadf20[shape=record, label="  %37 = add i32 %36, %9"];
	Node0x1fadf90[shape=record, label="  %38 = sub i32 %37, %13"];
	Node0x1fae000[shape=record, label="  %39 = add i32 %38, %14"];
	Node0x1fae070[shape=record, label="  %40 = add i32 %39, %10"];
	Node0x1fae0e0[shape=record, label="  %41 = add i32 %40, %11"];
	Node0x1fae150[shape=record, label="  %42 = add i32 %41, %17"];
	Node0x1fae1c0[shape=record, label="  %43 = add i32 %42, %19"];
	Node0x1fae230[shape=record, label="  %44 = sub i32 %43, %21"];
	Node0x1fae2a0[shape=record, label="  %45 = add i32 %44, %22"];
	Node0x1fae310[shape=record, label="  %46 = add i32 %45, %24"];
	Node0x1fae380[shape=record, label="  %47 = add i32 %46, %25"];
	Node0x1fae3f0[shape=record, label="  %48 = add i32 %47, %27"];
	Node0x1fae460[shape=record, label="  %49 = sub i32 %48, %32"];
	Node0x1fae4d0[shape=record, label="  %50 = add i32 %49, %34"];
	Node0x1fae540[shape=record, label="  %51 = icmp eq i32 %8, %50"];
	Node0x1f4d268[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1fae9e0[shape=record, label="  %53 = tail call i32 @puts(i8* nonnull dereferenceable(1) %52)"];
	Node0x1faea30[shape=record, label="  ret void"];
	Node0x1facd60 -> Node0x1face00;
	Node0x1face00 -> Node0x1face70;
	Node0x1face70 -> Node0x1facee0;
	Node0x1facee0 -> Node0x1facf50;
	Node0x1facf50 -> Node0x1facfc0;
	Node0x1facfc0 -> Node0x1fad030;
	Node0x1fad030 -> Node0x1fad0a0;
	Node0x1fad0a0 -> Node0x1fad140;
	Node0x1fad140 -> Node0x1fad1b0;
	Node0x1fad1b0 -> Node0x1fad220;
	Node0x1fad220 -> Node0x1fad290;
	Node0x1fad290 -> Node0x1fad330;
	Node0x1fad330 -> Node0x1fad3a0;
	Node0x1fad3a0 -> Node0x1fad440;
	Node0x1fad440 -> Node0x1fad4b0;
	Node0x1fad4b0 -> Node0x1fad550;
	Node0x1fad550 -> Node0x1fad5c0;
	Node0x1fad5c0 -> Node0x1fad630;
	Node0x1fad630 -> Node0x1fad6a0;
	Node0x1fad6a0 -> Node0x1fad710;
	Node0x1fad710 -> Node0x1fad7b0;
	Node0x1fad7b0 -> Node0x1fad850;
	Node0x1fad850 -> Node0x1fad8c0;
	Node0x1fad8c0 -> Node0x1fad930;
	Node0x1fad930 -> Node0x1fad9d0;
	Node0x1fad9d0 -> Node0x1fada40;
	Node0x1fada40 -> Node0x1fadab0;
	Node0x1fadab0 -> Node0x1fadd30;
	Node0x1fadd30 -> Node0x1faddd0;
	Node0x1faddd0 -> Node0x1fade40;
	Node0x1fade40 -> Node0x1fadeb0;
	Node0x1fadeb0 -> Node0x1fadf20;
	Node0x1fadf20 -> Node0x1fadf90;
	Node0x1fadf90 -> Node0x1fae000;
	Node0x1fae000 -> Node0x1fae070;
	Node0x1fae070 -> Node0x1fae0e0;
	Node0x1fae0e0 -> Node0x1fae150;
	Node0x1fae150 -> Node0x1fae1c0;
	Node0x1fae1c0 -> Node0x1fae230;
	Node0x1fae230 -> Node0x1fae2a0;
	Node0x1fae2a0 -> Node0x1fae310;
	Node0x1fae310 -> Node0x1fae380;
	Node0x1fae380 -> Node0x1fae3f0;
	Node0x1fae3f0 -> Node0x1fae460;
	Node0x1fae460 -> Node0x1fae4d0;
	Node0x1fae4d0 -> Node0x1fae540;
	Node0x1fae540 -> Node0x1f4d268;
	Node0x1f4d268 -> Node0x1fae9e0;
	Node0x1fae9e0 -> Node0x1faea30;
edge [color=red]
	Node0x1facd60 -> Node0x1face00;
	Node0x1face00 -> Node0x1face70;
	Node0x1face70 -> Node0x1facee0;
	Node0x1facf50 -> Node0x1facfc0;
	Node0x1facfc0 -> Node0x1fad030;
	Node0x1fad0a0 -> Node0x1fad140;
	Node0x1facf50 -> Node0x1fad1b0;
	Node0x1fad220 -> Node0x1fad290;
	Node0x1fad290 -> Node0x1fad330;
	Node0x1facf50 -> Node0x1fad3a0;
	Node0x1fad3a0 -> Node0x1fad440;
	Node0x1fad4b0 -> Node0x1fad550;
	Node0x1facd60 -> Node0x1fad5c0;
	Node0x1facd60 -> Node0x1fad6a0;
	Node0x1fad710 -> Node0x1fad7b0;
	Node0x1fad7b0 -> Node0x1fad850;
	Node0x1fad8c0 -> Node0x1fad930;
	Node0x1fad9d0 -> Node0x1fada40;
	Node0x1fada40 -> Node0x1fadab0;
	Node0x1fad6a0 -> Node0x1fadd30;
	Node0x1fad930 -> Node0x1fadd30;
	Node0x1fadd30 -> Node0x1faddd0;
	Node0x1fad630 -> Node0x1fade40;
	Node0x1fade40 -> Node0x1fadeb0;
	Node0x1fad0a0 -> Node0x1fadeb0;
	Node0x1fadeb0 -> Node0x1fadf20;
	Node0x1facf50 -> Node0x1fadf20;
	Node0x1fadf20 -> Node0x1fadf90;
	Node0x1fad140 -> Node0x1fadf90;
	Node0x1fadf90 -> Node0x1fae000;
	Node0x1fad1b0 -> Node0x1fae000;
	Node0x1fae000 -> Node0x1fae070;
	Node0x1facfc0 -> Node0x1fae070;
	Node0x1fae070 -> Node0x1fae0e0;
	Node0x1fad030 -> Node0x1fae0e0;
	Node0x1fae0e0 -> Node0x1fae150;
	Node0x1fad330 -> Node0x1fae150;
	Node0x1fae150 -> Node0x1fae1c0;
	Node0x1fad440 -> Node0x1fae1c0;
	Node0x1fae1c0 -> Node0x1fae230;
	Node0x1fad550 -> Node0x1fae230;
	Node0x1fae230 -> Node0x1fae2a0;
	Node0x1fad5c0 -> Node0x1fae2a0;
	Node0x1fae2a0 -> Node0x1fae310;
	Node0x1fad6a0 -> Node0x1fae310;
	Node0x1fae310 -> Node0x1fae380;
	Node0x1fad710 -> Node0x1fae380;
	Node0x1fae380 -> Node0x1fae3f0;
	Node0x1fad850 -> Node0x1fae3f0;
	Node0x1fae3f0 -> Node0x1fae460;
	Node0x1fadab0 -> Node0x1fae460;
	Node0x1fae460 -> Node0x1fae4d0;
	Node0x1faddd0 -> Node0x1fae4d0;
	Node0x1facee0 -> Node0x1fae540;
	Node0x1fae4d0 -> Node0x1fae540;
	Node0x1fae540 -> Node0x1f4d268;
	Node0x1f4d268 -> Node0x1fae9e0;
}
