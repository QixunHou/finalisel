digraph "DFG for'main' function" {
	Node0x1ec9ad8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ec9b58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ec9be8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ec9c48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1ec9cf8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1eca128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1eca208[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1eca308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1eca3c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1eca478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1eca538[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1eca5e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1ec4760[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1eca7e8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ecb758[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ecbdc8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ecbe28[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1ecbf38[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1ecc198[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1ecc2f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1ecc408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ecc518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ecc5d8[shape=record, label="  ret i32 0"];
	Node0x1ec9ad8 -> Node0x1ec9b58;
	Node0x1ec9b58 -> Node0x1ec9be8;
	Node0x1ec9be8 -> Node0x1ec9c48;
	Node0x1ec9c48 -> Node0x1ec9cf8;
	Node0x1ec9cf8 -> Node0x1eca128;
	Node0x1eca128 -> Node0x1eca208;
	Node0x1eca208 -> Node0x1eca308;
	Node0x1eca308 -> Node0x1eca3c8;
	Node0x1eca3c8 -> Node0x1eca478;
	Node0x1eca478 -> Node0x1eca538;
	Node0x1eca538 -> Node0x1eca5e8;
	Node0x1eca5e8 -> Node0x1ec4760;
	Node0x1ec4760 -> Node0x1eca7e8;
	Node0x1eca7e8 -> Node0x1ecb758;
	Node0x1ecb758 -> Node0x1ecbdc8;
	Node0x1ecbdc8 -> Node0x1ecbe28;
	Node0x1ecbe28 -> Node0x1ecbf38;
	Node0x1ecbf38 -> Node0x1ecc198;
	Node0x1ecc198 -> Node0x1ecc2f8;
	Node0x1ecc2f8 -> Node0x1ecc408;
	Node0x1ecc408 -> Node0x1ecc518;
	Node0x1ecc518 -> Node0x1ecc5d8;
edge [color=red]
	Node0x1ec9ad8 -> Node0x1ec9cf8;
	Node0x1ec9cf8 -> Node0x1eca128;
	Node0x1ec9b58 -> Node0x1eca208;
	Node0x1eca208 -> Node0x1eca308;
	Node0x1ec9be8 -> Node0x1eca3c8;
	Node0x1eca3c8 -> Node0x1eca478;
	Node0x1ec9c48 -> Node0x1eca538;
	Node0x1eca538 -> Node0x1eca5e8;
	Node0x1ec9ad8 -> Node0x1ec4760;
	Node0x1ec9b58 -> Node0x1ec4760;
	Node0x1ec9be8 -> Node0x1ec4760;
	Node0x1ec9c48 -> Node0x1ec4760;
	Node0x1ec9ad8 -> Node0x1eca7e8;
	Node0x1ec9b58 -> Node0x1ecb758;
	Node0x1ec9be8 -> Node0x1ecbdc8;
	Node0x1ec9c48 -> Node0x1ecbe28;
	Node0x1eca7e8 -> Node0x1ecbf38;
	Node0x1ecb758 -> Node0x1ecbf38;
	Node0x1ecbdc8 -> Node0x1ecbf38;
	Node0x1ecbe28 -> Node0x1ecbf38;
	Node0x1eca538 -> Node0x1ecc198;
	Node0x1eca3c8 -> Node0x1ecc2f8;
	Node0x1eca208 -> Node0x1ecc408;
	Node0x1ec9cf8 -> Node0x1ecc518;
}
