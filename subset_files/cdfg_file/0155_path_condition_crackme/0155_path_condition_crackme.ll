; ModuleID = '../.././c_source_file/0155_path_condition_crackme.c'
source_filename = "../.././c_source_file/0155_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = or i32 %2, %0
  %9 = and i32 %8, %7
  %10 = and i32 %2, %1
  %11 = xor i32 %10, -1
  %12 = add i32 %9, %11
  %13 = xor i32 %5, -1
  %14 = or i32 %13, %3
  %15 = xor i32 %14, -1
  %16 = or i32 %15, %4
  %17 = add i32 %12, %16
  %18 = xor i32 %0, -1
  %19 = and i32 %10, %18
  %20 = or i32 %2, %1
  %21 = and i32 %20, %0
  %22 = or i32 %19, %21
  %23 = xor i32 %2, -1
  %24 = and i32 %7, %0
  %25 = xor i32 %24, -1
  %26 = and i32 %23, %25
  %27 = and i32 %7, %2
  %28 = and i32 %27, %0
  %29 = or i32 %7, %2
  %30 = and i32 %29, %18
  %31 = or i32 %28, %30
  %32 = xor i32 %2, %1
  %33 = xor i32 %32, -1
  %34 = or i32 %33, %0
  %35 = and i32 %1, %0
  %36 = or i32 %23, %0
  %37 = xor i32 %36, -1
  %38 = or i32 %35, %37
  %39 = shl i32 %38, 2
  %40 = xor i32 %36, %1
  %41 = shl i32 %40, 1
  %42 = or i32 %20, %18
  %43 = or i32 %1, %0
  %44 = xor i32 %2, %0
  %45 = and i32 %44, %43
  %46 = and i32 %32, %0
  %47 = xor i32 %20, -1
  %48 = or i32 %47, %0
  %49 = and i32 %23, %0
  %50 = xor i32 %1, %0
  %51 = or i32 %49, %50
  %52 = xor i32 %49, -1
  %53 = xor i32 %52, %1
  %54 = shl i32 %53, 1
  %55 = xor i32 %50, -1
  %56 = or i32 %44, %55
  %57 = and i32 %2, %0
  %58 = xor i32 %43, -1
  %59 = or i32 %57, %58
  %60 = or i32 %23, %1
  %61 = xor i32 %60, -1
  %62 = or i32 %61, %0
  %63 = shl i32 %62, 1
  %64 = or i32 %7, %0
  %65 = xor i32 %57, %64
  %66 = or i32 %33, %58
  %67 = xor i32 %44, -1
  %68 = or i32 %67, %58
  %69 = xor i32 %35, -1
  %70 = and i32 %67, %69
  %71 = xor i32 %10, %0
  %72 = and i32 %44, %1
  %73 = and i32 %43, %33
  %74 = xor i32 %29, %0
  %75 = or i32 %28, %74
  %76 = and i32 %32, %18
  %77 = and i32 %50, %67
  %78 = and i32 %67, %55
  %79 = shl i32 %0, 1
  %80 = xor i32 %64, -1
  %81 = shl i32 %80, 1
  %82 = and i32 %33, %18
  %83 = and i32 %64, %33
  %84 = xor i32 %33, %0
  %85 = xor i32 %57, -1
  %86 = and i32 %85, %7
  %87 = or i32 %24, %67
  %88 = and i32 %33, %69
  %89 = shl i32 %88, 2
  %90 = and i32 %23, %1
  %91 = and i32 %23, %69
  %92 = and i32 %50, %2
  %93 = or i32 %44, %24
  %94 = xor i32 %21, -1
  %95 = xor i32 %19, %94
  %96 = and i32 %33, %25
  %97 = xor i32 %36, %35
  %98 = and i32 %10, %0
  %99 = xor i32 %32, %0
  %100 = xor i32 %98, %99
  %101 = shl i32 %100, 1
  %102 = xor i32 %90, -1
  %103 = and i32 %102, %0
  %104 = or i32 %67, %80
  %105 = and i32 %11, %0
  %106 = and i32 %20, %18
  %107 = or i32 %98, %106
  %108 = or i32 %49, %61
  %109 = or i32 %24, %33
  %110 = or i32 %37, %55
  %111 = or i32 %44, %7
  %112 = and i32 %36, %50
  %113 = shl i32 %112, 1
  %114 = or i32 %44, %1
  %115 = or i32 %80, %2
  %116 = xor i32 %24, %11
  %117 = or i32 %32, %35
  %118 = or i32 %50, %37
  %119 = or i32 %19, %46
  %120 = and i32 %60, %0
  %121 = or i32 %49, %10
  %122 = and i32 %85, %55
  %123 = and i32 %50, %85
  %124 = shl i32 %123, 2
  %125 = xor i32 %74, -1
  %126 = xor i32 %28, %125
  %127 = xor i32 %102, %0
  %128 = and i32 %43, %23
  %129 = xor i32 %24, %2
  %130 = and i32 %43, %2
  %131 = or i32 %32, %80
  %132 = and i32 %69, %2
  %133 = shl i32 %132, 1
  %134 = xor i32 %64, %2
  %135 = or i32 %37, %7
  %136 = and i32 %32, %25
  %137 = xor i32 %8, -1
  %138 = add i32 %8, 1
  %139 = and i32 %23, %55
  %140 = and i32 %50, %52
  %141 = or i32 %35, %137
  %142 = or i32 %44, %80
  %143 = xor i32 %20, %0
  %144 = and i32 %27, %18
  %145 = and i32 %29, %0
  %146 = xor i32 %145, -1
  %147 = xor i32 %144, %146
  %148 = shl i32 %33, 1
  %149 = and i32 %52, %7
  %150 = and i32 %44, %50
  %151 = or i32 %90, %18
  %152 = xor i32 %11, %0
  %153 = or i32 %32, %0
  %154 = xor i32 %28, %153
  %155 = or i32 %32, %18
  %156 = xor i32 %144, %155
  %157 = shl i32 %156, 1
  %158 = or i32 %11, %0
  %159 = or i32 %57, %47
  %160 = xor i32 %57, %1
  %161 = or i32 %23, %80
  %162 = xor i32 %20, %35
  %163 = or i32 %35, %47
  %164 = and i32 %102, %18
  %165 = or i32 %137, %55
  %166 = or i32 %47, %18
  %167 = shl i32 %166, 1
  %168 = and i32 %64, %23
  %169 = add i32 %44, 1
  %170 = xor i32 %155, -1
  %171 = or i32 %144, %170
  %172 = add i32 %50, 1
  %173 = xor i32 %90, %0
  %174 = or i32 %49, %55
  %175 = or i32 %60, %0
  %176 = xor i32 %49, %60
  %177 = xor i32 %153, -1
  %178 = or i32 %28, %177
  %179 = shl i32 %49, 2
  %180 = or i32 %137, %7
  %181 = or i32 %35, %67
  %182 = shl i32 %50, 1
  %183 = xor i32 %8, %35
  %184 = or i32 %23, %55
  %185 = xor i32 %69, %2
  %186 = and i32 %36, %7
  %187 = xor i32 %43, %2
  %188 = xor i32 %8, %1
  %189 = xor i32 %57, %20
  %190 = xor i32 %85, %1
  %191 = shl i32 %102, 1
  %192 = or i32 %55, %2
  %193 = and i32 %36, %55
  %194 = shl i32 %193, 1
  %195 = or i32 %50, %67
  %196 = or i32 %57, %80
  %197 = xor i32 %35, %2
  %198 = shl i32 %197, 1
  %199 = or i32 %102, %18
  %200 = and i32 %44, %55
  %201 = shl i32 %44, 1
  %202 = xor i32 %24, %102
  %203 = or i32 %35, %23
  %204 = and i32 %47, %18
  %205 = mul i32 %204, 15
  %206 = and i32 %90, %18
  %207 = and i32 %47, %0
  %208 = and i32 %90, %0
  %209 = and i32 %61, %18
  %210 = and i32 %61, %0
  %211 = mul i32 %98, 11
  %212 = and i32 %4, %3
  %213 = or i32 %5, %4
  %214 = xor i32 %213, %212
  %215 = shl i32 %214, 1
  %216 = xor i32 %5, %3
  %217 = or i32 %216, %212
  %218 = xor i32 %4, -1
  %219 = and i32 %5, %3
  %220 = xor i32 %219, -1
  %221 = or i32 %220, %218
  %222 = and i32 %13, %3
  %223 = xor i32 %222, -1
  %224 = xor i32 %223, %4
  %225 = shl i32 %224, 1
  %226 = xor i32 %4, %3
  %227 = xor i32 %226, -1
  %228 = and i32 %13, %227
  %229 = xor i32 %3, -1
  %230 = and i32 %229, %5
  %231 = and i32 %230, %218
  %232 = xor i32 %216, -1
  %233 = and i32 %232, %4
  %234 = or i32 %231, %233
  %235 = xor i32 %5, %4
  %236 = or i32 %235, %227
  %237 = xor i32 %213, -1
  %238 = or i32 %237, %227
  %239 = and i32 %13, %4
  %240 = xor i32 %212, -1
  %241 = and i32 %232, %240
  %242 = add i32 %14, 1
  %243 = and i32 %5, %4
  %244 = or i32 %243, %226
  %245 = and i32 %229, %4
  %246 = xor i32 %245, -1
  %247 = and i32 %235, %246
  %248 = xor i32 %239, -1
  %249 = and i32 %248, %3
  %250 = or i32 %4, %3
  %251 = xor i32 %250, -1
  %252 = or i32 %235, %251
  %253 = or i32 %232, %4
  %254 = or i32 %5, %3
  %255 = xor i32 %254, %212
  %256 = shl i32 %255, 1
  %257 = or i32 %226, %5
  %258 = and i32 %213, %3
  %259 = or i32 %226, %13
  %260 = shl i32 %259, 1
  %261 = and i32 %230, %4
  %262 = xor i32 %216, %4
  %263 = or i32 %261, %262
  %264 = or i32 %251, %5
  %265 = xor i32 %243, -1
  %266 = or i32 %15, %218
  %267 = or i32 %229, %5
  %268 = and i32 %267, %218
  %269 = or i32 %261, %268
  %270 = or i32 %245, %5
  %271 = and i32 %235, %227
  %272 = or i32 %13, %251
  %273 = or i32 %229, %4
  %274 = xor i32 %273, -1
  %275 = or i32 %232, %274
  %276 = or i32 %13, %4
  %277 = xor i32 %276, -1
  %278 = or i32 %13, %274
  %279 = or i32 %274, %5
  %280 = or i32 %216, %245
  %281 = and i32 %250, %5
  %282 = and i32 %276, %3
  %283 = shl i32 %282, 1
  %284 = or i32 %239, %227
  %285 = xor i32 %14, %212
  %286 = or i32 %13, %227
  %287 = and i32 %213, %229
  %288 = xor i32 %235, -1
  %289 = or i32 %288, %229
  %290 = xor i32 %251, %5
  %291 = or i32 %220, %4
  %292 = or i32 %223, %4
  %293 = xor i32 %239, %3
  %294 = xor i32 %232, %4
  %295 = or i32 %277, %229
  %296 = or i32 %235, %212
  %297 = or i32 %288, %251
  %298 = and i32 %250, %232
  %299 = or i32 %288, %274
  %300 = shl i32 %299, 1
  %301 = xor i32 %262, -1
  %302 = xor i32 %261, %301
  %303 = or i32 %212, %15
  %304 = or i32 %226, %277
  %305 = or i32 %237, %3
  %306 = shl i32 %305, 1
  %307 = or i32 %212, %232
  %308 = and i32 %254, %4
  %309 = or i32 %219, %218
  %310 = and i32 %219, %4
  %311 = xor i32 %310, %262
  %312 = and i32 %216, %246
  %313 = xor i32 %237, %3
  %314 = and i32 %276, %227
  %315 = xor i32 %274, %5
  %316 = shl i32 %315, 1
  %317 = xor i32 %254, -1
  %318 = xor i32 %276, %212
  %319 = shl i32 %318, 1
  %320 = or i32 %222, %245
  %321 = and i32 %213, %227
  %322 = and i32 %265, %229
  %323 = and i32 %288, %229
  %324 = or i32 %226, %288
  %325 = and i32 %235, %226
  %326 = or i32 %239, %3
  %327 = and i32 %13, %246
  %328 = or i32 %216, %4
  %329 = and i32 %235, %3
  %330 = xor i32 %254, %4
  %331 = shl i32 %330, 1
  %332 = or i32 %277, %3
  %333 = or i32 %235, %226
  %334 = xor i32 %14, %4
  %335 = or i32 %243, %274
  %336 = and i32 %220, %218
  %337 = xor i32 %261, %328
  %338 = or i32 %235, %3
  %339 = xor i32 %239, %14
  %340 = and i32 %254, %218
  %341 = shl i32 %340, 1
  %342 = xor i32 %267, %4
  %343 = xor i32 %342, 2147483647
  %344 = xor i32 %343, %261
  %345 = or i32 %235, %245
  %346 = shl i32 %345, 2
  %347 = and i32 %276, %226
  %348 = shl i32 %13, 1
  %349 = or i32 %223, %218
  %350 = or i32 %243, %3
  %351 = or i32 %317, %218
  %352 = or i32 %235, %229
  %353 = and i32 %216, %250
  %354 = add i32 %273, 1
  %355 = xor i32 %246, %5
  %356 = shl i32 %355, 1
  %357 = or i32 %232, %251
  %358 = shl i32 %357, 2
  %359 = and i32 %14, %218
  %360 = xor i32 %213, %3
  %361 = xor i32 %276, %3
  %362 = or i32 %245, %232
  %363 = and i32 %216, %240
  %364 = or i32 %216, %274
  %365 = xor i32 %310, 2147483647
  %366 = xor i32 %365, %330
  %367 = shl i32 %366, 1
  %368 = xor i32 %222, %4
  %369 = xor i32 %250, %5
  %370 = or i32 %237, %229
  %371 = or i32 %261, %342
  %372 = shl i32 %371, 1
  %373 = or i32 %219, %4
  %374 = or i32 %310, %340
  %375 = add i32 %222, 1
  %376 = and i32 %216, %218
  %377 = xor i32 %365, %376
  %378 = and i32 %226, %288
  %379 = add i32 %212, 1
  %380 = xor i32 %243, %223
  %381 = and i32 %219, %218
  %382 = and i32 %216, %4
  %383 = or i32 %381, %382
  %384 = xor i32 %265, %3
  %385 = and i32 %288, %3
  %386 = and i32 %273, %5
  %387 = add i32 %3, 1
  %388 = or i32 %254, %218
  %389 = or i32 %226, %237
  %390 = or i32 %239, %219
  %391 = or i32 %243, %222
  %392 = xor i32 %239, %220
  %393 = xor i32 %245, %223
  %394 = or i32 %245, %288
  %395 = or i32 %243, %227
  %396 = or i32 %14, %4
  %397 = and i32 %265, %227
  %398 = xor i32 %268, -1
  %399 = xor i32 %261, %398
  %400 = and i32 %220, %4
  %401 = or i32 %222, %218
  %402 = or i32 %232, %218
  %403 = and i32 %288, %240
  %404 = shl i32 %403, 1
  %405 = or i32 %277, %227
  %406 = or i32 %216, %251
  %407 = and i32 %213, %226
  %408 = and i32 %232, %218
  %409 = and i32 %13, %240
  %410 = or i32 %310, %330
  %411 = or i32 %212, %277
  %412 = and i32 %235, %250
  %413 = and i32 %288, %227
  %414 = xor i32 %273, %5
  %415 = shl i32 %414, 1
  %416 = or i32 %212, %317
  %417 = or i32 %212, %237
  %418 = and i32 %227, %5
  %419 = xor i32 %248, %3
  %420 = shl i32 %419, 1
  %421 = or i32 %235, %274
  %422 = or i32 %239, %226
  %423 = and i32 %250, %288
  %424 = and i32 %232, %246
  %425 = xor i32 %381, -1
  %426 = xor i32 %382, %425
  %427 = and i32 %226, %13
  %428 = or i32 %14, %218
  %429 = or i32 %239, %15
  %430 = xor i32 %243, %250
  %431 = and i32 %248, %229
  %432 = xor i32 %245, %5
  %433 = and i32 %235, %273
  %434 = or i32 %239, %229
  %435 = shl i32 %434, 1
  %436 = xor i32 %243, %3
  %437 = and i32 %276, %229
  %438 = or i32 %212, %5
  %439 = or i32 %243, %251
  %440 = and i32 %250, %13
  %441 = xor i32 %243, %254
  %442 = and i32 %267, %4
  %443 = or i32 %231, %442
  %444 = or i32 %222, %4
  %445 = and i32 %273, %13
  %446 = or i32 %243, %229
  %447 = or i32 %310, %301
  %448 = or i32 %317, %4
  %449 = and i32 %223, %4
  %450 = and i32 %223, %218
  %451 = or i32 %212, %13
  %452 = xor i32 %308, %425
  %453 = xor i32 %328, -1
  %454 = or i32 %261, %453
  %455 = and i32 %240, %5
  %456 = and i32 %235, %229
  %457 = shl i32 %456, 1
  %458 = xor i32 %240, %5
  %459 = shl i32 %458, 1
  %460 = xor i32 %277, %3
  %461 = xor i32 %220, %4
  %462 = and i32 %273, %232
  %463 = and i32 %14, %4
  %464 = or i32 %243, %317
  %465 = and i32 %216, %273
  %466 = or i32 %381, %308
  %467 = and i32 %273, %288
  %468 = and i32 %317, %218
  %469 = and i32 %222, %218
  %470 = and i32 %317, %4
  %471 = mul i32 %470, 19
  %472 = and i32 %222, %4
  %473 = mul i32 %472, 13
  %474 = and i32 %15, %218
  %475 = and i32 %15, %4
  %476 = mul i32 %310, -20
  %477 = add i32 %218, %23
  %478 = add i32 %477, %183
  %479 = add i32 %478, %164
  %480 = add i32 %479, %143
  %481 = add i32 %480, %140
  %482 = add i32 %481, %136
  %483 = add i32 %482, %86
  %484 = add i32 %483, %71
  %485 = add i32 %484, %70
  %486 = add i32 %485, %45
  %487 = add i32 %486, %245
  %488 = sub i32 %487, %22
  %489 = add i32 %488, %288
  %490 = add i32 %489, %213
  %491 = add i32 %490, %290
  %492 = add i32 %491, %286
  %493 = add i32 %492, %232
  %494 = add i32 %493, %460
  %495 = add i32 %494, %437
  %496 = add i32 %495, %408
  %497 = add i32 %496, %405
  %498 = add i32 %497, %360
  %499 = add i32 %498, %271
  %500 = add i32 %499, %252
  %501 = add i32 %500, %241
  %502 = add i32 %501, %236
  %503 = add i32 %502, %344
  %504 = add i32 %503, %377
  %505 = shl i32 %504, 1
  %506 = add i32 %117, %173
  %507 = add i32 %506, %84
  %508 = add i32 %507, %5
  %509 = add i32 %508, %375
  %510 = add i32 %509, %468
  %511 = sub i32 %510, %474
  %512 = add i32 %511, %393
  %513 = add i32 %512, %258
  %514 = mul i32 %513, 5
  %515 = add i32 %20, %58
  %516 = add i32 %515, %175
  %517 = add i32 %516, %51
  %518 = add i32 %455, %517
  %519 = add i32 %114, %134
  %520 = add i32 %519, %270
  %521 = add i32 %520, %248
  %522 = shl i32 %521, 2
  %523 = add i32 %207, %210
  %524 = add i32 %523, %469
  %525 = mul i32 %524, 18
  %526 = add i32 %475, %209
  %527 = mul i32 %526, 14
  %528 = or i32 %19, %208
  %529 = shl i32 %528, 4
  %530 = xor i32 %518, -1
  %531 = mul i32 %530, 3
  %532 = add i32 %1, 2
  %533 = add i32 %532, %1
  %534 = sub i32 %533, %79
  %535 = add i32 %534, %25
  %536 = add i32 %535, %43
  %537 = sub i32 %536, %24
  %538 = sub i32 %537, %64
  %539 = add i32 %538, %172
  %540 = add i32 %539, %26
  %541 = sub i32 %540, %81
  %542 = add i32 %541, %90
  %543 = sub i32 %542, %91
  %544 = add i32 %543, %92
  %545 = add i32 %544, %47
  %546 = add i32 %545, %61
  %547 = add i32 %546, %115
  %548 = sub i32 %547, %128
  %549 = add i32 %548, %129
  %550 = sub i32 %549, %130
  %551 = add i32 %550, %36
  %552 = add i32 %551, %138
  %553 = add i32 %552, %139
  %554 = add i32 %553, %161
  %555 = add i32 %554, %52
  %556 = add i32 %555, %8
  %557 = sub i32 %556, %168
  %558 = add i32 %557, %169
  %559 = sub i32 %558, %182
  %560 = sub i32 %559, %184
  %561 = sub i32 %560, %185
  %562 = add i32 %561, %187
  %563 = sub i32 %562, %192
  %564 = sub i32 %563, %203
  %565 = add i32 %564, %3
  %566 = add i32 %565, %387
  %567 = add i32 %566, %34
  %568 = sub i32 %567, %42
  %569 = add i32 %568, %46
  %570 = sub i32 %569, %48
  %571 = sub i32 %570, %56
  %572 = sub i32 %571, %59
  %573 = sub i32 %572, %65
  %574 = add i32 %573, %66
  %575 = sub i32 %574, %68
  %576 = sub i32 %575, %72
  %577 = sub i32 %576, %73
  %578 = add i32 %577, %76
  %579 = add i32 %578, %77
  %580 = sub i32 %579, %78
  %581 = sub i32 %580, %82
  %582 = add i32 %581, %83
  %583 = add i32 %582, %87
  %584 = add i32 %583, %93
  %585 = add i32 %584, %96
  %586 = add i32 %585, %97
  %587 = sub i32 %586, %103
  %588 = add i32 %587, %104
  %589 = sub i32 %588, %105
  %590 = sub i32 %589, %108
  %591 = add i32 %590, %109
  %592 = add i32 %591, %110
  %593 = add i32 %592, %111
  %594 = sub i32 %593, %116
  %595 = add i32 %594, %118
  %596 = add i32 %595, %106
  %597 = sub i32 %596, %120
  %598 = add i32 %597, %121
  %599 = add i32 %598, %122
  %600 = add i32 %599, %127
  %601 = sub i32 %600, %131
  %602 = sub i32 %601, %133
  %603 = add i32 %602, %99
  %604 = sub i32 %603, %135
  %605 = add i32 %604, %141
  %606 = sub i32 %605, %142
  %607 = sub i32 %606, %148
  %608 = add i32 %607, %149
  %609 = add i32 %608, %150
  %610 = sub i32 %609, %151
  %611 = add i32 %610, %152
  %612 = add i32 %611, %158
  %613 = add i32 %612, %159
  %614 = sub i32 %613, %160
  %615 = sub i32 %614, %162
  %616 = sub i32 %615, %163
  %617 = sub i32 %616, %165
  %618 = sub i32 %617, %174
  %619 = sub i32 %618, %176
  %620 = sub i32 %619, %179
  %621 = sub i32 %620, %180
  %622 = sub i32 %621, %181
  %623 = sub i32 %622, %21
  %624 = sub i32 %623, %186
  %625 = sub i32 %624, %188
  %626 = sub i32 %625, %189
  %627 = add i32 %626, %190
  %628 = sub i32 %627, %191
  %629 = sub i32 %628, %195
  %630 = sub i32 %629, %196
  %631 = sub i32 %630, %198
  %632 = sub i32 %631, %199
  %633 = sub i32 %632, %200
  %634 = sub i32 %633, %201
  %635 = sub i32 %634, %202
  %636 = add i32 %635, %206
  %637 = add i32 %636, %4
  %638 = sub i32 %637, %31
  %639 = sub i32 %638, %39
  %640 = sub i32 %639, %41
  %641 = sub i32 %640, %54
  %642 = sub i32 %641, %63
  %643 = sub i32 %642, %75
  %644 = sub i32 %643, %89
  %645 = add i32 %644, %95
  %646 = add i32 %645, %107
  %647 = sub i32 %646, %113
  %648 = sub i32 %647, %119
  %649 = sub i32 %648, %124
  %650 = add i32 %649, %126
  %651 = add i32 %650, %147
  %652 = sub i32 %651, %154
  %653 = sub i32 %652, %167
  %654 = sub i32 %653, %171
  %655 = sub i32 %654, %178
  %656 = sub i32 %655, %194
  %657 = add i32 %656, %205
  %658 = add i32 %657, %211
  %659 = sub i32 %658, %250
  %660 = add i32 %659, %251
  %661 = add i32 %660, %246
  %662 = sub i32 %661, %226
  %663 = add i32 %662, %354
  %664 = add i32 %663, %273
  %665 = add i32 %664, %379
  %666 = sub i32 %665, %101
  %667 = sub i32 %666, %157
  %668 = sub i32 %667, %228
  %669 = sub i32 %668, %239
  %670 = add i32 %669, %242
  %671 = sub i32 %670, %257
  %672 = sub i32 %671, %264
  %673 = add i32 %672, %265
  %674 = add i32 %673, %272
  %675 = add i32 %674, %277
  %676 = sub i32 %675, %278
  %677 = sub i32 %676, %279
  %678 = sub i32 %677, %281
  %679 = sub i32 %678, %216
  %680 = sub i32 %679, %222
  %681 = sub i32 %680, %243
  %682 = sub i32 %681, %327
  %683 = sub i32 %682, %348
  %684 = add i32 %683, %369
  %685 = sub i32 %684, %386
  %686 = add i32 %685, %409
  %687 = sub i32 %686, %418
  %688 = add i32 %687, %427
  %689 = add i32 %688, %432
  %690 = sub i32 %689, %438
  %691 = sub i32 %690, %235
  %692 = sub i32 %691, %440
  %693 = sub i32 %692, %445
  %694 = sub i32 %693, %451
  %695 = add i32 %694, %529
  %696 = add i32 %695, %217
  %697 = add i32 %696, %221
  %698 = sub i32 %697, %238
  %699 = sub i32 %698, %244
  %700 = sub i32 %699, %247
  %701 = add i32 %700, %249
  %702 = sub i32 %701, %253
  %703 = sub i32 %702, %260
  %704 = add i32 %703, %266
  %705 = add i32 %704, %275
  %706 = sub i32 %705, %280
  %707 = sub i32 %706, %284
  %708 = sub i32 %707, %285
  %709 = add i32 %708, %287
  %710 = sub i32 %709, %289
  %711 = add i32 %710, %291
  %712 = sub i32 %711, %292
  %713 = sub i32 %712, %293
  %714 = sub i32 %713, %294
  %715 = add i32 %714, %295
  %716 = add i32 %715, %296
  %717 = sub i32 %716, %297
  %718 = add i32 %717, %298
  %719 = add i32 %718, %303
  %720 = add i32 %719, %304
  %721 = sub i32 %720, %307
  %722 = add i32 %721, %308
  %723 = add i32 %722, %309
  %724 = sub i32 %723, %312
  %725 = add i32 %724, %313
  %726 = sub i32 %725, %314
  %727 = sub i32 %726, %316
  %728 = sub i32 %727, %320
  %729 = add i32 %728, %321
  %730 = sub i32 %729, %322
  %731 = add i32 %730, %323
  %732 = sub i32 %731, %324
  %733 = sub i32 %732, %325
  %734 = add i32 %733, %326
  %735 = sub i32 %734, %328
  %736 = add i32 %735, %329
  %737 = sub i32 %736, %332
  %738 = add i32 %737, %333
  %739 = add i32 %738, %334
  %740 = sub i32 %739, %335
  %741 = sub i32 %740, %336
  %742 = sub i32 %741, %338
  %743 = sub i32 %742, %339
  %744 = add i32 %743, %347
  %745 = add i32 %744, %349
  %746 = add i32 %745, %350
  %747 = sub i32 %746, %351
  %748 = sub i32 %747, %352
  %749 = add i32 %748, %353
  %750 = sub i32 %749, %356
  %751 = add i32 %750, %262
  %752 = add i32 %751, %359
  %753 = sub i32 %752, %361
  %754 = sub i32 %753, %362
  %755 = add i32 %754, %363
  %756 = add i32 %755, %364
  %757 = sub i32 %756, %368
  %758 = add i32 %757, %370
  %759 = add i32 %758, %373
  %760 = sub i32 %759, %378
  %761 = add i32 %760, %380
  %762 = sub i32 %761, %384
  %763 = add i32 %762, %385
  %764 = add i32 %763, %388
  %765 = sub i32 %764, %389
  %766 = add i32 %765, %390
  %767 = sub i32 %766, %391
  %768 = sub i32 %767, %392
  %769 = add i32 %768, %394
  %770 = add i32 %769, %395
  %771 = sub i32 %770, %396
  %772 = add i32 %771, %397
  %773 = add i32 %772, %400
  %774 = sub i32 %773, %401
  %775 = sub i32 %774, %402
  %776 = add i32 %775, %406
  %777 = sub i32 %776, %407
  %778 = add i32 %777, %411
  %779 = sub i32 %778, %412
  %780 = add i32 %779, %413
  %781 = sub i32 %780, %415
  %782 = sub i32 %781, %416
  %783 = sub i32 %782, %417
  %784 = sub i32 %783, %421
  %785 = sub i32 %784, %422
  %786 = add i32 %785, %423
  %787 = add i32 %786, %424
  %788 = sub i32 %787, %428
  %789 = add i32 %788, %376
  %790 = add i32 %789, %429
  %791 = sub i32 %790, %430
  %792 = add i32 %791, %431
  %793 = add i32 %792, %433
  %794 = sub i32 %793, %436
  %795 = add i32 %794, %439
  %796 = sub i32 %795, %441
  %797 = add i32 %796, %444
  %798 = sub i32 %797, %446
  %799 = add i32 %798, %448
  %800 = add i32 %799, %449
  %801 = add i32 %800, %450
  %802 = add i32 %801, %233
  %803 = sub i32 %802, %459
  %804 = add i32 %803, %461
  %805 = sub i32 %804, %462
  %806 = sub i32 %805, %463
  %807 = sub i32 %806, %464
  %808 = sub i32 %807, %465
  %809 = add i32 %808, %467
  %810 = add i32 %809, %381
  %811 = sub i32 %810, %215
  %812 = sub i32 %811, %225
  %813 = add i32 %812, %234
  %814 = sub i32 %813, %256
  %815 = sub i32 %814, %263
  %816 = add i32 %815, %269
  %817 = sub i32 %816, %283
  %818 = sub i32 %817, %300
  %819 = add i32 %818, %302
  %820 = sub i32 %819, %306
  %821 = add i32 %820, %311
  %822 = sub i32 %821, %319
  %823 = sub i32 %822, %331
  %824 = sub i32 %823, %337
  %825 = sub i32 %824, %341
  %826 = sub i32 %825, %346
  %827 = sub i32 %826, %358
  %828 = add i32 %827, %374
  %829 = sub i32 %828, %383
  %830 = sub i32 %829, %399
  %831 = sub i32 %830, %404
  %832 = sub i32 %831, %410
  %833 = sub i32 %832, %420
  %834 = add i32 %833, %426
  %835 = sub i32 %834, %435
  %836 = sub i32 %835, %443
  %837 = add i32 %836, %447
  %838 = add i32 %837, %452
  %839 = sub i32 %838, %454
  %840 = sub i32 %839, %457
  %841 = add i32 %840, %466
  %842 = add i32 %841, %471
  %843 = add i32 %842, %473
  %844 = add i32 %843, %476
  %845 = sub i32 %844, %372
  %846 = add i32 %845, %527
  %847 = sub i32 %846, %367
  %848 = add i32 %847, %522
  %849 = add i32 %848, %525
  %850 = add i32 %849, %531
  %851 = add i32 %850, %514
  %852 = add i32 %851, %505
  %853 = icmp eq i32 %17, %852
  %854 = select i1 %853, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %855 = tail call i32 @puts(i8* nonnull dereferenceable(1) %854)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
