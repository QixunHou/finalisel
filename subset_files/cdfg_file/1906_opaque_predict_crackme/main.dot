digraph "DFG for'main' function" {
	Node0xa66738[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa667b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa66848[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xa668a8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xa66958[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xa66d88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa66e68[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xa66f68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa67028[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xa670d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xa67198[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xa67248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xa619b0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xa67448[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa683b8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa68a28[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xa68a88[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xa68b00[shape=record, label="  %14 = mul i32 %12, -2"];
	Node0xa68b70[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0xa68be0[shape=record, label="  %16 = and i32 %13, %15"];
	Node0xa68c50[shape=record, label="  %17 = add i32 %12, 2"];
	Node0xa68cc0[shape=record, label="  %18 = add i32 %17, %14"];
	Node0xa68d30[shape=record, label="  %19 = add i32 %18, %16"];
	Node0xa68da0[shape=record, label="  %20 = xor i32 %11, -1"];
	Node0xa68e10[shape=record, label="  %21 = or i32 %12, %20"];
	Node0xa68e80[shape=record, label="  %22 = or i32 %12, %11"];
	Node0xa68ef0[shape=record, label="  %23 = or i32 %13, %10"];
	Node0xa68f60[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0xa68fd0[shape=record, label="  %25 = xor i32 %13, -1"];
	Node0xa69040[shape=record, label="  %26 = xor i32 %13, %10"];
	Node0xa690b0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0xa69120[shape=record, label="  %28 = xor i32 %23, -1"];
	Node0xa69190[shape=record, label="  %29 = mul i32 %28, 3"];
	Node0xa69200[shape=record, label="  %30 = and i32 %10, %25"];
	Node0xa69270[shape=record, label="  %31 = mul i32 %30, 6"];
	Node0xa692e0[shape=record, label="  %32 = mul i32 %16, 9"];
	Node0xa69350[shape=record, label="  %33 = and i32 %13, %10"];
	Node0xa693c0[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0xa69430[shape=record, label="  %35 = add i32 %10, 5"];
	Node0xa694a0[shape=record, label="  %36 = sub i32 %35, %21"];
	Node0xa69510[shape=record, label="  %37 = sub i32 %36, %22"];
	Node0xa69580[shape=record, label="  %38 = add i32 %37, %25"];
	Node0xa695f0[shape=record, label="  %39 = sub i32 %38, %24"];
	Node0xa69660[shape=record, label="  %40 = sub i32 %39, %27"];
	Node0xa696d0[shape=record, label="  %41 = add i32 %40, %29"];
	Node0xa69740[shape=record, label="  %42 = add i32 %41, %31"];
	Node0xa697b0[shape=record, label="  %43 = add i32 %42, %32"];
	Node0xa69820[shape=record, label="  %44 = add i32 %43, %34"];
	Node0xa69890[shape=record, label="  %45 = icmp eq i32 %19, %44"];
	Node0xa068b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa69920[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0xa69bc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xa69d28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xa69e38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa69f48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa6a008[shape=record, label="  ret i32 0"];
	Node0xa66738 -> Node0xa667b8;
	Node0xa667b8 -> Node0xa66848;
	Node0xa66848 -> Node0xa668a8;
	Node0xa668a8 -> Node0xa66958;
	Node0xa66958 -> Node0xa66d88;
	Node0xa66d88 -> Node0xa66e68;
	Node0xa66e68 -> Node0xa66f68;
	Node0xa66f68 -> Node0xa67028;
	Node0xa67028 -> Node0xa670d8;
	Node0xa670d8 -> Node0xa67198;
	Node0xa67198 -> Node0xa67248;
	Node0xa67248 -> Node0xa619b0;
	Node0xa619b0 -> Node0xa67448;
	Node0xa67448 -> Node0xa683b8;
	Node0xa683b8 -> Node0xa68a28;
	Node0xa68a28 -> Node0xa68a88;
	Node0xa68a88 -> Node0xa68b00;
	Node0xa68b00 -> Node0xa68b70;
	Node0xa68b70 -> Node0xa68be0;
	Node0xa68be0 -> Node0xa68c50;
	Node0xa68c50 -> Node0xa68cc0;
	Node0xa68cc0 -> Node0xa68d30;
	Node0xa68d30 -> Node0xa68da0;
	Node0xa68da0 -> Node0xa68e10;
	Node0xa68e10 -> Node0xa68e80;
	Node0xa68e80 -> Node0xa68ef0;
	Node0xa68ef0 -> Node0xa68f60;
	Node0xa68f60 -> Node0xa68fd0;
	Node0xa68fd0 -> Node0xa69040;
	Node0xa69040 -> Node0xa690b0;
	Node0xa690b0 -> Node0xa69120;
	Node0xa69120 -> Node0xa69190;
	Node0xa69190 -> Node0xa69200;
	Node0xa69200 -> Node0xa69270;
	Node0xa69270 -> Node0xa692e0;
	Node0xa692e0 -> Node0xa69350;
	Node0xa69350 -> Node0xa693c0;
	Node0xa693c0 -> Node0xa69430;
	Node0xa69430 -> Node0xa694a0;
	Node0xa694a0 -> Node0xa69510;
	Node0xa69510 -> Node0xa69580;
	Node0xa69580 -> Node0xa695f0;
	Node0xa695f0 -> Node0xa69660;
	Node0xa69660 -> Node0xa696d0;
	Node0xa696d0 -> Node0xa69740;
	Node0xa69740 -> Node0xa697b0;
	Node0xa697b0 -> Node0xa69820;
	Node0xa69820 -> Node0xa69890;
	Node0xa69890 -> Node0xa068b8;
	Node0xa068b8 -> Node0xa69920;
	Node0xa69920 -> Node0xa69bc8;
	Node0xa69bc8 -> Node0xa69d28;
	Node0xa69d28 -> Node0xa69e38;
	Node0xa69e38 -> Node0xa69f48;
	Node0xa69f48 -> Node0xa6a008;
edge [color=red]
	Node0xa66738 -> Node0xa66958;
	Node0xa66958 -> Node0xa66d88;
	Node0xa667b8 -> Node0xa66e68;
	Node0xa66e68 -> Node0xa66f68;
	Node0xa66848 -> Node0xa67028;
	Node0xa67028 -> Node0xa670d8;
	Node0xa668a8 -> Node0xa67198;
	Node0xa67198 -> Node0xa67248;
	Node0xa66738 -> Node0xa619b0;
	Node0xa667b8 -> Node0xa619b0;
	Node0xa66848 -> Node0xa619b0;
	Node0xa668a8 -> Node0xa619b0;
	Node0xa66738 -> Node0xa67448;
	Node0xa667b8 -> Node0xa683b8;
	Node0xa66848 -> Node0xa68a28;
	Node0xa668a8 -> Node0xa68a88;
	Node0xa68a28 -> Node0xa68b00;
	Node0xa67448 -> Node0xa68b70;
	Node0xa68a88 -> Node0xa68be0;
	Node0xa68b70 -> Node0xa68be0;
	Node0xa68a28 -> Node0xa68c50;
	Node0xa68c50 -> Node0xa68cc0;
	Node0xa68b00 -> Node0xa68cc0;
	Node0xa68cc0 -> Node0xa68d30;
	Node0xa68be0 -> Node0xa68d30;
	Node0xa683b8 -> Node0xa68da0;
	Node0xa68a28 -> Node0xa68e10;
	Node0xa68da0 -> Node0xa68e10;
	Node0xa68a28 -> Node0xa68e80;
	Node0xa683b8 -> Node0xa68e80;
	Node0xa68a88 -> Node0xa68ef0;
	Node0xa67448 -> Node0xa68ef0;
	Node0xa68ef0 -> Node0xa68f60;
	Node0xa68a88 -> Node0xa68fd0;
	Node0xa68a88 -> Node0xa69040;
	Node0xa67448 -> Node0xa69040;
	Node0xa69040 -> Node0xa690b0;
	Node0xa68ef0 -> Node0xa69120;
	Node0xa69120 -> Node0xa69190;
	Node0xa67448 -> Node0xa69200;
	Node0xa68fd0 -> Node0xa69200;
	Node0xa69200 -> Node0xa69270;
	Node0xa68be0 -> Node0xa692e0;
	Node0xa68a88 -> Node0xa69350;
	Node0xa67448 -> Node0xa69350;
	Node0xa69350 -> Node0xa693c0;
	Node0xa67448 -> Node0xa69430;
	Node0xa69430 -> Node0xa694a0;
	Node0xa68e10 -> Node0xa694a0;
	Node0xa694a0 -> Node0xa69510;
	Node0xa68e80 -> Node0xa69510;
	Node0xa69510 -> Node0xa69580;
	Node0xa68fd0 -> Node0xa69580;
	Node0xa69580 -> Node0xa695f0;
	Node0xa68f60 -> Node0xa695f0;
	Node0xa695f0 -> Node0xa69660;
	Node0xa690b0 -> Node0xa69660;
	Node0xa69660 -> Node0xa696d0;
	Node0xa69190 -> Node0xa696d0;
	Node0xa696d0 -> Node0xa69740;
	Node0xa69270 -> Node0xa69740;
	Node0xa69740 -> Node0xa697b0;
	Node0xa692e0 -> Node0xa697b0;
	Node0xa697b0 -> Node0xa69820;
	Node0xa693c0 -> Node0xa69820;
	Node0xa68d30 -> Node0xa69890;
	Node0xa69820 -> Node0xa69890;
	Node0xa69890 -> Node0xa068b8;
	Node0xa068b8 -> Node0xa69920;
	Node0xa67198 -> Node0xa69bc8;
	Node0xa67028 -> Node0xa69d28;
	Node0xa66e68 -> Node0xa69e38;
	Node0xa66958 -> Node0xa69f48;
}
