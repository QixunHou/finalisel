digraph "DFG for'main' function" {
	Node0xbcfcf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xbcfd78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xbcfe08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xbcfe68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xbcff18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xbd0348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xbd0428[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xbd0528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xbd05e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xbd0698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xbd0758[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xbd0808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xbcaba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xbd0a08[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xbd1978[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xbd1fe8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xbd2048[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xbd20c0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0xbd2130[shape=record, label="  %15 = or i32 %11, %14"];
	Node0xbd21a0[shape=record, label="  %16 = sub i32 %15, %10"];
	Node0xbd2210[shape=record, label="  %17 = and i32 %11, %14"];
	Node0xbd2280[shape=record, label="  %18 = xor i32 %12, %11"];
	Node0xbd22f0[shape=record, label="  %19 = and i32 %12, %11"];
	Node0xbd2360[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0xbd23d0[shape=record, label="  %21 = shl i32 %14, 1"];
	Node0xbd2440[shape=record, label="  %22 = shl i32 %17, 2"];
	Node0xbd24b0[shape=record, label="  %23 = xor i32 %13, %10"];
	Node0xbd2520[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0xbd2590[shape=record, label="  %25 = and i32 %13, %24"];
	Node0xbd2600[shape=record, label="  %26 = or i32 %13, %10"];
	Node0xbd2670[shape=record, label="  %27 = and i32 %13, %10"];
	Node0xbd26e0[shape=record, label="  %28 = or i32 %13, %24"];
	Node0xbd2750[shape=record, label="  %29 = mul i32 %28, 5"];
	Node0xbd27c0[shape=record, label="  %30 = xor i32 %13, -1"];
	Node0xbd2830[shape=record, label="  %31 = shl i32 %26, 2"];
	Node0xbd28a0[shape=record, label="  %32 = xor i32 %31, -4"];
	Node0xbd2910[shape=record, label="  %33 = shl i32 %25, 2"];
	Node0xbd2980[shape=record, label="  %34 = shl i32 %27, 2"];
	Node0xbd29f0[shape=record, label="  %35 = shl i32 %18, 1"];
	Node0xbd2a90[shape=record, label="  %36 = mul i32 %11, -2"];
	Node0xbd2b00[shape=record, label="  %37 = add i32 %12, 1"];
	Node0xbd2b70[shape=record, label="  %38 = add i32 %37, %36"];
	Node0xbd2be0[shape=record, label="  %39 = add i32 %38, %17"];
	Node0xbd2c50[shape=record, label="  %40 = sub i32 %39, %18"];
	Node0xbd2cc0[shape=record, label="  %41 = add i32 %40, %20"];
	Node0xbd2d30[shape=record, label="  %42 = sub i32 %41, %21"];
	Node0xbd2da0[shape=record, label="  %43 = add i32 %42, %15"];
	Node0xbd2e10[shape=record, label="  %44 = add i32 %43, %30"];
	Node0xbd2e80[shape=record, label="  %45 = add i32 %44, %22"];
	Node0xbd2ef0[shape=record, label="  %46 = add i32 %45, %23"];
	Node0xbd2f60[shape=record, label="  %47 = add i32 %46, %25"];
	Node0xbd2fd0[shape=record, label="  %48 = sub i32 %47, %26"];
	Node0xbd3040[shape=record, label="  %49 = add i32 %48, %27"];
	Node0xbd30b0[shape=record, label="  %50 = sub i32 %49, %35"];
	Node0xbd3120[shape=record, label="  %51 = add i32 %50, %29"];
	Node0xbd3190[shape=record, label="  %52 = sub i32 %51, %33"];
	Node0xbd3200[shape=record, label="  %53 = sub i32 %52, %34"];
	Node0xbd3270[shape=record, label="  %54 = sub i32 %53, %32"];
	Node0xbd32e0[shape=record, label="  %55 = icmp eq i32 %16, %54"];
	Node0xb6f8b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xbd3370[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0xbd3618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xbd3778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xbd3888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xbd3998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xbd3a58[shape=record, label="  ret i32 0"];
	Node0xbcfcf8 -> Node0xbcfd78;
	Node0xbcfd78 -> Node0xbcfe08;
	Node0xbcfe08 -> Node0xbcfe68;
	Node0xbcfe68 -> Node0xbcff18;
	Node0xbcff18 -> Node0xbd0348;
	Node0xbd0348 -> Node0xbd0428;
	Node0xbd0428 -> Node0xbd0528;
	Node0xbd0528 -> Node0xbd05e8;
	Node0xbd05e8 -> Node0xbd0698;
	Node0xbd0698 -> Node0xbd0758;
	Node0xbd0758 -> Node0xbd0808;
	Node0xbd0808 -> Node0xbcaba0;
	Node0xbcaba0 -> Node0xbd0a08;
	Node0xbd0a08 -> Node0xbd1978;
	Node0xbd1978 -> Node0xbd1fe8;
	Node0xbd1fe8 -> Node0xbd2048;
	Node0xbd2048 -> Node0xbd20c0;
	Node0xbd20c0 -> Node0xbd2130;
	Node0xbd2130 -> Node0xbd21a0;
	Node0xbd21a0 -> Node0xbd2210;
	Node0xbd2210 -> Node0xbd2280;
	Node0xbd2280 -> Node0xbd22f0;
	Node0xbd22f0 -> Node0xbd2360;
	Node0xbd2360 -> Node0xbd23d0;
	Node0xbd23d0 -> Node0xbd2440;
	Node0xbd2440 -> Node0xbd24b0;
	Node0xbd24b0 -> Node0xbd2520;
	Node0xbd2520 -> Node0xbd2590;
	Node0xbd2590 -> Node0xbd2600;
	Node0xbd2600 -> Node0xbd2670;
	Node0xbd2670 -> Node0xbd26e0;
	Node0xbd26e0 -> Node0xbd2750;
	Node0xbd2750 -> Node0xbd27c0;
	Node0xbd27c0 -> Node0xbd2830;
	Node0xbd2830 -> Node0xbd28a0;
	Node0xbd28a0 -> Node0xbd2910;
	Node0xbd2910 -> Node0xbd2980;
	Node0xbd2980 -> Node0xbd29f0;
	Node0xbd29f0 -> Node0xbd2a90;
	Node0xbd2a90 -> Node0xbd2b00;
	Node0xbd2b00 -> Node0xbd2b70;
	Node0xbd2b70 -> Node0xbd2be0;
	Node0xbd2be0 -> Node0xbd2c50;
	Node0xbd2c50 -> Node0xbd2cc0;
	Node0xbd2cc0 -> Node0xbd2d30;
	Node0xbd2d30 -> Node0xbd2da0;
	Node0xbd2da0 -> Node0xbd2e10;
	Node0xbd2e10 -> Node0xbd2e80;
	Node0xbd2e80 -> Node0xbd2ef0;
	Node0xbd2ef0 -> Node0xbd2f60;
	Node0xbd2f60 -> Node0xbd2fd0;
	Node0xbd2fd0 -> Node0xbd3040;
	Node0xbd3040 -> Node0xbd30b0;
	Node0xbd30b0 -> Node0xbd3120;
	Node0xbd3120 -> Node0xbd3190;
	Node0xbd3190 -> Node0xbd3200;
	Node0xbd3200 -> Node0xbd3270;
	Node0xbd3270 -> Node0xbd32e0;
	Node0xbd32e0 -> Node0xb6f8b8;
	Node0xb6f8b8 -> Node0xbd3370;
	Node0xbd3370 -> Node0xbd3618;
	Node0xbd3618 -> Node0xbd3778;
	Node0xbd3778 -> Node0xbd3888;
	Node0xbd3888 -> Node0xbd3998;
	Node0xbd3998 -> Node0xbd3a58;
edge [color=red]
	Node0xbcfcf8 -> Node0xbcff18;
	Node0xbcff18 -> Node0xbd0348;
	Node0xbcfd78 -> Node0xbd0428;
	Node0xbd0428 -> Node0xbd0528;
	Node0xbcfe08 -> Node0xbd05e8;
	Node0xbd05e8 -> Node0xbd0698;
	Node0xbcfe68 -> Node0xbd0758;
	Node0xbd0758 -> Node0xbd0808;
	Node0xbcfcf8 -> Node0xbcaba0;
	Node0xbcfd78 -> Node0xbcaba0;
	Node0xbcfe08 -> Node0xbcaba0;
	Node0xbcfe68 -> Node0xbcaba0;
	Node0xbcfcf8 -> Node0xbd0a08;
	Node0xbcfd78 -> Node0xbd1978;
	Node0xbcfe08 -> Node0xbd1fe8;
	Node0xbcfe68 -> Node0xbd2048;
	Node0xbd1fe8 -> Node0xbd20c0;
	Node0xbd1978 -> Node0xbd2130;
	Node0xbd20c0 -> Node0xbd2130;
	Node0xbd2130 -> Node0xbd21a0;
	Node0xbd0a08 -> Node0xbd21a0;
	Node0xbd1978 -> Node0xbd2210;
	Node0xbd20c0 -> Node0xbd2210;
	Node0xbd1fe8 -> Node0xbd2280;
	Node0xbd1978 -> Node0xbd2280;
	Node0xbd1fe8 -> Node0xbd22f0;
	Node0xbd1978 -> Node0xbd22f0;
	Node0xbd22f0 -> Node0xbd2360;
	Node0xbd20c0 -> Node0xbd23d0;
	Node0xbd2210 -> Node0xbd2440;
	Node0xbd2048 -> Node0xbd24b0;
	Node0xbd0a08 -> Node0xbd24b0;
	Node0xbd0a08 -> Node0xbd2520;
	Node0xbd2048 -> Node0xbd2590;
	Node0xbd2520 -> Node0xbd2590;
	Node0xbd2048 -> Node0xbd2600;
	Node0xbd0a08 -> Node0xbd2600;
	Node0xbd2048 -> Node0xbd2670;
	Node0xbd0a08 -> Node0xbd2670;
	Node0xbd2048 -> Node0xbd26e0;
	Node0xbd2520 -> Node0xbd26e0;
	Node0xbd26e0 -> Node0xbd2750;
	Node0xbd2048 -> Node0xbd27c0;
	Node0xbd2600 -> Node0xbd2830;
	Node0xbd2830 -> Node0xbd28a0;
	Node0xbd2590 -> Node0xbd2910;
	Node0xbd2670 -> Node0xbd2980;
	Node0xbd2280 -> Node0xbd29f0;
	Node0xbd1978 -> Node0xbd2a90;
	Node0xbd1fe8 -> Node0xbd2b00;
	Node0xbd2b00 -> Node0xbd2b70;
	Node0xbd2a90 -> Node0xbd2b70;
	Node0xbd2b70 -> Node0xbd2be0;
	Node0xbd2210 -> Node0xbd2be0;
	Node0xbd2be0 -> Node0xbd2c50;
	Node0xbd2280 -> Node0xbd2c50;
	Node0xbd2c50 -> Node0xbd2cc0;
	Node0xbd2360 -> Node0xbd2cc0;
	Node0xbd2cc0 -> Node0xbd2d30;
	Node0xbd23d0 -> Node0xbd2d30;
	Node0xbd2d30 -> Node0xbd2da0;
	Node0xbd2130 -> Node0xbd2da0;
	Node0xbd2da0 -> Node0xbd2e10;
	Node0xbd27c0 -> Node0xbd2e10;
	Node0xbd2e10 -> Node0xbd2e80;
	Node0xbd2440 -> Node0xbd2e80;
	Node0xbd2e80 -> Node0xbd2ef0;
	Node0xbd24b0 -> Node0xbd2ef0;
	Node0xbd2ef0 -> Node0xbd2f60;
	Node0xbd2590 -> Node0xbd2f60;
	Node0xbd2f60 -> Node0xbd2fd0;
	Node0xbd2600 -> Node0xbd2fd0;
	Node0xbd2fd0 -> Node0xbd3040;
	Node0xbd2670 -> Node0xbd3040;
	Node0xbd3040 -> Node0xbd30b0;
	Node0xbd29f0 -> Node0xbd30b0;
	Node0xbd30b0 -> Node0xbd3120;
	Node0xbd2750 -> Node0xbd3120;
	Node0xbd3120 -> Node0xbd3190;
	Node0xbd2910 -> Node0xbd3190;
	Node0xbd3190 -> Node0xbd3200;
	Node0xbd2980 -> Node0xbd3200;
	Node0xbd3200 -> Node0xbd3270;
	Node0xbd28a0 -> Node0xbd3270;
	Node0xbd21a0 -> Node0xbd32e0;
	Node0xbd3270 -> Node0xbd32e0;
	Node0xbd32e0 -> Node0xb6f8b8;
	Node0xb6f8b8 -> Node0xbd3370;
	Node0xbd0758 -> Node0xbd3618;
	Node0xbd05e8 -> Node0xbd3778;
	Node0xbd0428 -> Node0xbd3888;
	Node0xbcff18 -> Node0xbd3998;
}
