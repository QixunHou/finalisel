digraph "DFG for'main' function" {
	Node0x1b7d638[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b7d6b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b7d748[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b7d7a8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1b7dc28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b7dd08[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1b7de08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b7dec8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1b7df78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b7e1d8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1b7e298[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b7e3f8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b7e458[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b85770[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1b85978[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b85ad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b85be8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b85ca8[shape=record, label="  ret i32 0"];
	Node0x1b7d638 -> Node0x1b7d6b8;
	Node0x1b7d6b8 -> Node0x1b7d748;
	Node0x1b7d748 -> Node0x1b7d7a8;
	Node0x1b7d7a8 -> Node0x1b7dc28;
	Node0x1b7dc28 -> Node0x1b7dd08;
	Node0x1b7dd08 -> Node0x1b7de08;
	Node0x1b7de08 -> Node0x1b7dec8;
	Node0x1b7dec8 -> Node0x1b7df78;
	Node0x1b7df78 -> Node0x1b7e1d8;
	Node0x1b7e1d8 -> Node0x1b7e298;
	Node0x1b7e298 -> Node0x1b7e3f8;
	Node0x1b7e3f8 -> Node0x1b7e458;
	Node0x1b7e458 -> Node0x1b85770;
	Node0x1b85770 -> Node0x1b85978;
	Node0x1b85978 -> Node0x1b85ad8;
	Node0x1b85ad8 -> Node0x1b85be8;
	Node0x1b85be8 -> Node0x1b85ca8;
edge [color=red]
	Node0x1b7d638 -> Node0x1b7d7a8;
	Node0x1b7d7a8 -> Node0x1b7dc28;
	Node0x1b7d6b8 -> Node0x1b7dd08;
	Node0x1b7dd08 -> Node0x1b7de08;
	Node0x1b7d748 -> Node0x1b7dec8;
	Node0x1b7dec8 -> Node0x1b7df78;
	Node0x1b7d638 -> Node0x1b7e1d8;
	Node0x1b7d6b8 -> Node0x1b7e1d8;
	Node0x1b7d748 -> Node0x1b7e1d8;
	Node0x1b7d638 -> Node0x1b7e298;
	Node0x1b7d6b8 -> Node0x1b7e3f8;
	Node0x1b7d748 -> Node0x1b7e458;
	Node0x1b7e298 -> Node0x1b85770;
	Node0x1b7e3f8 -> Node0x1b85770;
	Node0x1b7e458 -> Node0x1b85770;
	Node0x1b7dec8 -> Node0x1b85978;
	Node0x1b7dd08 -> Node0x1b85ad8;
	Node0x1b7d7a8 -> Node0x1b85be8;
}
