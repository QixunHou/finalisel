digraph "DFG for'main' function" {
	Node0x139dc88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x139dd08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x139dd98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x139ddf8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x139dea8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x139e2d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x139e3b8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x139e4b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x139e578[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x139e628[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x139e6e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x139e798[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1398b70[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x139e998[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x139f908[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x139ff78[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x139ffd8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x13a0050[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x13a00c0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x13a0130[shape=record, label="  %16 = xor i32 %13, %10"];
	Node0x13a01a0[shape=record, label="  %17 = add i32 %15, %16"];
	Node0x13a0210[shape=record, label="  %18 = or i32 %13, %10"];
	Node0x13a0280[shape=record, label="  %19 = sub i32 %17, %18"];
	Node0x13a02f0[shape=record, label="  %20 = and i32 %12, %11"];
	Node0x13a0360[shape=record, label="  %21 = xor i32 %12, -1"];
	Node0x13a03d0[shape=record, label="  %22 = or i32 %11, %21"];
	Node0x13a0440[shape=record, label="  %23 = and i32 %11, %21"];
	Node0x13a04b0[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x13a0520[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x13a0590[shape=record, label="  %26 = xor i32 %11, -1"];
	Node0x13a0600[shape=record, label="  %27 = xor i32 %22, -1"];
	Node0x13a0670[shape=record, label="  %28 = mul i32 %27, 5"];
	Node0x13a06e0[shape=record, label="  %29 = and i32 %13, %10"];
	Node0x13a0750[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x13a07c0[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x13a0830[shape=record, label="  %32 = xor i32 %10, -1"];
	Node0x13a08a0[shape=record, label="  %33 = or i32 %13, %32"];
	Node0x13a0910[shape=record, label="  %34 = xor i32 %18, -1"];
	Node0x13a0980[shape=record, label="  %35 = shl i32 %33, 2"];
	Node0x13a09f0[shape=record, label="  %36 = xor i32 %35, -4"];
	Node0x13a0a60[shape=record, label="  %37 = add i32 %33, %11"];
	Node0x13a0ad0[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x13a0b40[shape=record, label="  %39 = sub i32 2, %10"];
	Node0x13a0bb0[shape=record, label="  %40 = add i32 %39, %26"];
	Node0x13a0c20[shape=record, label="  %41 = sub i32 %40, %12"];
	Node0x13a0c90[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x13a0d00[shape=record, label="  %43 = add i32 %42, %20"];
	Node0x13a0d70[shape=record, label="  %44 = add i32 %43, %22"];
	Node0x13a0de0[shape=record, label="  %45 = sub i32 %44, %23"];
	Node0x13a0e50[shape=record, label="  %46 = add i32 %45, %13"];
	Node0x13a0ec0[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x13a0f30[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x13a0fa0[shape=record, label="  %49 = sub i32 %48, %25"];
	Node0x13a1010[shape=record, label="  %50 = sub i32 %49, %30"];
	Node0x13a1080[shape=record, label="  %51 = sub i32 %50, %31"];
	Node0x13a10f0[shape=record, label="  %52 = add i32 %51, %36"];
	Node0x13a1160[shape=record, label="  %53 = add i32 %52, %38"];
	Node0x13a11d0[shape=record, label="  %54 = icmp eq i32 %19, %53"];
	Node0x133d8b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x13a1260[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x13a1508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x13a1668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x13a1778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13a1888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13a1948[shape=record, label="  ret i32 0"];
	Node0x139dc88 -> Node0x139dd08;
	Node0x139dd08 -> Node0x139dd98;
	Node0x139dd98 -> Node0x139ddf8;
	Node0x139ddf8 -> Node0x139dea8;
	Node0x139dea8 -> Node0x139e2d8;
	Node0x139e2d8 -> Node0x139e3b8;
	Node0x139e3b8 -> Node0x139e4b8;
	Node0x139e4b8 -> Node0x139e578;
	Node0x139e578 -> Node0x139e628;
	Node0x139e628 -> Node0x139e6e8;
	Node0x139e6e8 -> Node0x139e798;
	Node0x139e798 -> Node0x1398b70;
	Node0x1398b70 -> Node0x139e998;
	Node0x139e998 -> Node0x139f908;
	Node0x139f908 -> Node0x139ff78;
	Node0x139ff78 -> Node0x139ffd8;
	Node0x139ffd8 -> Node0x13a0050;
	Node0x13a0050 -> Node0x13a00c0;
	Node0x13a00c0 -> Node0x13a0130;
	Node0x13a0130 -> Node0x13a01a0;
	Node0x13a01a0 -> Node0x13a0210;
	Node0x13a0210 -> Node0x13a0280;
	Node0x13a0280 -> Node0x13a02f0;
	Node0x13a02f0 -> Node0x13a0360;
	Node0x13a0360 -> Node0x13a03d0;
	Node0x13a03d0 -> Node0x13a0440;
	Node0x13a0440 -> Node0x13a04b0;
	Node0x13a04b0 -> Node0x13a0520;
	Node0x13a0520 -> Node0x13a0590;
	Node0x13a0590 -> Node0x13a0600;
	Node0x13a0600 -> Node0x13a0670;
	Node0x13a0670 -> Node0x13a06e0;
	Node0x13a06e0 -> Node0x13a0750;
	Node0x13a0750 -> Node0x13a07c0;
	Node0x13a07c0 -> Node0x13a0830;
	Node0x13a0830 -> Node0x13a08a0;
	Node0x13a08a0 -> Node0x13a0910;
	Node0x13a0910 -> Node0x13a0980;
	Node0x13a0980 -> Node0x13a09f0;
	Node0x13a09f0 -> Node0x13a0a60;
	Node0x13a0a60 -> Node0x13a0ad0;
	Node0x13a0ad0 -> Node0x13a0b40;
	Node0x13a0b40 -> Node0x13a0bb0;
	Node0x13a0bb0 -> Node0x13a0c20;
	Node0x13a0c20 -> Node0x13a0c90;
	Node0x13a0c90 -> Node0x13a0d00;
	Node0x13a0d00 -> Node0x13a0d70;
	Node0x13a0d70 -> Node0x13a0de0;
	Node0x13a0de0 -> Node0x13a0e50;
	Node0x13a0e50 -> Node0x13a0ec0;
	Node0x13a0ec0 -> Node0x13a0f30;
	Node0x13a0f30 -> Node0x13a0fa0;
	Node0x13a0fa0 -> Node0x13a1010;
	Node0x13a1010 -> Node0x13a1080;
	Node0x13a1080 -> Node0x13a10f0;
	Node0x13a10f0 -> Node0x13a1160;
	Node0x13a1160 -> Node0x13a11d0;
	Node0x13a11d0 -> Node0x133d8b8;
	Node0x133d8b8 -> Node0x13a1260;
	Node0x13a1260 -> Node0x13a1508;
	Node0x13a1508 -> Node0x13a1668;
	Node0x13a1668 -> Node0x13a1778;
	Node0x13a1778 -> Node0x13a1888;
	Node0x13a1888 -> Node0x13a1948;
edge [color=red]
	Node0x139dc88 -> Node0x139dea8;
	Node0x139dea8 -> Node0x139e2d8;
	Node0x139dd08 -> Node0x139e3b8;
	Node0x139e3b8 -> Node0x139e4b8;
	Node0x139dd98 -> Node0x139e578;
	Node0x139e578 -> Node0x139e628;
	Node0x139ddf8 -> Node0x139e6e8;
	Node0x139e6e8 -> Node0x139e798;
	Node0x139dc88 -> Node0x1398b70;
	Node0x139dd08 -> Node0x1398b70;
	Node0x139dd98 -> Node0x1398b70;
	Node0x139ddf8 -> Node0x1398b70;
	Node0x139dc88 -> Node0x139e998;
	Node0x139dd08 -> Node0x139f908;
	Node0x139dd98 -> Node0x139ff78;
	Node0x139ddf8 -> Node0x139ffd8;
	Node0x139ff78 -> Node0x13a0050;
	Node0x139f908 -> Node0x13a0050;
	Node0x13a0050 -> Node0x13a00c0;
	Node0x139ffd8 -> Node0x13a0130;
	Node0x139e998 -> Node0x13a0130;
	Node0x13a00c0 -> Node0x13a01a0;
	Node0x13a0130 -> Node0x13a01a0;
	Node0x139ffd8 -> Node0x13a0210;
	Node0x139e998 -> Node0x13a0210;
	Node0x13a01a0 -> Node0x13a0280;
	Node0x13a0210 -> Node0x13a0280;
	Node0x139ff78 -> Node0x13a02f0;
	Node0x139f908 -> Node0x13a02f0;
	Node0x139ff78 -> Node0x13a0360;
	Node0x139f908 -> Node0x13a03d0;
	Node0x13a0360 -> Node0x13a03d0;
	Node0x139f908 -> Node0x13a0440;
	Node0x13a0360 -> Node0x13a0440;
	Node0x13a0440 -> Node0x13a04b0;
	Node0x13a04b0 -> Node0x13a0520;
	Node0x139f908 -> Node0x13a0590;
	Node0x13a03d0 -> Node0x13a0600;
	Node0x13a0600 -> Node0x13a0670;
	Node0x139ffd8 -> Node0x13a06e0;
	Node0x139e998 -> Node0x13a06e0;
	Node0x13a06e0 -> Node0x13a0750;
	Node0x13a0750 -> Node0x13a07c0;
	Node0x139e998 -> Node0x13a0830;
	Node0x139ffd8 -> Node0x13a08a0;
	Node0x13a0830 -> Node0x13a08a0;
	Node0x13a0210 -> Node0x13a0910;
	Node0x13a08a0 -> Node0x13a0980;
	Node0x13a0980 -> Node0x13a09f0;
	Node0x13a08a0 -> Node0x13a0a60;
	Node0x139f908 -> Node0x13a0a60;
	Node0x13a0a60 -> Node0x13a0ad0;
	Node0x139e998 -> Node0x13a0b40;
	Node0x13a0b40 -> Node0x13a0bb0;
	Node0x13a0590 -> Node0x13a0bb0;
	Node0x13a0bb0 -> Node0x13a0c20;
	Node0x139ff78 -> Node0x13a0c20;
	Node0x13a0c20 -> Node0x13a0c90;
	Node0x13a0360 -> Node0x13a0c90;
	Node0x13a0c90 -> Node0x13a0d00;
	Node0x13a02f0 -> Node0x13a0d00;
	Node0x13a0d00 -> Node0x13a0d70;
	Node0x13a03d0 -> Node0x13a0d70;
	Node0x13a0d70 -> Node0x13a0de0;
	Node0x13a0440 -> Node0x13a0de0;
	Node0x13a0de0 -> Node0x13a0e50;
	Node0x139ffd8 -> Node0x13a0e50;
	Node0x13a0e50 -> Node0x13a0ec0;
	Node0x13a0670 -> Node0x13a0ec0;
	Node0x13a0ec0 -> Node0x13a0f30;
	Node0x13a0910 -> Node0x13a0f30;
	Node0x13a0f30 -> Node0x13a0fa0;
	Node0x13a0520 -> Node0x13a0fa0;
	Node0x13a0fa0 -> Node0x13a1010;
	Node0x13a0750 -> Node0x13a1010;
	Node0x13a1010 -> Node0x13a1080;
	Node0x13a07c0 -> Node0x13a1080;
	Node0x13a1080 -> Node0x13a10f0;
	Node0x13a09f0 -> Node0x13a10f0;
	Node0x13a10f0 -> Node0x13a1160;
	Node0x13a0ad0 -> Node0x13a1160;
	Node0x13a0280 -> Node0x13a11d0;
	Node0x13a1160 -> Node0x13a11d0;
	Node0x13a11d0 -> Node0x133d8b8;
	Node0x133d8b8 -> Node0x13a1260;
	Node0x139e6e8 -> Node0x13a1508;
	Node0x139e578 -> Node0x13a1668;
	Node0x139e3b8 -> Node0x13a1778;
	Node0x139dea8 -> Node0x13a1888;
}
