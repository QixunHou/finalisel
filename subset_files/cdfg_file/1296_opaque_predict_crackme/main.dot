digraph "DFG for'main' function" {
	Node0x117ce98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x117cf18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x117cfa8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x117d408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x117d4e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x117d608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x117d840[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x117d8f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x117e868[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x117eef0[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x117ef60[shape=record, label="  %9 = and i32 %7, %6"];
	Node0x117efd0[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x117f040[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x117f0b0[shape=record, label="  %12 = add i32 %11, %8"];
	Node0x117f120[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x117f190[shape=record, label="  %14 = or i32 %6, %13"];
	Node0x117f200[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x117f270[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x117f2e0[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x117f350[shape=record, label="  %18 = xor i32 %6, -1"];
	Node0x117f3c0[shape=record, label="  %19 = or i32 %7, %18"];
	Node0x117f430[shape=record, label="  %20 = mul i32 %19, -3"];
	Node0x117f4a0[shape=record, label="  %21 = shl i32 %14, 3"];
	Node0x117f510[shape=record, label="  %22 = xor i32 %21, -8"];
	Node0x117f580[shape=record, label="  %23 = shl i32 %17, 1"];
	Node0x117f5f0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x117f660[shape=record, label="  %25 = add i32 %6, %13"];
	Node0x117f6d0[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x117f740[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0x117f7b0[shape=record, label="  %28 = add i32 %27, %16"];
	Node0x117f820[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x117f890[shape=record, label="  %30 = add i32 %29, %10"];
	Node0x117f900[shape=record, label="  %31 = add i32 %30, %24"];
	Node0x117f970[shape=record, label="  %32 = add i32 %31, %22"];
	Node0x117fbf0[shape=record, label="  %33 = icmp eq i32 %12, %32"];
	Node0x111d9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x117fc80[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x117fed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1180038[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x11800f8[shape=record, label="  ret i32 0"];
	Node0x117ce98 -> Node0x117cf18;
	Node0x117cf18 -> Node0x117cfa8;
	Node0x117cfa8 -> Node0x117d408;
	Node0x117d408 -> Node0x117d4e8;
	Node0x117d4e8 -> Node0x117d608;
	Node0x117d608 -> Node0x117d840;
	Node0x117d840 -> Node0x117d8f8;
	Node0x117d8f8 -> Node0x117e868;
	Node0x117e868 -> Node0x117eef0;
	Node0x117eef0 -> Node0x117ef60;
	Node0x117ef60 -> Node0x117efd0;
	Node0x117efd0 -> Node0x117f040;
	Node0x117f040 -> Node0x117f0b0;
	Node0x117f0b0 -> Node0x117f120;
	Node0x117f120 -> Node0x117f190;
	Node0x117f190 -> Node0x117f200;
	Node0x117f200 -> Node0x117f270;
	Node0x117f270 -> Node0x117f2e0;
	Node0x117f2e0 -> Node0x117f350;
	Node0x117f350 -> Node0x117f3c0;
	Node0x117f3c0 -> Node0x117f430;
	Node0x117f430 -> Node0x117f4a0;
	Node0x117f4a0 -> Node0x117f510;
	Node0x117f510 -> Node0x117f580;
	Node0x117f580 -> Node0x117f5f0;
	Node0x117f5f0 -> Node0x117f660;
	Node0x117f660 -> Node0x117f6d0;
	Node0x117f6d0 -> Node0x117f740;
	Node0x117f740 -> Node0x117f7b0;
	Node0x117f7b0 -> Node0x117f820;
	Node0x117f820 -> Node0x117f890;
	Node0x117f890 -> Node0x117f900;
	Node0x117f900 -> Node0x117f970;
	Node0x117f970 -> Node0x117fbf0;
	Node0x117fbf0 -> Node0x111d9d8;
	Node0x111d9d8 -> Node0x117fc80;
	Node0x117fc80 -> Node0x117fed8;
	Node0x117fed8 -> Node0x1180038;
	Node0x1180038 -> Node0x11800f8;
edge [color=red]
	Node0x117ce98 -> Node0x117cfa8;
	Node0x117cfa8 -> Node0x117d408;
	Node0x117cf18 -> Node0x117d4e8;
	Node0x117d4e8 -> Node0x117d608;
	Node0x117ce98 -> Node0x117d840;
	Node0x117cf18 -> Node0x117d840;
	Node0x117ce98 -> Node0x117d8f8;
	Node0x117cf18 -> Node0x117e868;
	Node0x117e868 -> Node0x117eef0;
	Node0x117e868 -> Node0x117ef60;
	Node0x117d8f8 -> Node0x117ef60;
	Node0x117ef60 -> Node0x117efd0;
	Node0x117efd0 -> Node0x117f040;
	Node0x117f040 -> Node0x117f0b0;
	Node0x117eef0 -> Node0x117f0b0;
	Node0x117e868 -> Node0x117f120;
	Node0x117d8f8 -> Node0x117f190;
	Node0x117f120 -> Node0x117f190;
	Node0x117e868 -> Node0x117f200;
	Node0x117d8f8 -> Node0x117f200;
	Node0x117f200 -> Node0x117f270;
	Node0x117e868 -> Node0x117f2e0;
	Node0x117d8f8 -> Node0x117f2e0;
	Node0x117d8f8 -> Node0x117f350;
	Node0x117e868 -> Node0x117f3c0;
	Node0x117f350 -> Node0x117f3c0;
	Node0x117f3c0 -> Node0x117f430;
	Node0x117f190 -> Node0x117f4a0;
	Node0x117f4a0 -> Node0x117f510;
	Node0x117f2e0 -> Node0x117f580;
	Node0x117f580 -> Node0x117f5f0;
	Node0x117d8f8 -> Node0x117f660;
	Node0x117f120 -> Node0x117f660;
	Node0x117f660 -> Node0x117f6d0;
	Node0x117f190 -> Node0x117f6d0;
	Node0x117f6d0 -> Node0x117f740;
	Node0x117f200 -> Node0x117f740;
	Node0x117f740 -> Node0x117f7b0;
	Node0x117f270 -> Node0x117f7b0;
	Node0x117f7b0 -> Node0x117f820;
	Node0x117f430 -> Node0x117f820;
	Node0x117f820 -> Node0x117f890;
	Node0x117efd0 -> Node0x117f890;
	Node0x117f890 -> Node0x117f900;
	Node0x117f5f0 -> Node0x117f900;
	Node0x117f900 -> Node0x117f970;
	Node0x117f510 -> Node0x117f970;
	Node0x117f0b0 -> Node0x117fbf0;
	Node0x117f970 -> Node0x117fbf0;
	Node0x117fbf0 -> Node0x111d9d8;
	Node0x111d9d8 -> Node0x117fc80;
	Node0x117d4e8 -> Node0x117fed8;
	Node0x117cfa8 -> Node0x1180038;
}
