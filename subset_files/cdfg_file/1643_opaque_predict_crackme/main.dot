digraph "DFG for'main' function" {
	Node0x1e40e98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e40f18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e40fa8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e41408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e414e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e41608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e41840[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e418f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e42868[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e42ef0[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x1e42f60[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x1e42fd0[shape=record, label="  %10 = shl i32 %6, 1"];
	Node0x1e43040[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1e430b0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1e43120[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x1e43190[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1e43200[shape=record, label="  %15 = xor i32 %10, -2"];
	Node0x1e43270[shape=record, label="  %16 = shl i32 %8, 1"];
	Node0x1e432e0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1e43350[shape=record, label="  %18 = xor i32 %6, -1"];
	Node0x1e433c0[shape=record, label="  %19 = and i32 %7, %18"];
	Node0x1e43430[shape=record, label="  %20 = and i32 %6, %11"];
	Node0x1e434a0[shape=record, label="  %21 = mul i32 %20, 5"];
	Node0x1e43510[shape=record, label="  %22 = mul i32 %13, 6"];
	Node0x1e43580[shape=record, label="  %23 = shl i32 %9, 1"];
	Node0x1e435f0[shape=record, label="  %24 = sub i32 3, %10"];
	Node0x1e43660[shape=record, label="  %25 = sub i32 %24, %12"];
	Node0x1e436d0[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x1e43740[shape=record, label="  %27 = add i32 %26, %15"];
	Node0x1e437b0[shape=record, label="  %28 = sub i32 %27, %19"];
	Node0x1e43820[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x1e43890[shape=record, label="  %30 = add i32 %29, %22"];
	Node0x1e43900[shape=record, label="  %31 = add i32 %30, %23"];
	Node0x1e43970[shape=record, label="  %32 = add i32 %31, %17"];
	Node0x1e43bf0[shape=record, label="  %33 = icmp eq i32 %8, %32"];
	Node0x1de19d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e43c80[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x1e43ed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e44038[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e440f8[shape=record, label="  ret i32 0"];
	Node0x1e40e98 -> Node0x1e40f18;
	Node0x1e40f18 -> Node0x1e40fa8;
	Node0x1e40fa8 -> Node0x1e41408;
	Node0x1e41408 -> Node0x1e414e8;
	Node0x1e414e8 -> Node0x1e41608;
	Node0x1e41608 -> Node0x1e41840;
	Node0x1e41840 -> Node0x1e418f8;
	Node0x1e418f8 -> Node0x1e42868;
	Node0x1e42868 -> Node0x1e42ef0;
	Node0x1e42ef0 -> Node0x1e42f60;
	Node0x1e42f60 -> Node0x1e42fd0;
	Node0x1e42fd0 -> Node0x1e43040;
	Node0x1e43040 -> Node0x1e430b0;
	Node0x1e430b0 -> Node0x1e43120;
	Node0x1e43120 -> Node0x1e43190;
	Node0x1e43190 -> Node0x1e43200;
	Node0x1e43200 -> Node0x1e43270;
	Node0x1e43270 -> Node0x1e432e0;
	Node0x1e432e0 -> Node0x1e43350;
	Node0x1e43350 -> Node0x1e433c0;
	Node0x1e433c0 -> Node0x1e43430;
	Node0x1e43430 -> Node0x1e434a0;
	Node0x1e434a0 -> Node0x1e43510;
	Node0x1e43510 -> Node0x1e43580;
	Node0x1e43580 -> Node0x1e435f0;
	Node0x1e435f0 -> Node0x1e43660;
	Node0x1e43660 -> Node0x1e436d0;
	Node0x1e436d0 -> Node0x1e43740;
	Node0x1e43740 -> Node0x1e437b0;
	Node0x1e437b0 -> Node0x1e43820;
	Node0x1e43820 -> Node0x1e43890;
	Node0x1e43890 -> Node0x1e43900;
	Node0x1e43900 -> Node0x1e43970;
	Node0x1e43970 -> Node0x1e43bf0;
	Node0x1e43bf0 -> Node0x1de19d8;
	Node0x1de19d8 -> Node0x1e43c80;
	Node0x1e43c80 -> Node0x1e43ed8;
	Node0x1e43ed8 -> Node0x1e44038;
	Node0x1e44038 -> Node0x1e440f8;
edge [color=red]
	Node0x1e40e98 -> Node0x1e40fa8;
	Node0x1e40fa8 -> Node0x1e41408;
	Node0x1e40f18 -> Node0x1e414e8;
	Node0x1e414e8 -> Node0x1e41608;
	Node0x1e40e98 -> Node0x1e41840;
	Node0x1e40f18 -> Node0x1e41840;
	Node0x1e40e98 -> Node0x1e418f8;
	Node0x1e40f18 -> Node0x1e42868;
	Node0x1e42868 -> Node0x1e42ef0;
	Node0x1e418f8 -> Node0x1e42ef0;
	Node0x1e42868 -> Node0x1e42f60;
	Node0x1e418f8 -> Node0x1e42f60;
	Node0x1e418f8 -> Node0x1e42fd0;
	Node0x1e42868 -> Node0x1e43040;
	Node0x1e43040 -> Node0x1e430b0;
	Node0x1e42868 -> Node0x1e43120;
	Node0x1e418f8 -> Node0x1e43120;
	Node0x1e43120 -> Node0x1e43190;
	Node0x1e42fd0 -> Node0x1e43200;
	Node0x1e42ef0 -> Node0x1e43270;
	Node0x1e43270 -> Node0x1e432e0;
	Node0x1e418f8 -> Node0x1e43350;
	Node0x1e42868 -> Node0x1e433c0;
	Node0x1e43350 -> Node0x1e433c0;
	Node0x1e418f8 -> Node0x1e43430;
	Node0x1e43040 -> Node0x1e43430;
	Node0x1e43430 -> Node0x1e434a0;
	Node0x1e43120 -> Node0x1e43510;
	Node0x1e42f60 -> Node0x1e43580;
	Node0x1e42fd0 -> Node0x1e435f0;
	Node0x1e435f0 -> Node0x1e43660;
	Node0x1e430b0 -> Node0x1e43660;
	Node0x1e43660 -> Node0x1e436d0;
	Node0x1e43190 -> Node0x1e436d0;
	Node0x1e436d0 -> Node0x1e43740;
	Node0x1e43200 -> Node0x1e43740;
	Node0x1e43740 -> Node0x1e437b0;
	Node0x1e433c0 -> Node0x1e437b0;
	Node0x1e437b0 -> Node0x1e43820;
	Node0x1e434a0 -> Node0x1e43820;
	Node0x1e43820 -> Node0x1e43890;
	Node0x1e43510 -> Node0x1e43890;
	Node0x1e43890 -> Node0x1e43900;
	Node0x1e43580 -> Node0x1e43900;
	Node0x1e43900 -> Node0x1e43970;
	Node0x1e432e0 -> Node0x1e43970;
	Node0x1e42ef0 -> Node0x1e43bf0;
	Node0x1e43970 -> Node0x1e43bf0;
	Node0x1e43bf0 -> Node0x1de19d8;
	Node0x1de19d8 -> Node0x1e43c80;
	Node0x1e414e8 -> Node0x1e43ed8;
	Node0x1e40fa8 -> Node0x1e44038;
}
