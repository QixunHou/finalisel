digraph "DFG for'main' function" {
	Node0xa68c48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa68cc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa68d58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xa68db8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xa69238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa6bff8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xa6c0d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa6c198[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xa6c248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa6c4a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xa6c568[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa6d4d8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa6db48[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xa6dc40[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xa6de48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa6dfa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa6e0b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa6e178[shape=record, label="  ret i32 0"];
	Node0xa68c48 -> Node0xa68cc8;
	Node0xa68cc8 -> Node0xa68d58;
	Node0xa68d58 -> Node0xa68db8;
	Node0xa68db8 -> Node0xa69238;
	Node0xa69238 -> Node0xa6bff8;
	Node0xa6bff8 -> Node0xa6c0d8;
	Node0xa6c0d8 -> Node0xa6c198;
	Node0xa6c198 -> Node0xa6c248;
	Node0xa6c248 -> Node0xa6c4a8;
	Node0xa6c4a8 -> Node0xa6c568;
	Node0xa6c568 -> Node0xa6d4d8;
	Node0xa6d4d8 -> Node0xa6db48;
	Node0xa6db48 -> Node0xa6dc40;
	Node0xa6dc40 -> Node0xa6de48;
	Node0xa6de48 -> Node0xa6dfa8;
	Node0xa6dfa8 -> Node0xa6e0b8;
	Node0xa6e0b8 -> Node0xa6e178;
edge [color=red]
	Node0xa68c48 -> Node0xa68db8;
	Node0xa68db8 -> Node0xa69238;
	Node0xa68cc8 -> Node0xa6bff8;
	Node0xa6bff8 -> Node0xa6c0d8;
	Node0xa68d58 -> Node0xa6c198;
	Node0xa6c198 -> Node0xa6c248;
	Node0xa68c48 -> Node0xa6c4a8;
	Node0xa68cc8 -> Node0xa6c4a8;
	Node0xa68d58 -> Node0xa6c4a8;
	Node0xa68c48 -> Node0xa6c568;
	Node0xa68cc8 -> Node0xa6d4d8;
	Node0xa68d58 -> Node0xa6db48;
	Node0xa6c568 -> Node0xa6dc40;
	Node0xa6d4d8 -> Node0xa6dc40;
	Node0xa6db48 -> Node0xa6dc40;
	Node0xa6c198 -> Node0xa6de48;
	Node0xa6bff8 -> Node0xa6dfa8;
	Node0xa68db8 -> Node0xa6e0b8;
}
