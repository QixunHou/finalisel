; ModuleID = '../.././c_source_file/1104_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1104_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %1, %0
  %8 = or i32 %2, %1
  %9 = xor i32 %8, -1
  %10 = or i32 %7, %9
  %11 = and i32 %5, %3
  %12 = and i32 %11, %4
  %13 = xor i32 %4, -1
  %14 = xor i32 %5, %3
  %15 = and i32 %14, %13
  %16 = or i32 %12, %15
  %17 = add i32 %16, %10
  %18 = and i32 %4, %3
  %19 = xor i32 %18, -1
  %20 = xor i32 %5, %4
  %21 = xor i32 %20, -1
  %22 = and i32 %21, %19
  %23 = shl i32 %22, 1
  %24 = sub i32 %17, %23
  %25 = xor i32 %1, -1
  %26 = and i32 %25, %0
  %27 = xor i32 %26, -1
  %28 = and i32 %27, %2
  %29 = xor i32 %2, %0
  %30 = xor i32 %29, -1
  %31 = or i32 %30, %1
  %32 = and i32 %29, %1
  %33 = and i32 %25, %2
  %34 = and i32 %33, %0
  %35 = xor i32 %0, -1
  %36 = or i32 %25, %2
  %37 = and i32 %36, %35
  %38 = or i32 %34, %37
  %39 = xor i32 %2, -1
  %40 = and i32 %39, %1
  %41 = xor i32 %40, %0
  %42 = shl i32 %41, 1
  %43 = xor i32 %36, %0
  %44 = xor i32 %43, -1
  %45 = xor i32 %34, %44
  %46 = and i32 %30, %25
  %47 = or i32 %25, %0
  %48 = xor i32 %47, -1
  %49 = xor i32 %48, %2
  %50 = and i32 %8, %35
  %51 = and i32 %2, %0
  %52 = xor i32 %51, %8
  %53 = shl i32 %52, 2
  %54 = and i32 %2, %1
  %55 = or i32 %54, %26
  %56 = xor i32 %7, -1
  %57 = xor i32 %2, %1
  %58 = and i32 %57, %56
  %59 = or i32 %1, %0
  %60 = xor i32 %59, %2
  %61 = or i32 %39, %1
  %62 = xor i32 %61, -1
  %63 = or i32 %62, %0
  %64 = shl i32 %63, 1
  %65 = or i32 %39, %0
  %66 = xor i32 %65, -1
  %67 = or i32 %66, %25
  %68 = xor i32 %62, %0
  %69 = or i32 %62, %35
  %70 = xor i32 %1, %0
  %71 = xor i32 %70, -1
  %72 = and i32 %29, %71
  %73 = xor i32 %40, -1
  %74 = xor i32 %26, %73
  %75 = or i32 %2, %0
  %76 = xor i32 %75, -1
  %77 = or i32 %76, %1
  %78 = shl i32 %77, 1
  %79 = and i32 %39, %0
  %80 = or i32 %79, %54
  %81 = and i32 %54, %0
  %82 = or i32 %81, %50
  %83 = xor i32 %56, %2
  %84 = xor i32 %54, -1
  %85 = or i32 %84, %35
  %86 = xor i32 %51, -1
  %87 = and i32 %86, %25
  %88 = or i32 %9, %35
  %89 = or i32 %70, %76
  %90 = xor i32 %57, %0
  %91 = xor i32 %81, %90
  %92 = or i32 %29, %26
  %93 = xor i32 %47, %2
  %94 = or i32 %79, %71
  %95 = xor i32 %59, -1
  %96 = or i32 %54, %0
  %97 = or i32 %73, %35
  %98 = xor i32 %9, %0
  %99 = or i32 %29, %71
  %100 = and i32 %39, %56
  %101 = or i32 %61, %35
  %102 = or i32 %40, %26
  %103 = xor i32 %90, -1
  %104 = or i32 %81, %103
  %105 = and i32 %57, %59
  %106 = and i32 %29, %27
  %107 = shl i32 %106, 1
  %108 = or i32 %40, %35
  %109 = and i32 %8, %0
  %110 = or i32 %7, %39
  %111 = or i32 %70, %30
  %112 = or i32 %51, %48
  %113 = or i32 %71, %2
  %114 = and i32 %29, %70
  %115 = or i32 %30, %71
  %116 = shl i32 %115, 1
  %117 = and i32 %65, %25
  %118 = and i32 %33, %35
  %119 = and i32 %36, %0
  %120 = xor i32 %119, -1
  %121 = xor i32 %118, %120
  %122 = and i32 %30, %1
  %123 = and i32 %84, %35
  %124 = or i32 %34, %43
  %125 = xor i32 %65, %7
  %126 = or i32 %7, %62
  %127 = or i32 %118, %119
  %128 = or i32 %51, %70
  %129 = shl i32 %128, 1
  %130 = and i32 %29, %59
  %131 = shl i32 %130, 1
  %132 = and i32 %57, %27
  %133 = shl i32 %132, 1
  %134 = shl i32 %35, 1
  %135 = xor i32 %27, %2
  %136 = or i32 %57, %7
  %137 = shl i32 %136, 1
  %138 = and i32 %39, %27
  %139 = shl i32 %138, 1
  %140 = and i32 %54, %35
  %141 = xor i32 %140, 2147483647
  %142 = xor i32 %141, %109
  %143 = shl i32 %142, 1
  %144 = xor i32 %66, %1
  %145 = shl i32 %144, 1
  %146 = and i32 %57, %0
  %147 = or i32 %140, %146
  %148 = xor i32 %37, 2147483647
  %149 = xor i32 %148, %34
  %150 = shl i32 %149, 1
  %151 = or i32 %39, %71
  %152 = xor i32 %79, %1
  %153 = and i32 %75, %70
  %154 = or i32 %26, %2
  %155 = xor i32 %79, -1
  %156 = and i32 %155, %71
  %157 = or i32 %29, %70
  %158 = shl i32 %157, 1
  %159 = xor i32 %95, %2
  %160 = or i32 %29, %1
  %161 = and i32 %86, %1
  %162 = or i32 %57, %35
  %163 = xor i32 %118, %162
  %164 = xor i32 %57, -1
  %165 = and i32 %47, %164
  %166 = shl i32 %165, 1
  %167 = or i32 %7, %30
  %168 = or i32 %164, %95
  %169 = or i32 %76, %71
  %170 = xor i32 %79, %84
  %171 = xor i32 %141, %146
  %172 = shl i32 %171, 1
  %173 = or i32 %29, %48
  %174 = shl i32 %173, 1
  %175 = or i32 %7, %66
  %176 = or i32 %76, %25
  %177 = or i32 %57, %0
  %178 = xor i32 %34, %177
  %179 = and i32 %29, %25
  %180 = or i32 %70, %39
  %181 = xor i32 %177, 2147483647
  %182 = or i32 %181, %34
  %183 = or i32 %164, %48
  %184 = xor i32 %81, -1
  %185 = xor i32 %50, %184
  %186 = and i32 %75, %71
  %187 = shl i32 %56, 1
  %188 = or i32 %51, %9
  %189 = and i32 %164, %35
  %190 = shl i32 %189, 1
  %191 = xor i32 %51, %47
  %192 = xor i32 %8, %0
  %193 = xor i32 %192, 1073741823
  %194 = xor i32 %193, %81
  %195 = shl i32 %194, 2
  %196 = xor i32 %164, %0
  %197 = add i32 %40, 1
  %198 = and i32 %30, %27
  %199 = add i32 %75, 1
  %200 = and i32 %61, %0
  %201 = shl i32 %200, 1
  %202 = or i32 %57, %48
  %203 = or i32 %34, %90
  %204 = xor i32 %86, %1
  %205 = and i32 %59, %2
  %206 = shl i32 %205, 1
  %207 = or i32 %51, %40
  %208 = xor i32 %155, %1
  %209 = and i32 %155, %1
  %210 = xor i32 %75, %1
  %211 = or i32 %26, %164
  %212 = and i32 %155, %25
  %213 = or i32 %79, %70
  %214 = and i32 %57, %35
  %215 = and i32 %56, %2
  %216 = add i32 %79, 1
  %217 = xor i32 %34, %103
  %218 = or i32 %26, %30
  %219 = and i32 %75, %1
  %220 = and i32 %29, %47
  %221 = shl i32 %220, 1
  %222 = or i32 %30, %25
  %223 = xor i32 %61, %0
  %224 = or i32 %66, %71
  %225 = and i32 %65, %1
  %226 = or i32 %95, %2
  %227 = and i32 %59, %164
  %228 = or i32 %30, %48
  %229 = and i32 %70, %2
  %230 = and i32 %39, %71
  %231 = and i32 %75, %25
  %232 = or i32 %57, %26
  %233 = and i32 %59, %39
  %234 = or i32 %81, %192
  %235 = xor i32 %51, %73
  %236 = and i32 %59, %30
  %237 = and i32 %47, %2
  %238 = and i32 %70, %86
  %239 = or i32 %79, %25
  %240 = or i32 %7, %164
  %241 = add i32 %51, 1
  %242 = or i32 %8, %35
  %243 = shl i32 %242, 1
  %244 = and i32 %71, %2
  %245 = and i32 %65, %71
  %246 = and i32 %30, %71
  %247 = and i32 %73, %35
  %248 = or i32 %26, %39
  %249 = or i32 %79, %1
  %250 = xor i32 %214, %184
  %251 = or i32 %79, %62
  %252 = or i32 %8, %0
  %253 = or i32 %7, %2
  %254 = and i32 %164, %0
  %255 = xor i32 %26, %2
  %256 = and i32 %164, %27
  %257 = and i32 %84, %0
  %258 = or i32 %54, %35
  %259 = shl i32 %258, 1
  %260 = or i32 %39, %95
  %261 = or i32 %164, %35
  %262 = xor i32 %61, %7
  %263 = or i32 %51, %1
  %264 = xor i32 %73, %0
  %265 = or i32 %164, %0
  %266 = and i32 %9, %35
  %267 = mul i32 %266, 24
  %268 = and i32 %40, %35
  %269 = mul i32 %268, 35
  %270 = and i32 %9, %0
  %271 = and i32 %40, %0
  %272 = mul i32 %271, 50
  %273 = and i32 %62, %35
  %274 = mul i32 %273, 26
  %275 = mul i32 %140, 28
  %276 = and i32 %62, %0
  %277 = mul i32 %81, 34
  %278 = and i32 %5, %4
  %279 = xor i32 %3, -1
  %280 = or i32 %279, %4
  %281 = xor i32 %280, -1
  %282 = or i32 %278, %281
  %283 = or i32 %5, %3
  %284 = xor i32 %283, %4
  %285 = xor i32 %284, 2147483647
  %286 = xor i32 %285, %12
  %287 = or i32 %5, %4
  %288 = xor i32 %4, %3
  %289 = and i32 %287, %288
  %290 = xor i32 %5, -1
  %291 = and i32 %290, %4
  %292 = xor i32 %291, -1
  %293 = and i32 %288, %292
  %294 = and i32 %19, %5
  %295 = xor i32 %283, -1
  %296 = or i32 %278, %295
  %297 = xor i32 %287, -1
  %298 = xor i32 %288, -1
  %299 = or i32 %297, %298
  %300 = and i32 %279, %4
  %301 = xor i32 %11, -1
  %302 = xor i32 %300, %301
  %303 = shl i32 %302, 1
  %304 = or i32 %14, %13
  %305 = and i32 %290, %3
  %306 = or i32 %305, %13
  %307 = xor i32 %305, -1
  %308 = xor i32 %307, %4
  %309 = xor i32 %300, -1
  %310 = and i32 %21, %309
  %311 = or i32 %20, %279
  %312 = or i32 %4, %3
  %313 = xor i32 %312, -1
  %314 = or i32 %20, %313
  %315 = or i32 %290, %3
  %316 = or i32 %313, %5
  %317 = shl i32 %316, 1
  %318 = or i32 %278, %313
  %319 = or i32 %11, %13
  %320 = xor i32 %301, %4
  %321 = shl i32 %284, 1
  %322 = and i32 %279, %5
  %323 = and i32 %322, %13
  %324 = xor i32 %323, %304
  %325 = xor i32 %14, -1
  %326 = xor i32 %325, %4
  %327 = xor i32 %315, -1
  %328 = or i32 %327, %4
  %329 = or i32 %281, %5
  %330 = or i32 %300, %5
  %331 = xor i32 %278, %283
  %332 = and i32 %287, %279
  %333 = or i32 %307, %13
  %334 = or i32 %288, %21
  %335 = or i32 %291, %279
  %336 = xor i32 %278, -1
  %337 = and i32 %336, %3
  %338 = and i32 %21, %3
  %339 = or i32 %290, %4
  %340 = and i32 %339, %279
  %341 = and i32 %21, %298
  %342 = or i32 %21, %298
  %343 = and i32 %14, %309
  %344 = and i32 %21, %279
  %345 = shl i32 %344, 1
  %346 = or i32 %288, %5
  %347 = and i32 %14, %4
  %348 = shl i32 %347, 1
  %349 = and i32 %283, %13
  %350 = or i32 %12, %349
  %351 = and i32 %14, %312
  %352 = or i32 %297, %3
  %353 = or i32 %278, %288
  %354 = or i32 %290, %281
  %355 = xor i32 %339, -1
  %356 = or i32 %355, %298
  %357 = and i32 %312, %21
  %358 = and i32 %20, %309
  %359 = and i32 %280, %325
  %360 = or i32 %21, %279
  %361 = and i32 %339, %298
  %362 = shl i32 %361, 1
  %363 = or i32 %18, %290
  %364 = and i32 %11, %13
  %365 = or i32 %364, %347
  %366 = shl i32 %365, 1
  %367 = or i32 %279, %5
  %368 = and i32 %367, %4
  %369 = xor i32 %368, 2147483647
  %370 = xor i32 %369, %323
  %371 = xor i32 %291, %301
  %372 = or i32 %14, %4
  %373 = and i32 %283, %4
  %374 = xor i32 %373, -1
  %375 = xor i32 %364, %374
  %376 = or i32 %11, %4
  %377 = or i32 %278, %3
  %378 = and i32 %20, %298
  %379 = and i32 %20, %288
  %380 = or i32 %355, %279
  %381 = shl i32 %380, 1
  %382 = xor i32 %295, %4
  %383 = xor i32 %14, %4
  %384 = xor i32 %12, %383
  %385 = xor i32 %315, %4
  %386 = xor i32 %278, %3
  %387 = and i32 %336, %279
  %388 = xor i32 %19, %5
  %389 = or i32 %291, %288
  %390 = or i32 %283, %4
  %391 = add i32 %283, 1
  %392 = or i32 %283, %13
  %393 = and i32 %312, %290
  %394 = and i32 %312, %5
  %395 = or i32 %14, %18
  %396 = or i32 %288, %355
  %397 = and i32 %290, %19
  %398 = xor i32 %327, %4
  %399 = or i32 %290, %313
  %400 = or i32 %20, %288
  %401 = xor i32 %400, -1
  %402 = xor i32 %11, %4
  %403 = shl i32 %402, 1
  %404 = xor i32 %278, %307
  %405 = or i32 %325, %4
  %406 = and i32 %322, %4
  %407 = and i32 %367, %13
  %408 = xor i32 %407, 2147483647
  %409 = xor i32 %408, %406
  %410 = or i32 %315, %13
  %411 = or i32 %297, %279
  %412 = or i32 %301, %13
  %413 = xor i32 %312, %5
  %414 = shl i32 %413, 1
  %415 = xor i32 %281, %5
  %416 = and i32 %20, %19
  %417 = or i32 %291, %327
  %418 = or i32 %295, %4
  %419 = xor i32 %309, %5
  %420 = or i32 %290, %298
  %421 = and i32 %309, %5
  %422 = or i32 %295, %13
  %423 = and i32 %325, %309
  %424 = add i32 %300, 1
  %425 = xor i32 %300, %5
  %426 = xor i32 %349, 1073741823
  %427 = xor i32 %426, %12
  %428 = shl i32 %427, 2
  %429 = and i32 %20, %279
  %430 = xor i32 %287, %3
  %431 = and i32 %280, %5
  %432 = or i32 %327, %13
  %433 = and i32 %312, %325
  %434 = and i32 %301, %13
  %435 = or i32 %14, %281
  %436 = xor i32 %336, %3
  %437 = and i32 %288, %21
  %438 = xor i32 %291, %315
  %439 = and i32 %20, %280
  %440 = and i32 %325, %13
  %441 = and i32 %20, %3
  %442 = or i32 %11, %300
  %443 = or i32 %301, %4
  %444 = or i32 %278, %279
  %445 = or i32 %18, %5
  %446 = shl i32 %445, 1
  %447 = and i32 %301, %4
  %448 = xor i32 %297, %3
  %449 = or i32 %278, %305
  %450 = shl i32 %449, 2
  %451 = or i32 %21, %3
  %452 = and i32 %292, %279
  %453 = xor i32 %300, %307
  %454 = add i32 %4, 1
  %455 = xor i32 %305, %4
  %456 = or i32 %288, %297
  %457 = shl i32 %456, 1
  %458 = or i32 %307, %4
  %459 = and i32 %325, %4
  %460 = shl i32 %459, 1
  %461 = and i32 %280, %290
  %462 = or i32 %355, %3
  %463 = and i32 %315, %13
  %464 = and i32 %307, %13
  %465 = or i32 %18, %297
  %466 = xor i32 %313, %5
  %467 = xor i32 %15, -1
  %468 = xor i32 %12, %467
  %469 = xor i32 %315, %18
  %470 = xor i32 %292, %3
  %471 = or i32 %325, %13
  %472 = or i32 %406, %383
  %473 = shl i32 %472, 1
  %474 = and i32 %292, %298
  %475 = and i32 %307, %4
  %476 = xor i32 %304, -1
  %477 = or i32 %323, %476
  %478 = shl i32 %21, 2
  %479 = or i32 %12, %284
  %480 = and i32 %298, %5
  %481 = xor i32 %339, %18
  %482 = and i32 %325, %19
  %483 = or i32 %305, %4
  %484 = xor i32 %280, %5
  %485 = or i32 %21, %313
  %486 = and i32 %336, %298
  %487 = or i32 %288, %290
  %488 = and i32 %287, %3
  %489 = or i32 %18, %355
  %490 = or i32 %300, %290
  %491 = or i32 %18, %327
  %492 = and i32 %288, %5
  %493 = and i32 %339, %288
  %494 = or i32 %291, %11
  %495 = xor i32 %406, %372
  %496 = or i32 %291, %298
  %497 = or i32 %20, %281
  %498 = or i32 %406, %407
  %499 = shl i32 %305, 1
  %500 = and i32 %315, %4
  %501 = or i32 %325, %281
  %502 = xor i32 %383, -1
  %503 = or i32 %12, %502
  %504 = and i32 %288, %290
  %505 = xor i32 %278, %312
  %506 = xor i32 %291, %3
  %507 = add i32 %14, 1
  %508 = or i32 %300, %325
  %509 = xor i32 %372, -1
  %510 = or i32 %406, %509
  %511 = or i32 %18, %21
  %512 = or i32 %18, %325
  %513 = or i32 %325, %313
  %514 = and i32 %295, %13
  %515 = mul i32 %514, -7
  %516 = and i32 %305, %13
  %517 = and i32 %295, %4
  %518 = and i32 %305, %4
  %519 = and i32 %327, %13
  %520 = and i32 %327, %4
  %521 = mul i32 %520, 23
  %522 = add i32 %95, %71
  %523 = add i32 %522, %3
  %524 = add i32 %523, %61
  %525 = add i32 %524, %215
  %526 = add i32 %525, %29
  %527 = add i32 %526, %110
  %528 = add i32 %527, %100
  %529 = add i32 %528, %4
  %530 = add i32 %529, %252
  %531 = add i32 %530, %251
  %532 = add i32 %531, %239
  %533 = add i32 %532, %218
  %534 = add i32 %533, %204
  %535 = add i32 %534, %112
  %536 = add i32 %535, %19
  %537 = add i32 %536, %5
  %538 = add i32 %537, %420
  %539 = add i32 %538, %393
  %540 = add i32 %539, %182
  %541 = add i32 %540, %470
  %542 = add i32 %541, %462
  %543 = add i32 %542, %436
  %544 = add i32 %543, %433
  %545 = add i32 %544, %429
  %546 = add i32 %545, %418
  %547 = add i32 %546, %396
  %548 = add i32 %547, %358
  %549 = add i32 %548, %332
  %550 = add i32 %549, %311
  %551 = add i32 %550, %370
  %552 = add i32 %551, %409
  %553 = add i32 %552, %286
  %554 = shl i32 %553, 1
  %555 = sub i32 %70, %160
  %556 = sub i32 %555, %147
  %557 = add i32 %556, %394
  %558 = add i32 %557, %363
  %559 = sub i32 %558, %319
  %560 = sub i32 %559, %376
  %561 = mul i32 %560, 5
  %562 = add i32 %154, %9
  %563 = add i32 %562, %231
  %564 = add i32 %563, %397
  %565 = add i32 %564, %411
  %566 = add i32 %565, %364
  %567 = shl i32 %566, 2
  %568 = add i32 %519, %517
  %569 = mul i32 %568, -6
  %570 = sub i32 %12, %516
  %571 = mul i32 %570, 9
  %572 = add i32 %276, %270
  %573 = mul i32 %572, 14
  %574 = sub i32 %161, %177
  %575 = sub i32 %574, %461
  %576 = add i32 %575, %336
  %577 = sub i32 %576, %444
  %578 = sub i32 %577, %379
  %579 = add i32 %578, %384
  %580 = mul i32 %579, 3
  %581 = add i32 %25, %0
  %582 = sub i32 %581, %134
  %583 = sub i32 %582, %1
  %584 = sub i32 %583, %7
  %585 = sub i32 %584, %26
  %586 = sub i32 %585, %59
  %587 = add i32 %586, %27
  %588 = add i32 %587, %28
  %589 = add i32 %588, %40
  %590 = sub i32 %589, %49
  %591 = sub i32 %590, %60
  %592 = sub i32 %591, %83
  %593 = add i32 %592, %66
  %594 = sub i32 %593, %93
  %595 = sub i32 %594, %113
  %596 = sub i32 %595, %135
  %597 = add i32 %596, %151
  %598 = add i32 %597, %159
  %599 = add i32 %598, %180
  %600 = sub i32 %599, %187
  %601 = add i32 %600, %79
  %602 = add i32 %601, %197
  %603 = add i32 %602, %199
  %604 = add i32 %603, %30
  %605 = add i32 %604, %62
  %606 = sub i32 %605, %75
  %607 = add i32 %606, %216
  %608 = sub i32 %607, %65
  %609 = sub i32 %608, %226
  %610 = add i32 %609, %229
  %611 = add i32 %610, %230
  %612 = add i32 %611, %233
  %613 = sub i32 %612, %237
  %614 = add i32 %613, %241
  %615 = sub i32 %614, %244
  %616 = add i32 %615, %248
  %617 = sub i32 %616, %8
  %618 = add i32 %617, %253
  %619 = sub i32 %618, %255
  %620 = add i32 %619, %84
  %621 = sub i32 %620, %260
  %622 = sub i32 %621, %31
  %623 = sub i32 %622, %32
  %624 = sub i32 %623, %46
  %625 = add i32 %624, %50
  %626 = sub i32 %625, %55
  %627 = add i32 %626, %58
  %628 = sub i32 %627, %67
  %629 = sub i32 %628, %68
  %630 = add i32 %629, %69
  %631 = sub i32 %630, %72
  %632 = add i32 %631, %74
  %633 = sub i32 %632, %80
  %634 = add i32 %633, %85
  %635 = sub i32 %634, %87
  %636 = add i32 %635, %88
  %637 = sub i32 %636, %89
  %638 = add i32 %637, %92
  %639 = sub i32 %638, %94
  %640 = sub i32 %639, %96
  %641 = add i32 %640, %97
  %642 = add i32 %641, %98
  %643 = sub i32 %642, %99
  %644 = sub i32 %643, %101
  %645 = sub i32 %644, %102
  %646 = add i32 %645, %105
  %647 = sub i32 %646, %108
  %648 = sub i32 %647, %109
  %649 = sub i32 %648, %111
  %650 = add i32 %649, %114
  %651 = sub i32 %650, %117
  %652 = add i32 %651, %122
  %653 = sub i32 %652, %123
  %654 = sub i32 %653, %125
  %655 = add i32 %654, %126
  %656 = sub i32 %655, %139
  %657 = add i32 %656, %152
  %658 = sub i32 %657, %153
  %659 = add i32 %658, %156
  %660 = sub i32 %659, %161
  %661 = sub i32 %660, %167
  %662 = sub i32 %661, %168
  %663 = sub i32 %662, %169
  %664 = add i32 %663, %170
  %665 = sub i32 %664, %175
  %666 = add i32 %665, %176
  %667 = sub i32 %666, %179
  %668 = add i32 %667, %183
  %669 = add i32 %668, %162
  %670 = add i32 %669, %186
  %671 = add i32 %670, %188
  %672 = sub i32 %671, %191
  %673 = add i32 %672, %196
  %674 = sub i32 %673, %198
  %675 = add i32 %674, %202
  %676 = sub i32 %675, %206
  %677 = sub i32 %676, %207
  %678 = sub i32 %677, %208
  %679 = add i32 %678, %209
  %680 = add i32 %679, %210
  %681 = sub i32 %680, %211
  %682 = sub i32 %681, %212
  %683 = sub i32 %682, %213
  %684 = sub i32 %683, %214
  %685 = add i32 %684, %219
  %686 = sub i32 %685, %222
  %687 = sub i32 %686, %223
  %688 = sub i32 %687, %224
  %689 = sub i32 %688, %225
  %690 = sub i32 %689, %227
  %691 = sub i32 %690, %228
  %692 = add i32 %691, %232
  %693 = add i32 %692, %235
  %694 = sub i32 %693, %236
  %695 = sub i32 %694, %238
  %696 = add i32 %695, %240
  %697 = add i32 %696, %146
  %698 = add i32 %697, %245
  %699 = add i32 %698, %246
  %700 = sub i32 %699, %247
  %701 = sub i32 %700, %90
  %702 = add i32 %701, %192
  %703 = sub i32 %702, %249
  %704 = add i32 %703, %254
  %705 = add i32 %704, %256
  %706 = sub i32 %705, %257
  %707 = sub i32 %706, %261
  %708 = sub i32 %707, %262
  %709 = add i32 %708, %263
  %710 = sub i32 %709, %264
  %711 = add i32 %710, %265
  %712 = add i32 %711, %454
  %713 = sub i32 %712, %38
  %714 = sub i32 %713, %42
  %715 = add i32 %714, %45
  %716 = sub i32 %715, %53
  %717 = sub i32 %716, %64
  %718 = sub i32 %717, %78
  %719 = add i32 %718, %82
  %720 = add i32 %719, %91
  %721 = sub i32 %720, %104
  %722 = sub i32 %721, %107
  %723 = sub i32 %722, %116
  %724 = sub i32 %723, %121
  %725 = add i32 %724, %124
  %726 = sub i32 %725, %127
  %727 = sub i32 %726, %129
  %728 = sub i32 %727, %131
  %729 = sub i32 %728, %133
  %730 = sub i32 %729, %137
  %731 = sub i32 %730, %145
  %732 = sub i32 %731, %158
  %733 = sub i32 %732, %163
  %734 = sub i32 %733, %166
  %735 = sub i32 %734, %174
  %736 = add i32 %735, %178
  %737 = sub i32 %736, %185
  %738 = sub i32 %737, %190
  %739 = sub i32 %738, %201
  %740 = add i32 %739, %203
  %741 = sub i32 %740, %217
  %742 = sub i32 %741, %221
  %743 = add i32 %742, %234
  %744 = sub i32 %743, %243
  %745 = add i32 %744, %250
  %746 = sub i32 %745, %259
  %747 = add i32 %746, %267
  %748 = add i32 %747, %269
  %749 = add i32 %748, %272
  %750 = add i32 %749, %274
  %751 = add i32 %750, %275
  %752 = add i32 %751, %277
  %753 = add i32 %752, %281
  %754 = add i32 %753, %290
  %755 = add i32 %754, %298
  %756 = add i32 %755, %313
  %757 = add i32 %756, %424
  %758 = add i32 %757, %18
  %759 = sub i32 %758, %288
  %760 = sub i32 %759, %312
  %761 = sub i32 %760, %294
  %762 = sub i32 %761, %329
  %763 = sub i32 %762, %330
  %764 = sub i32 %763, %14
  %765 = sub i32 %764, %346
  %766 = sub i32 %765, %339
  %767 = add i32 %766, %354
  %768 = add i32 %767, %283
  %769 = add i32 %768, %355
  %770 = add i32 %769, %388
  %771 = add i32 %770, %391
  %772 = add i32 %771, %20
  %773 = add i32 %772, %399
  %774 = add i32 %773, %415
  %775 = add i32 %774, %419
  %776 = add i32 %775, %421
  %777 = add i32 %776, %425
  %778 = add i32 %777, %431
  %779 = add i32 %778, 1
  %780 = sub i32 %779, %466
  %781 = sub i32 %780, %480
  %782 = sub i32 %781, %484
  %783 = add i32 %782, %487
  %784 = sub i32 %783, %490
  %785 = sub i32 %784, %492
  %786 = sub i32 %785, %504
  %787 = add i32 %786, %507
  %788 = add i32 %787, %573
  %789 = sub i32 %788, %143
  %790 = sub i32 %789, %150
  %791 = sub i32 %790, %172
  %792 = sub i32 %791, %195
  %793 = sub i32 %792, %282
  %794 = add i32 %793, %289
  %795 = sub i32 %794, %293
  %796 = add i32 %795, %296
  %797 = add i32 %796, %299
  %798 = sub i32 %797, %304
  %799 = add i32 %798, %306
  %800 = add i32 %799, %308
  %801 = add i32 %800, %310
  %802 = sub i32 %801, %314
  %803 = sub i32 %802, %317
  %804 = add i32 %803, %318
  %805 = sub i32 %804, %320
  %806 = sub i32 %805, %326
  %807 = add i32 %806, %328
  %808 = sub i32 %807, %331
  %809 = sub i32 %808, %333
  %810 = add i32 %809, %334
  %811 = sub i32 %810, %335
  %812 = sub i32 %811, %337
  %813 = add i32 %812, %338
  %814 = sub i32 %813, %340
  %815 = add i32 %814, %341
  %816 = sub i32 %815, %342
  %817 = sub i32 %816, %343
  %818 = sub i32 %817, %351
  %819 = sub i32 %818, %352
  %820 = sub i32 %819, %353
  %821 = add i32 %820, %356
  %822 = sub i32 %821, %357
  %823 = sub i32 %822, %359
  %824 = sub i32 %823, %360
  %825 = add i32 %824, %371
  %826 = sub i32 %825, %372
  %827 = add i32 %826, %377
  %828 = sub i32 %827, %378
  %829 = add i32 %828, %382
  %830 = add i32 %829, %385
  %831 = sub i32 %830, %386
  %832 = add i32 %831, %387
  %833 = add i32 %832, %389
  %834 = add i32 %833, %390
  %835 = sub i32 %834, %392
  %836 = sub i32 %835, %349
  %837 = add i32 %836, %395
  %838 = sub i32 %837, %398
  %839 = add i32 %838, %401
  %840 = add i32 %839, %404
  %841 = sub i32 %840, %405
  %842 = sub i32 %841, %410
  %843 = add i32 %842, %412
  %844 = sub i32 %843, %414
  %845 = add i32 %844, %416
  %846 = add i32 %845, %417
  %847 = add i32 %846, %422
  %848 = sub i32 %847, %423
  %849 = sub i32 %848, %430
  %850 = sub i32 %849, %432
  %851 = add i32 %850, %434
  %852 = sub i32 %851, %435
  %853 = add i32 %852, %437
  %854 = add i32 %853, %438
  %855 = sub i32 %854, %439
  %856 = add i32 %855, %440
  %857 = add i32 %856, %441
  %858 = add i32 %857, %442
  %859 = sub i32 %858, %443
  %860 = sub i32 %859, %446
  %861 = sub i32 %860, %447
  %862 = add i32 %861, %448
  %863 = add i32 %862, %451
  %864 = sub i32 %863, %452
  %865 = sub i32 %864, %453
  %866 = add i32 %865, %455
  %867 = add i32 %866, %458
  %868 = add i32 %867, %463
  %869 = add i32 %868, %464
  %870 = add i32 %869, %465
  %871 = add i32 %870, %469
  %872 = sub i32 %871, %471
  %873 = add i32 %872, %474
  %874 = sub i32 %873, %475
  %875 = sub i32 %874, %478
  %876 = add i32 %875, %481
  %877 = add i32 %876, %482
  %878 = add i32 %877, %483
  %879 = sub i32 %878, %485
  %880 = add i32 %879, %486
  %881 = sub i32 %880, %488
  %882 = add i32 %881, %489
  %883 = sub i32 %882, %491
  %884 = sub i32 %883, %493
  %885 = sub i32 %884, %494
  %886 = sub i32 %885, %496
  %887 = add i32 %886, %497
  %888 = sub i32 %887, %499
  %889 = sub i32 %888, %500
  %890 = sub i32 %889, %501
  %891 = add i32 %890, %505
  %892 = sub i32 %891, %506
  %893 = sub i32 %892, %508
  %894 = sub i32 %893, %511
  %895 = add i32 %894, %512
  %896 = sub i32 %895, %513
  %897 = sub i32 %896, %518
  %898 = sub i32 %897, %303
  %899 = sub i32 %898, %321
  %900 = add i32 %899, %324
  %901 = sub i32 %900, %345
  %902 = sub i32 %901, %348
  %903 = sub i32 %902, %350
  %904 = sub i32 %903, %362
  %905 = sub i32 %904, %375
  %906 = sub i32 %905, %381
  %907 = sub i32 %906, %403
  %908 = sub i32 %907, %450
  %909 = sub i32 %908, %457
  %910 = sub i32 %909, %460
  %911 = sub i32 %910, %468
  %912 = sub i32 %911, %477
  %913 = add i32 %912, %479
  %914 = add i32 %913, %495
  %915 = sub i32 %914, %498
  %916 = sub i32 %915, %503
  %917 = sub i32 %916, %510
  %918 = add i32 %917, %515
  %919 = add i32 %918, %521
  %920 = sub i32 %919, %366
  %921 = sub i32 %920, %473
  %922 = add i32 %921, %569
  %923 = add i32 %922, %571
  %924 = sub i32 %923, %428
  %925 = add i32 %924, %567
  %926 = add i32 %925, %561
  %927 = add i32 %926, %580
  %928 = add i32 %927, %554
  %929 = icmp eq i32 %24, %928
  %930 = select i1 %929, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %931 = tail call i32 @puts(i8* nonnull dereferenceable(1) %930)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
