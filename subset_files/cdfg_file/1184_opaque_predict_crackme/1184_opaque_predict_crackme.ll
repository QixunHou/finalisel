; ModuleID = '../.././c_source_file/1184_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1184_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, %1
  %8 = xor i32 %7, %0
  %9 = xor i32 %1, -1
  %10 = and i32 %9, %0
  %11 = xor i32 %10, -1
  %12 = xor i32 %11, %2
  %13 = add i32 %8, %12
  %14 = xor i32 %5, -1
  %15 = and i32 %4, %3
  %16 = xor i32 %15, -1
  %17 = and i32 %14, %16
  %18 = add i32 %13, %17
  %19 = sub i32 0, %18
  %20 = xor i32 %2, %0
  %21 = or i32 %20, %9
  %22 = xor i32 %2, -1
  %23 = or i32 %22, %0
  %24 = and i32 %23, %9
  %25 = xor i32 %7, -1
  %26 = or i32 %10, %25
  %27 = or i32 %1, %0
  %28 = xor i32 %27, -1
  %29 = xor i32 %28, %2
  %30 = xor i32 %1, %0
  %31 = xor i32 %30, -1
  %32 = and i32 %23, %31
  %33 = xor i32 %0, -1
  %34 = and i32 %1, %0
  %35 = xor i32 %34, -1
  %36 = or i32 %22, %1
  %37 = xor i32 %36, -1
  %38 = or i32 %37, %33
  %39 = or i32 %34, %37
  %40 = or i32 %7, %10
  %41 = xor i32 %20, -1
  %42 = and i32 %41, %35
  %43 = and i32 %2, %0
  %44 = or i32 %43, %30
  %45 = and i32 %22, %0
  %46 = and i32 %2, %1
  %47 = xor i32 %46, -1
  %48 = xor i32 %45, %47
  %49 = shl i32 %48, 2
  %50 = and i32 %23, %1
  %51 = or i32 %7, %28
  %52 = xor i32 %37, %0
  %53 = or i32 %25, %0
  %54 = or i32 %2, %1
  %55 = or i32 %54, %33
  %56 = or i32 %36, %33
  %57 = or i32 %9, %0
  %58 = xor i32 %43, %57
  %59 = or i32 %2, %0
  %60 = and i32 %59, %30
  %61 = xor i32 %57, -1
  %62 = xor i32 %61, %2
  %63 = and i32 %22, %31
  %64 = or i32 %20, %10
  %65 = and i32 %9, %2
  %66 = and i32 %65, %0
  %67 = or i32 %9, %2
  %68 = and i32 %67, %33
  %69 = or i32 %66, %68
  %70 = xor i32 %36, %0
  %71 = shl i32 %70, 1
  %72 = and i32 %46, %0
  %73 = and i32 %54, %33
  %74 = or i32 %72, %73
  %75 = or i32 %66, %8
  %76 = or i32 %45, %31
  %77 = and i32 %54, %0
  %78 = or i32 %7, %0
  %79 = xor i32 %43, %54
  %80 = and i32 %35, %2
  %81 = and i32 %25, %35
  %82 = xor i32 %59, -1
  %83 = or i32 %82, %31
  %84 = or i32 %25, %28
  %85 = or i32 %43, %28
  %86 = xor i32 %23, -1
  %87 = or i32 %41, %1
  %88 = shl i32 %87, 1
  %89 = and i32 %41, %1
  %90 = or i32 %25, %61
  %91 = and i32 %27, %41
  %92 = shl i32 %91, 1
  %93 = and i32 %36, %0
  %94 = or i32 %34, %2
  %95 = shl i32 %94, 1
  %96 = and i32 %22, %1
  %97 = xor i32 %96, -1
  %98 = and i32 %7, %33
  %99 = xor i32 %98, 2147483647
  %100 = xor i32 %99, %72
  %101 = xor i32 %27, %2
  %102 = or i32 %45, %46
  %103 = xor i32 %45, -1
  %104 = and i32 %103, %9
  %105 = and i32 %41, %31
  %106 = or i32 %96, %33
  %107 = and i32 %36, %33
  %108 = xor i32 %43, -1
  %109 = and i32 %30, %108
  %110 = and i32 %25, %33
  %111 = or i32 %36, %0
  %112 = and i32 %65, %33
  %113 = or i32 %7, %33
  %114 = xor i32 %112, %113
  %115 = xor i32 %10, %47
  %116 = or i32 %82, %9
  %117 = shl i32 %116, 1
  %118 = and i32 %7, %57
  %119 = shl i32 %118, 2
  %120 = and i32 %30, %2
  %121 = or i32 %46, %0
  %122 = and i32 %20, %9
  %123 = and i32 %25, %11
  %124 = and i32 %57, %41
  %125 = shl i32 %124, 1
  %126 = or i32 %20, %28
  %127 = or i32 %7, %34
  %128 = xor i32 %43, %27
  %129 = or i32 %7, %61
  %130 = shl i32 %129, 1
  %131 = xor i32 %86, %1
  %132 = and i32 %27, %22
  %133 = and i32 %46, %33
  %134 = and i32 %7, %0
  %135 = xor i32 %134, -1
  %136 = xor i32 %133, %135
  %137 = xor i32 %54, -1
  %138 = or i32 %43, %137
  %139 = or i32 %41, %61
  %140 = or i32 %97, %33
  %141 = and i32 %31, %2
  %142 = shl i32 %141, 1
  %143 = or i32 %20, %1
  %144 = xor i32 %34, %2
  %145 = and i32 %47, %33
  %146 = xor i32 %103, %1
  %147 = and i32 %41, %11
  %148 = and i32 %22, %11
  %149 = or i32 %43, %31
  %150 = or i32 %10, %2
  %151 = and i32 %7, %35
  %152 = and i32 %41, %9
  %153 = shl i32 %152, 1
  %154 = or i32 %30, %86
  %155 = or i32 %96, %10
  %156 = xor i32 %23, %34
  %157 = xor i32 %67, %0
  %158 = or i32 %66, %157
  %159 = shl i32 %158, 1
  %160 = and i32 %23, %30
  %161 = and i32 %27, %2
  %162 = xor i32 %45, %36
  %163 = or i32 %46, %10
  %164 = or i32 %137, %0
  %165 = or i32 %86, %9
  %166 = xor i32 %47, %0
  %167 = and i32 %67, %0
  %168 = or i32 %112, %167
  %169 = or i32 %47, %33
  %170 = or i32 %45, %9
  %171 = and i32 %20, %11
  %172 = xor i32 %66, -1
  %173 = xor i32 %68, %172
  %174 = or i32 %20, %30
  %175 = and i32 %20, %30
  %176 = or i32 %34, %86
  %177 = or i32 %96, %0
  %178 = and i32 %97, %0
  %179 = xor i32 %54, %0
  %180 = or i32 %72, %179
  %181 = shl i32 %180, 1
  %182 = xor i32 %8, %172
  %183 = or i32 %34, %22
  %184 = or i32 %54, %0
  %185 = or i32 %20, %61
  %186 = and i32 %20, %35
  %187 = add i32 %2, 1
  %188 = or i32 %30, %82
  %189 = shl i32 %188, 1
  %190 = or i32 %43, %61
  %191 = or i32 %34, %41
  %192 = xor i32 %72, -1
  %193 = xor i32 %73, %192
  %194 = or i32 %45, %30
  %195 = shl i32 %194, 1
  %196 = or i32 %34, %82
  %197 = or i32 %45, %1
  %198 = and i32 %59, %31
  %199 = or i32 %41, %9
  %200 = xor i32 %43, %1
  %201 = xor i32 %10, %2
  %202 = and i32 %27, %25
  %203 = and i32 %108, %1
  %204 = xor i32 %137, %0
  %205 = or i32 %45, %37
  %206 = and i32 %20, %27
  %207 = or i32 %25, %33
  %208 = shl i32 %31, 1
  %209 = or i32 %10, %41
  %210 = or i32 %34, %25
  %211 = xor i32 %72, %8
  %212 = or i32 %86, %31
  %213 = xor i32 %113, -1
  %214 = or i32 %112, %213
  %215 = xor i32 %97, %0
  %216 = shl i32 %215, 2
  %217 = xor i32 %96, %0
  %218 = shl i32 %217, 1
  %219 = or i32 %43, %9
  %220 = or i32 %97, %0
  %221 = and i32 %22, %35
  %222 = or i32 %72, %98
  %223 = or i32 %31, %2
  %224 = xor i32 %59, %34
  %225 = and i32 %57, %25
  %226 = xor i32 %179, %192
  %227 = and i32 %25, %0
  %228 = and i32 %30, %41
  %229 = and i32 %7, %11
  %230 = or i32 %137, %33
  %231 = and i32 %137, %33
  %232 = and i32 %96, %33
  %233 = and i32 %137, %0
  %234 = and i32 %96, %0
  %235 = shl i32 %234, 2
  %236 = and i32 %37, %33
  %237 = mul i32 %236, -6
  %238 = shl i32 %133, 2
  %239 = or i32 %5, %4
  %240 = xor i32 %5, %4
  %241 = xor i32 %240, -1
  %242 = xor i32 %3, -1
  %243 = or i32 %14, %4
  %244 = xor i32 %243, -1
  %245 = or i32 %244, %242
  %246 = shl i32 %245, 1
  %247 = and i32 %5, %3
  %248 = xor i32 %247, -1
  %249 = or i32 %248, %4
  %250 = or i32 %15, %14
  %251 = or i32 %4, %3
  %252 = xor i32 %251, -1
  %253 = xor i32 %5, %3
  %254 = xor i32 %253, -1
  %255 = or i32 %254, %252
  %256 = or i32 %14, %3
  %257 = xor i32 %256, %15
  %258 = or i32 %5, %3
  %259 = xor i32 %258, -1
  %260 = or i32 %15, %259
  %261 = xor i32 %4, %3
  %262 = xor i32 %261, -1
  %263 = and i32 %240, %262
  %264 = xor i32 %252, %5
  %265 = and i32 %14, %4
  %266 = xor i32 %265, %3
  %267 = shl i32 %266, 1
  %268 = or i32 %261, %244
  %269 = or i32 %265, %3
  %270 = shl i32 %269, 1
  %271 = and i32 %242, %5
  %272 = and i32 %271, %4
  %273 = xor i32 %4, -1
  %274 = or i32 %242, %5
  %275 = and i32 %274, %273
  %276 = or i32 %272, %275
  %277 = xor i32 %16, %5
  %278 = or i32 %242, %4
  %279 = xor i32 %278, -1
  %280 = add i32 %278, 1
  %281 = or i32 %240, %3
  %282 = or i32 %15, %241
  %283 = or i32 %240, %242
  %284 = and i32 %5, %4
  %285 = xor i32 %284, -1
  %286 = xor i32 %285, %3
  %287 = and i32 %248, %273
  %288 = xor i32 %239, -1
  %289 = or i32 %15, %288
  %290 = and i32 %278, %5
  %291 = and i32 %278, %254
  %292 = or i32 %254, %273
  %293 = and i32 %248, %4
  %294 = and i32 %14, %3
  %295 = xor i32 %294, -1
  %296 = and i32 %295, %4
  %297 = shl i32 %296, 2
  %298 = xor i32 %253, %4
  %299 = xor i32 %298, -1
  %300 = xor i32 %272, %299
  %301 = and i32 %247, %4
  %302 = and i32 %258, %273
  %303 = or i32 %301, %302
  %304 = shl i32 %303, 1
  %305 = xor i32 %256, -1
  %306 = add i32 %256, 1
  %307 = or i32 %244, %3
  %308 = xor i32 %265, -1
  %309 = and i32 %261, %308
  %310 = xor i32 %239, %3
  %311 = or i32 %284, %262
  %312 = and i32 %251, %14
  %313 = or i32 %256, %273
  %314 = and i32 %253, %251
  %315 = and i32 %241, %16
  %316 = or i32 %241, %279
  %317 = or i32 %305, %4
  %318 = or i32 %15, %305
  %319 = xor i32 %274, %4
  %320 = or i32 %272, %319
  %321 = shl i32 %273, 1
  %322 = or i32 %284, %279
  %323 = and i32 %285, %242
  %324 = add i32 %265, 1
  %325 = and i32 %308, %3
  %326 = or i32 %256, %4
  %327 = and i32 %262, %5
  %328 = xor i32 %265, %248
  %329 = and i32 %14, %262
  %330 = or i32 %241, %252
  %331 = and i32 %242, %4
  %332 = or i32 %331, %254
  %333 = shl i32 %332, 1
  %334 = and i32 %239, %262
  %335 = xor i32 %259, %4
  %336 = or i32 %240, %252
  %337 = shl i32 %336, 2
  %338 = or i32 %244, %262
  %339 = and i32 %261, %5
  %340 = xor i32 %331, %5
  %341 = and i32 %261, %241
  %342 = and i32 %240, %242
  %343 = add i32 %247, 1
  %344 = and i32 %247, %273
  %345 = and i32 %258, %4
  %346 = xor i32 %344, -1
  %347 = xor i32 %345, %346
  %348 = or i32 %288, %262
  %349 = shl i32 %348, 1
  %350 = and i32 %239, %261
  %351 = add i32 %243, 1
  %352 = or i32 %259, %273
  %353 = xor i32 %256, %4
  %354 = xor i32 %294, %4
  %355 = and i32 %241, %262
  %356 = add i32 %5, 1
  %357 = or i32 %331, %5
  %358 = and i32 %241, %3
  %359 = or i32 %241, %242
  %360 = shl i32 %359, 1
  %361 = xor i32 %243, %3
  %362 = and i32 %243, %262
  %363 = or i32 %295, %4
  %364 = xor i32 %331, -1
  %365 = and i32 %254, %364
  %366 = and i32 %243, %3
  %367 = or i32 %259, %4
  %368 = shl i32 %367, 1
  %369 = xor i32 %239, %15
  %370 = and i32 %256, %273
  %371 = and i32 %271, %273
  %372 = or i32 %253, %273
  %373 = xor i32 %372, -1
  %374 = or i32 %371, %373
  %375 = xor i32 %279, %5
  %376 = and i32 %251, %241
  %377 = and i32 %240, %3
  %378 = shl i32 %377, 1
  %379 = xor i32 %258, %4
  %380 = or i32 %301, %379
  %381 = or i32 %253, %4
  %382 = and i32 %240, %278
  %383 = or i32 %284, %294
  %384 = add i32 %331, 1
  %385 = or i32 %240, %261
  %386 = and i32 %253, %4
  %387 = xor i32 %386, %346
  %388 = and i32 %240, %251
  %389 = xor i32 %284, %258
  %390 = xor i32 %331, %295
  %391 = xor i32 %15, %5
  %392 = and i32 %253, %278
  %393 = or i32 %248, %273
  %394 = or i32 %253, %252
  %395 = or i32 %261, %241
  %396 = or i32 %262, %5
  %397 = and i32 %285, %3
  %398 = or i32 %253, %279
  %399 = and i32 %253, %364
  %400 = and i32 %308, %262
  %401 = or i32 %240, %15
  %402 = and i32 %240, %261
  %403 = or i32 %14, %252
  %404 = or i32 %252, %5
  %405 = shl i32 %404, 1
  %406 = xor i32 %247, %4
  %407 = xor i32 %251, %5
  %408 = shl i32 %407, 1
  %409 = or i32 %240, %331
  %410 = xor i32 %301, %298
  %411 = and i32 %278, %241
  %412 = and i32 %253, %273
  %413 = xor i32 %412, -1
  %414 = xor i32 %301, %413
  %415 = or i32 %15, %244
  %416 = xor i32 %244, %3
  %417 = or i32 %284, %242
  %418 = or i32 %288, %242
  %419 = shl i32 %418, 1
  %420 = or i32 %331, %14
  %421 = xor i32 %331, %248
  %422 = xor i32 %284, %295
  %423 = or i32 %301, %299
  %424 = or i32 %14, %262
  %425 = xor i32 %284, %278
  %426 = and i32 %261, %14
  %427 = or i32 %14, %279
  %428 = and i32 %14, %364
  %429 = shl i32 %428, 1
  %430 = or i32 %344, %345
  %431 = xor i32 %302, 2147483647
  %432 = xor i32 %431, %301
  %433 = and i32 %254, %16
  %434 = or i32 %261, %288
  %435 = or i32 %295, %273
  %436 = and i32 %261, %285
  %437 = xor i32 %308, %3
  %438 = and i32 %285, %262
  %439 = or i32 %254, %279
  %440 = shl i32 %439, 2
  %441 = or i32 %265, %242
  %442 = or i32 %294, %331
  %443 = xor i32 %278, %5
  %444 = or i32 %265, %305
  %445 = or i32 %265, %262
  %446 = or i32 %241, %262
  %447 = and i32 %278, %14
  %448 = and i32 %239, %242
  %449 = and i32 %256, %4
  %450 = and i32 %16, %5
  %451 = xor i32 %381, 2147483647
  %452 = or i32 %451, %272
  %453 = shl i32 %452, 1
  %454 = xor i32 %272, -1
  %455 = xor i32 %319, %454
  %456 = xor i32 %265, %256
  %457 = or i32 %284, %261
  %458 = or i32 %279, %5
  %459 = and i32 %243, %242
  %460 = or i32 %241, %3
  %461 = xor i32 %275, %454
  %462 = or i32 %258, %273
  %463 = and i32 %274, %4
  %464 = xor i32 %463, -1
  %465 = xor i32 %371, %464
  %466 = and i32 %364, %5
  %467 = or i32 %272, %298
  %468 = shl i32 %467, 1
  %469 = and i32 %240, %364
  %470 = or i32 %261, %5
  %471 = xor i32 %295, %4
  %472 = or i32 %284, %259
  %473 = xor i32 %364, %5
  %474 = xor i32 %288, %3
  %475 = or i32 %15, %5
  %476 = and i32 %251, %5
  %477 = xor i32 %258, %15
  %478 = shl i32 %477, 1
  %479 = and i32 %254, %4
  %480 = and i32 %240, %16
  %481 = shl i32 %480, 1
  %482 = or i32 %294, %273
  %483 = or i32 %247, %331
  %484 = xor i32 %254, %4
  %485 = or i32 %240, %262
  %486 = and i32 %259, %273
  %487 = mul i32 %486, 28
  %488 = and i32 %294, %273
  %489 = and i32 %259, %4
  %490 = and i32 %294, %4
  %491 = mul i32 %490, -12
  %492 = and i32 %305, %273
  %493 = mul i32 %492, 11
  %494 = mul i32 %344, 26
  %495 = and i32 %305, %4
  %496 = add i32 %150, %61
  %497 = add i32 %496, %25
  %498 = add i32 %497, %227
  %499 = add i32 %498, %225
  %500 = add i32 %499, %202
  %501 = add i32 %500, %200
  %502 = add i32 %501, %190
  %503 = add i32 %502, %184
  %504 = add i32 %503, %178
  %505 = add i32 %504, %162
  %506 = add i32 %505, %127
  %507 = add i32 %506, %110
  %508 = add i32 %507, %78
  %509 = add i32 %508, %44
  %510 = add i32 %509, %39
  %511 = add i32 %510, %285
  %512 = add i32 %511, %294
  %513 = add i32 %512, %339
  %514 = add i32 %513, %265
  %515 = add i32 %514, %100
  %516 = add i32 %515, %446
  %517 = add i32 %516, %436
  %518 = add i32 %517, %417
  %519 = add i32 %518, %401
  %520 = add i32 %519, %399
  %521 = add i32 %520, %389
  %522 = add i32 %521, %381
  %523 = add i32 %522, %326
  %524 = add i32 %523, %317
  %525 = add i32 %524, %281
  %526 = add i32 %525, %268
  %527 = add i32 %526, %430
  %528 = add i32 %527, %432
  %529 = shl i32 %528, 1
  %530 = sub i32 %393, %72
  %531 = add i32 %530, %397
  %532 = sub i32 %531, %328
  %533 = sub i32 %532, %291
  %534 = mul i32 %533, 5
  %535 = sub i32 %489, %233
  %536 = add i32 %535, %301
  %537 = mul i32 %536, 19
  %538 = or i32 %495, %488
  %539 = shl i32 %538, 4
  %540 = sub i32 %231, %232
  %541 = mul i32 %540, 7
  %542 = sub i32 -2, %27
  %543 = add i32 %542, %170
  %544 = sub i32 %543, %139
  %545 = sub i32 %544, %15
  %546 = add i32 %545, %280
  %547 = sub i32 %546, %450
  %548 = add i32 %547, %438
  %549 = sub i32 %548, %482
  %550 = mul i32 %549, 3
  %551 = sub i32 -2, %0
  %552 = add i32 %551, %35
  %553 = add i32 %552, %27
  %554 = add i32 %553, %11
  %555 = add i32 %554, %187
  %556 = sub i32 %555, %57
  %557 = sub i32 %556, %10
  %558 = sub i32 %557, %29
  %559 = add i32 %558, %62
  %560 = add i32 %559, %63
  %561 = sub i32 %560, %80
  %562 = sub i32 %561, %59
  %563 = add i32 %562, 1
  %564 = add i32 %563, %101
  %565 = sub i32 %564, %43
  %566 = sub i32 %565, %120
  %567 = add i32 %566, %41
  %568 = sub i32 %567, %132
  %569 = add i32 %568, %137
  %570 = add i32 %569, %144
  %571 = sub i32 %570, %54
  %572 = add i32 %571, %108
  %573 = sub i32 %572, %148
  %574 = add i32 %573, %161
  %575 = sub i32 %574, %183
  %576 = add i32 %575, %201
  %577 = sub i32 %576, %208
  %578 = sub i32 %577, %221
  %579 = add i32 %578, %223
  %580 = add i32 %579, 1
  %581 = sub i32 %580, %24
  %582 = add i32 %581, %21
  %583 = sub i32 %582, %26
  %584 = add i32 %583, %32
  %585 = sub i32 %584, %38
  %586 = add i32 %585, %40
  %587 = add i32 %586, %42
  %588 = sub i32 %587, %50
  %589 = add i32 %588, %51
  %590 = add i32 %589, %52
  %591 = sub i32 %590, %53
  %592 = add i32 %591, %55
  %593 = add i32 %592, %56
  %594 = add i32 %593, %58
  %595 = add i32 %594, %60
  %596 = sub i32 %595, %64
  %597 = sub i32 %596, %76
  %598 = sub i32 %597, %77
  %599 = add i32 %598, %79
  %600 = sub i32 %599, %81
  %601 = add i32 %600, %83
  %602 = sub i32 %601, %84
  %603 = add i32 %602, %85
  %604 = sub i32 %603, %89
  %605 = sub i32 %604, %90
  %606 = add i32 %605, %93
  %607 = sub i32 %606, %95
  %608 = add i32 %607, %102
  %609 = sub i32 %608, %104
  %610 = sub i32 %609, %105
  %611 = add i32 %610, %106
  %612 = add i32 %611, %107
  %613 = sub i32 %612, %109
  %614 = sub i32 %613, %111
  %615 = sub i32 %614, %115
  %616 = add i32 %615, %121
  %617 = add i32 %616, %122
  %618 = sub i32 %617, %123
  %619 = sub i32 %618, %126
  %620 = add i32 %619, %128
  %621 = sub i32 %620, %131
  %622 = add i32 %621, %138
  %623 = add i32 %622, %140
  %624 = sub i32 %623, %142
  %625 = sub i32 %624, %143
  %626 = add i32 %625, %145
  %627 = sub i32 %626, %146
  %628 = sub i32 %627, %147
  %629 = add i32 %628, %149
  %630 = sub i32 %629, %151
  %631 = add i32 %630, %154
  %632 = add i32 %631, %155
  %633 = sub i32 %632, %156
  %634 = add i32 %633, %160
  %635 = add i32 %634, %163
  %636 = sub i32 %635, %164
  %637 = add i32 %636, %165
  %638 = sub i32 %637, %166
  %639 = sub i32 %638, %169
  %640 = add i32 %639, %171
  %641 = add i32 %640, %174
  %642 = sub i32 %641, %175
  %643 = sub i32 %642, %176
  %644 = add i32 %643, %177
  %645 = add i32 %644, %185
  %646 = add i32 %645, %186
  %647 = add i32 %646, %191
  %648 = sub i32 %647, %73
  %649 = add i32 %648, %196
  %650 = add i32 %649, %197
  %651 = sub i32 %650, %198
  %652 = add i32 %651, %199
  %653 = sub i32 %652, %203
  %654 = sub i32 %653, %204
  %655 = add i32 %654, %205
  %656 = add i32 %655, %206
  %657 = add i32 %656, %207
  %658 = sub i32 %657, %209
  %659 = sub i32 %658, %210
  %660 = add i32 %659, %212
  %661 = sub i32 %660, %219
  %662 = sub i32 %661, %220
  %663 = add i32 %662, %224
  %664 = sub i32 %663, %228
  %665 = sub i32 %664, %229
  %666 = sub i32 %665, %230
  %667 = sub i32 %666, %4
  %668 = add i32 %667, %49
  %669 = sub i32 %668, %69
  %670 = sub i32 %669, %71
  %671 = sub i32 %670, %74
  %672 = add i32 %671, %75
  %673 = sub i32 %672, %88
  %674 = sub i32 %673, %92
  %675 = add i32 %674, %114
  %676 = sub i32 %675, %117
  %677 = sub i32 %676, %119
  %678 = sub i32 %677, %125
  %679 = sub i32 %678, %130
  %680 = sub i32 %679, %136
  %681 = sub i32 %680, %153
  %682 = sub i32 %681, %168
  %683 = add i32 %682, %173
  %684 = sub i32 %683, %182
  %685 = sub i32 %684, %189
  %686 = add i32 %685, %193
  %687 = sub i32 %686, %195
  %688 = sub i32 %687, %211
  %689 = sub i32 %688, %214
  %690 = sub i32 %689, %216
  %691 = sub i32 %690, %218
  %692 = add i32 %691, %222
  %693 = sub i32 %692, %226
  %694 = sub i32 %693, %235
  %695 = add i32 %694, %237
  %696 = sub i32 %695, %238
  %697 = add i32 %696, %252
  %698 = add i32 %697, %16
  %699 = sub i32 %698, %321
  %700 = sub i32 %699, %251
  %701 = add i32 %700, %356
  %702 = add i32 %701, %262
  %703 = add i32 %702, %384
  %704 = sub i32 %703, %261
  %705 = add i32 %704, %278
  %706 = sub i32 %705, %331
  %707 = sub i32 %706, %159
  %708 = sub i32 %707, %181
  %709 = add i32 %708, %239
  %710 = add i32 %709, %241
  %711 = sub i32 %710, %250
  %712 = sub i32 %711, %264
  %713 = sub i32 %712, %277
  %714 = add i32 %713, %290
  %715 = add i32 %714, %306
  %716 = sub i32 %715, %312
  %717 = add i32 %716, %324
  %718 = sub i32 %717, %327
  %719 = add i32 %718, %243
  %720 = sub i32 %719, %329
  %721 = add i32 %720, %340
  %722 = add i32 %721, %343
  %723 = add i32 %722, %351
  %724 = sub i32 %723, %357
  %725 = sub i32 %724, %375
  %726 = sub i32 %725, %391
  %727 = sub i32 %726, %240
  %728 = sub i32 %727, %396
  %729 = sub i32 %728, %403
  %730 = add i32 %729, %420
  %731 = add i32 %730, %424
  %732 = sub i32 %731, %426
  %733 = sub i32 %732, %427
  %734 = sub i32 %733, %443
  %735 = add i32 %734, %447
  %736 = add i32 %735, %458
  %737 = add i32 %736, %466
  %738 = sub i32 %737, %470
  %739 = sub i32 %738, %473
  %740 = add i32 %739, %475
  %741 = sub i32 %740, %476
  %742 = add i32 %741, %541
  %743 = add i32 %742, %249
  %744 = add i32 %743, %255
  %745 = sub i32 %744, %257
  %746 = add i32 %745, %260
  %747 = sub i32 %746, %263
  %748 = add i32 %747, %282
  %749 = sub i32 %748, %283
  %750 = sub i32 %749, %286
  %751 = add i32 %750, %287
  %752 = sub i32 %751, %289
  %753 = add i32 %752, %292
  %754 = sub i32 %753, %293
  %755 = add i32 %754, %307
  %756 = add i32 %755, %309
  %757 = sub i32 %756, %310
  %758 = add i32 %757, %311
  %759 = sub i32 %758, %313
  %760 = add i32 %759, %314
  %761 = add i32 %760, %315
  %762 = sub i32 %761, %316
  %763 = sub i32 %762, %318
  %764 = sub i32 %763, %322
  %765 = sub i32 %764, %323
  %766 = sub i32 %765, %325
  %767 = add i32 %766, %330
  %768 = add i32 %767, %334
  %769 = sub i32 %768, %335
  %770 = add i32 %769, %338
  %771 = sub i32 %770, %341
  %772 = add i32 %771, %342
  %773 = add i32 %772, %350
  %774 = sub i32 %773, %352
  %775 = add i32 %774, %353
  %776 = sub i32 %775, %354
  %777 = sub i32 %776, %355
  %778 = sub i32 %777, %358
  %779 = sub i32 %778, %361
  %780 = sub i32 %779, %362
  %781 = sub i32 %780, %363
  %782 = add i32 %781, %365
  %783 = sub i32 %782, %366
  %784 = add i32 %783, %369
  %785 = sub i32 %784, %370
  %786 = add i32 %785, %376
  %787 = sub i32 %786, %382
  %788 = add i32 %787, %383
  %789 = add i32 %788, %385
  %790 = sub i32 %789, %388
  %791 = add i32 %790, %298
  %792 = sub i32 %791, %390
  %793 = add i32 %792, %392
  %794 = add i32 %793, %394
  %795 = sub i32 %794, %395
  %796 = sub i32 %795, %398
  %797 = add i32 %796, %400
  %798 = add i32 %797, %402
  %799 = sub i32 %798, %405
  %800 = add i32 %799, %406
  %801 = sub i32 %800, %408
  %802 = sub i32 %801, %409
  %803 = sub i32 %802, %372
  %804 = sub i32 %803, %411
  %805 = add i32 %804, %415
  %806 = add i32 %805, %416
  %807 = add i32 %806, %421
  %808 = sub i32 %807, %422
  %809 = add i32 %808, %425
  %810 = sub i32 %809, %429
  %811 = add i32 %810, %433
  %812 = sub i32 %811, %434
  %813 = sub i32 %812, %435
  %814 = sub i32 %813, %345
  %815 = sub i32 %814, %437
  %816 = add i32 %815, %441
  %817 = add i32 %816, %442
  %818 = sub i32 %817, %444
  %819 = add i32 %818, %445
  %820 = sub i32 %819, %448
  %821 = sub i32 %820, %449
  %822 = add i32 %821, %456
  %823 = sub i32 %822, %412
  %824 = add i32 %823, %457
  %825 = add i32 %824, %459
  %826 = sub i32 %825, %460
  %827 = sub i32 %826, %462
  %828 = sub i32 %827, %469
  %829 = sub i32 %828, %471
  %830 = sub i32 %829, %379
  %831 = sub i32 %830, %472
  %832 = add i32 %831, %474
  %833 = sub i32 %832, %479
  %834 = sub i32 %833, %483
  %835 = add i32 %834, %484
  %836 = add i32 %835, %485
  %837 = sub i32 %836, %246
  %838 = sub i32 %837, %267
  %839 = sub i32 %838, %270
  %840 = sub i32 %839, %276
  %841 = sub i32 %840, %297
  %842 = sub i32 %841, %300
  %843 = add i32 %842, %320
  %844 = sub i32 %843, %333
  %845 = sub i32 %844, %337
  %846 = sub i32 %845, %347
  %847 = sub i32 %846, %349
  %848 = sub i32 %847, %360
  %849 = sub i32 %848, %368
  %850 = add i32 %849, %374
  %851 = sub i32 %850, %378
  %852 = sub i32 %851, %380
  %853 = add i32 %852, %387
  %854 = sub i32 %853, %410
  %855 = add i32 %854, %414
  %856 = sub i32 %855, %419
  %857 = sub i32 %856, %423
  %858 = sub i32 %857, %440
  %859 = add i32 %858, %455
  %860 = add i32 %859, %461
  %861 = sub i32 %860, %465
  %862 = sub i32 %861, %478
  %863 = sub i32 %862, %481
  %864 = add i32 %863, %487
  %865 = add i32 %864, %491
  %866 = add i32 %865, %493
  %867 = add i32 %866, %494
  %868 = sub i32 %867, %304
  %869 = sub i32 %868, %468
  %870 = add i32 %869, %539
  %871 = sub i32 %870, %453
  %872 = add i32 %871, %537
  %873 = add i32 %872, %534
  %874 = add i32 %873, %550
  %875 = add i32 %874, %529
  %876 = icmp eq i32 %875, %19
  %877 = select i1 %876, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %878 = tail call i32 @puts(i8* nonnull dereferenceable(1) %877)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
