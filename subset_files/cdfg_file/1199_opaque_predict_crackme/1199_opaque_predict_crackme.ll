; ModuleID = '../.././c_source_file/1199_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1199_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %1
  %8 = xor i32 %7, -1
  %9 = xor i32 %8, %0
  %10 = and i32 %1, %0
  %11 = xor i32 %10, -1
  %12 = xor i32 %2, %1
  %13 = xor i32 %12, -1
  %14 = and i32 %13, %11
  %15 = sub i32 %14, %9
  %16 = xor i32 %5, -1
  %17 = or i32 %16, %3
  %18 = add i32 %15, %17
  %19 = xor i32 %3, -1
  %20 = or i32 %19, %4
  %21 = xor i32 %20, %5
  %22 = shl i32 %21, 1
  %23 = sub i32 %18, %22
  %24 = xor i32 %2, %0
  %25 = xor i32 %24, -1
  %26 = and i32 %25, %11
  %27 = xor i32 %1, -1
  %28 = or i32 %27, %0
  %29 = xor i32 %28, -1
  %30 = or i32 %24, %29
  %31 = xor i32 %2, -1
  %32 = and i32 %31, %0
  %33 = or i32 %32, %1
  %34 = and i32 %27, %0
  %35 = xor i32 %34, -1
  %36 = and i32 %31, %35
  %37 = and i32 %12, %35
  %38 = or i32 %25, %1
  %39 = or i32 %12, %10
  %40 = xor i32 %0, -1
  %41 = and i32 %8, %40
  %42 = and i32 %12, %40
  %43 = or i32 %2, %1
  %44 = xor i32 %43, -1
  %45 = or i32 %10, %44
  %46 = or i32 %8, %40
  %47 = or i32 %2, %0
  %48 = and i32 %47, %1
  %49 = xor i32 %1, %0
  %50 = xor i32 %49, -1
  %51 = and i32 %31, %50
  %52 = shl i32 %51, 1
  %53 = xor i32 %28, %2
  %54 = shl i32 %53, 1
  %55 = or i32 %1, %0
  %56 = and i32 %55, %25
  %57 = and i32 %24, %55
  %58 = shl i32 %57, 1
  %59 = and i32 %7, %0
  %60 = or i32 %44, %0
  %61 = xor i32 %59, %60
  %62 = and i32 %49, %31
  %63 = shl i32 %62, 2
  %64 = shl i32 %12, 1
  %65 = or i32 %31, %1
  %66 = xor i32 %65, -1
  %67 = add i32 %65, 1
  %68 = xor i32 %32, -1
  %69 = and i32 %49, %68
  %70 = or i32 %34, %31
  %71 = or i32 %66, %0
  %72 = or i32 %10, %25
  %73 = shl i32 %72, 1
  %74 = and i32 %31, %1
  %75 = xor i32 %74, -1
  %76 = and i32 %75, %40
  %77 = and i32 %28, %2
  %78 = xor i32 %43, %0
  %79 = or i32 %59, %78
  %80 = add i32 %32, 1
  %81 = or i32 %50, %2
  %82 = or i32 %12, %40
  %83 = and i32 %28, %31
  %84 = and i32 %27, %2
  %85 = and i32 %84, %0
  %86 = or i32 %12, %0
  %87 = xor i32 %85, %86
  %88 = and i32 %2, %0
  %89 = xor i32 %88, %1
  %90 = or i32 %13, %29
  %91 = and i32 %84, %40
  %92 = or i32 %27, %2
  %93 = and i32 %92, %0
  %94 = xor i32 %93, -1
  %95 = xor i32 %91, %94
  %96 = xor i32 %12, %0
  %97 = or i32 %85, %96
  %98 = or i32 %31, %0
  %99 = xor i32 %98, -1
  %100 = xor i32 %99, %1
  %101 = and i32 %49, %25
  %102 = and i32 %24, %1
  %103 = or i32 %10, %66
  %104 = or i32 %25, %29
  %105 = and i32 %24, %28
  %106 = and i32 %13, %40
  %107 = shl i32 %106, 1
  %108 = and i32 %49, %2
  %109 = xor i32 %55, -1
  %110 = or i32 %13, %109
  %111 = and i32 %12, %28
  %112 = or i32 %24, %34
  %113 = or i32 %32, %7
  %114 = xor i32 %47, -1
  %115 = or i32 %114, %50
  %116 = or i32 %10, %114
  %117 = or i32 %88, %74
  %118 = xor i32 %32, %8
  %119 = xor i32 %42, 2147483647
  %120 = xor i32 %119, %59
  %121 = xor i32 %92, %0
  %122 = xor i32 %121, 2147483647
  %123 = xor i32 %122, %85
  %124 = shl i32 %123, 1
  %125 = or i32 %24, %27
  %126 = xor i32 %32, %65
  %127 = shl i32 %126, 1
  %128 = and i32 %7, %40
  %129 = and i32 %12, %0
  %130 = or i32 %128, %129
  %131 = or i32 %34, %25
  %132 = or i32 %12, %34
  %133 = or i32 %88, %109
  %134 = add i32 %74, 1
  %135 = or i32 %43, %40
  %136 = xor i32 %34, %75
  %137 = and i32 %68, %50
  %138 = xor i32 %88, -1
  %139 = add i32 %88, 1
  %140 = or i32 %25, %50
  %141 = and i32 %43, %0
  %142 = xor i32 %141, -1
  %143 = xor i32 %128, %142
  %144 = xor i32 %32, %1
  %145 = and i32 %12, %11
  %146 = and i32 %25, %35
  %147 = xor i32 %75, %0
  %148 = or i32 %12, %109
  %149 = or i32 %99, %50
  %150 = xor i32 %55, %2
  %151 = or i32 %74, %40
  %152 = or i32 %24, %1
  %153 = or i32 %8, %0
  %154 = or i32 %49, %2
  %155 = and i32 %49, %138
  %156 = shl i32 %141, 1
  %157 = or i32 %49, %114
  %158 = and i32 %92, %40
  %159 = or i32 %85, %158
  %160 = xor i32 %11, %2
  %161 = or i32 %34, %13
  %162 = xor i32 %34, %2
  %163 = or i32 %88, %50
  %164 = and i32 %28, %25
  %165 = or i32 %13, %0
  %166 = xor i32 %96, -1
  %167 = xor i32 %85, %166
  %168 = xor i32 %66, %0
  %169 = xor i32 %44, %0
  %170 = shl i32 %169, 1
  %171 = and i32 %65, %0
  %172 = and i32 %31, %11
  %173 = or i32 %49, %25
  %174 = and i32 %68, %27
  %175 = or i32 %91, %93
  %176 = or i32 %88, %1
  %177 = or i32 %12, %29
  %178 = or i32 %10, %31
  %179 = or i32 %88, %27
  %180 = or i32 %65, %0
  %181 = xor i32 %114, %1
  %182 = xor i32 %7, %0
  %183 = and i32 %65, %40
  %184 = or i32 %7, %0
  %185 = and i32 %98, %27
  %186 = shl i32 %28, 1
  %187 = add i32 %47, 1
  %188 = and i32 %55, %31
  %189 = xor i32 %65, %0
  %190 = or i32 %10, %2
  %191 = xor i32 %138, %1
  %192 = or i32 %24, %49
  %193 = xor i32 %129, 1073741823
  %194 = xor i32 %193, %128
  %195 = xor i32 %34, %8
  %196 = or i32 %128, %141
  %197 = and i32 %28, %13
  %198 = or i32 %85, %121
  %199 = shl i32 %198, 1
  %200 = or i32 %114, %27
  %201 = or i32 %31, %109
  %202 = or i32 %43, %0
  %203 = or i32 %49, %31
  %204 = shl i32 %96, 1
  %205 = or i32 %66, %40
  %206 = and i32 %50, %2
  %207 = shl i32 %206, 1
  %208 = or i32 %74, %34
  %209 = and i32 %8, %0
  %210 = shl i32 %44, 1
  %211 = xor i32 %68, %1
  %212 = add i32 %55, 1
  %213 = xor i32 %91, %82
  %214 = xor i32 %88, %43
  %215 = shl i32 %214, 1
  %216 = or i32 %99, %1
  %217 = xor i32 %88, %75
  %218 = or i32 %24, %50
  %219 = and i32 %35, %2
  %220 = and i32 %44, %40
  %221 = mul i32 %220, 10
  %222 = and i32 %74, %40
  %223 = and i32 %44, %0
  %224 = shl i32 %223, 3
  %225 = and i32 %74, %0
  %226 = and i32 %66, %40
  %227 = mul i32 %128, 18
  %228 = and i32 %66, %0
  %229 = mul i32 %228, 7
  %230 = and i32 %4, %3
  %231 = or i32 %5, %3
  %232 = xor i32 %231, %230
  %233 = xor i32 %5, %3
  %234 = and i32 %233, %20
  %235 = shl i32 %234, 1
  %236 = or i32 %17, %4
  %237 = and i32 %19, %4
  %238 = xor i32 %237, %5
  %239 = xor i32 %4, -1
  %240 = and i32 %5, %3
  %241 = or i32 %240, %239
  %242 = shl i32 %241, 1
  %243 = or i32 %237, %16
  %244 = or i32 %240, %4
  %245 = or i32 %5, %4
  %246 = xor i32 %245, -1
  %247 = xor i32 %246, %3
  %248 = and i32 %240, %4
  %249 = xor i32 %233, %4
  %250 = xor i32 %248, %249
  %251 = and i32 %5, %4
  %252 = xor i32 %251, -1
  %253 = and i32 %252, %3
  %254 = or i32 %230, %246
  %255 = and i32 %16, %4
  %256 = xor i32 %240, -1
  %257 = or i32 %256, %4
  %258 = xor i32 %5, %4
  %259 = or i32 %258, %3
  %260 = and i32 %231, %4
  %261 = or i32 %230, %16
  %262 = or i32 %4, %3
  %263 = xor i32 %262, -1
  %264 = xor i32 %258, -1
  %265 = or i32 %264, %263
  %266 = or i32 %264, %3
  %267 = xor i32 %4, %3
  %268 = xor i32 %267, -1
  %269 = or i32 %16, %268
  %270 = and i32 %267, %16
  %271 = xor i32 %20, -1
  %272 = or i32 %233, %271
  %273 = or i32 %16, %4
  %274 = xor i32 %273, %3
  %275 = xor i32 %263, %5
  %276 = xor i32 %273, %230
  %277 = or i32 %240, %237
  %278 = xor i32 %17, %4
  %279 = xor i32 %237, -1
  %280 = and i32 %233, %279
  %281 = and i32 %16, %268
  %282 = xor i32 %231, -1
  %283 = or i32 %251, %282
  %284 = shl i32 %283, 1
  %285 = add i32 %258, 1
  %286 = xor i32 %233, -1
  %287 = or i32 %230, %286
  %288 = or i32 %263, %5
  %289 = xor i32 %245, %3
  %290 = or i32 %258, %19
  %291 = xor i32 %255, -1
  %292 = xor i32 %291, %3
  %293 = and i32 %17, %239
  %294 = xor i32 %252, %3
  %295 = and i32 %240, %239
  %296 = and i32 %233, %4
  %297 = or i32 %295, %296
  %298 = or i32 %267, %246
  %299 = or i32 %264, %268
  %300 = and i32 %262, %16
  %301 = xor i32 %17, -1
  %302 = or i32 %301, %239
  %303 = or i32 %233, %239
  %304 = and i32 %262, %264
  %305 = or i32 %258, %271
  %306 = and i32 %267, %291
  %307 = and i32 %19, %5
  %308 = and i32 %307, %239
  %309 = xor i32 %308, %303
  %310 = xor i32 %230, -1
  %311 = and i32 %264, %310
  %312 = shl i32 %311, 1
  %313 = xor i32 %295, 2147483647
  %314 = xor i32 %313, %296
  %315 = shl i32 %314, 1
  %316 = xor i32 %231, %4
  %317 = or i32 %248, %316
  %318 = and i32 %307, %4
  %319 = xor i32 %249, -1
  %320 = xor i32 %318, %319
  %321 = shl i32 %320, 1
  %322 = or i32 %233, %230
  %323 = and i32 %268, %5
  %324 = and i32 %256, %239
  %325 = or i32 %258, %230
  %326 = xor i32 %273, -1
  %327 = xor i32 %326, %3
  %328 = xor i32 %262, %5
  %329 = and i32 %267, %264
  %330 = and i32 %267, %5
  %331 = and i32 %16, %3
  %332 = xor i32 %331, -1
  %333 = add i32 %331, 1
  %334 = or i32 %17, %239
  %335 = or i32 %264, %271
  %336 = xor i32 %17, %230
  %337 = or i32 %255, %3
  %338 = or i32 %331, %4
  %339 = or i32 %295, %260
  %340 = or i32 %331, %237
  %341 = and i32 %233, %239
  %342 = xor i32 %248, -1
  %343 = xor i32 %341, %342
  %344 = or i32 %255, %240
  %345 = and i32 %264, %279
  %346 = xor i32 %256, %4
  %347 = and i32 %231, %239
  %348 = xor i32 %347, %342
  %349 = or i32 %19, %5
  %350 = and i32 %349, %4
  %351 = xor i32 %350, -1
  %352 = xor i32 %308, %351
  %353 = and i32 %233, %262
  %354 = or i32 %237, %264
  %355 = or i32 %326, %268
  %356 = and i32 %245, %268
  %357 = shl i32 %347, 1
  %358 = or i32 %267, %16
  %359 = xor i32 %279, %5
  %360 = and i32 %286, %239
  %361 = xor i32 %286, %4
  %362 = xor i32 %255, %3
  %363 = or i32 %248, %341
  %364 = and i32 %20, %286
  %365 = or i32 %230, %301
  %366 = and i32 %286, %4
  %367 = or i32 %264, %19
  %368 = and i32 %258, %267
  %369 = shl i32 %368, 1
  %370 = or i32 %246, %268
  %371 = shl i32 %370, 1
  %372 = and i32 %262, %286
  %373 = shl i32 %372, 1
  %374 = or i32 %268, %5
  %375 = or i32 %251, %331
  %376 = shl i32 %375, 1
  %377 = add i32 %233, 1
  %378 = or i32 %231, %239
  %379 = or i32 %267, %5
  %380 = or i32 %233, %263
  %381 = or i32 %286, %271
  %382 = xor i32 %303, -1
  %383 = or i32 %308, %382
  %384 = and i32 %20, %5
  %385 = shl i32 %267, 2
  %386 = and i32 %264, %19
  %387 = shl i32 %386, 1
  %388 = or i32 %282, %4
  %389 = shl i32 %388, 1
  %390 = or i32 %308, %350
  %391 = and i32 %258, %262
  %392 = shl i32 %391, 1
  %393 = and i32 %20, %264
  %394 = or i32 %231, %4
  %395 = and i32 %16, %310
  %396 = and i32 %264, %3
  %397 = or i32 %251, %267
  %398 = xor i32 %255, %256
  %399 = and i32 %17, %4
  %400 = shl i32 %399, 1
  %401 = xor i32 %316, %342
  %402 = or i32 %246, %19
  %403 = and i32 %273, %3
  %404 = and i32 %267, %252
  %405 = or i32 %16, %263
  %406 = or i32 %251, %271
  %407 = or i32 %251, %19
  %408 = or i32 %286, %4
  %409 = or i32 %258, %263
  %410 = or i32 %251, %268
  %411 = and i32 %20, %16
  %412 = xor i32 %251, %3
  %413 = shl i32 %412, 1
  %414 = or i32 %286, %263
  %415 = xor i32 %313, %260
  %416 = or i32 %230, %5
  %417 = xor i32 %245, %230
  %418 = xor i32 %282, %4
  %419 = and i32 %273, %267
  %420 = and i32 %245, %19
  %421 = and i32 %273, %268
  %422 = xor i32 %251, %20
  %423 = and i32 %291, %268
  %424 = or i32 %271, %5
  %425 = or i32 %286, %239
  %426 = xor i32 %301, %4
  %427 = xor i32 %251, %332
  %428 = and i32 %349, %239
  %429 = or i32 %318, %428
  %430 = or i32 %237, %286
  %431 = or i32 %230, %282
  %432 = or i32 %258, %237
  %433 = shl i32 %432, 1
  %434 = or i32 %326, %19
  %435 = xor i32 %255, %17
  %436 = add i32 %240, 1
  %437 = and i32 %286, %279
  %438 = or i32 %230, %326
  %439 = or i32 %255, %267
  %440 = or i32 %248, %347
  %441 = or i32 %255, %301
  %442 = or i32 %233, %4
  %443 = and i32 %332, %239
  %444 = or i32 %301, %4
  %445 = or i32 %251, %263
  %446 = or i32 %246, %3
  %447 = and i32 %262, %5
  %448 = shl i32 %279, 1
  %449 = or i32 %248, %319
  %450 = shl i32 %449, 1
  %451 = and i32 %252, %19
  %452 = shl i32 %451, 1
  %453 = and i32 %258, %19
  %454 = and i32 %332, %4
  %455 = xor i32 %251, %262
  %456 = or i32 %258, %268
  %457 = or i32 %255, %268
  %458 = xor i32 %442, -1
  %459 = or i32 %318, %458
  %460 = xor i32 %237, %256
  %461 = or i32 %326, %3
  %462 = xor i32 %4, 2147483647
  %463 = xor i32 %462, %349
  %464 = xor i32 %463, %318
  %465 = shl i32 %464, 1
  %466 = and i32 %264, %268
  %467 = or i32 %251, %3
  %468 = shl i32 %467, 1
  %469 = and i32 %286, %310
  %470 = and i32 %16, %279
  %471 = and i32 %256, %4
  %472 = or i32 %331, %239
  %473 = and i32 %245, %3
  %474 = and i32 %258, %268
  %475 = and i32 %258, %310
  %476 = and i32 %279, %5
  %477 = and i32 %282, %239
  %478 = mul i32 %477, -12
  %479 = and i32 %331, %239
  %480 = mul i32 %479, -26
  %481 = and i32 %282, %4
  %482 = mul i32 %481, -14
  %483 = and i32 %331, %4
  %484 = and i32 %301, %239
  %485 = mul i32 %484, -19
  %486 = mul i32 %295, 9
  %487 = and i32 %301, %4
  %488 = shl i32 %487, 2
  %489 = add i32 %112, %137
  %490 = sub i32 %262, %489
  %491 = sub i32 %490, %231
  %492 = add i32 %491, %402
  %493 = add i32 %492, %460
  %494 = sub i32 %493, %355
  %495 = mul i32 %494, 5
  %496 = sub i32 %25, %191
  %497 = add i32 %496, %324
  %498 = add i32 %497, %442
  %499 = mul i32 %498, 3
  %500 = add i32 %194, %149
  %501 = add i32 %500, %325
  %502 = shl i32 %501, 2
  %503 = add i32 %59, %226
  %504 = mul i32 %503, 6
  %505 = sub i32 %225, %483
  %506 = mul i32 %505, 21
  %507 = sub i32 -3, %3
  %508 = add i32 %507, %162
  %509 = add i32 %508, %36
  %510 = add i32 %509, %200
  %511 = add i32 %510, %165
  %512 = add i32 %511, %131
  %513 = add i32 %512, %118
  %514 = add i32 %513, %117
  %515 = add i32 %514, %100
  %516 = add i32 %515, %37
  %517 = add i32 %516, %268
  %518 = add i32 %517, %20
  %519 = add i32 %518, %175
  %520 = add i32 %519, %379
  %521 = add i32 %520, %282
  %522 = add i32 %521, %328
  %523 = add i32 %522, %120
  %524 = add i32 %523, %248
  %525 = add i32 %524, %474
  %526 = add i32 %525, %423
  %527 = add i32 %526, %421
  %528 = add i32 %527, %418
  %529 = add i32 %528, %397
  %530 = add i32 %529, %345
  %531 = add i32 %530, %344
  %532 = add i32 %531, %337
  %533 = add i32 %532, %335
  %534 = add i32 %533, %304
  %535 = add i32 %534, %303
  %536 = add i32 %535, %292
  %537 = add i32 %536, %278
  %538 = add i32 %537, %272
  %539 = add i32 %538, %363
  %540 = add i32 %539, %297
  %541 = add i32 %540, %415
  %542 = shl i32 %541, 1
  %543 = add i32 %0, 2
  %544 = add i32 %543, %0
  %545 = add i32 %544, %31
  %546 = sub i32 %545, %55
  %547 = add i32 %546, %35
  %548 = add i32 %547, %29
  %549 = add i32 %548, %11
  %550 = add i32 %549, %212
  %551 = sub i32 %550, %7
  %552 = add i32 %551, %67
  %553 = add i32 %552, %70
  %554 = add i32 %553, %77
  %555 = add i32 %554, %80
  %556 = add i32 %555, %81
  %557 = add i32 %556, %83
  %558 = add i32 %557, %47
  %559 = sub i32 %558, %88
  %560 = add i32 %559, %108
  %561 = add i32 %560, %99
  %562 = sub i32 %561, %98
  %563 = add i32 %562, %134
  %564 = add i32 %563, %139
  %565 = sub i32 %564, %65
  %566 = sub i32 %565, %74
  %567 = add i32 %566, %150
  %568 = add i32 %567, %154
  %569 = sub i32 %568, %160
  %570 = add i32 %569, %172
  %571 = add i32 %570, %178
  %572 = add i32 %571, %8
  %573 = sub i32 %572, %186
  %574 = add i32 %573, %187
  %575 = sub i32 %574, %188
  %576 = add i32 %575, %190
  %577 = add i32 %576, %24
  %578 = add i32 %577, %201
  %579 = sub i32 %578, %203
  %580 = add i32 %579, %32
  %581 = add i32 %580, %219
  %582 = sub i32 %581, %26
  %583 = add i32 %582, %30
  %584 = sub i32 %583, %33
  %585 = add i32 %584, %38
  %586 = add i32 %585, %39
  %587 = sub i32 %586, %41
  %588 = sub i32 %587, %42
  %589 = sub i32 %588, %45
  %590 = sub i32 %589, %46
  %591 = sub i32 %590, %48
  %592 = sub i32 %591, %52
  %593 = sub i32 %592, %54
  %594 = add i32 %593, %56
  %595 = sub i32 %594, %63
  %596 = sub i32 %595, %64
  %597 = sub i32 %596, %69
  %598 = sub i32 %597, %71
  %599 = sub i32 %598, %76
  %600 = sub i32 %599, %82
  %601 = sub i32 %600, %89
  %602 = add i32 %601, %90
  %603 = add i32 %602, %101
  %604 = add i32 %603, %102
  %605 = sub i32 %604, %103
  %606 = add i32 %605, %104
  %607 = add i32 %606, %105
  %608 = add i32 %607, %110
  %609 = add i32 %608, %111
  %610 = sub i32 %609, %113
  %611 = add i32 %610, %115
  %612 = add i32 %611, %116
  %613 = sub i32 %612, %125
  %614 = sub i32 %613, %132
  %615 = sub i32 %614, %133
  %616 = sub i32 %615, %135
  %617 = add i32 %616, %136
  %618 = sub i32 %617, %140
  %619 = sub i32 %618, %144
  %620 = add i32 %619, %145
  %621 = add i32 %620, %146
  %622 = sub i32 %621, %147
  %623 = add i32 %622, %148
  %624 = sub i32 %623, %129
  %625 = sub i32 %624, %86
  %626 = add i32 %625, %151
  %627 = sub i32 %626, %152
  %628 = sub i32 %627, %153
  %629 = add i32 %628, %155
  %630 = sub i32 %629, %157
  %631 = add i32 %630, %161
  %632 = add i32 %631, %163
  %633 = sub i32 %632, %164
  %634 = sub i32 %633, %168
  %635 = sub i32 %634, %171
  %636 = add i32 %635, %173
  %637 = sub i32 %636, %174
  %638 = sub i32 %637, %176
  %639 = sub i32 %638, %177
  %640 = add i32 %639, %179
  %641 = add i32 %640, %180
  %642 = sub i32 %641, %181
  %643 = sub i32 %642, %182
  %644 = sub i32 %643, %183
  %645 = sub i32 %644, %184
  %646 = add i32 %645, %185
  %647 = sub i32 %646, %189
  %648 = add i32 %647, %192
  %649 = sub i32 %648, %195
  %650 = sub i32 %649, %197
  %651 = sub i32 %650, %202
  %652 = add i32 %651, %205
  %653 = sub i32 %652, %207
  %654 = add i32 %653, %208
  %655 = add i32 %654, %209
  %656 = sub i32 %655, %210
  %657 = sub i32 %656, %211
  %658 = sub i32 %657, %216
  %659 = add i32 %658, %217
  %660 = add i32 %659, %218
  %661 = add i32 %660, %222
  %662 = sub i32 %661, %58
  %663 = sub i32 %662, %61
  %664 = sub i32 %663, %73
  %665 = sub i32 %664, %79
  %666 = sub i32 %665, %87
  %667 = sub i32 %666, %95
  %668 = add i32 %667, %97
  %669 = sub i32 %668, %107
  %670 = sub i32 %669, %127
  %671 = sub i32 %670, %130
  %672 = sub i32 %671, %143
  %673 = sub i32 %672, %156
  %674 = sub i32 %673, %159
  %675 = sub i32 %674, %167
  %676 = sub i32 %675, %170
  %677 = sub i32 %676, %196
  %678 = sub i32 %677, %204
  %679 = sub i32 %678, %213
  %680 = sub i32 %679, %215
  %681 = add i32 %680, %221
  %682 = add i32 %681, %224
  %683 = add i32 %682, %227
  %684 = add i32 %683, %229
  %685 = sub i32 %684, %5
  %686 = add i32 %685, %237
  %687 = add i32 %686, %16
  %688 = sub i32 %687, %199
  %689 = add i32 %688, %238
  %690 = add i32 %689, %243
  %691 = sub i32 %690, %261
  %692 = add i32 %691, %269
  %693 = sub i32 %692, %270
  %694 = add i32 %693, %275
  %695 = add i32 %694, %233
  %696 = add i32 %695, %281
  %697 = add i32 %696, %285
  %698 = sub i32 %697, %288
  %699 = add i32 %698, %252
  %700 = add i32 %699, %300
  %701 = sub i32 %700, %323
  %702 = sub i32 %701, %330
  %703 = add i32 %702, %333
  %704 = sub i32 %703, %251
  %705 = sub i32 %704, %358
  %706 = add i32 %705, %359
  %707 = sub i32 %706, %374
  %708 = sub i32 %707, %258
  %709 = add i32 %708, %377
  %710 = add i32 %709, %384
  %711 = sub i32 %710, %385
  %712 = add i32 %711, %395
  %713 = add i32 %712, %405
  %714 = sub i32 %713, %411
  %715 = sub i32 %714, %416
  %716 = add i32 %715, %240
  %717 = add i32 %716, %424
  %718 = add i32 %717, %301
  %719 = add i32 %718, %436
  %720 = add i32 %719, %447
  %721 = add i32 %720, %331
  %722 = sub i32 %721, %448
  %723 = sub i32 %722, %245
  %724 = sub i32 %723, %470
  %725 = sub i32 %724, %476
  %726 = add i32 %725, %504
  %727 = sub i32 %726, %124
  %728 = sub i32 %727, %232
  %729 = add i32 %728, %236
  %730 = add i32 %729, %244
  %731 = sub i32 %730, %247
  %732 = sub i32 %731, %253
  %733 = sub i32 %732, %254
  %734 = add i32 %733, %257
  %735 = add i32 %734, %259
  %736 = sub i32 %735, %260
  %737 = sub i32 %736, %265
  %738 = add i32 %737, %266
  %739 = sub i32 %738, %274
  %740 = add i32 %739, %276
  %741 = sub i32 %740, %277
  %742 = add i32 %741, %280
  %743 = add i32 %742, %287
  %744 = add i32 %743, %289
  %745 = add i32 %744, %290
  %746 = add i32 %745, %293
  %747 = sub i32 %746, %294
  %748 = sub i32 %747, %298
  %749 = sub i32 %748, %299
  %750 = sub i32 %749, %302
  %751 = sub i32 %750, %305
  %752 = add i32 %751, %306
  %753 = sub i32 %752, %322
  %754 = add i32 %753, %327
  %755 = sub i32 %754, %329
  %756 = add i32 %755, %334
  %757 = sub i32 %756, %336
  %758 = add i32 %757, %338
  %759 = sub i32 %758, %340
  %760 = sub i32 %759, %346
  %761 = add i32 %760, %353
  %762 = sub i32 %761, %354
  %763 = sub i32 %762, %356
  %764 = sub i32 %763, %360
  %765 = add i32 %764, %361
  %766 = sub i32 %765, %362
  %767 = add i32 %766, %364
  %768 = add i32 %767, %365
  %769 = sub i32 %768, %366
  %770 = add i32 %769, %367
  %771 = add i32 %770, %296
  %772 = add i32 %771, %378
  %773 = add i32 %772, %380
  %774 = add i32 %773, %381
  %775 = sub i32 %774, %393
  %776 = sub i32 %775, %394
  %777 = sub i32 %776, %396
  %778 = add i32 %777, %398
  %779 = add i32 %778, %403
  %780 = add i32 %779, %404
  %781 = sub i32 %780, %406
  %782 = sub i32 %781, %407
  %783 = add i32 %782, %408
  %784 = sub i32 %783, %409
  %785 = sub i32 %784, %410
  %786 = sub i32 %785, %414
  %787 = add i32 %786, %417
  %788 = add i32 %787, %419
  %789 = sub i32 %788, %420
  %790 = sub i32 %789, %422
  %791 = add i32 %790, %249
  %792 = sub i32 %791, %425
  %793 = add i32 %792, %426
  %794 = add i32 %793, %427
  %795 = sub i32 %794, %430
  %796 = sub i32 %795, %431
  %797 = sub i32 %796, %434
  %798 = sub i32 %797, %435
  %799 = add i32 %798, %437
  %800 = add i32 %799, %438
  %801 = add i32 %800, %439
  %802 = add i32 %801, %441
  %803 = add i32 %802, %443
  %804 = sub i32 %803, %444
  %805 = add i32 %804, %445
  %806 = add i32 %805, %446
  %807 = add i32 %806, %453
  %808 = sub i32 %807, %454
  %809 = add i32 %808, %455
  %810 = add i32 %809, %456
  %811 = sub i32 %810, %457
  %812 = add i32 %811, %461
  %813 = add i32 %812, %466
  %814 = sub i32 %813, %316
  %815 = add i32 %814, %341
  %816 = add i32 %815, %469
  %817 = sub i32 %816, %471
  %818 = add i32 %817, %472
  %819 = add i32 %818, %473
  %820 = sub i32 %819, %475
  %821 = sub i32 %820, %235
  %822 = sub i32 %821, %242
  %823 = sub i32 %822, %250
  %824 = sub i32 %823, %284
  %825 = sub i32 %824, %309
  %826 = sub i32 %825, %312
  %827 = sub i32 %826, %317
  %828 = sub i32 %827, %339
  %829 = add i32 %828, %343
  %830 = sub i32 %829, %348
  %831 = add i32 %830, %352
  %832 = sub i32 %831, %357
  %833 = sub i32 %832, %369
  %834 = sub i32 %833, %371
  %835 = sub i32 %834, %373
  %836 = sub i32 %835, %376
  %837 = add i32 %836, %383
  %838 = sub i32 %837, %387
  %839 = sub i32 %838, %389
  %840 = add i32 %839, %390
  %841 = sub i32 %840, %392
  %842 = sub i32 %841, %400
  %843 = sub i32 %842, %401
  %844 = sub i32 %843, %413
  %845 = sub i32 %844, %429
  %846 = sub i32 %845, %433
  %847 = sub i32 %846, %440
  %848 = sub i32 %847, %452
  %849 = sub i32 %848, %459
  %850 = sub i32 %849, %468
  %851 = add i32 %850, %478
  %852 = add i32 %851, %480
  %853 = add i32 %852, %482
  %854 = add i32 %853, %485
  %855 = add i32 %854, %486
  %856 = sub i32 %855, %488
  %857 = sub i32 %856, %321
  %858 = sub i32 %857, %450
  %859 = add i32 %858, %506
  %860 = sub i32 %859, %315
  %861 = sub i32 %860, %465
  %862 = add i32 %861, %502
  %863 = add i32 %862, %499
  %864 = add i32 %863, %495
  %865 = add i32 %864, %542
  %866 = icmp eq i32 %23, %865
  %867 = select i1 %866, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %868 = tail call i32 @puts(i8* nonnull dereferenceable(1) %867)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
