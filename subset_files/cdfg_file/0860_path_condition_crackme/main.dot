digraph "DFG for'main' function" {
	Node0x10ca868[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x10ca8e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x10ca978[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x10ca9d8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x10caa88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x10caeb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10caf98[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x10cb098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10cb158[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x10cb208[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10cb2c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x10cb378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10c5a50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x10cb578[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10cc4e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10ccb58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x10ccbb8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x10ccc30[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x10ccca0[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x10ccd10[shape=record, label="  %16 = or i32 %13, %10"];
	Node0x10ccd80[shape=record, label="  %17 = add i32 %10, 1"];
	Node0x10ccdf0[shape=record, label="  %18 = add i32 %17, %15"];
	Node0x10cce60[shape=record, label="  %19 = sub i32 %18, %16"];
	Node0x10cced0[shape=record, label="  %20 = and i32 %11, %14"];
	Node0x10ccf40[shape=record, label="  %21 = xor i32 %12, %11"];
	Node0x10ccfb0[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x10cd020[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x10cd090[shape=record, label="  %24 = shl i32 %14, 1"];
	Node0x10cd100[shape=record, label="  %25 = shl i32 %20, 2"];
	Node0x10cd170[shape=record, label="  %26 = and i32 %13, %10"];
	Node0x10cd1e0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x10cd250[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x10cd2c0[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x10cd330[shape=record, label="  %30 = shl i32 %16, 1"];
	Node0x10cd3a0[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x10cd410[shape=record, label="  %32 = xor i32 %13, -1"];
	Node0x10cd480[shape=record, label="  %33 = and i32 %10, %32"];
	Node0x10cd4f0[shape=record, label="  %34 = shl i32 %21, 1"];
	Node0x10cd560[shape=record, label="  %35 = shl i32 %11, 1"];
	Node0x10cd5d0[shape=record, label="  %36 = sub i32 %12, %35"];
	Node0x10cd640[shape=record, label="  %37 = add i32 %36, %20"];
	Node0x10cd6b0[shape=record, label="  %38 = sub i32 %37, %21"];
	Node0x10cd720[shape=record, label="  %39 = add i32 %38, %23"];
	Node0x10cd790[shape=record, label="  %40 = sub i32 %39, %24"];
	Node0x10cd800[shape=record, label="  %41 = add i32 %40, %15"];
	Node0x10cd870[shape=record, label="  %42 = add i32 %41, %25"];
	Node0x10cd8e0[shape=record, label="  %43 = add i32 %42, %29"];
	Node0x10cd950[shape=record, label="  %44 = add i32 %43, %33"];
	Node0x10cd9c0[shape=record, label="  %45 = sub i32 %44, %34"];
	Node0x10cda30[shape=record, label="  %46 = sub i32 %45, %28"];
	Node0x10cdaa0[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x10cdb10[shape=record, label="  %48 = icmp eq i32 %19, %47"];
	Node0x106a8b8[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x10cdba0[shape=record, label="  %50 = call i32 @puts(i8* nonnull dereferenceable(1) %49) #5"];
	Node0x10cde48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10cdfa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10ce0b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10ce1c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10ce288[shape=record, label="  ret i32 0"];
	Node0x10ca868 -> Node0x10ca8e8;
	Node0x10ca8e8 -> Node0x10ca978;
	Node0x10ca978 -> Node0x10ca9d8;
	Node0x10ca9d8 -> Node0x10caa88;
	Node0x10caa88 -> Node0x10caeb8;
	Node0x10caeb8 -> Node0x10caf98;
	Node0x10caf98 -> Node0x10cb098;
	Node0x10cb098 -> Node0x10cb158;
	Node0x10cb158 -> Node0x10cb208;
	Node0x10cb208 -> Node0x10cb2c8;
	Node0x10cb2c8 -> Node0x10cb378;
	Node0x10cb378 -> Node0x10c5a50;
	Node0x10c5a50 -> Node0x10cb578;
	Node0x10cb578 -> Node0x10cc4e8;
	Node0x10cc4e8 -> Node0x10ccb58;
	Node0x10ccb58 -> Node0x10ccbb8;
	Node0x10ccbb8 -> Node0x10ccc30;
	Node0x10ccc30 -> Node0x10ccca0;
	Node0x10ccca0 -> Node0x10ccd10;
	Node0x10ccd10 -> Node0x10ccd80;
	Node0x10ccd80 -> Node0x10ccdf0;
	Node0x10ccdf0 -> Node0x10cce60;
	Node0x10cce60 -> Node0x10cced0;
	Node0x10cced0 -> Node0x10ccf40;
	Node0x10ccf40 -> Node0x10ccfb0;
	Node0x10ccfb0 -> Node0x10cd020;
	Node0x10cd020 -> Node0x10cd090;
	Node0x10cd090 -> Node0x10cd100;
	Node0x10cd100 -> Node0x10cd170;
	Node0x10cd170 -> Node0x10cd1e0;
	Node0x10cd1e0 -> Node0x10cd250;
	Node0x10cd250 -> Node0x10cd2c0;
	Node0x10cd2c0 -> Node0x10cd330;
	Node0x10cd330 -> Node0x10cd3a0;
	Node0x10cd3a0 -> Node0x10cd410;
	Node0x10cd410 -> Node0x10cd480;
	Node0x10cd480 -> Node0x10cd4f0;
	Node0x10cd4f0 -> Node0x10cd560;
	Node0x10cd560 -> Node0x10cd5d0;
	Node0x10cd5d0 -> Node0x10cd640;
	Node0x10cd640 -> Node0x10cd6b0;
	Node0x10cd6b0 -> Node0x10cd720;
	Node0x10cd720 -> Node0x10cd790;
	Node0x10cd790 -> Node0x10cd800;
	Node0x10cd800 -> Node0x10cd870;
	Node0x10cd870 -> Node0x10cd8e0;
	Node0x10cd8e0 -> Node0x10cd950;
	Node0x10cd950 -> Node0x10cd9c0;
	Node0x10cd9c0 -> Node0x10cda30;
	Node0x10cda30 -> Node0x10cdaa0;
	Node0x10cdaa0 -> Node0x10cdb10;
	Node0x10cdb10 -> Node0x106a8b8;
	Node0x106a8b8 -> Node0x10cdba0;
	Node0x10cdba0 -> Node0x10cde48;
	Node0x10cde48 -> Node0x10cdfa8;
	Node0x10cdfa8 -> Node0x10ce0b8;
	Node0x10ce0b8 -> Node0x10ce1c8;
	Node0x10ce1c8 -> Node0x10ce288;
edge [color=red]
	Node0x10ca868 -> Node0x10caa88;
	Node0x10caa88 -> Node0x10caeb8;
	Node0x10ca8e8 -> Node0x10caf98;
	Node0x10caf98 -> Node0x10cb098;
	Node0x10ca978 -> Node0x10cb158;
	Node0x10cb158 -> Node0x10cb208;
	Node0x10ca9d8 -> Node0x10cb2c8;
	Node0x10cb2c8 -> Node0x10cb378;
	Node0x10ca868 -> Node0x10c5a50;
	Node0x10ca8e8 -> Node0x10c5a50;
	Node0x10ca978 -> Node0x10c5a50;
	Node0x10ca9d8 -> Node0x10c5a50;
	Node0x10ca868 -> Node0x10cb578;
	Node0x10ca8e8 -> Node0x10cc4e8;
	Node0x10ca978 -> Node0x10ccb58;
	Node0x10ca9d8 -> Node0x10ccbb8;
	Node0x10ccb58 -> Node0x10ccc30;
	Node0x10cc4e8 -> Node0x10ccca0;
	Node0x10ccc30 -> Node0x10ccca0;
	Node0x10ccbb8 -> Node0x10ccd10;
	Node0x10cb578 -> Node0x10ccd10;
	Node0x10cb578 -> Node0x10ccd80;
	Node0x10ccd80 -> Node0x10ccdf0;
	Node0x10ccca0 -> Node0x10ccdf0;
	Node0x10ccdf0 -> Node0x10cce60;
	Node0x10ccd10 -> Node0x10cce60;
	Node0x10cc4e8 -> Node0x10cced0;
	Node0x10ccc30 -> Node0x10cced0;
	Node0x10ccb58 -> Node0x10ccf40;
	Node0x10cc4e8 -> Node0x10ccf40;
	Node0x10ccb58 -> Node0x10ccfb0;
	Node0x10cc4e8 -> Node0x10ccfb0;
	Node0x10ccfb0 -> Node0x10cd020;
	Node0x10ccc30 -> Node0x10cd090;
	Node0x10cced0 -> Node0x10cd100;
	Node0x10ccbb8 -> Node0x10cd170;
	Node0x10cb578 -> Node0x10cd170;
	Node0x10cd170 -> Node0x10cd1e0;
	Node0x10cd1e0 -> Node0x10cd250;
	Node0x10ccbb8 -> Node0x10cd2c0;
	Node0x10cb578 -> Node0x10cd2c0;
	Node0x10ccd10 -> Node0x10cd330;
	Node0x10cd330 -> Node0x10cd3a0;
	Node0x10ccbb8 -> Node0x10cd410;
	Node0x10cb578 -> Node0x10cd480;
	Node0x10cd410 -> Node0x10cd480;
	Node0x10ccf40 -> Node0x10cd4f0;
	Node0x10cc4e8 -> Node0x10cd560;
	Node0x10ccb58 -> Node0x10cd5d0;
	Node0x10cd560 -> Node0x10cd5d0;
	Node0x10cd5d0 -> Node0x10cd640;
	Node0x10cced0 -> Node0x10cd640;
	Node0x10cd640 -> Node0x10cd6b0;
	Node0x10ccf40 -> Node0x10cd6b0;
	Node0x10cd6b0 -> Node0x10cd720;
	Node0x10cd020 -> Node0x10cd720;
	Node0x10cd720 -> Node0x10cd790;
	Node0x10cd090 -> Node0x10cd790;
	Node0x10cd790 -> Node0x10cd800;
	Node0x10ccca0 -> Node0x10cd800;
	Node0x10cd800 -> Node0x10cd870;
	Node0x10cd100 -> Node0x10cd870;
	Node0x10cd870 -> Node0x10cd8e0;
	Node0x10cd2c0 -> Node0x10cd8e0;
	Node0x10cd8e0 -> Node0x10cd950;
	Node0x10cd480 -> Node0x10cd950;
	Node0x10cd950 -> Node0x10cd9c0;
	Node0x10cd4f0 -> Node0x10cd9c0;
	Node0x10cd9c0 -> Node0x10cda30;
	Node0x10cd250 -> Node0x10cda30;
	Node0x10cda30 -> Node0x10cdaa0;
	Node0x10cd3a0 -> Node0x10cdaa0;
	Node0x10cce60 -> Node0x10cdb10;
	Node0x10cdaa0 -> Node0x10cdb10;
	Node0x10cdb10 -> Node0x106a8b8;
	Node0x106a8b8 -> Node0x10cdba0;
	Node0x10cb2c8 -> Node0x10cde48;
	Node0x10cb158 -> Node0x10cdfa8;
	Node0x10caf98 -> Node0x10ce0b8;
	Node0x10caa88 -> Node0x10ce1c8;
}
