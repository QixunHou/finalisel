digraph "DFG for'main' function" {
	Node0x21daad8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21dab58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21dabe8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x21dac48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x21dacf8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x21db128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21db208[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x21db308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21db3c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x21db478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21db538[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x21db5e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x21d5760[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x21db7e8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21dc758[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21dcdc8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x21dce28[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x21dcf38[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x21dd198[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x21dd2f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21dd408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21dd518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21dd5d8[shape=record, label="  ret i32 0"];
	Node0x21daad8 -> Node0x21dab58;
	Node0x21dab58 -> Node0x21dabe8;
	Node0x21dabe8 -> Node0x21dac48;
	Node0x21dac48 -> Node0x21dacf8;
	Node0x21dacf8 -> Node0x21db128;
	Node0x21db128 -> Node0x21db208;
	Node0x21db208 -> Node0x21db308;
	Node0x21db308 -> Node0x21db3c8;
	Node0x21db3c8 -> Node0x21db478;
	Node0x21db478 -> Node0x21db538;
	Node0x21db538 -> Node0x21db5e8;
	Node0x21db5e8 -> Node0x21d5760;
	Node0x21d5760 -> Node0x21db7e8;
	Node0x21db7e8 -> Node0x21dc758;
	Node0x21dc758 -> Node0x21dcdc8;
	Node0x21dcdc8 -> Node0x21dce28;
	Node0x21dce28 -> Node0x21dcf38;
	Node0x21dcf38 -> Node0x21dd198;
	Node0x21dd198 -> Node0x21dd2f8;
	Node0x21dd2f8 -> Node0x21dd408;
	Node0x21dd408 -> Node0x21dd518;
	Node0x21dd518 -> Node0x21dd5d8;
edge [color=red]
	Node0x21daad8 -> Node0x21dacf8;
	Node0x21dacf8 -> Node0x21db128;
	Node0x21dab58 -> Node0x21db208;
	Node0x21db208 -> Node0x21db308;
	Node0x21dabe8 -> Node0x21db3c8;
	Node0x21db3c8 -> Node0x21db478;
	Node0x21dac48 -> Node0x21db538;
	Node0x21db538 -> Node0x21db5e8;
	Node0x21daad8 -> Node0x21d5760;
	Node0x21dab58 -> Node0x21d5760;
	Node0x21dabe8 -> Node0x21d5760;
	Node0x21dac48 -> Node0x21d5760;
	Node0x21daad8 -> Node0x21db7e8;
	Node0x21dab58 -> Node0x21dc758;
	Node0x21dabe8 -> Node0x21dcdc8;
	Node0x21dac48 -> Node0x21dce28;
	Node0x21db7e8 -> Node0x21dcf38;
	Node0x21dc758 -> Node0x21dcf38;
	Node0x21dcdc8 -> Node0x21dcf38;
	Node0x21dce28 -> Node0x21dcf38;
	Node0x21db538 -> Node0x21dd198;
	Node0x21db3c8 -> Node0x21dd2f8;
	Node0x21db208 -> Node0x21dd408;
	Node0x21dacf8 -> Node0x21dd518;
}
