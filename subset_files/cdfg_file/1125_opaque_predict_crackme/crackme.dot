digraph "DFG for'crackme' function" {
	Node0x21d8730[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x21d8db0[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x21d8e20[shape=record, label="  %7 = xor i32 %2, -1"];
	Node0x21d8ec0[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x21d8f30[shape=record, label="  %9 = add i32 %8, %6"];
	Node0x21d8fa0[shape=record, label="  %10 = add i32 %9, %3"];
	Node0x21d9010[shape=record, label="  %11 = and i32 %2, %1"];
	Node0x21d9080[shape=record, label="  %12 = or i32 %2, %1"];
	Node0x21d90f0[shape=record, label="  %13 = and i32 %7, %1"];
	Node0x21d9160[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x21d9200[shape=record, label="  %15 = mul i32 %14, 7"];
	Node0x21d92a0[shape=record, label="  %16 = xor i32 %1, 2147483647"];
	Node0x21d9310[shape=record, label="  %17 = and i32 %16, %2"];
	Node0x21d9380[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x21d93f0[shape=record, label="  %19 = and i32 %3, %0"];
	Node0x21d9460[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x21d94d0[shape=record, label="  %21 = xor i32 %0, -1"];
	Node0x21d9540[shape=record, label="  %22 = xor i32 %3, 2147483647"];
	Node0x21d95b0[shape=record, label="  %23 = or i32 %22, %0"];
	Node0x21d9620[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x21d9690[shape=record, label="  %25 = or i32 %3, %0"];
	Node0x21d9700[shape=record, label="  %26 = shl i32 %0, 1"];
	Node0x21d9770[shape=record, label="  %27 = or i32 %21, %3"];
	Node0x21d97e0[shape=record, label="  %28 = xor i32 %25, -1"];
	Node0x21d9850[shape=record, label="  %29 = xor i32 %27, -1"];
	Node0x21d98c0[shape=record, label="  %30 = add i32 %19, %29"];
	Node0x21d9960[shape=record, label="  %31 = mul i32 %30, 6"];
	Node0x21d9a00[shape=record, label="  %32 = shl i32 %1, 2"];
	Node0x21d9cb0[shape=record, label="  %33 = sub i32 5, %0"];
	Node0x21d9d20[shape=record, label="  %34 = sub i32 %33, %1"];
	Node0x21d9d90[shape=record, label="  %35 = sub i32 %34, %26"];
	Node0x21d9e00[shape=record, label="  %36 = add i32 %35, %11"];
	Node0x21d9e70[shape=record, label="  %37 = add i32 %36, %12"];
	Node0x21d9ee0[shape=record, label="  %38 = add i32 %37, %5"];
	Node0x21d9f50[shape=record, label="  %39 = add i32 %38, %13"];
	Node0x21d9fc0[shape=record, label="  %40 = add i32 %39, %3"];
	Node0x21da030[shape=record, label="  %41 = add i32 %40, %15"];
	Node0x21da0a0[shape=record, label="  %42 = add i32 %41, %18"];
	Node0x21da110[shape=record, label="  %43 = add i32 %42, %20"];
	Node0x21da180[shape=record, label="  %44 = sub i32 %43, %25"];
	Node0x21da1f0[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x21da260[shape=record, label="  %46 = add i32 %45, %28"];
	Node0x21da2d0[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x21da340[shape=record, label="  %48 = sub i32 %47, %24"];
	Node0x21da3b0[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x21da420[shape=record, label="  %50 = icmp eq i32 %10, %49"];
	Node0x2179268[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x21da8c0[shape=record, label="  %52 = tail call i32 @puts(i8* nonnull dereferenceable(1) %51)"];
	Node0x21da910[shape=record, label="  ret void"];
	Node0x21d8730 -> Node0x21d8db0;
	Node0x21d8db0 -> Node0x21d8e20;
	Node0x21d8e20 -> Node0x21d8ec0;
	Node0x21d8ec0 -> Node0x21d8f30;
	Node0x21d8f30 -> Node0x21d8fa0;
	Node0x21d8fa0 -> Node0x21d9010;
	Node0x21d9010 -> Node0x21d9080;
	Node0x21d9080 -> Node0x21d90f0;
	Node0x21d90f0 -> Node0x21d9160;
	Node0x21d9160 -> Node0x21d9200;
	Node0x21d9200 -> Node0x21d92a0;
	Node0x21d92a0 -> Node0x21d9310;
	Node0x21d9310 -> Node0x21d9380;
	Node0x21d9380 -> Node0x21d93f0;
	Node0x21d93f0 -> Node0x21d9460;
	Node0x21d9460 -> Node0x21d94d0;
	Node0x21d94d0 -> Node0x21d9540;
	Node0x21d9540 -> Node0x21d95b0;
	Node0x21d95b0 -> Node0x21d9620;
	Node0x21d9620 -> Node0x21d9690;
	Node0x21d9690 -> Node0x21d9700;
	Node0x21d9700 -> Node0x21d9770;
	Node0x21d9770 -> Node0x21d97e0;
	Node0x21d97e0 -> Node0x21d9850;
	Node0x21d9850 -> Node0x21d98c0;
	Node0x21d98c0 -> Node0x21d9960;
	Node0x21d9960 -> Node0x21d9a00;
	Node0x21d9a00 -> Node0x21d9cb0;
	Node0x21d9cb0 -> Node0x21d9d20;
	Node0x21d9d20 -> Node0x21d9d90;
	Node0x21d9d90 -> Node0x21d9e00;
	Node0x21d9e00 -> Node0x21d9e70;
	Node0x21d9e70 -> Node0x21d9ee0;
	Node0x21d9ee0 -> Node0x21d9f50;
	Node0x21d9f50 -> Node0x21d9fc0;
	Node0x21d9fc0 -> Node0x21da030;
	Node0x21da030 -> Node0x21da0a0;
	Node0x21da0a0 -> Node0x21da110;
	Node0x21da110 -> Node0x21da180;
	Node0x21da180 -> Node0x21da1f0;
	Node0x21da1f0 -> Node0x21da260;
	Node0x21da260 -> Node0x21da2d0;
	Node0x21da2d0 -> Node0x21da340;
	Node0x21da340 -> Node0x21da3b0;
	Node0x21da3b0 -> Node0x21da420;
	Node0x21da420 -> Node0x2179268;
	Node0x2179268 -> Node0x21da8c0;
	Node0x21da8c0 -> Node0x21da910;
edge [color=red]
	Node0x21d8730 -> Node0x21d8db0;
	Node0x21d8e20 -> Node0x21d8ec0;
	Node0x21d8ec0 -> Node0x21d8f30;
	Node0x21d8db0 -> Node0x21d8f30;
	Node0x21d8f30 -> Node0x21d8fa0;
	Node0x21d8e20 -> Node0x21d90f0;
	Node0x21d9080 -> Node0x21d9160;
	Node0x21d9160 -> Node0x21d9200;
	Node0x21d92a0 -> Node0x21d9310;
	Node0x21d9310 -> Node0x21d9380;
	Node0x21d93f0 -> Node0x21d9460;
	Node0x21d9540 -> Node0x21d95b0;
	Node0x21d95b0 -> Node0x21d9620;
	Node0x21d94d0 -> Node0x21d9770;
	Node0x21d9690 -> Node0x21d97e0;
	Node0x21d9770 -> Node0x21d9850;
	Node0x21d93f0 -> Node0x21d98c0;
	Node0x21d9850 -> Node0x21d98c0;
	Node0x21d98c0 -> Node0x21d9960;
	Node0x21d9cb0 -> Node0x21d9d20;
	Node0x21d9d20 -> Node0x21d9d90;
	Node0x21d9700 -> Node0x21d9d90;
	Node0x21d9d90 -> Node0x21d9e00;
	Node0x21d9010 -> Node0x21d9e00;
	Node0x21d9e00 -> Node0x21d9e70;
	Node0x21d9080 -> Node0x21d9e70;
	Node0x21d9e70 -> Node0x21d9ee0;
	Node0x21d8730 -> Node0x21d9ee0;
	Node0x21d9ee0 -> Node0x21d9f50;
	Node0x21d90f0 -> Node0x21d9f50;
	Node0x21d9f50 -> Node0x21d9fc0;
	Node0x21d9fc0 -> Node0x21da030;
	Node0x21d9200 -> Node0x21da030;
	Node0x21da030 -> Node0x21da0a0;
	Node0x21d9380 -> Node0x21da0a0;
	Node0x21da0a0 -> Node0x21da110;
	Node0x21d9460 -> Node0x21da110;
	Node0x21da110 -> Node0x21da180;
	Node0x21d9690 -> Node0x21da180;
	Node0x21da180 -> Node0x21da1f0;
	Node0x21d9770 -> Node0x21da1f0;
	Node0x21da1f0 -> Node0x21da260;
	Node0x21d97e0 -> Node0x21da260;
	Node0x21da260 -> Node0x21da2d0;
	Node0x21d9a00 -> Node0x21da2d0;
	Node0x21da2d0 -> Node0x21da340;
	Node0x21d9620 -> Node0x21da340;
	Node0x21da340 -> Node0x21da3b0;
	Node0x21d9960 -> Node0x21da3b0;
	Node0x21d8fa0 -> Node0x21da420;
	Node0x21da3b0 -> Node0x21da420;
	Node0x21da420 -> Node0x2179268;
	Node0x2179268 -> Node0x21da8c0;
}
