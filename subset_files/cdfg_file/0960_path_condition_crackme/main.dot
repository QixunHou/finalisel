digraph "DFG for'main' function" {
	Node0x22b5248[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x22b52c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x22b5358[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x22b53b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x22b5838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x22b5918[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x22b5a18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22b5ad8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x22b5b88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22b5de8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x22b5ea8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x22b6e18[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x22b7488[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x22b7580[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x22b7788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22b78e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22b79f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x22b7ab8[shape=record, label="  ret i32 0"];
	Node0x22b5248 -> Node0x22b52c8;
	Node0x22b52c8 -> Node0x22b5358;
	Node0x22b5358 -> Node0x22b53b8;
	Node0x22b53b8 -> Node0x22b5838;
	Node0x22b5838 -> Node0x22b5918;
	Node0x22b5918 -> Node0x22b5a18;
	Node0x22b5a18 -> Node0x22b5ad8;
	Node0x22b5ad8 -> Node0x22b5b88;
	Node0x22b5b88 -> Node0x22b5de8;
	Node0x22b5de8 -> Node0x22b5ea8;
	Node0x22b5ea8 -> Node0x22b6e18;
	Node0x22b6e18 -> Node0x22b7488;
	Node0x22b7488 -> Node0x22b7580;
	Node0x22b7580 -> Node0x22b7788;
	Node0x22b7788 -> Node0x22b78e8;
	Node0x22b78e8 -> Node0x22b79f8;
	Node0x22b79f8 -> Node0x22b7ab8;
edge [color=red]
	Node0x22b5248 -> Node0x22b53b8;
	Node0x22b53b8 -> Node0x22b5838;
	Node0x22b52c8 -> Node0x22b5918;
	Node0x22b5918 -> Node0x22b5a18;
	Node0x22b5358 -> Node0x22b5ad8;
	Node0x22b5ad8 -> Node0x22b5b88;
	Node0x22b5248 -> Node0x22b5de8;
	Node0x22b52c8 -> Node0x22b5de8;
	Node0x22b5358 -> Node0x22b5de8;
	Node0x22b5248 -> Node0x22b5ea8;
	Node0x22b52c8 -> Node0x22b6e18;
	Node0x22b5358 -> Node0x22b7488;
	Node0x22b5ea8 -> Node0x22b7580;
	Node0x22b6e18 -> Node0x22b7580;
	Node0x22b7488 -> Node0x22b7580;
	Node0x22b5ad8 -> Node0x22b7788;
	Node0x22b5918 -> Node0x22b78e8;
	Node0x22b53b8 -> Node0x22b79f8;
}
