digraph "DFG for'crackme' function" {
	Node0x23774b0[shape=record, label="  %3 = or i32 %1, %0"];
	Node0x2377b60[shape=record, label="  %4 = sub i32 0, %3"];
	Node0x2377c20[shape=record, label="  %5 = and i32 %1, %0"];
	Node0x2377c90[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x2377d30[shape=record, label="  %7 = xor i32 %6, -2"];
	Node0x2377dd0[shape=record, label="  %8 = xor i32 %1, -1"];
	Node0x2377e40[shape=record, label="  %9 = or i32 %8, %0"];
	Node0x2377eb0[shape=record, label="  %10 = xor i32 %1, %0"];
	Node0x2377f20[shape=record, label="  %11 = shl i32 %8, 1"];
	Node0x2377f90[shape=record, label="  %12 = xor i32 %9, -1"];
	Node0x2378030[shape=record, label="  %13 = mul i32 %12, -5"];
	Node0x23780d0[shape=record, label="  %14 = mul i32 %0, -3"];
	Node0x2378140[shape=record, label="  %15 = add i32 %1, 1"];
	Node0x23781b0[shape=record, label="  %16 = add i32 %15, %9"];
	Node0x2378220[shape=record, label="  %17 = add i32 %16, %10"];
	Node0x2378290[shape=record, label="  %18 = sub i32 %17, %11"];
	Node0x2378300[shape=record, label="  %19 = add i32 %18, %3"];
	Node0x2378370[shape=record, label="  %20 = add i32 %19, %13"];
	Node0x23783e0[shape=record, label="  %21 = add i32 %20, %7"];
	Node0x2378450[shape=record, label="  %22 = add i32 %21, %14"];
	Node0x23784c0[shape=record, label="  %23 = icmp eq i32 %22, %4"];
	Node0x2318268[shape=record, label="  %24 = select i1 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2378960[shape=record, label="  %25 = tail call i32 @puts(i8* nonnull dereferenceable(1) %24)"];
	Node0x23789b0[shape=record, label="  ret void"];
	Node0x23774b0 -> Node0x2377b60;
	Node0x2377b60 -> Node0x2377c20;
	Node0x2377c20 -> Node0x2377c90;
	Node0x2377c90 -> Node0x2377d30;
	Node0x2377d30 -> Node0x2377dd0;
	Node0x2377dd0 -> Node0x2377e40;
	Node0x2377e40 -> Node0x2377eb0;
	Node0x2377eb0 -> Node0x2377f20;
	Node0x2377f20 -> Node0x2377f90;
	Node0x2377f90 -> Node0x2378030;
	Node0x2378030 -> Node0x23780d0;
	Node0x23780d0 -> Node0x2378140;
	Node0x2378140 -> Node0x23781b0;
	Node0x23781b0 -> Node0x2378220;
	Node0x2378220 -> Node0x2378290;
	Node0x2378290 -> Node0x2378300;
	Node0x2378300 -> Node0x2378370;
	Node0x2378370 -> Node0x23783e0;
	Node0x23783e0 -> Node0x2378450;
	Node0x2378450 -> Node0x23784c0;
	Node0x23784c0 -> Node0x2318268;
	Node0x2318268 -> Node0x2378960;
	Node0x2378960 -> Node0x23789b0;
edge [color=red]
	Node0x23774b0 -> Node0x2377b60;
	Node0x2377c20 -> Node0x2377c90;
	Node0x2377c90 -> Node0x2377d30;
	Node0x2377dd0 -> Node0x2377e40;
	Node0x2377dd0 -> Node0x2377f20;
	Node0x2377e40 -> Node0x2377f90;
	Node0x2377f90 -> Node0x2378030;
	Node0x2378140 -> Node0x23781b0;
	Node0x2377e40 -> Node0x23781b0;
	Node0x23781b0 -> Node0x2378220;
	Node0x2377eb0 -> Node0x2378220;
	Node0x2378220 -> Node0x2378290;
	Node0x2377f20 -> Node0x2378290;
	Node0x2378290 -> Node0x2378300;
	Node0x23774b0 -> Node0x2378300;
	Node0x2378300 -> Node0x2378370;
	Node0x2378030 -> Node0x2378370;
	Node0x2378370 -> Node0x23783e0;
	Node0x2377d30 -> Node0x23783e0;
	Node0x23783e0 -> Node0x2378450;
	Node0x23780d0 -> Node0x2378450;
	Node0x2378450 -> Node0x23784c0;
	Node0x2377b60 -> Node0x23784c0;
	Node0x23784c0 -> Node0x2318268;
	Node0x2318268 -> Node0x2378960;
}
