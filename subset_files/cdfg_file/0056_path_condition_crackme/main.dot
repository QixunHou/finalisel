digraph "DFG for'main' function" {
	Node0x592ae8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x592b68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x592bf8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x593058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x593138[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x593258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x593490[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x593548[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5944b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x594b40[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x594bb0[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x594c20[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x594c90[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x594d00[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x594d70[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x594de0[shape=record, label="  %14 = or i32 %6, %11"];
	Node0x594e50[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x594ec0[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x594f30[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x594fa0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x595010[shape=record, label="  %19 = xor i32 %15, -2"];
	Node0x595080[shape=record, label="  %20 = sub i32 1, %6"];
	Node0x5950f0[shape=record, label="  %21 = add i32 %20, %8"];
	Node0x595160[shape=record, label="  %22 = add i32 %21, %13"];
	Node0x5951d0[shape=record, label="  %23 = sub i32 %22, %12"];
	Node0x595240[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x5952b0[shape=record, label="  %25 = add i32 %24, %15"];
	Node0x595320[shape=record, label="  %26 = sub i32 %25, %18"];
	Node0x595390[shape=record, label="  %27 = sub i32 %26, %19"];
	Node0x595400[shape=record, label="  %28 = icmp eq i32 %27, -1"];
	Node0x5339d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x595490[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x5956e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x595848[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x595908[shape=record, label="  ret i32 0"];
	Node0x592ae8 -> Node0x592b68;
	Node0x592b68 -> Node0x592bf8;
	Node0x592bf8 -> Node0x593058;
	Node0x593058 -> Node0x593138;
	Node0x593138 -> Node0x593258;
	Node0x593258 -> Node0x593490;
	Node0x593490 -> Node0x593548;
	Node0x593548 -> Node0x5944b8;
	Node0x5944b8 -> Node0x594b40;
	Node0x594b40 -> Node0x594bb0;
	Node0x594bb0 -> Node0x594c20;
	Node0x594c20 -> Node0x594c90;
	Node0x594c90 -> Node0x594d00;
	Node0x594d00 -> Node0x594d70;
	Node0x594d70 -> Node0x594de0;
	Node0x594de0 -> Node0x594e50;
	Node0x594e50 -> Node0x594ec0;
	Node0x594ec0 -> Node0x594f30;
	Node0x594f30 -> Node0x594fa0;
	Node0x594fa0 -> Node0x595010;
	Node0x595010 -> Node0x595080;
	Node0x595080 -> Node0x5950f0;
	Node0x5950f0 -> Node0x595160;
	Node0x595160 -> Node0x5951d0;
	Node0x5951d0 -> Node0x595240;
	Node0x595240 -> Node0x5952b0;
	Node0x5952b0 -> Node0x595320;
	Node0x595320 -> Node0x595390;
	Node0x595390 -> Node0x595400;
	Node0x595400 -> Node0x5339d8;
	Node0x5339d8 -> Node0x595490;
	Node0x595490 -> Node0x5956e8;
	Node0x5956e8 -> Node0x595848;
	Node0x595848 -> Node0x595908;
edge [color=red]
	Node0x592ae8 -> Node0x592bf8;
	Node0x592bf8 -> Node0x593058;
	Node0x592b68 -> Node0x593138;
	Node0x593138 -> Node0x593258;
	Node0x592ae8 -> Node0x593490;
	Node0x592b68 -> Node0x593490;
	Node0x592ae8 -> Node0x593548;
	Node0x592b68 -> Node0x5944b8;
	Node0x593548 -> Node0x594b40;
	Node0x5944b8 -> Node0x594bb0;
	Node0x593548 -> Node0x594bb0;
	Node0x594bb0 -> Node0x594c20;
	Node0x5944b8 -> Node0x594c90;
	Node0x593548 -> Node0x594d00;
	Node0x594c90 -> Node0x594d00;
	Node0x594d00 -> Node0x594d70;
	Node0x593548 -> Node0x594de0;
	Node0x594c90 -> Node0x594de0;
	Node0x594de0 -> Node0x594e50;
	Node0x5944b8 -> Node0x594ec0;
	Node0x593548 -> Node0x594ec0;
	Node0x594ec0 -> Node0x594f30;
	Node0x594f30 -> Node0x594fa0;
	Node0x594e50 -> Node0x595010;
	Node0x593548 -> Node0x595080;
	Node0x595080 -> Node0x5950f0;
	Node0x594b40 -> Node0x5950f0;
	Node0x5950f0 -> Node0x595160;
	Node0x594d70 -> Node0x595160;
	Node0x595160 -> Node0x5951d0;
	Node0x594d00 -> Node0x5951d0;
	Node0x5951d0 -> Node0x595240;
	Node0x594c20 -> Node0x595240;
	Node0x595240 -> Node0x5952b0;
	Node0x594e50 -> Node0x5952b0;
	Node0x5952b0 -> Node0x595320;
	Node0x594fa0 -> Node0x595320;
	Node0x595320 -> Node0x595390;
	Node0x595010 -> Node0x595390;
	Node0x595390 -> Node0x595400;
	Node0x595400 -> Node0x5339d8;
	Node0x5339d8 -> Node0x595490;
	Node0x593138 -> Node0x5956e8;
	Node0x592bf8 -> Node0x595848;
}
