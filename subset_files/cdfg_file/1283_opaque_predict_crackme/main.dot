digraph "DFG for'main' function" {
	Node0x1c70268[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c702e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c70378[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c703d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1c70858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c70938[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1c70a38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c70af8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1c70ba8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c70e08[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1c70ec8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c71028[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c71088[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c76b70[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1c76d78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c76ed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c76fe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c770a8[shape=record, label="  ret i32 0"];
	Node0x1c70268 -> Node0x1c702e8;
	Node0x1c702e8 -> Node0x1c70378;
	Node0x1c70378 -> Node0x1c703d8;
	Node0x1c703d8 -> Node0x1c70858;
	Node0x1c70858 -> Node0x1c70938;
	Node0x1c70938 -> Node0x1c70a38;
	Node0x1c70a38 -> Node0x1c70af8;
	Node0x1c70af8 -> Node0x1c70ba8;
	Node0x1c70ba8 -> Node0x1c70e08;
	Node0x1c70e08 -> Node0x1c70ec8;
	Node0x1c70ec8 -> Node0x1c71028;
	Node0x1c71028 -> Node0x1c71088;
	Node0x1c71088 -> Node0x1c76b70;
	Node0x1c76b70 -> Node0x1c76d78;
	Node0x1c76d78 -> Node0x1c76ed8;
	Node0x1c76ed8 -> Node0x1c76fe8;
	Node0x1c76fe8 -> Node0x1c770a8;
edge [color=red]
	Node0x1c70268 -> Node0x1c703d8;
	Node0x1c703d8 -> Node0x1c70858;
	Node0x1c702e8 -> Node0x1c70938;
	Node0x1c70938 -> Node0x1c70a38;
	Node0x1c70378 -> Node0x1c70af8;
	Node0x1c70af8 -> Node0x1c70ba8;
	Node0x1c70268 -> Node0x1c70e08;
	Node0x1c702e8 -> Node0x1c70e08;
	Node0x1c70378 -> Node0x1c70e08;
	Node0x1c70268 -> Node0x1c70ec8;
	Node0x1c702e8 -> Node0x1c71028;
	Node0x1c70378 -> Node0x1c71088;
	Node0x1c70ec8 -> Node0x1c76b70;
	Node0x1c71028 -> Node0x1c76b70;
	Node0x1c71088 -> Node0x1c76b70;
	Node0x1c70af8 -> Node0x1c76d78;
	Node0x1c70938 -> Node0x1c76ed8;
	Node0x1c703d8 -> Node0x1c76fe8;
}
