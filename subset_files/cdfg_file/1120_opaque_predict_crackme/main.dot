digraph "DFG for'main' function" {
	Node0x1c599d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c59a58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c59ae8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c59b48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1c59bf8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1c5a028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c5a108[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1c5a208[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c5a2c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1c5a378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c5a438[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1c5a4e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c54ab0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1c5a6e8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c5b658[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c5bcc8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c5bd28[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1c5bda0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1c5be10[shape=record, label="  %15 = xor i32 %13, -1"];
	Node0x1c5be80[shape=record, label="  %16 = add i32 %14, %15"];
	Node0x1c5bef0[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0x1c5bf60[shape=record, label="  %18 = or i32 %11, %17"];
	Node0x1c5bfd0[shape=record, label="  %19 = and i32 %12, %11"];
	Node0x1c5c040[shape=record, label="  %20 = shl i32 %14, 1"];
	Node0x1c5c0b0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x1c5c120[shape=record, label="  %22 = or i32 %12, %11"];
	Node0x1c5c190[shape=record, label="  %23 = shl i32 %11, 1"];
	Node0x1c5c200[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x1c5c270[shape=record, label="  %25 = shl i32 %22, 1"];
	Node0x1c5c2e0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x1c5c350[shape=record, label="  %27 = xor i32 %18, -1"];
	Node0x1c5c3c0[shape=record, label="  %28 = and i32 %11, %17"];
	Node0x1c5c430[shape=record, label="  %29 = mul i32 %28, 3"];
	Node0x1c5c4a0[shape=record, label="  %30 = mul i32 %19, 5"];
	Node0x1c5c510[shape=record, label="  %31 = xor i32 %10, -1"];
	Node0x1c5c580[shape=record, label="  %32 = or i32 %13, %31"];
	Node0x1c5c5f0[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x1c5c660[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x1c5c6d0[shape=record, label="  %35 = and i32 %13, %31"];
	Node0x1c5c740[shape=record, label="  %36 = sub i32 1, %10"];
	Node0x1c5c7b0[shape=record, label="  %37 = add i32 %36, %11"];
	Node0x1c5c820[shape=record, label="  %38 = sub i32 %37, %18"];
	Node0x1c5c890[shape=record, label="  %39 = sub i32 %38, %19"];
	Node0x1c5c900[shape=record, label="  %40 = sub i32 %39, %22"];
	Node0x1c5c970[shape=record, label="  %41 = add i32 %40, %24"];
	Node0x1c5c9e0[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x1c5ca50[shape=record, label="  %43 = add i32 %42, %29"];
	Node0x1c5cac0[shape=record, label="  %44 = add i32 %43, %30"];
	Node0x1c5cb30[shape=record, label="  %45 = add i32 %44, %32"];
	Node0x1c5cba0[shape=record, label="  %46 = sub i32 %45, %35"];
	Node0x1c5cc10[shape=record, label="  %47 = sub i32 %46, %21"];
	Node0x1c5cc80[shape=record, label="  %48 = add i32 %47, %26"];
	Node0x1c5ccf0[shape=record, label="  %49 = add i32 %48, %34"];
	Node0x1c5cd60[shape=record, label="  %50 = icmp eq i32 %16, %49"];
	Node0x1bf98b8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c5cdf0[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0x1c5d098[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c5d1f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c5d308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c5d418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c5d4d8[shape=record, label="  ret i32 0"];
	Node0x1c599d8 -> Node0x1c59a58;
	Node0x1c59a58 -> Node0x1c59ae8;
	Node0x1c59ae8 -> Node0x1c59b48;
	Node0x1c59b48 -> Node0x1c59bf8;
	Node0x1c59bf8 -> Node0x1c5a028;
	Node0x1c5a028 -> Node0x1c5a108;
	Node0x1c5a108 -> Node0x1c5a208;
	Node0x1c5a208 -> Node0x1c5a2c8;
	Node0x1c5a2c8 -> Node0x1c5a378;
	Node0x1c5a378 -> Node0x1c5a438;
	Node0x1c5a438 -> Node0x1c5a4e8;
	Node0x1c5a4e8 -> Node0x1c54ab0;
	Node0x1c54ab0 -> Node0x1c5a6e8;
	Node0x1c5a6e8 -> Node0x1c5b658;
	Node0x1c5b658 -> Node0x1c5bcc8;
	Node0x1c5bcc8 -> Node0x1c5bd28;
	Node0x1c5bd28 -> Node0x1c5bda0;
	Node0x1c5bda0 -> Node0x1c5be10;
	Node0x1c5be10 -> Node0x1c5be80;
	Node0x1c5be80 -> Node0x1c5bef0;
	Node0x1c5bef0 -> Node0x1c5bf60;
	Node0x1c5bf60 -> Node0x1c5bfd0;
	Node0x1c5bfd0 -> Node0x1c5c040;
	Node0x1c5c040 -> Node0x1c5c0b0;
	Node0x1c5c0b0 -> Node0x1c5c120;
	Node0x1c5c120 -> Node0x1c5c190;
	Node0x1c5c190 -> Node0x1c5c200;
	Node0x1c5c200 -> Node0x1c5c270;
	Node0x1c5c270 -> Node0x1c5c2e0;
	Node0x1c5c2e0 -> Node0x1c5c350;
	Node0x1c5c350 -> Node0x1c5c3c0;
	Node0x1c5c3c0 -> Node0x1c5c430;
	Node0x1c5c430 -> Node0x1c5c4a0;
	Node0x1c5c4a0 -> Node0x1c5c510;
	Node0x1c5c510 -> Node0x1c5c580;
	Node0x1c5c580 -> Node0x1c5c5f0;
	Node0x1c5c5f0 -> Node0x1c5c660;
	Node0x1c5c660 -> Node0x1c5c6d0;
	Node0x1c5c6d0 -> Node0x1c5c740;
	Node0x1c5c740 -> Node0x1c5c7b0;
	Node0x1c5c7b0 -> Node0x1c5c820;
	Node0x1c5c820 -> Node0x1c5c890;
	Node0x1c5c890 -> Node0x1c5c900;
	Node0x1c5c900 -> Node0x1c5c970;
	Node0x1c5c970 -> Node0x1c5c9e0;
	Node0x1c5c9e0 -> Node0x1c5ca50;
	Node0x1c5ca50 -> Node0x1c5cac0;
	Node0x1c5cac0 -> Node0x1c5cb30;
	Node0x1c5cb30 -> Node0x1c5cba0;
	Node0x1c5cba0 -> Node0x1c5cc10;
	Node0x1c5cc10 -> Node0x1c5cc80;
	Node0x1c5cc80 -> Node0x1c5ccf0;
	Node0x1c5ccf0 -> Node0x1c5cd60;
	Node0x1c5cd60 -> Node0x1bf98b8;
	Node0x1bf98b8 -> Node0x1c5cdf0;
	Node0x1c5cdf0 -> Node0x1c5d098;
	Node0x1c5d098 -> Node0x1c5d1f8;
	Node0x1c5d1f8 -> Node0x1c5d308;
	Node0x1c5d308 -> Node0x1c5d418;
	Node0x1c5d418 -> Node0x1c5d4d8;
edge [color=red]
	Node0x1c599d8 -> Node0x1c59bf8;
	Node0x1c59bf8 -> Node0x1c5a028;
	Node0x1c59a58 -> Node0x1c5a108;
	Node0x1c5a108 -> Node0x1c5a208;
	Node0x1c59ae8 -> Node0x1c5a2c8;
	Node0x1c5a2c8 -> Node0x1c5a378;
	Node0x1c59b48 -> Node0x1c5a438;
	Node0x1c5a438 -> Node0x1c5a4e8;
	Node0x1c599d8 -> Node0x1c54ab0;
	Node0x1c59a58 -> Node0x1c54ab0;
	Node0x1c59ae8 -> Node0x1c54ab0;
	Node0x1c59b48 -> Node0x1c54ab0;
	Node0x1c599d8 -> Node0x1c5a6e8;
	Node0x1c59a58 -> Node0x1c5b658;
	Node0x1c59ae8 -> Node0x1c5bcc8;
	Node0x1c59b48 -> Node0x1c5bd28;
	Node0x1c5bcc8 -> Node0x1c5bda0;
	Node0x1c5b658 -> Node0x1c5bda0;
	Node0x1c5bd28 -> Node0x1c5be10;
	Node0x1c5bda0 -> Node0x1c5be80;
	Node0x1c5be10 -> Node0x1c5be80;
	Node0x1c5bcc8 -> Node0x1c5bef0;
	Node0x1c5b658 -> Node0x1c5bf60;
	Node0x1c5bef0 -> Node0x1c5bf60;
	Node0x1c5bcc8 -> Node0x1c5bfd0;
	Node0x1c5b658 -> Node0x1c5bfd0;
	Node0x1c5bda0 -> Node0x1c5c040;
	Node0x1c5c040 -> Node0x1c5c0b0;
	Node0x1c5bcc8 -> Node0x1c5c120;
	Node0x1c5b658 -> Node0x1c5c120;
	Node0x1c5b658 -> Node0x1c5c190;
	Node0x1c5c190 -> Node0x1c5c200;
	Node0x1c5c120 -> Node0x1c5c270;
	Node0x1c5c270 -> Node0x1c5c2e0;
	Node0x1c5bf60 -> Node0x1c5c350;
	Node0x1c5b658 -> Node0x1c5c3c0;
	Node0x1c5bef0 -> Node0x1c5c3c0;
	Node0x1c5c3c0 -> Node0x1c5c430;
	Node0x1c5bfd0 -> Node0x1c5c4a0;
	Node0x1c5a6e8 -> Node0x1c5c510;
	Node0x1c5bd28 -> Node0x1c5c580;
	Node0x1c5c510 -> Node0x1c5c580;
	Node0x1c5c580 -> Node0x1c5c5f0;
	Node0x1c5c5f0 -> Node0x1c5c660;
	Node0x1c5bd28 -> Node0x1c5c6d0;
	Node0x1c5c510 -> Node0x1c5c6d0;
	Node0x1c5a6e8 -> Node0x1c5c740;
	Node0x1c5c740 -> Node0x1c5c7b0;
	Node0x1c5b658 -> Node0x1c5c7b0;
	Node0x1c5c7b0 -> Node0x1c5c820;
	Node0x1c5bf60 -> Node0x1c5c820;
	Node0x1c5c820 -> Node0x1c5c890;
	Node0x1c5bfd0 -> Node0x1c5c890;
	Node0x1c5c890 -> Node0x1c5c900;
	Node0x1c5c120 -> Node0x1c5c900;
	Node0x1c5c900 -> Node0x1c5c970;
	Node0x1c5c200 -> Node0x1c5c970;
	Node0x1c5c970 -> Node0x1c5c9e0;
	Node0x1c5c350 -> Node0x1c5c9e0;
	Node0x1c5c9e0 -> Node0x1c5ca50;
	Node0x1c5c430 -> Node0x1c5ca50;
	Node0x1c5ca50 -> Node0x1c5cac0;
	Node0x1c5c4a0 -> Node0x1c5cac0;
	Node0x1c5cac0 -> Node0x1c5cb30;
	Node0x1c5c580 -> Node0x1c5cb30;
	Node0x1c5cb30 -> Node0x1c5cba0;
	Node0x1c5c6d0 -> Node0x1c5cba0;
	Node0x1c5cba0 -> Node0x1c5cc10;
	Node0x1c5c0b0 -> Node0x1c5cc10;
	Node0x1c5cc10 -> Node0x1c5cc80;
	Node0x1c5c2e0 -> Node0x1c5cc80;
	Node0x1c5cc80 -> Node0x1c5ccf0;
	Node0x1c5c660 -> Node0x1c5ccf0;
	Node0x1c5be80 -> Node0x1c5cd60;
	Node0x1c5ccf0 -> Node0x1c5cd60;
	Node0x1c5cd60 -> Node0x1bf98b8;
	Node0x1bf98b8 -> Node0x1c5cdf0;
	Node0x1c5a438 -> Node0x1c5d098;
	Node0x1c5a2c8 -> Node0x1c5d1f8;
	Node0x1c5a108 -> Node0x1c5d308;
	Node0x1c59bf8 -> Node0x1c5d418;
}
