digraph "DFG for'main' function" {
	Node0x246b7e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x246b868[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x246b8f8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x246b958[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x246bdd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x246d568[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x246d648[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x246d708[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x246d7b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x246da18[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x246dad8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x246ea48[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x246f0b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x246f1b0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x246f3b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x246f518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x246f628[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x246f6e8[shape=record, label="  ret i32 0"];
	Node0x246b7e8 -> Node0x246b868;
	Node0x246b868 -> Node0x246b8f8;
	Node0x246b8f8 -> Node0x246b958;
	Node0x246b958 -> Node0x246bdd8;
	Node0x246bdd8 -> Node0x246d568;
	Node0x246d568 -> Node0x246d648;
	Node0x246d648 -> Node0x246d708;
	Node0x246d708 -> Node0x246d7b8;
	Node0x246d7b8 -> Node0x246da18;
	Node0x246da18 -> Node0x246dad8;
	Node0x246dad8 -> Node0x246ea48;
	Node0x246ea48 -> Node0x246f0b8;
	Node0x246f0b8 -> Node0x246f1b0;
	Node0x246f1b0 -> Node0x246f3b8;
	Node0x246f3b8 -> Node0x246f518;
	Node0x246f518 -> Node0x246f628;
	Node0x246f628 -> Node0x246f6e8;
edge [color=red]
	Node0x246b7e8 -> Node0x246b958;
	Node0x246b958 -> Node0x246bdd8;
	Node0x246b868 -> Node0x246d568;
	Node0x246d568 -> Node0x246d648;
	Node0x246b8f8 -> Node0x246d708;
	Node0x246d708 -> Node0x246d7b8;
	Node0x246b7e8 -> Node0x246da18;
	Node0x246b868 -> Node0x246da18;
	Node0x246b8f8 -> Node0x246da18;
	Node0x246b7e8 -> Node0x246dad8;
	Node0x246b868 -> Node0x246ea48;
	Node0x246b8f8 -> Node0x246f0b8;
	Node0x246dad8 -> Node0x246f1b0;
	Node0x246ea48 -> Node0x246f1b0;
	Node0x246f0b8 -> Node0x246f1b0;
	Node0x246d708 -> Node0x246f3b8;
	Node0x246d568 -> Node0x246f518;
	Node0x246b958 -> Node0x246f628;
}
