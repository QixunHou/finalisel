digraph "DFG for'main' function" {
	Node0x106dad8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x106db58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x106dbe8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x106dc48[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x106e0c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x106e1a8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x106e2a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x106e368[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x106e418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1074fb8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1075078[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1075fe8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1076658[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1076750[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1076958[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1076ab8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1076bc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1076c88[shape=record, label="  ret i32 0"];
	Node0x106dad8 -> Node0x106db58;
	Node0x106db58 -> Node0x106dbe8;
	Node0x106dbe8 -> Node0x106dc48;
	Node0x106dc48 -> Node0x106e0c8;
	Node0x106e0c8 -> Node0x106e1a8;
	Node0x106e1a8 -> Node0x106e2a8;
	Node0x106e2a8 -> Node0x106e368;
	Node0x106e368 -> Node0x106e418;
	Node0x106e418 -> Node0x1074fb8;
	Node0x1074fb8 -> Node0x1075078;
	Node0x1075078 -> Node0x1075fe8;
	Node0x1075fe8 -> Node0x1076658;
	Node0x1076658 -> Node0x1076750;
	Node0x1076750 -> Node0x1076958;
	Node0x1076958 -> Node0x1076ab8;
	Node0x1076ab8 -> Node0x1076bc8;
	Node0x1076bc8 -> Node0x1076c88;
edge [color=red]
	Node0x106dad8 -> Node0x106dc48;
	Node0x106dc48 -> Node0x106e0c8;
	Node0x106db58 -> Node0x106e1a8;
	Node0x106e1a8 -> Node0x106e2a8;
	Node0x106dbe8 -> Node0x106e368;
	Node0x106e368 -> Node0x106e418;
	Node0x106dad8 -> Node0x1074fb8;
	Node0x106db58 -> Node0x1074fb8;
	Node0x106dbe8 -> Node0x1074fb8;
	Node0x106dad8 -> Node0x1075078;
	Node0x106db58 -> Node0x1075fe8;
	Node0x106dbe8 -> Node0x1076658;
	Node0x1075078 -> Node0x1076750;
	Node0x1075fe8 -> Node0x1076750;
	Node0x1076658 -> Node0x1076750;
	Node0x106e368 -> Node0x1076958;
	Node0x106e1a8 -> Node0x1076ab8;
	Node0x106dc48 -> Node0x1076bc8;
}
