digraph "DFG for'main' function" {
	Node0x1a7fdb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a7fe38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a7fec8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1a80328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a80408[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1a80528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a80760[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1a80818[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a81788[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a81e10[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1a81e80[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1a81ef0[shape=record, label="  %10 = mul i32 %9, -2"];
	Node0x1a81f60[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x1a81fd0[shape=record, label="  %12 = shl i32 %6, 1"];
	Node0x1a82040[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x1a820b0[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x1a82120[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1a82190[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x1a82200[shape=record, label="  %17 = and i32 %6, %8"];
	Node0x1a82270[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x1a822e0[shape=record, label="  %19 = shl i32 %14, 2"];
	Node0x1a82350[shape=record, label="  %20 = shl i32 %13, 1"];
	Node0x1a823c0[shape=record, label="  %21 = sub i32 %6, %9"];
	Node0x1a82430[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0x1a824a0[shape=record, label="  %23 = sub i32 2, %12"];
	Node0x1a82510[shape=record, label="  %24 = sub i32 %23, %7"];
	Node0x1a82580[shape=record, label="  %25 = add i32 %24, %8"];
	Node0x1a825f0[shape=record, label="  %26 = sub i32 %25, %11"];
	Node0x1a82660[shape=record, label="  %27 = sub i32 %26, %18"];
	Node0x1a826d0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x1a82740[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x1a827b0[shape=record, label="  %30 = add i32 %29, %16"];
	Node0x1a82820[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x1a82890[shape=record, label="  %32 = icmp eq i32 %10, %31"];
	Node0x1a209d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a82b30[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x1a82d88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a82ee8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a82fa8[shape=record, label="  ret i32 0"];
	Node0x1a7fdb8 -> Node0x1a7fe38;
	Node0x1a7fe38 -> Node0x1a7fec8;
	Node0x1a7fec8 -> Node0x1a80328;
	Node0x1a80328 -> Node0x1a80408;
	Node0x1a80408 -> Node0x1a80528;
	Node0x1a80528 -> Node0x1a80760;
	Node0x1a80760 -> Node0x1a80818;
	Node0x1a80818 -> Node0x1a81788;
	Node0x1a81788 -> Node0x1a81e10;
	Node0x1a81e10 -> Node0x1a81e80;
	Node0x1a81e80 -> Node0x1a81ef0;
	Node0x1a81ef0 -> Node0x1a81f60;
	Node0x1a81f60 -> Node0x1a81fd0;
	Node0x1a81fd0 -> Node0x1a82040;
	Node0x1a82040 -> Node0x1a820b0;
	Node0x1a820b0 -> Node0x1a82120;
	Node0x1a82120 -> Node0x1a82190;
	Node0x1a82190 -> Node0x1a82200;
	Node0x1a82200 -> Node0x1a82270;
	Node0x1a82270 -> Node0x1a822e0;
	Node0x1a822e0 -> Node0x1a82350;
	Node0x1a82350 -> Node0x1a823c0;
	Node0x1a823c0 -> Node0x1a82430;
	Node0x1a82430 -> Node0x1a824a0;
	Node0x1a824a0 -> Node0x1a82510;
	Node0x1a82510 -> Node0x1a82580;
	Node0x1a82580 -> Node0x1a825f0;
	Node0x1a825f0 -> Node0x1a82660;
	Node0x1a82660 -> Node0x1a826d0;
	Node0x1a826d0 -> Node0x1a82740;
	Node0x1a82740 -> Node0x1a827b0;
	Node0x1a827b0 -> Node0x1a82820;
	Node0x1a82820 -> Node0x1a82890;
	Node0x1a82890 -> Node0x1a209d8;
	Node0x1a209d8 -> Node0x1a82b30;
	Node0x1a82b30 -> Node0x1a82d88;
	Node0x1a82d88 -> Node0x1a82ee8;
	Node0x1a82ee8 -> Node0x1a82fa8;
edge [color=red]
	Node0x1a7fdb8 -> Node0x1a7fec8;
	Node0x1a7fec8 -> Node0x1a80328;
	Node0x1a7fe38 -> Node0x1a80408;
	Node0x1a80408 -> Node0x1a80528;
	Node0x1a7fdb8 -> Node0x1a80760;
	Node0x1a7fe38 -> Node0x1a80760;
	Node0x1a7fdb8 -> Node0x1a80818;
	Node0x1a7fe38 -> Node0x1a81788;
	Node0x1a81788 -> Node0x1a81e10;
	Node0x1a80818 -> Node0x1a81e80;
	Node0x1a81e10 -> Node0x1a81e80;
	Node0x1a81e80 -> Node0x1a81ef0;
	Node0x1a81788 -> Node0x1a81f60;
	Node0x1a80818 -> Node0x1a81f60;
	Node0x1a80818 -> Node0x1a81fd0;
	Node0x1a81788 -> Node0x1a82040;
	Node0x1a80818 -> Node0x1a82040;
	Node0x1a81788 -> Node0x1a820b0;
	Node0x1a80818 -> Node0x1a820b0;
	Node0x1a820b0 -> Node0x1a82120;
	Node0x1a82120 -> Node0x1a82190;
	Node0x1a80818 -> Node0x1a82200;
	Node0x1a81e10 -> Node0x1a82200;
	Node0x1a82200 -> Node0x1a82270;
	Node0x1a820b0 -> Node0x1a822e0;
	Node0x1a82040 -> Node0x1a82350;
	Node0x1a80818 -> Node0x1a823c0;
	Node0x1a81e80 -> Node0x1a823c0;
	Node0x1a823c0 -> Node0x1a82430;
	Node0x1a81fd0 -> Node0x1a824a0;
	Node0x1a824a0 -> Node0x1a82510;
	Node0x1a81788 -> Node0x1a82510;
	Node0x1a82510 -> Node0x1a82580;
	Node0x1a81e10 -> Node0x1a82580;
	Node0x1a82580 -> Node0x1a825f0;
	Node0x1a81f60 -> Node0x1a825f0;
	Node0x1a825f0 -> Node0x1a82660;
	Node0x1a82270 -> Node0x1a82660;
	Node0x1a82660 -> Node0x1a826d0;
	Node0x1a822e0 -> Node0x1a826d0;
	Node0x1a826d0 -> Node0x1a82740;
	Node0x1a82350 -> Node0x1a82740;
	Node0x1a82740 -> Node0x1a827b0;
	Node0x1a82190 -> Node0x1a827b0;
	Node0x1a827b0 -> Node0x1a82820;
	Node0x1a82430 -> Node0x1a82820;
	Node0x1a81ef0 -> Node0x1a82890;
	Node0x1a82820 -> Node0x1a82890;
	Node0x1a82890 -> Node0x1a209d8;
	Node0x1a209d8 -> Node0x1a82b30;
	Node0x1a80408 -> Node0x1a82d88;
	Node0x1a7fec8 -> Node0x1a82ee8;
}
