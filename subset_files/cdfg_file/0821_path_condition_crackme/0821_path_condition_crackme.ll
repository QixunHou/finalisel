; ModuleID = '../.././c_source_file/0821_path_condition_crackme.c'
source_filename = "../.././c_source_file/0821_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, %0
  %8 = xor i32 %2, %0
  %9 = xor i32 %8, -1
  %10 = or i32 %7, %9
  %11 = and i32 %5, %4
  %12 = or i32 %5, %3
  %13 = xor i32 %11, %12
  %14 = sub i32 %10, %13
  %15 = xor i32 %2, -1
  %16 = and i32 %15, %1
  %17 = xor i32 %16, -1
  %18 = and i32 %17, %0
  %19 = and i32 %2, %1
  %20 = xor i32 %19, -1
  %21 = and i32 %20, %0
  %22 = or i32 %1, %0
  %23 = xor i32 %2, %1
  %24 = xor i32 %23, -1
  %25 = and i32 %22, %24
  %26 = and i32 %19, %0
  %27 = xor i32 %23, %0
  %28 = xor i32 %26, %27
  %29 = xor i32 %0, -1
  %30 = or i32 %16, %29
  %31 = xor i32 %1, -1
  %32 = and i32 %31, %2
  %33 = and i32 %32, %29
  %34 = or i32 %23, %29
  %35 = xor i32 %33, %34
  %36 = and i32 %31, %0
  %37 = xor i32 %36, %17
  %38 = and i32 %1, %0
  %39 = or i32 %2, %1
  %40 = xor i32 %39, -1
  %41 = or i32 %38, %40
  %42 = shl i32 %41, 1
  %43 = xor i32 %22, -1
  %44 = or i32 %23, %43
  %45 = or i32 %15, %0
  %46 = xor i32 %45, -1
  %47 = xor i32 %7, -1
  %48 = or i32 %46, %47
  %49 = or i32 %31, %2
  %50 = and i32 %49, %0
  %51 = xor i32 %50, -1
  %52 = xor i32 %33, %51
  %53 = xor i32 %34, -1
  %54 = or i32 %33, %53
  %55 = xor i32 %16, %0
  %56 = and i32 %23, %29
  %57 = or i32 %40, %0
  %58 = shl i32 %57, 1
  %59 = or i32 %33, %50
  %60 = xor i32 %38, -1
  %61 = and i32 %15, %60
  %62 = and i32 %2, %0
  %63 = xor i32 %62, -1
  %64 = xor i32 %36, -1
  %65 = and i32 %15, %64
  %66 = shl i32 %65, 2
  %67 = and i32 %9, %64
  %68 = or i32 %24, %0
  %69 = or i32 %38, %9
  %70 = or i32 %2, %0
  %71 = xor i32 %70, %1
  %72 = shl i32 %71, 1
  %73 = and i32 %32, %0
  %74 = xor i32 %49, %0
  %75 = xor i32 %74, 2147483647
  %76 = xor i32 %75, %73
  %77 = or i32 %24, %43
  %78 = and i32 %8, %7
  %79 = xor i32 %45, %38
  %80 = and i32 %22, %9
  %81 = or i32 %36, %2
  %82 = xor i32 %64, %2
  %83 = xor i32 %39, %38
  %84 = and i32 %23, %22
  %85 = or i32 %15, %1
  %86 = xor i32 %85, -1
  %87 = shl i32 %86, 1
  %88 = or i32 %9, %43
  %89 = and i32 %23, %60
  %90 = or i32 %86, %29
  %91 = add i32 %19, 1
  %92 = xor i32 %62, %39
  %93 = or i32 %15, %43
  %94 = xor i32 %60, %2
  %95 = xor i32 %39, %0
  %96 = or i32 %26, %95
  %97 = xor i32 %36, %20
  %98 = xor i32 %70, -1
  %99 = or i32 %38, %98
  %100 = and i32 %24, %60
  %101 = and i32 %15, %0
  %102 = or i32 %101, %7
  %103 = and i32 %45, %7
  %104 = or i32 %8, %43
  %105 = or i32 %8, %7
  %106 = shl i32 %105, 1
  %107 = xor i32 %85, %38
  %108 = or i32 %40, %29
  %109 = or i32 %101, %47
  %110 = xor i32 %45, %1
  %111 = xor i32 %46, %1
  %112 = shl i32 %70, 1
  %113 = xor i32 %101, -1
  %114 = and i32 %7, %113
  %115 = shl i32 %114, 1
  %116 = or i32 %36, %24
  %117 = xor i32 %26, -1
  %118 = xor i32 %56, %117
  %119 = xor i32 %38, %2
  %120 = or i32 %7, %46
  %121 = or i32 %31, %0
  %122 = and i32 %121, %15
  %123 = or i32 %39, %0
  %124 = or i32 %19, %0
  %125 = and i32 %8, %47
  %126 = xor i32 %121, -1
  %127 = or i32 %8, %126
  %128 = xor i32 %126, %2
  %129 = and i32 %45, %31
  %130 = shl i32 %129, 1
  %131 = or i32 %23, %0
  %132 = xor i32 %131, -1
  %133 = or i32 %73, %132
  %134 = or i32 %23, %126
  %135 = and i32 %121, %9
  %136 = or i32 %36, %9
  %137 = xor i32 %62, %22
  %138 = xor i32 %98, %1
  %139 = and i32 %8, %31
  %140 = shl i32 %15, 1
  %141 = and i32 %85, %29
  %142 = or i32 %98, %31
  %143 = xor i32 %36, %2
  %144 = xor i32 %20, %0
  %145 = and i32 %8, %60
  %146 = or i32 %15, %47
  %147 = shl i32 %146, 2
  %148 = and i32 %23, %0
  %149 = and i32 %63, %47
  %150 = or i32 %38, %86
  %151 = or i32 %98, %1
  %152 = or i32 %38, %24
  %153 = or i32 %7, %98
  %154 = and i32 %70, %1
  %155 = or i32 %17, %0
  %156 = or i32 %86, %0
  %157 = or i32 %19, %29
  %158 = and i32 %8, %22
  %159 = shl i32 %158, 2
  %160 = and i32 %70, %47
  %161 = shl i32 %160, 1
  %162 = or i32 %62, %7
  %163 = xor i32 %62, %121
  %164 = or i32 %73, %27
  %165 = or i32 %7, %2
  %166 = or i32 %9, %47
  %167 = add i32 %7, 1
  %168 = or i32 %7, %15
  %169 = or i32 %26, %56
  %170 = xor i32 %22, %2
  %171 = or i32 %46, %1
  %172 = shl i32 %171, 1
  %173 = and i32 %22, %2
  %174 = or i32 %39, %29
  %175 = shl i32 %174, 1
  %176 = or i32 %23, %36
  %177 = and i32 %49, %29
  %178 = or i32 %73, %177
  %179 = shl i32 %178, 1
  %180 = or i32 %9, %31
  %181 = and i32 %70, %7
  %182 = or i32 %62, %47
  %183 = add i32 %45, 1
  %184 = xor i32 %121, %2
  %185 = xor i32 %17, %0
  %186 = and i32 %113, %47
  %187 = and i32 %19, %29
  %188 = xor i32 %187, -1
  %189 = xor i32 %148, %188
  %190 = and i32 %64, %2
  %191 = xor i32 %27, -1
  %192 = or i32 %26, %191
  %193 = and i32 %17, %29
  %194 = or i32 %101, %1
  %195 = shl i32 %194, 1
  %196 = or i32 %73, %74
  %197 = or i32 %62, %126
  %198 = and i32 %39, %29
  %199 = xor i32 %198, %117
  %200 = or i32 %24, %126
  %201 = or i32 %43, %2
  %202 = and i32 %24, %0
  %203 = and i32 %9, %1
  %204 = or i32 %38, %46
  %205 = and i32 %39, %0
  %206 = or i32 %187, %205
  %207 = or i32 %26, %198
  %208 = xor i32 %101, %20
  %209 = or i32 %98, %47
  %210 = or i32 %8, %36
  %211 = xor i32 %113, %1
  %212 = or i32 %62, %16
  %213 = shl i32 %212, 1
  %214 = add i32 %39, 1
  %215 = and i32 %47, %2
  %216 = xor i32 %70, %38
  %217 = and i32 %8, %64
  %218 = or i32 %101, %86
  %219 = or i32 %8, %47
  %220 = or i32 %8, %38
  %221 = and i32 %85, %0
  %222 = and i32 %22, %15
  %223 = or i32 %101, %31
  %224 = and i32 %113, %31
  %225 = and i32 %70, %31
  %226 = xor i32 %205, %188
  %227 = or i32 %46, %31
  %228 = or i32 %9, %126
  %229 = or i32 %38, %2
  %230 = xor i32 %73, %191
  %231 = or i32 %36, %15
  %232 = and i32 %24, %29
  %233 = and i32 %121, %2
  %234 = xor i32 %86, %0
  %235 = and i32 %45, %1
  %236 = or i32 %16, %0
  %237 = and i32 %113, %1
  %238 = xor i32 %24, %0
  %239 = or i32 %17, %29
  %240 = or i32 %126, %2
  %241 = xor i32 %43, %2
  %242 = and i32 %121, %24
  %243 = xor i32 %62, %17
  %244 = and i32 %9, %60
  %245 = or i32 %24, %29
  %246 = shl i32 %245, 1
  %247 = or i32 %19, %36
  %248 = xor i32 %63, %1
  %249 = or i32 %47, %2
  %250 = and i32 %7, %2
  %251 = xor i32 %85, %0
  %252 = shl i32 %251, 1
  %253 = shl i32 %22, 1
  %254 = or i32 %85, %29
  %255 = and i32 %8, %121
  %256 = xor i32 %73, %131
  %257 = or i32 %62, %31
  %258 = xor i32 %62, %1
  %259 = and i32 %7, %9
  %260 = and i32 %9, %47
  %261 = and i32 %63, %1
  %262 = and i32 %15, %47
  %263 = or i32 %62, %43
  %264 = and i32 %7, %15
  %265 = xor i32 %40, %0
  %266 = and i32 %40, %29
  %267 = and i32 %16, %29
  %268 = mul i32 %267, -21
  %269 = and i32 %40, %0
  %270 = and i32 %86, %29
  %271 = mul i32 %187, -26
  %272 = and i32 %86, %0
  %273 = mul i32 %26, -14
  %274 = and i32 %4, %3
  %275 = xor i32 %12, -1
  %276 = or i32 %274, %275
  %277 = or i32 %274, %5
  %278 = xor i32 %5, -1
  %279 = or i32 %278, %4
  %280 = xor i32 %279, -1
  %281 = xor i32 %4, %3
  %282 = xor i32 %281, -1
  %283 = or i32 %280, %282
  %284 = and i32 %278, %3
  %285 = xor i32 %3, -1
  %286 = or i32 %285, %4
  %287 = xor i32 %286, -1
  %288 = xor i32 %287, %5
  %289 = shl i32 %288, 1
  %290 = xor i32 %5, %4
  %291 = or i32 %290, %285
  %292 = and i32 %278, %4
  %293 = xor i32 %292, -1
  %294 = and i32 %293, %282
  %295 = and i32 %279, %3
  %296 = or i32 %292, %3
  %297 = and i32 %285, %4
  %298 = xor i32 %297, %5
  %299 = and i32 %286, %278
  %300 = and i32 %293, %285
  %301 = xor i32 %11, -1
  %302 = and i32 %301, %3
  %303 = xor i32 %12, %274
  %304 = or i32 %4, %3
  %305 = xor i32 %304, -1
  %306 = add i32 %304, 1
  %307 = xor i32 %297, -1
  %308 = and i32 %278, %307
  %309 = xor i32 %304, %5
  %310 = xor i32 %290, -1
  %311 = or i32 %274, %310
  %312 = or i32 %290, %297
  %313 = xor i32 %11, %286
  %314 = xor i32 %4, -1
  %315 = and i32 %304, %5
  %316 = or i32 %278, %3
  %317 = xor i32 %316, -1
  %318 = add i32 %316, 1
  %319 = xor i32 %274, -1
  %320 = xor i32 %5, %3
  %321 = xor i32 %320, -1
  %322 = and i32 %321, %319
  %323 = or i32 %5, %4
  %324 = and i32 %323, %281
  %325 = and i32 %321, %307
  %326 = or i32 %274, %278
  %327 = or i32 %320, %4
  %328 = or i32 %284, %297
  %329 = and i32 %320, %314
  %330 = and i32 %5, %3
  %331 = xor i32 %330, -1
  %332 = or i32 %331, %314
  %333 = xor i32 %323, -1
  %334 = or i32 %333, %285
  %335 = and i32 %314, %285
  %336 = and i32 %335, %5
  %337 = or i32 %320, %314
  %338 = xor i32 %337, 2147483647
  %339 = or i32 %338, %336
  %340 = and i32 %330, %314
  %341 = and i32 %12, %4
  %342 = or i32 %340, %341
  %343 = and i32 %279, %281
  %344 = add i32 %12, 1
  %345 = add i32 %4, 1
  %346 = or i32 %321, %4
  %347 = or i32 %274, %321
  %348 = or i32 %11, %284
  %349 = or i32 %278, %305
  %350 = and i32 %281, %293
  %351 = and i32 %330, %4
  %352 = xor i32 %12, %314
  %353 = xor i32 %352, %351
  %354 = and i32 %321, %314
  %355 = or i32 %290, %282
  %356 = shl i32 %355, 1
  %357 = and i32 %304, %321
  %358 = and i32 %310, %307
  %359 = or i32 %316, %4
  %360 = and i32 %290, %307
  %361 = or i32 %285, %5
  %362 = and i32 %361, %4
  %363 = xor i32 %362, 2147483647
  %364 = xor i32 %363, %336
  %365 = shl i32 %364, 1
  %366 = and i32 %301, %282
  %367 = or i32 %287, %5
  %368 = or i32 %275, %314
  %369 = and i32 %304, %278
  %370 = xor i32 %305, %5
  %371 = or i32 %330, %4
  %372 = and i32 %279, %285
  %373 = shl i32 %372, 1
  %374 = xor i32 %336, %337
  %375 = or i32 %321, %287
  %376 = and i32 %290, %3
  %377 = and i32 %316, %4
  %378 = or i32 %310, %305
  %379 = shl i32 %378, 2
  %380 = or i32 %297, %278
  %381 = or i32 %284, %314
  %382 = xor i32 %11, %304
  %383 = and i32 %323, %282
  %384 = xor i32 %316, %274
  %385 = and i32 %290, %285
  %386 = or i32 %320, %274
  %387 = xor i32 %292, %316
  %388 = or i32 %290, %287
  %389 = xor i32 %284, -1
  %390 = or i32 %389, %4
  %391 = xor i32 %11, %3
  %392 = or i32 %274, %333
  %393 = and i32 %278, %282
  %394 = or i32 %330, %297
  %395 = xor i32 %333, %3
  %396 = and i32 %275, %314
  %397 = and i32 %284, %314
  %398 = and i32 %275, %4
  %399 = and i32 %284, %4
  %400 = mul i32 %399, -15
  %401 = and i32 %317, %314
  %402 = mul i32 %401, 7
  %403 = add i32 %134, %269
  %404 = sub i32 %403, %226
  %405 = add i32 %404, %52
  %406 = add i32 %405, %35
  %407 = add i32 %406, %326
  %408 = add i32 %407, %396
  %409 = sub i32 %408, %397
  %410 = sub i32 %409, %371
  %411 = mul i32 %410, 3
  %412 = sub i32 %255, %176
  %413 = add i32 %412, %104
  %414 = sub i32 %413, %55
  %415 = add i32 %414, %306
  %416 = mul i32 %415, 5
  %417 = add i32 %142, %7
  %418 = add i32 %417, %360
  %419 = shl i32 %418, 2
  %420 = add i32 %351, %398
  %421 = mul i32 %420, -6
  %422 = add i32 %270, %266
  %423 = mul i32 %422, -18
  %424 = add i32 %240, -1
  %425 = add i32 %424, %233
  %426 = add i32 %425, %184
  %427 = add i32 %426, %113
  %428 = add i32 %427, %45
  %429 = add i32 %428, %63
  %430 = add i32 %429, %272
  %431 = add i32 %430, %205
  %432 = add i32 %431, %257
  %433 = add i32 %432, %254
  %434 = add i32 %433, %225
  %435 = add i32 %434, %219
  %436 = add i32 %435, %209
  %437 = add i32 %436, %193
  %438 = add i32 %437, %151
  %439 = add i32 %438, %120
  %440 = add i32 %439, %109
  %441 = add i32 %440, %103
  %442 = add i32 %441, %92
  %443 = add i32 %442, %84
  %444 = add i32 %443, %287
  %445 = add i32 %444, %169
  %446 = add i32 %445, %380
  %447 = add i32 %446, %76
  %448 = add i32 %447, %385
  %449 = add i32 %448, %375
  %450 = add i32 %449, %366
  %451 = add i32 %450, %311
  %452 = add i32 %451, %276
  %453 = add i32 %452, %339
  %454 = shl i32 %453, 1
  %455 = sub i32 %29, %0
  %456 = add i32 %455, %64
  %457 = add i32 %456, %60
  %458 = sub i32 %457, %36
  %459 = add i32 %458, %2
  %460 = add i32 %459, %167
  %461 = sub i32 %460, %38
  %462 = add i32 %461, %43
  %463 = add i32 %462, %126
  %464 = add i32 %463, %61
  %465 = sub i32 %464, %81
  %466 = add i32 %465, %82
  %467 = add i32 %466, %91
  %468 = add i32 %467, %93
  %469 = add i32 %468, %94
  %470 = sub i32 %469, %119
  %471 = sub i32 %470, %122
  %472 = sub i32 %471, %128
  %473 = sub i32 %472, %140
  %474 = sub i32 %473, %143
  %475 = add i32 %474, %17
  %476 = add i32 %475, %62
  %477 = add i32 %476, %165
  %478 = add i32 %477, %168
  %479 = add i32 %478, %170
  %480 = add i32 %479, %173
  %481 = add i32 %480, %183
  %482 = sub i32 %481, %190
  %483 = sub i32 %482, %201
  %484 = add i32 %483, %214
  %485 = sub i32 %484, %215
  %486 = add i32 %485, 1
  %487 = add i32 %486, %19
  %488 = sub i32 %487, %222
  %489 = sub i32 %488, %16
  %490 = add i32 %489, %229
  %491 = add i32 %490, %231
  %492 = sub i32 %491, %241
  %493 = add i32 %492, %98
  %494 = sub i32 %493, %39
  %495 = add i32 %494, %249
  %496 = sub i32 %495, %250
  %497 = sub i32 %496, %253
  %498 = add i32 %497, %262
  %499 = add i32 %498, %264
  %500 = sub i32 %499, %21
  %501 = add i32 %500, %18
  %502 = add i32 %501, %25
  %503 = add i32 %502, %30
  %504 = sub i32 %503, %37
  %505 = sub i32 %504, %44
  %506 = add i32 %505, %48
  %507 = add i32 %506, %56
  %508 = sub i32 %507, %66
  %509 = add i32 %508, %67
  %510 = sub i32 %509, %68
  %511 = add i32 %510, %69
  %512 = add i32 %511, %77
  %513 = sub i32 %512, %78
  %514 = sub i32 %513, %79
  %515 = add i32 %514, %80
  %516 = sub i32 %515, %83
  %517 = sub i32 %516, %87
  %518 = sub i32 %517, %34
  %519 = add i32 %518, %88
  %520 = add i32 %519, %89
  %521 = sub i32 %520, %90
  %522 = sub i32 %521, %97
  %523 = add i32 %522, %99
  %524 = add i32 %523, %100
  %525 = sub i32 %524, %102
  %526 = sub i32 %525, %107
  %527 = add i32 %526, %108
  %528 = sub i32 %527, %110
  %529 = add i32 %528, %95
  %530 = add i32 %529, %111
  %531 = sub i32 %530, %112
  %532 = add i32 %531, %116
  %533 = add i32 %532, %123
  %534 = add i32 %533, %124
  %535 = add i32 %534, %125
  %536 = sub i32 %535, %127
  %537 = add i32 %536, %135
  %538 = sub i32 %537, %136
  %539 = add i32 %538, %137
  %540 = add i32 %539, %138
  %541 = sub i32 %540, %139
  %542 = add i32 %541, %141
  %543 = add i32 %542, %144
  %544 = sub i32 %543, %145
  %545 = sub i32 %544, %147
  %546 = sub i32 %545, %148
  %547 = sub i32 %546, %149
  %548 = sub i32 %547, %150
  %549 = sub i32 %548, %152
  %550 = sub i32 %549, %153
  %551 = add i32 %550, %154
  %552 = add i32 %551, %155
  %553 = sub i32 %552, %156
  %554 = add i32 %553, %157
  %555 = sub i32 %554, %162
  %556 = sub i32 %555, %163
  %557 = add i32 %556, %166
  %558 = sub i32 %557, %180
  %559 = add i32 %558, %181
  %560 = add i32 %559, %182
  %561 = sub i32 %560, %185
  %562 = sub i32 %561, %186
  %563 = add i32 %562, %197
  %564 = add i32 %563, %200
  %565 = sub i32 %564, %202
  %566 = add i32 %565, %203
  %567 = add i32 %566, %204
  %568 = add i32 %567, %208
  %569 = sub i32 %568, %210
  %570 = sub i32 %569, %211
  %571 = add i32 %570, %216
  %572 = add i32 %571, %217
  %573 = sub i32 %572, %218
  %574 = add i32 %573, %220
  %575 = sub i32 %574, %221
  %576 = sub i32 %575, %223
  %577 = sub i32 %576, %198
  %578 = sub i32 %577, %224
  %579 = sub i32 %578, %227
  %580 = add i32 %579, %228
  %581 = add i32 %580, %232
  %582 = add i32 %581, %234
  %583 = sub i32 %582, %235
  %584 = add i32 %583, %236
  %585 = add i32 %584, %237
  %586 = sub i32 %585, %238
  %587 = add i32 %586, %27
  %588 = add i32 %587, %239
  %589 = sub i32 %588, %242
  %590 = add i32 %589, %243
  %591 = add i32 %590, %244
  %592 = add i32 %591, %247
  %593 = sub i32 %592, %248
  %594 = sub i32 %593, %258
  %595 = add i32 %594, %259
  %596 = sub i32 %595, %260
  %597 = sub i32 %596, %261
  %598 = sub i32 %597, %263
  %599 = sub i32 %598, %265
  %600 = add i32 %599, %345
  %601 = sub i32 %600, %28
  %602 = sub i32 %601, %42
  %603 = add i32 %602, %54
  %604 = sub i32 %603, %58
  %605 = sub i32 %604, %59
  %606 = sub i32 %605, %72
  %607 = sub i32 %606, %96
  %608 = sub i32 %607, %106
  %609 = sub i32 %608, %115
  %610 = sub i32 %609, %118
  %611 = sub i32 %610, %130
  %612 = add i32 %611, %133
  %613 = sub i32 %612, %159
  %614 = sub i32 %613, %161
  %615 = add i32 %614, %164
  %616 = sub i32 %615, %172
  %617 = sub i32 %616, %175
  %618 = add i32 %617, %189
  %619 = sub i32 %618, %192
  %620 = sub i32 %619, %195
  %621 = add i32 %620, %196
  %622 = sub i32 %621, %199
  %623 = add i32 %622, %206
  %624 = sub i32 %623, %207
  %625 = sub i32 %624, %213
  %626 = add i32 %625, %230
  %627 = sub i32 %626, %246
  %628 = sub i32 %627, %252
  %629 = add i32 %628, %256
  %630 = add i32 %629, %268
  %631 = add i32 %630, %271
  %632 = add i32 %631, %273
  %633 = sub i32 %632, %5
  %634 = add i32 %633, %274
  %635 = sub i32 %634, %281
  %636 = sub i32 %635, %179
  %637 = add i32 %636, %277
  %638 = add i32 %637, %284
  %639 = sub i32 %638, %298
  %640 = add i32 %639, %299
  %641 = sub i32 %640, %308
  %642 = sub i32 %641, %309
  %643 = add i32 %642, %12
  %644 = sub i32 %643, %315
  %645 = add i32 %644, %318
  %646 = add i32 %645, %344
  %647 = add i32 %646, %349
  %648 = add i32 %647, %280
  %649 = add i32 %648, %367
  %650 = sub i32 %649, %369
  %651 = add i32 %650, %370
  %652 = add i32 %651, %320
  %653 = sub i32 %652, %393
  %654 = add i32 %653, %423
  %655 = sub i32 %654, %283
  %656 = sub i32 %655, %289
  %657 = add i32 %656, %291
  %658 = sub i32 %657, %294
  %659 = add i32 %658, %295
  %660 = add i32 %659, %296
  %661 = add i32 %660, %300
  %662 = sub i32 %661, %302
  %663 = sub i32 %662, %303
  %664 = sub i32 %663, %312
  %665 = add i32 %664, %313
  %666 = sub i32 %665, %322
  %667 = add i32 %666, %324
  %668 = add i32 %667, %325
  %669 = add i32 %668, %327
  %670 = add i32 %669, %328
  %671 = sub i32 %670, %329
  %672 = sub i32 %671, %332
  %673 = sub i32 %672, %334
  %674 = add i32 %673, %343
  %675 = sub i32 %674, %346
  %676 = add i32 %675, %347
  %677 = sub i32 %676, %348
  %678 = add i32 %677, %350
  %679 = sub i32 %678, %354
  %680 = sub i32 %679, %357
  %681 = sub i32 %680, %358
  %682 = add i32 %681, %359
  %683 = sub i32 %682, %368
  %684 = add i32 %683, %376
  %685 = add i32 %684, %377
  %686 = sub i32 %685, %381
  %687 = sub i32 %686, %382
  %688 = sub i32 %687, %383
  %689 = add i32 %688, %384
  %690 = add i32 %689, %386
  %691 = add i32 %690, %387
  %692 = sub i32 %691, %388
  %693 = add i32 %692, %390
  %694 = sub i32 %693, %391
  %695 = add i32 %694, %392
  %696 = add i32 %695, %394
  %697 = sub i32 %696, %395
  %698 = add i32 %697, %342
  %699 = add i32 %698, %353
  %700 = sub i32 %699, %356
  %701 = sub i32 %700, %373
  %702 = add i32 %701, %374
  %703 = sub i32 %702, %379
  %704 = add i32 %703, %400
  %705 = add i32 %704, %402
  %706 = add i32 %705, %421
  %707 = sub i32 %706, %365
  %708 = add i32 %707, %416
  %709 = add i32 %708, %419
  %710 = add i32 %709, %411
  %711 = add i32 %710, %454
  %712 = icmp eq i32 %14, %711
  %713 = select i1 %712, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %714 = tail call i32 @puts(i8* nonnull dereferenceable(1) %713)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
