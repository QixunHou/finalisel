digraph "DFG for'main' function" {
	Node0x23a7a68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23a7ae8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23a7b78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23a7bd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x23a7c88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x23a80b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23a8198[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x23a8298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23a8358[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x23a8408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x23a84c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x23a8578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x23a2750[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x23a8778[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23a96e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23a9d58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x23a9db8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x23a9ec8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x23aa128[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x23aa288[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x23aa398[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23aa4a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23aa568[shape=record, label="  ret i32 0"];
	Node0x23a7a68 -> Node0x23a7ae8;
	Node0x23a7ae8 -> Node0x23a7b78;
	Node0x23a7b78 -> Node0x23a7bd8;
	Node0x23a7bd8 -> Node0x23a7c88;
	Node0x23a7c88 -> Node0x23a80b8;
	Node0x23a80b8 -> Node0x23a8198;
	Node0x23a8198 -> Node0x23a8298;
	Node0x23a8298 -> Node0x23a8358;
	Node0x23a8358 -> Node0x23a8408;
	Node0x23a8408 -> Node0x23a84c8;
	Node0x23a84c8 -> Node0x23a8578;
	Node0x23a8578 -> Node0x23a2750;
	Node0x23a2750 -> Node0x23a8778;
	Node0x23a8778 -> Node0x23a96e8;
	Node0x23a96e8 -> Node0x23a9d58;
	Node0x23a9d58 -> Node0x23a9db8;
	Node0x23a9db8 -> Node0x23a9ec8;
	Node0x23a9ec8 -> Node0x23aa128;
	Node0x23aa128 -> Node0x23aa288;
	Node0x23aa288 -> Node0x23aa398;
	Node0x23aa398 -> Node0x23aa4a8;
	Node0x23aa4a8 -> Node0x23aa568;
edge [color=red]
	Node0x23a7a68 -> Node0x23a7c88;
	Node0x23a7c88 -> Node0x23a80b8;
	Node0x23a7ae8 -> Node0x23a8198;
	Node0x23a8198 -> Node0x23a8298;
	Node0x23a7b78 -> Node0x23a8358;
	Node0x23a8358 -> Node0x23a8408;
	Node0x23a7bd8 -> Node0x23a84c8;
	Node0x23a84c8 -> Node0x23a8578;
	Node0x23a7a68 -> Node0x23a2750;
	Node0x23a7ae8 -> Node0x23a2750;
	Node0x23a7b78 -> Node0x23a2750;
	Node0x23a7bd8 -> Node0x23a2750;
	Node0x23a7a68 -> Node0x23a8778;
	Node0x23a7ae8 -> Node0x23a96e8;
	Node0x23a7b78 -> Node0x23a9d58;
	Node0x23a7bd8 -> Node0x23a9db8;
	Node0x23a8778 -> Node0x23a9ec8;
	Node0x23a96e8 -> Node0x23a9ec8;
	Node0x23a9d58 -> Node0x23a9ec8;
	Node0x23a9db8 -> Node0x23a9ec8;
	Node0x23a84c8 -> Node0x23aa128;
	Node0x23a8358 -> Node0x23aa288;
	Node0x23a8198 -> Node0x23aa398;
	Node0x23a7c88 -> Node0x23aa4a8;
}
