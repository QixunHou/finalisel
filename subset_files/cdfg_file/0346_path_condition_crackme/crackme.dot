digraph "DFG for'crackme' function" {
	Node0xa86d20[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xa86d90[shape=record, label="  %6 = or i32 %5, %1"];
	Node0xa86e00[shape=record, label="  %7 = xor i32 %2, %1"];
	Node0xa86e70[shape=record, label="  %8 = and i32 %3, %0"];
	Node0xa86f10[shape=record, label="  %9 = sub i32 1, %6"];
	Node0xa86f80[shape=record, label="  %10 = add i32 %9, %7"];
	Node0xa86ff0[shape=record, label="  %11 = add i32 %10, %8"];
	Node0xa87060[shape=record, label="  %12 = add i32 %2, 1"];
	Node0xa870d0[shape=record, label="  %13 = or i32 %2, %1"];
	Node0xa87140[shape=record, label="  %14 = and i32 %5, %1"];
	Node0xa871b0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0xa87250[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0xa872c0[shape=record, label="  %17 = xor i32 %13, -1"];
	Node0xa87330[shape=record, label="  %18 = xor i32 %6, -1"];
	Node0xa873a0[shape=record, label="  %19 = xor i32 %0, -1"];
	Node0xa87410[shape=record, label="  %20 = or i32 %19, %3"];
	Node0xa87480[shape=record, label="  %21 = shl i32 %3, 1"];
	Node0xa874f0[shape=record, label="  %22 = or i32 %3, %0"];
	Node0xa87560[shape=record, label="  %23 = shl i32 %19, 1"];
	Node0xa875d0[shape=record, label="  %24 = xor i32 %19, %3"];
	Node0xa87640[shape=record, label="  %25 = add i32 %22, 1"];
	Node0xa876b0[shape=record, label="  %26 = xor i32 %20, -1"];
	Node0xa87750[shape=record, label="  %27 = mul i32 %26, -6"];
	Node0xa877c0[shape=record, label="  %28 = and i32 %19, %3"];
	Node0xa87860[shape=record, label="  %29 = mul i32 %28, -3"];
	Node0xa878d0[shape=record, label="  %30 = add i32 %18, %1"];
	Node0xa87940[shape=record, label="  %31 = add i32 %30, %17"];
	Node0xa879b0[shape=record, label="  %32 = add i32 %31, %25"];
	Node0xa87c30[shape=record, label="  %33 = sub i32 %32, %8"];
	Node0xa87cd0[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0xa87d40[shape=record, label="  %35 = xor i32 %1, -1"];
	Node0xa87db0[shape=record, label="  %36 = sub i32 %35, %23"];
	Node0xa87e20[shape=record, label="  %37 = add i32 %36, %12"];
	Node0xa87e90[shape=record, label="  %38 = add i32 %37, %2"];
	Node0xa87f00[shape=record, label="  %39 = sub i32 %38, %13"];
	Node0xa87f70[shape=record, label="  %40 = add i32 %39, %7"];
	Node0xa87fe0[shape=record, label="  %41 = add i32 %40, %20"];
	Node0xa88050[shape=record, label="  %42 = sub i32 %41, %21"];
	Node0xa880c0[shape=record, label="  %43 = add i32 %42, %22"];
	Node0xa88130[shape=record, label="  %44 = add i32 %43, %24"];
	Node0xa881a0[shape=record, label="  %45 = sub i32 %44, %16"];
	Node0xa88210[shape=record, label="  %46 = add i32 %45, %27"];
	Node0xa88280[shape=record, label="  %47 = add i32 %46, %29"];
	Node0xa882f0[shape=record, label="  %48 = add i32 %47, %34"];
	Node0xa88360[shape=record, label="  %49 = icmp eq i32 %11, %48"];
	Node0xa27268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa88800[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0xa88850[shape=record, label="  ret void"];
	Node0xa86d20 -> Node0xa86d90;
	Node0xa86d90 -> Node0xa86e00;
	Node0xa86e00 -> Node0xa86e70;
	Node0xa86e70 -> Node0xa86f10;
	Node0xa86f10 -> Node0xa86f80;
	Node0xa86f80 -> Node0xa86ff0;
	Node0xa86ff0 -> Node0xa87060;
	Node0xa87060 -> Node0xa870d0;
	Node0xa870d0 -> Node0xa87140;
	Node0xa87140 -> Node0xa871b0;
	Node0xa871b0 -> Node0xa87250;
	Node0xa87250 -> Node0xa872c0;
	Node0xa872c0 -> Node0xa87330;
	Node0xa87330 -> Node0xa873a0;
	Node0xa873a0 -> Node0xa87410;
	Node0xa87410 -> Node0xa87480;
	Node0xa87480 -> Node0xa874f0;
	Node0xa874f0 -> Node0xa87560;
	Node0xa87560 -> Node0xa875d0;
	Node0xa875d0 -> Node0xa87640;
	Node0xa87640 -> Node0xa876b0;
	Node0xa876b0 -> Node0xa87750;
	Node0xa87750 -> Node0xa877c0;
	Node0xa877c0 -> Node0xa87860;
	Node0xa87860 -> Node0xa878d0;
	Node0xa878d0 -> Node0xa87940;
	Node0xa87940 -> Node0xa879b0;
	Node0xa879b0 -> Node0xa87c30;
	Node0xa87c30 -> Node0xa87cd0;
	Node0xa87cd0 -> Node0xa87d40;
	Node0xa87d40 -> Node0xa87db0;
	Node0xa87db0 -> Node0xa87e20;
	Node0xa87e20 -> Node0xa87e90;
	Node0xa87e90 -> Node0xa87f00;
	Node0xa87f00 -> Node0xa87f70;
	Node0xa87f70 -> Node0xa87fe0;
	Node0xa87fe0 -> Node0xa88050;
	Node0xa88050 -> Node0xa880c0;
	Node0xa880c0 -> Node0xa88130;
	Node0xa88130 -> Node0xa881a0;
	Node0xa881a0 -> Node0xa88210;
	Node0xa88210 -> Node0xa88280;
	Node0xa88280 -> Node0xa882f0;
	Node0xa882f0 -> Node0xa88360;
	Node0xa88360 -> Node0xa27268;
	Node0xa27268 -> Node0xa88800;
	Node0xa88800 -> Node0xa88850;
edge [color=red]
	Node0xa86d20 -> Node0xa86d90;
	Node0xa86d90 -> Node0xa86f10;
	Node0xa86f10 -> Node0xa86f80;
	Node0xa86e00 -> Node0xa86f80;
	Node0xa86f80 -> Node0xa86ff0;
	Node0xa86e70 -> Node0xa86ff0;
	Node0xa86d20 -> Node0xa87140;
	Node0xa87140 -> Node0xa871b0;
	Node0xa871b0 -> Node0xa87250;
	Node0xa870d0 -> Node0xa872c0;
	Node0xa86d90 -> Node0xa87330;
	Node0xa873a0 -> Node0xa87410;
	Node0xa873a0 -> Node0xa87560;
	Node0xa873a0 -> Node0xa875d0;
	Node0xa874f0 -> Node0xa87640;
	Node0xa87410 -> Node0xa876b0;
	Node0xa876b0 -> Node0xa87750;
	Node0xa873a0 -> Node0xa877c0;
	Node0xa877c0 -> Node0xa87860;
	Node0xa87330 -> Node0xa878d0;
	Node0xa878d0 -> Node0xa87940;
	Node0xa872c0 -> Node0xa87940;
	Node0xa87940 -> Node0xa879b0;
	Node0xa87640 -> Node0xa879b0;
	Node0xa879b0 -> Node0xa87c30;
	Node0xa86e70 -> Node0xa87c30;
	Node0xa87c30 -> Node0xa87cd0;
	Node0xa87d40 -> Node0xa87db0;
	Node0xa87560 -> Node0xa87db0;
	Node0xa87db0 -> Node0xa87e20;
	Node0xa87060 -> Node0xa87e20;
	Node0xa87e20 -> Node0xa87e90;
	Node0xa87e90 -> Node0xa87f00;
	Node0xa870d0 -> Node0xa87f00;
	Node0xa87f00 -> Node0xa87f70;
	Node0xa86e00 -> Node0xa87f70;
	Node0xa87f70 -> Node0xa87fe0;
	Node0xa87410 -> Node0xa87fe0;
	Node0xa87fe0 -> Node0xa88050;
	Node0xa87480 -> Node0xa88050;
	Node0xa88050 -> Node0xa880c0;
	Node0xa874f0 -> Node0xa880c0;
	Node0xa880c0 -> Node0xa88130;
	Node0xa875d0 -> Node0xa88130;
	Node0xa88130 -> Node0xa881a0;
	Node0xa87250 -> Node0xa881a0;
	Node0xa881a0 -> Node0xa88210;
	Node0xa87750 -> Node0xa88210;
	Node0xa88210 -> Node0xa88280;
	Node0xa87860 -> Node0xa88280;
	Node0xa88280 -> Node0xa882f0;
	Node0xa87cd0 -> Node0xa882f0;
	Node0xa86ff0 -> Node0xa88360;
	Node0xa882f0 -> Node0xa88360;
	Node0xa88360 -> Node0xa27268;
	Node0xa27268 -> Node0xa88800;
}
