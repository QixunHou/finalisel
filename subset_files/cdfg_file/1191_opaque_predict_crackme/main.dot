digraph "DFG for'main' function" {
	Node0xfa2e68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xfa2ee8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xfa2f78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xfa33d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xfa34b8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xfa35d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfa3810[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xfa38c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xfa4838[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xfa4ec0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0xfa4f30[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0xfa4fa0[shape=record, label="  %10 = or i32 %6, %9"];
	Node0xfa5010[shape=record, label="  %11 = sub i32 %8, %10"];
	Node0xfa5080[shape=record, label="  %12 = shl i32 %8, 1"];
	Node0xfa50f0[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0xfa5160[shape=record, label="  %14 = or i32 %7, %6"];
	Node0xfa51d0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0xfa5240[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0xfa52b0[shape=record, label="  %17 = and i32 %7, %6"];
	Node0xfa5320[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0xfa5390[shape=record, label="  %19 = shl i32 %6, 1"];
	Node0xfa5400[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0xfa5470[shape=record, label="  %21 = xor i32 %14, -1"];
	Node0xfa54e0[shape=record, label="  %22 = mul i32 %21, -7"];
	Node0xfa5550[shape=record, label="  %23 = shl i32 %10, 1"];
	Node0xfa55c0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0xfa5630[shape=record, label="  %25 = mul i32 %17, -3"];
	Node0xfa56a0[shape=record, label="  %26 = add i32 %7, %18"];
	Node0xfa5710[shape=record, label="  %27 = add i32 %26, %20"];
	Node0xfa5780[shape=record, label="  %28 = add i32 %27, %16"];
	Node0xfa57f0[shape=record, label="  %29 = add i32 %28, %22"];
	Node0xfa5860[shape=record, label="  %30 = add i32 %29, %25"];
	Node0xfa58d0[shape=record, label="  %31 = add i32 %30, %13"];
	Node0xfa5940[shape=record, label="  %32 = sub i32 %31, %24"];
	Node0xfa5bc0[shape=record, label="  %33 = icmp eq i32 %11, %32"];
	Node0xf439d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xfa5c50[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xfa5ea8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfa6008[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xfa60c8[shape=record, label="  ret i32 0"];
	Node0xfa2e68 -> Node0xfa2ee8;
	Node0xfa2ee8 -> Node0xfa2f78;
	Node0xfa2f78 -> Node0xfa33d8;
	Node0xfa33d8 -> Node0xfa34b8;
	Node0xfa34b8 -> Node0xfa35d8;
	Node0xfa35d8 -> Node0xfa3810;
	Node0xfa3810 -> Node0xfa38c8;
	Node0xfa38c8 -> Node0xfa4838;
	Node0xfa4838 -> Node0xfa4ec0;
	Node0xfa4ec0 -> Node0xfa4f30;
	Node0xfa4f30 -> Node0xfa4fa0;
	Node0xfa4fa0 -> Node0xfa5010;
	Node0xfa5010 -> Node0xfa5080;
	Node0xfa5080 -> Node0xfa50f0;
	Node0xfa50f0 -> Node0xfa5160;
	Node0xfa5160 -> Node0xfa51d0;
	Node0xfa51d0 -> Node0xfa5240;
	Node0xfa5240 -> Node0xfa52b0;
	Node0xfa52b0 -> Node0xfa5320;
	Node0xfa5320 -> Node0xfa5390;
	Node0xfa5390 -> Node0xfa5400;
	Node0xfa5400 -> Node0xfa5470;
	Node0xfa5470 -> Node0xfa54e0;
	Node0xfa54e0 -> Node0xfa5550;
	Node0xfa5550 -> Node0xfa55c0;
	Node0xfa55c0 -> Node0xfa5630;
	Node0xfa5630 -> Node0xfa56a0;
	Node0xfa56a0 -> Node0xfa5710;
	Node0xfa5710 -> Node0xfa5780;
	Node0xfa5780 -> Node0xfa57f0;
	Node0xfa57f0 -> Node0xfa5860;
	Node0xfa5860 -> Node0xfa58d0;
	Node0xfa58d0 -> Node0xfa5940;
	Node0xfa5940 -> Node0xfa5bc0;
	Node0xfa5bc0 -> Node0xf439d8;
	Node0xf439d8 -> Node0xfa5c50;
	Node0xfa5c50 -> Node0xfa5ea8;
	Node0xfa5ea8 -> Node0xfa6008;
	Node0xfa6008 -> Node0xfa60c8;
edge [color=red]
	Node0xfa2e68 -> Node0xfa2f78;
	Node0xfa2f78 -> Node0xfa33d8;
	Node0xfa2ee8 -> Node0xfa34b8;
	Node0xfa34b8 -> Node0xfa35d8;
	Node0xfa2e68 -> Node0xfa3810;
	Node0xfa2ee8 -> Node0xfa3810;
	Node0xfa2e68 -> Node0xfa38c8;
	Node0xfa2ee8 -> Node0xfa4838;
	Node0xfa4838 -> Node0xfa4ec0;
	Node0xfa38c8 -> Node0xfa4ec0;
	Node0xfa4838 -> Node0xfa4f30;
	Node0xfa38c8 -> Node0xfa4fa0;
	Node0xfa4f30 -> Node0xfa4fa0;
	Node0xfa4ec0 -> Node0xfa5010;
	Node0xfa4fa0 -> Node0xfa5010;
	Node0xfa4ec0 -> Node0xfa5080;
	Node0xfa5080 -> Node0xfa50f0;
	Node0xfa4838 -> Node0xfa5160;
	Node0xfa38c8 -> Node0xfa5160;
	Node0xfa5160 -> Node0xfa51d0;
	Node0xfa51d0 -> Node0xfa5240;
	Node0xfa4838 -> Node0xfa52b0;
	Node0xfa38c8 -> Node0xfa52b0;
	Node0xfa52b0 -> Node0xfa5320;
	Node0xfa38c8 -> Node0xfa5390;
	Node0xfa5390 -> Node0xfa5400;
	Node0xfa5160 -> Node0xfa5470;
	Node0xfa5470 -> Node0xfa54e0;
	Node0xfa4fa0 -> Node0xfa5550;
	Node0xfa5550 -> Node0xfa55c0;
	Node0xfa52b0 -> Node0xfa5630;
	Node0xfa4838 -> Node0xfa56a0;
	Node0xfa5320 -> Node0xfa56a0;
	Node0xfa56a0 -> Node0xfa5710;
	Node0xfa5400 -> Node0xfa5710;
	Node0xfa5710 -> Node0xfa5780;
	Node0xfa5240 -> Node0xfa5780;
	Node0xfa5780 -> Node0xfa57f0;
	Node0xfa54e0 -> Node0xfa57f0;
	Node0xfa57f0 -> Node0xfa5860;
	Node0xfa5630 -> Node0xfa5860;
	Node0xfa5860 -> Node0xfa58d0;
	Node0xfa50f0 -> Node0xfa58d0;
	Node0xfa58d0 -> Node0xfa5940;
	Node0xfa55c0 -> Node0xfa5940;
	Node0xfa5010 -> Node0xfa5bc0;
	Node0xfa5940 -> Node0xfa5bc0;
	Node0xfa5bc0 -> Node0xf439d8;
	Node0xf439d8 -> Node0xfa5c50;
	Node0xfa34b8 -> Node0xfa5ea8;
	Node0xfa2f78 -> Node0xfa6008;
}
