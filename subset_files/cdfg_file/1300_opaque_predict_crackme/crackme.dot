digraph "DFG for'crackme' function" {
	Node0x174f090[shape=record, label="  %5 = add i32 %0, 1"];
	Node0x174f100[shape=record, label="  %6 = add i32 %5, %1"];
	Node0x174f170[shape=record, label="  %7 = add i32 %6, %3"];
	Node0x174f210[shape=record, label="  %8 = xor i32 %1, -1"];
	Node0x174f280[shape=record, label="  %9 = and i32 %2, %1"];
	Node0x174f320[shape=record, label="  %10 = xor i32 %2, 2147483647"];
	Node0x174f390[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x174f400[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x174f470[shape=record, label="  %13 = and i32 %10, %1"];
	Node0x174f4e0[shape=record, label="  %14 = or i32 %2, %1"];
	Node0x174f550[shape=record, label="  %15 = xor i32 %0, -1"];
	Node0x174f5c0[shape=record, label="  %16 = and i32 %15, %3"];
	Node0x174f630[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x174f6d0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x174f740[shape=record, label="  %19 = or i32 %15, %3"];
	Node0x174f7b0[shape=record, label="  %20 = xor i32 %15, %3"];
	Node0x174f820[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x174f890[shape=record, label="  %22 = or i32 %3, %0"];
	Node0x174f900[shape=record, label="  %23 = xor i32 %19, -1"];
	Node0x174f9a0[shape=record, label="  %24 = mul i32 %21, 3"];
	Node0x174fa10[shape=record, label="  %25 = add i32 %14, %13"];
	Node0x174fa80[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x174faf0[shape=record, label="  %27 = sub i32 %8, %0"];
	Node0x174fb60[shape=record, label="  %28 = add i32 %27, 1"];
	Node0x174fbd0[shape=record, label="  %29 = add i32 %28, %9"];
	Node0x174fc40[shape=record, label="  %30 = add i32 %29, %12"];
	Node0x174fcb0[shape=record, label="  %31 = sub i32 %30, %14"];
	Node0x174fd20[shape=record, label="  %32 = sub i32 %31, %19"];
	Node0x174ffa0[shape=record, label="  %33 = add i32 %32, %20"];
	Node0x1750010[shape=record, label="  %34 = sub i32 %33, %21"];
	Node0x1750080[shape=record, label="  %35 = add i32 %34, %22"];
	Node0x17500f0[shape=record, label="  %36 = add i32 %35, %23"];
	Node0x1750160[shape=record, label="  %37 = sub i32 %36, %16"];
	Node0x17501d0[shape=record, label="  %38 = add i32 %37, %24"];
	Node0x1750240[shape=record, label="  %39 = sub i32 %38, %18"];
	Node0x17502b0[shape=record, label="  %40 = add i32 %39, %26"];
	Node0x1750320[shape=record, label="  %41 = icmp eq i32 %7, %40"];
	Node0x16ef268[shape=record, label="  %42 = select i1 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x17507c0[shape=record, label="  %43 = tail call i32 @puts(i8* nonnull dereferenceable(1) %42)"];
	Node0x1750810[shape=record, label="  ret void"];
	Node0x174f090 -> Node0x174f100;
	Node0x174f100 -> Node0x174f170;
	Node0x174f170 -> Node0x174f210;
	Node0x174f210 -> Node0x174f280;
	Node0x174f280 -> Node0x174f320;
	Node0x174f320 -> Node0x174f390;
	Node0x174f390 -> Node0x174f400;
	Node0x174f400 -> Node0x174f470;
	Node0x174f470 -> Node0x174f4e0;
	Node0x174f4e0 -> Node0x174f550;
	Node0x174f550 -> Node0x174f5c0;
	Node0x174f5c0 -> Node0x174f630;
	Node0x174f630 -> Node0x174f6d0;
	Node0x174f6d0 -> Node0x174f740;
	Node0x174f740 -> Node0x174f7b0;
	Node0x174f7b0 -> Node0x174f820;
	Node0x174f820 -> Node0x174f890;
	Node0x174f890 -> Node0x174f900;
	Node0x174f900 -> Node0x174f9a0;
	Node0x174f9a0 -> Node0x174fa10;
	Node0x174fa10 -> Node0x174fa80;
	Node0x174fa80 -> Node0x174faf0;
	Node0x174faf0 -> Node0x174fb60;
	Node0x174fb60 -> Node0x174fbd0;
	Node0x174fbd0 -> Node0x174fc40;
	Node0x174fc40 -> Node0x174fcb0;
	Node0x174fcb0 -> Node0x174fd20;
	Node0x174fd20 -> Node0x174ffa0;
	Node0x174ffa0 -> Node0x1750010;
	Node0x1750010 -> Node0x1750080;
	Node0x1750080 -> Node0x17500f0;
	Node0x17500f0 -> Node0x1750160;
	Node0x1750160 -> Node0x17501d0;
	Node0x17501d0 -> Node0x1750240;
	Node0x1750240 -> Node0x17502b0;
	Node0x17502b0 -> Node0x1750320;
	Node0x1750320 -> Node0x16ef268;
	Node0x16ef268 -> Node0x17507c0;
	Node0x17507c0 -> Node0x1750810;
edge [color=red]
	Node0x174f090 -> Node0x174f100;
	Node0x174f100 -> Node0x174f170;
	Node0x174f390 -> Node0x174f400;
	Node0x174f320 -> Node0x174f470;
	Node0x174f550 -> Node0x174f5c0;
	Node0x174f5c0 -> Node0x174f630;
	Node0x174f630 -> Node0x174f6d0;
	Node0x174f550 -> Node0x174f740;
	Node0x174f550 -> Node0x174f7b0;
	Node0x174f740 -> Node0x174f900;
	Node0x174f820 -> Node0x174f9a0;
	Node0x174f4e0 -> Node0x174fa10;
	Node0x174f470 -> Node0x174fa10;
	Node0x174fa10 -> Node0x174fa80;
	Node0x174f210 -> Node0x174faf0;
	Node0x174faf0 -> Node0x174fb60;
	Node0x174fb60 -> Node0x174fbd0;
	Node0x174f280 -> Node0x174fbd0;
	Node0x174fbd0 -> Node0x174fc40;
	Node0x174f400 -> Node0x174fc40;
	Node0x174fc40 -> Node0x174fcb0;
	Node0x174f4e0 -> Node0x174fcb0;
	Node0x174fcb0 -> Node0x174fd20;
	Node0x174f740 -> Node0x174fd20;
	Node0x174fd20 -> Node0x174ffa0;
	Node0x174f7b0 -> Node0x174ffa0;
	Node0x174ffa0 -> Node0x1750010;
	Node0x174f820 -> Node0x1750010;
	Node0x1750010 -> Node0x1750080;
	Node0x174f890 -> Node0x1750080;
	Node0x1750080 -> Node0x17500f0;
	Node0x174f900 -> Node0x17500f0;
	Node0x17500f0 -> Node0x1750160;
	Node0x174f5c0 -> Node0x1750160;
	Node0x1750160 -> Node0x17501d0;
	Node0x174f9a0 -> Node0x17501d0;
	Node0x17501d0 -> Node0x1750240;
	Node0x174f6d0 -> Node0x1750240;
	Node0x1750240 -> Node0x17502b0;
	Node0x174fa80 -> Node0x17502b0;
	Node0x174f170 -> Node0x1750320;
	Node0x17502b0 -> Node0x1750320;
	Node0x1750320 -> Node0x16ef268;
	Node0x16ef268 -> Node0x17507c0;
}
