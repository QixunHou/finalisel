digraph "DFG for'main' function" {
	Node0x17509d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1750a58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1750ae8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1750b48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1750bf8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1751028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1751108[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1751208[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x17512c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1751378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1751438[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x17514e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x174bab0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x17516e8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1752658[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1752cc8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1752d28[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1752da0[shape=record, label="  %14 = add i32 %10, 1"];
	Node0x1752e10[shape=record, label="  %15 = add i32 %14, %11"];
	Node0x1752e80[shape=record, label="  %16 = add i32 %15, %13"];
	Node0x1752ef0[shape=record, label="  %17 = xor i32 %11, -1"];
	Node0x1752f60[shape=record, label="  %18 = and i32 %12, %11"];
	Node0x1752fd0[shape=record, label="  %19 = xor i32 %12, 2147483647"];
	Node0x1753040[shape=record, label="  %20 = xor i32 %12, %17"];
	Node0x17530b0[shape=record, label="  %21 = and i32 %19, %11"];
	Node0x1753120[shape=record, label="  %22 = or i32 %12, %11"];
	Node0x1753190[shape=record, label="  %23 = xor i32 %10, -1"];
	Node0x1753200[shape=record, label="  %24 = and i32 %13, %23"];
	Node0x1753270[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x17532e0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x1753350[shape=record, label="  %27 = or i32 %13, %23"];
	Node0x17533c0[shape=record, label="  %28 = xor i32 %13, %23"];
	Node0x1753430[shape=record, label="  %29 = and i32 %13, %10"];
	Node0x17534a0[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x1753510[shape=record, label="  %31 = xor i32 %27, -1"];
	Node0x1753580[shape=record, label="  %32 = mul i32 %29, 3"];
	Node0x17535f0[shape=record, label="  %33 = add i32 %21, %22"];
	Node0x1753660[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x17536d0[shape=record, label="  %35 = sub i32 1, %10"];
	Node0x1753740[shape=record, label="  %36 = add i32 %35, %17"];
	Node0x17537b0[shape=record, label="  %37 = add i32 %36, %18"];
	Node0x1753820[shape=record, label="  %38 = add i32 %37, %20"];
	Node0x1753890[shape=record, label="  %39 = sub i32 %38, %22"];
	Node0x1753900[shape=record, label="  %40 = sub i32 %39, %27"];
	Node0x1753970[shape=record, label="  %41 = add i32 %40, %28"];
	Node0x17539e0[shape=record, label="  %42 = sub i32 %41, %29"];
	Node0x1753a50[shape=record, label="  %43 = add i32 %42, %30"];
	Node0x1753ac0[shape=record, label="  %44 = add i32 %43, %31"];
	Node0x1753b30[shape=record, label="  %45 = sub i32 %44, %24"];
	Node0x1753ba0[shape=record, label="  %46 = add i32 %45, %32"];
	Node0x1753c10[shape=record, label="  %47 = sub i32 %46, %26"];
	Node0x1753c80[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x1753cf0[shape=record, label="  %49 = icmp eq i32 %16, %48"];
	Node0x16f08b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1753d80[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0x1754028[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1754188[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1754298[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x17543a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1754468[shape=record, label="  ret i32 0"];
	Node0x17509d8 -> Node0x1750a58;
	Node0x1750a58 -> Node0x1750ae8;
	Node0x1750ae8 -> Node0x1750b48;
	Node0x1750b48 -> Node0x1750bf8;
	Node0x1750bf8 -> Node0x1751028;
	Node0x1751028 -> Node0x1751108;
	Node0x1751108 -> Node0x1751208;
	Node0x1751208 -> Node0x17512c8;
	Node0x17512c8 -> Node0x1751378;
	Node0x1751378 -> Node0x1751438;
	Node0x1751438 -> Node0x17514e8;
	Node0x17514e8 -> Node0x174bab0;
	Node0x174bab0 -> Node0x17516e8;
	Node0x17516e8 -> Node0x1752658;
	Node0x1752658 -> Node0x1752cc8;
	Node0x1752cc8 -> Node0x1752d28;
	Node0x1752d28 -> Node0x1752da0;
	Node0x1752da0 -> Node0x1752e10;
	Node0x1752e10 -> Node0x1752e80;
	Node0x1752e80 -> Node0x1752ef0;
	Node0x1752ef0 -> Node0x1752f60;
	Node0x1752f60 -> Node0x1752fd0;
	Node0x1752fd0 -> Node0x1753040;
	Node0x1753040 -> Node0x17530b0;
	Node0x17530b0 -> Node0x1753120;
	Node0x1753120 -> Node0x1753190;
	Node0x1753190 -> Node0x1753200;
	Node0x1753200 -> Node0x1753270;
	Node0x1753270 -> Node0x17532e0;
	Node0x17532e0 -> Node0x1753350;
	Node0x1753350 -> Node0x17533c0;
	Node0x17533c0 -> Node0x1753430;
	Node0x1753430 -> Node0x17534a0;
	Node0x17534a0 -> Node0x1753510;
	Node0x1753510 -> Node0x1753580;
	Node0x1753580 -> Node0x17535f0;
	Node0x17535f0 -> Node0x1753660;
	Node0x1753660 -> Node0x17536d0;
	Node0x17536d0 -> Node0x1753740;
	Node0x1753740 -> Node0x17537b0;
	Node0x17537b0 -> Node0x1753820;
	Node0x1753820 -> Node0x1753890;
	Node0x1753890 -> Node0x1753900;
	Node0x1753900 -> Node0x1753970;
	Node0x1753970 -> Node0x17539e0;
	Node0x17539e0 -> Node0x1753a50;
	Node0x1753a50 -> Node0x1753ac0;
	Node0x1753ac0 -> Node0x1753b30;
	Node0x1753b30 -> Node0x1753ba0;
	Node0x1753ba0 -> Node0x1753c10;
	Node0x1753c10 -> Node0x1753c80;
	Node0x1753c80 -> Node0x1753cf0;
	Node0x1753cf0 -> Node0x16f08b8;
	Node0x16f08b8 -> Node0x1753d80;
	Node0x1753d80 -> Node0x1754028;
	Node0x1754028 -> Node0x1754188;
	Node0x1754188 -> Node0x1754298;
	Node0x1754298 -> Node0x17543a8;
	Node0x17543a8 -> Node0x1754468;
edge [color=red]
	Node0x17509d8 -> Node0x1750bf8;
	Node0x1750bf8 -> Node0x1751028;
	Node0x1750a58 -> Node0x1751108;
	Node0x1751108 -> Node0x1751208;
	Node0x1750ae8 -> Node0x17512c8;
	Node0x17512c8 -> Node0x1751378;
	Node0x1750b48 -> Node0x1751438;
	Node0x1751438 -> Node0x17514e8;
	Node0x17509d8 -> Node0x174bab0;
	Node0x1750a58 -> Node0x174bab0;
	Node0x1750ae8 -> Node0x174bab0;
	Node0x1750b48 -> Node0x174bab0;
	Node0x17509d8 -> Node0x17516e8;
	Node0x1750a58 -> Node0x1752658;
	Node0x1750ae8 -> Node0x1752cc8;
	Node0x1750b48 -> Node0x1752d28;
	Node0x17516e8 -> Node0x1752da0;
	Node0x1752da0 -> Node0x1752e10;
	Node0x1752658 -> Node0x1752e10;
	Node0x1752e10 -> Node0x1752e80;
	Node0x1752d28 -> Node0x1752e80;
	Node0x1752658 -> Node0x1752ef0;
	Node0x1752cc8 -> Node0x1752f60;
	Node0x1752658 -> Node0x1752f60;
	Node0x1752cc8 -> Node0x1752fd0;
	Node0x1752cc8 -> Node0x1753040;
	Node0x1752ef0 -> Node0x1753040;
	Node0x1752fd0 -> Node0x17530b0;
	Node0x1752658 -> Node0x17530b0;
	Node0x1752cc8 -> Node0x1753120;
	Node0x1752658 -> Node0x1753120;
	Node0x17516e8 -> Node0x1753190;
	Node0x1752d28 -> Node0x1753200;
	Node0x1753190 -> Node0x1753200;
	Node0x1753200 -> Node0x1753270;
	Node0x1753270 -> Node0x17532e0;
	Node0x1752d28 -> Node0x1753350;
	Node0x1753190 -> Node0x1753350;
	Node0x1752d28 -> Node0x17533c0;
	Node0x1753190 -> Node0x17533c0;
	Node0x1752d28 -> Node0x1753430;
	Node0x17516e8 -> Node0x1753430;
	Node0x1752d28 -> Node0x17534a0;
	Node0x17516e8 -> Node0x17534a0;
	Node0x1753350 -> Node0x1753510;
	Node0x1753430 -> Node0x1753580;
	Node0x17530b0 -> Node0x17535f0;
	Node0x1753120 -> Node0x17535f0;
	Node0x17535f0 -> Node0x1753660;
	Node0x17516e8 -> Node0x17536d0;
	Node0x17536d0 -> Node0x1753740;
	Node0x1752ef0 -> Node0x1753740;
	Node0x1753740 -> Node0x17537b0;
	Node0x1752f60 -> Node0x17537b0;
	Node0x17537b0 -> Node0x1753820;
	Node0x1753040 -> Node0x1753820;
	Node0x1753820 -> Node0x1753890;
	Node0x1753120 -> Node0x1753890;
	Node0x1753890 -> Node0x1753900;
	Node0x1753350 -> Node0x1753900;
	Node0x1753900 -> Node0x1753970;
	Node0x17533c0 -> Node0x1753970;
	Node0x1753970 -> Node0x17539e0;
	Node0x1753430 -> Node0x17539e0;
	Node0x17539e0 -> Node0x1753a50;
	Node0x17534a0 -> Node0x1753a50;
	Node0x1753a50 -> Node0x1753ac0;
	Node0x1753510 -> Node0x1753ac0;
	Node0x1753ac0 -> Node0x1753b30;
	Node0x1753200 -> Node0x1753b30;
	Node0x1753b30 -> Node0x1753ba0;
	Node0x1753580 -> Node0x1753ba0;
	Node0x1753ba0 -> Node0x1753c10;
	Node0x17532e0 -> Node0x1753c10;
	Node0x1753c10 -> Node0x1753c80;
	Node0x1753660 -> Node0x1753c80;
	Node0x1752e80 -> Node0x1753cf0;
	Node0x1753c80 -> Node0x1753cf0;
	Node0x1753cf0 -> Node0x16f08b8;
	Node0x16f08b8 -> Node0x1753d80;
	Node0x1751438 -> Node0x1754028;
	Node0x17512c8 -> Node0x1754188;
	Node0x1751108 -> Node0x1754298;
	Node0x1750bf8 -> Node0x17543a8;
}
