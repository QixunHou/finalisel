digraph "DFG for'crackme' function" {
	Node0x227ad20[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x227adc0[shape=record, label="  %6 = add i32 %2, 1"];
	Node0x227ae30[shape=record, label="  %7 = or i32 %2, %1"];
	Node0x227aea0[shape=record, label="  %8 = add i32 %6, %7"];
	Node0x227af10[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0x227af80[shape=record, label="  %10 = or i32 %9, %3"];
	Node0x227aff0[shape=record, label="  %11 = sub i32 %8, %10"];
	Node0x227b060[shape=record, label="  %12 = or i32 %3, %0"];
	Node0x227b0d0[shape=record, label="  %13 = add i32 %11, %12"];
	Node0x227b140[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x227b1b0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x227b250[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x227b2c0[shape=record, label="  %17 = or i32 %5, %1"];
	Node0x227b330[shape=record, label="  %18 = and i32 %5, %1"];
	Node0x227b3a0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x227b410[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x227b480[shape=record, label="  %21 = xor i32 %7, -1"];
	Node0x227b4f0[shape=record, label="  %22 = xor i32 %17, -1"];
	Node0x227b590[shape=record, label="  %23 = mul i32 %22, 5"];
	Node0x227b630[shape=record, label="  %24 = mul i32 %14, 7"];
	Node0x227b6a0[shape=record, label="  %25 = shl i32 %0, 1"];
	Node0x227b710[shape=record, label="  %26 = xor i32 %3, %0"];
	Node0x227b780[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x227b7f0[shape=record, label="  %28 = shl i32 %12, 1"];
	Node0x227b860[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x227b8d0[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x227b940[shape=record, label="  %31 = and i32 %9, %3"];
	Node0x227b9b0[shape=record, label="  %32 = add i32 %30, %21"];
	Node0x227bc30[shape=record, label="  %33 = add i32 %32, %31"];
	Node0x227bcd0[shape=record, label="  %34 = mul i32 %33, 3"];
	Node0x227bd70[shape=record, label="  %35 = add i32 %1, 6"];
	Node0x227bde0[shape=record, label="  %36 = add i32 %35, %25"];
	Node0x227be50[shape=record, label="  %37 = sub i32 %36, %2"];
	Node0x227bec0[shape=record, label="  %38 = sub i32 %37, %17"];
	Node0x227bf30[shape=record, label="  %39 = add i32 %38, %18"];
	Node0x227bfa0[shape=record, label="  %40 = add i32 %39, %3"];
	Node0x227c010[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x227c080[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x227c0f0[shape=record, label="  %43 = add i32 %42, %26"];
	Node0x227c160[shape=record, label="  %44 = add i32 %43, %16"];
	Node0x227c1d0[shape=record, label="  %45 = sub i32 %44, %20"];
	Node0x227c240[shape=record, label="  %46 = sub i32 %45, %27"];
	Node0x227c2b0[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x227c320[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x227c390[shape=record, label="  %49 = icmp eq i32 %13, %48"];
	Node0x221b268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x227c830[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x227c880[shape=record, label="  ret void"];
	Node0x227ad20 -> Node0x227adc0;
	Node0x227adc0 -> Node0x227ae30;
	Node0x227ae30 -> Node0x227aea0;
	Node0x227aea0 -> Node0x227af10;
	Node0x227af10 -> Node0x227af80;
	Node0x227af80 -> Node0x227aff0;
	Node0x227aff0 -> Node0x227b060;
	Node0x227b060 -> Node0x227b0d0;
	Node0x227b0d0 -> Node0x227b140;
	Node0x227b140 -> Node0x227b1b0;
	Node0x227b1b0 -> Node0x227b250;
	Node0x227b250 -> Node0x227b2c0;
	Node0x227b2c0 -> Node0x227b330;
	Node0x227b330 -> Node0x227b3a0;
	Node0x227b3a0 -> Node0x227b410;
	Node0x227b410 -> Node0x227b480;
	Node0x227b480 -> Node0x227b4f0;
	Node0x227b4f0 -> Node0x227b590;
	Node0x227b590 -> Node0x227b630;
	Node0x227b630 -> Node0x227b6a0;
	Node0x227b6a0 -> Node0x227b710;
	Node0x227b710 -> Node0x227b780;
	Node0x227b780 -> Node0x227b7f0;
	Node0x227b7f0 -> Node0x227b860;
	Node0x227b860 -> Node0x227b8d0;
	Node0x227b8d0 -> Node0x227b940;
	Node0x227b940 -> Node0x227b9b0;
	Node0x227b9b0 -> Node0x227bc30;
	Node0x227bc30 -> Node0x227bcd0;
	Node0x227bcd0 -> Node0x227bd70;
	Node0x227bd70 -> Node0x227bde0;
	Node0x227bde0 -> Node0x227be50;
	Node0x227be50 -> Node0x227bec0;
	Node0x227bec0 -> Node0x227bf30;
	Node0x227bf30 -> Node0x227bfa0;
	Node0x227bfa0 -> Node0x227c010;
	Node0x227c010 -> Node0x227c080;
	Node0x227c080 -> Node0x227c0f0;
	Node0x227c0f0 -> Node0x227c160;
	Node0x227c160 -> Node0x227c1d0;
	Node0x227c1d0 -> Node0x227c240;
	Node0x227c240 -> Node0x227c2b0;
	Node0x227c2b0 -> Node0x227c320;
	Node0x227c320 -> Node0x227c390;
	Node0x227c390 -> Node0x221b268;
	Node0x221b268 -> Node0x227c830;
	Node0x227c830 -> Node0x227c880;
edge [color=red]
	Node0x227adc0 -> Node0x227aea0;
	Node0x227ae30 -> Node0x227aea0;
	Node0x227af10 -> Node0x227af80;
	Node0x227aea0 -> Node0x227aff0;
	Node0x227af80 -> Node0x227aff0;
	Node0x227aff0 -> Node0x227b0d0;
	Node0x227b060 -> Node0x227b0d0;
	Node0x227b140 -> Node0x227b1b0;
	Node0x227b1b0 -> Node0x227b250;
	Node0x227ad20 -> Node0x227b2c0;
	Node0x227ad20 -> Node0x227b330;
	Node0x227b330 -> Node0x227b3a0;
	Node0x227b3a0 -> Node0x227b410;
	Node0x227ae30 -> Node0x227b480;
	Node0x227b2c0 -> Node0x227b4f0;
	Node0x227b4f0 -> Node0x227b590;
	Node0x227b140 -> Node0x227b630;
	Node0x227b710 -> Node0x227b780;
	Node0x227b060 -> Node0x227b7f0;
	Node0x227b7f0 -> Node0x227b860;
	Node0x227af80 -> Node0x227b8d0;
	Node0x227af10 -> Node0x227b940;
	Node0x227b8d0 -> Node0x227b9b0;
	Node0x227b480 -> Node0x227b9b0;
	Node0x227b9b0 -> Node0x227bc30;
	Node0x227b940 -> Node0x227bc30;
	Node0x227bc30 -> Node0x227bcd0;
	Node0x227bd70 -> Node0x227bde0;
	Node0x227b6a0 -> Node0x227bde0;
	Node0x227bde0 -> Node0x227be50;
	Node0x227be50 -> Node0x227bec0;
	Node0x227b2c0 -> Node0x227bec0;
	Node0x227bec0 -> Node0x227bf30;
	Node0x227b330 -> Node0x227bf30;
	Node0x227bf30 -> Node0x227bfa0;
	Node0x227bfa0 -> Node0x227c010;
	Node0x227b590 -> Node0x227c010;
	Node0x227c010 -> Node0x227c080;
	Node0x227b630 -> Node0x227c080;
	Node0x227c080 -> Node0x227c0f0;
	Node0x227b710 -> Node0x227c0f0;
	Node0x227c0f0 -> Node0x227c160;
	Node0x227b250 -> Node0x227c160;
	Node0x227c160 -> Node0x227c1d0;
	Node0x227b410 -> Node0x227c1d0;
	Node0x227c1d0 -> Node0x227c240;
	Node0x227b780 -> Node0x227c240;
	Node0x227c240 -> Node0x227c2b0;
	Node0x227b860 -> Node0x227c2b0;
	Node0x227c2b0 -> Node0x227c320;
	Node0x227bcd0 -> Node0x227c320;
	Node0x227b0d0 -> Node0x227c390;
	Node0x227c320 -> Node0x227c390;
	Node0x227c390 -> Node0x221b268;
	Node0x221b268 -> Node0x227c830;
}
