digraph "DFG for'main' function" {
	Node0x1c7ae58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c7aed8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c7af68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c7afc8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1c7b448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c7b528[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1c7b628[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c7b6e8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1c7b798[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c7b9f8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1c7bab8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c7bc18[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c7bc78[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c80690[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1c80898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c809f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c80b08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c80bc8[shape=record, label="  ret i32 0"];
	Node0x1c7ae58 -> Node0x1c7aed8;
	Node0x1c7aed8 -> Node0x1c7af68;
	Node0x1c7af68 -> Node0x1c7afc8;
	Node0x1c7afc8 -> Node0x1c7b448;
	Node0x1c7b448 -> Node0x1c7b528;
	Node0x1c7b528 -> Node0x1c7b628;
	Node0x1c7b628 -> Node0x1c7b6e8;
	Node0x1c7b6e8 -> Node0x1c7b798;
	Node0x1c7b798 -> Node0x1c7b9f8;
	Node0x1c7b9f8 -> Node0x1c7bab8;
	Node0x1c7bab8 -> Node0x1c7bc18;
	Node0x1c7bc18 -> Node0x1c7bc78;
	Node0x1c7bc78 -> Node0x1c80690;
	Node0x1c80690 -> Node0x1c80898;
	Node0x1c80898 -> Node0x1c809f8;
	Node0x1c809f8 -> Node0x1c80b08;
	Node0x1c80b08 -> Node0x1c80bc8;
edge [color=red]
	Node0x1c7ae58 -> Node0x1c7afc8;
	Node0x1c7afc8 -> Node0x1c7b448;
	Node0x1c7aed8 -> Node0x1c7b528;
	Node0x1c7b528 -> Node0x1c7b628;
	Node0x1c7af68 -> Node0x1c7b6e8;
	Node0x1c7b6e8 -> Node0x1c7b798;
	Node0x1c7ae58 -> Node0x1c7b9f8;
	Node0x1c7aed8 -> Node0x1c7b9f8;
	Node0x1c7af68 -> Node0x1c7b9f8;
	Node0x1c7ae58 -> Node0x1c7bab8;
	Node0x1c7aed8 -> Node0x1c7bc18;
	Node0x1c7af68 -> Node0x1c7bc78;
	Node0x1c7bab8 -> Node0x1c80690;
	Node0x1c7bc18 -> Node0x1c80690;
	Node0x1c7bc78 -> Node0x1c80690;
	Node0x1c7b6e8 -> Node0x1c80898;
	Node0x1c7b528 -> Node0x1c809f8;
	Node0x1c7afc8 -> Node0x1c80b08;
}
