digraph "DFG for'main' function" {
	Node0x209dd68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x209dde8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x209de78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x209ded8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x209df88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x209e3b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x209e498[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x209e598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x209e658[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x209e708[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x209e7c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x209e878[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2098b80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x209ea78[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x209f9e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20a0058[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x20a00b8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x20a0130[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x20a01a0[shape=record, label="  %15 = and i32 %13, %10"];
	Node0x20a0210[shape=record, label="  %16 = sub i32 %15, %14"];
	Node0x20a0280[shape=record, label="  %17 = and i32 %12, %11"];
	Node0x20a02f0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x20a0360[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x20a03d0[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x20a0440[shape=record, label="  %21 = and i32 %11, %19"];
	Node0x20a04b0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x20a0520[shape=record, label="  %23 = xor i32 %14, -1"];
	Node0x20a0590[shape=record, label="  %24 = xor i32 %11, -1"];
	Node0x20a0600[shape=record, label="  %25 = and i32 %12, %24"];
	Node0x20a0670[shape=record, label="  %26 = xor i32 %10, 2147483647"];
	Node0x20a06e0[shape=record, label="  %27 = and i32 %13, %26"];
	Node0x20a0750[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x20a07c0[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x20a0830[shape=record, label="  %30 = xor i32 %13, %10"];
	Node0x20a08a0[shape=record, label="  %31 = xor i32 %13, -1"];
	Node0x20a0910[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x20a0980[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x20a09f0[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x20a0a60[shape=record, label="  %35 = xor i32 %13, 1073741823"];
	Node0x20a0ad0[shape=record, label="  %36 = and i32 %35, %10"];
	Node0x20a0b40[shape=record, label="  %37 = shl i32 %36, 2"];
	Node0x20a0bb0[shape=record, label="  %38 = add i32 %11, 4"];
	Node0x20a0c20[shape=record, label="  %39 = add i32 %38, %18"];
	Node0x20a0c90[shape=record, label="  %40 = add i32 %39, %20"];
	Node0x20a0d00[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x20a0d70[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x20a0de0[shape=record, label="  %43 = sub i32 %42, %25"];
	Node0x20a0e50[shape=record, label="  %44 = sub i32 %43, %21"];
	Node0x20a0ec0[shape=record, label="  %45 = add i32 %44, %31"];
	Node0x20a0f30[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x20a0fa0[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x20a1010[shape=record, label="  %48 = sub i32 %47, %13"];
	Node0x20a1080[shape=record, label="  %49 = add i32 %48, %29"];
	Node0x20a10f0[shape=record, label="  %50 = sub i32 %49, %34"];
	Node0x20a1160[shape=record, label="  %51 = sub i32 %50, %37"];
	Node0x20a11d0[shape=record, label="  %52 = icmp eq i32 %16, %51"];
	Node0x203d8b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x20a1260[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x20a1508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20a1668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20a1778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20a1888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20a1948[shape=record, label="  ret i32 0"];
	Node0x209dd68 -> Node0x209dde8;
	Node0x209dde8 -> Node0x209de78;
	Node0x209de78 -> Node0x209ded8;
	Node0x209ded8 -> Node0x209df88;
	Node0x209df88 -> Node0x209e3b8;
	Node0x209e3b8 -> Node0x209e498;
	Node0x209e498 -> Node0x209e598;
	Node0x209e598 -> Node0x209e658;
	Node0x209e658 -> Node0x209e708;
	Node0x209e708 -> Node0x209e7c8;
	Node0x209e7c8 -> Node0x209e878;
	Node0x209e878 -> Node0x2098b80;
	Node0x2098b80 -> Node0x209ea78;
	Node0x209ea78 -> Node0x209f9e8;
	Node0x209f9e8 -> Node0x20a0058;
	Node0x20a0058 -> Node0x20a00b8;
	Node0x20a00b8 -> Node0x20a0130;
	Node0x20a0130 -> Node0x20a01a0;
	Node0x20a01a0 -> Node0x20a0210;
	Node0x20a0210 -> Node0x20a0280;
	Node0x20a0280 -> Node0x20a02f0;
	Node0x20a02f0 -> Node0x20a0360;
	Node0x20a0360 -> Node0x20a03d0;
	Node0x20a03d0 -> Node0x20a0440;
	Node0x20a0440 -> Node0x20a04b0;
	Node0x20a04b0 -> Node0x20a0520;
	Node0x20a0520 -> Node0x20a0590;
	Node0x20a0590 -> Node0x20a0600;
	Node0x20a0600 -> Node0x20a0670;
	Node0x20a0670 -> Node0x20a06e0;
	Node0x20a06e0 -> Node0x20a0750;
	Node0x20a0750 -> Node0x20a07c0;
	Node0x20a07c0 -> Node0x20a0830;
	Node0x20a0830 -> Node0x20a08a0;
	Node0x20a08a0 -> Node0x20a0910;
	Node0x20a0910 -> Node0x20a0980;
	Node0x20a0980 -> Node0x20a09f0;
	Node0x20a09f0 -> Node0x20a0a60;
	Node0x20a0a60 -> Node0x20a0ad0;
	Node0x20a0ad0 -> Node0x20a0b40;
	Node0x20a0b40 -> Node0x20a0bb0;
	Node0x20a0bb0 -> Node0x20a0c20;
	Node0x20a0c20 -> Node0x20a0c90;
	Node0x20a0c90 -> Node0x20a0d00;
	Node0x20a0d00 -> Node0x20a0d70;
	Node0x20a0d70 -> Node0x20a0de0;
	Node0x20a0de0 -> Node0x20a0e50;
	Node0x20a0e50 -> Node0x20a0ec0;
	Node0x20a0ec0 -> Node0x20a0f30;
	Node0x20a0f30 -> Node0x20a0fa0;
	Node0x20a0fa0 -> Node0x20a1010;
	Node0x20a1010 -> Node0x20a1080;
	Node0x20a1080 -> Node0x20a10f0;
	Node0x20a10f0 -> Node0x20a1160;
	Node0x20a1160 -> Node0x20a11d0;
	Node0x20a11d0 -> Node0x203d8b8;
	Node0x203d8b8 -> Node0x20a1260;
	Node0x20a1260 -> Node0x20a1508;
	Node0x20a1508 -> Node0x20a1668;
	Node0x20a1668 -> Node0x20a1778;
	Node0x20a1778 -> Node0x20a1888;
	Node0x20a1888 -> Node0x20a1948;
edge [color=red]
	Node0x209dd68 -> Node0x209df88;
	Node0x209df88 -> Node0x209e3b8;
	Node0x209dde8 -> Node0x209e498;
	Node0x209e498 -> Node0x209e598;
	Node0x209de78 -> Node0x209e658;
	Node0x209e658 -> Node0x209e708;
	Node0x209ded8 -> Node0x209e7c8;
	Node0x209e7c8 -> Node0x209e878;
	Node0x209dd68 -> Node0x2098b80;
	Node0x209dde8 -> Node0x2098b80;
	Node0x209de78 -> Node0x2098b80;
	Node0x209ded8 -> Node0x2098b80;
	Node0x209dd68 -> Node0x209ea78;
	Node0x209dde8 -> Node0x209f9e8;
	Node0x209de78 -> Node0x20a0058;
	Node0x209ded8 -> Node0x20a00b8;
	Node0x20a0058 -> Node0x20a0130;
	Node0x209f9e8 -> Node0x20a0130;
	Node0x20a00b8 -> Node0x20a01a0;
	Node0x209ea78 -> Node0x20a01a0;
	Node0x20a01a0 -> Node0x20a0210;
	Node0x20a0130 -> Node0x20a0210;
	Node0x20a0058 -> Node0x20a0280;
	Node0x209f9e8 -> Node0x20a0280;
	Node0x20a0280 -> Node0x20a02f0;
	Node0x20a0058 -> Node0x20a0360;
	Node0x20a0058 -> Node0x20a03d0;
	Node0x209f9e8 -> Node0x20a03d0;
	Node0x209f9e8 -> Node0x20a0440;
	Node0x20a0360 -> Node0x20a0440;
	Node0x20a0440 -> Node0x20a04b0;
	Node0x20a0130 -> Node0x20a0520;
	Node0x209f9e8 -> Node0x20a0590;
	Node0x20a0058 -> Node0x20a0600;
	Node0x20a0590 -> Node0x20a0600;
	Node0x209ea78 -> Node0x20a0670;
	Node0x20a00b8 -> Node0x20a06e0;
	Node0x20a0670 -> Node0x20a06e0;
	Node0x20a06e0 -> Node0x20a0750;
	Node0x20a0750 -> Node0x20a07c0;
	Node0x20a00b8 -> Node0x20a0830;
	Node0x209ea78 -> Node0x20a0830;
	Node0x20a00b8 -> Node0x20a08a0;
	Node0x20a00b8 -> Node0x20a0910;
	Node0x209ea78 -> Node0x20a0910;
	Node0x20a0910 -> Node0x20a0980;
	Node0x20a0980 -> Node0x20a09f0;
	Node0x20a00b8 -> Node0x20a0a60;
	Node0x20a0a60 -> Node0x20a0ad0;
	Node0x209ea78 -> Node0x20a0ad0;
	Node0x20a0ad0 -> Node0x20a0b40;
	Node0x209f9e8 -> Node0x20a0bb0;
	Node0x20a0bb0 -> Node0x20a0c20;
	Node0x20a02f0 -> Node0x20a0c20;
	Node0x20a0c20 -> Node0x20a0c90;
	Node0x20a03d0 -> Node0x20a0c90;
	Node0x20a0c90 -> Node0x20a0d00;
	Node0x20a04b0 -> Node0x20a0d00;
	Node0x20a0d00 -> Node0x20a0d70;
	Node0x20a0520 -> Node0x20a0d70;
	Node0x20a0d70 -> Node0x20a0de0;
	Node0x20a0600 -> Node0x20a0de0;
	Node0x20a0de0 -> Node0x20a0e50;
	Node0x20a0440 -> Node0x20a0e50;
	Node0x20a0e50 -> Node0x20a0ec0;
	Node0x20a08a0 -> Node0x20a0ec0;
	Node0x20a0ec0 -> Node0x20a0f30;
	Node0x20a0830 -> Node0x20a0f30;
	Node0x20a0f30 -> Node0x20a0fa0;
	Node0x20a0910 -> Node0x20a0fa0;
	Node0x20a0fa0 -> Node0x20a1010;
	Node0x20a00b8 -> Node0x20a1010;
	Node0x20a1010 -> Node0x20a1080;
	Node0x20a07c0 -> Node0x20a1080;
	Node0x20a1080 -> Node0x20a10f0;
	Node0x20a09f0 -> Node0x20a10f0;
	Node0x20a10f0 -> Node0x20a1160;
	Node0x20a0b40 -> Node0x20a1160;
	Node0x20a0210 -> Node0x20a11d0;
	Node0x20a1160 -> Node0x20a11d0;
	Node0x20a11d0 -> Node0x203d8b8;
	Node0x203d8b8 -> Node0x20a1260;
	Node0x209e7c8 -> Node0x20a1508;
	Node0x209e658 -> Node0x20a1668;
	Node0x209e498 -> Node0x20a1778;
	Node0x209df88 -> Node0x20a1888;
}
