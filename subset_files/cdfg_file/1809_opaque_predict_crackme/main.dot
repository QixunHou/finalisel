digraph "DFG for'main' function" {
	Node0x964868[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x9648e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x964978[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x9649d8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x964a88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x964eb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x964f98[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x965098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x965158[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x965208[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x9652c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x965378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x95fa50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x965578[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x9664e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x966b58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x966bb8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x966c30[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x966ca0[shape=record, label="  %15 = or i32 %13, %10"];
	Node0x966d10[shape=record, label="  %16 = add i32 %14, 3"];
	Node0x966d80[shape=record, label="  %17 = add i32 %16, %15"];
	Node0x966df0[shape=record, label="  %18 = xor i32 %12, -1"];
	Node0x966e60[shape=record, label="  %19 = or i32 %11, %18"];
	Node0x966ed0[shape=record, label="  %20 = and i32 %11, %18"];
	Node0x966f40[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x966fb0[shape=record, label="  %22 = xor i32 %12, %11"];
	Node0x967020[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x967090[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x967100[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x967170[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x9671e0[shape=record, label="  %27 = xor i32 %13, %10"];
	Node0x967250[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x9672c0[shape=record, label="  %29 = xor i32 %10, -1"];
	Node0x967330[shape=record, label="  %30 = or i32 %13, %29"];
	Node0x9673a0[shape=record, label="  %31 = and i32 %13, %29"];
	Node0x967410[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x967480[shape=record, label="  %33 = sub i32 %11, %30"];
	Node0x9674f0[shape=record, label="  %34 = mul i32 %33, 3"];
	Node0x967560[shape=record, label="  %35 = sub i32 2, %19"];
	Node0x9675d0[shape=record, label="  %36 = add i32 %35, %21"];
	Node0x967640[shape=record, label="  %37 = sub i32 %36, %24"];
	Node0x9676b0[shape=record, label="  %38 = add i32 %37, %22"];
	Node0x967720[shape=record, label="  %39 = add i32 %38, %14"];
	Node0x967790[shape=record, label="  %40 = sub i32 %39, %20"];
	Node0x967800[shape=record, label="  %41 = add i32 %40, %13"];
	Node0x967870[shape=record, label="  %42 = sub i32 %41, %23"];
	Node0x9678e0[shape=record, label="  %43 = add i32 %42, %26"];
	Node0x967950[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x9679c0[shape=record, label="  %45 = sub i32 %44, %27"];
	Node0x967a30[shape=record, label="  %46 = add i32 %45, %32"];
	Node0x967aa0[shape=record, label="  %47 = add i32 %46, %34"];
	Node0x967b10[shape=record, label="  %48 = icmp eq i32 %17, %47"];
	Node0x9048b8[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x967ba0[shape=record, label="  %50 = call i32 @puts(i8* nonnull dereferenceable(1) %49) #5"];
	Node0x967e48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x967fa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x9680b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9681c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x968288[shape=record, label="  ret i32 0"];
	Node0x964868 -> Node0x9648e8;
	Node0x9648e8 -> Node0x964978;
	Node0x964978 -> Node0x9649d8;
	Node0x9649d8 -> Node0x964a88;
	Node0x964a88 -> Node0x964eb8;
	Node0x964eb8 -> Node0x964f98;
	Node0x964f98 -> Node0x965098;
	Node0x965098 -> Node0x965158;
	Node0x965158 -> Node0x965208;
	Node0x965208 -> Node0x9652c8;
	Node0x9652c8 -> Node0x965378;
	Node0x965378 -> Node0x95fa50;
	Node0x95fa50 -> Node0x965578;
	Node0x965578 -> Node0x9664e8;
	Node0x9664e8 -> Node0x966b58;
	Node0x966b58 -> Node0x966bb8;
	Node0x966bb8 -> Node0x966c30;
	Node0x966c30 -> Node0x966ca0;
	Node0x966ca0 -> Node0x966d10;
	Node0x966d10 -> Node0x966d80;
	Node0x966d80 -> Node0x966df0;
	Node0x966df0 -> Node0x966e60;
	Node0x966e60 -> Node0x966ed0;
	Node0x966ed0 -> Node0x966f40;
	Node0x966f40 -> Node0x966fb0;
	Node0x966fb0 -> Node0x967020;
	Node0x967020 -> Node0x967090;
	Node0x967090 -> Node0x967100;
	Node0x967100 -> Node0x967170;
	Node0x967170 -> Node0x9671e0;
	Node0x9671e0 -> Node0x967250;
	Node0x967250 -> Node0x9672c0;
	Node0x9672c0 -> Node0x967330;
	Node0x967330 -> Node0x9673a0;
	Node0x9673a0 -> Node0x967410;
	Node0x967410 -> Node0x967480;
	Node0x967480 -> Node0x9674f0;
	Node0x9674f0 -> Node0x967560;
	Node0x967560 -> Node0x9675d0;
	Node0x9675d0 -> Node0x967640;
	Node0x967640 -> Node0x9676b0;
	Node0x9676b0 -> Node0x967720;
	Node0x967720 -> Node0x967790;
	Node0x967790 -> Node0x967800;
	Node0x967800 -> Node0x967870;
	Node0x967870 -> Node0x9678e0;
	Node0x9678e0 -> Node0x967950;
	Node0x967950 -> Node0x9679c0;
	Node0x9679c0 -> Node0x967a30;
	Node0x967a30 -> Node0x967aa0;
	Node0x967aa0 -> Node0x967b10;
	Node0x967b10 -> Node0x9048b8;
	Node0x9048b8 -> Node0x967ba0;
	Node0x967ba0 -> Node0x967e48;
	Node0x967e48 -> Node0x967fa8;
	Node0x967fa8 -> Node0x9680b8;
	Node0x9680b8 -> Node0x9681c8;
	Node0x9681c8 -> Node0x968288;
edge [color=red]
	Node0x964868 -> Node0x964a88;
	Node0x964a88 -> Node0x964eb8;
	Node0x9648e8 -> Node0x964f98;
	Node0x964f98 -> Node0x965098;
	Node0x964978 -> Node0x965158;
	Node0x965158 -> Node0x965208;
	Node0x9649d8 -> Node0x9652c8;
	Node0x9652c8 -> Node0x965378;
	Node0x964868 -> Node0x95fa50;
	Node0x9648e8 -> Node0x95fa50;
	Node0x964978 -> Node0x95fa50;
	Node0x9649d8 -> Node0x95fa50;
	Node0x964868 -> Node0x965578;
	Node0x9648e8 -> Node0x9664e8;
	Node0x964978 -> Node0x966b58;
	Node0x9649d8 -> Node0x966bb8;
	Node0x966b58 -> Node0x966c30;
	Node0x9664e8 -> Node0x966c30;
	Node0x966bb8 -> Node0x966ca0;
	Node0x965578 -> Node0x966ca0;
	Node0x966c30 -> Node0x966d10;
	Node0x966d10 -> Node0x966d80;
	Node0x966ca0 -> Node0x966d80;
	Node0x966b58 -> Node0x966df0;
	Node0x9664e8 -> Node0x966e60;
	Node0x966df0 -> Node0x966e60;
	Node0x9664e8 -> Node0x966ed0;
	Node0x966df0 -> Node0x966ed0;
	Node0x966ed0 -> Node0x966f40;
	Node0x966b58 -> Node0x966fb0;
	Node0x9664e8 -> Node0x966fb0;
	Node0x966fb0 -> Node0x967020;
	Node0x966b58 -> Node0x967090;
	Node0x9664e8 -> Node0x967090;
	Node0x967090 -> Node0x967100;
	Node0x967100 -> Node0x967170;
	Node0x966bb8 -> Node0x9671e0;
	Node0x965578 -> Node0x9671e0;
	Node0x9671e0 -> Node0x967250;
	Node0x965578 -> Node0x9672c0;
	Node0x966bb8 -> Node0x967330;
	Node0x9672c0 -> Node0x967330;
	Node0x966bb8 -> Node0x9673a0;
	Node0x9672c0 -> Node0x9673a0;
	Node0x9673a0 -> Node0x967410;
	Node0x9664e8 -> Node0x967480;
	Node0x967330 -> Node0x967480;
	Node0x967480 -> Node0x9674f0;
	Node0x966e60 -> Node0x967560;
	Node0x967560 -> Node0x9675d0;
	Node0x966f40 -> Node0x9675d0;
	Node0x9675d0 -> Node0x967640;
	Node0x967090 -> Node0x967640;
	Node0x967640 -> Node0x9676b0;
	Node0x966fb0 -> Node0x9676b0;
	Node0x9676b0 -> Node0x967720;
	Node0x966c30 -> Node0x967720;
	Node0x967720 -> Node0x967790;
	Node0x966ed0 -> Node0x967790;
	Node0x967790 -> Node0x967800;
	Node0x966bb8 -> Node0x967800;
	Node0x967800 -> Node0x967870;
	Node0x967020 -> Node0x967870;
	Node0x967870 -> Node0x9678e0;
	Node0x967170 -> Node0x9678e0;
	Node0x9678e0 -> Node0x967950;
	Node0x967250 -> Node0x967950;
	Node0x967950 -> Node0x9679c0;
	Node0x9671e0 -> Node0x9679c0;
	Node0x9679c0 -> Node0x967a30;
	Node0x967410 -> Node0x967a30;
	Node0x967a30 -> Node0x967aa0;
	Node0x9674f0 -> Node0x967aa0;
	Node0x966d80 -> Node0x967b10;
	Node0x967aa0 -> Node0x967b10;
	Node0x967b10 -> Node0x9048b8;
	Node0x9048b8 -> Node0x967ba0;
	Node0x9652c8 -> Node0x967e48;
	Node0x965158 -> Node0x967fa8;
	Node0x964f98 -> Node0x9680b8;
	Node0x964a88 -> Node0x9681c8;
}
