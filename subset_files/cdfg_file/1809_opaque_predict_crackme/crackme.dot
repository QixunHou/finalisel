digraph "DFG for'crackme' function" {
	Node0x962a20[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x962a90[shape=record, label="  %6 = or i32 %3, %0"];
	Node0x963110[shape=record, label="  %7 = add i32 %5, 3"];
	Node0x963180[shape=record, label="  %8 = add i32 %7, %6"];
	Node0x963220[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x963290[shape=record, label="  %10 = or i32 %9, %1"];
	Node0x963300[shape=record, label="  %11 = and i32 %9, %1"];
	Node0x963370[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x9633e0[shape=record, label="  %13 = xor i32 %2, %1"];
	Node0x963480[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x9634f0[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x963560[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x9635d0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x963640[shape=record, label="  %18 = xor i32 %3, %0"];
	Node0x9636b0[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x963720[shape=record, label="  %20 = xor i32 %0, -1"];
	Node0x963790[shape=record, label="  %21 = or i32 %20, %3"];
	Node0x963800[shape=record, label="  %22 = and i32 %20, %3"];
	Node0x963870[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x9638e0[shape=record, label="  %24 = sub i32 %1, %21"];
	Node0x963950[shape=record, label="  %25 = mul i32 %24, 3"];
	Node0x9639f0[shape=record, label="  %26 = sub i32 2, %10"];
	Node0x963a60[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x963ad0[shape=record, label="  %28 = sub i32 %27, %15"];
	Node0x963b40[shape=record, label="  %29 = add i32 %28, %13"];
	Node0x963bb0[shape=record, label="  %30 = add i32 %29, %5"];
	Node0x963c20[shape=record, label="  %31 = sub i32 %30, %11"];
	Node0x963c90[shape=record, label="  %32 = add i32 %31, %3"];
	Node0x963f10[shape=record, label="  %33 = sub i32 %32, %14"];
	Node0x963f80[shape=record, label="  %34 = add i32 %33, %17"];
	Node0x963ff0[shape=record, label="  %35 = add i32 %34, %19"];
	Node0x964060[shape=record, label="  %36 = sub i32 %35, %18"];
	Node0x9640d0[shape=record, label="  %37 = add i32 %36, %23"];
	Node0x964140[shape=record, label="  %38 = add i32 %37, %25"];
	Node0x9641b0[shape=record, label="  %39 = icmp eq i32 %8, %38"];
	Node0x903268[shape=record, label="  %40 = select i1 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x964650[shape=record, label="  %41 = tail call i32 @puts(i8* nonnull dereferenceable(1) %40)"];
	Node0x9646a0[shape=record, label="  ret void"];
	Node0x962a20 -> Node0x962a90;
	Node0x962a90 -> Node0x963110;
	Node0x963110 -> Node0x963180;
	Node0x963180 -> Node0x963220;
	Node0x963220 -> Node0x963290;
	Node0x963290 -> Node0x963300;
	Node0x963300 -> Node0x963370;
	Node0x963370 -> Node0x9633e0;
	Node0x9633e0 -> Node0x963480;
	Node0x963480 -> Node0x9634f0;
	Node0x9634f0 -> Node0x963560;
	Node0x963560 -> Node0x9635d0;
	Node0x9635d0 -> Node0x963640;
	Node0x963640 -> Node0x9636b0;
	Node0x9636b0 -> Node0x963720;
	Node0x963720 -> Node0x963790;
	Node0x963790 -> Node0x963800;
	Node0x963800 -> Node0x963870;
	Node0x963870 -> Node0x9638e0;
	Node0x9638e0 -> Node0x963950;
	Node0x963950 -> Node0x9639f0;
	Node0x9639f0 -> Node0x963a60;
	Node0x963a60 -> Node0x963ad0;
	Node0x963ad0 -> Node0x963b40;
	Node0x963b40 -> Node0x963bb0;
	Node0x963bb0 -> Node0x963c20;
	Node0x963c20 -> Node0x963c90;
	Node0x963c90 -> Node0x963f10;
	Node0x963f10 -> Node0x963f80;
	Node0x963f80 -> Node0x963ff0;
	Node0x963ff0 -> Node0x964060;
	Node0x964060 -> Node0x9640d0;
	Node0x9640d0 -> Node0x964140;
	Node0x964140 -> Node0x9641b0;
	Node0x9641b0 -> Node0x903268;
	Node0x903268 -> Node0x964650;
	Node0x964650 -> Node0x9646a0;
edge [color=red]
	Node0x962a20 -> Node0x963110;
	Node0x963110 -> Node0x963180;
	Node0x962a90 -> Node0x963180;
	Node0x963220 -> Node0x963290;
	Node0x963220 -> Node0x963300;
	Node0x963300 -> Node0x963370;
	Node0x9633e0 -> Node0x963480;
	Node0x9634f0 -> Node0x963560;
	Node0x963560 -> Node0x9635d0;
	Node0x963640 -> Node0x9636b0;
	Node0x963720 -> Node0x963790;
	Node0x963720 -> Node0x963800;
	Node0x963800 -> Node0x963870;
	Node0x963790 -> Node0x9638e0;
	Node0x9638e0 -> Node0x963950;
	Node0x963290 -> Node0x9639f0;
	Node0x9639f0 -> Node0x963a60;
	Node0x963370 -> Node0x963a60;
	Node0x963a60 -> Node0x963ad0;
	Node0x9634f0 -> Node0x963ad0;
	Node0x963ad0 -> Node0x963b40;
	Node0x9633e0 -> Node0x963b40;
	Node0x963b40 -> Node0x963bb0;
	Node0x962a20 -> Node0x963bb0;
	Node0x963bb0 -> Node0x963c20;
	Node0x963300 -> Node0x963c20;
	Node0x963c20 -> Node0x963c90;
	Node0x963c90 -> Node0x963f10;
	Node0x963480 -> Node0x963f10;
	Node0x963f10 -> Node0x963f80;
	Node0x9635d0 -> Node0x963f80;
	Node0x963f80 -> Node0x963ff0;
	Node0x9636b0 -> Node0x963ff0;
	Node0x963ff0 -> Node0x964060;
	Node0x963640 -> Node0x964060;
	Node0x964060 -> Node0x9640d0;
	Node0x963870 -> Node0x9640d0;
	Node0x9640d0 -> Node0x964140;
	Node0x963950 -> Node0x964140;
	Node0x963180 -> Node0x9641b0;
	Node0x964140 -> Node0x9641b0;
	Node0x9641b0 -> Node0x903268;
	Node0x903268 -> Node0x964650;
}
