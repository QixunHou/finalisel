digraph "DFG for'main' function" {
	Node0x609e08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x609e88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x609f18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x609f78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x60a028[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x60a458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x60a538[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x60a638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x60a6f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x60a7a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x60a868[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x60a918[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x604be0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x60ab18[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x60ba88[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x60c0f8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x60c158[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x60c1d0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x60c240[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x60c2b0[shape=record, label="  %16 = and i32 %13, %15"];
	Node0x60c320[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x60c390[shape=record, label="  %18 = sub i32 %17, %14"];
	Node0x60c400[shape=record, label="  %19 = or i32 %13, %10"];
	Node0x60c470[shape=record, label="  %20 = add i32 %18, %19"];
	Node0x60c4e0[shape=record, label="  %21 = and i32 %12, %11"];
	Node0x60c550[shape=record, label="  %22 = xor i32 %12, 2147483647"];
	Node0x60c5c0[shape=record, label="  %23 = shl i32 %12, 2"];
	Node0x60c630[shape=record, label="  %24 = or i32 %22, %11"];
	Node0x60c6a0[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x60c710[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x60c780[shape=record, label="  %27 = shl i32 %11, 1"];
	Node0x60c7f0[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x60c860[shape=record, label="  %29 = or i32 %12, %11"];
	Node0x60c8d0[shape=record, label="  %30 = shl i32 %21, 3"];
	Node0x60c940[shape=record, label="  %31 = xor i32 %13, %15"];
	Node0x60c9b0[shape=record, label="  %32 = shl i32 %10, 1"];
	Node0x60ca20[shape=record, label="  %33 = or i32 %13, %15"];
	Node0x60ca90[shape=record, label="  %34 = xor i32 %19, -1"];
	Node0x60cb00[shape=record, label="  %35 = shl i32 %33, 2"];
	Node0x60cb70[shape=record, label="  %36 = xor i32 %35, -4"];
	Node0x60cbe0[shape=record, label="  %37 = shl i32 %16, 1"];
	Node0x60cc50[shape=record, label="  %38 = and i32 %13, %10"];
	Node0x60ccc0[shape=record, label="  %39 = shl i32 %38, 2"];
	Node0x60cd30[shape=record, label="  %40 = sub i32 1, %11"];
	Node0x60cda0[shape=record, label="  %41 = sub i32 %40, %32"];
	Node0x60ce10[shape=record, label="  %42 = sub i32 %41, %12"];
	Node0x60ce80[shape=record, label="  %43 = sub i32 %42, %21"];
	Node0x60cef0[shape=record, label="  %44 = add i32 %43, %14"];
	Node0x60cf60[shape=record, label="  %45 = sub i32 %44, %23"];
	Node0x60cfd0[shape=record, label="  %46 = add i32 %45, %28"];
	Node0x60d040[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x60d0b0[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x60d120[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x60d190[shape=record, label="  %50 = sub i32 %49, %33"];
	Node0x60d200[shape=record, label="  %51 = add i32 %50, %34"];
	Node0x60d270[shape=record, label="  %52 = add i32 %51, %26"];
	Node0x60d2e0[shape=record, label="  %53 = add i32 %52, %37"];
	Node0x60d350[shape=record, label="  %54 = add i32 %53, %39"];
	Node0x60d3c0[shape=record, label="  %55 = add i32 %54, %36"];
	Node0x60d430[shape=record, label="  %56 = icmp eq i32 %20, %55"];
	Node0x5a98b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x60d4c0[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x60d768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x60d8c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x60d9d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x60dae8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x60dba8[shape=record, label="  ret i32 0"];
	Node0x609e08 -> Node0x609e88;
	Node0x609e88 -> Node0x609f18;
	Node0x609f18 -> Node0x609f78;
	Node0x609f78 -> Node0x60a028;
	Node0x60a028 -> Node0x60a458;
	Node0x60a458 -> Node0x60a538;
	Node0x60a538 -> Node0x60a638;
	Node0x60a638 -> Node0x60a6f8;
	Node0x60a6f8 -> Node0x60a7a8;
	Node0x60a7a8 -> Node0x60a868;
	Node0x60a868 -> Node0x60a918;
	Node0x60a918 -> Node0x604be0;
	Node0x604be0 -> Node0x60ab18;
	Node0x60ab18 -> Node0x60ba88;
	Node0x60ba88 -> Node0x60c0f8;
	Node0x60c0f8 -> Node0x60c158;
	Node0x60c158 -> Node0x60c1d0;
	Node0x60c1d0 -> Node0x60c240;
	Node0x60c240 -> Node0x60c2b0;
	Node0x60c2b0 -> Node0x60c320;
	Node0x60c320 -> Node0x60c390;
	Node0x60c390 -> Node0x60c400;
	Node0x60c400 -> Node0x60c470;
	Node0x60c470 -> Node0x60c4e0;
	Node0x60c4e0 -> Node0x60c550;
	Node0x60c550 -> Node0x60c5c0;
	Node0x60c5c0 -> Node0x60c630;
	Node0x60c630 -> Node0x60c6a0;
	Node0x60c6a0 -> Node0x60c710;
	Node0x60c710 -> Node0x60c780;
	Node0x60c780 -> Node0x60c7f0;
	Node0x60c7f0 -> Node0x60c860;
	Node0x60c860 -> Node0x60c8d0;
	Node0x60c8d0 -> Node0x60c940;
	Node0x60c940 -> Node0x60c9b0;
	Node0x60c9b0 -> Node0x60ca20;
	Node0x60ca20 -> Node0x60ca90;
	Node0x60ca90 -> Node0x60cb00;
	Node0x60cb00 -> Node0x60cb70;
	Node0x60cb70 -> Node0x60cbe0;
	Node0x60cbe0 -> Node0x60cc50;
	Node0x60cc50 -> Node0x60ccc0;
	Node0x60ccc0 -> Node0x60cd30;
	Node0x60cd30 -> Node0x60cda0;
	Node0x60cda0 -> Node0x60ce10;
	Node0x60ce10 -> Node0x60ce80;
	Node0x60ce80 -> Node0x60cef0;
	Node0x60cef0 -> Node0x60cf60;
	Node0x60cf60 -> Node0x60cfd0;
	Node0x60cfd0 -> Node0x60d040;
	Node0x60d040 -> Node0x60d0b0;
	Node0x60d0b0 -> Node0x60d120;
	Node0x60d120 -> Node0x60d190;
	Node0x60d190 -> Node0x60d200;
	Node0x60d200 -> Node0x60d270;
	Node0x60d270 -> Node0x60d2e0;
	Node0x60d2e0 -> Node0x60d350;
	Node0x60d350 -> Node0x60d3c0;
	Node0x60d3c0 -> Node0x60d430;
	Node0x60d430 -> Node0x5a98b8;
	Node0x5a98b8 -> Node0x60d4c0;
	Node0x60d4c0 -> Node0x60d768;
	Node0x60d768 -> Node0x60d8c8;
	Node0x60d8c8 -> Node0x60d9d8;
	Node0x60d9d8 -> Node0x60dae8;
	Node0x60dae8 -> Node0x60dba8;
edge [color=red]
	Node0x609e08 -> Node0x60a028;
	Node0x60a028 -> Node0x60a458;
	Node0x609e88 -> Node0x60a538;
	Node0x60a538 -> Node0x60a638;
	Node0x609f18 -> Node0x60a6f8;
	Node0x60a6f8 -> Node0x60a7a8;
	Node0x609f78 -> Node0x60a868;
	Node0x60a868 -> Node0x60a918;
	Node0x609e08 -> Node0x604be0;
	Node0x609e88 -> Node0x604be0;
	Node0x609f18 -> Node0x604be0;
	Node0x609f78 -> Node0x604be0;
	Node0x609e08 -> Node0x60ab18;
	Node0x609e88 -> Node0x60ba88;
	Node0x609f18 -> Node0x60c0f8;
	Node0x609f78 -> Node0x60c158;
	Node0x60c0f8 -> Node0x60c1d0;
	Node0x60ba88 -> Node0x60c1d0;
	Node0x60ab18 -> Node0x60c240;
	Node0x60c158 -> Node0x60c2b0;
	Node0x60c240 -> Node0x60c2b0;
	Node0x60c2b0 -> Node0x60c320;
	Node0x60c320 -> Node0x60c390;
	Node0x60c1d0 -> Node0x60c390;
	Node0x60c158 -> Node0x60c400;
	Node0x60ab18 -> Node0x60c400;
	Node0x60c390 -> Node0x60c470;
	Node0x60c400 -> Node0x60c470;
	Node0x60c0f8 -> Node0x60c4e0;
	Node0x60ba88 -> Node0x60c4e0;
	Node0x60c0f8 -> Node0x60c550;
	Node0x60c0f8 -> Node0x60c5c0;
	Node0x60c550 -> Node0x60c630;
	Node0x60ba88 -> Node0x60c630;
	Node0x60c630 -> Node0x60c6a0;
	Node0x60c6a0 -> Node0x60c710;
	Node0x60ba88 -> Node0x60c780;
	Node0x60c780 -> Node0x60c7f0;
	Node0x60c0f8 -> Node0x60c860;
	Node0x60ba88 -> Node0x60c860;
	Node0x60c4e0 -> Node0x60c8d0;
	Node0x60c158 -> Node0x60c940;
	Node0x60c240 -> Node0x60c940;
	Node0x60ab18 -> Node0x60c9b0;
	Node0x60c158 -> Node0x60ca20;
	Node0x60c240 -> Node0x60ca20;
	Node0x60c400 -> Node0x60ca90;
	Node0x60ca20 -> Node0x60cb00;
	Node0x60cb00 -> Node0x60cb70;
	Node0x60c2b0 -> Node0x60cbe0;
	Node0x60c158 -> Node0x60cc50;
	Node0x60ab18 -> Node0x60cc50;
	Node0x60cc50 -> Node0x60ccc0;
	Node0x60ba88 -> Node0x60cd30;
	Node0x60cd30 -> Node0x60cda0;
	Node0x60c9b0 -> Node0x60cda0;
	Node0x60cda0 -> Node0x60ce10;
	Node0x60c0f8 -> Node0x60ce10;
	Node0x60ce10 -> Node0x60ce80;
	Node0x60c4e0 -> Node0x60ce80;
	Node0x60ce80 -> Node0x60cef0;
	Node0x60c1d0 -> Node0x60cef0;
	Node0x60cef0 -> Node0x60cf60;
	Node0x60c5c0 -> Node0x60cf60;
	Node0x60cf60 -> Node0x60cfd0;
	Node0x60c7f0 -> Node0x60cfd0;
	Node0x60cfd0 -> Node0x60d040;
	Node0x60c860 -> Node0x60d040;
	Node0x60d040 -> Node0x60d0b0;
	Node0x60c8d0 -> Node0x60d0b0;
	Node0x60d0b0 -> Node0x60d120;
	Node0x60c940 -> Node0x60d120;
	Node0x60d120 -> Node0x60d190;
	Node0x60ca20 -> Node0x60d190;
	Node0x60d190 -> Node0x60d200;
	Node0x60ca90 -> Node0x60d200;
	Node0x60d200 -> Node0x60d270;
	Node0x60c710 -> Node0x60d270;
	Node0x60d270 -> Node0x60d2e0;
	Node0x60cbe0 -> Node0x60d2e0;
	Node0x60d2e0 -> Node0x60d350;
	Node0x60ccc0 -> Node0x60d350;
	Node0x60d350 -> Node0x60d3c0;
	Node0x60cb70 -> Node0x60d3c0;
	Node0x60c470 -> Node0x60d430;
	Node0x60d3c0 -> Node0x60d430;
	Node0x60d430 -> Node0x5a98b8;
	Node0x5a98b8 -> Node0x60d4c0;
	Node0x60a868 -> Node0x60d768;
	Node0x60a6f8 -> Node0x60d8c8;
	Node0x60a538 -> Node0x60d9d8;
	Node0x60a028 -> Node0x60dae8;
}
