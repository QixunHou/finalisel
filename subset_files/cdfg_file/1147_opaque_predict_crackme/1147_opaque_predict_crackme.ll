; ModuleID = '../.././c_source_file/1147_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1147_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %1, %0
  %10 = xor i32 %9, -1
  %11 = or i32 %8, %10
  %12 = mul i32 %11, -4
  %13 = xor i32 %1, -1
  %14 = and i32 %13, %0
  %15 = xor i32 %14, -1
  %16 = and i32 %15, %2
  %17 = add i32 %12, %16
  %18 = xor i32 %5, -1
  %19 = or i32 %18, %3
  %20 = or i32 %19, %4
  %21 = sub i32 %17, %20
  %22 = xor i32 %3, -1
  %23 = and i32 %18, %4
  %24 = or i32 %23, %22
  %25 = shl i32 %24, 1
  %26 = add i32 %21, %25
  %27 = or i32 %9, %2
  %28 = and i32 %2, %0
  %29 = or i32 %13, %0
  %30 = xor i32 %29, -1
  %31 = or i32 %28, %30
  %32 = xor i32 %28, -1
  %33 = and i32 %32, %1
  %34 = xor i32 %0, -1
  %35 = or i32 %2, %1
  %36 = or i32 %35, %34
  %37 = or i32 %2, %0
  %38 = xor i32 %37, %1
  %39 = xor i32 %8, -1
  %40 = and i32 %39, %13
  %41 = or i32 %14, %2
  %42 = xor i32 %2, %1
  %43 = xor i32 %42, -1
  %44 = and i32 %43, %0
  %45 = xor i32 %2, %0
  %46 = xor i32 %45, -1
  %47 = or i32 %14, %46
  %48 = or i32 %1, %0
  %49 = xor i32 %48, -1
  %50 = or i32 %28, %49
  %51 = shl i32 %50, 1
  %52 = and i32 %48, %46
  %53 = add i32 %45, 1
  %54 = or i32 %43, %34
  %55 = or i32 %42, %0
  %56 = shl i32 %55, 1
  %57 = xor i32 %29, %2
  %58 = and i32 %9, %2
  %59 = shl i32 %58, 1
  %60 = xor i32 %43, %0
  %61 = shl i32 %60, 1
  %62 = or i32 %7, %0
  %63 = xor i32 %62, %1
  %64 = or i32 %28, %13
  %65 = or i32 %35, %0
  %66 = and i32 %32, %13
  %67 = and i32 %9, %46
  %68 = and i32 %2, %1
  %69 = and i32 %68, %34
  %70 = and i32 %42, %0
  %71 = or i32 %69, %70
  %72 = or i32 %7, %1
  %73 = xor i32 %8, %72
  %74 = shl i32 %73, 1
  %75 = or i32 %45, %10
  %76 = and i32 %72, %0
  %77 = and i32 %68, %0
  %78 = xor i32 %42, %0
  %79 = xor i32 %77, %78
  %80 = and i32 %13, %2
  %81 = and i32 %80, %0
  %82 = xor i32 %78, -1
  %83 = xor i32 %81, %82
  %84 = and i32 %48, %43
  %85 = and i32 %7, %10
  %86 = and i32 %45, %1
  %87 = and i32 %35, %34
  %88 = or i32 %77, %87
  %89 = or i32 %7, %10
  %90 = shl i32 %14, 1
  %91 = and i32 %1, %0
  %92 = xor i32 %91, -1
  %93 = and i32 %92, %2
  %94 = and i32 %48, %2
  %95 = xor i32 %72, -1
  %96 = xor i32 %95, %0
  %97 = xor i32 %35, -1
  %98 = or i32 %28, %97
  %99 = and i32 %29, %2
  %100 = and i32 %62, %10
  %101 = and i32 %7, %1
  %102 = xor i32 %101, -1
  %103 = add i32 %101, 1
  %104 = or i32 %46, %13
  %105 = and i32 %7, %92
  %106 = or i32 %13, %2
  %107 = xor i32 %106, %0
  %108 = or i32 %81, %107
  %109 = and i32 %29, %7
  %110 = or i32 %9, %7
  %111 = and i32 %9, %32
  %112 = and i32 %29, %43
  %113 = or i32 %101, %14
  %114 = or i32 %72, %0
  %115 = and i32 %43, %15
  %116 = xor i32 %92, %2
  %117 = xor i32 %62, -1
  %118 = or i32 %9, %117
  %119 = or i32 %45, %91
  %120 = xor i32 %28, %35
  %121 = or i32 %117, %1
  %122 = xor i32 %68, -1
  %123 = and i32 %122, %0
  %124 = and i32 %37, %13
  %125 = or i32 %97, %34
  %126 = and i32 %9, %39
  %127 = xor i32 %37, -1
  %128 = or i32 %91, %127
  %129 = and i32 %42, %92
  %130 = or i32 %7, %49
  %131 = xor i32 %72, %91
  %132 = xor i32 %35, %0
  %133 = xor i32 %37, %91
  %134 = xor i32 %8, %1
  %135 = shl i32 %134, 1
  %136 = or i32 %43, %30
  %137 = or i32 %43, %0
  %138 = or i32 %68, %14
  %139 = or i32 %42, %91
  %140 = or i32 %9, %127
  %141 = or i32 %30, %2
  %142 = or i32 %122, %34
  %143 = or i32 %117, %10
  %144 = add i32 %42, 1
  %145 = or i32 %8, %95
  %146 = shl i32 %145, 1
  %147 = or i32 %77, %132
  %148 = and i32 %45, %9
  %149 = xor i32 %107, -1
  %150 = xor i32 %81, %149
  %151 = and i32 %62, %9
  %152 = xor i32 %72, %0
  %153 = and i32 %42, %34
  %154 = or i32 %77, %153
  %155 = shl i32 %154, 1
  %156 = or i32 %45, %49
  %157 = and i32 %42, %29
  %158 = or i32 %43, %49
  %159 = or i32 %45, %1
  %160 = shl i32 %159, 1
  %161 = or i32 %127, %13
  %162 = xor i32 %8, %122
  %163 = or i32 %95, %0
  %164 = and i32 %37, %1
  %165 = xor i32 %28, %29
  %166 = or i32 %28, %9
  %167 = and i32 %46, %1
  %168 = shl i32 %167, 1
  %169 = and i32 %106, %34
  %170 = or i32 %81, %169
  %171 = or i32 %28, %101
  %172 = and i32 %45, %92
  %173 = shl i32 %172, 1
  %174 = or i32 %10, %2
  %175 = and i32 %39, %1
  %176 = and i32 %39, %10
  %177 = or i32 %46, %1
  %178 = and i32 %7, %15
  %179 = xor i32 %30, %2
  %180 = xor i32 %68, %0
  %181 = xor i32 %117, %1
  %182 = or i32 %45, %14
  %183 = xor i32 %97, %0
  %184 = and i32 %102, %34
  %185 = or i32 %95, %34
  %186 = xor i32 %55, -1
  %187 = or i32 %81, %186
  %188 = xor i32 %77, -1
  %189 = xor i32 %87, %188
  %190 = or i32 %8, %13
  %191 = xor i32 %153, %188
  %192 = xor i32 %14, %122
  %193 = or i32 %8, %9
  %194 = xor i32 %28, %48
  %195 = or i32 %91, %97
  %196 = xor i32 %49, %2
  %197 = shl i32 %196, 2
  %198 = xor i32 %132, %188
  %199 = and i32 %45, %48
  %200 = or i32 %49, %2
  %201 = xor i32 %102, %0
  %202 = add i32 %9, 1
  %203 = or i32 %68, %0
  %204 = xor i32 %122, %0
  %205 = xor i32 %28, %102
  %206 = shl i32 %15, 1
  %207 = or i32 %28, %1
  %208 = or i32 %45, %30
  %209 = or i32 %72, %34
  %210 = xor i32 %70, 2147483647
  %211 = xor i32 %210, %69
  %212 = or i32 %122, %0
  %213 = or i32 %91, %95
  %214 = and i32 %42, %15
  %215 = and i32 %80, %34
  %216 = or i32 %42, %34
  %217 = xor i32 %216, -1
  %218 = or i32 %215, %217
  %219 = xor i32 %14, %102
  %220 = shl i32 %219, 2
  %221 = or i32 %14, %7
  %222 = shl i32 %221, 1
  %223 = or i32 %42, %14
  %224 = or i32 %91, %43
  %225 = and i32 %102, %0
  %226 = and i32 %72, %34
  %227 = and i32 %37, %10
  %228 = or i32 %77, %82
  %229 = and i32 %35, %0
  %230 = or i32 %69, %229
  %231 = or i32 %45, %9
  %232 = shl i32 %231, 1
  %233 = and i32 %45, %10
  %234 = xor i32 %48, %2
  %235 = shl i32 %234, 2
  %236 = or i32 %7, %30
  %237 = xor i32 %229, -1
  %238 = xor i32 %69, %237
  %239 = or i32 %46, %49
  %240 = xor i32 %15, %2
  %241 = and i32 %45, %13
  %242 = or i32 %127, %1
  %243 = and i32 %106, %0
  %244 = xor i32 %243, -1
  %245 = xor i32 %215, %244
  %246 = xor i32 %32, %1
  %247 = or i32 %91, %117
  %248 = shl i32 %35, 1
  %249 = xor i32 %127, %1
  %250 = and i32 %32, %10
  %251 = and i32 %45, %29
  %252 = and i32 %122, %34
  %253 = or i32 %42, %30
  %254 = or i32 %215, %243
  %255 = or i32 %81, %78
  %256 = and i32 %48, %7
  %257 = or i32 %9, %46
  %258 = or i32 %97, %0
  %259 = or i32 %101, %0
  %260 = xor i32 %39, %1
  %261 = shl i32 %260, 1
  %262 = add i32 %8, 1
  %263 = or i32 %127, %10
  %264 = shl i32 %263, 2
  %265 = and i32 %10, %2
  %266 = or i32 %102, %0
  %267 = xor i32 %35, %91
  %268 = shl i32 %267, 1
  %269 = and i32 %37, %9
  %270 = and i32 %43, %92
  %271 = or i32 %101, %34
  %272 = and i32 %46, %15
  %273 = xor i32 %81, %55
  %274 = and i32 %45, %15
  %275 = or i32 %28, %10
  %276 = and i32 %62, %13
  %277 = or i32 %91, %2
  %278 = or i32 %68, %34
  %279 = xor i32 %14, %2
  %280 = xor i32 %28, %1
  %281 = xor i32 %91, %2
  %282 = or i32 %91, %7
  %283 = or i32 %46, %10
  %284 = xor i32 %215, %216
  %285 = or i32 %46, %30
  %286 = and i32 %9, %7
  %287 = or i32 %42, %49
  %288 = and i32 %46, %13
  %289 = xor i32 %62, %91
  %290 = and i32 %29, %46
  %291 = or i32 %8, %1
  %292 = and i32 %46, %92
  %293 = and i32 %62, %1
  %294 = and i32 %46, %10
  %295 = or i32 %14, %43
  %296 = or i32 %8, %68
  %297 = and i32 %43, %34
  %298 = and i32 %42, %48
  %299 = or i32 %91, %46
  %300 = xor i32 %101, %0
  %301 = or i32 %45, %13
  %302 = and i32 %97, %34
  %303 = mul i32 %302, -19
  %304 = and i32 %101, %34
  %305 = and i32 %97, %0
  %306 = mul i32 %305, -28
  %307 = and i32 %101, %0
  %308 = mul i32 %307, -9
  %309 = and i32 %95, %34
  %310 = shl i32 %309, 1
  %311 = and i32 %95, %0
  %312 = mul i32 %77, 26
  %313 = or i32 %5, %3
  %314 = xor i32 %313, %4
  %315 = and i32 %5, %4
  %316 = and i32 %18, %3
  %317 = or i32 %315, %316
  %318 = xor i32 %315, -1
  %319 = and i32 %318, %22
  %320 = shl i32 %319, 1
  %321 = and i32 %4, %3
  %322 = or i32 %5, %4
  %323 = xor i32 %322, -1
  %324 = or i32 %321, %323
  %325 = xor i32 %5, %3
  %326 = or i32 %325, %321
  %327 = xor i32 %4, %3
  %328 = and i32 %327, %318
  %329 = or i32 %18, %4
  %330 = xor i32 %327, -1
  %331 = and i32 %329, %330
  %332 = xor i32 %329, -1
  %333 = or i32 %332, %22
  %334 = and i32 %322, %3
  %335 = shl i32 %334, 1
  %336 = or i32 %22, %4
  %337 = and i32 %336, %18
  %338 = shl i32 %327, 1
  %339 = and i32 %5, %3
  %340 = and i32 %339, %4
  %341 = xor i32 %4, -1
  %342 = and i32 %325, %341
  %343 = xor i32 %342, -1
  %344 = xor i32 %340, %343
  %345 = and i32 %22, %5
  %346 = and i32 %345, %4
  %347 = xor i32 %325, %4
  %348 = or i32 %346, %347
  %349 = or i32 %316, %341
  %350 = xor i32 %336, -1
  %351 = xor i32 %5, %4
  %352 = or i32 %351, %350
  %353 = or i32 %325, %341
  %354 = xor i32 %340, %347
  %355 = or i32 %22, %5
  %356 = and i32 %355, %341
  %357 = or i32 %346, %356
  %358 = or i32 %351, %22
  %359 = and i32 %329, %22
  %360 = or i32 %4, %3
  %361 = xor i32 %360, -1
  %362 = xor i32 %361, %5
  %363 = and i32 %325, %360
  %364 = xor i32 %313, %321
  %365 = xor i32 %321, -1
  %366 = and i32 %365, %5
  %367 = and i32 %322, %327
  %368 = and i32 %351, %330
  %369 = xor i32 %332, %3
  %370 = or i32 %23, %327
  %371 = or i32 %327, %5
  %372 = xor i32 %351, -1
  %373 = or i32 %372, %330
  %374 = and i32 %22, %4
  %375 = and i32 %313, %341
  %376 = shl i32 %375, 1
  %377 = xor i32 %23, -1
  %378 = and i32 %377, %3
  %379 = and i32 %345, %341
  %380 = xor i32 %379, %353
  %381 = xor i32 %315, %3
  %382 = shl i32 %381, 1
  %383 = xor i32 %316, -1
  %384 = add i32 %316, 1
  %385 = xor i32 %374, -1
  %386 = and i32 %18, %385
  %387 = shl i32 %386, 1
  %388 = or i32 %340, %342
  %389 = xor i32 %19, %321
  %390 = and i32 %377, %330
  %391 = and i32 %351, %327
  %392 = xor i32 %315, %383
  %393 = xor i32 %355, %4
  %394 = or i32 %346, %393
  %395 = or i32 %325, %361
  %396 = or i32 %339, %4
  %397 = shl i32 %396, 1
  %398 = and i32 %372, %365
  %399 = shl i32 %398, 1
  %400 = and i32 %19, %4
  %401 = and i32 %355, %4
  %402 = or i32 %379, %401
  %403 = xor i32 %23, %3
  %404 = xor i32 %383, %4
  %405 = xor i32 %346, -1
  %406 = xor i32 %356, %405
  %407 = or i32 %383, %341
  %408 = xor i32 %325, -1
  %409 = and i32 %360, %408
  %410 = shl i32 %409, 1
  %411 = and i32 %360, %372
  %412 = and i32 %325, %4
  %413 = shl i32 %412, 1
  %414 = or i32 %351, %3
  %415 = or i32 %408, %361
  %416 = and i32 %19, %341
  %417 = xor i32 %377, %3
  %418 = or i32 %325, %374
  %419 = and i32 %385, %5
  %420 = xor i32 %347, %405
  %421 = add i32 %3, 1
  %422 = or i32 %323, %330
  %423 = or i32 %350, %5
  %424 = or i32 %374, %372
  %425 = and i32 %351, %365
  %426 = or i32 %313, %341
  %427 = or i32 %340, %314
  %428 = add i32 %327, 1
  %429 = xor i32 %329, %3
  %430 = xor i32 %353, -1
  %431 = or i32 %379, %430
  %432 = xor i32 %313, -1
  %433 = or i32 %432, %4
  %434 = and i32 %432, %341
  %435 = mul i32 %434, -10
  %436 = and i32 %432, %4
  %437 = and i32 %316, %4
  %438 = xor i32 %19, -1
  %439 = and i32 %438, %341
  %440 = mul i32 %439, -6
  %441 = and i32 %339, %341
  %442 = mul i32 %441, -12
  %443 = and i32 %438, %4
  %444 = sub i32 %286, %304
  %445 = sub i32 %444, %175
  %446 = sub i32 %445, %121
  %447 = add i32 %446, %349
  %448 = add i32 %447, %436
  %449 = mul i32 %448, 5
  %450 = add i32 %253, %69
  %451 = add i32 %450, %252
  %452 = add i32 %451, %148
  %453 = add i32 %452, %354
  %454 = shl i32 %453, 2
  %455 = add i32 %443, %311
  %456 = add i32 %455, %340
  %457 = mul i32 %456, 7
  %458 = add i32 %370, %199
  %459 = add i32 %458, %357
  %460 = mul i32 %459, 3
  %461 = sub i32 -3, %91
  %462 = add i32 %461, %30
  %463 = add i32 %462, %277
  %464 = add i32 %463, %256
  %465 = add i32 %464, %72
  %466 = add i32 %465, %8
  %467 = add i32 %466, %298
  %468 = add i32 %467, %285
  %469 = add i32 %468, %271
  %470 = add i32 %469, %239
  %471 = add i32 %470, %201
  %472 = add i32 %471, %181
  %473 = add i32 %472, %163
  %474 = add i32 %473, %156
  %475 = add i32 %474, %140
  %476 = add i32 %475, %128
  %477 = add i32 %476, %124
  %478 = add i32 %477, %84
  %479 = add i32 %478, %75
  %480 = add i32 %479, %40
  %481 = add i32 %480, %38
  %482 = add i32 %481, %230
  %483 = add i32 %482, %170
  %484 = add i32 %483, %419
  %485 = add i32 %484, %211
  %486 = add i32 %485, %339
  %487 = add i32 %486, %429
  %488 = add i32 %487, %437
  %489 = add i32 %488, %426
  %490 = add i32 %489, %422
  %491 = add i32 %490, %367
  %492 = shl i32 %491, 1
  %493 = sub i32 2, %0
  %494 = sub i32 %493, %1
  %495 = add i32 %494, %13
  %496 = sub i32 %495, %2
  %497 = add i32 %496, %202
  %498 = sub i32 %497, %91
  %499 = add i32 %498, %7
  %500 = add i32 %499, %9
  %501 = sub i32 %500, %29
  %502 = sub i32 %501, %27
  %503 = sub i32 %502, %41
  %504 = add i32 %503, %53
  %505 = add i32 %504, %57
  %506 = sub i32 %505, %85
  %507 = add i32 %506, %89
  %508 = sub i32 %507, %90
  %509 = add i32 %508, %93
  %510 = add i32 %509, %94
  %511 = sub i32 %510, %99
  %512 = add i32 %511, %103
  %513 = add i32 %512, %101
  %514 = sub i32 %513, %105
  %515 = sub i32 %514, %62
  %516 = add i32 %515, %109
  %517 = sub i32 %516, %110
  %518 = sub i32 %517, %116
  %519 = add i32 %518, %122
  %520 = add i32 %519, %130
  %521 = sub i32 %520, %45
  %522 = sub i32 %521, %141
  %523 = add i32 %522, %144
  %524 = add i32 %523, %97
  %525 = sub i32 %524, %174
  %526 = add i32 %525, %178
  %527 = sub i32 %526, %179
  %528 = sub i32 %527, %200
  %529 = sub i32 %528, %206
  %530 = add i32 %529, %236
  %531 = sub i32 %530, %240
  %532 = sub i32 %531, %42
  %533 = add i32 %532, %117
  %534 = add i32 %533, %95
  %535 = add i32 %534, %262
  %536 = add i32 %535, %265
  %537 = sub i32 %536, %279
  %538 = sub i32 %537, %281
  %539 = sub i32 %538, %282
  %540 = sub i32 %539, %68
  %541 = add i32 %540, %421
  %542 = add i32 %541, %31
  %543 = sub i32 %542, %33
  %544 = sub i32 %543, %36
  %545 = add i32 %544, %44
  %546 = sub i32 %545, %47
  %547 = sub i32 %546, %52
  %548 = add i32 %547, %54
  %549 = sub i32 %548, %59
  %550 = add i32 %549, %63
  %551 = add i32 %550, %64
  %552 = add i32 %551, %65
  %553 = sub i32 %552, %66
  %554 = sub i32 %553, %67
  %555 = add i32 %554, %76
  %556 = sub i32 %555, %86
  %557 = sub i32 %556, %96
  %558 = sub i32 %557, %98
  %559 = add i32 %558, %100
  %560 = add i32 %559, %104
  %561 = sub i32 %560, %111
  %562 = sub i32 %561, %112
  %563 = add i32 %562, %113
  %564 = sub i32 %563, %114
  %565 = sub i32 %564, %115
  %566 = add i32 %565, %118
  %567 = sub i32 %566, %70
  %568 = sub i32 %567, %119
  %569 = add i32 %568, %120
  %570 = add i32 %569, %123
  %571 = add i32 %570, %125
  %572 = add i32 %571, %126
  %573 = sub i32 %572, %129
  %574 = add i32 %573, %131
  %575 = add i32 %574, %132
  %576 = sub i32 %575, %133
  %577 = add i32 %576, %136
  %578 = sub i32 %577, %137
  %579 = sub i32 %578, %138
  %580 = add i32 %579, %139
  %581 = add i32 %580, %142
  %582 = add i32 %581, %143
  %583 = sub i32 %582, %151
  %584 = sub i32 %583, %152
  %585 = add i32 %584, %153
  %586 = sub i32 %585, %157
  %587 = add i32 %586, %158
  %588 = add i32 %587, %161
  %589 = sub i32 %588, %162
  %590 = add i32 %589, %164
  %591 = sub i32 %590, %165
  %592 = add i32 %591, %166
  %593 = add i32 %592, %171
  %594 = sub i32 %593, %176
  %595 = add i32 %594, %87
  %596 = add i32 %595, %177
  %597 = sub i32 %596, %180
  %598 = add i32 %597, %182
  %599 = sub i32 %598, %183
  %600 = add i32 %599, %184
  %601 = add i32 %600, %185
  %602 = add i32 %601, %190
  %603 = add i32 %602, %192
  %604 = add i32 %603, %193
  %605 = sub i32 %604, %194
  %606 = add i32 %605, %195
  %607 = sub i32 %606, %197
  %608 = add i32 %607, %203
  %609 = add i32 %608, %204
  %610 = sub i32 %609, %205
  %611 = sub i32 %610, %207
  %612 = sub i32 %611, %208
  %613 = sub i32 %612, %209
  %614 = sub i32 %613, %212
  %615 = sub i32 %614, %213
  %616 = add i32 %615, %214
  %617 = sub i32 %616, %222
  %618 = sub i32 %617, %223
  %619 = add i32 %618, %224
  %620 = sub i32 %619, %225
  %621 = add i32 %620, %226
  %622 = sub i32 %621, %227
  %623 = sub i32 %622, %233
  %624 = sub i32 %623, %235
  %625 = sub i32 %624, %241
  %626 = add i32 %625, %242
  %627 = add i32 %626, %246
  %628 = sub i32 %627, %247
  %629 = sub i32 %628, %248
  %630 = sub i32 %629, %249
  %631 = add i32 %630, %250
  %632 = add i32 %631, %251
  %633 = sub i32 %632, %257
  %634 = add i32 %633, %258
  %635 = sub i32 %634, %259
  %636 = add i32 %635, %266
  %637 = sub i32 %636, %78
  %638 = sub i32 %637, %269
  %639 = add i32 %638, %270
  %640 = add i32 %639, %272
  %641 = sub i32 %640, %274
  %642 = add i32 %641, %275
  %643 = add i32 %642, %276
  %644 = sub i32 %643, %278
  %645 = sub i32 %644, %280
  %646 = add i32 %645, %216
  %647 = add i32 %646, %283
  %648 = add i32 %647, %229
  %649 = sub i32 %648, %287
  %650 = sub i32 %649, %288
  %651 = sub i32 %650, %289
  %652 = sub i32 %651, %290
  %653 = sub i32 %652, %291
  %654 = add i32 %653, %292
  %655 = sub i32 %654, %293
  %656 = add i32 %655, %294
  %657 = sub i32 %656, %295
  %658 = add i32 %657, %296
  %659 = sub i32 %658, %297
  %660 = add i32 %659, %299
  %661 = add i32 %660, %300
  %662 = add i32 %661, %301
  %663 = sub i32 %662, %51
  %664 = sub i32 %663, %56
  %665 = sub i32 %664, %61
  %666 = add i32 %665, %71
  %667 = sub i32 %666, %74
  %668 = add i32 %667, %79
  %669 = add i32 %668, %83
  %670 = sub i32 %669, %88
  %671 = sub i32 %670, %108
  %672 = sub i32 %671, %135
  %673 = sub i32 %672, %146
  %674 = add i32 %673, %147
  %675 = add i32 %674, %150
  %676 = sub i32 %675, %160
  %677 = sub i32 %676, %168
  %678 = sub i32 %677, %173
  %679 = sub i32 %678, %187
  %680 = sub i32 %679, %189
  %681 = add i32 %680, %191
  %682 = add i32 %681, %198
  %683 = sub i32 %682, %218
  %684 = sub i32 %683, %220
  %685 = add i32 %684, %228
  %686 = sub i32 %685, %232
  %687 = add i32 %686, %238
  %688 = sub i32 %687, %245
  %689 = add i32 %688, %254
  %690 = sub i32 %689, %255
  %691 = sub i32 %690, %261
  %692 = sub i32 %691, %264
  %693 = sub i32 %692, %268
  %694 = add i32 %693, %273
  %695 = sub i32 %694, %284
  %696 = add i32 %695, %303
  %697 = add i32 %696, %306
  %698 = add i32 %697, %308
  %699 = sub i32 %698, %310
  %700 = add i32 %699, %312
  %701 = sub i32 %700, %374
  %702 = add i32 %701, %321
  %703 = add i32 %702, %428
  %704 = sub i32 %703, %155
  %705 = sub i32 %704, %322
  %706 = add i32 %705, %313
  %707 = add i32 %706, %337
  %708 = sub i32 %707, %338
  %709 = add i32 %708, %362
  %710 = sub i32 %709, %366
  %711 = sub i32 %710, %371
  %712 = add i32 %711, %384
  %713 = add i32 %712, %377
  %714 = sub i32 %713, %423
  %715 = sub i32 %714, %314
  %716 = sub i32 %715, %317
  %717 = sub i32 %716, %324
  %718 = sub i32 %717, %326
  %719 = add i32 %718, %328
  %720 = add i32 %719, %331
  %721 = add i32 %720, %333
  %722 = sub i32 %721, %352
  %723 = add i32 %722, %353
  %724 = add i32 %723, %358
  %725 = sub i32 %724, %359
  %726 = sub i32 %725, %363
  %727 = add i32 %726, %364
  %728 = sub i32 %727, %368
  %729 = sub i32 %728, %369
  %730 = add i32 %729, %373
  %731 = sub i32 %730, %378
  %732 = sub i32 %731, %387
  %733 = add i32 %732, %389
  %734 = add i32 %733, %390
  %735 = add i32 %734, %391
  %736 = add i32 %735, %392
  %737 = sub i32 %736, %395
  %738 = sub i32 %737, %400
  %739 = add i32 %738, %403
  %740 = add i32 %739, %404
  %741 = sub i32 %740, %407
  %742 = sub i32 %741, %411
  %743 = add i32 %742, %414
  %744 = add i32 %743, %415
  %745 = sub i32 %744, %416
  %746 = add i32 %745, %417
  %747 = add i32 %746, %418
  %748 = sub i32 %747, %424
  %749 = sub i32 %748, %425
  %750 = sub i32 %749, %433
  %751 = sub i32 %750, %320
  %752 = sub i32 %751, %335
  %753 = sub i32 %752, %344
  %754 = add i32 %753, %348
  %755 = sub i32 %754, %376
  %756 = add i32 %755, %380
  %757 = sub i32 %756, %382
  %758 = sub i32 %757, %388
  %759 = sub i32 %758, %394
  %760 = sub i32 %759, %397
  %761 = sub i32 %760, %399
  %762 = sub i32 %761, %402
  %763 = sub i32 %762, %406
  %764 = sub i32 %763, %410
  %765 = sub i32 %764, %413
  %766 = add i32 %765, %420
  %767 = sub i32 %766, %427
  %768 = sub i32 %767, %431
  %769 = add i32 %768, %435
  %770 = add i32 %769, %440
  %771 = add i32 %770, %442
  %772 = add i32 %771, %457
  %773 = add i32 %772, %460
  %774 = add i32 %773, %449
  %775 = add i32 %774, %454
  %776 = add i32 %775, %492
  %777 = icmp eq i32 %26, %776
  %778 = select i1 %777, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %779 = tail call i32 @puts(i8* nonnull dereferenceable(1) %778)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
