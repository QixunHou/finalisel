digraph "DFG for'crackme' function" {
	Node0x1e34690[shape=record, label="  %3 = and i32 %1, %0"];
	Node0x1e34d40[shape=record, label="  %4 = xor i32 %3, -1"];
	Node0x1e34e00[shape=record, label="  %5 = sub i32 %4, %1"];
	Node0x1e34e70[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0x1e34ee0[shape=record, label="  %7 = sub i32 %6, %0"];
	Node0x1e34f50[shape=record, label="  %8 = shl i32 %0, 2"];
	Node0x1e34ff0[shape=record, label="  %9 = xor i32 %8, -4"];
	Node0x1e35060[shape=record, label="  %10 = add i32 %7, %9"];
	Node0x1e350d0[shape=record, label="  %11 = or i32 %6, %0"];
	Node0x1e35140[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1e351b0[shape=record, label="  %13 = add i32 %10, %12"];
	Node0x1e35220[shape=record, label="  %14 = xor i32 %1, %0"];
	Node0x1e352c0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1e35330[shape=record, label="  %16 = xor i32 %14, -1"];
	Node0x1e353a0[shape=record, label="  %17 = and i32 %6, %0"];
	Node0x1e35410[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x1e35480[shape=record, label="  %19 = or i32 %1, %0"];
	Node0x1e354f0[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x1e35590[shape=record, label="  %21 = mul i32 %20, -6"];
	Node0x1e35600[shape=record, label="  %22 = shl i32 %11, 2"];
	Node0x1e35670[shape=record, label="  %23 = xor i32 %22, -4"];
	Node0x1e35710[shape=record, label="  %24 = mul i32 %17, 3"];
	Node0x1e35780[shape=record, label="  %25 = shl i32 %3, 1"];
	Node0x1e357f0[shape=record, label="  %26 = add i32 %13, %16"];
	Node0x1e35860[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x1e358d0[shape=record, label="  %28 = sub i32 %27, %15"];
	Node0x1e35940[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x1e359b0[shape=record, label="  %30 = add i32 %29, %24"];
	Node0x1e35a20[shape=record, label="  %31 = sub i32 %30, %25"];
	Node0x1e35a90[shape=record, label="  %32 = sub i32 %31, %23"];
	Node0x1e35d10[shape=record, label="  %33 = icmp eq i32 %5, %32"];
	Node0x1dd5268[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e361b0[shape=record, label="  %35 = tail call i32 @puts(i8* nonnull dereferenceable(1) %34)"];
	Node0x1e36200[shape=record, label="  ret void"];
	Node0x1e34690 -> Node0x1e34d40;
	Node0x1e34d40 -> Node0x1e34e00;
	Node0x1e34e00 -> Node0x1e34e70;
	Node0x1e34e70 -> Node0x1e34ee0;
	Node0x1e34ee0 -> Node0x1e34f50;
	Node0x1e34f50 -> Node0x1e34ff0;
	Node0x1e34ff0 -> Node0x1e35060;
	Node0x1e35060 -> Node0x1e350d0;
	Node0x1e350d0 -> Node0x1e35140;
	Node0x1e35140 -> Node0x1e351b0;
	Node0x1e351b0 -> Node0x1e35220;
	Node0x1e35220 -> Node0x1e352c0;
	Node0x1e352c0 -> Node0x1e35330;
	Node0x1e35330 -> Node0x1e353a0;
	Node0x1e353a0 -> Node0x1e35410;
	Node0x1e35410 -> Node0x1e35480;
	Node0x1e35480 -> Node0x1e354f0;
	Node0x1e354f0 -> Node0x1e35590;
	Node0x1e35590 -> Node0x1e35600;
	Node0x1e35600 -> Node0x1e35670;
	Node0x1e35670 -> Node0x1e35710;
	Node0x1e35710 -> Node0x1e35780;
	Node0x1e35780 -> Node0x1e357f0;
	Node0x1e357f0 -> Node0x1e35860;
	Node0x1e35860 -> Node0x1e358d0;
	Node0x1e358d0 -> Node0x1e35940;
	Node0x1e35940 -> Node0x1e359b0;
	Node0x1e359b0 -> Node0x1e35a20;
	Node0x1e35a20 -> Node0x1e35a90;
	Node0x1e35a90 -> Node0x1e35d10;
	Node0x1e35d10 -> Node0x1dd5268;
	Node0x1dd5268 -> Node0x1e361b0;
	Node0x1e361b0 -> Node0x1e36200;
edge [color=red]
	Node0x1e34690 -> Node0x1e34d40;
	Node0x1e34d40 -> Node0x1e34e00;
	Node0x1e34e70 -> Node0x1e34ee0;
	Node0x1e34f50 -> Node0x1e34ff0;
	Node0x1e34ee0 -> Node0x1e35060;
	Node0x1e34ff0 -> Node0x1e35060;
	Node0x1e34e70 -> Node0x1e350d0;
	Node0x1e350d0 -> Node0x1e35140;
	Node0x1e35060 -> Node0x1e351b0;
	Node0x1e35140 -> Node0x1e351b0;
	Node0x1e35220 -> Node0x1e352c0;
	Node0x1e35220 -> Node0x1e35330;
	Node0x1e34e70 -> Node0x1e353a0;
	Node0x1e353a0 -> Node0x1e35410;
	Node0x1e35480 -> Node0x1e354f0;
	Node0x1e354f0 -> Node0x1e35590;
	Node0x1e350d0 -> Node0x1e35600;
	Node0x1e35600 -> Node0x1e35670;
	Node0x1e353a0 -> Node0x1e35710;
	Node0x1e34690 -> Node0x1e35780;
	Node0x1e351b0 -> Node0x1e357f0;
	Node0x1e35330 -> Node0x1e357f0;
	Node0x1e357f0 -> Node0x1e35860;
	Node0x1e35410 -> Node0x1e35860;
	Node0x1e35860 -> Node0x1e358d0;
	Node0x1e352c0 -> Node0x1e358d0;
	Node0x1e358d0 -> Node0x1e35940;
	Node0x1e35590 -> Node0x1e35940;
	Node0x1e35940 -> Node0x1e359b0;
	Node0x1e35710 -> Node0x1e359b0;
	Node0x1e359b0 -> Node0x1e35a20;
	Node0x1e35780 -> Node0x1e35a20;
	Node0x1e35a20 -> Node0x1e35a90;
	Node0x1e35670 -> Node0x1e35a90;
	Node0x1e34e00 -> Node0x1e35d10;
	Node0x1e35a90 -> Node0x1e35d10;
	Node0x1e35d10 -> Node0x1dd5268;
	Node0x1dd5268 -> Node0x1e361b0;
}
