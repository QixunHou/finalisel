digraph "DFG for'main' function" {
	Node0x1e363c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e36448[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e364d8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e36938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e36a18[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e36b38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e36d70[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e36e28[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e37d98[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e38420[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x1e38490[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1e38500[shape=record, label="  %10 = sub i32 %9, %7"];
	Node0x1e38570[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1e385e0[shape=record, label="  %12 = sub i32 %11, %6"];
	Node0x1e38650[shape=record, label="  %13 = shl i32 %6, 2"];
	Node0x1e386c0[shape=record, label="  %14 = xor i32 %13, -4"];
	Node0x1e38730[shape=record, label="  %15 = add i32 %12, %14"];
	Node0x1e387a0[shape=record, label="  %16 = or i32 %6, %11"];
	Node0x1e38810[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1e38880[shape=record, label="  %18 = add i32 %15, %17"];
	Node0x1e388f0[shape=record, label="  %19 = xor i32 %7, %6"];
	Node0x1e38960[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x1e389d0[shape=record, label="  %21 = xor i32 %19, -1"];
	Node0x1e38a40[shape=record, label="  %22 = and i32 %6, %11"];
	Node0x1e38ab0[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x1e38b20[shape=record, label="  %24 = or i32 %7, %6"];
	Node0x1e38b90[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x1e38c00[shape=record, label="  %26 = mul i32 %25, -6"];
	Node0x1e38c70[shape=record, label="  %27 = shl i32 %16, 2"];
	Node0x1e38ce0[shape=record, label="  %28 = xor i32 %27, -4"];
	Node0x1e38d50[shape=record, label="  %29 = mul i32 %22, 3"];
	Node0x1e38dc0[shape=record, label="  %30 = shl i32 %8, 1"];
	Node0x1e38e30[shape=record, label="  %31 = add i32 %18, %21"];
	Node0x1e38ea0[shape=record, label="  %32 = add i32 %31, %23"];
	Node0x1e38f10[shape=record, label="  %33 = sub i32 %32, %20"];
	Node0x1e38f80[shape=record, label="  %34 = add i32 %33, %26"];
	Node0x1e38ff0[shape=record, label="  %35 = add i32 %34, %29"];
	Node0x1e39060[shape=record, label="  %36 = sub i32 %35, %30"];
	Node0x1e390d0[shape=record, label="  %37 = sub i32 %36, %28"];
	Node0x1e39140[shape=record, label="  %38 = icmp eq i32 %10, %37"];
	Node0x1dd69d8[shape=record, label="  %39 = select i1 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e391d0[shape=record, label="  %40 = call i32 @puts(i8* nonnull dereferenceable(1) %39) #5"];
	Node0x1e39428[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e39588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e39648[shape=record, label="  ret i32 0"];
	Node0x1e363c8 -> Node0x1e36448;
	Node0x1e36448 -> Node0x1e364d8;
	Node0x1e364d8 -> Node0x1e36938;
	Node0x1e36938 -> Node0x1e36a18;
	Node0x1e36a18 -> Node0x1e36b38;
	Node0x1e36b38 -> Node0x1e36d70;
	Node0x1e36d70 -> Node0x1e36e28;
	Node0x1e36e28 -> Node0x1e37d98;
	Node0x1e37d98 -> Node0x1e38420;
	Node0x1e38420 -> Node0x1e38490;
	Node0x1e38490 -> Node0x1e38500;
	Node0x1e38500 -> Node0x1e38570;
	Node0x1e38570 -> Node0x1e385e0;
	Node0x1e385e0 -> Node0x1e38650;
	Node0x1e38650 -> Node0x1e386c0;
	Node0x1e386c0 -> Node0x1e38730;
	Node0x1e38730 -> Node0x1e387a0;
	Node0x1e387a0 -> Node0x1e38810;
	Node0x1e38810 -> Node0x1e38880;
	Node0x1e38880 -> Node0x1e388f0;
	Node0x1e388f0 -> Node0x1e38960;
	Node0x1e38960 -> Node0x1e389d0;
	Node0x1e389d0 -> Node0x1e38a40;
	Node0x1e38a40 -> Node0x1e38ab0;
	Node0x1e38ab0 -> Node0x1e38b20;
	Node0x1e38b20 -> Node0x1e38b90;
	Node0x1e38b90 -> Node0x1e38c00;
	Node0x1e38c00 -> Node0x1e38c70;
	Node0x1e38c70 -> Node0x1e38ce0;
	Node0x1e38ce0 -> Node0x1e38d50;
	Node0x1e38d50 -> Node0x1e38dc0;
	Node0x1e38dc0 -> Node0x1e38e30;
	Node0x1e38e30 -> Node0x1e38ea0;
	Node0x1e38ea0 -> Node0x1e38f10;
	Node0x1e38f10 -> Node0x1e38f80;
	Node0x1e38f80 -> Node0x1e38ff0;
	Node0x1e38ff0 -> Node0x1e39060;
	Node0x1e39060 -> Node0x1e390d0;
	Node0x1e390d0 -> Node0x1e39140;
	Node0x1e39140 -> Node0x1dd69d8;
	Node0x1dd69d8 -> Node0x1e391d0;
	Node0x1e391d0 -> Node0x1e39428;
	Node0x1e39428 -> Node0x1e39588;
	Node0x1e39588 -> Node0x1e39648;
edge [color=red]
	Node0x1e363c8 -> Node0x1e364d8;
	Node0x1e364d8 -> Node0x1e36938;
	Node0x1e36448 -> Node0x1e36a18;
	Node0x1e36a18 -> Node0x1e36b38;
	Node0x1e363c8 -> Node0x1e36d70;
	Node0x1e36448 -> Node0x1e36d70;
	Node0x1e363c8 -> Node0x1e36e28;
	Node0x1e36448 -> Node0x1e37d98;
	Node0x1e37d98 -> Node0x1e38420;
	Node0x1e36e28 -> Node0x1e38420;
	Node0x1e38420 -> Node0x1e38490;
	Node0x1e38490 -> Node0x1e38500;
	Node0x1e37d98 -> Node0x1e38500;
	Node0x1e37d98 -> Node0x1e38570;
	Node0x1e38570 -> Node0x1e385e0;
	Node0x1e36e28 -> Node0x1e385e0;
	Node0x1e36e28 -> Node0x1e38650;
	Node0x1e38650 -> Node0x1e386c0;
	Node0x1e385e0 -> Node0x1e38730;
	Node0x1e386c0 -> Node0x1e38730;
	Node0x1e36e28 -> Node0x1e387a0;
	Node0x1e38570 -> Node0x1e387a0;
	Node0x1e387a0 -> Node0x1e38810;
	Node0x1e38730 -> Node0x1e38880;
	Node0x1e38810 -> Node0x1e38880;
	Node0x1e37d98 -> Node0x1e388f0;
	Node0x1e36e28 -> Node0x1e388f0;
	Node0x1e388f0 -> Node0x1e38960;
	Node0x1e388f0 -> Node0x1e389d0;
	Node0x1e36e28 -> Node0x1e38a40;
	Node0x1e38570 -> Node0x1e38a40;
	Node0x1e38a40 -> Node0x1e38ab0;
	Node0x1e37d98 -> Node0x1e38b20;
	Node0x1e36e28 -> Node0x1e38b20;
	Node0x1e38b20 -> Node0x1e38b90;
	Node0x1e38b90 -> Node0x1e38c00;
	Node0x1e387a0 -> Node0x1e38c70;
	Node0x1e38c70 -> Node0x1e38ce0;
	Node0x1e38a40 -> Node0x1e38d50;
	Node0x1e38420 -> Node0x1e38dc0;
	Node0x1e38880 -> Node0x1e38e30;
	Node0x1e389d0 -> Node0x1e38e30;
	Node0x1e38e30 -> Node0x1e38ea0;
	Node0x1e38ab0 -> Node0x1e38ea0;
	Node0x1e38ea0 -> Node0x1e38f10;
	Node0x1e38960 -> Node0x1e38f10;
	Node0x1e38f10 -> Node0x1e38f80;
	Node0x1e38c00 -> Node0x1e38f80;
	Node0x1e38f80 -> Node0x1e38ff0;
	Node0x1e38d50 -> Node0x1e38ff0;
	Node0x1e38ff0 -> Node0x1e39060;
	Node0x1e38dc0 -> Node0x1e39060;
	Node0x1e39060 -> Node0x1e390d0;
	Node0x1e38ce0 -> Node0x1e390d0;
	Node0x1e38500 -> Node0x1e39140;
	Node0x1e390d0 -> Node0x1e39140;
	Node0x1e39140 -> Node0x1dd69d8;
	Node0x1dd69d8 -> Node0x1e391d0;
	Node0x1e36a18 -> Node0x1e39428;
	Node0x1e364d8 -> Node0x1e39588;
}
