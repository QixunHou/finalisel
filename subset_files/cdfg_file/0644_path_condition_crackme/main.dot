digraph "DFG for'main' function" {
	Node0x1f90d98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f90e18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f90ea8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f90f08[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1f91388[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f947d8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1f948b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f94978[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1f94a28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f94c88[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1f94d48[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f95cb8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f96328[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f96420[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1f96628[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f96788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f96898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f96958[shape=record, label="  ret i32 0"];
	Node0x1f90d98 -> Node0x1f90e18;
	Node0x1f90e18 -> Node0x1f90ea8;
	Node0x1f90ea8 -> Node0x1f90f08;
	Node0x1f90f08 -> Node0x1f91388;
	Node0x1f91388 -> Node0x1f947d8;
	Node0x1f947d8 -> Node0x1f948b8;
	Node0x1f948b8 -> Node0x1f94978;
	Node0x1f94978 -> Node0x1f94a28;
	Node0x1f94a28 -> Node0x1f94c88;
	Node0x1f94c88 -> Node0x1f94d48;
	Node0x1f94d48 -> Node0x1f95cb8;
	Node0x1f95cb8 -> Node0x1f96328;
	Node0x1f96328 -> Node0x1f96420;
	Node0x1f96420 -> Node0x1f96628;
	Node0x1f96628 -> Node0x1f96788;
	Node0x1f96788 -> Node0x1f96898;
	Node0x1f96898 -> Node0x1f96958;
edge [color=red]
	Node0x1f90d98 -> Node0x1f90f08;
	Node0x1f90f08 -> Node0x1f91388;
	Node0x1f90e18 -> Node0x1f947d8;
	Node0x1f947d8 -> Node0x1f948b8;
	Node0x1f90ea8 -> Node0x1f94978;
	Node0x1f94978 -> Node0x1f94a28;
	Node0x1f90d98 -> Node0x1f94c88;
	Node0x1f90e18 -> Node0x1f94c88;
	Node0x1f90ea8 -> Node0x1f94c88;
	Node0x1f90d98 -> Node0x1f94d48;
	Node0x1f90e18 -> Node0x1f95cb8;
	Node0x1f90ea8 -> Node0x1f96328;
	Node0x1f94d48 -> Node0x1f96420;
	Node0x1f95cb8 -> Node0x1f96420;
	Node0x1f96328 -> Node0x1f96420;
	Node0x1f94978 -> Node0x1f96628;
	Node0x1f947d8 -> Node0x1f96788;
	Node0x1f90f08 -> Node0x1f96898;
}
