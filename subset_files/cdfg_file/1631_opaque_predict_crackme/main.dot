digraph "DFG for'main' function" {
	Node0xa82a08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa82a88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa82b18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xa82b78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xa82c28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xa83058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa83138[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xa83238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa832f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xa833a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xa83468[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xa83518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xa7dab0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xa83718[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa84688[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa84cf8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xa84d58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xa84dd0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0xa84e40[shape=record, label="  %15 = add i32 %13, 1"];
	Node0xa84eb0[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0xa84f20[shape=record, label="  %17 = and i32 %13, %16"];
	Node0xa84f90[shape=record, label="  %18 = shl i32 %17, 2"];
	Node0xa85000[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0xa85070[shape=record, label="  %20 = sub i32 %15, %19"];
	Node0xa850e0[shape=record, label="  %21 = xor i32 %12, %11"];
	Node0xa85150[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0xa851c0[shape=record, label="  %23 = or i32 %22, 1"];
	Node0xa85230[shape=record, label="  %24 = or i32 %12, %11"];
	Node0xa852a0[shape=record, label="  %25 = and i32 %12, %11"];
	Node0xa85310[shape=record, label="  %26 = and i32 %11, %14"];
	Node0xa85380[shape=record, label="  %27 = or i32 %13, %10"];
	Node0xa853f0[shape=record, label="  %28 = or i32 %13, %16"];
	Node0xa85460[shape=record, label="  %29 = and i32 %13, %10"];
	Node0xa854d0[shape=record, label="  %30 = xor i32 %13, %10"];
	Node0xa85540[shape=record, label="  %31 = shl i32 %27, 1"];
	Node0xa855b0[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0xa85620[shape=record, label="  %33 = xor i32 %28, -1"];
	Node0xa85690[shape=record, label="  %34 = mul i32 %17, 5"];
	Node0xa85700[shape=record, label="  %35 = sub i32 %11, %10"];
	Node0xa85770[shape=record, label="  %36 = sub i32 %35, %24"];
	Node0xa857e0[shape=record, label="  %37 = add i32 %36, %29"];
	Node0xa85850[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0xa858c0[shape=record, label="  %39 = sub i32 1, %11"];
	Node0xa85930[shape=record, label="  %40 = add i32 %39, %25"];
	Node0xa859a0[shape=record, label="  %41 = sub i32 %40, %26"];
	Node0xa85a10[shape=record, label="  %42 = sub i32 %41, %27"];
	Node0xa85a80[shape=record, label="  %43 = sub i32 %42, %28"];
	Node0xa85af0[shape=record, label="  %44 = sub i32 %43, %30"];
	Node0xa85b60[shape=record, label="  %45 = add i32 %44, %33"];
	Node0xa85bd0[shape=record, label="  %46 = add i32 %45, %23"];
	Node0xa85c40[shape=record, label="  %47 = add i32 %46, %34"];
	Node0xa85cb0[shape=record, label="  %48 = sub i32 %47, %32"];
	Node0xa85d20[shape=record, label="  %49 = add i32 %48, %38"];
	Node0xa85d90[shape=record, label="  %50 = icmp eq i32 %20, %49"];
	Node0xa228b8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa85e20[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0xa860c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xa86228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xa86338[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa86448[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa86508[shape=record, label="  ret i32 0"];
	Node0xa82a08 -> Node0xa82a88;
	Node0xa82a88 -> Node0xa82b18;
	Node0xa82b18 -> Node0xa82b78;
	Node0xa82b78 -> Node0xa82c28;
	Node0xa82c28 -> Node0xa83058;
	Node0xa83058 -> Node0xa83138;
	Node0xa83138 -> Node0xa83238;
	Node0xa83238 -> Node0xa832f8;
	Node0xa832f8 -> Node0xa833a8;
	Node0xa833a8 -> Node0xa83468;
	Node0xa83468 -> Node0xa83518;
	Node0xa83518 -> Node0xa7dab0;
	Node0xa7dab0 -> Node0xa83718;
	Node0xa83718 -> Node0xa84688;
	Node0xa84688 -> Node0xa84cf8;
	Node0xa84cf8 -> Node0xa84d58;
	Node0xa84d58 -> Node0xa84dd0;
	Node0xa84dd0 -> Node0xa84e40;
	Node0xa84e40 -> Node0xa84eb0;
	Node0xa84eb0 -> Node0xa84f20;
	Node0xa84f20 -> Node0xa84f90;
	Node0xa84f90 -> Node0xa85000;
	Node0xa85000 -> Node0xa85070;
	Node0xa85070 -> Node0xa850e0;
	Node0xa850e0 -> Node0xa85150;
	Node0xa85150 -> Node0xa851c0;
	Node0xa851c0 -> Node0xa85230;
	Node0xa85230 -> Node0xa852a0;
	Node0xa852a0 -> Node0xa85310;
	Node0xa85310 -> Node0xa85380;
	Node0xa85380 -> Node0xa853f0;
	Node0xa853f0 -> Node0xa85460;
	Node0xa85460 -> Node0xa854d0;
	Node0xa854d0 -> Node0xa85540;
	Node0xa85540 -> Node0xa855b0;
	Node0xa855b0 -> Node0xa85620;
	Node0xa85620 -> Node0xa85690;
	Node0xa85690 -> Node0xa85700;
	Node0xa85700 -> Node0xa85770;
	Node0xa85770 -> Node0xa857e0;
	Node0xa857e0 -> Node0xa85850;
	Node0xa85850 -> Node0xa858c0;
	Node0xa858c0 -> Node0xa85930;
	Node0xa85930 -> Node0xa859a0;
	Node0xa859a0 -> Node0xa85a10;
	Node0xa85a10 -> Node0xa85a80;
	Node0xa85a80 -> Node0xa85af0;
	Node0xa85af0 -> Node0xa85b60;
	Node0xa85b60 -> Node0xa85bd0;
	Node0xa85bd0 -> Node0xa85c40;
	Node0xa85c40 -> Node0xa85cb0;
	Node0xa85cb0 -> Node0xa85d20;
	Node0xa85d20 -> Node0xa85d90;
	Node0xa85d90 -> Node0xa228b8;
	Node0xa228b8 -> Node0xa85e20;
	Node0xa85e20 -> Node0xa860c8;
	Node0xa860c8 -> Node0xa86228;
	Node0xa86228 -> Node0xa86338;
	Node0xa86338 -> Node0xa86448;
	Node0xa86448 -> Node0xa86508;
edge [color=red]
	Node0xa82a08 -> Node0xa82c28;
	Node0xa82c28 -> Node0xa83058;
	Node0xa82a88 -> Node0xa83138;
	Node0xa83138 -> Node0xa83238;
	Node0xa82b18 -> Node0xa832f8;
	Node0xa832f8 -> Node0xa833a8;
	Node0xa82b78 -> Node0xa83468;
	Node0xa83468 -> Node0xa83518;
	Node0xa82a08 -> Node0xa7dab0;
	Node0xa82a88 -> Node0xa7dab0;
	Node0xa82b18 -> Node0xa7dab0;
	Node0xa82b78 -> Node0xa7dab0;
	Node0xa82a08 -> Node0xa83718;
	Node0xa82a88 -> Node0xa84688;
	Node0xa82b18 -> Node0xa84cf8;
	Node0xa82b78 -> Node0xa84d58;
	Node0xa84cf8 -> Node0xa84dd0;
	Node0xa84d58 -> Node0xa84e40;
	Node0xa83718 -> Node0xa84eb0;
	Node0xa84d58 -> Node0xa84f20;
	Node0xa84eb0 -> Node0xa84f20;
	Node0xa84f20 -> Node0xa84f90;
	Node0xa84f90 -> Node0xa85000;
	Node0xa84e40 -> Node0xa85070;
	Node0xa85000 -> Node0xa85070;
	Node0xa84cf8 -> Node0xa850e0;
	Node0xa84688 -> Node0xa850e0;
	Node0xa850e0 -> Node0xa85150;
	Node0xa85150 -> Node0xa851c0;
	Node0xa84cf8 -> Node0xa85230;
	Node0xa84688 -> Node0xa85230;
	Node0xa84cf8 -> Node0xa852a0;
	Node0xa84688 -> Node0xa852a0;
	Node0xa84688 -> Node0xa85310;
	Node0xa84dd0 -> Node0xa85310;
	Node0xa84d58 -> Node0xa85380;
	Node0xa83718 -> Node0xa85380;
	Node0xa84d58 -> Node0xa853f0;
	Node0xa84eb0 -> Node0xa853f0;
	Node0xa84d58 -> Node0xa85460;
	Node0xa83718 -> Node0xa85460;
	Node0xa84d58 -> Node0xa854d0;
	Node0xa83718 -> Node0xa854d0;
	Node0xa85380 -> Node0xa85540;
	Node0xa85540 -> Node0xa855b0;
	Node0xa853f0 -> Node0xa85620;
	Node0xa84f20 -> Node0xa85690;
	Node0xa84688 -> Node0xa85700;
	Node0xa83718 -> Node0xa85700;
	Node0xa85700 -> Node0xa85770;
	Node0xa85230 -> Node0xa85770;
	Node0xa85770 -> Node0xa857e0;
	Node0xa85460 -> Node0xa857e0;
	Node0xa857e0 -> Node0xa85850;
	Node0xa84688 -> Node0xa858c0;
	Node0xa858c0 -> Node0xa85930;
	Node0xa852a0 -> Node0xa85930;
	Node0xa85930 -> Node0xa859a0;
	Node0xa85310 -> Node0xa859a0;
	Node0xa859a0 -> Node0xa85a10;
	Node0xa85380 -> Node0xa85a10;
	Node0xa85a10 -> Node0xa85a80;
	Node0xa853f0 -> Node0xa85a80;
	Node0xa85a80 -> Node0xa85af0;
	Node0xa854d0 -> Node0xa85af0;
	Node0xa85af0 -> Node0xa85b60;
	Node0xa85620 -> Node0xa85b60;
	Node0xa85b60 -> Node0xa85bd0;
	Node0xa851c0 -> Node0xa85bd0;
	Node0xa85bd0 -> Node0xa85c40;
	Node0xa85690 -> Node0xa85c40;
	Node0xa85c40 -> Node0xa85cb0;
	Node0xa855b0 -> Node0xa85cb0;
	Node0xa85cb0 -> Node0xa85d20;
	Node0xa85850 -> Node0xa85d20;
	Node0xa85070 -> Node0xa85d90;
	Node0xa85d20 -> Node0xa85d90;
	Node0xa85d90 -> Node0xa228b8;
	Node0xa228b8 -> Node0xa85e20;
	Node0xa83468 -> Node0xa860c8;
	Node0xa832f8 -> Node0xa86228;
	Node0xa83138 -> Node0xa86338;
	Node0xa82c28 -> Node0xa86448;
}
