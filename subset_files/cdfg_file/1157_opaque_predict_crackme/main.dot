digraph "DFG for'main' function" {
	Node0x1f26d98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f26e18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f26ea8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f26f08[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1f26fb8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1f273e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f274c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1f275c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f27688[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1f27738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1f277f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1f278a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1f21bb0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1f27aa8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f28a18[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f29088[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f290e8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1f29160[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1f291d0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1f29240[shape=record, label="  %16 = mul i32 %15, 5"];
	Node0x1f292b0[shape=record, label="  %17 = xor i32 %10, -1"];
	Node0x1f29320[shape=record, label="  %18 = or i32 %13, %10"];
	Node0x1f29390[shape=record, label="  %19 = add i32 %12, %17"];
	Node0x1f29400[shape=record, label="  %20 = add i32 %19, %16"];
	Node0x1f29470[shape=record, label="  %21 = sub i32 %20, %18"];
	Node0x1f294e0[shape=record, label="  %22 = mul i32 %14, -2"];
	Node0x1f29550[shape=record, label="  %23 = or i32 %22, 1"];
	Node0x1f295c0[shape=record, label="  %24 = xor i32 %12, -1"];
	Node0x1f29630[shape=record, label="  %25 = and i32 %11, %24"];
	Node0x1f296a0[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x1f29710[shape=record, label="  %27 = or i32 %12, %11"];
	Node0x1f29780[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x1f297f0[shape=record, label="  %29 = mul i32 %28, 5"];
	Node0x1f29860[shape=record, label="  %30 = xor i32 %11, 2147483647"];
	Node0x1f298d0[shape=record, label="  %31 = and i32 %30, %12"];
	Node0x1f29940[shape=record, label="  %32 = shl i32 %25, 2"];
	Node0x1f299b0[shape=record, label="  %33 = and i32 %12, %11"];
	Node0x1f29a20[shape=record, label="  %34 = mul i32 %33, 6"];
	Node0x1f29a90[shape=record, label="  %35 = xor i32 %13, %10"];
	Node0x1f29b00[shape=record, label="  %36 = or i32 %13, %17"];
	Node0x1f29b70[shape=record, label="  %37 = shl i32 %18, 1"];
	Node0x1f29be0[shape=record, label="  %38 = xor i32 %37, -2"];
	Node0x1f29c50[shape=record, label="  %39 = xor i32 %36, -1"];
	Node0x1f29cc0[shape=record, label="  %40 = mul i32 %39, -3"];
	Node0x1f29d30[shape=record, label="  %41 = and i32 %13, %17"];
	Node0x1f29da0[shape=record, label="  %42 = add i32 %35, %31"];
	Node0x1f29e10[shape=record, label="  %43 = shl i32 %42, 1"];
	Node0x1f29e80[shape=record, label="  %44 = sub i32 %12, %11"];
	Node0x1f29ef0[shape=record, label="  %45 = add i32 %44, %26"];
	Node0x1f29f60[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x1f29fd0[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x1f2a040[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x1f2a0b0[shape=record, label="  %49 = sub i32 %48, %36"];
	Node0x1f2a120[shape=record, label="  %50 = sub i32 %49, %41"];
	Node0x1f2a190[shape=record, label="  %51 = add i32 %50, %23"];
	Node0x1f2a200[shape=record, label="  %52 = add i32 %51, %40"];
	Node0x1f2a270[shape=record, label="  %53 = add i32 %52, %38"];
	Node0x1f2a2e0[shape=record, label="  %54 = add i32 %53, %43"];
	Node0x1f2a350[shape=record, label="  %55 = icmp eq i32 %21, %54"];
	Node0x1ec68b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1f2a3e0[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x1f2a688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1f2a7e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1f2a8f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f2aa08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f2aac8[shape=record, label="  ret i32 0"];
	Node0x1f26d98 -> Node0x1f26e18;
	Node0x1f26e18 -> Node0x1f26ea8;
	Node0x1f26ea8 -> Node0x1f26f08;
	Node0x1f26f08 -> Node0x1f26fb8;
	Node0x1f26fb8 -> Node0x1f273e8;
	Node0x1f273e8 -> Node0x1f274c8;
	Node0x1f274c8 -> Node0x1f275c8;
	Node0x1f275c8 -> Node0x1f27688;
	Node0x1f27688 -> Node0x1f27738;
	Node0x1f27738 -> Node0x1f277f8;
	Node0x1f277f8 -> Node0x1f278a8;
	Node0x1f278a8 -> Node0x1f21bb0;
	Node0x1f21bb0 -> Node0x1f27aa8;
	Node0x1f27aa8 -> Node0x1f28a18;
	Node0x1f28a18 -> Node0x1f29088;
	Node0x1f29088 -> Node0x1f290e8;
	Node0x1f290e8 -> Node0x1f29160;
	Node0x1f29160 -> Node0x1f291d0;
	Node0x1f291d0 -> Node0x1f29240;
	Node0x1f29240 -> Node0x1f292b0;
	Node0x1f292b0 -> Node0x1f29320;
	Node0x1f29320 -> Node0x1f29390;
	Node0x1f29390 -> Node0x1f29400;
	Node0x1f29400 -> Node0x1f29470;
	Node0x1f29470 -> Node0x1f294e0;
	Node0x1f294e0 -> Node0x1f29550;
	Node0x1f29550 -> Node0x1f295c0;
	Node0x1f295c0 -> Node0x1f29630;
	Node0x1f29630 -> Node0x1f296a0;
	Node0x1f296a0 -> Node0x1f29710;
	Node0x1f29710 -> Node0x1f29780;
	Node0x1f29780 -> Node0x1f297f0;
	Node0x1f297f0 -> Node0x1f29860;
	Node0x1f29860 -> Node0x1f298d0;
	Node0x1f298d0 -> Node0x1f29940;
	Node0x1f29940 -> Node0x1f299b0;
	Node0x1f299b0 -> Node0x1f29a20;
	Node0x1f29a20 -> Node0x1f29a90;
	Node0x1f29a90 -> Node0x1f29b00;
	Node0x1f29b00 -> Node0x1f29b70;
	Node0x1f29b70 -> Node0x1f29be0;
	Node0x1f29be0 -> Node0x1f29c50;
	Node0x1f29c50 -> Node0x1f29cc0;
	Node0x1f29cc0 -> Node0x1f29d30;
	Node0x1f29d30 -> Node0x1f29da0;
	Node0x1f29da0 -> Node0x1f29e10;
	Node0x1f29e10 -> Node0x1f29e80;
	Node0x1f29e80 -> Node0x1f29ef0;
	Node0x1f29ef0 -> Node0x1f29f60;
	Node0x1f29f60 -> Node0x1f29fd0;
	Node0x1f29fd0 -> Node0x1f2a040;
	Node0x1f2a040 -> Node0x1f2a0b0;
	Node0x1f2a0b0 -> Node0x1f2a120;
	Node0x1f2a120 -> Node0x1f2a190;
	Node0x1f2a190 -> Node0x1f2a200;
	Node0x1f2a200 -> Node0x1f2a270;
	Node0x1f2a270 -> Node0x1f2a2e0;
	Node0x1f2a2e0 -> Node0x1f2a350;
	Node0x1f2a350 -> Node0x1ec68b8;
	Node0x1ec68b8 -> Node0x1f2a3e0;
	Node0x1f2a3e0 -> Node0x1f2a688;
	Node0x1f2a688 -> Node0x1f2a7e8;
	Node0x1f2a7e8 -> Node0x1f2a8f8;
	Node0x1f2a8f8 -> Node0x1f2aa08;
	Node0x1f2aa08 -> Node0x1f2aac8;
edge [color=red]
	Node0x1f26d98 -> Node0x1f26fb8;
	Node0x1f26fb8 -> Node0x1f273e8;
	Node0x1f26e18 -> Node0x1f274c8;
	Node0x1f274c8 -> Node0x1f275c8;
	Node0x1f26ea8 -> Node0x1f27688;
	Node0x1f27688 -> Node0x1f27738;
	Node0x1f26f08 -> Node0x1f277f8;
	Node0x1f277f8 -> Node0x1f278a8;
	Node0x1f26d98 -> Node0x1f21bb0;
	Node0x1f26e18 -> Node0x1f21bb0;
	Node0x1f26ea8 -> Node0x1f21bb0;
	Node0x1f26f08 -> Node0x1f21bb0;
	Node0x1f26d98 -> Node0x1f27aa8;
	Node0x1f26e18 -> Node0x1f28a18;
	Node0x1f26ea8 -> Node0x1f29088;
	Node0x1f26f08 -> Node0x1f290e8;
	Node0x1f29088 -> Node0x1f29160;
	Node0x1f28a18 -> Node0x1f29160;
	Node0x1f29160 -> Node0x1f291d0;
	Node0x1f291d0 -> Node0x1f29240;
	Node0x1f27aa8 -> Node0x1f292b0;
	Node0x1f290e8 -> Node0x1f29320;
	Node0x1f27aa8 -> Node0x1f29320;
	Node0x1f29088 -> Node0x1f29390;
	Node0x1f292b0 -> Node0x1f29390;
	Node0x1f29390 -> Node0x1f29400;
	Node0x1f29240 -> Node0x1f29400;
	Node0x1f29400 -> Node0x1f29470;
	Node0x1f29320 -> Node0x1f29470;
	Node0x1f29160 -> Node0x1f294e0;
	Node0x1f294e0 -> Node0x1f29550;
	Node0x1f29088 -> Node0x1f295c0;
	Node0x1f28a18 -> Node0x1f29630;
	Node0x1f295c0 -> Node0x1f29630;
	Node0x1f29630 -> Node0x1f296a0;
	Node0x1f29088 -> Node0x1f29710;
	Node0x1f28a18 -> Node0x1f29710;
	Node0x1f29710 -> Node0x1f29780;
	Node0x1f29780 -> Node0x1f297f0;
	Node0x1f28a18 -> Node0x1f29860;
	Node0x1f29860 -> Node0x1f298d0;
	Node0x1f29088 -> Node0x1f298d0;
	Node0x1f29630 -> Node0x1f29940;
	Node0x1f29088 -> Node0x1f299b0;
	Node0x1f28a18 -> Node0x1f299b0;
	Node0x1f299b0 -> Node0x1f29a20;
	Node0x1f290e8 -> Node0x1f29a90;
	Node0x1f27aa8 -> Node0x1f29a90;
	Node0x1f290e8 -> Node0x1f29b00;
	Node0x1f292b0 -> Node0x1f29b00;
	Node0x1f29320 -> Node0x1f29b70;
	Node0x1f29b70 -> Node0x1f29be0;
	Node0x1f29b00 -> Node0x1f29c50;
	Node0x1f29c50 -> Node0x1f29cc0;
	Node0x1f290e8 -> Node0x1f29d30;
	Node0x1f292b0 -> Node0x1f29d30;
	Node0x1f29a90 -> Node0x1f29da0;
	Node0x1f298d0 -> Node0x1f29da0;
	Node0x1f29da0 -> Node0x1f29e10;
	Node0x1f29088 -> Node0x1f29e80;
	Node0x1f28a18 -> Node0x1f29e80;
	Node0x1f29e80 -> Node0x1f29ef0;
	Node0x1f296a0 -> Node0x1f29ef0;
	Node0x1f29ef0 -> Node0x1f29f60;
	Node0x1f297f0 -> Node0x1f29f60;
	Node0x1f29f60 -> Node0x1f29fd0;
	Node0x1f29940 -> Node0x1f29fd0;
	Node0x1f29fd0 -> Node0x1f2a040;
	Node0x1f29a20 -> Node0x1f2a040;
	Node0x1f2a040 -> Node0x1f2a0b0;
	Node0x1f29b00 -> Node0x1f2a0b0;
	Node0x1f2a0b0 -> Node0x1f2a120;
	Node0x1f29d30 -> Node0x1f2a120;
	Node0x1f2a120 -> Node0x1f2a190;
	Node0x1f29550 -> Node0x1f2a190;
	Node0x1f2a190 -> Node0x1f2a200;
	Node0x1f29cc0 -> Node0x1f2a200;
	Node0x1f2a200 -> Node0x1f2a270;
	Node0x1f29be0 -> Node0x1f2a270;
	Node0x1f2a270 -> Node0x1f2a2e0;
	Node0x1f29e10 -> Node0x1f2a2e0;
	Node0x1f29470 -> Node0x1f2a350;
	Node0x1f2a2e0 -> Node0x1f2a350;
	Node0x1f2a350 -> Node0x1ec68b8;
	Node0x1ec68b8 -> Node0x1f2a3e0;
	Node0x1f277f8 -> Node0x1f2a688;
	Node0x1f27688 -> Node0x1f2a7e8;
	Node0x1f274c8 -> Node0x1f2a8f8;
	Node0x1f26fb8 -> Node0x1f2aa08;
}
