digraph "DFG for'main' function" {
	Node0x1e8fa58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e8fad8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e8fb68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1e8fbc8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1e90048[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e90128[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1e90228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e902e8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1e90398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e905f8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1e906b8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e90818[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e90878[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1e93f50[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1e94158[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e942b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e943c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e94488[shape=record, label="  ret i32 0"];
	Node0x1e8fa58 -> Node0x1e8fad8;
	Node0x1e8fad8 -> Node0x1e8fb68;
	Node0x1e8fb68 -> Node0x1e8fbc8;
	Node0x1e8fbc8 -> Node0x1e90048;
	Node0x1e90048 -> Node0x1e90128;
	Node0x1e90128 -> Node0x1e90228;
	Node0x1e90228 -> Node0x1e902e8;
	Node0x1e902e8 -> Node0x1e90398;
	Node0x1e90398 -> Node0x1e905f8;
	Node0x1e905f8 -> Node0x1e906b8;
	Node0x1e906b8 -> Node0x1e90818;
	Node0x1e90818 -> Node0x1e90878;
	Node0x1e90878 -> Node0x1e93f50;
	Node0x1e93f50 -> Node0x1e94158;
	Node0x1e94158 -> Node0x1e942b8;
	Node0x1e942b8 -> Node0x1e943c8;
	Node0x1e943c8 -> Node0x1e94488;
edge [color=red]
	Node0x1e8fa58 -> Node0x1e8fbc8;
	Node0x1e8fbc8 -> Node0x1e90048;
	Node0x1e8fad8 -> Node0x1e90128;
	Node0x1e90128 -> Node0x1e90228;
	Node0x1e8fb68 -> Node0x1e902e8;
	Node0x1e902e8 -> Node0x1e90398;
	Node0x1e8fa58 -> Node0x1e905f8;
	Node0x1e8fad8 -> Node0x1e905f8;
	Node0x1e8fb68 -> Node0x1e905f8;
	Node0x1e8fa58 -> Node0x1e906b8;
	Node0x1e8fad8 -> Node0x1e90818;
	Node0x1e8fb68 -> Node0x1e90878;
	Node0x1e906b8 -> Node0x1e93f50;
	Node0x1e90818 -> Node0x1e93f50;
	Node0x1e90878 -> Node0x1e93f50;
	Node0x1e902e8 -> Node0x1e94158;
	Node0x1e90128 -> Node0x1e942b8;
	Node0x1e8fbc8 -> Node0x1e943c8;
}
