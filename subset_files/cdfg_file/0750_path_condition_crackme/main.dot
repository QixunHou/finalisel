digraph "DFG for'main' function" {
	Node0x1fbfe38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1fbfeb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1fbff48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1fbffa8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1fc0058[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1fc0488[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1fc0568[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1fc0668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1fc0728[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1fc07d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1fc0898[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1fc0948[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1fba7f0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1fc0b48[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1fc1ab8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1fc2128[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1fc2188[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1fc2298[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1fc24f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1fc2658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1fc2768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1fc2878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1fc2938[shape=record, label="  ret i32 0"];
	Node0x1fbfe38 -> Node0x1fbfeb8;
	Node0x1fbfeb8 -> Node0x1fbff48;
	Node0x1fbff48 -> Node0x1fbffa8;
	Node0x1fbffa8 -> Node0x1fc0058;
	Node0x1fc0058 -> Node0x1fc0488;
	Node0x1fc0488 -> Node0x1fc0568;
	Node0x1fc0568 -> Node0x1fc0668;
	Node0x1fc0668 -> Node0x1fc0728;
	Node0x1fc0728 -> Node0x1fc07d8;
	Node0x1fc07d8 -> Node0x1fc0898;
	Node0x1fc0898 -> Node0x1fc0948;
	Node0x1fc0948 -> Node0x1fba7f0;
	Node0x1fba7f0 -> Node0x1fc0b48;
	Node0x1fc0b48 -> Node0x1fc1ab8;
	Node0x1fc1ab8 -> Node0x1fc2128;
	Node0x1fc2128 -> Node0x1fc2188;
	Node0x1fc2188 -> Node0x1fc2298;
	Node0x1fc2298 -> Node0x1fc24f8;
	Node0x1fc24f8 -> Node0x1fc2658;
	Node0x1fc2658 -> Node0x1fc2768;
	Node0x1fc2768 -> Node0x1fc2878;
	Node0x1fc2878 -> Node0x1fc2938;
edge [color=red]
	Node0x1fbfe38 -> Node0x1fc0058;
	Node0x1fc0058 -> Node0x1fc0488;
	Node0x1fbfeb8 -> Node0x1fc0568;
	Node0x1fc0568 -> Node0x1fc0668;
	Node0x1fbff48 -> Node0x1fc0728;
	Node0x1fc0728 -> Node0x1fc07d8;
	Node0x1fbffa8 -> Node0x1fc0898;
	Node0x1fc0898 -> Node0x1fc0948;
	Node0x1fbfe38 -> Node0x1fba7f0;
	Node0x1fbfeb8 -> Node0x1fba7f0;
	Node0x1fbff48 -> Node0x1fba7f0;
	Node0x1fbffa8 -> Node0x1fba7f0;
	Node0x1fbfe38 -> Node0x1fc0b48;
	Node0x1fbfeb8 -> Node0x1fc1ab8;
	Node0x1fbff48 -> Node0x1fc2128;
	Node0x1fbffa8 -> Node0x1fc2188;
	Node0x1fc0b48 -> Node0x1fc2298;
	Node0x1fc1ab8 -> Node0x1fc2298;
	Node0x1fc2128 -> Node0x1fc2298;
	Node0x1fc2188 -> Node0x1fc2298;
	Node0x1fc0898 -> Node0x1fc24f8;
	Node0x1fc0728 -> Node0x1fc2658;
	Node0x1fc0568 -> Node0x1fc2768;
	Node0x1fc0058 -> Node0x1fc2878;
}
