digraph "DFG for'crackme' function" {
	Node0x1fbddd0[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x1fbde40[shape=record, label="  %6 = xor i32 %5, %2"];
	Node0x1fbdee0[shape=record, label="  %7 = mul i32 %6, -2"];
	Node0x1fbdf50[shape=record, label="  %8 = xor i32 %3, %0"];
	Node0x1fbdfc0[shape=record, label="  %9 = sub i32 %7, %8"];
	Node0x1fbe030[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x1fbe0a0[shape=record, label="  %11 = and i32 %10, %1"];
	Node0x1fbe110[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x1fbe1b0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1fbe220[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1fbe290[shape=record, label="  %15 = shl i32 %1, 1"];
	Node0x1fbe300[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x1fbe370[shape=record, label="  %17 = or i32 %2, %1"];
	Node0x1fbe3e0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x1fbe480[shape=record, label="  %19 = mul i32 %18, -9"];
	Node0x1fbe4f0[shape=record, label="  %20 = and i32 %5, %2"];
	Node0x1fbe590[shape=record, label="  %21 = mul i32 %20, -7"];
	Node0x1fbe630[shape=record, label="  %22 = shl i32 %11, 2"];
	Node0x1fbe6a0[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x1fbe710[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x1fbe780[shape=record, label="  %25 = xor i32 %0, -1"];
	Node0x1fbe7f0[shape=record, label="  %26 = or i32 %25, %3"];
	Node0x1fbe860[shape=record, label="  %27 = and i32 %25, %3"];
	Node0x1fbe8d0[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x1fbe940[shape=record, label="  %29 = xor i32 %8, -1"];
	Node0x1fbe9b0[shape=record, label="  %30 = or i32 %3, %0"];
	Node0x1fbea20[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x1fbea90[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0x1fbed10[shape=record, label="  %33 = shl i32 %26, 1"];
	Node0x1fbed80[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x1fbedf0[shape=record, label="  %35 = shl i32 %27, 2"];
	Node0x1fbee60[shape=record, label="  %36 = shl i32 %23, 2"];
	Node0x1fbeed0[shape=record, label="  %37 = add i32 %12, %28"];
	Node0x1fbef70[shape=record, label="  %38 = mul i32 %37, -5"];
	Node0x1fbf010[shape=record, label="  %39 = sub i32 -4, %0"];
	Node0x1fbf080[shape=record, label="  %40 = add i32 %39, %25"];
	Node0x1fbf0f0[shape=record, label="  %41 = sub i32 %40, %11"];
	Node0x1fbf160[shape=record, label="  %42 = add i32 %41, %16"];
	Node0x1fbf1d0[shape=record, label="  %43 = add i32 %42, %19"];
	Node0x1fbf240[shape=record, label="  %44 = add i32 %43, %21"];
	Node0x1fbf2b0[shape=record, label="  %45 = sub i32 %44, %22"];
	Node0x1fbf320[shape=record, label="  %46 = add i32 %45, %24"];
	Node0x1fbf390[shape=record, label="  %47 = sub i32 %46, %26"];
	Node0x1fbf400[shape=record, label="  %48 = add i32 %47, %29"];
	Node0x1fbf470[shape=record, label="  %49 = add i32 %48, %30"];
	Node0x1fbf4e0[shape=record, label="  %50 = add i32 %49, %14"];
	Node0x1fbf550[shape=record, label="  %51 = sub i32 %50, %35"];
	Node0x1fbf5c0[shape=record, label="  %52 = add i32 %51, %36"];
	Node0x1fbf630[shape=record, label="  %53 = add i32 %52, %32"];
	Node0x1fbf6a0[shape=record, label="  %54 = add i32 %53, %34"];
	Node0x1fbf710[shape=record, label="  %55 = add i32 %54, %38"];
	Node0x1fbf780[shape=record, label="  %56 = icmp eq i32 %9, %55"];
	Node0x1f5e268[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1fbfc20[shape=record, label="  %58 = tail call i32 @puts(i8* nonnull dereferenceable(1) %57)"];
	Node0x1fbfc70[shape=record, label="  ret void"];
	Node0x1fbddd0 -> Node0x1fbde40;
	Node0x1fbde40 -> Node0x1fbdee0;
	Node0x1fbdee0 -> Node0x1fbdf50;
	Node0x1fbdf50 -> Node0x1fbdfc0;
	Node0x1fbdfc0 -> Node0x1fbe030;
	Node0x1fbe030 -> Node0x1fbe0a0;
	Node0x1fbe0a0 -> Node0x1fbe110;
	Node0x1fbe110 -> Node0x1fbe1b0;
	Node0x1fbe1b0 -> Node0x1fbe220;
	Node0x1fbe220 -> Node0x1fbe290;
	Node0x1fbe290 -> Node0x1fbe300;
	Node0x1fbe300 -> Node0x1fbe370;
	Node0x1fbe370 -> Node0x1fbe3e0;
	Node0x1fbe3e0 -> Node0x1fbe480;
	Node0x1fbe480 -> Node0x1fbe4f0;
	Node0x1fbe4f0 -> Node0x1fbe590;
	Node0x1fbe590 -> Node0x1fbe630;
	Node0x1fbe630 -> Node0x1fbe6a0;
	Node0x1fbe6a0 -> Node0x1fbe710;
	Node0x1fbe710 -> Node0x1fbe780;
	Node0x1fbe780 -> Node0x1fbe7f0;
	Node0x1fbe7f0 -> Node0x1fbe860;
	Node0x1fbe860 -> Node0x1fbe8d0;
	Node0x1fbe8d0 -> Node0x1fbe940;
	Node0x1fbe940 -> Node0x1fbe9b0;
	Node0x1fbe9b0 -> Node0x1fbea20;
	Node0x1fbea20 -> Node0x1fbea90;
	Node0x1fbea90 -> Node0x1fbed10;
	Node0x1fbed10 -> Node0x1fbed80;
	Node0x1fbed80 -> Node0x1fbedf0;
	Node0x1fbedf0 -> Node0x1fbee60;
	Node0x1fbee60 -> Node0x1fbeed0;
	Node0x1fbeed0 -> Node0x1fbef70;
	Node0x1fbef70 -> Node0x1fbf010;
	Node0x1fbf010 -> Node0x1fbf080;
	Node0x1fbf080 -> Node0x1fbf0f0;
	Node0x1fbf0f0 -> Node0x1fbf160;
	Node0x1fbf160 -> Node0x1fbf1d0;
	Node0x1fbf1d0 -> Node0x1fbf240;
	Node0x1fbf240 -> Node0x1fbf2b0;
	Node0x1fbf2b0 -> Node0x1fbf320;
	Node0x1fbf320 -> Node0x1fbf390;
	Node0x1fbf390 -> Node0x1fbf400;
	Node0x1fbf400 -> Node0x1fbf470;
	Node0x1fbf470 -> Node0x1fbf4e0;
	Node0x1fbf4e0 -> Node0x1fbf550;
	Node0x1fbf550 -> Node0x1fbf5c0;
	Node0x1fbf5c0 -> Node0x1fbf630;
	Node0x1fbf630 -> Node0x1fbf6a0;
	Node0x1fbf6a0 -> Node0x1fbf710;
	Node0x1fbf710 -> Node0x1fbf780;
	Node0x1fbf780 -> Node0x1f5e268;
	Node0x1f5e268 -> Node0x1fbfc20;
	Node0x1fbfc20 -> Node0x1fbfc70;
edge [color=red]
	Node0x1fbddd0 -> Node0x1fbde40;
	Node0x1fbde40 -> Node0x1fbdee0;
	Node0x1fbdee0 -> Node0x1fbdfc0;
	Node0x1fbdf50 -> Node0x1fbdfc0;
	Node0x1fbe030 -> Node0x1fbe0a0;
	Node0x1fbe110 -> Node0x1fbe1b0;
	Node0x1fbe1b0 -> Node0x1fbe220;
	Node0x1fbe290 -> Node0x1fbe300;
	Node0x1fbe370 -> Node0x1fbe3e0;
	Node0x1fbe3e0 -> Node0x1fbe480;
	Node0x1fbddd0 -> Node0x1fbe4f0;
	Node0x1fbe4f0 -> Node0x1fbe590;
	Node0x1fbe0a0 -> Node0x1fbe630;
	Node0x1fbe6a0 -> Node0x1fbe710;
	Node0x1fbe780 -> Node0x1fbe7f0;
	Node0x1fbe780 -> Node0x1fbe860;
	Node0x1fbe860 -> Node0x1fbe8d0;
	Node0x1fbdf50 -> Node0x1fbe940;
	Node0x1fbe9b0 -> Node0x1fbea20;
	Node0x1fbea20 -> Node0x1fbea90;
	Node0x1fbe7f0 -> Node0x1fbed10;
	Node0x1fbed10 -> Node0x1fbed80;
	Node0x1fbe860 -> Node0x1fbedf0;
	Node0x1fbe6a0 -> Node0x1fbee60;
	Node0x1fbe110 -> Node0x1fbeed0;
	Node0x1fbe8d0 -> Node0x1fbeed0;
	Node0x1fbeed0 -> Node0x1fbef70;
	Node0x1fbf010 -> Node0x1fbf080;
	Node0x1fbe780 -> Node0x1fbf080;
	Node0x1fbf080 -> Node0x1fbf0f0;
	Node0x1fbe0a0 -> Node0x1fbf0f0;
	Node0x1fbf0f0 -> Node0x1fbf160;
	Node0x1fbe300 -> Node0x1fbf160;
	Node0x1fbf160 -> Node0x1fbf1d0;
	Node0x1fbe480 -> Node0x1fbf1d0;
	Node0x1fbf1d0 -> Node0x1fbf240;
	Node0x1fbe590 -> Node0x1fbf240;
	Node0x1fbf240 -> Node0x1fbf2b0;
	Node0x1fbe630 -> Node0x1fbf2b0;
	Node0x1fbf2b0 -> Node0x1fbf320;
	Node0x1fbe710 -> Node0x1fbf320;
	Node0x1fbf320 -> Node0x1fbf390;
	Node0x1fbe7f0 -> Node0x1fbf390;
	Node0x1fbf390 -> Node0x1fbf400;
	Node0x1fbe940 -> Node0x1fbf400;
	Node0x1fbf400 -> Node0x1fbf470;
	Node0x1fbe9b0 -> Node0x1fbf470;
	Node0x1fbf470 -> Node0x1fbf4e0;
	Node0x1fbe220 -> Node0x1fbf4e0;
	Node0x1fbf4e0 -> Node0x1fbf550;
	Node0x1fbedf0 -> Node0x1fbf550;
	Node0x1fbf550 -> Node0x1fbf5c0;
	Node0x1fbee60 -> Node0x1fbf5c0;
	Node0x1fbf5c0 -> Node0x1fbf630;
	Node0x1fbea90 -> Node0x1fbf630;
	Node0x1fbf630 -> Node0x1fbf6a0;
	Node0x1fbed80 -> Node0x1fbf6a0;
	Node0x1fbf6a0 -> Node0x1fbf710;
	Node0x1fbef70 -> Node0x1fbf710;
	Node0x1fbdfc0 -> Node0x1fbf780;
	Node0x1fbf710 -> Node0x1fbf780;
	Node0x1fbf780 -> Node0x1f5e268;
	Node0x1f5e268 -> Node0x1fbfc20;
}
