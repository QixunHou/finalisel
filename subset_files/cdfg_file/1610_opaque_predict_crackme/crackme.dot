digraph "DFG for'crackme' function" {
	Node0x8de710[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x8de780[shape=record, label="  %6 = sub i32 %0, %5"];
	Node0x8dee00[shape=record, label="  %7 = xor i32 %2, -1"];
	Node0x8dee70[shape=record, label="  %8 = or i32 %7, %1"];
	Node0x8deee0[shape=record, label="  %9 = xor i32 %2, %1"];
	Node0x8def50[shape=record, label="  %10 = and i32 %2, %1"];
	Node0x8defc0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x8df060[shape=record, label="  %12 = shl i32 %5, 1"];
	Node0x8df100[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x8df170[shape=record, label="  %14 = shl i32 %8, 1"];
	Node0x8df1e0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x8df250[shape=record, label="  %16 = and i32 %7, %1"];
	Node0x8df2f0[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x8df360[shape=record, label="  %18 = xor i32 %0, -1"];
	Node0x8df400[shape=record, label="  %19 = mul i32 %18, -5"];
	Node0x8df470[shape=record, label="  %20 = or i32 %3, %0"];
	Node0x8df4e0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x8df550[shape=record, label="  %22 = and i32 %18, %3"];
	Node0x8df5c0[shape=record, label="  %23 = xor i32 %3, %0"];
	Node0x8df630[shape=record, label="  %24 = and i32 %3, %0"];
	Node0x8df6a0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x8df740[shape=record, label="  %26 = shl i32 %20, 3"];
	Node0x8df7e0[shape=record, label="  %27 = xor i32 %26, -8"];
	Node0x8df850[shape=record, label="  %28 = xor i32 %3, -1"];
	Node0x8df8c0[shape=record, label="  %29 = and i32 %28, %0"];
	Node0x8df930[shape=record, label="  %30 = shl i32 %22, 2"];
	Node0x8df9a0[shape=record, label="  %31 = mul i32 %24, 3"];
	Node0x8dfa40[shape=record, label="  %32 = add i32 %19, 4"];
	Node0x8dfcc0[shape=record, label="  %33 = sub i32 %32, %2"];
	Node0x8dfd30[shape=record, label="  %34 = add i32 %33, %8"];
	Node0x8dfda0[shape=record, label="  %35 = add i32 %34, %9"];
	Node0x8dfe10[shape=record, label="  %36 = add i32 %35, %11"];
	Node0x8dfe80[shape=record, label="  %37 = sub i32 %36, %10"];
	Node0x8dfef0[shape=record, label="  %38 = sub i32 %37, %17"];
	Node0x8dff60[shape=record, label="  %39 = add i32 %38, %22"];
	Node0x8dffd0[shape=record, label="  %40 = add i32 %39, %23"];
	Node0x8e0040[shape=record, label="  %41 = add i32 %40, %25"];
	Node0x8e00b0[shape=record, label="  %42 = add i32 %41, %29"];
	Node0x8e0120[shape=record, label="  %43 = sub i32 %42, %13"];
	Node0x8e0190[shape=record, label="  %44 = sub i32 %43, %15"];
	Node0x8e0200[shape=record, label="  %45 = add i32 %44, %21"];
	Node0x8e0270[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x8e02e0[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x8e0350[shape=record, label="  %48 = add i32 %47, %27"];
	Node0x8e03c0[shape=record, label="  %49 = icmp eq i32 %6, %48"];
	Node0x87f268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8e0860[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x8e08b0[shape=record, label="  ret void"];
	Node0x8de710 -> Node0x8de780;
	Node0x8de780 -> Node0x8dee00;
	Node0x8dee00 -> Node0x8dee70;
	Node0x8dee70 -> Node0x8deee0;
	Node0x8deee0 -> Node0x8def50;
	Node0x8def50 -> Node0x8defc0;
	Node0x8defc0 -> Node0x8df060;
	Node0x8df060 -> Node0x8df100;
	Node0x8df100 -> Node0x8df170;
	Node0x8df170 -> Node0x8df1e0;
	Node0x8df1e0 -> Node0x8df250;
	Node0x8df250 -> Node0x8df2f0;
	Node0x8df2f0 -> Node0x8df360;
	Node0x8df360 -> Node0x8df400;
	Node0x8df400 -> Node0x8df470;
	Node0x8df470 -> Node0x8df4e0;
	Node0x8df4e0 -> Node0x8df550;
	Node0x8df550 -> Node0x8df5c0;
	Node0x8df5c0 -> Node0x8df630;
	Node0x8df630 -> Node0x8df6a0;
	Node0x8df6a0 -> Node0x8df740;
	Node0x8df740 -> Node0x8df7e0;
	Node0x8df7e0 -> Node0x8df850;
	Node0x8df850 -> Node0x8df8c0;
	Node0x8df8c0 -> Node0x8df930;
	Node0x8df930 -> Node0x8df9a0;
	Node0x8df9a0 -> Node0x8dfa40;
	Node0x8dfa40 -> Node0x8dfcc0;
	Node0x8dfcc0 -> Node0x8dfd30;
	Node0x8dfd30 -> Node0x8dfda0;
	Node0x8dfda0 -> Node0x8dfe10;
	Node0x8dfe10 -> Node0x8dfe80;
	Node0x8dfe80 -> Node0x8dfef0;
	Node0x8dfef0 -> Node0x8dff60;
	Node0x8dff60 -> Node0x8dffd0;
	Node0x8dffd0 -> Node0x8e0040;
	Node0x8e0040 -> Node0x8e00b0;
	Node0x8e00b0 -> Node0x8e0120;
	Node0x8e0120 -> Node0x8e0190;
	Node0x8e0190 -> Node0x8e0200;
	Node0x8e0200 -> Node0x8e0270;
	Node0x8e0270 -> Node0x8e02e0;
	Node0x8e02e0 -> Node0x8e0350;
	Node0x8e0350 -> Node0x8e03c0;
	Node0x8e03c0 -> Node0x87f268;
	Node0x87f268 -> Node0x8e0860;
	Node0x8e0860 -> Node0x8e08b0;
edge [color=red]
	Node0x8de710 -> Node0x8de780;
	Node0x8dee00 -> Node0x8dee70;
	Node0x8def50 -> Node0x8defc0;
	Node0x8de710 -> Node0x8df060;
	Node0x8df060 -> Node0x8df100;
	Node0x8dee70 -> Node0x8df170;
	Node0x8df170 -> Node0x8df1e0;
	Node0x8dee00 -> Node0x8df250;
	Node0x8df250 -> Node0x8df2f0;
	Node0x8df360 -> Node0x8df400;
	Node0x8df470 -> Node0x8df4e0;
	Node0x8df360 -> Node0x8df550;
	Node0x8df630 -> Node0x8df6a0;
	Node0x8df470 -> Node0x8df740;
	Node0x8df740 -> Node0x8df7e0;
	Node0x8df850 -> Node0x8df8c0;
	Node0x8df550 -> Node0x8df930;
	Node0x8df630 -> Node0x8df9a0;
	Node0x8df400 -> Node0x8dfa40;
	Node0x8dfa40 -> Node0x8dfcc0;
	Node0x8dfcc0 -> Node0x8dfd30;
	Node0x8dee70 -> Node0x8dfd30;
	Node0x8dfd30 -> Node0x8dfda0;
	Node0x8deee0 -> Node0x8dfda0;
	Node0x8dfda0 -> Node0x8dfe10;
	Node0x8defc0 -> Node0x8dfe10;
	Node0x8dfe10 -> Node0x8dfe80;
	Node0x8def50 -> Node0x8dfe80;
	Node0x8dfe80 -> Node0x8dfef0;
	Node0x8df2f0 -> Node0x8dfef0;
	Node0x8dfef0 -> Node0x8dff60;
	Node0x8df550 -> Node0x8dff60;
	Node0x8dff60 -> Node0x8dffd0;
	Node0x8df5c0 -> Node0x8dffd0;
	Node0x8dffd0 -> Node0x8e0040;
	Node0x8df6a0 -> Node0x8e0040;
	Node0x8e0040 -> Node0x8e00b0;
	Node0x8df8c0 -> Node0x8e00b0;
	Node0x8e00b0 -> Node0x8e0120;
	Node0x8df100 -> Node0x8e0120;
	Node0x8e0120 -> Node0x8e0190;
	Node0x8df1e0 -> Node0x8e0190;
	Node0x8e0190 -> Node0x8e0200;
	Node0x8df4e0 -> Node0x8e0200;
	Node0x8e0200 -> Node0x8e0270;
	Node0x8df930 -> Node0x8e0270;
	Node0x8e0270 -> Node0x8e02e0;
	Node0x8df9a0 -> Node0x8e02e0;
	Node0x8e02e0 -> Node0x8e0350;
	Node0x8df7e0 -> Node0x8e0350;
	Node0x8de780 -> Node0x8e03c0;
	Node0x8e0350 -> Node0x8e03c0;
	Node0x8e03c0 -> Node0x87f268;
	Node0x87f268 -> Node0x8e0860;
}
