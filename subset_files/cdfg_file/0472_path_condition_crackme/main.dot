digraph "DFG for'main' function" {
	Node0xe48e58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe48ed8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe48f68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xe493c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xe494a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xe495c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe49800[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xe498b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe4a828[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe4aeb0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0xe4af20[shape=record, label="  %9 = shl i32 %8, 2"];
	Node0xe4af90[shape=record, label="  %10 = xor i32 %9, -4"];
	Node0xe4b000[shape=record, label="  %11 = or i32 %7, %6"];
	Node0xe4b070[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0xe4b0e0[shape=record, label="  %13 = or i32 %6, %12"];
	Node0xe4b150[shape=record, label="  %14 = and i32 %6, %12"];
	Node0xe4b1c0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xe4b230[shape=record, label="  %16 = xor i32 %11, -1"];
	Node0xe4b2a0[shape=record, label="  %17 = mul i32 %16, -5"];
	Node0xe4b310[shape=record, label="  %18 = xor i32 %13, -1"];
	Node0xe4b380[shape=record, label="  %19 = mul i32 %18, -6"];
	Node0xe4b3f0[shape=record, label="  %20 = mul i32 %14, -7"];
	Node0xe4b460[shape=record, label="  %21 = mul i32 %8, -3"];
	Node0xe4b4d0[shape=record, label="  %22 = shl i32 %6, 1"];
	Node0xe4b540[shape=record, label="  %23 = add i32 %22, -1"];
	Node0xe4b5b0[shape=record, label="  %24 = add i32 %23, %11"];
	Node0xe4b620[shape=record, label="  %25 = sub i32 %24, %13"];
	Node0xe4b690[shape=record, label="  %26 = add i32 %25, %15"];
	Node0xe4b700[shape=record, label="  %27 = add i32 %26, %17"];
	Node0xe4b770[shape=record, label="  %28 = add i32 %27, %19"];
	Node0xe4b7e0[shape=record, label="  %29 = add i32 %28, %20"];
	Node0xe4b850[shape=record, label="  %30 = add i32 %29, %21"];
	Node0xe4b8c0[shape=record, label="  %31 = add i32 %30, %10"];
	Node0xe4b930[shape=record, label="  %32 = icmp eq i32 %31, %7"];
	Node0xde99d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe4bbd0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0xe4be28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe4bf88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xe4c048[shape=record, label="  ret i32 0"];
	Node0xe48e58 -> Node0xe48ed8;
	Node0xe48ed8 -> Node0xe48f68;
	Node0xe48f68 -> Node0xe493c8;
	Node0xe493c8 -> Node0xe494a8;
	Node0xe494a8 -> Node0xe495c8;
	Node0xe495c8 -> Node0xe49800;
	Node0xe49800 -> Node0xe498b8;
	Node0xe498b8 -> Node0xe4a828;
	Node0xe4a828 -> Node0xe4aeb0;
	Node0xe4aeb0 -> Node0xe4af20;
	Node0xe4af20 -> Node0xe4af90;
	Node0xe4af90 -> Node0xe4b000;
	Node0xe4b000 -> Node0xe4b070;
	Node0xe4b070 -> Node0xe4b0e0;
	Node0xe4b0e0 -> Node0xe4b150;
	Node0xe4b150 -> Node0xe4b1c0;
	Node0xe4b1c0 -> Node0xe4b230;
	Node0xe4b230 -> Node0xe4b2a0;
	Node0xe4b2a0 -> Node0xe4b310;
	Node0xe4b310 -> Node0xe4b380;
	Node0xe4b380 -> Node0xe4b3f0;
	Node0xe4b3f0 -> Node0xe4b460;
	Node0xe4b460 -> Node0xe4b4d0;
	Node0xe4b4d0 -> Node0xe4b540;
	Node0xe4b540 -> Node0xe4b5b0;
	Node0xe4b5b0 -> Node0xe4b620;
	Node0xe4b620 -> Node0xe4b690;
	Node0xe4b690 -> Node0xe4b700;
	Node0xe4b700 -> Node0xe4b770;
	Node0xe4b770 -> Node0xe4b7e0;
	Node0xe4b7e0 -> Node0xe4b850;
	Node0xe4b850 -> Node0xe4b8c0;
	Node0xe4b8c0 -> Node0xe4b930;
	Node0xe4b930 -> Node0xde99d8;
	Node0xde99d8 -> Node0xe4bbd0;
	Node0xe4bbd0 -> Node0xe4be28;
	Node0xe4be28 -> Node0xe4bf88;
	Node0xe4bf88 -> Node0xe4c048;
edge [color=red]
	Node0xe48e58 -> Node0xe48f68;
	Node0xe48f68 -> Node0xe493c8;
	Node0xe48ed8 -> Node0xe494a8;
	Node0xe494a8 -> Node0xe495c8;
	Node0xe48e58 -> Node0xe49800;
	Node0xe48ed8 -> Node0xe49800;
	Node0xe48e58 -> Node0xe498b8;
	Node0xe48ed8 -> Node0xe4a828;
	Node0xe4a828 -> Node0xe4aeb0;
	Node0xe498b8 -> Node0xe4aeb0;
	Node0xe4aeb0 -> Node0xe4af20;
	Node0xe4af20 -> Node0xe4af90;
	Node0xe4a828 -> Node0xe4b000;
	Node0xe498b8 -> Node0xe4b000;
	Node0xe4a828 -> Node0xe4b070;
	Node0xe498b8 -> Node0xe4b0e0;
	Node0xe4b070 -> Node0xe4b0e0;
	Node0xe498b8 -> Node0xe4b150;
	Node0xe4b070 -> Node0xe4b150;
	Node0xe4b150 -> Node0xe4b1c0;
	Node0xe4b000 -> Node0xe4b230;
	Node0xe4b230 -> Node0xe4b2a0;
	Node0xe4b0e0 -> Node0xe4b310;
	Node0xe4b310 -> Node0xe4b380;
	Node0xe4b150 -> Node0xe4b3f0;
	Node0xe4aeb0 -> Node0xe4b460;
	Node0xe498b8 -> Node0xe4b4d0;
	Node0xe4b4d0 -> Node0xe4b540;
	Node0xe4b540 -> Node0xe4b5b0;
	Node0xe4b000 -> Node0xe4b5b0;
	Node0xe4b5b0 -> Node0xe4b620;
	Node0xe4b0e0 -> Node0xe4b620;
	Node0xe4b620 -> Node0xe4b690;
	Node0xe4b1c0 -> Node0xe4b690;
	Node0xe4b690 -> Node0xe4b700;
	Node0xe4b2a0 -> Node0xe4b700;
	Node0xe4b700 -> Node0xe4b770;
	Node0xe4b380 -> Node0xe4b770;
	Node0xe4b770 -> Node0xe4b7e0;
	Node0xe4b3f0 -> Node0xe4b7e0;
	Node0xe4b7e0 -> Node0xe4b850;
	Node0xe4b460 -> Node0xe4b850;
	Node0xe4b850 -> Node0xe4b8c0;
	Node0xe4af90 -> Node0xe4b8c0;
	Node0xe4b8c0 -> Node0xe4b930;
	Node0xe4a828 -> Node0xe4b930;
	Node0xe4b930 -> Node0xde99d8;
	Node0xde99d8 -> Node0xe4bbd0;
	Node0xe494a8 -> Node0xe4be28;
	Node0xe48f68 -> Node0xe4bf88;
}
