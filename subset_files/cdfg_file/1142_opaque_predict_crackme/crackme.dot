digraph "DFG for'crackme' function" {
	Node0x8bcd60[shape=record, label="  %5 = mul i32 %2, -2"];
	Node0x8bce00[shape=record, label="  %6 = or i32 %5, 1"];
	Node0x8bce70[shape=record, label="  %7 = xor i32 %3, %0"];
	Node0x8bcee0[shape=record, label="  %8 = add i32 %3, %1"];
	Node0x8bcf50[shape=record, label="  %9 = add i32 %8, %6"];
	Node0x8bcfc0[shape=record, label="  %10 = add i32 %9, %7"];
	Node0x8bd060[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x8bd0d0[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x8bd140[shape=record, label="  %13 = add i32 %12, 1"];
	Node0x8bd1b0[shape=record, label="  %14 = or i32 %11, %1"];
	Node0x8bd220[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x8bd290[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x8bd330[shape=record, label="  %17 = mul i32 %16, 5"];
	Node0x8bd3a0[shape=record, label="  %18 = xor i32 %14, -1"];
	Node0x8bd410[shape=record, label="  %19 = and i32 %2, %1"];
	Node0x8bd480[shape=record, label="  %20 = xor i32 %0, -1"];
	Node0x8bd520[shape=record, label="  %21 = shl i32 %7, 2"];
	Node0x8bd5c0[shape=record, label="  %22 = xor i32 %21, -4"];
	Node0x8bd630[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x8bd6a0[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x8bd710[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x8bd780[shape=record, label="  %26 = and i32 %20, %3"];
	Node0x8bd7f0[shape=record, label="  %27 = or i32 %20, %3"];
	Node0x8bd860[shape=record, label="  %28 = or i32 %3, %0"];
	Node0x8bd8d0[shape=record, label="  %29 = shl i32 %27, 1"];
	Node0x8bd940[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0x8bd9b0[shape=record, label="  %31 = shl i32 %26, 2"];
	Node0x8bda50[shape=record, label="  %32 = mul i32 %23, 3"];
	Node0x8bdcd0[shape=record, label="  %33 = add i32 %12, %20"];
	Node0x8bdd40[shape=record, label="  %34 = add i32 %33, %19"];
	Node0x8bddb0[shape=record, label="  %35 = add i32 %34, %13"];
	Node0x8bde20[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x8bdec0[shape=record, label="  %37 = add i32 %0, 4"];
	Node0x8bdf30[shape=record, label="  %38 = add i32 %37, %1"];
	Node0x8bdfa0[shape=record, label="  %39 = sub i32 %38, %14"];
	Node0x8be010[shape=record, label="  %40 = add i32 %39, %15"];
	Node0x8be080[shape=record, label="  %41 = add i32 %40, %18"];
	Node0x8be0f0[shape=record, label="  %42 = add i32 %41, %17"];
	Node0x8be160[shape=record, label="  %43 = add i32 %42, %26"];
	Node0x8be1d0[shape=record, label="  %44 = add i32 %43, %27"];
	Node0x8be240[shape=record, label="  %45 = add i32 %44, %28"];
	Node0x8be2b0[shape=record, label="  %46 = sub i32 %45, %31"];
	Node0x8be320[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x8be390[shape=record, label="  %48 = sub i32 %47, %22"];
	Node0x8be400[shape=record, label="  %49 = add i32 %48, %25"];
	Node0x8be470[shape=record, label="  %50 = sub i32 %49, %30"];
	Node0x8be4e0[shape=record, label="  %51 = add i32 %50, %36"];
	Node0x8be550[shape=record, label="  %52 = icmp eq i32 %10, %51"];
	Node0x85d268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8be9f0[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0x8bea40[shape=record, label="  ret void"];
	Node0x8bcd60 -> Node0x8bce00;
	Node0x8bce00 -> Node0x8bce70;
	Node0x8bce70 -> Node0x8bcee0;
	Node0x8bcee0 -> Node0x8bcf50;
	Node0x8bcf50 -> Node0x8bcfc0;
	Node0x8bcfc0 -> Node0x8bd060;
	Node0x8bd060 -> Node0x8bd0d0;
	Node0x8bd0d0 -> Node0x8bd140;
	Node0x8bd140 -> Node0x8bd1b0;
	Node0x8bd1b0 -> Node0x8bd220;
	Node0x8bd220 -> Node0x8bd290;
	Node0x8bd290 -> Node0x8bd330;
	Node0x8bd330 -> Node0x8bd3a0;
	Node0x8bd3a0 -> Node0x8bd410;
	Node0x8bd410 -> Node0x8bd480;
	Node0x8bd480 -> Node0x8bd520;
	Node0x8bd520 -> Node0x8bd5c0;
	Node0x8bd5c0 -> Node0x8bd630;
	Node0x8bd630 -> Node0x8bd6a0;
	Node0x8bd6a0 -> Node0x8bd710;
	Node0x8bd710 -> Node0x8bd780;
	Node0x8bd780 -> Node0x8bd7f0;
	Node0x8bd7f0 -> Node0x8bd860;
	Node0x8bd860 -> Node0x8bd8d0;
	Node0x8bd8d0 -> Node0x8bd940;
	Node0x8bd940 -> Node0x8bd9b0;
	Node0x8bd9b0 -> Node0x8bda50;
	Node0x8bda50 -> Node0x8bdcd0;
	Node0x8bdcd0 -> Node0x8bdd40;
	Node0x8bdd40 -> Node0x8bddb0;
	Node0x8bddb0 -> Node0x8bde20;
	Node0x8bde20 -> Node0x8bdec0;
	Node0x8bdec0 -> Node0x8bdf30;
	Node0x8bdf30 -> Node0x8bdfa0;
	Node0x8bdfa0 -> Node0x8be010;
	Node0x8be010 -> Node0x8be080;
	Node0x8be080 -> Node0x8be0f0;
	Node0x8be0f0 -> Node0x8be160;
	Node0x8be160 -> Node0x8be1d0;
	Node0x8be1d0 -> Node0x8be240;
	Node0x8be240 -> Node0x8be2b0;
	Node0x8be2b0 -> Node0x8be320;
	Node0x8be320 -> Node0x8be390;
	Node0x8be390 -> Node0x8be400;
	Node0x8be400 -> Node0x8be470;
	Node0x8be470 -> Node0x8be4e0;
	Node0x8be4e0 -> Node0x8be550;
	Node0x8be550 -> Node0x85d268;
	Node0x85d268 -> Node0x8be9f0;
	Node0x8be9f0 -> Node0x8bea40;
edge [color=red]
	Node0x8bcd60 -> Node0x8bce00;
	Node0x8bcee0 -> Node0x8bcf50;
	Node0x8bce00 -> Node0x8bcf50;
	Node0x8bcf50 -> Node0x8bcfc0;
	Node0x8bce70 -> Node0x8bcfc0;
	Node0x8bd060 -> Node0x8bd0d0;
	Node0x8bd0d0 -> Node0x8bd140;
	Node0x8bd060 -> Node0x8bd1b0;
	Node0x8bd220 -> Node0x8bd290;
	Node0x8bd290 -> Node0x8bd330;
	Node0x8bd1b0 -> Node0x8bd3a0;
	Node0x8bce70 -> Node0x8bd520;
	Node0x8bd520 -> Node0x8bd5c0;
	Node0x8bd630 -> Node0x8bd6a0;
	Node0x8bd6a0 -> Node0x8bd710;
	Node0x8bd480 -> Node0x8bd780;
	Node0x8bd480 -> Node0x8bd7f0;
	Node0x8bd7f0 -> Node0x8bd8d0;
	Node0x8bd8d0 -> Node0x8bd940;
	Node0x8bd780 -> Node0x8bd9b0;
	Node0x8bd630 -> Node0x8bda50;
	Node0x8bd0d0 -> Node0x8bdcd0;
	Node0x8bd480 -> Node0x8bdcd0;
	Node0x8bdcd0 -> Node0x8bdd40;
	Node0x8bd410 -> Node0x8bdd40;
	Node0x8bdd40 -> Node0x8bddb0;
	Node0x8bd140 -> Node0x8bddb0;
	Node0x8bddb0 -> Node0x8bde20;
	Node0x8bdec0 -> Node0x8bdf30;
	Node0x8bdf30 -> Node0x8bdfa0;
	Node0x8bd1b0 -> Node0x8bdfa0;
	Node0x8bdfa0 -> Node0x8be010;
	Node0x8bd220 -> Node0x8be010;
	Node0x8be010 -> Node0x8be080;
	Node0x8bd3a0 -> Node0x8be080;
	Node0x8be080 -> Node0x8be0f0;
	Node0x8bd330 -> Node0x8be0f0;
	Node0x8be0f0 -> Node0x8be160;
	Node0x8bd780 -> Node0x8be160;
	Node0x8be160 -> Node0x8be1d0;
	Node0x8bd7f0 -> Node0x8be1d0;
	Node0x8be1d0 -> Node0x8be240;
	Node0x8bd860 -> Node0x8be240;
	Node0x8be240 -> Node0x8be2b0;
	Node0x8bd9b0 -> Node0x8be2b0;
	Node0x8be2b0 -> Node0x8be320;
	Node0x8bda50 -> Node0x8be320;
	Node0x8be320 -> Node0x8be390;
	Node0x8bd5c0 -> Node0x8be390;
	Node0x8be390 -> Node0x8be400;
	Node0x8bd710 -> Node0x8be400;
	Node0x8be400 -> Node0x8be470;
	Node0x8bd940 -> Node0x8be470;
	Node0x8be470 -> Node0x8be4e0;
	Node0x8bde20 -> Node0x8be4e0;
	Node0x8bcfc0 -> Node0x8be550;
	Node0x8be4e0 -> Node0x8be550;
	Node0x8be550 -> Node0x85d268;
	Node0x85d268 -> Node0x8be9f0;
}
