digraph "DFG for'crackme' function" {
	Node0x1e8c300[shape=record, label="  %3 = xor i32 %1, %0"];
	Node0x1e8c370[shape=record, label="  %4 = and i32 %1, %0"];
	Node0x1e8ca40[shape=record, label="  %5 = xor i32 %4, -1"];
	Node0x1e8cae0[shape=record, label="  %6 = mul i32 %4, -6"];
	Node0x1e8cb80[shape=record, label="  %7 = mul i32 %4, 3"];
	Node0x1e8cc20[shape=record, label="  %8 = mul i32 %4, 5"];
	Node0x1e8cc90[shape=record, label="  %9 = or i32 %1, %0"];
	Node0x1e8cd00[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1e8cd70[shape=record, label="  %11 = add i32 %10, %5"];
	Node0x1e8cde0[shape=record, label="  %12 = add i32 %11, %3"];
	Node0x1e8ce50[shape=record, label="  %13 = add i32 %12, %6"];
	Node0x1e8cec0[shape=record, label="  %14 = add i32 %13, %8"];
	Node0x1e8cf30[shape=record, label="  %15 = add i32 %14, %7"];
	Node0x1e8cfd0[shape=record, label="  %16 = icmp eq i32 %15, -2"];
	Node0x1e2d268[shape=record, label="  %17 = select i1 %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e8d470[shape=record, label="  %18 = tail call i32 @puts(i8* nonnull dereferenceable(1) %17)"];
	Node0x1e8d4c0[shape=record, label="  ret void"];
	Node0x1e8c300 -> Node0x1e8c370;
	Node0x1e8c370 -> Node0x1e8ca40;
	Node0x1e8ca40 -> Node0x1e8cae0;
	Node0x1e8cae0 -> Node0x1e8cb80;
	Node0x1e8cb80 -> Node0x1e8cc20;
	Node0x1e8cc20 -> Node0x1e8cc90;
	Node0x1e8cc90 -> Node0x1e8cd00;
	Node0x1e8cd00 -> Node0x1e8cd70;
	Node0x1e8cd70 -> Node0x1e8cde0;
	Node0x1e8cde0 -> Node0x1e8ce50;
	Node0x1e8ce50 -> Node0x1e8cec0;
	Node0x1e8cec0 -> Node0x1e8cf30;
	Node0x1e8cf30 -> Node0x1e8cfd0;
	Node0x1e8cfd0 -> Node0x1e2d268;
	Node0x1e2d268 -> Node0x1e8d470;
	Node0x1e8d470 -> Node0x1e8d4c0;
edge [color=red]
	Node0x1e8c370 -> Node0x1e8ca40;
	Node0x1e8c370 -> Node0x1e8cae0;
	Node0x1e8c370 -> Node0x1e8cb80;
	Node0x1e8c370 -> Node0x1e8cc20;
	Node0x1e8cc90 -> Node0x1e8cd00;
	Node0x1e8cd00 -> Node0x1e8cd70;
	Node0x1e8ca40 -> Node0x1e8cd70;
	Node0x1e8cd70 -> Node0x1e8cde0;
	Node0x1e8c300 -> Node0x1e8cde0;
	Node0x1e8cde0 -> Node0x1e8ce50;
	Node0x1e8cae0 -> Node0x1e8ce50;
	Node0x1e8ce50 -> Node0x1e8cec0;
	Node0x1e8cc20 -> Node0x1e8cec0;
	Node0x1e8cec0 -> Node0x1e8cf30;
	Node0x1e8cb80 -> Node0x1e8cf30;
	Node0x1e8cf30 -> Node0x1e8cfd0;
	Node0x1e8cfd0 -> Node0x1e2d268;
	Node0x1e2d268 -> Node0x1e8d470;
}
