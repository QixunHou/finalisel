digraph "DFG for'main' function" {
	Node0x129ce28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x129cea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x129cf38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x129cf98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x129d048[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x129d478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x129d558[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x129d658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x129d718[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x129d7c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x129d888[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x129d938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1297bd0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x129db38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x129eaa8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x129f118[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x129f178[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x129f1f0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x129f260[shape=record, label="  %15 = and i32 %12, %11"];
	Node0x129f2d0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x129f340[shape=record, label="  %17 = sub i32 %16, %14"];
	Node0x129f3b0[shape=record, label="  %18 = and i32 %13, %10"];
	Node0x129f420[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x129f490[shape=record, label="  %20 = mul i32 %19, 5"];
	Node0x129f500[shape=record, label="  %21 = add i32 %17, %20"];
	Node0x129f570[shape=record, label="  %22 = xor i32 %10, -1"];
	Node0x129f5e0[shape=record, label="  %23 = or i32 %13, %22"];
	Node0x129f650[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x129f6c0[shape=record, label="  %25 = add i32 %21, %24"];
	Node0x129f730[shape=record, label="  %26 = xor i32 %12, -1"];
	Node0x129f7a0[shape=record, label="  %27 = mul i32 %26, -2"];
	Node0x129f810[shape=record, label="  %28 = mul i32 %11, -3"];
	Node0x129f880[shape=record, label="  %29 = xor i32 %11, %26"];
	Node0x129f8f0[shape=record, label="  %30 = shl i32 %14, 1"];
	Node0x129f960[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x129f9d0[shape=record, label="  %32 = and i32 %11, %26"];
	Node0x129fa40[shape=record, label="  %33 = and i32 %13, %22"];
	Node0x129fab0[shape=record, label="  %34 = xor i32 %33, -1"];
	Node0x129fb20[shape=record, label="  %35 = or i32 %13, %10"];
	Node0x129fb90[shape=record, label="  %36 = xor i32 %35, -1"];
	Node0x129fc00[shape=record, label="  %37 = xor i32 %23, -1"];
	Node0x129fc70[shape=record, label="  %38 = mul i32 %37, 6"];
	Node0x129fce0[shape=record, label="  %39 = shl i32 %33, 3"];
	Node0x129fd50[shape=record, label="  %40 = shl i32 %18, 2"];
	Node0x129fdc0[shape=record, label="  %41 = add i32 %32, %36"];
	Node0x129fe30[shape=record, label="  %42 = mul i32 %41, 5"];
	Node0x129fea0[shape=record, label="  %43 = sub i32 %22, %10"];
	Node0x129ff10[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x129ff80[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x129fff0[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x12a0060[shape=record, label="  %47 = add i32 %46, %15"];
	Node0x12a00d0[shape=record, label="  %48 = sub i32 %47, %13"];
	Node0x12a0140[shape=record, label="  %49 = add i32 %48, %34"];
	Node0x12a01b0[shape=record, label="  %50 = sub i32 %49, %35"];
	Node0x12a0220[shape=record, label="  %51 = add i32 %50, %31"];
	Node0x12a0290[shape=record, label="  %52 = add i32 %51, %38"];
	Node0x12a0300[shape=record, label="  %53 = add i32 %52, %39"];
	Node0x12a0370[shape=record, label="  %54 = add i32 %53, %40"];
	Node0x12a03e0[shape=record, label="  %55 = add i32 %54, %42"];
	Node0x12a0450[shape=record, label="  %56 = icmp eq i32 %25, %55"];
	Node0x123c8b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x12a04e0[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x12a0788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x12a08e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x12a09f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12a0b08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12a0bc8[shape=record, label="  ret i32 0"];
	Node0x129ce28 -> Node0x129cea8;
	Node0x129cea8 -> Node0x129cf38;
	Node0x129cf38 -> Node0x129cf98;
	Node0x129cf98 -> Node0x129d048;
	Node0x129d048 -> Node0x129d478;
	Node0x129d478 -> Node0x129d558;
	Node0x129d558 -> Node0x129d658;
	Node0x129d658 -> Node0x129d718;
	Node0x129d718 -> Node0x129d7c8;
	Node0x129d7c8 -> Node0x129d888;
	Node0x129d888 -> Node0x129d938;
	Node0x129d938 -> Node0x1297bd0;
	Node0x1297bd0 -> Node0x129db38;
	Node0x129db38 -> Node0x129eaa8;
	Node0x129eaa8 -> Node0x129f118;
	Node0x129f118 -> Node0x129f178;
	Node0x129f178 -> Node0x129f1f0;
	Node0x129f1f0 -> Node0x129f260;
	Node0x129f260 -> Node0x129f2d0;
	Node0x129f2d0 -> Node0x129f340;
	Node0x129f340 -> Node0x129f3b0;
	Node0x129f3b0 -> Node0x129f420;
	Node0x129f420 -> Node0x129f490;
	Node0x129f490 -> Node0x129f500;
	Node0x129f500 -> Node0x129f570;
	Node0x129f570 -> Node0x129f5e0;
	Node0x129f5e0 -> Node0x129f650;
	Node0x129f650 -> Node0x129f6c0;
	Node0x129f6c0 -> Node0x129f730;
	Node0x129f730 -> Node0x129f7a0;
	Node0x129f7a0 -> Node0x129f810;
	Node0x129f810 -> Node0x129f880;
	Node0x129f880 -> Node0x129f8f0;
	Node0x129f8f0 -> Node0x129f960;
	Node0x129f960 -> Node0x129f9d0;
	Node0x129f9d0 -> Node0x129fa40;
	Node0x129fa40 -> Node0x129fab0;
	Node0x129fab0 -> Node0x129fb20;
	Node0x129fb20 -> Node0x129fb90;
	Node0x129fb90 -> Node0x129fc00;
	Node0x129fc00 -> Node0x129fc70;
	Node0x129fc70 -> Node0x129fce0;
	Node0x129fce0 -> Node0x129fd50;
	Node0x129fd50 -> Node0x129fdc0;
	Node0x129fdc0 -> Node0x129fe30;
	Node0x129fe30 -> Node0x129fea0;
	Node0x129fea0 -> Node0x129ff10;
	Node0x129ff10 -> Node0x129ff80;
	Node0x129ff80 -> Node0x129fff0;
	Node0x129fff0 -> Node0x12a0060;
	Node0x12a0060 -> Node0x12a00d0;
	Node0x12a00d0 -> Node0x12a0140;
	Node0x12a0140 -> Node0x12a01b0;
	Node0x12a01b0 -> Node0x12a0220;
	Node0x12a0220 -> Node0x12a0290;
	Node0x12a0290 -> Node0x12a0300;
	Node0x12a0300 -> Node0x12a0370;
	Node0x12a0370 -> Node0x12a03e0;
	Node0x12a03e0 -> Node0x12a0450;
	Node0x12a0450 -> Node0x123c8b8;
	Node0x123c8b8 -> Node0x12a04e0;
	Node0x12a04e0 -> Node0x12a0788;
	Node0x12a0788 -> Node0x12a08e8;
	Node0x12a08e8 -> Node0x12a09f8;
	Node0x12a09f8 -> Node0x12a0b08;
	Node0x12a0b08 -> Node0x12a0bc8;
edge [color=red]
	Node0x129ce28 -> Node0x129d048;
	Node0x129d048 -> Node0x129d478;
	Node0x129cea8 -> Node0x129d558;
	Node0x129d558 -> Node0x129d658;
	Node0x129cf38 -> Node0x129d718;
	Node0x129d718 -> Node0x129d7c8;
	Node0x129cf98 -> Node0x129d888;
	Node0x129d888 -> Node0x129d938;
	Node0x129ce28 -> Node0x1297bd0;
	Node0x129cea8 -> Node0x1297bd0;
	Node0x129cf38 -> Node0x1297bd0;
	Node0x129cf98 -> Node0x1297bd0;
	Node0x129ce28 -> Node0x129db38;
	Node0x129cea8 -> Node0x129eaa8;
	Node0x129cf38 -> Node0x129f118;
	Node0x129cf98 -> Node0x129f178;
	Node0x129f118 -> Node0x129f1f0;
	Node0x129eaa8 -> Node0x129f1f0;
	Node0x129f118 -> Node0x129f260;
	Node0x129eaa8 -> Node0x129f260;
	Node0x129f260 -> Node0x129f2d0;
	Node0x129f2d0 -> Node0x129f340;
	Node0x129f1f0 -> Node0x129f340;
	Node0x129f178 -> Node0x129f3b0;
	Node0x129db38 -> Node0x129f3b0;
	Node0x129f3b0 -> Node0x129f420;
	Node0x129f420 -> Node0x129f490;
	Node0x129f340 -> Node0x129f500;
	Node0x129f490 -> Node0x129f500;
	Node0x129db38 -> Node0x129f570;
	Node0x129f178 -> Node0x129f5e0;
	Node0x129f570 -> Node0x129f5e0;
	Node0x129f5e0 -> Node0x129f650;
	Node0x129f500 -> Node0x129f6c0;
	Node0x129f650 -> Node0x129f6c0;
	Node0x129f118 -> Node0x129f730;
	Node0x129f730 -> Node0x129f7a0;
	Node0x129eaa8 -> Node0x129f810;
	Node0x129eaa8 -> Node0x129f880;
	Node0x129f730 -> Node0x129f880;
	Node0x129f1f0 -> Node0x129f8f0;
	Node0x129f8f0 -> Node0x129f960;
	Node0x129eaa8 -> Node0x129f9d0;
	Node0x129f730 -> Node0x129f9d0;
	Node0x129f178 -> Node0x129fa40;
	Node0x129f570 -> Node0x129fa40;
	Node0x129fa40 -> Node0x129fab0;
	Node0x129f178 -> Node0x129fb20;
	Node0x129db38 -> Node0x129fb20;
	Node0x129fb20 -> Node0x129fb90;
	Node0x129f5e0 -> Node0x129fc00;
	Node0x129fc00 -> Node0x129fc70;
	Node0x129fa40 -> Node0x129fce0;
	Node0x129f3b0 -> Node0x129fd50;
	Node0x129f9d0 -> Node0x129fdc0;
	Node0x129fb90 -> Node0x129fdc0;
	Node0x129fdc0 -> Node0x129fe30;
	Node0x129f570 -> Node0x129fea0;
	Node0x129db38 -> Node0x129fea0;
	Node0x129fea0 -> Node0x129ff10;
	Node0x129f810 -> Node0x129ff10;
	Node0x129ff10 -> Node0x129ff80;
	Node0x129f7a0 -> Node0x129ff80;
	Node0x129ff80 -> Node0x129fff0;
	Node0x129f880 -> Node0x129fff0;
	Node0x129fff0 -> Node0x12a0060;
	Node0x129f260 -> Node0x12a0060;
	Node0x12a0060 -> Node0x12a00d0;
	Node0x129f178 -> Node0x12a00d0;
	Node0x12a00d0 -> Node0x12a0140;
	Node0x129fab0 -> Node0x12a0140;
	Node0x12a0140 -> Node0x12a01b0;
	Node0x129fb20 -> Node0x12a01b0;
	Node0x12a01b0 -> Node0x12a0220;
	Node0x129f960 -> Node0x12a0220;
	Node0x12a0220 -> Node0x12a0290;
	Node0x129fc70 -> Node0x12a0290;
	Node0x12a0290 -> Node0x12a0300;
	Node0x129fce0 -> Node0x12a0300;
	Node0x12a0300 -> Node0x12a0370;
	Node0x129fd50 -> Node0x12a0370;
	Node0x12a0370 -> Node0x12a03e0;
	Node0x129fe30 -> Node0x12a03e0;
	Node0x129f6c0 -> Node0x12a0450;
	Node0x12a03e0 -> Node0x12a0450;
	Node0x12a0450 -> Node0x123c8b8;
	Node0x123c8b8 -> Node0x12a04e0;
	Node0x129d888 -> Node0x12a0788;
	Node0x129d718 -> Node0x12a08e8;
	Node0x129d558 -> Node0x12a09f8;
	Node0x129d048 -> Node0x12a0b08;
}
