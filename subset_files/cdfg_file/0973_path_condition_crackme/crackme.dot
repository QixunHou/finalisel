digraph "DFG for'crackme' function" {
	Node0x129aba0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x129ac10[shape=record, label="  %6 = and i32 %2, %1"];
	Node0x129b290[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x129b300[shape=record, label="  %8 = sub i32 %7, %5"];
	Node0x129b370[shape=record, label="  %9 = and i32 %3, %0"];
	Node0x129b3e0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x129b480[shape=record, label="  %11 = mul i32 %10, 5"];
	Node0x129b4f0[shape=record, label="  %12 = add i32 %8, %11"];
	Node0x129b560[shape=record, label="  %13 = xor i32 %0, -1"];
	Node0x129b5d0[shape=record, label="  %14 = or i32 %13, %3"];
	Node0x129b670[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x129b6e0[shape=record, label="  %16 = add i32 %12, %15"];
	Node0x129b750[shape=record, label="  %17 = xor i32 %2, -1"];
	Node0x129b7f0[shape=record, label="  %18 = mul i32 %17, -2"];
	Node0x129b890[shape=record, label="  %19 = mul i32 %1, -3"];
	Node0x129b900[shape=record, label="  %20 = xor i32 %17, %1"];
	Node0x129b970[shape=record, label="  %21 = shl i32 %5, 1"];
	Node0x129b9e0[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x129ba50[shape=record, label="  %23 = and i32 %17, %1"];
	Node0x129bac0[shape=record, label="  %24 = and i32 %13, %3"];
	Node0x129bb30[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x129bba0[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x129bc10[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x129bc80[shape=record, label="  %28 = xor i32 %14, -1"];
	Node0x129bd20[shape=record, label="  %29 = mul i32 %28, 6"];
	Node0x129bdc0[shape=record, label="  %30 = shl i32 %24, 3"];
	Node0x129be60[shape=record, label="  %31 = shl i32 %9, 2"];
	Node0x129bed0[shape=record, label="  %32 = add i32 %23, %27"];
	Node0x129c150[shape=record, label="  %33 = mul i32 %32, 5"];
	Node0x129c1c0[shape=record, label="  %34 = sub i32 %13, %0"];
	Node0x129c230[shape=record, label="  %35 = add i32 %34, %19"];
	Node0x129c2a0[shape=record, label="  %36 = add i32 %35, %18"];
	Node0x129c310[shape=record, label="  %37 = add i32 %36, %20"];
	Node0x129c380[shape=record, label="  %38 = add i32 %37, %6"];
	Node0x129c3f0[shape=record, label="  %39 = sub i32 %38, %3"];
	Node0x129c460[shape=record, label="  %40 = add i32 %39, %25"];
	Node0x129c4d0[shape=record, label="  %41 = sub i32 %40, %26"];
	Node0x129c540[shape=record, label="  %42 = add i32 %41, %22"];
	Node0x129c5b0[shape=record, label="  %43 = add i32 %42, %29"];
	Node0x129c620[shape=record, label="  %44 = add i32 %43, %30"];
	Node0x129c690[shape=record, label="  %45 = add i32 %44, %31"];
	Node0x129c700[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x129c770[shape=record, label="  %47 = icmp eq i32 %16, %46"];
	Node0x123b268[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x129cc10[shape=record, label="  %49 = tail call i32 @puts(i8* nonnull dereferenceable(1) %48)"];
	Node0x129cc60[shape=record, label="  ret void"];
	Node0x129aba0 -> Node0x129ac10;
	Node0x129ac10 -> Node0x129b290;
	Node0x129b290 -> Node0x129b300;
	Node0x129b300 -> Node0x129b370;
	Node0x129b370 -> Node0x129b3e0;
	Node0x129b3e0 -> Node0x129b480;
	Node0x129b480 -> Node0x129b4f0;
	Node0x129b4f0 -> Node0x129b560;
	Node0x129b560 -> Node0x129b5d0;
	Node0x129b5d0 -> Node0x129b670;
	Node0x129b670 -> Node0x129b6e0;
	Node0x129b6e0 -> Node0x129b750;
	Node0x129b750 -> Node0x129b7f0;
	Node0x129b7f0 -> Node0x129b890;
	Node0x129b890 -> Node0x129b900;
	Node0x129b900 -> Node0x129b970;
	Node0x129b970 -> Node0x129b9e0;
	Node0x129b9e0 -> Node0x129ba50;
	Node0x129ba50 -> Node0x129bac0;
	Node0x129bac0 -> Node0x129bb30;
	Node0x129bb30 -> Node0x129bba0;
	Node0x129bba0 -> Node0x129bc10;
	Node0x129bc10 -> Node0x129bc80;
	Node0x129bc80 -> Node0x129bd20;
	Node0x129bd20 -> Node0x129bdc0;
	Node0x129bdc0 -> Node0x129be60;
	Node0x129be60 -> Node0x129bed0;
	Node0x129bed0 -> Node0x129c150;
	Node0x129c150 -> Node0x129c1c0;
	Node0x129c1c0 -> Node0x129c230;
	Node0x129c230 -> Node0x129c2a0;
	Node0x129c2a0 -> Node0x129c310;
	Node0x129c310 -> Node0x129c380;
	Node0x129c380 -> Node0x129c3f0;
	Node0x129c3f0 -> Node0x129c460;
	Node0x129c460 -> Node0x129c4d0;
	Node0x129c4d0 -> Node0x129c540;
	Node0x129c540 -> Node0x129c5b0;
	Node0x129c5b0 -> Node0x129c620;
	Node0x129c620 -> Node0x129c690;
	Node0x129c690 -> Node0x129c700;
	Node0x129c700 -> Node0x129c770;
	Node0x129c770 -> Node0x123b268;
	Node0x123b268 -> Node0x129cc10;
	Node0x129cc10 -> Node0x129cc60;
edge [color=red]
	Node0x129ac10 -> Node0x129b290;
	Node0x129b290 -> Node0x129b300;
	Node0x129aba0 -> Node0x129b300;
	Node0x129b370 -> Node0x129b3e0;
	Node0x129b3e0 -> Node0x129b480;
	Node0x129b300 -> Node0x129b4f0;
	Node0x129b480 -> Node0x129b4f0;
	Node0x129b560 -> Node0x129b5d0;
	Node0x129b5d0 -> Node0x129b670;
	Node0x129b4f0 -> Node0x129b6e0;
	Node0x129b670 -> Node0x129b6e0;
	Node0x129b750 -> Node0x129b7f0;
	Node0x129b750 -> Node0x129b900;
	Node0x129aba0 -> Node0x129b970;
	Node0x129b970 -> Node0x129b9e0;
	Node0x129b750 -> Node0x129ba50;
	Node0x129b560 -> Node0x129bac0;
	Node0x129bac0 -> Node0x129bb30;
	Node0x129bba0 -> Node0x129bc10;
	Node0x129b5d0 -> Node0x129bc80;
	Node0x129bc80 -> Node0x129bd20;
	Node0x129bac0 -> Node0x129bdc0;
	Node0x129b370 -> Node0x129be60;
	Node0x129ba50 -> Node0x129bed0;
	Node0x129bc10 -> Node0x129bed0;
	Node0x129bed0 -> Node0x129c150;
	Node0x129b560 -> Node0x129c1c0;
	Node0x129c1c0 -> Node0x129c230;
	Node0x129b890 -> Node0x129c230;
	Node0x129c230 -> Node0x129c2a0;
	Node0x129b7f0 -> Node0x129c2a0;
	Node0x129c2a0 -> Node0x129c310;
	Node0x129b900 -> Node0x129c310;
	Node0x129c310 -> Node0x129c380;
	Node0x129ac10 -> Node0x129c380;
	Node0x129c380 -> Node0x129c3f0;
	Node0x129c3f0 -> Node0x129c460;
	Node0x129bb30 -> Node0x129c460;
	Node0x129c460 -> Node0x129c4d0;
	Node0x129bba0 -> Node0x129c4d0;
	Node0x129c4d0 -> Node0x129c540;
	Node0x129b9e0 -> Node0x129c540;
	Node0x129c540 -> Node0x129c5b0;
	Node0x129bd20 -> Node0x129c5b0;
	Node0x129c5b0 -> Node0x129c620;
	Node0x129bdc0 -> Node0x129c620;
	Node0x129c620 -> Node0x129c690;
	Node0x129be60 -> Node0x129c690;
	Node0x129c690 -> Node0x129c700;
	Node0x129c150 -> Node0x129c700;
	Node0x129b6e0 -> Node0x129c770;
	Node0x129c700 -> Node0x129c770;
	Node0x129c770 -> Node0x123b268;
	Node0x123b268 -> Node0x129cc10;
}
