digraph "DFG for'crackme' function" {
	Node0x198bb70[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x198c1f0[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x198c260[shape=record, label="  %7 = or i32 %3, %0"];
	Node0x198c2d0[shape=record, label="  %8 = sub i32 %6, %7"];
	Node0x198c340[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x198c3b0[shape=record, label="  %10 = or i32 %9, %1"];
	Node0x198c450[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x198c4c0[shape=record, label="  %12 = xor i32 %2, %1"];
	Node0x198c530[shape=record, label="  %13 = shl i32 %9, 1"];
	Node0x198c5d0[shape=record, label="  %14 = xor i32 %11, -2"];
	Node0x198c640[shape=record, label="  %15 = and i32 %9, %1"];
	Node0x198c6b0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x198c720[shape=record, label="  %17 = xor i32 %0, -1"];
	Node0x198c790[shape=record, label="  %18 = or i32 %17, %3"];
	Node0x198c800[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x198c870[shape=record, label="  %20 = xor i32 %3, %0"];
	Node0x198c8e0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x198c950[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x198c9c0[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x198ca30[shape=record, label="  %24 = xor i32 %7, -1"];
	Node0x198caa0[shape=record, label="  %25 = xor i32 %19, -2"];
	Node0x198cb10[shape=record, label="  %26 = and i32 %17, %3"];
	Node0x198cb80[shape=record, label="  %27 = shl i32 %23, 1"];
	Node0x198cbf0[shape=record, label="  %28 = sub i32 %24, %5"];
	Node0x198cc90[shape=record, label="  %29 = mul i32 %28, 3"];
	Node0x198cd00[shape=record, label="  %30 = add i32 %12, %3"];
	Node0x198cd70[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x198ce10[shape=record, label="  %32 = add i32 %0, 2"];
	Node0x198d090[shape=record, label="  %33 = sub i32 %32, %13"];
	Node0x198d100[shape=record, label="  %34 = add i32 %33, %11"];
	Node0x198d170[shape=record, label="  %35 = sub i32 %34, %16"];
	Node0x198d1e0[shape=record, label="  %36 = sub i32 %35, %20"];
	Node0x198d250[shape=record, label="  %37 = add i32 %36, %23"];
	Node0x198d2c0[shape=record, label="  %38 = sub i32 %37, %26"];
	Node0x198d330[shape=record, label="  %39 = sub i32 %38, %14"];
	Node0x198d3a0[shape=record, label="  %40 = add i32 %39, %19"];
	Node0x198d410[shape=record, label="  %41 = sub i32 %40, %27"];
	Node0x198d480[shape=record, label="  %42 = add i32 %41, %31"];
	Node0x198d4f0[shape=record, label="  %43 = sub i32 %42, %22"];
	Node0x198d560[shape=record, label="  %44 = add i32 %43, %25"];
	Node0x198d5d0[shape=record, label="  %45 = add i32 %44, %29"];
	Node0x198d640[shape=record, label="  %46 = icmp eq i32 %8, %45"];
	Node0x192c268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x198dae0[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0x198db30[shape=record, label="  ret void"];
	Node0x198bb70 -> Node0x198c1f0;
	Node0x198c1f0 -> Node0x198c260;
	Node0x198c260 -> Node0x198c2d0;
	Node0x198c2d0 -> Node0x198c340;
	Node0x198c340 -> Node0x198c3b0;
	Node0x198c3b0 -> Node0x198c450;
	Node0x198c450 -> Node0x198c4c0;
	Node0x198c4c0 -> Node0x198c530;
	Node0x198c530 -> Node0x198c5d0;
	Node0x198c5d0 -> Node0x198c640;
	Node0x198c640 -> Node0x198c6b0;
	Node0x198c6b0 -> Node0x198c720;
	Node0x198c720 -> Node0x198c790;
	Node0x198c790 -> Node0x198c800;
	Node0x198c800 -> Node0x198c870;
	Node0x198c870 -> Node0x198c8e0;
	Node0x198c8e0 -> Node0x198c950;
	Node0x198c950 -> Node0x198c9c0;
	Node0x198c9c0 -> Node0x198ca30;
	Node0x198ca30 -> Node0x198caa0;
	Node0x198caa0 -> Node0x198cb10;
	Node0x198cb10 -> Node0x198cb80;
	Node0x198cb80 -> Node0x198cbf0;
	Node0x198cbf0 -> Node0x198cc90;
	Node0x198cc90 -> Node0x198cd00;
	Node0x198cd00 -> Node0x198cd70;
	Node0x198cd70 -> Node0x198ce10;
	Node0x198ce10 -> Node0x198d090;
	Node0x198d090 -> Node0x198d100;
	Node0x198d100 -> Node0x198d170;
	Node0x198d170 -> Node0x198d1e0;
	Node0x198d1e0 -> Node0x198d250;
	Node0x198d250 -> Node0x198d2c0;
	Node0x198d2c0 -> Node0x198d330;
	Node0x198d330 -> Node0x198d3a0;
	Node0x198d3a0 -> Node0x198d410;
	Node0x198d410 -> Node0x198d480;
	Node0x198d480 -> Node0x198d4f0;
	Node0x198d4f0 -> Node0x198d560;
	Node0x198d560 -> Node0x198d5d0;
	Node0x198d5d0 -> Node0x198d640;
	Node0x198d640 -> Node0x192c268;
	Node0x192c268 -> Node0x198dae0;
	Node0x198dae0 -> Node0x198db30;
edge [color=red]
	Node0x198bb70 -> Node0x198c1f0;
	Node0x198c1f0 -> Node0x198c2d0;
	Node0x198c260 -> Node0x198c2d0;
	Node0x198c340 -> Node0x198c3b0;
	Node0x198c3b0 -> Node0x198c450;
	Node0x198c340 -> Node0x198c530;
	Node0x198c450 -> Node0x198c5d0;
	Node0x198c340 -> Node0x198c640;
	Node0x198c640 -> Node0x198c6b0;
	Node0x198c720 -> Node0x198c790;
	Node0x198c790 -> Node0x198c800;
	Node0x198c870 -> Node0x198c8e0;
	Node0x198c8e0 -> Node0x198c950;
	Node0x198c260 -> Node0x198ca30;
	Node0x198c800 -> Node0x198caa0;
	Node0x198c720 -> Node0x198cb10;
	Node0x198c9c0 -> Node0x198cb80;
	Node0x198ca30 -> Node0x198cbf0;
	Node0x198bb70 -> Node0x198cbf0;
	Node0x198cbf0 -> Node0x198cc90;
	Node0x198c4c0 -> Node0x198cd00;
	Node0x198cd00 -> Node0x198cd70;
	Node0x198ce10 -> Node0x198d090;
	Node0x198c530 -> Node0x198d090;
	Node0x198d090 -> Node0x198d100;
	Node0x198c450 -> Node0x198d100;
	Node0x198d100 -> Node0x198d170;
	Node0x198c6b0 -> Node0x198d170;
	Node0x198d170 -> Node0x198d1e0;
	Node0x198c870 -> Node0x198d1e0;
	Node0x198d1e0 -> Node0x198d250;
	Node0x198c9c0 -> Node0x198d250;
	Node0x198d250 -> Node0x198d2c0;
	Node0x198cb10 -> Node0x198d2c0;
	Node0x198d2c0 -> Node0x198d330;
	Node0x198c5d0 -> Node0x198d330;
	Node0x198d330 -> Node0x198d3a0;
	Node0x198c800 -> Node0x198d3a0;
	Node0x198d3a0 -> Node0x198d410;
	Node0x198cb80 -> Node0x198d410;
	Node0x198d410 -> Node0x198d480;
	Node0x198cd70 -> Node0x198d480;
	Node0x198d480 -> Node0x198d4f0;
	Node0x198c950 -> Node0x198d4f0;
	Node0x198d4f0 -> Node0x198d560;
	Node0x198caa0 -> Node0x198d560;
	Node0x198d560 -> Node0x198d5d0;
	Node0x198cc90 -> Node0x198d5d0;
	Node0x198c2d0 -> Node0x198d640;
	Node0x198d5d0 -> Node0x198d640;
	Node0x198d640 -> Node0x192c268;
	Node0x192c268 -> Node0x198dae0;
}
