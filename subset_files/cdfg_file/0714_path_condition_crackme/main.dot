digraph "DFG for'main' function" {
	Node0x198dcf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x198dd78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x198de08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x198de68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x198df18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x198e348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x198e428[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x198e528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x198e5e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x198e698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x198e758[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x198e808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1988ba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x198ea08[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x198f978[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x198ffe8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1990048[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x19900c0[shape=record, label="  %14 = and i32 %12, %11"];
	Node0x1990130[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x19901a0[shape=record, label="  %16 = or i32 %13, %10"];
	Node0x1990210[shape=record, label="  %17 = sub i32 %15, %16"];
	Node0x1990280[shape=record, label="  %18 = xor i32 %12, -1"];
	Node0x19902f0[shape=record, label="  %19 = or i32 %11, %18"];
	Node0x1990360[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x19903d0[shape=record, label="  %21 = xor i32 %12, %11"];
	Node0x1990440[shape=record, label="  %22 = shl i32 %18, 1"];
	Node0x19904b0[shape=record, label="  %23 = xor i32 %20, -2"];
	Node0x1990520[shape=record, label="  %24 = and i32 %11, %18"];
	Node0x1990590[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x1990600[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0x1990670[shape=record, label="  %27 = or i32 %13, %26"];
	Node0x19906e0[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x1990750[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x19907c0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x1990830[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x19908a0[shape=record, label="  %32 = and i32 %13, %10"];
	Node0x1990910[shape=record, label="  %33 = xor i32 %16, -1"];
	Node0x1990980[shape=record, label="  %34 = xor i32 %28, -2"];
	Node0x19909f0[shape=record, label="  %35 = and i32 %13, %26"];
	Node0x1990a60[shape=record, label="  %36 = shl i32 %32, 1"];
	Node0x1990ad0[shape=record, label="  %37 = sub i32 %33, %14"];
	Node0x1990b40[shape=record, label="  %38 = mul i32 %37, 3"];
	Node0x1990bb0[shape=record, label="  %39 = add i32 %21, %13"];
	Node0x1990c20[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x1990c90[shape=record, label="  %41 = add i32 %10, 2"];
	Node0x1990d00[shape=record, label="  %42 = sub i32 %41, %22"];
	Node0x1990d70[shape=record, label="  %43 = add i32 %42, %20"];
	Node0x1990de0[shape=record, label="  %44 = sub i32 %43, %25"];
	Node0x1990e50[shape=record, label="  %45 = sub i32 %44, %29"];
	Node0x1990ec0[shape=record, label="  %46 = add i32 %45, %32"];
	Node0x1990f30[shape=record, label="  %47 = sub i32 %46, %35"];
	Node0x1990fa0[shape=record, label="  %48 = sub i32 %47, %23"];
	Node0x1991010[shape=record, label="  %49 = add i32 %48, %28"];
	Node0x1991080[shape=record, label="  %50 = sub i32 %49, %36"];
	Node0x19910f0[shape=record, label="  %51 = add i32 %50, %40"];
	Node0x1991160[shape=record, label="  %52 = sub i32 %51, %31"];
	Node0x19911d0[shape=record, label="  %53 = add i32 %52, %34"];
	Node0x1991240[shape=record, label="  %54 = add i32 %53, %38"];
	Node0x19912b0[shape=record, label="  %55 = icmp eq i32 %17, %54"];
	Node0x192d8b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1991340[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x19915e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1991748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1991858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1991968[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1991a28[shape=record, label="  ret i32 0"];
	Node0x198dcf8 -> Node0x198dd78;
	Node0x198dd78 -> Node0x198de08;
	Node0x198de08 -> Node0x198de68;
	Node0x198de68 -> Node0x198df18;
	Node0x198df18 -> Node0x198e348;
	Node0x198e348 -> Node0x198e428;
	Node0x198e428 -> Node0x198e528;
	Node0x198e528 -> Node0x198e5e8;
	Node0x198e5e8 -> Node0x198e698;
	Node0x198e698 -> Node0x198e758;
	Node0x198e758 -> Node0x198e808;
	Node0x198e808 -> Node0x1988ba0;
	Node0x1988ba0 -> Node0x198ea08;
	Node0x198ea08 -> Node0x198f978;
	Node0x198f978 -> Node0x198ffe8;
	Node0x198ffe8 -> Node0x1990048;
	Node0x1990048 -> Node0x19900c0;
	Node0x19900c0 -> Node0x1990130;
	Node0x1990130 -> Node0x19901a0;
	Node0x19901a0 -> Node0x1990210;
	Node0x1990210 -> Node0x1990280;
	Node0x1990280 -> Node0x19902f0;
	Node0x19902f0 -> Node0x1990360;
	Node0x1990360 -> Node0x19903d0;
	Node0x19903d0 -> Node0x1990440;
	Node0x1990440 -> Node0x19904b0;
	Node0x19904b0 -> Node0x1990520;
	Node0x1990520 -> Node0x1990590;
	Node0x1990590 -> Node0x1990600;
	Node0x1990600 -> Node0x1990670;
	Node0x1990670 -> Node0x19906e0;
	Node0x19906e0 -> Node0x1990750;
	Node0x1990750 -> Node0x19907c0;
	Node0x19907c0 -> Node0x1990830;
	Node0x1990830 -> Node0x19908a0;
	Node0x19908a0 -> Node0x1990910;
	Node0x1990910 -> Node0x1990980;
	Node0x1990980 -> Node0x19909f0;
	Node0x19909f0 -> Node0x1990a60;
	Node0x1990a60 -> Node0x1990ad0;
	Node0x1990ad0 -> Node0x1990b40;
	Node0x1990b40 -> Node0x1990bb0;
	Node0x1990bb0 -> Node0x1990c20;
	Node0x1990c20 -> Node0x1990c90;
	Node0x1990c90 -> Node0x1990d00;
	Node0x1990d00 -> Node0x1990d70;
	Node0x1990d70 -> Node0x1990de0;
	Node0x1990de0 -> Node0x1990e50;
	Node0x1990e50 -> Node0x1990ec0;
	Node0x1990ec0 -> Node0x1990f30;
	Node0x1990f30 -> Node0x1990fa0;
	Node0x1990fa0 -> Node0x1991010;
	Node0x1991010 -> Node0x1991080;
	Node0x1991080 -> Node0x19910f0;
	Node0x19910f0 -> Node0x1991160;
	Node0x1991160 -> Node0x19911d0;
	Node0x19911d0 -> Node0x1991240;
	Node0x1991240 -> Node0x19912b0;
	Node0x19912b0 -> Node0x192d8b8;
	Node0x192d8b8 -> Node0x1991340;
	Node0x1991340 -> Node0x19915e8;
	Node0x19915e8 -> Node0x1991748;
	Node0x1991748 -> Node0x1991858;
	Node0x1991858 -> Node0x1991968;
	Node0x1991968 -> Node0x1991a28;
edge [color=red]
	Node0x198dcf8 -> Node0x198df18;
	Node0x198df18 -> Node0x198e348;
	Node0x198dd78 -> Node0x198e428;
	Node0x198e428 -> Node0x198e528;
	Node0x198de08 -> Node0x198e5e8;
	Node0x198e5e8 -> Node0x198e698;
	Node0x198de68 -> Node0x198e758;
	Node0x198e758 -> Node0x198e808;
	Node0x198dcf8 -> Node0x1988ba0;
	Node0x198dd78 -> Node0x1988ba0;
	Node0x198de08 -> Node0x1988ba0;
	Node0x198de68 -> Node0x1988ba0;
	Node0x198dcf8 -> Node0x198ea08;
	Node0x198dd78 -> Node0x198f978;
	Node0x198de08 -> Node0x198ffe8;
	Node0x198de68 -> Node0x1990048;
	Node0x198ffe8 -> Node0x19900c0;
	Node0x198f978 -> Node0x19900c0;
	Node0x19900c0 -> Node0x1990130;
	Node0x1990048 -> Node0x19901a0;
	Node0x198ea08 -> Node0x19901a0;
	Node0x1990130 -> Node0x1990210;
	Node0x19901a0 -> Node0x1990210;
	Node0x198ffe8 -> Node0x1990280;
	Node0x198f978 -> Node0x19902f0;
	Node0x1990280 -> Node0x19902f0;
	Node0x19902f0 -> Node0x1990360;
	Node0x198ffe8 -> Node0x19903d0;
	Node0x198f978 -> Node0x19903d0;
	Node0x1990280 -> Node0x1990440;
	Node0x1990360 -> Node0x19904b0;
	Node0x198f978 -> Node0x1990520;
	Node0x1990280 -> Node0x1990520;
	Node0x1990520 -> Node0x1990590;
	Node0x198ea08 -> Node0x1990600;
	Node0x1990048 -> Node0x1990670;
	Node0x1990600 -> Node0x1990670;
	Node0x1990670 -> Node0x19906e0;
	Node0x1990048 -> Node0x1990750;
	Node0x198ea08 -> Node0x1990750;
	Node0x1990750 -> Node0x19907c0;
	Node0x19907c0 -> Node0x1990830;
	Node0x1990048 -> Node0x19908a0;
	Node0x198ea08 -> Node0x19908a0;
	Node0x19901a0 -> Node0x1990910;
	Node0x19906e0 -> Node0x1990980;
	Node0x1990048 -> Node0x19909f0;
	Node0x1990600 -> Node0x19909f0;
	Node0x19908a0 -> Node0x1990a60;
	Node0x1990910 -> Node0x1990ad0;
	Node0x19900c0 -> Node0x1990ad0;
	Node0x1990ad0 -> Node0x1990b40;
	Node0x19903d0 -> Node0x1990bb0;
	Node0x1990048 -> Node0x1990bb0;
	Node0x1990bb0 -> Node0x1990c20;
	Node0x198ea08 -> Node0x1990c90;
	Node0x1990c90 -> Node0x1990d00;
	Node0x1990440 -> Node0x1990d00;
	Node0x1990d00 -> Node0x1990d70;
	Node0x1990360 -> Node0x1990d70;
	Node0x1990d70 -> Node0x1990de0;
	Node0x1990590 -> Node0x1990de0;
	Node0x1990de0 -> Node0x1990e50;
	Node0x1990750 -> Node0x1990e50;
	Node0x1990e50 -> Node0x1990ec0;
	Node0x19908a0 -> Node0x1990ec0;
	Node0x1990ec0 -> Node0x1990f30;
	Node0x19909f0 -> Node0x1990f30;
	Node0x1990f30 -> Node0x1990fa0;
	Node0x19904b0 -> Node0x1990fa0;
	Node0x1990fa0 -> Node0x1991010;
	Node0x19906e0 -> Node0x1991010;
	Node0x1991010 -> Node0x1991080;
	Node0x1990a60 -> Node0x1991080;
	Node0x1991080 -> Node0x19910f0;
	Node0x1990c20 -> Node0x19910f0;
	Node0x19910f0 -> Node0x1991160;
	Node0x1990830 -> Node0x1991160;
	Node0x1991160 -> Node0x19911d0;
	Node0x1990980 -> Node0x19911d0;
	Node0x19911d0 -> Node0x1991240;
	Node0x1990b40 -> Node0x1991240;
	Node0x1990210 -> Node0x19912b0;
	Node0x1991240 -> Node0x19912b0;
	Node0x19912b0 -> Node0x192d8b8;
	Node0x192d8b8 -> Node0x1991340;
	Node0x198e758 -> Node0x19915e8;
	Node0x198e5e8 -> Node0x1991748;
	Node0x198e428 -> Node0x1991858;
	Node0x198df18 -> Node0x1991968;
}
