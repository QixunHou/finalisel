digraph "DFG for'main' function" {
	Node0xa80d98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa80e18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa80ea8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xa81308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xa813e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xa81508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa81740[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xa817f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa82768[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa82df0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0xa82e60[shape=record, label="  %9 = or i32 %7, %6"];
	Node0xa82ed0[shape=record, label="  %10 = add i32 %9, 1"];
	Node0xa82f40[shape=record, label="  %11 = add i32 %10, %8"];
	Node0xa82fb0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0xa83020[shape=record, label="  %13 = or i32 %6, %12"];
	Node0xa83090[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0xa83100[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xa83170[shape=record, label="  %16 = and i32 %6, %12"];
	Node0xa831e0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0xa83250[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0xa832c0[shape=record, label="  %19 = shl i32 %14, 1"];
	Node0xa83330[shape=record, label="  %20 = shl i32 %7, 1"];
	Node0xa833a0[shape=record, label="  %21 = sub i32 %6, %16"];
	Node0xa83410[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0xa83480[shape=record, label="  %23 = add i32 %6, 3"];
	Node0xa834f0[shape=record, label="  %24 = sub i32 %23, %13"];
	Node0xa83560[shape=record, label="  %25 = add i32 %24, %15"];
	Node0xa835d0[shape=record, label="  %26 = sub i32 %25, %20"];
	Node0xa83640[shape=record, label="  %27 = add i32 %26, %9"];
	Node0xa836b0[shape=record, label="  %28 = sub i32 %27, %8"];
	Node0xa83720[shape=record, label="  %29 = add i32 %28, %19"];
	Node0xa83790[shape=record, label="  %30 = add i32 %29, %18"];
	Node0xa83800[shape=record, label="  %31 = add i32 %30, %22"];
	Node0xa83870[shape=record, label="  %32 = icmp eq i32 %11, %31"];
	Node0xa219d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa83b10[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0xa83d68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa83ec8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xa83f88[shape=record, label="  ret i32 0"];
	Node0xa80d98 -> Node0xa80e18;
	Node0xa80e18 -> Node0xa80ea8;
	Node0xa80ea8 -> Node0xa81308;
	Node0xa81308 -> Node0xa813e8;
	Node0xa813e8 -> Node0xa81508;
	Node0xa81508 -> Node0xa81740;
	Node0xa81740 -> Node0xa817f8;
	Node0xa817f8 -> Node0xa82768;
	Node0xa82768 -> Node0xa82df0;
	Node0xa82df0 -> Node0xa82e60;
	Node0xa82e60 -> Node0xa82ed0;
	Node0xa82ed0 -> Node0xa82f40;
	Node0xa82f40 -> Node0xa82fb0;
	Node0xa82fb0 -> Node0xa83020;
	Node0xa83020 -> Node0xa83090;
	Node0xa83090 -> Node0xa83100;
	Node0xa83100 -> Node0xa83170;
	Node0xa83170 -> Node0xa831e0;
	Node0xa831e0 -> Node0xa83250;
	Node0xa83250 -> Node0xa832c0;
	Node0xa832c0 -> Node0xa83330;
	Node0xa83330 -> Node0xa833a0;
	Node0xa833a0 -> Node0xa83410;
	Node0xa83410 -> Node0xa83480;
	Node0xa83480 -> Node0xa834f0;
	Node0xa834f0 -> Node0xa83560;
	Node0xa83560 -> Node0xa835d0;
	Node0xa835d0 -> Node0xa83640;
	Node0xa83640 -> Node0xa836b0;
	Node0xa836b0 -> Node0xa83720;
	Node0xa83720 -> Node0xa83790;
	Node0xa83790 -> Node0xa83800;
	Node0xa83800 -> Node0xa83870;
	Node0xa83870 -> Node0xa219d8;
	Node0xa219d8 -> Node0xa83b10;
	Node0xa83b10 -> Node0xa83d68;
	Node0xa83d68 -> Node0xa83ec8;
	Node0xa83ec8 -> Node0xa83f88;
edge [color=red]
	Node0xa80d98 -> Node0xa80ea8;
	Node0xa80ea8 -> Node0xa81308;
	Node0xa80e18 -> Node0xa813e8;
	Node0xa813e8 -> Node0xa81508;
	Node0xa80d98 -> Node0xa81740;
	Node0xa80e18 -> Node0xa81740;
	Node0xa80d98 -> Node0xa817f8;
	Node0xa80e18 -> Node0xa82768;
	Node0xa82768 -> Node0xa82df0;
	Node0xa817f8 -> Node0xa82df0;
	Node0xa82768 -> Node0xa82e60;
	Node0xa817f8 -> Node0xa82e60;
	Node0xa82e60 -> Node0xa82ed0;
	Node0xa82ed0 -> Node0xa82f40;
	Node0xa82df0 -> Node0xa82f40;
	Node0xa82768 -> Node0xa82fb0;
	Node0xa817f8 -> Node0xa83020;
	Node0xa82fb0 -> Node0xa83020;
	Node0xa82768 -> Node0xa83090;
	Node0xa817f8 -> Node0xa83090;
	Node0xa83090 -> Node0xa83100;
	Node0xa817f8 -> Node0xa83170;
	Node0xa82fb0 -> Node0xa83170;
	Node0xa83170 -> Node0xa831e0;
	Node0xa831e0 -> Node0xa83250;
	Node0xa83090 -> Node0xa832c0;
	Node0xa82768 -> Node0xa83330;
	Node0xa817f8 -> Node0xa833a0;
	Node0xa83170 -> Node0xa833a0;
	Node0xa833a0 -> Node0xa83410;
	Node0xa817f8 -> Node0xa83480;
	Node0xa83480 -> Node0xa834f0;
	Node0xa83020 -> Node0xa834f0;
	Node0xa834f0 -> Node0xa83560;
	Node0xa83100 -> Node0xa83560;
	Node0xa83560 -> Node0xa835d0;
	Node0xa83330 -> Node0xa835d0;
	Node0xa835d0 -> Node0xa83640;
	Node0xa82e60 -> Node0xa83640;
	Node0xa83640 -> Node0xa836b0;
	Node0xa82df0 -> Node0xa836b0;
	Node0xa836b0 -> Node0xa83720;
	Node0xa832c0 -> Node0xa83720;
	Node0xa83720 -> Node0xa83790;
	Node0xa83250 -> Node0xa83790;
	Node0xa83790 -> Node0xa83800;
	Node0xa83410 -> Node0xa83800;
	Node0xa82f40 -> Node0xa83870;
	Node0xa83800 -> Node0xa83870;
	Node0xa83870 -> Node0xa219d8;
	Node0xa219d8 -> Node0xa83b10;
	Node0xa813e8 -> Node0xa83d68;
	Node0xa80ea8 -> Node0xa83ec8;
}
