digraph "DFG for'main' function" {
	Node0x502898[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x502918[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5029a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x502a08[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x502ab8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x502ee8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x502fc8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x5030c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x503188[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x503238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5032f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x5033a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x4fda50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x5035a8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x504518[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x504b88[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x504be8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x504c60[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x504cd0[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x504d40[shape=record, label="  %16 = or i32 %13, %15"];
	Node0x504db0[shape=record, label="  %17 = sub i32 %14, %16"];
	Node0x504e20[shape=record, label="  %18 = xor i32 %12, %11"];
	Node0x504e90[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x504f00[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x504f70[shape=record, label="  %21 = or i32 %11, %14"];
	Node0x504fe0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x505050[shape=record, label="  %23 = and i32 %11, %14"];
	Node0x5050c0[shape=record, label="  %24 = or i32 %12, %11"];
	Node0x505130[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x5051a0[shape=record, label="  %26 = xor i32 %21, -1"];
	Node0x505210[shape=record, label="  %27 = and i32 %13, %10"];
	Node0x505280[shape=record, label="  %28 = and i32 %13, %15"];
	Node0x5052f0[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x505360[shape=record, label="  %30 = xor i32 %13, %10"];
	Node0x5053d0[shape=record, label="  %31 = add i32 %23, %26"];
	Node0x505440[shape=record, label="  %32 = add i32 %31, %25"];
	Node0x5054b0[shape=record, label="  %33 = sub i32 %32, %28"];
	Node0x505520[shape=record, label="  %34 = sub i32 %33, %27"];
	Node0x505590[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x505600[shape=record, label="  %36 = add i32 %13, %11"];
	Node0x505670[shape=record, label="  %37 = add i32 %36, %30"];
	Node0x5056e0[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x505750[shape=record, label="  %39 = sub i32 5, %18"];
	Node0x5057c0[shape=record, label="  %40 = add i32 %39, %23"];
	Node0x505830[shape=record, label="  %41 = sub i32 %40, %22"];
	Node0x5058a0[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x505910[shape=record, label="  %43 = add i32 %42, %29"];
	Node0x505980[shape=record, label="  %44 = add i32 %43, %16"];
	Node0x5059f0[shape=record, label="  %45 = add i32 %44, %20"];
	Node0x505a60[shape=record, label="  %46 = add i32 %45, %38"];
	Node0x505ad0[shape=record, label="  %47 = add i32 %46, %35"];
	Node0x505b40[shape=record, label="  %48 = icmp eq i32 %17, %47"];
	Node0x4a28b8[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x505bd0[shape=record, label="  %50 = call i32 @puts(i8* nonnull dereferenceable(1) %49) #5"];
	Node0x505e78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x505fd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5060e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5061f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5062b8[shape=record, label="  ret i32 0"];
	Node0x502898 -> Node0x502918;
	Node0x502918 -> Node0x5029a8;
	Node0x5029a8 -> Node0x502a08;
	Node0x502a08 -> Node0x502ab8;
	Node0x502ab8 -> Node0x502ee8;
	Node0x502ee8 -> Node0x502fc8;
	Node0x502fc8 -> Node0x5030c8;
	Node0x5030c8 -> Node0x503188;
	Node0x503188 -> Node0x503238;
	Node0x503238 -> Node0x5032f8;
	Node0x5032f8 -> Node0x5033a8;
	Node0x5033a8 -> Node0x4fda50;
	Node0x4fda50 -> Node0x5035a8;
	Node0x5035a8 -> Node0x504518;
	Node0x504518 -> Node0x504b88;
	Node0x504b88 -> Node0x504be8;
	Node0x504be8 -> Node0x504c60;
	Node0x504c60 -> Node0x504cd0;
	Node0x504cd0 -> Node0x504d40;
	Node0x504d40 -> Node0x504db0;
	Node0x504db0 -> Node0x504e20;
	Node0x504e20 -> Node0x504e90;
	Node0x504e90 -> Node0x504f00;
	Node0x504f00 -> Node0x504f70;
	Node0x504f70 -> Node0x504fe0;
	Node0x504fe0 -> Node0x505050;
	Node0x505050 -> Node0x5050c0;
	Node0x5050c0 -> Node0x505130;
	Node0x505130 -> Node0x5051a0;
	Node0x5051a0 -> Node0x505210;
	Node0x505210 -> Node0x505280;
	Node0x505280 -> Node0x5052f0;
	Node0x5052f0 -> Node0x505360;
	Node0x505360 -> Node0x5053d0;
	Node0x5053d0 -> Node0x505440;
	Node0x505440 -> Node0x5054b0;
	Node0x5054b0 -> Node0x505520;
	Node0x505520 -> Node0x505590;
	Node0x505590 -> Node0x505600;
	Node0x505600 -> Node0x505670;
	Node0x505670 -> Node0x5056e0;
	Node0x5056e0 -> Node0x505750;
	Node0x505750 -> Node0x5057c0;
	Node0x5057c0 -> Node0x505830;
	Node0x505830 -> Node0x5058a0;
	Node0x5058a0 -> Node0x505910;
	Node0x505910 -> Node0x505980;
	Node0x505980 -> Node0x5059f0;
	Node0x5059f0 -> Node0x505a60;
	Node0x505a60 -> Node0x505ad0;
	Node0x505ad0 -> Node0x505b40;
	Node0x505b40 -> Node0x4a28b8;
	Node0x4a28b8 -> Node0x505bd0;
	Node0x505bd0 -> Node0x505e78;
	Node0x505e78 -> Node0x505fd8;
	Node0x505fd8 -> Node0x5060e8;
	Node0x5060e8 -> Node0x5061f8;
	Node0x5061f8 -> Node0x5062b8;
edge [color=red]
	Node0x502898 -> Node0x502ab8;
	Node0x502ab8 -> Node0x502ee8;
	Node0x502918 -> Node0x502fc8;
	Node0x502fc8 -> Node0x5030c8;
	Node0x5029a8 -> Node0x503188;
	Node0x503188 -> Node0x503238;
	Node0x502a08 -> Node0x5032f8;
	Node0x5032f8 -> Node0x5033a8;
	Node0x502898 -> Node0x4fda50;
	Node0x502918 -> Node0x4fda50;
	Node0x5029a8 -> Node0x4fda50;
	Node0x502a08 -> Node0x4fda50;
	Node0x502898 -> Node0x5035a8;
	Node0x502918 -> Node0x504518;
	Node0x5029a8 -> Node0x504b88;
	Node0x502a08 -> Node0x504be8;
	Node0x504b88 -> Node0x504c60;
	Node0x5035a8 -> Node0x504cd0;
	Node0x504be8 -> Node0x504d40;
	Node0x504cd0 -> Node0x504d40;
	Node0x504c60 -> Node0x504db0;
	Node0x504d40 -> Node0x504db0;
	Node0x504b88 -> Node0x504e20;
	Node0x504518 -> Node0x504e20;
	Node0x504e20 -> Node0x504e90;
	Node0x504e90 -> Node0x504f00;
	Node0x504518 -> Node0x504f70;
	Node0x504c60 -> Node0x504f70;
	Node0x504f70 -> Node0x504fe0;
	Node0x504518 -> Node0x505050;
	Node0x504c60 -> Node0x505050;
	Node0x504b88 -> Node0x5050c0;
	Node0x504518 -> Node0x5050c0;
	Node0x5050c0 -> Node0x505130;
	Node0x504f70 -> Node0x5051a0;
	Node0x504be8 -> Node0x505210;
	Node0x5035a8 -> Node0x505210;
	Node0x504be8 -> Node0x505280;
	Node0x504cd0 -> Node0x505280;
	Node0x505280 -> Node0x5052f0;
	Node0x504be8 -> Node0x505360;
	Node0x5035a8 -> Node0x505360;
	Node0x505050 -> Node0x5053d0;
	Node0x5051a0 -> Node0x5053d0;
	Node0x5053d0 -> Node0x505440;
	Node0x505130 -> Node0x505440;
	Node0x505440 -> Node0x5054b0;
	Node0x505280 -> Node0x5054b0;
	Node0x5054b0 -> Node0x505520;
	Node0x505210 -> Node0x505520;
	Node0x505520 -> Node0x505590;
	Node0x504be8 -> Node0x505600;
	Node0x504518 -> Node0x505600;
	Node0x505600 -> Node0x505670;
	Node0x505360 -> Node0x505670;
	Node0x505670 -> Node0x5056e0;
	Node0x504e20 -> Node0x505750;
	Node0x505750 -> Node0x5057c0;
	Node0x505050 -> Node0x5057c0;
	Node0x5057c0 -> Node0x505830;
	Node0x504fe0 -> Node0x505830;
	Node0x505830 -> Node0x5058a0;
	Node0x505210 -> Node0x5058a0;
	Node0x5058a0 -> Node0x505910;
	Node0x5052f0 -> Node0x505910;
	Node0x505910 -> Node0x505980;
	Node0x504d40 -> Node0x505980;
	Node0x505980 -> Node0x5059f0;
	Node0x504f00 -> Node0x5059f0;
	Node0x5059f0 -> Node0x505a60;
	Node0x5056e0 -> Node0x505a60;
	Node0x505a60 -> Node0x505ad0;
	Node0x505590 -> Node0x505ad0;
	Node0x504db0 -> Node0x505b40;
	Node0x505ad0 -> Node0x505b40;
	Node0x505b40 -> Node0x4a28b8;
	Node0x4a28b8 -> Node0x505bd0;
	Node0x5032f8 -> Node0x505e78;
	Node0x503188 -> Node0x505fd8;
	Node0x502fc8 -> Node0x5060e8;
	Node0x502ab8 -> Node0x5061f8;
}
