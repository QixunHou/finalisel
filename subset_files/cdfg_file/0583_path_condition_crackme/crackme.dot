digraph "DFG for'crackme' function" {
	Node0x501030[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x5010a0[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x501110[shape=record, label="  %7 = or i32 %6, %3"];
	Node0x501180[shape=record, label="  %8 = sub i32 %5, %7"];
	Node0x5011f0[shape=record, label="  %9 = xor i32 %2, %1"];
	Node0x501290[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x501330[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x5013a0[shape=record, label="  %12 = or i32 %5, %1"];
	Node0x501410[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x501480[shape=record, label="  %14 = and i32 %5, %1"];
	Node0x5014f0[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x501560[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x5015d0[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0x501640[shape=record, label="  %18 = and i32 %3, %0"];
	Node0x5016b0[shape=record, label="  %19 = and i32 %6, %3"];
	Node0x501720[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x501790[shape=record, label="  %21 = xor i32 %3, %0"];
	Node0x501800[shape=record, label="  %22 = add i32 %14, %17"];
	Node0x501870[shape=record, label="  %23 = add i32 %22, %16"];
	Node0x5018e0[shape=record, label="  %24 = sub i32 %23, %19"];
	Node0x501950[shape=record, label="  %25 = sub i32 %24, %18"];
	Node0x5019f0[shape=record, label="  %26 = mul i32 %25, 3"];
	Node0x501a60[shape=record, label="  %27 = add i32 %3, %1"];
	Node0x501ad0[shape=record, label="  %28 = add i32 %27, %21"];
	Node0x501b40[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x501be0[shape=record, label="  %30 = sub i32 5, %9"];
	Node0x501c50[shape=record, label="  %31 = add i32 %30, %14"];
	Node0x501cc0[shape=record, label="  %32 = sub i32 %31, %13"];
	Node0x501f40[shape=record, label="  %33 = add i32 %32, %18"];
	Node0x501fb0[shape=record, label="  %34 = add i32 %33, %20"];
	Node0x502020[shape=record, label="  %35 = add i32 %34, %7"];
	Node0x502090[shape=record, label="  %36 = add i32 %35, %11"];
	Node0x502100[shape=record, label="  %37 = add i32 %36, %26"];
	Node0x502170[shape=record, label="  %38 = add i32 %37, %29"];
	Node0x5021e0[shape=record, label="  %39 = icmp eq i32 %8, %38"];
	Node0x4a1268[shape=record, label="  %40 = select i1 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x502680[shape=record, label="  %41 = tail call i32 @puts(i8* nonnull dereferenceable(1) %40)"];
	Node0x5026d0[shape=record, label="  ret void"];
	Node0x501030 -> Node0x5010a0;
	Node0x5010a0 -> Node0x501110;
	Node0x501110 -> Node0x501180;
	Node0x501180 -> Node0x5011f0;
	Node0x5011f0 -> Node0x501290;
	Node0x501290 -> Node0x501330;
	Node0x501330 -> Node0x5013a0;
	Node0x5013a0 -> Node0x501410;
	Node0x501410 -> Node0x501480;
	Node0x501480 -> Node0x5014f0;
	Node0x5014f0 -> Node0x501560;
	Node0x501560 -> Node0x5015d0;
	Node0x5015d0 -> Node0x501640;
	Node0x501640 -> Node0x5016b0;
	Node0x5016b0 -> Node0x501720;
	Node0x501720 -> Node0x501790;
	Node0x501790 -> Node0x501800;
	Node0x501800 -> Node0x501870;
	Node0x501870 -> Node0x5018e0;
	Node0x5018e0 -> Node0x501950;
	Node0x501950 -> Node0x5019f0;
	Node0x5019f0 -> Node0x501a60;
	Node0x501a60 -> Node0x501ad0;
	Node0x501ad0 -> Node0x501b40;
	Node0x501b40 -> Node0x501be0;
	Node0x501be0 -> Node0x501c50;
	Node0x501c50 -> Node0x501cc0;
	Node0x501cc0 -> Node0x501f40;
	Node0x501f40 -> Node0x501fb0;
	Node0x501fb0 -> Node0x502020;
	Node0x502020 -> Node0x502090;
	Node0x502090 -> Node0x502100;
	Node0x502100 -> Node0x502170;
	Node0x502170 -> Node0x5021e0;
	Node0x5021e0 -> Node0x4a1268;
	Node0x4a1268 -> Node0x502680;
	Node0x502680 -> Node0x5026d0;
edge [color=red]
	Node0x5010a0 -> Node0x501110;
	Node0x501030 -> Node0x501180;
	Node0x501110 -> Node0x501180;
	Node0x5011f0 -> Node0x501290;
	Node0x501290 -> Node0x501330;
	Node0x501030 -> Node0x5013a0;
	Node0x5013a0 -> Node0x501410;
	Node0x501030 -> Node0x501480;
	Node0x5014f0 -> Node0x501560;
	Node0x5013a0 -> Node0x5015d0;
	Node0x5010a0 -> Node0x5016b0;
	Node0x5016b0 -> Node0x501720;
	Node0x501480 -> Node0x501800;
	Node0x5015d0 -> Node0x501800;
	Node0x501800 -> Node0x501870;
	Node0x501560 -> Node0x501870;
	Node0x501870 -> Node0x5018e0;
	Node0x5016b0 -> Node0x5018e0;
	Node0x5018e0 -> Node0x501950;
	Node0x501640 -> Node0x501950;
	Node0x501950 -> Node0x5019f0;
	Node0x501a60 -> Node0x501ad0;
	Node0x501790 -> Node0x501ad0;
	Node0x501ad0 -> Node0x501b40;
	Node0x5011f0 -> Node0x501be0;
	Node0x501be0 -> Node0x501c50;
	Node0x501480 -> Node0x501c50;
	Node0x501c50 -> Node0x501cc0;
	Node0x501410 -> Node0x501cc0;
	Node0x501cc0 -> Node0x501f40;
	Node0x501640 -> Node0x501f40;
	Node0x501f40 -> Node0x501fb0;
	Node0x501720 -> Node0x501fb0;
	Node0x501fb0 -> Node0x502020;
	Node0x501110 -> Node0x502020;
	Node0x502020 -> Node0x502090;
	Node0x501330 -> Node0x502090;
	Node0x502090 -> Node0x502100;
	Node0x5019f0 -> Node0x502100;
	Node0x502100 -> Node0x502170;
	Node0x501b40 -> Node0x502170;
	Node0x501180 -> Node0x5021e0;
	Node0x502170 -> Node0x5021e0;
	Node0x5021e0 -> Node0x4a1268;
	Node0x4a1268 -> Node0x502680;
}
