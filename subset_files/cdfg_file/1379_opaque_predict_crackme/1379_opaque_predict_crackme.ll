; ModuleID = '../.././c_source_file/1379_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1379_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %1, %0
  %8 = xor i32 %2, %0
  %9 = xor i32 %8, -1
  %10 = or i32 %7, %9
  %11 = shl i32 %10, 1
  %12 = xor i32 %2, -1
  %13 = xor i32 %1, -1
  %14 = or i32 %13, %0
  %15 = and i32 %14, %12
  %16 = add i32 %11, %15
  %17 = xor i32 %3, -1
  %18 = and i32 %17, %4
  %19 = xor i32 %18, -1
  %20 = xor i32 %5, %4
  %21 = and i32 %20, %19
  %22 = sub i32 %16, %21
  %23 = and i32 %2, %1
  %24 = and i32 %23, %0
  %25 = or i32 %2, %1
  %26 = xor i32 %25, %0
  %27 = or i32 %24, %26
  %28 = and i32 %12, %0
  %29 = xor i32 %28, %1
  %30 = and i32 %8, %14
  %31 = or i32 %12, %0
  %32 = xor i32 %31, %1
  %33 = xor i32 %0, -1
  %34 = and i32 %13, %2
  %35 = and i32 %34, %33
  %36 = xor i32 %2, %1
  %37 = or i32 %36, %33
  %38 = xor i32 %35, %37
  %39 = and i32 %34, %0
  %40 = or i32 %13, %2
  %41 = xor i32 %40, %0
  %42 = xor i32 %41, -1
  %43 = xor i32 %39, %42
  %44 = and i32 %12, %1
  %45 = or i32 %44, %0
  %46 = or i32 %1, %0
  %47 = xor i32 %46, -1
  %48 = or i32 %12, %47
  %49 = shl i32 %48, 1
  %50 = xor i32 %25, -1
  %51 = xor i32 %50, %0
  %52 = shl i32 %51, 1
  %53 = and i32 %8, %46
  %54 = shl i32 %53, 1
  %55 = xor i32 %28, -1
  %56 = and i32 %55, %13
  %57 = and i32 %2, %0
  %58 = xor i32 %57, %14
  %59 = or i32 %23, %0
  %60 = xor i32 %37, 2147483647
  %61 = or i32 %60, %35
  %62 = shl i32 %61, 1
  %63 = xor i32 %1, %0
  %64 = xor i32 %63, -1
  %65 = and i32 %31, %64
  %66 = xor i32 %31, -1
  %67 = or i32 %66, %1
  %68 = xor i32 %36, %0
  %69 = xor i32 %24, %68
  %70 = xor i32 %44, -1
  %71 = xor i32 %57, %70
  %72 = or i32 %57, %63
  %73 = and i32 %9, %64
  %74 = and i32 %14, %2
  %75 = or i32 %57, %47
  %76 = or i32 %36, %0
  %77 = xor i32 %39, %76
  %78 = xor i32 %57, -1
  %79 = and i32 %63, %78
  %80 = or i32 %25, %33
  %81 = or i32 %23, %33
  %82 = or i32 %2, %0
  %83 = xor i32 %82, -1
  %84 = or i32 %83, %13
  %85 = or i32 %63, %83
  %86 = or i32 %57, %64
  %87 = xor i32 %66, %1
  %88 = and i32 %55, %1
  %89 = and i32 %13, %0
  %90 = xor i32 %36, -1
  %91 = or i32 %89, %90
  %92 = or i32 %47, %2
  %93 = or i32 %12, %1
  %94 = or i32 %93, %0
  %95 = and i32 %90, %0
  %96 = and i32 %31, %63
  %97 = xor i32 %23, -1
  %98 = xor i32 %89, %97
  %99 = xor i32 %28, %93
  %100 = or i32 %8, %1
  %101 = or i32 %28, %1
  %102 = xor i32 %82, %1
  %103 = xor i32 %93, %7
  %104 = and i32 %70, %33
  %105 = and i32 %36, %46
  %106 = and i32 %23, %33
  %107 = and i32 %36, %0
  %108 = xor i32 %107, -1
  %109 = xor i32 %106, %108
  %110 = or i32 %63, %66
  %111 = and i32 %78, %1
  %112 = shl i32 %111, 1
  %113 = xor i32 %89, %70
  %114 = xor i32 %14, -1
  %115 = or i32 %114, %2
  %116 = xor i32 %76, -1
  %117 = or i32 %39, %116
  %118 = xor i32 %7, -1
  %119 = and i32 %118, %2
  %120 = or i32 %89, %12
  %121 = shl i32 %120, 1
  %122 = or i32 %89, %9
  %123 = or i32 %57, %13
  %124 = and i32 %12, %118
  %125 = or i32 %39, %68
  %126 = and i32 %9, %13
  %127 = or i32 %50, %0
  %128 = xor i32 %89, -1
  %129 = and i32 %12, %128
  %130 = or i32 %8, %47
  %131 = xor i32 %114, %2
  %132 = or i32 %90, %47
  %133 = shl i32 %132, 1
  %134 = and i32 %25, %33
  %135 = or i32 %9, %47
  %136 = and i32 %70, %0
  %137 = or i32 %70, %33
  %138 = and i32 %8, %64
  %139 = xor i32 %7, %2
  %140 = or i32 %70, %0
  %141 = and i32 %40, %0
  %142 = or i32 %35, %141
  %143 = shl i32 %93, 1
  %144 = xor i32 %90, %0
  %145 = or i32 %63, %9
  %146 = or i32 %9, %64
  %147 = xor i32 %93, -1
  %148 = or i32 %147, %0
  %149 = xor i32 %28, %97
  %150 = shl i32 %8, 1
  %151 = add i32 %28, 1
  %152 = or i32 %66, %64
  %153 = and i32 %8, %1
  %154 = xor i32 %31, %7
  %155 = and i32 %78, %64
  %156 = shl i32 %155, 1
  %157 = and i32 %82, %63
  %158 = xor i32 %89, %2
  %159 = or i32 %28, %23
  %160 = and i32 %40, %33
  %161 = or i32 %39, %160
  %162 = add i32 %7, 1
  %163 = and i32 %14, %9
  %164 = or i32 %63, %2
  %165 = and i32 %8, %128
  %166 = or i32 %83, %1
  %167 = and i32 %36, %33
  %168 = or i32 %24, %167
  %169 = or i32 %8, %89
  %170 = and i32 %97, %0
  %171 = and i32 %90, %118
  %172 = or i32 %93, %33
  %173 = and i32 %14, %90
  %174 = shl i32 %173, 1
  %175 = add i32 %57, 1
  %176 = or i32 %8, %64
  %177 = and i32 %97, %33
  %178 = or i32 %57, %114
  %179 = or i32 %36, %47
  %180 = xor i32 %25, %7
  %181 = xor i32 %118, %2
  %182 = and i32 %90, %128
  %183 = and i32 %9, %128
  %184 = xor i32 %97, %0
  %185 = or i32 %63, %12
  %186 = xor i32 %47, %2
  %187 = and i32 %8, %13
  %188 = or i32 %8, %63
  %189 = or i32 %50, %33
  %190 = or i32 %9, %13
  %191 = and i32 %36, %118
  %192 = or i32 %57, %44
  %193 = and i32 %8, %118
  %194 = xor i32 %46, %2
  %195 = and i32 %78, %13
  %196 = xor i32 %147, %0
  %197 = shl i32 %196, 1
  %198 = xor i32 %141, -1
  %199 = xor i32 %35, %198
  %200 = xor i32 %83, %1
  %201 = or i32 %36, %114
  %202 = or i32 %24, %134
  %203 = or i32 %28, %64
  %204 = xor i32 %44, %0
  %205 = shl i32 %204, 2
  %206 = shl i32 %31, 1
  %207 = or i32 %28, %13
  %208 = or i32 %7, %83
  %209 = shl i32 %208, 1
  %210 = or i32 %9, %1
  %211 = or i32 %39, %41
  %212 = or i32 %66, %13
  %213 = xor i32 %68, -1
  %214 = or i32 %24, %213
  %215 = xor i32 %24, -1
  %216 = xor i32 %134, %215
  %217 = xor i32 %14, %2
  %218 = and i32 %46, %9
  %219 = or i32 %28, %63
  %220 = xor i32 %128, %2
  %221 = and i32 %64, %2
  %222 = add i32 %46, 1
  %223 = and i32 %63, %9
  %224 = or i32 %90, %33
  %225 = or i32 %97, %33
  %226 = or i32 %7, %2
  %227 = or i32 %36, %89
  %228 = shl i32 %227, 1
  %229 = or i32 %9, %114
  %230 = or i32 %83, %64
  %231 = or i32 %25, %0
  %232 = and i32 %128, %2
  %233 = or i32 %7, %66
  %234 = or i32 %90, %0
  %235 = or i32 %90, %114
  %236 = and i32 %63, %2
  %237 = and i32 %82, %64
  %238 = shl i32 %237, 1
  %239 = or i32 %23, %89
  %240 = shl i32 %239, 2
  %241 = or i32 %57, %50
  %242 = shl i32 %241, 1
  %243 = and i32 %36, %128
  %244 = xor i32 %57, %1
  %245 = and i32 %55, %64
  %246 = and i32 %82, %13
  %247 = and i32 %31, %1
  %248 = and i32 %46, %2
  %249 = or i32 %8, %114
  %250 = add i32 %36, 1
  %251 = and i32 %25, %0
  %252 = or i32 %106, %251
  %253 = xor i32 %55, %1
  %254 = xor i32 %39, %213
  %255 = or i32 %97, %0
  %256 = xor i32 %167, %215
  %257 = xor i32 %78, %1
  %258 = and i32 %63, %12
  %259 = shl i32 %258, 1
  %260 = and i32 %46, %90
  %261 = and i32 %93, %33
  %262 = and i32 %12, %64
  %263 = or i32 %147, %33
  %264 = or i32 %28, %147
  %265 = or i32 %44, %33
  %266 = or i32 %106, %107
  %267 = add i32 %89, 1
  %268 = and i32 %63, %55
  %269 = shl i32 %268, 1
  %270 = or i32 %44, %89
  %271 = shl i32 %270, 2
  %272 = or i32 %89, %2
  %273 = xor i32 %82, %7
  %274 = or i32 %12, %114
  %275 = or i32 %7, %50
  %276 = or i32 %7, %147
  %277 = xor i32 %70, %0
  %278 = xor i32 %93, %0
  %279 = and i32 %46, %12
  %280 = or i32 %64, %2
  %281 = and i32 %9, %1
  %282 = and i32 %9, %118
  %283 = xor i32 %57, %46
  %284 = add i32 %44, 1
  %285 = or i32 %36, %7
  %286 = xor i32 %23, %0
  %287 = or i32 %8, %7
  %288 = xor i32 %26, %215
  %289 = and i32 %50, %33
  %290 = shl i32 %289, 2
  %291 = and i32 %44, %33
  %292 = shl i32 %291, 2
  %293 = and i32 %50, %0
  %294 = mul i32 %293, 18
  %295 = and i32 %44, %0
  %296 = mul i32 %295, 19
  %297 = and i32 %147, %33
  %298 = mul i32 %297, -11
  %299 = and i32 %147, %0
  %300 = and i32 %5, %4
  %301 = or i32 %5, %3
  %302 = xor i32 %301, -1
  %303 = or i32 %300, %302
  %304 = xor i32 %4, %3
  %305 = xor i32 %20, -1
  %306 = and i32 %304, %305
  %307 = shl i32 %306, 1
  %308 = xor i32 %4, -1
  %309 = or i32 %301, %308
  %310 = xor i32 %5, -1
  %311 = or i32 %310, %4
  %312 = shl i32 %311, 2
  %313 = or i32 %310, %3
  %314 = xor i32 %313, -1
  %315 = or i32 %314, %308
  %316 = and i32 %310, %4
  %317 = xor i32 %316, -1
  %318 = xor i32 %317, %3
  %319 = shl i32 %316, 1
  %320 = and i32 %310, %3
  %321 = xor i32 %320, %4
  %322 = and i32 %4, %3
  %323 = or i32 %5, %4
  %324 = xor i32 %323, %322
  %325 = xor i32 %316, %313
  %326 = or i32 %4, %3
  %327 = xor i32 %5, %3
  %328 = and i32 %327, %326
  %329 = or i32 %316, %17
  %330 = or i32 %320, %4
  %331 = xor i32 %311, -1
  %332 = or i32 %322, %331
  %333 = xor i32 %304, -1
  %334 = and i32 %317, %333
  %335 = or i32 %17, %4
  %336 = and i32 %335, %5
  %337 = or i32 %322, %314
  %338 = and i32 %17, %5
  %339 = and i32 %338, %4
  %340 = or i32 %17, %5
  %341 = and i32 %340, %308
  %342 = xor i32 %339, -1
  %343 = xor i32 %341, %342
  %344 = and i32 %317, %3
  %345 = or i32 %304, %310
  %346 = and i32 %5, %3
  %347 = xor i32 %346, -1
  %348 = and i32 %347, %308
  %349 = xor i32 %322, -1
  %350 = and i32 %327, %349
  %351 = xor i32 %327, %4
  %352 = shl i32 %351, 1
  %353 = xor i32 %326, -1
  %354 = xor i32 %327, -1
  %355 = or i32 %354, %353
  %356 = xor i32 %18, %5
  %357 = add i32 %327, 1
  %358 = and i32 %354, %19
  %359 = and i32 %346, %308
  %360 = and i32 %301, %4
  %361 = or i32 %359, %360
  %362 = xor i32 %326, %5
  %363 = or i32 %316, %304
  %364 = and i32 %20, %333
  %365 = xor i32 %335, %5
  %366 = or i32 %331, %333
  %367 = shl i32 %366, 1
  %368 = and i32 %323, %17
  %369 = or i32 %333, %5
  %370 = xor i32 %335, -1
  %371 = or i32 %310, %370
  %372 = xor i32 %301, %4
  %373 = shl i32 %372, 1
  %374 = and i32 %323, %304
  %375 = and i32 %311, %304
  %376 = shl i32 %375, 1
  %377 = xor i32 %320, -1
  %378 = xor i32 %18, %377
  %379 = and i32 %377, %308
  %380 = xor i32 %300, %301
  %381 = or i32 %327, %4
  %382 = xor i32 %381, -1
  %383 = or i32 %339, %382
  %384 = and i32 %305, %19
  %385 = or i32 %300, %370
  %386 = or i32 %339, %341
  %387 = and i32 %377, %4
  %388 = add i32 %304, 1
  %389 = or i32 %20, %333
  %390 = shl i32 %389, 1
  %391 = and i32 %313, %308
  %392 = shl i32 %391, 2
  %393 = or i32 %354, %370
  %394 = xor i32 %314, %4
  %395 = or i32 %302, %4
  %396 = xor i32 %339, %381
  %397 = xor i32 %313, %4
  %398 = or i32 %313, %4
  %399 = or i32 %304, %331
  %400 = and i32 %354, %308
  %401 = and i32 %19, %5
  %402 = and i32 %327, %19
  %403 = or i32 %320, %308
  %404 = or i32 %339, %351
  %405 = or i32 %316, %314
  %406 = and i32 %327, %4
  %407 = or i32 %359, %406
  %408 = or i32 %20, %3
  %409 = xor i32 %323, %3
  %410 = or i32 %300, %3
  %411 = and i32 %20, %349
  %412 = shl i32 %411, 1
  %413 = and i32 %346, %4
  %414 = and i32 %301, %308
  %415 = xor i32 %413, -1
  %416 = xor i32 %414, %415
  %417 = xor i32 %323, -1
  %418 = add i32 %323, 1
  %419 = xor i32 %370, %5
  %420 = xor i32 %300, -1
  %421 = xor i32 %420, %3
  %422 = or i32 %331, %17
  %423 = or i32 %347, %4
  %424 = or i32 %377, %4
  %425 = and i32 %323, %3
  %426 = or i32 %322, %310
  %427 = xor i32 %359, -1
  %428 = xor i32 %406, %427
  %429 = xor i32 %322, %5
  %430 = or i32 %305, %370
  %431 = and i32 %305, %333
  %432 = or i32 %327, %322
  %433 = and i32 %317, %17
  %434 = or i32 %314, %4
  %435 = and i32 %349, %5
  %436 = and i32 %338, %308
  %437 = and i32 %340, %4
  %438 = xor i32 %437, -1
  %439 = xor i32 %436, %438
  %440 = or i32 %327, %308
  %441 = xor i32 %440, 2147483647
  %442 = or i32 %441, %436
  %443 = and i32 %20, %304
  %444 = xor i32 %340, %4
  %445 = or i32 %339, %444
  %446 = and i32 %327, %308
  %447 = xor i32 %446, %415
  %448 = or i32 %304, %417
  %449 = or i32 %320, %18
  %450 = shl i32 %449, 1
  %451 = and i32 %305, %3
  %452 = or i32 %327, %370
  %453 = or i32 %300, %320
  %454 = and i32 %20, %326
  %455 = or i32 %417, %333
  %456 = and i32 %354, %4
  %457 = and i32 %326, %310
  %458 = shl i32 %19, 1
  %459 = or i32 %310, %353
  %460 = shl i32 %459, 1
  %461 = or i32 %316, %333
  %462 = xor i32 %18, %347
  %463 = xor i32 %300, %326
  %464 = and i32 %311, %3
  %465 = shl i32 %464, 1
  %466 = xor i32 %351, -1
  %467 = or i32 %413, %466
  %468 = or i32 %353, %5
  %469 = and i32 %20, %335
  %470 = or i32 %305, %333
  %471 = or i32 %413, %372
  %472 = or i32 %322, %417
  %473 = or i32 %417, %3
  %474 = and i32 %335, %310
  %475 = and i32 %323, %333
  %476 = or i32 %20, %370
  %477 = shl i32 %476, 1
  %478 = or i32 %316, %3
  %479 = and i32 %310, %349
  %480 = or i32 %316, %346
  %481 = and i32 %326, %5
  %482 = or i32 %354, %308
  %483 = and i32 %304, %310
  %484 = xor i32 %300, %3
  %485 = shl i32 %484, 1
  %486 = xor i32 %413, %351
  %487 = or i32 %300, %333
  %488 = shl i32 %487, 1
  %489 = and i32 %313, %4
  %490 = xor i32 %444, %342
  %491 = or i32 %370, %5
  %492 = or i32 %18, %354
  %493 = or i32 %20, %322
  %494 = or i32 %322, %5
  %495 = and i32 %20, %3
  %496 = or i32 %313, %308
  %497 = xor i32 %360, %427
  %498 = add i32 %5, 1
  %499 = or i32 %20, %304
  %500 = and i32 %335, %305
  %501 = xor i32 %301, %322
  %502 = or i32 %305, %17
  %503 = shl i32 %502, 1
  %504 = xor i32 %331, %3
  %505 = or i32 %413, %414
  %506 = and i32 %347, %4
  %507 = or i32 %413, %446
  %508 = xor i32 %19, %5
  %509 = or i32 %310, %333
  %510 = xor i32 %346, %4
  %511 = and i32 %354, %349
  %512 = or i32 %18, %5
  %513 = or i32 %346, %308
  %514 = or i32 %305, %3
  %515 = or i32 %327, %18
  %516 = shl i32 %515, 1
  %517 = and i32 %305, %17
  %518 = shl i32 %517, 2
  %519 = and i32 %311, %17
  %520 = or i32 %346, %4
  %521 = xor i32 %436, %440
  %522 = or i32 %346, %18
  %523 = and i32 %310, %333
  %524 = or i32 %304, %305
  %525 = and i32 %20, %17
  %526 = xor i32 %316, %347
  %527 = xor i32 %354, %4
  %528 = shl i32 %335, 1
  %529 = or i32 %300, %17
  %530 = xor i32 %311, %322
  %531 = xor i32 %302, %4
  %532 = xor i32 %417, %3
  %533 = shl i32 %532, 1
  %534 = and i32 %310, %19
  %535 = and i32 %420, %333
  %536 = xor i32 %377, %4
  %537 = or i32 %300, %304
  %538 = or i32 %322, %302
  %539 = shl i32 %538, 1
  %540 = or i32 %305, %353
  %541 = and i32 %304, %5
  %542 = or i32 %302, %308
  %543 = or i32 %417, %17
  %544 = and i32 %420, %17
  %545 = and i32 %420, %3
  %546 = shl i32 %545, 1
  %547 = or i32 %322, %354
  %548 = or i32 %300, %353
  %549 = and i32 %326, %354
  %550 = xor i32 %300, %335
  %551 = or i32 %304, %5
  %552 = or i32 %354, %4
  %553 = shl i32 %552, 1
  %554 = or i32 %327, %353
  %555 = or i32 %436, %437
  %556 = xor i32 %372, %415
  %557 = or i32 %331, %3
  %558 = shl i32 %557, 1
  %559 = or i32 %20, %18
  %560 = or i32 %18, %310
  %561 = shl i32 %560, 1
  %562 = xor i32 %311, %3
  %563 = or i32 %322, %305
  %564 = shl i32 %563, 1
  %565 = or i32 %20, %353
  %566 = and i32 %302, %308
  %567 = and i32 %320, %308
  %568 = mul i32 %567, 26
  %569 = and i32 %302, %4
  %570 = shl i32 %569, 3
  %571 = and i32 %320, %4
  %572 = mul i32 %571, 27
  %573 = and i32 %314, %308
  %574 = and i32 %314, %4
  %575 = shl i32 %574, 4
  %576 = add i32 %280, %14
  %577 = add i32 %576, %220
  %578 = add i32 %577, %44
  %579 = add i32 %578, %308
  %580 = add i32 %579, %281
  %581 = add i32 %580, %261
  %582 = add i32 %581, %260
  %583 = add i32 %582, %224
  %584 = add i32 %583, %223
  %585 = add i32 %584, %167
  %586 = add i32 %585, %219
  %587 = add i32 %586, %189
  %588 = add i32 %587, %183
  %589 = add i32 %588, %180
  %590 = add i32 %589, %176
  %591 = add i32 %590, %166
  %592 = add i32 %591, %135
  %593 = add i32 %592, %126
  %594 = add i32 %593, %87
  %595 = add i32 %594, %86
  %596 = add i32 %595, %71
  %597 = add i32 %596, %304
  %598 = add i32 %597, %252
  %599 = sub i32 %598, %27
  %600 = add i32 %599, %419
  %601 = add i32 %600, %401
  %602 = add i32 %601, %302
  %603 = add i32 %602, %562
  %604 = add i32 %603, %446
  %605 = add i32 %604, %540
  %606 = add i32 %605, %530
  %607 = add i32 %606, %527
  %608 = add i32 %607, %525
  %609 = add i32 %608, %492
  %610 = add i32 %609, %482
  %611 = add i32 %610, %462
  %612 = add i32 %611, %456
  %613 = add i32 %612, %454
  %614 = add i32 %613, %405
  %615 = add i32 %614, %393
  %616 = add i32 %615, %379
  %617 = add i32 %616, %378
  %618 = add i32 %617, %486
  %619 = add i32 %618, %442
  %620 = shl i32 %619, 1
  %621 = sub i32 %164, %179
  %622 = sub i32 %621, %146
  %623 = add i32 %622, %80
  %624 = sub i32 %623, %559
  %625 = add i32 %624, %548
  %626 = sub i32 %625, %402
  %627 = sub i32 %626, %399
  %628 = sub i32 %627, %490
  %629 = mul i32 %628, 3
  %630 = sub i32 %13, %28
  %631 = sub i32 %630, %231
  %632 = add i32 %631, %230
  %633 = sub i32 %632, %163
  %634 = sub i32 %633, %168
  %635 = sub i32 %634, %397
  %636 = add i32 %635, %404
  %637 = mul i32 %636, 5
  %638 = sub i32 %24, %106
  %639 = sub i32 %638, %573
  %640 = add i32 %639, %359
  %641 = mul i32 %640, 12
  %642 = add i32 %566, %455
  %643 = add i32 %642, %358
  %644 = shl i32 %643, 2
  %645 = mul i32 %415, 7
  %646 = sub i32 1, %1
  %647 = add i32 %646, %46
  %648 = sub i32 %647, %2
  %649 = add i32 %648, %162
  %650 = add i32 %649, %114
  %651 = add i32 %650, %63
  %652 = add i32 %651, %222
  %653 = add i32 %652, %12
  %654 = add i32 %653, %267
  %655 = add i32 %654, %89
  %656 = sub i32 %655, %7
  %657 = add i32 %656, %74
  %658 = add i32 %657, %92
  %659 = add i32 %658, %115
  %660 = add i32 %659, %119
  %661 = sub i32 %660, %124
  %662 = add i32 %661, %66
  %663 = add i32 %662, %129
  %664 = add i32 %663, %131
  %665 = add i32 %664, %139
  %666 = add i32 %665, %151
  %667 = add i32 %666, %158
  %668 = sub i32 %667, %36
  %669 = add i32 %668, %175
  %670 = sub i32 %669, %181
  %671 = sub i32 %670, %185
  %672 = add i32 %671, %186
  %673 = add i32 %672, %57
  %674 = add i32 %673, %147
  %675 = sub i32 %674, %194
  %676 = sub i32 %675, %217
  %677 = add i32 %676, %221
  %678 = add i32 %677, %226
  %679 = sub i32 %678, %232
  %680 = sub i32 %679, %236
  %681 = sub i32 %680, %248
  %682 = add i32 %681, %250
  %683 = sub i32 %682, %262
  %684 = add i32 %683, %23
  %685 = sub i32 %684, %272
  %686 = sub i32 %685, %274
  %687 = add i32 %686, %9
  %688 = add i32 %687, %279
  %689 = add i32 %688, %284
  %690 = add i32 %689, %29
  %691 = sub i32 %690, %30
  %692 = add i32 %691, %32
  %693 = sub i32 %692, %45
  %694 = sub i32 %693, %49
  %695 = sub i32 %694, %56
  %696 = add i32 %695, %58
  %697 = add i32 %696, %59
  %698 = sub i32 %697, %65
  %699 = add i32 %698, %67
  %700 = add i32 %699, %72
  %701 = add i32 %700, %73
  %702 = sub i32 %701, %75
  %703 = add i32 %702, %79
  %704 = add i32 %703, %81
  %705 = sub i32 %704, %84
  %706 = add i32 %705, %85
  %707 = sub i32 %706, %88
  %708 = sub i32 %707, %91
  %709 = add i32 %708, %94
  %710 = sub i32 %709, %95
  %711 = sub i32 %710, %96
  %712 = add i32 %711, %98
  %713 = add i32 %712, %99
  %714 = sub i32 %713, %100
  %715 = add i32 %714, %101
  %716 = add i32 %715, %102
  %717 = add i32 %716, %103
  %718 = sub i32 %717, %104
  %719 = add i32 %718, %105
  %720 = add i32 %719, %110
  %721 = add i32 %720, %113
  %722 = sub i32 %721, %121
  %723 = sub i32 %722, %122
  %724 = sub i32 %723, %123
  %725 = sub i32 %724, %127
  %726 = sub i32 %725, %130
  %727 = sub i32 %726, %134
  %728 = add i32 %727, %136
  %729 = add i32 %728, %137
  %730 = add i32 %729, %138
  %731 = sub i32 %730, %140
  %732 = sub i32 %731, %143
  %733 = add i32 %732, %144
  %734 = add i32 %733, %145
  %735 = sub i32 %734, %148
  %736 = add i32 %735, %149
  %737 = sub i32 %736, %150
  %738 = sub i32 %737, %152
  %739 = add i32 %738, %153
  %740 = sub i32 %739, %154
  %741 = sub i32 %740, %157
  %742 = sub i32 %741, %159
  %743 = sub i32 %742, %165
  %744 = add i32 %743, %169
  %745 = add i32 %744, %170
  %746 = add i32 %745, %171
  %747 = add i32 %746, %172
  %748 = add i32 %747, %177
  %749 = add i32 %748, %178
  %750 = sub i32 %749, %182
  %751 = sub i32 %750, %184
  %752 = add i32 %751, %187
  %753 = add i32 %752, %188
  %754 = sub i32 %753, %76
  %755 = add i32 %754, %190
  %756 = sub i32 %755, %191
  %757 = add i32 %756, %192
  %758 = add i32 %757, %193
  %759 = add i32 %758, %195
  %760 = sub i32 %759, %200
  %761 = add i32 %760, %201
  %762 = add i32 %761, %203
  %763 = sub i32 %762, %206
  %764 = sub i32 %763, %207
  %765 = sub i32 %764, %210
  %766 = sub i32 %765, %212
  %767 = sub i32 %766, %218
  %768 = sub i32 %767, %37
  %769 = sub i32 %768, %225
  %770 = sub i32 %769, %229
  %771 = sub i32 %770, %233
  %772 = add i32 %771, %234
  %773 = add i32 %772, %235
  %774 = sub i32 %773, %243
  %775 = add i32 %774, %244
  %776 = add i32 %775, %245
  %777 = add i32 %776, %246
  %778 = sub i32 %777, %247
  %779 = add i32 %778, %249
  %780 = add i32 %779, %253
  %781 = add i32 %780, %255
  %782 = add i32 %781, %257
  %783 = sub i32 %782, %259
  %784 = add i32 %783, %263
  %785 = add i32 %784, %264
  %786 = add i32 %785, %265
  %787 = sub i32 %786, %273
  %788 = add i32 %787, %275
  %789 = add i32 %788, %276
  %790 = sub i32 %789, %277
  %791 = add i32 %790, %278
  %792 = sub i32 %791, %68
  %793 = sub i32 %792, %282
  %794 = sub i32 %793, %283
  %795 = sub i32 %794, %107
  %796 = add i32 %795, %285
  %797 = add i32 %796, %286
  %798 = sub i32 %797, %287
  %799 = sub i32 %798, %299
  %800 = sub i32 %799, %4
  %801 = sub i32 %800, %38
  %802 = sub i32 %801, %43
  %803 = sub i32 %802, %52
  %804 = sub i32 %803, %54
  %805 = add i32 %804, %69
  %806 = add i32 %805, %77
  %807 = sub i32 %806, %109
  %808 = sub i32 %807, %112
  %809 = add i32 %808, %117
  %810 = add i32 %809, %125
  %811 = sub i32 %810, %133
  %812 = add i32 %811, %142
  %813 = sub i32 %812, %156
  %814 = sub i32 %813, %161
  %815 = sub i32 %814, %174
  %816 = sub i32 %815, %197
  %817 = add i32 %816, %199
  %818 = sub i32 %817, %202
  %819 = sub i32 %818, %205
  %820 = sub i32 %819, %209
  %821 = sub i32 %820, %211
  %822 = sub i32 %821, %214
  %823 = add i32 %822, %216
  %824 = sub i32 %823, %228
  %825 = sub i32 %824, %238
  %826 = sub i32 %825, %240
  %827 = sub i32 %826, %242
  %828 = add i32 %827, %254
  %829 = add i32 %828, %256
  %830 = sub i32 %829, %266
  %831 = sub i32 %830, %269
  %832 = sub i32 %831, %271
  %833 = sub i32 %832, %288
  %834 = sub i32 %833, %290
  %835 = sub i32 %834, %292
  %836 = add i32 %835, %294
  %837 = add i32 %836, %296
  %838 = add i32 %837, %298
  %839 = sub i32 %838, %322
  %840 = add i32 %839, %388
  %841 = add i32 %840, %498
  %842 = sub i32 %841, %326
  %843 = add i32 %842, %5
  %844 = sub i32 %843, %336
  %845 = add i32 %844, %20
  %846 = sub i32 %845, %345
  %847 = sub i32 %846, %356
  %848 = add i32 %847, %357
  %849 = add i32 %848, %362
  %850 = add i32 %849, %365
  %851 = add i32 %850, %369
  %852 = sub i32 %851, %371
  %853 = add i32 %852, %331
  %854 = sub i32 %853, %327
  %855 = add i32 %854, %418
  %856 = add i32 %855, %426
  %857 = sub i32 %856, %429
  %858 = sub i32 %857, %435
  %859 = sub i32 %858, %457
  %860 = sub i32 %859, %458
  %861 = sub i32 %860, %301
  %862 = add i32 %861, %468
  %863 = add i32 %862, %474
  %864 = add i32 %863, %479
  %865 = add i32 %864, %481
  %866 = sub i32 %865, %483
  %867 = add i32 %866, %491
  %868 = add i32 %867, %494
  %869 = add i32 %868, %508
  %870 = add i32 %869, %509
  %871 = add i32 %870, %512
  %872 = sub i32 %871, %523
  %873 = sub i32 %872, %528
  %874 = add i32 %873, %534
  %875 = sub i32 %874, %541
  %876 = add i32 %875, %317
  %877 = sub i32 %876, %551
  %878 = sub i32 %877, %62
  %879 = sub i32 %878, %303
  %880 = add i32 %879, %309
  %881 = sub i32 %880, %312
  %882 = add i32 %881, %315
  %883 = add i32 %882, %318
  %884 = sub i32 %883, %319
  %885 = add i32 %884, %321
  %886 = add i32 %885, %324
  %887 = sub i32 %886, %325
  %888 = add i32 %887, %328
  %889 = add i32 %888, %329
  %890 = add i32 %889, %330
  %891 = add i32 %890, %332
  %892 = sub i32 %891, %334
  %893 = add i32 %892, %337
  %894 = sub i32 %893, %344
  %895 = sub i32 %894, %348
  %896 = add i32 %895, %350
  %897 = add i32 %896, %355
  %898 = add i32 %897, %363
  %899 = add i32 %898, %364
  %900 = add i32 %899, %360
  %901 = sub i32 %900, %368
  %902 = sub i32 %901, %374
  %903 = sub i32 %902, %380
  %904 = add i32 %903, %384
  %905 = sub i32 %904, %385
  %906 = add i32 %905, %387
  %907 = sub i32 %906, %394
  %908 = add i32 %907, %395
  %909 = sub i32 %908, %398
  %910 = sub i32 %909, %400
  %911 = add i32 %910, %403
  %912 = sub i32 %911, %408
  %913 = sub i32 %912, %409
  %914 = sub i32 %913, %410
  %915 = sub i32 %914, %421
  %916 = sub i32 %915, %422
  %917 = add i32 %916, %423
  %918 = sub i32 %917, %424
  %919 = add i32 %918, %425
  %920 = sub i32 %919, %430
  %921 = sub i32 %920, %431
  %922 = add i32 %921, %432
  %923 = sub i32 %922, %433
  %924 = sub i32 %923, %434
  %925 = add i32 %924, %443
  %926 = add i32 %925, %448
  %927 = add i32 %926, %451
  %928 = sub i32 %927, %452
  %929 = add i32 %928, %453
  %930 = add i32 %929, %406
  %931 = add i32 %930, %381
  %932 = sub i32 %931, %460
  %933 = sub i32 %932, %461
  %934 = add i32 %933, %463
  %935 = add i32 %934, %469
  %936 = add i32 %935, %470
  %937 = sub i32 %936, %472
  %938 = add i32 %937, %473
  %939 = add i32 %938, %475
  %940 = sub i32 %939, %478
  %941 = add i32 %940, %480
  %942 = add i32 %941, %489
  %943 = add i32 %942, %493
  %944 = add i32 %943, %495
  %945 = sub i32 %944, %496
  %946 = sub i32 %945, %499
  %947 = sub i32 %946, %500
  %948 = sub i32 %947, %501
  %949 = sub i32 %948, %504
  %950 = add i32 %949, %506
  %951 = sub i32 %950, %510
  %952 = add i32 %951, %511
  %953 = add i32 %952, %513
  %954 = sub i32 %953, %514
  %955 = sub i32 %954, %519
  %956 = sub i32 %955, %520
  %957 = sub i32 %956, %522
  %958 = add i32 %957, %524
  %959 = add i32 %958, %526
  %960 = add i32 %959, %529
  %961 = sub i32 %960, %531
  %962 = add i32 %961, %535
  %963 = sub i32 %962, %536
  %964 = sub i32 %963, %537
  %965 = add i32 %964, %542
  %966 = sub i32 %965, %543
  %967 = add i32 %966, %544
  %968 = sub i32 %967, %547
  %969 = add i32 %968, %549
  %970 = add i32 %969, %550
  %971 = sub i32 %970, %554
  %972 = sub i32 %971, %440
  %973 = sub i32 %972, %561
  %974 = sub i32 %973, %565
  %975 = sub i32 %974, %307
  %976 = sub i32 %975, %343
  %977 = sub i32 %976, %352
  %978 = add i32 %977, %361
  %979 = sub i32 %978, %367
  %980 = sub i32 %979, %373
  %981 = sub i32 %980, %376
  %982 = sub i32 %981, %383
  %983 = sub i32 %982, %386
  %984 = sub i32 %983, %390
  %985 = sub i32 %984, %392
  %986 = sub i32 %985, %396
  %987 = sub i32 %986, %407
  %988 = sub i32 %987, %412
  %989 = add i32 %988, %416
  %990 = add i32 %989, %428
  %991 = add i32 %990, %439
  %992 = add i32 %991, %445
  %993 = sub i32 %992, %447
  %994 = sub i32 %993, %450
  %995 = sub i32 %994, %465
  %996 = add i32 %995, %467
  %997 = add i32 %996, %471
  %998 = sub i32 %997, %477
  %999 = sub i32 %998, %485
  %1000 = sub i32 %999, %488
  %1001 = sub i32 %1000, %497
  %1002 = sub i32 %1001, %503
  %1003 = sub i32 %1002, %505
  %1004 = sub i32 %1003, %507
  %1005 = sub i32 %1004, %516
  %1006 = sub i32 %1005, %518
  %1007 = sub i32 %1006, %521
  %1008 = sub i32 %1007, %533
  %1009 = sub i32 %1008, %539
  %1010 = sub i32 %1009, %546
  %1011 = sub i32 %1010, %553
  %1012 = add i32 %1011, %555
  %1013 = sub i32 %1012, %556
  %1014 = sub i32 %1013, %558
  %1015 = sub i32 %1014, %564
  %1016 = add i32 %1015, %568
  %1017 = add i32 %1016, %570
  %1018 = add i32 %1017, %572
  %1019 = add i32 %1018, %575
  %1020 = add i32 %1019, %645
  %1021 = add i32 %1020, %644
  %1022 = add i32 %1021, %641
  %1023 = add i32 %1022, %637
  %1024 = add i32 %1023, %629
  %1025 = add i32 %1024, %620
  %1026 = icmp eq i32 %22, %1025
  %1027 = select i1 %1026, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1028 = tail call i32 @puts(i8* nonnull dereferenceable(1) %1027)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
