digraph "DFG for'main' function" {
	Node0x19d3a08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x19d3ab8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x19d3b48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x19d3fa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x19d4088[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x19d41a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19d43e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x19d4498[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x19d5408[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x19d5a90[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x19d5b00[shape=record, label="  %9 = mul i32 %7, -2"];
	Node0x19d5b70[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x19d5be0[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x19d5c50[shape=record, label="  %12 = or i32 %6, %10"];
	Node0x19d5cc0[shape=record, label="  %13 = shl i32 %11, 2"];
	Node0x19d5d30[shape=record, label="  %14 = xor i32 %13, -4"];
	Node0x19d5da0[shape=record, label="  %15 = and i32 %6, %10"];
	Node0x19d5e10[shape=record, label="  %16 = mul i32 %15, -3"];
	Node0x19d5e80[shape=record, label="  %17 = and i32 %7, %6"];
	Node0x19d5ef0[shape=record, label="  %18 = sub i32 -2, %6"];
	Node0x19d5f60[shape=record, label="  %19 = add i32 %18, %10"];
	Node0x19d5fd0[shape=record, label="  %20 = add i32 %19, %9"];
	Node0x19d6040[shape=record, label="  %21 = add i32 %20, %11"];
	Node0x19d60b0[shape=record, label="  %22 = add i32 %21, %12"];
	Node0x19d6120[shape=record, label="  %23 = sub i32 %22, %17"];
	Node0x19d6190[shape=record, label="  %24 = add i32 %23, %16"];
	Node0x19d6200[shape=record, label="  %25 = sub i32 %24, %14"];
	Node0x19d6270[shape=record, label="  %26 = icmp eq i32 %8, %25"];
	Node0x19749d8[shape=record, label="  %27 = select i1 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x19d6300[shape=record, label="  %28 = call i32 @puts(i8* nonnull dereferenceable(1) %27) #5"];
	Node0x19d6558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19d66b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x19d6778[shape=record, label="  ret i32 0"];
	Node0x19d3a08 -> Node0x19d3ab8;
	Node0x19d3ab8 -> Node0x19d3b48;
	Node0x19d3b48 -> Node0x19d3fa8;
	Node0x19d3fa8 -> Node0x19d4088;
	Node0x19d4088 -> Node0x19d41a8;
	Node0x19d41a8 -> Node0x19d43e0;
	Node0x19d43e0 -> Node0x19d4498;
	Node0x19d4498 -> Node0x19d5408;
	Node0x19d5408 -> Node0x19d5a90;
	Node0x19d5a90 -> Node0x19d5b00;
	Node0x19d5b00 -> Node0x19d5b70;
	Node0x19d5b70 -> Node0x19d5be0;
	Node0x19d5be0 -> Node0x19d5c50;
	Node0x19d5c50 -> Node0x19d5cc0;
	Node0x19d5cc0 -> Node0x19d5d30;
	Node0x19d5d30 -> Node0x19d5da0;
	Node0x19d5da0 -> Node0x19d5e10;
	Node0x19d5e10 -> Node0x19d5e80;
	Node0x19d5e80 -> Node0x19d5ef0;
	Node0x19d5ef0 -> Node0x19d5f60;
	Node0x19d5f60 -> Node0x19d5fd0;
	Node0x19d5fd0 -> Node0x19d6040;
	Node0x19d6040 -> Node0x19d60b0;
	Node0x19d60b0 -> Node0x19d6120;
	Node0x19d6120 -> Node0x19d6190;
	Node0x19d6190 -> Node0x19d6200;
	Node0x19d6200 -> Node0x19d6270;
	Node0x19d6270 -> Node0x19749d8;
	Node0x19749d8 -> Node0x19d6300;
	Node0x19d6300 -> Node0x19d6558;
	Node0x19d6558 -> Node0x19d66b8;
	Node0x19d66b8 -> Node0x19d6778;
edge [color=red]
	Node0x19d3a08 -> Node0x19d3b48;
	Node0x19d3b48 -> Node0x19d3fa8;
	Node0x19d3ab8 -> Node0x19d4088;
	Node0x19d4088 -> Node0x19d41a8;
	Node0x19d3a08 -> Node0x19d43e0;
	Node0x19d3ab8 -> Node0x19d43e0;
	Node0x19d3a08 -> Node0x19d4498;
	Node0x19d3ab8 -> Node0x19d5408;
	Node0x19d5408 -> Node0x19d5a90;
	Node0x19d4498 -> Node0x19d5a90;
	Node0x19d5408 -> Node0x19d5b00;
	Node0x19d5408 -> Node0x19d5b70;
	Node0x19d5408 -> Node0x19d5be0;
	Node0x19d4498 -> Node0x19d5be0;
	Node0x19d4498 -> Node0x19d5c50;
	Node0x19d5b70 -> Node0x19d5c50;
	Node0x19d5be0 -> Node0x19d5cc0;
	Node0x19d5cc0 -> Node0x19d5d30;
	Node0x19d4498 -> Node0x19d5da0;
	Node0x19d5b70 -> Node0x19d5da0;
	Node0x19d5da0 -> Node0x19d5e10;
	Node0x19d5408 -> Node0x19d5e80;
	Node0x19d4498 -> Node0x19d5e80;
	Node0x19d4498 -> Node0x19d5ef0;
	Node0x19d5ef0 -> Node0x19d5f60;
	Node0x19d5b70 -> Node0x19d5f60;
	Node0x19d5f60 -> Node0x19d5fd0;
	Node0x19d5b00 -> Node0x19d5fd0;
	Node0x19d5fd0 -> Node0x19d6040;
	Node0x19d5be0 -> Node0x19d6040;
	Node0x19d6040 -> Node0x19d60b0;
	Node0x19d5c50 -> Node0x19d60b0;
	Node0x19d60b0 -> Node0x19d6120;
	Node0x19d5e80 -> Node0x19d6120;
	Node0x19d6120 -> Node0x19d6190;
	Node0x19d5e10 -> Node0x19d6190;
	Node0x19d6190 -> Node0x19d6200;
	Node0x19d5d30 -> Node0x19d6200;
	Node0x19d5a90 -> Node0x19d6270;
	Node0x19d6200 -> Node0x19d6270;
	Node0x19d6270 -> Node0x19749d8;
	Node0x19749d8 -> Node0x19d6300;
	Node0x19d4088 -> Node0x19d6558;
	Node0x19d3b48 -> Node0x19d66b8;
}
