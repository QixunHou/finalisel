digraph "DFG for'main' function" {
	Node0x1df8cf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1df8d78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1df8e08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1df8e68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1df8f18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1df9348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1df9428[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1df9528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1df95e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1df9698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1df9758[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1df9808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1df3ba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1df9a08[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1dfa978[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1dfafe8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1dfb048[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1dfb0c0[shape=record, label="  %14 = or i32 %13, %10"];
	Node0x1dfb130[shape=record, label="  %15 = xor i32 %13, -1"];
	Node0x1dfb1a0[shape=record, label="  %16 = sub i32 2, %11"];
	Node0x1dfb210[shape=record, label="  %17 = sub i32 %16, %12"];
	Node0x1dfb280[shape=record, label="  %18 = sub i32 %17, %14"];
	Node0x1dfb2f0[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x1dfb360[shape=record, label="  %20 = or i32 %11, %19"];
	Node0x1dfb3d0[shape=record, label="  %21 = and i32 %11, %19"];
	Node0x1dfb440[shape=record, label="  %22 = xor i32 %12, %11"];
	Node0x1dfb4b0[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x1dfb520[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x1dfb590[shape=record, label="  %25 = xor i32 %20, -1"];
	Node0x1dfb600[shape=record, label="  %26 = and i32 %12, %11"];
	Node0x1dfb670[shape=record, label="  %27 = xor i32 %10, -1"];
	Node0x1dfb6e0[shape=record, label="  %28 = and i32 %13, %10"];
	Node0x1dfb750[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x1dfb7c0[shape=record, label="  %30 = or i32 %13, %27"];
	Node0x1dfb830[shape=record, label="  %31 = shl i32 %13, 1"];
	Node0x1dfb8a0[shape=record, label="  %32 = or i32 %10, %15"];
	Node0x1dfb910[shape=record, label="  %33 = shl i32 %14, 1"];
	Node0x1dfb980[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x1dfb9f0[shape=record, label="  %35 = xor i32 %30, -1"];
	Node0x1dfba60[shape=record, label="  %36 = mul i32 %35, -3"];
	Node0x1dfbad0[shape=record, label="  %37 = sub i32 %21, %10"];
	Node0x1dfbb40[shape=record, label="  %38 = add i32 %37, %28"];
	Node0x1dfbbb0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x1dfbc20[shape=record, label="  %40 = sub i32 1, %11"];
	Node0x1dfbc90[shape=record, label="  %41 = sub i32 %40, %12"];
	Node0x1dfbd00[shape=record, label="  %42 = sub i32 %41, %20"];
	Node0x1dfbd70[shape=record, label="  %43 = sub i32 %42, %22"];
	Node0x1dfbde0[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x1dfbe50[shape=record, label="  %45 = add i32 %44, %25"];
	Node0x1dfbec0[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x1dfbf30[shape=record, label="  %47 = add i32 %46, %15"];
	Node0x1dfbfa0[shape=record, label="  %48 = add i32 %47, %29"];
	Node0x1dfc010[shape=record, label="  %49 = sub i32 %48, %30"];
	Node0x1dfc080[shape=record, label="  %50 = sub i32 %49, %31"];
	Node0x1dfc0f0[shape=record, label="  %51 = add i32 %50, %32"];
	Node0x1dfc160[shape=record, label="  %52 = add i32 %51, %36"];
	Node0x1dfc1d0[shape=record, label="  %53 = sub i32 %52, %34"];
	Node0x1dfc240[shape=record, label="  %54 = add i32 %53, %39"];
	Node0x1dfc2b0[shape=record, label="  %55 = icmp eq i32 %18, %54"];
	Node0x1d988b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1dfc340[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x1dfc5e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1dfc748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1dfc858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1dfc968[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1dfca28[shape=record, label="  ret i32 0"];
	Node0x1df8cf8 -> Node0x1df8d78;
	Node0x1df8d78 -> Node0x1df8e08;
	Node0x1df8e08 -> Node0x1df8e68;
	Node0x1df8e68 -> Node0x1df8f18;
	Node0x1df8f18 -> Node0x1df9348;
	Node0x1df9348 -> Node0x1df9428;
	Node0x1df9428 -> Node0x1df9528;
	Node0x1df9528 -> Node0x1df95e8;
	Node0x1df95e8 -> Node0x1df9698;
	Node0x1df9698 -> Node0x1df9758;
	Node0x1df9758 -> Node0x1df9808;
	Node0x1df9808 -> Node0x1df3ba0;
	Node0x1df3ba0 -> Node0x1df9a08;
	Node0x1df9a08 -> Node0x1dfa978;
	Node0x1dfa978 -> Node0x1dfafe8;
	Node0x1dfafe8 -> Node0x1dfb048;
	Node0x1dfb048 -> Node0x1dfb0c0;
	Node0x1dfb0c0 -> Node0x1dfb130;
	Node0x1dfb130 -> Node0x1dfb1a0;
	Node0x1dfb1a0 -> Node0x1dfb210;
	Node0x1dfb210 -> Node0x1dfb280;
	Node0x1dfb280 -> Node0x1dfb2f0;
	Node0x1dfb2f0 -> Node0x1dfb360;
	Node0x1dfb360 -> Node0x1dfb3d0;
	Node0x1dfb3d0 -> Node0x1dfb440;
	Node0x1dfb440 -> Node0x1dfb4b0;
	Node0x1dfb4b0 -> Node0x1dfb520;
	Node0x1dfb520 -> Node0x1dfb590;
	Node0x1dfb590 -> Node0x1dfb600;
	Node0x1dfb600 -> Node0x1dfb670;
	Node0x1dfb670 -> Node0x1dfb6e0;
	Node0x1dfb6e0 -> Node0x1dfb750;
	Node0x1dfb750 -> Node0x1dfb7c0;
	Node0x1dfb7c0 -> Node0x1dfb830;
	Node0x1dfb830 -> Node0x1dfb8a0;
	Node0x1dfb8a0 -> Node0x1dfb910;
	Node0x1dfb910 -> Node0x1dfb980;
	Node0x1dfb980 -> Node0x1dfb9f0;
	Node0x1dfb9f0 -> Node0x1dfba60;
	Node0x1dfba60 -> Node0x1dfbad0;
	Node0x1dfbad0 -> Node0x1dfbb40;
	Node0x1dfbb40 -> Node0x1dfbbb0;
	Node0x1dfbbb0 -> Node0x1dfbc20;
	Node0x1dfbc20 -> Node0x1dfbc90;
	Node0x1dfbc90 -> Node0x1dfbd00;
	Node0x1dfbd00 -> Node0x1dfbd70;
	Node0x1dfbd70 -> Node0x1dfbde0;
	Node0x1dfbde0 -> Node0x1dfbe50;
	Node0x1dfbe50 -> Node0x1dfbec0;
	Node0x1dfbec0 -> Node0x1dfbf30;
	Node0x1dfbf30 -> Node0x1dfbfa0;
	Node0x1dfbfa0 -> Node0x1dfc010;
	Node0x1dfc010 -> Node0x1dfc080;
	Node0x1dfc080 -> Node0x1dfc0f0;
	Node0x1dfc0f0 -> Node0x1dfc160;
	Node0x1dfc160 -> Node0x1dfc1d0;
	Node0x1dfc1d0 -> Node0x1dfc240;
	Node0x1dfc240 -> Node0x1dfc2b0;
	Node0x1dfc2b0 -> Node0x1d988b8;
	Node0x1d988b8 -> Node0x1dfc340;
	Node0x1dfc340 -> Node0x1dfc5e8;
	Node0x1dfc5e8 -> Node0x1dfc748;
	Node0x1dfc748 -> Node0x1dfc858;
	Node0x1dfc858 -> Node0x1dfc968;
	Node0x1dfc968 -> Node0x1dfca28;
edge [color=red]
	Node0x1df8cf8 -> Node0x1df8f18;
	Node0x1df8f18 -> Node0x1df9348;
	Node0x1df8d78 -> Node0x1df9428;
	Node0x1df9428 -> Node0x1df9528;
	Node0x1df8e08 -> Node0x1df95e8;
	Node0x1df95e8 -> Node0x1df9698;
	Node0x1df8e68 -> Node0x1df9758;
	Node0x1df9758 -> Node0x1df9808;
	Node0x1df8cf8 -> Node0x1df3ba0;
	Node0x1df8d78 -> Node0x1df3ba0;
	Node0x1df8e08 -> Node0x1df3ba0;
	Node0x1df8e68 -> Node0x1df3ba0;
	Node0x1df8cf8 -> Node0x1df9a08;
	Node0x1df8d78 -> Node0x1dfa978;
	Node0x1df8e08 -> Node0x1dfafe8;
	Node0x1df8e68 -> Node0x1dfb048;
	Node0x1dfb048 -> Node0x1dfb0c0;
	Node0x1df9a08 -> Node0x1dfb0c0;
	Node0x1dfb048 -> Node0x1dfb130;
	Node0x1dfa978 -> Node0x1dfb1a0;
	Node0x1dfb1a0 -> Node0x1dfb210;
	Node0x1dfafe8 -> Node0x1dfb210;
	Node0x1dfb210 -> Node0x1dfb280;
	Node0x1dfb0c0 -> Node0x1dfb280;
	Node0x1dfafe8 -> Node0x1dfb2f0;
	Node0x1dfa978 -> Node0x1dfb360;
	Node0x1dfb2f0 -> Node0x1dfb360;
	Node0x1dfa978 -> Node0x1dfb3d0;
	Node0x1dfb2f0 -> Node0x1dfb3d0;
	Node0x1dfafe8 -> Node0x1dfb440;
	Node0x1dfa978 -> Node0x1dfb440;
	Node0x1dfafe8 -> Node0x1dfb4b0;
	Node0x1dfa978 -> Node0x1dfb4b0;
	Node0x1dfb4b0 -> Node0x1dfb520;
	Node0x1dfb360 -> Node0x1dfb590;
	Node0x1dfafe8 -> Node0x1dfb600;
	Node0x1dfa978 -> Node0x1dfb600;
	Node0x1df9a08 -> Node0x1dfb670;
	Node0x1dfb048 -> Node0x1dfb6e0;
	Node0x1df9a08 -> Node0x1dfb6e0;
	Node0x1dfb048 -> Node0x1dfb750;
	Node0x1df9a08 -> Node0x1dfb750;
	Node0x1dfb048 -> Node0x1dfb7c0;
	Node0x1dfb670 -> Node0x1dfb7c0;
	Node0x1dfb048 -> Node0x1dfb830;
	Node0x1df9a08 -> Node0x1dfb8a0;
	Node0x1dfb130 -> Node0x1dfb8a0;
	Node0x1dfb0c0 -> Node0x1dfb910;
	Node0x1dfb910 -> Node0x1dfb980;
	Node0x1dfb7c0 -> Node0x1dfb9f0;
	Node0x1dfb9f0 -> Node0x1dfba60;
	Node0x1dfb3d0 -> Node0x1dfbad0;
	Node0x1df9a08 -> Node0x1dfbad0;
	Node0x1dfbad0 -> Node0x1dfbb40;
	Node0x1dfb6e0 -> Node0x1dfbb40;
	Node0x1dfbb40 -> Node0x1dfbbb0;
	Node0x1dfa978 -> Node0x1dfbc20;
	Node0x1dfbc20 -> Node0x1dfbc90;
	Node0x1dfafe8 -> Node0x1dfbc90;
	Node0x1dfbc90 -> Node0x1dfbd00;
	Node0x1dfb360 -> Node0x1dfbd00;
	Node0x1dfbd00 -> Node0x1dfbd70;
	Node0x1dfb440 -> Node0x1dfbd70;
	Node0x1dfbd70 -> Node0x1dfbde0;
	Node0x1dfb520 -> Node0x1dfbde0;
	Node0x1dfbde0 -> Node0x1dfbe50;
	Node0x1dfb590 -> Node0x1dfbe50;
	Node0x1dfbe50 -> Node0x1dfbec0;
	Node0x1dfb600 -> Node0x1dfbec0;
	Node0x1dfbec0 -> Node0x1dfbf30;
	Node0x1dfb130 -> Node0x1dfbf30;
	Node0x1dfbf30 -> Node0x1dfbfa0;
	Node0x1dfb750 -> Node0x1dfbfa0;
	Node0x1dfbfa0 -> Node0x1dfc010;
	Node0x1dfb7c0 -> Node0x1dfc010;
	Node0x1dfc010 -> Node0x1dfc080;
	Node0x1dfb830 -> Node0x1dfc080;
	Node0x1dfc080 -> Node0x1dfc0f0;
	Node0x1dfb8a0 -> Node0x1dfc0f0;
	Node0x1dfc0f0 -> Node0x1dfc160;
	Node0x1dfba60 -> Node0x1dfc160;
	Node0x1dfc160 -> Node0x1dfc1d0;
	Node0x1dfb980 -> Node0x1dfc1d0;
	Node0x1dfc1d0 -> Node0x1dfc240;
	Node0x1dfbbb0 -> Node0x1dfc240;
	Node0x1dfb280 -> Node0x1dfc2b0;
	Node0x1dfc240 -> Node0x1dfc2b0;
	Node0x1dfc2b0 -> Node0x1d988b8;
	Node0x1d988b8 -> Node0x1dfc340;
	Node0x1df9758 -> Node0x1dfc5e8;
	Node0x1df95e8 -> Node0x1dfc748;
	Node0x1df9428 -> Node0x1dfc858;
	Node0x1df8f18 -> Node0x1dfc968;
}
