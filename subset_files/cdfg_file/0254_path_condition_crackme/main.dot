digraph "DFG for'main' function" {
	Node0x1c7e448[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c7e4f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c7e588[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1c7e9e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c7eac8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1c7ebe8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c7ee20[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1c7eed8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c7fe48[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c804d0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1c80540[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x1c805b0[shape=record, label="  %10 = and i32 %6, %9"];
	Node0x1c80620[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x1c80690[shape=record, label="  %12 = sub i32 %11, %8"];
	Node0x1c80700[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x1c80770[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x1c807e0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1c80850[shape=record, label="  %16 = add i32 %13, %15"];
	Node0x1c808c0[shape=record, label="  %17 = sub i32 %16, %10"];
	Node0x1c80930[shape=record, label="  %18 = icmp eq i32 %12, %17"];
	Node0x1c1f9d8[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c809c0[shape=record, label="  %20 = call i32 @puts(i8* nonnull dereferenceable(1) %19) #5"];
	Node0x1c80c18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c80d78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c80e38[shape=record, label="  ret i32 0"];
	Node0x1c7e448 -> Node0x1c7e4f8;
	Node0x1c7e4f8 -> Node0x1c7e588;
	Node0x1c7e588 -> Node0x1c7e9e8;
	Node0x1c7e9e8 -> Node0x1c7eac8;
	Node0x1c7eac8 -> Node0x1c7ebe8;
	Node0x1c7ebe8 -> Node0x1c7ee20;
	Node0x1c7ee20 -> Node0x1c7eed8;
	Node0x1c7eed8 -> Node0x1c7fe48;
	Node0x1c7fe48 -> Node0x1c804d0;
	Node0x1c804d0 -> Node0x1c80540;
	Node0x1c80540 -> Node0x1c805b0;
	Node0x1c805b0 -> Node0x1c80620;
	Node0x1c80620 -> Node0x1c80690;
	Node0x1c80690 -> Node0x1c80700;
	Node0x1c80700 -> Node0x1c80770;
	Node0x1c80770 -> Node0x1c807e0;
	Node0x1c807e0 -> Node0x1c80850;
	Node0x1c80850 -> Node0x1c808c0;
	Node0x1c808c0 -> Node0x1c80930;
	Node0x1c80930 -> Node0x1c1f9d8;
	Node0x1c1f9d8 -> Node0x1c809c0;
	Node0x1c809c0 -> Node0x1c80c18;
	Node0x1c80c18 -> Node0x1c80d78;
	Node0x1c80d78 -> Node0x1c80e38;
edge [color=red]
	Node0x1c7e448 -> Node0x1c7e588;
	Node0x1c7e588 -> Node0x1c7e9e8;
	Node0x1c7e4f8 -> Node0x1c7eac8;
	Node0x1c7eac8 -> Node0x1c7ebe8;
	Node0x1c7e448 -> Node0x1c7ee20;
	Node0x1c7e4f8 -> Node0x1c7ee20;
	Node0x1c7e448 -> Node0x1c7eed8;
	Node0x1c7e4f8 -> Node0x1c7fe48;
	Node0x1c7fe48 -> Node0x1c804d0;
	Node0x1c7eed8 -> Node0x1c804d0;
	Node0x1c7fe48 -> Node0x1c80540;
	Node0x1c7eed8 -> Node0x1c805b0;
	Node0x1c80540 -> Node0x1c805b0;
	Node0x1c805b0 -> Node0x1c80620;
	Node0x1c80620 -> Node0x1c80690;
	Node0x1c804d0 -> Node0x1c80690;
	Node0x1c7fe48 -> Node0x1c80700;
	Node0x1c7eed8 -> Node0x1c80700;
	Node0x1c7fe48 -> Node0x1c80770;
	Node0x1c7eed8 -> Node0x1c80770;
	Node0x1c80770 -> Node0x1c807e0;
	Node0x1c80700 -> Node0x1c80850;
	Node0x1c807e0 -> Node0x1c80850;
	Node0x1c80850 -> Node0x1c808c0;
	Node0x1c805b0 -> Node0x1c808c0;
	Node0x1c80690 -> Node0x1c80930;
	Node0x1c808c0 -> Node0x1c80930;
	Node0x1c80930 -> Node0x1c1f9d8;
	Node0x1c1f9d8 -> Node0x1c809c0;
	Node0x1c7eac8 -> Node0x1c80c18;
	Node0x1c7e588 -> Node0x1c80d78;
}
