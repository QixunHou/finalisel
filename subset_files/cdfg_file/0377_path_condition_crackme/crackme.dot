digraph "DFG for'crackme' function" {
	Node0x14ca7c0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x14cae40[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x14caeb0[shape=record, label="  %7 = or i32 %3, %0"];
	Node0x14caf20[shape=record, label="  %8 = sub i32 %6, %7"];
	Node0x14caf90[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x14cb000[shape=record, label="  %10 = or i32 %9, %1"];
	Node0x14cb070[shape=record, label="  %11 = and i32 %2, %1"];
	Node0x14cb0e0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x14cb180[shape=record, label="  %13 = shl i32 %1, 1"];
	Node0x14cb220[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x14cb290[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x14cb330[shape=record, label="  %16 = xor i32 %1, 2147483647"];
	Node0x14cb3a0[shape=record, label="  %17 = or i32 %16, %2"];
	Node0x14cb410[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x14cb4b0[shape=record, label="  %19 = shl i32 %15, 2"];
	Node0x14cb550[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0x14cb5c0[shape=record, label="  %21 = shl i32 %10, 2"];
	Node0x14cb630[shape=record, label="  %22 = xor i32 %21, -4"];
	Node0x14cb6d0[shape=record, label="  %23 = mul i32 %11, 5"];
	Node0x14cb740[shape=record, label="  %24 = xor i32 %0, -1"];
	Node0x14cb7b0[shape=record, label="  %25 = xor i32 %3, 2147483647"];
	Node0x14cb820[shape=record, label="  %26 = or i32 %25, %0"];
	Node0x14cb890[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x14cb900[shape=record, label="  %28 = and i32 %3, %0"];
	Node0x14cb970[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x14cb9e0[shape=record, label="  %30 = xor i32 %3, %0"];
	Node0x14cba50[shape=record, label="  %31 = or i32 %24, %3"];
	Node0x14cbac0[shape=record, label="  %32 = shl i32 %7, 2"];
	Node0x14cbd40[shape=record, label="  %33 = xor i32 %32, -4"];
	Node0x14cbdb0[shape=record, label="  %34 = xor i32 %31, -1"];
	Node0x14cbe50[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x14cbec0[shape=record, label="  %36 = shl i32 %28, 2"];
	Node0x14cbf60[shape=record, label="  %37 = sub i32 4, %1"];
	Node0x14cbfd0[shape=record, label="  %38 = sub i32 %37, %2"];
	Node0x14cc040[shape=record, label="  %39 = add i32 %38, %9"];
	Node0x14cc0b0[shape=record, label="  %40 = sub i32 %39, %5"];
	Node0x14cc120[shape=record, label="  %41 = sub i32 %40, %10"];
	Node0x14cc190[shape=record, label="  %42 = add i32 %41, %12"];
	Node0x14cc200[shape=record, label="  %43 = sub i32 %42, %14"];
	Node0x14cc270[shape=record, label="  %44 = add i32 %43, %15"];
	Node0x14cc2e0[shape=record, label="  %45 = sub i32 %44, %18"];
	Node0x14cc350[shape=record, label="  %46 = add i32 %45, %23"];
	Node0x14cc3c0[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x14cc430[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x14cc4a0[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x14cc510[shape=record, label="  %50 = add i32 %49, %20"];
	Node0x14cc580[shape=record, label="  %51 = add i32 %50, %22"];
	Node0x14cc5f0[shape=record, label="  %52 = add i32 %51, %35"];
	Node0x14cc660[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x14cc6d0[shape=record, label="  %54 = sub i32 %53, %27"];
	Node0x14cc740[shape=record, label="  %55 = add i32 %54, %33"];
	Node0x14cc7b0[shape=record, label="  %56 = icmp eq i32 %8, %55"];
	Node0x146b268[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14ccc50[shape=record, label="  %58 = tail call i32 @puts(i8* nonnull dereferenceable(1) %57)"];
	Node0x14ccca0[shape=record, label="  ret void"];
	Node0x14ca7c0 -> Node0x14cae40;
	Node0x14cae40 -> Node0x14caeb0;
	Node0x14caeb0 -> Node0x14caf20;
	Node0x14caf20 -> Node0x14caf90;
	Node0x14caf90 -> Node0x14cb000;
	Node0x14cb000 -> Node0x14cb070;
	Node0x14cb070 -> Node0x14cb0e0;
	Node0x14cb0e0 -> Node0x14cb180;
	Node0x14cb180 -> Node0x14cb220;
	Node0x14cb220 -> Node0x14cb290;
	Node0x14cb290 -> Node0x14cb330;
	Node0x14cb330 -> Node0x14cb3a0;
	Node0x14cb3a0 -> Node0x14cb410;
	Node0x14cb410 -> Node0x14cb4b0;
	Node0x14cb4b0 -> Node0x14cb550;
	Node0x14cb550 -> Node0x14cb5c0;
	Node0x14cb5c0 -> Node0x14cb630;
	Node0x14cb630 -> Node0x14cb6d0;
	Node0x14cb6d0 -> Node0x14cb740;
	Node0x14cb740 -> Node0x14cb7b0;
	Node0x14cb7b0 -> Node0x14cb820;
	Node0x14cb820 -> Node0x14cb890;
	Node0x14cb890 -> Node0x14cb900;
	Node0x14cb900 -> Node0x14cb970;
	Node0x14cb970 -> Node0x14cb9e0;
	Node0x14cb9e0 -> Node0x14cba50;
	Node0x14cba50 -> Node0x14cbac0;
	Node0x14cbac0 -> Node0x14cbd40;
	Node0x14cbd40 -> Node0x14cbdb0;
	Node0x14cbdb0 -> Node0x14cbe50;
	Node0x14cbe50 -> Node0x14cbec0;
	Node0x14cbec0 -> Node0x14cbf60;
	Node0x14cbf60 -> Node0x14cbfd0;
	Node0x14cbfd0 -> Node0x14cc040;
	Node0x14cc040 -> Node0x14cc0b0;
	Node0x14cc0b0 -> Node0x14cc120;
	Node0x14cc120 -> Node0x14cc190;
	Node0x14cc190 -> Node0x14cc200;
	Node0x14cc200 -> Node0x14cc270;
	Node0x14cc270 -> Node0x14cc2e0;
	Node0x14cc2e0 -> Node0x14cc350;
	Node0x14cc350 -> Node0x14cc3c0;
	Node0x14cc3c0 -> Node0x14cc430;
	Node0x14cc430 -> Node0x14cc4a0;
	Node0x14cc4a0 -> Node0x14cc510;
	Node0x14cc510 -> Node0x14cc580;
	Node0x14cc580 -> Node0x14cc5f0;
	Node0x14cc5f0 -> Node0x14cc660;
	Node0x14cc660 -> Node0x14cc6d0;
	Node0x14cc6d0 -> Node0x14cc740;
	Node0x14cc740 -> Node0x14cc7b0;
	Node0x14cc7b0 -> Node0x146b268;
	Node0x146b268 -> Node0x14ccc50;
	Node0x14ccc50 -> Node0x14ccca0;
edge [color=red]
	Node0x14ca7c0 -> Node0x14cae40;
	Node0x14cae40 -> Node0x14caf20;
	Node0x14caeb0 -> Node0x14caf20;
	Node0x14caf90 -> Node0x14cb000;
	Node0x14cb070 -> Node0x14cb0e0;
	Node0x14cb180 -> Node0x14cb220;
	Node0x14cb330 -> Node0x14cb3a0;
	Node0x14cb3a0 -> Node0x14cb410;
	Node0x14cb290 -> Node0x14cb4b0;
	Node0x14cb4b0 -> Node0x14cb550;
	Node0x14cb000 -> Node0x14cb5c0;
	Node0x14cb5c0 -> Node0x14cb630;
	Node0x14cb070 -> Node0x14cb6d0;
	Node0x14cb7b0 -> Node0x14cb820;
	Node0x14cb820 -> Node0x14cb890;
	Node0x14cb900 -> Node0x14cb970;
	Node0x14cb740 -> Node0x14cba50;
	Node0x14caeb0 -> Node0x14cbac0;
	Node0x14cbac0 -> Node0x14cbd40;
	Node0x14cba50 -> Node0x14cbdb0;
	Node0x14cbdb0 -> Node0x14cbe50;
	Node0x14cb900 -> Node0x14cbec0;
	Node0x14cbf60 -> Node0x14cbfd0;
	Node0x14cbfd0 -> Node0x14cc040;
	Node0x14caf90 -> Node0x14cc040;
	Node0x14cc040 -> Node0x14cc0b0;
	Node0x14ca7c0 -> Node0x14cc0b0;
	Node0x14cc0b0 -> Node0x14cc120;
	Node0x14cb000 -> Node0x14cc120;
	Node0x14cc120 -> Node0x14cc190;
	Node0x14cb0e0 -> Node0x14cc190;
	Node0x14cc190 -> Node0x14cc200;
	Node0x14cb220 -> Node0x14cc200;
	Node0x14cc200 -> Node0x14cc270;
	Node0x14cb290 -> Node0x14cc270;
	Node0x14cc270 -> Node0x14cc2e0;
	Node0x14cb410 -> Node0x14cc2e0;
	Node0x14cc2e0 -> Node0x14cc350;
	Node0x14cb6d0 -> Node0x14cc350;
	Node0x14cc350 -> Node0x14cc3c0;
	Node0x14cb970 -> Node0x14cc3c0;
	Node0x14cc3c0 -> Node0x14cc430;
	Node0x14cb9e0 -> Node0x14cc430;
	Node0x14cc430 -> Node0x14cc4a0;
	Node0x14cba50 -> Node0x14cc4a0;
	Node0x14cc4a0 -> Node0x14cc510;
	Node0x14cb550 -> Node0x14cc510;
	Node0x14cc510 -> Node0x14cc580;
	Node0x14cb630 -> Node0x14cc580;
	Node0x14cc580 -> Node0x14cc5f0;
	Node0x14cbe50 -> Node0x14cc5f0;
	Node0x14cc5f0 -> Node0x14cc660;
	Node0x14cbec0 -> Node0x14cc660;
	Node0x14cc660 -> Node0x14cc6d0;
	Node0x14cb890 -> Node0x14cc6d0;
	Node0x14cc6d0 -> Node0x14cc740;
	Node0x14cbd40 -> Node0x14cc740;
	Node0x14caf20 -> Node0x14cc7b0;
	Node0x14cc740 -> Node0x14cc7b0;
	Node0x14cc7b0 -> Node0x146b268;
	Node0x146b268 -> Node0x14ccc50;
}
