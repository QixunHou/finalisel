digraph "DFG for'main' function" {
	Node0x1949b48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1949bc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1949c58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1949cb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1949d68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x194a198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x194a278[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x194a378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x194a438[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x194a4e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x194a5a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x194a658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1944b10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x194a858[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x194b7c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x194be38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x194be98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x194bf10[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x194bf80[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x194bff0[shape=record, label="  %16 = sub i32 %12, %15"];
	Node0x194c060[shape=record, label="  %17 = shl i32 %13, 1"];
	Node0x194c0d0[shape=record, label="  %18 = sub i32 %16, %17"];
	Node0x194c140[shape=record, label="  %19 = xor i32 %13, %10"];
	Node0x194c1b0[shape=record, label="  %20 = sub i32 %18, %19"];
	Node0x194c220[shape=record, label="  %21 = and i32 %12, %11"];
	Node0x194c290[shape=record, label="  %22 = xor i32 %12, %11"];
	Node0x194c300[shape=record, label="  %23 = xor i32 %12, -1"];
	Node0x194c370[shape=record, label="  %24 = or i32 %11, %23"];
	Node0x194c3e0[shape=record, label="  %25 = xor i32 %15, -2"];
	Node0x194c450[shape=record, label="  %26 = shl i32 %24, 1"];
	Node0x194c4c0[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x194c530[shape=record, label="  %28 = and i32 %11, %23"];
	Node0x194c5a0[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x194c610[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x194c680[shape=record, label="  %31 = xor i32 %19, -1"];
	Node0x194c6f0[shape=record, label="  %32 = xor i32 %10, -1"];
	Node0x194c760[shape=record, label="  %33 = or i32 %13, %32"];
	Node0x194c7d0[shape=record, label="  %34 = or i32 %13, %10"];
	Node0x194c840[shape=record, label="  %35 = and i32 %13, %32"];
	Node0x194c8b0[shape=record, label="  %36 = shl i32 %35, 2"];
	Node0x194c920[shape=record, label="  %37 = mul i32 %30, -5"];
	Node0x194c990[shape=record, label="  %38 = shl i32 %22, 1"];
	Node0x194ca00[shape=record, label="  %39 = add i32 %21, 3"];
	Node0x194ca70[shape=record, label="  %40 = sub i32 %39, %24"];
	Node0x194cae0[shape=record, label="  %41 = add i32 %40, %13"];
	Node0x194cb50[shape=record, label="  %42 = sub i32 %41, %29"];
	Node0x194cbc0[shape=record, label="  %43 = add i32 %42, %30"];
	Node0x194cc30[shape=record, label="  %44 = add i32 %43, %31"];
	Node0x194cca0[shape=record, label="  %45 = add i32 %44, %33"];
	Node0x194cd10[shape=record, label="  %46 = add i32 %45, %34"];
	Node0x194cd80[shape=record, label="  %47 = add i32 %46, %38"];
	Node0x194cdf0[shape=record, label="  %48 = add i32 %47, %25"];
	Node0x194ce60[shape=record, label="  %49 = sub i32 %48, %27"];
	Node0x194ced0[shape=record, label="  %50 = sub i32 %49, %36"];
	Node0x194cf40[shape=record, label="  %51 = add i32 %50, %37"];
	Node0x194cfb0[shape=record, label="  %52 = icmp eq i32 %20, %51"];
	Node0x18e98b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x194d040[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x194d2e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x194d448[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x194d558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x194d668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x194d728[shape=record, label="  ret i32 0"];
	Node0x1949b48 -> Node0x1949bc8;
	Node0x1949bc8 -> Node0x1949c58;
	Node0x1949c58 -> Node0x1949cb8;
	Node0x1949cb8 -> Node0x1949d68;
	Node0x1949d68 -> Node0x194a198;
	Node0x194a198 -> Node0x194a278;
	Node0x194a278 -> Node0x194a378;
	Node0x194a378 -> Node0x194a438;
	Node0x194a438 -> Node0x194a4e8;
	Node0x194a4e8 -> Node0x194a5a8;
	Node0x194a5a8 -> Node0x194a658;
	Node0x194a658 -> Node0x1944b10;
	Node0x1944b10 -> Node0x194a858;
	Node0x194a858 -> Node0x194b7c8;
	Node0x194b7c8 -> Node0x194be38;
	Node0x194be38 -> Node0x194be98;
	Node0x194be98 -> Node0x194bf10;
	Node0x194bf10 -> Node0x194bf80;
	Node0x194bf80 -> Node0x194bff0;
	Node0x194bff0 -> Node0x194c060;
	Node0x194c060 -> Node0x194c0d0;
	Node0x194c0d0 -> Node0x194c140;
	Node0x194c140 -> Node0x194c1b0;
	Node0x194c1b0 -> Node0x194c220;
	Node0x194c220 -> Node0x194c290;
	Node0x194c290 -> Node0x194c300;
	Node0x194c300 -> Node0x194c370;
	Node0x194c370 -> Node0x194c3e0;
	Node0x194c3e0 -> Node0x194c450;
	Node0x194c450 -> Node0x194c4c0;
	Node0x194c4c0 -> Node0x194c530;
	Node0x194c530 -> Node0x194c5a0;
	Node0x194c5a0 -> Node0x194c610;
	Node0x194c610 -> Node0x194c680;
	Node0x194c680 -> Node0x194c6f0;
	Node0x194c6f0 -> Node0x194c760;
	Node0x194c760 -> Node0x194c7d0;
	Node0x194c7d0 -> Node0x194c840;
	Node0x194c840 -> Node0x194c8b0;
	Node0x194c8b0 -> Node0x194c920;
	Node0x194c920 -> Node0x194c990;
	Node0x194c990 -> Node0x194ca00;
	Node0x194ca00 -> Node0x194ca70;
	Node0x194ca70 -> Node0x194cae0;
	Node0x194cae0 -> Node0x194cb50;
	Node0x194cb50 -> Node0x194cbc0;
	Node0x194cbc0 -> Node0x194cc30;
	Node0x194cc30 -> Node0x194cca0;
	Node0x194cca0 -> Node0x194cd10;
	Node0x194cd10 -> Node0x194cd80;
	Node0x194cd80 -> Node0x194cdf0;
	Node0x194cdf0 -> Node0x194ce60;
	Node0x194ce60 -> Node0x194ced0;
	Node0x194ced0 -> Node0x194cf40;
	Node0x194cf40 -> Node0x194cfb0;
	Node0x194cfb0 -> Node0x18e98b8;
	Node0x18e98b8 -> Node0x194d040;
	Node0x194d040 -> Node0x194d2e8;
	Node0x194d2e8 -> Node0x194d448;
	Node0x194d448 -> Node0x194d558;
	Node0x194d558 -> Node0x194d668;
	Node0x194d668 -> Node0x194d728;
edge [color=red]
	Node0x1949b48 -> Node0x1949d68;
	Node0x1949d68 -> Node0x194a198;
	Node0x1949bc8 -> Node0x194a278;
	Node0x194a278 -> Node0x194a378;
	Node0x1949c58 -> Node0x194a438;
	Node0x194a438 -> Node0x194a4e8;
	Node0x1949cb8 -> Node0x194a5a8;
	Node0x194a5a8 -> Node0x194a658;
	Node0x1949b48 -> Node0x1944b10;
	Node0x1949bc8 -> Node0x1944b10;
	Node0x1949c58 -> Node0x1944b10;
	Node0x1949cb8 -> Node0x1944b10;
	Node0x1949b48 -> Node0x194a858;
	Node0x1949bc8 -> Node0x194b7c8;
	Node0x1949c58 -> Node0x194be38;
	Node0x1949cb8 -> Node0x194be98;
	Node0x194be38 -> Node0x194bf10;
	Node0x194b7c8 -> Node0x194bf10;
	Node0x194bf10 -> Node0x194bf80;
	Node0x194be38 -> Node0x194bff0;
	Node0x194bf80 -> Node0x194bff0;
	Node0x194be98 -> Node0x194c060;
	Node0x194bff0 -> Node0x194c0d0;
	Node0x194c060 -> Node0x194c0d0;
	Node0x194be98 -> Node0x194c140;
	Node0x194a858 -> Node0x194c140;
	Node0x194c0d0 -> Node0x194c1b0;
	Node0x194c140 -> Node0x194c1b0;
	Node0x194be38 -> Node0x194c220;
	Node0x194b7c8 -> Node0x194c220;
	Node0x194be38 -> Node0x194c290;
	Node0x194b7c8 -> Node0x194c290;
	Node0x194be38 -> Node0x194c300;
	Node0x194b7c8 -> Node0x194c370;
	Node0x194c300 -> Node0x194c370;
	Node0x194bf80 -> Node0x194c3e0;
	Node0x194c370 -> Node0x194c450;
	Node0x194c450 -> Node0x194c4c0;
	Node0x194b7c8 -> Node0x194c530;
	Node0x194c300 -> Node0x194c530;
	Node0x194c530 -> Node0x194c5a0;
	Node0x194be98 -> Node0x194c610;
	Node0x194a858 -> Node0x194c610;
	Node0x194c140 -> Node0x194c680;
	Node0x194a858 -> Node0x194c6f0;
	Node0x194be98 -> Node0x194c760;
	Node0x194c6f0 -> Node0x194c760;
	Node0x194be98 -> Node0x194c7d0;
	Node0x194a858 -> Node0x194c7d0;
	Node0x194be98 -> Node0x194c840;
	Node0x194c6f0 -> Node0x194c840;
	Node0x194c840 -> Node0x194c8b0;
	Node0x194c610 -> Node0x194c920;
	Node0x194c290 -> Node0x194c990;
	Node0x194c220 -> Node0x194ca00;
	Node0x194ca00 -> Node0x194ca70;
	Node0x194c370 -> Node0x194ca70;
	Node0x194ca70 -> Node0x194cae0;
	Node0x194be98 -> Node0x194cae0;
	Node0x194cae0 -> Node0x194cb50;
	Node0x194c5a0 -> Node0x194cb50;
	Node0x194cb50 -> Node0x194cbc0;
	Node0x194c610 -> Node0x194cbc0;
	Node0x194cbc0 -> Node0x194cc30;
	Node0x194c680 -> Node0x194cc30;
	Node0x194cc30 -> Node0x194cca0;
	Node0x194c760 -> Node0x194cca0;
	Node0x194cca0 -> Node0x194cd10;
	Node0x194c7d0 -> Node0x194cd10;
	Node0x194cd10 -> Node0x194cd80;
	Node0x194c990 -> Node0x194cd80;
	Node0x194cd80 -> Node0x194cdf0;
	Node0x194c3e0 -> Node0x194cdf0;
	Node0x194cdf0 -> Node0x194ce60;
	Node0x194c4c0 -> Node0x194ce60;
	Node0x194ce60 -> Node0x194ced0;
	Node0x194c8b0 -> Node0x194ced0;
	Node0x194ced0 -> Node0x194cf40;
	Node0x194c920 -> Node0x194cf40;
	Node0x194c1b0 -> Node0x194cfb0;
	Node0x194cf40 -> Node0x194cfb0;
	Node0x194cfb0 -> Node0x18e98b8;
	Node0x18e98b8 -> Node0x194d040;
	Node0x194a5a8 -> Node0x194d2e8;
	Node0x194a438 -> Node0x194d448;
	Node0x194a278 -> Node0x194d558;
	Node0x1949d68 -> Node0x194d668;
}
