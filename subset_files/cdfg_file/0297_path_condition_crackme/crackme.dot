digraph "DFG for'crackme' function" {
	Node0x2218180[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x2218220[shape=record, label="  %6 = mul i32 %5, -2"];
	Node0x2218290[shape=record, label="  %7 = add i32 %6, %0"];
	Node0x2218300[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x2218370[shape=record, label="  %9 = or i32 %8, %3"];
	Node0x22183e0[shape=record, label="  %10 = sub i32 %7, %9"];
	Node0x2218450[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x22184c0[shape=record, label="  %12 = or i32 %11, %1"];
	Node0x2218530[shape=record, label="  %13 = and i32 %11, %1"];
	Node0x22185d0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x2218640[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x22186b0[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x2218720[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x2218790[shape=record, label="  %18 = add i32 %2, 1"];
	Node0x2218800[shape=record, label="  %19 = xor i32 %2, %1"];
	Node0x22188a0[shape=record, label="  %20 = shl i32 %13, 2"];
	Node0x2218910[shape=record, label="  %21 = and i32 %2, %1"];
	Node0x22189b0[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0x2218a20[shape=record, label="  %23 = or i32 %3, %0"];
	Node0x2218a90[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x2218b00[shape=record, label="  %25 = and i32 %8, %3"];
	Node0x2218b70[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x2218be0[shape=record, label="  %27 = xor i32 %3, %0"];
	Node0x2218c50[shape=record, label="  %28 = and i32 %3, %0"];
	Node0x2218cc0[shape=record, label="  %29 = shl i32 %25, 1"];
	Node0x2218d30[shape=record, label="  %30 = shl i32 %28, 1"];
	Node0x2218da0[shape=record, label="  %31 = sub i32 1, %1"];
	Node0x2218e10[shape=record, label="  %32 = add i32 %31, %2"];
	Node0x2219090[shape=record, label="  %33 = add i32 %32, %18"];
	Node0x2219100[shape=record, label="  %34 = sub i32 %33, %12"];
	Node0x2219170[shape=record, label="  %35 = sub i32 %34, %19"];
	Node0x22191e0[shape=record, label="  %36 = sub i32 %35, %17"];
	Node0x2219250[shape=record, label="  %37 = add i32 %36, %20"];
	Node0x22192c0[shape=record, label="  %38 = add i32 %37, %22"];
	Node0x2219330[shape=record, label="  %39 = add i32 %38, %26"];
	Node0x22193a0[shape=record, label="  %40 = add i32 %39, %27"];
	Node0x2219410[shape=record, label="  %41 = add i32 %40, %28"];
	Node0x2219480[shape=record, label="  %42 = add i32 %41, %9"];
	Node0x22194f0[shape=record, label="  %43 = sub i32 %42, %15"];
	Node0x2219560[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x22195d0[shape=record, label="  %45 = sub i32 %44, %29"];
	Node0x2219640[shape=record, label="  %46 = sub i32 %45, %30"];
	Node0x22196b0[shape=record, label="  %47 = icmp eq i32 %10, %46"];
	Node0x21b8268[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2219b50[shape=record, label="  %49 = tail call i32 @puts(i8* nonnull dereferenceable(1) %48)"];
	Node0x2219ba0[shape=record, label="  ret void"];
	Node0x2218180 -> Node0x2218220;
	Node0x2218220 -> Node0x2218290;
	Node0x2218290 -> Node0x2218300;
	Node0x2218300 -> Node0x2218370;
	Node0x2218370 -> Node0x22183e0;
	Node0x22183e0 -> Node0x2218450;
	Node0x2218450 -> Node0x22184c0;
	Node0x22184c0 -> Node0x2218530;
	Node0x2218530 -> Node0x22185d0;
	Node0x22185d0 -> Node0x2218640;
	Node0x2218640 -> Node0x22186b0;
	Node0x22186b0 -> Node0x2218720;
	Node0x2218720 -> Node0x2218790;
	Node0x2218790 -> Node0x2218800;
	Node0x2218800 -> Node0x22188a0;
	Node0x22188a0 -> Node0x2218910;
	Node0x2218910 -> Node0x22189b0;
	Node0x22189b0 -> Node0x2218a20;
	Node0x2218a20 -> Node0x2218a90;
	Node0x2218a90 -> Node0x2218b00;
	Node0x2218b00 -> Node0x2218b70;
	Node0x2218b70 -> Node0x2218be0;
	Node0x2218be0 -> Node0x2218c50;
	Node0x2218c50 -> Node0x2218cc0;
	Node0x2218cc0 -> Node0x2218d30;
	Node0x2218d30 -> Node0x2218da0;
	Node0x2218da0 -> Node0x2218e10;
	Node0x2218e10 -> Node0x2219090;
	Node0x2219090 -> Node0x2219100;
	Node0x2219100 -> Node0x2219170;
	Node0x2219170 -> Node0x22191e0;
	Node0x22191e0 -> Node0x2219250;
	Node0x2219250 -> Node0x22192c0;
	Node0x22192c0 -> Node0x2219330;
	Node0x2219330 -> Node0x22193a0;
	Node0x22193a0 -> Node0x2219410;
	Node0x2219410 -> Node0x2219480;
	Node0x2219480 -> Node0x22194f0;
	Node0x22194f0 -> Node0x2219560;
	Node0x2219560 -> Node0x22195d0;
	Node0x22195d0 -> Node0x2219640;
	Node0x2219640 -> Node0x22196b0;
	Node0x22196b0 -> Node0x21b8268;
	Node0x21b8268 -> Node0x2219b50;
	Node0x2219b50 -> Node0x2219ba0;
edge [color=red]
	Node0x2218180 -> Node0x2218220;
	Node0x2218220 -> Node0x2218290;
	Node0x2218300 -> Node0x2218370;
	Node0x2218290 -> Node0x22183e0;
	Node0x2218370 -> Node0x22183e0;
	Node0x2218450 -> Node0x22184c0;
	Node0x2218450 -> Node0x2218530;
	Node0x2218530 -> Node0x22185d0;
	Node0x22185d0 -> Node0x2218640;
	Node0x22186b0 -> Node0x2218720;
	Node0x2218530 -> Node0x22188a0;
	Node0x2218910 -> Node0x22189b0;
	Node0x2218a20 -> Node0x2218a90;
	Node0x2218300 -> Node0x2218b00;
	Node0x2218b00 -> Node0x2218b70;
	Node0x2218b00 -> Node0x2218cc0;
	Node0x2218c50 -> Node0x2218d30;
	Node0x2218da0 -> Node0x2218e10;
	Node0x2218e10 -> Node0x2219090;
	Node0x2218790 -> Node0x2219090;
	Node0x2219090 -> Node0x2219100;
	Node0x22184c0 -> Node0x2219100;
	Node0x2219100 -> Node0x2219170;
	Node0x2218800 -> Node0x2219170;
	Node0x2219170 -> Node0x22191e0;
	Node0x2218720 -> Node0x22191e0;
	Node0x22191e0 -> Node0x2219250;
	Node0x22188a0 -> Node0x2219250;
	Node0x2219250 -> Node0x22192c0;
	Node0x22189b0 -> Node0x22192c0;
	Node0x22192c0 -> Node0x2219330;
	Node0x2218b70 -> Node0x2219330;
	Node0x2219330 -> Node0x22193a0;
	Node0x2218be0 -> Node0x22193a0;
	Node0x22193a0 -> Node0x2219410;
	Node0x2218c50 -> Node0x2219410;
	Node0x2219410 -> Node0x2219480;
	Node0x2218370 -> Node0x2219480;
	Node0x2219480 -> Node0x22194f0;
	Node0x2218640 -> Node0x22194f0;
	Node0x22194f0 -> Node0x2219560;
	Node0x2218a90 -> Node0x2219560;
	Node0x2219560 -> Node0x22195d0;
	Node0x2218cc0 -> Node0x22195d0;
	Node0x22195d0 -> Node0x2219640;
	Node0x2218d30 -> Node0x2219640;
	Node0x22183e0 -> Node0x22196b0;
	Node0x2219640 -> Node0x22196b0;
	Node0x22196b0 -> Node0x21b8268;
	Node0x21b8268 -> Node0x2219b50;
}
