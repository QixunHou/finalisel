digraph "DFG for'main' function" {
	Node0x2219d68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2219de8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2219e78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2219ed8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x2219f88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x221a3b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x221a498[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x221a598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x221a658[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x221a708[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x221a7c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x221a878[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2214ba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x221aa78[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x221b9e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x221c058[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x221c0b8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x221c130[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x221c1a0[shape=record, label="  %15 = mul i32 %14, -2"];
	Node0x221c210[shape=record, label="  %16 = add i32 %15, %10"];
	Node0x221c280[shape=record, label="  %17 = xor i32 %10, -1"];
	Node0x221c2f0[shape=record, label="  %18 = or i32 %13, %17"];
	Node0x221c360[shape=record, label="  %19 = sub i32 %16, %18"];
	Node0x221c3d0[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x221c440[shape=record, label="  %21 = or i32 %11, %20"];
	Node0x221c4b0[shape=record, label="  %22 = and i32 %11, %20"];
	Node0x221c520[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x221c590[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x221c600[shape=record, label="  %25 = or i32 %12, %11"];
	Node0x221c670[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x221c6e0[shape=record, label="  %27 = xor i32 %12, %11"];
	Node0x221c750[shape=record, label="  %28 = shl i32 %22, 2"];
	Node0x221c7c0[shape=record, label="  %29 = and i32 %12, %11"];
	Node0x221c830[shape=record, label="  %30 = mul i32 %29, 3"];
	Node0x221c8a0[shape=record, label="  %31 = or i32 %13, %10"];
	Node0x221c910[shape=record, label="  %32 = and i32 %13, %17"];
	Node0x221c980[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0x221c9f0[shape=record, label="  %34 = xor i32 %13, %10"];
	Node0x221ca60[shape=record, label="  %35 = and i32 %13, %10"];
	Node0x221cad0[shape=record, label="  %36 = shl i32 %32, 1"];
	Node0x221cb40[shape=record, label="  %37 = shl i32 %35, 1"];
	Node0x221cbb0[shape=record, label="  %38 = add i32 %31, %12"];
	Node0x221cc20[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x221cc90[shape=record, label="  %40 = sub i32 2, %11"];
	Node0x221cd00[shape=record, label="  %41 = sub i32 %40, %21"];
	Node0x221cd70[shape=record, label="  %42 = sub i32 %41, %27"];
	Node0x221cde0[shape=record, label="  %43 = sub i32 %42, %26"];
	Node0x221ce50[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x221cec0[shape=record, label="  %45 = add i32 %44, %30"];
	Node0x221cf30[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x221cfa0[shape=record, label="  %47 = add i32 %46, %34"];
	Node0x221d010[shape=record, label="  %48 = add i32 %47, %35"];
	Node0x221d080[shape=record, label="  %49 = add i32 %48, %18"];
	Node0x221d0f0[shape=record, label="  %50 = sub i32 %49, %24"];
	Node0x221d160[shape=record, label="  %51 = sub i32 %50, %36"];
	Node0x221d1d0[shape=record, label="  %52 = sub i32 %51, %37"];
	Node0x221d240[shape=record, label="  %53 = add i32 %52, %39"];
	Node0x221d2b0[shape=record, label="  %54 = icmp eq i32 %19, %53"];
	Node0x21b98b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x221d340[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x221d5e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x221d748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x221d858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x221d968[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x221da28[shape=record, label="  ret i32 0"];
	Node0x2219d68 -> Node0x2219de8;
	Node0x2219de8 -> Node0x2219e78;
	Node0x2219e78 -> Node0x2219ed8;
	Node0x2219ed8 -> Node0x2219f88;
	Node0x2219f88 -> Node0x221a3b8;
	Node0x221a3b8 -> Node0x221a498;
	Node0x221a498 -> Node0x221a598;
	Node0x221a598 -> Node0x221a658;
	Node0x221a658 -> Node0x221a708;
	Node0x221a708 -> Node0x221a7c8;
	Node0x221a7c8 -> Node0x221a878;
	Node0x221a878 -> Node0x2214ba0;
	Node0x2214ba0 -> Node0x221aa78;
	Node0x221aa78 -> Node0x221b9e8;
	Node0x221b9e8 -> Node0x221c058;
	Node0x221c058 -> Node0x221c0b8;
	Node0x221c0b8 -> Node0x221c130;
	Node0x221c130 -> Node0x221c1a0;
	Node0x221c1a0 -> Node0x221c210;
	Node0x221c210 -> Node0x221c280;
	Node0x221c280 -> Node0x221c2f0;
	Node0x221c2f0 -> Node0x221c360;
	Node0x221c360 -> Node0x221c3d0;
	Node0x221c3d0 -> Node0x221c440;
	Node0x221c440 -> Node0x221c4b0;
	Node0x221c4b0 -> Node0x221c520;
	Node0x221c520 -> Node0x221c590;
	Node0x221c590 -> Node0x221c600;
	Node0x221c600 -> Node0x221c670;
	Node0x221c670 -> Node0x221c6e0;
	Node0x221c6e0 -> Node0x221c750;
	Node0x221c750 -> Node0x221c7c0;
	Node0x221c7c0 -> Node0x221c830;
	Node0x221c830 -> Node0x221c8a0;
	Node0x221c8a0 -> Node0x221c910;
	Node0x221c910 -> Node0x221c980;
	Node0x221c980 -> Node0x221c9f0;
	Node0x221c9f0 -> Node0x221ca60;
	Node0x221ca60 -> Node0x221cad0;
	Node0x221cad0 -> Node0x221cb40;
	Node0x221cb40 -> Node0x221cbb0;
	Node0x221cbb0 -> Node0x221cc20;
	Node0x221cc20 -> Node0x221cc90;
	Node0x221cc90 -> Node0x221cd00;
	Node0x221cd00 -> Node0x221cd70;
	Node0x221cd70 -> Node0x221cde0;
	Node0x221cde0 -> Node0x221ce50;
	Node0x221ce50 -> Node0x221cec0;
	Node0x221cec0 -> Node0x221cf30;
	Node0x221cf30 -> Node0x221cfa0;
	Node0x221cfa0 -> Node0x221d010;
	Node0x221d010 -> Node0x221d080;
	Node0x221d080 -> Node0x221d0f0;
	Node0x221d0f0 -> Node0x221d160;
	Node0x221d160 -> Node0x221d1d0;
	Node0x221d1d0 -> Node0x221d240;
	Node0x221d240 -> Node0x221d2b0;
	Node0x221d2b0 -> Node0x21b98b8;
	Node0x21b98b8 -> Node0x221d340;
	Node0x221d340 -> Node0x221d5e8;
	Node0x221d5e8 -> Node0x221d748;
	Node0x221d748 -> Node0x221d858;
	Node0x221d858 -> Node0x221d968;
	Node0x221d968 -> Node0x221da28;
edge [color=red]
	Node0x2219d68 -> Node0x2219f88;
	Node0x2219f88 -> Node0x221a3b8;
	Node0x2219de8 -> Node0x221a498;
	Node0x221a498 -> Node0x221a598;
	Node0x2219e78 -> Node0x221a658;
	Node0x221a658 -> Node0x221a708;
	Node0x2219ed8 -> Node0x221a7c8;
	Node0x221a7c8 -> Node0x221a878;
	Node0x2219d68 -> Node0x2214ba0;
	Node0x2219de8 -> Node0x2214ba0;
	Node0x2219e78 -> Node0x2214ba0;
	Node0x2219ed8 -> Node0x2214ba0;
	Node0x2219d68 -> Node0x221aa78;
	Node0x2219de8 -> Node0x221b9e8;
	Node0x2219e78 -> Node0x221c058;
	Node0x2219ed8 -> Node0x221c0b8;
	Node0x221b9e8 -> Node0x221c130;
	Node0x221c130 -> Node0x221c1a0;
	Node0x221c1a0 -> Node0x221c210;
	Node0x221aa78 -> Node0x221c210;
	Node0x221aa78 -> Node0x221c280;
	Node0x221c0b8 -> Node0x221c2f0;
	Node0x221c280 -> Node0x221c2f0;
	Node0x221c210 -> Node0x221c360;
	Node0x221c2f0 -> Node0x221c360;
	Node0x221c058 -> Node0x221c3d0;
	Node0x221b9e8 -> Node0x221c440;
	Node0x221c3d0 -> Node0x221c440;
	Node0x221b9e8 -> Node0x221c4b0;
	Node0x221c3d0 -> Node0x221c4b0;
	Node0x221c4b0 -> Node0x221c520;
	Node0x221c520 -> Node0x221c590;
	Node0x221c058 -> Node0x221c600;
	Node0x221b9e8 -> Node0x221c600;
	Node0x221c600 -> Node0x221c670;
	Node0x221c058 -> Node0x221c6e0;
	Node0x221b9e8 -> Node0x221c6e0;
	Node0x221c4b0 -> Node0x221c750;
	Node0x221c058 -> Node0x221c7c0;
	Node0x221b9e8 -> Node0x221c7c0;
	Node0x221c7c0 -> Node0x221c830;
	Node0x221c0b8 -> Node0x221c8a0;
	Node0x221aa78 -> Node0x221c8a0;
	Node0x221c0b8 -> Node0x221c910;
	Node0x221c280 -> Node0x221c910;
	Node0x221c910 -> Node0x221c980;
	Node0x221c0b8 -> Node0x221c9f0;
	Node0x221aa78 -> Node0x221c9f0;
	Node0x221c0b8 -> Node0x221ca60;
	Node0x221aa78 -> Node0x221ca60;
	Node0x221c910 -> Node0x221cad0;
	Node0x221ca60 -> Node0x221cb40;
	Node0x221c8a0 -> Node0x221cbb0;
	Node0x221c058 -> Node0x221cbb0;
	Node0x221cbb0 -> Node0x221cc20;
	Node0x221b9e8 -> Node0x221cc90;
	Node0x221cc90 -> Node0x221cd00;
	Node0x221c440 -> Node0x221cd00;
	Node0x221cd00 -> Node0x221cd70;
	Node0x221c6e0 -> Node0x221cd70;
	Node0x221cd70 -> Node0x221cde0;
	Node0x221c670 -> Node0x221cde0;
	Node0x221cde0 -> Node0x221ce50;
	Node0x221c750 -> Node0x221ce50;
	Node0x221ce50 -> Node0x221cec0;
	Node0x221c830 -> Node0x221cec0;
	Node0x221cec0 -> Node0x221cf30;
	Node0x221c980 -> Node0x221cf30;
	Node0x221cf30 -> Node0x221cfa0;
	Node0x221c9f0 -> Node0x221cfa0;
	Node0x221cfa0 -> Node0x221d010;
	Node0x221ca60 -> Node0x221d010;
	Node0x221d010 -> Node0x221d080;
	Node0x221c2f0 -> Node0x221d080;
	Node0x221d080 -> Node0x221d0f0;
	Node0x221c590 -> Node0x221d0f0;
	Node0x221d0f0 -> Node0x221d160;
	Node0x221cad0 -> Node0x221d160;
	Node0x221d160 -> Node0x221d1d0;
	Node0x221cb40 -> Node0x221d1d0;
	Node0x221d1d0 -> Node0x221d240;
	Node0x221cc20 -> Node0x221d240;
	Node0x221c360 -> Node0x221d2b0;
	Node0x221d240 -> Node0x221d2b0;
	Node0x221d2b0 -> Node0x21b98b8;
	Node0x21b98b8 -> Node0x221d340;
	Node0x221a7c8 -> Node0x221d5e8;
	Node0x221a658 -> Node0x221d748;
	Node0x221a498 -> Node0x221d858;
	Node0x2219f88 -> Node0x221d968;
}
