digraph "DFG for'main' function" {
	Node0x71c348[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x71c3c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x71c458[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x71c4b8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x71c568[shape=record, label="  %5 = alloca i32, align 4"];
	Node0x71c5c8[shape=record, label="  %6 = bitcast i32* %1 to i8*"];
	Node0x71c9f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x71cad8[shape=record, label="  %7 = bitcast i32* %2 to i8*"];
	Node0x71cbd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x71cc98[shape=record, label="  %8 = bitcast i32* %3 to i8*"];
	Node0x71cd48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x71cdb8[shape=record, label="  %9 = bitcast i32* %4 to i8*"];
	Node0x71ce68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5"];
	Node0x71cf28[shape=record, label="  %10 = bitcast i32* %5 to i8*"];
	Node0x71cfd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5"];
	Node0x71d278[shape=record, label="  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)"];
	Node0x71d338[shape=record, label="  %12 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x71e2a8[shape=record, label="  %13 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x71e918[shape=record, label="  %14 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x71e978[shape=record, label="  %15 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x71e9d8[shape=record, label="  %16 = load i32, i32* %5, align 4, !tbaa !2"];
	Node0x714f40[shape=record, label="  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)"];
	Node0x71ebe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5"];
	Node0x71ed48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5"];
	Node0x71ee58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x71ef68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x71f078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x71f138[shape=record, label="  ret i32 0"];
	Node0x71c348 -> Node0x71c3c8;
	Node0x71c3c8 -> Node0x71c458;
	Node0x71c458 -> Node0x71c4b8;
	Node0x71c4b8 -> Node0x71c568;
	Node0x71c568 -> Node0x71c5c8;
	Node0x71c5c8 -> Node0x71c9f8;
	Node0x71c9f8 -> Node0x71cad8;
	Node0x71cad8 -> Node0x71cbd8;
	Node0x71cbd8 -> Node0x71cc98;
	Node0x71cc98 -> Node0x71cd48;
	Node0x71cd48 -> Node0x71cdb8;
	Node0x71cdb8 -> Node0x71ce68;
	Node0x71ce68 -> Node0x71cf28;
	Node0x71cf28 -> Node0x71cfd8;
	Node0x71cfd8 -> Node0x71d278;
	Node0x71d278 -> Node0x71d338;
	Node0x71d338 -> Node0x71e2a8;
	Node0x71e2a8 -> Node0x71e918;
	Node0x71e918 -> Node0x71e978;
	Node0x71e978 -> Node0x71e9d8;
	Node0x71e9d8 -> Node0x714f40;
	Node0x714f40 -> Node0x71ebe8;
	Node0x71ebe8 -> Node0x71ed48;
	Node0x71ed48 -> Node0x71ee58;
	Node0x71ee58 -> Node0x71ef68;
	Node0x71ef68 -> Node0x71f078;
	Node0x71f078 -> Node0x71f138;
edge [color=red]
	Node0x71c348 -> Node0x71c5c8;
	Node0x71c5c8 -> Node0x71c9f8;
	Node0x71c3c8 -> Node0x71cad8;
	Node0x71cad8 -> Node0x71cbd8;
	Node0x71c458 -> Node0x71cc98;
	Node0x71cc98 -> Node0x71cd48;
	Node0x71c4b8 -> Node0x71cdb8;
	Node0x71cdb8 -> Node0x71ce68;
	Node0x71c568 -> Node0x71cf28;
	Node0x71cf28 -> Node0x71cfd8;
	Node0x71c348 -> Node0x71d278;
	Node0x71c3c8 -> Node0x71d278;
	Node0x71c458 -> Node0x71d278;
	Node0x71c4b8 -> Node0x71d278;
	Node0x71c568 -> Node0x71d278;
	Node0x71c348 -> Node0x71d338;
	Node0x71c3c8 -> Node0x71e2a8;
	Node0x71c458 -> Node0x71e918;
	Node0x71c4b8 -> Node0x71e978;
	Node0x71c568 -> Node0x71e9d8;
	Node0x71d338 -> Node0x714f40;
	Node0x71e2a8 -> Node0x714f40;
	Node0x71e918 -> Node0x714f40;
	Node0x71e978 -> Node0x714f40;
	Node0x71e9d8 -> Node0x714f40;
	Node0x71cf28 -> Node0x71ebe8;
	Node0x71cdb8 -> Node0x71ed48;
	Node0x71cc98 -> Node0x71ee58;
	Node0x71cad8 -> Node0x71ef68;
	Node0x71c5c8 -> Node0x71f078;
}
