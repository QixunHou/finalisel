digraph "DFG for'main' function" {
	Node0x844e68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x844ee8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x844f78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x844fd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x845088[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x8454b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x845598[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x845698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x845758[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x845808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x8458c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x845978[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x83fc00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x845b78[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x846ae8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x847158[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x8471b8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x847230[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x8472a0[shape=record, label="  %15 = sub i32 2, %11"];
	Node0x847310[shape=record, label="  %16 = sub i32 %15, %14"];
	Node0x847380[shape=record, label="  %17 = and i32 %12, %11"];
	Node0x8473f0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x847460[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x8474d0[shape=record, label="  %20 = and i32 %11, %19"];
	Node0x847540[shape=record, label="  %21 = xor i32 %18, -1"];
	Node0x8475b0[shape=record, label="  %22 = xor i32 %12, %11"];
	Node0x847620[shape=record, label="  %23 = shl i32 %20, 1"];
	Node0x847690[shape=record, label="  %24 = mul i32 %17, 3"];
	Node0x847700[shape=record, label="  %25 = or i32 %13, %10"];
	Node0x847770[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0x8477e0[shape=record, label="  %27 = and i32 %13, %26"];
	Node0x847850[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x8478c0[shape=record, label="  %29 = shl i32 %13, 1"];
	Node0x847930[shape=record, label="  %30 = or i32 %13, %26"];
	Node0x8479a0[shape=record, label="  %31 = xor i32 %25, -1"];
	Node0x847a10[shape=record, label="  %32 = mul i32 %31, -6"];
	Node0x847a80[shape=record, label="  %33 = shl i32 %30, 2"];
	Node0x847af0[shape=record, label="  %34 = xor i32 %33, -4"];
	Node0x847b60[shape=record, label="  %35 = shl i32 %27, 1"];
	Node0x847bd0[shape=record, label="  %36 = and i32 %13, %10"];
	Node0x847c40[shape=record, label="  %37 = shl i32 %36, 2"];
	Node0x847cb0[shape=record, label="  %38 = add i32 %30, %10"];
	Node0x847d20[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x847d90[shape=record, label="  %40 = sub i32 1, %10"];
	Node0x847e00[shape=record, label="  %41 = sub i32 %40, %11"];
	Node0x847e70[shape=record, label="  %42 = add i32 %41, %19"];
	Node0x847ee0[shape=record, label="  %43 = add i32 %42, %20"];
	Node0x847f50[shape=record, label="  %44 = add i32 %43, %22"];
	Node0x847fc0[shape=record, label="  %45 = sub i32 %44, %14"];
	Node0x848030[shape=record, label="  %46 = add i32 %45, %21"];
	Node0x8480a0[shape=record, label="  %47 = sub i32 %46, %23"];
	Node0x848110[shape=record, label="  %48 = add i32 %47, %24"];
	Node0x848180[shape=record, label="  %49 = sub i32 %48, %25"];
	Node0x8481f0[shape=record, label="  %50 = add i32 %49, %28"];
	Node0x848260[shape=record, label="  %51 = sub i32 %50, %29"];
	Node0x8482d0[shape=record, label="  %52 = add i32 %51, %32"];
	Node0x848340[shape=record, label="  %53 = sub i32 %52, %35"];
	Node0x8483b0[shape=record, label="  %54 = sub i32 %53, %37"];
	Node0x848420[shape=record, label="  %55 = sub i32 %54, %34"];
	Node0x848490[shape=record, label="  %56 = add i32 %55, %39"];
	Node0x848500[shape=record, label="  %57 = icmp eq i32 %16, %56"];
	Node0x7e48b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x848590[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0x848838[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x848998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x848aa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x848bb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x848c78[shape=record, label="  ret i32 0"];
	Node0x844e68 -> Node0x844ee8;
	Node0x844ee8 -> Node0x844f78;
	Node0x844f78 -> Node0x844fd8;
	Node0x844fd8 -> Node0x845088;
	Node0x845088 -> Node0x8454b8;
	Node0x8454b8 -> Node0x845598;
	Node0x845598 -> Node0x845698;
	Node0x845698 -> Node0x845758;
	Node0x845758 -> Node0x845808;
	Node0x845808 -> Node0x8458c8;
	Node0x8458c8 -> Node0x845978;
	Node0x845978 -> Node0x83fc00;
	Node0x83fc00 -> Node0x845b78;
	Node0x845b78 -> Node0x846ae8;
	Node0x846ae8 -> Node0x847158;
	Node0x847158 -> Node0x8471b8;
	Node0x8471b8 -> Node0x847230;
	Node0x847230 -> Node0x8472a0;
	Node0x8472a0 -> Node0x847310;
	Node0x847310 -> Node0x847380;
	Node0x847380 -> Node0x8473f0;
	Node0x8473f0 -> Node0x847460;
	Node0x847460 -> Node0x8474d0;
	Node0x8474d0 -> Node0x847540;
	Node0x847540 -> Node0x8475b0;
	Node0x8475b0 -> Node0x847620;
	Node0x847620 -> Node0x847690;
	Node0x847690 -> Node0x847700;
	Node0x847700 -> Node0x847770;
	Node0x847770 -> Node0x8477e0;
	Node0x8477e0 -> Node0x847850;
	Node0x847850 -> Node0x8478c0;
	Node0x8478c0 -> Node0x847930;
	Node0x847930 -> Node0x8479a0;
	Node0x8479a0 -> Node0x847a10;
	Node0x847a10 -> Node0x847a80;
	Node0x847a80 -> Node0x847af0;
	Node0x847af0 -> Node0x847b60;
	Node0x847b60 -> Node0x847bd0;
	Node0x847bd0 -> Node0x847c40;
	Node0x847c40 -> Node0x847cb0;
	Node0x847cb0 -> Node0x847d20;
	Node0x847d20 -> Node0x847d90;
	Node0x847d90 -> Node0x847e00;
	Node0x847e00 -> Node0x847e70;
	Node0x847e70 -> Node0x847ee0;
	Node0x847ee0 -> Node0x847f50;
	Node0x847f50 -> Node0x847fc0;
	Node0x847fc0 -> Node0x848030;
	Node0x848030 -> Node0x8480a0;
	Node0x8480a0 -> Node0x848110;
	Node0x848110 -> Node0x848180;
	Node0x848180 -> Node0x8481f0;
	Node0x8481f0 -> Node0x848260;
	Node0x848260 -> Node0x8482d0;
	Node0x8482d0 -> Node0x848340;
	Node0x848340 -> Node0x8483b0;
	Node0x8483b0 -> Node0x848420;
	Node0x848420 -> Node0x848490;
	Node0x848490 -> Node0x848500;
	Node0x848500 -> Node0x7e48b8;
	Node0x7e48b8 -> Node0x848590;
	Node0x848590 -> Node0x848838;
	Node0x848838 -> Node0x848998;
	Node0x848998 -> Node0x848aa8;
	Node0x848aa8 -> Node0x848bb8;
	Node0x848bb8 -> Node0x848c78;
edge [color=red]
	Node0x844e68 -> Node0x845088;
	Node0x845088 -> Node0x8454b8;
	Node0x844ee8 -> Node0x845598;
	Node0x845598 -> Node0x845698;
	Node0x844f78 -> Node0x845758;
	Node0x845758 -> Node0x845808;
	Node0x844fd8 -> Node0x8458c8;
	Node0x8458c8 -> Node0x845978;
	Node0x844e68 -> Node0x83fc00;
	Node0x844ee8 -> Node0x83fc00;
	Node0x844f78 -> Node0x83fc00;
	Node0x844fd8 -> Node0x83fc00;
	Node0x844e68 -> Node0x845b78;
	Node0x844ee8 -> Node0x846ae8;
	Node0x844f78 -> Node0x847158;
	Node0x844fd8 -> Node0x8471b8;
	Node0x847158 -> Node0x847230;
	Node0x846ae8 -> Node0x847230;
	Node0x846ae8 -> Node0x8472a0;
	Node0x8472a0 -> Node0x847310;
	Node0x847230 -> Node0x847310;
	Node0x847158 -> Node0x847380;
	Node0x846ae8 -> Node0x847380;
	Node0x847380 -> Node0x8473f0;
	Node0x847158 -> Node0x847460;
	Node0x846ae8 -> Node0x8474d0;
	Node0x847460 -> Node0x8474d0;
	Node0x8473f0 -> Node0x847540;
	Node0x847158 -> Node0x8475b0;
	Node0x846ae8 -> Node0x8475b0;
	Node0x8474d0 -> Node0x847620;
	Node0x847380 -> Node0x847690;
	Node0x8471b8 -> Node0x847700;
	Node0x845b78 -> Node0x847700;
	Node0x845b78 -> Node0x847770;
	Node0x8471b8 -> Node0x8477e0;
	Node0x847770 -> Node0x8477e0;
	Node0x8477e0 -> Node0x847850;
	Node0x8471b8 -> Node0x8478c0;
	Node0x8471b8 -> Node0x847930;
	Node0x847770 -> Node0x847930;
	Node0x847700 -> Node0x8479a0;
	Node0x8479a0 -> Node0x847a10;
	Node0x847930 -> Node0x847a80;
	Node0x847a80 -> Node0x847af0;
	Node0x8477e0 -> Node0x847b60;
	Node0x8471b8 -> Node0x847bd0;
	Node0x845b78 -> Node0x847bd0;
	Node0x847bd0 -> Node0x847c40;
	Node0x847930 -> Node0x847cb0;
	Node0x845b78 -> Node0x847cb0;
	Node0x847cb0 -> Node0x847d20;
	Node0x845b78 -> Node0x847d90;
	Node0x847d90 -> Node0x847e00;
	Node0x846ae8 -> Node0x847e00;
	Node0x847e00 -> Node0x847e70;
	Node0x847460 -> Node0x847e70;
	Node0x847e70 -> Node0x847ee0;
	Node0x8474d0 -> Node0x847ee0;
	Node0x847ee0 -> Node0x847f50;
	Node0x8475b0 -> Node0x847f50;
	Node0x847f50 -> Node0x847fc0;
	Node0x847230 -> Node0x847fc0;
	Node0x847fc0 -> Node0x848030;
	Node0x847540 -> Node0x848030;
	Node0x848030 -> Node0x8480a0;
	Node0x847620 -> Node0x8480a0;
	Node0x8480a0 -> Node0x848110;
	Node0x847690 -> Node0x848110;
	Node0x848110 -> Node0x848180;
	Node0x847700 -> Node0x848180;
	Node0x848180 -> Node0x8481f0;
	Node0x847850 -> Node0x8481f0;
	Node0x8481f0 -> Node0x848260;
	Node0x8478c0 -> Node0x848260;
	Node0x848260 -> Node0x8482d0;
	Node0x847a10 -> Node0x8482d0;
	Node0x8482d0 -> Node0x848340;
	Node0x847b60 -> Node0x848340;
	Node0x848340 -> Node0x8483b0;
	Node0x847c40 -> Node0x8483b0;
	Node0x8483b0 -> Node0x848420;
	Node0x847af0 -> Node0x848420;
	Node0x848420 -> Node0x848490;
	Node0x847d20 -> Node0x848490;
	Node0x847310 -> Node0x848500;
	Node0x848490 -> Node0x848500;
	Node0x848500 -> Node0x7e48b8;
	Node0x7e48b8 -> Node0x848590;
	Node0x8458c8 -> Node0x848838;
	Node0x845758 -> Node0x848998;
	Node0x845598 -> Node0x848aa8;
	Node0x845088 -> Node0x848bb8;
}
