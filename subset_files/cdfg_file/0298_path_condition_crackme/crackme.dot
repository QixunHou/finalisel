digraph "DFG for'crackme' function" {
	Node0x13f59c0[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x13f6040[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x13f60b0[shape=record, label="  %7 = or i32 %6, %3"];
	Node0x13f6120[shape=record, label="  %8 = add i32 %7, %5"];
	Node0x13f61c0[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x13f6230[shape=record, label="  %10 = xor i32 %2, %1"];
	Node0x13f62d0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x13f6370[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x13f63e0[shape=record, label="  %13 = or i32 %2, %1"];
	Node0x13f6450[shape=record, label="  %14 = xor i32 %2, -1"];
	Node0x13f64c0[shape=record, label="  %15 = shl i32 %13, 1"];
	Node0x13f6530[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x13f65a0[shape=record, label="  %17 = and i32 %14, %1"];
	Node0x13f6610[shape=record, label="  %18 = and i32 %3, %0"];
	Node0x13f6680[shape=record, label="  %19 = or i32 %3, %0"];
	Node0x13f66f0[shape=record, label="  %20 = shl i32 %0, 1"];
	Node0x13f6760[shape=record, label="  %21 = xor i32 %7, -1"];
	Node0x13f6800[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0x13f6870[shape=record, label="  %23 = shl i32 %18, 1"];
	Node0x13f68e0[shape=record, label="  %24 = sub i32 1, %0"];
	Node0x13f6950[shape=record, label="  %25 = sub i32 %24, %20"];
	Node0x13f69c0[shape=record, label="  %26 = add i32 %25, %2"];
	Node0x13f6a30[shape=record, label="  %27 = sub i32 %26, %13"];
	Node0x13f6aa0[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x13f6b10[shape=record, label="  %29 = add i32 %28, %5"];
	Node0x13f6b80[shape=record, label="  %30 = sub i32 %29, %3"];
	Node0x13f6bf0[shape=record, label="  %31 = add i32 %30, %18"];
	Node0x13f6c60[shape=record, label="  %32 = add i32 %31, %19"];
	Node0x13f6ee0[shape=record, label="  %33 = sub i32 %32, %12"];
	Node0x13f6f50[shape=record, label="  %34 = add i32 %33, %16"];
	Node0x13f6fc0[shape=record, label="  %35 = add i32 %34, %22"];
	Node0x13f7030[shape=record, label="  %36 = add i32 %35, %23"];
	Node0x13f70a0[shape=record, label="  %37 = icmp eq i32 %36, %9"];
	Node0x1396268[shape=record, label="  %38 = select i1 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x13f7540[shape=record, label="  %39 = tail call i32 @puts(i8* nonnull dereferenceable(1) %38)"];
	Node0x13f7590[shape=record, label="  ret void"];
	Node0x13f59c0 -> Node0x13f6040;
	Node0x13f6040 -> Node0x13f60b0;
	Node0x13f60b0 -> Node0x13f6120;
	Node0x13f6120 -> Node0x13f61c0;
	Node0x13f61c0 -> Node0x13f6230;
	Node0x13f6230 -> Node0x13f62d0;
	Node0x13f62d0 -> Node0x13f6370;
	Node0x13f6370 -> Node0x13f63e0;
	Node0x13f63e0 -> Node0x13f6450;
	Node0x13f6450 -> Node0x13f64c0;
	Node0x13f64c0 -> Node0x13f6530;
	Node0x13f6530 -> Node0x13f65a0;
	Node0x13f65a0 -> Node0x13f6610;
	Node0x13f6610 -> Node0x13f6680;
	Node0x13f6680 -> Node0x13f66f0;
	Node0x13f66f0 -> Node0x13f6760;
	Node0x13f6760 -> Node0x13f6800;
	Node0x13f6800 -> Node0x13f6870;
	Node0x13f6870 -> Node0x13f68e0;
	Node0x13f68e0 -> Node0x13f6950;
	Node0x13f6950 -> Node0x13f69c0;
	Node0x13f69c0 -> Node0x13f6a30;
	Node0x13f6a30 -> Node0x13f6aa0;
	Node0x13f6aa0 -> Node0x13f6b10;
	Node0x13f6b10 -> Node0x13f6b80;
	Node0x13f6b80 -> Node0x13f6bf0;
	Node0x13f6bf0 -> Node0x13f6c60;
	Node0x13f6c60 -> Node0x13f6ee0;
	Node0x13f6ee0 -> Node0x13f6f50;
	Node0x13f6f50 -> Node0x13f6fc0;
	Node0x13f6fc0 -> Node0x13f7030;
	Node0x13f7030 -> Node0x13f70a0;
	Node0x13f70a0 -> Node0x1396268;
	Node0x1396268 -> Node0x13f7540;
	Node0x13f7540 -> Node0x13f7590;
edge [color=red]
	Node0x13f6040 -> Node0x13f60b0;
	Node0x13f60b0 -> Node0x13f6120;
	Node0x13f59c0 -> Node0x13f6120;
	Node0x13f6120 -> Node0x13f61c0;
	Node0x13f6230 -> Node0x13f62d0;
	Node0x13f62d0 -> Node0x13f6370;
	Node0x13f63e0 -> Node0x13f64c0;
	Node0x13f64c0 -> Node0x13f6530;
	Node0x13f6450 -> Node0x13f65a0;
	Node0x13f60b0 -> Node0x13f6760;
	Node0x13f6760 -> Node0x13f6800;
	Node0x13f6610 -> Node0x13f6870;
	Node0x13f68e0 -> Node0x13f6950;
	Node0x13f66f0 -> Node0x13f6950;
	Node0x13f6950 -> Node0x13f69c0;
	Node0x13f69c0 -> Node0x13f6a30;
	Node0x13f63e0 -> Node0x13f6a30;
	Node0x13f6a30 -> Node0x13f6aa0;
	Node0x13f65a0 -> Node0x13f6aa0;
	Node0x13f6aa0 -> Node0x13f6b10;
	Node0x13f59c0 -> Node0x13f6b10;
	Node0x13f6b10 -> Node0x13f6b80;
	Node0x13f6b80 -> Node0x13f6bf0;
	Node0x13f6610 -> Node0x13f6bf0;
	Node0x13f6bf0 -> Node0x13f6c60;
	Node0x13f6680 -> Node0x13f6c60;
	Node0x13f6c60 -> Node0x13f6ee0;
	Node0x13f6370 -> Node0x13f6ee0;
	Node0x13f6ee0 -> Node0x13f6f50;
	Node0x13f6530 -> Node0x13f6f50;
	Node0x13f6f50 -> Node0x13f6fc0;
	Node0x13f6800 -> Node0x13f6fc0;
	Node0x13f6fc0 -> Node0x13f7030;
	Node0x13f6870 -> Node0x13f7030;
	Node0x13f7030 -> Node0x13f70a0;
	Node0x13f61c0 -> Node0x13f70a0;
	Node0x13f70a0 -> Node0x1396268;
	Node0x1396268 -> Node0x13f7540;
}
