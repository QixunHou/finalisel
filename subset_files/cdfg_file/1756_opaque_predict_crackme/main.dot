digraph "DFG for'main' function" {
	Node0x1b59898[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b59918[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b599a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b59a08[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1b59e88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b59f68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1b5a068[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b5a128[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1b5a1d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b5a438[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1b5a4f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b5a658[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b5a6b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b5d7e0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1b5d9e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b5db48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b5dc58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b5dd18[shape=record, label="  ret i32 0"];
	Node0x1b59898 -> Node0x1b59918;
	Node0x1b59918 -> Node0x1b599a8;
	Node0x1b599a8 -> Node0x1b59a08;
	Node0x1b59a08 -> Node0x1b59e88;
	Node0x1b59e88 -> Node0x1b59f68;
	Node0x1b59f68 -> Node0x1b5a068;
	Node0x1b5a068 -> Node0x1b5a128;
	Node0x1b5a128 -> Node0x1b5a1d8;
	Node0x1b5a1d8 -> Node0x1b5a438;
	Node0x1b5a438 -> Node0x1b5a4f8;
	Node0x1b5a4f8 -> Node0x1b5a658;
	Node0x1b5a658 -> Node0x1b5a6b8;
	Node0x1b5a6b8 -> Node0x1b5d7e0;
	Node0x1b5d7e0 -> Node0x1b5d9e8;
	Node0x1b5d9e8 -> Node0x1b5db48;
	Node0x1b5db48 -> Node0x1b5dc58;
	Node0x1b5dc58 -> Node0x1b5dd18;
edge [color=red]
	Node0x1b59898 -> Node0x1b59a08;
	Node0x1b59a08 -> Node0x1b59e88;
	Node0x1b59918 -> Node0x1b59f68;
	Node0x1b59f68 -> Node0x1b5a068;
	Node0x1b599a8 -> Node0x1b5a128;
	Node0x1b5a128 -> Node0x1b5a1d8;
	Node0x1b59898 -> Node0x1b5a438;
	Node0x1b59918 -> Node0x1b5a438;
	Node0x1b599a8 -> Node0x1b5a438;
	Node0x1b59898 -> Node0x1b5a4f8;
	Node0x1b59918 -> Node0x1b5a658;
	Node0x1b599a8 -> Node0x1b5a6b8;
	Node0x1b5a4f8 -> Node0x1b5d7e0;
	Node0x1b5a658 -> Node0x1b5d7e0;
	Node0x1b5a6b8 -> Node0x1b5d7e0;
	Node0x1b5a128 -> Node0x1b5d9e8;
	Node0x1b59f68 -> Node0x1b5db48;
	Node0x1b59a08 -> Node0x1b5dc58;
}
