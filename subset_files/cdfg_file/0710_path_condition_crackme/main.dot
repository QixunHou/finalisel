digraph "DFG for'main' function" {
	Node0x1eb3c98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1eb3d18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1eb3da8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1eb3e08[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1eb3eb8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1eb42e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1eb43c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1eb44c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1eb4588[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1eb4638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1eb46f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1eb47a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1eaeb80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1eb49a8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1eb5918[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1eb5f88[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1eb5fe8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1eb6060[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1eb60d0[shape=record, label="  %15 = and i32 %12, %11"];
	Node0x1eb6140[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1eb61b0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1eb6220[shape=record, label="  %18 = and i32 %13, %10"];
	Node0x1eb6290[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x1eb6300[shape=record, label="  %20 = sub i32 %14, %10"];
	Node0x1eb6370[shape=record, label="  %21 = add i32 %20, %19"];
	Node0x1eb63e0[shape=record, label="  %22 = sub i32 %21, %17"];
	Node0x1eb6450[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x1eb64c0[shape=record, label="  %24 = xor i32 %12, 2147483647"];
	Node0x1eb6530[shape=record, label="  %25 = shl i32 %11, 1"];
	Node0x1eb65a0[shape=record, label="  %26 = or i32 %24, %11"];
	Node0x1eb6610[shape=record, label="  %27 = xor i32 %10, -1"];
	Node0x1eb6680[shape=record, label="  %28 = or i32 %13, %27"];
	Node0x1eb66f0[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x1eb6760[shape=record, label="  %30 = xor i32 %13, -1"];
	Node0x1eb67d0[shape=record, label="  %31 = and i32 %13, %27"];
	Node0x1eb6840[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x1eb68b0[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x1eb6920[shape=record, label="  %34 = or i32 %13, %10"];
	Node0x1eb6990[shape=record, label="  %35 = mul i32 %30, 3"];
	Node0x1eb6a00[shape=record, label="  %36 = shl i32 %34, 1"];
	Node0x1eb6a70[shape=record, label="  %37 = xor i32 %36, -2"];
	Node0x1eb6ae0[shape=record, label="  %38 = xor i32 %29, -2"];
	Node0x1eb6b50[shape=record, label="  %39 = shl i32 %18, 1"];
	Node0x1eb6bc0[shape=record, label="  %40 = add i32 %26, %23"];
	Node0x1eb6c30[shape=record, label="  %41 = shl i32 %40, 1"];
	Node0x1eb6ca0[shape=record, label="  %42 = sub i32 4, %25"];
	Node0x1eb6d10[shape=record, label="  %43 = add i32 %42, %14"];
	Node0x1eb6d80[shape=record, label="  %44 = add i32 %43, %16"];
	Node0x1eb6df0[shape=record, label="  %45 = add i32 %44, %34"];
	Node0x1eb6e60[shape=record, label="  %46 = add i32 %45, %35"];
	Node0x1eb6ed0[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x1eb6f40[shape=record, label="  %48 = sub i32 %47, %32"];
	Node0x1eb6fb0[shape=record, label="  %49 = sub i32 %48, %39"];
	Node0x1eb7020[shape=record, label="  %50 = add i32 %49, %41"];
	Node0x1eb7090[shape=record, label="  %51 = sub i32 %50, %33"];
	Node0x1eb7100[shape=record, label="  %52 = sub i32 %51, %37"];
	Node0x1eb7170[shape=record, label="  %53 = sub i32 %52, %38"];
	Node0x1eb71e0[shape=record, label="  %54 = icmp eq i32 %22, %53"];
	Node0x1e538b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1eb7270[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x1eb7518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1eb7678[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1eb7788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1eb7898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1eb7958[shape=record, label="  ret i32 0"];
	Node0x1eb3c98 -> Node0x1eb3d18;
	Node0x1eb3d18 -> Node0x1eb3da8;
	Node0x1eb3da8 -> Node0x1eb3e08;
	Node0x1eb3e08 -> Node0x1eb3eb8;
	Node0x1eb3eb8 -> Node0x1eb42e8;
	Node0x1eb42e8 -> Node0x1eb43c8;
	Node0x1eb43c8 -> Node0x1eb44c8;
	Node0x1eb44c8 -> Node0x1eb4588;
	Node0x1eb4588 -> Node0x1eb4638;
	Node0x1eb4638 -> Node0x1eb46f8;
	Node0x1eb46f8 -> Node0x1eb47a8;
	Node0x1eb47a8 -> Node0x1eaeb80;
	Node0x1eaeb80 -> Node0x1eb49a8;
	Node0x1eb49a8 -> Node0x1eb5918;
	Node0x1eb5918 -> Node0x1eb5f88;
	Node0x1eb5f88 -> Node0x1eb5fe8;
	Node0x1eb5fe8 -> Node0x1eb6060;
	Node0x1eb6060 -> Node0x1eb60d0;
	Node0x1eb60d0 -> Node0x1eb6140;
	Node0x1eb6140 -> Node0x1eb61b0;
	Node0x1eb61b0 -> Node0x1eb6220;
	Node0x1eb6220 -> Node0x1eb6290;
	Node0x1eb6290 -> Node0x1eb6300;
	Node0x1eb6300 -> Node0x1eb6370;
	Node0x1eb6370 -> Node0x1eb63e0;
	Node0x1eb63e0 -> Node0x1eb6450;
	Node0x1eb6450 -> Node0x1eb64c0;
	Node0x1eb64c0 -> Node0x1eb6530;
	Node0x1eb6530 -> Node0x1eb65a0;
	Node0x1eb65a0 -> Node0x1eb6610;
	Node0x1eb6610 -> Node0x1eb6680;
	Node0x1eb6680 -> Node0x1eb66f0;
	Node0x1eb66f0 -> Node0x1eb6760;
	Node0x1eb6760 -> Node0x1eb67d0;
	Node0x1eb67d0 -> Node0x1eb6840;
	Node0x1eb6840 -> Node0x1eb68b0;
	Node0x1eb68b0 -> Node0x1eb6920;
	Node0x1eb6920 -> Node0x1eb6990;
	Node0x1eb6990 -> Node0x1eb6a00;
	Node0x1eb6a00 -> Node0x1eb6a70;
	Node0x1eb6a70 -> Node0x1eb6ae0;
	Node0x1eb6ae0 -> Node0x1eb6b50;
	Node0x1eb6b50 -> Node0x1eb6bc0;
	Node0x1eb6bc0 -> Node0x1eb6c30;
	Node0x1eb6c30 -> Node0x1eb6ca0;
	Node0x1eb6ca0 -> Node0x1eb6d10;
	Node0x1eb6d10 -> Node0x1eb6d80;
	Node0x1eb6d80 -> Node0x1eb6df0;
	Node0x1eb6df0 -> Node0x1eb6e60;
	Node0x1eb6e60 -> Node0x1eb6ed0;
	Node0x1eb6ed0 -> Node0x1eb6f40;
	Node0x1eb6f40 -> Node0x1eb6fb0;
	Node0x1eb6fb0 -> Node0x1eb7020;
	Node0x1eb7020 -> Node0x1eb7090;
	Node0x1eb7090 -> Node0x1eb7100;
	Node0x1eb7100 -> Node0x1eb7170;
	Node0x1eb7170 -> Node0x1eb71e0;
	Node0x1eb71e0 -> Node0x1e538b8;
	Node0x1e538b8 -> Node0x1eb7270;
	Node0x1eb7270 -> Node0x1eb7518;
	Node0x1eb7518 -> Node0x1eb7678;
	Node0x1eb7678 -> Node0x1eb7788;
	Node0x1eb7788 -> Node0x1eb7898;
	Node0x1eb7898 -> Node0x1eb7958;
edge [color=red]
	Node0x1eb3c98 -> Node0x1eb3eb8;
	Node0x1eb3eb8 -> Node0x1eb42e8;
	Node0x1eb3d18 -> Node0x1eb43c8;
	Node0x1eb43c8 -> Node0x1eb44c8;
	Node0x1eb3da8 -> Node0x1eb4588;
	Node0x1eb4588 -> Node0x1eb4638;
	Node0x1eb3e08 -> Node0x1eb46f8;
	Node0x1eb46f8 -> Node0x1eb47a8;
	Node0x1eb3c98 -> Node0x1eaeb80;
	Node0x1eb3d18 -> Node0x1eaeb80;
	Node0x1eb3da8 -> Node0x1eaeb80;
	Node0x1eb3e08 -> Node0x1eaeb80;
	Node0x1eb3c98 -> Node0x1eb49a8;
	Node0x1eb3d18 -> Node0x1eb5918;
	Node0x1eb3da8 -> Node0x1eb5f88;
	Node0x1eb3e08 -> Node0x1eb5fe8;
	Node0x1eb5f88 -> Node0x1eb6060;
	Node0x1eb5918 -> Node0x1eb6060;
	Node0x1eb5f88 -> Node0x1eb60d0;
	Node0x1eb5918 -> Node0x1eb60d0;
	Node0x1eb60d0 -> Node0x1eb6140;
	Node0x1eb6140 -> Node0x1eb61b0;
	Node0x1eb5fe8 -> Node0x1eb6220;
	Node0x1eb49a8 -> Node0x1eb6220;
	Node0x1eb6220 -> Node0x1eb6290;
	Node0x1eb6060 -> Node0x1eb6300;
	Node0x1eb49a8 -> Node0x1eb6300;
	Node0x1eb6300 -> Node0x1eb6370;
	Node0x1eb6290 -> Node0x1eb6370;
	Node0x1eb6370 -> Node0x1eb63e0;
	Node0x1eb61b0 -> Node0x1eb63e0;
	Node0x1eb5f88 -> Node0x1eb6450;
	Node0x1eb5918 -> Node0x1eb6450;
	Node0x1eb5f88 -> Node0x1eb64c0;
	Node0x1eb5918 -> Node0x1eb6530;
	Node0x1eb64c0 -> Node0x1eb65a0;
	Node0x1eb5918 -> Node0x1eb65a0;
	Node0x1eb49a8 -> Node0x1eb6610;
	Node0x1eb5fe8 -> Node0x1eb6680;
	Node0x1eb6610 -> Node0x1eb6680;
	Node0x1eb6680 -> Node0x1eb66f0;
	Node0x1eb5fe8 -> Node0x1eb6760;
	Node0x1eb5fe8 -> Node0x1eb67d0;
	Node0x1eb6610 -> Node0x1eb67d0;
	Node0x1eb67d0 -> Node0x1eb6840;
	Node0x1eb6840 -> Node0x1eb68b0;
	Node0x1eb5fe8 -> Node0x1eb6920;
	Node0x1eb49a8 -> Node0x1eb6920;
	Node0x1eb6760 -> Node0x1eb6990;
	Node0x1eb6920 -> Node0x1eb6a00;
	Node0x1eb6a00 -> Node0x1eb6a70;
	Node0x1eb66f0 -> Node0x1eb6ae0;
	Node0x1eb6220 -> Node0x1eb6b50;
	Node0x1eb65a0 -> Node0x1eb6bc0;
	Node0x1eb6450 -> Node0x1eb6bc0;
	Node0x1eb6bc0 -> Node0x1eb6c30;
	Node0x1eb6530 -> Node0x1eb6ca0;
	Node0x1eb6ca0 -> Node0x1eb6d10;
	Node0x1eb6060 -> Node0x1eb6d10;
	Node0x1eb6d10 -> Node0x1eb6d80;
	Node0x1eb6140 -> Node0x1eb6d80;
	Node0x1eb6d80 -> Node0x1eb6df0;
	Node0x1eb6920 -> Node0x1eb6df0;
	Node0x1eb6df0 -> Node0x1eb6e60;
	Node0x1eb6990 -> Node0x1eb6e60;
	Node0x1eb6e60 -> Node0x1eb6ed0;
	Node0x1eb66f0 -> Node0x1eb6ed0;
	Node0x1eb6ed0 -> Node0x1eb6f40;
	Node0x1eb6840 -> Node0x1eb6f40;
	Node0x1eb6f40 -> Node0x1eb6fb0;
	Node0x1eb6b50 -> Node0x1eb6fb0;
	Node0x1eb6fb0 -> Node0x1eb7020;
	Node0x1eb6c30 -> Node0x1eb7020;
	Node0x1eb7020 -> Node0x1eb7090;
	Node0x1eb68b0 -> Node0x1eb7090;
	Node0x1eb7090 -> Node0x1eb7100;
	Node0x1eb6a70 -> Node0x1eb7100;
	Node0x1eb7100 -> Node0x1eb7170;
	Node0x1eb6ae0 -> Node0x1eb7170;
	Node0x1eb63e0 -> Node0x1eb71e0;
	Node0x1eb7170 -> Node0x1eb71e0;
	Node0x1eb71e0 -> Node0x1e538b8;
	Node0x1e538b8 -> Node0x1eb7270;
	Node0x1eb46f8 -> Node0x1eb7518;
	Node0x1eb4588 -> Node0x1eb7678;
	Node0x1eb43c8 -> Node0x1eb7788;
	Node0x1eb3eb8 -> Node0x1eb7898;
}
