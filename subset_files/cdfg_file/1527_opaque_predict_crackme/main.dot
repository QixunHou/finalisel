digraph "DFG for'main' function" {
	Node0xaa5998[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xaa5a18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xaa5aa8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xaa5b08[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xaa5bb8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xaa5fe8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xaa60c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xaa61c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xaa6288[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xaa6338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xaa63f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xaa64a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xaa0a80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xaa66a8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xaa7618[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xaa7c88[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xaa7ce8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xaa7d60[shape=record, label="  %14 = xor i32 %10, -1"];
	Node0xaa7dd0[shape=record, label="  %15 = or i32 %13, %14"];
	Node0xaa7e40[shape=record, label="  %16 = sub i32 %15, %13"];
	Node0xaa7eb0[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0xaa7f20[shape=record, label="  %18 = and i32 %11, %17"];
	Node0xaa7f90[shape=record, label="  %19 = and i32 %12, %11"];
	Node0xaa8000[shape=record, label="  %20 = shl i32 %19, 2"];
	Node0xaa8070[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0xaa80e0[shape=record, label="  %22 = xor i32 %12, %11"];
	Node0xaa8150[shape=record, label="  %23 = or i32 %12, %11"];
	Node0xaa81c0[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0xaa8230[shape=record, label="  %25 = xor i32 %23, -1"];
	Node0xaa82a0[shape=record, label="  %26 = mul i32 %25, 5"];
	Node0xaa8310[shape=record, label="  %27 = xor i32 %13, %14"];
	Node0xaa8380[shape=record, label="  %28 = shl i32 %15, 1"];
	Node0xaa83f0[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0xaa8460[shape=record, label="  %30 = and i32 %13, %14"];
	Node0xaa84d0[shape=record, label="  %31 = and i32 %13, %10"];
	Node0xaa8540[shape=record, label="  %32 = add i32 %31, %23"];
	Node0xaa85b0[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0xaa8620[shape=record, label="  %34 = mul i32 %22, 3"];
	Node0xaa8690[shape=record, label="  %35 = shl i32 %10, 1"];
	Node0xaa8700[shape=record, label="  %36 = sub i32 1, %35"];
	Node0xaa8770[shape=record, label="  %37 = add i32 %36, %12"];
	Node0xaa87e0[shape=record, label="  %38 = add i32 %37, %18"];
	Node0xaa8850[shape=record, label="  %39 = add i32 %38, %22"];
	Node0xaa88c0[shape=record, label="  %40 = sub i32 %39, %13"];
	Node0xaa8930[shape=record, label="  %41 = sub i32 %40, %24"];
	Node0xaa89a0[shape=record, label="  %42 = add i32 %41, %26"];
	Node0xaa8a10[shape=record, label="  %43 = add i32 %42, %27"];
	Node0xaa8a80[shape=record, label="  %44 = add i32 %43, %30"];
	Node0xaa8af0[shape=record, label="  %45 = add i32 %44, %34"];
	Node0xaa8b60[shape=record, label="  %46 = sub i32 %45, %21"];
	Node0xaa8bd0[shape=record, label="  %47 = add i32 %46, %29"];
	Node0xaa8c40[shape=record, label="  %48 = add i32 %47, %33"];
	Node0xaa8cb0[shape=record, label="  %49 = icmp eq i32 %16, %48"];
	Node0xa458b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xaa8d40[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0xaa8fe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xaa9148[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xaa9258[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xaa9368[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xaa9428[shape=record, label="  ret i32 0"];
	Node0xaa5998 -> Node0xaa5a18;
	Node0xaa5a18 -> Node0xaa5aa8;
	Node0xaa5aa8 -> Node0xaa5b08;
	Node0xaa5b08 -> Node0xaa5bb8;
	Node0xaa5bb8 -> Node0xaa5fe8;
	Node0xaa5fe8 -> Node0xaa60c8;
	Node0xaa60c8 -> Node0xaa61c8;
	Node0xaa61c8 -> Node0xaa6288;
	Node0xaa6288 -> Node0xaa6338;
	Node0xaa6338 -> Node0xaa63f8;
	Node0xaa63f8 -> Node0xaa64a8;
	Node0xaa64a8 -> Node0xaa0a80;
	Node0xaa0a80 -> Node0xaa66a8;
	Node0xaa66a8 -> Node0xaa7618;
	Node0xaa7618 -> Node0xaa7c88;
	Node0xaa7c88 -> Node0xaa7ce8;
	Node0xaa7ce8 -> Node0xaa7d60;
	Node0xaa7d60 -> Node0xaa7dd0;
	Node0xaa7dd0 -> Node0xaa7e40;
	Node0xaa7e40 -> Node0xaa7eb0;
	Node0xaa7eb0 -> Node0xaa7f20;
	Node0xaa7f20 -> Node0xaa7f90;
	Node0xaa7f90 -> Node0xaa8000;
	Node0xaa8000 -> Node0xaa8070;
	Node0xaa8070 -> Node0xaa80e0;
	Node0xaa80e0 -> Node0xaa8150;
	Node0xaa8150 -> Node0xaa81c0;
	Node0xaa81c0 -> Node0xaa8230;
	Node0xaa8230 -> Node0xaa82a0;
	Node0xaa82a0 -> Node0xaa8310;
	Node0xaa8310 -> Node0xaa8380;
	Node0xaa8380 -> Node0xaa83f0;
	Node0xaa83f0 -> Node0xaa8460;
	Node0xaa8460 -> Node0xaa84d0;
	Node0xaa84d0 -> Node0xaa8540;
	Node0xaa8540 -> Node0xaa85b0;
	Node0xaa85b0 -> Node0xaa8620;
	Node0xaa8620 -> Node0xaa8690;
	Node0xaa8690 -> Node0xaa8700;
	Node0xaa8700 -> Node0xaa8770;
	Node0xaa8770 -> Node0xaa87e0;
	Node0xaa87e0 -> Node0xaa8850;
	Node0xaa8850 -> Node0xaa88c0;
	Node0xaa88c0 -> Node0xaa8930;
	Node0xaa8930 -> Node0xaa89a0;
	Node0xaa89a0 -> Node0xaa8a10;
	Node0xaa8a10 -> Node0xaa8a80;
	Node0xaa8a80 -> Node0xaa8af0;
	Node0xaa8af0 -> Node0xaa8b60;
	Node0xaa8b60 -> Node0xaa8bd0;
	Node0xaa8bd0 -> Node0xaa8c40;
	Node0xaa8c40 -> Node0xaa8cb0;
	Node0xaa8cb0 -> Node0xa458b8;
	Node0xa458b8 -> Node0xaa8d40;
	Node0xaa8d40 -> Node0xaa8fe8;
	Node0xaa8fe8 -> Node0xaa9148;
	Node0xaa9148 -> Node0xaa9258;
	Node0xaa9258 -> Node0xaa9368;
	Node0xaa9368 -> Node0xaa9428;
edge [color=red]
	Node0xaa5998 -> Node0xaa5bb8;
	Node0xaa5bb8 -> Node0xaa5fe8;
	Node0xaa5a18 -> Node0xaa60c8;
	Node0xaa60c8 -> Node0xaa61c8;
	Node0xaa5aa8 -> Node0xaa6288;
	Node0xaa6288 -> Node0xaa6338;
	Node0xaa5b08 -> Node0xaa63f8;
	Node0xaa63f8 -> Node0xaa64a8;
	Node0xaa5998 -> Node0xaa0a80;
	Node0xaa5a18 -> Node0xaa0a80;
	Node0xaa5aa8 -> Node0xaa0a80;
	Node0xaa5b08 -> Node0xaa0a80;
	Node0xaa5998 -> Node0xaa66a8;
	Node0xaa5a18 -> Node0xaa7618;
	Node0xaa5aa8 -> Node0xaa7c88;
	Node0xaa5b08 -> Node0xaa7ce8;
	Node0xaa66a8 -> Node0xaa7d60;
	Node0xaa7ce8 -> Node0xaa7dd0;
	Node0xaa7d60 -> Node0xaa7dd0;
	Node0xaa7dd0 -> Node0xaa7e40;
	Node0xaa7ce8 -> Node0xaa7e40;
	Node0xaa7c88 -> Node0xaa7eb0;
	Node0xaa7618 -> Node0xaa7f20;
	Node0xaa7eb0 -> Node0xaa7f20;
	Node0xaa7c88 -> Node0xaa7f90;
	Node0xaa7618 -> Node0xaa7f90;
	Node0xaa7f90 -> Node0xaa8000;
	Node0xaa8000 -> Node0xaa8070;
	Node0xaa7c88 -> Node0xaa80e0;
	Node0xaa7618 -> Node0xaa80e0;
	Node0xaa7c88 -> Node0xaa8150;
	Node0xaa7618 -> Node0xaa8150;
	Node0xaa8150 -> Node0xaa81c0;
	Node0xaa8150 -> Node0xaa8230;
	Node0xaa8230 -> Node0xaa82a0;
	Node0xaa7ce8 -> Node0xaa8310;
	Node0xaa7d60 -> Node0xaa8310;
	Node0xaa7dd0 -> Node0xaa8380;
	Node0xaa8380 -> Node0xaa83f0;
	Node0xaa7ce8 -> Node0xaa8460;
	Node0xaa7d60 -> Node0xaa8460;
	Node0xaa7ce8 -> Node0xaa84d0;
	Node0xaa66a8 -> Node0xaa84d0;
	Node0xaa84d0 -> Node0xaa8540;
	Node0xaa8150 -> Node0xaa8540;
	Node0xaa8540 -> Node0xaa85b0;
	Node0xaa80e0 -> Node0xaa8620;
	Node0xaa66a8 -> Node0xaa8690;
	Node0xaa8690 -> Node0xaa8700;
	Node0xaa8700 -> Node0xaa8770;
	Node0xaa7c88 -> Node0xaa8770;
	Node0xaa8770 -> Node0xaa87e0;
	Node0xaa7f20 -> Node0xaa87e0;
	Node0xaa87e0 -> Node0xaa8850;
	Node0xaa80e0 -> Node0xaa8850;
	Node0xaa8850 -> Node0xaa88c0;
	Node0xaa7ce8 -> Node0xaa88c0;
	Node0xaa88c0 -> Node0xaa8930;
	Node0xaa81c0 -> Node0xaa8930;
	Node0xaa8930 -> Node0xaa89a0;
	Node0xaa82a0 -> Node0xaa89a0;
	Node0xaa89a0 -> Node0xaa8a10;
	Node0xaa8310 -> Node0xaa8a10;
	Node0xaa8a10 -> Node0xaa8a80;
	Node0xaa8460 -> Node0xaa8a80;
	Node0xaa8a80 -> Node0xaa8af0;
	Node0xaa8620 -> Node0xaa8af0;
	Node0xaa8af0 -> Node0xaa8b60;
	Node0xaa8070 -> Node0xaa8b60;
	Node0xaa8b60 -> Node0xaa8bd0;
	Node0xaa83f0 -> Node0xaa8bd0;
	Node0xaa8bd0 -> Node0xaa8c40;
	Node0xaa85b0 -> Node0xaa8c40;
	Node0xaa7e40 -> Node0xaa8cb0;
	Node0xaa8c40 -> Node0xaa8cb0;
	Node0xaa8cb0 -> Node0xa458b8;
	Node0xa458b8 -> Node0xaa8d40;
	Node0xaa63f8 -> Node0xaa8fe8;
	Node0xaa6288 -> Node0xaa9148;
	Node0xaa60c8 -> Node0xaa9258;
	Node0xaa5bb8 -> Node0xaa9368;
}
