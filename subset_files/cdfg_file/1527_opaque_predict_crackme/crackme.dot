digraph "DFG for'crackme' function" {
	Node0xaa4060[shape=record, label="  %5 = xor i32 %0, -1"];
	Node0xaa40d0[shape=record, label="  %6 = or i32 %5, %3"];
	Node0xaa4140[shape=record, label="  %7 = sub i32 %6, %3"];
	Node0xaa41b0[shape=record, label="  %8 = xor i32 %2, -1"];
	Node0xaa4220[shape=record, label="  %9 = and i32 %8, %1"];
	Node0xaa4290[shape=record, label="  %10 = and i32 %2, %1"];
	Node0xaa4330[shape=record, label="  %11 = shl i32 %10, 2"];
	Node0xaa43d0[shape=record, label="  %12 = xor i32 %11, -4"];
	Node0xaa4470[shape=record, label="  %13 = add i32 %2, 1"];
	Node0xaa44e0[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0xaa4550[shape=record, label="  %15 = or i32 %2, %1"];
	Node0xaa45c0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0xaa4630[shape=record, label="  %17 = xor i32 %15, -1"];
	Node0xaa46d0[shape=record, label="  %18 = mul i32 %17, 5"];
	Node0xaa4740[shape=record, label="  %19 = xor i32 %5, %3"];
	Node0xaa47b0[shape=record, label="  %20 = shl i32 %6, 1"];
	Node0xaa4850[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0xaa48c0[shape=record, label="  %22 = and i32 %5, %3"];
	Node0xaa4930[shape=record, label="  %23 = and i32 %3, %0"];
	Node0xaa49a0[shape=record, label="  %24 = add i32 %15, %23"];
	Node0xaa4a10[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0xaa4ab0[shape=record, label="  %26 = mul i32 %14, 3"];
	Node0xaa4b20[shape=record, label="  %27 = shl i32 %0, 1"];
	Node0xaa4b90[shape=record, label="  %28 = sub i32 %13, %27"];
	Node0xaa4c00[shape=record, label="  %29 = add i32 %28, %9"];
	Node0xaa4c70[shape=record, label="  %30 = add i32 %29, %14"];
	Node0xaa4ce0[shape=record, label="  %31 = sub i32 %30, %3"];
	Node0xaa4d50[shape=record, label="  %32 = sub i32 %31, %16"];
	Node0xaa4fd0[shape=record, label="  %33 = add i32 %32, %18"];
	Node0xaa5040[shape=record, label="  %34 = add i32 %33, %19"];
	Node0xaa50b0[shape=record, label="  %35 = add i32 %34, %22"];
	Node0xaa5120[shape=record, label="  %36 = sub i32 %35, %12"];
	Node0xaa5190[shape=record, label="  %37 = add i32 %36, %26"];
	Node0xaa5200[shape=record, label="  %38 = add i32 %37, %21"];
	Node0xaa5270[shape=record, label="  %39 = add i32 %38, %25"];
	Node0xaa52e0[shape=record, label="  %40 = icmp eq i32 %7, %39"];
	Node0xa44268[shape=record, label="  %41 = select i1 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xaa5780[shape=record, label="  %42 = tail call i32 @puts(i8* nonnull dereferenceable(1) %41)"];
	Node0xaa57d0[shape=record, label="  ret void"];
	Node0xaa4060 -> Node0xaa40d0;
	Node0xaa40d0 -> Node0xaa4140;
	Node0xaa4140 -> Node0xaa41b0;
	Node0xaa41b0 -> Node0xaa4220;
	Node0xaa4220 -> Node0xaa4290;
	Node0xaa4290 -> Node0xaa4330;
	Node0xaa4330 -> Node0xaa43d0;
	Node0xaa43d0 -> Node0xaa4470;
	Node0xaa4470 -> Node0xaa44e0;
	Node0xaa44e0 -> Node0xaa4550;
	Node0xaa4550 -> Node0xaa45c0;
	Node0xaa45c0 -> Node0xaa4630;
	Node0xaa4630 -> Node0xaa46d0;
	Node0xaa46d0 -> Node0xaa4740;
	Node0xaa4740 -> Node0xaa47b0;
	Node0xaa47b0 -> Node0xaa4850;
	Node0xaa4850 -> Node0xaa48c0;
	Node0xaa48c0 -> Node0xaa4930;
	Node0xaa4930 -> Node0xaa49a0;
	Node0xaa49a0 -> Node0xaa4a10;
	Node0xaa4a10 -> Node0xaa4ab0;
	Node0xaa4ab0 -> Node0xaa4b20;
	Node0xaa4b20 -> Node0xaa4b90;
	Node0xaa4b90 -> Node0xaa4c00;
	Node0xaa4c00 -> Node0xaa4c70;
	Node0xaa4c70 -> Node0xaa4ce0;
	Node0xaa4ce0 -> Node0xaa4d50;
	Node0xaa4d50 -> Node0xaa4fd0;
	Node0xaa4fd0 -> Node0xaa5040;
	Node0xaa5040 -> Node0xaa50b0;
	Node0xaa50b0 -> Node0xaa5120;
	Node0xaa5120 -> Node0xaa5190;
	Node0xaa5190 -> Node0xaa5200;
	Node0xaa5200 -> Node0xaa5270;
	Node0xaa5270 -> Node0xaa52e0;
	Node0xaa52e0 -> Node0xa44268;
	Node0xa44268 -> Node0xaa5780;
	Node0xaa5780 -> Node0xaa57d0;
edge [color=red]
	Node0xaa4060 -> Node0xaa40d0;
	Node0xaa40d0 -> Node0xaa4140;
	Node0xaa41b0 -> Node0xaa4220;
	Node0xaa4290 -> Node0xaa4330;
	Node0xaa4330 -> Node0xaa43d0;
	Node0xaa4550 -> Node0xaa45c0;
	Node0xaa4550 -> Node0xaa4630;
	Node0xaa4630 -> Node0xaa46d0;
	Node0xaa4060 -> Node0xaa4740;
	Node0xaa40d0 -> Node0xaa47b0;
	Node0xaa47b0 -> Node0xaa4850;
	Node0xaa4060 -> Node0xaa48c0;
	Node0xaa4550 -> Node0xaa49a0;
	Node0xaa4930 -> Node0xaa49a0;
	Node0xaa49a0 -> Node0xaa4a10;
	Node0xaa44e0 -> Node0xaa4ab0;
	Node0xaa4470 -> Node0xaa4b90;
	Node0xaa4b20 -> Node0xaa4b90;
	Node0xaa4b90 -> Node0xaa4c00;
	Node0xaa4220 -> Node0xaa4c00;
	Node0xaa4c00 -> Node0xaa4c70;
	Node0xaa44e0 -> Node0xaa4c70;
	Node0xaa4c70 -> Node0xaa4ce0;
	Node0xaa4ce0 -> Node0xaa4d50;
	Node0xaa45c0 -> Node0xaa4d50;
	Node0xaa4d50 -> Node0xaa4fd0;
	Node0xaa46d0 -> Node0xaa4fd0;
	Node0xaa4fd0 -> Node0xaa5040;
	Node0xaa4740 -> Node0xaa5040;
	Node0xaa5040 -> Node0xaa50b0;
	Node0xaa48c0 -> Node0xaa50b0;
	Node0xaa50b0 -> Node0xaa5120;
	Node0xaa43d0 -> Node0xaa5120;
	Node0xaa5120 -> Node0xaa5190;
	Node0xaa4ab0 -> Node0xaa5190;
	Node0xaa5190 -> Node0xaa5200;
	Node0xaa4850 -> Node0xaa5200;
	Node0xaa5200 -> Node0xaa5270;
	Node0xaa4a10 -> Node0xaa5270;
	Node0xaa4140 -> Node0xaa52e0;
	Node0xaa5270 -> Node0xaa52e0;
	Node0xaa52e0 -> Node0xa44268;
	Node0xa44268 -> Node0xaa5780;
}
