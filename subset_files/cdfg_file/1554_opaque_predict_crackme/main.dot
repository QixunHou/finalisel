digraph "DFG for'main' function" {
	Node0x86a838[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x86a8b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x86a948[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x86a9a8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x86aa58[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x86ae88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x86af68[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x86b068[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x86b128[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x86b1d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x86b298[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x86b348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x865a30[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x86b548[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x86c4b8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x86cb28[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x86cb88[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x86cc00[shape=record, label="  %14 = xor i32 %13, %10"];
	Node0x86cc70[shape=record, label="  %15 = add i32 %11, 1"];
	Node0x86cce0[shape=record, label="  %16 = add i32 %15, %14"];
	Node0x86cd50[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0x86cdc0[shape=record, label="  %18 = and i32 %11, %17"];
	Node0x86ce30[shape=record, label="  %19 = or i32 %11, %17"];
	Node0x86cea0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x86cf10[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x86cf80[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x86cff0[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x86d060[shape=record, label="  %24 = shl i32 %23, 2"];
	Node0x86d0d0[shape=record, label="  %25 = shl i32 %14, 1"];
	Node0x86d140[shape=record, label="  %26 = or i32 %13, %10"];
	Node0x86d1b0[shape=record, label="  %27 = xor i32 %10, 2147483647"];
	Node0x86d220[shape=record, label="  %28 = xor i32 %13, -1"];
	Node0x86d290[shape=record, label="  %29 = and i32 %10, %28"];
	Node0x86d300[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x86d370[shape=record, label="  %31 = add i32 %18, %22"];
	Node0x86d3e0[shape=record, label="  %32 = add i32 %31, %29"];
	Node0x86d450[shape=record, label="  %33 = mul i32 %32, 3"];
	Node0x86d4c0[shape=record, label="  %34 = add i32 %13, %27"];
	Node0x86d530[shape=record, label="  %35 = add i32 %34, %26"];
	Node0x86d5a0[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x86d610[shape=record, label="  %37 = sub i32 4, %11"];
	Node0x86d680[shape=record, label="  %38 = add i32 %37, %18"];
	Node0x86d6f0[shape=record, label="  %39 = add i32 %38, %21"];
	Node0x86d760[shape=record, label="  %40 = sub i32 %39, %13"];
	Node0x86d7d0[shape=record, label="  %41 = sub i32 %40, %20"];
	Node0x86d840[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x86d8b0[shape=record, label="  %43 = sub i32 %42, %30"];
	Node0x86d920[shape=record, label="  %44 = sub i32 %43, %25"];
	Node0x86d990[shape=record, label="  %45 = add i32 %44, %33"];
	Node0x86da00[shape=record, label="  %46 = add i32 %45, %36"];
	Node0x86da70[shape=record, label="  %47 = icmp eq i32 %16, %46"];
	Node0x80a8b8[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x86db00[shape=record, label="  %49 = call i32 @puts(i8* nonnull dereferenceable(1) %48) #5"];
	Node0x86dda8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x86df08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x86e018[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x86e128[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x86e1e8[shape=record, label="  ret i32 0"];
	Node0x86a838 -> Node0x86a8b8;
	Node0x86a8b8 -> Node0x86a948;
	Node0x86a948 -> Node0x86a9a8;
	Node0x86a9a8 -> Node0x86aa58;
	Node0x86aa58 -> Node0x86ae88;
	Node0x86ae88 -> Node0x86af68;
	Node0x86af68 -> Node0x86b068;
	Node0x86b068 -> Node0x86b128;
	Node0x86b128 -> Node0x86b1d8;
	Node0x86b1d8 -> Node0x86b298;
	Node0x86b298 -> Node0x86b348;
	Node0x86b348 -> Node0x865a30;
	Node0x865a30 -> Node0x86b548;
	Node0x86b548 -> Node0x86c4b8;
	Node0x86c4b8 -> Node0x86cb28;
	Node0x86cb28 -> Node0x86cb88;
	Node0x86cb88 -> Node0x86cc00;
	Node0x86cc00 -> Node0x86cc70;
	Node0x86cc70 -> Node0x86cce0;
	Node0x86cce0 -> Node0x86cd50;
	Node0x86cd50 -> Node0x86cdc0;
	Node0x86cdc0 -> Node0x86ce30;
	Node0x86ce30 -> Node0x86cea0;
	Node0x86cea0 -> Node0x86cf10;
	Node0x86cf10 -> Node0x86cf80;
	Node0x86cf80 -> Node0x86cff0;
	Node0x86cff0 -> Node0x86d060;
	Node0x86d060 -> Node0x86d0d0;
	Node0x86d0d0 -> Node0x86d140;
	Node0x86d140 -> Node0x86d1b0;
	Node0x86d1b0 -> Node0x86d220;
	Node0x86d220 -> Node0x86d290;
	Node0x86d290 -> Node0x86d300;
	Node0x86d300 -> Node0x86d370;
	Node0x86d370 -> Node0x86d3e0;
	Node0x86d3e0 -> Node0x86d450;
	Node0x86d450 -> Node0x86d4c0;
	Node0x86d4c0 -> Node0x86d530;
	Node0x86d530 -> Node0x86d5a0;
	Node0x86d5a0 -> Node0x86d610;
	Node0x86d610 -> Node0x86d680;
	Node0x86d680 -> Node0x86d6f0;
	Node0x86d6f0 -> Node0x86d760;
	Node0x86d760 -> Node0x86d7d0;
	Node0x86d7d0 -> Node0x86d840;
	Node0x86d840 -> Node0x86d8b0;
	Node0x86d8b0 -> Node0x86d920;
	Node0x86d920 -> Node0x86d990;
	Node0x86d990 -> Node0x86da00;
	Node0x86da00 -> Node0x86da70;
	Node0x86da70 -> Node0x80a8b8;
	Node0x80a8b8 -> Node0x86db00;
	Node0x86db00 -> Node0x86dda8;
	Node0x86dda8 -> Node0x86df08;
	Node0x86df08 -> Node0x86e018;
	Node0x86e018 -> Node0x86e128;
	Node0x86e128 -> Node0x86e1e8;
edge [color=red]
	Node0x86a838 -> Node0x86aa58;
	Node0x86aa58 -> Node0x86ae88;
	Node0x86a8b8 -> Node0x86af68;
	Node0x86af68 -> Node0x86b068;
	Node0x86a948 -> Node0x86b128;
	Node0x86b128 -> Node0x86b1d8;
	Node0x86a9a8 -> Node0x86b298;
	Node0x86b298 -> Node0x86b348;
	Node0x86a838 -> Node0x865a30;
	Node0x86a8b8 -> Node0x865a30;
	Node0x86a948 -> Node0x865a30;
	Node0x86a9a8 -> Node0x865a30;
	Node0x86a838 -> Node0x86b548;
	Node0x86a8b8 -> Node0x86c4b8;
	Node0x86a948 -> Node0x86cb28;
	Node0x86a9a8 -> Node0x86cb88;
	Node0x86cb88 -> Node0x86cc00;
	Node0x86b548 -> Node0x86cc00;
	Node0x86c4b8 -> Node0x86cc70;
	Node0x86cc70 -> Node0x86cce0;
	Node0x86cc00 -> Node0x86cce0;
	Node0x86cb28 -> Node0x86cd50;
	Node0x86c4b8 -> Node0x86cdc0;
	Node0x86cd50 -> Node0x86cdc0;
	Node0x86c4b8 -> Node0x86ce30;
	Node0x86cd50 -> Node0x86ce30;
	Node0x86ce30 -> Node0x86cea0;
	Node0x86cb28 -> Node0x86cf10;
	Node0x86c4b8 -> Node0x86cf10;
	Node0x86cf10 -> Node0x86cf80;
	Node0x86cb28 -> Node0x86cff0;
	Node0x86c4b8 -> Node0x86cff0;
	Node0x86cff0 -> Node0x86d060;
	Node0x86cc00 -> Node0x86d0d0;
	Node0x86cb88 -> Node0x86d140;
	Node0x86b548 -> Node0x86d140;
	Node0x86b548 -> Node0x86d1b0;
	Node0x86cb88 -> Node0x86d220;
	Node0x86b548 -> Node0x86d290;
	Node0x86d220 -> Node0x86d290;
	Node0x86cb88 -> Node0x86d300;
	Node0x86b548 -> Node0x86d300;
	Node0x86cdc0 -> Node0x86d370;
	Node0x86cf80 -> Node0x86d370;
	Node0x86d370 -> Node0x86d3e0;
	Node0x86d290 -> Node0x86d3e0;
	Node0x86d3e0 -> Node0x86d450;
	Node0x86cb88 -> Node0x86d4c0;
	Node0x86d1b0 -> Node0x86d4c0;
	Node0x86d4c0 -> Node0x86d530;
	Node0x86d140 -> Node0x86d530;
	Node0x86d530 -> Node0x86d5a0;
	Node0x86c4b8 -> Node0x86d610;
	Node0x86d610 -> Node0x86d680;
	Node0x86cdc0 -> Node0x86d680;
	Node0x86d680 -> Node0x86d6f0;
	Node0x86cf10 -> Node0x86d6f0;
	Node0x86d6f0 -> Node0x86d760;
	Node0x86cb88 -> Node0x86d760;
	Node0x86d760 -> Node0x86d7d0;
	Node0x86cea0 -> Node0x86d7d0;
	Node0x86d7d0 -> Node0x86d840;
	Node0x86d060 -> Node0x86d840;
	Node0x86d840 -> Node0x86d8b0;
	Node0x86d300 -> Node0x86d8b0;
	Node0x86d8b0 -> Node0x86d920;
	Node0x86d0d0 -> Node0x86d920;
	Node0x86d920 -> Node0x86d990;
	Node0x86d450 -> Node0x86d990;
	Node0x86d990 -> Node0x86da00;
	Node0x86d5a0 -> Node0x86da00;
	Node0x86cce0 -> Node0x86da70;
	Node0x86da00 -> Node0x86da70;
	Node0x86da70 -> Node0x80a8b8;
	Node0x80a8b8 -> Node0x86db00;
	Node0x86b298 -> Node0x86dda8;
	Node0x86b128 -> Node0x86df08;
	Node0x86af68 -> Node0x86e018;
	Node0x86aa58 -> Node0x86e128;
}
