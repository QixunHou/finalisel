digraph "DFG for'crackme' function" {
	Node0x868a00[shape=record, label="  %5 = xor i32 %3, %0"];
	Node0x869080[shape=record, label="  %6 = add i32 %1, 1"];
	Node0x8690f0[shape=record, label="  %7 = add i32 %6, %5"];
	Node0x869190[shape=record, label="  %8 = xor i32 %2, -1"];
	Node0x869200[shape=record, label="  %9 = and i32 %8, %1"];
	Node0x869270[shape=record, label="  %10 = or i32 %8, %1"];
	Node0x8692e0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x869350[shape=record, label="  %12 = or i32 %2, %1"];
	Node0x8693c0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x869430[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x8694d0[shape=record, label="  %15 = shl i32 %14, 2"];
	Node0x869540[shape=record, label="  %16 = shl i32 %5, 1"];
	Node0x8695b0[shape=record, label="  %17 = or i32 %3, %0"];
	Node0x869650[shape=record, label="  %18 = xor i32 %0, 2147483647"];
	Node0x8696c0[shape=record, label="  %19 = xor i32 %3, -1"];
	Node0x869730[shape=record, label="  %20 = and i32 %19, %0"];
	Node0x8697a0[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x869810[shape=record, label="  %22 = add i32 %9, %13"];
	Node0x869880[shape=record, label="  %23 = add i32 %22, %20"];
	Node0x869920[shape=record, label="  %24 = mul i32 %23, 3"];
	Node0x869990[shape=record, label="  %25 = add i32 %18, %3"];
	Node0x869a00[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x869a70[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x869b10[shape=record, label="  %28 = sub i32 4, %1"];
	Node0x869b80[shape=record, label="  %29 = add i32 %28, %9"];
	Node0x869bf0[shape=record, label="  %30 = add i32 %29, %12"];
	Node0x869c60[shape=record, label="  %31 = sub i32 %30, %3"];
	Node0x869cd0[shape=record, label="  %32 = sub i32 %31, %11"];
	Node0x869f50[shape=record, label="  %33 = add i32 %32, %15"];
	Node0x869fc0[shape=record, label="  %34 = sub i32 %33, %21"];
	Node0x86a030[shape=record, label="  %35 = sub i32 %34, %16"];
	Node0x86a0a0[shape=record, label="  %36 = add i32 %35, %24"];
	Node0x86a110[shape=record, label="  %37 = add i32 %36, %27"];
	Node0x86a180[shape=record, label="  %38 = icmp eq i32 %7, %37"];
	Node0x809268[shape=record, label="  %39 = select i1 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x86a620[shape=record, label="  %40 = tail call i32 @puts(i8* nonnull dereferenceable(1) %39)"];
	Node0x86a670[shape=record, label="  ret void"];
	Node0x868a00 -> Node0x869080;
	Node0x869080 -> Node0x8690f0;
	Node0x8690f0 -> Node0x869190;
	Node0x869190 -> Node0x869200;
	Node0x869200 -> Node0x869270;
	Node0x869270 -> Node0x8692e0;
	Node0x8692e0 -> Node0x869350;
	Node0x869350 -> Node0x8693c0;
	Node0x8693c0 -> Node0x869430;
	Node0x869430 -> Node0x8694d0;
	Node0x8694d0 -> Node0x869540;
	Node0x869540 -> Node0x8695b0;
	Node0x8695b0 -> Node0x869650;
	Node0x869650 -> Node0x8696c0;
	Node0x8696c0 -> Node0x869730;
	Node0x869730 -> Node0x8697a0;
	Node0x8697a0 -> Node0x869810;
	Node0x869810 -> Node0x869880;
	Node0x869880 -> Node0x869920;
	Node0x869920 -> Node0x869990;
	Node0x869990 -> Node0x869a00;
	Node0x869a00 -> Node0x869a70;
	Node0x869a70 -> Node0x869b10;
	Node0x869b10 -> Node0x869b80;
	Node0x869b80 -> Node0x869bf0;
	Node0x869bf0 -> Node0x869c60;
	Node0x869c60 -> Node0x869cd0;
	Node0x869cd0 -> Node0x869f50;
	Node0x869f50 -> Node0x869fc0;
	Node0x869fc0 -> Node0x86a030;
	Node0x86a030 -> Node0x86a0a0;
	Node0x86a0a0 -> Node0x86a110;
	Node0x86a110 -> Node0x86a180;
	Node0x86a180 -> Node0x809268;
	Node0x809268 -> Node0x86a620;
	Node0x86a620 -> Node0x86a670;
edge [color=red]
	Node0x869080 -> Node0x8690f0;
	Node0x868a00 -> Node0x8690f0;
	Node0x869190 -> Node0x869200;
	Node0x869190 -> Node0x869270;
	Node0x869270 -> Node0x8692e0;
	Node0x869350 -> Node0x8693c0;
	Node0x869430 -> Node0x8694d0;
	Node0x868a00 -> Node0x869540;
	Node0x8696c0 -> Node0x869730;
	Node0x869200 -> Node0x869810;
	Node0x8693c0 -> Node0x869810;
	Node0x869810 -> Node0x869880;
	Node0x869730 -> Node0x869880;
	Node0x869880 -> Node0x869920;
	Node0x869650 -> Node0x869990;
	Node0x869990 -> Node0x869a00;
	Node0x8695b0 -> Node0x869a00;
	Node0x869a00 -> Node0x869a70;
	Node0x869b10 -> Node0x869b80;
	Node0x869200 -> Node0x869b80;
	Node0x869b80 -> Node0x869bf0;
	Node0x869350 -> Node0x869bf0;
	Node0x869bf0 -> Node0x869c60;
	Node0x869c60 -> Node0x869cd0;
	Node0x8692e0 -> Node0x869cd0;
	Node0x869cd0 -> Node0x869f50;
	Node0x8694d0 -> Node0x869f50;
	Node0x869f50 -> Node0x869fc0;
	Node0x8697a0 -> Node0x869fc0;
	Node0x869fc0 -> Node0x86a030;
	Node0x869540 -> Node0x86a030;
	Node0x86a030 -> Node0x86a0a0;
	Node0x869920 -> Node0x86a0a0;
	Node0x86a0a0 -> Node0x86a110;
	Node0x869a70 -> Node0x86a110;
	Node0x8690f0 -> Node0x86a180;
	Node0x86a110 -> Node0x86a180;
	Node0x86a180 -> Node0x809268;
	Node0x809268 -> Node0x86a620;
}
