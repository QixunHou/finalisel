digraph "DFG for'main' function" {
	Node0x1deb818[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1deb898[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1deb928[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1deb988[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1debe08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1debee8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1debfe8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1dec0a8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1dec158[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1dec3b8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1dec478[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1dec5d8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1dec638[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1def290[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1def498[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1def5f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1def708[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1def7c8[shape=record, label="  ret i32 0"];
	Node0x1deb818 -> Node0x1deb898;
	Node0x1deb898 -> Node0x1deb928;
	Node0x1deb928 -> Node0x1deb988;
	Node0x1deb988 -> Node0x1debe08;
	Node0x1debe08 -> Node0x1debee8;
	Node0x1debee8 -> Node0x1debfe8;
	Node0x1debfe8 -> Node0x1dec0a8;
	Node0x1dec0a8 -> Node0x1dec158;
	Node0x1dec158 -> Node0x1dec3b8;
	Node0x1dec3b8 -> Node0x1dec478;
	Node0x1dec478 -> Node0x1dec5d8;
	Node0x1dec5d8 -> Node0x1dec638;
	Node0x1dec638 -> Node0x1def290;
	Node0x1def290 -> Node0x1def498;
	Node0x1def498 -> Node0x1def5f8;
	Node0x1def5f8 -> Node0x1def708;
	Node0x1def708 -> Node0x1def7c8;
edge [color=red]
	Node0x1deb818 -> Node0x1deb988;
	Node0x1deb988 -> Node0x1debe08;
	Node0x1deb898 -> Node0x1debee8;
	Node0x1debee8 -> Node0x1debfe8;
	Node0x1deb928 -> Node0x1dec0a8;
	Node0x1dec0a8 -> Node0x1dec158;
	Node0x1deb818 -> Node0x1dec3b8;
	Node0x1deb898 -> Node0x1dec3b8;
	Node0x1deb928 -> Node0x1dec3b8;
	Node0x1deb818 -> Node0x1dec478;
	Node0x1deb898 -> Node0x1dec5d8;
	Node0x1deb928 -> Node0x1dec638;
	Node0x1dec478 -> Node0x1def290;
	Node0x1dec5d8 -> Node0x1def290;
	Node0x1dec638 -> Node0x1def290;
	Node0x1dec0a8 -> Node0x1def498;
	Node0x1debee8 -> Node0x1def5f8;
	Node0x1deb988 -> Node0x1def708;
}
