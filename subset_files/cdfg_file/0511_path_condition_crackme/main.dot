digraph "DFG for'main' function" {
	Node0x20575c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2057648[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x20576d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2057738[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2057bb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2057c98[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x2057d98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2057e58[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2057f08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2058168[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x2058228[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2058388[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20583e8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x205a6a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x205a8a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x205aa08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x205ab18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x205abd8[shape=record, label="  ret i32 0"];
	Node0x20575c8 -> Node0x2057648;
	Node0x2057648 -> Node0x20576d8;
	Node0x20576d8 -> Node0x2057738;
	Node0x2057738 -> Node0x2057bb8;
	Node0x2057bb8 -> Node0x2057c98;
	Node0x2057c98 -> Node0x2057d98;
	Node0x2057d98 -> Node0x2057e58;
	Node0x2057e58 -> Node0x2057f08;
	Node0x2057f08 -> Node0x2058168;
	Node0x2058168 -> Node0x2058228;
	Node0x2058228 -> Node0x2058388;
	Node0x2058388 -> Node0x20583e8;
	Node0x20583e8 -> Node0x205a6a0;
	Node0x205a6a0 -> Node0x205a8a8;
	Node0x205a8a8 -> Node0x205aa08;
	Node0x205aa08 -> Node0x205ab18;
	Node0x205ab18 -> Node0x205abd8;
edge [color=red]
	Node0x20575c8 -> Node0x2057738;
	Node0x2057738 -> Node0x2057bb8;
	Node0x2057648 -> Node0x2057c98;
	Node0x2057c98 -> Node0x2057d98;
	Node0x20576d8 -> Node0x2057e58;
	Node0x2057e58 -> Node0x2057f08;
	Node0x20575c8 -> Node0x2058168;
	Node0x2057648 -> Node0x2058168;
	Node0x20576d8 -> Node0x2058168;
	Node0x20575c8 -> Node0x2058228;
	Node0x2057648 -> Node0x2058388;
	Node0x20576d8 -> Node0x20583e8;
	Node0x2058228 -> Node0x205a6a0;
	Node0x2058388 -> Node0x205a6a0;
	Node0x20583e8 -> Node0x205a6a0;
	Node0x2057e58 -> Node0x205a8a8;
	Node0x2057c98 -> Node0x205aa08;
	Node0x2057738 -> Node0x205ab18;
}
