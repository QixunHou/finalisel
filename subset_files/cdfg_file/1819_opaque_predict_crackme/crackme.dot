digraph "DFG for'crackme' function" {
	Node0x14f05d0[shape=record, label="  %3 = or i32 %1, %0"];
	Node0x14f0c80[shape=record, label="  %4 = xor i32 %1, -1"];
	Node0x14f0d40[shape=record, label="  %5 = or i32 %4, %0"];
	Node0x14f0db0[shape=record, label="  %6 = xor i32 %1, %0"];
	Node0x14f0e20[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x14f0e90[shape=record, label="  %8 = shl i32 %1, 1"];
	Node0x14f0f00[shape=record, label="  %9 = and i32 %4, %0"];
	Node0x14f0f70[shape=record, label="  %10 = and i32 %1, %0"];
	Node0x14f0fe0[shape=record, label="  %11 = shl i32 %3, 1"];
	Node0x14f1080[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x14f10f0[shape=record, label="  %13 = add i32 %5, 1"];
	Node0x14f1190[shape=record, label="  %14 = shl i32 %9, 2"];
	Node0x14f1230[shape=record, label="  %15 = mul i32 %10, -3"];
	Node0x14f12a0[shape=record, label="  %16 = add i32 %13, %6"];
	Node0x14f1340[shape=record, label="  %17 = mul i32 %16, 5"];
	Node0x14f13e0[shape=record, label="  %18 = add i32 %1, 3"];
	Node0x14f1450[shape=record, label="  %19 = add i32 %18, %5"];
	Node0x14f14c0[shape=record, label="  %20 = add i32 %19, %3"];
	Node0x14f1530[shape=record, label="  %21 = add i32 %20, %7"];
	Node0x14f15a0[shape=record, label="  %22 = add i32 %21, %8"];
	Node0x14f1610[shape=record, label="  %23 = add i32 %22, %9"];
	Node0x14f1680[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x14f16f0[shape=record, label="  %25 = sub i32 %24, %14"];
	Node0x14f1760[shape=record, label="  %26 = add i32 %25, %15"];
	Node0x14f17d0[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x14f1840[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x14f18b0[shape=record, label="  %29 = icmp eq i32 %28, -1"];
	Node0x1491268[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14f1d50[shape=record, label="  %31 = tail call i32 @puts(i8* nonnull dereferenceable(1) %30)"];
	Node0x14f1da0[shape=record, label="  ret void"];
	Node0x14f05d0 -> Node0x14f0c80;
	Node0x14f0c80 -> Node0x14f0d40;
	Node0x14f0d40 -> Node0x14f0db0;
	Node0x14f0db0 -> Node0x14f0e20;
	Node0x14f0e20 -> Node0x14f0e90;
	Node0x14f0e90 -> Node0x14f0f00;
	Node0x14f0f00 -> Node0x14f0f70;
	Node0x14f0f70 -> Node0x14f0fe0;
	Node0x14f0fe0 -> Node0x14f1080;
	Node0x14f1080 -> Node0x14f10f0;
	Node0x14f10f0 -> Node0x14f1190;
	Node0x14f1190 -> Node0x14f1230;
	Node0x14f1230 -> Node0x14f12a0;
	Node0x14f12a0 -> Node0x14f1340;
	Node0x14f1340 -> Node0x14f13e0;
	Node0x14f13e0 -> Node0x14f1450;
	Node0x14f1450 -> Node0x14f14c0;
	Node0x14f14c0 -> Node0x14f1530;
	Node0x14f1530 -> Node0x14f15a0;
	Node0x14f15a0 -> Node0x14f1610;
	Node0x14f1610 -> Node0x14f1680;
	Node0x14f1680 -> Node0x14f16f0;
	Node0x14f16f0 -> Node0x14f1760;
	Node0x14f1760 -> Node0x14f17d0;
	Node0x14f17d0 -> Node0x14f1840;
	Node0x14f1840 -> Node0x14f18b0;
	Node0x14f18b0 -> Node0x1491268;
	Node0x1491268 -> Node0x14f1d50;
	Node0x14f1d50 -> Node0x14f1da0;
edge [color=red]
	Node0x14f0c80 -> Node0x14f0d40;
	Node0x14f0db0 -> Node0x14f0e20;
	Node0x14f0c80 -> Node0x14f0f00;
	Node0x14f05d0 -> Node0x14f0fe0;
	Node0x14f0fe0 -> Node0x14f1080;
	Node0x14f0d40 -> Node0x14f10f0;
	Node0x14f0f00 -> Node0x14f1190;
	Node0x14f0f70 -> Node0x14f1230;
	Node0x14f10f0 -> Node0x14f12a0;
	Node0x14f0db0 -> Node0x14f12a0;
	Node0x14f12a0 -> Node0x14f1340;
	Node0x14f13e0 -> Node0x14f1450;
	Node0x14f0d40 -> Node0x14f1450;
	Node0x14f1450 -> Node0x14f14c0;
	Node0x14f05d0 -> Node0x14f14c0;
	Node0x14f14c0 -> Node0x14f1530;
	Node0x14f0e20 -> Node0x14f1530;
	Node0x14f1530 -> Node0x14f15a0;
	Node0x14f0e90 -> Node0x14f15a0;
	Node0x14f15a0 -> Node0x14f1610;
	Node0x14f0f00 -> Node0x14f1610;
	Node0x14f1610 -> Node0x14f1680;
	Node0x14f0f70 -> Node0x14f1680;
	Node0x14f1680 -> Node0x14f16f0;
	Node0x14f1190 -> Node0x14f16f0;
	Node0x14f16f0 -> Node0x14f1760;
	Node0x14f1230 -> Node0x14f1760;
	Node0x14f1760 -> Node0x14f17d0;
	Node0x14f1080 -> Node0x14f17d0;
	Node0x14f17d0 -> Node0x14f1840;
	Node0x14f1340 -> Node0x14f1840;
	Node0x14f1840 -> Node0x14f18b0;
	Node0x14f18b0 -> Node0x1491268;
	Node0x1491268 -> Node0x14f1d50;
}
