digraph "DFG for'main' function" {
	Node0x2447c98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2447d18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2447da8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x2448208[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24482e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x2448408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2448640[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x24486f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2449668[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2449cf0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x2449d60[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x2449dd0[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x2449e40[shape=record, label="  %11 = xor i32 %6, 2147483647"];
	Node0x2449eb0[shape=record, label="  %12 = or i32 %11, %7"];
	Node0x2449f20[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x2449f90[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x244a000[shape=record, label="  %15 = shl i32 %7, 1"];
	Node0x244a070[shape=record, label="  %16 = or i32 %6, %10"];
	Node0x244a0e0[shape=record, label="  %17 = xor i32 %14, -1"];
	Node0x244a150[shape=record, label="  %18 = xor i32 %16, -1"];
	Node0x244a1c0[shape=record, label="  %19 = add i32 %8, %18"];
	Node0x244a230[shape=record, label="  %20 = mul i32 %19, 6"];
	Node0x244a2a0[shape=record, label="  %21 = add i32 %6, 2"];
	Node0x244a310[shape=record, label="  %22 = add i32 %21, %10"];
	Node0x244a380[shape=record, label="  %23 = add i32 %22, %9"];
	Node0x244a3f0[shape=record, label="  %24 = sub i32 %23, %14"];
	Node0x244a460[shape=record, label="  %25 = sub i32 %24, %15"];
	Node0x244a4d0[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x244a540[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x244a5b0[shape=record, label="  %28 = sub i32 %27, %13"];
	Node0x244a620[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x244a690[shape=record, label="  %30 = icmp eq i32 %29, %6"];
	Node0x23e89d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x244a720[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x244ab88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x244ace8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x244ada8[shape=record, label="  ret i32 0"];
	Node0x2447c98 -> Node0x2447d18;
	Node0x2447d18 -> Node0x2447da8;
	Node0x2447da8 -> Node0x2448208;
	Node0x2448208 -> Node0x24482e8;
	Node0x24482e8 -> Node0x2448408;
	Node0x2448408 -> Node0x2448640;
	Node0x2448640 -> Node0x24486f8;
	Node0x24486f8 -> Node0x2449668;
	Node0x2449668 -> Node0x2449cf0;
	Node0x2449cf0 -> Node0x2449d60;
	Node0x2449d60 -> Node0x2449dd0;
	Node0x2449dd0 -> Node0x2449e40;
	Node0x2449e40 -> Node0x2449eb0;
	Node0x2449eb0 -> Node0x2449f20;
	Node0x2449f20 -> Node0x2449f90;
	Node0x2449f90 -> Node0x244a000;
	Node0x244a000 -> Node0x244a070;
	Node0x244a070 -> Node0x244a0e0;
	Node0x244a0e0 -> Node0x244a150;
	Node0x244a150 -> Node0x244a1c0;
	Node0x244a1c0 -> Node0x244a230;
	Node0x244a230 -> Node0x244a2a0;
	Node0x244a2a0 -> Node0x244a310;
	Node0x244a310 -> Node0x244a380;
	Node0x244a380 -> Node0x244a3f0;
	Node0x244a3f0 -> Node0x244a460;
	Node0x244a460 -> Node0x244a4d0;
	Node0x244a4d0 -> Node0x244a540;
	Node0x244a540 -> Node0x244a5b0;
	Node0x244a5b0 -> Node0x244a620;
	Node0x244a620 -> Node0x244a690;
	Node0x244a690 -> Node0x23e89d8;
	Node0x23e89d8 -> Node0x244a720;
	Node0x244a720 -> Node0x244ab88;
	Node0x244ab88 -> Node0x244ace8;
	Node0x244ace8 -> Node0x244ada8;
edge [color=red]
	Node0x2447c98 -> Node0x2447da8;
	Node0x2447da8 -> Node0x2448208;
	Node0x2447d18 -> Node0x24482e8;
	Node0x24482e8 -> Node0x2448408;
	Node0x2447c98 -> Node0x2448640;
	Node0x2447d18 -> Node0x2448640;
	Node0x2447c98 -> Node0x24486f8;
	Node0x2447d18 -> Node0x2449668;
	Node0x2449668 -> Node0x2449cf0;
	Node0x24486f8 -> Node0x2449cf0;
	Node0x2449cf0 -> Node0x2449d60;
	Node0x2449668 -> Node0x2449dd0;
	Node0x24486f8 -> Node0x2449e40;
	Node0x2449e40 -> Node0x2449eb0;
	Node0x2449668 -> Node0x2449eb0;
	Node0x2449eb0 -> Node0x2449f20;
	Node0x2449668 -> Node0x2449f90;
	Node0x24486f8 -> Node0x2449f90;
	Node0x2449668 -> Node0x244a000;
	Node0x24486f8 -> Node0x244a070;
	Node0x2449dd0 -> Node0x244a070;
	Node0x2449f90 -> Node0x244a0e0;
	Node0x244a070 -> Node0x244a150;
	Node0x2449cf0 -> Node0x244a1c0;
	Node0x244a150 -> Node0x244a1c0;
	Node0x244a1c0 -> Node0x244a230;
	Node0x24486f8 -> Node0x244a2a0;
	Node0x244a2a0 -> Node0x244a310;
	Node0x2449dd0 -> Node0x244a310;
	Node0x244a310 -> Node0x244a380;
	Node0x2449d60 -> Node0x244a380;
	Node0x244a380 -> Node0x244a3f0;
	Node0x2449f90 -> Node0x244a3f0;
	Node0x244a3f0 -> Node0x244a460;
	Node0x244a000 -> Node0x244a460;
	Node0x244a460 -> Node0x244a4d0;
	Node0x244a070 -> Node0x244a4d0;
	Node0x244a4d0 -> Node0x244a540;
	Node0x244a0e0 -> Node0x244a540;
	Node0x244a540 -> Node0x244a5b0;
	Node0x2449f20 -> Node0x244a5b0;
	Node0x244a5b0 -> Node0x244a620;
	Node0x244a230 -> Node0x244a620;
	Node0x244a620 -> Node0x244a690;
	Node0x24486f8 -> Node0x244a690;
	Node0x244a690 -> Node0x23e89d8;
	Node0x23e89d8 -> Node0x244a720;
	Node0x24482e8 -> Node0x244ab88;
	Node0x2447da8 -> Node0x244ace8;
}
