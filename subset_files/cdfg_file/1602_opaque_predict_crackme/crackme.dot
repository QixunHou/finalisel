digraph "DFG for'crackme' function" {
	Node0x19e65d0[shape=record, label="  %3 = and i32 %1, %0"];
	Node0x19e6c80[shape=record, label="  %4 = xor i32 %3, -1"];
	Node0x19e6d40[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x19e6db0[shape=record, label="  %6 = add i32 %4, %5"];
	Node0x19e6e20[shape=record, label="  %7 = shl i32 %0, 1"];
	Node0x19e6ec0[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0x19e6f30[shape=record, label="  %9 = or i32 %1, %0"];
	Node0x19e6fa0[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x19e7010[shape=record, label="  %11 = xor i32 %1, %0"];
	Node0x19e7080[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x19e70f0[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x19e7160[shape=record, label="  %14 = and i32 %5, %0"];
	Node0x19e71d0[shape=record, label="  %15 = or i32 %5, %0"];
	Node0x19e7240[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x19e72b0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x19e7350[shape=record, label="  %18 = mul i32 %14, 5"];
	Node0x19e73c0[shape=record, label="  %19 = add i32 %0, 1"];
	Node0x19e7430[shape=record, label="  %20 = add i32 %19, %1"];
	Node0x19e74a0[shape=record, label="  %21 = add i32 %20, %8"];
	Node0x19e7510[shape=record, label="  %22 = sub i32 %21, %11"];
	Node0x19e7580[shape=record, label="  %23 = add i32 %22, %14"];
	Node0x19e75f0[shape=record, label="  %24 = sub i32 %23, %15"];
	Node0x19e7660[shape=record, label="  %25 = sub i32 %24, %10"];
	Node0x19e76d0[shape=record, label="  %26 = add i32 %25, %18"];
	Node0x19e7740[shape=record, label="  %27 = add i32 %26, %13"];
	Node0x19e77b0[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x19e7820[shape=record, label="  %29 = icmp eq i32 %6, %28"];
	Node0x1987268[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x19e7cc0[shape=record, label="  %31 = tail call i32 @puts(i8* nonnull dereferenceable(1) %30)"];
	Node0x19e7d10[shape=record, label="  ret void"];
	Node0x19e65d0 -> Node0x19e6c80;
	Node0x19e6c80 -> Node0x19e6d40;
	Node0x19e6d40 -> Node0x19e6db0;
	Node0x19e6db0 -> Node0x19e6e20;
	Node0x19e6e20 -> Node0x19e6ec0;
	Node0x19e6ec0 -> Node0x19e6f30;
	Node0x19e6f30 -> Node0x19e6fa0;
	Node0x19e6fa0 -> Node0x19e7010;
	Node0x19e7010 -> Node0x19e7080;
	Node0x19e7080 -> Node0x19e70f0;
	Node0x19e70f0 -> Node0x19e7160;
	Node0x19e7160 -> Node0x19e71d0;
	Node0x19e71d0 -> Node0x19e7240;
	Node0x19e7240 -> Node0x19e72b0;
	Node0x19e72b0 -> Node0x19e7350;
	Node0x19e7350 -> Node0x19e73c0;
	Node0x19e73c0 -> Node0x19e7430;
	Node0x19e7430 -> Node0x19e74a0;
	Node0x19e74a0 -> Node0x19e7510;
	Node0x19e7510 -> Node0x19e7580;
	Node0x19e7580 -> Node0x19e75f0;
	Node0x19e75f0 -> Node0x19e7660;
	Node0x19e7660 -> Node0x19e76d0;
	Node0x19e76d0 -> Node0x19e7740;
	Node0x19e7740 -> Node0x19e77b0;
	Node0x19e77b0 -> Node0x19e7820;
	Node0x19e7820 -> Node0x1987268;
	Node0x1987268 -> Node0x19e7cc0;
	Node0x19e7cc0 -> Node0x19e7d10;
edge [color=red]
	Node0x19e65d0 -> Node0x19e6c80;
	Node0x19e6c80 -> Node0x19e6db0;
	Node0x19e6d40 -> Node0x19e6db0;
	Node0x19e6e20 -> Node0x19e6ec0;
	Node0x19e6f30 -> Node0x19e6fa0;
	Node0x19e7010 -> Node0x19e7080;
	Node0x19e7080 -> Node0x19e70f0;
	Node0x19e6d40 -> Node0x19e7160;
	Node0x19e6d40 -> Node0x19e71d0;
	Node0x19e71d0 -> Node0x19e7240;
	Node0x19e7240 -> Node0x19e72b0;
	Node0x19e7160 -> Node0x19e7350;
	Node0x19e73c0 -> Node0x19e7430;
	Node0x19e7430 -> Node0x19e74a0;
	Node0x19e6ec0 -> Node0x19e74a0;
	Node0x19e74a0 -> Node0x19e7510;
	Node0x19e7010 -> Node0x19e7510;
	Node0x19e7510 -> Node0x19e7580;
	Node0x19e7160 -> Node0x19e7580;
	Node0x19e7580 -> Node0x19e75f0;
	Node0x19e71d0 -> Node0x19e75f0;
	Node0x19e75f0 -> Node0x19e7660;
	Node0x19e6fa0 -> Node0x19e7660;
	Node0x19e7660 -> Node0x19e76d0;
	Node0x19e7350 -> Node0x19e76d0;
	Node0x19e76d0 -> Node0x19e7740;
	Node0x19e70f0 -> Node0x19e7740;
	Node0x19e7740 -> Node0x19e77b0;
	Node0x19e72b0 -> Node0x19e77b0;
	Node0x19e6db0 -> Node0x19e7820;
	Node0x19e77b0 -> Node0x19e7820;
	Node0x19e7820 -> Node0x1987268;
	Node0x1987268 -> Node0x19e7cc0;
}
