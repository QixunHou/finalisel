; ModuleID = '../.././c_source_file/1432_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1432_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = and i32 %4, %3
  %7 = xor i32 %6, -1
  %8 = xor i32 %2, %0
  %9 = add i32 %8, %3
  %10 = sub i32 %7, %9
  %11 = xor i32 %3, -1
  %12 = or i32 %4, %3
  %13 = xor i32 %4, -1
  %14 = and i32 %13, %3
  %15 = shl i32 %13, 1
  %16 = shl i32 %12, 1
  %17 = xor i32 %16, -2
  %18 = and i32 %11, %4
  %19 = shl i32 %6, 1
  %20 = and i32 %2, %0
  %21 = or i32 %20, %1
  %22 = xor i32 %2, -1
  %23 = and i32 %1, %0
  %24 = xor i32 %23, -1
  %25 = and i32 %22, %24
  %26 = or i32 %22, %1
  %27 = xor i32 %26, %0
  %28 = or i32 %1, %0
  %29 = xor i32 %28, -1
  %30 = xor i32 %1, -1
  %31 = and i32 %30, %0
  %32 = and i32 %22, %1
  %33 = xor i32 %32, -1
  %34 = xor i32 %31, %33
  %35 = or i32 %2, %1
  %36 = xor i32 %35, -1
  %37 = xor i32 %36, %0
  %38 = or i32 %30, %0
  %39 = xor i32 %8, -1
  %40 = and i32 %38, %39
  %41 = and i32 %2, %1
  %42 = and i32 %41, %0
  %43 = xor i32 %2, %1
  %44 = xor i32 %43, %0
  %45 = xor i32 %42, %44
  %46 = xor i32 %0, -1
  %47 = and i32 %41, %46
  %48 = and i32 %35, %0
  %49 = xor i32 %48, -1
  %50 = xor i32 %47, %49
  %51 = xor i32 %38, -1
  %52 = or i32 %8, %51
  %53 = xor i32 %41, %0
  %54 = or i32 %8, %23
  %55 = xor i32 %1, %0
  %56 = xor i32 %55, -1
  %57 = or i32 %56, %2
  %58 = shl i32 %57, 1
  %59 = xor i32 %20, -1
  %60 = add i32 %20, 1
  %61 = and i32 %43, %0
  %62 = and i32 %22, %0
  %63 = xor i32 %41, -1
  %64 = xor i32 %62, %63
  %65 = xor i32 %31, -1
  %66 = and i32 %39, %65
  %67 = xor i32 %51, %2
  %68 = shl i32 %67, 1
  %69 = and i32 %8, %56
  %70 = or i32 %2, %0
  %71 = xor i32 %70, -1
  %72 = or i32 %55, %71
  %73 = and i32 %39, %30
  %74 = shl i32 %56, 1
  %75 = or i32 %39, %51
  %76 = or i32 %33, %46
  %77 = or i32 %63, %0
  %78 = or i32 %47, %48
  %79 = or i32 %22, %0
  %80 = and i32 %79, %1
  %81 = or i32 %23, %36
  %82 = xor i32 %43, -1
  %83 = add i32 %43, 1
  %84 = and i32 %82, %0
  %85 = xor i32 %35, %0
  %86 = or i32 %42, %85
  %87 = xor i32 %79, -1
  %88 = xor i32 %87, %1
  %89 = and i32 %22, %65
  %90 = or i32 %55, %87
  %91 = shl i32 %90, 1
  %92 = and i32 %59, %1
  %93 = or i32 %32, %46
  %94 = xor i32 %32, %0
  %95 = or i32 %41, %0
  %96 = or i32 %41, %46
  %97 = or i32 %62, %41
  %98 = and i32 %30, %2
  %99 = and i32 %98, %0
  %100 = or i32 %30, %2
  %101 = xor i32 %100, %0
  %102 = or i32 %99, %101
  %103 = or i32 %62, %30
  %104 = xor i32 %26, -1
  %105 = or i32 %23, %104
  %106 = and i32 %70, %55
  %107 = and i32 %98, %46
  %108 = or i32 %43, %46
  %109 = xor i32 %108, 2147483647
  %110 = or i32 %109, %107
  %111 = shl i32 %110, 1
  %112 = or i32 %20, %56
  %113 = and i32 %8, %24
  %114 = shl i32 %113, 1
  %115 = or i32 %43, %31
  %116 = or i32 %43, %0
  %117 = xor i32 %62, -1
  %118 = add i32 %62, 1
  %119 = xor i32 %23, %2
  %120 = shl i32 %119, 1
  %121 = or i32 %62, %1
  %122 = and i32 %43, %38
  %123 = xor i32 %33, %0
  %124 = and i32 %28, %82
  %125 = xor i32 %35, %23
  %126 = and i32 %70, %30
  %127 = or i32 %71, %30
  %128 = or i32 %31, %82
  %129 = or i32 %31, %39
  %130 = or i32 %23, %39
  %131 = shl i32 %71, 1
  %132 = or i32 %36, %0
  %133 = and i32 %55, %2
  %134 = or i32 %55, %2
  %135 = xor i32 %59, %1
  %136 = and i32 %100, %0
  %137 = or i32 %107, %136
  %138 = or i32 %62, %56
  %139 = or i32 %51, %2
  %140 = or i32 %26, %0
  %141 = shl i32 %140, 1
  %142 = or i32 %8, %56
  %143 = or i32 %82, %0
  %144 = or i32 %87, %30
  %145 = and i32 %35, %46
  %146 = xor i32 %63, %0
  %147 = and i32 %82, %24
  %148 = and i32 %8, %38
  %149 = xor i32 %70, %23
  %150 = or i32 %55, %39
  %151 = or i32 %39, %30
  %152 = or i32 %22, %29
  %153 = xor i32 %44, -1
  %154 = or i32 %42, %153
  %155 = or i32 %99, %44
  %156 = or i32 %39, %1
  %157 = and i32 %79, %30
  %158 = xor i32 %79, %23
  %159 = and i32 %100, %46
  %160 = xor i32 %159, -1
  %161 = xor i32 %99, %160
  %162 = and i32 %70, %1
  %163 = or i32 %23, %71
  %164 = and i32 %33, %46
  %165 = xor i32 %82, %0
  %166 = and i32 %59, %30
  %167 = and i32 %43, %28
  %168 = or i32 %22, %56
  %169 = and i32 %79, %55
  %170 = or i32 %71, %1
  %171 = or i32 %39, %56
  %172 = shl i32 %171, 1
  %173 = and i32 %33, %0
  %174 = xor i32 %136, -1
  %175 = xor i32 %107, %174
  %176 = or i32 %41, %31
  %177 = and i32 %43, %46
  %178 = xor i32 %42, -1
  %179 = xor i32 %177, %178
  %180 = shl i32 %62, 1
  %181 = or i32 %87, %1
  %182 = or i32 %23, %22
  %183 = xor i32 %101, 2147483647
  %184 = xor i32 %183, %99
  %185 = and i32 %39, %1
  %186 = xor i32 %117, %1
  %187 = shl i32 %186, 1
  %188 = or i32 %20, %29
  %189 = xor i32 %61, 2147483647
  %190 = xor i32 %189, %47
  %191 = or i32 %8, %1
  %192 = or i32 %87, %56
  %193 = and i32 %28, %39
  %194 = and i32 %55, %22
  %195 = shl i32 %194, 1
  %196 = or i32 %26, %46
  %197 = or i32 %104, %0
  %198 = shl i32 %108, 1
  %199 = or i32 %62, %104
  %200 = add i32 %79, 1
  %201 = or i32 %82, %51
  %202 = and i32 %26, %46
  %203 = or i32 %35, %0
  %204 = and i32 %79, %56
  %205 = xor i32 %79, %1
  %206 = xor i32 %62, %1
  %207 = and i32 %117, %30
  %208 = or i32 %31, %2
  %209 = and i32 %39, %56
  %210 = or i32 %63, %46
  %211 = or i32 %32, %31
  %212 = and i32 %39, %24
  %213 = xor i32 %62, %26
  %214 = shl i32 %65, 2
  %215 = xor i32 %104, %0
  %216 = add i32 %26, 1
  %217 = and i32 %63, %0
  %218 = or i32 %8, %31
  %219 = xor i32 %99, %153
  %220 = and i32 %28, %22
  %221 = and i32 %65, %2
  %222 = shl i32 %221, 1
  %223 = and i32 %56, %2
  %224 = or i32 %8, %29
  %225 = xor i32 %31, %63
  %226 = or i32 %20, %32
  %227 = shl i32 %226, 1
  %228 = or i32 %104, %46
  %229 = or i32 %23, %87
  %230 = xor i32 %20, %35
  %231 = or i32 %62, %55
  %232 = or i32 %42, %145
  %233 = and i32 %38, %2
  %234 = or i32 %42, %177
  %235 = and i32 %59, %56
  %236 = or i32 %39, %29
  %237 = or i32 %22, %51
  %238 = or i32 %71, %56
  %239 = or i32 %31, %22
  %240 = and i32 %8, %30
  %241 = shl i32 %240, 1
  %242 = xor i32 %71, %1
  %243 = xor i32 %20, %38
  %244 = and i32 %28, %2
  %245 = and i32 %63, %46
  %246 = or i32 %43, %29
  %247 = and i32 %24, %2
  %248 = or i32 %20, %36
  %249 = xor i32 %20, %33
  %250 = add i32 %1, 1
  %251 = xor i32 %38, %2
  %252 = shl i32 %251, 1
  %253 = shl i32 %85, 1
  %254 = xor i32 %85, %178
  %255 = xor i32 %26, %23
  %256 = or i32 %99, %159
  %257 = shl i32 %256, 2
  %258 = or i32 %43, %51
  %259 = xor i32 %20, %28
  %260 = add i32 %38, 1
  %261 = or i32 %32, %0
  %262 = and i32 %22, %56
  %263 = xor i32 %65, %2
  %264 = and i32 %82, %65
  %265 = xor i32 %145, %178
  %266 = xor i32 %99, %116
  %267 = or i32 %8, %30
  %268 = and i32 %8, %55
  %269 = or i32 %20, %30
  %270 = shl i32 %269, 1
  %271 = or i32 %55, %22
  %272 = and i32 %70, %56
  %273 = or i32 %35, %46
  %274 = or i32 %20, %55
  %275 = or i32 %20, %51
  %276 = and i32 %43, %24
  %277 = or i32 %8, %55
  %278 = shl i32 %38, 1
  %279 = and i32 %117, %1
  %280 = and i32 %43, %65
  %281 = and i32 %55, %117
  %282 = or i32 %82, %29
  %283 = or i32 %47, %61
  %284 = shl i32 %0, 1
  %285 = and i32 %8, %1
  %286 = shl i32 %285, 1
  %287 = xor i32 %31, %2
  %288 = and i32 %38, %82
  %289 = and i32 %117, %56
  %290 = and i32 %36, %46
  %291 = mul i32 %290, -11
  %292 = and i32 %32, %46
  %293 = and i32 %36, %0
  %294 = mul i32 %293, -15
  %295 = and i32 %32, %0
  %296 = shl i32 %295, 4
  %297 = and i32 %104, %46
  %298 = shl i32 %297, 1
  %299 = mul i32 %47, 10
  %300 = and i32 %104, %0
  %301 = shl i32 %300, 1
  %302 = add i32 %280, %249
  %303 = sub i32 %302, %248
  %304 = add i32 %303, %212
  %305 = sub i32 %304, %206
  %306 = sub i32 %305, %203
  %307 = mul i32 %306, 5
  %308 = add i32 %228, %55
  %309 = sub i32 %277, %308
  %310 = add i32 %309, %94
  %311 = mul i32 %310, 3
  %312 = add i32 %292, %243
  %313 = shl i32 %312, 2
  %314 = add i32 %2, -1
  %315 = add i32 %314, %23
  %316 = add i32 %315, %287
  %317 = add i32 %316, %208
  %318 = add i32 %317, %41
  %319 = add i32 %318, %70
  %320 = add i32 %319, %42
  %321 = add i32 %320, %274
  %322 = add i32 %321, %272
  %323 = add i32 %322, %259
  %324 = add i32 %323, %225
  %325 = add i32 %324, %224
  %326 = add i32 %325, %217
  %327 = add i32 %326, %201
  %328 = add i32 %327, %166
  %329 = add i32 %328, %157
  %330 = add i32 %329, %112
  %331 = add i32 %330, %105
  %332 = add i32 %331, %81
  %333 = add i32 %332, %61
  %334 = add i32 %333, %4
  %335 = add i32 %334, %14
  %336 = add i32 %335, %184
  %337 = add i32 %336, %190
  %338 = shl i32 %337, 1
  %339 = sub i32 %250, %284
  %340 = add i32 %339, %29
  %341 = add i32 %340, %31
  %342 = add i32 %341, %260
  %343 = sub i32 %342, %28
  %344 = add i32 %343, %22
  %345 = add i32 %344, %24
  %346 = add i32 %345, %11
  %347 = add i32 %346, %25
  %348 = add i32 %347, %36
  %349 = add i32 %348, %60
  %350 = sub i32 %349, %74
  %351 = sub i32 %350, %79
  %352 = add i32 %351, %83
  %353 = sub i32 %352, %89
  %354 = add i32 %353, %39
  %355 = add i32 %354, %118
  %356 = sub i32 %355, %133
  %357 = add i32 %356, %134
  %358 = sub i32 %357, %139
  %359 = add i32 %358, %152
  %360 = sub i32 %359, %26
  %361 = add i32 %360, %168
  %362 = sub i32 %361, %182
  %363 = add i32 %362, %63
  %364 = add i32 %363, %200
  %365 = add i32 %364, %43
  %366 = sub i32 %365, %214
  %367 = add i32 %366, %216
  %368 = sub i32 %367, %220
  %369 = add i32 %368, %223
  %370 = sub i32 %369, %233
  %371 = add i32 %370, %33
  %372 = add i32 %371, %237
  %373 = add i32 %372, %239
  %374 = add i32 %373, %244
  %375 = add i32 %374, %247
  %376 = add i32 %375, %262
  %377 = sub i32 %376, %263
  %378 = sub i32 %377, %271
  %379 = sub i32 %378, %278
  %380 = sub i32 %379, %21
  %381 = add i32 %380, %27
  %382 = add i32 %381, %34
  %383 = sub i32 %382, %37
  %384 = sub i32 %383, %40
  %385 = add i32 %384, %52
  %386 = add i32 %385, %53
  %387 = sub i32 %386, %54
  %388 = sub i32 %387, %58
  %389 = add i32 %388, %64
  %390 = sub i32 %389, %66
  %391 = sub i32 %390, %68
  %392 = sub i32 %391, %69
  %393 = add i32 %392, %72
  %394 = add i32 %393, %73
  %395 = sub i32 %394, %75
  %396 = add i32 %395, %76
  %397 = sub i32 %396, %77
  %398 = sub i32 %397, %80
  %399 = add i32 %398, %84
  %400 = sub i32 %399, %88
  %401 = add i32 %400, %92
  %402 = add i32 %401, %93
  %403 = sub i32 %402, %95
  %404 = sub i32 %403, %96
  %405 = add i32 %404, %97
  %406 = add i32 %405, %103
  %407 = add i32 %406, %106
  %408 = add i32 %407, %115
  %409 = add i32 %408, %116
  %410 = sub i32 %409, %120
  %411 = sub i32 %410, %121
  %412 = add i32 %411, %122
  %413 = add i32 %412, %123
  %414 = sub i32 %413, %124
  %415 = sub i32 %414, %125
  %416 = add i32 %415, %126
  %417 = sub i32 %416, %127
  %418 = add i32 %417, %128
  %419 = add i32 %418, %129
  %420 = add i32 %419, %130
  %421 = sub i32 %420, %131
  %422 = add i32 %421, %132
  %423 = add i32 %422, %135
  %424 = add i32 %423, %138
  %425 = add i32 %424, %142
  %426 = sub i32 %425, %143
  %427 = sub i32 %426, %144
  %428 = add i32 %427, %145
  %429 = add i32 %428, %146
  %430 = sub i32 %429, %147
  %431 = sub i32 %430, %148
  %432 = add i32 %431, %149
  %433 = add i32 %432, %150
  %434 = sub i32 %433, %151
  %435 = add i32 %434, %156
  %436 = add i32 %435, %158
  %437 = add i32 %436, %162
  %438 = add i32 %437, %163
  %439 = sub i32 %438, %164
  %440 = sub i32 %439, %165
  %441 = add i32 %440, %167
  %442 = sub i32 %441, %169
  %443 = add i32 %442, %170
  %444 = add i32 %443, %173
  %445 = sub i32 %444, %176
  %446 = sub i32 %445, %180
  %447 = sub i32 %446, %181
  %448 = add i32 %447, %185
  %449 = sub i32 %448, %188
  %450 = sub i32 %449, %191
  %451 = sub i32 %450, %192
  %452 = add i32 %451, %193
  %453 = sub i32 %452, %195
  %454 = sub i32 %453, %196
  %455 = sub i32 %454, %197
  %456 = sub i32 %455, %199
  %457 = add i32 %456, %202
  %458 = add i32 %457, %204
  %459 = add i32 %458, %205
  %460 = add i32 %459, %207
  %461 = sub i32 %460, %209
  %462 = add i32 %461, %210
  %463 = add i32 %462, %211
  %464 = sub i32 %463, %213
  %465 = add i32 %464, %215
  %466 = add i32 %465, %218
  %467 = sub i32 %466, %222
  %468 = add i32 %467, %229
  %469 = add i32 %468, %230
  %470 = sub i32 %469, %231
  %471 = sub i32 %470, %235
  %472 = sub i32 %471, %236
  %473 = add i32 %472, %238
  %474 = add i32 %473, %242
  %475 = add i32 %474, %44
  %476 = sub i32 %475, %245
  %477 = add i32 %476, %246
  %478 = sub i32 %477, %252
  %479 = sub i32 %478, %255
  %480 = add i32 %479, %258
  %481 = sub i32 %480, %261
  %482 = sub i32 %481, %264
  %483 = add i32 %482, %267
  %484 = add i32 %483, %268
  %485 = add i32 %484, %273
  %486 = sub i32 %485, %177
  %487 = add i32 %486, %275
  %488 = sub i32 %487, %276
  %489 = add i32 %488, %279
  %490 = sub i32 %489, %281
  %491 = sub i32 %490, %282
  %492 = add i32 %491, %48
  %493 = add i32 %492, %288
  %494 = add i32 %493, %289
  %495 = sub i32 %494, %12
  %496 = add i32 %495, %14
  %497 = sub i32 %496, %15
  %498 = sub i32 %497, %18
  %499 = sub i32 %498, %45
  %500 = sub i32 %499, %50
  %501 = add i32 %500, %78
  %502 = add i32 %501, %86
  %503 = sub i32 %502, %91
  %504 = sub i32 %503, %102
  %505 = sub i32 %504, %114
  %506 = add i32 %505, %137
  %507 = sub i32 %506, %141
  %508 = add i32 %507, %154
  %509 = sub i32 %508, %155
  %510 = add i32 %509, %161
  %511 = sub i32 %510, %172
  %512 = sub i32 %511, %175
  %513 = add i32 %512, %179
  %514 = sub i32 %513, %187
  %515 = sub i32 %514, %198
  %516 = add i32 %515, %219
  %517 = sub i32 %516, %227
  %518 = sub i32 %517, %232
  %519 = add i32 %518, %234
  %520 = sub i32 %519, %241
  %521 = sub i32 %520, %253
  %522 = add i32 %521, %254
  %523 = add i32 %522, %265
  %524 = sub i32 %523, %266
  %525 = sub i32 %524, %270
  %526 = sub i32 %525, %283
  %527 = sub i32 %526, %286
  %528 = add i32 %527, %291
  %529 = add i32 %528, %294
  %530 = sub i32 %529, %296
  %531 = sub i32 %530, %298
  %532 = add i32 %531, %299
  %533 = sub i32 %532, %301
  %534 = sub i32 %533, %19
  %535 = sub i32 %534, %257
  %536 = add i32 %535, %313
  %537 = add i32 %536, %17
  %538 = sub i32 %537, %111
  %539 = add i32 %538, %311
  %540 = add i32 %539, %307
  %541 = add i32 %540, %338
  %542 = icmp eq i32 %10, %541
  %543 = select i1 %542, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %544 = tail call i32 @puts(i8* nonnull dereferenceable(1) %543)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
