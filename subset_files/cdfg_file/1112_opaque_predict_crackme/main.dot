digraph "DFG for'main' function" {
	Node0x11e0db8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11e0e38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11e0ec8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x11e0f28[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x11e13a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11e1488[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x11e1588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11e1648[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x11e16f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11e1958[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x11e1a18[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11e1b78[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11e1bd8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x11e6350[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x11e6558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11e66b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11e67c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11e6888[shape=record, label="  ret i32 0"];
	Node0x11e0db8 -> Node0x11e0e38;
	Node0x11e0e38 -> Node0x11e0ec8;
	Node0x11e0ec8 -> Node0x11e0f28;
	Node0x11e0f28 -> Node0x11e13a8;
	Node0x11e13a8 -> Node0x11e1488;
	Node0x11e1488 -> Node0x11e1588;
	Node0x11e1588 -> Node0x11e1648;
	Node0x11e1648 -> Node0x11e16f8;
	Node0x11e16f8 -> Node0x11e1958;
	Node0x11e1958 -> Node0x11e1a18;
	Node0x11e1a18 -> Node0x11e1b78;
	Node0x11e1b78 -> Node0x11e1bd8;
	Node0x11e1bd8 -> Node0x11e6350;
	Node0x11e6350 -> Node0x11e6558;
	Node0x11e6558 -> Node0x11e66b8;
	Node0x11e66b8 -> Node0x11e67c8;
	Node0x11e67c8 -> Node0x11e6888;
edge [color=red]
	Node0x11e0db8 -> Node0x11e0f28;
	Node0x11e0f28 -> Node0x11e13a8;
	Node0x11e0e38 -> Node0x11e1488;
	Node0x11e1488 -> Node0x11e1588;
	Node0x11e0ec8 -> Node0x11e1648;
	Node0x11e1648 -> Node0x11e16f8;
	Node0x11e0db8 -> Node0x11e1958;
	Node0x11e0e38 -> Node0x11e1958;
	Node0x11e0ec8 -> Node0x11e1958;
	Node0x11e0db8 -> Node0x11e1a18;
	Node0x11e0e38 -> Node0x11e1b78;
	Node0x11e0ec8 -> Node0x11e1bd8;
	Node0x11e1a18 -> Node0x11e6350;
	Node0x11e1b78 -> Node0x11e6350;
	Node0x11e1bd8 -> Node0x11e6350;
	Node0x11e1648 -> Node0x11e6558;
	Node0x11e1488 -> Node0x11e66b8;
	Node0x11e0f28 -> Node0x11e67c8;
}
