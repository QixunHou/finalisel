digraph "DFG for'main' function" {
	Node0xc2e7b8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc2e838[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc2e8c8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xc2e928[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xc2eda8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc2ee88[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xc2ef88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc2f048[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xc2f0f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc2f358[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xc2f418[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc2f578[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc2f5d8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xc32380[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xc32588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc326e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc327f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc328b8[shape=record, label="  ret i32 0"];
	Node0xc2e7b8 -> Node0xc2e838;
	Node0xc2e838 -> Node0xc2e8c8;
	Node0xc2e8c8 -> Node0xc2e928;
	Node0xc2e928 -> Node0xc2eda8;
	Node0xc2eda8 -> Node0xc2ee88;
	Node0xc2ee88 -> Node0xc2ef88;
	Node0xc2ef88 -> Node0xc2f048;
	Node0xc2f048 -> Node0xc2f0f8;
	Node0xc2f0f8 -> Node0xc2f358;
	Node0xc2f358 -> Node0xc2f418;
	Node0xc2f418 -> Node0xc2f578;
	Node0xc2f578 -> Node0xc2f5d8;
	Node0xc2f5d8 -> Node0xc32380;
	Node0xc32380 -> Node0xc32588;
	Node0xc32588 -> Node0xc326e8;
	Node0xc326e8 -> Node0xc327f8;
	Node0xc327f8 -> Node0xc328b8;
edge [color=red]
	Node0xc2e7b8 -> Node0xc2e928;
	Node0xc2e928 -> Node0xc2eda8;
	Node0xc2e838 -> Node0xc2ee88;
	Node0xc2ee88 -> Node0xc2ef88;
	Node0xc2e8c8 -> Node0xc2f048;
	Node0xc2f048 -> Node0xc2f0f8;
	Node0xc2e7b8 -> Node0xc2f358;
	Node0xc2e838 -> Node0xc2f358;
	Node0xc2e8c8 -> Node0xc2f358;
	Node0xc2e7b8 -> Node0xc2f418;
	Node0xc2e838 -> Node0xc2f578;
	Node0xc2e8c8 -> Node0xc2f5d8;
	Node0xc2f418 -> Node0xc32380;
	Node0xc2f578 -> Node0xc32380;
	Node0xc2f5d8 -> Node0xc32380;
	Node0xc2f048 -> Node0xc32588;
	Node0xc2ee88 -> Node0xc326e8;
	Node0xc2e928 -> Node0xc327f8;
}
