digraph "DFG for'main' function" {
	Node0x200ca98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x200cb18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x200cba8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x200cc08[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x200d088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x200d168[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x200d268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x200d328[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x200d3d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x200d638[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x200d6f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x200e668[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x200ecd8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x200ed50[shape=record, label="  %11 = and i32 %10, %8"];
	Node0x200edc0[shape=record, label="  %12 = xor i32 %11, %9"];
	Node0x200ee30[shape=record, label="  %13 = xor i32 %9, -1"];
	Node0x200eea0[shape=record, label="  %14 = xor i32 %10, -1"];
	Node0x200ef10[shape=record, label="  %15 = and i32 %8, %14"];
	Node0x200ef80[shape=record, label="  %16 = or i32 %15, %13"];
	Node0x200eff0[shape=record, label="  %17 = sub i32 %12, %16"];
	Node0x200f060[shape=record, label="  %18 = xor i32 %10, %9"];
	Node0x200f0d0[shape=record, label="  %19 = and i32 %18, %8"];
	Node0x200f140[shape=record, label="  %20 = xor i32 %8, -1"];
	Node0x200f1b0[shape=record, label="  %21 = and i32 %9, %20"];
	Node0x200f220[shape=record, label="  %22 = and i32 %9, %8"];
	Node0x200f290[shape=record, label="  %23 = or i32 %22, %14"];
	Node0x200f300[shape=record, label="  %24 = or i32 %10, %9"];
	Node0x200f370[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x200f3e0[shape=record, label="  %26 = and i32 %25, %20"];
	Node0x200f450[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x200f4c0[shape=record, label="  %28 = and i32 %9, %14"];
	Node0x200f530[shape=record, label="  %29 = and i32 %28, %20"];
	Node0x200f5a0[shape=record, label="  %30 = and i32 %8, %25"];
	Node0x200f610[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x200f680[shape=record, label="  %32 = and i32 %28, %8"];
	Node0x200f6f0[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x200f760[shape=record, label="  %34 = and i32 %10, %13"];
	Node0x200f7d0[shape=record, label="  %35 = and i32 %34, %20"];
	Node0x200f840[shape=record, label="  %36 = and i32 %10, %9"];
	Node0x200f8b0[shape=record, label="  %37 = and i32 %36, %20"];
	Node0x200f920[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x200f990[shape=record, label="  %39 = and i32 %34, %8"];
	Node0x200fa00[shape=record, label="  %40 = and i32 %36, %8"];
	Node0x200fa70[shape=record, label="  %41 = sub i32 %23, %21"];
	Node0x200fae0[shape=record, label="  %42 = add i32 %41, %19"];
	Node0x200fb50[shape=record, label="  %43 = add i32 %42, %29"];
	Node0x200fbc0[shape=record, label="  %44 = sub i32 %43, %35"];
	Node0x200fc30[shape=record, label="  %45 = sub i32 %44, %39"];
	Node0x200fca0[shape=record, label="  %46 = sub i32 %45, %40"];
	Node0x200fd10[shape=record, label="  %47 = sub i32 %46, %27"];
	Node0x200fd80[shape=record, label="  %48 = sub i32 %47, %31"];
	Node0x200fdf0[shape=record, label="  %49 = sub i32 %48, %33"];
	Node0x200fe60[shape=record, label="  %50 = add i32 %49, %38"];
	Node0x200fed0[shape=record, label="  %51 = icmp eq i32 %17, %50"];
	Node0x1fac9d8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x200ff60[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0x20101b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2010318[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2010428[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20104e8[shape=record, label="  ret i32 0"];
	Node0x200ca98 -> Node0x200cb18;
	Node0x200cb18 -> Node0x200cba8;
	Node0x200cba8 -> Node0x200cc08;
	Node0x200cc08 -> Node0x200d088;
	Node0x200d088 -> Node0x200d168;
	Node0x200d168 -> Node0x200d268;
	Node0x200d268 -> Node0x200d328;
	Node0x200d328 -> Node0x200d3d8;
	Node0x200d3d8 -> Node0x200d638;
	Node0x200d638 -> Node0x200d6f8;
	Node0x200d6f8 -> Node0x200e668;
	Node0x200e668 -> Node0x200ecd8;
	Node0x200ecd8 -> Node0x200ed50;
	Node0x200ed50 -> Node0x200edc0;
	Node0x200edc0 -> Node0x200ee30;
	Node0x200ee30 -> Node0x200eea0;
	Node0x200eea0 -> Node0x200ef10;
	Node0x200ef10 -> Node0x200ef80;
	Node0x200ef80 -> Node0x200eff0;
	Node0x200eff0 -> Node0x200f060;
	Node0x200f060 -> Node0x200f0d0;
	Node0x200f0d0 -> Node0x200f140;
	Node0x200f140 -> Node0x200f1b0;
	Node0x200f1b0 -> Node0x200f220;
	Node0x200f220 -> Node0x200f290;
	Node0x200f290 -> Node0x200f300;
	Node0x200f300 -> Node0x200f370;
	Node0x200f370 -> Node0x200f3e0;
	Node0x200f3e0 -> Node0x200f450;
	Node0x200f450 -> Node0x200f4c0;
	Node0x200f4c0 -> Node0x200f530;
	Node0x200f530 -> Node0x200f5a0;
	Node0x200f5a0 -> Node0x200f610;
	Node0x200f610 -> Node0x200f680;
	Node0x200f680 -> Node0x200f6f0;
	Node0x200f6f0 -> Node0x200f760;
	Node0x200f760 -> Node0x200f7d0;
	Node0x200f7d0 -> Node0x200f840;
	Node0x200f840 -> Node0x200f8b0;
	Node0x200f8b0 -> Node0x200f920;
	Node0x200f920 -> Node0x200f990;
	Node0x200f990 -> Node0x200fa00;
	Node0x200fa00 -> Node0x200fa70;
	Node0x200fa70 -> Node0x200fae0;
	Node0x200fae0 -> Node0x200fb50;
	Node0x200fb50 -> Node0x200fbc0;
	Node0x200fbc0 -> Node0x200fc30;
	Node0x200fc30 -> Node0x200fca0;
	Node0x200fca0 -> Node0x200fd10;
	Node0x200fd10 -> Node0x200fd80;
	Node0x200fd80 -> Node0x200fdf0;
	Node0x200fdf0 -> Node0x200fe60;
	Node0x200fe60 -> Node0x200fed0;
	Node0x200fed0 -> Node0x1fac9d8;
	Node0x1fac9d8 -> Node0x200ff60;
	Node0x200ff60 -> Node0x20101b8;
	Node0x20101b8 -> Node0x2010318;
	Node0x2010318 -> Node0x2010428;
	Node0x2010428 -> Node0x20104e8;
edge [color=red]
	Node0x200ca98 -> Node0x200cc08;
	Node0x200cc08 -> Node0x200d088;
	Node0x200cb18 -> Node0x200d168;
	Node0x200d168 -> Node0x200d268;
	Node0x200cba8 -> Node0x200d328;
	Node0x200d328 -> Node0x200d3d8;
	Node0x200ca98 -> Node0x200d638;
	Node0x200cb18 -> Node0x200d638;
	Node0x200cba8 -> Node0x200d638;
	Node0x200ca98 -> Node0x200d6f8;
	Node0x200cb18 -> Node0x200e668;
	Node0x200cba8 -> Node0x200ecd8;
	Node0x200ecd8 -> Node0x200ed50;
	Node0x200d6f8 -> Node0x200ed50;
	Node0x200ed50 -> Node0x200edc0;
	Node0x200e668 -> Node0x200edc0;
	Node0x200e668 -> Node0x200ee30;
	Node0x200ecd8 -> Node0x200eea0;
	Node0x200d6f8 -> Node0x200ef10;
	Node0x200eea0 -> Node0x200ef10;
	Node0x200ef10 -> Node0x200ef80;
	Node0x200ee30 -> Node0x200ef80;
	Node0x200edc0 -> Node0x200eff0;
	Node0x200ef80 -> Node0x200eff0;
	Node0x200ecd8 -> Node0x200f060;
	Node0x200e668 -> Node0x200f060;
	Node0x200f060 -> Node0x200f0d0;
	Node0x200d6f8 -> Node0x200f0d0;
	Node0x200d6f8 -> Node0x200f140;
	Node0x200e668 -> Node0x200f1b0;
	Node0x200f140 -> Node0x200f1b0;
	Node0x200e668 -> Node0x200f220;
	Node0x200d6f8 -> Node0x200f220;
	Node0x200f220 -> Node0x200f290;
	Node0x200eea0 -> Node0x200f290;
	Node0x200ecd8 -> Node0x200f300;
	Node0x200e668 -> Node0x200f300;
	Node0x200f300 -> Node0x200f370;
	Node0x200f370 -> Node0x200f3e0;
	Node0x200f140 -> Node0x200f3e0;
	Node0x200f3e0 -> Node0x200f450;
	Node0x200e668 -> Node0x200f4c0;
	Node0x200eea0 -> Node0x200f4c0;
	Node0x200f4c0 -> Node0x200f530;
	Node0x200f140 -> Node0x200f530;
	Node0x200d6f8 -> Node0x200f5a0;
	Node0x200f370 -> Node0x200f5a0;
	Node0x200f5a0 -> Node0x200f610;
	Node0x200f4c0 -> Node0x200f680;
	Node0x200d6f8 -> Node0x200f680;
	Node0x200f680 -> Node0x200f6f0;
	Node0x200ecd8 -> Node0x200f760;
	Node0x200ee30 -> Node0x200f760;
	Node0x200f760 -> Node0x200f7d0;
	Node0x200f140 -> Node0x200f7d0;
	Node0x200ecd8 -> Node0x200f840;
	Node0x200e668 -> Node0x200f840;
	Node0x200f840 -> Node0x200f8b0;
	Node0x200f140 -> Node0x200f8b0;
	Node0x200f8b0 -> Node0x200f920;
	Node0x200f760 -> Node0x200f990;
	Node0x200d6f8 -> Node0x200f990;
	Node0x200f840 -> Node0x200fa00;
	Node0x200d6f8 -> Node0x200fa00;
	Node0x200f290 -> Node0x200fa70;
	Node0x200f1b0 -> Node0x200fa70;
	Node0x200fa70 -> Node0x200fae0;
	Node0x200f0d0 -> Node0x200fae0;
	Node0x200fae0 -> Node0x200fb50;
	Node0x200f530 -> Node0x200fb50;
	Node0x200fb50 -> Node0x200fbc0;
	Node0x200f7d0 -> Node0x200fbc0;
	Node0x200fbc0 -> Node0x200fc30;
	Node0x200f990 -> Node0x200fc30;
	Node0x200fc30 -> Node0x200fca0;
	Node0x200fa00 -> Node0x200fca0;
	Node0x200fca0 -> Node0x200fd10;
	Node0x200f450 -> Node0x200fd10;
	Node0x200fd10 -> Node0x200fd80;
	Node0x200f610 -> Node0x200fd80;
	Node0x200fd80 -> Node0x200fdf0;
	Node0x200f6f0 -> Node0x200fdf0;
	Node0x200fdf0 -> Node0x200fe60;
	Node0x200f920 -> Node0x200fe60;
	Node0x200eff0 -> Node0x200fed0;
	Node0x200fe60 -> Node0x200fed0;
	Node0x200fed0 -> Node0x1fac9d8;
	Node0x1fac9d8 -> Node0x200ff60;
	Node0x200d328 -> Node0x20101b8;
	Node0x200d168 -> Node0x2010318;
	Node0x200cc08 -> Node0x2010428;
}
