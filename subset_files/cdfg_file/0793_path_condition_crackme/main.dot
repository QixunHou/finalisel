digraph "DFG for'main' function" {
	Node0x18f0ad8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x18f0b58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x18f0be8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x18f1048[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x18f1128[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x18f1248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18f1480[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x18f1538[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18f24a8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x18f2b30[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x18f2ba0[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x18f2c10[shape=record, label="  %10 = sub i32 1, %6"];
	Node0x18f2c80[shape=record, label="  %11 = add i32 %10, %9"];
	Node0x18f2cf0[shape=record, label="  %12 = mul i32 %8, -5"];
	Node0x18f2d60[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x18f2dd0[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x18f2e40[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x18f2eb0[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x18f2f20[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x18f2f90[shape=record, label="  %18 = shl i32 %9, 2"];
	Node0x18f3000[shape=record, label="  %19 = mul i32 %13, -2"];
	Node0x18f3070[shape=record, label="  %20 = sub i32 %17, %14"];
	Node0x18f30e0[shape=record, label="  %21 = mul i32 %20, 3"];
	Node0x18f3150[shape=record, label="  %22 = add i32 %12, %6"];
	Node0x18f31c0[shape=record, label="  %23 = add i32 %22, %15"];
	Node0x18f3230[shape=record, label="  %24 = add i32 %23, %18"];
	Node0x18f32a0[shape=record, label="  %25 = add i32 %24, %19"];
	Node0x18f3310[shape=record, label="  %26 = add i32 %25, %21"];
	Node0x18f3380[shape=record, label="  %27 = icmp eq i32 %11, %26"];
	Node0x18919d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18f3410[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0x18f3668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18f37c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x18f3888[shape=record, label="  ret i32 0"];
	Node0x18f0ad8 -> Node0x18f0b58;
	Node0x18f0b58 -> Node0x18f0be8;
	Node0x18f0be8 -> Node0x18f1048;
	Node0x18f1048 -> Node0x18f1128;
	Node0x18f1128 -> Node0x18f1248;
	Node0x18f1248 -> Node0x18f1480;
	Node0x18f1480 -> Node0x18f1538;
	Node0x18f1538 -> Node0x18f24a8;
	Node0x18f24a8 -> Node0x18f2b30;
	Node0x18f2b30 -> Node0x18f2ba0;
	Node0x18f2ba0 -> Node0x18f2c10;
	Node0x18f2c10 -> Node0x18f2c80;
	Node0x18f2c80 -> Node0x18f2cf0;
	Node0x18f2cf0 -> Node0x18f2d60;
	Node0x18f2d60 -> Node0x18f2dd0;
	Node0x18f2dd0 -> Node0x18f2e40;
	Node0x18f2e40 -> Node0x18f2eb0;
	Node0x18f2eb0 -> Node0x18f2f20;
	Node0x18f2f20 -> Node0x18f2f90;
	Node0x18f2f90 -> Node0x18f3000;
	Node0x18f3000 -> Node0x18f3070;
	Node0x18f3070 -> Node0x18f30e0;
	Node0x18f30e0 -> Node0x18f3150;
	Node0x18f3150 -> Node0x18f31c0;
	Node0x18f31c0 -> Node0x18f3230;
	Node0x18f3230 -> Node0x18f32a0;
	Node0x18f32a0 -> Node0x18f3310;
	Node0x18f3310 -> Node0x18f3380;
	Node0x18f3380 -> Node0x18919d8;
	Node0x18919d8 -> Node0x18f3410;
	Node0x18f3410 -> Node0x18f3668;
	Node0x18f3668 -> Node0x18f37c8;
	Node0x18f37c8 -> Node0x18f3888;
edge [color=red]
	Node0x18f0ad8 -> Node0x18f0be8;
	Node0x18f0be8 -> Node0x18f1048;
	Node0x18f0b58 -> Node0x18f1128;
	Node0x18f1128 -> Node0x18f1248;
	Node0x18f0ad8 -> Node0x18f1480;
	Node0x18f0b58 -> Node0x18f1480;
	Node0x18f0ad8 -> Node0x18f1538;
	Node0x18f0b58 -> Node0x18f24a8;
	Node0x18f24a8 -> Node0x18f2b30;
	Node0x18f1538 -> Node0x18f2ba0;
	Node0x18f2b30 -> Node0x18f2ba0;
	Node0x18f1538 -> Node0x18f2c10;
	Node0x18f2c10 -> Node0x18f2c80;
	Node0x18f2ba0 -> Node0x18f2c80;
	Node0x18f2b30 -> Node0x18f2cf0;
	Node0x18f24a8 -> Node0x18f2d60;
	Node0x18f1538 -> Node0x18f2d60;
	Node0x18f24a8 -> Node0x18f2dd0;
	Node0x18f1538 -> Node0x18f2dd0;
	Node0x18f2dd0 -> Node0x18f2e40;
	Node0x18f24a8 -> Node0x18f2eb0;
	Node0x18f1538 -> Node0x18f2eb0;
	Node0x18f2eb0 -> Node0x18f2f20;
	Node0x18f2ba0 -> Node0x18f2f90;
	Node0x18f2d60 -> Node0x18f3000;
	Node0x18f2f20 -> Node0x18f3070;
	Node0x18f2dd0 -> Node0x18f3070;
	Node0x18f3070 -> Node0x18f30e0;
	Node0x18f2cf0 -> Node0x18f3150;
	Node0x18f1538 -> Node0x18f3150;
	Node0x18f3150 -> Node0x18f31c0;
	Node0x18f2e40 -> Node0x18f31c0;
	Node0x18f31c0 -> Node0x18f3230;
	Node0x18f2f90 -> Node0x18f3230;
	Node0x18f3230 -> Node0x18f32a0;
	Node0x18f3000 -> Node0x18f32a0;
	Node0x18f32a0 -> Node0x18f3310;
	Node0x18f30e0 -> Node0x18f3310;
	Node0x18f2c80 -> Node0x18f3380;
	Node0x18f3310 -> Node0x18f3380;
	Node0x18f3380 -> Node0x18919d8;
	Node0x18919d8 -> Node0x18f3410;
	Node0x18f1128 -> Node0x18f3668;
	Node0x18f0be8 -> Node0x18f37c8;
}
