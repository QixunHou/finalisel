digraph "DFG for'main' function" {
	Node0x13dc9d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x13dca58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x13dcae8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x13dcf48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x13dd028[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x13dd148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x13dd380[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x13dd438[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x13de3a8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x13dea30[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x13deaa0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x13deb10[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x13deb80[shape=record, label="  %11 = and i32 %6, %8"];
	Node0x13debf0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x13dec60[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x13decd0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x13ded40[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x13dedb0[shape=record, label="  %16 = mul i32 %15, -3"];
	Node0x13dee20[shape=record, label="  %17 = shl i32 %9, 1"];
	Node0x13dee90[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x13def00[shape=record, label="  %19 = sub i32 -2, %7"];
	Node0x13def70[shape=record, label="  %20 = sub i32 %19, %10"];
	Node0x13defe0[shape=record, label="  %21 = add i32 %20, %12"];
	Node0x13df050[shape=record, label="  %22 = add i32 %21, %14"];
	Node0x13df0c0[shape=record, label="  %23 = sub i32 %22, %11"];
	Node0x13df130[shape=record, label="  %24 = add i32 %23, %16"];
	Node0x13df1a0[shape=record, label="  %25 = sub i32 %24, %18"];
	Node0x13df210[shape=record, label="  %26 = icmp eq i32 %9, %25"];
	Node0x137d9d8[shape=record, label="  %27 = select i1 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x13df2a0[shape=record, label="  %28 = call i32 @puts(i8* nonnull dereferenceable(1) %27) #5"];
	Node0x13df4f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x13df658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x13df718[shape=record, label="  ret i32 0"];
	Node0x13dc9d8 -> Node0x13dca58;
	Node0x13dca58 -> Node0x13dcae8;
	Node0x13dcae8 -> Node0x13dcf48;
	Node0x13dcf48 -> Node0x13dd028;
	Node0x13dd028 -> Node0x13dd148;
	Node0x13dd148 -> Node0x13dd380;
	Node0x13dd380 -> Node0x13dd438;
	Node0x13dd438 -> Node0x13de3a8;
	Node0x13de3a8 -> Node0x13dea30;
	Node0x13dea30 -> Node0x13deaa0;
	Node0x13deaa0 -> Node0x13deb10;
	Node0x13deb10 -> Node0x13deb80;
	Node0x13deb80 -> Node0x13debf0;
	Node0x13debf0 -> Node0x13dec60;
	Node0x13dec60 -> Node0x13decd0;
	Node0x13decd0 -> Node0x13ded40;
	Node0x13ded40 -> Node0x13dedb0;
	Node0x13dedb0 -> Node0x13dee20;
	Node0x13dee20 -> Node0x13dee90;
	Node0x13dee90 -> Node0x13def00;
	Node0x13def00 -> Node0x13def70;
	Node0x13def70 -> Node0x13defe0;
	Node0x13defe0 -> Node0x13df050;
	Node0x13df050 -> Node0x13df0c0;
	Node0x13df0c0 -> Node0x13df130;
	Node0x13df130 -> Node0x13df1a0;
	Node0x13df1a0 -> Node0x13df210;
	Node0x13df210 -> Node0x137d9d8;
	Node0x137d9d8 -> Node0x13df2a0;
	Node0x13df2a0 -> Node0x13df4f8;
	Node0x13df4f8 -> Node0x13df658;
	Node0x13df658 -> Node0x13df718;
edge [color=red]
	Node0x13dc9d8 -> Node0x13dcae8;
	Node0x13dcae8 -> Node0x13dcf48;
	Node0x13dca58 -> Node0x13dd028;
	Node0x13dd028 -> Node0x13dd148;
	Node0x13dc9d8 -> Node0x13dd380;
	Node0x13dca58 -> Node0x13dd380;
	Node0x13dc9d8 -> Node0x13dd438;
	Node0x13dca58 -> Node0x13de3a8;
	Node0x13de3a8 -> Node0x13dea30;
	Node0x13dd438 -> Node0x13deaa0;
	Node0x13dea30 -> Node0x13deaa0;
	Node0x13de3a8 -> Node0x13deb10;
	Node0x13dd438 -> Node0x13deb10;
	Node0x13dd438 -> Node0x13deb80;
	Node0x13dea30 -> Node0x13deb80;
	Node0x13deb80 -> Node0x13debf0;
	Node0x13de3a8 -> Node0x13dec60;
	Node0x13dd438 -> Node0x13dec60;
	Node0x13dec60 -> Node0x13decd0;
	Node0x13deb10 -> Node0x13ded40;
	Node0x13ded40 -> Node0x13dedb0;
	Node0x13deaa0 -> Node0x13dee20;
	Node0x13dee20 -> Node0x13dee90;
	Node0x13de3a8 -> Node0x13def00;
	Node0x13def00 -> Node0x13def70;
	Node0x13deb10 -> Node0x13def70;
	Node0x13def70 -> Node0x13defe0;
	Node0x13debf0 -> Node0x13defe0;
	Node0x13defe0 -> Node0x13df050;
	Node0x13decd0 -> Node0x13df050;
	Node0x13df050 -> Node0x13df0c0;
	Node0x13deb80 -> Node0x13df0c0;
	Node0x13df0c0 -> Node0x13df130;
	Node0x13dedb0 -> Node0x13df130;
	Node0x13df130 -> Node0x13df1a0;
	Node0x13dee90 -> Node0x13df1a0;
	Node0x13deaa0 -> Node0x13df210;
	Node0x13df1a0 -> Node0x13df210;
	Node0x13df210 -> Node0x137d9d8;
	Node0x137d9d8 -> Node0x13df2a0;
	Node0x13dd028 -> Node0x13df4f8;
	Node0x13dcae8 -> Node0x13df658;
}
