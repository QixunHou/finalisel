digraph "DFG for'main' function" {
	Node0x1f4b5b8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f4b638[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f4b6c8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f4b728[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1f4bba8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f4bc88[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1f4bd88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f4be48[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1f4bef8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f4c158[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1f4c218[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f4c378[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f4c3d8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f4e7e0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1f4e9e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f4eb48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f4ec58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f4ed18[shape=record, label="  ret i32 0"];
	Node0x1f4b5b8 -> Node0x1f4b638;
	Node0x1f4b638 -> Node0x1f4b6c8;
	Node0x1f4b6c8 -> Node0x1f4b728;
	Node0x1f4b728 -> Node0x1f4bba8;
	Node0x1f4bba8 -> Node0x1f4bc88;
	Node0x1f4bc88 -> Node0x1f4bd88;
	Node0x1f4bd88 -> Node0x1f4be48;
	Node0x1f4be48 -> Node0x1f4bef8;
	Node0x1f4bef8 -> Node0x1f4c158;
	Node0x1f4c158 -> Node0x1f4c218;
	Node0x1f4c218 -> Node0x1f4c378;
	Node0x1f4c378 -> Node0x1f4c3d8;
	Node0x1f4c3d8 -> Node0x1f4e7e0;
	Node0x1f4e7e0 -> Node0x1f4e9e8;
	Node0x1f4e9e8 -> Node0x1f4eb48;
	Node0x1f4eb48 -> Node0x1f4ec58;
	Node0x1f4ec58 -> Node0x1f4ed18;
edge [color=red]
	Node0x1f4b5b8 -> Node0x1f4b728;
	Node0x1f4b728 -> Node0x1f4bba8;
	Node0x1f4b638 -> Node0x1f4bc88;
	Node0x1f4bc88 -> Node0x1f4bd88;
	Node0x1f4b6c8 -> Node0x1f4be48;
	Node0x1f4be48 -> Node0x1f4bef8;
	Node0x1f4b5b8 -> Node0x1f4c158;
	Node0x1f4b638 -> Node0x1f4c158;
	Node0x1f4b6c8 -> Node0x1f4c158;
	Node0x1f4b5b8 -> Node0x1f4c218;
	Node0x1f4b638 -> Node0x1f4c378;
	Node0x1f4b6c8 -> Node0x1f4c3d8;
	Node0x1f4c218 -> Node0x1f4e7e0;
	Node0x1f4c378 -> Node0x1f4e7e0;
	Node0x1f4c3d8 -> Node0x1f4e7e0;
	Node0x1f4be48 -> Node0x1f4e9e8;
	Node0x1f4bc88 -> Node0x1f4eb48;
	Node0x1f4b728 -> Node0x1f4ec58;
}
