digraph "DFG for'main' function" {
	Node0x1f81548[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f815c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f81658[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f816b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1f81b38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f81c18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1f81d18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f81dd8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1f81e88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f820e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1f821a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f82308[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f82368[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f888a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1f88aa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f88c08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f88d18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f88dd8[shape=record, label="  ret i32 0"];
	Node0x1f81548 -> Node0x1f815c8;
	Node0x1f815c8 -> Node0x1f81658;
	Node0x1f81658 -> Node0x1f816b8;
	Node0x1f816b8 -> Node0x1f81b38;
	Node0x1f81b38 -> Node0x1f81c18;
	Node0x1f81c18 -> Node0x1f81d18;
	Node0x1f81d18 -> Node0x1f81dd8;
	Node0x1f81dd8 -> Node0x1f81e88;
	Node0x1f81e88 -> Node0x1f820e8;
	Node0x1f820e8 -> Node0x1f821a8;
	Node0x1f821a8 -> Node0x1f82308;
	Node0x1f82308 -> Node0x1f82368;
	Node0x1f82368 -> Node0x1f888a0;
	Node0x1f888a0 -> Node0x1f88aa8;
	Node0x1f88aa8 -> Node0x1f88c08;
	Node0x1f88c08 -> Node0x1f88d18;
	Node0x1f88d18 -> Node0x1f88dd8;
edge [color=red]
	Node0x1f81548 -> Node0x1f816b8;
	Node0x1f816b8 -> Node0x1f81b38;
	Node0x1f815c8 -> Node0x1f81c18;
	Node0x1f81c18 -> Node0x1f81d18;
	Node0x1f81658 -> Node0x1f81dd8;
	Node0x1f81dd8 -> Node0x1f81e88;
	Node0x1f81548 -> Node0x1f820e8;
	Node0x1f815c8 -> Node0x1f820e8;
	Node0x1f81658 -> Node0x1f820e8;
	Node0x1f81548 -> Node0x1f821a8;
	Node0x1f815c8 -> Node0x1f82308;
	Node0x1f81658 -> Node0x1f82368;
	Node0x1f821a8 -> Node0x1f888a0;
	Node0x1f82308 -> Node0x1f888a0;
	Node0x1f82368 -> Node0x1f888a0;
	Node0x1f81dd8 -> Node0x1f88aa8;
	Node0x1f81c18 -> Node0x1f88c08;
	Node0x1f816b8 -> Node0x1f88d18;
}
