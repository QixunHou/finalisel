digraph "DFG for'main' function" {
	Node0x9d3e98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x9d3f18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x9d3fa8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x9d4008[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x9d40b8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x9d44e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x9d45c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x9d46c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9d4788[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x9d4838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x9d48f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x9d49a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x9cec00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x9d4ba8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x9d5b18[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x9d6188[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x9d61e8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x9d6260[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x9d62d0[shape=record, label="  %15 = xor i32 %12, %11"];
	Node0x9d6340[shape=record, label="  %16 = xor i32 %13, %10"];
	Node0x9d63b0[shape=record, label="  %17 = add i32 %15, %16"];
	Node0x9d6420[shape=record, label="  %18 = sub i32 0, %17"];
	Node0x9d6490[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x9d6500[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x9d6570[shape=record, label="  %21 = and i32 %12, %11"];
	Node0x9d65e0[shape=record, label="  %22 = and i32 %11, %19"];
	Node0x9d6650[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x9d66c0[shape=record, label="  %24 = mul i32 %15, -5"];
	Node0x9d6730[shape=record, label="  %25 = or i32 %12, %11"];
	Node0x9d67a0[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x9d6810[shape=record, label="  %27 = and i32 %12, %14"];
	Node0x9d6880[shape=record, label="  %28 = shl i32 %22, 3"];
	Node0x9d68f0[shape=record, label="  %29 = shl i32 %21, 1"];
	Node0x9d6960[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x9d69d0[shape=record, label="  %31 = or i32 %13, %30"];
	Node0x9d6a40[shape=record, label="  %32 = shl i32 %16, 1"];
	Node0x9d6ab0[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x9d6b20[shape=record, label="  %34 = or i32 %13, %10"];
	Node0x9d6b90[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x9d6c00[shape=record, label="  %36 = xor i32 %35, -2"];
	Node0x9d6c70[shape=record, label="  %37 = and i32 %13, %30"];
	Node0x9d6ce0[shape=record, label="  %38 = mul i32 %37, -3"];
	Node0x9d6d50[shape=record, label="  %39 = add i32 %31, %12"];
	Node0x9d6dc0[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x9d6e30[shape=record, label="  %41 = sub i32 3, %11"];
	Node0x9d6ea0[shape=record, label="  %42 = add i32 %41, %14"];
	Node0x9d6f10[shape=record, label="  %43 = sub i32 %42, %20"];
	Node0x9d6f80[shape=record, label="  %44 = add i32 %43, %21"];
	Node0x9d6ff0[shape=record, label="  %45 = add i32 %44, %23"];
	Node0x9d7060[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x9d70d0[shape=record, label="  %47 = add i32 %46, %27"];
	Node0x9d7140[shape=record, label="  %48 = add i32 %47, %13"];
	Node0x9d71b0[shape=record, label="  %49 = add i32 %48, %24"];
	Node0x9d7220[shape=record, label="  %50 = add i32 %49, %28"];
	Node0x9d7290[shape=record, label="  %51 = sub i32 %50, %29"];
	Node0x9d7300[shape=record, label="  %52 = add i32 %51, %34"];
	Node0x9d7370[shape=record, label="  %53 = add i32 %52, %38"];
	Node0x9d73e0[shape=record, label="  %54 = sub i32 %53, %33"];
	Node0x9d7450[shape=record, label="  %55 = add i32 %54, %36"];
	Node0x9d74c0[shape=record, label="  %56 = add i32 %55, %40"];
	Node0x9d7530[shape=record, label="  %57 = icmp eq i32 %56, %18"];
	Node0x9738b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x9d75c0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0x9d7868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x9d79c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x9d7ad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9d7be8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x9d7ca8[shape=record, label="  ret i32 0"];
	Node0x9d3e98 -> Node0x9d3f18;
	Node0x9d3f18 -> Node0x9d3fa8;
	Node0x9d3fa8 -> Node0x9d4008;
	Node0x9d4008 -> Node0x9d40b8;
	Node0x9d40b8 -> Node0x9d44e8;
	Node0x9d44e8 -> Node0x9d45c8;
	Node0x9d45c8 -> Node0x9d46c8;
	Node0x9d46c8 -> Node0x9d4788;
	Node0x9d4788 -> Node0x9d4838;
	Node0x9d4838 -> Node0x9d48f8;
	Node0x9d48f8 -> Node0x9d49a8;
	Node0x9d49a8 -> Node0x9cec00;
	Node0x9cec00 -> Node0x9d4ba8;
	Node0x9d4ba8 -> Node0x9d5b18;
	Node0x9d5b18 -> Node0x9d6188;
	Node0x9d6188 -> Node0x9d61e8;
	Node0x9d61e8 -> Node0x9d6260;
	Node0x9d6260 -> Node0x9d62d0;
	Node0x9d62d0 -> Node0x9d6340;
	Node0x9d6340 -> Node0x9d63b0;
	Node0x9d63b0 -> Node0x9d6420;
	Node0x9d6420 -> Node0x9d6490;
	Node0x9d6490 -> Node0x9d6500;
	Node0x9d6500 -> Node0x9d6570;
	Node0x9d6570 -> Node0x9d65e0;
	Node0x9d65e0 -> Node0x9d6650;
	Node0x9d6650 -> Node0x9d66c0;
	Node0x9d66c0 -> Node0x9d6730;
	Node0x9d6730 -> Node0x9d67a0;
	Node0x9d67a0 -> Node0x9d6810;
	Node0x9d6810 -> Node0x9d6880;
	Node0x9d6880 -> Node0x9d68f0;
	Node0x9d68f0 -> Node0x9d6960;
	Node0x9d6960 -> Node0x9d69d0;
	Node0x9d69d0 -> Node0x9d6a40;
	Node0x9d6a40 -> Node0x9d6ab0;
	Node0x9d6ab0 -> Node0x9d6b20;
	Node0x9d6b20 -> Node0x9d6b90;
	Node0x9d6b90 -> Node0x9d6c00;
	Node0x9d6c00 -> Node0x9d6c70;
	Node0x9d6c70 -> Node0x9d6ce0;
	Node0x9d6ce0 -> Node0x9d6d50;
	Node0x9d6d50 -> Node0x9d6dc0;
	Node0x9d6dc0 -> Node0x9d6e30;
	Node0x9d6e30 -> Node0x9d6ea0;
	Node0x9d6ea0 -> Node0x9d6f10;
	Node0x9d6f10 -> Node0x9d6f80;
	Node0x9d6f80 -> Node0x9d6ff0;
	Node0x9d6ff0 -> Node0x9d7060;
	Node0x9d7060 -> Node0x9d70d0;
	Node0x9d70d0 -> Node0x9d7140;
	Node0x9d7140 -> Node0x9d71b0;
	Node0x9d71b0 -> Node0x9d7220;
	Node0x9d7220 -> Node0x9d7290;
	Node0x9d7290 -> Node0x9d7300;
	Node0x9d7300 -> Node0x9d7370;
	Node0x9d7370 -> Node0x9d73e0;
	Node0x9d73e0 -> Node0x9d7450;
	Node0x9d7450 -> Node0x9d74c0;
	Node0x9d74c0 -> Node0x9d7530;
	Node0x9d7530 -> Node0x9738b8;
	Node0x9738b8 -> Node0x9d75c0;
	Node0x9d75c0 -> Node0x9d7868;
	Node0x9d7868 -> Node0x9d79c8;
	Node0x9d79c8 -> Node0x9d7ad8;
	Node0x9d7ad8 -> Node0x9d7be8;
	Node0x9d7be8 -> Node0x9d7ca8;
edge [color=red]
	Node0x9d3e98 -> Node0x9d40b8;
	Node0x9d40b8 -> Node0x9d44e8;
	Node0x9d3f18 -> Node0x9d45c8;
	Node0x9d45c8 -> Node0x9d46c8;
	Node0x9d3fa8 -> Node0x9d4788;
	Node0x9d4788 -> Node0x9d4838;
	Node0x9d4008 -> Node0x9d48f8;
	Node0x9d48f8 -> Node0x9d49a8;
	Node0x9d3e98 -> Node0x9cec00;
	Node0x9d3f18 -> Node0x9cec00;
	Node0x9d3fa8 -> Node0x9cec00;
	Node0x9d4008 -> Node0x9cec00;
	Node0x9d3e98 -> Node0x9d4ba8;
	Node0x9d3f18 -> Node0x9d5b18;
	Node0x9d3fa8 -> Node0x9d6188;
	Node0x9d4008 -> Node0x9d61e8;
	Node0x9d5b18 -> Node0x9d6260;
	Node0x9d6188 -> Node0x9d62d0;
	Node0x9d5b18 -> Node0x9d62d0;
	Node0x9d61e8 -> Node0x9d6340;
	Node0x9d4ba8 -> Node0x9d6340;
	Node0x9d62d0 -> Node0x9d63b0;
	Node0x9d6340 -> Node0x9d63b0;
	Node0x9d63b0 -> Node0x9d6420;
	Node0x9d6188 -> Node0x9d6490;
	Node0x9d6490 -> Node0x9d6500;
	Node0x9d6188 -> Node0x9d6570;
	Node0x9d5b18 -> Node0x9d6570;
	Node0x9d5b18 -> Node0x9d65e0;
	Node0x9d6490 -> Node0x9d65e0;
	Node0x9d65e0 -> Node0x9d6650;
	Node0x9d62d0 -> Node0x9d66c0;
	Node0x9d6188 -> Node0x9d6730;
	Node0x9d5b18 -> Node0x9d6730;
	Node0x9d6730 -> Node0x9d67a0;
	Node0x9d6188 -> Node0x9d6810;
	Node0x9d6260 -> Node0x9d6810;
	Node0x9d65e0 -> Node0x9d6880;
	Node0x9d6570 -> Node0x9d68f0;
	Node0x9d4ba8 -> Node0x9d6960;
	Node0x9d61e8 -> Node0x9d69d0;
	Node0x9d6960 -> Node0x9d69d0;
	Node0x9d6340 -> Node0x9d6a40;
	Node0x9d6a40 -> Node0x9d6ab0;
	Node0x9d61e8 -> Node0x9d6b20;
	Node0x9d4ba8 -> Node0x9d6b20;
	Node0x9d6b20 -> Node0x9d6b90;
	Node0x9d6b90 -> Node0x9d6c00;
	Node0x9d61e8 -> Node0x9d6c70;
	Node0x9d6960 -> Node0x9d6c70;
	Node0x9d6c70 -> Node0x9d6ce0;
	Node0x9d69d0 -> Node0x9d6d50;
	Node0x9d6188 -> Node0x9d6d50;
	Node0x9d6d50 -> Node0x9d6dc0;
	Node0x9d5b18 -> Node0x9d6e30;
	Node0x9d6e30 -> Node0x9d6ea0;
	Node0x9d6260 -> Node0x9d6ea0;
	Node0x9d6ea0 -> Node0x9d6f10;
	Node0x9d6500 -> Node0x9d6f10;
	Node0x9d6f10 -> Node0x9d6f80;
	Node0x9d6570 -> Node0x9d6f80;
	Node0x9d6f80 -> Node0x9d6ff0;
	Node0x9d6650 -> Node0x9d6ff0;
	Node0x9d6ff0 -> Node0x9d7060;
	Node0x9d67a0 -> Node0x9d7060;
	Node0x9d7060 -> Node0x9d70d0;
	Node0x9d6810 -> Node0x9d70d0;
	Node0x9d70d0 -> Node0x9d7140;
	Node0x9d61e8 -> Node0x9d7140;
	Node0x9d7140 -> Node0x9d71b0;
	Node0x9d66c0 -> Node0x9d71b0;
	Node0x9d71b0 -> Node0x9d7220;
	Node0x9d6880 -> Node0x9d7220;
	Node0x9d7220 -> Node0x9d7290;
	Node0x9d68f0 -> Node0x9d7290;
	Node0x9d7290 -> Node0x9d7300;
	Node0x9d6b20 -> Node0x9d7300;
	Node0x9d7300 -> Node0x9d7370;
	Node0x9d6ce0 -> Node0x9d7370;
	Node0x9d7370 -> Node0x9d73e0;
	Node0x9d6ab0 -> Node0x9d73e0;
	Node0x9d73e0 -> Node0x9d7450;
	Node0x9d6c00 -> Node0x9d7450;
	Node0x9d7450 -> Node0x9d74c0;
	Node0x9d6dc0 -> Node0x9d74c0;
	Node0x9d74c0 -> Node0x9d7530;
	Node0x9d6420 -> Node0x9d7530;
	Node0x9d7530 -> Node0x9738b8;
	Node0x9738b8 -> Node0x9d75c0;
	Node0x9d48f8 -> Node0x9d7868;
	Node0x9d4788 -> Node0x9d79c8;
	Node0x9d45c8 -> Node0x9d7ad8;
	Node0x9d40b8 -> Node0x9d7be8;
}
