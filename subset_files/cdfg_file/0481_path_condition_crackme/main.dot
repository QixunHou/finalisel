digraph "DFG for'main' function" {
	Node0x1c2f348[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c2f3c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c2f458[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1c2f8b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c2f998[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1c2fab8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c2fcf0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1c2fda8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c30d18[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c313a0[shape=record, label="  %8 = add i32 %7, %6"];
	Node0x1c31410[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x1c31480[shape=record, label="  %10 = shl i32 %7, 1"];
	Node0x1c314f0[shape=record, label="  %11 = sub i32 %10, %9"];
	Node0x1c31560[shape=record, label="  %12 = xor i32 %7, 2147483647"];
	Node0x1c315d0[shape=record, label="  %13 = and i32 %12, %6"];
	Node0x1c31640[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1c316b0[shape=record, label="  %15 = add i32 %11, %14"];
	Node0x1c31720[shape=record, label="  %16 = icmp eq i32 %8, %15"];
	Node0x1bd09d8[shape=record, label="  %17 = select i1 %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c317b0[shape=record, label="  %18 = call i32 @puts(i8* nonnull dereferenceable(1) %17) #5"];
	Node0x1c31a08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c31b68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c31c28[shape=record, label="  ret i32 0"];
	Node0x1c2f348 -> Node0x1c2f3c8;
	Node0x1c2f3c8 -> Node0x1c2f458;
	Node0x1c2f458 -> Node0x1c2f8b8;
	Node0x1c2f8b8 -> Node0x1c2f998;
	Node0x1c2f998 -> Node0x1c2fab8;
	Node0x1c2fab8 -> Node0x1c2fcf0;
	Node0x1c2fcf0 -> Node0x1c2fda8;
	Node0x1c2fda8 -> Node0x1c30d18;
	Node0x1c30d18 -> Node0x1c313a0;
	Node0x1c313a0 -> Node0x1c31410;
	Node0x1c31410 -> Node0x1c31480;
	Node0x1c31480 -> Node0x1c314f0;
	Node0x1c314f0 -> Node0x1c31560;
	Node0x1c31560 -> Node0x1c315d0;
	Node0x1c315d0 -> Node0x1c31640;
	Node0x1c31640 -> Node0x1c316b0;
	Node0x1c316b0 -> Node0x1c31720;
	Node0x1c31720 -> Node0x1bd09d8;
	Node0x1bd09d8 -> Node0x1c317b0;
	Node0x1c317b0 -> Node0x1c31a08;
	Node0x1c31a08 -> Node0x1c31b68;
	Node0x1c31b68 -> Node0x1c31c28;
edge [color=red]
	Node0x1c2f348 -> Node0x1c2f458;
	Node0x1c2f458 -> Node0x1c2f8b8;
	Node0x1c2f3c8 -> Node0x1c2f998;
	Node0x1c2f998 -> Node0x1c2fab8;
	Node0x1c2f348 -> Node0x1c2fcf0;
	Node0x1c2f3c8 -> Node0x1c2fcf0;
	Node0x1c2f348 -> Node0x1c2fda8;
	Node0x1c2f3c8 -> Node0x1c30d18;
	Node0x1c30d18 -> Node0x1c313a0;
	Node0x1c2fda8 -> Node0x1c313a0;
	Node0x1c30d18 -> Node0x1c31410;
	Node0x1c2fda8 -> Node0x1c31410;
	Node0x1c30d18 -> Node0x1c31480;
	Node0x1c31480 -> Node0x1c314f0;
	Node0x1c31410 -> Node0x1c314f0;
	Node0x1c30d18 -> Node0x1c31560;
	Node0x1c31560 -> Node0x1c315d0;
	Node0x1c2fda8 -> Node0x1c315d0;
	Node0x1c315d0 -> Node0x1c31640;
	Node0x1c314f0 -> Node0x1c316b0;
	Node0x1c31640 -> Node0x1c316b0;
	Node0x1c313a0 -> Node0x1c31720;
	Node0x1c316b0 -> Node0x1c31720;
	Node0x1c31720 -> Node0x1bd09d8;
	Node0x1bd09d8 -> Node0x1c317b0;
	Node0x1c2f998 -> Node0x1c31a08;
	Node0x1c2f458 -> Node0x1c31b68;
}
