; ModuleID = '../.././c_source_file/1160_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1160_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %1, -1
  %5 = and i32 %4, %0
  %6 = xor i32 %2, %1
  %7 = or i32 %6, %5
  %8 = sub i32 0, %7
  %9 = and i32 %1, %0
  %10 = xor i32 %2, -1
  %11 = or i32 %10, %1
  %12 = xor i32 %11, %9
  %13 = shl i32 %12, 2
  %14 = or i32 %2, %0
  %15 = xor i32 %14, -1
  %16 = or i32 %9, %15
  %17 = xor i32 %1, %0
  %18 = xor i32 %17, -1
  %19 = or i32 %10, %18
  %20 = or i32 %10, %0
  %21 = and i32 %20, %1
  %22 = xor i32 %6, -1
  %23 = and i32 %22, %0
  %24 = add i32 %1, 1
  %25 = and i32 %2, %0
  %26 = or i32 %25, %18
  %27 = and i32 %14, %17
  %28 = or i32 %4, %0
  %29 = xor i32 %28, -1
  %30 = or i32 %22, %29
  %31 = and i32 %2, %1
  %32 = or i32 %22, %0
  %33 = xor i32 %20, -1
  %34 = or i32 %33, %18
  %35 = and i32 %28, %22
  %36 = or i32 %1, %0
  %37 = xor i32 %36, -1
  %38 = or i32 %37, %2
  %39 = shl i32 %38, 1
  %40 = and i32 %4, %2
  %41 = and i32 %40, %0
  %42 = or i32 %6, %0
  %43 = xor i32 %42, -1
  %44 = or i32 %41, %43
  %45 = xor i32 %11, -1
  %46 = add i32 %11, 1
  %47 = xor i32 %2, %0
  %48 = xor i32 %47, -1
  %49 = and i32 %48, %18
  %50 = and i32 %20, %18
  %51 = or i32 %2, %1
  %52 = and i32 %14, %4
  %53 = xor i32 %0, -1
  %54 = or i32 %45, %53
  %55 = xor i32 %51, -1
  %56 = or i32 %25, %55
  %57 = xor i32 %45, %0
  %58 = shl i32 %57, 1
  %59 = and i32 %10, %1
  %60 = xor i32 %59, %0
  %61 = and i32 %22, %53
  %62 = and i32 %40, %53
  %63 = or i32 %4, %2
  %64 = and i32 %63, %0
  %65 = or i32 %62, %64
  %66 = or i32 %22, %53
  %67 = xor i32 %33, %1
  %68 = xor i32 %59, -1
  %69 = xor i32 %5, %68
  %70 = or i32 %6, %9
  %71 = or i32 %51, %0
  %72 = or i32 %9, %55
  %73 = xor i32 %9, -1
  %74 = and i32 %47, %73
  %75 = or i32 %17, %33
  %76 = shl i32 %75, 1
  %77 = xor i32 %6, %0
  %78 = and i32 %47, %1
  %79 = or i32 %5, %22
  %80 = xor i32 %77, -1
  %81 = xor i32 %41, %80
  %82 = and i32 %31, %0
  %83 = xor i32 %51, %0
  %84 = or i32 %82, %83
  %85 = xor i32 %5, -1
  %86 = and i32 %85, %2
  %87 = and i32 %68, %0
  %88 = xor i32 %25, -1
  %89 = and i32 %17, %88
  %90 = or i32 %11, %53
  %91 = and i32 %68, %53
  %92 = and i32 %10, %0
  %93 = xor i32 %92, -1
  %94 = xor i32 %93, %1
  %95 = or i32 %59, %0
  %96 = shl i32 %95, 1
  %97 = xor i32 %11, %0
  %98 = xor i32 %31, -1
  %99 = xor i32 %92, %98
  %100 = and i32 %73, %2
  %101 = and i32 %88, %18
  %102 = and i32 %47, %18
  %103 = and i32 %47, %36
  %104 = xor i32 %37, %2
  %105 = or i32 %68, %0
  %106 = and i32 %6, %73
  %107 = or i32 %47, %29
  %108 = shl i32 %107, 1
  %109 = or i32 %17, %15
  %110 = xor i32 %25, %28
  %111 = shl i32 %110, 1
  %112 = and i32 %17, %93
  %113 = and i32 %47, %28
  %114 = or i32 %15, %1
  %115 = or i32 %31, %5
  %116 = shl i32 %47, 2
  %117 = or i32 %48, %1
  %118 = or i32 %9, %33
  %119 = shl i32 %118, 1
  %120 = or i32 %25, %1
  %121 = and i32 %48, %85
  %122 = shl i32 %121, 1
  %123 = xor i32 %29, %2
  %124 = or i32 %92, %18
  %125 = or i32 %82, %80
  %126 = and i32 %88, %1
  %127 = shl i32 %126, 1
  %128 = or i32 %68, %53
  %129 = and i32 %10, %73
  %130 = shl i32 %129, 1
  %131 = xor i32 %51, %9
  %132 = and i32 %48, %73
  %133 = xor i32 %14, %9
  %134 = shl i32 %133, 1
  %135 = xor i32 %20, %9
  %136 = and i32 %28, %10
  %137 = or i32 %17, %2
  %138 = shl i32 %137, 1
  %139 = or i32 %51, %53
  %140 = or i32 %47, %5
  %141 = or i32 %9, %2
  %142 = xor i32 %85, %2
  %143 = or i32 %6, %53
  %144 = xor i32 %143, -1
  %145 = or i32 %62, %144
  %146 = and i32 %28, %2
  %147 = xor i32 %14, %1
  %148 = xor i32 %36, %2
  %149 = add i32 %25, 1
  %150 = or i32 %47, %1
  %151 = and i32 %93, %4
  %152 = and i32 %28, %48
  %153 = shl i32 %6, 2
  %154 = and i32 %20, %4
  %155 = shl i32 %154, 1
  %156 = xor i32 %64, -1
  %157 = xor i32 %62, %156
  %158 = shl i32 %55, 1
  %159 = xor i32 %73, %2
  %160 = or i32 %10, %29
  %161 = xor i32 %31, %0
  %162 = and i32 %6, %28
  %163 = or i32 %9, %45
  %164 = and i32 %47, %17
  %165 = and i32 %36, %2
  %166 = xor i32 %82, -1
  %167 = xor i32 %83, %166
  %168 = or i32 %31, %0
  %169 = or i32 %33, %4
  %170 = or i32 %17, %10
  %171 = and i32 %6, %53
  %172 = shl i32 %68, 1
  %173 = or i32 %18, %2
  %174 = and i32 %51, %53
  %175 = or i32 %82, %174
  %176 = and i32 %31, %53
  %177 = and i32 %51, %0
  %178 = xor i32 %176, -1
  %179 = xor i32 %177, %178
  %180 = and i32 %14, %1
  %181 = or i32 %92, %31
  %182 = xor i32 %41, %42
  %183 = xor i32 %82, %77
  %184 = xor i32 %68, %0
  %185 = or i32 %98, %0
  %186 = or i32 %6, %29
  %187 = shl i32 %186, 1
  %188 = xor i32 %63, %0
  %189 = or i32 %41, %188
  %190 = or i32 %9, %48
  %191 = xor i32 %25, %68
  %192 = or i32 %45, %0
  %193 = and i32 %36, %10
  %194 = shl i32 %193, 1
  %195 = or i32 %92, %1
  %196 = xor i32 %15, %1
  %197 = or i32 %55, %53
  %198 = and i32 %22, %73
  %199 = and i32 %47, %4
  %200 = and i32 %22, %85
  %201 = xor i32 %9, %2
  %202 = add i32 %31, 1
  %203 = or i32 %6, %37
  %204 = and i32 %17, %2
  %205 = and i32 %17, %10
  %206 = or i32 %47, %17
  %207 = or i32 %25, %4
  %208 = and i32 %10, %18
  %209 = and i32 %47, %85
  %210 = xor i32 %25, %51
  %211 = xor i32 %20, %1
  %212 = and i32 %14, %18
  %213 = or i32 %92, %17
  %214 = shl i32 %213, 1
  %215 = xor i32 %188, 2147483647
  %216 = xor i32 %215, %41
  %217 = shl i32 %177, 1
  %218 = or i32 %82, %171
  %219 = or i32 %47, %37
  %220 = xor i32 %98, %0
  %221 = shl i32 %220, 1
  %222 = or i32 %9, %22
  %223 = or i32 %47, %18
  %224 = add i32 %14, 1
  %225 = and i32 %6, %85
  %226 = or i32 %5, %10
  %227 = or i32 %11, %0
  %228 = or i32 %92, %4
  %229 = xor i32 %174, %166
  %230 = and i32 %17, %48
  %231 = shl i32 %230, 1
  %232 = and i32 %88, %4
  %233 = xor i32 %22, %0
  %234 = shl i32 %233, 1
  %235 = or i32 %47, %4
  %236 = and i32 %48, %1
  %237 = or i32 %25, %29
  %238 = xor i32 %62, %143
  %239 = and i32 %63, %53
  %240 = xor i32 %239, -1
  %241 = xor i32 %41, %240
  %242 = and i32 %18, %2
  %243 = or i32 %10, %37
  %244 = shl i32 %243, 1
  %245 = and i32 %98, %53
  %246 = or i32 %41, %239
  %247 = add i32 %5, 1
  %248 = or i32 %17, %48
  %249 = or i32 %48, %18
  %250 = shl i32 %249, 1
  %251 = or i32 %25, %37
  %252 = or i32 %15, %18
  %253 = and i32 %36, %22
  %254 = shl i32 %253, 1
  %255 = or i32 %176, %177
  %256 = or i32 %41, %77
  %257 = or i32 %55, %0
  %258 = or i32 %48, %37
  %259 = and i32 %11, %0
  %260 = xor i32 %25, %36
  %261 = or i32 %25, %59
  %262 = and i32 %93, %18
  %263 = and i32 %48, %4
  %264 = and i32 %36, %48
  %265 = and i32 %93, %1
  %266 = and i32 %6, %36
  %267 = and i32 %6, %0
  %268 = xor i32 %28, %2
  %269 = and i32 %20, %17
  %270 = xor i32 %25, %1
  %271 = or i32 %33, %1
  %272 = xor i32 %92, %1
  %273 = or i32 %22, %37
  %274 = and i32 %98, %0
  %275 = or i32 %5, %2
  %276 = xor i32 %55, %0
  %277 = shl i32 %276, 1
  %278 = or i32 %29, %2
  %279 = or i32 %176, %267
  %280 = or i32 %48, %4
  %281 = shl i32 %280, 1
  %282 = or i32 %47, %9
  %283 = or i32 %5, %48
  %284 = xor i32 %92, %11
  %285 = shl i32 %29, 1
  %286 = and i32 %10, %85
  %287 = or i32 %31, %53
  %288 = and i32 %11, %53
  %289 = xor i32 %171, %166
  %290 = xor i32 %267, %178
  %291 = and i32 %55, %53
  %292 = and i32 %59, %53
  %293 = mul i32 %292, 15
  %294 = and i32 %55, %0
  %295 = and i32 %59, %0
  %296 = mul i32 %295, 37
  %297 = and i32 %45, %53
  %298 = mul i32 %297, 17
  %299 = mul i32 %176, 18
  %300 = and i32 %45, %0
  %301 = mul i32 %300, 10
  %302 = add i32 %17, %53
  %303 = add i32 %302, %37
  %304 = add i32 %303, %268
  %305 = add i32 %304, %226
  %306 = add i32 %305, %201
  %307 = add i32 %306, %146
  %308 = add i32 %307, %291
  %309 = add i32 %308, %263
  %310 = add i32 %309, %199
  %311 = add i32 %310, %197
  %312 = add i32 %311, %181
  %313 = add i32 %312, %135
  %314 = add i32 %313, %120
  %315 = add i32 %314, %117
  %316 = add i32 %315, %90
  %317 = add i32 %316, %23
  %318 = add i32 %317, %246
  %319 = add i32 %318, %216
  %320 = shl i32 %319, 1
  %321 = sub i32 %82, %104
  %322 = add i32 %321, %259
  %323 = sub i32 %322, %219
  %324 = add i32 %323, %145
  %325 = mul i32 %324, 5
  %326 = sub i32 %136, %59
  %327 = add i32 %326, %171
  %328 = add i32 %327, %294
  %329 = mul i32 %328, 3
  %330 = sub i32 %24, %0
  %331 = sub i32 %330, %1
  %332 = add i32 %331, %18
  %333 = add i32 %332, %10
  %334 = add i32 %333, %28
  %335 = sub i32 %334, %2
  %336 = add i32 %335, %73
  %337 = add i32 %336, %247
  %338 = add i32 %337, %36
  %339 = add i32 %338, %5
  %340 = sub i32 %339, %19
  %341 = sub i32 %340, %31
  %342 = add i32 %341, %46
  %343 = sub i32 %342, %51
  %344 = sub i32 %343, %20
  %345 = add i32 %344, %48
  %346 = add i32 %345, %86
  %347 = add i32 %346, %11
  %348 = sub i32 %347, %100
  %349 = sub i32 %348, %123
  %350 = add i32 %349, %14
  %351 = sub i32 %350, %141
  %352 = add i32 %351, %142
  %353 = add i32 %352, %148
  %354 = add i32 %353, %149
  %355 = sub i32 %354, %159
  %356 = add i32 %355, %160
  %357 = add i32 %356, %165
  %358 = sub i32 %357, %170
  %359 = add i32 %358, %173
  %360 = add i32 %359, %202
  %361 = add i32 %360, %204
  %362 = sub i32 %361, %205
  %363 = add i32 %362, %208
  %364 = add i32 %363, %224
  %365 = add i32 %364, %33
  %366 = sub i32 %365, %242
  %367 = add i32 %366, %25
  %368 = add i32 %367, %22
  %369 = add i32 %368, %275
  %370 = add i32 %369, %278
  %371 = sub i32 %370, %285
  %372 = sub i32 %371, %286
  %373 = sub i32 %372, %16
  %374 = sub i32 %373, %21
  %375 = sub i32 %374, %26
  %376 = add i32 %375, %27
  %377 = sub i32 %376, %30
  %378 = sub i32 %377, %32
  %379 = add i32 %378, %34
  %380 = add i32 %379, %35
  %381 = sub i32 %380, %39
  %382 = sub i32 %381, %49
  %383 = sub i32 %382, %50
  %384 = sub i32 %383, %52
  %385 = sub i32 %384, %54
  %386 = add i32 %385, %56
  %387 = add i32 %386, %60
  %388 = sub i32 %387, %61
  %389 = add i32 %388, %66
  %390 = add i32 %389, %67
  %391 = add i32 %390, %69
  %392 = sub i32 %391, %70
  %393 = add i32 %392, %71
  %394 = add i32 %393, %72
  %395 = sub i32 %394, %74
  %396 = sub i32 %395, %77
  %397 = sub i32 %396, %78
  %398 = add i32 %397, %79
  %399 = add i32 %398, %87
  %400 = sub i32 %399, %89
  %401 = add i32 %400, %91
  %402 = sub i32 %401, %94
  %403 = add i32 %402, %97
  %404 = add i32 %403, %99
  %405 = sub i32 %404, %101
  %406 = add i32 %405, %102
  %407 = sub i32 %406, %103
  %408 = add i32 %407, %105
  %409 = add i32 %408, %106
  %410 = sub i32 %409, %109
  %411 = add i32 %410, %112
  %412 = sub i32 %411, %113
  %413 = sub i32 %412, %114
  %414 = sub i32 %413, %115
  %415 = sub i32 %414, %116
  %416 = sub i32 %415, %124
  %417 = add i32 %416, %128
  %418 = sub i32 %417, %130
  %419 = add i32 %418, %131
  %420 = add i32 %419, %132
  %421 = sub i32 %420, %138
  %422 = add i32 %421, %139
  %423 = sub i32 %422, %140
  %424 = add i32 %423, %147
  %425 = sub i32 %424, %150
  %426 = add i32 %425, %151
  %427 = add i32 %426, %152
  %428 = sub i32 %427, %153
  %429 = sub i32 %428, %158
  %430 = add i32 %429, %161
  %431 = sub i32 %430, %162
  %432 = sub i32 %431, %163
  %433 = sub i32 %432, %164
  %434 = add i32 %433, %168
  %435 = sub i32 %434, %169
  %436 = sub i32 %435, %172
  %437 = sub i32 %436, %180
  %438 = sub i32 %437, %143
  %439 = sub i32 %438, %184
  %440 = sub i32 %439, %185
  %441 = add i32 %440, %190
  %442 = sub i32 %441, %191
  %443 = sub i32 %442, %192
  %444 = sub i32 %443, %194
  %445 = sub i32 %444, %195
  %446 = sub i32 %445, %196
  %447 = sub i32 %446, %198
  %448 = add i32 %447, %200
  %449 = add i32 %448, %203
  %450 = add i32 %449, %206
  %451 = sub i32 %450, %207
  %452 = sub i32 %451, %209
  %453 = sub i32 %452, %210
  %454 = sub i32 %453, %211
  %455 = add i32 %454, %212
  %456 = add i32 %455, %42
  %457 = add i32 %456, %222
  %458 = add i32 %457, %223
  %459 = sub i32 %458, %225
  %460 = sub i32 %459, %227
  %461 = sub i32 %460, %228
  %462 = add i32 %461, %232
  %463 = add i32 %462, %235
  %464 = sub i32 %463, %236
  %465 = add i32 %464, %237
  %466 = sub i32 %465, %244
  %467 = add i32 %466, %245
  %468 = add i32 %467, %248
  %469 = add i32 %468, %251
  %470 = add i32 %469, %252
  %471 = sub i32 %470, %257
  %472 = add i32 %471, %258
  %473 = sub i32 %472, %260
  %474 = sub i32 %473, %261
  %475 = sub i32 %474, %262
  %476 = add i32 %475, %264
  %477 = sub i32 %476, %265
  %478 = sub i32 %477, %266
  %479 = sub i32 %478, %267
  %480 = add i32 %479, %269
  %481 = sub i32 %480, %270
  %482 = add i32 %481, %271
  %483 = add i32 %482, %272
  %484 = add i32 %483, %273
  %485 = add i32 %484, %274
  %486 = add i32 %485, %282
  %487 = sub i32 %486, %83
  %488 = add i32 %487, %283
  %489 = sub i32 %488, %284
  %490 = sub i32 %489, %287
  %491 = sub i32 %490, %288
  %492 = add i32 %491, %13
  %493 = add i32 %492, %44
  %494 = sub i32 %493, %58
  %495 = sub i32 %494, %65
  %496 = sub i32 %495, %76
  %497 = sub i32 %496, %81
  %498 = sub i32 %497, %84
  %499 = sub i32 %498, %96
  %500 = sub i32 %499, %108
  %501 = sub i32 %500, %111
  %502 = sub i32 %501, %119
  %503 = sub i32 %502, %122
  %504 = sub i32 %503, %125
  %505 = sub i32 %504, %127
  %506 = sub i32 %505, %134
  %507 = sub i32 %506, %155
  %508 = add i32 %507, %157
  %509 = sub i32 %508, %167
  %510 = add i32 %509, %175
  %511 = add i32 %510, %179
  %512 = sub i32 %511, %182
  %513 = sub i32 %512, %183
  %514 = sub i32 %513, %187
  %515 = add i32 %514, %189
  %516 = sub i32 %515, %214
  %517 = sub i32 %516, %217
  %518 = add i32 %517, %218
  %519 = sub i32 %518, %221
  %520 = add i32 %519, %229
  %521 = sub i32 %520, %231
  %522 = sub i32 %521, %234
  %523 = add i32 %522, %238
  %524 = sub i32 %523, %241
  %525 = sub i32 %524, %250
  %526 = sub i32 %525, %254
  %527 = sub i32 %526, %255
  %528 = sub i32 %527, %256
  %529 = sub i32 %528, %277
  %530 = sub i32 %529, %279
  %531 = sub i32 %530, %281
  %532 = add i32 %531, %289
  %533 = add i32 %532, %290
  %534 = add i32 %533, %293
  %535 = add i32 %534, %296
  %536 = add i32 %535, %298
  %537 = add i32 %536, %299
  %538 = add i32 %537, %301
  %539 = add i32 %538, %329
  %540 = add i32 %539, %325
  %541 = add i32 %540, %320
  %542 = icmp eq i32 %541, %8
  %543 = select i1 %542, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %544 = tail call i32 @puts(i8* nonnull dereferenceable(1) %543)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
