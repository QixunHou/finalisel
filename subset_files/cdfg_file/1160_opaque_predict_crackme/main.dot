digraph "DFG for'main' function" {
	Node0x1b37fe8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b38068[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b380f8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b38158[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1b385d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b386b8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1b387b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b38878[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1b38928[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b38b88[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1b38c48[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b39bb8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b3a228[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b3a320[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1b3a528[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b3a688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b3a798[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b3a858[shape=record, label="  ret i32 0"];
	Node0x1b37fe8 -> Node0x1b38068;
	Node0x1b38068 -> Node0x1b380f8;
	Node0x1b380f8 -> Node0x1b38158;
	Node0x1b38158 -> Node0x1b385d8;
	Node0x1b385d8 -> Node0x1b386b8;
	Node0x1b386b8 -> Node0x1b387b8;
	Node0x1b387b8 -> Node0x1b38878;
	Node0x1b38878 -> Node0x1b38928;
	Node0x1b38928 -> Node0x1b38b88;
	Node0x1b38b88 -> Node0x1b38c48;
	Node0x1b38c48 -> Node0x1b39bb8;
	Node0x1b39bb8 -> Node0x1b3a228;
	Node0x1b3a228 -> Node0x1b3a320;
	Node0x1b3a320 -> Node0x1b3a528;
	Node0x1b3a528 -> Node0x1b3a688;
	Node0x1b3a688 -> Node0x1b3a798;
	Node0x1b3a798 -> Node0x1b3a858;
edge [color=red]
	Node0x1b37fe8 -> Node0x1b38158;
	Node0x1b38158 -> Node0x1b385d8;
	Node0x1b38068 -> Node0x1b386b8;
	Node0x1b386b8 -> Node0x1b387b8;
	Node0x1b380f8 -> Node0x1b38878;
	Node0x1b38878 -> Node0x1b38928;
	Node0x1b37fe8 -> Node0x1b38b88;
	Node0x1b38068 -> Node0x1b38b88;
	Node0x1b380f8 -> Node0x1b38b88;
	Node0x1b37fe8 -> Node0x1b38c48;
	Node0x1b38068 -> Node0x1b39bb8;
	Node0x1b380f8 -> Node0x1b3a228;
	Node0x1b38c48 -> Node0x1b3a320;
	Node0x1b39bb8 -> Node0x1b3a320;
	Node0x1b3a228 -> Node0x1b3a320;
	Node0x1b38878 -> Node0x1b3a528;
	Node0x1b386b8 -> Node0x1b3a688;
	Node0x1b38158 -> Node0x1b3a798;
}
