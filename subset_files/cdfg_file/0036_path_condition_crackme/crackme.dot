digraph "DFG for'crackme' function" {
	Node0x687770[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x687df0[shape=record, label="  %6 = xor i32 %2, -1"];
	Node0x687e60[shape=record, label="  %7 = and i32 %6, %1"];
	Node0x687ed0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x687f70[shape=record, label="  %9 = shl i32 %3, 1"];
	Node0x688010[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x688080[shape=record, label="  %11 = xor i32 %3, %0"];
	Node0x6880f0[shape=record, label="  %12 = sub i32 1, %5"];
	Node0x688160[shape=record, label="  %13 = add i32 %12, %8"];
	Node0x6881d0[shape=record, label="  %14 = add i32 %13, %11"];
	Node0x688240[shape=record, label="  %15 = sub i32 %14, %10"];
	Node0x6882b0[shape=record, label="  %16 = xor i32 %5, -1"];
	Node0x688320[shape=record, label="  %17 = xor i32 %1, -1"];
	Node0x688390[shape=record, label="  %18 = or i32 %6, %1"];
	Node0x688400[shape=record, label="  %19 = or i32 %2, %1"];
	Node0x688470[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x6884e0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x688550[shape=record, label="  %22 = shl i32 %18, 1"];
	Node0x6885c0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x688630[shape=record, label="  %24 = shl i32 %7, 1"];
	Node0x6886a0[shape=record, label="  %25 = and i32 %2, %1"];
	Node0x688710[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x6887b0[shape=record, label="  %27 = xor i32 %0, 1073741823"];
	Node0x688820[shape=record, label="  %28 = and i32 %3, %0"];
	Node0x688890[shape=record, label="  %29 = or i32 %3, %0"];
	Node0x688900[shape=record, label="  %30 = xor i32 %9, -1"];
	Node0x688970[shape=record, label="  %31 = shl i32 %29, 1"];
	Node0x6889e0[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0x688c60[shape=record, label="  %33 = xor i32 %3, -1"];
	Node0x688cd0[shape=record, label="  %34 = and i32 %33, %0"];
	Node0x688d40[shape=record, label="  %35 = and i32 %27, %3"];
	Node0x688de0[shape=record, label="  %36 = shl i32 %35, 2"];
	Node0x688e50[shape=record, label="  %37 = shl i32 %28, 1"];
	Node0x688ec0[shape=record, label="  %38 = add i32 %0, 2"];
	Node0x688f30[shape=record, label="  %39 = add i32 %38, %17"];
	Node0x688fa0[shape=record, label="  %40 = add i32 %39, %2"];
	Node0x689010[shape=record, label="  %41 = add i32 %40, %16"];
	Node0x689080[shape=record, label="  %42 = add i32 %41, %18"];
	Node0x6890f0[shape=record, label="  %43 = sub i32 %42, %24"];
	Node0x689160[shape=record, label="  %44 = sub i32 %43, %26"];
	Node0x6891d0[shape=record, label="  %45 = sub i32 %44, %29"];
	Node0x689240[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x6892b0[shape=record, label="  %47 = sub i32 %46, %34"];
	Node0x689320[shape=record, label="  %48 = sub i32 %47, %21"];
	Node0x689390[shape=record, label="  %49 = sub i32 %48, %23"];
	Node0x689400[shape=record, label="  %50 = add i32 %49, %36"];
	Node0x689470[shape=record, label="  %51 = add i32 %50, %37"];
	Node0x6894e0[shape=record, label="  %52 = sub i32 %51, %32"];
	Node0x689550[shape=record, label="  %53 = icmp eq i32 %15, %52"];
	Node0x628268[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6899f0[shape=record, label="  %55 = tail call i32 @puts(i8* nonnull dereferenceable(1) %54)"];
	Node0x689a40[shape=record, label="  ret void"];
	Node0x687770 -> Node0x687df0;
	Node0x687df0 -> Node0x687e60;
	Node0x687e60 -> Node0x687ed0;
	Node0x687ed0 -> Node0x687f70;
	Node0x687f70 -> Node0x688010;
	Node0x688010 -> Node0x688080;
	Node0x688080 -> Node0x6880f0;
	Node0x6880f0 -> Node0x688160;
	Node0x688160 -> Node0x6881d0;
	Node0x6881d0 -> Node0x688240;
	Node0x688240 -> Node0x6882b0;
	Node0x6882b0 -> Node0x688320;
	Node0x688320 -> Node0x688390;
	Node0x688390 -> Node0x688400;
	Node0x688400 -> Node0x688470;
	Node0x688470 -> Node0x6884e0;
	Node0x6884e0 -> Node0x688550;
	Node0x688550 -> Node0x6885c0;
	Node0x6885c0 -> Node0x688630;
	Node0x688630 -> Node0x6886a0;
	Node0x6886a0 -> Node0x688710;
	Node0x688710 -> Node0x6887b0;
	Node0x6887b0 -> Node0x688820;
	Node0x688820 -> Node0x688890;
	Node0x688890 -> Node0x688900;
	Node0x688900 -> Node0x688970;
	Node0x688970 -> Node0x6889e0;
	Node0x6889e0 -> Node0x688c60;
	Node0x688c60 -> Node0x688cd0;
	Node0x688cd0 -> Node0x688d40;
	Node0x688d40 -> Node0x688de0;
	Node0x688de0 -> Node0x688e50;
	Node0x688e50 -> Node0x688ec0;
	Node0x688ec0 -> Node0x688f30;
	Node0x688f30 -> Node0x688fa0;
	Node0x688fa0 -> Node0x689010;
	Node0x689010 -> Node0x689080;
	Node0x689080 -> Node0x6890f0;
	Node0x6890f0 -> Node0x689160;
	Node0x689160 -> Node0x6891d0;
	Node0x6891d0 -> Node0x689240;
	Node0x689240 -> Node0x6892b0;
	Node0x6892b0 -> Node0x689320;
	Node0x689320 -> Node0x689390;
	Node0x689390 -> Node0x689400;
	Node0x689400 -> Node0x689470;
	Node0x689470 -> Node0x6894e0;
	Node0x6894e0 -> Node0x689550;
	Node0x689550 -> Node0x628268;
	Node0x628268 -> Node0x6899f0;
	Node0x6899f0 -> Node0x689a40;
edge [color=red]
	Node0x687df0 -> Node0x687e60;
	Node0x687e60 -> Node0x687ed0;
	Node0x687f70 -> Node0x688010;
	Node0x687770 -> Node0x6880f0;
	Node0x6880f0 -> Node0x688160;
	Node0x687ed0 -> Node0x688160;
	Node0x688160 -> Node0x6881d0;
	Node0x688080 -> Node0x6881d0;
	Node0x6881d0 -> Node0x688240;
	Node0x688010 -> Node0x688240;
	Node0x687770 -> Node0x6882b0;
	Node0x687df0 -> Node0x688390;
	Node0x688400 -> Node0x688470;
	Node0x688470 -> Node0x6884e0;
	Node0x688390 -> Node0x688550;
	Node0x688550 -> Node0x6885c0;
	Node0x687e60 -> Node0x688630;
	Node0x6886a0 -> Node0x688710;
	Node0x687f70 -> Node0x688900;
	Node0x688890 -> Node0x688970;
	Node0x688970 -> Node0x6889e0;
	Node0x688c60 -> Node0x688cd0;
	Node0x6887b0 -> Node0x688d40;
	Node0x688d40 -> Node0x688de0;
	Node0x688820 -> Node0x688e50;
	Node0x688ec0 -> Node0x688f30;
	Node0x688320 -> Node0x688f30;
	Node0x688f30 -> Node0x688fa0;
	Node0x688fa0 -> Node0x689010;
	Node0x6882b0 -> Node0x689010;
	Node0x689010 -> Node0x689080;
	Node0x688390 -> Node0x689080;
	Node0x689080 -> Node0x6890f0;
	Node0x688630 -> Node0x6890f0;
	Node0x6890f0 -> Node0x689160;
	Node0x688710 -> Node0x689160;
	Node0x689160 -> Node0x6891d0;
	Node0x688890 -> Node0x6891d0;
	Node0x6891d0 -> Node0x689240;
	Node0x688900 -> Node0x689240;
	Node0x689240 -> Node0x6892b0;
	Node0x688cd0 -> Node0x6892b0;
	Node0x6892b0 -> Node0x689320;
	Node0x6884e0 -> Node0x689320;
	Node0x689320 -> Node0x689390;
	Node0x6885c0 -> Node0x689390;
	Node0x689390 -> Node0x689400;
	Node0x688de0 -> Node0x689400;
	Node0x689400 -> Node0x689470;
	Node0x688e50 -> Node0x689470;
	Node0x689470 -> Node0x6894e0;
	Node0x6889e0 -> Node0x6894e0;
	Node0x688240 -> Node0x689550;
	Node0x6894e0 -> Node0x689550;
	Node0x689550 -> Node0x628268;
	Node0x628268 -> Node0x6899f0;
}
