digraph "DFG for'main' function" {
	Node0x689c08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x689c88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x689d18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x689d78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x689e28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x68a258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x68a338[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x68a438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x68a4f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x68a5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x68a668[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x68a718[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x6847a0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x68a918[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x68b888[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x68bef8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x68bf58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x68c068[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x68c2c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x68c428[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x68c538[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x68c648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x68c708[shape=record, label="  ret i32 0"];
	Node0x689c08 -> Node0x689c88;
	Node0x689c88 -> Node0x689d18;
	Node0x689d18 -> Node0x689d78;
	Node0x689d78 -> Node0x689e28;
	Node0x689e28 -> Node0x68a258;
	Node0x68a258 -> Node0x68a338;
	Node0x68a338 -> Node0x68a438;
	Node0x68a438 -> Node0x68a4f8;
	Node0x68a4f8 -> Node0x68a5a8;
	Node0x68a5a8 -> Node0x68a668;
	Node0x68a668 -> Node0x68a718;
	Node0x68a718 -> Node0x6847a0;
	Node0x6847a0 -> Node0x68a918;
	Node0x68a918 -> Node0x68b888;
	Node0x68b888 -> Node0x68bef8;
	Node0x68bef8 -> Node0x68bf58;
	Node0x68bf58 -> Node0x68c068;
	Node0x68c068 -> Node0x68c2c8;
	Node0x68c2c8 -> Node0x68c428;
	Node0x68c428 -> Node0x68c538;
	Node0x68c538 -> Node0x68c648;
	Node0x68c648 -> Node0x68c708;
edge [color=red]
	Node0x689c08 -> Node0x689e28;
	Node0x689e28 -> Node0x68a258;
	Node0x689c88 -> Node0x68a338;
	Node0x68a338 -> Node0x68a438;
	Node0x689d18 -> Node0x68a4f8;
	Node0x68a4f8 -> Node0x68a5a8;
	Node0x689d78 -> Node0x68a668;
	Node0x68a668 -> Node0x68a718;
	Node0x689c08 -> Node0x6847a0;
	Node0x689c88 -> Node0x6847a0;
	Node0x689d18 -> Node0x6847a0;
	Node0x689d78 -> Node0x6847a0;
	Node0x689c08 -> Node0x68a918;
	Node0x689c88 -> Node0x68b888;
	Node0x689d18 -> Node0x68bef8;
	Node0x689d78 -> Node0x68bf58;
	Node0x68a918 -> Node0x68c068;
	Node0x68b888 -> Node0x68c068;
	Node0x68bef8 -> Node0x68c068;
	Node0x68bf58 -> Node0x68c068;
	Node0x68a668 -> Node0x68c2c8;
	Node0x68a4f8 -> Node0x68c428;
	Node0x68a338 -> Node0x68c538;
	Node0x689e28 -> Node0x68c648;
}
