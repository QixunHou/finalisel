digraph "DFG for'main' function" {
	Node0x1562c28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1562ca8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1562d38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1562d98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1562e48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1563278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1563358[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1563458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1563518[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x15635c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1563688[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1563738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x155db50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1563938[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x15648a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1564f18[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1564f78[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1564ff0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1565060[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x15650d0[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x1565140[shape=record, label="  %17 = or i32 %13, %16"];
	Node0x15651b0[shape=record, label="  %18 = sub i32 %15, %10"];
	Node0x1565220[shape=record, label="  %19 = sub i32 %18, %17"];
	Node0x1565290[shape=record, label="  %20 = mul i32 %14, -2"];
	Node0x1565300[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x1565370[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x15653e0[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x1565450[shape=record, label="  %24 = xor i32 %12, -1"];
	Node0x15654c0[shape=record, label="  %25 = and i32 %11, %24"];
	Node0x1565530[shape=record, label="  %26 = xor i32 %11, 1073741823"];
	Node0x15655a0[shape=record, label="  %27 = and i32 %26, %12"];
	Node0x1565610[shape=record, label="  %28 = shl i32 %27, 2"];
	Node0x1565680[shape=record, label="  %29 = shl i32 %22, 3"];
	Node0x15656f0[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x1565760[shape=record, label="  %31 = xor i32 %13, %10"];
	Node0x15657d0[shape=record, label="  %32 = shl i32 %17, 1"];
	Node0x1565840[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x15658b0[shape=record, label="  %34 = shl i32 %30, 1"];
	Node0x1565920[shape=record, label="  %35 = sub i32 %25, %11"];
	Node0x1565990[shape=record, label="  %36 = mul i32 %35, 5"];
	Node0x1565a00[shape=record, label="  %37 = sub i32 2, %10"];
	Node0x1565a70[shape=record, label="  %38 = add i32 %37, %11"];
	Node0x1565ae0[shape=record, label="  %39 = sub i32 %38, %12"];
	Node0x1565b50[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x1565bc0[shape=record, label="  %41 = sub i32 %40, %21"];
	Node0x1565c30[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x1565ca0[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x1565d10[shape=record, label="  %44 = add i32 %43, %13"];
	Node0x1565d80[shape=record, label="  %45 = add i32 %44, %20"];
	Node0x1565df0[shape=record, label="  %46 = add i32 %45, %28"];
	Node0x1565e60[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x1565ed0[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x1565f40[shape=record, label="  %49 = sub i32 %48, %31"];
	Node0x1565fb0[shape=record, label="  %50 = sub i32 %49, %34"];
	Node0x1566020[shape=record, label="  %51 = add i32 %50, %36"];
	Node0x1566090[shape=record, label="  %52 = add i32 %51, %33"];
	Node0x1566100[shape=record, label="  %53 = icmp eq i32 %19, %52"];
	Node0x15028b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1566190[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x1566438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1566598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x15666a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x15667b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1566878[shape=record, label="  ret i32 0"];
	Node0x1562c28 -> Node0x1562ca8;
	Node0x1562ca8 -> Node0x1562d38;
	Node0x1562d38 -> Node0x1562d98;
	Node0x1562d98 -> Node0x1562e48;
	Node0x1562e48 -> Node0x1563278;
	Node0x1563278 -> Node0x1563358;
	Node0x1563358 -> Node0x1563458;
	Node0x1563458 -> Node0x1563518;
	Node0x1563518 -> Node0x15635c8;
	Node0x15635c8 -> Node0x1563688;
	Node0x1563688 -> Node0x1563738;
	Node0x1563738 -> Node0x155db50;
	Node0x155db50 -> Node0x1563938;
	Node0x1563938 -> Node0x15648a8;
	Node0x15648a8 -> Node0x1564f18;
	Node0x1564f18 -> Node0x1564f78;
	Node0x1564f78 -> Node0x1564ff0;
	Node0x1564ff0 -> Node0x1565060;
	Node0x1565060 -> Node0x15650d0;
	Node0x15650d0 -> Node0x1565140;
	Node0x1565140 -> Node0x15651b0;
	Node0x15651b0 -> Node0x1565220;
	Node0x1565220 -> Node0x1565290;
	Node0x1565290 -> Node0x1565300;
	Node0x1565300 -> Node0x1565370;
	Node0x1565370 -> Node0x15653e0;
	Node0x15653e0 -> Node0x1565450;
	Node0x1565450 -> Node0x15654c0;
	Node0x15654c0 -> Node0x1565530;
	Node0x1565530 -> Node0x15655a0;
	Node0x15655a0 -> Node0x1565610;
	Node0x1565610 -> Node0x1565680;
	Node0x1565680 -> Node0x15656f0;
	Node0x15656f0 -> Node0x1565760;
	Node0x1565760 -> Node0x15657d0;
	Node0x15657d0 -> Node0x1565840;
	Node0x1565840 -> Node0x15658b0;
	Node0x15658b0 -> Node0x1565920;
	Node0x1565920 -> Node0x1565990;
	Node0x1565990 -> Node0x1565a00;
	Node0x1565a00 -> Node0x1565a70;
	Node0x1565a70 -> Node0x1565ae0;
	Node0x1565ae0 -> Node0x1565b50;
	Node0x1565b50 -> Node0x1565bc0;
	Node0x1565bc0 -> Node0x1565c30;
	Node0x1565c30 -> Node0x1565ca0;
	Node0x1565ca0 -> Node0x1565d10;
	Node0x1565d10 -> Node0x1565d80;
	Node0x1565d80 -> Node0x1565df0;
	Node0x1565df0 -> Node0x1565e60;
	Node0x1565e60 -> Node0x1565ed0;
	Node0x1565ed0 -> Node0x1565f40;
	Node0x1565f40 -> Node0x1565fb0;
	Node0x1565fb0 -> Node0x1566020;
	Node0x1566020 -> Node0x1566090;
	Node0x1566090 -> Node0x1566100;
	Node0x1566100 -> Node0x15028b8;
	Node0x15028b8 -> Node0x1566190;
	Node0x1566190 -> Node0x1566438;
	Node0x1566438 -> Node0x1566598;
	Node0x1566598 -> Node0x15666a8;
	Node0x15666a8 -> Node0x15667b8;
	Node0x15667b8 -> Node0x1566878;
edge [color=red]
	Node0x1562c28 -> Node0x1562e48;
	Node0x1562e48 -> Node0x1563278;
	Node0x1562ca8 -> Node0x1563358;
	Node0x1563358 -> Node0x1563458;
	Node0x1562d38 -> Node0x1563518;
	Node0x1563518 -> Node0x15635c8;
	Node0x1562d98 -> Node0x1563688;
	Node0x1563688 -> Node0x1563738;
	Node0x1562c28 -> Node0x155db50;
	Node0x1562ca8 -> Node0x155db50;
	Node0x1562d38 -> Node0x155db50;
	Node0x1562d98 -> Node0x155db50;
	Node0x1562c28 -> Node0x1563938;
	Node0x1562ca8 -> Node0x15648a8;
	Node0x1562d38 -> Node0x1564f18;
	Node0x1562d98 -> Node0x1564f78;
	Node0x1564f18 -> Node0x1564ff0;
	Node0x15648a8 -> Node0x1564ff0;
	Node0x1564ff0 -> Node0x1565060;
	Node0x1563938 -> Node0x15650d0;
	Node0x1564f78 -> Node0x1565140;
	Node0x15650d0 -> Node0x1565140;
	Node0x1565060 -> Node0x15651b0;
	Node0x1563938 -> Node0x15651b0;
	Node0x15651b0 -> Node0x1565220;
	Node0x1565140 -> Node0x1565220;
	Node0x1564ff0 -> Node0x1565290;
	Node0x1564f18 -> Node0x1565300;
	Node0x15648a8 -> Node0x1565300;
	Node0x1564f18 -> Node0x1565370;
	Node0x15648a8 -> Node0x1565370;
	Node0x1565370 -> Node0x15653e0;
	Node0x1564f18 -> Node0x1565450;
	Node0x15648a8 -> Node0x15654c0;
	Node0x1565450 -> Node0x15654c0;
	Node0x15648a8 -> Node0x1565530;
	Node0x1565530 -> Node0x15655a0;
	Node0x1564f18 -> Node0x15655a0;
	Node0x15655a0 -> Node0x1565610;
	Node0x1565370 -> Node0x1565680;
	Node0x1564f78 -> Node0x15656f0;
	Node0x1563938 -> Node0x15656f0;
	Node0x1564f78 -> Node0x1565760;
	Node0x1563938 -> Node0x1565760;
	Node0x1565140 -> Node0x15657d0;
	Node0x15657d0 -> Node0x1565840;
	Node0x15656f0 -> Node0x15658b0;
	Node0x15654c0 -> Node0x1565920;
	Node0x15648a8 -> Node0x1565920;
	Node0x1565920 -> Node0x1565990;
	Node0x1563938 -> Node0x1565a00;
	Node0x1565a00 -> Node0x1565a70;
	Node0x15648a8 -> Node0x1565a70;
	Node0x1565a70 -> Node0x1565ae0;
	Node0x1564f18 -> Node0x1565ae0;
	Node0x1565ae0 -> Node0x1565b50;
	Node0x1565450 -> Node0x1565b50;
	Node0x1565b50 -> Node0x1565bc0;
	Node0x1565300 -> Node0x1565bc0;
	Node0x1565bc0 -> Node0x1565c30;
	Node0x15653e0 -> Node0x1565c30;
	Node0x1565c30 -> Node0x1565ca0;
	Node0x15654c0 -> Node0x1565ca0;
	Node0x1565ca0 -> Node0x1565d10;
	Node0x1564f78 -> Node0x1565d10;
	Node0x1565d10 -> Node0x1565d80;
	Node0x1565290 -> Node0x1565d80;
	Node0x1565d80 -> Node0x1565df0;
	Node0x1565610 -> Node0x1565df0;
	Node0x1565df0 -> Node0x1565e60;
	Node0x1565680 -> Node0x1565e60;
	Node0x1565e60 -> Node0x1565ed0;
	Node0x15656f0 -> Node0x1565ed0;
	Node0x1565ed0 -> Node0x1565f40;
	Node0x1565760 -> Node0x1565f40;
	Node0x1565f40 -> Node0x1565fb0;
	Node0x15658b0 -> Node0x1565fb0;
	Node0x1565fb0 -> Node0x1566020;
	Node0x1565990 -> Node0x1566020;
	Node0x1566020 -> Node0x1566090;
	Node0x1565840 -> Node0x1566090;
	Node0x1565220 -> Node0x1566100;
	Node0x1566090 -> Node0x1566100;
	Node0x1566100 -> Node0x15028b8;
	Node0x15028b8 -> Node0x1566190;
	Node0x1563688 -> Node0x1566438;
	Node0x1563518 -> Node0x1566598;
	Node0x1563358 -> Node0x15666a8;
	Node0x1562e48 -> Node0x15667b8;
}
