digraph "DFG for'main' function" {
	Node0x1c39708[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c39788[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c39818[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c39878[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1c39928[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1c39d58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c39e38[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1c39f38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c39ff8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1c3a0a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c3a168[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1c3a218[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c349d0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1c3a418[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c3b388[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c3b9f8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c3ba58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1c3bad0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1c3bb40[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x1c3bbb0[shape=record, label="  %16 = add i32 %15, 1"];
	Node0x1c3bc20[shape=record, label="  %17 = or i32 %12, %11"];
	Node0x1c3bc90[shape=record, label="  %18 = and i32 %11, %14"];
	Node0x1c3bd00[shape=record, label="  %19 = xor i32 %12, %11"];
	Node0x1c3bd70[shape=record, label="  %20 = and i32 %12, %11"];
	Node0x1c3bde0[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x1c3be50[shape=record, label="  %22 = shl i32 %14, 1"];
	Node0x1c3bec0[shape=record, label="  %23 = shl i32 %18, 2"];
	Node0x1c3bf30[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0x1c3bfa0[shape=record, label="  %25 = or i32 %13, %24"];
	Node0x1c3c010[shape=record, label="  %26 = or i32 %13, %10"];
	Node0x1c3c080[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x1c3c0f0[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x1c3c160[shape=record, label="  %29 = xor i32 %25, -1"];
	Node0x1c3c1d0[shape=record, label="  %30 = sub i32 %13, %11"];
	Node0x1c3c240[shape=record, label="  %31 = add i32 %30, %20"];
	Node0x1c3c2b0[shape=record, label="  %32 = sub i32 %31, %17"];
	Node0x1c3c320[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x1c3c390[shape=record, label="  %34 = add i32 %12, 1"];
	Node0x1c3c400[shape=record, label="  %35 = add i32 %34, %18"];
	Node0x1c3c470[shape=record, label="  %36 = sub i32 %35, %19"];
	Node0x1c3c4e0[shape=record, label="  %37 = add i32 %36, %21"];
	Node0x1c3c550[shape=record, label="  %38 = sub i32 %37, %22"];
	Node0x1c3c5c0[shape=record, label="  %39 = add i32 %38, %15"];
	Node0x1c3c630[shape=record, label="  %40 = add i32 %39, %23"];
	Node0x1c3c6a0[shape=record, label="  %41 = sub i32 %40, %25"];
	Node0x1c3c710[shape=record, label="  %42 = add i32 %41, %29"];
	Node0x1c3c780[shape=record, label="  %43 = add i32 %42, %28"];
	Node0x1c3c7f0[shape=record, label="  %44 = add i32 %43, %33"];
	Node0x1c3c860[shape=record, label="  %45 = icmp eq i32 %16, %44"];
	Node0x1bd98b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c3c8f0[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0x1c3cb98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c3ccf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c3ce08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c3cf18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c3cfd8[shape=record, label="  ret i32 0"];
	Node0x1c39708 -> Node0x1c39788;
	Node0x1c39788 -> Node0x1c39818;
	Node0x1c39818 -> Node0x1c39878;
	Node0x1c39878 -> Node0x1c39928;
	Node0x1c39928 -> Node0x1c39d58;
	Node0x1c39d58 -> Node0x1c39e38;
	Node0x1c39e38 -> Node0x1c39f38;
	Node0x1c39f38 -> Node0x1c39ff8;
	Node0x1c39ff8 -> Node0x1c3a0a8;
	Node0x1c3a0a8 -> Node0x1c3a168;
	Node0x1c3a168 -> Node0x1c3a218;
	Node0x1c3a218 -> Node0x1c349d0;
	Node0x1c349d0 -> Node0x1c3a418;
	Node0x1c3a418 -> Node0x1c3b388;
	Node0x1c3b388 -> Node0x1c3b9f8;
	Node0x1c3b9f8 -> Node0x1c3ba58;
	Node0x1c3ba58 -> Node0x1c3bad0;
	Node0x1c3bad0 -> Node0x1c3bb40;
	Node0x1c3bb40 -> Node0x1c3bbb0;
	Node0x1c3bbb0 -> Node0x1c3bc20;
	Node0x1c3bc20 -> Node0x1c3bc90;
	Node0x1c3bc90 -> Node0x1c3bd00;
	Node0x1c3bd00 -> Node0x1c3bd70;
	Node0x1c3bd70 -> Node0x1c3bde0;
	Node0x1c3bde0 -> Node0x1c3be50;
	Node0x1c3be50 -> Node0x1c3bec0;
	Node0x1c3bec0 -> Node0x1c3bf30;
	Node0x1c3bf30 -> Node0x1c3bfa0;
	Node0x1c3bfa0 -> Node0x1c3c010;
	Node0x1c3c010 -> Node0x1c3c080;
	Node0x1c3c080 -> Node0x1c3c0f0;
	Node0x1c3c0f0 -> Node0x1c3c160;
	Node0x1c3c160 -> Node0x1c3c1d0;
	Node0x1c3c1d0 -> Node0x1c3c240;
	Node0x1c3c240 -> Node0x1c3c2b0;
	Node0x1c3c2b0 -> Node0x1c3c320;
	Node0x1c3c320 -> Node0x1c3c390;
	Node0x1c3c390 -> Node0x1c3c400;
	Node0x1c3c400 -> Node0x1c3c470;
	Node0x1c3c470 -> Node0x1c3c4e0;
	Node0x1c3c4e0 -> Node0x1c3c550;
	Node0x1c3c550 -> Node0x1c3c5c0;
	Node0x1c3c5c0 -> Node0x1c3c630;
	Node0x1c3c630 -> Node0x1c3c6a0;
	Node0x1c3c6a0 -> Node0x1c3c710;
	Node0x1c3c710 -> Node0x1c3c780;
	Node0x1c3c780 -> Node0x1c3c7f0;
	Node0x1c3c7f0 -> Node0x1c3c860;
	Node0x1c3c860 -> Node0x1bd98b8;
	Node0x1bd98b8 -> Node0x1c3c8f0;
	Node0x1c3c8f0 -> Node0x1c3cb98;
	Node0x1c3cb98 -> Node0x1c3ccf8;
	Node0x1c3ccf8 -> Node0x1c3ce08;
	Node0x1c3ce08 -> Node0x1c3cf18;
	Node0x1c3cf18 -> Node0x1c3cfd8;
edge [color=red]
	Node0x1c39708 -> Node0x1c39928;
	Node0x1c39928 -> Node0x1c39d58;
	Node0x1c39788 -> Node0x1c39e38;
	Node0x1c39e38 -> Node0x1c39f38;
	Node0x1c39818 -> Node0x1c39ff8;
	Node0x1c39ff8 -> Node0x1c3a0a8;
	Node0x1c39878 -> Node0x1c3a168;
	Node0x1c3a168 -> Node0x1c3a218;
	Node0x1c39708 -> Node0x1c349d0;
	Node0x1c39788 -> Node0x1c349d0;
	Node0x1c39818 -> Node0x1c349d0;
	Node0x1c39878 -> Node0x1c349d0;
	Node0x1c39708 -> Node0x1c3a418;
	Node0x1c39788 -> Node0x1c3b388;
	Node0x1c39818 -> Node0x1c3b9f8;
	Node0x1c39878 -> Node0x1c3ba58;
	Node0x1c3b9f8 -> Node0x1c3bad0;
	Node0x1c3b388 -> Node0x1c3bb40;
	Node0x1c3bad0 -> Node0x1c3bb40;
	Node0x1c3bb40 -> Node0x1c3bbb0;
	Node0x1c3b9f8 -> Node0x1c3bc20;
	Node0x1c3b388 -> Node0x1c3bc20;
	Node0x1c3b388 -> Node0x1c3bc90;
	Node0x1c3bad0 -> Node0x1c3bc90;
	Node0x1c3b9f8 -> Node0x1c3bd00;
	Node0x1c3b388 -> Node0x1c3bd00;
	Node0x1c3b9f8 -> Node0x1c3bd70;
	Node0x1c3b388 -> Node0x1c3bd70;
	Node0x1c3bd70 -> Node0x1c3bde0;
	Node0x1c3bad0 -> Node0x1c3be50;
	Node0x1c3bc90 -> Node0x1c3bec0;
	Node0x1c3a418 -> Node0x1c3bf30;
	Node0x1c3ba58 -> Node0x1c3bfa0;
	Node0x1c3bf30 -> Node0x1c3bfa0;
	Node0x1c3ba58 -> Node0x1c3c010;
	Node0x1c3a418 -> Node0x1c3c010;
	Node0x1c3c010 -> Node0x1c3c080;
	Node0x1c3c080 -> Node0x1c3c0f0;
	Node0x1c3bfa0 -> Node0x1c3c160;
	Node0x1c3ba58 -> Node0x1c3c1d0;
	Node0x1c3b388 -> Node0x1c3c1d0;
	Node0x1c3c1d0 -> Node0x1c3c240;
	Node0x1c3bd70 -> Node0x1c3c240;
	Node0x1c3c240 -> Node0x1c3c2b0;
	Node0x1c3bc20 -> Node0x1c3c2b0;
	Node0x1c3c2b0 -> Node0x1c3c320;
	Node0x1c3b9f8 -> Node0x1c3c390;
	Node0x1c3c390 -> Node0x1c3c400;
	Node0x1c3bc90 -> Node0x1c3c400;
	Node0x1c3c400 -> Node0x1c3c470;
	Node0x1c3bd00 -> Node0x1c3c470;
	Node0x1c3c470 -> Node0x1c3c4e0;
	Node0x1c3bde0 -> Node0x1c3c4e0;
	Node0x1c3c4e0 -> Node0x1c3c550;
	Node0x1c3be50 -> Node0x1c3c550;
	Node0x1c3c550 -> Node0x1c3c5c0;
	Node0x1c3bb40 -> Node0x1c3c5c0;
	Node0x1c3c5c0 -> Node0x1c3c630;
	Node0x1c3bec0 -> Node0x1c3c630;
	Node0x1c3c630 -> Node0x1c3c6a0;
	Node0x1c3bfa0 -> Node0x1c3c6a0;
	Node0x1c3c6a0 -> Node0x1c3c710;
	Node0x1c3c160 -> Node0x1c3c710;
	Node0x1c3c710 -> Node0x1c3c780;
	Node0x1c3c0f0 -> Node0x1c3c780;
	Node0x1c3c780 -> Node0x1c3c7f0;
	Node0x1c3c320 -> Node0x1c3c7f0;
	Node0x1c3bbb0 -> Node0x1c3c860;
	Node0x1c3c7f0 -> Node0x1c3c860;
	Node0x1c3c860 -> Node0x1bd98b8;
	Node0x1bd98b8 -> Node0x1c3c8f0;
	Node0x1c3a168 -> Node0x1c3cb98;
	Node0x1c39ff8 -> Node0x1c3ccf8;
	Node0x1c39e38 -> Node0x1c3ce08;
	Node0x1c39928 -> Node0x1c3cf18;
}
