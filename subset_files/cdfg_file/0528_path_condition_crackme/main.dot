digraph "DFG for'main' function" {
	Node0x1668e28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1668ea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1668f38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1669398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1669478[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1669598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16697d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1669888[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x166a7f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x166ae80[shape=record, label="  %8 = add i32 %6, 1"];
	Node0x166aef0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x166af60[shape=record, label="  %10 = or i32 %6, %9"];
	Node0x166afd0[shape=record, label="  %11 = mul i32 %10, 3"];
	Node0x166b040[shape=record, label="  %12 = add i32 %8, %11"];
	Node0x166b0b0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x166b120[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x166b190[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x166b200[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x166b270[shape=record, label="  %17 = and i32 %6, %9"];
	Node0x166b2e0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x166b350[shape=record, label="  %19 = xor i32 %16, -1"];
	Node0x166b3c0[shape=record, label="  %20 = mul i32 %19, 7"];
	Node0x166b430[shape=record, label="  %21 = shl i32 %17, 2"];
	Node0x166b4a0[shape=record, label="  %22 = mul i32 %13, 5"];
	Node0x166b510[shape=record, label="  %23 = add i32 %6, 6"];
	Node0x166b580[shape=record, label="  %24 = add i32 %23, %13"];
	Node0x166b5f0[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x166b660[shape=record, label="  %26 = add i32 %25, %18"];
	Node0x166b6d0[shape=record, label="  %27 = add i32 %26, %14"];
	Node0x166b740[shape=record, label="  %28 = add i32 %27, %15"];
	Node0x166b7b0[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x166b820[shape=record, label="  %30 = add i32 %29, %21"];
	Node0x166b890[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x166b900[shape=record, label="  %32 = icmp eq i32 %12, %31"];
	Node0x16099d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x166bba0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x166bdf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x166bf58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x166c018[shape=record, label="  ret i32 0"];
	Node0x1668e28 -> Node0x1668ea8;
	Node0x1668ea8 -> Node0x1668f38;
	Node0x1668f38 -> Node0x1669398;
	Node0x1669398 -> Node0x1669478;
	Node0x1669478 -> Node0x1669598;
	Node0x1669598 -> Node0x16697d0;
	Node0x16697d0 -> Node0x1669888;
	Node0x1669888 -> Node0x166a7f8;
	Node0x166a7f8 -> Node0x166ae80;
	Node0x166ae80 -> Node0x166aef0;
	Node0x166aef0 -> Node0x166af60;
	Node0x166af60 -> Node0x166afd0;
	Node0x166afd0 -> Node0x166b040;
	Node0x166b040 -> Node0x166b0b0;
	Node0x166b0b0 -> Node0x166b120;
	Node0x166b120 -> Node0x166b190;
	Node0x166b190 -> Node0x166b200;
	Node0x166b200 -> Node0x166b270;
	Node0x166b270 -> Node0x166b2e0;
	Node0x166b2e0 -> Node0x166b350;
	Node0x166b350 -> Node0x166b3c0;
	Node0x166b3c0 -> Node0x166b430;
	Node0x166b430 -> Node0x166b4a0;
	Node0x166b4a0 -> Node0x166b510;
	Node0x166b510 -> Node0x166b580;
	Node0x166b580 -> Node0x166b5f0;
	Node0x166b5f0 -> Node0x166b660;
	Node0x166b660 -> Node0x166b6d0;
	Node0x166b6d0 -> Node0x166b740;
	Node0x166b740 -> Node0x166b7b0;
	Node0x166b7b0 -> Node0x166b820;
	Node0x166b820 -> Node0x166b890;
	Node0x166b890 -> Node0x166b900;
	Node0x166b900 -> Node0x16099d8;
	Node0x16099d8 -> Node0x166bba0;
	Node0x166bba0 -> Node0x166bdf8;
	Node0x166bdf8 -> Node0x166bf58;
	Node0x166bf58 -> Node0x166c018;
edge [color=red]
	Node0x1668e28 -> Node0x1668f38;
	Node0x1668f38 -> Node0x1669398;
	Node0x1668ea8 -> Node0x1669478;
	Node0x1669478 -> Node0x1669598;
	Node0x1668e28 -> Node0x16697d0;
	Node0x1668ea8 -> Node0x16697d0;
	Node0x1668e28 -> Node0x1669888;
	Node0x1668ea8 -> Node0x166a7f8;
	Node0x1669888 -> Node0x166ae80;
	Node0x166a7f8 -> Node0x166aef0;
	Node0x1669888 -> Node0x166af60;
	Node0x166aef0 -> Node0x166af60;
	Node0x166af60 -> Node0x166afd0;
	Node0x166ae80 -> Node0x166b040;
	Node0x166afd0 -> Node0x166b040;
	Node0x166a7f8 -> Node0x166b0b0;
	Node0x1669888 -> Node0x166b0b0;
	Node0x166a7f8 -> Node0x166b120;
	Node0x1669888 -> Node0x166b120;
	Node0x166b120 -> Node0x166b190;
	Node0x166a7f8 -> Node0x166b200;
	Node0x1669888 -> Node0x166b200;
	Node0x1669888 -> Node0x166b270;
	Node0x166aef0 -> Node0x166b270;
	Node0x166b270 -> Node0x166b2e0;
	Node0x166b200 -> Node0x166b350;
	Node0x166b350 -> Node0x166b3c0;
	Node0x166b270 -> Node0x166b430;
	Node0x166b0b0 -> Node0x166b4a0;
	Node0x1669888 -> Node0x166b510;
	Node0x166b510 -> Node0x166b580;
	Node0x166b0b0 -> Node0x166b580;
	Node0x166b580 -> Node0x166b5f0;
	Node0x166b200 -> Node0x166b5f0;
	Node0x166b5f0 -> Node0x166b660;
	Node0x166b2e0 -> Node0x166b660;
	Node0x166b660 -> Node0x166b6d0;
	Node0x166b120 -> Node0x166b6d0;
	Node0x166b6d0 -> Node0x166b740;
	Node0x166b190 -> Node0x166b740;
	Node0x166b740 -> Node0x166b7b0;
	Node0x166b3c0 -> Node0x166b7b0;
	Node0x166b7b0 -> Node0x166b820;
	Node0x166b430 -> Node0x166b820;
	Node0x166b820 -> Node0x166b890;
	Node0x166b4a0 -> Node0x166b890;
	Node0x166b040 -> Node0x166b900;
	Node0x166b890 -> Node0x166b900;
	Node0x166b900 -> Node0x16099d8;
	Node0x16099d8 -> Node0x166bba0;
	Node0x1669478 -> Node0x166bdf8;
	Node0x1668f38 -> Node0x166bf58;
}
