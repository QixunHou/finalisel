digraph "DFG for'main' function" {
	Node0x1bb13d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1bb1458[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1bb14e8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1bb1548[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1bb19c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1bb1aa8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1bb1ba8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bb1c68[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1bb1d18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bb1f78[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1bb2038[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1bb2198[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1bb21f8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1bb3db0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1bb3fb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bb4118[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bb4228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1bb42e8[shape=record, label="  ret i32 0"];
	Node0x1bb13d8 -> Node0x1bb1458;
	Node0x1bb1458 -> Node0x1bb14e8;
	Node0x1bb14e8 -> Node0x1bb1548;
	Node0x1bb1548 -> Node0x1bb19c8;
	Node0x1bb19c8 -> Node0x1bb1aa8;
	Node0x1bb1aa8 -> Node0x1bb1ba8;
	Node0x1bb1ba8 -> Node0x1bb1c68;
	Node0x1bb1c68 -> Node0x1bb1d18;
	Node0x1bb1d18 -> Node0x1bb1f78;
	Node0x1bb1f78 -> Node0x1bb2038;
	Node0x1bb2038 -> Node0x1bb2198;
	Node0x1bb2198 -> Node0x1bb21f8;
	Node0x1bb21f8 -> Node0x1bb3db0;
	Node0x1bb3db0 -> Node0x1bb3fb8;
	Node0x1bb3fb8 -> Node0x1bb4118;
	Node0x1bb4118 -> Node0x1bb4228;
	Node0x1bb4228 -> Node0x1bb42e8;
edge [color=red]
	Node0x1bb13d8 -> Node0x1bb1548;
	Node0x1bb1548 -> Node0x1bb19c8;
	Node0x1bb1458 -> Node0x1bb1aa8;
	Node0x1bb1aa8 -> Node0x1bb1ba8;
	Node0x1bb14e8 -> Node0x1bb1c68;
	Node0x1bb1c68 -> Node0x1bb1d18;
	Node0x1bb13d8 -> Node0x1bb1f78;
	Node0x1bb1458 -> Node0x1bb1f78;
	Node0x1bb14e8 -> Node0x1bb1f78;
	Node0x1bb13d8 -> Node0x1bb2038;
	Node0x1bb1458 -> Node0x1bb2198;
	Node0x1bb14e8 -> Node0x1bb21f8;
	Node0x1bb2038 -> Node0x1bb3db0;
	Node0x1bb2198 -> Node0x1bb3db0;
	Node0x1bb21f8 -> Node0x1bb3db0;
	Node0x1bb1c68 -> Node0x1bb3fb8;
	Node0x1bb1aa8 -> Node0x1bb4118;
	Node0x1bb1548 -> Node0x1bb4228;
}
