digraph "DFG for'main' function" {
	Node0xe2ad68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe2ade8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe2ae78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xe2b2d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xe2b3b8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xe2b4d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe2b710[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xe2b7c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe2c738[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe2cdc0[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0xe2ce30[shape=record, label="  %9 = xor i32 %7, 2147483647"];
	Node0xe2cea0[shape=record, label="  %10 = and i32 %9, %6"];
	Node0xe2cf10[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0xe2cf80[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0xe2cff0[shape=record, label="  %13 = sub i32 1, %12"];
	Node0xe2d060[shape=record, label="  %14 = or i32 %7, %6"];
	Node0xe2d0d0[shape=record, label="  %15 = mul i32 %14, -2"];
	Node0xe2d140[shape=record, label="  %16 = xor i32 %7, %8"];
	Node0xe2d1b0[shape=record, label="  %17 = shl i32 %6, 1"];
	Node0xe2d220[shape=record, label="  %18 = xor i32 %14, -1"];
	Node0xe2d290[shape=record, label="  %19 = mul i32 %18, -6"];
	Node0xe2d300[shape=record, label="  %20 = and i32 %7, %8"];
	Node0xe2d370[shape=record, label="  %21 = mul i32 %20, -3"];
	Node0xe2d3e0[shape=record, label="  %22 = and i32 %7, %6"];
	Node0xe2d450[shape=record, label="  %23 = sub i32 -2, %6"];
	Node0xe2d4c0[shape=record, label="  %24 = sub i32 %23, %17"];
	Node0xe2d530[shape=record, label="  %25 = add i32 %24, %16"];
	Node0xe2d5a0[shape=record, label="  %26 = sub i32 %25, %22"];
	Node0xe2d610[shape=record, label="  %27 = add i32 %26, %15"];
	Node0xe2d680[shape=record, label="  %28 = add i32 %27, %19"];
	Node0xe2d6f0[shape=record, label="  %29 = add i32 %28, %21"];
	Node0xe2d760[shape=record, label="  %30 = add i32 %29, %11"];
	Node0xe2d7d0[shape=record, label="  %31 = icmp eq i32 %13, %30"];
	Node0xdcb9d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe2da70[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0xe2dcc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe2de28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xe2dee8[shape=record, label="  ret i32 0"];
	Node0xe2ad68 -> Node0xe2ade8;
	Node0xe2ade8 -> Node0xe2ae78;
	Node0xe2ae78 -> Node0xe2b2d8;
	Node0xe2b2d8 -> Node0xe2b3b8;
	Node0xe2b3b8 -> Node0xe2b4d8;
	Node0xe2b4d8 -> Node0xe2b710;
	Node0xe2b710 -> Node0xe2b7c8;
	Node0xe2b7c8 -> Node0xe2c738;
	Node0xe2c738 -> Node0xe2cdc0;
	Node0xe2cdc0 -> Node0xe2ce30;
	Node0xe2ce30 -> Node0xe2cea0;
	Node0xe2cea0 -> Node0xe2cf10;
	Node0xe2cf10 -> Node0xe2cf80;
	Node0xe2cf80 -> Node0xe2cff0;
	Node0xe2cff0 -> Node0xe2d060;
	Node0xe2d060 -> Node0xe2d0d0;
	Node0xe2d0d0 -> Node0xe2d140;
	Node0xe2d140 -> Node0xe2d1b0;
	Node0xe2d1b0 -> Node0xe2d220;
	Node0xe2d220 -> Node0xe2d290;
	Node0xe2d290 -> Node0xe2d300;
	Node0xe2d300 -> Node0xe2d370;
	Node0xe2d370 -> Node0xe2d3e0;
	Node0xe2d3e0 -> Node0xe2d450;
	Node0xe2d450 -> Node0xe2d4c0;
	Node0xe2d4c0 -> Node0xe2d530;
	Node0xe2d530 -> Node0xe2d5a0;
	Node0xe2d5a0 -> Node0xe2d610;
	Node0xe2d610 -> Node0xe2d680;
	Node0xe2d680 -> Node0xe2d6f0;
	Node0xe2d6f0 -> Node0xe2d760;
	Node0xe2d760 -> Node0xe2d7d0;
	Node0xe2d7d0 -> Node0xdcb9d8;
	Node0xdcb9d8 -> Node0xe2da70;
	Node0xe2da70 -> Node0xe2dcc8;
	Node0xe2dcc8 -> Node0xe2de28;
	Node0xe2de28 -> Node0xe2dee8;
edge [color=red]
	Node0xe2ad68 -> Node0xe2ae78;
	Node0xe2ae78 -> Node0xe2b2d8;
	Node0xe2ade8 -> Node0xe2b3b8;
	Node0xe2b3b8 -> Node0xe2b4d8;
	Node0xe2ad68 -> Node0xe2b710;
	Node0xe2ade8 -> Node0xe2b710;
	Node0xe2ad68 -> Node0xe2b7c8;
	Node0xe2ade8 -> Node0xe2c738;
	Node0xe2b7c8 -> Node0xe2cdc0;
	Node0xe2c738 -> Node0xe2ce30;
	Node0xe2ce30 -> Node0xe2cea0;
	Node0xe2b7c8 -> Node0xe2cea0;
	Node0xe2cea0 -> Node0xe2cf10;
	Node0xe2cf10 -> Node0xe2cf80;
	Node0xe2cf80 -> Node0xe2cff0;
	Node0xe2c738 -> Node0xe2d060;
	Node0xe2b7c8 -> Node0xe2d060;
	Node0xe2d060 -> Node0xe2d0d0;
	Node0xe2c738 -> Node0xe2d140;
	Node0xe2cdc0 -> Node0xe2d140;
	Node0xe2b7c8 -> Node0xe2d1b0;
	Node0xe2d060 -> Node0xe2d220;
	Node0xe2d220 -> Node0xe2d290;
	Node0xe2c738 -> Node0xe2d300;
	Node0xe2cdc0 -> Node0xe2d300;
	Node0xe2d300 -> Node0xe2d370;
	Node0xe2c738 -> Node0xe2d3e0;
	Node0xe2b7c8 -> Node0xe2d3e0;
	Node0xe2b7c8 -> Node0xe2d450;
	Node0xe2d450 -> Node0xe2d4c0;
	Node0xe2d1b0 -> Node0xe2d4c0;
	Node0xe2d4c0 -> Node0xe2d530;
	Node0xe2d140 -> Node0xe2d530;
	Node0xe2d530 -> Node0xe2d5a0;
	Node0xe2d3e0 -> Node0xe2d5a0;
	Node0xe2d5a0 -> Node0xe2d610;
	Node0xe2d0d0 -> Node0xe2d610;
	Node0xe2d610 -> Node0xe2d680;
	Node0xe2d290 -> Node0xe2d680;
	Node0xe2d680 -> Node0xe2d6f0;
	Node0xe2d370 -> Node0xe2d6f0;
	Node0xe2d6f0 -> Node0xe2d760;
	Node0xe2cf10 -> Node0xe2d760;
	Node0xe2cff0 -> Node0xe2d7d0;
	Node0xe2d760 -> Node0xe2d7d0;
	Node0xe2d7d0 -> Node0xdcb9d8;
	Node0xdcb9d8 -> Node0xe2da70;
	Node0xe2b3b8 -> Node0xe2dcc8;
	Node0xe2ae78 -> Node0xe2de28;
}
