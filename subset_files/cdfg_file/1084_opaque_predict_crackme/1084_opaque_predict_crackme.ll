; ModuleID = '../.././c_source_file/1084_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1084_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %2, -1
  %10 = and i32 %9, %1
  %11 = or i32 %10, %8
  %12 = xor i32 %5, -1
  %13 = or i32 %12, %3
  %14 = xor i32 %13, %4
  %15 = add i32 %14, %11
  %16 = xor i32 %2, %0
  %17 = or i32 %16, %1
  %18 = or i32 %9, %0
  %19 = xor i32 %18, -1
  %20 = xor i32 %1, %0
  %21 = and i32 %20, %9
  %22 = xor i32 %16, -1
  %23 = and i32 %20, %22
  %24 = or i32 %16, %8
  %25 = shl i32 %24, 1
  %26 = or i32 %20, %2
  %27 = and i32 %2, %0
  %28 = xor i32 %0, -1
  %29 = and i32 %18, %20
  %30 = and i32 %2, %1
  %31 = xor i32 %30, -1
  %32 = and i32 %31, %28
  %33 = or i32 %1, %0
  %34 = xor i32 %20, -1
  %35 = or i32 %34, %2
  %36 = or i32 %9, %34
  %37 = or i32 %2, %1
  %38 = xor i32 %37, -1
  %39 = or i32 %38, %0
  %40 = or i32 %19, %34
  %41 = and i32 %1, %0
  %42 = or i32 %37, %0
  %43 = shl i32 %42, 1
  %44 = and i32 %16, %1
  %45 = shl i32 %44, 1
  %46 = xor i32 %27, -1
  %47 = and i32 %46, %7
  %48 = xor i32 %8, -1
  %49 = and i32 %48, %2
  %50 = xor i32 %2, %1
  %51 = or i32 %50, %41
  %52 = xor i32 %41, %2
  %53 = and i32 %9, %0
  %54 = or i32 %53, %30
  %55 = and i32 %46, %1
  %56 = and i32 %7, %2
  %57 = and i32 %56, %0
  %58 = or i32 %7, %2
  %59 = and i32 %58, %28
  %60 = or i32 %57, %59
  %61 = shl i32 %60, 1
  %62 = or i32 %7, %0
  %63 = xor i32 %62, -1
  %64 = or i32 %16, %63
  %65 = xor i32 %10, -1
  %66 = or i32 %65, %28
  %67 = and i32 %9, %48
  %68 = and i32 %46, %34
  %69 = shl i32 %68, 1
  %70 = xor i32 %27, %33
  %71 = or i32 %27, %38
  %72 = or i32 %2, %0
  %73 = xor i32 %72, -1
  %74 = or i32 %73, %1
  %75 = or i32 %9, %1
  %76 = and i32 %75, %28
  %77 = xor i32 %53, %31
  %78 = or i32 %50, %0
  %79 = xor i32 %57, %78
  %80 = and i32 %72, %7
  %81 = xor i32 %72, %41
  %82 = shl i32 %81, 1
  %83 = and i32 %75, %0
  %84 = and i32 %65, %0
  %85 = or i32 %19, %1
  %86 = xor i32 %50, %0
  %87 = xor i32 %41, -1
  %88 = xor i32 %50, -1
  %89 = and i32 %88, %87
  %90 = shl i32 %89, 1
  %91 = xor i32 %8, %65
  %92 = or i32 %22, %63
  %93 = and i32 %65, %28
  %94 = and i32 %50, %33
  %95 = xor i32 %48, %2
  %96 = add i32 %30, 1
  %97 = or i32 %30, %8
  %98 = xor i32 %33, -1
  %99 = or i32 %9, %98
  %100 = or i32 %75, %0
  %101 = and i32 %30, %0
  %102 = or i32 %88, %0
  %103 = xor i32 %101, %102
  %104 = or i32 %27, %20
  %105 = add i32 %41, 1
  %106 = or i32 %50, %63
  %107 = or i32 %88, %63
  %108 = and i32 %56, %28
  %109 = and i32 %58, %0
  %110 = or i32 %108, %109
  %111 = xor i32 %53, 2147483647
  %112 = and i32 %111, %7
  %113 = or i32 %10, %0
  %114 = or i32 %27, %98
  %115 = or i32 %50, %28
  %116 = xor i32 %115, -1
  %117 = or i32 %108, %116
  %118 = xor i32 %78, 2147483647
  %119 = or i32 %118, %57
  %120 = xor i32 %27, %62
  %121 = shl i32 %120, 2
  %122 = and i32 %37, %28
  %123 = or i32 %101, %122
  %124 = or i32 %50, %98
  %125 = and i32 %50, %87
  %126 = add i32 %16, 1
  %127 = and i32 %33, %9
  %128 = xor i32 %31, %0
  %129 = and i32 %88, %0
  %130 = and i32 %33, %22
  %131 = or i32 %8, %2
  %132 = and i32 %72, %20
  %133 = or i32 %31, %0
  %134 = xor i32 %75, -1
  %135 = or i32 %134, %28
  %136 = shl i32 %122, 1
  %137 = xor i32 %72, %1
  %138 = xor i32 %65, %0
  %139 = xor i32 %86, -1
  %140 = or i32 %101, %139
  %141 = or i32 %20, %22
  %142 = xor i32 %75, %41
  %143 = add i32 %37, 1
  %144 = and i32 %9, %87
  %145 = or i32 %41, %2
  %146 = or i32 %20, %73
  %147 = shl i32 %146, 2
  %148 = and i32 %16, %33
  %149 = xor i32 %62, %2
  %150 = or i32 %41, %88
  %151 = shl i32 %150, 1
  %152 = and i32 %16, %87
  %153 = or i32 %41, %38
  %154 = xor i32 %58, %28
  %155 = xor i32 %154, %57
  %156 = xor i32 %8, %31
  %157 = or i32 %75, %28
  %158 = and i32 %50, %0
  %159 = or i32 %8, %9
  %160 = shl i32 %159, 1
  %161 = or i32 %16, %34
  %162 = or i32 %16, %98
  %163 = and i32 %37, %0
  %164 = xor i32 %37, %0
  %165 = xor i32 %164, -1
  %166 = xor i32 %101, %165
  %167 = or i32 %134, %0
  %168 = and i32 %30, %28
  %169 = xor i32 %163, 2147483647
  %170 = xor i32 %169, %168
  %171 = shl i32 %170, 1
  %172 = xor i32 %27, %1
  %173 = and i32 %72, %1
  %174 = and i32 %22, %48
  %175 = or i32 %53, %34
  %176 = xor i32 %108, %115
  %177 = and i32 %16, %20
  %178 = or i32 %101, %164
  %179 = or i32 %73, %7
  %180 = and i32 %38, %28
  %181 = and i32 %10, %28
  %182 = and i32 %10, %0
  %183 = and i32 %134, %28
  %184 = and i32 %134, %0
  %185 = mul i32 %101, -19
  %186 = xor i32 %5, %4
  %187 = and i32 %5, %3
  %188 = and i32 %187, %4
  %189 = xor i32 %4, -1
  %190 = xor i32 %5, %3
  %191 = and i32 %190, %189
  %192 = xor i32 %188, -1
  %193 = xor i32 %191, %192
  %194 = xor i32 %3, -1
  %195 = or i32 %194, %4
  %196 = and i32 %195, %12
  %197 = and i32 %194, %4
  %198 = xor i32 %197, -1
  %199 = xor i32 %186, -1
  %200 = and i32 %199, %198
  %201 = and i32 %4, %3
  %202 = xor i32 %201, -1
  %203 = xor i32 %202, %5
  %204 = xor i32 %195, -1
  %205 = or i32 %12, %204
  %206 = xor i32 %190, -1
  %207 = and i32 %195, %206
  %208 = or i32 %186, %3
  %209 = or i32 %190, %4
  %210 = shl i32 %209, 1
  %211 = or i32 %5, %3
  %212 = xor i32 %211, -1
  %213 = or i32 %212, %4
  %214 = or i32 %199, %204
  %215 = and i32 %12, %3
  %216 = xor i32 %215, -1
  %217 = or i32 %216, %189
  %218 = or i32 %12, %4
  %219 = xor i32 %218, -1
  %220 = or i32 %201, %219
  %221 = shl i32 %220, 1
  %222 = and i32 %190, %4
  %223 = and i32 %5, %4
  %224 = xor i32 %4, %3
  %225 = or i32 %223, %224
  %226 = xor i32 %211, %4
  %227 = or i32 %188, %226
  %228 = and i32 %216, %189
  %229 = shl i32 %197, 2
  %230 = xor i32 %211, %201
  %231 = and i32 %218, %194
  %232 = xor i32 %190, %4
  %233 = xor i32 %232, -1
  %234 = or i32 %188, %233
  %235 = or i32 %197, %5
  %236 = xor i32 %13, -1
  %237 = or i32 %236, %189
  %238 = xor i32 %206, %4
  %239 = and i32 %194, %5
  %240 = and i32 %239, %4
  %241 = or i32 %194, %5
  %242 = xor i32 %241, %4
  %243 = or i32 %240, %242
  %244 = or i32 %186, %224
  %245 = or i32 %201, %212
  %246 = and i32 %190, %202
  %247 = xor i32 %224, -1
  %248 = and i32 %12, %247
  %249 = xor i32 %187, -1
  %250 = and i32 %249, %189
  %251 = shl i32 %250, 1
  %252 = or i32 %240, %232
  %253 = or i32 %4, %3
  %254 = and i32 %253, %199
  %255 = xor i32 %253, -1
  %256 = xor i32 %255, %5
  %257 = and i32 %186, %202
  %258 = or i32 %190, %197
  %259 = or i32 %219, %247
  %260 = or i32 %197, %199
  %261 = or i32 %5, %4
  %262 = xor i32 %261, -1
  %263 = or i32 %201, %262
  %264 = or i32 %211, %4
  %265 = and i32 %211, %189
  %266 = xor i32 %265, %192
  %267 = xor i32 %204, %5
  %268 = or i32 %187, %197
  %269 = or i32 %216, %4
  %270 = and i32 %253, %206
  %271 = or i32 %223, %212
  %272 = and i32 %12, %202
  %273 = and i32 %187, %189
  %274 = or i32 %273, %222
  %275 = shl i32 %274, 1
  %276 = xor i32 %222, -1
  %277 = xor i32 %273, %276
  %278 = add i32 %3, 1
  %279 = and i32 %218, %247
  %280 = or i32 %212, %189
  %281 = and i32 %216, %4
  %282 = and i32 %186, %194
  %283 = or i32 %204, %5
  %284 = and i32 %261, %224
  %285 = and i32 %12, %4
  %286 = xor i32 %285, -1
  %287 = and i32 %224, %286
  %288 = and i32 %253, %5
  %289 = and i32 %190, %198
  %290 = shl i32 %289, 1
  %291 = or i32 %249, %189
  %292 = xor i32 %285, %3
  %293 = and i32 %239, %189
  %294 = or i32 %190, %189
  %295 = xor i32 %294, -1
  %296 = or i32 %293, %295
  %297 = or i32 %255, %5
  %298 = or i32 %236, %4
  %299 = shl i32 %298, 1
  %300 = and i32 %286, %247
  %301 = or i32 %285, %236
  %302 = xor i32 %236, %4
  %303 = or i32 %188, %191
  %304 = shl i32 %218, 1
  %305 = add i32 %4, 1
  %306 = and i32 %190, %253
  %307 = or i32 %186, %255
  %308 = xor i32 %195, %5
  %309 = or i32 %223, %215
  %310 = or i32 %249, %4
  %311 = xor i32 %212, %4
  %312 = or i32 %219, %3
  %313 = or i32 %262, %194
  %314 = or i32 %197, %12
  %315 = shl i32 %314, 1
  %316 = and i32 %206, %189
  %317 = or i32 %224, %12
  %318 = and i32 %13, %4
  %319 = or i32 %285, %247
  %320 = and i32 %190, %195
  %321 = shl i32 %320, 1
  %322 = and i32 %195, %199
  %323 = and i32 %253, %12
  %324 = and i32 %12, %198
  %325 = or i32 %199, %255
  %326 = shl i32 %325, 1
  %327 = shl i32 %195, 1
  %328 = xor i32 %242, -1
  %329 = xor i32 %240, %328
  %330 = or i32 %199, %194
  %331 = xor i32 %286, %3
  %332 = and i32 %241, %4
  %333 = xor i32 %332, -1
  %334 = xor i32 %293, %333
  %335 = and i32 %261, %3
  %336 = or i32 %223, %247
  %337 = and i32 %224, %199
  %338 = add i32 %5, 1
  %339 = or i32 %219, %194
  %340 = shl i32 %206, 2
  %341 = or i32 %13, %189
  %342 = or i32 %186, %247
  %343 = xor i32 %188, %232
  %344 = xor i32 %197, %216
  %345 = xor i32 %223, -1
  %346 = and i32 %345, %194
  %347 = and i32 %224, %345
  %348 = or i32 %186, %194
  %349 = shl i32 %348, 1
  %350 = or i32 %223, %255
  %351 = or i32 %186, %201
  %352 = xor i32 %209, -1
  %353 = or i32 %240, %352
  %354 = xor i32 %223, %216
  %355 = xor i32 %261, %201
  %356 = and i32 %199, %247
  %357 = or i32 %285, %194
  %358 = add i32 %186, 1
  %359 = or i32 %199, %247
  %360 = or i32 %285, %187
  %361 = shl i32 %265, 1
  %362 = and i32 %211, %4
  %363 = or i32 %273, %362
  %364 = or i32 %190, %201
  %365 = or i32 %224, %219
  %366 = xor i32 %216, %4
  %367 = and i32 %286, %194
  %368 = or i32 %223, %3
  %369 = and i32 %198, %5
  %370 = and i32 %241, %189
  %371 = or i32 %240, %370
  %372 = or i32 %201, %5
  %373 = and i32 %261, %247
  %374 = and i32 %345, %3
  %375 = and i32 %224, %12
  %376 = or i32 %186, %204
  %377 = or i32 %223, %194
  %378 = xor i32 %262, %3
  %379 = or i32 %13, %4
  %380 = xor i32 %197, %5
  %381 = and i32 %249, %4
  %382 = or i32 %190, %255
  %383 = or i32 %206, %189
  %384 = xor i32 %293, %294
  %385 = xor i32 %215, %4
  %386 = or i32 %211, %189
  %387 = or i32 %223, %204
  %388 = or i32 %188, %265
  %389 = shl i32 %388, 1
  %390 = add i32 %211, 1
  %391 = xor i32 %223, %3
  %392 = or i32 %285, %3
  %393 = and i32 %224, %5
  %394 = and i32 %186, %253
  %395 = xor i32 %249, %4
  %396 = and i32 %186, %3
  %397 = or i32 %206, %204
  %398 = or i32 %215, %189
  %399 = and i32 %195, %5
  %400 = or i32 %12, %255
  %401 = or i32 %186, %197
  %402 = shl i32 %286, 1
  %403 = or i32 %285, %224
  %404 = or i32 %206, %4
  %405 = or i32 %201, %206
  %406 = or i32 %199, %3
  %407 = or i32 %262, %3
  %408 = and i32 %186, %247
  %409 = xor i32 %218, %201
  %410 = or i32 %201, %12
  %411 = or i32 %187, %4
  %412 = xor i32 %240, %233
  %413 = xor i32 %187, %4
  %414 = and i32 %186, %198
  %415 = or i32 %201, %199
  %416 = xor i32 %218, %3
  %417 = xor i32 %201, %5
  %418 = or i32 %224, %199
  %419 = shl i32 %418, 2
  %420 = and i32 %13, %189
  %421 = shl i32 %420, 1
  %422 = xor i32 %13, %201
  %423 = and i32 %206, %4
  %424 = and i32 %261, %194
  %425 = xor i32 %240, %209
  %426 = or i32 %293, %332
  %427 = or i32 %187, %189
  %428 = or i32 %247, %5
  %429 = or i32 %224, %5
  %430 = xor i32 %261, %3
  %431 = and i32 %345, %247
  %432 = xor i32 %197, %249
  %433 = or i32 %12, %247
  %434 = or i32 %224, %262
  %435 = and i32 %186, %195
  %436 = and i32 %286, %3
  %437 = and i32 %186, %224
  %438 = shl i32 %437, 1
  %439 = or i32 %262, %247
  %440 = and i32 %206, %202
  %441 = or i32 %215, %197
  %442 = xor i32 %223, %195
  %443 = and i32 %212, %189
  %444 = shl i32 %443, 3
  %445 = and i32 %215, %189
  %446 = and i32 %212, %4
  %447 = and i32 %215, %4
  %448 = and i32 %236, %189
  %449 = mul i32 %448, -24
  %450 = mul i32 %273, 15
  %451 = and i32 %236, %4
  %452 = add i32 %201, %175
  %453 = add i32 %452, %400
  %454 = add i32 %453, %445
  %455 = sub i32 %454, %451
  %456 = sub i32 %455, %378
  %457 = sub i32 %456, %335
  %458 = add i32 %457, %307
  %459 = mul i32 %458, 3
  %460 = sub i32 %128, %125
  %461 = sub i32 %460, %309
  %462 = add i32 %461, %406
  %463 = sub i32 %462, %270
  %464 = sub i32 %463, %269
  %465 = mul i32 %464, 5
  %466 = sub i32 %188, %447
  %467 = mul i32 %466, 10
  %468 = add i32 %446, %267
  %469 = shl i32 %468, 2
  %470 = add i32 %183, %181
  %471 = mul i32 %470, -11
  %472 = add i32 %182, %180
  %473 = mul i32 %472, -13
  %474 = add i32 %62, -1
  %475 = add i32 %474, %33
  %476 = add i32 %475, %3
  %477 = add i32 %476, %145
  %478 = add i32 %477, %99
  %479 = add i32 %478, %95
  %480 = add i32 %479, %161
  %481 = add i32 %480, %157
  %482 = add i32 %481, %130
  %483 = add i32 %482, %106
  %484 = add i32 %483, %64
  %485 = add i32 %484, %247
  %486 = add i32 %485, %112
  %487 = add i32 %486, %410
  %488 = add i32 %487, %399
  %489 = add i32 %488, %380
  %490 = add i32 %489, %211
  %491 = add i32 %490, %248
  %492 = add i32 %491, %119
  %493 = add i32 %492, %427
  %494 = add i32 %493, %441
  %495 = add i32 %494, %404
  %496 = add i32 %495, %396
  %497 = add i32 %496, %232
  %498 = add i32 %497, %379
  %499 = add i32 %498, %367
  %500 = add i32 %499, %330
  %501 = add i32 %500, %313
  %502 = add i32 %501, %291
  %503 = add i32 %502, %287
  %504 = add i32 %503, %258
  %505 = add i32 %504, %230
  %506 = add i32 %505, %228
  %507 = shl i32 %506, 1
  %508 = add i32 %0, -3
  %509 = add i32 %508, %7
  %510 = sub i32 %509, %41
  %511 = add i32 %510, %48
  %512 = add i32 %511, %105
  %513 = add i32 %512, %19
  %514 = add i32 %513, %21
  %515 = sub i32 %514, %26
  %516 = add i32 %515, %27
  %517 = add i32 %516, %35
  %518 = add i32 %517, %36
  %519 = sub i32 %518, %49
  %520 = sub i32 %519, %52
  %521 = add i32 %520, %67
  %522 = add i32 %521, %96
  %523 = add i32 %522, %73
  %524 = sub i32 %523, %72
  %525 = add i32 %524, %126
  %526 = add i32 %525, %127
  %527 = sub i32 %526, %131
  %528 = add i32 %527, %10
  %529 = add i32 %528, %143
  %530 = sub i32 %529, %144
  %531 = sub i32 %530, %30
  %532 = add i32 %531, %53
  %533 = sub i32 %532, %149
  %534 = add i32 %533, %50
  %535 = add i32 %534, %278
  %536 = add i32 %535, %17
  %537 = add i32 %536, %23
  %538 = sub i32 %537, %29
  %539 = add i32 %538, %32
  %540 = add i32 %539, %39
  %541 = sub i32 %540, %40
  %542 = add i32 %541, %47
  %543 = sub i32 %542, %51
  %544 = sub i32 %543, %54
  %545 = add i32 %544, %55
  %546 = add i32 %545, %66
  %547 = add i32 %546, %70
  %548 = add i32 %547, %71
  %549 = sub i32 %548, %74
  %550 = add i32 %549, %76
  %551 = add i32 %550, %77
  %552 = add i32 %551, %80
  %553 = add i32 %552, %83
  %554 = sub i32 %553, %84
  %555 = add i32 %554, %85
  %556 = sub i32 %555, %86
  %557 = add i32 %556, %91
  %558 = add i32 %557, %92
  %559 = add i32 %558, %93
  %560 = sub i32 %559, %94
  %561 = sub i32 %560, %97
  %562 = add i32 %561, %100
  %563 = sub i32 %562, %104
  %564 = sub i32 %563, %107
  %565 = sub i32 %564, %113
  %566 = add i32 %565, %114
  %567 = sub i32 %566, %124
  %568 = sub i32 %567, %129
  %569 = add i32 %568, %132
  %570 = add i32 %569, %133
  %571 = add i32 %570, %135
  %572 = sub i32 %571, %137
  %573 = sub i32 %572, %138
  %574 = add i32 %573, %141
  %575 = sub i32 %574, %142
  %576 = add i32 %575, %148
  %577 = add i32 %576, %152
  %578 = add i32 %577, %153
  %579 = sub i32 %578, %156
  %580 = add i32 %579, %158
  %581 = sub i32 %580, %160
  %582 = sub i32 %581, %162
  %583 = sub i32 %582, %163
  %584 = add i32 %583, %115
  %585 = add i32 %584, %167
  %586 = sub i32 %585, %172
  %587 = add i32 %586, %173
  %588 = sub i32 %587, %174
  %589 = add i32 %588, %177
  %590 = add i32 %589, %179
  %591 = sub i32 %590, %184
  %592 = add i32 %591, %4
  %593 = add i32 %592, %305
  %594 = sub i32 %593, %25
  %595 = sub i32 %594, %43
  %596 = sub i32 %595, %45
  %597 = sub i32 %596, %69
  %598 = add i32 %597, %79
  %599 = sub i32 %598, %82
  %600 = sub i32 %599, %90
  %601 = add i32 %600, %103
  %602 = sub i32 %601, %110
  %603 = add i32 %602, %117
  %604 = sub i32 %603, %121
  %605 = add i32 %604, %123
  %606 = sub i32 %605, %136
  %607 = sub i32 %606, %140
  %608 = sub i32 %607, %147
  %609 = sub i32 %608, %151
  %610 = add i32 %609, %155
  %611 = sub i32 %610, %166
  %612 = add i32 %611, %176
  %613 = sub i32 %612, %178
  %614 = add i32 %613, %185
  %615 = add i32 %614, %202
  %616 = sub i32 %615, %224
  %617 = add i32 %616, %338
  %618 = add i32 %617, %253
  %619 = sub i32 %618, %61
  %620 = add i32 %619, %186
  %621 = sub i32 %620, %196
  %622 = add i32 %621, %203
  %623 = sub i32 %622, %205
  %624 = sub i32 %623, %229
  %625 = add i32 %624, %235
  %626 = sub i32 %625, %256
  %627 = sub i32 %626, %215
  %628 = sub i32 %627, %272
  %629 = add i32 %628, %283
  %630 = add i32 %629, %190
  %631 = sub i32 %630, %288
  %632 = sub i32 %631, %297
  %633 = sub i32 %632, %308
  %634 = sub i32 %633, %187
  %635 = sub i32 %634, %317
  %636 = sub i32 %635, %323
  %637 = add i32 %636, %324
  %638 = sub i32 %637, %327
  %639 = add i32 %638, %219
  %640 = add i32 %639, %358
  %641 = add i32 %640, %369
  %642 = sub i32 %641, %372
  %643 = sub i32 %642, %375
  %644 = add i32 %643, %390
  %645 = sub i32 %644, %261
  %646 = add i32 %645, %393
  %647 = add i32 %646, %249
  %648 = sub i32 %647, %417
  %649 = add i32 %648, %428
  %650 = sub i32 %649, %429
  %651 = add i32 %650, %285
  %652 = add i32 %651, %262
  %653 = add i32 %652, %433
  %654 = add i32 %653, %471
  %655 = add i32 %654, %473
  %656 = sub i32 %655, %171
  %657 = sub i32 %656, %200
  %658 = sub i32 %657, %207
  %659 = sub i32 %658, %208
  %660 = add i32 %659, %213
  %661 = sub i32 %660, %214
  %662 = add i32 %661, %217
  %663 = sub i32 %662, %222
  %664 = sub i32 %663, %225
  %665 = add i32 %664, %231
  %666 = add i32 %665, %237
  %667 = add i32 %666, %238
  %668 = add i32 %667, %244
  %669 = add i32 %668, %245
  %670 = sub i32 %669, %246
  %671 = add i32 %670, %254
  %672 = sub i32 %671, %257
  %673 = add i32 %672, %259
  %674 = sub i32 %673, %260
  %675 = sub i32 %674, %263
  %676 = sub i32 %675, %264
  %677 = sub i32 %676, %268
  %678 = add i32 %677, %271
  %679 = sub i32 %678, %279
  %680 = add i32 %679, %280
  %681 = sub i32 %680, %281
  %682 = sub i32 %681, %282
  %683 = add i32 %682, %284
  %684 = sub i32 %683, %292
  %685 = add i32 %684, %300
  %686 = add i32 %685, %301
  %687 = add i32 %686, %302
  %688 = sub i32 %687, %304
  %689 = add i32 %688, %306
  %690 = add i32 %689, %310
  %691 = add i32 %690, %311
  %692 = sub i32 %691, %312
  %693 = sub i32 %692, %315
  %694 = sub i32 %693, %316
  %695 = sub i32 %694, %318
  %696 = sub i32 %695, %319
  %697 = add i32 %696, %322
  %698 = add i32 %697, %331
  %699 = add i32 %698, %336
  %700 = add i32 %699, %337
  %701 = add i32 %700, %339
  %702 = add i32 %701, %294
  %703 = sub i32 %702, %340
  %704 = add i32 %703, %341
  %705 = add i32 %704, %342
  %706 = add i32 %705, %344
  %707 = add i32 %706, %346
  %708 = sub i32 %707, %347
  %709 = add i32 %708, %350
  %710 = sub i32 %709, %351
  %711 = sub i32 %710, %354
  %712 = add i32 %711, %355
  %713 = sub i32 %712, %356
  %714 = add i32 %713, %357
  %715 = sub i32 %714, %359
  %716 = add i32 %715, %360
  %717 = add i32 %716, %364
  %718 = sub i32 %717, %365
  %719 = sub i32 %718, %366
  %720 = sub i32 %719, %368
  %721 = add i32 %720, %373
  %722 = sub i32 %721, %374
  %723 = add i32 %722, %376
  %724 = add i32 %723, %377
  %725 = sub i32 %724, %381
  %726 = sub i32 %725, %382
  %727 = sub i32 %726, %383
  %728 = sub i32 %727, %385
  %729 = sub i32 %728, %386
  %730 = sub i32 %729, %387
  %731 = sub i32 %730, %391
  %732 = add i32 %731, %392
  %733 = sub i32 %732, %394
  %734 = sub i32 %733, %395
  %735 = add i32 %734, %397
  %736 = sub i32 %735, %398
  %737 = add i32 %736, %401
  %738 = sub i32 %737, %402
  %739 = add i32 %738, %403
  %740 = add i32 %739, %405
  %741 = add i32 %740, %407
  %742 = add i32 %741, %408
  %743 = add i32 %742, %409
  %744 = add i32 %743, %411
  %745 = add i32 %744, %413
  %746 = add i32 %745, %414
  %747 = sub i32 %746, %415
  %748 = sub i32 %747, %416
  %749 = sub i32 %748, %422
  %750 = add i32 %749, %423
  %751 = add i32 %750, %424
  %752 = add i32 %751, %430
  %753 = add i32 %752, %431
  %754 = sub i32 %753, %432
  %755 = sub i32 %754, %434
  %756 = add i32 %755, %435
  %757 = sub i32 %756, %436
  %758 = add i32 %757, %439
  %759 = sub i32 %758, %362
  %760 = add i32 %759, %440
  %761 = add i32 %760, %442
  %762 = sub i32 %761, %193
  %763 = sub i32 %762, %210
  %764 = sub i32 %763, %221
  %765 = sub i32 %764, %227
  %766 = add i32 %765, %234
  %767 = sub i32 %766, %243
  %768 = sub i32 %767, %251
  %769 = add i32 %768, %252
  %770 = sub i32 %769, %266
  %771 = add i32 %770, %277
  %772 = sub i32 %771, %290
  %773 = add i32 %772, %296
  %774 = sub i32 %773, %299
  %775 = sub i32 %774, %303
  %776 = sub i32 %775, %321
  %777 = sub i32 %776, %326
  %778 = sub i32 %777, %329
  %779 = sub i32 %778, %334
  %780 = sub i32 %779, %343
  %781 = sub i32 %780, %349
  %782 = add i32 %781, %353
  %783 = sub i32 %782, %361
  %784 = sub i32 %783, %363
  %785 = sub i32 %784, %371
  %786 = add i32 %785, %384
  %787 = add i32 %786, %412
  %788 = sub i32 %787, %419
  %789 = sub i32 %788, %421
  %790 = sub i32 %789, %425
  %791 = sub i32 %790, %426
  %792 = sub i32 %791, %438
  %793 = sub i32 %792, %444
  %794 = add i32 %793, %449
  %795 = add i32 %794, %450
  %796 = sub i32 %795, %275
  %797 = sub i32 %796, %389
  %798 = add i32 %797, %467
  %799 = add i32 %798, %469
  %800 = add i32 %799, %465
  %801 = add i32 %800, %459
  %802 = add i32 %801, %507
  %803 = icmp eq i32 %15, %802
  %804 = select i1 %803, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %805 = tail call i32 @puts(i8* nonnull dereferenceable(1) %804)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
