digraph "DFG for'main' function" {
	Node0x70bb48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x70bbc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x70bc58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x70bcb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x70bd68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x70c198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x70c278[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x70c378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x70c438[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x70c4e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x70c5a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x70c658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x706b10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x70c858[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x70d7c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x70de38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x70de98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x70df10[shape=record, label="  %14 = add i32 %11, %13"];
	Node0x70df80[shape=record, label="  %15 = sub i32 0, %14"];
	Node0x70dff0[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x70e060[shape=record, label="  %17 = and i32 %11, %16"];
	Node0x70e0d0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x70e140[shape=record, label="  %19 = xor i32 %12, %11"];
	Node0x70e1b0[shape=record, label="  %20 = shl i32 %12, 1"];
	Node0x70e220[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x70e290[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x70e300[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x70e370[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x70e3e0[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x70e450[shape=record, label="  %26 = and i32 %13, %10"];
	Node0x70e4c0[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x70e530[shape=record, label="  %28 = xor i32 %10, -1"];
	Node0x70e5a0[shape=record, label="  %29 = and i32 %13, %28"];
	Node0x70e610[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x70e680[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x70e6f0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x70e760[shape=record, label="  %33 = xor i32 %13, -1"];
	Node0x70e7d0[shape=record, label="  %34 = and i32 %10, %33"];
	Node0x70e840[shape=record, label="  %35 = shl i32 %26, 2"];
	Node0x70e8b0[shape=record, label="  %36 = add i32 %17, 1"];
	Node0x70e920[shape=record, label="  %37 = add i32 %36, %32"];
	Node0x70e990[shape=record, label="  %38 = sub i32 %37, %34"];
	Node0x70ea00[shape=record, label="  %39 = sub i32 %38, %29"];
	Node0x70ea70[shape=record, label="  %40 = mul i32 %39, 3"];
	Node0x70eae0[shape=record, label="  %41 = add i32 %12, 3"];
	Node0x70eb50[shape=record, label="  %42 = add i32 %41, %18"];
	Node0x70ebc0[shape=record, label="  %43 = sub i32 %42, %19"];
	Node0x70ec30[shape=record, label="  %44 = add i32 %43, %20"];
	Node0x70eca0[shape=record, label="  %45 = add i32 %44, %13"];
	Node0x70ed10[shape=record, label="  %46 = sub i32 %45, %25"];
	Node0x70ed80[shape=record, label="  %47 = add i32 %46, %27"];
	Node0x70edf0[shape=record, label="  %48 = add i32 %47, %23"];
	Node0x70ee60[shape=record, label="  %49 = sub i32 %48, %35"];
	Node0x70eed0[shape=record, label="  %50 = add i32 %49, %31"];
	Node0x70ef40[shape=record, label="  %51 = add i32 %50, %40"];
	Node0x70efb0[shape=record, label="  %52 = icmp eq i32 %51, %15"];
	Node0x6ab8b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x70f040[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x70f2e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x70f448[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x70f558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x70f668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x70f728[shape=record, label="  ret i32 0"];
	Node0x70bb48 -> Node0x70bbc8;
	Node0x70bbc8 -> Node0x70bc58;
	Node0x70bc58 -> Node0x70bcb8;
	Node0x70bcb8 -> Node0x70bd68;
	Node0x70bd68 -> Node0x70c198;
	Node0x70c198 -> Node0x70c278;
	Node0x70c278 -> Node0x70c378;
	Node0x70c378 -> Node0x70c438;
	Node0x70c438 -> Node0x70c4e8;
	Node0x70c4e8 -> Node0x70c5a8;
	Node0x70c5a8 -> Node0x70c658;
	Node0x70c658 -> Node0x706b10;
	Node0x706b10 -> Node0x70c858;
	Node0x70c858 -> Node0x70d7c8;
	Node0x70d7c8 -> Node0x70de38;
	Node0x70de38 -> Node0x70de98;
	Node0x70de98 -> Node0x70df10;
	Node0x70df10 -> Node0x70df80;
	Node0x70df80 -> Node0x70dff0;
	Node0x70dff0 -> Node0x70e060;
	Node0x70e060 -> Node0x70e0d0;
	Node0x70e0d0 -> Node0x70e140;
	Node0x70e140 -> Node0x70e1b0;
	Node0x70e1b0 -> Node0x70e220;
	Node0x70e220 -> Node0x70e290;
	Node0x70e290 -> Node0x70e300;
	Node0x70e300 -> Node0x70e370;
	Node0x70e370 -> Node0x70e3e0;
	Node0x70e3e0 -> Node0x70e450;
	Node0x70e450 -> Node0x70e4c0;
	Node0x70e4c0 -> Node0x70e530;
	Node0x70e530 -> Node0x70e5a0;
	Node0x70e5a0 -> Node0x70e610;
	Node0x70e610 -> Node0x70e680;
	Node0x70e680 -> Node0x70e6f0;
	Node0x70e6f0 -> Node0x70e760;
	Node0x70e760 -> Node0x70e7d0;
	Node0x70e7d0 -> Node0x70e840;
	Node0x70e840 -> Node0x70e8b0;
	Node0x70e8b0 -> Node0x70e920;
	Node0x70e920 -> Node0x70e990;
	Node0x70e990 -> Node0x70ea00;
	Node0x70ea00 -> Node0x70ea70;
	Node0x70ea70 -> Node0x70eae0;
	Node0x70eae0 -> Node0x70eb50;
	Node0x70eb50 -> Node0x70ebc0;
	Node0x70ebc0 -> Node0x70ec30;
	Node0x70ec30 -> Node0x70eca0;
	Node0x70eca0 -> Node0x70ed10;
	Node0x70ed10 -> Node0x70ed80;
	Node0x70ed80 -> Node0x70edf0;
	Node0x70edf0 -> Node0x70ee60;
	Node0x70ee60 -> Node0x70eed0;
	Node0x70eed0 -> Node0x70ef40;
	Node0x70ef40 -> Node0x70efb0;
	Node0x70efb0 -> Node0x6ab8b8;
	Node0x6ab8b8 -> Node0x70f040;
	Node0x70f040 -> Node0x70f2e8;
	Node0x70f2e8 -> Node0x70f448;
	Node0x70f448 -> Node0x70f558;
	Node0x70f558 -> Node0x70f668;
	Node0x70f668 -> Node0x70f728;
edge [color=red]
	Node0x70bb48 -> Node0x70bd68;
	Node0x70bd68 -> Node0x70c198;
	Node0x70bbc8 -> Node0x70c278;
	Node0x70c278 -> Node0x70c378;
	Node0x70bc58 -> Node0x70c438;
	Node0x70c438 -> Node0x70c4e8;
	Node0x70bcb8 -> Node0x70c5a8;
	Node0x70c5a8 -> Node0x70c658;
	Node0x70bb48 -> Node0x706b10;
	Node0x70bbc8 -> Node0x706b10;
	Node0x70bc58 -> Node0x706b10;
	Node0x70bcb8 -> Node0x706b10;
	Node0x70bb48 -> Node0x70c858;
	Node0x70bbc8 -> Node0x70d7c8;
	Node0x70bc58 -> Node0x70de38;
	Node0x70bcb8 -> Node0x70de98;
	Node0x70d7c8 -> Node0x70df10;
	Node0x70de98 -> Node0x70df10;
	Node0x70df10 -> Node0x70df80;
	Node0x70de38 -> Node0x70dff0;
	Node0x70d7c8 -> Node0x70e060;
	Node0x70dff0 -> Node0x70e060;
	Node0x70e060 -> Node0x70e0d0;
	Node0x70de38 -> Node0x70e140;
	Node0x70d7c8 -> Node0x70e140;
	Node0x70de38 -> Node0x70e1b0;
	Node0x70de38 -> Node0x70e220;
	Node0x70d7c8 -> Node0x70e220;
	Node0x70e220 -> Node0x70e290;
	Node0x70e290 -> Node0x70e300;
	Node0x70de38 -> Node0x70e370;
	Node0x70d7c8 -> Node0x70e370;
	Node0x70e370 -> Node0x70e3e0;
	Node0x70de98 -> Node0x70e450;
	Node0x70c858 -> Node0x70e450;
	Node0x70e450 -> Node0x70e4c0;
	Node0x70c858 -> Node0x70e530;
	Node0x70de98 -> Node0x70e5a0;
	Node0x70e530 -> Node0x70e5a0;
	Node0x70e5a0 -> Node0x70e610;
	Node0x70e610 -> Node0x70e680;
	Node0x70de98 -> Node0x70e6f0;
	Node0x70c858 -> Node0x70e6f0;
	Node0x70de98 -> Node0x70e760;
	Node0x70c858 -> Node0x70e7d0;
	Node0x70e760 -> Node0x70e7d0;
	Node0x70e450 -> Node0x70e840;
	Node0x70e060 -> Node0x70e8b0;
	Node0x70e8b0 -> Node0x70e920;
	Node0x70e6f0 -> Node0x70e920;
	Node0x70e920 -> Node0x70e990;
	Node0x70e7d0 -> Node0x70e990;
	Node0x70e990 -> Node0x70ea00;
	Node0x70e5a0 -> Node0x70ea00;
	Node0x70ea00 -> Node0x70ea70;
	Node0x70de38 -> Node0x70eae0;
	Node0x70eae0 -> Node0x70eb50;
	Node0x70e0d0 -> Node0x70eb50;
	Node0x70eb50 -> Node0x70ebc0;
	Node0x70e140 -> Node0x70ebc0;
	Node0x70ebc0 -> Node0x70ec30;
	Node0x70e1b0 -> Node0x70ec30;
	Node0x70ec30 -> Node0x70eca0;
	Node0x70de98 -> Node0x70eca0;
	Node0x70eca0 -> Node0x70ed10;
	Node0x70e3e0 -> Node0x70ed10;
	Node0x70ed10 -> Node0x70ed80;
	Node0x70e4c0 -> Node0x70ed80;
	Node0x70ed80 -> Node0x70edf0;
	Node0x70e300 -> Node0x70edf0;
	Node0x70edf0 -> Node0x70ee60;
	Node0x70e840 -> Node0x70ee60;
	Node0x70ee60 -> Node0x70eed0;
	Node0x70e680 -> Node0x70eed0;
	Node0x70eed0 -> Node0x70ef40;
	Node0x70ea70 -> Node0x70ef40;
	Node0x70ef40 -> Node0x70efb0;
	Node0x70df80 -> Node0x70efb0;
	Node0x70efb0 -> Node0x6ab8b8;
	Node0x6ab8b8 -> Node0x70f040;
	Node0x70c5a8 -> Node0x70f2e8;
	Node0x70c438 -> Node0x70f448;
	Node0x70c278 -> Node0x70f558;
	Node0x70bd68 -> Node0x70f668;
}
