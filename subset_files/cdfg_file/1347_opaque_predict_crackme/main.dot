digraph "DFG for'main' function" {
	Node0x12f6be8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12f6c68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x12f6cf8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x12f7158[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x12f7238[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x12f7358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12f7590[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x12f7648[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12f85b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x12f8c40[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x12f8cb0[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0x12f8d20[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x12f8d90[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x12f8e00[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x12f8e70[shape=record, label="  %13 = and i32 %6, %10"];
	Node0x12f8ee0[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x12f8f50[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x12f8fc0[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x12f9030[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x12f90a0[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x12f9110[shape=record, label="  %19 = shl i32 %12, 1"];
	Node0x12f9180[shape=record, label="  %20 = shl i32 %11, 1"];
	Node0x12f91f0[shape=record, label="  %21 = sub i32 1, %6"];
	Node0x12f9260[shape=record, label="  %22 = add i32 %21, %12"];
	Node0x12f92d0[shape=record, label="  %23 = add i32 %22, %13"];
	Node0x12f9340[shape=record, label="  %24 = sub i32 %23, %14"];
	Node0x12f93b0[shape=record, label="  %25 = add i32 %24, %15"];
	Node0x12f9420[shape=record, label="  %26 = sub i32 %25, %19"];
	Node0x12f9490[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x12f9500[shape=record, label="  %28 = sub i32 %27, %18"];
	Node0x12f9570[shape=record, label="  %29 = icmp eq i32 %9, %28"];
	Node0x12979d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x12f9600[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x12f9858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12f99b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x12f9a78[shape=record, label="  ret i32 0"];
	Node0x12f6be8 -> Node0x12f6c68;
	Node0x12f6c68 -> Node0x12f6cf8;
	Node0x12f6cf8 -> Node0x12f7158;
	Node0x12f7158 -> Node0x12f7238;
	Node0x12f7238 -> Node0x12f7358;
	Node0x12f7358 -> Node0x12f7590;
	Node0x12f7590 -> Node0x12f7648;
	Node0x12f7648 -> Node0x12f85b8;
	Node0x12f85b8 -> Node0x12f8c40;
	Node0x12f8c40 -> Node0x12f8cb0;
	Node0x12f8cb0 -> Node0x12f8d20;
	Node0x12f8d20 -> Node0x12f8d90;
	Node0x12f8d90 -> Node0x12f8e00;
	Node0x12f8e00 -> Node0x12f8e70;
	Node0x12f8e70 -> Node0x12f8ee0;
	Node0x12f8ee0 -> Node0x12f8f50;
	Node0x12f8f50 -> Node0x12f8fc0;
	Node0x12f8fc0 -> Node0x12f9030;
	Node0x12f9030 -> Node0x12f90a0;
	Node0x12f90a0 -> Node0x12f9110;
	Node0x12f9110 -> Node0x12f9180;
	Node0x12f9180 -> Node0x12f91f0;
	Node0x12f91f0 -> Node0x12f9260;
	Node0x12f9260 -> Node0x12f92d0;
	Node0x12f92d0 -> Node0x12f9340;
	Node0x12f9340 -> Node0x12f93b0;
	Node0x12f93b0 -> Node0x12f9420;
	Node0x12f9420 -> Node0x12f9490;
	Node0x12f9490 -> Node0x12f9500;
	Node0x12f9500 -> Node0x12f9570;
	Node0x12f9570 -> Node0x12979d8;
	Node0x12979d8 -> Node0x12f9600;
	Node0x12f9600 -> Node0x12f9858;
	Node0x12f9858 -> Node0x12f99b8;
	Node0x12f99b8 -> Node0x12f9a78;
edge [color=red]
	Node0x12f6be8 -> Node0x12f6cf8;
	Node0x12f6cf8 -> Node0x12f7158;
	Node0x12f6c68 -> Node0x12f7238;
	Node0x12f7238 -> Node0x12f7358;
	Node0x12f6be8 -> Node0x12f7590;
	Node0x12f6c68 -> Node0x12f7590;
	Node0x12f6be8 -> Node0x12f7648;
	Node0x12f6c68 -> Node0x12f85b8;
	Node0x12f7648 -> Node0x12f8c40;
	Node0x12f8c40 -> Node0x12f8cb0;
	Node0x12f85b8 -> Node0x12f8d20;
	Node0x12f7648 -> Node0x12f8d90;
	Node0x12f8d20 -> Node0x12f8d90;
	Node0x12f85b8 -> Node0x12f8e00;
	Node0x12f7648 -> Node0x12f8e00;
	Node0x12f7648 -> Node0x12f8e70;
	Node0x12f8d20 -> Node0x12f8e70;
	Node0x12f85b8 -> Node0x12f8ee0;
	Node0x12f7648 -> Node0x12f8ee0;
	Node0x12f8ee0 -> Node0x12f8f50;
	Node0x12f85b8 -> Node0x12f8fc0;
	Node0x12f7648 -> Node0x12f8fc0;
	Node0x12f8fc0 -> Node0x12f9030;
	Node0x12f9030 -> Node0x12f90a0;
	Node0x12f8e00 -> Node0x12f9110;
	Node0x12f8d90 -> Node0x12f9180;
	Node0x12f7648 -> Node0x12f91f0;
	Node0x12f91f0 -> Node0x12f9260;
	Node0x12f8e00 -> Node0x12f9260;
	Node0x12f9260 -> Node0x12f92d0;
	Node0x12f8e70 -> Node0x12f92d0;
	Node0x12f92d0 -> Node0x12f9340;
	Node0x12f8ee0 -> Node0x12f9340;
	Node0x12f9340 -> Node0x12f93b0;
	Node0x12f8f50 -> Node0x12f93b0;
	Node0x12f93b0 -> Node0x12f9420;
	Node0x12f9110 -> Node0x12f9420;
	Node0x12f9420 -> Node0x12f9490;
	Node0x12f9180 -> Node0x12f9490;
	Node0x12f9490 -> Node0x12f9500;
	Node0x12f90a0 -> Node0x12f9500;
	Node0x12f8cb0 -> Node0x12f9570;
	Node0x12f9500 -> Node0x12f9570;
	Node0x12f9570 -> Node0x12979d8;
	Node0x12979d8 -> Node0x12f9600;
	Node0x12f7238 -> Node0x12f9858;
	Node0x12f6cf8 -> Node0x12f99b8;
}
