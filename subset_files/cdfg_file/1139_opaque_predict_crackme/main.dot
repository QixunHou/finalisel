digraph "DFG for'main' function" {
	Node0x23f7fc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23f8048[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23f80d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23f8138[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x23f81e8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x23f8618[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23f86f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x23f87f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23f88b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x23f8968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x23f8a28[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x23f8ad8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x23f2830[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x23f8cd8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23f9c48[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23fa2b8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x23fa318[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x23fa428[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x23fa688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x23fa7e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x23fa8f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23faa08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23faac8[shape=record, label="  ret i32 0"];
	Node0x23f7fc8 -> Node0x23f8048;
	Node0x23f8048 -> Node0x23f80d8;
	Node0x23f80d8 -> Node0x23f8138;
	Node0x23f8138 -> Node0x23f81e8;
	Node0x23f81e8 -> Node0x23f8618;
	Node0x23f8618 -> Node0x23f86f8;
	Node0x23f86f8 -> Node0x23f87f8;
	Node0x23f87f8 -> Node0x23f88b8;
	Node0x23f88b8 -> Node0x23f8968;
	Node0x23f8968 -> Node0x23f8a28;
	Node0x23f8a28 -> Node0x23f8ad8;
	Node0x23f8ad8 -> Node0x23f2830;
	Node0x23f2830 -> Node0x23f8cd8;
	Node0x23f8cd8 -> Node0x23f9c48;
	Node0x23f9c48 -> Node0x23fa2b8;
	Node0x23fa2b8 -> Node0x23fa318;
	Node0x23fa318 -> Node0x23fa428;
	Node0x23fa428 -> Node0x23fa688;
	Node0x23fa688 -> Node0x23fa7e8;
	Node0x23fa7e8 -> Node0x23fa8f8;
	Node0x23fa8f8 -> Node0x23faa08;
	Node0x23faa08 -> Node0x23faac8;
edge [color=red]
	Node0x23f7fc8 -> Node0x23f81e8;
	Node0x23f81e8 -> Node0x23f8618;
	Node0x23f8048 -> Node0x23f86f8;
	Node0x23f86f8 -> Node0x23f87f8;
	Node0x23f80d8 -> Node0x23f88b8;
	Node0x23f88b8 -> Node0x23f8968;
	Node0x23f8138 -> Node0x23f8a28;
	Node0x23f8a28 -> Node0x23f8ad8;
	Node0x23f7fc8 -> Node0x23f2830;
	Node0x23f8048 -> Node0x23f2830;
	Node0x23f80d8 -> Node0x23f2830;
	Node0x23f8138 -> Node0x23f2830;
	Node0x23f7fc8 -> Node0x23f8cd8;
	Node0x23f8048 -> Node0x23f9c48;
	Node0x23f80d8 -> Node0x23fa2b8;
	Node0x23f8138 -> Node0x23fa318;
	Node0x23f8cd8 -> Node0x23fa428;
	Node0x23f9c48 -> Node0x23fa428;
	Node0x23fa2b8 -> Node0x23fa428;
	Node0x23fa318 -> Node0x23fa428;
	Node0x23f8a28 -> Node0x23fa688;
	Node0x23f88b8 -> Node0x23fa7e8;
	Node0x23f86f8 -> Node0x23fa8f8;
	Node0x23f81e8 -> Node0x23faa08;
}
