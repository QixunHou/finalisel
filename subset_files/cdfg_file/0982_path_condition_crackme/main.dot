digraph "DFG for'main' function" {
	Node0x131cf08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x131cf88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x131d018[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x131d478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x131d558[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x131d678[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x131d8b0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x131d968[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x131e8d8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x131ef60[shape=record, label="  %8 = shl i32 %6, 1"];
	Node0x131efd0[shape=record, label="  %9 = add i32 %8, -1"];
	Node0x131f040[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x131f0b0[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x131f120[shape=record, label="  %12 = mul i32 %11, 3"];
	Node0x131f190[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x131f200[shape=record, label="  %14 = add i32 %7, 1"];
	Node0x131f270[shape=record, label="  %15 = and i32 %7, %6"];
	Node0x131f2e0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x131f350[shape=record, label="  %17 = xor i32 %11, -1"];
	Node0x131f3c0[shape=record, label="  %18 = or i32 %6, %13"];
	Node0x131f430[shape=record, label="  %19 = xor i32 %10, -1"];
	Node0x131f4a0[shape=record, label="  %20 = shl i32 %18, 2"];
	Node0x131f510[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0x131f580[shape=record, label="  %22 = and i32 %6, %13"];
	Node0x131f5f0[shape=record, label="  %23 = add i32 %22, %7"];
	Node0x131f660[shape=record, label="  %24 = add i32 %23, %15"];
	Node0x131f6d0[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x131f740[shape=record, label="  %26 = sub i32 %14, %10"];
	Node0x131f7b0[shape=record, label="  %27 = add i32 %26, %16"];
	Node0x131f820[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x131f890[shape=record, label="  %29 = sub i32 %28, %18"];
	Node0x131f900[shape=record, label="  %30 = add i32 %29, %19"];
	Node0x131f970[shape=record, label="  %31 = add i32 %30, %12"];
	Node0x131f9e0[shape=record, label="  %32 = sub i32 %31, %21"];
	Node0x131fc60[shape=record, label="  %33 = add i32 %32, %25"];
	Node0x131fcd0[shape=record, label="  %34 = icmp eq i32 %9, %33"];
	Node0x12bd9d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x131fd60[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0x131ffb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1320118[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x13201d8[shape=record, label="  ret i32 0"];
	Node0x131cf08 -> Node0x131cf88;
	Node0x131cf88 -> Node0x131d018;
	Node0x131d018 -> Node0x131d478;
	Node0x131d478 -> Node0x131d558;
	Node0x131d558 -> Node0x131d678;
	Node0x131d678 -> Node0x131d8b0;
	Node0x131d8b0 -> Node0x131d968;
	Node0x131d968 -> Node0x131e8d8;
	Node0x131e8d8 -> Node0x131ef60;
	Node0x131ef60 -> Node0x131efd0;
	Node0x131efd0 -> Node0x131f040;
	Node0x131f040 -> Node0x131f0b0;
	Node0x131f0b0 -> Node0x131f120;
	Node0x131f120 -> Node0x131f190;
	Node0x131f190 -> Node0x131f200;
	Node0x131f200 -> Node0x131f270;
	Node0x131f270 -> Node0x131f2e0;
	Node0x131f2e0 -> Node0x131f350;
	Node0x131f350 -> Node0x131f3c0;
	Node0x131f3c0 -> Node0x131f430;
	Node0x131f430 -> Node0x131f4a0;
	Node0x131f4a0 -> Node0x131f510;
	Node0x131f510 -> Node0x131f580;
	Node0x131f580 -> Node0x131f5f0;
	Node0x131f5f0 -> Node0x131f660;
	Node0x131f660 -> Node0x131f6d0;
	Node0x131f6d0 -> Node0x131f740;
	Node0x131f740 -> Node0x131f7b0;
	Node0x131f7b0 -> Node0x131f820;
	Node0x131f820 -> Node0x131f890;
	Node0x131f890 -> Node0x131f900;
	Node0x131f900 -> Node0x131f970;
	Node0x131f970 -> Node0x131f9e0;
	Node0x131f9e0 -> Node0x131fc60;
	Node0x131fc60 -> Node0x131fcd0;
	Node0x131fcd0 -> Node0x12bd9d8;
	Node0x12bd9d8 -> Node0x131fd60;
	Node0x131fd60 -> Node0x131ffb8;
	Node0x131ffb8 -> Node0x1320118;
	Node0x1320118 -> Node0x13201d8;
edge [color=red]
	Node0x131cf08 -> Node0x131d018;
	Node0x131d018 -> Node0x131d478;
	Node0x131cf88 -> Node0x131d558;
	Node0x131d558 -> Node0x131d678;
	Node0x131cf08 -> Node0x131d8b0;
	Node0x131cf88 -> Node0x131d8b0;
	Node0x131cf08 -> Node0x131d968;
	Node0x131cf88 -> Node0x131e8d8;
	Node0x131d968 -> Node0x131ef60;
	Node0x131ef60 -> Node0x131efd0;
	Node0x131e8d8 -> Node0x131f040;
	Node0x131d968 -> Node0x131f040;
	Node0x131e8d8 -> Node0x131f0b0;
	Node0x131d968 -> Node0x131f0b0;
	Node0x131f0b0 -> Node0x131f120;
	Node0x131e8d8 -> Node0x131f190;
	Node0x131e8d8 -> Node0x131f200;
	Node0x131e8d8 -> Node0x131f270;
	Node0x131d968 -> Node0x131f270;
	Node0x131f270 -> Node0x131f2e0;
	Node0x131f0b0 -> Node0x131f350;
	Node0x131d968 -> Node0x131f3c0;
	Node0x131f190 -> Node0x131f3c0;
	Node0x131f040 -> Node0x131f430;
	Node0x131f3c0 -> Node0x131f4a0;
	Node0x131f4a0 -> Node0x131f510;
	Node0x131d968 -> Node0x131f580;
	Node0x131f190 -> Node0x131f580;
	Node0x131f580 -> Node0x131f5f0;
	Node0x131e8d8 -> Node0x131f5f0;
	Node0x131f5f0 -> Node0x131f660;
	Node0x131f270 -> Node0x131f660;
	Node0x131f660 -> Node0x131f6d0;
	Node0x131f200 -> Node0x131f740;
	Node0x131f040 -> Node0x131f740;
	Node0x131f740 -> Node0x131f7b0;
	Node0x131f2e0 -> Node0x131f7b0;
	Node0x131f7b0 -> Node0x131f820;
	Node0x131f350 -> Node0x131f820;
	Node0x131f820 -> Node0x131f890;
	Node0x131f3c0 -> Node0x131f890;
	Node0x131f890 -> Node0x131f900;
	Node0x131f430 -> Node0x131f900;
	Node0x131f900 -> Node0x131f970;
	Node0x131f120 -> Node0x131f970;
	Node0x131f970 -> Node0x131f9e0;
	Node0x131f510 -> Node0x131f9e0;
	Node0x131f9e0 -> Node0x131fc60;
	Node0x131f6d0 -> Node0x131fc60;
	Node0x131efd0 -> Node0x131fcd0;
	Node0x131fc60 -> Node0x131fcd0;
	Node0x131fcd0 -> Node0x12bd9d8;
	Node0x12bd9d8 -> Node0x131fd60;
	Node0x131d558 -> Node0x131ffb8;
	Node0x131d018 -> Node0x1320118;
}
