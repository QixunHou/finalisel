digraph "DFG for'main' function" {
	Node0xc2db18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc2db98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc2dc28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xc2dc88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xc2dd38[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xc2e168[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc2e248[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xc2e348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc2e408[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xc2e4b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xc2e578[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xc2e628[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xc28b10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xc2e828[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc2f798[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc2fe08[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xc2fe68[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xc2fee0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0xc2ff50[shape=record, label="  %15 = and i32 %11, %14"];
	Node0xc2ffc0[shape=record, label="  %16 = add i32 %15, 1"];
	Node0xc30030[shape=record, label="  %17 = add i32 %16, %13"];
	Node0xc300a0[shape=record, label="  %18 = shl i32 %11, 1"];
	Node0xc30110[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0xc30180[shape=record, label="  %20 = xor i32 %11, -1"];
	Node0xc301f0[shape=record, label="  %21 = and i32 %12, %20"];
	Node0xc30260[shape=record, label="  %22 = shl i32 %15, 2"];
	Node0xc302d0[shape=record, label="  %23 = and i32 %12, %11"];
	Node0xc30340[shape=record, label="  %24 = xor i32 %13, %10"];
	Node0xc303b0[shape=record, label="  %25 = xor i32 %10, -1"];
	Node0xc30420[shape=record, label="  %26 = and i32 %13, %10"];
	Node0xc30490[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0xc30500[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0xc30570[shape=record, label="  %29 = or i32 %13, %10"];
	Node0xc305e0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0xc30650[shape=record, label="  %31 = xor i32 %24, -1"];
	Node0xc306c0[shape=record, label="  %32 = xor i32 %13, -1"];
	Node0xc30730[shape=record, label="  %33 = and i32 %10, %32"];
	Node0xc307a0[shape=record, label="  %34 = and i32 %13, %25"];
	Node0xc30810[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0xc30880[shape=record, label="  %36 = add i32 %12, 1"];
	Node0xc308f0[shape=record, label="  %37 = add i32 %23, %36"];
	Node0xc30960[shape=record, label="  %38 = add i32 %37, %24"];
	Node0xc309d0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0xc30a40[shape=record, label="  %40 = add i32 %12, %11"];
	Node0xc30ab0[shape=record, label="  %41 = sub i32 %19, %40"];
	Node0xc30b20[shape=record, label="  %42 = sub i32 %41, %21"];
	Node0xc30b90[shape=record, label="  %43 = sub i32 %42, %13"];
	Node0xc30c00[shape=record, label="  %44 = add i32 %43, %22"];
	Node0xc30c70[shape=record, label="  %45 = add i32 %44, %31"];
	Node0xc30ce0[shape=record, label="  %46 = add i32 %45, %33"];
	Node0xc30d50[shape=record, label="  %47 = sub i32 %46, %30"];
	Node0xc30dc0[shape=record, label="  %48 = add i32 %47, %35"];
	Node0xc30e30[shape=record, label="  %49 = add i32 %48, %27"];
	Node0xc30ea0[shape=record, label="  %50 = sub i32 %49, %28"];
	Node0xc30f10[shape=record, label="  %51 = add i32 %50, %39"];
	Node0xc30f80[shape=record, label="  %52 = icmp eq i32 %17, %51"];
	Node0xbcd8b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc31010[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0xc312b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xc31418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xc31528[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc31638[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc316f8[shape=record, label="  ret i32 0"];
	Node0xc2db18 -> Node0xc2db98;
	Node0xc2db98 -> Node0xc2dc28;
	Node0xc2dc28 -> Node0xc2dc88;
	Node0xc2dc88 -> Node0xc2dd38;
	Node0xc2dd38 -> Node0xc2e168;
	Node0xc2e168 -> Node0xc2e248;
	Node0xc2e248 -> Node0xc2e348;
	Node0xc2e348 -> Node0xc2e408;
	Node0xc2e408 -> Node0xc2e4b8;
	Node0xc2e4b8 -> Node0xc2e578;
	Node0xc2e578 -> Node0xc2e628;
	Node0xc2e628 -> Node0xc28b10;
	Node0xc28b10 -> Node0xc2e828;
	Node0xc2e828 -> Node0xc2f798;
	Node0xc2f798 -> Node0xc2fe08;
	Node0xc2fe08 -> Node0xc2fe68;
	Node0xc2fe68 -> Node0xc2fee0;
	Node0xc2fee0 -> Node0xc2ff50;
	Node0xc2ff50 -> Node0xc2ffc0;
	Node0xc2ffc0 -> Node0xc30030;
	Node0xc30030 -> Node0xc300a0;
	Node0xc300a0 -> Node0xc30110;
	Node0xc30110 -> Node0xc30180;
	Node0xc30180 -> Node0xc301f0;
	Node0xc301f0 -> Node0xc30260;
	Node0xc30260 -> Node0xc302d0;
	Node0xc302d0 -> Node0xc30340;
	Node0xc30340 -> Node0xc303b0;
	Node0xc303b0 -> Node0xc30420;
	Node0xc30420 -> Node0xc30490;
	Node0xc30490 -> Node0xc30500;
	Node0xc30500 -> Node0xc30570;
	Node0xc30570 -> Node0xc305e0;
	Node0xc305e0 -> Node0xc30650;
	Node0xc30650 -> Node0xc306c0;
	Node0xc306c0 -> Node0xc30730;
	Node0xc30730 -> Node0xc307a0;
	Node0xc307a0 -> Node0xc30810;
	Node0xc30810 -> Node0xc30880;
	Node0xc30880 -> Node0xc308f0;
	Node0xc308f0 -> Node0xc30960;
	Node0xc30960 -> Node0xc309d0;
	Node0xc309d0 -> Node0xc30a40;
	Node0xc30a40 -> Node0xc30ab0;
	Node0xc30ab0 -> Node0xc30b20;
	Node0xc30b20 -> Node0xc30b90;
	Node0xc30b90 -> Node0xc30c00;
	Node0xc30c00 -> Node0xc30c70;
	Node0xc30c70 -> Node0xc30ce0;
	Node0xc30ce0 -> Node0xc30d50;
	Node0xc30d50 -> Node0xc30dc0;
	Node0xc30dc0 -> Node0xc30e30;
	Node0xc30e30 -> Node0xc30ea0;
	Node0xc30ea0 -> Node0xc30f10;
	Node0xc30f10 -> Node0xc30f80;
	Node0xc30f80 -> Node0xbcd8b8;
	Node0xbcd8b8 -> Node0xc31010;
	Node0xc31010 -> Node0xc312b8;
	Node0xc312b8 -> Node0xc31418;
	Node0xc31418 -> Node0xc31528;
	Node0xc31528 -> Node0xc31638;
	Node0xc31638 -> Node0xc316f8;
edge [color=red]
	Node0xc2db18 -> Node0xc2dd38;
	Node0xc2dd38 -> Node0xc2e168;
	Node0xc2db98 -> Node0xc2e248;
	Node0xc2e248 -> Node0xc2e348;
	Node0xc2dc28 -> Node0xc2e408;
	Node0xc2e408 -> Node0xc2e4b8;
	Node0xc2dc88 -> Node0xc2e578;
	Node0xc2e578 -> Node0xc2e628;
	Node0xc2db18 -> Node0xc28b10;
	Node0xc2db98 -> Node0xc28b10;
	Node0xc2dc28 -> Node0xc28b10;
	Node0xc2dc88 -> Node0xc28b10;
	Node0xc2db18 -> Node0xc2e828;
	Node0xc2db98 -> Node0xc2f798;
	Node0xc2dc28 -> Node0xc2fe08;
	Node0xc2dc88 -> Node0xc2fe68;
	Node0xc2fe08 -> Node0xc2fee0;
	Node0xc2f798 -> Node0xc2ff50;
	Node0xc2fee0 -> Node0xc2ff50;
	Node0xc2ff50 -> Node0xc2ffc0;
	Node0xc2ffc0 -> Node0xc30030;
	Node0xc2fe68 -> Node0xc30030;
	Node0xc2f798 -> Node0xc300a0;
	Node0xc300a0 -> Node0xc30110;
	Node0xc2f798 -> Node0xc30180;
	Node0xc2fe08 -> Node0xc301f0;
	Node0xc30180 -> Node0xc301f0;
	Node0xc2ff50 -> Node0xc30260;
	Node0xc2fe08 -> Node0xc302d0;
	Node0xc2f798 -> Node0xc302d0;
	Node0xc2fe68 -> Node0xc30340;
	Node0xc2e828 -> Node0xc30340;
	Node0xc2e828 -> Node0xc303b0;
	Node0xc2fe68 -> Node0xc30420;
	Node0xc2e828 -> Node0xc30420;
	Node0xc30420 -> Node0xc30490;
	Node0xc30490 -> Node0xc30500;
	Node0xc2fe68 -> Node0xc30570;
	Node0xc2e828 -> Node0xc30570;
	Node0xc30570 -> Node0xc305e0;
	Node0xc30340 -> Node0xc30650;
	Node0xc2fe68 -> Node0xc306c0;
	Node0xc2e828 -> Node0xc30730;
	Node0xc306c0 -> Node0xc30730;
	Node0xc2fe68 -> Node0xc307a0;
	Node0xc303b0 -> Node0xc307a0;
	Node0xc307a0 -> Node0xc30810;
	Node0xc2fe08 -> Node0xc30880;
	Node0xc302d0 -> Node0xc308f0;
	Node0xc30880 -> Node0xc308f0;
	Node0xc308f0 -> Node0xc30960;
	Node0xc30340 -> Node0xc30960;
	Node0xc30960 -> Node0xc309d0;
	Node0xc2fe08 -> Node0xc30a40;
	Node0xc2f798 -> Node0xc30a40;
	Node0xc30110 -> Node0xc30ab0;
	Node0xc30a40 -> Node0xc30ab0;
	Node0xc30ab0 -> Node0xc30b20;
	Node0xc301f0 -> Node0xc30b20;
	Node0xc30b20 -> Node0xc30b90;
	Node0xc2fe68 -> Node0xc30b90;
	Node0xc30b90 -> Node0xc30c00;
	Node0xc30260 -> Node0xc30c00;
	Node0xc30c00 -> Node0xc30c70;
	Node0xc30650 -> Node0xc30c70;
	Node0xc30c70 -> Node0xc30ce0;
	Node0xc30730 -> Node0xc30ce0;
	Node0xc30ce0 -> Node0xc30d50;
	Node0xc305e0 -> Node0xc30d50;
	Node0xc30d50 -> Node0xc30dc0;
	Node0xc30810 -> Node0xc30dc0;
	Node0xc30dc0 -> Node0xc30e30;
	Node0xc30490 -> Node0xc30e30;
	Node0xc30e30 -> Node0xc30ea0;
	Node0xc30500 -> Node0xc30ea0;
	Node0xc30ea0 -> Node0xc30f10;
	Node0xc309d0 -> Node0xc30f10;
	Node0xc30030 -> Node0xc30f80;
	Node0xc30f10 -> Node0xc30f80;
	Node0xc30f80 -> Node0xbcd8b8;
	Node0xbcd8b8 -> Node0xc31010;
	Node0xc2e578 -> Node0xc312b8;
	Node0xc2e408 -> Node0xc31418;
	Node0xc2e248 -> Node0xc31528;
	Node0xc2dd38 -> Node0xc31638;
}
