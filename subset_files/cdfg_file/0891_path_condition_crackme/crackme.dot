digraph "DFG for'crackme' function" {
	Node0xc2c0f0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xc2c160[shape=record, label="  %6 = and i32 %5, %1"];
	Node0xc2c200[shape=record, label="  %7 = add i32 %6, 1"];
	Node0xc2c270[shape=record, label="  %8 = add i32 %7, %3"];
	Node0xc2c2e0[shape=record, label="  %9 = shl i32 %5, 1"];
	Node0xc2c350[shape=record, label="  %10 = shl i32 %1, 1"];
	Node0xc2c3f0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0xc2c460[shape=record, label="  %12 = xor i32 %1, -1"];
	Node0xc2c4d0[shape=record, label="  %13 = and i32 %12, %2"];
	Node0xc2c570[shape=record, label="  %14 = shl i32 %6, 2"];
	Node0xc2c5e0[shape=record, label="  %15 = and i32 %2, %1"];
	Node0xc2c650[shape=record, label="  %16 = xor i32 %3, %0"];
	Node0xc2c6c0[shape=record, label="  %17 = xor i32 %0, -1"];
	Node0xc2c730[shape=record, label="  %18 = and i32 %3, %0"];
	Node0xc2c7a0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0xc2c810[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0xc2c880[shape=record, label="  %21 = or i32 %3, %0"];
	Node0xc2c8f0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0xc2c960[shape=record, label="  %23 = xor i32 %16, -1"];
	Node0xc2c9d0[shape=record, label="  %24 = xor i32 %3, -1"];
	Node0xc2ca40[shape=record, label="  %25 = and i32 %24, %0"];
	Node0xc2cab0[shape=record, label="  %26 = and i32 %17, %3"];
	Node0xc2cb50[shape=record, label="  %27 = mul i32 %26, 3"];
	Node0xc2cbc0[shape=record, label="  %28 = add i32 %16, %15"];
	Node0xc2cc30[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0xc2cca0[shape=record, label="  %30 = add i32 %2, %1"];
	Node0xc2cd10[shape=record, label="  %31 = add i32 %30, %9"];
	Node0xc2cd80[shape=record, label="  %32 = sub i32 %11, %31"];
	Node0xc2d000[shape=record, label="  %33 = sub i32 %32, %13"];
	Node0xc2d070[shape=record, label="  %34 = sub i32 %33, %3"];
	Node0xc2d0e0[shape=record, label="  %35 = add i32 %34, %14"];
	Node0xc2d150[shape=record, label="  %36 = add i32 %35, %23"];
	Node0xc2d1c0[shape=record, label="  %37 = add i32 %36, %25"];
	Node0xc2d230[shape=record, label="  %38 = sub i32 %37, %22"];
	Node0xc2d2a0[shape=record, label="  %39 = add i32 %38, %27"];
	Node0xc2d310[shape=record, label="  %40 = add i32 %39, %19"];
	Node0xc2d380[shape=record, label="  %41 = sub i32 %40, %20"];
	Node0xc2d3f0[shape=record, label="  %42 = add i32 %41, %29"];
	Node0xc2d460[shape=record, label="  %43 = icmp eq i32 %8, %42"];
	Node0xbcc268[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc2d900[shape=record, label="  %45 = tail call i32 @puts(i8* nonnull dereferenceable(1) %44)"];
	Node0xc2d950[shape=record, label="  ret void"];
	Node0xc2c0f0 -> Node0xc2c160;
	Node0xc2c160 -> Node0xc2c200;
	Node0xc2c200 -> Node0xc2c270;
	Node0xc2c270 -> Node0xc2c2e0;
	Node0xc2c2e0 -> Node0xc2c350;
	Node0xc2c350 -> Node0xc2c3f0;
	Node0xc2c3f0 -> Node0xc2c460;
	Node0xc2c460 -> Node0xc2c4d0;
	Node0xc2c4d0 -> Node0xc2c570;
	Node0xc2c570 -> Node0xc2c5e0;
	Node0xc2c5e0 -> Node0xc2c650;
	Node0xc2c650 -> Node0xc2c6c0;
	Node0xc2c6c0 -> Node0xc2c730;
	Node0xc2c730 -> Node0xc2c7a0;
	Node0xc2c7a0 -> Node0xc2c810;
	Node0xc2c810 -> Node0xc2c880;
	Node0xc2c880 -> Node0xc2c8f0;
	Node0xc2c8f0 -> Node0xc2c960;
	Node0xc2c960 -> Node0xc2c9d0;
	Node0xc2c9d0 -> Node0xc2ca40;
	Node0xc2ca40 -> Node0xc2cab0;
	Node0xc2cab0 -> Node0xc2cb50;
	Node0xc2cb50 -> Node0xc2cbc0;
	Node0xc2cbc0 -> Node0xc2cc30;
	Node0xc2cc30 -> Node0xc2cca0;
	Node0xc2cca0 -> Node0xc2cd10;
	Node0xc2cd10 -> Node0xc2cd80;
	Node0xc2cd80 -> Node0xc2d000;
	Node0xc2d000 -> Node0xc2d070;
	Node0xc2d070 -> Node0xc2d0e0;
	Node0xc2d0e0 -> Node0xc2d150;
	Node0xc2d150 -> Node0xc2d1c0;
	Node0xc2d1c0 -> Node0xc2d230;
	Node0xc2d230 -> Node0xc2d2a0;
	Node0xc2d2a0 -> Node0xc2d310;
	Node0xc2d310 -> Node0xc2d380;
	Node0xc2d380 -> Node0xc2d3f0;
	Node0xc2d3f0 -> Node0xc2d460;
	Node0xc2d460 -> Node0xbcc268;
	Node0xbcc268 -> Node0xc2d900;
	Node0xc2d900 -> Node0xc2d950;
edge [color=red]
	Node0xc2c0f0 -> Node0xc2c160;
	Node0xc2c160 -> Node0xc2c200;
	Node0xc2c200 -> Node0xc2c270;
	Node0xc2c0f0 -> Node0xc2c2e0;
	Node0xc2c350 -> Node0xc2c3f0;
	Node0xc2c460 -> Node0xc2c4d0;
	Node0xc2c160 -> Node0xc2c570;
	Node0xc2c730 -> Node0xc2c7a0;
	Node0xc2c7a0 -> Node0xc2c810;
	Node0xc2c880 -> Node0xc2c8f0;
	Node0xc2c650 -> Node0xc2c960;
	Node0xc2c9d0 -> Node0xc2ca40;
	Node0xc2c6c0 -> Node0xc2cab0;
	Node0xc2cab0 -> Node0xc2cb50;
	Node0xc2c650 -> Node0xc2cbc0;
	Node0xc2c5e0 -> Node0xc2cbc0;
	Node0xc2cbc0 -> Node0xc2cc30;
	Node0xc2cca0 -> Node0xc2cd10;
	Node0xc2c2e0 -> Node0xc2cd10;
	Node0xc2c3f0 -> Node0xc2cd80;
	Node0xc2cd10 -> Node0xc2cd80;
	Node0xc2cd80 -> Node0xc2d000;
	Node0xc2c4d0 -> Node0xc2d000;
	Node0xc2d000 -> Node0xc2d070;
	Node0xc2d070 -> Node0xc2d0e0;
	Node0xc2c570 -> Node0xc2d0e0;
	Node0xc2d0e0 -> Node0xc2d150;
	Node0xc2c960 -> Node0xc2d150;
	Node0xc2d150 -> Node0xc2d1c0;
	Node0xc2ca40 -> Node0xc2d1c0;
	Node0xc2d1c0 -> Node0xc2d230;
	Node0xc2c8f0 -> Node0xc2d230;
	Node0xc2d230 -> Node0xc2d2a0;
	Node0xc2cb50 -> Node0xc2d2a0;
	Node0xc2d2a0 -> Node0xc2d310;
	Node0xc2c7a0 -> Node0xc2d310;
	Node0xc2d310 -> Node0xc2d380;
	Node0xc2c810 -> Node0xc2d380;
	Node0xc2d380 -> Node0xc2d3f0;
	Node0xc2cc30 -> Node0xc2d3f0;
	Node0xc2c270 -> Node0xc2d460;
	Node0xc2d3f0 -> Node0xc2d460;
	Node0xc2d460 -> Node0xbcc268;
	Node0xbcc268 -> Node0xc2d900;
}
