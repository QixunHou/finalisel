; ModuleID = '../.././c_source_file/0059_path_condition_crackme.c'
source_filename = "../.././c_source_file/0059_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %1, %0
  %8 = and i32 %7, %2
  %9 = xor i32 %2, -1
  %10 = and i32 %9, %1
  %11 = xor i32 %10, %0
  %12 = xor i32 %5, -1
  %13 = and i32 %12, %4
  %14 = or i32 %12, %3
  %15 = xor i32 %13, %14
  %16 = and i32 %4, %3
  %17 = mul i32 %16, 3
  %18 = sub i32 %11, %8
  %19 = add i32 %18, %15
  %20 = shl i32 %19, 1
  %21 = add i32 %20, %17
  %22 = or i32 %9, %0
  %23 = xor i32 %22, %1
  %24 = and i32 %2, %0
  %25 = or i32 %10, %0
  %26 = shl i32 %25, 1
  %27 = and i32 %1, %0
  %28 = xor i32 %27, -1
  %29 = xor i32 %2, %1
  %30 = and i32 %29, %28
  %31 = xor i32 %1, -1
  %32 = and i32 %31, %0
  %33 = xor i32 %32, -1
  %34 = and i32 %29, %33
  %35 = xor i32 %22, -1
  %36 = or i32 %27, %35
  %37 = or i32 %31, %0
  %38 = and i32 %37, %2
  %39 = or i32 %24, %31
  %40 = and i32 %31, %2
  %41 = and i32 %40, %0
  %42 = or i32 %29, %0
  %43 = xor i32 %41, %42
  %44 = or i32 %2, %0
  %45 = xor i32 %44, -1
  %46 = or i32 %45, %1
  %47 = or i32 %31, %2
  %48 = xor i32 %47, %0
  %49 = xor i32 %41, -1
  %50 = xor i32 %48, %49
  %51 = and i32 %9, %0
  %52 = xor i32 %51, -1
  %53 = xor i32 %52, %1
  %54 = shl i32 %53, 1
  %55 = xor i32 %10, -1
  %56 = xor i32 %32, %55
  %57 = xor i32 %0, -1
  %58 = and i32 %47, %57
  %59 = or i32 %41, %58
  %60 = or i32 %35, %31
  %61 = xor i32 %2, %0
  %62 = and i32 %61, %33
  %63 = shl i32 %29, 1
  %64 = or i32 %9, %1
  %65 = xor i32 %64, -1
  %66 = xor i32 %65, %0
  %67 = xor i32 %29, -1
  %68 = or i32 %67, %0
  %69 = xor i32 %29, %0
  %70 = shl i32 %69, 1
  %71 = xor i32 %7, -1
  %72 = or i32 %24, %71
  %73 = and i32 %2, %1
  %74 = xor i32 %73, -1
  %75 = xor i32 %74, %0
  %76 = and i32 %73, %0
  %77 = xor i32 %76, %69
  %78 = or i32 %27, %67
  %79 = xor i32 %64, %0
  %80 = xor i32 %61, -1
  %81 = and i32 %37, %80
  %82 = xor i32 %1, %0
  %83 = xor i32 %82, -1
  %84 = and i32 %44, %83
  %85 = and i32 %82, %80
  %86 = and i32 %22, %1
  %87 = and i32 %40, %57
  %88 = and i32 %47, %0
  %89 = xor i32 %88, 2147483647
  %90 = xor i32 %89, %87
  %91 = and i32 %28, %2
  %92 = and i32 %82, %9
  %93 = or i32 %64, %57
  %94 = and i32 %44, %82
  %95 = xor i32 %24, -1
  %96 = and i32 %82, %95
  %97 = or i32 %51, %31
  %98 = xor i32 %73, %0
  %99 = or i32 %74, %57
  %100 = and i32 %64, %0
  %101 = xor i32 %7, %2
  %102 = and i32 %61, %1
  %103 = or i32 %10, %32
  %104 = or i32 %74, %0
  %105 = or i32 %2, %1
  %106 = xor i32 %105, %0
  %107 = or i32 %76, %106
  %108 = or i32 %61, %1
  %109 = xor i32 %58, %49
  %110 = xor i32 %42, -1
  %111 = or i32 %41, %110
  %112 = xor i32 %37, -1
  %113 = or i32 %112, %2
  %114 = xor i32 %76, -1
  %115 = xor i32 %106, %114
  %116 = and i32 %105, %57
  %117 = or i32 %76, %116
  %118 = and i32 %82, %52
  %119 = and i32 %29, %57
  %120 = shl i32 %119, 1
  %121 = xor i32 %32, %74
  %122 = or i32 %82, %80
  %123 = or i32 %41, %48
  %124 = or i32 %61, %27
  %125 = xor i32 %105, -1
  %126 = add i32 %105, 1
  %127 = and i32 %80, %1
  %128 = or i32 %76, %119
  %129 = or i32 %35, %83
  %130 = shl i32 %129, 1
  %131 = add i32 %44, 1
  %132 = and i32 %33, %2
  %133 = and i32 %95, %31
  %134 = xor i32 %24, %1
  %135 = or i32 %51, %65
  %136 = xor i32 %95, %1
  %137 = and i32 %7, %67
  %138 = xor i32 %22, %27
  %139 = xor i32 %24, %105
  %140 = or i32 %32, %80
  %141 = and i32 %61, %31
  %142 = and i32 %29, %37
  %143 = xor i32 %105, %27
  %144 = xor i32 %51, %74
  %145 = or i32 %125, %0
  %146 = and i32 %61, %28
  %147 = or i32 %45, %83
  %148 = or i32 %61, %112
  %149 = or i32 %105, %0
  %150 = xor i32 %33, %2
  %151 = or i32 %67, %112
  %152 = xor i32 %24, %7
  %153 = shl i32 %152, 1
  %154 = and i32 %74, %57
  %155 = or i32 %61, %82
  %156 = xor i32 %71, %2
  %157 = shl i32 %156, 1
  %158 = or i32 %27, %45
  %159 = shl i32 %158, 2
  %160 = and i32 %9, %83
  %161 = and i32 %52, %83
  %162 = or i32 %24, %125
  %163 = and i32 %52, %31
  %164 = and i32 %80, %33
  %165 = xor i32 %119, %114
  %166 = add i32 %73, 1
  %167 = xor i32 %32, %2
  %168 = and i32 %44, %1
  %169 = or i32 %29, %32
  %170 = or i32 %27, %9
  %171 = shl i32 %170, 1
  %172 = or i32 %24, %82
  %173 = or i32 %71, %2
  %174 = xor i32 %112, %2
  %175 = or i32 %67, %71
  %176 = or i32 %55, %0
  %177 = and i32 %61, %82
  %178 = and i32 %82, %2
  %179 = or i32 %55, %57
  %180 = or i32 %80, %31
  %181 = and i32 %7, %9
  %182 = shl i32 %181, 1
  %183 = or i32 %41, %69
  %184 = or i32 %80, %112
  %185 = and i32 %67, %33
  %186 = xor i32 %35, %1
  %187 = xor i32 %116, %114
  %188 = or i32 %80, %1
  %189 = xor i32 %44, %27
  %190 = or i32 %82, %2
  %191 = or i32 %29, %112
  %192 = and i32 %29, %7
  %193 = or i32 %24, %10
  %194 = shl i32 %106, 1
  %195 = and i32 %22, %31
  %196 = and i32 %80, %28
  %197 = shl i32 %196, 1
  %198 = and i32 %95, %1
  %199 = or i32 %67, %57
  %200 = xor i32 %27, %2
  %201 = and i32 %73, %57
  %202 = and i32 %29, %0
  %203 = or i32 %201, %202
  %204 = add i32 %64, 1
  %205 = xor i32 %24, %37
  %206 = or i32 %61, %71
  %207 = or i32 %32, %9
  %208 = add i32 %51, 1
  %209 = xor i32 %44, %1
  %210 = or i32 %32, %67
  %211 = or i32 %73, %32
  %212 = or i32 %29, %27
  %213 = and i32 %80, %83
  %214 = shl i32 %35, 1
  %215 = and i32 %105, %0
  %216 = xor i32 %215, 2147483647
  %217 = xor i32 %216, %201
  %218 = shl i32 %82, 1
  %219 = and i32 %80, %31
  %220 = xor i32 %28, %2
  %221 = or i32 %29, %71
  %222 = and i32 %67, %57
  %223 = or i32 %51, %73
  %224 = xor i32 %67, %0
  %225 = or i32 %105, %57
  %226 = or i32 %65, %0
  %227 = or i32 %32, %2
  %228 = or i32 %80, %71
  %229 = or i32 %80, %83
  %230 = xor i32 %202, -1
  %231 = xor i32 %201, %230
  %232 = shl i32 %95, 1
  %233 = or i32 %51, %83
  %234 = shl i32 %233, 1
  %235 = xor i32 %69, -1
  %236 = or i32 %76, %235
  %237 = shl i32 %83, 1
  %238 = or i32 %45, %31
  %239 = xor i32 %64, %27
  %240 = xor i32 %55, %0
  %241 = or i32 %87, %88
  %242 = and i32 %83, %2
  %243 = and i32 %55, %57
  %244 = and i32 %61, %83
  %245 = xor i32 %51, %1
  %246 = shl i32 %245, 1
  %247 = and i32 %22, %82
  %248 = shl i32 %247, 1
  %249 = and i32 %9, %33
  %250 = add i32 %1, 1
  %251 = or i32 %27, %125
  %252 = or i32 %35, %1
  %253 = shl i32 %252, 1
  %254 = and i32 %22, %83
  %255 = or i32 %61, %32
  %256 = or i32 %29, %57
  %257 = xor i32 %256, -1
  %258 = or i32 %87, %257
  %259 = xor i32 %37, %2
  %260 = or i32 %51, %1
  %261 = or i32 %51, %82
  %262 = shl i32 %261, 1
  %263 = xor i32 %125, %0
  %264 = or i32 %24, %83
  %265 = shl i32 %264, 1
  %266 = or i32 %27, %65
  %267 = xor i32 %41, %235
  %268 = xor i32 %24, %55
  %269 = and i32 %55, %0
  %270 = and i32 %44, %31
  %271 = or i32 %9, %83
  %272 = add i32 %29, 1
  %273 = and i32 %95, %83
  %274 = or i32 %9, %71
  %275 = and i32 %67, %28
  %276 = or i32 %27, %2
  %277 = or i32 %24, %1
  %278 = or i32 %64, %0
  %279 = and i32 %64, %57
  %280 = or i32 %82, %35
  %281 = and i32 %61, %37
  %282 = add i32 %10, 1
  %283 = or i32 %82, %9
  %284 = or i32 %9, %112
  %285 = or i32 %73, %57
  %286 = or i32 %83, %2
  %287 = and i32 %9, %28
  %288 = and i32 %37, %67
  %289 = and i32 %74, %0
  %290 = xor i32 %45, %1
  %291 = or i32 %82, %45
  %292 = or i32 %201, %215
  %293 = and i32 %7, %80
  %294 = and i32 %67, %0
  %295 = or i32 %10, %57
  %296 = shl i32 %295, 1
  %297 = or i32 %125, %57
  %298 = and i32 %125, %57
  %299 = and i32 %10, %57
  %300 = and i32 %125, %0
  %301 = and i32 %10, %0
  %302 = and i32 %65, %57
  %303 = mul i32 %302, 22
  %304 = shl i32 %201, 1
  %305 = and i32 %65, %0
  %306 = shl i32 %76, 1
  %307 = xor i32 %5, %3
  %308 = xor i32 %307, -1
  %309 = and i32 %308, %4
  %310 = xor i32 %3, -1
  %311 = or i32 %13, %310
  %312 = and i32 %5, %4
  %313 = xor i32 %312, -1
  %314 = xor i32 %4, %3
  %315 = or i32 %314, %5
  %316 = xor i32 %4, -1
  %317 = or i32 %308, %316
  %318 = shl i32 %317, 1
  %319 = xor i32 %13, -1
  %320 = xor i32 %319, %3
  %321 = xor i32 %5, %4
  %322 = xor i32 %321, -1
  %323 = and i32 %310, %4
  %324 = or i32 %323, %5
  %325 = or i32 %12, %4
  %326 = xor i32 %325, -1
  %327 = or i32 %16, %326
  %328 = or i32 %14, %316
  %329 = xor i32 %314, -1
  %330 = or i32 %12, %329
  %331 = xor i32 %326, %3
  %332 = and i32 %5, %3
  %333 = xor i32 %332, -1
  %334 = and i32 %333, %4
  %335 = and i32 %332, %316
  %336 = or i32 %5, %3
  %337 = and i32 %336, %4
  %338 = or i32 %335, %337
  %339 = or i32 %5, %4
  %340 = and i32 %339, %314
  %341 = and i32 %314, %313
  %342 = or i32 %312, %329
  %343 = and i32 %14, %4
  %344 = or i32 %326, %3
  %345 = xor i32 %323, -1
  %346 = xor i32 %345, %5
  %347 = or i32 %323, %308
  %348 = and i32 %339, %310
  %349 = or i32 %310, %4
  %350 = xor i32 %349, -1
  %351 = or i32 %350, %5
  %352 = xor i32 %339, -1
  %353 = or i32 %352, %310
  %354 = or i32 %4, %3
  %355 = and i32 %307, %354
  %356 = or i32 %352, %3
  %357 = and i32 %310, %5
  %358 = and i32 %357, %316
  %359 = or i32 %307, %316
  %360 = xor i32 %359, -1
  %361 = or i32 %358, %360
  %362 = xor i32 %16, -1
  %363 = and i32 %322, %362
  %364 = and i32 %314, %319
  %365 = and i32 %354, %5
  %366 = and i32 %339, %3
  %367 = or i32 %13, %3
  %368 = shl i32 %345, 1
  %369 = xor i32 %339, %3
  %370 = or i32 %323, %322
  %371 = or i32 %312, %3
  %372 = and i32 %321, %314
  %373 = and i32 %12, %3
  %374 = or i32 %312, %373
  %375 = shl i32 %374, 1
  %376 = and i32 %314, %5
  %377 = and i32 %332, %4
  %378 = xor i32 %336, %4
  %379 = xor i32 %378, -1
  %380 = xor i32 %377, %379
  %381 = and i32 %308, %362
  %382 = or i32 %314, %326
  %383 = or i32 %321, %314
  %384 = or i32 %314, %322
  %385 = or i32 %16, %352
  %386 = xor i32 %16, %5
  %387 = shl i32 %386, 1
  %388 = xor i32 %354, -1
  %389 = or i32 %307, %388
  %390 = and i32 %354, %12
  %391 = and i32 %354, %322
  %392 = xor i32 %14, -1
  %393 = or i32 %326, %329
  %394 = and i32 %322, %310
  %395 = or i32 %13, %314
  %396 = and i32 %321, %345
  %397 = or i32 %332, %323
  %398 = xor i32 %333, %4
  %399 = xor i32 %392, %4
  %400 = and i32 %354, %308
  %401 = xor i32 %13, %3
  %402 = xor i32 %308, %4
  %403 = or i32 %307, %350
  %404 = xor i32 %312, %354
  %405 = and i32 %307, %349
  %406 = xor i32 %313, %3
  %407 = xor i32 %373, -1
  %408 = and i32 %407, %4
  %409 = shl i32 %408, 2
  %410 = or i32 %322, %388
  %411 = or i32 %329, %5
  %412 = or i32 %323, %12
  %413 = and i32 %321, %3
  %414 = add i32 %349, 1
  %415 = and i32 %357, %4
  %416 = xor i32 %307, %4
  %417 = xor i32 %416, -1
  %418 = xor i32 %415, %417
  %419 = and i32 %307, %362
  %420 = xor i32 %339, %16
  %421 = and i32 %349, %322
  %422 = and i32 %321, %349
  %423 = or i32 %377, %417
  %424 = and i32 %307, %4
  %425 = or i32 %332, %316
  %426 = and i32 %325, %310
  %427 = xor i32 %312, %349
  %428 = or i32 %12, %388
  %429 = or i32 %16, %392
  %430 = and i32 %307, %316
  %431 = or i32 %322, %3
  %432 = or i32 %312, %314
  %433 = xor i32 %350, %5
  %434 = and i32 %321, %354
  %435 = xor i32 %332, %4
  %436 = and i32 %319, %3
  %437 = xor i32 %325, %16
  %438 = shl i32 %13, 1
  %439 = xor i32 %312, %407
  %440 = shl i32 %439, 1
  %441 = xor i32 %388, %5
  %442 = and i32 %313, %310
  %443 = or i32 %308, %350
  %444 = xor i32 %349, %5
  %445 = or i32 %336, %316
  %446 = and i32 %333, %316
  %447 = or i32 %12, %350
  %448 = xor i32 %336, -1
  %449 = or i32 %448, %4
  %450 = xor i32 %377, %449
  %451 = and i32 %319, %329
  %452 = shl i32 %451, 1
  %453 = or i32 %322, %329
  %454 = or i32 %14, %4
  %455 = shl i32 %454, 1
  %456 = or i32 %314, %352
  %457 = xor i32 %362, %5
  %458 = and i32 %314, %322
  %459 = xor i32 %323, %333
  %460 = or i32 %377, %430
  %461 = or i32 %321, %329
  %462 = or i32 %307, %16
  %463 = xor i32 %14, %4
  %464 = or i32 %321, %3
  %465 = shl i32 %464, 1
  %466 = or i32 %310, %5
  %467 = and i32 %466, %4
  %468 = xor i32 %467, -1
  %469 = xor i32 %358, %468
  %470 = or i32 %13, %332
  %471 = xor i32 %336, %16
  %472 = xor i32 %323, %407
  %473 = or i32 %312, %350
  %474 = and i32 %407, %316
  %475 = and i32 %321, %310
  %476 = or i32 %373, %316
  %477 = and i32 %325, %3
  %478 = or i32 %326, %310
  %479 = and i32 %325, %329
  %480 = shl i32 %479, 1
  %481 = and i32 %319, %310
  %482 = or i32 %388, %5
  %483 = xor i32 %337, -1
  %484 = xor i32 %335, %483
  %485 = or i32 %307, %4
  %486 = xor i32 %415, %485
  %487 = add i32 %339, 1
  %488 = xor i32 %354, %5
  %489 = and i32 %321, %329
  %490 = or i32 %415, %416
  %491 = or i32 %377, %378
  %492 = and i32 %325, %314
  %493 = xor i32 %492, -1
  %494 = and i32 %448, %316
  %495 = mul i32 %494, -14
  %496 = and i32 %373, %316
  %497 = mul i32 %496, -33
  %498 = and i32 %448, %4
  %499 = and i32 %373, %4
  %500 = mul i32 %499, -19
  %501 = and i32 %392, %316
  %502 = mul i32 %501, -26
  %503 = and i32 %392, %4
  %504 = mul i32 %503, -21
  %505 = mul i32 %377, -15
  %506 = add i32 %243, %277
  %507 = sub i32 %506, %118
  %508 = sub i32 %507, %267
  %509 = add i32 %508, %115
  %510 = add i32 %509, %411
  %511 = add i32 %510, %395
  %512 = sub i32 %511, %453
  %513 = mul i32 %512, 3
  %514 = sub i32 %193, %221
  %515 = sub i32 %514, %231
  %516 = sub i32 %515, %400
  %517 = mul i32 %516, 5
  %518 = or i32 %299, %300
  %519 = sub i32 %518, %335
  %520 = mul i32 %519, 25
  %521 = sub i32 %301, %298
  %522 = sub i32 %521, %498
  %523 = mul i32 %522, 11
  %524 = add i32 %263, %24
  %525 = shl i32 %524, 2
  %526 = add i32 %220, -1
  %527 = add i32 %526, %190
  %528 = add i32 %527, %61
  %529 = add i32 %528, %91
  %530 = add i32 %529, %38
  %531 = add i32 %530, %254
  %532 = add i32 %531, %239
  %533 = add i32 %532, %222
  %534 = add i32 %533, %206
  %535 = add i32 %534, %186
  %536 = add i32 %535, %184
  %537 = add i32 %536, %163
  %538 = add i32 %537, %147
  %539 = add i32 %538, %145
  %540 = add i32 %539, %140
  %541 = add i32 %540, %138
  %542 = add i32 %541, %121
  %543 = add i32 %542, %81
  %544 = add i32 %543, %97
  %545 = add i32 %544, %329
  %546 = add i32 %545, %236
  %547 = add i32 %546, %339
  %548 = add i32 %547, %14
  %549 = add i32 %548, %412
  %550 = add i32 %549, %365
  %551 = add i32 %550, %217
  %552 = add i32 %551, %90
  %553 = add i32 %552, %478
  %554 = add i32 %553, %473
  %555 = add i32 %554, %471
  %556 = add i32 %555, %458
  %557 = add i32 %556, %436
  %558 = add i32 %557, %402
  %559 = add i32 %558, %401
  %560 = add i32 %559, %398
  %561 = add i32 %560, %397
  %562 = add i32 %561, %389
  %563 = add i32 %562, %385
  %564 = add i32 %563, %381
  %565 = add i32 %564, %363
  %566 = add i32 %565, %356
  %567 = add i32 %566, %331
  %568 = add i32 %567, %460
  %569 = shl i32 %568, 1
  %570 = sub i32 %57, %0
  %571 = add i32 %570, %1
  %572 = add i32 %571, %250
  %573 = sub i32 %572, %27
  %574 = sub i32 %573, %32
  %575 = sub i32 %574, %32
  %576 = add i32 %575, 1
  %577 = sub i32 %576, %7
  %578 = add i32 %577, %28
  %579 = add i32 %578, %71
  %580 = sub i32 %579, %92
  %581 = add i32 %580, %101
  %582 = add i32 %581, %113
  %583 = add i32 %582, %126
  %584 = add i32 %583, %131
  %585 = sub i32 %584, %132
  %586 = add i32 %585, %150
  %587 = add i32 %586, %160
  %588 = add i32 %587, %166
  %589 = add i32 %588, %10
  %590 = add i32 %589, %167
  %591 = sub i32 %590, %73
  %592 = add i32 %591, %173
  %593 = add i32 %592, %174
  %594 = add i32 %593, %178
  %595 = add i32 %594, %200
  %596 = add i32 %595, %204
  %597 = add i32 %596, %207
  %598 = add i32 %597, %208
  %599 = sub i32 %598, %218
  %600 = sub i32 %599, %22
  %601 = add i32 %600, %227
  %602 = sub i32 %601, %237
  %603 = sub i32 %602, %242
  %604 = add i32 %603, %249
  %605 = add i32 %604, %259
  %606 = add i32 %605, %44
  %607 = sub i32 %606, %271
  %608 = add i32 %607, %272
  %609 = add i32 %608, %274
  %610 = add i32 %609, %80
  %611 = add i32 %610, %276
  %612 = add i32 %611, %282
  %613 = sub i32 %612, %283
  %614 = sub i32 %613, %284
  %615 = sub i32 %614, %286
  %616 = add i32 %615, %287
  %617 = add i32 %616, %51
  %618 = add i32 %617, %310
  %619 = sub i32 %618, %3
  %620 = add i32 %619, %23
  %621 = sub i32 %620, %30
  %622 = sub i32 %621, %34
  %623 = add i32 %622, %36
  %624 = sub i32 %623, %39
  %625 = add i32 %624, %46
  %626 = add i32 %625, %56
  %627 = sub i32 %626, %60
  %628 = add i32 %627, %62
  %629 = sub i32 %628, %63
  %630 = sub i32 %629, %66
  %631 = add i32 %630, %68
  %632 = add i32 %631, %72
  %633 = add i32 %632, %75
  %634 = sub i32 %633, %78
  %635 = add i32 %634, %79
  %636 = add i32 %635, %84
  %637 = sub i32 %636, %85
  %638 = add i32 %637, %86
  %639 = add i32 %638, %93
  %640 = sub i32 %639, %94
  %641 = add i32 %640, %96
  %642 = add i32 %641, %98
  %643 = add i32 %642, %99
  %644 = add i32 %643, %100
  %645 = sub i32 %644, %102
  %646 = add i32 %645, %103
  %647 = sub i32 %646, %104
  %648 = sub i32 %647, %108
  %649 = sub i32 %648, %116
  %650 = add i32 %649, %122
  %651 = add i32 %650, %124
  %652 = add i32 %651, %127
  %653 = add i32 %652, %133
  %654 = sub i32 %653, %134
  %655 = sub i32 %654, %135
  %656 = add i32 %655, %136
  %657 = add i32 %656, %137
  %658 = add i32 %657, %139
  %659 = sub i32 %658, %141
  %660 = add i32 %659, %142
  %661 = add i32 %660, %143
  %662 = add i32 %661, %144
  %663 = sub i32 %662, %146
  %664 = add i32 %663, %148
  %665 = sub i32 %664, %149
  %666 = add i32 %665, %151
  %667 = sub i32 %666, %154
  %668 = sub i32 %667, %155
  %669 = sub i32 %668, %157
  %670 = sub i32 %669, %161
  %671 = sub i32 %670, %162
  %672 = add i32 %671, %164
  %673 = sub i32 %672, %168
  %674 = sub i32 %673, %169
  %675 = sub i32 %674, %171
  %676 = add i32 %675, %172
  %677 = add i32 %676, %175
  %678 = sub i32 %677, %176
  %679 = add i32 %678, %177
  %680 = sub i32 %679, %179
  %681 = sub i32 %680, %180
  %682 = sub i32 %681, %182
  %683 = add i32 %682, %185
  %684 = sub i32 %683, %188
  %685 = add i32 %684, %189
  %686 = add i32 %685, %42
  %687 = sub i32 %686, %191
  %688 = add i32 %687, %192
  %689 = add i32 %688, %195
  %690 = sub i32 %689, %198
  %691 = sub i32 %690, %199
  %692 = add i32 %691, %205
  %693 = sub i32 %692, %209
  %694 = add i32 %693, %210
  %695 = sub i32 %694, %211
  %696 = sub i32 %695, %212
  %697 = sub i32 %696, %213
  %698 = sub i32 %697, %214
  %699 = sub i32 %698, %219
  %700 = sub i32 %699, %223
  %701 = add i32 %700, %224
  %702 = sub i32 %701, %225
  %703 = sub i32 %702, %226
  %704 = sub i32 %703, %228
  %705 = add i32 %704, %229
  %706 = sub i32 %705, %202
  %707 = sub i32 %706, %232
  %708 = sub i32 %707, %238
  %709 = add i32 %708, %240
  %710 = sub i32 %709, %215
  %711 = add i32 %710, %244
  %712 = sub i32 %711, %251
  %713 = sub i32 %712, %255
  %714 = sub i32 %713, %260
  %715 = sub i32 %714, %266
  %716 = sub i32 %715, %268
  %717 = sub i32 %716, %269
  %718 = sub i32 %717, %270
  %719 = sub i32 %718, %273
  %720 = add i32 %719, %275
  %721 = add i32 %720, %278
  %722 = sub i32 %721, %279
  %723 = sub i32 %722, %280
  %724 = sub i32 %723, %281
  %725 = add i32 %724, %285
  %726 = sub i32 %725, %256
  %727 = add i32 %726, %288
  %728 = sub i32 %727, %289
  %729 = sub i32 %728, %290
  %730 = sub i32 %729, %291
  %731 = add i32 %730, %293
  %732 = sub i32 %731, %294
  %733 = sub i32 %732, %297
  %734 = sub i32 %733, %305
  %735 = sub i32 %734, %26
  %736 = sub i32 %735, %43
  %737 = sub i32 %736, %50
  %738 = sub i32 %737, %54
  %739 = add i32 %738, %59
  %740 = sub i32 %739, %70
  %741 = sub i32 %740, %77
  %742 = add i32 %741, %107
  %743 = add i32 %742, %109
  %744 = add i32 %743, %111
  %745 = add i32 %744, %117
  %746 = sub i32 %745, %120
  %747 = sub i32 %746, %123
  %748 = sub i32 %747, %128
  %749 = sub i32 %748, %130
  %750 = sub i32 %749, %153
  %751 = sub i32 %750, %159
  %752 = add i32 %751, %165
  %753 = sub i32 %752, %183
  %754 = add i32 %753, %187
  %755 = sub i32 %754, %194
  %756 = sub i32 %755, %197
  %757 = sub i32 %756, %203
  %758 = sub i32 %757, %234
  %759 = add i32 %758, %241
  %760 = sub i32 %759, %246
  %761 = sub i32 %760, %248
  %762 = sub i32 %761, %253
  %763 = sub i32 %762, %258
  %764 = sub i32 %763, %262
  %765 = sub i32 %764, %265
  %766 = sub i32 %765, %292
  %767 = sub i32 %766, %296
  %768 = add i32 %767, %303
  %769 = sub i32 %768, %304
  %770 = sub i32 %769, %306
  %771 = add i32 %770, %323
  %772 = add i32 %771, %362
  %773 = sub i32 %772, %5
  %774 = add i32 %773, %414
  %775 = add i32 %774, %314
  %776 = add i32 %775, %349
  %777 = add i32 %776, %313
  %778 = add i32 %777, %315
  %779 = add i32 %778, %322
  %780 = add i32 %779, %324
  %781 = add i32 %780, %330
  %782 = sub i32 %781, %346
  %783 = add i32 %782, %351
  %784 = add i32 %783, %326
  %785 = sub i32 %784, %368
  %786 = sub i32 %785, %376
  %787 = sub i32 %786, %307
  %788 = add i32 %787, %336
  %789 = add i32 %788, %390
  %790 = add i32 %789, %392
  %791 = sub i32 %790, %332
  %792 = add i32 %791, %333
  %793 = sub i32 %792, %428
  %794 = add i32 %793, %433
  %795 = add i32 %794, %441
  %796 = sub i32 %795, %444
  %797 = add i32 %796, %447
  %798 = add i32 %797, %457
  %799 = add i32 %798, %373
  %800 = add i32 %799, %482
  %801 = add i32 %800, %487
  %802 = add i32 %801, %488
  %803 = add i32 %802, %525
  %804 = add i32 %803, %309
  %805 = sub i32 %804, %311
  %806 = sub i32 %805, %320
  %807 = add i32 %806, %327
  %808 = add i32 %807, %328
  %809 = sub i32 %808, %334
  %810 = add i32 %809, %340
  %811 = add i32 %810, %341
  %812 = sub i32 %811, %342
  %813 = sub i32 %812, %343
  %814 = add i32 %813, %344
  %815 = sub i32 %814, %347
  %816 = sub i32 %815, %348
  %817 = add i32 %816, %353
  %818 = sub i32 %817, %355
  %819 = sub i32 %818, %364
  %820 = add i32 %819, %366
  %821 = add i32 %820, %367
  %822 = add i32 %821, %369
  %823 = add i32 %822, %370
  %824 = add i32 %823, %371
  %825 = add i32 %824, %372
  %826 = add i32 %825, %382
  %827 = add i32 %826, %359
  %828 = sub i32 %827, %383
  %829 = sub i32 %828, %384
  %830 = sub i32 %829, %387
  %831 = add i32 %830, %391
  %832 = add i32 %831, %393
  %833 = sub i32 %832, %394
  %834 = add i32 %833, %396
  %835 = add i32 %834, %399
  %836 = add i32 %835, %403
  %837 = add i32 %836, %404
  %838 = sub i32 %837, %405
  %839 = add i32 %838, %406
  %840 = sub i32 %839, %410
  %841 = add i32 %840, %413
  %842 = add i32 %841, %419
  %843 = sub i32 %842, %420
  %844 = sub i32 %843, %421
  %845 = add i32 %844, %422
  %846 = sub i32 %845, %424
  %847 = sub i32 %846, %425
  %848 = add i32 %847, %426
  %849 = add i32 %848, %427
  %850 = add i32 %849, %429
  %851 = add i32 %850, %430
  %852 = sub i32 %851, %431
  %853 = sub i32 %852, %432
  %854 = sub i32 %853, %434
  %855 = add i32 %854, %435
  %856 = sub i32 %855, %437
  %857 = sub i32 %856, %438
  %858 = sub i32 %857, %442
  %859 = add i32 %858, %443
  %860 = add i32 %859, %445
  %861 = sub i32 %860, %446
  %862 = sub i32 %861, %456
  %863 = add i32 %862, %459
  %864 = add i32 %863, %461
  %865 = add i32 %864, %462
  %866 = sub i32 %865, %463
  %867 = sub i32 %866, %470
  %868 = add i32 %867, %472
  %869 = sub i32 %868, %474
  %870 = sub i32 %869, %475
  %871 = add i32 %870, %476
  %872 = add i32 %871, %477
  %873 = add i32 %872, %481
  %874 = sub i32 %873, %489
  %875 = sub i32 %874, %449
  %876 = add i32 %875, %493
  %877 = sub i32 %876, %318
  %878 = sub i32 %877, %338
  %879 = sub i32 %878, %361
  %880 = sub i32 %879, %375
  %881 = add i32 %880, %380
  %882 = sub i32 %881, %409
  %883 = sub i32 %882, %418
  %884 = add i32 %883, %423
  %885 = sub i32 %884, %440
  %886 = sub i32 %885, %450
  %887 = sub i32 %886, %452
  %888 = sub i32 %887, %455
  %889 = sub i32 %888, %465
  %890 = sub i32 %889, %469
  %891 = sub i32 %890, %480
  %892 = sub i32 %891, %484
  %893 = add i32 %892, %486
  %894 = sub i32 %893, %490
  %895 = sub i32 %894, %491
  %896 = add i32 %895, %495
  %897 = add i32 %896, %497
  %898 = add i32 %897, %500
  %899 = add i32 %898, %502
  %900 = add i32 %899, %504
  %901 = add i32 %900, %505
  %902 = add i32 %901, %520
  %903 = add i32 %902, %523
  %904 = add i32 %903, %517
  %905 = add i32 %904, %513
  %906 = add i32 %905, %569
  %907 = icmp eq i32 %21, %906
  %908 = select i1 %907, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %909 = tail call i32 @puts(i8* nonnull dereferenceable(1) %908)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
