digraph "DFG for'main' function" {
	Node0x18fc4b8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x18fc538[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x18fc5c8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x18fc628[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x18fcaa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18fd358[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x18fd438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18fd4f8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x18fd5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18fd808[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x18fd8c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18fe838[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x18feea8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x18fefa0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x18ff1a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18ff308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18ff418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18ff4d8[shape=record, label="  ret i32 0"];
	Node0x18fc4b8 -> Node0x18fc538;
	Node0x18fc538 -> Node0x18fc5c8;
	Node0x18fc5c8 -> Node0x18fc628;
	Node0x18fc628 -> Node0x18fcaa8;
	Node0x18fcaa8 -> Node0x18fd358;
	Node0x18fd358 -> Node0x18fd438;
	Node0x18fd438 -> Node0x18fd4f8;
	Node0x18fd4f8 -> Node0x18fd5a8;
	Node0x18fd5a8 -> Node0x18fd808;
	Node0x18fd808 -> Node0x18fd8c8;
	Node0x18fd8c8 -> Node0x18fe838;
	Node0x18fe838 -> Node0x18feea8;
	Node0x18feea8 -> Node0x18fefa0;
	Node0x18fefa0 -> Node0x18ff1a8;
	Node0x18ff1a8 -> Node0x18ff308;
	Node0x18ff308 -> Node0x18ff418;
	Node0x18ff418 -> Node0x18ff4d8;
edge [color=red]
	Node0x18fc4b8 -> Node0x18fc628;
	Node0x18fc628 -> Node0x18fcaa8;
	Node0x18fc538 -> Node0x18fd358;
	Node0x18fd358 -> Node0x18fd438;
	Node0x18fc5c8 -> Node0x18fd4f8;
	Node0x18fd4f8 -> Node0x18fd5a8;
	Node0x18fc4b8 -> Node0x18fd808;
	Node0x18fc538 -> Node0x18fd808;
	Node0x18fc5c8 -> Node0x18fd808;
	Node0x18fc4b8 -> Node0x18fd8c8;
	Node0x18fc538 -> Node0x18fe838;
	Node0x18fc5c8 -> Node0x18feea8;
	Node0x18fd8c8 -> Node0x18fefa0;
	Node0x18fe838 -> Node0x18fefa0;
	Node0x18feea8 -> Node0x18fefa0;
	Node0x18fd4f8 -> Node0x18ff1a8;
	Node0x18fd358 -> Node0x18ff308;
	Node0x18fc628 -> Node0x18ff418;
}
