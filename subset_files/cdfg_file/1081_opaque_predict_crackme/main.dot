digraph "DFG for'main' function" {
	Node0xa4fa28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa4faa8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa4fb38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xa4fb98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xa4fc48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xa50078[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa50158[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xa50258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa50318[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xa503c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xa50488[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xa50538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xa4aaa0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xa50738[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa516a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa51d18[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xa51d78[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xa51df0[shape=record, label="  %14 = and i32 %12, %11"];
	Node0xa51e60[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0xa51ed0[shape=record, label="  %16 = sub i32 1, %14"];
	Node0xa51f40[shape=record, label="  %17 = add i32 %16, %15"];
	Node0xa51fb0[shape=record, label="  %18 = or i32 %12, %11"];
	Node0xa52020[shape=record, label="  %19 = xor i32 %12, 2147483647"];
	Node0xa52090[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0xa52100[shape=record, label="  %21 = and i32 %19, %11"];
	Node0xa52170[shape=record, label="  %22 = shl i32 %18, 2"];
	Node0xa521e0[shape=record, label="  %23 = xor i32 %22, -4"];
	Node0xa52250[shape=record, label="  %24 = shl i32 %13, 1"];
	Node0xa522c0[shape=record, label="  %25 = or i32 %13, %10"];
	Node0xa52330[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0xa523a0[shape=record, label="  %27 = xor i32 %13, -1"];
	Node0xa52410[shape=record, label="  %28 = and i32 %10, %27"];
	Node0xa52480[shape=record, label="  %29 = and i32 %13, %26"];
	Node0xa524f0[shape=record, label="  %30 = and i32 %13, %10"];
	Node0xa52560[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0xa525d0[shape=record, label="  %32 = add i32 %25, %14"];
	Node0xa52640[shape=record, label="  %33 = mul i32 %32, 3"];
	Node0xa526b0[shape=record, label="  %34 = sub i32 %20, %11"];
	Node0xa52720[shape=record, label="  %35 = add i32 %34, %18"];
	Node0xa52790[shape=record, label="  %36 = add i32 %35, %21"];
	Node0xa52800[shape=record, label="  %37 = shl i32 %36, 1"];
	Node0xa52870[shape=record, label="  %38 = sub i32 5, %10"];
	Node0xa528e0[shape=record, label="  %39 = add i32 %38, %13"];
	Node0xa52950[shape=record, label="  %40 = sub i32 %39, %24"];
	Node0xa529c0[shape=record, label="  %41 = sub i32 %40, %15"];
	Node0xa52a30[shape=record, label="  %42 = add i32 %41, %25"];
	Node0xa52aa0[shape=record, label="  %43 = sub i32 %42, %28"];
	Node0xa52b10[shape=record, label="  %44 = sub i32 %43, %29"];
	Node0xa52b80[shape=record, label="  %45 = add i32 %44, %23"];
	Node0xa52bf0[shape=record, label="  %46 = sub i32 %45, %31"];
	Node0xa52c60[shape=record, label="  %47 = add i32 %46, %33"];
	Node0xa52cd0[shape=record, label="  %48 = add i32 %47, %37"];
	Node0xa52d40[shape=record, label="  %49 = icmp eq i32 %17, %48"];
	Node0x9ef8b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa52dd0[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0xa53078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xa531d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xa532e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa533f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa534b8[shape=record, label="  ret i32 0"];
	Node0xa4fa28 -> Node0xa4faa8;
	Node0xa4faa8 -> Node0xa4fb38;
	Node0xa4fb38 -> Node0xa4fb98;
	Node0xa4fb98 -> Node0xa4fc48;
	Node0xa4fc48 -> Node0xa50078;
	Node0xa50078 -> Node0xa50158;
	Node0xa50158 -> Node0xa50258;
	Node0xa50258 -> Node0xa50318;
	Node0xa50318 -> Node0xa503c8;
	Node0xa503c8 -> Node0xa50488;
	Node0xa50488 -> Node0xa50538;
	Node0xa50538 -> Node0xa4aaa0;
	Node0xa4aaa0 -> Node0xa50738;
	Node0xa50738 -> Node0xa516a8;
	Node0xa516a8 -> Node0xa51d18;
	Node0xa51d18 -> Node0xa51d78;
	Node0xa51d78 -> Node0xa51df0;
	Node0xa51df0 -> Node0xa51e60;
	Node0xa51e60 -> Node0xa51ed0;
	Node0xa51ed0 -> Node0xa51f40;
	Node0xa51f40 -> Node0xa51fb0;
	Node0xa51fb0 -> Node0xa52020;
	Node0xa52020 -> Node0xa52090;
	Node0xa52090 -> Node0xa52100;
	Node0xa52100 -> Node0xa52170;
	Node0xa52170 -> Node0xa521e0;
	Node0xa521e0 -> Node0xa52250;
	Node0xa52250 -> Node0xa522c0;
	Node0xa522c0 -> Node0xa52330;
	Node0xa52330 -> Node0xa523a0;
	Node0xa523a0 -> Node0xa52410;
	Node0xa52410 -> Node0xa52480;
	Node0xa52480 -> Node0xa524f0;
	Node0xa524f0 -> Node0xa52560;
	Node0xa52560 -> Node0xa525d0;
	Node0xa525d0 -> Node0xa52640;
	Node0xa52640 -> Node0xa526b0;
	Node0xa526b0 -> Node0xa52720;
	Node0xa52720 -> Node0xa52790;
	Node0xa52790 -> Node0xa52800;
	Node0xa52800 -> Node0xa52870;
	Node0xa52870 -> Node0xa528e0;
	Node0xa528e0 -> Node0xa52950;
	Node0xa52950 -> Node0xa529c0;
	Node0xa529c0 -> Node0xa52a30;
	Node0xa52a30 -> Node0xa52aa0;
	Node0xa52aa0 -> Node0xa52b10;
	Node0xa52b10 -> Node0xa52b80;
	Node0xa52b80 -> Node0xa52bf0;
	Node0xa52bf0 -> Node0xa52c60;
	Node0xa52c60 -> Node0xa52cd0;
	Node0xa52cd0 -> Node0xa52d40;
	Node0xa52d40 -> Node0x9ef8b8;
	Node0x9ef8b8 -> Node0xa52dd0;
	Node0xa52dd0 -> Node0xa53078;
	Node0xa53078 -> Node0xa531d8;
	Node0xa531d8 -> Node0xa532e8;
	Node0xa532e8 -> Node0xa533f8;
	Node0xa533f8 -> Node0xa534b8;
edge [color=red]
	Node0xa4fa28 -> Node0xa4fc48;
	Node0xa4fc48 -> Node0xa50078;
	Node0xa4faa8 -> Node0xa50158;
	Node0xa50158 -> Node0xa50258;
	Node0xa4fb38 -> Node0xa50318;
	Node0xa50318 -> Node0xa503c8;
	Node0xa4fb98 -> Node0xa50488;
	Node0xa50488 -> Node0xa50538;
	Node0xa4fa28 -> Node0xa4aaa0;
	Node0xa4faa8 -> Node0xa4aaa0;
	Node0xa4fb38 -> Node0xa4aaa0;
	Node0xa4fb98 -> Node0xa4aaa0;
	Node0xa4fa28 -> Node0xa50738;
	Node0xa4faa8 -> Node0xa516a8;
	Node0xa4fb38 -> Node0xa51d18;
	Node0xa4fb98 -> Node0xa51d78;
	Node0xa51d18 -> Node0xa51df0;
	Node0xa516a8 -> Node0xa51df0;
	Node0xa51d78 -> Node0xa51e60;
	Node0xa50738 -> Node0xa51e60;
	Node0xa51df0 -> Node0xa51ed0;
	Node0xa51ed0 -> Node0xa51f40;
	Node0xa51e60 -> Node0xa51f40;
	Node0xa51d18 -> Node0xa51fb0;
	Node0xa516a8 -> Node0xa51fb0;
	Node0xa51d18 -> Node0xa52020;
	Node0xa51d18 -> Node0xa52090;
	Node0xa516a8 -> Node0xa52090;
	Node0xa52020 -> Node0xa52100;
	Node0xa516a8 -> Node0xa52100;
	Node0xa51fb0 -> Node0xa52170;
	Node0xa52170 -> Node0xa521e0;
	Node0xa51d78 -> Node0xa52250;
	Node0xa51d78 -> Node0xa522c0;
	Node0xa50738 -> Node0xa522c0;
	Node0xa50738 -> Node0xa52330;
	Node0xa51d78 -> Node0xa523a0;
	Node0xa50738 -> Node0xa52410;
	Node0xa523a0 -> Node0xa52410;
	Node0xa51d78 -> Node0xa52480;
	Node0xa52330 -> Node0xa52480;
	Node0xa51d78 -> Node0xa524f0;
	Node0xa50738 -> Node0xa524f0;
	Node0xa524f0 -> Node0xa52560;
	Node0xa522c0 -> Node0xa525d0;
	Node0xa51df0 -> Node0xa525d0;
	Node0xa525d0 -> Node0xa52640;
	Node0xa52090 -> Node0xa526b0;
	Node0xa516a8 -> Node0xa526b0;
	Node0xa526b0 -> Node0xa52720;
	Node0xa51fb0 -> Node0xa52720;
	Node0xa52720 -> Node0xa52790;
	Node0xa52100 -> Node0xa52790;
	Node0xa52790 -> Node0xa52800;
	Node0xa50738 -> Node0xa52870;
	Node0xa52870 -> Node0xa528e0;
	Node0xa51d78 -> Node0xa528e0;
	Node0xa528e0 -> Node0xa52950;
	Node0xa52250 -> Node0xa52950;
	Node0xa52950 -> Node0xa529c0;
	Node0xa51e60 -> Node0xa529c0;
	Node0xa529c0 -> Node0xa52a30;
	Node0xa522c0 -> Node0xa52a30;
	Node0xa52a30 -> Node0xa52aa0;
	Node0xa52410 -> Node0xa52aa0;
	Node0xa52aa0 -> Node0xa52b10;
	Node0xa52480 -> Node0xa52b10;
	Node0xa52b10 -> Node0xa52b80;
	Node0xa521e0 -> Node0xa52b80;
	Node0xa52b80 -> Node0xa52bf0;
	Node0xa52560 -> Node0xa52bf0;
	Node0xa52bf0 -> Node0xa52c60;
	Node0xa52640 -> Node0xa52c60;
	Node0xa52c60 -> Node0xa52cd0;
	Node0xa52800 -> Node0xa52cd0;
	Node0xa51f40 -> Node0xa52d40;
	Node0xa52cd0 -> Node0xa52d40;
	Node0xa52d40 -> Node0x9ef8b8;
	Node0x9ef8b8 -> Node0xa52dd0;
	Node0xa50488 -> Node0xa53078;
	Node0xa50318 -> Node0xa531d8;
	Node0xa50158 -> Node0xa532e8;
	Node0xa4fc48 -> Node0xa533f8;
}
