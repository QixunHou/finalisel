digraph "DFG for'main' function" {
	Node0x218dd68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x218dde8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x218de78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x218e2d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x218e3b8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x218e4d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x218e710[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x218e7c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x218f738[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x218fdc0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x218fe30[shape=record, label="  %9 = mul i32 %8, -5"];
	Node0x218fea0[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x218ff10[shape=record, label="  %11 = and i32 %6, %10"];
	Node0x218ff80[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x218fff0[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x2190060[shape=record, label="  %14 = shl i32 %10, 1"];
	Node0x21900d0[shape=record, label="  %15 = xor i32 %13, -1"];
	Node0x2190140[shape=record, label="  %16 = mul i32 %15, 3"];
	Node0x21901b0[shape=record, label="  %17 = xor i32 %6, 1073741823"];
	Node0x2190220[shape=record, label="  %18 = and i32 %17, %7"];
	Node0x2190290[shape=record, label="  %19 = shl i32 %18, 2"];
	Node0x2190300[shape=record, label="  %20 = shl i32 %11, 1"];
	Node0x2190370[shape=record, label="  %21 = and i32 %7, %6"];
	Node0x21903e0[shape=record, label="  %22 = add i32 %6, 2"];
	Node0x2190450[shape=record, label="  %23 = add i32 %22, %8"];
	Node0x21904c0[shape=record, label="  %24 = add i32 %23, %12"];
	Node0x2190530[shape=record, label="  %25 = sub i32 %24, %13"];
	Node0x21905a0[shape=record, label="  %26 = sub i32 %25, %14"];
	Node0x2190610[shape=record, label="  %27 = add i32 %26, %21"];
	Node0x2190680[shape=record, label="  %28 = add i32 %27, %16"];
	Node0x21906f0[shape=record, label="  %29 = sub i32 %28, %19"];
	Node0x2190760[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0x21907d0[shape=record, label="  %31 = icmp eq i32 %9, %30"];
	Node0x212e9d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2190a70[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x2190cc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2190e28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2190ee8[shape=record, label="  ret i32 0"];
	Node0x218dd68 -> Node0x218dde8;
	Node0x218dde8 -> Node0x218de78;
	Node0x218de78 -> Node0x218e2d8;
	Node0x218e2d8 -> Node0x218e3b8;
	Node0x218e3b8 -> Node0x218e4d8;
	Node0x218e4d8 -> Node0x218e710;
	Node0x218e710 -> Node0x218e7c8;
	Node0x218e7c8 -> Node0x218f738;
	Node0x218f738 -> Node0x218fdc0;
	Node0x218fdc0 -> Node0x218fe30;
	Node0x218fe30 -> Node0x218fea0;
	Node0x218fea0 -> Node0x218ff10;
	Node0x218ff10 -> Node0x218ff80;
	Node0x218ff80 -> Node0x218fff0;
	Node0x218fff0 -> Node0x2190060;
	Node0x2190060 -> Node0x21900d0;
	Node0x21900d0 -> Node0x2190140;
	Node0x2190140 -> Node0x21901b0;
	Node0x21901b0 -> Node0x2190220;
	Node0x2190220 -> Node0x2190290;
	Node0x2190290 -> Node0x2190300;
	Node0x2190300 -> Node0x2190370;
	Node0x2190370 -> Node0x21903e0;
	Node0x21903e0 -> Node0x2190450;
	Node0x2190450 -> Node0x21904c0;
	Node0x21904c0 -> Node0x2190530;
	Node0x2190530 -> Node0x21905a0;
	Node0x21905a0 -> Node0x2190610;
	Node0x2190610 -> Node0x2190680;
	Node0x2190680 -> Node0x21906f0;
	Node0x21906f0 -> Node0x2190760;
	Node0x2190760 -> Node0x21907d0;
	Node0x21907d0 -> Node0x212e9d8;
	Node0x212e9d8 -> Node0x2190a70;
	Node0x2190a70 -> Node0x2190cc8;
	Node0x2190cc8 -> Node0x2190e28;
	Node0x2190e28 -> Node0x2190ee8;
edge [color=red]
	Node0x218dd68 -> Node0x218de78;
	Node0x218de78 -> Node0x218e2d8;
	Node0x218dde8 -> Node0x218e3b8;
	Node0x218e3b8 -> Node0x218e4d8;
	Node0x218dd68 -> Node0x218e710;
	Node0x218dde8 -> Node0x218e710;
	Node0x218dd68 -> Node0x218e7c8;
	Node0x218dde8 -> Node0x218f738;
	Node0x218f738 -> Node0x218fdc0;
	Node0x218e7c8 -> Node0x218fdc0;
	Node0x218fdc0 -> Node0x218fe30;
	Node0x218f738 -> Node0x218fea0;
	Node0x218e7c8 -> Node0x218ff10;
	Node0x218fea0 -> Node0x218ff10;
	Node0x218ff10 -> Node0x218ff80;
	Node0x218f738 -> Node0x218fff0;
	Node0x218e7c8 -> Node0x218fff0;
	Node0x218fea0 -> Node0x2190060;
	Node0x218fff0 -> Node0x21900d0;
	Node0x21900d0 -> Node0x2190140;
	Node0x218e7c8 -> Node0x21901b0;
	Node0x21901b0 -> Node0x2190220;
	Node0x218f738 -> Node0x2190220;
	Node0x2190220 -> Node0x2190290;
	Node0x218ff10 -> Node0x2190300;
	Node0x218f738 -> Node0x2190370;
	Node0x218e7c8 -> Node0x2190370;
	Node0x218e7c8 -> Node0x21903e0;
	Node0x21903e0 -> Node0x2190450;
	Node0x218fdc0 -> Node0x2190450;
	Node0x2190450 -> Node0x21904c0;
	Node0x218ff80 -> Node0x21904c0;
	Node0x21904c0 -> Node0x2190530;
	Node0x218fff0 -> Node0x2190530;
	Node0x2190530 -> Node0x21905a0;
	Node0x2190060 -> Node0x21905a0;
	Node0x21905a0 -> Node0x2190610;
	Node0x2190370 -> Node0x2190610;
	Node0x2190610 -> Node0x2190680;
	Node0x2190140 -> Node0x2190680;
	Node0x2190680 -> Node0x21906f0;
	Node0x2190290 -> Node0x21906f0;
	Node0x21906f0 -> Node0x2190760;
	Node0x2190300 -> Node0x2190760;
	Node0x218fe30 -> Node0x21907d0;
	Node0x2190760 -> Node0x21907d0;
	Node0x21907d0 -> Node0x212e9d8;
	Node0x212e9d8 -> Node0x2190a70;
	Node0x218e3b8 -> Node0x2190cc8;
	Node0x218de78 -> Node0x2190e28;
}
