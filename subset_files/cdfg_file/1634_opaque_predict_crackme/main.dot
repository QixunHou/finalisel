digraph "DFG for'main' function" {
	Node0x68ec58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x68ecd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x68ed68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x68f1c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x68f2a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x68f3c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x68f600[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x68f6b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x690628[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x690cb0[shape=record, label="  %8 = xor i32 %7, 2147483647"];
	Node0x690d20[shape=record, label="  %9 = and i32 %8, %6"];
	Node0x690d90[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x690e00[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x690e70[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0x690ee0[shape=record, label="  %13 = add i32 %11, %12"];
	Node0x690f50[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x690fc0[shape=record, label="  %15 = shl i32 %14, 2"];
	Node0x691030[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x6910a0[shape=record, label="  %17 = xor i32 %6, -1"];
	Node0x691110[shape=record, label="  %18 = and i32 %7, %17"];
	Node0x691180[shape=record, label="  %19 = mul i32 %18, 3"];
	Node0x6911f0[shape=record, label="  %20 = and i32 %7, %6"];
	Node0x691260[shape=record, label="  %21 = shl i32 %20, 2"];
	Node0x6912d0[shape=record, label="  %22 = sub i32 2, %6"];
	Node0x691340[shape=record, label="  %23 = add i32 %22, %12"];
	Node0x6913b0[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x691420[shape=record, label="  %25 = add i32 %24, %19"];
	Node0x691490[shape=record, label="  %26 = add i32 %25, %21"];
	Node0x691500[shape=record, label="  %27 = add i32 %26, %16"];
	Node0x691570[shape=record, label="  %28 = add i32 %27, %10"];
	Node0x6915e0[shape=record, label="  %29 = icmp eq i32 %13, %28"];
	Node0x62f9d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x691670[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x6918c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x691a28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x691ae8[shape=record, label="  ret i32 0"];
	Node0x68ec58 -> Node0x68ecd8;
	Node0x68ecd8 -> Node0x68ed68;
	Node0x68ed68 -> Node0x68f1c8;
	Node0x68f1c8 -> Node0x68f2a8;
	Node0x68f2a8 -> Node0x68f3c8;
	Node0x68f3c8 -> Node0x68f600;
	Node0x68f600 -> Node0x68f6b8;
	Node0x68f6b8 -> Node0x690628;
	Node0x690628 -> Node0x690cb0;
	Node0x690cb0 -> Node0x690d20;
	Node0x690d20 -> Node0x690d90;
	Node0x690d90 -> Node0x690e00;
	Node0x690e00 -> Node0x690e70;
	Node0x690e70 -> Node0x690ee0;
	Node0x690ee0 -> Node0x690f50;
	Node0x690f50 -> Node0x690fc0;
	Node0x690fc0 -> Node0x691030;
	Node0x691030 -> Node0x6910a0;
	Node0x6910a0 -> Node0x691110;
	Node0x691110 -> Node0x691180;
	Node0x691180 -> Node0x6911f0;
	Node0x6911f0 -> Node0x691260;
	Node0x691260 -> Node0x6912d0;
	Node0x6912d0 -> Node0x691340;
	Node0x691340 -> Node0x6913b0;
	Node0x6913b0 -> Node0x691420;
	Node0x691420 -> Node0x691490;
	Node0x691490 -> Node0x691500;
	Node0x691500 -> Node0x691570;
	Node0x691570 -> Node0x6915e0;
	Node0x6915e0 -> Node0x62f9d8;
	Node0x62f9d8 -> Node0x691670;
	Node0x691670 -> Node0x6918c8;
	Node0x6918c8 -> Node0x691a28;
	Node0x691a28 -> Node0x691ae8;
edge [color=red]
	Node0x68ec58 -> Node0x68ed68;
	Node0x68ed68 -> Node0x68f1c8;
	Node0x68ecd8 -> Node0x68f2a8;
	Node0x68f2a8 -> Node0x68f3c8;
	Node0x68ec58 -> Node0x68f600;
	Node0x68ecd8 -> Node0x68f600;
	Node0x68ec58 -> Node0x68f6b8;
	Node0x68ecd8 -> Node0x690628;
	Node0x690628 -> Node0x690cb0;
	Node0x690cb0 -> Node0x690d20;
	Node0x68f6b8 -> Node0x690d20;
	Node0x690d20 -> Node0x690d90;
	Node0x690d90 -> Node0x690e00;
	Node0x690628 -> Node0x690e70;
	Node0x68f6b8 -> Node0x690e70;
	Node0x690e00 -> Node0x690ee0;
	Node0x690e70 -> Node0x690ee0;
	Node0x690628 -> Node0x690f50;
	Node0x68f6b8 -> Node0x690f50;
	Node0x690f50 -> Node0x690fc0;
	Node0x690fc0 -> Node0x691030;
	Node0x68f6b8 -> Node0x6910a0;
	Node0x690628 -> Node0x691110;
	Node0x6910a0 -> Node0x691110;
	Node0x691110 -> Node0x691180;
	Node0x690628 -> Node0x6911f0;
	Node0x68f6b8 -> Node0x6911f0;
	Node0x6911f0 -> Node0x691260;
	Node0x68f6b8 -> Node0x6912d0;
	Node0x6912d0 -> Node0x691340;
	Node0x690e70 -> Node0x691340;
	Node0x691340 -> Node0x6913b0;
	Node0x690f50 -> Node0x6913b0;
	Node0x6913b0 -> Node0x691420;
	Node0x691180 -> Node0x691420;
	Node0x691420 -> Node0x691490;
	Node0x691260 -> Node0x691490;
	Node0x691490 -> Node0x691500;
	Node0x691030 -> Node0x691500;
	Node0x691500 -> Node0x691570;
	Node0x690d90 -> Node0x691570;
	Node0x690ee0 -> Node0x6915e0;
	Node0x691570 -> Node0x6915e0;
	Node0x6915e0 -> Node0x62f9d8;
	Node0x62f9d8 -> Node0x691670;
	Node0x68f2a8 -> Node0x6918c8;
	Node0x68ed68 -> Node0x691a28;
}
