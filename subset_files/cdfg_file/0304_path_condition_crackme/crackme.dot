digraph "DFG for'crackme' function" {
	Node0x11a7d70[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x11a7de0[shape=record, label="  %6 = and i32 %3, %0"];
	Node0x11a7e80[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x11a7f20[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0x11a7f90[shape=record, label="  %9 = sub i32 %5, %8"];
	Node0x11a8000[shape=record, label="  %10 = shl i32 %1, 1"];
	Node0x11a8070[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x11a80e0[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x11a8150[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x11a81c0[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x11a8230[shape=record, label="  %15 = shl i32 %11, 1"];
	Node0x11a82a0[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x11a8310[shape=record, label="  %17 = and i32 %2, %1"];
	Node0x11a8380[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x11a83f0[shape=record, label="  %19 = shl i32 %16, 1"];
	Node0x11a8460[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x11a8500[shape=record, label="  %21 = xor i32 %1, 2147483647"];
	Node0x11a8570[shape=record, label="  %22 = and i32 %21, %2"];
	Node0x11a85e0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x11a8650[shape=record, label="  %24 = xor i32 %0, -1"];
	Node0x11a86c0[shape=record, label="  %25 = and i32 %24, %3"];
	Node0x11a8730[shape=record, label="  %26 = xor i32 %3, %0"];
	Node0x11a87a0[shape=record, label="  %27 = or i32 %3, %0"];
	Node0x11a8840[shape=record, label="  %28 = mul i32 %27, -5"];
	Node0x11a88b0[shape=record, label="  %29 = or i32 %24, %3"];
	Node0x11a8920[shape=record, label="  %30 = xor i32 %29, -1"];
	Node0x11a89c0[shape=record, label="  %31 = mul i32 %6, 6"];
	Node0x11a8a30[shape=record, label="  %32 = add i32 %25, %30"];
	Node0x11a8ce0[shape=record, label="  %33 = mul i32 %32, 3"];
	Node0x11a8d50[shape=record, label="  %34 = add i32 %16, %26"];
	Node0x11a8dc0[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x11a8e60[shape=record, label="  %36 = sub i32 5, %10"];
	Node0x11a8ed0[shape=record, label="  %37 = sub i32 %36, %2"];
	Node0x11a8f40[shape=record, label="  %38 = sub i32 %37, %15"];
	Node0x11a8fb0[shape=record, label="  %39 = add i32 %38, %16"];
	Node0x11a9020[shape=record, label="  %40 = add i32 %39, %18"];
	Node0x11a9090[shape=record, label="  %41 = sub i32 %40, %23"];
	Node0x11a9100[shape=record, label="  %42 = add i32 %41, %13"];
	Node0x11a9170[shape=record, label="  %43 = sub i32 %42, %25"];
	Node0x11a91e0[shape=record, label="  %44 = add i32 %43, %29"];
	Node0x11a9250[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x11a92c0[shape=record, label="  %46 = add i32 %45, %14"];
	Node0x11a9330[shape=record, label="  %47 = add i32 %46, %20"];
	Node0x11a93a0[shape=record, label="  %48 = add i32 %47, %28"];
	Node0x11a9410[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x11a9480[shape=record, label="  %50 = add i32 %49, %33"];
	Node0x11a94f0[shape=record, label="  %51 = add i32 %50, %35"];
	Node0x11a9560[shape=record, label="  %52 = icmp eq i32 %9, %51"];
	Node0x1148268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x11a9a00[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0x11a9a50[shape=record, label="  ret void"];
	Node0x11a7d70 -> Node0x11a7de0;
	Node0x11a7de0 -> Node0x11a7e80;
	Node0x11a7e80 -> Node0x11a7f20;
	Node0x11a7f20 -> Node0x11a7f90;
	Node0x11a7f90 -> Node0x11a8000;
	Node0x11a8000 -> Node0x11a8070;
	Node0x11a8070 -> Node0x11a80e0;
	Node0x11a80e0 -> Node0x11a8150;
	Node0x11a8150 -> Node0x11a81c0;
	Node0x11a81c0 -> Node0x11a8230;
	Node0x11a8230 -> Node0x11a82a0;
	Node0x11a82a0 -> Node0x11a8310;
	Node0x11a8310 -> Node0x11a8380;
	Node0x11a8380 -> Node0x11a83f0;
	Node0x11a83f0 -> Node0x11a8460;
	Node0x11a8460 -> Node0x11a8500;
	Node0x11a8500 -> Node0x11a8570;
	Node0x11a8570 -> Node0x11a85e0;
	Node0x11a85e0 -> Node0x11a8650;
	Node0x11a8650 -> Node0x11a86c0;
	Node0x11a86c0 -> Node0x11a8730;
	Node0x11a8730 -> Node0x11a87a0;
	Node0x11a87a0 -> Node0x11a8840;
	Node0x11a8840 -> Node0x11a88b0;
	Node0x11a88b0 -> Node0x11a8920;
	Node0x11a8920 -> Node0x11a89c0;
	Node0x11a89c0 -> Node0x11a8a30;
	Node0x11a8a30 -> Node0x11a8ce0;
	Node0x11a8ce0 -> Node0x11a8d50;
	Node0x11a8d50 -> Node0x11a8dc0;
	Node0x11a8dc0 -> Node0x11a8e60;
	Node0x11a8e60 -> Node0x11a8ed0;
	Node0x11a8ed0 -> Node0x11a8f40;
	Node0x11a8f40 -> Node0x11a8fb0;
	Node0x11a8fb0 -> Node0x11a9020;
	Node0x11a9020 -> Node0x11a9090;
	Node0x11a9090 -> Node0x11a9100;
	Node0x11a9100 -> Node0x11a9170;
	Node0x11a9170 -> Node0x11a91e0;
	Node0x11a91e0 -> Node0x11a9250;
	Node0x11a9250 -> Node0x11a92c0;
	Node0x11a92c0 -> Node0x11a9330;
	Node0x11a9330 -> Node0x11a93a0;
	Node0x11a93a0 -> Node0x11a9410;
	Node0x11a9410 -> Node0x11a9480;
	Node0x11a9480 -> Node0x11a94f0;
	Node0x11a94f0 -> Node0x11a9560;
	Node0x11a9560 -> Node0x1148268;
	Node0x1148268 -> Node0x11a9a00;
	Node0x11a9a00 -> Node0x11a9a50;
edge [color=red]
	Node0x11a7de0 -> Node0x11a7e80;
	Node0x11a7e80 -> Node0x11a7f20;
	Node0x11a7d70 -> Node0x11a7f90;
	Node0x11a7f20 -> Node0x11a7f90;
	Node0x11a8070 -> Node0x11a80e0;
	Node0x11a80e0 -> Node0x11a8150;
	Node0x11a8150 -> Node0x11a81c0;
	Node0x11a8070 -> Node0x11a8230;
	Node0x11a8310 -> Node0x11a8380;
	Node0x11a82a0 -> Node0x11a83f0;
	Node0x11a83f0 -> Node0x11a8460;
	Node0x11a8500 -> Node0x11a8570;
	Node0x11a8570 -> Node0x11a85e0;
	Node0x11a8650 -> Node0x11a86c0;
	Node0x11a87a0 -> Node0x11a8840;
	Node0x11a8650 -> Node0x11a88b0;
	Node0x11a88b0 -> Node0x11a8920;
	Node0x11a7de0 -> Node0x11a89c0;
	Node0x11a86c0 -> Node0x11a8a30;
	Node0x11a8920 -> Node0x11a8a30;
	Node0x11a8a30 -> Node0x11a8ce0;
	Node0x11a82a0 -> Node0x11a8d50;
	Node0x11a8730 -> Node0x11a8d50;
	Node0x11a8d50 -> Node0x11a8dc0;
	Node0x11a8000 -> Node0x11a8e60;
	Node0x11a8e60 -> Node0x11a8ed0;
	Node0x11a8ed0 -> Node0x11a8f40;
	Node0x11a8230 -> Node0x11a8f40;
	Node0x11a8f40 -> Node0x11a8fb0;
	Node0x11a82a0 -> Node0x11a8fb0;
	Node0x11a8fb0 -> Node0x11a9020;
	Node0x11a8380 -> Node0x11a9020;
	Node0x11a9020 -> Node0x11a9090;
	Node0x11a85e0 -> Node0x11a9090;
	Node0x11a9090 -> Node0x11a9100;
	Node0x11a8150 -> Node0x11a9100;
	Node0x11a9100 -> Node0x11a9170;
	Node0x11a86c0 -> Node0x11a9170;
	Node0x11a9170 -> Node0x11a91e0;
	Node0x11a88b0 -> Node0x11a91e0;
	Node0x11a91e0 -> Node0x11a9250;
	Node0x11a87a0 -> Node0x11a9250;
	Node0x11a9250 -> Node0x11a92c0;
	Node0x11a81c0 -> Node0x11a92c0;
	Node0x11a92c0 -> Node0x11a9330;
	Node0x11a8460 -> Node0x11a9330;
	Node0x11a9330 -> Node0x11a93a0;
	Node0x11a8840 -> Node0x11a93a0;
	Node0x11a93a0 -> Node0x11a9410;
	Node0x11a89c0 -> Node0x11a9410;
	Node0x11a9410 -> Node0x11a9480;
	Node0x11a8ce0 -> Node0x11a9480;
	Node0x11a9480 -> Node0x11a94f0;
	Node0x11a8dc0 -> Node0x11a94f0;
	Node0x11a7f90 -> Node0x11a9560;
	Node0x11a94f0 -> Node0x11a9560;
	Node0x11a9560 -> Node0x1148268;
	Node0x1148268 -> Node0x11a9a00;
}
