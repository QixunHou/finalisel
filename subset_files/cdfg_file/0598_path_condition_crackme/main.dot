digraph "DFG for'main' function" {
	Node0x77cbd8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x77cc58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x77cce8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x77cd48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x77cdf8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x77d228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x77d308[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x77d408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x77d4c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x77d578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x77d638[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x77d6e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x777b10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x77d8e8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x77e858[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x77eec8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x77ef28[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x77efa0[shape=record, label="  %14 = xor i32 %10, -1"];
	Node0x77f010[shape=record, label="  %15 = or i32 %13, %14"];
	Node0x77f080[shape=record, label="  %16 = add i32 %10, 2"];
	Node0x77f0f0[shape=record, label="  %17 = sub i32 %16, %15"];
	Node0x77f160[shape=record, label="  %18 = xor i32 %12, -1"];
	Node0x77f1d0[shape=record, label="  %19 = shl i32 %11, 1"];
	Node0x77f240[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x77f2b0[shape=record, label="  %21 = xor i32 %12, %11"];
	Node0x77f320[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x77f390[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x77f400[shape=record, label="  %24 = and i32 %13, %10"];
	Node0x77f470[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x77f4e0[shape=record, label="  %26 = and i32 %13, %14"];
	Node0x77f550[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x77f5c0[shape=record, label="  %28 = mul i32 %27, 5"];
	Node0x77f630[shape=record, label="  %29 = or i32 %13, %10"];
	Node0x77f6a0[shape=record, label="  %30 = shl i32 %29, 3"];
	Node0x77f710[shape=record, label="  %31 = xor i32 %30, -8"];
	Node0x77f780[shape=record, label="  %32 = xor i32 %15, -1"];
	Node0x77f7f0[shape=record, label="  %33 = shl i32 %24, 3"];
	Node0x77f860[shape=record, label="  %34 = add i32 %26, %32"];
	Node0x77f8d0[shape=record, label="  %35 = mul i32 %34, -6"];
	Node0x77f940[shape=record, label="  %36 = add i32 %22, %13"];
	Node0x77f9b0[shape=record, label="  %37 = shl i32 %36, 1"];
	Node0x77fa20[shape=record, label="  %38 = sub i32 4, %10"];
	Node0x77fa90[shape=record, label="  %39 = add i32 %38, %18"];
	Node0x77fb00[shape=record, label="  %40 = sub i32 %39, %12"];
	Node0x77fb70[shape=record, label="  %41 = add i32 %40, %20"];
	Node0x77fbe0[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x77fc50[shape=record, label="  %43 = add i32 %42, %22"];
	Node0x77fcc0[shape=record, label="  %44 = add i32 %43, %23"];
	Node0x77fd30[shape=record, label="  %45 = add i32 %44, %25"];
	Node0x77fda0[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x77fe10[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x77fe80[shape=record, label="  %48 = sub i32 %47, %33"];
	Node0x77fef0[shape=record, label="  %49 = add i32 %48, %37"];
	Node0x77ff60[shape=record, label="  %50 = sub i32 %49, %31"];
	Node0x77ffd0[shape=record, label="  %51 = add i32 %50, %35"];
	Node0x780040[shape=record, label="  %52 = icmp eq i32 %17, %51"];
	Node0x71c8b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x7800d0[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x780378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x7804d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x7805e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7806f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7807b8[shape=record, label="  ret i32 0"];
	Node0x77cbd8 -> Node0x77cc58;
	Node0x77cc58 -> Node0x77cce8;
	Node0x77cce8 -> Node0x77cd48;
	Node0x77cd48 -> Node0x77cdf8;
	Node0x77cdf8 -> Node0x77d228;
	Node0x77d228 -> Node0x77d308;
	Node0x77d308 -> Node0x77d408;
	Node0x77d408 -> Node0x77d4c8;
	Node0x77d4c8 -> Node0x77d578;
	Node0x77d578 -> Node0x77d638;
	Node0x77d638 -> Node0x77d6e8;
	Node0x77d6e8 -> Node0x777b10;
	Node0x777b10 -> Node0x77d8e8;
	Node0x77d8e8 -> Node0x77e858;
	Node0x77e858 -> Node0x77eec8;
	Node0x77eec8 -> Node0x77ef28;
	Node0x77ef28 -> Node0x77efa0;
	Node0x77efa0 -> Node0x77f010;
	Node0x77f010 -> Node0x77f080;
	Node0x77f080 -> Node0x77f0f0;
	Node0x77f0f0 -> Node0x77f160;
	Node0x77f160 -> Node0x77f1d0;
	Node0x77f1d0 -> Node0x77f240;
	Node0x77f240 -> Node0x77f2b0;
	Node0x77f2b0 -> Node0x77f320;
	Node0x77f320 -> Node0x77f390;
	Node0x77f390 -> Node0x77f400;
	Node0x77f400 -> Node0x77f470;
	Node0x77f470 -> Node0x77f4e0;
	Node0x77f4e0 -> Node0x77f550;
	Node0x77f550 -> Node0x77f5c0;
	Node0x77f5c0 -> Node0x77f630;
	Node0x77f630 -> Node0x77f6a0;
	Node0x77f6a0 -> Node0x77f710;
	Node0x77f710 -> Node0x77f780;
	Node0x77f780 -> Node0x77f7f0;
	Node0x77f7f0 -> Node0x77f860;
	Node0x77f860 -> Node0x77f8d0;
	Node0x77f8d0 -> Node0x77f940;
	Node0x77f940 -> Node0x77f9b0;
	Node0x77f9b0 -> Node0x77fa20;
	Node0x77fa20 -> Node0x77fa90;
	Node0x77fa90 -> Node0x77fb00;
	Node0x77fb00 -> Node0x77fb70;
	Node0x77fb70 -> Node0x77fbe0;
	Node0x77fbe0 -> Node0x77fc50;
	Node0x77fc50 -> Node0x77fcc0;
	Node0x77fcc0 -> Node0x77fd30;
	Node0x77fd30 -> Node0x77fda0;
	Node0x77fda0 -> Node0x77fe10;
	Node0x77fe10 -> Node0x77fe80;
	Node0x77fe80 -> Node0x77fef0;
	Node0x77fef0 -> Node0x77ff60;
	Node0x77ff60 -> Node0x77ffd0;
	Node0x77ffd0 -> Node0x780040;
	Node0x780040 -> Node0x71c8b8;
	Node0x71c8b8 -> Node0x7800d0;
	Node0x7800d0 -> Node0x780378;
	Node0x780378 -> Node0x7804d8;
	Node0x7804d8 -> Node0x7805e8;
	Node0x7805e8 -> Node0x7806f8;
	Node0x7806f8 -> Node0x7807b8;
edge [color=red]
	Node0x77cbd8 -> Node0x77cdf8;
	Node0x77cdf8 -> Node0x77d228;
	Node0x77cc58 -> Node0x77d308;
	Node0x77d308 -> Node0x77d408;
	Node0x77cce8 -> Node0x77d4c8;
	Node0x77d4c8 -> Node0x77d578;
	Node0x77cd48 -> Node0x77d638;
	Node0x77d638 -> Node0x77d6e8;
	Node0x77cbd8 -> Node0x777b10;
	Node0x77cc58 -> Node0x777b10;
	Node0x77cce8 -> Node0x777b10;
	Node0x77cd48 -> Node0x777b10;
	Node0x77cbd8 -> Node0x77d8e8;
	Node0x77cc58 -> Node0x77e858;
	Node0x77cce8 -> Node0x77eec8;
	Node0x77cd48 -> Node0x77ef28;
	Node0x77d8e8 -> Node0x77efa0;
	Node0x77ef28 -> Node0x77f010;
	Node0x77efa0 -> Node0x77f010;
	Node0x77d8e8 -> Node0x77f080;
	Node0x77f080 -> Node0x77f0f0;
	Node0x77f010 -> Node0x77f0f0;
	Node0x77eec8 -> Node0x77f160;
	Node0x77e858 -> Node0x77f1d0;
	Node0x77f1d0 -> Node0x77f240;
	Node0x77eec8 -> Node0x77f2b0;
	Node0x77e858 -> Node0x77f2b0;
	Node0x77eec8 -> Node0x77f320;
	Node0x77e858 -> Node0x77f320;
	Node0x77eec8 -> Node0x77f390;
	Node0x77e858 -> Node0x77f390;
	Node0x77ef28 -> Node0x77f400;
	Node0x77d8e8 -> Node0x77f400;
	Node0x77f400 -> Node0x77f470;
	Node0x77ef28 -> Node0x77f4e0;
	Node0x77efa0 -> Node0x77f4e0;
	Node0x77f4e0 -> Node0x77f550;
	Node0x77f550 -> Node0x77f5c0;
	Node0x77ef28 -> Node0x77f630;
	Node0x77d8e8 -> Node0x77f630;
	Node0x77f630 -> Node0x77f6a0;
	Node0x77f6a0 -> Node0x77f710;
	Node0x77f010 -> Node0x77f780;
	Node0x77f400 -> Node0x77f7f0;
	Node0x77f4e0 -> Node0x77f860;
	Node0x77f780 -> Node0x77f860;
	Node0x77f860 -> Node0x77f8d0;
	Node0x77f320 -> Node0x77f940;
	Node0x77ef28 -> Node0x77f940;
	Node0x77f940 -> Node0x77f9b0;
	Node0x77d8e8 -> Node0x77fa20;
	Node0x77fa20 -> Node0x77fa90;
	Node0x77f160 -> Node0x77fa90;
	Node0x77fa90 -> Node0x77fb00;
	Node0x77eec8 -> Node0x77fb00;
	Node0x77fb00 -> Node0x77fb70;
	Node0x77f240 -> Node0x77fb70;
	Node0x77fb70 -> Node0x77fbe0;
	Node0x77f2b0 -> Node0x77fbe0;
	Node0x77fbe0 -> Node0x77fc50;
	Node0x77f320 -> Node0x77fc50;
	Node0x77fc50 -> Node0x77fcc0;
	Node0x77f390 -> Node0x77fcc0;
	Node0x77fcc0 -> Node0x77fd30;
	Node0x77f470 -> Node0x77fd30;
	Node0x77fd30 -> Node0x77fda0;
	Node0x77f630 -> Node0x77fda0;
	Node0x77fda0 -> Node0x77fe10;
	Node0x77f5c0 -> Node0x77fe10;
	Node0x77fe10 -> Node0x77fe80;
	Node0x77f7f0 -> Node0x77fe80;
	Node0x77fe80 -> Node0x77fef0;
	Node0x77f9b0 -> Node0x77fef0;
	Node0x77fef0 -> Node0x77ff60;
	Node0x77f710 -> Node0x77ff60;
	Node0x77ff60 -> Node0x77ffd0;
	Node0x77f8d0 -> Node0x77ffd0;
	Node0x77f0f0 -> Node0x780040;
	Node0x77ffd0 -> Node0x780040;
	Node0x780040 -> Node0x71c8b8;
	Node0x71c8b8 -> Node0x7800d0;
	Node0x77d638 -> Node0x780378;
	Node0x77d4c8 -> Node0x7804d8;
	Node0x77d308 -> Node0x7805e8;
	Node0x77cdf8 -> Node0x7806f8;
}
