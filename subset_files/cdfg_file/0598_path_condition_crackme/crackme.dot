digraph "DFG for'crackme' function" {
	Node0x77b0f0[shape=record, label="  %5 = xor i32 %0, -1"];
	Node0x77b160[shape=record, label="  %6 = or i32 %5, %3"];
	Node0x77b200[shape=record, label="  %7 = add i32 %0, 2"];
	Node0x77b270[shape=record, label="  %8 = sub i32 %7, %6"];
	Node0x77b2e0[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x77b380[shape=record, label="  %10 = shl i32 %1, 1"];
	Node0x77b420[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x77b490[shape=record, label="  %12 = xor i32 %2, %1"];
	Node0x77b500[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x77b570[shape=record, label="  %14 = or i32 %2, %1"];
	Node0x77b5e0[shape=record, label="  %15 = and i32 %3, %0"];
	Node0x77b650[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x77b6c0[shape=record, label="  %17 = and i32 %5, %3"];
	Node0x77b730[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x77b7d0[shape=record, label="  %19 = mul i32 %18, 5"];
	Node0x77b840[shape=record, label="  %20 = or i32 %3, %0"];
	Node0x77b8e0[shape=record, label="  %21 = shl i32 %20, 3"];
	Node0x77b980[shape=record, label="  %22 = xor i32 %21, -8"];
	Node0x77b9f0[shape=record, label="  %23 = xor i32 %6, -1"];
	Node0x77ba60[shape=record, label="  %24 = shl i32 %15, 3"];
	Node0x77bad0[shape=record, label="  %25 = add i32 %17, %23"];
	Node0x77bb70[shape=record, label="  %26 = mul i32 %25, -6"];
	Node0x77bbe0[shape=record, label="  %27 = add i32 %13, %3"];
	Node0x77bc50[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x77bcf0[shape=record, label="  %29 = sub i32 4, %0"];
	Node0x77bd60[shape=record, label="  %30 = add i32 %29, %9"];
	Node0x77bdd0[shape=record, label="  %31 = sub i32 %30, %2"];
	Node0x77be40[shape=record, label="  %32 = add i32 %31, %11"];
	Node0x77c0c0[shape=record, label="  %33 = add i32 %32, %12"];
	Node0x77c130[shape=record, label="  %34 = add i32 %33, %13"];
	Node0x77c1a0[shape=record, label="  %35 = add i32 %34, %14"];
	Node0x77c210[shape=record, label="  %36 = add i32 %35, %16"];
	Node0x77c280[shape=record, label="  %37 = add i32 %36, %20"];
	Node0x77c2f0[shape=record, label="  %38 = add i32 %37, %19"];
	Node0x77c360[shape=record, label="  %39 = sub i32 %38, %24"];
	Node0x77c3d0[shape=record, label="  %40 = add i32 %39, %28"];
	Node0x77c440[shape=record, label="  %41 = sub i32 %40, %22"];
	Node0x77c4b0[shape=record, label="  %42 = add i32 %41, %26"];
	Node0x77c520[shape=record, label="  %43 = icmp eq i32 %8, %42"];
	Node0x71b268[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x77c9c0[shape=record, label="  %45 = tail call i32 @puts(i8* nonnull dereferenceable(1) %44)"];
	Node0x77ca10[shape=record, label="  ret void"];
	Node0x77b0f0 -> Node0x77b160;
	Node0x77b160 -> Node0x77b200;
	Node0x77b200 -> Node0x77b270;
	Node0x77b270 -> Node0x77b2e0;
	Node0x77b2e0 -> Node0x77b380;
	Node0x77b380 -> Node0x77b420;
	Node0x77b420 -> Node0x77b490;
	Node0x77b490 -> Node0x77b500;
	Node0x77b500 -> Node0x77b570;
	Node0x77b570 -> Node0x77b5e0;
	Node0x77b5e0 -> Node0x77b650;
	Node0x77b650 -> Node0x77b6c0;
	Node0x77b6c0 -> Node0x77b730;
	Node0x77b730 -> Node0x77b7d0;
	Node0x77b7d0 -> Node0x77b840;
	Node0x77b840 -> Node0x77b8e0;
	Node0x77b8e0 -> Node0x77b980;
	Node0x77b980 -> Node0x77b9f0;
	Node0x77b9f0 -> Node0x77ba60;
	Node0x77ba60 -> Node0x77bad0;
	Node0x77bad0 -> Node0x77bb70;
	Node0x77bb70 -> Node0x77bbe0;
	Node0x77bbe0 -> Node0x77bc50;
	Node0x77bc50 -> Node0x77bcf0;
	Node0x77bcf0 -> Node0x77bd60;
	Node0x77bd60 -> Node0x77bdd0;
	Node0x77bdd0 -> Node0x77be40;
	Node0x77be40 -> Node0x77c0c0;
	Node0x77c0c0 -> Node0x77c130;
	Node0x77c130 -> Node0x77c1a0;
	Node0x77c1a0 -> Node0x77c210;
	Node0x77c210 -> Node0x77c280;
	Node0x77c280 -> Node0x77c2f0;
	Node0x77c2f0 -> Node0x77c360;
	Node0x77c360 -> Node0x77c3d0;
	Node0x77c3d0 -> Node0x77c440;
	Node0x77c440 -> Node0x77c4b0;
	Node0x77c4b0 -> Node0x77c520;
	Node0x77c520 -> Node0x71b268;
	Node0x71b268 -> Node0x77c9c0;
	Node0x77c9c0 -> Node0x77ca10;
edge [color=red]
	Node0x77b0f0 -> Node0x77b160;
	Node0x77b200 -> Node0x77b270;
	Node0x77b160 -> Node0x77b270;
	Node0x77b380 -> Node0x77b420;
	Node0x77b5e0 -> Node0x77b650;
	Node0x77b0f0 -> Node0x77b6c0;
	Node0x77b6c0 -> Node0x77b730;
	Node0x77b730 -> Node0x77b7d0;
	Node0x77b840 -> Node0x77b8e0;
	Node0x77b8e0 -> Node0x77b980;
	Node0x77b160 -> Node0x77b9f0;
	Node0x77b5e0 -> Node0x77ba60;
	Node0x77b6c0 -> Node0x77bad0;
	Node0x77b9f0 -> Node0x77bad0;
	Node0x77bad0 -> Node0x77bb70;
	Node0x77b500 -> Node0x77bbe0;
	Node0x77bbe0 -> Node0x77bc50;
	Node0x77bcf0 -> Node0x77bd60;
	Node0x77b2e0 -> Node0x77bd60;
	Node0x77bd60 -> Node0x77bdd0;
	Node0x77bdd0 -> Node0x77be40;
	Node0x77b420 -> Node0x77be40;
	Node0x77be40 -> Node0x77c0c0;
	Node0x77b490 -> Node0x77c0c0;
	Node0x77c0c0 -> Node0x77c130;
	Node0x77b500 -> Node0x77c130;
	Node0x77c130 -> Node0x77c1a0;
	Node0x77b570 -> Node0x77c1a0;
	Node0x77c1a0 -> Node0x77c210;
	Node0x77b650 -> Node0x77c210;
	Node0x77c210 -> Node0x77c280;
	Node0x77b840 -> Node0x77c280;
	Node0x77c280 -> Node0x77c2f0;
	Node0x77b7d0 -> Node0x77c2f0;
	Node0x77c2f0 -> Node0x77c360;
	Node0x77ba60 -> Node0x77c360;
	Node0x77c360 -> Node0x77c3d0;
	Node0x77bc50 -> Node0x77c3d0;
	Node0x77c3d0 -> Node0x77c440;
	Node0x77b980 -> Node0x77c440;
	Node0x77c440 -> Node0x77c4b0;
	Node0x77bb70 -> Node0x77c4b0;
	Node0x77b270 -> Node0x77c520;
	Node0x77c4b0 -> Node0x77c520;
	Node0x77c520 -> Node0x71b268;
	Node0x71b268 -> Node0x77c9c0;
}
