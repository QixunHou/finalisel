digraph "DFG for'main' function" {
	Node0x1d437f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d43878[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d43908[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1d43d68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1d43e48[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1d43f68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d441a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1d44258[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d451c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d45850[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1d458c0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1d45930[shape=record, label="  %10 = shl i32 %8, 1"];
	Node0x1d459a0[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x1d45a10[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1d45a80[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x1d45af0[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x1d45b60[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1d45bd0[shape=record, label="  %16 = and i32 %6, %8"];
	Node0x1d45c40[shape=record, label="  %17 = and i32 %7, %6"];
	Node0x1d45cb0[shape=record, label="  %18 = mul i32 %17, 3"];
	Node0x1d45d20[shape=record, label="  %19 = add i32 %10, %15"];
	Node0x1d45d90[shape=record, label="  %20 = sub i32 %19, %16"];
	Node0x1d45e00[shape=record, label="  %21 = add i32 %20, %18"];
	Node0x1d45e70[shape=record, label="  %22 = sub i32 %21, %13"];
	Node0x1d45ee0[shape=record, label="  %23 = icmp eq i32 %9, %22"];
	Node0x1ce49d8[shape=record, label="  %24 = select i1 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d45f70[shape=record, label="  %25 = call i32 @puts(i8* nonnull dereferenceable(1) %24) #5"];
	Node0x1d461c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d46328[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1d463e8[shape=record, label="  ret i32 0"];
	Node0x1d437f8 -> Node0x1d43878;
	Node0x1d43878 -> Node0x1d43908;
	Node0x1d43908 -> Node0x1d43d68;
	Node0x1d43d68 -> Node0x1d43e48;
	Node0x1d43e48 -> Node0x1d43f68;
	Node0x1d43f68 -> Node0x1d441a0;
	Node0x1d441a0 -> Node0x1d44258;
	Node0x1d44258 -> Node0x1d451c8;
	Node0x1d451c8 -> Node0x1d45850;
	Node0x1d45850 -> Node0x1d458c0;
	Node0x1d458c0 -> Node0x1d45930;
	Node0x1d45930 -> Node0x1d459a0;
	Node0x1d459a0 -> Node0x1d45a10;
	Node0x1d45a10 -> Node0x1d45a80;
	Node0x1d45a80 -> Node0x1d45af0;
	Node0x1d45af0 -> Node0x1d45b60;
	Node0x1d45b60 -> Node0x1d45bd0;
	Node0x1d45bd0 -> Node0x1d45c40;
	Node0x1d45c40 -> Node0x1d45cb0;
	Node0x1d45cb0 -> Node0x1d45d20;
	Node0x1d45d20 -> Node0x1d45d90;
	Node0x1d45d90 -> Node0x1d45e00;
	Node0x1d45e00 -> Node0x1d45e70;
	Node0x1d45e70 -> Node0x1d45ee0;
	Node0x1d45ee0 -> Node0x1ce49d8;
	Node0x1ce49d8 -> Node0x1d45f70;
	Node0x1d45f70 -> Node0x1d461c8;
	Node0x1d461c8 -> Node0x1d46328;
	Node0x1d46328 -> Node0x1d463e8;
edge [color=red]
	Node0x1d437f8 -> Node0x1d43908;
	Node0x1d43908 -> Node0x1d43d68;
	Node0x1d43878 -> Node0x1d43e48;
	Node0x1d43e48 -> Node0x1d43f68;
	Node0x1d437f8 -> Node0x1d441a0;
	Node0x1d43878 -> Node0x1d441a0;
	Node0x1d437f8 -> Node0x1d44258;
	Node0x1d43878 -> Node0x1d451c8;
	Node0x1d451c8 -> Node0x1d45850;
	Node0x1d44258 -> Node0x1d458c0;
	Node0x1d45850 -> Node0x1d458c0;
	Node0x1d45850 -> Node0x1d45930;
	Node0x1d451c8 -> Node0x1d459a0;
	Node0x1d44258 -> Node0x1d459a0;
	Node0x1d459a0 -> Node0x1d45a10;
	Node0x1d45a10 -> Node0x1d45a80;
	Node0x1d451c8 -> Node0x1d45af0;
	Node0x1d44258 -> Node0x1d45af0;
	Node0x1d45af0 -> Node0x1d45b60;
	Node0x1d44258 -> Node0x1d45bd0;
	Node0x1d45850 -> Node0x1d45bd0;
	Node0x1d451c8 -> Node0x1d45c40;
	Node0x1d44258 -> Node0x1d45c40;
	Node0x1d45c40 -> Node0x1d45cb0;
	Node0x1d45930 -> Node0x1d45d20;
	Node0x1d45b60 -> Node0x1d45d20;
	Node0x1d45d20 -> Node0x1d45d90;
	Node0x1d45bd0 -> Node0x1d45d90;
	Node0x1d45d90 -> Node0x1d45e00;
	Node0x1d45cb0 -> Node0x1d45e00;
	Node0x1d45e00 -> Node0x1d45e70;
	Node0x1d45a80 -> Node0x1d45e70;
	Node0x1d458c0 -> Node0x1d45ee0;
	Node0x1d45e70 -> Node0x1d45ee0;
	Node0x1d45ee0 -> Node0x1ce49d8;
	Node0x1ce49d8 -> Node0x1d45f70;
	Node0x1d43e48 -> Node0x1d461c8;
	Node0x1d43908 -> Node0x1d46328;
}
