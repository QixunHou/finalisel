digraph "DFG for'main' function" {
	Node0x1c7acb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c7ad38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c7adc8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1c7b228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c7b308[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1c7b428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c7b660[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1c7b718[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c7c688[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c7cd10[shape=record, label="  %8 = sub i32 -3, %6"];
	Node0x1c7cd80[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x1c7cdf0[shape=record, label="  %10 = xor i32 %6, %9"];
	Node0x1c7ce60[shape=record, label="  %11 = or i32 %6, %9"];
	Node0x1c7ced0[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x1c7cf40[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1c7cfb0[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1c7d020[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x1c7d090[shape=record, label="  %16 = and i32 %6, %9"];
	Node0x1c7d100[shape=record, label="  %17 = shl i32 %11, 2"];
	Node0x1c7d170[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x1c7d1e0[shape=record, label="  %19 = shl i32 %12, 2"];
	Node0x1c7d250[shape=record, label="  %20 = shl i32 %16, 1"];
	Node0x1c7d2c0[shape=record, label="  %21 = sub i32 1, %6"];
	Node0x1c7d330[shape=record, label="  %22 = sub i32 %21, %7"];
	Node0x1c7d3a0[shape=record, label="  %23 = add i32 %22, %10"];
	Node0x1c7d410[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x1c7d480[shape=record, label="  %25 = sub i32 %24, %15"];
	Node0x1c7d4f0[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x1c7d560[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x1c7d5d0[shape=record, label="  %28 = add i32 %27, %14"];
	Node0x1c7d640[shape=record, label="  %29 = add i32 %28, %18"];
	Node0x1c7d6b0[shape=record, label="  %30 = icmp eq i32 %8, %29"];
	Node0x1c1b9d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c7d740[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x1c7dba8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c7dd08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c7ddc8[shape=record, label="  ret i32 0"];
	Node0x1c7acb8 -> Node0x1c7ad38;
	Node0x1c7ad38 -> Node0x1c7adc8;
	Node0x1c7adc8 -> Node0x1c7b228;
	Node0x1c7b228 -> Node0x1c7b308;
	Node0x1c7b308 -> Node0x1c7b428;
	Node0x1c7b428 -> Node0x1c7b660;
	Node0x1c7b660 -> Node0x1c7b718;
	Node0x1c7b718 -> Node0x1c7c688;
	Node0x1c7c688 -> Node0x1c7cd10;
	Node0x1c7cd10 -> Node0x1c7cd80;
	Node0x1c7cd80 -> Node0x1c7cdf0;
	Node0x1c7cdf0 -> Node0x1c7ce60;
	Node0x1c7ce60 -> Node0x1c7ced0;
	Node0x1c7ced0 -> Node0x1c7cf40;
	Node0x1c7cf40 -> Node0x1c7cfb0;
	Node0x1c7cfb0 -> Node0x1c7d020;
	Node0x1c7d020 -> Node0x1c7d090;
	Node0x1c7d090 -> Node0x1c7d100;
	Node0x1c7d100 -> Node0x1c7d170;
	Node0x1c7d170 -> Node0x1c7d1e0;
	Node0x1c7d1e0 -> Node0x1c7d250;
	Node0x1c7d250 -> Node0x1c7d2c0;
	Node0x1c7d2c0 -> Node0x1c7d330;
	Node0x1c7d330 -> Node0x1c7d3a0;
	Node0x1c7d3a0 -> Node0x1c7d410;
	Node0x1c7d410 -> Node0x1c7d480;
	Node0x1c7d480 -> Node0x1c7d4f0;
	Node0x1c7d4f0 -> Node0x1c7d560;
	Node0x1c7d560 -> Node0x1c7d5d0;
	Node0x1c7d5d0 -> Node0x1c7d640;
	Node0x1c7d640 -> Node0x1c7d6b0;
	Node0x1c7d6b0 -> Node0x1c1b9d8;
	Node0x1c1b9d8 -> Node0x1c7d740;
	Node0x1c7d740 -> Node0x1c7dba8;
	Node0x1c7dba8 -> Node0x1c7dd08;
	Node0x1c7dd08 -> Node0x1c7ddc8;
edge [color=red]
	Node0x1c7acb8 -> Node0x1c7adc8;
	Node0x1c7adc8 -> Node0x1c7b228;
	Node0x1c7ad38 -> Node0x1c7b308;
	Node0x1c7b308 -> Node0x1c7b428;
	Node0x1c7acb8 -> Node0x1c7b660;
	Node0x1c7ad38 -> Node0x1c7b660;
	Node0x1c7acb8 -> Node0x1c7b718;
	Node0x1c7ad38 -> Node0x1c7c688;
	Node0x1c7b718 -> Node0x1c7cd10;
	Node0x1c7c688 -> Node0x1c7cd80;
	Node0x1c7b718 -> Node0x1c7cdf0;
	Node0x1c7cd80 -> Node0x1c7cdf0;
	Node0x1c7b718 -> Node0x1c7ce60;
	Node0x1c7cd80 -> Node0x1c7ce60;
	Node0x1c7c688 -> Node0x1c7ced0;
	Node0x1c7b718 -> Node0x1c7ced0;
	Node0x1c7ced0 -> Node0x1c7cf40;
	Node0x1c7cf40 -> Node0x1c7cfb0;
	Node0x1c7c688 -> Node0x1c7d020;
	Node0x1c7b718 -> Node0x1c7d020;
	Node0x1c7b718 -> Node0x1c7d090;
	Node0x1c7cd80 -> Node0x1c7d090;
	Node0x1c7ce60 -> Node0x1c7d100;
	Node0x1c7d100 -> Node0x1c7d170;
	Node0x1c7ced0 -> Node0x1c7d1e0;
	Node0x1c7d090 -> Node0x1c7d250;
	Node0x1c7b718 -> Node0x1c7d2c0;
	Node0x1c7d2c0 -> Node0x1c7d330;
	Node0x1c7c688 -> Node0x1c7d330;
	Node0x1c7d330 -> Node0x1c7d3a0;
	Node0x1c7cdf0 -> Node0x1c7d3a0;
	Node0x1c7d3a0 -> Node0x1c7d410;
	Node0x1c7ce60 -> Node0x1c7d410;
	Node0x1c7d410 -> Node0x1c7d480;
	Node0x1c7d020 -> Node0x1c7d480;
	Node0x1c7d480 -> Node0x1c7d4f0;
	Node0x1c7d1e0 -> Node0x1c7d4f0;
	Node0x1c7d4f0 -> Node0x1c7d560;
	Node0x1c7d250 -> Node0x1c7d560;
	Node0x1c7d560 -> Node0x1c7d5d0;
	Node0x1c7cfb0 -> Node0x1c7d5d0;
	Node0x1c7d5d0 -> Node0x1c7d640;
	Node0x1c7d170 -> Node0x1c7d640;
	Node0x1c7cd10 -> Node0x1c7d6b0;
	Node0x1c7d640 -> Node0x1c7d6b0;
	Node0x1c7d6b0 -> Node0x1c1b9d8;
	Node0x1c1b9d8 -> Node0x1c7d740;
	Node0x1c7b308 -> Node0x1c7dba8;
	Node0x1c7adc8 -> Node0x1c7dd08;
}
