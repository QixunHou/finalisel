digraph "DFG for'crackme' function" {
	Node0x2306060[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x2306100[shape=record, label="  %6 = mul i32 %5, 5"];
	Node0x2306170[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x23061e0[shape=record, label="  %8 = xor i32 %7, %3"];
	Node0x2306250[shape=record, label="  %9 = add i32 %8, %6"];
	Node0x23062c0[shape=record, label="  %10 = and i32 %7, %3"];
	Node0x2306330[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x23063a0[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x2306410[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x2306480[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0x23064f0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x2306560[shape=record, label="  %16 = or i32 %5, %1"];
	Node0x23065d0[shape=record, label="  %17 = or i32 %2, %1"];
	Node0x2306640[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x23066b0[shape=record, label="  %19 = mul i32 %18, 5"];
	Node0x2306750[shape=record, label="  %20 = shl i32 %16, 1"];
	Node0x23067f0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x2306860[shape=record, label="  %22 = and i32 %5, %1"];
	Node0x2306900[shape=record, label="  %23 = mul i32 %22, 7"];
	Node0x2306970[shape=record, label="  %24 = shl i32 %13, 1"];
	Node0x23069e0[shape=record, label="  %25 = and i32 %3, %0"];
	Node0x2306a50[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x2306ac0[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x2306b30[shape=record, label="  %28 = add i32 %2, 1"];
	Node0x2306ba0[shape=record, label="  %29 = add i32 %28, %13"];
	Node0x2306c10[shape=record, label="  %30 = add i32 %29, %15"];
	Node0x2306c80[shape=record, label="  %31 = sub i32 %30, %14"];
	Node0x2306cf0[shape=record, label="  %32 = add i32 %31, %16"];
	Node0x2306f70[shape=record, label="  %33 = add i32 %32, %19"];
	Node0x2306fe0[shape=record, label="  %34 = add i32 %33, %23"];
	Node0x2307050[shape=record, label="  %35 = sub i32 %34, %24"];
	Node0x23070c0[shape=record, label="  %36 = add i32 %35, %25"];
	Node0x2307130[shape=record, label="  %37 = add i32 %36, %27"];
	Node0x23071a0[shape=record, label="  %38 = sub i32 %37, %10"];
	Node0x2307210[shape=record, label="  %39 = add i32 %38, %21"];
	Node0x2307280[shape=record, label="  %40 = icmp eq i32 %12, %39"];
	Node0x22a6268[shape=record, label="  %41 = select i1 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2307720[shape=record, label="  %42 = tail call i32 @puts(i8* nonnull dereferenceable(1) %41)"];
	Node0x2307770[shape=record, label="  ret void"];
	Node0x2306060 -> Node0x2306100;
	Node0x2306100 -> Node0x2306170;
	Node0x2306170 -> Node0x23061e0;
	Node0x23061e0 -> Node0x2306250;
	Node0x2306250 -> Node0x23062c0;
	Node0x23062c0 -> Node0x2306330;
	Node0x2306330 -> Node0x23063a0;
	Node0x23063a0 -> Node0x2306410;
	Node0x2306410 -> Node0x2306480;
	Node0x2306480 -> Node0x23064f0;
	Node0x23064f0 -> Node0x2306560;
	Node0x2306560 -> Node0x23065d0;
	Node0x23065d0 -> Node0x2306640;
	Node0x2306640 -> Node0x23066b0;
	Node0x23066b0 -> Node0x2306750;
	Node0x2306750 -> Node0x23067f0;
	Node0x23067f0 -> Node0x2306860;
	Node0x2306860 -> Node0x2306900;
	Node0x2306900 -> Node0x2306970;
	Node0x2306970 -> Node0x23069e0;
	Node0x23069e0 -> Node0x2306a50;
	Node0x2306a50 -> Node0x2306ac0;
	Node0x2306ac0 -> Node0x2306b30;
	Node0x2306b30 -> Node0x2306ba0;
	Node0x2306ba0 -> Node0x2306c10;
	Node0x2306c10 -> Node0x2306c80;
	Node0x2306c80 -> Node0x2306cf0;
	Node0x2306cf0 -> Node0x2306f70;
	Node0x2306f70 -> Node0x2306fe0;
	Node0x2306fe0 -> Node0x2307050;
	Node0x2307050 -> Node0x23070c0;
	Node0x23070c0 -> Node0x2307130;
	Node0x2307130 -> Node0x23071a0;
	Node0x23071a0 -> Node0x2307210;
	Node0x2307210 -> Node0x2307280;
	Node0x2307280 -> Node0x22a6268;
	Node0x22a6268 -> Node0x2307720;
	Node0x2307720 -> Node0x2307770;
edge [color=red]
	Node0x2306060 -> Node0x2306100;
	Node0x2306170 -> Node0x23061e0;
	Node0x23061e0 -> Node0x2306250;
	Node0x2306100 -> Node0x2306250;
	Node0x2306170 -> Node0x23062c0;
	Node0x23062c0 -> Node0x2306330;
	Node0x2306250 -> Node0x23063a0;
	Node0x2306330 -> Node0x23063a0;
	Node0x2306480 -> Node0x23064f0;
	Node0x2306060 -> Node0x2306560;
	Node0x23065d0 -> Node0x2306640;
	Node0x2306640 -> Node0x23066b0;
	Node0x2306560 -> Node0x2306750;
	Node0x2306750 -> Node0x23067f0;
	Node0x2306060 -> Node0x2306860;
	Node0x2306860 -> Node0x2306900;
	Node0x2306410 -> Node0x2306970;
	Node0x2306a50 -> Node0x2306ac0;
	Node0x2306b30 -> Node0x2306ba0;
	Node0x2306410 -> Node0x2306ba0;
	Node0x2306ba0 -> Node0x2306c10;
	Node0x23064f0 -> Node0x2306c10;
	Node0x2306c10 -> Node0x2306c80;
	Node0x2306480 -> Node0x2306c80;
	Node0x2306c80 -> Node0x2306cf0;
	Node0x2306560 -> Node0x2306cf0;
	Node0x2306cf0 -> Node0x2306f70;
	Node0x23066b0 -> Node0x2306f70;
	Node0x2306f70 -> Node0x2306fe0;
	Node0x2306900 -> Node0x2306fe0;
	Node0x2306fe0 -> Node0x2307050;
	Node0x2306970 -> Node0x2307050;
	Node0x2307050 -> Node0x23070c0;
	Node0x23069e0 -> Node0x23070c0;
	Node0x23070c0 -> Node0x2307130;
	Node0x2306ac0 -> Node0x2307130;
	Node0x2307130 -> Node0x23071a0;
	Node0x23062c0 -> Node0x23071a0;
	Node0x23071a0 -> Node0x2307210;
	Node0x23067f0 -> Node0x2307210;
	Node0x23063a0 -> Node0x2307280;
	Node0x2307210 -> Node0x2307280;
	Node0x2307280 -> Node0x22a6268;
	Node0x22a6268 -> Node0x2307720;
}
