digraph "DFG for'main' function" {
	Node0x2307938[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23079b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2307a48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2307aa8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x2307b58[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x2307f88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2308068[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x2308168[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2308228[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x23082d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2308398[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x2308448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2302a80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x2308648[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23095b8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2309c28[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2309c88[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x2309d00[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x2309d70[shape=record, label="  %15 = mul i32 %14, 5"];
	Node0x2309de0[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x2309e50[shape=record, label="  %17 = xor i32 %13, %16"];
	Node0x2309ec0[shape=record, label="  %18 = add i32 %17, %15"];
	Node0x2309f30[shape=record, label="  %19 = and i32 %13, %16"];
	Node0x2309fa0[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x230a010[shape=record, label="  %21 = add i32 %18, %20"];
	Node0x230a080[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x230a0f0[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0x230a160[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x230a1d0[shape=record, label="  %25 = or i32 %11, %14"];
	Node0x230a240[shape=record, label="  %26 = or i32 %12, %11"];
	Node0x230a2b0[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x230a320[shape=record, label="  %28 = mul i32 %27, 5"];
	Node0x230a390[shape=record, label="  %29 = shl i32 %25, 1"];
	Node0x230a400[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0x230a470[shape=record, label="  %31 = and i32 %11, %14"];
	Node0x230a4e0[shape=record, label="  %32 = mul i32 %31, 7"];
	Node0x230a550[shape=record, label="  %33 = shl i32 %22, 1"];
	Node0x230a5c0[shape=record, label="  %34 = and i32 %13, %10"];
	Node0x230a630[shape=record, label="  %35 = or i32 %13, %10"];
	Node0x230a6a0[shape=record, label="  %36 = xor i32 %35, -1"];
	Node0x230a710[shape=record, label="  %37 = add i32 %12, 1"];
	Node0x230a780[shape=record, label="  %38 = add i32 %37, %22"];
	Node0x230a7f0[shape=record, label="  %39 = add i32 %38, %24"];
	Node0x230a860[shape=record, label="  %40 = sub i32 %39, %23"];
	Node0x230a8d0[shape=record, label="  %41 = add i32 %40, %25"];
	Node0x230a940[shape=record, label="  %42 = add i32 %41, %28"];
	Node0x230a9b0[shape=record, label="  %43 = add i32 %42, %32"];
	Node0x230aa20[shape=record, label="  %44 = sub i32 %43, %33"];
	Node0x230aa90[shape=record, label="  %45 = add i32 %44, %34"];
	Node0x230ab00[shape=record, label="  %46 = add i32 %45, %36"];
	Node0x230ab70[shape=record, label="  %47 = sub i32 %46, %19"];
	Node0x230abe0[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x230ac50[shape=record, label="  %49 = icmp eq i32 %21, %48"];
	Node0x22a78b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x230ace0[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0x230af88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x230b0e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x230b1f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x230b308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x230b3c8[shape=record, label="  ret i32 0"];
	Node0x2307938 -> Node0x23079b8;
	Node0x23079b8 -> Node0x2307a48;
	Node0x2307a48 -> Node0x2307aa8;
	Node0x2307aa8 -> Node0x2307b58;
	Node0x2307b58 -> Node0x2307f88;
	Node0x2307f88 -> Node0x2308068;
	Node0x2308068 -> Node0x2308168;
	Node0x2308168 -> Node0x2308228;
	Node0x2308228 -> Node0x23082d8;
	Node0x23082d8 -> Node0x2308398;
	Node0x2308398 -> Node0x2308448;
	Node0x2308448 -> Node0x2302a80;
	Node0x2302a80 -> Node0x2308648;
	Node0x2308648 -> Node0x23095b8;
	Node0x23095b8 -> Node0x2309c28;
	Node0x2309c28 -> Node0x2309c88;
	Node0x2309c88 -> Node0x2309d00;
	Node0x2309d00 -> Node0x2309d70;
	Node0x2309d70 -> Node0x2309de0;
	Node0x2309de0 -> Node0x2309e50;
	Node0x2309e50 -> Node0x2309ec0;
	Node0x2309ec0 -> Node0x2309f30;
	Node0x2309f30 -> Node0x2309fa0;
	Node0x2309fa0 -> Node0x230a010;
	Node0x230a010 -> Node0x230a080;
	Node0x230a080 -> Node0x230a0f0;
	Node0x230a0f0 -> Node0x230a160;
	Node0x230a160 -> Node0x230a1d0;
	Node0x230a1d0 -> Node0x230a240;
	Node0x230a240 -> Node0x230a2b0;
	Node0x230a2b0 -> Node0x230a320;
	Node0x230a320 -> Node0x230a390;
	Node0x230a390 -> Node0x230a400;
	Node0x230a400 -> Node0x230a470;
	Node0x230a470 -> Node0x230a4e0;
	Node0x230a4e0 -> Node0x230a550;
	Node0x230a550 -> Node0x230a5c0;
	Node0x230a5c0 -> Node0x230a630;
	Node0x230a630 -> Node0x230a6a0;
	Node0x230a6a0 -> Node0x230a710;
	Node0x230a710 -> Node0x230a780;
	Node0x230a780 -> Node0x230a7f0;
	Node0x230a7f0 -> Node0x230a860;
	Node0x230a860 -> Node0x230a8d0;
	Node0x230a8d0 -> Node0x230a940;
	Node0x230a940 -> Node0x230a9b0;
	Node0x230a9b0 -> Node0x230aa20;
	Node0x230aa20 -> Node0x230aa90;
	Node0x230aa90 -> Node0x230ab00;
	Node0x230ab00 -> Node0x230ab70;
	Node0x230ab70 -> Node0x230abe0;
	Node0x230abe0 -> Node0x230ac50;
	Node0x230ac50 -> Node0x22a78b8;
	Node0x22a78b8 -> Node0x230ace0;
	Node0x230ace0 -> Node0x230af88;
	Node0x230af88 -> Node0x230b0e8;
	Node0x230b0e8 -> Node0x230b1f8;
	Node0x230b1f8 -> Node0x230b308;
	Node0x230b308 -> Node0x230b3c8;
edge [color=red]
	Node0x2307938 -> Node0x2307b58;
	Node0x2307b58 -> Node0x2307f88;
	Node0x23079b8 -> Node0x2308068;
	Node0x2308068 -> Node0x2308168;
	Node0x2307a48 -> Node0x2308228;
	Node0x2308228 -> Node0x23082d8;
	Node0x2307aa8 -> Node0x2308398;
	Node0x2308398 -> Node0x2308448;
	Node0x2307938 -> Node0x2302a80;
	Node0x23079b8 -> Node0x2302a80;
	Node0x2307a48 -> Node0x2302a80;
	Node0x2307aa8 -> Node0x2302a80;
	Node0x2307938 -> Node0x2308648;
	Node0x23079b8 -> Node0x23095b8;
	Node0x2307a48 -> Node0x2309c28;
	Node0x2307aa8 -> Node0x2309c88;
	Node0x2309c28 -> Node0x2309d00;
	Node0x2309d00 -> Node0x2309d70;
	Node0x2308648 -> Node0x2309de0;
	Node0x2309c88 -> Node0x2309e50;
	Node0x2309de0 -> Node0x2309e50;
	Node0x2309e50 -> Node0x2309ec0;
	Node0x2309d70 -> Node0x2309ec0;
	Node0x2309c88 -> Node0x2309f30;
	Node0x2309de0 -> Node0x2309f30;
	Node0x2309f30 -> Node0x2309fa0;
	Node0x2309ec0 -> Node0x230a010;
	Node0x2309fa0 -> Node0x230a010;
	Node0x2309c28 -> Node0x230a080;
	Node0x23095b8 -> Node0x230a080;
	Node0x2309c28 -> Node0x230a0f0;
	Node0x23095b8 -> Node0x230a0f0;
	Node0x230a0f0 -> Node0x230a160;
	Node0x23095b8 -> Node0x230a1d0;
	Node0x2309d00 -> Node0x230a1d0;
	Node0x2309c28 -> Node0x230a240;
	Node0x23095b8 -> Node0x230a240;
	Node0x230a240 -> Node0x230a2b0;
	Node0x230a2b0 -> Node0x230a320;
	Node0x230a1d0 -> Node0x230a390;
	Node0x230a390 -> Node0x230a400;
	Node0x23095b8 -> Node0x230a470;
	Node0x2309d00 -> Node0x230a470;
	Node0x230a470 -> Node0x230a4e0;
	Node0x230a080 -> Node0x230a550;
	Node0x2309c88 -> Node0x230a5c0;
	Node0x2308648 -> Node0x230a5c0;
	Node0x2309c88 -> Node0x230a630;
	Node0x2308648 -> Node0x230a630;
	Node0x230a630 -> Node0x230a6a0;
	Node0x2309c28 -> Node0x230a710;
	Node0x230a710 -> Node0x230a780;
	Node0x230a080 -> Node0x230a780;
	Node0x230a780 -> Node0x230a7f0;
	Node0x230a160 -> Node0x230a7f0;
	Node0x230a7f0 -> Node0x230a860;
	Node0x230a0f0 -> Node0x230a860;
	Node0x230a860 -> Node0x230a8d0;
	Node0x230a1d0 -> Node0x230a8d0;
	Node0x230a8d0 -> Node0x230a940;
	Node0x230a320 -> Node0x230a940;
	Node0x230a940 -> Node0x230a9b0;
	Node0x230a4e0 -> Node0x230a9b0;
	Node0x230a9b0 -> Node0x230aa20;
	Node0x230a550 -> Node0x230aa20;
	Node0x230aa20 -> Node0x230aa90;
	Node0x230a5c0 -> Node0x230aa90;
	Node0x230aa90 -> Node0x230ab00;
	Node0x230a6a0 -> Node0x230ab00;
	Node0x230ab00 -> Node0x230ab70;
	Node0x2309f30 -> Node0x230ab70;
	Node0x230ab70 -> Node0x230abe0;
	Node0x230a400 -> Node0x230abe0;
	Node0x230a010 -> Node0x230ac50;
	Node0x230abe0 -> Node0x230ac50;
	Node0x230ac50 -> Node0x22a78b8;
	Node0x22a78b8 -> Node0x230ace0;
	Node0x2308398 -> Node0x230af88;
	Node0x2308228 -> Node0x230b0e8;
	Node0x2308068 -> Node0x230b1f8;
	Node0x2307b58 -> Node0x230b308;
}
