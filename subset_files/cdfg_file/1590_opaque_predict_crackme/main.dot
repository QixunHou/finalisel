digraph "DFG for'main' function" {
	Node0x1617da8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1617e28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1617eb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1617f18[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1618398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1618478[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1618578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1618638[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x16186e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1618948[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1618a08[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1618b68[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1618bc8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x161d110[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x161d318[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x161d478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x161d588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x161d648[shape=record, label="  ret i32 0"];
	Node0x1617da8 -> Node0x1617e28;
	Node0x1617e28 -> Node0x1617eb8;
	Node0x1617eb8 -> Node0x1617f18;
	Node0x1617f18 -> Node0x1618398;
	Node0x1618398 -> Node0x1618478;
	Node0x1618478 -> Node0x1618578;
	Node0x1618578 -> Node0x1618638;
	Node0x1618638 -> Node0x16186e8;
	Node0x16186e8 -> Node0x1618948;
	Node0x1618948 -> Node0x1618a08;
	Node0x1618a08 -> Node0x1618b68;
	Node0x1618b68 -> Node0x1618bc8;
	Node0x1618bc8 -> Node0x161d110;
	Node0x161d110 -> Node0x161d318;
	Node0x161d318 -> Node0x161d478;
	Node0x161d478 -> Node0x161d588;
	Node0x161d588 -> Node0x161d648;
edge [color=red]
	Node0x1617da8 -> Node0x1617f18;
	Node0x1617f18 -> Node0x1618398;
	Node0x1617e28 -> Node0x1618478;
	Node0x1618478 -> Node0x1618578;
	Node0x1617eb8 -> Node0x1618638;
	Node0x1618638 -> Node0x16186e8;
	Node0x1617da8 -> Node0x1618948;
	Node0x1617e28 -> Node0x1618948;
	Node0x1617eb8 -> Node0x1618948;
	Node0x1617da8 -> Node0x1618a08;
	Node0x1617e28 -> Node0x1618b68;
	Node0x1617eb8 -> Node0x1618bc8;
	Node0x1618a08 -> Node0x161d110;
	Node0x1618b68 -> Node0x161d110;
	Node0x1618bc8 -> Node0x161d110;
	Node0x1618638 -> Node0x161d318;
	Node0x1618478 -> Node0x161d478;
	Node0x1617f18 -> Node0x161d588;
}
