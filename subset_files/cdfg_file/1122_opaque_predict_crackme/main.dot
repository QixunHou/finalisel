digraph "DFG for'main' function" {
	Node0x1dc0c18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1dc0c98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1dc0d28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1dc0d88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1dc0e38[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1dc1268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1dc1348[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1dc1448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1dc1508[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1dc15b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1dc1678[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1dc1728[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1dbbb40[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1dc1928[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1dc2898[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1dc2f08[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1dc2f68[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1dc2fe0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1dc3050[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0x1dc30c0[shape=record, label="  %16 = add i32 %14, 2"];
	Node0x1dc3130[shape=record, label="  %17 = add i32 %16, %15"];
	Node0x1dc31a0[shape=record, label="  %18 = and i32 %12, %11"];
	Node0x1dc3210[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1dc3280[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x1dc32f0[shape=record, label="  %21 = xor i32 %12, -1"];
	Node0x1dc3360[shape=record, label="  %22 = or i32 %11, %21"];
	Node0x1dc33d0[shape=record, label="  %23 = and i32 %11, %21"];
	Node0x1dc3440[shape=record, label="  %24 = shl i32 %22, 1"];
	Node0x1dc34b0[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x1dc3520[shape=record, label="  %26 = shl i32 %23, 1"];
	Node0x1dc3590[shape=record, label="  %27 = and i32 %13, %10"];
	Node0x1dc3600[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x1dc3670[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x1dc36e0[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x1dc3750[shape=record, label="  %31 = and i32 %13, %30"];
	Node0x1dc37c0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x1dc3830[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0x1dc38a0[shape=record, label="  %34 = xor i32 %13, -1"];
	Node0x1dc3910[shape=record, label="  %35 = and i32 %10, %34"];
	Node0x1dc3980[shape=record, label="  %36 = mul i32 %35, 5"];
	Node0x1dc39f0[shape=record, label="  %37 = add i32 %31, %33"];
	Node0x1dc3a60[shape=record, label="  %38 = mul i32 %37, 3"];
	Node0x1dc3ad0[shape=record, label="  %39 = add i32 %11, 4"];
	Node0x1dc3b40[shape=record, label="  %40 = add i32 %39, %12"];
	Node0x1dc3bb0[shape=record, label="  %41 = sub i32 %40, %22"];
	Node0x1dc3c20[shape=record, label="  %42 = add i32 %41, %14"];
	Node0x1dc3c90[shape=record, label="  %43 = add i32 %42, %23"];
	Node0x1dc3d00[shape=record, label="  %44 = add i32 %43, %13"];
	Node0x1dc3d70[shape=record, label="  %45 = sub i32 %44, %26"];
	Node0x1dc3de0[shape=record, label="  %46 = sub i32 %45, %15"];
	Node0x1dc3e50[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x1dc3ec0[shape=record, label="  %48 = add i32 %47, %20"];
	Node0x1dc3f30[shape=record, label="  %49 = sub i32 %48, %25"];
	Node0x1dc3fa0[shape=record, label="  %50 = add i32 %49, %36"];
	Node0x1dc4010[shape=record, label="  %51 = sub i32 %50, %29"];
	Node0x1dc4080[shape=record, label="  %52 = add i32 %51, %38"];
	Node0x1dc40f0[shape=record, label="  %53 = icmp eq i32 %17, %52"];
	Node0x1d608b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1dc4180[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x1dc4428[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1dc4588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1dc4698[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1dc47a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1dc4868[shape=record, label="  ret i32 0"];
	Node0x1dc0c18 -> Node0x1dc0c98;
	Node0x1dc0c98 -> Node0x1dc0d28;
	Node0x1dc0d28 -> Node0x1dc0d88;
	Node0x1dc0d88 -> Node0x1dc0e38;
	Node0x1dc0e38 -> Node0x1dc1268;
	Node0x1dc1268 -> Node0x1dc1348;
	Node0x1dc1348 -> Node0x1dc1448;
	Node0x1dc1448 -> Node0x1dc1508;
	Node0x1dc1508 -> Node0x1dc15b8;
	Node0x1dc15b8 -> Node0x1dc1678;
	Node0x1dc1678 -> Node0x1dc1728;
	Node0x1dc1728 -> Node0x1dbbb40;
	Node0x1dbbb40 -> Node0x1dc1928;
	Node0x1dc1928 -> Node0x1dc2898;
	Node0x1dc2898 -> Node0x1dc2f08;
	Node0x1dc2f08 -> Node0x1dc2f68;
	Node0x1dc2f68 -> Node0x1dc2fe0;
	Node0x1dc2fe0 -> Node0x1dc3050;
	Node0x1dc3050 -> Node0x1dc30c0;
	Node0x1dc30c0 -> Node0x1dc3130;
	Node0x1dc3130 -> Node0x1dc31a0;
	Node0x1dc31a0 -> Node0x1dc3210;
	Node0x1dc3210 -> Node0x1dc3280;
	Node0x1dc3280 -> Node0x1dc32f0;
	Node0x1dc32f0 -> Node0x1dc3360;
	Node0x1dc3360 -> Node0x1dc33d0;
	Node0x1dc33d0 -> Node0x1dc3440;
	Node0x1dc3440 -> Node0x1dc34b0;
	Node0x1dc34b0 -> Node0x1dc3520;
	Node0x1dc3520 -> Node0x1dc3590;
	Node0x1dc3590 -> Node0x1dc3600;
	Node0x1dc3600 -> Node0x1dc3670;
	Node0x1dc3670 -> Node0x1dc36e0;
	Node0x1dc36e0 -> Node0x1dc3750;
	Node0x1dc3750 -> Node0x1dc37c0;
	Node0x1dc37c0 -> Node0x1dc3830;
	Node0x1dc3830 -> Node0x1dc38a0;
	Node0x1dc38a0 -> Node0x1dc3910;
	Node0x1dc3910 -> Node0x1dc3980;
	Node0x1dc3980 -> Node0x1dc39f0;
	Node0x1dc39f0 -> Node0x1dc3a60;
	Node0x1dc3a60 -> Node0x1dc3ad0;
	Node0x1dc3ad0 -> Node0x1dc3b40;
	Node0x1dc3b40 -> Node0x1dc3bb0;
	Node0x1dc3bb0 -> Node0x1dc3c20;
	Node0x1dc3c20 -> Node0x1dc3c90;
	Node0x1dc3c90 -> Node0x1dc3d00;
	Node0x1dc3d00 -> Node0x1dc3d70;
	Node0x1dc3d70 -> Node0x1dc3de0;
	Node0x1dc3de0 -> Node0x1dc3e50;
	Node0x1dc3e50 -> Node0x1dc3ec0;
	Node0x1dc3ec0 -> Node0x1dc3f30;
	Node0x1dc3f30 -> Node0x1dc3fa0;
	Node0x1dc3fa0 -> Node0x1dc4010;
	Node0x1dc4010 -> Node0x1dc4080;
	Node0x1dc4080 -> Node0x1dc40f0;
	Node0x1dc40f0 -> Node0x1d608b8;
	Node0x1d608b8 -> Node0x1dc4180;
	Node0x1dc4180 -> Node0x1dc4428;
	Node0x1dc4428 -> Node0x1dc4588;
	Node0x1dc4588 -> Node0x1dc4698;
	Node0x1dc4698 -> Node0x1dc47a8;
	Node0x1dc47a8 -> Node0x1dc4868;
edge [color=red]
	Node0x1dc0c18 -> Node0x1dc0e38;
	Node0x1dc0e38 -> Node0x1dc1268;
	Node0x1dc0c98 -> Node0x1dc1348;
	Node0x1dc1348 -> Node0x1dc1448;
	Node0x1dc0d28 -> Node0x1dc1508;
	Node0x1dc1508 -> Node0x1dc15b8;
	Node0x1dc0d88 -> Node0x1dc1678;
	Node0x1dc1678 -> Node0x1dc1728;
	Node0x1dc0c18 -> Node0x1dbbb40;
	Node0x1dc0c98 -> Node0x1dbbb40;
	Node0x1dc0d28 -> Node0x1dbbb40;
	Node0x1dc0d88 -> Node0x1dbbb40;
	Node0x1dc0c18 -> Node0x1dc1928;
	Node0x1dc0c98 -> Node0x1dc2898;
	Node0x1dc0d28 -> Node0x1dc2f08;
	Node0x1dc0d88 -> Node0x1dc2f68;
	Node0x1dc2f08 -> Node0x1dc2fe0;
	Node0x1dc2898 -> Node0x1dc2fe0;
	Node0x1dc2f68 -> Node0x1dc3050;
	Node0x1dc1928 -> Node0x1dc3050;
	Node0x1dc2fe0 -> Node0x1dc30c0;
	Node0x1dc30c0 -> Node0x1dc3130;
	Node0x1dc3050 -> Node0x1dc3130;
	Node0x1dc2f08 -> Node0x1dc31a0;
	Node0x1dc2898 -> Node0x1dc31a0;
	Node0x1dc31a0 -> Node0x1dc3210;
	Node0x1dc3210 -> Node0x1dc3280;
	Node0x1dc2f08 -> Node0x1dc32f0;
	Node0x1dc2898 -> Node0x1dc3360;
	Node0x1dc32f0 -> Node0x1dc3360;
	Node0x1dc2898 -> Node0x1dc33d0;
	Node0x1dc32f0 -> Node0x1dc33d0;
	Node0x1dc3360 -> Node0x1dc3440;
	Node0x1dc3440 -> Node0x1dc34b0;
	Node0x1dc33d0 -> Node0x1dc3520;
	Node0x1dc2f68 -> Node0x1dc3590;
	Node0x1dc1928 -> Node0x1dc3590;
	Node0x1dc3590 -> Node0x1dc3600;
	Node0x1dc3600 -> Node0x1dc3670;
	Node0x1dc1928 -> Node0x1dc36e0;
	Node0x1dc2f68 -> Node0x1dc3750;
	Node0x1dc36e0 -> Node0x1dc3750;
	Node0x1dc2f68 -> Node0x1dc37c0;
	Node0x1dc1928 -> Node0x1dc37c0;
	Node0x1dc37c0 -> Node0x1dc3830;
	Node0x1dc2f68 -> Node0x1dc38a0;
	Node0x1dc1928 -> Node0x1dc3910;
	Node0x1dc38a0 -> Node0x1dc3910;
	Node0x1dc3910 -> Node0x1dc3980;
	Node0x1dc3750 -> Node0x1dc39f0;
	Node0x1dc3830 -> Node0x1dc39f0;
	Node0x1dc39f0 -> Node0x1dc3a60;
	Node0x1dc2898 -> Node0x1dc3ad0;
	Node0x1dc3ad0 -> Node0x1dc3b40;
	Node0x1dc2f08 -> Node0x1dc3b40;
	Node0x1dc3b40 -> Node0x1dc3bb0;
	Node0x1dc3360 -> Node0x1dc3bb0;
	Node0x1dc3bb0 -> Node0x1dc3c20;
	Node0x1dc2fe0 -> Node0x1dc3c20;
	Node0x1dc3c20 -> Node0x1dc3c90;
	Node0x1dc33d0 -> Node0x1dc3c90;
	Node0x1dc3c90 -> Node0x1dc3d00;
	Node0x1dc2f68 -> Node0x1dc3d00;
	Node0x1dc3d00 -> Node0x1dc3d70;
	Node0x1dc3520 -> Node0x1dc3d70;
	Node0x1dc3d70 -> Node0x1dc3de0;
	Node0x1dc3050 -> Node0x1dc3de0;
	Node0x1dc3de0 -> Node0x1dc3e50;
	Node0x1dc3750 -> Node0x1dc3e50;
	Node0x1dc3e50 -> Node0x1dc3ec0;
	Node0x1dc3280 -> Node0x1dc3ec0;
	Node0x1dc3ec0 -> Node0x1dc3f30;
	Node0x1dc34b0 -> Node0x1dc3f30;
	Node0x1dc3f30 -> Node0x1dc3fa0;
	Node0x1dc3980 -> Node0x1dc3fa0;
	Node0x1dc3fa0 -> Node0x1dc4010;
	Node0x1dc3670 -> Node0x1dc4010;
	Node0x1dc4010 -> Node0x1dc4080;
	Node0x1dc3a60 -> Node0x1dc4080;
	Node0x1dc3130 -> Node0x1dc40f0;
	Node0x1dc4080 -> Node0x1dc40f0;
	Node0x1dc40f0 -> Node0x1d608b8;
	Node0x1d608b8 -> Node0x1dc4180;
	Node0x1dc1678 -> Node0x1dc4428;
	Node0x1dc1508 -> Node0x1dc4588;
	Node0x1dc1348 -> Node0x1dc4698;
	Node0x1dc0e38 -> Node0x1dc47a8;
}
