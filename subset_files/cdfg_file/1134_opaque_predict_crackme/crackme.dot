digraph "DFG for'crackme' function" {
	Node0x1aef710[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x1aefd90[shape=record, label="  %6 = mul i32 %5, -2"];
	Node0x1aefe00[shape=record, label="  %7 = add i32 %6, %1"];
	Node0x1aefea0[shape=record, label="  %8 = xor i32 %3, -1"];
	Node0x1aeff10[shape=record, label="  %9 = xor i32 %3, %0"];
	Node0x1aeff80[shape=record, label="  %10 = sub i32 %7, %9"];
	Node0x1aefff0[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x1af0060[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x1af00d0[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x1af0140[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0x1af01b0[shape=record, label="  %15 = xor i32 %5, -1"];
	Node0x1af0250[shape=record, label="  %16 = xor i32 %1, 2147483647"];
	Node0x1af02c0[shape=record, label="  %17 = and i32 %16, %2"];
	Node0x1af0360[shape=record, label="  %18 = mul i32 %13, 3"];
	Node0x1af03d0[shape=record, label="  %19 = xor i32 %0, -1"];
	Node0x1af0470[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x1af04e0[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x1af0550[shape=record, label="  %22 = and i32 %19, %3"];
	Node0x1af05c0[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x1af0630[shape=record, label="  %24 = or i32 %3, %0"];
	Node0x1af06a0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x1af0710[shape=record, label="  %26 = and i32 %8, %0"];
	Node0x1af0780[shape=record, label="  %27 = shl i32 %22, 3"];
	Node0x1af07f0[shape=record, label="  %28 = shl i32 %21, 1"];
	Node0x1af0860[shape=record, label="  %29 = add i32 %17, %0"];
	Node0x1af08d0[shape=record, label="  %30 = add i32 %29, %12"];
	Node0x1af0940[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x1af09b0[shape=record, label="  %32 = sub i32 %15, %9"];
	Node0x1af0c60[shape=record, label="  %33 = mul i32 %32, 5"];
	Node0x1af0d00[shape=record, label="  %34 = sub i32 6, %20"];
	Node0x1af0d70[shape=record, label="  %35 = add i32 %34, %12"];
	Node0x1af0de0[shape=record, label="  %36 = add i32 %35, %13"];
	Node0x1af0e50[shape=record, label="  %37 = add i32 %36, %14"];
	Node0x1af0ec0[shape=record, label="  %38 = sub i32 %37, %3"];
	Node0x1af0f30[shape=record, label="  %39 = add i32 %38, %8"];
	Node0x1af0fa0[shape=record, label="  %40 = add i32 %39, %18"];
	Node0x1af1010[shape=record, label="  %41 = add i32 %40, %21"];
	Node0x1af1080[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x1af10f0[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x1af1160[shape=record, label="  %44 = add i32 %43, %26"];
	Node0x1af11d0[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x1af1240[shape=record, label="  %46 = sub i32 %45, %28"];
	Node0x1af12b0[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x1af1320[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x1af1390[shape=record, label="  %49 = icmp eq i32 %10, %48"];
	Node0x1a90268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1af1830[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x1af1880[shape=record, label="  ret void"];
	Node0x1aef710 -> Node0x1aefd90;
	Node0x1aefd90 -> Node0x1aefe00;
	Node0x1aefe00 -> Node0x1aefea0;
	Node0x1aefea0 -> Node0x1aeff10;
	Node0x1aeff10 -> Node0x1aeff80;
	Node0x1aeff80 -> Node0x1aefff0;
	Node0x1aefff0 -> Node0x1af0060;
	Node0x1af0060 -> Node0x1af00d0;
	Node0x1af00d0 -> Node0x1af0140;
	Node0x1af0140 -> Node0x1af01b0;
	Node0x1af01b0 -> Node0x1af0250;
	Node0x1af0250 -> Node0x1af02c0;
	Node0x1af02c0 -> Node0x1af0360;
	Node0x1af0360 -> Node0x1af03d0;
	Node0x1af03d0 -> Node0x1af0470;
	Node0x1af0470 -> Node0x1af04e0;
	Node0x1af04e0 -> Node0x1af0550;
	Node0x1af0550 -> Node0x1af05c0;
	Node0x1af05c0 -> Node0x1af0630;
	Node0x1af0630 -> Node0x1af06a0;
	Node0x1af06a0 -> Node0x1af0710;
	Node0x1af0710 -> Node0x1af0780;
	Node0x1af0780 -> Node0x1af07f0;
	Node0x1af07f0 -> Node0x1af0860;
	Node0x1af0860 -> Node0x1af08d0;
	Node0x1af08d0 -> Node0x1af0940;
	Node0x1af0940 -> Node0x1af09b0;
	Node0x1af09b0 -> Node0x1af0c60;
	Node0x1af0c60 -> Node0x1af0d00;
	Node0x1af0d00 -> Node0x1af0d70;
	Node0x1af0d70 -> Node0x1af0de0;
	Node0x1af0de0 -> Node0x1af0e50;
	Node0x1af0e50 -> Node0x1af0ec0;
	Node0x1af0ec0 -> Node0x1af0f30;
	Node0x1af0f30 -> Node0x1af0fa0;
	Node0x1af0fa0 -> Node0x1af1010;
	Node0x1af1010 -> Node0x1af1080;
	Node0x1af1080 -> Node0x1af10f0;
	Node0x1af10f0 -> Node0x1af1160;
	Node0x1af1160 -> Node0x1af11d0;
	Node0x1af11d0 -> Node0x1af1240;
	Node0x1af1240 -> Node0x1af12b0;
	Node0x1af12b0 -> Node0x1af1320;
	Node0x1af1320 -> Node0x1af1390;
	Node0x1af1390 -> Node0x1a90268;
	Node0x1a90268 -> Node0x1af1830;
	Node0x1af1830 -> Node0x1af1880;
edge [color=red]
	Node0x1aef710 -> Node0x1aefd90;
	Node0x1aefd90 -> Node0x1aefe00;
	Node0x1aefe00 -> Node0x1aeff80;
	Node0x1aeff10 -> Node0x1aeff80;
	Node0x1aefff0 -> Node0x1af0060;
	Node0x1aef710 -> Node0x1af01b0;
	Node0x1af0250 -> Node0x1af02c0;
	Node0x1af00d0 -> Node0x1af0360;
	Node0x1af03d0 -> Node0x1af0470;
	Node0x1af03d0 -> Node0x1af0550;
	Node0x1af0550 -> Node0x1af05c0;
	Node0x1af0630 -> Node0x1af06a0;
	Node0x1aefea0 -> Node0x1af0710;
	Node0x1af0550 -> Node0x1af0780;
	Node0x1af04e0 -> Node0x1af07f0;
	Node0x1af02c0 -> Node0x1af0860;
	Node0x1af0860 -> Node0x1af08d0;
	Node0x1af0060 -> Node0x1af08d0;
	Node0x1af08d0 -> Node0x1af0940;
	Node0x1af01b0 -> Node0x1af09b0;
	Node0x1aeff10 -> Node0x1af09b0;
	Node0x1af09b0 -> Node0x1af0c60;
	Node0x1af0470 -> Node0x1af0d00;
	Node0x1af0d00 -> Node0x1af0d70;
	Node0x1af0060 -> Node0x1af0d70;
	Node0x1af0d70 -> Node0x1af0de0;
	Node0x1af00d0 -> Node0x1af0de0;
	Node0x1af0de0 -> Node0x1af0e50;
	Node0x1af0140 -> Node0x1af0e50;
	Node0x1af0e50 -> Node0x1af0ec0;
	Node0x1af0ec0 -> Node0x1af0f30;
	Node0x1aefea0 -> Node0x1af0f30;
	Node0x1af0f30 -> Node0x1af0fa0;
	Node0x1af0360 -> Node0x1af0fa0;
	Node0x1af0fa0 -> Node0x1af1010;
	Node0x1af04e0 -> Node0x1af1010;
	Node0x1af1010 -> Node0x1af1080;
	Node0x1af05c0 -> Node0x1af1080;
	Node0x1af1080 -> Node0x1af10f0;
	Node0x1af06a0 -> Node0x1af10f0;
	Node0x1af10f0 -> Node0x1af1160;
	Node0x1af0710 -> Node0x1af1160;
	Node0x1af1160 -> Node0x1af11d0;
	Node0x1af0780 -> Node0x1af11d0;
	Node0x1af11d0 -> Node0x1af1240;
	Node0x1af07f0 -> Node0x1af1240;
	Node0x1af1240 -> Node0x1af12b0;
	Node0x1af0940 -> Node0x1af12b0;
	Node0x1af12b0 -> Node0x1af1320;
	Node0x1af0c60 -> Node0x1af1320;
	Node0x1aeff80 -> Node0x1af1390;
	Node0x1af1320 -> Node0x1af1390;
	Node0x1af1390 -> Node0x1a90268;
	Node0x1a90268 -> Node0x1af1830;
}
