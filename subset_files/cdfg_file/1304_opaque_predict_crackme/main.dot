digraph "DFG for'main' function" {
	Node0x1add778[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1add7f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1add888[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1addce8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1adddc8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1addee8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ade120[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1ade1d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1adf148[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1adf7d0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1adf840[shape=record, label="  %9 = or i32 %7, %6"];
	Node0x1adf8b0[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0x1adf920[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x1adf990[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1adfa00[shape=record, label="  %13 = shl i32 %9, 1"];
	Node0x1adfa70[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1adfae0[shape=record, label="  %15 = xor i32 %6, -1"];
	Node0x1adfb50[shape=record, label="  %16 = and i32 %7, %15"];
	Node0x1adfbc0[shape=record, label="  %17 = mul i32 %16, -3"];
	Node0x1adfc30[shape=record, label="  %18 = add i32 %7, 1"];
	Node0x1adfca0[shape=record, label="  %19 = sub i32 %18, %6"];
	Node0x1adfd10[shape=record, label="  %20 = add i32 %19, %12"];
	Node0x1adfd80[shape=record, label="  %21 = add i32 %20, %17"];
	Node0x1adfdf0[shape=record, label="  %22 = add i32 %21, %14"];
	Node0x1adfe60[shape=record, label="  %23 = icmp eq i32 %10, %22"];
	Node0x1a7e9d8[shape=record, label="  %24 = select i1 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1adfef0[shape=record, label="  %25 = call i32 @puts(i8* nonnull dereferenceable(1) %24) #5"];
	Node0x1ae0148[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ae02a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ae0368[shape=record, label="  ret i32 0"];
	Node0x1add778 -> Node0x1add7f8;
	Node0x1add7f8 -> Node0x1add888;
	Node0x1add888 -> Node0x1addce8;
	Node0x1addce8 -> Node0x1adddc8;
	Node0x1adddc8 -> Node0x1addee8;
	Node0x1addee8 -> Node0x1ade120;
	Node0x1ade120 -> Node0x1ade1d8;
	Node0x1ade1d8 -> Node0x1adf148;
	Node0x1adf148 -> Node0x1adf7d0;
	Node0x1adf7d0 -> Node0x1adf840;
	Node0x1adf840 -> Node0x1adf8b0;
	Node0x1adf8b0 -> Node0x1adf920;
	Node0x1adf920 -> Node0x1adf990;
	Node0x1adf990 -> Node0x1adfa00;
	Node0x1adfa00 -> Node0x1adfa70;
	Node0x1adfa70 -> Node0x1adfae0;
	Node0x1adfae0 -> Node0x1adfb50;
	Node0x1adfb50 -> Node0x1adfbc0;
	Node0x1adfbc0 -> Node0x1adfc30;
	Node0x1adfc30 -> Node0x1adfca0;
	Node0x1adfca0 -> Node0x1adfd10;
	Node0x1adfd10 -> Node0x1adfd80;
	Node0x1adfd80 -> Node0x1adfdf0;
	Node0x1adfdf0 -> Node0x1adfe60;
	Node0x1adfe60 -> Node0x1a7e9d8;
	Node0x1a7e9d8 -> Node0x1adfef0;
	Node0x1adfef0 -> Node0x1ae0148;
	Node0x1ae0148 -> Node0x1ae02a8;
	Node0x1ae02a8 -> Node0x1ae0368;
edge [color=red]
	Node0x1add778 -> Node0x1add888;
	Node0x1add888 -> Node0x1addce8;
	Node0x1add7f8 -> Node0x1adddc8;
	Node0x1adddc8 -> Node0x1addee8;
	Node0x1add778 -> Node0x1ade120;
	Node0x1add7f8 -> Node0x1ade120;
	Node0x1add778 -> Node0x1ade1d8;
	Node0x1add7f8 -> Node0x1adf148;
	Node0x1adf148 -> Node0x1adf7d0;
	Node0x1adf148 -> Node0x1adf840;
	Node0x1ade1d8 -> Node0x1adf840;
	Node0x1adf7d0 -> Node0x1adf8b0;
	Node0x1adf840 -> Node0x1adf8b0;
	Node0x1adf148 -> Node0x1adf920;
	Node0x1ade1d8 -> Node0x1adf920;
	Node0x1adf920 -> Node0x1adf990;
	Node0x1adf840 -> Node0x1adfa00;
	Node0x1adfa00 -> Node0x1adfa70;
	Node0x1ade1d8 -> Node0x1adfae0;
	Node0x1adf148 -> Node0x1adfb50;
	Node0x1adfae0 -> Node0x1adfb50;
	Node0x1adfb50 -> Node0x1adfbc0;
	Node0x1adf148 -> Node0x1adfc30;
	Node0x1adfc30 -> Node0x1adfca0;
	Node0x1ade1d8 -> Node0x1adfca0;
	Node0x1adfca0 -> Node0x1adfd10;
	Node0x1adf990 -> Node0x1adfd10;
	Node0x1adfd10 -> Node0x1adfd80;
	Node0x1adfbc0 -> Node0x1adfd80;
	Node0x1adfd80 -> Node0x1adfdf0;
	Node0x1adfa70 -> Node0x1adfdf0;
	Node0x1adf8b0 -> Node0x1adfe60;
	Node0x1adfdf0 -> Node0x1adfe60;
	Node0x1adfe60 -> Node0x1a7e9d8;
	Node0x1a7e9d8 -> Node0x1adfef0;
	Node0x1adddc8 -> Node0x1ae0148;
	Node0x1add888 -> Node0x1ae02a8;
}
