digraph "DFG for'crackme' function" {
	Node0x6a3a30[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x6a3aa0[shape=record, label="  %4 = or i32 %1, %0"];
	Node0x6a3b60[shape=record, label="  %5 = or i32 %3, %0"];
	Node0x6a3bd0[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x6a3c40[shape=record, label="  %7 = and i32 %3, %0"];
	Node0x6a3cb0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x6a3d20[shape=record, label="  %9 = xor i32 %4, -1"];
	Node0x6a3dc0[shape=record, label="  %10 = mul i32 %9, -3"];
	Node0x6a3e60[shape=record, label="  %11 = xor i32 %6, -2"];
	Node0x6a3ed0[shape=record, label="  %12 = mul i32 %1, -2"];
	Node0x6a3f40[shape=record, label="  %13 = add i32 %9, %8"];
	Node0x6a3fb0[shape=record, label="  %14 = sub i32 %13, %7"];
	Node0x6a4020[shape=record, label="  %15 = add i32 %14, %12"];
	Node0x6a4090[shape=record, label="  %16 = add i32 %15, %6"];
	Node0x6a4100[shape=record, label="  %17 = add i32 %16, %10"];
	Node0x6a4170[shape=record, label="  %18 = add i32 %17, %11"];
	Node0x6a41e0[shape=record, label="  %19 = icmp eq i32 %18, -1"];
	Node0x644268[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6a4680[shape=record, label="  %21 = tail call i32 @puts(i8* nonnull dereferenceable(1) %20)"];
	Node0x6a46d0[shape=record, label="  ret void"];
	Node0x6a3a30 -> Node0x6a3aa0;
	Node0x6a3aa0 -> Node0x6a3b60;
	Node0x6a3b60 -> Node0x6a3bd0;
	Node0x6a3bd0 -> Node0x6a3c40;
	Node0x6a3c40 -> Node0x6a3cb0;
	Node0x6a3cb0 -> Node0x6a3d20;
	Node0x6a3d20 -> Node0x6a3dc0;
	Node0x6a3dc0 -> Node0x6a3e60;
	Node0x6a3e60 -> Node0x6a3ed0;
	Node0x6a3ed0 -> Node0x6a3f40;
	Node0x6a3f40 -> Node0x6a3fb0;
	Node0x6a3fb0 -> Node0x6a4020;
	Node0x6a4020 -> Node0x6a4090;
	Node0x6a4090 -> Node0x6a4100;
	Node0x6a4100 -> Node0x6a4170;
	Node0x6a4170 -> Node0x6a41e0;
	Node0x6a41e0 -> Node0x644268;
	Node0x644268 -> Node0x6a4680;
	Node0x6a4680 -> Node0x6a46d0;
edge [color=red]
	Node0x6a3a30 -> Node0x6a3b60;
	Node0x6a3b60 -> Node0x6a3bd0;
	Node0x6a3a30 -> Node0x6a3c40;
	Node0x6a3c40 -> Node0x6a3cb0;
	Node0x6a3aa0 -> Node0x6a3d20;
	Node0x6a3d20 -> Node0x6a3dc0;
	Node0x6a3bd0 -> Node0x6a3e60;
	Node0x6a3d20 -> Node0x6a3f40;
	Node0x6a3cb0 -> Node0x6a3f40;
	Node0x6a3f40 -> Node0x6a3fb0;
	Node0x6a3c40 -> Node0x6a3fb0;
	Node0x6a3fb0 -> Node0x6a4020;
	Node0x6a3ed0 -> Node0x6a4020;
	Node0x6a4020 -> Node0x6a4090;
	Node0x6a3bd0 -> Node0x6a4090;
	Node0x6a4090 -> Node0x6a4100;
	Node0x6a3dc0 -> Node0x6a4100;
	Node0x6a4100 -> Node0x6a4170;
	Node0x6a3e60 -> Node0x6a4170;
	Node0x6a4170 -> Node0x6a41e0;
	Node0x6a41e0 -> Node0x644268;
	Node0x644268 -> Node0x6a4680;
}
