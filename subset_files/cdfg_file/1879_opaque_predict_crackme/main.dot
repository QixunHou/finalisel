digraph "DFG for'main' function" {
	Node0x85dc68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x85dce8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x85dd78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x85ddd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x85de88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x85e2b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x85e398[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x85e498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x85e558[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x85e608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x85e6c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x85e778[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x8587a0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x85e978[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x85f8e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x85ff58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x85ffb8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x8600c8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x860328[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x860488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x860598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8606a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x860768[shape=record, label="  ret i32 0"];
	Node0x85dc68 -> Node0x85dce8;
	Node0x85dce8 -> Node0x85dd78;
	Node0x85dd78 -> Node0x85ddd8;
	Node0x85ddd8 -> Node0x85de88;
	Node0x85de88 -> Node0x85e2b8;
	Node0x85e2b8 -> Node0x85e398;
	Node0x85e398 -> Node0x85e498;
	Node0x85e498 -> Node0x85e558;
	Node0x85e558 -> Node0x85e608;
	Node0x85e608 -> Node0x85e6c8;
	Node0x85e6c8 -> Node0x85e778;
	Node0x85e778 -> Node0x8587a0;
	Node0x8587a0 -> Node0x85e978;
	Node0x85e978 -> Node0x85f8e8;
	Node0x85f8e8 -> Node0x85ff58;
	Node0x85ff58 -> Node0x85ffb8;
	Node0x85ffb8 -> Node0x8600c8;
	Node0x8600c8 -> Node0x860328;
	Node0x860328 -> Node0x860488;
	Node0x860488 -> Node0x860598;
	Node0x860598 -> Node0x8606a8;
	Node0x8606a8 -> Node0x860768;
edge [color=red]
	Node0x85dc68 -> Node0x85de88;
	Node0x85de88 -> Node0x85e2b8;
	Node0x85dce8 -> Node0x85e398;
	Node0x85e398 -> Node0x85e498;
	Node0x85dd78 -> Node0x85e558;
	Node0x85e558 -> Node0x85e608;
	Node0x85ddd8 -> Node0x85e6c8;
	Node0x85e6c8 -> Node0x85e778;
	Node0x85dc68 -> Node0x8587a0;
	Node0x85dce8 -> Node0x8587a0;
	Node0x85dd78 -> Node0x8587a0;
	Node0x85ddd8 -> Node0x8587a0;
	Node0x85dc68 -> Node0x85e978;
	Node0x85dce8 -> Node0x85f8e8;
	Node0x85dd78 -> Node0x85ff58;
	Node0x85ddd8 -> Node0x85ffb8;
	Node0x85e978 -> Node0x8600c8;
	Node0x85f8e8 -> Node0x8600c8;
	Node0x85ff58 -> Node0x8600c8;
	Node0x85ffb8 -> Node0x8600c8;
	Node0x85e6c8 -> Node0x860328;
	Node0x85e558 -> Node0x860488;
	Node0x85e398 -> Node0x860598;
	Node0x85de88 -> Node0x8606a8;
}
