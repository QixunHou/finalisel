digraph "DFG for'main' function" {
	Node0xf70548[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf705c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf70658[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf706b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xf70b38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf70c18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xf70d18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf70dd8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xf70e88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf710e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xf711a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf71308[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf71368[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf77d90[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xf77f98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf780f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf78208[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf782c8[shape=record, label="  ret i32 0"];
	Node0xf70548 -> Node0xf705c8;
	Node0xf705c8 -> Node0xf70658;
	Node0xf70658 -> Node0xf706b8;
	Node0xf706b8 -> Node0xf70b38;
	Node0xf70b38 -> Node0xf70c18;
	Node0xf70c18 -> Node0xf70d18;
	Node0xf70d18 -> Node0xf70dd8;
	Node0xf70dd8 -> Node0xf70e88;
	Node0xf70e88 -> Node0xf710e8;
	Node0xf710e8 -> Node0xf711a8;
	Node0xf711a8 -> Node0xf71308;
	Node0xf71308 -> Node0xf71368;
	Node0xf71368 -> Node0xf77d90;
	Node0xf77d90 -> Node0xf77f98;
	Node0xf77f98 -> Node0xf780f8;
	Node0xf780f8 -> Node0xf78208;
	Node0xf78208 -> Node0xf782c8;
edge [color=red]
	Node0xf70548 -> Node0xf706b8;
	Node0xf706b8 -> Node0xf70b38;
	Node0xf705c8 -> Node0xf70c18;
	Node0xf70c18 -> Node0xf70d18;
	Node0xf70658 -> Node0xf70dd8;
	Node0xf70dd8 -> Node0xf70e88;
	Node0xf70548 -> Node0xf710e8;
	Node0xf705c8 -> Node0xf710e8;
	Node0xf70658 -> Node0xf710e8;
	Node0xf70548 -> Node0xf711a8;
	Node0xf705c8 -> Node0xf71308;
	Node0xf70658 -> Node0xf71368;
	Node0xf711a8 -> Node0xf77d90;
	Node0xf71308 -> Node0xf77d90;
	Node0xf71368 -> Node0xf77d90;
	Node0xf70dd8 -> Node0xf77f98;
	Node0xf70c18 -> Node0xf780f8;
	Node0xf706b8 -> Node0xf78208;
}
