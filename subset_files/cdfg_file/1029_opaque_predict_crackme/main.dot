digraph "DFG for'main' function" {
	Node0x1612b28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1612ba8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1612c38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1612c98[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1613118[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16131f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x16132f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x16133b8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1613468[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16136c8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1613788[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x16146f8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1614d68[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1614e60[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1615068[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16151c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x16152d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1615398[shape=record, label="  ret i32 0"];
	Node0x1612b28 -> Node0x1612ba8;
	Node0x1612ba8 -> Node0x1612c38;
	Node0x1612c38 -> Node0x1612c98;
	Node0x1612c98 -> Node0x1613118;
	Node0x1613118 -> Node0x16131f8;
	Node0x16131f8 -> Node0x16132f8;
	Node0x16132f8 -> Node0x16133b8;
	Node0x16133b8 -> Node0x1613468;
	Node0x1613468 -> Node0x16136c8;
	Node0x16136c8 -> Node0x1613788;
	Node0x1613788 -> Node0x16146f8;
	Node0x16146f8 -> Node0x1614d68;
	Node0x1614d68 -> Node0x1614e60;
	Node0x1614e60 -> Node0x1615068;
	Node0x1615068 -> Node0x16151c8;
	Node0x16151c8 -> Node0x16152d8;
	Node0x16152d8 -> Node0x1615398;
edge [color=red]
	Node0x1612b28 -> Node0x1612c98;
	Node0x1612c98 -> Node0x1613118;
	Node0x1612ba8 -> Node0x16131f8;
	Node0x16131f8 -> Node0x16132f8;
	Node0x1612c38 -> Node0x16133b8;
	Node0x16133b8 -> Node0x1613468;
	Node0x1612b28 -> Node0x16136c8;
	Node0x1612ba8 -> Node0x16136c8;
	Node0x1612c38 -> Node0x16136c8;
	Node0x1612b28 -> Node0x1613788;
	Node0x1612ba8 -> Node0x16146f8;
	Node0x1612c38 -> Node0x1614d68;
	Node0x1613788 -> Node0x1614e60;
	Node0x16146f8 -> Node0x1614e60;
	Node0x1614d68 -> Node0x1614e60;
	Node0x16133b8 -> Node0x1615068;
	Node0x16131f8 -> Node0x16151c8;
	Node0x1612c98 -> Node0x16152d8;
}
