digraph "DFG for'main' function" {
	Node0x22839d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2283a58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2283ae8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x2283f48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2284028[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x2284148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2284380[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x2284438[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x22853a8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2285a30[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x2285aa0[shape=record, label="  %9 = add i32 %7, 1"];
	Node0x2285b10[shape=record, label="  %10 = and i32 %7, %6"];
	Node0x2285b80[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x2285bf0[shape=record, label="  %12 = or i32 %7, %6"];
	Node0x2285c60[shape=record, label="  %13 = and i32 %6, %8"];
	Node0x2285cd0[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x2285d40[shape=record, label="  %15 = shl i32 %12, 1"];
	Node0x2285db0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x2285e20[shape=record, label="  %17 = sub i32 %13, %14"];
	Node0x2285e90[shape=record, label="  %18 = mul i32 %17, 3"];
	Node0x2285f00[shape=record, label="  %19 = shl i32 %6, 1"];
	Node0x2285f70[shape=record, label="  %20 = sub i32 %7, %19"];
	Node0x2285fe0[shape=record, label="  %21 = add i32 %20, %11"];
	Node0x2286050[shape=record, label="  %22 = add i32 %21, %12"];
	Node0x22860c0[shape=record, label="  %23 = sub i32 %22, %13"];
	Node0x2286130[shape=record, label="  %24 = sub i32 %23, %16"];
	Node0x22861a0[shape=record, label="  %25 = add i32 %24, %18"];
	Node0x2286210[shape=record, label="  %26 = icmp eq i32 %9, %25"];
	Node0x22249d8[shape=record, label="  %27 = select i1 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22862a0[shape=record, label="  %28 = call i32 @puts(i8* nonnull dereferenceable(1) %27) #5"];
	Node0x22864f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2286658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2286718[shape=record, label="  ret i32 0"];
	Node0x22839d8 -> Node0x2283a58;
	Node0x2283a58 -> Node0x2283ae8;
	Node0x2283ae8 -> Node0x2283f48;
	Node0x2283f48 -> Node0x2284028;
	Node0x2284028 -> Node0x2284148;
	Node0x2284148 -> Node0x2284380;
	Node0x2284380 -> Node0x2284438;
	Node0x2284438 -> Node0x22853a8;
	Node0x22853a8 -> Node0x2285a30;
	Node0x2285a30 -> Node0x2285aa0;
	Node0x2285aa0 -> Node0x2285b10;
	Node0x2285b10 -> Node0x2285b80;
	Node0x2285b80 -> Node0x2285bf0;
	Node0x2285bf0 -> Node0x2285c60;
	Node0x2285c60 -> Node0x2285cd0;
	Node0x2285cd0 -> Node0x2285d40;
	Node0x2285d40 -> Node0x2285db0;
	Node0x2285db0 -> Node0x2285e20;
	Node0x2285e20 -> Node0x2285e90;
	Node0x2285e90 -> Node0x2285f00;
	Node0x2285f00 -> Node0x2285f70;
	Node0x2285f70 -> Node0x2285fe0;
	Node0x2285fe0 -> Node0x2286050;
	Node0x2286050 -> Node0x22860c0;
	Node0x22860c0 -> Node0x2286130;
	Node0x2286130 -> Node0x22861a0;
	Node0x22861a0 -> Node0x2286210;
	Node0x2286210 -> Node0x22249d8;
	Node0x22249d8 -> Node0x22862a0;
	Node0x22862a0 -> Node0x22864f8;
	Node0x22864f8 -> Node0x2286658;
	Node0x2286658 -> Node0x2286718;
edge [color=red]
	Node0x22839d8 -> Node0x2283ae8;
	Node0x2283ae8 -> Node0x2283f48;
	Node0x2283a58 -> Node0x2284028;
	Node0x2284028 -> Node0x2284148;
	Node0x22839d8 -> Node0x2284380;
	Node0x2283a58 -> Node0x2284380;
	Node0x22839d8 -> Node0x2284438;
	Node0x2283a58 -> Node0x22853a8;
	Node0x22853a8 -> Node0x2285a30;
	Node0x22853a8 -> Node0x2285aa0;
	Node0x22853a8 -> Node0x2285b10;
	Node0x2284438 -> Node0x2285b10;
	Node0x2285b10 -> Node0x2285b80;
	Node0x22853a8 -> Node0x2285bf0;
	Node0x2284438 -> Node0x2285bf0;
	Node0x2284438 -> Node0x2285c60;
	Node0x2285a30 -> Node0x2285c60;
	Node0x22853a8 -> Node0x2285cd0;
	Node0x2284438 -> Node0x2285cd0;
	Node0x2285bf0 -> Node0x2285d40;
	Node0x2285d40 -> Node0x2285db0;
	Node0x2285c60 -> Node0x2285e20;
	Node0x2285cd0 -> Node0x2285e20;
	Node0x2285e20 -> Node0x2285e90;
	Node0x2284438 -> Node0x2285f00;
	Node0x22853a8 -> Node0x2285f70;
	Node0x2285f00 -> Node0x2285f70;
	Node0x2285f70 -> Node0x2285fe0;
	Node0x2285b80 -> Node0x2285fe0;
	Node0x2285fe0 -> Node0x2286050;
	Node0x2285bf0 -> Node0x2286050;
	Node0x2286050 -> Node0x22860c0;
	Node0x2285c60 -> Node0x22860c0;
	Node0x22860c0 -> Node0x2286130;
	Node0x2285db0 -> Node0x2286130;
	Node0x2286130 -> Node0x22861a0;
	Node0x2285e90 -> Node0x22861a0;
	Node0x2285aa0 -> Node0x2286210;
	Node0x22861a0 -> Node0x2286210;
	Node0x2286210 -> Node0x22249d8;
	Node0x22249d8 -> Node0x22862a0;
	Node0x2284028 -> Node0x22864f8;
	Node0x2283ae8 -> Node0x2286658;
}
