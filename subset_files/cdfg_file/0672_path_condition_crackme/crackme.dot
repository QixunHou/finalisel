digraph "DFG for'crackme' function" {
	Node0x11c7d70[shape=record, label="  %5 = mul i32 %2, -2"];
	Node0x11c7de0[shape=record, label="  %6 = xor i32 %3, %0"];
	Node0x11c7e50[shape=record, label="  %7 = sub i32 %5, %6"];
	Node0x11c7ef0[shape=record, label="  %8 = xor i32 %3, -1"];
	Node0x11c7f60[shape=record, label="  %9 = or i32 %8, %0"];
	Node0x11c7fd0[shape=record, label="  %10 = add i32 %7, %9"];
	Node0x11c8070[shape=record, label="  %11 = shl i32 %1, 1"];
	Node0x11c80e0[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x11c8150[shape=record, label="  %13 = xor i32 %2, %1"];
	Node0x11c81c0[shape=record, label="  %14 = xor i32 %2, -1"];
	Node0x11c8230[shape=record, label="  %15 = and i32 %14, %1"];
	Node0x11c82a0[shape=record, label="  %16 = and i32 %2, %1"];
	Node0x11c8310[shape=record, label="  %17 = or i32 %2, %1"];
	Node0x11c83b0[shape=record, label="  %18 = mul i32 %17, 5"];
	Node0x11c8420[shape=record, label="  %19 = or i32 %14, %1"];
	Node0x11c8490[shape=record, label="  %20 = shl i32 %17, 1"];
	Node0x11c8500[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x11c8570[shape=record, label="  %22 = xor i32 %19, -1"];
	Node0x11c85e0[shape=record, label="  %23 = xor i32 %6, -1"];
	Node0x11c8680[shape=record, label="  %24 = shl i32 %3, 2"];
	Node0x11c86f0[shape=record, label="  %25 = and i32 %3, %0"];
	Node0x11c8760[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x11c87d0[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x11c8840[shape=record, label="  %28 = or i32 %3, %0"];
	Node0x11c88e0[shape=record, label="  %29 = xor i32 %3, 2147483647"];
	Node0x11c8950[shape=record, label="  %30 = and i32 %29, %0"];
	Node0x11c89c0[shape=record, label="  %31 = add i32 %22, %1"];
	Node0x11c8a60[shape=record, label="  %32 = mul i32 %31, -9"];
	Node0x11c8d10[shape=record, label="  %33 = mul i32 %3, -3"];
	Node0x11c8d80[shape=record, label="  %34 = add i32 %13, %19"];
	Node0x11c8df0[shape=record, label="  %35 = add i32 %34, %30"];
	Node0x11c8e60[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x11c8ed0[shape=record, label="  %37 = sub i32 1, %0"];
	Node0x11c8f40[shape=record, label="  %38 = add i32 %37, %1"];
	Node0x11c8fb0[shape=record, label="  %39 = add i32 %38, %12"];
	Node0x11c9020[shape=record, label="  %40 = add i32 %39, %15"];
	Node0x11c9090[shape=record, label="  %41 = add i32 %40, %16"];
	Node0x11c9100[shape=record, label="  %42 = add i32 %41, %8"];
	Node0x11c9170[shape=record, label="  %43 = add i32 %42, %18"];
	Node0x11c91e0[shape=record, label="  %44 = add i32 %43, %23"];
	Node0x11c9250[shape=record, label="  %45 = add i32 %44, %24"];
	Node0x11c92c0[shape=record, label="  %46 = sub i32 %45, %28"];
	Node0x11c9330[shape=record, label="  %47 = sub i32 %46, %21"];
	Node0x11c93a0[shape=record, label="  %48 = sub i32 %47, %27"];
	Node0x11c9410[shape=record, label="  %49 = add i32 %48, %32"];
	Node0x11c9480[shape=record, label="  %50 = add i32 %49, %33"];
	Node0x11c94f0[shape=record, label="  %51 = add i32 %50, %36"];
	Node0x11c9560[shape=record, label="  %52 = icmp eq i32 %10, %51"];
	Node0x1168268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x11c9a00[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0x11c9a50[shape=record, label="  ret void"];
	Node0x11c7d70 -> Node0x11c7de0;
	Node0x11c7de0 -> Node0x11c7e50;
	Node0x11c7e50 -> Node0x11c7ef0;
	Node0x11c7ef0 -> Node0x11c7f60;
	Node0x11c7f60 -> Node0x11c7fd0;
	Node0x11c7fd0 -> Node0x11c8070;
	Node0x11c8070 -> Node0x11c80e0;
	Node0x11c80e0 -> Node0x11c8150;
	Node0x11c8150 -> Node0x11c81c0;
	Node0x11c81c0 -> Node0x11c8230;
	Node0x11c8230 -> Node0x11c82a0;
	Node0x11c82a0 -> Node0x11c8310;
	Node0x11c8310 -> Node0x11c83b0;
	Node0x11c83b0 -> Node0x11c8420;
	Node0x11c8420 -> Node0x11c8490;
	Node0x11c8490 -> Node0x11c8500;
	Node0x11c8500 -> Node0x11c8570;
	Node0x11c8570 -> Node0x11c85e0;
	Node0x11c85e0 -> Node0x11c8680;
	Node0x11c8680 -> Node0x11c86f0;
	Node0x11c86f0 -> Node0x11c8760;
	Node0x11c8760 -> Node0x11c87d0;
	Node0x11c87d0 -> Node0x11c8840;
	Node0x11c8840 -> Node0x11c88e0;
	Node0x11c88e0 -> Node0x11c8950;
	Node0x11c8950 -> Node0x11c89c0;
	Node0x11c89c0 -> Node0x11c8a60;
	Node0x11c8a60 -> Node0x11c8d10;
	Node0x11c8d10 -> Node0x11c8d80;
	Node0x11c8d80 -> Node0x11c8df0;
	Node0x11c8df0 -> Node0x11c8e60;
	Node0x11c8e60 -> Node0x11c8ed0;
	Node0x11c8ed0 -> Node0x11c8f40;
	Node0x11c8f40 -> Node0x11c8fb0;
	Node0x11c8fb0 -> Node0x11c9020;
	Node0x11c9020 -> Node0x11c9090;
	Node0x11c9090 -> Node0x11c9100;
	Node0x11c9100 -> Node0x11c9170;
	Node0x11c9170 -> Node0x11c91e0;
	Node0x11c91e0 -> Node0x11c9250;
	Node0x11c9250 -> Node0x11c92c0;
	Node0x11c92c0 -> Node0x11c9330;
	Node0x11c9330 -> Node0x11c93a0;
	Node0x11c93a0 -> Node0x11c9410;
	Node0x11c9410 -> Node0x11c9480;
	Node0x11c9480 -> Node0x11c94f0;
	Node0x11c94f0 -> Node0x11c9560;
	Node0x11c9560 -> Node0x1168268;
	Node0x1168268 -> Node0x11c9a00;
	Node0x11c9a00 -> Node0x11c9a50;
edge [color=red]
	Node0x11c7d70 -> Node0x11c7e50;
	Node0x11c7de0 -> Node0x11c7e50;
	Node0x11c7ef0 -> Node0x11c7f60;
	Node0x11c7e50 -> Node0x11c7fd0;
	Node0x11c7f60 -> Node0x11c7fd0;
	Node0x11c8070 -> Node0x11c80e0;
	Node0x11c81c0 -> Node0x11c8230;
	Node0x11c8310 -> Node0x11c83b0;
	Node0x11c81c0 -> Node0x11c8420;
	Node0x11c8310 -> Node0x11c8490;
	Node0x11c8490 -> Node0x11c8500;
	Node0x11c8420 -> Node0x11c8570;
	Node0x11c7de0 -> Node0x11c85e0;
	Node0x11c86f0 -> Node0x11c8760;
	Node0x11c8760 -> Node0x11c87d0;
	Node0x11c88e0 -> Node0x11c8950;
	Node0x11c8570 -> Node0x11c89c0;
	Node0x11c89c0 -> Node0x11c8a60;
	Node0x11c8150 -> Node0x11c8d80;
	Node0x11c8420 -> Node0x11c8d80;
	Node0x11c8d80 -> Node0x11c8df0;
	Node0x11c8950 -> Node0x11c8df0;
	Node0x11c8df0 -> Node0x11c8e60;
	Node0x11c8ed0 -> Node0x11c8f40;
	Node0x11c8f40 -> Node0x11c8fb0;
	Node0x11c80e0 -> Node0x11c8fb0;
	Node0x11c8fb0 -> Node0x11c9020;
	Node0x11c8230 -> Node0x11c9020;
	Node0x11c9020 -> Node0x11c9090;
	Node0x11c82a0 -> Node0x11c9090;
	Node0x11c9090 -> Node0x11c9100;
	Node0x11c7ef0 -> Node0x11c9100;
	Node0x11c9100 -> Node0x11c9170;
	Node0x11c83b0 -> Node0x11c9170;
	Node0x11c9170 -> Node0x11c91e0;
	Node0x11c85e0 -> Node0x11c91e0;
	Node0x11c91e0 -> Node0x11c9250;
	Node0x11c8680 -> Node0x11c9250;
	Node0x11c9250 -> Node0x11c92c0;
	Node0x11c8840 -> Node0x11c92c0;
	Node0x11c92c0 -> Node0x11c9330;
	Node0x11c8500 -> Node0x11c9330;
	Node0x11c9330 -> Node0x11c93a0;
	Node0x11c87d0 -> Node0x11c93a0;
	Node0x11c93a0 -> Node0x11c9410;
	Node0x11c8a60 -> Node0x11c9410;
	Node0x11c9410 -> Node0x11c9480;
	Node0x11c8d10 -> Node0x11c9480;
	Node0x11c9480 -> Node0x11c94f0;
	Node0x11c8e60 -> Node0x11c94f0;
	Node0x11c7fd0 -> Node0x11c9560;
	Node0x11c94f0 -> Node0x11c9560;
	Node0x11c9560 -> Node0x1168268;
	Node0x1168268 -> Node0x11c9a00;
}
