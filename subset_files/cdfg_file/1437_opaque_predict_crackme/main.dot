digraph "DFG for'main' function" {
	Node0x1109888[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1109908[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1109998[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x11099f8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1109aa8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1109ed8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1109fb8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x110a0b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x110a178[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x110a228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x110a2e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x110a398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1104a40[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x110a598[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x110b508[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x110bb78[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x110bbd8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x110bc50[shape=record, label="  %14 = mul i32 %12, -2"];
	Node0x110bcc0[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x110bd30[shape=record, label="  %16 = or i32 %13, %15"];
	Node0x110bda0[shape=record, label="  %17 = add i32 %16, %14"];
	Node0x110be10[shape=record, label="  %18 = xor i32 %12, %11"];
	Node0x110be80[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x110bef0[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x110bf60[shape=record, label="  %21 = or i32 %11, %20"];
	Node0x110bfd0[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x110c040[shape=record, label="  %23 = xor i32 %21, -1"];
	Node0x110c0b0[shape=record, label="  %24 = mul i32 %23, -5"];
	Node0x110c120[shape=record, label="  %25 = xor i32 %13, -1"];
	Node0x110c190[shape=record, label="  %26 = and i32 %13, %10"];
	Node0x110c200[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x110c270[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x110c2e0[shape=record, label="  %29 = xor i32 %13, %15"];
	Node0x110c350[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x110c3c0[shape=record, label="  %31 = mul i32 %11, -3"];
	Node0x110c430[shape=record, label="  %32 = sub i32 %18, %10"];
	Node0x110c4a0[shape=record, label="  %33 = add i32 %32, %19"];
	Node0x110c510[shape=record, label="  %34 = add i32 %33, %21"];
	Node0x110c580[shape=record, label="  %35 = add i32 %34, %30"];
	Node0x110c5f0[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x110c660[shape=record, label="  %37 = sub i32 1, %11"];
	Node0x110c6d0[shape=record, label="  %38 = add i32 %37, %12"];
	Node0x110c740[shape=record, label="  %39 = add i32 %38, %31"];
	Node0x110c7b0[shape=record, label="  %40 = sub i32 %39, %22"];
	Node0x110c820[shape=record, label="  %41 = add i32 %40, %25"];
	Node0x110c890[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x110c900[shape=record, label="  %43 = add i32 %42, %29"];
	Node0x110c970[shape=record, label="  %44 = sub i32 %43, %26"];
	Node0x110c9e0[shape=record, label="  %45 = sub i32 %44, %28"];
	Node0x110ca50[shape=record, label="  %46 = add i32 %45, %36"];
	Node0x110cac0[shape=record, label="  %47 = icmp eq i32 %17, %46"];
	Node0x10a98b8[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x110cb50[shape=record, label="  %49 = call i32 @puts(i8* nonnull dereferenceable(1) %48) #5"];
	Node0x110cdf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x110cf58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x110d068[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x110d178[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x110d238[shape=record, label="  ret i32 0"];
	Node0x1109888 -> Node0x1109908;
	Node0x1109908 -> Node0x1109998;
	Node0x1109998 -> Node0x11099f8;
	Node0x11099f8 -> Node0x1109aa8;
	Node0x1109aa8 -> Node0x1109ed8;
	Node0x1109ed8 -> Node0x1109fb8;
	Node0x1109fb8 -> Node0x110a0b8;
	Node0x110a0b8 -> Node0x110a178;
	Node0x110a178 -> Node0x110a228;
	Node0x110a228 -> Node0x110a2e8;
	Node0x110a2e8 -> Node0x110a398;
	Node0x110a398 -> Node0x1104a40;
	Node0x1104a40 -> Node0x110a598;
	Node0x110a598 -> Node0x110b508;
	Node0x110b508 -> Node0x110bb78;
	Node0x110bb78 -> Node0x110bbd8;
	Node0x110bbd8 -> Node0x110bc50;
	Node0x110bc50 -> Node0x110bcc0;
	Node0x110bcc0 -> Node0x110bd30;
	Node0x110bd30 -> Node0x110bda0;
	Node0x110bda0 -> Node0x110be10;
	Node0x110be10 -> Node0x110be80;
	Node0x110be80 -> Node0x110bef0;
	Node0x110bef0 -> Node0x110bf60;
	Node0x110bf60 -> Node0x110bfd0;
	Node0x110bfd0 -> Node0x110c040;
	Node0x110c040 -> Node0x110c0b0;
	Node0x110c0b0 -> Node0x110c120;
	Node0x110c120 -> Node0x110c190;
	Node0x110c190 -> Node0x110c200;
	Node0x110c200 -> Node0x110c270;
	Node0x110c270 -> Node0x110c2e0;
	Node0x110c2e0 -> Node0x110c350;
	Node0x110c350 -> Node0x110c3c0;
	Node0x110c3c0 -> Node0x110c430;
	Node0x110c430 -> Node0x110c4a0;
	Node0x110c4a0 -> Node0x110c510;
	Node0x110c510 -> Node0x110c580;
	Node0x110c580 -> Node0x110c5f0;
	Node0x110c5f0 -> Node0x110c660;
	Node0x110c660 -> Node0x110c6d0;
	Node0x110c6d0 -> Node0x110c740;
	Node0x110c740 -> Node0x110c7b0;
	Node0x110c7b0 -> Node0x110c820;
	Node0x110c820 -> Node0x110c890;
	Node0x110c890 -> Node0x110c900;
	Node0x110c900 -> Node0x110c970;
	Node0x110c970 -> Node0x110c9e0;
	Node0x110c9e0 -> Node0x110ca50;
	Node0x110ca50 -> Node0x110cac0;
	Node0x110cac0 -> Node0x10a98b8;
	Node0x10a98b8 -> Node0x110cb50;
	Node0x110cb50 -> Node0x110cdf8;
	Node0x110cdf8 -> Node0x110cf58;
	Node0x110cf58 -> Node0x110d068;
	Node0x110d068 -> Node0x110d178;
	Node0x110d178 -> Node0x110d238;
edge [color=red]
	Node0x1109888 -> Node0x1109aa8;
	Node0x1109aa8 -> Node0x1109ed8;
	Node0x1109908 -> Node0x1109fb8;
	Node0x1109fb8 -> Node0x110a0b8;
	Node0x1109998 -> Node0x110a178;
	Node0x110a178 -> Node0x110a228;
	Node0x11099f8 -> Node0x110a2e8;
	Node0x110a2e8 -> Node0x110a398;
	Node0x1109888 -> Node0x1104a40;
	Node0x1109908 -> Node0x1104a40;
	Node0x1109998 -> Node0x1104a40;
	Node0x11099f8 -> Node0x1104a40;
	Node0x1109888 -> Node0x110a598;
	Node0x1109908 -> Node0x110b508;
	Node0x1109998 -> Node0x110bb78;
	Node0x11099f8 -> Node0x110bbd8;
	Node0x110bb78 -> Node0x110bc50;
	Node0x110a598 -> Node0x110bcc0;
	Node0x110bbd8 -> Node0x110bd30;
	Node0x110bcc0 -> Node0x110bd30;
	Node0x110bd30 -> Node0x110bda0;
	Node0x110bc50 -> Node0x110bda0;
	Node0x110bb78 -> Node0x110be10;
	Node0x110b508 -> Node0x110be10;
	Node0x110bb78 -> Node0x110be80;
	Node0x110b508 -> Node0x110be80;
	Node0x110bb78 -> Node0x110bef0;
	Node0x110b508 -> Node0x110bf60;
	Node0x110bef0 -> Node0x110bf60;
	Node0x110bb78 -> Node0x110bfd0;
	Node0x110b508 -> Node0x110bfd0;
	Node0x110bf60 -> Node0x110c040;
	Node0x110c040 -> Node0x110c0b0;
	Node0x110bbd8 -> Node0x110c120;
	Node0x110bbd8 -> Node0x110c190;
	Node0x110a598 -> Node0x110c190;
	Node0x110c190 -> Node0x110c200;
	Node0x110c200 -> Node0x110c270;
	Node0x110bbd8 -> Node0x110c2e0;
	Node0x110bcc0 -> Node0x110c2e0;
	Node0x110bbd8 -> Node0x110c350;
	Node0x110a598 -> Node0x110c350;
	Node0x110b508 -> Node0x110c3c0;
	Node0x110be10 -> Node0x110c430;
	Node0x110a598 -> Node0x110c430;
	Node0x110c430 -> Node0x110c4a0;
	Node0x110be80 -> Node0x110c4a0;
	Node0x110c4a0 -> Node0x110c510;
	Node0x110bf60 -> Node0x110c510;
	Node0x110c510 -> Node0x110c580;
	Node0x110c350 -> Node0x110c580;
	Node0x110c580 -> Node0x110c5f0;
	Node0x110b508 -> Node0x110c660;
	Node0x110c660 -> Node0x110c6d0;
	Node0x110bb78 -> Node0x110c6d0;
	Node0x110c6d0 -> Node0x110c740;
	Node0x110c3c0 -> Node0x110c740;
	Node0x110c740 -> Node0x110c7b0;
	Node0x110bfd0 -> Node0x110c7b0;
	Node0x110c7b0 -> Node0x110c820;
	Node0x110c120 -> Node0x110c820;
	Node0x110c820 -> Node0x110c890;
	Node0x110c0b0 -> Node0x110c890;
	Node0x110c890 -> Node0x110c900;
	Node0x110c2e0 -> Node0x110c900;
	Node0x110c900 -> Node0x110c970;
	Node0x110c190 -> Node0x110c970;
	Node0x110c970 -> Node0x110c9e0;
	Node0x110c270 -> Node0x110c9e0;
	Node0x110c9e0 -> Node0x110ca50;
	Node0x110c5f0 -> Node0x110ca50;
	Node0x110bda0 -> Node0x110cac0;
	Node0x110ca50 -> Node0x110cac0;
	Node0x110cac0 -> Node0x10a98b8;
	Node0x10a98b8 -> Node0x110cb50;
	Node0x110a2e8 -> Node0x110cdf8;
	Node0x110a178 -> Node0x110cf58;
	Node0x1109fb8 -> Node0x110d068;
	Node0x1109aa8 -> Node0x110d178;
}
