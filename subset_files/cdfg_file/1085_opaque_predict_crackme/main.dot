digraph "DFG for'main' function" {
	Node0xdbda78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xdbdaf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xdbdb88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xdbdfe8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xdbe0c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xdbe1e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdbe420[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xdbe4d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xdbf448[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xdbfad0[shape=record, label="  %8 = sub i32 -2, %6"];
	Node0xdbfb40[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0xdbfbb0[shape=record, label="  %10 = and i32 %7, %6"];
	Node0xdbfc20[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0xdbfc90[shape=record, label="  %12 = or i32 %7, %6"];
	Node0xdbfd00[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0xdbfd70[shape=record, label="  %14 = or i32 %6, %13"];
	Node0xdbfde0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0xdbfe50[shape=record, label="  %16 = shl i32 %12, 1"];
	Node0xdbfec0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0xdbff30[shape=record, label="  %18 = and i32 %6, %13"];
	Node0xdbffa0[shape=record, label="  %19 = mul i32 %10, 3"];
	Node0xdc0010[shape=record, label="  %20 = add i32 %9, -1"];
	Node0xdc0080[shape=record, label="  %21 = add i32 %20, %11"];
	Node0xdc00f0[shape=record, label="  %22 = sub i32 %21, %12"];
	Node0xdc0160[shape=record, label="  %23 = add i32 %22, %18"];
	Node0xdc01d0[shape=record, label="  %24 = sub i32 %23, %15"];
	Node0xdc0240[shape=record, label="  %25 = add i32 %24, %19"];
	Node0xdc02b0[shape=record, label="  %26 = add i32 %25, %17"];
	Node0xdc0320[shape=record, label="  %27 = icmp eq i32 %8, %26"];
	Node0xd5e9d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xdc03b0[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0xdc0608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdc0768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xdc0828[shape=record, label="  ret i32 0"];
	Node0xdbda78 -> Node0xdbdaf8;
	Node0xdbdaf8 -> Node0xdbdb88;
	Node0xdbdb88 -> Node0xdbdfe8;
	Node0xdbdfe8 -> Node0xdbe0c8;
	Node0xdbe0c8 -> Node0xdbe1e8;
	Node0xdbe1e8 -> Node0xdbe420;
	Node0xdbe420 -> Node0xdbe4d8;
	Node0xdbe4d8 -> Node0xdbf448;
	Node0xdbf448 -> Node0xdbfad0;
	Node0xdbfad0 -> Node0xdbfb40;
	Node0xdbfb40 -> Node0xdbfbb0;
	Node0xdbfbb0 -> Node0xdbfc20;
	Node0xdbfc20 -> Node0xdbfc90;
	Node0xdbfc90 -> Node0xdbfd00;
	Node0xdbfd00 -> Node0xdbfd70;
	Node0xdbfd70 -> Node0xdbfde0;
	Node0xdbfde0 -> Node0xdbfe50;
	Node0xdbfe50 -> Node0xdbfec0;
	Node0xdbfec0 -> Node0xdbff30;
	Node0xdbff30 -> Node0xdbffa0;
	Node0xdbffa0 -> Node0xdc0010;
	Node0xdc0010 -> Node0xdc0080;
	Node0xdc0080 -> Node0xdc00f0;
	Node0xdc00f0 -> Node0xdc0160;
	Node0xdc0160 -> Node0xdc01d0;
	Node0xdc01d0 -> Node0xdc0240;
	Node0xdc0240 -> Node0xdc02b0;
	Node0xdc02b0 -> Node0xdc0320;
	Node0xdc0320 -> Node0xd5e9d8;
	Node0xd5e9d8 -> Node0xdc03b0;
	Node0xdc03b0 -> Node0xdc0608;
	Node0xdc0608 -> Node0xdc0768;
	Node0xdc0768 -> Node0xdc0828;
edge [color=red]
	Node0xdbda78 -> Node0xdbdb88;
	Node0xdbdb88 -> Node0xdbdfe8;
	Node0xdbdaf8 -> Node0xdbe0c8;
	Node0xdbe0c8 -> Node0xdbe1e8;
	Node0xdbda78 -> Node0xdbe420;
	Node0xdbdaf8 -> Node0xdbe420;
	Node0xdbda78 -> Node0xdbe4d8;
	Node0xdbdaf8 -> Node0xdbf448;
	Node0xdbe4d8 -> Node0xdbfad0;
	Node0xdbf448 -> Node0xdbfb40;
	Node0xdbe4d8 -> Node0xdbfb40;
	Node0xdbf448 -> Node0xdbfbb0;
	Node0xdbe4d8 -> Node0xdbfbb0;
	Node0xdbfbb0 -> Node0xdbfc20;
	Node0xdbf448 -> Node0xdbfc90;
	Node0xdbe4d8 -> Node0xdbfc90;
	Node0xdbf448 -> Node0xdbfd00;
	Node0xdbe4d8 -> Node0xdbfd70;
	Node0xdbfd00 -> Node0xdbfd70;
	Node0xdbfd70 -> Node0xdbfde0;
	Node0xdbfc90 -> Node0xdbfe50;
	Node0xdbfe50 -> Node0xdbfec0;
	Node0xdbe4d8 -> Node0xdbff30;
	Node0xdbfd00 -> Node0xdbff30;
	Node0xdbfbb0 -> Node0xdbffa0;
	Node0xdbfb40 -> Node0xdc0010;
	Node0xdc0010 -> Node0xdc0080;
	Node0xdbfc20 -> Node0xdc0080;
	Node0xdc0080 -> Node0xdc00f0;
	Node0xdbfc90 -> Node0xdc00f0;
	Node0xdc00f0 -> Node0xdc0160;
	Node0xdbff30 -> Node0xdc0160;
	Node0xdc0160 -> Node0xdc01d0;
	Node0xdbfde0 -> Node0xdc01d0;
	Node0xdc01d0 -> Node0xdc0240;
	Node0xdbffa0 -> Node0xdc0240;
	Node0xdc0240 -> Node0xdc02b0;
	Node0xdbfec0 -> Node0xdc02b0;
	Node0xdbfad0 -> Node0xdc0320;
	Node0xdc02b0 -> Node0xdc0320;
	Node0xdc0320 -> Node0xd5e9d8;
	Node0xd5e9d8 -> Node0xdc03b0;
	Node0xdbe0c8 -> Node0xdc0608;
	Node0xdbdb88 -> Node0xdc0768;
}
