digraph "DFG for'main' function" {
	Node0xc63d78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc63df8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc63e88[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xc642e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc643c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xc644e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc64720[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xc647d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc65748[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc65dd0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0xc65e40[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xc65eb0[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0xc65f20[shape=record, label="  %11 = sub i32 3, %10"];
	Node0xc65f90[shape=record, label="  %12 = or i32 %7, %6"];
	Node0xc66000[shape=record, label="  %13 = shl i32 %6, 1"];
	Node0xc66070[shape=record, label="  %14 = xor i32 %7, -1"];
	Node0xc660e0[shape=record, label="  %15 = add i32 %7, 1"];
	Node0xc66150[shape=record, label="  %16 = xor i32 %7, %6"];
	Node0xc661c0[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0xc66230[shape=record, label="  %18 = shl i32 %7, 1"];
	Node0xc662a0[shape=record, label="  %19 = shl i32 %12, 2"];
	Node0xc66310[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0xc66380[shape=record, label="  %21 = and i32 %6, %14"];
	Node0xc663f0[shape=record, label="  %22 = mul i32 %21, -3"];
	Node0xc66460[shape=record, label="  %23 = shl i32 %8, 2"];
	Node0xc664d0[shape=record, label="  %24 = add i32 %15, %13"];
	Node0xc66540[shape=record, label="  %25 = add i32 %24, %12"];
	Node0xc665b0[shape=record, label="  %26 = sub i32 %25, %18"];
	Node0xc66620[shape=record, label="  %27 = sub i32 %26, %17"];
	Node0xc66690[shape=record, label="  %28 = add i32 %27, %22"];
	Node0xc66700[shape=record, label="  %29 = sub i32 %28, %23"];
	Node0xc66770[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0xc667e0[shape=record, label="  %31 = icmp eq i32 %11, %30"];
	Node0xc049d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc66a80[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0xc66cd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc66e38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc66ef8[shape=record, label="  ret i32 0"];
	Node0xc63d78 -> Node0xc63df8;
	Node0xc63df8 -> Node0xc63e88;
	Node0xc63e88 -> Node0xc642e8;
	Node0xc642e8 -> Node0xc643c8;
	Node0xc643c8 -> Node0xc644e8;
	Node0xc644e8 -> Node0xc64720;
	Node0xc64720 -> Node0xc647d8;
	Node0xc647d8 -> Node0xc65748;
	Node0xc65748 -> Node0xc65dd0;
	Node0xc65dd0 -> Node0xc65e40;
	Node0xc65e40 -> Node0xc65eb0;
	Node0xc65eb0 -> Node0xc65f20;
	Node0xc65f20 -> Node0xc65f90;
	Node0xc65f90 -> Node0xc66000;
	Node0xc66000 -> Node0xc66070;
	Node0xc66070 -> Node0xc660e0;
	Node0xc660e0 -> Node0xc66150;
	Node0xc66150 -> Node0xc661c0;
	Node0xc661c0 -> Node0xc66230;
	Node0xc66230 -> Node0xc662a0;
	Node0xc662a0 -> Node0xc66310;
	Node0xc66310 -> Node0xc66380;
	Node0xc66380 -> Node0xc663f0;
	Node0xc663f0 -> Node0xc66460;
	Node0xc66460 -> Node0xc664d0;
	Node0xc664d0 -> Node0xc66540;
	Node0xc66540 -> Node0xc665b0;
	Node0xc665b0 -> Node0xc66620;
	Node0xc66620 -> Node0xc66690;
	Node0xc66690 -> Node0xc66700;
	Node0xc66700 -> Node0xc66770;
	Node0xc66770 -> Node0xc667e0;
	Node0xc667e0 -> Node0xc049d8;
	Node0xc049d8 -> Node0xc66a80;
	Node0xc66a80 -> Node0xc66cd8;
	Node0xc66cd8 -> Node0xc66e38;
	Node0xc66e38 -> Node0xc66ef8;
edge [color=red]
	Node0xc63d78 -> Node0xc63e88;
	Node0xc63e88 -> Node0xc642e8;
	Node0xc63df8 -> Node0xc643c8;
	Node0xc643c8 -> Node0xc644e8;
	Node0xc63d78 -> Node0xc64720;
	Node0xc63df8 -> Node0xc64720;
	Node0xc63d78 -> Node0xc647d8;
	Node0xc63df8 -> Node0xc65748;
	Node0xc65748 -> Node0xc65dd0;
	Node0xc647d8 -> Node0xc65dd0;
	Node0xc65dd0 -> Node0xc65e40;
	Node0xc65e40 -> Node0xc65eb0;
	Node0xc65eb0 -> Node0xc65f20;
	Node0xc65748 -> Node0xc65f90;
	Node0xc647d8 -> Node0xc65f90;
	Node0xc647d8 -> Node0xc66000;
	Node0xc65748 -> Node0xc66070;
	Node0xc65748 -> Node0xc660e0;
	Node0xc65748 -> Node0xc66150;
	Node0xc647d8 -> Node0xc66150;
	Node0xc66150 -> Node0xc661c0;
	Node0xc65748 -> Node0xc66230;
	Node0xc65f90 -> Node0xc662a0;
	Node0xc662a0 -> Node0xc66310;
	Node0xc647d8 -> Node0xc66380;
	Node0xc66070 -> Node0xc66380;
	Node0xc66380 -> Node0xc663f0;
	Node0xc65dd0 -> Node0xc66460;
	Node0xc660e0 -> Node0xc664d0;
	Node0xc66000 -> Node0xc664d0;
	Node0xc664d0 -> Node0xc66540;
	Node0xc65f90 -> Node0xc66540;
	Node0xc66540 -> Node0xc665b0;
	Node0xc66230 -> Node0xc665b0;
	Node0xc665b0 -> Node0xc66620;
	Node0xc661c0 -> Node0xc66620;
	Node0xc66620 -> Node0xc66690;
	Node0xc663f0 -> Node0xc66690;
	Node0xc66690 -> Node0xc66700;
	Node0xc66460 -> Node0xc66700;
	Node0xc66700 -> Node0xc66770;
	Node0xc66310 -> Node0xc66770;
	Node0xc65f20 -> Node0xc667e0;
	Node0xc66770 -> Node0xc667e0;
	Node0xc667e0 -> Node0xc049d8;
	Node0xc049d8 -> Node0xc66a80;
	Node0xc643c8 -> Node0xc66cd8;
	Node0xc63e88 -> Node0xc66e38;
}
