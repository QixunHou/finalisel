digraph "DFG for'main' function" {
	Node0x1d02fe8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d03068[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d030f8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1d03158[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1d035d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d036b8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1d037b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d03878[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1d03928[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d03b88[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1d03c48[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d04bb8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d05228[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1d05320[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1d05528[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d05688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d05798[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d05858[shape=record, label="  ret i32 0"];
	Node0x1d02fe8 -> Node0x1d03068;
	Node0x1d03068 -> Node0x1d030f8;
	Node0x1d030f8 -> Node0x1d03158;
	Node0x1d03158 -> Node0x1d035d8;
	Node0x1d035d8 -> Node0x1d036b8;
	Node0x1d036b8 -> Node0x1d037b8;
	Node0x1d037b8 -> Node0x1d03878;
	Node0x1d03878 -> Node0x1d03928;
	Node0x1d03928 -> Node0x1d03b88;
	Node0x1d03b88 -> Node0x1d03c48;
	Node0x1d03c48 -> Node0x1d04bb8;
	Node0x1d04bb8 -> Node0x1d05228;
	Node0x1d05228 -> Node0x1d05320;
	Node0x1d05320 -> Node0x1d05528;
	Node0x1d05528 -> Node0x1d05688;
	Node0x1d05688 -> Node0x1d05798;
	Node0x1d05798 -> Node0x1d05858;
edge [color=red]
	Node0x1d02fe8 -> Node0x1d03158;
	Node0x1d03158 -> Node0x1d035d8;
	Node0x1d03068 -> Node0x1d036b8;
	Node0x1d036b8 -> Node0x1d037b8;
	Node0x1d030f8 -> Node0x1d03878;
	Node0x1d03878 -> Node0x1d03928;
	Node0x1d02fe8 -> Node0x1d03b88;
	Node0x1d03068 -> Node0x1d03b88;
	Node0x1d030f8 -> Node0x1d03b88;
	Node0x1d02fe8 -> Node0x1d03c48;
	Node0x1d03068 -> Node0x1d04bb8;
	Node0x1d030f8 -> Node0x1d05228;
	Node0x1d03c48 -> Node0x1d05320;
	Node0x1d04bb8 -> Node0x1d05320;
	Node0x1d05228 -> Node0x1d05320;
	Node0x1d03878 -> Node0x1d05528;
	Node0x1d036b8 -> Node0x1d05688;
	Node0x1d03158 -> Node0x1d05798;
}
