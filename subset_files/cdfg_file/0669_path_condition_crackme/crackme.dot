digraph "DFG for'crackme' function" {
	Node0x14849c0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1485040[shape=record, label="  %6 = xor i32 %2, -1"];
	Node0x14850b0[shape=record, label="  %7 = and i32 %6, %1"];
	Node0x1485120[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1485190[shape=record, label="  %9 = sub i32 %8, %5"];
	Node0x1485230[shape=record, label="  %10 = shl i32 %3, 1"];
	Node0x14852d0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x1485340[shape=record, label="  %12 = sub i32 %9, %11"];
	Node0x14853b0[shape=record, label="  %13 = or i32 %6, %1"];
	Node0x1485420[shape=record, label="  %14 = shl i32 %7, 1"];
	Node0x1485490[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x1485500[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1485570[shape=record, label="  %17 = xor i32 %3, -1"];
	Node0x14855e0[shape=record, label="  %18 = or i32 %17, %0"];
	Node0x1485650[shape=record, label="  %19 = shl i32 %0, 1"];
	Node0x14856c0[shape=record, label="  %20 = xor i32 %17, %0"];
	Node0x1485730[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x14857a0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x1485840[shape=record, label="  %23 = mul i32 %22, -5"];
	Node0x14858b0[shape=record, label="  %24 = and i32 %17, %0"];
	Node0x1485920[shape=record, label="  %25 = sub i32 1, %1"];
	Node0x1485990[shape=record, label="  %26 = sub i32 %25, %19"];
	Node0x1485a00[shape=record, label="  %27 = add i32 %26, %6"];
	Node0x1485a70[shape=record, label="  %28 = add i32 %27, %5"];
	Node0x1485ae0[shape=record, label="  %29 = add i32 %28, %13"];
	Node0x1485b50[shape=record, label="  %30 = sub i32 %29, %14"];
	Node0x1485bc0[shape=record, label="  %31 = add i32 %30, %16"];
	Node0x1485c30[shape=record, label="  %32 = add i32 %31, %18"];
	Node0x1485eb0[shape=record, label="  %33 = add i32 %32, %20"];
	Node0x1485f20[shape=record, label="  %34 = add i32 %33, %22"];
	Node0x1485f90[shape=record, label="  %35 = sub i32 %34, %24"];
	Node0x1486000[shape=record, label="  %36 = add i32 %35, %23"];
	Node0x1486070[shape=record, label="  %37 = icmp eq i32 %12, %36"];
	Node0x1425268[shape=record, label="  %38 = select i1 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1486510[shape=record, label="  %39 = tail call i32 @puts(i8* nonnull dereferenceable(1) %38)"];
	Node0x1486560[shape=record, label="  ret void"];
	Node0x14849c0 -> Node0x1485040;
	Node0x1485040 -> Node0x14850b0;
	Node0x14850b0 -> Node0x1485120;
	Node0x1485120 -> Node0x1485190;
	Node0x1485190 -> Node0x1485230;
	Node0x1485230 -> Node0x14852d0;
	Node0x14852d0 -> Node0x1485340;
	Node0x1485340 -> Node0x14853b0;
	Node0x14853b0 -> Node0x1485420;
	Node0x1485420 -> Node0x1485490;
	Node0x1485490 -> Node0x1485500;
	Node0x1485500 -> Node0x1485570;
	Node0x1485570 -> Node0x14855e0;
	Node0x14855e0 -> Node0x1485650;
	Node0x1485650 -> Node0x14856c0;
	Node0x14856c0 -> Node0x1485730;
	Node0x1485730 -> Node0x14857a0;
	Node0x14857a0 -> Node0x1485840;
	Node0x1485840 -> Node0x14858b0;
	Node0x14858b0 -> Node0x1485920;
	Node0x1485920 -> Node0x1485990;
	Node0x1485990 -> Node0x1485a00;
	Node0x1485a00 -> Node0x1485a70;
	Node0x1485a70 -> Node0x1485ae0;
	Node0x1485ae0 -> Node0x1485b50;
	Node0x1485b50 -> Node0x1485bc0;
	Node0x1485bc0 -> Node0x1485c30;
	Node0x1485c30 -> Node0x1485eb0;
	Node0x1485eb0 -> Node0x1485f20;
	Node0x1485f20 -> Node0x1485f90;
	Node0x1485f90 -> Node0x1486000;
	Node0x1486000 -> Node0x1486070;
	Node0x1486070 -> Node0x1425268;
	Node0x1425268 -> Node0x1486510;
	Node0x1486510 -> Node0x1486560;
edge [color=red]
	Node0x1485040 -> Node0x14850b0;
	Node0x14850b0 -> Node0x1485120;
	Node0x1485120 -> Node0x1485190;
	Node0x14849c0 -> Node0x1485190;
	Node0x1485230 -> Node0x14852d0;
	Node0x1485190 -> Node0x1485340;
	Node0x14852d0 -> Node0x1485340;
	Node0x1485040 -> Node0x14853b0;
	Node0x14850b0 -> Node0x1485420;
	Node0x1485490 -> Node0x1485500;
	Node0x1485570 -> Node0x14855e0;
	Node0x1485570 -> Node0x14856c0;
	Node0x1485730 -> Node0x14857a0;
	Node0x14857a0 -> Node0x1485840;
	Node0x1485570 -> Node0x14858b0;
	Node0x1485920 -> Node0x1485990;
	Node0x1485650 -> Node0x1485990;
	Node0x1485990 -> Node0x1485a00;
	Node0x1485040 -> Node0x1485a00;
	Node0x1485a00 -> Node0x1485a70;
	Node0x14849c0 -> Node0x1485a70;
	Node0x1485a70 -> Node0x1485ae0;
	Node0x14853b0 -> Node0x1485ae0;
	Node0x1485ae0 -> Node0x1485b50;
	Node0x1485420 -> Node0x1485b50;
	Node0x1485b50 -> Node0x1485bc0;
	Node0x1485500 -> Node0x1485bc0;
	Node0x1485bc0 -> Node0x1485c30;
	Node0x14855e0 -> Node0x1485c30;
	Node0x1485c30 -> Node0x1485eb0;
	Node0x14856c0 -> Node0x1485eb0;
	Node0x1485eb0 -> Node0x1485f20;
	Node0x14857a0 -> Node0x1485f20;
	Node0x1485f20 -> Node0x1485f90;
	Node0x14858b0 -> Node0x1485f90;
	Node0x1485f90 -> Node0x1486000;
	Node0x1485840 -> Node0x1486000;
	Node0x1485340 -> Node0x1486070;
	Node0x1486000 -> Node0x1486070;
	Node0x1486070 -> Node0x1425268;
	Node0x1425268 -> Node0x1486510;
}
