digraph "DFG for'crackme' function" {
	Node0x8b0d30[shape=record, label="  %5 = shl i32 %1, 1"];
	Node0x8b0dd0[shape=record, label="  %6 = xor i32 %5, -2"];
	Node0x8b0e40[shape=record, label="  %7 = xor i32 %3, %0"];
	Node0x8b0ee0[shape=record, label="  %8 = shl i32 %7, 2"];
	Node0x8b0f80[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x8b0ff0[shape=record, label="  %10 = add i32 %6, %9"];
	Node0x8b1060[shape=record, label="  %11 = xor i32 %0, -1"];
	Node0x8b10d0[shape=record, label="  %12 = or i32 %11, %3"];
	Node0x8b1140[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x8b11b0[shape=record, label="  %14 = sub i32 %10, %13"];
	Node0x8b1220[shape=record, label="  %15 = xor i32 %2, -1"];
	Node0x8b1290[shape=record, label="  %16 = and i32 %15, %1"];
	Node0x8b1300[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x8b1370[shape=record, label="  %18 = or i32 %15, %1"];
	Node0x8b13e0[shape=record, label="  %19 = or i32 %2, %1"];
	Node0x8b1450[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x8b14c0[shape=record, label="  %21 = shl i32 %18, 1"];
	Node0x8b1530[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x8b15a0[shape=record, label="  %23 = shl i32 %16, 1"];
	Node0x8b1610[shape=record, label="  %24 = xor i32 %3, -1"];
	Node0x8b1680[shape=record, label="  %25 = or i32 %24, %0"];
	Node0x8b16f0[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x8b1760[shape=record, label="  %27 = and i32 %3, %0"];
	Node0x8b17d0[shape=record, label="  %28 = xor i32 %26, -1"];
	Node0x8b1870[shape=record, label="  %29 = mul i32 %28, 5"];
	Node0x8b18e0[shape=record, label="  %30 = xor i32 %13, -2"];
	Node0x8b1950[shape=record, label="  %31 = shl i32 %27, 2"];
	Node0x8b19c0[shape=record, label="  %32 = add i32 %25, %11"];
	Node0x8b1c70[shape=record, label="  %33 = mul i32 %32, -3"];
	Node0x8b1ce0[shape=record, label="  %34 = sub i32 1, %0"];
	Node0x8b1d50[shape=record, label="  %35 = sub i32 %34, %1"];
	Node0x8b1dc0[shape=record, label="  %36 = add i32 %35, %2"];
	Node0x8b1e30[shape=record, label="  %37 = add i32 %36, %17"];
	Node0x8b1ea0[shape=record, label="  %38 = add i32 %37, %18"];
	Node0x8b1f10[shape=record, label="  %39 = sub i32 %38, %19"];
	Node0x8b1f80[shape=record, label="  %40 = add i32 %39, %20"];
	Node0x8b1ff0[shape=record, label="  %41 = sub i32 %40, %3"];
	Node0x8b2060[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x8b20d0[shape=record, label="  %43 = sub i32 %42, %26"];
	Node0x8b2140[shape=record, label="  %44 = add i32 %43, %27"];
	Node0x8b21b0[shape=record, label="  %45 = add i32 %44, %22"];
	Node0x8b2220[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x8b2290[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x8b2300[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x8b2370[shape=record, label="  %49 = add i32 %48, %33"];
	Node0x8b23e0[shape=record, label="  %50 = icmp eq i32 %14, %49"];
	Node0x851268[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8b2880[shape=record, label="  %52 = tail call i32 @puts(i8* nonnull dereferenceable(1) %51)"];
	Node0x8b28d0[shape=record, label="  ret void"];
	Node0x8b0d30 -> Node0x8b0dd0;
	Node0x8b0dd0 -> Node0x8b0e40;
	Node0x8b0e40 -> Node0x8b0ee0;
	Node0x8b0ee0 -> Node0x8b0f80;
	Node0x8b0f80 -> Node0x8b0ff0;
	Node0x8b0ff0 -> Node0x8b1060;
	Node0x8b1060 -> Node0x8b10d0;
	Node0x8b10d0 -> Node0x8b1140;
	Node0x8b1140 -> Node0x8b11b0;
	Node0x8b11b0 -> Node0x8b1220;
	Node0x8b1220 -> Node0x8b1290;
	Node0x8b1290 -> Node0x8b1300;
	Node0x8b1300 -> Node0x8b1370;
	Node0x8b1370 -> Node0x8b13e0;
	Node0x8b13e0 -> Node0x8b1450;
	Node0x8b1450 -> Node0x8b14c0;
	Node0x8b14c0 -> Node0x8b1530;
	Node0x8b1530 -> Node0x8b15a0;
	Node0x8b15a0 -> Node0x8b1610;
	Node0x8b1610 -> Node0x8b1680;
	Node0x8b1680 -> Node0x8b16f0;
	Node0x8b16f0 -> Node0x8b1760;
	Node0x8b1760 -> Node0x8b17d0;
	Node0x8b17d0 -> Node0x8b1870;
	Node0x8b1870 -> Node0x8b18e0;
	Node0x8b18e0 -> Node0x8b1950;
	Node0x8b1950 -> Node0x8b19c0;
	Node0x8b19c0 -> Node0x8b1c70;
	Node0x8b1c70 -> Node0x8b1ce0;
	Node0x8b1ce0 -> Node0x8b1d50;
	Node0x8b1d50 -> Node0x8b1dc0;
	Node0x8b1dc0 -> Node0x8b1e30;
	Node0x8b1e30 -> Node0x8b1ea0;
	Node0x8b1ea0 -> Node0x8b1f10;
	Node0x8b1f10 -> Node0x8b1f80;
	Node0x8b1f80 -> Node0x8b1ff0;
	Node0x8b1ff0 -> Node0x8b2060;
	Node0x8b2060 -> Node0x8b20d0;
	Node0x8b20d0 -> Node0x8b2140;
	Node0x8b2140 -> Node0x8b21b0;
	Node0x8b21b0 -> Node0x8b2220;
	Node0x8b2220 -> Node0x8b2290;
	Node0x8b2290 -> Node0x8b2300;
	Node0x8b2300 -> Node0x8b2370;
	Node0x8b2370 -> Node0x8b23e0;
	Node0x8b23e0 -> Node0x851268;
	Node0x851268 -> Node0x8b2880;
	Node0x8b2880 -> Node0x8b28d0;
edge [color=red]
	Node0x8b0d30 -> Node0x8b0dd0;
	Node0x8b0e40 -> Node0x8b0ee0;
	Node0x8b0ee0 -> Node0x8b0f80;
	Node0x8b0dd0 -> Node0x8b0ff0;
	Node0x8b0f80 -> Node0x8b0ff0;
	Node0x8b1060 -> Node0x8b10d0;
	Node0x8b10d0 -> Node0x8b1140;
	Node0x8b0ff0 -> Node0x8b11b0;
	Node0x8b1140 -> Node0x8b11b0;
	Node0x8b1220 -> Node0x8b1290;
	Node0x8b1290 -> Node0x8b1300;
	Node0x8b1220 -> Node0x8b1370;
	Node0x8b13e0 -> Node0x8b1450;
	Node0x8b1370 -> Node0x8b14c0;
	Node0x8b14c0 -> Node0x8b1530;
	Node0x8b1290 -> Node0x8b15a0;
	Node0x8b1610 -> Node0x8b1680;
	Node0x8b16f0 -> Node0x8b17d0;
	Node0x8b17d0 -> Node0x8b1870;
	Node0x8b1140 -> Node0x8b18e0;
	Node0x8b1760 -> Node0x8b1950;
	Node0x8b1680 -> Node0x8b19c0;
	Node0x8b1060 -> Node0x8b19c0;
	Node0x8b19c0 -> Node0x8b1c70;
	Node0x8b1ce0 -> Node0x8b1d50;
	Node0x8b1d50 -> Node0x8b1dc0;
	Node0x8b1dc0 -> Node0x8b1e30;
	Node0x8b1300 -> Node0x8b1e30;
	Node0x8b1e30 -> Node0x8b1ea0;
	Node0x8b1370 -> Node0x8b1ea0;
	Node0x8b1ea0 -> Node0x8b1f10;
	Node0x8b13e0 -> Node0x8b1f10;
	Node0x8b1f10 -> Node0x8b1f80;
	Node0x8b1450 -> Node0x8b1f80;
	Node0x8b1f80 -> Node0x8b1ff0;
	Node0x8b1ff0 -> Node0x8b2060;
	Node0x8b15a0 -> Node0x8b2060;
	Node0x8b2060 -> Node0x8b20d0;
	Node0x8b16f0 -> Node0x8b20d0;
	Node0x8b20d0 -> Node0x8b2140;
	Node0x8b1760 -> Node0x8b2140;
	Node0x8b2140 -> Node0x8b21b0;
	Node0x8b1530 -> Node0x8b21b0;
	Node0x8b21b0 -> Node0x8b2220;
	Node0x8b1870 -> Node0x8b2220;
	Node0x8b2220 -> Node0x8b2290;
	Node0x8b1950 -> Node0x8b2290;
	Node0x8b2290 -> Node0x8b2300;
	Node0x8b18e0 -> Node0x8b2300;
	Node0x8b2300 -> Node0x8b2370;
	Node0x8b1c70 -> Node0x8b2370;
	Node0x8b11b0 -> Node0x8b23e0;
	Node0x8b2370 -> Node0x8b23e0;
	Node0x8b23e0 -> Node0x851268;
	Node0x851268 -> Node0x8b2880;
}
