digraph "DFG for'crackme' function" {
	Node0x23d8b70[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x23d8be0[shape=record, label="  %6 = sub i32 %1, %5"];
	Node0x23d8c50[shape=record, label="  %7 = or i32 %3, %0"];
	Node0x23d8cc0[shape=record, label="  %8 = sub i32 %6, %7"];
	Node0x23d8d30[shape=record, label="  %9 = or i32 %2, %1"];
	Node0x23d93b0[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x23d9420[shape=record, label="  %11 = or i32 %10, %1"];
	Node0x23d9490[shape=record, label="  %12 = and i32 %10, %1"];
	Node0x23d9500[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x23d95a0[shape=record, label="  %14 = mul i32 %10, 5"];
	Node0x23d9640[shape=record, label="  %15 = shl i32 %2, 1"];
	Node0x23d96b0[shape=record, label="  %16 = xor i32 %9, -1"];
	Node0x23d9750[shape=record, label="  %17 = mul i32 %16, -6"];
	Node0x23d97c0[shape=record, label="  %18 = shl i32 %11, 1"];
	Node0x23d9860[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x23d98d0[shape=record, label="  %20 = xor i32 %3, %0"];
	Node0x23d9940[shape=record, label="  %21 = xor i32 %0, -1"];
	Node0x23d99b0[shape=record, label="  %22 = and i32 %21, %3"];
	Node0x23d9a20[shape=record, label="  %23 = or i32 %21, %3"];
	Node0x23d9a90[shape=record, label="  %24 = xor i32 %7, -1"];
	Node0x23d9b00[shape=record, label="  %25 = shl i32 %23, 1"];
	Node0x23d9b70[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x23d9be0[shape=record, label="  %27 = and i32 %3, %0"];
	Node0x23d9c50[shape=record, label="  %28 = sub i32 %22, %12"];
	Node0x23d9cc0[shape=record, label="  %29 = add i32 %28, %27"];
	Node0x23d9d30[shape=record, label="  %30 = add i32 %29, %24"];
	Node0x23d9dd0[shape=record, label="  %31 = mul i32 %30, 3"];
	Node0x23d9e40[shape=record, label="  %32 = sub i32 3, %1"];
	Node0x23da0c0[shape=record, label="  %33 = sub i32 %32, %9"];
	Node0x23da130[shape=record, label="  %34 = add i32 %33, %11"];
	Node0x23da1a0[shape=record, label="  %35 = add i32 %34, %13"];
	Node0x23da210[shape=record, label="  %36 = add i32 %35, %14"];
	Node0x23da280[shape=record, label="  %37 = add i32 %36, %15"];
	Node0x23da2f0[shape=record, label="  %38 = sub i32 %37, %3"];
	Node0x23da360[shape=record, label="  %39 = add i32 %38, %17"];
	Node0x23da3d0[shape=record, label="  %40 = sub i32 %39, %20"];
	Node0x23da440[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x23da4b0[shape=record, label="  %42 = sub i32 %41, %23"];
	Node0x23da520[shape=record, label="  %43 = sub i32 %42, %19"];
	Node0x23da590[shape=record, label="  %44 = add i32 %43, %26"];
	Node0x23da600[shape=record, label="  %45 = add i32 %44, %31"];
	Node0x23da670[shape=record, label="  %46 = icmp eq i32 %8, %45"];
	Node0x2379268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23dab10[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0x23dab60[shape=record, label="  ret void"];
	Node0x23d8b70 -> Node0x23d8be0;
	Node0x23d8be0 -> Node0x23d8c50;
	Node0x23d8c50 -> Node0x23d8cc0;
	Node0x23d8cc0 -> Node0x23d8d30;
	Node0x23d8d30 -> Node0x23d93b0;
	Node0x23d93b0 -> Node0x23d9420;
	Node0x23d9420 -> Node0x23d9490;
	Node0x23d9490 -> Node0x23d9500;
	Node0x23d9500 -> Node0x23d95a0;
	Node0x23d95a0 -> Node0x23d9640;
	Node0x23d9640 -> Node0x23d96b0;
	Node0x23d96b0 -> Node0x23d9750;
	Node0x23d9750 -> Node0x23d97c0;
	Node0x23d97c0 -> Node0x23d9860;
	Node0x23d9860 -> Node0x23d98d0;
	Node0x23d98d0 -> Node0x23d9940;
	Node0x23d9940 -> Node0x23d99b0;
	Node0x23d99b0 -> Node0x23d9a20;
	Node0x23d9a20 -> Node0x23d9a90;
	Node0x23d9a90 -> Node0x23d9b00;
	Node0x23d9b00 -> Node0x23d9b70;
	Node0x23d9b70 -> Node0x23d9be0;
	Node0x23d9be0 -> Node0x23d9c50;
	Node0x23d9c50 -> Node0x23d9cc0;
	Node0x23d9cc0 -> Node0x23d9d30;
	Node0x23d9d30 -> Node0x23d9dd0;
	Node0x23d9dd0 -> Node0x23d9e40;
	Node0x23d9e40 -> Node0x23da0c0;
	Node0x23da0c0 -> Node0x23da130;
	Node0x23da130 -> Node0x23da1a0;
	Node0x23da1a0 -> Node0x23da210;
	Node0x23da210 -> Node0x23da280;
	Node0x23da280 -> Node0x23da2f0;
	Node0x23da2f0 -> Node0x23da360;
	Node0x23da360 -> Node0x23da3d0;
	Node0x23da3d0 -> Node0x23da440;
	Node0x23da440 -> Node0x23da4b0;
	Node0x23da4b0 -> Node0x23da520;
	Node0x23da520 -> Node0x23da590;
	Node0x23da590 -> Node0x23da600;
	Node0x23da600 -> Node0x23da670;
	Node0x23da670 -> Node0x2379268;
	Node0x2379268 -> Node0x23dab10;
	Node0x23dab10 -> Node0x23dab60;
edge [color=red]
	Node0x23d8b70 -> Node0x23d8be0;
	Node0x23d8be0 -> Node0x23d8cc0;
	Node0x23d8c50 -> Node0x23d8cc0;
	Node0x23d93b0 -> Node0x23d9420;
	Node0x23d93b0 -> Node0x23d9490;
	Node0x23d9490 -> Node0x23d9500;
	Node0x23d93b0 -> Node0x23d95a0;
	Node0x23d8d30 -> Node0x23d96b0;
	Node0x23d96b0 -> Node0x23d9750;
	Node0x23d9420 -> Node0x23d97c0;
	Node0x23d97c0 -> Node0x23d9860;
	Node0x23d9940 -> Node0x23d99b0;
	Node0x23d9940 -> Node0x23d9a20;
	Node0x23d8c50 -> Node0x23d9a90;
	Node0x23d9a20 -> Node0x23d9b00;
	Node0x23d9b00 -> Node0x23d9b70;
	Node0x23d99b0 -> Node0x23d9c50;
	Node0x23d9490 -> Node0x23d9c50;
	Node0x23d9c50 -> Node0x23d9cc0;
	Node0x23d9be0 -> Node0x23d9cc0;
	Node0x23d9cc0 -> Node0x23d9d30;
	Node0x23d9a90 -> Node0x23d9d30;
	Node0x23d9d30 -> Node0x23d9dd0;
	Node0x23d9e40 -> Node0x23da0c0;
	Node0x23d8d30 -> Node0x23da0c0;
	Node0x23da0c0 -> Node0x23da130;
	Node0x23d9420 -> Node0x23da130;
	Node0x23da130 -> Node0x23da1a0;
	Node0x23d9500 -> Node0x23da1a0;
	Node0x23da1a0 -> Node0x23da210;
	Node0x23d95a0 -> Node0x23da210;
	Node0x23da210 -> Node0x23da280;
	Node0x23d9640 -> Node0x23da280;
	Node0x23da280 -> Node0x23da2f0;
	Node0x23da2f0 -> Node0x23da360;
	Node0x23d9750 -> Node0x23da360;
	Node0x23da360 -> Node0x23da3d0;
	Node0x23d98d0 -> Node0x23da3d0;
	Node0x23da3d0 -> Node0x23da440;
	Node0x23d99b0 -> Node0x23da440;
	Node0x23da440 -> Node0x23da4b0;
	Node0x23d9a20 -> Node0x23da4b0;
	Node0x23da4b0 -> Node0x23da520;
	Node0x23d9860 -> Node0x23da520;
	Node0x23da520 -> Node0x23da590;
	Node0x23d9b70 -> Node0x23da590;
	Node0x23da590 -> Node0x23da600;
	Node0x23d9dd0 -> Node0x23da600;
	Node0x23d8cc0 -> Node0x23da670;
	Node0x23da600 -> Node0x23da670;
	Node0x23da670 -> Node0x2379268;
	Node0x2379268 -> Node0x23dab10;
}
