digraph "DFG for'main' function" {
	Node0x23dad28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23dada8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23dae38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23dae98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x23daf48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x23db378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23db458[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x23db558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23db618[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x23db6c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x23db788[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x23db838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x23d5ba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x23dba38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23dc9a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23dd018[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x23dd078[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x23dd0f0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x23dd160[shape=record, label="  %15 = sub i32 %11, %14"];
	Node0x23dd1d0[shape=record, label="  %16 = or i32 %13, %10"];
	Node0x23dd240[shape=record, label="  %17 = sub i32 %15, %16"];
	Node0x23dd2b0[shape=record, label="  %18 = or i32 %12, %11"];
	Node0x23dd320[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x23dd390[shape=record, label="  %20 = or i32 %11, %19"];
	Node0x23dd400[shape=record, label="  %21 = and i32 %11, %19"];
	Node0x23dd470[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x23dd4e0[shape=record, label="  %23 = mul i32 %19, 5"];
	Node0x23dd550[shape=record, label="  %24 = shl i32 %12, 1"];
	Node0x23dd5c0[shape=record, label="  %25 = xor i32 %18, -1"];
	Node0x23dd630[shape=record, label="  %26 = mul i32 %25, -6"];
	Node0x23dd6a0[shape=record, label="  %27 = shl i32 %20, 1"];
	Node0x23dd710[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x23dd780[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x23dd7f0[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x23dd860[shape=record, label="  %31 = and i32 %13, %30"];
	Node0x23dd8d0[shape=record, label="  %32 = or i32 %13, %30"];
	Node0x23dd940[shape=record, label="  %33 = xor i32 %16, -1"];
	Node0x23dd9b0[shape=record, label="  %34 = shl i32 %32, 1"];
	Node0x23dda20[shape=record, label="  %35 = xor i32 %34, -2"];
	Node0x23dda90[shape=record, label="  %36 = and i32 %13, %10"];
	Node0x23ddb00[shape=record, label="  %37 = sub i32 %31, %21"];
	Node0x23ddb70[shape=record, label="  %38 = add i32 %37, %36"];
	Node0x23ddbe0[shape=record, label="  %39 = add i32 %38, %33"];
	Node0x23ddc50[shape=record, label="  %40 = mul i32 %39, 3"];
	Node0x23ddcc0[shape=record, label="  %41 = sub i32 3, %11"];
	Node0x23ddd30[shape=record, label="  %42 = sub i32 %41, %18"];
	Node0x23ddda0[shape=record, label="  %43 = add i32 %42, %20"];
	Node0x23dde10[shape=record, label="  %44 = add i32 %43, %22"];
	Node0x23dde80[shape=record, label="  %45 = add i32 %44, %23"];
	Node0x23ddef0[shape=record, label="  %46 = add i32 %45, %24"];
	Node0x23ddf60[shape=record, label="  %47 = sub i32 %46, %13"];
	Node0x23ddfd0[shape=record, label="  %48 = add i32 %47, %26"];
	Node0x23de040[shape=record, label="  %49 = sub i32 %48, %29"];
	Node0x23de0b0[shape=record, label="  %50 = add i32 %49, %31"];
	Node0x23de120[shape=record, label="  %51 = sub i32 %50, %32"];
	Node0x23de190[shape=record, label="  %52 = sub i32 %51, %28"];
	Node0x23de200[shape=record, label="  %53 = add i32 %52, %35"];
	Node0x23de270[shape=record, label="  %54 = add i32 %53, %40"];
	Node0x23de2e0[shape=record, label="  %55 = icmp eq i32 %17, %54"];
	Node0x237a8b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23de370[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x23de618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x23de778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x23de888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23de998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23dea58[shape=record, label="  ret i32 0"];
	Node0x23dad28 -> Node0x23dada8;
	Node0x23dada8 -> Node0x23dae38;
	Node0x23dae38 -> Node0x23dae98;
	Node0x23dae98 -> Node0x23daf48;
	Node0x23daf48 -> Node0x23db378;
	Node0x23db378 -> Node0x23db458;
	Node0x23db458 -> Node0x23db558;
	Node0x23db558 -> Node0x23db618;
	Node0x23db618 -> Node0x23db6c8;
	Node0x23db6c8 -> Node0x23db788;
	Node0x23db788 -> Node0x23db838;
	Node0x23db838 -> Node0x23d5ba0;
	Node0x23d5ba0 -> Node0x23dba38;
	Node0x23dba38 -> Node0x23dc9a8;
	Node0x23dc9a8 -> Node0x23dd018;
	Node0x23dd018 -> Node0x23dd078;
	Node0x23dd078 -> Node0x23dd0f0;
	Node0x23dd0f0 -> Node0x23dd160;
	Node0x23dd160 -> Node0x23dd1d0;
	Node0x23dd1d0 -> Node0x23dd240;
	Node0x23dd240 -> Node0x23dd2b0;
	Node0x23dd2b0 -> Node0x23dd320;
	Node0x23dd320 -> Node0x23dd390;
	Node0x23dd390 -> Node0x23dd400;
	Node0x23dd400 -> Node0x23dd470;
	Node0x23dd470 -> Node0x23dd4e0;
	Node0x23dd4e0 -> Node0x23dd550;
	Node0x23dd550 -> Node0x23dd5c0;
	Node0x23dd5c0 -> Node0x23dd630;
	Node0x23dd630 -> Node0x23dd6a0;
	Node0x23dd6a0 -> Node0x23dd710;
	Node0x23dd710 -> Node0x23dd780;
	Node0x23dd780 -> Node0x23dd7f0;
	Node0x23dd7f0 -> Node0x23dd860;
	Node0x23dd860 -> Node0x23dd8d0;
	Node0x23dd8d0 -> Node0x23dd940;
	Node0x23dd940 -> Node0x23dd9b0;
	Node0x23dd9b0 -> Node0x23dda20;
	Node0x23dda20 -> Node0x23dda90;
	Node0x23dda90 -> Node0x23ddb00;
	Node0x23ddb00 -> Node0x23ddb70;
	Node0x23ddb70 -> Node0x23ddbe0;
	Node0x23ddbe0 -> Node0x23ddc50;
	Node0x23ddc50 -> Node0x23ddcc0;
	Node0x23ddcc0 -> Node0x23ddd30;
	Node0x23ddd30 -> Node0x23ddda0;
	Node0x23ddda0 -> Node0x23dde10;
	Node0x23dde10 -> Node0x23dde80;
	Node0x23dde80 -> Node0x23ddef0;
	Node0x23ddef0 -> Node0x23ddf60;
	Node0x23ddf60 -> Node0x23ddfd0;
	Node0x23ddfd0 -> Node0x23de040;
	Node0x23de040 -> Node0x23de0b0;
	Node0x23de0b0 -> Node0x23de120;
	Node0x23de120 -> Node0x23de190;
	Node0x23de190 -> Node0x23de200;
	Node0x23de200 -> Node0x23de270;
	Node0x23de270 -> Node0x23de2e0;
	Node0x23de2e0 -> Node0x237a8b8;
	Node0x237a8b8 -> Node0x23de370;
	Node0x23de370 -> Node0x23de618;
	Node0x23de618 -> Node0x23de778;
	Node0x23de778 -> Node0x23de888;
	Node0x23de888 -> Node0x23de998;
	Node0x23de998 -> Node0x23dea58;
edge [color=red]
	Node0x23dad28 -> Node0x23daf48;
	Node0x23daf48 -> Node0x23db378;
	Node0x23dada8 -> Node0x23db458;
	Node0x23db458 -> Node0x23db558;
	Node0x23dae38 -> Node0x23db618;
	Node0x23db618 -> Node0x23db6c8;
	Node0x23dae98 -> Node0x23db788;
	Node0x23db788 -> Node0x23db838;
	Node0x23dad28 -> Node0x23d5ba0;
	Node0x23dada8 -> Node0x23d5ba0;
	Node0x23dae38 -> Node0x23d5ba0;
	Node0x23dae98 -> Node0x23d5ba0;
	Node0x23dad28 -> Node0x23dba38;
	Node0x23dada8 -> Node0x23dc9a8;
	Node0x23dae38 -> Node0x23dd018;
	Node0x23dae98 -> Node0x23dd078;
	Node0x23dd018 -> Node0x23dd0f0;
	Node0x23dc9a8 -> Node0x23dd0f0;
	Node0x23dc9a8 -> Node0x23dd160;
	Node0x23dd0f0 -> Node0x23dd160;
	Node0x23dd078 -> Node0x23dd1d0;
	Node0x23dba38 -> Node0x23dd1d0;
	Node0x23dd160 -> Node0x23dd240;
	Node0x23dd1d0 -> Node0x23dd240;
	Node0x23dd018 -> Node0x23dd2b0;
	Node0x23dc9a8 -> Node0x23dd2b0;
	Node0x23dd018 -> Node0x23dd320;
	Node0x23dc9a8 -> Node0x23dd390;
	Node0x23dd320 -> Node0x23dd390;
	Node0x23dc9a8 -> Node0x23dd400;
	Node0x23dd320 -> Node0x23dd400;
	Node0x23dd400 -> Node0x23dd470;
	Node0x23dd320 -> Node0x23dd4e0;
	Node0x23dd018 -> Node0x23dd550;
	Node0x23dd2b0 -> Node0x23dd5c0;
	Node0x23dd5c0 -> Node0x23dd630;
	Node0x23dd390 -> Node0x23dd6a0;
	Node0x23dd6a0 -> Node0x23dd710;
	Node0x23dd078 -> Node0x23dd780;
	Node0x23dba38 -> Node0x23dd780;
	Node0x23dba38 -> Node0x23dd7f0;
	Node0x23dd078 -> Node0x23dd860;
	Node0x23dd7f0 -> Node0x23dd860;
	Node0x23dd078 -> Node0x23dd8d0;
	Node0x23dd7f0 -> Node0x23dd8d0;
	Node0x23dd1d0 -> Node0x23dd940;
	Node0x23dd8d0 -> Node0x23dd9b0;
	Node0x23dd9b0 -> Node0x23dda20;
	Node0x23dd078 -> Node0x23dda90;
	Node0x23dba38 -> Node0x23dda90;
	Node0x23dd860 -> Node0x23ddb00;
	Node0x23dd400 -> Node0x23ddb00;
	Node0x23ddb00 -> Node0x23ddb70;
	Node0x23dda90 -> Node0x23ddb70;
	Node0x23ddb70 -> Node0x23ddbe0;
	Node0x23dd940 -> Node0x23ddbe0;
	Node0x23ddbe0 -> Node0x23ddc50;
	Node0x23dc9a8 -> Node0x23ddcc0;
	Node0x23ddcc0 -> Node0x23ddd30;
	Node0x23dd2b0 -> Node0x23ddd30;
	Node0x23ddd30 -> Node0x23ddda0;
	Node0x23dd390 -> Node0x23ddda0;
	Node0x23ddda0 -> Node0x23dde10;
	Node0x23dd470 -> Node0x23dde10;
	Node0x23dde10 -> Node0x23dde80;
	Node0x23dd4e0 -> Node0x23dde80;
	Node0x23dde80 -> Node0x23ddef0;
	Node0x23dd550 -> Node0x23ddef0;
	Node0x23ddef0 -> Node0x23ddf60;
	Node0x23dd078 -> Node0x23ddf60;
	Node0x23ddf60 -> Node0x23ddfd0;
	Node0x23dd630 -> Node0x23ddfd0;
	Node0x23ddfd0 -> Node0x23de040;
	Node0x23dd780 -> Node0x23de040;
	Node0x23de040 -> Node0x23de0b0;
	Node0x23dd860 -> Node0x23de0b0;
	Node0x23de0b0 -> Node0x23de120;
	Node0x23dd8d0 -> Node0x23de120;
	Node0x23de120 -> Node0x23de190;
	Node0x23dd710 -> Node0x23de190;
	Node0x23de190 -> Node0x23de200;
	Node0x23dda20 -> Node0x23de200;
	Node0x23de200 -> Node0x23de270;
	Node0x23ddc50 -> Node0x23de270;
	Node0x23dd240 -> Node0x23de2e0;
	Node0x23de270 -> Node0x23de2e0;
	Node0x23de2e0 -> Node0x237a8b8;
	Node0x237a8b8 -> Node0x23de370;
	Node0x23db788 -> Node0x23de618;
	Node0x23db618 -> Node0x23de778;
	Node0x23db458 -> Node0x23de888;
	Node0x23daf48 -> Node0x23de998;
}
