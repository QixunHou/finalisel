digraph "DFG for'crackme' function" {
	Node0x1f9fd20[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1f9fd90[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x1f9fe30[shape=record, label="  %7 = add i32 %6, 1"];
	Node0x1f9fea0[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x1f9ff10[shape=record, label="  %9 = or i32 %8, %3"];
	Node0x1f9ff80[shape=record, label="  %10 = sub i32 %7, %9"];
	Node0x1f9fff0[shape=record, label="  %11 = or i32 %5, %1"];
	Node0x1fa0060[shape=record, label="  %12 = xor i32 %2, %1"];
	Node0x1fa00d0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1fa0170[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1fa01e0[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x1fa0250[shape=record, label="  %16 = and i32 %2, %1"];
	Node0x1fa02c0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1fa0330[shape=record, label="  %18 = xor i32 %15, -1"];
	Node0x1fa03a0[shape=record, label="  %19 = xor i32 %11, -1"];
	Node0x1fa0410[shape=record, label="  %20 = xor i32 %3, %0"];
	Node0x1fa0480[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x1fa04f0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x1fa0560[shape=record, label="  %23 = and i32 %8, %3"];
	Node0x1fa05d0[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x1fa0640[shape=record, label="  %25 = or i32 %3, %0"];
	Node0x1fa06b0[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x1fa0750[shape=record, label="  %27 = shl i32 %21, 2"];
	Node0x1fa07c0[shape=record, label="  %28 = add i32 %6, %19"];
	Node0x1fa0830[shape=record, label="  %29 = add i32 %28, %26"];
	Node0x1fa08a0[shape=record, label="  %30 = add i32 %29, %23"];
	Node0x1fa0940[shape=record, label="  %31 = mul i32 %30, -3"];
	Node0x1fa09b0[shape=record, label="  %32 = add i32 %16, %18"];
	Node0x1fa0c60[shape=record, label="  %33 = mul i32 %32, -6"];
	Node0x1fa0cd0[shape=record, label="  %34 = add i32 %3, %2"];
	Node0x1fa0d40[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x1fa0db0[shape=record, label="  %36 = sub i32 %1, %2"];
	Node0x1fa0e20[shape=record, label="  %37 = add i32 %36, %11"];
	Node0x1fa0e90[shape=record, label="  %38 = sub i32 %37, %15"];
	Node0x1fa0f00[shape=record, label="  %39 = add i32 %38, %17"];
	Node0x1fa0f70[shape=record, label="  %40 = sub i32 %39, %20"];
	Node0x1fa0fe0[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x1fa1050[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x1fa10c0[shape=record, label="  %43 = add i32 %42, %9"];
	Node0x1fa1130[shape=record, label="  %44 = add i32 %43, %14"];
	Node0x1fa11a0[shape=record, label="  %45 = sub i32 %44, %27"];
	Node0x1fa1210[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x1fa1280[shape=record, label="  %47 = add i32 %46, %35"];
	Node0x1fa12f0[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x1fa1360[shape=record, label="  %49 = icmp eq i32 %10, %48"];
	Node0x1f40268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1fa1800[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x1fa1850[shape=record, label="  ret void"];
	Node0x1f9fd20 -> Node0x1f9fd90;
	Node0x1f9fd90 -> Node0x1f9fe30;
	Node0x1f9fe30 -> Node0x1f9fea0;
	Node0x1f9fea0 -> Node0x1f9ff10;
	Node0x1f9ff10 -> Node0x1f9ff80;
	Node0x1f9ff80 -> Node0x1f9fff0;
	Node0x1f9fff0 -> Node0x1fa0060;
	Node0x1fa0060 -> Node0x1fa00d0;
	Node0x1fa00d0 -> Node0x1fa0170;
	Node0x1fa0170 -> Node0x1fa01e0;
	Node0x1fa01e0 -> Node0x1fa0250;
	Node0x1fa0250 -> Node0x1fa02c0;
	Node0x1fa02c0 -> Node0x1fa0330;
	Node0x1fa0330 -> Node0x1fa03a0;
	Node0x1fa03a0 -> Node0x1fa0410;
	Node0x1fa0410 -> Node0x1fa0480;
	Node0x1fa0480 -> Node0x1fa04f0;
	Node0x1fa04f0 -> Node0x1fa0560;
	Node0x1fa0560 -> Node0x1fa05d0;
	Node0x1fa05d0 -> Node0x1fa0640;
	Node0x1fa0640 -> Node0x1fa06b0;
	Node0x1fa06b0 -> Node0x1fa0750;
	Node0x1fa0750 -> Node0x1fa07c0;
	Node0x1fa07c0 -> Node0x1fa0830;
	Node0x1fa0830 -> Node0x1fa08a0;
	Node0x1fa08a0 -> Node0x1fa0940;
	Node0x1fa0940 -> Node0x1fa09b0;
	Node0x1fa09b0 -> Node0x1fa0c60;
	Node0x1fa0c60 -> Node0x1fa0cd0;
	Node0x1fa0cd0 -> Node0x1fa0d40;
	Node0x1fa0d40 -> Node0x1fa0db0;
	Node0x1fa0db0 -> Node0x1fa0e20;
	Node0x1fa0e20 -> Node0x1fa0e90;
	Node0x1fa0e90 -> Node0x1fa0f00;
	Node0x1fa0f00 -> Node0x1fa0f70;
	Node0x1fa0f70 -> Node0x1fa0fe0;
	Node0x1fa0fe0 -> Node0x1fa1050;
	Node0x1fa1050 -> Node0x1fa10c0;
	Node0x1fa10c0 -> Node0x1fa1130;
	Node0x1fa1130 -> Node0x1fa11a0;
	Node0x1fa11a0 -> Node0x1fa1210;
	Node0x1fa1210 -> Node0x1fa1280;
	Node0x1fa1280 -> Node0x1fa12f0;
	Node0x1fa12f0 -> Node0x1fa1360;
	Node0x1fa1360 -> Node0x1f40268;
	Node0x1f40268 -> Node0x1fa1800;
	Node0x1fa1800 -> Node0x1fa1850;
edge [color=red]
	Node0x1f9fd20 -> Node0x1f9fd90;
	Node0x1f9fd90 -> Node0x1f9fe30;
	Node0x1f9fea0 -> Node0x1f9ff10;
	Node0x1f9fe30 -> Node0x1f9ff80;
	Node0x1f9ff10 -> Node0x1f9ff80;
	Node0x1f9fd20 -> Node0x1f9fff0;
	Node0x1fa0060 -> Node0x1fa00d0;
	Node0x1fa00d0 -> Node0x1fa0170;
	Node0x1fa0250 -> Node0x1fa02c0;
	Node0x1fa01e0 -> Node0x1fa0330;
	Node0x1f9fff0 -> Node0x1fa03a0;
	Node0x1fa0480 -> Node0x1fa04f0;
	Node0x1f9fea0 -> Node0x1fa0560;
	Node0x1fa0560 -> Node0x1fa05d0;
	Node0x1fa0640 -> Node0x1fa06b0;
	Node0x1fa0480 -> Node0x1fa0750;
	Node0x1f9fd90 -> Node0x1fa07c0;
	Node0x1fa03a0 -> Node0x1fa07c0;
	Node0x1fa07c0 -> Node0x1fa0830;
	Node0x1fa06b0 -> Node0x1fa0830;
	Node0x1fa0830 -> Node0x1fa08a0;
	Node0x1fa0560 -> Node0x1fa08a0;
	Node0x1fa08a0 -> Node0x1fa0940;
	Node0x1fa0250 -> Node0x1fa09b0;
	Node0x1fa0330 -> Node0x1fa09b0;
	Node0x1fa09b0 -> Node0x1fa0c60;
	Node0x1fa0cd0 -> Node0x1fa0d40;
	Node0x1fa0db0 -> Node0x1fa0e20;
	Node0x1f9fff0 -> Node0x1fa0e20;
	Node0x1fa0e20 -> Node0x1fa0e90;
	Node0x1fa01e0 -> Node0x1fa0e90;
	Node0x1fa0e90 -> Node0x1fa0f00;
	Node0x1fa02c0 -> Node0x1fa0f00;
	Node0x1fa0f00 -> Node0x1fa0f70;
	Node0x1fa0410 -> Node0x1fa0f70;
	Node0x1fa0f70 -> Node0x1fa0fe0;
	Node0x1fa04f0 -> Node0x1fa0fe0;
	Node0x1fa0fe0 -> Node0x1fa1050;
	Node0x1fa05d0 -> Node0x1fa1050;
	Node0x1fa1050 -> Node0x1fa10c0;
	Node0x1f9ff10 -> Node0x1fa10c0;
	Node0x1fa10c0 -> Node0x1fa1130;
	Node0x1fa0170 -> Node0x1fa1130;
	Node0x1fa1130 -> Node0x1fa11a0;
	Node0x1fa0750 -> Node0x1fa11a0;
	Node0x1fa11a0 -> Node0x1fa1210;
	Node0x1fa0c60 -> Node0x1fa1210;
	Node0x1fa1210 -> Node0x1fa1280;
	Node0x1fa0d40 -> Node0x1fa1280;
	Node0x1fa1280 -> Node0x1fa12f0;
	Node0x1fa0940 -> Node0x1fa12f0;
	Node0x1f9ff80 -> Node0x1fa1360;
	Node0x1fa12f0 -> Node0x1fa1360;
	Node0x1fa1360 -> Node0x1f40268;
	Node0x1f40268 -> Node0x1fa1800;
}
