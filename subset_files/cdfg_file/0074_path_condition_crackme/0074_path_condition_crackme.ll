; ModuleID = '../.././c_source_file/0074_path_condition_crackme.c'
source_filename = "../.././c_source_file/0074_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = or i32 %2, %1
  %9 = and i32 %8, %7
  %10 = or i32 %4, %3
  %11 = add i32 %10, %9
  %12 = shl i32 %11, 1
  %13 = xor i32 %5, -1
  %14 = and i32 %4, %3
  %15 = or i32 %14, %13
  %16 = sub i32 %12, %15
  %17 = and i32 %2, %1
  %18 = and i32 %17, %7
  %19 = xor i32 %2, %1
  %20 = and i32 %19, %0
  %21 = xor i32 %18, -1
  %22 = xor i32 %20, %21
  %23 = and i32 %2, %0
  %24 = xor i32 %2, -1
  %25 = and i32 %24, %1
  %26 = xor i32 %25, -1
  %27 = xor i32 %23, %26
  %28 = xor i32 %1, -1
  %29 = and i32 %28, %2
  %30 = and i32 %29, %0
  %31 = or i32 %19, %0
  %32 = xor i32 %31, -1
  %33 = or i32 %30, %32
  %34 = and i32 %28, %0
  %35 = or i32 %34, %24
  %36 = xor i32 %19, %0
  %37 = xor i32 %34, %26
  %38 = or i32 %18, %20
  %39 = or i32 %24, %1
  %40 = xor i32 %39, -1
  %41 = xor i32 %40, %0
  %42 = or i32 %28, %0
  %43 = and i32 %42, %2
  %44 = xor i32 %2, %0
  %45 = xor i32 %44, -1
  %46 = or i32 %45, %1
  %47 = xor i32 %19, -1
  %48 = and i32 %42, %47
  %49 = and i32 %1, %0
  %50 = or i32 %49, %45
  %51 = xor i32 %42, -1
  %52 = or i32 %19, %51
  %53 = or i32 %1, %0
  %54 = xor i32 %53, -1
  %55 = or i32 %44, %54
  %56 = xor i32 %23, -1
  %57 = and i32 %56, %1
  %58 = or i32 %2, %0
  %59 = xor i32 %58, %49
  %60 = shl i32 %20, 1
  %61 = xor i32 %49, -1
  %62 = xor i32 %42, %2
  %63 = xor i32 %34, -1
  %64 = and i32 %44, %63
  %65 = or i32 %23, %25
  %66 = or i32 %17, %34
  %67 = and i32 %24, %0
  %68 = xor i32 %61, %2
  %69 = or i32 %26, %7
  %70 = or i32 %67, %28
  %71 = xor i32 %63, %2
  %72 = or i32 %23, %51
  %73 = or i32 %44, %51
  %74 = shl i32 %73, 2
  %75 = and i32 %19, %7
  %76 = shl i32 %2, 2
  %77 = and i32 %19, %61
  %78 = xor i32 %58, -1
  %79 = or i32 %78, %28
  %80 = or i32 %67, %17
  %81 = or i32 %24, %0
  %82 = xor i32 %81, %1
  %83 = and i32 %26, %7
  %84 = or i32 %23, %54
  %85 = and i32 %42, %45
  %86 = xor i32 %81, -1
  %87 = xor i32 %1, %0
  %88 = xor i32 %87, -1
  %89 = or i32 %86, %88
  %90 = and i32 %81, %1
  %91 = and i32 %24, %61
  %92 = and i32 %29, %7
  %93 = or i32 %28, %2
  %94 = and i32 %93, %0
  %95 = xor i32 %94, -1
  %96 = xor i32 %92, %95
  %97 = or i32 %44, %28
  %98 = and i32 %17, %0
  %99 = or i32 %98, %75
  %100 = or i32 %86, %28
  %101 = and i32 %39, %7
  %102 = shl i32 %101, 1
  %103 = or i32 %49, %2
  %104 = xor i32 %17, -1
  %105 = xor i32 %34, %104
  %106 = or i32 %54, %2
  %107 = and i32 %19, %42
  %108 = and i32 %87, %45
  %109 = shl i32 %108, 1
  %110 = xor i32 %67, -1
  %111 = and i32 %110, %88
  %112 = xor i32 %30, %31
  %113 = and i32 %104, %7
  %114 = xor i32 %23, %42
  %115 = or i32 %24, %54
  %116 = xor i32 %39, %0
  %117 = or i32 %44, %1
  %118 = shl i32 %117, 1
  %119 = xor i32 %67, %39
  %120 = or i32 %67, %1
  %121 = or i32 %19, %49
  %122 = shl i32 %121, 1
  %123 = and i32 %110, %1
  %124 = and i32 %63, %2
  %125 = and i32 %56, %28
  %126 = or i32 %87, %24
  %127 = and i32 %24, %88
  %128 = shl i32 %40, 1
  %129 = and i32 %104, %0
  %130 = and i32 %93, %7
  %131 = xor i32 %30, -1
  %132 = xor i32 %130, %131
  %133 = and i32 %45, %1
  %134 = xor i32 %8, %0
  %135 = xor i32 %134, 2147483647
  %136 = xor i32 %135, %98
  %137 = shl i32 %136, 1
  %138 = and i32 %87, %24
  %139 = or i32 %39, %0
  %140 = and i32 %44, %88
  %141 = and i32 %42, %24
  %142 = xor i32 %93, %0
  %143 = or i32 %30, %142
  %144 = xor i32 %56, %1
  %145 = and i32 %58, %88
  %146 = xor i32 %17, %0
  %147 = and i32 %19, %53
  %148 = and i32 %45, %61
  %149 = xor i32 %26, %0
  %150 = xor i32 %8, -1
  %151 = or i32 %49, %150
  %152 = or i32 %44, %88
  %153 = or i32 %104, %0
  %154 = xor i32 %86, %1
  %155 = and i32 %8, %0
  %156 = xor i32 %155, %21
  %157 = xor i32 %47, %0
  %158 = or i32 %23, %87
  %159 = and i32 %87, %2
  %160 = or i32 %78, %1
  %161 = or i32 %18, %155
  %162 = or i32 %44, %49
  %163 = xor i32 %23, %53
  %164 = shl i32 %163, 1
  %165 = and i32 %53, %24
  %166 = xor i32 %36, %131
  %167 = or i32 %150, %7
  %168 = xor i32 %150, %0
  %169 = or i32 %40, %0
  %170 = and i32 %87, %110
  %171 = or i32 %26, %0
  %172 = and i32 %47, %63
  %173 = shl i32 %17, 1
  %174 = xor i32 %25, %0
  %175 = shl i32 %174, 1
  %176 = or i32 %88, %2
  %177 = xor i32 %23, %8
  %178 = and i32 %45, %63
  %179 = or i32 %30, %130
  %180 = and i32 %81, %88
  %181 = or i32 %87, %86
  %182 = or i32 %87, %45
  %183 = or i32 %47, %0
  %184 = or i32 %67, %40
  %185 = and i32 %56, %88
  %186 = or i32 %19, %7
  %187 = or i32 %34, %47
  %188 = or i32 %98, %134
  %189 = and i32 %26, %0
  %190 = or i32 %8, %0
  %191 = add i32 %23, 1
  %192 = xor i32 %78, %1
  %193 = and i32 %45, %88
  %194 = or i32 %45, %54
  %195 = or i32 %49, %86
  %196 = or i32 %45, %28
  %197 = and i32 %58, %87
  %198 = or i32 %47, %51
  %199 = xor i32 %51, %2
  %200 = xor i32 %39, %49
  %201 = shl i32 %200, 1
  %202 = xor i32 %92, %186
  %203 = or i32 %34, %45
  %204 = shl i32 %203, 1
  %205 = xor i32 %49, %2
  %206 = xor i32 %98, %36
  %207 = and i32 %81, %87
  %208 = shl i32 %207, 1
  %209 = or i32 %19, %34
  %210 = shl i32 %209, 1
  %211 = or i32 %47, %54
  %212 = or i32 %67, %88
  %213 = or i32 %25, %0
  %214 = or i32 %40, %7
  %215 = shl i32 %45, 2
  %216 = or i32 %23, %88
  %217 = add i32 %87, 1
  %218 = shl i32 %39, 1
  %219 = or i32 %67, %87
  %220 = or i32 %30, %36
  %221 = or i32 %49, %78
  %222 = and i32 %44, %87
  %223 = or i32 %39, %7
  %224 = or i32 %23, %28
  %225 = or i32 %49, %47
  %226 = and i32 %19, %63
  %227 = and i32 %44, %1
  %228 = or i32 %150, %0
  %229 = and i32 %81, %28
  %230 = and i32 %44, %42
  %231 = or i32 %8, %7
  %232 = or i32 %34, %2
  %233 = and i32 %47, %0
  %234 = or i32 %87, %2
  %235 = xor i32 %67, %104
  %236 = and i32 %61, %2
  %237 = xor i32 %53, %2
  %238 = add i32 %67, 1
  %239 = xor i32 %23, %1
  %240 = or i32 %51, %2
  %241 = or i32 %45, %51
  %242 = add i32 %25, 1
  %243 = xor i32 %142, %131
  %244 = or i32 %44, %87
  %245 = add i32 %17, 1
  %246 = or i32 %23, %1
  %247 = or i32 %24, %51
  %248 = and i32 %53, %47
  %249 = or i32 %86, %1
  %250 = xor i32 %75, -1
  %251 = xor i32 %98, %250
  %252 = and i32 %53, %45
  %253 = or i32 %49, %40
  %254 = xor i32 %34, %2
  %255 = and i32 %87, %56
  %256 = and i32 %150, %7
  %257 = mul i32 %256, 6
  %258 = and i32 %25, %7
  %259 = and i32 %150, %0
  %260 = shl i32 %259, 4
  %261 = and i32 %25, %0
  %262 = mul i32 %261, 13
  %263 = and i32 %40, %7
  %264 = mul i32 %263, 23
  %265 = mul i32 %18, -10
  %266 = and i32 %40, %0
  %267 = shl i32 %266, 3
  %268 = xor i32 %3, -1
  %269 = or i32 %268, %4
  %270 = xor i32 %269, -1
  %271 = or i32 %13, %270
  %272 = xor i32 %5, %3
  %273 = xor i32 %272, -1
  %274 = or i32 %273, %4
  %275 = or i32 %272, %270
  %276 = shl i32 %275, 1
  %277 = and i32 %5, %4
  %278 = xor i32 %277, -1
  %279 = xor i32 %4, %3
  %280 = xor i32 %279, -1
  %281 = and i32 %278, %280
  %282 = or i32 %5, %4
  %283 = xor i32 %282, -1
  %284 = or i32 %279, %283
  %285 = and i32 %268, %4
  %286 = xor i32 %285, -1
  %287 = and i32 %13, %286
  %288 = or i32 %5, %3
  %289 = xor i32 %288, -1
  %290 = or i32 %289, %4
  %291 = or i32 %13, %4
  %292 = xor i32 %291, -1
  %293 = or i32 %292, %268
  %294 = and i32 %268, %5
  %295 = and i32 %294, %4
  %296 = xor i32 %272, %4
  %297 = or i32 %295, %296
  %298 = and i32 %5, %3
  %299 = and i32 %298, %4
  %300 = xor i32 %4, -1
  %301 = and i32 %288, %300
  %302 = or i32 %299, %301
  %303 = xor i32 %296, -1
  %304 = or i32 %299, %303
  %305 = shl i32 %304, 2
  %306 = xor i32 %270, %5
  %307 = and i32 %13, %3
  %308 = xor i32 %307, -1
  %309 = or i32 %308, %4
  %310 = xor i32 %5, %4
  %311 = or i32 %310, %14
  %312 = or i32 %310, %270
  %313 = or i32 %272, %4
  %314 = and i32 %282, %280
  %315 = or i32 %270, %5
  %316 = and i32 %294, %300
  %317 = or i32 %272, %300
  %318 = xor i32 %317, -1
  %319 = or i32 %316, %318
  %320 = xor i32 %298, -1
  %321 = shl i32 %320, 2
  %322 = and i32 %279, %278
  %323 = shl i32 %322, 1
  %324 = xor i32 %310, -1
  %325 = or i32 %279, %324
  %326 = and i32 %308, %300
  %327 = and i32 %291, %279
  %328 = xor i32 %277, %288
  %329 = and i32 %320, %300
  %330 = and i32 %272, %286
  %331 = and i32 %13, %4
  %332 = or i32 %13, %3
  %333 = xor i32 %331, %332
  %334 = and i32 %332, %4
  %335 = xor i32 %332, -1
  %336 = xor i32 %335, %4
  %337 = xor i32 %288, %4
  %338 = or i32 %299, %337
  %339 = xor i32 %14, -1
  %340 = and i32 %324, %339
  %341 = shl i32 %340, 1
  %342 = and i32 %324, %3
  %343 = shl i32 %342, 1
  %344 = and i32 %286, %5
  %345 = or i32 %272, %285
  %346 = or i32 %331, %335
  %347 = xor i32 %10, -1
  %348 = xor i32 %347, %5
  %349 = shl i32 %348, 1
  %350 = and i32 %298, %300
  %351 = and i32 %272, %4
  %352 = xor i32 %350, -1
  %353 = xor i32 %351, %352
  %354 = xor i32 %278, %3
  %355 = or i32 %288, %300
  %356 = or i32 %268, %5
  %357 = and i32 %356, %300
  %358 = or i32 %295, %357
  %359 = and i32 %273, %4
  %360 = or i32 %324, %280
  %361 = and i32 %310, %269
  %362 = and i32 %272, %300
  %363 = or i32 %299, %362
  %364 = shl i32 %363, 1
  %365 = xor i32 %286, %5
  %366 = or i32 %347, %5
  %367 = or i32 %277, %279
  %368 = or i32 %331, %298
  %369 = or i32 %310, %285
  %370 = and i32 %10, %5
  %371 = or i32 %289, %300
  %372 = or i32 %272, %347
  %373 = xor i32 %277, %308
  %374 = shl i32 %373, 1
  %375 = xor i32 %357, -1
  %376 = xor i32 %295, %375
  %377 = and i32 %269, %13
  %378 = or i32 %283, %3
  %379 = and i32 %272, %269
  %380 = shl i32 %286, 1
  %381 = xor i32 %298, %4
  %382 = xor i32 %332, %14
  %383 = xor i32 %282, %3
  %384 = and i32 %339, %5
  %385 = or i32 %298, %4
  %386 = or i32 %292, %280
  %387 = or i32 %277, %347
  %388 = add i32 %272, 1
  %389 = xor i32 %273, %4
  %390 = xor i32 %331, -1
  %391 = and i32 %390, %280
  %392 = and i32 %13, %280
  %393 = xor i32 %277, %269
  %394 = or i32 %279, %13
  %395 = or i32 %285, %324
  %396 = or i32 %285, %13
  %397 = and i32 %320, %4
  %398 = or i32 %324, %268
  %399 = add i32 %331, 1
  %400 = xor i32 %308, %4
  %401 = or i32 %307, %300
  %402 = or i32 %324, %270
  %403 = or i32 %277, %280
  %404 = or i32 %273, %270
  %405 = xor i32 %14, %5
  %406 = xor i32 %291, %14
  %407 = and i32 %273, %286
  %408 = and i32 %310, %268
  %409 = or i32 %331, %280
  %410 = or i32 %298, %285
  %411 = or i32 %285, %273
  %412 = or i32 %307, %285
  %413 = or i32 %14, %292
  %414 = and i32 %282, %268
  %415 = shl i32 %414, 1
  %416 = or i32 %283, %268
  %417 = shl i32 %416, 2
  %418 = and i32 %288, %4
  %419 = or i32 %350, %418
  %420 = or i32 %279, %5
  %421 = or i32 %298, %300
  %422 = or i32 %320, %4
  %423 = and i32 %324, %286
  %424 = or i32 %14, %289
  %425 = xor i32 %299, %296
  %426 = or i32 %308, %300
  %427 = xor i32 %299, -1
  %428 = xor i32 %362, %427
  %429 = xor i32 %356, %4
  %430 = or i32 %295, %429
  %431 = or i32 %331, %3
  %432 = shl i32 %431, 1
  %433 = or i32 %331, %279
  %434 = and i32 %310, %10
  %435 = or i32 %307, %4
  %436 = and i32 %273, %339
  %437 = and i32 %291, %268
  %438 = or i32 %310, %279
  %439 = or i32 %310, %347
  %440 = or i32 %13, %347
  %441 = and i32 %279, %324
  %442 = and i32 %310, %280
  %443 = and i32 %10, %13
  %444 = or i32 %273, %300
  %445 = shl i32 %444, 1
  %446 = or i32 %272, %14
  %447 = xor i32 %285, %308
  %448 = and i32 %390, %268
  %449 = and i32 %390, %3
  %450 = xor i32 %295, %303
  %451 = and i32 %273, %300
  %452 = and i32 %282, %279
  %453 = xor i32 %283, %3
  %454 = xor i32 %307, %4
  %455 = xor i32 %285, %320
  %456 = xor i32 %277, %3
  %457 = and i32 %279, %13
  %458 = shl i32 %457, 1
  %459 = and i32 %279, %390
  %460 = and i32 %310, %339
  %461 = or i32 %277, %270
  %462 = xor i32 %10, %5
  %463 = and i32 %10, %273
  %464 = shl i32 %463, 2
  %465 = or i32 %14, %283
  %466 = shl i32 %465, 1
  %467 = or i32 %324, %347
  %468 = or i32 %331, %268
  %469 = or i32 %332, %4
  %470 = xor i32 %282, %14
  %471 = or i32 %273, %347
  %472 = or i32 %279, %292
  %473 = shl i32 %472, 1
  %474 = and i32 %356, %4
  %475 = or i32 %316, %474
  %476 = and i32 %279, %5
  %477 = and i32 %310, %3
  %478 = or i32 %14, %273
  %479 = or i32 %310, %3
  %480 = xor i32 %337, %427
  %481 = add i32 %14, 1
  %482 = add i32 %291, 1
  %483 = and i32 %324, %268
  %484 = shl i32 %483, 1
  %485 = or i32 %14, %5
  %486 = or i32 %14, %335
  %487 = or i32 %335, %300
  %488 = or i32 %277, %289
  %489 = and i32 %310, %286
  %490 = and i32 %269, %273
  %491 = or i32 %285, %5
  %492 = xor i32 %418, %352
  %493 = and i32 %278, %3
  %494 = or i32 %292, %3
  %495 = or i32 %332, %300
  %496 = and i32 %269, %324
  %497 = xor i32 %474, -1
  %498 = xor i32 %316, %497
  %499 = xor i32 %289, %4
  %500 = xor i32 %331, %3
  %501 = xor i32 %339, %5
  %502 = xor i32 %292, %3
  %503 = and i32 %280, %5
  %504 = add i32 %4, 1
  %505 = xor i32 %313, -1
  %506 = or i32 %295, %505
  %507 = add i32 %310, 1
  %508 = xor i32 %288, %14
  %509 = or i32 %283, %280
  %510 = shl i32 %509, 1
  %511 = xor i32 %301, %427
  %512 = and i32 %332, %300
  %513 = or i32 %277, %307
  %514 = shl i32 %513, 1
  %515 = and i32 %310, %279
  %516 = and i32 %282, %3
  %517 = and i32 %324, %280
  %518 = and i32 %278, %268
  %519 = and i32 %269, %5
  %520 = xor i32 %429, 2147483647
  %521 = xor i32 %520, %295
  %522 = shl i32 %521, 1
  %523 = or i32 %310, %280
  %524 = and i32 %13, %339
  %525 = xor i32 %316, %317
  %526 = or i32 %13, %280
  %527 = or i32 %288, %4
  %528 = and i32 %272, %10
  %529 = or i32 %320, %300
  %530 = add i32 %332, 1
  %531 = and i32 %272, %339
  %532 = and i32 %291, %3
  %533 = xor i32 %291, %3
  %534 = or i32 %277, %3
  %535 = shl i32 %534, 1
  %536 = xor i32 %390, %3
  %537 = and i32 %291, %280
  %538 = or i32 %350, %351
  %539 = xor i32 %277, %10
  %540 = xor i32 %285, %5
  %541 = and i32 %10, %324
  %542 = and i32 %289, %300
  %543 = and i32 %307, %300
  %544 = mul i32 %543, 27
  %545 = and i32 %289, %4
  %546 = mul i32 %545, 33
  %547 = and i32 %307, %4
  %548 = and i32 %335, %300
  %549 = mul i32 %350, 14
  %550 = and i32 %335, %4
  %551 = mul i32 %550, 18
  %552 = add i32 %53, %1
  %553 = add i32 %552, %8
  %554 = add i32 %553, %176
  %555 = add i32 %554, %115
  %556 = add i32 %555, %23
  %557 = add i32 %556, %252
  %558 = add i32 %557, %246
  %559 = add i32 %558, %244
  %560 = add i32 %559, %233
  %561 = add i32 %560, %198
  %562 = add i32 %561, %194
  %563 = add i32 %562, %153
  %564 = add i32 %563, %148
  %565 = add i32 %564, %133
  %566 = add i32 %565, %125
  %567 = add i32 %566, %116
  %568 = add i32 %567, %111
  %569 = add i32 %568, %90
  %570 = add i32 %569, %69
  %571 = add i32 %570, %282
  %572 = add i32 %571, %287
  %573 = add i32 %572, %516
  %574 = add i32 %573, %495
  %575 = add i32 %574, %488
  %576 = add i32 %575, %471
  %577 = add i32 %576, %422
  %578 = add i32 %577, %411
  %579 = add i32 %578, %410
  %580 = add i32 %579, %403
  %581 = add i32 %580, %326
  %582 = add i32 %581, %314
  %583 = add i32 %582, %358
  %584 = shl i32 %583, 1
  %585 = add i32 %98, %245
  %586 = sub i32 %585, %114
  %587 = add i32 %586, %27
  %588 = sub i32 %587, %220
  %589 = sub i32 %588, %291
  %590 = sub i32 %589, %500
  %591 = add i32 %590, %547
  %592 = add i32 %591, %486
  %593 = mul i32 %592, 5
  %594 = add i32 %219, %138
  %595 = add i32 %594, %519
  %596 = add i32 %595, %278
  %597 = add i32 %596, %532
  %598 = add i32 %597, %299
  %599 = add i32 %598, %337
  %600 = shl i32 %599, 2
  %601 = add i32 %548, %258
  %602 = mul i32 %601, -11
  %603 = xor i32 %155, -1
  %604 = add i32 %231, %603
  %605 = sub i32 %604, %212
  %606 = add i32 %605, %50
  %607 = sub i32 %606, %315
  %608 = add i32 %607, %461
  %609 = add i32 %608, %391
  %610 = add i32 %609, %387
  %611 = sub i32 %610, %297
  %612 = mul i32 %611, 3
  %613 = add i32 %0, %1
  %614 = add i32 %613, %49
  %615 = add i32 %614, 7
  %616 = add i32 %615, %51
  %617 = sub i32 %616, %42
  %618 = add i32 %617, %87
  %619 = add i32 %618, %217
  %620 = add i32 %619, %35
  %621 = add i32 %620, %43
  %622 = add i32 %621, %44
  %623 = sub i32 %622, %62
  %624 = sub i32 %623, %25
  %625 = add i32 %624, %67
  %626 = sub i32 %625, %68
  %627 = sub i32 %626, %71
  %628 = sub i32 %627, %76
  %629 = sub i32 %628, %91
  %630 = sub i32 %629, %103
  %631 = sub i32 %630, %106
  %632 = add i32 %631, %124
  %633 = add i32 %632, %126
  %634 = add i32 %633, %127
  %635 = add i32 %634, %86
  %636 = add i32 %635, %141
  %637 = add i32 %636, %159
  %638 = sub i32 %637, %165
  %639 = add i32 %638, %191
  %640 = add i32 %639, %199
  %641 = sub i32 %640, %205
  %642 = sub i32 %641, %81
  %643 = sub i32 %642, %232
  %644 = add i32 %643, %234
  %645 = add i32 %644, %236
  %646 = sub i32 %645, %237
  %647 = add i32 %646, %238
  %648 = add i32 %647, %240
  %649 = add i32 %648, %242
  %650 = sub i32 %649, %247
  %651 = sub i32 %650, %254
  %652 = sub i32 %651, %36
  %653 = add i32 %652, %37
  %654 = sub i32 %653, %41
  %655 = add i32 %654, %46
  %656 = sub i32 %655, %48
  %657 = add i32 %656, %52
  %658 = sub i32 %657, %55
  %659 = sub i32 %658, %57
  %660 = sub i32 %659, %59
  %661 = sub i32 %660, %64
  %662 = add i32 %661, %65
  %663 = sub i32 %662, %66
  %664 = sub i32 %663, %70
  %665 = add i32 %664, %72
  %666 = add i32 %665, %75
  %667 = add i32 %666, %77
  %668 = add i32 %667, %79
  %669 = sub i32 %668, %80
  %670 = add i32 %669, %82
  %671 = add i32 %670, %83
  %672 = sub i32 %671, %84
  %673 = sub i32 %672, %85
  %674 = sub i32 %673, %89
  %675 = sub i32 %674, %97
  %676 = add i32 %675, %100
  %677 = add i32 %676, %105
  %678 = sub i32 %677, %107
  %679 = sub i32 %678, %113
  %680 = add i32 %679, %119
  %681 = add i32 %680, %120
  %682 = add i32 %681, %123
  %683 = sub i32 %682, %128
  %684 = sub i32 %683, %129
  %685 = add i32 %684, %139
  %686 = add i32 %685, %140
  %687 = sub i32 %686, %144
  %688 = sub i32 %687, %145
  %689 = add i32 %688, %146
  %690 = sub i32 %689, %147
  %691 = sub i32 %690, %149
  %692 = add i32 %691, %151
  %693 = add i32 %692, %152
  %694 = sub i32 %693, %154
  %695 = sub i32 %694, %157
  %696 = sub i32 %695, %158
  %697 = sub i32 %696, %160
  %698 = sub i32 %697, %162
  %699 = add i32 %698, %167
  %700 = add i32 %699, %168
  %701 = sub i32 %700, %169
  %702 = add i32 %701, %170
  %703 = sub i32 %702, %171
  %704 = sub i32 %703, %172
  %705 = sub i32 %704, %173
  %706 = sub i32 %705, %177
  %707 = add i32 %706, %178
  %708 = sub i32 %707, %180
  %709 = sub i32 %708, %181
  %710 = add i32 %709, %182
  %711 = sub i32 %710, %183
  %712 = add i32 %711, %184
  %713 = sub i32 %712, %185
  %714 = add i32 %713, %186
  %715 = sub i32 %714, %187
  %716 = sub i32 %715, %189
  %717 = add i32 %716, %190
  %718 = add i32 %717, %192
  %719 = add i32 %718, %193
  %720 = sub i32 %719, %195
  %721 = sub i32 %720, %196
  %722 = add i32 %721, %197
  %723 = add i32 %722, %211
  %724 = add i32 %723, %213
  %725 = add i32 %724, %214
  %726 = sub i32 %725, %215
  %727 = sub i32 %726, %216
  %728 = sub i32 %727, %218
  %729 = add i32 %728, %31
  %730 = sub i32 %729, %221
  %731 = sub i32 %730, %222
  %732 = add i32 %731, %223
  %733 = sub i32 %732, %224
  %734 = add i32 %733, %225
  %735 = add i32 %734, %226
  %736 = sub i32 %735, %227
  %737 = add i32 %736, %228
  %738 = sub i32 %737, %229
  %739 = add i32 %738, %230
  %740 = sub i32 %739, %235
  %741 = add i32 %740, %239
  %742 = sub i32 %741, %241
  %743 = add i32 %742, %248
  %744 = add i32 %743, %249
  %745 = add i32 %744, %253
  %746 = add i32 %745, %255
  %747 = sub i32 %746, %134
  %748 = add i32 %747, %504
  %749 = add i32 %748, %22
  %750 = sub i32 %749, %33
  %751 = add i32 %750, %38
  %752 = sub i32 %751, %60
  %753 = sub i32 %752, %74
  %754 = add i32 %753, %96
  %755 = sub i32 %754, %99
  %756 = sub i32 %755, %102
  %757 = sub i32 %756, %109
  %758 = sub i32 %757, %112
  %759 = sub i32 %758, %118
  %760 = sub i32 %759, %122
  %761 = add i32 %760, %132
  %762 = sub i32 %761, %143
  %763 = add i32 %762, %156
  %764 = sub i32 %763, %161
  %765 = sub i32 %764, %164
  %766 = add i32 %765, %166
  %767 = sub i32 %766, %175
  %768 = add i32 %767, %179
  %769 = sub i32 %768, %188
  %770 = sub i32 %769, %201
  %771 = add i32 %770, %202
  %772 = sub i32 %771, %204
  %773 = add i32 %772, %206
  %774 = sub i32 %773, %208
  %775 = sub i32 %774, %210
  %776 = add i32 %775, %243
  %777 = add i32 %776, %251
  %778 = add i32 %777, %257
  %779 = add i32 %778, %260
  %780 = add i32 %779, %262
  %781 = add i32 %780, %264
  %782 = add i32 %781, %265
  %783 = add i32 %782, %267
  %784 = sub i32 %783, %279
  %785 = add i32 %784, %14
  %786 = add i32 %785, %347
  %787 = add i32 %786, %481
  %788 = add i32 %787, %270
  %789 = sub i32 %788, %269
  %790 = add i32 %789, %280
  %791 = sub i32 %790, %285
  %792 = sub i32 %791, %271
  %793 = add i32 %792, %306
  %794 = add i32 %793, %272
  %795 = add i32 %794, %289
  %796 = add i32 %795, %344
  %797 = sub i32 %796, %365
  %798 = sub i32 %797, %366
  %799 = add i32 %798, %370
  %800 = add i32 %799, %377
  %801 = add i32 %800, %331
  %802 = sub i32 %801, %288
  %803 = sub i32 %802, %380
  %804 = sub i32 %803, %384
  %805 = add i32 %804, %388
  %806 = add i32 %805, %392
  %807 = sub i32 %806, %394
  %808 = add i32 %807, %396
  %809 = add i32 %808, %399
  %810 = add i32 %809, %405
  %811 = add i32 %810, %308
  %812 = add i32 %811, %332
  %813 = add i32 %812, %420
  %814 = add i32 %813, %440
  %815 = sub i32 %814, %443
  %816 = add i32 %815, %277
  %817 = sub i32 %816, %462
  %818 = sub i32 %817, %307
  %819 = sub i32 %818, %476
  %820 = add i32 %819, %482
  %821 = sub i32 %820, %485
  %822 = add i32 %821, %283
  %823 = sub i32 %822, %491
  %824 = sub i32 %823, %501
  %825 = add i32 %824, %503
  %826 = add i32 %825, %507
  %827 = add i32 %826, %310
  %828 = sub i32 %827, %524
  %829 = add i32 %828, %526
  %830 = add i32 %829, %530
  %831 = add i32 %830, %298
  %832 = sub i32 %831, %540
  %833 = sub i32 %832, %137
  %834 = sub i32 %833, %274
  %835 = sub i32 %834, %281
  %836 = sub i32 %835, %284
  %837 = add i32 %836, %290
  %838 = sub i32 %837, %293
  %839 = add i32 %838, %309
  %840 = sub i32 %839, %311
  %841 = add i32 %840, %312
  %842 = sub i32 %841, %313
  %843 = sub i32 %842, %321
  %844 = add i32 %843, %325
  %845 = sub i32 %844, %327
  %846 = add i32 %845, %328
  %847 = add i32 %846, %329
  %848 = add i32 %847, %330
  %849 = sub i32 %848, %333
  %850 = add i32 %849, %334
  %851 = add i32 %850, %336
  %852 = add i32 %851, %345
  %853 = sub i32 %852, %346
  %854 = sub i32 %853, %349
  %855 = sub i32 %854, %354
  %856 = add i32 %855, %355
  %857 = add i32 %856, %317
  %858 = sub i32 %857, %359
  %859 = sub i32 %858, %360
  %860 = add i32 %859, %361
  %861 = sub i32 %860, %367
  %862 = sub i32 %861, %368
  %863 = sub i32 %862, %369
  %864 = sub i32 %863, %371
  %865 = add i32 %864, %372
  %866 = add i32 %865, %378
  %867 = sub i32 %866, %379
  %868 = add i32 %867, %362
  %869 = sub i32 %868, %381
  %870 = sub i32 %869, %382
  %871 = add i32 %870, %383
  %872 = sub i32 %871, %385
  %873 = sub i32 %872, %386
  %874 = add i32 %873, %389
  %875 = sub i32 %874, %393
  %876 = sub i32 %875, %395
  %877 = sub i32 %876, %397
  %878 = add i32 %877, %398
  %879 = sub i32 %878, %400
  %880 = sub i32 %879, %401
  %881 = add i32 %880, %402
  %882 = add i32 %881, %404
  %883 = add i32 %882, %406
  %884 = add i32 %883, %407
  %885 = add i32 %884, %408
  %886 = sub i32 %885, %409
  %887 = sub i32 %886, %412
  %888 = add i32 %887, %413
  %889 = add i32 %888, %301
  %890 = add i32 %889, %421
  %891 = add i32 %890, %423
  %892 = sub i32 %891, %424
  %893 = add i32 %892, %426
  %894 = sub i32 %893, %433
  %895 = sub i32 %894, %434
  %896 = sub i32 %895, %435
  %897 = sub i32 %896, %436
  %898 = add i32 %897, %437
  %899 = add i32 %898, %438
  %900 = sub i32 %899, %439
  %901 = sub i32 %900, %441
  %902 = add i32 %901, %442
  %903 = sub i32 %902, %446
  %904 = sub i32 %903, %447
  %905 = add i32 %904, %448
  %906 = sub i32 %905, %449
  %907 = add i32 %906, %451
  %908 = sub i32 %907, %452
  %909 = add i32 %908, %453
  %910 = add i32 %909, %454
  %911 = sub i32 %910, %455
  %912 = add i32 %911, %456
  %913 = sub i32 %912, %458
  %914 = add i32 %913, %459
  %915 = sub i32 %914, %460
  %916 = add i32 %915, %467
  %917 = sub i32 %916, %468
  %918 = add i32 %917, %469
  %919 = sub i32 %918, %470
  %920 = add i32 %919, %477
  %921 = sub i32 %920, %478
  %922 = sub i32 %921, %479
  %923 = add i32 %922, %487
  %924 = add i32 %923, %489
  %925 = add i32 %924, %490
  %926 = sub i32 %925, %493
  %927 = add i32 %926, %296
  %928 = sub i32 %927, %494
  %929 = sub i32 %928, %496
  %930 = sub i32 %929, %499
  %931 = add i32 %930, %418
  %932 = sub i32 %931, %502
  %933 = sub i32 %932, %508
  %934 = sub i32 %933, %512
  %935 = add i32 %934, %515
  %936 = sub i32 %935, %517
  %937 = sub i32 %936, %518
  %938 = sub i32 %937, %523
  %939 = sub i32 %938, %527
  %940 = sub i32 %939, %528
  %941 = add i32 %940, %529
  %942 = add i32 %941, %531
  %943 = add i32 %942, %533
  %944 = add i32 %943, %536
  %945 = add i32 %944, %537
  %946 = add i32 %945, %539
  %947 = add i32 %946, %541
  %948 = add i32 %947, %542
  %949 = sub i32 %948, %276
  %950 = add i32 %949, %302
  %951 = add i32 %950, %319
  %952 = sub i32 %951, %323
  %953 = add i32 %952, %338
  %954 = sub i32 %953, %341
  %955 = sub i32 %954, %343
  %956 = sub i32 %955, %353
  %957 = sub i32 %956, %374
  %958 = sub i32 %957, %376
  %959 = sub i32 %958, %415
  %960 = sub i32 %959, %417
  %961 = add i32 %960, %419
  %962 = add i32 %961, %425
  %963 = sub i32 %962, %428
  %964 = sub i32 %963, %430
  %965 = sub i32 %964, %432
  %966 = sub i32 %965, %445
  %967 = add i32 %966, %450
  %968 = sub i32 %967, %464
  %969 = sub i32 %968, %466
  %970 = sub i32 %969, %473
  %971 = sub i32 %970, %475
  %972 = sub i32 %971, %480
  %973 = sub i32 %972, %484
  %974 = add i32 %973, %492
  %975 = add i32 %974, %498
  %976 = add i32 %975, %506
  %977 = sub i32 %976, %510
  %978 = add i32 %977, %511
  %979 = sub i32 %978, %514
  %980 = add i32 %979, %525
  %981 = sub i32 %980, %535
  %982 = sub i32 %981, %538
  %983 = add i32 %982, %544
  %984 = add i32 %983, %546
  %985 = add i32 %984, %549
  %986 = add i32 %985, %551
  %987 = sub i32 %986, %305
  %988 = sub i32 %987, %364
  %989 = add i32 %988, %602
  %990 = sub i32 %989, %522
  %991 = add i32 %990, %600
  %992 = add i32 %991, %593
  %993 = add i32 %992, %612
  %994 = add i32 %993, %584
  %995 = icmp eq i32 %16, %994
  %996 = select i1 %995, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %997 = tail call i32 @puts(i8* nonnull dereferenceable(1) %996)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
