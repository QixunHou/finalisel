digraph "DFG for'main' function" {
	Node0x1aaff98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ab0018[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ab00a8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1ab0508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ab05e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1ab0708[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ab0940[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1ab09f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ab1968[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ab1ff0[shape=record, label="  %8 = mul i32 %7, -3"];
	Node0x1ab2060[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x1ab20d0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1ab2140[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x1ab21b0[shape=record, label="  %12 = shl i32 %11, 2"];
	Node0x1ab2220[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x1ab2290[shape=record, label="  %14 = or i32 %6, %13"];
	Node0x1ab2300[shape=record, label="  %15 = and i32 %6, %13"];
	Node0x1ab2370[shape=record, label="  %16 = shl i32 %6, 1"];
	Node0x1ab23e0[shape=record, label="  %17 = xor i32 %11, -1"];
	Node0x1ab2450[shape=record, label="  %18 = mul i32 %17, 3"];
	Node0x1ab24c0[shape=record, label="  %19 = xor i32 %14, -1"];
	Node0x1ab2530[shape=record, label="  %20 = mul i32 %15, 11"];
	Node0x1ab25a0[shape=record, label="  %21 = and i32 %7, %6"];
	Node0x1ab2610[shape=record, label="  %22 = add i32 %21, %19"];
	Node0x1ab2680[shape=record, label="  %23 = mul i32 %22, 7"];
	Node0x1ab26f0[shape=record, label="  %24 = sub i32 5, %6"];
	Node0x1ab2760[shape=record, label="  %25 = sub i32 %24, %16"];
	Node0x1ab27d0[shape=record, label="  %26 = add i32 %25, %10"];
	Node0x1ab2840[shape=record, label="  %27 = add i32 %26, %14"];
	Node0x1ab28b0[shape=record, label="  %28 = sub i32 %27, %9"];
	Node0x1ab2920[shape=record, label="  %29 = add i32 %28, %15"];
	Node0x1ab2990[shape=record, label="  %30 = sub i32 %29, %12"];
	Node0x1ab2a00[shape=record, label="  %31 = add i32 %30, %18"];
	Node0x1ab2a70[shape=record, label="  %32 = add i32 %31, %20"];
	Node0x1ab2cf0[shape=record, label="  %33 = add i32 %32, %23"];
	Node0x1ab2d60[shape=record, label="  %34 = icmp eq i32 %8, %33"];
	Node0x1a509d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ab2df0[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0x1ab3048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ab31a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ab3268[shape=record, label="  ret i32 0"];
	Node0x1aaff98 -> Node0x1ab0018;
	Node0x1ab0018 -> Node0x1ab00a8;
	Node0x1ab00a8 -> Node0x1ab0508;
	Node0x1ab0508 -> Node0x1ab05e8;
	Node0x1ab05e8 -> Node0x1ab0708;
	Node0x1ab0708 -> Node0x1ab0940;
	Node0x1ab0940 -> Node0x1ab09f8;
	Node0x1ab09f8 -> Node0x1ab1968;
	Node0x1ab1968 -> Node0x1ab1ff0;
	Node0x1ab1ff0 -> Node0x1ab2060;
	Node0x1ab2060 -> Node0x1ab20d0;
	Node0x1ab20d0 -> Node0x1ab2140;
	Node0x1ab2140 -> Node0x1ab21b0;
	Node0x1ab21b0 -> Node0x1ab2220;
	Node0x1ab2220 -> Node0x1ab2290;
	Node0x1ab2290 -> Node0x1ab2300;
	Node0x1ab2300 -> Node0x1ab2370;
	Node0x1ab2370 -> Node0x1ab23e0;
	Node0x1ab23e0 -> Node0x1ab2450;
	Node0x1ab2450 -> Node0x1ab24c0;
	Node0x1ab24c0 -> Node0x1ab2530;
	Node0x1ab2530 -> Node0x1ab25a0;
	Node0x1ab25a0 -> Node0x1ab2610;
	Node0x1ab2610 -> Node0x1ab2680;
	Node0x1ab2680 -> Node0x1ab26f0;
	Node0x1ab26f0 -> Node0x1ab2760;
	Node0x1ab2760 -> Node0x1ab27d0;
	Node0x1ab27d0 -> Node0x1ab2840;
	Node0x1ab2840 -> Node0x1ab28b0;
	Node0x1ab28b0 -> Node0x1ab2920;
	Node0x1ab2920 -> Node0x1ab2990;
	Node0x1ab2990 -> Node0x1ab2a00;
	Node0x1ab2a00 -> Node0x1ab2a70;
	Node0x1ab2a70 -> Node0x1ab2cf0;
	Node0x1ab2cf0 -> Node0x1ab2d60;
	Node0x1ab2d60 -> Node0x1a509d8;
	Node0x1a509d8 -> Node0x1ab2df0;
	Node0x1ab2df0 -> Node0x1ab3048;
	Node0x1ab3048 -> Node0x1ab31a8;
	Node0x1ab31a8 -> Node0x1ab3268;
edge [color=red]
	Node0x1aaff98 -> Node0x1ab00a8;
	Node0x1ab00a8 -> Node0x1ab0508;
	Node0x1ab0018 -> Node0x1ab05e8;
	Node0x1ab05e8 -> Node0x1ab0708;
	Node0x1aaff98 -> Node0x1ab0940;
	Node0x1ab0018 -> Node0x1ab0940;
	Node0x1aaff98 -> Node0x1ab09f8;
	Node0x1ab0018 -> Node0x1ab1968;
	Node0x1ab1968 -> Node0x1ab1ff0;
	Node0x1ab1968 -> Node0x1ab2060;
	Node0x1ab09f8 -> Node0x1ab2060;
	Node0x1ab2060 -> Node0x1ab20d0;
	Node0x1ab1968 -> Node0x1ab2140;
	Node0x1ab09f8 -> Node0x1ab2140;
	Node0x1ab2140 -> Node0x1ab21b0;
	Node0x1ab1968 -> Node0x1ab2220;
	Node0x1ab09f8 -> Node0x1ab2290;
	Node0x1ab2220 -> Node0x1ab2290;
	Node0x1ab09f8 -> Node0x1ab2300;
	Node0x1ab2220 -> Node0x1ab2300;
	Node0x1ab09f8 -> Node0x1ab2370;
	Node0x1ab2140 -> Node0x1ab23e0;
	Node0x1ab23e0 -> Node0x1ab2450;
	Node0x1ab2290 -> Node0x1ab24c0;
	Node0x1ab2300 -> Node0x1ab2530;
	Node0x1ab1968 -> Node0x1ab25a0;
	Node0x1ab09f8 -> Node0x1ab25a0;
	Node0x1ab25a0 -> Node0x1ab2610;
	Node0x1ab24c0 -> Node0x1ab2610;
	Node0x1ab2610 -> Node0x1ab2680;
	Node0x1ab09f8 -> Node0x1ab26f0;
	Node0x1ab26f0 -> Node0x1ab2760;
	Node0x1ab2370 -> Node0x1ab2760;
	Node0x1ab2760 -> Node0x1ab27d0;
	Node0x1ab20d0 -> Node0x1ab27d0;
	Node0x1ab27d0 -> Node0x1ab2840;
	Node0x1ab2290 -> Node0x1ab2840;
	Node0x1ab2840 -> Node0x1ab28b0;
	Node0x1ab2060 -> Node0x1ab28b0;
	Node0x1ab28b0 -> Node0x1ab2920;
	Node0x1ab2300 -> Node0x1ab2920;
	Node0x1ab2920 -> Node0x1ab2990;
	Node0x1ab21b0 -> Node0x1ab2990;
	Node0x1ab2990 -> Node0x1ab2a00;
	Node0x1ab2450 -> Node0x1ab2a00;
	Node0x1ab2a00 -> Node0x1ab2a70;
	Node0x1ab2530 -> Node0x1ab2a70;
	Node0x1ab2a70 -> Node0x1ab2cf0;
	Node0x1ab2680 -> Node0x1ab2cf0;
	Node0x1ab1ff0 -> Node0x1ab2d60;
	Node0x1ab2cf0 -> Node0x1ab2d60;
	Node0x1ab2d60 -> Node0x1a509d8;
	Node0x1a509d8 -> Node0x1ab2df0;
	Node0x1ab05e8 -> Node0x1ab3048;
	Node0x1ab00a8 -> Node0x1ab31a8;
}
