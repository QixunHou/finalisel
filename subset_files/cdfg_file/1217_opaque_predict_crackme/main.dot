digraph "DFG for'main' function" {
	Node0x11dfd28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11dfda8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11dfe38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x11e0298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x11e0378[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x11e0498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11e06d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x11e0788[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11e16f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11e1d80[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x11e1df0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x11e1e60[shape=record, label="  %10 = sub i32 %9, %8"];
	Node0x11e1ed0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x11e1f40[shape=record, label="  %12 = and i32 %6, %9"];
	Node0x11e1fb0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x11e2020[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x11e2090[shape=record, label="  %15 = or i32 %6, %9"];
	Node0x11e2100[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x11e2170[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x11e21e0[shape=record, label="  %18 = xor i32 %8, -1"];
	Node0x11e2250[shape=record, label="  %19 = mul i32 %18, 5"];
	Node0x11e22c0[shape=record, label="  %20 = mul i32 %14, -3"];
	Node0x11e2330[shape=record, label="  %21 = add i32 %12, %6"];
	Node0x11e23a0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x11e2410[shape=record, label="  %23 = add i32 %7, 3"];
	Node0x11e2480[shape=record, label="  %24 = sub i32 %23, %13"];
	Node0x11e24f0[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x11e2560[shape=record, label="  %26 = add i32 %25, %15"];
	Node0x11e25d0[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x11e2640[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x11e26b0[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x11e2720[shape=record, label="  %30 = add i32 %29, %22"];
	Node0x11e2790[shape=record, label="  %31 = icmp eq i32 %11, %30"];
	Node0x11809d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x11e2a30[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x11e2c88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11e2de8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x11e2ea8[shape=record, label="  ret i32 0"];
	Node0x11dfd28 -> Node0x11dfda8;
	Node0x11dfda8 -> Node0x11dfe38;
	Node0x11dfe38 -> Node0x11e0298;
	Node0x11e0298 -> Node0x11e0378;
	Node0x11e0378 -> Node0x11e0498;
	Node0x11e0498 -> Node0x11e06d0;
	Node0x11e06d0 -> Node0x11e0788;
	Node0x11e0788 -> Node0x11e16f8;
	Node0x11e16f8 -> Node0x11e1d80;
	Node0x11e1d80 -> Node0x11e1df0;
	Node0x11e1df0 -> Node0x11e1e60;
	Node0x11e1e60 -> Node0x11e1ed0;
	Node0x11e1ed0 -> Node0x11e1f40;
	Node0x11e1f40 -> Node0x11e1fb0;
	Node0x11e1fb0 -> Node0x11e2020;
	Node0x11e2020 -> Node0x11e2090;
	Node0x11e2090 -> Node0x11e2100;
	Node0x11e2100 -> Node0x11e2170;
	Node0x11e2170 -> Node0x11e21e0;
	Node0x11e21e0 -> Node0x11e2250;
	Node0x11e2250 -> Node0x11e22c0;
	Node0x11e22c0 -> Node0x11e2330;
	Node0x11e2330 -> Node0x11e23a0;
	Node0x11e23a0 -> Node0x11e2410;
	Node0x11e2410 -> Node0x11e2480;
	Node0x11e2480 -> Node0x11e24f0;
	Node0x11e24f0 -> Node0x11e2560;
	Node0x11e2560 -> Node0x11e25d0;
	Node0x11e25d0 -> Node0x11e2640;
	Node0x11e2640 -> Node0x11e26b0;
	Node0x11e26b0 -> Node0x11e2720;
	Node0x11e2720 -> Node0x11e2790;
	Node0x11e2790 -> Node0x11809d8;
	Node0x11809d8 -> Node0x11e2a30;
	Node0x11e2a30 -> Node0x11e2c88;
	Node0x11e2c88 -> Node0x11e2de8;
	Node0x11e2de8 -> Node0x11e2ea8;
edge [color=red]
	Node0x11dfd28 -> Node0x11dfe38;
	Node0x11dfe38 -> Node0x11e0298;
	Node0x11dfda8 -> Node0x11e0378;
	Node0x11e0378 -> Node0x11e0498;
	Node0x11dfd28 -> Node0x11e06d0;
	Node0x11dfda8 -> Node0x11e06d0;
	Node0x11dfd28 -> Node0x11e0788;
	Node0x11dfda8 -> Node0x11e16f8;
	Node0x11e16f8 -> Node0x11e1d80;
	Node0x11e0788 -> Node0x11e1d80;
	Node0x11e16f8 -> Node0x11e1df0;
	Node0x11e1df0 -> Node0x11e1e60;
	Node0x11e1d80 -> Node0x11e1e60;
	Node0x11e1e60 -> Node0x11e1ed0;
	Node0x11e0788 -> Node0x11e1f40;
	Node0x11e1df0 -> Node0x11e1f40;
	Node0x11e16f8 -> Node0x11e1fb0;
	Node0x11e0788 -> Node0x11e1fb0;
	Node0x11e16f8 -> Node0x11e2020;
	Node0x11e0788 -> Node0x11e2020;
	Node0x11e0788 -> Node0x11e2090;
	Node0x11e1df0 -> Node0x11e2090;
	Node0x11e2090 -> Node0x11e2100;
	Node0x11e2100 -> Node0x11e2170;
	Node0x11e1d80 -> Node0x11e21e0;
	Node0x11e21e0 -> Node0x11e2250;
	Node0x11e2020 -> Node0x11e22c0;
	Node0x11e1f40 -> Node0x11e2330;
	Node0x11e0788 -> Node0x11e2330;
	Node0x11e2330 -> Node0x11e23a0;
	Node0x11e16f8 -> Node0x11e2410;
	Node0x11e2410 -> Node0x11e2480;
	Node0x11e1fb0 -> Node0x11e2480;
	Node0x11e2480 -> Node0x11e24f0;
	Node0x11e2020 -> Node0x11e24f0;
	Node0x11e24f0 -> Node0x11e2560;
	Node0x11e2090 -> Node0x11e2560;
	Node0x11e2560 -> Node0x11e25d0;
	Node0x11e2170 -> Node0x11e25d0;
	Node0x11e25d0 -> Node0x11e2640;
	Node0x11e2250 -> Node0x11e2640;
	Node0x11e2640 -> Node0x11e26b0;
	Node0x11e22c0 -> Node0x11e26b0;
	Node0x11e26b0 -> Node0x11e2720;
	Node0x11e23a0 -> Node0x11e2720;
	Node0x11e1ed0 -> Node0x11e2790;
	Node0x11e2720 -> Node0x11e2790;
	Node0x11e2790 -> Node0x11809d8;
	Node0x11809d8 -> Node0x11e2a30;
	Node0x11e0378 -> Node0x11e2c88;
	Node0x11dfe38 -> Node0x11e2de8;
}
