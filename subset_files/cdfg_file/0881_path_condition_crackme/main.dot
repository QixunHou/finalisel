digraph "DFG for'main' function" {
	Node0x208baa8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x208bb28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x208bbb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x208bc18[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x208bcc8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x208c0f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x208c1d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x208c2d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x208c398[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x208c448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x208c508[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x208c5b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2086ae0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x208c7b8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x208d728[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x208dd98[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x208ddf8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x208de70[shape=record, label="  %14 = mul i32 %12, -2"];
	Node0x208dee0[shape=record, label="  %15 = or i32 %14, 1"];
	Node0x208df50[shape=record, label="  %16 = add i32 %15, %11"];
	Node0x208dfc0[shape=record, label="  %17 = and i32 %13, %10"];
	Node0x208e030[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x208e0a0[shape=record, label="  %19 = add i32 %16, %18"];
	Node0x208e110[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x208e180[shape=record, label="  %21 = and i32 %11, %20"];
	Node0x208e1f0[shape=record, label="  %22 = or i32 %11, %20"];
	Node0x208e260[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x208e2d0[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x208e340[shape=record, label="  %25 = mul i32 %24, 5"];
	Node0x208e3b0[shape=record, label="  %26 = xor i32 %22, -1"];
	Node0x208e420[shape=record, label="  %27 = xor i32 %10, -1"];
	Node0x208e490[shape=record, label="  %28 = mul i32 %27, -3"];
	Node0x208e500[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x208e570[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x208e5e0[shape=record, label="  %31 = and i32 %13, %27"];
	Node0x208e650[shape=record, label="  %32 = xor i32 %30, -1"];
	Node0x208e6c0[shape=record, label="  %33 = mul i32 %32, 6"];
	Node0x208e730[shape=record, label="  %34 = add i32 %11, 1"];
	Node0x208e7a0[shape=record, label="  %35 = add i32 %34, %21"];
	Node0x208e810[shape=record, label="  %36 = add i32 %35, %13"];
	Node0x208e880[shape=record, label="  %37 = add i32 %36, %31"];
	Node0x208e8f0[shape=record, label="  %38 = add i32 %37, %29"];
	Node0x208e960[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x208e9d0[shape=record, label="  %40 = add i32 %11, 5"];
	Node0x208ea40[shape=record, label="  %41 = add i32 %40, %28"];
	Node0x208eab0[shape=record, label="  %42 = sub i32 %41, %22"];
	Node0x208eb20[shape=record, label="  %43 = add i32 %42, %23"];
	Node0x208eb90[shape=record, label="  %44 = add i32 %43, %26"];
	Node0x208ec00[shape=record, label="  %45 = add i32 %44, %25"];
	Node0x208ec70[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x208ece0[shape=record, label="  %47 = sub i32 %46, %31"];
	Node0x208ed50[shape=record, label="  %48 = sub i32 %47, %17"];
	Node0x208edc0[shape=record, label="  %49 = add i32 %48, %33"];
	Node0x208ee30[shape=record, label="  %50 = add i32 %49, %39"];
	Node0x208eea0[shape=record, label="  %51 = icmp eq i32 %19, %50"];
	Node0x202b8b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x208ef30[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0x208f1d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x208f338[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x208f448[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x208f558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x208f618[shape=record, label="  ret i32 0"];
	Node0x208baa8 -> Node0x208bb28;
	Node0x208bb28 -> Node0x208bbb8;
	Node0x208bbb8 -> Node0x208bc18;
	Node0x208bc18 -> Node0x208bcc8;
	Node0x208bcc8 -> Node0x208c0f8;
	Node0x208c0f8 -> Node0x208c1d8;
	Node0x208c1d8 -> Node0x208c2d8;
	Node0x208c2d8 -> Node0x208c398;
	Node0x208c398 -> Node0x208c448;
	Node0x208c448 -> Node0x208c508;
	Node0x208c508 -> Node0x208c5b8;
	Node0x208c5b8 -> Node0x2086ae0;
	Node0x2086ae0 -> Node0x208c7b8;
	Node0x208c7b8 -> Node0x208d728;
	Node0x208d728 -> Node0x208dd98;
	Node0x208dd98 -> Node0x208ddf8;
	Node0x208ddf8 -> Node0x208de70;
	Node0x208de70 -> Node0x208dee0;
	Node0x208dee0 -> Node0x208df50;
	Node0x208df50 -> Node0x208dfc0;
	Node0x208dfc0 -> Node0x208e030;
	Node0x208e030 -> Node0x208e0a0;
	Node0x208e0a0 -> Node0x208e110;
	Node0x208e110 -> Node0x208e180;
	Node0x208e180 -> Node0x208e1f0;
	Node0x208e1f0 -> Node0x208e260;
	Node0x208e260 -> Node0x208e2d0;
	Node0x208e2d0 -> Node0x208e340;
	Node0x208e340 -> Node0x208e3b0;
	Node0x208e3b0 -> Node0x208e420;
	Node0x208e420 -> Node0x208e490;
	Node0x208e490 -> Node0x208e500;
	Node0x208e500 -> Node0x208e570;
	Node0x208e570 -> Node0x208e5e0;
	Node0x208e5e0 -> Node0x208e650;
	Node0x208e650 -> Node0x208e6c0;
	Node0x208e6c0 -> Node0x208e730;
	Node0x208e730 -> Node0x208e7a0;
	Node0x208e7a0 -> Node0x208e810;
	Node0x208e810 -> Node0x208e880;
	Node0x208e880 -> Node0x208e8f0;
	Node0x208e8f0 -> Node0x208e960;
	Node0x208e960 -> Node0x208e9d0;
	Node0x208e9d0 -> Node0x208ea40;
	Node0x208ea40 -> Node0x208eab0;
	Node0x208eab0 -> Node0x208eb20;
	Node0x208eb20 -> Node0x208eb90;
	Node0x208eb90 -> Node0x208ec00;
	Node0x208ec00 -> Node0x208ec70;
	Node0x208ec70 -> Node0x208ece0;
	Node0x208ece0 -> Node0x208ed50;
	Node0x208ed50 -> Node0x208edc0;
	Node0x208edc0 -> Node0x208ee30;
	Node0x208ee30 -> Node0x208eea0;
	Node0x208eea0 -> Node0x202b8b8;
	Node0x202b8b8 -> Node0x208ef30;
	Node0x208ef30 -> Node0x208f1d8;
	Node0x208f1d8 -> Node0x208f338;
	Node0x208f338 -> Node0x208f448;
	Node0x208f448 -> Node0x208f558;
	Node0x208f558 -> Node0x208f618;
edge [color=red]
	Node0x208baa8 -> Node0x208bcc8;
	Node0x208bcc8 -> Node0x208c0f8;
	Node0x208bb28 -> Node0x208c1d8;
	Node0x208c1d8 -> Node0x208c2d8;
	Node0x208bbb8 -> Node0x208c398;
	Node0x208c398 -> Node0x208c448;
	Node0x208bc18 -> Node0x208c508;
	Node0x208c508 -> Node0x208c5b8;
	Node0x208baa8 -> Node0x2086ae0;
	Node0x208bb28 -> Node0x2086ae0;
	Node0x208bbb8 -> Node0x2086ae0;
	Node0x208bc18 -> Node0x2086ae0;
	Node0x208baa8 -> Node0x208c7b8;
	Node0x208bb28 -> Node0x208d728;
	Node0x208bbb8 -> Node0x208dd98;
	Node0x208bc18 -> Node0x208ddf8;
	Node0x208dd98 -> Node0x208de70;
	Node0x208de70 -> Node0x208dee0;
	Node0x208dee0 -> Node0x208df50;
	Node0x208d728 -> Node0x208df50;
	Node0x208ddf8 -> Node0x208dfc0;
	Node0x208c7b8 -> Node0x208dfc0;
	Node0x208dfc0 -> Node0x208e030;
	Node0x208df50 -> Node0x208e0a0;
	Node0x208e030 -> Node0x208e0a0;
	Node0x208dd98 -> Node0x208e110;
	Node0x208d728 -> Node0x208e180;
	Node0x208e110 -> Node0x208e180;
	Node0x208d728 -> Node0x208e1f0;
	Node0x208e110 -> Node0x208e1f0;
	Node0x208dd98 -> Node0x208e260;
	Node0x208d728 -> Node0x208e260;
	Node0x208e260 -> Node0x208e2d0;
	Node0x208e2d0 -> Node0x208e340;
	Node0x208e1f0 -> Node0x208e3b0;
	Node0x208c7b8 -> Node0x208e420;
	Node0x208e420 -> Node0x208e490;
	Node0x208ddf8 -> Node0x208e500;
	Node0x208c7b8 -> Node0x208e500;
	Node0x208ddf8 -> Node0x208e570;
	Node0x208c7b8 -> Node0x208e570;
	Node0x208ddf8 -> Node0x208e5e0;
	Node0x208e420 -> Node0x208e5e0;
	Node0x208e570 -> Node0x208e650;
	Node0x208e650 -> Node0x208e6c0;
	Node0x208d728 -> Node0x208e730;
	Node0x208e730 -> Node0x208e7a0;
	Node0x208e180 -> Node0x208e7a0;
	Node0x208e7a0 -> Node0x208e810;
	Node0x208ddf8 -> Node0x208e810;
	Node0x208e810 -> Node0x208e880;
	Node0x208e5e0 -> Node0x208e880;
	Node0x208e880 -> Node0x208e8f0;
	Node0x208e500 -> Node0x208e8f0;
	Node0x208e8f0 -> Node0x208e960;
	Node0x208d728 -> Node0x208e9d0;
	Node0x208e9d0 -> Node0x208ea40;
	Node0x208e490 -> Node0x208ea40;
	Node0x208ea40 -> Node0x208eab0;
	Node0x208e1f0 -> Node0x208eab0;
	Node0x208eab0 -> Node0x208eb20;
	Node0x208e260 -> Node0x208eb20;
	Node0x208eb20 -> Node0x208eb90;
	Node0x208e3b0 -> Node0x208eb90;
	Node0x208eb90 -> Node0x208ec00;
	Node0x208e340 -> Node0x208ec00;
	Node0x208ec00 -> Node0x208ec70;
	Node0x208e570 -> Node0x208ec70;
	Node0x208ec70 -> Node0x208ece0;
	Node0x208e5e0 -> Node0x208ece0;
	Node0x208ece0 -> Node0x208ed50;
	Node0x208dfc0 -> Node0x208ed50;
	Node0x208ed50 -> Node0x208edc0;
	Node0x208e6c0 -> Node0x208edc0;
	Node0x208edc0 -> Node0x208ee30;
	Node0x208e960 -> Node0x208ee30;
	Node0x208e0a0 -> Node0x208eea0;
	Node0x208ee30 -> Node0x208eea0;
	Node0x208eea0 -> Node0x202b8b8;
	Node0x202b8b8 -> Node0x208ef30;
	Node0x208c508 -> Node0x208f1d8;
	Node0x208c398 -> Node0x208f338;
	Node0x208c1d8 -> Node0x208f448;
	Node0x208bcc8 -> Node0x208f558;
}
