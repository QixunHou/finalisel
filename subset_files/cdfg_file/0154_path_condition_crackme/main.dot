digraph "DFG for'main' function" {
	Node0x23a1f18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23a1f98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23a2028[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23a2088[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x23a2138[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x23a2568[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23a2648[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x23a2748[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23a2808[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x23a28b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x23a2978[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x23a2a28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x239c820[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x23a2c28[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23a3b98[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23a4208[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x23a4268[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x23a4378[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x23a45d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x23a4738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x23a4848[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23a4958[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23a4a18[shape=record, label="  ret i32 0"];
	Node0x23a1f18 -> Node0x23a1f98;
	Node0x23a1f98 -> Node0x23a2028;
	Node0x23a2028 -> Node0x23a2088;
	Node0x23a2088 -> Node0x23a2138;
	Node0x23a2138 -> Node0x23a2568;
	Node0x23a2568 -> Node0x23a2648;
	Node0x23a2648 -> Node0x23a2748;
	Node0x23a2748 -> Node0x23a2808;
	Node0x23a2808 -> Node0x23a28b8;
	Node0x23a28b8 -> Node0x23a2978;
	Node0x23a2978 -> Node0x23a2a28;
	Node0x23a2a28 -> Node0x239c820;
	Node0x239c820 -> Node0x23a2c28;
	Node0x23a2c28 -> Node0x23a3b98;
	Node0x23a3b98 -> Node0x23a4208;
	Node0x23a4208 -> Node0x23a4268;
	Node0x23a4268 -> Node0x23a4378;
	Node0x23a4378 -> Node0x23a45d8;
	Node0x23a45d8 -> Node0x23a4738;
	Node0x23a4738 -> Node0x23a4848;
	Node0x23a4848 -> Node0x23a4958;
	Node0x23a4958 -> Node0x23a4a18;
edge [color=red]
	Node0x23a1f18 -> Node0x23a2138;
	Node0x23a2138 -> Node0x23a2568;
	Node0x23a1f98 -> Node0x23a2648;
	Node0x23a2648 -> Node0x23a2748;
	Node0x23a2028 -> Node0x23a2808;
	Node0x23a2808 -> Node0x23a28b8;
	Node0x23a2088 -> Node0x23a2978;
	Node0x23a2978 -> Node0x23a2a28;
	Node0x23a1f18 -> Node0x239c820;
	Node0x23a1f98 -> Node0x239c820;
	Node0x23a2028 -> Node0x239c820;
	Node0x23a2088 -> Node0x239c820;
	Node0x23a1f18 -> Node0x23a2c28;
	Node0x23a1f98 -> Node0x23a3b98;
	Node0x23a2028 -> Node0x23a4208;
	Node0x23a2088 -> Node0x23a4268;
	Node0x23a2c28 -> Node0x23a4378;
	Node0x23a3b98 -> Node0x23a4378;
	Node0x23a4208 -> Node0x23a4378;
	Node0x23a4268 -> Node0x23a4378;
	Node0x23a2978 -> Node0x23a45d8;
	Node0x23a2808 -> Node0x23a4738;
	Node0x23a2648 -> Node0x23a4848;
	Node0x23a2138 -> Node0x23a4958;
}
