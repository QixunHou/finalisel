digraph "DFG for'crackme' function" {
	Node0x239f7f0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x239fe70[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x239fee0[shape=record, label="  %7 = sub i32 %6, %3"];
	Node0x239ff50[shape=record, label="  %8 = and i32 %2, %1"];
	Node0x239ffc0[shape=record, label="  %9 = xor i32 %2, %1"];
	Node0x23a0030[shape=record, label="  %10 = shl i32 %1, 1"];
	Node0x23a00d0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x23a0170[shape=record, label="  %12 = xor i32 %9, -1"];
	Node0x23a01e0[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0x23a0250[shape=record, label="  %14 = and i32 %13, %1"];
	Node0x23a02c0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x23a0330[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x23a03a0[shape=record, label="  %17 = shl i32 %13, 1"];
	Node0x23a0410[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x23a0480[shape=record, label="  %19 = xor i32 %5, -1"];
	Node0x23a0520[shape=record, label="  %20 = xor i32 %1, 536870911"];
	Node0x23a0590[shape=record, label="  %21 = and i32 %20, %2"];
	Node0x23a0630[shape=record, label="  %22 = shl i32 %21, 3"];
	Node0x23a06d0[shape=record, label="  %23 = shl i32 %14, 2"];
	Node0x23a0740[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0x23a07b0[shape=record, label="  %25 = and i32 %3, %0"];
	Node0x23a0820[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x23a0890[shape=record, label="  %27 = xor i32 %3, -1"];
	Node0x23a0900[shape=record, label="  %28 = shl i32 %24, 1"];
	Node0x23a0970[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x23a09e0[shape=record, label="  %30 = or i32 %3, %0"];
	Node0x23a0a50[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x23a0ac0[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0x23a0d70[shape=record, label="  %33 = xor i32 %3, 2147483647"];
	Node0x23a0de0[shape=record, label="  %34 = and i32 %33, %0"];
	Node0x23a0e50[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x23a0ec0[shape=record, label="  %36 = add i32 %19, %12"];
	Node0x23a0f30[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x23a0fa0[shape=record, label="  %38 = add i32 %25, %0"];
	Node0x23a1010[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x23a1080[shape=record, label="  %40 = add i32 %1, 3"];
	Node0x23a10f0[shape=record, label="  %41 = sub i32 %40, %2"];
	Node0x23a1160[shape=record, label="  %42 = add i32 %41, %8"];
	Node0x23a11d0[shape=record, label="  %43 = sub i32 %42, %9"];
	Node0x23a1240[shape=record, label="  %44 = sub i32 %43, %11"];
	Node0x23a12b0[shape=record, label="  %45 = add i32 %44, %18"];
	Node0x23a1320[shape=record, label="  %46 = add i32 %45, %27"];
	Node0x23a1390[shape=record, label="  %47 = add i32 %46, %22"];
	Node0x23a1400[shape=record, label="  %48 = add i32 %47, %23"];
	Node0x23a1470[shape=record, label="  %49 = add i32 %48, %24"];
	Node0x23a14e0[shape=record, label="  %50 = add i32 %49, %26"];
	Node0x23a1550[shape=record, label="  %51 = sub i32 %50, %30"];
	Node0x23a15c0[shape=record, label="  %52 = sub i32 %51, %16"];
	Node0x23a1630[shape=record, label="  %53 = add i32 %52, %37"];
	Node0x23a16a0[shape=record, label="  %54 = sub i32 %53, %29"];
	Node0x23a1710[shape=record, label="  %55 = add i32 %54, %32"];
	Node0x23a1780[shape=record, label="  %56 = sub i32 %55, %35"];
	Node0x23a17f0[shape=record, label="  %57 = add i32 %56, %39"];
	Node0x23a1860[shape=record, label="  %58 = icmp eq i32 %7, %57"];
	Node0x2340268[shape=record, label="  %59 = select i1 %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23a1d00[shape=record, label="  %60 = tail call i32 @puts(i8* nonnull dereferenceable(1) %59)"];
	Node0x23a1d50[shape=record, label="  ret void"];
	Node0x239f7f0 -> Node0x239fe70;
	Node0x239fe70 -> Node0x239fee0;
	Node0x239fee0 -> Node0x239ff50;
	Node0x239ff50 -> Node0x239ffc0;
	Node0x239ffc0 -> Node0x23a0030;
	Node0x23a0030 -> Node0x23a00d0;
	Node0x23a00d0 -> Node0x23a0170;
	Node0x23a0170 -> Node0x23a01e0;
	Node0x23a01e0 -> Node0x23a0250;
	Node0x23a0250 -> Node0x23a02c0;
	Node0x23a02c0 -> Node0x23a0330;
	Node0x23a0330 -> Node0x23a03a0;
	Node0x23a03a0 -> Node0x23a0410;
	Node0x23a0410 -> Node0x23a0480;
	Node0x23a0480 -> Node0x23a0520;
	Node0x23a0520 -> Node0x23a0590;
	Node0x23a0590 -> Node0x23a0630;
	Node0x23a0630 -> Node0x23a06d0;
	Node0x23a06d0 -> Node0x23a0740;
	Node0x23a0740 -> Node0x23a07b0;
	Node0x23a07b0 -> Node0x23a0820;
	Node0x23a0820 -> Node0x23a0890;
	Node0x23a0890 -> Node0x23a0900;
	Node0x23a0900 -> Node0x23a0970;
	Node0x23a0970 -> Node0x23a09e0;
	Node0x23a09e0 -> Node0x23a0a50;
	Node0x23a0a50 -> Node0x23a0ac0;
	Node0x23a0ac0 -> Node0x23a0d70;
	Node0x23a0d70 -> Node0x23a0de0;
	Node0x23a0de0 -> Node0x23a0e50;
	Node0x23a0e50 -> Node0x23a0ec0;
	Node0x23a0ec0 -> Node0x23a0f30;
	Node0x23a0f30 -> Node0x23a0fa0;
	Node0x23a0fa0 -> Node0x23a1010;
	Node0x23a1010 -> Node0x23a1080;
	Node0x23a1080 -> Node0x23a10f0;
	Node0x23a10f0 -> Node0x23a1160;
	Node0x23a1160 -> Node0x23a11d0;
	Node0x23a11d0 -> Node0x23a1240;
	Node0x23a1240 -> Node0x23a12b0;
	Node0x23a12b0 -> Node0x23a1320;
	Node0x23a1320 -> Node0x23a1390;
	Node0x23a1390 -> Node0x23a1400;
	Node0x23a1400 -> Node0x23a1470;
	Node0x23a1470 -> Node0x23a14e0;
	Node0x23a14e0 -> Node0x23a1550;
	Node0x23a1550 -> Node0x23a15c0;
	Node0x23a15c0 -> Node0x23a1630;
	Node0x23a1630 -> Node0x23a16a0;
	Node0x23a16a0 -> Node0x23a1710;
	Node0x23a1710 -> Node0x23a1780;
	Node0x23a1780 -> Node0x23a17f0;
	Node0x23a17f0 -> Node0x23a1860;
	Node0x23a1860 -> Node0x2340268;
	Node0x2340268 -> Node0x23a1d00;
	Node0x23a1d00 -> Node0x23a1d50;
edge [color=red]
	Node0x239f7f0 -> Node0x239fe70;
	Node0x239fe70 -> Node0x239fee0;
	Node0x23a0030 -> Node0x23a00d0;
	Node0x239ffc0 -> Node0x23a0170;
	Node0x23a01e0 -> Node0x23a0250;
	Node0x23a0250 -> Node0x23a02c0;
	Node0x23a02c0 -> Node0x23a0330;
	Node0x23a01e0 -> Node0x23a03a0;
	Node0x23a03a0 -> Node0x23a0410;
	Node0x239f7f0 -> Node0x23a0480;
	Node0x23a0520 -> Node0x23a0590;
	Node0x23a0590 -> Node0x23a0630;
	Node0x23a0250 -> Node0x23a06d0;
	Node0x23a07b0 -> Node0x23a0820;
	Node0x23a0740 -> Node0x23a0900;
	Node0x23a0900 -> Node0x23a0970;
	Node0x23a09e0 -> Node0x23a0a50;
	Node0x23a0a50 -> Node0x23a0ac0;
	Node0x23a0d70 -> Node0x23a0de0;
	Node0x23a0de0 -> Node0x23a0e50;
	Node0x23a0480 -> Node0x23a0ec0;
	Node0x23a0170 -> Node0x23a0ec0;
	Node0x23a0ec0 -> Node0x23a0f30;
	Node0x23a07b0 -> Node0x23a0fa0;
	Node0x23a0fa0 -> Node0x23a1010;
	Node0x23a1080 -> Node0x23a10f0;
	Node0x23a10f0 -> Node0x23a1160;
	Node0x239ff50 -> Node0x23a1160;
	Node0x23a1160 -> Node0x23a11d0;
	Node0x239ffc0 -> Node0x23a11d0;
	Node0x23a11d0 -> Node0x23a1240;
	Node0x23a00d0 -> Node0x23a1240;
	Node0x23a1240 -> Node0x23a12b0;
	Node0x23a0410 -> Node0x23a12b0;
	Node0x23a12b0 -> Node0x23a1320;
	Node0x23a0890 -> Node0x23a1320;
	Node0x23a1320 -> Node0x23a1390;
	Node0x23a0630 -> Node0x23a1390;
	Node0x23a1390 -> Node0x23a1400;
	Node0x23a06d0 -> Node0x23a1400;
	Node0x23a1400 -> Node0x23a1470;
	Node0x23a0740 -> Node0x23a1470;
	Node0x23a1470 -> Node0x23a14e0;
	Node0x23a0820 -> Node0x23a14e0;
	Node0x23a14e0 -> Node0x23a1550;
	Node0x23a09e0 -> Node0x23a1550;
	Node0x23a1550 -> Node0x23a15c0;
	Node0x23a0330 -> Node0x23a15c0;
	Node0x23a15c0 -> Node0x23a1630;
	Node0x23a0f30 -> Node0x23a1630;
	Node0x23a1630 -> Node0x23a16a0;
	Node0x23a0970 -> Node0x23a16a0;
	Node0x23a16a0 -> Node0x23a1710;
	Node0x23a0ac0 -> Node0x23a1710;
	Node0x23a1710 -> Node0x23a1780;
	Node0x23a0e50 -> Node0x23a1780;
	Node0x23a1780 -> Node0x23a17f0;
	Node0x23a1010 -> Node0x23a17f0;
	Node0x239fee0 -> Node0x23a1860;
	Node0x23a17f0 -> Node0x23a1860;
	Node0x23a1860 -> Node0x2340268;
	Node0x2340268 -> Node0x23a1d00;
}
