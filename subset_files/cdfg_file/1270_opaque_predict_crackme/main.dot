digraph "DFG for'main' function" {
	Node0xd77d68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd77de8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd77e78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xd782d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xd783b8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xd784d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd78710[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xd787c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd79738[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd79dc0[shape=record, label="  %8 = sub i32 0, %7"];
	Node0xd79e30[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0xd79ea0[shape=record, label="  %10 = and i32 %7, %6"];
	Node0xd79f10[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0xd79f80[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0xd79ff0[shape=record, label="  %13 = shl i32 %6, 2"];
	Node0xd7a060[shape=record, label="  %14 = and i32 %6, %9"];
	Node0xd7a0d0[shape=record, label="  %15 = shl i32 %9, 1"];
	Node0xd7a140[shape=record, label="  %16 = or i32 %7, %6"];
	Node0xd7a1b0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0xd7a220[shape=record, label="  %18 = mul i32 %17, 3"];
	Node0xd7a290[shape=record, label="  %19 = shl i32 %14, 1"];
	Node0xd7a300[shape=record, label="  %20 = mul i32 %10, -7"];
	Node0xd7a370[shape=record, label="  %21 = xor i32 %6, %9"];
	Node0xd7a3e0[shape=record, label="  %22 = add i32 %21, %13"];
	Node0xd7a450[shape=record, label="  %23 = add i32 %22, %14"];
	Node0xd7a4c0[shape=record, label="  %24 = sub i32 %23, %15"];
	Node0xd7a530[shape=record, label="  %25 = add i32 %24, %16"];
	Node0xd7a5a0[shape=record, label="  %26 = add i32 %25, %18"];
	Node0xd7a610[shape=record, label="  %27 = sub i32 %26, %19"];
	Node0xd7a680[shape=record, label="  %28 = add i32 %27, %20"];
	Node0xd7a6f0[shape=record, label="  %29 = sub i32 %28, %12"];
	Node0xd7a760[shape=record, label="  %30 = icmp eq i32 %29, %8"];
	Node0xd189d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xd7a7f0[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0xd7ac58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd7adb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xd7ae78[shape=record, label="  ret i32 0"];
	Node0xd77d68 -> Node0xd77de8;
	Node0xd77de8 -> Node0xd77e78;
	Node0xd77e78 -> Node0xd782d8;
	Node0xd782d8 -> Node0xd783b8;
	Node0xd783b8 -> Node0xd784d8;
	Node0xd784d8 -> Node0xd78710;
	Node0xd78710 -> Node0xd787c8;
	Node0xd787c8 -> Node0xd79738;
	Node0xd79738 -> Node0xd79dc0;
	Node0xd79dc0 -> Node0xd79e30;
	Node0xd79e30 -> Node0xd79ea0;
	Node0xd79ea0 -> Node0xd79f10;
	Node0xd79f10 -> Node0xd79f80;
	Node0xd79f80 -> Node0xd79ff0;
	Node0xd79ff0 -> Node0xd7a060;
	Node0xd7a060 -> Node0xd7a0d0;
	Node0xd7a0d0 -> Node0xd7a140;
	Node0xd7a140 -> Node0xd7a1b0;
	Node0xd7a1b0 -> Node0xd7a220;
	Node0xd7a220 -> Node0xd7a290;
	Node0xd7a290 -> Node0xd7a300;
	Node0xd7a300 -> Node0xd7a370;
	Node0xd7a370 -> Node0xd7a3e0;
	Node0xd7a3e0 -> Node0xd7a450;
	Node0xd7a450 -> Node0xd7a4c0;
	Node0xd7a4c0 -> Node0xd7a530;
	Node0xd7a530 -> Node0xd7a5a0;
	Node0xd7a5a0 -> Node0xd7a610;
	Node0xd7a610 -> Node0xd7a680;
	Node0xd7a680 -> Node0xd7a6f0;
	Node0xd7a6f0 -> Node0xd7a760;
	Node0xd7a760 -> Node0xd189d8;
	Node0xd189d8 -> Node0xd7a7f0;
	Node0xd7a7f0 -> Node0xd7ac58;
	Node0xd7ac58 -> Node0xd7adb8;
	Node0xd7adb8 -> Node0xd7ae78;
edge [color=red]
	Node0xd77d68 -> Node0xd77e78;
	Node0xd77e78 -> Node0xd782d8;
	Node0xd77de8 -> Node0xd783b8;
	Node0xd783b8 -> Node0xd784d8;
	Node0xd77d68 -> Node0xd78710;
	Node0xd77de8 -> Node0xd78710;
	Node0xd77d68 -> Node0xd787c8;
	Node0xd77de8 -> Node0xd79738;
	Node0xd79738 -> Node0xd79dc0;
	Node0xd79738 -> Node0xd79e30;
	Node0xd79738 -> Node0xd79ea0;
	Node0xd787c8 -> Node0xd79ea0;
	Node0xd79ea0 -> Node0xd79f10;
	Node0xd79f10 -> Node0xd79f80;
	Node0xd787c8 -> Node0xd79ff0;
	Node0xd787c8 -> Node0xd7a060;
	Node0xd79e30 -> Node0xd7a060;
	Node0xd79e30 -> Node0xd7a0d0;
	Node0xd79738 -> Node0xd7a140;
	Node0xd787c8 -> Node0xd7a140;
	Node0xd7a140 -> Node0xd7a1b0;
	Node0xd7a1b0 -> Node0xd7a220;
	Node0xd7a060 -> Node0xd7a290;
	Node0xd79ea0 -> Node0xd7a300;
	Node0xd787c8 -> Node0xd7a370;
	Node0xd79e30 -> Node0xd7a370;
	Node0xd7a370 -> Node0xd7a3e0;
	Node0xd79ff0 -> Node0xd7a3e0;
	Node0xd7a3e0 -> Node0xd7a450;
	Node0xd7a060 -> Node0xd7a450;
	Node0xd7a450 -> Node0xd7a4c0;
	Node0xd7a0d0 -> Node0xd7a4c0;
	Node0xd7a4c0 -> Node0xd7a530;
	Node0xd7a140 -> Node0xd7a530;
	Node0xd7a530 -> Node0xd7a5a0;
	Node0xd7a220 -> Node0xd7a5a0;
	Node0xd7a5a0 -> Node0xd7a610;
	Node0xd7a290 -> Node0xd7a610;
	Node0xd7a610 -> Node0xd7a680;
	Node0xd7a300 -> Node0xd7a680;
	Node0xd7a680 -> Node0xd7a6f0;
	Node0xd79f80 -> Node0xd7a6f0;
	Node0xd7a6f0 -> Node0xd7a760;
	Node0xd79dc0 -> Node0xd7a760;
	Node0xd7a760 -> Node0xd189d8;
	Node0xd189d8 -> Node0xd7a7f0;
	Node0xd783b8 -> Node0xd7ac58;
	Node0xd77e78 -> Node0xd7adb8;
}
