digraph "DFG for'main' function" {
	Node0x1ad8a28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ad8aa8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ad8b38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ad8b98[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1ad9018[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ad90f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1ad91f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ad92b8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1ad9368[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ad95c8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1ad9688[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ad97e8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ad9848[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1add070[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1add278[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1add3d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1add4e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1add5a8[shape=record, label="  ret i32 0"];
	Node0x1ad8a28 -> Node0x1ad8aa8;
	Node0x1ad8aa8 -> Node0x1ad8b38;
	Node0x1ad8b38 -> Node0x1ad8b98;
	Node0x1ad8b98 -> Node0x1ad9018;
	Node0x1ad9018 -> Node0x1ad90f8;
	Node0x1ad90f8 -> Node0x1ad91f8;
	Node0x1ad91f8 -> Node0x1ad92b8;
	Node0x1ad92b8 -> Node0x1ad9368;
	Node0x1ad9368 -> Node0x1ad95c8;
	Node0x1ad95c8 -> Node0x1ad9688;
	Node0x1ad9688 -> Node0x1ad97e8;
	Node0x1ad97e8 -> Node0x1ad9848;
	Node0x1ad9848 -> Node0x1add070;
	Node0x1add070 -> Node0x1add278;
	Node0x1add278 -> Node0x1add3d8;
	Node0x1add3d8 -> Node0x1add4e8;
	Node0x1add4e8 -> Node0x1add5a8;
edge [color=red]
	Node0x1ad8a28 -> Node0x1ad8b98;
	Node0x1ad8b98 -> Node0x1ad9018;
	Node0x1ad8aa8 -> Node0x1ad90f8;
	Node0x1ad90f8 -> Node0x1ad91f8;
	Node0x1ad8b38 -> Node0x1ad92b8;
	Node0x1ad92b8 -> Node0x1ad9368;
	Node0x1ad8a28 -> Node0x1ad95c8;
	Node0x1ad8aa8 -> Node0x1ad95c8;
	Node0x1ad8b38 -> Node0x1ad95c8;
	Node0x1ad8a28 -> Node0x1ad9688;
	Node0x1ad8aa8 -> Node0x1ad97e8;
	Node0x1ad8b38 -> Node0x1ad9848;
	Node0x1ad9688 -> Node0x1add070;
	Node0x1ad97e8 -> Node0x1add070;
	Node0x1ad9848 -> Node0x1add070;
	Node0x1ad92b8 -> Node0x1add278;
	Node0x1ad90f8 -> Node0x1add3d8;
	Node0x1ad8b98 -> Node0x1add4e8;
}
