digraph "DFG for'main' function" {
	Node0x11b6a08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11b6a88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11b6b18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x11b6b78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x11b6c28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x11b7058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11b7138[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x11b7238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11b72f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x11b73a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x11b7468[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x11b7518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x11b1ab0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x11b7718[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11b8688[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11b8cf8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x11b8d58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x11b8dd0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x11b8e40[shape=record, label="  %15 = and i32 %12, %11"];
	Node0x11b8eb0[shape=record, label="  %16 = add i32 %14, 1"];
	Node0x11b8f20[shape=record, label="  %17 = add i32 %16, %15"];
	Node0x11b8f90[shape=record, label="  %18 = xor i32 %10, -1"];
	Node0x11b9000[shape=record, label="  %19 = or i32 %13, %18"];
	Node0x11b9070[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x11b90e0[shape=record, label="  %21 = sub i32 %17, %20"];
	Node0x11b9150[shape=record, label="  %22 = xor i32 %11, -1"];
	Node0x11b91c0[shape=record, label="  %23 = mul i32 %22, 5"];
	Node0x11b9230[shape=record, label="  %24 = xor i32 %12, -1"];
	Node0x11b92a0[shape=record, label="  %25 = or i32 %11, %24"];
	Node0x11b9310[shape=record, label="  %26 = or i32 %12, %11"];
	Node0x11b9380[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x11b93f0[shape=record, label="  %28 = mul i32 %27, -7"];
	Node0x11b9460[shape=record, label="  %29 = shl i32 %25, 3"];
	Node0x11b94d0[shape=record, label="  %30 = xor i32 %29, -8"];
	Node0x11b9540[shape=record, label="  %31 = and i32 %11, %24"];
	Node0x11b95b0[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x11b9620[shape=record, label="  %33 = shl i32 %15, 1"];
	Node0x11b9690[shape=record, label="  %34 = xor i32 %13, %10"];
	Node0x11b9700[shape=record, label="  %35 = and i32 %13, %18"];
	Node0x11b9770[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x11b97e0[shape=record, label="  %37 = and i32 %13, %10"];
	Node0x11b9850[shape=record, label="  %38 = xor i32 %25, -1"];
	Node0x11b98c0[shape=record, label="  %39 = add i32 %23, %38"];
	Node0x11b9930[shape=record, label="  %40 = add i32 %39, %26"];
	Node0x11b99a0[shape=record, label="  %41 = add i32 %40, %13"];
	Node0x11b9a10[shape=record, label="  %42 = add i32 %41, %28"];
	Node0x11b9a80[shape=record, label="  %43 = sub i32 %42, %32"];
	Node0x11b9af0[shape=record, label="  %44 = sub i32 %43, %33"];
	Node0x11b9b60[shape=record, label="  %45 = add i32 %44, %34"];
	Node0x11b9bd0[shape=record, label="  %46 = sub i32 %45, %19"];
	Node0x11b9c40[shape=record, label="  %47 = sub i32 %46, %37"];
	Node0x11b9cb0[shape=record, label="  %48 = sub i32 %47, %30"];
	Node0x11b9d20[shape=record, label="  %49 = sub i32 %48, %36"];
	Node0x11b9d90[shape=record, label="  %50 = icmp eq i32 %21, %49"];
	Node0x11568b8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x11b9e20[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0x11ba0c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x11ba228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x11ba338[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11ba448[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11ba508[shape=record, label="  ret i32 0"];
	Node0x11b6a08 -> Node0x11b6a88;
	Node0x11b6a88 -> Node0x11b6b18;
	Node0x11b6b18 -> Node0x11b6b78;
	Node0x11b6b78 -> Node0x11b6c28;
	Node0x11b6c28 -> Node0x11b7058;
	Node0x11b7058 -> Node0x11b7138;
	Node0x11b7138 -> Node0x11b7238;
	Node0x11b7238 -> Node0x11b72f8;
	Node0x11b72f8 -> Node0x11b73a8;
	Node0x11b73a8 -> Node0x11b7468;
	Node0x11b7468 -> Node0x11b7518;
	Node0x11b7518 -> Node0x11b1ab0;
	Node0x11b1ab0 -> Node0x11b7718;
	Node0x11b7718 -> Node0x11b8688;
	Node0x11b8688 -> Node0x11b8cf8;
	Node0x11b8cf8 -> Node0x11b8d58;
	Node0x11b8d58 -> Node0x11b8dd0;
	Node0x11b8dd0 -> Node0x11b8e40;
	Node0x11b8e40 -> Node0x11b8eb0;
	Node0x11b8eb0 -> Node0x11b8f20;
	Node0x11b8f20 -> Node0x11b8f90;
	Node0x11b8f90 -> Node0x11b9000;
	Node0x11b9000 -> Node0x11b9070;
	Node0x11b9070 -> Node0x11b90e0;
	Node0x11b90e0 -> Node0x11b9150;
	Node0x11b9150 -> Node0x11b91c0;
	Node0x11b91c0 -> Node0x11b9230;
	Node0x11b9230 -> Node0x11b92a0;
	Node0x11b92a0 -> Node0x11b9310;
	Node0x11b9310 -> Node0x11b9380;
	Node0x11b9380 -> Node0x11b93f0;
	Node0x11b93f0 -> Node0x11b9460;
	Node0x11b9460 -> Node0x11b94d0;
	Node0x11b94d0 -> Node0x11b9540;
	Node0x11b9540 -> Node0x11b95b0;
	Node0x11b95b0 -> Node0x11b9620;
	Node0x11b9620 -> Node0x11b9690;
	Node0x11b9690 -> Node0x11b9700;
	Node0x11b9700 -> Node0x11b9770;
	Node0x11b9770 -> Node0x11b97e0;
	Node0x11b97e0 -> Node0x11b9850;
	Node0x11b9850 -> Node0x11b98c0;
	Node0x11b98c0 -> Node0x11b9930;
	Node0x11b9930 -> Node0x11b99a0;
	Node0x11b99a0 -> Node0x11b9a10;
	Node0x11b9a10 -> Node0x11b9a80;
	Node0x11b9a80 -> Node0x11b9af0;
	Node0x11b9af0 -> Node0x11b9b60;
	Node0x11b9b60 -> Node0x11b9bd0;
	Node0x11b9bd0 -> Node0x11b9c40;
	Node0x11b9c40 -> Node0x11b9cb0;
	Node0x11b9cb0 -> Node0x11b9d20;
	Node0x11b9d20 -> Node0x11b9d90;
	Node0x11b9d90 -> Node0x11568b8;
	Node0x11568b8 -> Node0x11b9e20;
	Node0x11b9e20 -> Node0x11ba0c8;
	Node0x11ba0c8 -> Node0x11ba228;
	Node0x11ba228 -> Node0x11ba338;
	Node0x11ba338 -> Node0x11ba448;
	Node0x11ba448 -> Node0x11ba508;
edge [color=red]
	Node0x11b6a08 -> Node0x11b6c28;
	Node0x11b6c28 -> Node0x11b7058;
	Node0x11b6a88 -> Node0x11b7138;
	Node0x11b7138 -> Node0x11b7238;
	Node0x11b6b18 -> Node0x11b72f8;
	Node0x11b72f8 -> Node0x11b73a8;
	Node0x11b6b78 -> Node0x11b7468;
	Node0x11b7468 -> Node0x11b7518;
	Node0x11b6a08 -> Node0x11b1ab0;
	Node0x11b6a88 -> Node0x11b1ab0;
	Node0x11b6b18 -> Node0x11b1ab0;
	Node0x11b6b78 -> Node0x11b1ab0;
	Node0x11b6a08 -> Node0x11b7718;
	Node0x11b6a88 -> Node0x11b8688;
	Node0x11b6b18 -> Node0x11b8cf8;
	Node0x11b6b78 -> Node0x11b8d58;
	Node0x11b8cf8 -> Node0x11b8dd0;
	Node0x11b8688 -> Node0x11b8dd0;
	Node0x11b8cf8 -> Node0x11b8e40;
	Node0x11b8688 -> Node0x11b8e40;
	Node0x11b8dd0 -> Node0x11b8eb0;
	Node0x11b8eb0 -> Node0x11b8f20;
	Node0x11b8e40 -> Node0x11b8f20;
	Node0x11b7718 -> Node0x11b8f90;
	Node0x11b8d58 -> Node0x11b9000;
	Node0x11b8f90 -> Node0x11b9000;
	Node0x11b9000 -> Node0x11b9070;
	Node0x11b8f20 -> Node0x11b90e0;
	Node0x11b9070 -> Node0x11b90e0;
	Node0x11b8688 -> Node0x11b9150;
	Node0x11b9150 -> Node0x11b91c0;
	Node0x11b8cf8 -> Node0x11b9230;
	Node0x11b8688 -> Node0x11b92a0;
	Node0x11b9230 -> Node0x11b92a0;
	Node0x11b8cf8 -> Node0x11b9310;
	Node0x11b8688 -> Node0x11b9310;
	Node0x11b9310 -> Node0x11b9380;
	Node0x11b9380 -> Node0x11b93f0;
	Node0x11b92a0 -> Node0x11b9460;
	Node0x11b9460 -> Node0x11b94d0;
	Node0x11b8688 -> Node0x11b9540;
	Node0x11b9230 -> Node0x11b9540;
	Node0x11b9540 -> Node0x11b95b0;
	Node0x11b8e40 -> Node0x11b9620;
	Node0x11b8d58 -> Node0x11b9690;
	Node0x11b7718 -> Node0x11b9690;
	Node0x11b8d58 -> Node0x11b9700;
	Node0x11b8f90 -> Node0x11b9700;
	Node0x11b9700 -> Node0x11b9770;
	Node0x11b8d58 -> Node0x11b97e0;
	Node0x11b7718 -> Node0x11b97e0;
	Node0x11b92a0 -> Node0x11b9850;
	Node0x11b91c0 -> Node0x11b98c0;
	Node0x11b9850 -> Node0x11b98c0;
	Node0x11b98c0 -> Node0x11b9930;
	Node0x11b9310 -> Node0x11b9930;
	Node0x11b9930 -> Node0x11b99a0;
	Node0x11b8d58 -> Node0x11b99a0;
	Node0x11b99a0 -> Node0x11b9a10;
	Node0x11b93f0 -> Node0x11b9a10;
	Node0x11b9a10 -> Node0x11b9a80;
	Node0x11b95b0 -> Node0x11b9a80;
	Node0x11b9a80 -> Node0x11b9af0;
	Node0x11b9620 -> Node0x11b9af0;
	Node0x11b9af0 -> Node0x11b9b60;
	Node0x11b9690 -> Node0x11b9b60;
	Node0x11b9b60 -> Node0x11b9bd0;
	Node0x11b9000 -> Node0x11b9bd0;
	Node0x11b9bd0 -> Node0x11b9c40;
	Node0x11b97e0 -> Node0x11b9c40;
	Node0x11b9c40 -> Node0x11b9cb0;
	Node0x11b94d0 -> Node0x11b9cb0;
	Node0x11b9cb0 -> Node0x11b9d20;
	Node0x11b9770 -> Node0x11b9d20;
	Node0x11b90e0 -> Node0x11b9d90;
	Node0x11b9d20 -> Node0x11b9d90;
	Node0x11b9d90 -> Node0x11568b8;
	Node0x11568b8 -> Node0x11b9e20;
	Node0x11b7468 -> Node0x11ba0c8;
	Node0x11b72f8 -> Node0x11ba228;
	Node0x11b7138 -> Node0x11ba338;
	Node0x11b6c28 -> Node0x11ba448;
}
