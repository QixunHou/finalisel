digraph "DFG for'main' function" {
	Node0x243f1e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x243f268[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x243f2f8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x243f758[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x243f838[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x243f958[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x243fb90[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x243fc48[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2440bb8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2441240[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x24412b0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x2441320[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x2441390[shape=record, label="  %11 = sub i32 %9, %10"];
	Node0x2441400[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x2441470[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x24414e0[shape=record, label="  %14 = shl i32 %10, 1"];
	Node0x2441550[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x24415c0[shape=record, label="  %16 = and i32 %6, %8"];
	Node0x2441630[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x24416a0[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x2441710[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x2441780[shape=record, label="  %20 = shl i32 %18, 2"];
	Node0x24417f0[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0x2441860[shape=record, label="  %22 = mul i32 %13, 3"];
	Node0x24418d0[shape=record, label="  %23 = add i32 %16, %6"];
	Node0x2441940[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x24419b0[shape=record, label="  %25 = sub i32 2, %6"];
	Node0x2441a20[shape=record, label="  %26 = add i32 %25, %7"];
	Node0x2441a90[shape=record, label="  %27 = add i32 %26, %13"];
	Node0x2441b00[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x2441b70[shape=record, label="  %29 = add i32 %28, %9"];
	Node0x2441be0[shape=record, label="  %30 = sub i32 %29, %19"];
	Node0x2441c50[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x2441cc0[shape=record, label="  %32 = sub i32 %31, %15"];
	Node0x2441d30[shape=record, label="  %33 = add i32 %32, %21"];
	Node0x2441da0[shape=record, label="  %34 = add i32 %33, %24"];
	Node0x2441e10[shape=record, label="  %35 = icmp eq i32 %12, %34"];
	Node0x23df9d8[shape=record, label="  %36 = select i1 %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2441ea0[shape=record, label="  %37 = call i32 @puts(i8* nonnull dereferenceable(1) %36) #5"];
	Node0x24420f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2442258[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2442318[shape=record, label="  ret i32 0"];
	Node0x243f1e8 -> Node0x243f268;
	Node0x243f268 -> Node0x243f2f8;
	Node0x243f2f8 -> Node0x243f758;
	Node0x243f758 -> Node0x243f838;
	Node0x243f838 -> Node0x243f958;
	Node0x243f958 -> Node0x243fb90;
	Node0x243fb90 -> Node0x243fc48;
	Node0x243fc48 -> Node0x2440bb8;
	Node0x2440bb8 -> Node0x2441240;
	Node0x2441240 -> Node0x24412b0;
	Node0x24412b0 -> Node0x2441320;
	Node0x2441320 -> Node0x2441390;
	Node0x2441390 -> Node0x2441400;
	Node0x2441400 -> Node0x2441470;
	Node0x2441470 -> Node0x24414e0;
	Node0x24414e0 -> Node0x2441550;
	Node0x2441550 -> Node0x24415c0;
	Node0x24415c0 -> Node0x2441630;
	Node0x2441630 -> Node0x24416a0;
	Node0x24416a0 -> Node0x2441710;
	Node0x2441710 -> Node0x2441780;
	Node0x2441780 -> Node0x24417f0;
	Node0x24417f0 -> Node0x2441860;
	Node0x2441860 -> Node0x24418d0;
	Node0x24418d0 -> Node0x2441940;
	Node0x2441940 -> Node0x24419b0;
	Node0x24419b0 -> Node0x2441a20;
	Node0x2441a20 -> Node0x2441a90;
	Node0x2441a90 -> Node0x2441b00;
	Node0x2441b00 -> Node0x2441b70;
	Node0x2441b70 -> Node0x2441be0;
	Node0x2441be0 -> Node0x2441c50;
	Node0x2441c50 -> Node0x2441cc0;
	Node0x2441cc0 -> Node0x2441d30;
	Node0x2441d30 -> Node0x2441da0;
	Node0x2441da0 -> Node0x2441e10;
	Node0x2441e10 -> Node0x23df9d8;
	Node0x23df9d8 -> Node0x2441ea0;
	Node0x2441ea0 -> Node0x24420f8;
	Node0x24420f8 -> Node0x2442258;
	Node0x2442258 -> Node0x2442318;
edge [color=red]
	Node0x243f1e8 -> Node0x243f2f8;
	Node0x243f2f8 -> Node0x243f758;
	Node0x243f268 -> Node0x243f838;
	Node0x243f838 -> Node0x243f958;
	Node0x243f1e8 -> Node0x243fb90;
	Node0x243f268 -> Node0x243fb90;
	Node0x243f1e8 -> Node0x243fc48;
	Node0x243f268 -> Node0x2440bb8;
	Node0x2440bb8 -> Node0x2441240;
	Node0x243fc48 -> Node0x24412b0;
	Node0x2441240 -> Node0x24412b0;
	Node0x2440bb8 -> Node0x2441320;
	Node0x243fc48 -> Node0x2441320;
	Node0x24412b0 -> Node0x2441390;
	Node0x2441320 -> Node0x2441390;
	Node0x2441390 -> Node0x2441400;
	Node0x2440bb8 -> Node0x2441470;
	Node0x243fc48 -> Node0x2441470;
	Node0x2441320 -> Node0x24414e0;
	Node0x24414e0 -> Node0x2441550;
	Node0x243fc48 -> Node0x24415c0;
	Node0x2441240 -> Node0x24415c0;
	Node0x24415c0 -> Node0x2441630;
	Node0x2440bb8 -> Node0x24416a0;
	Node0x243fc48 -> Node0x24416a0;
	Node0x24416a0 -> Node0x2441710;
	Node0x24416a0 -> Node0x2441780;
	Node0x2441780 -> Node0x24417f0;
	Node0x2441470 -> Node0x2441860;
	Node0x24415c0 -> Node0x24418d0;
	Node0x243fc48 -> Node0x24418d0;
	Node0x24418d0 -> Node0x2441940;
	Node0x243fc48 -> Node0x24419b0;
	Node0x24419b0 -> Node0x2441a20;
	Node0x2440bb8 -> Node0x2441a20;
	Node0x2441a20 -> Node0x2441a90;
	Node0x2441470 -> Node0x2441a90;
	Node0x2441a90 -> Node0x2441b00;
	Node0x2441630 -> Node0x2441b00;
	Node0x2441b00 -> Node0x2441b70;
	Node0x24412b0 -> Node0x2441b70;
	Node0x2441b70 -> Node0x2441be0;
	Node0x2441710 -> Node0x2441be0;
	Node0x2441be0 -> Node0x2441c50;
	Node0x2441860 -> Node0x2441c50;
	Node0x2441c50 -> Node0x2441cc0;
	Node0x2441550 -> Node0x2441cc0;
	Node0x2441cc0 -> Node0x2441d30;
	Node0x24417f0 -> Node0x2441d30;
	Node0x2441d30 -> Node0x2441da0;
	Node0x2441940 -> Node0x2441da0;
	Node0x2441400 -> Node0x2441e10;
	Node0x2441da0 -> Node0x2441e10;
	Node0x2441e10 -> Node0x23df9d8;
	Node0x23df9d8 -> Node0x2441ea0;
	Node0x243f838 -> Node0x24420f8;
	Node0x243f2f8 -> Node0x2442258;
}
