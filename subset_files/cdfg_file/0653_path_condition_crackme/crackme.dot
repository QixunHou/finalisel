digraph "DFG for'crackme' function" {
	Node0x243dc40[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x243dcb0[shape=record, label="  %4 = or i32 %3, %0"];
	Node0x243dd70[shape=record, label="  %5 = xor i32 %1, %0"];
	Node0x243dde0[shape=record, label="  %6 = sub i32 %4, %5"];
	Node0x243de50[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x243dec0[shape=record, label="  %8 = and i32 %1, %0"];
	Node0x243df30[shape=record, label="  %9 = shl i32 %5, 1"];
	Node0x243dfd0[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x243e040[shape=record, label="  %11 = and i32 %3, %0"];
	Node0x243e0b0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x243e120[shape=record, label="  %13 = or i32 %1, %0"];
	Node0x243e190[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x243e230[shape=record, label="  %15 = shl i32 %13, 2"];
	Node0x243e2d0[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x243e370[shape=record, label="  %17 = mul i32 %8, 3"];
	Node0x243e3e0[shape=record, label="  %18 = add i32 %11, %0"];
	Node0x243e450[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x243e4c0[shape=record, label="  %20 = sub i32 2, %0"];
	Node0x243e530[shape=record, label="  %21 = add i32 %20, %1"];
	Node0x243e5a0[shape=record, label="  %22 = add i32 %21, %8"];
	Node0x243e610[shape=record, label="  %23 = add i32 %22, %12"];
	Node0x243e680[shape=record, label="  %24 = add i32 %23, %4"];
	Node0x243e6f0[shape=record, label="  %25 = sub i32 %24, %14"];
	Node0x243e760[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x243e7d0[shape=record, label="  %27 = sub i32 %26, %10"];
	Node0x243e840[shape=record, label="  %28 = add i32 %27, %16"];
	Node0x243e8b0[shape=record, label="  %29 = add i32 %28, %19"];
	Node0x243e920[shape=record, label="  %30 = icmp eq i32 %7, %29"];
	Node0x23de268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x243edc0[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x243f020[shape=record, label="  ret void"];
	Node0x243dc40 -> Node0x243dcb0;
	Node0x243dcb0 -> Node0x243dd70;
	Node0x243dd70 -> Node0x243dde0;
	Node0x243dde0 -> Node0x243de50;
	Node0x243de50 -> Node0x243dec0;
	Node0x243dec0 -> Node0x243df30;
	Node0x243df30 -> Node0x243dfd0;
	Node0x243dfd0 -> Node0x243e040;
	Node0x243e040 -> Node0x243e0b0;
	Node0x243e0b0 -> Node0x243e120;
	Node0x243e120 -> Node0x243e190;
	Node0x243e190 -> Node0x243e230;
	Node0x243e230 -> Node0x243e2d0;
	Node0x243e2d0 -> Node0x243e370;
	Node0x243e370 -> Node0x243e3e0;
	Node0x243e3e0 -> Node0x243e450;
	Node0x243e450 -> Node0x243e4c0;
	Node0x243e4c0 -> Node0x243e530;
	Node0x243e530 -> Node0x243e5a0;
	Node0x243e5a0 -> Node0x243e610;
	Node0x243e610 -> Node0x243e680;
	Node0x243e680 -> Node0x243e6f0;
	Node0x243e6f0 -> Node0x243e760;
	Node0x243e760 -> Node0x243e7d0;
	Node0x243e7d0 -> Node0x243e840;
	Node0x243e840 -> Node0x243e8b0;
	Node0x243e8b0 -> Node0x243e920;
	Node0x243e920 -> Node0x23de268;
	Node0x23de268 -> Node0x243edc0;
	Node0x243edc0 -> Node0x243f020;
edge [color=red]
	Node0x243dc40 -> Node0x243dcb0;
	Node0x243dcb0 -> Node0x243dde0;
	Node0x243dd70 -> Node0x243dde0;
	Node0x243dde0 -> Node0x243de50;
	Node0x243dd70 -> Node0x243df30;
	Node0x243df30 -> Node0x243dfd0;
	Node0x243dc40 -> Node0x243e040;
	Node0x243e040 -> Node0x243e0b0;
	Node0x243e120 -> Node0x243e190;
	Node0x243e120 -> Node0x243e230;
	Node0x243e230 -> Node0x243e2d0;
	Node0x243dec0 -> Node0x243e370;
	Node0x243e040 -> Node0x243e3e0;
	Node0x243e3e0 -> Node0x243e450;
	Node0x243e4c0 -> Node0x243e530;
	Node0x243e530 -> Node0x243e5a0;
	Node0x243dec0 -> Node0x243e5a0;
	Node0x243e5a0 -> Node0x243e610;
	Node0x243e0b0 -> Node0x243e610;
	Node0x243e610 -> Node0x243e680;
	Node0x243dcb0 -> Node0x243e680;
	Node0x243e680 -> Node0x243e6f0;
	Node0x243e190 -> Node0x243e6f0;
	Node0x243e6f0 -> Node0x243e760;
	Node0x243e370 -> Node0x243e760;
	Node0x243e760 -> Node0x243e7d0;
	Node0x243dfd0 -> Node0x243e7d0;
	Node0x243e7d0 -> Node0x243e840;
	Node0x243e2d0 -> Node0x243e840;
	Node0x243e840 -> Node0x243e8b0;
	Node0x243e450 -> Node0x243e8b0;
	Node0x243de50 -> Node0x243e920;
	Node0x243e8b0 -> Node0x243e920;
	Node0x243e920 -> Node0x23de268;
	Node0x23de268 -> Node0x243edc0;
}
