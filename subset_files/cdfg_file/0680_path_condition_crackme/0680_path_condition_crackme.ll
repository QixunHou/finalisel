; ModuleID = '../.././c_source_file/0680_path_condition_crackme.c'
source_filename = "../.././c_source_file/0680_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = and i32 %8, %2
  %10 = xor i32 %5, -1
  %11 = or i32 %10, %3
  %12 = xor i32 %11, -1
  %13 = xor i32 %12, %4
  %14 = mul i32 %13, 5
  %15 = add i32 %14, %9
  %16 = xor i32 %2, -1
  %17 = and i32 %16, %0
  %18 = xor i32 %17, -1
  %19 = and i32 %18, %8
  %20 = and i32 %1, %0
  %21 = or i32 %16, %1
  %22 = xor i32 %21, -1
  %23 = or i32 %20, %22
  %24 = shl i32 %23, 1
  %25 = xor i32 %20, -1
  %26 = xor i32 %2, %1
  %27 = and i32 %26, %25
  %28 = xor i32 %1, -1
  %29 = and i32 %28, %0
  %30 = xor i32 %29, -1
  %31 = xor i32 %26, -1
  %32 = and i32 %31, %30
  %33 = or i32 %29, %2
  %34 = xor i32 %0, -1
  %35 = or i32 %2, %1
  %36 = or i32 %35, %34
  %37 = and i32 %35, %0
  %38 = xor i32 %2, %0
  %39 = or i32 %38, %8
  %40 = and i32 %2, %1
  %41 = and i32 %40, %34
  %42 = and i32 %26, %0
  %43 = or i32 %41, %42
  %44 = and i32 %2, %0
  %45 = xor i32 %44, -1
  %46 = and i32 %45, %28
  %47 = xor i32 %38, -1
  %48 = and i32 %47, %30
  %49 = or i32 %40, %29
  %50 = and i32 %28, %2
  %51 = and i32 %50, %0
  %52 = or i32 %28, %2
  %53 = and i32 %52, %34
  %54 = xor i32 %51, -1
  %55 = xor i32 %53, %54
  %56 = or i32 %16, %0
  %57 = and i32 %56, %1
  %58 = and i32 %40, %0
  %59 = and i32 %35, %34
  %60 = xor i32 %59, 2147483647
  %61 = xor i32 %60, %58
  %62 = or i32 %28, %0
  %63 = and i32 %62, %47
  %64 = and i32 %16, %1
  %65 = xor i32 %64, -1
  %66 = and i32 %65, %0
  %67 = and i32 %38, %62
  %68 = and i32 %16, %8
  %69 = or i32 %38, %20
  %70 = or i32 %58, %59
  %71 = xor i32 %17, %1
  %72 = or i32 %1, %0
  %73 = xor i32 %72, %2
  %74 = and i32 %18, %1
  %75 = and i32 %26, %72
  %76 = or i32 %17, %40
  %77 = xor i32 %35, %0
  %78 = or i32 %58, %77
  %79 = xor i32 %72, -1
  %80 = or i32 %79, %2
  %81 = xor i32 %35, -1
  %82 = and i32 %47, %1
  %83 = or i32 %38, %7
  %84 = or i32 %26, %79
  %85 = and i32 %47, %8
  %86 = or i32 %38, %1
  %87 = or i32 %81, %0
  %88 = and i32 %38, %72
  %89 = shl i32 %88, 1
  %90 = and i32 %62, %16
  %91 = xor i32 %62, -1
  %92 = or i32 %47, %91
  %93 = xor i32 %41, 2147483647
  %94 = xor i32 %93, %37
  %95 = shl i32 %94, 1
  %96 = or i32 %2, %0
  %97 = xor i32 %96, -1
  %98 = or i32 %7, %97
  %99 = shl i32 %98, 1
  %100 = or i32 %17, %28
  %101 = add i32 %26, 1
  %102 = or i32 %20, %31
  %103 = and i32 %16, %30
  %104 = and i32 %7, %18
  %105 = xor i32 %56, %1
  %106 = shl i32 %105, 1
  %107 = xor i32 %29, %2
  %108 = shl i32 %107, 1
  %109 = xor i32 %40, -1
  %110 = and i32 %109, %0
  %111 = or i32 %26, %34
  %112 = xor i32 %26, %0
  %113 = or i32 %51, %112
  %114 = shl i32 %113, 1
  %115 = or i32 %64, %0
  %116 = shl i32 %115, 1
  %117 = and i32 %38, %30
  %118 = or i32 %26, %91
  %119 = xor i32 %58, %112
  %120 = xor i32 %112, -1
  %121 = xor i32 %51, %120
  %122 = and i32 %72, %16
  %123 = or i32 %97, %8
  %124 = and i32 %38, %1
  %125 = shl i32 %124, 1
  %126 = or i32 %47, %8
  %127 = or i32 %31, %91
  %128 = shl i32 %127, 2
  %129 = and i32 %38, %8
  %130 = xor i32 %56, -1
  %131 = xor i32 %130, %1
  %132 = shl i32 %20, 1
  %133 = or i32 %29, %16
  %134 = shl i32 %133, 1
  %135 = and i32 %21, %0
  %136 = or i32 %44, %8
  %137 = xor i32 %29, %109
  %138 = or i32 %38, %79
  %139 = or i32 %130, %8
  %140 = or i32 %51, %53
  %141 = xor i32 %96, %20
  %142 = or i32 %44, %91
  %143 = and i32 %72, %2
  %144 = or i32 %20, %2
  %145 = or i32 %16, %91
  %146 = xor i32 %96, %1
  %147 = or i32 %41, %37
  %148 = or i32 %31, %0
  %149 = and i32 %47, %25
  %150 = or i32 %21, %0
  %151 = or i32 %16, %8
  %152 = and i32 %38, %25
  %153 = and i32 %31, %25
  %154 = or i32 %26, %29
  %155 = or i32 %47, %28
  %156 = or i32 %31, %34
  %157 = shl i32 %156, 1
  %158 = xor i32 %31, %0
  %159 = or i32 %26, %0
  %160 = xor i32 %51, %159
  %161 = or i32 %38, %28
  %162 = shl i32 %161, 1
  %163 = xor i32 %45, %1
  %164 = and i32 %18, %28
  %165 = or i32 %21, %34
  %166 = or i32 %44, %81
  %167 = or i32 %20, %47
  %168 = or i32 %65, %34
  %169 = add i32 %29, 1
  %170 = and i32 %31, %34
  %171 = xor i32 %25, %2
  %172 = and i32 %26, %30
  %173 = shl i32 %172, 1
  %174 = or i32 %7, %16
  %175 = and i32 %56, %7
  %176 = or i32 %17, %8
  %177 = or i32 %64, %34
  %178 = or i32 %17, %1
  %179 = xor i32 %44, %72
  %180 = shl i32 %38, 1
  %181 = xor i32 %56, %20
  %182 = and i32 %21, %34
  %183 = xor i32 %29, %65
  %184 = xor i32 %44, %62
  %185 = or i32 %26, %20
  %186 = xor i32 %81, %0
  %187 = xor i32 %40, %0
  %188 = or i32 %35, %0
  %189 = and i32 %50, %34
  %190 = xor i32 %111, -1
  %191 = or i32 %189, %190
  %192 = xor i32 %22, %0
  %193 = shl i32 %192, 1
  %194 = xor i32 %35, %20
  %195 = or i32 %7, %2
  %196 = or i32 %64, %29
  %197 = shl i32 %196, 1
  %198 = and i32 %26, %34
  %199 = or i32 %130, %1
  %200 = or i32 %22, %0
  %201 = xor i32 %91, %2
  %202 = xor i32 %52, %0
  %203 = xor i32 %202, %54
  %204 = and i32 %96, %28
  %205 = and i32 %38, %28
  %206 = xor i32 %21, %0
  %207 = xor i32 %17, %109
  %208 = or i32 %38, %29
  %209 = shl i32 %208, 1
  %210 = or i32 %29, %47
  %211 = and i32 %65, %34
  %212 = xor i32 %20, %2
  %213 = or i32 %47, %1
  %214 = shl i32 %213, 1
  %215 = or i32 %31, %79
  %216 = xor i32 %18, %1
  %217 = xor i32 %159, -1
  %218 = or i32 %51, %217
  %219 = xor i32 %97, %1
  %220 = shl i32 %219, 1
  %221 = xor i32 %93, %42
  %222 = shl i32 %221, 1
  %223 = or i32 %29, %31
  %224 = and i32 %45, %8
  %225 = xor i32 %44, %1
  %226 = shl i32 %34, 1
  %227 = xor i32 %65, %0
  %228 = or i32 %44, %64
  %229 = and i32 %38, %7
  %230 = shl i32 %229, 2
  %231 = and i32 %62, %2
  %232 = or i32 %47, %79
  %233 = and i32 %96, %1
  %234 = xor i32 %64, %0
  %235 = or i32 %51, %202
  %236 = shl i32 %235, 1
  %237 = and i32 %56, %28
  %238 = shl i32 %237, 1
  %239 = xor i32 %21, %20
  %240 = xor i32 %62, %2
  %241 = or i32 %7, %47
  %242 = and i32 %7, %2
  %243 = or i32 %20, %130
  %244 = or i32 %44, %7
  %245 = or i32 %58, %120
  %246 = and i32 %7, %47
  %247 = or i32 %44, %28
  %248 = and i32 %96, %8
  %249 = xor i32 %30, %2
  %250 = or i32 %97, %1
  %251 = or i32 %44, %79
  %252 = xor i32 %44, %35
  %253 = shl i32 %252, 1
  %254 = or i32 %8, %2
  %255 = and i32 %31, %0
  %256 = and i32 %72, %31
  %257 = shl i32 %256, 1
  %258 = or i32 %20, %81
  %259 = xor i32 %79, %2
  %260 = and i32 %52, %0
  %261 = or i32 %189, %260
  %262 = or i32 %91, %2
  %263 = add i32 %17, 1
  %264 = or i32 %40, %0
  %265 = or i32 %109, %34
  %266 = and i32 %81, %34
  %267 = mul i32 %266, 28
  %268 = and i32 %64, %34
  %269 = mul i32 %268, 33
  %270 = and i32 %81, %0
  %271 = shl i32 %270, 3
  %272 = and i32 %64, %0
  %273 = mul i32 %272, 15
  %274 = and i32 %22, %34
  %275 = mul i32 %41, 46
  %276 = and i32 %22, %0
  %277 = xor i32 %3, -1
  %278 = and i32 %277, %5
  %279 = and i32 %278, %4
  %280 = xor i32 %5, %3
  %281 = or i32 %280, %4
  %282 = xor i32 %279, %281
  %283 = shl i32 %282, 1
  %284 = or i32 %10, %4
  %285 = xor i32 %4, -1
  %286 = xor i32 %280, -1
  %287 = and i32 %286, %285
  %288 = and i32 %277, %4
  %289 = xor i32 %288, %5
  %290 = and i32 %5, %3
  %291 = or i32 %290, %4
  %292 = and i32 %10, %3
  %293 = xor i32 %292, -1
  %294 = and i32 %290, %285
  %295 = and i32 %280, %4
  %296 = xor i32 %294, -1
  %297 = xor i32 %295, %296
  %298 = and i32 %293, %285
  %299 = and i32 %278, %285
  %300 = or i32 %280, %285
  %301 = xor i32 %300, -1
  %302 = or i32 %299, %301
  %303 = or i32 %277, %4
  %304 = xor i32 %303, -1
  %305 = or i32 %280, %304
  %306 = shl i32 %305, 2
  %307 = and i32 %290, %4
  %308 = xor i32 %280, %4
  %309 = xor i32 %307, %308
  %310 = xor i32 %11, %4
  %311 = or i32 %5, %4
  %312 = xor i32 %311, -1
  %313 = xor i32 %312, %3
  %314 = shl i32 %313, 1
  %315 = shl i32 %303, 2
  %316 = and i32 %10, %4
  %317 = xor i32 %4, %3
  %318 = xor i32 %317, -1
  %319 = or i32 %316, %318
  %320 = or i32 %4, %3
  %321 = xor i32 %320, -1
  %322 = or i32 %286, %321
  %323 = and i32 %284, %318
  %324 = xor i32 %284, -1
  %325 = or i32 %317, %324
  %326 = and i32 %320, %286
  %327 = shl i32 %321, 1
  %328 = and i32 %5, %4
  %329 = xor i32 %328, %293
  %330 = xor i32 %288, -1
  %331 = and i32 %330, %5
  %332 = or i32 %5, %3
  %333 = xor i32 %332, -1
  %334 = or i32 %333, %285
  %335 = or i32 %288, %286
  %336 = shl i32 %335, 2
  %337 = and i32 %4, %3
  %338 = xor i32 %337, -1
  %339 = and i32 %280, %338
  %340 = and i32 %338, %5
  %341 = xor i32 %337, %5
  %342 = and i32 %332, %285
  %343 = or i32 %307, %342
  %344 = xor i32 %330, %5
  %345 = xor i32 %5, %4
  %346 = or i32 %345, %277
  %347 = xor i32 %345, -1
  %348 = and i32 %303, %347
  %349 = xor i32 %311, %3
  %350 = or i32 %332, %4
  %351 = xor i32 %328, %332
  %352 = and i32 %280, %285
  %353 = xor i32 %307, -1
  %354 = xor i32 %352, %353
  %355 = xor i32 %290, -1
  %356 = and i32 %355, %285
  %357 = xor i32 %355, %4
  %358 = and i32 %293, %4
  %359 = or i32 %11, %285
  %360 = xor i32 %328, -1
  %361 = and i32 %360, %318
  %362 = or i32 %345, %288
  %363 = and i32 %345, %277
  %364 = or i32 %11, %4
  %365 = and i32 %286, %4
  %366 = shl i32 %365, 1
  %367 = xor i32 %293, %4
  %368 = and i32 %320, %10
  %369 = and i32 %10, %318
  %370 = and i32 %11, %285
  %371 = or i32 %304, %5
  %372 = or i32 %317, %312
  %373 = xor i32 %308, -1
  %374 = or i32 %307, %373
  %375 = shl i32 %374, 1
  %376 = xor i32 %316, -1
  %377 = xor i32 %376, %3
  %378 = add i32 %303, 1
  %379 = and i32 %345, %330
  %380 = or i32 %328, %277
  %381 = add i32 %328, 1
  %382 = or i32 %290, %288
  %383 = add i32 %288, 1
  %384 = xor i32 %290, %4
  %385 = or i32 %280, %321
  %386 = and i32 %303, %286
  %387 = shl i32 %386, 1
  %388 = or i32 %345, %321
  %389 = and i32 %286, %338
  %390 = or i32 %328, %321
  %391 = or i32 %312, %3
  %392 = and i32 %376, %318
  %393 = shl i32 %392, 1
  %394 = and i32 %317, %347
  %395 = and i32 %10, %338
  %396 = xor i32 %279, %373
  %397 = xor i32 %333, %4
  %398 = or i32 %10, %318
  %399 = or i32 %293, %4
  %400 = or i32 %328, %292
  %401 = or i32 %347, %321
  %402 = xor i32 %284, %337
  %403 = and i32 %360, %277
  %404 = or i32 %316, %277
  %405 = or i32 %324, %318
  %406 = xor i32 %332, %4
  %407 = shl i32 %406, 1
  %408 = or i32 %324, %277
  %409 = or i32 %288, %10
  %410 = and i32 %284, %277
  %411 = or i32 %347, %318
  %412 = or i32 %321, %5
  %413 = xor i32 %321, %5
  %414 = shl i32 %413, 1
  %415 = and i32 %376, %277
  %416 = xor i32 %288, %293
  %417 = xor i32 %286, %4
  %418 = and i32 %332, %4
  %419 = xor i32 %418, %296
  %420 = xor i32 %328, %3
  %421 = and i32 %345, %318
  %422 = or i32 %312, %277
  %423 = xor i32 %328, %320
  %424 = xor i32 %332, %337
  %425 = and i32 %311, %318
  %426 = or i32 %328, %318
  %427 = and i32 %376, %3
  %428 = shl i32 %427, 1
  %429 = or i32 %292, %288
  %430 = and i32 %10, %330
  %431 = and i32 %320, %347
  %432 = add i32 %345, 1
  %433 = or i32 %316, %290
  %434 = or i32 %294, %418
  %435 = or i32 %12, %285
  %436 = and i32 %360, %3
  %437 = and i32 %345, %3
  %438 = or i32 %337, %12
  %439 = or i32 %328, %317
  %440 = xor i32 %292, %4
  %441 = or i32 %286, %304
  %442 = xor i32 %281, -1
  %443 = or i32 %279, %442
  %444 = or i32 %292, %285
  %445 = or i32 %307, %352
  %446 = xor i32 %316, %11
  %447 = and i32 %347, %338
  %448 = or i32 %277, %5
  %449 = and i32 %448, %4
  %450 = or i32 %299, %449
  %451 = and i32 %320, %5
  %452 = and i32 %318, %5
  %453 = xor i32 %316, %3
  %454 = or i32 %337, %5
  %455 = shl i32 %454, 1
  %456 = add i32 %332, 1
  %457 = or i32 %355, %285
  %458 = or i32 %312, %318
  %459 = xor i32 %288, %355
  %460 = shl i32 %459, 1
  %461 = and i32 %347, %3
  %462 = add i32 %11, 1
  %463 = or i32 %288, %347
  %464 = and i32 %311, %317
  %465 = shl i32 %464, 1
  %466 = and i32 %345, %320
  %467 = or i32 %317, %5
  %468 = xor i32 %299, %300
  %469 = or i32 %293, %285
  %470 = or i32 %286, %4
  %471 = and i32 %347, %277
  %472 = or i32 %317, %10
  %473 = or i32 %328, %3
  %474 = or i32 %337, %10
  %475 = shl i32 %474, 1
  %476 = and i32 %11, %4
  %477 = and i32 %317, %376
  %478 = and i32 %311, %3
  %479 = and i32 %280, %303
  %480 = or i32 %333, %4
  %481 = xor i32 %303, %5
  %482 = xor i32 %328, %303
  %483 = or i32 %290, %285
  %484 = or i32 %324, %3
  %485 = shl i32 %484, 1
  %486 = or i32 %347, %277
  %487 = shl i32 %486, 1
  %488 = and i32 %345, %317
  %489 = or i32 %12, %4
  %490 = or i32 %317, %347
  %491 = and i32 %448, %285
  %492 = xor i32 %279, -1
  %493 = xor i32 %491, %492
  %494 = or i32 %345, %3
  %495 = shl i32 %494, 1
  %496 = and i32 %280, %320
  %497 = and i32 %286, %330
  %498 = xor i32 %448, %285
  %499 = xor i32 %498, %279
  %500 = or i32 %347, %3
  %501 = or i32 %316, %12
  %502 = and i32 %317, %5
  %503 = xor i32 %320, %5
  %504 = or i32 %337, %286
  %505 = shl i32 %504, 1
  %506 = xor i32 %324, %3
  %507 = and i32 %311, %277
  %508 = or i32 %337, %312
  %509 = and i32 %284, %3
  %510 = and i32 %345, %338
  %511 = or i32 %345, %337
  %512 = shl i32 %511, 2
  %513 = and i32 %280, %330
  %514 = xor i32 %338, %5
  %515 = add i32 %316, 1
  %516 = or i32 %345, %317
  %517 = or i32 %316, %3
  %518 = or i32 %280, %288
  %519 = and i32 %345, %303
  %520 = xor i32 %316, %355
  %521 = or i32 %332, %285
  %522 = and i32 %284, %317
  %523 = xor i32 %311, %337
  %524 = or i32 %345, %318
  %525 = xor i32 %342, %353
  %526 = and i32 %303, %5
  %527 = shl i32 %277, 1
  %528 = and i32 %303, %10
  %529 = shl i32 %286, 1
  %530 = or i32 %292, %4
  %531 = or i32 %10, %304
  %532 = xor i32 %360, %3
  %533 = or i32 %328, %333
  %534 = and i32 %347, %330
  %535 = or i32 %279, %308
  %536 = shl i32 %535, 1
  %537 = or i32 %337, %324
  %538 = or i32 %316, %317
  %539 = shl i32 %538, 1
  %540 = or i32 %337, %333
  %541 = or i32 %337, %347
  %542 = and i32 %317, %10
  %543 = or i32 %286, %285
  %544 = xor i32 %11, %337
  %545 = or i32 %307, %406
  %546 = shl i32 %545, 1
  %547 = xor i32 %284, %3
  %548 = or i32 %355, %4
  %549 = or i32 %318, %5
  %550 = or i32 %294, %295
  %551 = or i32 %345, %304
  %552 = and i32 %347, %318
  %553 = xor i32 %304, %5
  %554 = or i32 %280, %337
  %555 = xor i32 %406, %353
  %556 = or i32 %279, %491
  %557 = or i32 %347, %304
  %558 = or i32 %10, %321
  %559 = and i32 %333, %285
  %560 = and i32 %292, %285
  %561 = and i32 %12, %285
  %562 = mul i32 %561, 22
  %563 = mul i32 %294, -9
  %564 = and i32 %12, %4
  %565 = mul i32 %564, -13
  %566 = add i32 %212, %79
  %567 = add i32 %566, %174
  %568 = add i32 %567, %80
  %569 = add i32 %568, %45
  %570 = add i32 %569, %47
  %571 = add i32 %570, %264
  %572 = add i32 %571, %233
  %573 = add i32 %572, %194
  %574 = add i32 %573, %184
  %575 = add i32 %574, %166
  %576 = add i32 %575, %146
  %577 = add i32 %576, %117
  %578 = add i32 %577, %66
  %579 = add i32 %578, %43
  %580 = add i32 %579, %549
  %581 = add i32 %580, %452
  %582 = add i32 %581, %451
  %583 = add i32 %582, %355
  %584 = add i32 %583, %369
  %585 = add i32 %584, %344
  %586 = add i32 %585, %340
  %587 = add i32 %586, %61
  %588 = add i32 %587, %541
  %589 = add i32 %588, %559
  %590 = add i32 %589, %509
  %591 = add i32 %590, %506
  %592 = add i32 %591, %490
  %593 = add i32 %592, %471
  %594 = add i32 %593, %470
  %595 = add i32 %594, %408
  %596 = add i32 %595, %295
  %597 = add i32 %596, %404
  %598 = add i32 %597, %334
  %599 = add i32 %598, %291
  %600 = shl i32 %599, 1
  %601 = add i32 %169, %0
  %602 = add i32 %601, %186
  %603 = sub i32 %602, %158
  %604 = sub i32 %603, %92
  %605 = add i32 %604, %311
  %606 = add i32 %605, %289
  %607 = sub i32 %606, %507
  %608 = sub i32 %607, %560
  %609 = add i32 %608, %439
  %610 = add i32 %609, %384
  %611 = mul i32 %610, 5
  %612 = sub i32 %276, %201
  %613 = sub i32 %612, %126
  %614 = sub i32 %613, %218
  %615 = sub i32 %614, %503
  %616 = sub i32 %615, %332
  %617 = add i32 %616, %364
  %618 = add i32 %617, %493
  %619 = mul i32 %618, 3
  %620 = add i32 %58, %274
  %621 = mul i32 %620, 26
  %622 = add i32 %143, 1073741823
  %623 = add i32 %622, %73
  %624 = add i32 %623, %338
  %625 = add i32 %624, %533
  %626 = shl i32 %625, 2
  %627 = sub i32 2, %1
  %628 = add i32 %627, %28
  %629 = sub i32 %628, %226
  %630 = add i32 %629, %29
  %631 = add i32 %630, %8
  %632 = add i32 %631, %25
  %633 = add i32 %632, %72
  %634 = add i32 %633, 1
  %635 = add i32 %634, %33
  %636 = add i32 %635, %68
  %637 = sub i32 %636, %17
  %638 = add i32 %637, %81
  %639 = sub i32 %638, %56
  %640 = add i32 %639, %90
  %641 = add i32 %640, %101
  %642 = sub i32 %641, %35
  %643 = add i32 %642, %103
  %644 = sub i32 %643, %96
  %645 = add i32 %644, %22
  %646 = add i32 %645, %122
  %647 = sub i32 %646, %132
  %648 = sub i32 %647, %21
  %649 = sub i32 %648, %144
  %650 = add i32 %649, %145
  %651 = sub i32 %650, %151
  %652 = sub i32 %651, %44
  %653 = sub i32 %652, %171
  %654 = sub i32 %653, %195
  %655 = add i32 %654, %97
  %656 = sub i32 %655, %231
  %657 = add i32 %656, %240
  %658 = sub i32 %657, %242
  %659 = add i32 %658, %249
  %660 = add i32 %659, %254
  %661 = sub i32 %660, %259
  %662 = sub i32 %661, %262
  %663 = add i32 %662, %263
  %664 = add i32 %663, %3
  %665 = sub i32 %664, %19
  %666 = sub i32 %665, %27
  %667 = sub i32 %666, %32
  %668 = sub i32 %667, %36
  %669 = add i32 %668, %37
  %670 = add i32 %669, %39
  %671 = sub i32 %670, %46
  %672 = add i32 %671, %48
  %673 = add i32 %672, %49
  %674 = sub i32 %673, %57
  %675 = add i32 %674, %63
  %676 = add i32 %675, %67
  %677 = sub i32 %676, %69
  %678 = add i32 %677, %71
  %679 = sub i32 %678, %74
  %680 = add i32 %679, %75
  %681 = sub i32 %680, %76
  %682 = sub i32 %681, %82
  %683 = sub i32 %682, %83
  %684 = sub i32 %683, %84
  %685 = add i32 %684, %85
  %686 = sub i32 %685, %86
  %687 = add i32 %686, %87
  %688 = add i32 %687, %100
  %689 = sub i32 %688, %102
  %690 = sub i32 %689, %104
  %691 = sub i32 %690, %108
  %692 = sub i32 %691, %110
  %693 = sub i32 %692, %111
  %694 = add i32 %693, %118
  %695 = sub i32 %694, %123
  %696 = sub i32 %695, %129
  %697 = sub i32 %696, %131
  %698 = sub i32 %697, %134
  %699 = sub i32 %698, %135
  %700 = add i32 %699, %136
  %701 = sub i32 %700, %137
  %702 = sub i32 %701, %138
  %703 = add i32 %702, %139
  %704 = sub i32 %703, %141
  %705 = add i32 %704, %142
  %706 = sub i32 %705, %148
  %707 = sub i32 %706, %149
  %708 = sub i32 %707, %150
  %709 = add i32 %708, %152
  %710 = add i32 %709, %153
  %711 = sub i32 %710, %154
  %712 = sub i32 %711, %155
  %713 = add i32 %712, %163
  %714 = sub i32 %713, %164
  %715 = add i32 %714, %165
  %716 = add i32 %715, %167
  %717 = add i32 %716, %168
  %718 = sub i32 %717, %170
  %719 = add i32 %718, %175
  %720 = sub i32 %719, %176
  %721 = sub i32 %720, %177
  %722 = sub i32 %721, %178
  %723 = add i32 %722, %179
  %724 = sub i32 %723, %180
  %725 = add i32 %724, %181
  %726 = sub i32 %725, %182
  %727 = sub i32 %726, %183
  %728 = add i32 %727, %185
  %729 = add i32 %728, %187
  %730 = add i32 %729, %188
  %731 = add i32 %730, %198
  %732 = sub i32 %731, %199
  %733 = sub i32 %732, %200
  %734 = add i32 %733, %204
  %735 = sub i32 %734, %205
  %736 = add i32 %735, %206
  %737 = add i32 %736, %207
  %738 = sub i32 %737, %210
  %739 = sub i32 %738, %211
  %740 = add i32 %739, %215
  %741 = sub i32 %740, %216
  %742 = sub i32 %741, %223
  %743 = add i32 %742, %224
  %744 = sub i32 %743, %225
  %745 = sub i32 %744, %227
  %746 = sub i32 %745, %228
  %747 = add i32 %746, %232
  %748 = add i32 %747, %234
  %749 = add i32 %748, %239
  %750 = add i32 %749, %241
  %751 = sub i32 %750, %243
  %752 = sub i32 %751, %244
  %753 = sub i32 %752, %246
  %754 = sub i32 %753, %247
  %755 = sub i32 %754, %248
  %756 = sub i32 %755, %250
  %757 = sub i32 %756, %251
  %758 = add i32 %757, %255
  %759 = sub i32 %758, %258
  %760 = add i32 %759, %59
  %761 = add i32 %760, %159
  %762 = add i32 %761, %265
  %763 = add i32 %762, %285
  %764 = sub i32 %763, %4
  %765 = sub i32 %764, %527
  %766 = add i32 %765, %24
  %767 = add i32 %766, %55
  %768 = sub i32 %767, %70
  %769 = sub i32 %768, %78
  %770 = sub i32 %769, %89
  %771 = sub i32 %770, %99
  %772 = sub i32 %771, %106
  %773 = sub i32 %772, %116
  %774 = add i32 %773, %119
  %775 = add i32 %774, %121
  %776 = sub i32 %775, %125
  %777 = sub i32 %776, %128
  %778 = sub i32 %777, %140
  %779 = add i32 %778, %147
  %780 = sub i32 %779, %157
  %781 = add i32 %780, %160
  %782 = sub i32 %781, %162
  %783 = sub i32 %782, %173
  %784 = add i32 %783, %191
  %785 = sub i32 %784, %193
  %786 = sub i32 %785, %197
  %787 = add i32 %786, %203
  %788 = sub i32 %787, %209
  %789 = sub i32 %788, %214
  %790 = sub i32 %789, %220
  %791 = sub i32 %790, %230
  %792 = sub i32 %791, %238
  %793 = add i32 %792, %245
  %794 = sub i32 %793, %253
  %795 = sub i32 %794, %257
  %796 = add i32 %795, %261
  %797 = add i32 %796, %267
  %798 = add i32 %797, %269
  %799 = add i32 %798, %271
  %800 = add i32 %799, %273
  %801 = add i32 %800, %275
  %802 = add i32 %801, %378
  %803 = add i32 %802, %383
  %804 = sub i32 %803, %317
  %805 = add i32 %804, %337
  %806 = sub i32 %805, %5
  %807 = add i32 %806, %318
  %808 = add i32 %807, %10
  %809 = sub i32 %808, %320
  %810 = add i32 %809, %288
  %811 = sub i32 %810, %114
  %812 = sub i32 %811, %236
  %813 = add i32 %812, %293
  %814 = sub i32 %813, %315
  %815 = sub i32 %814, %327
  %816 = add i32 %815, %331
  %817 = add i32 %816, %341
  %818 = add i32 %817, %368
  %819 = sub i32 %818, %371
  %820 = add i32 %819, %381
  %821 = add i32 %820, %395
  %822 = sub i32 %821, %398
  %823 = sub i32 %822, %409
  %824 = sub i32 %823, %316
  %825 = sub i32 %824, %412
  %826 = add i32 %825, %430
  %827 = add i32 %826, %432
  %828 = add i32 %827, %312
  %829 = add i32 %828, %280
  %830 = add i32 %829, %456
  %831 = sub i32 %830, %292
  %832 = add i32 %831, %462
  %833 = sub i32 %832, %467
  %834 = add i32 %833, %345
  %835 = add i32 %834, %472
  %836 = sub i32 %835, %481
  %837 = add i32 %836, %502
  %838 = add i32 %837, %514
  %839 = add i32 %838, %515
  %840 = sub i32 %839, %328
  %841 = sub i32 %840, %526
  %842 = sub i32 %841, %528
  %843 = add i32 %842, %531
  %844 = add i32 %843, %542
  %845 = add i32 %844, %290
  %846 = sub i32 %845, %11
  %847 = sub i32 %846, %553
  %848 = sub i32 %847, %558
  %849 = add i32 %848, %621
  %850 = sub i32 %849, %95
  %851 = sub i32 %850, %222
  %852 = add i32 %851, %287
  %853 = sub i32 %852, %298
  %854 = sub i32 %853, %310
  %855 = sub i32 %854, %319
  %856 = add i32 %855, %322
  %857 = add i32 %856, %323
  %858 = add i32 %857, %325
  %859 = add i32 %858, %326
  %860 = add i32 %859, %329
  %861 = sub i32 %860, %308
  %862 = sub i32 %861, %339
  %863 = add i32 %862, %346
  %864 = sub i32 %863, %348
  %865 = sub i32 %864, %349
  %866 = add i32 %865, %350
  %867 = add i32 %866, %351
  %868 = add i32 %867, %356
  %869 = sub i32 %868, %357
  %870 = add i32 %869, %358
  %871 = add i32 %870, %359
  %872 = add i32 %871, %342
  %873 = add i32 %872, %361
  %874 = sub i32 %873, %362
  %875 = sub i32 %874, %363
  %876 = sub i32 %875, %367
  %877 = add i32 %876, %370
  %878 = sub i32 %877, %372
  %879 = sub i32 %878, %377
  %880 = add i32 %879, %379
  %881 = add i32 %880, %380
  %882 = sub i32 %881, %382
  %883 = sub i32 %882, %385
  %884 = add i32 %883, %388
  %885 = sub i32 %884, %389
  %886 = sub i32 %885, %390
  %887 = sub i32 %886, %391
  %888 = add i32 %887, %394
  %889 = add i32 %888, %397
  %890 = add i32 %889, %399
  %891 = sub i32 %890, %400
  %892 = add i32 %891, %401
  %893 = add i32 %892, %402
  %894 = sub i32 %893, %403
  %895 = sub i32 %894, %405
  %896 = sub i32 %895, %410
  %897 = add i32 %896, %411
  %898 = sub i32 %897, %414
  %899 = sub i32 %898, %415
  %900 = sub i32 %899, %416
  %901 = sub i32 %900, %417
  %902 = sub i32 %901, %420
  %903 = sub i32 %902, %421
  %904 = sub i32 %903, %422
  %905 = sub i32 %904, %423
  %906 = add i32 %905, %424
  %907 = sub i32 %906, %425
  %908 = add i32 %907, %426
  %909 = add i32 %908, %429
  %910 = sub i32 %909, %300
  %911 = add i32 %910, %431
  %912 = sub i32 %911, %433
  %913 = sub i32 %912, %435
  %914 = add i32 %913, %436
  %915 = sub i32 %914, %437
  %916 = add i32 %915, %438
  %917 = add i32 %916, %440
  %918 = sub i32 %917, %441
  %919 = sub i32 %918, %444
  %920 = sub i32 %919, %446
  %921 = sub i32 %920, %447
  %922 = add i32 %921, %453
  %923 = sub i32 %922, %455
  %924 = sub i32 %923, %457
  %925 = add i32 %924, %458
  %926 = add i32 %925, %461
  %927 = add i32 %926, %281
  %928 = add i32 %927, %463
  %929 = add i32 %928, %466
  %930 = add i32 %929, %469
  %931 = add i32 %930, %473
  %932 = sub i32 %931, %475
  %933 = sub i32 %932, %476
  %934 = sub i32 %933, %477
  %935 = add i32 %934, %478
  %936 = sub i32 %935, %479
  %937 = sub i32 %936, %480
  %938 = sub i32 %937, %482
  %939 = add i32 %938, %483
  %940 = add i32 %939, %488
  %941 = sub i32 %940, %489
  %942 = sub i32 %941, %496
  %943 = add i32 %942, %497
  %944 = add i32 %943, %500
  %945 = add i32 %944, %501
  %946 = add i32 %945, %508
  %947 = add i32 %946, %510
  %948 = add i32 %947, %513
  %949 = add i32 %948, %516
  %950 = add i32 %949, %517
  %951 = sub i32 %950, %518
  %952 = add i32 %951, %519
  %953 = add i32 %952, %520
  %954 = add i32 %953, %521
  %955 = add i32 %954, %522
  %956 = add i32 %955, %523
  %957 = add i32 %956, %524
  %958 = sub i32 %957, %529
  %959 = add i32 %958, %530
  %960 = sub i32 %959, %532
  %961 = add i32 %960, %534
  %962 = sub i32 %961, %537
  %963 = add i32 %962, %540
  %964 = add i32 %963, %543
  %965 = add i32 %964, %544
  %966 = add i32 %965, %547
  %967 = sub i32 %966, %548
  %968 = add i32 %967, %551
  %969 = add i32 %968, %552
  %970 = add i32 %969, %554
  %971 = sub i32 %970, %557
  %972 = add i32 %971, %418
  %973 = add i32 %972, %307
  %974 = sub i32 %973, %297
  %975 = add i32 %974, %302
  %976 = sub i32 %975, %306
  %977 = sub i32 %976, %309
  %978 = sub i32 %977, %314
  %979 = sub i32 %978, %336
  %980 = sub i32 %979, %343
  %981 = sub i32 %980, %354
  %982 = sub i32 %981, %366
  %983 = sub i32 %982, %387
  %984 = sub i32 %983, %393
  %985 = sub i32 %984, %396
  %986 = sub i32 %985, %407
  %987 = sub i32 %986, %419
  %988 = sub i32 %987, %428
  %989 = add i32 %988, %434
  %990 = sub i32 %989, %443
  %991 = add i32 %990, %445
  %992 = add i32 %991, %450
  %993 = sub i32 %992, %460
  %994 = sub i32 %993, %465
  %995 = add i32 %994, %468
  %996 = sub i32 %995, %485
  %997 = sub i32 %996, %487
  %998 = sub i32 %997, %495
  %999 = sub i32 %998, %499
  %1000 = sub i32 %999, %505
  %1001 = sub i32 %1000, %512
  %1002 = sub i32 %1001, %525
  %1003 = sub i32 %1002, %539
  %1004 = sub i32 %1003, %550
  %1005 = add i32 %1004, %555
  %1006 = add i32 %1005, %556
  %1007 = add i32 %1006, %562
  %1008 = add i32 %1007, %563
  %1009 = add i32 %1008, %565
  %1010 = sub i32 %1009, %283
  %1011 = sub i32 %1010, %375
  %1012 = sub i32 %1011, %536
  %1013 = sub i32 %1012, %546
  %1014 = add i32 %1013, %626
  %1015 = add i32 %1014, %619
  %1016 = add i32 %1015, %611
  %1017 = add i32 %1016, %600
  %1018 = icmp eq i32 %15, %1017
  %1019 = select i1 %1018, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1020 = tail call i32 @puts(i8* nonnull dereferenceable(1) %1019)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
