; ModuleID = '../.././c_source_file/0038_path_condition_crackme.c'
source_filename = "../.././c_source_file/0038_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = or i32 %7, %0
  %9 = and i32 %8, %1
  %10 = and i32 %7, %0
  %11 = xor i32 %10, -1
  %12 = xor i32 %1, %0
  %13 = xor i32 %12, -1
  %14 = and i32 %11, %13
  %15 = add i32 %9, %14
  %16 = xor i32 %5, -1
  %17 = or i32 %16, %3
  %18 = xor i32 %17, -1
  %19 = xor i32 %18, %4
  %20 = shl i32 %19, 2
  %21 = xor i32 %4, %3
  %22 = and i32 %21, %5
  %23 = add i32 %15, %22
  %24 = add i32 %23, %20
  %25 = xor i32 %1, -1
  %26 = or i32 %25, %0
  %27 = xor i32 %26, -1
  %28 = or i32 %27, %2
  %29 = xor i32 %0, -1
  %30 = or i32 %2, %1
  %31 = or i32 %30, %29
  %32 = and i32 %2, %1
  %33 = and i32 %32, %0
  %34 = xor i32 %2, %1
  %35 = and i32 %34, %29
  %36 = xor i32 %33, -1
  %37 = xor i32 %35, %36
  %38 = or i32 %1, %0
  %39 = and i32 %34, %38
  %40 = xor i32 %32, -1
  %41 = xor i32 %40, %0
  %42 = and i32 %1, %0
  %43 = or i32 %42, %2
  %44 = shl i32 %43, 1
  %45 = or i32 %7, %1
  %46 = xor i32 %45, %0
  %47 = xor i32 %2, %0
  %48 = xor i32 %47, -1
  %49 = or i32 %42, %48
  %50 = shl i32 %49, 2
  %51 = and i32 %25, %2
  %52 = and i32 %51, %0
  %53 = or i32 %25, %2
  %54 = xor i32 %53, %0
  %55 = or i32 %52, %54
  %56 = and i32 %2, %0
  %57 = and i32 %7, %1
  %58 = or i32 %56, %57
  %59 = xor i32 %10, %45
  %60 = xor i32 %42, -1
  %61 = and i32 %48, %60
  %62 = or i32 %10, %13
  %63 = or i32 %2, %0
  %64 = xor i32 %63, -1
  %65 = xor i32 %64, %1
  %66 = and i32 %12, %7
  %67 = xor i32 %27, %2
  %68 = xor i32 %53, -1
  %69 = or i32 %68, %0
  %70 = xor i32 %52, %69
  %71 = xor i32 %34, %0
  %72 = xor i32 %71, -1
  %73 = xor i32 %52, %72
  %74 = xor i32 %57, -1
  %75 = or i32 %74, %0
  %76 = and i32 %47, %26
  %77 = and i32 %25, %0
  %78 = xor i32 %77, -1
  %79 = and i32 %34, %78
  %80 = and i32 %30, %0
  %81 = and i32 %63, %1
  %82 = and i32 %48, %78
  %83 = or i32 %42, %7
  %84 = xor i32 %38, -1
  %85 = or i32 %56, %84
  %86 = shl i32 %85, 1
  %87 = add i32 %63, 1
  %88 = xor i32 %42, %2
  %89 = or i32 %12, %64
  %90 = and i32 %51, %29
  %91 = or i32 %34, %29
  %92 = xor i32 %91, -1
  %93 = or i32 %90, %92
  %94 = xor i32 %34, -1
  %95 = and i32 %94, %29
  %96 = or i32 %77, %2
  %97 = xor i32 %45, %42
  %98 = xor i32 %56, -1
  %99 = xor i32 %98, %1
  %100 = xor i32 %56, %74
  %101 = and i32 %32, %29
  %102 = or i32 %101, %80
  %103 = and i32 %38, %94
  %104 = xor i32 %10, %40
  %105 = and i32 %30, %29
  %106 = or i32 %33, %105
  %107 = or i32 %33, %35
  %108 = xor i32 %30, -1
  %109 = xor i32 %108, %0
  %110 = or i32 %12, %2
  %111 = or i32 %84, %2
  %112 = xor i32 %74, %0
  %113 = or i32 %94, %0
  %114 = and i32 %98, %1
  %115 = xor i32 %8, -1
  %116 = or i32 %12, %115
  %117 = or i32 %64, %13
  %118 = shl i32 %117, 1
  %119 = add i32 %42, 1
  %120 = and i32 %78, %2
  %121 = and i32 %94, %0
  %122 = xor i32 %45, -1
  %123 = or i32 %10, %122
  %124 = and i32 %47, %12
  %125 = shl i32 %124, 1
  %126 = or i32 %56, %108
  %127 = xor i32 %90, %91
  %128 = or i32 %94, %27
  %129 = or i32 %47, %25
  %130 = shl i32 %129, 1
  %131 = or i32 %115, %13
  %132 = xor i32 %30, %0
  %133 = or i32 %33, %132
  %134 = or i32 %10, %12
  %135 = or i32 %34, %42
  %136 = shl i32 %135, 1
  %137 = or i32 %34, %0
  %138 = xor i32 %57, %0
  %139 = or i32 %64, %25
  %140 = and i32 %12, %2
  %141 = shl i32 %140, 1
  %142 = and i32 %40, %0
  %143 = or i32 %77, %94
  %144 = or i32 %74, %29
  %145 = and i32 %53, %0
  %146 = xor i32 %145, -1
  %147 = xor i32 %90, %146
  %148 = or i32 %32, %29
  %149 = or i32 %10, %1
  %150 = and i32 %26, %7
  %151 = xor i32 %115, %1
  %152 = or i32 %48, %84
  %153 = and i32 %11, %25
  %154 = shl i32 %153, 1
  %155 = or i32 %34, %84
  %156 = or i32 %47, %84
  %157 = shl i32 %29, 1
  %158 = or i32 %115, %1
  %159 = or i32 %45, %0
  %160 = and i32 %34, %60
  %161 = and i32 %47, %25
  %162 = xor i32 %8, %42
  %163 = and i32 %94, %78
  %164 = or i32 %12, %7
  %165 = xor i32 %52, %137
  %166 = or i32 %34, %77
  %167 = and i32 %47, %60
  %168 = and i32 %98, %25
  %169 = xor i32 %32, %0
  %170 = add i32 %34, 1
  %171 = and i32 %8, %25
  %172 = and i32 %94, %60
  %173 = shl i32 %172, 1
  %174 = or i32 %30, %0
  %175 = xor i32 %60, %2
  %176 = or i32 %56, %12
  %177 = or i32 %57, %77
  %178 = xor i32 %84, %2
  %179 = xor i32 %137, 1073741823
  %180 = or i32 %179, %52
  %181 = or i32 %48, %27
  %182 = xor i32 %38, %2
  %183 = xor i32 %56, %26
  %184 = xor i32 %10, %1
  %185 = shl i32 %184, 1
  %186 = and i32 %74, %0
  %187 = or i32 %48, %13
  %188 = and i32 %34, %0
  %189 = and i32 %63, %13
  %190 = and i32 %13, %2
  %191 = or i32 %56, %27
  %192 = or i32 %7, %84
  %193 = or i32 %48, %25
  %194 = xor i32 %94, %0
  %195 = or i32 %45, %29
  %196 = or i32 %42, %64
  %197 = or i32 %40, %29
  %198 = and i32 %74, %29
  %199 = or i32 %64, %1
  %200 = xor i32 %63, %1
  %201 = xor i32 %122, %0
  %202 = and i32 %48, %1
  %203 = or i32 %47, %27
  %204 = xor i32 %11, %1
  %205 = or i32 %122, %0
  %206 = and i32 %47, %1
  %207 = shl i32 %206, 1
  %208 = and i32 %34, %26
  %209 = and i32 %26, %94
  %210 = or i32 %42, %108
  %211 = or i32 %108, %29
  %212 = or i32 %47, %1
  %213 = xor i32 %8, %1
  %214 = or i32 %47, %42
  %215 = and i32 %12, %98
  %216 = or i32 %32, %0
  %217 = or i32 %108, %0
  %218 = and i32 %40, %29
  %219 = or i32 %47, %77
  %220 = xor i32 %105, %36
  %221 = add i32 %10, 1
  %222 = xor i32 %63, %42
  %223 = or i32 %7, %27
  %224 = shl i32 %223, 1
  %225 = or i32 %42, %115
  %226 = shl i32 %225, 1
  %227 = or i32 %122, %29
  %228 = and i32 %38, %48
  %229 = shl i32 %228, 1
  %230 = or i32 %10, %25
  %231 = or i32 %32, %77
  %232 = and i32 %108, %29
  %233 = mul i32 %232, 20
  %234 = and i32 %57, %29
  %235 = mul i32 %234, 23
  %236 = and i32 %108, %0
  %237 = shl i32 %236, 1
  %238 = and i32 %57, %0
  %239 = mul i32 %238, 21
  %240 = and i32 %122, %29
  %241 = mul i32 %101, 14
  %242 = and i32 %122, %0
  %243 = mul i32 %33, 6
  %244 = xor i32 %3, -1
  %245 = and i32 %244, %5
  %246 = and i32 %245, %4
  %247 = xor i32 %4, -1
  %248 = or i32 %244, %5
  %249 = and i32 %248, %247
  %250 = xor i32 %246, -1
  %251 = xor i32 %249, %250
  %252 = xor i32 %5, %3
  %253 = and i32 %252, %247
  %254 = and i32 %4, %3
  %255 = xor i32 %252, -1
  %256 = or i32 %254, %255
  %257 = and i32 %5, %3
  %258 = xor i32 %257, -1
  %259 = or i32 %258, %4
  %260 = or i32 %16, %4
  %261 = and i32 %260, %21
  %262 = xor i32 %260, -1
  %263 = xor i32 %21, -1
  %264 = or i32 %262, %263
  %265 = xor i32 %5, %4
  %266 = xor i32 %265, -1
  %267 = and i32 %266, %263
  %268 = add i32 %3, 1
  %269 = and i32 %244, %4
  %270 = and i32 %16, %3
  %271 = or i32 %270, %269
  %272 = or i32 %5, %3
  %273 = xor i32 %272, -1
  %274 = xor i32 %269, -1
  %275 = and i32 %255, %274
  %276 = and i32 %5, %4
  %277 = or i32 %4, %3
  %278 = xor i32 %276, %277
  %279 = or i32 %266, %244
  %280 = xor i32 %274, %5
  %281 = or i32 %5, %4
  %282 = xor i32 %281, -1
  %283 = and i32 %265, %277
  %284 = or i32 %265, %269
  %285 = and i32 %260, %244
  %286 = xor i32 %252, %4
  %287 = or i32 %246, %286
  %288 = shl i32 %287, 1
  %289 = and i32 %274, %5
  %290 = and i32 %257, %247
  %291 = and i32 %252, %4
  %292 = or i32 %290, %291
  %293 = xor i32 %270, -1
  %294 = and i32 %293, %247
  %295 = or i32 %276, %263
  %296 = xor i32 %260, %254
  %297 = xor i32 %17, %4
  %298 = and i32 %245, %247
  %299 = and i32 %248, %4
  %300 = xor i32 %299, -1
  %301 = xor i32 %298, %300
  %302 = or i32 %252, %269
  %303 = xor i32 %273, %4
  %304 = and i32 %16, %4
  %305 = xor i32 %304, %17
  %306 = xor i32 %270, %4
  %307 = or i32 %252, %247
  %308 = or i32 %244, %4
  %309 = and i32 %308, %255
  %310 = and i32 %266, %3
  %311 = or i32 %266, %263
  %312 = and i32 %257, %4
  %313 = xor i32 %312, %286
  %314 = and i32 %21, %16
  %315 = and i32 %272, %4
  %316 = xor i32 %290, -1
  %317 = xor i32 %315, %316
  %318 = or i32 %276, %244
  %319 = xor i32 %254, -1
  %320 = and i32 %265, %319
  %321 = shl i32 %266, 1
  %322 = or i32 %254, %18
  %323 = or i32 %257, %269
  %324 = and i32 %277, %255
  %325 = xor i32 %272, %4
  %326 = xor i32 %312, -1
  %327 = xor i32 %325, %326
  %328 = and i32 %252, %277
  %329 = xor i32 %253, %326
  %330 = or i32 %272, %247
  %331 = and i32 %265, %3
  %332 = and i32 %265, %308
  %333 = or i32 %266, %3
  %334 = or i32 %269, %16
  %335 = shl i32 %334, 1
  %336 = xor i32 %293, %4
  %337 = shl i32 %276, 1
  %338 = xor i32 %304, -1
  %339 = add i32 %304, 1
  %340 = or i32 %16, %263
  %341 = and i32 %272, %247
  %342 = or i32 %312, %341
  %343 = xor i32 %308, -1
  %344 = or i32 %255, %343
  %345 = and i32 %21, %338
  %346 = or i32 %262, %3
  %347 = or i32 %312, %253
  %348 = shl i32 %347, 1
  %349 = or i32 %265, %3
  %350 = or i32 %257, %4
  %351 = or i32 %252, %254
  %352 = xor i32 %281, %254
  %353 = or i32 %304, %21
  %354 = and i32 %255, %319
  %355 = or i32 %17, %247
  %356 = xor i32 %276, %3
  %357 = xor i32 %277, -1
  %358 = or i32 %265, %357
  %359 = or i32 %254, %282
  %360 = and i32 %293, %4
  %361 = and i32 %16, %263
  %362 = and i32 %255, %247
  %363 = and i32 %265, %263
  %364 = xor i32 %277, %5
  %365 = shl i32 %364, 1
  %366 = xor i32 %269, %258
  %367 = shl i32 %272, 1
  %368 = or i32 %16, %357
  %369 = or i32 %21, %16
  %370 = and i32 %252, %308
  %371 = or i32 %262, %244
  %372 = or i32 %252, %343
  %373 = or i32 %265, %254
  %374 = or i32 %252, %4
  %375 = add i32 %269, 1
  %376 = or i32 %254, %16
  %377 = and i32 %265, %244
  %378 = and i32 %308, %5
  %379 = xor i32 %282, %3
  %380 = or i32 %21, %266
  %381 = and i32 %338, %263
  %382 = or i32 %254, %5
  %383 = or i32 %265, %244
  %384 = or i32 %282, %263
  %385 = xor i32 %357, %5
  %386 = add i32 %17, 1
  %387 = shl i32 %263, 1
  %388 = or i32 %304, %263
  %389 = xor i32 %257, %4
  %390 = and i32 %260, %3
  %391 = and i32 %277, %16
  %392 = shl i32 %391, 1
  %393 = xor i32 %286, -1
  %394 = xor i32 %246, %393
  %395 = xor i32 %269, %293
  %396 = or i32 %18, %247
  %397 = shl i32 %396, 1
  %398 = or i32 %293, %4
  %399 = shl i32 %398, 1
  %400 = or i32 %21, %5
  %401 = or i32 %265, %343
  %402 = or i32 %18, %4
  %403 = xor i32 %291, %316
  %404 = or i32 %276, %343
  %405 = xor i32 %248, %4
  %406 = or i32 %246, %405
  %407 = shl i32 %406, 1
  %408 = or i32 %270, %247
  %409 = and i32 %281, %21
  %410 = and i32 %252, %274
  %411 = or i32 %312, %393
  %412 = or i32 %304, %257
  %413 = xor i32 %281, %3
  %414 = xor i32 %272, %254
  %415 = xor i32 %307, -1
  %416 = or i32 %298, %415
  %417 = and i32 %21, %266
  %418 = or i32 %357, %5
  %419 = and i32 %281, %244
  %420 = or i32 %290, %315
  %421 = or i32 %276, %3
  %422 = or i32 %273, %247
  %423 = and i32 %308, %266
  %424 = and i32 %319, %5
  %425 = or i32 %282, %244
  %426 = xor i32 %304, %258
  %427 = xor i32 %246, %374
  %428 = or i32 %266, %357
  %429 = shl i32 %428, 1
  %430 = and i32 %266, %244
  %431 = and i32 %338, %3
  %432 = shl i32 %431, 1
  %433 = or i32 %269, %266
  %434 = or i32 %265, %263
  %435 = or i32 %276, %357
  %436 = and i32 %265, %274
  %437 = or i32 %270, %4
  %438 = shl i32 %437, 1
  %439 = and i32 %281, %3
  %440 = or i32 %16, %343
  %441 = xor i32 %276, -1
  %442 = xor i32 %441, %3
  %443 = or i32 %304, %18
  %444 = or i32 %254, %266
  %445 = shl i32 %444, 1
  %446 = or i32 %269, %5
  %447 = and i32 %260, %263
  %448 = or i32 %282, %3
  %449 = or i32 %17, %4
  %450 = or i32 %304, %3
  %451 = xor i32 %258, %4
  %452 = and i32 %258, %4
  %453 = or i32 %246, %249
  %454 = add i32 %277, 1
  %455 = or i32 %255, %4
  %456 = shl i32 %455, 1
  %457 = or i32 %257, %247
  %458 = or i32 %298, %299
  %459 = and i32 %277, %5
  %460 = and i32 %16, %274
  %461 = or i32 %273, %4
  %462 = and i32 %266, %319
  %463 = or i32 %293, %247
  %464 = and i32 %255, %4
  %465 = and i32 %263, %5
  %466 = xor i32 %298, %307
  %467 = and i32 %308, %16
  %468 = xor i32 %276, %308
  %469 = shl i32 %468, 2
  %470 = or i32 %252, %357
  %471 = or i32 %263, %5
  %472 = xor i32 %343, %5
  %473 = or i32 %255, %247
  %474 = and i32 %17, %4
  %475 = xor i32 %276, %272
  %476 = shl i32 %475, 1
  %477 = or i32 %265, %21
  %478 = and i32 %17, %247
  %479 = or i32 %254, %273
  %480 = xor i32 %308, %5
  %481 = shl i32 %480, 1
  %482 = or i32 %276, %273
  %483 = or i32 %21, %282
  %484 = and i32 %266, %274
  %485 = shl i32 %484, 1
  %486 = or i32 %21, %262
  %487 = and i32 %258, %247
  %488 = xor i32 %405, %250
  %489 = and i32 %16, %319
  %490 = xor i32 %17, %254
  %491 = xor i32 %304, %3
  %492 = xor i32 %262, %3
  %493 = or i32 %276, %21
  %494 = and i32 %281, %263
  %495 = xor i32 %276, %293
  %496 = xor i32 %269, %5
  %497 = and i32 %277, %266
  %498 = xor i32 %319, %5
  %499 = or i32 %255, %357
  %500 = and i32 %441, %3
  %501 = or i32 %276, %270
  %502 = and i32 %273, %247
  %503 = shl i32 %502, 3
  %504 = and i32 %270, %247
  %505 = and i32 %273, %4
  %506 = mul i32 %505, -12
  %507 = and i32 %270, %4
  %508 = mul i32 %507, 7
  %509 = and i32 %18, %247
  %510 = shl i32 %509, 3
  %511 = mul i32 %290, -30
  %512 = and i32 %18, %4
  %513 = mul i32 %512, 13
  %514 = add i32 %190, %27
  %515 = add i32 %514, %115
  %516 = add i32 %515, %230
  %517 = add i32 %516, %193
  %518 = add i32 %517, %169
  %519 = add i32 %518, %75
  %520 = add i32 %519, %41
  %521 = add i32 %520, %21
  %522 = add i32 %521, %254
  %523 = add i32 %522, %106
  %524 = add i32 %523, %472
  %525 = add i32 %524, %418
  %526 = add i32 %525, %289
  %527 = add i32 %526, %260
  %528 = add i32 %167, %122
  %529 = sub i32 %528, %161
  %530 = sub i32 %529, %91
  %531 = sub i32 %530, %410
  %532 = add i32 %531, %478
  %533 = add i32 %532, %388
  %534 = sub i32 %533, %371
  %535 = add i32 %534, %354
  %536 = add i32 %535, %294
  %537 = mul i32 %536, 5
  %538 = add i32 %446, %240
  %539 = add i32 %538, %180
  %540 = add i32 %539, %344
  %541 = shl i32 %540, 2
  %542 = add i32 %504, %242
  %543 = shl i32 %542, 3
  %544 = add i32 %527, %293
  %545 = add i32 %544, %501
  %546 = add i32 %545, %447
  %547 = add i32 %546, %442
  %548 = add i32 %547, %419
  %549 = add i32 %548, %417
  %550 = add i32 %549, %325
  %551 = add i32 %550, %413
  %552 = add i32 %551, %366
  %553 = add i32 %552, %363
  %554 = add i32 %553, %360
  %555 = add i32 %554, %349
  %556 = add i32 %555, %318
  %557 = add i32 %556, %305
  %558 = add i32 %557, %394
  %559 = shl i32 %558, 1
  %560 = add i32 %121, -1
  %561 = add i32 %560, %82
  %562 = sub i32 %561, %471
  %563 = add i32 %562, %424
  %564 = sub i32 %563, %491
  %565 = sub i32 %564, %490
  %566 = sub i32 %565, %470
  %567 = add i32 %566, %301
  %568 = mul i32 %567, 3
  %569 = sub i32 -2, %0
  %570 = sub i32 %569, %157
  %571 = add i32 %570, %119
  %572 = add i32 %571, %84
  %573 = add i32 %572, %42
  %574 = add i32 %573, %77
  %575 = add i32 %574, 1
  %576 = sub i32 %575, %38
  %577 = add i32 %576, %28
  %578 = sub i32 %577, %66
  %579 = sub i32 %578, %67
  %580 = sub i32 %579, %83
  %581 = add i32 %580, %87
  %582 = sub i32 %581, %88
  %583 = sub i32 %582, %96
  %584 = sub i32 %583, %47
  %585 = add i32 %584, %110
  %586 = sub i32 %585, %111
  %587 = add i32 %586, %120
  %588 = add i32 %587, %10
  %589 = add i32 %588, %32
  %590 = sub i32 %589, %150
  %591 = sub i32 %590, %164
  %592 = add i32 %591, %170
  %593 = add i32 %592, %175
  %594 = sub i32 %593, %178
  %595 = add i32 %594, %182
  %596 = sub i32 %595, %34
  %597 = sub i32 %596, %192
  %598 = add i32 %597, %56
  %599 = sub i32 %598, %57
  %600 = add i32 %599, %221
  %601 = add i32 %600, %268
  %602 = add i32 %601, %3
  %603 = sub i32 %602, %31
  %604 = add i32 %603, %39
  %605 = sub i32 %604, %44
  %606 = add i32 %605, %46
  %607 = sub i32 %606, %58
  %608 = sub i32 %607, %59
  %609 = sub i32 %608, %61
  %610 = add i32 %609, %62
  %611 = add i32 %610, %65
  %612 = add i32 %611, %76
  %613 = add i32 %612, %79
  %614 = sub i32 %613, %80
  %615 = add i32 %614, %81
  %616 = sub i32 %615, %89
  %617 = add i32 %616, %95
  %618 = sub i32 %617, %97
  %619 = sub i32 %618, %99
  %620 = add i32 %619, %100
  %621 = add i32 %620, %103
  %622 = sub i32 %621, %104
  %623 = add i32 %622, %109
  %624 = sub i32 %623, %112
  %625 = sub i32 %624, %113
  %626 = add i32 %625, %114
  %627 = add i32 %626, %116
  %628 = add i32 %627, %123
  %629 = sub i32 %628, %126
  %630 = sub i32 %629, %105
  %631 = add i32 %630, %128
  %632 = add i32 %631, %131
  %633 = sub i32 %632, %134
  %634 = sub i32 %633, %137
  %635 = add i32 %634, %138
  %636 = add i32 %635, %139
  %637 = sub i32 %636, %141
  %638 = add i32 %637, %142
  %639 = sub i32 %638, %143
  %640 = add i32 %639, %144
  %641 = sub i32 %640, %148
  %642 = sub i32 %641, %149
  %643 = sub i32 %642, %151
  %644 = add i32 %643, %152
  %645 = sub i32 %644, %155
  %646 = add i32 %645, %156
  %647 = add i32 %646, %158
  %648 = sub i32 %647, %159
  %649 = add i32 %648, %160
  %650 = add i32 %649, %162
  %651 = sub i32 %650, %163
  %652 = add i32 %651, %166
  %653 = sub i32 %652, %168
  %654 = sub i32 %653, %171
  %655 = sub i32 %654, %132
  %656 = sub i32 %655, %174
  %657 = add i32 %656, %176
  %658 = sub i32 %657, %177
  %659 = add i32 %658, %181
  %660 = add i32 %659, %183
  %661 = sub i32 %660, %186
  %662 = sub i32 %661, %187
  %663 = add i32 %662, %188
  %664 = sub i32 %663, %189
  %665 = sub i32 %664, %191
  %666 = add i32 %665, %194
  %667 = sub i32 %666, %195
  %668 = add i32 %667, %196
  %669 = sub i32 %668, %197
  %670 = sub i32 %669, %198
  %671 = sub i32 %670, %199
  %672 = add i32 %671, %200
  %673 = sub i32 %672, %201
  %674 = sub i32 %673, %202
  %675 = add i32 %674, %203
  %676 = add i32 %675, %204
  %677 = add i32 %676, %205
  %678 = add i32 %677, %208
  %679 = add i32 %678, %209
  %680 = sub i32 %679, %210
  %681 = add i32 %680, %211
  %682 = add i32 %681, %212
  %683 = add i32 %682, %213
  %684 = sub i32 %683, %214
  %685 = add i32 %684, %71
  %686 = sub i32 %685, %215
  %687 = add i32 %686, %216
  %688 = add i32 %687, %217
  %689 = sub i32 %688, %218
  %690 = sub i32 %689, %219
  %691 = add i32 %690, %222
  %692 = sub i32 %691, %224
  %693 = sub i32 %692, %227
  %694 = add i32 %693, %231
  %695 = add i32 %694, %247
  %696 = sub i32 %695, %4
  %697 = sub i32 %696, %37
  %698 = sub i32 %697, %50
  %699 = sub i32 %698, %55
  %700 = add i32 %699, %70
  %701 = add i32 %700, %73
  %702 = sub i32 %701, %86
  %703 = add i32 %702, %93
  %704 = add i32 %703, %102
  %705 = add i32 %704, %107
  %706 = sub i32 %705, %118
  %707 = sub i32 %706, %125
  %708 = sub i32 %707, %127
  %709 = sub i32 %708, %130
  %710 = sub i32 %709, %133
  %711 = sub i32 %710, %136
  %712 = sub i32 %711, %147
  %713 = sub i32 %712, %154
  %714 = sub i32 %713, %165
  %715 = sub i32 %714, %173
  %716 = sub i32 %715, %185
  %717 = sub i32 %716, %207
  %718 = add i32 %717, %220
  %719 = sub i32 %718, %226
  %720 = sub i32 %719, %229
  %721 = add i32 %720, %233
  %722 = add i32 %721, %235
  %723 = sub i32 %722, %237
  %724 = add i32 %723, %239
  %725 = add i32 %724, %241
  %726 = add i32 %725, %243
  %727 = add i32 %726, %277
  %728 = add i32 %727, %319
  %729 = add i32 %728, %375
  %730 = add i32 %729, %16
  %731 = sub i32 %730, %5
  %732 = add i32 %731, %454
  %733 = sub i32 %732, %269
  %734 = add i32 %733, %252
  %735 = add i32 %734, %273
  %736 = sub i32 %735, %280
  %737 = sub i32 %736, %314
  %738 = add i32 %737, %304
  %739 = add i32 %738, %339
  %740 = add i32 %739, %340
  %741 = add i32 %740, %262
  %742 = sub i32 %741, %361
  %743 = add i32 %742, %368
  %744 = sub i32 %743, %369
  %745 = sub i32 %744, %376
  %746 = add i32 %745, %378
  %747 = add i32 %746, %382
  %748 = add i32 %747, %385
  %749 = add i32 %748, %386
  %750 = sub i32 %749, %387
  %751 = sub i32 %750, %400
  %752 = sub i32 %751, %265
  %753 = add i32 %752, %440
  %754 = sub i32 %753, %459
  %755 = add i32 %754, %460
  %756 = add i32 %755, %465
  %757 = add i32 %756, %467
  %758 = add i32 %757, %257
  %759 = add i32 %758, %17
  %760 = sub i32 %759, %489
  %761 = add i32 %760, %496
  %762 = add i32 %761, %441
  %763 = add i32 %762, %498
  %764 = sub i32 %763, %253
  %765 = sub i32 %764, %256
  %766 = sub i32 %765, %259
  %767 = sub i32 %766, %261
  %768 = add i32 %767, %264
  %769 = sub i32 %768, %267
  %770 = add i32 %769, %271
  %771 = add i32 %770, %275
  %772 = sub i32 %771, %278
  %773 = add i32 %772, %279
  %774 = add i32 %773, %283
  %775 = add i32 %774, %284
  %776 = add i32 %775, %285
  %777 = sub i32 %776, %295
  %778 = sub i32 %777, %296
  %779 = add i32 %778, %297
  %780 = sub i32 %779, %302
  %781 = sub i32 %780, %303
  %782 = sub i32 %781, %306
  %783 = sub i32 %782, %307
  %784 = sub i32 %783, %309
  %785 = sub i32 %784, %310
  %786 = add i32 %785, %311
  %787 = sub i32 %786, %320
  %788 = sub i32 %787, %321
  %789 = sub i32 %788, %322
  %790 = sub i32 %789, %323
  %791 = add i32 %790, %324
  %792 = sub i32 %791, %328
  %793 = add i32 %792, %330
  %794 = add i32 %793, %331
  %795 = add i32 %794, %332
  %796 = sub i32 %795, %333
  %797 = sub i32 %796, %335
  %798 = sub i32 %797, %336
  %799 = sub i32 %798, %337
  %800 = add i32 %799, %315
  %801 = add i32 %800, %345
  %802 = add i32 %801, %346
  %803 = sub i32 %802, %350
  %804 = add i32 %803, %351
  %805 = add i32 %804, %352
  %806 = add i32 %805, %353
  %807 = add i32 %806, %355
  %808 = add i32 %807, %356
  %809 = add i32 %808, %358
  %810 = sub i32 %809, %359
  %811 = sub i32 %810, %362
  %812 = sub i32 %811, %365
  %813 = sub i32 %812, %367
  %814 = sub i32 %813, %370
  %815 = add i32 %814, %372
  %816 = sub i32 %815, %373
  %817 = sub i32 %816, %374
  %818 = add i32 %817, %377
  %819 = add i32 %818, %379
  %820 = add i32 %819, %380
  %821 = add i32 %820, %381
  %822 = add i32 %821, %383
  %823 = sub i32 %822, %384
  %824 = sub i32 %823, %389
  %825 = add i32 %824, %390
  %826 = sub i32 %825, %392
  %827 = sub i32 %826, %395
  %828 = add i32 %827, %401
  %829 = sub i32 %828, %402
  %830 = sub i32 %829, %404
  %831 = sub i32 %830, %341
  %832 = add i32 %831, %408
  %833 = add i32 %832, %409
  %834 = add i32 %833, %412
  %835 = sub i32 %834, %414
  %836 = sub i32 %835, %421
  %837 = add i32 %836, %422
  %838 = sub i32 %837, %423
  %839 = add i32 %838, %425
  %840 = add i32 %839, %426
  %841 = sub i32 %840, %430
  %842 = sub i32 %841, %433
  %843 = sub i32 %842, %434
  %844 = add i32 %843, %435
  %845 = add i32 %844, %436
  %846 = add i32 %845, %439
  %847 = add i32 %846, %443
  %848 = sub i32 %847, %291
  %849 = sub i32 %848, %448
  %850 = sub i32 %849, %449
  %851 = add i32 %850, %450
  %852 = sub i32 %851, %451
  %853 = add i32 %852, %452
  %854 = add i32 %853, %457
  %855 = add i32 %854, %461
  %856 = sub i32 %855, %462
  %857 = sub i32 %856, %463
  %858 = sub i32 %857, %464
  %859 = sub i32 %858, %286
  %860 = add i32 %859, %473
  %861 = sub i32 %860, %474
  %862 = add i32 %861, %477
  %863 = add i32 %862, %479
  %864 = sub i32 %863, %481
  %865 = sub i32 %864, %482
  %866 = sub i32 %865, %483
  %867 = add i32 %866, %486
  %868 = sub i32 %867, %487
  %869 = add i32 %868, %492
  %870 = add i32 %869, %493
  %871 = sub i32 %870, %494
  %872 = sub i32 %871, %495
  %873 = sub i32 %872, %497
  %874 = add i32 %873, %499
  %875 = sub i32 %874, %500
  %876 = add i32 %875, %251
  %877 = add i32 %876, %292
  %878 = sub i32 %877, %313
  %879 = add i32 %878, %317
  %880 = add i32 %879, %327
  %881 = sub i32 %880, %329
  %882 = sub i32 %881, %342
  %883 = sub i32 %882, %397
  %884 = sub i32 %883, %399
  %885 = add i32 %884, %403
  %886 = sub i32 %885, %411
  %887 = add i32 %886, %416
  %888 = add i32 %887, %420
  %889 = sub i32 %888, %427
  %890 = sub i32 %889, %429
  %891 = sub i32 %890, %432
  %892 = sub i32 %891, %438
  %893 = sub i32 %892, %445
  %894 = add i32 %893, %453
  %895 = sub i32 %894, %456
  %896 = sub i32 %895, %458
  %897 = sub i32 %896, %466
  %898 = sub i32 %897, %469
  %899 = sub i32 %898, %476
  %900 = sub i32 %899, %485
  %901 = sub i32 %900, %488
  %902 = sub i32 %901, %503
  %903 = add i32 %902, %506
  %904 = add i32 %903, %508
  %905 = sub i32 %904, %510
  %906 = add i32 %905, %511
  %907 = add i32 %906, %513
  %908 = sub i32 %907, %288
  %909 = sub i32 %908, %348
  %910 = sub i32 %909, %407
  %911 = add i32 %910, %543
  %912 = add i32 %911, %541
  %913 = add i32 %912, %537
  %914 = add i32 %913, %568
  %915 = add i32 %914, %559
  %916 = icmp eq i32 %24, %915
  %917 = select i1 %916, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %918 = tail call i32 @puts(i8* nonnull dereferenceable(1) %917)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
