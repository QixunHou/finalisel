digraph "DFG for'main' function" {
	Node0x8f3e28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x8f3ea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x8f3f38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x8f4398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x8f4478[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x8f4598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8f47d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x8f4888[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x8f57f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x8f5e80[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x8f5ef0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x8f5f60[shape=record, label="  %10 = or i32 %9, 1"];
	Node0x8f5fd0[shape=record, label="  %11 = add i32 %10, %6"];
	Node0x8f6040[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x8f60b0[shape=record, label="  %13 = or i32 %6, %12"];
	Node0x8f6120[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x8f6190[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x8f6200[shape=record, label="  %16 = mul i32 %12, 3"];
	Node0x8f6270[shape=record, label="  %17 = and i32 %7, %6"];
	Node0x8f62e0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x8f6350[shape=record, label="  %19 = shl i32 %15, 3"];
	Node0x8f63c0[shape=record, label="  %20 = or i32 %19, 7"];
	Node0x8f6430[shape=record, label="  %21 = xor i32 %14, -2"];
	Node0x8f64a0[shape=record, label="  %22 = and i32 %6, %12"];
	Node0x8f6510[shape=record, label="  %23 = mul i32 %22, -6"];
	Node0x8f6580[shape=record, label="  %24 = shl i32 %17, 2"];
	Node0x8f65f0[shape=record, label="  %25 = add i32 %16, %15"];
	Node0x8f6660[shape=record, label="  %26 = add i32 %25, %18"];
	Node0x8f66d0[shape=record, label="  %27 = add i32 %26, %14"];
	Node0x8f6740[shape=record, label="  %28 = add i32 %27, %23"];
	Node0x8f67b0[shape=record, label="  %29 = sub i32 %28, %24"];
	Node0x8f6820[shape=record, label="  %30 = add i32 %29, %20"];
	Node0x8f6890[shape=record, label="  %31 = sub i32 %30, %21"];
	Node0x8f6900[shape=record, label="  %32 = icmp eq i32 %11, %31"];
	Node0x8949d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x8f6ba0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x8f6df8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8f6f58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x8f7018[shape=record, label="  ret i32 0"];
	Node0x8f3e28 -> Node0x8f3ea8;
	Node0x8f3ea8 -> Node0x8f3f38;
	Node0x8f3f38 -> Node0x8f4398;
	Node0x8f4398 -> Node0x8f4478;
	Node0x8f4478 -> Node0x8f4598;
	Node0x8f4598 -> Node0x8f47d0;
	Node0x8f47d0 -> Node0x8f4888;
	Node0x8f4888 -> Node0x8f57f8;
	Node0x8f57f8 -> Node0x8f5e80;
	Node0x8f5e80 -> Node0x8f5ef0;
	Node0x8f5ef0 -> Node0x8f5f60;
	Node0x8f5f60 -> Node0x8f5fd0;
	Node0x8f5fd0 -> Node0x8f6040;
	Node0x8f6040 -> Node0x8f60b0;
	Node0x8f60b0 -> Node0x8f6120;
	Node0x8f6120 -> Node0x8f6190;
	Node0x8f6190 -> Node0x8f6200;
	Node0x8f6200 -> Node0x8f6270;
	Node0x8f6270 -> Node0x8f62e0;
	Node0x8f62e0 -> Node0x8f6350;
	Node0x8f6350 -> Node0x8f63c0;
	Node0x8f63c0 -> Node0x8f6430;
	Node0x8f6430 -> Node0x8f64a0;
	Node0x8f64a0 -> Node0x8f6510;
	Node0x8f6510 -> Node0x8f6580;
	Node0x8f6580 -> Node0x8f65f0;
	Node0x8f65f0 -> Node0x8f6660;
	Node0x8f6660 -> Node0x8f66d0;
	Node0x8f66d0 -> Node0x8f6740;
	Node0x8f6740 -> Node0x8f67b0;
	Node0x8f67b0 -> Node0x8f6820;
	Node0x8f6820 -> Node0x8f6890;
	Node0x8f6890 -> Node0x8f6900;
	Node0x8f6900 -> Node0x8949d8;
	Node0x8949d8 -> Node0x8f6ba0;
	Node0x8f6ba0 -> Node0x8f6df8;
	Node0x8f6df8 -> Node0x8f6f58;
	Node0x8f6f58 -> Node0x8f7018;
edge [color=red]
	Node0x8f3e28 -> Node0x8f3f38;
	Node0x8f3f38 -> Node0x8f4398;
	Node0x8f3ea8 -> Node0x8f4478;
	Node0x8f4478 -> Node0x8f4598;
	Node0x8f3e28 -> Node0x8f47d0;
	Node0x8f3ea8 -> Node0x8f47d0;
	Node0x8f3e28 -> Node0x8f4888;
	Node0x8f3ea8 -> Node0x8f57f8;
	Node0x8f57f8 -> Node0x8f5e80;
	Node0x8f4888 -> Node0x8f5e80;
	Node0x8f5e80 -> Node0x8f5ef0;
	Node0x8f5ef0 -> Node0x8f5f60;
	Node0x8f5f60 -> Node0x8f5fd0;
	Node0x8f4888 -> Node0x8f5fd0;
	Node0x8f57f8 -> Node0x8f6040;
	Node0x8f4888 -> Node0x8f60b0;
	Node0x8f6040 -> Node0x8f60b0;
	Node0x8f60b0 -> Node0x8f6120;
	Node0x8f57f8 -> Node0x8f6190;
	Node0x8f4888 -> Node0x8f6190;
	Node0x8f6040 -> Node0x8f6200;
	Node0x8f57f8 -> Node0x8f6270;
	Node0x8f4888 -> Node0x8f6270;
	Node0x8f6270 -> Node0x8f62e0;
	Node0x8f6190 -> Node0x8f6350;
	Node0x8f6350 -> Node0x8f63c0;
	Node0x8f6120 -> Node0x8f6430;
	Node0x8f4888 -> Node0x8f64a0;
	Node0x8f6040 -> Node0x8f64a0;
	Node0x8f64a0 -> Node0x8f6510;
	Node0x8f6270 -> Node0x8f6580;
	Node0x8f6200 -> Node0x8f65f0;
	Node0x8f6190 -> Node0x8f65f0;
	Node0x8f65f0 -> Node0x8f6660;
	Node0x8f62e0 -> Node0x8f6660;
	Node0x8f6660 -> Node0x8f66d0;
	Node0x8f6120 -> Node0x8f66d0;
	Node0x8f66d0 -> Node0x8f6740;
	Node0x8f6510 -> Node0x8f6740;
	Node0x8f6740 -> Node0x8f67b0;
	Node0x8f6580 -> Node0x8f67b0;
	Node0x8f67b0 -> Node0x8f6820;
	Node0x8f63c0 -> Node0x8f6820;
	Node0x8f6820 -> Node0x8f6890;
	Node0x8f6430 -> Node0x8f6890;
	Node0x8f5fd0 -> Node0x8f6900;
	Node0x8f6890 -> Node0x8f6900;
	Node0x8f6900 -> Node0x8949d8;
	Node0x8949d8 -> Node0x8f6ba0;
	Node0x8f4478 -> Node0x8f6df8;
	Node0x8f3f38 -> Node0x8f6f58;
}
