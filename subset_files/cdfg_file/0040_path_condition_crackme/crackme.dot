digraph "DFG for'crackme' function" {
	Node0xb00bd0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0xb00c40[shape=record, label="  %6 = or i32 %3, %0"];
	Node0xb00cb0[shape=record, label="  %7 = add i32 %6, %5"];
	Node0xb00d20[shape=record, label="  %8 = xor i32 %3, %0"];
	Node0xb013a0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xb01410[shape=record, label="  %10 = sub i32 %7, %9"];
	Node0xb01480[shape=record, label="  %11 = or i32 %2, %1"];
	Node0xb01520[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0xb01590[shape=record, label="  %13 = or i32 %12, %1"];
	Node0xb01630[shape=record, label="  %14 = shl i32 %13, 2"];
	Node0xb016a0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xb01710[shape=record, label="  %16 = and i32 %12, %1"];
	Node0xb01780[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0xb017f0[shape=record, label="  %18 = xor i32 %5, -1"];
	Node0xb01860[shape=record, label="  %19 = xor i32 %11, -1"];
	Node0xb018d0[shape=record, label="  %20 = and i32 %2, %1"];
	Node0xb01940[shape=record, label="  %21 = xor i32 %0, -1"];
	Node0xb019b0[shape=record, label="  %22 = xor i32 %8, -1"];
	Node0xb01a20[shape=record, label="  %23 = and i32 %21, %3"];
	Node0xb01a90[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0xb01b00[shape=record, label="  %25 = and i32 %3, %0"];
	Node0xb01b70[shape=record, label="  %26 = xor i32 %6, -1"];
	Node0xb01c10[shape=record, label="  %27 = mul i32 %26, -7"];
	Node0xb01c80[shape=record, label="  %28 = shl i32 %23, 2"];
	Node0xb01d20[shape=record, label="  %29 = mul i32 %25, -6"];
	Node0xb01d90[shape=record, label="  %30 = add i32 %16, %22"];
	Node0xb01e30[shape=record, label="  %31 = mul i32 %30, 5"];
	Node0xb01ea0[shape=record, label="  %32 = add i32 %20, %21"];
	Node0xb02120[shape=record, label="  %33 = add i32 %32, %3"];
	Node0xb02190[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0xb02200[shape=record, label="  %35 = sub i32 1, %0"];
	Node0xb02270[shape=record, label="  %36 = sub i32 %35, %11"];
	Node0xb022e0[shape=record, label="  %37 = add i32 %36, %17"];
	Node0xb02350[shape=record, label="  %38 = add i32 %37, %18"];
	Node0xb023c0[shape=record, label="  %39 = add i32 %38, %19"];
	Node0xb02430[shape=record, label="  %40 = add i32 %39, %15"];
	Node0xb024a0[shape=record, label="  %41 = add i32 %40, %24"];
	Node0xb02510[shape=record, label="  %42 = add i32 %41, %25"];
	Node0xb02580[shape=record, label="  %43 = add i32 %42, %27"];
	Node0xb025f0[shape=record, label="  %44 = sub i32 %43, %28"];
	Node0xb02660[shape=record, label="  %45 = add i32 %44, %29"];
	Node0xb026d0[shape=record, label="  %46 = add i32 %45, %31"];
	Node0xb02740[shape=record, label="  %47 = add i32 %46, %34"];
	Node0xb027b0[shape=record, label="  %48 = icmp eq i32 %10, %47"];
	Node0xaa1268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb02c50[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0xb02ca0[shape=record, label="  ret void"];
	Node0xb00bd0 -> Node0xb00c40;
	Node0xb00c40 -> Node0xb00cb0;
	Node0xb00cb0 -> Node0xb00d20;
	Node0xb00d20 -> Node0xb013a0;
	Node0xb013a0 -> Node0xb01410;
	Node0xb01410 -> Node0xb01480;
	Node0xb01480 -> Node0xb01520;
	Node0xb01520 -> Node0xb01590;
	Node0xb01590 -> Node0xb01630;
	Node0xb01630 -> Node0xb016a0;
	Node0xb016a0 -> Node0xb01710;
	Node0xb01710 -> Node0xb01780;
	Node0xb01780 -> Node0xb017f0;
	Node0xb017f0 -> Node0xb01860;
	Node0xb01860 -> Node0xb018d0;
	Node0xb018d0 -> Node0xb01940;
	Node0xb01940 -> Node0xb019b0;
	Node0xb019b0 -> Node0xb01a20;
	Node0xb01a20 -> Node0xb01a90;
	Node0xb01a90 -> Node0xb01b00;
	Node0xb01b00 -> Node0xb01b70;
	Node0xb01b70 -> Node0xb01c10;
	Node0xb01c10 -> Node0xb01c80;
	Node0xb01c80 -> Node0xb01d20;
	Node0xb01d20 -> Node0xb01d90;
	Node0xb01d90 -> Node0xb01e30;
	Node0xb01e30 -> Node0xb01ea0;
	Node0xb01ea0 -> Node0xb02120;
	Node0xb02120 -> Node0xb02190;
	Node0xb02190 -> Node0xb02200;
	Node0xb02200 -> Node0xb02270;
	Node0xb02270 -> Node0xb022e0;
	Node0xb022e0 -> Node0xb02350;
	Node0xb02350 -> Node0xb023c0;
	Node0xb023c0 -> Node0xb02430;
	Node0xb02430 -> Node0xb024a0;
	Node0xb024a0 -> Node0xb02510;
	Node0xb02510 -> Node0xb02580;
	Node0xb02580 -> Node0xb025f0;
	Node0xb025f0 -> Node0xb02660;
	Node0xb02660 -> Node0xb026d0;
	Node0xb026d0 -> Node0xb02740;
	Node0xb02740 -> Node0xb027b0;
	Node0xb027b0 -> Node0xaa1268;
	Node0xaa1268 -> Node0xb02c50;
	Node0xb02c50 -> Node0xb02ca0;
edge [color=red]
	Node0xb00c40 -> Node0xb00cb0;
	Node0xb00bd0 -> Node0xb00cb0;
	Node0xb00d20 -> Node0xb013a0;
	Node0xb00cb0 -> Node0xb01410;
	Node0xb013a0 -> Node0xb01410;
	Node0xb01520 -> Node0xb01590;
	Node0xb01590 -> Node0xb01630;
	Node0xb01630 -> Node0xb016a0;
	Node0xb01520 -> Node0xb01710;
	Node0xb01710 -> Node0xb01780;
	Node0xb00bd0 -> Node0xb017f0;
	Node0xb01480 -> Node0xb01860;
	Node0xb00d20 -> Node0xb019b0;
	Node0xb01940 -> Node0xb01a20;
	Node0xb01a20 -> Node0xb01a90;
	Node0xb00c40 -> Node0xb01b70;
	Node0xb01b70 -> Node0xb01c10;
	Node0xb01a20 -> Node0xb01c80;
	Node0xb01b00 -> Node0xb01d20;
	Node0xb01710 -> Node0xb01d90;
	Node0xb019b0 -> Node0xb01d90;
	Node0xb01d90 -> Node0xb01e30;
	Node0xb018d0 -> Node0xb01ea0;
	Node0xb01940 -> Node0xb01ea0;
	Node0xb01ea0 -> Node0xb02120;
	Node0xb02120 -> Node0xb02190;
	Node0xb02200 -> Node0xb02270;
	Node0xb01480 -> Node0xb02270;
	Node0xb02270 -> Node0xb022e0;
	Node0xb01780 -> Node0xb022e0;
	Node0xb022e0 -> Node0xb02350;
	Node0xb017f0 -> Node0xb02350;
	Node0xb02350 -> Node0xb023c0;
	Node0xb01860 -> Node0xb023c0;
	Node0xb023c0 -> Node0xb02430;
	Node0xb016a0 -> Node0xb02430;
	Node0xb02430 -> Node0xb024a0;
	Node0xb01a90 -> Node0xb024a0;
	Node0xb024a0 -> Node0xb02510;
	Node0xb01b00 -> Node0xb02510;
	Node0xb02510 -> Node0xb02580;
	Node0xb01c10 -> Node0xb02580;
	Node0xb02580 -> Node0xb025f0;
	Node0xb01c80 -> Node0xb025f0;
	Node0xb025f0 -> Node0xb02660;
	Node0xb01d20 -> Node0xb02660;
	Node0xb02660 -> Node0xb026d0;
	Node0xb01e30 -> Node0xb026d0;
	Node0xb026d0 -> Node0xb02740;
	Node0xb02190 -> Node0xb02740;
	Node0xb01410 -> Node0xb027b0;
	Node0xb02740 -> Node0xb027b0;
	Node0xb027b0 -> Node0xaa1268;
	Node0xaa1268 -> Node0xb02c50;
}
