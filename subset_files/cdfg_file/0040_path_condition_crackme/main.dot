digraph "DFG for'main' function" {
	Node0xb02e68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb02ee8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb02f78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb02fd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xb03088[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xb034b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb03598[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xb03698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb03758[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xb03808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb038c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xb03978[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xafdc00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xb03b78[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb04ae8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb05158[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb051b8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xb05230[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0xb052a0[shape=record, label="  %15 = or i32 %13, %10"];
	Node0xb05310[shape=record, label="  %16 = add i32 %15, %14"];
	Node0xb05380[shape=record, label="  %17 = xor i32 %13, %10"];
	Node0xb053f0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0xb05460[shape=record, label="  %19 = sub i32 %16, %18"];
	Node0xb054d0[shape=record, label="  %20 = or i32 %12, %11"];
	Node0xb05540[shape=record, label="  %21 = xor i32 %12, -1"];
	Node0xb055b0[shape=record, label="  %22 = or i32 %11, %21"];
	Node0xb05620[shape=record, label="  %23 = shl i32 %22, 2"];
	Node0xb05690[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0xb05700[shape=record, label="  %25 = and i32 %11, %21"];
	Node0xb05770[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0xb057e0[shape=record, label="  %27 = xor i32 %14, -1"];
	Node0xb05850[shape=record, label="  %28 = xor i32 %20, -1"];
	Node0xb058c0[shape=record, label="  %29 = and i32 %12, %11"];
	Node0xb05930[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0xb059a0[shape=record, label="  %31 = xor i32 %17, -1"];
	Node0xb05a10[shape=record, label="  %32 = and i32 %13, %30"];
	Node0xb05a80[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0xb05af0[shape=record, label="  %34 = and i32 %13, %10"];
	Node0xb05b60[shape=record, label="  %35 = xor i32 %15, -1"];
	Node0xb05bd0[shape=record, label="  %36 = mul i32 %35, -7"];
	Node0xb05c40[shape=record, label="  %37 = shl i32 %32, 2"];
	Node0xb05cb0[shape=record, label="  %38 = mul i32 %34, -6"];
	Node0xb05d20[shape=record, label="  %39 = add i32 %25, %31"];
	Node0xb05d90[shape=record, label="  %40 = mul i32 %39, 5"];
	Node0xb05e00[shape=record, label="  %41 = add i32 %29, %30"];
	Node0xb05e70[shape=record, label="  %42 = add i32 %41, %13"];
	Node0xb05ee0[shape=record, label="  %43 = shl i32 %42, 1"];
	Node0xb05f50[shape=record, label="  %44 = sub i32 1, %10"];
	Node0xb05fc0[shape=record, label="  %45 = sub i32 %44, %20"];
	Node0xb06030[shape=record, label="  %46 = add i32 %45, %26"];
	Node0xb060a0[shape=record, label="  %47 = add i32 %46, %27"];
	Node0xb06110[shape=record, label="  %48 = add i32 %47, %28"];
	Node0xb06180[shape=record, label="  %49 = add i32 %48, %24"];
	Node0xb061f0[shape=record, label="  %50 = add i32 %49, %33"];
	Node0xb06260[shape=record, label="  %51 = add i32 %50, %34"];
	Node0xb062d0[shape=record, label="  %52 = add i32 %51, %36"];
	Node0xb06340[shape=record, label="  %53 = sub i32 %52, %37"];
	Node0xb063b0[shape=record, label="  %54 = add i32 %53, %38"];
	Node0xb06420[shape=record, label="  %55 = add i32 %54, %40"];
	Node0xb06490[shape=record, label="  %56 = add i32 %55, %43"];
	Node0xb06500[shape=record, label="  %57 = icmp eq i32 %19, %56"];
	Node0xaa28b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb06590[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0xb06838[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb06998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb06aa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb06bb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb06c78[shape=record, label="  ret i32 0"];
	Node0xb02e68 -> Node0xb02ee8;
	Node0xb02ee8 -> Node0xb02f78;
	Node0xb02f78 -> Node0xb02fd8;
	Node0xb02fd8 -> Node0xb03088;
	Node0xb03088 -> Node0xb034b8;
	Node0xb034b8 -> Node0xb03598;
	Node0xb03598 -> Node0xb03698;
	Node0xb03698 -> Node0xb03758;
	Node0xb03758 -> Node0xb03808;
	Node0xb03808 -> Node0xb038c8;
	Node0xb038c8 -> Node0xb03978;
	Node0xb03978 -> Node0xafdc00;
	Node0xafdc00 -> Node0xb03b78;
	Node0xb03b78 -> Node0xb04ae8;
	Node0xb04ae8 -> Node0xb05158;
	Node0xb05158 -> Node0xb051b8;
	Node0xb051b8 -> Node0xb05230;
	Node0xb05230 -> Node0xb052a0;
	Node0xb052a0 -> Node0xb05310;
	Node0xb05310 -> Node0xb05380;
	Node0xb05380 -> Node0xb053f0;
	Node0xb053f0 -> Node0xb05460;
	Node0xb05460 -> Node0xb054d0;
	Node0xb054d0 -> Node0xb05540;
	Node0xb05540 -> Node0xb055b0;
	Node0xb055b0 -> Node0xb05620;
	Node0xb05620 -> Node0xb05690;
	Node0xb05690 -> Node0xb05700;
	Node0xb05700 -> Node0xb05770;
	Node0xb05770 -> Node0xb057e0;
	Node0xb057e0 -> Node0xb05850;
	Node0xb05850 -> Node0xb058c0;
	Node0xb058c0 -> Node0xb05930;
	Node0xb05930 -> Node0xb059a0;
	Node0xb059a0 -> Node0xb05a10;
	Node0xb05a10 -> Node0xb05a80;
	Node0xb05a80 -> Node0xb05af0;
	Node0xb05af0 -> Node0xb05b60;
	Node0xb05b60 -> Node0xb05bd0;
	Node0xb05bd0 -> Node0xb05c40;
	Node0xb05c40 -> Node0xb05cb0;
	Node0xb05cb0 -> Node0xb05d20;
	Node0xb05d20 -> Node0xb05d90;
	Node0xb05d90 -> Node0xb05e00;
	Node0xb05e00 -> Node0xb05e70;
	Node0xb05e70 -> Node0xb05ee0;
	Node0xb05ee0 -> Node0xb05f50;
	Node0xb05f50 -> Node0xb05fc0;
	Node0xb05fc0 -> Node0xb06030;
	Node0xb06030 -> Node0xb060a0;
	Node0xb060a0 -> Node0xb06110;
	Node0xb06110 -> Node0xb06180;
	Node0xb06180 -> Node0xb061f0;
	Node0xb061f0 -> Node0xb06260;
	Node0xb06260 -> Node0xb062d0;
	Node0xb062d0 -> Node0xb06340;
	Node0xb06340 -> Node0xb063b0;
	Node0xb063b0 -> Node0xb06420;
	Node0xb06420 -> Node0xb06490;
	Node0xb06490 -> Node0xb06500;
	Node0xb06500 -> Node0xaa28b8;
	Node0xaa28b8 -> Node0xb06590;
	Node0xb06590 -> Node0xb06838;
	Node0xb06838 -> Node0xb06998;
	Node0xb06998 -> Node0xb06aa8;
	Node0xb06aa8 -> Node0xb06bb8;
	Node0xb06bb8 -> Node0xb06c78;
edge [color=red]
	Node0xb02e68 -> Node0xb03088;
	Node0xb03088 -> Node0xb034b8;
	Node0xb02ee8 -> Node0xb03598;
	Node0xb03598 -> Node0xb03698;
	Node0xb02f78 -> Node0xb03758;
	Node0xb03758 -> Node0xb03808;
	Node0xb02fd8 -> Node0xb038c8;
	Node0xb038c8 -> Node0xb03978;
	Node0xb02e68 -> Node0xafdc00;
	Node0xb02ee8 -> Node0xafdc00;
	Node0xb02f78 -> Node0xafdc00;
	Node0xb02fd8 -> Node0xafdc00;
	Node0xb02e68 -> Node0xb03b78;
	Node0xb02ee8 -> Node0xb04ae8;
	Node0xb02f78 -> Node0xb05158;
	Node0xb02fd8 -> Node0xb051b8;
	Node0xb05158 -> Node0xb05230;
	Node0xb04ae8 -> Node0xb05230;
	Node0xb051b8 -> Node0xb052a0;
	Node0xb03b78 -> Node0xb052a0;
	Node0xb052a0 -> Node0xb05310;
	Node0xb05230 -> Node0xb05310;
	Node0xb051b8 -> Node0xb05380;
	Node0xb03b78 -> Node0xb05380;
	Node0xb05380 -> Node0xb053f0;
	Node0xb05310 -> Node0xb05460;
	Node0xb053f0 -> Node0xb05460;
	Node0xb05158 -> Node0xb054d0;
	Node0xb04ae8 -> Node0xb054d0;
	Node0xb05158 -> Node0xb05540;
	Node0xb04ae8 -> Node0xb055b0;
	Node0xb05540 -> Node0xb055b0;
	Node0xb055b0 -> Node0xb05620;
	Node0xb05620 -> Node0xb05690;
	Node0xb04ae8 -> Node0xb05700;
	Node0xb05540 -> Node0xb05700;
	Node0xb05700 -> Node0xb05770;
	Node0xb05230 -> Node0xb057e0;
	Node0xb054d0 -> Node0xb05850;
	Node0xb05158 -> Node0xb058c0;
	Node0xb04ae8 -> Node0xb058c0;
	Node0xb03b78 -> Node0xb05930;
	Node0xb05380 -> Node0xb059a0;
	Node0xb051b8 -> Node0xb05a10;
	Node0xb05930 -> Node0xb05a10;
	Node0xb05a10 -> Node0xb05a80;
	Node0xb051b8 -> Node0xb05af0;
	Node0xb03b78 -> Node0xb05af0;
	Node0xb052a0 -> Node0xb05b60;
	Node0xb05b60 -> Node0xb05bd0;
	Node0xb05a10 -> Node0xb05c40;
	Node0xb05af0 -> Node0xb05cb0;
	Node0xb05700 -> Node0xb05d20;
	Node0xb059a0 -> Node0xb05d20;
	Node0xb05d20 -> Node0xb05d90;
	Node0xb058c0 -> Node0xb05e00;
	Node0xb05930 -> Node0xb05e00;
	Node0xb05e00 -> Node0xb05e70;
	Node0xb051b8 -> Node0xb05e70;
	Node0xb05e70 -> Node0xb05ee0;
	Node0xb03b78 -> Node0xb05f50;
	Node0xb05f50 -> Node0xb05fc0;
	Node0xb054d0 -> Node0xb05fc0;
	Node0xb05fc0 -> Node0xb06030;
	Node0xb05770 -> Node0xb06030;
	Node0xb06030 -> Node0xb060a0;
	Node0xb057e0 -> Node0xb060a0;
	Node0xb060a0 -> Node0xb06110;
	Node0xb05850 -> Node0xb06110;
	Node0xb06110 -> Node0xb06180;
	Node0xb05690 -> Node0xb06180;
	Node0xb06180 -> Node0xb061f0;
	Node0xb05a80 -> Node0xb061f0;
	Node0xb061f0 -> Node0xb06260;
	Node0xb05af0 -> Node0xb06260;
	Node0xb06260 -> Node0xb062d0;
	Node0xb05bd0 -> Node0xb062d0;
	Node0xb062d0 -> Node0xb06340;
	Node0xb05c40 -> Node0xb06340;
	Node0xb06340 -> Node0xb063b0;
	Node0xb05cb0 -> Node0xb063b0;
	Node0xb063b0 -> Node0xb06420;
	Node0xb05d90 -> Node0xb06420;
	Node0xb06420 -> Node0xb06490;
	Node0xb05ee0 -> Node0xb06490;
	Node0xb05460 -> Node0xb06500;
	Node0xb06490 -> Node0xb06500;
	Node0xb06500 -> Node0xaa28b8;
	Node0xaa28b8 -> Node0xb06590;
	Node0xb038c8 -> Node0xb06838;
	Node0xb03758 -> Node0xb06998;
	Node0xb03598 -> Node0xb06aa8;
	Node0xb03088 -> Node0xb06bb8;
}
