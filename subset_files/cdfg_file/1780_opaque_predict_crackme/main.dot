digraph "DFG for'main' function" {
	Node0x5af2d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5af358[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5af3b8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x5af418[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x5af898[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5af978[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x5afa78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5afb38[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x5afbe8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5afe48[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x5aff08[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5b0068[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x5b00c8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x5b1620[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x5b1828[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5b1988[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5b1a98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5b1b58[shape=record, label="  ret i32 0"];
	Node0x5af2d8 -> Node0x5af358;
	Node0x5af358 -> Node0x5af3b8;
	Node0x5af3b8 -> Node0x5af418;
	Node0x5af418 -> Node0x5af898;
	Node0x5af898 -> Node0x5af978;
	Node0x5af978 -> Node0x5afa78;
	Node0x5afa78 -> Node0x5afb38;
	Node0x5afb38 -> Node0x5afbe8;
	Node0x5afbe8 -> Node0x5afe48;
	Node0x5afe48 -> Node0x5aff08;
	Node0x5aff08 -> Node0x5b0068;
	Node0x5b0068 -> Node0x5b00c8;
	Node0x5b00c8 -> Node0x5b1620;
	Node0x5b1620 -> Node0x5b1828;
	Node0x5b1828 -> Node0x5b1988;
	Node0x5b1988 -> Node0x5b1a98;
	Node0x5b1a98 -> Node0x5b1b58;
edge [color=red]
	Node0x5af2d8 -> Node0x5af418;
	Node0x5af418 -> Node0x5af898;
	Node0x5af358 -> Node0x5af978;
	Node0x5af978 -> Node0x5afa78;
	Node0x5af3b8 -> Node0x5afb38;
	Node0x5afb38 -> Node0x5afbe8;
	Node0x5af2d8 -> Node0x5afe48;
	Node0x5af358 -> Node0x5afe48;
	Node0x5af3b8 -> Node0x5afe48;
	Node0x5af2d8 -> Node0x5aff08;
	Node0x5af358 -> Node0x5b0068;
	Node0x5af3b8 -> Node0x5b00c8;
	Node0x5aff08 -> Node0x5b1620;
	Node0x5b0068 -> Node0x5b1620;
	Node0x5b00c8 -> Node0x5b1620;
	Node0x5afb38 -> Node0x5b1828;
	Node0x5af978 -> Node0x5b1988;
	Node0x5af418 -> Node0x5b1a98;
}
