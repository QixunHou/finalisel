digraph "DFG for'main' function" {
	Node0xdc0698[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xdc0718[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xdc07a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xdc0808[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xdc0c88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdc0d68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xdc0e68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xdc0f28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xdc0fd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xdc1238[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xdc12f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xdc1458[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xdc14b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xdc9160[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xdc9368[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xdc94c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xdc95d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdc9698[shape=record, label="  ret i32 0"];
	Node0xdc0698 -> Node0xdc0718;
	Node0xdc0718 -> Node0xdc07a8;
	Node0xdc07a8 -> Node0xdc0808;
	Node0xdc0808 -> Node0xdc0c88;
	Node0xdc0c88 -> Node0xdc0d68;
	Node0xdc0d68 -> Node0xdc0e68;
	Node0xdc0e68 -> Node0xdc0f28;
	Node0xdc0f28 -> Node0xdc0fd8;
	Node0xdc0fd8 -> Node0xdc1238;
	Node0xdc1238 -> Node0xdc12f8;
	Node0xdc12f8 -> Node0xdc1458;
	Node0xdc1458 -> Node0xdc14b8;
	Node0xdc14b8 -> Node0xdc9160;
	Node0xdc9160 -> Node0xdc9368;
	Node0xdc9368 -> Node0xdc94c8;
	Node0xdc94c8 -> Node0xdc95d8;
	Node0xdc95d8 -> Node0xdc9698;
edge [color=red]
	Node0xdc0698 -> Node0xdc0808;
	Node0xdc0808 -> Node0xdc0c88;
	Node0xdc0718 -> Node0xdc0d68;
	Node0xdc0d68 -> Node0xdc0e68;
	Node0xdc07a8 -> Node0xdc0f28;
	Node0xdc0f28 -> Node0xdc0fd8;
	Node0xdc0698 -> Node0xdc1238;
	Node0xdc0718 -> Node0xdc1238;
	Node0xdc07a8 -> Node0xdc1238;
	Node0xdc0698 -> Node0xdc12f8;
	Node0xdc0718 -> Node0xdc1458;
	Node0xdc07a8 -> Node0xdc14b8;
	Node0xdc12f8 -> Node0xdc9160;
	Node0xdc1458 -> Node0xdc9160;
	Node0xdc14b8 -> Node0xdc9160;
	Node0xdc0f28 -> Node0xdc9368;
	Node0xdc0d68 -> Node0xdc94c8;
	Node0xdc0808 -> Node0xdc95d8;
}
