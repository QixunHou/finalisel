digraph "DFG for'crackme' function" {
	Node0x11f39f0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x11f4070[shape=record, label="  %6 = mul i32 %5, -2"];
	Node0x11f4110[shape=record, label="  %7 = xor i32 %5, -1"];
	Node0x11f4180[shape=record, label="  %8 = add i32 %6, %7"];
	Node0x11f41f0[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0x11f4260[shape=record, label="  %10 = or i32 %9, %3"];
	Node0x11f42d0[shape=record, label="  %11 = add i32 %8, %10"];
	Node0x11f4340[shape=record, label="  %12 = or i32 %3, %0"];
	Node0x11f43b0[shape=record, label="  %13 = sub i32 %11, %12"];
	Node0x11f4420[shape=record, label="  %14 = mul i32 %1, -2"];
	Node0x11f44c0[shape=record, label="  %15 = or i32 %14, 1"];
	Node0x11f4530[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x11f45a0[shape=record, label="  %17 = and i32 %2, %1"];
	Node0x11f4640[shape=record, label="  %18 = shl i32 %17, 2"];
	Node0x11f46b0[shape=record, label="  %19 = shl i32 %9, 1"];
	Node0x11f4720[shape=record, label="  %20 = and i32 %9, %3"];
	Node0x11f4790[shape=record, label="  %21 = add i32 %10, 1"];
	Node0x11f4830[shape=record, label="  %22 = mul i32 %20, -5"];
	Node0x11f48a0[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x11f4910[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x11f4980[shape=record, label="  %25 = sub i32 %12, %16"];
	Node0x11f49f0[shape=record, label="  %26 = add i32 %25, %21"];
	Node0x11f4a90[shape=record, label="  %27 = mul i32 %26, 3"];
	Node0x11f4b00[shape=record, label="  %28 = add i32 %1, -1"];
	Node0x11f4b70[shape=record, label="  %29 = add i32 %28, %19"];
	Node0x11f4be0[shape=record, label="  %30 = sub i32 %29, %2"];
	Node0x11f4c50[shape=record, label="  %31 = add i32 %30, %15"];
	Node0x11f4cc0[shape=record, label="  %32 = add i32 %31, %16"];
	Node0x11f4f40[shape=record, label="  %33 = add i32 %32, %18"];
	Node0x11f4fb0[shape=record, label="  %34 = add i32 %33, %20"];
	Node0x11f5020[shape=record, label="  %35 = add i32 %34, %22"];
	Node0x11f5090[shape=record, label="  %36 = sub i32 %35, %24"];
	Node0x11f5100[shape=record, label="  %37 = add i32 %36, %27"];
	Node0x11f5170[shape=record, label="  %38 = icmp eq i32 %13, %37"];
	Node0x1194268[shape=record, label="  %39 = select i1 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x11f5610[shape=record, label="  %40 = tail call i32 @puts(i8* nonnull dereferenceable(1) %39)"];
	Node0x11f5660[shape=record, label="  ret void"];
	Node0x11f39f0 -> Node0x11f4070;
	Node0x11f4070 -> Node0x11f4110;
	Node0x11f4110 -> Node0x11f4180;
	Node0x11f4180 -> Node0x11f41f0;
	Node0x11f41f0 -> Node0x11f4260;
	Node0x11f4260 -> Node0x11f42d0;
	Node0x11f42d0 -> Node0x11f4340;
	Node0x11f4340 -> Node0x11f43b0;
	Node0x11f43b0 -> Node0x11f4420;
	Node0x11f4420 -> Node0x11f44c0;
	Node0x11f44c0 -> Node0x11f4530;
	Node0x11f4530 -> Node0x11f45a0;
	Node0x11f45a0 -> Node0x11f4640;
	Node0x11f4640 -> Node0x11f46b0;
	Node0x11f46b0 -> Node0x11f4720;
	Node0x11f4720 -> Node0x11f4790;
	Node0x11f4790 -> Node0x11f4830;
	Node0x11f4830 -> Node0x11f48a0;
	Node0x11f48a0 -> Node0x11f4910;
	Node0x11f4910 -> Node0x11f4980;
	Node0x11f4980 -> Node0x11f49f0;
	Node0x11f49f0 -> Node0x11f4a90;
	Node0x11f4a90 -> Node0x11f4b00;
	Node0x11f4b00 -> Node0x11f4b70;
	Node0x11f4b70 -> Node0x11f4be0;
	Node0x11f4be0 -> Node0x11f4c50;
	Node0x11f4c50 -> Node0x11f4cc0;
	Node0x11f4cc0 -> Node0x11f4f40;
	Node0x11f4f40 -> Node0x11f4fb0;
	Node0x11f4fb0 -> Node0x11f5020;
	Node0x11f5020 -> Node0x11f5090;
	Node0x11f5090 -> Node0x11f5100;
	Node0x11f5100 -> Node0x11f5170;
	Node0x11f5170 -> Node0x1194268;
	Node0x1194268 -> Node0x11f5610;
	Node0x11f5610 -> Node0x11f5660;
edge [color=red]
	Node0x11f39f0 -> Node0x11f4070;
	Node0x11f39f0 -> Node0x11f4110;
	Node0x11f4070 -> Node0x11f4180;
	Node0x11f4110 -> Node0x11f4180;
	Node0x11f41f0 -> Node0x11f4260;
	Node0x11f4180 -> Node0x11f42d0;
	Node0x11f4260 -> Node0x11f42d0;
	Node0x11f42d0 -> Node0x11f43b0;
	Node0x11f4340 -> Node0x11f43b0;
	Node0x11f4420 -> Node0x11f44c0;
	Node0x11f45a0 -> Node0x11f4640;
	Node0x11f41f0 -> Node0x11f46b0;
	Node0x11f41f0 -> Node0x11f4720;
	Node0x11f4260 -> Node0x11f4790;
	Node0x11f4720 -> Node0x11f4830;
	Node0x11f48a0 -> Node0x11f4910;
	Node0x11f4340 -> Node0x11f4980;
	Node0x11f4530 -> Node0x11f4980;
	Node0x11f4980 -> Node0x11f49f0;
	Node0x11f4790 -> Node0x11f49f0;
	Node0x11f49f0 -> Node0x11f4a90;
	Node0x11f4b00 -> Node0x11f4b70;
	Node0x11f46b0 -> Node0x11f4b70;
	Node0x11f4b70 -> Node0x11f4be0;
	Node0x11f4be0 -> Node0x11f4c50;
	Node0x11f44c0 -> Node0x11f4c50;
	Node0x11f4c50 -> Node0x11f4cc0;
	Node0x11f4530 -> Node0x11f4cc0;
	Node0x11f4cc0 -> Node0x11f4f40;
	Node0x11f4640 -> Node0x11f4f40;
	Node0x11f4f40 -> Node0x11f4fb0;
	Node0x11f4720 -> Node0x11f4fb0;
	Node0x11f4fb0 -> Node0x11f5020;
	Node0x11f4830 -> Node0x11f5020;
	Node0x11f5020 -> Node0x11f5090;
	Node0x11f4910 -> Node0x11f5090;
	Node0x11f5090 -> Node0x11f5100;
	Node0x11f4a90 -> Node0x11f5100;
	Node0x11f43b0 -> Node0x11f5170;
	Node0x11f5100 -> Node0x11f5170;
	Node0x11f5170 -> Node0x1194268;
	Node0x1194268 -> Node0x11f5610;
}
