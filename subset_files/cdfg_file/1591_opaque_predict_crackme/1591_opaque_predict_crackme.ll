; ModuleID = '../.././c_source_file/1591_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1591_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = xor i32 %4, -1
  %7 = xor i32 %3, -1
  %8 = sub i32 -2, %4
  %9 = and i32 %2, %0
  %10 = xor i32 %9, -1
  %11 = xor i32 %1, %0
  %12 = and i32 %11, %10
  %13 = add i32 %8, %12
  %14 = xor i32 %1, -1
  %15 = xor i32 %2, -1
  %16 = or i32 %15, %0
  %17 = and i32 %16, %14
  %18 = shl i32 %17, 1
  %19 = add i32 %13, %18
  %20 = and i32 %4, %3
  %21 = xor i32 %20, -1
  %22 = or i32 %6, %3
  %23 = shl i32 %22, 1
  %24 = xor i32 %23, -2
  %25 = and i32 %6, %3
  %26 = and i32 %1, %0
  %27 = or i32 %26, %2
  %28 = and i32 %15, %1
  %29 = or i32 %28, %0
  %30 = and i32 %14, %0
  %31 = xor i32 %2, %0
  %32 = or i32 %31, %30
  %33 = and i32 %31, %1
  %34 = or i32 %1, %0
  %35 = xor i32 %9, %34
  %36 = xor i32 %0, -1
  %37 = and i32 %2, %1
  %38 = or i32 %37, %36
  %39 = or i32 %15, %1
  %40 = and i32 %39, %36
  %41 = xor i32 %11, -1
  %42 = and i32 %31, %41
  %43 = xor i32 %31, -1
  %44 = or i32 %26, %43
  %45 = and i32 %14, %2
  %46 = and i32 %45, %36
  %47 = or i32 %14, %2
  %48 = and i32 %47, %0
  %49 = xor i32 %48, -1
  %50 = xor i32 %46, %49
  %51 = xor i32 %30, %2
  %52 = shl i32 %51, 1
  %53 = xor i32 %37, %0
  %54 = xor i32 %16, %1
  %55 = xor i32 %2, %1
  %56 = xor i32 %55, -1
  %57 = xor i32 %56, %0
  %58 = xor i32 %34, -1
  %59 = or i32 %56, %58
  %60 = and i32 %55, %36
  %61 = or i32 %2, %1
  %62 = and i32 %43, %1
  %63 = shl i32 %62, 1
  %64 = xor i32 %37, -1
  %65 = and i32 %64, %36
  %66 = or i32 %11, %43
  %67 = and i32 %34, %15
  %68 = and i32 %45, %0
  %69 = xor i32 %55, %0
  %70 = or i32 %68, %69
  %71 = or i32 %14, %0
  %72 = xor i32 %71, -1
  %73 = or i32 %9, %72
  %74 = xor i32 %28, -1
  %75 = and i32 %74, %36
  %76 = or i32 %41, %2
  %77 = and i32 %15, %0
  %78 = xor i32 %77, -1
  %79 = and i32 %78, %41
  %80 = or i32 %31, %14
  %81 = and i32 %55, %34
  %82 = and i32 %10, %41
  %83 = and i32 %31, %14
  %84 = or i32 %31, %58
  %85 = xor i32 %61, %0
  %86 = or i32 %72, %2
  %87 = xor i32 %58, %2
  %88 = xor i32 %9, %1
  %89 = or i32 %77, %37
  %90 = xor i32 %30, -1
  %91 = and i32 %56, %90
  %92 = or i32 %2, %0
  %93 = xor i32 %92, %26
  %94 = and i32 %31, %34
  %95 = and i32 %37, %36
  %96 = and i32 %55, %0
  %97 = or i32 %95, %96
  %98 = xor i32 %92, -1
  %99 = or i32 %98, %14
  %100 = or i32 %55, %0
  %101 = xor i32 %68, %100
  %102 = or i32 %43, %14
  %103 = xor i32 %16, -1
  %104 = or i32 %103, %1
  %105 = or i32 %39, %36
  %106 = and i32 %92, %41
  %107 = or i32 %26, %15
  %108 = or i32 %61, %0
  %109 = or i32 %43, %58
  %110 = and i32 %43, %41
  %111 = or i32 %28, %36
  %112 = and i32 %74, %0
  %113 = xor i32 %26, -1
  %114 = and i32 %55, %113
  %115 = shl i32 %114, 1
  %116 = xor i32 %39, -1
  %117 = or i32 %77, %116
  %118 = shl i32 %117, 1
  %119 = xor i32 %34, %2
  %120 = and i32 %61, %36
  %121 = shl i32 %98, 1
  %122 = and i32 %31, %11
  %123 = or i32 %74, %0
  %124 = and i32 %56, %113
  %125 = or i32 %74, %36
  %126 = or i32 %9, %1
  %127 = or i32 %103, %41
  %128 = and i32 %34, %2
  %129 = or i32 %56, %72
  %130 = and i32 %37, %0
  %131 = xor i32 %69, -1
  %132 = or i32 %130, %131
  %133 = or i32 %46, %48
  %134 = and i32 %15, %113
  %135 = xor i32 %77, %1
  %136 = or i32 %55, %36
  %137 = or i32 %15, %58
  %138 = or i32 %55, %26
  %139 = or i32 %77, %41
  %140 = and i32 %34, %56
  %141 = and i32 %78, %14
  %142 = shl i32 %141, 1
  %143 = and i32 %90, %2
  %144 = and i32 %39, %0
  %145 = and i32 %10, %1
  %146 = and i32 %47, %36
  %147 = xor i32 %68, 2147483647
  %148 = xor i32 %147, %146
  %149 = shl i32 %148, 1
  %150 = add i32 %37, 1
  %151 = xor i32 %130, -1
  %152 = xor i32 %60, %151
  %153 = add i32 %77, 1
  %154 = or i32 %130, %85
  %155 = and i32 %56, %36
  %156 = and i32 %11, %43
  %157 = xor i32 %9, %74
  %158 = xor i32 %90, %2
  %159 = or i32 %68, %146
  %160 = xor i32 %95, -1
  %161 = xor i32 %96, %160
  %162 = or i32 %77, %11
  %163 = xor i32 %61, -1
  %164 = or i32 %9, %163
  %165 = or i32 %30, %43
  %166 = or i32 %64, %0
  %167 = and i32 %31, %113
  %168 = and i32 %15, %41
  %169 = xor i32 %71, %2
  %170 = or i32 %26, %163
  %171 = or i32 %9, %14
  %172 = or i32 %28, %30
  %173 = and i32 %64, %0
  %174 = shl i32 %173, 2
  %175 = or i32 %163, %0
  %176 = or i32 %26, %98
  %177 = xor i32 %163, %0
  %178 = and i32 %31, %90
  %179 = and i32 %16, %1
  %180 = or i32 %31, %1
  %181 = or i32 %15, %72
  %182 = add i32 %9, 1
  %183 = xor i32 %39, %0
  %184 = xor i32 %113, %2
  %185 = and i32 %34, %43
  %186 = and i32 %61, %0
  %187 = xor i32 %30, %64
  %188 = xor i32 %98, %1
  %189 = shl i32 %188, 1
  %190 = and i32 %56, %0
  %191 = and i32 %11, %15
  %192 = or i32 %43, %1
  %193 = or i32 %39, %0
  %194 = and i32 %92, %14
  %195 = shl i32 %194, 1
  %196 = or i32 %130, %60
  %197 = xor i32 %9, %61
  %198 = or i32 %11, %2
  %199 = xor i32 %10, %1
  %200 = xor i32 %130, %69
  %201 = or i32 %103, %14
  %202 = and i32 %43, %14
  %203 = and i32 %78, %1
  %204 = and i32 %71, %2
  %205 = xor i32 %47, %0
  %206 = xor i32 %147, %205
  %207 = shl i32 %206, 1
  %208 = and i32 %92, %11
  %209 = and i32 %10, %14
  %210 = shl i32 %209, 1
  %211 = or i32 %9, %11
  %212 = and i32 %71, %43
  %213 = shl i32 %212, 1
  %214 = xor i32 %39, %26
  %215 = or i32 %31, %26
  %216 = xor i32 %116, %0
  %217 = or i32 %98, %1
  %218 = xor i32 %100, -1
  %219 = or i32 %68, %218
  %220 = and i32 %11, %2
  %221 = shl i32 %220, 1
  %222 = or i32 %130, %120
  %223 = and i32 %92, %1
  %224 = or i32 %116, %36
  %225 = and i32 %113, %2
  %226 = add i32 %11, 1
  %227 = and i32 %41, %2
  %228 = or i32 %68, %205
  %229 = and i32 %55, %71
  %230 = xor i32 %72, %2
  %231 = xor i32 %26, %2
  %232 = or i32 %37, %30
  %233 = or i32 %30, %15
  %234 = or i32 %77, %1
  %235 = xor i32 %46, %136
  %236 = or i32 %37, %0
  %237 = and i32 %31, %71
  %238 = or i32 %116, %0
  %239 = xor i32 %9, %71
  %240 = or i32 %55, %30
  %241 = xor i32 %28, %0
  %242 = xor i32 %136, -1
  %243 = or i32 %46, %242
  %244 = or i32 %26, %116
  %245 = or i32 %58, %2
  %246 = and i32 %11, %78
  %247 = xor i32 %16, %26
  %248 = shl i32 %247, 1
  %249 = xor i32 %103, %1
  %250 = xor i32 %68, %131
  %251 = xor i32 %61, %26
  %252 = or i32 %43, %72
  %253 = and i32 %43, %113
  %254 = xor i32 %85, %151
  %255 = and i32 %71, %56
  %256 = or i32 %163, %36
  %257 = shl i32 %256, 2
  %258 = or i32 %95, %186
  %259 = xor i32 %78, %1
  %260 = xor i32 %92, %1
  %261 = shl i32 %260, 1
  %262 = or i32 %11, %103
  %263 = or i32 %9, %28
  %264 = xor i32 %74, %0
  %265 = and i32 %43, %90
  %266 = or i32 %43, %41
  %267 = shl i32 %266, 1
  %268 = or i32 %64, %36
  %269 = or i32 %30, %2
  %270 = or i32 %11, %98
  %271 = or i32 %56, %36
  %272 = xor i32 %186, %160
  %273 = and i32 %55, %90
  %274 = or i32 %15, %41
  %275 = or i32 %9, %41
  %276 = xor i32 %64, %0
  %277 = shl i32 %276, 1
  %278 = or i32 %31, %72
  %279 = xor i32 %30, %74
  %280 = or i32 %77, %14
  %281 = or i32 %26, %56
  %282 = or i32 %31, %11
  %283 = xor i32 %120, %151
  %284 = or i32 %9, %58
  %285 = or i32 %56, %0
  %286 = or i32 %61, %36
  %287 = or i32 %11, %15
  %288 = or i32 %30, %56
  %289 = and i32 %163, %36
  %290 = mul i32 %289, -12
  %291 = and i32 %28, %36
  %292 = mul i32 %291, -31
  %293 = and i32 %163, %0
  %294 = mul i32 %293, -24
  %295 = and i32 %28, %0
  %296 = mul i32 %295, -28
  %297 = and i32 %116, %36
  %298 = mul i32 %297, -26
  %299 = mul i32 %95, -47
  %300 = and i32 %116, %0
  %301 = mul i32 %300, -27
  %302 = mul i32 %130, -46
  %303 = add i32 %34, %36
  %304 = add i32 %303, %90
  %305 = add i32 %304, %274
  %306 = add i32 %305, %74
  %307 = add i32 %306, %227
  %308 = add i32 %307, %9
  %309 = add i32 %308, %87
  %310 = add i32 %309, %67
  %311 = add i32 %310, %278
  %312 = add i32 %311, %268
  %313 = add i32 %312, %263
  %314 = add i32 %313, %241
  %315 = add i32 %314, %217
  %316 = add i32 %315, %96
  %317 = add i32 %316, %208
  %318 = add i32 %317, %175
  %319 = add i32 %318, %162
  %320 = add i32 %319, %157
  %321 = add i32 %320, %145
  %322 = add i32 %321, %144
  %323 = add i32 %322, %125
  %324 = add i32 %323, %108
  %325 = add i32 %324, %106
  %326 = add i32 %325, %83
  %327 = add i32 %326, %82
  %328 = add i32 %327, %81
  %329 = add i32 %328, %25
  %330 = add i32 %329, %20
  %331 = shl i32 %330, 1
  %332 = sub i32 %103, %230
  %333 = add i32 %332, %183
  %334 = sub i32 %333, %255
  %335 = add i32 %334, %109
  %336 = mul i32 %335, 5
  %337 = add i32 %26, %163
  %338 = add i32 %337, %271
  %339 = add i32 %338, %282
  %340 = add i32 %339, %249
  %341 = shl i32 %340, 2
  %342 = add i32 %11, %269
  %343 = add i32 %342, %76
  %344 = sub i32 %343, %172
  %345 = add i32 %344, %203
  %346 = sub i32 %345, %73
  %347 = mul i32 %346, 3
  %348 = add i32 %0, 2
  %349 = add i32 %348, %15
  %350 = add i32 %349, %30
  %351 = add i32 %350, %226
  %352 = add i32 %351, %113
  %353 = add i32 %352, %7
  %354 = sub i32 %353, %3
  %355 = sub i32 %354, %27
  %356 = add i32 %355, %16
  %357 = add i32 %356, %61
  %358 = sub i32 %357, %39
  %359 = add i32 %358, %43
  %360 = add i32 %359, %86
  %361 = add i32 %360, %107
  %362 = sub i32 %361, %119
  %363 = sub i32 %362, %77
  %364 = add i32 %363, %37
  %365 = add i32 %364, %128
  %366 = add i32 %365, %28
  %367 = add i32 %366, %134
  %368 = sub i32 %367, %137
  %369 = sub i32 %368, %143
  %370 = add i32 %369, %150
  %371 = add i32 %370, %153
  %372 = add i32 %371, %116
  %373 = sub i32 %372, %158
  %374 = add i32 %373, %168
  %375 = sub i32 %374, %169
  %376 = sub i32 %375, %181
  %377 = add i32 %376, %182
  %378 = add i32 %377, %184
  %379 = sub i32 %378, %191
  %380 = add i32 %379, %198
  %381 = sub i32 %380, %204
  %382 = sub i32 %381, %225
  %383 = add i32 %382, %231
  %384 = sub i32 %383, %233
  %385 = sub i32 %384, %245
  %386 = add i32 %385, %269
  %387 = sub i32 %386, %287
  %388 = sub i32 %387, %31
  %389 = sub i32 %388, %29
  %390 = add i32 %389, %32
  %391 = sub i32 %390, %33
  %392 = sub i32 %391, %35
  %393 = sub i32 %392, %38
  %394 = sub i32 %393, %40
  %395 = sub i32 %394, %42
  %396 = sub i32 %395, %44
  %397 = sub i32 %396, %52
  %398 = sub i32 %397, %53
  %399 = add i32 %398, %54
  %400 = add i32 %399, %57
  %401 = sub i32 %400, %59
  %402 = sub i32 %401, %60
  %403 = sub i32 %402, %65
  %404 = sub i32 %403, %66
  %405 = sub i32 %404, %75
  %406 = add i32 %405, %79
  %407 = add i32 %406, %80
  %408 = sub i32 %407, %84
  %409 = add i32 %408, %85
  %410 = add i32 %409, %88
  %411 = add i32 %410, %89
  %412 = sub i32 %411, %91
  %413 = add i32 %412, %93
  %414 = sub i32 %413, %94
  %415 = sub i32 %414, %99
  %416 = add i32 %415, %102
  %417 = sub i32 %416, %104
  %418 = add i32 %417, %105
  %419 = add i32 %418, %110
  %420 = add i32 %419, %111
  %421 = sub i32 %420, %112
  %422 = sub i32 %421, %120
  %423 = sub i32 %422, %121
  %424 = add i32 %423, %122
  %425 = sub i32 %424, %123
  %426 = add i32 %425, %124
  %427 = add i32 %426, %126
  %428 = add i32 %427, %127
  %429 = sub i32 %428, %129
  %430 = add i32 %429, %135
  %431 = sub i32 %430, %136
  %432 = add i32 %431, %138
  %433 = sub i32 %432, %139
  %434 = add i32 %433, %140
  %435 = sub i32 %434, %155
  %436 = sub i32 %435, %156
  %437 = add i32 %436, %164
  %438 = add i32 %437, %69
  %439 = add i32 %438, %165
  %440 = add i32 %439, %166
  %441 = sub i32 %440, %167
  %442 = sub i32 %441, %170
  %443 = add i32 %442, %171
  %444 = add i32 %443, %176
  %445 = add i32 %444, %177
  %446 = add i32 %445, %178
  %447 = add i32 %446, %179
  %448 = add i32 %447, %180
  %449 = add i32 %448, %185
  %450 = add i32 %449, %186
  %451 = add i32 %450, %187
  %452 = add i32 %451, %100
  %453 = add i32 %452, %190
  %454 = add i32 %453, %192
  %455 = add i32 %454, %193
  %456 = add i32 %455, %197
  %457 = sub i32 %456, %199
  %458 = add i32 %457, %201
  %459 = sub i32 %458, %202
  %460 = add i32 %459, %211
  %461 = add i32 %460, %214
  %462 = sub i32 %461, %215
  %463 = add i32 %462, %216
  %464 = sub i32 %463, %221
  %465 = sub i32 %464, %223
  %466 = add i32 %465, %224
  %467 = sub i32 %466, %229
  %468 = add i32 %467, %232
  %469 = sub i32 %468, %234
  %470 = sub i32 %469, %236
  %471 = add i32 %470, %237
  %472 = sub i32 %471, %238
  %473 = add i32 %472, %239
  %474 = add i32 %473, %240
  %475 = add i32 %474, %244
  %476 = add i32 %475, %246
  %477 = add i32 %476, %251
  %478 = sub i32 %477, %252
  %479 = sub i32 %478, %253
  %480 = sub i32 %479, %259
  %481 = add i32 %480, %262
  %482 = add i32 %481, %264
  %483 = add i32 %482, %265
  %484 = add i32 %483, %270
  %485 = sub i32 %484, %273
  %486 = sub i32 %485, %275
  %487 = add i32 %486, %279
  %488 = sub i32 %487, %280
  %489 = add i32 %488, %281
  %490 = add i32 %489, %284
  %491 = add i32 %490, %285
  %492 = sub i32 %491, %286
  %493 = add i32 %492, %288
  %494 = sub i32 %493, %22
  %495 = add i32 %494, %21
  %496 = sub i32 %495, %50
  %497 = sub i32 %496, %63
  %498 = add i32 %497, %70
  %499 = sub i32 %498, %97
  %500 = add i32 %499, %101
  %501 = sub i32 %500, %115
  %502 = sub i32 %501, %118
  %503 = add i32 %502, %132
  %504 = sub i32 %503, %133
  %505 = sub i32 %504, %142
  %506 = add i32 %505, %152
  %507 = add i32 %506, %154
  %508 = sub i32 %507, %159
  %509 = sub i32 %508, %161
  %510 = sub i32 %509, %174
  %511 = sub i32 %510, %189
  %512 = sub i32 %511, %195
  %513 = add i32 %512, %196
  %514 = sub i32 %513, %200
  %515 = sub i32 %514, %210
  %516 = sub i32 %515, %213
  %517 = add i32 %516, %219
  %518 = sub i32 %517, %222
  %519 = sub i32 %518, %228
  %520 = sub i32 %519, %235
  %521 = add i32 %520, %243
  %522 = sub i32 %521, %248
  %523 = sub i32 %522, %250
  %524 = sub i32 %523, %254
  %525 = sub i32 %524, %257
  %526 = add i32 %525, %258
  %527 = sub i32 %526, %261
  %528 = sub i32 %527, %267
  %529 = add i32 %528, %272
  %530 = sub i32 %529, %277
  %531 = sub i32 %530, %283
  %532 = add i32 %531, %290
  %533 = add i32 %532, %292
  %534 = add i32 %533, %294
  %535 = add i32 %534, %296
  %536 = add i32 %535, %298
  %537 = add i32 %536, %299
  %538 = add i32 %537, %301
  %539 = add i32 %538, %302
  %540 = sub i32 %539, %24
  %541 = sub i32 %540, %149
  %542 = sub i32 %541, %207
  %543 = add i32 %542, %336
  %544 = add i32 %543, %341
  %545 = add i32 %544, %347
  %546 = add i32 %545, %331
  %547 = icmp eq i32 %19, %546
  %548 = select i1 %547, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %549 = tail call i32 @puts(i8* nonnull dereferenceable(1) %548)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
