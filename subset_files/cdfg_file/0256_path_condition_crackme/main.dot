digraph "DFG for'main' function" {
	Node0x1389e28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1389ea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1389f38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1389f98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x138a048[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x138a478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x138a558[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x138a658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x138a718[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x138a7c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x138a888[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x138a938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x13847e0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x138ab38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x138baa8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x138c118[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x138c178[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x138c288[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x138c4e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x138c648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x138c758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x138c868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x138c928[shape=record, label="  ret i32 0"];
	Node0x1389e28 -> Node0x1389ea8;
	Node0x1389ea8 -> Node0x1389f38;
	Node0x1389f38 -> Node0x1389f98;
	Node0x1389f98 -> Node0x138a048;
	Node0x138a048 -> Node0x138a478;
	Node0x138a478 -> Node0x138a558;
	Node0x138a558 -> Node0x138a658;
	Node0x138a658 -> Node0x138a718;
	Node0x138a718 -> Node0x138a7c8;
	Node0x138a7c8 -> Node0x138a888;
	Node0x138a888 -> Node0x138a938;
	Node0x138a938 -> Node0x13847e0;
	Node0x13847e0 -> Node0x138ab38;
	Node0x138ab38 -> Node0x138baa8;
	Node0x138baa8 -> Node0x138c118;
	Node0x138c118 -> Node0x138c178;
	Node0x138c178 -> Node0x138c288;
	Node0x138c288 -> Node0x138c4e8;
	Node0x138c4e8 -> Node0x138c648;
	Node0x138c648 -> Node0x138c758;
	Node0x138c758 -> Node0x138c868;
	Node0x138c868 -> Node0x138c928;
edge [color=red]
	Node0x1389e28 -> Node0x138a048;
	Node0x138a048 -> Node0x138a478;
	Node0x1389ea8 -> Node0x138a558;
	Node0x138a558 -> Node0x138a658;
	Node0x1389f38 -> Node0x138a718;
	Node0x138a718 -> Node0x138a7c8;
	Node0x1389f98 -> Node0x138a888;
	Node0x138a888 -> Node0x138a938;
	Node0x1389e28 -> Node0x13847e0;
	Node0x1389ea8 -> Node0x13847e0;
	Node0x1389f38 -> Node0x13847e0;
	Node0x1389f98 -> Node0x13847e0;
	Node0x1389e28 -> Node0x138ab38;
	Node0x1389ea8 -> Node0x138baa8;
	Node0x1389f38 -> Node0x138c118;
	Node0x1389f98 -> Node0x138c178;
	Node0x138ab38 -> Node0x138c288;
	Node0x138baa8 -> Node0x138c288;
	Node0x138c118 -> Node0x138c288;
	Node0x138c178 -> Node0x138c288;
	Node0x138a888 -> Node0x138c4e8;
	Node0x138a718 -> Node0x138c648;
	Node0x138a558 -> Node0x138c758;
	Node0x138a048 -> Node0x138c868;
}
