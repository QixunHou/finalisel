digraph "DFG for'main' function" {
	Node0xf77a98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf77b48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf77bd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf77c38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xf77ce8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xf78118[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf781f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xf782f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf783b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xf78468[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf78528[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xf785d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf72ad0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xf787d8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf79748[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf79db8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf79e18[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xf79e90[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0xf79f00[shape=record, label="  %15 = sub i32 %14, %11"];
	Node0xf79f70[shape=record, label="  %16 = xor i32 %13, -1"];
	Node0xf79fe0[shape=record, label="  %17 = add i32 %15, %16"];
	Node0xf7a050[shape=record, label="  %18 = or i32 %12, %11"];
	Node0xf7a0c0[shape=record, label="  %19 = xor i32 %12, %11"];
	Node0xf7a130[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0xf7a1a0[shape=record, label="  %21 = and i32 %11, %20"];
	Node0xf7a210[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0xf7a280[shape=record, label="  %23 = and i32 %12, %14"];
	Node0xf7a2f0[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0xf7a360[shape=record, label="  %25 = and i32 %13, %24"];
	Node0xf7a3d0[shape=record, label="  %26 = xor i32 %13, %10"];
	Node0xf7a440[shape=record, label="  %27 = shl i32 %13, 2"];
	Node0xf7a4b0[shape=record, label="  %28 = or i32 %13, %10"];
	Node0xf7a520[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0xf7a590[shape=record, label="  %30 = and i32 %10, %16"];
	Node0xf7a600[shape=record, label="  %31 = mul i32 %25, -6"];
	Node0xf7a670[shape=record, label="  %32 = and i32 %13, %10"];
	Node0xf7a6e0[shape=record, label="  %33 = add i32 %12, %11"];
	Node0xf7a750[shape=record, label="  %34 = mul i32 %33, -2"];
	Node0xf7a7c0[shape=record, label="  %35 = sub i32 %30, %10"];
	Node0xf7a830[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0xf7a8a0[shape=record, label="  %37 = add i32 %19, %12"];
	Node0xf7a910[shape=record, label="  %38 = add i32 %37, %22"];
	Node0xf7a980[shape=record, label="  %39 = add i32 %38, %18"];
	Node0xf7a9f0[shape=record, label="  %40 = sub i32 %39, %23"];
	Node0xf7aa60[shape=record, label="  %41 = sub i32 %40, %21"];
	Node0xf7aad0[shape=record, label="  %42 = add i32 %41, %25"];
	Node0xf7ab40[shape=record, label="  %43 = add i32 %42, %26"];
	Node0xf7abb0[shape=record, label="  %44 = add i32 %43, %27"];
	Node0xf7ac20[shape=record, label="  %45 = add i32 %44, %29"];
	Node0xf7ac90[shape=record, label="  %46 = sub i32 %45, %32"];
	Node0xf7ad00[shape=record, label="  %47 = add i32 %46, %34"];
	Node0xf7ad70[shape=record, label="  %48 = add i32 %47, %31"];
	Node0xf7ade0[shape=record, label="  %49 = add i32 %48, %36"];
	Node0xf7ae50[shape=record, label="  %50 = icmp eq i32 %17, %49"];
	Node0xf178b8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf7aee0[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0xf7b188[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf7b2e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf7b3f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf7b508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf7b5c8[shape=record, label="  ret i32 0"];
	Node0xf77a98 -> Node0xf77b48;
	Node0xf77b48 -> Node0xf77bd8;
	Node0xf77bd8 -> Node0xf77c38;
	Node0xf77c38 -> Node0xf77ce8;
	Node0xf77ce8 -> Node0xf78118;
	Node0xf78118 -> Node0xf781f8;
	Node0xf781f8 -> Node0xf782f8;
	Node0xf782f8 -> Node0xf783b8;
	Node0xf783b8 -> Node0xf78468;
	Node0xf78468 -> Node0xf78528;
	Node0xf78528 -> Node0xf785d8;
	Node0xf785d8 -> Node0xf72ad0;
	Node0xf72ad0 -> Node0xf787d8;
	Node0xf787d8 -> Node0xf79748;
	Node0xf79748 -> Node0xf79db8;
	Node0xf79db8 -> Node0xf79e18;
	Node0xf79e18 -> Node0xf79e90;
	Node0xf79e90 -> Node0xf79f00;
	Node0xf79f00 -> Node0xf79f70;
	Node0xf79f70 -> Node0xf79fe0;
	Node0xf79fe0 -> Node0xf7a050;
	Node0xf7a050 -> Node0xf7a0c0;
	Node0xf7a0c0 -> Node0xf7a130;
	Node0xf7a130 -> Node0xf7a1a0;
	Node0xf7a1a0 -> Node0xf7a210;
	Node0xf7a210 -> Node0xf7a280;
	Node0xf7a280 -> Node0xf7a2f0;
	Node0xf7a2f0 -> Node0xf7a360;
	Node0xf7a360 -> Node0xf7a3d0;
	Node0xf7a3d0 -> Node0xf7a440;
	Node0xf7a440 -> Node0xf7a4b0;
	Node0xf7a4b0 -> Node0xf7a520;
	Node0xf7a520 -> Node0xf7a590;
	Node0xf7a590 -> Node0xf7a600;
	Node0xf7a600 -> Node0xf7a670;
	Node0xf7a670 -> Node0xf7a6e0;
	Node0xf7a6e0 -> Node0xf7a750;
	Node0xf7a750 -> Node0xf7a7c0;
	Node0xf7a7c0 -> Node0xf7a830;
	Node0xf7a830 -> Node0xf7a8a0;
	Node0xf7a8a0 -> Node0xf7a910;
	Node0xf7a910 -> Node0xf7a980;
	Node0xf7a980 -> Node0xf7a9f0;
	Node0xf7a9f0 -> Node0xf7aa60;
	Node0xf7aa60 -> Node0xf7aad0;
	Node0xf7aad0 -> Node0xf7ab40;
	Node0xf7ab40 -> Node0xf7abb0;
	Node0xf7abb0 -> Node0xf7ac20;
	Node0xf7ac20 -> Node0xf7ac90;
	Node0xf7ac90 -> Node0xf7ad00;
	Node0xf7ad00 -> Node0xf7ad70;
	Node0xf7ad70 -> Node0xf7ade0;
	Node0xf7ade0 -> Node0xf7ae50;
	Node0xf7ae50 -> Node0xf178b8;
	Node0xf178b8 -> Node0xf7aee0;
	Node0xf7aee0 -> Node0xf7b188;
	Node0xf7b188 -> Node0xf7b2e8;
	Node0xf7b2e8 -> Node0xf7b3f8;
	Node0xf7b3f8 -> Node0xf7b508;
	Node0xf7b508 -> Node0xf7b5c8;
edge [color=red]
	Node0xf77a98 -> Node0xf77ce8;
	Node0xf77ce8 -> Node0xf78118;
	Node0xf77b48 -> Node0xf781f8;
	Node0xf781f8 -> Node0xf782f8;
	Node0xf77bd8 -> Node0xf783b8;
	Node0xf783b8 -> Node0xf78468;
	Node0xf77c38 -> Node0xf78528;
	Node0xf78528 -> Node0xf785d8;
	Node0xf77a98 -> Node0xf72ad0;
	Node0xf77b48 -> Node0xf72ad0;
	Node0xf77bd8 -> Node0xf72ad0;
	Node0xf77c38 -> Node0xf72ad0;
	Node0xf77a98 -> Node0xf787d8;
	Node0xf77b48 -> Node0xf79748;
	Node0xf77bd8 -> Node0xf79db8;
	Node0xf77c38 -> Node0xf79e18;
	Node0xf79748 -> Node0xf79e90;
	Node0xf79e90 -> Node0xf79f00;
	Node0xf79748 -> Node0xf79f00;
	Node0xf79e18 -> Node0xf79f70;
	Node0xf79f00 -> Node0xf79fe0;
	Node0xf79f70 -> Node0xf79fe0;
	Node0xf79db8 -> Node0xf7a050;
	Node0xf79748 -> Node0xf7a050;
	Node0xf79db8 -> Node0xf7a0c0;
	Node0xf79748 -> Node0xf7a0c0;
	Node0xf79db8 -> Node0xf7a130;
	Node0xf79748 -> Node0xf7a1a0;
	Node0xf7a130 -> Node0xf7a1a0;
	Node0xf7a1a0 -> Node0xf7a210;
	Node0xf79db8 -> Node0xf7a280;
	Node0xf79e90 -> Node0xf7a280;
	Node0xf787d8 -> Node0xf7a2f0;
	Node0xf79e18 -> Node0xf7a360;
	Node0xf7a2f0 -> Node0xf7a360;
	Node0xf79e18 -> Node0xf7a3d0;
	Node0xf787d8 -> Node0xf7a3d0;
	Node0xf79e18 -> Node0xf7a440;
	Node0xf79e18 -> Node0xf7a4b0;
	Node0xf787d8 -> Node0xf7a4b0;
	Node0xf7a4b0 -> Node0xf7a520;
	Node0xf787d8 -> Node0xf7a590;
	Node0xf79f70 -> Node0xf7a590;
	Node0xf7a360 -> Node0xf7a600;
	Node0xf79e18 -> Node0xf7a670;
	Node0xf787d8 -> Node0xf7a670;
	Node0xf79db8 -> Node0xf7a6e0;
	Node0xf79748 -> Node0xf7a6e0;
	Node0xf7a6e0 -> Node0xf7a750;
	Node0xf7a590 -> Node0xf7a7c0;
	Node0xf787d8 -> Node0xf7a7c0;
	Node0xf7a7c0 -> Node0xf7a830;
	Node0xf7a0c0 -> Node0xf7a8a0;
	Node0xf79db8 -> Node0xf7a8a0;
	Node0xf7a8a0 -> Node0xf7a910;
	Node0xf7a210 -> Node0xf7a910;
	Node0xf7a910 -> Node0xf7a980;
	Node0xf7a050 -> Node0xf7a980;
	Node0xf7a980 -> Node0xf7a9f0;
	Node0xf7a280 -> Node0xf7a9f0;
	Node0xf7a9f0 -> Node0xf7aa60;
	Node0xf7a1a0 -> Node0xf7aa60;
	Node0xf7aa60 -> Node0xf7aad0;
	Node0xf7a360 -> Node0xf7aad0;
	Node0xf7aad0 -> Node0xf7ab40;
	Node0xf7a3d0 -> Node0xf7ab40;
	Node0xf7ab40 -> Node0xf7abb0;
	Node0xf7a440 -> Node0xf7abb0;
	Node0xf7abb0 -> Node0xf7ac20;
	Node0xf7a520 -> Node0xf7ac20;
	Node0xf7ac20 -> Node0xf7ac90;
	Node0xf7a670 -> Node0xf7ac90;
	Node0xf7ac90 -> Node0xf7ad00;
	Node0xf7a750 -> Node0xf7ad00;
	Node0xf7ad00 -> Node0xf7ad70;
	Node0xf7a600 -> Node0xf7ad70;
	Node0xf7ad70 -> Node0xf7ade0;
	Node0xf7a830 -> Node0xf7ade0;
	Node0xf79fe0 -> Node0xf7ae50;
	Node0xf7ade0 -> Node0xf7ae50;
	Node0xf7ae50 -> Node0xf178b8;
	Node0xf178b8 -> Node0xf7aee0;
	Node0xf78528 -> Node0xf7b188;
	Node0xf783b8 -> Node0xf7b2e8;
	Node0xf781f8 -> Node0xf7b3f8;
	Node0xf77ce8 -> Node0xf7b508;
}
