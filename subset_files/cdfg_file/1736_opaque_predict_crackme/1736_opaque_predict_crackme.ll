; ModuleID = '../.././c_source_file/1736_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1736_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = or i32 %2, %1
  %9 = xor i32 %8, -1
  %10 = or i32 %9, %7
  %11 = xor i32 %2, -1
  %12 = or i32 %11, %1
  %13 = xor i32 %12, -1
  %14 = sub i32 %13, %10
  %15 = shl i32 %4, 1
  %16 = sub i32 %14, %15
  %17 = and i32 %5, %3
  %18 = xor i32 %17, %4
  %19 = shl i32 %18, 1
  %20 = sub i32 %16, %19
  %21 = and i32 %2, %1
  %22 = and i32 %21, %0
  %23 = xor i32 %8, %0
  %24 = or i32 %22, %23
  %25 = xor i32 %13, %0
  %26 = or i32 %2, %0
  %27 = xor i32 %26, -1
  %28 = or i32 %27, %1
  %29 = xor i32 %1, -1
  %30 = or i32 %29, %0
  %31 = xor i32 %30, -1
  %32 = xor i32 %2, %1
  %33 = or i32 %32, %31
  %34 = shl i32 %33, 1
  %35 = xor i32 %1, %0
  %36 = xor i32 %35, -1
  %37 = or i32 %36, %2
  %38 = and i32 %29, %0
  %39 = xor i32 %38, -1
  %40 = xor i32 %39, %2
  %41 = xor i32 %2, %0
  %42 = or i32 %41, %36
  %43 = or i32 %12, %7
  %44 = and i32 %35, %2
  %45 = and i32 %8, %0
  %46 = and i32 %11, %1
  %47 = xor i32 %46, %0
  %48 = xor i32 %32, %0
  %49 = xor i32 %32, -1
  %50 = or i32 %49, %0
  %51 = shl i32 %50, 1
  %52 = or i32 %1, %0
  %53 = and i32 %52, %2
  %54 = and i32 %52, %11
  %55 = xor i32 %41, -1
  %56 = and i32 %55, %39
  %57 = and i32 %1, %0
  %58 = or i32 %11, %0
  %59 = xor i32 %58, -1
  %60 = or i32 %57, %59
  %61 = and i32 %11, %0
  %62 = xor i32 %61, -1
  %63 = and i32 %62, %1
  %64 = xor i32 %21, %0
  %65 = xor i32 %30, %2
  %66 = or i32 %61, %35
  %67 = and i32 %39, %2
  %68 = xor i32 %46, -1
  %69 = and i32 %68, %7
  %70 = and i32 %21, %7
  %71 = and i32 %32, %0
  %72 = or i32 %70, %71
  %73 = and i32 %29, %2
  %74 = and i32 %73, %0
  %75 = or i32 %32, %0
  %76 = xor i32 %74, %75
  %77 = xor i32 %26, %57
  %78 = shl i32 %77, 1
  %79 = and i32 %41, %39
  %80 = and i32 %58, %1
  %81 = or i32 %61, %1
  %82 = xor i32 %62, %1
  %83 = or i32 %38, %2
  %84 = or i32 %11, %36
  %85 = shl i32 %11, 1
  %86 = or i32 %38, %49
  %87 = and i32 %73, %7
  %88 = or i32 %32, %7
  %89 = xor i32 %87, %88
  %90 = shl i32 %89, 1
  %91 = xor i32 %45, -1
  %92 = xor i32 %70, %91
  %93 = or i32 %55, %1
  %94 = xor i32 %21, -1
  %95 = add i32 %21, 1
  %96 = shl i32 %55, 1
  %97 = xor i32 %52, %2
  %98 = and i32 %2, %0
  %99 = or i32 %98, %46
  %100 = xor i32 %22, %48
  %101 = xor i32 %68, %0
  %102 = or i32 %57, %55
  %103 = or i32 %38, %11
  %104 = shl i32 %103, 1
  %105 = or i32 %59, %36
  %106 = xor i32 %38, %2
  %107 = xor i32 %75, -1
  %108 = or i32 %74, %107
  %109 = or i32 %46, %38
  %110 = or i32 %74, %48
  %111 = shl i32 %110, 1
  %112 = add i32 %58, 1
  %113 = xor i32 %9, %0
  %114 = or i32 %61, %29
  %115 = or i32 %68, %7
  %116 = and i32 %35, %11
  %117 = xor i32 %26, %1
  %118 = xor i32 %52, -1
  %119 = or i32 %49, %118
  %120 = or i32 %29, %2
  %121 = and i32 %120, %0
  %122 = or i32 %87, %121
  %123 = xor i32 %88, -1
  %124 = or i32 %87, %123
  %125 = or i32 %31, %2
  %126 = xor i32 %49, %0
  %127 = xor i32 %38, %68
  %128 = shl i32 %127, 1
  %129 = or i32 %46, %0
  %130 = shl i32 %129, 1
  %131 = or i32 %94, %7
  %132 = and i32 %32, %39
  %133 = xor i32 %48, -1
  %134 = xor i32 %74, %133
  %135 = and i32 %49, %0
  %136 = or i32 %118, %2
  %137 = shl i32 %136, 1
  %138 = and i32 %8, %7
  %139 = or i32 %57, %11
  %140 = xor i32 %98, %52
  %141 = or i32 %27, %36
  %142 = shl i32 %141, 1
  %143 = or i32 %35, %11
  %144 = or i32 %57, %2
  %145 = and i32 %41, %29
  %146 = xor i32 %98, -1
  %147 = and i32 %146, %29
  %148 = and i32 %58, %36
  %149 = or i32 %35, %27
  %150 = xor i32 %57, -1
  %151 = and i32 %41, %150
  %152 = or i32 %32, %57
  %153 = shl i32 %152, 1
  %154 = xor i32 %61, %1
  %155 = or i32 %98, %1
  %156 = and i32 %41, %35
  %157 = or i32 %41, %1
  %158 = xor i32 %12, %57
  %159 = or i32 %70, %45
  %160 = or i32 %98, %9
  %161 = xor i32 %71, 2147483647
  %162 = xor i32 %161, %70
  %163 = shl i32 %162, 1
  %164 = shl i32 %9, 1
  %165 = or i32 %8, %7
  %166 = and i32 %120, %7
  %167 = or i32 %74, %166
  %168 = or i32 %59, %29
  %169 = add i32 %57, 1
  %170 = and i32 %32, %7
  %171 = xor i32 %170, 2147483647
  %172 = xor i32 %171, %22
  %173 = shl i32 %172, 1
  %174 = or i32 %98, %118
  %175 = and i32 %55, %150
  %176 = xor i32 %146, %1
  %177 = shl i32 %176, 2
  %178 = and i32 %150, %2
  %179 = and i32 %58, %29
  %180 = or i32 %55, %118
  %181 = xor i32 %57, %2
  %182 = shl i32 %181, 1
  %183 = xor i32 %94, %0
  %184 = and i32 %36, %2
  %185 = and i32 %11, %36
  %186 = or i32 %21, %7
  %187 = and i32 %30, %11
  %188 = and i32 %35, %62
  %189 = or i32 %98, %35
  %190 = add i32 %32, 1
  %191 = xor i32 %12, %0
  %192 = or i32 %22, %138
  %193 = or i32 %61, %21
  %194 = xor i32 %22, -1
  %195 = xor i32 %23, %194
  %196 = and i32 %41, %1
  %197 = or i32 %49, %7
  %198 = or i32 %59, %1
  %199 = or i32 %35, %2
  %200 = or i32 %57, %49
  %201 = or i32 %57, %9
  %202 = or i32 %98, %31
  %203 = and i32 %94, %0
  %204 = or i32 %41, %31
  %205 = shl i32 %204, 1
  %206 = and i32 %32, %52
  %207 = and i32 %32, %30
  %208 = or i32 %21, %0
  %209 = shl i32 %208, 2
  %210 = xor i32 %61, %12
  %211 = or i32 %98, %36
  %212 = and i32 %52, %49
  %213 = xor i32 %98, %8
  %214 = or i32 %21, %38
  %215 = and i32 %32, %150
  %216 = and i32 %30, %49
  %217 = or i32 %57, %13
  %218 = or i32 %35, %55
  %219 = and i32 %55, %1
  %220 = and i32 %62, %36
  %221 = xor i32 %120, %0
  %222 = xor i32 %74, -1
  %223 = xor i32 %221, %222
  %224 = and i32 %26, %1
  %225 = and i32 %62, %29
  %226 = and i32 %146, %36
  %227 = or i32 %8, %0
  %228 = or i32 %46, %7
  %229 = and i32 %26, %35
  %230 = or i32 %49, %31
  %231 = or i32 %94, %0
  %232 = or i32 %57, %27
  %233 = and i32 %26, %36
  %234 = and i32 %12, %0
  %235 = or i32 %12, %0
  %236 = xor i32 %38, %94
  %237 = xor i32 %27, %1
  %238 = and i32 %35, %146
  %239 = xor i32 %121, -1
  %240 = xor i32 %87, %239
  %241 = and i32 %30, %2
  %242 = xor i32 %58, %57
  %243 = xor i32 %59, %1
  %244 = or i32 %55, %31
  %245 = shl i32 %244, 1
  %246 = xor i32 %8, %57
  %247 = xor i32 %98, %68
  %248 = shl i32 %247, 1
  %249 = or i32 %41, %35
  %250 = and i32 %94, %7
  %251 = and i32 %35, %55
  %252 = shl i32 %251, 1
  %253 = or i32 %11, %31
  %254 = xor i32 %31, %2
  %255 = and i32 %146, %1
  %256 = xor i32 %138, %194
  %257 = or i32 %74, %221
  %258 = add i32 %61, 1
  %259 = or i32 %41, %29
  %260 = and i32 %41, %36
  %261 = xor i32 %98, %30
  %262 = xor i32 %98, %1
  %263 = and i32 %11, %39
  %264 = shl i32 %263, 1
  %265 = or i32 %41, %38
  %266 = shl i32 %265, 1
  %267 = or i32 %13, %7
  %268 = or i32 %27, %29
  %269 = and i32 %68, %0
  %270 = and i32 %58, %35
  %271 = and i32 %49, %39
  %272 = or i32 %11, %118
  %273 = and i32 %52, %55
  %274 = shl i32 %273, 1
  %275 = or i32 %22, %133
  %276 = shl i32 %275, 1
  %277 = xor i32 %61, %94
  %278 = add i32 %98, 1
  %279 = or i32 %98, %29
  %280 = xor i32 %58, %1
  %281 = and i32 %41, %30
  %282 = and i32 %11, %150
  %283 = shl i32 %170, 1
  %284 = and i32 %30, %55
  %285 = and i32 %26, %29
  %286 = or i32 %55, %36
  %287 = or i32 %32, %118
  %288 = shl i32 %287, 1
  %289 = and i32 %49, %7
  %290 = or i32 %38, %55
  %291 = and i32 %41, %52
  %292 = xor i32 %150, %2
  %293 = and i32 %49, %150
  %294 = shl i32 %293, 1
  %295 = or i32 %32, %38
  %296 = or i32 %41, %118
  %297 = shl i32 %296, 1
  %298 = or i32 %61, %13
  %299 = and i32 %55, %29
  %300 = shl i32 %299, 2
  %301 = and i32 %55, %36
  %302 = or i32 %22, %170
  %303 = add i32 %26, 1
  %304 = or i32 %9, %0
  %305 = or i32 %41, %57
  %306 = or i32 %61, %36
  %307 = xor i32 %166, %222
  %308 = or i32 %13, %0
  %309 = or i32 %55, %29
  %310 = and i32 %9, %7
  %311 = mul i32 %310, 19
  %312 = and i32 %46, %7
  %313 = mul i32 %312, -6
  %314 = and i32 %9, %0
  %315 = mul i32 %314, -10
  %316 = and i32 %46, %0
  %317 = and i32 %13, %7
  %318 = shl i32 %317, 4
  %319 = mul i32 %70, -7
  %320 = and i32 %13, %0
  %321 = or i32 %5, %4
  %322 = xor i32 %4, %3
  %323 = and i32 %321, %322
  %324 = and i32 %4, %3
  %325 = shl i32 %324, 1
  %326 = xor i32 %324, -1
  %327 = xor i32 %5, %4
  %328 = xor i32 %327, -1
  %329 = and i32 %328, %326
  %330 = xor i32 %5, %3
  %331 = xor i32 %330, -1
  %332 = and i32 %331, %4
  %333 = or i32 %4, %3
  %334 = or i32 %330, %4
  %335 = xor i32 %17, -1
  %336 = and i32 %335, %4
  %337 = xor i32 %5, -1
  %338 = or i32 %324, %337
  %339 = xor i32 %3, -1
  %340 = or i32 %339, %4
  %341 = and i32 %327, %340
  %342 = shl i32 %341, 1
  %343 = or i32 %337, %3
  %344 = xor i32 %343, %4
  %345 = or i32 %337, %4
  %346 = xor i32 %345, -1
  %347 = or i32 %346, %3
  %348 = xor i32 %321, %3
  %349 = xor i32 %322, -1
  %350 = and i32 %327, %349
  %351 = shl i32 %350, 1
  %352 = and i32 %5, %4
  %353 = xor i32 %352, -1
  %354 = shl i32 %353, 1
  %355 = and i32 %337, %3
  %356 = xor i32 %355, -1
  %357 = or i32 %356, %4
  %358 = or i32 %322, %5
  %359 = xor i32 %4, -1
  %360 = or i32 %355, %359
  %361 = xor i32 %333, -1
  %362 = xor i32 %361, %5
  %363 = and i32 %353, %3
  %364 = and i32 %339, %5
  %365 = and i32 %364, %4
  %366 = or i32 %339, %5
  %367 = xor i32 %366, -1
  %368 = or i32 %367, %4
  %369 = xor i32 %365, %368
  %370 = and i32 %337, %4
  %371 = xor i32 %370, -1
  %372 = and i32 %322, %371
  %373 = and i32 %328, %3
  %374 = and i32 %330, %333
  %375 = xor i32 %340, -1
  %376 = or i32 %375, %5
  %377 = xor i32 %352, %3
  %378 = and i32 %339, %4
  %379 = xor i32 %378, %335
  %380 = and i32 %17, %4
  %381 = or i32 %5, %3
  %382 = and i32 %381, %359
  %383 = xor i32 %382, -1
  %384 = xor i32 %380, %383
  %385 = or i32 %330, %375
  %386 = or i32 %352, %322
  %387 = xor i32 %330, %4
  %388 = xor i32 %387, -1
  %389 = or i32 %380, %388
  %390 = xor i32 %335, %4
  %391 = and i32 %345, %349
  %392 = or i32 %327, %361
  %393 = or i32 %378, %337
  %394 = xor i32 %381, %324
  %395 = xor i32 %371, %3
  %396 = xor i32 %352, %381
  %397 = shl i32 %396, 1
  %398 = or i32 %331, %359
  %399 = or i32 %346, %339
  %400 = xor i32 %378, -1
  %401 = and i32 %400, %5
  %402 = or i32 %370, %349
  %403 = or i32 %322, %337
  %404 = or i32 %370, %339
  %405 = or i32 %330, %359
  %406 = or i32 %331, %375
  %407 = shl i32 %406, 1
  %408 = and i32 %330, %359
  %409 = or i32 %380, %408
  %410 = or i32 %378, %331
  %411 = and i32 %381, %4
  %412 = and i32 %337, %326
  %413 = and i32 %321, %3
  %414 = xor i32 %343, -1
  %415 = or i32 %414, %359
  %416 = and i32 %330, %340
  %417 = or i32 %355, %378
  %418 = shl i32 %417, 1
  %419 = and i32 %322, %5
  %420 = or i32 %414, %4
  %421 = shl i32 %349, 1
  %422 = xor i32 %365, %388
  %423 = shl i32 %422, 1
  %424 = or i32 %324, %328
  %425 = or i32 %327, %324
  %426 = xor i32 %321, -1
  %427 = or i32 %426, %3
  %428 = or i32 %327, %378
  %429 = and i32 %327, %400
  %430 = and i32 %327, %322
  %431 = and i32 %364, %359
  %432 = and i32 %366, %4
  %433 = or i32 %431, %432
  %434 = or i32 %352, %361
  %435 = or i32 %17, %4
  %436 = and i32 %321, %349
  %437 = and i32 %356, %4
  %438 = or i32 %352, %375
  %439 = and i32 %326, %5
  %440 = shl i32 %439, 1
  %441 = or i32 %331, %4
  %442 = or i32 %337, %375
  %443 = or i32 %327, %3
  %444 = and i32 %345, %339
  %445 = and i32 %333, %328
  %446 = shl i32 %445, 1
  %447 = or i32 %327, %349
  %448 = xor i32 %370, %343
  %449 = shl i32 %448, 1
  %450 = xor i32 %405, -1
  %451 = or i32 %431, %450
  %452 = and i32 %340, %328
  %453 = xor i32 %353, %3
  %454 = or i32 %352, %339
  %455 = xor i32 %321, %324
  %456 = xor i32 %324, %5
  %457 = or i32 %426, %339
  %458 = shl i32 %457, 1
  %459 = or i32 %356, %359
  %460 = and i32 %356, %359
  %461 = or i32 %330, %361
  %462 = and i32 %371, %349
  %463 = xor i32 %370, %335
  %464 = and i32 %331, %326
  %465 = and i32 %327, %326
  %466 = xor i32 %375, %5
  %467 = shl i32 %382, 1
  %468 = or i32 %349, %5
  %469 = shl i32 %321, 1
  %470 = or i32 %343, %359
  %471 = and i32 %333, %5
  %472 = shl i32 %471, 1
  %473 = or i32 %337, %349
  %474 = add i32 %327, 1
  %475 = and i32 %340, %337
  %476 = and i32 %327, %3
  %477 = or i32 %331, %361
  %478 = shl i32 %477, 2
  %479 = and i32 %328, %349
  %480 = shl i32 %479, 1
  %481 = and i32 %337, %400
  %482 = xor i32 %381, -1
  %483 = and i32 %482, %359
  %484 = and i32 %355, %359
  %485 = and i32 %482, %4
  %486 = and i32 %355, %4
  %487 = and i32 %414, %359
  %488 = mul i32 %487, 9
  %489 = and i32 %17, %359
  %490 = and i32 %414, %4
  %491 = mul i32 %380, 11
  %492 = add i32 %32, -1
  %493 = add i32 %492, %58
  %494 = add i32 %493, %144
  %495 = add i32 %494, %84
  %496 = add i32 %495, %37
  %497 = add i32 %496, %22
  %498 = add i32 %497, %23
  %499 = add i32 %498, %75
  %500 = add i32 %499, %284
  %501 = add i32 %500, %280
  %502 = add i32 %501, %279
  %503 = add i32 %502, %71
  %504 = add i32 %503, %228
  %505 = add i32 %504, %218
  %506 = add i32 %505, %213
  %507 = add i32 %506, %210
  %508 = add i32 %507, %200
  %509 = add i32 %508, %183
  %510 = add i32 %509, %160
  %511 = add i32 %510, %131
  %512 = add i32 %511, %126
  %513 = add i32 %512, %109
  %514 = add i32 %513, %81
  %515 = add i32 %514, %56
  %516 = add i32 %515, %326
  %517 = add i32 %516, %337
  %518 = add i32 %517, %456
  %519 = add i32 %518, %352
  %520 = add i32 %519, %443
  %521 = add i32 %520, %373
  %522 = add i32 %521, %363
  %523 = add i32 %522, %323
  %524 = add i32 %523, %389
  %525 = add i32 %524, %433
  %526 = shl i32 %525, 1
  %527 = add i32 %12, %254
  %528 = sub i32 %527, %145
  %529 = sub i32 %528, %102
  %530 = sub i32 %529, %124
  %531 = add i32 %530, %357
  %532 = add i32 %531, %484
  %533 = mul i32 %532, 5
  %534 = add i32 %38, %31
  %535 = add i32 %534, %26
  %536 = add i32 %535, %335
  %537 = shl i32 %536, 2
  %538 = sub i32 %489, %320
  %539 = sub i32 %538, %490
  %540 = mul i32 %539, 12
  %541 = add i32 %97, %44
  %542 = add i32 %541, %189
  %543 = add i32 %542, %175
  %544 = add i32 %543, %393
  %545 = add i32 %544, %416
  %546 = add i32 %545, %483
  %547 = add i32 %546, %415
  %548 = mul i32 %547, 3
  %549 = sub i32 1, %0
  %550 = sub i32 %549, %0
  %551 = sub i32 %550, %30
  %552 = add i32 %551, %169
  %553 = add i32 %552, %57
  %554 = add i32 %553, %2
  %555 = add i32 %554, %39
  %556 = add i32 %555, %40
  %557 = add i32 %556, %53
  %558 = add i32 %557, %54
  %559 = sub i32 %558, %65
  %560 = add i32 %559, %67
  %561 = add i32 %560, %83
  %562 = sub i32 %561, %85
  %563 = add i32 %562, %95
  %564 = sub i32 %563, %97
  %565 = add i32 %564, %106
  %566 = add i32 %565, %112
  %567 = sub i32 %566, %116
  %568 = sub i32 %567, %125
  %569 = sub i32 %568, %98
  %570 = add i32 %569, %139
  %571 = add i32 %570, %143
  %572 = add i32 %571, %61
  %573 = add i32 %572, %8
  %574 = sub i32 %573, %46
  %575 = sub i32 %574, %178
  %576 = add i32 %575, %21
  %577 = sub i32 %576, %184
  %578 = add i32 %577, %185
  %579 = sub i32 %578, %187
  %580 = add i32 %579, %190
  %581 = add i32 %580, %199
  %582 = add i32 %581, %241
  %583 = add i32 %582, %68
  %584 = add i32 %583, %253
  %585 = add i32 %584, %258
  %586 = add i32 %585, %272
  %587 = add i32 %586, %278
  %588 = sub i32 %587, %282
  %589 = sub i32 %588, %292
  %590 = sub i32 %589, %41
  %591 = add i32 %590, %303
  %592 = sub i32 %591, %3
  %593 = add i32 %592, %25
  %594 = sub i32 %593, %28
  %595 = sub i32 %594, %42
  %596 = add i32 %595, %43
  %597 = add i32 %596, %45
  %598 = sub i32 %597, %47
  %599 = add i32 %598, %48
  %600 = sub i32 %599, %60
  %601 = sub i32 %600, %63
  %602 = sub i32 %601, %64
  %603 = add i32 %602, %66
  %604 = add i32 %603, %69
  %605 = add i32 %604, %79
  %606 = sub i32 %605, %80
  %607 = sub i32 %606, %82
  %608 = add i32 %607, %86
  %609 = sub i32 %608, %93
  %610 = sub i32 %609, %96
  %611 = sub i32 %610, %99
  %612 = sub i32 %611, %101
  %613 = sub i32 %612, %104
  %614 = sub i32 %613, %105
  %615 = sub i32 %614, %113
  %616 = add i32 %615, %114
  %617 = sub i32 %616, %115
  %618 = sub i32 %617, %117
  %619 = sub i32 %618, %119
  %620 = add i32 %619, %132
  %621 = sub i32 %620, %135
  %622 = sub i32 %621, %137
  %623 = sub i32 %622, %138
  %624 = sub i32 %623, %140
  %625 = sub i32 %624, %147
  %626 = sub i32 %625, %148
  %627 = sub i32 %626, %149
  %628 = add i32 %627, %151
  %629 = add i32 %628, %154
  %630 = add i32 %629, %155
  %631 = sub i32 %630, %156
  %632 = sub i32 %631, %157
  %633 = sub i32 %632, %158
  %634 = sub i32 %633, %164
  %635 = sub i32 %634, %165
  %636 = add i32 %635, %168
  %637 = sub i32 %636, %174
  %638 = add i32 %637, %179
  %639 = sub i32 %638, %180
  %640 = sub i32 %639, %182
  %641 = sub i32 %640, %186
  %642 = sub i32 %641, %188
  %643 = sub i32 %642, %191
  %644 = add i32 %643, %193
  %645 = add i32 %644, %196
  %646 = add i32 %645, %197
  %647 = sub i32 %646, %198
  %648 = add i32 %647, %201
  %649 = sub i32 %648, %202
  %650 = add i32 %649, %203
  %651 = add i32 %650, %206
  %652 = sub i32 %651, %207
  %653 = sub i32 %652, %211
  %654 = add i32 %653, %212
  %655 = add i32 %654, %214
  %656 = add i32 %655, %215
  %657 = sub i32 %656, %216
  %658 = sub i32 %657, %217
  %659 = add i32 %658, %219
  %660 = add i32 %659, %220
  %661 = sub i32 %660, %224
  %662 = add i32 %661, %225
  %663 = add i32 %662, %226
  %664 = add i32 %663, %227
  %665 = add i32 %664, %229
  %666 = sub i32 %665, %230
  %667 = add i32 %666, %231
  %668 = add i32 %667, %232
  %669 = sub i32 %668, %233
  %670 = add i32 %669, %234
  %671 = add i32 %670, %235
  %672 = sub i32 %671, %236
  %673 = sub i32 %672, %237
  %674 = add i32 %673, %238
  %675 = add i32 %674, %242
  %676 = sub i32 %675, %243
  %677 = sub i32 %676, %246
  %678 = sub i32 %677, %88
  %679 = add i32 %678, %249
  %680 = sub i32 %679, %250
  %681 = sub i32 %680, %255
  %682 = add i32 %681, %259
  %683 = add i32 %682, %260
  %684 = add i32 %683, %261
  %685 = add i32 %684, %262
  %686 = sub i32 %685, %264
  %687 = sub i32 %686, %267
  %688 = add i32 %687, %268
  %689 = add i32 %688, %269
  %690 = add i32 %689, %270
  %691 = sub i32 %690, %271
  %692 = add i32 %691, %277
  %693 = sub i32 %692, %281
  %694 = add i32 %693, %285
  %695 = sub i32 %694, %286
  %696 = sub i32 %695, %289
  %697 = add i32 %696, %290
  %698 = sub i32 %697, %291
  %699 = add i32 %698, %295
  %700 = add i32 %699, %298
  %701 = add i32 %700, %301
  %702 = add i32 %701, %304
  %703 = sub i32 %702, %305
  %704 = sub i32 %703, %306
  %705 = sub i32 %704, %308
  %706 = sub i32 %705, %309
  %707 = sub i32 %706, %316
  %708 = add i32 %707, %359
  %709 = add i32 %708, %24
  %710 = sub i32 %709, %34
  %711 = sub i32 %710, %51
  %712 = add i32 %711, %72
  %713 = sub i32 %712, %76
  %714 = sub i32 %713, %78
  %715 = sub i32 %714, %92
  %716 = add i32 %715, %100
  %717 = add i32 %716, %108
  %718 = add i32 %717, %122
  %719 = sub i32 %718, %128
  %720 = sub i32 %719, %130
  %721 = sub i32 %720, %134
  %722 = sub i32 %721, %142
  %723 = sub i32 %722, %153
  %724 = add i32 %723, %159
  %725 = sub i32 %724, %167
  %726 = sub i32 %725, %177
  %727 = add i32 %726, %192
  %728 = add i32 %727, %195
  %729 = sub i32 %728, %205
  %730 = sub i32 %729, %209
  %731 = sub i32 %730, %223
  %732 = add i32 %731, %240
  %733 = sub i32 %732, %245
  %734 = sub i32 %733, %248
  %735 = sub i32 %734, %252
  %736 = add i32 %735, %256
  %737 = add i32 %736, %257
  %738 = sub i32 %737, %266
  %739 = sub i32 %738, %274
  %740 = sub i32 %739, %283
  %741 = sub i32 %740, %288
  %742 = sub i32 %741, %294
  %743 = sub i32 %742, %297
  %744 = sub i32 %743, %300
  %745 = sub i32 %744, %302
  %746 = add i32 %745, %307
  %747 = add i32 %746, %311
  %748 = add i32 %747, %313
  %749 = add i32 %748, %315
  %750 = add i32 %749, %318
  %751 = add i32 %750, %319
  %752 = sub i32 %751, %333
  %753 = sub i32 %752, %322
  %754 = sub i32 %753, %90
  %755 = sub i32 %754, %111
  %756 = sub i32 %755, %276
  %757 = sub i32 %756, %325
  %758 = sub i32 %757, %338
  %759 = sub i32 %758, %358
  %760 = add i32 %759, %362
  %761 = sub i32 %760, %376
  %762 = sub i32 %761, %401
  %763 = add i32 %762, %403
  %764 = sub i32 %763, %330
  %765 = sub i32 %764, %412
  %766 = add i32 %765, %419
  %767 = sub i32 %766, %421
  %768 = sub i32 %767, %370
  %769 = sub i32 %768, %442
  %770 = add i32 %769, %346
  %771 = sub i32 %770, %466
  %772 = sub i32 %771, %468
  %773 = sub i32 %772, %17
  %774 = add i32 %773, %473
  %775 = add i32 %774, %474
  %776 = sub i32 %775, %475
  %777 = add i32 %776, %481
  %778 = sub i32 %777, %163
  %779 = sub i32 %778, %173
  %780 = add i32 %779, %329
  %781 = sub i32 %780, %332
  %782 = add i32 %781, %334
  %783 = add i32 %782, %336
  %784 = add i32 %783, %344
  %785 = add i32 %784, %347
  %786 = sub i32 %785, %348
  %787 = sub i32 %786, %354
  %788 = sub i32 %787, %360
  %789 = sub i32 %788, %372
  %790 = sub i32 %789, %374
  %791 = sub i32 %790, %377
  %792 = add i32 %791, %379
  %793 = add i32 %792, %385
  %794 = sub i32 %793, %386
  %795 = sub i32 %794, %390
  %796 = add i32 %795, %391
  %797 = sub i32 %796, %392
  %798 = sub i32 %797, %394
  %799 = sub i32 %798, %395
  %800 = sub i32 %799, %398
  %801 = sub i32 %800, %399
  %802 = sub i32 %801, %402
  %803 = sub i32 %802, %404
  %804 = sub i32 %803, %405
  %805 = sub i32 %804, %410
  %806 = sub i32 %805, %411
  %807 = sub i32 %806, %413
  %808 = sub i32 %807, %420
  %809 = add i32 %808, %424
  %810 = sub i32 %809, %425
  %811 = sub i32 %810, %427
  %812 = sub i32 %811, %428
  %813 = sub i32 %812, %429
  %814 = sub i32 %813, %430
  %815 = add i32 %814, %434
  %816 = add i32 %815, %435
  %817 = add i32 %816, %436
  %818 = sub i32 %817, %437
  %819 = add i32 %818, %438
  %820 = sub i32 %819, %440
  %821 = add i32 %820, %441
  %822 = add i32 %821, %444
  %823 = sub i32 %822, %447
  %824 = sub i32 %823, %452
  %825 = add i32 %824, %453
  %826 = add i32 %825, %454
  %827 = add i32 %826, %455
  %828 = add i32 %827, %459
  %829 = add i32 %828, %460
  %830 = sub i32 %829, %461
  %831 = sub i32 %830, %462
  %832 = sub i32 %831, %463
  %833 = add i32 %832, %387
  %834 = add i32 %833, %464
  %835 = sub i32 %834, %465
  %836 = sub i32 %835, %469
  %837 = sub i32 %836, %470
  %838 = sub i32 %837, %472
  %839 = add i32 %838, %476
  %840 = add i32 %839, %485
  %841 = add i32 %840, %486
  %842 = sub i32 %841, %342
  %843 = sub i32 %842, %351
  %844 = add i32 %843, %369
  %845 = sub i32 %844, %384
  %846 = sub i32 %845, %397
  %847 = sub i32 %846, %407
  %848 = add i32 %847, %409
  %849 = sub i32 %848, %418
  %850 = sub i32 %849, %446
  %851 = sub i32 %850, %449
  %852 = add i32 %851, %451
  %853 = sub i32 %852, %458
  %854 = sub i32 %853, %467
  %855 = sub i32 %854, %478
  %856 = sub i32 %855, %480
  %857 = add i32 %856, %488
  %858 = add i32 %857, %491
  %859 = sub i32 %858, %423
  %860 = add i32 %859, %537
  %861 = add i32 %860, %540
  %862 = add i32 %861, %533
  %863 = add i32 %862, %548
  %864 = add i32 %863, %526
  %865 = icmp eq i32 %20, %864
  %866 = select i1 %865, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %867 = tail call i32 @puts(i8* nonnull dereferenceable(1) %866)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
