digraph "DFG for'main' function" {
	Node0xe75f38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe75fb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe76048[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xe764a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xe76588[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xe766a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe768e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xe76998[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe77908[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe77f90[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0xe78000[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0xe78070[shape=record, label="  %10 = or i32 %7, %6"];
	Node0xe780e0[shape=record, label="  %11 = mul i32 %8, -5"];
	Node0xe78150[shape=record, label="  %12 = and i32 %7, %6"];
	Node0xe781c0[shape=record, label="  %13 = shl i32 %12, 2"];
	Node0xe78230[shape=record, label="  %14 = xor i32 %13, -4"];
	Node0xe782a0[shape=record, label="  %15 = shl i32 %7, 1"];
	Node0xe78310[shape=record, label="  %16 = xor i32 %7, -1"];
	Node0xe78380[shape=record, label="  %17 = and i32 %6, %16"];
	Node0xe783f0[shape=record, label="  %18 = or i32 %6, %16"];
	Node0xe78460[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0xe784d0[shape=record, label="  %20 = add i32 %7, 1"];
	Node0xe78540[shape=record, label="  %21 = shl i32 %18, 2"];
	Node0xe785b0[shape=record, label="  %22 = xor i32 %21, -4"];
	Node0xe78620[shape=record, label="  %23 = shl i32 %17, 2"];
	Node0xe78690[shape=record, label="  %24 = mul i32 %12, 6"];
	Node0xe78700[shape=record, label="  %25 = sub i32 %20, %10"];
	Node0xe78770[shape=record, label="  %26 = sub i32 %25, %15"];
	Node0xe787e0[shape=record, label="  %27 = add i32 %26, %17"];
	Node0xe78850[shape=record, label="  %28 = add i32 %27, %11"];
	Node0xe788c0[shape=record, label="  %29 = sub i32 %28, %19"];
	Node0xe78930[shape=record, label="  %30 = add i32 %29, %23"];
	Node0xe789a0[shape=record, label="  %31 = add i32 %30, %24"];
	Node0xe78a10[shape=record, label="  %32 = add i32 %31, %14"];
	Node0xe78c90[shape=record, label="  %33 = add i32 %32, %22"];
	Node0xe78d00[shape=record, label="  %34 = icmp eq i32 %33, %9"];
	Node0xe169d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe78d90[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0xe78fe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xe79148[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xe79208[shape=record, label="  ret i32 0"];
	Node0xe75f38 -> Node0xe75fb8;
	Node0xe75fb8 -> Node0xe76048;
	Node0xe76048 -> Node0xe764a8;
	Node0xe764a8 -> Node0xe76588;
	Node0xe76588 -> Node0xe766a8;
	Node0xe766a8 -> Node0xe768e0;
	Node0xe768e0 -> Node0xe76998;
	Node0xe76998 -> Node0xe77908;
	Node0xe77908 -> Node0xe77f90;
	Node0xe77f90 -> Node0xe78000;
	Node0xe78000 -> Node0xe78070;
	Node0xe78070 -> Node0xe780e0;
	Node0xe780e0 -> Node0xe78150;
	Node0xe78150 -> Node0xe781c0;
	Node0xe781c0 -> Node0xe78230;
	Node0xe78230 -> Node0xe782a0;
	Node0xe782a0 -> Node0xe78310;
	Node0xe78310 -> Node0xe78380;
	Node0xe78380 -> Node0xe783f0;
	Node0xe783f0 -> Node0xe78460;
	Node0xe78460 -> Node0xe784d0;
	Node0xe784d0 -> Node0xe78540;
	Node0xe78540 -> Node0xe785b0;
	Node0xe785b0 -> Node0xe78620;
	Node0xe78620 -> Node0xe78690;
	Node0xe78690 -> Node0xe78700;
	Node0xe78700 -> Node0xe78770;
	Node0xe78770 -> Node0xe787e0;
	Node0xe787e0 -> Node0xe78850;
	Node0xe78850 -> Node0xe788c0;
	Node0xe788c0 -> Node0xe78930;
	Node0xe78930 -> Node0xe789a0;
	Node0xe789a0 -> Node0xe78a10;
	Node0xe78a10 -> Node0xe78c90;
	Node0xe78c90 -> Node0xe78d00;
	Node0xe78d00 -> Node0xe169d8;
	Node0xe169d8 -> Node0xe78d90;
	Node0xe78d90 -> Node0xe78fe8;
	Node0xe78fe8 -> Node0xe79148;
	Node0xe79148 -> Node0xe79208;
edge [color=red]
	Node0xe75f38 -> Node0xe76048;
	Node0xe76048 -> Node0xe764a8;
	Node0xe75fb8 -> Node0xe76588;
	Node0xe76588 -> Node0xe766a8;
	Node0xe75f38 -> Node0xe768e0;
	Node0xe75fb8 -> Node0xe768e0;
	Node0xe75f38 -> Node0xe76998;
	Node0xe75fb8 -> Node0xe77908;
	Node0xe77908 -> Node0xe77f90;
	Node0xe76998 -> Node0xe77f90;
	Node0xe77f90 -> Node0xe78000;
	Node0xe77908 -> Node0xe78070;
	Node0xe76998 -> Node0xe78070;
	Node0xe77f90 -> Node0xe780e0;
	Node0xe77908 -> Node0xe78150;
	Node0xe76998 -> Node0xe78150;
	Node0xe78150 -> Node0xe781c0;
	Node0xe781c0 -> Node0xe78230;
	Node0xe77908 -> Node0xe782a0;
	Node0xe77908 -> Node0xe78310;
	Node0xe76998 -> Node0xe78380;
	Node0xe78310 -> Node0xe78380;
	Node0xe76998 -> Node0xe783f0;
	Node0xe78310 -> Node0xe783f0;
	Node0xe783f0 -> Node0xe78460;
	Node0xe77908 -> Node0xe784d0;
	Node0xe783f0 -> Node0xe78540;
	Node0xe78540 -> Node0xe785b0;
	Node0xe78380 -> Node0xe78620;
	Node0xe78150 -> Node0xe78690;
	Node0xe784d0 -> Node0xe78700;
	Node0xe78070 -> Node0xe78700;
	Node0xe78700 -> Node0xe78770;
	Node0xe782a0 -> Node0xe78770;
	Node0xe78770 -> Node0xe787e0;
	Node0xe78380 -> Node0xe787e0;
	Node0xe787e0 -> Node0xe78850;
	Node0xe780e0 -> Node0xe78850;
	Node0xe78850 -> Node0xe788c0;
	Node0xe78460 -> Node0xe788c0;
	Node0xe788c0 -> Node0xe78930;
	Node0xe78620 -> Node0xe78930;
	Node0xe78930 -> Node0xe789a0;
	Node0xe78690 -> Node0xe789a0;
	Node0xe789a0 -> Node0xe78a10;
	Node0xe78230 -> Node0xe78a10;
	Node0xe78a10 -> Node0xe78c90;
	Node0xe785b0 -> Node0xe78c90;
	Node0xe78c90 -> Node0xe78d00;
	Node0xe78000 -> Node0xe78d00;
	Node0xe78d00 -> Node0xe169d8;
	Node0xe169d8 -> Node0xe78d90;
	Node0xe76588 -> Node0xe78fe8;
	Node0xe76048 -> Node0xe79148;
}
