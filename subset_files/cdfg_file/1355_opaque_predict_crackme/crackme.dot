digraph "DFG for'crackme' function" {
	Node0x6aec40[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x6aecb0[shape=record, label="  %4 = and i32 %3, %0"];
	Node0x6aed70[shape=record, label="  %5 = sub i32 %4, %1"];
	Node0x6aede0[shape=record, label="  %6 = xor i32 %1, %0"];
	Node0x6aee50[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x6aeec0[shape=record, label="  %8 = or i32 %1, %0"];
	Node0x6aef30[shape=record, label="  %9 = and i32 %1, %0"];
	Node0x6aefa0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x6af010[shape=record, label="  %11 = shl i32 %0, 1"];
	Node0x6af0b0[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x6af120[shape=record, label="  %13 = or i32 %3, %0"];
	Node0x6af190[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x6af200[shape=record, label="  %15 = xor i32 %8, -1"];
	Node0x6af270[shape=record, label="  %16 = xor i32 %13, -1"];
	Node0x6af310[shape=record, label="  %17 = mul i32 %16, -6"];
	Node0x6af380[shape=record, label="  %18 = add i32 %9, %15"];
	Node0x6af420[shape=record, label="  %19 = mul i32 %18, -3"];
	Node0x6af490[shape=record, label="  %20 = add i32 %1, -1"];
	Node0x6af500[shape=record, label="  %21 = add i32 %20, %7"];
	Node0x6af570[shape=record, label="  %22 = add i32 %21, %8"];
	Node0x6af5e0[shape=record, label="  %23 = sub i32 %22, %6"];
	Node0x6af650[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x6af6c0[shape=record, label="  %25 = add i32 %24, %12"];
	Node0x6af730[shape=record, label="  %26 = add i32 %25, %4"];
	Node0x6af7a0[shape=record, label="  %27 = sub i32 %26, %14"];
	Node0x6af810[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x6af880[shape=record, label="  %29 = add i32 %28, %19"];
	Node0x6af8f0[shape=record, label="  %30 = icmp eq i32 %5, %29"];
	Node0x64f268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6afd90[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x6afff0[shape=record, label="  ret void"];
	Node0x6aec40 -> Node0x6aecb0;
	Node0x6aecb0 -> Node0x6aed70;
	Node0x6aed70 -> Node0x6aede0;
	Node0x6aede0 -> Node0x6aee50;
	Node0x6aee50 -> Node0x6aeec0;
	Node0x6aeec0 -> Node0x6aef30;
	Node0x6aef30 -> Node0x6aefa0;
	Node0x6aefa0 -> Node0x6af010;
	Node0x6af010 -> Node0x6af0b0;
	Node0x6af0b0 -> Node0x6af120;
	Node0x6af120 -> Node0x6af190;
	Node0x6af190 -> Node0x6af200;
	Node0x6af200 -> Node0x6af270;
	Node0x6af270 -> Node0x6af310;
	Node0x6af310 -> Node0x6af380;
	Node0x6af380 -> Node0x6af420;
	Node0x6af420 -> Node0x6af490;
	Node0x6af490 -> Node0x6af500;
	Node0x6af500 -> Node0x6af570;
	Node0x6af570 -> Node0x6af5e0;
	Node0x6af5e0 -> Node0x6af650;
	Node0x6af650 -> Node0x6af6c0;
	Node0x6af6c0 -> Node0x6af730;
	Node0x6af730 -> Node0x6af7a0;
	Node0x6af7a0 -> Node0x6af810;
	Node0x6af810 -> Node0x6af880;
	Node0x6af880 -> Node0x6af8f0;
	Node0x6af8f0 -> Node0x64f268;
	Node0x64f268 -> Node0x6afd90;
	Node0x6afd90 -> Node0x6afff0;
edge [color=red]
	Node0x6aec40 -> Node0x6aecb0;
	Node0x6aecb0 -> Node0x6aed70;
	Node0x6aede0 -> Node0x6aee50;
	Node0x6aef30 -> Node0x6aefa0;
	Node0x6af010 -> Node0x6af0b0;
	Node0x6aec40 -> Node0x6af120;
	Node0x6af120 -> Node0x6af190;
	Node0x6aeec0 -> Node0x6af200;
	Node0x6af120 -> Node0x6af270;
	Node0x6af270 -> Node0x6af310;
	Node0x6aef30 -> Node0x6af380;
	Node0x6af200 -> Node0x6af380;
	Node0x6af380 -> Node0x6af420;
	Node0x6af490 -> Node0x6af500;
	Node0x6aee50 -> Node0x6af500;
	Node0x6af500 -> Node0x6af570;
	Node0x6aeec0 -> Node0x6af570;
	Node0x6af570 -> Node0x6af5e0;
	Node0x6aede0 -> Node0x6af5e0;
	Node0x6af5e0 -> Node0x6af650;
	Node0x6aefa0 -> Node0x6af650;
	Node0x6af650 -> Node0x6af6c0;
	Node0x6af0b0 -> Node0x6af6c0;
	Node0x6af6c0 -> Node0x6af730;
	Node0x6aecb0 -> Node0x6af730;
	Node0x6af730 -> Node0x6af7a0;
	Node0x6af190 -> Node0x6af7a0;
	Node0x6af7a0 -> Node0x6af810;
	Node0x6af310 -> Node0x6af810;
	Node0x6af810 -> Node0x6af880;
	Node0x6af420 -> Node0x6af880;
	Node0x6aed70 -> Node0x6af8f0;
	Node0x6af880 -> Node0x6af8f0;
	Node0x6af8f0 -> Node0x64f268;
	Node0x64f268 -> Node0x6afd90;
}
