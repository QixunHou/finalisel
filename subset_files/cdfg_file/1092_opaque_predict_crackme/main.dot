digraph "DFG for'main' function" {
	Node0xa29328[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa293a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa29438[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xa29498[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xa29918[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa299f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xa29af8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa29bb8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xa29c68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa29ec8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xa29f88[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa2aef8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa2b568[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xa2b660[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xa2b868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa2b9c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa2bad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa2bb98[shape=record, label="  ret i32 0"];
	Node0xa29328 -> Node0xa293a8;
	Node0xa293a8 -> Node0xa29438;
	Node0xa29438 -> Node0xa29498;
	Node0xa29498 -> Node0xa29918;
	Node0xa29918 -> Node0xa299f8;
	Node0xa299f8 -> Node0xa29af8;
	Node0xa29af8 -> Node0xa29bb8;
	Node0xa29bb8 -> Node0xa29c68;
	Node0xa29c68 -> Node0xa29ec8;
	Node0xa29ec8 -> Node0xa29f88;
	Node0xa29f88 -> Node0xa2aef8;
	Node0xa2aef8 -> Node0xa2b568;
	Node0xa2b568 -> Node0xa2b660;
	Node0xa2b660 -> Node0xa2b868;
	Node0xa2b868 -> Node0xa2b9c8;
	Node0xa2b9c8 -> Node0xa2bad8;
	Node0xa2bad8 -> Node0xa2bb98;
edge [color=red]
	Node0xa29328 -> Node0xa29498;
	Node0xa29498 -> Node0xa29918;
	Node0xa293a8 -> Node0xa299f8;
	Node0xa299f8 -> Node0xa29af8;
	Node0xa29438 -> Node0xa29bb8;
	Node0xa29bb8 -> Node0xa29c68;
	Node0xa29328 -> Node0xa29ec8;
	Node0xa293a8 -> Node0xa29ec8;
	Node0xa29438 -> Node0xa29ec8;
	Node0xa29328 -> Node0xa29f88;
	Node0xa293a8 -> Node0xa2aef8;
	Node0xa29438 -> Node0xa2b568;
	Node0xa29f88 -> Node0xa2b660;
	Node0xa2aef8 -> Node0xa2b660;
	Node0xa2b568 -> Node0xa2b660;
	Node0xa29bb8 -> Node0xa2b868;
	Node0xa299f8 -> Node0xa2b9c8;
	Node0xa29498 -> Node0xa2bad8;
}
