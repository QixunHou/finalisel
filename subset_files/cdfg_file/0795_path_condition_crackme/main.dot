digraph "DFG for'main' function" {
	Node0xf8bbc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf8bc48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf8bcd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf8bd38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xf8bde8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xf8c218[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf8c2f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xf8c3f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf8c4b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xf8c568[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf8c628[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xf8c6d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf86780[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xf8c8d8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf8d848[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf8deb8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf8df18[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xf8e028[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xf8e288[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf8e3e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf8e4f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf8e608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf8e6c8[shape=record, label="  ret i32 0"];
	Node0xf8bbc8 -> Node0xf8bc48;
	Node0xf8bc48 -> Node0xf8bcd8;
	Node0xf8bcd8 -> Node0xf8bd38;
	Node0xf8bd38 -> Node0xf8bde8;
	Node0xf8bde8 -> Node0xf8c218;
	Node0xf8c218 -> Node0xf8c2f8;
	Node0xf8c2f8 -> Node0xf8c3f8;
	Node0xf8c3f8 -> Node0xf8c4b8;
	Node0xf8c4b8 -> Node0xf8c568;
	Node0xf8c568 -> Node0xf8c628;
	Node0xf8c628 -> Node0xf8c6d8;
	Node0xf8c6d8 -> Node0xf86780;
	Node0xf86780 -> Node0xf8c8d8;
	Node0xf8c8d8 -> Node0xf8d848;
	Node0xf8d848 -> Node0xf8deb8;
	Node0xf8deb8 -> Node0xf8df18;
	Node0xf8df18 -> Node0xf8e028;
	Node0xf8e028 -> Node0xf8e288;
	Node0xf8e288 -> Node0xf8e3e8;
	Node0xf8e3e8 -> Node0xf8e4f8;
	Node0xf8e4f8 -> Node0xf8e608;
	Node0xf8e608 -> Node0xf8e6c8;
edge [color=red]
	Node0xf8bbc8 -> Node0xf8bde8;
	Node0xf8bde8 -> Node0xf8c218;
	Node0xf8bc48 -> Node0xf8c2f8;
	Node0xf8c2f8 -> Node0xf8c3f8;
	Node0xf8bcd8 -> Node0xf8c4b8;
	Node0xf8c4b8 -> Node0xf8c568;
	Node0xf8bd38 -> Node0xf8c628;
	Node0xf8c628 -> Node0xf8c6d8;
	Node0xf8bbc8 -> Node0xf86780;
	Node0xf8bc48 -> Node0xf86780;
	Node0xf8bcd8 -> Node0xf86780;
	Node0xf8bd38 -> Node0xf86780;
	Node0xf8bbc8 -> Node0xf8c8d8;
	Node0xf8bc48 -> Node0xf8d848;
	Node0xf8bcd8 -> Node0xf8deb8;
	Node0xf8bd38 -> Node0xf8df18;
	Node0xf8c8d8 -> Node0xf8e028;
	Node0xf8d848 -> Node0xf8e028;
	Node0xf8deb8 -> Node0xf8e028;
	Node0xf8df18 -> Node0xf8e028;
	Node0xf8c628 -> Node0xf8e288;
	Node0xf8c4b8 -> Node0xf8e3e8;
	Node0xf8c2f8 -> Node0xf8e4f8;
	Node0xf8bde8 -> Node0xf8e608;
}
