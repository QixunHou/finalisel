digraph "DFG for'crackme' function" {
	Node0xf89d60[shape=record, label="  %5 = sub i32 1, %1"];
	Node0xf89dd0[shape=record, label="  %6 = xor i32 %3, %0"];
	Node0xf89e40[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0xf89ee0[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0xf89f50[shape=record, label="  %9 = sub i32 %5, %8"];
	Node0xf89ff0[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0xf8a060[shape=record, label="  %11 = or i32 %10, %1"];
	Node0xf8a0d0[shape=record, label="  %12 = and i32 %10, %1"];
	Node0xf8a140[shape=record, label="  %13 = and i32 %2, %1"];
	Node0xf8a1b0[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0xf8a220[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0xf8a290[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0xf8a300[shape=record, label="  %17 = or i32 %2, %1"];
	Node0xf8a370[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0xf8a3e0[shape=record, label="  %19 = xor i32 %11, -1"];
	Node0xf8a480[shape=record, label="  %20 = mul i32 %19, -6"];
	Node0xf8a520[shape=record, label="  %21 = shl i32 %13, 2"];
	Node0xf8a590[shape=record, label="  %22 = and i32 %3, %0"];
	Node0xf8a600[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0xf8a670[shape=record, label="  %24 = or i32 %3, %0"];
	Node0xf8a6e0[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0xf8a780[shape=record, label="  %26 = or i32 %25, 3"];
	Node0xf8a820[shape=record, label="  %27 = xor i32 %0, 1073741823"];
	Node0xf8a8c0[shape=record, label="  %28 = xor i32 %3, 2147483647"];
	Node0xf8a930[shape=record, label="  %29 = and i32 %28, %0"];
	Node0xf8a9a0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0xf8aa10[shape=record, label="  %31 = and i32 %27, %3"];
	Node0xf8aa80[shape=record, label="  %32 = shl i32 %31, 2"];
	Node0xf8ad00[shape=record, label="  %33 = sub i32 %2, %22"];
	Node0xf8ada0[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0xf8ae10[shape=record, label="  %35 = sub i32 %3, %12"];
	Node0xf8ae80[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0xf8aef0[shape=record, label="  %37 = sub i32 %10, %11"];
	Node0xf8af60[shape=record, label="  %38 = add i32 %37, %13"];
	Node0xf8afd0[shape=record, label="  %39 = add i32 %38, %14"];
	Node0xf8b040[shape=record, label="  %40 = sub i32 %39, %17"];
	Node0xf8b0b0[shape=record, label="  %41 = add i32 %40, %18"];
	Node0xf8b120[shape=record, label="  %42 = add i32 %41, %20"];
	Node0xf8b190[shape=record, label="  %43 = sub i32 %42, %21"];
	Node0xf8b200[shape=record, label="  %44 = add i32 %43, %23"];
	Node0xf8b270[shape=record, label="  %45 = sub i32 %44, %16"];
	Node0xf8b2e0[shape=record, label="  %46 = sub i32 %45, %32"];
	Node0xf8b350[shape=record, label="  %47 = add i32 %46, %26"];
	Node0xf8b3c0[shape=record, label="  %48 = sub i32 %47, %30"];
	Node0xf8b430[shape=record, label="  %49 = add i32 %48, %34"];
	Node0xf8b4a0[shape=record, label="  %50 = add i32 %49, %36"];
	Node0xf8b510[shape=record, label="  %51 = icmp eq i32 %9, %50"];
	Node0xf2a268[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf8b9b0[shape=record, label="  %53 = tail call i32 @puts(i8* nonnull dereferenceable(1) %52)"];
	Node0xf8ba00[shape=record, label="  ret void"];
	Node0xf89d60 -> Node0xf89dd0;
	Node0xf89dd0 -> Node0xf89e40;
	Node0xf89e40 -> Node0xf89ee0;
	Node0xf89ee0 -> Node0xf89f50;
	Node0xf89f50 -> Node0xf89ff0;
	Node0xf89ff0 -> Node0xf8a060;
	Node0xf8a060 -> Node0xf8a0d0;
	Node0xf8a0d0 -> Node0xf8a140;
	Node0xf8a140 -> Node0xf8a1b0;
	Node0xf8a1b0 -> Node0xf8a220;
	Node0xf8a220 -> Node0xf8a290;
	Node0xf8a290 -> Node0xf8a300;
	Node0xf8a300 -> Node0xf8a370;
	Node0xf8a370 -> Node0xf8a3e0;
	Node0xf8a3e0 -> Node0xf8a480;
	Node0xf8a480 -> Node0xf8a520;
	Node0xf8a520 -> Node0xf8a590;
	Node0xf8a590 -> Node0xf8a600;
	Node0xf8a600 -> Node0xf8a670;
	Node0xf8a670 -> Node0xf8a6e0;
	Node0xf8a6e0 -> Node0xf8a780;
	Node0xf8a780 -> Node0xf8a820;
	Node0xf8a820 -> Node0xf8a8c0;
	Node0xf8a8c0 -> Node0xf8a930;
	Node0xf8a930 -> Node0xf8a9a0;
	Node0xf8a9a0 -> Node0xf8aa10;
	Node0xf8aa10 -> Node0xf8aa80;
	Node0xf8aa80 -> Node0xf8ad00;
	Node0xf8ad00 -> Node0xf8ada0;
	Node0xf8ada0 -> Node0xf8ae10;
	Node0xf8ae10 -> Node0xf8ae80;
	Node0xf8ae80 -> Node0xf8aef0;
	Node0xf8aef0 -> Node0xf8af60;
	Node0xf8af60 -> Node0xf8afd0;
	Node0xf8afd0 -> Node0xf8b040;
	Node0xf8b040 -> Node0xf8b0b0;
	Node0xf8b0b0 -> Node0xf8b120;
	Node0xf8b120 -> Node0xf8b190;
	Node0xf8b190 -> Node0xf8b200;
	Node0xf8b200 -> Node0xf8b270;
	Node0xf8b270 -> Node0xf8b2e0;
	Node0xf8b2e0 -> Node0xf8b350;
	Node0xf8b350 -> Node0xf8b3c0;
	Node0xf8b3c0 -> Node0xf8b430;
	Node0xf8b430 -> Node0xf8b4a0;
	Node0xf8b4a0 -> Node0xf8b510;
	Node0xf8b510 -> Node0xf2a268;
	Node0xf2a268 -> Node0xf8b9b0;
	Node0xf8b9b0 -> Node0xf8ba00;
edge [color=red]
	Node0xf89dd0 -> Node0xf89e40;
	Node0xf89e40 -> Node0xf89ee0;
	Node0xf89d60 -> Node0xf89f50;
	Node0xf89ee0 -> Node0xf89f50;
	Node0xf89ff0 -> Node0xf8a060;
	Node0xf89ff0 -> Node0xf8a0d0;
	Node0xf8a1b0 -> Node0xf8a220;
	Node0xf8a220 -> Node0xf8a290;
	Node0xf8a300 -> Node0xf8a370;
	Node0xf8a060 -> Node0xf8a3e0;
	Node0xf8a3e0 -> Node0xf8a480;
	Node0xf8a140 -> Node0xf8a520;
	Node0xf8a590 -> Node0xf8a600;
	Node0xf8a670 -> Node0xf8a6e0;
	Node0xf8a6e0 -> Node0xf8a780;
	Node0xf8a8c0 -> Node0xf8a930;
	Node0xf8a930 -> Node0xf8a9a0;
	Node0xf8a820 -> Node0xf8aa10;
	Node0xf8aa10 -> Node0xf8aa80;
	Node0xf8a590 -> Node0xf8ad00;
	Node0xf8ad00 -> Node0xf8ada0;
	Node0xf8a0d0 -> Node0xf8ae10;
	Node0xf8ae10 -> Node0xf8ae80;
	Node0xf89ff0 -> Node0xf8aef0;
	Node0xf8a060 -> Node0xf8aef0;
	Node0xf8aef0 -> Node0xf8af60;
	Node0xf8a140 -> Node0xf8af60;
	Node0xf8af60 -> Node0xf8afd0;
	Node0xf8a1b0 -> Node0xf8afd0;
	Node0xf8afd0 -> Node0xf8b040;
	Node0xf8a300 -> Node0xf8b040;
	Node0xf8b040 -> Node0xf8b0b0;
	Node0xf8a370 -> Node0xf8b0b0;
	Node0xf8b0b0 -> Node0xf8b120;
	Node0xf8a480 -> Node0xf8b120;
	Node0xf8b120 -> Node0xf8b190;
	Node0xf8a520 -> Node0xf8b190;
	Node0xf8b190 -> Node0xf8b200;
	Node0xf8a600 -> Node0xf8b200;
	Node0xf8b200 -> Node0xf8b270;
	Node0xf8a290 -> Node0xf8b270;
	Node0xf8b270 -> Node0xf8b2e0;
	Node0xf8aa80 -> Node0xf8b2e0;
	Node0xf8b2e0 -> Node0xf8b350;
	Node0xf8a780 -> Node0xf8b350;
	Node0xf8b350 -> Node0xf8b3c0;
	Node0xf8a9a0 -> Node0xf8b3c0;
	Node0xf8b3c0 -> Node0xf8b430;
	Node0xf8ada0 -> Node0xf8b430;
	Node0xf8b430 -> Node0xf8b4a0;
	Node0xf8ae80 -> Node0xf8b4a0;
	Node0xf89f50 -> Node0xf8b510;
	Node0xf8b4a0 -> Node0xf8b510;
	Node0xf8b510 -> Node0xf2a268;
	Node0xf2a268 -> Node0xf8b9b0;
}
