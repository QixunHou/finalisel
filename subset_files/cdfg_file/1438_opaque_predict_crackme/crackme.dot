digraph "DFG for'crackme' function" {
	Node0x1e4e8c0[shape=record, label="  %3 = mul i32 %1, -2"];
	Node0x1e4e960[shape=record, label="  %4 = xor i32 %0, 2147483647"];
	Node0x1e4ea20[shape=record, label="  %5 = and i32 %4, %1"];
	Node0x1e4ea90[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x1e4eb00[shape=record, label="  %7 = xor i32 %1, %0"];
	Node0x1e4eb70[shape=record, label="  %8 = add i32 %1, %0"];
	Node0x1e4ebe0[shape=record, label="  %9 = sub i32 %7, %8"];
	Node0x1e4ec50[shape=record, label="  %10 = sub i32 %9, %6"];
	Node0x1e4ecc0[shape=record, label="  %11 = icmp eq i32 %3, %10"];
	Node0x1def388[shape=record, label="  %12 = select i1 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e4f160[shape=record, label="  %13 = tail call i32 @puts(i8* nonnull dereferenceable(1) %12)"];
	Node0x1e4f1b0[shape=record, label="  ret void"];
	Node0x1e4e8c0 -> Node0x1e4e960;
	Node0x1e4e960 -> Node0x1e4ea20;
	Node0x1e4ea20 -> Node0x1e4ea90;
	Node0x1e4ea90 -> Node0x1e4eb00;
	Node0x1e4eb00 -> Node0x1e4eb70;
	Node0x1e4eb70 -> Node0x1e4ebe0;
	Node0x1e4ebe0 -> Node0x1e4ec50;
	Node0x1e4ec50 -> Node0x1e4ecc0;
	Node0x1e4ecc0 -> Node0x1def388;
	Node0x1def388 -> Node0x1e4f160;
	Node0x1e4f160 -> Node0x1e4f1b0;
edge [color=red]
	Node0x1e4e960 -> Node0x1e4ea20;
	Node0x1e4ea20 -> Node0x1e4ea90;
	Node0x1e4eb00 -> Node0x1e4ebe0;
	Node0x1e4eb70 -> Node0x1e4ebe0;
	Node0x1e4ebe0 -> Node0x1e4ec50;
	Node0x1e4ea90 -> Node0x1e4ec50;
	Node0x1e4e8c0 -> Node0x1e4ecc0;
	Node0x1e4ec50 -> Node0x1e4ecc0;
	Node0x1e4ecc0 -> Node0x1def388;
	Node0x1def388 -> Node0x1e4f160;
}
