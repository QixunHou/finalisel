digraph "DFG for'main' function" {
	Node0xda7228[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xda72a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xda7338[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xda7398[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xda7818[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xda78f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xda79f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xda7ab8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xda7b68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xda7dc8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xda7e88[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xda7fe8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xda8048[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xdad9e0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xdadbe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xdadd48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xdade58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdadf18[shape=record, label="  ret i32 0"];
	Node0xda7228 -> Node0xda72a8;
	Node0xda72a8 -> Node0xda7338;
	Node0xda7338 -> Node0xda7398;
	Node0xda7398 -> Node0xda7818;
	Node0xda7818 -> Node0xda78f8;
	Node0xda78f8 -> Node0xda79f8;
	Node0xda79f8 -> Node0xda7ab8;
	Node0xda7ab8 -> Node0xda7b68;
	Node0xda7b68 -> Node0xda7dc8;
	Node0xda7dc8 -> Node0xda7e88;
	Node0xda7e88 -> Node0xda7fe8;
	Node0xda7fe8 -> Node0xda8048;
	Node0xda8048 -> Node0xdad9e0;
	Node0xdad9e0 -> Node0xdadbe8;
	Node0xdadbe8 -> Node0xdadd48;
	Node0xdadd48 -> Node0xdade58;
	Node0xdade58 -> Node0xdadf18;
edge [color=red]
	Node0xda7228 -> Node0xda7398;
	Node0xda7398 -> Node0xda7818;
	Node0xda72a8 -> Node0xda78f8;
	Node0xda78f8 -> Node0xda79f8;
	Node0xda7338 -> Node0xda7ab8;
	Node0xda7ab8 -> Node0xda7b68;
	Node0xda7228 -> Node0xda7dc8;
	Node0xda72a8 -> Node0xda7dc8;
	Node0xda7338 -> Node0xda7dc8;
	Node0xda7228 -> Node0xda7e88;
	Node0xda72a8 -> Node0xda7fe8;
	Node0xda7338 -> Node0xda8048;
	Node0xda7e88 -> Node0xdad9e0;
	Node0xda7fe8 -> Node0xdad9e0;
	Node0xda8048 -> Node0xdad9e0;
	Node0xda7ab8 -> Node0xdadbe8;
	Node0xda78f8 -> Node0xdadd48;
	Node0xda7398 -> Node0xdade58;
}
