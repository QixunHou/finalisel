digraph "DFG for'main' function" {
	Node0x206add8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x206ae58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x206aee8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x206af48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x206aff8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x206b428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x206b508[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x206b608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x206b6c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x206b778[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x206b838[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x206b8e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2065be0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x206bae8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x206ca58[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x206d0c8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x206d128[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x206d1a0[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x206d210[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x206d280[shape=record, label="  %16 = add i32 %14, %15"];
	Node0x206d2f0[shape=record, label="  %17 = and i32 %12, %11"];
	Node0x206d360[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x206d3d0[shape=record, label="  %19 = xor i32 %12, %11"];
	Node0x206d440[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x206d4b0[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x206d520[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0x206d590[shape=record, label="  %23 = xor i32 %11, 1073741823"];
	Node0x206d600[shape=record, label="  %24 = and i32 %23, %12"];
	Node0x206d670[shape=record, label="  %25 = and i32 %11, %22"];
	Node0x206d6e0[shape=record, label="  %26 = shl i32 %10, 1"];
	Node0x206d750[shape=record, label="  %27 = xor i32 %13, %10"];
	Node0x206d7c0[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x206d830[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x206d8a0[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x206d910[shape=record, label="  %31 = and i32 %13, %15"];
	Node0x206d980[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x206d9f0[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0x206da60[shape=record, label="  %34 = shl i32 %31, 2"];
	Node0x206dad0[shape=record, label="  %35 = add i32 %17, %24"];
	Node0x206db40[shape=record, label="  %36 = shl i32 %35, 2"];
	Node0x206dbb0[shape=record, label="  %37 = sub i32 %33, %12"];
	Node0x206dc20[shape=record, label="  %38 = mul i32 %37, 3"];
	Node0x206dc90[shape=record, label="  %39 = add i32 %30, %13"];
	Node0x206dd00[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x206dd70[shape=record, label="  %41 = sub i32 2, %11"];
	Node0x206dde0[shape=record, label="  %42 = sub i32 %41, %26"];
	Node0x206de50[shape=record, label="  %43 = add i32 %42, %18"];
	Node0x206dec0[shape=record, label="  %44 = add i32 %43, %19"];
	Node0x206df30[shape=record, label="  %45 = add i32 %44, %25"];
	Node0x206dfa0[shape=record, label="  %46 = add i32 %45, %27"];
	Node0x206e010[shape=record, label="  %47 = sub i32 %46, %30"];
	Node0x206e080[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x206e0f0[shape=record, label="  %49 = add i32 %48, %32"];
	Node0x206e160[shape=record, label="  %50 = add i32 %49, %21"];
	Node0x206e1d0[shape=record, label="  %51 = sub i32 %50, %34"];
	Node0x206e240[shape=record, label="  %52 = add i32 %51, %36"];
	Node0x206e2b0[shape=record, label="  %53 = sub i32 %52, %29"];
	Node0x206e320[shape=record, label="  %54 = add i32 %53, %38"];
	Node0x206e390[shape=record, label="  %55 = add i32 %54, %40"];
	Node0x206e400[shape=record, label="  %56 = icmp eq i32 %16, %55"];
	Node0x200a8b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x206e490[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x206e738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x206e898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x206e9a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x206eab8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x206eb78[shape=record, label="  ret i32 0"];
	Node0x206add8 -> Node0x206ae58;
	Node0x206ae58 -> Node0x206aee8;
	Node0x206aee8 -> Node0x206af48;
	Node0x206af48 -> Node0x206aff8;
	Node0x206aff8 -> Node0x206b428;
	Node0x206b428 -> Node0x206b508;
	Node0x206b508 -> Node0x206b608;
	Node0x206b608 -> Node0x206b6c8;
	Node0x206b6c8 -> Node0x206b778;
	Node0x206b778 -> Node0x206b838;
	Node0x206b838 -> Node0x206b8e8;
	Node0x206b8e8 -> Node0x2065be0;
	Node0x2065be0 -> Node0x206bae8;
	Node0x206bae8 -> Node0x206ca58;
	Node0x206ca58 -> Node0x206d0c8;
	Node0x206d0c8 -> Node0x206d128;
	Node0x206d128 -> Node0x206d1a0;
	Node0x206d1a0 -> Node0x206d210;
	Node0x206d210 -> Node0x206d280;
	Node0x206d280 -> Node0x206d2f0;
	Node0x206d2f0 -> Node0x206d360;
	Node0x206d360 -> Node0x206d3d0;
	Node0x206d3d0 -> Node0x206d440;
	Node0x206d440 -> Node0x206d4b0;
	Node0x206d4b0 -> Node0x206d520;
	Node0x206d520 -> Node0x206d590;
	Node0x206d590 -> Node0x206d600;
	Node0x206d600 -> Node0x206d670;
	Node0x206d670 -> Node0x206d6e0;
	Node0x206d6e0 -> Node0x206d750;
	Node0x206d750 -> Node0x206d7c0;
	Node0x206d7c0 -> Node0x206d830;
	Node0x206d830 -> Node0x206d8a0;
	Node0x206d8a0 -> Node0x206d910;
	Node0x206d910 -> Node0x206d980;
	Node0x206d980 -> Node0x206d9f0;
	Node0x206d9f0 -> Node0x206da60;
	Node0x206da60 -> Node0x206dad0;
	Node0x206dad0 -> Node0x206db40;
	Node0x206db40 -> Node0x206dbb0;
	Node0x206dbb0 -> Node0x206dc20;
	Node0x206dc20 -> Node0x206dc90;
	Node0x206dc90 -> Node0x206dd00;
	Node0x206dd00 -> Node0x206dd70;
	Node0x206dd70 -> Node0x206dde0;
	Node0x206dde0 -> Node0x206de50;
	Node0x206de50 -> Node0x206dec0;
	Node0x206dec0 -> Node0x206df30;
	Node0x206df30 -> Node0x206dfa0;
	Node0x206dfa0 -> Node0x206e010;
	Node0x206e010 -> Node0x206e080;
	Node0x206e080 -> Node0x206e0f0;
	Node0x206e0f0 -> Node0x206e160;
	Node0x206e160 -> Node0x206e1d0;
	Node0x206e1d0 -> Node0x206e240;
	Node0x206e240 -> Node0x206e2b0;
	Node0x206e2b0 -> Node0x206e320;
	Node0x206e320 -> Node0x206e390;
	Node0x206e390 -> Node0x206e400;
	Node0x206e400 -> Node0x200a8b8;
	Node0x200a8b8 -> Node0x206e490;
	Node0x206e490 -> Node0x206e738;
	Node0x206e738 -> Node0x206e898;
	Node0x206e898 -> Node0x206e9a8;
	Node0x206e9a8 -> Node0x206eab8;
	Node0x206eab8 -> Node0x206eb78;
edge [color=red]
	Node0x206add8 -> Node0x206aff8;
	Node0x206aff8 -> Node0x206b428;
	Node0x206ae58 -> Node0x206b508;
	Node0x206b508 -> Node0x206b608;
	Node0x206aee8 -> Node0x206b6c8;
	Node0x206b6c8 -> Node0x206b778;
	Node0x206af48 -> Node0x206b838;
	Node0x206b838 -> Node0x206b8e8;
	Node0x206add8 -> Node0x2065be0;
	Node0x206ae58 -> Node0x2065be0;
	Node0x206aee8 -> Node0x2065be0;
	Node0x206af48 -> Node0x2065be0;
	Node0x206add8 -> Node0x206bae8;
	Node0x206ae58 -> Node0x206ca58;
	Node0x206aee8 -> Node0x206d0c8;
	Node0x206af48 -> Node0x206d128;
	Node0x206ca58 -> Node0x206d1a0;
	Node0x206bae8 -> Node0x206d210;
	Node0x206d1a0 -> Node0x206d280;
	Node0x206d210 -> Node0x206d280;
	Node0x206d0c8 -> Node0x206d2f0;
	Node0x206ca58 -> Node0x206d2f0;
	Node0x206d2f0 -> Node0x206d360;
	Node0x206d0c8 -> Node0x206d3d0;
	Node0x206ca58 -> Node0x206d3d0;
	Node0x206d3d0 -> Node0x206d440;
	Node0x206d440 -> Node0x206d4b0;
	Node0x206d0c8 -> Node0x206d520;
	Node0x206ca58 -> Node0x206d590;
	Node0x206d590 -> Node0x206d600;
	Node0x206d0c8 -> Node0x206d600;
	Node0x206ca58 -> Node0x206d670;
	Node0x206d520 -> Node0x206d670;
	Node0x206bae8 -> Node0x206d6e0;
	Node0x206d128 -> Node0x206d750;
	Node0x206bae8 -> Node0x206d750;
	Node0x206d750 -> Node0x206d7c0;
	Node0x206d7c0 -> Node0x206d830;
	Node0x206d128 -> Node0x206d8a0;
	Node0x206bae8 -> Node0x206d8a0;
	Node0x206d128 -> Node0x206d910;
	Node0x206d210 -> Node0x206d910;
	Node0x206d128 -> Node0x206d980;
	Node0x206bae8 -> Node0x206d980;
	Node0x206d980 -> Node0x206d9f0;
	Node0x206d910 -> Node0x206da60;
	Node0x206d2f0 -> Node0x206dad0;
	Node0x206d600 -> Node0x206dad0;
	Node0x206dad0 -> Node0x206db40;
	Node0x206d9f0 -> Node0x206dbb0;
	Node0x206d0c8 -> Node0x206dbb0;
	Node0x206dbb0 -> Node0x206dc20;
	Node0x206d8a0 -> Node0x206dc90;
	Node0x206d128 -> Node0x206dc90;
	Node0x206dc90 -> Node0x206dd00;
	Node0x206ca58 -> Node0x206dd70;
	Node0x206dd70 -> Node0x206dde0;
	Node0x206d6e0 -> Node0x206dde0;
	Node0x206dde0 -> Node0x206de50;
	Node0x206d360 -> Node0x206de50;
	Node0x206de50 -> Node0x206dec0;
	Node0x206d3d0 -> Node0x206dec0;
	Node0x206dec0 -> Node0x206df30;
	Node0x206d670 -> Node0x206df30;
	Node0x206df30 -> Node0x206dfa0;
	Node0x206d750 -> Node0x206dfa0;
	Node0x206dfa0 -> Node0x206e010;
	Node0x206d8a0 -> Node0x206e010;
	Node0x206e010 -> Node0x206e080;
	Node0x206d910 -> Node0x206e080;
	Node0x206e080 -> Node0x206e0f0;
	Node0x206d980 -> Node0x206e0f0;
	Node0x206e0f0 -> Node0x206e160;
	Node0x206d4b0 -> Node0x206e160;
	Node0x206e160 -> Node0x206e1d0;
	Node0x206da60 -> Node0x206e1d0;
	Node0x206e1d0 -> Node0x206e240;
	Node0x206db40 -> Node0x206e240;
	Node0x206e240 -> Node0x206e2b0;
	Node0x206d830 -> Node0x206e2b0;
	Node0x206e2b0 -> Node0x206e320;
	Node0x206dc20 -> Node0x206e320;
	Node0x206e320 -> Node0x206e390;
	Node0x206dd00 -> Node0x206e390;
	Node0x206d280 -> Node0x206e400;
	Node0x206e390 -> Node0x206e400;
	Node0x206e400 -> Node0x200a8b8;
	Node0x200a8b8 -> Node0x206e490;
	Node0x206b838 -> Node0x206e738;
	Node0x206b6c8 -> Node0x206e898;
	Node0x206b508 -> Node0x206e9a8;
	Node0x206aff8 -> Node0x206eab8;
}
