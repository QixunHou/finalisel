digraph "DFG for'main' function" {
	Node0x4f4d58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x4f4dd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x4f4e68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x4f4ec8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x4f4f78[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x4f53a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x4f5488[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x4f5588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x4f5648[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x4f56f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x4f57b8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x4f5868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x4efba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x4f5a68[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x4f69d8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x4f7048[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x4f70a8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x4f7120[shape=record, label="  %14 = and i32 %13, %10"];
	Node0x4f7190[shape=record, label="  %15 = add i32 %11, 1"];
	Node0x4f7200[shape=record, label="  %16 = add i32 %15, %14"];
	Node0x4f7270[shape=record, label="  %17 = and i32 %12, %11"];
	Node0x4f72e0[shape=record, label="  %18 = xor i32 %12, -1"];
	Node0x4f7350[shape=record, label="  %19 = or i32 %11, %18"];
	Node0x4f73c0[shape=record, label="  %20 = and i32 %11, %18"];
	Node0x4f7430[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x4f74a0[shape=record, label="  %22 = xor i32 %12, %11"];
	Node0x4f7510[shape=record, label="  %23 = shl i32 %22, 2"];
	Node0x4f7580[shape=record, label="  %24 = or i32 %12, %11"];
	Node0x4f75f0[shape=record, label="  %25 = shl i32 %19, 3"];
	Node0x4f7660[shape=record, label="  %26 = xor i32 %25, -8"];
	Node0x4f76d0[shape=record, label="  %27 = xor i32 %13, %10"];
	Node0x4f7740[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x4f77b0[shape=record, label="  %29 = xor i32 %10, -1"];
	Node0x4f7820[shape=record, label="  %30 = or i32 %13, %29"];
	Node0x4f7890[shape=record, label="  %31 = or i32 %13, %10"];
	Node0x4f7900[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x4f7970[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x4f79e0[shape=record, label="  %34 = shl i32 %30, 1"];
	Node0x4f7a50[shape=record, label="  %35 = xor i32 %34, -2"];
	Node0x4f7ac0[shape=record, label="  %36 = sub i32 %20, %12"];
	Node0x4f7b30[shape=record, label="  %37 = add i32 %36, %17"];
	Node0x4f7ba0[shape=record, label="  %38 = mul i32 %37, 5"];
	Node0x4f7c10[shape=record, label="  %39 = shl i32 %13, 2"];
	Node0x4f7c80[shape=record, label="  %40 = sub i32 2, %12"];
	Node0x4f7cf0[shape=record, label="  %41 = add i32 %40, %17"];
	Node0x4f7d60[shape=record, label="  %42 = sub i32 %41, %19"];
	Node0x4f7dd0[shape=record, label="  %43 = add i32 %42, %21"];
	Node0x4f7e40[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x4f7eb0[shape=record, label="  %45 = sub i32 %44, %13"];
	Node0x4f7f20[shape=record, label="  %46 = sub i32 %45, %23"];
	Node0x4f7f90[shape=record, label="  %47 = add i32 %46, %27"];
	Node0x4f8000[shape=record, label="  %48 = sub i32 %47, %30"];
	Node0x4f8070[shape=record, label="  %49 = add i32 %48, %39"];
	Node0x4f80e0[shape=record, label="  %50 = add i32 %49, %26"];
	Node0x4f8150[shape=record, label="  %51 = sub i32 %50, %28"];
	Node0x4f81c0[shape=record, label="  %52 = add i32 %51, %33"];
	Node0x4f8230[shape=record, label="  %53 = add i32 %52, %35"];
	Node0x4f82a0[shape=record, label="  %54 = add i32 %53, %38"];
	Node0x4f8310[shape=record, label="  %55 = icmp eq i32 %16, %54"];
	Node0x4948b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x4f83a0[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x4f8648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x4f87a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x4f88b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x4f89c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x4f8a88[shape=record, label="  ret i32 0"];
	Node0x4f4d58 -> Node0x4f4dd8;
	Node0x4f4dd8 -> Node0x4f4e68;
	Node0x4f4e68 -> Node0x4f4ec8;
	Node0x4f4ec8 -> Node0x4f4f78;
	Node0x4f4f78 -> Node0x4f53a8;
	Node0x4f53a8 -> Node0x4f5488;
	Node0x4f5488 -> Node0x4f5588;
	Node0x4f5588 -> Node0x4f5648;
	Node0x4f5648 -> Node0x4f56f8;
	Node0x4f56f8 -> Node0x4f57b8;
	Node0x4f57b8 -> Node0x4f5868;
	Node0x4f5868 -> Node0x4efba0;
	Node0x4efba0 -> Node0x4f5a68;
	Node0x4f5a68 -> Node0x4f69d8;
	Node0x4f69d8 -> Node0x4f7048;
	Node0x4f7048 -> Node0x4f70a8;
	Node0x4f70a8 -> Node0x4f7120;
	Node0x4f7120 -> Node0x4f7190;
	Node0x4f7190 -> Node0x4f7200;
	Node0x4f7200 -> Node0x4f7270;
	Node0x4f7270 -> Node0x4f72e0;
	Node0x4f72e0 -> Node0x4f7350;
	Node0x4f7350 -> Node0x4f73c0;
	Node0x4f73c0 -> Node0x4f7430;
	Node0x4f7430 -> Node0x4f74a0;
	Node0x4f74a0 -> Node0x4f7510;
	Node0x4f7510 -> Node0x4f7580;
	Node0x4f7580 -> Node0x4f75f0;
	Node0x4f75f0 -> Node0x4f7660;
	Node0x4f7660 -> Node0x4f76d0;
	Node0x4f76d0 -> Node0x4f7740;
	Node0x4f7740 -> Node0x4f77b0;
	Node0x4f77b0 -> Node0x4f7820;
	Node0x4f7820 -> Node0x4f7890;
	Node0x4f7890 -> Node0x4f7900;
	Node0x4f7900 -> Node0x4f7970;
	Node0x4f7970 -> Node0x4f79e0;
	Node0x4f79e0 -> Node0x4f7a50;
	Node0x4f7a50 -> Node0x4f7ac0;
	Node0x4f7ac0 -> Node0x4f7b30;
	Node0x4f7b30 -> Node0x4f7ba0;
	Node0x4f7ba0 -> Node0x4f7c10;
	Node0x4f7c10 -> Node0x4f7c80;
	Node0x4f7c80 -> Node0x4f7cf0;
	Node0x4f7cf0 -> Node0x4f7d60;
	Node0x4f7d60 -> Node0x4f7dd0;
	Node0x4f7dd0 -> Node0x4f7e40;
	Node0x4f7e40 -> Node0x4f7eb0;
	Node0x4f7eb0 -> Node0x4f7f20;
	Node0x4f7f20 -> Node0x4f7f90;
	Node0x4f7f90 -> Node0x4f8000;
	Node0x4f8000 -> Node0x4f8070;
	Node0x4f8070 -> Node0x4f80e0;
	Node0x4f80e0 -> Node0x4f8150;
	Node0x4f8150 -> Node0x4f81c0;
	Node0x4f81c0 -> Node0x4f8230;
	Node0x4f8230 -> Node0x4f82a0;
	Node0x4f82a0 -> Node0x4f8310;
	Node0x4f8310 -> Node0x4948b8;
	Node0x4948b8 -> Node0x4f83a0;
	Node0x4f83a0 -> Node0x4f8648;
	Node0x4f8648 -> Node0x4f87a8;
	Node0x4f87a8 -> Node0x4f88b8;
	Node0x4f88b8 -> Node0x4f89c8;
	Node0x4f89c8 -> Node0x4f8a88;
edge [color=red]
	Node0x4f4d58 -> Node0x4f4f78;
	Node0x4f4f78 -> Node0x4f53a8;
	Node0x4f4dd8 -> Node0x4f5488;
	Node0x4f5488 -> Node0x4f5588;
	Node0x4f4e68 -> Node0x4f5648;
	Node0x4f5648 -> Node0x4f56f8;
	Node0x4f4ec8 -> Node0x4f57b8;
	Node0x4f57b8 -> Node0x4f5868;
	Node0x4f4d58 -> Node0x4efba0;
	Node0x4f4dd8 -> Node0x4efba0;
	Node0x4f4e68 -> Node0x4efba0;
	Node0x4f4ec8 -> Node0x4efba0;
	Node0x4f4d58 -> Node0x4f5a68;
	Node0x4f4dd8 -> Node0x4f69d8;
	Node0x4f4e68 -> Node0x4f7048;
	Node0x4f4ec8 -> Node0x4f70a8;
	Node0x4f70a8 -> Node0x4f7120;
	Node0x4f5a68 -> Node0x4f7120;
	Node0x4f69d8 -> Node0x4f7190;
	Node0x4f7190 -> Node0x4f7200;
	Node0x4f7120 -> Node0x4f7200;
	Node0x4f7048 -> Node0x4f7270;
	Node0x4f69d8 -> Node0x4f7270;
	Node0x4f7048 -> Node0x4f72e0;
	Node0x4f69d8 -> Node0x4f7350;
	Node0x4f72e0 -> Node0x4f7350;
	Node0x4f69d8 -> Node0x4f73c0;
	Node0x4f72e0 -> Node0x4f73c0;
	Node0x4f73c0 -> Node0x4f7430;
	Node0x4f7048 -> Node0x4f74a0;
	Node0x4f69d8 -> Node0x4f74a0;
	Node0x4f74a0 -> Node0x4f7510;
	Node0x4f7048 -> Node0x4f7580;
	Node0x4f69d8 -> Node0x4f7580;
	Node0x4f7350 -> Node0x4f75f0;
	Node0x4f75f0 -> Node0x4f7660;
	Node0x4f70a8 -> Node0x4f76d0;
	Node0x4f5a68 -> Node0x4f76d0;
	Node0x4f76d0 -> Node0x4f7740;
	Node0x4f5a68 -> Node0x4f77b0;
	Node0x4f70a8 -> Node0x4f7820;
	Node0x4f77b0 -> Node0x4f7820;
	Node0x4f70a8 -> Node0x4f7890;
	Node0x4f5a68 -> Node0x4f7890;
	Node0x4f7890 -> Node0x4f7900;
	Node0x4f7900 -> Node0x4f7970;
	Node0x4f7820 -> Node0x4f79e0;
	Node0x4f79e0 -> Node0x4f7a50;
	Node0x4f73c0 -> Node0x4f7ac0;
	Node0x4f7048 -> Node0x4f7ac0;
	Node0x4f7ac0 -> Node0x4f7b30;
	Node0x4f7270 -> Node0x4f7b30;
	Node0x4f7b30 -> Node0x4f7ba0;
	Node0x4f70a8 -> Node0x4f7c10;
	Node0x4f7048 -> Node0x4f7c80;
	Node0x4f7c80 -> Node0x4f7cf0;
	Node0x4f7270 -> Node0x4f7cf0;
	Node0x4f7cf0 -> Node0x4f7d60;
	Node0x4f7350 -> Node0x4f7d60;
	Node0x4f7d60 -> Node0x4f7dd0;
	Node0x4f7430 -> Node0x4f7dd0;
	Node0x4f7dd0 -> Node0x4f7e40;
	Node0x4f7580 -> Node0x4f7e40;
	Node0x4f7e40 -> Node0x4f7eb0;
	Node0x4f70a8 -> Node0x4f7eb0;
	Node0x4f7eb0 -> Node0x4f7f20;
	Node0x4f7510 -> Node0x4f7f20;
	Node0x4f7f20 -> Node0x4f7f90;
	Node0x4f76d0 -> Node0x4f7f90;
	Node0x4f7f90 -> Node0x4f8000;
	Node0x4f7820 -> Node0x4f8000;
	Node0x4f8000 -> Node0x4f8070;
	Node0x4f7c10 -> Node0x4f8070;
	Node0x4f8070 -> Node0x4f80e0;
	Node0x4f7660 -> Node0x4f80e0;
	Node0x4f80e0 -> Node0x4f8150;
	Node0x4f7740 -> Node0x4f8150;
	Node0x4f8150 -> Node0x4f81c0;
	Node0x4f7970 -> Node0x4f81c0;
	Node0x4f81c0 -> Node0x4f8230;
	Node0x4f7a50 -> Node0x4f8230;
	Node0x4f8230 -> Node0x4f82a0;
	Node0x4f7ba0 -> Node0x4f82a0;
	Node0x4f7200 -> Node0x4f8310;
	Node0x4f82a0 -> Node0x4f8310;
	Node0x4f8310 -> Node0x4948b8;
	Node0x4948b8 -> Node0x4f83a0;
	Node0x4f57b8 -> Node0x4f8648;
	Node0x4f5648 -> Node0x4f87a8;
	Node0x4f5488 -> Node0x4f88b8;
	Node0x4f4f78 -> Node0x4f89c8;
}
