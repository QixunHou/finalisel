digraph "DFG for'crackme' function" {
	Node0x2301d60[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x2301dd0[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x2301e40[shape=record, label="  %7 = xor i32 %3, %0"];
	Node0x2301eb0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x2301f20[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0x2301f90[shape=record, label="  %10 = sub i32 %0, %6"];
	Node0x2302000[shape=record, label="  %11 = add i32 %10, %8"];
	Node0x2302070[shape=record, label="  %12 = or i32 %2, %1"];
	Node0x23020e0[shape=record, label="  %13 = xor i32 %2, %1"];
	Node0x2302150[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x23021f0[shape=record, label="  %15 = shl i32 %14, 2"];
	Node0x2302290[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x2302300[shape=record, label="  %17 = or i32 %5, %1"];
	Node0x2302370[shape=record, label="  %18 = xor i32 %12, -1"];
	Node0x2302410[shape=record, label="  %19 = shl i32 %17, 1"];
	Node0x23024b0[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x2302550[shape=record, label="  %21 = mul i32 %14, -3"];
	Node0x23025c0[shape=record, label="  %22 = or i32 %3, %0"];
	Node0x2302630[shape=record, label="  %23 = or i32 %9, %3"];
	Node0x23026a0[shape=record, label="  %24 = xor i32 %3, -1"];
	Node0x2302710[shape=record, label="  %25 = or i32 %24, %0"];
	Node0x2302780[shape=record, label="  %26 = shl i32 %22, 1"];
	Node0x23027f0[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x2302860[shape=record, label="  %28 = shl i32 %23, 2"];
	Node0x23028d0[shape=record, label="  %29 = xor i32 %28, -4"];
	Node0x2302940[shape=record, label="  %30 = and i32 %3, %0"];
	Node0x23029b0[shape=record, label="  %31 = add i32 %30, %18"];
	Node0x2302a50[shape=record, label="  %32 = mul i32 %31, 5"];
	Node0x2302cd0[shape=record, label="  %33 = add i32 %2, %1"];
	Node0x2302d40[shape=record, label="  %34 = add i32 %33, %13"];
	Node0x2302db0[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x2302e50[shape=record, label="  %36 = sub i32 4, %0"];
	Node0x2302ec0[shape=record, label="  %37 = add i32 %36, %5"];
	Node0x2302f30[shape=record, label="  %38 = add i32 %37, %12"];
	Node0x2302fa0[shape=record, label="  %39 = add i32 %38, %17"];
	Node0x2303010[shape=record, label="  %40 = sub i32 %39, %6"];
	Node0x2303080[shape=record, label="  %41 = add i32 %40, %21"];
	Node0x23030f0[shape=record, label="  %42 = sub i32 %41, %22"];
	Node0x2303160[shape=record, label="  %43 = add i32 %42, %7"];
	Node0x23031d0[shape=record, label="  %44 = add i32 %43, %23"];
	Node0x2303240[shape=record, label="  %45 = sub i32 %44, %25"];
	Node0x23032b0[shape=record, label="  %46 = sub i32 %45, %16"];
	Node0x2303320[shape=record, label="  %47 = add i32 %46, %20"];
	Node0x2303390[shape=record, label="  %48 = add i32 %47, %27"];
	Node0x2303400[shape=record, label="  %49 = add i32 %48, %29"];
	Node0x2303470[shape=record, label="  %50 = add i32 %49, %32"];
	Node0x23034e0[shape=record, label="  %51 = add i32 %50, %35"];
	Node0x2303550[shape=record, label="  %52 = icmp eq i32 %11, %51"];
	Node0x22a2268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23039f0[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0x2303a40[shape=record, label="  ret void"];
	Node0x2301d60 -> Node0x2301dd0;
	Node0x2301dd0 -> Node0x2301e40;
	Node0x2301e40 -> Node0x2301eb0;
	Node0x2301eb0 -> Node0x2301f20;
	Node0x2301f20 -> Node0x2301f90;
	Node0x2301f90 -> Node0x2302000;
	Node0x2302000 -> Node0x2302070;
	Node0x2302070 -> Node0x23020e0;
	Node0x23020e0 -> Node0x2302150;
	Node0x2302150 -> Node0x23021f0;
	Node0x23021f0 -> Node0x2302290;
	Node0x2302290 -> Node0x2302300;
	Node0x2302300 -> Node0x2302370;
	Node0x2302370 -> Node0x2302410;
	Node0x2302410 -> Node0x23024b0;
	Node0x23024b0 -> Node0x2302550;
	Node0x2302550 -> Node0x23025c0;
	Node0x23025c0 -> Node0x2302630;
	Node0x2302630 -> Node0x23026a0;
	Node0x23026a0 -> Node0x2302710;
	Node0x2302710 -> Node0x2302780;
	Node0x2302780 -> Node0x23027f0;
	Node0x23027f0 -> Node0x2302860;
	Node0x2302860 -> Node0x23028d0;
	Node0x23028d0 -> Node0x2302940;
	Node0x2302940 -> Node0x23029b0;
	Node0x23029b0 -> Node0x2302a50;
	Node0x2302a50 -> Node0x2302cd0;
	Node0x2302cd0 -> Node0x2302d40;
	Node0x2302d40 -> Node0x2302db0;
	Node0x2302db0 -> Node0x2302e50;
	Node0x2302e50 -> Node0x2302ec0;
	Node0x2302ec0 -> Node0x2302f30;
	Node0x2302f30 -> Node0x2302fa0;
	Node0x2302fa0 -> Node0x2303010;
	Node0x2303010 -> Node0x2303080;
	Node0x2303080 -> Node0x23030f0;
	Node0x23030f0 -> Node0x2303160;
	Node0x2303160 -> Node0x23031d0;
	Node0x23031d0 -> Node0x2303240;
	Node0x2303240 -> Node0x23032b0;
	Node0x23032b0 -> Node0x2303320;
	Node0x2303320 -> Node0x2303390;
	Node0x2303390 -> Node0x2303400;
	Node0x2303400 -> Node0x2303470;
	Node0x2303470 -> Node0x23034e0;
	Node0x23034e0 -> Node0x2303550;
	Node0x2303550 -> Node0x22a2268;
	Node0x22a2268 -> Node0x23039f0;
	Node0x23039f0 -> Node0x2303a40;
edge [color=red]
	Node0x2301d60 -> Node0x2301dd0;
	Node0x2301e40 -> Node0x2301eb0;
	Node0x2301dd0 -> Node0x2301f90;
	Node0x2301f90 -> Node0x2302000;
	Node0x2301eb0 -> Node0x2302000;
	Node0x2302150 -> Node0x23021f0;
	Node0x23021f0 -> Node0x2302290;
	Node0x2301d60 -> Node0x2302300;
	Node0x2302070 -> Node0x2302370;
	Node0x2302300 -> Node0x2302410;
	Node0x2302410 -> Node0x23024b0;
	Node0x2302150 -> Node0x2302550;
	Node0x2301f20 -> Node0x2302630;
	Node0x23026a0 -> Node0x2302710;
	Node0x23025c0 -> Node0x2302780;
	Node0x2302780 -> Node0x23027f0;
	Node0x2302630 -> Node0x2302860;
	Node0x2302860 -> Node0x23028d0;
	Node0x2302940 -> Node0x23029b0;
	Node0x2302370 -> Node0x23029b0;
	Node0x23029b0 -> Node0x2302a50;
	Node0x2302cd0 -> Node0x2302d40;
	Node0x23020e0 -> Node0x2302d40;
	Node0x2302d40 -> Node0x2302db0;
	Node0x2302e50 -> Node0x2302ec0;
	Node0x2301d60 -> Node0x2302ec0;
	Node0x2302ec0 -> Node0x2302f30;
	Node0x2302070 -> Node0x2302f30;
	Node0x2302f30 -> Node0x2302fa0;
	Node0x2302300 -> Node0x2302fa0;
	Node0x2302fa0 -> Node0x2303010;
	Node0x2301dd0 -> Node0x2303010;
	Node0x2303010 -> Node0x2303080;
	Node0x2302550 -> Node0x2303080;
	Node0x2303080 -> Node0x23030f0;
	Node0x23025c0 -> Node0x23030f0;
	Node0x23030f0 -> Node0x2303160;
	Node0x2301e40 -> Node0x2303160;
	Node0x2303160 -> Node0x23031d0;
	Node0x2302630 -> Node0x23031d0;
	Node0x23031d0 -> Node0x2303240;
	Node0x2302710 -> Node0x2303240;
	Node0x2303240 -> Node0x23032b0;
	Node0x2302290 -> Node0x23032b0;
	Node0x23032b0 -> Node0x2303320;
	Node0x23024b0 -> Node0x2303320;
	Node0x2303320 -> Node0x2303390;
	Node0x23027f0 -> Node0x2303390;
	Node0x2303390 -> Node0x2303400;
	Node0x23028d0 -> Node0x2303400;
	Node0x2303400 -> Node0x2303470;
	Node0x2302a50 -> Node0x2303470;
	Node0x2303470 -> Node0x23034e0;
	Node0x2302db0 -> Node0x23034e0;
	Node0x2302000 -> Node0x2303550;
	Node0x23034e0 -> Node0x2303550;
	Node0x2303550 -> Node0x22a2268;
	Node0x22a2268 -> Node0x23039f0;
}
