digraph "DFG for'main' function" {
	Node0x1e2f248[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e2f2c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e2f358[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1e2f3b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1e2f838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e2f918[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1e2fa18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e2fad8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1e2fb88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e2fde8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1e2fea8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e30e18[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e31488[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1e31580[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1e31788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e318e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e319f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e31ab8[shape=record, label="  ret i32 0"];
	Node0x1e2f248 -> Node0x1e2f2c8;
	Node0x1e2f2c8 -> Node0x1e2f358;
	Node0x1e2f358 -> Node0x1e2f3b8;
	Node0x1e2f3b8 -> Node0x1e2f838;
	Node0x1e2f838 -> Node0x1e2f918;
	Node0x1e2f918 -> Node0x1e2fa18;
	Node0x1e2fa18 -> Node0x1e2fad8;
	Node0x1e2fad8 -> Node0x1e2fb88;
	Node0x1e2fb88 -> Node0x1e2fde8;
	Node0x1e2fde8 -> Node0x1e2fea8;
	Node0x1e2fea8 -> Node0x1e30e18;
	Node0x1e30e18 -> Node0x1e31488;
	Node0x1e31488 -> Node0x1e31580;
	Node0x1e31580 -> Node0x1e31788;
	Node0x1e31788 -> Node0x1e318e8;
	Node0x1e318e8 -> Node0x1e319f8;
	Node0x1e319f8 -> Node0x1e31ab8;
edge [color=red]
	Node0x1e2f248 -> Node0x1e2f3b8;
	Node0x1e2f3b8 -> Node0x1e2f838;
	Node0x1e2f2c8 -> Node0x1e2f918;
	Node0x1e2f918 -> Node0x1e2fa18;
	Node0x1e2f358 -> Node0x1e2fad8;
	Node0x1e2fad8 -> Node0x1e2fb88;
	Node0x1e2f248 -> Node0x1e2fde8;
	Node0x1e2f2c8 -> Node0x1e2fde8;
	Node0x1e2f358 -> Node0x1e2fde8;
	Node0x1e2f248 -> Node0x1e2fea8;
	Node0x1e2f2c8 -> Node0x1e30e18;
	Node0x1e2f358 -> Node0x1e31488;
	Node0x1e2fea8 -> Node0x1e31580;
	Node0x1e30e18 -> Node0x1e31580;
	Node0x1e31488 -> Node0x1e31580;
	Node0x1e2fad8 -> Node0x1e31788;
	Node0x1e2f918 -> Node0x1e318e8;
	Node0x1e2f3b8 -> Node0x1e319f8;
}
