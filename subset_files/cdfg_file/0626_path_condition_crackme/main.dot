digraph "DFG for'main' function" {
	Node0xb61b48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb61bc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb61c58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xb620b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xb62198[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xb622b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb624f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xb625a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb63518[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb63ba0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xb63c10[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0xb63c80[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0xb63cf0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0xb63d60[shape=record, label="  %12 = or i32 %6, %8"];
	Node0xb63dd0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0xb63e40[shape=record, label="  %14 = and i32 %6, %8"];
	Node0xb63eb0[shape=record, label="  %15 = or i32 %7, %6"];
	Node0xb63f20[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0xb63f90[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0xb64000[shape=record, label="  %18 = shl i32 %6, 1"];
	Node0xb64070[shape=record, label="  %19 = add i32 %14, %17"];
	Node0xb640e0[shape=record, label="  %20 = add i32 %19, %16"];
	Node0xb64150[shape=record, label="  %21 = mul i32 %20, 3"];
	Node0xb641c0[shape=record, label="  %22 = add i32 %18, 2"];
	Node0xb64230[shape=record, label="  %23 = sub i32 %22, %9"];
	Node0xb642a0[shape=record, label="  %24 = add i32 %23, %14"];
	Node0xb64310[shape=record, label="  %25 = sub i32 %24, %13"];
	Node0xb64380[shape=record, label="  %26 = add i32 %25, %11"];
	Node0xb643f0[shape=record, label="  %27 = add i32 %26, %21"];
	Node0xb64460[shape=record, label="  %28 = icmp eq i32 %27, %8"];
	Node0xb029d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb644f0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0xb64748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb648a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xb64968[shape=record, label="  ret i32 0"];
	Node0xb61b48 -> Node0xb61bc8;
	Node0xb61bc8 -> Node0xb61c58;
	Node0xb61c58 -> Node0xb620b8;
	Node0xb620b8 -> Node0xb62198;
	Node0xb62198 -> Node0xb622b8;
	Node0xb622b8 -> Node0xb624f0;
	Node0xb624f0 -> Node0xb625a8;
	Node0xb625a8 -> Node0xb63518;
	Node0xb63518 -> Node0xb63ba0;
	Node0xb63ba0 -> Node0xb63c10;
	Node0xb63c10 -> Node0xb63c80;
	Node0xb63c80 -> Node0xb63cf0;
	Node0xb63cf0 -> Node0xb63d60;
	Node0xb63d60 -> Node0xb63dd0;
	Node0xb63dd0 -> Node0xb63e40;
	Node0xb63e40 -> Node0xb63eb0;
	Node0xb63eb0 -> Node0xb63f20;
	Node0xb63f20 -> Node0xb63f90;
	Node0xb63f90 -> Node0xb64000;
	Node0xb64000 -> Node0xb64070;
	Node0xb64070 -> Node0xb640e0;
	Node0xb640e0 -> Node0xb64150;
	Node0xb64150 -> Node0xb641c0;
	Node0xb641c0 -> Node0xb64230;
	Node0xb64230 -> Node0xb642a0;
	Node0xb642a0 -> Node0xb64310;
	Node0xb64310 -> Node0xb64380;
	Node0xb64380 -> Node0xb643f0;
	Node0xb643f0 -> Node0xb64460;
	Node0xb64460 -> Node0xb029d8;
	Node0xb029d8 -> Node0xb644f0;
	Node0xb644f0 -> Node0xb64748;
	Node0xb64748 -> Node0xb648a8;
	Node0xb648a8 -> Node0xb64968;
edge [color=red]
	Node0xb61b48 -> Node0xb61c58;
	Node0xb61c58 -> Node0xb620b8;
	Node0xb61bc8 -> Node0xb62198;
	Node0xb62198 -> Node0xb622b8;
	Node0xb61b48 -> Node0xb624f0;
	Node0xb61bc8 -> Node0xb624f0;
	Node0xb61b48 -> Node0xb625a8;
	Node0xb61bc8 -> Node0xb63518;
	Node0xb63518 -> Node0xb63ba0;
	Node0xb63518 -> Node0xb63c10;
	Node0xb625a8 -> Node0xb63c10;
	Node0xb63c10 -> Node0xb63c80;
	Node0xb63c80 -> Node0xb63cf0;
	Node0xb625a8 -> Node0xb63d60;
	Node0xb63ba0 -> Node0xb63d60;
	Node0xb63d60 -> Node0xb63dd0;
	Node0xb625a8 -> Node0xb63e40;
	Node0xb63ba0 -> Node0xb63e40;
	Node0xb63518 -> Node0xb63eb0;
	Node0xb625a8 -> Node0xb63eb0;
	Node0xb63eb0 -> Node0xb63f20;
	Node0xb63d60 -> Node0xb63f90;
	Node0xb625a8 -> Node0xb64000;
	Node0xb63e40 -> Node0xb64070;
	Node0xb63f90 -> Node0xb64070;
	Node0xb64070 -> Node0xb640e0;
	Node0xb63f20 -> Node0xb640e0;
	Node0xb640e0 -> Node0xb64150;
	Node0xb64000 -> Node0xb641c0;
	Node0xb641c0 -> Node0xb64230;
	Node0xb63c10 -> Node0xb64230;
	Node0xb64230 -> Node0xb642a0;
	Node0xb63e40 -> Node0xb642a0;
	Node0xb642a0 -> Node0xb64310;
	Node0xb63dd0 -> Node0xb64310;
	Node0xb64310 -> Node0xb64380;
	Node0xb63cf0 -> Node0xb64380;
	Node0xb64380 -> Node0xb643f0;
	Node0xb64150 -> Node0xb643f0;
	Node0xb643f0 -> Node0xb64460;
	Node0xb63ba0 -> Node0xb64460;
	Node0xb64460 -> Node0xb029d8;
	Node0xb029d8 -> Node0xb644f0;
	Node0xb62198 -> Node0xb64748;
	Node0xb61c58 -> Node0xb648a8;
}
