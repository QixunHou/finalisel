; ModuleID = '../.././c_source_file/0383_path_condition_crackme.c'
source_filename = "../.././c_source_file/0383_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = and i32 %7, %0
  %9 = or i32 %8, %1
  %10 = xor i32 %1, -1
  %11 = and i32 %10, %2
  %12 = and i32 %11, %0
  %13 = xor i32 %2, %1
  %14 = or i32 %13, %0
  %15 = xor i32 %14, -1
  %16 = or i32 %12, %15
  %17 = add i32 %16, %9
  %18 = xor i32 %3, -1
  %19 = and i32 %18, %5
  %20 = and i32 %19, %4
  %21 = or i32 %18, %5
  %22 = xor i32 %4, -1
  %23 = xor i32 %21, %22
  %24 = xor i32 %23, %20
  %25 = sub i32 %17, %24
  %26 = xor i32 %5, -1
  %27 = and i32 %26, %3
  %28 = or i32 %27, %4
  %29 = mul i32 %28, 5
  %30 = add i32 %25, %29
  %31 = or i32 %2, %0
  %32 = xor i32 %31, -1
  %33 = or i32 %32, %10
  %34 = or i32 %10, %0
  %35 = xor i32 %13, -1
  %36 = and i32 %34, %35
  %37 = xor i32 %8, -1
  %38 = and i32 %37, %10
  %39 = or i32 %2, %1
  %40 = and i32 %39, %0
  %41 = and i32 %2, %0
  %42 = xor i32 %39, -1
  %43 = or i32 %41, %42
  %44 = shl i32 %43, 1
  %45 = xor i32 %0, -1
  %46 = and i32 %11, %45
  %47 = or i32 %13, %45
  %48 = xor i32 %47, -1
  %49 = or i32 %46, %48
  %50 = and i32 %10, %0
  %51 = or i32 %13, %50
  %52 = or i32 %1, %0
  %53 = xor i32 %2, %0
  %54 = xor i32 %53, -1
  %55 = and i32 %52, %54
  %56 = xor i32 %41, %1
  %57 = shl i32 %56, 1
  %58 = and i32 %53, %52
  %59 = xor i32 %34, -1
  %60 = xor i32 %1, %0
  %61 = xor i32 %60, -1
  %62 = and i32 %37, %61
  %63 = shl i32 %62, 1
  %64 = and i32 %1, %0
  %65 = xor i32 %64, -1
  %66 = and i32 %13, %65
  %67 = and i32 %7, %1
  %68 = xor i32 %67, -1
  %69 = or i32 %68, %0
  %70 = or i32 %7, %1
  %71 = xor i32 %70, -1
  %72 = xor i32 %34, %2
  %73 = or i32 %54, %1
  %74 = xor i32 %13, %0
  %75 = xor i32 %74, -1
  %76 = xor i32 %12, %75
  %77 = and i32 %2, %1
  %78 = and i32 %77, %45
  %79 = and i32 %13, %0
  %80 = or i32 %78, %79
  %81 = or i32 %7, %0
  %82 = xor i32 %81, -1
  %83 = or i32 %82, %1
  %84 = shl i32 %83, 1
  %85 = xor i32 %50, -1
  %86 = and i32 %13, %85
  %87 = xor i32 %41, %68
  %88 = and i32 %35, %0
  %89 = xor i32 %77, -1
  %90 = and i32 %89, %0
  %91 = and i32 %52, %7
  %92 = or i32 %13, %64
  %93 = and i32 %53, %1
  %94 = xor i32 %8, %1
  %95 = or i32 %10, %2
  %96 = and i32 %95, %45
  %97 = or i32 %12, %96
  %98 = or i32 %35, %0
  %99 = and i32 %68, %0
  %100 = xor i32 %8, %89
  %101 = and i32 %77, %0
  %102 = and i32 %39, %45
  %103 = xor i32 %101, -1
  %104 = xor i32 %102, %103
  %105 = xor i32 %71, %0
  %106 = add i32 %31, 1
  %107 = and i32 %7, %65
  %108 = or i32 %7, %59
  %109 = xor i32 %52, -1
  %110 = or i32 %41, %109
  %111 = and i32 %54, %65
  %112 = or i32 %64, %82
  %113 = and i32 %95, %0
  %114 = or i32 %46, %113
  %115 = and i32 %37, %1
  %116 = or i32 %54, %109
  %117 = or i32 %53, %10
  %118 = shl i32 %117, 1
  %119 = and i32 %70, %0
  %120 = or i32 %50, %54
  %121 = or i32 %53, %61
  %122 = or i32 %41, %67
  %123 = and i32 %53, %85
  %124 = shl i32 %123, 1
  %125 = or i32 %54, %10
  %126 = or i32 %41, %61
  %127 = and i32 %65, %2
  %128 = xor i32 %81, %64
  %129 = or i32 %67, %0
  %130 = xor i32 %42, %0
  %131 = and i32 %60, %2
  %132 = or i32 %64, %71
  %133 = add i32 %13, 1
  %134 = and i32 %81, %1
  %135 = xor i32 %32, %1
  %136 = and i32 %89, %45
  %137 = and i32 %34, %7
  %138 = or i32 %64, %42
  %139 = or i32 %82, %10
  %140 = and i32 %60, %54
  %141 = xor i32 %41, -1
  %142 = add i32 %41, 1
  %143 = and i32 %35, %85
  %144 = xor i32 %82, %1
  %145 = and i32 %54, %61
  %146 = xor i32 %70, %64
  %147 = and i32 %53, %60
  %148 = and i32 %61, %2
  %149 = xor i32 %52, %2
  %150 = shl i32 %149, 1
  %151 = shl i32 %0, 1
  %152 = or i32 %60, %7
  %153 = or i32 %35, %109
  %154 = shl i32 %153, 1
  %155 = xor i32 %95, %0
  %156 = or i32 %12, %155
  %157 = and i32 %13, %45
  %158 = xor i32 %50, %68
  %159 = shl i32 %158, 1
  %160 = or i32 %50, %7
  %161 = or i32 %35, %45
  %162 = shl i32 %54, 1
  %163 = or i32 %53, %64
  %164 = or i32 %54, %59
  %165 = xor i32 %39, %0
  %166 = xor i32 %165, 2147483647
  %167 = xor i32 %166, %101
  %168 = shl i32 %167, 1
  %169 = xor i32 %101, %74
  %170 = or i32 %60, %54
  %171 = and i32 %53, %10
  %172 = or i32 %82, %61
  %173 = and i32 %53, %34
  %174 = or i32 %8, %61
  %175 = and i32 %54, %85
  %176 = or i32 %41, %59
  %177 = and i32 %53, %65
  %178 = or i32 %101, %102
  %179 = shl i32 %178, 1
  %180 = and i32 %81, %10
  %181 = xor i32 %96, 2147483647
  %182 = xor i32 %181, %12
  %183 = shl i32 %182, 1
  %184 = and i32 %141, %10
  %185 = xor i32 %141, %1
  %186 = or i32 %39, %0
  %187 = xor i32 %39, %64
  %188 = or i32 %89, %0
  %189 = or i32 %60, %2
  %190 = xor i32 %64, %2
  %191 = shl i32 %190, 1
  %192 = and i32 %68, %45
  %193 = xor i32 %37, %1
  %194 = or i32 %42, %45
  %195 = or i32 %50, %35
  %196 = shl i32 %195, 1
  %197 = and i32 %53, %61
  %198 = xor i32 %85, %2
  %199 = or i32 %8, %77
  %200 = and i32 %60, %37
  %201 = shl i32 %200, 1
  %202 = or i32 %60, %32
  %203 = or i32 %77, %50
  %204 = and i32 %31, %1
  %205 = add i32 %67, 1
  %206 = or i32 %59, %2
  %207 = xor i32 %109, %2
  %208 = or i32 %53, %109
  %209 = or i32 %53, %50
  %210 = or i32 %89, %45
  %211 = or i32 %32, %1
  %212 = or i32 %64, %32
  %213 = shl i32 %212, 1
  %214 = or i32 %64, %54
  %215 = or i32 %8, %71
  %216 = shl i32 %215, 1
  %217 = or i32 %39, %45
  %218 = shl i32 %217, 1
  %219 = xor i32 %41, %39
  %220 = or i32 %64, %2
  %221 = and i32 %34, %2
  %222 = and i32 %70, %45
  %223 = or i32 %77, %45
  %224 = or i32 %70, %45
  %225 = xor i32 %8, %70
  %226 = xor i32 %81, %1
  %227 = and i32 %141, %61
  %228 = or i32 %71, %0
  %229 = shl i32 %228, 1
  %230 = and i32 %13, %52
  %231 = or i32 %50, %2
  %232 = shl i32 %231, 1
  %233 = and i32 %31, %10
  %234 = or i32 %68, %45
  %235 = or i32 %12, %74
  %236 = or i32 %54, %61
  %237 = or i32 %13, %109
  %238 = xor i32 %157, %103
  %239 = xor i32 %77, %0
  %240 = or i32 %60, %82
  %241 = and i32 %13, %34
  %242 = or i32 %41, %1
  %243 = and i32 %7, %61
  %244 = and i32 %35, %45
  %245 = shl i32 %244, 1
  %246 = or i32 %32, %61
  %247 = or i32 %35, %59
  %248 = or i32 %53, %1
  %249 = xor i32 %40, -1
  %250 = xor i32 %78, %249
  %251 = and i32 %31, %60
  %252 = and i32 %52, %2
  %253 = and i32 %81, %60
  %254 = and i32 %60, %141
  %255 = xor i32 %59, %2
  %256 = or i32 %7, %61
  %257 = shl i32 %256, 2
  %258 = or i32 %78, %40
  %259 = and i32 %85, %2
  %260 = shl i32 %259, 1
  %261 = or i32 %109, %2
  %262 = or i32 %8, %10
  %263 = and i32 %34, %54
  %264 = or i32 %67, %45
  %265 = or i32 %53, %59
  %266 = xor i32 %113, -1
  %267 = xor i32 %46, %266
  %268 = or i32 %41, %60
  %269 = and i32 %52, %35
  %270 = xor i32 %68, %0
  %271 = and i32 %60, %7
  %272 = or i32 %42, %0
  %273 = xor i32 %50, %2
  %274 = or i32 %101, %165
  %275 = xor i32 %31, %1
  %276 = xor i32 %65, %2
  %277 = and i32 %35, %65
  %278 = add i32 %77, 1
  %279 = and i32 %31, %61
  %280 = xor i32 %89, %0
  %281 = or i32 %13, %59
  %282 = xor i32 %155, -1
  %283 = xor i32 %12, %282
  %284 = or i32 %67, %50
  %285 = xor i32 %41, %34
  %286 = and i32 %54, %10
  %287 = or i32 %101, %75
  %288 = shl i32 %287, 1
  %289 = and i32 %54, %1
  %290 = xor i32 %41, %52
  %291 = shl i32 %290, 1
  %292 = or i32 %71, %45
  %293 = and i32 %81, %61
  %294 = or i32 %8, %60
  %295 = xor i32 %46, %47
  %296 = or i32 %41, %10
  %297 = xor i32 %12, %14
  %298 = xor i32 %70, %0
  %299 = and i32 %42, %45
  %300 = and i32 %67, %45
  %301 = and i32 %42, %0
  %302 = and i32 %67, %0
  %303 = mul i32 %302, 24
  %304 = and i32 %71, %45
  %305 = and i32 %71, %0
  %306 = xor i32 %5, %3
  %307 = or i32 %306, %4
  %308 = xor i32 %307, 2147483647
  %309 = or i32 %308, %20
  %310 = or i32 %26, %4
  %311 = xor i32 %310, -1
  %312 = xor i32 %4, %3
  %313 = or i32 %312, %311
  %314 = and i32 %5, %4
  %315 = or i32 %314, %312
  %316 = or i32 %18, %4
  %317 = xor i32 %316, -1
  %318 = or i32 %306, %317
  %319 = or i32 %311, %18
  %320 = xor i32 %306, -1
  %321 = or i32 %320, %4
  %322 = shl i32 %321, 1
  %323 = xor i32 %27, -1
  %324 = and i32 %323, %22
  %325 = and i32 %18, %4
  %326 = xor i32 %325, %323
  %327 = and i32 %320, %4
  %328 = shl i32 %327, 1
  %329 = or i32 %5, %3
  %330 = xor i32 %314, %329
  %331 = or i32 %5, %4
  %332 = xor i32 %331, -1
  %333 = or i32 %332, %3
  %334 = or i32 %314, %18
  %335 = or i32 %4, %3
  %336 = and i32 %21, %22
  %337 = or i32 %20, %336
  %338 = xor i32 %325, -1
  %339 = xor i32 %338, %5
  %340 = and i32 %19, %22
  %341 = and i32 %21, %4
  %342 = or i32 %340, %341
  %343 = or i32 %26, %3
  %344 = and i32 %343, %22
  %345 = xor i32 %335, -1
  %346 = xor i32 %5, %4
  %347 = or i32 %346, %345
  %348 = and i32 %5, %3
  %349 = and i32 %348, %4
  %350 = and i32 %306, %22
  %351 = or i32 %349, %350
  %352 = and i32 %320, %22
  %353 = shl i32 %352, 1
  %354 = and i32 %26, %4
  %355 = xor i32 %348, -1
  %356 = xor i32 %354, %355
  %357 = and i32 %316, %320
  %358 = xor i32 %312, -1
  %359 = or i32 %346, %358
  %360 = or i32 %311, %358
  %361 = shl i32 %360, 1
  %362 = or i32 %354, %18
  %363 = and i32 %335, %320
  %364 = xor i32 %332, %3
  %365 = xor i32 %346, -1
  %366 = and i32 %365, %18
  %367 = xor i32 %314, -1
  %368 = xor i32 %367, %3
  %369 = xor i32 %329, %4
  %370 = or i32 %349, %369
  %371 = xor i32 %310, %3
  %372 = xor i32 %354, -1
  %373 = and i32 %372, %3
  %374 = and i32 %331, %358
  %375 = xor i32 %306, %4
  %376 = or i32 %20, %375
  %377 = shl i32 %376, 2
  %378 = and i32 %372, %18
  %379 = xor i32 %372, %3
  %380 = or i32 %345, %5
  %381 = or i32 %312, %26
  %382 = and i32 %306, %335
  %383 = xor i32 %375, -1
  %384 = or i32 %349, %383
  %385 = shl i32 %345, 1
  %386 = and i32 %312, %367
  %387 = xor i32 %320, %4
  %388 = and i32 %348, %22
  %389 = and i32 %329, %4
  %390 = or i32 %388, %389
  %391 = and i32 %312, %372
  %392 = and i32 %346, %335
  %393 = and i32 %355, %22
  %394 = shl i32 %393, 1
  %395 = and i32 %365, %3
  %396 = xor i32 %343, -1
  %397 = add i32 %343, 1
  %398 = and i32 %306, %338
  %399 = shl i32 %310, 1
  %400 = add i32 %316, 1
  %401 = and i32 %4, %3
  %402 = xor i32 %401, -1
  %403 = and i32 %306, %402
  %404 = xor i32 %349, -1
  %405 = xor i32 %369, %404
  %406 = or i32 %365, %18
  %407 = and i32 %316, %26
  %408 = or i32 %329, %4
  %409 = or i32 %306, %22
  %410 = xor i32 %340, %409
  %411 = or i32 %314, %317
  %412 = or i32 %346, %317
  %413 = and i32 %338, %5
  %414 = or i32 %312, %365
  %415 = and i32 %372, %358
  %416 = xor i32 %314, %323
  %417 = and i32 %331, %3
  %418 = and i32 %329, %22
  %419 = xor i32 %418, %404
  %420 = and i32 %323, %4
  %421 = shl i32 %420, 1
  %422 = xor i32 %20, %383
  %423 = xor i32 %314, %3
  %424 = or i32 %401, %320
  %425 = xor i32 %329, -1
  %426 = or i32 %314, %425
  %427 = or i32 %314, %345
  %428 = or i32 %401, %5
  %429 = xor i32 %27, %4
  %430 = xor i32 %311, %3
  %431 = xor i32 %331, %3
  %432 = or i32 %325, %26
  %433 = or i32 %26, %345
  %434 = or i32 %396, %4
  %435 = or i32 %306, %345
  %436 = xor i32 %354, %3
  %437 = or i32 %354, %396
  %438 = or i32 %346, %312
  %439 = and i32 %331, %312
  %440 = shl i32 %439, 1
  %441 = or i32 %325, %365
  %442 = xor i32 %317, %5
  %443 = and i32 %312, %365
  %444 = xor i32 %20, %307
  %445 = xor i32 %343, %4
  %446 = shl i32 %445, 1
  %447 = or i32 %354, %3
  %448 = and i32 %355, %4
  %449 = or i32 %348, %325
  %450 = shl i32 %449, 1
  %451 = xor i32 %401, %5
  %452 = or i32 %401, %365
  %453 = and i32 %367, %358
  %454 = or i32 %425, %4
  %455 = shl i32 %454, 2
  %456 = or i32 %401, %311
  %457 = or i32 %26, %317
  %458 = shl i32 %457, 1
  %459 = or i32 %27, %325
  %460 = and i32 %331, %18
  %461 = or i32 %365, %317
  %462 = or i32 %306, %401
  %463 = or i32 %365, %3
  %464 = xor i32 %316, %5
  %465 = xor i32 %389, -1
  %466 = xor i32 %388, %465
  %467 = xor i32 %341, 2147483647
  %468 = xor i32 %467, %340
  %469 = shl i32 %468, 1
  %470 = xor i32 %354, %343
  %471 = or i32 %349, %418
  %472 = and i32 %312, %5
  %473 = and i32 %346, %316
  %474 = or i32 %323, %4
  %475 = or i32 %317, %5
  %476 = and i32 %26, %402
  %477 = and i32 %365, %402
  %478 = or i32 %355, %22
  %479 = xor i32 %396, %4
  %480 = or i32 %325, %5
  %481 = and i32 %310, %312
  %482 = shl i32 %481, 1
  %483 = add i32 %346, 1
  %484 = or i32 %325, %320
  %485 = or i32 %311, %3
  %486 = or i32 %401, %26
  %487 = add i32 %312, 1
  %488 = and i32 %346, %338
  %489 = or i32 %332, %18
  %490 = xor i32 %314, %316
  %491 = or i32 %354, %348
  %492 = and i32 %310, %18
  %493 = xor i32 %314, %335
  %494 = xor i32 %323, %4
  %495 = or i32 %312, %332
  %496 = xor i32 %329, %401
  %497 = shl i32 %496, 1
  %498 = or i32 %354, %312
  %499 = and i32 %358, %5
  %500 = or i32 %355, %4
  %501 = shl i32 %500, 1
  %502 = or i32 %365, %358
  %503 = or i32 %401, %332
  %504 = xor i32 %335, %5
  %505 = or i32 %320, %345
  %506 = or i32 %425, %22
  %507 = and i32 %320, %338
  %508 = or i32 %348, %22
  %509 = and i32 %346, %3
  %510 = or i32 %332, %358
  %511 = and i32 %335, %26
  %512 = or i32 %358, %5
  %513 = and i32 %306, %4
  %514 = or i32 %320, %22
  %515 = shl i32 %514, 1
  %516 = or i32 %346, %325
  %517 = and i32 %365, %338
  %518 = or i32 %314, %358
  %519 = or i32 %306, %325
  %520 = or i32 %346, %18
  %521 = shl i32 %520, 1
  %522 = shl i32 %332, 1
  %523 = or i32 %343, %22
  %524 = xor i32 %402, %5
  %525 = and i32 %335, %365
  %526 = and i32 %26, %358
  %527 = and i32 %365, %358
  %528 = and i32 %316, %5
  %529 = xor i32 %425, %4
  %530 = and i32 %367, %3
  %531 = xor i32 %345, %5
  %532 = xor i32 %331, %401
  %533 = and i32 %425, %22
  %534 = and i32 %27, %22
  %535 = and i32 %425, %4
  %536 = shl i32 %535, 1
  %537 = and i32 %27, %4
  %538 = and i32 %396, %22
  %539 = and i32 %396, %4
  %540 = add i32 %10, %45
  %541 = add i32 %540, %109
  %542 = add i32 %541, %273
  %543 = add i32 %542, %189
  %544 = add i32 %543, %39
  %545 = add i32 %544, %41
  %546 = add i32 %545, %107
  %547 = add i32 %546, %277
  %548 = add i32 %547, %268
  %549 = add i32 %548, %240
  %550 = add i32 %549, %236
  %551 = add i32 %550, %233
  %552 = add i32 %551, %184
  %553 = add i32 %552, %180
  %554 = add i32 %553, %102
  %555 = add i32 %554, %132
  %556 = add i32 %555, %110
  %557 = add i32 %556, %58
  %558 = add i32 %557, %528
  %559 = add i32 %558, %331
  %560 = add i32 %559, %530
  %561 = add i32 %560, %519
  %562 = add i32 %561, %517
  %563 = add i32 %562, %509
  %564 = add i32 %563, %494
  %565 = add i32 %564, %489
  %566 = add i32 %565, %448
  %567 = add i32 %566, %424
  %568 = add i32 %567, %415
  %569 = add i32 %568, %414
  %570 = add i32 %569, %395
  %571 = add i32 %570, %375
  %572 = add i32 %571, %471
  %573 = add i32 %572, %337
  %574 = add i32 %573, %309
  %575 = shl i32 %574, 1
  %576 = add i32 %296, %53
  %577 = sub i32 %576, %171
  %578 = sub i32 %577, %122
  %579 = add i32 %578, %76
  %580 = add i32 %579, %407
  %581 = add i32 %580, %380
  %582 = add i32 %581, %463
  %583 = sub i32 %582, %474
  %584 = sub i32 %583, %462
  %585 = mul i32 %584, 3
  %586 = add i32 %214, %7
  %587 = add i32 %586, %27
  %588 = add i32 %587, %362
  %589 = shl i32 %588, 2
  %590 = sub i32 %305, %537
  %591 = sub i32 %590, %538
  %592 = mul i32 %591, 9
  %593 = add i32 %304, %101
  %594 = sub i32 %593, %539
  %595 = mul i32 %594, 7
  %596 = add i32 %388, %533
  %597 = mul i32 %596, -23
  %598 = add i32 %534, %301
  %599 = mul i32 %598, 6
  %600 = add i32 %231, %78
  %601 = sub i32 %600, %299
  %602 = sub i32 %601, %177
  %603 = add i32 %602, %161
  %604 = sub i32 %603, %349
  %605 = add i32 %604, %324
  %606 = add i32 %605, %315
  %607 = add i32 %606, %384
  %608 = mul i32 %607, 5
  %609 = add i32 %1, -6
  %610 = sub i32 %609, %151
  %611 = sub i32 %610, %64
  %612 = sub i32 %611, %60
  %613 = sub i32 %612, %64
  %614 = add i32 %613, %52
  %615 = sub i32 %614, %31
  %616 = add i32 %615, %72
  %617 = sub i32 %616, %91
  %618 = sub i32 %617, %67
  %619 = add i32 %618, %106
  %620 = add i32 %619, %108
  %621 = add i32 %620, %81
  %622 = add i32 %621, %127
  %623 = add i32 %622, %131
  %624 = add i32 %623, %133
  %625 = sub i32 %624, %137
  %626 = add i32 %625, %142
  %627 = add i32 %626, %77
  %628 = add i32 %627, %148
  %629 = add i32 %628, %42
  %630 = add i32 %629, %152
  %631 = sub i32 %630, %160
  %632 = add i32 %631, %198
  %633 = add i32 %632, %205
  %634 = add i32 %633, %206
  %635 = add i32 %634, %207
  %636 = sub i32 %635, %220
  %637 = sub i32 %636, %221
  %638 = add i32 %637, %243
  %639 = sub i32 %638, %252
  %640 = sub i32 %639, %255
  %641 = sub i32 %640, %261
  %642 = sub i32 %641, %271
  %643 = add i32 %642, %276
  %644 = add i32 %643, %278
  %645 = add i32 %644, %36
  %646 = add i32 %645, %33
  %647 = sub i32 %646, %38
  %648 = sub i32 %647, %40
  %649 = add i32 %648, %51
  %650 = add i32 %649, %55
  %651 = add i32 %650, %66
  %652 = add i32 %651, %69
  %653 = sub i32 %652, %73
  %654 = sub i32 %653, %86
  %655 = add i32 %654, %87
  %656 = add i32 %655, %88
  %657 = sub i32 %656, %90
  %658 = add i32 %657, %92
  %659 = sub i32 %658, %93
  %660 = add i32 %659, %94
  %661 = sub i32 %660, %98
  %662 = sub i32 %661, %99
  %663 = add i32 %662, %100
  %664 = sub i32 %663, %105
  %665 = add i32 %664, %111
  %666 = sub i32 %665, %112
  %667 = add i32 %666, %115
  %668 = sub i32 %667, %116
  %669 = sub i32 %668, %119
  %670 = sub i32 %669, %120
  %671 = sub i32 %670, %121
  %672 = sub i32 %671, %125
  %673 = sub i32 %672, %126
  %674 = sub i32 %673, %128
  %675 = sub i32 %674, %129
  %676 = sub i32 %675, %130
  %677 = add i32 %676, %134
  %678 = add i32 %677, %135
  %679 = sub i32 %678, %136
  %680 = add i32 %679, %138
  %681 = sub i32 %680, %139
  %682 = add i32 %681, %140
  %683 = add i32 %682, %143
  %684 = add i32 %683, %144
  %685 = add i32 %684, %145
  %686 = sub i32 %685, %146
  %687 = sub i32 %686, %147
  %688 = sub i32 %687, %150
  %689 = add i32 %688, %157
  %690 = sub i32 %689, %162
  %691 = add i32 %690, %163
  %692 = sub i32 %691, %164
  %693 = sub i32 %692, %170
  %694 = sub i32 %693, %172
  %695 = sub i32 %694, %173
  %696 = add i32 %695, %174
  %697 = add i32 %696, %175
  %698 = sub i32 %697, %176
  %699 = add i32 %698, %14
  %700 = sub i32 %699, %185
  %701 = add i32 %700, %186
  %702 = sub i32 %701, %187
  %703 = sub i32 %702, %188
  %704 = sub i32 %703, %191
  %705 = add i32 %704, %192
  %706 = add i32 %705, %193
  %707 = add i32 %706, %194
  %708 = sub i32 %707, %197
  %709 = add i32 %708, %199
  %710 = sub i32 %709, %202
  %711 = sub i32 %710, %203
  %712 = add i32 %711, %204
  %713 = sub i32 %712, %208
  %714 = sub i32 %713, %209
  %715 = add i32 %714, %210
  %716 = add i32 %715, %211
  %717 = sub i32 %716, %219
  %718 = add i32 %717, %222
  %719 = add i32 %718, %223
  %720 = add i32 %719, %224
  %721 = sub i32 %720, %225
  %722 = sub i32 %721, %226
  %723 = sub i32 %722, %227
  %724 = sub i32 %723, %165
  %725 = sub i32 %724, %230
  %726 = sub i32 %725, %232
  %727 = sub i32 %726, %234
  %728 = add i32 %727, %237
  %729 = add i32 %728, %239
  %730 = sub i32 %729, %241
  %731 = add i32 %730, %242
  %732 = add i32 %731, %246
  %733 = add i32 %732, %247
  %734 = add i32 %733, %248
  %735 = sub i32 %734, %251
  %736 = sub i32 %735, %253
  %737 = sub i32 %736, %254
  %738 = sub i32 %737, %257
  %739 = sub i32 %738, %260
  %740 = sub i32 %739, %262
  %741 = add i32 %740, %263
  %742 = sub i32 %741, %264
  %743 = sub i32 %742, %265
  %744 = add i32 %743, %269
  %745 = add i32 %744, %270
  %746 = sub i32 %745, %272
  %747 = add i32 %746, %275
  %748 = sub i32 %747, %279
  %749 = add i32 %748, %280
  %750 = sub i32 %749, %74
  %751 = sub i32 %750, %281
  %752 = sub i32 %751, %284
  %753 = sub i32 %752, %285
  %754 = add i32 %753, %79
  %755 = add i32 %754, %286
  %756 = sub i32 %755, %289
  %757 = add i32 %756, %292
  %758 = sub i32 %757, %293
  %759 = add i32 %758, %294
  %760 = sub i32 %759, %298
  %761 = add i32 %760, %300
  %762 = sub i32 %761, %44
  %763 = sub i32 %762, %49
  %764 = sub i32 %763, %57
  %765 = sub i32 %764, %63
  %766 = add i32 %765, %80
  %767 = sub i32 %766, %84
  %768 = add i32 %767, %97
  %769 = add i32 %768, %104
  %770 = add i32 %769, %114
  %771 = sub i32 %770, %118
  %772 = sub i32 %771, %124
  %773 = sub i32 %772, %154
  %774 = sub i32 %773, %156
  %775 = sub i32 %774, %159
  %776 = add i32 %775, %169
  %777 = sub i32 %776, %196
  %778 = sub i32 %777, %201
  %779 = sub i32 %778, %213
  %780 = sub i32 %779, %216
  %781 = sub i32 %780, %218
  %782 = sub i32 %781, %229
  %783 = sub i32 %782, %235
  %784 = add i32 %783, %238
  %785 = sub i32 %784, %245
  %786 = sub i32 %785, %250
  %787 = add i32 %786, %258
  %788 = sub i32 %787, %267
  %789 = add i32 %788, %274
  %790 = sub i32 %789, %283
  %791 = sub i32 %790, %291
  %792 = sub i32 %791, %295
  %793 = add i32 %792, %297
  %794 = add i32 %793, %303
  %795 = sub i32 %794, %325
  %796 = sub i32 %795, %335
  %797 = sub i32 %796, %312
  %798 = add i32 %797, %400
  %799 = add i32 %798, %316
  %800 = add i32 %799, %487
  %801 = sub i32 %800, %179
  %802 = sub i32 %801, %288
  %803 = add i32 %802, %306
  %804 = sub i32 %803, %339
  %805 = add i32 %804, %381
  %806 = sub i32 %805, %385
  %807 = add i32 %806, %311
  %808 = add i32 %807, %397
  %809 = sub i32 %808, %413
  %810 = sub i32 %809, %329
  %811 = add i32 %810, %372
  %812 = add i32 %811, %428
  %813 = sub i32 %812, %432
  %814 = sub i32 %813, %433
  %815 = sub i32 %814, %442
  %816 = sub i32 %815, %451
  %817 = add i32 %816, %464
  %818 = sub i32 %817, %472
  %819 = sub i32 %818, %475
  %820 = add i32 %819, %476
  %821 = sub i32 %820, %480
  %822 = add i32 %821, %483
  %823 = sub i32 %822, %486
  %824 = add i32 %823, %499
  %825 = sub i32 %824, %504
  %826 = sub i32 %825, %511
  %827 = add i32 %826, %512
  %828 = sub i32 %827, %346
  %829 = add i32 %828, %524
  %830 = add i32 %829, %323
  %831 = sub i32 %830, %526
  %832 = add i32 %831, %531
  %833 = sub i32 %832, %168
  %834 = sub i32 %833, %183
  %835 = add i32 %834, %313
  %836 = sub i32 %835, %318
  %837 = sub i32 %836, %319
  %838 = add i32 %837, %326
  %839 = sub i32 %838, %330
  %840 = add i32 %839, %333
  %841 = sub i32 %840, %334
  %842 = add i32 %841, %344
  %843 = add i32 %842, %347
  %844 = add i32 %843, %356
  %845 = add i32 %844, %357
  %846 = add i32 %845, %359
  %847 = sub i32 %846, %307
  %848 = add i32 %847, %363
  %849 = sub i32 %848, %364
  %850 = sub i32 %849, %366
  %851 = sub i32 %850, %368
  %852 = add i32 %851, %371
  %853 = sub i32 %852, %373
  %854 = sub i32 %853, %374
  %855 = add i32 %854, %369
  %856 = add i32 %855, %378
  %857 = sub i32 %856, %379
  %858 = add i32 %857, %382
  %859 = add i32 %858, %350
  %860 = sub i32 %859, %386
  %861 = sub i32 %860, %387
  %862 = add i32 %861, %391
  %863 = add i32 %862, %392
  %864 = add i32 %863, %398
  %865 = sub i32 %864, %399
  %866 = sub i32 %865, %403
  %867 = sub i32 %866, %406
  %868 = add i32 %867, %408
  %869 = add i32 %868, %411
  %870 = sub i32 %869, %412
  %871 = add i32 %870, %416
  %872 = add i32 %871, %417
  %873 = sub i32 %872, %418
  %874 = sub i32 %873, %423
  %875 = add i32 %874, %426
  %876 = add i32 %875, %427
  %877 = sub i32 %876, %429
  %878 = sub i32 %877, %430
  %879 = sub i32 %878, %431
  %880 = sub i32 %879, %434
  %881 = add i32 %880, %435
  %882 = sub i32 %881, %436
  %883 = add i32 %882, %437
  %884 = add i32 %883, %438
  %885 = add i32 %884, %441
  %886 = sub i32 %885, %443
  %887 = sub i32 %886, %447
  %888 = add i32 %887, %452
  %889 = add i32 %888, %453
  %890 = sub i32 %889, %456
  %891 = sub i32 %890, %458
  %892 = add i32 %891, %459
  %893 = sub i32 %892, %460
  %894 = add i32 %893, %461
  %895 = sub i32 %894, %470
  %896 = sub i32 %895, %473
  %897 = add i32 %896, %477
  %898 = add i32 %897, %478
  %899 = add i32 %898, %479
  %900 = sub i32 %899, %484
  %901 = sub i32 %900, %485
  %902 = sub i32 %901, %488
  %903 = sub i32 %902, %490
  %904 = add i32 %903, %491
  %905 = add i32 %904, %492
  %906 = add i32 %905, %493
  %907 = sub i32 %906, %495
  %908 = add i32 %907, %498
  %909 = sub i32 %908, %502
  %910 = sub i32 %909, %503
  %911 = add i32 %910, %505
  %912 = sub i32 %911, %506
  %913 = sub i32 %912, %507
  %914 = sub i32 %913, %508
  %915 = sub i32 %914, %510
  %916 = sub i32 %915, %513
  %917 = add i32 %916, %516
  %918 = add i32 %917, %518
  %919 = sub i32 %918, %522
  %920 = add i32 %919, %523
  %921 = sub i32 %920, %525
  %922 = add i32 %921, %527
  %923 = add i32 %922, %529
  %924 = add i32 %923, %532
  %925 = sub i32 %924, %322
  %926 = sub i32 %925, %328
  %927 = add i32 %926, %342
  %928 = sub i32 %927, %351
  %929 = sub i32 %928, %353
  %930 = sub i32 %929, %361
  %931 = add i32 %930, %370
  %932 = sub i32 %931, %390
  %933 = sub i32 %932, %394
  %934 = add i32 %933, %405
  %935 = add i32 %934, %410
  %936 = add i32 %935, %419
  %937 = sub i32 %936, %421
  %938 = sub i32 %937, %422
  %939 = sub i32 %938, %440
  %940 = add i32 %939, %444
  %941 = sub i32 %940, %446
  %942 = sub i32 %941, %450
  %943 = sub i32 %942, %455
  %944 = sub i32 %943, %466
  %945 = sub i32 %944, %482
  %946 = sub i32 %945, %497
  %947 = sub i32 %946, %501
  %948 = sub i32 %947, %515
  %949 = sub i32 %948, %521
  %950 = sub i32 %949, %536
  %951 = sub i32 %950, %377
  %952 = add i32 %951, %597
  %953 = add i32 %952, %599
  %954 = sub i32 %953, %469
  %955 = add i32 %954, %592
  %956 = add i32 %955, %595
  %957 = add i32 %956, %589
  %958 = add i32 %957, %585
  %959 = add i32 %958, %608
  %960 = add i32 %959, %575
  %961 = icmp eq i32 %30, %960
  %962 = select i1 %961, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %963 = tail call i32 @puts(i8* nonnull dereferenceable(1) %962)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
