digraph "DFG for'crackme' function" {
	Node0x1e42ae0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1e43160[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x1e43200[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x1e43270[shape=record, label="  %8 = or i32 %7, %3"];
	Node0x1e432e0[shape=record, label="  %9 = sub i32 1, %5"];
	Node0x1e43350[shape=record, label="  %10 = sub i32 %9, %6"];
	Node0x1e433c0[shape=record, label="  %11 = sub i32 %10, %8"];
	Node0x1e43430[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x1e434a0[shape=record, label="  %13 = or i32 %12, %1"];
	Node0x1e43540[shape=record, label="  %14 = shl i32 %13, 2"];
	Node0x1e435b0[shape=record, label="  %15 = or i32 %14, 1"];
	Node0x1e43620[shape=record, label="  %16 = and i32 %12, %1"];
	Node0x1e43690[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x1e43700[shape=record, label="  %18 = and i32 %2, %1"];
	Node0x1e43770[shape=record, label="  %19 = and i32 %7, %3"];
	Node0x1e437e0[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x1e43850[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x1e438c0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x1e43960[shape=record, label="  %23 = mul i32 %22, -5"];
	Node0x1e439d0[shape=record, label="  %24 = xor i32 %8, -1"];
	Node0x1e43a70[shape=record, label="  %25 = mul i32 %24, -3"];
	Node0x1e43b10[shape=record, label="  %26 = mul i32 %19, -7"];
	Node0x1e43b80[shape=record, label="  %27 = and i32 %3, %0"];
	Node0x1e43c20[shape=record, label="  %28 = mul i32 %27, -6"];
	Node0x1e43c90[shape=record, label="  %29 = add i32 %7, %3"];
	Node0x1e43d00[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x1e43da0[shape=record, label="  %31 = add i32 %2, 3"];
	Node0x1e43e10[shape=record, label="  %32 = add i32 %31, %16"];
	Node0x1e44090[shape=record, label="  %33 = sub i32 %32, %18"];
	Node0x1e44100[shape=record, label="  %34 = sub i32 %33, %17"];
	Node0x1e44170[shape=record, label="  %35 = add i32 %34, %20"];
	Node0x1e441e0[shape=record, label="  %36 = add i32 %35, %21"];
	Node0x1e44250[shape=record, label="  %37 = add i32 %36, %15"];
	Node0x1e442c0[shape=record, label="  %38 = add i32 %37, %23"];
	Node0x1e44330[shape=record, label="  %39 = add i32 %38, %25"];
	Node0x1e443a0[shape=record, label="  %40 = add i32 %39, %26"];
	Node0x1e44410[shape=record, label="  %41 = add i32 %40, %28"];
	Node0x1e44480[shape=record, label="  %42 = add i32 %41, %30"];
	Node0x1e444f0[shape=record, label="  %43 = icmp eq i32 %11, %42"];
	Node0x1de3268[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e44990[shape=record, label="  %45 = tail call i32 @puts(i8* nonnull dereferenceable(1) %44)"];
	Node0x1e449e0[shape=record, label="  ret void"];
	Node0x1e42ae0 -> Node0x1e43160;
	Node0x1e43160 -> Node0x1e43200;
	Node0x1e43200 -> Node0x1e43270;
	Node0x1e43270 -> Node0x1e432e0;
	Node0x1e432e0 -> Node0x1e43350;
	Node0x1e43350 -> Node0x1e433c0;
	Node0x1e433c0 -> Node0x1e43430;
	Node0x1e43430 -> Node0x1e434a0;
	Node0x1e434a0 -> Node0x1e43540;
	Node0x1e43540 -> Node0x1e435b0;
	Node0x1e435b0 -> Node0x1e43620;
	Node0x1e43620 -> Node0x1e43690;
	Node0x1e43690 -> Node0x1e43700;
	Node0x1e43700 -> Node0x1e43770;
	Node0x1e43770 -> Node0x1e437e0;
	Node0x1e437e0 -> Node0x1e43850;
	Node0x1e43850 -> Node0x1e438c0;
	Node0x1e438c0 -> Node0x1e43960;
	Node0x1e43960 -> Node0x1e439d0;
	Node0x1e439d0 -> Node0x1e43a70;
	Node0x1e43a70 -> Node0x1e43b10;
	Node0x1e43b10 -> Node0x1e43b80;
	Node0x1e43b80 -> Node0x1e43c20;
	Node0x1e43c20 -> Node0x1e43c90;
	Node0x1e43c90 -> Node0x1e43d00;
	Node0x1e43d00 -> Node0x1e43da0;
	Node0x1e43da0 -> Node0x1e43e10;
	Node0x1e43e10 -> Node0x1e44090;
	Node0x1e44090 -> Node0x1e44100;
	Node0x1e44100 -> Node0x1e44170;
	Node0x1e44170 -> Node0x1e441e0;
	Node0x1e441e0 -> Node0x1e44250;
	Node0x1e44250 -> Node0x1e442c0;
	Node0x1e442c0 -> Node0x1e44330;
	Node0x1e44330 -> Node0x1e443a0;
	Node0x1e443a0 -> Node0x1e44410;
	Node0x1e44410 -> Node0x1e44480;
	Node0x1e44480 -> Node0x1e444f0;
	Node0x1e444f0 -> Node0x1de3268;
	Node0x1de3268 -> Node0x1e44990;
	Node0x1e44990 -> Node0x1e449e0;
edge [color=red]
	Node0x1e42ae0 -> Node0x1e43160;
	Node0x1e43200 -> Node0x1e43270;
	Node0x1e42ae0 -> Node0x1e432e0;
	Node0x1e432e0 -> Node0x1e43350;
	Node0x1e43160 -> Node0x1e43350;
	Node0x1e43350 -> Node0x1e433c0;
	Node0x1e43270 -> Node0x1e433c0;
	Node0x1e43430 -> Node0x1e434a0;
	Node0x1e434a0 -> Node0x1e43540;
	Node0x1e43540 -> Node0x1e435b0;
	Node0x1e43430 -> Node0x1e43620;
	Node0x1e43620 -> Node0x1e43690;
	Node0x1e43200 -> Node0x1e43770;
	Node0x1e43770 -> Node0x1e437e0;
	Node0x1e43850 -> Node0x1e438c0;
	Node0x1e438c0 -> Node0x1e43960;
	Node0x1e43270 -> Node0x1e439d0;
	Node0x1e439d0 -> Node0x1e43a70;
	Node0x1e43770 -> Node0x1e43b10;
	Node0x1e43b80 -> Node0x1e43c20;
	Node0x1e43200 -> Node0x1e43c90;
	Node0x1e43c90 -> Node0x1e43d00;
	Node0x1e43da0 -> Node0x1e43e10;
	Node0x1e43620 -> Node0x1e43e10;
	Node0x1e43e10 -> Node0x1e44090;
	Node0x1e43700 -> Node0x1e44090;
	Node0x1e44090 -> Node0x1e44100;
	Node0x1e43690 -> Node0x1e44100;
	Node0x1e44100 -> Node0x1e44170;
	Node0x1e437e0 -> Node0x1e44170;
	Node0x1e44170 -> Node0x1e441e0;
	Node0x1e43850 -> Node0x1e441e0;
	Node0x1e441e0 -> Node0x1e44250;
	Node0x1e435b0 -> Node0x1e44250;
	Node0x1e44250 -> Node0x1e442c0;
	Node0x1e43960 -> Node0x1e442c0;
	Node0x1e442c0 -> Node0x1e44330;
	Node0x1e43a70 -> Node0x1e44330;
	Node0x1e44330 -> Node0x1e443a0;
	Node0x1e43b10 -> Node0x1e443a0;
	Node0x1e443a0 -> Node0x1e44410;
	Node0x1e43c20 -> Node0x1e44410;
	Node0x1e44410 -> Node0x1e44480;
	Node0x1e43d00 -> Node0x1e44480;
	Node0x1e433c0 -> Node0x1e444f0;
	Node0x1e44480 -> Node0x1e444f0;
	Node0x1e444f0 -> Node0x1de3268;
	Node0x1de3268 -> Node0x1e44990;
}
