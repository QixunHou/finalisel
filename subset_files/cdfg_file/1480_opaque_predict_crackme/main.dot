digraph "DFG for'main' function" {
	Node0x1e44ba8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e44c28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e44cb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1e44d18[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1e44dc8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1e451f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e452d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1e453d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e45498[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1e45548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1e45608[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1e456b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1e3fb10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1e458b8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e46828[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e46e98[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1e46ef8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1e46f70[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1e46fe0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1e47050[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x1e470c0[shape=record, label="  %17 = or i32 %13, %16"];
	Node0x1e47130[shape=record, label="  %18 = sub i32 1, %14"];
	Node0x1e471a0[shape=record, label="  %19 = sub i32 %18, %15"];
	Node0x1e47210[shape=record, label="  %20 = sub i32 %19, %17"];
	Node0x1e47280[shape=record, label="  %21 = xor i32 %12, -1"];
	Node0x1e472f0[shape=record, label="  %22 = or i32 %11, %21"];
	Node0x1e47360[shape=record, label="  %23 = shl i32 %22, 2"];
	Node0x1e473d0[shape=record, label="  %24 = or i32 %23, 1"];
	Node0x1e47440[shape=record, label="  %25 = and i32 %11, %21"];
	Node0x1e474b0[shape=record, label="  %26 = shl i32 %25, 2"];
	Node0x1e47520[shape=record, label="  %27 = and i32 %12, %11"];
	Node0x1e47590[shape=record, label="  %28 = and i32 %13, %16"];
	Node0x1e47600[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x1e47670[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x1e476e0[shape=record, label="  %31 = xor i32 %30, -1"];
	Node0x1e47750[shape=record, label="  %32 = mul i32 %31, -5"];
	Node0x1e477c0[shape=record, label="  %33 = xor i32 %17, -1"];
	Node0x1e47830[shape=record, label="  %34 = mul i32 %33, -3"];
	Node0x1e478a0[shape=record, label="  %35 = mul i32 %28, -7"];
	Node0x1e47910[shape=record, label="  %36 = and i32 %13, %10"];
	Node0x1e47980[shape=record, label="  %37 = mul i32 %36, -6"];
	Node0x1e479f0[shape=record, label="  %38 = add i32 %13, %16"];
	Node0x1e47a60[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x1e47ad0[shape=record, label="  %40 = add i32 %12, 3"];
	Node0x1e47b40[shape=record, label="  %41 = add i32 %40, %25"];
	Node0x1e47bb0[shape=record, label="  %42 = sub i32 %41, %27"];
	Node0x1e47c20[shape=record, label="  %43 = sub i32 %42, %26"];
	Node0x1e47c90[shape=record, label="  %44 = add i32 %43, %29"];
	Node0x1e47d00[shape=record, label="  %45 = add i32 %44, %30"];
	Node0x1e47d70[shape=record, label="  %46 = add i32 %45, %24"];
	Node0x1e47de0[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x1e47e50[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x1e47ec0[shape=record, label="  %49 = add i32 %48, %35"];
	Node0x1e47f30[shape=record, label="  %50 = add i32 %49, %37"];
	Node0x1e47fa0[shape=record, label="  %51 = add i32 %50, %39"];
	Node0x1e48010[shape=record, label="  %52 = icmp eq i32 %20, %51"];
	Node0x1de48b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e480a0[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x1e48348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1e484a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1e485b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e486c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e48788[shape=record, label="  ret i32 0"];
	Node0x1e44ba8 -> Node0x1e44c28;
	Node0x1e44c28 -> Node0x1e44cb8;
	Node0x1e44cb8 -> Node0x1e44d18;
	Node0x1e44d18 -> Node0x1e44dc8;
	Node0x1e44dc8 -> Node0x1e451f8;
	Node0x1e451f8 -> Node0x1e452d8;
	Node0x1e452d8 -> Node0x1e453d8;
	Node0x1e453d8 -> Node0x1e45498;
	Node0x1e45498 -> Node0x1e45548;
	Node0x1e45548 -> Node0x1e45608;
	Node0x1e45608 -> Node0x1e456b8;
	Node0x1e456b8 -> Node0x1e3fb10;
	Node0x1e3fb10 -> Node0x1e458b8;
	Node0x1e458b8 -> Node0x1e46828;
	Node0x1e46828 -> Node0x1e46e98;
	Node0x1e46e98 -> Node0x1e46ef8;
	Node0x1e46ef8 -> Node0x1e46f70;
	Node0x1e46f70 -> Node0x1e46fe0;
	Node0x1e46fe0 -> Node0x1e47050;
	Node0x1e47050 -> Node0x1e470c0;
	Node0x1e470c0 -> Node0x1e47130;
	Node0x1e47130 -> Node0x1e471a0;
	Node0x1e471a0 -> Node0x1e47210;
	Node0x1e47210 -> Node0x1e47280;
	Node0x1e47280 -> Node0x1e472f0;
	Node0x1e472f0 -> Node0x1e47360;
	Node0x1e47360 -> Node0x1e473d0;
	Node0x1e473d0 -> Node0x1e47440;
	Node0x1e47440 -> Node0x1e474b0;
	Node0x1e474b0 -> Node0x1e47520;
	Node0x1e47520 -> Node0x1e47590;
	Node0x1e47590 -> Node0x1e47600;
	Node0x1e47600 -> Node0x1e47670;
	Node0x1e47670 -> Node0x1e476e0;
	Node0x1e476e0 -> Node0x1e47750;
	Node0x1e47750 -> Node0x1e477c0;
	Node0x1e477c0 -> Node0x1e47830;
	Node0x1e47830 -> Node0x1e478a0;
	Node0x1e478a0 -> Node0x1e47910;
	Node0x1e47910 -> Node0x1e47980;
	Node0x1e47980 -> Node0x1e479f0;
	Node0x1e479f0 -> Node0x1e47a60;
	Node0x1e47a60 -> Node0x1e47ad0;
	Node0x1e47ad0 -> Node0x1e47b40;
	Node0x1e47b40 -> Node0x1e47bb0;
	Node0x1e47bb0 -> Node0x1e47c20;
	Node0x1e47c20 -> Node0x1e47c90;
	Node0x1e47c90 -> Node0x1e47d00;
	Node0x1e47d00 -> Node0x1e47d70;
	Node0x1e47d70 -> Node0x1e47de0;
	Node0x1e47de0 -> Node0x1e47e50;
	Node0x1e47e50 -> Node0x1e47ec0;
	Node0x1e47ec0 -> Node0x1e47f30;
	Node0x1e47f30 -> Node0x1e47fa0;
	Node0x1e47fa0 -> Node0x1e48010;
	Node0x1e48010 -> Node0x1de48b8;
	Node0x1de48b8 -> Node0x1e480a0;
	Node0x1e480a0 -> Node0x1e48348;
	Node0x1e48348 -> Node0x1e484a8;
	Node0x1e484a8 -> Node0x1e485b8;
	Node0x1e485b8 -> Node0x1e486c8;
	Node0x1e486c8 -> Node0x1e48788;
edge [color=red]
	Node0x1e44ba8 -> Node0x1e44dc8;
	Node0x1e44dc8 -> Node0x1e451f8;
	Node0x1e44c28 -> Node0x1e452d8;
	Node0x1e452d8 -> Node0x1e453d8;
	Node0x1e44cb8 -> Node0x1e45498;
	Node0x1e45498 -> Node0x1e45548;
	Node0x1e44d18 -> Node0x1e45608;
	Node0x1e45608 -> Node0x1e456b8;
	Node0x1e44ba8 -> Node0x1e3fb10;
	Node0x1e44c28 -> Node0x1e3fb10;
	Node0x1e44cb8 -> Node0x1e3fb10;
	Node0x1e44d18 -> Node0x1e3fb10;
	Node0x1e44ba8 -> Node0x1e458b8;
	Node0x1e44c28 -> Node0x1e46828;
	Node0x1e44cb8 -> Node0x1e46e98;
	Node0x1e44d18 -> Node0x1e46ef8;
	Node0x1e46e98 -> Node0x1e46f70;
	Node0x1e46828 -> Node0x1e46f70;
	Node0x1e46f70 -> Node0x1e46fe0;
	Node0x1e458b8 -> Node0x1e47050;
	Node0x1e46ef8 -> Node0x1e470c0;
	Node0x1e47050 -> Node0x1e470c0;
	Node0x1e46f70 -> Node0x1e47130;
	Node0x1e47130 -> Node0x1e471a0;
	Node0x1e46fe0 -> Node0x1e471a0;
	Node0x1e471a0 -> Node0x1e47210;
	Node0x1e470c0 -> Node0x1e47210;
	Node0x1e46e98 -> Node0x1e47280;
	Node0x1e46828 -> Node0x1e472f0;
	Node0x1e47280 -> Node0x1e472f0;
	Node0x1e472f0 -> Node0x1e47360;
	Node0x1e47360 -> Node0x1e473d0;
	Node0x1e46828 -> Node0x1e47440;
	Node0x1e47280 -> Node0x1e47440;
	Node0x1e47440 -> Node0x1e474b0;
	Node0x1e46e98 -> Node0x1e47520;
	Node0x1e46828 -> Node0x1e47520;
	Node0x1e46ef8 -> Node0x1e47590;
	Node0x1e47050 -> Node0x1e47590;
	Node0x1e47590 -> Node0x1e47600;
	Node0x1e46ef8 -> Node0x1e47670;
	Node0x1e458b8 -> Node0x1e47670;
	Node0x1e47670 -> Node0x1e476e0;
	Node0x1e476e0 -> Node0x1e47750;
	Node0x1e470c0 -> Node0x1e477c0;
	Node0x1e477c0 -> Node0x1e47830;
	Node0x1e47590 -> Node0x1e478a0;
	Node0x1e46ef8 -> Node0x1e47910;
	Node0x1e458b8 -> Node0x1e47910;
	Node0x1e47910 -> Node0x1e47980;
	Node0x1e46ef8 -> Node0x1e479f0;
	Node0x1e47050 -> Node0x1e479f0;
	Node0x1e479f0 -> Node0x1e47a60;
	Node0x1e46e98 -> Node0x1e47ad0;
	Node0x1e47ad0 -> Node0x1e47b40;
	Node0x1e47440 -> Node0x1e47b40;
	Node0x1e47b40 -> Node0x1e47bb0;
	Node0x1e47520 -> Node0x1e47bb0;
	Node0x1e47bb0 -> Node0x1e47c20;
	Node0x1e474b0 -> Node0x1e47c20;
	Node0x1e47c20 -> Node0x1e47c90;
	Node0x1e47600 -> Node0x1e47c90;
	Node0x1e47c90 -> Node0x1e47d00;
	Node0x1e47670 -> Node0x1e47d00;
	Node0x1e47d00 -> Node0x1e47d70;
	Node0x1e473d0 -> Node0x1e47d70;
	Node0x1e47d70 -> Node0x1e47de0;
	Node0x1e47750 -> Node0x1e47de0;
	Node0x1e47de0 -> Node0x1e47e50;
	Node0x1e47830 -> Node0x1e47e50;
	Node0x1e47e50 -> Node0x1e47ec0;
	Node0x1e478a0 -> Node0x1e47ec0;
	Node0x1e47ec0 -> Node0x1e47f30;
	Node0x1e47980 -> Node0x1e47f30;
	Node0x1e47f30 -> Node0x1e47fa0;
	Node0x1e47a60 -> Node0x1e47fa0;
	Node0x1e47210 -> Node0x1e48010;
	Node0x1e47fa0 -> Node0x1e48010;
	Node0x1e48010 -> Node0x1de48b8;
	Node0x1de48b8 -> Node0x1e480a0;
	Node0x1e45608 -> Node0x1e48348;
	Node0x1e45498 -> Node0x1e484a8;
	Node0x1e452d8 -> Node0x1e485b8;
	Node0x1e44dc8 -> Node0x1e486c8;
}
