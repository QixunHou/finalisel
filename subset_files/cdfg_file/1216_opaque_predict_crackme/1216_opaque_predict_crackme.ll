; ModuleID = '../.././c_source_file/1216_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1216_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = or i32 %7, %0
  %9 = xor i32 %8, -1
  %10 = xor i32 %2, %0
  %11 = or i32 %10, %9
  %12 = xor i32 %5, -1
  %13 = and i32 %4, %3
  %14 = or i32 %13, %12
  %15 = sub i32 %14, %11
  %16 = xor i32 %1, %0
  %17 = or i32 %16, %2
  %18 = xor i32 %0, -1
  %19 = and i32 %1, %0
  %20 = xor i32 %19, -1
  %21 = xor i32 %2, %1
  %22 = and i32 %21, %20
  %23 = and i32 %2, %0
  %24 = xor i32 %16, -1
  %25 = or i32 %23, %24
  %26 = xor i32 %21, -1
  %27 = and i32 %26, %20
  %28 = and i32 %10, %16
  %29 = or i32 %10, %1
  %30 = xor i32 %19, %2
  %31 = shl i32 %30, 2
  %32 = and i32 %10, %7
  %33 = xor i32 %2, -1
  %34 = and i32 %33, %1
  %35 = xor i32 %34, -1
  %36 = add i32 %34, 1
  %37 = and i32 %7, %2
  %38 = and i32 %37, %18
  %39 = or i32 %7, %2
  %40 = and i32 %39, %0
  %41 = or i32 %38, %40
  %42 = xor i32 %10, -1
  %43 = and i32 %16, %42
  %44 = and i32 %2, %1
  %45 = and i32 %44, %0
  %46 = or i32 %2, %1
  %47 = xor i32 %46, %0
  %48 = xor i32 %45, 2147483647
  %49 = xor i32 %48, %47
  %50 = and i32 %33, %0
  %51 = xor i32 %44, -1
  %52 = xor i32 %50, %51
  %53 = or i32 %45, %47
  %54 = xor i32 %46, -1
  %55 = xor i32 %54, %0
  %56 = or i32 %10, %19
  %57 = and i32 %33, %20
  %58 = and i32 %7, %0
  %59 = xor i32 %58, -1
  %60 = xor i32 %59, %2
  %61 = or i32 %2, %0
  %62 = xor i32 %61, %1
  %63 = and i32 %44, %18
  %64 = and i32 %46, %0
  %65 = xor i32 %64, -1
  %66 = xor i32 %63, %65
  %67 = or i32 %51, %0
  %68 = and i32 %21, %18
  %69 = or i32 %45, %68
  %70 = and i32 %37, %0
  %71 = xor i32 %39, %18
  %72 = xor i32 %71, %70
  %73 = or i32 %33, %1
  %74 = xor i32 %73, -1
  %75 = or i32 %74, %18
  %76 = shl i32 %75, 1
  %77 = or i32 %16, %42
  %78 = xor i32 %40, -1
  %79 = xor i32 %38, %78
  %80 = or i32 %26, %0
  %81 = and i32 %51, %18
  %82 = or i32 %19, %74
  %83 = or i32 %1, %0
  %84 = and i32 %21, %83
  %85 = or i32 %33, %0
  %86 = xor i32 %85, -1
  %87 = shl i32 %86, 1
  %88 = and i32 %61, %16
  %89 = xor i32 %23, -1
  %90 = and i32 %16, %89
  %91 = xor i32 %26, %0
  %92 = or i32 %42, %7
  %93 = xor i32 %50, -1
  %94 = and i32 %93, %7
  %95 = or i32 %44, %18
  %96 = shl i32 %95, 1
  %97 = or i32 %10, %16
  %98 = xor i32 %58, %35
  %99 = xor i32 %23, %83
  %100 = xor i32 %21, %0
  %101 = xor i32 %100, -1
  %102 = or i32 %45, %101
  %103 = xor i32 %48, %68
  %104 = shl i32 %103, 1
  %105 = or i32 %50, %44
  %106 = or i32 %33, %9
  %107 = xor i32 %83, -1
  %108 = or i32 %33, %107
  %109 = or i32 %34, %0
  %110 = xor i32 %74, %0
  %111 = xor i32 %61, -1
  %112 = or i32 %111, %7
  %113 = or i32 %9, %2
  %114 = or i32 %63, %64
  %115 = or i32 %86, %7
  %116 = and i32 %26, %59
  %117 = or i32 %111, %24
  %118 = or i32 %107, %2
  %119 = and i32 %8, %2
  %120 = shl i32 %119, 1
  %121 = and i32 %73, %18
  %122 = or i32 %42, %1
  %123 = xor i32 %73, %19
  %124 = or i32 %50, %74
  %125 = and i32 %33, %59
  %126 = and i32 %10, %20
  %127 = or i32 %86, %24
  %128 = or i32 %23, %107
  %129 = and i32 %83, %2
  %130 = add i32 %73, 1
  %131 = xor i32 %45, %100
  %132 = or i32 %21, %9
  %133 = and i32 %26, %0
  %134 = xor i32 %89, %1
  %135 = shl i32 %111, 2
  %136 = or i32 %19, %26
  %137 = xor i32 %85, %19
  %138 = and i32 %21, %59
  %139 = shl i32 %138, 2
  %140 = xor i32 %9, %2
  %141 = or i32 %44, %0
  %142 = and i32 %61, %24
  %143 = xor i32 %23, %8
  %144 = or i32 %50, %1
  %145 = or i32 %58, %42
  %146 = or i32 %21, %58
  %147 = or i32 %42, %24
  %148 = and i32 %8, %42
  %149 = and i32 %42, %7
  %150 = and i32 %73, %0
  %151 = shl i32 %24, 1
  %152 = shl i32 %64, 1
  %153 = or i32 %19, %42
  %154 = or i32 %19, %33
  %155 = and i32 %61, %7
  %156 = xor i32 %107, %2
  %157 = xor i32 %51, %0
  %158 = xor i32 %93, %1
  %159 = shl i32 %158, 1
  %160 = and i32 %42, %59
  %161 = or i32 %23, %1
  %162 = and i32 %8, %26
  %163 = or i32 %21, %18
  %164 = xor i32 %163, -1
  %165 = or i32 %38, %164
  %166 = and i32 %21, %0
  %167 = or i32 %63, %166
  %168 = and i32 %85, %24
  %169 = and i32 %89, %1
  %170 = or i32 %54, %0
  %171 = xor i32 %35, %0
  %172 = and i32 %42, %1
  %173 = shl i32 %20, 1
  %174 = or i32 %46, %18
  %175 = and i32 %46, %18
  %176 = xor i32 %175, -1
  %177 = xor i32 %45, %176
  %178 = or i32 %19, %86
  %179 = or i32 %33, %24
  %180 = and i32 %24, %2
  %181 = or i32 %10, %107
  %182 = or i32 %70, %100
  %183 = or i32 %86, %1
  %184 = shl i32 %183, 1
  %185 = and i32 %33, %24
  %186 = and i32 %8, %33
  %187 = and i32 %10, %59
  %188 = and i32 %35, %0
  %189 = xor i32 %86, %1
  %190 = and i32 %42, %20
  %191 = or i32 %23, %34
  %192 = and i32 %85, %1
  %193 = xor i32 %20, %2
  %194 = shl i32 %193, 2
  %195 = or i32 %35, %0
  %196 = and i32 %10, %24
  %197 = or i32 %21, %0
  %198 = or i32 %23, %54
  %199 = xor i32 %83, %2
  %200 = xor i32 %46, %19
  %201 = xor i32 %44, %0
  %202 = xor i32 %23, %1
  %203 = shl i32 %202, 1
  %204 = or i32 %16, %33
  %205 = and i32 %83, %42
  %206 = and i32 %10, %8
  %207 = or i32 %50, %16
  %208 = xor i32 %70, %101
  %209 = xor i32 %50, %73
  %210 = or i32 %50, %24
  %211 = or i32 %16, %86
  %212 = xor i32 %23, %35
  %213 = or i32 %42, %107
  %214 = or i32 %24, %2
  %215 = xor i32 %61, %19
  %216 = or i32 %26, %9
  %217 = add i32 %21, 1
  %218 = or i32 %23, %9
  %219 = or i32 %45, %175
  %220 = shl i32 %219, 1
  %221 = or i32 %10, %58
  %222 = and i32 %89, %7
  %223 = xor i32 %39, -1
  %224 = or i32 %223, %0
  %225 = xor i32 %70, %224
  %226 = and i32 %35, %18
  %227 = shl i32 %226, 1
  %228 = or i32 %46, %0
  %229 = or i32 %16, %111
  %230 = shl i32 %229, 1
  %231 = or i32 %74, %0
  %232 = or i32 %58, %26
  %233 = and i32 %10, %1
  %234 = and i32 %20, %2
  %235 = shl i32 %234, 1
  %236 = and i32 %10, %83
  %237 = and i32 %93, %24
  %238 = xor i32 %38, %163
  %239 = and i32 %54, %18
  %240 = mul i32 %239, 7
  %241 = and i32 %34, %18
  %242 = mul i32 %241, 12
  %243 = and i32 %54, %0
  %244 = and i32 %34, %0
  %245 = and i32 %74, %18
  %246 = mul i32 %245, 11
  %247 = shl i32 %63, 3
  %248 = and i32 %74, %0
  %249 = mul i32 %248, -29
  %250 = shl i32 %45, 4
  %251 = or i32 %5, %4
  %252 = xor i32 %251, %13
  %253 = and i32 %5, %4
  %254 = xor i32 %253, -1
  %255 = xor i32 %4, %3
  %256 = xor i32 %255, -1
  %257 = and i32 %254, %256
  %258 = and i32 %255, %254
  %259 = or i32 %253, %256
  %260 = and i32 %5, %3
  %261 = and i32 %260, %4
  %262 = or i32 %5, %3
  %263 = xor i32 %261, -1
  %264 = xor i32 %263, %4
  %265 = xor i32 %264, %262
  %266 = xor i32 %4, -1
  %267 = and i32 %260, %266
  %268 = and i32 %262, %4
  %269 = or i32 %267, %268
  %270 = and i32 %251, %256
  %271 = xor i32 %5, %4
  %272 = or i32 %271, %256
  %273 = or i32 %12, %4
  %274 = and i32 %273, %256
  %275 = xor i32 %260, -1
  %276 = and i32 %275, %4
  %277 = shl i32 %276, 1
  %278 = and i32 %12, %3
  %279 = xor i32 %278, -1
  %280 = xor i32 %279, %4
  %281 = xor i32 %3, -1
  %282 = and i32 %281, %4
  %283 = xor i32 %282, -1
  %284 = and i32 %283, %5
  %285 = xor i32 %271, -1
  %286 = and i32 %285, %3
  %287 = xor i32 %5, %3
  %288 = xor i32 %287, -1
  %289 = and i32 %288, %266
  %290 = shl i32 %289, 1
  %291 = or i32 %255, %12
  %292 = xor i32 %253, %262
  %293 = or i32 %260, %4
  %294 = xor i32 %262, -1
  %295 = or i32 %12, %3
  %296 = xor i32 %295, %4
  %297 = and i32 %12, %4
  %298 = xor i32 %297, -1
  %299 = and i32 %298, %281
  %300 = and i32 %281, %5
  %301 = and i32 %300, %4
  %302 = xor i32 %287, %4
  %303 = or i32 %301, %302
  %304 = or i32 %278, %4
  %305 = or i32 %4, %3
  %306 = and i32 %287, %305
  %307 = or i32 %271, %281
  %308 = and i32 %298, %256
  %309 = xor i32 %253, %279
  %310 = xor i32 %251, %3
  %311 = and i32 %255, %12
  %312 = shl i32 %311, 1
  %313 = and i32 %279, %266
  %314 = and i32 %287, %266
  %315 = xor i32 %314, %263
  %316 = or i32 %287, %266
  %317 = xor i32 %282, %275
  %318 = and i32 %298, %3
  %319 = add i32 %4, 1
  %320 = or i32 %271, %3
  %321 = and i32 %300, %266
  %322 = or i32 %281, %5
  %323 = and i32 %322, %4
  %324 = or i32 %321, %323
  %325 = or i32 %271, %13
  %326 = shl i32 %325, 1
  %327 = or i32 %281, %4
  %328 = and i32 %327, %5
  %329 = and i32 %305, %288
  %330 = or i32 %282, %12
  %331 = or i32 %275, %4
  %332 = or i32 %260, %282
  %333 = xor i32 %251, -1
  %334 = or i32 %13, %333
  %335 = xor i32 %321, %316
  %336 = shl i32 %335, 1
  %337 = or i32 %262, %266
  %338 = or i32 %253, %3
  %339 = shl i32 %338, 2
  %340 = or i32 %13, %5
  %341 = and i32 %327, %12
  %342 = or i32 %333, %3
  %343 = and i32 %305, %12
  %344 = shl i32 %343, 1
  %345 = or i32 %287, %4
  %346 = and i32 %251, %281
  %347 = or i32 %285, %256
  %348 = or i32 %295, %4
  %349 = and i32 %262, %266
  %350 = xor i32 %349, %263
  %351 = and i32 %273, %3
  %352 = or i32 %333, %281
  %353 = and i32 %327, %285
  %354 = shl i32 %353, 1
  %355 = or i32 %255, %5
  %356 = xor i32 %305, -1
  %357 = add i32 %305, 1
  %358 = xor i32 %273, -1
  %359 = or i32 %13, %358
  %360 = xor i32 %323, -1
  %361 = xor i32 %321, %360
  %362 = and i32 %12, %256
  %363 = shl i32 %362, 1
  %364 = and i32 %288, %283
  %365 = shl i32 %287, 1
  %366 = xor i32 %302, 2147483647
  %367 = or i32 %366, %261
  %368 = shl i32 %367, 1
  %369 = xor i32 %333, %3
  %370 = or i32 %260, %266
  %371 = and i32 %295, %266
  %372 = and i32 %295, %4
  %373 = xor i32 %295, -1
  %374 = xor i32 %373, %4
  %375 = shl i32 %374, 2
  %376 = or i32 %358, %3
  %377 = shl i32 %376, 1
  %378 = or i32 %358, %281
  %379 = or i32 %285, %281
  %380 = or i32 %297, %255
  %381 = and i32 %285, %281
  %382 = or i32 %13, %288
  %383 = or i32 %275, %266
  %384 = and i32 %254, %3
  %385 = or i32 %358, %256
  %386 = or i32 %287, %356
  %387 = xor i32 %260, %4
  %388 = xor i32 %327, -1
  %389 = add i32 %327, 1
  %390 = xor i32 %13, -1
  %391 = and i32 %287, %390
  %392 = and i32 %255, %5
  %393 = or i32 %282, %285
  %394 = xor i32 %316, 1073741823
  %395 = or i32 %394, %321
  %396 = xor i32 %322, -1
  %397 = or i32 %396, %4
  %398 = xor i32 %301, %397
  %399 = shl i32 %373, 1
  %400 = and i32 %285, %283
  %401 = or i32 %285, %3
  %402 = shl i32 %401, 1
  %403 = or i32 %12, %256
  %404 = xor i32 %295, %13
  %405 = or i32 %253, %255
  %406 = shl i32 %405, 1
  %407 = and i32 %271, %283
  %408 = xor i32 %253, %305
  %409 = or i32 %278, %282
  %410 = or i32 %12, %356
  %411 = and i32 %273, %255
  %412 = shl i32 %411, 1
  %413 = shl i32 %254, 1
  %414 = or i32 %295, %266
  %415 = shl i32 %414, 1
  %416 = or i32 %253, %388
  %417 = and i32 %271, %255
  %418 = xor i32 %358, %3
  %419 = shl i32 %418, 1
  %420 = or i32 %288, %266
  %421 = or i32 %282, %288
  %422 = and i32 %327, %288
  %423 = xor i32 %297, %275
  %424 = and i32 %271, %281
  %425 = or i32 %297, %281
  %426 = xor i32 %282, %279
  %427 = or i32 %256, %5
  %428 = or i32 %278, %266
  %429 = and i32 %305, %285
  %430 = xor i32 %322, %4
  %431 = or i32 %301, %430
  %432 = xor i32 %278, %4
  %433 = and i32 %390, %5
  %434 = or i32 %255, %358
  %435 = or i32 %285, %356
  %436 = or i32 %373, %266
  %437 = or i32 %333, %256
  %438 = xor i32 %297, %295
  %439 = and i32 %279, %4
  %440 = xor i32 %253, %327
  %441 = or i32 %287, %282
  %442 = and i32 %288, %390
  %443 = and i32 %271, %305
  %444 = or i32 %373, %4
  %445 = or i32 %271, %388
  %446 = add i32 %255, 1
  %447 = and i32 %288, %4
  %448 = or i32 %288, %388
  %449 = xor i32 %273, %13
  %450 = or i32 %262, %4
  %451 = and i32 %294, %266
  %452 = and i32 %278, %266
  %453 = shl i32 %452, 4
  %454 = and i32 %294, %4
  %455 = mul i32 %454, -13
  %456 = and i32 %278, %4
  %457 = mul i32 %456, 15
  %458 = and i32 %373, %266
  %459 = mul i32 %267, 6
  %460 = and i32 %373, %4
  %461 = sub i32 %232, %243
  %462 = add i32 %461, %191
  %463 = add i32 %462, %141
  %464 = add i32 %463, %444
  %465 = sub i32 %464, %451
  %466 = add i32 %465, %422
  %467 = mul i32 %466, 3
  %468 = sub i32 %156, %154
  %469 = add i32 %468, %195
  %470 = sub i32 %469, %162
  %471 = add i32 %470, %341
  %472 = add i32 %471, %458
  %473 = add i32 %472, %460
  %474 = mul i32 %473, 5
  %475 = add i32 %218, %231
  %476 = add i32 %475, %147
  %477 = add i32 %476, %417
  %478 = add i32 %477, %391
  %479 = add i32 %478, %395
  %480 = shl i32 %479, 2
  %481 = sub i32 %261, %244
  %482 = mul i32 %481, 10
  %483 = add i32 %83, -1
  %484 = add i32 %483, %19
  %485 = add i32 %484, %58
  %486 = add i32 %485, %93
  %487 = add i32 %486, %60
  %488 = add i32 %487, %4
  %489 = add i32 %488, %172
  %490 = add i32 %489, %169
  %491 = add i32 %490, %134
  %492 = add i32 %491, %88
  %493 = add i32 %492, %56
  %494 = add i32 %493, %55
  %495 = add i32 %494, %52
  %496 = add i32 %495, %29
  %497 = add i32 %496, %433
  %498 = add i32 %497, %410
  %499 = add i32 %498, %288
  %500 = add i32 %499, %294
  %501 = add i32 %500, %49
  %502 = add i32 %501, %407
  %503 = add i32 %502, %423
  %504 = add i32 %503, %383
  %505 = add i32 %504, %371
  %506 = add i32 %505, %342
  %507 = add i32 %506, %293
  %508 = shl i32 %507, 1
  %509 = sub i32 1, %0
  %510 = sub i32 %509, %0
  %511 = add i32 %510, %8
  %512 = add i32 %511, 2
  %513 = add i32 %512, %8
  %514 = add i32 %513, %107
  %515 = add i32 %514, %33
  %516 = add i32 %515, %59
  %517 = add i32 %516, %16
  %518 = add i32 %517, %17
  %519 = add i32 %518, %36
  %520 = sub i32 %519, %57
  %521 = add i32 %520, %44
  %522 = sub i32 %521, %106
  %523 = sub i32 %522, %108
  %524 = sub i32 %523, %113
  %525 = sub i32 %524, %10
  %526 = add i32 %525, %89
  %527 = add i32 %526, %118
  %528 = sub i32 %527, %125
  %529 = add i32 %528, %129
  %530 = add i32 %529, %130
  %531 = add i32 %530, %140
  %532 = sub i32 %531, %151
  %533 = sub i32 %532, %173
  %534 = sub i32 %533, %179
  %535 = add i32 %534, %180
  %536 = sub i32 %535, %185
  %537 = sub i32 %536, %186
  %538 = sub i32 %537, %73
  %539 = sub i32 %538, %199
  %540 = add i32 %539, %204
  %541 = add i32 %540, %61
  %542 = sub i32 %541, %214
  %543 = add i32 %542, %217
  %544 = add i32 %543, %281
  %545 = sub i32 %544, %22
  %546 = sub i32 %545, %25
  %547 = add i32 %546, %27
  %548 = add i32 %547, %28
  %549 = sub i32 %548, %31
  %550 = add i32 %549, %32
  %551 = add i32 %550, %43
  %552 = sub i32 %551, %62
  %553 = sub i32 %552, %67
  %554 = add i32 %553, %77
  %555 = sub i32 %554, %80
  %556 = sub i32 %555, %81
  %557 = sub i32 %556, %82
  %558 = add i32 %557, %84
  %559 = sub i32 %558, %87
  %560 = sub i32 %559, %90
  %561 = sub i32 %560, %91
  %562 = add i32 %561, %92
  %563 = add i32 %562, %94
  %564 = add i32 %563, %97
  %565 = add i32 %564, %98
  %566 = add i32 %565, %99
  %567 = add i32 %566, %105
  %568 = sub i32 %567, %109
  %569 = sub i32 %568, %110
  %570 = add i32 %569, %112
  %571 = add i32 %570, %115
  %572 = add i32 %571, %116
  %573 = add i32 %572, %117
  %574 = sub i32 %573, %120
  %575 = add i32 %574, %121
  %576 = sub i32 %575, %122
  %577 = add i32 %576, %123
  %578 = add i32 %577, %124
  %579 = sub i32 %578, %126
  %580 = add i32 %579, %127
  %581 = sub i32 %580, %128
  %582 = add i32 %581, %132
  %583 = sub i32 %582, %133
  %584 = add i32 %583, %100
  %585 = sub i32 %584, %135
  %586 = add i32 %585, %136
  %587 = sub i32 %586, %137
  %588 = add i32 %587, %142
  %589 = add i32 %588, %143
  %590 = sub i32 %589, %144
  %591 = sub i32 %590, %145
  %592 = add i32 %591, %146
  %593 = sub i32 %592, %47
  %594 = sub i32 %593, %148
  %595 = add i32 %594, %149
  %596 = add i32 %595, %150
  %597 = add i32 %596, %153
  %598 = sub i32 %597, %155
  %599 = sub i32 %598, %157
  %600 = sub i32 %599, %160
  %601 = add i32 %600, %161
  %602 = add i32 %601, %168
  %603 = add i32 %602, %170
  %604 = add i32 %603, %171
  %605 = add i32 %604, %174
  %606 = sub i32 %605, %178
  %607 = sub i32 %606, %181
  %608 = sub i32 %607, %187
  %609 = add i32 %608, %188
  %610 = add i32 %609, %189
  %611 = add i32 %610, %190
  %612 = sub i32 %611, %192
  %613 = sub i32 %612, %194
  %614 = sub i32 %613, %196
  %615 = add i32 %614, %197
  %616 = add i32 %615, %198
  %617 = sub i32 %616, %200
  %618 = add i32 %617, %201
  %619 = sub i32 %618, %205
  %620 = add i32 %619, %206
  %621 = sub i32 %620, %207
  %622 = sub i32 %621, %209
  %623 = sub i32 %622, %210
  %624 = sub i32 %623, %211
  %625 = sub i32 %624, %212
  %626 = add i32 %625, %213
  %627 = sub i32 %626, %68
  %628 = add i32 %627, %215
  %629 = sub i32 %628, %216
  %630 = sub i32 %629, %221
  %631 = add i32 %630, %222
  %632 = sub i32 %631, %228
  %633 = add i32 %632, %233
  %634 = sub i32 %633, %235
  %635 = add i32 %634, %236
  %636 = sub i32 %635, %237
  %637 = add i32 %636, %319
  %638 = sub i32 %637, %41
  %639 = sub i32 %638, %53
  %640 = add i32 %639, %66
  %641 = sub i32 %640, %69
  %642 = sub i32 %641, %72
  %643 = sub i32 %642, %76
  %644 = sub i32 %643, %79
  %645 = sub i32 %644, %96
  %646 = sub i32 %645, %102
  %647 = add i32 %646, %114
  %648 = sub i32 %647, %131
  %649 = sub i32 %648, %139
  %650 = sub i32 %649, %152
  %651 = sub i32 %650, %159
  %652 = sub i32 %651, %165
  %653 = add i32 %652, %167
  %654 = sub i32 %653, %177
  %655 = add i32 %654, %182
  %656 = sub i32 %655, %184
  %657 = sub i32 %656, %203
  %658 = sub i32 %657, %208
  %659 = add i32 %658, %225
  %660 = sub i32 %659, %227
  %661 = sub i32 %660, %230
  %662 = add i32 %661, %238
  %663 = add i32 %662, %240
  %664 = add i32 %663, %242
  %665 = add i32 %664, %246
  %666 = sub i32 %665, %247
  %667 = add i32 %666, %249
  %668 = sub i32 %667, %250
  %669 = add i32 %668, %5
  %670 = add i32 %669, %305
  %671 = sub i32 %670, %327
  %672 = add i32 %671, %357
  %673 = add i32 %672, %389
  %674 = sub i32 %673, %13
  %675 = add i32 %674, %255
  %676 = add i32 %675, %446
  %677 = sub i32 %676, %220
  %678 = sub i32 %677, %284
  %679 = sub i32 %678, %291
  %680 = sub i32 %679, %328
  %681 = add i32 %680, %330
  %682 = add i32 %681, %340
  %683 = add i32 %682, %355
  %684 = sub i32 %683, %260
  %685 = sub i32 %684, %392
  %686 = sub i32 %685, %253
  %687 = sub i32 %686, %403
  %688 = add i32 %687, %295
  %689 = sub i32 %688, %427
  %690 = add i32 %689, %279
  %691 = sub i32 %690, %104
  %692 = sub i32 %691, %252
  %693 = add i32 %692, %257
  %694 = sub i32 %693, %258
  %695 = add i32 %694, %259
  %696 = sub i32 %695, %270
  %697 = add i32 %696, %272
  %698 = add i32 %697, %274
  %699 = sub i32 %698, %280
  %700 = add i32 %699, %286
  %701 = sub i32 %700, %292
  %702 = add i32 %701, %296
  %703 = sub i32 %702, %299
  %704 = sub i32 %703, %304
  %705 = sub i32 %704, %306
  %706 = add i32 %705, %307
  %707 = sub i32 %706, %308
  %708 = add i32 %707, %309
  %709 = add i32 %708, %310
  %710 = sub i32 %709, %312
  %711 = sub i32 %710, %313
  %712 = sub i32 %711, %316
  %713 = add i32 %712, %317
  %714 = add i32 %713, %318
  %715 = sub i32 %714, %320
  %716 = sub i32 %715, %302
  %717 = add i32 %716, %329
  %718 = sub i32 %717, %331
  %719 = sub i32 %718, %332
  %720 = add i32 %719, %334
  %721 = sub i32 %720, %337
  %722 = sub i32 %721, %344
  %723 = add i32 %722, %345
  %724 = sub i32 %723, %346
  %725 = sub i32 %724, %347
  %726 = sub i32 %725, %348
  %727 = sub i32 %726, %351
  %728 = sub i32 %727, %352
  %729 = sub i32 %728, %314
  %730 = sub i32 %729, %359
  %731 = sub i32 %730, %363
  %732 = add i32 %731, %364
  %733 = sub i32 %732, %365
  %734 = add i32 %733, %369
  %735 = sub i32 %734, %370
  %736 = add i32 %735, %372
  %737 = add i32 %736, %349
  %738 = add i32 %737, %378
  %739 = add i32 %738, %379
  %740 = add i32 %739, %380
  %741 = sub i32 %740, %381
  %742 = sub i32 %741, %382
  %743 = add i32 %742, %384
  %744 = add i32 %743, %385
  %745 = sub i32 %744, %386
  %746 = add i32 %745, %387
  %747 = sub i32 %746, %393
  %748 = sub i32 %747, %399
  %749 = add i32 %748, %400
  %750 = add i32 %749, %404
  %751 = add i32 %750, %408
  %752 = sub i32 %751, %409
  %753 = sub i32 %752, %413
  %754 = sub i32 %753, %416
  %755 = sub i32 %754, %420
  %756 = sub i32 %755, %421
  %757 = sub i32 %756, %424
  %758 = add i32 %757, %425
  %759 = sub i32 %758, %426
  %760 = sub i32 %759, %428
  %761 = sub i32 %760, %429
  %762 = add i32 %761, %432
  %763 = add i32 %762, %434
  %764 = add i32 %763, %435
  %765 = add i32 %764, %436
  %766 = add i32 %765, %437
  %767 = sub i32 %766, %438
  %768 = add i32 %767, %439
  %769 = sub i32 %768, %440
  %770 = sub i32 %769, %441
  %771 = sub i32 %770, %442
  %772 = sub i32 %771, %443
  %773 = sub i32 %772, %445
  %774 = add i32 %773, %447
  %775 = sub i32 %774, %448
  %776 = sub i32 %775, %449
  %777 = sub i32 %776, %450
  %778 = add i32 %777, %265
  %779 = sub i32 %778, %269
  %780 = sub i32 %779, %277
  %781 = sub i32 %780, %290
  %782 = add i32 %781, %303
  %783 = add i32 %782, %315
  %784 = add i32 %783, %324
  %785 = sub i32 %784, %326
  %786 = sub i32 %785, %339
  %787 = sub i32 %786, %350
  %788 = sub i32 %787, %354
  %789 = add i32 %788, %361
  %790 = sub i32 %789, %375
  %791 = sub i32 %790, %377
  %792 = add i32 %791, %398
  %793 = sub i32 %792, %402
  %794 = sub i32 %793, %406
  %795 = sub i32 %794, %412
  %796 = sub i32 %795, %415
  %797 = sub i32 %796, %419
  %798 = add i32 %797, %431
  %799 = add i32 %798, %453
  %800 = add i32 %799, %455
  %801 = add i32 %800, %457
  %802 = add i32 %801, %459
  %803 = sub i32 %802, %336
  %804 = add i32 %803, %482
  %805 = sub i32 %804, %368
  %806 = add i32 %805, %467
  %807 = add i32 %806, %474
  %808 = add i32 %807, %480
  %809 = add i32 %808, %508
  %810 = icmp eq i32 %15, %809
  %811 = select i1 %810, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %812 = tail call i32 @puts(i8* nonnull dereferenceable(1) %811)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
