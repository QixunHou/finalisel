digraph "DFG for'main' function" {
	Node0x6609a8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x660a28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x660ab8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x660b18[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x660bc8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x660ff8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6610d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x6611d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x661298[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x661348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x661408[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x6614b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x65ba90[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x6616b8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x662628[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x662c98[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x662cf8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x662d70[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x662de0[shape=record, label="  %15 = xor i32 %11, %14"];
	Node0x662e50[shape=record, label="  %16 = mul i32 %15, -4"];
	Node0x662ec0[shape=record, label="  %17 = sub i32 %16, %13"];
	Node0x662f30[shape=record, label="  %18 = or i32 %13, %10"];
	Node0x662fa0[shape=record, label="  %19 = sub i32 %17, %18"];
	Node0x663010[shape=record, label="  %20 = or i32 %11, %14"];
	Node0x663080[shape=record, label="  %21 = and i32 %11, %14"];
	Node0x6630f0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x663160[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x6631d0[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x663240[shape=record, label="  %25 = shl i32 %20, 1"];
	Node0x6632b0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x663320[shape=record, label="  %27 = shl i32 %24, 1"];
	Node0x663390[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0x663400[shape=record, label="  %29 = xor i32 %18, -1"];
	Node0x663470[shape=record, label="  %30 = mul i32 %29, 3"];
	Node0x6634e0[shape=record, label="  %31 = xor i32 %13, -1"];
	Node0x663550[shape=record, label="  %32 = and i32 %10, %31"];
	Node0x6635c0[shape=record, label="  %33 = and i32 %13, %10"];
	Node0x663630[shape=record, label="  %34 = xor i32 %11, 2147483647"];
	Node0x6636a0[shape=record, label="  %35 = and i32 %34, %12"];
	Node0x663710[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x663780[shape=record, label="  %37 = add i32 %12, 6"];
	Node0x6637f0[shape=record, label="  %38 = add i32 %37, %20"];
	Node0x663860[shape=record, label="  %39 = add i32 %38, %24"];
	Node0x6638d0[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x663940[shape=record, label="  %41 = sub i32 %40, %27"];
	Node0x6639b0[shape=record, label="  %42 = add i32 %41, %28"];
	Node0x663a20[shape=record, label="  %43 = add i32 %42, %32"];
	Node0x663a90[shape=record, label="  %44 = add i32 %43, %33"];
	Node0x663b00[shape=record, label="  %45 = add i32 %44, %36"];
	Node0x663b70[shape=record, label="  %46 = sub i32 %45, %23"];
	Node0x663be0[shape=record, label="  %47 = add i32 %46, %26"];
	Node0x663c50[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x663cc0[shape=record, label="  %49 = icmp eq i32 %19, %48"];
	Node0x6008b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x663d50[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0x663ff8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x664158[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x664268[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x664378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x664438[shape=record, label="  ret i32 0"];
	Node0x6609a8 -> Node0x660a28;
	Node0x660a28 -> Node0x660ab8;
	Node0x660ab8 -> Node0x660b18;
	Node0x660b18 -> Node0x660bc8;
	Node0x660bc8 -> Node0x660ff8;
	Node0x660ff8 -> Node0x6610d8;
	Node0x6610d8 -> Node0x6611d8;
	Node0x6611d8 -> Node0x661298;
	Node0x661298 -> Node0x661348;
	Node0x661348 -> Node0x661408;
	Node0x661408 -> Node0x6614b8;
	Node0x6614b8 -> Node0x65ba90;
	Node0x65ba90 -> Node0x6616b8;
	Node0x6616b8 -> Node0x662628;
	Node0x662628 -> Node0x662c98;
	Node0x662c98 -> Node0x662cf8;
	Node0x662cf8 -> Node0x662d70;
	Node0x662d70 -> Node0x662de0;
	Node0x662de0 -> Node0x662e50;
	Node0x662e50 -> Node0x662ec0;
	Node0x662ec0 -> Node0x662f30;
	Node0x662f30 -> Node0x662fa0;
	Node0x662fa0 -> Node0x663010;
	Node0x663010 -> Node0x663080;
	Node0x663080 -> Node0x6630f0;
	Node0x6630f0 -> Node0x663160;
	Node0x663160 -> Node0x6631d0;
	Node0x6631d0 -> Node0x663240;
	Node0x663240 -> Node0x6632b0;
	Node0x6632b0 -> Node0x663320;
	Node0x663320 -> Node0x663390;
	Node0x663390 -> Node0x663400;
	Node0x663400 -> Node0x663470;
	Node0x663470 -> Node0x6634e0;
	Node0x6634e0 -> Node0x663550;
	Node0x663550 -> Node0x6635c0;
	Node0x6635c0 -> Node0x663630;
	Node0x663630 -> Node0x6636a0;
	Node0x6636a0 -> Node0x663710;
	Node0x663710 -> Node0x663780;
	Node0x663780 -> Node0x6637f0;
	Node0x6637f0 -> Node0x663860;
	Node0x663860 -> Node0x6638d0;
	Node0x6638d0 -> Node0x663940;
	Node0x663940 -> Node0x6639b0;
	Node0x6639b0 -> Node0x663a20;
	Node0x663a20 -> Node0x663a90;
	Node0x663a90 -> Node0x663b00;
	Node0x663b00 -> Node0x663b70;
	Node0x663b70 -> Node0x663be0;
	Node0x663be0 -> Node0x663c50;
	Node0x663c50 -> Node0x663cc0;
	Node0x663cc0 -> Node0x6008b8;
	Node0x6008b8 -> Node0x663d50;
	Node0x663d50 -> Node0x663ff8;
	Node0x663ff8 -> Node0x664158;
	Node0x664158 -> Node0x664268;
	Node0x664268 -> Node0x664378;
	Node0x664378 -> Node0x664438;
edge [color=red]
	Node0x6609a8 -> Node0x660bc8;
	Node0x660bc8 -> Node0x660ff8;
	Node0x660a28 -> Node0x6610d8;
	Node0x6610d8 -> Node0x6611d8;
	Node0x660ab8 -> Node0x661298;
	Node0x661298 -> Node0x661348;
	Node0x660b18 -> Node0x661408;
	Node0x661408 -> Node0x6614b8;
	Node0x6609a8 -> Node0x65ba90;
	Node0x660a28 -> Node0x65ba90;
	Node0x660ab8 -> Node0x65ba90;
	Node0x660b18 -> Node0x65ba90;
	Node0x6609a8 -> Node0x6616b8;
	Node0x660a28 -> Node0x662628;
	Node0x660ab8 -> Node0x662c98;
	Node0x660b18 -> Node0x662cf8;
	Node0x662c98 -> Node0x662d70;
	Node0x662628 -> Node0x662de0;
	Node0x662d70 -> Node0x662de0;
	Node0x662de0 -> Node0x662e50;
	Node0x662e50 -> Node0x662ec0;
	Node0x662cf8 -> Node0x662ec0;
	Node0x662cf8 -> Node0x662f30;
	Node0x6616b8 -> Node0x662f30;
	Node0x662ec0 -> Node0x662fa0;
	Node0x662f30 -> Node0x662fa0;
	Node0x662628 -> Node0x663010;
	Node0x662d70 -> Node0x663010;
	Node0x662628 -> Node0x663080;
	Node0x662d70 -> Node0x663080;
	Node0x663080 -> Node0x6630f0;
	Node0x6630f0 -> Node0x663160;
	Node0x662c98 -> Node0x6631d0;
	Node0x662628 -> Node0x6631d0;
	Node0x663010 -> Node0x663240;
	Node0x663240 -> Node0x6632b0;
	Node0x6631d0 -> Node0x663320;
	Node0x662cf8 -> Node0x663390;
	Node0x6616b8 -> Node0x663390;
	Node0x662f30 -> Node0x663400;
	Node0x663400 -> Node0x663470;
	Node0x662cf8 -> Node0x6634e0;
	Node0x6616b8 -> Node0x663550;
	Node0x6634e0 -> Node0x663550;
	Node0x662cf8 -> Node0x6635c0;
	Node0x6616b8 -> Node0x6635c0;
	Node0x662628 -> Node0x663630;
	Node0x663630 -> Node0x6636a0;
	Node0x662c98 -> Node0x6636a0;
	Node0x6636a0 -> Node0x663710;
	Node0x662c98 -> Node0x663780;
	Node0x663780 -> Node0x6637f0;
	Node0x663010 -> Node0x6637f0;
	Node0x6637f0 -> Node0x663860;
	Node0x6631d0 -> Node0x663860;
	Node0x663860 -> Node0x6638d0;
	Node0x6630f0 -> Node0x6638d0;
	Node0x6638d0 -> Node0x663940;
	Node0x663320 -> Node0x663940;
	Node0x663940 -> Node0x6639b0;
	Node0x663390 -> Node0x6639b0;
	Node0x6639b0 -> Node0x663a20;
	Node0x663550 -> Node0x663a20;
	Node0x663a20 -> Node0x663a90;
	Node0x6635c0 -> Node0x663a90;
	Node0x663a90 -> Node0x663b00;
	Node0x663710 -> Node0x663b00;
	Node0x663b00 -> Node0x663b70;
	Node0x663160 -> Node0x663b70;
	Node0x663b70 -> Node0x663be0;
	Node0x6632b0 -> Node0x663be0;
	Node0x663be0 -> Node0x663c50;
	Node0x663470 -> Node0x663c50;
	Node0x662fa0 -> Node0x663cc0;
	Node0x663c50 -> Node0x663cc0;
	Node0x663cc0 -> Node0x6008b8;
	Node0x6008b8 -> Node0x663d50;
	Node0x661408 -> Node0x663ff8;
	Node0x661298 -> Node0x664158;
	Node0x6610d8 -> Node0x664268;
	Node0x660bc8 -> Node0x664378;
}
