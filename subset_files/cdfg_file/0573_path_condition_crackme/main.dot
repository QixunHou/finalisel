digraph "DFG for'main' function" {
	Node0xf9adc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf9ae48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf9aed8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xf9b338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xf9b418[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xf9b538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf9b770[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xf9b828[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf9c798[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf9ce20[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xf9ce90[shape=record, label="  %9 = or i32 %6, %8"];
	Node0xf9cf00[shape=record, label="  %10 = sub i32 %9, %7"];
	Node0xf9cf70[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0xf9cfe0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0xf9d050[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xf9d0c0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0xf9d130[shape=record, label="  %15 = or i32 %7, %6"];
	Node0xf9d1a0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0xf9d210[shape=record, label="  %17 = shl i32 %9, 1"];
	Node0xf9d280[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0xf9d2f0[shape=record, label="  %19 = and i32 %6, %8"];
	Node0xf9d360[shape=record, label="  %20 = shl i32 %13, 1"];
	Node0xf9d3d0[shape=record, label="  %21 = add i32 %6, %16"];
	Node0xf9d440[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0xf9d4b0[shape=record, label="  %23 = add i32 %6, 4"];
	Node0xf9d520[shape=record, label="  %24 = add i32 %23, %7"];
	Node0xf9d590[shape=record, label="  %25 = add i32 %24, %12"];
	Node0xf9d600[shape=record, label="  %26 = add i32 %25, %14"];
	Node0xf9d670[shape=record, label="  %27 = sub i32 %26, %11"];
	Node0xf9d6e0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0xf9d750[shape=record, label="  %29 = sub i32 %28, %20"];
	Node0xf9d7c0[shape=record, label="  %30 = add i32 %29, %18"];
	Node0xf9d830[shape=record, label="  %31 = add i32 %30, %22"];
	Node0xf9d8a0[shape=record, label="  %32 = icmp eq i32 %10, %31"];
	Node0xf3b9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf9db40[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0xf9dd98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xf9def8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xf9dfb8[shape=record, label="  ret i32 0"];
	Node0xf9adc8 -> Node0xf9ae48;
	Node0xf9ae48 -> Node0xf9aed8;
	Node0xf9aed8 -> Node0xf9b338;
	Node0xf9b338 -> Node0xf9b418;
	Node0xf9b418 -> Node0xf9b538;
	Node0xf9b538 -> Node0xf9b770;
	Node0xf9b770 -> Node0xf9b828;
	Node0xf9b828 -> Node0xf9c798;
	Node0xf9c798 -> Node0xf9ce20;
	Node0xf9ce20 -> Node0xf9ce90;
	Node0xf9ce90 -> Node0xf9cf00;
	Node0xf9cf00 -> Node0xf9cf70;
	Node0xf9cf70 -> Node0xf9cfe0;
	Node0xf9cfe0 -> Node0xf9d050;
	Node0xf9d050 -> Node0xf9d0c0;
	Node0xf9d0c0 -> Node0xf9d130;
	Node0xf9d130 -> Node0xf9d1a0;
	Node0xf9d1a0 -> Node0xf9d210;
	Node0xf9d210 -> Node0xf9d280;
	Node0xf9d280 -> Node0xf9d2f0;
	Node0xf9d2f0 -> Node0xf9d360;
	Node0xf9d360 -> Node0xf9d3d0;
	Node0xf9d3d0 -> Node0xf9d440;
	Node0xf9d440 -> Node0xf9d4b0;
	Node0xf9d4b0 -> Node0xf9d520;
	Node0xf9d520 -> Node0xf9d590;
	Node0xf9d590 -> Node0xf9d600;
	Node0xf9d600 -> Node0xf9d670;
	Node0xf9d670 -> Node0xf9d6e0;
	Node0xf9d6e0 -> Node0xf9d750;
	Node0xf9d750 -> Node0xf9d7c0;
	Node0xf9d7c0 -> Node0xf9d830;
	Node0xf9d830 -> Node0xf9d8a0;
	Node0xf9d8a0 -> Node0xf3b9d8;
	Node0xf3b9d8 -> Node0xf9db40;
	Node0xf9db40 -> Node0xf9dd98;
	Node0xf9dd98 -> Node0xf9def8;
	Node0xf9def8 -> Node0xf9dfb8;
edge [color=red]
	Node0xf9adc8 -> Node0xf9aed8;
	Node0xf9aed8 -> Node0xf9b338;
	Node0xf9ae48 -> Node0xf9b418;
	Node0xf9b418 -> Node0xf9b538;
	Node0xf9adc8 -> Node0xf9b770;
	Node0xf9ae48 -> Node0xf9b770;
	Node0xf9adc8 -> Node0xf9b828;
	Node0xf9ae48 -> Node0xf9c798;
	Node0xf9c798 -> Node0xf9ce20;
	Node0xf9b828 -> Node0xf9ce90;
	Node0xf9ce20 -> Node0xf9ce90;
	Node0xf9ce90 -> Node0xf9cf00;
	Node0xf9c798 -> Node0xf9cf00;
	Node0xf9c798 -> Node0xf9cf70;
	Node0xf9b828 -> Node0xf9cf70;
	Node0xf9cf70 -> Node0xf9cfe0;
	Node0xf9c798 -> Node0xf9d050;
	Node0xf9b828 -> Node0xf9d050;
	Node0xf9d050 -> Node0xf9d0c0;
	Node0xf9c798 -> Node0xf9d130;
	Node0xf9b828 -> Node0xf9d130;
	Node0xf9d130 -> Node0xf9d1a0;
	Node0xf9ce90 -> Node0xf9d210;
	Node0xf9d210 -> Node0xf9d280;
	Node0xf9b828 -> Node0xf9d2f0;
	Node0xf9ce20 -> Node0xf9d2f0;
	Node0xf9d050 -> Node0xf9d360;
	Node0xf9b828 -> Node0xf9d3d0;
	Node0xf9d1a0 -> Node0xf9d3d0;
	Node0xf9d3d0 -> Node0xf9d440;
	Node0xf9b828 -> Node0xf9d4b0;
	Node0xf9d4b0 -> Node0xf9d520;
	Node0xf9c798 -> Node0xf9d520;
	Node0xf9d520 -> Node0xf9d590;
	Node0xf9cfe0 -> Node0xf9d590;
	Node0xf9d590 -> Node0xf9d600;
	Node0xf9d0c0 -> Node0xf9d600;
	Node0xf9d600 -> Node0xf9d670;
	Node0xf9cf70 -> Node0xf9d670;
	Node0xf9d670 -> Node0xf9d6e0;
	Node0xf9d2f0 -> Node0xf9d6e0;
	Node0xf9d6e0 -> Node0xf9d750;
	Node0xf9d360 -> Node0xf9d750;
	Node0xf9d750 -> Node0xf9d7c0;
	Node0xf9d280 -> Node0xf9d7c0;
	Node0xf9d7c0 -> Node0xf9d830;
	Node0xf9d440 -> Node0xf9d830;
	Node0xf9cf00 -> Node0xf9d8a0;
	Node0xf9d830 -> Node0xf9d8a0;
	Node0xf9d8a0 -> Node0xf3b9d8;
	Node0xf3b9d8 -> Node0xf9db40;
	Node0xf9b418 -> Node0xf9dd98;
	Node0xf9aed8 -> Node0xf9def8;
}
