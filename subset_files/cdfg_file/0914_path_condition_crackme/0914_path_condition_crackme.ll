; ModuleID = '../.././c_source_file/0914_path_condition_crackme.c'
source_filename = "../.././c_source_file/0914_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %2, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %8, %1
  %10 = mul i32 %9, -2
  %11 = xor i32 %5, %4
  %12 = xor i32 %11, -1
  %13 = and i32 %12, %3
  %14 = sub i32 %10, %13
  %15 = xor i32 %2, -1
  %16 = or i32 %15, %0
  %17 = xor i32 %1, %0
  %18 = xor i32 %17, -1
  %19 = and i32 %16, %18
  %20 = shl i32 %19, 1
  %21 = xor i32 %1, -1
  %22 = xor i32 %16, -1
  %23 = or i32 %22, %21
  %24 = shl i32 %23, 2
  %25 = or i32 %21, %0
  %26 = xor i32 %2, %0
  %27 = and i32 %26, %25
  %28 = or i32 %1, %0
  %29 = xor i32 %28, -1
  %30 = xor i32 %26, -1
  %31 = or i32 %30, %29
  %32 = xor i32 %0, -1
  %33 = xor i32 %2, %1
  %34 = xor i32 %33, -1
  %35 = or i32 %34, %32
  %36 = xor i32 %29, %2
  %37 = and i32 %18, %2
  %38 = shl i32 %37, 1
  %39 = and i32 %2, %0
  %40 = xor i32 %39, -1
  %41 = and i32 %1, %0
  %42 = or i32 %41, %15
  %43 = or i32 %8, %21
  %44 = or i32 %15, %1
  %45 = or i32 %44, %32
  %46 = and i32 %40, %1
  %47 = and i32 %21, %0
  %48 = or i32 %47, %34
  %49 = or i32 %34, %0
  %50 = and i32 %44, %0
  %51 = xor i32 %47, -1
  %52 = and i32 %26, %51
  %53 = shl i32 %52, 1
  %54 = xor i32 %41, -1
  %55 = and i32 %15, %54
  %56 = or i32 %2, %1
  %57 = or i32 %56, %32
  %58 = or i32 %41, %30
  %59 = and i32 %26, %17
  %60 = shl i32 %59, 1
  %61 = xor i32 %16, %1
  %62 = and i32 %2, %1
  %63 = xor i32 %62, -1
  %64 = xor i32 %63, %0
  %65 = and i32 %62, %0
  %66 = xor i32 %33, %0
  %67 = xor i32 %65, %66
  %68 = xor i32 %44, -1
  %69 = add i32 %44, 1
  %70 = xor i32 %39, %25
  %71 = and i32 %25, %2
  %72 = and i32 %26, %18
  %73 = xor i32 %56, %32
  %74 = xor i32 %73, %65
  %75 = and i32 %30, %54
  %76 = xor i32 %56, -1
  %77 = or i32 %41, %76
  %78 = xor i32 %25, -1
  %79 = or i32 %33, %78
  %80 = or i32 %26, %21
  %81 = shl i32 %80, 1
  %82 = and i32 %21, %2
  %83 = and i32 %82, %0
  %84 = or i32 %33, %0
  %85 = xor i32 %83, %84
  %86 = add i32 %26, 1
  %87 = and i32 %7, %1
  %88 = or i32 %15, %29
  %89 = and i32 %15, %0
  %90 = xor i32 %89, %1
  %91 = shl i32 %90, 1
  %92 = xor i32 %91, -2
  %93 = or i32 %39, %21
  %94 = or i32 %22, %18
  %95 = xor i32 %68, %0
  %96 = or i32 %89, %17
  %97 = and i32 %34, %51
  %98 = or i32 %76, %0
  %99 = xor i32 %65, %98
  %100 = and i32 %62, %32
  %101 = and i32 %33, %0
  %102 = or i32 %100, %101
  %103 = and i32 %17, %15
  %104 = shl i32 %39, 1
  %105 = and i32 %15, %1
  %106 = or i32 %105, %32
  %107 = or i32 %26, %1
  %108 = xor i32 %40, %1
  %109 = and i32 %7, %21
  %110 = or i32 %47, %2
  %111 = xor i32 %105, -1
  %112 = and i32 %111, %32
  %113 = and i32 %28, %34
  %114 = and i32 %28, %15
  %115 = or i32 %33, %32
  %116 = or i32 %56, %0
  %117 = or i32 %34, %29
  %118 = and i32 %26, %1
  %119 = and i32 %28, %2
  %120 = add i32 %17, 1
  %121 = and i32 %82, %32
  %122 = or i32 %21, %2
  %123 = and i32 %122, %0
  %124 = xor i32 %123, -1
  %125 = xor i32 %121, %124
  %126 = and i32 %33, %54
  %127 = or i32 %22, %1
  %128 = xor i32 %122, -1
  %129 = or i32 %128, %0
  %130 = xor i32 %83, %129
  %131 = and i32 %30, %1
  %132 = or i32 %17, %22
  %133 = or i32 %89, %1
  %134 = xor i32 %105, %0
  %135 = xor i32 %34, %0
  %136 = shl i32 %135, 1
  %137 = or i32 %76, %32
  %138 = and i32 %7, %17
  %139 = or i32 %39, %78
  %140 = xor i32 %22, %1
  %141 = and i32 %7, %18
  %142 = and i32 %40, %21
  %143 = or i32 %39, %105
  %144 = or i32 %18, %2
  %145 = or i32 %33, %41
  %146 = or i32 %68, %0
  %147 = and i32 %30, %18
  %148 = or i32 %89, %21
  %149 = and i32 %16, %1
  %150 = or i32 %39, %17
  %151 = and i32 %25, %30
  %152 = or i32 %39, %18
  %153 = xor i32 %47, %111
  %154 = or i32 %8, %18
  %155 = xor i32 %25, %2
  %156 = or i32 %26, %78
  %157 = xor i32 %66, -1
  %158 = or i32 %65, %157
  %159 = and i32 %30, %21
  %160 = and i32 %76, %32
  %161 = and i32 %105, %32
  %162 = mul i32 %161, -30
  %163 = and i32 %76, %0
  %164 = and i32 %105, %0
  %165 = mul i32 %164, -24
  %166 = and i32 %68, %32
  %167 = mul i32 %166, -11
  %168 = and i32 %68, %0
  %169 = mul i32 %65, -26
  %170 = xor i32 %5, -1
  %171 = or i32 %170, %3
  %172 = xor i32 %171, -1
  %173 = xor i32 %172, %4
  %174 = and i32 %170, %3
  %175 = xor i32 %174, -1
  %176 = and i32 %175, %4
  %177 = and i32 %4, %3
  %178 = or i32 %5, %4
  %179 = xor i32 %178, -1
  %180 = or i32 %177, %179
  %181 = and i32 %5, %4
  %182 = xor i32 %181, -1
  %183 = xor i32 %4, %3
  %184 = xor i32 %183, -1
  %185 = and i32 %182, %184
  %186 = shl i32 %185, 1
  %187 = or i32 %12, %3
  %188 = and i32 %171, %4
  %189 = shl i32 %188, 1
  %190 = or i32 %5, %3
  %191 = xor i32 %190, -1
  %192 = or i32 %191, %4
  %193 = xor i32 %3, -1
  %194 = and i32 %193, %5
  %195 = and i32 %194, %4
  %196 = xor i32 %4, -1
  %197 = or i32 %193, %5
  %198 = and i32 %197, %196
  %199 = xor i32 %195, -1
  %200 = xor i32 %198, %199
  %201 = xor i32 %181, %3
  %202 = or i32 %193, %4
  %203 = xor i32 %202, -1
  %204 = xor i32 %5, %3
  %205 = xor i32 %204, -1
  %206 = or i32 %205, %203
  %207 = and i32 %5, %3
  %208 = xor i32 %207, -1
  %209 = and i32 %208, %196
  %210 = and i32 %170, %4
  %211 = or i32 %210, %193
  %212 = or i32 %174, %196
  %213 = xor i32 %197, %4
  %214 = or i32 %195, %213
  %215 = or i32 %12, %193
  %216 = or i32 %181, %3
  %217 = xor i32 %205, %4
  %218 = and i32 %190, %4
  %219 = and i32 %202, %170
  %220 = shl i32 %219, 1
  %221 = or i32 %171, %196
  %222 = or i32 %184, %5
  %223 = xor i32 %202, %5
  %224 = and i32 %193, %4
  %225 = xor i32 %224, -1
  %226 = xor i32 %225, %5
  %227 = or i32 %4, %3
  %228 = xor i32 %227, %5
  %229 = xor i32 %210, -1
  %230 = and i32 %229, %3
  %231 = xor i32 %229, %3
  %232 = or i32 %11, %183
  %233 = or i32 %179, %193
  %234 = or i32 %204, %177
  %235 = xor i32 %234, -1
  %236 = or i32 %190, %4
  %237 = xor i32 %181, %202
  %238 = and i32 %11, %183
  %239 = add i32 %202, 1
  %240 = or i32 %204, %224
  %241 = shl i32 %240, 2
  %242 = xor i32 %208, %4
  %243 = and i32 %207, %4
  %244 = and i32 %190, %196
  %245 = xor i32 %243, -1
  %246 = xor i32 %244, %245
  %247 = or i32 %224, %5
  %248 = or i32 %177, %191
  %249 = and i32 %204, %196
  %250 = xor i32 %249, %245
  %251 = xor i32 %178, %177
  %252 = xor i32 %181, %227
  %253 = xor i32 %213, %199
  %254 = xor i32 %204, %4
  %255 = xor i32 %254, -1
  %256 = xor i32 %195, %255
  %257 = or i32 %224, %170
  %258 = xor i32 %174, %4
  %259 = add i32 %224, 1
  %260 = xor i32 %177, -1
  %261 = and i32 %260, %5
  %262 = shl i32 %261, 1
  %263 = or i32 %224, %12
  %264 = and i32 %208, %4
  %265 = or i32 %183, %5
  %266 = and i32 %227, %12
  %267 = xor i32 %227, -1
  %268 = or i32 %11, %267
  %269 = or i32 %207, %224
  %270 = and i32 %11, %202
  %271 = and i32 %225, %5
  %272 = and i32 %170, %184
  %273 = or i32 %181, %193
  %274 = and i32 %11, %184
  %275 = and i32 %182, %3
  %276 = or i32 %204, %4
  %277 = xor i32 %195, %276
  %278 = or i32 %183, %12
  %279 = or i32 %175, %4
  %280 = and i32 %204, %4
  %281 = and i32 %183, %170
  %282 = or i32 %177, %170
  %283 = or i32 %204, %203
  %284 = or i32 %174, %4
  %285 = or i32 %170, %4
  %286 = or i32 %204, %196
  %287 = xor i32 %190, %177
  %288 = shl i32 %287, 1
  %289 = xor i32 %203, %5
  %290 = xor i32 %285, -1
  %291 = xor i32 %290, %3
  %292 = and i32 %194, %196
  %293 = and i32 %197, %4
  %294 = xor i32 %293, -1
  %295 = xor i32 %292, %294
  %296 = and i32 %285, %3
  %297 = xor i32 %276, -1
  %298 = or i32 %195, %297
  %299 = or i32 %183, %179
  %300 = and i32 %12, %184
  %301 = or i32 %177, %5
  %302 = add i32 %3, 1
  %303 = or i32 %203, %5
  %304 = and i32 %11, %193
  %305 = xor i32 %190, %4
  %306 = xor i32 %305, %245
  %307 = xor i32 %210, %3
  %308 = and i32 %11, %3
  %309 = xor i32 %285, %3
  %310 = or i32 %11, %3
  %311 = or i32 %210, %3
  %312 = or i32 %243, %244
  %313 = and i32 %183, %182
  %314 = or i32 %175, %196
  %315 = xor i32 %224, %5
  %316 = and i32 %183, %229
  %317 = xor i32 %207, %4
  %318 = and i32 %229, %193
  %319 = or i32 %183, %290
  %320 = add i32 %181, 1
  %321 = and i32 %227, %205
  %322 = and i32 %170, %260
  %323 = shl i32 %210, 1
  %324 = or i32 %177, %12
  %325 = or i32 %170, %184
  %326 = xor i32 %191, %4
  %327 = add i32 %227, 1
  %328 = and i32 %183, %5
  %329 = and i32 %182, %193
  %330 = and i32 %285, %184
  %331 = and i32 %12, %225
  %332 = or i32 %243, %249
  %333 = xor i32 %260, %5
  %334 = and i32 %207, %196
  %335 = xor i32 %218, -1
  %336 = xor i32 %334, %335
  %337 = and i32 %205, %260
  %338 = xor i32 %177, %5
  %339 = or i32 %172, %4
  %340 = or i32 %11, %224
  %341 = shl i32 %340, 1
  %342 = xor i32 %224, %208
  %343 = or i32 %172, %196
  %344 = shl i32 %343, 1
  %345 = and i32 %12, %193
  %346 = and i32 %204, %260
  %347 = or i32 %181, %183
  %348 = and i32 %171, %196
  %349 = and i32 %229, %184
  %350 = or i32 %195, %254
  %351 = or i32 %210, %207
  %352 = or i32 %207, %4
  %353 = or i32 %290, %3
  %354 = and i32 %285, %183
  %355 = shl i32 %354, 1
  %356 = xor i32 %179, %3
  %357 = and i32 %178, %193
  %358 = or i32 %181, %184
  %359 = or i32 %205, %196
  %360 = or i32 %267, %5
  %361 = or i32 %171, %4
  %362 = or i32 %208, %4
  %363 = shl i32 %362, 1
  %364 = and i32 %285, %193
  %365 = or i32 %191, %196
  %366 = and i32 %178, %184
  %367 = add i32 %11, 1
  %368 = or i32 %183, %170
  %369 = and i32 %227, %170
  %370 = and i32 %170, %225
  %371 = and i32 %205, %4
  %372 = and i32 %205, %225
  %373 = or i32 %179, %184
  %374 = or i32 %177, %172
  %375 = or i32 %11, %184
  %376 = or i32 %11, %193
  %377 = or i32 %11, %203
  %378 = xor i32 %181, %175
  %379 = or i32 %243, %255
  %380 = shl i32 %379, 1
  %381 = xor i32 %224, %175
  %382 = and i32 %11, %227
  %383 = or i32 %292, %293
  %384 = shl i32 %383, 1
  %385 = and i32 %183, %12
  %386 = add i32 %183, 1
  %387 = or i32 %210, %183
  %388 = xor i32 %181, %190
  %389 = or i32 %195, %198
  %390 = or i32 %224, %205
  %391 = or i32 %170, %203
  %392 = or i32 %12, %203
  %393 = shl i32 %392, 1
  %394 = and i32 %202, %205
  %395 = or i32 %290, %184
  %396 = or i32 %181, %267
  %397 = or i32 %207, %196
  %398 = add i32 %177, 1
  %399 = or i32 %210, %172
  %400 = or i32 %205, %4
  %401 = and i32 %202, %5
  %402 = shl i32 %401, 1
  %403 = xor i32 %182, %3
  %404 = or i32 %290, %193
  %405 = xor i32 %267, %5
  %406 = and i32 %204, %202
  %407 = and i32 %11, %225
  %408 = xor i32 %292, %286
  %409 = or i32 %190, %196
  %410 = and i32 %191, %196
  %411 = shl i32 %410, 4
  %412 = and i32 %174, %196
  %413 = shl i32 %412, 1
  %414 = and i32 %191, %4
  %415 = shl i32 %414, 1
  %416 = and i32 %174, %4
  %417 = and i32 %172, %196
  %418 = mul i32 %417, -7
  %419 = mul i32 %334, -12
  %420 = and i32 %172, %4
  %421 = mul i32 %243, -22
  %422 = sub i32 -2, %2
  %423 = add i32 %422, %42
  %424 = add i32 %423, %159
  %425 = add i32 %424, %145
  %426 = add i32 %425, %132
  %427 = add i32 %426, %94
  %428 = add i32 %427, %93
  %429 = add i32 %428, %72
  %430 = add i32 %429, %224
  %431 = add i32 %430, %227
  %432 = add i32 %431, %5
  %433 = add i32 %432, %11
  %434 = add i32 %433, %360
  %435 = add i32 %434, %315
  %436 = add i32 %435, %301
  %437 = add i32 %436, %282
  %438 = add i32 %437, %265
  %439 = add i32 %438, %247
  %440 = add i32 %439, %204
  %441 = add i32 %440, %375
  %442 = add i32 %441, %364
  %443 = add i32 %442, %349
  %444 = add i32 %443, %330
  %445 = add i32 %444, %310
  %446 = add i32 %445, %304
  %447 = add i32 %446, %248
  %448 = add i32 %447, %277
  %449 = shl i32 %448, 1
  %450 = add i32 %33, %40
  %451 = add i32 %450, %142
  %452 = add i32 %451, %134
  %453 = sub i32 %452, %75
  %454 = sub i32 %453, %370
  %455 = add i32 %454, %326
  %456 = sub i32 %455, %366
  %457 = add i32 %456, %274
  %458 = mul i32 %457, 5
  %459 = add i32 %43, %114
  %460 = add i32 %459, %348
  %461 = add i32 %460, %396
  %462 = add i32 %461, %347
  %463 = shl i32 %462, 2
  %464 = sub i32 %36, %168
  %465 = add i32 %464, %328
  %466 = add i32 %465, %226
  %467 = sub i32 %466, %251
  %468 = mul i32 %467, 3
  %469 = add i32 %163, %160
  %470 = mul i32 %469, -20
  %471 = shl i32 %0, 1
  %472 = add i32 %471, 2
  %473 = sub i32 %472, %47
  %474 = add i32 %473, %51
  %475 = add i32 %474, %120
  %476 = add i32 %475, %55
  %477 = add i32 %476, %69
  %478 = sub i32 %477, %71
  %479 = add i32 %478, %86
  %480 = sub i32 %479, %88
  %481 = sub i32 %480, %103
  %482 = sub i32 %481, %110
  %483 = add i32 %482, %63
  %484 = sub i32 %483, %119
  %485 = sub i32 %484, %89
  %486 = add i32 %485, %105
  %487 = add i32 %486, %144
  %488 = add i32 %487, %155
  %489 = add i32 %488, %44
  %490 = add i32 %489, %302
  %491 = sub i32 %490, %27
  %492 = add i32 %491, %31
  %493 = add i32 %492, %35
  %494 = sub i32 %493, %38
  %495 = sub i32 %494, %45
  %496 = sub i32 %495, %46
  %497 = add i32 %496, %48
  %498 = sub i32 %497, %49
  %499 = sub i32 %498, %50
  %500 = add i32 %499, %57
  %501 = add i32 %500, %58
  %502 = sub i32 %501, %61
  %503 = add i32 %502, %64
  %504 = add i32 %503, %70
  %505 = add i32 %504, %77
  %506 = sub i32 %505, %79
  %507 = sub i32 %506, %87
  %508 = add i32 %507, %95
  %509 = add i32 %508, %96
  %510 = add i32 %509, %97
  %511 = sub i32 %510, %104
  %512 = sub i32 %511, %106
  %513 = sub i32 %512, %107
  %514 = sub i32 %513, %108
  %515 = sub i32 %514, %109
  %516 = sub i32 %515, %112
  %517 = sub i32 %516, %113
  %518 = sub i32 %517, %115
  %519 = add i32 %518, %116
  %520 = add i32 %519, %117
  %521 = sub i32 %520, %118
  %522 = sub i32 %521, %98
  %523 = sub i32 %522, %126
  %524 = sub i32 %523, %127
  %525 = add i32 %524, %131
  %526 = add i32 %525, %133
  %527 = sub i32 %526, %137
  %528 = add i32 %527, %138
  %529 = sub i32 %528, %139
  %530 = add i32 %529, %140
  %531 = add i32 %530, %141
  %532 = add i32 %531, %143
  %533 = sub i32 %532, %146
  %534 = add i32 %533, %147
  %535 = sub i32 %534, %148
  %536 = add i32 %535, %149
  %537 = sub i32 %536, %150
  %538 = sub i32 %537, %151
  %539 = sub i32 %538, %152
  %540 = add i32 %539, %90
  %541 = add i32 %540, %153
  %542 = add i32 %541, %154
  %543 = sub i32 %542, %156
  %544 = add i32 %543, %100
  %545 = add i32 %544, 1
  %546 = sub i32 %545, %24
  %547 = add i32 %546, %20
  %548 = sub i32 %547, %53
  %549 = sub i32 %548, %60
  %550 = sub i32 %549, %67
  %551 = add i32 %550, %74
  %552 = sub i32 %551, %81
  %553 = add i32 %552, %85
  %554 = sub i32 %553, %99
  %555 = add i32 %554, %102
  %556 = sub i32 %555, %125
  %557 = add i32 %556, %130
  %558 = sub i32 %557, %136
  %559 = add i32 %558, %158
  %560 = add i32 %559, %162
  %561 = add i32 %560, %165
  %562 = add i32 %561, %167
  %563 = add i32 %562, %169
  %564 = add i32 %563, %239
  %565 = add i32 %564, %183
  %566 = add i32 %565, %259
  %567 = add i32 %566, %202
  %568 = add i32 %567, %327
  %569 = add i32 %568, %177
  %570 = add i32 %569, %170
  %571 = add i32 %570, %386
  %572 = add i32 %571, %398
  %573 = sub i32 %572, %92
  %574 = sub i32 %573, %178
  %575 = sub i32 %574, %222
  %576 = add i32 %575, %223
  %577 = add i32 %576, %228
  %578 = sub i32 %577, %257
  %579 = sub i32 %578, %174
  %580 = add i32 %579, %208
  %581 = sub i32 %580, %271
  %582 = add i32 %581, %272
  %583 = add i32 %582, %281
  %584 = sub i32 %583, %285
  %585 = sub i32 %584, %289
  %586 = sub i32 %585, %303
  %587 = add i32 %586, %179
  %588 = add i32 %587, %320
  %589 = add i32 %588, %322
  %590 = sub i32 %589, %325
  %591 = sub i32 %590, %333
  %592 = add i32 %591, %338
  %593 = add i32 %592, %367
  %594 = add i32 %593, %368
  %595 = sub i32 %594, %369
  %596 = add i32 %595, %191
  %597 = add i32 %596, %391
  %598 = add i32 %597, %405
  %599 = add i32 %598, %205
  %600 = add i32 %599, %470
  %601 = add i32 %600, %173
  %602 = add i32 %601, %176
  %603 = add i32 %602, %180
  %604 = add i32 %603, %187
  %605 = sub i32 %604, %192
  %606 = sub i32 %605, %201
  %607 = sub i32 %606, %206
  %608 = add i32 %607, %209
  %609 = add i32 %608, %211
  %610 = add i32 %609, %212
  %611 = add i32 %610, %215
  %612 = sub i32 %611, %216
  %613 = add i32 %612, %217
  %614 = add i32 %613, %218
  %615 = sub i32 %614, %220
  %616 = sub i32 %615, %221
  %617 = add i32 %616, %230
  %618 = add i32 %617, %231
  %619 = add i32 %618, %232
  %620 = add i32 %619, %233
  %621 = add i32 %620, %235
  %622 = add i32 %621, %236
  %623 = add i32 %622, %237
  %624 = add i32 %623, %238
  %625 = add i32 %624, %242
  %626 = sub i32 %625, %252
  %627 = sub i32 %626, %258
  %628 = sub i32 %627, %262
  %629 = sub i32 %628, %263
  %630 = add i32 %629, %264
  %631 = add i32 %630, %266
  %632 = add i32 %631, %268
  %633 = sub i32 %632, %269
  %634 = sub i32 %633, %270
  %635 = sub i32 %634, %273
  %636 = sub i32 %635, %275
  %637 = sub i32 %636, %278
  %638 = add i32 %637, %279
  %639 = add i32 %638, %280
  %640 = sub i32 %639, %283
  %641 = add i32 %640, %284
  %642 = sub i32 %641, %249
  %643 = add i32 %642, %286
  %644 = add i32 %643, %291
  %645 = add i32 %644, %254
  %646 = sub i32 %645, %296
  %647 = sub i32 %646, %299
  %648 = sub i32 %647, %300
  %649 = add i32 %648, %307
  %650 = add i32 %649, %308
  %651 = sub i32 %650, %309
  %652 = sub i32 %651, %311
  %653 = sub i32 %652, %313
  %654 = add i32 %653, %314
  %655 = add i32 %654, %316
  %656 = sub i32 %655, %317
  %657 = sub i32 %656, %318
  %658 = sub i32 %657, %319
  %659 = sub i32 %658, %321
  %660 = sub i32 %659, %323
  %661 = sub i32 %660, %324
  %662 = sub i32 %661, %329
  %663 = add i32 %662, %331
  %664 = sub i32 %663, %337
  %665 = sub i32 %664, %339
  %666 = sub i32 %665, %342
  %667 = add i32 %666, %345
  %668 = add i32 %667, %346
  %669 = sub i32 %668, %244
  %670 = sub i32 %669, %351
  %671 = sub i32 %670, %352
  %672 = add i32 %671, %353
  %673 = add i32 %672, %356
  %674 = add i32 %673, %357
  %675 = sub i32 %674, %276
  %676 = sub i32 %675, %358
  %677 = add i32 %676, %359
  %678 = sub i32 %677, %361
  %679 = add i32 %678, %365
  %680 = add i32 %679, %371
  %681 = sub i32 %680, %372
  %682 = add i32 %681, %373
  %683 = sub i32 %682, %374
  %684 = sub i32 %683, %376
  %685 = add i32 %684, %377
  %686 = sub i32 %685, %378
  %687 = add i32 %686, %381
  %688 = sub i32 %687, %382
  %689 = sub i32 %688, %385
  %690 = add i32 %689, %305
  %691 = sub i32 %690, %387
  %692 = add i32 %691, %388
  %693 = add i32 %692, %390
  %694 = add i32 %693, %394
  %695 = add i32 %694, %395
  %696 = add i32 %695, %397
  %697 = sub i32 %696, %399
  %698 = add i32 %697, %400
  %699 = sub i32 %698, %402
  %700 = add i32 %699, %403
  %701 = sub i32 %700, %404
  %702 = add i32 %701, %406
  %703 = sub i32 %702, %407
  %704 = add i32 %703, %409
  %705 = sub i32 %704, %416
  %706 = add i32 %705, %420
  %707 = sub i32 %706, %186
  %708 = sub i32 %707, %189
  %709 = sub i32 %708, %200
  %710 = sub i32 %709, %214
  %711 = sub i32 %710, %241
  %712 = sub i32 %711, %246
  %713 = sub i32 %712, %250
  %714 = sub i32 %713, %253
  %715 = sub i32 %714, %256
  %716 = sub i32 %715, %288
  %717 = add i32 %716, %295
  %718 = add i32 %717, %298
  %719 = sub i32 %718, %306
  %720 = add i32 %719, %312
  %721 = sub i32 %720, %332
  %722 = sub i32 %721, %336
  %723 = sub i32 %722, %341
  %724 = sub i32 %723, %344
  %725 = sub i32 %724, %350
  %726 = sub i32 %725, %355
  %727 = sub i32 %726, %363
  %728 = sub i32 %727, %389
  %729 = sub i32 %728, %393
  %730 = sub i32 %729, %408
  %731 = sub i32 %730, %411
  %732 = sub i32 %731, %413
  %733 = sub i32 %732, %415
  %734 = add i32 %733, %418
  %735 = add i32 %734, %419
  %736 = add i32 %735, %421
  %737 = sub i32 %736, %380
  %738 = sub i32 %737, %384
  %739 = add i32 %738, %463
  %740 = add i32 %739, %468
  %741 = add i32 %740, %458
  %742 = add i32 %741, %449
  %743 = icmp eq i32 %14, %742
  %744 = select i1 %743, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %745 = tail call i32 @puts(i8* nonnull dereferenceable(1) %744)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
