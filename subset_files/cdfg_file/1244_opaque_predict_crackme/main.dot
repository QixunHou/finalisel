digraph "DFG for'main' function" {
	Node0x2128d68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2128de8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2128e78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x21292d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x21293b8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x21294d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2129710[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x21297c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x212a738[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x212adc0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x212ae30[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x212aea0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x212af10[shape=record, label="  %11 = mul i32 %10, -2"];
	Node0x212af80[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x212aff0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x212b060[shape=record, label="  %14 = add i32 %11, %13"];
	Node0x212b0d0[shape=record, label="  %15 = or i32 %6, %8"];
	Node0x212b140[shape=record, label="  %16 = xor i32 %7, %6"];
	Node0x212b1b0[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x212b220[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x212b290[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x212b300[shape=record, label="  %20 = shl i32 %15, 1"];
	Node0x212b370[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x212b3e0[shape=record, label="  %22 = shl i32 %9, 1"];
	Node0x212b450[shape=record, label="  %23 = sub i32 %16, %7"];
	Node0x212b4c0[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x212b530[shape=record, label="  %25 = sub i32 %15, %6"];
	Node0x212b5a0[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x212b610[shape=record, label="  %27 = sub i32 %26, %12"];
	Node0x212b680[shape=record, label="  %28 = sub i32 %27, %22"];
	Node0x212b6f0[shape=record, label="  %29 = sub i32 %28, %19"];
	Node0x212b760[shape=record, label="  %30 = sub i32 %29, %21"];
	Node0x212b7d0[shape=record, label="  %31 = add i32 %30, %24"];
	Node0x212b840[shape=record, label="  %32 = icmp eq i32 %14, %31"];
	Node0x20c99d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x212bae0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x212bd38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x212be98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x212bf58[shape=record, label="  ret i32 0"];
	Node0x2128d68 -> Node0x2128de8;
	Node0x2128de8 -> Node0x2128e78;
	Node0x2128e78 -> Node0x21292d8;
	Node0x21292d8 -> Node0x21293b8;
	Node0x21293b8 -> Node0x21294d8;
	Node0x21294d8 -> Node0x2129710;
	Node0x2129710 -> Node0x21297c8;
	Node0x21297c8 -> Node0x212a738;
	Node0x212a738 -> Node0x212adc0;
	Node0x212adc0 -> Node0x212ae30;
	Node0x212ae30 -> Node0x212aea0;
	Node0x212aea0 -> Node0x212af10;
	Node0x212af10 -> Node0x212af80;
	Node0x212af80 -> Node0x212aff0;
	Node0x212aff0 -> Node0x212b060;
	Node0x212b060 -> Node0x212b0d0;
	Node0x212b0d0 -> Node0x212b140;
	Node0x212b140 -> Node0x212b1b0;
	Node0x212b1b0 -> Node0x212b220;
	Node0x212b220 -> Node0x212b290;
	Node0x212b290 -> Node0x212b300;
	Node0x212b300 -> Node0x212b370;
	Node0x212b370 -> Node0x212b3e0;
	Node0x212b3e0 -> Node0x212b450;
	Node0x212b450 -> Node0x212b4c0;
	Node0x212b4c0 -> Node0x212b530;
	Node0x212b530 -> Node0x212b5a0;
	Node0x212b5a0 -> Node0x212b610;
	Node0x212b610 -> Node0x212b680;
	Node0x212b680 -> Node0x212b6f0;
	Node0x212b6f0 -> Node0x212b760;
	Node0x212b760 -> Node0x212b7d0;
	Node0x212b7d0 -> Node0x212b840;
	Node0x212b840 -> Node0x20c99d8;
	Node0x20c99d8 -> Node0x212bae0;
	Node0x212bae0 -> Node0x212bd38;
	Node0x212bd38 -> Node0x212be98;
	Node0x212be98 -> Node0x212bf58;
edge [color=red]
	Node0x2128d68 -> Node0x2128e78;
	Node0x2128e78 -> Node0x21292d8;
	Node0x2128de8 -> Node0x21293b8;
	Node0x21293b8 -> Node0x21294d8;
	Node0x2128d68 -> Node0x2129710;
	Node0x2128de8 -> Node0x2129710;
	Node0x2128d68 -> Node0x21297c8;
	Node0x2128de8 -> Node0x212a738;
	Node0x212a738 -> Node0x212adc0;
	Node0x21297c8 -> Node0x212ae30;
	Node0x212adc0 -> Node0x212ae30;
	Node0x212ae30 -> Node0x212aea0;
	Node0x212aea0 -> Node0x212af10;
	Node0x212a738 -> Node0x212af80;
	Node0x21297c8 -> Node0x212af80;
	Node0x212af80 -> Node0x212aff0;
	Node0x212af10 -> Node0x212b060;
	Node0x212aff0 -> Node0x212b060;
	Node0x21297c8 -> Node0x212b0d0;
	Node0x212adc0 -> Node0x212b0d0;
	Node0x212a738 -> Node0x212b140;
	Node0x21297c8 -> Node0x212b140;
	Node0x212a738 -> Node0x212b1b0;
	Node0x21297c8 -> Node0x212b1b0;
	Node0x212b1b0 -> Node0x212b220;
	Node0x212b220 -> Node0x212b290;
	Node0x212b0d0 -> Node0x212b300;
	Node0x212b300 -> Node0x212b370;
	Node0x212ae30 -> Node0x212b3e0;
	Node0x212b140 -> Node0x212b450;
	Node0x212a738 -> Node0x212b450;
	Node0x212b450 -> Node0x212b4c0;
	Node0x212b0d0 -> Node0x212b530;
	Node0x21297c8 -> Node0x212b530;
	Node0x212b530 -> Node0x212b5a0;
	Node0x212b1b0 -> Node0x212b5a0;
	Node0x212b5a0 -> Node0x212b610;
	Node0x212af80 -> Node0x212b610;
	Node0x212b610 -> Node0x212b680;
	Node0x212b3e0 -> Node0x212b680;
	Node0x212b680 -> Node0x212b6f0;
	Node0x212b290 -> Node0x212b6f0;
	Node0x212b6f0 -> Node0x212b760;
	Node0x212b370 -> Node0x212b760;
	Node0x212b760 -> Node0x212b7d0;
	Node0x212b4c0 -> Node0x212b7d0;
	Node0x212b060 -> Node0x212b840;
	Node0x212b7d0 -> Node0x212b840;
	Node0x212b840 -> Node0x20c99d8;
	Node0x20c99d8 -> Node0x212bae0;
	Node0x21293b8 -> Node0x212bd38;
	Node0x2128e78 -> Node0x212be98;
}
