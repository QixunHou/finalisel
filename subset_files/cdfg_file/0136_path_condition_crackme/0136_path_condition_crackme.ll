; ModuleID = '../.././c_source_file/0136_path_condition_crackme.c'
source_filename = "../.././c_source_file/0136_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %8, -1
  %10 = xor i32 %2, %0
  %11 = and i32 %10, %9
  %12 = shl i32 %11, 1
  %13 = xor i32 %5, -1
  %14 = and i32 %13, %3
  %15 = xor i32 %14, %4
  %16 = xor i32 %3, -1
  %17 = or i32 %16, %4
  %18 = xor i32 %17, -1
  %19 = xor i32 %18, %5
  %20 = sub i32 %12, %19
  %21 = add i32 %20, %15
  %22 = or i32 %2, %1
  %23 = and i32 %22, %0
  %24 = xor i32 %2, -1
  %25 = or i32 %24, %1
  %26 = xor i32 %25, -1
  %27 = xor i32 %26, %0
  %28 = xor i32 %22, -1
  %29 = or i32 %28, %0
  %30 = xor i32 %1, %0
  %31 = xor i32 %30, -1
  %32 = and i32 %31, %2
  %33 = add i32 %22, 1
  %34 = and i32 %2, %0
  %35 = or i32 %1, %0
  %36 = xor i32 %35, -1
  %37 = or i32 %34, %36
  %38 = xor i32 %0, -1
  %39 = and i32 %24, %1
  %40 = xor i32 %39, -1
  %41 = or i32 %40, %38
  %42 = shl i32 %41, 1
  %43 = xor i32 %36, %2
  %44 = or i32 %2, %0
  %45 = and i32 %44, %30
  %46 = and i32 %44, %31
  %47 = and i32 %40, %0
  %48 = and i32 %24, %0
  %49 = and i32 %10, %31
  %50 = shl i32 %49, 1
  %51 = or i32 %7, %0
  %52 = and i32 %51, %2
  %53 = and i32 %35, %24
  %54 = or i32 %24, %31
  %55 = or i32 %24, %0
  %56 = and i32 %55, %30
  %57 = and i32 %24, %31
  %58 = and i32 %44, %1
  %59 = and i32 %2, %1
  %60 = xor i32 %59, -1
  %61 = xor i32 %48, %60
  %62 = xor i32 %55, -1
  %63 = or i32 %30, %62
  %64 = and i32 %7, %2
  %65 = and i32 %64, %38
  %66 = xor i32 %2, %1
  %67 = or i32 %66, %38
  %68 = xor i32 %65, %67
  %69 = xor i32 %59, %0
  %70 = or i32 %22, %38
  %71 = xor i32 %51, %2
  %72 = or i32 %22, %0
  %73 = or i32 %62, %1
  %74 = or i32 %48, %30
  %75 = and i32 %59, %38
  %76 = and i32 %66, %0
  %77 = xor i32 %76, 1073741823
  %78 = xor i32 %77, %75
  %79 = shl i32 %78, 2
  %80 = xor i32 %34, -1
  %81 = xor i32 %51, -1
  %82 = or i32 %10, %81
  %83 = and i32 %64, %0
  %84 = or i32 %66, %0
  %85 = xor i32 %84, -1
  %86 = or i32 %83, %85
  %87 = xor i32 %44, %1
  %88 = or i32 %36, %2
  %89 = shl i32 %88, 1
  %90 = and i32 %10, %35
  %91 = and i32 %1, %0
  %92 = xor i32 %22, %91
  %93 = xor i32 %23, -1
  %94 = xor i32 %75, %93
  %95 = xor i32 %91, -1
  %96 = and i32 %24, %95
  %97 = xor i32 %66, -1
  %98 = and i32 %97, %9
  %99 = and i32 %10, %51
  %100 = and i32 %80, %1
  %101 = or i32 %66, %8
  %102 = shl i32 %84, 1
  %103 = and i32 %59, %0
  %104 = and i32 %22, %38
  %105 = or i32 %103, %104
  %106 = xor i32 %66, %0
  %107 = xor i32 %106, -1
  %108 = xor i32 %83, %107
  %109 = xor i32 %34, %1
  %110 = or i32 %66, %91
  %111 = xor i32 %8, %40
  %112 = xor i32 %10, -1
  %113 = and i32 %112, %9
  %114 = or i32 %62, %31
  %115 = or i32 %30, %112
  %116 = and i32 %66, %38
  %117 = and i32 %10, %30
  %118 = shl i32 %117, 1
  %119 = or i32 %34, %81
  %120 = or i32 %48, %26
  %121 = and i32 %35, %112
  %122 = xor i32 %22, %0
  %123 = or i32 %103, %122
  %124 = xor i32 %39, %0
  %125 = or i32 %30, %2
  %126 = shl i32 %125, 1
  %127 = and i32 %60, %38
  %128 = or i32 %31, %2
  %129 = or i32 %91, %62
  %130 = or i32 %39, %0
  %131 = shl i32 %130, 1
  %132 = xor i32 %34, %22
  %133 = or i32 %112, %7
  %134 = shl i32 %133, 1
  %135 = or i32 %91, %112
  %136 = shl i32 %135, 1
  %137 = and i32 %10, %1
  %138 = or i32 %112, %81
  %139 = xor i32 %44, -1
  %140 = or i32 %30, %139
  %141 = and i32 %40, %38
  %142 = and i32 %51, %24
  %143 = and i32 %44, %7
  %144 = or i32 %48, %1
  %145 = shl i32 %144, 1
  %146 = xor i32 %48, -1
  %147 = and i32 %146, %7
  %148 = shl i32 %147, 1
  %149 = or i32 %24, %36
  %150 = and i32 %10, %95
  %151 = or i32 %24, %81
  %152 = or i32 %48, %31
  %153 = xor i32 %8, %60
  %154 = or i32 %97, %38
  %155 = or i32 %10, %31
  %156 = or i32 %75, %76
  %157 = and i32 %97, %38
  %158 = and i32 %55, %31
  %159 = and i32 %60, %0
  %160 = or i32 %40, %0
  %161 = shl i32 %160, 1
  %162 = or i32 %30, %24
  %163 = or i32 %10, %30
  %164 = xor i32 %34, %51
  %165 = or i32 %97, %36
  %166 = xor i32 %48, %25
  %167 = or i32 %66, %36
  %168 = and i32 %146, %31
  %169 = or i32 %10, %7
  %170 = xor i32 %44, %91
  %171 = and i32 %25, %0
  %172 = xor i32 %95, %2
  %173 = or i32 %62, %7
  %174 = or i32 %91, %24
  %175 = and i32 %95, %2
  %176 = xor i32 %25, %91
  %177 = xor i32 %122, 2147483647
  %178 = xor i32 %177, %103
  %179 = or i32 %7, %2
  %180 = and i32 %179, %38
  %181 = or i32 %83, %180
  %182 = shl i32 %181, 1
  %183 = or i32 %48, %59
  %184 = or i32 %39, %38
  %185 = or i32 %10, %91
  %186 = or i32 %34, %30
  %187 = and i32 %30, %146
  %188 = and i32 %179, %0
  %189 = or i32 %65, %188
  %190 = or i32 %97, %81
  %191 = and i32 %66, %35
  %192 = xor i32 %8, %2
  %193 = or i32 %10, %8
  %194 = and i32 %51, %97
  %195 = xor i32 %80, %1
  %196 = and i32 %35, %97
  %197 = or i32 %8, %24
  %198 = or i32 %8, %2
  %199 = xor i32 %146, %1
  %200 = shl i32 %199, 1
  %201 = xor i32 %179, %0
  %202 = xor i32 %201, -1
  %203 = xor i32 %83, %202
  %204 = or i32 %112, %1
  %205 = add i32 %48, 1
  %206 = and i32 %25, %38
  %207 = and i32 %10, %7
  %208 = or i32 %59, %8
  %209 = xor i32 %116, -1
  %210 = xor i32 %103, %209
  %211 = or i32 %103, %107
  %212 = shl i32 %211, 1
  %213 = or i32 %25, %0
  %214 = and i32 %30, %2
  %215 = or i32 %34, %28
  %216 = xor i32 %83, %84
  %217 = xor i32 %28, %0
  %218 = shl i32 %217, 1
  %219 = or i32 %91, %139
  %220 = and i32 %55, %1
  %221 = and i32 %146, %1
  %222 = or i32 %139, %7
  %223 = or i32 %91, %2
  %224 = and i32 %51, %112
  %225 = and i32 %97, %0
  %226 = or i32 %39, %8
  %227 = xor i32 %180, 2147483647
  %228 = xor i32 %227, %83
  %229 = or i32 %28, %38
  %230 = shl i32 %229, 1
  %231 = or i32 %26, %0
  %232 = or i32 %10, %1
  %233 = shl i32 %232, 1
  %234 = and i32 %97, %95
  %235 = shl i32 %234, 1
  %236 = and i32 %9, %2
  %237 = and i32 %66, %95
  %238 = xor i32 %62, %1
  %239 = xor i32 %9, %2
  %240 = and i32 %30, %80
  %241 = xor i32 %67, -1
  %242 = or i32 %65, %241
  %243 = or i32 %83, %106
  %244 = or i32 %112, %36
  %245 = or i32 %112, %31
  %246 = xor i32 %34, %35
  %247 = xor i32 %25, %0
  %248 = add i32 %39, 1
  %249 = xor i32 %139, %1
  %250 = or i32 %91, %28
  %251 = and i32 %24, %9
  %252 = or i32 %81, %2
  %253 = and i32 %66, %51
  %254 = and i32 %80, %31
  %255 = xor i32 %91, %2
  %256 = or i32 %75, %23
  %257 = and i32 %112, %7
  %258 = and i32 %112, %95
  %259 = or i32 %83, %201
  %260 = shl i32 %259, 1
  %261 = or i32 %10, %36
  %262 = shl i32 %261, 1
  %263 = or i32 %59, %0
  %264 = or i32 %26, %38
  %265 = xor i32 %40, %0
  %266 = or i32 %66, %81
  %267 = or i32 %91, %26
  %268 = xor i32 %104, 1073741823
  %269 = xor i32 %268, %103
  %270 = shl i32 %269, 2
  %271 = xor i32 %103, %106
  %272 = shl i32 %271, 2
  %273 = and i32 %80, %7
  %274 = or i32 %59, %38
  %275 = or i32 %8, %97
  %276 = or i32 %8, %112
  %277 = or i32 %34, %1
  %278 = and i32 %30, %24
  %279 = xor i32 %97, %0
  %280 = xor i32 %55, %91
  %281 = xor i32 %188, -1
  %282 = xor i32 %65, %281
  %283 = xor i32 %48, %1
  %284 = or i32 %48, %7
  %285 = or i32 %25, %38
  %286 = or i32 %60, %0
  %287 = or i32 %34, %7
  %288 = xor i32 %35, %2
  %289 = or i32 %34, %31
  %290 = and i32 %66, %9
  %291 = and i32 %35, %2
  %292 = and i32 %30, %112
  %293 = or i32 %139, %31
  %294 = and i32 %28, %38
  %295 = and i32 %39, %38
  %296 = and i32 %28, %0
  %297 = and i32 %39, %0
  %298 = and i32 %26, %38
  %299 = and i32 %26, %0
  %300 = shl i32 %299, 3
  %301 = mul i32 %103, 13
  %302 = and i32 %13, %4
  %303 = xor i32 %302, %3
  %304 = and i32 %17, %13
  %305 = xor i32 %4, -1
  %306 = or i32 %13, %3
  %307 = xor i32 %306, -1
  %308 = or i32 %307, %305
  %309 = xor i32 %4, %3
  %310 = and i32 %309, %5
  %311 = shl i32 %310, 1
  %312 = and i32 %5, %4
  %313 = or i32 %312, %16
  %314 = xor i32 %5, %4
  %315 = and i32 %314, %3
  %316 = and i32 %16, %5
  %317 = and i32 %316, %4
  %318 = or i32 %16, %5
  %319 = xor i32 %318, %4
  %320 = xor i32 %317, -1
  %321 = xor i32 %319, %320
  %322 = or i32 %5, %4
  %323 = and i32 %322, %3
  %324 = xor i32 %309, -1
  %325 = xor i32 %314, -1
  %326 = and i32 %325, %324
  %327 = and i32 %5, %3
  %328 = or i32 %327, %305
  %329 = shl i32 %328, 1
  %330 = or i32 %317, %319
  %331 = or i32 %307, %4
  %332 = shl i32 %331, 1
  %333 = or i32 %4, %3
  %334 = xor i32 %333, -1
  %335 = or i32 %334, %5
  %336 = xor i32 %327, -1
  %337 = and i32 %336, %4
  %338 = xor i32 %334, %5
  %339 = xor i32 %5, %3
  %340 = and i32 %339, %17
  %341 = add i32 %314, 1
  %342 = add i32 %4, 1
  %343 = and i32 %327, %4
  %344 = or i32 %5, %3
  %345 = and i32 %344, %305
  %346 = or i32 %343, %345
  %347 = and i32 %309, %325
  %348 = xor i32 %339, -1
  %349 = or i32 %348, %305
  %350 = xor i32 %344, -1
  %351 = or i32 %312, %350
  %352 = xor i32 %322, %3
  %353 = and i32 %16, %4
  %354 = xor i32 %353, -1
  %355 = xor i32 %354, %5
  %356 = or i32 %14, %353
  %357 = or i32 %13, %18
  %358 = and i32 %339, %333
  %359 = and i32 %339, %4
  %360 = or i32 %348, %4
  %361 = shl i32 %14, 1
  %362 = or i32 %348, %18
  %363 = or i32 %339, %305
  %364 = or i32 %353, %348
  %365 = and i32 %4, %3
  %366 = or i32 %314, %365
  %367 = shl i32 %4, 2
  %368 = xor i32 %322, %365
  %369 = or i32 %13, %4
  %370 = and i32 %369, %324
  %371 = or i32 %336, %4
  %372 = or i32 %325, %18
  %373 = or i32 %14, %4
  %374 = and i32 %339, %305
  %375 = xor i32 %374, 2147483647
  %376 = xor i32 %375, %343
  %377 = and i32 %309, %13
  %378 = shl i32 %377, 1
  %379 = or i32 %312, %18
  %380 = and i32 %325, %354
  %381 = shl i32 %17, 1
  %382 = or i32 %13, %334
  %383 = xor i32 %350, %4
  %384 = shl i32 %383, 1
  %385 = or i32 %350, %305
  %386 = shl i32 %385, 1
  %387 = and i32 %333, %5
  %388 = xor i32 %339, %4
  %389 = or i32 %325, %324
  %390 = xor i32 %312, %344
  %391 = and i32 %354, %5
  %392 = and i32 %306, %4
  %393 = or i32 %339, %353
  %394 = xor i32 %302, -1
  %395 = and i32 %394, %324
  %396 = or i32 %327, %353
  %397 = or i32 %312, %334
  %398 = and i32 %316, %305
  %399 = xor i32 %398, %363
  %400 = and i32 %318, %4
  %401 = xor i32 %400, 2147483647
  %402 = xor i32 %401, %398
  %403 = shl i32 %402, 1
  %404 = and i32 %394, %3
  %405 = shl i32 %404, 1
  %406 = and i32 %322, %324
  %407 = and i32 %339, %354
  %408 = and i32 %348, %4
  %409 = or i32 %353, %5
  %410 = and i32 %327, %305
  %411 = or i32 %410, %359
  %412 = or i32 %325, %3
  %413 = xor i32 %312, -1
  %414 = and i32 %413, %16
  %415 = xor i32 %365, -1
  %416 = add i32 %365, 1
  %417 = xor i32 %363, -1
  %418 = or i32 %398, %417
  %419 = or i32 %314, %16
  %420 = or i32 %339, %4
  %421 = xor i32 %420, -1
  %422 = or i32 %317, %421
  %423 = or i32 %302, %327
  %424 = xor i32 %343, %388
  %425 = xor i32 %394, %3
  %426 = shl i32 %425, 1
  %427 = or i32 %339, %334
  %428 = xor i32 %322, -1
  %429 = and i32 %322, %309
  %430 = xor i32 %413, %3
  %431 = xor i32 %336, %4
  %432 = or i32 %302, %3
  %433 = or i32 %336, %305
  %434 = and i32 %314, %354
  %435 = xor i32 %428, %3
  %436 = xor i32 %369, %3
  %437 = and i32 %413, %3
  %438 = or i32 %398, %400
  %439 = and i32 %13, %354
  %440 = and i32 %344, %4
  %441 = and i32 %336, %305
  %442 = and i32 %325, %3
  %443 = and i32 %333, %348
  %444 = or i32 %302, %16
  %445 = or i32 %365, %5
  %446 = xor i32 %365, %5
  %447 = xor i32 %344, %4
  %448 = and i32 %314, %415
  %449 = or i32 %314, %3
  %450 = and i32 %369, %16
  %451 = xor i32 %312, %17
  %452 = xor i32 %369, -1
  %453 = xor i32 %452, %3
  %454 = and i32 %333, %13
  %455 = xor i32 %317, %420
  %456 = shl i32 %455, 1
  %457 = or i32 %18, %5
  %458 = and i32 %348, %305
  %459 = and i32 %348, %415
  %460 = add i32 %17, 1
  %461 = xor i32 %14, -1
  %462 = xor i32 %353, %461
  %463 = or i32 %365, %348
  %464 = shl i32 %463, 1
  %465 = and i32 %461, %305
  %466 = or i32 %461, %305
  %467 = or i32 %327, %4
  %468 = and i32 %306, %305
  %469 = or i32 %428, %324
  %470 = or i32 %302, %307
  %471 = xor i32 %359, -1
  %472 = xor i32 %410, %471
  %473 = and i32 %309, %394
  %474 = xor i32 %415, %5
  %475 = xor i32 %302, %306
  %476 = and i32 %314, %333
  %477 = shl i32 %476, 1
  %478 = and i32 %369, %3
  %479 = and i32 %318, %305
  %480 = or i32 %317, %479
  %481 = or i32 %344, %4
  %482 = xor i32 %17, %5
  %483 = xor i32 %461, %4
  %484 = xor i32 %353, %5
  %485 = or i32 %365, %428
  %486 = or i32 %312, %324
  %487 = and i32 %461, %4
  %488 = or i32 %353, %13
  %489 = or i32 %309, %13
  %490 = or i32 %452, %16
  %491 = xor i32 %333, %5
  %492 = or i32 %309, %452
  %493 = xor i32 %306, %4
  %494 = and i32 %13, %324
  %495 = and i32 %17, %325
  %496 = and i32 %324, %5
  %497 = or i32 %452, %324
  %498 = or i32 %428, %3
  %499 = add i32 %5, 1
  %500 = or i32 %343, %447
  %501 = xor i32 %447, -1
  %502 = xor i32 %343, %501
  %503 = or i32 %339, %365
  %504 = or i32 %339, %18
  %505 = shl i32 %504, 1
  %506 = and i32 %415, %5
  %507 = shl i32 %506, 1
  %508 = or i32 %324, %5
  %509 = xor i32 %306, %365
  %510 = or i32 %365, %350
  %511 = and i32 %314, %17
  %512 = xor i32 %388, %320
  %513 = or i32 %314, %334
  %514 = and i32 %350, %305
  %515 = shl i32 %514, 1
  %516 = and i32 %14, %305
  %517 = mul i32 %516, 12
  %518 = and i32 %350, %4
  %519 = and i32 %14, %4
  %520 = shl i32 %519, 3
  %521 = and i32 %307, %4
  %522 = add i32 %36, %95
  %523 = add i32 %522, %239
  %524 = add i32 %523, %97
  %525 = add i32 %524, %52
  %526 = add i32 %525, %48
  %527 = add i32 %526, %222
  %528 = add i32 %527, %208
  %529 = add i32 %528, %206
  %530 = add i32 %529, %183
  %531 = add i32 %530, %170
  %532 = add i32 %531, %165
  %533 = add i32 %532, %155
  %534 = add i32 %533, %120
  %535 = add i32 %534, %116
  %536 = add i32 %535, %114
  %537 = add i32 %536, %110
  %538 = add i32 %537, %87
  %539 = add i32 %538, %63
  %540 = sub i32 %298, %142
  %541 = add i32 %540, %275
  %542 = add i32 %541, %254
  %543 = add i32 %542, %191
  %544 = sub i32 %543, %153
  %545 = sub i32 %544, %121
  %546 = add i32 %545, %210
  %547 = sub i32 %546, %387
  %548 = add i32 %547, %521
  %549 = add i32 %548, %343
  %550 = add i32 %549, %370
  %551 = sub i32 %550, %351
  %552 = mul i32 %551, 3
  %553 = sub i32 %172, %297
  %554 = add i32 %553, %67
  %555 = sub i32 %554, %265
  %556 = add i32 %555, %90
  %557 = sub i32 %556, %23
  %558 = sub i32 %557, %282
  %559 = add i32 %558, %338
  %560 = mul i32 %559, 5
  %561 = or i32 %75, %296
  %562 = mul i32 %561, -15
  %563 = add i32 %295, %294
  %564 = mul i32 %563, -14
  %565 = sub i32 %539, %34
  %566 = add i32 %565, %353
  %567 = add i32 %566, %508
  %568 = add i32 %567, %428
  %569 = add i32 %568, %228
  %570 = add i32 %569, %178
  %571 = add i32 %570, %410
  %572 = add i32 %571, %510
  %573 = add i32 %572, %493
  %574 = add i32 %573, %490
  %575 = add i32 %574, %486
  %576 = add i32 %575, %481
  %577 = add i32 %576, %458
  %578 = add i32 %577, %440
  %579 = add i32 %578, %437
  %580 = add i32 %579, %407
  %581 = add i32 %580, %395
  %582 = add i32 %581, %359
  %583 = add i32 %582, %352
  %584 = add i32 %583, %349
  %585 = add i32 %584, %376
  %586 = shl i32 %585, 1
  %587 = add i32 %257, 1073741823
  %588 = add i32 %587, %264
  %589 = shl i32 %588, 2
  %590 = add i32 %0, 3
  %591 = sub i32 %590, %2
  %592 = add i32 %591, %35
  %593 = sub i32 %592, %30
  %594 = add i32 %593, %24
  %595 = add i32 %594, %81
  %596 = add i32 %595, %31
  %597 = sub i32 %596, %32
  %598 = add i32 %597, %33
  %599 = sub i32 %598, %43
  %600 = add i32 %599, %53
  %601 = add i32 %600, %54
  %602 = add i32 %601, %57
  %603 = add i32 %602, %71
  %604 = add i32 %603, %96
  %605 = sub i32 %604, %22
  %606 = sub i32 %605, %128
  %607 = sub i32 %606, %149
  %608 = add i32 %607, %151
  %609 = add i32 %608, %139
  %610 = add i32 %609, %162
  %611 = add i32 %610, %174
  %612 = sub i32 %611, %175
  %613 = sub i32 %612, %192
  %614 = sub i32 %613, %197
  %615 = sub i32 %614, %198
  %616 = add i32 %615, %205
  %617 = add i32 %616, %214
  %618 = add i32 %617, %223
  %619 = add i32 %618, %236
  %620 = sub i32 %619, %39
  %621 = sub i32 %620, %66
  %622 = sub i32 %621, %55
  %623 = add i32 %622, %248
  %624 = add i32 %623, %251
  %625 = add i32 %624, %252
  %626 = add i32 %625, %255
  %627 = add i32 %626, %278
  %628 = add i32 %627, %288
  %629 = sub i32 %628, %291
  %630 = sub i32 %629, %27
  %631 = add i32 %630, %29
  %632 = add i32 %631, %37
  %633 = sub i32 %632, %45
  %634 = add i32 %633, %46
  %635 = sub i32 %634, %47
  %636 = sub i32 %635, %56
  %637 = sub i32 %636, %58
  %638 = add i32 %637, %61
  %639 = add i32 %638, %69
  %640 = add i32 %639, %70
  %641 = sub i32 %640, %72
  %642 = sub i32 %641, %73
  %643 = sub i32 %642, %74
  %644 = sub i32 %643, %82
  %645 = sub i32 %644, %89
  %646 = sub i32 %645, %92
  %647 = sub i32 %646, %98
  %648 = add i32 %647, %99
  %649 = add i32 %648, %100
  %650 = add i32 %649, %101
  %651 = add i32 %650, %109
  %652 = add i32 %651, %111
  %653 = add i32 %652, %113
  %654 = add i32 %653, %115
  %655 = add i32 %654, %119
  %656 = add i32 %655, %124
  %657 = sub i32 %656, %126
  %658 = add i32 %657, %127
  %659 = add i32 %658, %129
  %660 = add i32 %659, %132
  %661 = sub i32 %660, %137
  %662 = sub i32 %661, %138
  %663 = add i32 %662, %140
  %664 = add i32 %663, %141
  %665 = add i32 %664, %143
  %666 = add i32 %665, %150
  %667 = add i32 %666, %152
  %668 = add i32 %667, %154
  %669 = add i32 %668, %122
  %670 = sub i32 %669, %157
  %671 = sub i32 %670, %158
  %672 = add i32 %671, %159
  %673 = add i32 %672, %163
  %674 = sub i32 %673, %164
  %675 = add i32 %674, %166
  %676 = add i32 %675, %167
  %677 = sub i32 %676, %168
  %678 = add i32 %677, %169
  %679 = add i32 %678, %171
  %680 = sub i32 %679, %173
  %681 = add i32 %680, %176
  %682 = add i32 %681, %184
  %683 = add i32 %682, %185
  %684 = add i32 %683, %186
  %685 = add i32 %684, %187
  %686 = add i32 %685, %190
  %687 = sub i32 %686, %106
  %688 = add i32 %687, %193
  %689 = sub i32 %688, %194
  %690 = add i32 %689, %195
  %691 = sub i32 %690, %196
  %692 = sub i32 %691, %204
  %693 = sub i32 %692, %207
  %694 = sub i32 %693, %213
  %695 = sub i32 %694, %215
  %696 = sub i32 %695, %219
  %697 = sub i32 %696, %220
  %698 = sub i32 %697, %221
  %699 = add i32 %698, %224
  %700 = sub i32 %699, %225
  %701 = sub i32 %700, %226
  %702 = sub i32 %701, %231
  %703 = sub i32 %702, %237
  %704 = sub i32 %703, %238
  %705 = add i32 %704, %240
  %706 = add i32 %705, %244
  %707 = sub i32 %706, %245
  %708 = add i32 %707, %246
  %709 = add i32 %708, %247
  %710 = add i32 %709, %249
  %711 = add i32 %710, %250
  %712 = add i32 %711, %253
  %713 = add i32 %712, %258
  %714 = sub i32 %713, %263
  %715 = sub i32 %714, %266
  %716 = add i32 %715, %267
  %717 = add i32 %716, %273
  %718 = sub i32 %717, %274
  %719 = add i32 %718, %276
  %720 = sub i32 %719, %277
  %721 = sub i32 %720, %104
  %722 = add i32 %721, %279
  %723 = add i32 %722, %280
  %724 = add i32 %723, %283
  %725 = sub i32 %724, %284
  %726 = sub i32 %725, %285
  %727 = sub i32 %726, %286
  %728 = sub i32 %727, %287
  %729 = add i32 %728, %289
  %730 = sub i32 %729, %290
  %731 = sub i32 %730, %292
  %732 = add i32 %731, %293
  %733 = add i32 %732, %342
  %734 = sub i32 %733, %42
  %735 = sub i32 %734, %50
  %736 = add i32 %735, %68
  %737 = sub i32 %736, %86
  %738 = sub i32 %737, %94
  %739 = sub i32 %738, %102
  %740 = sub i32 %739, %105
  %741 = add i32 %740, %108
  %742 = sub i32 %741, %118
  %743 = add i32 %742, %123
  %744 = sub i32 %743, %131
  %745 = sub i32 %744, %134
  %746 = sub i32 %745, %136
  %747 = sub i32 %746, %145
  %748 = sub i32 %747, %148
  %749 = add i32 %748, %156
  %750 = sub i32 %749, %161
  %751 = sub i32 %750, %189
  %752 = sub i32 %751, %200
  %753 = sub i32 %752, %203
  %754 = add i32 %753, %216
  %755 = sub i32 %754, %218
  %756 = sub i32 %755, %230
  %757 = sub i32 %756, %233
  %758 = sub i32 %757, %235
  %759 = sub i32 %758, %242
  %760 = add i32 %759, %243
  %761 = add i32 %760, %256
  %762 = sub i32 %761, %262
  %763 = sub i32 %762, %300
  %764 = add i32 %763, %301
  %765 = sub i32 %764, %367
  %766 = add i32 %765, %333
  %767 = add i32 %766, %354
  %768 = add i32 %767, %416
  %769 = add i32 %768, %460
  %770 = add i32 %769, %499
  %771 = sub i32 %770, %182
  %772 = sub i32 %771, %212
  %773 = sub i32 %772, %260
  %774 = sub i32 %773, %272
  %775 = add i32 %774, %304
  %776 = add i32 %775, %335
  %777 = add i32 %776, %341
  %778 = sub i32 %777, %355
  %779 = sub i32 %778, %357
  %780 = sub i32 %779, %381
  %781 = sub i32 %780, %382
  %782 = sub i32 %781, %391
  %783 = sub i32 %782, %306
  %784 = add i32 %783, %409
  %785 = sub i32 %784, %312
  %786 = sub i32 %785, %439
  %787 = sub i32 %786, %445
  %788 = add i32 %787, %446
  %789 = add i32 %788, %454
  %790 = sub i32 %789, %457
  %791 = add i32 %790, %474
  %792 = add i32 %791, %482
  %793 = sub i32 %792, %484
  %794 = add i32 %793, %302
  %795 = sub i32 %794, %488
  %796 = sub i32 %795, %314
  %797 = add i32 %796, %489
  %798 = sub i32 %797, %491
  %799 = sub i32 %798, %494
  %800 = sub i32 %799, %496
  %801 = add i32 %800, %562
  %802 = add i32 %801, %564
  %803 = sub i32 %802, %79
  %804 = sub i32 %803, %270
  %805 = sub i32 %804, %303
  %806 = add i32 %805, %308
  %807 = sub i32 %806, %311
  %808 = add i32 %807, %313
  %809 = sub i32 %808, %315
  %810 = sub i32 %809, %323
  %811 = add i32 %810, %326
  %812 = sub i32 %811, %337
  %813 = sub i32 %812, %340
  %814 = sub i32 %813, %347
  %815 = add i32 %814, %356
  %816 = sub i32 %815, %358
  %817 = add i32 %816, %360
  %818 = sub i32 %817, %361
  %819 = add i32 %818, %362
  %820 = sub i32 %819, %363
  %821 = add i32 %820, %364
  %822 = add i32 %821, %366
  %823 = add i32 %822, %368
  %824 = add i32 %823, %371
  %825 = sub i32 %824, %372
  %826 = add i32 %825, %373
  %827 = sub i32 %826, %378
  %828 = sub i32 %827, %379
  %829 = sub i32 %828, %380
  %830 = sub i32 %829, %374
  %831 = sub i32 %830, %388
  %832 = add i32 %831, %389
  %833 = add i32 %832, %390
  %834 = add i32 %833, %392
  %835 = sub i32 %834, %393
  %836 = sub i32 %835, %396
  %837 = add i32 %836, %397
  %838 = sub i32 %837, %406
  %839 = add i32 %838, %408
  %840 = sub i32 %839, %412
  %841 = sub i32 %840, %414
  %842 = sub i32 %841, %419
  %843 = add i32 %842, %423
  %844 = sub i32 %843, %427
  %845 = add i32 %844, %429
  %846 = sub i32 %845, %430
  %847 = add i32 %846, %431
  %848 = add i32 %847, %432
  %849 = add i32 %848, %433
  %850 = add i32 %849, %434
  %851 = sub i32 %850, %435
  %852 = sub i32 %851, %436
  %853 = sub i32 %852, %441
  %854 = add i32 %853, %442
  %855 = add i32 %854, %443
  %856 = add i32 %855, %444
  %857 = add i32 %856, %447
  %858 = add i32 %857, %448
  %859 = add i32 %858, %449
  %860 = add i32 %859, %450
  %861 = add i32 %860, %451
  %862 = add i32 %861, %453
  %863 = add i32 %862, %459
  %864 = add i32 %863, %462
  %865 = sub i32 %864, %465
  %866 = add i32 %865, %466
  %867 = sub i32 %866, %467
  %868 = add i32 %867, %468
  %869 = add i32 %868, %469
  %870 = add i32 %869, %470
  %871 = sub i32 %870, %473
  %872 = sub i32 %871, %475
  %873 = add i32 %872, %478
  %874 = sub i32 %873, %483
  %875 = sub i32 %874, %485
  %876 = sub i32 %875, %487
  %877 = add i32 %876, %492
  %878 = sub i32 %877, %495
  %879 = sub i32 %878, %497
  %880 = sub i32 %879, %498
  %881 = sub i32 %880, %503
  %882 = sub i32 %881, %507
  %883 = sub i32 %882, %509
  %884 = sub i32 %883, %511
  %885 = sub i32 %884, %513
  %886 = sub i32 %885, %518
  %887 = add i32 %886, %589
  %888 = add i32 %887, %321
  %889 = sub i32 %888, %329
  %890 = add i32 %889, %330
  %891 = sub i32 %890, %332
  %892 = add i32 %891, %346
  %893 = sub i32 %892, %384
  %894 = sub i32 %893, %386
  %895 = sub i32 %894, %399
  %896 = sub i32 %895, %405
  %897 = add i32 %896, %411
  %898 = sub i32 %897, %418
  %899 = sub i32 %898, %422
  %900 = add i32 %899, %424
  %901 = sub i32 %900, %426
  %902 = add i32 %901, %438
  %903 = sub i32 %902, %464
  %904 = sub i32 %903, %472
  %905 = sub i32 %904, %477
  %906 = add i32 %905, %480
  %907 = sub i32 %906, %500
  %908 = sub i32 %907, %502
  %909 = sub i32 %908, %505
  %910 = add i32 %909, %512
  %911 = sub i32 %910, %515
  %912 = add i32 %911, %517
  %913 = add i32 %912, %520
  %914 = sub i32 %913, %456
  %915 = sub i32 %914, %403
  %916 = add i32 %915, %560
  %917 = add i32 %916, %552
  %918 = add i32 %917, %586
  %919 = icmp eq i32 %21, %918
  %920 = select i1 %919, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %921 = tail call i32 @puts(i8* nonnull dereferenceable(1) %920)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
