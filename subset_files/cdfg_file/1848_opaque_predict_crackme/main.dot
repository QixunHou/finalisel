digraph "DFG for'main' function" {
	Node0x9b6898[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x9b6918[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x9b69a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x9b6a08[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x9b6ab8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x9b6ee8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x9b6fc8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x9b70c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9b7188[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x9b7238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x9b72f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x9b73a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x9b1a50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x9b75a8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x9b8518[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x9b8b88[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x9b8be8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x9b8c60[shape=record, label="  %14 = add i32 %11, 1"];
	Node0x9b8cd0[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0x9b8d40[shape=record, label="  %16 = and i32 %11, %15"];
	Node0x9b8db0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x9b8e20[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x9b8e90[shape=record, label="  %19 = xor i32 %12, %11"];
	Node0x9b8f00[shape=record, label="  %20 = or i32 %11, %15"];
	Node0x9b8f70[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x9b8fe0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x9b9050[shape=record, label="  %23 = xor i32 %10, -1"];
	Node0x9b90c0[shape=record, label="  %24 = and i32 %13, %10"];
	Node0x9b9130[shape=record, label="  %25 = or i32 %13, %10"];
	Node0x9b91a0[shape=record, label="  %26 = and i32 %13, %23"];
	Node0x9b9210[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x9b9280[shape=record, label="  %28 = xor i32 %25, -1"];
	Node0x9b92f0[shape=record, label="  %29 = xor i32 %13, -1"];
	Node0x9b9360[shape=record, label="  %30 = and i32 %10, %29"];
	Node0x9b93d0[shape=record, label="  %31 = shl i32 %24, 2"];
	Node0x9b9440[shape=record, label="  %32 = add i32 %28, %22"];
	Node0x9b94b0[shape=record, label="  %33 = add i32 %32, %30"];
	Node0x9b9520[shape=record, label="  %34 = mul i32 %33, -3"];
	Node0x9b9590[shape=record, label="  %35 = sub i32 %10, %12"];
	Node0x9b9600[shape=record, label="  %36 = add i32 %35, %20"];
	Node0x9b9670[shape=record, label="  %37 = shl i32 %36, 1"];
	Node0x9b96e0[shape=record, label="  %38 = sub i32 %19, %10"];
	Node0x9b9750[shape=record, label="  %39 = sub i32 %38, %16"];
	Node0x9b97c0[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x9b9830[shape=record, label="  %41 = sub i32 %40, %25"];
	Node0x9b98a0[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x9b9910[shape=record, label="  %43 = sub i32 %42, %26"];
	Node0x9b9980[shape=record, label="  %44 = add i32 %43, %18"];
	Node0x9b99f0[shape=record, label="  %45 = sub i32 %44, %31"];
	Node0x9b9a60[shape=record, label="  %46 = add i32 %45, %37"];
	Node0x9b9ad0[shape=record, label="  %47 = add i32 %46, %34"];
	Node0x9b9b40[shape=record, label="  %48 = icmp eq i32 %14, %47"];
	Node0x9568b8[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x9b9bd0[shape=record, label="  %50 = call i32 @puts(i8* nonnull dereferenceable(1) %49) #5"];
	Node0x9b9e78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x9b9fd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x9ba0e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x9ba1f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x9ba2b8[shape=record, label="  ret i32 0"];
	Node0x9b6898 -> Node0x9b6918;
	Node0x9b6918 -> Node0x9b69a8;
	Node0x9b69a8 -> Node0x9b6a08;
	Node0x9b6a08 -> Node0x9b6ab8;
	Node0x9b6ab8 -> Node0x9b6ee8;
	Node0x9b6ee8 -> Node0x9b6fc8;
	Node0x9b6fc8 -> Node0x9b70c8;
	Node0x9b70c8 -> Node0x9b7188;
	Node0x9b7188 -> Node0x9b7238;
	Node0x9b7238 -> Node0x9b72f8;
	Node0x9b72f8 -> Node0x9b73a8;
	Node0x9b73a8 -> Node0x9b1a50;
	Node0x9b1a50 -> Node0x9b75a8;
	Node0x9b75a8 -> Node0x9b8518;
	Node0x9b8518 -> Node0x9b8b88;
	Node0x9b8b88 -> Node0x9b8be8;
	Node0x9b8be8 -> Node0x9b8c60;
	Node0x9b8c60 -> Node0x9b8cd0;
	Node0x9b8cd0 -> Node0x9b8d40;
	Node0x9b8d40 -> Node0x9b8db0;
	Node0x9b8db0 -> Node0x9b8e20;
	Node0x9b8e20 -> Node0x9b8e90;
	Node0x9b8e90 -> Node0x9b8f00;
	Node0x9b8f00 -> Node0x9b8f70;
	Node0x9b8f70 -> Node0x9b8fe0;
	Node0x9b8fe0 -> Node0x9b9050;
	Node0x9b9050 -> Node0x9b90c0;
	Node0x9b90c0 -> Node0x9b9130;
	Node0x9b9130 -> Node0x9b91a0;
	Node0x9b91a0 -> Node0x9b9210;
	Node0x9b9210 -> Node0x9b9280;
	Node0x9b9280 -> Node0x9b92f0;
	Node0x9b92f0 -> Node0x9b9360;
	Node0x9b9360 -> Node0x9b93d0;
	Node0x9b93d0 -> Node0x9b9440;
	Node0x9b9440 -> Node0x9b94b0;
	Node0x9b94b0 -> Node0x9b9520;
	Node0x9b9520 -> Node0x9b9590;
	Node0x9b9590 -> Node0x9b9600;
	Node0x9b9600 -> Node0x9b9670;
	Node0x9b9670 -> Node0x9b96e0;
	Node0x9b96e0 -> Node0x9b9750;
	Node0x9b9750 -> Node0x9b97c0;
	Node0x9b97c0 -> Node0x9b9830;
	Node0x9b9830 -> Node0x9b98a0;
	Node0x9b98a0 -> Node0x9b9910;
	Node0x9b9910 -> Node0x9b9980;
	Node0x9b9980 -> Node0x9b99f0;
	Node0x9b99f0 -> Node0x9b9a60;
	Node0x9b9a60 -> Node0x9b9ad0;
	Node0x9b9ad0 -> Node0x9b9b40;
	Node0x9b9b40 -> Node0x9568b8;
	Node0x9568b8 -> Node0x9b9bd0;
	Node0x9b9bd0 -> Node0x9b9e78;
	Node0x9b9e78 -> Node0x9b9fd8;
	Node0x9b9fd8 -> Node0x9ba0e8;
	Node0x9ba0e8 -> Node0x9ba1f8;
	Node0x9ba1f8 -> Node0x9ba2b8;
edge [color=red]
	Node0x9b6898 -> Node0x9b6ab8;
	Node0x9b6ab8 -> Node0x9b6ee8;
	Node0x9b6918 -> Node0x9b6fc8;
	Node0x9b6fc8 -> Node0x9b70c8;
	Node0x9b69a8 -> Node0x9b7188;
	Node0x9b7188 -> Node0x9b7238;
	Node0x9b6a08 -> Node0x9b72f8;
	Node0x9b72f8 -> Node0x9b73a8;
	Node0x9b6898 -> Node0x9b1a50;
	Node0x9b6918 -> Node0x9b1a50;
	Node0x9b69a8 -> Node0x9b1a50;
	Node0x9b6a08 -> Node0x9b1a50;
	Node0x9b6898 -> Node0x9b75a8;
	Node0x9b6918 -> Node0x9b8518;
	Node0x9b69a8 -> Node0x9b8b88;
	Node0x9b6a08 -> Node0x9b8be8;
	Node0x9b8518 -> Node0x9b8c60;
	Node0x9b8b88 -> Node0x9b8cd0;
	Node0x9b8518 -> Node0x9b8d40;
	Node0x9b8cd0 -> Node0x9b8d40;
	Node0x9b8d40 -> Node0x9b8db0;
	Node0x9b8db0 -> Node0x9b8e20;
	Node0x9b8b88 -> Node0x9b8e90;
	Node0x9b8518 -> Node0x9b8e90;
	Node0x9b8518 -> Node0x9b8f00;
	Node0x9b8cd0 -> Node0x9b8f00;
	Node0x9b8b88 -> Node0x9b8f70;
	Node0x9b8518 -> Node0x9b8f70;
	Node0x9b8f70 -> Node0x9b8fe0;
	Node0x9b75a8 -> Node0x9b9050;
	Node0x9b8be8 -> Node0x9b90c0;
	Node0x9b75a8 -> Node0x9b90c0;
	Node0x9b8be8 -> Node0x9b9130;
	Node0x9b75a8 -> Node0x9b9130;
	Node0x9b8be8 -> Node0x9b91a0;
	Node0x9b9050 -> Node0x9b91a0;
	Node0x9b91a0 -> Node0x9b9210;
	Node0x9b9130 -> Node0x9b9280;
	Node0x9b8be8 -> Node0x9b92f0;
	Node0x9b75a8 -> Node0x9b9360;
	Node0x9b92f0 -> Node0x9b9360;
	Node0x9b90c0 -> Node0x9b93d0;
	Node0x9b9280 -> Node0x9b9440;
	Node0x9b8fe0 -> Node0x9b9440;
	Node0x9b9440 -> Node0x9b94b0;
	Node0x9b9360 -> Node0x9b94b0;
	Node0x9b94b0 -> Node0x9b9520;
	Node0x9b75a8 -> Node0x9b9590;
	Node0x9b8b88 -> Node0x9b9590;
	Node0x9b9590 -> Node0x9b9600;
	Node0x9b8f00 -> Node0x9b9600;
	Node0x9b9600 -> Node0x9b9670;
	Node0x9b8e90 -> Node0x9b96e0;
	Node0x9b75a8 -> Node0x9b96e0;
	Node0x9b96e0 -> Node0x9b9750;
	Node0x9b8d40 -> Node0x9b9750;
	Node0x9b9750 -> Node0x9b97c0;
	Node0x9b90c0 -> Node0x9b97c0;
	Node0x9b97c0 -> Node0x9b9830;
	Node0x9b9130 -> Node0x9b9830;
	Node0x9b9830 -> Node0x9b98a0;
	Node0x9b9210 -> Node0x9b98a0;
	Node0x9b98a0 -> Node0x9b9910;
	Node0x9b91a0 -> Node0x9b9910;
	Node0x9b9910 -> Node0x9b9980;
	Node0x9b8e20 -> Node0x9b9980;
	Node0x9b9980 -> Node0x9b99f0;
	Node0x9b93d0 -> Node0x9b99f0;
	Node0x9b99f0 -> Node0x9b9a60;
	Node0x9b9670 -> Node0x9b9a60;
	Node0x9b9a60 -> Node0x9b9ad0;
	Node0x9b9520 -> Node0x9b9ad0;
	Node0x9b8c60 -> Node0x9b9b40;
	Node0x9b9ad0 -> Node0x9b9b40;
	Node0x9b9b40 -> Node0x9568b8;
	Node0x9568b8 -> Node0x9b9bd0;
	Node0x9b72f8 -> Node0x9b9e78;
	Node0x9b7188 -> Node0x9b9fd8;
	Node0x9b6fc8 -> Node0x9ba0e8;
	Node0x9b6ab8 -> Node0x9ba1f8;
}
