digraph "DFG for'crackme' function" {
	Node0x2312710[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x2312d90[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x2312e30[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x2312ea0[shape=record, label="  %8 = or i32 %7, %3"];
	Node0x2312f40[shape=record, label="  %9 = shl i32 %8, 2"];
	Node0x2312fb0[shape=record, label="  %10 = add i32 %0, 2"];
	Node0x2313020[shape=record, label="  %11 = sub i32 %10, %6"];
	Node0x2313090[shape=record, label="  %12 = sub i32 %11, %9"];
	Node0x2313100[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0x2313170[shape=record, label="  %14 = and i32 %13, %1"];
	Node0x23131e0[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x2313250[shape=record, label="  %16 = xor i32 %5, -1"];
	Node0x23132f0[shape=record, label="  %17 = mul i32 %16, -5"];
	Node0x2313360[shape=record, label="  %18 = or i32 %13, %1"];
	Node0x23133d0[shape=record, label="  %19 = shl i32 %15, 2"];
	Node0x2313470[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0x23134e0[shape=record, label="  %21 = shl i32 %18, 2"];
	Node0x2313550[shape=record, label="  %22 = xor i32 %21, -4"];
	Node0x23135f0[shape=record, label="  %23 = mul i32 %14, -6"];
	Node0x2313660[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0x23136d0[shape=record, label="  %25 = shl i32 %3, 1"];
	Node0x2313740[shape=record, label="  %26 = and i32 %7, %3"];
	Node0x23137b0[shape=record, label="  %27 = and i32 %3, %0"];
	Node0x2313820[shape=record, label="  %28 = or i32 %3, %0"];
	Node0x2313890[shape=record, label="  %29 = xor i32 %8, -1"];
	Node0x2313900[shape=record, label="  %30 = sub i32 %29, %26"];
	Node0x23139a0[shape=record, label="  %31 = mul i32 %30, 3"];
	Node0x2313a10[shape=record, label="  %32 = add i32 %2, %1"];
	Node0x2313c90[shape=record, label="  %33 = add i32 %32, %27"];
	Node0x2313d00[shape=record, label="  %34 = add i32 %33, %24"];
	Node0x2313d70[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x2313e10[shape=record, label="  %36 = sub i32 6, %0"];
	Node0x2313e80[shape=record, label="  %37 = add i32 %36, %14"];
	Node0x2313ef0[shape=record, label="  %38 = add i32 %37, %18"];
	Node0x2313f60[shape=record, label="  %39 = add i32 %38, %3"];
	Node0x2313fd0[shape=record, label="  %40 = add i32 %39, %17"];
	Node0x2314040[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x23140b0[shape=record, label="  %42 = sub i32 %41, %25"];
	Node0x2314120[shape=record, label="  %43 = add i32 %42, %26"];
	Node0x2314190[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x2314200[shape=record, label="  %45 = add i32 %44, %20"];
	Node0x2314270[shape=record, label="  %46 = sub i32 %45, %22"];
	Node0x23142e0[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x2314350[shape=record, label="  %48 = add i32 %47, %35"];
	Node0x23143c0[shape=record, label="  %49 = icmp eq i32 %12, %48"];
	Node0x22b3268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2314860[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x23148b0[shape=record, label="  ret void"];
	Node0x2312710 -> Node0x2312d90;
	Node0x2312d90 -> Node0x2312e30;
	Node0x2312e30 -> Node0x2312ea0;
	Node0x2312ea0 -> Node0x2312f40;
	Node0x2312f40 -> Node0x2312fb0;
	Node0x2312fb0 -> Node0x2313020;
	Node0x2313020 -> Node0x2313090;
	Node0x2313090 -> Node0x2313100;
	Node0x2313100 -> Node0x2313170;
	Node0x2313170 -> Node0x23131e0;
	Node0x23131e0 -> Node0x2313250;
	Node0x2313250 -> Node0x23132f0;
	Node0x23132f0 -> Node0x2313360;
	Node0x2313360 -> Node0x23133d0;
	Node0x23133d0 -> Node0x2313470;
	Node0x2313470 -> Node0x23134e0;
	Node0x23134e0 -> Node0x2313550;
	Node0x2313550 -> Node0x23135f0;
	Node0x23135f0 -> Node0x2313660;
	Node0x2313660 -> Node0x23136d0;
	Node0x23136d0 -> Node0x2313740;
	Node0x2313740 -> Node0x23137b0;
	Node0x23137b0 -> Node0x2313820;
	Node0x2313820 -> Node0x2313890;
	Node0x2313890 -> Node0x2313900;
	Node0x2313900 -> Node0x23139a0;
	Node0x23139a0 -> Node0x2313a10;
	Node0x2313a10 -> Node0x2313c90;
	Node0x2313c90 -> Node0x2313d00;
	Node0x2313d00 -> Node0x2313d70;
	Node0x2313d70 -> Node0x2313e10;
	Node0x2313e10 -> Node0x2313e80;
	Node0x2313e80 -> Node0x2313ef0;
	Node0x2313ef0 -> Node0x2313f60;
	Node0x2313f60 -> Node0x2313fd0;
	Node0x2313fd0 -> Node0x2314040;
	Node0x2314040 -> Node0x23140b0;
	Node0x23140b0 -> Node0x2314120;
	Node0x2314120 -> Node0x2314190;
	Node0x2314190 -> Node0x2314200;
	Node0x2314200 -> Node0x2314270;
	Node0x2314270 -> Node0x23142e0;
	Node0x23142e0 -> Node0x2314350;
	Node0x2314350 -> Node0x23143c0;
	Node0x23143c0 -> Node0x22b3268;
	Node0x22b3268 -> Node0x2314860;
	Node0x2314860 -> Node0x23148b0;
edge [color=red]
	Node0x2312710 -> Node0x2312d90;
	Node0x2312e30 -> Node0x2312ea0;
	Node0x2312ea0 -> Node0x2312f40;
	Node0x2312fb0 -> Node0x2313020;
	Node0x2312d90 -> Node0x2313020;
	Node0x2313020 -> Node0x2313090;
	Node0x2312f40 -> Node0x2313090;
	Node0x2313100 -> Node0x2313170;
	Node0x2312710 -> Node0x2313250;
	Node0x2313250 -> Node0x23132f0;
	Node0x2313100 -> Node0x2313360;
	Node0x23131e0 -> Node0x23133d0;
	Node0x23133d0 -> Node0x2313470;
	Node0x2313360 -> Node0x23134e0;
	Node0x23134e0 -> Node0x2313550;
	Node0x2313170 -> Node0x23135f0;
	Node0x2312e30 -> Node0x2313740;
	Node0x2312ea0 -> Node0x2313890;
	Node0x2313890 -> Node0x2313900;
	Node0x2313740 -> Node0x2313900;
	Node0x2313900 -> Node0x23139a0;
	Node0x2313a10 -> Node0x2313c90;
	Node0x23137b0 -> Node0x2313c90;
	Node0x2313c90 -> Node0x2313d00;
	Node0x2313660 -> Node0x2313d00;
	Node0x2313d00 -> Node0x2313d70;
	Node0x2313e10 -> Node0x2313e80;
	Node0x2313170 -> Node0x2313e80;
	Node0x2313e80 -> Node0x2313ef0;
	Node0x2313360 -> Node0x2313ef0;
	Node0x2313ef0 -> Node0x2313f60;
	Node0x2313f60 -> Node0x2313fd0;
	Node0x23132f0 -> Node0x2313fd0;
	Node0x2313fd0 -> Node0x2314040;
	Node0x23135f0 -> Node0x2314040;
	Node0x2314040 -> Node0x23140b0;
	Node0x23136d0 -> Node0x23140b0;
	Node0x23140b0 -> Node0x2314120;
	Node0x2313740 -> Node0x2314120;
	Node0x2314120 -> Node0x2314190;
	Node0x2313820 -> Node0x2314190;
	Node0x2314190 -> Node0x2314200;
	Node0x2313470 -> Node0x2314200;
	Node0x2314200 -> Node0x2314270;
	Node0x2313550 -> Node0x2314270;
	Node0x2314270 -> Node0x23142e0;
	Node0x23139a0 -> Node0x23142e0;
	Node0x23142e0 -> Node0x2314350;
	Node0x2313d70 -> Node0x2314350;
	Node0x2313090 -> Node0x23143c0;
	Node0x2314350 -> Node0x23143c0;
	Node0x23143c0 -> Node0x22b3268;
	Node0x22b3268 -> Node0x2314860;
}
