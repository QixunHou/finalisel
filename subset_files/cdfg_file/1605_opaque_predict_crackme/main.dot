digraph "DFG for'main' function" {
	Node0x1e78ab8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e78b38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e78bc8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1e78c28[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1e78cd8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1e79108[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e791e8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1e792e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e793a8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1e79458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1e79518[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1e795c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1e73af0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1e797c8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e7a738[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e7ada8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1e7ae08[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1e7ae80[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1e7aef0[shape=record, label="  %15 = add i32 %14, 1"];
	Node0x1e7af60[shape=record, label="  %16 = xor i32 %13, %10"];
	Node0x1e7afd0[shape=record, label="  %17 = sub i32 %15, %16"];
	Node0x1e7b040[shape=record, label="  %18 = shl i32 %14, 1"];
	Node0x1e7b0b0[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x1e7b120[shape=record, label="  %20 = xor i32 %12, 2147483647"];
	Node0x1e7b190[shape=record, label="  %21 = xor i32 %11, -1"];
	Node0x1e7b200[shape=record, label="  %22 = and i32 %12, %21"];
	Node0x1e7b270[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x1e7b2e0[shape=record, label="  %24 = shl i32 %16, 1"];
	Node0x1e7b350[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x1e7b3c0[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0x1e7b430[shape=record, label="  %27 = xor i32 %13, -1"];
	Node0x1e7b4a0[shape=record, label="  %28 = and i32 %13, %26"];
	Node0x1e7b510[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x1e7b580[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x1e7b5f0[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x1e7b660[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0x1e7b6d0[shape=record, label="  %33 = and i32 %13, %10"];
	Node0x1e7b740[shape=record, label="  %34 = add i32 %28, %22"];
	Node0x1e7b7b0[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x1e7b820[shape=record, label="  %36 = add i32 %20, %11"];
	Node0x1e7b890[shape=record, label="  %37 = add i32 %36, %19"];
	Node0x1e7b900[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x1e7b970[shape=record, label="  %39 = sub i32 5, %11"];
	Node0x1e7b9e0[shape=record, label="  %40 = sub i32 %39, %23"];
	Node0x1e7ba50[shape=record, label="  %41 = sub i32 %40, %13"];
	Node0x1e7bac0[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x1e7bb30[shape=record, label="  %43 = sub i32 %42, %18"];
	Node0x1e7bba0[shape=record, label="  %44 = add i32 %43, %29"];
	Node0x1e7bc10[shape=record, label="  %45 = sub i32 %44, %30"];
	Node0x1e7bc80[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x1e7bcf0[shape=record, label="  %47 = add i32 %46, %25"];
	Node0x1e7bd60[shape=record, label="  %48 = sub i32 %47, %32"];
	Node0x1e7bdd0[shape=record, label="  %49 = add i32 %48, %35"];
	Node0x1e7be40[shape=record, label="  %50 = add i32 %49, %38"];
	Node0x1e7beb0[shape=record, label="  %51 = icmp eq i32 %17, %50"];
	Node0x1e188b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e7bf40[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0x1e7c1e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1e7c348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1e7c458[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e7c568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e7c628[shape=record, label="  ret i32 0"];
	Node0x1e78ab8 -> Node0x1e78b38;
	Node0x1e78b38 -> Node0x1e78bc8;
	Node0x1e78bc8 -> Node0x1e78c28;
	Node0x1e78c28 -> Node0x1e78cd8;
	Node0x1e78cd8 -> Node0x1e79108;
	Node0x1e79108 -> Node0x1e791e8;
	Node0x1e791e8 -> Node0x1e792e8;
	Node0x1e792e8 -> Node0x1e793a8;
	Node0x1e793a8 -> Node0x1e79458;
	Node0x1e79458 -> Node0x1e79518;
	Node0x1e79518 -> Node0x1e795c8;
	Node0x1e795c8 -> Node0x1e73af0;
	Node0x1e73af0 -> Node0x1e797c8;
	Node0x1e797c8 -> Node0x1e7a738;
	Node0x1e7a738 -> Node0x1e7ada8;
	Node0x1e7ada8 -> Node0x1e7ae08;
	Node0x1e7ae08 -> Node0x1e7ae80;
	Node0x1e7ae80 -> Node0x1e7aef0;
	Node0x1e7aef0 -> Node0x1e7af60;
	Node0x1e7af60 -> Node0x1e7afd0;
	Node0x1e7afd0 -> Node0x1e7b040;
	Node0x1e7b040 -> Node0x1e7b0b0;
	Node0x1e7b0b0 -> Node0x1e7b120;
	Node0x1e7b120 -> Node0x1e7b190;
	Node0x1e7b190 -> Node0x1e7b200;
	Node0x1e7b200 -> Node0x1e7b270;
	Node0x1e7b270 -> Node0x1e7b2e0;
	Node0x1e7b2e0 -> Node0x1e7b350;
	Node0x1e7b350 -> Node0x1e7b3c0;
	Node0x1e7b3c0 -> Node0x1e7b430;
	Node0x1e7b430 -> Node0x1e7b4a0;
	Node0x1e7b4a0 -> Node0x1e7b510;
	Node0x1e7b510 -> Node0x1e7b580;
	Node0x1e7b580 -> Node0x1e7b5f0;
	Node0x1e7b5f0 -> Node0x1e7b660;
	Node0x1e7b660 -> Node0x1e7b6d0;
	Node0x1e7b6d0 -> Node0x1e7b740;
	Node0x1e7b740 -> Node0x1e7b7b0;
	Node0x1e7b7b0 -> Node0x1e7b820;
	Node0x1e7b820 -> Node0x1e7b890;
	Node0x1e7b890 -> Node0x1e7b900;
	Node0x1e7b900 -> Node0x1e7b970;
	Node0x1e7b970 -> Node0x1e7b9e0;
	Node0x1e7b9e0 -> Node0x1e7ba50;
	Node0x1e7ba50 -> Node0x1e7bac0;
	Node0x1e7bac0 -> Node0x1e7bb30;
	Node0x1e7bb30 -> Node0x1e7bba0;
	Node0x1e7bba0 -> Node0x1e7bc10;
	Node0x1e7bc10 -> Node0x1e7bc80;
	Node0x1e7bc80 -> Node0x1e7bcf0;
	Node0x1e7bcf0 -> Node0x1e7bd60;
	Node0x1e7bd60 -> Node0x1e7bdd0;
	Node0x1e7bdd0 -> Node0x1e7be40;
	Node0x1e7be40 -> Node0x1e7beb0;
	Node0x1e7beb0 -> Node0x1e188b8;
	Node0x1e188b8 -> Node0x1e7bf40;
	Node0x1e7bf40 -> Node0x1e7c1e8;
	Node0x1e7c1e8 -> Node0x1e7c348;
	Node0x1e7c348 -> Node0x1e7c458;
	Node0x1e7c458 -> Node0x1e7c568;
	Node0x1e7c568 -> Node0x1e7c628;
edge [color=red]
	Node0x1e78ab8 -> Node0x1e78cd8;
	Node0x1e78cd8 -> Node0x1e79108;
	Node0x1e78b38 -> Node0x1e791e8;
	Node0x1e791e8 -> Node0x1e792e8;
	Node0x1e78bc8 -> Node0x1e793a8;
	Node0x1e793a8 -> Node0x1e79458;
	Node0x1e78c28 -> Node0x1e79518;
	Node0x1e79518 -> Node0x1e795c8;
	Node0x1e78ab8 -> Node0x1e73af0;
	Node0x1e78b38 -> Node0x1e73af0;
	Node0x1e78bc8 -> Node0x1e73af0;
	Node0x1e78c28 -> Node0x1e73af0;
	Node0x1e78ab8 -> Node0x1e797c8;
	Node0x1e78b38 -> Node0x1e7a738;
	Node0x1e78bc8 -> Node0x1e7ada8;
	Node0x1e78c28 -> Node0x1e7ae08;
	Node0x1e7ada8 -> Node0x1e7ae80;
	Node0x1e7a738 -> Node0x1e7ae80;
	Node0x1e7ae80 -> Node0x1e7aef0;
	Node0x1e7ae08 -> Node0x1e7af60;
	Node0x1e797c8 -> Node0x1e7af60;
	Node0x1e7aef0 -> Node0x1e7afd0;
	Node0x1e7af60 -> Node0x1e7afd0;
	Node0x1e7ae80 -> Node0x1e7b040;
	Node0x1e7ada8 -> Node0x1e7b0b0;
	Node0x1e7a738 -> Node0x1e7b0b0;
	Node0x1e7ada8 -> Node0x1e7b120;
	Node0x1e7a738 -> Node0x1e7b190;
	Node0x1e7ada8 -> Node0x1e7b200;
	Node0x1e7b190 -> Node0x1e7b200;
	Node0x1e7ada8 -> Node0x1e7b270;
	Node0x1e7a738 -> Node0x1e7b270;
	Node0x1e7af60 -> Node0x1e7b2e0;
	Node0x1e7b2e0 -> Node0x1e7b350;
	Node0x1e797c8 -> Node0x1e7b3c0;
	Node0x1e7ae08 -> Node0x1e7b430;
	Node0x1e7ae08 -> Node0x1e7b4a0;
	Node0x1e7b3c0 -> Node0x1e7b4a0;
	Node0x1e7b4a0 -> Node0x1e7b510;
	Node0x1e7ae08 -> Node0x1e7b580;
	Node0x1e797c8 -> Node0x1e7b580;
	Node0x1e7b580 -> Node0x1e7b5f0;
	Node0x1e7b5f0 -> Node0x1e7b660;
	Node0x1e7ae08 -> Node0x1e7b6d0;
	Node0x1e797c8 -> Node0x1e7b6d0;
	Node0x1e7b4a0 -> Node0x1e7b740;
	Node0x1e7b200 -> Node0x1e7b740;
	Node0x1e7b740 -> Node0x1e7b7b0;
	Node0x1e7b120 -> Node0x1e7b820;
	Node0x1e7a738 -> Node0x1e7b820;
	Node0x1e7b820 -> Node0x1e7b890;
	Node0x1e7b0b0 -> Node0x1e7b890;
	Node0x1e7b890 -> Node0x1e7b900;
	Node0x1e7a738 -> Node0x1e7b970;
	Node0x1e7b970 -> Node0x1e7b9e0;
	Node0x1e7b270 -> Node0x1e7b9e0;
	Node0x1e7b9e0 -> Node0x1e7ba50;
	Node0x1e7ae08 -> Node0x1e7ba50;
	Node0x1e7ba50 -> Node0x1e7bac0;
	Node0x1e7b430 -> Node0x1e7bac0;
	Node0x1e7bac0 -> Node0x1e7bb30;
	Node0x1e7b040 -> Node0x1e7bb30;
	Node0x1e7bb30 -> Node0x1e7bba0;
	Node0x1e7b510 -> Node0x1e7bba0;
	Node0x1e7bba0 -> Node0x1e7bc10;
	Node0x1e7b580 -> Node0x1e7bc10;
	Node0x1e7bc10 -> Node0x1e7bc80;
	Node0x1e7b6d0 -> Node0x1e7bc80;
	Node0x1e7bc80 -> Node0x1e7bcf0;
	Node0x1e7b350 -> Node0x1e7bcf0;
	Node0x1e7bcf0 -> Node0x1e7bd60;
	Node0x1e7b660 -> Node0x1e7bd60;
	Node0x1e7bd60 -> Node0x1e7bdd0;
	Node0x1e7b7b0 -> Node0x1e7bdd0;
	Node0x1e7bdd0 -> Node0x1e7be40;
	Node0x1e7b900 -> Node0x1e7be40;
	Node0x1e7afd0 -> Node0x1e7beb0;
	Node0x1e7be40 -> Node0x1e7beb0;
	Node0x1e7beb0 -> Node0x1e188b8;
	Node0x1e188b8 -> Node0x1e7bf40;
	Node0x1e79518 -> Node0x1e7c1e8;
	Node0x1e793a8 -> Node0x1e7c348;
	Node0x1e791e8 -> Node0x1e7c458;
	Node0x1e78cd8 -> Node0x1e7c568;
}
