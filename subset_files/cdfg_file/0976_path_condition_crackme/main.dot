digraph "DFG for'main' function" {
	Node0x2093ae8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2093b68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2093bf8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x2094058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2094138[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x2094258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2094490[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x2094548[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20954b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2095b40[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x2095bb0[shape=record, label="  %9 = sub i32 %6, %8"];
	Node0x2095c20[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x2095c90[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x2095d00[shape=record, label="  %12 = shl i32 %7, 1"];
	Node0x2095d70[shape=record, label="  %13 = or i32 %6, %10"];
	Node0x2095de0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x2095e50[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x2095ec0[shape=record, label="  %16 = and i32 %6, %10"];
	Node0x2095f30[shape=record, label="  %17 = and i32 %7, %6"];
	Node0x2095fa0[shape=record, label="  %18 = mul i32 %17, 5"];
	Node0x2096010[shape=record, label="  %19 = sub i32 1, %6"];
	Node0x2096080[shape=record, label="  %20 = add i32 %19, %8"];
	Node0x20960f0[shape=record, label="  %21 = add i32 %20, %11"];
	Node0x2096160[shape=record, label="  %22 = sub i32 %21, %12"];
	Node0x20961d0[shape=record, label="  %23 = add i32 %22, %15"];
	Node0x2096240[shape=record, label="  %24 = add i32 %23, %13"];
	Node0x20962b0[shape=record, label="  %25 = sub i32 %24, %16"];
	Node0x2096320[shape=record, label="  %26 = sub i32 %25, %14"];
	Node0x2096390[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x2096400[shape=record, label="  %28 = icmp eq i32 %9, %27"];
	Node0x20349d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2096490[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x20966e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2096848[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x2096908[shape=record, label="  ret i32 0"];
	Node0x2093ae8 -> Node0x2093b68;
	Node0x2093b68 -> Node0x2093bf8;
	Node0x2093bf8 -> Node0x2094058;
	Node0x2094058 -> Node0x2094138;
	Node0x2094138 -> Node0x2094258;
	Node0x2094258 -> Node0x2094490;
	Node0x2094490 -> Node0x2094548;
	Node0x2094548 -> Node0x20954b8;
	Node0x20954b8 -> Node0x2095b40;
	Node0x2095b40 -> Node0x2095bb0;
	Node0x2095bb0 -> Node0x2095c20;
	Node0x2095c20 -> Node0x2095c90;
	Node0x2095c90 -> Node0x2095d00;
	Node0x2095d00 -> Node0x2095d70;
	Node0x2095d70 -> Node0x2095de0;
	Node0x2095de0 -> Node0x2095e50;
	Node0x2095e50 -> Node0x2095ec0;
	Node0x2095ec0 -> Node0x2095f30;
	Node0x2095f30 -> Node0x2095fa0;
	Node0x2095fa0 -> Node0x2096010;
	Node0x2096010 -> Node0x2096080;
	Node0x2096080 -> Node0x20960f0;
	Node0x20960f0 -> Node0x2096160;
	Node0x2096160 -> Node0x20961d0;
	Node0x20961d0 -> Node0x2096240;
	Node0x2096240 -> Node0x20962b0;
	Node0x20962b0 -> Node0x2096320;
	Node0x2096320 -> Node0x2096390;
	Node0x2096390 -> Node0x2096400;
	Node0x2096400 -> Node0x20349d8;
	Node0x20349d8 -> Node0x2096490;
	Node0x2096490 -> Node0x20966e8;
	Node0x20966e8 -> Node0x2096848;
	Node0x2096848 -> Node0x2096908;
edge [color=red]
	Node0x2093ae8 -> Node0x2093bf8;
	Node0x2093bf8 -> Node0x2094058;
	Node0x2093b68 -> Node0x2094138;
	Node0x2094138 -> Node0x2094258;
	Node0x2093ae8 -> Node0x2094490;
	Node0x2093b68 -> Node0x2094490;
	Node0x2093ae8 -> Node0x2094548;
	Node0x2093b68 -> Node0x20954b8;
	Node0x20954b8 -> Node0x2095b40;
	Node0x2094548 -> Node0x2095b40;
	Node0x2094548 -> Node0x2095bb0;
	Node0x2095b40 -> Node0x2095bb0;
	Node0x20954b8 -> Node0x2095c20;
	Node0x2095c20 -> Node0x2095c90;
	Node0x20954b8 -> Node0x2095d00;
	Node0x2094548 -> Node0x2095d70;
	Node0x2095c20 -> Node0x2095d70;
	Node0x2095d70 -> Node0x2095de0;
	Node0x20954b8 -> Node0x2095e50;
	Node0x2094548 -> Node0x2095e50;
	Node0x2094548 -> Node0x2095ec0;
	Node0x2095c20 -> Node0x2095ec0;
	Node0x20954b8 -> Node0x2095f30;
	Node0x2094548 -> Node0x2095f30;
	Node0x2095f30 -> Node0x2095fa0;
	Node0x2094548 -> Node0x2096010;
	Node0x2096010 -> Node0x2096080;
	Node0x2095b40 -> Node0x2096080;
	Node0x2096080 -> Node0x20960f0;
	Node0x2095c90 -> Node0x20960f0;
	Node0x20960f0 -> Node0x2096160;
	Node0x2095d00 -> Node0x2096160;
	Node0x2096160 -> Node0x20961d0;
	Node0x2095e50 -> Node0x20961d0;
	Node0x20961d0 -> Node0x2096240;
	Node0x2095d70 -> Node0x2096240;
	Node0x2096240 -> Node0x20962b0;
	Node0x2095ec0 -> Node0x20962b0;
	Node0x20962b0 -> Node0x2096320;
	Node0x2095de0 -> Node0x2096320;
	Node0x2096320 -> Node0x2096390;
	Node0x2095fa0 -> Node0x2096390;
	Node0x2095bb0 -> Node0x2096400;
	Node0x2096390 -> Node0x2096400;
	Node0x2096400 -> Node0x20349d8;
	Node0x20349d8 -> Node0x2096490;
	Node0x2094138 -> Node0x20966e8;
	Node0x2093bf8 -> Node0x2096848;
}
