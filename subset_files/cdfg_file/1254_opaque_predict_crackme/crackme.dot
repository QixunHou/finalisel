digraph "DFG for'crackme' function" {
	Node0x15485d0[shape=record, label="  %3 = xor i32 %1, %0"];
	Node0x1548c80[shape=record, label="  %4 = add i32 %3, 1"];
	Node0x1548d40[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x1548db0[shape=record, label="  %6 = shl i32 %3, 1"];
	Node0x1548e20[shape=record, label="  %7 = or i32 %1, %0"];
	Node0x1548e90[shape=record, label="  %8 = and i32 %1, %0"];
	Node0x1548f00[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1548f70[shape=record, label="  %10 = and i32 %5, %0"];
	Node0x1548fe0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x1549050[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x15490c0[shape=record, label="  %13 = xor i32 %0, -1"];
	Node0x1549130[shape=record, label="  %14 = and i32 %13, %1"];
	Node0x15491d0[shape=record, label="  %15 = shl i32 %8, 2"];
	Node0x1549240[shape=record, label="  %16 = add i32 %10, %12"];
	Node0x15492e0[shape=record, label="  %17 = mul i32 %16, -9"];
	Node0x1549350[shape=record, label="  %18 = sub i32 %5, %14"];
	Node0x15493f0[shape=record, label="  %19 = mul i32 %18, 5"];
	Node0x1549460[shape=record, label="  %20 = add i32 %0, -1"];
	Node0x15494d0[shape=record, label="  %21 = add i32 %20, %1"];
	Node0x1549540[shape=record, label="  %22 = sub i32 %21, %7"];
	Node0x15495b0[shape=record, label="  %23 = add i32 %22, %9"];
	Node0x1549620[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x1549690[shape=record, label="  %25 = add i32 %24, %6"];
	Node0x1549700[shape=record, label="  %26 = sub i32 %25, %15"];
	Node0x1549770[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x15497e0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x1549850[shape=record, label="  %29 = icmp eq i32 %4, %28"];
	Node0x14e9268[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1549cf0[shape=record, label="  %31 = tail call i32 @puts(i8* nonnull dereferenceable(1) %30)"];
	Node0x1549d40[shape=record, label="  ret void"];
	Node0x15485d0 -> Node0x1548c80;
	Node0x1548c80 -> Node0x1548d40;
	Node0x1548d40 -> Node0x1548db0;
	Node0x1548db0 -> Node0x1548e20;
	Node0x1548e20 -> Node0x1548e90;
	Node0x1548e90 -> Node0x1548f00;
	Node0x1548f00 -> Node0x1548f70;
	Node0x1548f70 -> Node0x1548fe0;
	Node0x1548fe0 -> Node0x1549050;
	Node0x1549050 -> Node0x15490c0;
	Node0x15490c0 -> Node0x1549130;
	Node0x1549130 -> Node0x15491d0;
	Node0x15491d0 -> Node0x1549240;
	Node0x1549240 -> Node0x15492e0;
	Node0x15492e0 -> Node0x1549350;
	Node0x1549350 -> Node0x15493f0;
	Node0x15493f0 -> Node0x1549460;
	Node0x1549460 -> Node0x15494d0;
	Node0x15494d0 -> Node0x1549540;
	Node0x1549540 -> Node0x15495b0;
	Node0x15495b0 -> Node0x1549620;
	Node0x1549620 -> Node0x1549690;
	Node0x1549690 -> Node0x1549700;
	Node0x1549700 -> Node0x1549770;
	Node0x1549770 -> Node0x15497e0;
	Node0x15497e0 -> Node0x1549850;
	Node0x1549850 -> Node0x14e9268;
	Node0x14e9268 -> Node0x1549cf0;
	Node0x1549cf0 -> Node0x1549d40;
edge [color=red]
	Node0x15485d0 -> Node0x1548c80;
	Node0x15485d0 -> Node0x1548db0;
	Node0x1548e90 -> Node0x1548f00;
	Node0x1548d40 -> Node0x1548f70;
	Node0x1548f70 -> Node0x1548fe0;
	Node0x1548e20 -> Node0x1549050;
	Node0x15490c0 -> Node0x1549130;
	Node0x1548e90 -> Node0x15491d0;
	Node0x1548f70 -> Node0x1549240;
	Node0x1549050 -> Node0x1549240;
	Node0x1549240 -> Node0x15492e0;
	Node0x1548d40 -> Node0x1549350;
	Node0x1549130 -> Node0x1549350;
	Node0x1549350 -> Node0x15493f0;
	Node0x1549460 -> Node0x15494d0;
	Node0x15494d0 -> Node0x1549540;
	Node0x1548e20 -> Node0x1549540;
	Node0x1549540 -> Node0x15495b0;
	Node0x1548f00 -> Node0x15495b0;
	Node0x15495b0 -> Node0x1549620;
	Node0x1548fe0 -> Node0x1549620;
	Node0x1549620 -> Node0x1549690;
	Node0x1548db0 -> Node0x1549690;
	Node0x1549690 -> Node0x1549700;
	Node0x15491d0 -> Node0x1549700;
	Node0x1549700 -> Node0x1549770;
	Node0x15492e0 -> Node0x1549770;
	Node0x1549770 -> Node0x15497e0;
	Node0x15493f0 -> Node0x15497e0;
	Node0x1548c80 -> Node0x1549850;
	Node0x15497e0 -> Node0x1549850;
	Node0x1549850 -> Node0x14e9268;
	Node0x14e9268 -> Node0x1549cf0;
}
