digraph "DFG for'main' function" {
	Node0x23d6c18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23d6c98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23d6d28[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x23d7188[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x23d7268[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x23d7388[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23d75c0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x23d7678[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23d85e8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23d8c70[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x23d8ce0[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x23d8d50[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x23d8dc0[shape=record, label="  %11 = mul i32 %10, -2"];
	Node0x23d8e30[shape=record, label="  %12 = xor i32 %6, -1"];
	Node0x23d8ea0[shape=record, label="  %13 = or i32 %11, 1"];
	Node0x23d8f10[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x23d8f80[shape=record, label="  %15 = shl i32 %14, 2"];
	Node0x23d8ff0[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x23d9060[shape=record, label="  %17 = xor i32 %7, %12"];
	Node0x23d90d0[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x23d9140[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x23d91b0[shape=record, label="  %20 = add i32 %14, %19"];
	Node0x23d9220[shape=record, label="  %21 = mul i32 %20, -3"];
	Node0x23d9290[shape=record, label="  %22 = add i32 %9, %8"];
	Node0x23d9300[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x23d9370[shape=record, label="  %24 = sub i32 %12, %6"];
	Node0x23d93e0[shape=record, label="  %25 = add i32 %24, %17"];
	Node0x23d9450[shape=record, label="  %26 = sub i32 %25, %16"];
	Node0x23d94c0[shape=record, label="  %27 = add i32 %26, %21"];
	Node0x23d9530[shape=record, label="  %28 = add i32 %27, %23"];
	Node0x23d95a0[shape=record, label="  %29 = icmp eq i32 %13, %28"];
	Node0x23779d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23d9630[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x23d9888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23d99e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x23d9aa8[shape=record, label="  ret i32 0"];
	Node0x23d6c18 -> Node0x23d6c98;
	Node0x23d6c98 -> Node0x23d6d28;
	Node0x23d6d28 -> Node0x23d7188;
	Node0x23d7188 -> Node0x23d7268;
	Node0x23d7268 -> Node0x23d7388;
	Node0x23d7388 -> Node0x23d75c0;
	Node0x23d75c0 -> Node0x23d7678;
	Node0x23d7678 -> Node0x23d85e8;
	Node0x23d85e8 -> Node0x23d8c70;
	Node0x23d8c70 -> Node0x23d8ce0;
	Node0x23d8ce0 -> Node0x23d8d50;
	Node0x23d8d50 -> Node0x23d8dc0;
	Node0x23d8dc0 -> Node0x23d8e30;
	Node0x23d8e30 -> Node0x23d8ea0;
	Node0x23d8ea0 -> Node0x23d8f10;
	Node0x23d8f10 -> Node0x23d8f80;
	Node0x23d8f80 -> Node0x23d8ff0;
	Node0x23d8ff0 -> Node0x23d9060;
	Node0x23d9060 -> Node0x23d90d0;
	Node0x23d90d0 -> Node0x23d9140;
	Node0x23d9140 -> Node0x23d91b0;
	Node0x23d91b0 -> Node0x23d9220;
	Node0x23d9220 -> Node0x23d9290;
	Node0x23d9290 -> Node0x23d9300;
	Node0x23d9300 -> Node0x23d9370;
	Node0x23d9370 -> Node0x23d93e0;
	Node0x23d93e0 -> Node0x23d9450;
	Node0x23d9450 -> Node0x23d94c0;
	Node0x23d94c0 -> Node0x23d9530;
	Node0x23d9530 -> Node0x23d95a0;
	Node0x23d95a0 -> Node0x23779d8;
	Node0x23779d8 -> Node0x23d9630;
	Node0x23d9630 -> Node0x23d9888;
	Node0x23d9888 -> Node0x23d99e8;
	Node0x23d99e8 -> Node0x23d9aa8;
edge [color=red]
	Node0x23d6c18 -> Node0x23d6d28;
	Node0x23d6d28 -> Node0x23d7188;
	Node0x23d6c98 -> Node0x23d7268;
	Node0x23d7268 -> Node0x23d7388;
	Node0x23d6c18 -> Node0x23d75c0;
	Node0x23d6c98 -> Node0x23d75c0;
	Node0x23d6c18 -> Node0x23d7678;
	Node0x23d6c98 -> Node0x23d85e8;
	Node0x23d85e8 -> Node0x23d8c70;
	Node0x23d7678 -> Node0x23d8ce0;
	Node0x23d8c70 -> Node0x23d8ce0;
	Node0x23d8ce0 -> Node0x23d8d50;
	Node0x23d8d50 -> Node0x23d8dc0;
	Node0x23d7678 -> Node0x23d8e30;
	Node0x23d8dc0 -> Node0x23d8ea0;
	Node0x23d85e8 -> Node0x23d8f10;
	Node0x23d7678 -> Node0x23d8f10;
	Node0x23d8f10 -> Node0x23d8f80;
	Node0x23d8f80 -> Node0x23d8ff0;
	Node0x23d85e8 -> Node0x23d9060;
	Node0x23d8e30 -> Node0x23d9060;
	Node0x23d85e8 -> Node0x23d90d0;
	Node0x23d7678 -> Node0x23d90d0;
	Node0x23d90d0 -> Node0x23d9140;
	Node0x23d8f10 -> Node0x23d91b0;
	Node0x23d9140 -> Node0x23d91b0;
	Node0x23d91b0 -> Node0x23d9220;
	Node0x23d8ce0 -> Node0x23d9290;
	Node0x23d8c70 -> Node0x23d9290;
	Node0x23d9290 -> Node0x23d9300;
	Node0x23d8e30 -> Node0x23d9370;
	Node0x23d7678 -> Node0x23d9370;
	Node0x23d9370 -> Node0x23d93e0;
	Node0x23d9060 -> Node0x23d93e0;
	Node0x23d93e0 -> Node0x23d9450;
	Node0x23d8ff0 -> Node0x23d9450;
	Node0x23d9450 -> Node0x23d94c0;
	Node0x23d9220 -> Node0x23d94c0;
	Node0x23d94c0 -> Node0x23d9530;
	Node0x23d9300 -> Node0x23d9530;
	Node0x23d8ea0 -> Node0x23d95a0;
	Node0x23d9530 -> Node0x23d95a0;
	Node0x23d95a0 -> Node0x23779d8;
	Node0x23779d8 -> Node0x23d9630;
	Node0x23d7268 -> Node0x23d9888;
	Node0x23d6d28 -> Node0x23d99e8;
}
