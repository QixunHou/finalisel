digraph "DFG for'main' function" {
	Node0x523668[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5236e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x523778[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x5237d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x523c58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x523d38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x523e38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x523ef8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x523fa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x524208[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x5242c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x524428[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x524488[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x52bc10[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x52be18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x52bf78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x52c088[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x52c148[shape=record, label="  ret i32 0"];
	Node0x523668 -> Node0x5236e8;
	Node0x5236e8 -> Node0x523778;
	Node0x523778 -> Node0x5237d8;
	Node0x5237d8 -> Node0x523c58;
	Node0x523c58 -> Node0x523d38;
	Node0x523d38 -> Node0x523e38;
	Node0x523e38 -> Node0x523ef8;
	Node0x523ef8 -> Node0x523fa8;
	Node0x523fa8 -> Node0x524208;
	Node0x524208 -> Node0x5242c8;
	Node0x5242c8 -> Node0x524428;
	Node0x524428 -> Node0x524488;
	Node0x524488 -> Node0x52bc10;
	Node0x52bc10 -> Node0x52be18;
	Node0x52be18 -> Node0x52bf78;
	Node0x52bf78 -> Node0x52c088;
	Node0x52c088 -> Node0x52c148;
edge [color=red]
	Node0x523668 -> Node0x5237d8;
	Node0x5237d8 -> Node0x523c58;
	Node0x5236e8 -> Node0x523d38;
	Node0x523d38 -> Node0x523e38;
	Node0x523778 -> Node0x523ef8;
	Node0x523ef8 -> Node0x523fa8;
	Node0x523668 -> Node0x524208;
	Node0x5236e8 -> Node0x524208;
	Node0x523778 -> Node0x524208;
	Node0x523668 -> Node0x5242c8;
	Node0x5236e8 -> Node0x524428;
	Node0x523778 -> Node0x524488;
	Node0x5242c8 -> Node0x52bc10;
	Node0x524428 -> Node0x52bc10;
	Node0x524488 -> Node0x52bc10;
	Node0x523ef8 -> Node0x52be18;
	Node0x523d38 -> Node0x52bf78;
	Node0x5237d8 -> Node0x52c088;
}
