digraph "DFG for'main' function" {
	Node0x1974a08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1974a88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1974b18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1974b78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1974c28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1975058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1975138[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1975238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19752f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x19753a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1975468[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1975518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x196fab0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1975718[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1976688[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1976cf8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1976d58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1976dd0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1976e40[shape=record, label="  %15 = and i32 %11, %14"];
	Node0x1976eb0[shape=record, label="  %16 = xor i32 %13, -1"];
	Node0x1976f20[shape=record, label="  %17 = mul i32 %16, -3"];
	Node0x1976f90[shape=record, label="  %18 = or i32 %13, %10"];
	Node0x1977000[shape=record, label="  %19 = add i32 %11, 1"];
	Node0x1977070[shape=record, label="  %20 = add i32 %19, %15"];
	Node0x19770e0[shape=record, label="  %21 = add i32 %20, %17"];
	Node0x1977150[shape=record, label="  %22 = sub i32 %21, %18"];
	Node0x19771c0[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0x1977230[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x19772a0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x1977310[shape=record, label="  %26 = or i32 %12, %11"];
	Node0x1977380[shape=record, label="  %27 = xor i32 %11, -1"];
	Node0x19773f0[shape=record, label="  %28 = and i32 %12, %27"];
	Node0x1977460[shape=record, label="  %29 = xor i32 %10, -1"];
	Node0x19774d0[shape=record, label="  %30 = or i32 %13, %29"];
	Node0x1977540[shape=record, label="  %31 = xor i32 %13, %10"];
	Node0x19775b0[shape=record, label="  %32 = shl i32 %30, 1"];
	Node0x1977620[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x1977690[shape=record, label="  %34 = and i32 %13, %29"];
	Node0x1977700[shape=record, label="  %35 = and i32 %13, %10"];
	Node0x1977770[shape=record, label="  %36 = shl i32 %35, 2"];
	Node0x19777e0[shape=record, label="  %37 = add i32 %34, %26"];
	Node0x1977850[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x19778c0[shape=record, label="  %39 = sub i32 4, %10"];
	Node0x1977930[shape=record, label="  %40 = sub i32 %39, %23"];
	Node0x19779a0[shape=record, label="  %41 = add i32 %40, %25"];
	Node0x1977a10[shape=record, label="  %42 = sub i32 %41, %28"];
	Node0x1977a80[shape=record, label="  %43 = add i32 %42, %15"];
	Node0x1977af0[shape=record, label="  %44 = sub i32 %43, %13"];
	Node0x1977b60[shape=record, label="  %45 = sub i32 %44, %30"];
	Node0x1977bd0[shape=record, label="  %46 = add i32 %45, %31"];
	Node0x1977c40[shape=record, label="  %47 = add i32 %46, %36"];
	Node0x1977cb0[shape=record, label="  %48 = sub i32 %47, %33"];
	Node0x1977d20[shape=record, label="  %49 = add i32 %48, %38"];
	Node0x1977d90[shape=record, label="  %50 = icmp eq i32 %22, %49"];
	Node0x19148b8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1977e20[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0x19780c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1978228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1978338[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1978448[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1978508[shape=record, label="  ret i32 0"];
	Node0x1974a08 -> Node0x1974a88;
	Node0x1974a88 -> Node0x1974b18;
	Node0x1974b18 -> Node0x1974b78;
	Node0x1974b78 -> Node0x1974c28;
	Node0x1974c28 -> Node0x1975058;
	Node0x1975058 -> Node0x1975138;
	Node0x1975138 -> Node0x1975238;
	Node0x1975238 -> Node0x19752f8;
	Node0x19752f8 -> Node0x19753a8;
	Node0x19753a8 -> Node0x1975468;
	Node0x1975468 -> Node0x1975518;
	Node0x1975518 -> Node0x196fab0;
	Node0x196fab0 -> Node0x1975718;
	Node0x1975718 -> Node0x1976688;
	Node0x1976688 -> Node0x1976cf8;
	Node0x1976cf8 -> Node0x1976d58;
	Node0x1976d58 -> Node0x1976dd0;
	Node0x1976dd0 -> Node0x1976e40;
	Node0x1976e40 -> Node0x1976eb0;
	Node0x1976eb0 -> Node0x1976f20;
	Node0x1976f20 -> Node0x1976f90;
	Node0x1976f90 -> Node0x1977000;
	Node0x1977000 -> Node0x1977070;
	Node0x1977070 -> Node0x19770e0;
	Node0x19770e0 -> Node0x1977150;
	Node0x1977150 -> Node0x19771c0;
	Node0x19771c0 -> Node0x1977230;
	Node0x1977230 -> Node0x19772a0;
	Node0x19772a0 -> Node0x1977310;
	Node0x1977310 -> Node0x1977380;
	Node0x1977380 -> Node0x19773f0;
	Node0x19773f0 -> Node0x1977460;
	Node0x1977460 -> Node0x19774d0;
	Node0x19774d0 -> Node0x1977540;
	Node0x1977540 -> Node0x19775b0;
	Node0x19775b0 -> Node0x1977620;
	Node0x1977620 -> Node0x1977690;
	Node0x1977690 -> Node0x1977700;
	Node0x1977700 -> Node0x1977770;
	Node0x1977770 -> Node0x19777e0;
	Node0x19777e0 -> Node0x1977850;
	Node0x1977850 -> Node0x19778c0;
	Node0x19778c0 -> Node0x1977930;
	Node0x1977930 -> Node0x19779a0;
	Node0x19779a0 -> Node0x1977a10;
	Node0x1977a10 -> Node0x1977a80;
	Node0x1977a80 -> Node0x1977af0;
	Node0x1977af0 -> Node0x1977b60;
	Node0x1977b60 -> Node0x1977bd0;
	Node0x1977bd0 -> Node0x1977c40;
	Node0x1977c40 -> Node0x1977cb0;
	Node0x1977cb0 -> Node0x1977d20;
	Node0x1977d20 -> Node0x1977d90;
	Node0x1977d90 -> Node0x19148b8;
	Node0x19148b8 -> Node0x1977e20;
	Node0x1977e20 -> Node0x19780c8;
	Node0x19780c8 -> Node0x1978228;
	Node0x1978228 -> Node0x1978338;
	Node0x1978338 -> Node0x1978448;
	Node0x1978448 -> Node0x1978508;
edge [color=red]
	Node0x1974a08 -> Node0x1974c28;
	Node0x1974c28 -> Node0x1975058;
	Node0x1974a88 -> Node0x1975138;
	Node0x1975138 -> Node0x1975238;
	Node0x1974b18 -> Node0x19752f8;
	Node0x19752f8 -> Node0x19753a8;
	Node0x1974b78 -> Node0x1975468;
	Node0x1975468 -> Node0x1975518;
	Node0x1974a08 -> Node0x196fab0;
	Node0x1974a88 -> Node0x196fab0;
	Node0x1974b18 -> Node0x196fab0;
	Node0x1974b78 -> Node0x196fab0;
	Node0x1974a08 -> Node0x1975718;
	Node0x1974a88 -> Node0x1976688;
	Node0x1974b18 -> Node0x1976cf8;
	Node0x1974b78 -> Node0x1976d58;
	Node0x1976cf8 -> Node0x1976dd0;
	Node0x1976688 -> Node0x1976e40;
	Node0x1976dd0 -> Node0x1976e40;
	Node0x1976d58 -> Node0x1976eb0;
	Node0x1976eb0 -> Node0x1976f20;
	Node0x1976d58 -> Node0x1976f90;
	Node0x1975718 -> Node0x1976f90;
	Node0x1976688 -> Node0x1977000;
	Node0x1977000 -> Node0x1977070;
	Node0x1976e40 -> Node0x1977070;
	Node0x1977070 -> Node0x19770e0;
	Node0x1976f20 -> Node0x19770e0;
	Node0x19770e0 -> Node0x1977150;
	Node0x1976f90 -> Node0x1977150;
	Node0x1976cf8 -> Node0x19771c0;
	Node0x1976688 -> Node0x19771c0;
	Node0x1976cf8 -> Node0x1977230;
	Node0x1976688 -> Node0x1977230;
	Node0x1977230 -> Node0x19772a0;
	Node0x1976cf8 -> Node0x1977310;
	Node0x1976688 -> Node0x1977310;
	Node0x1976688 -> Node0x1977380;
	Node0x1976cf8 -> Node0x19773f0;
	Node0x1977380 -> Node0x19773f0;
	Node0x1975718 -> Node0x1977460;
	Node0x1976d58 -> Node0x19774d0;
	Node0x1977460 -> Node0x19774d0;
	Node0x1976d58 -> Node0x1977540;
	Node0x1975718 -> Node0x1977540;
	Node0x19774d0 -> Node0x19775b0;
	Node0x19775b0 -> Node0x1977620;
	Node0x1976d58 -> Node0x1977690;
	Node0x1977460 -> Node0x1977690;
	Node0x1976d58 -> Node0x1977700;
	Node0x1975718 -> Node0x1977700;
	Node0x1977700 -> Node0x1977770;
	Node0x1977690 -> Node0x19777e0;
	Node0x1977310 -> Node0x19777e0;
	Node0x19777e0 -> Node0x1977850;
	Node0x1975718 -> Node0x19778c0;
	Node0x19778c0 -> Node0x1977930;
	Node0x19771c0 -> Node0x1977930;
	Node0x1977930 -> Node0x19779a0;
	Node0x19772a0 -> Node0x19779a0;
	Node0x19779a0 -> Node0x1977a10;
	Node0x19773f0 -> Node0x1977a10;
	Node0x1977a10 -> Node0x1977a80;
	Node0x1976e40 -> Node0x1977a80;
	Node0x1977a80 -> Node0x1977af0;
	Node0x1976d58 -> Node0x1977af0;
	Node0x1977af0 -> Node0x1977b60;
	Node0x19774d0 -> Node0x1977b60;
	Node0x1977b60 -> Node0x1977bd0;
	Node0x1977540 -> Node0x1977bd0;
	Node0x1977bd0 -> Node0x1977c40;
	Node0x1977770 -> Node0x1977c40;
	Node0x1977c40 -> Node0x1977cb0;
	Node0x1977620 -> Node0x1977cb0;
	Node0x1977cb0 -> Node0x1977d20;
	Node0x1977850 -> Node0x1977d20;
	Node0x1977150 -> Node0x1977d90;
	Node0x1977d20 -> Node0x1977d90;
	Node0x1977d90 -> Node0x19148b8;
	Node0x19148b8 -> Node0x1977e20;
	Node0x1975468 -> Node0x19780c8;
	Node0x19752f8 -> Node0x1978228;
	Node0x1975138 -> Node0x1978338;
	Node0x1974c28 -> Node0x1978448;
}
