digraph "DFG for'crackme' function" {
	Node0x1973090[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1973100[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x1973170[shape=record, label="  %7 = xor i32 %3, -1"];
	Node0x1973210[shape=record, label="  %8 = mul i32 %7, -3"];
	Node0x1973280[shape=record, label="  %9 = or i32 %3, %0"];
	Node0x1973320[shape=record, label="  %10 = add i32 %1, 1"];
	Node0x1973390[shape=record, label="  %11 = add i32 %10, %6"];
	Node0x1973400[shape=record, label="  %12 = add i32 %11, %8"];
	Node0x1973470[shape=record, label="  %13 = sub i32 %12, %9"];
	Node0x19734e0[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0x1973550[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x19735c0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x1973630[shape=record, label="  %17 = or i32 %2, %1"];
	Node0x19736a0[shape=record, label="  %18 = xor i32 %1, -1"];
	Node0x1973710[shape=record, label="  %19 = and i32 %18, %2"];
	Node0x1973780[shape=record, label="  %20 = xor i32 %0, -1"];
	Node0x19737f0[shape=record, label="  %21 = or i32 %20, %3"];
	Node0x1973860[shape=record, label="  %22 = xor i32 %3, %0"];
	Node0x19738d0[shape=record, label="  %23 = shl i32 %21, 1"];
	Node0x1973970[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x19739e0[shape=record, label="  %25 = and i32 %20, %3"];
	Node0x1973a50[shape=record, label="  %26 = and i32 %3, %0"];
	Node0x1973af0[shape=record, label="  %27 = shl i32 %26, 2"];
	Node0x1973b60[shape=record, label="  %28 = add i32 %25, %17"];
	Node0x1973bd0[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x1973c70[shape=record, label="  %30 = sub i32 4, %0"];
	Node0x1973ce0[shape=record, label="  %31 = sub i32 %30, %14"];
	Node0x1973d50[shape=record, label="  %32 = add i32 %31, %16"];
	Node0x1973fd0[shape=record, label="  %33 = sub i32 %32, %19"];
	Node0x1974040[shape=record, label="  %34 = add i32 %33, %6"];
	Node0x19740b0[shape=record, label="  %35 = sub i32 %34, %3"];
	Node0x1974120[shape=record, label="  %36 = sub i32 %35, %21"];
	Node0x1974190[shape=record, label="  %37 = add i32 %36, %22"];
	Node0x1974200[shape=record, label="  %38 = add i32 %37, %27"];
	Node0x1974270[shape=record, label="  %39 = sub i32 %38, %24"];
	Node0x19742e0[shape=record, label="  %40 = add i32 %39, %29"];
	Node0x1974350[shape=record, label="  %41 = icmp eq i32 %13, %40"];
	Node0x1913268[shape=record, label="  %42 = select i1 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x19747f0[shape=record, label="  %43 = tail call i32 @puts(i8* nonnull dereferenceable(1) %42)"];
	Node0x1974840[shape=record, label="  ret void"];
	Node0x1973090 -> Node0x1973100;
	Node0x1973100 -> Node0x1973170;
	Node0x1973170 -> Node0x1973210;
	Node0x1973210 -> Node0x1973280;
	Node0x1973280 -> Node0x1973320;
	Node0x1973320 -> Node0x1973390;
	Node0x1973390 -> Node0x1973400;
	Node0x1973400 -> Node0x1973470;
	Node0x1973470 -> Node0x19734e0;
	Node0x19734e0 -> Node0x1973550;
	Node0x1973550 -> Node0x19735c0;
	Node0x19735c0 -> Node0x1973630;
	Node0x1973630 -> Node0x19736a0;
	Node0x19736a0 -> Node0x1973710;
	Node0x1973710 -> Node0x1973780;
	Node0x1973780 -> Node0x19737f0;
	Node0x19737f0 -> Node0x1973860;
	Node0x1973860 -> Node0x19738d0;
	Node0x19738d0 -> Node0x1973970;
	Node0x1973970 -> Node0x19739e0;
	Node0x19739e0 -> Node0x1973a50;
	Node0x1973a50 -> Node0x1973af0;
	Node0x1973af0 -> Node0x1973b60;
	Node0x1973b60 -> Node0x1973bd0;
	Node0x1973bd0 -> Node0x1973c70;
	Node0x1973c70 -> Node0x1973ce0;
	Node0x1973ce0 -> Node0x1973d50;
	Node0x1973d50 -> Node0x1973fd0;
	Node0x1973fd0 -> Node0x1974040;
	Node0x1974040 -> Node0x19740b0;
	Node0x19740b0 -> Node0x1974120;
	Node0x1974120 -> Node0x1974190;
	Node0x1974190 -> Node0x1974200;
	Node0x1974200 -> Node0x1974270;
	Node0x1974270 -> Node0x19742e0;
	Node0x19742e0 -> Node0x1974350;
	Node0x1974350 -> Node0x1913268;
	Node0x1913268 -> Node0x19747f0;
	Node0x19747f0 -> Node0x1974840;
edge [color=red]
	Node0x1973090 -> Node0x1973100;
	Node0x1973170 -> Node0x1973210;
	Node0x1973320 -> Node0x1973390;
	Node0x1973100 -> Node0x1973390;
	Node0x1973390 -> Node0x1973400;
	Node0x1973210 -> Node0x1973400;
	Node0x1973400 -> Node0x1973470;
	Node0x1973280 -> Node0x1973470;
	Node0x1973550 -> Node0x19735c0;
	Node0x19736a0 -> Node0x1973710;
	Node0x1973780 -> Node0x19737f0;
	Node0x19737f0 -> Node0x19738d0;
	Node0x19738d0 -> Node0x1973970;
	Node0x1973780 -> Node0x19739e0;
	Node0x1973a50 -> Node0x1973af0;
	Node0x19739e0 -> Node0x1973b60;
	Node0x1973630 -> Node0x1973b60;
	Node0x1973b60 -> Node0x1973bd0;
	Node0x1973c70 -> Node0x1973ce0;
	Node0x19734e0 -> Node0x1973ce0;
	Node0x1973ce0 -> Node0x1973d50;
	Node0x19735c0 -> Node0x1973d50;
	Node0x1973d50 -> Node0x1973fd0;
	Node0x1973710 -> Node0x1973fd0;
	Node0x1973fd0 -> Node0x1974040;
	Node0x1973100 -> Node0x1974040;
	Node0x1974040 -> Node0x19740b0;
	Node0x19740b0 -> Node0x1974120;
	Node0x19737f0 -> Node0x1974120;
	Node0x1974120 -> Node0x1974190;
	Node0x1973860 -> Node0x1974190;
	Node0x1974190 -> Node0x1974200;
	Node0x1973af0 -> Node0x1974200;
	Node0x1974200 -> Node0x1974270;
	Node0x1973970 -> Node0x1974270;
	Node0x1974270 -> Node0x19742e0;
	Node0x1973bd0 -> Node0x19742e0;
	Node0x1973470 -> Node0x1974350;
	Node0x19742e0 -> Node0x1974350;
	Node0x1974350 -> Node0x1913268;
	Node0x1913268 -> Node0x19747f0;
}
