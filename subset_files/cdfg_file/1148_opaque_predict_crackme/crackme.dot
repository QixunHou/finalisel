digraph "DFG for'crackme' function" {
	Node0x1ddfcd0[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x1ddfd40[shape=record, label="  %4 = and i32 %3, %0"];
	Node0x1ddfe00[shape=record, label="  %5 = xor i32 %4, -1"];
	Node0x1ddfe70[shape=record, label="  %6 = mul i32 %5, -2"];
	Node0x1ddfee0[shape=record, label="  %7 = xor i32 %1, %0"];
	Node0x1ddff50[shape=record, label="  %8 = add i32 %6, %7"];
	Node0x1ddffc0[shape=record, label="  %9 = or i32 %3, %0"];
	Node0x1de0060[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x1de00d0[shape=record, label="  %11 = or i32 %1, %0"];
	Node0x1de0140[shape=record, label="  %12 = shl i32 %0, 1"];
	Node0x1de01b0[shape=record, label="  %13 = shl i32 %7, 1"];
	Node0x1de0220[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1de0290[shape=record, label="  %15 = xor i32 %12, -2"];
	Node0x1de0300[shape=record, label="  %16 = and i32 %1, %0"];
	Node0x1de0370[shape=record, label="  %17 = shl i32 %1, 1"];
	Node0x1de03e0[shape=record, label="  %18 = shl i32 %11, 1"];
	Node0x1de0450[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x1de04c0[shape=record, label="  %20 = xor i32 %9, -1"];
	Node0x1de0560[shape=record, label="  %21 = mul i32 %20, 6"];
	Node0x1de0600[shape=record, label="  %22 = shl i32 %4, 2"];
	Node0x1de0670[shape=record, label="  %23 = sub i32 2, %12"];
	Node0x1de06e0[shape=record, label="  %24 = sub i32 %23, %11"];
	Node0x1de0750[shape=record, label="  %25 = sub i32 %24, %15"];
	Node0x1de07c0[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x1de0830[shape=record, label="  %27 = sub i32 %26, %17"];
	Node0x1de08a0[shape=record, label="  %28 = add i32 %27, %10"];
	Node0x1de0910[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x1de0980[shape=record, label="  %30 = add i32 %29, %22"];
	Node0x1de09f0[shape=record, label="  %31 = add i32 %30, %14"];
	Node0x1de0a60[shape=record, label="  %32 = sub i32 %31, %19"];
	Node0x1de0ce0[shape=record, label="  %33 = icmp eq i32 %8, %32"];
	Node0x1d80268[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1de1180[shape=record, label="  %35 = tail call i32 @puts(i8* nonnull dereferenceable(1) %34)"];
	Node0x1de11d0[shape=record, label="  ret void"];
	Node0x1ddfcd0 -> Node0x1ddfd40;
	Node0x1ddfd40 -> Node0x1ddfe00;
	Node0x1ddfe00 -> Node0x1ddfe70;
	Node0x1ddfe70 -> Node0x1ddfee0;
	Node0x1ddfee0 -> Node0x1ddff50;
	Node0x1ddff50 -> Node0x1ddffc0;
	Node0x1ddffc0 -> Node0x1de0060;
	Node0x1de0060 -> Node0x1de00d0;
	Node0x1de00d0 -> Node0x1de0140;
	Node0x1de0140 -> Node0x1de01b0;
	Node0x1de01b0 -> Node0x1de0220;
	Node0x1de0220 -> Node0x1de0290;
	Node0x1de0290 -> Node0x1de0300;
	Node0x1de0300 -> Node0x1de0370;
	Node0x1de0370 -> Node0x1de03e0;
	Node0x1de03e0 -> Node0x1de0450;
	Node0x1de0450 -> Node0x1de04c0;
	Node0x1de04c0 -> Node0x1de0560;
	Node0x1de0560 -> Node0x1de0600;
	Node0x1de0600 -> Node0x1de0670;
	Node0x1de0670 -> Node0x1de06e0;
	Node0x1de06e0 -> Node0x1de0750;
	Node0x1de0750 -> Node0x1de07c0;
	Node0x1de07c0 -> Node0x1de0830;
	Node0x1de0830 -> Node0x1de08a0;
	Node0x1de08a0 -> Node0x1de0910;
	Node0x1de0910 -> Node0x1de0980;
	Node0x1de0980 -> Node0x1de09f0;
	Node0x1de09f0 -> Node0x1de0a60;
	Node0x1de0a60 -> Node0x1de0ce0;
	Node0x1de0ce0 -> Node0x1d80268;
	Node0x1d80268 -> Node0x1de1180;
	Node0x1de1180 -> Node0x1de11d0;
edge [color=red]
	Node0x1ddfcd0 -> Node0x1ddfd40;
	Node0x1ddfd40 -> Node0x1ddfe00;
	Node0x1ddfe00 -> Node0x1ddfe70;
	Node0x1ddfe70 -> Node0x1ddff50;
	Node0x1ddfee0 -> Node0x1ddff50;
	Node0x1ddfcd0 -> Node0x1ddffc0;
	Node0x1ddffc0 -> Node0x1de0060;
	Node0x1ddfee0 -> Node0x1de01b0;
	Node0x1de01b0 -> Node0x1de0220;
	Node0x1de0140 -> Node0x1de0290;
	Node0x1de00d0 -> Node0x1de03e0;
	Node0x1de03e0 -> Node0x1de0450;
	Node0x1ddffc0 -> Node0x1de04c0;
	Node0x1de04c0 -> Node0x1de0560;
	Node0x1ddfd40 -> Node0x1de0600;
	Node0x1de0140 -> Node0x1de0670;
	Node0x1de0670 -> Node0x1de06e0;
	Node0x1de00d0 -> Node0x1de06e0;
	Node0x1de06e0 -> Node0x1de0750;
	Node0x1de0290 -> Node0x1de0750;
	Node0x1de0750 -> Node0x1de07c0;
	Node0x1de0300 -> Node0x1de07c0;
	Node0x1de07c0 -> Node0x1de0830;
	Node0x1de0370 -> Node0x1de0830;
	Node0x1de0830 -> Node0x1de08a0;
	Node0x1de0060 -> Node0x1de08a0;
	Node0x1de08a0 -> Node0x1de0910;
	Node0x1de0560 -> Node0x1de0910;
	Node0x1de0910 -> Node0x1de0980;
	Node0x1de0600 -> Node0x1de0980;
	Node0x1de0980 -> Node0x1de09f0;
	Node0x1de0220 -> Node0x1de09f0;
	Node0x1de09f0 -> Node0x1de0a60;
	Node0x1de0450 -> Node0x1de0a60;
	Node0x1ddff50 -> Node0x1de0ce0;
	Node0x1de0a60 -> Node0x1de0ce0;
	Node0x1de0ce0 -> Node0x1d80268;
	Node0x1d80268 -> Node0x1de1180;
}
