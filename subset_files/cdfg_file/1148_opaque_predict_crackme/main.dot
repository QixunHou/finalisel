digraph "DFG for'main' function" {
	Node0x1de1398[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1de1418[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1de14a8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1de1908[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1de19e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1de1b08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1de1d40[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1de1df8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1de2d68[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1de33f0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1de3460[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x1de34d0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1de3540[shape=record, label="  %11 = mul i32 %10, -2"];
	Node0x1de35b0[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0x1de3620[shape=record, label="  %13 = add i32 %11, %12"];
	Node0x1de3690[shape=record, label="  %14 = or i32 %6, %8"];
	Node0x1de3700[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1de3770[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x1de37e0[shape=record, label="  %17 = shl i32 %6, 1"];
	Node0x1de3850[shape=record, label="  %18 = shl i32 %12, 1"];
	Node0x1de38c0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x1de3930[shape=record, label="  %20 = xor i32 %17, -2"];
	Node0x1de39a0[shape=record, label="  %21 = and i32 %7, %6"];
	Node0x1de3a10[shape=record, label="  %22 = shl i32 %7, 1"];
	Node0x1de3a80[shape=record, label="  %23 = shl i32 %16, 1"];
	Node0x1de3af0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x1de3b60[shape=record, label="  %25 = xor i32 %14, -1"];
	Node0x1de3bd0[shape=record, label="  %26 = mul i32 %25, 6"];
	Node0x1de3c40[shape=record, label="  %27 = shl i32 %9, 2"];
	Node0x1de3cb0[shape=record, label="  %28 = sub i32 2, %17"];
	Node0x1de3d20[shape=record, label="  %29 = sub i32 %28, %16"];
	Node0x1de3d90[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0x1de3e00[shape=record, label="  %31 = add i32 %30, %21"];
	Node0x1de3e70[shape=record, label="  %32 = sub i32 %31, %22"];
	Node0x1de3ee0[shape=record, label="  %33 = add i32 %32, %15"];
	Node0x1de3f50[shape=record, label="  %34 = add i32 %33, %26"];
	Node0x1de3fc0[shape=record, label="  %35 = add i32 %34, %27"];
	Node0x1de4030[shape=record, label="  %36 = add i32 %35, %19"];
	Node0x1de40a0[shape=record, label="  %37 = sub i32 %36, %24"];
	Node0x1de4110[shape=record, label="  %38 = icmp eq i32 %13, %37"];
	Node0x1d819d8[shape=record, label="  %39 = select i1 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1de41a0[shape=record, label="  %40 = call i32 @puts(i8* nonnull dereferenceable(1) %39) #5"];
	Node0x1de43f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1de4558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1de4618[shape=record, label="  ret i32 0"];
	Node0x1de1398 -> Node0x1de1418;
	Node0x1de1418 -> Node0x1de14a8;
	Node0x1de14a8 -> Node0x1de1908;
	Node0x1de1908 -> Node0x1de19e8;
	Node0x1de19e8 -> Node0x1de1b08;
	Node0x1de1b08 -> Node0x1de1d40;
	Node0x1de1d40 -> Node0x1de1df8;
	Node0x1de1df8 -> Node0x1de2d68;
	Node0x1de2d68 -> Node0x1de33f0;
	Node0x1de33f0 -> Node0x1de3460;
	Node0x1de3460 -> Node0x1de34d0;
	Node0x1de34d0 -> Node0x1de3540;
	Node0x1de3540 -> Node0x1de35b0;
	Node0x1de35b0 -> Node0x1de3620;
	Node0x1de3620 -> Node0x1de3690;
	Node0x1de3690 -> Node0x1de3700;
	Node0x1de3700 -> Node0x1de3770;
	Node0x1de3770 -> Node0x1de37e0;
	Node0x1de37e0 -> Node0x1de3850;
	Node0x1de3850 -> Node0x1de38c0;
	Node0x1de38c0 -> Node0x1de3930;
	Node0x1de3930 -> Node0x1de39a0;
	Node0x1de39a0 -> Node0x1de3a10;
	Node0x1de3a10 -> Node0x1de3a80;
	Node0x1de3a80 -> Node0x1de3af0;
	Node0x1de3af0 -> Node0x1de3b60;
	Node0x1de3b60 -> Node0x1de3bd0;
	Node0x1de3bd0 -> Node0x1de3c40;
	Node0x1de3c40 -> Node0x1de3cb0;
	Node0x1de3cb0 -> Node0x1de3d20;
	Node0x1de3d20 -> Node0x1de3d90;
	Node0x1de3d90 -> Node0x1de3e00;
	Node0x1de3e00 -> Node0x1de3e70;
	Node0x1de3e70 -> Node0x1de3ee0;
	Node0x1de3ee0 -> Node0x1de3f50;
	Node0x1de3f50 -> Node0x1de3fc0;
	Node0x1de3fc0 -> Node0x1de4030;
	Node0x1de4030 -> Node0x1de40a0;
	Node0x1de40a0 -> Node0x1de4110;
	Node0x1de4110 -> Node0x1d819d8;
	Node0x1d819d8 -> Node0x1de41a0;
	Node0x1de41a0 -> Node0x1de43f8;
	Node0x1de43f8 -> Node0x1de4558;
	Node0x1de4558 -> Node0x1de4618;
edge [color=red]
	Node0x1de1398 -> Node0x1de14a8;
	Node0x1de14a8 -> Node0x1de1908;
	Node0x1de1418 -> Node0x1de19e8;
	Node0x1de19e8 -> Node0x1de1b08;
	Node0x1de1398 -> Node0x1de1d40;
	Node0x1de1418 -> Node0x1de1d40;
	Node0x1de1398 -> Node0x1de1df8;
	Node0x1de1418 -> Node0x1de2d68;
	Node0x1de2d68 -> Node0x1de33f0;
	Node0x1de1df8 -> Node0x1de3460;
	Node0x1de33f0 -> Node0x1de3460;
	Node0x1de3460 -> Node0x1de34d0;
	Node0x1de34d0 -> Node0x1de3540;
	Node0x1de2d68 -> Node0x1de35b0;
	Node0x1de1df8 -> Node0x1de35b0;
	Node0x1de3540 -> Node0x1de3620;
	Node0x1de35b0 -> Node0x1de3620;
	Node0x1de1df8 -> Node0x1de3690;
	Node0x1de33f0 -> Node0x1de3690;
	Node0x1de3690 -> Node0x1de3700;
	Node0x1de2d68 -> Node0x1de3770;
	Node0x1de1df8 -> Node0x1de3770;
	Node0x1de1df8 -> Node0x1de37e0;
	Node0x1de35b0 -> Node0x1de3850;
	Node0x1de3850 -> Node0x1de38c0;
	Node0x1de37e0 -> Node0x1de3930;
	Node0x1de2d68 -> Node0x1de39a0;
	Node0x1de1df8 -> Node0x1de39a0;
	Node0x1de2d68 -> Node0x1de3a10;
	Node0x1de3770 -> Node0x1de3a80;
	Node0x1de3a80 -> Node0x1de3af0;
	Node0x1de3690 -> Node0x1de3b60;
	Node0x1de3b60 -> Node0x1de3bd0;
	Node0x1de3460 -> Node0x1de3c40;
	Node0x1de37e0 -> Node0x1de3cb0;
	Node0x1de3cb0 -> Node0x1de3d20;
	Node0x1de3770 -> Node0x1de3d20;
	Node0x1de3d20 -> Node0x1de3d90;
	Node0x1de3930 -> Node0x1de3d90;
	Node0x1de3d90 -> Node0x1de3e00;
	Node0x1de39a0 -> Node0x1de3e00;
	Node0x1de3e00 -> Node0x1de3e70;
	Node0x1de3a10 -> Node0x1de3e70;
	Node0x1de3e70 -> Node0x1de3ee0;
	Node0x1de3700 -> Node0x1de3ee0;
	Node0x1de3ee0 -> Node0x1de3f50;
	Node0x1de3bd0 -> Node0x1de3f50;
	Node0x1de3f50 -> Node0x1de3fc0;
	Node0x1de3c40 -> Node0x1de3fc0;
	Node0x1de3fc0 -> Node0x1de4030;
	Node0x1de38c0 -> Node0x1de4030;
	Node0x1de4030 -> Node0x1de40a0;
	Node0x1de3af0 -> Node0x1de40a0;
	Node0x1de3620 -> Node0x1de4110;
	Node0x1de40a0 -> Node0x1de4110;
	Node0x1de4110 -> Node0x1d819d8;
	Node0x1d819d8 -> Node0x1de41a0;
	Node0x1de19e8 -> Node0x1de43f8;
	Node0x1de14a8 -> Node0x1de4558;
}
