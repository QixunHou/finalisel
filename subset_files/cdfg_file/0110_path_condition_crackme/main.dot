digraph "DFG for'main' function" {
	Node0xa85298[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa85348[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa853d8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xa85838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xa85918[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xa85a38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa85c70[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xa85d28[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa86c98[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa87320[shape=record, label="  %8 = sub i32 0, %6"];
	Node0xa87390[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0xa87400[shape=record, label="  %10 = and i32 %6, %9"];
	Node0xa87470[shape=record, label="  %11 = xor i32 %6, -1"];
	Node0xa874e0[shape=record, label="  %12 = and i32 %7, %11"];
	Node0xa87550[shape=record, label="  %13 = add i32 %10, %7"];
	Node0xa875c0[shape=record, label="  %14 = sub i32 %12, %13"];
	Node0xa87630[shape=record, label="  %15 = icmp eq i32 %14, %8"];
	Node0xa876b8[shape=record, label="  %16 = select i1 %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa87750[shape=record, label="  %17 = call i32 @puts(i8* nonnull dereferenceable(1) %16) #5"];
	Node0xa87918[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa87a78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xa87b38[shape=record, label="  ret i32 0"];
	Node0xa85298 -> Node0xa85348;
	Node0xa85348 -> Node0xa853d8;
	Node0xa853d8 -> Node0xa85838;
	Node0xa85838 -> Node0xa85918;
	Node0xa85918 -> Node0xa85a38;
	Node0xa85a38 -> Node0xa85c70;
	Node0xa85c70 -> Node0xa85d28;
	Node0xa85d28 -> Node0xa86c98;
	Node0xa86c98 -> Node0xa87320;
	Node0xa87320 -> Node0xa87390;
	Node0xa87390 -> Node0xa87400;
	Node0xa87400 -> Node0xa87470;
	Node0xa87470 -> Node0xa874e0;
	Node0xa874e0 -> Node0xa87550;
	Node0xa87550 -> Node0xa875c0;
	Node0xa875c0 -> Node0xa87630;
	Node0xa87630 -> Node0xa876b8;
	Node0xa876b8 -> Node0xa87750;
	Node0xa87750 -> Node0xa87918;
	Node0xa87918 -> Node0xa87a78;
	Node0xa87a78 -> Node0xa87b38;
edge [color=red]
	Node0xa85298 -> Node0xa853d8;
	Node0xa853d8 -> Node0xa85838;
	Node0xa85348 -> Node0xa85918;
	Node0xa85918 -> Node0xa85a38;
	Node0xa85298 -> Node0xa85c70;
	Node0xa85348 -> Node0xa85c70;
	Node0xa85298 -> Node0xa85d28;
	Node0xa85348 -> Node0xa86c98;
	Node0xa85d28 -> Node0xa87320;
	Node0xa86c98 -> Node0xa87390;
	Node0xa85d28 -> Node0xa87400;
	Node0xa87390 -> Node0xa87400;
	Node0xa85d28 -> Node0xa87470;
	Node0xa86c98 -> Node0xa874e0;
	Node0xa87470 -> Node0xa874e0;
	Node0xa87400 -> Node0xa87550;
	Node0xa86c98 -> Node0xa87550;
	Node0xa874e0 -> Node0xa875c0;
	Node0xa87550 -> Node0xa875c0;
	Node0xa875c0 -> Node0xa87630;
	Node0xa87320 -> Node0xa87630;
	Node0xa87630 -> Node0xa876b8;
	Node0xa876b8 -> Node0xa87750;
	Node0xa85918 -> Node0xa87918;
	Node0xa853d8 -> Node0xa87a78;
}
