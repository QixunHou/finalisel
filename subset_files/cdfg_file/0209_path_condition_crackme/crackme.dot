digraph "DFG for'crackme' function" {
	Node0xa4d090[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xa4d130[shape=record, label="  %6 = add i32 %2, 1"];
	Node0xa4d1a0[shape=record, label="  %7 = or i32 %5, %1"];
	Node0xa4d240[shape=record, label="  %8 = shl i32 %7, 2"];
	Node0xa4d2b0[shape=record, label="  %9 = sub i32 %6, %8"];
	Node0xa4d320[shape=record, label="  %10 = shl i32 %3, 1"];
	Node0xa4d3c0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0xa4d430[shape=record, label="  %12 = sub i32 %9, %11"];
	Node0xa4d4a0[shape=record, label="  %13 = shl i32 %1, 1"];
	Node0xa4d510[shape=record, label="  %14 = and i32 %5, %1"];
	Node0xa4d580[shape=record, label="  %15 = or i32 %2, %1"];
	Node0xa4d5f0[shape=record, label="  %16 = xor i32 %7, -1"];
	Node0xa4d660[shape=record, label="  %17 = xor i32 %3, -1"];
	Node0xa4d6d0[shape=record, label="  %18 = or i32 %17, %0"];
	Node0xa4d740[shape=record, label="  %19 = shl i32 %0, 1"];
	Node0xa4d7b0[shape=record, label="  %20 = xor i32 %17, %0"];
	Node0xa4d820[shape=record, label="  %21 = or i32 %3, %0"];
	Node0xa4d890[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0xa4d930[shape=record, label="  %23 = mul i32 %22, -5"];
	Node0xa4d9a0[shape=record, label="  %24 = and i32 %17, %0"];
	Node0xa4da10[shape=record, label="  %25 = sub i32 %16, %14"];
	Node0xa4dab0[shape=record, label="  %26 = mul i32 %25, 3"];
	Node0xa4db20[shape=record, label="  %27 = shl i32 %15, 1"];
	Node0xa4dbc0[shape=record, label="  %28 = add i32 %1, 5"];
	Node0xa4dc30[shape=record, label="  %29 = sub i32 %28, %19"];
	Node0xa4dca0[shape=record, label="  %30 = sub i32 %29, %2"];
	Node0xa4dd10[shape=record, label="  %31 = sub i32 %30, %13"];
	Node0xa4dd80[shape=record, label="  %32 = add i32 %31, %14"];
	Node0xa4e000[shape=record, label="  %33 = add i32 %32, %15"];
	Node0xa4e070[shape=record, label="  %34 = add i32 %33, %18"];
	Node0xa4e0e0[shape=record, label="  %35 = add i32 %34, %20"];
	Node0xa4e150[shape=record, label="  %36 = add i32 %35, %22"];
	Node0xa4e1c0[shape=record, label="  %37 = sub i32 %36, %24"];
	Node0xa4e230[shape=record, label="  %38 = add i32 %37, %23"];
	Node0xa4e2a0[shape=record, label="  %39 = add i32 %38, %26"];
	Node0xa4e310[shape=record, label="  %40 = add i32 %39, %27"];
	Node0xa4e380[shape=record, label="  %41 = icmp eq i32 %12, %40"];
	Node0x9ed268[shape=record, label="  %42 = select i1 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa4e820[shape=record, label="  %43 = tail call i32 @puts(i8* nonnull dereferenceable(1) %42)"];
	Node0xa4e870[shape=record, label="  ret void"];
	Node0xa4d090 -> Node0xa4d130;
	Node0xa4d130 -> Node0xa4d1a0;
	Node0xa4d1a0 -> Node0xa4d240;
	Node0xa4d240 -> Node0xa4d2b0;
	Node0xa4d2b0 -> Node0xa4d320;
	Node0xa4d320 -> Node0xa4d3c0;
	Node0xa4d3c0 -> Node0xa4d430;
	Node0xa4d430 -> Node0xa4d4a0;
	Node0xa4d4a0 -> Node0xa4d510;
	Node0xa4d510 -> Node0xa4d580;
	Node0xa4d580 -> Node0xa4d5f0;
	Node0xa4d5f0 -> Node0xa4d660;
	Node0xa4d660 -> Node0xa4d6d0;
	Node0xa4d6d0 -> Node0xa4d740;
	Node0xa4d740 -> Node0xa4d7b0;
	Node0xa4d7b0 -> Node0xa4d820;
	Node0xa4d820 -> Node0xa4d890;
	Node0xa4d890 -> Node0xa4d930;
	Node0xa4d930 -> Node0xa4d9a0;
	Node0xa4d9a0 -> Node0xa4da10;
	Node0xa4da10 -> Node0xa4dab0;
	Node0xa4dab0 -> Node0xa4db20;
	Node0xa4db20 -> Node0xa4dbc0;
	Node0xa4dbc0 -> Node0xa4dc30;
	Node0xa4dc30 -> Node0xa4dca0;
	Node0xa4dca0 -> Node0xa4dd10;
	Node0xa4dd10 -> Node0xa4dd80;
	Node0xa4dd80 -> Node0xa4e000;
	Node0xa4e000 -> Node0xa4e070;
	Node0xa4e070 -> Node0xa4e0e0;
	Node0xa4e0e0 -> Node0xa4e150;
	Node0xa4e150 -> Node0xa4e1c0;
	Node0xa4e1c0 -> Node0xa4e230;
	Node0xa4e230 -> Node0xa4e2a0;
	Node0xa4e2a0 -> Node0xa4e310;
	Node0xa4e310 -> Node0xa4e380;
	Node0xa4e380 -> Node0x9ed268;
	Node0x9ed268 -> Node0xa4e820;
	Node0xa4e820 -> Node0xa4e870;
edge [color=red]
	Node0xa4d090 -> Node0xa4d1a0;
	Node0xa4d1a0 -> Node0xa4d240;
	Node0xa4d130 -> Node0xa4d2b0;
	Node0xa4d240 -> Node0xa4d2b0;
	Node0xa4d320 -> Node0xa4d3c0;
	Node0xa4d2b0 -> Node0xa4d430;
	Node0xa4d3c0 -> Node0xa4d430;
	Node0xa4d090 -> Node0xa4d510;
	Node0xa4d1a0 -> Node0xa4d5f0;
	Node0xa4d660 -> Node0xa4d6d0;
	Node0xa4d660 -> Node0xa4d7b0;
	Node0xa4d820 -> Node0xa4d890;
	Node0xa4d890 -> Node0xa4d930;
	Node0xa4d660 -> Node0xa4d9a0;
	Node0xa4d5f0 -> Node0xa4da10;
	Node0xa4d510 -> Node0xa4da10;
	Node0xa4da10 -> Node0xa4dab0;
	Node0xa4d580 -> Node0xa4db20;
	Node0xa4dbc0 -> Node0xa4dc30;
	Node0xa4d740 -> Node0xa4dc30;
	Node0xa4dc30 -> Node0xa4dca0;
	Node0xa4dca0 -> Node0xa4dd10;
	Node0xa4d4a0 -> Node0xa4dd10;
	Node0xa4dd10 -> Node0xa4dd80;
	Node0xa4d510 -> Node0xa4dd80;
	Node0xa4dd80 -> Node0xa4e000;
	Node0xa4d580 -> Node0xa4e000;
	Node0xa4e000 -> Node0xa4e070;
	Node0xa4d6d0 -> Node0xa4e070;
	Node0xa4e070 -> Node0xa4e0e0;
	Node0xa4d7b0 -> Node0xa4e0e0;
	Node0xa4e0e0 -> Node0xa4e150;
	Node0xa4d890 -> Node0xa4e150;
	Node0xa4e150 -> Node0xa4e1c0;
	Node0xa4d9a0 -> Node0xa4e1c0;
	Node0xa4e1c0 -> Node0xa4e230;
	Node0xa4d930 -> Node0xa4e230;
	Node0xa4e230 -> Node0xa4e2a0;
	Node0xa4dab0 -> Node0xa4e2a0;
	Node0xa4e2a0 -> Node0xa4e310;
	Node0xa4db20 -> Node0xa4e310;
	Node0xa4d430 -> Node0xa4e380;
	Node0xa4e310 -> Node0xa4e380;
	Node0xa4e380 -> Node0x9ed268;
	Node0x9ed268 -> Node0xa4e820;
}
