digraph "DFG for'main' function" {
	Node0xa4ea38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa4eab8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa4eb48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xa4eba8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xa4ec58[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xa4f088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa4f168[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xa4f268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa4f328[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xa4f3d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xa4f498[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xa4f548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xa49ab0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xa4f748[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa506b8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa50d28[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xa50d88[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xa50e00[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0xa50e70[shape=record, label="  %15 = add i32 %12, 1"];
	Node0xa50ee0[shape=record, label="  %16 = or i32 %11, %14"];
	Node0xa50f50[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0xa50fc0[shape=record, label="  %18 = sub i32 %15, %17"];
	Node0xa51030[shape=record, label="  %19 = shl i32 %13, 1"];
	Node0xa510a0[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0xa51110[shape=record, label="  %21 = sub i32 %18, %20"];
	Node0xa51180[shape=record, label="  %22 = shl i32 %11, 1"];
	Node0xa511f0[shape=record, label="  %23 = and i32 %11, %14"];
	Node0xa51260[shape=record, label="  %24 = or i32 %12, %11"];
	Node0xa512d0[shape=record, label="  %25 = xor i32 %16, -1"];
	Node0xa51340[shape=record, label="  %26 = xor i32 %13, -1"];
	Node0xa513b0[shape=record, label="  %27 = or i32 %10, %26"];
	Node0xa51420[shape=record, label="  %28 = shl i32 %10, 1"];
	Node0xa51490[shape=record, label="  %29 = xor i32 %10, %26"];
	Node0xa51500[shape=record, label="  %30 = or i32 %13, %10"];
	Node0xa51570[shape=record, label="  %31 = xor i32 %30, -1"];
	Node0xa515e0[shape=record, label="  %32 = mul i32 %31, -5"];
	Node0xa51650[shape=record, label="  %33 = and i32 %10, %26"];
	Node0xa516c0[shape=record, label="  %34 = sub i32 %25, %23"];
	Node0xa51730[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0xa517a0[shape=record, label="  %36 = shl i32 %24, 1"];
	Node0xa51810[shape=record, label="  %37 = add i32 %11, 5"];
	Node0xa51880[shape=record, label="  %38 = sub i32 %37, %28"];
	Node0xa518f0[shape=record, label="  %39 = sub i32 %38, %12"];
	Node0xa51960[shape=record, label="  %40 = sub i32 %39, %22"];
	Node0xa519d0[shape=record, label="  %41 = add i32 %40, %23"];
	Node0xa51a40[shape=record, label="  %42 = add i32 %41, %24"];
	Node0xa51ab0[shape=record, label="  %43 = add i32 %42, %27"];
	Node0xa51b20[shape=record, label="  %44 = add i32 %43, %29"];
	Node0xa51b90[shape=record, label="  %45 = add i32 %44, %31"];
	Node0xa51c00[shape=record, label="  %46 = sub i32 %45, %33"];
	Node0xa51c70[shape=record, label="  %47 = add i32 %46, %36"];
	Node0xa51ce0[shape=record, label="  %48 = add i32 %47, %32"];
	Node0xa51d50[shape=record, label="  %49 = add i32 %48, %35"];
	Node0xa51dc0[shape=record, label="  %50 = icmp eq i32 %21, %49"];
	Node0x9ee8b8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa51e50[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0xa520f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xa52258[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xa52368[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xa52478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xa52538[shape=record, label="  ret i32 0"];
	Node0xa4ea38 -> Node0xa4eab8;
	Node0xa4eab8 -> Node0xa4eb48;
	Node0xa4eb48 -> Node0xa4eba8;
	Node0xa4eba8 -> Node0xa4ec58;
	Node0xa4ec58 -> Node0xa4f088;
	Node0xa4f088 -> Node0xa4f168;
	Node0xa4f168 -> Node0xa4f268;
	Node0xa4f268 -> Node0xa4f328;
	Node0xa4f328 -> Node0xa4f3d8;
	Node0xa4f3d8 -> Node0xa4f498;
	Node0xa4f498 -> Node0xa4f548;
	Node0xa4f548 -> Node0xa49ab0;
	Node0xa49ab0 -> Node0xa4f748;
	Node0xa4f748 -> Node0xa506b8;
	Node0xa506b8 -> Node0xa50d28;
	Node0xa50d28 -> Node0xa50d88;
	Node0xa50d88 -> Node0xa50e00;
	Node0xa50e00 -> Node0xa50e70;
	Node0xa50e70 -> Node0xa50ee0;
	Node0xa50ee0 -> Node0xa50f50;
	Node0xa50f50 -> Node0xa50fc0;
	Node0xa50fc0 -> Node0xa51030;
	Node0xa51030 -> Node0xa510a0;
	Node0xa510a0 -> Node0xa51110;
	Node0xa51110 -> Node0xa51180;
	Node0xa51180 -> Node0xa511f0;
	Node0xa511f0 -> Node0xa51260;
	Node0xa51260 -> Node0xa512d0;
	Node0xa512d0 -> Node0xa51340;
	Node0xa51340 -> Node0xa513b0;
	Node0xa513b0 -> Node0xa51420;
	Node0xa51420 -> Node0xa51490;
	Node0xa51490 -> Node0xa51500;
	Node0xa51500 -> Node0xa51570;
	Node0xa51570 -> Node0xa515e0;
	Node0xa515e0 -> Node0xa51650;
	Node0xa51650 -> Node0xa516c0;
	Node0xa516c0 -> Node0xa51730;
	Node0xa51730 -> Node0xa517a0;
	Node0xa517a0 -> Node0xa51810;
	Node0xa51810 -> Node0xa51880;
	Node0xa51880 -> Node0xa518f0;
	Node0xa518f0 -> Node0xa51960;
	Node0xa51960 -> Node0xa519d0;
	Node0xa519d0 -> Node0xa51a40;
	Node0xa51a40 -> Node0xa51ab0;
	Node0xa51ab0 -> Node0xa51b20;
	Node0xa51b20 -> Node0xa51b90;
	Node0xa51b90 -> Node0xa51c00;
	Node0xa51c00 -> Node0xa51c70;
	Node0xa51c70 -> Node0xa51ce0;
	Node0xa51ce0 -> Node0xa51d50;
	Node0xa51d50 -> Node0xa51dc0;
	Node0xa51dc0 -> Node0x9ee8b8;
	Node0x9ee8b8 -> Node0xa51e50;
	Node0xa51e50 -> Node0xa520f8;
	Node0xa520f8 -> Node0xa52258;
	Node0xa52258 -> Node0xa52368;
	Node0xa52368 -> Node0xa52478;
	Node0xa52478 -> Node0xa52538;
edge [color=red]
	Node0xa4ea38 -> Node0xa4ec58;
	Node0xa4ec58 -> Node0xa4f088;
	Node0xa4eab8 -> Node0xa4f168;
	Node0xa4f168 -> Node0xa4f268;
	Node0xa4eb48 -> Node0xa4f328;
	Node0xa4f328 -> Node0xa4f3d8;
	Node0xa4eba8 -> Node0xa4f498;
	Node0xa4f498 -> Node0xa4f548;
	Node0xa4ea38 -> Node0xa49ab0;
	Node0xa4eab8 -> Node0xa49ab0;
	Node0xa4eb48 -> Node0xa49ab0;
	Node0xa4eba8 -> Node0xa49ab0;
	Node0xa4ea38 -> Node0xa4f748;
	Node0xa4eab8 -> Node0xa506b8;
	Node0xa4eb48 -> Node0xa50d28;
	Node0xa4eba8 -> Node0xa50d88;
	Node0xa50d28 -> Node0xa50e00;
	Node0xa50d28 -> Node0xa50e70;
	Node0xa506b8 -> Node0xa50ee0;
	Node0xa50e00 -> Node0xa50ee0;
	Node0xa50ee0 -> Node0xa50f50;
	Node0xa50e70 -> Node0xa50fc0;
	Node0xa50f50 -> Node0xa50fc0;
	Node0xa50d88 -> Node0xa51030;
	Node0xa51030 -> Node0xa510a0;
	Node0xa50fc0 -> Node0xa51110;
	Node0xa510a0 -> Node0xa51110;
	Node0xa506b8 -> Node0xa51180;
	Node0xa506b8 -> Node0xa511f0;
	Node0xa50e00 -> Node0xa511f0;
	Node0xa50d28 -> Node0xa51260;
	Node0xa506b8 -> Node0xa51260;
	Node0xa50ee0 -> Node0xa512d0;
	Node0xa50d88 -> Node0xa51340;
	Node0xa4f748 -> Node0xa513b0;
	Node0xa51340 -> Node0xa513b0;
	Node0xa4f748 -> Node0xa51420;
	Node0xa4f748 -> Node0xa51490;
	Node0xa51340 -> Node0xa51490;
	Node0xa50d88 -> Node0xa51500;
	Node0xa4f748 -> Node0xa51500;
	Node0xa51500 -> Node0xa51570;
	Node0xa51570 -> Node0xa515e0;
	Node0xa4f748 -> Node0xa51650;
	Node0xa51340 -> Node0xa51650;
	Node0xa512d0 -> Node0xa516c0;
	Node0xa511f0 -> Node0xa516c0;
	Node0xa516c0 -> Node0xa51730;
	Node0xa51260 -> Node0xa517a0;
	Node0xa506b8 -> Node0xa51810;
	Node0xa51810 -> Node0xa51880;
	Node0xa51420 -> Node0xa51880;
	Node0xa51880 -> Node0xa518f0;
	Node0xa50d28 -> Node0xa518f0;
	Node0xa518f0 -> Node0xa51960;
	Node0xa51180 -> Node0xa51960;
	Node0xa51960 -> Node0xa519d0;
	Node0xa511f0 -> Node0xa519d0;
	Node0xa519d0 -> Node0xa51a40;
	Node0xa51260 -> Node0xa51a40;
	Node0xa51a40 -> Node0xa51ab0;
	Node0xa513b0 -> Node0xa51ab0;
	Node0xa51ab0 -> Node0xa51b20;
	Node0xa51490 -> Node0xa51b20;
	Node0xa51b20 -> Node0xa51b90;
	Node0xa51570 -> Node0xa51b90;
	Node0xa51b90 -> Node0xa51c00;
	Node0xa51650 -> Node0xa51c00;
	Node0xa51c00 -> Node0xa51c70;
	Node0xa517a0 -> Node0xa51c70;
	Node0xa51c70 -> Node0xa51ce0;
	Node0xa515e0 -> Node0xa51ce0;
	Node0xa51ce0 -> Node0xa51d50;
	Node0xa51730 -> Node0xa51d50;
	Node0xa51110 -> Node0xa51dc0;
	Node0xa51d50 -> Node0xa51dc0;
	Node0xa51dc0 -> Node0x9ee8b8;
	Node0x9ee8b8 -> Node0xa51e50;
	Node0xa4f498 -> Node0xa520f8;
	Node0xa4f328 -> Node0xa52258;
	Node0xa4f168 -> Node0xa52368;
	Node0xa4ec58 -> Node0xa52478;
}
