digraph "DFG for'main' function" {
	Node0x138aa78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x138aaf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x138ab88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x138abe8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x138ac98[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x138b0c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x138b1a8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x138b2a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x138b368[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x138b418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x138b4d8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x138b588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1385740[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x138b788[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x138c6f8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x138cd68[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x138cdc8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x138ced8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x138d138[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x138d298[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x138d3a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x138d4b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x138d578[shape=record, label="  ret i32 0"];
	Node0x138aa78 -> Node0x138aaf8;
	Node0x138aaf8 -> Node0x138ab88;
	Node0x138ab88 -> Node0x138abe8;
	Node0x138abe8 -> Node0x138ac98;
	Node0x138ac98 -> Node0x138b0c8;
	Node0x138b0c8 -> Node0x138b1a8;
	Node0x138b1a8 -> Node0x138b2a8;
	Node0x138b2a8 -> Node0x138b368;
	Node0x138b368 -> Node0x138b418;
	Node0x138b418 -> Node0x138b4d8;
	Node0x138b4d8 -> Node0x138b588;
	Node0x138b588 -> Node0x1385740;
	Node0x1385740 -> Node0x138b788;
	Node0x138b788 -> Node0x138c6f8;
	Node0x138c6f8 -> Node0x138cd68;
	Node0x138cd68 -> Node0x138cdc8;
	Node0x138cdc8 -> Node0x138ced8;
	Node0x138ced8 -> Node0x138d138;
	Node0x138d138 -> Node0x138d298;
	Node0x138d298 -> Node0x138d3a8;
	Node0x138d3a8 -> Node0x138d4b8;
	Node0x138d4b8 -> Node0x138d578;
edge [color=red]
	Node0x138aa78 -> Node0x138ac98;
	Node0x138ac98 -> Node0x138b0c8;
	Node0x138aaf8 -> Node0x138b1a8;
	Node0x138b1a8 -> Node0x138b2a8;
	Node0x138ab88 -> Node0x138b368;
	Node0x138b368 -> Node0x138b418;
	Node0x138abe8 -> Node0x138b4d8;
	Node0x138b4d8 -> Node0x138b588;
	Node0x138aa78 -> Node0x1385740;
	Node0x138aaf8 -> Node0x1385740;
	Node0x138ab88 -> Node0x1385740;
	Node0x138abe8 -> Node0x1385740;
	Node0x138aa78 -> Node0x138b788;
	Node0x138aaf8 -> Node0x138c6f8;
	Node0x138ab88 -> Node0x138cd68;
	Node0x138abe8 -> Node0x138cdc8;
	Node0x138b788 -> Node0x138ced8;
	Node0x138c6f8 -> Node0x138ced8;
	Node0x138cd68 -> Node0x138ced8;
	Node0x138cdc8 -> Node0x138ced8;
	Node0x138b4d8 -> Node0x138d138;
	Node0x138b368 -> Node0x138d298;
	Node0x138b1a8 -> Node0x138d3a8;
	Node0x138ac98 -> Node0x138d4b8;
}
