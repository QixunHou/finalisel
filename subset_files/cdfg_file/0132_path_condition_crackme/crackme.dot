digraph "DFG for'crackme' function" {
	Node0x1388710[shape=record, label="  %5 = xor i32 %3, %0"];
	Node0x1388780[shape=record, label="  %6 = add i32 %3, %1"];
	Node0x13887f0[shape=record, label="  %7 = sub i32 %5, %6"];
	Node0x1388860[shape=record, label="  %8 = or i32 %2, %1"];
	Node0x1388ee0[shape=record, label="  %9 = mul i32 %8, 3"];
	Node0x1388f50[shape=record, label="  %10 = xor i32 %2, %1"];
	Node0x1388ff0[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x1389060[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x13890d0[shape=record, label="  %13 = or i32 %11, %1"];
	Node0x1389140[shape=record, label="  %14 = xor i32 %8, -1"];
	Node0x13891e0[shape=record, label="  %15 = shl i32 %13, 2"];
	Node0x1389280[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x13892f0[shape=record, label="  %17 = and i32 %11, %1"];
	Node0x1389390[shape=record, label="  %18 = shl i32 %12, 1"];
	Node0x1389400[shape=record, label="  %19 = xor i32 %0, -1"];
	Node0x1389470[shape=record, label="  %20 = and i32 %19, %3"];
	Node0x13894e0[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x1389550[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x13895c0[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x1389630[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x13896d0[shape=record, label="  %25 = xor i32 %22, -2"];
	Node0x1389740[shape=record, label="  %26 = xor i32 %3, -1"];
	Node0x13897b0[shape=record, label="  %27 = and i32 %26, %0"];
	Node0x1389850[shape=record, label="  %28 = mul i32 %3, -5"];
	Node0x13898c0[shape=record, label="  %29 = add i32 %27, %17"];
	Node0x1389960[shape=record, label="  %30 = mul i32 %29, -6"];
	Node0x13899d0[shape=record, label="  %31 = sub i32 %10, %2"];
	Node0x1389a40[shape=record, label="  %32 = add i32 %31, %5"];
	Node0x1389cc0[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x1389d30[shape=record, label="  %34 = add i32 %0, -1"];
	Node0x1389da0[shape=record, label="  %35 = add i32 %34, %10"];
	Node0x1389e10[shape=record, label="  %36 = add i32 %35, %12"];
	Node0x1389e80[shape=record, label="  %37 = sub i32 %36, %13"];
	Node0x1389ef0[shape=record, label="  %38 = add i32 %37, %14"];
	Node0x1389f60[shape=record, label="  %39 = add i32 %38, %9"];
	Node0x1389fd0[shape=record, label="  %40 = sub i32 %39, %18"];
	Node0x138a040[shape=record, label="  %41 = sub i32 %40, %20"];
	Node0x138a0b0[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x138a120[shape=record, label="  %43 = sub i32 %42, %16"];
	Node0x138a190[shape=record, label="  %44 = add i32 %43, %22"];
	Node0x138a200[shape=record, label="  %45 = sub i32 %44, %25"];
	Node0x138a270[shape=record, label="  %46 = add i32 %45, %28"];
	Node0x138a2e0[shape=record, label="  %47 = add i32 %46, %30"];
	Node0x138a350[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x138a3c0[shape=record, label="  %49 = icmp eq i32 %7, %48"];
	Node0x1329268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x138a860[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x138a8b0[shape=record, label="  ret void"];
	Node0x1388710 -> Node0x1388780;
	Node0x1388780 -> Node0x13887f0;
	Node0x13887f0 -> Node0x1388860;
	Node0x1388860 -> Node0x1388ee0;
	Node0x1388ee0 -> Node0x1388f50;
	Node0x1388f50 -> Node0x1388ff0;
	Node0x1388ff0 -> Node0x1389060;
	Node0x1389060 -> Node0x13890d0;
	Node0x13890d0 -> Node0x1389140;
	Node0x1389140 -> Node0x13891e0;
	Node0x13891e0 -> Node0x1389280;
	Node0x1389280 -> Node0x13892f0;
	Node0x13892f0 -> Node0x1389390;
	Node0x1389390 -> Node0x1389400;
	Node0x1389400 -> Node0x1389470;
	Node0x1389470 -> Node0x13894e0;
	Node0x13894e0 -> Node0x1389550;
	Node0x1389550 -> Node0x13895c0;
	Node0x13895c0 -> Node0x1389630;
	Node0x1389630 -> Node0x13896d0;
	Node0x13896d0 -> Node0x1389740;
	Node0x1389740 -> Node0x13897b0;
	Node0x13897b0 -> Node0x1389850;
	Node0x1389850 -> Node0x13898c0;
	Node0x13898c0 -> Node0x1389960;
	Node0x1389960 -> Node0x13899d0;
	Node0x13899d0 -> Node0x1389a40;
	Node0x1389a40 -> Node0x1389cc0;
	Node0x1389cc0 -> Node0x1389d30;
	Node0x1389d30 -> Node0x1389da0;
	Node0x1389da0 -> Node0x1389e10;
	Node0x1389e10 -> Node0x1389e80;
	Node0x1389e80 -> Node0x1389ef0;
	Node0x1389ef0 -> Node0x1389f60;
	Node0x1389f60 -> Node0x1389fd0;
	Node0x1389fd0 -> Node0x138a040;
	Node0x138a040 -> Node0x138a0b0;
	Node0x138a0b0 -> Node0x138a120;
	Node0x138a120 -> Node0x138a190;
	Node0x138a190 -> Node0x138a200;
	Node0x138a200 -> Node0x138a270;
	Node0x138a270 -> Node0x138a2e0;
	Node0x138a2e0 -> Node0x138a350;
	Node0x138a350 -> Node0x138a3c0;
	Node0x138a3c0 -> Node0x1329268;
	Node0x1329268 -> Node0x138a860;
	Node0x138a860 -> Node0x138a8b0;
edge [color=red]
	Node0x1388710 -> Node0x13887f0;
	Node0x1388780 -> Node0x13887f0;
	Node0x1388860 -> Node0x1388ee0;
	Node0x1388ff0 -> Node0x13890d0;
	Node0x1388860 -> Node0x1389140;
	Node0x13890d0 -> Node0x13891e0;
	Node0x13891e0 -> Node0x1389280;
	Node0x1388ff0 -> Node0x13892f0;
	Node0x1389060 -> Node0x1389390;
	Node0x1389400 -> Node0x1389470;
	Node0x13894e0 -> Node0x1389550;
	Node0x13895c0 -> Node0x1389630;
	Node0x1389550 -> Node0x13896d0;
	Node0x1389740 -> Node0x13897b0;
	Node0x13897b0 -> Node0x13898c0;
	Node0x13892f0 -> Node0x13898c0;
	Node0x13898c0 -> Node0x1389960;
	Node0x1388f50 -> Node0x13899d0;
	Node0x13899d0 -> Node0x1389a40;
	Node0x1388710 -> Node0x1389a40;
	Node0x1389a40 -> Node0x1389cc0;
	Node0x1389d30 -> Node0x1389da0;
	Node0x1388f50 -> Node0x1389da0;
	Node0x1389da0 -> Node0x1389e10;
	Node0x1389060 -> Node0x1389e10;
	Node0x1389e10 -> Node0x1389e80;
	Node0x13890d0 -> Node0x1389e80;
	Node0x1389e80 -> Node0x1389ef0;
	Node0x1389140 -> Node0x1389ef0;
	Node0x1389ef0 -> Node0x1389f60;
	Node0x1388ee0 -> Node0x1389f60;
	Node0x1389f60 -> Node0x1389fd0;
	Node0x1389390 -> Node0x1389fd0;
	Node0x1389fd0 -> Node0x138a040;
	Node0x1389470 -> Node0x138a040;
	Node0x138a040 -> Node0x138a0b0;
	Node0x1389630 -> Node0x138a0b0;
	Node0x138a0b0 -> Node0x138a120;
	Node0x1389280 -> Node0x138a120;
	Node0x138a120 -> Node0x138a190;
	Node0x1389550 -> Node0x138a190;
	Node0x138a190 -> Node0x138a200;
	Node0x13896d0 -> Node0x138a200;
	Node0x138a200 -> Node0x138a270;
	Node0x1389850 -> Node0x138a270;
	Node0x138a270 -> Node0x138a2e0;
	Node0x1389960 -> Node0x138a2e0;
	Node0x138a2e0 -> Node0x138a350;
	Node0x1389cc0 -> Node0x138a350;
	Node0x13887f0 -> Node0x138a3c0;
	Node0x138a350 -> Node0x138a3c0;
	Node0x138a3c0 -> Node0x1329268;
	Node0x1329268 -> Node0x138a860;
}
