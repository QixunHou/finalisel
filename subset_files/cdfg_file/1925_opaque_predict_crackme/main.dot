digraph "DFG for'main' function" {
	Node0x2328048[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23280c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2328158[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23281b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2328638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2328718[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x2328818[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23288d8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2328988[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2328be8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x2328ca8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2328e08[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2328e68[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x232dd50[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x232df58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x232e0b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x232e1c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x232e288[shape=record, label="  ret i32 0"];
	Node0x2328048 -> Node0x23280c8;
	Node0x23280c8 -> Node0x2328158;
	Node0x2328158 -> Node0x23281b8;
	Node0x23281b8 -> Node0x2328638;
	Node0x2328638 -> Node0x2328718;
	Node0x2328718 -> Node0x2328818;
	Node0x2328818 -> Node0x23288d8;
	Node0x23288d8 -> Node0x2328988;
	Node0x2328988 -> Node0x2328be8;
	Node0x2328be8 -> Node0x2328ca8;
	Node0x2328ca8 -> Node0x2328e08;
	Node0x2328e08 -> Node0x2328e68;
	Node0x2328e68 -> Node0x232dd50;
	Node0x232dd50 -> Node0x232df58;
	Node0x232df58 -> Node0x232e0b8;
	Node0x232e0b8 -> Node0x232e1c8;
	Node0x232e1c8 -> Node0x232e288;
edge [color=red]
	Node0x2328048 -> Node0x23281b8;
	Node0x23281b8 -> Node0x2328638;
	Node0x23280c8 -> Node0x2328718;
	Node0x2328718 -> Node0x2328818;
	Node0x2328158 -> Node0x23288d8;
	Node0x23288d8 -> Node0x2328988;
	Node0x2328048 -> Node0x2328be8;
	Node0x23280c8 -> Node0x2328be8;
	Node0x2328158 -> Node0x2328be8;
	Node0x2328048 -> Node0x2328ca8;
	Node0x23280c8 -> Node0x2328e08;
	Node0x2328158 -> Node0x2328e68;
	Node0x2328ca8 -> Node0x232dd50;
	Node0x2328e08 -> Node0x232dd50;
	Node0x2328e68 -> Node0x232dd50;
	Node0x23288d8 -> Node0x232df58;
	Node0x2328718 -> Node0x232e0b8;
	Node0x23281b8 -> Node0x232e1c8;
}
