digraph "DFG for'crackme' function" {
	Node0x13bac40[shape=record, label="  %3 = xor i32 %0, -1"];
	Node0x13bacb0[shape=record, label="  %4 = and i32 %1, %0"];
	Node0x13bad70[shape=record, label="  %5 = xor i32 %4, -1"];
	Node0x13bade0[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0x13bae50[shape=record, label="  %7 = and i32 %6, %0"];
	Node0x13baec0[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x13baf60[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x13bb000[shape=record, label="  %10 = mul i32 %3, -5"];
	Node0x13bb070[shape=record, label="  %11 = or i32 %1, %0"];
	Node0x13bb0e0[shape=record, label="  %12 = or i32 %6, %0"];
	Node0x13bb150[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x13bb1f0[shape=record, label="  %14 = shl i32 %11, 2"];
	Node0x13bb290[shape=record, label="  %15 = xor i32 %14, -4"];
	Node0x13bb300[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x13bb3a0[shape=record, label="  %17 = mul i32 %16, 6"];
	Node0x13bb440[shape=record, label="  %18 = mul i32 %7, -3"];
	Node0x13bb4b0[shape=record, label="  %19 = add i32 %0, 1"];
	Node0x13bb520[shape=record, label="  %20 = add i32 %19, %1"];
	Node0x13bb590[shape=record, label="  %21 = add i32 %20, %10"];
	Node0x13bb600[shape=record, label="  %22 = add i32 %21, %5"];
	Node0x13bb670[shape=record, label="  %23 = sub i32 %22, %11"];
	Node0x13bb6e0[shape=record, label="  %24 = sub i32 %23, %4"];
	Node0x13bb750[shape=record, label="  %25 = add i32 %24, %13"];
	Node0x13bb7c0[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x13bb830[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x13bb8a0[shape=record, label="  %28 = sub i32 %27, %9"];
	Node0x13bb910[shape=record, label="  %29 = add i32 %28, %15"];
	Node0x13bb980[shape=record, label="  %30 = icmp eq i32 %29, 1"];
	Node0x135b268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x13bbe20[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x13bc080[shape=record, label="  ret void"];
	Node0x13bac40 -> Node0x13bacb0;
	Node0x13bacb0 -> Node0x13bad70;
	Node0x13bad70 -> Node0x13bade0;
	Node0x13bade0 -> Node0x13bae50;
	Node0x13bae50 -> Node0x13baec0;
	Node0x13baec0 -> Node0x13baf60;
	Node0x13baf60 -> Node0x13bb000;
	Node0x13bb000 -> Node0x13bb070;
	Node0x13bb070 -> Node0x13bb0e0;
	Node0x13bb0e0 -> Node0x13bb150;
	Node0x13bb150 -> Node0x13bb1f0;
	Node0x13bb1f0 -> Node0x13bb290;
	Node0x13bb290 -> Node0x13bb300;
	Node0x13bb300 -> Node0x13bb3a0;
	Node0x13bb3a0 -> Node0x13bb440;
	Node0x13bb440 -> Node0x13bb4b0;
	Node0x13bb4b0 -> Node0x13bb520;
	Node0x13bb520 -> Node0x13bb590;
	Node0x13bb590 -> Node0x13bb600;
	Node0x13bb600 -> Node0x13bb670;
	Node0x13bb670 -> Node0x13bb6e0;
	Node0x13bb6e0 -> Node0x13bb750;
	Node0x13bb750 -> Node0x13bb7c0;
	Node0x13bb7c0 -> Node0x13bb830;
	Node0x13bb830 -> Node0x13bb8a0;
	Node0x13bb8a0 -> Node0x13bb910;
	Node0x13bb910 -> Node0x13bb980;
	Node0x13bb980 -> Node0x135b268;
	Node0x135b268 -> Node0x13bbe20;
	Node0x13bbe20 -> Node0x13bc080;
edge [color=red]
	Node0x13bacb0 -> Node0x13bad70;
	Node0x13bade0 -> Node0x13bae50;
	Node0x13bae50 -> Node0x13baec0;
	Node0x13baec0 -> Node0x13baf60;
	Node0x13bac40 -> Node0x13bb000;
	Node0x13bade0 -> Node0x13bb0e0;
	Node0x13bb0e0 -> Node0x13bb150;
	Node0x13bb070 -> Node0x13bb1f0;
	Node0x13bb1f0 -> Node0x13bb290;
	Node0x13bb0e0 -> Node0x13bb300;
	Node0x13bb300 -> Node0x13bb3a0;
	Node0x13bae50 -> Node0x13bb440;
	Node0x13bb4b0 -> Node0x13bb520;
	Node0x13bb520 -> Node0x13bb590;
	Node0x13bb000 -> Node0x13bb590;
	Node0x13bb590 -> Node0x13bb600;
	Node0x13bad70 -> Node0x13bb600;
	Node0x13bb600 -> Node0x13bb670;
	Node0x13bb070 -> Node0x13bb670;
	Node0x13bb670 -> Node0x13bb6e0;
	Node0x13bacb0 -> Node0x13bb6e0;
	Node0x13bb6e0 -> Node0x13bb750;
	Node0x13bb150 -> Node0x13bb750;
	Node0x13bb750 -> Node0x13bb7c0;
	Node0x13bb3a0 -> Node0x13bb7c0;
	Node0x13bb7c0 -> Node0x13bb830;
	Node0x13bb440 -> Node0x13bb830;
	Node0x13bb830 -> Node0x13bb8a0;
	Node0x13baf60 -> Node0x13bb8a0;
	Node0x13bb8a0 -> Node0x13bb910;
	Node0x13bb290 -> Node0x13bb910;
	Node0x13bb910 -> Node0x13bb980;
	Node0x13bb980 -> Node0x135b268;
	Node0x135b268 -> Node0x13bbe20;
}
