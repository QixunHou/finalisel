digraph "DFG for'main' function" {
	Node0xcc7d48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xcc7dc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xcc7e58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xcc7eb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xcc7f68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xcc8398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xcc8478[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xcc8578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xcc8638[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xcc86e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xcc87a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xcc8858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xcc27b0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xcc8a58[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xcc99c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xcca038[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xcca098[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xcca1a8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xcca408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xcca568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xcca678[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xcca788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xcca848[shape=record, label="  ret i32 0"];
	Node0xcc7d48 -> Node0xcc7dc8;
	Node0xcc7dc8 -> Node0xcc7e58;
	Node0xcc7e58 -> Node0xcc7eb8;
	Node0xcc7eb8 -> Node0xcc7f68;
	Node0xcc7f68 -> Node0xcc8398;
	Node0xcc8398 -> Node0xcc8478;
	Node0xcc8478 -> Node0xcc8578;
	Node0xcc8578 -> Node0xcc8638;
	Node0xcc8638 -> Node0xcc86e8;
	Node0xcc86e8 -> Node0xcc87a8;
	Node0xcc87a8 -> Node0xcc8858;
	Node0xcc8858 -> Node0xcc27b0;
	Node0xcc27b0 -> Node0xcc8a58;
	Node0xcc8a58 -> Node0xcc99c8;
	Node0xcc99c8 -> Node0xcca038;
	Node0xcca038 -> Node0xcca098;
	Node0xcca098 -> Node0xcca1a8;
	Node0xcca1a8 -> Node0xcca408;
	Node0xcca408 -> Node0xcca568;
	Node0xcca568 -> Node0xcca678;
	Node0xcca678 -> Node0xcca788;
	Node0xcca788 -> Node0xcca848;
edge [color=red]
	Node0xcc7d48 -> Node0xcc7f68;
	Node0xcc7f68 -> Node0xcc8398;
	Node0xcc7dc8 -> Node0xcc8478;
	Node0xcc8478 -> Node0xcc8578;
	Node0xcc7e58 -> Node0xcc8638;
	Node0xcc8638 -> Node0xcc86e8;
	Node0xcc7eb8 -> Node0xcc87a8;
	Node0xcc87a8 -> Node0xcc8858;
	Node0xcc7d48 -> Node0xcc27b0;
	Node0xcc7dc8 -> Node0xcc27b0;
	Node0xcc7e58 -> Node0xcc27b0;
	Node0xcc7eb8 -> Node0xcc27b0;
	Node0xcc7d48 -> Node0xcc8a58;
	Node0xcc7dc8 -> Node0xcc99c8;
	Node0xcc7e58 -> Node0xcca038;
	Node0xcc7eb8 -> Node0xcca098;
	Node0xcc8a58 -> Node0xcca1a8;
	Node0xcc99c8 -> Node0xcca1a8;
	Node0xcca038 -> Node0xcca1a8;
	Node0xcca098 -> Node0xcca1a8;
	Node0xcc87a8 -> Node0xcca408;
	Node0xcc8638 -> Node0xcca568;
	Node0xcc8478 -> Node0xcca678;
	Node0xcc7f68 -> Node0xcca788;
}
