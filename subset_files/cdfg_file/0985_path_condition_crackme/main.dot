digraph "DFG for'main' function" {
	Node0xb75ba8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb75c28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb75cb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb75d18[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xb76198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb78cb8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xb78d98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb78e58[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xb78f08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb79168[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xb79228[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb7a198[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb7a808[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb7a900[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xb7ab08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb7ac68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb7ad78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb7ae38[shape=record, label="  ret i32 0"];
	Node0xb75ba8 -> Node0xb75c28;
	Node0xb75c28 -> Node0xb75cb8;
	Node0xb75cb8 -> Node0xb75d18;
	Node0xb75d18 -> Node0xb76198;
	Node0xb76198 -> Node0xb78cb8;
	Node0xb78cb8 -> Node0xb78d98;
	Node0xb78d98 -> Node0xb78e58;
	Node0xb78e58 -> Node0xb78f08;
	Node0xb78f08 -> Node0xb79168;
	Node0xb79168 -> Node0xb79228;
	Node0xb79228 -> Node0xb7a198;
	Node0xb7a198 -> Node0xb7a808;
	Node0xb7a808 -> Node0xb7a900;
	Node0xb7a900 -> Node0xb7ab08;
	Node0xb7ab08 -> Node0xb7ac68;
	Node0xb7ac68 -> Node0xb7ad78;
	Node0xb7ad78 -> Node0xb7ae38;
edge [color=red]
	Node0xb75ba8 -> Node0xb75d18;
	Node0xb75d18 -> Node0xb76198;
	Node0xb75c28 -> Node0xb78cb8;
	Node0xb78cb8 -> Node0xb78d98;
	Node0xb75cb8 -> Node0xb78e58;
	Node0xb78e58 -> Node0xb78f08;
	Node0xb75ba8 -> Node0xb79168;
	Node0xb75c28 -> Node0xb79168;
	Node0xb75cb8 -> Node0xb79168;
	Node0xb75ba8 -> Node0xb79228;
	Node0xb75c28 -> Node0xb7a198;
	Node0xb75cb8 -> Node0xb7a808;
	Node0xb79228 -> Node0xb7a900;
	Node0xb7a198 -> Node0xb7a900;
	Node0xb7a808 -> Node0xb7a900;
	Node0xb78e58 -> Node0xb7ab08;
	Node0xb78cb8 -> Node0xb7ac68;
	Node0xb75d18 -> Node0xb7ad78;
}
