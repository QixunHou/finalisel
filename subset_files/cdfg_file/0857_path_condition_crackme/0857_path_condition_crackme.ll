; ModuleID = '../.././c_source_file/0857_path_condition_crackme.c'
source_filename = "../.././c_source_file/0857_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = or i32 %7, %0
  %9 = xor i32 %1, %0
  %10 = and i32 %8, %9
  %11 = mul i32 %10, -5
  %12 = xor i32 %3, -1
  %13 = xor i32 %5, -1
  %14 = or i32 %13, %4
  %15 = and i32 %14, %12
  %16 = add i32 %15, %11
  %17 = xor i32 %2, %1
  %18 = xor i32 %17, -1
  %19 = or i32 %18, %0
  %20 = and i32 %1, %0
  %21 = or i32 %7, %1
  %22 = xor i32 %21, %20
  %23 = xor i32 %0, -1
  %24 = xor i32 %1, -1
  %25 = and i32 %24, %2
  %26 = and i32 %25, %23
  %27 = or i32 %17, %23
  %28 = xor i32 %27, -1
  %29 = or i32 %26, %28
  %30 = and i32 %2, %1
  %31 = and i32 %30, %0
  %32 = or i32 %2, %1
  %33 = and i32 %32, %23
  %34 = or i32 %31, %33
  %35 = xor i32 %21, -1
  %36 = or i32 %35, %0
  %37 = and i32 %7, %1
  %38 = shl i32 %37, 1
  %39 = and i32 %7, %0
  %40 = xor i32 %39, -1
  %41 = and i32 %9, %40
  %42 = shl i32 %41, 1
  %43 = and i32 %25, %0
  %44 = or i32 %17, %0
  %45 = xor i32 %43, %44
  %46 = or i32 %20, %18
  %47 = xor i32 %32, %20
  %48 = or i32 %17, %20
  %49 = xor i32 %2, %0
  %50 = xor i32 %49, -1
  %51 = or i32 %20, %50
  %52 = or i32 %1, %0
  %53 = and i32 %52, %50
  %54 = xor i32 %37, -1
  %55 = xor i32 %54, %0
  %56 = xor i32 %32, -1
  %57 = or i32 %56, %0
  %58 = and i32 %52, %2
  %59 = and i32 %24, %0
  %60 = xor i32 %59, -1
  %61 = and i32 %17, %60
  %62 = or i32 %20, %7
  %63 = and i32 %18, %60
  %64 = or i32 %21, %23
  %65 = or i32 %54, %0
  %66 = xor i32 %59, %54
  %67 = xor i32 %21, %0
  %68 = xor i32 %9, -1
  %69 = or i32 %7, %68
  %70 = and i32 %2, %0
  %71 = xor i32 %70, %32
  %72 = xor i32 %8, -1
  %73 = or i32 %9, %72
  %74 = xor i32 %70, -1
  %75 = and i32 %74, %24
  %76 = and i32 %7, %60
  %77 = xor i32 %30, -1
  %78 = add i32 %30, 1
  %79 = xor i32 %20, -1
  %80 = and i32 %50, %79
  %81 = or i32 %49, %59
  %82 = shl i32 %81, 1
  %83 = or i32 %24, %0
  %84 = xor i32 %83, -1
  %85 = xor i32 %84, %2
  %86 = and i32 %8, %68
  %87 = shl i32 %74, 1
  %88 = xor i32 %52, -1
  %89 = or i32 %70, %88
  %90 = and i32 %49, %60
  %91 = and i32 %77, %23
  %92 = or i32 %2, %0
  %93 = xor i32 %92, %1
  %94 = or i32 %20, %35
  %95 = shl i32 %94, 1
  %96 = xor i32 %72, %1
  %97 = and i32 %52, %18
  %98 = xor i32 %31, %19
  %99 = or i32 %49, %84
  %100 = shl i32 %99, 1
  %101 = and i32 %83, %7
  %102 = or i32 %70, %56
  %103 = or i32 %49, %20
  %104 = and i32 %74, %1
  %105 = or i32 %18, %88
  %106 = or i32 %50, %88
  %107 = and i32 %17, %79
  %108 = and i32 %40, %1
  %109 = xor i32 %70, %52
  %110 = or i32 %39, %9
  %111 = or i32 %50, %68
  %112 = xor i32 %32, %0
  %113 = or i32 %49, %68
  %114 = xor i32 %40, %1
  %115 = or i32 %49, %9
  %116 = xor i32 %56, %0
  %117 = xor i32 %37, %0
  %118 = shl i32 %117, 1
  %119 = and i32 %54, %23
  %120 = xor i32 %74, %1
  %121 = xor i32 %35, %0
  %122 = and i32 %50, %24
  %123 = or i32 %17, %59
  %124 = or i32 %39, %24
  %125 = and i32 %77, %0
  %126 = and i32 %49, %83
  %127 = and i32 %9, %2
  %128 = or i32 %70, %1
  %129 = and i32 %21, %0
  %130 = xor i32 %17, %0
  %131 = xor i32 %130, -1
  %132 = or i32 %31, %131
  %133 = and i32 %83, %2
  %134 = xor i32 %70, %1
  %135 = or i32 %24, %2
  %136 = and i32 %135, %23
  %137 = or i32 %43, %136
  %138 = or i32 %77, %0
  %139 = or i32 %17, %88
  %140 = or i32 %59, %2
  %141 = and i32 %135, %0
  %142 = xor i32 %141, 2147483647
  %143 = xor i32 %142, %26
  %144 = add i32 %1, 1
  %145 = or i32 %84, %2
  %146 = or i32 %21, %0
  %147 = and i32 %92, %9
  %148 = xor i32 %92, -1
  %149 = add i32 %92, 1
  %150 = and i32 %50, %60
  %151 = or i32 %68, %2
  %152 = and i32 %92, %1
  %153 = or i32 %148, %24
  %154 = and i32 %30, %23
  %155 = and i32 %17, %0
  %156 = or i32 %154, %155
  %157 = and i32 %18, %79
  %158 = shl i32 %157, 1
  %159 = or i32 %9, %7
  %160 = or i32 %20, %72
  %161 = or i32 %37, %23
  %162 = shl i32 %161, 1
  %163 = or i32 %18, %23
  %164 = shl i32 %52, 1
  %165 = or i32 %148, %68
  %166 = and i32 %56, %23
  %167 = and i32 %37, %23
  %168 = shl i32 %167, 1
  %169 = and i32 %56, %0
  %170 = and i32 %35, %23
  %171 = mul i32 %170, 10
  %172 = shl i32 %154, 3
  %173 = and i32 %35, %0
  %174 = and i32 %5, %3
  %175 = and i32 %174, %4
  %176 = xor i32 %4, -1
  %177 = xor i32 %5, %3
  %178 = and i32 %177, %176
  %179 = or i32 %175, %178
  %180 = shl i32 %179, 1
  %181 = and i32 %12, %4
  %182 = and i32 %13, %3
  %183 = xor i32 %182, -1
  %184 = xor i32 %181, %183
  %185 = xor i32 %4, %3
  %186 = or i32 %185, %13
  %187 = and i32 %5, %4
  %188 = or i32 %187, %3
  %189 = shl i32 %188, 1
  %190 = xor i32 %185, -1
  %191 = or i32 %13, %190
  %192 = and i32 %12, %5
  %193 = and i32 %192, %4
  %194 = xor i32 %177, %4
  %195 = or i32 %193, %194
  %196 = xor i32 %5, %4
  %197 = xor i32 %196, -1
  %198 = and i32 %197, %190
  %199 = and i32 %4, %3
  %200 = xor i32 %14, %199
  %201 = shl i32 %200, 2
  %202 = or i32 %12, %4
  %203 = xor i32 %202, -1
  %204 = or i32 %187, %203
  %205 = xor i32 %181, -1
  %206 = add i32 %181, 1
  %207 = or i32 %5, %4
  %208 = xor i32 %207, -1
  %209 = or i32 %208, %12
  %210 = xor i32 %174, -1
  %211 = and i32 %210, %176
  %212 = or i32 %177, %4
  %213 = shl i32 %212, 1
  %214 = or i32 %5, %3
  %215 = or i32 %214, %4
  %216 = or i32 %4, %3
  %217 = xor i32 %177, -1
  %218 = and i32 %216, %217
  %219 = shl i32 %218, 1
  %220 = and i32 %192, %176
  %221 = or i32 %177, %176
  %222 = xor i32 %220, %221
  %223 = xor i32 %181, %210
  %224 = shl i32 %223, 1
  %225 = xor i32 %193, %212
  %226 = or i32 %13, %3
  %227 = and i32 %226, %176
  %228 = add i32 %177, 1
  %229 = xor i32 %194, -1
  %230 = or i32 %175, %229
  %231 = or i32 %214, %176
  %232 = and i32 %177, %4
  %233 = xor i32 %216, -1
  %234 = or i32 %177, %233
  %235 = xor i32 %182, %4
  %236 = and i32 %13, %4
  %237 = xor i32 %236, -1
  %238 = xor i32 %237, %3
  %239 = or i32 %12, %5
  %240 = and i32 %239, %4
  %241 = or i32 %220, %240
  %242 = xor i32 %214, -1
  %243 = or i32 %199, %242
  %244 = xor i32 %14, -1
  %245 = or i32 %199, %244
  %246 = shl i32 %245, 1
  %247 = xor i32 %226, -1
  %248 = or i32 %236, %247
  %249 = shl i32 %248, 1
  %250 = and i32 %214, %4
  %251 = or i32 %197, %190
  %252 = or i32 %199, %208
  %253 = and i32 %217, %4
  %254 = or i32 %236, %3
  %255 = shl i32 %254, 2
  %256 = or i32 %197, %233
  %257 = xor i32 %187, -1
  %258 = and i32 %257, %12
  %259 = shl i32 %258, 1
  %260 = or i32 %196, %203
  %261 = and i32 %185, %257
  %262 = or i32 %197, %203
  %263 = shl i32 %216, 1
  %264 = or i32 %181, %197
  %265 = xor i32 %210, %4
  %266 = shl i32 %265, 1
  %267 = or i32 %199, %247
  %268 = or i32 %247, %176
  %269 = and i32 %202, %13
  %270 = xor i32 %214, %4
  %271 = xor i32 %175, -1
  %272 = xor i32 %270, %271
  %273 = or i32 %196, %181
  %274 = or i32 %217, %176
  %275 = or i32 %187, %182
  %276 = and i32 %216, %197
  %277 = xor i32 %187, %216
  %278 = and i32 %196, %185
  %279 = and i32 %257, %190
  %280 = or i32 %226, %4
  %281 = xor i32 %199, -1
  %282 = and i32 %197, %281
  %283 = and i32 %237, %190
  %284 = or i32 %183, %176
  %285 = or i32 %199, %217
  %286 = and i32 %226, %4
  %287 = xor i32 %175, %194
  %288 = xor i32 %199, %5
  %289 = and i32 %207, %12
  %290 = add i32 %207, 1
  %291 = and i32 %214, %176
  %292 = xor i32 %291, %271
  %293 = or i32 %187, %233
  %294 = or i32 %236, %174
  %295 = xor i32 %212, -1
  %296 = or i32 %193, %295
  %297 = add i32 %187, 1
  %298 = and i32 %13, %190
  %299 = and i32 %207, %3
  %300 = or i32 %233, %5
  %301 = and i32 %174, %176
  %302 = xor i32 %301, -1
  %303 = xor i32 %250, %302
  %304 = or i32 %185, %244
  %305 = and i32 %216, %13
  %306 = and i32 %202, %217
  %307 = xor i32 %281, %5
  %308 = shl i32 %307, 1
  %309 = or i32 %196, %12
  %310 = or i32 %217, %203
  %311 = xor i32 %221, -1
  %312 = or i32 %220, %311
  %313 = and i32 %196, %12
  %314 = and i32 %210, %4
  %315 = or i32 %182, %176
  %316 = or i32 %242, %176
  %317 = xor i32 %178, %271
  %318 = and i32 %177, %281
  %319 = shl i32 %318, 1
  %320 = and i32 %185, %5
  %321 = xor i32 %239, %4
  %322 = or i32 %193, %321
  %323 = or i32 %174, %176
  %324 = or i32 %301, %232
  %325 = or i32 %177, %199
  %326 = or i32 %210, %176
  %327 = and i32 %197, %3
  %328 = xor i32 %208, %3
  %329 = or i32 %185, %5
  %330 = shl i32 %329, 1
  %331 = xor i32 %232, %302
  %332 = and i32 %177, %216
  %333 = or i32 %182, %181
  %334 = or i32 %199, %197
  %335 = or i32 %199, %13
  %336 = shl i32 %335, 1
  %337 = or i32 %13, %233
  %338 = xor i32 %174, %4
  %339 = and i32 %207, %190
  %340 = xor i32 %187, %3
  %341 = xor i32 %183, %4
  %342 = and i32 %237, %3
  %343 = and i32 %196, %216
  %344 = xor i32 %236, %3
  %345 = and i32 %217, %176
  %346 = or i32 %196, %3
  %347 = or i32 %183, %4
  %348 = xor i32 %240, 2147483647
  %349 = xor i32 %348, %220
  %350 = shl i32 %349, 1
  %351 = or i32 %181, %217
  %352 = or i32 %217, %4
  %353 = and i32 %239, %176
  %354 = xor i32 %193, 2147483647
  %355 = xor i32 %354, %353
  %356 = shl i32 %355, 1
  %357 = add i32 %199, 1
  %358 = or i32 %187, %185
  %359 = and i32 %14, %190
  %360 = xor i32 %354, %321
  %361 = xor i32 %242, %4
  %362 = xor i32 %247, %4
  %363 = and i32 %183, %4
  %364 = and i32 %185, %237
  %365 = shl i32 %364, 2
  %366 = or i32 %236, %190
  %367 = xor i32 %217, %4
  %368 = or i32 %174, %4
  %369 = and i32 %14, %3
  %370 = xor i32 %181, %5
  %371 = and i32 %216, %5
  %372 = or i32 %193, %353
  %373 = and i32 %13, %281
  %374 = or i32 %244, %12
  %375 = xor i32 %207, %199
  %376 = and i32 %177, %205
  %377 = or i32 %236, %12
  %378 = or i32 %208, %3
  %379 = or i32 %190, %5
  %380 = and i32 %281, %5
  %381 = and i32 %197, %12
  %382 = or i32 %244, %3
  %383 = xor i32 %216, %5
  %384 = and i32 %185, %197
  %385 = or i32 %196, %190
  %386 = and i32 %13, %205
  %387 = or i32 %187, %12
  %388 = shl i32 %387, 1
  %389 = or i32 %187, %190
  %390 = shl i32 %389, 1
  %391 = or i32 %196, %233
  %392 = and i32 %202, %5
  %393 = or i32 %197, %12
  %394 = or i32 %242, %4
  %395 = and i32 %196, %281
  %396 = xor i32 %205, %5
  %397 = and i32 %196, %205
  %398 = add i32 %5, 1
  %399 = xor i32 %226, %199
  %400 = or i32 %185, %208
  %401 = and i32 %196, %190
  %402 = or i32 %208, %190
  %403 = and i32 %185, %13
  %404 = or i32 %199, %5
  %405 = or i32 %203, %5
  %406 = shl i32 %405, 1
  %407 = and i32 %14, %185
  %408 = or i32 %177, %203
  %409 = or i32 %177, %181
  %410 = add i32 %14, 1
  %411 = or i32 %187, %242
  %412 = and i32 %177, %202
  %413 = xor i32 %203, %5
  %414 = or i32 %226, %176
  %415 = and i32 %207, %185
  %416 = or i32 %182, %4
  %417 = and i32 %196, %202
  %418 = and i32 %237, %12
  %419 = xor i32 %233, %5
  %420 = xor i32 %187, %202
  %421 = and i32 %217, %281
  %422 = and i32 %257, %3
  %423 = or i32 %185, %197
  %424 = xor i32 %257, %3
  %425 = or i32 %244, %190
  %426 = xor i32 %193, %229
  %427 = xor i32 %187, %183
  %428 = or i32 %181, %5
  %429 = xor i32 %236, %226
  %430 = or i32 %197, %3
  %431 = or i32 %217, %233
  %432 = or i32 %196, %199
  %433 = and i32 %196, %3
  %434 = shl i32 %433, 1
  %435 = or i32 %13, %203
  %436 = or i32 %174, %181
  %437 = and i32 %190, %5
  %438 = or i32 %210, %4
  %439 = and i32 %217, %205
  %440 = xor i32 %214, %199
  %441 = xor i32 %226, %4
  %442 = or i32 %301, %250
  %443 = and i32 %205, %5
  %444 = and i32 %183, %176
  %445 = and i32 %202, %197
  %446 = or i32 %175, %291
  %447 = xor i32 %207, %3
  %448 = or i32 %247, %4
  %449 = xor i32 %202, %5
  %450 = or i32 %196, %185
  %451 = add i32 %214, 1
  %452 = and i32 %197, %205
  %453 = xor i32 %14, %3
  %454 = add i32 %185, 1
  %455 = xor i32 %187, %214
  %456 = or i32 %181, %13
  %457 = or i32 %236, %185
  %458 = add i32 %4, 1
  %459 = xor i32 %236, %210
  %460 = shl i32 %459, 1
  %461 = and i32 %242, %176
  %462 = mul i32 %461, 19
  %463 = and i32 %182, %176
  %464 = and i32 %242, %4
  %465 = and i32 %182, %4
  %466 = mul i32 %465, -6
  %467 = and i32 %247, %176
  %468 = shl i32 %467, 2
  %469 = mul i32 %301, 11
  %470 = and i32 %247, %4
  %471 = sub i32 %70, %173
  %472 = sub i32 %471, %169
  %473 = add i32 %472, %105
  %474 = sub i32 %473, %456
  %475 = add i32 %474, %392
  %476 = sub i32 %475, %343
  %477 = sub i32 %476, %393
  %478 = add i32 %477, %278
  %479 = add i32 %478, %235
  %480 = mul i32 %479, 5
  %481 = add i32 %159, %12
  %482 = sub i32 %481, %85
  %483 = add i32 %482, %98
  %484 = add i32 %483, %409
  %485 = add i32 %484, %464
  %486 = add i32 %485, %366
  %487 = sub i32 %486, %342
  %488 = add i32 %487, %285
  %489 = sub i32 %488, %283
  %490 = mul i32 %489, 3
  %491 = sub i32 %470, %166
  %492 = mul i32 %491, 13
  %493 = add i32 %277, %39
  %494 = shl i32 %493, 2
  %495 = sub i32 -2, %2
  %496 = add i32 %495, %127
  %497 = add i32 %496, %69
  %498 = add i32 %497, %58
  %499 = add i32 %498, %128
  %500 = add i32 %499, %111
  %501 = add i32 %500, %97
  %502 = add i32 %501, %61
  %503 = add i32 %502, %203
  %504 = add i32 %503, %137
  %505 = add i32 %504, %182
  %506 = add i32 %505, %337
  %507 = add i32 %506, %143
  %508 = add i32 %507, %175
  %509 = add i32 %508, %463
  %510 = add i32 %509, %457
  %511 = add i32 %510, %440
  %512 = add i32 %511, %430
  %513 = add i32 %512, %422
  %514 = add i32 %513, %417
  %515 = add i32 %514, %416
  %516 = add i32 %515, %402
  %517 = add i32 %516, %378
  %518 = add i32 %517, %306
  %519 = add i32 %518, %284
  %520 = add i32 %519, %221
  %521 = add i32 %520, %260
  %522 = add i32 %521, %251
  %523 = add i32 %522, %204
  %524 = add i32 %523, %195
  %525 = add i32 %524, %360
  %526 = shl i32 %525, 1
  %527 = add i32 %1, %0
  %528 = sub i32 %144, %527
  %529 = sub i32 %528, %2
  %530 = sub i32 %529, %59
  %531 = add i32 %530, %20
  %532 = sub i32 %531, %62
  %533 = add i32 %532, %76
  %534 = add i32 %533, %78
  %535 = sub i32 %534, %101
  %536 = sub i32 %535, %92
  %537 = add i32 %536, 1
  %538 = sub i32 %537, %133
  %539 = sub i32 %538, %140
  %540 = add i32 %539, %145
  %541 = add i32 %540, %149
  %542 = add i32 %541, %151
  %543 = sub i32 %542, %164
  %544 = sub i32 %543, %3
  %545 = sub i32 %544, %19
  %546 = add i32 %545, %22
  %547 = sub i32 %546, %36
  %548 = sub i32 %547, %38
  %549 = sub i32 %548, %46
  %550 = sub i32 %549, %47
  %551 = sub i32 %550, %48
  %552 = sub i32 %551, %51
  %553 = sub i32 %552, %53
  %554 = add i32 %553, %55
  %555 = sub i32 %554, %57
  %556 = add i32 %555, %63
  %557 = add i32 %556, %64
  %558 = add i32 %557, %65
  %559 = sub i32 %558, %66
  %560 = add i32 %559, %67
  %561 = sub i32 %560, %71
  %562 = add i32 %561, %73
  %563 = sub i32 %562, %75
  %564 = add i32 %563, %80
  %565 = add i32 %564, %86
  %566 = sub i32 %565, %87
  %567 = sub i32 %566, %89
  %568 = sub i32 %567, %90
  %569 = sub i32 %568, %91
  %570 = add i32 %569, %93
  %571 = add i32 %570, %96
  %572 = add i32 %571, %102
  %573 = add i32 %572, %103
  %574 = add i32 %573, %104
  %575 = sub i32 %574, %106
  %576 = sub i32 %575, %107
  %577 = sub i32 %576, %108
  %578 = add i32 %577, %109
  %579 = sub i32 %578, %110
  %580 = add i32 %579, %112
  %581 = sub i32 %580, %113
  %582 = sub i32 %581, %114
  %583 = add i32 %582, %115
  %584 = add i32 %583, %116
  %585 = add i32 %584, %119
  %586 = add i32 %585, %120
  %587 = sub i32 %586, %121
  %588 = add i32 %587, %122
  %589 = add i32 %588, %123
  %590 = sub i32 %589, %124
  %591 = sub i32 %590, %125
  %592 = sub i32 %591, %126
  %593 = sub i32 %592, %27
  %594 = sub i32 %593, %129
  %595 = sub i32 %594, %130
  %596 = add i32 %595, %134
  %597 = add i32 %596, %138
  %598 = add i32 %597, %139
  %599 = sub i32 %598, %146
  %600 = add i32 %599, %147
  %601 = add i32 %600, %150
  %602 = add i32 %601, %152
  %603 = add i32 %602, %153
  %604 = sub i32 %603, %160
  %605 = sub i32 %604, %163
  %606 = add i32 %605, %165
  %607 = add i32 %606, %31
  %608 = add i32 %607, %4
  %609 = add i32 %608, %458
  %610 = add i32 %609, %29
  %611 = sub i32 %610, %34
  %612 = sub i32 %611, %42
  %613 = sub i32 %612, %45
  %614 = sub i32 %613, %82
  %615 = sub i32 %614, %95
  %616 = sub i32 %615, %100
  %617 = sub i32 %616, %118
  %618 = sub i32 %617, %132
  %619 = add i32 %618, %156
  %620 = sub i32 %619, %158
  %621 = sub i32 %620, %162
  %622 = sub i32 %621, %168
  %623 = add i32 %622, %171
  %624 = sub i32 %623, %172
  %625 = sub i32 %624, %5
  %626 = add i32 %625, %206
  %627 = add i32 %626, %185
  %628 = sub i32 %627, %181
  %629 = add i32 %628, %202
  %630 = add i32 %629, %357
  %631 = add i32 %630, %233
  %632 = add i32 %631, %398
  %633 = add i32 %632, %199
  %634 = add i32 %633, %454
  %635 = sub i32 %634, %186
  %636 = add i32 %635, %191
  %637 = add i32 %636, %228
  %638 = add i32 %637, %177
  %639 = sub i32 %638, %263
  %640 = add i32 %639, %187
  %641 = sub i32 %640, %269
  %642 = sub i32 %641, %14
  %643 = sub i32 %642, %288
  %644 = add i32 %643, %290
  %645 = add i32 %644, %297
  %646 = add i32 %645, %298
  %647 = sub i32 %646, %300
  %648 = sub i32 %647, %305
  %649 = sub i32 %648, %214
  %650 = sub i32 %649, %320
  %651 = add i32 %650, %183
  %652 = sub i32 %651, %226
  %653 = add i32 %652, %207
  %654 = add i32 %653, %236
  %655 = add i32 %654, %370
  %656 = sub i32 %655, %371
  %657 = sub i32 %656, %373
  %658 = sub i32 %657, %379
  %659 = add i32 %658, %380
  %660 = sub i32 %659, %383
  %661 = add i32 %660, %386
  %662 = add i32 %661, %396
  %663 = add i32 %662, %403
  %664 = add i32 %663, %404
  %665 = add i32 %664, %410
  %666 = add i32 %665, %413
  %667 = sub i32 %666, %419
  %668 = sub i32 %667, %428
  %669 = add i32 %668, %435
  %670 = sub i32 %669, %437
  %671 = sub i32 %670, %443
  %672 = add i32 %671, %449
  %673 = add i32 %672, %451
  %674 = add i32 %673, %184
  %675 = add i32 %674, %198
  %676 = add i32 %675, %209
  %677 = add i32 %676, %211
  %678 = add i32 %677, %215
  %679 = add i32 %678, %227
  %680 = sub i32 %679, %231
  %681 = sub i32 %680, %232
  %682 = add i32 %681, %234
  %683 = add i32 %682, %238
  %684 = sub i32 %683, %243
  %685 = add i32 %684, %250
  %686 = add i32 %685, %252
  %687 = sub i32 %686, %253
  %688 = add i32 %687, %256
  %689 = sub i32 %688, %261
  %690 = sub i32 %689, %262
  %691 = add i32 %690, %264
  %692 = sub i32 %691, %267
  %693 = sub i32 %692, %268
  %694 = add i32 %693, %273
  %695 = sub i32 %694, %274
  %696 = sub i32 %695, %275
  %697 = sub i32 %696, %276
  %698 = sub i32 %697, %279
  %699 = sub i32 %698, %280
  %700 = sub i32 %699, %282
  %701 = add i32 %700, %286
  %702 = sub i32 %701, %289
  %703 = add i32 %702, %293
  %704 = add i32 %703, %294
  %705 = add i32 %704, %299
  %706 = add i32 %705, %304
  %707 = sub i32 %706, %308
  %708 = sub i32 %707, %309
  %709 = add i32 %708, %310
  %710 = add i32 %709, %313
  %711 = add i32 %710, %314
  %712 = add i32 %711, %315
  %713 = sub i32 %712, %316
  %714 = add i32 %713, %323
  %715 = add i32 %714, %325
  %716 = sub i32 %715, %326
  %717 = add i32 %716, %327
  %718 = sub i32 %717, %328
  %719 = sub i32 %718, %330
  %720 = add i32 %719, %332
  %721 = sub i32 %720, %333
  %722 = sub i32 %721, %334
  %723 = sub i32 %722, %336
  %724 = sub i32 %723, %338
  %725 = add i32 %724, %339
  %726 = add i32 %725, %340
  %727 = sub i32 %726, %341
  %728 = add i32 %727, %344
  %729 = sub i32 %728, %345
  %730 = add i32 %729, %346
  %731 = sub i32 %730, %347
  %732 = sub i32 %731, %351
  %733 = sub i32 %732, %352
  %734 = add i32 %733, %358
  %735 = sub i32 %734, %359
  %736 = sub i32 %735, %361
  %737 = add i32 %736, %362
  %738 = sub i32 %737, %363
  %739 = add i32 %738, %367
  %740 = sub i32 %739, %368
  %741 = add i32 %740, %369
  %742 = sub i32 %741, %374
  %743 = add i32 %742, %375
  %744 = sub i32 %743, %376
  %745 = add i32 %744, %377
  %746 = sub i32 %745, %270
  %747 = add i32 %746, %381
  %748 = sub i32 %747, %382
  %749 = sub i32 %748, %384
  %750 = add i32 %749, %385
  %751 = add i32 %750, %391
  %752 = sub i32 %751, %394
  %753 = sub i32 %752, %395
  %754 = add i32 %753, %397
  %755 = add i32 %754, %291
  %756 = add i32 %755, %399
  %757 = add i32 %756, %400
  %758 = sub i32 %757, %401
  %759 = sub i32 %758, %406
  %760 = sub i32 %759, %407
  %761 = sub i32 %760, %408
  %762 = add i32 %761, %411
  %763 = add i32 %762, %412
  %764 = sub i32 %763, %414
  %765 = sub i32 %764, %415
  %766 = add i32 %765, %178
  %767 = sub i32 %766, %418
  %768 = sub i32 %767, %420
  %769 = sub i32 %768, %421
  %770 = sub i32 %769, %423
  %771 = add i32 %770, %424
  %772 = add i32 %771, %425
  %773 = sub i32 %772, %427
  %774 = sub i32 %773, %429
  %775 = sub i32 %774, %431
  %776 = add i32 %775, %432
  %777 = sub i32 %776, %436
  %778 = add i32 %777, %438
  %779 = add i32 %778, %439
  %780 = sub i32 %779, %441
  %781 = add i32 %780, %194
  %782 = sub i32 %781, %444
  %783 = sub i32 %782, %445
  %784 = add i32 %783, %447
  %785 = sub i32 %784, %448
  %786 = sub i32 %785, %450
  %787 = add i32 %786, %452
  %788 = sub i32 %787, %453
  %789 = add i32 %788, %455
  %790 = sub i32 %789, %189
  %791 = sub i32 %790, %201
  %792 = sub i32 %791, %213
  %793 = sub i32 %792, %219
  %794 = add i32 %793, %222
  %795 = sub i32 %794, %224
  %796 = add i32 %795, %225
  %797 = add i32 %796, %230
  %798 = sub i32 %797, %241
  %799 = sub i32 %798, %246
  %800 = sub i32 %799, %249
  %801 = sub i32 %800, %255
  %802 = sub i32 %801, %259
  %803 = sub i32 %802, %266
  %804 = sub i32 %803, %272
  %805 = add i32 %804, %287
  %806 = add i32 %805, %292
  %807 = add i32 %806, %296
  %808 = sub i32 %807, %303
  %809 = add i32 %808, %312
  %810 = add i32 %809, %317
  %811 = sub i32 %810, %319
  %812 = sub i32 %811, %322
  %813 = sub i32 %812, %324
  %814 = add i32 %813, %331
  %815 = sub i32 %814, %365
  %816 = add i32 %815, %372
  %817 = sub i32 %816, %388
  %818 = sub i32 %817, %390
  %819 = add i32 %818, %426
  %820 = sub i32 %819, %434
  %821 = add i32 %820, %442
  %822 = add i32 %821, %446
  %823 = sub i32 %822, %460
  %824 = add i32 %823, %462
  %825 = add i32 %824, %466
  %826 = sub i32 %825, %468
  %827 = add i32 %826, %469
  %828 = sub i32 %827, %180
  %829 = add i32 %828, %492
  %830 = add i32 %829, %494
  %831 = sub i32 %830, %350
  %832 = sub i32 %831, %356
  %833 = add i32 %832, %480
  %834 = add i32 %833, %490
  %835 = add i32 %834, %526
  %836 = icmp eq i32 %16, %835
  %837 = select i1 %836, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %838 = tail call i32 @puts(i8* nonnull dereferenceable(1) %837)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
