digraph "DFG for'main' function" {
	Node0x2486e68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2486ee8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2486f78[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x24873d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24874b8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x24875d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2487810[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x24878c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2488838[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2488ec0[shape=record, label="  %8 = sub i32 0, %6"];
	Node0x2488f30[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x2488fa0[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x2489010[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x2489080[shape=record, label="  %12 = or i32 %6, %9"];
	Node0x24890f0[shape=record, label="  %13 = shl i32 %6, 1"];
	Node0x2489160[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x24891d0[shape=record, label="  %15 = xor i32 %11, -1"];
	Node0x2489240[shape=record, label="  %16 = shl i32 %9, 1"];
	Node0x24892b0[shape=record, label="  %17 = xor i32 %6, -1"];
	Node0x2489320[shape=record, label="  %18 = or i32 %7, %17"];
	Node0x2489390[shape=record, label="  %19 = shl i32 %10, 1"];
	Node0x2489400[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x2489470[shape=record, label="  %21 = xor i32 %12, -1"];
	Node0x24894e0[shape=record, label="  %22 = mul i32 %6, -3"];
	Node0x2489550[shape=record, label="  %23 = add i32 %22, %9"];
	Node0x24895c0[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x2489630[shape=record, label="  %25 = sub i32 %24, %11"];
	Node0x24896a0[shape=record, label="  %26 = sub i32 %25, %12"];
	Node0x2489710[shape=record, label="  %27 = sub i32 %26, %14"];
	Node0x2489780[shape=record, label="  %28 = add i32 %27, %15"];
	Node0x24897f0[shape=record, label="  %29 = add i32 %28, %16"];
	Node0x2489860[shape=record, label="  %30 = add i32 %29, %18"];
	Node0x24898d0[shape=record, label="  %31 = add i32 %30, %21"];
	Node0x2489940[shape=record, label="  %32 = sub i32 %31, %20"];
	Node0x2489bc0[shape=record, label="  %33 = icmp eq i32 %32, %8"];
	Node0x24279d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2489c50[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x2489ea8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x248a008[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x248a0c8[shape=record, label="  ret i32 0"];
	Node0x2486e68 -> Node0x2486ee8;
	Node0x2486ee8 -> Node0x2486f78;
	Node0x2486f78 -> Node0x24873d8;
	Node0x24873d8 -> Node0x24874b8;
	Node0x24874b8 -> Node0x24875d8;
	Node0x24875d8 -> Node0x2487810;
	Node0x2487810 -> Node0x24878c8;
	Node0x24878c8 -> Node0x2488838;
	Node0x2488838 -> Node0x2488ec0;
	Node0x2488ec0 -> Node0x2488f30;
	Node0x2488f30 -> Node0x2488fa0;
	Node0x2488fa0 -> Node0x2489010;
	Node0x2489010 -> Node0x2489080;
	Node0x2489080 -> Node0x24890f0;
	Node0x24890f0 -> Node0x2489160;
	Node0x2489160 -> Node0x24891d0;
	Node0x24891d0 -> Node0x2489240;
	Node0x2489240 -> Node0x24892b0;
	Node0x24892b0 -> Node0x2489320;
	Node0x2489320 -> Node0x2489390;
	Node0x2489390 -> Node0x2489400;
	Node0x2489400 -> Node0x2489470;
	Node0x2489470 -> Node0x24894e0;
	Node0x24894e0 -> Node0x2489550;
	Node0x2489550 -> Node0x24895c0;
	Node0x24895c0 -> Node0x2489630;
	Node0x2489630 -> Node0x24896a0;
	Node0x24896a0 -> Node0x2489710;
	Node0x2489710 -> Node0x2489780;
	Node0x2489780 -> Node0x24897f0;
	Node0x24897f0 -> Node0x2489860;
	Node0x2489860 -> Node0x24898d0;
	Node0x24898d0 -> Node0x2489940;
	Node0x2489940 -> Node0x2489bc0;
	Node0x2489bc0 -> Node0x24279d8;
	Node0x24279d8 -> Node0x2489c50;
	Node0x2489c50 -> Node0x2489ea8;
	Node0x2489ea8 -> Node0x248a008;
	Node0x248a008 -> Node0x248a0c8;
edge [color=red]
	Node0x2486e68 -> Node0x2486f78;
	Node0x2486f78 -> Node0x24873d8;
	Node0x2486ee8 -> Node0x24874b8;
	Node0x24874b8 -> Node0x24875d8;
	Node0x2486e68 -> Node0x2487810;
	Node0x2486ee8 -> Node0x2487810;
	Node0x2486e68 -> Node0x24878c8;
	Node0x2486ee8 -> Node0x2488838;
	Node0x24878c8 -> Node0x2488ec0;
	Node0x2488838 -> Node0x2488f30;
	Node0x2488838 -> Node0x2488fa0;
	Node0x24878c8 -> Node0x2488fa0;
	Node0x2488838 -> Node0x2489010;
	Node0x24878c8 -> Node0x2489010;
	Node0x24878c8 -> Node0x2489080;
	Node0x2488f30 -> Node0x2489080;
	Node0x24878c8 -> Node0x24890f0;
	Node0x24890f0 -> Node0x2489160;
	Node0x2489010 -> Node0x24891d0;
	Node0x2488f30 -> Node0x2489240;
	Node0x24878c8 -> Node0x24892b0;
	Node0x2488838 -> Node0x2489320;
	Node0x24892b0 -> Node0x2489320;
	Node0x2488fa0 -> Node0x2489390;
	Node0x2489390 -> Node0x2489400;
	Node0x2489080 -> Node0x2489470;
	Node0x24878c8 -> Node0x24894e0;
	Node0x24894e0 -> Node0x2489550;
	Node0x2488f30 -> Node0x2489550;
	Node0x2489550 -> Node0x24895c0;
	Node0x2488fa0 -> Node0x24895c0;
	Node0x24895c0 -> Node0x2489630;
	Node0x2489010 -> Node0x2489630;
	Node0x2489630 -> Node0x24896a0;
	Node0x2489080 -> Node0x24896a0;
	Node0x24896a0 -> Node0x2489710;
	Node0x2489160 -> Node0x2489710;
	Node0x2489710 -> Node0x2489780;
	Node0x24891d0 -> Node0x2489780;
	Node0x2489780 -> Node0x24897f0;
	Node0x2489240 -> Node0x24897f0;
	Node0x24897f0 -> Node0x2489860;
	Node0x2489320 -> Node0x2489860;
	Node0x2489860 -> Node0x24898d0;
	Node0x2489470 -> Node0x24898d0;
	Node0x24898d0 -> Node0x2489940;
	Node0x2489400 -> Node0x2489940;
	Node0x2489940 -> Node0x2489bc0;
	Node0x2488ec0 -> Node0x2489bc0;
	Node0x2489bc0 -> Node0x24279d8;
	Node0x24279d8 -> Node0x2489c50;
	Node0x24874b8 -> Node0x2489ea8;
	Node0x2486f78 -> Node0x248a008;
}
