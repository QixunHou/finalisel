digraph "DFG for'main' function" {
	Node0x21bd638[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21bd6b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21bd748[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x21bd7a8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x21bdc28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21bdd08[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x21bde08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21bdec8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x21bdf78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21be1d8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x21be298[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21be3f8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21be458[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x21c0be0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x21c0de8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21c0f48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21c1058[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21c1118[shape=record, label="  ret i32 0"];
	Node0x21bd638 -> Node0x21bd6b8;
	Node0x21bd6b8 -> Node0x21bd748;
	Node0x21bd748 -> Node0x21bd7a8;
	Node0x21bd7a8 -> Node0x21bdc28;
	Node0x21bdc28 -> Node0x21bdd08;
	Node0x21bdd08 -> Node0x21bde08;
	Node0x21bde08 -> Node0x21bdec8;
	Node0x21bdec8 -> Node0x21bdf78;
	Node0x21bdf78 -> Node0x21be1d8;
	Node0x21be1d8 -> Node0x21be298;
	Node0x21be298 -> Node0x21be3f8;
	Node0x21be3f8 -> Node0x21be458;
	Node0x21be458 -> Node0x21c0be0;
	Node0x21c0be0 -> Node0x21c0de8;
	Node0x21c0de8 -> Node0x21c0f48;
	Node0x21c0f48 -> Node0x21c1058;
	Node0x21c1058 -> Node0x21c1118;
edge [color=red]
	Node0x21bd638 -> Node0x21bd7a8;
	Node0x21bd7a8 -> Node0x21bdc28;
	Node0x21bd6b8 -> Node0x21bdd08;
	Node0x21bdd08 -> Node0x21bde08;
	Node0x21bd748 -> Node0x21bdec8;
	Node0x21bdec8 -> Node0x21bdf78;
	Node0x21bd638 -> Node0x21be1d8;
	Node0x21bd6b8 -> Node0x21be1d8;
	Node0x21bd748 -> Node0x21be1d8;
	Node0x21bd638 -> Node0x21be298;
	Node0x21bd6b8 -> Node0x21be3f8;
	Node0x21bd748 -> Node0x21be458;
	Node0x21be298 -> Node0x21c0be0;
	Node0x21be3f8 -> Node0x21c0be0;
	Node0x21be458 -> Node0x21c0be0;
	Node0x21bdec8 -> Node0x21c0de8;
	Node0x21bdd08 -> Node0x21c0f48;
	Node0x21bd7a8 -> Node0x21c1058;
}
