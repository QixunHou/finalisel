digraph "DFG for'main' function" {
	Node0x12be598[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12be618[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x12be6a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x12be708[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x12beb88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12bec68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x12bed68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12bee28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x12beed8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12bf138[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x12bf1f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12bf358[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x12bf3b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x12c1980[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x12c1b88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12c1ce8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12c1df8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12c1eb8[shape=record, label="  ret i32 0"];
	Node0x12be598 -> Node0x12be618;
	Node0x12be618 -> Node0x12be6a8;
	Node0x12be6a8 -> Node0x12be708;
	Node0x12be708 -> Node0x12beb88;
	Node0x12beb88 -> Node0x12bec68;
	Node0x12bec68 -> Node0x12bed68;
	Node0x12bed68 -> Node0x12bee28;
	Node0x12bee28 -> Node0x12beed8;
	Node0x12beed8 -> Node0x12bf138;
	Node0x12bf138 -> Node0x12bf1f8;
	Node0x12bf1f8 -> Node0x12bf358;
	Node0x12bf358 -> Node0x12bf3b8;
	Node0x12bf3b8 -> Node0x12c1980;
	Node0x12c1980 -> Node0x12c1b88;
	Node0x12c1b88 -> Node0x12c1ce8;
	Node0x12c1ce8 -> Node0x12c1df8;
	Node0x12c1df8 -> Node0x12c1eb8;
edge [color=red]
	Node0x12be598 -> Node0x12be708;
	Node0x12be708 -> Node0x12beb88;
	Node0x12be618 -> Node0x12bec68;
	Node0x12bec68 -> Node0x12bed68;
	Node0x12be6a8 -> Node0x12bee28;
	Node0x12bee28 -> Node0x12beed8;
	Node0x12be598 -> Node0x12bf138;
	Node0x12be618 -> Node0x12bf138;
	Node0x12be6a8 -> Node0x12bf138;
	Node0x12be598 -> Node0x12bf1f8;
	Node0x12be618 -> Node0x12bf358;
	Node0x12be6a8 -> Node0x12bf3b8;
	Node0x12bf1f8 -> Node0x12c1980;
	Node0x12bf358 -> Node0x12c1980;
	Node0x12bf3b8 -> Node0x12c1980;
	Node0x12bee28 -> Node0x12c1b88;
	Node0x12bec68 -> Node0x12c1ce8;
	Node0x12be708 -> Node0x12c1df8;
}
