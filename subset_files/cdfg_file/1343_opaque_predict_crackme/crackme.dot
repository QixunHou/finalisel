digraph "DFG for'crackme' function" {
	Node0x18e9e10[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x18e9e80[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x18e9ef0[shape=record, label="  %7 = or i32 %3, %0"];
	Node0x18e9f60[shape=record, label="  %8 = sub i32 %7, %6"];
	Node0x18ea000[shape=record, label="  %9 = shl i32 %1, 2"];
	Node0x18ea0a0[shape=record, label="  %10 = add i32 %9, -2"];
	Node0x18ea110[shape=record, label="  %11 = and i32 %5, %1"];
	Node0x18ea1b0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x18ea220[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x18ea290[shape=record, label="  %14 = sub i32 %10, %13"];
	Node0x18ea300[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x18ea370[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x18ea3e0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x18ea450[shape=record, label="  %18 = sub i32 %14, %17"];
	Node0x18ea4c0[shape=record, label="  %19 = or i32 %18, 1"];
	Node0x18ea530[shape=record, label="  %20 = shl i32 %2, 1"];
	Node0x18ea5a0[shape=record, label="  %21 = xor i32 %2, %1"];
	Node0x18ea610[shape=record, label="  %22 = or i32 %2, %1"];
	Node0x18ea680[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x18ea6f0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x18ea760[shape=record, label="  %25 = xor i32 %6, -1"];
	Node0x18ea800[shape=record, label="  %26 = mul i32 %25, 5"];
	Node0x18ea8a0[shape=record, label="  %27 = mul i32 %11, -6"];
	Node0x18ea910[shape=record, label="  %28 = xor i32 %3, %0"];
	Node0x18ea980[shape=record, label="  %29 = and i32 %3, %0"];
	Node0x18ea9f0[shape=record, label="  %30 = xor i32 %29, -1"];
	Node0x18eaa60[shape=record, label="  %31 = xor i32 %0, -1"];
	Node0x18eaad0[shape=record, label="  %32 = and i32 %31, %3"];
	Node0x18ead50[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0x18eadc0[shape=record, label="  %34 = shl i32 %3, 1"];
	Node0x18eae30[shape=record, label="  %35 = or i32 %31, %3"];
	Node0x18eaea0[shape=record, label="  %36 = xor i32 %35, -1"];
	Node0x18eaf40[shape=record, label="  %37 = mul i32 %36, -3"];
	Node0x18eafb0[shape=record, label="  %38 = shl i32 %29, 2"];
	Node0x18eb020[shape=record, label="  %39 = add i32 %28, %32"];
	Node0x18eb090[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x18eb100[shape=record, label="  %41 = add i32 %1, 2"];
	Node0x18eb170[shape=record, label="  %42 = add i32 %41, %5"];
	Node0x18eb1e0[shape=record, label="  %43 = sub i32 %42, %20"];
	Node0x18eb250[shape=record, label="  %44 = add i32 %43, %21"];
	Node0x18eb2c0[shape=record, label="  %45 = sub i32 %44, %3"];
	Node0x18eb330[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x18eb3a0[shape=record, label="  %47 = add i32 %46, %27"];
	Node0x18eb410[shape=record, label="  %48 = sub i32 %47, %16"];
	Node0x18eb480[shape=record, label="  %49 = add i32 %48, %30"];
	Node0x18eb4f0[shape=record, label="  %50 = add i32 %49, %33"];
	Node0x18eb560[shape=record, label="  %51 = sub i32 %50, %34"];
	Node0x18eb5d0[shape=record, label="  %52 = sub i32 %51, %35"];
	Node0x18eb640[shape=record, label="  %53 = add i32 %52, %7"];
	Node0x18eb6b0[shape=record, label="  %54 = add i32 %53, %24"];
	Node0x18eb720[shape=record, label="  %55 = add i32 %54, %37"];
	Node0x18eb790[shape=record, label="  %56 = add i32 %55, %38"];
	Node0x18eb800[shape=record, label="  %57 = add i32 %56, %40"];
	Node0x18eb870[shape=record, label="  %58 = add i32 %57, %19"];
	Node0x18eb8e0[shape=record, label="  %59 = icmp eq i32 %8, %58"];
	Node0x188a268[shape=record, label="  %60 = select i1 %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18ebd80[shape=record, label="  %61 = tail call i32 @puts(i8* nonnull dereferenceable(1) %60)"];
	Node0x18ebdd0[shape=record, label="  ret void"];
	Node0x18e9e10 -> Node0x18e9e80;
	Node0x18e9e80 -> Node0x18e9ef0;
	Node0x18e9ef0 -> Node0x18e9f60;
	Node0x18e9f60 -> Node0x18ea000;
	Node0x18ea000 -> Node0x18ea0a0;
	Node0x18ea0a0 -> Node0x18ea110;
	Node0x18ea110 -> Node0x18ea1b0;
	Node0x18ea1b0 -> Node0x18ea220;
	Node0x18ea220 -> Node0x18ea290;
	Node0x18ea290 -> Node0x18ea300;
	Node0x18ea300 -> Node0x18ea370;
	Node0x18ea370 -> Node0x18ea3e0;
	Node0x18ea3e0 -> Node0x18ea450;
	Node0x18ea450 -> Node0x18ea4c0;
	Node0x18ea4c0 -> Node0x18ea530;
	Node0x18ea530 -> Node0x18ea5a0;
	Node0x18ea5a0 -> Node0x18ea610;
	Node0x18ea610 -> Node0x18ea680;
	Node0x18ea680 -> Node0x18ea6f0;
	Node0x18ea6f0 -> Node0x18ea760;
	Node0x18ea760 -> Node0x18ea800;
	Node0x18ea800 -> Node0x18ea8a0;
	Node0x18ea8a0 -> Node0x18ea910;
	Node0x18ea910 -> Node0x18ea980;
	Node0x18ea980 -> Node0x18ea9f0;
	Node0x18ea9f0 -> Node0x18eaa60;
	Node0x18eaa60 -> Node0x18eaad0;
	Node0x18eaad0 -> Node0x18ead50;
	Node0x18ead50 -> Node0x18eadc0;
	Node0x18eadc0 -> Node0x18eae30;
	Node0x18eae30 -> Node0x18eaea0;
	Node0x18eaea0 -> Node0x18eaf40;
	Node0x18eaf40 -> Node0x18eafb0;
	Node0x18eafb0 -> Node0x18eb020;
	Node0x18eb020 -> Node0x18eb090;
	Node0x18eb090 -> Node0x18eb100;
	Node0x18eb100 -> Node0x18eb170;
	Node0x18eb170 -> Node0x18eb1e0;
	Node0x18eb1e0 -> Node0x18eb250;
	Node0x18eb250 -> Node0x18eb2c0;
	Node0x18eb2c0 -> Node0x18eb330;
	Node0x18eb330 -> Node0x18eb3a0;
	Node0x18eb3a0 -> Node0x18eb410;
	Node0x18eb410 -> Node0x18eb480;
	Node0x18eb480 -> Node0x18eb4f0;
	Node0x18eb4f0 -> Node0x18eb560;
	Node0x18eb560 -> Node0x18eb5d0;
	Node0x18eb5d0 -> Node0x18eb640;
	Node0x18eb640 -> Node0x18eb6b0;
	Node0x18eb6b0 -> Node0x18eb720;
	Node0x18eb720 -> Node0x18eb790;
	Node0x18eb790 -> Node0x18eb800;
	Node0x18eb800 -> Node0x18eb870;
	Node0x18eb870 -> Node0x18eb8e0;
	Node0x18eb8e0 -> Node0x188a268;
	Node0x188a268 -> Node0x18ebd80;
	Node0x18ebd80 -> Node0x18ebdd0;
edge [color=red]
	Node0x18e9e10 -> Node0x18e9e80;
	Node0x18e9ef0 -> Node0x18e9f60;
	Node0x18e9e80 -> Node0x18e9f60;
	Node0x18ea000 -> Node0x18ea0a0;
	Node0x18e9e10 -> Node0x18ea110;
	Node0x18ea110 -> Node0x18ea1b0;
	Node0x18ea1b0 -> Node0x18ea220;
	Node0x18ea0a0 -> Node0x18ea290;
	Node0x18ea220 -> Node0x18ea290;
	Node0x18ea300 -> Node0x18ea370;
	Node0x18ea370 -> Node0x18ea3e0;
	Node0x18ea290 -> Node0x18ea450;
	Node0x18ea3e0 -> Node0x18ea450;
	Node0x18ea450 -> Node0x18ea4c0;
	Node0x18ea610 -> Node0x18ea680;
	Node0x18ea680 -> Node0x18ea6f0;
	Node0x18e9e80 -> Node0x18ea760;
	Node0x18ea760 -> Node0x18ea800;
	Node0x18ea110 -> Node0x18ea8a0;
	Node0x18ea980 -> Node0x18ea9f0;
	Node0x18eaa60 -> Node0x18eaad0;
	Node0x18eaad0 -> Node0x18ead50;
	Node0x18eaa60 -> Node0x18eae30;
	Node0x18eae30 -> Node0x18eaea0;
	Node0x18eaea0 -> Node0x18eaf40;
	Node0x18ea980 -> Node0x18eafb0;
	Node0x18ea910 -> Node0x18eb020;
	Node0x18eaad0 -> Node0x18eb020;
	Node0x18eb020 -> Node0x18eb090;
	Node0x18eb100 -> Node0x18eb170;
	Node0x18e9e10 -> Node0x18eb170;
	Node0x18eb170 -> Node0x18eb1e0;
	Node0x18ea530 -> Node0x18eb1e0;
	Node0x18eb1e0 -> Node0x18eb250;
	Node0x18ea5a0 -> Node0x18eb250;
	Node0x18eb250 -> Node0x18eb2c0;
	Node0x18eb2c0 -> Node0x18eb330;
	Node0x18ea800 -> Node0x18eb330;
	Node0x18eb330 -> Node0x18eb3a0;
	Node0x18ea8a0 -> Node0x18eb3a0;
	Node0x18eb3a0 -> Node0x18eb410;
	Node0x18ea370 -> Node0x18eb410;
	Node0x18eb410 -> Node0x18eb480;
	Node0x18ea9f0 -> Node0x18eb480;
	Node0x18eb480 -> Node0x18eb4f0;
	Node0x18ead50 -> Node0x18eb4f0;
	Node0x18eb4f0 -> Node0x18eb560;
	Node0x18eadc0 -> Node0x18eb560;
	Node0x18eb560 -> Node0x18eb5d0;
	Node0x18eae30 -> Node0x18eb5d0;
	Node0x18eb5d0 -> Node0x18eb640;
	Node0x18e9ef0 -> Node0x18eb640;
	Node0x18eb640 -> Node0x18eb6b0;
	Node0x18ea6f0 -> Node0x18eb6b0;
	Node0x18eb6b0 -> Node0x18eb720;
	Node0x18eaf40 -> Node0x18eb720;
	Node0x18eb720 -> Node0x18eb790;
	Node0x18eafb0 -> Node0x18eb790;
	Node0x18eb790 -> Node0x18eb800;
	Node0x18eb090 -> Node0x18eb800;
	Node0x18eb800 -> Node0x18eb870;
	Node0x18ea4c0 -> Node0x18eb870;
	Node0x18e9f60 -> Node0x18eb8e0;
	Node0x18eb870 -> Node0x18eb8e0;
	Node0x18eb8e0 -> Node0x188a268;
	Node0x188a268 -> Node0x18ebd80;
}
