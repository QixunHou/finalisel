digraph "DFG for'main' function" {
	Node0x18ebf98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x18ec018[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x18ec0a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x18ec108[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x18ec1b8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x18ec5e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18ec6c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x18ec7c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18ec888[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x18ec938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x18ec9f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x18ecaa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x18e6830[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x18ecca8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18edc18[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x18ee288[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x18ee2e8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x18ee3f8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x18ee658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x18ee7b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x18ee8c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18ee9d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18eea98[shape=record, label="  ret i32 0"];
	Node0x18ebf98 -> Node0x18ec018;
	Node0x18ec018 -> Node0x18ec0a8;
	Node0x18ec0a8 -> Node0x18ec108;
	Node0x18ec108 -> Node0x18ec1b8;
	Node0x18ec1b8 -> Node0x18ec5e8;
	Node0x18ec5e8 -> Node0x18ec6c8;
	Node0x18ec6c8 -> Node0x18ec7c8;
	Node0x18ec7c8 -> Node0x18ec888;
	Node0x18ec888 -> Node0x18ec938;
	Node0x18ec938 -> Node0x18ec9f8;
	Node0x18ec9f8 -> Node0x18ecaa8;
	Node0x18ecaa8 -> Node0x18e6830;
	Node0x18e6830 -> Node0x18ecca8;
	Node0x18ecca8 -> Node0x18edc18;
	Node0x18edc18 -> Node0x18ee288;
	Node0x18ee288 -> Node0x18ee2e8;
	Node0x18ee2e8 -> Node0x18ee3f8;
	Node0x18ee3f8 -> Node0x18ee658;
	Node0x18ee658 -> Node0x18ee7b8;
	Node0x18ee7b8 -> Node0x18ee8c8;
	Node0x18ee8c8 -> Node0x18ee9d8;
	Node0x18ee9d8 -> Node0x18eea98;
edge [color=red]
	Node0x18ebf98 -> Node0x18ec1b8;
	Node0x18ec1b8 -> Node0x18ec5e8;
	Node0x18ec018 -> Node0x18ec6c8;
	Node0x18ec6c8 -> Node0x18ec7c8;
	Node0x18ec0a8 -> Node0x18ec888;
	Node0x18ec888 -> Node0x18ec938;
	Node0x18ec108 -> Node0x18ec9f8;
	Node0x18ec9f8 -> Node0x18ecaa8;
	Node0x18ebf98 -> Node0x18e6830;
	Node0x18ec018 -> Node0x18e6830;
	Node0x18ec0a8 -> Node0x18e6830;
	Node0x18ec108 -> Node0x18e6830;
	Node0x18ebf98 -> Node0x18ecca8;
	Node0x18ec018 -> Node0x18edc18;
	Node0x18ec0a8 -> Node0x18ee288;
	Node0x18ec108 -> Node0x18ee2e8;
	Node0x18ecca8 -> Node0x18ee3f8;
	Node0x18edc18 -> Node0x18ee3f8;
	Node0x18ee288 -> Node0x18ee3f8;
	Node0x18ee2e8 -> Node0x18ee3f8;
	Node0x18ec9f8 -> Node0x18ee658;
	Node0x18ec888 -> Node0x18ee7b8;
	Node0x18ec6c8 -> Node0x18ee8c8;
	Node0x18ec1b8 -> Node0x18ee9d8;
}
