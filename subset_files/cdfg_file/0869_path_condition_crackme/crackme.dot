digraph "DFG for'crackme' function" {
	Node0x936a90[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x936b00[shape=record, label="  %4 = and i32 %3, %0"];
	Node0x936bc0[shape=record, label="  %5 = add i32 %4, 1"];
	Node0x936c30[shape=record, label="  %6 = shl i32 %3, 1"];
	Node0x936ca0[shape=record, label="  %7 = shl i32 %0, 1"];
	Node0x936d40[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0x936db0[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0x936e20[shape=record, label="  %10 = and i32 %9, %1"];
	Node0x936ec0[shape=record, label="  %11 = shl i32 %4, 2"];
	Node0x936f30[shape=record, label="  %12 = and i32 %1, %0"];
	Node0x936fa0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x937010[shape=record, label="  %14 = sub i32 1, %0"];
	Node0x937080[shape=record, label="  %15 = sub i32 %14, %1"];
	Node0x9370f0[shape=record, label="  %16 = sub i32 %15, %6"];
	Node0x937160[shape=record, label="  %17 = add i32 %16, %8"];
	Node0x9371d0[shape=record, label="  %18 = sub i32 %17, %10"];
	Node0x937240[shape=record, label="  %19 = add i32 %18, %11"];
	Node0x9372b0[shape=record, label="  %20 = add i32 %19, %13"];
	Node0x937320[shape=record, label="  %21 = icmp eq i32 %5, %20"];
	Node0x8d7268[shape=record, label="  %22 = select i1 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x9377c0[shape=record, label="  %23 = tail call i32 @puts(i8* nonnull dereferenceable(1) %22)"];
	Node0x937810[shape=record, label="  ret void"];
	Node0x936a90 -> Node0x936b00;
	Node0x936b00 -> Node0x936bc0;
	Node0x936bc0 -> Node0x936c30;
	Node0x936c30 -> Node0x936ca0;
	Node0x936ca0 -> Node0x936d40;
	Node0x936d40 -> Node0x936db0;
	Node0x936db0 -> Node0x936e20;
	Node0x936e20 -> Node0x936ec0;
	Node0x936ec0 -> Node0x936f30;
	Node0x936f30 -> Node0x936fa0;
	Node0x936fa0 -> Node0x937010;
	Node0x937010 -> Node0x937080;
	Node0x937080 -> Node0x9370f0;
	Node0x9370f0 -> Node0x937160;
	Node0x937160 -> Node0x9371d0;
	Node0x9371d0 -> Node0x937240;
	Node0x937240 -> Node0x9372b0;
	Node0x9372b0 -> Node0x937320;
	Node0x937320 -> Node0x8d7268;
	Node0x8d7268 -> Node0x9377c0;
	Node0x9377c0 -> Node0x937810;
edge [color=red]
	Node0x936a90 -> Node0x936b00;
	Node0x936b00 -> Node0x936bc0;
	Node0x936a90 -> Node0x936c30;
	Node0x936ca0 -> Node0x936d40;
	Node0x936db0 -> Node0x936e20;
	Node0x936b00 -> Node0x936ec0;
	Node0x936f30 -> Node0x936fa0;
	Node0x937010 -> Node0x937080;
	Node0x937080 -> Node0x9370f0;
	Node0x936c30 -> Node0x9370f0;
	Node0x9370f0 -> Node0x937160;
	Node0x936d40 -> Node0x937160;
	Node0x937160 -> Node0x9371d0;
	Node0x936e20 -> Node0x9371d0;
	Node0x9371d0 -> Node0x937240;
	Node0x936ec0 -> Node0x937240;
	Node0x937240 -> Node0x9372b0;
	Node0x936fa0 -> Node0x9372b0;
	Node0x936bc0 -> Node0x937320;
	Node0x9372b0 -> Node0x937320;
	Node0x937320 -> Node0x8d7268;
	Node0x8d7268 -> Node0x9377c0;
}
