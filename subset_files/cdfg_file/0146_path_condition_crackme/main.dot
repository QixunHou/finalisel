digraph "DFG for'main' function" {
	Node0xb4a9f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb4aa78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb4ab08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb4ab68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xb4ac18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xb4b048[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb4b128[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xb4b228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb4b2e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xb4b398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb4b458[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xb4b508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb45a80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xb4b708[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb4c678[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb4cce8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb4cd48[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xb4cdc0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0xb4ce30[shape=record, label="  %15 = and i32 %13, %10"];
	Node0xb4cea0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0xb4cf10[shape=record, label="  %17 = shl i32 %12, 1"];
	Node0xb4cf80[shape=record, label="  %18 = or i32 %17, 1"];
	Node0xb4cff0[shape=record, label="  %19 = add i32 %18, %16"];
	Node0xb4d060[shape=record, label="  %20 = and i32 %12, %11"];
	Node0xb4d0d0[shape=record, label="  %21 = or i32 %12, %11"];
	Node0xb4d140[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0xb4d1b0[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0xb4d220[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0xb4d290[shape=record, label="  %25 = shl i32 %23, 2"];
	Node0xb4d300[shape=record, label="  %26 = xor i32 %25, -4"];
	Node0xb4d370[shape=record, label="  %27 = xor i32 %21, -1"];
	Node0xb4d3e0[shape=record, label="  %28 = mul i32 %27, 6"];
	Node0xb4d450[shape=record, label="  %29 = xor i32 %11, 536870911"];
	Node0xb4d4c0[shape=record, label="  %30 = and i32 %29, %12"];
	Node0xb4d530[shape=record, label="  %31 = shl i32 %30, 3"];
	Node0xb4d5a0[shape=record, label="  %32 = and i32 %11, %14"];
	Node0xb4d610[shape=record, label="  %33 = mul i32 %32, 7"];
	Node0xb4d680[shape=record, label="  %34 = mul i32 %20, 10"];
	Node0xb4d6f0[shape=record, label="  %35 = xor i32 %10, -1"];
	Node0xb4d760[shape=record, label="  %36 = xor i32 %13, -1"];
	Node0xb4d7d0[shape=record, label="  %37 = and i32 %13, %35"];
	Node0xb4d840[shape=record, label="  %38 = sub i32 3, %11"];
	Node0xb4d8b0[shape=record, label="  %39 = add i32 %38, %20"];
	Node0xb4d920[shape=record, label="  %40 = add i32 %39, %36"];
	Node0xb4d990[shape=record, label="  %41 = sub i32 %40, %22"];
	Node0xb4da00[shape=record, label="  %42 = sub i32 %41, %24"];
	Node0xb4da70[shape=record, label="  %43 = add i32 %42, %28"];
	Node0xb4dae0[shape=record, label="  %44 = add i32 %43, %31"];
	Node0xb4db50[shape=record, label="  %45 = add i32 %44, %33"];
	Node0xb4dbc0[shape=record, label="  %46 = add i32 %45, %34"];
	Node0xb4dc30[shape=record, label="  %47 = add i32 %46, %37"];
	Node0xb4dca0[shape=record, label="  %48 = sub i32 %47, %26"];
	Node0xb4dd10[shape=record, label="  %49 = icmp eq i32 %19, %48"];
	Node0xaea8b8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb4dda0[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0xb4e048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb4e1a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb4e2b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb4e3c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb4e488[shape=record, label="  ret i32 0"];
	Node0xb4a9f8 -> Node0xb4aa78;
	Node0xb4aa78 -> Node0xb4ab08;
	Node0xb4ab08 -> Node0xb4ab68;
	Node0xb4ab68 -> Node0xb4ac18;
	Node0xb4ac18 -> Node0xb4b048;
	Node0xb4b048 -> Node0xb4b128;
	Node0xb4b128 -> Node0xb4b228;
	Node0xb4b228 -> Node0xb4b2e8;
	Node0xb4b2e8 -> Node0xb4b398;
	Node0xb4b398 -> Node0xb4b458;
	Node0xb4b458 -> Node0xb4b508;
	Node0xb4b508 -> Node0xb45a80;
	Node0xb45a80 -> Node0xb4b708;
	Node0xb4b708 -> Node0xb4c678;
	Node0xb4c678 -> Node0xb4cce8;
	Node0xb4cce8 -> Node0xb4cd48;
	Node0xb4cd48 -> Node0xb4cdc0;
	Node0xb4cdc0 -> Node0xb4ce30;
	Node0xb4ce30 -> Node0xb4cea0;
	Node0xb4cea0 -> Node0xb4cf10;
	Node0xb4cf10 -> Node0xb4cf80;
	Node0xb4cf80 -> Node0xb4cff0;
	Node0xb4cff0 -> Node0xb4d060;
	Node0xb4d060 -> Node0xb4d0d0;
	Node0xb4d0d0 -> Node0xb4d140;
	Node0xb4d140 -> Node0xb4d1b0;
	Node0xb4d1b0 -> Node0xb4d220;
	Node0xb4d220 -> Node0xb4d290;
	Node0xb4d290 -> Node0xb4d300;
	Node0xb4d300 -> Node0xb4d370;
	Node0xb4d370 -> Node0xb4d3e0;
	Node0xb4d3e0 -> Node0xb4d450;
	Node0xb4d450 -> Node0xb4d4c0;
	Node0xb4d4c0 -> Node0xb4d530;
	Node0xb4d530 -> Node0xb4d5a0;
	Node0xb4d5a0 -> Node0xb4d610;
	Node0xb4d610 -> Node0xb4d680;
	Node0xb4d680 -> Node0xb4d6f0;
	Node0xb4d6f0 -> Node0xb4d760;
	Node0xb4d760 -> Node0xb4d7d0;
	Node0xb4d7d0 -> Node0xb4d840;
	Node0xb4d840 -> Node0xb4d8b0;
	Node0xb4d8b0 -> Node0xb4d920;
	Node0xb4d920 -> Node0xb4d990;
	Node0xb4d990 -> Node0xb4da00;
	Node0xb4da00 -> Node0xb4da70;
	Node0xb4da70 -> Node0xb4dae0;
	Node0xb4dae0 -> Node0xb4db50;
	Node0xb4db50 -> Node0xb4dbc0;
	Node0xb4dbc0 -> Node0xb4dc30;
	Node0xb4dc30 -> Node0xb4dca0;
	Node0xb4dca0 -> Node0xb4dd10;
	Node0xb4dd10 -> Node0xaea8b8;
	Node0xaea8b8 -> Node0xb4dda0;
	Node0xb4dda0 -> Node0xb4e048;
	Node0xb4e048 -> Node0xb4e1a8;
	Node0xb4e1a8 -> Node0xb4e2b8;
	Node0xb4e2b8 -> Node0xb4e3c8;
	Node0xb4e3c8 -> Node0xb4e488;
edge [color=red]
	Node0xb4a9f8 -> Node0xb4ac18;
	Node0xb4ac18 -> Node0xb4b048;
	Node0xb4aa78 -> Node0xb4b128;
	Node0xb4b128 -> Node0xb4b228;
	Node0xb4ab08 -> Node0xb4b2e8;
	Node0xb4b2e8 -> Node0xb4b398;
	Node0xb4ab68 -> Node0xb4b458;
	Node0xb4b458 -> Node0xb4b508;
	Node0xb4a9f8 -> Node0xb45a80;
	Node0xb4aa78 -> Node0xb45a80;
	Node0xb4ab08 -> Node0xb45a80;
	Node0xb4ab68 -> Node0xb45a80;
	Node0xb4a9f8 -> Node0xb4b708;
	Node0xb4aa78 -> Node0xb4c678;
	Node0xb4ab08 -> Node0xb4cce8;
	Node0xb4ab68 -> Node0xb4cd48;
	Node0xb4cce8 -> Node0xb4cdc0;
	Node0xb4cd48 -> Node0xb4ce30;
	Node0xb4b708 -> Node0xb4ce30;
	Node0xb4ce30 -> Node0xb4cea0;
	Node0xb4cce8 -> Node0xb4cf10;
	Node0xb4cf10 -> Node0xb4cf80;
	Node0xb4cf80 -> Node0xb4cff0;
	Node0xb4cea0 -> Node0xb4cff0;
	Node0xb4cce8 -> Node0xb4d060;
	Node0xb4c678 -> Node0xb4d060;
	Node0xb4cce8 -> Node0xb4d0d0;
	Node0xb4c678 -> Node0xb4d0d0;
	Node0xb4d0d0 -> Node0xb4d140;
	Node0xb4cce8 -> Node0xb4d1b0;
	Node0xb4c678 -> Node0xb4d1b0;
	Node0xb4d1b0 -> Node0xb4d220;
	Node0xb4d1b0 -> Node0xb4d290;
	Node0xb4d290 -> Node0xb4d300;
	Node0xb4d0d0 -> Node0xb4d370;
	Node0xb4d370 -> Node0xb4d3e0;
	Node0xb4c678 -> Node0xb4d450;
	Node0xb4d450 -> Node0xb4d4c0;
	Node0xb4cce8 -> Node0xb4d4c0;
	Node0xb4d4c0 -> Node0xb4d530;
	Node0xb4c678 -> Node0xb4d5a0;
	Node0xb4cdc0 -> Node0xb4d5a0;
	Node0xb4d5a0 -> Node0xb4d610;
	Node0xb4d060 -> Node0xb4d680;
	Node0xb4b708 -> Node0xb4d6f0;
	Node0xb4cd48 -> Node0xb4d760;
	Node0xb4cd48 -> Node0xb4d7d0;
	Node0xb4d6f0 -> Node0xb4d7d0;
	Node0xb4c678 -> Node0xb4d840;
	Node0xb4d840 -> Node0xb4d8b0;
	Node0xb4d060 -> Node0xb4d8b0;
	Node0xb4d8b0 -> Node0xb4d920;
	Node0xb4d760 -> Node0xb4d920;
	Node0xb4d920 -> Node0xb4d990;
	Node0xb4d140 -> Node0xb4d990;
	Node0xb4d990 -> Node0xb4da00;
	Node0xb4d220 -> Node0xb4da00;
	Node0xb4da00 -> Node0xb4da70;
	Node0xb4d3e0 -> Node0xb4da70;
	Node0xb4da70 -> Node0xb4dae0;
	Node0xb4d530 -> Node0xb4dae0;
	Node0xb4dae0 -> Node0xb4db50;
	Node0xb4d610 -> Node0xb4db50;
	Node0xb4db50 -> Node0xb4dbc0;
	Node0xb4d680 -> Node0xb4dbc0;
	Node0xb4dbc0 -> Node0xb4dc30;
	Node0xb4d7d0 -> Node0xb4dc30;
	Node0xb4dc30 -> Node0xb4dca0;
	Node0xb4d300 -> Node0xb4dca0;
	Node0xb4cff0 -> Node0xb4dd10;
	Node0xb4dca0 -> Node0xb4dd10;
	Node0xb4dd10 -> Node0xaea8b8;
	Node0xaea8b8 -> Node0xb4dda0;
	Node0xb4b458 -> Node0xb4e048;
	Node0xb4b2e8 -> Node0xb4e1a8;
	Node0xb4b128 -> Node0xb4e2b8;
	Node0xb4ac18 -> Node0xb4e3c8;
}
