digraph "DFG for'crackme' function" {
	Node0xd87790[shape=record, label="  %5 = and i32 %2, %1"];
	Node0xd87e10[shape=record, label="  %6 = xor i32 %2, -1"];
	Node0xd87eb0[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0xd87f20[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0xd87f90[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xd88000[shape=record, label="  %10 = sub i32 1, %9"];
	Node0xd88070[shape=record, label="  %11 = add i32 %10, %5"];
	Node0xd880e0[shape=record, label="  %12 = add i32 %11, %7"];
	Node0xd88150[shape=record, label="  %13 = sub i32 %12, %3"];
	Node0xd881c0[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0xd88230[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0xd882a0[shape=record, label="  %16 = or i32 %6, %1"];
	Node0xd88310[shape=record, label="  %17 = or i32 %2, %1"];
	Node0xd883b0[shape=record, label="  %18 = xor i32 %15, -2"];
	Node0xd88420[shape=record, label="  %19 = xor i32 %16, -1"];
	Node0xd88490[shape=record, label="  %20 = xor i32 %3, %0"];
	Node0xd88500[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0xd88570[shape=record, label="  %22 = and i32 %3, %0"];
	Node0xd885e0[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0xd88650[shape=record, label="  %24 = shl i32 %20, 1"];
	Node0xd886c0[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0xd88730[shape=record, label="  %26 = or i32 %3, %0"];
	Node0xd887a0[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0xd88840[shape=record, label="  %28 = xor i32 %3, 2147483647"];
	Node0xd888b0[shape=record, label="  %29 = and i32 %28, %0"];
	Node0xd88920[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0xd88990[shape=record, label="  %31 = and i32 %8, %3"];
	Node0xd88a30[shape=record, label="  %32 = mul i32 %22, -6"];
	Node0xd88cb0[shape=record, label="  %33 = shl i32 %17, 1"];
	Node0xd88d20[shape=record, label="  %34 = add i32 %31, %27"];
	Node0xd88dc0[shape=record, label="  %35 = mul i32 %34, -5"];
	Node0xd88e30[shape=record, label="  %36 = add i32 %19, %1"];
	Node0xd88ed0[shape=record, label="  %37 = mul i32 %36, -3"];
	Node0xd88f70[shape=record, label="  %38 = add i32 %0, 3"];
	Node0xd88fe0[shape=record, label="  %39 = add i32 %38, %1"];
	Node0xd89050[shape=record, label="  %40 = add i32 %39, %16"];
	Node0xd890c0[shape=record, label="  %41 = sub i32 %40, %5"];
	Node0xd89130[shape=record, label="  %42 = add i32 %41, %3"];
	Node0xd891a0[shape=record, label="  %43 = add i32 %42, %15"];
	Node0xd89210[shape=record, label="  %44 = add i32 %43, %21"];
	Node0xd89280[shape=record, label="  %45 = add i32 %44, %23"];
	Node0xd892f0[shape=record, label="  %46 = add i32 %45, %26"];
	Node0xd89360[shape=record, label="  %47 = add i32 %46, %33"];
	Node0xd893d0[shape=record, label="  %48 = add i32 %47, %18"];
	Node0xd89440[shape=record, label="  %49 = add i32 %48, %32"];
	Node0xd894b0[shape=record, label="  %50 = add i32 %49, %37"];
	Node0xd89520[shape=record, label="  %51 = add i32 %50, %25"];
	Node0xd89590[shape=record, label="  %52 = sub i32 %51, %30"];
	Node0xd89600[shape=record, label="  %53 = add i32 %52, %35"];
	Node0xd89670[shape=record, label="  %54 = icmp eq i32 %13, %53"];
	Node0xd28268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xd89b10[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0xd89b60[shape=record, label="  ret void"];
	Node0xd87790 -> Node0xd87e10;
	Node0xd87e10 -> Node0xd87eb0;
	Node0xd87eb0 -> Node0xd87f20;
	Node0xd87f20 -> Node0xd87f90;
	Node0xd87f90 -> Node0xd88000;
	Node0xd88000 -> Node0xd88070;
	Node0xd88070 -> Node0xd880e0;
	Node0xd880e0 -> Node0xd88150;
	Node0xd88150 -> Node0xd881c0;
	Node0xd881c0 -> Node0xd88230;
	Node0xd88230 -> Node0xd882a0;
	Node0xd882a0 -> Node0xd88310;
	Node0xd88310 -> Node0xd883b0;
	Node0xd883b0 -> Node0xd88420;
	Node0xd88420 -> Node0xd88490;
	Node0xd88490 -> Node0xd88500;
	Node0xd88500 -> Node0xd88570;
	Node0xd88570 -> Node0xd885e0;
	Node0xd885e0 -> Node0xd88650;
	Node0xd88650 -> Node0xd886c0;
	Node0xd886c0 -> Node0xd88730;
	Node0xd88730 -> Node0xd887a0;
	Node0xd887a0 -> Node0xd88840;
	Node0xd88840 -> Node0xd888b0;
	Node0xd888b0 -> Node0xd88920;
	Node0xd88920 -> Node0xd88990;
	Node0xd88990 -> Node0xd88a30;
	Node0xd88a30 -> Node0xd88cb0;
	Node0xd88cb0 -> Node0xd88d20;
	Node0xd88d20 -> Node0xd88dc0;
	Node0xd88dc0 -> Node0xd88e30;
	Node0xd88e30 -> Node0xd88ed0;
	Node0xd88ed0 -> Node0xd88f70;
	Node0xd88f70 -> Node0xd88fe0;
	Node0xd88fe0 -> Node0xd89050;
	Node0xd89050 -> Node0xd890c0;
	Node0xd890c0 -> Node0xd89130;
	Node0xd89130 -> Node0xd891a0;
	Node0xd891a0 -> Node0xd89210;
	Node0xd89210 -> Node0xd89280;
	Node0xd89280 -> Node0xd892f0;
	Node0xd892f0 -> Node0xd89360;
	Node0xd89360 -> Node0xd893d0;
	Node0xd893d0 -> Node0xd89440;
	Node0xd89440 -> Node0xd894b0;
	Node0xd894b0 -> Node0xd89520;
	Node0xd89520 -> Node0xd89590;
	Node0xd89590 -> Node0xd89600;
	Node0xd89600 -> Node0xd89670;
	Node0xd89670 -> Node0xd28268;
	Node0xd28268 -> Node0xd89b10;
	Node0xd89b10 -> Node0xd89b60;
edge [color=red]
	Node0xd87e10 -> Node0xd87eb0;
	Node0xd87f20 -> Node0xd87f90;
	Node0xd87f90 -> Node0xd88000;
	Node0xd88000 -> Node0xd88070;
	Node0xd87790 -> Node0xd88070;
	Node0xd88070 -> Node0xd880e0;
	Node0xd87eb0 -> Node0xd880e0;
	Node0xd880e0 -> Node0xd88150;
	Node0xd881c0 -> Node0xd88230;
	Node0xd87e10 -> Node0xd882a0;
	Node0xd88230 -> Node0xd883b0;
	Node0xd882a0 -> Node0xd88420;
	Node0xd88490 -> Node0xd88500;
	Node0xd88570 -> Node0xd885e0;
	Node0xd88490 -> Node0xd88650;
	Node0xd88650 -> Node0xd886c0;
	Node0xd88730 -> Node0xd887a0;
	Node0xd88840 -> Node0xd888b0;
	Node0xd888b0 -> Node0xd88920;
	Node0xd87f20 -> Node0xd88990;
	Node0xd88570 -> Node0xd88a30;
	Node0xd88310 -> Node0xd88cb0;
	Node0xd88990 -> Node0xd88d20;
	Node0xd887a0 -> Node0xd88d20;
	Node0xd88d20 -> Node0xd88dc0;
	Node0xd88420 -> Node0xd88e30;
	Node0xd88e30 -> Node0xd88ed0;
	Node0xd88f70 -> Node0xd88fe0;
	Node0xd88fe0 -> Node0xd89050;
	Node0xd882a0 -> Node0xd89050;
	Node0xd89050 -> Node0xd890c0;
	Node0xd87790 -> Node0xd890c0;
	Node0xd890c0 -> Node0xd89130;
	Node0xd89130 -> Node0xd891a0;
	Node0xd88230 -> Node0xd891a0;
	Node0xd891a0 -> Node0xd89210;
	Node0xd88500 -> Node0xd89210;
	Node0xd89210 -> Node0xd89280;
	Node0xd885e0 -> Node0xd89280;
	Node0xd89280 -> Node0xd892f0;
	Node0xd88730 -> Node0xd892f0;
	Node0xd892f0 -> Node0xd89360;
	Node0xd88cb0 -> Node0xd89360;
	Node0xd89360 -> Node0xd893d0;
	Node0xd883b0 -> Node0xd893d0;
	Node0xd893d0 -> Node0xd89440;
	Node0xd88a30 -> Node0xd89440;
	Node0xd89440 -> Node0xd894b0;
	Node0xd88ed0 -> Node0xd894b0;
	Node0xd894b0 -> Node0xd89520;
	Node0xd886c0 -> Node0xd89520;
	Node0xd89520 -> Node0xd89590;
	Node0xd88920 -> Node0xd89590;
	Node0xd89590 -> Node0xd89600;
	Node0xd88dc0 -> Node0xd89600;
	Node0xd88150 -> Node0xd89670;
	Node0xd89600 -> Node0xd89670;
	Node0xd89670 -> Node0xd28268;
	Node0xd28268 -> Node0xd89b10;
}
