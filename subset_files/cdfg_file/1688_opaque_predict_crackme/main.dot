digraph "DFG for'main' function" {
	Node0xaf5d28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xaf5da8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xaf5e38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xaf6298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xaf6378[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xaf6498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xaf66d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xaf6788[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xaf76f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xaf7d80[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xaf7df0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0xaf7e60[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0xaf7ed0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0xaf7f40[shape=record, label="  %12 = xor i32 %6, %8"];
	Node0xaf7fb0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xaf8020[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0xaf8090[shape=record, label="  %15 = shl i32 %6, 1"];
	Node0xaf8100[shape=record, label="  %16 = and i32 %6, %8"];
	Node0xaf8170[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0xaf81e0[shape=record, label="  %18 = or i32 %7, %6"];
	Node0xaf8250[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0xaf82c0[shape=record, label="  %20 = shl i32 %9, 1"];
	Node0xaf8330[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0xaf83a0[shape=record, label="  %22 = mul i32 %13, -6"];
	Node0xaf8410[shape=record, label="  %23 = add i32 %16, %19"];
	Node0xaf8480[shape=record, label="  %24 = mul i32 %23, -3"];
	Node0xaf84f0[shape=record, label="  %25 = add i32 %15, %14"];
	Node0xaf8560[shape=record, label="  %26 = add i32 %25, %12"];
	Node0xaf85d0[shape=record, label="  %27 = add i32 %26, %17"];
	Node0xaf8640[shape=record, label="  %28 = add i32 %27, %22"];
	Node0xaf86b0[shape=record, label="  %29 = sub i32 %28, %21"];
	Node0xaf8720[shape=record, label="  %30 = add i32 %29, %24"];
	Node0xaf8790[shape=record, label="  %31 = icmp eq i32 %11, %30"];
	Node0xa969d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xaf8a30[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0xaf8c88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xaf8de8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xaf8ea8[shape=record, label="  ret i32 0"];
	Node0xaf5d28 -> Node0xaf5da8;
	Node0xaf5da8 -> Node0xaf5e38;
	Node0xaf5e38 -> Node0xaf6298;
	Node0xaf6298 -> Node0xaf6378;
	Node0xaf6378 -> Node0xaf6498;
	Node0xaf6498 -> Node0xaf66d0;
	Node0xaf66d0 -> Node0xaf6788;
	Node0xaf6788 -> Node0xaf76f8;
	Node0xaf76f8 -> Node0xaf7d80;
	Node0xaf7d80 -> Node0xaf7df0;
	Node0xaf7df0 -> Node0xaf7e60;
	Node0xaf7e60 -> Node0xaf7ed0;
	Node0xaf7ed0 -> Node0xaf7f40;
	Node0xaf7f40 -> Node0xaf7fb0;
	Node0xaf7fb0 -> Node0xaf8020;
	Node0xaf8020 -> Node0xaf8090;
	Node0xaf8090 -> Node0xaf8100;
	Node0xaf8100 -> Node0xaf8170;
	Node0xaf8170 -> Node0xaf81e0;
	Node0xaf81e0 -> Node0xaf8250;
	Node0xaf8250 -> Node0xaf82c0;
	Node0xaf82c0 -> Node0xaf8330;
	Node0xaf8330 -> Node0xaf83a0;
	Node0xaf83a0 -> Node0xaf8410;
	Node0xaf8410 -> Node0xaf8480;
	Node0xaf8480 -> Node0xaf84f0;
	Node0xaf84f0 -> Node0xaf8560;
	Node0xaf8560 -> Node0xaf85d0;
	Node0xaf85d0 -> Node0xaf8640;
	Node0xaf8640 -> Node0xaf86b0;
	Node0xaf86b0 -> Node0xaf8720;
	Node0xaf8720 -> Node0xaf8790;
	Node0xaf8790 -> Node0xa969d8;
	Node0xa969d8 -> Node0xaf8a30;
	Node0xaf8a30 -> Node0xaf8c88;
	Node0xaf8c88 -> Node0xaf8de8;
	Node0xaf8de8 -> Node0xaf8ea8;
edge [color=red]
	Node0xaf5d28 -> Node0xaf5e38;
	Node0xaf5e38 -> Node0xaf6298;
	Node0xaf5da8 -> Node0xaf6378;
	Node0xaf6378 -> Node0xaf6498;
	Node0xaf5d28 -> Node0xaf66d0;
	Node0xaf5da8 -> Node0xaf66d0;
	Node0xaf5d28 -> Node0xaf6788;
	Node0xaf5da8 -> Node0xaf76f8;
	Node0xaf76f8 -> Node0xaf7d80;
	Node0xaf6788 -> Node0xaf7df0;
	Node0xaf7d80 -> Node0xaf7df0;
	Node0xaf7d80 -> Node0xaf7e60;
	Node0xaf7df0 -> Node0xaf7e60;
	Node0xaf7e60 -> Node0xaf7ed0;
	Node0xaf6788 -> Node0xaf7f40;
	Node0xaf7d80 -> Node0xaf7f40;
	Node0xaf76f8 -> Node0xaf7fb0;
	Node0xaf6788 -> Node0xaf7fb0;
	Node0xaf7fb0 -> Node0xaf8020;
	Node0xaf6788 -> Node0xaf8090;
	Node0xaf6788 -> Node0xaf8100;
	Node0xaf7d80 -> Node0xaf8100;
	Node0xaf8100 -> Node0xaf8170;
	Node0xaf76f8 -> Node0xaf81e0;
	Node0xaf6788 -> Node0xaf81e0;
	Node0xaf81e0 -> Node0xaf8250;
	Node0xaf7df0 -> Node0xaf82c0;
	Node0xaf82c0 -> Node0xaf8330;
	Node0xaf7fb0 -> Node0xaf83a0;
	Node0xaf8100 -> Node0xaf8410;
	Node0xaf8250 -> Node0xaf8410;
	Node0xaf8410 -> Node0xaf8480;
	Node0xaf8090 -> Node0xaf84f0;
	Node0xaf8020 -> Node0xaf84f0;
	Node0xaf84f0 -> Node0xaf8560;
	Node0xaf7f40 -> Node0xaf8560;
	Node0xaf8560 -> Node0xaf85d0;
	Node0xaf8170 -> Node0xaf85d0;
	Node0xaf85d0 -> Node0xaf8640;
	Node0xaf83a0 -> Node0xaf8640;
	Node0xaf8640 -> Node0xaf86b0;
	Node0xaf8330 -> Node0xaf86b0;
	Node0xaf86b0 -> Node0xaf8720;
	Node0xaf8480 -> Node0xaf8720;
	Node0xaf7ed0 -> Node0xaf8790;
	Node0xaf8720 -> Node0xaf8790;
	Node0xaf8790 -> Node0xa969d8;
	Node0xa969d8 -> Node0xaf8a30;
	Node0xaf6378 -> Node0xaf8c88;
	Node0xaf5e38 -> Node0xaf8de8;
}
