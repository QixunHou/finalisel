digraph "DFG for'main' function" {
	Node0x1c63d98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c63e18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c63ea8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1c64308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c643e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1c64508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c64740[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1c647f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c65768[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c65df0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1c65e60[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0x1c65ed0[shape=record, label="  %10 = or i32 %9, 1"];
	Node0x1c65f40[shape=record, label="  %11 = xor i32 %6, %8"];
	Node0x1c65fb0[shape=record, label="  %12 = shl i32 %7, 1"];
	Node0x1c66020[shape=record, label="  %13 = and i32 %6, %8"];
	Node0x1c66090[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x1c66100[shape=record, label="  %15 = shl i32 %14, 2"];
	Node0x1c66170[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x1c661e0[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x1c66250[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x1c662c0[shape=record, label="  %19 = xor i32 %6, 2147483647"];
	Node0x1c66330[shape=record, label="  %20 = and i32 %19, %7"];
	Node0x1c663a0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1c66410[shape=record, label="  %22 = add i32 %13, %18"];
	Node0x1c66480[shape=record, label="  %23 = mul i32 %22, -7"];
	Node0x1c664f0[shape=record, label="  %24 = sub i32 1, %12"];
	Node0x1c66560[shape=record, label="  %25 = add i32 %24, %11"];
	Node0x1c665d0[shape=record, label="  %26 = add i32 %25, %13"];
	Node0x1c66640[shape=record, label="  %27 = add i32 %26, %14"];
	Node0x1c666b0[shape=record, label="  %28 = sub i32 %27, %21"];
	Node0x1c66720[shape=record, label="  %29 = add i32 %28, %16"];
	Node0x1c66790[shape=record, label="  %30 = add i32 %29, %23"];
	Node0x1c66800[shape=record, label="  %31 = icmp eq i32 %10, %30"];
	Node0x1c049d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c66aa0[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x1c66cf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c66e58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c66f18[shape=record, label="  ret i32 0"];
	Node0x1c63d98 -> Node0x1c63e18;
	Node0x1c63e18 -> Node0x1c63ea8;
	Node0x1c63ea8 -> Node0x1c64308;
	Node0x1c64308 -> Node0x1c643e8;
	Node0x1c643e8 -> Node0x1c64508;
	Node0x1c64508 -> Node0x1c64740;
	Node0x1c64740 -> Node0x1c647f8;
	Node0x1c647f8 -> Node0x1c65768;
	Node0x1c65768 -> Node0x1c65df0;
	Node0x1c65df0 -> Node0x1c65e60;
	Node0x1c65e60 -> Node0x1c65ed0;
	Node0x1c65ed0 -> Node0x1c65f40;
	Node0x1c65f40 -> Node0x1c65fb0;
	Node0x1c65fb0 -> Node0x1c66020;
	Node0x1c66020 -> Node0x1c66090;
	Node0x1c66090 -> Node0x1c66100;
	Node0x1c66100 -> Node0x1c66170;
	Node0x1c66170 -> Node0x1c661e0;
	Node0x1c661e0 -> Node0x1c66250;
	Node0x1c66250 -> Node0x1c662c0;
	Node0x1c662c0 -> Node0x1c66330;
	Node0x1c66330 -> Node0x1c663a0;
	Node0x1c663a0 -> Node0x1c66410;
	Node0x1c66410 -> Node0x1c66480;
	Node0x1c66480 -> Node0x1c664f0;
	Node0x1c664f0 -> Node0x1c66560;
	Node0x1c66560 -> Node0x1c665d0;
	Node0x1c665d0 -> Node0x1c66640;
	Node0x1c66640 -> Node0x1c666b0;
	Node0x1c666b0 -> Node0x1c66720;
	Node0x1c66720 -> Node0x1c66790;
	Node0x1c66790 -> Node0x1c66800;
	Node0x1c66800 -> Node0x1c049d8;
	Node0x1c049d8 -> Node0x1c66aa0;
	Node0x1c66aa0 -> Node0x1c66cf8;
	Node0x1c66cf8 -> Node0x1c66e58;
	Node0x1c66e58 -> Node0x1c66f18;
edge [color=red]
	Node0x1c63d98 -> Node0x1c63ea8;
	Node0x1c63ea8 -> Node0x1c64308;
	Node0x1c63e18 -> Node0x1c643e8;
	Node0x1c643e8 -> Node0x1c64508;
	Node0x1c63d98 -> Node0x1c64740;
	Node0x1c63e18 -> Node0x1c64740;
	Node0x1c63d98 -> Node0x1c647f8;
	Node0x1c63e18 -> Node0x1c65768;
	Node0x1c65768 -> Node0x1c65df0;
	Node0x1c65df0 -> Node0x1c65e60;
	Node0x1c65e60 -> Node0x1c65ed0;
	Node0x1c647f8 -> Node0x1c65f40;
	Node0x1c65df0 -> Node0x1c65f40;
	Node0x1c65768 -> Node0x1c65fb0;
	Node0x1c647f8 -> Node0x1c66020;
	Node0x1c65df0 -> Node0x1c66020;
	Node0x1c65768 -> Node0x1c66090;
	Node0x1c647f8 -> Node0x1c66090;
	Node0x1c66090 -> Node0x1c66100;
	Node0x1c66100 -> Node0x1c66170;
	Node0x1c65768 -> Node0x1c661e0;
	Node0x1c647f8 -> Node0x1c661e0;
	Node0x1c661e0 -> Node0x1c66250;
	Node0x1c647f8 -> Node0x1c662c0;
	Node0x1c662c0 -> Node0x1c66330;
	Node0x1c65768 -> Node0x1c66330;
	Node0x1c66330 -> Node0x1c663a0;
	Node0x1c66020 -> Node0x1c66410;
	Node0x1c66250 -> Node0x1c66410;
	Node0x1c66410 -> Node0x1c66480;
	Node0x1c65fb0 -> Node0x1c664f0;
	Node0x1c664f0 -> Node0x1c66560;
	Node0x1c65f40 -> Node0x1c66560;
	Node0x1c66560 -> Node0x1c665d0;
	Node0x1c66020 -> Node0x1c665d0;
	Node0x1c665d0 -> Node0x1c66640;
	Node0x1c66090 -> Node0x1c66640;
	Node0x1c66640 -> Node0x1c666b0;
	Node0x1c663a0 -> Node0x1c666b0;
	Node0x1c666b0 -> Node0x1c66720;
	Node0x1c66170 -> Node0x1c66720;
	Node0x1c66720 -> Node0x1c66790;
	Node0x1c66480 -> Node0x1c66790;
	Node0x1c65ed0 -> Node0x1c66800;
	Node0x1c66790 -> Node0x1c66800;
	Node0x1c66800 -> Node0x1c049d8;
	Node0x1c049d8 -> Node0x1c66aa0;
	Node0x1c643e8 -> Node0x1c66cf8;
	Node0x1c63ea8 -> Node0x1c66e58;
}
