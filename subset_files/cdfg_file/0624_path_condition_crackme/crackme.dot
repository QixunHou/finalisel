digraph "DFG for'crackme' function" {
	Node0xb789d0[shape=record, label="  %3 = xor i32 %0, -1"];
	Node0xb78a70[shape=record, label="  %4 = mul i32 %3, -2"];
	Node0xb78b30[shape=record, label="  %5 = or i32 %3, %1"];
	Node0xb78ba0[shape=record, label="  %6 = shl i32 %1, 1"];
	Node0xb78c10[shape=record, label="  %7 = sub i32 %5, %6"];
	Node0xb78c80[shape=record, label="  %8 = xor i32 %3, %1"];
	Node0xb78cf0[shape=record, label="  %9 = add i32 %7, %8"];
	Node0xb78d60[shape=record, label="  %10 = or i32 %1, %0"];
	Node0xb78dd0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0xb78e40[shape=record, label="  %12 = add i32 %9, %11"];
	Node0xb78ee0[shape=record, label="  %13 = mul i32 %11, -5"];
	Node0xb78f50[shape=record, label="  %14 = and i32 %3, %1"];
	Node0xb78fc0[shape=record, label="  %15 = sub i32 %12, %14"];
	Node0xb79030[shape=record, label="  %16 = add i32 %15, %13"];
	Node0xb790a0[shape=record, label="  %17 = icmp eq i32 %4, %16"];
	Node0xb19268[shape=record, label="  %18 = select i1 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb79540[shape=record, label="  %19 = tail call i32 @puts(i8* nonnull dereferenceable(1) %18)"];
	Node0xb79590[shape=record, label="  ret void"];
	Node0xb789d0 -> Node0xb78a70;
	Node0xb78a70 -> Node0xb78b30;
	Node0xb78b30 -> Node0xb78ba0;
	Node0xb78ba0 -> Node0xb78c10;
	Node0xb78c10 -> Node0xb78c80;
	Node0xb78c80 -> Node0xb78cf0;
	Node0xb78cf0 -> Node0xb78d60;
	Node0xb78d60 -> Node0xb78dd0;
	Node0xb78dd0 -> Node0xb78e40;
	Node0xb78e40 -> Node0xb78ee0;
	Node0xb78ee0 -> Node0xb78f50;
	Node0xb78f50 -> Node0xb78fc0;
	Node0xb78fc0 -> Node0xb79030;
	Node0xb79030 -> Node0xb790a0;
	Node0xb790a0 -> Node0xb19268;
	Node0xb19268 -> Node0xb79540;
	Node0xb79540 -> Node0xb79590;
edge [color=red]
	Node0xb789d0 -> Node0xb78a70;
	Node0xb789d0 -> Node0xb78b30;
	Node0xb78b30 -> Node0xb78c10;
	Node0xb78ba0 -> Node0xb78c10;
	Node0xb789d0 -> Node0xb78c80;
	Node0xb78c10 -> Node0xb78cf0;
	Node0xb78c80 -> Node0xb78cf0;
	Node0xb78d60 -> Node0xb78dd0;
	Node0xb78cf0 -> Node0xb78e40;
	Node0xb78dd0 -> Node0xb78e40;
	Node0xb78dd0 -> Node0xb78ee0;
	Node0xb789d0 -> Node0xb78f50;
	Node0xb78e40 -> Node0xb78fc0;
	Node0xb78f50 -> Node0xb78fc0;
	Node0xb78fc0 -> Node0xb79030;
	Node0xb78ee0 -> Node0xb79030;
	Node0xb78a70 -> Node0xb790a0;
	Node0xb79030 -> Node0xb790a0;
	Node0xb790a0 -> Node0xb19268;
	Node0xb19268 -> Node0xb79540;
}
