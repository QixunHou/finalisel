digraph "DFG for'main' function" {
	Node0x1ebd288[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ebd308[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ebd398[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ebd3f8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1ec1138[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ec1218[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1ec1318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ec13d8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1ec1488[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ec16e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1ec17a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ec2718[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ec2d88[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ec2e80[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1ec3088[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ec31e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ec32f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ec33b8[shape=record, label="  ret i32 0"];
	Node0x1ebd288 -> Node0x1ebd308;
	Node0x1ebd308 -> Node0x1ebd398;
	Node0x1ebd398 -> Node0x1ebd3f8;
	Node0x1ebd3f8 -> Node0x1ec1138;
	Node0x1ec1138 -> Node0x1ec1218;
	Node0x1ec1218 -> Node0x1ec1318;
	Node0x1ec1318 -> Node0x1ec13d8;
	Node0x1ec13d8 -> Node0x1ec1488;
	Node0x1ec1488 -> Node0x1ec16e8;
	Node0x1ec16e8 -> Node0x1ec17a8;
	Node0x1ec17a8 -> Node0x1ec2718;
	Node0x1ec2718 -> Node0x1ec2d88;
	Node0x1ec2d88 -> Node0x1ec2e80;
	Node0x1ec2e80 -> Node0x1ec3088;
	Node0x1ec3088 -> Node0x1ec31e8;
	Node0x1ec31e8 -> Node0x1ec32f8;
	Node0x1ec32f8 -> Node0x1ec33b8;
edge [color=red]
	Node0x1ebd288 -> Node0x1ebd3f8;
	Node0x1ebd3f8 -> Node0x1ec1138;
	Node0x1ebd308 -> Node0x1ec1218;
	Node0x1ec1218 -> Node0x1ec1318;
	Node0x1ebd398 -> Node0x1ec13d8;
	Node0x1ec13d8 -> Node0x1ec1488;
	Node0x1ebd288 -> Node0x1ec16e8;
	Node0x1ebd308 -> Node0x1ec16e8;
	Node0x1ebd398 -> Node0x1ec16e8;
	Node0x1ebd288 -> Node0x1ec17a8;
	Node0x1ebd308 -> Node0x1ec2718;
	Node0x1ebd398 -> Node0x1ec2d88;
	Node0x1ec17a8 -> Node0x1ec2e80;
	Node0x1ec2718 -> Node0x1ec2e80;
	Node0x1ec2d88 -> Node0x1ec2e80;
	Node0x1ec13d8 -> Node0x1ec3088;
	Node0x1ec1218 -> Node0x1ec31e8;
	Node0x1ebd3f8 -> Node0x1ec32f8;
}
