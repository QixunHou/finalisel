digraph "DFG for'main' function" {
	Node0x10e3d48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x10e3dc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x10e3e58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x10e3eb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x10e3f68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x10e4398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10e4478[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x10e4578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10e4638[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x10e46e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10e47a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x10e4858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10de7b0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x10e4a58[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10e59c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10e6038[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x10e6098[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x10e61a8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x10e6408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10e6568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10e6678[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10e6788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10e6848[shape=record, label="  ret i32 0"];
	Node0x10e3d48 -> Node0x10e3dc8;
	Node0x10e3dc8 -> Node0x10e3e58;
	Node0x10e3e58 -> Node0x10e3eb8;
	Node0x10e3eb8 -> Node0x10e3f68;
	Node0x10e3f68 -> Node0x10e4398;
	Node0x10e4398 -> Node0x10e4478;
	Node0x10e4478 -> Node0x10e4578;
	Node0x10e4578 -> Node0x10e4638;
	Node0x10e4638 -> Node0x10e46e8;
	Node0x10e46e8 -> Node0x10e47a8;
	Node0x10e47a8 -> Node0x10e4858;
	Node0x10e4858 -> Node0x10de7b0;
	Node0x10de7b0 -> Node0x10e4a58;
	Node0x10e4a58 -> Node0x10e59c8;
	Node0x10e59c8 -> Node0x10e6038;
	Node0x10e6038 -> Node0x10e6098;
	Node0x10e6098 -> Node0x10e61a8;
	Node0x10e61a8 -> Node0x10e6408;
	Node0x10e6408 -> Node0x10e6568;
	Node0x10e6568 -> Node0x10e6678;
	Node0x10e6678 -> Node0x10e6788;
	Node0x10e6788 -> Node0x10e6848;
edge [color=red]
	Node0x10e3d48 -> Node0x10e3f68;
	Node0x10e3f68 -> Node0x10e4398;
	Node0x10e3dc8 -> Node0x10e4478;
	Node0x10e4478 -> Node0x10e4578;
	Node0x10e3e58 -> Node0x10e4638;
	Node0x10e4638 -> Node0x10e46e8;
	Node0x10e3eb8 -> Node0x10e47a8;
	Node0x10e47a8 -> Node0x10e4858;
	Node0x10e3d48 -> Node0x10de7b0;
	Node0x10e3dc8 -> Node0x10de7b0;
	Node0x10e3e58 -> Node0x10de7b0;
	Node0x10e3eb8 -> Node0x10de7b0;
	Node0x10e3d48 -> Node0x10e4a58;
	Node0x10e3dc8 -> Node0x10e59c8;
	Node0x10e3e58 -> Node0x10e6038;
	Node0x10e3eb8 -> Node0x10e6098;
	Node0x10e4a58 -> Node0x10e61a8;
	Node0x10e59c8 -> Node0x10e61a8;
	Node0x10e6038 -> Node0x10e61a8;
	Node0x10e6098 -> Node0x10e61a8;
	Node0x10e47a8 -> Node0x10e6408;
	Node0x10e4638 -> Node0x10e6568;
	Node0x10e4478 -> Node0x10e6678;
	Node0x10e3f68 -> Node0x10e6788;
}
