; ModuleID = '../.././c_source_file/1321_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1321_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = or i32 %2, %1
  %5 = xor i32 %4, -1
  %6 = or i32 %5, %0
  %7 = xor i32 %0, -1
  %8 = xor i32 %2, -1
  %9 = or i32 %8, %1
  %10 = xor i32 %9, -1
  %11 = or i32 %10, %7
  %12 = sub i32 %11, %6
  %13 = and i32 %1, %0
  %14 = xor i32 %13, %2
  %15 = xor i32 %1, -1
  %16 = or i32 %8, %0
  %17 = xor i32 %16, -1
  %18 = or i32 %17, %15
  %19 = or i32 %15, %0
  %20 = xor i32 %19, -1
  %21 = or i32 %8, %20
  %22 = or i32 %1, %0
  %23 = and i32 %22, %8
  %24 = and i32 %8, %0
  %25 = or i32 %24, %15
  %26 = and i32 %15, %0
  %27 = xor i32 %26, -1
  %28 = xor i32 %27, %2
  %29 = and i32 %8, %1
  %30 = xor i32 %16, %1
  %31 = and i32 %2, %1
  %32 = xor i32 %31, -1
  %33 = xor i32 %32, %0
  %34 = xor i32 %4, %0
  %35 = or i32 %13, %8
  %36 = or i32 %29, %7
  %37 = or i32 %4, %0
  %38 = and i32 %15, %2
  %39 = and i32 %38, %0
  %40 = or i32 %15, %2
  %41 = xor i32 %40, %0
  %42 = or i32 %39, %41
  %43 = xor i32 %2, %1
  %44 = or i32 %43, %13
  %45 = and i32 %38, %7
  %46 = and i32 %40, %0
  %47 = xor i32 %46, -1
  %48 = xor i32 %45, %47
  %49 = and i32 %40, %7
  %50 = or i32 %39, %49
  %51 = and i32 %2, %0
  %52 = xor i32 %1, %0
  %53 = or i32 %51, %52
  %54 = xor i32 %52, -1
  %55 = or i32 %17, %54
  %56 = xor i32 %2, %0
  %57 = xor i32 %56, -1
  %58 = or i32 %29, %0
  %59 = xor i32 %29, %0
  %60 = or i32 %13, %2
  %61 = or i32 %9, %7
  %62 = or i32 %56, %15
  %63 = and i32 %57, %1
  %64 = or i32 %2, %0
  %65 = and i32 %64, %52
  %66 = and i32 %16, %52
  %67 = xor i32 %64, -1
  %68 = or i32 %67, %1
  %69 = xor i32 %43, -1
  %70 = and i32 %69, %27
  %71 = or i32 %57, %1
  %72 = and i32 %56, %1
  %73 = xor i32 %29, -1
  %74 = xor i32 %73, %0
  %75 = and i32 %27, %2
  %76 = or i32 %31, %7
  %77 = or i32 %52, %57
  %78 = xor i32 %13, -1
  %79 = and i32 %43, %78
  %80 = and i32 %56, %52
  %81 = xor i32 %22, -1
  %82 = xor i32 %81, %2
  %83 = or i32 %52, %17
  %84 = xor i32 %51, -1
  %85 = or i32 %57, %81
  %86 = or i32 %51, %81
  %87 = xor i32 %24, %9
  %88 = or i32 %43, %7
  %89 = xor i32 %88, 2147483647
  %90 = or i32 %89, %45
  %91 = and i32 %64, %1
  %92 = and i32 %4, %7
  %93 = and i32 %19, %69
  %94 = or i32 %5, %7
  %95 = xor i32 %24, -1
  %96 = add i32 %24, 1
  %97 = or i32 %56, %26
  %98 = or i32 %31, %26
  %99 = or i32 %32, %0
  %100 = and i32 %56, %15
  %101 = and i32 %31, %0
  %102 = or i32 %101, %92
  %103 = or i32 %43, %0
  %104 = and i32 %43, %19
  %105 = xor i32 %16, %13
  %106 = or i32 %8, %54
  %107 = and i32 %19, %57
  %108 = or i32 %26, %57
  %109 = or i32 %69, %7
  %110 = or i32 %26, %69
  %111 = xor i32 %51, %1
  %112 = or i32 %4, %7
  %113 = xor i32 %43, %0
  %114 = xor i32 %101, %113
  %115 = or i32 %51, %1
  %116 = or i32 %52, %2
  %117 = shl i32 %116, 1
  %118 = or i32 %8, %81
  %119 = xor i32 %9, %0
  %120 = or i32 %43, %26
  %121 = or i32 %56, %54
  %122 = xor i32 %4, %13
  %123 = or i32 %51, %15
  %124 = and i32 %73, %0
  %125 = xor i32 %64, %1
  %126 = and i32 %9, %0
  %127 = or i32 %39, %113
  %128 = shl i32 %24, 1
  %129 = or i32 %31, %0
  %130 = or i32 %10, %0
  %131 = and i32 %32, %7
  %132 = or i32 %43, %81
  %133 = and i32 %43, %27
  %134 = xor i32 %26, %2
  %135 = or i32 %56, %13
  %136 = shl i32 %135, 1
  %137 = and i32 %43, %7
  %138 = or i32 %101, %137
  %139 = or i32 %26, %2
  %140 = or i32 %51, %29
  %141 = shl i32 %140, 1
  %142 = and i32 %56, %54
  %143 = and i32 %16, %54
  %144 = shl i32 %143, 1
  %145 = and i32 %22, %69
  %146 = or i32 %51, %54
  %147 = xor i32 %22, %2
  %148 = or i32 %67, %54
  %149 = or i32 %57, %15
  %150 = or i32 %52, %8
  %151 = xor i32 %17, %1
  %152 = or i32 %56, %81
  %153 = xor i32 %101, -1
  %154 = xor i32 %92, %153
  %155 = xor i32 %24, %32
  %156 = shl i32 %155, 1
  %157 = xor i32 %51, %22
  %158 = and i32 %16, %1
  %159 = add i32 %13, 1
  %160 = and i32 %57, %27
  %161 = xor i32 %26, %73
  %162 = xor i32 %49, -1
  %163 = xor i32 %39, %162
  %164 = and i32 %52, %8
  %165 = or i32 %24, %10
  %166 = or i32 %52, %67
  %167 = or i32 %26, %8
  %168 = add i32 %1, 1
  %169 = or i32 %56, %1
  %170 = shl i32 %169, 1
  %171 = xor i32 %19, %2
  %172 = or i32 %81, %2
  %173 = add i32 %29, 1
  %174 = and i32 %16, %15
  %175 = or i32 %54, %2
  %176 = xor i32 %9, %13
  %177 = or i32 %56, %52
  %178 = xor i32 %41, 2147483647
  %179 = xor i32 %178, %39
  %180 = shl i32 %179, 1
  %181 = or i32 %57, %54
  %182 = or i32 %57, %20
  %183 = shl i32 %1, 1
  %184 = or i32 %13, %17
  %185 = and i32 %8, %54
  %186 = shl i32 %185, 1
  %187 = and i32 %56, %78
  %188 = xor i32 %103, -1
  %189 = or i32 %39, %188
  %190 = xor i32 %78, %2
  %191 = shl i32 %190, 1
  %192 = and i32 %69, %0
  %193 = xor i32 %67, %1
  %194 = and i32 %56, %19
  %195 = and i32 %31, %7
  %196 = and i32 %43, %0
  %197 = or i32 %195, %196
  %198 = or i32 %43, %20
  %199 = shl i32 %198, 1
  %200 = xor i32 %195, -1
  %201 = xor i32 %196, %200
  %202 = xor i32 %69, %0
  %203 = and i32 %8, %27
  %204 = add i32 %19, 1
  %205 = and i32 %64, %54
  %206 = and i32 %22, %57
  %207 = or i32 %24, %31
  %208 = and i32 %56, %22
  %209 = xor i32 %51, %19
  %210 = xor i32 %10, %0
  %211 = and i32 %84, %54
  %212 = xor i32 %34, 2147483647
  %213 = xor i32 %212, %101
  %214 = shl i32 %213, 1
  %215 = xor i32 %84, %1
  %216 = and i32 %69, %7
  %217 = or i32 %13, %5
  %218 = xor i32 %20, %2
  %219 = and i32 %57, %54
  %220 = or i32 %13, %10
  %221 = shl i32 %220, 1
  %222 = and i32 %22, %2
  %223 = xor i32 %5, %0
  %224 = and i32 %78, %2
  %225 = or i32 %17, %1
  %226 = and i32 %73, %7
  %227 = and i32 %95, %1
  %228 = or i32 %73, %0
  %229 = and i32 %4, %0
  %230 = xor i32 %229, %200
  %231 = or i32 %69, %0
  %232 = or i32 %9, %0
  %233 = or i32 %32, %7
  %234 = and i32 %69, %78
  %235 = or i32 %13, %69
  %236 = or i32 %45, %46
  %237 = or i32 %67, %15
  %238 = xor i32 %137, %153
  %239 = xor i32 %24, %1
  %240 = and i32 %19, %8
  %241 = shl i32 %88, 1
  %242 = and i32 %52, %57
  %243 = or i32 %51, %20
  %244 = or i32 %24, %52
  %245 = and i32 %95, %54
  %246 = shl i32 %113, 2
  %247 = and i32 %84, %15
  %248 = xor i32 %45, %88
  %249 = or i32 %69, %81
  %250 = and i32 %57, %78
  %251 = or i32 %51, %5
  %252 = xor i32 %64, %13
  %253 = shl i32 %252, 1
  %254 = or i32 %73, %7
  %255 = xor i32 %113, -1
  %256 = xor i32 %39, %255
  %257 = shl i32 %256, 1
  %258 = or i32 %101, %34
  %259 = xor i32 %39, %103
  %260 = xor i32 %31, %0
  %261 = and i32 %57, %15
  %262 = and i32 %43, %22
  %263 = or i32 %56, %20
  %264 = and i32 %8, %78
  %265 = xor i32 %51, %4
  %266 = and i32 %95, %15
  %267 = or i32 %24, %54
  %268 = or i32 %195, %229
  %269 = or i32 %13, %57
  %270 = xor i32 %51, %73
  %271 = and i32 %84, %1
  %272 = or i32 %101, %255
  %273 = and i32 %19, %2
  %274 = and i32 %52, %2
  %275 = or i32 %69, %20
  %276 = or i32 %20, %2
  %277 = and i32 %64, %15
  %278 = or i32 %29, %26
  %279 = xor i32 %95, %1
  %280 = and i32 %54, %2
  %281 = and i32 %32, %0
  %282 = xor i32 %26, %32
  %283 = and i32 %52, %95
  %284 = or i32 %13, %67
  %285 = add i32 %16, 1
  %286 = and i32 %9, %7
  %287 = and i32 %5, %7
  %288 = mul i32 %287, -28
  %289 = and i32 %29, %7
  %290 = shl i32 %289, 4
  %291 = and i32 %5, %0
  %292 = and i32 %29, %0
  %293 = shl i32 %292, 4
  %294 = and i32 %10, %7
  %295 = mul i32 %195, -23
  %296 = and i32 %10, %0
  %297 = mul i32 %296, -15
  %298 = shl i32 %101, 4
  %299 = add i32 %16, %64
  %300 = add i32 %299, %28
  %301 = add i32 %300, %266
  %302 = add i32 %301, %265
  %303 = add i32 %302, %249
  %304 = add i32 %303, %244
  %305 = add i32 %304, %226
  %306 = add i32 %305, %223
  %307 = add i32 %306, %219
  %308 = add i32 %307, %215
  %309 = add i32 %308, %205
  %310 = add i32 %309, %182
  %311 = add i32 %310, %176
  %312 = add i32 %311, %166
  %313 = add i32 %312, %161
  %314 = add i32 %313, %157
  %315 = add i32 %314, %149
  %316 = add i32 %315, %126
  %317 = add i32 %316, %119
  %318 = add i32 %317, %112
  %319 = add i32 %318, %107
  %320 = add i32 %319, %105
  %321 = add i32 %320, %65
  %322 = add i32 %321, %55
  %323 = add i32 %322, %37
  %324 = add i32 %323, %34
  %325 = add i32 %324, %42
  %326 = add i32 %325, %90
  %327 = shl i32 %326, 1
  %328 = add i32 %22, %27
  %329 = add i32 %328, %147
  %330 = add i32 %329, %260
  %331 = sub i32 %330, %232
  %332 = sub i32 %331, %152
  %333 = sub i32 %332, %127
  %334 = mul i32 %333, 5
  %335 = sub i32 %22, %4
  %336 = add i32 %335, %36
  %337 = add i32 %336, %282
  %338 = add i32 %337, %33
  %339 = mul i32 %338, 3
  %340 = add i32 %294, %291
  %341 = mul i32 %340, -6
  %342 = shl i32 %0, 1
  %343 = add i32 %342, %168
  %344 = sub i32 %343, %19
  %345 = add i32 %344, %26
  %346 = add i32 %345, %159
  %347 = sub i32 %346, %183
  %348 = add i32 %347, %204
  %349 = add i32 %348, %2
  %350 = add i32 %349, 2
  %351 = add i32 %350, %2
  %352 = sub i32 %351, %13
  %353 = sub i32 %352, %14
  %354 = sub i32 %353, %21
  %355 = sub i32 %354, %23
  %356 = add i32 %355, %4
  %357 = sub i32 %356, %29
  %358 = add i32 %357, %35
  %359 = sub i32 %358, %60
  %360 = add i32 %359, %75
  %361 = sub i32 %360, %82
  %362 = sub i32 %361, %31
  %363 = sub i32 %362, %9
  %364 = add i32 %363, %96
  %365 = add i32 %364, %10
  %366 = sub i32 %365, %106
  %367 = add i32 %366, %118
  %368 = add i32 %367, %69
  %369 = sub i32 %368, %134
  %370 = add i32 %369, %139
  %371 = add i32 %370, %32
  %372 = add i32 %371, %150
  %373 = sub i32 %372, %164
  %374 = sub i32 %373, %43
  %375 = add i32 %374, %167
  %376 = sub i32 %375, %171
  %377 = sub i32 %376, %172
  %378 = add i32 %377, %173
  %379 = sub i32 %378, %175
  %380 = add i32 %379, %203
  %381 = add i32 %380, %218
  %382 = add i32 %381, %222
  %383 = sub i32 %382, %224
  %384 = sub i32 %383, %240
  %385 = sub i32 %384, %264
  %386 = sub i32 %385, %273
  %387 = sub i32 %386, %274
  %388 = add i32 %387, %276
  %389 = add i32 %388, %280
  %390 = add i32 %389, %285
  %391 = sub i32 %390, %18
  %392 = sub i32 %391, %25
  %393 = add i32 %392, %30
  %394 = sub i32 %393, %44
  %395 = add i32 %394, %53
  %396 = sub i32 %395, %58
  %397 = sub i32 %396, %59
  %398 = sub i32 %397, %61
  %399 = add i32 %398, %62
  %400 = add i32 %399, %63
  %401 = sub i32 %400, %66
  %402 = sub i32 %401, %68
  %403 = add i32 %402, %70
  %404 = add i32 %403, %71
  %405 = sub i32 %404, %72
  %406 = add i32 %405, %74
  %407 = add i32 %406, %76
  %408 = add i32 %407, %77
  %409 = sub i32 %408, %79
  %410 = add i32 %409, %80
  %411 = add i32 %410, %83
  %412 = sub i32 %411, %85
  %413 = add i32 %412, %86
  %414 = sub i32 %413, %87
  %415 = add i32 %414, %91
  %416 = add i32 %415, %92
  %417 = sub i32 %416, %93
  %418 = sub i32 %417, %94
  %419 = add i32 %418, %97
  %420 = sub i32 %419, %98
  %421 = add i32 %420, %99
  %422 = sub i32 %421, %100
  %423 = sub i32 %422, %103
  %424 = sub i32 %423, %104
  %425 = sub i32 %424, %108
  %426 = sub i32 %425, %109
  %427 = sub i32 %426, %110
  %428 = add i32 %427, %111
  %429 = sub i32 %428, %115
  %430 = sub i32 %429, %117
  %431 = add i32 %430, %120
  %432 = add i32 %431, %121
  %433 = sub i32 %432, %122
  %434 = sub i32 %433, %123
  %435 = add i32 %434, %124
  %436 = sub i32 %435, %125
  %437 = sub i32 %436, %128
  %438 = add i32 %437, %129
  %439 = sub i32 %438, %130
  %440 = sub i32 %439, %131
  %441 = sub i32 %440, %132
  %442 = add i32 %441, %133
  %443 = sub i32 %442, %142
  %444 = sub i32 %443, %145
  %445 = add i32 %444, %146
  %446 = add i32 %445, %148
  %447 = add i32 %446, %151
  %448 = add i32 %447, %158
  %449 = add i32 %448, %160
  %450 = add i32 %449, %165
  %451 = add i32 %450, %174
  %452 = sub i32 %451, %177
  %453 = sub i32 %452, %181
  %454 = add i32 %453, %184
  %455 = sub i32 %454, %186
  %456 = add i32 %455, %187
  %457 = sub i32 %456, %191
  %458 = add i32 %457, %192
  %459 = add i32 %458, %193
  %460 = sub i32 %459, %194
  %461 = sub i32 %460, %202
  %462 = add i32 %461, %206
  %463 = sub i32 %462, %207
  %464 = sub i32 %463, %208
  %465 = sub i32 %464, %209
  %466 = add i32 %465, %210
  %467 = add i32 %466, %211
  %468 = sub i32 %467, %216
  %469 = add i32 %468, %217
  %470 = sub i32 %469, %225
  %471 = add i32 %470, %227
  %472 = add i32 %471, %228
  %473 = sub i32 %472, %231
  %474 = add i32 %473, %233
  %475 = add i32 %474, %234
  %476 = add i32 %475, %235
  %477 = sub i32 %476, %196
  %478 = add i32 %477, %237
  %479 = sub i32 %478, %239
  %480 = add i32 %479, %242
  %481 = add i32 %480, %243
  %482 = sub i32 %481, %245
  %483 = sub i32 %482, %247
  %484 = add i32 %483, %250
  %485 = add i32 %484, %251
  %486 = add i32 %485, %254
  %487 = add i32 %486, %261
  %488 = sub i32 %487, %262
  %489 = sub i32 %488, %263
  %490 = add i32 %489, %267
  %491 = add i32 %490, %269
  %492 = add i32 %491, %270
  %493 = add i32 %492, %271
  %494 = add i32 %493, %275
  %495 = sub i32 %494, %277
  %496 = sub i32 %495, %278
  %497 = add i32 %496, %137
  %498 = sub i32 %497, %229
  %499 = add i32 %498, %279
  %500 = add i32 %499, %281
  %501 = add i32 %500, %283
  %502 = add i32 %501, %284
  %503 = sub i32 %502, %286
  %504 = add i32 %503, %48
  %505 = add i32 %504, %50
  %506 = sub i32 %505, %102
  %507 = add i32 %506, %114
  %508 = sub i32 %507, %136
  %509 = sub i32 %508, %138
  %510 = sub i32 %509, %141
  %511 = sub i32 %510, %144
  %512 = sub i32 %511, %154
  %513 = sub i32 %512, %156
  %514 = sub i32 %513, %163
  %515 = sub i32 %514, %170
  %516 = sub i32 %515, %189
  %517 = add i32 %516, %197
  %518 = sub i32 %517, %199
  %519 = add i32 %518, %201
  %520 = sub i32 %519, %221
  %521 = sub i32 %520, %230
  %522 = sub i32 %521, %236
  %523 = sub i32 %522, %238
  %524 = sub i32 %523, %241
  %525 = sub i32 %524, %246
  %526 = add i32 %525, %248
  %527 = sub i32 %526, %253
  %528 = sub i32 %527, %258
  %529 = sub i32 %528, %259
  %530 = add i32 %529, %268
  %531 = sub i32 %530, %272
  %532 = add i32 %531, %288
  %533 = sub i32 %532, %290
  %534 = sub i32 %533, %293
  %535 = add i32 %534, %295
  %536 = add i32 %535, %297
  %537 = sub i32 %536, %298
  %538 = sub i32 %537, %257
  %539 = add i32 %538, %341
  %540 = sub i32 %539, %180
  %541 = sub i32 %540, %214
  %542 = add i32 %541, %339
  %543 = add i32 %542, %334
  %544 = add i32 %543, %327
  %545 = icmp eq i32 %12, %544
  %546 = select i1 %545, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %547 = tail call i32 @puts(i8* nonnull dereferenceable(1) %546)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
