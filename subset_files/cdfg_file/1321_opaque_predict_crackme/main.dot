digraph "DFG for'main' function" {
	Node0x1e47fb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e48038[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e480c8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1e48128[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1e485a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e48688[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1e48788[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e48848[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1e488f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e48b58[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1e48c18[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e49b88[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e49be8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1e49ce0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1e4a648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e4a7a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e4a8b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e4a978[shape=record, label="  ret i32 0"];
	Node0x1e47fb8 -> Node0x1e48038;
	Node0x1e48038 -> Node0x1e480c8;
	Node0x1e480c8 -> Node0x1e48128;
	Node0x1e48128 -> Node0x1e485a8;
	Node0x1e485a8 -> Node0x1e48688;
	Node0x1e48688 -> Node0x1e48788;
	Node0x1e48788 -> Node0x1e48848;
	Node0x1e48848 -> Node0x1e488f8;
	Node0x1e488f8 -> Node0x1e48b58;
	Node0x1e48b58 -> Node0x1e48c18;
	Node0x1e48c18 -> Node0x1e49b88;
	Node0x1e49b88 -> Node0x1e49be8;
	Node0x1e49be8 -> Node0x1e49ce0;
	Node0x1e49ce0 -> Node0x1e4a648;
	Node0x1e4a648 -> Node0x1e4a7a8;
	Node0x1e4a7a8 -> Node0x1e4a8b8;
	Node0x1e4a8b8 -> Node0x1e4a978;
edge [color=red]
	Node0x1e47fb8 -> Node0x1e48128;
	Node0x1e48128 -> Node0x1e485a8;
	Node0x1e48038 -> Node0x1e48688;
	Node0x1e48688 -> Node0x1e48788;
	Node0x1e480c8 -> Node0x1e48848;
	Node0x1e48848 -> Node0x1e488f8;
	Node0x1e47fb8 -> Node0x1e48b58;
	Node0x1e48038 -> Node0x1e48b58;
	Node0x1e480c8 -> Node0x1e48b58;
	Node0x1e47fb8 -> Node0x1e48c18;
	Node0x1e48038 -> Node0x1e49b88;
	Node0x1e480c8 -> Node0x1e49be8;
	Node0x1e48c18 -> Node0x1e49ce0;
	Node0x1e49b88 -> Node0x1e49ce0;
	Node0x1e49be8 -> Node0x1e49ce0;
	Node0x1e48848 -> Node0x1e4a648;
	Node0x1e48688 -> Node0x1e4a7a8;
	Node0x1e48128 -> Node0x1e4a8b8;
}
