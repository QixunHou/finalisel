digraph "DFG for'main' function" {
	Node0x162f558[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x162f5d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x162f668[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x162f6c8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x162f778[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x162fba8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x162fc88[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x162fd88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x162fe48[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x162fef8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x162ffb8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1630068[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x162a970[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1630268[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x16311d8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1631848[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x16318a8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1631920[shape=record, label="  %14 = xor i32 %13, %10"];
	Node0x1631990[shape=record, label="  %15 = sub i32 %10, %11"];
	Node0x1631a00[shape=record, label="  %16 = add i32 %15, %14"];
	Node0x1631a70[shape=record, label="  %17 = xor i32 %12, %11"];
	Node0x1631ae0[shape=record, label="  %18 = xor i32 %12, 2147483647"];
	Node0x1631b50[shape=record, label="  %19 = shl i32 %12, 1"];
	Node0x1631bc0[shape=record, label="  %20 = or i32 %12, %11"];
	Node0x1631c30[shape=record, label="  %21 = and i32 %18, %11"];
	Node0x1631ca0[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x1631d10[shape=record, label="  %23 = or i32 %13, %10"];
	Node0x1631d80[shape=record, label="  %24 = xor i32 %13, -1"];
	Node0x1631df0[shape=record, label="  %25 = and i32 %10, %24"];
	Node0x1631e60[shape=record, label="  %26 = shl i32 %10, 1"];
	Node0x1631ed0[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x1631f40[shape=record, label="  %28 = and i32 %13, %10"];
	Node0x1631fb0[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x1632020[shape=record, label="  %30 = sub i32 %13, %21"];
	Node0x1632090[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x1632100[shape=record, label="  %32 = xor i32 %11, -1"];
	Node0x1632170[shape=record, label="  %33 = sub i32 %32, %27"];
	Node0x16321e0[shape=record, label="  %34 = add i32 %33, %17"];
	Node0x1632250[shape=record, label="  %35 = sub i32 %34, %19"];
	Node0x16322c0[shape=record, label="  %36 = add i32 %35, %20"];
	Node0x1632330[shape=record, label="  %37 = add i32 %36, %22"];
	Node0x16323a0[shape=record, label="  %38 = sub i32 %37, %23"];
	Node0x1632410[shape=record, label="  %39 = add i32 %38, %25"];
	Node0x1632480[shape=record, label="  %40 = add i32 %39, %29"];
	Node0x16324f0[shape=record, label="  %41 = sub i32 %40, %28"];
	Node0x1632560[shape=record, label="  %42 = add i32 %41, %31"];
	Node0x16325d0[shape=record, label="  %43 = icmp eq i32 %16, %42"];
	Node0x15cf8b8[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1632660[shape=record, label="  %45 = call i32 @puts(i8* nonnull dereferenceable(1) %44) #5"];
	Node0x1632908[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1632a68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1632b78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1632c88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1632d48[shape=record, label="  ret i32 0"];
	Node0x162f558 -> Node0x162f5d8;
	Node0x162f5d8 -> Node0x162f668;
	Node0x162f668 -> Node0x162f6c8;
	Node0x162f6c8 -> Node0x162f778;
	Node0x162f778 -> Node0x162fba8;
	Node0x162fba8 -> Node0x162fc88;
	Node0x162fc88 -> Node0x162fd88;
	Node0x162fd88 -> Node0x162fe48;
	Node0x162fe48 -> Node0x162fef8;
	Node0x162fef8 -> Node0x162ffb8;
	Node0x162ffb8 -> Node0x1630068;
	Node0x1630068 -> Node0x162a970;
	Node0x162a970 -> Node0x1630268;
	Node0x1630268 -> Node0x16311d8;
	Node0x16311d8 -> Node0x1631848;
	Node0x1631848 -> Node0x16318a8;
	Node0x16318a8 -> Node0x1631920;
	Node0x1631920 -> Node0x1631990;
	Node0x1631990 -> Node0x1631a00;
	Node0x1631a00 -> Node0x1631a70;
	Node0x1631a70 -> Node0x1631ae0;
	Node0x1631ae0 -> Node0x1631b50;
	Node0x1631b50 -> Node0x1631bc0;
	Node0x1631bc0 -> Node0x1631c30;
	Node0x1631c30 -> Node0x1631ca0;
	Node0x1631ca0 -> Node0x1631d10;
	Node0x1631d10 -> Node0x1631d80;
	Node0x1631d80 -> Node0x1631df0;
	Node0x1631df0 -> Node0x1631e60;
	Node0x1631e60 -> Node0x1631ed0;
	Node0x1631ed0 -> Node0x1631f40;
	Node0x1631f40 -> Node0x1631fb0;
	Node0x1631fb0 -> Node0x1632020;
	Node0x1632020 -> Node0x1632090;
	Node0x1632090 -> Node0x1632100;
	Node0x1632100 -> Node0x1632170;
	Node0x1632170 -> Node0x16321e0;
	Node0x16321e0 -> Node0x1632250;
	Node0x1632250 -> Node0x16322c0;
	Node0x16322c0 -> Node0x1632330;
	Node0x1632330 -> Node0x16323a0;
	Node0x16323a0 -> Node0x1632410;
	Node0x1632410 -> Node0x1632480;
	Node0x1632480 -> Node0x16324f0;
	Node0x16324f0 -> Node0x1632560;
	Node0x1632560 -> Node0x16325d0;
	Node0x16325d0 -> Node0x15cf8b8;
	Node0x15cf8b8 -> Node0x1632660;
	Node0x1632660 -> Node0x1632908;
	Node0x1632908 -> Node0x1632a68;
	Node0x1632a68 -> Node0x1632b78;
	Node0x1632b78 -> Node0x1632c88;
	Node0x1632c88 -> Node0x1632d48;
edge [color=red]
	Node0x162f558 -> Node0x162f778;
	Node0x162f778 -> Node0x162fba8;
	Node0x162f5d8 -> Node0x162fc88;
	Node0x162fc88 -> Node0x162fd88;
	Node0x162f668 -> Node0x162fe48;
	Node0x162fe48 -> Node0x162fef8;
	Node0x162f6c8 -> Node0x162ffb8;
	Node0x162ffb8 -> Node0x1630068;
	Node0x162f558 -> Node0x162a970;
	Node0x162f5d8 -> Node0x162a970;
	Node0x162f668 -> Node0x162a970;
	Node0x162f6c8 -> Node0x162a970;
	Node0x162f558 -> Node0x1630268;
	Node0x162f5d8 -> Node0x16311d8;
	Node0x162f668 -> Node0x1631848;
	Node0x162f6c8 -> Node0x16318a8;
	Node0x16318a8 -> Node0x1631920;
	Node0x1630268 -> Node0x1631920;
	Node0x1630268 -> Node0x1631990;
	Node0x16311d8 -> Node0x1631990;
	Node0x1631990 -> Node0x1631a00;
	Node0x1631920 -> Node0x1631a00;
	Node0x1631848 -> Node0x1631a70;
	Node0x16311d8 -> Node0x1631a70;
	Node0x1631848 -> Node0x1631ae0;
	Node0x1631848 -> Node0x1631b50;
	Node0x1631848 -> Node0x1631bc0;
	Node0x16311d8 -> Node0x1631bc0;
	Node0x1631ae0 -> Node0x1631c30;
	Node0x16311d8 -> Node0x1631c30;
	Node0x1631848 -> Node0x1631ca0;
	Node0x16311d8 -> Node0x1631ca0;
	Node0x16318a8 -> Node0x1631d10;
	Node0x1630268 -> Node0x1631d10;
	Node0x16318a8 -> Node0x1631d80;
	Node0x1630268 -> Node0x1631df0;
	Node0x1631d80 -> Node0x1631df0;
	Node0x1630268 -> Node0x1631e60;
	Node0x1631e60 -> Node0x1631ed0;
	Node0x16318a8 -> Node0x1631f40;
	Node0x1630268 -> Node0x1631f40;
	Node0x1631f40 -> Node0x1631fb0;
	Node0x16318a8 -> Node0x1632020;
	Node0x1631c30 -> Node0x1632020;
	Node0x1632020 -> Node0x1632090;
	Node0x16311d8 -> Node0x1632100;
	Node0x1632100 -> Node0x1632170;
	Node0x1631ed0 -> Node0x1632170;
	Node0x1632170 -> Node0x16321e0;
	Node0x1631a70 -> Node0x16321e0;
	Node0x16321e0 -> Node0x1632250;
	Node0x1631b50 -> Node0x1632250;
	Node0x1632250 -> Node0x16322c0;
	Node0x1631bc0 -> Node0x16322c0;
	Node0x16322c0 -> Node0x1632330;
	Node0x1631ca0 -> Node0x1632330;
	Node0x1632330 -> Node0x16323a0;
	Node0x1631d10 -> Node0x16323a0;
	Node0x16323a0 -> Node0x1632410;
	Node0x1631df0 -> Node0x1632410;
	Node0x1632410 -> Node0x1632480;
	Node0x1631fb0 -> Node0x1632480;
	Node0x1632480 -> Node0x16324f0;
	Node0x1631f40 -> Node0x16324f0;
	Node0x16324f0 -> Node0x1632560;
	Node0x1632090 -> Node0x1632560;
	Node0x1631a00 -> Node0x16325d0;
	Node0x1632560 -> Node0x16325d0;
	Node0x16325d0 -> Node0x15cf8b8;
	Node0x15cf8b8 -> Node0x1632660;
	Node0x162ffb8 -> Node0x1632908;
	Node0x162fe48 -> Node0x1632a68;
	Node0x162fc88 -> Node0x1632b78;
	Node0x162f778 -> Node0x1632c88;
}
