digraph "DFG for'crackme' function" {
	Node0x175d280[shape=record, label="  %3 = add i32 %1, %0"];
	Node0x175d2f0[shape=record, label="  %4 = xor i32 %1, %0"];
	Node0x175d9c0[shape=record, label="  %5 = shl i32 %1, 1"];
	Node0x175da30[shape=record, label="  %6 = add i32 %4, %5"];
	Node0x175dad0[shape=record, label="  %7 = xor i32 %0, 2147483647"];
	Node0x175db40[shape=record, label="  %8 = and i32 %7, %1"];
	Node0x175dbb0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x175dc20[shape=record, label="  %10 = sub i32 %6, %9"];
	Node0x175dc90[shape=record, label="  %11 = icmp eq i32 %3, %10"];
	Node0x16fe388[shape=record, label="  %12 = select i1 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x175e130[shape=record, label="  %13 = tail call i32 @puts(i8* nonnull dereferenceable(1) %12)"];
	Node0x175e180[shape=record, label="  ret void"];
	Node0x175d280 -> Node0x175d2f0;
	Node0x175d2f0 -> Node0x175d9c0;
	Node0x175d9c0 -> Node0x175da30;
	Node0x175da30 -> Node0x175dad0;
	Node0x175dad0 -> Node0x175db40;
	Node0x175db40 -> Node0x175dbb0;
	Node0x175dbb0 -> Node0x175dc20;
	Node0x175dc20 -> Node0x175dc90;
	Node0x175dc90 -> Node0x16fe388;
	Node0x16fe388 -> Node0x175e130;
	Node0x175e130 -> Node0x175e180;
edge [color=red]
	Node0x175d2f0 -> Node0x175da30;
	Node0x175d9c0 -> Node0x175da30;
	Node0x175dad0 -> Node0x175db40;
	Node0x175db40 -> Node0x175dbb0;
	Node0x175da30 -> Node0x175dc20;
	Node0x175dbb0 -> Node0x175dc20;
	Node0x175d280 -> Node0x175dc90;
	Node0x175dc20 -> Node0x175dc90;
	Node0x175dc90 -> Node0x16fe388;
	Node0x16fe388 -> Node0x175e130;
}
