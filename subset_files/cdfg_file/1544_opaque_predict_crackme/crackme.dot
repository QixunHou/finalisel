digraph "DFG for'crackme' function" {
	Node0x22c7ac0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x22c8140[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x22c81b0[shape=record, label="  %7 = add i32 %6, %3"];
	Node0x22c8220[shape=record, label="  %8 = and i32 %2, %1"];
	Node0x22c8290[shape=record, label="  %9 = shl i32 %2, 1"];
	Node0x22c8330[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x22c83a0[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x22c8440[shape=record, label="  %12 = shl i32 %1, 2"];
	Node0x22c84e0[shape=record, label="  %13 = xor i32 %5, -1"];
	Node0x22c8550[shape=record, label="  %14 = shl i32 %8, 2"];
	Node0x22c85c0[shape=record, label="  %15 = xor i32 %0, -1"];
	Node0x22c8630[shape=record, label="  %16 = and i32 %3, %0"];
	Node0x22c86a0[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x22c8740[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x22c87b0[shape=record, label="  %19 = and i32 %15, %3"];
	Node0x22c8820[shape=record, label="  %20 = xor i32 %3, -1"];
	Node0x22c8890[shape=record, label="  %21 = xor i32 %15, %3"];
	Node0x22c8900[shape=record, label="  %22 = or i32 %3, %0"];
	Node0x22c8970[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x22c8a10[shape=record, label="  %24 = xor i32 %3, 2147483647"];
	Node0x22c8a80[shape=record, label="  %25 = and i32 %24, %0"];
	Node0x22c8af0[shape=record, label="  %26 = add i32 %19, %13"];
	Node0x22c8b90[shape=record, label="  %27 = mul i32 %26, 3"];
	Node0x22c8c00[shape=record, label="  %28 = add i32 %25, %2"];
	Node0x22c8c70[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x22c8ce0[shape=record, label="  %30 = add i32 %8, %12"];
	Node0x22c8d50[shape=record, label="  %31 = sub i32 %30, %10"];
	Node0x22c8dc0[shape=record, label="  %32 = add i32 %31, %11"];
	Node0x22c9040[shape=record, label="  %33 = add i32 %32, %20"];
	Node0x22c90b0[shape=record, label="  %34 = sub i32 %33, %14"];
	Node0x22c9120[shape=record, label="  %35 = add i32 %34, %19"];
	Node0x22c9190[shape=record, label="  %36 = add i32 %35, %21"];
	Node0x22c9200[shape=record, label="  %37 = add i32 %36, %23"];
	Node0x22c9270[shape=record, label="  %38 = sub i32 %37, %16"];
	Node0x22c92e0[shape=record, label="  %39 = sub i32 %38, %18"];
	Node0x22c9350[shape=record, label="  %40 = add i32 %39, %27"];
	Node0x22c93c0[shape=record, label="  %41 = add i32 %40, %29"];
	Node0x22c9430[shape=record, label="  %42 = icmp eq i32 %7, %41"];
	Node0x2268268[shape=record, label="  %43 = select i1 %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22c98d0[shape=record, label="  %44 = tail call i32 @puts(i8* nonnull dereferenceable(1) %43)"];
	Node0x22c9920[shape=record, label="  ret void"];
	Node0x22c7ac0 -> Node0x22c8140;
	Node0x22c8140 -> Node0x22c81b0;
	Node0x22c81b0 -> Node0x22c8220;
	Node0x22c8220 -> Node0x22c8290;
	Node0x22c8290 -> Node0x22c8330;
	Node0x22c8330 -> Node0x22c83a0;
	Node0x22c83a0 -> Node0x22c8440;
	Node0x22c8440 -> Node0x22c84e0;
	Node0x22c84e0 -> Node0x22c8550;
	Node0x22c8550 -> Node0x22c85c0;
	Node0x22c85c0 -> Node0x22c8630;
	Node0x22c8630 -> Node0x22c86a0;
	Node0x22c86a0 -> Node0x22c8740;
	Node0x22c8740 -> Node0x22c87b0;
	Node0x22c87b0 -> Node0x22c8820;
	Node0x22c8820 -> Node0x22c8890;
	Node0x22c8890 -> Node0x22c8900;
	Node0x22c8900 -> Node0x22c8970;
	Node0x22c8970 -> Node0x22c8a10;
	Node0x22c8a10 -> Node0x22c8a80;
	Node0x22c8a80 -> Node0x22c8af0;
	Node0x22c8af0 -> Node0x22c8b90;
	Node0x22c8b90 -> Node0x22c8c00;
	Node0x22c8c00 -> Node0x22c8c70;
	Node0x22c8c70 -> Node0x22c8ce0;
	Node0x22c8ce0 -> Node0x22c8d50;
	Node0x22c8d50 -> Node0x22c8dc0;
	Node0x22c8dc0 -> Node0x22c9040;
	Node0x22c9040 -> Node0x22c90b0;
	Node0x22c90b0 -> Node0x22c9120;
	Node0x22c9120 -> Node0x22c9190;
	Node0x22c9190 -> Node0x22c9200;
	Node0x22c9200 -> Node0x22c9270;
	Node0x22c9270 -> Node0x22c92e0;
	Node0x22c92e0 -> Node0x22c9350;
	Node0x22c9350 -> Node0x22c93c0;
	Node0x22c93c0 -> Node0x22c9430;
	Node0x22c9430 -> Node0x2268268;
	Node0x2268268 -> Node0x22c98d0;
	Node0x22c98d0 -> Node0x22c9920;
edge [color=red]
	Node0x22c7ac0 -> Node0x22c8140;
	Node0x22c8140 -> Node0x22c81b0;
	Node0x22c8290 -> Node0x22c8330;
	Node0x22c7ac0 -> Node0x22c84e0;
	Node0x22c8220 -> Node0x22c8550;
	Node0x22c8630 -> Node0x22c86a0;
	Node0x22c86a0 -> Node0x22c8740;
	Node0x22c85c0 -> Node0x22c87b0;
	Node0x22c85c0 -> Node0x22c8890;
	Node0x22c8900 -> Node0x22c8970;
	Node0x22c8a10 -> Node0x22c8a80;
	Node0x22c87b0 -> Node0x22c8af0;
	Node0x22c84e0 -> Node0x22c8af0;
	Node0x22c8af0 -> Node0x22c8b90;
	Node0x22c8a80 -> Node0x22c8c00;
	Node0x22c8c00 -> Node0x22c8c70;
	Node0x22c8220 -> Node0x22c8ce0;
	Node0x22c8440 -> Node0x22c8ce0;
	Node0x22c8ce0 -> Node0x22c8d50;
	Node0x22c8330 -> Node0x22c8d50;
	Node0x22c8d50 -> Node0x22c8dc0;
	Node0x22c83a0 -> Node0x22c8dc0;
	Node0x22c8dc0 -> Node0x22c9040;
	Node0x22c8820 -> Node0x22c9040;
	Node0x22c9040 -> Node0x22c90b0;
	Node0x22c8550 -> Node0x22c90b0;
	Node0x22c90b0 -> Node0x22c9120;
	Node0x22c87b0 -> Node0x22c9120;
	Node0x22c9120 -> Node0x22c9190;
	Node0x22c8890 -> Node0x22c9190;
	Node0x22c9190 -> Node0x22c9200;
	Node0x22c8970 -> Node0x22c9200;
	Node0x22c9200 -> Node0x22c9270;
	Node0x22c8630 -> Node0x22c9270;
	Node0x22c9270 -> Node0x22c92e0;
	Node0x22c8740 -> Node0x22c92e0;
	Node0x22c92e0 -> Node0x22c9350;
	Node0x22c8b90 -> Node0x22c9350;
	Node0x22c9350 -> Node0x22c93c0;
	Node0x22c8c70 -> Node0x22c93c0;
	Node0x22c81b0 -> Node0x22c9430;
	Node0x22c93c0 -> Node0x22c9430;
	Node0x22c9430 -> Node0x2268268;
	Node0x2268268 -> Node0x22c98d0;
}
