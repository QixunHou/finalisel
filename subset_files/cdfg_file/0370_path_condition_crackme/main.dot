digraph "DFG for'main' function" {
	Node0xb31b48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb31bc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb31c58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb31cb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xb31d68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xb32198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb32278[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xb32378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb32438[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xb324e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb325a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xb32658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb2cb10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xb32858[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb337c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb33e38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb33e98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xb33f10[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0xb33f80[shape=record, label="  %15 = xor i32 %12, %14"];
	Node0xb33ff0[shape=record, label="  %16 = sub i32 %15, %12"];
	Node0xb34060[shape=record, label="  %17 = and i32 %13, %10"];
	Node0xb340d0[shape=record, label="  %18 = xor i32 %13, %10"];
	Node0xb34140[shape=record, label="  %19 = sub i32 %16, %17"];
	Node0xb341b0[shape=record, label="  %20 = add i32 %19, %18"];
	Node0xb34220[shape=record, label="  %21 = or i32 %12, %11"];
	Node0xb34290[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0xb34300[shape=record, label="  %23 = or i32 %12, %14"];
	Node0xb34370[shape=record, label="  %24 = and i32 %12, %11"];
	Node0xb343e0[shape=record, label="  %25 = xor i32 %21, -1"];
	Node0xb34450[shape=record, label="  %26 = mul i32 %25, 5"];
	Node0xb344c0[shape=record, label="  %27 = and i32 %12, %14"];
	Node0xb34530[shape=record, label="  %28 = shl i32 %13, 1"];
	Node0xb345a0[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0xb34610[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0xb34680[shape=record, label="  %31 = or i32 %13, %30"];
	Node0xb346f0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0xb34760[shape=record, label="  %33 = xor i32 %31, -1"];
	Node0xb347d0[shape=record, label="  %34 = and i32 %13, %30"];
	Node0xb34840[shape=record, label="  %35 = sub i32 %27, %13"];
	Node0xb348b0[shape=record, label="  %36 = add i32 %35, %33"];
	Node0xb34920[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0xb34990[shape=record, label="  %38 = add i32 %11, %30"];
	Node0xb34a00[shape=record, label="  %39 = add i32 %38, %24"];
	Node0xb34a70[shape=record, label="  %40 = add i32 %39, %31"];
	Node0xb34ae0[shape=record, label="  %41 = shl i32 %40, 1"];
	Node0xb34b50[shape=record, label="  %42 = add i32 %10, 6"];
	Node0xb34bc0[shape=record, label="  %43 = add i32 %42, %22"];
	Node0xb34c30[shape=record, label="  %44 = add i32 %43, %21"];
	Node0xb34ca0[shape=record, label="  %45 = sub i32 %44, %23"];
	Node0xb34d10[shape=record, label="  %46 = add i32 %45, %26"];
	Node0xb34d80[shape=record, label="  %47 = add i32 %46, %32"];
	Node0xb34df0[shape=record, label="  %48 = add i32 %47, %34"];
	Node0xb34e60[shape=record, label="  %49 = sub i32 %48, %29"];
	Node0xb34ed0[shape=record, label="  %50 = add i32 %49, %37"];
	Node0xb34f40[shape=record, label="  %51 = add i32 %50, %41"];
	Node0xb34fb0[shape=record, label="  %52 = icmp eq i32 %20, %51"];
	Node0xad18b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb35040[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0xb352e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb35448[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb35558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb35668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb35728[shape=record, label="  ret i32 0"];
	Node0xb31b48 -> Node0xb31bc8;
	Node0xb31bc8 -> Node0xb31c58;
	Node0xb31c58 -> Node0xb31cb8;
	Node0xb31cb8 -> Node0xb31d68;
	Node0xb31d68 -> Node0xb32198;
	Node0xb32198 -> Node0xb32278;
	Node0xb32278 -> Node0xb32378;
	Node0xb32378 -> Node0xb32438;
	Node0xb32438 -> Node0xb324e8;
	Node0xb324e8 -> Node0xb325a8;
	Node0xb325a8 -> Node0xb32658;
	Node0xb32658 -> Node0xb2cb10;
	Node0xb2cb10 -> Node0xb32858;
	Node0xb32858 -> Node0xb337c8;
	Node0xb337c8 -> Node0xb33e38;
	Node0xb33e38 -> Node0xb33e98;
	Node0xb33e98 -> Node0xb33f10;
	Node0xb33f10 -> Node0xb33f80;
	Node0xb33f80 -> Node0xb33ff0;
	Node0xb33ff0 -> Node0xb34060;
	Node0xb34060 -> Node0xb340d0;
	Node0xb340d0 -> Node0xb34140;
	Node0xb34140 -> Node0xb341b0;
	Node0xb341b0 -> Node0xb34220;
	Node0xb34220 -> Node0xb34290;
	Node0xb34290 -> Node0xb34300;
	Node0xb34300 -> Node0xb34370;
	Node0xb34370 -> Node0xb343e0;
	Node0xb343e0 -> Node0xb34450;
	Node0xb34450 -> Node0xb344c0;
	Node0xb344c0 -> Node0xb34530;
	Node0xb34530 -> Node0xb345a0;
	Node0xb345a0 -> Node0xb34610;
	Node0xb34610 -> Node0xb34680;
	Node0xb34680 -> Node0xb346f0;
	Node0xb346f0 -> Node0xb34760;
	Node0xb34760 -> Node0xb347d0;
	Node0xb347d0 -> Node0xb34840;
	Node0xb34840 -> Node0xb348b0;
	Node0xb348b0 -> Node0xb34920;
	Node0xb34920 -> Node0xb34990;
	Node0xb34990 -> Node0xb34a00;
	Node0xb34a00 -> Node0xb34a70;
	Node0xb34a70 -> Node0xb34ae0;
	Node0xb34ae0 -> Node0xb34b50;
	Node0xb34b50 -> Node0xb34bc0;
	Node0xb34bc0 -> Node0xb34c30;
	Node0xb34c30 -> Node0xb34ca0;
	Node0xb34ca0 -> Node0xb34d10;
	Node0xb34d10 -> Node0xb34d80;
	Node0xb34d80 -> Node0xb34df0;
	Node0xb34df0 -> Node0xb34e60;
	Node0xb34e60 -> Node0xb34ed0;
	Node0xb34ed0 -> Node0xb34f40;
	Node0xb34f40 -> Node0xb34fb0;
	Node0xb34fb0 -> Node0xad18b8;
	Node0xad18b8 -> Node0xb35040;
	Node0xb35040 -> Node0xb352e8;
	Node0xb352e8 -> Node0xb35448;
	Node0xb35448 -> Node0xb35558;
	Node0xb35558 -> Node0xb35668;
	Node0xb35668 -> Node0xb35728;
edge [color=red]
	Node0xb31b48 -> Node0xb31d68;
	Node0xb31d68 -> Node0xb32198;
	Node0xb31bc8 -> Node0xb32278;
	Node0xb32278 -> Node0xb32378;
	Node0xb31c58 -> Node0xb32438;
	Node0xb32438 -> Node0xb324e8;
	Node0xb31cb8 -> Node0xb325a8;
	Node0xb325a8 -> Node0xb32658;
	Node0xb31b48 -> Node0xb2cb10;
	Node0xb31bc8 -> Node0xb2cb10;
	Node0xb31c58 -> Node0xb2cb10;
	Node0xb31cb8 -> Node0xb2cb10;
	Node0xb31b48 -> Node0xb32858;
	Node0xb31bc8 -> Node0xb337c8;
	Node0xb31c58 -> Node0xb33e38;
	Node0xb31cb8 -> Node0xb33e98;
	Node0xb337c8 -> Node0xb33f10;
	Node0xb33e38 -> Node0xb33f80;
	Node0xb33f10 -> Node0xb33f80;
	Node0xb33f80 -> Node0xb33ff0;
	Node0xb33e38 -> Node0xb33ff0;
	Node0xb33e98 -> Node0xb34060;
	Node0xb32858 -> Node0xb34060;
	Node0xb33e98 -> Node0xb340d0;
	Node0xb32858 -> Node0xb340d0;
	Node0xb33ff0 -> Node0xb34140;
	Node0xb34060 -> Node0xb34140;
	Node0xb34140 -> Node0xb341b0;
	Node0xb340d0 -> Node0xb341b0;
	Node0xb33e38 -> Node0xb34220;
	Node0xb337c8 -> Node0xb34220;
	Node0xb33e38 -> Node0xb34290;
	Node0xb33e38 -> Node0xb34300;
	Node0xb33f10 -> Node0xb34300;
	Node0xb33e38 -> Node0xb34370;
	Node0xb337c8 -> Node0xb34370;
	Node0xb34220 -> Node0xb343e0;
	Node0xb343e0 -> Node0xb34450;
	Node0xb33e38 -> Node0xb344c0;
	Node0xb33f10 -> Node0xb344c0;
	Node0xb33e98 -> Node0xb34530;
	Node0xb34530 -> Node0xb345a0;
	Node0xb32858 -> Node0xb34610;
	Node0xb33e98 -> Node0xb34680;
	Node0xb34610 -> Node0xb34680;
	Node0xb33e98 -> Node0xb346f0;
	Node0xb32858 -> Node0xb346f0;
	Node0xb34680 -> Node0xb34760;
	Node0xb33e98 -> Node0xb347d0;
	Node0xb34610 -> Node0xb347d0;
	Node0xb344c0 -> Node0xb34840;
	Node0xb33e98 -> Node0xb34840;
	Node0xb34840 -> Node0xb348b0;
	Node0xb34760 -> Node0xb348b0;
	Node0xb348b0 -> Node0xb34920;
	Node0xb337c8 -> Node0xb34990;
	Node0xb34610 -> Node0xb34990;
	Node0xb34990 -> Node0xb34a00;
	Node0xb34370 -> Node0xb34a00;
	Node0xb34a00 -> Node0xb34a70;
	Node0xb34680 -> Node0xb34a70;
	Node0xb34a70 -> Node0xb34ae0;
	Node0xb32858 -> Node0xb34b50;
	Node0xb34b50 -> Node0xb34bc0;
	Node0xb34290 -> Node0xb34bc0;
	Node0xb34bc0 -> Node0xb34c30;
	Node0xb34220 -> Node0xb34c30;
	Node0xb34c30 -> Node0xb34ca0;
	Node0xb34300 -> Node0xb34ca0;
	Node0xb34ca0 -> Node0xb34d10;
	Node0xb34450 -> Node0xb34d10;
	Node0xb34d10 -> Node0xb34d80;
	Node0xb346f0 -> Node0xb34d80;
	Node0xb34d80 -> Node0xb34df0;
	Node0xb347d0 -> Node0xb34df0;
	Node0xb34df0 -> Node0xb34e60;
	Node0xb345a0 -> Node0xb34e60;
	Node0xb34e60 -> Node0xb34ed0;
	Node0xb34920 -> Node0xb34ed0;
	Node0xb34ed0 -> Node0xb34f40;
	Node0xb34ae0 -> Node0xb34f40;
	Node0xb341b0 -> Node0xb34fb0;
	Node0xb34f40 -> Node0xb34fb0;
	Node0xb34fb0 -> Node0xad18b8;
	Node0xad18b8 -> Node0xb35040;
	Node0xb325a8 -> Node0xb352e8;
	Node0xb32438 -> Node0xb35448;
	Node0xb32278 -> Node0xb35558;
	Node0xb31d68 -> Node0xb35668;
}
