; ModuleID = '../.././c_source_file/0743_path_condition_crackme.c'
source_filename = "../.././c_source_file/0743_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %2, %0
  %5 = xor i32 %4, -1
  %6 = xor i32 %1, %0
  %7 = xor i32 %6, -1
  %8 = and i32 %5, %7
  %9 = or i32 %1, %0
  %10 = xor i32 %9, -1
  %11 = xor i32 %2, %1
  %12 = xor i32 %11, -1
  %13 = or i32 %12, %10
  %14 = sub i32 %13, %8
  %15 = xor i32 %1, -1
  %16 = and i32 %15, %2
  %17 = and i32 %16, %0
  %18 = or i32 %11, %0
  %19 = xor i32 %17, %18
  %20 = xor i32 %2, %0
  %21 = or i32 %20, %7
  %22 = or i32 %2, %0
  %23 = xor i32 %22, -1
  %24 = or i32 %23, %15
  %25 = and i32 %1, %0
  %26 = xor i32 %25, -1
  %27 = and i32 %12, %26
  %28 = and i32 %9, %2
  %29 = and i32 %6, %2
  %30 = or i32 %2, %1
  %31 = xor i32 %12, %0
  %32 = xor i32 %0, -1
  %33 = or i32 %12, %32
  %34 = shl i32 %33, 1
  %35 = xor i32 %20, -1
  %36 = and i32 %35, %1
  %37 = and i32 %35, %26
  %38 = and i32 %15, %0
  %39 = or i32 %38, %2
  %40 = shl i32 %39, 1
  %41 = xor i32 %2, -1
  %42 = or i32 %38, %41
  %43 = and i32 %41, %1
  %44 = or i32 %43, %38
  %45 = add i32 %1, 1
  %46 = or i32 %15, %0
  %47 = and i32 %46, %12
  %48 = and i32 %20, %7
  %49 = or i32 %30, %32
  %50 = and i32 %2, %1
  %51 = and i32 %50, %0
  %52 = and i32 %11, %32
  %53 = xor i32 %51, -1
  %54 = xor i32 %52, %53
  %55 = and i32 %11, %0
  %56 = or i32 %35, %1
  %57 = and i32 %16, %32
  %58 = or i32 %11, %32
  %59 = xor i32 %57, %58
  %60 = or i32 %15, %2
  %61 = and i32 %60, %0
  %62 = or i32 %57, %61
  %63 = shl i32 %12, 1
  %64 = xor i32 %4, %46
  %65 = xor i32 %11, %0
  %66 = xor i32 %65, -1
  %67 = xor i32 %17, %66
  %68 = xor i32 %4, %30
  %69 = or i32 %41, %0
  %70 = or i32 %35, %10
  %71 = and i32 %20, %46
  %72 = and i32 %41, %0
  %73 = or i32 %72, %1
  %74 = shl i32 %73, 1
  %75 = xor i32 %43, -1
  %76 = xor i32 %38, %75
  %77 = or i32 %25, %41
  %78 = or i32 %23, %1
  %79 = xor i32 %43, %0
  %80 = xor i32 %58, 2147483647
  %81 = or i32 %80, %57
  %82 = shl i32 %81, 1
  %83 = or i32 %20, %10
  %84 = and i32 %20, %6
  %85 = xor i32 %46, -1
  %86 = or i32 %11, %85
  %87 = and i32 %69, %1
  %88 = and i32 %50, %32
  %89 = xor i32 %88, -1
  %90 = xor i32 %55, %89
  %91 = and i32 %75, %32
  %92 = or i32 %11, %10
  %93 = or i32 %72, %7
  %94 = xor i32 %30, -1
  %95 = or i32 %94, %32
  %96 = xor i32 %38, -1
  %97 = and i32 %96, %2
  %98 = and i32 %11, %9
  %99 = shl i32 %98, 2
  %100 = and i32 %26, %2
  %101 = xor i32 %46, %2
  %102 = shl i32 %2, 1
  %103 = and i32 %35, %7
  %104 = or i32 %11, %25
  %105 = and i32 %30, %0
  %106 = xor i32 %105, %89
  %107 = xor i32 %96, %2
  %108 = and i32 %20, %26
  %109 = and i32 %12, %32
  %110 = or i32 %25, %2
  %111 = and i32 %30, %32
  %112 = or i32 %85, %2
  %113 = shl i32 %112, 1
  %114 = and i32 %20, %15
  %115 = or i32 %20, %6
  %116 = add i32 %25, 1
  %117 = and i32 %12, %96
  %118 = shl i32 %11, 1
  %119 = and i32 %6, %5
  %120 = shl i32 %23, 1
  %121 = and i32 %46, %41
  %122 = xor i32 %72, -1
  %123 = and i32 %122, %7
  %124 = shl i32 %123, 1
  %125 = or i32 %88, %55
  %126 = and i32 %69, %7
  %127 = or i32 %75, %32
  %128 = or i32 %51, %111
  %129 = or i32 %75, %0
  %130 = or i32 %72, %15
  %131 = xor i32 %69, -1
  %132 = or i32 %131, %15
  %133 = xor i32 %50, %0
  %134 = and i32 %69, %15
  %135 = and i32 %7, %2
  %136 = xor i32 %50, -1
  %137 = or i32 %136, %0
  %138 = or i32 %30, %0
  %139 = and i32 %20, %9
  %140 = xor i32 %75, %0
  %141 = xor i32 %60, %0
  %142 = xor i32 %141, -1
  %143 = xor i32 %17, %142
  %144 = and i32 %11, %46
  %145 = xor i32 %30, %0
  %146 = or i32 %51, %145
  %147 = or i32 %51, %52
  %148 = xor i32 %10, %2
  %149 = and i32 %136, %32
  %150 = or i32 %12, %85
  %151 = and i32 %9, %41
  %152 = xor i32 %5, %1
  %153 = or i32 %131, %7
  %154 = xor i32 %30, %25
  %155 = or i32 %41, %1
  %156 = shl i32 %155, 1
  %157 = and i32 %122, %15
  %158 = and i32 %22, %7
  %159 = xor i32 %23, %1
  %160 = xor i32 %155, %0
  %161 = or i32 %11, %38
  %162 = or i32 %10, %2
  %163 = or i32 %25, %23
  %164 = and i32 %41, %96
  %165 = and i32 %20, %96
  %166 = or i32 %25, %94
  %167 = xor i32 %122, %1
  %168 = and i32 %136, %0
  %169 = or i32 %23, %7
  %170 = xor i32 %155, -1
  %171 = or i32 %72, %170
  %172 = shl i32 %171, 1
  %173 = or i32 %6, %2
  %174 = xor i32 %145, %53
  %175 = or i32 %20, %25
  %176 = and i32 %60, %32
  %177 = or i32 %17, %176
  %178 = or i32 %41, %10
  %179 = xor i32 %18, 2147483647
  %180 = or i32 %179, %17
  %181 = shl i32 %180, 1
  %182 = or i32 %35, %7
  %183 = and i32 %22, %15
  %184 = or i32 %20, %1
  %185 = shl i32 %184, 1
  %186 = or i32 %155, %32
  %187 = or i32 %170, %32
  %188 = and i32 %5, %15
  %189 = and i32 %12, %0
  %190 = shl i32 %96, 1
  %191 = xor i32 %85, %2
  %192 = xor i32 %4, %9
  %193 = or i32 %25, %131
  %194 = shl i32 %193, 1
  %195 = or i32 %170, %0
  %196 = shl i32 %41, 1
  %197 = or i32 %4, %94
  %198 = or i32 %25, %35
  %199 = or i32 %6, %131
  %200 = xor i32 %72, %136
  %201 = or i32 %25, %12
  %202 = and i32 %75, %0
  %203 = shl i32 %202, 1
  %204 = or i32 %20, %15
  %205 = or i32 %7, %2
  %206 = and i32 %35, %15
  %207 = or i32 %88, %105
  %208 = or i32 %72, %6
  %209 = or i32 %4, %15
  %210 = or i32 %50, %32
  %211 = and i32 %69, %6
  %212 = add i32 %30, 1
  %213 = or i32 %6, %41
  %214 = or i32 %50, %38
  %215 = and i32 %41, %26
  %216 = and i32 %6, %41
  %217 = or i32 %136, %32
  %218 = or i32 %41, %7
  %219 = or i32 %51, %66
  %220 = or i32 %4, %6
  %221 = xor i32 %94, %0
  %222 = xor i32 %22, %25
  %223 = and i32 %20, %1
  %224 = xor i32 %72, %155
  %225 = or i32 %6, %35
  %226 = shl i32 %225, 1
  %227 = or i32 %43, %0
  %228 = and i32 %155, %32
  %229 = and i32 %155, %0
  %230 = or i32 %6, %23
  %231 = or i32 %17, %65
  %232 = or i32 %35, %15
  %233 = shl i32 %4, 1
  %234 = or i32 %4, %7
  %235 = xor i32 %61, 2147483647
  %236 = xor i32 %235, %57
  %237 = shl i32 %236, 1
  %238 = and i32 %35, %96
  %239 = xor i32 %155, %25
  %240 = or i32 %17, %141
  %241 = xor i32 %4, %75
  %242 = and i32 %22, %6
  %243 = and i32 %46, %35
  %244 = add i32 %155, 1
  %245 = xor i32 %22, %1
  %246 = and i32 %9, %12
  %247 = or i32 %155, %0
  %248 = or i32 %41, %85
  %249 = shl i32 %248, 1
  %250 = xor i32 %136, %0
  %251 = and i32 %9, %35
  %252 = and i32 %94, %32
  %253 = mul i32 %252, -14
  %254 = and i32 %43, %32
  %255 = mul i32 %254, -11
  %256 = and i32 %94, %0
  %257 = mul i32 %256, -19
  %258 = and i32 %43, %0
  %259 = mul i32 %258, -22
  %260 = and i32 %170, %32
  %261 = mul i32 %260, -24
  %262 = shl i32 %88, 2
  %263 = mul i32 %51, -7
  %264 = add i32 %35, %85
  %265 = add i32 %264, %136
  %266 = add i32 %265, %77
  %267 = add i32 %266, %250
  %268 = add i32 %267, %246
  %269 = add i32 %268, %245
  %270 = add i32 %269, %224
  %271 = add i32 %270, %217
  %272 = add i32 %271, %199
  %273 = add i32 %272, %195
  %274 = add i32 %273, %188
  %275 = add i32 %274, %175
  %276 = add i32 %275, %18
  %277 = add i32 %276, %133
  %278 = add i32 %277, %127
  %279 = add i32 %278, %93
  %280 = add i32 %279, %68
  %281 = add i32 %280, %48
  %282 = add i32 %281, %21
  %283 = add i32 %282, %231
  %284 = shl i32 %283, 1
  %285 = sub i32 %164, %29
  %286 = sub i32 %285, %239
  %287 = add i32 %286, %114
  %288 = add i32 %287, %49
  %289 = sub i32 %288, %207
  %290 = mul i32 %289, 3
  %291 = add i32 %241, -1
  %292 = add i32 %291, %36
  %293 = sub i32 %292, %62
  %294 = mul i32 %293, 5
  %295 = add i32 %147, %86
  %296 = shl i32 %295, 2
  %297 = sub i32 %45, %0
  %298 = add i32 %297, %25
  %299 = add i32 %298, %7
  %300 = add i32 %299, %116
  %301 = add i32 %300, %38
  %302 = sub i32 %301, %6
  %303 = add i32 %302, %28
  %304 = add i32 %303, %30
  %305 = add i32 %304, %42
  %306 = sub i32 %305, %50
  %307 = sub i32 %306, %69
  %308 = sub i32 %307, %97
  %309 = add i32 %308, %100
  %310 = add i32 %309, %101
  %311 = sub i32 %310, %102
  %312 = sub i32 %311, %107
  %313 = add i32 %312, %20
  %314 = add i32 %313, %110
  %315 = sub i32 %314, %121
  %316 = add i32 %315, %135
  %317 = add i32 %316, %148
  %318 = add i32 %317, %22
  %319 = sub i32 %318, %151
  %320 = add i32 %319, %75
  %321 = sub i32 %320, %162
  %322 = sub i32 %321, %173
  %323 = sub i32 %322, %178
  %324 = sub i32 %323, %190
  %325 = sub i32 %324, %191
  %326 = sub i32 %325, %196
  %327 = add i32 %326, %205
  %328 = sub i32 %327, %72
  %329 = add i32 %328, %212
  %330 = add i32 %329, %213
  %331 = sub i32 %330, %215
  %332 = add i32 %331, %216
  %333 = add i32 %332, %218
  %334 = add i32 %333, %244
  %335 = add i32 %334, %24
  %336 = sub i32 %335, %27
  %337 = add i32 %336, %31
  %338 = add i32 %337, %37
  %339 = sub i32 %338, %40
  %340 = add i32 %339, %44
  %341 = add i32 %340, %47
  %342 = sub i32 %341, %55
  %343 = add i32 %342, %56
  %344 = sub i32 %343, %63
  %345 = add i32 %344, %64
  %346 = sub i32 %345, %70
  %347 = add i32 %346, %71
  %348 = add i32 %347, %76
  %349 = sub i32 %348, %78
  %350 = add i32 %349, %79
  %351 = add i32 %350, %83
  %352 = add i32 %351, %84
  %353 = sub i32 %352, %87
  %354 = sub i32 %353, %91
  %355 = sub i32 %354, %92
  %356 = add i32 %355, %95
  %357 = add i32 %356, %103
  %358 = sub i32 %357, %104
  %359 = sub i32 %358, %108
  %360 = add i32 %359, %109
  %361 = sub i32 %360, %111
  %362 = sub i32 %361, %65
  %363 = sub i32 %362, %113
  %364 = add i32 %363, %115
  %365 = sub i32 %364, %117
  %366 = sub i32 %365, %118
  %367 = add i32 %366, %119
  %368 = sub i32 %367, %120
  %369 = add i32 %368, %126
  %370 = add i32 %369, %129
  %371 = add i32 %370, %130
  %372 = add i32 %371, %132
  %373 = sub i32 %372, %58
  %374 = sub i32 %373, %105
  %375 = sub i32 %374, %134
  %376 = sub i32 %375, %137
  %377 = add i32 %376, %138
  %378 = sub i32 %377, %139
  %379 = sub i32 %378, %140
  %380 = add i32 %379, %144
  %381 = add i32 %380, %149
  %382 = add i32 %381, %150
  %383 = sub i32 %382, %152
  %384 = sub i32 %383, %153
  %385 = sub i32 %384, %154
  %386 = sub i32 %385, %156
  %387 = sub i32 %386, %157
  %388 = add i32 %387, %158
  %389 = add i32 %388, %159
  %390 = sub i32 %389, %160
  %391 = sub i32 %390, %161
  %392 = sub i32 %391, %163
  %393 = sub i32 %392, %165
  %394 = add i32 %393, %166
  %395 = add i32 %394, %167
  %396 = sub i32 %395, %168
  %397 = sub i32 %396, %169
  %398 = add i32 %397, %182
  %399 = add i32 %398, %183
  %400 = sub i32 %399, %186
  %401 = sub i32 %400, %187
  %402 = add i32 %401, %189
  %403 = add i32 %402, %192
  %404 = add i32 %403, %197
  %405 = sub i32 %404, %198
  %406 = sub i32 %405, %200
  %407 = add i32 %406, %201
  %408 = add i32 %407, %204
  %409 = add i32 %408, %206
  %410 = sub i32 %409, %208
  %411 = sub i32 %410, %209
  %412 = sub i32 %411, %210
  %413 = add i32 %412, %211
  %414 = sub i32 %413, %214
  %415 = add i32 %414, %220
  %416 = add i32 %415, %221
  %417 = add i32 %416, %222
  %418 = add i32 %417, %223
  %419 = add i32 %418, %227
  %420 = add i32 %419, %228
  %421 = sub i32 %420, %229
  %422 = sub i32 %421, %145
  %423 = sub i32 %422, %230
  %424 = sub i32 %423, %232
  %425 = sub i32 %424, %233
  %426 = add i32 %425, %234
  %427 = add i32 %426, %238
  %428 = sub i32 %427, %242
  %429 = sub i32 %428, %243
  %430 = add i32 %429, %247
  %431 = sub i32 %430, %249
  %432 = sub i32 %431, %251
  %433 = add i32 %432, %19
  %434 = sub i32 %433, %34
  %435 = add i32 %434, %54
  %436 = sub i32 %435, %59
  %437 = add i32 %436, %67
  %438 = sub i32 %437, %74
  %439 = sub i32 %438, %90
  %440 = sub i32 %439, %99
  %441 = add i32 %440, %106
  %442 = sub i32 %441, %124
  %443 = add i32 %442, %125
  %444 = add i32 %443, %128
  %445 = add i32 %444, %143
  %446 = sub i32 %445, %146
  %447 = sub i32 %446, %172
  %448 = add i32 %447, %174
  %449 = sub i32 %448, %177
  %450 = sub i32 %449, %185
  %451 = sub i32 %450, %194
  %452 = sub i32 %451, %203
  %453 = sub i32 %452, %219
  %454 = sub i32 %453, %226
  %455 = sub i32 %454, %240
  %456 = add i32 %455, %253
  %457 = add i32 %456, %255
  %458 = add i32 %457, %257
  %459 = add i32 %458, %259
  %460 = add i32 %459, %261
  %461 = sub i32 %460, %262
  %462 = add i32 %461, %263
  %463 = sub i32 %462, %82
  %464 = sub i32 %463, %181
  %465 = sub i32 %464, %237
  %466 = add i32 %465, %296
  %467 = add i32 %466, %294
  %468 = add i32 %467, %290
  %469 = add i32 %468, %284
  %470 = icmp eq i32 %14, %469
  %471 = select i1 %470, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %472 = tail call i32 @puts(i8* nonnull dereferenceable(1) %471)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
