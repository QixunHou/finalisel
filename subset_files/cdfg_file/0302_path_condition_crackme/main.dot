digraph "DFG for'main' function" {
	Node0x1fe6e08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1fe6e88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1fe6f18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1fe6f78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1fe7028[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1fe7458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1fe7538[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1fe7638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1fe76f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1fe77a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1fe7868[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1fe7918[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1fe17d0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1fe7b18[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1fe8a88[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1fe90f8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1fe9158[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1fe9268[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1fe94c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1fe9628[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1fe9738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1fe9848[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1fe9908[shape=record, label="  ret i32 0"];
	Node0x1fe6e08 -> Node0x1fe6e88;
	Node0x1fe6e88 -> Node0x1fe6f18;
	Node0x1fe6f18 -> Node0x1fe6f78;
	Node0x1fe6f78 -> Node0x1fe7028;
	Node0x1fe7028 -> Node0x1fe7458;
	Node0x1fe7458 -> Node0x1fe7538;
	Node0x1fe7538 -> Node0x1fe7638;
	Node0x1fe7638 -> Node0x1fe76f8;
	Node0x1fe76f8 -> Node0x1fe77a8;
	Node0x1fe77a8 -> Node0x1fe7868;
	Node0x1fe7868 -> Node0x1fe7918;
	Node0x1fe7918 -> Node0x1fe17d0;
	Node0x1fe17d0 -> Node0x1fe7b18;
	Node0x1fe7b18 -> Node0x1fe8a88;
	Node0x1fe8a88 -> Node0x1fe90f8;
	Node0x1fe90f8 -> Node0x1fe9158;
	Node0x1fe9158 -> Node0x1fe9268;
	Node0x1fe9268 -> Node0x1fe94c8;
	Node0x1fe94c8 -> Node0x1fe9628;
	Node0x1fe9628 -> Node0x1fe9738;
	Node0x1fe9738 -> Node0x1fe9848;
	Node0x1fe9848 -> Node0x1fe9908;
edge [color=red]
	Node0x1fe6e08 -> Node0x1fe7028;
	Node0x1fe7028 -> Node0x1fe7458;
	Node0x1fe6e88 -> Node0x1fe7538;
	Node0x1fe7538 -> Node0x1fe7638;
	Node0x1fe6f18 -> Node0x1fe76f8;
	Node0x1fe76f8 -> Node0x1fe77a8;
	Node0x1fe6f78 -> Node0x1fe7868;
	Node0x1fe7868 -> Node0x1fe7918;
	Node0x1fe6e08 -> Node0x1fe17d0;
	Node0x1fe6e88 -> Node0x1fe17d0;
	Node0x1fe6f18 -> Node0x1fe17d0;
	Node0x1fe6f78 -> Node0x1fe17d0;
	Node0x1fe6e08 -> Node0x1fe7b18;
	Node0x1fe6e88 -> Node0x1fe8a88;
	Node0x1fe6f18 -> Node0x1fe90f8;
	Node0x1fe6f78 -> Node0x1fe9158;
	Node0x1fe7b18 -> Node0x1fe9268;
	Node0x1fe8a88 -> Node0x1fe9268;
	Node0x1fe90f8 -> Node0x1fe9268;
	Node0x1fe9158 -> Node0x1fe9268;
	Node0x1fe7868 -> Node0x1fe94c8;
	Node0x1fe76f8 -> Node0x1fe9628;
	Node0x1fe7538 -> Node0x1fe9738;
	Node0x1fe7028 -> Node0x1fe9848;
}
