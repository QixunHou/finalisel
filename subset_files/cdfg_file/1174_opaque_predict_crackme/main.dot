digraph "DFG for'main' function" {
	Node0x1a68c28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a68ca8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a68d38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1a68d98[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1a69218[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a692f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1a693f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a694b8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1a69568[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a697c8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1a69888[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a699e8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a69a48[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1a6d9e0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1a6dbe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a6dd48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a6de58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a6df18[shape=record, label="  ret i32 0"];
	Node0x1a68c28 -> Node0x1a68ca8;
	Node0x1a68ca8 -> Node0x1a68d38;
	Node0x1a68d38 -> Node0x1a68d98;
	Node0x1a68d98 -> Node0x1a69218;
	Node0x1a69218 -> Node0x1a692f8;
	Node0x1a692f8 -> Node0x1a693f8;
	Node0x1a693f8 -> Node0x1a694b8;
	Node0x1a694b8 -> Node0x1a69568;
	Node0x1a69568 -> Node0x1a697c8;
	Node0x1a697c8 -> Node0x1a69888;
	Node0x1a69888 -> Node0x1a699e8;
	Node0x1a699e8 -> Node0x1a69a48;
	Node0x1a69a48 -> Node0x1a6d9e0;
	Node0x1a6d9e0 -> Node0x1a6dbe8;
	Node0x1a6dbe8 -> Node0x1a6dd48;
	Node0x1a6dd48 -> Node0x1a6de58;
	Node0x1a6de58 -> Node0x1a6df18;
edge [color=red]
	Node0x1a68c28 -> Node0x1a68d98;
	Node0x1a68d98 -> Node0x1a69218;
	Node0x1a68ca8 -> Node0x1a692f8;
	Node0x1a692f8 -> Node0x1a693f8;
	Node0x1a68d38 -> Node0x1a694b8;
	Node0x1a694b8 -> Node0x1a69568;
	Node0x1a68c28 -> Node0x1a697c8;
	Node0x1a68ca8 -> Node0x1a697c8;
	Node0x1a68d38 -> Node0x1a697c8;
	Node0x1a68c28 -> Node0x1a69888;
	Node0x1a68ca8 -> Node0x1a699e8;
	Node0x1a68d38 -> Node0x1a69a48;
	Node0x1a69888 -> Node0x1a6d9e0;
	Node0x1a699e8 -> Node0x1a6d9e0;
	Node0x1a69a48 -> Node0x1a6d9e0;
	Node0x1a694b8 -> Node0x1a6dbe8;
	Node0x1a692f8 -> Node0x1a6dd48;
	Node0x1a68d98 -> Node0x1a6de58;
}
