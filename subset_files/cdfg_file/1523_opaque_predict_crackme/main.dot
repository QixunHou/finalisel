digraph "DFG for'main' function" {
	Node0x1ac1d88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ac1e08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ac1e98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1ac22f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ac23d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1ac24f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ac2730[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1ac27e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ac3758[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ac3de0[shape=record, label="  %8 = add i32 %6, 1"];
	Node0x1ac3e50[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x1ac3ec0[shape=record, label="  %10 = or i32 %6, %9"];
	Node0x1ac3f30[shape=record, label="  %11 = mul i32 %10, 5"];
	Node0x1ac3fa0[shape=record, label="  %12 = add i32 %8, %11"];
	Node0x1ac4010[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x1ac4080[shape=record, label="  %14 = sub i32 %13, %6"];
	Node0x1ac40f0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1ac4160[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x1ac41d0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1ac4240[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x1ac42b0[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x1ac4320[shape=record, label="  %20 = mul i32 %19, 3"];
	Node0x1ac4390[shape=record, label="  %21 = shl i32 %10, 2"];
	Node0x1ac4400[shape=record, label="  %22 = xor i32 %21, -4"];
	Node0x1ac4470[shape=record, label="  %23 = and i32 %6, %9"];
	Node0x1ac44e0[shape=record, label="  %24 = shl i32 %23, 2"];
	Node0x1ac4550[shape=record, label="  %25 = mul i32 %16, 7"];
	Node0x1ac45c0[shape=record, label="  %26 = add i32 %20, %17"];
	Node0x1ac4630[shape=record, label="  %27 = add i32 %26, %24"];
	Node0x1ac46a0[shape=record, label="  %28 = add i32 %27, %25"];
	Node0x1ac4710[shape=record, label="  %29 = add i32 %28, %15"];
	Node0x1ac4780[shape=record, label="  %30 = sub i32 %29, %22"];
	Node0x1ac47f0[shape=record, label="  %31 = icmp eq i32 %12, %30"];
	Node0x1a629d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ac4a90[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x1ac4ce8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ac4e48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ac4f08[shape=record, label="  ret i32 0"];
	Node0x1ac1d88 -> Node0x1ac1e08;
	Node0x1ac1e08 -> Node0x1ac1e98;
	Node0x1ac1e98 -> Node0x1ac22f8;
	Node0x1ac22f8 -> Node0x1ac23d8;
	Node0x1ac23d8 -> Node0x1ac24f8;
	Node0x1ac24f8 -> Node0x1ac2730;
	Node0x1ac2730 -> Node0x1ac27e8;
	Node0x1ac27e8 -> Node0x1ac3758;
	Node0x1ac3758 -> Node0x1ac3de0;
	Node0x1ac3de0 -> Node0x1ac3e50;
	Node0x1ac3e50 -> Node0x1ac3ec0;
	Node0x1ac3ec0 -> Node0x1ac3f30;
	Node0x1ac3f30 -> Node0x1ac3fa0;
	Node0x1ac3fa0 -> Node0x1ac4010;
	Node0x1ac4010 -> Node0x1ac4080;
	Node0x1ac4080 -> Node0x1ac40f0;
	Node0x1ac40f0 -> Node0x1ac4160;
	Node0x1ac4160 -> Node0x1ac41d0;
	Node0x1ac41d0 -> Node0x1ac4240;
	Node0x1ac4240 -> Node0x1ac42b0;
	Node0x1ac42b0 -> Node0x1ac4320;
	Node0x1ac4320 -> Node0x1ac4390;
	Node0x1ac4390 -> Node0x1ac4400;
	Node0x1ac4400 -> Node0x1ac4470;
	Node0x1ac4470 -> Node0x1ac44e0;
	Node0x1ac44e0 -> Node0x1ac4550;
	Node0x1ac4550 -> Node0x1ac45c0;
	Node0x1ac45c0 -> Node0x1ac4630;
	Node0x1ac4630 -> Node0x1ac46a0;
	Node0x1ac46a0 -> Node0x1ac4710;
	Node0x1ac4710 -> Node0x1ac4780;
	Node0x1ac4780 -> Node0x1ac47f0;
	Node0x1ac47f0 -> Node0x1a629d8;
	Node0x1a629d8 -> Node0x1ac4a90;
	Node0x1ac4a90 -> Node0x1ac4ce8;
	Node0x1ac4ce8 -> Node0x1ac4e48;
	Node0x1ac4e48 -> Node0x1ac4f08;
edge [color=red]
	Node0x1ac1d88 -> Node0x1ac1e98;
	Node0x1ac1e98 -> Node0x1ac22f8;
	Node0x1ac1e08 -> Node0x1ac23d8;
	Node0x1ac23d8 -> Node0x1ac24f8;
	Node0x1ac1d88 -> Node0x1ac2730;
	Node0x1ac1e08 -> Node0x1ac2730;
	Node0x1ac1d88 -> Node0x1ac27e8;
	Node0x1ac1e08 -> Node0x1ac3758;
	Node0x1ac27e8 -> Node0x1ac3de0;
	Node0x1ac3758 -> Node0x1ac3e50;
	Node0x1ac27e8 -> Node0x1ac3ec0;
	Node0x1ac3e50 -> Node0x1ac3ec0;
	Node0x1ac3ec0 -> Node0x1ac3f30;
	Node0x1ac3de0 -> Node0x1ac3fa0;
	Node0x1ac3f30 -> Node0x1ac3fa0;
	Node0x1ac3758 -> Node0x1ac4010;
	Node0x1ac27e8 -> Node0x1ac4010;
	Node0x1ac4010 -> Node0x1ac4080;
	Node0x1ac27e8 -> Node0x1ac4080;
	Node0x1ac4080 -> Node0x1ac40f0;
	Node0x1ac3758 -> Node0x1ac4160;
	Node0x1ac27e8 -> Node0x1ac4160;
	Node0x1ac4160 -> Node0x1ac41d0;
	Node0x1ac3758 -> Node0x1ac4240;
	Node0x1ac27e8 -> Node0x1ac4240;
	Node0x1ac4240 -> Node0x1ac42b0;
	Node0x1ac42b0 -> Node0x1ac4320;
	Node0x1ac3ec0 -> Node0x1ac4390;
	Node0x1ac4390 -> Node0x1ac4400;
	Node0x1ac27e8 -> Node0x1ac4470;
	Node0x1ac3e50 -> Node0x1ac4470;
	Node0x1ac4470 -> Node0x1ac44e0;
	Node0x1ac4160 -> Node0x1ac4550;
	Node0x1ac4320 -> Node0x1ac45c0;
	Node0x1ac41d0 -> Node0x1ac45c0;
	Node0x1ac45c0 -> Node0x1ac4630;
	Node0x1ac44e0 -> Node0x1ac4630;
	Node0x1ac4630 -> Node0x1ac46a0;
	Node0x1ac4550 -> Node0x1ac46a0;
	Node0x1ac46a0 -> Node0x1ac4710;
	Node0x1ac40f0 -> Node0x1ac4710;
	Node0x1ac4710 -> Node0x1ac4780;
	Node0x1ac4400 -> Node0x1ac4780;
	Node0x1ac3fa0 -> Node0x1ac47f0;
	Node0x1ac4780 -> Node0x1ac47f0;
	Node0x1ac47f0 -> Node0x1a629d8;
	Node0x1a629d8 -> Node0x1ac4a90;
	Node0x1ac23d8 -> Node0x1ac4ce8;
	Node0x1ac1e98 -> Node0x1ac4e48;
}
