digraph "DFG for'main' function" {
	Node0x1b97b48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b97bc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b97c58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1b980b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1b98198[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1b982b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b984f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1b985a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b99518[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b99ba0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x1b99c10[shape=record, label="  %9 = shl i32 %7, 1"];
	Node0x1b99c80[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x1b99cf0[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1b99d60[shape=record, label="  %12 = or i32 %6, %11"];
	Node0x1b99dd0[shape=record, label="  %13 = shl i32 %10, 1"];
	Node0x1b99e40[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1b99eb0[shape=record, label="  %15 = shl i32 %12, 2"];
	Node0x1b99f20[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x1b99f90[shape=record, label="  %17 = and i32 %6, %11"];
	Node0x1b9a000[shape=record, label="  %18 = add i32 %8, %6"];
	Node0x1b9a070[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1b9a0e0[shape=record, label="  %20 = add i32 %8, 2"];
	Node0x1b9a150[shape=record, label="  %21 = sub i32 %20, %9"];
	Node0x1b9a1c0[shape=record, label="  %22 = sub i32 %21, %10"];
	Node0x1b9a230[shape=record, label="  %23 = sub i32 %22, %12"];
	Node0x1b9a2a0[shape=record, label="  %24 = add i32 %23, %17"];
	Node0x1b9a310[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x1b9a380[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x1b9a3f0[shape=record, label="  %27 = add i32 %26, %19"];
	Node0x1b9a460[shape=record, label="  %28 = icmp eq i32 %27, 1"];
	Node0x1b389d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1b9a4f0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x1b9a748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b9a8a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1b9a968[shape=record, label="  ret i32 0"];
	Node0x1b97b48 -> Node0x1b97bc8;
	Node0x1b97bc8 -> Node0x1b97c58;
	Node0x1b97c58 -> Node0x1b980b8;
	Node0x1b980b8 -> Node0x1b98198;
	Node0x1b98198 -> Node0x1b982b8;
	Node0x1b982b8 -> Node0x1b984f0;
	Node0x1b984f0 -> Node0x1b985a8;
	Node0x1b985a8 -> Node0x1b99518;
	Node0x1b99518 -> Node0x1b99ba0;
	Node0x1b99ba0 -> Node0x1b99c10;
	Node0x1b99c10 -> Node0x1b99c80;
	Node0x1b99c80 -> Node0x1b99cf0;
	Node0x1b99cf0 -> Node0x1b99d60;
	Node0x1b99d60 -> Node0x1b99dd0;
	Node0x1b99dd0 -> Node0x1b99e40;
	Node0x1b99e40 -> Node0x1b99eb0;
	Node0x1b99eb0 -> Node0x1b99f20;
	Node0x1b99f20 -> Node0x1b99f90;
	Node0x1b99f90 -> Node0x1b9a000;
	Node0x1b9a000 -> Node0x1b9a070;
	Node0x1b9a070 -> Node0x1b9a0e0;
	Node0x1b9a0e0 -> Node0x1b9a150;
	Node0x1b9a150 -> Node0x1b9a1c0;
	Node0x1b9a1c0 -> Node0x1b9a230;
	Node0x1b9a230 -> Node0x1b9a2a0;
	Node0x1b9a2a0 -> Node0x1b9a310;
	Node0x1b9a310 -> Node0x1b9a380;
	Node0x1b9a380 -> Node0x1b9a3f0;
	Node0x1b9a3f0 -> Node0x1b9a460;
	Node0x1b9a460 -> Node0x1b389d8;
	Node0x1b389d8 -> Node0x1b9a4f0;
	Node0x1b9a4f0 -> Node0x1b9a748;
	Node0x1b9a748 -> Node0x1b9a8a8;
	Node0x1b9a8a8 -> Node0x1b9a968;
edge [color=red]
	Node0x1b97b48 -> Node0x1b97c58;
	Node0x1b97c58 -> Node0x1b980b8;
	Node0x1b97bc8 -> Node0x1b98198;
	Node0x1b98198 -> Node0x1b982b8;
	Node0x1b97b48 -> Node0x1b984f0;
	Node0x1b97bc8 -> Node0x1b984f0;
	Node0x1b97b48 -> Node0x1b985a8;
	Node0x1b97bc8 -> Node0x1b99518;
	Node0x1b99518 -> Node0x1b99ba0;
	Node0x1b985a8 -> Node0x1b99ba0;
	Node0x1b99518 -> Node0x1b99c10;
	Node0x1b99518 -> Node0x1b99c80;
	Node0x1b985a8 -> Node0x1b99c80;
	Node0x1b99518 -> Node0x1b99cf0;
	Node0x1b985a8 -> Node0x1b99d60;
	Node0x1b99cf0 -> Node0x1b99d60;
	Node0x1b99c80 -> Node0x1b99dd0;
	Node0x1b99dd0 -> Node0x1b99e40;
	Node0x1b99d60 -> Node0x1b99eb0;
	Node0x1b99eb0 -> Node0x1b99f20;
	Node0x1b985a8 -> Node0x1b99f90;
	Node0x1b99cf0 -> Node0x1b99f90;
	Node0x1b99ba0 -> Node0x1b9a000;
	Node0x1b985a8 -> Node0x1b9a000;
	Node0x1b9a000 -> Node0x1b9a070;
	Node0x1b99ba0 -> Node0x1b9a0e0;
	Node0x1b9a0e0 -> Node0x1b9a150;
	Node0x1b99c10 -> Node0x1b9a150;
	Node0x1b9a150 -> Node0x1b9a1c0;
	Node0x1b99c80 -> Node0x1b9a1c0;
	Node0x1b9a1c0 -> Node0x1b9a230;
	Node0x1b99d60 -> Node0x1b9a230;
	Node0x1b9a230 -> Node0x1b9a2a0;
	Node0x1b99f90 -> Node0x1b9a2a0;
	Node0x1b9a2a0 -> Node0x1b9a310;
	Node0x1b99e40 -> Node0x1b9a310;
	Node0x1b9a310 -> Node0x1b9a380;
	Node0x1b99f20 -> Node0x1b9a380;
	Node0x1b9a380 -> Node0x1b9a3f0;
	Node0x1b9a070 -> Node0x1b9a3f0;
	Node0x1b9a3f0 -> Node0x1b9a460;
	Node0x1b9a460 -> Node0x1b389d8;
	Node0x1b389d8 -> Node0x1b9a4f0;
	Node0x1b98198 -> Node0x1b9a748;
	Node0x1b97c58 -> Node0x1b9a8a8;
}
