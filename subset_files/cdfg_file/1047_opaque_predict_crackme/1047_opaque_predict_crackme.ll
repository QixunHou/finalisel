; ModuleID = '../.././c_source_file/1047_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1047_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = and i32 %2, %1
  %9 = and i32 %8, %7
  %10 = xor i32 %2, %1
  %11 = and i32 %10, %0
  %12 = or i32 %9, %11
  %13 = xor i32 %5, -1
  %14 = or i32 %13, %4
  %15 = xor i32 %14, %3
  %16 = sub i32 %12, %15
  %17 = or i32 %5, %4
  %18 = xor i32 %4, %3
  %19 = and i32 %17, %18
  %20 = sub i32 %16, %19
  %21 = xor i32 %1, -1
  %22 = and i32 %21, %0
  %23 = xor i32 %22, -1
  %24 = and i32 %23, %2
  %25 = or i32 %21, %0
  %26 = and i32 %25, %2
  %27 = and i32 %1, %0
  %28 = or i32 %2, %0
  %29 = xor i32 %28, %27
  %30 = xor i32 %2, -1
  %31 = and i32 %2, %0
  %32 = or i32 %31, %1
  %33 = xor i32 %9, -1
  %34 = xor i32 %11, %33
  %35 = and i32 %21, %2
  %36 = and i32 %35, %0
  %37 = xor i32 %10, %0
  %38 = xor i32 %37, -1
  %39 = xor i32 %36, %38
  %40 = xor i32 %31, -1
  %41 = and i32 %40, %1
  %42 = and i32 %30, %1
  %43 = xor i32 %42, -1
  %44 = or i32 %43, %7
  %45 = shl i32 %44, 1
  %46 = or i32 %10, %0
  %47 = or i32 %2, %1
  %48 = or i32 %47, %0
  %49 = xor i32 %1, %0
  %50 = and i32 %28, %49
  %51 = and i32 %35, %7
  %52 = or i32 %21, %2
  %53 = and i32 %52, %0
  %54 = or i32 %51, %53
  %55 = xor i32 %43, %0
  %56 = xor i32 %2, %0
  %57 = xor i32 %56, -1
  %58 = and i32 %57, %23
  %59 = shl i32 %10, 1
  %60 = or i32 %30, %0
  %61 = xor i32 %60, -1
  %62 = xor i32 %61, %1
  %63 = shl i32 %62, 1
  %64 = xor i32 %27, -1
  %65 = and i32 %57, %64
  %66 = and i32 %10, %25
  %67 = xor i32 %49, -1
  %68 = and i32 %60, %67
  %69 = xor i32 %10, -1
  %70 = and i32 %69, %0
  %71 = and i32 %30, %0
  %72 = or i32 %71, %49
  %73 = shl i32 %72, 1
  %74 = or i32 %42, %0
  %75 = shl i32 %74, 1
  %76 = xor i32 %47, %27
  %77 = or i32 %61, %1
  %78 = shl i32 %77, 1
  %79 = and i32 %30, %67
  %80 = or i32 %1, %0
  %81 = and i32 %80, %30
  %82 = and i32 %10, %23
  %83 = or i32 %61, %21
  %84 = xor i32 %8, -1
  %85 = or i32 %84, %0
  %86 = xor i32 %52, %0
  %87 = xor i32 %86, -1
  %88 = xor i32 %36, %87
  %89 = xor i32 %31, %80
  %90 = or i32 %22, %69
  %91 = xor i32 %25, -1
  %92 = xor i32 %91, %2
  %93 = xor i32 %47, -1
  %94 = and i32 %8, %0
  %95 = xor i32 %94, %37
  %96 = or i32 %91, %2
  %97 = xor i32 %28, -1
  %98 = xor i32 %97, %1
  %99 = and i32 %43, %7
  %100 = or i32 %69, %0
  %101 = and i32 %56, %67
  %102 = or i32 %31, %91
  %103 = and i32 %56, %64
  %104 = and i32 %47, %7
  %105 = and i32 %80, %57
  %106 = and i32 %10, %7
  %107 = or i32 %93, %7
  %108 = or i32 %71, %67
  %109 = xor i32 %42, %0
  %110 = or i32 %56, %22
  %111 = or i32 %30, %1
  %112 = xor i32 %71, %111
  %113 = xor i32 %111, %0
  %114 = or i32 %84, %7
  %115 = shl i32 %114, 1
  %116 = and i32 %30, %23
  %117 = and i32 %47, %0
  %118 = or i32 %9, %117
  %119 = shl i32 %118, 2
  %120 = add i32 %25, 1
  %121 = xor i32 %46, -1
  %122 = or i32 %36, %121
  %123 = xor i32 %80, -1
  %124 = or i32 %31, %123
  %125 = and i32 %57, %67
  %126 = or i32 %93, %0
  %127 = and i32 %57, %21
  %128 = and i32 %111, %7
  %129 = or i32 %57, %67
  %130 = xor i32 %27, %2
  %131 = or i32 %31, %42
  %132 = or i32 %27, %61
  %133 = or i32 %94, %104
  %134 = and i32 %28, %67
  %135 = or i32 %56, %123
  %136 = xor i32 %53, -1
  %137 = xor i32 %51, %136
  %138 = or i32 %56, %67
  %139 = xor i32 %71, -1
  %140 = or i32 %43, %0
  %141 = or i32 %10, %22
  %142 = or i32 %27, %57
  %143 = or i32 %30, %123
  %144 = xor i32 %47, %0
  %145 = or i32 %94, %144
  %146 = or i32 %97, %67
  %147 = and i32 %56, %23
  %148 = and i32 %25, %57
  %149 = and i32 %40, %67
  %150 = and i32 %49, %57
  %151 = and i32 %84, %0
  %152 = or i32 %57, %1
  %153 = or i32 %8, %0
  %154 = or i32 %69, %7
  %155 = shl i32 %154, 1
  %156 = and i32 %49, %2
  %157 = add i32 %49, 1
  %158 = add i32 %60, 1
  %159 = add i32 %80, 1
  %160 = or i32 %97, %21
  %161 = xor i32 %25, %2
  %162 = and i32 %80, %69
  %163 = xor i32 %94, -1
  %164 = xor i32 %106, %163
  %165 = or i32 %27, %93
  %166 = and i32 %139, %1
  %167 = and i32 %84, %7
  %168 = or i32 %27, %97
  %169 = xor i32 %69, %0
  %170 = add i32 %56, 1
  %171 = xor i32 %139, %1
  %172 = xor i32 %31, %25
  %173 = or i32 %30, %67
  %174 = or i32 %56, %1
  %175 = xor i32 %31, %1
  %176 = or i32 %8, %22
  %177 = or i32 %94, %106
  %178 = or i32 %31, %93
  %179 = and i32 %139, %67
  %180 = or i32 %30, %91
  %181 = and i32 %69, %64
  %182 = xor i32 %71, %1
  %183 = or i32 %36, %37
  %184 = xor i32 %23, %2
  %185 = and i32 %56, %1
  %186 = or i32 %10, %7
  %187 = or i32 %31, %21
  %188 = xor i32 %111, %27
  %189 = shl i32 %188, 1
  %190 = or i32 %111, %0
  %191 = xor i32 %117, %33
  %192 = and i32 %80, %2
  %193 = xor i32 %144, %163
  %194 = and i32 %52, %7
  %195 = or i32 %36, %194
  %196 = and i32 %69, %23
  %197 = or i32 %97, %1
  %198 = xor i32 %111, -1
  %199 = or i32 %71, %198
  %200 = xor i32 %71, %84
  %201 = shl i32 %200, 2
  %202 = or i32 %69, %91
  %203 = and i32 %56, %49
  %204 = or i32 %71, %8
  %205 = or i32 %94, %38
  %206 = shl i32 %205, 1
  %207 = xor i32 %60, %1
  %208 = or i32 %49, %30
  %209 = or i32 %198, %7
  %210 = xor i32 %198, %0
  %211 = and i32 %56, %80
  %212 = or i32 %56, %21
  %213 = and i32 %10, %64
  %214 = and i32 %10, %80
  %215 = shl i32 %214, 1
  %216 = or i32 %57, %91
  %217 = and i32 %28, %1
  %218 = or i32 %22, %30
  %219 = and i32 %28, %21
  %220 = xor i32 %8, %0
  %221 = xor i32 %22, %43
  %222 = shl i32 %221, 1
  %223 = and i32 %69, %7
  %224 = and i32 %40, %21
  %225 = shl i32 %224, 1
  %226 = or i32 %67, %2
  %227 = or i32 %123, %2
  %228 = or i32 %22, %2
  %229 = or i32 %8, %7
  %230 = or i32 %36, %86
  %231 = or i32 %27, %2
  %232 = or i32 %42, %7
  %233 = and i32 %139, %21
  %234 = or i32 %31, %67
  %235 = shl i32 %234, 1
  %236 = xor i32 %36, %46
  %237 = shl i32 %236, 1
  %238 = xor i32 %84, %0
  %239 = or i32 %57, %123
  %240 = xor i32 %31, %43
  %241 = xor i32 %22, %84
  %242 = xor i32 %40, %1
  %243 = xor i32 %64, %2
  %244 = and i32 %56, %21
  %245 = shl i32 %244, 1
  %246 = or i32 %49, %2
  %247 = and i32 %43, %0
  %248 = or i32 %71, %1
  %249 = and i32 %49, %40
  %250 = or i32 %71, %21
  %251 = and i32 %30, %64
  %252 = or i32 %198, %0
  %253 = or i32 %10, %123
  %254 = or i32 %31, %49
  %255 = and i32 %60, %1
  %256 = add i32 %2, 1
  %257 = or i32 %10, %27
  %258 = xor i32 %28, %1
  %259 = and i32 %67, %2
  %260 = xor i32 %93, %0
  %261 = and i32 %25, %30
  %262 = or i32 %27, %198
  %263 = xor i32 %186, -1
  %264 = or i32 %51, %263
  %265 = or i32 %47, %7
  %266 = or i32 %56, %49
  %267 = xor i32 %51, %186
  %268 = or i32 %42, %22
  %269 = and i32 %57, %1
  %270 = or i32 %56, %91
  %271 = and i32 %111, %0
  %272 = or i32 %22, %57
  %273 = xor i32 %31, %47
  %274 = or i32 %111, %7
  %275 = or i32 %49, %61
  %276 = or i32 %61, %67
  %277 = shl i32 %276, 1
  %278 = xor i32 %22, %2
  %279 = shl i32 %278, 1
  %280 = or i32 %57, %21
  %281 = xor i32 %80, %2
  %282 = or i32 %69, %123
  %283 = and i32 %64, %2
  %284 = xor i32 %123, %2
  %285 = shl i32 %284, 1
  %286 = add i32 %1, 1
  %287 = add i32 %31, 1
  %288 = or i32 %56, %27
  %289 = and i32 %25, %69
  %290 = xor i32 %104, %163
  %291 = and i32 %49, %139
  %292 = and i32 %49, %30
  %293 = and i32 %93, %7
  %294 = mul i32 %293, 18
  %295 = and i32 %42, %7
  %296 = and i32 %93, %0
  %297 = shl i32 %296, 1
  %298 = and i32 %42, %0
  %299 = mul i32 %298, 21
  %300 = and i32 %198, %7
  %301 = and i32 %198, %0
  %302 = mul i32 %301, 19
  %303 = mul i32 %94, 26
  %304 = or i32 %4, %3
  %305 = xor i32 %5, %3
  %306 = xor i32 %305, -1
  %307 = and i32 %304, %306
  %308 = and i32 %5, %3
  %309 = xor i32 %308, -1
  %310 = shl i32 %309, 1
  %311 = xor i32 %3, -1
  %312 = xor i32 %5, %4
  %313 = xor i32 %312, -1
  %314 = or i32 %313, %311
  %315 = and i32 %311, %5
  %316 = and i32 %315, %4
  %317 = or i32 %311, %5
  %318 = xor i32 %317, %4
  %319 = or i32 %316, %318
  %320 = or i32 %5, %3
  %321 = xor i32 %320, -1
  %322 = and i32 %311, %4
  %323 = xor i32 %322, -1
  %324 = and i32 %312, %323
  %325 = xor i32 %4, -1
  %326 = and i32 %13, %3
  %327 = xor i32 %326, -1
  %328 = and i32 %327, %325
  %329 = or i32 %311, %4
  %330 = xor i32 %329, -1
  %331 = or i32 %312, %330
  %332 = shl i32 %331, 1
  %333 = or i32 %13, %3
  %334 = xor i32 %333, -1
  %335 = and i32 %308, %4
  %336 = xor i32 %320, %4
  %337 = xor i32 %336, 2147483647
  %338 = xor i32 %337, %335
  %339 = and i32 %4, %3
  %340 = xor i32 %17, %339
  %341 = xor i32 %339, -1
  %342 = and i32 %313, %341
  %343 = and i32 %17, %311
  %344 = shl i32 %343, 1
  %345 = or i32 %312, %339
  %346 = xor i32 %341, %5
  %347 = and i32 %13, %4
  %348 = xor i32 %347, %333
  %349 = add i32 %305, 1
  %350 = xor i32 %304, -1
  %351 = xor i32 %350, %5
  %352 = and i32 %312, %304
  %353 = or i32 %334, %4
  %354 = xor i32 %14, -1
  %355 = or i32 %354, %311
  %356 = and i32 %308, %325
  %357 = and i32 %320, %4
  %358 = or i32 %356, %357
  %359 = xor i32 %322, %327
  %360 = and i32 %317, %325
  %361 = xor i32 %316, 2147483647
  %362 = xor i32 %361, %360
  %363 = xor i32 %306, %4
  %364 = xor i32 %18, -1
  %365 = or i32 %13, %364
  %366 = add i32 %5, 1
  %367 = xor i32 %305, %4
  %368 = xor i32 %335, %367
  %369 = and i32 %320, %325
  %370 = xor i32 %335, -1
  %371 = xor i32 %369, %370
  %372 = and i32 %329, %313
  %373 = add i32 %3, 1
  %374 = and i32 %315, %325
  %375 = or i32 %305, %325
  %376 = xor i32 %374, %375
  %377 = xor i32 %347, -1
  %378 = xor i32 %377, %3
  %379 = shl i32 %378, 1
  %380 = and i32 %305, %304
  %381 = and i32 %305, %329
  %382 = and i32 %5, %4
  %383 = xor i32 %382, -1
  %384 = and i32 %383, %364
  %385 = and i32 %18, %377
  %386 = and i32 %383, %311
  %387 = shl i32 %386, 2
  %388 = or i32 %306, %350
  %389 = and i32 %17, %3
  %390 = or i32 %333, %325
  %391 = shl i32 %390, 1
  %392 = and i32 %364, %5
  %393 = xor i32 %382, %329
  %394 = or i32 %305, %4
  %395 = xor i32 %394, -1
  %396 = or i32 %316, %395
  %397 = or i32 %382, %311
  %398 = shl i32 %397, 1
  %399 = or i32 %339, %5
  %400 = and i32 %313, %323
  %401 = or i32 %382, %350
  %402 = or i32 %309, %4
  %403 = xor i32 %361, %318
  %404 = or i32 %320, %325
  %405 = and i32 %333, %325
  %406 = add i32 %322, 1
  %407 = or i32 %322, %306
  %408 = xor i32 %329, %5
  %409 = or i32 %312, %350
  %410 = or i32 %305, %330
  %411 = add i32 %382, 1
  %412 = and i32 %309, %4
  %413 = shl i32 %412, 1
  %414 = or i32 %327, %325
  %415 = or i32 %354, %364
  %416 = or i32 %382, %321
  %417 = xor i32 %320, %339
  %418 = or i32 %339, %321
  %419 = shl i32 %418, 1
  %420 = and i32 %305, %4
  %421 = and i32 %13, %323
  %422 = or i32 %306, %4
  %423 = and i32 %305, %341
  %424 = xor i32 %367, -1
  %425 = xor i32 %316, %424
  %426 = and i32 %305, %325
  %427 = or i32 %335, %426
  %428 = or i32 %18, %354
  %429 = or i32 %347, %308
  %430 = xor i32 %354, %3
  %431 = xor i32 %17, -1
  %432 = or i32 %431, %311
  %433 = xor i32 %321, %4
  %434 = shl i32 %433, 1
  %435 = or i32 %335, %369
  %436 = or i32 %339, %313
  %437 = xor i32 %333, %339
  %438 = and i32 %313, %364
  %439 = and i32 %14, %18
  %440 = and i32 %13, %364
  %441 = or i32 %347, %311
  %442 = or i32 %327, %4
  %443 = or i32 %18, %313
  %444 = xor i32 %357, -1
  %445 = xor i32 %356, %444
  %446 = or i32 %312, %311
  %447 = shl i32 %446, 1
  %448 = and i32 %309, %325
  %449 = or i32 %18, %431
  %450 = shl i32 %449, 1
  %451 = or i32 %350, %5
  %452 = or i32 %313, %364
  %453 = and i32 %306, %325
  %454 = and i32 %312, %311
  %455 = shl i32 %454, 1
  %456 = or i32 %339, %431
  %457 = or i32 %308, %325
  %458 = shl i32 %457, 2
  %459 = xor i32 %304, %5
  %460 = and i32 %312, %364
  %461 = xor i32 %308, %4
  %462 = and i32 %304, %5
  %463 = or i32 %431, %364
  %464 = and i32 %306, %323
  %465 = and i32 %306, %4
  %466 = xor i32 %382, %304
  %467 = xor i32 %382, %320
  %468 = or i32 %382, %18
  %469 = shl i32 %468, 1
  %470 = or i32 %335, %336
  %471 = or i32 %382, %3
  %472 = or i32 %316, %360
  %473 = or i32 %312, %322
  %474 = and i32 %18, %5
  %475 = shl i32 %474, 1
  %476 = or i32 %347, %334
  %477 = or i32 %339, %334
  %478 = and i32 %306, %341
  %479 = or i32 %313, %3
  %480 = and i32 %305, %323
  %481 = and i32 %14, %364
  %482 = or i32 %312, %3
  %483 = and i32 %317, %4
  %484 = xor i32 %483, 2147483647
  %485 = xor i32 %484, %374
  %486 = shl i32 %485, 1
  %487 = or i32 %313, %330
  %488 = or i32 %335, %424
  %489 = xor i32 %322, %5
  %490 = and i32 %304, %313
  %491 = or i32 %305, %350
  %492 = xor i32 %382, %327
  %493 = and i32 %383, %3
  %494 = or i32 %322, %5
  %495 = shl i32 %494, 1
  %496 = or i32 %321, %4
  %497 = shl i32 %496, 1
  %498 = and i32 %312, %341
  %499 = shl i32 %498, 1
  %500 = or i32 %339, %306
  %501 = shl i32 %500, 1
  %502 = xor i32 %426, %370
  %503 = and i32 %14, %311
  %504 = and i32 %321, %325
  %505 = and i32 %326, %325
  %506 = and i32 %321, %4
  %507 = and i32 %326, %4
  %508 = mul i32 %507, -7
  %509 = and i32 %334, %325
  %510 = and i32 %334, %4
  %511 = add i32 %7, %1
  %512 = add i32 %511, %27
  %513 = add i32 %512, %22
  %514 = add i32 %513, %56
  %515 = add i32 %514, %208
  %516 = add i32 %515, %192
  %517 = add i32 %516, %156
  %518 = add i32 %517, %130
  %519 = add i32 %518, %282
  %520 = add i32 %519, %274
  %521 = add i32 %520, %272
  %522 = add i32 %521, %270
  %523 = add i32 %522, %265
  %524 = add i32 %523, %210
  %525 = add i32 %524, %203
  %526 = add i32 %525, %152
  %527 = add i32 %526, %151
  %528 = add i32 %527, %150
  %529 = add i32 %528, %112
  %530 = add i32 %529, %110
  %531 = add i32 %530, %107
  %532 = add i32 %531, %102
  %533 = add i32 %532, %29
  %534 = add i32 %533, %421
  %535 = add i32 %534, %392
  %536 = add i32 %535, %506
  %537 = add i32 %536, %480
  %538 = add i32 %537, %375
  %539 = add i32 %538, %461
  %540 = add i32 %539, %460
  %541 = add i32 %540, %428
  %542 = add i32 %541, %404
  %543 = add i32 %542, %402
  %544 = add i32 %543, %393
  %545 = add i32 %544, %307
  %546 = add i32 %545, %376
  %547 = add i32 %546, %362
  %548 = add i32 %547, %403
  %549 = add i32 %548, %338
  %550 = shl i32 %549, 1
  %551 = sub i32 %173, %218
  %552 = sub i32 %551, %182
  %553 = sub i32 %552, %176
  %554 = sub i32 %553, %146
  %555 = sub i32 %554, %505
  %556 = add i32 %555, %504
  %557 = sub i32 %556, %491
  %558 = add i32 %557, %429
  %559 = sub i32 %558, %368
  %560 = mul i32 %559, 3
  %561 = add i32 %197, %243
  %562 = add i32 %561, %174
  %563 = add i32 %562, %510
  %564 = shl i32 %563, 2
  %565 = add i32 %300, %295
  %566 = shl i32 %565, 3
  %567 = sub i32 %283, %9
  %568 = sub i32 %567, %165
  %569 = sub i32 %568, %131
  %570 = add i32 %569, %129
  %571 = add i32 %570, %509
  %572 = sub i32 %571, %356
  %573 = add i32 %572, %409
  %574 = mul i32 %573, 5
  %575 = sub i32 %286, %0
  %576 = add i32 %575, %23
  %577 = sub i32 %576, %49
  %578 = add i32 %577, %120
  %579 = sub i32 %578, %2
  %580 = add i32 %579, %157
  %581 = add i32 %580, %159
  %582 = add i32 %581, %256
  %583 = add i32 %582, %25
  %584 = add i32 %583, %64
  %585 = sub i32 %584, %80
  %586 = sub i32 %585, %24
  %587 = add i32 %586, %26
  %588 = sub i32 %587, %47
  %589 = add i32 %588, %79
  %590 = sub i32 %589, %81
  %591 = add i32 %590, %69
  %592 = add i32 %591, %92
  %593 = add i32 %592, %93
  %594 = sub i32 %593, %96
  %595 = add i32 %594, %116
  %596 = sub i32 %595, %42
  %597 = add i32 %596, %43
  %598 = add i32 %597, %139
  %599 = sub i32 %598, %143
  %600 = add i32 %599, %158
  %601 = add i32 %600, %161
  %602 = add i32 %601, %170
  %603 = add i32 %602, %180
  %604 = sub i32 %603, %60
  %605 = add i32 %604, %184
  %606 = sub i32 %605, %111
  %607 = sub i32 %606, %71
  %608 = sub i32 %607, %226
  %609 = add i32 %608, %227
  %610 = add i32 %609, %228
  %611 = sub i32 %610, %231
  %612 = sub i32 %611, %246
  %613 = add i32 %612, %251
  %614 = sub i32 %613, %259
  %615 = sub i32 %614, %261
  %616 = add i32 %615, %281
  %617 = sub i32 %616, %283
  %618 = add i32 %617, %287
  %619 = add i32 %618, %292
  %620 = add i32 %619, %373
  %621 = sub i32 %620, %32
  %622 = sub i32 %621, %41
  %623 = sub i32 %622, %46
  %624 = add i32 %623, %48
  %625 = add i32 %624, %50
  %626 = sub i32 %625, %55
  %627 = sub i32 %626, %58
  %628 = sub i32 %627, %59
  %629 = add i32 %628, %65
  %630 = add i32 %629, %66
  %631 = add i32 %630, %68
  %632 = sub i32 %631, %70
  %633 = add i32 %632, %76
  %634 = add i32 %633, %82
  %635 = add i32 %634, %83
  %636 = sub i32 %635, %85
  %637 = add i32 %636, %89
  %638 = sub i32 %637, %90
  %639 = sub i32 %638, %98
  %640 = add i32 %639, %99
  %641 = sub i32 %640, %100
  %642 = add i32 %641, %101
  %643 = add i32 %642, %103
  %644 = add i32 %643, %104
  %645 = sub i32 %644, %105
  %646 = sub i32 %645, %106
  %647 = sub i32 %646, %108
  %648 = add i32 %647, %109
  %649 = sub i32 %648, %113
  %650 = sub i32 %649, %124
  %651 = sub i32 %650, %125
  %652 = sub i32 %651, %126
  %653 = add i32 %652, %127
  %654 = add i32 %653, %128
  %655 = add i32 %654, %132
  %656 = add i32 %655, %134
  %657 = sub i32 %656, %135
  %658 = sub i32 %657, %138
  %659 = sub i32 %658, %140
  %660 = sub i32 %659, %141
  %661 = sub i32 %660, %142
  %662 = add i32 %661, %147
  %663 = add i32 %662, %148
  %664 = sub i32 %663, %149
  %665 = add i32 %664, %153
  %666 = add i32 %665, %160
  %667 = sub i32 %666, %162
  %668 = sub i32 %667, %166
  %669 = sub i32 %668, %167
  %670 = sub i32 %669, %168
  %671 = sub i32 %670, %169
  %672 = sub i32 %671, %171
  %673 = add i32 %672, %172
  %674 = sub i32 %673, %175
  %675 = sub i32 %674, %178
  %676 = sub i32 %675, %179
  %677 = sub i32 %676, %181
  %678 = add i32 %677, %185
  %679 = sub i32 %678, %186
  %680 = add i32 %679, %187
  %681 = sub i32 %680, %190
  %682 = sub i32 %681, %11
  %683 = add i32 %682, %196
  %684 = sub i32 %683, %199
  %685 = add i32 %684, %202
  %686 = sub i32 %685, %204
  %687 = add i32 %686, %207
  %688 = sub i32 %687, %209
  %689 = sub i32 %688, %211
  %690 = add i32 %689, %212
  %691 = sub i32 %690, %213
  %692 = sub i32 %691, %216
  %693 = add i32 %692, %217
  %694 = add i32 %693, %219
  %695 = add i32 %694, %220
  %696 = sub i32 %695, %223
  %697 = sub i32 %696, %229
  %698 = add i32 %697, %232
  %699 = sub i32 %698, %233
  %700 = sub i32 %699, %238
  %701 = add i32 %700, %239
  %702 = sub i32 %701, %240
  %703 = sub i32 %702, %241
  %704 = add i32 %703, %242
  %705 = sub i32 %704, %144
  %706 = sub i32 %705, %247
  %707 = add i32 %706, %248
  %708 = add i32 %707, %249
  %709 = add i32 %708, %250
  %710 = add i32 %709, %252
  %711 = sub i32 %710, %253
  %712 = sub i32 %711, %254
  %713 = sub i32 %712, %255
  %714 = sub i32 %713, %257
  %715 = sub i32 %714, %258
  %716 = add i32 %715, %37
  %717 = add i32 %716, %260
  %718 = sub i32 %717, %262
  %719 = add i32 %718, %266
  %720 = add i32 %719, %268
  %721 = add i32 %720, %269
  %722 = add i32 %721, %271
  %723 = add i32 %722, %273
  %724 = add i32 %723, %275
  %725 = sub i32 %724, %279
  %726 = sub i32 %725, %280
  %727 = sub i32 %726, %117
  %728 = sub i32 %727, %285
  %729 = sub i32 %728, %288
  %730 = add i32 %729, %289
  %731 = add i32 %730, %291
  %732 = add i32 %731, %4
  %733 = add i32 %732, %34
  %734 = sub i32 %733, %39
  %735 = sub i32 %734, %45
  %736 = sub i32 %735, %54
  %737 = sub i32 %736, %63
  %738 = sub i32 %737, %73
  %739 = sub i32 %738, %75
  %740 = sub i32 %739, %78
  %741 = add i32 %740, %88
  %742 = add i32 %741, %95
  %743 = sub i32 %742, %115
  %744 = sub i32 %743, %122
  %745 = sub i32 %744, %133
  %746 = sub i32 %745, %137
  %747 = add i32 %746, %145
  %748 = sub i32 %747, %155
  %749 = add i32 %748, %164
  %750 = add i32 %749, %177
  %751 = sub i32 %750, %183
  %752 = sub i32 %751, %189
  %753 = sub i32 %752, %191
  %754 = sub i32 %753, %193
  %755 = sub i32 %754, %195
  %756 = sub i32 %755, %201
  %757 = sub i32 %756, %215
  %758 = sub i32 %757, %222
  %759 = sub i32 %758, %225
  %760 = sub i32 %759, %230
  %761 = sub i32 %760, %235
  %762 = sub i32 %761, %245
  %763 = sub i32 %762, %264
  %764 = add i32 %763, %267
  %765 = sub i32 %764, %277
  %766 = add i32 %765, %290
  %767 = add i32 %766, %294
  %768 = sub i32 %767, %297
  %769 = add i32 %768, %299
  %770 = add i32 %769, %302
  %771 = add i32 %770, %303
  %772 = add i32 %771, %304
  %773 = sub i32 %772, %18
  %774 = add i32 %773, %366
  %775 = add i32 %774, %406
  %776 = add i32 %775, %364
  %777 = add i32 %776, %341
  %778 = sub i32 %777, %119
  %779 = sub i32 %778, %206
  %780 = sub i32 %779, %237
  %781 = sub i32 %780, %17
  %782 = add i32 %781, %321
  %783 = add i32 %782, %346
  %784 = add i32 %783, %349
  %785 = add i32 %784, %351
  %786 = add i32 %785, %365
  %787 = add i32 %786, %347
  %788 = add i32 %787, %399
  %789 = sub i32 %788, %408
  %790 = add i32 %789, %411
  %791 = sub i32 %790, %14
  %792 = sub i32 %791, %326
  %793 = add i32 %792, %440
  %794 = sub i32 %793, %451
  %795 = add i32 %794, %459
  %796 = add i32 %795, %462
  %797 = add i32 %796, %489
  %798 = add i32 %797, %566
  %799 = sub i32 %798, %310
  %800 = sub i32 %799, %314
  %801 = add i32 %800, %324
  %802 = sub i32 %801, %328
  %803 = add i32 %802, %340
  %804 = add i32 %803, %342
  %805 = add i32 %804, %345
  %806 = sub i32 %805, %348
  %807 = sub i32 %806, %352
  %808 = add i32 %807, %353
  %809 = add i32 %808, %355
  %810 = add i32 %809, %359
  %811 = add i32 %810, %363
  %812 = add i32 %811, %372
  %813 = sub i32 %812, %380
  %814 = sub i32 %813, %381
  %815 = sub i32 %814, %384
  %816 = add i32 %815, %385
  %817 = add i32 %816, %388
  %818 = sub i32 %817, %389
  %819 = sub i32 %818, %400
  %820 = sub i32 %819, %336
  %821 = sub i32 %820, %401
  %822 = add i32 %821, %405
  %823 = sub i32 %822, %407
  %824 = sub i32 %823, %410
  %825 = add i32 %824, %414
  %826 = add i32 %825, %415
  %827 = sub i32 %826, %416
  %828 = add i32 %827, %417
  %829 = sub i32 %828, %420
  %830 = sub i32 %829, %422
  %831 = add i32 %830, %423
  %832 = sub i32 %831, %430
  %833 = add i32 %832, %432
  %834 = add i32 %833, %436
  %835 = add i32 %834, %437
  %836 = add i32 %835, %438
  %837 = add i32 %836, %439
  %838 = sub i32 %837, %441
  %839 = sub i32 %838, %442
  %840 = add i32 %839, %443
  %841 = add i32 %840, %448
  %842 = add i32 %841, %452
  %843 = add i32 %842, %453
  %844 = add i32 %843, %456
  %845 = sub i32 %844, %463
  %846 = add i32 %845, %464
  %847 = sub i32 %846, %465
  %848 = add i32 %847, %466
  %849 = sub i32 %848, %467
  %850 = sub i32 %849, %471
  %851 = add i32 %850, %394
  %852 = add i32 %851, %473
  %853 = sub i32 %852, %475
  %854 = sub i32 %853, %476
  %855 = sub i32 %854, %477
  %856 = sub i32 %855, %478
  %857 = sub i32 %856, %479
  %858 = add i32 %857, %481
  %859 = add i32 %858, %482
  %860 = sub i32 %859, %487
  %861 = sub i32 %860, %490
  %862 = sub i32 %861, %492
  %863 = add i32 %862, %493
  %864 = sub i32 %863, %495
  %865 = add i32 %864, %367
  %866 = add i32 %865, %503
  %867 = add i32 %866, %319
  %868 = sub i32 %867, %332
  %869 = sub i32 %868, %344
  %870 = sub i32 %869, %358
  %871 = add i32 %870, %371
  %872 = sub i32 %871, %379
  %873 = sub i32 %872, %387
  %874 = sub i32 %873, %391
  %875 = sub i32 %874, %396
  %876 = sub i32 %875, %398
  %877 = sub i32 %876, %413
  %878 = sub i32 %877, %419
  %879 = sub i32 %878, %425
  %880 = sub i32 %879, %427
  %881 = sub i32 %880, %434
  %882 = sub i32 %881, %435
  %883 = add i32 %882, %445
  %884 = sub i32 %883, %447
  %885 = sub i32 %884, %450
  %886 = sub i32 %885, %455
  %887 = sub i32 %886, %458
  %888 = sub i32 %887, %469
  %889 = add i32 %888, %470
  %890 = add i32 %889, %472
  %891 = add i32 %890, %488
  %892 = sub i32 %891, %497
  %893 = sub i32 %892, %499
  %894 = sub i32 %893, %501
  %895 = add i32 %894, %502
  %896 = add i32 %895, %508
  %897 = sub i32 %896, %486
  %898 = add i32 %897, %564
  %899 = add i32 %898, %574
  %900 = add i32 %899, %560
  %901 = add i32 %900, %550
  %902 = icmp eq i32 %20, %901
  %903 = select i1 %902, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %904 = tail call i32 @puts(i8* nonnull dereferenceable(1) %903)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
