digraph "DFG for'crackme' function" {
	Node0x20fe210[shape=record, label="  %3 = add i32 %1, %0"];
	Node0x20fe8c0[shape=record, label="  %4 = shl i32 %1, 1"];
	Node0x20fe980[shape=record, label="  %5 = or i32 %4, 1"];
	Node0x20fe9f0[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0x20fea60[shape=record, label="  %7 = add i32 %6, %0"];
	Node0x20fead0[shape=record, label="  %8 = add i32 %7, %5"];
	Node0x20feb40[shape=record, label="  %9 = icmp eq i32 %3, %8"];
	Node0x209f388[shape=record, label="  %10 = select i1 %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x20fefe0[shape=record, label="  %11 = tail call i32 @puts(i8* nonnull dereferenceable(1) %10)"];
	Node0x20ff030[shape=record, label="  ret void"];
	Node0x20fe210 -> Node0x20fe8c0;
	Node0x20fe8c0 -> Node0x20fe980;
	Node0x20fe980 -> Node0x20fe9f0;
	Node0x20fe9f0 -> Node0x20fea60;
	Node0x20fea60 -> Node0x20fead0;
	Node0x20fead0 -> Node0x20feb40;
	Node0x20feb40 -> Node0x209f388;
	Node0x209f388 -> Node0x20fefe0;
	Node0x20fefe0 -> Node0x20ff030;
edge [color=red]
	Node0x20fe8c0 -> Node0x20fe980;
	Node0x20fe9f0 -> Node0x20fea60;
	Node0x20fea60 -> Node0x20fead0;
	Node0x20fe980 -> Node0x20fead0;
	Node0x20fe210 -> Node0x20feb40;
	Node0x20fead0 -> Node0x20feb40;
	Node0x20feb40 -> Node0x209f388;
	Node0x209f388 -> Node0x20fefe0;
}
