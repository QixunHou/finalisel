; ModuleID = '../.././c_source_file/1635_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1635_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = xor i32 %4, %3
  %7 = xor i32 %6, -1
  %8 = xor i32 %2, %0
  %9 = and i32 %8, %1
  %10 = xor i32 %0, -1
  %11 = xor i32 %2, %1
  %12 = xor i32 %11, -1
  %13 = and i32 %12, %10
  %14 = sub i32 %9, %13
  %15 = add i32 %14, %7
  %16 = xor i32 %4, -1
  %17 = or i32 %16, %3
  %18 = shl i32 %17, 2
  %19 = or i32 %4, %3
  %20 = shl i32 %3, 1
  %21 = xor i32 %20, -2
  %22 = and i32 %4, %3
  %23 = shl i32 %22, 1
  %24 = xor i32 %23, -2
  %25 = xor i32 %3, 2147483647
  %26 = or i32 %25, %4
  %27 = shl i32 %26, 1
  %28 = xor i32 %19, -1
  %29 = xor i32 %17, -1
  %30 = and i32 %1, %0
  %31 = or i32 %30, %12
  %32 = xor i32 %2, -1
  %33 = or i32 %30, %32
  %34 = and i32 %2, %0
  %35 = or i32 %1, %0
  %36 = xor i32 %34, %35
  %37 = shl i32 %36, 1
  %38 = xor i32 %12, %0
  %39 = xor i32 %1, -1
  %40 = or i32 %39, %0
  %41 = and i32 %11, %40
  %42 = xor i32 %30, -1
  %43 = xor i32 %8, -1
  %44 = and i32 %35, %43
  %45 = xor i32 %35, -1
  %46 = and i32 %42, %2
  %47 = and i32 %32, %0
  %48 = shl i32 %12, 1
  %49 = or i32 %2, %1
  %50 = xor i32 %49, -1
  %51 = xor i32 %50, %0
  %52 = or i32 %2, %0
  %53 = xor i32 %52, -1
  %54 = xor i32 %53, %1
  %55 = and i32 %39, %0
  %56 = or i32 %55, %43
  %57 = xor i32 %47, -1
  %58 = xor i32 %1, %0
  %59 = xor i32 %58, -1
  %60 = and i32 %57, %59
  %61 = and i32 %39, %2
  %62 = and i32 %61, %0
  %63 = or i32 %39, %2
  %64 = and i32 %63, %10
  %65 = or i32 %62, %64
  %66 = and i32 %8, %42
  %67 = and i32 %43, %1
  %68 = and i32 %61, %10
  %69 = and i32 %63, %0
  %70 = xor i32 %69, -1
  %71 = xor i32 %68, %70
  %72 = and i32 %2, %1
  %73 = and i32 %72, %0
  %74 = xor i32 %49, %0
  %75 = xor i32 %74, 1073741823
  %76 = xor i32 %75, %73
  %77 = shl i32 %76, 2
  %78 = and i32 %8, %58
  %79 = xor i32 %40, %2
  %80 = and i32 %43, %39
  %81 = and i32 %32, %1
  %82 = xor i32 %81, -1
  %83 = or i32 %82, %10
  %84 = and i32 %11, %10
  %85 = xor i32 %72, -1
  %86 = xor i32 %85, %0
  %87 = add i32 %52, 1
  %88 = xor i32 %34, %49
  %89 = or i32 %11, %30
  %90 = or i32 %34, %39
  %91 = xor i32 %35, %2
  %92 = or i32 %32, %0
  %93 = xor i32 %92, -1
  %94 = or i32 %93, %59
  %95 = and i32 %32, %42
  %96 = and i32 %11, %42
  %97 = or i32 %11, %0
  %98 = xor i32 %62, %97
  %99 = and i32 %11, %35
  %100 = shl i32 %99, 1
  %101 = xor i32 %52, %1
  %102 = or i32 %11, %10
  %103 = or i32 %93, %1
  %104 = or i32 %43, %45
  %105 = or i32 %73, %84
  %106 = and i32 %57, %1
  %107 = xor i32 %11, %0
  %108 = xor i32 %107, -1
  %109 = or i32 %73, %108
  %110 = or i32 %81, %10
  %111 = xor i32 %55, -1
  %112 = and i32 %12, %111
  %113 = and i32 %8, %39
  %114 = add i32 %49, 1
  %115 = or i32 %81, %0
  %116 = or i32 %32, %1
  %117 = xor i32 %116, %0
  %118 = and i32 %58, %2
  %119 = and i32 %8, %35
  %120 = or i32 %72, %0
  %121 = or i32 %30, %53
  %122 = and i32 %40, %2
  %123 = shl i32 %122, 1
  %124 = xor i32 %111, %2
  %125 = shl i32 %124, 1
  %126 = or i32 %55, %32
  %127 = or i32 %53, %1
  %128 = or i32 %12, %0
  %129 = and i32 %49, %0
  %130 = and i32 %92, %59
  %131 = and i32 %49, %10
  %132 = shl i32 %131, 1
  %133 = and i32 %32, %59
  %134 = and i32 %12, %0
  %135 = or i32 %55, %2
  %136 = xor i32 %62, -1
  %137 = xor i32 %64, %136
  %138 = xor i32 %42, %2
  %139 = xor i32 %102, 2147483647
  %140 = or i32 %139, %68
  %141 = shl i32 %140, 1
  %142 = xor i32 %63, %0
  %143 = xor i32 %142, %136
  %144 = or i32 %47, %72
  %145 = and i32 %116, %10
  %146 = or i32 %34, %58
  %147 = or i32 %59, %2
  %148 = xor i32 %55, %2
  %149 = or i32 %12, %10
  %150 = and i32 %52, %59
  %151 = or i32 %45, %2
  %152 = xor i32 %34, -1
  %153 = and i32 %58, %152
  %154 = and i32 %92, %1
  %155 = shl i32 %55, 1
  %156 = xor i32 %40, -1
  %157 = or i32 %8, %156
  %158 = and i32 %12, %42
  %159 = or i32 %73, %131
  %160 = and i32 %58, %32
  %161 = and i32 %35, %2
  %162 = xor i32 %62, %108
  %163 = and i32 %116, %0
  %164 = or i32 %47, %59
  %165 = and i32 %43, %42
  %166 = or i32 %12, %156
  %167 = and i32 %40, %32
  %168 = and i32 %82, %0
  %169 = shl i32 %168, 1
  %170 = or i32 %93, %39
  %171 = or i32 %82, %0
  %172 = or i32 %30, %43
  %173 = add i32 %92, 1
  %174 = and i32 %40, %12
  %175 = xor i32 %82, %0
  %176 = and i32 %59, %2
  %177 = or i32 %68, %69
  %178 = or i32 %8, %1
  %179 = and i32 %52, %58
  %180 = xor i32 %116, %30
  %181 = xor i32 %93, %1
  %182 = and i32 %72, %10
  %183 = and i32 %11, %0
  %184 = xor i32 %182, -1
  %185 = xor i32 %183, %184
  %186 = and i32 %35, %32
  %187 = xor i32 %49, %30
  %188 = or i32 %116, %0
  %189 = or i32 %34, %59
  %190 = or i32 %47, %1
  %191 = or i32 %182, %129
  %192 = xor i32 %92, %30
  %193 = xor i32 %116, -1
  %194 = or i32 %47, %193
  %195 = xor i32 %55, %82
  %196 = or i32 %47, %58
  %197 = or i32 %43, %59
  %198 = xor i32 %97, -1
  %199 = or i32 %62, %198
  %200 = or i32 %11, %55
  %201 = or i32 %73, %74
  %202 = or i32 %8, %45
  %203 = or i32 %30, %93
  %204 = add i32 %8, 1
  %205 = and i32 %43, %111
  %206 = xor i32 %34, %40
  %207 = and i32 %82, %10
  %208 = or i32 %58, %43
  %209 = or i32 %8, %30
  %210 = shl i32 %209, 1
  %211 = xor i32 %131, -1
  %212 = xor i32 %73, %211
  %213 = or i32 %55, %12
  %214 = or i32 %58, %2
  %215 = xor i32 %92, %1
  %216 = xor i32 %47, %85
  %217 = or i32 %116, %10
  %218 = shl i32 %217, 1
  %219 = or i32 %193, %10
  %220 = or i32 %53, %59
  %221 = xor i32 %34, %82
  %222 = or i32 %72, %55
  %223 = add i32 %55, 1
  %224 = or i32 %34, %45
  %225 = add i32 %34, 1
  %226 = or i32 %193, %0
  %227 = xor i32 %55, %85
  %228 = xor i32 %129, %184
  %229 = or i32 %34, %156
  %230 = or i32 %32, %59
  %231 = and i32 %152, %59
  %232 = xor i32 %34, %1
  %233 = xor i32 %47, %1
  %234 = xor i32 %52, %30
  %235 = xor i32 %68, %102
  %236 = and i32 %152, %39
  %237 = or i32 %11, %45
  %238 = or i32 %34, %81
  %239 = and i32 %85, %10
  %240 = or i32 %47, %39
  %241 = or i32 %30, %193
  %242 = and i32 %152, %1
  %243 = or i32 %49, %0
  %244 = shl i32 %243, 1
  %245 = or i32 %156, %2
  %246 = shl i32 %39, 1
  %247 = add i32 %116, 1
  %248 = or i32 %49, %10
  %249 = or i32 %11, %156
  %250 = and i32 %111, %2
  %251 = shl i32 %82, 1
  %252 = or i32 %53, %39
  %253 = or i32 %58, %53
  %254 = or i32 %8, %39
  %255 = and i32 %58, %57
  %256 = or i32 %58, %32
  %257 = or i32 %62, %142
  %258 = and i32 %92, %39
  %259 = and i32 %52, %39
  %260 = shl i32 %259, 1
  %261 = xor i32 %73, %107
  %262 = and i32 %35, %12
  %263 = or i32 %43, %39
  %264 = or i32 %34, %1
  %265 = or i32 %30, %2
  %266 = or i32 %182, %183
  %267 = xor i32 %266, -1
  %268 = or i32 %8, %58
  %269 = shl i32 %268, 1
  %270 = xor i32 %30, %2
  %271 = or i32 %32, %156
  %272 = xor i32 %193, %0
  %273 = or i32 %34, %50
  %274 = or i32 %32, %45
  %275 = shl i32 %274, 1
  %276 = or i32 %43, %156
  %277 = and i32 %8, %59
  %278 = or i32 %72, %10
  %279 = or i32 %30, %50
  %280 = or i32 %50, %10
  %281 = and i32 %32, %111
  %282 = add i32 %2, 1
  %283 = and i32 %58, %43
  %284 = or i32 %85, %10
  %285 = xor i32 %47, %116
  %286 = or i32 %81, %55
  %287 = and i32 %8, %111
  %288 = xor i32 %81, %0
  %289 = and i32 %52, %1
  %290 = or i32 %8, %55
  %291 = and i32 %92, %58
  %292 = and i32 %85, %0
  %293 = xor i32 %152, %1
  %294 = xor i32 %72, %0
  %295 = or i32 %50, %0
  %296 = xor i32 %45, %2
  %297 = shl i32 %296, 1
  %298 = and i32 %50, %10
  %299 = and i32 %81, %10
  %300 = and i32 %50, %0
  %301 = and i32 %81, %0
  %302 = mul i32 %301, -34
  %303 = and i32 %193, %10
  %304 = mul i32 %303, -15
  %305 = and i32 %193, %0
  %306 = mul i32 %305, -7
  %307 = mul i32 %73, -55
  %308 = add i32 %229, %290
  %309 = sub i32 %226, %308
  %310 = add i32 %309, %174
  %311 = add i32 %310, %121
  %312 = add i32 %311, %191
  %313 = mul i32 %312, 5
  %314 = sub i32 %52, %11
  %315 = sub i32 %314, %182
  %316 = add i32 %315, %277
  %317 = add i32 %316, %28
  %318 = mul i32 %317, 3
  %319 = sub i32 %299, %300
  %320 = mul i32 %319, 13
  %321 = sub i32 %29, %298
  %322 = mul i32 %321, 6
  %323 = add i32 %107, %120
  %324 = shl i32 %323, 2
  %325 = add i32 %1, -1
  %326 = add i32 %325, %59
  %327 = add i32 %326, %176
  %328 = add i32 %327, %151
  %329 = add i32 %328, %33
  %330 = add i32 %329, %293
  %331 = add i32 %330, %295
  %332 = add i32 %331, %285
  %333 = add i32 %332, %279
  %334 = add i32 %333, %254
  %335 = add i32 %334, %248
  %336 = add i32 %335, %241
  %337 = add i32 %336, %238
  %338 = add i32 %337, %221
  %339 = add i32 %338, %195
  %340 = add i32 %339, %187
  %341 = add i32 %340, %164
  %342 = add i32 %341, %157
  %343 = add i32 %342, %154
  %344 = add i32 %343, %129
  %345 = add i32 %344, %115
  %346 = add i32 %345, %106
  %347 = add i32 %346, %38
  %348 = add i32 %347, %31
  %349 = add i32 %348, %4
  %350 = shl i32 %349, 1
  %351 = add i32 %1, %0
  %352 = add i32 %351, 2
  %353 = sub i32 %352, %30
  %354 = sub i32 %353, %2
  %355 = add i32 %354, %40
  %356 = add i32 %355, %58
  %357 = add i32 %356, %223
  %358 = sub i32 %357, %35
  %359 = sub i32 %358, %246
  %360 = add i32 %359, %282
  %361 = add i32 %360, %46
  %362 = sub i32 %361, %47
  %363 = sub i32 %362, %8
  %364 = add i32 %363, %79
  %365 = add i32 %364, %87
  %366 = sub i32 %365, %91
  %367 = sub i32 %366, %95
  %368 = add i32 %367, %114
  %369 = add i32 %368, %118
  %370 = add i32 %369, %126
  %371 = add i32 %370, %133
  %372 = add i32 %371, %135
  %373 = sub i32 %372, %138
  %374 = sub i32 %373, %147
  %375 = add i32 %374, %148
  %376 = sub i32 %375, %155
  %377 = add i32 %376, %160
  %378 = sub i32 %377, %161
  %379 = add i32 %378, %92
  %380 = add i32 %379, %116
  %381 = add i32 %380, %167
  %382 = add i32 %381, %173
  %383 = add i32 %382, %186
  %384 = add i32 %383, %204
  %385 = add i32 %384, %34
  %386 = add i32 %385, %214
  %387 = add i32 %386, %57
  %388 = add i32 %387, %225
  %389 = sub i32 %388, %81
  %390 = add i32 %389, %230
  %391 = sub i32 %390, %49
  %392 = add i32 %391, %245
  %393 = add i32 %392, %247
  %394 = add i32 %393, %250
  %395 = sub i32 %394, %256
  %396 = add i32 %395, %265
  %397 = add i32 %396, %270
  %398 = sub i32 %397, %271
  %399 = add i32 %398, %281
  %400 = sub i32 %399, %41
  %401 = sub i32 %400, %44
  %402 = sub i32 %401, %48
  %403 = sub i32 %402, %51
  %404 = sub i32 %403, %54
  %405 = sub i32 %404, %56
  %406 = add i32 %405, %60
  %407 = add i32 %406, %66
  %408 = add i32 %407, %67
  %409 = add i32 %408, %78
  %410 = add i32 %409, %80
  %411 = sub i32 %410, %83
  %412 = sub i32 %411, %84
  %413 = add i32 %412, %86
  %414 = sub i32 %413, %88
  %415 = add i32 %414, %89
  %416 = add i32 %415, %90
  %417 = sub i32 %416, %94
  %418 = add i32 %417, %96
  %419 = sub i32 %418, %101
  %420 = sub i32 %419, %102
  %421 = add i32 %420, %103
  %422 = sub i32 %421, %104
  %423 = sub i32 %422, %110
  %424 = sub i32 %423, %112
  %425 = add i32 %424, %113
  %426 = sub i32 %425, %117
  %427 = sub i32 %426, %119
  %428 = sub i32 %427, %123
  %429 = sub i32 %428, %125
  %430 = sub i32 %429, %127
  %431 = add i32 %430, %128
  %432 = add i32 %431, %130
  %433 = add i32 %432, %134
  %434 = add i32 %433, %144
  %435 = sub i32 %434, %145
  %436 = add i32 %435, %146
  %437 = add i32 %436, %149
  %438 = add i32 %437, %150
  %439 = add i32 %438, %153
  %440 = sub i32 %439, %158
  %441 = sub i32 %440, %163
  %442 = sub i32 %441, %165
  %443 = sub i32 %442, %166
  %444 = sub i32 %443, %170
  %445 = add i32 %444, %171
  %446 = add i32 %445, %97
  %447 = add i32 %446, %172
  %448 = add i32 %447, %175
  %449 = sub i32 %448, %178
  %450 = sub i32 %449, %179
  %451 = sub i32 %450, %180
  %452 = add i32 %451, %181
  %453 = sub i32 %452, %188
  %454 = add i32 %453, %189
  %455 = sub i32 %454, %190
  %456 = sub i32 %455, %192
  %457 = sub i32 %456, %194
  %458 = sub i32 %457, %196
  %459 = sub i32 %458, %197
  %460 = add i32 %459, %200
  %461 = add i32 %460, %202
  %462 = add i32 %461, %203
  %463 = sub i32 %462, %205
  %464 = sub i32 %463, %206
  %465 = sub i32 %464, %207
  %466 = sub i32 %465, %208
  %467 = add i32 %466, %213
  %468 = sub i32 %467, %215
  %469 = sub i32 %468, %216
  %470 = sub i32 %469, %219
  %471 = add i32 %470, %220
  %472 = add i32 %471, %222
  %473 = sub i32 %472, %224
  %474 = sub i32 %473, %227
  %475 = add i32 %474, %231
  %476 = add i32 %475, %232
  %477 = sub i32 %476, %233
  %478 = sub i32 %477, %234
  %479 = add i32 %478, %74
  %480 = sub i32 %479, %236
  %481 = add i32 %480, %237
  %482 = sub i32 %481, %239
  %483 = add i32 %482, %240
  %484 = sub i32 %483, %242
  %485 = add i32 %484, %249
  %486 = sub i32 %485, %251
  %487 = sub i32 %486, %252
  %488 = sub i32 %487, %253
  %489 = add i32 %488, %255
  %490 = add i32 %489, %258
  %491 = sub i32 %490, %262
  %492 = sub i32 %491, %263
  %493 = sub i32 %492, %264
  %494 = add i32 %493, %272
  %495 = add i32 %494, %273
  %496 = sub i32 %495, %275
  %497 = sub i32 %496, %276
  %498 = sub i32 %497, %278
  %499 = add i32 %498, %280
  %500 = add i32 %499, %283
  %501 = sub i32 %500, %284
  %502 = add i32 %501, %286
  %503 = add i32 %502, %287
  %504 = add i32 %503, %288
  %505 = add i32 %504, %289
  %506 = add i32 %505, %291
  %507 = add i32 %506, %292
  %508 = add i32 %507, %183
  %509 = add i32 %508, %294
  %510 = sub i32 %509, %297
  %511 = sub i32 %510, %19
  %512 = sub i32 %511, %21
  %513 = sub i32 %512, %6
  %514 = sub i32 %513, %37
  %515 = add i32 %514, %65
  %516 = sub i32 %515, %71
  %517 = sub i32 %516, %98
  %518 = sub i32 %517, %100
  %519 = sub i32 %518, %105
  %520 = add i32 %519, %109
  %521 = sub i32 %520, %132
  %522 = sub i32 %521, %137
  %523 = sub i32 %522, %143
  %524 = add i32 %523, %159
  %525 = sub i32 %524, %162
  %526 = sub i32 %525, %169
  %527 = add i32 %526, %177
  %528 = add i32 %527, %185
  %529 = add i32 %528, %199
  %530 = add i32 %529, %201
  %531 = sub i32 %530, %210
  %532 = add i32 %531, %212
  %533 = sub i32 %532, %218
  %534 = sub i32 %533, %228
  %535 = sub i32 %534, %235
  %536 = sub i32 %535, %244
  %537 = add i32 %536, %257
  %538 = sub i32 %537, %260
  %539 = sub i32 %538, %261
  %540 = add i32 %539, %267
  %541 = sub i32 %540, %269
  %542 = add i32 %541, %302
  %543 = add i32 %542, %304
  %544 = add i32 %543, %306
  %545 = add i32 %544, %307
  %546 = add i32 %545, %18
  %547 = sub i32 %546, %27
  %548 = sub i32 %547, %23
  %549 = add i32 %548, %320
  %550 = add i32 %549, %324
  %551 = sub i32 %550, %24
  %552 = sub i32 %551, %77
  %553 = sub i32 %552, %141
  %554 = add i32 %553, %322
  %555 = add i32 %554, %318
  %556 = add i32 %555, %313
  %557 = add i32 %556, %350
  %558 = icmp eq i32 %15, %557
  %559 = select i1 %558, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %560 = tail call i32 @puts(i8* nonnull dereferenceable(1) %559)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
