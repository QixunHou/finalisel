digraph "DFG for'main' function" {
	Node0x934188[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x934208[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x934298[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x9342f8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x934778[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x934858[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x934958[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x934a18[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x934ac8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x934d28[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x934de8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x934f48[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x934fa8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x93a860[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x93aa68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x93abc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x93acd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x93ad98[shape=record, label="  ret i32 0"];
	Node0x934188 -> Node0x934208;
	Node0x934208 -> Node0x934298;
	Node0x934298 -> Node0x9342f8;
	Node0x9342f8 -> Node0x934778;
	Node0x934778 -> Node0x934858;
	Node0x934858 -> Node0x934958;
	Node0x934958 -> Node0x934a18;
	Node0x934a18 -> Node0x934ac8;
	Node0x934ac8 -> Node0x934d28;
	Node0x934d28 -> Node0x934de8;
	Node0x934de8 -> Node0x934f48;
	Node0x934f48 -> Node0x934fa8;
	Node0x934fa8 -> Node0x93a860;
	Node0x93a860 -> Node0x93aa68;
	Node0x93aa68 -> Node0x93abc8;
	Node0x93abc8 -> Node0x93acd8;
	Node0x93acd8 -> Node0x93ad98;
edge [color=red]
	Node0x934188 -> Node0x9342f8;
	Node0x9342f8 -> Node0x934778;
	Node0x934208 -> Node0x934858;
	Node0x934858 -> Node0x934958;
	Node0x934298 -> Node0x934a18;
	Node0x934a18 -> Node0x934ac8;
	Node0x934188 -> Node0x934d28;
	Node0x934208 -> Node0x934d28;
	Node0x934298 -> Node0x934d28;
	Node0x934188 -> Node0x934de8;
	Node0x934208 -> Node0x934f48;
	Node0x934298 -> Node0x934fa8;
	Node0x934de8 -> Node0x93a860;
	Node0x934f48 -> Node0x93a860;
	Node0x934fa8 -> Node0x93a860;
	Node0x934a18 -> Node0x93aa68;
	Node0x934858 -> Node0x93abc8;
	Node0x9342f8 -> Node0x93acd8;
}
