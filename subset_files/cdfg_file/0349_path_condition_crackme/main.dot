digraph "DFG for'main' function" {
	Node0x2453f98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2454018[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x24540a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2454108[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2454588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2454668[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x2454768[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2454828[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x24548d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2454b38[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x2454bf8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2455b68[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2455bc8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2455cc0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x2456a48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2456b88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2456c98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2456d58[shape=record, label="  ret i32 0"];
	Node0x2453f98 -> Node0x2454018;
	Node0x2454018 -> Node0x24540a8;
	Node0x24540a8 -> Node0x2454108;
	Node0x2454108 -> Node0x2454588;
	Node0x2454588 -> Node0x2454668;
	Node0x2454668 -> Node0x2454768;
	Node0x2454768 -> Node0x2454828;
	Node0x2454828 -> Node0x24548d8;
	Node0x24548d8 -> Node0x2454b38;
	Node0x2454b38 -> Node0x2454bf8;
	Node0x2454bf8 -> Node0x2455b68;
	Node0x2455b68 -> Node0x2455bc8;
	Node0x2455bc8 -> Node0x2455cc0;
	Node0x2455cc0 -> Node0x2456a48;
	Node0x2456a48 -> Node0x2456b88;
	Node0x2456b88 -> Node0x2456c98;
	Node0x2456c98 -> Node0x2456d58;
edge [color=red]
	Node0x2453f98 -> Node0x2454108;
	Node0x2454108 -> Node0x2454588;
	Node0x2454018 -> Node0x2454668;
	Node0x2454668 -> Node0x2454768;
	Node0x24540a8 -> Node0x2454828;
	Node0x2454828 -> Node0x24548d8;
	Node0x2453f98 -> Node0x2454b38;
	Node0x2454018 -> Node0x2454b38;
	Node0x24540a8 -> Node0x2454b38;
	Node0x2453f98 -> Node0x2454bf8;
	Node0x2454018 -> Node0x2455b68;
	Node0x24540a8 -> Node0x2455bc8;
	Node0x2454bf8 -> Node0x2455cc0;
	Node0x2455b68 -> Node0x2455cc0;
	Node0x2455bc8 -> Node0x2455cc0;
	Node0x2454828 -> Node0x2456a48;
	Node0x2454668 -> Node0x2456b88;
	Node0x2454108 -> Node0x2456c98;
}
