digraph "DFG for'crackme' function" {
	Node0x21a3620[shape=record, label="  %3 = and i32 %1, %0"];
	Node0x21a3cd0[shape=record, label="  %4 = xor i32 %3, -1"];
	Node0x21a3d90[shape=record, label="  %5 = xor i32 %1, %0"];
	Node0x21a3e00[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0x21a3e70[shape=record, label="  %7 = and i32 %6, %0"];
	Node0x21a3ee0[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x21a3f80[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x21a3ff0[shape=record, label="  %10 = or i32 %6, %0"];
	Node0x21a4060[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x21a40d0[shape=record, label="  %12 = or i32 %1, %0"];
	Node0x21a4140[shape=record, label="  %13 = shl i32 %1, 1"];
	Node0x21a41b0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x21a4250[shape=record, label="  %15 = mul i32 %14, -10"];
	Node0x21a42c0[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x21a4360[shape=record, label="  %17 = mul i32 %7, -6"];
	Node0x21a43d0[shape=record, label="  %18 = add i32 %3, %16"];
	Node0x21a4470[shape=record, label="  %19 = mul i32 %18, -5"];
	Node0x21a44e0[shape=record, label="  %20 = sub i32 -6, %0"];
	Node0x21a4550[shape=record, label="  %21 = sub i32 %20, %0"];
	Node0x21a45c0[shape=record, label="  %22 = add i32 %21, %6"];
	Node0x21a4630[shape=record, label="  %23 = add i32 %22, %5"];
	Node0x21a46a0[shape=record, label="  %24 = sub i32 %23, %12"];
	Node0x21a4710[shape=record, label="  %25 = sub i32 %24, %13"];
	Node0x21a4780[shape=record, label="  %26 = add i32 %25, %11"];
	Node0x21a47f0[shape=record, label="  %27 = add i32 %26, %15"];
	Node0x21a4860[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x21a48d0[shape=record, label="  %29 = add i32 %28, %9"];
	Node0x21a4940[shape=record, label="  %30 = add i32 %29, %19"];
	Node0x21a49b0[shape=record, label="  %31 = icmp eq i32 %30, %4"];
	Node0x2144268[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x21a5060[shape=record, label="  %33 = tail call i32 @puts(i8* nonnull dereferenceable(1) %32)"];
	Node0x21a50b0[shape=record, label="  ret void"];
	Node0x21a3620 -> Node0x21a3cd0;
	Node0x21a3cd0 -> Node0x21a3d90;
	Node0x21a3d90 -> Node0x21a3e00;
	Node0x21a3e00 -> Node0x21a3e70;
	Node0x21a3e70 -> Node0x21a3ee0;
	Node0x21a3ee0 -> Node0x21a3f80;
	Node0x21a3f80 -> Node0x21a3ff0;
	Node0x21a3ff0 -> Node0x21a4060;
	Node0x21a4060 -> Node0x21a40d0;
	Node0x21a40d0 -> Node0x21a4140;
	Node0x21a4140 -> Node0x21a41b0;
	Node0x21a41b0 -> Node0x21a4250;
	Node0x21a4250 -> Node0x21a42c0;
	Node0x21a42c0 -> Node0x21a4360;
	Node0x21a4360 -> Node0x21a43d0;
	Node0x21a43d0 -> Node0x21a4470;
	Node0x21a4470 -> Node0x21a44e0;
	Node0x21a44e0 -> Node0x21a4550;
	Node0x21a4550 -> Node0x21a45c0;
	Node0x21a45c0 -> Node0x21a4630;
	Node0x21a4630 -> Node0x21a46a0;
	Node0x21a46a0 -> Node0x21a4710;
	Node0x21a4710 -> Node0x21a4780;
	Node0x21a4780 -> Node0x21a47f0;
	Node0x21a47f0 -> Node0x21a4860;
	Node0x21a4860 -> Node0x21a48d0;
	Node0x21a48d0 -> Node0x21a4940;
	Node0x21a4940 -> Node0x21a49b0;
	Node0x21a49b0 -> Node0x2144268;
	Node0x2144268 -> Node0x21a5060;
	Node0x21a5060 -> Node0x21a50b0;
edge [color=red]
	Node0x21a3620 -> Node0x21a3cd0;
	Node0x21a3e00 -> Node0x21a3e70;
	Node0x21a3e70 -> Node0x21a3ee0;
	Node0x21a3ee0 -> Node0x21a3f80;
	Node0x21a3e00 -> Node0x21a3ff0;
	Node0x21a3ff0 -> Node0x21a4060;
	Node0x21a40d0 -> Node0x21a41b0;
	Node0x21a41b0 -> Node0x21a4250;
	Node0x21a3ff0 -> Node0x21a42c0;
	Node0x21a3e70 -> Node0x21a4360;
	Node0x21a3620 -> Node0x21a43d0;
	Node0x21a42c0 -> Node0x21a43d0;
	Node0x21a43d0 -> Node0x21a4470;
	Node0x21a44e0 -> Node0x21a4550;
	Node0x21a4550 -> Node0x21a45c0;
	Node0x21a3e00 -> Node0x21a45c0;
	Node0x21a45c0 -> Node0x21a4630;
	Node0x21a3d90 -> Node0x21a4630;
	Node0x21a4630 -> Node0x21a46a0;
	Node0x21a40d0 -> Node0x21a46a0;
	Node0x21a46a0 -> Node0x21a4710;
	Node0x21a4140 -> Node0x21a4710;
	Node0x21a4710 -> Node0x21a4780;
	Node0x21a4060 -> Node0x21a4780;
	Node0x21a4780 -> Node0x21a47f0;
	Node0x21a4250 -> Node0x21a47f0;
	Node0x21a47f0 -> Node0x21a4860;
	Node0x21a4360 -> Node0x21a4860;
	Node0x21a4860 -> Node0x21a48d0;
	Node0x21a3f80 -> Node0x21a48d0;
	Node0x21a48d0 -> Node0x21a4940;
	Node0x21a4470 -> Node0x21a4940;
	Node0x21a4940 -> Node0x21a49b0;
	Node0x21a3cd0 -> Node0x21a49b0;
	Node0x21a49b0 -> Node0x2144268;
	Node0x2144268 -> Node0x21a5060;
}
