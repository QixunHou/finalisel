digraph "DFG for'main' function" {
	Node0x21a5278[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21a52f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21a5388[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x21a57e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x21a58c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x21a59e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21a5c20[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x21a5cd8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21a6c48[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21a72d0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x21a7340[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x21a73b0[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x21a7420[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x21a7490[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x21a7500[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x21a7570[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x21a75e0[shape=record, label="  %15 = or i32 %6, %11"];
	Node0x21a7650[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x21a76c0[shape=record, label="  %17 = shl i32 %7, 1"];
	Node0x21a7730[shape=record, label="  %18 = xor i32 %16, -1"];
	Node0x21a77a0[shape=record, label="  %19 = mul i32 %18, -10"];
	Node0x21a7810[shape=record, label="  %20 = xor i32 %15, -1"];
	Node0x21a7880[shape=record, label="  %21 = mul i32 %12, -6"];
	Node0x21a78f0[shape=record, label="  %22 = add i32 %8, %20"];
	Node0x21a7960[shape=record, label="  %23 = mul i32 %22, -5"];
	Node0x21a79d0[shape=record, label="  %24 = sub i32 %15, %6"];
	Node0x21a7a40[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x21a7ae0[shape=record, label="  %26 = sub i32 -7, %7"];
	Node0x21a7b50[shape=record, label="  %27 = add i32 %26, %10"];
	Node0x21a7bc0[shape=record, label="  %28 = sub i32 %27, %16"];
	Node0x21a7c30[shape=record, label="  %29 = sub i32 %28, %17"];
	Node0x21a7ca0[shape=record, label="  %30 = add i32 %29, %19"];
	Node0x21a7d10[shape=record, label="  %31 = add i32 %30, %21"];
	Node0x21a7d80[shape=record, label="  %32 = add i32 %31, %14"];
	Node0x21a7df0[shape=record, label="  %33 = add i32 %32, %23"];
	Node0x21a7e60[shape=record, label="  %34 = add i32 %33, %25"];
	Node0x21a7ed0[shape=record, label="  %35 = icmp eq i32 %34, %9"];
	Node0x21459d8[shape=record, label="  %36 = select i1 %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x21a7f60[shape=record, label="  %37 = call i32 @puts(i8* nonnull dereferenceable(1) %36) #5"];
	Node0x21a81b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21a8318[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x21a83d8[shape=record, label="  ret i32 0"];
	Node0x21a5278 -> Node0x21a52f8;
	Node0x21a52f8 -> Node0x21a5388;
	Node0x21a5388 -> Node0x21a57e8;
	Node0x21a57e8 -> Node0x21a58c8;
	Node0x21a58c8 -> Node0x21a59e8;
	Node0x21a59e8 -> Node0x21a5c20;
	Node0x21a5c20 -> Node0x21a5cd8;
	Node0x21a5cd8 -> Node0x21a6c48;
	Node0x21a6c48 -> Node0x21a72d0;
	Node0x21a72d0 -> Node0x21a7340;
	Node0x21a7340 -> Node0x21a73b0;
	Node0x21a73b0 -> Node0x21a7420;
	Node0x21a7420 -> Node0x21a7490;
	Node0x21a7490 -> Node0x21a7500;
	Node0x21a7500 -> Node0x21a7570;
	Node0x21a7570 -> Node0x21a75e0;
	Node0x21a75e0 -> Node0x21a7650;
	Node0x21a7650 -> Node0x21a76c0;
	Node0x21a76c0 -> Node0x21a7730;
	Node0x21a7730 -> Node0x21a77a0;
	Node0x21a77a0 -> Node0x21a7810;
	Node0x21a7810 -> Node0x21a7880;
	Node0x21a7880 -> Node0x21a78f0;
	Node0x21a78f0 -> Node0x21a7960;
	Node0x21a7960 -> Node0x21a79d0;
	Node0x21a79d0 -> Node0x21a7a40;
	Node0x21a7a40 -> Node0x21a7ae0;
	Node0x21a7ae0 -> Node0x21a7b50;
	Node0x21a7b50 -> Node0x21a7bc0;
	Node0x21a7bc0 -> Node0x21a7c30;
	Node0x21a7c30 -> Node0x21a7ca0;
	Node0x21a7ca0 -> Node0x21a7d10;
	Node0x21a7d10 -> Node0x21a7d80;
	Node0x21a7d80 -> Node0x21a7df0;
	Node0x21a7df0 -> Node0x21a7e60;
	Node0x21a7e60 -> Node0x21a7ed0;
	Node0x21a7ed0 -> Node0x21459d8;
	Node0x21459d8 -> Node0x21a7f60;
	Node0x21a7f60 -> Node0x21a81b8;
	Node0x21a81b8 -> Node0x21a8318;
	Node0x21a8318 -> Node0x21a83d8;
edge [color=red]
	Node0x21a5278 -> Node0x21a5388;
	Node0x21a5388 -> Node0x21a57e8;
	Node0x21a52f8 -> Node0x21a58c8;
	Node0x21a58c8 -> Node0x21a59e8;
	Node0x21a5278 -> Node0x21a5c20;
	Node0x21a52f8 -> Node0x21a5c20;
	Node0x21a5278 -> Node0x21a5cd8;
	Node0x21a52f8 -> Node0x21a6c48;
	Node0x21a6c48 -> Node0x21a72d0;
	Node0x21a5cd8 -> Node0x21a72d0;
	Node0x21a72d0 -> Node0x21a7340;
	Node0x21a6c48 -> Node0x21a73b0;
	Node0x21a5cd8 -> Node0x21a73b0;
	Node0x21a6c48 -> Node0x21a7420;
	Node0x21a5cd8 -> Node0x21a7490;
	Node0x21a7420 -> Node0x21a7490;
	Node0x21a7490 -> Node0x21a7500;
	Node0x21a7500 -> Node0x21a7570;
	Node0x21a5cd8 -> Node0x21a75e0;
	Node0x21a7420 -> Node0x21a75e0;
	Node0x21a6c48 -> Node0x21a7650;
	Node0x21a5cd8 -> Node0x21a7650;
	Node0x21a6c48 -> Node0x21a76c0;
	Node0x21a7650 -> Node0x21a7730;
	Node0x21a7730 -> Node0x21a77a0;
	Node0x21a75e0 -> Node0x21a7810;
	Node0x21a7490 -> Node0x21a7880;
	Node0x21a72d0 -> Node0x21a78f0;
	Node0x21a7810 -> Node0x21a78f0;
	Node0x21a78f0 -> Node0x21a7960;
	Node0x21a75e0 -> Node0x21a79d0;
	Node0x21a5cd8 -> Node0x21a79d0;
	Node0x21a79d0 -> Node0x21a7a40;
	Node0x21a6c48 -> Node0x21a7ae0;
	Node0x21a7ae0 -> Node0x21a7b50;
	Node0x21a73b0 -> Node0x21a7b50;
	Node0x21a7b50 -> Node0x21a7bc0;
	Node0x21a7650 -> Node0x21a7bc0;
	Node0x21a7bc0 -> Node0x21a7c30;
	Node0x21a76c0 -> Node0x21a7c30;
	Node0x21a7c30 -> Node0x21a7ca0;
	Node0x21a77a0 -> Node0x21a7ca0;
	Node0x21a7ca0 -> Node0x21a7d10;
	Node0x21a7880 -> Node0x21a7d10;
	Node0x21a7d10 -> Node0x21a7d80;
	Node0x21a7570 -> Node0x21a7d80;
	Node0x21a7d80 -> Node0x21a7df0;
	Node0x21a7960 -> Node0x21a7df0;
	Node0x21a7df0 -> Node0x21a7e60;
	Node0x21a7a40 -> Node0x21a7e60;
	Node0x21a7e60 -> Node0x21a7ed0;
	Node0x21a7340 -> Node0x21a7ed0;
	Node0x21a7ed0 -> Node0x21459d8;
	Node0x21459d8 -> Node0x21a7f60;
	Node0x21a58c8 -> Node0x21a81b8;
	Node0x21a5388 -> Node0x21a8318;
}
