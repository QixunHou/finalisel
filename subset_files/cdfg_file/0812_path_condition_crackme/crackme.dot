digraph "DFG for'crackme' function" {
	Node0x1e57c70[shape=record, label="  %3 = mul i32 %0, -2"];
	Node0x1e57ce0[shape=record, label="  %4 = xor i32 %1, %0"];
	Node0x1e57da0[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x1e57e10[shape=record, label="  %6 = or i32 %5, %0"];
	Node0x1e57eb0[shape=record, label="  %7 = shl i32 %4, 2"];
	Node0x1e57f50[shape=record, label="  %8 = xor i32 %7, -4"];
	Node0x1e57fc0[shape=record, label="  %9 = and i32 %1, %0"];
	Node0x1e58030[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1e580d0[shape=record, label="  %11 = shl i32 %0, 1"];
	Node0x1e58140[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x1e581b0[shape=record, label="  %13 = and i32 %5, %0"];
	Node0x1e58220[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1e58290[shape=record, label="  %15 = or i32 %1, %0"];
	Node0x1e58300[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1e58370[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1e583e0[shape=record, label="  %18 = xor i32 %6, -1"];
	Node0x1e58480[shape=record, label="  %19 = mul i32 %18, -3"];
	Node0x1e58520[shape=record, label="  %20 = mul i32 %13, -6"];
	Node0x1e58590[shape=record, label="  %21 = sub i32 -3, %1"];
	Node0x1e58600[shape=record, label="  %22 = sub i32 %21, %6"];
	Node0x1e58670[shape=record, label="  %23 = add i32 %22, %4"];
	Node0x1e586e0[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x1e58750[shape=record, label="  %25 = sub i32 %24, %12"];
	Node0x1e587c0[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x1e58830[shape=record, label="  %27 = add i32 %26, %19"];
	Node0x1e588a0[shape=record, label="  %28 = add i32 %27, %20"];
	Node0x1e58910[shape=record, label="  %29 = sub i32 %28, %8"];
	Node0x1e58980[shape=record, label="  %30 = add i32 %29, %17"];
	Node0x1e589f0[shape=record, label="  %31 = icmp eq i32 %3, %30"];
	Node0x1df8268[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e590a0[shape=record, label="  %33 = tail call i32 @puts(i8* nonnull dereferenceable(1) %32)"];
	Node0x1e590f0[shape=record, label="  ret void"];
	Node0x1e57c70 -> Node0x1e57ce0;
	Node0x1e57ce0 -> Node0x1e57da0;
	Node0x1e57da0 -> Node0x1e57e10;
	Node0x1e57e10 -> Node0x1e57eb0;
	Node0x1e57eb0 -> Node0x1e57f50;
	Node0x1e57f50 -> Node0x1e57fc0;
	Node0x1e57fc0 -> Node0x1e58030;
	Node0x1e58030 -> Node0x1e580d0;
	Node0x1e580d0 -> Node0x1e58140;
	Node0x1e58140 -> Node0x1e581b0;
	Node0x1e581b0 -> Node0x1e58220;
	Node0x1e58220 -> Node0x1e58290;
	Node0x1e58290 -> Node0x1e58300;
	Node0x1e58300 -> Node0x1e58370;
	Node0x1e58370 -> Node0x1e583e0;
	Node0x1e583e0 -> Node0x1e58480;
	Node0x1e58480 -> Node0x1e58520;
	Node0x1e58520 -> Node0x1e58590;
	Node0x1e58590 -> Node0x1e58600;
	Node0x1e58600 -> Node0x1e58670;
	Node0x1e58670 -> Node0x1e586e0;
	Node0x1e586e0 -> Node0x1e58750;
	Node0x1e58750 -> Node0x1e587c0;
	Node0x1e587c0 -> Node0x1e58830;
	Node0x1e58830 -> Node0x1e588a0;
	Node0x1e588a0 -> Node0x1e58910;
	Node0x1e58910 -> Node0x1e58980;
	Node0x1e58980 -> Node0x1e589f0;
	Node0x1e589f0 -> Node0x1df8268;
	Node0x1df8268 -> Node0x1e590a0;
	Node0x1e590a0 -> Node0x1e590f0;
edge [color=red]
	Node0x1e57da0 -> Node0x1e57e10;
	Node0x1e57ce0 -> Node0x1e57eb0;
	Node0x1e57eb0 -> Node0x1e57f50;
	Node0x1e57fc0 -> Node0x1e58030;
	Node0x1e580d0 -> Node0x1e58140;
	Node0x1e57da0 -> Node0x1e581b0;
	Node0x1e581b0 -> Node0x1e58220;
	Node0x1e58290 -> Node0x1e58300;
	Node0x1e58300 -> Node0x1e58370;
	Node0x1e57e10 -> Node0x1e583e0;
	Node0x1e583e0 -> Node0x1e58480;
	Node0x1e581b0 -> Node0x1e58520;
	Node0x1e58590 -> Node0x1e58600;
	Node0x1e57e10 -> Node0x1e58600;
	Node0x1e58600 -> Node0x1e58670;
	Node0x1e57ce0 -> Node0x1e58670;
	Node0x1e58670 -> Node0x1e586e0;
	Node0x1e58030 -> Node0x1e586e0;
	Node0x1e586e0 -> Node0x1e58750;
	Node0x1e58140 -> Node0x1e58750;
	Node0x1e58750 -> Node0x1e587c0;
	Node0x1e58220 -> Node0x1e587c0;
	Node0x1e587c0 -> Node0x1e58830;
	Node0x1e58480 -> Node0x1e58830;
	Node0x1e58830 -> Node0x1e588a0;
	Node0x1e58520 -> Node0x1e588a0;
	Node0x1e588a0 -> Node0x1e58910;
	Node0x1e57f50 -> Node0x1e58910;
	Node0x1e58910 -> Node0x1e58980;
	Node0x1e58370 -> Node0x1e58980;
	Node0x1e57c70 -> Node0x1e589f0;
	Node0x1e58980 -> Node0x1e589f0;
	Node0x1e589f0 -> Node0x1df8268;
	Node0x1df8268 -> Node0x1e590a0;
}
