digraph "DFG for'main' function" {
	Node0x1e592b8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e59338[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e593c8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e59828[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e59908[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e59a28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e59c60[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e59d18[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e5ac88[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e5b310[shape=record, label="  %8 = mul i32 %6, -2"];
	Node0x1e5b380[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x1e5b3f0[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x1e5b460[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x1e5b4d0[shape=record, label="  %12 = shl i32 %9, 2"];
	Node0x1e5b540[shape=record, label="  %13 = xor i32 %12, -4"];
	Node0x1e5b5b0[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x1e5b620[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1e5b690[shape=record, label="  %16 = shl i32 %6, 1"];
	Node0x1e5b700[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1e5b770[shape=record, label="  %18 = and i32 %6, %10"];
	Node0x1e5b7e0[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x1e5b850[shape=record, label="  %20 = or i32 %7, %6"];
	Node0x1e5b8c0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1e5b930[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x1e5b9a0[shape=record, label="  %23 = xor i32 %11, -1"];
	Node0x1e5ba10[shape=record, label="  %24 = mul i32 %23, -3"];
	Node0x1e5ba80[shape=record, label="  %25 = mul i32 %18, -6"];
	Node0x1e5baf0[shape=record, label="  %26 = sub i32 -3, %7"];
	Node0x1e5bb60[shape=record, label="  %27 = sub i32 %26, %11"];
	Node0x1e5bbd0[shape=record, label="  %28 = add i32 %27, %9"];
	Node0x1e5bc40[shape=record, label="  %29 = add i32 %28, %15"];
	Node0x1e5bcb0[shape=record, label="  %30 = sub i32 %29, %17"];
	Node0x1e5bd20[shape=record, label="  %31 = add i32 %30, %19"];
	Node0x1e5bd90[shape=record, label="  %32 = add i32 %31, %24"];
	Node0x1e5be00[shape=record, label="  %33 = add i32 %32, %25"];
	Node0x1e5be70[shape=record, label="  %34 = sub i32 %33, %13"];
	Node0x1e5bee0[shape=record, label="  %35 = add i32 %34, %22"];
	Node0x1e5bf50[shape=record, label="  %36 = icmp eq i32 %8, %35"];
	Node0x1df99d8[shape=record, label="  %37 = select i1 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e5bfe0[shape=record, label="  %38 = call i32 @puts(i8* nonnull dereferenceable(1) %37) #5"];
	Node0x1e5c238[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e5c398[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e5c458[shape=record, label="  ret i32 0"];
	Node0x1e592b8 -> Node0x1e59338;
	Node0x1e59338 -> Node0x1e593c8;
	Node0x1e593c8 -> Node0x1e59828;
	Node0x1e59828 -> Node0x1e59908;
	Node0x1e59908 -> Node0x1e59a28;
	Node0x1e59a28 -> Node0x1e59c60;
	Node0x1e59c60 -> Node0x1e59d18;
	Node0x1e59d18 -> Node0x1e5ac88;
	Node0x1e5ac88 -> Node0x1e5b310;
	Node0x1e5b310 -> Node0x1e5b380;
	Node0x1e5b380 -> Node0x1e5b3f0;
	Node0x1e5b3f0 -> Node0x1e5b460;
	Node0x1e5b460 -> Node0x1e5b4d0;
	Node0x1e5b4d0 -> Node0x1e5b540;
	Node0x1e5b540 -> Node0x1e5b5b0;
	Node0x1e5b5b0 -> Node0x1e5b620;
	Node0x1e5b620 -> Node0x1e5b690;
	Node0x1e5b690 -> Node0x1e5b700;
	Node0x1e5b700 -> Node0x1e5b770;
	Node0x1e5b770 -> Node0x1e5b7e0;
	Node0x1e5b7e0 -> Node0x1e5b850;
	Node0x1e5b850 -> Node0x1e5b8c0;
	Node0x1e5b8c0 -> Node0x1e5b930;
	Node0x1e5b930 -> Node0x1e5b9a0;
	Node0x1e5b9a0 -> Node0x1e5ba10;
	Node0x1e5ba10 -> Node0x1e5ba80;
	Node0x1e5ba80 -> Node0x1e5baf0;
	Node0x1e5baf0 -> Node0x1e5bb60;
	Node0x1e5bb60 -> Node0x1e5bbd0;
	Node0x1e5bbd0 -> Node0x1e5bc40;
	Node0x1e5bc40 -> Node0x1e5bcb0;
	Node0x1e5bcb0 -> Node0x1e5bd20;
	Node0x1e5bd20 -> Node0x1e5bd90;
	Node0x1e5bd90 -> Node0x1e5be00;
	Node0x1e5be00 -> Node0x1e5be70;
	Node0x1e5be70 -> Node0x1e5bee0;
	Node0x1e5bee0 -> Node0x1e5bf50;
	Node0x1e5bf50 -> Node0x1df99d8;
	Node0x1df99d8 -> Node0x1e5bfe0;
	Node0x1e5bfe0 -> Node0x1e5c238;
	Node0x1e5c238 -> Node0x1e5c398;
	Node0x1e5c398 -> Node0x1e5c458;
edge [color=red]
	Node0x1e592b8 -> Node0x1e593c8;
	Node0x1e593c8 -> Node0x1e59828;
	Node0x1e59338 -> Node0x1e59908;
	Node0x1e59908 -> Node0x1e59a28;
	Node0x1e592b8 -> Node0x1e59c60;
	Node0x1e59338 -> Node0x1e59c60;
	Node0x1e592b8 -> Node0x1e59d18;
	Node0x1e59338 -> Node0x1e5ac88;
	Node0x1e59d18 -> Node0x1e5b310;
	Node0x1e5ac88 -> Node0x1e5b380;
	Node0x1e59d18 -> Node0x1e5b380;
	Node0x1e5ac88 -> Node0x1e5b3f0;
	Node0x1e59d18 -> Node0x1e5b460;
	Node0x1e5b3f0 -> Node0x1e5b460;
	Node0x1e5b380 -> Node0x1e5b4d0;
	Node0x1e5b4d0 -> Node0x1e5b540;
	Node0x1e5ac88 -> Node0x1e5b5b0;
	Node0x1e59d18 -> Node0x1e5b5b0;
	Node0x1e5b5b0 -> Node0x1e5b620;
	Node0x1e59d18 -> Node0x1e5b690;
	Node0x1e5b690 -> Node0x1e5b700;
	Node0x1e59d18 -> Node0x1e5b770;
	Node0x1e5b3f0 -> Node0x1e5b770;
	Node0x1e5b770 -> Node0x1e5b7e0;
	Node0x1e5ac88 -> Node0x1e5b850;
	Node0x1e59d18 -> Node0x1e5b850;
	Node0x1e5b850 -> Node0x1e5b8c0;
	Node0x1e5b8c0 -> Node0x1e5b930;
	Node0x1e5b460 -> Node0x1e5b9a0;
	Node0x1e5b9a0 -> Node0x1e5ba10;
	Node0x1e5b770 -> Node0x1e5ba80;
	Node0x1e5ac88 -> Node0x1e5baf0;
	Node0x1e5baf0 -> Node0x1e5bb60;
	Node0x1e5b460 -> Node0x1e5bb60;
	Node0x1e5bb60 -> Node0x1e5bbd0;
	Node0x1e5b380 -> Node0x1e5bbd0;
	Node0x1e5bbd0 -> Node0x1e5bc40;
	Node0x1e5b620 -> Node0x1e5bc40;
	Node0x1e5bc40 -> Node0x1e5bcb0;
	Node0x1e5b700 -> Node0x1e5bcb0;
	Node0x1e5bcb0 -> Node0x1e5bd20;
	Node0x1e5b7e0 -> Node0x1e5bd20;
	Node0x1e5bd20 -> Node0x1e5bd90;
	Node0x1e5ba10 -> Node0x1e5bd90;
	Node0x1e5bd90 -> Node0x1e5be00;
	Node0x1e5ba80 -> Node0x1e5be00;
	Node0x1e5be00 -> Node0x1e5be70;
	Node0x1e5b540 -> Node0x1e5be70;
	Node0x1e5be70 -> Node0x1e5bee0;
	Node0x1e5b930 -> Node0x1e5bee0;
	Node0x1e5b310 -> Node0x1e5bf50;
	Node0x1e5bee0 -> Node0x1e5bf50;
	Node0x1e5bf50 -> Node0x1df99d8;
	Node0x1df99d8 -> Node0x1e5bfe0;
	Node0x1e59908 -> Node0x1e5c238;
	Node0x1e593c8 -> Node0x1e5c398;
}
