digraph "DFG for'main' function" {
	Node0x7c8c28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x7c8ca8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x7c8d38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x7c8d98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x7c8e48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x7c9278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7c9358[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x7c9458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7c9518[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x7c95c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x7c9688[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x7c9738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x7c3b50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x7c9938[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x7ca8a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x7caf18[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x7caf78[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x7caff0[shape=record, label="  %14 = shl i32 %11, 1"];
	Node0x7cb060[shape=record, label="  %15 = sub i32 %14, %13"];
	Node0x7cb0d0[shape=record, label="  %16 = xor i32 %12, %11"];
	Node0x7cb140[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x7cb1b0[shape=record, label="  %18 = xor i32 %12, -1"];
	Node0x7cb220[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x7cb290[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x7cb300[shape=record, label="  %21 = xor i32 %11, 2147483647"];
	Node0x7cb370[shape=record, label="  %22 = and i32 %21, %12"];
	Node0x7cb3e0[shape=record, label="  %23 = and i32 %11, %18"];
	Node0x7cb450[shape=record, label="  %24 = shl i32 %23, 2"];
	Node0x7cb4c0[shape=record, label="  %25 = and i32 %12, %11"];
	Node0x7cb530[shape=record, label="  %26 = xor i32 %13, %10"];
	Node0x7cb5a0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x7cb610[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x7cb680[shape=record, label="  %29 = and i32 %13, %10"];
	Node0x7cb6f0[shape=record, label="  %30 = shl i32 %13, 2"];
	Node0x7cb760[shape=record, label="  %31 = xor i32 %30, -4"];
	Node0x7cb7d0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x7cb840[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x7cb8b0[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x7cb920[shape=record, label="  %35 = xor i32 %13, -1"];
	Node0x7cb990[shape=record, label="  %36 = and i32 %10, %35"];
	Node0x7cba00[shape=record, label="  %37 = mul i32 %36, 5"];
	Node0x7cba70[shape=record, label="  %38 = shl i32 %29, 2"];
	Node0x7cbae0[shape=record, label="  %39 = sub i32 %22, %12"];
	Node0x7cbb50[shape=record, label="  %40 = add i32 %39, %25"];
	Node0x7cbbc0[shape=record, label="  %41 = shl i32 %40, 1"];
	Node0x7cbc30[shape=record, label="  %42 = sub i32 %17, %16"];
	Node0x7cbca0[shape=record, label="  %43 = add i32 %42, %20"];
	Node0x7cbd10[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x7cbd80[shape=record, label="  %45 = sub i32 %44, %26"];
	Node0x7cbdf0[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x7cbe60[shape=record, label="  %47 = sub i32 %46, %31"];
	Node0x7cbed0[shape=record, label="  %48 = add i32 %47, %37"];
	Node0x7cbf40[shape=record, label="  %49 = sub i32 %48, %38"];
	Node0x7cbfb0[shape=record, label="  %50 = add i32 %49, %28"];
	Node0x7cc020[shape=record, label="  %51 = add i32 %50, %34"];
	Node0x7cc090[shape=record, label="  %52 = add i32 %51, %41"];
	Node0x7cc100[shape=record, label="  %53 = icmp eq i32 %15, %52"];
	Node0x7688b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x7cc190[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x7cc438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x7cc598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x7cc6a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7cc7b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7cc878[shape=record, label="  ret i32 0"];
	Node0x7c8c28 -> Node0x7c8ca8;
	Node0x7c8ca8 -> Node0x7c8d38;
	Node0x7c8d38 -> Node0x7c8d98;
	Node0x7c8d98 -> Node0x7c8e48;
	Node0x7c8e48 -> Node0x7c9278;
	Node0x7c9278 -> Node0x7c9358;
	Node0x7c9358 -> Node0x7c9458;
	Node0x7c9458 -> Node0x7c9518;
	Node0x7c9518 -> Node0x7c95c8;
	Node0x7c95c8 -> Node0x7c9688;
	Node0x7c9688 -> Node0x7c9738;
	Node0x7c9738 -> Node0x7c3b50;
	Node0x7c3b50 -> Node0x7c9938;
	Node0x7c9938 -> Node0x7ca8a8;
	Node0x7ca8a8 -> Node0x7caf18;
	Node0x7caf18 -> Node0x7caf78;
	Node0x7caf78 -> Node0x7caff0;
	Node0x7caff0 -> Node0x7cb060;
	Node0x7cb060 -> Node0x7cb0d0;
	Node0x7cb0d0 -> Node0x7cb140;
	Node0x7cb140 -> Node0x7cb1b0;
	Node0x7cb1b0 -> Node0x7cb220;
	Node0x7cb220 -> Node0x7cb290;
	Node0x7cb290 -> Node0x7cb300;
	Node0x7cb300 -> Node0x7cb370;
	Node0x7cb370 -> Node0x7cb3e0;
	Node0x7cb3e0 -> Node0x7cb450;
	Node0x7cb450 -> Node0x7cb4c0;
	Node0x7cb4c0 -> Node0x7cb530;
	Node0x7cb530 -> Node0x7cb5a0;
	Node0x7cb5a0 -> Node0x7cb610;
	Node0x7cb610 -> Node0x7cb680;
	Node0x7cb680 -> Node0x7cb6f0;
	Node0x7cb6f0 -> Node0x7cb760;
	Node0x7cb760 -> Node0x7cb7d0;
	Node0x7cb7d0 -> Node0x7cb840;
	Node0x7cb840 -> Node0x7cb8b0;
	Node0x7cb8b0 -> Node0x7cb920;
	Node0x7cb920 -> Node0x7cb990;
	Node0x7cb990 -> Node0x7cba00;
	Node0x7cba00 -> Node0x7cba70;
	Node0x7cba70 -> Node0x7cbae0;
	Node0x7cbae0 -> Node0x7cbb50;
	Node0x7cbb50 -> Node0x7cbbc0;
	Node0x7cbbc0 -> Node0x7cbc30;
	Node0x7cbc30 -> Node0x7cbca0;
	Node0x7cbca0 -> Node0x7cbd10;
	Node0x7cbd10 -> Node0x7cbd80;
	Node0x7cbd80 -> Node0x7cbdf0;
	Node0x7cbdf0 -> Node0x7cbe60;
	Node0x7cbe60 -> Node0x7cbed0;
	Node0x7cbed0 -> Node0x7cbf40;
	Node0x7cbf40 -> Node0x7cbfb0;
	Node0x7cbfb0 -> Node0x7cc020;
	Node0x7cc020 -> Node0x7cc090;
	Node0x7cc090 -> Node0x7cc100;
	Node0x7cc100 -> Node0x7688b8;
	Node0x7688b8 -> Node0x7cc190;
	Node0x7cc190 -> Node0x7cc438;
	Node0x7cc438 -> Node0x7cc598;
	Node0x7cc598 -> Node0x7cc6a8;
	Node0x7cc6a8 -> Node0x7cc7b8;
	Node0x7cc7b8 -> Node0x7cc878;
edge [color=red]
	Node0x7c8c28 -> Node0x7c8e48;
	Node0x7c8e48 -> Node0x7c9278;
	Node0x7c8ca8 -> Node0x7c9358;
	Node0x7c9358 -> Node0x7c9458;
	Node0x7c8d38 -> Node0x7c9518;
	Node0x7c9518 -> Node0x7c95c8;
	Node0x7c8d98 -> Node0x7c9688;
	Node0x7c9688 -> Node0x7c9738;
	Node0x7c8c28 -> Node0x7c3b50;
	Node0x7c8ca8 -> Node0x7c3b50;
	Node0x7c8d38 -> Node0x7c3b50;
	Node0x7c8d98 -> Node0x7c3b50;
	Node0x7c8c28 -> Node0x7c9938;
	Node0x7c8ca8 -> Node0x7ca8a8;
	Node0x7c8d38 -> Node0x7caf18;
	Node0x7c8d98 -> Node0x7caf78;
	Node0x7ca8a8 -> Node0x7caff0;
	Node0x7caff0 -> Node0x7cb060;
	Node0x7caf78 -> Node0x7cb060;
	Node0x7caf18 -> Node0x7cb0d0;
	Node0x7ca8a8 -> Node0x7cb0d0;
	Node0x7cb0d0 -> Node0x7cb140;
	Node0x7caf18 -> Node0x7cb1b0;
	Node0x7cb1b0 -> Node0x7cb220;
	Node0x7cb220 -> Node0x7cb290;
	Node0x7ca8a8 -> Node0x7cb300;
	Node0x7cb300 -> Node0x7cb370;
	Node0x7caf18 -> Node0x7cb370;
	Node0x7ca8a8 -> Node0x7cb3e0;
	Node0x7cb1b0 -> Node0x7cb3e0;
	Node0x7cb3e0 -> Node0x7cb450;
	Node0x7caf18 -> Node0x7cb4c0;
	Node0x7ca8a8 -> Node0x7cb4c0;
	Node0x7caf78 -> Node0x7cb530;
	Node0x7c9938 -> Node0x7cb530;
	Node0x7cb530 -> Node0x7cb5a0;
	Node0x7cb5a0 -> Node0x7cb610;
	Node0x7caf78 -> Node0x7cb680;
	Node0x7c9938 -> Node0x7cb680;
	Node0x7caf78 -> Node0x7cb6f0;
	Node0x7cb6f0 -> Node0x7cb760;
	Node0x7caf78 -> Node0x7cb7d0;
	Node0x7c9938 -> Node0x7cb7d0;
	Node0x7cb7d0 -> Node0x7cb840;
	Node0x7cb840 -> Node0x7cb8b0;
	Node0x7caf78 -> Node0x7cb920;
	Node0x7c9938 -> Node0x7cb990;
	Node0x7cb920 -> Node0x7cb990;
	Node0x7cb990 -> Node0x7cba00;
	Node0x7cb680 -> Node0x7cba70;
	Node0x7cb370 -> Node0x7cbae0;
	Node0x7caf18 -> Node0x7cbae0;
	Node0x7cbae0 -> Node0x7cbb50;
	Node0x7cb4c0 -> Node0x7cbb50;
	Node0x7cbb50 -> Node0x7cbbc0;
	Node0x7cb140 -> Node0x7cbc30;
	Node0x7cb0d0 -> Node0x7cbc30;
	Node0x7cbc30 -> Node0x7cbca0;
	Node0x7cb290 -> Node0x7cbca0;
	Node0x7cbca0 -> Node0x7cbd10;
	Node0x7cb450 -> Node0x7cbd10;
	Node0x7cbd10 -> Node0x7cbd80;
	Node0x7cb530 -> Node0x7cbd80;
	Node0x7cbd80 -> Node0x7cbdf0;
	Node0x7cb680 -> Node0x7cbdf0;
	Node0x7cbdf0 -> Node0x7cbe60;
	Node0x7cb760 -> Node0x7cbe60;
	Node0x7cbe60 -> Node0x7cbed0;
	Node0x7cba00 -> Node0x7cbed0;
	Node0x7cbed0 -> Node0x7cbf40;
	Node0x7cba70 -> Node0x7cbf40;
	Node0x7cbf40 -> Node0x7cbfb0;
	Node0x7cb610 -> Node0x7cbfb0;
	Node0x7cbfb0 -> Node0x7cc020;
	Node0x7cb8b0 -> Node0x7cc020;
	Node0x7cc020 -> Node0x7cc090;
	Node0x7cbbc0 -> Node0x7cc090;
	Node0x7cb060 -> Node0x7cc100;
	Node0x7cc090 -> Node0x7cc100;
	Node0x7cc100 -> Node0x7688b8;
	Node0x7688b8 -> Node0x7cc190;
	Node0x7c9688 -> Node0x7cc438;
	Node0x7c9518 -> Node0x7cc598;
	Node0x7c9358 -> Node0x7cc6a8;
	Node0x7c8e48 -> Node0x7cc7b8;
}
