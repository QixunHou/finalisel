digraph "DFG for'main' function" {
	Node0x520b78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x520bf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x520c88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x520ce8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x520d98[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x5211c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5212a8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x5213a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x521468[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x521518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5215d8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x521688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x51bb10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x521888[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5227f8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x522e68[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x522ec8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x522f40[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x522fb0[shape=record, label="  %15 = xor i32 %11, %14"];
	Node0x523020[shape=record, label="  %16 = add i32 %15, %14"];
	Node0x523090[shape=record, label="  %17 = xor i32 %13, %10"];
	Node0x523100[shape=record, label="  %18 = sub i32 %16, %17"];
	Node0x523170[shape=record, label="  %19 = or i32 %11, %14"];
	Node0x5231e0[shape=record, label="  %20 = and i32 %11, %14"];
	Node0x523250[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x5232c0[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x523330[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x5233a0[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x523410[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x523480[shape=record, label="  %26 = shl i32 %23, 2"];
	Node0x5234f0[shape=record, label="  %27 = xor i32 %26, -4"];
	Node0x523560[shape=record, label="  %28 = shl i32 %19, 1"];
	Node0x5235d0[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x523640[shape=record, label="  %30 = mul i32 %24, 6"];
	Node0x5236b0[shape=record, label="  %31 = xor i32 %17, -1"];
	Node0x523720[shape=record, label="  %32 = xor i32 %10, -1"];
	Node0x523790[shape=record, label="  %33 = or i32 %13, %32"];
	Node0x523800[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x523870[shape=record, label="  %35 = and i32 %13, %10"];
	Node0x5238e0[shape=record, label="  %36 = xor i32 %35, -1"];
	Node0x523950[shape=record, label="  %37 = add i32 %20, 1"];
	Node0x5239c0[shape=record, label="  %38 = add i32 %37, %33"];
	Node0x523a30[shape=record, label="  %39 = mul i32 %38, 3"];
	Node0x523aa0[shape=record, label="  %40 = sub i32 %10, %11"];
	Node0x523b10[shape=record, label="  %41 = sub i32 %40, %19"];
	Node0x523b80[shape=record, label="  %42 = sub i32 %41, %23"];
	Node0x523bf0[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x523c60[shape=record, label="  %44 = add i32 %43, %30"];
	Node0x523cd0[shape=record, label="  %45 = add i32 %44, %31"];
	Node0x523d40[shape=record, label="  %46 = add i32 %45, %36"];
	Node0x523db0[shape=record, label="  %47 = sub i32 %46, %22"];
	Node0x523e20[shape=record, label="  %48 = add i32 %47, %27"];
	Node0x523e90[shape=record, label="  %49 = add i32 %48, %29"];
	Node0x523f00[shape=record, label="  %50 = sub i32 %49, %34"];
	Node0x523f70[shape=record, label="  %51 = add i32 %50, %39"];
	Node0x523fe0[shape=record, label="  %52 = icmp eq i32 %18, %51"];
	Node0x4c08b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x524070[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x524318[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x524478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x524588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x524698[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x524758[shape=record, label="  ret i32 0"];
	Node0x520b78 -> Node0x520bf8;
	Node0x520bf8 -> Node0x520c88;
	Node0x520c88 -> Node0x520ce8;
	Node0x520ce8 -> Node0x520d98;
	Node0x520d98 -> Node0x5211c8;
	Node0x5211c8 -> Node0x5212a8;
	Node0x5212a8 -> Node0x5213a8;
	Node0x5213a8 -> Node0x521468;
	Node0x521468 -> Node0x521518;
	Node0x521518 -> Node0x5215d8;
	Node0x5215d8 -> Node0x521688;
	Node0x521688 -> Node0x51bb10;
	Node0x51bb10 -> Node0x521888;
	Node0x521888 -> Node0x5227f8;
	Node0x5227f8 -> Node0x522e68;
	Node0x522e68 -> Node0x522ec8;
	Node0x522ec8 -> Node0x522f40;
	Node0x522f40 -> Node0x522fb0;
	Node0x522fb0 -> Node0x523020;
	Node0x523020 -> Node0x523090;
	Node0x523090 -> Node0x523100;
	Node0x523100 -> Node0x523170;
	Node0x523170 -> Node0x5231e0;
	Node0x5231e0 -> Node0x523250;
	Node0x523250 -> Node0x5232c0;
	Node0x5232c0 -> Node0x523330;
	Node0x523330 -> Node0x5233a0;
	Node0x5233a0 -> Node0x523410;
	Node0x523410 -> Node0x523480;
	Node0x523480 -> Node0x5234f0;
	Node0x5234f0 -> Node0x523560;
	Node0x523560 -> Node0x5235d0;
	Node0x5235d0 -> Node0x523640;
	Node0x523640 -> Node0x5236b0;
	Node0x5236b0 -> Node0x523720;
	Node0x523720 -> Node0x523790;
	Node0x523790 -> Node0x523800;
	Node0x523800 -> Node0x523870;
	Node0x523870 -> Node0x5238e0;
	Node0x5238e0 -> Node0x523950;
	Node0x523950 -> Node0x5239c0;
	Node0x5239c0 -> Node0x523a30;
	Node0x523a30 -> Node0x523aa0;
	Node0x523aa0 -> Node0x523b10;
	Node0x523b10 -> Node0x523b80;
	Node0x523b80 -> Node0x523bf0;
	Node0x523bf0 -> Node0x523c60;
	Node0x523c60 -> Node0x523cd0;
	Node0x523cd0 -> Node0x523d40;
	Node0x523d40 -> Node0x523db0;
	Node0x523db0 -> Node0x523e20;
	Node0x523e20 -> Node0x523e90;
	Node0x523e90 -> Node0x523f00;
	Node0x523f00 -> Node0x523f70;
	Node0x523f70 -> Node0x523fe0;
	Node0x523fe0 -> Node0x4c08b8;
	Node0x4c08b8 -> Node0x524070;
	Node0x524070 -> Node0x524318;
	Node0x524318 -> Node0x524478;
	Node0x524478 -> Node0x524588;
	Node0x524588 -> Node0x524698;
	Node0x524698 -> Node0x524758;
edge [color=red]
	Node0x520b78 -> Node0x520d98;
	Node0x520d98 -> Node0x5211c8;
	Node0x520bf8 -> Node0x5212a8;
	Node0x5212a8 -> Node0x5213a8;
	Node0x520c88 -> Node0x521468;
	Node0x521468 -> Node0x521518;
	Node0x520ce8 -> Node0x5215d8;
	Node0x5215d8 -> Node0x521688;
	Node0x520b78 -> Node0x51bb10;
	Node0x520bf8 -> Node0x51bb10;
	Node0x520c88 -> Node0x51bb10;
	Node0x520ce8 -> Node0x51bb10;
	Node0x520b78 -> Node0x521888;
	Node0x520bf8 -> Node0x5227f8;
	Node0x520c88 -> Node0x522e68;
	Node0x520ce8 -> Node0x522ec8;
	Node0x522e68 -> Node0x522f40;
	Node0x5227f8 -> Node0x522fb0;
	Node0x522f40 -> Node0x522fb0;
	Node0x522fb0 -> Node0x523020;
	Node0x522f40 -> Node0x523020;
	Node0x522ec8 -> Node0x523090;
	Node0x521888 -> Node0x523090;
	Node0x523020 -> Node0x523100;
	Node0x523090 -> Node0x523100;
	Node0x5227f8 -> Node0x523170;
	Node0x522f40 -> Node0x523170;
	Node0x5227f8 -> Node0x5231e0;
	Node0x522f40 -> Node0x5231e0;
	Node0x5231e0 -> Node0x523250;
	Node0x523250 -> Node0x5232c0;
	Node0x522e68 -> Node0x523330;
	Node0x5227f8 -> Node0x523330;
	Node0x522e68 -> Node0x5233a0;
	Node0x5227f8 -> Node0x5233a0;
	Node0x5233a0 -> Node0x523410;
	Node0x523330 -> Node0x523480;
	Node0x523480 -> Node0x5234f0;
	Node0x523170 -> Node0x523560;
	Node0x523560 -> Node0x5235d0;
	Node0x5233a0 -> Node0x523640;
	Node0x523090 -> Node0x5236b0;
	Node0x521888 -> Node0x523720;
	Node0x522ec8 -> Node0x523790;
	Node0x523720 -> Node0x523790;
	Node0x523790 -> Node0x523800;
	Node0x522ec8 -> Node0x523870;
	Node0x521888 -> Node0x523870;
	Node0x523870 -> Node0x5238e0;
	Node0x5231e0 -> Node0x523950;
	Node0x523950 -> Node0x5239c0;
	Node0x523790 -> Node0x5239c0;
	Node0x5239c0 -> Node0x523a30;
	Node0x521888 -> Node0x523aa0;
	Node0x5227f8 -> Node0x523aa0;
	Node0x523aa0 -> Node0x523b10;
	Node0x523170 -> Node0x523b10;
	Node0x523b10 -> Node0x523b80;
	Node0x523330 -> Node0x523b80;
	Node0x523b80 -> Node0x523bf0;
	Node0x523410 -> Node0x523bf0;
	Node0x523bf0 -> Node0x523c60;
	Node0x523640 -> Node0x523c60;
	Node0x523c60 -> Node0x523cd0;
	Node0x5236b0 -> Node0x523cd0;
	Node0x523cd0 -> Node0x523d40;
	Node0x5238e0 -> Node0x523d40;
	Node0x523d40 -> Node0x523db0;
	Node0x5232c0 -> Node0x523db0;
	Node0x523db0 -> Node0x523e20;
	Node0x5234f0 -> Node0x523e20;
	Node0x523e20 -> Node0x523e90;
	Node0x5235d0 -> Node0x523e90;
	Node0x523e90 -> Node0x523f00;
	Node0x523800 -> Node0x523f00;
	Node0x523f00 -> Node0x523f70;
	Node0x523a30 -> Node0x523f70;
	Node0x523100 -> Node0x523fe0;
	Node0x523f70 -> Node0x523fe0;
	Node0x523fe0 -> Node0x4c08b8;
	Node0x4c08b8 -> Node0x524070;
	Node0x5215d8 -> Node0x524318;
	Node0x521468 -> Node0x524478;
	Node0x5212a8 -> Node0x524588;
	Node0x520d98 -> Node0x524698;
}
