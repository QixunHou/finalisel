digraph "DFG for'main' function" {
	Node0x106c768[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x106c7e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x106c878[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x106ccd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x106cdb8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x106ced8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x106d110[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x106d1c8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x106e138[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x106e7c0[shape=record, label="  %8 = xor i32 %7, 2147483647"];
	Node0x106e830[shape=record, label="  %9 = and i32 %8, %6"];
	Node0x106e8a0[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x106e910[shape=record, label="  %11 = add i32 %9, %10"];
	Node0x106e980[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x106e9f0[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x106ea60[shape=record, label="  %14 = shl i32 %10, 1"];
	Node0x106ead0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x106eb40[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x106ebb0[shape=record, label="  %17 = add i32 %7, 2"];
	Node0x106ec20[shape=record, label="  %18 = sub i32 %17, %13"];
	Node0x106ec90[shape=record, label="  %19 = add i32 %18, %16"];
	Node0x106ed00[shape=record, label="  %20 = add i32 %19, %15"];
	Node0x106ed70[shape=record, label="  %21 = add i32 %20, %12"];
	Node0x106ede0[shape=record, label="  %22 = icmp eq i32 %21, %6"];
	Node0x100d9d8[shape=record, label="  %23 = select i1 %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x106ee70[shape=record, label="  %24 = call i32 @puts(i8* nonnull dereferenceable(1) %23) #5"];
	Node0x106f0c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x106f228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x106f2e8[shape=record, label="  ret i32 0"];
	Node0x106c768 -> Node0x106c7e8;
	Node0x106c7e8 -> Node0x106c878;
	Node0x106c878 -> Node0x106ccd8;
	Node0x106ccd8 -> Node0x106cdb8;
	Node0x106cdb8 -> Node0x106ced8;
	Node0x106ced8 -> Node0x106d110;
	Node0x106d110 -> Node0x106d1c8;
	Node0x106d1c8 -> Node0x106e138;
	Node0x106e138 -> Node0x106e7c0;
	Node0x106e7c0 -> Node0x106e830;
	Node0x106e830 -> Node0x106e8a0;
	Node0x106e8a0 -> Node0x106e910;
	Node0x106e910 -> Node0x106e980;
	Node0x106e980 -> Node0x106e9f0;
	Node0x106e9f0 -> Node0x106ea60;
	Node0x106ea60 -> Node0x106ead0;
	Node0x106ead0 -> Node0x106eb40;
	Node0x106eb40 -> Node0x106ebb0;
	Node0x106ebb0 -> Node0x106ec20;
	Node0x106ec20 -> Node0x106ec90;
	Node0x106ec90 -> Node0x106ed00;
	Node0x106ed00 -> Node0x106ed70;
	Node0x106ed70 -> Node0x106ede0;
	Node0x106ede0 -> Node0x100d9d8;
	Node0x100d9d8 -> Node0x106ee70;
	Node0x106ee70 -> Node0x106f0c8;
	Node0x106f0c8 -> Node0x106f228;
	Node0x106f228 -> Node0x106f2e8;
edge [color=red]
	Node0x106c768 -> Node0x106c878;
	Node0x106c878 -> Node0x106ccd8;
	Node0x106c7e8 -> Node0x106cdb8;
	Node0x106cdb8 -> Node0x106ced8;
	Node0x106c768 -> Node0x106d110;
	Node0x106c7e8 -> Node0x106d110;
	Node0x106c768 -> Node0x106d1c8;
	Node0x106c7e8 -> Node0x106e138;
	Node0x106e138 -> Node0x106e7c0;
	Node0x106e7c0 -> Node0x106e830;
	Node0x106d1c8 -> Node0x106e830;
	Node0x106e138 -> Node0x106e8a0;
	Node0x106d1c8 -> Node0x106e8a0;
	Node0x106e830 -> Node0x106e910;
	Node0x106e8a0 -> Node0x106e910;
	Node0x106e910 -> Node0x106e980;
	Node0x106e138 -> Node0x106e9f0;
	Node0x106d1c8 -> Node0x106e9f0;
	Node0x106e8a0 -> Node0x106ea60;
	Node0x106ea60 -> Node0x106ead0;
	Node0x106e138 -> Node0x106eb40;
	Node0x106d1c8 -> Node0x106eb40;
	Node0x106e138 -> Node0x106ebb0;
	Node0x106ebb0 -> Node0x106ec20;
	Node0x106e9f0 -> Node0x106ec20;
	Node0x106ec20 -> Node0x106ec90;
	Node0x106eb40 -> Node0x106ec90;
	Node0x106ec90 -> Node0x106ed00;
	Node0x106ead0 -> Node0x106ed00;
	Node0x106ed00 -> Node0x106ed70;
	Node0x106e980 -> Node0x106ed70;
	Node0x106ed70 -> Node0x106ede0;
	Node0x106d1c8 -> Node0x106ede0;
	Node0x106ede0 -> Node0x100d9d8;
	Node0x100d9d8 -> Node0x106ee70;
	Node0x106cdb8 -> Node0x106f0c8;
	Node0x106c878 -> Node0x106f228;
}
