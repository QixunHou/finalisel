digraph "DFG for'main' function" {
	Node0x1464588[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1464608[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1464698[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14646f8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1464b78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1464c58[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1464d58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1464e18[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1464ec8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1465128[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x14651e8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1465348[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14653a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x146b970[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x146bb78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x146bcd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x146bde8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x146bea8[shape=record, label="  ret i32 0"];
	Node0x1464588 -> Node0x1464608;
	Node0x1464608 -> Node0x1464698;
	Node0x1464698 -> Node0x14646f8;
	Node0x14646f8 -> Node0x1464b78;
	Node0x1464b78 -> Node0x1464c58;
	Node0x1464c58 -> Node0x1464d58;
	Node0x1464d58 -> Node0x1464e18;
	Node0x1464e18 -> Node0x1464ec8;
	Node0x1464ec8 -> Node0x1465128;
	Node0x1465128 -> Node0x14651e8;
	Node0x14651e8 -> Node0x1465348;
	Node0x1465348 -> Node0x14653a8;
	Node0x14653a8 -> Node0x146b970;
	Node0x146b970 -> Node0x146bb78;
	Node0x146bb78 -> Node0x146bcd8;
	Node0x146bcd8 -> Node0x146bde8;
	Node0x146bde8 -> Node0x146bea8;
edge [color=red]
	Node0x1464588 -> Node0x14646f8;
	Node0x14646f8 -> Node0x1464b78;
	Node0x1464608 -> Node0x1464c58;
	Node0x1464c58 -> Node0x1464d58;
	Node0x1464698 -> Node0x1464e18;
	Node0x1464e18 -> Node0x1464ec8;
	Node0x1464588 -> Node0x1465128;
	Node0x1464608 -> Node0x1465128;
	Node0x1464698 -> Node0x1465128;
	Node0x1464588 -> Node0x14651e8;
	Node0x1464608 -> Node0x1465348;
	Node0x1464698 -> Node0x14653a8;
	Node0x14651e8 -> Node0x146b970;
	Node0x1465348 -> Node0x146b970;
	Node0x14653a8 -> Node0x146b970;
	Node0x1464e18 -> Node0x146bb78;
	Node0x1464c58 -> Node0x146bcd8;
	Node0x14646f8 -> Node0x146bde8;
}
