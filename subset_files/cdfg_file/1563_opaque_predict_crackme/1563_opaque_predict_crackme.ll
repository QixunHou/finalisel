; ModuleID = '../.././c_source_file/1563_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1563_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = or i32 %4, %3
  %7 = and i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = add i32 %7, 1
  %10 = sub i32 %9, %6
  %11 = xor i32 %4, -1
  %12 = xor i32 %4, %3
  %13 = and i32 %11, %3
  %14 = xor i32 %13, -1
  %15 = xor i32 %3, -1
  %16 = and i32 %4, %3
  %17 = and i32 %15, %4
  %18 = shl i32 %16, 1
  %19 = xor i32 %2, %0
  %20 = xor i32 %19, -1
  %21 = and i32 %20, %8
  %22 = xor i32 %0, -1
  %23 = xor i32 %1, -1
  %24 = and i32 %23, %2
  %25 = and i32 %24, %22
  %26 = xor i32 %2, %1
  %27 = or i32 %26, %22
  %28 = xor i32 %27, -1
  %29 = or i32 %25, %28
  %30 = and i32 %23, %0
  %31 = xor i32 %30, -1
  %32 = and i32 %31, %2
  %33 = or i32 %19, %7
  %34 = and i32 %2, %1
  %35 = xor i32 %34, -1
  %36 = xor i32 %30, %35
  %37 = xor i32 %1, %0
  %38 = or i32 %37, %2
  %39 = xor i32 %2, -1
  %40 = or i32 %39, %1
  %41 = or i32 %23, %0
  %42 = xor i32 %41, -1
  %43 = and i32 %39, %0
  %44 = xor i32 %43, -1
  %45 = and i32 %39, %1
  %46 = or i32 %45, %30
  %47 = or i32 %23, %2
  %48 = and i32 %47, %0
  %49 = or i32 %25, %48
  %50 = or i32 %2, %1
  %51 = and i32 %50, %0
  %52 = and i32 %24, %0
  %53 = or i32 %26, %0
  %54 = xor i32 %52, %53
  %55 = and i32 %2, %0
  %56 = or i32 %55, %45
  %57 = or i32 %2, %0
  %58 = xor i32 %37, -1
  %59 = and i32 %57, %58
  %60 = xor i32 %45, -1
  %61 = and i32 %60, %0
  %62 = shl i32 %61, 1
  %63 = and i32 %57, %37
  %64 = xor i32 %40, %7
  %65 = or i32 %20, %42
  %66 = xor i32 %53, 1073741823
  %67 = or i32 %66, %52
  %68 = and i32 %34, %0
  %69 = xor i32 %50, %0
  %70 = xor i32 %69, 2147483647
  %71 = xor i32 %70, %68
  %72 = shl i32 %71, 1
  %73 = xor i32 %57, -1
  %74 = or i32 %7, %73
  %75 = or i32 %55, %37
  %76 = shl i32 %75, 1
  %77 = and i32 %26, %31
  %78 = or i32 %1, %0
  %79 = and i32 %19, %78
  %80 = or i32 %39, %0
  %81 = xor i32 %80, -1
  %82 = or i32 %37, %81
  %83 = and i32 %34, %22
  %84 = xor i32 %51, -1
  %85 = xor i32 %83, %84
  %86 = or i32 %73, %1
  %87 = or i32 %55, %1
  %88 = shl i32 %87, 1
  %89 = and i32 %37, %44
  %90 = and i32 %26, %22
  %91 = or i32 %68, %90
  %92 = or i32 %43, %1
  %93 = or i32 %55, %42
  %94 = or i32 %55, %23
  %95 = shl i32 %94, 1
  %96 = or i32 %30, %2
  %97 = and i32 %20, %31
  %98 = xor i32 %55, %78
  %99 = shl i32 %98, 1
  %100 = xor i32 %26, -1
  %101 = and i32 %100, %8
  %102 = shl i32 %57, 1
  %103 = xor i32 %31, %2
  %104 = or i32 %43, %37
  %105 = xor i32 %45, %0
  %106 = xor i32 %78, -1
  %107 = xor i32 %106, %2
  %108 = and i32 %26, %0
  %109 = xor i32 %108, 2147483647
  %110 = xor i32 %109, %83
  %111 = shl i32 %110, 1
  %112 = or i32 %7, %100
  %113 = add i32 %80, 1
  %114 = and i32 %100, %22
  %115 = shl i32 %114, 2
  %116 = or i32 %19, %23
  %117 = shl i32 %116, 1
  %118 = or i32 %42, %2
  %119 = shl i32 %118, 1
  %120 = or i32 %40, %22
  %121 = or i32 %34, %22
  %122 = shl i32 %121, 1
  %123 = xor i32 %50, -1
  %124 = or i32 %55, %123
  %125 = or i32 %7, %2
  %126 = and i32 %20, %1
  %127 = and i32 %19, %23
  %128 = xor i32 %40, -1
  %129 = xor i32 %128, %0
  %130 = xor i32 %35, %0
  %131 = or i32 %100, %0
  %132 = and i32 %19, %1
  %133 = or i32 %60, %22
  %134 = add i32 %19, 1
  %135 = and i32 %47, %22
  %136 = xor i32 %52, -1
  %137 = xor i32 %135, %136
  %138 = and i32 %100, %31
  %139 = or i32 %128, %0
  %140 = and i32 %78, %100
  %141 = shl i32 %140, 1
  %142 = or i32 %50, %0
  %143 = or i32 %26, %30
  %144 = and i32 %50, %22
  %145 = xor i32 %68, -1
  %146 = xor i32 %144, %145
  %147 = or i32 %39, %106
  %148 = or i32 %35, %0
  %149 = or i32 %39, %58
  %150 = or i32 %20, %58
  %151 = or i32 %37, %73
  %152 = xor i32 %30, %60
  %153 = xor i32 %57, %1
  %154 = or i32 %26, %106
  %155 = and i32 %37, %39
  %156 = and i32 %37, %2
  %157 = xor i32 %57, %7
  %158 = or i32 %7, %81
  %159 = shl i32 %100, 1
  %160 = or i32 %7, %128
  %161 = or i32 %45, %0
  %162 = xor i32 %44, %1
  %163 = xor i32 %55, %1
  %164 = and i32 %26, %41
  %165 = shl i32 %164, 2
  %166 = or i32 %83, %108
  %167 = and i32 %8, %2
  %168 = and i32 %57, %23
  %169 = and i32 %80, %58
  %170 = or i32 %52, %135
  %171 = and i32 %78, %39
  %172 = xor i32 %123, %0
  %173 = xor i32 %42, %2
  %174 = or i32 %34, %0
  %175 = or i32 %20, %106
  %176 = xor i32 %8, %2
  %177 = xor i32 %50, %7
  %178 = or i32 %37, %39
  %179 = xor i32 %80, %1
  %180 = xor i32 %55, %60
  %181 = xor i32 %55, -1
  %182 = and i32 %181, %58
  %183 = xor i32 %100, %0
  %184 = shl i32 %183, 2
  %185 = or i32 %30, %39
  %186 = or i32 %100, %42
  %187 = and i32 %35, %22
  %188 = xor i32 %34, %0
  %189 = and i32 %181, %23
  %190 = xor i32 %78, %2
  %191 = shl i32 %190, 1
  %192 = and i32 %26, %8
  %193 = or i32 %20, %1
  %194 = and i32 %41, %100
  %195 = shl i32 %194, 1
  %196 = xor i32 %55, %50
  %197 = xor i32 %7, %2
  %198 = xor i32 %60, %0
  %199 = shl i32 %198, 1
  %200 = xor i32 %90, %145
  %201 = and i32 %44, %23
  %202 = shl i32 %201, 1
  %203 = or i32 %40, %0
  %204 = and i32 %19, %37
  %205 = or i32 %45, %22
  %206 = and i32 %41, %2
  %207 = or i32 %26, %42
  %208 = xor i32 %47, %0
  %209 = or i32 %52, %208
  %210 = or i32 %50, %22
  %211 = xor i32 %26, %0
  %212 = xor i32 %211, -1
  %213 = xor i32 %52, %212
  %214 = or i32 %43, %23
  %215 = and i32 %39, %31
  %216 = or i32 %39, %42
  %217 = and i32 %19, %31
  %218 = xor i32 %48, -1
  %219 = xor i32 %25, %218
  %220 = add i32 %37, 1
  %221 = xor i32 %43, %1
  %222 = or i32 %81, %58
  %223 = or i32 %81, %23
  %224 = xor i32 %68, %211
  %225 = and i32 %39, %58
  %226 = and i32 %35, %0
  %227 = or i32 %100, %106
  %228 = shl i32 %227, 1
  %229 = or i32 %73, %23
  %230 = and i32 %37, %20
  %231 = or i32 %19, %42
  %232 = and i32 %80, %37
  %233 = shl i32 %232, 1
  %234 = xor i32 %25, %27
  %235 = or i32 %30, %100
  %236 = or i32 %7, %20
  %237 = and i32 %20, %58
  %238 = or i32 %20, %23
  %239 = or i32 %123, %22
  %240 = add i32 %78, 1
  %241 = xor i32 %30, %2
  %242 = or i32 %19, %30
  %243 = or i32 %58, %2
  %244 = and i32 %100, %0
  %245 = and i32 %20, %23
  %246 = or i32 %19, %37
  %247 = or i32 %7, %123
  %248 = or i32 %43, %58
  %249 = and i32 %26, %78
  %250 = or i32 %60, %0
  %251 = and i32 %78, %2
  %252 = and i32 %41, %39
  %253 = or i32 %68, %69
  %254 = and i32 %40, %0
  %255 = xor i32 %73, %1
  %256 = or i32 %35, %22
  %257 = or i32 %19, %58
  %258 = xor i32 %181, %1
  %259 = or i32 %68, %212
  %260 = and i32 %80, %23
  %261 = and i32 %80, %1
  %262 = and i32 %19, %41
  %263 = and i32 %181, %1
  %264 = or i32 %52, %211
  %265 = or i32 %123, %0
  %266 = or i32 %37, %20
  %267 = or i32 %128, %22
  %268 = or i32 %55, %58
  %269 = xor i32 %55, %41
  %270 = shl i32 %269, 1
  %271 = and i32 %44, %58
  %272 = xor i32 %208, %136
  %273 = or i32 %19, %1
  %274 = and i32 %41, %20
  %275 = shl i32 %274, 1
  %276 = or i32 %81, %1
  %277 = xor i32 %43, %40
  %278 = and i32 %37, %181
  %279 = or i32 %106, %2
  %280 = or i32 %100, %22
  %281 = or i32 %68, %144
  %282 = and i32 %19, %58
  %283 = and i32 %58, %2
  %284 = and i32 %39, %8
  %285 = and i32 %60, %22
  %286 = xor i32 %43, %35
  %287 = or i32 %30, %20
  %288 = xor i32 %80, %7
  %289 = or i32 %7, %39
  %290 = xor i32 %40, %0
  %291 = or i32 %73, %58
  %292 = and i32 %19, %8
  %293 = xor i32 %41, %2
  %294 = or i32 %26, %7
  %295 = and i32 %57, %1
  %296 = or i32 %19, %106
  %297 = and i32 %40, %22
  %298 = or i32 %83, %51
  %299 = and i32 %123, %22
  %300 = and i32 %45, %22
  %301 = mul i32 %300, -11
  %302 = and i32 %123, %0
  %303 = and i32 %45, %0
  %304 = and i32 %128, %22
  %305 = mul i32 %304, 6
  %306 = mul i32 %83, -13
  %307 = and i32 %128, %0
  %308 = add i32 %252, -1
  %309 = add i32 %308, %178
  %310 = add i32 %309, %176
  %311 = add i32 %310, %167
  %312 = add i32 %311, %155
  %313 = add i32 %312, %50
  %314 = add i32 %313, %103
  %315 = add i32 %314, %302
  %316 = add i32 %315, %297
  %317 = add i32 %316, %280
  %318 = add i32 %317, %277
  %319 = add i32 %318, %263
  %320 = add i32 %319, %257
  %321 = add i32 %320, %242
  %322 = add i32 %321, %226
  %323 = add i32 %322, %144
  %324 = add i32 %323, %192
  %325 = add i32 %324, %179
  %326 = add i32 %325, %168
  %327 = add i32 %326, %129
  %328 = add i32 %327, %12
  %329 = add i32 %328, %170
  %330 = shl i32 %329, 1
  %331 = add i32 %299, %41
  %332 = add i32 %331, %246
  %333 = sub i32 %203, %332
  %334 = add i32 %333, %133
  %335 = sub i32 %334, %54
  %336 = mul i32 %335, 5
  %337 = sub i32 %23, %43
  %338 = add i32 %337, %68
  %339 = add i32 %338, %211
  %340 = add i32 %339, %282
  %341 = sub i32 %340, %17
  %342 = mul i32 %341, 3
  %343 = add i32 %307, %303
  %344 = mul i32 %343, 9
  %345 = add i32 %67, %143
  %346 = shl i32 %345, 2
  %347 = sub i32 3, %0
  %348 = add i32 %347, %22
  %349 = sub i32 %348, %1
  %350 = add i32 %349, %42
  %351 = add i32 %350, %7
  %352 = add i32 %351, %37
  %353 = add i32 %352, %31
  %354 = add i32 %353, %78
  %355 = add i32 %354, %220
  %356 = add i32 %355, %240
  %357 = sub i32 %356, %30
  %358 = sub i32 %357, %3
  %359 = add i32 %358, %32
  %360 = sub i32 %359, %38
  %361 = sub i32 %360, %40
  %362 = add i32 %361, %44
  %363 = sub i32 %362, %96
  %364 = sub i32 %363, %107
  %365 = add i32 %364, %113
  %366 = sub i32 %365, %125
  %367 = add i32 %366, %134
  %368 = add i32 %367, %147
  %369 = add i32 %368, %149
  %370 = sub i32 %369, %156
  %371 = add i32 %370, %128
  %372 = sub i32 %371, %171
  %373 = sub i32 %372, %173
  %374 = add i32 %373, %185
  %375 = sub i32 %374, %55
  %376 = sub i32 %375, %197
  %377 = add i32 %376, %60
  %378 = sub i32 %377, %206
  %379 = sub i32 %378, %215
  %380 = sub i32 %379, %216
  %381 = add i32 %380, %181
  %382 = add i32 %381, %225
  %383 = add i32 %382, %80
  %384 = sub i32 %383, %241
  %385 = add i32 %384, %243
  %386 = sub i32 %385, %19
  %387 = add i32 %386, %251
  %388 = add i32 %387, %73
  %389 = add i32 %388, %279
  %390 = add i32 %389, %283
  %391 = sub i32 %390, %45
  %392 = sub i32 %391, %284
  %393 = sub i32 %392, %289
  %394 = add i32 %393, %293
  %395 = add i32 %394, %26
  %396 = add i32 %395, %21
  %397 = sub i32 %396, %33
  %398 = sub i32 %397, %36
  %399 = add i32 %398, %46
  %400 = add i32 %399, %51
  %401 = add i32 %400, %56
  %402 = sub i32 %401, %59
  %403 = sub i32 %402, %63
  %404 = sub i32 %403, %64
  %405 = add i32 %404, %65
  %406 = add i32 %405, %74
  %407 = sub i32 %406, %27
  %408 = sub i32 %407, %77
  %409 = add i32 %408, %79
  %410 = add i32 %409, %82
  %411 = add i32 %410, %86
  %412 = sub i32 %411, %89
  %413 = sub i32 %412, %92
  %414 = sub i32 %413, %69
  %415 = add i32 %414, %93
  %416 = add i32 %415, %97
  %417 = add i32 %416, %101
  %418 = sub i32 %417, %102
  %419 = add i32 %418, %90
  %420 = sub i32 %419, %104
  %421 = sub i32 %420, %105
  %422 = add i32 %421, %112
  %423 = sub i32 %422, %119
  %424 = add i32 %423, %120
  %425 = add i32 %424, %124
  %426 = sub i32 %425, %126
  %427 = add i32 %426, %127
  %428 = sub i32 %427, %130
  %429 = sub i32 %428, %131
  %430 = add i32 %429, %132
  %431 = sub i32 %430, %138
  %432 = sub i32 %431, %139
  %433 = sub i32 %432, %142
  %434 = sub i32 %433, %108
  %435 = sub i32 %434, %148
  %436 = sub i32 %435, %150
  %437 = sub i32 %436, %151
  %438 = add i32 %437, %152
  %439 = add i32 %438, %153
  %440 = sub i32 %439, %154
  %441 = sub i32 %440, %53
  %442 = sub i32 %441, %157
  %443 = add i32 %442, %158
  %444 = sub i32 %443, %159
  %445 = sub i32 %444, %160
  %446 = sub i32 %445, %161
  %447 = add i32 %446, %162
  %448 = add i32 %447, %163
  %449 = add i32 %448, %169
  %450 = sub i32 %449, %172
  %451 = sub i32 %450, %174
  %452 = sub i32 %451, %175
  %453 = add i32 %452, %177
  %454 = sub i32 %453, %180
  %455 = sub i32 %454, %182
  %456 = add i32 %455, %186
  %457 = sub i32 %456, %187
  %458 = sub i32 %457, %188
  %459 = sub i32 %458, %189
  %460 = sub i32 %459, %191
  %461 = add i32 %460, %193
  %462 = sub i32 %461, %196
  %463 = add i32 %462, %204
  %464 = add i32 %463, %205
  %465 = add i32 %464, %207
  %466 = add i32 %465, %210
  %467 = add i32 %466, %214
  %468 = sub i32 %467, %217
  %469 = add i32 %468, %221
  %470 = add i32 %469, %222
  %471 = sub i32 %470, %223
  %472 = sub i32 %471, %229
  %473 = sub i32 %472, %230
  %474 = add i32 %473, %231
  %475 = add i32 %474, %235
  %476 = sub i32 %475, %236
  %477 = sub i32 %476, %237
  %478 = sub i32 %477, %238
  %479 = add i32 %478, %239
  %480 = add i32 %479, %244
  %481 = sub i32 %480, %245
  %482 = add i32 %481, %247
  %483 = add i32 %482, %248
  %484 = sub i32 %483, %249
  %485 = add i32 %484, %250
  %486 = add i32 %485, %254
  %487 = add i32 %486, %255
  %488 = sub i32 %487, %256
  %489 = add i32 %488, %258
  %490 = add i32 %489, %260
  %491 = add i32 %490, %261
  %492 = add i32 %491, %262
  %493 = sub i32 %492, %265
  %494 = sub i32 %493, %266
  %495 = sub i32 %494, %267
  %496 = sub i32 %495, %268
  %497 = sub i32 %496, %271
  %498 = sub i32 %497, %273
  %499 = add i32 %498, %276
  %500 = add i32 %499, %278
  %501 = add i32 %500, %285
  %502 = sub i32 %501, %286
  %503 = add i32 %502, %287
  %504 = add i32 %503, %288
  %505 = add i32 %504, %290
  %506 = add i32 %505, %291
  %507 = add i32 %506, %292
  %508 = add i32 %507, %294
  %509 = add i32 %508, %295
  %510 = add i32 %509, %296
  %511 = sub i32 %510, %12
  %512 = add i32 %511, %14
  %513 = add i32 %512, %16
  %514 = add i32 %513, %6
  %515 = sub i32 %514, %13
  %516 = add i32 %515, %29
  %517 = add i32 %516, %49
  %518 = sub i32 %517, %62
  %519 = sub i32 %518, %76
  %520 = sub i32 %519, %85
  %521 = sub i32 %520, %88
  %522 = add i32 %521, %91
  %523 = sub i32 %522, %95
  %524 = sub i32 %523, %99
  %525 = sub i32 %524, %115
  %526 = sub i32 %525, %117
  %527 = sub i32 %526, %122
  %528 = add i32 %527, %137
  %529 = sub i32 %528, %141
  %530 = add i32 %529, %146
  %531 = sub i32 %530, %165
  %532 = add i32 %531, %166
  %533 = sub i32 %532, %184
  %534 = sub i32 %533, %195
  %535 = sub i32 %534, %199
  %536 = sub i32 %535, %200
  %537 = sub i32 %536, %202
  %538 = sub i32 %537, %209
  %539 = sub i32 %538, %213
  %540 = sub i32 %539, %219
  %541 = sub i32 %540, %224
  %542 = sub i32 %541, %228
  %543 = sub i32 %542, %233
  %544 = sub i32 %543, %234
  %545 = add i32 %544, %253
  %546 = add i32 %545, %259
  %547 = sub i32 %546, %264
  %548 = sub i32 %547, %270
  %549 = sub i32 %548, %272
  %550 = sub i32 %549, %275
  %551 = sub i32 %550, %281
  %552 = add i32 %551, %298
  %553 = add i32 %552, %301
  %554 = add i32 %553, %305
  %555 = add i32 %554, %306
  %556 = sub i32 %555, %18
  %557 = add i32 %556, %344
  %558 = sub i32 %557, %72
  %559 = sub i32 %558, %111
  %560 = add i32 %559, %346
  %561 = add i32 %560, %336
  %562 = add i32 %561, %342
  %563 = add i32 %562, %330
  %564 = icmp eq i32 %10, %563
  %565 = select i1 %564, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %566 = tail call i32 @puts(i8* nonnull dereferenceable(1) %565)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
