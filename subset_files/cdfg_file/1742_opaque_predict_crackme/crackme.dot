digraph "DFG for'crackme' function" {
	Node0x177c0f0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x177c160[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x177c1d0[shape=record, label="  %7 = sub i32 %2, %6"];
	Node0x177c240[shape=record, label="  %8 = sub i32 %7, %3"];
	Node0x177c2b0[shape=record, label="  %9 = and i32 %3, %0"];
	Node0x177c320[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x177c390[shape=record, label="  %11 = add i32 %8, %10"];
	Node0x177c400[shape=record, label="  %12 = or i32 %2, %1"];
	Node0x177c470[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x177c4e0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x177c550[shape=record, label="  %15 = and i32 %5, %1"];
	Node0x177c5c0[shape=record, label="  %16 = xor i32 %6, -1"];
	Node0x177c630[shape=record, label="  %17 = xor i32 %0, -1"];
	Node0x177c6a0[shape=record, label="  %18 = and i32 %17, %3"];
	Node0x177c710[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x177c780[shape=record, label="  %20 = xor i32 %3, -1"];
	Node0x177c7f0[shape=record, label="  %21 = xor i32 %3, %0"];
	Node0x177c890[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x177c900[shape=record, label="  %23 = or i32 %3, %0"];
	Node0x177c970[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x177ca10[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x177ca80[shape=record, label="  %26 = shl i32 %15, 1"];
	Node0x177caf0[shape=record, label="  %27 = add i32 %18, %13"];
	Node0x177cb90[shape=record, label="  %28 = shl i32 %27, 2"];
	Node0x177cc00[shape=record, label="  %29 = add i32 %20, %16"];
	Node0x177cca0[shape=record, label="  %30 = mul i32 %29, 3"];
	Node0x177cd10[shape=record, label="  %31 = add i32 %0, 3"];
	Node0x177cd80[shape=record, label="  %32 = sub i32 %31, %1"];
	Node0x177d000[shape=record, label="  %33 = sub i32 %32, %12"];
	Node0x177d070[shape=record, label="  %34 = add i32 %33, %14"];
	Node0x177d0e0[shape=record, label="  %35 = add i32 %34, %19"];
	Node0x177d150[shape=record, label="  %36 = sub i32 %35, %23"];
	Node0x177d1c0[shape=record, label="  %37 = sub i32 %36, %9"];
	Node0x177d230[shape=record, label="  %38 = add i32 %37, %26"];
	Node0x177d2a0[shape=record, label="  %39 = sub i32 %38, %22"];
	Node0x177d310[shape=record, label="  %40 = add i32 %39, %30"];
	Node0x177d380[shape=record, label="  %41 = sub i32 %40, %25"];
	Node0x177d3f0[shape=record, label="  %42 = add i32 %41, %28"];
	Node0x177d460[shape=record, label="  %43 = icmp eq i32 %11, %42"];
	Node0x171c268[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x177d900[shape=record, label="  %45 = tail call i32 @puts(i8* nonnull dereferenceable(1) %44)"];
	Node0x177d950[shape=record, label="  ret void"];
	Node0x177c0f0 -> Node0x177c160;
	Node0x177c160 -> Node0x177c1d0;
	Node0x177c1d0 -> Node0x177c240;
	Node0x177c240 -> Node0x177c2b0;
	Node0x177c2b0 -> Node0x177c320;
	Node0x177c320 -> Node0x177c390;
	Node0x177c390 -> Node0x177c400;
	Node0x177c400 -> Node0x177c470;
	Node0x177c470 -> Node0x177c4e0;
	Node0x177c4e0 -> Node0x177c550;
	Node0x177c550 -> Node0x177c5c0;
	Node0x177c5c0 -> Node0x177c630;
	Node0x177c630 -> Node0x177c6a0;
	Node0x177c6a0 -> Node0x177c710;
	Node0x177c710 -> Node0x177c780;
	Node0x177c780 -> Node0x177c7f0;
	Node0x177c7f0 -> Node0x177c890;
	Node0x177c890 -> Node0x177c900;
	Node0x177c900 -> Node0x177c970;
	Node0x177c970 -> Node0x177ca10;
	Node0x177ca10 -> Node0x177ca80;
	Node0x177ca80 -> Node0x177caf0;
	Node0x177caf0 -> Node0x177cb90;
	Node0x177cb90 -> Node0x177cc00;
	Node0x177cc00 -> Node0x177cca0;
	Node0x177cca0 -> Node0x177cd10;
	Node0x177cd10 -> Node0x177cd80;
	Node0x177cd80 -> Node0x177d000;
	Node0x177d000 -> Node0x177d070;
	Node0x177d070 -> Node0x177d0e0;
	Node0x177d0e0 -> Node0x177d150;
	Node0x177d150 -> Node0x177d1c0;
	Node0x177d1c0 -> Node0x177d230;
	Node0x177d230 -> Node0x177d2a0;
	Node0x177d2a0 -> Node0x177d310;
	Node0x177d310 -> Node0x177d380;
	Node0x177d380 -> Node0x177d3f0;
	Node0x177d3f0 -> Node0x177d460;
	Node0x177d460 -> Node0x171c268;
	Node0x171c268 -> Node0x177d900;
	Node0x177d900 -> Node0x177d950;
edge [color=red]
	Node0x177c0f0 -> Node0x177c160;
	Node0x177c160 -> Node0x177c1d0;
	Node0x177c1d0 -> Node0x177c240;
	Node0x177c2b0 -> Node0x177c320;
	Node0x177c240 -> Node0x177c390;
	Node0x177c320 -> Node0x177c390;
	Node0x177c470 -> Node0x177c4e0;
	Node0x177c0f0 -> Node0x177c550;
	Node0x177c160 -> Node0x177c5c0;
	Node0x177c630 -> Node0x177c6a0;
	Node0x177c6a0 -> Node0x177c710;
	Node0x177c7f0 -> Node0x177c890;
	Node0x177c900 -> Node0x177c970;
	Node0x177c970 -> Node0x177ca10;
	Node0x177c550 -> Node0x177ca80;
	Node0x177c6a0 -> Node0x177caf0;
	Node0x177c470 -> Node0x177caf0;
	Node0x177caf0 -> Node0x177cb90;
	Node0x177c780 -> Node0x177cc00;
	Node0x177c5c0 -> Node0x177cc00;
	Node0x177cc00 -> Node0x177cca0;
	Node0x177cd10 -> Node0x177cd80;
	Node0x177cd80 -> Node0x177d000;
	Node0x177c400 -> Node0x177d000;
	Node0x177d000 -> Node0x177d070;
	Node0x177c4e0 -> Node0x177d070;
	Node0x177d070 -> Node0x177d0e0;
	Node0x177c710 -> Node0x177d0e0;
	Node0x177d0e0 -> Node0x177d150;
	Node0x177c900 -> Node0x177d150;
	Node0x177d150 -> Node0x177d1c0;
	Node0x177c2b0 -> Node0x177d1c0;
	Node0x177d1c0 -> Node0x177d230;
	Node0x177ca80 -> Node0x177d230;
	Node0x177d230 -> Node0x177d2a0;
	Node0x177c890 -> Node0x177d2a0;
	Node0x177d2a0 -> Node0x177d310;
	Node0x177cca0 -> Node0x177d310;
	Node0x177d310 -> Node0x177d380;
	Node0x177ca10 -> Node0x177d380;
	Node0x177d380 -> Node0x177d3f0;
	Node0x177cb90 -> Node0x177d3f0;
	Node0x177c390 -> Node0x177d460;
	Node0x177d3f0 -> Node0x177d460;
	Node0x177d460 -> Node0x171c268;
	Node0x171c268 -> Node0x177d900;
}
