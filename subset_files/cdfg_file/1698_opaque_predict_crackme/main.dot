digraph "DFG for'main' function" {
	Node0x1de5548[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1de55c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1de5658[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1de56b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1de5b38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1de5c18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1de5d18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1de5dd8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1de5e88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1de60e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1de61a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1de6308[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1de6368[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1deca50[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1decc58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1decdb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1decec8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1decf88[shape=record, label="  ret i32 0"];
	Node0x1de5548 -> Node0x1de55c8;
	Node0x1de55c8 -> Node0x1de5658;
	Node0x1de5658 -> Node0x1de56b8;
	Node0x1de56b8 -> Node0x1de5b38;
	Node0x1de5b38 -> Node0x1de5c18;
	Node0x1de5c18 -> Node0x1de5d18;
	Node0x1de5d18 -> Node0x1de5dd8;
	Node0x1de5dd8 -> Node0x1de5e88;
	Node0x1de5e88 -> Node0x1de60e8;
	Node0x1de60e8 -> Node0x1de61a8;
	Node0x1de61a8 -> Node0x1de6308;
	Node0x1de6308 -> Node0x1de6368;
	Node0x1de6368 -> Node0x1deca50;
	Node0x1deca50 -> Node0x1decc58;
	Node0x1decc58 -> Node0x1decdb8;
	Node0x1decdb8 -> Node0x1decec8;
	Node0x1decec8 -> Node0x1decf88;
edge [color=red]
	Node0x1de5548 -> Node0x1de56b8;
	Node0x1de56b8 -> Node0x1de5b38;
	Node0x1de55c8 -> Node0x1de5c18;
	Node0x1de5c18 -> Node0x1de5d18;
	Node0x1de5658 -> Node0x1de5dd8;
	Node0x1de5dd8 -> Node0x1de5e88;
	Node0x1de5548 -> Node0x1de60e8;
	Node0x1de55c8 -> Node0x1de60e8;
	Node0x1de5658 -> Node0x1de60e8;
	Node0x1de5548 -> Node0x1de61a8;
	Node0x1de55c8 -> Node0x1de6308;
	Node0x1de5658 -> Node0x1de6368;
	Node0x1de61a8 -> Node0x1deca50;
	Node0x1de6308 -> Node0x1deca50;
	Node0x1de6368 -> Node0x1deca50;
	Node0x1de5dd8 -> Node0x1decc58;
	Node0x1de5c18 -> Node0x1decdb8;
	Node0x1de56b8 -> Node0x1decec8;
}
