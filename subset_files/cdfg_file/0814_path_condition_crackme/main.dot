digraph "DFG for'main' function" {
	Node0x1438f38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1438fb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1439048[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14390a8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1439158[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1439588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1439668[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1439768[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1439828[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x14398d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1439998[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1439a48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1433810[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1439c48[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x143abb8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x143b228[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x143b288[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x143b398[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x143b5f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x143b758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x143b868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x143b978[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x143ba38[shape=record, label="  ret i32 0"];
	Node0x1438f38 -> Node0x1438fb8;
	Node0x1438fb8 -> Node0x1439048;
	Node0x1439048 -> Node0x14390a8;
	Node0x14390a8 -> Node0x1439158;
	Node0x1439158 -> Node0x1439588;
	Node0x1439588 -> Node0x1439668;
	Node0x1439668 -> Node0x1439768;
	Node0x1439768 -> Node0x1439828;
	Node0x1439828 -> Node0x14398d8;
	Node0x14398d8 -> Node0x1439998;
	Node0x1439998 -> Node0x1439a48;
	Node0x1439a48 -> Node0x1433810;
	Node0x1433810 -> Node0x1439c48;
	Node0x1439c48 -> Node0x143abb8;
	Node0x143abb8 -> Node0x143b228;
	Node0x143b228 -> Node0x143b288;
	Node0x143b288 -> Node0x143b398;
	Node0x143b398 -> Node0x143b5f8;
	Node0x143b5f8 -> Node0x143b758;
	Node0x143b758 -> Node0x143b868;
	Node0x143b868 -> Node0x143b978;
	Node0x143b978 -> Node0x143ba38;
edge [color=red]
	Node0x1438f38 -> Node0x1439158;
	Node0x1439158 -> Node0x1439588;
	Node0x1438fb8 -> Node0x1439668;
	Node0x1439668 -> Node0x1439768;
	Node0x1439048 -> Node0x1439828;
	Node0x1439828 -> Node0x14398d8;
	Node0x14390a8 -> Node0x1439998;
	Node0x1439998 -> Node0x1439a48;
	Node0x1438f38 -> Node0x1433810;
	Node0x1438fb8 -> Node0x1433810;
	Node0x1439048 -> Node0x1433810;
	Node0x14390a8 -> Node0x1433810;
	Node0x1438f38 -> Node0x1439c48;
	Node0x1438fb8 -> Node0x143abb8;
	Node0x1439048 -> Node0x143b228;
	Node0x14390a8 -> Node0x143b288;
	Node0x1439c48 -> Node0x143b398;
	Node0x143abb8 -> Node0x143b398;
	Node0x143b228 -> Node0x143b398;
	Node0x143b288 -> Node0x143b398;
	Node0x1439998 -> Node0x143b5f8;
	Node0x1439828 -> Node0x143b758;
	Node0x1439668 -> Node0x143b868;
	Node0x1439158 -> Node0x143b978;
}
