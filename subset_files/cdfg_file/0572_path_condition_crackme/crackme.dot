digraph "DFG for'crackme' function" {
	Node0x1970190[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x1970200[shape=record, label="  %6 = xor i32 %5, %2"];
	Node0x1970270[shape=record, label="  %7 = or i32 %2, %1"];
	Node0x19702e0[shape=record, label="  %8 = sub i32 %6, %7"];
	Node0x1970350[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0x19703c0[shape=record, label="  %10 = and i32 %9, %3"];
	Node0x1970430[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x19704a0[shape=record, label="  %12 = add i32 %8, %11"];
	Node0x1970510[shape=record, label="  %13 = xor i32 %3, %0"];
	Node0x19705b0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1970620[shape=record, label="  %15 = sub i32 %12, %14"];
	Node0x1970690[shape=record, label="  %16 = xor i32 %2, -1"];
	Node0x1970700[shape=record, label="  %17 = or i32 %16, %1"];
	Node0x1970770[shape=record, label="  %18 = and i32 %16, %1"];
	Node0x19707e0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1970880[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x19708f0[shape=record, label="  %21 = and i32 %2, %1"];
	Node0x1970960[shape=record, label="  %22 = xor i32 %7, -1"];
	Node0x1970a00[shape=record, label="  %23 = mul i32 %22, 3"];
	Node0x1970a70[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x1970b10[shape=record, label="  %25 = shl i32 %17, 2"];
	Node0x1970bb0[shape=record, label="  %26 = xor i32 %25, -4"];
	Node0x1970c20[shape=record, label="  %27 = shl i32 %21, 2"];
	Node0x1970c90[shape=record, label="  %28 = and i32 %3, %0"];
	Node0x1970d30[shape=record, label="  %29 = mul i32 %10, -6"];
	Node0x1970dd0[shape=record, label="  %30 = sub i32 2147483646, %0"];
	Node0x1970e40[shape=record, label="  %31 = add i32 %30, %3"];
	Node0x1970eb0[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x1971160[shape=record, label="  %33 = sub i32 4, %0"];
	Node0x19711d0[shape=record, label="  %34 = add i32 %33, %5"];
	Node0x1971240[shape=record, label="  %35 = add i32 %34, %17"];
	Node0x19712b0[shape=record, label="  %36 = add i32 %35, %21"];
	Node0x1971320[shape=record, label="  %37 = add i32 %36, %24"];
	Node0x1971390[shape=record, label="  %38 = sub i32 %37, %19"];
	Node0x1971400[shape=record, label="  %39 = sub i32 %38, %27"];
	Node0x1971470[shape=record, label="  %40 = add i32 %39, %28"];
	Node0x19714e0[shape=record, label="  %41 = add i32 %40, %13"];
	Node0x1971550[shape=record, label="  %42 = add i32 %41, %20"];
	Node0x19715c0[shape=record, label="  %43 = sub i32 %42, %26"];
	Node0x1971630[shape=record, label="  %44 = add i32 %43, %29"];
	Node0x19716a0[shape=record, label="  %45 = add i32 %44, %32"];
	Node0x1971710[shape=record, label="  %46 = icmp eq i32 %15, %45"];
	Node0x1910268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1971bb0[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0x1971c00[shape=record, label="  ret void"];
	Node0x1970190 -> Node0x1970200;
	Node0x1970200 -> Node0x1970270;
	Node0x1970270 -> Node0x19702e0;
	Node0x19702e0 -> Node0x1970350;
	Node0x1970350 -> Node0x19703c0;
	Node0x19703c0 -> Node0x1970430;
	Node0x1970430 -> Node0x19704a0;
	Node0x19704a0 -> Node0x1970510;
	Node0x1970510 -> Node0x19705b0;
	Node0x19705b0 -> Node0x1970620;
	Node0x1970620 -> Node0x1970690;
	Node0x1970690 -> Node0x1970700;
	Node0x1970700 -> Node0x1970770;
	Node0x1970770 -> Node0x19707e0;
	Node0x19707e0 -> Node0x1970880;
	Node0x1970880 -> Node0x19708f0;
	Node0x19708f0 -> Node0x1970960;
	Node0x1970960 -> Node0x1970a00;
	Node0x1970a00 -> Node0x1970a70;
	Node0x1970a70 -> Node0x1970b10;
	Node0x1970b10 -> Node0x1970bb0;
	Node0x1970bb0 -> Node0x1970c20;
	Node0x1970c20 -> Node0x1970c90;
	Node0x1970c90 -> Node0x1970d30;
	Node0x1970d30 -> Node0x1970dd0;
	Node0x1970dd0 -> Node0x1970e40;
	Node0x1970e40 -> Node0x1970eb0;
	Node0x1970eb0 -> Node0x1971160;
	Node0x1971160 -> Node0x19711d0;
	Node0x19711d0 -> Node0x1971240;
	Node0x1971240 -> Node0x19712b0;
	Node0x19712b0 -> Node0x1971320;
	Node0x1971320 -> Node0x1971390;
	Node0x1971390 -> Node0x1971400;
	Node0x1971400 -> Node0x1971470;
	Node0x1971470 -> Node0x19714e0;
	Node0x19714e0 -> Node0x1971550;
	Node0x1971550 -> Node0x19715c0;
	Node0x19715c0 -> Node0x1971630;
	Node0x1971630 -> Node0x19716a0;
	Node0x19716a0 -> Node0x1971710;
	Node0x1971710 -> Node0x1910268;
	Node0x1910268 -> Node0x1971bb0;
	Node0x1971bb0 -> Node0x1971c00;
edge [color=red]
	Node0x1970190 -> Node0x1970200;
	Node0x1970200 -> Node0x19702e0;
	Node0x1970270 -> Node0x19702e0;
	Node0x1970350 -> Node0x19703c0;
	Node0x19703c0 -> Node0x1970430;
	Node0x19702e0 -> Node0x19704a0;
	Node0x1970430 -> Node0x19704a0;
	Node0x1970510 -> Node0x19705b0;
	Node0x19704a0 -> Node0x1970620;
	Node0x19705b0 -> Node0x1970620;
	Node0x1970690 -> Node0x1970700;
	Node0x1970690 -> Node0x1970770;
	Node0x1970770 -> Node0x19707e0;
	Node0x19707e0 -> Node0x1970880;
	Node0x1970270 -> Node0x1970960;
	Node0x1970960 -> Node0x1970a00;
	Node0x1970a00 -> Node0x1970a70;
	Node0x1970700 -> Node0x1970b10;
	Node0x1970b10 -> Node0x1970bb0;
	Node0x19708f0 -> Node0x1970c20;
	Node0x19703c0 -> Node0x1970d30;
	Node0x1970dd0 -> Node0x1970e40;
	Node0x1970e40 -> Node0x1970eb0;
	Node0x1971160 -> Node0x19711d0;
	Node0x1970190 -> Node0x19711d0;
	Node0x19711d0 -> Node0x1971240;
	Node0x1970700 -> Node0x1971240;
	Node0x1971240 -> Node0x19712b0;
	Node0x19708f0 -> Node0x19712b0;
	Node0x19712b0 -> Node0x1971320;
	Node0x1970a70 -> Node0x1971320;
	Node0x1971320 -> Node0x1971390;
	Node0x19707e0 -> Node0x1971390;
	Node0x1971390 -> Node0x1971400;
	Node0x1970c20 -> Node0x1971400;
	Node0x1971400 -> Node0x1971470;
	Node0x1970c90 -> Node0x1971470;
	Node0x1971470 -> Node0x19714e0;
	Node0x1970510 -> Node0x19714e0;
	Node0x19714e0 -> Node0x1971550;
	Node0x1970880 -> Node0x1971550;
	Node0x1971550 -> Node0x19715c0;
	Node0x1970bb0 -> Node0x19715c0;
	Node0x19715c0 -> Node0x1971630;
	Node0x1970d30 -> Node0x1971630;
	Node0x1971630 -> Node0x19716a0;
	Node0x1970eb0 -> Node0x19716a0;
	Node0x1970620 -> Node0x1971710;
	Node0x19716a0 -> Node0x1971710;
	Node0x1971710 -> Node0x1910268;
	Node0x1910268 -> Node0x1971bb0;
}
