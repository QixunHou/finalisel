digraph "DFG for'main' function" {
	Node0x1971dc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1971e48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1971ed8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1971f38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1971fe8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1972418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19724f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x19725f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19726b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1972768[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1972828[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x19728d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x196cbb0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1972ad8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1973a48[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x19740b8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1974118[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1974190[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x1974200[shape=record, label="  %15 = xor i32 %12, %14"];
	Node0x1974270[shape=record, label="  %16 = or i32 %12, %11"];
	Node0x19742e0[shape=record, label="  %17 = sub i32 %15, %16"];
	Node0x1974350[shape=record, label="  %18 = xor i32 %10, -1"];
	Node0x19743c0[shape=record, label="  %19 = and i32 %13, %18"];
	Node0x1974430[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x19744a0[shape=record, label="  %21 = add i32 %17, %20"];
	Node0x1974510[shape=record, label="  %22 = xor i32 %13, %10"];
	Node0x1974580[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x19745f0[shape=record, label="  %24 = sub i32 %21, %23"];
	Node0x1974660[shape=record, label="  %25 = xor i32 %12, -1"];
	Node0x19746d0[shape=record, label="  %26 = or i32 %11, %25"];
	Node0x1974740[shape=record, label="  %27 = and i32 %11, %25"];
	Node0x19747b0[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x1974820[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x1974890[shape=record, label="  %30 = and i32 %12, %11"];
	Node0x1974900[shape=record, label="  %31 = xor i32 %16, -1"];
	Node0x1974970[shape=record, label="  %32 = mul i32 %31, 3"];
	Node0x19749e0[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0x1974a50[shape=record, label="  %34 = shl i32 %26, 2"];
	Node0x1974ac0[shape=record, label="  %35 = xor i32 %34, -4"];
	Node0x1974b30[shape=record, label="  %36 = shl i32 %30, 2"];
	Node0x1974ba0[shape=record, label="  %37 = and i32 %13, %10"];
	Node0x1974c10[shape=record, label="  %38 = mul i32 %19, -6"];
	Node0x1974c80[shape=record, label="  %39 = sub i32 2147483646, %10"];
	Node0x1974cf0[shape=record, label="  %40 = add i32 %39, %13"];
	Node0x1974d60[shape=record, label="  %41 = shl i32 %40, 1"];
	Node0x1974dd0[shape=record, label="  %42 = sub i32 4, %10"];
	Node0x1974e40[shape=record, label="  %43 = add i32 %42, %14"];
	Node0x1974eb0[shape=record, label="  %44 = add i32 %43, %26"];
	Node0x1974f20[shape=record, label="  %45 = add i32 %44, %30"];
	Node0x1974f90[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x1975000[shape=record, label="  %47 = sub i32 %46, %28"];
	Node0x1975070[shape=record, label="  %48 = sub i32 %47, %36"];
	Node0x19750e0[shape=record, label="  %49 = add i32 %48, %37"];
	Node0x1975150[shape=record, label="  %50 = add i32 %49, %22"];
	Node0x19751c0[shape=record, label="  %51 = add i32 %50, %29"];
	Node0x1975230[shape=record, label="  %52 = sub i32 %51, %35"];
	Node0x19752a0[shape=record, label="  %53 = add i32 %52, %38"];
	Node0x1975310[shape=record, label="  %54 = add i32 %53, %41"];
	Node0x1975380[shape=record, label="  %55 = icmp eq i32 %24, %54"];
	Node0x19118b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1975410[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x19756b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1975818[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1975928[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1975a38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1975af8[shape=record, label="  ret i32 0"];
	Node0x1971dc8 -> Node0x1971e48;
	Node0x1971e48 -> Node0x1971ed8;
	Node0x1971ed8 -> Node0x1971f38;
	Node0x1971f38 -> Node0x1971fe8;
	Node0x1971fe8 -> Node0x1972418;
	Node0x1972418 -> Node0x19724f8;
	Node0x19724f8 -> Node0x19725f8;
	Node0x19725f8 -> Node0x19726b8;
	Node0x19726b8 -> Node0x1972768;
	Node0x1972768 -> Node0x1972828;
	Node0x1972828 -> Node0x19728d8;
	Node0x19728d8 -> Node0x196cbb0;
	Node0x196cbb0 -> Node0x1972ad8;
	Node0x1972ad8 -> Node0x1973a48;
	Node0x1973a48 -> Node0x19740b8;
	Node0x19740b8 -> Node0x1974118;
	Node0x1974118 -> Node0x1974190;
	Node0x1974190 -> Node0x1974200;
	Node0x1974200 -> Node0x1974270;
	Node0x1974270 -> Node0x19742e0;
	Node0x19742e0 -> Node0x1974350;
	Node0x1974350 -> Node0x19743c0;
	Node0x19743c0 -> Node0x1974430;
	Node0x1974430 -> Node0x19744a0;
	Node0x19744a0 -> Node0x1974510;
	Node0x1974510 -> Node0x1974580;
	Node0x1974580 -> Node0x19745f0;
	Node0x19745f0 -> Node0x1974660;
	Node0x1974660 -> Node0x19746d0;
	Node0x19746d0 -> Node0x1974740;
	Node0x1974740 -> Node0x19747b0;
	Node0x19747b0 -> Node0x1974820;
	Node0x1974820 -> Node0x1974890;
	Node0x1974890 -> Node0x1974900;
	Node0x1974900 -> Node0x1974970;
	Node0x1974970 -> Node0x19749e0;
	Node0x19749e0 -> Node0x1974a50;
	Node0x1974a50 -> Node0x1974ac0;
	Node0x1974ac0 -> Node0x1974b30;
	Node0x1974b30 -> Node0x1974ba0;
	Node0x1974ba0 -> Node0x1974c10;
	Node0x1974c10 -> Node0x1974c80;
	Node0x1974c80 -> Node0x1974cf0;
	Node0x1974cf0 -> Node0x1974d60;
	Node0x1974d60 -> Node0x1974dd0;
	Node0x1974dd0 -> Node0x1974e40;
	Node0x1974e40 -> Node0x1974eb0;
	Node0x1974eb0 -> Node0x1974f20;
	Node0x1974f20 -> Node0x1974f90;
	Node0x1974f90 -> Node0x1975000;
	Node0x1975000 -> Node0x1975070;
	Node0x1975070 -> Node0x19750e0;
	Node0x19750e0 -> Node0x1975150;
	Node0x1975150 -> Node0x19751c0;
	Node0x19751c0 -> Node0x1975230;
	Node0x1975230 -> Node0x19752a0;
	Node0x19752a0 -> Node0x1975310;
	Node0x1975310 -> Node0x1975380;
	Node0x1975380 -> Node0x19118b8;
	Node0x19118b8 -> Node0x1975410;
	Node0x1975410 -> Node0x19756b8;
	Node0x19756b8 -> Node0x1975818;
	Node0x1975818 -> Node0x1975928;
	Node0x1975928 -> Node0x1975a38;
	Node0x1975a38 -> Node0x1975af8;
edge [color=red]
	Node0x1971dc8 -> Node0x1971fe8;
	Node0x1971fe8 -> Node0x1972418;
	Node0x1971e48 -> Node0x19724f8;
	Node0x19724f8 -> Node0x19725f8;
	Node0x1971ed8 -> Node0x19726b8;
	Node0x19726b8 -> Node0x1972768;
	Node0x1971f38 -> Node0x1972828;
	Node0x1972828 -> Node0x19728d8;
	Node0x1971dc8 -> Node0x196cbb0;
	Node0x1971e48 -> Node0x196cbb0;
	Node0x1971ed8 -> Node0x196cbb0;
	Node0x1971f38 -> Node0x196cbb0;
	Node0x1971dc8 -> Node0x1972ad8;
	Node0x1971e48 -> Node0x1973a48;
	Node0x1971ed8 -> Node0x19740b8;
	Node0x1971f38 -> Node0x1974118;
	Node0x1973a48 -> Node0x1974190;
	Node0x19740b8 -> Node0x1974200;
	Node0x1974190 -> Node0x1974200;
	Node0x19740b8 -> Node0x1974270;
	Node0x1973a48 -> Node0x1974270;
	Node0x1974200 -> Node0x19742e0;
	Node0x1974270 -> Node0x19742e0;
	Node0x1972ad8 -> Node0x1974350;
	Node0x1974118 -> Node0x19743c0;
	Node0x1974350 -> Node0x19743c0;
	Node0x19743c0 -> Node0x1974430;
	Node0x19742e0 -> Node0x19744a0;
	Node0x1974430 -> Node0x19744a0;
	Node0x1974118 -> Node0x1974510;
	Node0x1972ad8 -> Node0x1974510;
	Node0x1974510 -> Node0x1974580;
	Node0x19744a0 -> Node0x19745f0;
	Node0x1974580 -> Node0x19745f0;
	Node0x19740b8 -> Node0x1974660;
	Node0x1973a48 -> Node0x19746d0;
	Node0x1974660 -> Node0x19746d0;
	Node0x1973a48 -> Node0x1974740;
	Node0x1974660 -> Node0x1974740;
	Node0x1974740 -> Node0x19747b0;
	Node0x19747b0 -> Node0x1974820;
	Node0x19740b8 -> Node0x1974890;
	Node0x1973a48 -> Node0x1974890;
	Node0x1974270 -> Node0x1974900;
	Node0x1974900 -> Node0x1974970;
	Node0x1974970 -> Node0x19749e0;
	Node0x19746d0 -> Node0x1974a50;
	Node0x1974a50 -> Node0x1974ac0;
	Node0x1974890 -> Node0x1974b30;
	Node0x1974118 -> Node0x1974ba0;
	Node0x1972ad8 -> Node0x1974ba0;
	Node0x19743c0 -> Node0x1974c10;
	Node0x1972ad8 -> Node0x1974c80;
	Node0x1974c80 -> Node0x1974cf0;
	Node0x1974118 -> Node0x1974cf0;
	Node0x1974cf0 -> Node0x1974d60;
	Node0x1972ad8 -> Node0x1974dd0;
	Node0x1974dd0 -> Node0x1974e40;
	Node0x1974190 -> Node0x1974e40;
	Node0x1974e40 -> Node0x1974eb0;
	Node0x19746d0 -> Node0x1974eb0;
	Node0x1974eb0 -> Node0x1974f20;
	Node0x1974890 -> Node0x1974f20;
	Node0x1974f20 -> Node0x1974f90;
	Node0x19749e0 -> Node0x1974f90;
	Node0x1974f90 -> Node0x1975000;
	Node0x19747b0 -> Node0x1975000;
	Node0x1975000 -> Node0x1975070;
	Node0x1974b30 -> Node0x1975070;
	Node0x1975070 -> Node0x19750e0;
	Node0x1974ba0 -> Node0x19750e0;
	Node0x19750e0 -> Node0x1975150;
	Node0x1974510 -> Node0x1975150;
	Node0x1975150 -> Node0x19751c0;
	Node0x1974820 -> Node0x19751c0;
	Node0x19751c0 -> Node0x1975230;
	Node0x1974ac0 -> Node0x1975230;
	Node0x1975230 -> Node0x19752a0;
	Node0x1974c10 -> Node0x19752a0;
	Node0x19752a0 -> Node0x1975310;
	Node0x1974d60 -> Node0x1975310;
	Node0x19745f0 -> Node0x1975380;
	Node0x1975310 -> Node0x1975380;
	Node0x1975380 -> Node0x19118b8;
	Node0x19118b8 -> Node0x1975410;
	Node0x1972828 -> Node0x19756b8;
	Node0x19726b8 -> Node0x1975818;
	Node0x19724f8 -> Node0x1975928;
	Node0x1971fe8 -> Node0x1975a38;
}
