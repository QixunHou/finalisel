digraph "DFG for'main' function" {
	Node0x1d084c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d08548[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d085d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1d08638[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1d08ab8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d08b98[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1d08c98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d08d58[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1d08e08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d09068[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1d09128[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d09288[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d092e8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1d0fa00[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1d0fc08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1d0fd68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1d0fe78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d0ff38[shape=record, label="  ret i32 0"];
	Node0x1d084c8 -> Node0x1d08548;
	Node0x1d08548 -> Node0x1d085d8;
	Node0x1d085d8 -> Node0x1d08638;
	Node0x1d08638 -> Node0x1d08ab8;
	Node0x1d08ab8 -> Node0x1d08b98;
	Node0x1d08b98 -> Node0x1d08c98;
	Node0x1d08c98 -> Node0x1d08d58;
	Node0x1d08d58 -> Node0x1d08e08;
	Node0x1d08e08 -> Node0x1d09068;
	Node0x1d09068 -> Node0x1d09128;
	Node0x1d09128 -> Node0x1d09288;
	Node0x1d09288 -> Node0x1d092e8;
	Node0x1d092e8 -> Node0x1d0fa00;
	Node0x1d0fa00 -> Node0x1d0fc08;
	Node0x1d0fc08 -> Node0x1d0fd68;
	Node0x1d0fd68 -> Node0x1d0fe78;
	Node0x1d0fe78 -> Node0x1d0ff38;
edge [color=red]
	Node0x1d084c8 -> Node0x1d08638;
	Node0x1d08638 -> Node0x1d08ab8;
	Node0x1d08548 -> Node0x1d08b98;
	Node0x1d08b98 -> Node0x1d08c98;
	Node0x1d085d8 -> Node0x1d08d58;
	Node0x1d08d58 -> Node0x1d08e08;
	Node0x1d084c8 -> Node0x1d09068;
	Node0x1d08548 -> Node0x1d09068;
	Node0x1d085d8 -> Node0x1d09068;
	Node0x1d084c8 -> Node0x1d09128;
	Node0x1d08548 -> Node0x1d09288;
	Node0x1d085d8 -> Node0x1d092e8;
	Node0x1d09128 -> Node0x1d0fa00;
	Node0x1d09288 -> Node0x1d0fa00;
	Node0x1d092e8 -> Node0x1d0fa00;
	Node0x1d08d58 -> Node0x1d0fc08;
	Node0x1d08b98 -> Node0x1d0fd68;
	Node0x1d08638 -> Node0x1d0fe78;
}
