digraph "DFG for'main' function" {
	Node0x1cf8658[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1cf86d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1cf8768[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1cf8bc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1cf8ca8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1cf8dc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1cf9000[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1cf90b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1cfa028[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1cfa6b0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1cfa720[shape=record, label="  %9 = or i32 %7, %6"];
	Node0x1cfa790[shape=record, label="  %10 = add i32 %9, %8"];
	Node0x1cfa800[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x1cfa870[shape=record, label="  %12 = xor i32 %6, -1"];
	Node0x1cfa8e0[shape=record, label="  %13 = and i32 %7, %12"];
	Node0x1cfa950[shape=record, label="  %14 = mul i32 %13, -3"];
	Node0x1cfa9c0[shape=record, label="  %15 = shl i32 %11, 1"];
	Node0x1cfaa30[shape=record, label="  %16 = add i32 %7, %12"];
	Node0x1cfaaa0[shape=record, label="  %17 = add i32 %16, %14"];
	Node0x1cfab10[shape=record, label="  %18 = add i32 %17, %15"];
	Node0x1cfab80[shape=record, label="  %19 = icmp eq i32 %10, %18"];
	Node0x1c999d8[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1cfac10[shape=record, label="  %21 = call i32 @puts(i8* nonnull dereferenceable(1) %20) #5"];
	Node0x1cfae68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1cfafc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1cfb088[shape=record, label="  ret i32 0"];
	Node0x1cf8658 -> Node0x1cf86d8;
	Node0x1cf86d8 -> Node0x1cf8768;
	Node0x1cf8768 -> Node0x1cf8bc8;
	Node0x1cf8bc8 -> Node0x1cf8ca8;
	Node0x1cf8ca8 -> Node0x1cf8dc8;
	Node0x1cf8dc8 -> Node0x1cf9000;
	Node0x1cf9000 -> Node0x1cf90b8;
	Node0x1cf90b8 -> Node0x1cfa028;
	Node0x1cfa028 -> Node0x1cfa6b0;
	Node0x1cfa6b0 -> Node0x1cfa720;
	Node0x1cfa720 -> Node0x1cfa790;
	Node0x1cfa790 -> Node0x1cfa800;
	Node0x1cfa800 -> Node0x1cfa870;
	Node0x1cfa870 -> Node0x1cfa8e0;
	Node0x1cfa8e0 -> Node0x1cfa950;
	Node0x1cfa950 -> Node0x1cfa9c0;
	Node0x1cfa9c0 -> Node0x1cfaa30;
	Node0x1cfaa30 -> Node0x1cfaaa0;
	Node0x1cfaaa0 -> Node0x1cfab10;
	Node0x1cfab10 -> Node0x1cfab80;
	Node0x1cfab80 -> Node0x1c999d8;
	Node0x1c999d8 -> Node0x1cfac10;
	Node0x1cfac10 -> Node0x1cfae68;
	Node0x1cfae68 -> Node0x1cfafc8;
	Node0x1cfafc8 -> Node0x1cfb088;
edge [color=red]
	Node0x1cf8658 -> Node0x1cf8768;
	Node0x1cf8768 -> Node0x1cf8bc8;
	Node0x1cf86d8 -> Node0x1cf8ca8;
	Node0x1cf8ca8 -> Node0x1cf8dc8;
	Node0x1cf8658 -> Node0x1cf9000;
	Node0x1cf86d8 -> Node0x1cf9000;
	Node0x1cf8658 -> Node0x1cf90b8;
	Node0x1cf86d8 -> Node0x1cfa028;
	Node0x1cfa028 -> Node0x1cfa6b0;
	Node0x1cfa028 -> Node0x1cfa720;
	Node0x1cf90b8 -> Node0x1cfa720;
	Node0x1cfa720 -> Node0x1cfa790;
	Node0x1cfa6b0 -> Node0x1cfa790;
	Node0x1cfa028 -> Node0x1cfa800;
	Node0x1cf90b8 -> Node0x1cfa800;
	Node0x1cf90b8 -> Node0x1cfa870;
	Node0x1cfa028 -> Node0x1cfa8e0;
	Node0x1cfa870 -> Node0x1cfa8e0;
	Node0x1cfa8e0 -> Node0x1cfa950;
	Node0x1cfa800 -> Node0x1cfa9c0;
	Node0x1cfa028 -> Node0x1cfaa30;
	Node0x1cfa870 -> Node0x1cfaa30;
	Node0x1cfaa30 -> Node0x1cfaaa0;
	Node0x1cfa950 -> Node0x1cfaaa0;
	Node0x1cfaaa0 -> Node0x1cfab10;
	Node0x1cfa9c0 -> Node0x1cfab10;
	Node0x1cfa790 -> Node0x1cfab80;
	Node0x1cfab10 -> Node0x1cfab80;
	Node0x1cfab80 -> Node0x1c999d8;
	Node0x1c999d8 -> Node0x1cfac10;
	Node0x1cf8ca8 -> Node0x1cfae68;
	Node0x1cf8768 -> Node0x1cfafc8;
}
