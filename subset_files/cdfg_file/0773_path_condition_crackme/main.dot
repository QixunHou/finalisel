digraph "DFG for'main' function" {
	Node0x6b7318[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x6b7398[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x6b7428[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x6b7488[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x6b7908[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6b79e8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x6b7ae8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6b7ba8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x6b7c58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6b7eb8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x6b7f78[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x6b80d8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x6b8138[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x6b99e0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x6b9be8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6b9d48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6b9e58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6b9f18[shape=record, label="  ret i32 0"];
	Node0x6b7318 -> Node0x6b7398;
	Node0x6b7398 -> Node0x6b7428;
	Node0x6b7428 -> Node0x6b7488;
	Node0x6b7488 -> Node0x6b7908;
	Node0x6b7908 -> Node0x6b79e8;
	Node0x6b79e8 -> Node0x6b7ae8;
	Node0x6b7ae8 -> Node0x6b7ba8;
	Node0x6b7ba8 -> Node0x6b7c58;
	Node0x6b7c58 -> Node0x6b7eb8;
	Node0x6b7eb8 -> Node0x6b7f78;
	Node0x6b7f78 -> Node0x6b80d8;
	Node0x6b80d8 -> Node0x6b8138;
	Node0x6b8138 -> Node0x6b99e0;
	Node0x6b99e0 -> Node0x6b9be8;
	Node0x6b9be8 -> Node0x6b9d48;
	Node0x6b9d48 -> Node0x6b9e58;
	Node0x6b9e58 -> Node0x6b9f18;
edge [color=red]
	Node0x6b7318 -> Node0x6b7488;
	Node0x6b7488 -> Node0x6b7908;
	Node0x6b7398 -> Node0x6b79e8;
	Node0x6b79e8 -> Node0x6b7ae8;
	Node0x6b7428 -> Node0x6b7ba8;
	Node0x6b7ba8 -> Node0x6b7c58;
	Node0x6b7318 -> Node0x6b7eb8;
	Node0x6b7398 -> Node0x6b7eb8;
	Node0x6b7428 -> Node0x6b7eb8;
	Node0x6b7318 -> Node0x6b7f78;
	Node0x6b7398 -> Node0x6b80d8;
	Node0x6b7428 -> Node0x6b8138;
	Node0x6b7f78 -> Node0x6b99e0;
	Node0x6b80d8 -> Node0x6b99e0;
	Node0x6b8138 -> Node0x6b99e0;
	Node0x6b7ba8 -> Node0x6b9be8;
	Node0x6b79e8 -> Node0x6b9d48;
	Node0x6b7488 -> Node0x6b9e58;
}
