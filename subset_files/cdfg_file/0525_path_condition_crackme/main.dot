digraph "DFG for'main' function" {
	Node0xd7bd08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd7bd88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd7be18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xd7be78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xd7bf28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xd7c358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd7c438[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xd7c538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd7c5f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xd7c6a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xd7c768[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xd7c818[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xd76b90[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xd7ca18[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd7d988[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd7dff8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xd7e058[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xd7e0d0[shape=record, label="  %14 = and i32 %12, %11"];
	Node0xd7e140[shape=record, label="  %15 = xor i32 %13, -1"];
	Node0xd7e1b0[shape=record, label="  %16 = xor i32 %13, %10"];
	Node0xd7e220[shape=record, label="  %17 = sub i32 %15, %14"];
	Node0xd7e290[shape=record, label="  %18 = add i32 %17, %16"];
	Node0xd7e300[shape=record, label="  %19 = or i32 %12, %11"];
	Node0xd7e370[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0xd7e3e0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0xd7e450[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0xd7e4c0[shape=record, label="  %23 = xor i32 %12, -1"];
	Node0xd7e530[shape=record, label="  %24 = and i32 %11, %23"];
	Node0xd7e5a0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0xd7e610[shape=record, label="  %26 = mul i32 %25, -5"];
	Node0xd7e680[shape=record, label="  %27 = shl i32 %19, 2"];
	Node0xd7e6f0[shape=record, label="  %28 = xor i32 %27, -4"];
	Node0xd7e760[shape=record, label="  %29 = xor i32 %11, 2147483647"];
	Node0xd7e7d0[shape=record, label="  %30 = and i32 %29, %12"];
	Node0xd7e840[shape=record, label="  %31 = xor i32 %10, -1"];
	Node0xd7e8b0[shape=record, label="  %32 = and i32 %13, %31"];
	Node0xd7e920[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0xd7e990[shape=record, label="  %34 = and i32 %10, %15"];
	Node0xd7ea00[shape=record, label="  %35 = mul i32 %32, 3"];
	Node0xd7ea70[shape=record, label="  %36 = and i32 %13, %10"];
	Node0xd7eae0[shape=record, label="  %37 = add i32 %30, %12"];
	Node0xd7eb50[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0xd7ebc0[shape=record, label="  %39 = add i32 %10, 1"];
	Node0xd7ec30[shape=record, label="  %40 = sub i32 %39, %11"];
	Node0xd7eca0[shape=record, label="  %41 = add i32 %40, %12"];
	Node0xd7ed10[shape=record, label="  %42 = add i32 %41, %19"];
	Node0xd7ed80[shape=record, label="  %43 = add i32 %42, %24"];
	Node0xd7edf0[shape=record, label="  %44 = sub i32 %43, %13"];
	Node0xd7ee60[shape=record, label="  %45 = add i32 %44, %26"];
	Node0xd7eed0[shape=record, label="  %46 = sub i32 %45, %16"];
	Node0xd7ef40[shape=record, label="  %47 = add i32 %46, %33"];
	Node0xd7efb0[shape=record, label="  %48 = add i32 %47, %34"];
	Node0xd7f020[shape=record, label="  %49 = sub i32 %48, %36"];
	Node0xd7f090[shape=record, label="  %50 = add i32 %49, %22"];
	Node0xd7f100[shape=record, label="  %51 = add i32 %50, %28"];
	Node0xd7f170[shape=record, label="  %52 = add i32 %51, %35"];
	Node0xd7f1e0[shape=record, label="  %53 = add i32 %52, %38"];
	Node0xd7f250[shape=record, label="  %54 = icmp eq i32 %18, %53"];
	Node0xd1b8b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xd7f2e0[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0xd7f588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xd7f6e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xd7f7f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd7f908[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd7f9c8[shape=record, label="  ret i32 0"];
	Node0xd7bd08 -> Node0xd7bd88;
	Node0xd7bd88 -> Node0xd7be18;
	Node0xd7be18 -> Node0xd7be78;
	Node0xd7be78 -> Node0xd7bf28;
	Node0xd7bf28 -> Node0xd7c358;
	Node0xd7c358 -> Node0xd7c438;
	Node0xd7c438 -> Node0xd7c538;
	Node0xd7c538 -> Node0xd7c5f8;
	Node0xd7c5f8 -> Node0xd7c6a8;
	Node0xd7c6a8 -> Node0xd7c768;
	Node0xd7c768 -> Node0xd7c818;
	Node0xd7c818 -> Node0xd76b90;
	Node0xd76b90 -> Node0xd7ca18;
	Node0xd7ca18 -> Node0xd7d988;
	Node0xd7d988 -> Node0xd7dff8;
	Node0xd7dff8 -> Node0xd7e058;
	Node0xd7e058 -> Node0xd7e0d0;
	Node0xd7e0d0 -> Node0xd7e140;
	Node0xd7e140 -> Node0xd7e1b0;
	Node0xd7e1b0 -> Node0xd7e220;
	Node0xd7e220 -> Node0xd7e290;
	Node0xd7e290 -> Node0xd7e300;
	Node0xd7e300 -> Node0xd7e370;
	Node0xd7e370 -> Node0xd7e3e0;
	Node0xd7e3e0 -> Node0xd7e450;
	Node0xd7e450 -> Node0xd7e4c0;
	Node0xd7e4c0 -> Node0xd7e530;
	Node0xd7e530 -> Node0xd7e5a0;
	Node0xd7e5a0 -> Node0xd7e610;
	Node0xd7e610 -> Node0xd7e680;
	Node0xd7e680 -> Node0xd7e6f0;
	Node0xd7e6f0 -> Node0xd7e760;
	Node0xd7e760 -> Node0xd7e7d0;
	Node0xd7e7d0 -> Node0xd7e840;
	Node0xd7e840 -> Node0xd7e8b0;
	Node0xd7e8b0 -> Node0xd7e920;
	Node0xd7e920 -> Node0xd7e990;
	Node0xd7e990 -> Node0xd7ea00;
	Node0xd7ea00 -> Node0xd7ea70;
	Node0xd7ea70 -> Node0xd7eae0;
	Node0xd7eae0 -> Node0xd7eb50;
	Node0xd7eb50 -> Node0xd7ebc0;
	Node0xd7ebc0 -> Node0xd7ec30;
	Node0xd7ec30 -> Node0xd7eca0;
	Node0xd7eca0 -> Node0xd7ed10;
	Node0xd7ed10 -> Node0xd7ed80;
	Node0xd7ed80 -> Node0xd7edf0;
	Node0xd7edf0 -> Node0xd7ee60;
	Node0xd7ee60 -> Node0xd7eed0;
	Node0xd7eed0 -> Node0xd7ef40;
	Node0xd7ef40 -> Node0xd7efb0;
	Node0xd7efb0 -> Node0xd7f020;
	Node0xd7f020 -> Node0xd7f090;
	Node0xd7f090 -> Node0xd7f100;
	Node0xd7f100 -> Node0xd7f170;
	Node0xd7f170 -> Node0xd7f1e0;
	Node0xd7f1e0 -> Node0xd7f250;
	Node0xd7f250 -> Node0xd1b8b8;
	Node0xd1b8b8 -> Node0xd7f2e0;
	Node0xd7f2e0 -> Node0xd7f588;
	Node0xd7f588 -> Node0xd7f6e8;
	Node0xd7f6e8 -> Node0xd7f7f8;
	Node0xd7f7f8 -> Node0xd7f908;
	Node0xd7f908 -> Node0xd7f9c8;
edge [color=red]
	Node0xd7bd08 -> Node0xd7bf28;
	Node0xd7bf28 -> Node0xd7c358;
	Node0xd7bd88 -> Node0xd7c438;
	Node0xd7c438 -> Node0xd7c538;
	Node0xd7be18 -> Node0xd7c5f8;
	Node0xd7c5f8 -> Node0xd7c6a8;
	Node0xd7be78 -> Node0xd7c768;
	Node0xd7c768 -> Node0xd7c818;
	Node0xd7bd08 -> Node0xd76b90;
	Node0xd7bd88 -> Node0xd76b90;
	Node0xd7be18 -> Node0xd76b90;
	Node0xd7be78 -> Node0xd76b90;
	Node0xd7bd08 -> Node0xd7ca18;
	Node0xd7bd88 -> Node0xd7d988;
	Node0xd7be18 -> Node0xd7dff8;
	Node0xd7be78 -> Node0xd7e058;
	Node0xd7dff8 -> Node0xd7e0d0;
	Node0xd7d988 -> Node0xd7e0d0;
	Node0xd7e058 -> Node0xd7e140;
	Node0xd7e058 -> Node0xd7e1b0;
	Node0xd7ca18 -> Node0xd7e1b0;
	Node0xd7e140 -> Node0xd7e220;
	Node0xd7e0d0 -> Node0xd7e220;
	Node0xd7e220 -> Node0xd7e290;
	Node0xd7e1b0 -> Node0xd7e290;
	Node0xd7dff8 -> Node0xd7e300;
	Node0xd7d988 -> Node0xd7e300;
	Node0xd7dff8 -> Node0xd7e370;
	Node0xd7d988 -> Node0xd7e370;
	Node0xd7e370 -> Node0xd7e3e0;
	Node0xd7e3e0 -> Node0xd7e450;
	Node0xd7dff8 -> Node0xd7e4c0;
	Node0xd7d988 -> Node0xd7e530;
	Node0xd7e4c0 -> Node0xd7e530;
	Node0xd7e530 -> Node0xd7e5a0;
	Node0xd7e5a0 -> Node0xd7e610;
	Node0xd7e300 -> Node0xd7e680;
	Node0xd7e680 -> Node0xd7e6f0;
	Node0xd7d988 -> Node0xd7e760;
	Node0xd7e760 -> Node0xd7e7d0;
	Node0xd7dff8 -> Node0xd7e7d0;
	Node0xd7ca18 -> Node0xd7e840;
	Node0xd7e058 -> Node0xd7e8b0;
	Node0xd7e840 -> Node0xd7e8b0;
	Node0xd7e8b0 -> Node0xd7e920;
	Node0xd7ca18 -> Node0xd7e990;
	Node0xd7e140 -> Node0xd7e990;
	Node0xd7e8b0 -> Node0xd7ea00;
	Node0xd7e058 -> Node0xd7ea70;
	Node0xd7ca18 -> Node0xd7ea70;
	Node0xd7e7d0 -> Node0xd7eae0;
	Node0xd7dff8 -> Node0xd7eae0;
	Node0xd7eae0 -> Node0xd7eb50;
	Node0xd7ca18 -> Node0xd7ebc0;
	Node0xd7ebc0 -> Node0xd7ec30;
	Node0xd7d988 -> Node0xd7ec30;
	Node0xd7ec30 -> Node0xd7eca0;
	Node0xd7dff8 -> Node0xd7eca0;
	Node0xd7eca0 -> Node0xd7ed10;
	Node0xd7e300 -> Node0xd7ed10;
	Node0xd7ed10 -> Node0xd7ed80;
	Node0xd7e530 -> Node0xd7ed80;
	Node0xd7ed80 -> Node0xd7edf0;
	Node0xd7e058 -> Node0xd7edf0;
	Node0xd7edf0 -> Node0xd7ee60;
	Node0xd7e610 -> Node0xd7ee60;
	Node0xd7ee60 -> Node0xd7eed0;
	Node0xd7e1b0 -> Node0xd7eed0;
	Node0xd7eed0 -> Node0xd7ef40;
	Node0xd7e920 -> Node0xd7ef40;
	Node0xd7ef40 -> Node0xd7efb0;
	Node0xd7e990 -> Node0xd7efb0;
	Node0xd7efb0 -> Node0xd7f020;
	Node0xd7ea70 -> Node0xd7f020;
	Node0xd7f020 -> Node0xd7f090;
	Node0xd7e450 -> Node0xd7f090;
	Node0xd7f090 -> Node0xd7f100;
	Node0xd7e6f0 -> Node0xd7f100;
	Node0xd7f100 -> Node0xd7f170;
	Node0xd7ea00 -> Node0xd7f170;
	Node0xd7f170 -> Node0xd7f1e0;
	Node0xd7eb50 -> Node0xd7f1e0;
	Node0xd7e290 -> Node0xd7f250;
	Node0xd7f1e0 -> Node0xd7f250;
	Node0xd7f250 -> Node0xd1b8b8;
	Node0xd1b8b8 -> Node0xd7f2e0;
	Node0xd7c768 -> Node0xd7f588;
	Node0xd7c5f8 -> Node0xd7f6e8;
	Node0xd7c438 -> Node0xd7f7f8;
	Node0xd7bf28 -> Node0xd7f908;
}
