digraph "DFG for'crackme' function" {
	Node0x10d8360[shape=record, label="  %3 = or i32 %1, %0"];
	Node0x10d83d0[shape=record, label="  %4 = and i32 %1, %0"];
	Node0x10d8aa0[shape=record, label="  %5 = xor i32 %4, -1"];
	Node0x10d8b10[shape=record, label="  %6 = add i32 %3, %5"];
	Node0x10d8b80[shape=record, label="  %7 = xor i32 %1, -1"];
	Node0x10d8bf0[shape=record, label="  %8 = or i32 %7, %0"];
	Node0x10d8c60[shape=record, label="  %9 = and i32 %7, %0"];
	Node0x10d8d00[shape=record, label="  %10 = shl i32 %8, 1"];
	Node0x10d8da0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x10d8e10[shape=record, label="  %12 = shl i32 %9, 1"];
	Node0x10d8e80[shape=record, label="  %13 = xor i32 %7, %0"];
	Node0x10d8ef0[shape=record, label="  %14 = add i32 %13, %12"];
	Node0x10d8f60[shape=record, label="  %15 = add i32 %14, %11"];
	Node0x10d8fd0[shape=record, label="  %16 = icmp eq i32 %6, %15"];
	Node0x1079268[shape=record, label="  %17 = select i1 %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x10d9470[shape=record, label="  %18 = tail call i32 @puts(i8* nonnull dereferenceable(1) %17)"];
	Node0x10d94c0[shape=record, label="  ret void"];
	Node0x10d8360 -> Node0x10d83d0;
	Node0x10d83d0 -> Node0x10d8aa0;
	Node0x10d8aa0 -> Node0x10d8b10;
	Node0x10d8b10 -> Node0x10d8b80;
	Node0x10d8b80 -> Node0x10d8bf0;
	Node0x10d8bf0 -> Node0x10d8c60;
	Node0x10d8c60 -> Node0x10d8d00;
	Node0x10d8d00 -> Node0x10d8da0;
	Node0x10d8da0 -> Node0x10d8e10;
	Node0x10d8e10 -> Node0x10d8e80;
	Node0x10d8e80 -> Node0x10d8ef0;
	Node0x10d8ef0 -> Node0x10d8f60;
	Node0x10d8f60 -> Node0x10d8fd0;
	Node0x10d8fd0 -> Node0x1079268;
	Node0x1079268 -> Node0x10d9470;
	Node0x10d9470 -> Node0x10d94c0;
edge [color=red]
	Node0x10d83d0 -> Node0x10d8aa0;
	Node0x10d8360 -> Node0x10d8b10;
	Node0x10d8aa0 -> Node0x10d8b10;
	Node0x10d8b80 -> Node0x10d8bf0;
	Node0x10d8b80 -> Node0x10d8c60;
	Node0x10d8bf0 -> Node0x10d8d00;
	Node0x10d8d00 -> Node0x10d8da0;
	Node0x10d8c60 -> Node0x10d8e10;
	Node0x10d8b80 -> Node0x10d8e80;
	Node0x10d8e80 -> Node0x10d8ef0;
	Node0x10d8e10 -> Node0x10d8ef0;
	Node0x10d8ef0 -> Node0x10d8f60;
	Node0x10d8da0 -> Node0x10d8f60;
	Node0x10d8b10 -> Node0x10d8fd0;
	Node0x10d8f60 -> Node0x10d8fd0;
	Node0x10d8fd0 -> Node0x1079268;
	Node0x1079268 -> Node0x10d9470;
}
