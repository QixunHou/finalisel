digraph "DFG for'main' function" {
	Node0x1ba4dd8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ba4e58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ba4ee8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ba4f48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1ba4ff8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1ba5428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ba5508[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1ba5608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ba56c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1ba5778[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1ba5838[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1ba58e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b9fbe0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1ba5ae8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ba6a58[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ba70c8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ba7128[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1ba71a0[shape=record, label="  %14 = or i32 %13, %10"];
	Node0x1ba7210[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1ba7280[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x1ba72f0[shape=record, label="  %17 = or i32 %12, %11"];
	Node0x1ba7360[shape=record, label="  %18 = xor i32 %11, %16"];
	Node0x1ba73d0[shape=record, label="  %19 = and i32 %12, %11"];
	Node0x1ba7440[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x1ba74b0[shape=record, label="  %21 = or i32 %11, %16"];
	Node0x1ba7520[shape=record, label="  %22 = shl i32 %11, 1"];
	Node0x1ba7590[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x1ba7600[shape=record, label="  %24 = shl i32 %17, 1"];
	Node0x1ba7670[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x1ba76e0[shape=record, label="  %26 = xor i32 %21, -1"];
	Node0x1ba7750[shape=record, label="  %27 = mul i32 %26, -6"];
	Node0x1ba77c0[shape=record, label="  %28 = mul i32 %19, -3"];
	Node0x1ba7830[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x1ba78a0[shape=record, label="  %30 = xor i32 %10, 2147483647"];
	Node0x1ba7910[shape=record, label="  %31 = and i32 %13, %30"];
	Node0x1ba7980[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x1ba79f0[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x1ba7a60[shape=record, label="  %34 = shl i32 %14, 1"];
	Node0x1ba7ad0[shape=record, label="  %35 = xor i32 %34, -2"];
	Node0x1ba7b40[shape=record, label="  %36 = xor i32 %13, -1"];
	Node0x1ba7bb0[shape=record, label="  %37 = and i32 %10, %36"];
	Node0x1ba7c20[shape=record, label="  %38 = sub i32 %12, %29"];
	Node0x1ba7c90[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x1ba7d00[shape=record, label="  %40 = shl i32 %10, 1"];
	Node0x1ba7d70[shape=record, label="  %41 = sub i32 %12, %40"];
	Node0x1ba7de0[shape=record, label="  %42 = add i32 %41, %17"];
	Node0x1ba7e50[shape=record, label="  %43 = add i32 %42, %18"];
	Node0x1ba7ec0[shape=record, label="  %44 = add i32 %43, %20"];
	Node0x1ba7f30[shape=record, label="  %45 = sub i32 %44, %21"];
	Node0x1ba7fa0[shape=record, label="  %46 = add i32 %45, %23"];
	Node0x1ba8010[shape=record, label="  %47 = sub i32 %46, %13"];
	Node0x1ba8080[shape=record, label="  %48 = add i32 %47, %27"];
	Node0x1ba80f0[shape=record, label="  %49 = add i32 %48, %28"];
	Node0x1ba8160[shape=record, label="  %50 = add i32 %49, %37"];
	Node0x1ba81d0[shape=record, label="  %51 = sub i32 %50, %25"];
	Node0x1ba8240[shape=record, label="  %52 = add i32 %51, %32"];
	Node0x1ba82b0[shape=record, label="  %53 = add i32 %52, %33"];
	Node0x1ba8320[shape=record, label="  %54 = sub i32 %53, %35"];
	Node0x1ba8390[shape=record, label="  %55 = add i32 %54, %39"];
	Node0x1ba8400[shape=record, label="  %56 = icmp eq i32 %55, %15"];
	Node0x1b448b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ba8490[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x1ba8738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1ba8898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1ba89a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ba8ab8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ba8b78[shape=record, label="  ret i32 0"];
	Node0x1ba4dd8 -> Node0x1ba4e58;
	Node0x1ba4e58 -> Node0x1ba4ee8;
	Node0x1ba4ee8 -> Node0x1ba4f48;
	Node0x1ba4f48 -> Node0x1ba4ff8;
	Node0x1ba4ff8 -> Node0x1ba5428;
	Node0x1ba5428 -> Node0x1ba5508;
	Node0x1ba5508 -> Node0x1ba5608;
	Node0x1ba5608 -> Node0x1ba56c8;
	Node0x1ba56c8 -> Node0x1ba5778;
	Node0x1ba5778 -> Node0x1ba5838;
	Node0x1ba5838 -> Node0x1ba58e8;
	Node0x1ba58e8 -> Node0x1b9fbe0;
	Node0x1b9fbe0 -> Node0x1ba5ae8;
	Node0x1ba5ae8 -> Node0x1ba6a58;
	Node0x1ba6a58 -> Node0x1ba70c8;
	Node0x1ba70c8 -> Node0x1ba7128;
	Node0x1ba7128 -> Node0x1ba71a0;
	Node0x1ba71a0 -> Node0x1ba7210;
	Node0x1ba7210 -> Node0x1ba7280;
	Node0x1ba7280 -> Node0x1ba72f0;
	Node0x1ba72f0 -> Node0x1ba7360;
	Node0x1ba7360 -> Node0x1ba73d0;
	Node0x1ba73d0 -> Node0x1ba7440;
	Node0x1ba7440 -> Node0x1ba74b0;
	Node0x1ba74b0 -> Node0x1ba7520;
	Node0x1ba7520 -> Node0x1ba7590;
	Node0x1ba7590 -> Node0x1ba7600;
	Node0x1ba7600 -> Node0x1ba7670;
	Node0x1ba7670 -> Node0x1ba76e0;
	Node0x1ba76e0 -> Node0x1ba7750;
	Node0x1ba7750 -> Node0x1ba77c0;
	Node0x1ba77c0 -> Node0x1ba7830;
	Node0x1ba7830 -> Node0x1ba78a0;
	Node0x1ba78a0 -> Node0x1ba7910;
	Node0x1ba7910 -> Node0x1ba7980;
	Node0x1ba7980 -> Node0x1ba79f0;
	Node0x1ba79f0 -> Node0x1ba7a60;
	Node0x1ba7a60 -> Node0x1ba7ad0;
	Node0x1ba7ad0 -> Node0x1ba7b40;
	Node0x1ba7b40 -> Node0x1ba7bb0;
	Node0x1ba7bb0 -> Node0x1ba7c20;
	Node0x1ba7c20 -> Node0x1ba7c90;
	Node0x1ba7c90 -> Node0x1ba7d00;
	Node0x1ba7d00 -> Node0x1ba7d70;
	Node0x1ba7d70 -> Node0x1ba7de0;
	Node0x1ba7de0 -> Node0x1ba7e50;
	Node0x1ba7e50 -> Node0x1ba7ec0;
	Node0x1ba7ec0 -> Node0x1ba7f30;
	Node0x1ba7f30 -> Node0x1ba7fa0;
	Node0x1ba7fa0 -> Node0x1ba8010;
	Node0x1ba8010 -> Node0x1ba8080;
	Node0x1ba8080 -> Node0x1ba80f0;
	Node0x1ba80f0 -> Node0x1ba8160;
	Node0x1ba8160 -> Node0x1ba81d0;
	Node0x1ba81d0 -> Node0x1ba8240;
	Node0x1ba8240 -> Node0x1ba82b0;
	Node0x1ba82b0 -> Node0x1ba8320;
	Node0x1ba8320 -> Node0x1ba8390;
	Node0x1ba8390 -> Node0x1ba8400;
	Node0x1ba8400 -> Node0x1b448b8;
	Node0x1b448b8 -> Node0x1ba8490;
	Node0x1ba8490 -> Node0x1ba8738;
	Node0x1ba8738 -> Node0x1ba8898;
	Node0x1ba8898 -> Node0x1ba89a8;
	Node0x1ba89a8 -> Node0x1ba8ab8;
	Node0x1ba8ab8 -> Node0x1ba8b78;
edge [color=red]
	Node0x1ba4dd8 -> Node0x1ba4ff8;
	Node0x1ba4ff8 -> Node0x1ba5428;
	Node0x1ba4e58 -> Node0x1ba5508;
	Node0x1ba5508 -> Node0x1ba5608;
	Node0x1ba4ee8 -> Node0x1ba56c8;
	Node0x1ba56c8 -> Node0x1ba5778;
	Node0x1ba4f48 -> Node0x1ba5838;
	Node0x1ba5838 -> Node0x1ba58e8;
	Node0x1ba4dd8 -> Node0x1b9fbe0;
	Node0x1ba4e58 -> Node0x1b9fbe0;
	Node0x1ba4ee8 -> Node0x1b9fbe0;
	Node0x1ba4f48 -> Node0x1b9fbe0;
	Node0x1ba4dd8 -> Node0x1ba5ae8;
	Node0x1ba4e58 -> Node0x1ba6a58;
	Node0x1ba4ee8 -> Node0x1ba70c8;
	Node0x1ba4f48 -> Node0x1ba7128;
	Node0x1ba7128 -> Node0x1ba71a0;
	Node0x1ba5ae8 -> Node0x1ba71a0;
	Node0x1ba71a0 -> Node0x1ba7210;
	Node0x1ba70c8 -> Node0x1ba7280;
	Node0x1ba70c8 -> Node0x1ba72f0;
	Node0x1ba6a58 -> Node0x1ba72f0;
	Node0x1ba6a58 -> Node0x1ba7360;
	Node0x1ba7280 -> Node0x1ba7360;
	Node0x1ba70c8 -> Node0x1ba73d0;
	Node0x1ba6a58 -> Node0x1ba73d0;
	Node0x1ba73d0 -> Node0x1ba7440;
	Node0x1ba6a58 -> Node0x1ba74b0;
	Node0x1ba7280 -> Node0x1ba74b0;
	Node0x1ba6a58 -> Node0x1ba7520;
	Node0x1ba7520 -> Node0x1ba7590;
	Node0x1ba72f0 -> Node0x1ba7600;
	Node0x1ba7600 -> Node0x1ba7670;
	Node0x1ba74b0 -> Node0x1ba76e0;
	Node0x1ba76e0 -> Node0x1ba7750;
	Node0x1ba73d0 -> Node0x1ba77c0;
	Node0x1ba7128 -> Node0x1ba7830;
	Node0x1ba5ae8 -> Node0x1ba7830;
	Node0x1ba5ae8 -> Node0x1ba78a0;
	Node0x1ba7128 -> Node0x1ba7910;
	Node0x1ba78a0 -> Node0x1ba7910;
	Node0x1ba7910 -> Node0x1ba7980;
	Node0x1ba7980 -> Node0x1ba79f0;
	Node0x1ba71a0 -> Node0x1ba7a60;
	Node0x1ba7a60 -> Node0x1ba7ad0;
	Node0x1ba7128 -> Node0x1ba7b40;
	Node0x1ba5ae8 -> Node0x1ba7bb0;
	Node0x1ba7b40 -> Node0x1ba7bb0;
	Node0x1ba70c8 -> Node0x1ba7c20;
	Node0x1ba7830 -> Node0x1ba7c20;
	Node0x1ba7c20 -> Node0x1ba7c90;
	Node0x1ba5ae8 -> Node0x1ba7d00;
	Node0x1ba70c8 -> Node0x1ba7d70;
	Node0x1ba7d00 -> Node0x1ba7d70;
	Node0x1ba7d70 -> Node0x1ba7de0;
	Node0x1ba72f0 -> Node0x1ba7de0;
	Node0x1ba7de0 -> Node0x1ba7e50;
	Node0x1ba7360 -> Node0x1ba7e50;
	Node0x1ba7e50 -> Node0x1ba7ec0;
	Node0x1ba7440 -> Node0x1ba7ec0;
	Node0x1ba7ec0 -> Node0x1ba7f30;
	Node0x1ba74b0 -> Node0x1ba7f30;
	Node0x1ba7f30 -> Node0x1ba7fa0;
	Node0x1ba7590 -> Node0x1ba7fa0;
	Node0x1ba7fa0 -> Node0x1ba8010;
	Node0x1ba7128 -> Node0x1ba8010;
	Node0x1ba8010 -> Node0x1ba8080;
	Node0x1ba7750 -> Node0x1ba8080;
	Node0x1ba8080 -> Node0x1ba80f0;
	Node0x1ba77c0 -> Node0x1ba80f0;
	Node0x1ba80f0 -> Node0x1ba8160;
	Node0x1ba7bb0 -> Node0x1ba8160;
	Node0x1ba8160 -> Node0x1ba81d0;
	Node0x1ba7670 -> Node0x1ba81d0;
	Node0x1ba81d0 -> Node0x1ba8240;
	Node0x1ba7980 -> Node0x1ba8240;
	Node0x1ba8240 -> Node0x1ba82b0;
	Node0x1ba79f0 -> Node0x1ba82b0;
	Node0x1ba82b0 -> Node0x1ba8320;
	Node0x1ba7ad0 -> Node0x1ba8320;
	Node0x1ba8320 -> Node0x1ba8390;
	Node0x1ba7c90 -> Node0x1ba8390;
	Node0x1ba8390 -> Node0x1ba8400;
	Node0x1ba7210 -> Node0x1ba8400;
	Node0x1ba8400 -> Node0x1b448b8;
	Node0x1b448b8 -> Node0x1ba8490;
	Node0x1ba5838 -> Node0x1ba8738;
	Node0x1ba56c8 -> Node0x1ba8898;
	Node0x1ba5508 -> Node0x1ba89a8;
	Node0x1ba4ff8 -> Node0x1ba8ab8;
}
