digraph "DFG for'main' function" {
	Node0x15a7678[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x15a76f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x15a7788[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x15a77e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x15a7c68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x15a7d48[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x15a7e48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x15a7f08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x15a7fb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x15a8218[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x15a82d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x15a8438[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x15a8498[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x15af5f0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x15af7d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x15af938[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x15afa48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x15afb08[shape=record, label="  ret i32 0"];
	Node0x15a7678 -> Node0x15a76f8;
	Node0x15a76f8 -> Node0x15a7788;
	Node0x15a7788 -> Node0x15a77e8;
	Node0x15a77e8 -> Node0x15a7c68;
	Node0x15a7c68 -> Node0x15a7d48;
	Node0x15a7d48 -> Node0x15a7e48;
	Node0x15a7e48 -> Node0x15a7f08;
	Node0x15a7f08 -> Node0x15a7fb8;
	Node0x15a7fb8 -> Node0x15a8218;
	Node0x15a8218 -> Node0x15a82d8;
	Node0x15a82d8 -> Node0x15a8438;
	Node0x15a8438 -> Node0x15a8498;
	Node0x15a8498 -> Node0x15af5f0;
	Node0x15af5f0 -> Node0x15af7d8;
	Node0x15af7d8 -> Node0x15af938;
	Node0x15af938 -> Node0x15afa48;
	Node0x15afa48 -> Node0x15afb08;
edge [color=red]
	Node0x15a7678 -> Node0x15a77e8;
	Node0x15a77e8 -> Node0x15a7c68;
	Node0x15a76f8 -> Node0x15a7d48;
	Node0x15a7d48 -> Node0x15a7e48;
	Node0x15a7788 -> Node0x15a7f08;
	Node0x15a7f08 -> Node0x15a7fb8;
	Node0x15a7678 -> Node0x15a8218;
	Node0x15a76f8 -> Node0x15a8218;
	Node0x15a7788 -> Node0x15a8218;
	Node0x15a7678 -> Node0x15a82d8;
	Node0x15a76f8 -> Node0x15a8438;
	Node0x15a7788 -> Node0x15a8498;
	Node0x15a82d8 -> Node0x15af5f0;
	Node0x15a8438 -> Node0x15af5f0;
	Node0x15a8498 -> Node0x15af5f0;
	Node0x15a7f08 -> Node0x15af7d8;
	Node0x15a7d48 -> Node0x15af938;
	Node0x15a77e8 -> Node0x15afa48;
}
