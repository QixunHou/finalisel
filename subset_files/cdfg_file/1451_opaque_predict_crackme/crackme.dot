digraph "DFG for'crackme' function" {
	Node0x2175d70[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x2175de0[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x2175e80[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x2175f20[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0x2175f90[shape=record, label="  %9 = sub i32 %8, %1"];
	Node0x2176000[shape=record, label="  %10 = xor i32 %0, -1"];
	Node0x2176070[shape=record, label="  %11 = and i32 %10, %3"];
	Node0x21760e0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x2176150[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x21761c0[shape=record, label="  %14 = add i32 %9, %13"];
	Node0x2176230[shape=record, label="  %15 = xor i32 %3, %0"];
	Node0x21762d0[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0x2176370[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x21763e0[shape=record, label="  %18 = add i32 %14, %17"];
	Node0x2176450[shape=record, label="  %19 = and i32 %2, %1"];
	Node0x21764c0[shape=record, label="  %20 = xor i32 %2, %1"];
	Node0x2176530[shape=record, label="  %21 = or i32 %2, %1"];
	Node0x21765a0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x2176640[shape=record, label="  %23 = xor i32 %1, 1073741823"];
	Node0x21766b0[shape=record, label="  %24 = and i32 %23, %2"];
	Node0x2176720[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0x2176790[shape=record, label="  %26 = and i32 %3, %0"];
	Node0x2176800[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x2176870[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x21768e0[shape=record, label="  %29 = or i32 %3, %0"];
	Node0x2176950[shape=record, label="  %30 = xor i32 %29, -1"];
	Node0x21769f0[shape=record, label="  %31 = mul i32 %30, 10"];
	Node0x2176a60[shape=record, label="  %32 = xor i32 %3, 1073741823"];
	Node0x2176ce0[shape=record, label="  %33 = and i32 %32, %0"];
	Node0x2176d50[shape=record, label="  %34 = shl i32 %33, 2"];
	Node0x2176df0[shape=record, label="  %35 = mul i32 %26, 9"];
	Node0x2176e60[shape=record, label="  %36 = sub i32 %2, %6"];
	Node0x2176ed0[shape=record, label="  %37 = add i32 %36, %11"];
	Node0x2176f70[shape=record, label="  %38 = mul i32 %37, 3"];
	Node0x2176fe0[shape=record, label="  %39 = add i32 %15, %20"];
	Node0x2177050[shape=record, label="  %40 = sub i32 %39, %19"];
	Node0x21770c0[shape=record, label="  %41 = shl i32 %40, 1"];
	Node0x2177130[shape=record, label="  %42 = sub i32 1, %1"];
	Node0x21771a0[shape=record, label="  %43 = add i32 %42, %22"];
	Node0x2177210[shape=record, label="  %44 = sub i32 %43, %3"];
	Node0x2177280[shape=record, label="  %45 = sub i32 %44, %25"];
	Node0x21772f0[shape=record, label="  %46 = add i32 %45, %31"];
	Node0x2177360[shape=record, label="  %47 = add i32 %46, %35"];
	Node0x21773d0[shape=record, label="  %48 = sub i32 %47, %28"];
	Node0x2177440[shape=record, label="  %49 = add i32 %48, %34"];
	Node0x21774b0[shape=record, label="  %50 = add i32 %49, %38"];
	Node0x2177520[shape=record, label="  %51 = add i32 %50, %41"];
	Node0x2177590[shape=record, label="  %52 = icmp eq i32 %18, %51"];
	Node0x2116268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2177a30[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0x2177a80[shape=record, label="  ret void"];
	Node0x2175d70 -> Node0x2175de0;
	Node0x2175de0 -> Node0x2175e80;
	Node0x2175e80 -> Node0x2175f20;
	Node0x2175f20 -> Node0x2175f90;
	Node0x2175f90 -> Node0x2176000;
	Node0x2176000 -> Node0x2176070;
	Node0x2176070 -> Node0x21760e0;
	Node0x21760e0 -> Node0x2176150;
	Node0x2176150 -> Node0x21761c0;
	Node0x21761c0 -> Node0x2176230;
	Node0x2176230 -> Node0x21762d0;
	Node0x21762d0 -> Node0x2176370;
	Node0x2176370 -> Node0x21763e0;
	Node0x21763e0 -> Node0x2176450;
	Node0x2176450 -> Node0x21764c0;
	Node0x21764c0 -> Node0x2176530;
	Node0x2176530 -> Node0x21765a0;
	Node0x21765a0 -> Node0x2176640;
	Node0x2176640 -> Node0x21766b0;
	Node0x21766b0 -> Node0x2176720;
	Node0x2176720 -> Node0x2176790;
	Node0x2176790 -> Node0x2176800;
	Node0x2176800 -> Node0x2176870;
	Node0x2176870 -> Node0x21768e0;
	Node0x21768e0 -> Node0x2176950;
	Node0x2176950 -> Node0x21769f0;
	Node0x21769f0 -> Node0x2176a60;
	Node0x2176a60 -> Node0x2176ce0;
	Node0x2176ce0 -> Node0x2176d50;
	Node0x2176d50 -> Node0x2176df0;
	Node0x2176df0 -> Node0x2176e60;
	Node0x2176e60 -> Node0x2176ed0;
	Node0x2176ed0 -> Node0x2176f70;
	Node0x2176f70 -> Node0x2176fe0;
	Node0x2176fe0 -> Node0x2177050;
	Node0x2177050 -> Node0x21770c0;
	Node0x21770c0 -> Node0x2177130;
	Node0x2177130 -> Node0x21771a0;
	Node0x21771a0 -> Node0x2177210;
	Node0x2177210 -> Node0x2177280;
	Node0x2177280 -> Node0x21772f0;
	Node0x21772f0 -> Node0x2177360;
	Node0x2177360 -> Node0x21773d0;
	Node0x21773d0 -> Node0x2177440;
	Node0x2177440 -> Node0x21774b0;
	Node0x21774b0 -> Node0x2177520;
	Node0x2177520 -> Node0x2177590;
	Node0x2177590 -> Node0x2116268;
	Node0x2116268 -> Node0x2177a30;
	Node0x2177a30 -> Node0x2177a80;
edge [color=red]
	Node0x2175d70 -> Node0x2175de0;
	Node0x2175de0 -> Node0x2175e80;
	Node0x2175e80 -> Node0x2175f20;
	Node0x2175f20 -> Node0x2175f90;
	Node0x2176000 -> Node0x2176070;
	Node0x2176070 -> Node0x21760e0;
	Node0x21760e0 -> Node0x2176150;
	Node0x2175f90 -> Node0x21761c0;
	Node0x2176150 -> Node0x21761c0;
	Node0x2176230 -> Node0x21762d0;
	Node0x21762d0 -> Node0x2176370;
	Node0x21761c0 -> Node0x21763e0;
	Node0x2176370 -> Node0x21763e0;
	Node0x2176530 -> Node0x21765a0;
	Node0x2176640 -> Node0x21766b0;
	Node0x21766b0 -> Node0x2176720;
	Node0x2176790 -> Node0x2176800;
	Node0x2176800 -> Node0x2176870;
	Node0x21768e0 -> Node0x2176950;
	Node0x2176950 -> Node0x21769f0;
	Node0x2176a60 -> Node0x2176ce0;
	Node0x2176ce0 -> Node0x2176d50;
	Node0x2176790 -> Node0x2176df0;
	Node0x2175de0 -> Node0x2176e60;
	Node0x2176e60 -> Node0x2176ed0;
	Node0x2176070 -> Node0x2176ed0;
	Node0x2176ed0 -> Node0x2176f70;
	Node0x2176230 -> Node0x2176fe0;
	Node0x21764c0 -> Node0x2176fe0;
	Node0x2176fe0 -> Node0x2177050;
	Node0x2176450 -> Node0x2177050;
	Node0x2177050 -> Node0x21770c0;
	Node0x2177130 -> Node0x21771a0;
	Node0x21765a0 -> Node0x21771a0;
	Node0x21771a0 -> Node0x2177210;
	Node0x2177210 -> Node0x2177280;
	Node0x2176720 -> Node0x2177280;
	Node0x2177280 -> Node0x21772f0;
	Node0x21769f0 -> Node0x21772f0;
	Node0x21772f0 -> Node0x2177360;
	Node0x2176df0 -> Node0x2177360;
	Node0x2177360 -> Node0x21773d0;
	Node0x2176870 -> Node0x21773d0;
	Node0x21773d0 -> Node0x2177440;
	Node0x2176d50 -> Node0x2177440;
	Node0x2177440 -> Node0x21774b0;
	Node0x2176f70 -> Node0x21774b0;
	Node0x21774b0 -> Node0x2177520;
	Node0x21770c0 -> Node0x2177520;
	Node0x21763e0 -> Node0x2177590;
	Node0x2177520 -> Node0x2177590;
	Node0x2177590 -> Node0x2116268;
	Node0x2116268 -> Node0x2177a30;
}
