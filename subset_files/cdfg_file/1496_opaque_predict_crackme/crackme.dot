digraph "DFG for'crackme' function" {
	Node0x22829e0[shape=record, label="  %3 = shl i32 %1, 2"];
	Node0x2282a50[shape=record, label="  %4 = or i32 %1, %0"];
	Node0x2282b10[shape=record, label="  %5 = sub i32 %3, %4"];
	Node0x2282b80[shape=record, label="  %6 = sub i32 %0, %4"];
	Node0x2282bf0[shape=record, label="  %7 = xor i32 %1, -1"];
	Node0x2282c90[shape=record, label="  %8 = xor i32 %0, 1073741823"];
	Node0x2282d00[shape=record, label="  %9 = and i32 %8, %1"];
	Node0x2282d70[shape=record, label="  %10 = shl i32 %9, 2"];
	Node0x2282de0[shape=record, label="  %11 = and i32 %7, %0"];
	Node0x2282e50[shape=record, label="  %12 = and i32 %1, %0"];
	Node0x2282ef0[shape=record, label="  %13 = mul i32 %12, 3"];
	Node0x2282f60[shape=record, label="  %14 = sub i32 %6, %11"];
	Node0x2282fd0[shape=record, label="  %15 = add i32 %14, %10"];
	Node0x2283040[shape=record, label="  %16 = add i32 %15, %13"];
	Node0x22830b0[shape=record, label="  %17 = icmp eq i32 %5, %16"];
	Node0x2223268[shape=record, label="  %18 = select i1 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2283550[shape=record, label="  %19 = tail call i32 @puts(i8* nonnull dereferenceable(1) %18)"];
	Node0x22835a0[shape=record, label="  ret void"];
	Node0x22829e0 -> Node0x2282a50;
	Node0x2282a50 -> Node0x2282b10;
	Node0x2282b10 -> Node0x2282b80;
	Node0x2282b80 -> Node0x2282bf0;
	Node0x2282bf0 -> Node0x2282c90;
	Node0x2282c90 -> Node0x2282d00;
	Node0x2282d00 -> Node0x2282d70;
	Node0x2282d70 -> Node0x2282de0;
	Node0x2282de0 -> Node0x2282e50;
	Node0x2282e50 -> Node0x2282ef0;
	Node0x2282ef0 -> Node0x2282f60;
	Node0x2282f60 -> Node0x2282fd0;
	Node0x2282fd0 -> Node0x2283040;
	Node0x2283040 -> Node0x22830b0;
	Node0x22830b0 -> Node0x2223268;
	Node0x2223268 -> Node0x2283550;
	Node0x2283550 -> Node0x22835a0;
edge [color=red]
	Node0x22829e0 -> Node0x2282b10;
	Node0x2282a50 -> Node0x2282b10;
	Node0x2282a50 -> Node0x2282b80;
	Node0x2282c90 -> Node0x2282d00;
	Node0x2282d00 -> Node0x2282d70;
	Node0x2282bf0 -> Node0x2282de0;
	Node0x2282e50 -> Node0x2282ef0;
	Node0x2282b80 -> Node0x2282f60;
	Node0x2282de0 -> Node0x2282f60;
	Node0x2282f60 -> Node0x2282fd0;
	Node0x2282d70 -> Node0x2282fd0;
	Node0x2282fd0 -> Node0x2283040;
	Node0x2282ef0 -> Node0x2283040;
	Node0x2282b10 -> Node0x22830b0;
	Node0x2283040 -> Node0x22830b0;
	Node0x22830b0 -> Node0x2223268;
	Node0x2223268 -> Node0x2283550;
}
