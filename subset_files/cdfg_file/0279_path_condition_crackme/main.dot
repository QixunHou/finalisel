digraph "DFG for'main' function" {
	Node0xf5cc28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf5cca8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf5cd38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf5cd98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xf5ce48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xf5d278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf5d358[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xf5d458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf5d518[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xf5d5c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf5d688[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xf5d738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf57b50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xf5d938[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf5e8a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf5ef18[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf5ef78[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xf5eff0[shape=record, label="  %14 = and i32 %12, %11"];
	Node0xf5f060[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xf5f0d0[shape=record, label="  %16 = sub i32 %15, %10"];
	Node0xf5f140[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0xf5f1b0[shape=record, label="  %18 = or i32 %11, %17"];
	Node0xf5f220[shape=record, label="  %19 = and i32 %11, %17"];
	Node0xf5f290[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0xf5f300[shape=record, label="  %21 = or i32 %12, %11"];
	Node0xf5f370[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0xf5f3e0[shape=record, label="  %23 = xor i32 %18, -1"];
	Node0xf5f450[shape=record, label="  %24 = mul i32 %23, -5"];
	Node0xf5f4c0[shape=record, label="  %25 = mul i32 %14, -7"];
	Node0xf5f530[shape=record, label="  %26 = xor i32 %13, -1"];
	Node0xf5f5a0[shape=record, label="  %27 = or i32 %10, %26"];
	Node0xf5f610[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0xf5f680[shape=record, label="  %29 = and i32 %13, %10"];
	Node0xf5f6f0[shape=record, label="  %30 = or i32 %13, %10"];
	Node0xf5f760[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0xf5f7d0[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0xf5f840[shape=record, label="  %33 = and i32 %10, %26"];
	Node0xf5f8b0[shape=record, label="  %34 = shl i32 %29, 2"];
	Node0xf5f920[shape=record, label="  %35 = mul i32 %28, -2"];
	Node0xf5f990[shape=record, label="  %36 = add i32 %19, %22"];
	Node0xf5fa00[shape=record, label="  %37 = mul i32 %36, -6"];
	Node0xf5fa70[shape=record, label="  %38 = sub i32 -5, %10"];
	Node0xf5fae0[shape=record, label="  %39 = add i32 %38, %17"];
	Node0xf5fb50[shape=record, label="  %40 = add i32 %39, %18"];
	Node0xf5fbc0[shape=record, label="  %41 = add i32 %40, %20"];
	Node0xf5fc30[shape=record, label="  %42 = add i32 %41, %21"];
	Node0xf5fca0[shape=record, label="  %43 = add i32 %42, %24"];
	Node0xf5fd10[shape=record, label="  %44 = add i32 %43, %25"];
	Node0xf5fd80[shape=record, label="  %45 = add i32 %44, %27"];
	Node0xf5fdf0[shape=record, label="  %46 = add i32 %45, %29"];
	Node0xf5fe60[shape=record, label="  %47 = add i32 %46, %30"];
	Node0xf5fed0[shape=record, label="  %48 = sub i32 %47, %33"];
	Node0xf5ff40[shape=record, label="  %49 = sub i32 %48, %34"];
	Node0xf5ffb0[shape=record, label="  %50 = add i32 %49, %35"];
	Node0xf60020[shape=record, label="  %51 = add i32 %50, %37"];
	Node0xf60090[shape=record, label="  %52 = sub i32 %51, %32"];
	Node0xf60100[shape=record, label="  %53 = icmp eq i32 %16, %52"];
	Node0xefc8b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf60190[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0xf60438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf60598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf606a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf607b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf60878[shape=record, label="  ret i32 0"];
	Node0xf5cc28 -> Node0xf5cca8;
	Node0xf5cca8 -> Node0xf5cd38;
	Node0xf5cd38 -> Node0xf5cd98;
	Node0xf5cd98 -> Node0xf5ce48;
	Node0xf5ce48 -> Node0xf5d278;
	Node0xf5d278 -> Node0xf5d358;
	Node0xf5d358 -> Node0xf5d458;
	Node0xf5d458 -> Node0xf5d518;
	Node0xf5d518 -> Node0xf5d5c8;
	Node0xf5d5c8 -> Node0xf5d688;
	Node0xf5d688 -> Node0xf5d738;
	Node0xf5d738 -> Node0xf57b50;
	Node0xf57b50 -> Node0xf5d938;
	Node0xf5d938 -> Node0xf5e8a8;
	Node0xf5e8a8 -> Node0xf5ef18;
	Node0xf5ef18 -> Node0xf5ef78;
	Node0xf5ef78 -> Node0xf5eff0;
	Node0xf5eff0 -> Node0xf5f060;
	Node0xf5f060 -> Node0xf5f0d0;
	Node0xf5f0d0 -> Node0xf5f140;
	Node0xf5f140 -> Node0xf5f1b0;
	Node0xf5f1b0 -> Node0xf5f220;
	Node0xf5f220 -> Node0xf5f290;
	Node0xf5f290 -> Node0xf5f300;
	Node0xf5f300 -> Node0xf5f370;
	Node0xf5f370 -> Node0xf5f3e0;
	Node0xf5f3e0 -> Node0xf5f450;
	Node0xf5f450 -> Node0xf5f4c0;
	Node0xf5f4c0 -> Node0xf5f530;
	Node0xf5f530 -> Node0xf5f5a0;
	Node0xf5f5a0 -> Node0xf5f610;
	Node0xf5f610 -> Node0xf5f680;
	Node0xf5f680 -> Node0xf5f6f0;
	Node0xf5f6f0 -> Node0xf5f760;
	Node0xf5f760 -> Node0xf5f7d0;
	Node0xf5f7d0 -> Node0xf5f840;
	Node0xf5f840 -> Node0xf5f8b0;
	Node0xf5f8b0 -> Node0xf5f920;
	Node0xf5f920 -> Node0xf5f990;
	Node0xf5f990 -> Node0xf5fa00;
	Node0xf5fa00 -> Node0xf5fa70;
	Node0xf5fa70 -> Node0xf5fae0;
	Node0xf5fae0 -> Node0xf5fb50;
	Node0xf5fb50 -> Node0xf5fbc0;
	Node0xf5fbc0 -> Node0xf5fc30;
	Node0xf5fc30 -> Node0xf5fca0;
	Node0xf5fca0 -> Node0xf5fd10;
	Node0xf5fd10 -> Node0xf5fd80;
	Node0xf5fd80 -> Node0xf5fdf0;
	Node0xf5fdf0 -> Node0xf5fe60;
	Node0xf5fe60 -> Node0xf5fed0;
	Node0xf5fed0 -> Node0xf5ff40;
	Node0xf5ff40 -> Node0xf5ffb0;
	Node0xf5ffb0 -> Node0xf60020;
	Node0xf60020 -> Node0xf60090;
	Node0xf60090 -> Node0xf60100;
	Node0xf60100 -> Node0xefc8b8;
	Node0xefc8b8 -> Node0xf60190;
	Node0xf60190 -> Node0xf60438;
	Node0xf60438 -> Node0xf60598;
	Node0xf60598 -> Node0xf606a8;
	Node0xf606a8 -> Node0xf607b8;
	Node0xf607b8 -> Node0xf60878;
edge [color=red]
	Node0xf5cc28 -> Node0xf5ce48;
	Node0xf5ce48 -> Node0xf5d278;
	Node0xf5cca8 -> Node0xf5d358;
	Node0xf5d358 -> Node0xf5d458;
	Node0xf5cd38 -> Node0xf5d518;
	Node0xf5d518 -> Node0xf5d5c8;
	Node0xf5cd98 -> Node0xf5d688;
	Node0xf5d688 -> Node0xf5d738;
	Node0xf5cc28 -> Node0xf57b50;
	Node0xf5cca8 -> Node0xf57b50;
	Node0xf5cd38 -> Node0xf57b50;
	Node0xf5cd98 -> Node0xf57b50;
	Node0xf5cc28 -> Node0xf5d938;
	Node0xf5cca8 -> Node0xf5e8a8;
	Node0xf5cd38 -> Node0xf5ef18;
	Node0xf5cd98 -> Node0xf5ef78;
	Node0xf5ef18 -> Node0xf5eff0;
	Node0xf5e8a8 -> Node0xf5eff0;
	Node0xf5eff0 -> Node0xf5f060;
	Node0xf5f060 -> Node0xf5f0d0;
	Node0xf5d938 -> Node0xf5f0d0;
	Node0xf5ef18 -> Node0xf5f140;
	Node0xf5e8a8 -> Node0xf5f1b0;
	Node0xf5f140 -> Node0xf5f1b0;
	Node0xf5e8a8 -> Node0xf5f220;
	Node0xf5f140 -> Node0xf5f220;
	Node0xf5f220 -> Node0xf5f290;
	Node0xf5ef18 -> Node0xf5f300;
	Node0xf5e8a8 -> Node0xf5f300;
	Node0xf5f300 -> Node0xf5f370;
	Node0xf5f1b0 -> Node0xf5f3e0;
	Node0xf5f3e0 -> Node0xf5f450;
	Node0xf5eff0 -> Node0xf5f4c0;
	Node0xf5ef78 -> Node0xf5f530;
	Node0xf5d938 -> Node0xf5f5a0;
	Node0xf5f530 -> Node0xf5f5a0;
	Node0xf5ef78 -> Node0xf5f610;
	Node0xf5d938 -> Node0xf5f610;
	Node0xf5ef78 -> Node0xf5f680;
	Node0xf5d938 -> Node0xf5f680;
	Node0xf5ef78 -> Node0xf5f6f0;
	Node0xf5d938 -> Node0xf5f6f0;
	Node0xf5f6f0 -> Node0xf5f760;
	Node0xf5f760 -> Node0xf5f7d0;
	Node0xf5d938 -> Node0xf5f840;
	Node0xf5f530 -> Node0xf5f840;
	Node0xf5f680 -> Node0xf5f8b0;
	Node0xf5f610 -> Node0xf5f920;
	Node0xf5f220 -> Node0xf5f990;
	Node0xf5f370 -> Node0xf5f990;
	Node0xf5f990 -> Node0xf5fa00;
	Node0xf5d938 -> Node0xf5fa70;
	Node0xf5fa70 -> Node0xf5fae0;
	Node0xf5f140 -> Node0xf5fae0;
	Node0xf5fae0 -> Node0xf5fb50;
	Node0xf5f1b0 -> Node0xf5fb50;
	Node0xf5fb50 -> Node0xf5fbc0;
	Node0xf5f290 -> Node0xf5fbc0;
	Node0xf5fbc0 -> Node0xf5fc30;
	Node0xf5f300 -> Node0xf5fc30;
	Node0xf5fc30 -> Node0xf5fca0;
	Node0xf5f450 -> Node0xf5fca0;
	Node0xf5fca0 -> Node0xf5fd10;
	Node0xf5f4c0 -> Node0xf5fd10;
	Node0xf5fd10 -> Node0xf5fd80;
	Node0xf5f5a0 -> Node0xf5fd80;
	Node0xf5fd80 -> Node0xf5fdf0;
	Node0xf5f680 -> Node0xf5fdf0;
	Node0xf5fdf0 -> Node0xf5fe60;
	Node0xf5f6f0 -> Node0xf5fe60;
	Node0xf5fe60 -> Node0xf5fed0;
	Node0xf5f840 -> Node0xf5fed0;
	Node0xf5fed0 -> Node0xf5ff40;
	Node0xf5f8b0 -> Node0xf5ff40;
	Node0xf5ff40 -> Node0xf5ffb0;
	Node0xf5f920 -> Node0xf5ffb0;
	Node0xf5ffb0 -> Node0xf60020;
	Node0xf5fa00 -> Node0xf60020;
	Node0xf60020 -> Node0xf60090;
	Node0xf5f7d0 -> Node0xf60090;
	Node0xf5f0d0 -> Node0xf60100;
	Node0xf60090 -> Node0xf60100;
	Node0xf60100 -> Node0xefc8b8;
	Node0xefc8b8 -> Node0xf60190;
	Node0xf5d688 -> Node0xf60438;
	Node0xf5d518 -> Node0xf60598;
	Node0xf5d358 -> Node0xf606a8;
	Node0xf5ce48 -> Node0xf607b8;
}
