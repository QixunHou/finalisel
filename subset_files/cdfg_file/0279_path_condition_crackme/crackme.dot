digraph "DFG for'crackme' function" {
	Node0xf5ab20[shape=record, label="  %5 = and i32 %2, %1"];
	Node0xf5b1a0[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0xf5b210[shape=record, label="  %7 = sub i32 %6, %0"];
	Node0xf5b280[shape=record, label="  %8 = xor i32 %2, -1"];
	Node0xf5b2f0[shape=record, label="  %9 = or i32 %8, %1"];
	Node0xf5b360[shape=record, label="  %10 = and i32 %8, %1"];
	Node0xf5b3d0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0xf5b440[shape=record, label="  %12 = or i32 %2, %1"];
	Node0xf5b4b0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xf5b520[shape=record, label="  %14 = xor i32 %9, -1"];
	Node0xf5b5c0[shape=record, label="  %15 = mul i32 %14, -5"];
	Node0xf5b660[shape=record, label="  %16 = mul i32 %5, -7"];
	Node0xf5b6d0[shape=record, label="  %17 = xor i32 %3, -1"];
	Node0xf5b740[shape=record, label="  %18 = or i32 %17, %0"];
	Node0xf5b7b0[shape=record, label="  %19 = xor i32 %3, %0"];
	Node0xf5b820[shape=record, label="  %20 = and i32 %3, %0"];
	Node0xf5b890[shape=record, label="  %21 = or i32 %3, %0"];
	Node0xf5b930[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0xf5b9d0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0xf5ba40[shape=record, label="  %24 = and i32 %17, %0"];
	Node0xf5bae0[shape=record, label="  %25 = shl i32 %20, 2"];
	Node0xf5bb50[shape=record, label="  %26 = mul i32 %19, -2"];
	Node0xf5bbc0[shape=record, label="  %27 = add i32 %10, %13"];
	Node0xf5bc60[shape=record, label="  %28 = mul i32 %27, -6"];
	Node0xf5bcd0[shape=record, label="  %29 = sub i32 -5, %0"];
	Node0xf5bd40[shape=record, label="  %30 = add i32 %29, %8"];
	Node0xf5bdb0[shape=record, label="  %31 = add i32 %30, %9"];
	Node0xf5be20[shape=record, label="  %32 = add i32 %31, %11"];
	Node0xf5c0a0[shape=record, label="  %33 = add i32 %32, %12"];
	Node0xf5c110[shape=record, label="  %34 = add i32 %33, %15"];
	Node0xf5c180[shape=record, label="  %35 = add i32 %34, %16"];
	Node0xf5c1f0[shape=record, label="  %36 = add i32 %35, %18"];
	Node0xf5c260[shape=record, label="  %37 = add i32 %36, %20"];
	Node0xf5c2d0[shape=record, label="  %38 = add i32 %37, %21"];
	Node0xf5c340[shape=record, label="  %39 = sub i32 %38, %24"];
	Node0xf5c3b0[shape=record, label="  %40 = sub i32 %39, %25"];
	Node0xf5c420[shape=record, label="  %41 = add i32 %40, %26"];
	Node0xf5c490[shape=record, label="  %42 = add i32 %41, %28"];
	Node0xf5c500[shape=record, label="  %43 = sub i32 %42, %23"];
	Node0xf5c570[shape=record, label="  %44 = icmp eq i32 %7, %43"];
	Node0xefb268[shape=record, label="  %45 = select i1 %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf5ca10[shape=record, label="  %46 = tail call i32 @puts(i8* nonnull dereferenceable(1) %45)"];
	Node0xf5ca60[shape=record, label="  ret void"];
	Node0xf5ab20 -> Node0xf5b1a0;
	Node0xf5b1a0 -> Node0xf5b210;
	Node0xf5b210 -> Node0xf5b280;
	Node0xf5b280 -> Node0xf5b2f0;
	Node0xf5b2f0 -> Node0xf5b360;
	Node0xf5b360 -> Node0xf5b3d0;
	Node0xf5b3d0 -> Node0xf5b440;
	Node0xf5b440 -> Node0xf5b4b0;
	Node0xf5b4b0 -> Node0xf5b520;
	Node0xf5b520 -> Node0xf5b5c0;
	Node0xf5b5c0 -> Node0xf5b660;
	Node0xf5b660 -> Node0xf5b6d0;
	Node0xf5b6d0 -> Node0xf5b740;
	Node0xf5b740 -> Node0xf5b7b0;
	Node0xf5b7b0 -> Node0xf5b820;
	Node0xf5b820 -> Node0xf5b890;
	Node0xf5b890 -> Node0xf5b930;
	Node0xf5b930 -> Node0xf5b9d0;
	Node0xf5b9d0 -> Node0xf5ba40;
	Node0xf5ba40 -> Node0xf5bae0;
	Node0xf5bae0 -> Node0xf5bb50;
	Node0xf5bb50 -> Node0xf5bbc0;
	Node0xf5bbc0 -> Node0xf5bc60;
	Node0xf5bc60 -> Node0xf5bcd0;
	Node0xf5bcd0 -> Node0xf5bd40;
	Node0xf5bd40 -> Node0xf5bdb0;
	Node0xf5bdb0 -> Node0xf5be20;
	Node0xf5be20 -> Node0xf5c0a0;
	Node0xf5c0a0 -> Node0xf5c110;
	Node0xf5c110 -> Node0xf5c180;
	Node0xf5c180 -> Node0xf5c1f0;
	Node0xf5c1f0 -> Node0xf5c260;
	Node0xf5c260 -> Node0xf5c2d0;
	Node0xf5c2d0 -> Node0xf5c340;
	Node0xf5c340 -> Node0xf5c3b0;
	Node0xf5c3b0 -> Node0xf5c420;
	Node0xf5c420 -> Node0xf5c490;
	Node0xf5c490 -> Node0xf5c500;
	Node0xf5c500 -> Node0xf5c570;
	Node0xf5c570 -> Node0xefb268;
	Node0xefb268 -> Node0xf5ca10;
	Node0xf5ca10 -> Node0xf5ca60;
edge [color=red]
	Node0xf5ab20 -> Node0xf5b1a0;
	Node0xf5b1a0 -> Node0xf5b210;
	Node0xf5b280 -> Node0xf5b2f0;
	Node0xf5b280 -> Node0xf5b360;
	Node0xf5b360 -> Node0xf5b3d0;
	Node0xf5b440 -> Node0xf5b4b0;
	Node0xf5b2f0 -> Node0xf5b520;
	Node0xf5b520 -> Node0xf5b5c0;
	Node0xf5ab20 -> Node0xf5b660;
	Node0xf5b6d0 -> Node0xf5b740;
	Node0xf5b890 -> Node0xf5b930;
	Node0xf5b930 -> Node0xf5b9d0;
	Node0xf5b6d0 -> Node0xf5ba40;
	Node0xf5b820 -> Node0xf5bae0;
	Node0xf5b7b0 -> Node0xf5bb50;
	Node0xf5b360 -> Node0xf5bbc0;
	Node0xf5b4b0 -> Node0xf5bbc0;
	Node0xf5bbc0 -> Node0xf5bc60;
	Node0xf5bcd0 -> Node0xf5bd40;
	Node0xf5b280 -> Node0xf5bd40;
	Node0xf5bd40 -> Node0xf5bdb0;
	Node0xf5b2f0 -> Node0xf5bdb0;
	Node0xf5bdb0 -> Node0xf5be20;
	Node0xf5b3d0 -> Node0xf5be20;
	Node0xf5be20 -> Node0xf5c0a0;
	Node0xf5b440 -> Node0xf5c0a0;
	Node0xf5c0a0 -> Node0xf5c110;
	Node0xf5b5c0 -> Node0xf5c110;
	Node0xf5c110 -> Node0xf5c180;
	Node0xf5b660 -> Node0xf5c180;
	Node0xf5c180 -> Node0xf5c1f0;
	Node0xf5b740 -> Node0xf5c1f0;
	Node0xf5c1f0 -> Node0xf5c260;
	Node0xf5b820 -> Node0xf5c260;
	Node0xf5c260 -> Node0xf5c2d0;
	Node0xf5b890 -> Node0xf5c2d0;
	Node0xf5c2d0 -> Node0xf5c340;
	Node0xf5ba40 -> Node0xf5c340;
	Node0xf5c340 -> Node0xf5c3b0;
	Node0xf5bae0 -> Node0xf5c3b0;
	Node0xf5c3b0 -> Node0xf5c420;
	Node0xf5bb50 -> Node0xf5c420;
	Node0xf5c420 -> Node0xf5c490;
	Node0xf5bc60 -> Node0xf5c490;
	Node0xf5c490 -> Node0xf5c500;
	Node0xf5b9d0 -> Node0xf5c500;
	Node0xf5b210 -> Node0xf5c570;
	Node0xf5c500 -> Node0xf5c570;
	Node0xf5c570 -> Node0xefb268;
	Node0xefb268 -> Node0xf5ca10;
}
