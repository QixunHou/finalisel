; ModuleID = '../.././c_source_file/0756_path_condition_crackme.c'
source_filename = "../.././c_source_file/0756_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = xor i32 %4, -1
  %7 = and i32 %6, %3
  %8 = and i32 %4, %3
  %9 = shl i32 %8, 1
  %10 = xor i32 %9, -2
  %11 = xor i32 %2, %1
  %12 = or i32 %11, %0
  %13 = shl i32 %12, 1
  %14 = or i32 %1, %0
  %15 = xor i32 %14, -1
  %16 = add i32 %14, 2
  %17 = add i32 %16, %7
  %18 = sub i32 %17, %13
  %19 = add i32 %18, %10
  %20 = or i32 %4, %3
  %21 = xor i32 %3, 2147483647
  %22 = and i32 %21, %4
  %23 = shl i32 %22, 1
  %24 = shl i32 %7, 1
  %25 = mul i32 %8, -6
  %26 = xor i32 %1, -1
  %27 = or i32 %26, %0
  %28 = xor i32 %27, -1
  %29 = xor i32 %2, %0
  %30 = or i32 %29, %28
  %31 = xor i32 %11, -1
  %32 = and i32 %27, %31
  %33 = and i32 %26, %2
  %34 = and i32 %33, %0
  %35 = xor i32 %0, -1
  %36 = or i32 %26, %2
  %37 = and i32 %36, %35
  %38 = or i32 %34, %37
  %39 = shl i32 %38, 1
  %40 = or i32 %2, %0
  %41 = xor i32 %40, -1
  %42 = xor i32 %41, %1
  %43 = and i32 %2, %1
  %44 = xor i32 %43, -1
  %45 = and i32 %44, %0
  %46 = and i32 %2, %0
  %47 = xor i32 %46, -1
  %48 = xor i32 %1, %0
  %49 = xor i32 %48, -1
  %50 = and i32 %47, %49
  %51 = shl i32 %50, 1
  %52 = and i32 %26, %0
  %53 = xor i32 %2, -1
  %54 = and i32 %53, %1
  %55 = xor i32 %54, -1
  %56 = xor i32 %52, %55
  %57 = or i32 %53, %1
  %58 = xor i32 %57, -1
  %59 = or i32 %58, %0
  %60 = shl i32 %59, 1
  %61 = and i32 %43, %0
  %62 = or i32 %2, %1
  %63 = xor i32 %62, %0
  %64 = or i32 %61, %63
  %65 = xor i32 %46, %62
  %66 = add i32 %48, 1
  %67 = or i32 %41, %1
  %68 = xor i32 %58, %0
  %69 = or i32 %52, %53
  %70 = or i32 %31, %35
  %71 = and i32 %47, %26
  %72 = and i32 %53, %0
  %73 = xor i32 %72, -1
  %74 = and i32 %73, %49
  %75 = and i32 %55, %0
  %76 = shl i32 %75, 1
  %77 = xor i32 %52, -1
  %78 = and i32 %29, %77
  %79 = and i32 %40, %1
  %80 = xor i32 %72, %1
  %81 = xor i32 %54, %0
  %82 = shl i32 %81, 1
  %83 = xor i32 %73, %1
  %84 = xor i32 %29, -1
  %85 = or i32 %52, %84
  %86 = shl i32 %85, 1
  %87 = and i32 %57, %35
  %88 = or i32 %49, %2
  %89 = xor i32 %37, 2147483647
  %90 = xor i32 %89, %34
  %91 = and i32 %27, %2
  %92 = and i32 %62, %0
  %93 = or i32 %41, %26
  %94 = and i32 %1, %0
  %95 = xor i32 %94, -1
  %96 = and i32 %84, %95
  %97 = or i32 %57, %0
  %98 = or i32 %62, %35
  %99 = or i32 %72, %1
  %100 = xor i32 %46, %14
  %101 = or i32 %53, %0
  %102 = xor i32 %101, -1
  %103 = or i32 %29, %52
  %104 = shl i32 %103, 1
  %105 = or i32 %43, %52
  %106 = or i32 %55, %0
  %107 = or i32 %46, %28
  %108 = and i32 %11, %77
  %109 = or i32 %84, %15
  %110 = or i32 %48, %102
  %111 = xor i32 %61, -1
  %112 = xor i32 %63, %111
  %113 = and i32 %53, %49
  %114 = xor i32 %52, %44
  %115 = or i32 %46, %26
  %116 = xor i32 %46, %55
  %117 = and i32 %27, %84
  %118 = and i32 %29, %48
  %119 = and i32 %33, %35
  %120 = and i32 %36, %0
  %121 = xor i32 %120, -1
  %122 = xor i32 %119, %121
  %123 = or i32 %102, %26
  %124 = or i32 %94, %2
  %125 = add i32 %0, 1
  %126 = and i32 %77, %2
  %127 = or i32 %46, %49
  %128 = xor i32 %72, %57
  %129 = or i32 %94, %58
  %130 = or i32 %46, %1
  %131 = and i32 %11, %35
  %132 = or i32 %61, %131
  %133 = shl i32 %132, 1
  %134 = and i32 %84, %77
  %135 = xor i32 %57, %0
  %136 = or i32 %11, %35
  %137 = xor i32 %119, %136
  %138 = xor i32 %31, %0
  %139 = or i32 %55, %35
  %140 = or i32 %11, %52
  %141 = and i32 %84, %49
  %142 = xor i32 %11, %0
  %143 = xor i32 %61, %142
  %144 = or i32 %58, %35
  %145 = shl i32 %144, 1
  %146 = or i32 %34, %142
  %147 = xor i32 %52, %2
  %148 = add i32 %29, 1
  %149 = xor i32 %15, %2
  %150 = and i32 %84, %1
  %151 = and i32 %62, %35
  %152 = or i32 %61, %151
  %153 = shl i32 %152, 2
  %154 = xor i32 %142, -1
  %155 = or i32 %61, %154
  %156 = or i32 %29, %1
  %157 = xor i32 %55, %0
  %158 = shl i32 %157, 1
  %159 = and i32 %29, %95
  %160 = or i32 %62, %0
  %161 = and i32 %84, %26
  %162 = and i32 %40, %26
  %163 = add i32 %40, 1
  %164 = and i32 %48, %84
  %165 = and i32 %48, %47
  %166 = or i32 %72, %58
  %167 = and i32 %43, %35
  %168 = and i32 %11, %0
  %169 = xor i32 %167, -1
  %170 = xor i32 %168, %169
  %171 = xor i32 %62, %94
  %172 = and i32 %101, %26
  %173 = xor i32 %43, %0
  %174 = or i32 %29, %15
  %175 = or i32 %84, %49
  %176 = and i32 %31, %35
  %177 = or i32 %52, %2
  %178 = or i32 %72, %43
  %179 = xor i32 %46, %1
  %180 = or i32 %84, %1
  %181 = shl i32 %29, 1
  %182 = or i32 %94, %84
  %183 = or i32 %31, %0
  %184 = or i32 %54, %0
  %185 = xor i32 %131, 2147483647
  %186 = xor i32 %185, %61
  %187 = shl i32 %186, 1
  %188 = and i32 %29, %1
  %189 = and i32 %48, %2
  %190 = and i32 %55, %35
  %191 = or i32 %43, %35
  %192 = xor i32 %94, %2
  %193 = xor i32 %36, %0
  %194 = xor i32 %193, -1
  %195 = xor i32 %34, %194
  %196 = xor i32 %14, %2
  %197 = shl i32 %196, 1
  %198 = and i32 %14, %2
  %199 = or i32 %53, %28
  %200 = xor i32 %92, %169
  %201 = add i32 %54, 1
  %202 = or i32 %46, %54
  %203 = or i32 %84, %26
  %204 = xor i32 %44, %0
  %205 = shl i32 %204, 1
  %206 = or i32 %72, %48
  %207 = and i32 %73, %1
  %208 = and i32 %44, %35
  %209 = and i32 %47, %1
  %210 = or i32 %72, %49
  %211 = or i32 %29, %48
  %212 = or i32 %94, %41
  %213 = shl i32 %77, 1
  %214 = or i32 %48, %84
  %215 = and i32 %48, %53
  %216 = or i32 %94, %31
  %217 = and i32 %31, %0
  %218 = and i32 %31, %95
  %219 = or i32 %57, %35
  %220 = or i32 %53, %49
  %221 = or i32 %167, %168
  %222 = and i32 %49, %2
  %223 = shl i32 %222, 1
  %224 = or i32 %54, %35
  %225 = and i32 %14, %31
  %226 = xor i32 %62, -1
  %227 = or i32 %46, %226
  %228 = shl i32 %101, 1
  %229 = and i32 %11, %14
  %230 = or i32 %15, %2
  %231 = or i32 %46, %15
  %232 = xor i32 %102, %1
  %233 = or i32 %11, %94
  %234 = or i32 %226, %35
  %235 = and i32 %31, %77
  %236 = and i32 %11, %27
  %237 = or i32 %28, %2
  %238 = or i32 %41, %49
  %239 = xor i32 %34, %154
  %240 = and i32 %101, %1
  %241 = or i32 %29, %26
  %242 = xor i32 %57, %94
  %243 = and i32 %27, %53
  %244 = and i32 %29, %14
  %245 = and i32 %53, %77
  %246 = or i32 %44, %0
  %247 = or i32 %48, %2
  %248 = xor i32 %40, %1
  %249 = or i32 %29, %94
  %250 = or i32 %31, %15
  %251 = add i32 %46, 1
  %252 = or i32 %44, %35
  %253 = xor i32 %95, %2
  %254 = xor i32 %101, %94
  %255 = or i32 %84, %28
  %256 = xor i32 %151, %111
  %257 = xor i32 %40, %94
  %258 = or i32 %11, %15
  %259 = xor i32 %72, %44
  %260 = and i32 %40, %48
  %261 = and i32 %48, %73
  %262 = xor i32 %12, -1
  %263 = or i32 %34, %262
  %264 = or i32 %48, %41
  %265 = add i32 %62, 1
  %266 = or i32 %53, %15
  %267 = shl i32 %43, 1
  %268 = and i32 %14, %84
  %269 = or i32 %94, %102
  %270 = and i32 %101, %49
  %271 = and i32 %14, %53
  %272 = and i32 %53, %95
  %273 = and i32 %57, %0
  %274 = or i32 %11, %28
  %275 = xor i32 %77, %2
  %276 = shl i32 %275, 1
  %277 = or i32 %31, %28
  %278 = or i32 %102, %1
  %279 = xor i32 %34, %12
  %280 = and i32 %29, %27
  %281 = or i32 %54, %52
  %282 = or i32 %52, %31
  %283 = or i32 %34, %193
  %284 = or i32 %29, %49
  %285 = add i32 %27, 1
  %286 = or i32 %72, %26
  %287 = shl i32 %286, 1
  %288 = xor i32 %226, %0
  %289 = or i32 %226, %0
  %290 = and i32 %226, %35
  %291 = shl i32 %290, 3
  %292 = and i32 %54, %35
  %293 = and i32 %226, %0
  %294 = mul i32 %293, -43
  %295 = and i32 %54, %0
  %296 = mul i32 %295, -39
  %297 = and i32 %58, %35
  %298 = shl i32 %297, 2
  %299 = and i32 %58, %0
  %300 = mul i32 %299, -31
  %301 = mul i32 %61, -9
  %302 = add i32 %54, %272
  %303 = sub i32 %40, %2
  %304 = add i32 %303, %247
  %305 = add i32 %304, %68
  %306 = add i32 %305, %206
  %307 = sub i32 %306, %67
  %308 = mul i32 %307, 5
  %309 = add i32 %167, %292
  %310 = mul i32 %309, -13
  %311 = add i32 %261, %147
  %312 = shl i32 %311, 2
  %313 = add i32 %302, %3
  %314 = add i32 %313, %284
  %315 = add i32 %314, %268
  %316 = add i32 %315, %255
  %317 = add i32 %316, %246
  %318 = add i32 %317, %244
  %319 = add i32 %318, %240
  %320 = add i32 %319, %238
  %321 = add i32 %320, %236
  %322 = add i32 %321, %168
  %323 = add i32 %322, %172
  %324 = add i32 %323, %140
  %325 = add i32 %324, %115
  %326 = add i32 %325, %100
  %327 = add i32 %326, %97
  %328 = add i32 %327, %93
  %329 = add i32 %328, %32
  %330 = add i32 %329, %4
  %331 = add i32 %330, %239
  %332 = add i32 %331, %155
  %333 = add i32 %332, %90
  %334 = shl i32 %333, 1
  %335 = mul i32 %258, 3
  %336 = add i32 %335, -3
  %337 = add i32 %125, %0
  %338 = sub i32 %337, %1
  %339 = add i32 %338, %26
  %340 = add i32 %339, %66
  %341 = add i32 %340, %27
  %342 = sub i32 %341, %52
  %343 = sub i32 %342, %14
  %344 = add i32 %343, %53
  %345 = add i32 %344, %285
  %346 = sub i32 %345, %69
  %347 = add i32 %346, %88
  %348 = add i32 %347, %91
  %349 = add i32 %348, %102
  %350 = add i32 %349, %113
  %351 = sub i32 %350, %124
  %352 = sub i32 %351, %126
  %353 = add i32 %352, %46
  %354 = add i32 %353, %148
  %355 = add i32 %354, %149
  %356 = sub i32 %355, %57
  %357 = add i32 %356, %163
  %358 = add i32 %357, %177
  %359 = add i32 %358, %72
  %360 = sub i32 %359, %189
  %361 = add i32 %360, %192
  %362 = sub i32 %361, %198
  %363 = add i32 %362, %199
  %364 = add i32 %363, %201
  %365 = sub i32 %364, %213
  %366 = sub i32 %365, %215
  %367 = sub i32 %366, %220
  %368 = add i32 %367, %230
  %369 = add i32 %368, %44
  %370 = sub i32 %369, %237
  %371 = add i32 %370, %243
  %372 = sub i32 %371, %245
  %373 = add i32 %372, %251
  %374 = add i32 %373, %253
  %375 = add i32 %374, %265
  %376 = sub i32 %375, %266
  %377 = sub i32 %376, %62
  %378 = sub i32 %377, %271
  %379 = add i32 %378, %6
  %380 = add i32 %379, %30
  %381 = add i32 %380, %42
  %382 = add i32 %381, %45
  %383 = sub i32 %382, %56
  %384 = sub i32 %383, %65
  %385 = add i32 %384, %70
  %386 = add i32 %385, %71
  %387 = sub i32 %386, %74
  %388 = add i32 %387, %78
  %389 = sub i32 %388, %79
  %390 = sub i32 %389, %80
  %391 = sub i32 %390, %83
  %392 = add i32 %391, %87
  %393 = sub i32 %392, %92
  %394 = add i32 %393, %96
  %395 = sub i32 %394, %98
  %396 = sub i32 %395, %99
  %397 = sub i32 %396, %105
  %398 = add i32 %397, %106
  %399 = add i32 %398, %107
  %400 = sub i32 %399, %108
  %401 = sub i32 %400, %109
  %402 = add i32 %401, %110
  %403 = sub i32 %402, %114
  %404 = sub i32 %403, %116
  %405 = sub i32 %404, %117
  %406 = add i32 %405, %118
  %407 = sub i32 %406, %123
  %408 = add i32 %407, %127
  %409 = sub i32 %408, %128
  %410 = sub i32 %409, %129
  %411 = add i32 %410, %130
  %412 = sub i32 %411, %134
  %413 = add i32 %412, %135
  %414 = sub i32 %413, %138
  %415 = add i32 %414, %139
  %416 = add i32 %415, %141
  %417 = sub i32 %416, %150
  %418 = sub i32 %417, %156
  %419 = add i32 %418, %159
  %420 = add i32 %419, %160
  %421 = sub i32 %420, %161
  %422 = sub i32 %421, %162
  %423 = sub i32 %422, %164
  %424 = add i32 %423, %165
  %425 = sub i32 %424, %166
  %426 = sub i32 %425, %171
  %427 = add i32 %426, %173
  %428 = add i32 %427, %174
  %429 = add i32 %428, %175
  %430 = add i32 %429, %176
  %431 = add i32 %430, %151
  %432 = add i32 %431, %136
  %433 = add i32 %432, %178
  %434 = add i32 %433, %179
  %435 = add i32 %434, %180
  %436 = sub i32 %435, %181
  %437 = add i32 %436, %182
  %438 = add i32 %437, %183
  %439 = sub i32 %438, %184
  %440 = sub i32 %439, %188
  %441 = add i32 %440, %190
  %442 = sub i32 %441, %191
  %443 = sub i32 %442, %197
  %444 = add i32 %443, %202
  %445 = add i32 %444, %203
  %446 = sub i32 %445, %207
  %447 = sub i32 %446, %208
  %448 = add i32 %447, %209
  %449 = sub i32 %448, %210
  %450 = sub i32 %449, %211
  %451 = sub i32 %450, %212
  %452 = sub i32 %451, %214
  %453 = add i32 %452, %216
  %454 = sub i32 %453, %217
  %455 = sub i32 %454, %218
  %456 = sub i32 %455, %219
  %457 = sub i32 %456, %223
  %458 = add i32 %457, %224
  %459 = sub i32 %458, %225
  %460 = add i32 %459, %227
  %461 = sub i32 %460, %228
  %462 = add i32 %461, %229
  %463 = add i32 %462, %231
  %464 = add i32 %463, %232
  %465 = sub i32 %464, %233
  %466 = sub i32 %465, %234
  %467 = sub i32 %466, %235
  %468 = add i32 %467, %241
  %469 = add i32 %468, %242
  %470 = sub i32 %469, %142
  %471 = sub i32 %470, %248
  %472 = add i32 %471, %249
  %473 = sub i32 %472, %250
  %474 = add i32 %473, %252
  %475 = add i32 %474, %254
  %476 = sub i32 %475, %257
  %477 = sub i32 %476, %259
  %478 = add i32 %477, %260
  %479 = add i32 %478, %264
  %480 = sub i32 %479, %267
  %481 = add i32 %480, %269
  %482 = add i32 %481, %270
  %483 = add i32 %482, %273
  %484 = sub i32 %483, %274
  %485 = sub i32 %484, %276
  %486 = sub i32 %485, %277
  %487 = add i32 %486, %278
  %488 = add i32 %487, %280
  %489 = add i32 %488, %281
  %490 = sub i32 %489, %282
  %491 = sub i32 %490, %63
  %492 = add i32 %491, %288
  %493 = add i32 %492, %289
  %494 = sub i32 %493, %131
  %495 = add i32 %494, %20
  %496 = sub i32 %495, %51
  %497 = sub i32 %496, %60
  %498 = add i32 %497, %64
  %499 = sub i32 %498, %76
  %500 = sub i32 %499, %82
  %501 = sub i32 %500, %86
  %502 = sub i32 %501, %104
  %503 = sub i32 %502, %112
  %504 = add i32 %503, %122
  %505 = add i32 %504, %137
  %506 = add i32 %505, %143
  %507 = sub i32 %506, %145
  %508 = add i32 %507, %146
  %509 = sub i32 %508, %158
  %510 = sub i32 %509, %170
  %511 = add i32 %510, %195
  %512 = add i32 %511, %200
  %513 = sub i32 %512, %205
  %514 = add i32 %513, %221
  %515 = add i32 %514, %256
  %516 = sub i32 %515, %263
  %517 = add i32 %516, %279
  %518 = sub i32 %517, %283
  %519 = sub i32 %518, %287
  %520 = sub i32 %519, %291
  %521 = add i32 %520, %294
  %522 = add i32 %521, %296
  %523 = sub i32 %522, %298
  %524 = add i32 %523, %300
  %525 = add i32 %524, %301
  %526 = sub i32 %525, %23
  %527 = sub i32 %526, %24
  %528 = add i32 %527, %25
  %529 = sub i32 %528, %39
  %530 = sub i32 %529, %133
  %531 = sub i32 %530, %153
  %532 = add i32 %531, %310
  %533 = add i32 %532, %312
  %534 = add i32 %533, %336
  %535 = sub i32 %534, %187
  %536 = add i32 %535, %308
  %537 = add i32 %536, %334
  %538 = icmp eq i32 %19, %537
  %539 = select i1 %538, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %540 = tail call i32 @puts(i8* nonnull dereferenceable(1) %539)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
