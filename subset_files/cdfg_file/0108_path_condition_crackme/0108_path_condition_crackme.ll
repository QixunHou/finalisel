; ModuleID = '../.././c_source_file/0108_path_condition_crackme.c'
source_filename = "../.././c_source_file/0108_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %1, %0
  %8 = xor i32 %2, %1
  %9 = xor i32 %8, -1
  %10 = or i32 %7, %9
  %11 = xor i32 %0, -1
  %12 = or i32 %9, %11
  %13 = sub i32 %10, %12
  %14 = and i32 %5, %4
  %15 = or i32 %4, %3
  %16 = xor i32 %14, %15
  %17 = shl i32 %16, 1
  %18 = add i32 %13, %17
  %19 = xor i32 %1, -1
  %20 = xor i32 %2, %0
  %21 = xor i32 %20, -1
  %22 = or i32 %21, %19
  %23 = and i32 %19, %0
  %24 = or i32 %20, %23
  %25 = shl i32 %24, 1
  %26 = and i32 %19, %2
  %27 = and i32 %26, %0
  %28 = or i32 %8, %0
  %29 = xor i32 %27, %28
  %30 = xor i32 %7, -1
  %31 = and i32 %30, %2
  %32 = or i32 %19, %2
  %33 = xor i32 %32, %0
  %34 = xor i32 %27, -1
  %35 = xor i32 %33, %34
  %36 = xor i32 %2, -1
  %37 = or i32 %36, %1
  %38 = and i32 %2, %0
  %39 = or i32 %38, %19
  %40 = or i32 %23, %2
  %41 = and i32 %2, %1
  %42 = and i32 %41, %0
  %43 = or i32 %2, %1
  %44 = and i32 %43, %11
  %45 = xor i32 %42, -1
  %46 = xor i32 %44, %45
  %47 = and i32 %36, %0
  %48 = xor i32 %1, %0
  %49 = xor i32 %48, -1
  %50 = or i32 %36, %0
  %51 = and i32 %50, %19
  %52 = xor i32 %8, %0
  %53 = or i32 %27, %52
  %54 = or i32 %2, %0
  %55 = xor i32 %54, -1
  %56 = or i32 %55, %49
  %57 = and i32 %50, %49
  %58 = and i32 %41, %11
  %59 = and i32 %43, %0
  %60 = xor i32 %58, -1
  %61 = xor i32 %59, %60
  %62 = or i32 %47, %19
  %63 = xor i32 %38, -1
  %64 = and i32 %63, %49
  %65 = and i32 %36, %1
  %66 = xor i32 %65, -1
  %67 = and i32 %66, %0
  %68 = or i32 %8, %11
  %69 = or i32 %19, %0
  %70 = xor i32 %69, -1
  %71 = add i32 %69, 1
  %72 = and i32 %26, %11
  %73 = and i32 %32, %0
  %74 = or i32 %72, %73
  %75 = xor i32 %23, %66
  %76 = and i32 %54, %48
  %77 = and i32 %36, %30
  %78 = or i32 %48, %55
  %79 = xor i32 %47, -1
  %80 = and i32 %79, %49
  %81 = and i32 %50, %1
  %82 = or i32 %1, %0
  %83 = xor i32 %82, -1
  %84 = or i32 %83, %2
  %85 = xor i32 %23, -1
  %86 = and i32 %85, %2
  %87 = xor i32 %7, %2
  %88 = xor i32 %38, %69
  %89 = or i32 %36, %70
  %90 = xor i32 %38, %66
  %91 = or i32 %38, %1
  %92 = xor i32 %42, %52
  %93 = shl i32 %92, 1
  %94 = or i32 %43, %0
  %95 = or i32 %55, %19
  %96 = and i32 %21, %1
  %97 = xor i32 %70, %2
  %98 = or i32 %65, %23
  %99 = or i32 %49, %2
  %100 = shl i32 %99, 1
  %101 = and i32 %9, %30
  %102 = xor i32 %38, %82
  %103 = xor i32 %23, %2
  %104 = or i32 %7, %55
  %105 = and i32 %32, %11
  %106 = xor i32 %105, %34
  %107 = xor i32 %38, %43
  %108 = xor i32 %41, -1
  %109 = and i32 %108, %11
  %110 = and i32 %82, %9
  %111 = and i32 %49, %2
  %112 = xor i32 %68, -1
  %113 = or i32 %72, %112
  %114 = and i32 %36, %85
  %115 = and i32 %20, %48
  %116 = and i32 %48, %36
  %117 = and i32 %54, %1
  %118 = xor i32 %43, %7
  %119 = or i32 %9, %0
  %120 = or i32 %9, %70
  %121 = or i32 %65, %11
  %122 = or i32 %48, %36
  %123 = xor i32 %50, -1
  %124 = xor i32 %55, %1
  %125 = shl i32 %82, 1
  %126 = and i32 %69, %21
  %127 = xor i32 %43, -1
  %128 = or i32 %127, %0
  %129 = xor i32 %54, %7
  %130 = or i32 %47, %49
  %131 = xor i32 %50, %7
  %132 = and i32 %79, %1
  %133 = and i32 %9, %0
  %134 = xor i32 %52, -1
  %135 = or i32 %42, %134
  %136 = or i32 %108, %11
  %137 = or i32 %38, %65
  %138 = and i32 %9, %85
  %139 = or i32 %8, %70
  %140 = or i32 %123, %1
  %141 = and i32 %48, %2
  %142 = shl i32 %141, 1
  %143 = xor i32 %23, %108
  %144 = and i32 %20, %1
  %145 = or i32 %21, %70
  %146 = or i32 %47, %1
  %147 = shl i32 %146, 1
  %148 = add i32 %8, 1
  %149 = and i32 %21, %30
  %150 = or i32 %9, %83
  %151 = or i32 %41, %0
  %152 = shl i32 %151, 1
  %153 = or i32 %47, %48
  %154 = and i32 %63, %19
  %155 = or i32 %38, %48
  %156 = and i32 %8, %82
  %157 = xor i32 %73, -1
  %158 = xor i32 %72, %157
  %159 = xor i32 %79, %1
  %160 = or i32 %20, %19
  %161 = or i32 %21, %49
  %162 = or i32 %36, %49
  %163 = and i32 %20, %30
  %164 = or i32 %20, %83
  %165 = or i32 %8, %83
  %166 = xor i32 %47, %108
  %167 = and i32 %54, %19
  %168 = or i32 %7, %2
  %169 = xor i32 %37, %7
  %170 = xor i32 %37, -1
  %171 = or i32 %7, %170
  %172 = xor i32 %123, %1
  %173 = xor i32 %43, %0
  %174 = xor i32 %173, %45
  %175 = and i32 %8, %85
  %176 = xor i32 %9, %0
  %177 = and i32 %8, %0
  %178 = and i32 %37, %0
  %179 = xor i32 %54, %1
  %180 = or i32 %108, %0
  %181 = or i32 %20, %49
  %182 = xor i32 %28, 2147483647
  %183 = or i32 %182, %27
  %184 = shl i32 %183, 1
  %185 = xor i32 %63, %1
  %186 = and i32 %69, %2
  %187 = and i32 %50, %48
  %188 = xor i32 %37, %0
  %189 = or i32 %20, %70
  %190 = xor i32 %108, %0
  %191 = or i32 %38, %70
  %192 = and i32 %8, %11
  %193 = or i32 %7, %36
  %194 = and i32 %36, %49
  %195 = and i32 %20, %82
  %196 = or i32 %8, %7
  %197 = or i32 %8, %23
  %198 = or i32 %170, %0
  %199 = shl i32 %198, 1
  %200 = and i32 %20, %69
  %201 = xor i32 %41, %0
  %202 = add i32 %7, 1
  %203 = and i32 %108, %0
  %204 = xor i32 %72, %68
  %205 = shl i32 %204, 1
  %206 = or i32 %43, %11
  %207 = or i32 %7, %127
  %208 = shl i32 %207, 2
  %209 = xor i32 %66, %0
  %210 = shl i32 %209, 1
  %211 = and i32 %20, %85
  %212 = or i32 %66, %0
  %213 = xor i32 %170, %0
  %214 = xor i32 %30, %2
  %215 = or i32 %41, %23
  %216 = or i32 %48, %123
  %217 = shl i32 %216, 2
  %218 = and i32 %9, %11
  %219 = or i32 %47, %170
  %220 = shl i32 %219, 2
  %221 = or i32 %7, %123
  %222 = shl i32 %221, 1
  %223 = xor i32 %65, %0
  %224 = xor i32 %127, %0
  %225 = or i32 %47, %41
  %226 = shl i32 %225, 1
  %227 = and i32 %8, %69
  %228 = or i32 %36, %83
  %229 = and i32 %48, %79
  %230 = xor i32 %85, %2
  %231 = or i32 %41, %11
  %232 = or i32 %123, %49
  %233 = or i32 %23, %9
  %234 = or i32 %23, %21
  %235 = or i32 %37, %0
  %236 = or i32 %42, %173
  %237 = or i32 %66, %11
  %238 = or i32 %42, %44
  %239 = or i32 %38, %127
  %240 = or i32 %38, %83
  %241 = shl i32 %240, 1
  %242 = or i32 %42, %192
  %243 = or i32 %170, %11
  %244 = shl i32 %44, 1
  %245 = and i32 %21, %49
  %246 = or i32 %7, %21
  %247 = or i32 %48, %2
  %248 = and i32 %48, %63
  %249 = and i32 %8, %30
  %250 = and i32 %21, %85
  %251 = and i32 %37, %11
  %252 = and i32 %20, %19
  %253 = xor i32 %69, %2
  %254 = or i32 %70, %2
  %255 = shl i32 %254, 1
  %256 = and i32 %21, %19
  %257 = or i32 %27, %105
  %258 = xor i32 %38, %1
  %259 = xor i32 %177, %60
  %260 = or i32 %23, %36
  %261 = xor i32 %47, %37
  %262 = and i32 %82, %21
  %263 = add i32 %54, 1
  %264 = or i32 %20, %1
  %265 = or i32 %21, %1
  %266 = shl i32 %265, 1
  %267 = or i32 %37, %11
  %268 = shl i32 %267, 1
  %269 = xor i32 %192, %45
  %270 = or i32 %21, %83
  %271 = or i32 %20, %7
  %272 = and i32 %48, %21
  %273 = xor i32 %82, %2
  %274 = shl i32 %66, 1
  %275 = and i32 %82, %2
  %276 = or i32 %123, %19
  %277 = shl i32 %276, 1
  %278 = and i32 %63, %1
  %279 = or i32 %65, %0
  %280 = and i32 %54, %49
  %281 = or i32 %58, %59
  %282 = and i32 %69, %36
  %283 = and i32 %79, %19
  %284 = xor i32 %47, %1
  %285 = or i32 %58, %177
  %286 = and i32 %82, %36
  %287 = or i32 %48, %21
  %288 = or i32 %38, %49
  %289 = xor i32 %27, %134
  %290 = and i32 %66, %11
  %291 = and i32 %69, %9
  %292 = xor i32 %50, %1
  %293 = or i32 %127, %11
  %294 = xor i32 %83, %2
  %295 = and i32 %20, %49
  %296 = or i32 %55, %1
  %297 = add i32 %1, 1
  %298 = or i32 %27, %33
  %299 = and i32 %127, %11
  %300 = mul i32 %299, -30
  %301 = and i32 %65, %11
  %302 = mul i32 %301, -10
  %303 = and i32 %127, %0
  %304 = mul i32 %303, -11
  %305 = and i32 %65, %0
  %306 = mul i32 %305, -22
  %307 = and i32 %170, %11
  %308 = mul i32 %307, -25
  %309 = and i32 %170, %0
  %310 = xor i32 %4, -1
  %311 = xor i32 %5, -1
  %312 = and i32 %311, %3
  %313 = xor i32 %312, -1
  %314 = or i32 %313, %310
  %315 = or i32 %311, %4
  %316 = xor i32 %315, -1
  %317 = xor i32 %316, %3
  %318 = xor i32 %5, %3
  %319 = xor i32 %318, -1
  %320 = and i32 %319, %310
  %321 = and i32 %4, %3
  %322 = xor i32 %5, %4
  %323 = or i32 %322, %321
  %324 = xor i32 %3, -1
  %325 = or i32 %324, %4
  %326 = and i32 %322, %325
  %327 = or i32 %5, %4
  %328 = xor i32 %4, %3
  %329 = xor i32 %328, -1
  %330 = or i32 %311, %329
  %331 = or i32 %5, %3
  %332 = xor i32 %14, %331
  %333 = xor i32 %315, %321
  %334 = and i32 %324, %4
  %335 = xor i32 %334, -1
  %336 = and i32 %335, %5
  %337 = xor i32 %325, -1
  %338 = and i32 %324, %5
  %339 = and i32 %338, %4
  %340 = or i32 %324, %5
  %341 = and i32 %340, %310
  %342 = xor i32 %341, 2147483647
  %343 = xor i32 %342, %339
  %344 = shl i32 %343, 1
  %345 = and i32 %5, %3
  %346 = xor i32 %345, -1
  %347 = xor i32 %334, %346
  %348 = and i32 %345, %4
  %349 = xor i32 %331, %4
  %350 = xor i32 %348, -1
  %351 = xor i32 %349, %350
  %352 = or i32 %311, %3
  %353 = xor i32 %352, %321
  %354 = and i32 %322, %329
  %355 = shl i32 %354, 1
  %356 = xor i32 %322, -1
  %357 = or i32 %356, %329
  %358 = and i32 %311, %4
  %359 = or i32 %358, %345
  %360 = or i32 %358, %328
  %361 = shl i32 %360, 1
  %362 = and i32 %327, %3
  %363 = or i32 %345, %4
  %364 = shl i32 %363, 1
  %365 = and i32 %325, %311
  %366 = shl i32 %365, 1
  %367 = or i32 %337, %5
  %368 = add i32 %334, 1
  %369 = or i32 %318, %321
  %370 = or i32 %334, %319
  %371 = shl i32 %370, 1
  %372 = or i32 %358, %324
  %373 = add i32 %318, 1
  %374 = xor i32 %358, -1
  %375 = and i32 %374, %3
  %376 = and i32 %322, %3
  %377 = or i32 %339, %341
  %378 = and i32 %315, %328
  %379 = or i32 %14, %3
  %380 = and i32 %311, %335
  %381 = or i32 %322, %328
  %382 = and i32 %318, %4
  %383 = or i32 %322, %337
  %384 = and i32 %327, %329
  %385 = xor i32 %14, -1
  %386 = and i32 %328, %385
  %387 = xor i32 %334, %313
  %388 = xor i32 %340, %4
  %389 = xor i32 %388, -1
  %390 = xor i32 %339, %389
  %391 = xor i32 %327, -1
  %392 = xor i32 %391, %3
  %393 = and i32 %322, %328
  %394 = xor i32 %331, -1
  %395 = or i32 %14, %394
  %396 = xor i32 %352, -1
  %397 = or i32 %329, %5
  %398 = or i32 %312, %310
  %399 = xor i32 %318, %4
  %400 = xor i32 %399, -1
  %401 = xor i32 %339, %400
  %402 = add i32 %331, 1
  %403 = or i32 %312, %4
  %404 = or i32 %322, %334
  %405 = xor i32 %396, %4
  %406 = or i32 %352, %310
  %407 = xor i32 %394, %4
  %408 = and i32 %356, %329
  %409 = xor i32 %321, -1
  %410 = and i32 %318, %409
  %411 = or i32 %356, %3
  %412 = and i32 %409, %5
  %413 = shl i32 %412, 1
  %414 = xor i32 %345, %4
  %415 = and i32 %327, %328
  %416 = and i32 %345, %310
  %417 = and i32 %331, %4
  %418 = xor i32 %416, -1
  %419 = xor i32 %417, %418
  %420 = and i32 %346, %4
  %421 = and i32 %319, %409
  %422 = xor i32 %327, %321
  %423 = or i32 %322, %324
  %424 = xor i32 %374, %3
  %425 = or i32 %321, %356
  %426 = and i32 %15, %311
  %427 = or i32 %331, %4
  %428 = or i32 %319, %4
  %429 = or i32 %348, %400
  %430 = shl i32 %429, 1
  %431 = or i32 %14, %324
  %432 = or i32 %311, %337
  %433 = xor i32 %331, %321
  %434 = xor i32 %327, %3
  %435 = xor i32 %409, %5
  %436 = and i32 %313, %310
  %437 = and i32 %322, %324
  %438 = or i32 %321, %396
  %439 = xor i32 %358, %346
  %440 = and i32 %322, %15
  %441 = and i32 %385, %329
  %442 = and i32 %311, %409
  %443 = and i32 %338, %310
  %444 = and i32 %340, %4
  %445 = xor i32 %444, -1
  %446 = xor i32 %443, %445
  %447 = or i32 %346, %310
  %448 = and i32 %374, %324
  %449 = or i32 %313, %4
  %450 = and i32 %319, %335
  %451 = and i32 %322, %409
  %452 = shl i32 %451, 1
  %453 = xor i32 %15, -1
  %454 = or i32 %14, %453
  %455 = or i32 %319, %310
  %456 = and i32 %352, %4
  %457 = or i32 %322, %329
  %458 = shl i32 %457, 1
  %459 = or i32 %318, %453
  %460 = or i32 %14, %329
  %461 = xor i32 %312, %4
  %462 = xor i32 %313, %4
  %463 = or i32 %348, %349
  %464 = xor i32 %337, %5
  %465 = or i32 %321, %394
  %466 = shl i32 %465, 2
  %467 = xor i32 %15, %5
  %468 = or i32 %321, %319
  %469 = and i32 %328, %356
  %470 = and i32 %331, %310
  %471 = and i32 %356, %335
  %472 = and i32 %327, %324
  %473 = and i32 %318, %310
  %474 = xor i32 %473, %350
  %475 = or i32 %321, %316
  %476 = xor i32 %335, %5
  %477 = xor i32 %321, %5
  %478 = shl i32 %477, 1
  %479 = or i32 %396, %310
  %480 = or i32 %316, %329
  %481 = shl i32 %325, 1
  %482 = xor i32 %14, %325
  %483 = and i32 %315, %324
  %484 = or i32 %321, %311
  %485 = or i32 %322, %453
  %486 = and i32 %318, %335
  %487 = xor i32 %14, %3
  %488 = shl i32 %487, 1
  %489 = or i32 %318, %310
  %490 = or i32 %396, %4
  %491 = and i32 %356, %324
  %492 = or i32 %14, %337
  %493 = and i32 %328, %311
  %494 = shl i32 %493, 1
  %495 = add i32 %345, 1
  %496 = xor i32 %385, %3
  %497 = or i32 %352, %4
  %498 = or i32 %416, %382
  %499 = or i32 %358, %329
  %500 = add i32 %327, 1
  %501 = shl i32 %453, 1
  %502 = xor i32 %489, -1
  %503 = or i32 %443, %502
  %504 = xor i32 %325, %5
  %505 = xor i32 %382, %418
  %506 = and i32 %15, %356
  %507 = shl i32 %506, 1
  %508 = xor i32 %14, %313
  %509 = xor i32 %352, %4
  %510 = and i32 %15, %5
  %511 = or i32 %318, %4
  %512 = xor i32 %511, -1
  %513 = or i32 %339, %512
  %514 = or i32 %319, %337
  %515 = xor i32 %348, %399
  %516 = and i32 %328, %5
  %517 = shl i32 %516, 1
  %518 = and i32 %318, %15
  %519 = xor i32 %470, %350
  %520 = or i32 %346, %4
  %521 = or i32 %328, %356
  %522 = or i32 %391, %3
  %523 = xor i32 %358, %3
  %524 = shl i32 %523, 1
  %525 = xor i32 %339, %511
  %526 = and i32 %315, %3
  %527 = or i32 %345, %310
  %528 = and i32 %325, %5
  %529 = and i32 %328, %374
  %530 = shl i32 %529, 1
  %531 = and i32 %318, %325
  %532 = and i32 %322, %335
  %533 = and i32 %352, %310
  %534 = or i32 %416, %417
  %535 = xor i32 %453, %5
  %536 = or i32 %358, %396
  %537 = shl i32 %536, 1
  %538 = or i32 %443, %444
  %539 = and i32 %325, %319
  %540 = or i32 %391, %329
  %541 = and i32 %315, %329
  %542 = xor i32 %443, %489
  %543 = shl i32 %542, 1
  %544 = or i32 %321, %5
  %545 = or i32 %339, %399
  %546 = and i32 %313, %4
  %547 = shl i32 %546, 1
  %548 = or i32 %356, %337
  %549 = or i32 %348, %473
  %550 = xor i32 %346, %4
  %551 = or i32 %339, %388
  %552 = or i32 %14, %312
  %553 = or i32 %316, %3
  %554 = shl i32 %553, 1
  %555 = or i32 %311, %453
  %556 = and i32 %15, %319
  %557 = and i32 %394, %310
  %558 = mul i32 %557, -19
  %559 = and i32 %312, %310
  %560 = and i32 %394, %4
  %561 = and i32 %312, %4
  %562 = and i32 %396, %310
  %563 = shl i32 %562, 4
  %564 = shl i32 %416, 2
  %565 = and i32 %396, %4
  %566 = shl i32 %565, 3
  %567 = add i32 %214, %41
  %568 = add i32 %567, %103
  %569 = add i32 %568, %87
  %570 = add i32 %569, %288
  %571 = add i32 %570, %279
  %572 = add i32 %571, %270
  %573 = add i32 %572, %249
  %574 = add i32 %573, %213
  %575 = add i32 %574, %211
  %576 = add i32 %575, %190
  %577 = add i32 %576, %176
  %578 = add i32 %577, %165
  %579 = add i32 %578, %145
  %580 = add i32 %579, %138
  %581 = add i32 %580, %131
  %582 = add i32 %581, %130
  %583 = add i32 %582, %129
  %584 = add i32 %583, %115
  %585 = add i32 %584, %94
  %586 = add i32 %585, %88
  %587 = add i32 %586, %76
  %588 = add i32 %587, %75
  %589 = add i32 %588, %62
  %590 = add i32 %589, %57
  %591 = add i32 %590, %374
  %592 = add i32 %591, %356
  %593 = add i32 %592, %442
  %594 = add i32 %593, %14
  %595 = add i32 %594, %397
  %596 = add i32 %595, %331
  %597 = add i32 %596, %552
  %598 = add i32 %597, %541
  %599 = add i32 %598, %482
  %600 = add i32 %599, %462
  %601 = add i32 %600, %450
  %602 = add i32 %601, %439
  %603 = add i32 %602, %438
  %604 = add i32 %603, %428
  %605 = add i32 %604, %410
  %606 = add i32 %605, %406
  %607 = add i32 %606, %403
  %608 = add i32 %607, %398
  %609 = add i32 %608, %395
  %610 = add i32 %609, %393
  %611 = add i32 %610, %379
  %612 = add i32 %611, %333
  %613 = add i32 %612, %326
  %614 = add i32 %613, %317
  %615 = add i32 %614, %401
  %616 = add i32 %615, %515
  %617 = shl i32 %616, 1
  %618 = sub i32 %309, %0
  %619 = add i32 %618, %52
  %620 = add i32 %619, %90
  %621 = add i32 %620, %236
  %622 = add i32 %621, %158
  %623 = add i32 %622, %396
  %624 = sub i32 %623, %492
  %625 = sub i32 %624, %531
  %626 = mul i32 %625, 5
  %627 = add i32 %119, %324
  %628 = add i32 %627, %480
  %629 = add i32 %628, %471
  %630 = add i32 %629, %498
  %631 = shl i32 %630, 2
  %632 = sub i32 %23, %43
  %633 = sub i32 %632, %425
  %634 = sub i32 %633, %384
  %635 = sub i32 %634, %549
  %636 = mul i32 %635, 3
  %637 = sub i32 %560, %41
  %638 = mul i32 %637, 7
  %639 = add i32 %0, -7
  %640 = add i32 %639, %1
  %641 = add i32 %640, %297
  %642 = add i32 %641, %49
  %643 = add i32 %642, %71
  %644 = add i32 %643, %83
  %645 = sub i32 %644, %7
  %646 = sub i32 %645, %48
  %647 = sub i32 %646, %23
  %648 = add i32 %647, %202
  %649 = sub i32 %648, %69
  %650 = add i32 %649, %31
  %651 = sub i32 %650, %37
  %652 = sub i32 %651, %40
  %653 = sub i32 %652, %47
  %654 = add i32 %653, %77
  %655 = sub i32 %654, %84
  %656 = sub i32 %655, %86
  %657 = sub i32 %656, %89
  %658 = sub i32 %657, %97
  %659 = add i32 %658, %43
  %660 = sub i32 %659, %8
  %661 = sub i32 %660, %111
  %662 = sub i32 %661, %114
  %663 = sub i32 %662, %116
  %664 = sub i32 %663, %122
  %665 = sub i32 %664, %125
  %666 = add i32 %665, %65
  %667 = add i32 %666, %148
  %668 = sub i32 %667, %38
  %669 = add i32 %668, %63
  %670 = add i32 %669, %162
  %671 = add i32 %670, %168
  %672 = add i32 %671, %186
  %673 = add i32 %672, %193
  %674 = add i32 %673, %194
  %675 = add i32 %674, %54
  %676 = sub i32 %675, %228
  %677 = add i32 %676, %230
  %678 = sub i32 %677, %247
  %679 = add i32 %678, %170
  %680 = add i32 %679, %253
  %681 = sub i32 %680, %260
  %682 = add i32 %681, %263
  %683 = add i32 %682, %108
  %684 = add i32 %683, %273
  %685 = add i32 %684, %275
  %686 = add i32 %685, %282
  %687 = add i32 %686, %286
  %688 = sub i32 %687, %294
  %689 = sub i32 %688, %22
  %690 = add i32 %689, %39
  %691 = sub i32 %690, %51
  %692 = sub i32 %691, %56
  %693 = sub i32 %692, %64
  %694 = sub i32 %693, %67
  %695 = sub i32 %694, %68
  %696 = sub i32 %695, %78
  %697 = add i32 %696, %80
  %698 = sub i32 %697, %81
  %699 = add i32 %698, %91
  %700 = sub i32 %699, %95
  %701 = sub i32 %700, %96
  %702 = add i32 %701, %98
  %703 = sub i32 %702, %100
  %704 = sub i32 %703, %101
  %705 = sub i32 %704, %102
  %706 = sub i32 %705, %59
  %707 = add i32 %706, %104
  %708 = add i32 %707, %107
  %709 = sub i32 %708, %109
  %710 = add i32 %709, %110
  %711 = add i32 %710, %117
  %712 = sub i32 %711, %118
  %713 = sub i32 %712, %120
  %714 = add i32 %713, %121
  %715 = sub i32 %714, %124
  %716 = add i32 %715, %126
  %717 = add i32 %716, %128
  %718 = sub i32 %717, %132
  %719 = sub i32 %718, %133
  %720 = add i32 %719, %136
  %721 = add i32 %720, %137
  %722 = add i32 %721, %139
  %723 = add i32 %722, %140
  %724 = sub i32 %723, %142
  %725 = add i32 %724, %143
  %726 = add i32 %725, %144
  %727 = add i32 %726, %149
  %728 = add i32 %727, %150
  %729 = add i32 %728, %153
  %730 = add i32 %729, %154
  %731 = sub i32 %730, %155
  %732 = sub i32 %731, %156
  %733 = add i32 %732, %159
  %734 = sub i32 %733, %160
  %735 = sub i32 %734, %161
  %736 = add i32 %735, %163
  %737 = sub i32 %736, %164
  %738 = sub i32 %737, %166
  %739 = add i32 %738, %167
  %740 = sub i32 %739, %169
  %741 = add i32 %740, %171
  %742 = sub i32 %741, %172
  %743 = add i32 %742, %175
  %744 = sub i32 %743, %177
  %745 = add i32 %744, %178
  %746 = sub i32 %745, %179
  %747 = add i32 %746, %180
  %748 = sub i32 %747, %181
  %749 = sub i32 %748, %185
  %750 = add i32 %749, %187
  %751 = add i32 %750, %188
  %752 = add i32 %751, %189
  %753 = sub i32 %752, %191
  %754 = sub i32 %753, %192
  %755 = add i32 %754, %195
  %756 = sub i32 %755, %196
  %757 = add i32 %756, %197
  %758 = add i32 %757, %200
  %759 = sub i32 %758, %201
  %760 = add i32 %759, %203
  %761 = add i32 %760, %206
  %762 = add i32 %761, %212
  %763 = sub i32 %762, %215
  %764 = sub i32 %763, %218
  %765 = add i32 %764, %28
  %766 = sub i32 %765, %223
  %767 = add i32 %766, %224
  %768 = add i32 %767, %227
  %769 = add i32 %768, %229
  %770 = add i32 %769, %231
  %771 = add i32 %770, %232
  %772 = add i32 %771, %233
  %773 = add i32 %772, %234
  %774 = add i32 %773, %235
  %775 = sub i32 %774, %237
  %776 = add i32 %775, %239
  %777 = add i32 %776, %243
  %778 = add i32 %777, %245
  %779 = add i32 %778, %246
  %780 = sub i32 %779, %248
  %781 = sub i32 %780, %250
  %782 = add i32 %781, %251
  %783 = sub i32 %782, %252
  %784 = sub i32 %783, %255
  %785 = sub i32 %784, %256
  %786 = sub i32 %785, %258
  %787 = add i32 %786, %261
  %788 = sub i32 %787, %262
  %789 = add i32 %788, %264
  %790 = sub i32 %789, %271
  %791 = sub i32 %790, %272
  %792 = sub i32 %791, %274
  %793 = add i32 %792, %278
  %794 = add i32 %793, %280
  %795 = add i32 %794, %283
  %796 = sub i32 %795, %284
  %797 = add i32 %796, %287
  %798 = add i32 %797, %290
  %799 = add i32 %798, %291
  %800 = sub i32 %799, %292
  %801 = add i32 %800, %293
  %802 = add i32 %801, %295
  %803 = add i32 %802, %296
  %804 = sub i32 %803, %173
  %805 = sub i32 %804, %4
  %806 = add i32 %805, %25
  %807 = add i32 %806, %29
  %808 = sub i32 %807, %35
  %809 = sub i32 %808, %46
  %810 = sub i32 %809, %53
  %811 = add i32 %810, %61
  %812 = sub i32 %811, %74
  %813 = sub i32 %812, %106
  %814 = sub i32 %813, %113
  %815 = sub i32 %814, %135
  %816 = sub i32 %815, %147
  %817 = sub i32 %816, %152
  %818 = add i32 %817, %174
  %819 = sub i32 %818, %199
  %820 = sub i32 %819, %208
  %821 = sub i32 %820, %210
  %822 = sub i32 %821, %217
  %823 = sub i32 %822, %220
  %824 = sub i32 %823, %222
  %825 = sub i32 %824, %226
  %826 = sub i32 %825, %238
  %827 = sub i32 %826, %241
  %828 = sub i32 %827, %242
  %829 = sub i32 %828, %244
  %830 = sub i32 %829, %257
  %831 = sub i32 %830, %259
  %832 = sub i32 %831, %266
  %833 = sub i32 %832, %268
  %834 = add i32 %833, %269
  %835 = sub i32 %834, %277
  %836 = sub i32 %835, %281
  %837 = sub i32 %836, %285
  %838 = sub i32 %837, %289
  %839 = sub i32 %838, %298
  %840 = add i32 %839, %300
  %841 = add i32 %840, %302
  %842 = add i32 %841, %304
  %843 = add i32 %842, %306
  %844 = add i32 %843, %308
  %845 = add i32 %844, %337
  %846 = add i32 %845, %368
  %847 = sub i32 %846, %5
  %848 = add i32 %847, %334
  %849 = add i32 %848, 1
  %850 = sub i32 %849, %93
  %851 = sub i32 %850, %205
  %852 = add i32 %851, %327
  %853 = sub i32 %852, %330
  %854 = sub i32 %853, %336
  %855 = add i32 %854, %352
  %856 = sub i32 %855, %367
  %857 = add i32 %856, %373
  %858 = sub i32 %857, %380
  %859 = add i32 %858, %313
  %860 = add i32 %859, %402
  %861 = add i32 %860, %426
  %862 = sub i32 %861, %432
  %863 = add i32 %862, %435
  %864 = add i32 %863, %385
  %865 = add i32 %864, %358
  %866 = add i32 %865, %345
  %867 = sub i32 %866, %322
  %868 = add i32 %867, %464
  %869 = sub i32 %868, %467
  %870 = add i32 %869, %476
  %871 = sub i32 %870, %481
  %872 = sub i32 %871, %484
  %873 = sub i32 %872, %315
  %874 = add i32 %873, %495
  %875 = add i32 %874, %500
  %876 = sub i32 %875, %501
  %877 = add i32 %876, %504
  %878 = add i32 %877, %510
  %879 = add i32 %878, %316
  %880 = sub i32 %879, %528
  %881 = sub i32 %880, %535
  %882 = sub i32 %881, %544
  %883 = sub i32 %882, %555
  %884 = sub i32 %883, %184
  %885 = sub i32 %884, %314
  %886 = add i32 %885, %320
  %887 = add i32 %886, %323
  %888 = add i32 %887, %332
  %889 = add i32 %888, %347
  %890 = sub i32 %889, %353
  %891 = sub i32 %890, %357
  %892 = sub i32 %891, %359
  %893 = sub i32 %892, %362
  %894 = sub i32 %893, %366
  %895 = add i32 %894, %349
  %896 = sub i32 %895, %369
  %897 = add i32 %896, %372
  %898 = sub i32 %897, %375
  %899 = add i32 %898, %376
  %900 = sub i32 %899, %378
  %901 = sub i32 %900, %381
  %902 = sub i32 %901, %382
  %903 = sub i32 %902, %383
  %904 = sub i32 %903, %386
  %905 = add i32 %904, %387
  %906 = sub i32 %905, %392
  %907 = add i32 %906, %404
  %908 = add i32 %907, %405
  %909 = add i32 %908, %407
  %910 = add i32 %909, %408
  %911 = sub i32 %910, %411
  %912 = sub i32 %911, %413
  %913 = add i32 %912, %414
  %914 = sub i32 %913, %415
  %915 = sub i32 %914, %420
  %916 = add i32 %915, %399
  %917 = sub i32 %916, %421
  %918 = add i32 %917, %422
  %919 = add i32 %918, %423
  %920 = add i32 %919, %424
  %921 = add i32 %920, %427
  %922 = add i32 %921, %431
  %923 = add i32 %922, %433
  %924 = add i32 %923, %434
  %925 = sub i32 %924, %436
  %926 = sub i32 %925, %437
  %927 = add i32 %926, %440
  %928 = sub i32 %927, %441
  %929 = sub i32 %928, %447
  %930 = sub i32 %929, %448
  %931 = sub i32 %930, %449
  %932 = add i32 %931, %454
  %933 = add i32 %932, %455
  %934 = sub i32 %933, %456
  %935 = add i32 %934, %459
  %936 = add i32 %935, %460
  %937 = add i32 %936, %461
  %938 = add i32 %937, %468
  %939 = add i32 %938, %469
  %940 = sub i32 %939, %470
  %941 = add i32 %940, %472
  %942 = add i32 %941, %475
  %943 = sub i32 %942, %478
  %944 = sub i32 %943, %479
  %945 = add i32 %944, %417
  %946 = sub i32 %945, %483
  %947 = add i32 %946, %485
  %948 = add i32 %947, %486
  %949 = add i32 %948, %489
  %950 = sub i32 %949, %490
  %951 = sub i32 %950, %491
  %952 = sub i32 %951, %494
  %953 = sub i32 %952, %496
  %954 = add i32 %953, %497
  %955 = add i32 %954, %499
  %956 = add i32 %955, %508
  %957 = add i32 %956, %509
  %958 = sub i32 %957, %514
  %959 = sub i32 %958, %517
  %960 = add i32 %959, %518
  %961 = sub i32 %960, %520
  %962 = sub i32 %961, %521
  %963 = add i32 %962, %522
  %964 = add i32 %963, %526
  %965 = add i32 %964, %527
  %966 = sub i32 %965, %532
  %967 = sub i32 %966, %533
  %968 = sub i32 %967, %539
  %969 = sub i32 %968, %540
  %970 = add i32 %969, %548
  %971 = sub i32 %970, %550
  %972 = add i32 %971, %556
  %973 = add i32 %972, %559
  %974 = sub i32 %973, %561
  %975 = sub i32 %974, %348
  %976 = add i32 %975, %351
  %977 = sub i32 %976, %355
  %978 = sub i32 %977, %361
  %979 = sub i32 %978, %364
  %980 = sub i32 %979, %371
  %981 = add i32 %980, %377
  %982 = sub i32 %981, %390
  %983 = sub i32 %982, %419
  %984 = sub i32 %983, %446
  %985 = sub i32 %984, %452
  %986 = sub i32 %985, %458
  %987 = add i32 %986, %463
  %988 = sub i32 %987, %466
  %989 = add i32 %988, %474
  %990 = sub i32 %989, %488
  %991 = sub i32 %990, %503
  %992 = add i32 %991, %505
  %993 = sub i32 %992, %507
  %994 = sub i32 %993, %513
  %995 = sub i32 %994, %519
  %996 = sub i32 %995, %524
  %997 = sub i32 %996, %525
  %998 = sub i32 %997, %530
  %999 = add i32 %998, %534
  %1000 = sub i32 %999, %537
  %1001 = sub i32 %1000, %538
  %1002 = add i32 %1001, %545
  %1003 = sub i32 %1002, %547
  %1004 = add i32 %1003, %551
  %1005 = sub i32 %1004, %554
  %1006 = add i32 %1005, %558
  %1007 = sub i32 %1006, %563
  %1008 = sub i32 %1007, %564
  %1009 = sub i32 %1008, %566
  %1010 = sub i32 %1009, %430
  %1011 = sub i32 %1010, %543
  %1012 = sub i32 %1011, %344
  %1013 = add i32 %1012, %638
  %1014 = add i32 %1013, %631
  %1015 = add i32 %1014, %636
  %1016 = add i32 %1015, %626
  %1017 = add i32 %1016, %617
  %1018 = icmp eq i32 %18, %1017
  %1019 = select i1 %1018, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1020 = tail call i32 @puts(i8* nonnull dereferenceable(1) %1019)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
