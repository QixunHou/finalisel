digraph "DFG for'crackme' function" {
	Node0xaf57e0[shape=record, label="  %5 = and i32 %2, %1"];
	Node0xaf5e60[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0xaf5f00[shape=record, label="  %7 = mul i32 %6, -4"];
	Node0xaf5f70[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0xaf5fe0[shape=record, label="  %9 = or i32 %8, %3"];
	Node0xaf6080[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0xaf60f0[shape=record, label="  %11 = add i32 %10, %7"];
	Node0xaf6160[shape=record, label="  %12 = or i32 %2, %1"];
	Node0xaf6200[shape=record, label="  %13 = mul i32 %2, -3"];
	Node0xaf6270[shape=record, label="  %14 = xor i32 %2, -1"];
	Node0xaf6310[shape=record, label="  %15 = shl i32 %14, 2"];
	Node0xaf6380[shape=record, label="  %16 = xor i32 %2, %1"];
	Node0xaf63f0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0xaf6460[shape=record, label="  %18 = shl i32 %16, 1"];
	Node0xaf6500[shape=record, label="  %19 = shl i32 %12, 3"];
	Node0xaf65a0[shape=record, label="  %20 = xor i32 %19, -8"];
	Node0xaf6610[shape=record, label="  %21 = xor i32 %1, -1"];
	Node0xaf6680[shape=record, label="  %22 = and i32 %21, %2"];
	Node0xaf66f0[shape=record, label="  %23 = and i32 %14, %1"];
	Node0xaf6790[shape=record, label="  %24 = mul i32 %23, -6"];
	Node0xaf6800[shape=record, label="  %25 = shl i32 %5, 1"];
	Node0xaf6870[shape=record, label="  %26 = xor i32 %3, -1"];
	Node0xaf68e0[shape=record, label="  %27 = and i32 %8, %3"];
	Node0xaf6950[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0xaf69f0[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0xaf6a60[shape=record, label="  %30 = and i32 %3, %0"];
	Node0xaf6ad0[shape=record, label="  %31 = or i32 %3, %0"];
	Node0xaf6b70[shape=record, label="  %32 = mul i32 %31, -5"];
	Node0xaf6df0[shape=record, label="  %33 = xor i32 %8, %3"];
	Node0xaf6e60[shape=record, label="  %34 = shl i32 %31, 1"];
	Node0xaf6ed0[shape=record, label="  %35 = xor i32 %34, -2"];
	Node0xaf6f40[shape=record, label="  %36 = xor i32 %9, -1"];
	Node0xaf6fb0[shape=record, label="  %37 = shl i32 %30, 3"];
	Node0xaf7020[shape=record, label="  %38 = add i32 %27, %36"];
	Node0xaf70c0[shape=record, label="  %39 = mul i32 %38, 7"];
	Node0xaf7130[shape=record, label="  %40 = sub i32 1, %0"];
	Node0xaf71a0[shape=record, label="  %41 = add i32 %40, %12"];
	Node0xaf7210[shape=record, label="  %42 = add i32 %41, %13"];
	Node0xaf7280[shape=record, label="  %43 = add i32 %42, %15"];
	Node0xaf72f0[shape=record, label="  %44 = add i32 %43, %17"];
	Node0xaf7360[shape=record, label="  %45 = add i32 %44, %22"];
	Node0xaf73d0[shape=record, label="  %46 = add i32 %45, %26"];
	Node0xaf7440[shape=record, label="  %47 = sub i32 %46, %18"];
	Node0xaf74b0[shape=record, label="  %48 = add i32 %47, %24"];
	Node0xaf7520[shape=record, label="  %49 = add i32 %48, %25"];
	Node0xaf7590[shape=record, label="  %50 = add i32 %49, %30"];
	Node0xaf7600[shape=record, label="  %51 = add i32 %50, %33"];
	Node0xaf7670[shape=record, label="  %52 = sub i32 %51, %20"];
	Node0xaf76e0[shape=record, label="  %53 = add i32 %52, %32"];
	Node0xaf7750[shape=record, label="  %54 = add i32 %53, %37"];
	Node0xaf77c0[shape=record, label="  %55 = sub i32 %54, %29"];
	Node0xaf7830[shape=record, label="  %56 = add i32 %55, %35"];
	Node0xaf78a0[shape=record, label="  %57 = add i32 %56, %39"];
	Node0xaf7910[shape=record, label="  %58 = icmp eq i32 %11, %57"];
	Node0xa96268[shape=record, label="  %59 = select i1 %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xaf7db0[shape=record, label="  %60 = tail call i32 @puts(i8* nonnull dereferenceable(1) %59)"];
	Node0xaf7e00[shape=record, label="  ret void"];
	Node0xaf57e0 -> Node0xaf5e60;
	Node0xaf5e60 -> Node0xaf5f00;
	Node0xaf5f00 -> Node0xaf5f70;
	Node0xaf5f70 -> Node0xaf5fe0;
	Node0xaf5fe0 -> Node0xaf6080;
	Node0xaf6080 -> Node0xaf60f0;
	Node0xaf60f0 -> Node0xaf6160;
	Node0xaf6160 -> Node0xaf6200;
	Node0xaf6200 -> Node0xaf6270;
	Node0xaf6270 -> Node0xaf6310;
	Node0xaf6310 -> Node0xaf6380;
	Node0xaf6380 -> Node0xaf63f0;
	Node0xaf63f0 -> Node0xaf6460;
	Node0xaf6460 -> Node0xaf6500;
	Node0xaf6500 -> Node0xaf65a0;
	Node0xaf65a0 -> Node0xaf6610;
	Node0xaf6610 -> Node0xaf6680;
	Node0xaf6680 -> Node0xaf66f0;
	Node0xaf66f0 -> Node0xaf6790;
	Node0xaf6790 -> Node0xaf6800;
	Node0xaf6800 -> Node0xaf6870;
	Node0xaf6870 -> Node0xaf68e0;
	Node0xaf68e0 -> Node0xaf6950;
	Node0xaf6950 -> Node0xaf69f0;
	Node0xaf69f0 -> Node0xaf6a60;
	Node0xaf6a60 -> Node0xaf6ad0;
	Node0xaf6ad0 -> Node0xaf6b70;
	Node0xaf6b70 -> Node0xaf6df0;
	Node0xaf6df0 -> Node0xaf6e60;
	Node0xaf6e60 -> Node0xaf6ed0;
	Node0xaf6ed0 -> Node0xaf6f40;
	Node0xaf6f40 -> Node0xaf6fb0;
	Node0xaf6fb0 -> Node0xaf7020;
	Node0xaf7020 -> Node0xaf70c0;
	Node0xaf70c0 -> Node0xaf7130;
	Node0xaf7130 -> Node0xaf71a0;
	Node0xaf71a0 -> Node0xaf7210;
	Node0xaf7210 -> Node0xaf7280;
	Node0xaf7280 -> Node0xaf72f0;
	Node0xaf72f0 -> Node0xaf7360;
	Node0xaf7360 -> Node0xaf73d0;
	Node0xaf73d0 -> Node0xaf7440;
	Node0xaf7440 -> Node0xaf74b0;
	Node0xaf74b0 -> Node0xaf7520;
	Node0xaf7520 -> Node0xaf7590;
	Node0xaf7590 -> Node0xaf7600;
	Node0xaf7600 -> Node0xaf7670;
	Node0xaf7670 -> Node0xaf76e0;
	Node0xaf76e0 -> Node0xaf7750;
	Node0xaf7750 -> Node0xaf77c0;
	Node0xaf77c0 -> Node0xaf7830;
	Node0xaf7830 -> Node0xaf78a0;
	Node0xaf78a0 -> Node0xaf7910;
	Node0xaf7910 -> Node0xa96268;
	Node0xa96268 -> Node0xaf7db0;
	Node0xaf7db0 -> Node0xaf7e00;
edge [color=red]
	Node0xaf57e0 -> Node0xaf5e60;
	Node0xaf5e60 -> Node0xaf5f00;
	Node0xaf5f70 -> Node0xaf5fe0;
	Node0xaf5fe0 -> Node0xaf6080;
	Node0xaf6080 -> Node0xaf60f0;
	Node0xaf5f00 -> Node0xaf60f0;
	Node0xaf6270 -> Node0xaf6310;
	Node0xaf6380 -> Node0xaf63f0;
	Node0xaf6380 -> Node0xaf6460;
	Node0xaf6160 -> Node0xaf6500;
	Node0xaf6500 -> Node0xaf65a0;
	Node0xaf6610 -> Node0xaf6680;
	Node0xaf6270 -> Node0xaf66f0;
	Node0xaf66f0 -> Node0xaf6790;
	Node0xaf57e0 -> Node0xaf6800;
	Node0xaf5f70 -> Node0xaf68e0;
	Node0xaf68e0 -> Node0xaf6950;
	Node0xaf6950 -> Node0xaf69f0;
	Node0xaf6ad0 -> Node0xaf6b70;
	Node0xaf5f70 -> Node0xaf6df0;
	Node0xaf6ad0 -> Node0xaf6e60;
	Node0xaf6e60 -> Node0xaf6ed0;
	Node0xaf5fe0 -> Node0xaf6f40;
	Node0xaf6a60 -> Node0xaf6fb0;
	Node0xaf68e0 -> Node0xaf7020;
	Node0xaf6f40 -> Node0xaf7020;
	Node0xaf7020 -> Node0xaf70c0;
	Node0xaf7130 -> Node0xaf71a0;
	Node0xaf6160 -> Node0xaf71a0;
	Node0xaf71a0 -> Node0xaf7210;
	Node0xaf6200 -> Node0xaf7210;
	Node0xaf7210 -> Node0xaf7280;
	Node0xaf6310 -> Node0xaf7280;
	Node0xaf7280 -> Node0xaf72f0;
	Node0xaf63f0 -> Node0xaf72f0;
	Node0xaf72f0 -> Node0xaf7360;
	Node0xaf6680 -> Node0xaf7360;
	Node0xaf7360 -> Node0xaf73d0;
	Node0xaf6870 -> Node0xaf73d0;
	Node0xaf73d0 -> Node0xaf7440;
	Node0xaf6460 -> Node0xaf7440;
	Node0xaf7440 -> Node0xaf74b0;
	Node0xaf6790 -> Node0xaf74b0;
	Node0xaf74b0 -> Node0xaf7520;
	Node0xaf6800 -> Node0xaf7520;
	Node0xaf7520 -> Node0xaf7590;
	Node0xaf6a60 -> Node0xaf7590;
	Node0xaf7590 -> Node0xaf7600;
	Node0xaf6df0 -> Node0xaf7600;
	Node0xaf7600 -> Node0xaf7670;
	Node0xaf65a0 -> Node0xaf7670;
	Node0xaf7670 -> Node0xaf76e0;
	Node0xaf6b70 -> Node0xaf76e0;
	Node0xaf76e0 -> Node0xaf7750;
	Node0xaf6fb0 -> Node0xaf7750;
	Node0xaf7750 -> Node0xaf77c0;
	Node0xaf69f0 -> Node0xaf77c0;
	Node0xaf77c0 -> Node0xaf7830;
	Node0xaf6ed0 -> Node0xaf7830;
	Node0xaf7830 -> Node0xaf78a0;
	Node0xaf70c0 -> Node0xaf78a0;
	Node0xaf60f0 -> Node0xaf7910;
	Node0xaf78a0 -> Node0xaf7910;
	Node0xaf7910 -> Node0xa96268;
	Node0xa96268 -> Node0xaf7db0;
}
