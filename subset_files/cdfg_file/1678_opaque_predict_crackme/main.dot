digraph "DFG for'main' function" {
	Node0x1856588[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1856608[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1856698[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x18566f8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1856b78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1856c58[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1856d58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1856e18[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1856ec8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1857128[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x18571e8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1857348[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x18573a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1859900[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1859b08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1859c68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1859d78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1859e38[shape=record, label="  ret i32 0"];
	Node0x1856588 -> Node0x1856608;
	Node0x1856608 -> Node0x1856698;
	Node0x1856698 -> Node0x18566f8;
	Node0x18566f8 -> Node0x1856b78;
	Node0x1856b78 -> Node0x1856c58;
	Node0x1856c58 -> Node0x1856d58;
	Node0x1856d58 -> Node0x1856e18;
	Node0x1856e18 -> Node0x1856ec8;
	Node0x1856ec8 -> Node0x1857128;
	Node0x1857128 -> Node0x18571e8;
	Node0x18571e8 -> Node0x1857348;
	Node0x1857348 -> Node0x18573a8;
	Node0x18573a8 -> Node0x1859900;
	Node0x1859900 -> Node0x1859b08;
	Node0x1859b08 -> Node0x1859c68;
	Node0x1859c68 -> Node0x1859d78;
	Node0x1859d78 -> Node0x1859e38;
edge [color=red]
	Node0x1856588 -> Node0x18566f8;
	Node0x18566f8 -> Node0x1856b78;
	Node0x1856608 -> Node0x1856c58;
	Node0x1856c58 -> Node0x1856d58;
	Node0x1856698 -> Node0x1856e18;
	Node0x1856e18 -> Node0x1856ec8;
	Node0x1856588 -> Node0x1857128;
	Node0x1856608 -> Node0x1857128;
	Node0x1856698 -> Node0x1857128;
	Node0x1856588 -> Node0x18571e8;
	Node0x1856608 -> Node0x1857348;
	Node0x1856698 -> Node0x18573a8;
	Node0x18571e8 -> Node0x1859900;
	Node0x1857348 -> Node0x1859900;
	Node0x18573a8 -> Node0x1859900;
	Node0x1856e18 -> Node0x1859b08;
	Node0x1856c58 -> Node0x1859c68;
	Node0x18566f8 -> Node0x1859d78;
}
