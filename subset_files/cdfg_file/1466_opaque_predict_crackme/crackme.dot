digraph "DFG for'crackme' function" {
	Node0xec1be0[shape=record, label="  %3 = sub i32 1, %0"];
	Node0xec1c80[shape=record, label="  %4 = xor i32 %1, -1"];
	Node0xec1d40[shape=record, label="  %5 = or i32 %4, %0"];
	Node0xec1db0[shape=record, label="  %6 = mul i32 %1, 5"];
	Node0xec1e20[shape=record, label="  %7 = and i32 %4, %0"];
	Node0xec1e90[shape=record, label="  %8 = and i32 %1, %0"];
	Node0xec1f00[shape=record, label="  %9 = xor i32 %1, %0"];
	Node0xec1f70[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0xec2010[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0xec2080[shape=record, label="  %12 = or i32 %1, %0"];
	Node0xec20f0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xec2160[shape=record, label="  %14 = xor i32 %5, -1"];
	Node0xec2200[shape=record, label="  %15 = mul i32 %14, -6"];
	Node0xec22a0[shape=record, label="  %16 = shl i32 %8, 2"];
	Node0xec2310[shape=record, label="  %17 = mul i32 %7, -2"];
	Node0xec2380[shape=record, label="  %18 = sub i32 %4, %5"];
	Node0xec23f0[shape=record, label="  %19 = add i32 %18, %6"];
	Node0xec2460[shape=record, label="  %20 = add i32 %19, %8"];
	Node0xec24d0[shape=record, label="  %21 = add i32 %20, %9"];
	Node0xec2540[shape=record, label="  %22 = sub i32 %21, %12"];
	Node0xec25b0[shape=record, label="  %23 = add i32 %22, %13"];
	Node0xec2620[shape=record, label="  %24 = add i32 %23, %15"];
	Node0xec2690[shape=record, label="  %25 = sub i32 %24, %16"];
	Node0xec2700[shape=record, label="  %26 = add i32 %25, %17"];
	Node0xec2770[shape=record, label="  %27 = sub i32 %26, %11"];
	Node0xec27e0[shape=record, label="  %28 = icmp eq i32 %3, %27"];
	Node0xe62268[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xec2c80[shape=record, label="  %30 = tail call i32 @puts(i8* nonnull dereferenceable(1) %29)"];
	Node0xec2cd0[shape=record, label="  ret void"];
	Node0xec1be0 -> Node0xec1c80;
	Node0xec1c80 -> Node0xec1d40;
	Node0xec1d40 -> Node0xec1db0;
	Node0xec1db0 -> Node0xec1e20;
	Node0xec1e20 -> Node0xec1e90;
	Node0xec1e90 -> Node0xec1f00;
	Node0xec1f00 -> Node0xec1f70;
	Node0xec1f70 -> Node0xec2010;
	Node0xec2010 -> Node0xec2080;
	Node0xec2080 -> Node0xec20f0;
	Node0xec20f0 -> Node0xec2160;
	Node0xec2160 -> Node0xec2200;
	Node0xec2200 -> Node0xec22a0;
	Node0xec22a0 -> Node0xec2310;
	Node0xec2310 -> Node0xec2380;
	Node0xec2380 -> Node0xec23f0;
	Node0xec23f0 -> Node0xec2460;
	Node0xec2460 -> Node0xec24d0;
	Node0xec24d0 -> Node0xec2540;
	Node0xec2540 -> Node0xec25b0;
	Node0xec25b0 -> Node0xec2620;
	Node0xec2620 -> Node0xec2690;
	Node0xec2690 -> Node0xec2700;
	Node0xec2700 -> Node0xec2770;
	Node0xec2770 -> Node0xec27e0;
	Node0xec27e0 -> Node0xe62268;
	Node0xe62268 -> Node0xec2c80;
	Node0xec2c80 -> Node0xec2cd0;
edge [color=red]
	Node0xec1c80 -> Node0xec1d40;
	Node0xec1c80 -> Node0xec1e20;
	Node0xec1f00 -> Node0xec1f70;
	Node0xec1f70 -> Node0xec2010;
	Node0xec2080 -> Node0xec20f0;
	Node0xec1d40 -> Node0xec2160;
	Node0xec2160 -> Node0xec2200;
	Node0xec1e90 -> Node0xec22a0;
	Node0xec1e20 -> Node0xec2310;
	Node0xec1c80 -> Node0xec2380;
	Node0xec1d40 -> Node0xec2380;
	Node0xec2380 -> Node0xec23f0;
	Node0xec1db0 -> Node0xec23f0;
	Node0xec23f0 -> Node0xec2460;
	Node0xec1e90 -> Node0xec2460;
	Node0xec2460 -> Node0xec24d0;
	Node0xec1f00 -> Node0xec24d0;
	Node0xec24d0 -> Node0xec2540;
	Node0xec2080 -> Node0xec2540;
	Node0xec2540 -> Node0xec25b0;
	Node0xec20f0 -> Node0xec25b0;
	Node0xec25b0 -> Node0xec2620;
	Node0xec2200 -> Node0xec2620;
	Node0xec2620 -> Node0xec2690;
	Node0xec22a0 -> Node0xec2690;
	Node0xec2690 -> Node0xec2700;
	Node0xec2310 -> Node0xec2700;
	Node0xec2700 -> Node0xec2770;
	Node0xec2010 -> Node0xec2770;
	Node0xec1be0 -> Node0xec27e0;
	Node0xec2770 -> Node0xec27e0;
	Node0xec27e0 -> Node0xe62268;
	Node0xe62268 -> Node0xec2c80;
}
