; ModuleID = '../.././c_source_file/1506_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1506_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = and i32 %1, %0
  %7 = xor i32 %2, %1
  %8 = xor i32 %7, -1
  %9 = or i32 %6, %8
  %10 = sub i32 %9, %4
  %11 = xor i32 %4, -1
  %12 = and i32 %4, %3
  %13 = shl i32 %12, 1
  %14 = xor i32 %13, -2
  %15 = xor i32 %4, %3
  %16 = and i32 %11, %3
  %17 = shl i32 %11, 1
  %18 = or i32 %4, %3
  %19 = xor i32 %18, -1
  %20 = shl i32 %16, 1
  %21 = mul i32 %12, -7
  %22 = xor i32 %0, -1
  %23 = xor i32 %1, -1
  %24 = and i32 %23, %2
  %25 = and i32 %24, %22
  %26 = or i32 %7, %22
  %27 = xor i32 %25, %26
  %28 = xor i32 %2, -1
  %29 = and i32 %24, %0
  %30 = or i32 %7, %0
  %31 = xor i32 %30, -1
  %32 = or i32 %29, %31
  %33 = and i32 %2, %1
  %34 = xor i32 %33, %0
  %35 = shl i32 %34, 1
  %36 = and i32 %23, %0
  %37 = xor i32 %36, -1
  %38 = xor i32 %37, %2
  %39 = and i32 %33, %0
  %40 = or i32 %2, %1
  %41 = xor i32 %40, %0
  %42 = or i32 %39, %41
  %43 = or i32 %28, %1
  %44 = xor i32 %43, -1
  %45 = or i32 %44, %0
  %46 = xor i32 %29, %30
  %47 = shl i32 %46, 1
  %48 = and i32 %2, %0
  %49 = xor i32 %1, %0
  %50 = xor i32 %49, -1
  %51 = or i32 %48, %50
  %52 = or i32 %1, %0
  %53 = and i32 %7, %52
  %54 = or i32 %28, %50
  %55 = or i32 %2, %0
  %56 = and i32 %55, %49
  %57 = xor i32 %7, %0
  %58 = or i32 %23, %0
  %59 = xor i32 %58, -1
  %60 = or i32 %28, %59
  %61 = and i32 %40, %22
  %62 = or i32 %39, %61
  %63 = xor i32 %2, %0
  %64 = xor i32 %63, -1
  %65 = and i32 %64, %37
  %66 = or i32 %23, %2
  %67 = and i32 %66, %0
  %68 = or i32 %25, %67
  %69 = xor i32 %40, -1
  %70 = or i32 %6, %69
  %71 = and i32 %7, %22
  %72 = or i32 %64, %50
  %73 = shl i32 %72, 1
  %74 = xor i32 %39, -1
  %75 = xor i32 %41, %74
  %76 = xor i32 %48, %1
  %77 = xor i32 %61, %74
  %78 = xor i32 %48, -1
  %79 = and i32 %49, %78
  %80 = and i32 %64, %50
  %81 = xor i32 %55, -1
  %82 = or i32 %6, %81
  %83 = and i32 %58, %28
  %84 = or i32 %48, %69
  %85 = xor i32 %33, -1
  %86 = and i32 %85, %22
  %87 = and i32 %63, %50
  %88 = and i32 %28, %0
  %89 = xor i32 %88, -1
  %90 = and i32 %89, %1
  %91 = and i32 %28, %37
  %92 = and i32 %50, %2
  %93 = xor i32 %59, %2
  %94 = and i32 %28, %1
  %95 = xor i32 %94, -1
  %96 = or i32 %95, %0
  %97 = xor i32 %52, -1
  %98 = or i32 %48, %97
  %99 = or i32 %59, %2
  %100 = or i32 %63, %36
  %101 = xor i32 %48, %95
  %102 = xor i32 %6, -1
  %103 = or i32 %94, %22
  %104 = or i32 %7, %36
  %105 = shl i32 %104, 1
  %106 = and i32 %85, %0
  %107 = and i32 %78, %23
  %108 = and i32 %55, %1
  %109 = shl i32 %108, 1
  %110 = xor i32 %71, %74
  %111 = and i32 %89, %50
  %112 = or i32 %28, %0
  %113 = xor i32 %112, -1
  %114 = or i32 %49, %28
  %115 = or i32 %88, %44
  %116 = and i32 %43, %22
  %117 = shl i32 %116, 1
  %118 = xor i32 %36, %85
  %119 = shl i32 %118, 1
  %120 = or i32 %64, %1
  %121 = or i32 %6, %28
  %122 = xor i32 %69, %0
  %123 = and i32 %8, %22
  %124 = xor i32 %112, %6
  %125 = and i32 %8, %37
  %126 = shl i32 %125, 1
  %127 = or i32 %48, %59
  %128 = or i32 %33, %36
  %129 = and i32 %43, %0
  %130 = and i32 %95, %0
  %131 = xor i32 %44, %0
  %132 = shl i32 %131, 1
  %133 = or i32 %36, %28
  %134 = shl i32 %133, 1
  %135 = or i32 %28, %97
  %136 = and i32 %7, %37
  %137 = and i32 %112, %50
  %138 = and i32 %33, %22
  %139 = and i32 %7, %0
  %140 = xor i32 %138, -1
  %141 = xor i32 %139, %140
  %142 = and i32 %37, %2
  %143 = and i32 %49, %89
  %144 = or i32 %69, %22
  %145 = and i32 %52, %2
  %146 = and i32 %58, %64
  %147 = shl i32 %146, 1
  %148 = or i32 %40, %22
  %149 = xor i32 %89, %1
  %150 = xor i32 %57, -1
  %151 = or i32 %39, %150
  %152 = or i32 %8, %97
  %153 = xor i32 %88, %43
  %154 = xor i32 %43, %6
  %155 = or i32 %88, %1
  %156 = or i32 %97, %2
  %157 = add i32 %33, 1
  %158 = and i32 %58, %2
  %159 = and i32 %89, %23
  %160 = shl i32 %63, 2
  %161 = or i32 %6, %64
  %162 = xor i32 %113, %1
  %163 = or i32 %8, %59
  %164 = xor i32 %6, %2
  %165 = or i32 %138, %139
  %166 = xor i32 %88, %85
  %167 = or i32 %33, %22
  %168 = shl i32 %167, 1
  %169 = or i32 %48, %1
  %170 = xor i32 %55, %6
  %171 = xor i32 %95, %0
  %172 = shl i32 %171, 1
  %173 = and i32 %58, %8
  %174 = and i32 %8, %0
  %175 = and i32 %63, %102
  %176 = xor i32 %40, %6
  %177 = and i32 %7, %58
  %178 = shl i32 %177, 1
  %179 = xor i32 %52, %2
  %180 = or i32 %8, %0
  %181 = xor i32 %43, %0
  %182 = or i32 %94, %0
  %183 = or i32 %44, %22
  %184 = and i32 %63, %49
  %185 = and i32 %40, %0
  %186 = or i32 %138, %185
  %187 = or i32 %29, %57
  %188 = or i32 %63, %49
  %189 = and i32 %63, %52
  %190 = or i32 %81, %1
  %191 = xor i32 %48, %58
  %192 = and i32 %49, %2
  %193 = or i32 %6, %2
  %194 = and i32 %112, %49
  %195 = or i32 %81, %50
  %196 = xor i32 %36, %95
  %197 = or i32 %88, %50
  %198 = or i32 %113, %23
  %199 = shl i32 %198, 1
  %200 = and i32 %49, %64
  %201 = or i32 %113, %50
  %202 = or i32 %63, %50
  %203 = or i32 %94, %36
  %204 = or i32 %48, %23
  %205 = or i32 %48, %94
  %206 = or i32 %33, %0
  %207 = and i32 %55, %50
  %208 = and i32 %112, %1
  %209 = xor i32 %94, %0
  %210 = or i32 %49, %113
  %211 = or i32 %85, %22
  %212 = and i32 %63, %58
  %213 = shl i32 %81, 1
  %214 = xor i32 %81, %1
  %215 = xor i32 %66, %0
  %216 = xor i32 %29, -1
  %217 = xor i32 %215, %216
  %218 = xor i32 %185, %140
  %219 = shl i32 %69, 1
  %220 = and i32 %78, %50
  %221 = or i32 %39, %71
  %222 = or i32 %49, %64
  %223 = xor i32 %58, %2
  %224 = and i32 %52, %64
  %225 = or i32 %50, %2
  %226 = shl i32 %225, 1
  %227 = or i32 %43, %0
  %228 = and i32 %63, %23
  %229 = and i32 %66, %22
  %230 = or i32 %29, %229
  %231 = shl i32 %230, 1
  %232 = xor i32 %229, %216
  %233 = or i32 %63, %6
  %234 = and i32 %95, %22
  %235 = and i32 %7, %102
  %236 = and i32 %78, %1
  %237 = or i32 %36, %2
  %238 = or i32 %40, %0
  %239 = or i32 %64, %23
  %240 = xor i32 %97, %2
  %241 = and i32 %8, %102
  %242 = shl i32 %241, 2
  %243 = or i32 %64, %97
  %244 = or i32 %29, %215
  %245 = and i32 %102, %2
  %246 = shl i32 %245, 2
  %247 = or i32 %7, %59
  %248 = shl i32 %247, 1
  %249 = or i32 %85, %0
  %250 = or i32 %48, %49
  %251 = or i32 %88, %49
  %252 = and i32 %28, %102
  %253 = or i32 %49, %81
  %254 = and i32 %64, %1
  %255 = or i32 %113, %1
  %256 = or i32 %49, %2
  %257 = or i32 %7, %6
  %258 = or i32 %64, %59
  %259 = or i32 %88, %23
  %260 = xor i32 %29, %150
  %261 = or i32 %81, %23
  %262 = and i32 %52, %28
  %263 = and i32 %63, %37
  %264 = and i32 %64, %102
  %265 = xor i32 %112, %1
  %266 = xor i32 %48, %40
  %267 = shl i32 %266, 1
  %268 = or i32 %63, %97
  %269 = and i32 %49, %28
  %270 = and i32 %112, %23
  %271 = and i32 %52, %8
  %272 = shl i32 %30, 1
  %273 = xor i32 %39, %57
  %274 = or i32 %88, %33
  %275 = or i32 %6, %44
  %276 = or i32 %69, %0
  %277 = and i32 %63, %1
  %278 = or i32 %63, %23
  %279 = or i32 %6, %113
  %280 = and i32 %28, %50
  %281 = or i32 %36, %64
  %282 = or i32 %36, %8
  %283 = or i32 %43, %22
  %284 = xor i32 %8, %0
  %285 = or i32 %63, %59
  %286 = and i32 %69, %22
  %287 = mul i32 %286, 20
  %288 = and i32 %94, %22
  %289 = and i32 %69, %0
  %290 = and i32 %94, %0
  %291 = mul i32 %290, 9
  %292 = and i32 %44, %22
  %293 = mul i32 %292, 25
  %294 = mul i32 %138, 17
  %295 = and i32 %44, %0
  %296 = mul i32 %295, 21
  %297 = add i32 %36, %28
  %298 = add i32 %297, %280
  %299 = add i32 %298, %89
  %300 = add i32 %299, %78
  %301 = add i32 %300, %64
  %302 = add i32 %301, %8
  %303 = add i32 %302, %93
  %304 = add i32 %303, %44
  %305 = add i32 %304, %274
  %306 = add i32 %305, %197
  %307 = add i32 %306, %196
  %308 = add i32 %307, %189
  %309 = add i32 %308, %100
  %310 = add i32 %309, %96
  %311 = add i32 %310, %165
  %312 = add i32 %311, %273
  %313 = add i32 %312, %42
  %314 = add i32 %313, %27
  %315 = shl i32 %314, 1
  %316 = sub i32 %185, %282
  %317 = sub i32 %316, %124
  %318 = sub i32 %317, %107
  %319 = sub i32 %318, %84
  %320 = add i32 %319, %19
  %321 = mul i32 %320, 3
  %322 = sub i32 %238, %192
  %323 = add i32 %322, %39
  %324 = sub i32 %323, %159
  %325 = mul i32 %324, 5
  %326 = add i32 %3, 1073741823
  %327 = add i32 %326, %80
  %328 = shl i32 %327, 2
  %329 = shl i32 %0, 1
  %330 = add i32 %329, 2
  %331 = add i32 %330, %37
  %332 = add i32 %331, %59
  %333 = add i32 %332, %102
  %334 = sub i32 %333, %58
  %335 = add i32 %334, %2
  %336 = sub i32 %335, %6
  %337 = add i32 %336, %38
  %338 = sub i32 %337, %54
  %339 = sub i32 %338, %60
  %340 = sub i32 %339, %40
  %341 = sub i32 %340, %83
  %342 = add i32 %341, %91
  %343 = sub i32 %342, %48
  %344 = add i32 %343, %92
  %345 = sub i32 %344, %55
  %346 = sub i32 %345, %99
  %347 = add i32 %346, %114
  %348 = sub i32 %347, %121
  %349 = sub i32 %348, %7
  %350 = add i32 %349, %135
  %351 = sub i32 %350, %142
  %352 = sub i32 %351, %145
  %353 = sub i32 %352, %156
  %354 = add i32 %353, %157
  %355 = add i32 %354, %158
  %356 = sub i32 %355, %164
  %357 = sub i32 %356, %94
  %358 = add i32 %357, %179
  %359 = sub i32 %358, %193
  %360 = add i32 %359, %88
  %361 = sub i32 %360, %223
  %362 = add i32 %361, %33
  %363 = sub i32 %362, %237
  %364 = sub i32 %363, %240
  %365 = sub i32 %364, %252
  %366 = add i32 %365, %256
  %367 = add i32 %366, %43
  %368 = add i32 %367, %262
  %369 = sub i32 %368, %269
  %370 = add i32 %369, %45
  %371 = add i32 %370, %51
  %372 = add i32 %371, %53
  %373 = add i32 %372, %56
  %374 = add i32 %373, %57
  %375 = add i32 %374, %65
  %376 = add i32 %375, %70
  %377 = add i32 %376, %71
  %378 = add i32 %377, %76
  %379 = add i32 %378, %79
  %380 = add i32 %379, %82
  %381 = sub i32 %380, %86
  %382 = sub i32 %381, %87
  %383 = sub i32 %382, %90
  %384 = add i32 %383, %98
  %385 = add i32 %384, %101
  %386 = add i32 %385, %103
  %387 = sub i32 %386, %106
  %388 = sub i32 %387, %111
  %389 = add i32 %388, %115
  %390 = sub i32 %389, %120
  %391 = add i32 %390, %122
  %392 = add i32 %391, %123
  %393 = sub i32 %392, %127
  %394 = sub i32 %393, %128
  %395 = sub i32 %394, %129
  %396 = sub i32 %395, %130
  %397 = sub i32 %396, %134
  %398 = sub i32 %397, %136
  %399 = add i32 %398, %137
  %400 = add i32 %399, %143
  %401 = sub i32 %400, %144
  %402 = add i32 %401, %148
  %403 = sub i32 %402, %149
  %404 = add i32 %403, %152
  %405 = add i32 %404, %139
  %406 = add i32 %405, %153
  %407 = add i32 %406, %154
  %408 = sub i32 %407, %155
  %409 = sub i32 %408, %160
  %410 = sub i32 %409, %161
  %411 = sub i32 %410, %162
  %412 = add i32 %411, %163
  %413 = sub i32 %412, %166
  %414 = add i32 %413, %169
  %415 = sub i32 %414, %170
  %416 = sub i32 %415, %173
  %417 = add i32 %416, %174
  %418 = add i32 %417, %175
  %419 = add i32 %418, %176
  %420 = sub i32 %419, %180
  %421 = add i32 %420, %181
  %422 = add i32 %421, %182
  %423 = sub i32 %422, %183
  %424 = add i32 %423, %184
  %425 = add i32 %424, %188
  %426 = add i32 %425, %190
  %427 = add i32 %426, %191
  %428 = add i32 %427, %194
  %429 = sub i32 %428, %195
  %430 = sub i32 %429, %200
  %431 = sub i32 %430, %201
  %432 = sub i32 %431, %202
  %433 = sub i32 %432, %203
  %434 = add i32 %433, %204
  %435 = add i32 %434, %205
  %436 = add i32 %435, %206
  %437 = sub i32 %436, %207
  %438 = sub i32 %437, %208
  %439 = sub i32 %438, %209
  %440 = add i32 %439, %210
  %441 = add i32 %440, %211
  %442 = sub i32 %441, %212
  %443 = sub i32 %442, %213
  %444 = sub i32 %443, %214
  %445 = sub i32 %444, %219
  %446 = sub i32 %445, %220
  %447 = sub i32 %446, %222
  %448 = sub i32 %447, %224
  %449 = sub i32 %448, %226
  %450 = add i32 %449, %227
  %451 = add i32 %450, %228
  %452 = sub i32 %451, %233
  %453 = add i32 %452, %234
  %454 = sub i32 %453, %235
  %455 = sub i32 %454, %236
  %456 = sub i32 %455, %61
  %457 = add i32 %456, %239
  %458 = sub i32 %457, %243
  %459 = sub i32 %458, %246
  %460 = add i32 %459, %249
  %461 = add i32 %460, %26
  %462 = sub i32 %461, %250
  %463 = add i32 %462, %251
  %464 = sub i32 %463, %253
  %465 = add i32 %464, %254
  %466 = add i32 %465, %255
  %467 = sub i32 %466, %257
  %468 = sub i32 %467, %258
  %469 = add i32 %468, %259
  %470 = sub i32 %469, %261
  %471 = sub i32 %470, %263
  %472 = add i32 %471, %264
  %473 = add i32 %472, %265
  %474 = add i32 %473, %268
  %475 = sub i32 %474, %270
  %476 = sub i32 %475, %271
  %477 = sub i32 %476, %275
  %478 = sub i32 %477, %276
  %479 = sub i32 %478, %41
  %480 = add i32 %479, %277
  %481 = add i32 %480, %278
  %482 = sub i32 %481, %279
  %483 = add i32 %482, %281
  %484 = add i32 %483, %283
  %485 = add i32 %484, %284
  %486 = sub i32 %485, %285
  %487 = add i32 %486, %288
  %488 = add i32 %487, %289
  %489 = sub i32 %488, %15
  %490 = add i32 %489, %16
  %491 = sub i32 %490, %17
  %492 = add i32 %491, %18
  %493 = sub i32 %492, %32
  %494 = sub i32 %493, %35
  %495 = sub i32 %494, %62
  %496 = add i32 %495, %68
  %497 = sub i32 %496, %73
  %498 = sub i32 %497, %75
  %499 = add i32 %498, %77
  %500 = sub i32 %499, %105
  %501 = sub i32 %500, %109
  %502 = sub i32 %501, %110
  %503 = sub i32 %502, %117
  %504 = sub i32 %503, %119
  %505 = sub i32 %504, %126
  %506 = sub i32 %505, %132
  %507 = add i32 %506, %141
  %508 = sub i32 %507, %147
  %509 = sub i32 %508, %151
  %510 = sub i32 %509, %168
  %511 = sub i32 %510, %172
  %512 = sub i32 %511, %178
  %513 = sub i32 %512, %186
  %514 = sub i32 %513, %187
  %515 = sub i32 %514, %199
  %516 = add i32 %515, %217
  %517 = sub i32 %516, %218
  %518 = sub i32 %517, %221
  %519 = sub i32 %518, %232
  %520 = sub i32 %519, %242
  %521 = sub i32 %520, %244
  %522 = sub i32 %521, %248
  %523 = sub i32 %522, %260
  %524 = sub i32 %523, %267
  %525 = sub i32 %524, %272
  %526 = add i32 %525, %287
  %527 = add i32 %526, %291
  %528 = add i32 %527, %293
  %529 = add i32 %528, %294
  %530 = add i32 %529, %296
  %531 = sub i32 %530, %20
  %532 = add i32 %531, %21
  %533 = sub i32 %532, %47
  %534 = sub i32 %533, %231
  %535 = sub i32 %534, %14
  %536 = add i32 %535, %328
  %537 = add i32 %536, %325
  %538 = add i32 %537, %321
  %539 = add i32 %538, %315
  %540 = icmp eq i32 %10, %539
  %541 = select i1 %540, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %542 = tail call i32 @puts(i8* nonnull dereferenceable(1) %541)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
