digraph "DFG for'main' function" {
	Node0x1ade868[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ade8e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ade978[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ade9d8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1adea88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1adeeb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1adef98[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1adf098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1adf158[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1adf208[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1adf2c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1adf378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1ad9a50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1adf578[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ae04e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ae0b58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ae0bb8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1ae0c30[shape=record, label="  %14 = add i32 %12, 1"];
	Node0x1ae0ca0[shape=record, label="  %15 = xor i32 %11, -1"];
	Node0x1ae0d10[shape=record, label="  %16 = or i32 %12, %15"];
	Node0x1ae0d80[shape=record, label="  %17 = sub i32 %14, %16"];
	Node0x1ae0df0[shape=record, label="  %18 = xor i32 %10, -1"];
	Node0x1ae0e60[shape=record, label="  %19 = and i32 %13, %18"];
	Node0x1ae0ed0[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x1ae0f40[shape=record, label="  %21 = add i32 %17, %20"];
	Node0x1ae0fb0[shape=record, label="  %22 = or i32 %13, %18"];
	Node0x1ae1020[shape=record, label="  %23 = sub i32 %21, %22"];
	Node0x1ae1090[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x1ae1100[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x1ae1170[shape=record, label="  %26 = xor i32 %12, %15"];
	Node0x1ae11e0[shape=record, label="  %27 = or i32 %12, %11"];
	Node0x1ae1250[shape=record, label="  %28 = shl i32 %12, 1"];
	Node0x1ae12c0[shape=record, label="  %29 = shl i32 %11, 1"];
	Node0x1ae1330[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0x1ae13a0[shape=record, label="  %31 = and i32 %12, %15"];
	Node0x1ae1410[shape=record, label="  %32 = shl i32 %24, 1"];
	Node0x1ae1480[shape=record, label="  %33 = shl i32 %22, 1"];
	Node0x1ae14f0[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x1ae1560[shape=record, label="  %35 = and i32 %13, %10"];
	Node0x1ae15d0[shape=record, label="  %36 = sub i32 2, %10"];
	Node0x1ae1640[shape=record, label="  %37 = add i32 %36, %11"];
	Node0x1ae16b0[shape=record, label="  %38 = add i32 %37, %26"];
	Node0x1ae1720[shape=record, label="  %39 = add i32 %38, %25"];
	Node0x1ae1790[shape=record, label="  %40 = sub i32 %39, %27"];
	Node0x1ae1800[shape=record, label="  %41 = add i32 %40, %28"];
	Node0x1ae1870[shape=record, label="  %42 = sub i32 %41, %30"];
	Node0x1ae18e0[shape=record, label="  %43 = add i32 %42, %31"];
	Node0x1ae1950[shape=record, label="  %44 = sub i32 %43, %32"];
	Node0x1ae19c0[shape=record, label="  %45 = sub i32 %44, %19"];
	Node0x1ae1a30[shape=record, label="  %46 = add i32 %45, %35"];
	Node0x1ae1aa0[shape=record, label="  %47 = add i32 %46, %34"];
	Node0x1ae1b10[shape=record, label="  %48 = icmp eq i32 %23, %47"];
	Node0x1a7e8b8[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ae1ba0[shape=record, label="  %50 = call i32 @puts(i8* nonnull dereferenceable(1) %49) #5"];
	Node0x1ae1e48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1ae1fa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1ae20b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ae21c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ae2288[shape=record, label="  ret i32 0"];
	Node0x1ade868 -> Node0x1ade8e8;
	Node0x1ade8e8 -> Node0x1ade978;
	Node0x1ade978 -> Node0x1ade9d8;
	Node0x1ade9d8 -> Node0x1adea88;
	Node0x1adea88 -> Node0x1adeeb8;
	Node0x1adeeb8 -> Node0x1adef98;
	Node0x1adef98 -> Node0x1adf098;
	Node0x1adf098 -> Node0x1adf158;
	Node0x1adf158 -> Node0x1adf208;
	Node0x1adf208 -> Node0x1adf2c8;
	Node0x1adf2c8 -> Node0x1adf378;
	Node0x1adf378 -> Node0x1ad9a50;
	Node0x1ad9a50 -> Node0x1adf578;
	Node0x1adf578 -> Node0x1ae04e8;
	Node0x1ae04e8 -> Node0x1ae0b58;
	Node0x1ae0b58 -> Node0x1ae0bb8;
	Node0x1ae0bb8 -> Node0x1ae0c30;
	Node0x1ae0c30 -> Node0x1ae0ca0;
	Node0x1ae0ca0 -> Node0x1ae0d10;
	Node0x1ae0d10 -> Node0x1ae0d80;
	Node0x1ae0d80 -> Node0x1ae0df0;
	Node0x1ae0df0 -> Node0x1ae0e60;
	Node0x1ae0e60 -> Node0x1ae0ed0;
	Node0x1ae0ed0 -> Node0x1ae0f40;
	Node0x1ae0f40 -> Node0x1ae0fb0;
	Node0x1ae0fb0 -> Node0x1ae1020;
	Node0x1ae1020 -> Node0x1ae1090;
	Node0x1ae1090 -> Node0x1ae1100;
	Node0x1ae1100 -> Node0x1ae1170;
	Node0x1ae1170 -> Node0x1ae11e0;
	Node0x1ae11e0 -> Node0x1ae1250;
	Node0x1ae1250 -> Node0x1ae12c0;
	Node0x1ae12c0 -> Node0x1ae1330;
	Node0x1ae1330 -> Node0x1ae13a0;
	Node0x1ae13a0 -> Node0x1ae1410;
	Node0x1ae1410 -> Node0x1ae1480;
	Node0x1ae1480 -> Node0x1ae14f0;
	Node0x1ae14f0 -> Node0x1ae1560;
	Node0x1ae1560 -> Node0x1ae15d0;
	Node0x1ae15d0 -> Node0x1ae1640;
	Node0x1ae1640 -> Node0x1ae16b0;
	Node0x1ae16b0 -> Node0x1ae1720;
	Node0x1ae1720 -> Node0x1ae1790;
	Node0x1ae1790 -> Node0x1ae1800;
	Node0x1ae1800 -> Node0x1ae1870;
	Node0x1ae1870 -> Node0x1ae18e0;
	Node0x1ae18e0 -> Node0x1ae1950;
	Node0x1ae1950 -> Node0x1ae19c0;
	Node0x1ae19c0 -> Node0x1ae1a30;
	Node0x1ae1a30 -> Node0x1ae1aa0;
	Node0x1ae1aa0 -> Node0x1ae1b10;
	Node0x1ae1b10 -> Node0x1a7e8b8;
	Node0x1a7e8b8 -> Node0x1ae1ba0;
	Node0x1ae1ba0 -> Node0x1ae1e48;
	Node0x1ae1e48 -> Node0x1ae1fa8;
	Node0x1ae1fa8 -> Node0x1ae20b8;
	Node0x1ae20b8 -> Node0x1ae21c8;
	Node0x1ae21c8 -> Node0x1ae2288;
edge [color=red]
	Node0x1ade868 -> Node0x1adea88;
	Node0x1adea88 -> Node0x1adeeb8;
	Node0x1ade8e8 -> Node0x1adef98;
	Node0x1adef98 -> Node0x1adf098;
	Node0x1ade978 -> Node0x1adf158;
	Node0x1adf158 -> Node0x1adf208;
	Node0x1ade9d8 -> Node0x1adf2c8;
	Node0x1adf2c8 -> Node0x1adf378;
	Node0x1ade868 -> Node0x1ad9a50;
	Node0x1ade8e8 -> Node0x1ad9a50;
	Node0x1ade978 -> Node0x1ad9a50;
	Node0x1ade9d8 -> Node0x1ad9a50;
	Node0x1ade868 -> Node0x1adf578;
	Node0x1ade8e8 -> Node0x1ae04e8;
	Node0x1ade978 -> Node0x1ae0b58;
	Node0x1ade9d8 -> Node0x1ae0bb8;
	Node0x1ae0b58 -> Node0x1ae0c30;
	Node0x1ae04e8 -> Node0x1ae0ca0;
	Node0x1ae0b58 -> Node0x1ae0d10;
	Node0x1ae0ca0 -> Node0x1ae0d10;
	Node0x1ae0c30 -> Node0x1ae0d80;
	Node0x1ae0d10 -> Node0x1ae0d80;
	Node0x1adf578 -> Node0x1ae0df0;
	Node0x1ae0bb8 -> Node0x1ae0e60;
	Node0x1ae0df0 -> Node0x1ae0e60;
	Node0x1ae0e60 -> Node0x1ae0ed0;
	Node0x1ae0d80 -> Node0x1ae0f40;
	Node0x1ae0ed0 -> Node0x1ae0f40;
	Node0x1ae0bb8 -> Node0x1ae0fb0;
	Node0x1ae0df0 -> Node0x1ae0fb0;
	Node0x1ae0f40 -> Node0x1ae1020;
	Node0x1ae0fb0 -> Node0x1ae1020;
	Node0x1ae0b58 -> Node0x1ae1090;
	Node0x1ae04e8 -> Node0x1ae1090;
	Node0x1ae1090 -> Node0x1ae1100;
	Node0x1ae0b58 -> Node0x1ae1170;
	Node0x1ae0ca0 -> Node0x1ae1170;
	Node0x1ae0b58 -> Node0x1ae11e0;
	Node0x1ae04e8 -> Node0x1ae11e0;
	Node0x1ae0b58 -> Node0x1ae1250;
	Node0x1ae04e8 -> Node0x1ae12c0;
	Node0x1ae12c0 -> Node0x1ae1330;
	Node0x1ae0b58 -> Node0x1ae13a0;
	Node0x1ae0ca0 -> Node0x1ae13a0;
	Node0x1ae1090 -> Node0x1ae1410;
	Node0x1ae0fb0 -> Node0x1ae1480;
	Node0x1ae1480 -> Node0x1ae14f0;
	Node0x1ae0bb8 -> Node0x1ae1560;
	Node0x1adf578 -> Node0x1ae1560;
	Node0x1adf578 -> Node0x1ae15d0;
	Node0x1ae15d0 -> Node0x1ae1640;
	Node0x1ae04e8 -> Node0x1ae1640;
	Node0x1ae1640 -> Node0x1ae16b0;
	Node0x1ae1170 -> Node0x1ae16b0;
	Node0x1ae16b0 -> Node0x1ae1720;
	Node0x1ae1100 -> Node0x1ae1720;
	Node0x1ae1720 -> Node0x1ae1790;
	Node0x1ae11e0 -> Node0x1ae1790;
	Node0x1ae1790 -> Node0x1ae1800;
	Node0x1ae1250 -> Node0x1ae1800;
	Node0x1ae1800 -> Node0x1ae1870;
	Node0x1ae1330 -> Node0x1ae1870;
	Node0x1ae1870 -> Node0x1ae18e0;
	Node0x1ae13a0 -> Node0x1ae18e0;
	Node0x1ae18e0 -> Node0x1ae1950;
	Node0x1ae1410 -> Node0x1ae1950;
	Node0x1ae1950 -> Node0x1ae19c0;
	Node0x1ae0e60 -> Node0x1ae19c0;
	Node0x1ae19c0 -> Node0x1ae1a30;
	Node0x1ae1560 -> Node0x1ae1a30;
	Node0x1ae1a30 -> Node0x1ae1aa0;
	Node0x1ae14f0 -> Node0x1ae1aa0;
	Node0x1ae1020 -> Node0x1ae1b10;
	Node0x1ae1aa0 -> Node0x1ae1b10;
	Node0x1ae1b10 -> Node0x1a7e8b8;
	Node0x1a7e8b8 -> Node0x1ae1ba0;
	Node0x1adf2c8 -> Node0x1ae1e48;
	Node0x1adf158 -> Node0x1ae1fa8;
	Node0x1adef98 -> Node0x1ae20b8;
	Node0x1adea88 -> Node0x1ae21c8;
}
