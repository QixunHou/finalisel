digraph "DFG for'main' function" {
	Node0x165c698[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x165c718[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x165c7a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x165c808[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x165cc88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x165cd68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x165ce68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x165cf28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x165cfd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x165d238[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x165d2f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x165d458[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x165d4b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1664810[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1664a18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1664b78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1664c88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1664d48[shape=record, label="  ret i32 0"];
	Node0x165c698 -> Node0x165c718;
	Node0x165c718 -> Node0x165c7a8;
	Node0x165c7a8 -> Node0x165c808;
	Node0x165c808 -> Node0x165cc88;
	Node0x165cc88 -> Node0x165cd68;
	Node0x165cd68 -> Node0x165ce68;
	Node0x165ce68 -> Node0x165cf28;
	Node0x165cf28 -> Node0x165cfd8;
	Node0x165cfd8 -> Node0x165d238;
	Node0x165d238 -> Node0x165d2f8;
	Node0x165d2f8 -> Node0x165d458;
	Node0x165d458 -> Node0x165d4b8;
	Node0x165d4b8 -> Node0x1664810;
	Node0x1664810 -> Node0x1664a18;
	Node0x1664a18 -> Node0x1664b78;
	Node0x1664b78 -> Node0x1664c88;
	Node0x1664c88 -> Node0x1664d48;
edge [color=red]
	Node0x165c698 -> Node0x165c808;
	Node0x165c808 -> Node0x165cc88;
	Node0x165c718 -> Node0x165cd68;
	Node0x165cd68 -> Node0x165ce68;
	Node0x165c7a8 -> Node0x165cf28;
	Node0x165cf28 -> Node0x165cfd8;
	Node0x165c698 -> Node0x165d238;
	Node0x165c718 -> Node0x165d238;
	Node0x165c7a8 -> Node0x165d238;
	Node0x165c698 -> Node0x165d2f8;
	Node0x165c718 -> Node0x165d458;
	Node0x165c7a8 -> Node0x165d4b8;
	Node0x165d2f8 -> Node0x1664810;
	Node0x165d458 -> Node0x1664810;
	Node0x165d4b8 -> Node0x1664810;
	Node0x165cf28 -> Node0x1664a18;
	Node0x165cd68 -> Node0x1664b78;
	Node0x165c808 -> Node0x1664c88;
}
