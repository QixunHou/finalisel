; ModuleID = '../.././c_source_file/0396_path_condition_crackme.c'
source_filename = "../.././c_source_file/0396_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %2, %0
  %5 = xor i32 %1, -1
  %6 = or i32 %5, %0
  %7 = xor i32 %4, %6
  %8 = mul i32 %7, -2
  %9 = and i32 %1, %0
  %10 = xor i32 %2, %0
  %11 = xor i32 %10, -1
  %12 = or i32 %9, %11
  %13 = and i32 %5, %0
  %14 = or i32 %13, %11
  %15 = xor i32 %1, %0
  %16 = or i32 %2, %0
  %17 = xor i32 %16, -1
  %18 = or i32 %17, %1
  %19 = and i32 %2, %1
  %20 = and i32 %19, %0
  %21 = xor i32 %0, -1
  %22 = xor i32 %2, %1
  %23 = and i32 %22, %21
  %24 = or i32 %20, %23
  %25 = xor i32 %22, -1
  %26 = xor i32 %25, %0
  %27 = xor i32 %19, %0
  %28 = xor i32 %2, -1
  %29 = or i32 %28, %0
  %30 = xor i32 %29, -1
  %31 = or i32 %15, %30
  %32 = or i32 %9, %28
  %33 = and i32 %10, %15
  %34 = xor i32 %6, -1
  %35 = and i32 %15, %2
  %36 = xor i32 %19, -1
  %37 = xor i32 %13, %36
  %38 = xor i32 %15, -1
  %39 = or i32 %17, %38
  %40 = or i32 %2, %1
  %41 = xor i32 %40, %0
  %42 = or i32 %30, %5
  %43 = and i32 %5, %2
  %44 = and i32 %43, %0
  %45 = or i32 %22, %0
  %46 = xor i32 %45, -1
  %47 = or i32 %44, %46
  %48 = or i32 %11, %38
  %49 = and i32 %15, %11
  %50 = and i32 %28, %1
  %51 = shl i32 %50, 1
  %52 = xor i32 %50, -1
  %53 = or i32 %52, %0
  %54 = xor i32 %9, -1
  %55 = and i32 %22, %54
  %56 = and i32 %28, %0
  %57 = or i32 %56, %15
  %58 = or i32 %36, %0
  %59 = or i32 %9, %25
  %60 = xor i32 %4, %40
  %61 = or i32 %19, %13
  %62 = and i32 %43, %21
  %63 = or i32 %5, %2
  %64 = and i32 %63, %0
  %65 = or i32 %62, %64
  %66 = or i32 %10, %38
  %67 = or i32 %28, %1
  %68 = xor i32 %13, -1
  %69 = and i32 %28, %68
  %70 = xor i32 %4, -1
  %71 = and i32 %70, %5
  %72 = and i32 %52, %0
  %73 = and i32 %70, %1
  %74 = and i32 %11, %38
  %75 = and i32 %40, %21
  %76 = xor i32 %20, -1
  %77 = xor i32 %75, %76
  %78 = and i32 %19, %21
  %79 = and i32 %40, %0
  %80 = xor i32 %78, -1
  %81 = xor i32 %79, %80
  %82 = xor i32 %67, -1
  %83 = xor i32 %82, %0
  %84 = or i32 %1, %0
  %85 = xor i32 %84, -1
  %86 = or i32 %85, %2
  %87 = xor i32 %17, %1
  %88 = shl i32 %1, 1
  %89 = xor i32 %88, -1
  %90 = xor i32 %56, %36
  %91 = or i32 %50, %0
  %92 = add i32 %19, 1
  %93 = and i32 %29, %5
  %94 = shl i32 %93, 1
  %95 = and i32 %22, %0
  %96 = or i32 %78, %95
  %97 = or i32 %25, %85
  %98 = xor i32 %56, -1
  %99 = and i32 %15, %98
  %100 = or i32 %28, %85
  %101 = or i32 %9, %2
  %102 = or i32 %11, %34
  %103 = xor i32 %85, %2
  %104 = and i32 %84, %2
  %105 = or i32 %9, %17
  %106 = or i32 %25, %21
  %107 = xor i32 %29, %1
  %108 = xor i32 %4, %84
  %109 = shl i32 %108, 1
  %110 = and i32 %84, %28
  %111 = xor i32 %4, %52
  %112 = or i32 %15, %28
  %113 = shl i32 %112, 1
  %114 = or i32 %13, %25
  %115 = and i32 %6, %11
  %116 = and i32 %84, %25
  %117 = or i32 %17, %5
  %118 = shl i32 %117, 1
  %119 = and i32 %54, %2
  %120 = and i32 %16, %5
  %121 = shl i32 %120, 1
  %122 = xor i32 %22, %0
  %123 = xor i32 %122, -1
  %124 = or i32 %20, %123
  %125 = xor i32 %40, -1
  %126 = or i32 %4, %125
  %127 = and i32 %98, %1
  %128 = and i32 %25, %54
  %129 = and i32 %15, %28
  %130 = xor i32 %67, %9
  %131 = xor i32 %63, -1
  %132 = or i32 %131, %0
  %133 = xor i32 %44, %132
  %134 = or i32 %4, %85
  %135 = or i32 %82, %0
  %136 = shl i32 %17, 1
  %137 = or i32 %4, %15
  %138 = xor i32 %63, %0
  %139 = xor i32 %138, 2147483647
  %140 = xor i32 %139, %44
  %141 = shl i32 %140, 1
  %142 = and i32 %11, %54
  %143 = or i32 %4, %38
  %144 = and i32 %22, %84
  %145 = or i32 %36, %21
  %146 = xor i32 %52, %0
  %147 = xor i32 %125, %0
  %148 = xor i32 %44, %123
  %149 = and i32 %6, %2
  %150 = or i32 %22, %9
  %151 = or i32 %22, %34
  %152 = or i32 %56, %82
  %153 = and i32 %28, %54
  %154 = or i32 %22, %13
  %155 = xor i32 %95, %80
  %156 = and i32 %25, %0
  %157 = xor i32 %23, %76
  %158 = or i32 %10, %15
  %159 = shl i32 %158, 1
  %160 = or i32 %44, %138
  %161 = and i32 %6, %28
  %162 = or i32 %19, %0
  %163 = xor i32 %6, %2
  %164 = and i32 %36, %0
  %165 = and i32 %67, %0
  %166 = or i32 %56, %38
  %167 = and i32 %11, %1
  %168 = and i32 %10, %1
  %169 = or i32 %9, %82
  %170 = or i32 %50, %13
  %171 = or i32 %28, %38
  %172 = and i32 %22, %68
  %173 = or i32 %28, %34
  %174 = add i32 %40, 1
  %175 = or i32 %11, %1
  %176 = xor i32 %20, %122
  %177 = or i32 %40, %21
  %178 = and i32 %10, %84
  %179 = shl i32 %178, 1
  %180 = or i32 %10, %5
  %181 = and i32 %25, %21
  %182 = or i32 %22, %85
  %183 = xor i32 %16, %1
  %184 = or i32 %38, %2
  %185 = xor i32 %40, %9
  %186 = and i32 %11, %68
  %187 = and i32 %25, %68
  %188 = xor i32 %4, %1
  %189 = shl i32 %56, 1
  %190 = or i32 %20, %41
  %191 = and i32 %11, %5
  %192 = xor i32 %56, %1
  %193 = or i32 %11, %5
  %194 = xor i32 %30, %1
  %195 = and i32 %98, %38
  %196 = and i32 %52, %21
  %197 = shl i32 %196, 2
  %198 = xor i32 %50, %0
  %199 = xor i32 %34, %2
  %200 = and i32 %38, %2
  %201 = xor i32 %9, %2
  %202 = or i32 %9, %125
  %203 = or i32 %10, %34
  %204 = xor i32 %67, %0
  %205 = or i32 %22, %21
  %206 = xor i32 %13, %2
  %207 = or i32 %25, %0
  %208 = and i32 %6, %25
  %209 = and i32 %70, %38
  %210 = or i32 %40, %0
  %211 = shl i32 %210, 1
  %212 = or i32 %125, %21
  %213 = and i32 %16, %1
  %214 = shl i32 %213, 1
  %215 = or i32 %52, %21
  %216 = or i32 %34, %2
  %217 = or i32 %50, %21
  %218 = and i32 %68, %2
  %219 = add i32 %4, 1
  %220 = xor i32 %41, 2147483647
  %221 = xor i32 %220, %20
  %222 = shl i32 %221, 1
  %223 = shl i32 %38, 1
  %224 = or i32 %13, %2
  %225 = xor i32 %13, %52
  %226 = and i32 %10, %5
  %227 = or i32 %15, %17
  %228 = or i32 %15, %2
  %229 = xor i32 %56, %67
  %230 = or i32 %67, %21
  %231 = xor i32 %64, 2147483647
  %232 = xor i32 %231, %62
  %233 = shl i32 %232, 1
  %234 = or i32 %20, %75
  %235 = and i32 %10, %54
  %236 = xor i32 %98, %1
  %237 = or i32 %44, %122
  %238 = or i32 %15, %11
  %239 = xor i32 %70, %1
  %240 = shl i32 %239, 1
  %241 = or i32 %19, %21
  %242 = and i32 %29, %15
  %243 = or i32 %78, %79
  %244 = or i32 %30, %38
  %245 = shl i32 %244, 1
  %246 = or i32 %11, %85
  %247 = and i32 %15, %70
  %248 = and i32 %16, %38
  %249 = or i32 %4, %50
  %250 = or i32 %4, %5
  %251 = or i32 %125, %0
  %252 = or i32 %30, %1
  %253 = or i32 %10, %13
  %254 = and i32 %10, %6
  %255 = and i32 %125, %21
  %256 = and i32 %50, %21
  %257 = shl i32 %256, 2
  %258 = and i32 %125, %0
  %259 = shl i32 %258, 1
  %260 = and i32 %50, %0
  %261 = shl i32 %260, 2
  %262 = and i32 %82, %21
  %263 = mul i32 %78, -7
  %264 = and i32 %82, %0
  %265 = mul i32 %264, -9
  %266 = add i32 %82, %34
  %267 = add i32 %266, %98
  %268 = add i32 %267, %25
  %269 = add i32 %268, %163
  %270 = add i32 %269, %217
  %271 = add i32 %270, %250
  %272 = add i32 %271, %212
  %273 = add i32 %272, %205
  %274 = add i32 %273, %202
  %275 = add i32 %274, %195
  %276 = add i32 %275, %45
  %277 = add i32 %276, %181
  %278 = add i32 %277, %145
  %279 = add i32 %278, %83
  %280 = add i32 %279, %53
  %281 = add i32 %280, %48
  %282 = shl i32 %281, 1
  %283 = add i32 %58, %104
  %284 = sub i32 %187, %283
  %285 = add i32 %284, %37
  %286 = mul i32 %285, 5
  %287 = add i32 %247, %208
  %288 = add i32 %287, %204
  %289 = mul i32 %288, -3
  %290 = add i32 %262, %255
  %291 = mul i32 %290, -15
  %292 = add i32 %40, %67
  %293 = shl i32 %292, 2
  %294 = add i32 %5, %0
  %295 = add i32 %294, %15
  %296 = add i32 %295, %89
  %297 = sub i32 %296, %9
  %298 = add i32 %297, %68
  %299 = sub i32 %298, %2
  %300 = add i32 %299, %54
  %301 = add i32 %300, %6
  %302 = sub i32 %301, %13
  %303 = add i32 %302, %28
  %304 = sub i32 %303, %32
  %305 = sub i32 %304, %35
  %306 = sub i32 %305, %16
  %307 = sub i32 %306, %69
  %308 = add i32 %307, %86
  %309 = add i32 %308, %19
  %310 = add i32 %309, %92
  %311 = add i32 %310, %100
  %312 = add i32 %311, %101
  %313 = sub i32 %312, %103
  %314 = add i32 %313, %110
  %315 = sub i32 %314, %119
  %316 = add i32 %315, %129
  %317 = add i32 %316, %149
  %318 = add i32 %317, %153
  %319 = sub i32 %318, %161
  %320 = sub i32 %319, %171
  %321 = sub i32 %320, %173
  %322 = add i32 %321, %174
  %323 = add i32 %322, %184
  %324 = sub i32 %323, %199
  %325 = sub i32 %324, %200
  %326 = add i32 %325, %201
  %327 = add i32 %326, %206
  %328 = add i32 %327, %52
  %329 = sub i32 %328, %216
  %330 = sub i32 %329, %218
  %331 = add i32 %330, %219
  %332 = sub i32 %331, %223
  %333 = sub i32 %332, %224
  %334 = add i32 %333, %228
  %335 = sub i32 %334, %22
  %336 = add i32 %335, %30
  %337 = sub i32 %336, %14
  %338 = sub i32 %337, %12
  %339 = sub i32 %338, %18
  %340 = sub i32 %339, %26
  %341 = add i32 %340, %27
  %342 = add i32 %341, %31
  %343 = sub i32 %342, %33
  %344 = add i32 %343, %39
  %345 = add i32 %344, %41
  %346 = add i32 %345, %42
  %347 = sub i32 %346, %49
  %348 = sub i32 %347, %51
  %349 = sub i32 %348, %55
  %350 = add i32 %349, %57
  %351 = add i32 %350, %59
  %352 = sub i32 %351, %60
  %353 = add i32 %352, %61
  %354 = sub i32 %353, %66
  %355 = sub i32 %354, %71
  %356 = add i32 %355, %72
  %357 = add i32 %356, %73
  %358 = add i32 %357, %74
  %359 = sub i32 %358, %87
  %360 = sub i32 %359, %90
  %361 = add i32 %360, %91
  %362 = add i32 %361, %97
  %363 = add i32 %362, %99
  %364 = add i32 %363, %102
  %365 = sub i32 %364, %105
  %366 = sub i32 %365, %106
  %367 = sub i32 %366, %107
  %368 = add i32 %367, %111
  %369 = sub i32 %368, %113
  %370 = sub i32 %369, %114
  %371 = sub i32 %370, %115
  %372 = sub i32 %371, %116
  %373 = sub i32 %372, %126
  %374 = sub i32 %373, %127
  %375 = add i32 %374, %128
  %376 = add i32 %375, %130
  %377 = add i32 %376, %134
  %378 = sub i32 %377, %135
  %379 = sub i32 %378, %136
  %380 = sub i32 %379, %137
  %381 = add i32 %380, %122
  %382 = add i32 %381, %142
  %383 = sub i32 %382, %143
  %384 = sub i32 %383, %144
  %385 = add i32 %384, %146
  %386 = sub i32 %385, %147
  %387 = sub i32 %386, %150
  %388 = add i32 %387, %151
  %389 = add i32 %388, %152
  %390 = add i32 %389, %154
  %391 = sub i32 %390, %156
  %392 = add i32 %391, %75
  %393 = sub i32 %392, %162
  %394 = add i32 %393, %164
  %395 = sub i32 %394, %165
  %396 = add i32 %395, %166
  %397 = sub i32 %396, %167
  %398 = sub i32 %397, %168
  %399 = sub i32 %398, %169
  %400 = add i32 %399, %170
  %401 = sub i32 %400, %172
  %402 = add i32 %401, %175
  %403 = add i32 %402, %177
  %404 = sub i32 %403, %180
  %405 = sub i32 %404, %182
  %406 = add i32 %405, %183
  %407 = add i32 %406, %185
  %408 = add i32 %407, %186
  %409 = sub i32 %408, %188
  %410 = sub i32 %409, %189
  %411 = add i32 %410, %191
  %412 = sub i32 %411, %192
  %413 = add i32 %412, %193
  %414 = sub i32 %413, %194
  %415 = add i32 %414, %198
  %416 = add i32 %415, %203
  %417 = add i32 %416, %207
  %418 = add i32 %417, %209
  %419 = sub i32 %418, %215
  %420 = add i32 %419, %79
  %421 = sub i32 %420, %225
  %422 = sub i32 %421, %226
  %423 = add i32 %422, %227
  %424 = add i32 %423, %229
  %425 = sub i32 %424, %230
  %426 = sub i32 %425, %235
  %427 = add i32 %426, %236
  %428 = add i32 %427, %238
  %429 = add i32 %428, %241
  %430 = add i32 %429, %242
  %431 = add i32 %430, %23
  %432 = add i32 %431, %246
  %433 = sub i32 %432, %248
  %434 = add i32 %433, %249
  %435 = add i32 %434, %251
  %436 = sub i32 %435, %252
  %437 = add i32 %436, %253
  %438 = add i32 %437, %254
  %439 = add i32 %438, %20
  %440 = add i32 %439, %24
  %441 = sub i32 %440, %47
  %442 = sub i32 %441, %65
  %443 = add i32 %442, %77
  %444 = sub i32 %443, %81
  %445 = sub i32 %444, %94
  %446 = add i32 %445, %96
  %447 = sub i32 %446, %109
  %448 = sub i32 %447, %118
  %449 = sub i32 %448, %121
  %450 = add i32 %449, %124
  %451 = sub i32 %450, %133
  %452 = sub i32 %451, %148
  %453 = sub i32 %452, %155
  %454 = add i32 %453, %157
  %455 = sub i32 %454, %159
  %456 = sub i32 %455, %160
  %457 = sub i32 %456, %176
  %458 = sub i32 %457, %179
  %459 = sub i32 %458, %190
  %460 = sub i32 %459, %197
  %461 = sub i32 %460, %211
  %462 = sub i32 %461, %214
  %463 = sub i32 %462, %234
  %464 = add i32 %463, %237
  %465 = sub i32 %464, %240
  %466 = add i32 %465, %243
  %467 = sub i32 %466, %245
  %468 = sub i32 %467, %257
  %469 = sub i32 %468, %259
  %470 = sub i32 %469, %261
  %471 = add i32 %470, %263
  %472 = add i32 %471, %265
  %473 = add i32 %472, %293
  %474 = add i32 %473, %291
  %475 = sub i32 %474, %141
  %476 = sub i32 %475, %222
  %477 = sub i32 %476, %233
  %478 = add i32 %477, %289
  %479 = add i32 %478, %286
  %480 = add i32 %479, %282
  %481 = icmp eq i32 %8, %480
  %482 = select i1 %481, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %483 = tail call i32 @puts(i8* nonnull dereferenceable(1) %482)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
