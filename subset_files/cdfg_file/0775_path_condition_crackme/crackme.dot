digraph "DFG for'crackme' function" {
	Node0xee39a0[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0xee3a10[shape=record, label="  %4 = xor i32 %1, %0"];
	Node0xee3ad0[shape=record, label="  %5 = shl i32 %4, 1"];
	Node0xee3b40[shape=record, label="  %6 = or i32 %5, 1"];
	Node0xee3bb0[shape=record, label="  %7 = or i32 %1, %0"];
	Node0xee3c20[shape=record, label="  %8 = and i32 %1, %0"];
	Node0xee3c90[shape=record, label="  %9 = and i32 %3, %0"];
	Node0xee3d00[shape=record, label="  %10 = sub i32 %0, %7"];
	Node0xee3d70[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0xee3de0[shape=record, label="  %12 = sub i32 %8, %0"];
	Node0xee3e50[shape=record, label="  %13 = sub i32 %12, %9"];
	Node0xee3ec0[shape=record, label="  %14 = add i32 %13, %6"];
	Node0xee3f30[shape=record, label="  %15 = add i32 %14, %11"];
	Node0xee3fa0[shape=record, label="  %16 = icmp eq i32 %15, 1"];
	Node0xe84268[shape=record, label="  %17 = select i1 %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xee4440[shape=record, label="  %18 = tail call i32 @puts(i8* nonnull dereferenceable(1) %17)"];
	Node0xee4490[shape=record, label="  ret void"];
	Node0xee39a0 -> Node0xee3a10;
	Node0xee3a10 -> Node0xee3ad0;
	Node0xee3ad0 -> Node0xee3b40;
	Node0xee3b40 -> Node0xee3bb0;
	Node0xee3bb0 -> Node0xee3c20;
	Node0xee3c20 -> Node0xee3c90;
	Node0xee3c90 -> Node0xee3d00;
	Node0xee3d00 -> Node0xee3d70;
	Node0xee3d70 -> Node0xee3de0;
	Node0xee3de0 -> Node0xee3e50;
	Node0xee3e50 -> Node0xee3ec0;
	Node0xee3ec0 -> Node0xee3f30;
	Node0xee3f30 -> Node0xee3fa0;
	Node0xee3fa0 -> Node0xe84268;
	Node0xe84268 -> Node0xee4440;
	Node0xee4440 -> Node0xee4490;
edge [color=red]
	Node0xee3a10 -> Node0xee3ad0;
	Node0xee3ad0 -> Node0xee3b40;
	Node0xee39a0 -> Node0xee3c90;
	Node0xee3bb0 -> Node0xee3d00;
	Node0xee3d00 -> Node0xee3d70;
	Node0xee3c20 -> Node0xee3de0;
	Node0xee3de0 -> Node0xee3e50;
	Node0xee3c90 -> Node0xee3e50;
	Node0xee3e50 -> Node0xee3ec0;
	Node0xee3b40 -> Node0xee3ec0;
	Node0xee3ec0 -> Node0xee3f30;
	Node0xee3d70 -> Node0xee3f30;
	Node0xee3f30 -> Node0xee3fa0;
	Node0xee3fa0 -> Node0xe84268;
	Node0xe84268 -> Node0xee4440;
}
