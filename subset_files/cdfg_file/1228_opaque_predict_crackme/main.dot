digraph "DFG for'main' function" {
	Node0x1c9fbe8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c9fc68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c9fcf8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c9fd58[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1c9fe08[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1ca0238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ca0318[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1ca0418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ca04d8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1ca0588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1ca0648[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1ca06f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c9a790[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1ca08f8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ca1868[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ca1ed8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ca1f38[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1ca2048[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1ca22a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1ca2408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1ca2518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ca2628[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ca26e8[shape=record, label="  ret i32 0"];
	Node0x1c9fbe8 -> Node0x1c9fc68;
	Node0x1c9fc68 -> Node0x1c9fcf8;
	Node0x1c9fcf8 -> Node0x1c9fd58;
	Node0x1c9fd58 -> Node0x1c9fe08;
	Node0x1c9fe08 -> Node0x1ca0238;
	Node0x1ca0238 -> Node0x1ca0318;
	Node0x1ca0318 -> Node0x1ca0418;
	Node0x1ca0418 -> Node0x1ca04d8;
	Node0x1ca04d8 -> Node0x1ca0588;
	Node0x1ca0588 -> Node0x1ca0648;
	Node0x1ca0648 -> Node0x1ca06f8;
	Node0x1ca06f8 -> Node0x1c9a790;
	Node0x1c9a790 -> Node0x1ca08f8;
	Node0x1ca08f8 -> Node0x1ca1868;
	Node0x1ca1868 -> Node0x1ca1ed8;
	Node0x1ca1ed8 -> Node0x1ca1f38;
	Node0x1ca1f38 -> Node0x1ca2048;
	Node0x1ca2048 -> Node0x1ca22a8;
	Node0x1ca22a8 -> Node0x1ca2408;
	Node0x1ca2408 -> Node0x1ca2518;
	Node0x1ca2518 -> Node0x1ca2628;
	Node0x1ca2628 -> Node0x1ca26e8;
edge [color=red]
	Node0x1c9fbe8 -> Node0x1c9fe08;
	Node0x1c9fe08 -> Node0x1ca0238;
	Node0x1c9fc68 -> Node0x1ca0318;
	Node0x1ca0318 -> Node0x1ca0418;
	Node0x1c9fcf8 -> Node0x1ca04d8;
	Node0x1ca04d8 -> Node0x1ca0588;
	Node0x1c9fd58 -> Node0x1ca0648;
	Node0x1ca0648 -> Node0x1ca06f8;
	Node0x1c9fbe8 -> Node0x1c9a790;
	Node0x1c9fc68 -> Node0x1c9a790;
	Node0x1c9fcf8 -> Node0x1c9a790;
	Node0x1c9fd58 -> Node0x1c9a790;
	Node0x1c9fbe8 -> Node0x1ca08f8;
	Node0x1c9fc68 -> Node0x1ca1868;
	Node0x1c9fcf8 -> Node0x1ca1ed8;
	Node0x1c9fd58 -> Node0x1ca1f38;
	Node0x1ca08f8 -> Node0x1ca2048;
	Node0x1ca1868 -> Node0x1ca2048;
	Node0x1ca1ed8 -> Node0x1ca2048;
	Node0x1ca1f38 -> Node0x1ca2048;
	Node0x1ca0648 -> Node0x1ca22a8;
	Node0x1ca04d8 -> Node0x1ca2408;
	Node0x1ca0318 -> Node0x1ca2518;
	Node0x1c9fe08 -> Node0x1ca2628;
}
