digraph "DFG for'main' function" {
	Node0x19b2cc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x19b2d48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x19b2dd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x19b2e38[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x19b32b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19b6268[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x19b6348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19b6408[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x19b64b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19b6718[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x19b67d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x19b7748[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x19b7db8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x19b7eb0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x19b80b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19b8218[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19b8328[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19b83e8[shape=record, label="  ret i32 0"];
	Node0x19b2cc8 -> Node0x19b2d48;
	Node0x19b2d48 -> Node0x19b2dd8;
	Node0x19b2dd8 -> Node0x19b2e38;
	Node0x19b2e38 -> Node0x19b32b8;
	Node0x19b32b8 -> Node0x19b6268;
	Node0x19b6268 -> Node0x19b6348;
	Node0x19b6348 -> Node0x19b6408;
	Node0x19b6408 -> Node0x19b64b8;
	Node0x19b64b8 -> Node0x19b6718;
	Node0x19b6718 -> Node0x19b67d8;
	Node0x19b67d8 -> Node0x19b7748;
	Node0x19b7748 -> Node0x19b7db8;
	Node0x19b7db8 -> Node0x19b7eb0;
	Node0x19b7eb0 -> Node0x19b80b8;
	Node0x19b80b8 -> Node0x19b8218;
	Node0x19b8218 -> Node0x19b8328;
	Node0x19b8328 -> Node0x19b83e8;
edge [color=red]
	Node0x19b2cc8 -> Node0x19b2e38;
	Node0x19b2e38 -> Node0x19b32b8;
	Node0x19b2d48 -> Node0x19b6268;
	Node0x19b6268 -> Node0x19b6348;
	Node0x19b2dd8 -> Node0x19b6408;
	Node0x19b6408 -> Node0x19b64b8;
	Node0x19b2cc8 -> Node0x19b6718;
	Node0x19b2d48 -> Node0x19b6718;
	Node0x19b2dd8 -> Node0x19b6718;
	Node0x19b2cc8 -> Node0x19b67d8;
	Node0x19b2d48 -> Node0x19b7748;
	Node0x19b2dd8 -> Node0x19b7db8;
	Node0x19b67d8 -> Node0x19b7eb0;
	Node0x19b7748 -> Node0x19b7eb0;
	Node0x19b7db8 -> Node0x19b7eb0;
	Node0x19b6408 -> Node0x19b80b8;
	Node0x19b6268 -> Node0x19b8218;
	Node0x19b2e38 -> Node0x19b8328;
}
