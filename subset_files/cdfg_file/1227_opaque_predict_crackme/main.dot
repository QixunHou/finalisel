digraph "DFG for'main' function" {
	Node0x188fba8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x188fc28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x188fcb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x188fd18[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x188fdc8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x18901f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18902d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x18903d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1890498[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1890548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1890608[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x18906b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x188ab30[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x18908b8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1891828[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1891e98[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1891ef8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1891f70[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x1891fe0[shape=record, label="  %15 = xor i32 %13, -1"];
	Node0x1892050[shape=record, label="  %16 = xor i32 %10, %15"];
	Node0x18920c0[shape=record, label="  %17 = sub i32 2, %10"];
	Node0x1892130[shape=record, label="  %18 = add i32 %17, %16"];
	Node0x18921a0[shape=record, label="  %19 = add i32 %18, %14"];
	Node0x1892210[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x1892280[shape=record, label="  %21 = or i32 %11, %20"];
	Node0x18922f0[shape=record, label="  %22 = and i32 %11, %20"];
	Node0x1892360[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x18923d0[shape=record, label="  %24 = xor i32 %12, %11"];
	Node0x1892440[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x18924b0[shape=record, label="  %26 = and i32 %12, %11"];
	Node0x1892520[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x1892590[shape=record, label="  %28 = or i32 %13, %10"];
	Node0x1892600[shape=record, label="  %29 = or i32 %10, %15"];
	Node0x1892670[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x18926e0[shape=record, label="  %31 = xor i32 %28, -1"];
	Node0x1892750[shape=record, label="  %32 = mul i32 %31, 5"];
	Node0x18927c0[shape=record, label="  %33 = and i32 %10, %15"];
	Node0x1892830[shape=record, label="  %34 = add i32 %33, %11"];
	Node0x18928a0[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x1892910[shape=record, label="  %36 = add i32 %30, %13"];
	Node0x1892980[shape=record, label="  %37 = shl i32 %36, 1"];
	Node0x18929f0[shape=record, label="  %38 = sub i32 5, %10"];
	Node0x1892a60[shape=record, label="  %39 = sub i32 %38, %21"];
	Node0x1892ad0[shape=record, label="  %40 = add i32 %39, %23"];
	Node0x1892b40[shape=record, label="  %41 = sub i32 %40, %26"];
	Node0x1892bb0[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x1892c20[shape=record, label="  %43 = add i32 %42, %14"];
	Node0x1892c90[shape=record, label="  %44 = sub i32 %43, %22"];
	Node0x1892d00[shape=record, label="  %45 = sub i32 %44, %25"];
	Node0x1892d70[shape=record, label="  %46 = sub i32 %45, %27"];
	Node0x1892de0[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x1892e50[shape=record, label="  %48 = sub i32 %47, %29"];
	Node0x1892ec0[shape=record, label="  %49 = add i32 %48, %32"];
	Node0x1892f30[shape=record, label="  %50 = add i32 %49, %35"];
	Node0x1892fa0[shape=record, label="  %51 = add i32 %50, %37"];
	Node0x1893010[shape=record, label="  %52 = icmp eq i32 %19, %51"];
	Node0x182f8b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18930a0[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x1893348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x18934a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x18935b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18936c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1893788[shape=record, label="  ret i32 0"];
	Node0x188fba8 -> Node0x188fc28;
	Node0x188fc28 -> Node0x188fcb8;
	Node0x188fcb8 -> Node0x188fd18;
	Node0x188fd18 -> Node0x188fdc8;
	Node0x188fdc8 -> Node0x18901f8;
	Node0x18901f8 -> Node0x18902d8;
	Node0x18902d8 -> Node0x18903d8;
	Node0x18903d8 -> Node0x1890498;
	Node0x1890498 -> Node0x1890548;
	Node0x1890548 -> Node0x1890608;
	Node0x1890608 -> Node0x18906b8;
	Node0x18906b8 -> Node0x188ab30;
	Node0x188ab30 -> Node0x18908b8;
	Node0x18908b8 -> Node0x1891828;
	Node0x1891828 -> Node0x1891e98;
	Node0x1891e98 -> Node0x1891ef8;
	Node0x1891ef8 -> Node0x1891f70;
	Node0x1891f70 -> Node0x1891fe0;
	Node0x1891fe0 -> Node0x1892050;
	Node0x1892050 -> Node0x18920c0;
	Node0x18920c0 -> Node0x1892130;
	Node0x1892130 -> Node0x18921a0;
	Node0x18921a0 -> Node0x1892210;
	Node0x1892210 -> Node0x1892280;
	Node0x1892280 -> Node0x18922f0;
	Node0x18922f0 -> Node0x1892360;
	Node0x1892360 -> Node0x18923d0;
	Node0x18923d0 -> Node0x1892440;
	Node0x1892440 -> Node0x18924b0;
	Node0x18924b0 -> Node0x1892520;
	Node0x1892520 -> Node0x1892590;
	Node0x1892590 -> Node0x1892600;
	Node0x1892600 -> Node0x1892670;
	Node0x1892670 -> Node0x18926e0;
	Node0x18926e0 -> Node0x1892750;
	Node0x1892750 -> Node0x18927c0;
	Node0x18927c0 -> Node0x1892830;
	Node0x1892830 -> Node0x18928a0;
	Node0x18928a0 -> Node0x1892910;
	Node0x1892910 -> Node0x1892980;
	Node0x1892980 -> Node0x18929f0;
	Node0x18929f0 -> Node0x1892a60;
	Node0x1892a60 -> Node0x1892ad0;
	Node0x1892ad0 -> Node0x1892b40;
	Node0x1892b40 -> Node0x1892bb0;
	Node0x1892bb0 -> Node0x1892c20;
	Node0x1892c20 -> Node0x1892c90;
	Node0x1892c90 -> Node0x1892d00;
	Node0x1892d00 -> Node0x1892d70;
	Node0x1892d70 -> Node0x1892de0;
	Node0x1892de0 -> Node0x1892e50;
	Node0x1892e50 -> Node0x1892ec0;
	Node0x1892ec0 -> Node0x1892f30;
	Node0x1892f30 -> Node0x1892fa0;
	Node0x1892fa0 -> Node0x1893010;
	Node0x1893010 -> Node0x182f8b8;
	Node0x182f8b8 -> Node0x18930a0;
	Node0x18930a0 -> Node0x1893348;
	Node0x1893348 -> Node0x18934a8;
	Node0x18934a8 -> Node0x18935b8;
	Node0x18935b8 -> Node0x18936c8;
	Node0x18936c8 -> Node0x1893788;
edge [color=red]
	Node0x188fba8 -> Node0x188fdc8;
	Node0x188fdc8 -> Node0x18901f8;
	Node0x188fc28 -> Node0x18902d8;
	Node0x18902d8 -> Node0x18903d8;
	Node0x188fcb8 -> Node0x1890498;
	Node0x1890498 -> Node0x1890548;
	Node0x188fd18 -> Node0x1890608;
	Node0x1890608 -> Node0x18906b8;
	Node0x188fba8 -> Node0x188ab30;
	Node0x188fc28 -> Node0x188ab30;
	Node0x188fcb8 -> Node0x188ab30;
	Node0x188fd18 -> Node0x188ab30;
	Node0x188fba8 -> Node0x18908b8;
	Node0x188fc28 -> Node0x1891828;
	Node0x188fcb8 -> Node0x1891e98;
	Node0x188fd18 -> Node0x1891ef8;
	Node0x1891e98 -> Node0x1891f70;
	Node0x1891828 -> Node0x1891f70;
	Node0x1891ef8 -> Node0x1891fe0;
	Node0x18908b8 -> Node0x1892050;
	Node0x1891fe0 -> Node0x1892050;
	Node0x18908b8 -> Node0x18920c0;
	Node0x18920c0 -> Node0x1892130;
	Node0x1892050 -> Node0x1892130;
	Node0x1892130 -> Node0x18921a0;
	Node0x1891f70 -> Node0x18921a0;
	Node0x1891e98 -> Node0x1892210;
	Node0x1891828 -> Node0x1892280;
	Node0x1892210 -> Node0x1892280;
	Node0x1891828 -> Node0x18922f0;
	Node0x1892210 -> Node0x18922f0;
	Node0x18922f0 -> Node0x1892360;
	Node0x1891e98 -> Node0x18923d0;
	Node0x1891828 -> Node0x18923d0;
	Node0x18923d0 -> Node0x1892440;
	Node0x1891e98 -> Node0x18924b0;
	Node0x1891828 -> Node0x18924b0;
	Node0x18924b0 -> Node0x1892520;
	Node0x1891ef8 -> Node0x1892590;
	Node0x18908b8 -> Node0x1892590;
	Node0x18908b8 -> Node0x1892600;
	Node0x1891fe0 -> Node0x1892600;
	Node0x1891ef8 -> Node0x1892670;
	Node0x18908b8 -> Node0x1892670;
	Node0x1892590 -> Node0x18926e0;
	Node0x18926e0 -> Node0x1892750;
	Node0x18908b8 -> Node0x18927c0;
	Node0x1891fe0 -> Node0x18927c0;
	Node0x18927c0 -> Node0x1892830;
	Node0x1891828 -> Node0x1892830;
	Node0x1892830 -> Node0x18928a0;
	Node0x1892670 -> Node0x1892910;
	Node0x1891ef8 -> Node0x1892910;
	Node0x1892910 -> Node0x1892980;
	Node0x18908b8 -> Node0x18929f0;
	Node0x18929f0 -> Node0x1892a60;
	Node0x1892280 -> Node0x1892a60;
	Node0x1892a60 -> Node0x1892ad0;
	Node0x1892360 -> Node0x1892ad0;
	Node0x1892ad0 -> Node0x1892b40;
	Node0x18924b0 -> Node0x1892b40;
	Node0x1892b40 -> Node0x1892bb0;
	Node0x18923d0 -> Node0x1892bb0;
	Node0x1892bb0 -> Node0x1892c20;
	Node0x1891f70 -> Node0x1892c20;
	Node0x1892c20 -> Node0x1892c90;
	Node0x18922f0 -> Node0x1892c90;
	Node0x1892c90 -> Node0x1892d00;
	Node0x1892440 -> Node0x1892d00;
	Node0x1892d00 -> Node0x1892d70;
	Node0x1892520 -> Node0x1892d70;
	Node0x1892d70 -> Node0x1892de0;
	Node0x1892590 -> Node0x1892de0;
	Node0x1892de0 -> Node0x1892e50;
	Node0x1892600 -> Node0x1892e50;
	Node0x1892e50 -> Node0x1892ec0;
	Node0x1892750 -> Node0x1892ec0;
	Node0x1892ec0 -> Node0x1892f30;
	Node0x18928a0 -> Node0x1892f30;
	Node0x1892f30 -> Node0x1892fa0;
	Node0x1892980 -> Node0x1892fa0;
	Node0x18921a0 -> Node0x1893010;
	Node0x1892fa0 -> Node0x1893010;
	Node0x1893010 -> Node0x182f8b8;
	Node0x182f8b8 -> Node0x18930a0;
	Node0x1890608 -> Node0x1893348;
	Node0x1890498 -> Node0x18934a8;
	Node0x18902d8 -> Node0x18935b8;
	Node0x188fdc8 -> Node0x18936c8;
}
