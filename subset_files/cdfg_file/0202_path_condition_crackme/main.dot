digraph "DFG for'main' function" {
	Node0x631618[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x631698[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x631728[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x631788[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x631838[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x631c68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x631d48[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x631e48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x631f08[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x631fb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x632078[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x632128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x62c990[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x632328[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x633298[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x633908[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x633968[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x6339e0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x633a50[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x633ac0[shape=record, label="  %16 = and i32 %13, %15"];
	Node0x633b30[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x633ba0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x633c10[shape=record, label="  %19 = or i32 %13, %15"];
	Node0x633c80[shape=record, label="  %20 = add i32 %19, 1"];
	Node0x633cf0[shape=record, label="  %21 = sub i32 %20, %18"];
	Node0x633d60[shape=record, label="  %22 = or i32 %11, %14"];
	Node0x633dd0[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0x633e40[shape=record, label="  %24 = or i32 %12, %11"];
	Node0x633eb0[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x633f20[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x633f90[shape=record, label="  %27 = and i32 %11, %14"];
	Node0x634000[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x634070[shape=record, label="  %29 = and i32 %12, %11"];
	Node0x6340e0[shape=record, label="  %30 = xor i32 %13, %10"];
	Node0x634150[shape=record, label="  %31 = and i32 %13, %10"];
	Node0x6341c0[shape=record, label="  %32 = sub i32 %16, %29"];
	Node0x634230[shape=record, label="  %33 = mul i32 %32, 3"];
	Node0x6342a0[shape=record, label="  %34 = add i32 %10, 2"];
	Node0x634310[shape=record, label="  %35 = add i32 %34, %11"];
	Node0x634380[shape=record, label="  %36 = sub i32 %35, %23"];
	Node0x6343f0[shape=record, label="  %37 = add i32 %36, %22"];
	Node0x634460[shape=record, label="  %38 = sub i32 %37, %28"];
	Node0x6344d0[shape=record, label="  %39 = sub i32 %38, %30"];
	Node0x634540[shape=record, label="  %40 = add i32 %39, %19"];
	Node0x6345b0[shape=record, label="  %41 = sub i32 %40, %31"];
	Node0x634620[shape=record, label="  %42 = sub i32 %41, %26"];
	Node0x634690[shape=record, label="  %43 = add i32 %42, %33"];
	Node0x634700[shape=record, label="  %44 = icmp eq i32 %21, %43"];
	Node0x5d18b8[shape=record, label="  %45 = select i1 %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x634790[shape=record, label="  %46 = call i32 @puts(i8* nonnull dereferenceable(1) %45) #5"];
	Node0x634a38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x634b98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x634ca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x634db8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x634e78[shape=record, label="  ret i32 0"];
	Node0x631618 -> Node0x631698;
	Node0x631698 -> Node0x631728;
	Node0x631728 -> Node0x631788;
	Node0x631788 -> Node0x631838;
	Node0x631838 -> Node0x631c68;
	Node0x631c68 -> Node0x631d48;
	Node0x631d48 -> Node0x631e48;
	Node0x631e48 -> Node0x631f08;
	Node0x631f08 -> Node0x631fb8;
	Node0x631fb8 -> Node0x632078;
	Node0x632078 -> Node0x632128;
	Node0x632128 -> Node0x62c990;
	Node0x62c990 -> Node0x632328;
	Node0x632328 -> Node0x633298;
	Node0x633298 -> Node0x633908;
	Node0x633908 -> Node0x633968;
	Node0x633968 -> Node0x6339e0;
	Node0x6339e0 -> Node0x633a50;
	Node0x633a50 -> Node0x633ac0;
	Node0x633ac0 -> Node0x633b30;
	Node0x633b30 -> Node0x633ba0;
	Node0x633ba0 -> Node0x633c10;
	Node0x633c10 -> Node0x633c80;
	Node0x633c80 -> Node0x633cf0;
	Node0x633cf0 -> Node0x633d60;
	Node0x633d60 -> Node0x633dd0;
	Node0x633dd0 -> Node0x633e40;
	Node0x633e40 -> Node0x633eb0;
	Node0x633eb0 -> Node0x633f20;
	Node0x633f20 -> Node0x633f90;
	Node0x633f90 -> Node0x634000;
	Node0x634000 -> Node0x634070;
	Node0x634070 -> Node0x6340e0;
	Node0x6340e0 -> Node0x634150;
	Node0x634150 -> Node0x6341c0;
	Node0x6341c0 -> Node0x634230;
	Node0x634230 -> Node0x6342a0;
	Node0x6342a0 -> Node0x634310;
	Node0x634310 -> Node0x634380;
	Node0x634380 -> Node0x6343f0;
	Node0x6343f0 -> Node0x634460;
	Node0x634460 -> Node0x6344d0;
	Node0x6344d0 -> Node0x634540;
	Node0x634540 -> Node0x6345b0;
	Node0x6345b0 -> Node0x634620;
	Node0x634620 -> Node0x634690;
	Node0x634690 -> Node0x634700;
	Node0x634700 -> Node0x5d18b8;
	Node0x5d18b8 -> Node0x634790;
	Node0x634790 -> Node0x634a38;
	Node0x634a38 -> Node0x634b98;
	Node0x634b98 -> Node0x634ca8;
	Node0x634ca8 -> Node0x634db8;
	Node0x634db8 -> Node0x634e78;
edge [color=red]
	Node0x631618 -> Node0x631838;
	Node0x631838 -> Node0x631c68;
	Node0x631698 -> Node0x631d48;
	Node0x631d48 -> Node0x631e48;
	Node0x631728 -> Node0x631f08;
	Node0x631f08 -> Node0x631fb8;
	Node0x631788 -> Node0x632078;
	Node0x632078 -> Node0x632128;
	Node0x631618 -> Node0x62c990;
	Node0x631698 -> Node0x62c990;
	Node0x631728 -> Node0x62c990;
	Node0x631788 -> Node0x62c990;
	Node0x631618 -> Node0x632328;
	Node0x631698 -> Node0x633298;
	Node0x631728 -> Node0x633908;
	Node0x631788 -> Node0x633968;
	Node0x633908 -> Node0x6339e0;
	Node0x632328 -> Node0x633a50;
	Node0x633968 -> Node0x633ac0;
	Node0x633a50 -> Node0x633ac0;
	Node0x633ac0 -> Node0x633b30;
	Node0x633b30 -> Node0x633ba0;
	Node0x633968 -> Node0x633c10;
	Node0x633a50 -> Node0x633c10;
	Node0x633c10 -> Node0x633c80;
	Node0x633c80 -> Node0x633cf0;
	Node0x633ba0 -> Node0x633cf0;
	Node0x633298 -> Node0x633d60;
	Node0x6339e0 -> Node0x633d60;
	Node0x633908 -> Node0x633dd0;
	Node0x633298 -> Node0x633dd0;
	Node0x633908 -> Node0x633e40;
	Node0x633298 -> Node0x633e40;
	Node0x633e40 -> Node0x633eb0;
	Node0x633eb0 -> Node0x633f20;
	Node0x633298 -> Node0x633f90;
	Node0x6339e0 -> Node0x633f90;
	Node0x633f90 -> Node0x634000;
	Node0x633908 -> Node0x634070;
	Node0x633298 -> Node0x634070;
	Node0x633968 -> Node0x6340e0;
	Node0x632328 -> Node0x6340e0;
	Node0x633968 -> Node0x634150;
	Node0x632328 -> Node0x634150;
	Node0x633ac0 -> Node0x6341c0;
	Node0x634070 -> Node0x6341c0;
	Node0x6341c0 -> Node0x634230;
	Node0x632328 -> Node0x6342a0;
	Node0x6342a0 -> Node0x634310;
	Node0x633298 -> Node0x634310;
	Node0x634310 -> Node0x634380;
	Node0x633dd0 -> Node0x634380;
	Node0x634380 -> Node0x6343f0;
	Node0x633d60 -> Node0x6343f0;
	Node0x6343f0 -> Node0x634460;
	Node0x634000 -> Node0x634460;
	Node0x634460 -> Node0x6344d0;
	Node0x6340e0 -> Node0x6344d0;
	Node0x6344d0 -> Node0x634540;
	Node0x633c10 -> Node0x634540;
	Node0x634540 -> Node0x6345b0;
	Node0x634150 -> Node0x6345b0;
	Node0x6345b0 -> Node0x634620;
	Node0x633f20 -> Node0x634620;
	Node0x634620 -> Node0x634690;
	Node0x634230 -> Node0x634690;
	Node0x633cf0 -> Node0x634700;
	Node0x634690 -> Node0x634700;
	Node0x634700 -> Node0x5d18b8;
	Node0x5d18b8 -> Node0x634790;
	Node0x632078 -> Node0x634a38;
	Node0x631f08 -> Node0x634b98;
	Node0x631d48 -> Node0x634ca8;
	Node0x631838 -> Node0x634db8;
}
