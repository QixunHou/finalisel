digraph "DFG for'main' function" {
	Node0x1a13b78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a13bf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a13c88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1a13ce8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1a13d98[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1a141c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a142a8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1a143a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a14468[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1a14518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1a145d8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1a14688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1a0eb10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1a14888[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a157f8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a15e68[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1a15ec8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1a15f40[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x1a15fb0[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x1a16020[shape=record, label="  %16 = and i32 %13, %15"];
	Node0x1a16090[shape=record, label="  %17 = shl i32 %15, 1"];
	Node0x1a16100[shape=record, label="  %18 = or i32 %17, 1"];
	Node0x1a16170[shape=record, label="  %19 = add i32 %18, %12"];
	Node0x1a161e0[shape=record, label="  %20 = sub i32 %19, %14"];
	Node0x1a16250[shape=record, label="  %21 = add i32 %20, %16"];
	Node0x1a162c0[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0x1a16330[shape=record, label="  %23 = or i32 %11, %22"];
	Node0x1a163a0[shape=record, label="  %24 = and i32 %11, %22"];
	Node0x1a16410[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0x1a16480[shape=record, label="  %26 = and i32 %12, %11"];
	Node0x1a164f0[shape=record, label="  %27 = or i32 %13, %15"];
	Node0x1a16560[shape=record, label="  %28 = and i32 %13, %10"];
	Node0x1a165d0[shape=record, label="  %29 = shl i32 %10, 1"];
	Node0x1a16640[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x1a166b0[shape=record, label="  %31 = xor i32 %30, -1"];
	Node0x1a16720[shape=record, label="  %32 = mul i32 %31, 6"];
	Node0x1a16790[shape=record, label="  %33 = xor i32 %27, -1"];
	Node0x1a16800[shape=record, label="  %34 = mul i32 %16, 7"];
	Node0x1a16870[shape=record, label="  %35 = add i32 %23, %33"];
	Node0x1a168e0[shape=record, label="  %36 = add i32 %35, %28"];
	Node0x1a16950[shape=record, label="  %37 = mul i32 %36, 5"];
	Node0x1a169c0[shape=record, label="  %38 = sub i32 %14, %23"];
	Node0x1a16a30[shape=record, label="  %39 = mul i32 %38, 3"];
	Node0x1a16aa0[shape=record, label="  %40 = sub i32 7, %11"];
	Node0x1a16b10[shape=record, label="  %41 = sub i32 %40, %29"];
	Node0x1a16b80[shape=record, label="  %42 = add i32 %41, %22"];
	Node0x1a16bf0[shape=record, label="  %43 = add i32 %42, %24"];
	Node0x1a16c60[shape=record, label="  %44 = sub i32 %43, %26"];
	Node0x1a16cd0[shape=record, label="  %45 = sub i32 %44, %25"];
	Node0x1a16d40[shape=record, label="  %46 = sub i32 %45, %27"];
	Node0x1a16db0[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x1a16e20[shape=record, label="  %48 = add i32 %47, %32"];
	Node0x1a16e90[shape=record, label="  %49 = add i32 %48, %34"];
	Node0x1a16f00[shape=record, label="  %50 = add i32 %49, %39"];
	Node0x1a16f70[shape=record, label="  %51 = add i32 %50, %37"];
	Node0x1a16fe0[shape=record, label="  %52 = icmp eq i32 %21, %51"];
	Node0x19b38b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a17070[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x1a17318[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1a17478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1a17588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a17698[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a17758[shape=record, label="  ret i32 0"];
	Node0x1a13b78 -> Node0x1a13bf8;
	Node0x1a13bf8 -> Node0x1a13c88;
	Node0x1a13c88 -> Node0x1a13ce8;
	Node0x1a13ce8 -> Node0x1a13d98;
	Node0x1a13d98 -> Node0x1a141c8;
	Node0x1a141c8 -> Node0x1a142a8;
	Node0x1a142a8 -> Node0x1a143a8;
	Node0x1a143a8 -> Node0x1a14468;
	Node0x1a14468 -> Node0x1a14518;
	Node0x1a14518 -> Node0x1a145d8;
	Node0x1a145d8 -> Node0x1a14688;
	Node0x1a14688 -> Node0x1a0eb10;
	Node0x1a0eb10 -> Node0x1a14888;
	Node0x1a14888 -> Node0x1a157f8;
	Node0x1a157f8 -> Node0x1a15e68;
	Node0x1a15e68 -> Node0x1a15ec8;
	Node0x1a15ec8 -> Node0x1a15f40;
	Node0x1a15f40 -> Node0x1a15fb0;
	Node0x1a15fb0 -> Node0x1a16020;
	Node0x1a16020 -> Node0x1a16090;
	Node0x1a16090 -> Node0x1a16100;
	Node0x1a16100 -> Node0x1a16170;
	Node0x1a16170 -> Node0x1a161e0;
	Node0x1a161e0 -> Node0x1a16250;
	Node0x1a16250 -> Node0x1a162c0;
	Node0x1a162c0 -> Node0x1a16330;
	Node0x1a16330 -> Node0x1a163a0;
	Node0x1a163a0 -> Node0x1a16410;
	Node0x1a16410 -> Node0x1a16480;
	Node0x1a16480 -> Node0x1a164f0;
	Node0x1a164f0 -> Node0x1a16560;
	Node0x1a16560 -> Node0x1a165d0;
	Node0x1a165d0 -> Node0x1a16640;
	Node0x1a16640 -> Node0x1a166b0;
	Node0x1a166b0 -> Node0x1a16720;
	Node0x1a16720 -> Node0x1a16790;
	Node0x1a16790 -> Node0x1a16800;
	Node0x1a16800 -> Node0x1a16870;
	Node0x1a16870 -> Node0x1a168e0;
	Node0x1a168e0 -> Node0x1a16950;
	Node0x1a16950 -> Node0x1a169c0;
	Node0x1a169c0 -> Node0x1a16a30;
	Node0x1a16a30 -> Node0x1a16aa0;
	Node0x1a16aa0 -> Node0x1a16b10;
	Node0x1a16b10 -> Node0x1a16b80;
	Node0x1a16b80 -> Node0x1a16bf0;
	Node0x1a16bf0 -> Node0x1a16c60;
	Node0x1a16c60 -> Node0x1a16cd0;
	Node0x1a16cd0 -> Node0x1a16d40;
	Node0x1a16d40 -> Node0x1a16db0;
	Node0x1a16db0 -> Node0x1a16e20;
	Node0x1a16e20 -> Node0x1a16e90;
	Node0x1a16e90 -> Node0x1a16f00;
	Node0x1a16f00 -> Node0x1a16f70;
	Node0x1a16f70 -> Node0x1a16fe0;
	Node0x1a16fe0 -> Node0x19b38b8;
	Node0x19b38b8 -> Node0x1a17070;
	Node0x1a17070 -> Node0x1a17318;
	Node0x1a17318 -> Node0x1a17478;
	Node0x1a17478 -> Node0x1a17588;
	Node0x1a17588 -> Node0x1a17698;
	Node0x1a17698 -> Node0x1a17758;
edge [color=red]
	Node0x1a13b78 -> Node0x1a13d98;
	Node0x1a13d98 -> Node0x1a141c8;
	Node0x1a13bf8 -> Node0x1a142a8;
	Node0x1a142a8 -> Node0x1a143a8;
	Node0x1a13c88 -> Node0x1a14468;
	Node0x1a14468 -> Node0x1a14518;
	Node0x1a13ce8 -> Node0x1a145d8;
	Node0x1a145d8 -> Node0x1a14688;
	Node0x1a13b78 -> Node0x1a0eb10;
	Node0x1a13bf8 -> Node0x1a0eb10;
	Node0x1a13c88 -> Node0x1a0eb10;
	Node0x1a13ce8 -> Node0x1a0eb10;
	Node0x1a13b78 -> Node0x1a14888;
	Node0x1a13bf8 -> Node0x1a157f8;
	Node0x1a13c88 -> Node0x1a15e68;
	Node0x1a13ce8 -> Node0x1a15ec8;
	Node0x1a15e68 -> Node0x1a15f40;
	Node0x1a157f8 -> Node0x1a15f40;
	Node0x1a14888 -> Node0x1a15fb0;
	Node0x1a15ec8 -> Node0x1a16020;
	Node0x1a15fb0 -> Node0x1a16020;
	Node0x1a15fb0 -> Node0x1a16090;
	Node0x1a16090 -> Node0x1a16100;
	Node0x1a16100 -> Node0x1a16170;
	Node0x1a15e68 -> Node0x1a16170;
	Node0x1a16170 -> Node0x1a161e0;
	Node0x1a15f40 -> Node0x1a161e0;
	Node0x1a161e0 -> Node0x1a16250;
	Node0x1a16020 -> Node0x1a16250;
	Node0x1a15e68 -> Node0x1a162c0;
	Node0x1a157f8 -> Node0x1a16330;
	Node0x1a162c0 -> Node0x1a16330;
	Node0x1a157f8 -> Node0x1a163a0;
	Node0x1a162c0 -> Node0x1a163a0;
	Node0x1a163a0 -> Node0x1a16410;
	Node0x1a15e68 -> Node0x1a16480;
	Node0x1a157f8 -> Node0x1a16480;
	Node0x1a15ec8 -> Node0x1a164f0;
	Node0x1a15fb0 -> Node0x1a164f0;
	Node0x1a15ec8 -> Node0x1a16560;
	Node0x1a14888 -> Node0x1a16560;
	Node0x1a14888 -> Node0x1a165d0;
	Node0x1a15ec8 -> Node0x1a16640;
	Node0x1a14888 -> Node0x1a16640;
	Node0x1a16640 -> Node0x1a166b0;
	Node0x1a166b0 -> Node0x1a16720;
	Node0x1a164f0 -> Node0x1a16790;
	Node0x1a16020 -> Node0x1a16800;
	Node0x1a16330 -> Node0x1a16870;
	Node0x1a16790 -> Node0x1a16870;
	Node0x1a16870 -> Node0x1a168e0;
	Node0x1a16560 -> Node0x1a168e0;
	Node0x1a168e0 -> Node0x1a16950;
	Node0x1a15f40 -> Node0x1a169c0;
	Node0x1a16330 -> Node0x1a169c0;
	Node0x1a169c0 -> Node0x1a16a30;
	Node0x1a157f8 -> Node0x1a16aa0;
	Node0x1a16aa0 -> Node0x1a16b10;
	Node0x1a165d0 -> Node0x1a16b10;
	Node0x1a16b10 -> Node0x1a16b80;
	Node0x1a162c0 -> Node0x1a16b80;
	Node0x1a16b80 -> Node0x1a16bf0;
	Node0x1a163a0 -> Node0x1a16bf0;
	Node0x1a16bf0 -> Node0x1a16c60;
	Node0x1a16480 -> Node0x1a16c60;
	Node0x1a16c60 -> Node0x1a16cd0;
	Node0x1a16410 -> Node0x1a16cd0;
	Node0x1a16cd0 -> Node0x1a16d40;
	Node0x1a164f0 -> Node0x1a16d40;
	Node0x1a16d40 -> Node0x1a16db0;
	Node0x1a16560 -> Node0x1a16db0;
	Node0x1a16db0 -> Node0x1a16e20;
	Node0x1a16720 -> Node0x1a16e20;
	Node0x1a16e20 -> Node0x1a16e90;
	Node0x1a16800 -> Node0x1a16e90;
	Node0x1a16e90 -> Node0x1a16f00;
	Node0x1a16a30 -> Node0x1a16f00;
	Node0x1a16f00 -> Node0x1a16f70;
	Node0x1a16950 -> Node0x1a16f70;
	Node0x1a16250 -> Node0x1a16fe0;
	Node0x1a16f70 -> Node0x1a16fe0;
	Node0x1a16fe0 -> Node0x19b38b8;
	Node0x19b38b8 -> Node0x1a17070;
	Node0x1a145d8 -> Node0x1a17318;
	Node0x1a14468 -> Node0x1a17478;
	Node0x1a142a8 -> Node0x1a17588;
	Node0x1a13d98 -> Node0x1a17698;
}
