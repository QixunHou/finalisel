digraph "DFG for'crackme' function" {
	Node0x611be0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x612260[shape=record, label="  %6 = xor i32 %2, -1"];
	Node0x6122d0[shape=record, label="  %7 = and i32 %6, %1"];
	Node0x612370[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x612410[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x612480[shape=record, label="  %10 = and i32 %3, %0"];
	Node0x6124f0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x612560[shape=record, label="  %12 = add i32 %5, %11"];
	Node0x6125d0[shape=record, label="  %13 = add i32 %12, %9"];
	Node0x612640[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0x6126b0[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x612720[shape=record, label="  %16 = shl i32 %1, 1"];
	Node0x612790[shape=record, label="  %17 = or i32 %16, 1"];
	Node0x612830[shape=record, label="  %18 = shl i32 %5, 2"];
	Node0x6128d0[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0x612970[shape=record, label="  %20 = xor i32 %1, 1073741823"];
	Node0x6129e0[shape=record, label="  %21 = and i32 %20, %2"];
	Node0x612a50[shape=record, label="  %22 = shl i32 %21, 2"];
	Node0x612af0[shape=record, label="  %23 = mul i32 %15, 3"];
	Node0x612b60[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0x612bd0[shape=record, label="  %25 = xor i32 %0, -1"];
	Node0x612c40[shape=record, label="  %26 = and i32 %25, %3"];
	Node0x612cb0[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x612d20[shape=record, label="  %28 = or i32 %25, %3"];
	Node0x612d90[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x612e00[shape=record, label="  %30 = shl i32 %28, 1"];
	Node0x612e70[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x612ee0[shape=record, label="  %32 = sub i32 %26, %3"];
	Node0x613160[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x6131d0[shape=record, label="  %34 = sub i32 1, %1"];
	Node0x613240[shape=record, label="  %35 = add i32 %34, %14"];
	Node0x6132b0[shape=record, label="  %36 = add i32 %35, %15"];
	Node0x613320[shape=record, label="  %37 = add i32 %36, %17"];
	Node0x613390[shape=record, label="  %38 = add i32 %37, %7"];
	Node0x613400[shape=record, label="  %39 = add i32 %38, %22"];
	Node0x613470[shape=record, label="  %40 = add i32 %39, %23"];
	Node0x6134e0[shape=record, label="  %41 = add i32 %40, %24"];
	Node0x613550[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x6135c0[shape=record, label="  %43 = add i32 %42, %29"];
	Node0x613630[shape=record, label="  %44 = add i32 %43, %10"];
	Node0x6136a0[shape=record, label="  %45 = add i32 %44, %19"];
	Node0x613710[shape=record, label="  %46 = sub i32 %45, %31"];
	Node0x613780[shape=record, label="  %47 = add i32 %46, %33"];
	Node0x6137f0[shape=record, label="  %48 = icmp eq i32 %13, %47"];
	Node0x5b2268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x613c90[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x613ce0[shape=record, label="  ret void"];
	Node0x611be0 -> Node0x612260;
	Node0x612260 -> Node0x6122d0;
	Node0x6122d0 -> Node0x612370;
	Node0x612370 -> Node0x612410;
	Node0x612410 -> Node0x612480;
	Node0x612480 -> Node0x6124f0;
	Node0x6124f0 -> Node0x612560;
	Node0x612560 -> Node0x6125d0;
	Node0x6125d0 -> Node0x612640;
	Node0x612640 -> Node0x6126b0;
	Node0x6126b0 -> Node0x612720;
	Node0x612720 -> Node0x612790;
	Node0x612790 -> Node0x612830;
	Node0x612830 -> Node0x6128d0;
	Node0x6128d0 -> Node0x612970;
	Node0x612970 -> Node0x6129e0;
	Node0x6129e0 -> Node0x612a50;
	Node0x612a50 -> Node0x612af0;
	Node0x612af0 -> Node0x612b60;
	Node0x612b60 -> Node0x612bd0;
	Node0x612bd0 -> Node0x612c40;
	Node0x612c40 -> Node0x612cb0;
	Node0x612cb0 -> Node0x612d20;
	Node0x612d20 -> Node0x612d90;
	Node0x612d90 -> Node0x612e00;
	Node0x612e00 -> Node0x612e70;
	Node0x612e70 -> Node0x612ee0;
	Node0x612ee0 -> Node0x613160;
	Node0x613160 -> Node0x6131d0;
	Node0x6131d0 -> Node0x613240;
	Node0x613240 -> Node0x6132b0;
	Node0x6132b0 -> Node0x613320;
	Node0x613320 -> Node0x613390;
	Node0x613390 -> Node0x613400;
	Node0x613400 -> Node0x613470;
	Node0x613470 -> Node0x6134e0;
	Node0x6134e0 -> Node0x613550;
	Node0x613550 -> Node0x6135c0;
	Node0x6135c0 -> Node0x613630;
	Node0x613630 -> Node0x6136a0;
	Node0x6136a0 -> Node0x613710;
	Node0x613710 -> Node0x613780;
	Node0x613780 -> Node0x6137f0;
	Node0x6137f0 -> Node0x5b2268;
	Node0x5b2268 -> Node0x613c90;
	Node0x613c90 -> Node0x613ce0;
edge [color=red]
	Node0x612260 -> Node0x6122d0;
	Node0x6122d0 -> Node0x612370;
	Node0x612370 -> Node0x612410;
	Node0x612480 -> Node0x6124f0;
	Node0x611be0 -> Node0x612560;
	Node0x6124f0 -> Node0x612560;
	Node0x612560 -> Node0x6125d0;
	Node0x612410 -> Node0x6125d0;
	Node0x612720 -> Node0x612790;
	Node0x611be0 -> Node0x612830;
	Node0x612830 -> Node0x6128d0;
	Node0x612970 -> Node0x6129e0;
	Node0x6129e0 -> Node0x612a50;
	Node0x6126b0 -> Node0x612af0;
	Node0x612bd0 -> Node0x612c40;
	Node0x612c40 -> Node0x612cb0;
	Node0x612bd0 -> Node0x612d20;
	Node0x612d20 -> Node0x612d90;
	Node0x612d20 -> Node0x612e00;
	Node0x612e00 -> Node0x612e70;
	Node0x612c40 -> Node0x612ee0;
	Node0x612ee0 -> Node0x613160;
	Node0x6131d0 -> Node0x613240;
	Node0x612640 -> Node0x613240;
	Node0x613240 -> Node0x6132b0;
	Node0x6126b0 -> Node0x6132b0;
	Node0x6132b0 -> Node0x613320;
	Node0x612790 -> Node0x613320;
	Node0x613320 -> Node0x613390;
	Node0x6122d0 -> Node0x613390;
	Node0x613390 -> Node0x613400;
	Node0x612a50 -> Node0x613400;
	Node0x613400 -> Node0x613470;
	Node0x612af0 -> Node0x613470;
	Node0x613470 -> Node0x6134e0;
	Node0x612b60 -> Node0x6134e0;
	Node0x6134e0 -> Node0x613550;
	Node0x612cb0 -> Node0x613550;
	Node0x613550 -> Node0x6135c0;
	Node0x612d90 -> Node0x6135c0;
	Node0x6135c0 -> Node0x613630;
	Node0x612480 -> Node0x613630;
	Node0x613630 -> Node0x6136a0;
	Node0x6128d0 -> Node0x6136a0;
	Node0x6136a0 -> Node0x613710;
	Node0x612e70 -> Node0x613710;
	Node0x613710 -> Node0x613780;
	Node0x613160 -> Node0x613780;
	Node0x6125d0 -> Node0x6137f0;
	Node0x613780 -> Node0x6137f0;
	Node0x6137f0 -> Node0x5b2268;
	Node0x5b2268 -> Node0x613c90;
}
