digraph "DFG for'main' function" {
	Node0x613ea8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x613f28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x613fb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x614018[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x6140c8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x6144f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6145d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x6146d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x614798[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x614848[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x614908[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x6149b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x60ec10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x614bb8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x615b28[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x616198[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x6161f8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x616270[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x6162e0[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0x616350[shape=record, label="  %16 = and i32 %11, %15"];
	Node0x6163c0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x616430[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x6164a0[shape=record, label="  %19 = and i32 %13, %10"];
	Node0x616510[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x616580[shape=record, label="  %21 = add i32 %14, %20"];
	Node0x6165f0[shape=record, label="  %22 = add i32 %21, %18"];
	Node0x616660[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0x6166d0[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x616740[shape=record, label="  %25 = shl i32 %11, 1"];
	Node0x6167b0[shape=record, label="  %26 = or i32 %25, 1"];
	Node0x616820[shape=record, label="  %27 = shl i32 %14, 2"];
	Node0x616890[shape=record, label="  %28 = xor i32 %27, -4"];
	Node0x616900[shape=record, label="  %29 = xor i32 %11, 1073741823"];
	Node0x616970[shape=record, label="  %30 = and i32 %29, %12"];
	Node0x6169e0[shape=record, label="  %31 = shl i32 %30, 2"];
	Node0x616a50[shape=record, label="  %32 = mul i32 %24, 3"];
	Node0x616ac0[shape=record, label="  %33 = xor i32 %13, %10"];
	Node0x616b30[shape=record, label="  %34 = xor i32 %10, -1"];
	Node0x616ba0[shape=record, label="  %35 = and i32 %13, %34"];
	Node0x616c10[shape=record, label="  %36 = xor i32 %35, -1"];
	Node0x616c80[shape=record, label="  %37 = or i32 %13, %34"];
	Node0x616cf0[shape=record, label="  %38 = xor i32 %37, -1"];
	Node0x616d60[shape=record, label="  %39 = shl i32 %37, 1"];
	Node0x616dd0[shape=record, label="  %40 = xor i32 %39, -2"];
	Node0x616e40[shape=record, label="  %41 = sub i32 %35, %13"];
	Node0x616eb0[shape=record, label="  %42 = shl i32 %41, 1"];
	Node0x616f20[shape=record, label="  %43 = sub i32 1, %11"];
	Node0x616f90[shape=record, label="  %44 = add i32 %43, %23"];
	Node0x617000[shape=record, label="  %45 = add i32 %44, %24"];
	Node0x617070[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x6170e0[shape=record, label="  %47 = add i32 %46, %16"];
	Node0x617150[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x6171c0[shape=record, label="  %49 = add i32 %48, %32"];
	Node0x617230[shape=record, label="  %50 = add i32 %49, %33"];
	Node0x6172a0[shape=record, label="  %51 = add i32 %50, %36"];
	Node0x617310[shape=record, label="  %52 = add i32 %51, %38"];
	Node0x617380[shape=record, label="  %53 = add i32 %52, %19"];
	Node0x6173f0[shape=record, label="  %54 = add i32 %53, %28"];
	Node0x617460[shape=record, label="  %55 = sub i32 %54, %40"];
	Node0x6174d0[shape=record, label="  %56 = add i32 %55, %42"];
	Node0x617540[shape=record, label="  %57 = icmp eq i32 %22, %56"];
	Node0x5b38b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6175d0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0x617878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x6179d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x617ae8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x617bf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x617cb8[shape=record, label="  ret i32 0"];
	Node0x613ea8 -> Node0x613f28;
	Node0x613f28 -> Node0x613fb8;
	Node0x613fb8 -> Node0x614018;
	Node0x614018 -> Node0x6140c8;
	Node0x6140c8 -> Node0x6144f8;
	Node0x6144f8 -> Node0x6145d8;
	Node0x6145d8 -> Node0x6146d8;
	Node0x6146d8 -> Node0x614798;
	Node0x614798 -> Node0x614848;
	Node0x614848 -> Node0x614908;
	Node0x614908 -> Node0x6149b8;
	Node0x6149b8 -> Node0x60ec10;
	Node0x60ec10 -> Node0x614bb8;
	Node0x614bb8 -> Node0x615b28;
	Node0x615b28 -> Node0x616198;
	Node0x616198 -> Node0x6161f8;
	Node0x6161f8 -> Node0x616270;
	Node0x616270 -> Node0x6162e0;
	Node0x6162e0 -> Node0x616350;
	Node0x616350 -> Node0x6163c0;
	Node0x6163c0 -> Node0x616430;
	Node0x616430 -> Node0x6164a0;
	Node0x6164a0 -> Node0x616510;
	Node0x616510 -> Node0x616580;
	Node0x616580 -> Node0x6165f0;
	Node0x6165f0 -> Node0x616660;
	Node0x616660 -> Node0x6166d0;
	Node0x6166d0 -> Node0x616740;
	Node0x616740 -> Node0x6167b0;
	Node0x6167b0 -> Node0x616820;
	Node0x616820 -> Node0x616890;
	Node0x616890 -> Node0x616900;
	Node0x616900 -> Node0x616970;
	Node0x616970 -> Node0x6169e0;
	Node0x6169e0 -> Node0x616a50;
	Node0x616a50 -> Node0x616ac0;
	Node0x616ac0 -> Node0x616b30;
	Node0x616b30 -> Node0x616ba0;
	Node0x616ba0 -> Node0x616c10;
	Node0x616c10 -> Node0x616c80;
	Node0x616c80 -> Node0x616cf0;
	Node0x616cf0 -> Node0x616d60;
	Node0x616d60 -> Node0x616dd0;
	Node0x616dd0 -> Node0x616e40;
	Node0x616e40 -> Node0x616eb0;
	Node0x616eb0 -> Node0x616f20;
	Node0x616f20 -> Node0x616f90;
	Node0x616f90 -> Node0x617000;
	Node0x617000 -> Node0x617070;
	Node0x617070 -> Node0x6170e0;
	Node0x6170e0 -> Node0x617150;
	Node0x617150 -> Node0x6171c0;
	Node0x6171c0 -> Node0x617230;
	Node0x617230 -> Node0x6172a0;
	Node0x6172a0 -> Node0x617310;
	Node0x617310 -> Node0x617380;
	Node0x617380 -> Node0x6173f0;
	Node0x6173f0 -> Node0x617460;
	Node0x617460 -> Node0x6174d0;
	Node0x6174d0 -> Node0x617540;
	Node0x617540 -> Node0x5b38b8;
	Node0x5b38b8 -> Node0x6175d0;
	Node0x6175d0 -> Node0x617878;
	Node0x617878 -> Node0x6179d8;
	Node0x6179d8 -> Node0x617ae8;
	Node0x617ae8 -> Node0x617bf8;
	Node0x617bf8 -> Node0x617cb8;
edge [color=red]
	Node0x613ea8 -> Node0x6140c8;
	Node0x6140c8 -> Node0x6144f8;
	Node0x613f28 -> Node0x6145d8;
	Node0x6145d8 -> Node0x6146d8;
	Node0x613fb8 -> Node0x614798;
	Node0x614798 -> Node0x614848;
	Node0x614018 -> Node0x614908;
	Node0x614908 -> Node0x6149b8;
	Node0x613ea8 -> Node0x60ec10;
	Node0x613f28 -> Node0x60ec10;
	Node0x613fb8 -> Node0x60ec10;
	Node0x614018 -> Node0x60ec10;
	Node0x613ea8 -> Node0x614bb8;
	Node0x613f28 -> Node0x615b28;
	Node0x613fb8 -> Node0x616198;
	Node0x614018 -> Node0x6161f8;
	Node0x616198 -> Node0x616270;
	Node0x615b28 -> Node0x616270;
	Node0x616198 -> Node0x6162e0;
	Node0x615b28 -> Node0x616350;
	Node0x6162e0 -> Node0x616350;
	Node0x616350 -> Node0x6163c0;
	Node0x6163c0 -> Node0x616430;
	Node0x6161f8 -> Node0x6164a0;
	Node0x614bb8 -> Node0x6164a0;
	Node0x6164a0 -> Node0x616510;
	Node0x616270 -> Node0x616580;
	Node0x616510 -> Node0x616580;
	Node0x616580 -> Node0x6165f0;
	Node0x616430 -> Node0x6165f0;
	Node0x616198 -> Node0x616660;
	Node0x615b28 -> Node0x616660;
	Node0x616198 -> Node0x6166d0;
	Node0x615b28 -> Node0x6166d0;
	Node0x615b28 -> Node0x616740;
	Node0x616740 -> Node0x6167b0;
	Node0x616270 -> Node0x616820;
	Node0x616820 -> Node0x616890;
	Node0x615b28 -> Node0x616900;
	Node0x616900 -> Node0x616970;
	Node0x616198 -> Node0x616970;
	Node0x616970 -> Node0x6169e0;
	Node0x6166d0 -> Node0x616a50;
	Node0x6161f8 -> Node0x616ac0;
	Node0x614bb8 -> Node0x616ac0;
	Node0x614bb8 -> Node0x616b30;
	Node0x6161f8 -> Node0x616ba0;
	Node0x616b30 -> Node0x616ba0;
	Node0x616ba0 -> Node0x616c10;
	Node0x6161f8 -> Node0x616c80;
	Node0x616b30 -> Node0x616c80;
	Node0x616c80 -> Node0x616cf0;
	Node0x616c80 -> Node0x616d60;
	Node0x616d60 -> Node0x616dd0;
	Node0x616ba0 -> Node0x616e40;
	Node0x6161f8 -> Node0x616e40;
	Node0x616e40 -> Node0x616eb0;
	Node0x615b28 -> Node0x616f20;
	Node0x616f20 -> Node0x616f90;
	Node0x616660 -> Node0x616f90;
	Node0x616f90 -> Node0x617000;
	Node0x6166d0 -> Node0x617000;
	Node0x617000 -> Node0x617070;
	Node0x6167b0 -> Node0x617070;
	Node0x617070 -> Node0x6170e0;
	Node0x616350 -> Node0x6170e0;
	Node0x6170e0 -> Node0x617150;
	Node0x6169e0 -> Node0x617150;
	Node0x617150 -> Node0x6171c0;
	Node0x616a50 -> Node0x6171c0;
	Node0x6171c0 -> Node0x617230;
	Node0x616ac0 -> Node0x617230;
	Node0x617230 -> Node0x6172a0;
	Node0x616c10 -> Node0x6172a0;
	Node0x6172a0 -> Node0x617310;
	Node0x616cf0 -> Node0x617310;
	Node0x617310 -> Node0x617380;
	Node0x6164a0 -> Node0x617380;
	Node0x617380 -> Node0x6173f0;
	Node0x616890 -> Node0x6173f0;
	Node0x6173f0 -> Node0x617460;
	Node0x616dd0 -> Node0x617460;
	Node0x617460 -> Node0x6174d0;
	Node0x616eb0 -> Node0x6174d0;
	Node0x6165f0 -> Node0x617540;
	Node0x6174d0 -> Node0x617540;
	Node0x617540 -> Node0x5b38b8;
	Node0x5b38b8 -> Node0x6175d0;
	Node0x614908 -> Node0x617878;
	Node0x614798 -> Node0x6179d8;
	Node0x6145d8 -> Node0x617ae8;
	Node0x6140c8 -> Node0x617bf8;
}
