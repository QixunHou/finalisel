digraph "DFG for'crackme' function" {
	Node0xa30a30[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0xa30aa0[shape=record, label="  %4 = and i32 %3, %0"];
	Node0xa30b60[shape=record, label="  %5 = add i32 %4, 1"];
	Node0xa30bd0[shape=record, label="  %6 = xor i32 %1, %0"];
	Node0xa30c40[shape=record, label="  %7 = and i32 %1, %0"];
	Node0xa30cb0[shape=record, label="  %8 = or i32 %3, %0"];
	Node0xa30d50[shape=record, label="  %9 = mul i32 %7, -3"];
	Node0xa30df0[shape=record, label="  %10 = add i32 %9, 3"];
	Node0xa30e60[shape=record, label="  %11 = add i32 %8, %1"];
	Node0xa30ed0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0xa30f40[shape=record, label="  %13 = sub i32 %0, %1"];
	Node0xa30fb0[shape=record, label="  %14 = add i32 %13, %6"];
	Node0xa31020[shape=record, label="  %15 = add i32 %14, %7"];
	Node0xa31090[shape=record, label="  %16 = sub i32 %15, %4"];
	Node0xa31100[shape=record, label="  %17 = add i32 %16, %12"];
	Node0xa31170[shape=record, label="  %18 = add i32 %17, %10"];
	Node0xa311e0[shape=record, label="  %19 = icmp eq i32 %5, %18"];
	Node0x9d1268[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa31680[shape=record, label="  %21 = tail call i32 @puts(i8* nonnull dereferenceable(1) %20)"];
	Node0xa316d0[shape=record, label="  ret void"];
	Node0xa30a30 -> Node0xa30aa0;
	Node0xa30aa0 -> Node0xa30b60;
	Node0xa30b60 -> Node0xa30bd0;
	Node0xa30bd0 -> Node0xa30c40;
	Node0xa30c40 -> Node0xa30cb0;
	Node0xa30cb0 -> Node0xa30d50;
	Node0xa30d50 -> Node0xa30df0;
	Node0xa30df0 -> Node0xa30e60;
	Node0xa30e60 -> Node0xa30ed0;
	Node0xa30ed0 -> Node0xa30f40;
	Node0xa30f40 -> Node0xa30fb0;
	Node0xa30fb0 -> Node0xa31020;
	Node0xa31020 -> Node0xa31090;
	Node0xa31090 -> Node0xa31100;
	Node0xa31100 -> Node0xa31170;
	Node0xa31170 -> Node0xa311e0;
	Node0xa311e0 -> Node0x9d1268;
	Node0x9d1268 -> Node0xa31680;
	Node0xa31680 -> Node0xa316d0;
edge [color=red]
	Node0xa30a30 -> Node0xa30aa0;
	Node0xa30aa0 -> Node0xa30b60;
	Node0xa30a30 -> Node0xa30cb0;
	Node0xa30c40 -> Node0xa30d50;
	Node0xa30d50 -> Node0xa30df0;
	Node0xa30cb0 -> Node0xa30e60;
	Node0xa30e60 -> Node0xa30ed0;
	Node0xa30f40 -> Node0xa30fb0;
	Node0xa30bd0 -> Node0xa30fb0;
	Node0xa30fb0 -> Node0xa31020;
	Node0xa30c40 -> Node0xa31020;
	Node0xa31020 -> Node0xa31090;
	Node0xa30aa0 -> Node0xa31090;
	Node0xa31090 -> Node0xa31100;
	Node0xa30ed0 -> Node0xa31100;
	Node0xa31100 -> Node0xa31170;
	Node0xa30df0 -> Node0xa31170;
	Node0xa30b60 -> Node0xa311e0;
	Node0xa31170 -> Node0xa311e0;
	Node0xa311e0 -> Node0x9d1268;
	Node0x9d1268 -> Node0xa31680;
}
