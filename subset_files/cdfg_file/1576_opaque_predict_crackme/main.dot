digraph "DFG for'main' function" {
	Node0x1994dc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1994e48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1994ed8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1995338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1995418[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1995538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1995770[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1995828[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1996798[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1996e20[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1996e90[shape=record, label="  %9 = sub i32 0, %8"];
	Node0x1996f00[shape=record, label="  %10 = and i32 %7, %6"];
	Node0x1996f70[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x1996fe0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x1997050[shape=record, label="  %13 = and i32 %6, %12"];
	Node0x19970c0[shape=record, label="  %14 = shl i32 %8, 1"];
	Node0x1997130[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x19971a0[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x1997210[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x1997280[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x19972f0[shape=record, label="  %19 = xor i32 %6, 1073741823"];
	Node0x1997360[shape=record, label="  %20 = and i32 %19, %7"];
	Node0x19973d0[shape=record, label="  %21 = shl i32 %20, 2"];
	Node0x1997440[shape=record, label="  %22 = mul i32 %6, -5"];
	Node0x19974b0[shape=record, label="  %23 = add i32 %6, -1"];
	Node0x1997520[shape=record, label="  %24 = add i32 %23, %7"];
	Node0x1997590[shape=record, label="  %25 = add i32 %24, %22"];
	Node0x1997600[shape=record, label="  %26 = add i32 %25, %11"];
	Node0x1997670[shape=record, label="  %27 = add i32 %26, %13"];
	Node0x19976e0[shape=record, label="  %28 = sub i32 %27, %21"];
	Node0x1997750[shape=record, label="  %29 = add i32 %28, %15"];
	Node0x19977c0[shape=record, label="  %30 = sub i32 %29, %18"];
	Node0x1997830[shape=record, label="  %31 = icmp eq i32 %30, %9"];
	Node0x19359d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1997ad0[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x1997d28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1997e88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1997f48[shape=record, label="  ret i32 0"];
	Node0x1994dc8 -> Node0x1994e48;
	Node0x1994e48 -> Node0x1994ed8;
	Node0x1994ed8 -> Node0x1995338;
	Node0x1995338 -> Node0x1995418;
	Node0x1995418 -> Node0x1995538;
	Node0x1995538 -> Node0x1995770;
	Node0x1995770 -> Node0x1995828;
	Node0x1995828 -> Node0x1996798;
	Node0x1996798 -> Node0x1996e20;
	Node0x1996e20 -> Node0x1996e90;
	Node0x1996e90 -> Node0x1996f00;
	Node0x1996f00 -> Node0x1996f70;
	Node0x1996f70 -> Node0x1996fe0;
	Node0x1996fe0 -> Node0x1997050;
	Node0x1997050 -> Node0x19970c0;
	Node0x19970c0 -> Node0x1997130;
	Node0x1997130 -> Node0x19971a0;
	Node0x19971a0 -> Node0x1997210;
	Node0x1997210 -> Node0x1997280;
	Node0x1997280 -> Node0x19972f0;
	Node0x19972f0 -> Node0x1997360;
	Node0x1997360 -> Node0x19973d0;
	Node0x19973d0 -> Node0x1997440;
	Node0x1997440 -> Node0x19974b0;
	Node0x19974b0 -> Node0x1997520;
	Node0x1997520 -> Node0x1997590;
	Node0x1997590 -> Node0x1997600;
	Node0x1997600 -> Node0x1997670;
	Node0x1997670 -> Node0x19976e0;
	Node0x19976e0 -> Node0x1997750;
	Node0x1997750 -> Node0x19977c0;
	Node0x19977c0 -> Node0x1997830;
	Node0x1997830 -> Node0x19359d8;
	Node0x19359d8 -> Node0x1997ad0;
	Node0x1997ad0 -> Node0x1997d28;
	Node0x1997d28 -> Node0x1997e88;
	Node0x1997e88 -> Node0x1997f48;
edge [color=red]
	Node0x1994dc8 -> Node0x1994ed8;
	Node0x1994ed8 -> Node0x1995338;
	Node0x1994e48 -> Node0x1995418;
	Node0x1995418 -> Node0x1995538;
	Node0x1994dc8 -> Node0x1995770;
	Node0x1994e48 -> Node0x1995770;
	Node0x1994dc8 -> Node0x1995828;
	Node0x1994e48 -> Node0x1996798;
	Node0x1996798 -> Node0x1996e20;
	Node0x1995828 -> Node0x1996e20;
	Node0x1996e20 -> Node0x1996e90;
	Node0x1996798 -> Node0x1996f00;
	Node0x1995828 -> Node0x1996f00;
	Node0x1996f00 -> Node0x1996f70;
	Node0x1996798 -> Node0x1996fe0;
	Node0x1995828 -> Node0x1997050;
	Node0x1996fe0 -> Node0x1997050;
	Node0x1996e20 -> Node0x19970c0;
	Node0x19970c0 -> Node0x1997130;
	Node0x1996798 -> Node0x19971a0;
	Node0x1995828 -> Node0x19971a0;
	Node0x19971a0 -> Node0x1997210;
	Node0x1997210 -> Node0x1997280;
	Node0x1995828 -> Node0x19972f0;
	Node0x19972f0 -> Node0x1997360;
	Node0x1996798 -> Node0x1997360;
	Node0x1997360 -> Node0x19973d0;
	Node0x1995828 -> Node0x1997440;
	Node0x1995828 -> Node0x19974b0;
	Node0x19974b0 -> Node0x1997520;
	Node0x1996798 -> Node0x1997520;
	Node0x1997520 -> Node0x1997590;
	Node0x1997440 -> Node0x1997590;
	Node0x1997590 -> Node0x1997600;
	Node0x1996f70 -> Node0x1997600;
	Node0x1997600 -> Node0x1997670;
	Node0x1997050 -> Node0x1997670;
	Node0x1997670 -> Node0x19976e0;
	Node0x19973d0 -> Node0x19976e0;
	Node0x19976e0 -> Node0x1997750;
	Node0x1997130 -> Node0x1997750;
	Node0x1997750 -> Node0x19977c0;
	Node0x1997280 -> Node0x19977c0;
	Node0x19977c0 -> Node0x1997830;
	Node0x1996e90 -> Node0x1997830;
	Node0x1997830 -> Node0x19359d8;
	Node0x19359d8 -> Node0x1997ad0;
	Node0x1995418 -> Node0x1997d28;
	Node0x1994ed8 -> Node0x1997e88;
}
