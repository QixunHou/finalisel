digraph "DFG for'main' function" {
	Node0x12cd5d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12cd658[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x12cd6e8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x12cd748[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x12cdbc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12cdca8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x12cdda8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12cde68[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x12cdf18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12ce178[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x12ce238[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12ce398[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x12ce3f8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x12d4fa0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x12d51a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12d5308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12d5418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12d54d8[shape=record, label="  ret i32 0"];
	Node0x12cd5d8 -> Node0x12cd658;
	Node0x12cd658 -> Node0x12cd6e8;
	Node0x12cd6e8 -> Node0x12cd748;
	Node0x12cd748 -> Node0x12cdbc8;
	Node0x12cdbc8 -> Node0x12cdca8;
	Node0x12cdca8 -> Node0x12cdda8;
	Node0x12cdda8 -> Node0x12cde68;
	Node0x12cde68 -> Node0x12cdf18;
	Node0x12cdf18 -> Node0x12ce178;
	Node0x12ce178 -> Node0x12ce238;
	Node0x12ce238 -> Node0x12ce398;
	Node0x12ce398 -> Node0x12ce3f8;
	Node0x12ce3f8 -> Node0x12d4fa0;
	Node0x12d4fa0 -> Node0x12d51a8;
	Node0x12d51a8 -> Node0x12d5308;
	Node0x12d5308 -> Node0x12d5418;
	Node0x12d5418 -> Node0x12d54d8;
edge [color=red]
	Node0x12cd5d8 -> Node0x12cd748;
	Node0x12cd748 -> Node0x12cdbc8;
	Node0x12cd658 -> Node0x12cdca8;
	Node0x12cdca8 -> Node0x12cdda8;
	Node0x12cd6e8 -> Node0x12cde68;
	Node0x12cde68 -> Node0x12cdf18;
	Node0x12cd5d8 -> Node0x12ce178;
	Node0x12cd658 -> Node0x12ce178;
	Node0x12cd6e8 -> Node0x12ce178;
	Node0x12cd5d8 -> Node0x12ce238;
	Node0x12cd658 -> Node0x12ce398;
	Node0x12cd6e8 -> Node0x12ce3f8;
	Node0x12ce238 -> Node0x12d4fa0;
	Node0x12ce398 -> Node0x12d4fa0;
	Node0x12ce3f8 -> Node0x12d4fa0;
	Node0x12cde68 -> Node0x12d51a8;
	Node0x12cdca8 -> Node0x12d5308;
	Node0x12cd748 -> Node0x12d5418;
}
