digraph "DFG for'crackme' function" {
	Node0x23e19b0[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x23e1a20[shape=record, label="  %6 = sub i32 %1, %5"];
	Node0x23e1a90[shape=record, label="  %7 = and i32 %3, %0"];
	Node0x23e1b00[shape=record, label="  %8 = sub i32 %6, %3"];
	Node0x23e1b70[shape=record, label="  %9 = add i32 %8, %7"];
	Node0x23e21f0[shape=record, label="  %10 = xor i32 %1, -1"];
	Node0x23e2260[shape=record, label="  %11 = and i32 %10, %2"];
	Node0x23e2300[shape=record, label="  %12 = shl i32 %5, 1"];
	Node0x23e2370[shape=record, label="  %13 = xor i32 %0, -1"];
	Node0x23e23e0[shape=record, label="  %14 = and i32 %13, %3"];
	Node0x23e2450[shape=record, label="  %15 = xor i32 %3, %0"];
	Node0x23e24c0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x23e2560[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x23e25d0[shape=record, label="  %18 = or i32 %13, %3"];
	Node0x23e2640[shape=record, label="  %19 = or i32 %3, %0"];
	Node0x23e26b0[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x23e2750[shape=record, label="  %21 = mul i32 %20, 3"];
	Node0x23e27c0[shape=record, label="  %22 = xor i32 %18, -1"];
	Node0x23e2830[shape=record, label="  %23 = shl i32 %14, 1"];
	Node0x23e28d0[shape=record, label="  %24 = add i32 %0, 4"];
	Node0x23e2940[shape=record, label="  %25 = add i32 %24, %0"];
	Node0x23e29b0[shape=record, label="  %26 = add i32 %25, %1"];
	Node0x23e2a20[shape=record, label="  %27 = add i32 %26, %2"];
	Node0x23e2a90[shape=record, label="  %28 = sub i32 %27, %11"];
	Node0x23e2b00[shape=record, label="  %29 = add i32 %28, %3"];
	Node0x23e2b70[shape=record, label="  %30 = sub i32 %29, %12"];
	Node0x23e2be0[shape=record, label="  %31 = sub i32 %30, %18"];
	Node0x23e2c50[shape=record, label="  %32 = add i32 %31, %15"];
	Node0x23e2ed0[shape=record, label="  %33 = add i32 %32, %22"];
	Node0x23e2f40[shape=record, label="  %34 = add i32 %33, %21"];
	Node0x23e2fb0[shape=record, label="  %35 = add i32 %34, %23"];
	Node0x23e3020[shape=record, label="  %36 = add i32 %35, %17"];
	Node0x23e3090[shape=record, label="  %37 = icmp eq i32 %9, %36"];
	Node0x2382268[shape=record, label="  %38 = select i1 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23e3530[shape=record, label="  %39 = tail call i32 @puts(i8* nonnull dereferenceable(1) %38)"];
	Node0x23e3580[shape=record, label="  ret void"];
	Node0x23e19b0 -> Node0x23e1a20;
	Node0x23e1a20 -> Node0x23e1a90;
	Node0x23e1a90 -> Node0x23e1b00;
	Node0x23e1b00 -> Node0x23e1b70;
	Node0x23e1b70 -> Node0x23e21f0;
	Node0x23e21f0 -> Node0x23e2260;
	Node0x23e2260 -> Node0x23e2300;
	Node0x23e2300 -> Node0x23e2370;
	Node0x23e2370 -> Node0x23e23e0;
	Node0x23e23e0 -> Node0x23e2450;
	Node0x23e2450 -> Node0x23e24c0;
	Node0x23e24c0 -> Node0x23e2560;
	Node0x23e2560 -> Node0x23e25d0;
	Node0x23e25d0 -> Node0x23e2640;
	Node0x23e2640 -> Node0x23e26b0;
	Node0x23e26b0 -> Node0x23e2750;
	Node0x23e2750 -> Node0x23e27c0;
	Node0x23e27c0 -> Node0x23e2830;
	Node0x23e2830 -> Node0x23e28d0;
	Node0x23e28d0 -> Node0x23e2940;
	Node0x23e2940 -> Node0x23e29b0;
	Node0x23e29b0 -> Node0x23e2a20;
	Node0x23e2a20 -> Node0x23e2a90;
	Node0x23e2a90 -> Node0x23e2b00;
	Node0x23e2b00 -> Node0x23e2b70;
	Node0x23e2b70 -> Node0x23e2be0;
	Node0x23e2be0 -> Node0x23e2c50;
	Node0x23e2c50 -> Node0x23e2ed0;
	Node0x23e2ed0 -> Node0x23e2f40;
	Node0x23e2f40 -> Node0x23e2fb0;
	Node0x23e2fb0 -> Node0x23e3020;
	Node0x23e3020 -> Node0x23e3090;
	Node0x23e3090 -> Node0x2382268;
	Node0x2382268 -> Node0x23e3530;
	Node0x23e3530 -> Node0x23e3580;
edge [color=red]
	Node0x23e19b0 -> Node0x23e1a20;
	Node0x23e1a20 -> Node0x23e1b00;
	Node0x23e1b00 -> Node0x23e1b70;
	Node0x23e1a90 -> Node0x23e1b70;
	Node0x23e21f0 -> Node0x23e2260;
	Node0x23e19b0 -> Node0x23e2300;
	Node0x23e2370 -> Node0x23e23e0;
	Node0x23e2450 -> Node0x23e24c0;
	Node0x23e24c0 -> Node0x23e2560;
	Node0x23e2370 -> Node0x23e25d0;
	Node0x23e2640 -> Node0x23e26b0;
	Node0x23e26b0 -> Node0x23e2750;
	Node0x23e25d0 -> Node0x23e27c0;
	Node0x23e23e0 -> Node0x23e2830;
	Node0x23e28d0 -> Node0x23e2940;
	Node0x23e2940 -> Node0x23e29b0;
	Node0x23e29b0 -> Node0x23e2a20;
	Node0x23e2a20 -> Node0x23e2a90;
	Node0x23e2260 -> Node0x23e2a90;
	Node0x23e2a90 -> Node0x23e2b00;
	Node0x23e2b00 -> Node0x23e2b70;
	Node0x23e2300 -> Node0x23e2b70;
	Node0x23e2b70 -> Node0x23e2be0;
	Node0x23e25d0 -> Node0x23e2be0;
	Node0x23e2be0 -> Node0x23e2c50;
	Node0x23e2450 -> Node0x23e2c50;
	Node0x23e2c50 -> Node0x23e2ed0;
	Node0x23e27c0 -> Node0x23e2ed0;
	Node0x23e2ed0 -> Node0x23e2f40;
	Node0x23e2750 -> Node0x23e2f40;
	Node0x23e2f40 -> Node0x23e2fb0;
	Node0x23e2830 -> Node0x23e2fb0;
	Node0x23e2fb0 -> Node0x23e3020;
	Node0x23e2560 -> Node0x23e3020;
	Node0x23e1b70 -> Node0x23e3090;
	Node0x23e3020 -> Node0x23e3090;
	Node0x23e3090 -> Node0x2382268;
	Node0x2382268 -> Node0x23e3530;
}
