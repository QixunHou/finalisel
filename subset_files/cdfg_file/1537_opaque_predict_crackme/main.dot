digraph "DFG for'main' function" {
	Node0x23e3748[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23e37c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23e3858[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23e38b8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x23e3968[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x23e3d98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23e3e78[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x23e3f78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23e4038[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x23e40e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x23e41a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x23e4258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x23de9e0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x23e4458[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23e53c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23e5a38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x23e5a98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x23e5b10[shape=record, label="  %14 = and i32 %12, %11"];
	Node0x23e5b80[shape=record, label="  %15 = sub i32 %11, %14"];
	Node0x23e5bf0[shape=record, label="  %16 = and i32 %13, %10"];
	Node0x23e5c60[shape=record, label="  %17 = sub i32 %15, %13"];
	Node0x23e5cd0[shape=record, label="  %18 = add i32 %17, %16"];
	Node0x23e5d40[shape=record, label="  %19 = xor i32 %11, -1"];
	Node0x23e5db0[shape=record, label="  %20 = and i32 %12, %19"];
	Node0x23e5e20[shape=record, label="  %21 = shl i32 %14, 1"];
	Node0x23e5e90[shape=record, label="  %22 = xor i32 %10, -1"];
	Node0x23e5f00[shape=record, label="  %23 = and i32 %13, %22"];
	Node0x23e5f70[shape=record, label="  %24 = xor i32 %13, %10"];
	Node0x23e5fe0[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x23e6050[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x23e60c0[shape=record, label="  %27 = or i32 %13, %22"];
	Node0x23e6130[shape=record, label="  %28 = or i32 %13, %10"];
	Node0x23e61a0[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x23e6210[shape=record, label="  %30 = mul i32 %29, 3"];
	Node0x23e6280[shape=record, label="  %31 = xor i32 %27, -1"];
	Node0x23e62f0[shape=record, label="  %32 = add i32 %23, %10"];
	Node0x23e6360[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x23e63d0[shape=record, label="  %34 = add i32 %11, 4"];
	Node0x23e6440[shape=record, label="  %35 = add i32 %34, %12"];
	Node0x23e64b0[shape=record, label="  %36 = sub i32 %35, %20"];
	Node0x23e6520[shape=record, label="  %37 = add i32 %36, %13"];
	Node0x23e6590[shape=record, label="  %38 = sub i32 %37, %21"];
	Node0x23e6600[shape=record, label="  %39 = sub i32 %38, %27"];
	Node0x23e6670[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x23e66e0[shape=record, label="  %41 = add i32 %40, %31"];
	Node0x23e6750[shape=record, label="  %42 = add i32 %41, %30"];
	Node0x23e67c0[shape=record, label="  %43 = add i32 %42, %26"];
	Node0x23e6830[shape=record, label="  %44 = add i32 %43, %33"];
	Node0x23e68a0[shape=record, label="  %45 = icmp eq i32 %18, %44"];
	Node0x23838b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23e6930[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0x23e6bd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x23e6d38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x23e6e48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23e6f58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23e7018[shape=record, label="  ret i32 0"];
	Node0x23e3748 -> Node0x23e37c8;
	Node0x23e37c8 -> Node0x23e3858;
	Node0x23e3858 -> Node0x23e38b8;
	Node0x23e38b8 -> Node0x23e3968;
	Node0x23e3968 -> Node0x23e3d98;
	Node0x23e3d98 -> Node0x23e3e78;
	Node0x23e3e78 -> Node0x23e3f78;
	Node0x23e3f78 -> Node0x23e4038;
	Node0x23e4038 -> Node0x23e40e8;
	Node0x23e40e8 -> Node0x23e41a8;
	Node0x23e41a8 -> Node0x23e4258;
	Node0x23e4258 -> Node0x23de9e0;
	Node0x23de9e0 -> Node0x23e4458;
	Node0x23e4458 -> Node0x23e53c8;
	Node0x23e53c8 -> Node0x23e5a38;
	Node0x23e5a38 -> Node0x23e5a98;
	Node0x23e5a98 -> Node0x23e5b10;
	Node0x23e5b10 -> Node0x23e5b80;
	Node0x23e5b80 -> Node0x23e5bf0;
	Node0x23e5bf0 -> Node0x23e5c60;
	Node0x23e5c60 -> Node0x23e5cd0;
	Node0x23e5cd0 -> Node0x23e5d40;
	Node0x23e5d40 -> Node0x23e5db0;
	Node0x23e5db0 -> Node0x23e5e20;
	Node0x23e5e20 -> Node0x23e5e90;
	Node0x23e5e90 -> Node0x23e5f00;
	Node0x23e5f00 -> Node0x23e5f70;
	Node0x23e5f70 -> Node0x23e5fe0;
	Node0x23e5fe0 -> Node0x23e6050;
	Node0x23e6050 -> Node0x23e60c0;
	Node0x23e60c0 -> Node0x23e6130;
	Node0x23e6130 -> Node0x23e61a0;
	Node0x23e61a0 -> Node0x23e6210;
	Node0x23e6210 -> Node0x23e6280;
	Node0x23e6280 -> Node0x23e62f0;
	Node0x23e62f0 -> Node0x23e6360;
	Node0x23e6360 -> Node0x23e63d0;
	Node0x23e63d0 -> Node0x23e6440;
	Node0x23e6440 -> Node0x23e64b0;
	Node0x23e64b0 -> Node0x23e6520;
	Node0x23e6520 -> Node0x23e6590;
	Node0x23e6590 -> Node0x23e6600;
	Node0x23e6600 -> Node0x23e6670;
	Node0x23e6670 -> Node0x23e66e0;
	Node0x23e66e0 -> Node0x23e6750;
	Node0x23e6750 -> Node0x23e67c0;
	Node0x23e67c0 -> Node0x23e6830;
	Node0x23e6830 -> Node0x23e68a0;
	Node0x23e68a0 -> Node0x23838b8;
	Node0x23838b8 -> Node0x23e6930;
	Node0x23e6930 -> Node0x23e6bd8;
	Node0x23e6bd8 -> Node0x23e6d38;
	Node0x23e6d38 -> Node0x23e6e48;
	Node0x23e6e48 -> Node0x23e6f58;
	Node0x23e6f58 -> Node0x23e7018;
edge [color=red]
	Node0x23e3748 -> Node0x23e3968;
	Node0x23e3968 -> Node0x23e3d98;
	Node0x23e37c8 -> Node0x23e3e78;
	Node0x23e3e78 -> Node0x23e3f78;
	Node0x23e3858 -> Node0x23e4038;
	Node0x23e4038 -> Node0x23e40e8;
	Node0x23e38b8 -> Node0x23e41a8;
	Node0x23e41a8 -> Node0x23e4258;
	Node0x23e3748 -> Node0x23de9e0;
	Node0x23e37c8 -> Node0x23de9e0;
	Node0x23e3858 -> Node0x23de9e0;
	Node0x23e38b8 -> Node0x23de9e0;
	Node0x23e3748 -> Node0x23e4458;
	Node0x23e37c8 -> Node0x23e53c8;
	Node0x23e3858 -> Node0x23e5a38;
	Node0x23e38b8 -> Node0x23e5a98;
	Node0x23e5a38 -> Node0x23e5b10;
	Node0x23e53c8 -> Node0x23e5b10;
	Node0x23e53c8 -> Node0x23e5b80;
	Node0x23e5b10 -> Node0x23e5b80;
	Node0x23e5a98 -> Node0x23e5bf0;
	Node0x23e4458 -> Node0x23e5bf0;
	Node0x23e5b80 -> Node0x23e5c60;
	Node0x23e5a98 -> Node0x23e5c60;
	Node0x23e5c60 -> Node0x23e5cd0;
	Node0x23e5bf0 -> Node0x23e5cd0;
	Node0x23e53c8 -> Node0x23e5d40;
	Node0x23e5a38 -> Node0x23e5db0;
	Node0x23e5d40 -> Node0x23e5db0;
	Node0x23e5b10 -> Node0x23e5e20;
	Node0x23e4458 -> Node0x23e5e90;
	Node0x23e5a98 -> Node0x23e5f00;
	Node0x23e5e90 -> Node0x23e5f00;
	Node0x23e5a98 -> Node0x23e5f70;
	Node0x23e4458 -> Node0x23e5f70;
	Node0x23e5f70 -> Node0x23e5fe0;
	Node0x23e5fe0 -> Node0x23e6050;
	Node0x23e5a98 -> Node0x23e60c0;
	Node0x23e5e90 -> Node0x23e60c0;
	Node0x23e5a98 -> Node0x23e6130;
	Node0x23e4458 -> Node0x23e6130;
	Node0x23e6130 -> Node0x23e61a0;
	Node0x23e61a0 -> Node0x23e6210;
	Node0x23e60c0 -> Node0x23e6280;
	Node0x23e5f00 -> Node0x23e62f0;
	Node0x23e4458 -> Node0x23e62f0;
	Node0x23e62f0 -> Node0x23e6360;
	Node0x23e53c8 -> Node0x23e63d0;
	Node0x23e63d0 -> Node0x23e6440;
	Node0x23e5a38 -> Node0x23e6440;
	Node0x23e6440 -> Node0x23e64b0;
	Node0x23e5db0 -> Node0x23e64b0;
	Node0x23e64b0 -> Node0x23e6520;
	Node0x23e5a98 -> Node0x23e6520;
	Node0x23e6520 -> Node0x23e6590;
	Node0x23e5e20 -> Node0x23e6590;
	Node0x23e6590 -> Node0x23e6600;
	Node0x23e60c0 -> Node0x23e6600;
	Node0x23e6600 -> Node0x23e6670;
	Node0x23e5f70 -> Node0x23e6670;
	Node0x23e6670 -> Node0x23e66e0;
	Node0x23e6280 -> Node0x23e66e0;
	Node0x23e66e0 -> Node0x23e6750;
	Node0x23e6210 -> Node0x23e6750;
	Node0x23e6750 -> Node0x23e67c0;
	Node0x23e6050 -> Node0x23e67c0;
	Node0x23e67c0 -> Node0x23e6830;
	Node0x23e6360 -> Node0x23e6830;
	Node0x23e5cd0 -> Node0x23e68a0;
	Node0x23e6830 -> Node0x23e68a0;
	Node0x23e68a0 -> Node0x23838b8;
	Node0x23838b8 -> Node0x23e6930;
	Node0x23e41a8 -> Node0x23e6bd8;
	Node0x23e4038 -> Node0x23e6d38;
	Node0x23e3e78 -> Node0x23e6e48;
	Node0x23e3968 -> Node0x23e6f58;
}
