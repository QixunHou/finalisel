; ModuleID = '../.././c_source_file/1040_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1040_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %2, %0
  %10 = or i32 %9, %8
  %11 = xor i32 %1, -1
  %12 = and i32 %11, %0
  %13 = or i32 %12, %2
  %14 = add i32 %10, %13
  %15 = xor i32 %5, -1
  %16 = and i32 %15, %3
  %17 = xor i32 %16, %4
  %18 = xor i32 %3, -1
  %19 = or i32 %18, %4
  %20 = xor i32 %19, -1
  %21 = xor i32 %20, %5
  %22 = sub i32 %14, %21
  %23 = add i32 %22, %17
  %24 = and i32 %1, %0
  %25 = xor i32 %2, -1
  %26 = or i32 %25, %1
  %27 = xor i32 %26, -1
  %28 = or i32 %24, %27
  %29 = or i32 %24, %25
  %30 = shl i32 %29, 1
  %31 = shl i32 %27, 1
  %32 = xor i32 %2, %1
  %33 = or i32 %32, %0
  %34 = xor i32 %1, %0
  %35 = and i32 %9, %34
  %36 = and i32 %32, %0
  %37 = and i32 %25, %0
  %38 = or i32 %37, %11
  %39 = xor i32 %34, -1
  %40 = or i32 %25, %39
  %41 = xor i32 %37, -1
  %42 = and i32 %41, %1
  %43 = and i32 %2, %0
  %44 = or i32 %2, %1
  %45 = xor i32 %43, %44
  %46 = or i32 %11, %0
  %47 = xor i32 %46, -1
  %48 = or i32 %32, %47
  %49 = xor i32 %0, -1
  %50 = and i32 %11, %2
  %51 = and i32 %50, %49
  %52 = or i32 %11, %2
  %53 = and i32 %52, %0
  %54 = xor i32 %53, 2147483647
  %55 = xor i32 %54, %51
  %56 = and i32 %9, %7
  %57 = shl i32 %56, 2
  %58 = and i32 %25, %1
  %59 = xor i32 %58, -1
  %60 = and i32 %59, %0
  %61 = or i32 %39, %2
  %62 = and i32 %2, %1
  %63 = and i32 %62, %0
  %64 = xor i32 %44, -1
  %65 = or i32 %64, %0
  %66 = xor i32 %63, %65
  %67 = or i32 %2, %0
  %68 = xor i32 %67, -1
  %69 = or i32 %68, %39
  %70 = or i32 %26, %49
  %71 = xor i32 %24, -1
  %72 = and i32 %9, %71
  %73 = xor i32 %43, -1
  %74 = xor i32 %73, %1
  %75 = and i32 %73, %39
  %76 = and i32 %7, %25
  %77 = and i32 %32, %49
  %78 = and i32 %26, %49
  %79 = or i32 %9, %34
  %80 = or i32 %63, %77
  %81 = and i32 %67, %34
  %82 = or i32 %43, %47
  %83 = or i32 %34, %25
  %84 = shl i32 %83, 1
  %85 = or i32 %32, %12
  %86 = xor i32 %43, %1
  %87 = or i32 %64, %49
  %88 = xor i32 %12, -1
  %89 = or i32 %43, %58
  %90 = and i32 %26, %0
  %91 = or i32 %58, %0
  %92 = shl i32 %91, 1
  %93 = and i32 %62, %49
  %94 = or i32 %93, %36
  %95 = or i32 %9, %39
  %96 = xor i32 %32, -1
  %97 = or i32 %12, %96
  %98 = or i32 %25, %0
  %99 = xor i32 %98, %24
  %100 = or i32 %59, %0
  %101 = xor i32 %62, 2147483647
  %102 = xor i32 %101, %37
  %103 = or i32 %32, %8
  %104 = or i32 %25, %8
  %105 = or i32 %32, %49
  %106 = xor i32 %51, %105
  %107 = or i32 %9, %47
  %108 = and i32 %44, %0
  %109 = or i32 %93, %108
  %110 = xor i32 %71, %2
  %111 = or i32 %43, %39
  %112 = shl i32 %111, 1
  %113 = shl i32 %67, 1
  %114 = or i32 %34, %68
  %115 = or i32 %26, %0
  %116 = xor i32 %44, %0
  %117 = and i32 %67, %11
  %118 = shl i32 %117, 1
  %119 = shl i32 %7, 1
  %120 = or i32 %68, %11
  %121 = and i32 %98, %11
  %122 = xor i32 %9, -1
  %123 = and i32 %34, %122
  %124 = and i32 %98, %39
  %125 = shl i32 %124, 1
  %126 = and i32 %46, %122
  %127 = or i32 %25, %47
  %128 = add i32 %43, 1
  %129 = or i32 %122, %8
  %130 = xor i32 %32, %0
  %131 = xor i32 %130, %63
  %132 = xor i32 %98, -1
  %133 = or i32 %132, %1
  %134 = or i32 %24, %2
  %135 = shl i32 %134, 1
  %136 = and i32 %71, %2
  %137 = xor i32 %59, %0
  %138 = and i32 %50, %0
  %139 = xor i32 %138, %33
  %140 = or i32 %96, %8
  %141 = or i32 %43, %1
  %142 = or i32 %122, %11
  %143 = xor i32 %24, %2
  %144 = and i32 %64, %49
  %145 = and i32 %58, %49
  %146 = and i32 %64, %0
  %147 = and i32 %58, %0
  %148 = and i32 %27, %49
  %149 = and i32 %27, %0
  %150 = mul i32 %63, 6
  %151 = and i32 %15, %4
  %152 = xor i32 %151, %3
  %153 = and i32 %19, %15
  %154 = xor i32 %4, -1
  %155 = or i32 %15, %3
  %156 = xor i32 %155, -1
  %157 = or i32 %156, %154
  %158 = xor i32 %4, %3
  %159 = and i32 %158, %5
  %160 = shl i32 %159, 1
  %161 = and i32 %5, %4
  %162 = or i32 %161, %18
  %163 = xor i32 %5, %4
  %164 = and i32 %163, %3
  %165 = and i32 %18, %5
  %166 = and i32 %165, %4
  %167 = or i32 %18, %5
  %168 = xor i32 %167, %4
  %169 = xor i32 %166, -1
  %170 = xor i32 %168, %169
  %171 = or i32 %5, %4
  %172 = and i32 %171, %3
  %173 = xor i32 %158, -1
  %174 = xor i32 %163, -1
  %175 = and i32 %174, %173
  %176 = and i32 %5, %3
  %177 = or i32 %176, %154
  %178 = shl i32 %177, 1
  %179 = or i32 %166, %168
  %180 = or i32 %156, %4
  %181 = shl i32 %180, 1
  %182 = or i32 %4, %3
  %183 = xor i32 %182, -1
  %184 = or i32 %183, %5
  %185 = xor i32 %176, -1
  %186 = and i32 %185, %4
  %187 = xor i32 %183, %5
  %188 = xor i32 %5, %3
  %189 = and i32 %188, %19
  %190 = add i32 %163, 1
  %191 = add i32 %4, 1
  %192 = and i32 %176, %4
  %193 = or i32 %5, %3
  %194 = and i32 %193, %154
  %195 = or i32 %192, %194
  %196 = and i32 %158, %174
  %197 = xor i32 %188, -1
  %198 = or i32 %197, %154
  %199 = xor i32 %193, -1
  %200 = or i32 %161, %199
  %201 = xor i32 %171, %3
  %202 = and i32 %18, %4
  %203 = xor i32 %202, -1
  %204 = xor i32 %203, %5
  %205 = or i32 %16, %202
  %206 = or i32 %15, %20
  %207 = and i32 %188, %182
  %208 = and i32 %188, %4
  %209 = or i32 %197, %4
  %210 = shl i32 %16, 1
  %211 = or i32 %197, %20
  %212 = or i32 %188, %154
  %213 = or i32 %202, %197
  %214 = and i32 %4, %3
  %215 = or i32 %163, %214
  %216 = shl i32 %4, 2
  %217 = xor i32 %171, %214
  %218 = or i32 %15, %4
  %219 = and i32 %218, %173
  %220 = or i32 %185, %4
  %221 = or i32 %174, %20
  %222 = or i32 %16, %4
  %223 = and i32 %188, %154
  %224 = xor i32 %223, 2147483647
  %225 = xor i32 %224, %192
  %226 = and i32 %158, %15
  %227 = shl i32 %226, 1
  %228 = or i32 %161, %20
  %229 = and i32 %174, %203
  %230 = shl i32 %19, 1
  %231 = or i32 %15, %183
  %232 = xor i32 %199, %4
  %233 = shl i32 %232, 1
  %234 = or i32 %199, %154
  %235 = shl i32 %234, 1
  %236 = and i32 %182, %5
  %237 = xor i32 %188, %4
  %238 = or i32 %174, %173
  %239 = xor i32 %161, %193
  %240 = and i32 %203, %5
  %241 = and i32 %155, %4
  %242 = or i32 %188, %202
  %243 = xor i32 %151, -1
  %244 = and i32 %243, %173
  %245 = or i32 %176, %202
  %246 = or i32 %161, %183
  %247 = and i32 %165, %154
  %248 = xor i32 %247, %212
  %249 = and i32 %167, %4
  %250 = xor i32 %249, 2147483647
  %251 = xor i32 %250, %247
  %252 = shl i32 %251, 1
  %253 = and i32 %243, %3
  %254 = shl i32 %253, 1
  %255 = and i32 %171, %173
  %256 = and i32 %188, %203
  %257 = and i32 %197, %4
  %258 = or i32 %202, %5
  %259 = and i32 %176, %154
  %260 = or i32 %259, %208
  %261 = or i32 %174, %3
  %262 = xor i32 %161, -1
  %263 = and i32 %262, %18
  %264 = xor i32 %214, -1
  %265 = add i32 %214, 1
  %266 = xor i32 %212, -1
  %267 = or i32 %247, %266
  %268 = or i32 %163, %18
  %269 = or i32 %188, %4
  %270 = xor i32 %269, -1
  %271 = or i32 %166, %270
  %272 = or i32 %151, %176
  %273 = xor i32 %192, %237
  %274 = xor i32 %243, %3
  %275 = shl i32 %274, 1
  %276 = or i32 %188, %183
  %277 = xor i32 %171, -1
  %278 = and i32 %171, %158
  %279 = xor i32 %262, %3
  %280 = xor i32 %185, %4
  %281 = or i32 %151, %3
  %282 = or i32 %185, %154
  %283 = and i32 %163, %203
  %284 = xor i32 %277, %3
  %285 = xor i32 %218, %3
  %286 = and i32 %262, %3
  %287 = or i32 %247, %249
  %288 = and i32 %15, %203
  %289 = and i32 %193, %4
  %290 = and i32 %185, %154
  %291 = and i32 %174, %3
  %292 = and i32 %182, %197
  %293 = or i32 %151, %18
  %294 = or i32 %214, %5
  %295 = xor i32 %214, %5
  %296 = xor i32 %193, %4
  %297 = and i32 %163, %264
  %298 = or i32 %163, %3
  %299 = and i32 %218, %18
  %300 = xor i32 %161, %19
  %301 = xor i32 %218, -1
  %302 = xor i32 %301, %3
  %303 = and i32 %182, %15
  %304 = xor i32 %166, %269
  %305 = shl i32 %304, 1
  %306 = or i32 %20, %5
  %307 = and i32 %197, %154
  %308 = and i32 %197, %264
  %309 = add i32 %19, 1
  %310 = xor i32 %16, -1
  %311 = xor i32 %202, %310
  %312 = or i32 %214, %197
  %313 = shl i32 %312, 1
  %314 = and i32 %310, %154
  %315 = or i32 %310, %154
  %316 = or i32 %176, %4
  %317 = and i32 %155, %154
  %318 = or i32 %277, %173
  %319 = or i32 %151, %156
  %320 = xor i32 %208, -1
  %321 = xor i32 %259, %320
  %322 = and i32 %158, %243
  %323 = xor i32 %264, %5
  %324 = xor i32 %151, %155
  %325 = and i32 %163, %182
  %326 = shl i32 %325, 1
  %327 = and i32 %218, %3
  %328 = and i32 %167, %154
  %329 = or i32 %166, %328
  %330 = or i32 %193, %4
  %331 = xor i32 %19, %5
  %332 = xor i32 %310, %4
  %333 = xor i32 %202, %5
  %334 = or i32 %214, %277
  %335 = or i32 %161, %173
  %336 = and i32 %310, %4
  %337 = or i32 %202, %15
  %338 = or i32 %158, %15
  %339 = or i32 %301, %18
  %340 = xor i32 %182, %5
  %341 = or i32 %158, %301
  %342 = xor i32 %155, %4
  %343 = and i32 %15, %173
  %344 = and i32 %19, %174
  %345 = and i32 %173, %5
  %346 = or i32 %301, %173
  %347 = or i32 %277, %3
  %348 = add i32 %5, 1
  %349 = or i32 %192, %296
  %350 = xor i32 %296, -1
  %351 = xor i32 %192, %350
  %352 = or i32 %188, %214
  %353 = or i32 %188, %20
  %354 = shl i32 %353, 1
  %355 = and i32 %264, %5
  %356 = shl i32 %355, 1
  %357 = or i32 %173, %5
  %358 = xor i32 %155, %214
  %359 = or i32 %214, %199
  %360 = and i32 %163, %19
  %361 = xor i32 %237, %169
  %362 = or i32 %163, %183
  %363 = and i32 %199, %154
  %364 = shl i32 %363, 1
  %365 = and i32 %16, %154
  %366 = mul i32 %365, 12
  %367 = and i32 %199, %4
  %368 = and i32 %16, %4
  %369 = and i32 %156, %4
  %370 = or i32 %76, %136
  %371 = add i32 %370, %114
  %372 = add i32 %371, %77
  %373 = add i32 %372, %75
  %374 = add i32 %373, %74
  %375 = add i32 %374, %72
  %376 = add i32 %375, %35
  %377 = add i32 %376, %202
  %378 = add i32 %377, %109
  %379 = add i32 %378, %102
  %380 = add i32 %379, %80
  %381 = add i32 %380, %357
  %382 = add i32 %381, %277
  %383 = add i32 %382, %55
  %384 = add i32 %383, %259
  %385 = add i32 %384, %359
  %386 = add i32 %385, %342
  %387 = add i32 %386, %339
  %388 = add i32 %387, %335
  %389 = add i32 %388, %330
  %390 = add i32 %389, %307
  %391 = add i32 %390, %289
  %392 = add i32 %391, %286
  %393 = add i32 %392, %256
  %394 = add i32 %393, %244
  %395 = add i32 %394, %208
  %396 = add i32 %395, %201
  %397 = add i32 %396, %198
  %398 = add i32 %397, %225
  %399 = shl i32 %398, 1
  %400 = sub i32 %104, %129
  %401 = sub i32 %400, %38
  %402 = sub i32 %401, %236
  %403 = add i32 %402, %369
  %404 = add i32 %403, %192
  %405 = add i32 %404, %219
  %406 = sub i32 %405, %200
  %407 = mul i32 %406, 3
  %408 = add i32 %131, %144
  %409 = sub i32 %187, %408
  %410 = mul i32 %409, 5
  %411 = add i32 %147, %116
  %412 = add i32 %411, %70
  %413 = shl i32 %412, 2
  %414 = sub i32 %149, %148
  %415 = mul i32 %414, 10
  %416 = add i32 %368, %146
  %417 = shl i32 %416, 3
  %418 = add i32 %93, %145
  %419 = mul i32 %418, -9
  %420 = add i32 %1, 3
  %421 = add i32 %420, %2
  %422 = add i32 %421, %88
  %423 = add i32 %422, %8
  %424 = add i32 %423, %24
  %425 = sub i32 %424, %12
  %426 = add i32 %425, %40
  %427 = add i32 %426, %61
  %428 = sub i32 %427, %62
  %429 = sub i32 %428, %110
  %430 = sub i32 %429, %119
  %431 = add i32 %430, %64
  %432 = sub i32 %431, %127
  %433 = add i32 %432, %128
  %434 = add i32 %433, %143
  %435 = sub i32 %434, %28
  %436 = sub i32 %435, %30
  %437 = sub i32 %436, %31
  %438 = add i32 %437, %33
  %439 = add i32 %438, %36
  %440 = sub i32 %439, %42
  %441 = sub i32 %440, %45
  %442 = add i32 %441, %48
  %443 = add i32 %442, %60
  %444 = add i32 %443, %69
  %445 = sub i32 %444, %65
  %446 = sub i32 %445, %78
  %447 = sub i32 %446, %79
  %448 = add i32 %447, %81
  %449 = sub i32 %448, %82
  %450 = sub i32 %449, %84
  %451 = sub i32 %450, %85
  %452 = add i32 %451, %86
  %453 = add i32 %452, %87
  %454 = add i32 %453, %89
  %455 = sub i32 %454, %90
  %456 = sub i32 %455, %95
  %457 = add i32 %456, %97
  %458 = add i32 %457, %99
  %459 = add i32 %458, %100
  %460 = add i32 %459, %103
  %461 = sub i32 %460, %107
  %462 = sub i32 %461, %113
  %463 = sub i32 %462, %115
  %464 = add i32 %463, %120
  %465 = sub i32 %464, %121
  %466 = add i32 %465, %123
  %467 = sub i32 %466, %126
  %468 = add i32 %467, %133
  %469 = sub i32 %468, %135
  %470 = add i32 %469, %137
  %471 = add i32 %470, %140
  %472 = sub i32 %471, %141
  %473 = sub i32 %472, %142
  %474 = add i32 %473, %191
  %475 = sub i32 %474, %57
  %476 = sub i32 %475, %66
  %477 = sub i32 %476, %92
  %478 = add i32 %477, %94
  %479 = add i32 %478, %106
  %480 = sub i32 %479, %112
  %481 = sub i32 %480, %118
  %482 = sub i32 %481, %125
  %483 = add i32 %482, %139
  %484 = add i32 %483, %150
  %485 = sub i32 %484, %216
  %486 = add i32 %485, %182
  %487 = add i32 %486, %203
  %488 = add i32 %487, %265
  %489 = add i32 %488, %309
  %490 = add i32 %489, %348
  %491 = add i32 %490, %153
  %492 = add i32 %491, %184
  %493 = add i32 %492, %190
  %494 = sub i32 %493, %204
  %495 = sub i32 %494, %206
  %496 = sub i32 %495, %230
  %497 = sub i32 %496, %231
  %498 = sub i32 %497, %240
  %499 = sub i32 %498, %155
  %500 = add i32 %499, %258
  %501 = sub i32 %500, %161
  %502 = sub i32 %501, %288
  %503 = sub i32 %502, %294
  %504 = add i32 %503, %295
  %505 = add i32 %504, %303
  %506 = sub i32 %505, %306
  %507 = add i32 %506, %323
  %508 = add i32 %507, %331
  %509 = sub i32 %508, %333
  %510 = add i32 %509, %151
  %511 = sub i32 %510, %337
  %512 = sub i32 %511, %163
  %513 = add i32 %512, %338
  %514 = sub i32 %513, %340
  %515 = sub i32 %514, %343
  %516 = sub i32 %515, %345
  %517 = add i32 %516, %415
  %518 = add i32 %517, %419
  %519 = sub i32 %518, %152
  %520 = add i32 %519, %157
  %521 = sub i32 %520, %160
  %522 = add i32 %521, %162
  %523 = sub i32 %522, %164
  %524 = sub i32 %523, %172
  %525 = add i32 %524, %175
  %526 = sub i32 %525, %186
  %527 = sub i32 %526, %189
  %528 = sub i32 %527, %196
  %529 = add i32 %528, %205
  %530 = sub i32 %529, %207
  %531 = add i32 %530, %209
  %532 = sub i32 %531, %210
  %533 = add i32 %532, %211
  %534 = sub i32 %533, %212
  %535 = add i32 %534, %213
  %536 = add i32 %535, %215
  %537 = add i32 %536, %217
  %538 = add i32 %537, %220
  %539 = sub i32 %538, %221
  %540 = add i32 %539, %222
  %541 = sub i32 %540, %227
  %542 = sub i32 %541, %228
  %543 = sub i32 %542, %229
  %544 = sub i32 %543, %223
  %545 = sub i32 %544, %237
  %546 = add i32 %545, %238
  %547 = add i32 %546, %239
  %548 = add i32 %547, %241
  %549 = sub i32 %548, %242
  %550 = sub i32 %549, %245
  %551 = add i32 %550, %246
  %552 = sub i32 %551, %255
  %553 = add i32 %552, %257
  %554 = sub i32 %553, %261
  %555 = sub i32 %554, %263
  %556 = sub i32 %555, %268
  %557 = add i32 %556, %272
  %558 = sub i32 %557, %276
  %559 = add i32 %558, %278
  %560 = sub i32 %559, %279
  %561 = add i32 %560, %280
  %562 = add i32 %561, %281
  %563 = add i32 %562, %282
  %564 = add i32 %563, %283
  %565 = sub i32 %564, %284
  %566 = sub i32 %565, %285
  %567 = sub i32 %566, %290
  %568 = add i32 %567, %291
  %569 = add i32 %568, %292
  %570 = add i32 %569, %293
  %571 = add i32 %570, %296
  %572 = add i32 %571, %297
  %573 = add i32 %572, %298
  %574 = add i32 %573, %299
  %575 = add i32 %574, %300
  %576 = add i32 %575, %302
  %577 = add i32 %576, %308
  %578 = add i32 %577, %311
  %579 = sub i32 %578, %314
  %580 = add i32 %579, %315
  %581 = sub i32 %580, %316
  %582 = add i32 %581, %317
  %583 = add i32 %582, %318
  %584 = add i32 %583, %319
  %585 = sub i32 %584, %322
  %586 = sub i32 %585, %324
  %587 = add i32 %586, %327
  %588 = sub i32 %587, %332
  %589 = sub i32 %588, %334
  %590 = sub i32 %589, %336
  %591 = add i32 %590, %341
  %592 = sub i32 %591, %344
  %593 = sub i32 %592, %346
  %594 = sub i32 %593, %347
  %595 = sub i32 %594, %352
  %596 = sub i32 %595, %356
  %597 = sub i32 %596, %358
  %598 = sub i32 %597, %360
  %599 = sub i32 %598, %362
  %600 = sub i32 %599, %367
  %601 = add i32 %600, %413
  %602 = add i32 %601, %170
  %603 = sub i32 %602, %178
  %604 = add i32 %603, %179
  %605 = sub i32 %604, %181
  %606 = add i32 %605, %195
  %607 = sub i32 %606, %233
  %608 = sub i32 %607, %235
  %609 = sub i32 %608, %248
  %610 = sub i32 %609, %254
  %611 = add i32 %610, %260
  %612 = sub i32 %611, %267
  %613 = sub i32 %612, %271
  %614 = add i32 %613, %273
  %615 = sub i32 %614, %275
  %616 = add i32 %615, %287
  %617 = sub i32 %616, %313
  %618 = sub i32 %617, %321
  %619 = sub i32 %618, %326
  %620 = add i32 %619, %329
  %621 = sub i32 %620, %349
  %622 = sub i32 %621, %351
  %623 = sub i32 %622, %354
  %624 = add i32 %623, %361
  %625 = sub i32 %624, %364
  %626 = add i32 %625, %366
  %627 = sub i32 %626, %305
  %628 = add i32 %627, %410
  %629 = add i32 %628, %417
  %630 = sub i32 %629, %252
  %631 = add i32 %630, %407
  %632 = add i32 %631, %399
  %633 = icmp eq i32 %23, %632
  %634 = select i1 %633, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %635 = tail call i32 @puts(i8* nonnull dereferenceable(1) %634)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
