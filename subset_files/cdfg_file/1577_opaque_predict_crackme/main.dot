digraph "DFG for'main' function" {
	Node0x2060b28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2060ba8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2060c38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2060c98[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2061118[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20611f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x20612f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20613b8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2061468[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20616c8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x2061788[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20626f8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2062d68[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2062e60[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x2063068[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20631c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x20632d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2063398[shape=record, label="  ret i32 0"];
	Node0x2060b28 -> Node0x2060ba8;
	Node0x2060ba8 -> Node0x2060c38;
	Node0x2060c38 -> Node0x2060c98;
	Node0x2060c98 -> Node0x2061118;
	Node0x2061118 -> Node0x20611f8;
	Node0x20611f8 -> Node0x20612f8;
	Node0x20612f8 -> Node0x20613b8;
	Node0x20613b8 -> Node0x2061468;
	Node0x2061468 -> Node0x20616c8;
	Node0x20616c8 -> Node0x2061788;
	Node0x2061788 -> Node0x20626f8;
	Node0x20626f8 -> Node0x2062d68;
	Node0x2062d68 -> Node0x2062e60;
	Node0x2062e60 -> Node0x2063068;
	Node0x2063068 -> Node0x20631c8;
	Node0x20631c8 -> Node0x20632d8;
	Node0x20632d8 -> Node0x2063398;
edge [color=red]
	Node0x2060b28 -> Node0x2060c98;
	Node0x2060c98 -> Node0x2061118;
	Node0x2060ba8 -> Node0x20611f8;
	Node0x20611f8 -> Node0x20612f8;
	Node0x2060c38 -> Node0x20613b8;
	Node0x20613b8 -> Node0x2061468;
	Node0x2060b28 -> Node0x20616c8;
	Node0x2060ba8 -> Node0x20616c8;
	Node0x2060c38 -> Node0x20616c8;
	Node0x2060b28 -> Node0x2061788;
	Node0x2060ba8 -> Node0x20626f8;
	Node0x2060c38 -> Node0x2062d68;
	Node0x2061788 -> Node0x2062e60;
	Node0x20626f8 -> Node0x2062e60;
	Node0x2062d68 -> Node0x2062e60;
	Node0x20613b8 -> Node0x2063068;
	Node0x20611f8 -> Node0x20631c8;
	Node0x2060c98 -> Node0x20632d8;
}
