digraph "DFG for'crackme' function" {
	Node0xdc9a00[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0xdc9a70[shape=record, label="  %4 = and i32 %3, %0"];
	Node0xdc9b30[shape=record, label="  %5 = shl i32 %4, 1"];
	Node0xdc9bd0[shape=record, label="  %6 = xor i32 %5, -2"];
	Node0xdc9c40[shape=record, label="  %7 = or i32 %3, %0"];
	Node0xdc9cb0[shape=record, label="  %8 = or i32 %1, %0"];
	Node0xdc9d20[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0xdc9d90[shape=record, label="  %10 = and i32 %1, %0"];
	Node0xdc9e00[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0xdc9e70[shape=record, label="  %12 = add i32 %0, %1"];
	Node0xdc9ee0[shape=record, label="  %13 = add i32 %12, %1"];
	Node0xdc9f50[shape=record, label="  %14 = add i32 %13, %7"];
	Node0xdc9fc0[shape=record, label="  %15 = add i32 %14, %9"];
	Node0xdca030[shape=record, label="  %16 = sub i32 %15, %5"];
	Node0xdca0a0[shape=record, label="  %17 = sub i32 %16, %11"];
	Node0xdca110[shape=record, label="  %18 = icmp eq i32 %6, %17"];
	Node0xd6a268[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xdca5b0[shape=record, label="  %20 = tail call i32 @puts(i8* nonnull dereferenceable(1) %19)"];
	Node0xdca600[shape=record, label="  ret void"];
	Node0xdc9a00 -> Node0xdc9a70;
	Node0xdc9a70 -> Node0xdc9b30;
	Node0xdc9b30 -> Node0xdc9bd0;
	Node0xdc9bd0 -> Node0xdc9c40;
	Node0xdc9c40 -> Node0xdc9cb0;
	Node0xdc9cb0 -> Node0xdc9d20;
	Node0xdc9d20 -> Node0xdc9d90;
	Node0xdc9d90 -> Node0xdc9e00;
	Node0xdc9e00 -> Node0xdc9e70;
	Node0xdc9e70 -> Node0xdc9ee0;
	Node0xdc9ee0 -> Node0xdc9f50;
	Node0xdc9f50 -> Node0xdc9fc0;
	Node0xdc9fc0 -> Node0xdca030;
	Node0xdca030 -> Node0xdca0a0;
	Node0xdca0a0 -> Node0xdca110;
	Node0xdca110 -> Node0xd6a268;
	Node0xd6a268 -> Node0xdca5b0;
	Node0xdca5b0 -> Node0xdca600;
edge [color=red]
	Node0xdc9a00 -> Node0xdc9a70;
	Node0xdc9a70 -> Node0xdc9b30;
	Node0xdc9b30 -> Node0xdc9bd0;
	Node0xdc9a00 -> Node0xdc9c40;
	Node0xdc9cb0 -> Node0xdc9d20;
	Node0xdc9d90 -> Node0xdc9e00;
	Node0xdc9e70 -> Node0xdc9ee0;
	Node0xdc9ee0 -> Node0xdc9f50;
	Node0xdc9c40 -> Node0xdc9f50;
	Node0xdc9f50 -> Node0xdc9fc0;
	Node0xdc9d20 -> Node0xdc9fc0;
	Node0xdc9fc0 -> Node0xdca030;
	Node0xdc9b30 -> Node0xdca030;
	Node0xdca030 -> Node0xdca0a0;
	Node0xdc9e00 -> Node0xdca0a0;
	Node0xdc9bd0 -> Node0xdca110;
	Node0xdca0a0 -> Node0xdca110;
	Node0xdca110 -> Node0xd6a268;
	Node0xd6a268 -> Node0xdca5b0;
}
