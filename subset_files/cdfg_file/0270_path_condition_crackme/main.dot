digraph "DFG for'main' function" {
	Node0x1c925d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c92658[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c926e8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c92748[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1c92bc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c92ca8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1c92da8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c92e68[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1c92f18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c93178[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1c93238[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c93398[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c933f8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c9a0b0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1c9a2b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c9a418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c9a528[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c9a5e8[shape=record, label="  ret i32 0"];
	Node0x1c925d8 -> Node0x1c92658;
	Node0x1c92658 -> Node0x1c926e8;
	Node0x1c926e8 -> Node0x1c92748;
	Node0x1c92748 -> Node0x1c92bc8;
	Node0x1c92bc8 -> Node0x1c92ca8;
	Node0x1c92ca8 -> Node0x1c92da8;
	Node0x1c92da8 -> Node0x1c92e68;
	Node0x1c92e68 -> Node0x1c92f18;
	Node0x1c92f18 -> Node0x1c93178;
	Node0x1c93178 -> Node0x1c93238;
	Node0x1c93238 -> Node0x1c93398;
	Node0x1c93398 -> Node0x1c933f8;
	Node0x1c933f8 -> Node0x1c9a0b0;
	Node0x1c9a0b0 -> Node0x1c9a2b8;
	Node0x1c9a2b8 -> Node0x1c9a418;
	Node0x1c9a418 -> Node0x1c9a528;
	Node0x1c9a528 -> Node0x1c9a5e8;
edge [color=red]
	Node0x1c925d8 -> Node0x1c92748;
	Node0x1c92748 -> Node0x1c92bc8;
	Node0x1c92658 -> Node0x1c92ca8;
	Node0x1c92ca8 -> Node0x1c92da8;
	Node0x1c926e8 -> Node0x1c92e68;
	Node0x1c92e68 -> Node0x1c92f18;
	Node0x1c925d8 -> Node0x1c93178;
	Node0x1c92658 -> Node0x1c93178;
	Node0x1c926e8 -> Node0x1c93178;
	Node0x1c925d8 -> Node0x1c93238;
	Node0x1c92658 -> Node0x1c93398;
	Node0x1c926e8 -> Node0x1c933f8;
	Node0x1c93238 -> Node0x1c9a0b0;
	Node0x1c93398 -> Node0x1c9a0b0;
	Node0x1c933f8 -> Node0x1c9a0b0;
	Node0x1c92e68 -> Node0x1c9a2b8;
	Node0x1c92ca8 -> Node0x1c9a418;
	Node0x1c92748 -> Node0x1c9a528;
}
