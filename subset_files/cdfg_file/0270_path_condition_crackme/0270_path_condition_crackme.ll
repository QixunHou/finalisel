; ModuleID = '../.././c_source_file/0270_path_condition_crackme.c'
source_filename = "../.././c_source_file/0270_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %2, %1
  %5 = and i32 %4, %0
  %6 = xor i32 %0, -1
  %7 = xor i32 %2, %1
  %8 = and i32 %7, %6
  %9 = or i32 %5, %8
  %10 = and i32 %1, %0
  %11 = xor i32 %10, -1
  %12 = xor i32 %2, %0
  %13 = xor i32 %12, -1
  %14 = and i32 %13, %11
  %15 = shl i32 %14, 1
  %16 = sub i32 %9, %15
  %17 = and i32 %2, %0
  %18 = xor i32 %1, -1
  %19 = or i32 %18, %0
  %20 = xor i32 %19, -1
  %21 = or i32 %17, %20
  %22 = or i32 %2, %1
  %23 = xor i32 %22, %0
  %24 = xor i32 %23, 2147483647
  %25 = xor i32 %24, %5
  %26 = shl i32 %25, 1
  %27 = or i32 %2, %0
  %28 = xor i32 %1, %0
  %29 = and i32 %27, %28
  %30 = xor i32 %2, -1
  %31 = and i32 %30, %0
  %32 = xor i32 %31, -1
  %33 = and i32 %28, %32
  %34 = and i32 %11, %2
  %35 = xor i32 %22, -1
  %36 = or i32 %17, %35
  %37 = xor i32 %27, -1
  %38 = xor i32 %28, -1
  %39 = or i32 %37, %38
  %40 = and i32 %18, %0
  %41 = xor i32 %4, -1
  %42 = xor i32 %40, %41
  %43 = shl i32 %42, 1
  %44 = or i32 %7, %6
  %45 = and i32 %30, %1
  %46 = or i32 %45, %6
  %47 = xor i32 %45, -1
  %48 = xor i32 %47, %0
  %49 = xor i32 %40, -1
  %50 = and i32 %13, %49
  %51 = or i32 %12, %18
  %52 = or i32 %1, %0
  %53 = xor i32 %52, -1
  %54 = or i32 %12, %53
  %55 = or i32 %30, %1
  %56 = or i32 %53, %2
  %57 = shl i32 %56, 1
  %58 = or i32 %17, %53
  %59 = or i32 %4, %6
  %60 = xor i32 %41, %0
  %61 = shl i32 %23, 1
  %62 = and i32 %18, %2
  %63 = and i32 %62, %6
  %64 = xor i32 %63, %44
  %65 = xor i32 %7, -1
  %66 = xor i32 %65, %0
  %67 = xor i32 %55, -1
  %68 = or i32 %67, %0
  %69 = or i32 %20, %2
  %70 = or i32 %40, %2
  %71 = xor i32 %17, %22
  %72 = and i32 %27, %18
  %73 = or i32 %47, %6
  %74 = or i32 %28, %13
  %75 = or i32 %31, %18
  %76 = xor i32 %17, -1
  %77 = and i32 %76, %1
  %78 = and i32 %13, %1
  %79 = or i32 %30, %0
  %80 = and i32 %79, %18
  %81 = and i32 %13, %38
  %82 = or i32 %13, %38
  %83 = and i32 %7, %49
  %84 = and i32 %13, %18
  %85 = shl i32 %84, 1
  %86 = or i32 %28, %2
  %87 = and i32 %7, %0
  %88 = shl i32 %87, 1
  %89 = and i32 %22, %6
  %90 = or i32 %5, %89
  %91 = and i32 %7, %52
  %92 = or i32 %37, %1
  %93 = or i32 %17, %28
  %94 = or i32 %30, %20
  %95 = xor i32 %79, -1
  %96 = or i32 %95, %38
  %97 = and i32 %52, %13
  %98 = and i32 %12, %49
  %99 = and i32 %19, %65
  %100 = or i32 %13, %18
  %101 = and i32 %79, %38
  %102 = shl i32 %101, 1
  %103 = or i32 %10, %30
  %104 = and i32 %4, %6
  %105 = or i32 %104, %87
  %106 = shl i32 %105, 1
  %107 = or i32 %18, %2
  %108 = and i32 %107, %0
  %109 = xor i32 %108, 2147483647
  %110 = xor i32 %109, %63
  %111 = xor i32 %31, %41
  %112 = or i32 %7, %0
  %113 = and i32 %22, %0
  %114 = xor i32 %113, -1
  %115 = xor i32 %104, %114
  %116 = or i32 %4, %0
  %117 = or i32 %17, %1
  %118 = and i32 %12, %38
  %119 = and i32 %12, %28
  %120 = or i32 %95, %18
  %121 = shl i32 %120, 1
  %122 = xor i32 %35, %0
  %123 = xor i32 %7, %0
  %124 = xor i32 %5, %123
  %125 = xor i32 %55, %0
  %126 = xor i32 %17, %1
  %127 = and i32 %76, %18
  %128 = xor i32 %11, %2
  %129 = or i32 %31, %28
  %130 = or i32 %22, %0
  %131 = add i32 %22, 1
  %132 = or i32 %22, %6
  %133 = and i32 %52, %30
  %134 = and i32 %52, %2
  %135 = or i32 %7, %10
  %136 = or i32 %28, %95
  %137 = and i32 %30, %11
  %138 = xor i32 %67, %0
  %139 = or i32 %30, %53
  %140 = or i32 %12, %28
  %141 = xor i32 %140, -1
  %142 = xor i32 %4, %0
  %143 = shl i32 %142, 1
  %144 = xor i32 %17, %47
  %145 = or i32 %65, %0
  %146 = and i32 %62, %0
  %147 = and i32 %107, %6
  %148 = xor i32 %147, 2147483647
  %149 = xor i32 %148, %146
  %150 = or i32 %55, %6
  %151 = or i32 %37, %18
  %152 = or i32 %41, %6
  %153 = xor i32 %52, %2
  %154 = shl i32 %153, 1
  %155 = xor i32 %20, %2
  %156 = and i32 %12, %11
  %157 = or i32 %31, %67
  %158 = or i32 %35, %0
  %159 = xor i32 %49, %2
  %160 = or i32 %30, %38
  %161 = and i32 %49, %2
  %162 = or i32 %35, %6
  %163 = and i32 %65, %49
  %164 = add i32 %40, 1
  %165 = xor i32 %40, %2
  %166 = xor i32 %89, 1073741823
  %167 = xor i32 %166, %5
  %168 = shl i32 %167, 2
  %169 = and i32 %12, %18
  %170 = xor i32 %27, %1
  %171 = and i32 %19, %2
  %172 = or i32 %67, %6
  %173 = and i32 %52, %65
  %174 = and i32 %41, %6
  %175 = or i32 %7, %20
  %176 = xor i32 %76, %1
  %177 = and i32 %28, %13
  %178 = xor i32 %31, %55
  %179 = and i32 %12, %19
  %180 = and i32 %65, %6
  %181 = and i32 %12, %1
  %182 = or i32 %4, %40
  %183 = or i32 %41, %0
  %184 = or i32 %17, %18
  %185 = or i32 %10, %2
  %186 = shl i32 %185, 1
  %187 = and i32 %41, %0
  %188 = xor i32 %37, %1
  %189 = or i32 %17, %45
  %190 = shl i32 %189, 2
  %191 = or i32 %13, %1
  %192 = and i32 %32, %18
  %193 = xor i32 %40, %47
  %194 = xor i32 %45, %0
  %195 = or i32 %28, %37
  %196 = shl i32 %195, 1
  %197 = or i32 %47, %0
  %198 = and i32 %65, %0
  %199 = shl i32 %198, 1
  %200 = or i32 %95, %1
  %201 = and i32 %55, %6
  %202 = and i32 %47, %6
  %203 = or i32 %10, %37
  %204 = xor i32 %53, %2
  %205 = xor i32 %8, -1
  %206 = xor i32 %5, %205
  %207 = xor i32 %55, %10
  %208 = xor i32 %32, %1
  %209 = or i32 %65, %6
  %210 = or i32 %146, %123
  %211 = shl i32 %210, 1
  %212 = and i32 %32, %38
  %213 = and i32 %47, %0
  %214 = xor i32 %44, -1
  %215 = or i32 %63, %214
  %216 = shl i32 %13, 2
  %217 = or i32 %5, %23
  %218 = and i32 %38, %2
  %219 = xor i32 %79, %10
  %220 = and i32 %65, %11
  %221 = or i32 %45, %0
  %222 = xor i32 %19, %2
  %223 = or i32 %13, %53
  %224 = and i32 %76, %38
  %225 = or i32 %28, %30
  %226 = and i32 %27, %1
  %227 = or i32 %10, %95
  %228 = or i32 %40, %30
  %229 = or i32 %10, %67
  %230 = and i32 %28, %2
  %231 = and i32 %79, %28
  %232 = or i32 %31, %4
  %233 = xor i32 %146, %112
  %234 = or i32 %31, %38
  %235 = or i32 %12, %20
  %236 = or i32 %146, %147
  %237 = shl i32 %45, 1
  %238 = and i32 %55, %0
  %239 = or i32 %65, %20
  %240 = xor i32 %123, -1
  %241 = or i32 %5, %240
  %242 = and i32 %28, %30
  %243 = xor i32 %17, %52
  %244 = xor i32 %31, %1
  %245 = add i32 %7, 1
  %246 = or i32 %40, %65
  %247 = xor i32 %112, -1
  %248 = or i32 %146, %247
  %249 = or i32 %10, %13
  %250 = or i32 %10, %65
  %251 = or i32 %65, %53
  %252 = and i32 %35, %6
  %253 = mul i32 %252, -7
  %254 = and i32 %45, %6
  %255 = and i32 %35, %0
  %256 = and i32 %45, %0
  %257 = and i32 %67, %6
  %258 = and i32 %67, %0
  %259 = mul i32 %258, 23
  %260 = add i32 %1, %0
  %261 = add i32 %260, %11
  %262 = add i32 %261, %2
  %263 = add i32 %262, %160
  %264 = add i32 %263, %133
  %265 = add i32 %264, %208
  %266 = add i32 %265, %200
  %267 = add i32 %266, %176
  %268 = add i32 %267, %173
  %269 = add i32 %268, %169
  %270 = add i32 %269, %158
  %271 = add i32 %270, %136
  %272 = add i32 %271, %98
  %273 = add i32 %272, %72
  %274 = add i32 %273, %51
  %275 = add i32 %274, %110
  %276 = add i32 %275, %149
  %277 = shl i32 %276, 1
  %278 = add i32 %103, %134
  %279 = sub i32 %278, %59
  %280 = sub i32 %279, %116
  %281 = mul i32 %280, 5
  %282 = add i32 %151, %137
  %283 = add i32 %282, %104
  %284 = shl i32 %283, 2
  %285 = add i32 %257, %255
  %286 = mul i32 %285, -6
  %287 = sub i32 %5, %254
  %288 = mul i32 %287, 9
  %289 = add i32 %69, %76
  %290 = sub i32 %289, %184
  %291 = sub i32 %290, %119
  %292 = add i32 %291, %124
  %293 = mul i32 %292, 3
  %294 = sub i32 %0, %19
  %295 = add i32 %294, %30
  %296 = add i32 %295, %38
  %297 = add i32 %296, %53
  %298 = add i32 %297, %164
  %299 = add i32 %298, %10
  %300 = sub i32 %299, %28
  %301 = sub i32 %300, %52
  %302 = sub i32 %301, %34
  %303 = sub i32 %302, %69
  %304 = sub i32 %303, %70
  %305 = sub i32 %304, %7
  %306 = sub i32 %305, %86
  %307 = sub i32 %306, %79
  %308 = add i32 %307, %94
  %309 = add i32 %308, %22
  %310 = add i32 %309, %95
  %311 = add i32 %310, %128
  %312 = add i32 %311, %131
  %313 = add i32 %312, %12
  %314 = add i32 %313, %139
  %315 = add i32 %314, %155
  %316 = add i32 %315, %159
  %317 = add i32 %316, %161
  %318 = add i32 %317, %165
  %319 = add i32 %318, %171
  %320 = add i32 %319, 1
  %321 = sub i32 %320, %204
  %322 = sub i32 %321, %218
  %323 = sub i32 %322, %222
  %324 = add i32 %323, %225
  %325 = sub i32 %324, %228
  %326 = sub i32 %325, %230
  %327 = sub i32 %326, %242
  %328 = add i32 %327, %245
  %329 = sub i32 %328, %21
  %330 = add i32 %329, %29
  %331 = sub i32 %330, %33
  %332 = add i32 %331, %36
  %333 = add i32 %332, %39
  %334 = sub i32 %333, %44
  %335 = add i32 %334, %46
  %336 = add i32 %335, %48
  %337 = add i32 %336, %50
  %338 = sub i32 %337, %54
  %339 = sub i32 %338, %57
  %340 = add i32 %339, %58
  %341 = sub i32 %340, %60
  %342 = sub i32 %341, %66
  %343 = add i32 %342, %68
  %344 = sub i32 %343, %71
  %345 = sub i32 %344, %73
  %346 = add i32 %345, %74
  %347 = sub i32 %346, %75
  %348 = sub i32 %347, %77
  %349 = add i32 %348, %78
  %350 = sub i32 %349, %80
  %351 = add i32 %350, %81
  %352 = sub i32 %351, %82
  %353 = sub i32 %352, %83
  %354 = sub i32 %353, %91
  %355 = sub i32 %354, %92
  %356 = sub i32 %355, %93
  %357 = add i32 %356, %96
  %358 = sub i32 %357, %97
  %359 = sub i32 %358, %99
  %360 = sub i32 %359, %100
  %361 = add i32 %360, %111
  %362 = sub i32 %361, %112
  %363 = add i32 %362, %117
  %364 = sub i32 %363, %118
  %365 = add i32 %364, %122
  %366 = add i32 %365, %125
  %367 = sub i32 %366, %126
  %368 = add i32 %367, %127
  %369 = add i32 %368, %129
  %370 = add i32 %369, %130
  %371 = sub i32 %370, %132
  %372 = sub i32 %371, %89
  %373 = add i32 %372, %135
  %374 = sub i32 %373, %138
  %375 = add i32 %374, %141
  %376 = add i32 %375, %144
  %377 = sub i32 %376, %145
  %378 = sub i32 %377, %150
  %379 = add i32 %378, %152
  %380 = sub i32 %379, %154
  %381 = add i32 %380, %156
  %382 = add i32 %381, %157
  %383 = add i32 %382, %162
  %384 = sub i32 %383, %163
  %385 = sub i32 %384, %170
  %386 = sub i32 %385, %172
  %387 = add i32 %386, %174
  %388 = sub i32 %387, %175
  %389 = add i32 %388, %177
  %390 = add i32 %389, %178
  %391 = sub i32 %390, %179
  %392 = add i32 %391, %180
  %393 = add i32 %392, %181
  %394 = add i32 %393, %182
  %395 = sub i32 %394, %183
  %396 = sub i32 %395, %186
  %397 = sub i32 %396, %187
  %398 = add i32 %397, %188
  %399 = add i32 %398, %191
  %400 = sub i32 %399, %192
  %401 = sub i32 %400, %193
  %402 = add i32 %401, %194
  %403 = add i32 %402, %197
  %404 = add i32 %403, %201
  %405 = add i32 %404, %202
  %406 = add i32 %405, %203
  %407 = add i32 %406, %207
  %408 = sub i32 %407, %209
  %409 = add i32 %408, %212
  %410 = sub i32 %409, %213
  %411 = sub i32 %410, %216
  %412 = add i32 %411, %219
  %413 = add i32 %412, %220
  %414 = add i32 %413, %221
  %415 = sub i32 %414, %223
  %416 = add i32 %415, %224
  %417 = sub i32 %416, %226
  %418 = add i32 %417, %227
  %419 = sub i32 %418, %229
  %420 = sub i32 %419, %231
  %421 = sub i32 %420, %232
  %422 = sub i32 %421, %234
  %423 = add i32 %422, %235
  %424 = sub i32 %423, %237
  %425 = sub i32 %424, %238
  %426 = sub i32 %425, %239
  %427 = add i32 %426, %243
  %428 = sub i32 %427, %244
  %429 = sub i32 %428, %246
  %430 = sub i32 %429, %249
  %431 = add i32 %430, %250
  %432 = sub i32 %431, %251
  %433 = sub i32 %432, %256
  %434 = sub i32 %433, %43
  %435 = sub i32 %434, %61
  %436 = add i32 %435, %64
  %437 = sub i32 %436, %85
  %438 = sub i32 %437, %88
  %439 = sub i32 %438, %90
  %440 = sub i32 %439, %102
  %441 = sub i32 %440, %115
  %442 = sub i32 %441, %121
  %443 = sub i32 %442, %143
  %444 = sub i32 %443, %190
  %445 = sub i32 %444, %196
  %446 = sub i32 %445, %199
  %447 = sub i32 %446, %206
  %448 = sub i32 %447, %215
  %449 = add i32 %448, %217
  %450 = add i32 %449, %233
  %451 = sub i32 %450, %236
  %452 = sub i32 %451, %241
  %453 = sub i32 %452, %248
  %454 = add i32 %453, %253
  %455 = add i32 %454, %259
  %456 = sub i32 %455, %106
  %457 = sub i32 %456, %211
  %458 = add i32 %457, %286
  %459 = add i32 %458, %288
  %460 = add i32 %459, %26
  %461 = sub i32 %460, %168
  %462 = add i32 %461, %284
  %463 = add i32 %462, %281
  %464 = add i32 %463, %293
  %465 = add i32 %464, %277
  %466 = icmp eq i32 %16, %465
  %467 = select i1 %466, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %468 = tail call i32 @puts(i8* nonnull dereferenceable(1) %467)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
