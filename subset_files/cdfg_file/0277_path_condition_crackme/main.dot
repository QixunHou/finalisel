digraph "DFG for'main' function" {
	Node0x195edf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x195ee78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x195ef08[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x195f368[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x195f448[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x195f568[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x195f7a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x195f858[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x19607c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1960e50[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1960ec0[shape=record, label="  %9 = or i32 %7, %6"];
	Node0x1960f30[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x1960fa0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x1961010[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x1961080[shape=record, label="  %13 = shl i32 %10, 2"];
	Node0x19610f0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1961160[shape=record, label="  %15 = and i32 %6, %8"];
	Node0x19611d0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x1961240[shape=record, label="  %17 = shl i32 %7, 1"];
	Node0x19612b0[shape=record, label="  %18 = shl i32 %9, 1"];
	Node0x1961320[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x1961390[shape=record, label="  %20 = xor i32 %6, -1"];
	Node0x1961400[shape=record, label="  %21 = and i32 %7, %20"];
	Node0x1961470[shape=record, label="  %22 = mul i32 %15, 3"];
	Node0x19614e0[shape=record, label="  %23 = and i32 %7, %6"];
	Node0x1961550[shape=record, label="  %24 = mul i32 %23, -6"];
	Node0x19615c0[shape=record, label="  %25 = add i32 %12, %16"];
	Node0x1961630[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x19616a0[shape=record, label="  %27 = sub i32 %26, %21"];
	Node0x1961710[shape=record, label="  %28 = add i32 %27, %14"];
	Node0x1961780[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x19617f0[shape=record, label="  %30 = add i32 %29, %24"];
	Node0x1961860[shape=record, label="  %31 = sub i32 %30, %19"];
	Node0x19618d0[shape=record, label="  %32 = icmp eq i32 %31, %8"];
	Node0x18ff9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1961b70[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x1961dc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1961f28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1961fe8[shape=record, label="  ret i32 0"];
	Node0x195edf8 -> Node0x195ee78;
	Node0x195ee78 -> Node0x195ef08;
	Node0x195ef08 -> Node0x195f368;
	Node0x195f368 -> Node0x195f448;
	Node0x195f448 -> Node0x195f568;
	Node0x195f568 -> Node0x195f7a0;
	Node0x195f7a0 -> Node0x195f858;
	Node0x195f858 -> Node0x19607c8;
	Node0x19607c8 -> Node0x1960e50;
	Node0x1960e50 -> Node0x1960ec0;
	Node0x1960ec0 -> Node0x1960f30;
	Node0x1960f30 -> Node0x1960fa0;
	Node0x1960fa0 -> Node0x1961010;
	Node0x1961010 -> Node0x1961080;
	Node0x1961080 -> Node0x19610f0;
	Node0x19610f0 -> Node0x1961160;
	Node0x1961160 -> Node0x19611d0;
	Node0x19611d0 -> Node0x1961240;
	Node0x1961240 -> Node0x19612b0;
	Node0x19612b0 -> Node0x1961320;
	Node0x1961320 -> Node0x1961390;
	Node0x1961390 -> Node0x1961400;
	Node0x1961400 -> Node0x1961470;
	Node0x1961470 -> Node0x19614e0;
	Node0x19614e0 -> Node0x1961550;
	Node0x1961550 -> Node0x19615c0;
	Node0x19615c0 -> Node0x1961630;
	Node0x1961630 -> Node0x19616a0;
	Node0x19616a0 -> Node0x1961710;
	Node0x1961710 -> Node0x1961780;
	Node0x1961780 -> Node0x19617f0;
	Node0x19617f0 -> Node0x1961860;
	Node0x1961860 -> Node0x19618d0;
	Node0x19618d0 -> Node0x18ff9d8;
	Node0x18ff9d8 -> Node0x1961b70;
	Node0x1961b70 -> Node0x1961dc8;
	Node0x1961dc8 -> Node0x1961f28;
	Node0x1961f28 -> Node0x1961fe8;
edge [color=red]
	Node0x195edf8 -> Node0x195ef08;
	Node0x195ef08 -> Node0x195f368;
	Node0x195ee78 -> Node0x195f448;
	Node0x195f448 -> Node0x195f568;
	Node0x195edf8 -> Node0x195f7a0;
	Node0x195ee78 -> Node0x195f7a0;
	Node0x195edf8 -> Node0x195f858;
	Node0x195ee78 -> Node0x19607c8;
	Node0x19607c8 -> Node0x1960e50;
	Node0x19607c8 -> Node0x1960ec0;
	Node0x195f858 -> Node0x1960ec0;
	Node0x19607c8 -> Node0x1960f30;
	Node0x195f858 -> Node0x1960f30;
	Node0x1960f30 -> Node0x1960fa0;
	Node0x1960ec0 -> Node0x1961010;
	Node0x1960fa0 -> Node0x1961010;
	Node0x1960f30 -> Node0x1961080;
	Node0x1961080 -> Node0x19610f0;
	Node0x195f858 -> Node0x1961160;
	Node0x1960e50 -> Node0x1961160;
	Node0x1961160 -> Node0x19611d0;
	Node0x19607c8 -> Node0x1961240;
	Node0x1960ec0 -> Node0x19612b0;
	Node0x19612b0 -> Node0x1961320;
	Node0x195f858 -> Node0x1961390;
	Node0x19607c8 -> Node0x1961400;
	Node0x1961390 -> Node0x1961400;
	Node0x1961160 -> Node0x1961470;
	Node0x19607c8 -> Node0x19614e0;
	Node0x195f858 -> Node0x19614e0;
	Node0x19614e0 -> Node0x1961550;
	Node0x1961010 -> Node0x19615c0;
	Node0x19611d0 -> Node0x19615c0;
	Node0x19615c0 -> Node0x1961630;
	Node0x1961240 -> Node0x1961630;
	Node0x1961630 -> Node0x19616a0;
	Node0x1961400 -> Node0x19616a0;
	Node0x19616a0 -> Node0x1961710;
	Node0x19610f0 -> Node0x1961710;
	Node0x1961710 -> Node0x1961780;
	Node0x1961470 -> Node0x1961780;
	Node0x1961780 -> Node0x19617f0;
	Node0x1961550 -> Node0x19617f0;
	Node0x19617f0 -> Node0x1961860;
	Node0x1961320 -> Node0x1961860;
	Node0x1961860 -> Node0x19618d0;
	Node0x1960e50 -> Node0x19618d0;
	Node0x19618d0 -> Node0x18ff9d8;
	Node0x18ff9d8 -> Node0x1961b70;
	Node0x195f448 -> Node0x1961dc8;
	Node0x195ef08 -> Node0x1961f28;
}
