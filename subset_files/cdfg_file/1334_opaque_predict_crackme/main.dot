digraph "DFG for'main' function" {
	Node0x7adb18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x7adb98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x7adc28[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x7ae088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x7ae168[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x7ae288[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7ae4c0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x7ae578[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x7af4e8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x7afb70[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x7afbe0[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x7afc50[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x7afcc0[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x7afd30[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x7afda0[shape=record, label="  %13 = or i32 %6, %12"];
	Node0x7afe10[shape=record, label="  %14 = shl i32 %13, 2"];
	Node0x7afe80[shape=record, label="  %15 = xor i32 %14, -4"];
	Node0x7afef0[shape=record, label="  %16 = and i32 %6, %12"];
	Node0x7aff60[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x7affd0[shape=record, label="  %18 = add i32 %6, %12"];
	Node0x7b0040[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x7b00b0[shape=record, label="  %20 = sub i32 2, %7"];
	Node0x7b0120[shape=record, label="  %21 = sub i32 %20, %10"];
	Node0x7b0190[shape=record, label="  %22 = add i32 %21, %11"];
	Node0x7b0200[shape=record, label="  %23 = add i32 %22, %13"];
	Node0x7b0270[shape=record, label="  %24 = add i32 %23, %8"];
	Node0x7b02e0[shape=record, label="  %25 = sub i32 %24, %17"];
	Node0x7b0350[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x7b03c0[shape=record, label="  %27 = add i32 %26, %15"];
	Node0x7b0430[shape=record, label="  %28 = icmp eq i32 %27, %9"];
	Node0x74e9d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x7b04c0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x7b0718[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x7b0878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x7b0938[shape=record, label="  ret i32 0"];
	Node0x7adb18 -> Node0x7adb98;
	Node0x7adb98 -> Node0x7adc28;
	Node0x7adc28 -> Node0x7ae088;
	Node0x7ae088 -> Node0x7ae168;
	Node0x7ae168 -> Node0x7ae288;
	Node0x7ae288 -> Node0x7ae4c0;
	Node0x7ae4c0 -> Node0x7ae578;
	Node0x7ae578 -> Node0x7af4e8;
	Node0x7af4e8 -> Node0x7afb70;
	Node0x7afb70 -> Node0x7afbe0;
	Node0x7afbe0 -> Node0x7afc50;
	Node0x7afc50 -> Node0x7afcc0;
	Node0x7afcc0 -> Node0x7afd30;
	Node0x7afd30 -> Node0x7afda0;
	Node0x7afda0 -> Node0x7afe10;
	Node0x7afe10 -> Node0x7afe80;
	Node0x7afe80 -> Node0x7afef0;
	Node0x7afef0 -> Node0x7aff60;
	Node0x7aff60 -> Node0x7affd0;
	Node0x7affd0 -> Node0x7b0040;
	Node0x7b0040 -> Node0x7b00b0;
	Node0x7b00b0 -> Node0x7b0120;
	Node0x7b0120 -> Node0x7b0190;
	Node0x7b0190 -> Node0x7b0200;
	Node0x7b0200 -> Node0x7b0270;
	Node0x7b0270 -> Node0x7b02e0;
	Node0x7b02e0 -> Node0x7b0350;
	Node0x7b0350 -> Node0x7b03c0;
	Node0x7b03c0 -> Node0x7b0430;
	Node0x7b0430 -> Node0x74e9d8;
	Node0x74e9d8 -> Node0x7b04c0;
	Node0x7b04c0 -> Node0x7b0718;
	Node0x7b0718 -> Node0x7b0878;
	Node0x7b0878 -> Node0x7b0938;
edge [color=red]
	Node0x7adb18 -> Node0x7adc28;
	Node0x7adc28 -> Node0x7ae088;
	Node0x7adb98 -> Node0x7ae168;
	Node0x7ae168 -> Node0x7ae288;
	Node0x7adb18 -> Node0x7ae4c0;
	Node0x7adb98 -> Node0x7ae4c0;
	Node0x7adb18 -> Node0x7ae578;
	Node0x7adb98 -> Node0x7af4e8;
	Node0x7af4e8 -> Node0x7afb70;
	Node0x7ae578 -> Node0x7afb70;
	Node0x7afb70 -> Node0x7afbe0;
	Node0x7af4e8 -> Node0x7afc50;
	Node0x7ae578 -> Node0x7afc50;
	Node0x7af4e8 -> Node0x7afcc0;
	Node0x7ae578 -> Node0x7afcc0;
	Node0x7af4e8 -> Node0x7afd30;
	Node0x7ae578 -> Node0x7afda0;
	Node0x7afd30 -> Node0x7afda0;
	Node0x7afda0 -> Node0x7afe10;
	Node0x7afe10 -> Node0x7afe80;
	Node0x7ae578 -> Node0x7afef0;
	Node0x7afd30 -> Node0x7afef0;
	Node0x7afef0 -> Node0x7aff60;
	Node0x7ae578 -> Node0x7affd0;
	Node0x7afd30 -> Node0x7affd0;
	Node0x7affd0 -> Node0x7b0040;
	Node0x7af4e8 -> Node0x7b00b0;
	Node0x7b00b0 -> Node0x7b0120;
	Node0x7afc50 -> Node0x7b0120;
	Node0x7b0120 -> Node0x7b0190;
	Node0x7afcc0 -> Node0x7b0190;
	Node0x7b0190 -> Node0x7b0200;
	Node0x7afda0 -> Node0x7b0200;
	Node0x7b0200 -> Node0x7b0270;
	Node0x7afb70 -> Node0x7b0270;
	Node0x7b0270 -> Node0x7b02e0;
	Node0x7aff60 -> Node0x7b02e0;
	Node0x7b02e0 -> Node0x7b0350;
	Node0x7b0040 -> Node0x7b0350;
	Node0x7b0350 -> Node0x7b03c0;
	Node0x7afe80 -> Node0x7b03c0;
	Node0x7b03c0 -> Node0x7b0430;
	Node0x7afbe0 -> Node0x7b0430;
	Node0x7b0430 -> Node0x74e9d8;
	Node0x74e9d8 -> Node0x7b04c0;
	Node0x7ae168 -> Node0x7b0718;
	Node0x7adc28 -> Node0x7b0878;
}
