digraph "DFG for'main' function" {
	Node0x5a3e88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5a3f08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5a3f98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x5a3ff8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x5a40a8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x5a44d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5a45b8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x5a46b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5a4778[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x5a4828[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5a48e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x5a4998[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x59e7e0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x5a4b98[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5a5b08[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x5a6178[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x5a61d8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x5a62e8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x5a6548[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x5a66a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5a67b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5a68c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5a6988[shape=record, label="  ret i32 0"];
	Node0x5a3e88 -> Node0x5a3f08;
	Node0x5a3f08 -> Node0x5a3f98;
	Node0x5a3f98 -> Node0x5a3ff8;
	Node0x5a3ff8 -> Node0x5a40a8;
	Node0x5a40a8 -> Node0x5a44d8;
	Node0x5a44d8 -> Node0x5a45b8;
	Node0x5a45b8 -> Node0x5a46b8;
	Node0x5a46b8 -> Node0x5a4778;
	Node0x5a4778 -> Node0x5a4828;
	Node0x5a4828 -> Node0x5a48e8;
	Node0x5a48e8 -> Node0x5a4998;
	Node0x5a4998 -> Node0x59e7e0;
	Node0x59e7e0 -> Node0x5a4b98;
	Node0x5a4b98 -> Node0x5a5b08;
	Node0x5a5b08 -> Node0x5a6178;
	Node0x5a6178 -> Node0x5a61d8;
	Node0x5a61d8 -> Node0x5a62e8;
	Node0x5a62e8 -> Node0x5a6548;
	Node0x5a6548 -> Node0x5a66a8;
	Node0x5a66a8 -> Node0x5a67b8;
	Node0x5a67b8 -> Node0x5a68c8;
	Node0x5a68c8 -> Node0x5a6988;
edge [color=red]
	Node0x5a3e88 -> Node0x5a40a8;
	Node0x5a40a8 -> Node0x5a44d8;
	Node0x5a3f08 -> Node0x5a45b8;
	Node0x5a45b8 -> Node0x5a46b8;
	Node0x5a3f98 -> Node0x5a4778;
	Node0x5a4778 -> Node0x5a4828;
	Node0x5a3ff8 -> Node0x5a48e8;
	Node0x5a48e8 -> Node0x5a4998;
	Node0x5a3e88 -> Node0x59e7e0;
	Node0x5a3f08 -> Node0x59e7e0;
	Node0x5a3f98 -> Node0x59e7e0;
	Node0x5a3ff8 -> Node0x59e7e0;
	Node0x5a3e88 -> Node0x5a4b98;
	Node0x5a3f08 -> Node0x5a5b08;
	Node0x5a3f98 -> Node0x5a6178;
	Node0x5a3ff8 -> Node0x5a61d8;
	Node0x5a4b98 -> Node0x5a62e8;
	Node0x5a5b08 -> Node0x5a62e8;
	Node0x5a6178 -> Node0x5a62e8;
	Node0x5a61d8 -> Node0x5a62e8;
	Node0x5a48e8 -> Node0x5a6548;
	Node0x5a4778 -> Node0x5a66a8;
	Node0x5a45b8 -> Node0x5a67b8;
	Node0x5a40a8 -> Node0x5a68c8;
}
