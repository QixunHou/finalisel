digraph "DFG for'crackme' function" {
	Node0x5a1dc0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x5a1e30[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x5a1ed0[shape=record, label="  %7 = mul i32 %0, -3"];
	Node0x5a1f70[shape=record, label="  %8 = add i32 %1, 1"];
	Node0x5a1fe0[shape=record, label="  %9 = add i32 %8, %7"];
	Node0x5a2050[shape=record, label="  %10 = sub i32 %9, %6"];
	Node0x5a20c0[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x5a2130[shape=record, label="  %12 = or i32 %2, %1"];
	Node0x5a21a0[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x5a2210[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x5a22b0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x5a2320[shape=record, label="  %16 = shl i32 %12, 1"];
	Node0x5a2390[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x5a2430[shape=record, label="  %18 = shl i32 %6, 2"];
	Node0x5a24d0[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0x5a2540[shape=record, label="  %20 = and i32 %5, %1"];
	Node0x5a25b0[shape=record, label="  %21 = xor i32 %3, -1"];
	Node0x5a2620[shape=record, label="  %22 = xor i32 %3, %0"];
	Node0x5a2690[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x5a2700[shape=record, label="  %24 = or i32 %3, %0"];
	Node0x5a2770[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0x5a27e0[shape=record, label="  %26 = xor i32 %0, -1"];
	Node0x5a2850[shape=record, label="  %27 = or i32 %26, %3"];
	Node0x5a28c0[shape=record, label="  %28 = and i32 %26, %3"];
	Node0x5a2930[shape=record, label="  %29 = shl i32 %3, 1"];
	Node0x5a29a0[shape=record, label="  %30 = xor i32 %24, -1"];
	Node0x5a2a10[shape=record, label="  %31 = xor i32 %27, -1"];
	Node0x5a2ab0[shape=record, label="  %32 = mul i32 %28, 11"];
	Node0x5a2d30[shape=record, label="  %33 = and i32 %3, %0"];
	Node0x5a2da0[shape=record, label="  %34 = shl i32 %11, 1"];
	Node0x5a2e10[shape=record, label="  %35 = add i32 %33, %31"];
	Node0x5a2eb0[shape=record, label="  %36 = mul i32 %35, 7"];
	Node0x5a2f20[shape=record, label="  %37 = sub i32 %30, %20"];
	Node0x5a2fc0[shape=record, label="  %38 = mul i32 %37, 3"];
	Node0x5a3060[shape=record, label="  %39 = sub i32 8, %1"];
	Node0x5a30d0[shape=record, label="  %40 = add i32 %39, %12"];
	Node0x5a3140[shape=record, label="  %41 = add i32 %40, %13"];
	Node0x5a31b0[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x5a3220[shape=record, label="  %43 = add i32 %42, %23"];
	Node0x5a3290[shape=record, label="  %44 = add i32 %43, %27"];
	Node0x5a3300[shape=record, label="  %45 = sub i32 %44, %22"];
	Node0x5a3370[shape=record, label="  %46 = add i32 %45, %28"];
	Node0x5a33e0[shape=record, label="  %47 = sub i32 %46, %29"];
	Node0x5a3450[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x5a34c0[shape=record, label="  %49 = add i32 %48, %15"];
	Node0x5a3530[shape=record, label="  %50 = sub i32 %49, %17"];
	Node0x5a35a0[shape=record, label="  %51 = sub i32 %50, %19"];
	Node0x5a3610[shape=record, label="  %52 = sub i32 %51, %25"];
	Node0x5a3680[shape=record, label="  %53 = add i32 %52, %32"];
	Node0x5a36f0[shape=record, label="  %54 = add i32 %53, %36"];
	Node0x5a3760[shape=record, label="  %55 = add i32 %54, %38"];
	Node0x5a37d0[shape=record, label="  %56 = icmp eq i32 %10, %55"];
	Node0x542268[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x5a3c70[shape=record, label="  %58 = tail call i32 @puts(i8* nonnull dereferenceable(1) %57)"];
	Node0x5a3cc0[shape=record, label="  ret void"];
	Node0x5a1dc0 -> Node0x5a1e30;
	Node0x5a1e30 -> Node0x5a1ed0;
	Node0x5a1ed0 -> Node0x5a1f70;
	Node0x5a1f70 -> Node0x5a1fe0;
	Node0x5a1fe0 -> Node0x5a2050;
	Node0x5a2050 -> Node0x5a20c0;
	Node0x5a20c0 -> Node0x5a2130;
	Node0x5a2130 -> Node0x5a21a0;
	Node0x5a21a0 -> Node0x5a2210;
	Node0x5a2210 -> Node0x5a22b0;
	Node0x5a22b0 -> Node0x5a2320;
	Node0x5a2320 -> Node0x5a2390;
	Node0x5a2390 -> Node0x5a2430;
	Node0x5a2430 -> Node0x5a24d0;
	Node0x5a24d0 -> Node0x5a2540;
	Node0x5a2540 -> Node0x5a25b0;
	Node0x5a25b0 -> Node0x5a2620;
	Node0x5a2620 -> Node0x5a2690;
	Node0x5a2690 -> Node0x5a2700;
	Node0x5a2700 -> Node0x5a2770;
	Node0x5a2770 -> Node0x5a27e0;
	Node0x5a27e0 -> Node0x5a2850;
	Node0x5a2850 -> Node0x5a28c0;
	Node0x5a28c0 -> Node0x5a2930;
	Node0x5a2930 -> Node0x5a29a0;
	Node0x5a29a0 -> Node0x5a2a10;
	Node0x5a2a10 -> Node0x5a2ab0;
	Node0x5a2ab0 -> Node0x5a2d30;
	Node0x5a2d30 -> Node0x5a2da0;
	Node0x5a2da0 -> Node0x5a2e10;
	Node0x5a2e10 -> Node0x5a2eb0;
	Node0x5a2eb0 -> Node0x5a2f20;
	Node0x5a2f20 -> Node0x5a2fc0;
	Node0x5a2fc0 -> Node0x5a3060;
	Node0x5a3060 -> Node0x5a30d0;
	Node0x5a30d0 -> Node0x5a3140;
	Node0x5a3140 -> Node0x5a31b0;
	Node0x5a31b0 -> Node0x5a3220;
	Node0x5a3220 -> Node0x5a3290;
	Node0x5a3290 -> Node0x5a3300;
	Node0x5a3300 -> Node0x5a3370;
	Node0x5a3370 -> Node0x5a33e0;
	Node0x5a33e0 -> Node0x5a3450;
	Node0x5a3450 -> Node0x5a34c0;
	Node0x5a34c0 -> Node0x5a3530;
	Node0x5a3530 -> Node0x5a35a0;
	Node0x5a35a0 -> Node0x5a3610;
	Node0x5a3610 -> Node0x5a3680;
	Node0x5a3680 -> Node0x5a36f0;
	Node0x5a36f0 -> Node0x5a3760;
	Node0x5a3760 -> Node0x5a37d0;
	Node0x5a37d0 -> Node0x542268;
	Node0x542268 -> Node0x5a3c70;
	Node0x5a3c70 -> Node0x5a3cc0;
edge [color=red]
	Node0x5a1dc0 -> Node0x5a1e30;
	Node0x5a1f70 -> Node0x5a1fe0;
	Node0x5a1ed0 -> Node0x5a1fe0;
	Node0x5a1fe0 -> Node0x5a2050;
	Node0x5a1e30 -> Node0x5a2050;
	Node0x5a21a0 -> Node0x5a2210;
	Node0x5a2210 -> Node0x5a22b0;
	Node0x5a2130 -> Node0x5a2320;
	Node0x5a2320 -> Node0x5a2390;
	Node0x5a1e30 -> Node0x5a2430;
	Node0x5a2430 -> Node0x5a24d0;
	Node0x5a1dc0 -> Node0x5a2540;
	Node0x5a2620 -> Node0x5a2690;
	Node0x5a2700 -> Node0x5a2770;
	Node0x5a27e0 -> Node0x5a2850;
	Node0x5a27e0 -> Node0x5a28c0;
	Node0x5a2700 -> Node0x5a29a0;
	Node0x5a2850 -> Node0x5a2a10;
	Node0x5a28c0 -> Node0x5a2ab0;
	Node0x5a20c0 -> Node0x5a2da0;
	Node0x5a2d30 -> Node0x5a2e10;
	Node0x5a2a10 -> Node0x5a2e10;
	Node0x5a2e10 -> Node0x5a2eb0;
	Node0x5a29a0 -> Node0x5a2f20;
	Node0x5a2540 -> Node0x5a2f20;
	Node0x5a2f20 -> Node0x5a2fc0;
	Node0x5a3060 -> Node0x5a30d0;
	Node0x5a2130 -> Node0x5a30d0;
	Node0x5a30d0 -> Node0x5a3140;
	Node0x5a21a0 -> Node0x5a3140;
	Node0x5a3140 -> Node0x5a31b0;
	Node0x5a25b0 -> Node0x5a31b0;
	Node0x5a31b0 -> Node0x5a3220;
	Node0x5a2690 -> Node0x5a3220;
	Node0x5a3220 -> Node0x5a3290;
	Node0x5a2850 -> Node0x5a3290;
	Node0x5a3290 -> Node0x5a3300;
	Node0x5a2620 -> Node0x5a3300;
	Node0x5a3300 -> Node0x5a3370;
	Node0x5a28c0 -> Node0x5a3370;
	Node0x5a3370 -> Node0x5a33e0;
	Node0x5a2930 -> Node0x5a33e0;
	Node0x5a33e0 -> Node0x5a3450;
	Node0x5a2da0 -> Node0x5a3450;
	Node0x5a3450 -> Node0x5a34c0;
	Node0x5a22b0 -> Node0x5a34c0;
	Node0x5a34c0 -> Node0x5a3530;
	Node0x5a2390 -> Node0x5a3530;
	Node0x5a3530 -> Node0x5a35a0;
	Node0x5a24d0 -> Node0x5a35a0;
	Node0x5a35a0 -> Node0x5a3610;
	Node0x5a2770 -> Node0x5a3610;
	Node0x5a3610 -> Node0x5a3680;
	Node0x5a2ab0 -> Node0x5a3680;
	Node0x5a3680 -> Node0x5a36f0;
	Node0x5a2eb0 -> Node0x5a36f0;
	Node0x5a36f0 -> Node0x5a3760;
	Node0x5a2fc0 -> Node0x5a3760;
	Node0x5a2050 -> Node0x5a37d0;
	Node0x5a3760 -> Node0x5a37d0;
	Node0x5a37d0 -> Node0x542268;
	Node0x542268 -> Node0x5a3c70;
}
