digraph "DFG for'main' function" {
	Node0x1600b48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1600bc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1600c58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x16010b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1601198[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x16012b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16014f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x16015a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1602518[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1602ba0[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x1602c10[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x1602c80[shape=record, label="  %10 = or i32 %6, %9"];
	Node0x1602cf0[shape=record, label="  %11 = sub i32 %8, %10"];
	Node0x1602d60[shape=record, label="  %12 = and i32 %6, %9"];
	Node0x1602dd0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x1602e40[shape=record, label="  %14 = mul i32 %13, -3"];
	Node0x1602eb0[shape=record, label="  %15 = xor i32 %7, %8"];
	Node0x1602f20[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x1602f90[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1603000[shape=record, label="  %18 = shl i32 %10, 2"];
	Node0x1603070[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0x16030e0[shape=record, label="  %20 = shl i32 %12, 1"];
	Node0x1603150[shape=record, label="  %21 = and i32 %7, %6"];
	Node0x16031c0[shape=record, label="  %22 = add i32 %15, %9"];
	Node0x1603230[shape=record, label="  %23 = add i32 %22, %17"];
	Node0x16032a0[shape=record, label="  %24 = add i32 %23, %21"];
	Node0x1603310[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x1603380[shape=record, label="  %26 = sub i32 %25, %20"];
	Node0x16033f0[shape=record, label="  %27 = add i32 %26, %19"];
	Node0x1603460[shape=record, label="  %28 = icmp eq i32 %11, %27"];
	Node0x15a19d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x16034f0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x1603748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16038a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1603968[shape=record, label="  ret i32 0"];
	Node0x1600b48 -> Node0x1600bc8;
	Node0x1600bc8 -> Node0x1600c58;
	Node0x1600c58 -> Node0x16010b8;
	Node0x16010b8 -> Node0x1601198;
	Node0x1601198 -> Node0x16012b8;
	Node0x16012b8 -> Node0x16014f0;
	Node0x16014f0 -> Node0x16015a8;
	Node0x16015a8 -> Node0x1602518;
	Node0x1602518 -> Node0x1602ba0;
	Node0x1602ba0 -> Node0x1602c10;
	Node0x1602c10 -> Node0x1602c80;
	Node0x1602c80 -> Node0x1602cf0;
	Node0x1602cf0 -> Node0x1602d60;
	Node0x1602d60 -> Node0x1602dd0;
	Node0x1602dd0 -> Node0x1602e40;
	Node0x1602e40 -> Node0x1602eb0;
	Node0x1602eb0 -> Node0x1602f20;
	Node0x1602f20 -> Node0x1602f90;
	Node0x1602f90 -> Node0x1603000;
	Node0x1603000 -> Node0x1603070;
	Node0x1603070 -> Node0x16030e0;
	Node0x16030e0 -> Node0x1603150;
	Node0x1603150 -> Node0x16031c0;
	Node0x16031c0 -> Node0x1603230;
	Node0x1603230 -> Node0x16032a0;
	Node0x16032a0 -> Node0x1603310;
	Node0x1603310 -> Node0x1603380;
	Node0x1603380 -> Node0x16033f0;
	Node0x16033f0 -> Node0x1603460;
	Node0x1603460 -> Node0x15a19d8;
	Node0x15a19d8 -> Node0x16034f0;
	Node0x16034f0 -> Node0x1603748;
	Node0x1603748 -> Node0x16038a8;
	Node0x16038a8 -> Node0x1603968;
edge [color=red]
	Node0x1600b48 -> Node0x1600c58;
	Node0x1600c58 -> Node0x16010b8;
	Node0x1600bc8 -> Node0x1601198;
	Node0x1601198 -> Node0x16012b8;
	Node0x1600b48 -> Node0x16014f0;
	Node0x1600bc8 -> Node0x16014f0;
	Node0x1600b48 -> Node0x16015a8;
	Node0x1600bc8 -> Node0x1602518;
	Node0x16015a8 -> Node0x1602ba0;
	Node0x1602518 -> Node0x1602c10;
	Node0x16015a8 -> Node0x1602c80;
	Node0x1602c10 -> Node0x1602c80;
	Node0x1602ba0 -> Node0x1602cf0;
	Node0x1602c80 -> Node0x1602cf0;
	Node0x16015a8 -> Node0x1602d60;
	Node0x1602c10 -> Node0x1602d60;
	Node0x1602d60 -> Node0x1602dd0;
	Node0x1602dd0 -> Node0x1602e40;
	Node0x1602518 -> Node0x1602eb0;
	Node0x1602ba0 -> Node0x1602eb0;
	Node0x1602518 -> Node0x1602f20;
	Node0x16015a8 -> Node0x1602f20;
	Node0x1602f20 -> Node0x1602f90;
	Node0x1602c80 -> Node0x1603000;
	Node0x1603000 -> Node0x1603070;
	Node0x1602d60 -> Node0x16030e0;
	Node0x1602518 -> Node0x1603150;
	Node0x16015a8 -> Node0x1603150;
	Node0x1602eb0 -> Node0x16031c0;
	Node0x1602c10 -> Node0x16031c0;
	Node0x16031c0 -> Node0x1603230;
	Node0x1602f90 -> Node0x1603230;
	Node0x1603230 -> Node0x16032a0;
	Node0x1603150 -> Node0x16032a0;
	Node0x16032a0 -> Node0x1603310;
	Node0x1602e40 -> Node0x1603310;
	Node0x1603310 -> Node0x1603380;
	Node0x16030e0 -> Node0x1603380;
	Node0x1603380 -> Node0x16033f0;
	Node0x1603070 -> Node0x16033f0;
	Node0x1602cf0 -> Node0x1603460;
	Node0x16033f0 -> Node0x1603460;
	Node0x1603460 -> Node0x15a19d8;
	Node0x15a19d8 -> Node0x16034f0;
	Node0x1601198 -> Node0x1603748;
	Node0x1600c58 -> Node0x16038a8;
}
