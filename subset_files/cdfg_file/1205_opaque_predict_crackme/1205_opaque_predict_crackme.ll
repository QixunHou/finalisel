; ModuleID = '../.././c_source_file/1205_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1205_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = xor i32 %1, -1
  %9 = and i32 %8, %2
  %10 = and i32 %9, %7
  %11 = or i32 %8, %2
  %12 = and i32 %11, %0
  %13 = or i32 %10, %12
  %14 = xor i32 %3, -1
  %15 = or i32 %14, %4
  %16 = xor i32 %15, %5
  %17 = sub i32 %16, %13
  %18 = and i32 %14, %5
  %19 = and i32 %18, %4
  %20 = or i32 %14, %5
  %21 = xor i32 %20, %4
  %22 = xor i32 %19, -1
  %23 = xor i32 %21, %22
  %24 = add i32 %17, %23
  %25 = xor i32 %2, -1
  %26 = and i32 %25, %1
  %27 = xor i32 %26, -1
  %28 = add i32 %26, 1
  %29 = and i32 %1, %0
  %30 = or i32 %2, %0
  %31 = xor i32 %30, %29
  %32 = and i32 %2, %1
  %33 = and i32 %32, %0
  %34 = xor i32 %2, %1
  %35 = and i32 %34, %7
  %36 = xor i32 %33, 2147483647
  %37 = xor i32 %36, %35
  %38 = xor i32 %2, %0
  %39 = or i32 %38, %29
  %40 = xor i32 %32, -1
  %41 = and i32 %40, %7
  %42 = or i32 %1, %0
  %43 = and i32 %42, %2
  %44 = xor i32 %42, -1
  %45 = or i32 %44, %2
  %46 = and i32 %2, %0
  %47 = xor i32 %46, -1
  %48 = xor i32 %1, %0
  %49 = xor i32 %48, -1
  %50 = and i32 %47, %49
  %51 = or i32 %34, %7
  %52 = or i32 %8, %0
  %53 = xor i32 %52, -1
  %54 = xor i32 %34, -1
  %55 = or i32 %54, %53
  %56 = and i32 %25, %0
  %57 = xor i32 %56, %40
  %58 = xor i32 %56, -1
  %59 = and i32 %48, %58
  %60 = or i32 %25, %1
  %61 = xor i32 %60, -1
  %62 = xor i32 %61, %0
  %63 = or i32 %27, %0
  %64 = shl i32 %63, 1
  %65 = xor i32 %38, -1
  %66 = and i32 %52, %65
  %67 = or i32 %56, %48
  %68 = and i32 %54, %7
  %69 = xor i32 %34, %0
  %70 = xor i32 %69, -1
  %71 = or i32 %33, %70
  %72 = and i32 %48, %2
  %73 = or i32 %25, %0
  %74 = xor i32 %73, -1
  %75 = or i32 %29, %74
  %76 = and i32 %9, %0
  %77 = or i32 %34, %0
  %78 = xor i32 %76, %77
  %79 = add i32 %46, 1
  %80 = and i32 %8, %0
  %81 = xor i32 %80, -1
  %82 = and i32 %25, %81
  %83 = shl i32 %82, 1
  %84 = xor i32 %10, %51
  %85 = xor i32 %76, %70
  %86 = xor i32 %80, %40
  %87 = or i32 %38, %1
  %88 = and i32 %30, %1
  %89 = xor i32 %33, %69
  %90 = and i32 %38, %49
  %91 = or i32 %29, %65
  %92 = or i32 %38, %53
  %93 = and i32 %30, %48
  %94 = shl i32 %93, 1
  %95 = xor i32 %60, %0
  %96 = or i32 %65, %49
  %97 = xor i32 %30, -1
  %98 = or i32 %97, %1
  %99 = or i32 %26, %0
  %100 = and i32 %38, %1
  %101 = shl i32 %100, 1
  %102 = and i32 %54, %81
  %103 = or i32 %56, %32
  %104 = and i32 %42, %25
  %105 = xor i32 %73, %29
  %106 = shl i32 %105, 1
  %107 = xor i32 %32, %0
  %108 = and i32 %58, %49
  %109 = shl i32 %108, 1
  %110 = and i32 %49, %2
  %111 = xor i32 %12, 2147483647
  %112 = xor i32 %111, %10
  %113 = shl i32 %112, 1
  %114 = and i32 %11, %7
  %115 = or i32 %76, %114
  %116 = and i32 %32, %7
  %117 = and i32 %34, %0
  %118 = or i32 %116, %117
  %119 = and i32 %34, %42
  %120 = or i32 %54, %44
  %121 = xor i32 %46, %42
  %122 = and i32 %30, %8
  %123 = xor i32 %29, -1
  %124 = and i32 %65, %123
  %125 = or i32 %2, %1
  %126 = and i32 %125, %0
  %127 = xor i32 %126, 2147483647
  %128 = xor i32 %127, %116
  %129 = shl i32 %128, 1
  %130 = or i32 %38, %48
  %131 = xor i32 %125, %0
  %132 = or i32 %74, %1
  %133 = or i32 %56, %49
  %134 = shl i32 %133, 1
  %135 = xor i32 %54, %0
  %136 = xor i32 %44, %2
  %137 = xor i32 %60, %29
  %138 = and i32 %48, %65
  %139 = xor i32 %30, %1
  %140 = shl i32 %139, 1
  %141 = and i32 %30, %49
  %142 = xor i32 %77, -1
  %143 = or i32 %76, %142
  %144 = xor i32 %56, %1
  %145 = or i32 %29, %54
  %146 = shl i32 %35, 1
  %147 = or i32 %25, %44
  %148 = xor i32 %11, %0
  %149 = or i32 %76, %148
  %150 = or i32 %34, %44
  %151 = xor i32 %97, %1
  %152 = or i32 %29, %2
  %153 = and i32 %54, %123
  %154 = or i32 %48, %65
  %155 = xor i32 %80, %27
  %156 = or i32 %38, %49
  %157 = or i32 %61, %0
  %158 = xor i32 %29, %2
  %159 = or i32 %97, %49
  %160 = or i32 %32, %7
  %161 = or i32 %29, %97
  %162 = or i32 %54, %7
  %163 = shl i32 %162, 1
  %164 = or i32 %25, %53
  %165 = xor i32 %36, %131
  %166 = and i32 %65, %81
  %167 = or i32 %38, %44
  %168 = and i32 %34, %123
  %169 = and i32 %52, %25
  %170 = xor i32 %148, 2147483647
  %171 = xor i32 %170, %76
  %172 = or i32 %65, %53
  %173 = and i32 %34, %52
  %174 = shl i32 %173, 1
  %175 = and i32 %27, %7
  %176 = and i32 %38, %48
  %177 = add i32 %38, 1
  %178 = or i32 %97, %8
  %179 = xor i32 %46, %125
  %180 = xor i32 %125, -1
  %181 = xor i32 %180, %0
  %182 = or i32 %46, %8
  %183 = or i32 %80, %2
  %184 = and i32 %180, %7
  %185 = and i32 %26, %7
  %186 = and i32 %180, %0
  %187 = mul i32 %186, 7
  %188 = and i32 %26, %0
  %189 = mul i32 %188, -10
  %190 = and i32 %61, %0
  %191 = shl i32 %190, 2
  %192 = and i32 %5, %3
  %193 = and i32 %192, %4
  %194 = xor i32 %5, %3
  %195 = xor i32 %194, %4
  %196 = xor i32 %195, -1
  %197 = or i32 %193, %196
  %198 = and i32 %14, %4
  %199 = xor i32 %198, -1
  %200 = xor i32 %5, %4
  %201 = xor i32 %200, -1
  %202 = and i32 %201, %199
  %203 = xor i32 %5, -1
  %204 = or i32 %4, %3
  %205 = and i32 %204, %203
  %206 = or i32 %194, %198
  %207 = or i32 %192, %4
  %208 = and i32 %4, %3
  %209 = xor i32 %208, -1
  %210 = and i32 %200, %209
  %211 = xor i32 %204, -1
  %212 = or i32 %194, %211
  %213 = and i32 %5, %4
  %214 = xor i32 %4, %3
  %215 = or i32 %213, %214
  %216 = or i32 %203, %4
  %217 = xor i32 %216, -1
  %218 = xor i32 %217, %3
  %219 = and i32 %203, %4
  %220 = or i32 %219, %14
  %221 = or i32 %203, %3
  %222 = and i32 %221, %4
  %223 = xor i32 %4, -1
  %224 = and i32 %192, %223
  %225 = and i32 %194, %4
  %226 = xor i32 %225, -1
  %227 = xor i32 %224, %226
  %228 = xor i32 %194, -1
  %229 = and i32 %228, %4
  %230 = and i32 %18, %223
  %231 = and i32 %20, %4
  %232 = xor i32 %231, -1
  %233 = xor i32 %230, %232
  %234 = and i32 %216, %14
  %235 = xor i32 %214, -1
  %236 = or i32 %200, %235
  %237 = and i32 %203, %3
  %238 = xor i32 %237, -1
  %239 = or i32 %238, %4
  %240 = or i32 %194, %4
  %241 = xor i32 %19, %240
  %242 = or i32 %200, %3
  %243 = and i32 %203, %235
  %244 = xor i32 %219, -1
  %245 = add i32 %219, 1
  %246 = or i32 %237, %4
  %247 = xor i32 %209, %5
  %248 = or i32 %217, %3
  %249 = or i32 %5, %3
  %250 = and i32 %249, %4
  %251 = or i32 %224, %250
  %252 = and i32 %214, %201
  %253 = and i32 %228, %199
  %254 = xor i32 %221, -1
  %255 = or i32 %208, %254
  %256 = add i32 %214, 1
  %257 = xor i32 %204, %5
  %258 = or i32 %200, %198
  %259 = shl i32 %258, 2
  %260 = or i32 %237, %223
  %261 = and i32 %204, %228
  %262 = or i32 %198, %203
  %263 = or i32 %238, %223
  %264 = xor i32 %249, %208
  %265 = or i32 %254, %4
  %266 = or i32 %200, %208
  %267 = xor i32 %237, %4
  %268 = xor i32 %213, -1
  %269 = and i32 %268, %14
  %270 = and i32 %244, %3
  %271 = or i32 %230, %231
  %272 = or i32 %221, %4
  %273 = shl i32 %272, 2
  %274 = or i32 %224, %225
  %275 = or i32 %5, %4
  %276 = and i32 %275, %3
  %277 = and i32 %214, %5
  %278 = xor i32 %211, %5
  %279 = xor i32 %275, -1
  %280 = or i32 %279, %235
  %281 = xor i32 %240, -1
  %282 = or i32 %19, %281
  %283 = and i32 %204, %201
  %284 = or i32 %19, %195
  %285 = xor i32 %15, -1
  %286 = or i32 %201, %285
  %287 = and i32 %194, %15
  %288 = and i32 %214, %268
  %289 = and i32 %244, %235
  %290 = and i32 %275, %214
  %291 = or i32 %200, %285
  %292 = and i32 %20, %223
  %293 = or i32 %19, %292
  %294 = shl i32 %293, 1
  %295 = and i32 %228, %209
  %296 = or i32 %203, %211
  %297 = or i32 %279, %3
  %298 = and i32 %200, %204
  %299 = xor i32 %208, %5
  %300 = or i32 %228, %223
  %301 = xor i32 %213, %3
  %302 = or i32 %194, %223
  %303 = xor i32 %302, -1
  %304 = or i32 %230, %303
  %305 = or i32 %198, %228
  %306 = and i32 %200, %3
  %307 = and i32 %268, %235
  %308 = or i32 %237, %198
  %309 = or i32 %214, %217
  %310 = or i32 %219, %192
  %311 = or i32 %208, %5
  %312 = xor i32 %192, -1
  %313 = add i32 %192, 1
  %314 = or i32 %213, %14
  %315 = and i32 %194, %204
  %316 = xor i32 %275, %208
  %317 = xor i32 %249, -1
  %318 = or i32 %317, %223
  %319 = or i32 %285, %5
  %320 = or i32 %249, %223
  %321 = or i32 %213, %211
  %322 = and i32 %216, %214
  %323 = and i32 %15, %201
  %324 = or i32 %221, %223
  %325 = xor i32 %249, %4
  %326 = xor i32 %193, -1
  %327 = xor i32 %325, %326
  %328 = add i32 %5, 1
  %329 = and i32 %199, %5
  %330 = or i32 %214, %279
  %331 = or i32 %198, %5
  %332 = or i32 %201, %211
  %333 = xor i32 %275, %3
  %334 = or i32 %213, %285
  %335 = or i32 %213, %3
  %336 = xor i32 %317, %4
  %337 = xor i32 %192, %4
  %338 = or i32 %213, %317
  %339 = shl i32 %228, 1
  %340 = add i32 %216, 1
  %341 = or i32 %201, %14
  %342 = or i32 %192, %223
  %343 = or i32 %208, %279
  %344 = or i32 %235, %5
  %345 = or i32 %201, %3
  %346 = xor i32 %219, %312
  %347 = xor i32 %292, %22
  %348 = or i32 %254, %223
  %349 = or i32 %194, %208
  %350 = or i32 %19, %21
  %351 = xor i32 %198, %5
  %352 = xor i32 %193, %195
  %353 = and i32 %238, %4
  %354 = and i32 %194, %223
  %355 = or i32 %193, %354
  %356 = and i32 %249, %223
  %357 = and i32 %200, %214
  %358 = and i32 %201, %235
  %359 = or i32 %194, %285
  %360 = and i32 %194, %199
  %361 = or i32 %219, %3
  %362 = or i32 %228, %4
  %363 = xor i32 %244, %3
  %364 = xor i32 %312, %4
  %365 = shl i32 %364, 1
  %366 = or i32 %219, %254
  %367 = or i32 %198, %201
  %368 = xor i32 %221, %4
  %369 = and i32 %216, %235
  %370 = and i32 %216, %3
  %371 = or i32 %208, %203
  %372 = or i32 %200, %14
  %373 = and i32 %203, %199
  %374 = xor i32 %354, %326
  %375 = xor i32 %198, %238
  %376 = shl i32 %302, 2
  %377 = and i32 %15, %5
  %378 = or i32 %279, %14
  %379 = and i32 %268, %3
  %380 = xor i32 %198, %312
  %381 = shl i32 %380, 1
  %382 = xor i32 %268, %3
  %383 = or i32 %219, %235
  %384 = and i32 %201, %209
  %385 = or i32 %203, %285
  %386 = xor i32 %228, %4
  %387 = or i32 %219, %214
  %388 = and i32 %238, %223
  %389 = shl i32 %388, 1
  %390 = and i32 %221, %223
  %391 = xor i32 %285, %5
  %392 = or i32 %208, %317
  %393 = xor i32 %356, 2147483647
  %394 = xor i32 %393, %193
  %395 = and i32 %15, %203
  %396 = or i32 %200, %214
  %397 = and i32 %203, %209
  %398 = xor i32 %199, %5
  %399 = or i32 %213, %235
  %400 = shl i32 %399, 1
  %401 = xor i32 %221, %208
  %402 = and i32 %244, %14
  %403 = and i32 %275, %14
  %404 = or i32 %193, %325
  %405 = or i32 %208, %201
  %406 = and i32 %15, %228
  %407 = or i32 %312, %4
  %408 = or i32 %203, %235
  %409 = xor i32 %213, %15
  %410 = and i32 %228, %223
  %411 = or i32 %317, %4
  %412 = shl i32 %411, 1
  %413 = and i32 %200, %235
  %414 = or i32 %228, %285
  %415 = and i32 %214, %203
  %416 = shl i32 %415, 1
  %417 = add i32 %204, 1
  %418 = or i32 %214, %203
  %419 = xor i32 %219, %3
  %420 = shl i32 %419, 1
  %421 = add i32 %198, 1
  %422 = or i32 %312, %223
  %423 = and i32 %235, %5
  %424 = or i32 %208, %217
  %425 = and i32 %204, %5
  %426 = xor i32 %279, %3
  %427 = or i32 %214, %5
  %428 = xor i32 %213, %204
  %429 = xor i32 %216, %3
  %430 = shl i32 %429, 1
  %431 = or i32 %228, %211
  %432 = and i32 %200, %15
  %433 = and i32 %200, %199
  %434 = or i32 %201, %235
  %435 = xor i32 %19, %196
  %436 = or i32 %213, %237
  %437 = shl i32 %436, 1
  %438 = xor i32 %254, %4
  %439 = and i32 %201, %3
  %440 = xor i32 %230, %302
  %441 = shl i32 %14, 1
  %442 = xor i32 %250, 2147483647
  %443 = xor i32 %442, %224
  %444 = and i32 %201, %14
  %445 = or i32 %217, %14
  %446 = and i32 %200, %14
  %447 = or i32 %217, %235
  %448 = or i32 %192, %198
  %449 = and i32 %312, %223
  %450 = or i32 %211, %5
  %451 = and i32 %214, %244
  %452 = and i32 %194, %209
  %453 = shl i32 %452, 1
  %454 = and i32 %317, %223
  %455 = and i32 %237, %223
  %456 = and i32 %317, %4
  %457 = and i32 %237, %4
  %458 = shl i32 %457, 3
  %459 = and i32 %254, %223
  %460 = mul i32 %459, -17
  %461 = mul i32 %224, -9
  %462 = and i32 %254, %4
  %463 = shl i32 %462, 4
  %464 = add i32 %123, %2
  %465 = add i32 %464, %3
  %466 = add i32 %465, %183
  %467 = add i32 %466, %152
  %468 = add i32 %467, %43
  %469 = add i32 %468, %28
  %470 = add i32 %469, %172
  %471 = add i32 %470, %155
  %472 = add i32 %471, %132
  %473 = add i32 %472, %119
  %474 = add i32 %473, %102
  %475 = add i32 %474, %57
  %476 = add i32 %475, %55
  %477 = add i32 %476, %192
  %478 = add i32 %477, %331
  %479 = add i32 %478, %257
  %480 = add i32 %479, %171
  %481 = add i32 %480, %165
  %482 = add i32 %481, %37
  %483 = add i32 %482, %447
  %484 = add i32 %483, %433
  %485 = add i32 %484, %413
  %486 = add i32 %485, %405
  %487 = add i32 %486, %359
  %488 = add i32 %487, %348
  %489 = add i32 %488, %342
  %490 = add i32 %489, %334
  %491 = add i32 %490, %333
  %492 = add i32 %491, %324
  %493 = add i32 %492, %261
  %494 = add i32 %493, %236
  %495 = add i32 %494, %220
  %496 = add i32 %495, %207
  %497 = add i32 %496, %352
  %498 = add i32 %497, %271
  %499 = add i32 %498, %241
  %500 = add i32 %499, %394
  %501 = add i32 %500, %443
  %502 = shl i32 %501, 1
  %503 = sub i32 %116, %72
  %504 = add i32 %503, %90
  %505 = add i32 %504, %5
  %506 = add i32 %505, %254
  %507 = add i32 %506, %245
  %508 = add i32 %507, %384
  %509 = add i32 %508, %455
  %510 = mul i32 %509, 5
  %511 = add i32 %264, %157
  %512 = add i32 %511, %454
  %513 = add i32 %512, %229
  %514 = shl i32 %513, 2
  %515 = add i32 %193, %456
  %516 = mul i32 %515, -19
  %517 = sub i32 %184, %33
  %518 = mul i32 %517, 12
  %519 = sub i32 -2, %42
  %520 = add i32 %519, %4
  %521 = add i32 %520, %75
  %522 = add i32 %521, %358
  %523 = sub i32 %522, %438
  %524 = mul i32 %523, 3
  %525 = add i32 %0, 2
  %526 = add i32 %525, %49
  %527 = add i32 %526, %80
  %528 = sub i32 %527, %52
  %529 = add i32 %528, %42
  %530 = sub i32 %529, %45
  %531 = add i32 %530, %79
  %532 = sub i32 %531, %104
  %533 = add i32 %532, %110
  %534 = add i32 %533, %40
  %535 = sub i32 %534, %73
  %536 = sub i32 %535, %32
  %537 = add i32 %536, %136
  %538 = add i32 %537, %147
  %539 = sub i32 %538, %158
  %540 = sub i32 %539, %26
  %541 = add i32 %540, %164
  %542 = add i32 %541, %169
  %543 = add i32 %542, %177
  %544 = sub i32 %543, %31
  %545 = sub i32 %544, %39
  %546 = sub i32 %545, %41
  %547 = sub i32 %546, %50
  %548 = sub i32 %547, %51
  %549 = add i32 %548, %59
  %550 = sub i32 %549, %62
  %551 = sub i32 %550, %66
  %552 = add i32 %551, %67
  %553 = sub i32 %552, %68
  %554 = sub i32 %553, %83
  %555 = add i32 %554, %86
  %556 = sub i32 %555, %87
  %557 = add i32 %556, %88
  %558 = add i32 %557, %91
  %559 = sub i32 %558, %92
  %560 = sub i32 %559, %95
  %561 = add i32 %560, %96
  %562 = add i32 %561, %98
  %563 = add i32 %562, %99
  %564 = sub i32 %563, %103
  %565 = sub i32 %564, %107
  %566 = sub i32 %565, %120
  %567 = add i32 %566, %121
  %568 = sub i32 %567, %122
  %569 = sub i32 %568, %124
  %570 = add i32 %569, %130
  %571 = sub i32 %570, %131
  %572 = sub i32 %571, %135
  %573 = sub i32 %572, %137
  %574 = sub i32 %573, %138
  %575 = sub i32 %574, %141
  %576 = add i32 %575, %144
  %577 = add i32 %576, %145
  %578 = add i32 %577, %150
  %579 = add i32 %578, %151
  %580 = sub i32 %579, %153
  %581 = sub i32 %580, %154
  %582 = sub i32 %581, %156
  %583 = sub i32 %582, %159
  %584 = sub i32 %583, %160
  %585 = sub i32 %584, %161
  %586 = sub i32 %585, %166
  %587 = sub i32 %586, %167
  %588 = add i32 %587, %168
  %589 = sub i32 %588, %175
  %590 = sub i32 %589, %176
  %591 = add i32 %590, %178
  %592 = add i32 %591, %179
  %593 = sub i32 %592, %181
  %594 = add i32 %593, %182
  %595 = add i32 %594, %185
  %596 = sub i32 %595, %441
  %597 = sub i32 %596, %64
  %598 = sub i32 %597, %71
  %599 = add i32 %598, %78
  %600 = add i32 %599, %84
  %601 = add i32 %600, %85
  %602 = sub i32 %601, %89
  %603 = sub i32 %602, %94
  %604 = sub i32 %603, %101
  %605 = sub i32 %604, %106
  %606 = sub i32 %605, %109
  %607 = sub i32 %606, %115
  %608 = add i32 %607, %118
  %609 = sub i32 %608, %134
  %610 = sub i32 %609, %140
  %611 = sub i32 %610, %143
  %612 = sub i32 %611, %146
  %613 = sub i32 %612, %149
  %614 = sub i32 %613, %163
  %615 = sub i32 %614, %174
  %616 = add i32 %615, %187
  %617 = add i32 %616, %189
  %618 = sub i32 %617, %191
  %619 = add i32 %618, %198
  %620 = add i32 %619, %256
  %621 = add i32 %620, %328
  %622 = sub i32 %621, %204
  %623 = sub i32 %622, %214
  %624 = add i32 %623, %417
  %625 = add i32 %624, %421
  %626 = add i32 %625, %205
  %627 = add i32 %626, %201
  %628 = sub i32 %627, %194
  %629 = sub i32 %628, %243
  %630 = add i32 %629, %247
  %631 = sub i32 %630, %237
  %632 = add i32 %631, %262
  %633 = sub i32 %632, %277
  %634 = sub i32 %633, %278
  %635 = add i32 %634, %296
  %636 = add i32 %635, %299
  %637 = add i32 %636, %238
  %638 = add i32 %637, %221
  %639 = add i32 %638, %311
  %640 = add i32 %639, %313
  %641 = add i32 %640, %319
  %642 = add i32 %641, %329
  %643 = add i32 %642, %340
  %644 = sub i32 %643, %344
  %645 = add i32 %644, %351
  %646 = add i32 %645, %371
  %647 = sub i32 %646, %373
  %648 = sub i32 %647, %377
  %649 = sub i32 %648, %385
  %650 = add i32 %649, %391
  %651 = sub i32 %650, %395
  %652 = sub i32 %651, %249
  %653 = add i32 %652, %397
  %654 = add i32 %653, %216
  %655 = sub i32 %654, %398
  %656 = add i32 %655, %317
  %657 = sub i32 %656, %408
  %658 = sub i32 %657, %418
  %659 = sub i32 %658, %423
  %660 = add i32 %659, %425
  %661 = add i32 %660, %427
  %662 = add i32 %661, %219
  %663 = sub i32 %662, %450
  %664 = add i32 %663, %518
  %665 = sub i32 %664, %113
  %666 = sub i32 %665, %129
  %667 = sub i32 %666, %202
  %668 = sub i32 %667, %206
  %669 = add i32 %668, %210
  %670 = sub i32 %669, %195
  %671 = sub i32 %670, %212
  %672 = add i32 %671, %215
  %673 = sub i32 %672, %218
  %674 = sub i32 %673, %222
  %675 = add i32 %674, %234
  %676 = sub i32 %675, %239
  %677 = sub i32 %676, %242
  %678 = sub i32 %677, %246
  %679 = sub i32 %678, %248
  %680 = sub i32 %679, %252
  %681 = add i32 %680, %253
  %682 = add i32 %681, %255
  %683 = sub i32 %682, %260
  %684 = add i32 %683, %263
  %685 = add i32 %684, %265
  %686 = add i32 %685, %266
  %687 = add i32 %686, %267
  %688 = add i32 %687, %269
  %689 = sub i32 %688, %270
  %690 = sub i32 %689, %276
  %691 = add i32 %690, %280
  %692 = add i32 %691, %283
  %693 = add i32 %692, %286
  %694 = sub i32 %693, %287
  %695 = add i32 %694, %288
  %696 = add i32 %695, %289
  %697 = add i32 %696, %290
  %698 = sub i32 %697, %291
  %699 = sub i32 %698, %295
  %700 = sub i32 %699, %297
  %701 = sub i32 %700, %298
  %702 = sub i32 %701, %300
  %703 = add i32 %702, %301
  %704 = sub i32 %703, %250
  %705 = sub i32 %704, %305
  %706 = add i32 %705, %306
  %707 = add i32 %706, %307
  %708 = sub i32 %707, %308
  %709 = add i32 %708, %309
  %710 = add i32 %709, %310
  %711 = add i32 %710, %314
  %712 = add i32 %711, %315
  %713 = sub i32 %712, %316
  %714 = sub i32 %713, %318
  %715 = sub i32 %714, %320
  %716 = sub i32 %715, %321
  %717 = sub i32 %716, %322
  %718 = add i32 %717, %323
  %719 = sub i32 %718, %330
  %720 = add i32 %719, %332
  %721 = sub i32 %720, %335
  %722 = sub i32 %721, %336
  %723 = sub i32 %722, %337
  %724 = sub i32 %723, %338
  %725 = sub i32 %724, %339
  %726 = sub i32 %725, %341
  %727 = add i32 %726, %343
  %728 = add i32 %727, %345
  %729 = sub i32 %728, %346
  %730 = add i32 %729, %225
  %731 = sub i32 %730, %349
  %732 = add i32 %731, %353
  %733 = add i32 %732, %356
  %734 = sub i32 %733, %357
  %735 = sub i32 %734, %360
  %736 = sub i32 %735, %361
  %737 = add i32 %736, %362
  %738 = add i32 %737, %363
  %739 = sub i32 %738, %366
  %740 = add i32 %739, %367
  %741 = sub i32 %740, %368
  %742 = add i32 %741, %369
  %743 = sub i32 %742, %370
  %744 = add i32 %743, %372
  %745 = sub i32 %744, %375
  %746 = add i32 %745, %378
  %747 = sub i32 %746, %379
  %748 = sub i32 %747, %382
  %749 = add i32 %748, %383
  %750 = add i32 %749, %386
  %751 = sub i32 %750, %387
  %752 = sub i32 %751, %390
  %753 = add i32 %752, %392
  %754 = add i32 %753, %396
  %755 = sub i32 %754, %401
  %756 = add i32 %755, %402
  %757 = add i32 %756, %403
  %758 = add i32 %757, %406
  %759 = add i32 %758, %354
  %760 = sub i32 %759, %407
  %761 = add i32 %760, %409
  %762 = add i32 %761, %410
  %763 = sub i32 %762, %414
  %764 = sub i32 %763, %416
  %765 = add i32 %764, %422
  %766 = sub i32 %765, %424
  %767 = sub i32 %766, %240
  %768 = add i32 %767, %426
  %769 = add i32 %768, %428
  %770 = add i32 %769, %431
  %771 = sub i32 %770, %432
  %772 = sub i32 %771, %434
  %773 = sub i32 %772, %439
  %774 = sub i32 %773, %444
  %775 = add i32 %774, %445
  %776 = add i32 %775, %446
  %777 = add i32 %776, %448
  %778 = add i32 %777, %449
  %779 = add i32 %778, %451
  %780 = sub i32 %779, %197
  %781 = sub i32 %780, %227
  %782 = add i32 %781, %233
  %783 = add i32 %782, %251
  %784 = sub i32 %783, %259
  %785 = sub i32 %784, %273
  %786 = add i32 %785, %274
  %787 = add i32 %786, %282
  %788 = add i32 %787, %284
  %789 = add i32 %788, %304
  %790 = sub i32 %789, %327
  %791 = sub i32 %790, %347
  %792 = sub i32 %791, %350
  %793 = add i32 %792, %355
  %794 = sub i32 %793, %365
  %795 = add i32 %794, %374
  %796 = sub i32 %795, %376
  %797 = sub i32 %796, %381
  %798 = sub i32 %797, %389
  %799 = sub i32 %798, %400
  %800 = add i32 %799, %404
  %801 = sub i32 %800, %412
  %802 = sub i32 %801, %420
  %803 = sub i32 %802, %430
  %804 = add i32 %803, %435
  %805 = sub i32 %804, %437
  %806 = sub i32 %805, %440
  %807 = sub i32 %806, %453
  %808 = add i32 %807, %458
  %809 = add i32 %808, %460
  %810 = add i32 %809, %461
  %811 = sub i32 %810, %463
  %812 = sub i32 %811, %294
  %813 = add i32 %812, %516
  %814 = add i32 %813, %514
  %815 = add i32 %814, %524
  %816 = add i32 %815, %510
  %817 = add i32 %816, %502
  %818 = icmp eq i32 %24, %817
  %819 = select i1 %818, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %820 = tail call i32 @puts(i8* nonnull dereferenceable(1) %819)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
