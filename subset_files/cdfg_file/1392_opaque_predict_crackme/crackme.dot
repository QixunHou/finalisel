digraph "DFG for'crackme' function" {
	Node0x82a790[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x82ae10[shape=record, label="  %6 = add i32 %5, 1"];
	Node0x82aeb0[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x82af20[shape=record, label="  %8 = xor i32 %3, -1"];
	Node0x82af90[shape=record, label="  %9 = or i32 %8, %0"];
	Node0x82b000[shape=record, label="  %10 = sub i32 %6, %9"];
	Node0x82b0a0[shape=record, label="  %11 = xor i32 %1, 2147483647"];
	Node0x82b110[shape=record, label="  %12 = xor i32 %11, %2"];
	Node0x82b180[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0x82b1f0[shape=record, label="  %14 = or i32 %13, %1"];
	Node0x82b260[shape=record, label="  %15 = xor i32 %1, -1"];
	Node0x82b2d0[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x82b340[shape=record, label="  %17 = and i32 %13, %1"];
	Node0x82b3b0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x82b450[shape=record, label="  %19 = shl i32 %16, 3"];
	Node0x82b4f0[shape=record, label="  %20 = xor i32 %19, -8"];
	Node0x82b560[shape=record, label="  %21 = xor i32 %14, -1"];
	Node0x82b600[shape=record, label="  %22 = mul i32 %21, -5"];
	Node0x82b670[shape=record, label="  %23 = xor i32 %3, %0"];
	Node0x82b6e0[shape=record, label="  %24 = shl i32 %3, 1"];
	Node0x82b780[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x82b7f0[shape=record, label="  %26 = shl i32 %7, 1"];
	Node0x82b860[shape=record, label="  %27 = or i32 %3, %0"];
	Node0x82b8d0[shape=record, label="  %28 = or i32 %7, %3"];
	Node0x82b970[shape=record, label="  %29 = shl i32 %27, 2"];
	Node0x82ba10[shape=record, label="  %30 = xor i32 %29, -4"];
	Node0x82ba80[shape=record, label="  %31 = add i32 %28, 1"];
	Node0x82baf0[shape=record, label="  %32 = and i32 %3, %0"];
	Node0x82bd70[shape=record, label="  %33 = sub i32 %15, %1"];
	Node0x82bde0[shape=record, label="  %34 = add i32 %33, %31"];
	Node0x82be50[shape=record, label="  %35 = sub i32 %34, %32"];
	Node0x82bec0[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0x82bf30[shape=record, label="  %37 = add i32 %12, %17"];
	Node0x82bfa0[shape=record, label="  %38 = add i32 %37, %27"];
	Node0x82c010[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x82c080[shape=record, label="  %40 = sub i32 %0, %26"];
	Node0x82c0f0[shape=record, label="  %41 = add i32 %40, %2"];
	Node0x82c160[shape=record, label="  %42 = add i32 %41, %14"];
	Node0x82c1d0[shape=record, label="  %43 = sub i32 %42, %16"];
	Node0x82c240[shape=record, label="  %44 = add i32 %43, %18"];
	Node0x82c2b0[shape=record, label="  %45 = sub i32 %44, %5"];
	Node0x82c320[shape=record, label="  %46 = add i32 %45, %22"];
	Node0x82c390[shape=record, label="  %47 = add i32 %46, %23"];
	Node0x82c400[shape=record, label="  %48 = sub i32 %47, %28"];
	Node0x82c470[shape=record, label="  %49 = sub i32 %48, %20"];
	Node0x82c4e0[shape=record, label="  %50 = sub i32 %49, %25"];
	Node0x82c550[shape=record, label="  %51 = add i32 %50, %30"];
	Node0x82c5c0[shape=record, label="  %52 = add i32 %51, %39"];
	Node0x82c630[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x82c6a0[shape=record, label="  %54 = icmp eq i32 %10, %53"];
	Node0x7cb268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x82cb40[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0x82cb90[shape=record, label="  ret void"];
	Node0x82a790 -> Node0x82ae10;
	Node0x82ae10 -> Node0x82aeb0;
	Node0x82aeb0 -> Node0x82af20;
	Node0x82af20 -> Node0x82af90;
	Node0x82af90 -> Node0x82b000;
	Node0x82b000 -> Node0x82b0a0;
	Node0x82b0a0 -> Node0x82b110;
	Node0x82b110 -> Node0x82b180;
	Node0x82b180 -> Node0x82b1f0;
	Node0x82b1f0 -> Node0x82b260;
	Node0x82b260 -> Node0x82b2d0;
	Node0x82b2d0 -> Node0x82b340;
	Node0x82b340 -> Node0x82b3b0;
	Node0x82b3b0 -> Node0x82b450;
	Node0x82b450 -> Node0x82b4f0;
	Node0x82b4f0 -> Node0x82b560;
	Node0x82b560 -> Node0x82b600;
	Node0x82b600 -> Node0x82b670;
	Node0x82b670 -> Node0x82b6e0;
	Node0x82b6e0 -> Node0x82b780;
	Node0x82b780 -> Node0x82b7f0;
	Node0x82b7f0 -> Node0x82b860;
	Node0x82b860 -> Node0x82b8d0;
	Node0x82b8d0 -> Node0x82b970;
	Node0x82b970 -> Node0x82ba10;
	Node0x82ba10 -> Node0x82ba80;
	Node0x82ba80 -> Node0x82baf0;
	Node0x82baf0 -> Node0x82bd70;
	Node0x82bd70 -> Node0x82bde0;
	Node0x82bde0 -> Node0x82be50;
	Node0x82be50 -> Node0x82bec0;
	Node0x82bec0 -> Node0x82bf30;
	Node0x82bf30 -> Node0x82bfa0;
	Node0x82bfa0 -> Node0x82c010;
	Node0x82c010 -> Node0x82c080;
	Node0x82c080 -> Node0x82c0f0;
	Node0x82c0f0 -> Node0x82c160;
	Node0x82c160 -> Node0x82c1d0;
	Node0x82c1d0 -> Node0x82c240;
	Node0x82c240 -> Node0x82c2b0;
	Node0x82c2b0 -> Node0x82c320;
	Node0x82c320 -> Node0x82c390;
	Node0x82c390 -> Node0x82c400;
	Node0x82c400 -> Node0x82c470;
	Node0x82c470 -> Node0x82c4e0;
	Node0x82c4e0 -> Node0x82c550;
	Node0x82c550 -> Node0x82c5c0;
	Node0x82c5c0 -> Node0x82c630;
	Node0x82c630 -> Node0x82c6a0;
	Node0x82c6a0 -> Node0x7cb268;
	Node0x7cb268 -> Node0x82cb40;
	Node0x82cb40 -> Node0x82cb90;
edge [color=red]
	Node0x82a790 -> Node0x82ae10;
	Node0x82af20 -> Node0x82af90;
	Node0x82ae10 -> Node0x82b000;
	Node0x82af90 -> Node0x82b000;
	Node0x82b0a0 -> Node0x82b110;
	Node0x82b180 -> Node0x82b1f0;
	Node0x82b180 -> Node0x82b340;
	Node0x82b340 -> Node0x82b3b0;
	Node0x82b2d0 -> Node0x82b450;
	Node0x82b450 -> Node0x82b4f0;
	Node0x82b1f0 -> Node0x82b560;
	Node0x82b560 -> Node0x82b600;
	Node0x82b6e0 -> Node0x82b780;
	Node0x82aeb0 -> Node0x82b7f0;
	Node0x82aeb0 -> Node0x82b8d0;
	Node0x82b860 -> Node0x82b970;
	Node0x82b970 -> Node0x82ba10;
	Node0x82b8d0 -> Node0x82ba80;
	Node0x82b260 -> Node0x82bd70;
	Node0x82bd70 -> Node0x82bde0;
	Node0x82ba80 -> Node0x82bde0;
	Node0x82bde0 -> Node0x82be50;
	Node0x82baf0 -> Node0x82be50;
	Node0x82be50 -> Node0x82bec0;
	Node0x82b110 -> Node0x82bf30;
	Node0x82b340 -> Node0x82bf30;
	Node0x82bf30 -> Node0x82bfa0;
	Node0x82b860 -> Node0x82bfa0;
	Node0x82bfa0 -> Node0x82c010;
	Node0x82b7f0 -> Node0x82c080;
	Node0x82c080 -> Node0x82c0f0;
	Node0x82c0f0 -> Node0x82c160;
	Node0x82b1f0 -> Node0x82c160;
	Node0x82c160 -> Node0x82c1d0;
	Node0x82b2d0 -> Node0x82c1d0;
	Node0x82c1d0 -> Node0x82c240;
	Node0x82b3b0 -> Node0x82c240;
	Node0x82c240 -> Node0x82c2b0;
	Node0x82a790 -> Node0x82c2b0;
	Node0x82c2b0 -> Node0x82c320;
	Node0x82b600 -> Node0x82c320;
	Node0x82c320 -> Node0x82c390;
	Node0x82b670 -> Node0x82c390;
	Node0x82c390 -> Node0x82c400;
	Node0x82b8d0 -> Node0x82c400;
	Node0x82c400 -> Node0x82c470;
	Node0x82b4f0 -> Node0x82c470;
	Node0x82c470 -> Node0x82c4e0;
	Node0x82b780 -> Node0x82c4e0;
	Node0x82c4e0 -> Node0x82c550;
	Node0x82ba10 -> Node0x82c550;
	Node0x82c550 -> Node0x82c5c0;
	Node0x82c010 -> Node0x82c5c0;
	Node0x82c5c0 -> Node0x82c630;
	Node0x82bec0 -> Node0x82c630;
	Node0x82b000 -> Node0x82c6a0;
	Node0x82c630 -> Node0x82c6a0;
	Node0x82c6a0 -> Node0x7cb268;
	Node0x7cb268 -> Node0x82cb40;
}
