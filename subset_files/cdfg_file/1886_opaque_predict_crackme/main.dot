digraph "DFG for'main' function" {
	Node0xb2ead8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb2eb58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb2ebe8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb2ec48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xb2ecf8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xb2f128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb2f208[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xb2f308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb2f3c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xb2f478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb2f538[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xb2f5e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb29ae0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xb2f7e8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb30758[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb30dc8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb30e28[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xb30ea0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0xb30f10[shape=record, label="  %15 = mul i32 %14, -2"];
	Node0xb30f80[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0xb30ff0[shape=record, label="  %17 = sub i32 %10, %14"];
	Node0xb31060[shape=record, label="  %18 = add i32 %17, %15"];
	Node0xb310d0[shape=record, label="  %19 = mul i32 %11, -2"];
	Node0xb31140[shape=record, label="  %20 = or i32 %19, 1"];
	Node0xb311b0[shape=record, label="  %21 = or i32 %12, %11"];
	Node0xb31220[shape=record, label="  %22 = and i32 %12, %11"];
	Node0xb31290[shape=record, label="  %23 = xor i32 %13, %10"];
	Node0xb31300[shape=record, label="  %24 = and i32 %13, %16"];
	Node0xb31370[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0xb313e0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0xb31450[shape=record, label="  %27 = and i32 %13, %10"];
	Node0xb314c0[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0xb31530[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0xb315a0[shape=record, label="  %30 = or i32 %13, %16"];
	Node0xb31610[shape=record, label="  %31 = or i32 %13, %10"];
	Node0xb31680[shape=record, label="  %32 = shl i32 %30, 2"];
	Node0xb316f0[shape=record, label="  %33 = xor i32 %32, -4"];
	Node0xb31760[shape=record, label="  %34 = mul i32 %24, -5"];
	Node0xb317d0[shape=record, label="  %35 = sub i32 %31, %21"];
	Node0xb31840[shape=record, label="  %36 = sub i32 %35, %27"];
	Node0xb318b0[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0xb31920[shape=record, label="  %38 = add i32 %23, %22"];
	Node0xb31990[shape=record, label="  %39 = shl i32 %38, 2"];
	Node0xb31a00[shape=record, label="  %40 = sub i32 %11, %10"];
	Node0xb31a70[shape=record, label="  %41 = sub i32 %40, %12"];
	Node0xb31ae0[shape=record, label="  %42 = add i32 %41, %20"];
	Node0xb31b50[shape=record, label="  %43 = add i32 %42, %21"];
	Node0xb31bc0[shape=record, label="  %44 = add i32 %43, %30"];
	Node0xb31c30[shape=record, label="  %45 = add i32 %44, %34"];
	Node0xb31ca0[shape=record, label="  %46 = add i32 %45, %26"];
	Node0xb31d10[shape=record, label="  %47 = sub i32 %46, %29"];
	Node0xb31d80[shape=record, label="  %48 = sub i32 %47, %33"];
	Node0xb31df0[shape=record, label="  %49 = add i32 %48, %39"];
	Node0xb31e60[shape=record, label="  %50 = add i32 %49, %37"];
	Node0xb31ed0[shape=record, label="  %51 = icmp eq i32 %18, %50"];
	Node0xace8b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb31f60[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0xb32208[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb32368[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb32478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb32588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb32648[shape=record, label="  ret i32 0"];
	Node0xb2ead8 -> Node0xb2eb58;
	Node0xb2eb58 -> Node0xb2ebe8;
	Node0xb2ebe8 -> Node0xb2ec48;
	Node0xb2ec48 -> Node0xb2ecf8;
	Node0xb2ecf8 -> Node0xb2f128;
	Node0xb2f128 -> Node0xb2f208;
	Node0xb2f208 -> Node0xb2f308;
	Node0xb2f308 -> Node0xb2f3c8;
	Node0xb2f3c8 -> Node0xb2f478;
	Node0xb2f478 -> Node0xb2f538;
	Node0xb2f538 -> Node0xb2f5e8;
	Node0xb2f5e8 -> Node0xb29ae0;
	Node0xb29ae0 -> Node0xb2f7e8;
	Node0xb2f7e8 -> Node0xb30758;
	Node0xb30758 -> Node0xb30dc8;
	Node0xb30dc8 -> Node0xb30e28;
	Node0xb30e28 -> Node0xb30ea0;
	Node0xb30ea0 -> Node0xb30f10;
	Node0xb30f10 -> Node0xb30f80;
	Node0xb30f80 -> Node0xb30ff0;
	Node0xb30ff0 -> Node0xb31060;
	Node0xb31060 -> Node0xb310d0;
	Node0xb310d0 -> Node0xb31140;
	Node0xb31140 -> Node0xb311b0;
	Node0xb311b0 -> Node0xb31220;
	Node0xb31220 -> Node0xb31290;
	Node0xb31290 -> Node0xb31300;
	Node0xb31300 -> Node0xb31370;
	Node0xb31370 -> Node0xb313e0;
	Node0xb313e0 -> Node0xb31450;
	Node0xb31450 -> Node0xb314c0;
	Node0xb314c0 -> Node0xb31530;
	Node0xb31530 -> Node0xb315a0;
	Node0xb315a0 -> Node0xb31610;
	Node0xb31610 -> Node0xb31680;
	Node0xb31680 -> Node0xb316f0;
	Node0xb316f0 -> Node0xb31760;
	Node0xb31760 -> Node0xb317d0;
	Node0xb317d0 -> Node0xb31840;
	Node0xb31840 -> Node0xb318b0;
	Node0xb318b0 -> Node0xb31920;
	Node0xb31920 -> Node0xb31990;
	Node0xb31990 -> Node0xb31a00;
	Node0xb31a00 -> Node0xb31a70;
	Node0xb31a70 -> Node0xb31ae0;
	Node0xb31ae0 -> Node0xb31b50;
	Node0xb31b50 -> Node0xb31bc0;
	Node0xb31bc0 -> Node0xb31c30;
	Node0xb31c30 -> Node0xb31ca0;
	Node0xb31ca0 -> Node0xb31d10;
	Node0xb31d10 -> Node0xb31d80;
	Node0xb31d80 -> Node0xb31df0;
	Node0xb31df0 -> Node0xb31e60;
	Node0xb31e60 -> Node0xb31ed0;
	Node0xb31ed0 -> Node0xace8b8;
	Node0xace8b8 -> Node0xb31f60;
	Node0xb31f60 -> Node0xb32208;
	Node0xb32208 -> Node0xb32368;
	Node0xb32368 -> Node0xb32478;
	Node0xb32478 -> Node0xb32588;
	Node0xb32588 -> Node0xb32648;
edge [color=red]
	Node0xb2ead8 -> Node0xb2ecf8;
	Node0xb2ecf8 -> Node0xb2f128;
	Node0xb2eb58 -> Node0xb2f208;
	Node0xb2f208 -> Node0xb2f308;
	Node0xb2ebe8 -> Node0xb2f3c8;
	Node0xb2f3c8 -> Node0xb2f478;
	Node0xb2ec48 -> Node0xb2f538;
	Node0xb2f538 -> Node0xb2f5e8;
	Node0xb2ead8 -> Node0xb29ae0;
	Node0xb2eb58 -> Node0xb29ae0;
	Node0xb2ebe8 -> Node0xb29ae0;
	Node0xb2ec48 -> Node0xb29ae0;
	Node0xb2ead8 -> Node0xb2f7e8;
	Node0xb2eb58 -> Node0xb30758;
	Node0xb2ebe8 -> Node0xb30dc8;
	Node0xb2ec48 -> Node0xb30e28;
	Node0xb30dc8 -> Node0xb30ea0;
	Node0xb30758 -> Node0xb30ea0;
	Node0xb30ea0 -> Node0xb30f10;
	Node0xb2f7e8 -> Node0xb30f80;
	Node0xb2f7e8 -> Node0xb30ff0;
	Node0xb30ea0 -> Node0xb30ff0;
	Node0xb30ff0 -> Node0xb31060;
	Node0xb30f10 -> Node0xb31060;
	Node0xb30758 -> Node0xb310d0;
	Node0xb310d0 -> Node0xb31140;
	Node0xb30dc8 -> Node0xb311b0;
	Node0xb30758 -> Node0xb311b0;
	Node0xb30dc8 -> Node0xb31220;
	Node0xb30758 -> Node0xb31220;
	Node0xb30e28 -> Node0xb31290;
	Node0xb2f7e8 -> Node0xb31290;
	Node0xb30e28 -> Node0xb31300;
	Node0xb30f80 -> Node0xb31300;
	Node0xb31300 -> Node0xb31370;
	Node0xb31370 -> Node0xb313e0;
	Node0xb30e28 -> Node0xb31450;
	Node0xb2f7e8 -> Node0xb31450;
	Node0xb31450 -> Node0xb314c0;
	Node0xb314c0 -> Node0xb31530;
	Node0xb30e28 -> Node0xb315a0;
	Node0xb30f80 -> Node0xb315a0;
	Node0xb30e28 -> Node0xb31610;
	Node0xb2f7e8 -> Node0xb31610;
	Node0xb315a0 -> Node0xb31680;
	Node0xb31680 -> Node0xb316f0;
	Node0xb31300 -> Node0xb31760;
	Node0xb31610 -> Node0xb317d0;
	Node0xb311b0 -> Node0xb317d0;
	Node0xb317d0 -> Node0xb31840;
	Node0xb31450 -> Node0xb31840;
	Node0xb31840 -> Node0xb318b0;
	Node0xb31290 -> Node0xb31920;
	Node0xb31220 -> Node0xb31920;
	Node0xb31920 -> Node0xb31990;
	Node0xb30758 -> Node0xb31a00;
	Node0xb2f7e8 -> Node0xb31a00;
	Node0xb31a00 -> Node0xb31a70;
	Node0xb30dc8 -> Node0xb31a70;
	Node0xb31a70 -> Node0xb31ae0;
	Node0xb31140 -> Node0xb31ae0;
	Node0xb31ae0 -> Node0xb31b50;
	Node0xb311b0 -> Node0xb31b50;
	Node0xb31b50 -> Node0xb31bc0;
	Node0xb315a0 -> Node0xb31bc0;
	Node0xb31bc0 -> Node0xb31c30;
	Node0xb31760 -> Node0xb31c30;
	Node0xb31c30 -> Node0xb31ca0;
	Node0xb313e0 -> Node0xb31ca0;
	Node0xb31ca0 -> Node0xb31d10;
	Node0xb31530 -> Node0xb31d10;
	Node0xb31d10 -> Node0xb31d80;
	Node0xb316f0 -> Node0xb31d80;
	Node0xb31d80 -> Node0xb31df0;
	Node0xb31990 -> Node0xb31df0;
	Node0xb31df0 -> Node0xb31e60;
	Node0xb318b0 -> Node0xb31e60;
	Node0xb31060 -> Node0xb31ed0;
	Node0xb31e60 -> Node0xb31ed0;
	Node0xb31ed0 -> Node0xace8b8;
	Node0xace8b8 -> Node0xb31f60;
	Node0xb2f538 -> Node0xb32208;
	Node0xb2f3c8 -> Node0xb32368;
	Node0xb2f208 -> Node0xb32478;
	Node0xb2ecf8 -> Node0xb32588;
}
