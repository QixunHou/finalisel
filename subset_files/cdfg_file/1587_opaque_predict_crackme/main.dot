digraph "DFG for'main' function" {
	Node0x1c989d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c98a58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c98ae8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1c98f48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c99028[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1c99148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c99380[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1c99438[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c9a3a8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c9aa30[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x1c9aaa0[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x1c9ab10[shape=record, label="  %10 = mul i32 %9, -2"];
	Node0x1c9ab80[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1c9abf0[shape=record, label="  %12 = or i32 %6, %11"];
	Node0x1c9ac60[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x1c9acd0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1c9ad40[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1c9adb0[shape=record, label="  %16 = shl i32 %12, 1"];
	Node0x1c9ae20[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1c9ae90[shape=record, label="  %18 = shl i32 %6, 2"];
	Node0x1c9af00[shape=record, label="  %19 = sub i32 1, %6"];
	Node0x1c9af70[shape=record, label="  %20 = add i32 %19, %18"];
	Node0x1c9afe0[shape=record, label="  %21 = add i32 %20, %9"];
	Node0x1c9b050[shape=record, label="  %22 = sub i32 %21, %12"];
	Node0x1c9b0c0[shape=record, label="  %23 = add i32 %22, %10"];
	Node0x1c9b130[shape=record, label="  %24 = add i32 %23, %15"];
	Node0x1c9b1a0[shape=record, label="  %25 = add i32 %24, %17"];
	Node0x1c9b210[shape=record, label="  %26 = icmp eq i32 %8, %25"];
	Node0x1c399d8[shape=record, label="  %27 = select i1 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c9b2a0[shape=record, label="  %28 = call i32 @puts(i8* nonnull dereferenceable(1) %27) #5"];
	Node0x1c9b4f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c9b658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c9b718[shape=record, label="  ret i32 0"];
	Node0x1c989d8 -> Node0x1c98a58;
	Node0x1c98a58 -> Node0x1c98ae8;
	Node0x1c98ae8 -> Node0x1c98f48;
	Node0x1c98f48 -> Node0x1c99028;
	Node0x1c99028 -> Node0x1c99148;
	Node0x1c99148 -> Node0x1c99380;
	Node0x1c99380 -> Node0x1c99438;
	Node0x1c99438 -> Node0x1c9a3a8;
	Node0x1c9a3a8 -> Node0x1c9aa30;
	Node0x1c9aa30 -> Node0x1c9aaa0;
	Node0x1c9aaa0 -> Node0x1c9ab10;
	Node0x1c9ab10 -> Node0x1c9ab80;
	Node0x1c9ab80 -> Node0x1c9abf0;
	Node0x1c9abf0 -> Node0x1c9ac60;
	Node0x1c9ac60 -> Node0x1c9acd0;
	Node0x1c9acd0 -> Node0x1c9ad40;
	Node0x1c9ad40 -> Node0x1c9adb0;
	Node0x1c9adb0 -> Node0x1c9ae20;
	Node0x1c9ae20 -> Node0x1c9ae90;
	Node0x1c9ae90 -> Node0x1c9af00;
	Node0x1c9af00 -> Node0x1c9af70;
	Node0x1c9af70 -> Node0x1c9afe0;
	Node0x1c9afe0 -> Node0x1c9b050;
	Node0x1c9b050 -> Node0x1c9b0c0;
	Node0x1c9b0c0 -> Node0x1c9b130;
	Node0x1c9b130 -> Node0x1c9b1a0;
	Node0x1c9b1a0 -> Node0x1c9b210;
	Node0x1c9b210 -> Node0x1c399d8;
	Node0x1c399d8 -> Node0x1c9b2a0;
	Node0x1c9b2a0 -> Node0x1c9b4f8;
	Node0x1c9b4f8 -> Node0x1c9b658;
	Node0x1c9b658 -> Node0x1c9b718;
edge [color=red]
	Node0x1c989d8 -> Node0x1c98ae8;
	Node0x1c98ae8 -> Node0x1c98f48;
	Node0x1c98a58 -> Node0x1c99028;
	Node0x1c99028 -> Node0x1c99148;
	Node0x1c989d8 -> Node0x1c99380;
	Node0x1c98a58 -> Node0x1c99380;
	Node0x1c989d8 -> Node0x1c99438;
	Node0x1c98a58 -> Node0x1c9a3a8;
	Node0x1c9a3a8 -> Node0x1c9aa30;
	Node0x1c99438 -> Node0x1c9aa30;
	Node0x1c9a3a8 -> Node0x1c9aaa0;
	Node0x1c99438 -> Node0x1c9aaa0;
	Node0x1c9aaa0 -> Node0x1c9ab10;
	Node0x1c9a3a8 -> Node0x1c9ab80;
	Node0x1c99438 -> Node0x1c9abf0;
	Node0x1c9ab80 -> Node0x1c9abf0;
	Node0x1c9a3a8 -> Node0x1c9ac60;
	Node0x1c99438 -> Node0x1c9ac60;
	Node0x1c9ac60 -> Node0x1c9acd0;
	Node0x1c9acd0 -> Node0x1c9ad40;
	Node0x1c9abf0 -> Node0x1c9adb0;
	Node0x1c9adb0 -> Node0x1c9ae20;
	Node0x1c99438 -> Node0x1c9ae90;
	Node0x1c99438 -> Node0x1c9af00;
	Node0x1c9af00 -> Node0x1c9af70;
	Node0x1c9ae90 -> Node0x1c9af70;
	Node0x1c9af70 -> Node0x1c9afe0;
	Node0x1c9aaa0 -> Node0x1c9afe0;
	Node0x1c9afe0 -> Node0x1c9b050;
	Node0x1c9abf0 -> Node0x1c9b050;
	Node0x1c9b050 -> Node0x1c9b0c0;
	Node0x1c9ab10 -> Node0x1c9b0c0;
	Node0x1c9b0c0 -> Node0x1c9b130;
	Node0x1c9ad40 -> Node0x1c9b130;
	Node0x1c9b130 -> Node0x1c9b1a0;
	Node0x1c9ae20 -> Node0x1c9b1a0;
	Node0x1c9aa30 -> Node0x1c9b210;
	Node0x1c9b1a0 -> Node0x1c9b210;
	Node0x1c9b210 -> Node0x1c399d8;
	Node0x1c399d8 -> Node0x1c9b2a0;
	Node0x1c99028 -> Node0x1c9b4f8;
	Node0x1c98ae8 -> Node0x1c9b658;
}
