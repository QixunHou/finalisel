digraph "DFG for'main' function" {
	Node0x1409608[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1409688[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1409718[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1409778[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1409bf8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1409cd8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1409dd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1409e98[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1409f48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x140a1a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x140a268[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x140a3c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x140a428[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1410d10[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1410f18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1411078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1411188[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1411248[shape=record, label="  ret i32 0"];
	Node0x1409608 -> Node0x1409688;
	Node0x1409688 -> Node0x1409718;
	Node0x1409718 -> Node0x1409778;
	Node0x1409778 -> Node0x1409bf8;
	Node0x1409bf8 -> Node0x1409cd8;
	Node0x1409cd8 -> Node0x1409dd8;
	Node0x1409dd8 -> Node0x1409e98;
	Node0x1409e98 -> Node0x1409f48;
	Node0x1409f48 -> Node0x140a1a8;
	Node0x140a1a8 -> Node0x140a268;
	Node0x140a268 -> Node0x140a3c8;
	Node0x140a3c8 -> Node0x140a428;
	Node0x140a428 -> Node0x1410d10;
	Node0x1410d10 -> Node0x1410f18;
	Node0x1410f18 -> Node0x1411078;
	Node0x1411078 -> Node0x1411188;
	Node0x1411188 -> Node0x1411248;
edge [color=red]
	Node0x1409608 -> Node0x1409778;
	Node0x1409778 -> Node0x1409bf8;
	Node0x1409688 -> Node0x1409cd8;
	Node0x1409cd8 -> Node0x1409dd8;
	Node0x1409718 -> Node0x1409e98;
	Node0x1409e98 -> Node0x1409f48;
	Node0x1409608 -> Node0x140a1a8;
	Node0x1409688 -> Node0x140a1a8;
	Node0x1409718 -> Node0x140a1a8;
	Node0x1409608 -> Node0x140a268;
	Node0x1409688 -> Node0x140a3c8;
	Node0x1409718 -> Node0x140a428;
	Node0x140a268 -> Node0x1410d10;
	Node0x140a3c8 -> Node0x1410d10;
	Node0x140a428 -> Node0x1410d10;
	Node0x1409e98 -> Node0x1410f18;
	Node0x1409cd8 -> Node0x1411078;
	Node0x1409778 -> Node0x1411188;
}
