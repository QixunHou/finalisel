digraph "DFG for'main' function" {
	Node0x1410df8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1410e78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1410f08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1410f68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1411018[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1411448[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1411528[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1411628[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14116e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1411798[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1411858[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1411908[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x140bbd0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1411b08[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1412a78[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14130e8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1413148[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x14131c0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1413230[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x14132a0[shape=record, label="  %16 = xor i32 %11, -1"];
	Node0x1413310[shape=record, label="  %17 = add i32 %15, %16"];
	Node0x1413380[shape=record, label="  %18 = and i32 %13, %10"];
	Node0x14133f0[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x1413460[shape=record, label="  %20 = xor i32 %13, -1"];
	Node0x14134d0[shape=record, label="  %21 = add i32 %17, %20"];
	Node0x1413540[shape=record, label="  %22 = add i32 %21, %19"];
	Node0x14135b0[shape=record, label="  %23 = xor i32 %12, %16"];
	Node0x1413620[shape=record, label="  %24 = shl i32 %15, 1"];
	Node0x1413690[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x1413700[shape=record, label="  %26 = and i32 %11, %14"];
	Node0x1413770[shape=record, label="  %27 = and i32 %12, %11"];
	Node0x14137e0[shape=record, label="  %28 = xor i32 %10, -1"];
	Node0x1413850[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x14138c0[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x1413930[shape=record, label="  %31 = or i32 %13, %28"];
	Node0x14139a0[shape=record, label="  %32 = and i32 %13, %28"];
	Node0x1413a10[shape=record, label="  %33 = xor i32 %30, -1"];
	Node0x1413a80[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0x1413af0[shape=record, label="  %35 = shl i32 %31, 2"];
	Node0x1413b60[shape=record, label="  %36 = xor i32 %35, -4"];
	Node0x1413bd0[shape=record, label="  %37 = mul i32 %32, 3"];
	Node0x1413c40[shape=record, label="  %38 = add i32 %18, %27"];
	Node0x1413cb0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x1413d20[shape=record, label="  %40 = sub i32 2, %10"];
	Node0x1413d90[shape=record, label="  %41 = sub i32 %40, %11"];
	Node0x1413e00[shape=record, label="  %42 = sub i32 %41, %29"];
	Node0x1413e70[shape=record, label="  %43 = add i32 %42, %14"];
	Node0x1413ee0[shape=record, label="  %44 = sub i32 %43, %12"];
	Node0x1413f50[shape=record, label="  %45 = add i32 %44, %23"];
	Node0x1413fc0[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x1414030[shape=record, label="  %47 = sub i32 %46, %13"];
	Node0x14140a0[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x1414110[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x1414180[shape=record, label="  %50 = add i32 %49, %32"];
	Node0x14141f0[shape=record, label="  %51 = add i32 %50, %25"];
	Node0x1414260[shape=record, label="  %52 = add i32 %51, %34"];
	Node0x14142d0[shape=record, label="  %53 = add i32 %52, %37"];
	Node0x1414340[shape=record, label="  %54 = add i32 %53, %36"];
	Node0x14143b0[shape=record, label="  %55 = add i32 %54, %39"];
	Node0x1414420[shape=record, label="  %56 = icmp eq i32 %22, %55"];
	Node0x13b08b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14144b0[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x1414758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14148b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14149c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1414ad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1414b98[shape=record, label="  ret i32 0"];
	Node0x1410df8 -> Node0x1410e78;
	Node0x1410e78 -> Node0x1410f08;
	Node0x1410f08 -> Node0x1410f68;
	Node0x1410f68 -> Node0x1411018;
	Node0x1411018 -> Node0x1411448;
	Node0x1411448 -> Node0x1411528;
	Node0x1411528 -> Node0x1411628;
	Node0x1411628 -> Node0x14116e8;
	Node0x14116e8 -> Node0x1411798;
	Node0x1411798 -> Node0x1411858;
	Node0x1411858 -> Node0x1411908;
	Node0x1411908 -> Node0x140bbd0;
	Node0x140bbd0 -> Node0x1411b08;
	Node0x1411b08 -> Node0x1412a78;
	Node0x1412a78 -> Node0x14130e8;
	Node0x14130e8 -> Node0x1413148;
	Node0x1413148 -> Node0x14131c0;
	Node0x14131c0 -> Node0x1413230;
	Node0x1413230 -> Node0x14132a0;
	Node0x14132a0 -> Node0x1413310;
	Node0x1413310 -> Node0x1413380;
	Node0x1413380 -> Node0x14133f0;
	Node0x14133f0 -> Node0x1413460;
	Node0x1413460 -> Node0x14134d0;
	Node0x14134d0 -> Node0x1413540;
	Node0x1413540 -> Node0x14135b0;
	Node0x14135b0 -> Node0x1413620;
	Node0x1413620 -> Node0x1413690;
	Node0x1413690 -> Node0x1413700;
	Node0x1413700 -> Node0x1413770;
	Node0x1413770 -> Node0x14137e0;
	Node0x14137e0 -> Node0x1413850;
	Node0x1413850 -> Node0x14138c0;
	Node0x14138c0 -> Node0x1413930;
	Node0x1413930 -> Node0x14139a0;
	Node0x14139a0 -> Node0x1413a10;
	Node0x1413a10 -> Node0x1413a80;
	Node0x1413a80 -> Node0x1413af0;
	Node0x1413af0 -> Node0x1413b60;
	Node0x1413b60 -> Node0x1413bd0;
	Node0x1413bd0 -> Node0x1413c40;
	Node0x1413c40 -> Node0x1413cb0;
	Node0x1413cb0 -> Node0x1413d20;
	Node0x1413d20 -> Node0x1413d90;
	Node0x1413d90 -> Node0x1413e00;
	Node0x1413e00 -> Node0x1413e70;
	Node0x1413e70 -> Node0x1413ee0;
	Node0x1413ee0 -> Node0x1413f50;
	Node0x1413f50 -> Node0x1413fc0;
	Node0x1413fc0 -> Node0x1414030;
	Node0x1414030 -> Node0x14140a0;
	Node0x14140a0 -> Node0x1414110;
	Node0x1414110 -> Node0x1414180;
	Node0x1414180 -> Node0x14141f0;
	Node0x14141f0 -> Node0x1414260;
	Node0x1414260 -> Node0x14142d0;
	Node0x14142d0 -> Node0x1414340;
	Node0x1414340 -> Node0x14143b0;
	Node0x14143b0 -> Node0x1414420;
	Node0x1414420 -> Node0x13b08b8;
	Node0x13b08b8 -> Node0x14144b0;
	Node0x14144b0 -> Node0x1414758;
	Node0x1414758 -> Node0x14148b8;
	Node0x14148b8 -> Node0x14149c8;
	Node0x14149c8 -> Node0x1414ad8;
	Node0x1414ad8 -> Node0x1414b98;
edge [color=red]
	Node0x1410df8 -> Node0x1411018;
	Node0x1411018 -> Node0x1411448;
	Node0x1410e78 -> Node0x1411528;
	Node0x1411528 -> Node0x1411628;
	Node0x1410f08 -> Node0x14116e8;
	Node0x14116e8 -> Node0x1411798;
	Node0x1410f68 -> Node0x1411858;
	Node0x1411858 -> Node0x1411908;
	Node0x1410df8 -> Node0x140bbd0;
	Node0x1410e78 -> Node0x140bbd0;
	Node0x1410f08 -> Node0x140bbd0;
	Node0x1410f68 -> Node0x140bbd0;
	Node0x1410df8 -> Node0x1411b08;
	Node0x1410e78 -> Node0x1412a78;
	Node0x1410f08 -> Node0x14130e8;
	Node0x1410f68 -> Node0x1413148;
	Node0x14130e8 -> Node0x14131c0;
	Node0x1412a78 -> Node0x1413230;
	Node0x14131c0 -> Node0x1413230;
	Node0x1412a78 -> Node0x14132a0;
	Node0x1413230 -> Node0x1413310;
	Node0x14132a0 -> Node0x1413310;
	Node0x1413148 -> Node0x1413380;
	Node0x1411b08 -> Node0x1413380;
	Node0x1413380 -> Node0x14133f0;
	Node0x1413148 -> Node0x1413460;
	Node0x1413310 -> Node0x14134d0;
	Node0x1413460 -> Node0x14134d0;
	Node0x14134d0 -> Node0x1413540;
	Node0x14133f0 -> Node0x1413540;
	Node0x14130e8 -> Node0x14135b0;
	Node0x14132a0 -> Node0x14135b0;
	Node0x1413230 -> Node0x1413620;
	Node0x1413620 -> Node0x1413690;
	Node0x1412a78 -> Node0x1413700;
	Node0x14131c0 -> Node0x1413700;
	Node0x14130e8 -> Node0x1413770;
	Node0x1412a78 -> Node0x1413770;
	Node0x1411b08 -> Node0x14137e0;
	Node0x14137e0 -> Node0x1413850;
	Node0x1413148 -> Node0x14138c0;
	Node0x1411b08 -> Node0x14138c0;
	Node0x1413148 -> Node0x1413930;
	Node0x14137e0 -> Node0x1413930;
	Node0x1413148 -> Node0x14139a0;
	Node0x14137e0 -> Node0x14139a0;
	Node0x14138c0 -> Node0x1413a10;
	Node0x1413a10 -> Node0x1413a80;
	Node0x1413930 -> Node0x1413af0;
	Node0x1413af0 -> Node0x1413b60;
	Node0x14139a0 -> Node0x1413bd0;
	Node0x1413380 -> Node0x1413c40;
	Node0x1413770 -> Node0x1413c40;
	Node0x1413c40 -> Node0x1413cb0;
	Node0x1411b08 -> Node0x1413d20;
	Node0x1413d20 -> Node0x1413d90;
	Node0x1412a78 -> Node0x1413d90;
	Node0x1413d90 -> Node0x1413e00;
	Node0x1413850 -> Node0x1413e00;
	Node0x1413e00 -> Node0x1413e70;
	Node0x14131c0 -> Node0x1413e70;
	Node0x1413e70 -> Node0x1413ee0;
	Node0x14130e8 -> Node0x1413ee0;
	Node0x1413ee0 -> Node0x1413f50;
	Node0x14135b0 -> Node0x1413f50;
	Node0x1413f50 -> Node0x1413fc0;
	Node0x1413700 -> Node0x1413fc0;
	Node0x1413fc0 -> Node0x1414030;
	Node0x1413148 -> Node0x1414030;
	Node0x1414030 -> Node0x14140a0;
	Node0x14138c0 -> Node0x14140a0;
	Node0x14140a0 -> Node0x1414110;
	Node0x1413930 -> Node0x1414110;
	Node0x1414110 -> Node0x1414180;
	Node0x14139a0 -> Node0x1414180;
	Node0x1414180 -> Node0x14141f0;
	Node0x1413690 -> Node0x14141f0;
	Node0x14141f0 -> Node0x1414260;
	Node0x1413a80 -> Node0x1414260;
	Node0x1414260 -> Node0x14142d0;
	Node0x1413bd0 -> Node0x14142d0;
	Node0x14142d0 -> Node0x1414340;
	Node0x1413b60 -> Node0x1414340;
	Node0x1414340 -> Node0x14143b0;
	Node0x1413cb0 -> Node0x14143b0;
	Node0x1413540 -> Node0x1414420;
	Node0x14143b0 -> Node0x1414420;
	Node0x1414420 -> Node0x13b08b8;
	Node0x13b08b8 -> Node0x14144b0;
	Node0x1411858 -> Node0x1414758;
	Node0x14116e8 -> Node0x14148b8;
	Node0x1411528 -> Node0x14149c8;
	Node0x1411018 -> Node0x1414ad8;
}
