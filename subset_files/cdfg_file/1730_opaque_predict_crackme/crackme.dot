digraph "DFG for'crackme' function" {
	Node0x140f1b0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x140f220[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x140f290[shape=record, label="  %7 = xor i32 %1, -1"];
	Node0x140f300[shape=record, label="  %8 = add i32 %6, %7"];
	Node0x140f370[shape=record, label="  %9 = and i32 %3, %0"];
	Node0x140f3e0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x140f450[shape=record, label="  %11 = xor i32 %3, -1"];
	Node0x140f4c0[shape=record, label="  %12 = add i32 %8, %11"];
	Node0x140f530[shape=record, label="  %13 = add i32 %12, %10"];
	Node0x140f5a0[shape=record, label="  %14 = xor i32 %7, %2"];
	Node0x140f640[shape=record, label="  %15 = shl i32 %6, 1"];
	Node0x140f6e0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x140f750[shape=record, label="  %17 = and i32 %5, %1"];
	Node0x140f7c0[shape=record, label="  %18 = and i32 %2, %1"];
	Node0x140f830[shape=record, label="  %19 = xor i32 %0, -1"];
	Node0x140f8a0[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x140f910[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x140f980[shape=record, label="  %22 = or i32 %19, %3"];
	Node0x140f9f0[shape=record, label="  %23 = and i32 %19, %3"];
	Node0x140fa60[shape=record, label="  %24 = xor i32 %21, -1"];
	Node0x140fb00[shape=record, label="  %25 = mul i32 %24, 5"];
	Node0x140fba0[shape=record, label="  %26 = shl i32 %22, 2"];
	Node0x140fc40[shape=record, label="  %27 = xor i32 %26, -4"];
	Node0x140fce0[shape=record, label="  %28 = mul i32 %23, 3"];
	Node0x140fd50[shape=record, label="  %29 = add i32 %9, %18"];
	Node0x140fdc0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x140fe30[shape=record, label="  %31 = sub i32 2, %0"];
	Node0x140fea0[shape=record, label="  %32 = sub i32 %31, %1"];
	Node0x1410120[shape=record, label="  %33 = sub i32 %32, %20"];
	Node0x1410190[shape=record, label="  %34 = add i32 %33, %5"];
	Node0x1410200[shape=record, label="  %35 = sub i32 %34, %2"];
	Node0x1410270[shape=record, label="  %36 = add i32 %35, %14"];
	Node0x14102e0[shape=record, label="  %37 = add i32 %36, %17"];
	Node0x1410350[shape=record, label="  %38 = sub i32 %37, %3"];
	Node0x14103c0[shape=record, label="  %39 = add i32 %38, %21"];
	Node0x1410430[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x14104a0[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x1410510[shape=record, label="  %42 = add i32 %41, %16"];
	Node0x1410580[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x14105f0[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x1410660[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x14106d0[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x1410740[shape=record, label="  %47 = icmp eq i32 %13, %46"];
	Node0x13af268[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1410be0[shape=record, label="  %49 = tail call i32 @puts(i8* nonnull dereferenceable(1) %48)"];
	Node0x1410c30[shape=record, label="  ret void"];
	Node0x140f1b0 -> Node0x140f220;
	Node0x140f220 -> Node0x140f290;
	Node0x140f290 -> Node0x140f300;
	Node0x140f300 -> Node0x140f370;
	Node0x140f370 -> Node0x140f3e0;
	Node0x140f3e0 -> Node0x140f450;
	Node0x140f450 -> Node0x140f4c0;
	Node0x140f4c0 -> Node0x140f530;
	Node0x140f530 -> Node0x140f5a0;
	Node0x140f5a0 -> Node0x140f640;
	Node0x140f640 -> Node0x140f6e0;
	Node0x140f6e0 -> Node0x140f750;
	Node0x140f750 -> Node0x140f7c0;
	Node0x140f7c0 -> Node0x140f830;
	Node0x140f830 -> Node0x140f8a0;
	Node0x140f8a0 -> Node0x140f910;
	Node0x140f910 -> Node0x140f980;
	Node0x140f980 -> Node0x140f9f0;
	Node0x140f9f0 -> Node0x140fa60;
	Node0x140fa60 -> Node0x140fb00;
	Node0x140fb00 -> Node0x140fba0;
	Node0x140fba0 -> Node0x140fc40;
	Node0x140fc40 -> Node0x140fce0;
	Node0x140fce0 -> Node0x140fd50;
	Node0x140fd50 -> Node0x140fdc0;
	Node0x140fdc0 -> Node0x140fe30;
	Node0x140fe30 -> Node0x140fea0;
	Node0x140fea0 -> Node0x1410120;
	Node0x1410120 -> Node0x1410190;
	Node0x1410190 -> Node0x1410200;
	Node0x1410200 -> Node0x1410270;
	Node0x1410270 -> Node0x14102e0;
	Node0x14102e0 -> Node0x1410350;
	Node0x1410350 -> Node0x14103c0;
	Node0x14103c0 -> Node0x1410430;
	Node0x1410430 -> Node0x14104a0;
	Node0x14104a0 -> Node0x1410510;
	Node0x1410510 -> Node0x1410580;
	Node0x1410580 -> Node0x14105f0;
	Node0x14105f0 -> Node0x1410660;
	Node0x1410660 -> Node0x14106d0;
	Node0x14106d0 -> Node0x1410740;
	Node0x1410740 -> Node0x13af268;
	Node0x13af268 -> Node0x1410be0;
	Node0x1410be0 -> Node0x1410c30;
edge [color=red]
	Node0x140f1b0 -> Node0x140f220;
	Node0x140f220 -> Node0x140f300;
	Node0x140f290 -> Node0x140f300;
	Node0x140f370 -> Node0x140f3e0;
	Node0x140f300 -> Node0x140f4c0;
	Node0x140f450 -> Node0x140f4c0;
	Node0x140f4c0 -> Node0x140f530;
	Node0x140f3e0 -> Node0x140f530;
	Node0x140f290 -> Node0x140f5a0;
	Node0x140f220 -> Node0x140f640;
	Node0x140f640 -> Node0x140f6e0;
	Node0x140f1b0 -> Node0x140f750;
	Node0x140f830 -> Node0x140f8a0;
	Node0x140f830 -> Node0x140f980;
	Node0x140f830 -> Node0x140f9f0;
	Node0x140f910 -> Node0x140fa60;
	Node0x140fa60 -> Node0x140fb00;
	Node0x140f980 -> Node0x140fba0;
	Node0x140fba0 -> Node0x140fc40;
	Node0x140f9f0 -> Node0x140fce0;
	Node0x140f370 -> Node0x140fd50;
	Node0x140f7c0 -> Node0x140fd50;
	Node0x140fd50 -> Node0x140fdc0;
	Node0x140fe30 -> Node0x140fea0;
	Node0x140fea0 -> Node0x1410120;
	Node0x140f8a0 -> Node0x1410120;
	Node0x1410120 -> Node0x1410190;
	Node0x140f1b0 -> Node0x1410190;
	Node0x1410190 -> Node0x1410200;
	Node0x1410200 -> Node0x1410270;
	Node0x140f5a0 -> Node0x1410270;
	Node0x1410270 -> Node0x14102e0;
	Node0x140f750 -> Node0x14102e0;
	Node0x14102e0 -> Node0x1410350;
	Node0x1410350 -> Node0x14103c0;
	Node0x140f910 -> Node0x14103c0;
	Node0x14103c0 -> Node0x1410430;
	Node0x140f980 -> Node0x1410430;
	Node0x1410430 -> Node0x14104a0;
	Node0x140f9f0 -> Node0x14104a0;
	Node0x14104a0 -> Node0x1410510;
	Node0x140f6e0 -> Node0x1410510;
	Node0x1410510 -> Node0x1410580;
	Node0x140fb00 -> Node0x1410580;
	Node0x1410580 -> Node0x14105f0;
	Node0x140fce0 -> Node0x14105f0;
	Node0x14105f0 -> Node0x1410660;
	Node0x140fc40 -> Node0x1410660;
	Node0x1410660 -> Node0x14106d0;
	Node0x140fdc0 -> Node0x14106d0;
	Node0x140f530 -> Node0x1410740;
	Node0x14106d0 -> Node0x1410740;
	Node0x1410740 -> Node0x13af268;
	Node0x13af268 -> Node0x1410be0;
}
