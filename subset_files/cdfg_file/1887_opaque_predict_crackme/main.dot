digraph "DFG for'main' function" {
	Node0xb890d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb89158[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb891e8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xb89248[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xb892f8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xb89728[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb89808[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xb89908[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb899c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xb89a78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb89b38[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xb89be8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb83860[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xb89de8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb8ad58[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb8b3c8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xb8b428[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xb8b538[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xb8b798[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xb8b8f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xb8ba08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xb8bb18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xb8bbd8[shape=record, label="  ret i32 0"];
	Node0xb890d8 -> Node0xb89158;
	Node0xb89158 -> Node0xb891e8;
	Node0xb891e8 -> Node0xb89248;
	Node0xb89248 -> Node0xb892f8;
	Node0xb892f8 -> Node0xb89728;
	Node0xb89728 -> Node0xb89808;
	Node0xb89808 -> Node0xb89908;
	Node0xb89908 -> Node0xb899c8;
	Node0xb899c8 -> Node0xb89a78;
	Node0xb89a78 -> Node0xb89b38;
	Node0xb89b38 -> Node0xb89be8;
	Node0xb89be8 -> Node0xb83860;
	Node0xb83860 -> Node0xb89de8;
	Node0xb89de8 -> Node0xb8ad58;
	Node0xb8ad58 -> Node0xb8b3c8;
	Node0xb8b3c8 -> Node0xb8b428;
	Node0xb8b428 -> Node0xb8b538;
	Node0xb8b538 -> Node0xb8b798;
	Node0xb8b798 -> Node0xb8b8f8;
	Node0xb8b8f8 -> Node0xb8ba08;
	Node0xb8ba08 -> Node0xb8bb18;
	Node0xb8bb18 -> Node0xb8bbd8;
edge [color=red]
	Node0xb890d8 -> Node0xb892f8;
	Node0xb892f8 -> Node0xb89728;
	Node0xb89158 -> Node0xb89808;
	Node0xb89808 -> Node0xb89908;
	Node0xb891e8 -> Node0xb899c8;
	Node0xb899c8 -> Node0xb89a78;
	Node0xb89248 -> Node0xb89b38;
	Node0xb89b38 -> Node0xb89be8;
	Node0xb890d8 -> Node0xb83860;
	Node0xb89158 -> Node0xb83860;
	Node0xb891e8 -> Node0xb83860;
	Node0xb89248 -> Node0xb83860;
	Node0xb890d8 -> Node0xb89de8;
	Node0xb89158 -> Node0xb8ad58;
	Node0xb891e8 -> Node0xb8b3c8;
	Node0xb89248 -> Node0xb8b428;
	Node0xb89de8 -> Node0xb8b538;
	Node0xb8ad58 -> Node0xb8b538;
	Node0xb8b3c8 -> Node0xb8b538;
	Node0xb8b428 -> Node0xb8b538;
	Node0xb89b38 -> Node0xb8b798;
	Node0xb899c8 -> Node0xb8b8f8;
	Node0xb89808 -> Node0xb8ba08;
	Node0xb892f8 -> Node0xb8bb18;
}
