digraph "DFG for'crackme' function" {
	Node0xb86830[shape=record, label="  %5 = and i32 %2, %1"];
	Node0xb86eb0[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0xb86f20[shape=record, label="  %7 = sub i32 %6, %2"];
	Node0xb86f90[shape=record, label="  %8 = xor i32 %3, -1"];
	Node0xb87000[shape=record, label="  %9 = add i32 %7, %8"];
	Node0xb87070[shape=record, label="  %10 = xor i32 %3, %0"];
	Node0xb870e0[shape=record, label="  %11 = add i32 %9, %10"];
	Node0xb87150[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0xb871f0[shape=record, label="  %13 = shl i32 %1, 2"];
	Node0xb87290[shape=record, label="  %14 = xor i32 %13, -4"];
	Node0xb87300[shape=record, label="  %15 = or i32 %12, %1"];
	Node0xb87370[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0xb873e0[shape=record, label="  %17 = xor i32 %2, %1"];
	Node0xb87480[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0xb874f0[shape=record, label="  %19 = xor i32 %17, -1"];
	Node0xb87560[shape=record, label="  %20 = and i32 %12, %1"];
	Node0xb875d0[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0xb87640[shape=record, label="  %22 = or i32 %2, %1"];
	Node0xb876b0[shape=record, label="  %23 = add i32 %22, 1"];
	Node0xb87720[shape=record, label="  %24 = shl i32 %15, 2"];
	Node0xb87790[shape=record, label="  %25 = xor i32 %24, -4"];
	Node0xb87830[shape=record, label="  %26 = mul i32 %20, 3"];
	Node0xb878a0[shape=record, label="  %27 = shl i32 %5, 1"];
	Node0xb87910[shape=record, label="  %28 = and i32 %3, %0"];
	Node0xb87980[shape=record, label="  %29 = xor i32 %0, -1"];
	Node0xb879f0[shape=record, label="  %30 = shl i32 %29, 2"];
	Node0xb87a60[shape=record, label="  %31 = shl i32 %0, 1"];
	Node0xb87ad0[shape=record, label="  %32 = or i32 %3, %0"];
	Node0xb87d50[shape=record, label="  %33 = and i32 %29, %3"];
	Node0xb87dc0[shape=record, label="  %34 = xor i32 %33, -1"];
	Node0xb87e30[shape=record, label="  %35 = shl i32 %10, 2"];
	Node0xb87ea0[shape=record, label="  %36 = xor i32 %35, -4"];
	Node0xb87f10[shape=record, label="  %37 = shl i32 %32, 1"];
	Node0xb87fb0[shape=record, label="  %38 = xor i32 %37, -2"];
	Node0xb88050[shape=record, label="  %39 = mul i32 %28, -7"];
	Node0xb880c0[shape=record, label="  %40 = add i32 %33, %23"];
	Node0xb88160[shape=record, label="  %41 = mul i32 %40, 6"];
	Node0xb881d0[shape=record, label="  %42 = sub i32 2, %1"];
	Node0xb88240[shape=record, label="  %43 = sub i32 %42, %30"];
	Node0xb882b0[shape=record, label="  %44 = add i32 %43, %31"];
	Node0xb88320[shape=record, label="  %45 = add i32 %44, %12"];
	Node0xb88390[shape=record, label="  %46 = add i32 %45, %14"];
	Node0xb88400[shape=record, label="  %47 = add i32 %46, %16"];
	Node0xb88470[shape=record, label="  %48 = add i32 %47, %19"];
	Node0xb884e0[shape=record, label="  %49 = add i32 %48, %21"];
	Node0xb88550[shape=record, label="  %50 = sub i32 %49, %18"];
	Node0xb885c0[shape=record, label="  %51 = add i32 %50, %26"];
	Node0xb88630[shape=record, label="  %52 = sub i32 %51, %27"];
	Node0xb886a0[shape=record, label="  %53 = add i32 %52, %28"];
	Node0xb88710[shape=record, label="  %54 = add i32 %53, %32"];
	Node0xb88780[shape=record, label="  %55 = add i32 %54, %34"];
	Node0xb887f0[shape=record, label="  %56 = sub i32 %55, %25"];
	Node0xb88860[shape=record, label="  %57 = add i32 %56, %39"];
	Node0xb888d0[shape=record, label="  %58 = add i32 %57, %36"];
	Node0xb88940[shape=record, label="  %59 = add i32 %58, %38"];
	Node0xb889b0[shape=record, label="  %60 = add i32 %59, %41"];
	Node0xb88a20[shape=record, label="  %61 = icmp eq i32 %11, %60"];
	Node0xb27268[shape=record, label="  %62 = select i1 %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb88ec0[shape=record, label="  %63 = tail call i32 @puts(i8* nonnull dereferenceable(1) %62)"];
	Node0xb88f10[shape=record, label="  ret void"];
	Node0xb86830 -> Node0xb86eb0;
	Node0xb86eb0 -> Node0xb86f20;
	Node0xb86f20 -> Node0xb86f90;
	Node0xb86f90 -> Node0xb87000;
	Node0xb87000 -> Node0xb87070;
	Node0xb87070 -> Node0xb870e0;
	Node0xb870e0 -> Node0xb87150;
	Node0xb87150 -> Node0xb871f0;
	Node0xb871f0 -> Node0xb87290;
	Node0xb87290 -> Node0xb87300;
	Node0xb87300 -> Node0xb87370;
	Node0xb87370 -> Node0xb873e0;
	Node0xb873e0 -> Node0xb87480;
	Node0xb87480 -> Node0xb874f0;
	Node0xb874f0 -> Node0xb87560;
	Node0xb87560 -> Node0xb875d0;
	Node0xb875d0 -> Node0xb87640;
	Node0xb87640 -> Node0xb876b0;
	Node0xb876b0 -> Node0xb87720;
	Node0xb87720 -> Node0xb87790;
	Node0xb87790 -> Node0xb87830;
	Node0xb87830 -> Node0xb878a0;
	Node0xb878a0 -> Node0xb87910;
	Node0xb87910 -> Node0xb87980;
	Node0xb87980 -> Node0xb879f0;
	Node0xb879f0 -> Node0xb87a60;
	Node0xb87a60 -> Node0xb87ad0;
	Node0xb87ad0 -> Node0xb87d50;
	Node0xb87d50 -> Node0xb87dc0;
	Node0xb87dc0 -> Node0xb87e30;
	Node0xb87e30 -> Node0xb87ea0;
	Node0xb87ea0 -> Node0xb87f10;
	Node0xb87f10 -> Node0xb87fb0;
	Node0xb87fb0 -> Node0xb88050;
	Node0xb88050 -> Node0xb880c0;
	Node0xb880c0 -> Node0xb88160;
	Node0xb88160 -> Node0xb881d0;
	Node0xb881d0 -> Node0xb88240;
	Node0xb88240 -> Node0xb882b0;
	Node0xb882b0 -> Node0xb88320;
	Node0xb88320 -> Node0xb88390;
	Node0xb88390 -> Node0xb88400;
	Node0xb88400 -> Node0xb88470;
	Node0xb88470 -> Node0xb884e0;
	Node0xb884e0 -> Node0xb88550;
	Node0xb88550 -> Node0xb885c0;
	Node0xb885c0 -> Node0xb88630;
	Node0xb88630 -> Node0xb886a0;
	Node0xb886a0 -> Node0xb88710;
	Node0xb88710 -> Node0xb88780;
	Node0xb88780 -> Node0xb887f0;
	Node0xb887f0 -> Node0xb88860;
	Node0xb88860 -> Node0xb888d0;
	Node0xb888d0 -> Node0xb88940;
	Node0xb88940 -> Node0xb889b0;
	Node0xb889b0 -> Node0xb88a20;
	Node0xb88a20 -> Node0xb27268;
	Node0xb27268 -> Node0xb88ec0;
	Node0xb88ec0 -> Node0xb88f10;
edge [color=red]
	Node0xb86830 -> Node0xb86eb0;
	Node0xb86eb0 -> Node0xb86f20;
	Node0xb86f20 -> Node0xb87000;
	Node0xb86f90 -> Node0xb87000;
	Node0xb87000 -> Node0xb870e0;
	Node0xb87070 -> Node0xb870e0;
	Node0xb871f0 -> Node0xb87290;
	Node0xb87150 -> Node0xb87300;
	Node0xb87300 -> Node0xb87370;
	Node0xb873e0 -> Node0xb87480;
	Node0xb873e0 -> Node0xb874f0;
	Node0xb87150 -> Node0xb87560;
	Node0xb87560 -> Node0xb875d0;
	Node0xb87640 -> Node0xb876b0;
	Node0xb87300 -> Node0xb87720;
	Node0xb87720 -> Node0xb87790;
	Node0xb87560 -> Node0xb87830;
	Node0xb86830 -> Node0xb878a0;
	Node0xb87980 -> Node0xb879f0;
	Node0xb87980 -> Node0xb87d50;
	Node0xb87d50 -> Node0xb87dc0;
	Node0xb87070 -> Node0xb87e30;
	Node0xb87e30 -> Node0xb87ea0;
	Node0xb87ad0 -> Node0xb87f10;
	Node0xb87f10 -> Node0xb87fb0;
	Node0xb87910 -> Node0xb88050;
	Node0xb87d50 -> Node0xb880c0;
	Node0xb876b0 -> Node0xb880c0;
	Node0xb880c0 -> Node0xb88160;
	Node0xb881d0 -> Node0xb88240;
	Node0xb879f0 -> Node0xb88240;
	Node0xb88240 -> Node0xb882b0;
	Node0xb87a60 -> Node0xb882b0;
	Node0xb882b0 -> Node0xb88320;
	Node0xb87150 -> Node0xb88320;
	Node0xb88320 -> Node0xb88390;
	Node0xb87290 -> Node0xb88390;
	Node0xb88390 -> Node0xb88400;
	Node0xb87370 -> Node0xb88400;
	Node0xb88400 -> Node0xb88470;
	Node0xb874f0 -> Node0xb88470;
	Node0xb88470 -> Node0xb884e0;
	Node0xb875d0 -> Node0xb884e0;
	Node0xb884e0 -> Node0xb88550;
	Node0xb87480 -> Node0xb88550;
	Node0xb88550 -> Node0xb885c0;
	Node0xb87830 -> Node0xb885c0;
	Node0xb885c0 -> Node0xb88630;
	Node0xb878a0 -> Node0xb88630;
	Node0xb88630 -> Node0xb886a0;
	Node0xb87910 -> Node0xb886a0;
	Node0xb886a0 -> Node0xb88710;
	Node0xb87ad0 -> Node0xb88710;
	Node0xb88710 -> Node0xb88780;
	Node0xb87dc0 -> Node0xb88780;
	Node0xb88780 -> Node0xb887f0;
	Node0xb87790 -> Node0xb887f0;
	Node0xb887f0 -> Node0xb88860;
	Node0xb88050 -> Node0xb88860;
	Node0xb88860 -> Node0xb888d0;
	Node0xb87ea0 -> Node0xb888d0;
	Node0xb888d0 -> Node0xb88940;
	Node0xb87fb0 -> Node0xb88940;
	Node0xb88940 -> Node0xb889b0;
	Node0xb88160 -> Node0xb889b0;
	Node0xb870e0 -> Node0xb88a20;
	Node0xb889b0 -> Node0xb88a20;
	Node0xb88a20 -> Node0xb27268;
	Node0xb27268 -> Node0xb88ec0;
}
