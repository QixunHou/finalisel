digraph "DFG for'main' function" {
	Node0x15392c8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1539348[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x15393d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1539438[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x15394e8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1539918[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x15399f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1539af8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1539bb8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1539c68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1539d28[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1539dd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x15348a0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1539fd8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x153af48[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x153b5b8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x153b618[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x153b690[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x153b700[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x153b770[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x153b7e0[shape=record, label="  %17 = xor i32 %12, %11"];
	Node0x153b850[shape=record, label="  %18 = or i32 %12, %11"];
	Node0x153b8c0[shape=record, label="  %19 = and i32 %11, %14"];
	Node0x153b930[shape=record, label="  %20 = shl i32 %19, 2"];
	Node0x153b9a0[shape=record, label="  %21 = and i32 %12, %11"];
	Node0x153ba10[shape=record, label="  %22 = xor i32 %10, -1"];
	Node0x153ba80[shape=record, label="  %23 = or i32 %13, %22"];
	Node0x153baf0[shape=record, label="  %24 = or i32 %13, %10"];
	Node0x153bb60[shape=record, label="  %25 = shl i32 %23, 1"];
	Node0x153bbd0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x153bc40[shape=record, label="  %27 = shl i32 %17, 1"];
	Node0x153bcb0[shape=record, label="  %28 = add i32 %11, 2"];
	Node0x153bd20[shape=record, label="  %29 = sub i32 %28, %12"];
	Node0x153bd90[shape=record, label="  %30 = add i32 %29, %18"];
	Node0x153be00[shape=record, label="  %31 = add i32 %30, %15"];
	Node0x153be70[shape=record, label="  %32 = sub i32 %31, %21"];
	Node0x153bee0[shape=record, label="  %33 = add i32 %32, %13"];
	Node0x153bf50[shape=record, label="  %34 = sub i32 %33, %20"];
	Node0x153bfc0[shape=record, label="  %35 = add i32 %34, %23"];
	Node0x153c030[shape=record, label="  %36 = sub i32 %35, %24"];
	Node0x153c0a0[shape=record, label="  %37 = add i32 %36, %27"];
	Node0x153c110[shape=record, label="  %38 = add i32 %37, %26"];
	Node0x153c180[shape=record, label="  %39 = icmp eq i32 %38, %16"];
	Node0x14d98b8[shape=record, label="  %40 = select i1 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x153c210[shape=record, label="  %41 = call i32 @puts(i8* nonnull dereferenceable(1) %40) #5"];
	Node0x153c4b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x153c618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x153c728[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x153c838[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x153c8f8[shape=record, label="  ret i32 0"];
	Node0x15392c8 -> Node0x1539348;
	Node0x1539348 -> Node0x15393d8;
	Node0x15393d8 -> Node0x1539438;
	Node0x1539438 -> Node0x15394e8;
	Node0x15394e8 -> Node0x1539918;
	Node0x1539918 -> Node0x15399f8;
	Node0x15399f8 -> Node0x1539af8;
	Node0x1539af8 -> Node0x1539bb8;
	Node0x1539bb8 -> Node0x1539c68;
	Node0x1539c68 -> Node0x1539d28;
	Node0x1539d28 -> Node0x1539dd8;
	Node0x1539dd8 -> Node0x15348a0;
	Node0x15348a0 -> Node0x1539fd8;
	Node0x1539fd8 -> Node0x153af48;
	Node0x153af48 -> Node0x153b5b8;
	Node0x153b5b8 -> Node0x153b618;
	Node0x153b618 -> Node0x153b690;
	Node0x153b690 -> Node0x153b700;
	Node0x153b700 -> Node0x153b770;
	Node0x153b770 -> Node0x153b7e0;
	Node0x153b7e0 -> Node0x153b850;
	Node0x153b850 -> Node0x153b8c0;
	Node0x153b8c0 -> Node0x153b930;
	Node0x153b930 -> Node0x153b9a0;
	Node0x153b9a0 -> Node0x153ba10;
	Node0x153ba10 -> Node0x153ba80;
	Node0x153ba80 -> Node0x153baf0;
	Node0x153baf0 -> Node0x153bb60;
	Node0x153bb60 -> Node0x153bbd0;
	Node0x153bbd0 -> Node0x153bc40;
	Node0x153bc40 -> Node0x153bcb0;
	Node0x153bcb0 -> Node0x153bd20;
	Node0x153bd20 -> Node0x153bd90;
	Node0x153bd90 -> Node0x153be00;
	Node0x153be00 -> Node0x153be70;
	Node0x153be70 -> Node0x153bee0;
	Node0x153bee0 -> Node0x153bf50;
	Node0x153bf50 -> Node0x153bfc0;
	Node0x153bfc0 -> Node0x153c030;
	Node0x153c030 -> Node0x153c0a0;
	Node0x153c0a0 -> Node0x153c110;
	Node0x153c110 -> Node0x153c180;
	Node0x153c180 -> Node0x14d98b8;
	Node0x14d98b8 -> Node0x153c210;
	Node0x153c210 -> Node0x153c4b8;
	Node0x153c4b8 -> Node0x153c618;
	Node0x153c618 -> Node0x153c728;
	Node0x153c728 -> Node0x153c838;
	Node0x153c838 -> Node0x153c8f8;
edge [color=red]
	Node0x15392c8 -> Node0x15394e8;
	Node0x15394e8 -> Node0x1539918;
	Node0x1539348 -> Node0x15399f8;
	Node0x15399f8 -> Node0x1539af8;
	Node0x15393d8 -> Node0x1539bb8;
	Node0x1539bb8 -> Node0x1539c68;
	Node0x1539438 -> Node0x1539d28;
	Node0x1539d28 -> Node0x1539dd8;
	Node0x15392c8 -> Node0x15348a0;
	Node0x1539348 -> Node0x15348a0;
	Node0x15393d8 -> Node0x15348a0;
	Node0x1539438 -> Node0x15348a0;
	Node0x15392c8 -> Node0x1539fd8;
	Node0x1539348 -> Node0x153af48;
	Node0x15393d8 -> Node0x153b5b8;
	Node0x1539438 -> Node0x153b618;
	Node0x153b5b8 -> Node0x153b690;
	Node0x153af48 -> Node0x153b700;
	Node0x153b690 -> Node0x153b700;
	Node0x153b700 -> Node0x153b770;
	Node0x153b5b8 -> Node0x153b7e0;
	Node0x153af48 -> Node0x153b7e0;
	Node0x153b5b8 -> Node0x153b850;
	Node0x153af48 -> Node0x153b850;
	Node0x153af48 -> Node0x153b8c0;
	Node0x153b690 -> Node0x153b8c0;
	Node0x153b8c0 -> Node0x153b930;
	Node0x153b5b8 -> Node0x153b9a0;
	Node0x153af48 -> Node0x153b9a0;
	Node0x1539fd8 -> Node0x153ba10;
	Node0x153b618 -> Node0x153ba80;
	Node0x153ba10 -> Node0x153ba80;
	Node0x153b618 -> Node0x153baf0;
	Node0x1539fd8 -> Node0x153baf0;
	Node0x153ba80 -> Node0x153bb60;
	Node0x153bb60 -> Node0x153bbd0;
	Node0x153b7e0 -> Node0x153bc40;
	Node0x153af48 -> Node0x153bcb0;
	Node0x153bcb0 -> Node0x153bd20;
	Node0x153b5b8 -> Node0x153bd20;
	Node0x153bd20 -> Node0x153bd90;
	Node0x153b850 -> Node0x153bd90;
	Node0x153bd90 -> Node0x153be00;
	Node0x153b700 -> Node0x153be00;
	Node0x153be00 -> Node0x153be70;
	Node0x153b9a0 -> Node0x153be70;
	Node0x153be70 -> Node0x153bee0;
	Node0x153b618 -> Node0x153bee0;
	Node0x153bee0 -> Node0x153bf50;
	Node0x153b930 -> Node0x153bf50;
	Node0x153bf50 -> Node0x153bfc0;
	Node0x153ba80 -> Node0x153bfc0;
	Node0x153bfc0 -> Node0x153c030;
	Node0x153baf0 -> Node0x153c030;
	Node0x153c030 -> Node0x153c0a0;
	Node0x153bc40 -> Node0x153c0a0;
	Node0x153c0a0 -> Node0x153c110;
	Node0x153bbd0 -> Node0x153c110;
	Node0x153c110 -> Node0x153c180;
	Node0x153b770 -> Node0x153c180;
	Node0x153c180 -> Node0x14d98b8;
	Node0x14d98b8 -> Node0x153c210;
	Node0x1539d28 -> Node0x153c4b8;
	Node0x1539bb8 -> Node0x153c618;
	Node0x15399f8 -> Node0x153c728;
	Node0x15394e8 -> Node0x153c838;
}
