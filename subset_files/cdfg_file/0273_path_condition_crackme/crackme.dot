digraph "DFG for'crackme' function" {
	Node0x1537e80[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1537ef0[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x1537f60[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0x1537fd0[shape=record, label="  %8 = xor i32 %2, %1"];
	Node0x1538040[shape=record, label="  %9 = or i32 %2, %1"];
	Node0x15380b0[shape=record, label="  %10 = and i32 %5, %1"];
	Node0x1538150[shape=record, label="  %11 = shl i32 %10, 2"];
	Node0x15381c0[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x1538230[shape=record, label="  %13 = xor i32 %0, -1"];
	Node0x15382a0[shape=record, label="  %14 = or i32 %13, %3"];
	Node0x1538310[shape=record, label="  %15 = or i32 %3, %0"];
	Node0x15383b0[shape=record, label="  %16 = shl i32 %14, 1"];
	Node0x1538450[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x15384c0[shape=record, label="  %18 = shl i32 %8, 1"];
	Node0x1538530[shape=record, label="  %19 = add i32 %1, 2"];
	Node0x15385a0[shape=record, label="  %20 = sub i32 %19, %2"];
	Node0x1538610[shape=record, label="  %21 = add i32 %20, %9"];
	Node0x1538680[shape=record, label="  %22 = add i32 %21, %6"];
	Node0x15386f0[shape=record, label="  %23 = sub i32 %22, %12"];
	Node0x1538760[shape=record, label="  %24 = add i32 %23, %3"];
	Node0x15387d0[shape=record, label="  %25 = sub i32 %24, %11"];
	Node0x1538840[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x15388b0[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0x1538920[shape=record, label="  %28 = add i32 %27, %18"];
	Node0x1538990[shape=record, label="  %29 = add i32 %28, %17"];
	Node0x1538a00[shape=record, label="  %30 = icmp eq i32 %29, %7"];
	Node0x14d8268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1538ea0[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x1539100[shape=record, label="  ret void"];
	Node0x1537e80 -> Node0x1537ef0;
	Node0x1537ef0 -> Node0x1537f60;
	Node0x1537f60 -> Node0x1537fd0;
	Node0x1537fd0 -> Node0x1538040;
	Node0x1538040 -> Node0x15380b0;
	Node0x15380b0 -> Node0x1538150;
	Node0x1538150 -> Node0x15381c0;
	Node0x15381c0 -> Node0x1538230;
	Node0x1538230 -> Node0x15382a0;
	Node0x15382a0 -> Node0x1538310;
	Node0x1538310 -> Node0x15383b0;
	Node0x15383b0 -> Node0x1538450;
	Node0x1538450 -> Node0x15384c0;
	Node0x15384c0 -> Node0x1538530;
	Node0x1538530 -> Node0x15385a0;
	Node0x15385a0 -> Node0x1538610;
	Node0x1538610 -> Node0x1538680;
	Node0x1538680 -> Node0x15386f0;
	Node0x15386f0 -> Node0x1538760;
	Node0x1538760 -> Node0x15387d0;
	Node0x15387d0 -> Node0x1538840;
	Node0x1538840 -> Node0x15388b0;
	Node0x15388b0 -> Node0x1538920;
	Node0x1538920 -> Node0x1538990;
	Node0x1538990 -> Node0x1538a00;
	Node0x1538a00 -> Node0x14d8268;
	Node0x14d8268 -> Node0x1538ea0;
	Node0x1538ea0 -> Node0x1539100;
edge [color=red]
	Node0x1537e80 -> Node0x1537ef0;
	Node0x1537ef0 -> Node0x1537f60;
	Node0x1537e80 -> Node0x15380b0;
	Node0x15380b0 -> Node0x1538150;
	Node0x1538230 -> Node0x15382a0;
	Node0x15382a0 -> Node0x15383b0;
	Node0x15383b0 -> Node0x1538450;
	Node0x1537fd0 -> Node0x15384c0;
	Node0x1538530 -> Node0x15385a0;
	Node0x15385a0 -> Node0x1538610;
	Node0x1538040 -> Node0x1538610;
	Node0x1538610 -> Node0x1538680;
	Node0x1537ef0 -> Node0x1538680;
	Node0x1538680 -> Node0x15386f0;
	Node0x15381c0 -> Node0x15386f0;
	Node0x15386f0 -> Node0x1538760;
	Node0x1538760 -> Node0x15387d0;
	Node0x1538150 -> Node0x15387d0;
	Node0x15387d0 -> Node0x1538840;
	Node0x15382a0 -> Node0x1538840;
	Node0x1538840 -> Node0x15388b0;
	Node0x1538310 -> Node0x15388b0;
	Node0x15388b0 -> Node0x1538920;
	Node0x15384c0 -> Node0x1538920;
	Node0x1538920 -> Node0x1538990;
	Node0x1538450 -> Node0x1538990;
	Node0x1538990 -> Node0x1538a00;
	Node0x1537f60 -> Node0x1538a00;
	Node0x1538a00 -> Node0x14d8268;
	Node0x14d8268 -> Node0x1538ea0;
}
