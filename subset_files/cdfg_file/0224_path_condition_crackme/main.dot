digraph "DFG for'main' function" {
	Node0x1b36408[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b3cea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b3cf08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b3cf68[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1b3d3c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b3d4a8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1b3d5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b3d668[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1b3d718[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b3d978[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1b3da38[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b3e9a8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b3f018[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b3f110[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1b3f318[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b3f478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b3f588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b3f648[shape=record, label="  ret i32 0"];
	Node0x1b36408 -> Node0x1b3cea8;
	Node0x1b3cea8 -> Node0x1b3cf08;
	Node0x1b3cf08 -> Node0x1b3cf68;
	Node0x1b3cf68 -> Node0x1b3d3c8;
	Node0x1b3d3c8 -> Node0x1b3d4a8;
	Node0x1b3d4a8 -> Node0x1b3d5a8;
	Node0x1b3d5a8 -> Node0x1b3d668;
	Node0x1b3d668 -> Node0x1b3d718;
	Node0x1b3d718 -> Node0x1b3d978;
	Node0x1b3d978 -> Node0x1b3da38;
	Node0x1b3da38 -> Node0x1b3e9a8;
	Node0x1b3e9a8 -> Node0x1b3f018;
	Node0x1b3f018 -> Node0x1b3f110;
	Node0x1b3f110 -> Node0x1b3f318;
	Node0x1b3f318 -> Node0x1b3f478;
	Node0x1b3f478 -> Node0x1b3f588;
	Node0x1b3f588 -> Node0x1b3f648;
edge [color=red]
	Node0x1b36408 -> Node0x1b3cf68;
	Node0x1b3cf68 -> Node0x1b3d3c8;
	Node0x1b3cea8 -> Node0x1b3d4a8;
	Node0x1b3d4a8 -> Node0x1b3d5a8;
	Node0x1b3cf08 -> Node0x1b3d668;
	Node0x1b3d668 -> Node0x1b3d718;
	Node0x1b36408 -> Node0x1b3d978;
	Node0x1b3cea8 -> Node0x1b3d978;
	Node0x1b3cf08 -> Node0x1b3d978;
	Node0x1b36408 -> Node0x1b3da38;
	Node0x1b3cea8 -> Node0x1b3e9a8;
	Node0x1b3cf08 -> Node0x1b3f018;
	Node0x1b3da38 -> Node0x1b3f110;
	Node0x1b3e9a8 -> Node0x1b3f110;
	Node0x1b3f018 -> Node0x1b3f110;
	Node0x1b3d668 -> Node0x1b3f318;
	Node0x1b3d4a8 -> Node0x1b3f478;
	Node0x1b3cf68 -> Node0x1b3f588;
}
