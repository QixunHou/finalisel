digraph "DFG for'main' function" {
	Node0x56e378[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x56e3f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x56e488[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x56e4e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x56e968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x56ea48[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x56eb48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x56ec08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x56ecb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x56ef18[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x56efd8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x56f138[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x56f198[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x570ce0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x570ee8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x571048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x571158[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x571218[shape=record, label="  ret i32 0"];
	Node0x56e378 -> Node0x56e3f8;
	Node0x56e3f8 -> Node0x56e488;
	Node0x56e488 -> Node0x56e4e8;
	Node0x56e4e8 -> Node0x56e968;
	Node0x56e968 -> Node0x56ea48;
	Node0x56ea48 -> Node0x56eb48;
	Node0x56eb48 -> Node0x56ec08;
	Node0x56ec08 -> Node0x56ecb8;
	Node0x56ecb8 -> Node0x56ef18;
	Node0x56ef18 -> Node0x56efd8;
	Node0x56efd8 -> Node0x56f138;
	Node0x56f138 -> Node0x56f198;
	Node0x56f198 -> Node0x570ce0;
	Node0x570ce0 -> Node0x570ee8;
	Node0x570ee8 -> Node0x571048;
	Node0x571048 -> Node0x571158;
	Node0x571158 -> Node0x571218;
edge [color=red]
	Node0x56e378 -> Node0x56e4e8;
	Node0x56e4e8 -> Node0x56e968;
	Node0x56e3f8 -> Node0x56ea48;
	Node0x56ea48 -> Node0x56eb48;
	Node0x56e488 -> Node0x56ec08;
	Node0x56ec08 -> Node0x56ecb8;
	Node0x56e378 -> Node0x56ef18;
	Node0x56e3f8 -> Node0x56ef18;
	Node0x56e488 -> Node0x56ef18;
	Node0x56e378 -> Node0x56efd8;
	Node0x56e3f8 -> Node0x56f138;
	Node0x56e488 -> Node0x56f198;
	Node0x56efd8 -> Node0x570ce0;
	Node0x56f138 -> Node0x570ce0;
	Node0x56f198 -> Node0x570ce0;
	Node0x56ec08 -> Node0x570ee8;
	Node0x56ea48 -> Node0x571048;
	Node0x56e4e8 -> Node0x571158;
}
