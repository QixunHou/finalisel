; ModuleID = '../.././c_source_file/0910_path_condition_crackme.c'
source_filename = "../.././c_source_file/0910_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %2, %1
  %10 = and i32 %9, %8
  %11 = xor i32 %1, -1
  %12 = and i32 %11, %0
  %13 = xor i32 %12, -1
  %14 = xor i32 %13, %2
  %15 = shl i32 %14, 1
  %16 = add i32 %10, %15
  %17 = xor i32 %3, -1
  %18 = and i32 %17, %5
  %19 = and i32 %18, %4
  %20 = xor i32 %5, %3
  %21 = or i32 %20, %4
  %22 = xor i32 %21, -1
  %23 = or i32 %19, %22
  %24 = xor i32 %5, -1
  %25 = or i32 %24, %3
  %26 = or i32 %25, %4
  %27 = add i32 %16, %26
  %28 = sub i32 %27, %23
  %29 = xor i32 %2, -1
  %30 = and i32 %29, %8
  %31 = shl i32 %30, 1
  %32 = and i32 %29, %0
  %33 = xor i32 %32, -1
  %34 = and i32 %33, %11
  %35 = xor i32 %0, -1
  %36 = and i32 %2, %1
  %37 = and i32 %36, %35
  %38 = or i32 %2, %1
  %39 = and i32 %38, %0
  %40 = or i32 %37, %39
  %41 = or i32 %1, %0
  %42 = xor i32 %41, -1
  %43 = xor i32 %36, -1
  %44 = or i32 %2, %0
  %45 = xor i32 %1, %0
  %46 = and i32 %44, %45
  %47 = or i32 %29, %1
  %48 = xor i32 %47, -1
  %49 = or i32 %7, %48
  %50 = xor i32 %2, %0
  %51 = xor i32 %50, -1
  %52 = and i32 %2, %0
  %53 = xor i32 %52, -1
  %54 = xor i32 %45, -1
  %55 = and i32 %53, %54
  %56 = or i32 %29, %0
  %57 = and i32 %56, %45
  %58 = or i32 %52, %45
  %59 = xor i32 %38, -1
  %60 = or i32 %59, %35
  %61 = or i32 %9, %12
  %62 = shl i32 %61, 1
  %63 = and i32 %51, %54
  %64 = xor i32 %9, -1
  %65 = or i32 %64, %35
  %66 = shl i32 %65, 1
  %67 = xor i32 %52, %38
  %68 = or i32 %29, %42
  %69 = or i32 %50, %54
  %70 = or i32 %36, %35
  %71 = shl i32 %70, 1
  %72 = and i32 %9, %0
  %73 = or i32 %37, %72
  %74 = xor i32 %32, %43
  %75 = and i32 %29, %1
  %76 = xor i32 %75, -1
  %77 = and i32 %76, %0
  %78 = xor i32 %56, -1
  %79 = or i32 %7, %78
  %80 = shl i32 %79, 1
  %81 = xor i32 %39, 2147483647
  %82 = xor i32 %81, %37
  %83 = and i32 %53, %11
  %84 = or i32 %51, %54
  %85 = or i32 %12, %2
  %86 = and i32 %44, %11
  %87 = or i32 %12, %29
  %88 = or i32 %32, %48
  %89 = or i32 %36, %12
  %90 = shl i32 %89, 1
  %91 = and i32 %9, %13
  %92 = or i32 %47, %0
  %93 = xor i32 %42, %2
  %94 = xor i32 %12, %76
  %95 = or i32 %51, %1
  %96 = and i32 %56, %11
  %97 = shl i32 %96, 1
  %98 = shl i32 %52, 1
  %99 = xor i32 %56, %1
  %100 = or i32 %52, %1
  %101 = and i32 %11, %2
  %102 = and i32 %101, %35
  %103 = or i32 %11, %2
  %104 = and i32 %103, %0
  %105 = xor i32 %104, -1
  %106 = xor i32 %102, %105
  %107 = and i32 %33, %54
  %108 = add i32 %47, 1
  %109 = xor i32 %8, %2
  %110 = or i32 %32, %54
  %111 = and i32 %36, %0
  %112 = xor i32 %38, %0
  %113 = xor i32 %112, -1
  %114 = xor i32 %111, %113
  %115 = and i32 %50, %54
  %116 = add i32 %7, 1
  %117 = or i32 %38, %35
  %118 = and i32 %64, %13
  %119 = or i32 %76, %0
  %120 = and i32 %51, %11
  %121 = xor i32 %76, %0
  %122 = xor i32 %64, %0
  %123 = shl i32 %122, 1
  %124 = xor i32 %32, %1
  %125 = or i32 %48, %35
  %126 = or i32 %11, %0
  %127 = xor i32 %126, -1
  %128 = or i32 %50, %127
  %129 = shl i32 %128, 1
  %130 = xor i32 %44, -1
  %131 = or i32 %130, %11
  %132 = and i32 %45, %2
  %133 = xor i32 %127, %2
  %134 = xor i32 %41, %2
  %135 = and i32 %8, %2
  %136 = or i32 %51, %127
  %137 = or i32 %75, %35
  %138 = or i32 %45, %78
  %139 = or i32 %12, %64
  %140 = and i32 %50, %11
  %141 = xor i32 %52, %1
  %142 = or i32 %7, %29
  %143 = xor i32 %47, %0
  %144 = shl i32 %143, 1
  %145 = and i32 %43, %35
  %146 = and i32 %41, %2
  %147 = xor i32 %7, %2
  %148 = and i32 %45, %53
  %149 = or i32 %50, %45
  %150 = or i32 %7, %2
  %151 = or i32 %7, %130
  %152 = or i32 %45, %130
  %153 = or i32 %47, %35
  %154 = or i32 %64, %42
  %155 = or i32 %111, %112
  %156 = or i32 %64, %0
  %157 = and i32 %50, %41
  %158 = and i32 %50, %13
  %159 = xor i32 %126, %2
  %160 = xor i32 %53, %1
  %161 = shl i32 %0, 1
  %162 = xor i32 %33, %1
  %163 = or i32 %64, %127
  %164 = and i32 %54, %2
  %165 = and i32 %101, %0
  %166 = xor i32 %103, %0
  %167 = xor i32 %166, -1
  %168 = xor i32 %165, %167
  %169 = add i32 %12, 1
  %170 = or i32 %9, %0
  %171 = xor i32 %165, %170
  %172 = or i32 %32, %45
  %173 = or i32 %165, %166
  %174 = or i32 %52, %59
  %175 = xor i32 %170, -1
  %176 = or i32 %165, %175
  %177 = or i32 %9, %35
  %178 = and i32 %13, %2
  %179 = or i32 %52, %11
  %180 = or i32 %59, %0
  %181 = shl i32 %180, 1
  %182 = and i32 %41, %64
  %183 = and i32 %56, %54
  %184 = or i32 %78, %1
  %185 = and i32 %64, %0
  %186 = and i32 %76, %35
  %187 = xor i32 %177, -1
  %188 = or i32 %102, %187
  %189 = xor i32 %75, %0
  %190 = or i32 %75, %12
  %191 = or i32 %54, %2
  %192 = or i32 %36, %0
  %193 = or i32 %7, %51
  %194 = and i32 %29, %13
  %195 = or i32 %12, %51
  %196 = or i32 %7, %59
  %197 = and i32 %50, %126
  %198 = and i32 %33, %1
  %199 = and i32 %126, %29
  %200 = and i32 %41, %51
  %201 = shl i32 %200, 1
  %202 = xor i32 %43, %0
  %203 = xor i32 %9, %0
  %204 = xor i32 %203, -1
  %205 = or i32 %111, %204
  %206 = or i32 %45, %29
  %207 = and i32 %126, %2
  %208 = and i32 %9, %41
  %209 = and i32 %64, %8
  %210 = or i32 %52, %42
  %211 = shl i32 %210, 2
  %212 = or i32 %45, %2
  %213 = or i32 %76, %35
  %214 = or i32 %130, %54
  %215 = and i32 %56, %1
  %216 = and i32 %51, %13
  %217 = xor i32 %59, %0
  %218 = xor i32 %103, -1
  %219 = or i32 %218, %0
  %220 = xor i32 %165, %219
  %221 = and i32 %41, %29
  %222 = and i32 %47, %0
  %223 = shl i32 %54, 1
  %224 = xor i32 %44, %7
  %225 = or i32 %78, %54
  %226 = xor i32 %44, %1
  %227 = and i32 %50, %45
  %228 = or i32 %50, %1
  %229 = xor i32 %12, %2
  %230 = and i32 %53, %1
  %231 = or i32 %127, %2
  %232 = and i32 %29, %54
  %233 = and i32 %9, %126
  %234 = xor i32 %111, %203
  %235 = or i32 %38, %0
  %236 = shl i32 %235, 1
  %237 = or i32 %43, %35
  %238 = and i32 %47, %35
  %239 = xor i32 %56, %7
  %240 = xor i32 %47, %7
  %241 = or i32 %52, %127
  %242 = add i32 %126, 1
  %243 = or i32 %32, %11
  %244 = and i32 %45, %29
  %245 = xor i32 %102, %177
  %246 = xor i32 %52, %41
  %247 = or i32 %45, %51
  %248 = and i32 %64, %35
  %249 = or i32 %29, %127
  %250 = xor i32 %52, %76
  %251 = or i32 %50, %42
  %252 = xor i32 %38, 2147483647
  %253 = or i32 %252, %0
  %254 = xor i32 %253, %111
  %255 = shl i32 %254, 1
  %256 = or i32 %9, %7
  %257 = or i32 %32, %36
  %258 = shl i32 %257, 1
  %259 = and i32 %43, %0
  %260 = or i32 %50, %7
  %261 = or i32 %43, %0
  %262 = and i32 %9, %35
  %263 = or i32 %111, %262
  %264 = and i32 %51, %1
  %265 = shl i32 %264, 1
  %266 = and i32 %59, %35
  %267 = mul i32 %266, -31
  %268 = and i32 %75, %35
  %269 = mul i32 %268, -7
  %270 = and i32 %59, %0
  %271 = and i32 %75, %0
  %272 = and i32 %48, %35
  %273 = mul i32 %37, -15
  %274 = and i32 %48, %0
  %275 = mul i32 %274, -9
  %276 = and i32 %5, %3
  %277 = and i32 %276, %4
  %278 = xor i32 %20, %4
  %279 = xor i32 %278, -1
  %280 = or i32 %277, %279
  %281 = and i32 %17, %4
  %282 = xor i32 %281, -1
  %283 = and i32 %282, %5
  %284 = xor i32 %20, -1
  %285 = and i32 %284, %282
  %286 = xor i32 %4, -1
  %287 = or i32 %5, %3
  %288 = xor i32 %287, -1
  %289 = or i32 %288, %286
  %290 = and i32 %24, %3
  %291 = xor i32 %290, -1
  %292 = xor i32 %291, %4
  %293 = or i32 %287, %286
  %294 = and i32 %18, %286
  %295 = or i32 %17, %5
  %296 = and i32 %295, %4
  %297 = xor i32 %296, -1
  %298 = xor i32 %294, %297
  %299 = xor i32 %276, -1
  %300 = or i32 %299, %4
  %301 = xor i32 %25, -1
  %302 = xor i32 %301, %4
  %303 = or i32 %5, %4
  %304 = xor i32 %303, -1
  %305 = or i32 %304, %3
  %306 = or i32 %17, %4
  %307 = xor i32 %5, %4
  %308 = xor i32 %307, -1
  %309 = and i32 %306, %308
  %310 = or i32 %308, %17
  %311 = and i32 %4, %3
  %312 = or i32 %311, %5
  %313 = or i32 %301, %4
  %314 = and i32 %24, %4
  %315 = xor i32 %314, -1
  %316 = and i32 %315, %17
  %317 = shl i32 %316, 1
  %318 = xor i32 %314, %299
  %319 = and i32 %5, %4
  %320 = xor i32 %4, %3
  %321 = or i32 %319, %320
  %322 = or i32 %25, %286
  %323 = xor i32 %284, %4
  %324 = xor i32 %303, %311
  %325 = and i32 %306, %24
  %326 = shl i32 %325, 1
  %327 = and i32 %295, %286
  %328 = or i32 %19, %327
  %329 = or i32 %281, %284
  %330 = shl i32 %286, 1
  %331 = and i32 %284, %286
  %332 = xor i32 %281, %299
  %333 = xor i32 %311, -1
  %334 = and i32 %20, %333
  %335 = shl i32 %334, 1
  %336 = and i32 %291, %286
  %337 = and i32 %307, %333
  %338 = shl i32 %337, 1
  %339 = and i32 %307, %306
  %340 = or i32 %24, %4
  %341 = xor i32 %340, -1
  %342 = or i32 %341, %17
  %343 = and i32 %307, %3
  %344 = or i32 %314, %301
  %345 = or i32 %4, %3
  %346 = xor i32 %345, -1
  %347 = xor i32 %346, %5
  %348 = xor i32 %306, -1
  %349 = or i32 %284, %348
  %350 = and i32 %287, %286
  %351 = xor i32 %277, 2147483647
  %352 = xor i32 %351, %350
  %353 = xor i32 %304, %3
  %354 = or i32 %291, %4
  %355 = xor i32 %314, %3
  %356 = and i32 %333, %5
  %357 = or i32 %20, %281
  %358 = shl i32 %357, 1
  %359 = xor i32 %311, %5
  %360 = xor i32 %320, -1
  %361 = and i32 %340, %360
  %362 = and i32 %308, %333
  %363 = xor i32 %319, %287
  %364 = and i32 %24, %282
  %365 = shl i32 %276, 1
  %366 = xor i32 %303, %3
  %367 = or i32 %290, %281
  %368 = xor i32 %295, %4
  %369 = or i32 %19, %368
  %370 = and i32 %345, %284
  %371 = xor i32 %281, %5
  %372 = or i32 %276, %286
  %373 = xor i32 %287, %4
  %374 = or i32 %277, %373
  %375 = or i32 %311, %304
  %376 = and i32 %20, %4
  %377 = or i32 %319, %288
  %378 = xor i32 %319, -1
  %379 = xor i32 %378, %3
  %380 = or i32 %320, %308
  %381 = and i32 %345, %5
  %382 = and i32 %307, %320
  %383 = and i32 %20, %306
  %384 = or i32 %290, %4
  %385 = or i32 %314, %320
  %386 = xor i32 %288, %4
  %387 = shl i32 %386, 1
  %388 = shl i32 %284, 2
  %389 = xor i32 %333, %5
  %390 = or i32 %314, %276
  %391 = or i32 %281, %24
  %392 = shl i32 %391, 2
  %393 = or i32 %319, %290
  %394 = and i32 %287, %4
  %395 = and i32 %25, %4
  %396 = xor i32 %345, %5
  %397 = or i32 %276, %281
  %398 = and i32 %320, %5
  %399 = shl i32 %398, 1
  %400 = xor i32 %340, %311
  %401 = xor i32 %25, %311
  %402 = and i32 %284, %4
  %403 = or i32 %288, %4
  %404 = or i32 %311, %24
  %405 = xor i32 %287, %311
  %406 = or i32 %311, %284
  %407 = or i32 %307, %17
  %408 = and i32 %340, %17
  %409 = or i32 %20, %348
  %410 = shl i32 %409, 2
  %411 = shl i32 %345, 1
  %412 = add i32 %311, 1
  %413 = or i32 %287, %4
  %414 = or i32 %24, %348
  %415 = xor i32 %319, %345
  %416 = or i32 %348, %5
  %417 = shl i32 %308, 1
  %418 = xor i32 %25, %4
  %419 = and i32 %315, %360
  %420 = or i32 %319, %17
  %421 = and i32 %308, %17
  %422 = and i32 %24, %333
  %423 = and i32 %276, %286
  %424 = xor i32 %423, -1
  %425 = xor i32 %394, %424
  %426 = or i32 %19, %278
  %427 = shl i32 %426, 1
  %428 = and i32 %307, %17
  %429 = shl i32 %304, 1
  %430 = xor i32 %276, %4
  %431 = or i32 %284, %346
  %432 = or i32 %307, %281
  %433 = and i32 %291, %4
  %434 = and i32 %307, %345
  %435 = and i32 %340, %3
  %436 = or i32 %301, %286
  %437 = xor i32 %319, %3
  %438 = xor i32 %282, %5
  %439 = xor i32 %19, -1
  %440 = xor i32 %368, %439
  %441 = and i32 %378, %3
  %442 = or i32 %20, %346
  %443 = and i32 %378, %360
  %444 = shl i32 %443, 1
  %445 = and i32 %25, %286
  %446 = or i32 %319, %3
  %447 = xor i32 %341, %3
  %448 = and i32 %20, %282
  %449 = xor i32 %19, %21
  %450 = or i32 %277, %350
  %451 = shl i32 %450, 1
  %452 = and i32 %306, %284
  %453 = or i32 %320, %5
  %454 = or i32 %311, %308
  %455 = or i32 %20, %286
  %456 = xor i32 %455, -1
  %457 = or i32 %294, %456
  %458 = and i32 %24, %360
  %459 = and i32 %284, %333
  %460 = or i32 %311, %341
  %461 = xor i32 %281, %291
  %462 = or i32 %290, %286
  %463 = or i32 %346, %5
  %464 = or i32 %24, %346
  %465 = or i32 %281, %308
  %466 = or i32 %423, %376
  %467 = xor i32 %319, %291
  %468 = or i32 %304, %17
  %469 = or i32 %320, %304
  %470 = xor i32 %351, %373
  %471 = shl i32 %470, 1
  %472 = shl i32 %315, 1
  %473 = and i32 %315, %3
  %474 = or i32 %281, %5
  %475 = and i32 %308, %282
  %476 = or i32 %319, %346
  %477 = add i32 %306, 1
  %478 = and i32 %345, %24
  %479 = and i32 %307, %282
  %480 = shl i32 %479, 1
  %481 = or i32 %311, %301
  %482 = or i32 %284, %286
  %483 = and i32 %20, %345
  %484 = xor i32 %376, %424
  %485 = or i32 %314, %3
  %486 = and i32 %308, %3
  %487 = shl i32 %486, 1
  %488 = xor i32 %306, %5
  %489 = or i32 %308, %360
  %490 = or i32 %276, %4
  %491 = or i32 %319, %360
  %492 = xor i32 %327, %439
  %493 = xor i32 %294, %455
  %494 = and i32 %340, %320
  %495 = or i32 %307, %360
  %496 = and i32 %308, %360
  %497 = and i32 %299, %286
  %498 = or i32 %299, %286
  %499 = and i32 %303, %3
  %500 = or i32 %423, %394
  %501 = or i32 %20, %311
  %502 = xor i32 %319, %306
  %503 = shl i32 %502, 1
  %504 = and i32 %303, %320
  %505 = xor i32 %348, %5
  %506 = and i32 %345, %308
  %507 = xor i32 %314, %25
  %508 = or i32 %341, %360
  %509 = or i32 %24, %360
  %510 = or i32 %308, %346
  %511 = xor i32 %277, %278
  %512 = or i32 %307, %348
  %513 = xor i32 %290, %4
  %514 = or i32 %308, %3
  %515 = and i32 %320, %315
  %516 = or i32 %320, %341
  %517 = or i32 %314, %17
  %518 = and i32 %20, %286
  %519 = or i32 %307, %320
  %520 = shl i32 %340, 1
  %521 = and i32 %299, %4
  %522 = or i32 %308, %348
  %523 = shl i32 %522, 1
  %524 = xor i32 %315, %3
  %525 = shl i32 %524, 1
  %526 = or i32 %304, %360
  %527 = xor i32 %518, -1
  %528 = xor i32 %277, %527
  %529 = and i32 %378, %17
  %530 = or i32 %360, %5
  %531 = or i32 %291, %286
  %532 = or i32 %307, %3
  %533 = shl i32 %532, 2
  %534 = or i32 %341, %3
  %535 = or i32 %294, %296
  %536 = xor i32 %340, %3
  %537 = and i32 %306, %5
  %538 = xor i32 %19, %279
  %539 = and i32 %320, %378
  %540 = or i32 %307, %346
  %541 = and i32 %320, %308
  %542 = shl i32 %541, 1
  %543 = or i32 %284, %4
  %544 = xor i32 %299, %4
  %545 = or i32 %311, %288
  %546 = shl i32 %319, 1
  %547 = or i32 %314, %360
  %548 = or i32 %319, %348
  %549 = shl i32 %548, 1
  %550 = and i32 %303, %17
  %551 = and i32 %288, %286
  %552 = mul i32 %551, 12
  %553 = and i32 %290, %286
  %554 = mul i32 %553, 30
  %555 = and i32 %288, %4
  %556 = and i32 %290, %4
  %557 = and i32 %301, %286
  %558 = shl i32 %423, 4
  %559 = and i32 %301, %4
  %560 = mul i32 %277, 24
  %561 = add i32 %17, %35
  %562 = add i32 %561, %229
  %563 = add i32 %562, %47
  %564 = add i32 %563, %199
  %565 = add i32 %564, %44
  %566 = add i32 %565, %259
  %567 = add i32 %566, %248
  %568 = add i32 %567, %227
  %569 = add i32 %568, %225
  %570 = add i32 %569, %215
  %571 = add i32 %570, %192
  %572 = add i32 %571, %182
  %573 = add i32 %572, %163
  %574 = add i32 %573, %152
  %575 = add i32 %574, %141
  %576 = add i32 %575, %136
  %577 = add i32 %576, %110
  %578 = add i32 %577, %107
  %579 = add i32 %578, %83
  %580 = add i32 %579, %74
  %581 = add i32 %580, %320
  %582 = add i32 %581, %311
  %583 = add i32 %582, %171
  %584 = add i32 %583, %378
  %585 = add i32 %584, %20
  %586 = add i32 %585, %290
  %587 = add i32 %586, %82
  %588 = add i32 %587, %545
  %589 = add i32 %588, %540
  %590 = add i32 %589, %512
  %591 = add i32 %590, %508
  %592 = add i32 %591, %504
  %593 = add i32 %592, %278
  %594 = add i32 %593, %432
  %595 = add i32 %594, %406
  %596 = add i32 %595, %403
  %597 = add i32 %596, %400
  %598 = add i32 %597, %385
  %599 = add i32 %598, %379
  %600 = add i32 %599, %376
  %601 = add i32 %600, %339
  %602 = add i32 %601, %369
  %603 = add i32 %602, %352
  %604 = shl i32 %603, 1
  %605 = add i32 %226, %272
  %606 = sub i32 %605, %115
  %607 = sub i32 %606, %91
  %608 = sub i32 %607, %86
  %609 = sub i32 %608, %57
  %610 = add i32 %609, %364
  %611 = add i32 %610, %534
  %612 = sub i32 %611, %397
  %613 = sub i32 %612, %280
  %614 = mul i32 %613, 3
  %615 = add i32 %193, %1
  %616 = add i32 %615, %517
  %617 = sub i32 %616, %547
  %618 = sub i32 %617, %495
  %619 = sub i32 %618, %467
  %620 = sub i32 %619, %435
  %621 = mul i32 %620, 5
  %622 = add i32 %557, %555
  %623 = mul i32 %622, 11
  %624 = sub i32 %559, %111
  %625 = mul i32 %624, 14
  %626 = add i32 %271, %270
  %627 = mul i32 %626, -13
  %628 = add i32 %146, -1
  %629 = add i32 %628, %93
  %630 = add i32 %629, %198
  %631 = add i32 %630, %162
  %632 = add i32 %631, %530
  %633 = add i32 %632, %489
  %634 = add i32 %633, %556
  %635 = add i32 %634, %353
  %636 = shl i32 %635, 2
  %637 = sub i32 -3, %161
  %638 = add i32 %637, %116
  %639 = add i32 %638, %169
  %640 = add i32 %639, %242
  %641 = add i32 %640, %12
  %642 = sub i32 %641, %9
  %643 = sub i32 %642, %36
  %644 = add i32 %643, %68
  %645 = add i32 %644, %56
  %646 = sub i32 %645, %36
  %647 = sub i32 %646, %85
  %648 = add i32 %647, %87
  %649 = add i32 %648, %108
  %650 = add i32 %649, %109
  %651 = add i32 %650, %64
  %652 = sub i32 %651, %132
  %653 = sub i32 %652, %133
  %654 = sub i32 %653, %134
  %655 = add i32 %654, %135
  %656 = sub i32 %655, %142
  %657 = add i32 %656, %147
  %658 = sub i32 %657, %150
  %659 = sub i32 %658, %38
  %660 = add i32 %659, %159
  %661 = add i32 %660, %164
  %662 = sub i32 %661, %178
  %663 = add i32 %662, %191
  %664 = sub i32 %663, %194
  %665 = add i32 %664, %206
  %666 = sub i32 %665, %207
  %667 = add i32 %666, %130
  %668 = add i32 %667, %212
  %669 = sub i32 %668, %221
  %670 = sub i32 %669, %223
  %671 = sub i32 %670, %231
  %672 = add i32 %671, %232
  %673 = sub i32 %672, %244
  %674 = add i32 %673, %249
  %675 = add i32 %674, %3
  %676 = add i32 %675, %31
  %677 = add i32 %676, %34
  %678 = add i32 %677, %46
  %679 = add i32 %678, %49
  %680 = sub i32 %679, %55
  %681 = sub i32 %680, %58
  %682 = add i32 %681, %60
  %683 = add i32 %682, %63
  %684 = add i32 %683, %67
  %685 = add i32 %684, %69
  %686 = add i32 %685, %77
  %687 = add i32 %686, %84
  %688 = add i32 %687, %88
  %689 = sub i32 %688, %92
  %690 = sub i32 %689, %94
  %691 = sub i32 %690, %95
  %692 = sub i32 %691, %98
  %693 = sub i32 %692, %99
  %694 = add i32 %693, %100
  %695 = add i32 %694, %117
  %696 = sub i32 %695, %118
  %697 = add i32 %696, %119
  %698 = add i32 %697, %120
  %699 = sub i32 %698, %121
  %700 = add i32 %699, %124
  %701 = sub i32 %700, %125
  %702 = add i32 %701, %131
  %703 = sub i32 %702, %137
  %704 = add i32 %703, %138
  %705 = add i32 %704, %139
  %706 = add i32 %705, %140
  %707 = sub i32 %706, %145
  %708 = sub i32 %707, %148
  %709 = sub i32 %708, %149
  %710 = add i32 %709, %39
  %711 = add i32 %710, %72
  %712 = sub i32 %711, %151
  %713 = sub i32 %712, %153
  %714 = add i32 %713, %154
  %715 = sub i32 %714, %156
  %716 = sub i32 %715, %157
  %717 = sub i32 %716, %158
  %718 = sub i32 %717, %160
  %719 = sub i32 %718, %172
  %720 = add i32 %719, %174
  %721 = add i32 %720, %177
  %722 = add i32 %721, %179
  %723 = add i32 %722, %183
  %724 = sub i32 %723, %184
  %725 = sub i32 %724, %185
  %726 = sub i32 %725, %186
  %727 = add i32 %726, %189
  %728 = sub i32 %727, %190
  %729 = sub i32 %728, %195
  %730 = sub i32 %729, %196
  %731 = add i32 %730, %197
  %732 = sub i32 %731, %202
  %733 = add i32 %732, %208
  %734 = sub i32 %733, %209
  %735 = add i32 %734, %213
  %736 = add i32 %735, %214
  %737 = add i32 %736, %216
  %738 = sub i32 %737, %217
  %739 = add i32 %738, %222
  %740 = sub i32 %739, %224
  %741 = sub i32 %740, %228
  %742 = sub i32 %741, %230
  %743 = sub i32 %742, %233
  %744 = add i32 %743, %237
  %745 = sub i32 %744, %238
  %746 = sub i32 %745, %239
  %747 = sub i32 %746, %240
  %748 = sub i32 %747, %241
  %749 = add i32 %748, %243
  %750 = add i32 %749, %246
  %751 = sub i32 %750, %247
  %752 = sub i32 %751, %112
  %753 = sub i32 %752, %250
  %754 = add i32 %753, %251
  %755 = sub i32 %754, %203
  %756 = sub i32 %755, %256
  %757 = sub i32 %756, %260
  %758 = add i32 %757, %261
  %759 = sub i32 %758, %4
  %760 = sub i32 %759, %40
  %761 = sub i32 %760, %62
  %762 = sub i32 %761, %66
  %763 = sub i32 %762, %71
  %764 = sub i32 %763, %73
  %765 = sub i32 %764, %80
  %766 = sub i32 %765, %90
  %767 = sub i32 %766, %97
  %768 = add i32 %767, %106
  %769 = sub i32 %768, %114
  %770 = sub i32 %769, %123
  %771 = sub i32 %770, %129
  %772 = sub i32 %771, %144
  %773 = sub i32 %772, %155
  %774 = sub i32 %773, %168
  %775 = add i32 %774, %173
  %776 = add i32 %775, %176
  %777 = sub i32 %776, %181
  %778 = sub i32 %777, %188
  %779 = sub i32 %778, %201
  %780 = sub i32 %779, %205
  %781 = sub i32 %780, %211
  %782 = add i32 %781, %220
  %783 = sub i32 %782, %234
  %784 = sub i32 %783, %236
  %785 = add i32 %784, %245
  %786 = sub i32 %785, %258
  %787 = sub i32 %786, %263
  %788 = sub i32 %787, %265
  %789 = add i32 %788, %267
  %790 = add i32 %789, %269
  %791 = add i32 %790, %273
  %792 = add i32 %791, %275
  %793 = sub i32 %792, %330
  %794 = add i32 %793, %24
  %795 = add i32 %794, %306
  %796 = add i32 %795, %412
  %797 = sub i32 %796, %5
  %798 = add i32 %797, %346
  %799 = add i32 %798, %477
  %800 = add i32 %799, %360
  %801 = add i32 %800, %283
  %802 = sub i32 %801, %312
  %803 = sub i32 %802, %287
  %804 = sub i32 %803, %347
  %805 = add i32 %804, %341
  %806 = sub i32 %805, %356
  %807 = sub i32 %806, %359
  %808 = sub i32 %807, %25
  %809 = sub i32 %808, %371
  %810 = add i32 %809, %314
  %811 = add i32 %810, %301
  %812 = add i32 %811, %291
  %813 = sub i32 %812, %381
  %814 = sub i32 %813, %389
  %815 = sub i32 %814, %303
  %816 = sub i32 %815, %396
  %817 = sub i32 %816, %404
  %818 = sub i32 %817, %411
  %819 = sub i32 %818, %414
  %820 = add i32 %819, %416
  %821 = add i32 %820, %422
  %822 = sub i32 %821, %438
  %823 = sub i32 %822, %453
  %824 = sub i32 %823, %458
  %825 = add i32 %824, %463
  %826 = sub i32 %825, %464
  %827 = add i32 %826, %474
  %828 = add i32 %827, %307
  %829 = add i32 %828, %478
  %830 = add i32 %829, %299
  %831 = sub i32 %830, %488
  %832 = sub i32 %831, %505
  %833 = sub i32 %832, %509
  %834 = add i32 %833, %288
  %835 = add i32 %834, %537
  %836 = add i32 %835, %627
  %837 = sub i32 %836, %255
  %838 = add i32 %837, %285
  %839 = sub i32 %838, %289
  %840 = add i32 %839, %292
  %841 = add i32 %840, %293
  %842 = add i32 %841, %300
  %843 = add i32 %842, %302
  %844 = sub i32 %843, %305
  %845 = sub i32 %844, %309
  %846 = sub i32 %845, %310
  %847 = add i32 %846, %313
  %848 = sub i32 %847, %318
  %849 = sub i32 %848, %321
  %850 = sub i32 %849, %322
  %851 = add i32 %850, %323
  %852 = add i32 %851, %324
  %853 = sub i32 %852, %326
  %854 = add i32 %853, %329
  %855 = add i32 %854, %331
  %856 = sub i32 %855, %332
  %857 = add i32 %856, %336
  %858 = sub i32 %857, %342
  %859 = add i32 %858, %343
  %860 = add i32 %859, %344
  %861 = sub i32 %860, %349
  %862 = sub i32 %861, %354
  %863 = add i32 %862, %355
  %864 = sub i32 %863, %361
  %865 = add i32 %864, %362
  %866 = add i32 %865, %363
  %867 = sub i32 %866, %365
  %868 = add i32 %867, %366
  %869 = sub i32 %868, %367
  %870 = add i32 %869, %370
  %871 = add i32 %870, %372
  %872 = sub i32 %871, %373
  %873 = add i32 %872, %375
  %874 = sub i32 %873, %377
  %875 = add i32 %874, %380
  %876 = add i32 %875, %382
  %877 = sub i32 %876, %383
  %878 = sub i32 %877, %384
  %879 = sub i32 %878, %388
  %880 = add i32 %879, %390
  %881 = sub i32 %880, %392
  %882 = sub i32 %881, %393
  %883 = add i32 %882, %394
  %884 = sub i32 %883, %395
  %885 = sub i32 %884, %399
  %886 = sub i32 %885, %401
  %887 = sub i32 %886, %402
  %888 = sub i32 %887, %405
  %889 = sub i32 %888, %407
  %890 = add i32 %889, %408
  %891 = add i32 %890, %413
  %892 = sub i32 %891, %415
  %893 = sub i32 %892, %417
  %894 = sub i32 %893, %418
  %895 = sub i32 %894, %419
  %896 = add i32 %895, %420
  %897 = sub i32 %896, %421
  %898 = sub i32 %897, %428
  %899 = sub i32 %898, %429
  %900 = sub i32 %899, %430
  %901 = sub i32 %900, %431
  %902 = sub i32 %901, %433
  %903 = sub i32 %902, %434
  %904 = sub i32 %903, %436
  %905 = sub i32 %904, %437
  %906 = sub i32 %905, %441
  %907 = sub i32 %906, %442
  %908 = sub i32 %907, %445
  %909 = add i32 %908, %446
  %910 = add i32 %909, %447
  %911 = sub i32 %910, %448
  %912 = add i32 %911, %452
  %913 = sub i32 %912, %454
  %914 = sub i32 %913, %459
  %915 = sub i32 %914, %460
  %916 = add i32 %915, %461
  %917 = add i32 %916, %462
  %918 = add i32 %917, %465
  %919 = add i32 %918, %468
  %920 = add i32 %919, %469
  %921 = sub i32 %920, %472
  %922 = add i32 %921, %473
  %923 = sub i32 %922, %475
  %924 = sub i32 %923, %476
  %925 = add i32 %924, %481
  %926 = add i32 %925, %482
  %927 = sub i32 %926, %483
  %928 = add i32 %927, %485
  %929 = add i32 %928, %490
  %930 = sub i32 %929, %491
  %931 = add i32 %930, %455
  %932 = add i32 %931, %494
  %933 = add i32 %932, %496
  %934 = sub i32 %933, %497
  %935 = sub i32 %934, %498
  %936 = add i32 %935, %499
  %937 = sub i32 %936, %501
  %938 = add i32 %937, %506
  %939 = sub i32 %938, %507
  %940 = add i32 %939, %510
  %941 = add i32 %940, %513
  %942 = add i32 %941, %514
  %943 = sub i32 %942, %515
  %944 = add i32 %943, %516
  %945 = add i32 %944, %518
  %946 = add i32 %945, %519
  %947 = sub i32 %946, %520
  %948 = sub i32 %947, %521
  %949 = sub i32 %948, %526
  %950 = sub i32 %949, %529
  %951 = add i32 %950, %531
  %952 = add i32 %951, %536
  %953 = sub i32 %952, %539
  %954 = add i32 %953, %543
  %955 = add i32 %954, %544
  %956 = sub i32 %955, %546
  %957 = sub i32 %956, %21
  %958 = add i32 %957, %550
  %959 = add i32 %958, %298
  %960 = sub i32 %959, %317
  %961 = add i32 %960, %328
  %962 = sub i32 %961, %335
  %963 = sub i32 %962, %338
  %964 = sub i32 %963, %358
  %965 = sub i32 %964, %374
  %966 = sub i32 %965, %387
  %967 = sub i32 %966, %410
  %968 = add i32 %967, %425
  %969 = add i32 %968, %440
  %970 = sub i32 %969, %444
  %971 = sub i32 %970, %449
  %972 = sub i32 %971, %457
  %973 = add i32 %972, %466
  %974 = sub i32 %973, %480
  %975 = sub i32 %974, %484
  %976 = sub i32 %975, %487
  %977 = add i32 %976, %492
  %978 = sub i32 %977, %493
  %979 = sub i32 %978, %500
  %980 = sub i32 %979, %503
  %981 = sub i32 %980, %511
  %982 = sub i32 %981, %523
  %983 = sub i32 %982, %525
  %984 = sub i32 %983, %528
  %985 = sub i32 %984, %533
  %986 = sub i32 %985, %535
  %987 = add i32 %986, %538
  %988 = sub i32 %987, %542
  %989 = sub i32 %988, %549
  %990 = add i32 %989, %552
  %991 = add i32 %990, %554
  %992 = add i32 %991, %558
  %993 = add i32 %992, %560
  %994 = sub i32 %993, %427
  %995 = sub i32 %994, %451
  %996 = add i32 %995, %623
  %997 = add i32 %996, %625
  %998 = sub i32 %997, %471
  %999 = add i32 %998, %621
  %1000 = add i32 %999, %636
  %1001 = add i32 %1000, %614
  %1002 = add i32 %1001, %604
  %1003 = icmp eq i32 %28, %1002
  %1004 = select i1 %1003, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1005 = tail call i32 @puts(i8* nonnull dereferenceable(1) %1004)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
