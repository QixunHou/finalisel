digraph "DFG for'main' function" {
	Node0x11f18e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11f1968[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11f19f8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x11f1a58[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x11f1ed8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11f1fb8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x11f20b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11f2178[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x11f2228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11f2488[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x11f2548[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11f26a8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11f2708[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x11f5910[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x11f5b18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11f5c78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11f5d88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11f5e48[shape=record, label="  ret i32 0"];
	Node0x11f18e8 -> Node0x11f1968;
	Node0x11f1968 -> Node0x11f19f8;
	Node0x11f19f8 -> Node0x11f1a58;
	Node0x11f1a58 -> Node0x11f1ed8;
	Node0x11f1ed8 -> Node0x11f1fb8;
	Node0x11f1fb8 -> Node0x11f20b8;
	Node0x11f20b8 -> Node0x11f2178;
	Node0x11f2178 -> Node0x11f2228;
	Node0x11f2228 -> Node0x11f2488;
	Node0x11f2488 -> Node0x11f2548;
	Node0x11f2548 -> Node0x11f26a8;
	Node0x11f26a8 -> Node0x11f2708;
	Node0x11f2708 -> Node0x11f5910;
	Node0x11f5910 -> Node0x11f5b18;
	Node0x11f5b18 -> Node0x11f5c78;
	Node0x11f5c78 -> Node0x11f5d88;
	Node0x11f5d88 -> Node0x11f5e48;
edge [color=red]
	Node0x11f18e8 -> Node0x11f1a58;
	Node0x11f1a58 -> Node0x11f1ed8;
	Node0x11f1968 -> Node0x11f1fb8;
	Node0x11f1fb8 -> Node0x11f20b8;
	Node0x11f19f8 -> Node0x11f2178;
	Node0x11f2178 -> Node0x11f2228;
	Node0x11f18e8 -> Node0x11f2488;
	Node0x11f1968 -> Node0x11f2488;
	Node0x11f19f8 -> Node0x11f2488;
	Node0x11f18e8 -> Node0x11f2548;
	Node0x11f1968 -> Node0x11f26a8;
	Node0x11f19f8 -> Node0x11f2708;
	Node0x11f2548 -> Node0x11f5910;
	Node0x11f26a8 -> Node0x11f5910;
	Node0x11f2708 -> Node0x11f5910;
	Node0x11f2178 -> Node0x11f5b18;
	Node0x11f1fb8 -> Node0x11f5c78;
	Node0x11f1a58 -> Node0x11f5d88;
}
