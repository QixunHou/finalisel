digraph "DFG for'main' function" {
	Node0x134d218[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x134d298[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x134d328[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x134d388[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x134d808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x134d8e8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x134d9e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x134daa8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x134db58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x134ddb8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x134de78[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x134ede8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x134f458[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x134f550[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x134f758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x134f8b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x134f9c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x134fa88[shape=record, label="  ret i32 0"];
	Node0x134d218 -> Node0x134d298;
	Node0x134d298 -> Node0x134d328;
	Node0x134d328 -> Node0x134d388;
	Node0x134d388 -> Node0x134d808;
	Node0x134d808 -> Node0x134d8e8;
	Node0x134d8e8 -> Node0x134d9e8;
	Node0x134d9e8 -> Node0x134daa8;
	Node0x134daa8 -> Node0x134db58;
	Node0x134db58 -> Node0x134ddb8;
	Node0x134ddb8 -> Node0x134de78;
	Node0x134de78 -> Node0x134ede8;
	Node0x134ede8 -> Node0x134f458;
	Node0x134f458 -> Node0x134f550;
	Node0x134f550 -> Node0x134f758;
	Node0x134f758 -> Node0x134f8b8;
	Node0x134f8b8 -> Node0x134f9c8;
	Node0x134f9c8 -> Node0x134fa88;
edge [color=red]
	Node0x134d218 -> Node0x134d388;
	Node0x134d388 -> Node0x134d808;
	Node0x134d298 -> Node0x134d8e8;
	Node0x134d8e8 -> Node0x134d9e8;
	Node0x134d328 -> Node0x134daa8;
	Node0x134daa8 -> Node0x134db58;
	Node0x134d218 -> Node0x134ddb8;
	Node0x134d298 -> Node0x134ddb8;
	Node0x134d328 -> Node0x134ddb8;
	Node0x134d218 -> Node0x134de78;
	Node0x134d298 -> Node0x134ede8;
	Node0x134d328 -> Node0x134f458;
	Node0x134de78 -> Node0x134f550;
	Node0x134ede8 -> Node0x134f550;
	Node0x134f458 -> Node0x134f550;
	Node0x134daa8 -> Node0x134f758;
	Node0x134d8e8 -> Node0x134f8b8;
	Node0x134d388 -> Node0x134f9c8;
}
