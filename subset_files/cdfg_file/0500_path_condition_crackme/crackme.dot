digraph "DFG for'crackme' function" {
	Node0x1c31b60[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x1c31bd0[shape=record, label="  %6 = and i32 %2, %1"];
	Node0x1c32250[shape=record, label="  %7 = add i32 %0, 1"];
	Node0x1c322c0[shape=record, label="  %8 = sub i32 %7, %5"];
	Node0x1c32330[shape=record, label="  %9 = add i32 %8, %6"];
	Node0x1c323d0[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x1c32440[shape=record, label="  %11 = or i32 %10, %1"];
	Node0x1c324b0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1c32520[shape=record, label="  %13 = shl i32 %1, 1"];
	Node0x1c32590[shape=record, label="  %14 = or i32 %13, 1"];
	Node0x1c32600[shape=record, label="  %15 = xor i32 %2, %1"];
	Node0x1c32670[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1c32710[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1c32780[shape=record, label="  %18 = shl i32 %5, 1"];
	Node0x1c327f0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x1c32860[shape=record, label="  %20 = xor i32 %12, -2"];
	Node0x1c328d0[shape=record, label="  %21 = and i32 %10, %1"];
	Node0x1c32970[shape=record, label="  %22 = shl i32 %21, 2"];
	Node0x1c329e0[shape=record, label="  %23 = shl i32 %6, 2"];
	Node0x1c32a50[shape=record, label="  %24 = xor i32 %0, -1"];
	Node0x1c32ac0[shape=record, label="  %25 = xor i32 %3, %0"];
	Node0x1c32b30[shape=record, label="  %26 = or i32 %24, %3"];
	Node0x1c32ba0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x1c32c10[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x1c32c80[shape=record, label="  %29 = and i32 %24, %3"];
	Node0x1c32cf0[shape=record, label="  %30 = shl i32 %2, 1"];
	Node0x1c32d90[shape=record, label="  %31 = sub i32 -4, %30"];
	Node0x1c32e00[shape=record, label="  %32 = add i32 %7, %1"];
	Node0x1c33080[shape=record, label="  %33 = add i32 %32, %2"];
	Node0x1c330f0[shape=record, label="  %34 = add i32 %33, %14"];
	Node0x1c33160[shape=record, label="  %35 = sub i32 %34, %12"];
	Node0x1c331d0[shape=record, label="  %36 = sub i32 %35, %22"];
	Node0x1c33240[shape=record, label="  %37 = sub i32 %36, %23"];
	Node0x1c332b0[shape=record, label="  %38 = add i32 %37, %25"];
	Node0x1c33320[shape=record, label="  %39 = sub i32 %38, %26"];
	Node0x1c33390[shape=record, label="  %40 = sub i32 %39, %29"];
	Node0x1c33400[shape=record, label="  %41 = add i32 %40, %31"];
	Node0x1c33470[shape=record, label="  %42 = add i32 %41, %17"];
	Node0x1c334e0[shape=record, label="  %43 = sub i32 %42, %19"];
	Node0x1c33550[shape=record, label="  %44 = sub i32 %43, %20"];
	Node0x1c335c0[shape=record, label="  %45 = sub i32 %44, %28"];
	Node0x1c33630[shape=record, label="  %46 = icmp eq i32 %9, %45"];
	Node0x1bd2268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c33ad0[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0x1c33b20[shape=record, label="  ret void"];
	Node0x1c31b60 -> Node0x1c31bd0;
	Node0x1c31bd0 -> Node0x1c32250;
	Node0x1c32250 -> Node0x1c322c0;
	Node0x1c322c0 -> Node0x1c32330;
	Node0x1c32330 -> Node0x1c323d0;
	Node0x1c323d0 -> Node0x1c32440;
	Node0x1c32440 -> Node0x1c324b0;
	Node0x1c324b0 -> Node0x1c32520;
	Node0x1c32520 -> Node0x1c32590;
	Node0x1c32590 -> Node0x1c32600;
	Node0x1c32600 -> Node0x1c32670;
	Node0x1c32670 -> Node0x1c32710;
	Node0x1c32710 -> Node0x1c32780;
	Node0x1c32780 -> Node0x1c327f0;
	Node0x1c327f0 -> Node0x1c32860;
	Node0x1c32860 -> Node0x1c328d0;
	Node0x1c328d0 -> Node0x1c32970;
	Node0x1c32970 -> Node0x1c329e0;
	Node0x1c329e0 -> Node0x1c32a50;
	Node0x1c32a50 -> Node0x1c32ac0;
	Node0x1c32ac0 -> Node0x1c32b30;
	Node0x1c32b30 -> Node0x1c32ba0;
	Node0x1c32ba0 -> Node0x1c32c10;
	Node0x1c32c10 -> Node0x1c32c80;
	Node0x1c32c80 -> Node0x1c32cf0;
	Node0x1c32cf0 -> Node0x1c32d90;
	Node0x1c32d90 -> Node0x1c32e00;
	Node0x1c32e00 -> Node0x1c33080;
	Node0x1c33080 -> Node0x1c330f0;
	Node0x1c330f0 -> Node0x1c33160;
	Node0x1c33160 -> Node0x1c331d0;
	Node0x1c331d0 -> Node0x1c33240;
	Node0x1c33240 -> Node0x1c332b0;
	Node0x1c332b0 -> Node0x1c33320;
	Node0x1c33320 -> Node0x1c33390;
	Node0x1c33390 -> Node0x1c33400;
	Node0x1c33400 -> Node0x1c33470;
	Node0x1c33470 -> Node0x1c334e0;
	Node0x1c334e0 -> Node0x1c33550;
	Node0x1c33550 -> Node0x1c335c0;
	Node0x1c335c0 -> Node0x1c33630;
	Node0x1c33630 -> Node0x1bd2268;
	Node0x1bd2268 -> Node0x1c33ad0;
	Node0x1c33ad0 -> Node0x1c33b20;
edge [color=red]
	Node0x1c32250 -> Node0x1c322c0;
	Node0x1c31b60 -> Node0x1c322c0;
	Node0x1c322c0 -> Node0x1c32330;
	Node0x1c31bd0 -> Node0x1c32330;
	Node0x1c323d0 -> Node0x1c32440;
	Node0x1c32440 -> Node0x1c324b0;
	Node0x1c32520 -> Node0x1c32590;
	Node0x1c32600 -> Node0x1c32670;
	Node0x1c32670 -> Node0x1c32710;
	Node0x1c31b60 -> Node0x1c32780;
	Node0x1c32780 -> Node0x1c327f0;
	Node0x1c324b0 -> Node0x1c32860;
	Node0x1c323d0 -> Node0x1c328d0;
	Node0x1c328d0 -> Node0x1c32970;
	Node0x1c31bd0 -> Node0x1c329e0;
	Node0x1c32a50 -> Node0x1c32b30;
	Node0x1c32b30 -> Node0x1c32ba0;
	Node0x1c32ba0 -> Node0x1c32c10;
	Node0x1c32a50 -> Node0x1c32c80;
	Node0x1c32cf0 -> Node0x1c32d90;
	Node0x1c32250 -> Node0x1c32e00;
	Node0x1c32e00 -> Node0x1c33080;
	Node0x1c33080 -> Node0x1c330f0;
	Node0x1c32590 -> Node0x1c330f0;
	Node0x1c330f0 -> Node0x1c33160;
	Node0x1c324b0 -> Node0x1c33160;
	Node0x1c33160 -> Node0x1c331d0;
	Node0x1c32970 -> Node0x1c331d0;
	Node0x1c331d0 -> Node0x1c33240;
	Node0x1c329e0 -> Node0x1c33240;
	Node0x1c33240 -> Node0x1c332b0;
	Node0x1c32ac0 -> Node0x1c332b0;
	Node0x1c332b0 -> Node0x1c33320;
	Node0x1c32b30 -> Node0x1c33320;
	Node0x1c33320 -> Node0x1c33390;
	Node0x1c32c80 -> Node0x1c33390;
	Node0x1c33390 -> Node0x1c33400;
	Node0x1c32d90 -> Node0x1c33400;
	Node0x1c33400 -> Node0x1c33470;
	Node0x1c32710 -> Node0x1c33470;
	Node0x1c33470 -> Node0x1c334e0;
	Node0x1c327f0 -> Node0x1c334e0;
	Node0x1c334e0 -> Node0x1c33550;
	Node0x1c32860 -> Node0x1c33550;
	Node0x1c33550 -> Node0x1c335c0;
	Node0x1c32c10 -> Node0x1c335c0;
	Node0x1c32330 -> Node0x1c33630;
	Node0x1c335c0 -> Node0x1c33630;
	Node0x1c33630 -> Node0x1bd2268;
	Node0x1bd2268 -> Node0x1c33ad0;
}
