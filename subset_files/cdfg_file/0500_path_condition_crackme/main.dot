digraph "DFG for'main' function" {
	Node0x1c33ce8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c33d68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c33df8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c33e58[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1c33f08[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1c34338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c34418[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1c34518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c345d8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1c34688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c34748[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1c347f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c2eb90[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1c349f8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c35968[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c35fd8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c36038[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1c360b0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x1c36120[shape=record, label="  %15 = and i32 %12, %11"];
	Node0x1c36190[shape=record, label="  %16 = add i32 %10, 1"];
	Node0x1c36200[shape=record, label="  %17 = sub i32 %16, %14"];
	Node0x1c36270[shape=record, label="  %18 = add i32 %17, %15"];
	Node0x1c362e0[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x1c36350[shape=record, label="  %20 = or i32 %11, %19"];
	Node0x1c363c0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1c36430[shape=record, label="  %22 = shl i32 %11, 1"];
	Node0x1c364a0[shape=record, label="  %23 = or i32 %22, 1"];
	Node0x1c36510[shape=record, label="  %24 = xor i32 %12, %11"];
	Node0x1c36580[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x1c365f0[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x1c36660[shape=record, label="  %27 = shl i32 %14, 1"];
	Node0x1c366d0[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x1c36740[shape=record, label="  %29 = xor i32 %21, -2"];
	Node0x1c367b0[shape=record, label="  %30 = and i32 %11, %19"];
	Node0x1c36820[shape=record, label="  %31 = shl i32 %30, 2"];
	Node0x1c36890[shape=record, label="  %32 = shl i32 %15, 2"];
	Node0x1c36900[shape=record, label="  %33 = xor i32 %10, -1"];
	Node0x1c36970[shape=record, label="  %34 = xor i32 %13, %10"];
	Node0x1c369e0[shape=record, label="  %35 = or i32 %13, %33"];
	Node0x1c36a50[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x1c36ac0[shape=record, label="  %37 = xor i32 %36, -2"];
	Node0x1c36b30[shape=record, label="  %38 = and i32 %13, %33"];
	Node0x1c36ba0[shape=record, label="  %39 = shl i32 %12, 1"];
	Node0x1c36c10[shape=record, label="  %40 = add i32 %11, -4"];
	Node0x1c36c80[shape=record, label="  %41 = add i32 %40, %16"];
	Node0x1c36cf0[shape=record, label="  %42 = add i32 %41, %12"];
	Node0x1c36d60[shape=record, label="  %43 = sub i32 %42, %39"];
	Node0x1c36dd0[shape=record, label="  %44 = add i32 %43, %23"];
	Node0x1c36e40[shape=record, label="  %45 = sub i32 %44, %21"];
	Node0x1c36eb0[shape=record, label="  %46 = sub i32 %45, %31"];
	Node0x1c36f20[shape=record, label="  %47 = sub i32 %46, %32"];
	Node0x1c36f90[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x1c37000[shape=record, label="  %49 = sub i32 %48, %35"];
	Node0x1c37070[shape=record, label="  %50 = sub i32 %49, %38"];
	Node0x1c370e0[shape=record, label="  %51 = add i32 %50, %26"];
	Node0x1c37150[shape=record, label="  %52 = sub i32 %51, %28"];
	Node0x1c371c0[shape=record, label="  %53 = sub i32 %52, %29"];
	Node0x1c37230[shape=record, label="  %54 = sub i32 %53, %37"];
	Node0x1c372a0[shape=record, label="  %55 = icmp eq i32 %18, %54"];
	Node0x1bd38b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c37330[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x1c375d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c37738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c37848[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c37958[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c37a18[shape=record, label="  ret i32 0"];
	Node0x1c33ce8 -> Node0x1c33d68;
	Node0x1c33d68 -> Node0x1c33df8;
	Node0x1c33df8 -> Node0x1c33e58;
	Node0x1c33e58 -> Node0x1c33f08;
	Node0x1c33f08 -> Node0x1c34338;
	Node0x1c34338 -> Node0x1c34418;
	Node0x1c34418 -> Node0x1c34518;
	Node0x1c34518 -> Node0x1c345d8;
	Node0x1c345d8 -> Node0x1c34688;
	Node0x1c34688 -> Node0x1c34748;
	Node0x1c34748 -> Node0x1c347f8;
	Node0x1c347f8 -> Node0x1c2eb90;
	Node0x1c2eb90 -> Node0x1c349f8;
	Node0x1c349f8 -> Node0x1c35968;
	Node0x1c35968 -> Node0x1c35fd8;
	Node0x1c35fd8 -> Node0x1c36038;
	Node0x1c36038 -> Node0x1c360b0;
	Node0x1c360b0 -> Node0x1c36120;
	Node0x1c36120 -> Node0x1c36190;
	Node0x1c36190 -> Node0x1c36200;
	Node0x1c36200 -> Node0x1c36270;
	Node0x1c36270 -> Node0x1c362e0;
	Node0x1c362e0 -> Node0x1c36350;
	Node0x1c36350 -> Node0x1c363c0;
	Node0x1c363c0 -> Node0x1c36430;
	Node0x1c36430 -> Node0x1c364a0;
	Node0x1c364a0 -> Node0x1c36510;
	Node0x1c36510 -> Node0x1c36580;
	Node0x1c36580 -> Node0x1c365f0;
	Node0x1c365f0 -> Node0x1c36660;
	Node0x1c36660 -> Node0x1c366d0;
	Node0x1c366d0 -> Node0x1c36740;
	Node0x1c36740 -> Node0x1c367b0;
	Node0x1c367b0 -> Node0x1c36820;
	Node0x1c36820 -> Node0x1c36890;
	Node0x1c36890 -> Node0x1c36900;
	Node0x1c36900 -> Node0x1c36970;
	Node0x1c36970 -> Node0x1c369e0;
	Node0x1c369e0 -> Node0x1c36a50;
	Node0x1c36a50 -> Node0x1c36ac0;
	Node0x1c36ac0 -> Node0x1c36b30;
	Node0x1c36b30 -> Node0x1c36ba0;
	Node0x1c36ba0 -> Node0x1c36c10;
	Node0x1c36c10 -> Node0x1c36c80;
	Node0x1c36c80 -> Node0x1c36cf0;
	Node0x1c36cf0 -> Node0x1c36d60;
	Node0x1c36d60 -> Node0x1c36dd0;
	Node0x1c36dd0 -> Node0x1c36e40;
	Node0x1c36e40 -> Node0x1c36eb0;
	Node0x1c36eb0 -> Node0x1c36f20;
	Node0x1c36f20 -> Node0x1c36f90;
	Node0x1c36f90 -> Node0x1c37000;
	Node0x1c37000 -> Node0x1c37070;
	Node0x1c37070 -> Node0x1c370e0;
	Node0x1c370e0 -> Node0x1c37150;
	Node0x1c37150 -> Node0x1c371c0;
	Node0x1c371c0 -> Node0x1c37230;
	Node0x1c37230 -> Node0x1c372a0;
	Node0x1c372a0 -> Node0x1bd38b8;
	Node0x1bd38b8 -> Node0x1c37330;
	Node0x1c37330 -> Node0x1c375d8;
	Node0x1c375d8 -> Node0x1c37738;
	Node0x1c37738 -> Node0x1c37848;
	Node0x1c37848 -> Node0x1c37958;
	Node0x1c37958 -> Node0x1c37a18;
edge [color=red]
	Node0x1c33ce8 -> Node0x1c33f08;
	Node0x1c33f08 -> Node0x1c34338;
	Node0x1c33d68 -> Node0x1c34418;
	Node0x1c34418 -> Node0x1c34518;
	Node0x1c33df8 -> Node0x1c345d8;
	Node0x1c345d8 -> Node0x1c34688;
	Node0x1c33e58 -> Node0x1c34748;
	Node0x1c34748 -> Node0x1c347f8;
	Node0x1c33ce8 -> Node0x1c2eb90;
	Node0x1c33d68 -> Node0x1c2eb90;
	Node0x1c33df8 -> Node0x1c2eb90;
	Node0x1c33e58 -> Node0x1c2eb90;
	Node0x1c33ce8 -> Node0x1c349f8;
	Node0x1c33d68 -> Node0x1c35968;
	Node0x1c33df8 -> Node0x1c35fd8;
	Node0x1c33e58 -> Node0x1c36038;
	Node0x1c35fd8 -> Node0x1c360b0;
	Node0x1c35968 -> Node0x1c360b0;
	Node0x1c35fd8 -> Node0x1c36120;
	Node0x1c35968 -> Node0x1c36120;
	Node0x1c349f8 -> Node0x1c36190;
	Node0x1c36190 -> Node0x1c36200;
	Node0x1c360b0 -> Node0x1c36200;
	Node0x1c36200 -> Node0x1c36270;
	Node0x1c36120 -> Node0x1c36270;
	Node0x1c35fd8 -> Node0x1c362e0;
	Node0x1c35968 -> Node0x1c36350;
	Node0x1c362e0 -> Node0x1c36350;
	Node0x1c36350 -> Node0x1c363c0;
	Node0x1c35968 -> Node0x1c36430;
	Node0x1c36430 -> Node0x1c364a0;
	Node0x1c35fd8 -> Node0x1c36510;
	Node0x1c35968 -> Node0x1c36510;
	Node0x1c36510 -> Node0x1c36580;
	Node0x1c36580 -> Node0x1c365f0;
	Node0x1c360b0 -> Node0x1c36660;
	Node0x1c36660 -> Node0x1c366d0;
	Node0x1c363c0 -> Node0x1c36740;
	Node0x1c35968 -> Node0x1c367b0;
	Node0x1c362e0 -> Node0x1c367b0;
	Node0x1c367b0 -> Node0x1c36820;
	Node0x1c36120 -> Node0x1c36890;
	Node0x1c349f8 -> Node0x1c36900;
	Node0x1c36038 -> Node0x1c36970;
	Node0x1c349f8 -> Node0x1c36970;
	Node0x1c36038 -> Node0x1c369e0;
	Node0x1c36900 -> Node0x1c369e0;
	Node0x1c369e0 -> Node0x1c36a50;
	Node0x1c36a50 -> Node0x1c36ac0;
	Node0x1c36038 -> Node0x1c36b30;
	Node0x1c36900 -> Node0x1c36b30;
	Node0x1c35fd8 -> Node0x1c36ba0;
	Node0x1c35968 -> Node0x1c36c10;
	Node0x1c36c10 -> Node0x1c36c80;
	Node0x1c36190 -> Node0x1c36c80;
	Node0x1c36c80 -> Node0x1c36cf0;
	Node0x1c35fd8 -> Node0x1c36cf0;
	Node0x1c36cf0 -> Node0x1c36d60;
	Node0x1c36ba0 -> Node0x1c36d60;
	Node0x1c36d60 -> Node0x1c36dd0;
	Node0x1c364a0 -> Node0x1c36dd0;
	Node0x1c36dd0 -> Node0x1c36e40;
	Node0x1c363c0 -> Node0x1c36e40;
	Node0x1c36e40 -> Node0x1c36eb0;
	Node0x1c36820 -> Node0x1c36eb0;
	Node0x1c36eb0 -> Node0x1c36f20;
	Node0x1c36890 -> Node0x1c36f20;
	Node0x1c36f20 -> Node0x1c36f90;
	Node0x1c36970 -> Node0x1c36f90;
	Node0x1c36f90 -> Node0x1c37000;
	Node0x1c369e0 -> Node0x1c37000;
	Node0x1c37000 -> Node0x1c37070;
	Node0x1c36b30 -> Node0x1c37070;
	Node0x1c37070 -> Node0x1c370e0;
	Node0x1c365f0 -> Node0x1c370e0;
	Node0x1c370e0 -> Node0x1c37150;
	Node0x1c366d0 -> Node0x1c37150;
	Node0x1c37150 -> Node0x1c371c0;
	Node0x1c36740 -> Node0x1c371c0;
	Node0x1c371c0 -> Node0x1c37230;
	Node0x1c36ac0 -> Node0x1c37230;
	Node0x1c36270 -> Node0x1c372a0;
	Node0x1c37230 -> Node0x1c372a0;
	Node0x1c372a0 -> Node0x1bd38b8;
	Node0x1bd38b8 -> Node0x1c37330;
	Node0x1c34748 -> Node0x1c375d8;
	Node0x1c345d8 -> Node0x1c37738;
	Node0x1c34418 -> Node0x1c37848;
	Node0x1c33f08 -> Node0x1c37958;
}
