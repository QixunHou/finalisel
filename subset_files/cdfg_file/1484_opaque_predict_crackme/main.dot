digraph "DFG for'main' function" {
	Node0x5642e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x564368[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5643f8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x564858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x564938[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x564a58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x564c90[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x564d48[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x565cb8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x566340[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x5663b0[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x566420[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x566490[shape=record, label="  %11 = xor i32 %6, -1"];
	Node0x566500[shape=record, label="  %12 = mul i32 %11, -5"];
	Node0x566570[shape=record, label="  %13 = and i32 %6, %8"];
	Node0x5665e0[shape=record, label="  %14 = shl i32 %13, 2"];
	Node0x566650[shape=record, label="  %15 = xor i32 %14, -4"];
	Node0x5666c0[shape=record, label="  %16 = xor i32 %9, -1"];
	Node0x566730[shape=record, label="  %17 = mul i32 %16, -3"];
	Node0x5667a0[shape=record, label="  %18 = and i32 %7, %6"];
	Node0x566810[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x566880[shape=record, label="  %20 = or i32 %7, %6"];
	Node0x5668f0[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x566960[shape=record, label="  %22 = mul i32 %21, 9"];
	Node0x5669d0[shape=record, label="  %23 = and i32 %7, %11"];
	Node0x566a40[shape=record, label="  %24 = sub i32 %18, %13"];
	Node0x566ab0[shape=record, label="  %25 = add i32 %24, %23"];
	Node0x566b20[shape=record, label="  %26 = mul i32 %25, 6"];
	Node0x566b90[shape=record, label="  %27 = add i32 %6, -1"];
	Node0x566c00[shape=record, label="  %28 = add i32 %27, %8"];
	Node0x566c70[shape=record, label="  %29 = add i32 %28, %12"];
	Node0x566ce0[shape=record, label="  %30 = add i32 %29, %19"];
	Node0x566d50[shape=record, label="  %31 = add i32 %30, %10"];
	Node0x566dc0[shape=record, label="  %32 = add i32 %31, %17"];
	Node0x566e30[shape=record, label="  %33 = add i32 %32, %22"];
	Node0x566ea0[shape=record, label="  %34 = sub i32 %33, %15"];
	Node0x566f10[shape=record, label="  %35 = add i32 %34, %26"];
	Node0x566f80[shape=record, label="  %36 = icmp eq i32 %35, %7"];
	Node0x5049d8[shape=record, label="  %37 = select i1 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x567010[shape=record, label="  %38 = call i32 @puts(i8* nonnull dereferenceable(1) %37) #5"];
	Node0x567268[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5673c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x567488[shape=record, label="  ret i32 0"];
	Node0x5642e8 -> Node0x564368;
	Node0x564368 -> Node0x5643f8;
	Node0x5643f8 -> Node0x564858;
	Node0x564858 -> Node0x564938;
	Node0x564938 -> Node0x564a58;
	Node0x564a58 -> Node0x564c90;
	Node0x564c90 -> Node0x564d48;
	Node0x564d48 -> Node0x565cb8;
	Node0x565cb8 -> Node0x566340;
	Node0x566340 -> Node0x5663b0;
	Node0x5663b0 -> Node0x566420;
	Node0x566420 -> Node0x566490;
	Node0x566490 -> Node0x566500;
	Node0x566500 -> Node0x566570;
	Node0x566570 -> Node0x5665e0;
	Node0x5665e0 -> Node0x566650;
	Node0x566650 -> Node0x5666c0;
	Node0x5666c0 -> Node0x566730;
	Node0x566730 -> Node0x5667a0;
	Node0x5667a0 -> Node0x566810;
	Node0x566810 -> Node0x566880;
	Node0x566880 -> Node0x5668f0;
	Node0x5668f0 -> Node0x566960;
	Node0x566960 -> Node0x5669d0;
	Node0x5669d0 -> Node0x566a40;
	Node0x566a40 -> Node0x566ab0;
	Node0x566ab0 -> Node0x566b20;
	Node0x566b20 -> Node0x566b90;
	Node0x566b90 -> Node0x566c00;
	Node0x566c00 -> Node0x566c70;
	Node0x566c70 -> Node0x566ce0;
	Node0x566ce0 -> Node0x566d50;
	Node0x566d50 -> Node0x566dc0;
	Node0x566dc0 -> Node0x566e30;
	Node0x566e30 -> Node0x566ea0;
	Node0x566ea0 -> Node0x566f10;
	Node0x566f10 -> Node0x566f80;
	Node0x566f80 -> Node0x5049d8;
	Node0x5049d8 -> Node0x567010;
	Node0x567010 -> Node0x567268;
	Node0x567268 -> Node0x5673c8;
	Node0x5673c8 -> Node0x567488;
edge [color=red]
	Node0x5642e8 -> Node0x5643f8;
	Node0x5643f8 -> Node0x564858;
	Node0x564368 -> Node0x564938;
	Node0x564938 -> Node0x564a58;
	Node0x5642e8 -> Node0x564c90;
	Node0x564368 -> Node0x564c90;
	Node0x5642e8 -> Node0x564d48;
	Node0x564368 -> Node0x565cb8;
	Node0x565cb8 -> Node0x566340;
	Node0x565cb8 -> Node0x5663b0;
	Node0x564d48 -> Node0x5663b0;
	Node0x5663b0 -> Node0x566420;
	Node0x564d48 -> Node0x566490;
	Node0x566490 -> Node0x566500;
	Node0x564d48 -> Node0x566570;
	Node0x566340 -> Node0x566570;
	Node0x566570 -> Node0x5665e0;
	Node0x5665e0 -> Node0x566650;
	Node0x5663b0 -> Node0x5666c0;
	Node0x5666c0 -> Node0x566730;
	Node0x565cb8 -> Node0x5667a0;
	Node0x564d48 -> Node0x5667a0;
	Node0x5667a0 -> Node0x566810;
	Node0x565cb8 -> Node0x566880;
	Node0x564d48 -> Node0x566880;
	Node0x566880 -> Node0x5668f0;
	Node0x5668f0 -> Node0x566960;
	Node0x565cb8 -> Node0x5669d0;
	Node0x566490 -> Node0x5669d0;
	Node0x5667a0 -> Node0x566a40;
	Node0x566570 -> Node0x566a40;
	Node0x566a40 -> Node0x566ab0;
	Node0x5669d0 -> Node0x566ab0;
	Node0x566ab0 -> Node0x566b20;
	Node0x564d48 -> Node0x566b90;
	Node0x566b90 -> Node0x566c00;
	Node0x566340 -> Node0x566c00;
	Node0x566c00 -> Node0x566c70;
	Node0x566500 -> Node0x566c70;
	Node0x566c70 -> Node0x566ce0;
	Node0x566810 -> Node0x566ce0;
	Node0x566ce0 -> Node0x566d50;
	Node0x566420 -> Node0x566d50;
	Node0x566d50 -> Node0x566dc0;
	Node0x566730 -> Node0x566dc0;
	Node0x566dc0 -> Node0x566e30;
	Node0x566960 -> Node0x566e30;
	Node0x566e30 -> Node0x566ea0;
	Node0x566650 -> Node0x566ea0;
	Node0x566ea0 -> Node0x566f10;
	Node0x566b20 -> Node0x566f10;
	Node0x566f10 -> Node0x566f80;
	Node0x565cb8 -> Node0x566f80;
	Node0x566f80 -> Node0x5049d8;
	Node0x5049d8 -> Node0x567010;
	Node0x564938 -> Node0x567268;
	Node0x5643f8 -> Node0x5673c8;
}
