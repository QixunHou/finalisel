digraph "DFG for'main' function" {
	Node0x69e378[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x69e3f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x69e488[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x69e4e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x69e968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x69ea48[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x69eb48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x69ec08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x69ecb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x69ef18[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x69efd8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x69f138[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x69f198[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x6a51b0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x6a53b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6a5518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6a5628[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6a56e8[shape=record, label="  ret i32 0"];
	Node0x69e378 -> Node0x69e3f8;
	Node0x69e3f8 -> Node0x69e488;
	Node0x69e488 -> Node0x69e4e8;
	Node0x69e4e8 -> Node0x69e968;
	Node0x69e968 -> Node0x69ea48;
	Node0x69ea48 -> Node0x69eb48;
	Node0x69eb48 -> Node0x69ec08;
	Node0x69ec08 -> Node0x69ecb8;
	Node0x69ecb8 -> Node0x69ef18;
	Node0x69ef18 -> Node0x69efd8;
	Node0x69efd8 -> Node0x69f138;
	Node0x69f138 -> Node0x69f198;
	Node0x69f198 -> Node0x6a51b0;
	Node0x6a51b0 -> Node0x6a53b8;
	Node0x6a53b8 -> Node0x6a5518;
	Node0x6a5518 -> Node0x6a5628;
	Node0x6a5628 -> Node0x6a56e8;
edge [color=red]
	Node0x69e378 -> Node0x69e4e8;
	Node0x69e4e8 -> Node0x69e968;
	Node0x69e3f8 -> Node0x69ea48;
	Node0x69ea48 -> Node0x69eb48;
	Node0x69e488 -> Node0x69ec08;
	Node0x69ec08 -> Node0x69ecb8;
	Node0x69e378 -> Node0x69ef18;
	Node0x69e3f8 -> Node0x69ef18;
	Node0x69e488 -> Node0x69ef18;
	Node0x69e378 -> Node0x69efd8;
	Node0x69e3f8 -> Node0x69f138;
	Node0x69e488 -> Node0x69f198;
	Node0x69efd8 -> Node0x6a51b0;
	Node0x69f138 -> Node0x6a51b0;
	Node0x69f198 -> Node0x6a51b0;
	Node0x69ec08 -> Node0x6a53b8;
	Node0x69ea48 -> Node0x6a5518;
	Node0x69e4e8 -> Node0x6a5628;
}
