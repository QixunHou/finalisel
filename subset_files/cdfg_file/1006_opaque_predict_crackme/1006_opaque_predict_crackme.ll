; ModuleID = '../.././c_source_file/1006_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1006_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = xor i32 %2, %0
  %9 = and i32 %8, %7
  %10 = xor i32 %2, -1
  %11 = or i32 %10, %0
  %12 = sub i32 %9, %11
  %13 = xor i32 %5, -1
  %14 = and i32 %13, %4
  %15 = xor i32 %14, -1
  %16 = xor i32 %4, %3
  %17 = and i32 %16, %15
  %18 = sub i32 %12, %17
  %19 = xor i32 %3, -1
  %20 = and i32 %19, %5
  %21 = and i32 %20, %4
  %22 = xor i32 %4, -1
  %23 = or i32 %19, %5
  %24 = and i32 %23, %22
  %25 = or i32 %21, %24
  %26 = add i32 %18, %25
  %27 = and i32 %1, %0
  %28 = or i32 %2, %0
  %29 = xor i32 %28, -1
  %30 = or i32 %27, %29
  %31 = or i32 %10, %1
  %32 = xor i32 %31, %27
  %33 = xor i32 %1, %0
  %34 = xor i32 %33, -1
  %35 = or i32 %10, %34
  %36 = or i32 %2, %1
  %37 = xor i32 %36, %0
  %38 = xor i32 %0, -1
  %39 = xor i32 %2, %1
  %40 = and i32 %39, %38
  %41 = or i32 %36, %38
  %42 = xor i32 %27, -1
  %43 = and i32 %31, %38
  %44 = xor i32 %31, -1
  %45 = or i32 %27, %44
  %46 = xor i32 %8, -1
  %47 = and i32 %33, %46
  %48 = and i32 %7, %2
  %49 = and i32 %48, %0
  %50 = or i32 %39, %0
  %51 = xor i32 %50, -1
  %52 = or i32 %49, %51
  %53 = and i32 %48, %38
  %54 = or i32 %39, %38
  %55 = xor i32 %53, %54
  %56 = and i32 %33, %2
  %57 = and i32 %36, %0
  %58 = and i32 %10, %0
  %59 = and i32 %2, %1
  %60 = xor i32 %59, -1
  %61 = xor i32 %58, %60
  %62 = or i32 %7, %0
  %63 = and i32 %62, %46
  %64 = or i32 %59, %38
  %65 = xor i32 %62, -1
  %66 = or i32 %39, %65
  %67 = shl i32 %66, 1
  %68 = or i32 %46, %1
  %69 = shl i32 %65, 1
  %70 = or i32 %1, %0
  %71 = and i32 %70, %10
  %72 = or i32 %33, %10
  %73 = add i32 %8, 1
  %74 = or i32 %36, %0
  %75 = and i32 %59, %38
  %76 = and i32 %39, %0
  %77 = xor i32 %76, 1073741823
  %78 = xor i32 %77, %75
  %79 = shl i32 %78, 2
  %80 = xor i32 %11, -1
  %81 = or i32 %80, %1
  %82 = or i32 %8, %33
  %83 = xor i32 %28, %1
  %84 = or i32 %7, %2
  %85 = xor i32 %84, %0
  %86 = or i32 %49, %85
  %87 = and i32 %7, %0
  %88 = shl i32 %87, 1
  %89 = and i32 %39, %42
  %90 = xor i32 %87, -1
  %91 = and i32 %8, %90
  %92 = or i32 %29, %1
  %93 = shl i32 %92, 1
  %94 = or i32 %87, %46
  %95 = and i32 %84, %0
  %96 = or i32 %53, %95
  %97 = xor i32 %70, -1
  %98 = xor i32 %39, -1
  %99 = or i32 %98, %97
  %100 = shl i32 %99, 1
  %101 = and i32 %2, %0
  %102 = or i32 %101, %1
  %103 = and i32 %62, %2
  %104 = shl i32 %103, 1
  %105 = or i32 %98, %38
  %106 = and i32 %10, %1
  %107 = xor i32 %106, -1
  %108 = xor i32 %87, %107
  %109 = shl i32 %108, 2
  %110 = and i32 %8, %42
  %111 = or i32 %106, %0
  %112 = or i32 %101, %33
  %113 = xor i32 %97, %2
  %114 = xor i32 %85, 2147483647
  %115 = xor i32 %114, %49
  %116 = xor i32 %101, %62
  %117 = and i32 %60, %38
  %118 = or i32 %87, %2
  %119 = xor i32 %101, -1
  %120 = and i32 %119, %1
  %121 = or i32 %60, %0
  %122 = and i32 %59, %0
  %123 = and i32 %36, %38
  %124 = or i32 %122, %123
  %125 = shl i32 %124, 1
  %126 = and i32 %84, %38
  %127 = or i32 %49, %126
  %128 = xor i32 %58, %1
  %129 = and i32 %42, %2
  %130 = xor i32 %44, %0
  %131 = or i32 %8, %1
  %132 = or i32 %87, %10
  %133 = and i32 %8, %33
  %134 = xor i32 %60, %0
  %135 = xor i32 %36, -1
  %136 = or i32 %135, %0
  %137 = or i32 %75, %57
  %138 = or i32 %33, %80
  %139 = and i32 %11, %7
  %140 = xor i32 %36, %27
  %141 = and i32 %34, %2
  %142 = xor i32 %123, -1
  %143 = xor i32 %122, %142
  %144 = and i32 %28, %34
  %145 = or i32 %39, %87
  %146 = xor i32 %80, %1
  %147 = or i32 %27, %10
  %148 = xor i32 %70, %2
  %149 = shl i32 %148, 1
  %150 = add i32 %87, 1
  %151 = and i32 %46, %90
  %152 = or i32 %75, %76
  %153 = and i32 %10, %42
  %154 = xor i32 %126, -1
  %155 = xor i32 %49, %154
  %156 = or i32 %59, %0
  %157 = shl i32 %156, 1
  %158 = and i32 %90, %2
  %159 = and i32 %10, %34
  %160 = or i32 %101, %7
  %161 = xor i32 %58, -1
  %162 = xor i32 %161, %1
  %163 = shl i32 %162, 1
  %164 = and i32 %8, %1
  %165 = shl i32 %164, 1
  %166 = and i32 %98, %0
  %167 = or i32 %8, %97
  %168 = shl i32 %167, 1
  %169 = and i32 %33, %119
  %170 = xor i32 %95, -1
  %171 = xor i32 %53, %170
  %172 = and i32 %8, %70
  %173 = and i32 %107, %0
  %174 = or i32 %97, %2
  %175 = xor i32 %107, %0
  %176 = or i32 %39, %27
  %177 = or i32 %65, %2
  %178 = or i32 %101, %34
  %179 = or i32 %44, %0
  %180 = or i32 %107, %0
  %181 = and i32 %10, %90
  %182 = xor i32 %57, -1
  %183 = xor i32 %75, %182
  %184 = and i32 %161, %7
  %185 = or i32 %60, %38
  %186 = or i32 %58, %34
  %187 = xor i32 %101, %107
  %188 = or i32 %80, %34
  %189 = and i32 %31, %0
  %190 = add i32 %106, 1
  %191 = and i32 %39, %62
  %192 = and i32 %33, %161
  %193 = shl i32 %192, 1
  %194 = or i32 %8, %27
  %195 = or i32 %46, %34
  %196 = and i32 %98, %42
  %197 = or i32 %8, %65
  %198 = or i32 %31, %38
  %199 = add i32 %31, 1
  %200 = or i32 %106, %87
  %201 = xor i32 %42, %2
  %202 = or i32 %27, %46
  %203 = xor i32 %29, %1
  %204 = and i32 %107, %38
  %205 = shl i32 %204, 1
  %206 = and i32 %8, %34
  %207 = or i32 %58, %7
  %208 = xor i32 %135, %0
  %209 = xor i32 %98, %0
  %210 = or i32 %8, %87
  %211 = shl i32 %210, 1
  %212 = and i32 %119, %7
  %213 = xor i32 %11, %27
  %214 = and i32 %135, %38
  %215 = and i32 %106, %38
  %216 = and i32 %135, %0
  %217 = and i32 %106, %0
  %218 = and i32 %44, %38
  %219 = mul i32 %75, 22
  %220 = and i32 %44, %0
  %221 = shl i32 %220, 1
  %222 = or i32 %4, %3
  %223 = xor i32 %222, %5
  %224 = xor i32 %5, %3
  %225 = xor i32 %224, %4
  %226 = or i32 %13, %3
  %227 = xor i32 %226, -1
  %228 = or i32 %227, %4
  %229 = or i32 %19, %4
  %230 = xor i32 %229, -1
  %231 = or i32 %13, %230
  %232 = and i32 %4, %3
  %233 = or i32 %224, %232
  %234 = xor i32 %224, -1
  %235 = or i32 %234, %4
  %236 = xor i32 %5, %4
  %237 = or i32 %236, %230
  %238 = and i32 %15, %3
  %239 = and i32 %5, %4
  %240 = xor i32 %239, %229
  %241 = xor i32 %232, -1
  %242 = and i32 %13, %241
  %243 = xor i32 %16, -1
  %244 = and i32 %15, %243
  %245 = or i32 %239, %19
  %246 = and i32 %236, %16
  %247 = and i32 %5, %3
  %248 = and i32 %247, %22
  %249 = or i32 %5, %3
  %250 = and i32 %249, %4
  %251 = or i32 %248, %250
  %252 = or i32 %14, %243
  %253 = xor i32 %241, %5
  %254 = or i32 %243, %5
  %255 = or i32 %239, %3
  %256 = and i32 %236, %243
  %257 = xor i32 %222, -1
  %258 = or i32 %13, %257
  %259 = xor i32 %249, -1
  %260 = or i32 %259, %4
  %261 = shl i32 %260, 1
  %262 = xor i32 %236, -1
  %263 = or i32 %262, %243
  %264 = xor i32 %232, %5
  %265 = and i32 %13, %3
  %266 = or i32 %239, %265
  %267 = shl i32 %266, 1
  %268 = or i32 %13, %4
  %269 = xor i32 %268, -1
  %270 = or i32 %16, %269
  %271 = shl i32 %270, 1
  %272 = and i32 %229, %234
  %273 = or i32 %5, %4
  %274 = xor i32 %273, -1
  %275 = add i32 %273, 1
  %276 = xor i32 %247, -1
  %277 = xor i32 %276, %4
  %278 = or i32 %224, %4
  %279 = and i32 %16, %5
  %280 = or i32 %236, %243
  %281 = shl i32 %280, 1
  %282 = and i32 %19, %4
  %283 = xor i32 %282, %5
  %284 = or i32 %247, %22
  %285 = or i32 %262, %19
  %286 = or i32 %14, %16
  %287 = xor i32 %265, -1
  %288 = or i32 %287, %22
  %289 = xor i32 %247, %4
  %290 = shl i32 %289, 1
  %291 = xor i32 %269, %3
  %292 = shl i32 %291, 1
  %293 = and i32 %268, %3
  %294 = shl i32 %293, 1
  %295 = or i32 %262, %230
  %296 = and i32 %276, %22
  %297 = and i32 %229, %262
  %298 = xor i32 %229, %5
  %299 = or i32 %234, %230
  %300 = shl i32 %299, 1
  %301 = or i32 %249, %4
  %302 = and i32 %224, %222
  %303 = xor i32 %239, -1
  %304 = and i32 %303, %3
  %305 = and i32 %236, %229
  %306 = or i32 %276, %22
  %307 = and i32 %268, %16
  %308 = xor i32 %268, %3
  %309 = or i32 %14, %227
  %310 = or i32 %16, %5
  %311 = xor i32 %230, %5
  %312 = xor i32 %239, %287
  %313 = and i32 %222, %13
  %314 = or i32 %16, %262
  %315 = or i32 %274, %243
  %316 = shl i32 %315, 1
  %317 = xor i32 %23, %4
  %318 = or i32 %21, %317
  %319 = or i32 %232, %259
  %320 = and i32 %224, %4
  %321 = or i32 %16, %274
  %322 = xor i32 %239, %3
  %323 = and i32 %236, %222
  %324 = xor i32 %257, %5
  %325 = or i32 %234, %22
  %326 = xor i32 %282, %276
  %327 = add i32 %5, 1
  %328 = xor i32 %268, %232
  %329 = and i32 %20, %22
  %330 = and i32 %23, %4
  %331 = or i32 %329, %330
  %332 = shl i32 %331, 1
  %333 = or i32 %14, %19
  %334 = and i32 %247, %4
  %335 = xor i32 %249, %4
  %336 = or i32 %334, %335
  %337 = xor i32 %226, %232
  %338 = xor i32 %282, -1
  %339 = and i32 %338, %5
  %340 = xor i32 %278, 2147483647
  %341 = or i32 %340, %21
  %342 = or i32 %239, %16
  %343 = or i32 %262, %257
  %344 = or i32 %14, %247
  %345 = and i32 %236, %338
  %346 = or i32 %282, %5
  %347 = or i32 %259, %22
  %348 = add i32 %232, 1
  %349 = and i32 %262, %241
  %350 = xor i32 %225, -1
  %351 = xor i32 %21, %350
  %352 = and i32 %276, %4
  %353 = or i32 %257, %5
  %354 = or i32 %232, %227
  %355 = and i32 %224, %22
  %356 = xor i32 %334, -1
  %357 = xor i32 %355, %356
  %358 = or i32 %236, %232
  %359 = and i32 %229, %5
  %360 = shl i32 %287, 1
  %361 = or i32 %334, %355
  %362 = and i32 %287, %4
  %363 = xor i32 %335, %356
  %364 = and i32 %236, %3
  %365 = or i32 %334, %350
  %366 = and i32 %262, %243
  %367 = and i32 %262, %338
  %368 = shl i32 %367, 1
  %369 = xor i32 %330, -1
  %370 = xor i32 %329, %369
  %371 = xor i32 %248, -1
  %372 = xor i32 %250, %371
  %373 = or i32 %224, %22
  %374 = or i32 %224, %230
  %375 = or i32 %234, %257
  %376 = or i32 %265, %282
  %377 = and i32 %224, %338
  %378 = shl i32 %377, 1
  %379 = and i32 %303, %19
  %380 = xor i32 %265, %4
  %381 = or i32 %236, %19
  %382 = shl i32 %381, 1
  %383 = or i32 %232, %5
  %384 = and i32 %287, %22
  %385 = xor i32 %234, %4
  %386 = and i32 %234, %241
  %387 = or i32 %224, %257
  %388 = shl i32 %387, 1
  %389 = and i32 %13, %243
  %390 = shl i32 %389, 1
  %391 = or i32 %269, %19
  %392 = xor i32 %15, %3
  %393 = or i32 %227, %22
  %394 = or i32 %232, %234
  %395 = and i32 %234, %4
  %396 = or i32 %247, %282
  %397 = shl i32 %265, 1
  %398 = and i32 %249, %22
  %399 = or i32 %334, %398
  %400 = xor i32 %303, %3
  %401 = xor i32 %273, %232
  %402 = and i32 %273, %3
  %403 = and i32 %262, %3
  %404 = or i32 %269, %243
  %405 = and i32 %222, %234
  %406 = xor i32 %14, %276
  %407 = and i32 %243, %5
  %408 = xor i32 %24, -1
  %409 = xor i32 %21, %408
  %410 = xor i32 %287, %4
  %411 = or i32 %239, %257
  %412 = or i32 %274, %19
  %413 = or i32 %262, %3
  %414 = or i32 %276, %4
  %415 = add i32 %236, 1
  %416 = and i32 %224, %241
  %417 = and i32 %273, %243
  %418 = and i32 %268, %243
  %419 = and i32 %234, %338
  %420 = and i32 %226, %4
  %421 = or i32 %287, %4
  %422 = xor i32 %226, %4
  %423 = or i32 %282, %262
  %424 = or i32 %230, %5
  %425 = and i32 %236, %241
  %426 = shl i32 %425, 1
  %427 = and i32 %16, %13
  %428 = or i32 %236, %282
  %429 = xor i32 %259, %4
  %430 = xor i32 %227, %4
  %431 = or i32 %248, %320
  %432 = and i32 %268, %19
  %433 = or i32 %13, %243
  %434 = xor i32 %398, %356
  %435 = or i32 %226, %4
  %436 = or i32 %236, %16
  %437 = xor i32 %373, -1
  %438 = or i32 %329, %437
  %439 = and i32 %13, %338
  %440 = xor i32 %273, %3
  %441 = shl i32 %440, 1
  %442 = or i32 %21, %225
  %443 = and i32 %241, %5
  %444 = xor i32 %249, %232
  %445 = shl i32 %444, 1
  %446 = and i32 %224, %229
  %447 = xor i32 %334, %225
  %448 = or i32 %247, %4
  %449 = xor i32 %329, %373
  %450 = xor i32 %21, %278
  %451 = or i32 %232, %13
  %452 = shl i32 %451, 1
  %453 = xor i32 %239, %249
  %454 = xor i32 %282, %287
  %455 = and i32 %222, %5
  %456 = shl i32 %455, 1
  %457 = add i32 %4, 1
  %458 = or i32 %265, %4
  %459 = or i32 %224, %282
  %460 = or i32 %239, %230
  %461 = or i32 %249, %22
  %462 = xor i32 %317, 2147483647
  %463 = xor i32 %462, %21
  %464 = or i32 %282, %13
  %465 = or i32 %226, %22
  %466 = xor i32 %14, %3
  %467 = and i32 %16, %303
  %468 = and i32 %273, %19
  %469 = and i32 %15, %19
  %470 = xor i32 %320, %371
  %471 = or i32 %232, %274
  %472 = and i32 %303, %243
  %473 = and i32 %226, %22
  %474 = and i32 %229, %13
  %475 = and i32 %273, %16
  %476 = shl i32 %475, 1
  %477 = or i32 %265, %22
  %478 = xor i32 %239, %222
  %479 = shl i32 %478, 1
  %480 = or i32 %236, %257
  %481 = shl i32 %480, 1
  %482 = and i32 %222, %262
  %483 = or i32 %236, %3
  %484 = add i32 %222, 1
  %485 = or i32 %232, %262
  %486 = or i32 %239, %259
  %487 = or i32 %14, %3
  %488 = xor i32 %338, %5
  %489 = xor i32 %14, %226
  %490 = and i32 %259, %22
  %491 = mul i32 %490, 15
  %492 = and i32 %265, %22
  %493 = mul i32 %492, 24
  %494 = and i32 %259, %4
  %495 = and i32 %265, %4
  %496 = mul i32 %495, 20
  %497 = and i32 %227, %22
  %498 = and i32 %227, %4
  %499 = mul i32 %498, -11
  %500 = mul i32 %334, 14
  %501 = add i32 %29, %34
  %502 = add i32 %501, %147
  %503 = add i32 %502, %113
  %504 = add i32 %503, %213
  %505 = add i32 %504, %198
  %506 = add i32 %505, %197
  %507 = add i32 %506, %189
  %508 = add i32 %507, %184
  %509 = add i32 %508, %151
  %510 = add i32 %509, %146
  %511 = add i32 %510, %130
  %512 = add i32 %511, %128
  %513 = add i32 %512, %74
  %514 = add i32 %513, %64
  %515 = add i32 %514, %57
  %516 = add i32 %515, %243
  %517 = add i32 %516, %303
  %518 = add i32 %517, %313
  %519 = add i32 %518, %258
  %520 = add i32 %519, %242
  %521 = add i32 %520, %115
  %522 = add i32 %521, %487
  %523 = add i32 %522, %477
  %524 = add i32 %523, %465
  %525 = add i32 %524, %412
  %526 = add i32 %525, %411
  %527 = add i32 %526, %376
  %528 = add i32 %527, %309
  %529 = add i32 %528, %255
  %530 = add i32 %529, %237
  %531 = add i32 %530, %341
  %532 = add i32 %531, %463
  %533 = shl i32 %532, 1
  %534 = sub i32 %89, %172
  %535 = sub i32 %534, %127
  %536 = add i32 %535, %275
  %537 = sub i32 %536, %252
  %538 = add i32 %537, %468
  %539 = mul i32 %538, 3
  %540 = add i32 %102, %214
  %541 = add i32 %540, %55
  %542 = add i32 %541, %494
  %543 = add i32 %542, %248
  %544 = shl i32 %543, 2
  %545 = sub i32 %218, %122
  %546 = mul i32 %545, 12
  %547 = add i32 %497, %217
  %548 = mul i32 %547, 6
  %549 = and i32 %8, %62
  %550 = add i32 %187, %549
  %551 = sub i32 %550, %91
  %552 = sub i32 %551, %466
  %553 = sub i32 %552, %418
  %554 = sub i32 %553, %335
  %555 = add i32 %554, %365
  %556 = mul i32 %555, 5
  %557 = add i32 %150, %2
  %558 = add i32 %557, %97
  %559 = sub i32 %558, %35
  %560 = add i32 %559, %56
  %561 = sub i32 %560, %69
  %562 = add i32 %561, %71
  %563 = sub i32 %562, %72
  %564 = add i32 %563, %73
  %565 = sub i32 %564, %88
  %566 = sub i32 %565, %118
  %567 = add i32 %566, %129
  %568 = sub i32 %567, %132
  %569 = add i32 %568, %101
  %570 = add i32 %569, %141
  %571 = sub i32 %570, %153
  %572 = add i32 %571, %158
  %573 = sub i32 %572, %159
  %574 = sub i32 %573, %106
  %575 = add i32 %574, %174
  %576 = add i32 %575, %177
  %577 = add i32 %576, %181
  %578 = add i32 %577, %60
  %579 = sub i32 %578, %36
  %580 = sub i32 %579, %59
  %581 = add i32 %580, %190
  %582 = add i32 %581, %199
  %583 = sub i32 %582, %201
  %584 = add i32 %583, %19
  %585 = sub i32 %584, %3
  %586 = sub i32 %585, %32
  %587 = sub i32 %586, %30
  %588 = add i32 %587, %37
  %589 = sub i32 %588, %40
  %590 = add i32 %589, %41
  %591 = add i32 %590, %43
  %592 = add i32 %591, %45
  %593 = add i32 %592, %47
  %594 = add i32 %593, %61
  %595 = sub i32 %594, %63
  %596 = sub i32 %595, %68
  %597 = sub i32 %596, %81
  %598 = sub i32 %597, %82
  %599 = sub i32 %598, %83
  %600 = add i32 %599, %94
  %601 = sub i32 %600, %104
  %602 = sub i32 %601, %105
  %603 = add i32 %602, %110
  %604 = add i32 %603, %111
  %605 = add i32 %604, %112
  %606 = sub i32 %605, %116
  %607 = sub i32 %606, %117
  %608 = sub i32 %607, %120
  %609 = sub i32 %608, %121
  %610 = sub i32 %609, %131
  %611 = add i32 %610, %133
  %612 = add i32 %611, %134
  %613 = add i32 %612, %136
  %614 = sub i32 %613, %138
  %615 = add i32 %614, %139
  %616 = sub i32 %615, %140
  %617 = add i32 %616, %144
  %618 = sub i32 %617, %145
  %619 = sub i32 %618, %149
  %620 = add i32 %619, %76
  %621 = add i32 %620, %160
  %622 = add i32 %621, %166
  %623 = sub i32 %622, %169
  %624 = add i32 %623, %173
  %625 = sub i32 %624, %175
  %626 = add i32 %625, %176
  %627 = add i32 %626, %178
  %628 = sub i32 %627, %179
  %629 = add i32 %628, %180
  %630 = sub i32 %629, %185
  %631 = add i32 %630, %186
  %632 = sub i32 %631, %188
  %633 = add i32 %632, %191
  %634 = add i32 %633, %194
  %635 = sub i32 %634, %195
  %636 = add i32 %635, %196
  %637 = sub i32 %636, %200
  %638 = sub i32 %637, %202
  %639 = sub i32 %638, %203
  %640 = add i32 %639, %206
  %641 = sub i32 %640, %207
  %642 = add i32 %641, %208
  %643 = add i32 %642, %209
  %644 = add i32 %643, %212
  %645 = add i32 %644, %215
  %646 = sub i32 %645, %216
  %647 = add i32 %646, %457
  %648 = add i32 %647, %52
  %649 = sub i32 %648, %67
  %650 = sub i32 %649, %86
  %651 = sub i32 %650, %93
  %652 = add i32 %651, %96
  %653 = sub i32 %652, %100
  %654 = sub i32 %653, %109
  %655 = sub i32 %654, %137
  %656 = sub i32 %655, %143
  %657 = sub i32 %656, %152
  %658 = add i32 %657, %155
  %659 = sub i32 %658, %157
  %660 = sub i32 %659, %163
  %661 = sub i32 %660, %165
  %662 = sub i32 %661, %168
  %663 = add i32 %662, %171
  %664 = sub i32 %663, %183
  %665 = sub i32 %664, %193
  %666 = sub i32 %665, %205
  %667 = sub i32 %666, %211
  %668 = add i32 %667, %219
  %669 = sub i32 %668, %221
  %670 = sub i32 %669, %232
  %671 = add i32 %670, %327
  %672 = add i32 %671, %230
  %673 = add i32 %672, %348
  %674 = add i32 %673, %338
  %675 = sub i32 %674, %229
  %676 = add i32 %675, %5
  %677 = add i32 %676, %484
  %678 = sub i32 %677, %125
  %679 = sub i32 %678, %223
  %680 = sub i32 %679, %231
  %681 = add i32 %680, %253
  %682 = add i32 %681, %254
  %683 = add i32 %682, %236
  %684 = sub i32 %683, %264
  %685 = sub i32 %684, %226
  %686 = sub i32 %685, %247
  %687 = add i32 %686, %276
  %688 = add i32 %687, %279
  %689 = sub i32 %688, %283
  %690 = add i32 %689, %298
  %691 = sub i32 %690, %310
  %692 = add i32 %691, %311
  %693 = add i32 %692, %15
  %694 = add i32 %693, %324
  %695 = sub i32 %694, %239
  %696 = sub i32 %695, %339
  %697 = add i32 %696, %346
  %698 = sub i32 %697, %353
  %699 = add i32 %698, %359
  %700 = add i32 %699, %383
  %701 = add i32 %700, %407
  %702 = add i32 %701, %415
  %703 = sub i32 %702, %424
  %704 = add i32 %703, %227
  %705 = sub i32 %704, %427
  %706 = sub i32 %705, %433
  %707 = add i32 %706, %439
  %708 = add i32 %707, %443
  %709 = sub i32 %708, %464
  %710 = add i32 %709, %273
  %711 = sub i32 %710, %14
  %712 = sub i32 %711, %474
  %713 = add i32 %712, %488
  %714 = add i32 %713, %546
  %715 = sub i32 %714, %79
  %716 = add i32 %715, %225
  %717 = add i32 %716, %228
  %718 = sub i32 %717, %233
  %719 = add i32 %718, %235
  %720 = add i32 %719, %238
  %721 = sub i32 %720, %240
  %722 = sub i32 %721, %244
  %723 = add i32 %722, %245
  %724 = add i32 %723, %246
  %725 = sub i32 %724, %256
  %726 = sub i32 %725, %263
  %727 = add i32 %726, %272
  %728 = sub i32 %727, %277
  %729 = add i32 %728, %278
  %730 = sub i32 %729, %284
  %731 = add i32 %730, %285
  %732 = sub i32 %731, %286
  %733 = add i32 %732, %288
  %734 = add i32 %733, %295
  %735 = sub i32 %734, %296
  %736 = sub i32 %735, %297
  %737 = add i32 %736, %301
  %738 = sub i32 %737, %302
  %739 = sub i32 %738, %304
  %740 = add i32 %739, %305
  %741 = sub i32 %740, %306
  %742 = add i32 %741, %307
  %743 = add i32 %742, %308
  %744 = sub i32 %743, %312
  %745 = sub i32 %744, %314
  %746 = add i32 %745, %319
  %747 = sub i32 %746, %320
  %748 = add i32 %747, %321
  %749 = add i32 %748, %322
  %750 = sub i32 %749, %323
  %751 = add i32 %750, %325
  %752 = sub i32 %751, %326
  %753 = sub i32 %752, %328
  %754 = sub i32 %753, %333
  %755 = sub i32 %754, %337
  %756 = sub i32 %755, %342
  %757 = sub i32 %756, %343
  %758 = add i32 %757, %344
  %759 = add i32 %758, %345
  %760 = add i32 %759, %347
  %761 = add i32 %760, %349
  %762 = add i32 %761, %352
  %763 = sub i32 %762, %354
  %764 = sub i32 %763, %358
  %765 = sub i32 %764, %360
  %766 = sub i32 %765, %362
  %767 = sub i32 %766, %364
  %768 = add i32 %767, %366
  %769 = sub i32 %768, %373
  %770 = sub i32 %769, %374
  %771 = add i32 %770, %375
  %772 = add i32 %771, %379
  %773 = add i32 %772, %380
  %774 = add i32 %773, %384
  %775 = sub i32 %774, %385
  %776 = sub i32 %775, %386
  %777 = sub i32 %776, %390
  %778 = sub i32 %777, %391
  %779 = add i32 %778, %392
  %780 = add i32 %779, %393
  %781 = sub i32 %780, %394
  %782 = add i32 %781, %395
  %783 = add i32 %782, %396
  %784 = sub i32 %783, %397
  %785 = add i32 %784, %400
  %786 = add i32 %785, %401
  %787 = add i32 %786, %402
  %788 = sub i32 %787, %403
  %789 = sub i32 %788, %404
  %790 = add i32 %789, %405
  %791 = sub i32 %790, %406
  %792 = add i32 %791, %410
  %793 = add i32 %792, %413
  %794 = sub i32 %793, %414
  %795 = add i32 %794, %416
  %796 = sub i32 %795, %417
  %797 = add i32 %796, %419
  %798 = sub i32 %797, %420
  %799 = add i32 %798, %421
  %800 = sub i32 %799, %422
  %801 = add i32 %800, %423
  %802 = sub i32 %801, %398
  %803 = add i32 %802, %428
  %804 = sub i32 %803, %429
  %805 = add i32 %804, %430
  %806 = add i32 %805, %250
  %807 = add i32 %806, %432
  %808 = add i32 %807, %435
  %809 = add i32 %808, %436
  %810 = add i32 %809, %355
  %811 = add i32 %810, %446
  %812 = sub i32 %811, %448
  %813 = sub i32 %812, %452
  %814 = sub i32 %813, %453
  %815 = add i32 %814, %454
  %816 = sub i32 %815, %456
  %817 = add i32 %816, %458
  %818 = add i32 %817, %459
  %819 = add i32 %818, %460
  %820 = sub i32 %819, %461
  %821 = sub i32 %820, %467
  %822 = sub i32 %821, %469
  %823 = sub i32 %822, %471
  %824 = sub i32 %823, %472
  %825 = add i32 %824, %473
  %826 = sub i32 %825, %482
  %827 = sub i32 %826, %483
  %828 = sub i32 %827, %485
  %829 = sub i32 %828, %486
  %830 = sub i32 %829, %489
  %831 = add i32 %830, %251
  %832 = sub i32 %831, %261
  %833 = sub i32 %832, %267
  %834 = sub i32 %833, %271
  %835 = sub i32 %834, %281
  %836 = sub i32 %835, %290
  %837 = sub i32 %836, %292
  %838 = sub i32 %837, %294
  %839 = sub i32 %838, %300
  %840 = sub i32 %839, %316
  %841 = add i32 %840, %318
  %842 = add i32 %841, %336
  %843 = sub i32 %842, %351
  %844 = sub i32 %843, %357
  %845 = sub i32 %844, %361
  %846 = sub i32 %845, %363
  %847 = sub i32 %846, %368
  %848 = sub i32 %847, %370
  %849 = add i32 %848, %372
  %850 = sub i32 %849, %378
  %851 = sub i32 %850, %382
  %852 = sub i32 %851, %388
  %853 = add i32 %852, %399
  %854 = sub i32 %853, %409
  %855 = sub i32 %854, %426
  %856 = add i32 %855, %431
  %857 = add i32 %856, %434
  %858 = sub i32 %857, %438
  %859 = sub i32 %858, %441
  %860 = sub i32 %859, %442
  %861 = sub i32 %860, %445
  %862 = add i32 %861, %447
  %863 = sub i32 %862, %449
  %864 = sub i32 %863, %450
  %865 = sub i32 %864, %470
  %866 = sub i32 %865, %476
  %867 = sub i32 %866, %479
  %868 = sub i32 %867, %481
  %869 = add i32 %868, %491
  %870 = add i32 %869, %493
  %871 = add i32 %870, %496
  %872 = add i32 %871, %499
  %873 = add i32 %872, %500
  %874 = sub i32 %873, %332
  %875 = add i32 %874, %548
  %876 = add i32 %875, %544
  %877 = add i32 %876, %539
  %878 = add i32 %877, %556
  %879 = add i32 %878, %533
  %880 = icmp eq i32 %26, %879
  %881 = select i1 %880, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %882 = tail call i32 @puts(i8* nonnull dereferenceable(1) %881)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
