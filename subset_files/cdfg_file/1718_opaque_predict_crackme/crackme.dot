digraph "DFG for'crackme' function" {
	Node0x1170bd0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1170c40[shape=record, label="  %6 = xor i32 %3, %0"];
	Node0x1170cb0[shape=record, label="  %7 = and i32 %3, %0"];
	Node0x1171330[shape=record, label="  %8 = sub i32 1, %5"];
	Node0x11713a0[shape=record, label="  %9 = add i32 %8, %6"];
	Node0x1171410[shape=record, label="  %10 = add i32 %9, %7"];
	Node0x11714b0[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x1171520[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x1171590[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1171630[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x11716a0[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x1171710[shape=record, label="  %16 = shl i32 %11, 1"];
	Node0x1171780[shape=record, label="  %17 = or i32 %2, %1"];
	Node0x11717f0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x1171890[shape=record, label="  %19 = mul i32 %18, 5"];
	Node0x1171900[shape=record, label="  %20 = xor i32 %1, -1"];
	Node0x1171970[shape=record, label="  %21 = and i32 %20, %2"];
	Node0x11719e0[shape=record, label="  %22 = or i32 %3, %0"];
	Node0x1171a50[shape=record, label="  %23 = xor i32 %0, -1"];
	Node0x1171ac0[shape=record, label="  %24 = and i32 %23, %3"];
	Node0x1171b30[shape=record, label="  %25 = or i32 %23, %3"];
	Node0x1171ba0[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x1171c10[shape=record, label="  %27 = xor i32 %22, -1"];
	Node0x1171c80[shape=record, label="  %28 = xor i32 %25, -1"];
	Node0x1171cf0[shape=record, label="  %29 = add i32 %21, %28"];
	Node0x1171d60[shape=record, label="  %30 = add i32 %29, %7"];
	Node0x1171dd0[shape=record, label="  %31 = add i32 %30, %27"];
	Node0x1171e70[shape=record, label="  %32 = mul i32 %31, 3"];
	Node0x1172120[shape=record, label="  %33 = shl i32 %1, 2"];
	Node0x1172190[shape=record, label="  %34 = add i32 %24, %3"];
	Node0x1172200[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x1172270[shape=record, label="  %36 = sub i32 3, %1"];
	Node0x11722e0[shape=record, label="  %37 = add i32 %36, %15"];
	Node0x1172350[shape=record, label="  %38 = sub i32 %37, %16"];
	Node0x11723c0[shape=record, label="  %39 = sub i32 %38, %17"];
	Node0x1172430[shape=record, label="  %40 = add i32 %39, %19"];
	Node0x11724a0[shape=record, label="  %41 = sub i32 %40, %22"];
	Node0x1172510[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x1172580[shape=record, label="  %43 = sub i32 %42, %14"];
	Node0x11725f0[shape=record, label="  %44 = sub i32 %43, %26"];
	Node0x1172660[shape=record, label="  %45 = add i32 %44, %33"];
	Node0x11726d0[shape=record, label="  %46 = add i32 %45, %35"];
	Node0x1172740[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x11727b0[shape=record, label="  %48 = icmp eq i32 %10, %47"];
	Node0x1111268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1172c50[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x1172ca0[shape=record, label="  ret void"];
	Node0x1170bd0 -> Node0x1170c40;
	Node0x1170c40 -> Node0x1170cb0;
	Node0x1170cb0 -> Node0x1171330;
	Node0x1171330 -> Node0x11713a0;
	Node0x11713a0 -> Node0x1171410;
	Node0x1171410 -> Node0x11714b0;
	Node0x11714b0 -> Node0x1171520;
	Node0x1171520 -> Node0x1171590;
	Node0x1171590 -> Node0x1171630;
	Node0x1171630 -> Node0x11716a0;
	Node0x11716a0 -> Node0x1171710;
	Node0x1171710 -> Node0x1171780;
	Node0x1171780 -> Node0x11717f0;
	Node0x11717f0 -> Node0x1171890;
	Node0x1171890 -> Node0x1171900;
	Node0x1171900 -> Node0x1171970;
	Node0x1171970 -> Node0x11719e0;
	Node0x11719e0 -> Node0x1171a50;
	Node0x1171a50 -> Node0x1171ac0;
	Node0x1171ac0 -> Node0x1171b30;
	Node0x1171b30 -> Node0x1171ba0;
	Node0x1171ba0 -> Node0x1171c10;
	Node0x1171c10 -> Node0x1171c80;
	Node0x1171c80 -> Node0x1171cf0;
	Node0x1171cf0 -> Node0x1171d60;
	Node0x1171d60 -> Node0x1171dd0;
	Node0x1171dd0 -> Node0x1171e70;
	Node0x1171e70 -> Node0x1172120;
	Node0x1172120 -> Node0x1172190;
	Node0x1172190 -> Node0x1172200;
	Node0x1172200 -> Node0x1172270;
	Node0x1172270 -> Node0x11722e0;
	Node0x11722e0 -> Node0x1172350;
	Node0x1172350 -> Node0x11723c0;
	Node0x11723c0 -> Node0x1172430;
	Node0x1172430 -> Node0x11724a0;
	Node0x11724a0 -> Node0x1172510;
	Node0x1172510 -> Node0x1172580;
	Node0x1172580 -> Node0x11725f0;
	Node0x11725f0 -> Node0x1172660;
	Node0x1172660 -> Node0x11726d0;
	Node0x11726d0 -> Node0x1172740;
	Node0x1172740 -> Node0x11727b0;
	Node0x11727b0 -> Node0x1111268;
	Node0x1111268 -> Node0x1172c50;
	Node0x1172c50 -> Node0x1172ca0;
edge [color=red]
	Node0x1170bd0 -> Node0x1171330;
	Node0x1171330 -> Node0x11713a0;
	Node0x1170c40 -> Node0x11713a0;
	Node0x11713a0 -> Node0x1171410;
	Node0x1170cb0 -> Node0x1171410;
	Node0x11714b0 -> Node0x1171520;
	Node0x1171520 -> Node0x1171590;
	Node0x1171590 -> Node0x1171630;
	Node0x11714b0 -> Node0x1171710;
	Node0x1171780 -> Node0x11717f0;
	Node0x11717f0 -> Node0x1171890;
	Node0x1171900 -> Node0x1171970;
	Node0x1171a50 -> Node0x1171ac0;
	Node0x1171a50 -> Node0x1171b30;
	Node0x1171b30 -> Node0x1171ba0;
	Node0x11719e0 -> Node0x1171c10;
	Node0x1171b30 -> Node0x1171c80;
	Node0x1171970 -> Node0x1171cf0;
	Node0x1171c80 -> Node0x1171cf0;
	Node0x1171cf0 -> Node0x1171d60;
	Node0x1170cb0 -> Node0x1171d60;
	Node0x1171d60 -> Node0x1171dd0;
	Node0x1171c10 -> Node0x1171dd0;
	Node0x1171dd0 -> Node0x1171e70;
	Node0x1171ac0 -> Node0x1172190;
	Node0x1172190 -> Node0x1172200;
	Node0x1172270 -> Node0x11722e0;
	Node0x11716a0 -> Node0x11722e0;
	Node0x11722e0 -> Node0x1172350;
	Node0x1171710 -> Node0x1172350;
	Node0x1172350 -> Node0x11723c0;
	Node0x1171780 -> Node0x11723c0;
	Node0x11723c0 -> Node0x1172430;
	Node0x1171890 -> Node0x1172430;
	Node0x1172430 -> Node0x11724a0;
	Node0x11719e0 -> Node0x11724a0;
	Node0x11724a0 -> Node0x1172510;
	Node0x1171ac0 -> Node0x1172510;
	Node0x1172510 -> Node0x1172580;
	Node0x1171630 -> Node0x1172580;
	Node0x1172580 -> Node0x11725f0;
	Node0x1171ba0 -> Node0x11725f0;
	Node0x11725f0 -> Node0x1172660;
	Node0x1172120 -> Node0x1172660;
	Node0x1172660 -> Node0x11726d0;
	Node0x1172200 -> Node0x11726d0;
	Node0x11726d0 -> Node0x1172740;
	Node0x1171e70 -> Node0x1172740;
	Node0x1171410 -> Node0x11727b0;
	Node0x1172740 -> Node0x11727b0;
	Node0x11727b0 -> Node0x1111268;
	Node0x1111268 -> Node0x1172c50;
}
