digraph "DFG for'main' function" {
	Node0x5eec88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5eed08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5eed98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x5ef1f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x5ef2d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x5ef3f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5ef630[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x5ef6e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5f0658[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x5f0ce0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x5f0d50[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x5f0dc0[shape=record, label="  %10 = sub i32 %9, %6"];
	Node0x5f0e30[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x5f0ea0[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x5f0f10[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x5f0f80[shape=record, label="  %14 = xor i32 %6, -1"];
	Node0x5f0ff0[shape=record, label="  %15 = mul i32 %14, 3"];
	Node0x5f1060[shape=record, label="  %16 = xor i32 %7, %6"];
	Node0x5f10d0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x5f1140[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x5f11b0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x5f1220[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x5f1290[shape=record, label="  %21 = shl i32 %12, 2"];
	Node0x5f1300[shape=record, label="  %22 = add i32 %15, 1"];
	Node0x5f1370[shape=record, label="  %23 = add i32 %22, %7"];
	Node0x5f13e0[shape=record, label="  %24 = add i32 %23, %13"];
	Node0x5f1450[shape=record, label="  %25 = sub i32 %24, %18"];
	Node0x5f14c0[shape=record, label="  %26 = sub i32 %25, %8"];
	Node0x5f1530[shape=record, label="  %27 = sub i32 %26, %17"];
	Node0x5f15a0[shape=record, label="  %28 = add i32 %27, %21"];
	Node0x5f1610[shape=record, label="  %29 = sub i32 %28, %20"];
	Node0x5f1680[shape=record, label="  %30 = icmp eq i32 %10, %29"];
	Node0x58f9d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x5f1710[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x5f1b78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5f1cd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x5f1d98[shape=record, label="  ret i32 0"];
	Node0x5eec88 -> Node0x5eed08;
	Node0x5eed08 -> Node0x5eed98;
	Node0x5eed98 -> Node0x5ef1f8;
	Node0x5ef1f8 -> Node0x5ef2d8;
	Node0x5ef2d8 -> Node0x5ef3f8;
	Node0x5ef3f8 -> Node0x5ef630;
	Node0x5ef630 -> Node0x5ef6e8;
	Node0x5ef6e8 -> Node0x5f0658;
	Node0x5f0658 -> Node0x5f0ce0;
	Node0x5f0ce0 -> Node0x5f0d50;
	Node0x5f0d50 -> Node0x5f0dc0;
	Node0x5f0dc0 -> Node0x5f0e30;
	Node0x5f0e30 -> Node0x5f0ea0;
	Node0x5f0ea0 -> Node0x5f0f10;
	Node0x5f0f10 -> Node0x5f0f80;
	Node0x5f0f80 -> Node0x5f0ff0;
	Node0x5f0ff0 -> Node0x5f1060;
	Node0x5f1060 -> Node0x5f10d0;
	Node0x5f10d0 -> Node0x5f1140;
	Node0x5f1140 -> Node0x5f11b0;
	Node0x5f11b0 -> Node0x5f1220;
	Node0x5f1220 -> Node0x5f1290;
	Node0x5f1290 -> Node0x5f1300;
	Node0x5f1300 -> Node0x5f1370;
	Node0x5f1370 -> Node0x5f13e0;
	Node0x5f13e0 -> Node0x5f1450;
	Node0x5f1450 -> Node0x5f14c0;
	Node0x5f14c0 -> Node0x5f1530;
	Node0x5f1530 -> Node0x5f15a0;
	Node0x5f15a0 -> Node0x5f1610;
	Node0x5f1610 -> Node0x5f1680;
	Node0x5f1680 -> Node0x58f9d8;
	Node0x58f9d8 -> Node0x5f1710;
	Node0x5f1710 -> Node0x5f1b78;
	Node0x5f1b78 -> Node0x5f1cd8;
	Node0x5f1cd8 -> Node0x5f1d98;
edge [color=red]
	Node0x5eec88 -> Node0x5eed98;
	Node0x5eed98 -> Node0x5ef1f8;
	Node0x5eed08 -> Node0x5ef2d8;
	Node0x5ef2d8 -> Node0x5ef3f8;
	Node0x5eec88 -> Node0x5ef630;
	Node0x5eed08 -> Node0x5ef630;
	Node0x5eec88 -> Node0x5ef6e8;
	Node0x5eed08 -> Node0x5f0658;
	Node0x5f0658 -> Node0x5f0ce0;
	Node0x5ef6e8 -> Node0x5f0ce0;
	Node0x5f0ce0 -> Node0x5f0d50;
	Node0x5f0d50 -> Node0x5f0dc0;
	Node0x5ef6e8 -> Node0x5f0dc0;
	Node0x5f0658 -> Node0x5f0e30;
	Node0x5ef6e8 -> Node0x5f0ea0;
	Node0x5f0e30 -> Node0x5f0ea0;
	Node0x5f0ea0 -> Node0x5f0f10;
	Node0x5ef6e8 -> Node0x5f0f80;
	Node0x5f0f80 -> Node0x5f0ff0;
	Node0x5f0658 -> Node0x5f1060;
	Node0x5ef6e8 -> Node0x5f1060;
	Node0x5f1060 -> Node0x5f10d0;
	Node0x5f0658 -> Node0x5f1140;
	Node0x5ef6e8 -> Node0x5f1140;
	Node0x5f1140 -> Node0x5f11b0;
	Node0x5f11b0 -> Node0x5f1220;
	Node0x5f0ea0 -> Node0x5f1290;
	Node0x5f0ff0 -> Node0x5f1300;
	Node0x5f1300 -> Node0x5f1370;
	Node0x5f0658 -> Node0x5f1370;
	Node0x5f1370 -> Node0x5f13e0;
	Node0x5f0f10 -> Node0x5f13e0;
	Node0x5f13e0 -> Node0x5f1450;
	Node0x5f1140 -> Node0x5f1450;
	Node0x5f1450 -> Node0x5f14c0;
	Node0x5f0ce0 -> Node0x5f14c0;
	Node0x5f14c0 -> Node0x5f1530;
	Node0x5f10d0 -> Node0x5f1530;
	Node0x5f1530 -> Node0x5f15a0;
	Node0x5f1290 -> Node0x5f15a0;
	Node0x5f15a0 -> Node0x5f1610;
	Node0x5f1220 -> Node0x5f1610;
	Node0x5f0dc0 -> Node0x5f1680;
	Node0x5f1610 -> Node0x5f1680;
	Node0x5f1680 -> Node0x58f9d8;
	Node0x58f9d8 -> Node0x5f1710;
	Node0x5ef2d8 -> Node0x5f1b78;
	Node0x5eed98 -> Node0x5f1cd8;
}
