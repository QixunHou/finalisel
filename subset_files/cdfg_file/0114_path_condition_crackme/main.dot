digraph "DFG for'main' function" {
	Node0x54f058[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x54f108[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x54f198[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x54f5f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x54f6d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x54f7f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x54fa30[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x54fae8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x550a58[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x5510e0[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x551150[shape=record, label="  %9 = add i32 %7, %6"];
	Node0x5511c0[shape=record, label="  %10 = and i32 %7, %6"];
	Node0x551230[shape=record, label="  %11 = sub i32 %9, %10"];
	Node0x5512a0[shape=record, label="  %12 = icmp eq i32 %8, %11"];
	Node0x551328[shape=record, label="  %13 = select i1 %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x5513c0[shape=record, label="  %14 = call i32 @puts(i8* nonnull dereferenceable(1) %13) #5"];
	Node0x551618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x551778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x551838[shape=record, label="  ret i32 0"];
	Node0x54f058 -> Node0x54f108;
	Node0x54f108 -> Node0x54f198;
	Node0x54f198 -> Node0x54f5f8;
	Node0x54f5f8 -> Node0x54f6d8;
	Node0x54f6d8 -> Node0x54f7f8;
	Node0x54f7f8 -> Node0x54fa30;
	Node0x54fa30 -> Node0x54fae8;
	Node0x54fae8 -> Node0x550a58;
	Node0x550a58 -> Node0x5510e0;
	Node0x5510e0 -> Node0x551150;
	Node0x551150 -> Node0x5511c0;
	Node0x5511c0 -> Node0x551230;
	Node0x551230 -> Node0x5512a0;
	Node0x5512a0 -> Node0x551328;
	Node0x551328 -> Node0x5513c0;
	Node0x5513c0 -> Node0x551618;
	Node0x551618 -> Node0x551778;
	Node0x551778 -> Node0x551838;
edge [color=red]
	Node0x54f058 -> Node0x54f198;
	Node0x54f198 -> Node0x54f5f8;
	Node0x54f108 -> Node0x54f6d8;
	Node0x54f6d8 -> Node0x54f7f8;
	Node0x54f058 -> Node0x54fa30;
	Node0x54f108 -> Node0x54fa30;
	Node0x54f058 -> Node0x54fae8;
	Node0x54f108 -> Node0x550a58;
	Node0x550a58 -> Node0x5510e0;
	Node0x54fae8 -> Node0x5510e0;
	Node0x550a58 -> Node0x551150;
	Node0x54fae8 -> Node0x551150;
	Node0x550a58 -> Node0x5511c0;
	Node0x54fae8 -> Node0x5511c0;
	Node0x551150 -> Node0x551230;
	Node0x5511c0 -> Node0x551230;
	Node0x5510e0 -> Node0x5512a0;
	Node0x551230 -> Node0x5512a0;
	Node0x5512a0 -> Node0x551328;
	Node0x551328 -> Node0x5513c0;
	Node0x54f6d8 -> Node0x551618;
	Node0x54f198 -> Node0x551778;
}
