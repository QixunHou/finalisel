digraph "DFG for'crackme' function" {
	Node0x5397d0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x539e50[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x539ef0[shape=record, label="  %7 = mul i32 %6, -4"];
	Node0x539f60[shape=record, label="  %8 = add i32 %7, %5"];
	Node0x539fd0[shape=record, label="  %9 = and i32 %3, %0"];
	Node0x53a070[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x53a110[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x53a180[shape=record, label="  %12 = sub i32 %8, %11"];
	Node0x53a1f0[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0x53a260[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x53a2d0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x53a340[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x53a3b0[shape=record, label="  %17 = or i32 %13, %1"];
	Node0x53a420[shape=record, label="  %18 = and i32 %13, %1"];
	Node0x53a490[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x53a500[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x53a570[shape=record, label="  %21 = or i32 %2, %1"];
	Node0x53a5e0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x53a650[shape=record, label="  %23 = shl i32 %17, 1"];
	Node0x53a6c0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x53a760[shape=record, label="  %25 = shl i32 %18, 2"];
	Node0x53a7d0[shape=record, label="  %26 = shl i32 %14, 2"];
	Node0x53a840[shape=record, label="  %27 = xor i32 %0, -1"];
	Node0x53a8b0[shape=record, label="  %28 = or i32 %27, %3"];
	Node0x53a920[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x53a990[shape=record, label="  %30 = xor i32 %3, %0"];
	Node0x53aa00[shape=record, label="  %31 = and i32 %27, %3"];
	Node0x53aa70[shape=record, label="  %32 = xor i32 %31, -1"];
	Node0x53acf0[shape=record, label="  %33 = or i32 %3, %0"];
	Node0x53ad60[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x53add0[shape=record, label="  %35 = xor i32 %33, -1"];
	Node0x53ae40[shape=record, label="  %36 = xor i32 %28, -1"];
	Node0x53aeb0[shape=record, label="  %37 = shl i32 %31, 1"];
	Node0x53af20[shape=record, label="  %38 = add i32 %36, %22"];
	Node0x53afc0[shape=record, label="  %39 = mul i32 %38, -3"];
	Node0x53b060[shape=record, label="  %40 = sub i32 3, %0"];
	Node0x53b0d0[shape=record, label="  %41 = add i32 %40, %13"];
	Node0x53b140[shape=record, label="  %42 = sub i32 %41, %17"];
	Node0x53b1b0[shape=record, label="  %43 = add i32 %42, %3"];
	Node0x53b220[shape=record, label="  %44 = add i32 %43, %25"];
	Node0x53b290[shape=record, label="  %45 = sub i32 %44, %26"];
	Node0x53b300[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x53b370[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x53b3e0[shape=record, label="  %48 = add i32 %47, %35"];
	Node0x53b450[shape=record, label="  %49 = add i32 %48, %9"];
	Node0x53b4c0[shape=record, label="  %50 = sub i32 %49, %16"];
	Node0x53b530[shape=record, label="  %51 = add i32 %50, %20"];
	Node0x53b5a0[shape=record, label="  %52 = add i32 %51, %24"];
	Node0x53b610[shape=record, label="  %53 = sub i32 %52, %29"];
	Node0x53b680[shape=record, label="  %54 = add i32 %53, %34"];
	Node0x53b6f0[shape=record, label="  %55 = sub i32 %54, %37"];
	Node0x53b760[shape=record, label="  %56 = add i32 %55, %39"];
	Node0x53b7d0[shape=record, label="  %57 = icmp eq i32 %12, %56"];
	Node0x4da268[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x53bc70[shape=record, label="  %59 = tail call i32 @puts(i8* nonnull dereferenceable(1) %58)"];
	Node0x53bcc0[shape=record, label="  ret void"];
	Node0x5397d0 -> Node0x539e50;
	Node0x539e50 -> Node0x539ef0;
	Node0x539ef0 -> Node0x539f60;
	Node0x539f60 -> Node0x539fd0;
	Node0x539fd0 -> Node0x53a070;
	Node0x53a070 -> Node0x53a110;
	Node0x53a110 -> Node0x53a180;
	Node0x53a180 -> Node0x53a1f0;
	Node0x53a1f0 -> Node0x53a260;
	Node0x53a260 -> Node0x53a2d0;
	Node0x53a2d0 -> Node0x53a340;
	Node0x53a340 -> Node0x53a3b0;
	Node0x53a3b0 -> Node0x53a420;
	Node0x53a420 -> Node0x53a490;
	Node0x53a490 -> Node0x53a500;
	Node0x53a500 -> Node0x53a570;
	Node0x53a570 -> Node0x53a5e0;
	Node0x53a5e0 -> Node0x53a650;
	Node0x53a650 -> Node0x53a6c0;
	Node0x53a6c0 -> Node0x53a760;
	Node0x53a760 -> Node0x53a7d0;
	Node0x53a7d0 -> Node0x53a840;
	Node0x53a840 -> Node0x53a8b0;
	Node0x53a8b0 -> Node0x53a920;
	Node0x53a920 -> Node0x53a990;
	Node0x53a990 -> Node0x53aa00;
	Node0x53aa00 -> Node0x53aa70;
	Node0x53aa70 -> Node0x53acf0;
	Node0x53acf0 -> Node0x53ad60;
	Node0x53ad60 -> Node0x53add0;
	Node0x53add0 -> Node0x53ae40;
	Node0x53ae40 -> Node0x53aeb0;
	Node0x53aeb0 -> Node0x53af20;
	Node0x53af20 -> Node0x53afc0;
	Node0x53afc0 -> Node0x53b060;
	Node0x53b060 -> Node0x53b0d0;
	Node0x53b0d0 -> Node0x53b140;
	Node0x53b140 -> Node0x53b1b0;
	Node0x53b1b0 -> Node0x53b220;
	Node0x53b220 -> Node0x53b290;
	Node0x53b290 -> Node0x53b300;
	Node0x53b300 -> Node0x53b370;
	Node0x53b370 -> Node0x53b3e0;
	Node0x53b3e0 -> Node0x53b450;
	Node0x53b450 -> Node0x53b4c0;
	Node0x53b4c0 -> Node0x53b530;
	Node0x53b530 -> Node0x53b5a0;
	Node0x53b5a0 -> Node0x53b610;
	Node0x53b610 -> Node0x53b680;
	Node0x53b680 -> Node0x53b6f0;
	Node0x53b6f0 -> Node0x53b760;
	Node0x53b760 -> Node0x53b7d0;
	Node0x53b7d0 -> Node0x4da268;
	Node0x4da268 -> Node0x53bc70;
	Node0x53bc70 -> Node0x53bcc0;
edge [color=red]
	Node0x5397d0 -> Node0x539e50;
	Node0x539e50 -> Node0x539ef0;
	Node0x539ef0 -> Node0x539f60;
	Node0x5397d0 -> Node0x539f60;
	Node0x539fd0 -> Node0x53a070;
	Node0x53a070 -> Node0x53a110;
	Node0x539f60 -> Node0x53a180;
	Node0x53a110 -> Node0x53a180;
	Node0x53a260 -> Node0x53a2d0;
	Node0x53a2d0 -> Node0x53a340;
	Node0x53a1f0 -> Node0x53a3b0;
	Node0x53a1f0 -> Node0x53a420;
	Node0x53a420 -> Node0x53a490;
	Node0x53a490 -> Node0x53a500;
	Node0x53a570 -> Node0x53a5e0;
	Node0x53a3b0 -> Node0x53a650;
	Node0x53a650 -> Node0x53a6c0;
	Node0x53a420 -> Node0x53a760;
	Node0x53a260 -> Node0x53a7d0;
	Node0x53a840 -> Node0x53a8b0;
	Node0x53a8b0 -> Node0x53a920;
	Node0x53a840 -> Node0x53aa00;
	Node0x53aa00 -> Node0x53aa70;
	Node0x53acf0 -> Node0x53ad60;
	Node0x53acf0 -> Node0x53add0;
	Node0x53a8b0 -> Node0x53ae40;
	Node0x53aa00 -> Node0x53aeb0;
	Node0x53ae40 -> Node0x53af20;
	Node0x53a5e0 -> Node0x53af20;
	Node0x53af20 -> Node0x53afc0;
	Node0x53b060 -> Node0x53b0d0;
	Node0x53a1f0 -> Node0x53b0d0;
	Node0x53b0d0 -> Node0x53b140;
	Node0x53a3b0 -> Node0x53b140;
	Node0x53b140 -> Node0x53b1b0;
	Node0x53b1b0 -> Node0x53b220;
	Node0x53a760 -> Node0x53b220;
	Node0x53b220 -> Node0x53b290;
	Node0x53a7d0 -> Node0x53b290;
	Node0x53b290 -> Node0x53b300;
	Node0x53a990 -> Node0x53b300;
	Node0x53b300 -> Node0x53b370;
	Node0x53aa70 -> Node0x53b370;
	Node0x53b370 -> Node0x53b3e0;
	Node0x53add0 -> Node0x53b3e0;
	Node0x53b3e0 -> Node0x53b450;
	Node0x539fd0 -> Node0x53b450;
	Node0x53b450 -> Node0x53b4c0;
	Node0x53a340 -> Node0x53b4c0;
	Node0x53b4c0 -> Node0x53b530;
	Node0x53a500 -> Node0x53b530;
	Node0x53b530 -> Node0x53b5a0;
	Node0x53a6c0 -> Node0x53b5a0;
	Node0x53b5a0 -> Node0x53b610;
	Node0x53a920 -> Node0x53b610;
	Node0x53b610 -> Node0x53b680;
	Node0x53ad60 -> Node0x53b680;
	Node0x53b680 -> Node0x53b6f0;
	Node0x53aeb0 -> Node0x53b6f0;
	Node0x53b6f0 -> Node0x53b760;
	Node0x53afc0 -> Node0x53b760;
	Node0x53a180 -> Node0x53b7d0;
	Node0x53b760 -> Node0x53b7d0;
	Node0x53b7d0 -> Node0x4da268;
	Node0x4da268 -> Node0x53bc70;
}
