digraph "DFG for'main' function" {
	Node0xd4eef8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd4ef78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd4f008[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xd4f468[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xd4f548[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xd4f668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd4f8a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xd4f958[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd508c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd50f50[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xd50fc0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0xd51030[shape=record, label="  %10 = mul i32 %9, -2"];
	Node0xd510a0[shape=record, label="  %11 = and i32 %6, %8"];
	Node0xd51110[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0xd51180[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0xd511f0[shape=record, label="  %14 = and i32 %7, %6"];
	Node0xd51260[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0xd512d0[shape=record, label="  %16 = or i32 %7, %6"];
	Node0xd51340[shape=record, label="  %17 = shl i32 %6, 2"];
	Node0xd513b0[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0xd51420[shape=record, label="  %19 = xor i32 %16, -1"];
	Node0xd51490[shape=record, label="  %20 = xor i32 %9, -1"];
	Node0xd51500[shape=record, label="  %21 = mul i32 %11, -3"];
	Node0xd51570[shape=record, label="  %22 = mul i32 %14, -5"];
	Node0xd515e0[shape=record, label="  %23 = add i32 %20, %19"];
	Node0xd51650[shape=record, label="  %24 = mul i32 %23, -9"];
	Node0xd516c0[shape=record, label="  %25 = sub i32 %7, %6"];
	Node0xd51730[shape=record, label="  %26 = add i32 %25, %15"];
	Node0xd517a0[shape=record, label="  %27 = add i32 %26, %16"];
	Node0xd51810[shape=record, label="  %28 = add i32 %27, %18"];
	Node0xd51880[shape=record, label="  %29 = add i32 %28, %21"];
	Node0xd518f0[shape=record, label="  %30 = add i32 %29, %22"];
	Node0xd51960[shape=record, label="  %31 = add i32 %30, %13"];
	Node0xd519d0[shape=record, label="  %32 = add i32 %31, %24"];
	Node0xd51c50[shape=record, label="  %33 = icmp eq i32 %10, %32"];
	Node0xcef9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xd51ce0[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0xd51f38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd52098[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xd52158[shape=record, label="  ret i32 0"];
	Node0xd4eef8 -> Node0xd4ef78;
	Node0xd4ef78 -> Node0xd4f008;
	Node0xd4f008 -> Node0xd4f468;
	Node0xd4f468 -> Node0xd4f548;
	Node0xd4f548 -> Node0xd4f668;
	Node0xd4f668 -> Node0xd4f8a0;
	Node0xd4f8a0 -> Node0xd4f958;
	Node0xd4f958 -> Node0xd508c8;
	Node0xd508c8 -> Node0xd50f50;
	Node0xd50f50 -> Node0xd50fc0;
	Node0xd50fc0 -> Node0xd51030;
	Node0xd51030 -> Node0xd510a0;
	Node0xd510a0 -> Node0xd51110;
	Node0xd51110 -> Node0xd51180;
	Node0xd51180 -> Node0xd511f0;
	Node0xd511f0 -> Node0xd51260;
	Node0xd51260 -> Node0xd512d0;
	Node0xd512d0 -> Node0xd51340;
	Node0xd51340 -> Node0xd513b0;
	Node0xd513b0 -> Node0xd51420;
	Node0xd51420 -> Node0xd51490;
	Node0xd51490 -> Node0xd51500;
	Node0xd51500 -> Node0xd51570;
	Node0xd51570 -> Node0xd515e0;
	Node0xd515e0 -> Node0xd51650;
	Node0xd51650 -> Node0xd516c0;
	Node0xd516c0 -> Node0xd51730;
	Node0xd51730 -> Node0xd517a0;
	Node0xd517a0 -> Node0xd51810;
	Node0xd51810 -> Node0xd51880;
	Node0xd51880 -> Node0xd518f0;
	Node0xd518f0 -> Node0xd51960;
	Node0xd51960 -> Node0xd519d0;
	Node0xd519d0 -> Node0xd51c50;
	Node0xd51c50 -> Node0xcef9d8;
	Node0xcef9d8 -> Node0xd51ce0;
	Node0xd51ce0 -> Node0xd51f38;
	Node0xd51f38 -> Node0xd52098;
	Node0xd52098 -> Node0xd52158;
edge [color=red]
	Node0xd4eef8 -> Node0xd4f008;
	Node0xd4f008 -> Node0xd4f468;
	Node0xd4ef78 -> Node0xd4f548;
	Node0xd4f548 -> Node0xd4f668;
	Node0xd4eef8 -> Node0xd4f8a0;
	Node0xd4ef78 -> Node0xd4f8a0;
	Node0xd4eef8 -> Node0xd4f958;
	Node0xd4ef78 -> Node0xd508c8;
	Node0xd508c8 -> Node0xd50f50;
	Node0xd4f958 -> Node0xd50fc0;
	Node0xd50f50 -> Node0xd50fc0;
	Node0xd50fc0 -> Node0xd51030;
	Node0xd4f958 -> Node0xd510a0;
	Node0xd50f50 -> Node0xd510a0;
	Node0xd510a0 -> Node0xd51110;
	Node0xd51110 -> Node0xd51180;
	Node0xd508c8 -> Node0xd511f0;
	Node0xd4f958 -> Node0xd511f0;
	Node0xd511f0 -> Node0xd51260;
	Node0xd508c8 -> Node0xd512d0;
	Node0xd4f958 -> Node0xd512d0;
	Node0xd4f958 -> Node0xd51340;
	Node0xd51340 -> Node0xd513b0;
	Node0xd512d0 -> Node0xd51420;
	Node0xd50fc0 -> Node0xd51490;
	Node0xd510a0 -> Node0xd51500;
	Node0xd511f0 -> Node0xd51570;
	Node0xd51490 -> Node0xd515e0;
	Node0xd51420 -> Node0xd515e0;
	Node0xd515e0 -> Node0xd51650;
	Node0xd508c8 -> Node0xd516c0;
	Node0xd4f958 -> Node0xd516c0;
	Node0xd516c0 -> Node0xd51730;
	Node0xd51260 -> Node0xd51730;
	Node0xd51730 -> Node0xd517a0;
	Node0xd512d0 -> Node0xd517a0;
	Node0xd517a0 -> Node0xd51810;
	Node0xd513b0 -> Node0xd51810;
	Node0xd51810 -> Node0xd51880;
	Node0xd51500 -> Node0xd51880;
	Node0xd51880 -> Node0xd518f0;
	Node0xd51570 -> Node0xd518f0;
	Node0xd518f0 -> Node0xd51960;
	Node0xd51180 -> Node0xd51960;
	Node0xd51960 -> Node0xd519d0;
	Node0xd51650 -> Node0xd519d0;
	Node0xd51030 -> Node0xd51c50;
	Node0xd519d0 -> Node0xd51c50;
	Node0xd51c50 -> Node0xcef9d8;
	Node0xcef9d8 -> Node0xd51ce0;
	Node0xd4f548 -> Node0xd51f38;
	Node0xd4f008 -> Node0xd52098;
}
