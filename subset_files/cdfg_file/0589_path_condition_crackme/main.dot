digraph "DFG for'main' function" {
	Node0x1c70998[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c70a18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c70aa8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c70b08[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1c70f88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c71068[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1c71168[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c71228[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1c712d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c71538[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1c715f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c72568[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c72bd8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c72cd0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1c72ed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c73038[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c73148[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c73208[shape=record, label="  ret i32 0"];
	Node0x1c70998 -> Node0x1c70a18;
	Node0x1c70a18 -> Node0x1c70aa8;
	Node0x1c70aa8 -> Node0x1c70b08;
	Node0x1c70b08 -> Node0x1c70f88;
	Node0x1c70f88 -> Node0x1c71068;
	Node0x1c71068 -> Node0x1c71168;
	Node0x1c71168 -> Node0x1c71228;
	Node0x1c71228 -> Node0x1c712d8;
	Node0x1c712d8 -> Node0x1c71538;
	Node0x1c71538 -> Node0x1c715f8;
	Node0x1c715f8 -> Node0x1c72568;
	Node0x1c72568 -> Node0x1c72bd8;
	Node0x1c72bd8 -> Node0x1c72cd0;
	Node0x1c72cd0 -> Node0x1c72ed8;
	Node0x1c72ed8 -> Node0x1c73038;
	Node0x1c73038 -> Node0x1c73148;
	Node0x1c73148 -> Node0x1c73208;
edge [color=red]
	Node0x1c70998 -> Node0x1c70b08;
	Node0x1c70b08 -> Node0x1c70f88;
	Node0x1c70a18 -> Node0x1c71068;
	Node0x1c71068 -> Node0x1c71168;
	Node0x1c70aa8 -> Node0x1c71228;
	Node0x1c71228 -> Node0x1c712d8;
	Node0x1c70998 -> Node0x1c71538;
	Node0x1c70a18 -> Node0x1c71538;
	Node0x1c70aa8 -> Node0x1c71538;
	Node0x1c70998 -> Node0x1c715f8;
	Node0x1c70a18 -> Node0x1c72568;
	Node0x1c70aa8 -> Node0x1c72bd8;
	Node0x1c715f8 -> Node0x1c72cd0;
	Node0x1c72568 -> Node0x1c72cd0;
	Node0x1c72bd8 -> Node0x1c72cd0;
	Node0x1c71228 -> Node0x1c72ed8;
	Node0x1c71068 -> Node0x1c73038;
	Node0x1c70b08 -> Node0x1c73148;
}
