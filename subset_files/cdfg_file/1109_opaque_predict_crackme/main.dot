digraph "DFG for'main' function" {
	Node0x1814e28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1814ea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1814f38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1815398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1815478[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1815598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18157d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1815888[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18167f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1816e80[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1816ef0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1816f60[shape=record, label="  %10 = shl i32 %6, 1"];
	Node0x1816fd0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x1817040[shape=record, label="  %12 = or i32 %7, %6"];
	Node0x18170b0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x1817120[shape=record, label="  %14 = and i32 %6, %8"];
	Node0x1817190[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1817200[shape=record, label="  %16 = shl i32 %12, 2"];
	Node0x1817270[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x18172e0[shape=record, label="  %18 = xor i32 %9, -1"];
	Node0x1817350[shape=record, label="  %19 = mul i32 %14, 7"];
	Node0x18173c0[shape=record, label="  %20 = and i32 %7, %6"];
	Node0x1817430[shape=record, label="  %21 = add i32 %20, %18"];
	Node0x18174a0[shape=record, label="  %22 = mul i32 %21, 5"];
	Node0x1817510[shape=record, label="  %23 = sub i32 1, %10"];
	Node0x1817580[shape=record, label="  %24 = sub i32 %23, %9"];
	Node0x18175f0[shape=record, label="  %25 = sub i32 %24, %11"];
	Node0x1817660[shape=record, label="  %26 = sub i32 %25, %12"];
	Node0x18176d0[shape=record, label="  %27 = sub i32 %26, %13"];
	Node0x1817740[shape=record, label="  %28 = add i32 %27, %15"];
	Node0x18177b0[shape=record, label="  %29 = add i32 %28, %19"];
	Node0x1817820[shape=record, label="  %30 = add i32 %29, %17"];
	Node0x1817890[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x1817900[shape=record, label="  %32 = icmp eq i32 %31, -1"];
	Node0x17b59d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1817ba0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x1817df8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1817f58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1818018[shape=record, label="  ret i32 0"];
	Node0x1814e28 -> Node0x1814ea8;
	Node0x1814ea8 -> Node0x1814f38;
	Node0x1814f38 -> Node0x1815398;
	Node0x1815398 -> Node0x1815478;
	Node0x1815478 -> Node0x1815598;
	Node0x1815598 -> Node0x18157d0;
	Node0x18157d0 -> Node0x1815888;
	Node0x1815888 -> Node0x18167f8;
	Node0x18167f8 -> Node0x1816e80;
	Node0x1816e80 -> Node0x1816ef0;
	Node0x1816ef0 -> Node0x1816f60;
	Node0x1816f60 -> Node0x1816fd0;
	Node0x1816fd0 -> Node0x1817040;
	Node0x1817040 -> Node0x18170b0;
	Node0x18170b0 -> Node0x1817120;
	Node0x1817120 -> Node0x1817190;
	Node0x1817190 -> Node0x1817200;
	Node0x1817200 -> Node0x1817270;
	Node0x1817270 -> Node0x18172e0;
	Node0x18172e0 -> Node0x1817350;
	Node0x1817350 -> Node0x18173c0;
	Node0x18173c0 -> Node0x1817430;
	Node0x1817430 -> Node0x18174a0;
	Node0x18174a0 -> Node0x1817510;
	Node0x1817510 -> Node0x1817580;
	Node0x1817580 -> Node0x18175f0;
	Node0x18175f0 -> Node0x1817660;
	Node0x1817660 -> Node0x18176d0;
	Node0x18176d0 -> Node0x1817740;
	Node0x1817740 -> Node0x18177b0;
	Node0x18177b0 -> Node0x1817820;
	Node0x1817820 -> Node0x1817890;
	Node0x1817890 -> Node0x1817900;
	Node0x1817900 -> Node0x17b59d8;
	Node0x17b59d8 -> Node0x1817ba0;
	Node0x1817ba0 -> Node0x1817df8;
	Node0x1817df8 -> Node0x1817f58;
	Node0x1817f58 -> Node0x1818018;
edge [color=red]
	Node0x1814e28 -> Node0x1814f38;
	Node0x1814f38 -> Node0x1815398;
	Node0x1814ea8 -> Node0x1815478;
	Node0x1815478 -> Node0x1815598;
	Node0x1814e28 -> Node0x18157d0;
	Node0x1814ea8 -> Node0x18157d0;
	Node0x1814e28 -> Node0x1815888;
	Node0x1814ea8 -> Node0x18167f8;
	Node0x18167f8 -> Node0x1816e80;
	Node0x1815888 -> Node0x1816ef0;
	Node0x1816e80 -> Node0x1816ef0;
	Node0x1815888 -> Node0x1816f60;
	Node0x1816f60 -> Node0x1816fd0;
	Node0x18167f8 -> Node0x1817040;
	Node0x1815888 -> Node0x1817040;
	Node0x18167f8 -> Node0x18170b0;
	Node0x1815888 -> Node0x18170b0;
	Node0x1815888 -> Node0x1817120;
	Node0x1816e80 -> Node0x1817120;
	Node0x1817120 -> Node0x1817190;
	Node0x1817040 -> Node0x1817200;
	Node0x1817200 -> Node0x1817270;
	Node0x1816ef0 -> Node0x18172e0;
	Node0x1817120 -> Node0x1817350;
	Node0x18167f8 -> Node0x18173c0;
	Node0x1815888 -> Node0x18173c0;
	Node0x18173c0 -> Node0x1817430;
	Node0x18172e0 -> Node0x1817430;
	Node0x1817430 -> Node0x18174a0;
	Node0x1816f60 -> Node0x1817510;
	Node0x1817510 -> Node0x1817580;
	Node0x1816ef0 -> Node0x1817580;
	Node0x1817580 -> Node0x18175f0;
	Node0x1816fd0 -> Node0x18175f0;
	Node0x18175f0 -> Node0x1817660;
	Node0x1817040 -> Node0x1817660;
	Node0x1817660 -> Node0x18176d0;
	Node0x18170b0 -> Node0x18176d0;
	Node0x18176d0 -> Node0x1817740;
	Node0x1817190 -> Node0x1817740;
	Node0x1817740 -> Node0x18177b0;
	Node0x1817350 -> Node0x18177b0;
	Node0x18177b0 -> Node0x1817820;
	Node0x1817270 -> Node0x1817820;
	Node0x1817820 -> Node0x1817890;
	Node0x18174a0 -> Node0x1817890;
	Node0x1817890 -> Node0x1817900;
	Node0x1817900 -> Node0x17b59d8;
	Node0x17b59d8 -> Node0x1817ba0;
	Node0x1815478 -> Node0x1817df8;
	Node0x1814f38 -> Node0x1817f58;
}
