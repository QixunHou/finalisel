digraph "DFG for'main' function" {
	Node0x21d5a68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21d5ae8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21d5b78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x21d5bd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x21d5c88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x21d60b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21d6198[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x21d6298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21d6358[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x21d6408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21d64c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x21d6578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x21d0750[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x21d6778[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21d76e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21d7d58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x21d7db8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x21d7ec8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x21d8128[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x21d8288[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21d8398[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21d84a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21d8568[shape=record, label="  ret i32 0"];
	Node0x21d5a68 -> Node0x21d5ae8;
	Node0x21d5ae8 -> Node0x21d5b78;
	Node0x21d5b78 -> Node0x21d5bd8;
	Node0x21d5bd8 -> Node0x21d5c88;
	Node0x21d5c88 -> Node0x21d60b8;
	Node0x21d60b8 -> Node0x21d6198;
	Node0x21d6198 -> Node0x21d6298;
	Node0x21d6298 -> Node0x21d6358;
	Node0x21d6358 -> Node0x21d6408;
	Node0x21d6408 -> Node0x21d64c8;
	Node0x21d64c8 -> Node0x21d6578;
	Node0x21d6578 -> Node0x21d0750;
	Node0x21d0750 -> Node0x21d6778;
	Node0x21d6778 -> Node0x21d76e8;
	Node0x21d76e8 -> Node0x21d7d58;
	Node0x21d7d58 -> Node0x21d7db8;
	Node0x21d7db8 -> Node0x21d7ec8;
	Node0x21d7ec8 -> Node0x21d8128;
	Node0x21d8128 -> Node0x21d8288;
	Node0x21d8288 -> Node0x21d8398;
	Node0x21d8398 -> Node0x21d84a8;
	Node0x21d84a8 -> Node0x21d8568;
edge [color=red]
	Node0x21d5a68 -> Node0x21d5c88;
	Node0x21d5c88 -> Node0x21d60b8;
	Node0x21d5ae8 -> Node0x21d6198;
	Node0x21d6198 -> Node0x21d6298;
	Node0x21d5b78 -> Node0x21d6358;
	Node0x21d6358 -> Node0x21d6408;
	Node0x21d5bd8 -> Node0x21d64c8;
	Node0x21d64c8 -> Node0x21d6578;
	Node0x21d5a68 -> Node0x21d0750;
	Node0x21d5ae8 -> Node0x21d0750;
	Node0x21d5b78 -> Node0x21d0750;
	Node0x21d5bd8 -> Node0x21d0750;
	Node0x21d5a68 -> Node0x21d6778;
	Node0x21d5ae8 -> Node0x21d76e8;
	Node0x21d5b78 -> Node0x21d7d58;
	Node0x21d5bd8 -> Node0x21d7db8;
	Node0x21d6778 -> Node0x21d7ec8;
	Node0x21d76e8 -> Node0x21d7ec8;
	Node0x21d7d58 -> Node0x21d7ec8;
	Node0x21d7db8 -> Node0x21d7ec8;
	Node0x21d64c8 -> Node0x21d8128;
	Node0x21d6358 -> Node0x21d8288;
	Node0x21d6198 -> Node0x21d8398;
	Node0x21d5c88 -> Node0x21d84a8;
}
