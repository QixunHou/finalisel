digraph "DFG for'main' function" {
	Node0x531ac8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x531b48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x531bd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x531c38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x531ce8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x532118[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5321f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x5322f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5323b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x532468[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x532528[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x5325d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x52c750[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x5327d8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x533748[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x533db8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x533e18[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x533f28[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x534188[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x5342e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5343f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x534508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5345c8[shape=record, label="  ret i32 0"];
	Node0x531ac8 -> Node0x531b48;
	Node0x531b48 -> Node0x531bd8;
	Node0x531bd8 -> Node0x531c38;
	Node0x531c38 -> Node0x531ce8;
	Node0x531ce8 -> Node0x532118;
	Node0x532118 -> Node0x5321f8;
	Node0x5321f8 -> Node0x5322f8;
	Node0x5322f8 -> Node0x5323b8;
	Node0x5323b8 -> Node0x532468;
	Node0x532468 -> Node0x532528;
	Node0x532528 -> Node0x5325d8;
	Node0x5325d8 -> Node0x52c750;
	Node0x52c750 -> Node0x5327d8;
	Node0x5327d8 -> Node0x533748;
	Node0x533748 -> Node0x533db8;
	Node0x533db8 -> Node0x533e18;
	Node0x533e18 -> Node0x533f28;
	Node0x533f28 -> Node0x534188;
	Node0x534188 -> Node0x5342e8;
	Node0x5342e8 -> Node0x5343f8;
	Node0x5343f8 -> Node0x534508;
	Node0x534508 -> Node0x5345c8;
edge [color=red]
	Node0x531ac8 -> Node0x531ce8;
	Node0x531ce8 -> Node0x532118;
	Node0x531b48 -> Node0x5321f8;
	Node0x5321f8 -> Node0x5322f8;
	Node0x531bd8 -> Node0x5323b8;
	Node0x5323b8 -> Node0x532468;
	Node0x531c38 -> Node0x532528;
	Node0x532528 -> Node0x5325d8;
	Node0x531ac8 -> Node0x52c750;
	Node0x531b48 -> Node0x52c750;
	Node0x531bd8 -> Node0x52c750;
	Node0x531c38 -> Node0x52c750;
	Node0x531ac8 -> Node0x5327d8;
	Node0x531b48 -> Node0x533748;
	Node0x531bd8 -> Node0x533db8;
	Node0x531c38 -> Node0x533e18;
	Node0x5327d8 -> Node0x533f28;
	Node0x533748 -> Node0x533f28;
	Node0x533db8 -> Node0x533f28;
	Node0x533e18 -> Node0x533f28;
	Node0x532528 -> Node0x534188;
	Node0x5323b8 -> Node0x5342e8;
	Node0x5321f8 -> Node0x5343f8;
	Node0x531ce8 -> Node0x534508;
}
