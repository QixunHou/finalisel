digraph "DFG for'main' function" {
	Node0x1b3ad48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b3adc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b3ae58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b3aeb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1b3af68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1b3b398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b3b478[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1b3b578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b3b638[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1b3b6e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b3b7a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1b3b858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b357b0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1b3ba58[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b3c9c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b3d038[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b3d098[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1b3d1a8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1b3d408[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b3d568[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b3d678[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b3d788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b3d848[shape=record, label="  ret i32 0"];
	Node0x1b3ad48 -> Node0x1b3adc8;
	Node0x1b3adc8 -> Node0x1b3ae58;
	Node0x1b3ae58 -> Node0x1b3aeb8;
	Node0x1b3aeb8 -> Node0x1b3af68;
	Node0x1b3af68 -> Node0x1b3b398;
	Node0x1b3b398 -> Node0x1b3b478;
	Node0x1b3b478 -> Node0x1b3b578;
	Node0x1b3b578 -> Node0x1b3b638;
	Node0x1b3b638 -> Node0x1b3b6e8;
	Node0x1b3b6e8 -> Node0x1b3b7a8;
	Node0x1b3b7a8 -> Node0x1b3b858;
	Node0x1b3b858 -> Node0x1b357b0;
	Node0x1b357b0 -> Node0x1b3ba58;
	Node0x1b3ba58 -> Node0x1b3c9c8;
	Node0x1b3c9c8 -> Node0x1b3d038;
	Node0x1b3d038 -> Node0x1b3d098;
	Node0x1b3d098 -> Node0x1b3d1a8;
	Node0x1b3d1a8 -> Node0x1b3d408;
	Node0x1b3d408 -> Node0x1b3d568;
	Node0x1b3d568 -> Node0x1b3d678;
	Node0x1b3d678 -> Node0x1b3d788;
	Node0x1b3d788 -> Node0x1b3d848;
edge [color=red]
	Node0x1b3ad48 -> Node0x1b3af68;
	Node0x1b3af68 -> Node0x1b3b398;
	Node0x1b3adc8 -> Node0x1b3b478;
	Node0x1b3b478 -> Node0x1b3b578;
	Node0x1b3ae58 -> Node0x1b3b638;
	Node0x1b3b638 -> Node0x1b3b6e8;
	Node0x1b3aeb8 -> Node0x1b3b7a8;
	Node0x1b3b7a8 -> Node0x1b3b858;
	Node0x1b3ad48 -> Node0x1b357b0;
	Node0x1b3adc8 -> Node0x1b357b0;
	Node0x1b3ae58 -> Node0x1b357b0;
	Node0x1b3aeb8 -> Node0x1b357b0;
	Node0x1b3ad48 -> Node0x1b3ba58;
	Node0x1b3adc8 -> Node0x1b3c9c8;
	Node0x1b3ae58 -> Node0x1b3d038;
	Node0x1b3aeb8 -> Node0x1b3d098;
	Node0x1b3ba58 -> Node0x1b3d1a8;
	Node0x1b3c9c8 -> Node0x1b3d1a8;
	Node0x1b3d038 -> Node0x1b3d1a8;
	Node0x1b3d098 -> Node0x1b3d1a8;
	Node0x1b3b7a8 -> Node0x1b3d408;
	Node0x1b3b638 -> Node0x1b3d568;
	Node0x1b3b478 -> Node0x1b3d678;
	Node0x1b3af68 -> Node0x1b3d788;
}
