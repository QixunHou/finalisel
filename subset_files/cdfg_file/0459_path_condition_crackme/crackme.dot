digraph "DFG for'crackme' function" {
	Node0x1b38d90[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1b38e00[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x1b38ea0[shape=record, label="  %7 = mul i32 %6, -2"];
	Node0x1b38f10[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x1b38fb0[shape=record, label="  %9 = add i32 %0, 1"];
	Node0x1b39020[shape=record, label="  %10 = add i32 %7, %9"];
	Node0x1b39090[shape=record, label="  %11 = shl i32 %3, 1"];
	Node0x1b39100[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x1b39170[shape=record, label="  %13 = add i32 %10, %12"];
	Node0x1b391e0[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0x1b39250[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x1b392c0[shape=record, label="  %16 = add i32 %2, 1"];
	Node0x1b39360[shape=record, label="  %17 = shl i32 %1, 2"];
	Node0x1b39400[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x1b394a0[shape=record, label="  %19 = shl i32 %15, 3"];
	Node0x1b39540[shape=record, label="  %20 = xor i32 %19, -8"];
	Node0x1b395b0[shape=record, label="  %21 = xor i32 %6, -1"];
	Node0x1b39650[shape=record, label="  %22 = mul i32 %21, 7"];
	Node0x1b396c0[shape=record, label="  %23 = and i32 %5, %1"];
	Node0x1b39730[shape=record, label="  %24 = and i32 %2, %1"];
	Node0x1b397a0[shape=record, label="  %25 = xor i32 %3, %0"];
	Node0x1b39810[shape=record, label="  %26 = and i32 %3, %0"];
	Node0x1b39880[shape=record, label="  %27 = or i32 %8, %3"];
	Node0x1b398f0[shape=record, label="  %28 = or i32 %3, %0"];
	Node0x1b39960[shape=record, label="  %29 = shl i32 %27, 2"];
	Node0x1b399d0[shape=record, label="  %30 = xor i32 %29, -4"];
	Node0x1b39a40[shape=record, label="  %31 = and i32 %8, %3"];
	Node0x1b39ab0[shape=record, label="  %32 = shl i32 %31, 2"];
	Node0x1b39d30[shape=record, label="  %33 = add i32 %23, %0"];
	Node0x1b39da0[shape=record, label="  %34 = add i32 %33, %24"];
	Node0x1b39e10[shape=record, label="  %35 = sub i32 %14, %28"];
	Node0x1b39e80[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0x1b39ef0[shape=record, label="  %37 = add i32 %34, %26"];
	Node0x1b39f60[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x1b3a000[shape=record, label="  %39 = add i32 %1, 5"];
	Node0x1b3a070[shape=record, label="  %40 = add i32 %39, %2"];
	Node0x1b3a0e0[shape=record, label="  %41 = add i32 %40, %16"];
	Node0x1b3a150[shape=record, label="  %42 = sub i32 %41, %14"];
	Node0x1b3a1c0[shape=record, label="  %43 = sub i32 %42, %15"];
	Node0x1b3a230[shape=record, label="  %44 = sub i32 %43, %18"];
	Node0x1b3a2a0[shape=record, label="  %45 = add i32 %44, %22"];
	Node0x1b3a310[shape=record, label="  %46 = sub i32 %45, %25"];
	Node0x1b3a380[shape=record, label="  %47 = sub i32 %46, %11"];
	Node0x1b3a3f0[shape=record, label="  %48 = add i32 %47, %27"];
	Node0x1b3a460[shape=record, label="  %49 = add i32 %48, %20"];
	Node0x1b3a4d0[shape=record, label="  %50 = add i32 %49, %32"];
	Node0x1b3a540[shape=record, label="  %51 = add i32 %50, %30"];
	Node0x1b3a5b0[shape=record, label="  %52 = add i32 %51, %36"];
	Node0x1b3a620[shape=record, label="  %53 = add i32 %52, %38"];
	Node0x1b3a690[shape=record, label="  %54 = icmp eq i32 %13, %53"];
	Node0x1ad9268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1b3ab30[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0x1b3ab80[shape=record, label="  ret void"];
	Node0x1b38d90 -> Node0x1b38e00;
	Node0x1b38e00 -> Node0x1b38ea0;
	Node0x1b38ea0 -> Node0x1b38f10;
	Node0x1b38f10 -> Node0x1b38fb0;
	Node0x1b38fb0 -> Node0x1b39020;
	Node0x1b39020 -> Node0x1b39090;
	Node0x1b39090 -> Node0x1b39100;
	Node0x1b39100 -> Node0x1b39170;
	Node0x1b39170 -> Node0x1b391e0;
	Node0x1b391e0 -> Node0x1b39250;
	Node0x1b39250 -> Node0x1b392c0;
	Node0x1b392c0 -> Node0x1b39360;
	Node0x1b39360 -> Node0x1b39400;
	Node0x1b39400 -> Node0x1b394a0;
	Node0x1b394a0 -> Node0x1b39540;
	Node0x1b39540 -> Node0x1b395b0;
	Node0x1b395b0 -> Node0x1b39650;
	Node0x1b39650 -> Node0x1b396c0;
	Node0x1b396c0 -> Node0x1b39730;
	Node0x1b39730 -> Node0x1b397a0;
	Node0x1b397a0 -> Node0x1b39810;
	Node0x1b39810 -> Node0x1b39880;
	Node0x1b39880 -> Node0x1b398f0;
	Node0x1b398f0 -> Node0x1b39960;
	Node0x1b39960 -> Node0x1b399d0;
	Node0x1b399d0 -> Node0x1b39a40;
	Node0x1b39a40 -> Node0x1b39ab0;
	Node0x1b39ab0 -> Node0x1b39d30;
	Node0x1b39d30 -> Node0x1b39da0;
	Node0x1b39da0 -> Node0x1b39e10;
	Node0x1b39e10 -> Node0x1b39e80;
	Node0x1b39e80 -> Node0x1b39ef0;
	Node0x1b39ef0 -> Node0x1b39f60;
	Node0x1b39f60 -> Node0x1b3a000;
	Node0x1b3a000 -> Node0x1b3a070;
	Node0x1b3a070 -> Node0x1b3a0e0;
	Node0x1b3a0e0 -> Node0x1b3a150;
	Node0x1b3a150 -> Node0x1b3a1c0;
	Node0x1b3a1c0 -> Node0x1b3a230;
	Node0x1b3a230 -> Node0x1b3a2a0;
	Node0x1b3a2a0 -> Node0x1b3a310;
	Node0x1b3a310 -> Node0x1b3a380;
	Node0x1b3a380 -> Node0x1b3a3f0;
	Node0x1b3a3f0 -> Node0x1b3a460;
	Node0x1b3a460 -> Node0x1b3a4d0;
	Node0x1b3a4d0 -> Node0x1b3a540;
	Node0x1b3a540 -> Node0x1b3a5b0;
	Node0x1b3a5b0 -> Node0x1b3a620;
	Node0x1b3a620 -> Node0x1b3a690;
	Node0x1b3a690 -> Node0x1ad9268;
	Node0x1ad9268 -> Node0x1b3ab30;
	Node0x1b3ab30 -> Node0x1b3ab80;
edge [color=red]
	Node0x1b38d90 -> Node0x1b38e00;
	Node0x1b38e00 -> Node0x1b38ea0;
	Node0x1b38ea0 -> Node0x1b39020;
	Node0x1b38fb0 -> Node0x1b39020;
	Node0x1b39090 -> Node0x1b39100;
	Node0x1b39020 -> Node0x1b39170;
	Node0x1b39100 -> Node0x1b39170;
	Node0x1b39360 -> Node0x1b39400;
	Node0x1b39250 -> Node0x1b394a0;
	Node0x1b394a0 -> Node0x1b39540;
	Node0x1b38e00 -> Node0x1b395b0;
	Node0x1b395b0 -> Node0x1b39650;
	Node0x1b38d90 -> Node0x1b396c0;
	Node0x1b38f10 -> Node0x1b39880;
	Node0x1b39880 -> Node0x1b39960;
	Node0x1b39960 -> Node0x1b399d0;
	Node0x1b38f10 -> Node0x1b39a40;
	Node0x1b39a40 -> Node0x1b39ab0;
	Node0x1b396c0 -> Node0x1b39d30;
	Node0x1b39d30 -> Node0x1b39da0;
	Node0x1b39730 -> Node0x1b39da0;
	Node0x1b391e0 -> Node0x1b39e10;
	Node0x1b398f0 -> Node0x1b39e10;
	Node0x1b39e10 -> Node0x1b39e80;
	Node0x1b39da0 -> Node0x1b39ef0;
	Node0x1b39810 -> Node0x1b39ef0;
	Node0x1b39ef0 -> Node0x1b39f60;
	Node0x1b3a000 -> Node0x1b3a070;
	Node0x1b3a070 -> Node0x1b3a0e0;
	Node0x1b392c0 -> Node0x1b3a0e0;
	Node0x1b3a0e0 -> Node0x1b3a150;
	Node0x1b391e0 -> Node0x1b3a150;
	Node0x1b3a150 -> Node0x1b3a1c0;
	Node0x1b39250 -> Node0x1b3a1c0;
	Node0x1b3a1c0 -> Node0x1b3a230;
	Node0x1b39400 -> Node0x1b3a230;
	Node0x1b3a230 -> Node0x1b3a2a0;
	Node0x1b39650 -> Node0x1b3a2a0;
	Node0x1b3a2a0 -> Node0x1b3a310;
	Node0x1b397a0 -> Node0x1b3a310;
	Node0x1b3a310 -> Node0x1b3a380;
	Node0x1b39090 -> Node0x1b3a380;
	Node0x1b3a380 -> Node0x1b3a3f0;
	Node0x1b39880 -> Node0x1b3a3f0;
	Node0x1b3a3f0 -> Node0x1b3a460;
	Node0x1b39540 -> Node0x1b3a460;
	Node0x1b3a460 -> Node0x1b3a4d0;
	Node0x1b39ab0 -> Node0x1b3a4d0;
	Node0x1b3a4d0 -> Node0x1b3a540;
	Node0x1b399d0 -> Node0x1b3a540;
	Node0x1b3a540 -> Node0x1b3a5b0;
	Node0x1b39e80 -> Node0x1b3a5b0;
	Node0x1b3a5b0 -> Node0x1b3a620;
	Node0x1b39f60 -> Node0x1b3a620;
	Node0x1b39170 -> Node0x1b3a690;
	Node0x1b3a620 -> Node0x1b3a690;
	Node0x1b3a690 -> Node0x1ad9268;
	Node0x1ad9268 -> Node0x1b3ab30;
}
