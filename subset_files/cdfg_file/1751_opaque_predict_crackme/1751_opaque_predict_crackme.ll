; ModuleID = '../.././c_source_file/1751_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1751_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %1
  %8 = xor i32 %3, -1
  %9 = and i32 %8, %4
  %10 = xor i32 %9, -1
  %11 = xor i32 %5, %4
  %12 = and i32 %11, %10
  %13 = sub i32 %7, %12
  %14 = xor i32 %1, -1
  %15 = xor i32 %2, -1
  %16 = or i32 %15, %0
  %17 = and i32 %16, %14
  %18 = or i32 %15, %1
  %19 = xor i32 %18, -1
  %20 = xor i32 %19, %0
  %21 = and i32 %14, %2
  %22 = and i32 %21, %0
  %23 = xor i32 %2, %1
  %24 = xor i32 %23, %0
  %25 = or i32 %22, %24
  %26 = and i32 %2, %0
  %27 = and i32 %15, %1
  %28 = or i32 %26, %27
  %29 = and i32 %15, %0
  %30 = xor i32 %29, -1
  %31 = xor i32 %1, %0
  %32 = xor i32 %31, -1
  %33 = and i32 %30, %32
  %34 = xor i32 %0, -1
  %35 = or i32 %27, %34
  %36 = shl i32 %35, 1
  %37 = or i32 %1, %0
  %38 = xor i32 %37, -1
  %39 = xor i32 %38, %2
  %40 = xor i32 %16, -1
  %41 = or i32 %31, %40
  %42 = and i32 %14, %0
  %43 = xor i32 %42, -1
  %44 = xor i32 %2, %0
  %45 = xor i32 %44, -1
  %46 = and i32 %45, %43
  %47 = xor i32 %27, -1
  %48 = xor i32 %26, %47
  %49 = and i32 %15, %32
  %50 = or i32 %2, %0
  %51 = xor i32 %50, -1
  %52 = or i32 %27, %0
  %53 = or i32 %2, %1
  %54 = xor i32 %53, -1
  %55 = or i32 %54, %0
  %56 = and i32 %1, %0
  %57 = xor i32 %56, %2
  %58 = xor i32 %56, -1
  %59 = or i32 %31, %2
  %60 = shl i32 %59, 2
  %61 = or i32 %26, %14
  %62 = or i32 %14, %0
  %63 = and i32 %23, %62
  %64 = shl i32 %18, 1
  %65 = or i32 %23, %0
  %66 = and i32 %7, %0
  %67 = and i32 %23, %34
  %68 = or i32 %66, %67
  %69 = or i32 %15, %38
  %70 = and i32 %15, %58
  %71 = xor i32 %7, -1
  %72 = or i32 %71, %0
  %73 = xor i32 %23, -1
  %74 = and i32 %73, %58
  %75 = and i32 %62, %15
  %76 = or i32 %44, %56
  %77 = add i32 %16, 1
  %78 = and i32 %7, %34
  %79 = and i32 %53, %0
  %80 = xor i32 %79, 2147483647
  %81 = xor i32 %80, %78
  %82 = shl i32 %81, 1
  %83 = xor i32 %82, -1
  %84 = xor i32 %26, %62
  %85 = shl i32 %84, 1
  %86 = and i32 %37, %15
  %87 = and i32 %47, %34
  %88 = and i32 %45, %1
  %89 = or i32 %23, %34
  %90 = and i32 %50, %31
  %91 = xor i32 %26, %53
  %92 = and i32 %21, %34
  %93 = xor i32 %89, -1
  %94 = or i32 %92, %93
  %95 = and i32 %32, %2
  %96 = or i32 %73, %0
  %97 = xor i32 %42, %47
  %98 = or i32 %71, %34
  %99 = and i32 %44, %14
  %100 = and i32 %71, %0
  %101 = xor i32 %29, %71
  %102 = xor i32 %26, -1
  %103 = xor i32 %102, %1
  %104 = xor i32 %24, -1
  %105 = xor i32 %22, %104
  %106 = or i32 %23, %56
  %107 = or i32 %44, %1
  %108 = and i32 %44, %1
  %109 = and i32 %53, %34
  %110 = xor i32 %62, -1
  %111 = or i32 %56, %15
  %112 = shl i32 %111, 1
  %113 = xor i32 %27, %0
  %114 = or i32 %44, %38
  %115 = xor i32 %26, %37
  %116 = or i32 %42, %45
  %117 = xor i32 %53, %0
  %118 = shl i32 %117, 1
  %119 = and i32 %15, %43
  %120 = shl i32 %119, 1
  %121 = or i32 %44, %42
  %122 = or i32 %56, %51
  %123 = and i32 %31, %45
  %124 = or i32 %110, %2
  %125 = shl i32 %124, 2
  %126 = or i32 %31, %51
  %127 = or i32 %53, %34
  %128 = or i32 %54, %34
  %129 = or i32 %51, %1
  %130 = shl i32 %129, 1
  %131 = or i32 %29, %7
  %132 = and i32 %45, %14
  %133 = or i32 %42, %73
  %134 = and i32 %73, %43
  %135 = and i32 %50, %14
  %136 = xor i32 %92, %89
  %137 = and i32 %73, %0
  %138 = xor i32 %50, %56
  %139 = or i32 %45, %38
  %140 = or i32 %40, %32
  %141 = and i32 %44, %62
  %142 = or i32 %14, %2
  %143 = and i32 %142, %34
  %144 = or i32 %22, %143
  %145 = or i32 %45, %32
  %146 = or i32 %45, %1
  %147 = xor i32 %18, %0
  %148 = and i32 %37, %2
  %149 = or i32 %44, %14
  %150 = and i32 %45, %58
  %151 = and i32 %102, %32
  %152 = and i32 %30, %14
  %153 = xor i32 %22, %65
  %154 = or i32 %7, %0
  %155 = and i32 %18, %34
  %156 = xor i32 %16, %1
  %157 = shl i32 %156, 1
  %158 = or i32 %44, %110
  %159 = or i32 %26, %31
  %160 = shl i32 %159, 1
  %161 = and i32 %50, %1
  %162 = or i32 %56, %19
  %163 = or i32 %42, %2
  %164 = and i32 %31, %30
  %165 = or i32 %29, %19
  %166 = and i32 %23, %58
  %167 = or i32 %29, %1
  %168 = or i32 %7, %34
  %169 = xor i32 %47, %0
  %170 = or i32 %73, %34
  %171 = or i32 %66, %104
  %172 = or i32 %18, %34
  %173 = or i32 %56, %40
  %174 = shl i32 %79, 1
  %175 = and i32 %23, %37
  %176 = or i32 %23, %42
  %177 = or i32 %7, %42
  %178 = and i32 %30, %1
  %179 = or i32 %73, %38
  %180 = shl i32 %179, 1
  %181 = and i32 %31, %15
  %182 = xor i32 %50, %1
  %183 = or i32 %38, %2
  %184 = and i32 %23, %43
  %185 = shl i32 %32, 1
  %186 = and i32 %23, %0
  %187 = xor i32 %186, -1
  %188 = xor i32 %78, %187
  %189 = and i32 %142, %0
  %190 = xor i32 %189, 2147483647
  %191 = xor i32 %190, %92
  %192 = and i32 %45, %32
  %193 = or i32 %56, %45
  %194 = and i32 %50, %32
  %195 = xor i32 %73, %0
  %196 = or i32 %51, %14
  %197 = and i32 %62, %45
  %198 = xor i32 %43, %2
  %199 = or i32 %29, %14
  %200 = shl i32 %37, 1
  %201 = or i32 %40, %1
  %202 = and i32 %43, %2
  %203 = and i32 %44, %32
  %204 = or i32 %29, %32
  %205 = shl i32 %204, 1
  %206 = or i32 %56, %73
  %207 = xor i32 %66, %24
  %208 = shl i32 %73, 1
  %209 = or i32 %40, %14
  %210 = or i32 %26, %54
  %211 = or i32 %44, %32
  %212 = and i32 %16, %1
  %213 = and i32 %54, %34
  %214 = mul i32 %213, -9
  %215 = and i32 %27, %34
  %216 = mul i32 %215, 13
  %217 = and i32 %54, %0
  %218 = mul i32 %217, 11
  %219 = and i32 %27, %0
  %220 = and i32 %19, %34
  %221 = mul i32 %220, 20
  %222 = and i32 %19, %0
  %223 = and i32 %5, %4
  %224 = or i32 %5, %3
  %225 = xor i32 %224, -1
  %226 = or i32 %223, %225
  %227 = xor i32 %4, %3
  %228 = xor i32 %11, -1
  %229 = and i32 %227, %228
  %230 = shl i32 %229, 1
  %231 = xor i32 %4, -1
  %232 = or i32 %224, %231
  %233 = xor i32 %5, -1
  %234 = or i32 %233, %4
  %235 = shl i32 %234, 2
  %236 = or i32 %233, %3
  %237 = xor i32 %236, -1
  %238 = or i32 %237, %231
  %239 = and i32 %233, %4
  %240 = xor i32 %239, -1
  %241 = xor i32 %240, %3
  %242 = shl i32 %239, 1
  %243 = and i32 %233, %3
  %244 = xor i32 %243, %4
  %245 = and i32 %4, %3
  %246 = or i32 %5, %4
  %247 = xor i32 %246, %245
  %248 = xor i32 %239, %236
  %249 = or i32 %4, %3
  %250 = xor i32 %5, %3
  %251 = and i32 %250, %249
  %252 = or i32 %239, %8
  %253 = or i32 %243, %4
  %254 = xor i32 %234, -1
  %255 = or i32 %245, %254
  %256 = xor i32 %227, -1
  %257 = and i32 %240, %256
  %258 = or i32 %8, %4
  %259 = and i32 %258, %5
  %260 = or i32 %245, %237
  %261 = and i32 %8, %5
  %262 = and i32 %261, %4
  %263 = or i32 %8, %5
  %264 = and i32 %263, %231
  %265 = xor i32 %262, -1
  %266 = xor i32 %264, %265
  %267 = and i32 %240, %3
  %268 = or i32 %227, %233
  %269 = and i32 %5, %3
  %270 = xor i32 %269, -1
  %271 = and i32 %270, %231
  %272 = xor i32 %245, -1
  %273 = and i32 %250, %272
  %274 = xor i32 %250, %4
  %275 = shl i32 %274, 1
  %276 = xor i32 %249, -1
  %277 = xor i32 %250, -1
  %278 = or i32 %277, %276
  %279 = xor i32 %9, %5
  %280 = add i32 %250, 1
  %281 = and i32 %277, %10
  %282 = and i32 %269, %231
  %283 = and i32 %224, %4
  %284 = or i32 %282, %283
  %285 = xor i32 %249, %5
  %286 = or i32 %239, %227
  %287 = and i32 %11, %256
  %288 = xor i32 %258, %5
  %289 = or i32 %254, %256
  %290 = shl i32 %289, 1
  %291 = and i32 %246, %8
  %292 = or i32 %256, %5
  %293 = xor i32 %258, -1
  %294 = or i32 %233, %293
  %295 = xor i32 %224, %4
  %296 = shl i32 %295, 1
  %297 = and i32 %246, %227
  %298 = and i32 %234, %227
  %299 = shl i32 %298, 1
  %300 = xor i32 %243, -1
  %301 = xor i32 %9, %300
  %302 = and i32 %300, %231
  %303 = xor i32 %223, %224
  %304 = or i32 %250, %4
  %305 = xor i32 %304, -1
  %306 = or i32 %262, %305
  %307 = and i32 %228, %10
  %308 = or i32 %223, %293
  %309 = or i32 %262, %264
  %310 = and i32 %300, %4
  %311 = add i32 %227, 1
  %312 = or i32 %11, %256
  %313 = shl i32 %312, 1
  %314 = and i32 %236, %231
  %315 = shl i32 %314, 2
  %316 = or i32 %277, %293
  %317 = xor i32 %237, %4
  %318 = or i32 %225, %4
  %319 = xor i32 %262, %304
  %320 = xor i32 %236, %4
  %321 = or i32 %236, %4
  %322 = or i32 %227, %254
  %323 = and i32 %277, %231
  %324 = and i32 %10, %5
  %325 = and i32 %250, %10
  %326 = or i32 %243, %231
  %327 = or i32 %262, %274
  %328 = or i32 %239, %237
  %329 = and i32 %250, %4
  %330 = or i32 %282, %329
  %331 = or i32 %11, %3
  %332 = xor i32 %246, %3
  %333 = or i32 %223, %3
  %334 = and i32 %11, %272
  %335 = shl i32 %334, 1
  %336 = and i32 %269, %4
  %337 = and i32 %224, %231
  %338 = xor i32 %336, -1
  %339 = xor i32 %337, %338
  %340 = xor i32 %246, -1
  %341 = add i32 %246, 1
  %342 = xor i32 %293, %5
  %343 = xor i32 %223, -1
  %344 = xor i32 %343, %3
  %345 = or i32 %254, %8
  %346 = or i32 %270, %4
  %347 = or i32 %300, %4
  %348 = and i32 %246, %3
  %349 = or i32 %245, %233
  %350 = xor i32 %282, -1
  %351 = xor i32 %329, %350
  %352 = xor i32 %245, %5
  %353 = or i32 %228, %293
  %354 = and i32 %228, %256
  %355 = or i32 %250, %245
  %356 = and i32 %240, %8
  %357 = or i32 %237, %4
  %358 = and i32 %272, %5
  %359 = and i32 %261, %231
  %360 = and i32 %263, %4
  %361 = xor i32 %360, -1
  %362 = xor i32 %359, %361
  %363 = or i32 %250, %231
  %364 = xor i32 %363, 2147483647
  %365 = or i32 %364, %359
  %366 = and i32 %11, %227
  %367 = xor i32 %263, %4
  %368 = or i32 %262, %367
  %369 = and i32 %250, %231
  %370 = xor i32 %369, %338
  %371 = or i32 %227, %340
  %372 = or i32 %243, %9
  %373 = shl i32 %372, 1
  %374 = and i32 %228, %3
  %375 = or i32 %250, %293
  %376 = or i32 %223, %243
  %377 = and i32 %11, %249
  %378 = or i32 %340, %256
  %379 = and i32 %277, %4
  %380 = and i32 %249, %233
  %381 = shl i32 %10, 1
  %382 = or i32 %233, %276
  %383 = shl i32 %382, 1
  %384 = or i32 %239, %256
  %385 = xor i32 %9, %270
  %386 = xor i32 %223, %249
  %387 = and i32 %234, %3
  %388 = shl i32 %387, 1
  %389 = xor i32 %274, -1
  %390 = or i32 %336, %389
  %391 = or i32 %276, %5
  %392 = and i32 %11, %258
  %393 = or i32 %228, %256
  %394 = or i32 %336, %295
  %395 = or i32 %245, %340
  %396 = or i32 %340, %3
  %397 = and i32 %258, %233
  %398 = and i32 %246, %256
  %399 = or i32 %11, %293
  %400 = shl i32 %399, 1
  %401 = or i32 %239, %3
  %402 = and i32 %233, %272
  %403 = or i32 %239, %269
  %404 = and i32 %249, %5
  %405 = or i32 %277, %231
  %406 = and i32 %227, %233
  %407 = xor i32 %223, %3
  %408 = shl i32 %407, 1
  %409 = xor i32 %336, %274
  %410 = or i32 %223, %256
  %411 = shl i32 %410, 1
  %412 = and i32 %236, %4
  %413 = xor i32 %367, %265
  %414 = or i32 %293, %5
  %415 = or i32 %9, %277
  %416 = or i32 %11, %245
  %417 = or i32 %245, %5
  %418 = and i32 %11, %3
  %419 = or i32 %236, %231
  %420 = xor i32 %283, %350
  %421 = add i32 %5, 1
  %422 = or i32 %11, %227
  %423 = and i32 %258, %228
  %424 = xor i32 %224, %245
  %425 = or i32 %228, %8
  %426 = shl i32 %425, 1
  %427 = xor i32 %254, %3
  %428 = or i32 %336, %337
  %429 = and i32 %270, %4
  %430 = or i32 %336, %369
  %431 = xor i32 %10, %5
  %432 = or i32 %233, %256
  %433 = xor i32 %269, %4
  %434 = and i32 %277, %272
  %435 = or i32 %9, %5
  %436 = or i32 %269, %231
  %437 = or i32 %228, %3
  %438 = or i32 %250, %9
  %439 = shl i32 %438, 1
  %440 = and i32 %228, %8
  %441 = shl i32 %440, 2
  %442 = and i32 %234, %8
  %443 = or i32 %269, %4
  %444 = xor i32 %359, %363
  %445 = or i32 %269, %9
  %446 = and i32 %233, %256
  %447 = or i32 %227, %228
  %448 = and i32 %11, %8
  %449 = xor i32 %239, %270
  %450 = xor i32 %277, %4
  %451 = shl i32 %258, 1
  %452 = or i32 %223, %8
  %453 = xor i32 %234, %245
  %454 = xor i32 %225, %4
  %455 = xor i32 %340, %3
  %456 = shl i32 %455, 1
  %457 = and i32 %233, %10
  %458 = and i32 %343, %256
  %459 = xor i32 %300, %4
  %460 = or i32 %223, %227
  %461 = or i32 %245, %225
  %462 = shl i32 %461, 1
  %463 = or i32 %228, %276
  %464 = and i32 %227, %5
  %465 = or i32 %225, %231
  %466 = or i32 %340, %8
  %467 = and i32 %343, %8
  %468 = and i32 %343, %3
  %469 = shl i32 %468, 1
  %470 = or i32 %245, %277
  %471 = or i32 %223, %276
  %472 = and i32 %249, %277
  %473 = xor i32 %223, %258
  %474 = or i32 %227, %5
  %475 = or i32 %277, %4
  %476 = shl i32 %475, 1
  %477 = or i32 %250, %276
  %478 = or i32 %359, %360
  %479 = xor i32 %295, %338
  %480 = or i32 %254, %3
  %481 = shl i32 %480, 1
  %482 = or i32 %11, %9
  %483 = or i32 %9, %233
  %484 = shl i32 %483, 1
  %485 = xor i32 %234, %3
  %486 = or i32 %245, %228
  %487 = shl i32 %486, 1
  %488 = or i32 %11, %276
  %489 = and i32 %225, %231
  %490 = and i32 %243, %231
  %491 = mul i32 %490, 26
  %492 = and i32 %225, %4
  %493 = shl i32 %492, 3
  %494 = and i32 %243, %4
  %495 = mul i32 %494, 27
  %496 = and i32 %237, %231
  %497 = and i32 %237, %4
  %498 = shl i32 %497, 4
  %499 = mul i32 %336, -7
  %500 = add i32 %183, %110
  %501 = add i32 %500, %49
  %502 = add i32 %501, %231
  %503 = add i32 %502, %210
  %504 = add i32 %503, %197
  %505 = add i32 %504, %164
  %506 = add i32 %505, %158
  %507 = add i32 %506, %146
  %508 = add i32 %507, %116
  %509 = add i32 %508, %99
  %510 = add i32 %509, %97
  %511 = add i32 %510, %96
  %512 = add i32 %511, %46
  %513 = add i32 %512, %227
  %514 = add i32 %513, %171
  %515 = add i32 %514, %342
  %516 = add i32 %515, %324
  %517 = add i32 %516, %225
  %518 = add i32 %517, %191
  %519 = add i32 %518, %485
  %520 = add i32 %519, %369
  %521 = add i32 %520, %463
  %522 = add i32 %521, %453
  %523 = add i32 %522, %450
  %524 = add i32 %523, %448
  %525 = add i32 %524, %415
  %526 = add i32 %525, %405
  %527 = add i32 %526, %385
  %528 = add i32 %527, %379
  %529 = add i32 %528, %377
  %530 = add i32 %529, %328
  %531 = add i32 %530, %316
  %532 = add i32 %531, %302
  %533 = add i32 %532, %301
  %534 = add i32 %533, %409
  %535 = add i32 %534, %365
  %536 = shl i32 %535, 1
  %537 = sub i32 %177, %192
  %538 = sub i32 %537, %169
  %539 = sub i32 %538, %149
  %540 = sub i32 %539, %482
  %541 = add i32 %540, %471
  %542 = sub i32 %541, %325
  %543 = sub i32 %542, %322
  %544 = sub i32 %543, %413
  %545 = mul i32 %544, 3
  %546 = sub i32 %66, %78
  %547 = sub i32 %546, %67
  %548 = sub i32 %547, %165
  %549 = add i32 %548, %121
  %550 = add i32 %549, %188
  %551 = sub i32 %550, %153
  %552 = sub i32 %551, %320
  %553 = add i32 %552, %327
  %554 = mul i32 %553, 5
  %555 = sub i32 %282, %496
  %556 = mul i32 %555, 12
  %557 = sub i32 %219, %222
  %558 = mul i32 %557, 15
  %559 = add i32 %133, 1073741823
  %560 = add i32 %559, %378
  %561 = add i32 %560, %489
  %562 = add i32 %561, %281
  %563 = shl i32 %562, 2
  %564 = add i32 %58, %14
  %565 = add i32 %564, %38
  %566 = add i32 %565, %31
  %567 = sub i32 %566, %39
  %568 = add i32 %567, %51
  %569 = sub i32 %568, %57
  %570 = sub i32 %569, %50
  %571 = sub i32 %570, %69
  %572 = sub i32 %571, %70
  %573 = add i32 %572, %75
  %574 = add i32 %573, %77
  %575 = add i32 %574, %30
  %576 = add i32 %575, %86
  %577 = add i32 %576, %95
  %578 = add i32 %577, %26
  %579 = sub i32 %578, %148
  %580 = add i32 %579, %163
  %581 = sub i32 %580, %29
  %582 = sub i32 %581, %27
  %583 = add i32 %582, %45
  %584 = sub i32 %583, %181
  %585 = sub i32 %584, %185
  %586 = sub i32 %585, %198
  %587 = sub i32 %586, %200
  %588 = sub i32 %587, %202
  %589 = add i32 %588, %71
  %590 = sub i32 %589, %20
  %591 = sub i32 %590, %17
  %592 = add i32 %591, %28
  %593 = sub i32 %592, %33
  %594 = add i32 %593, %41
  %595 = add i32 %594, %48
  %596 = sub i32 %595, %52
  %597 = add i32 %596, %55
  %598 = sub i32 %597, %60
  %599 = add i32 %598, %61
  %600 = add i32 %599, %63
  %601 = sub i32 %600, %64
  %602 = sub i32 %601, %65
  %603 = sub i32 %602, %72
  %604 = sub i32 %603, %74
  %605 = sub i32 %604, %76
  %606 = add i32 %605, %87
  %607 = add i32 %606, %88
  %608 = sub i32 %607, %89
  %609 = sub i32 %608, %90
  %610 = sub i32 %609, %91
  %611 = add i32 %610, %98
  %612 = add i32 %611, %100
  %613 = add i32 %612, %101
  %614 = sub i32 %613, %103
  %615 = sub i32 %614, %106
  %616 = add i32 %615, %107
  %617 = add i32 %616, %108
  %618 = add i32 %617, %109
  %619 = sub i32 %618, %112
  %620 = sub i32 %619, %113
  %621 = add i32 %620, %114
  %622 = add i32 %621, %115
  %623 = sub i32 %622, %120
  %624 = sub i32 %623, %122
  %625 = sub i32 %624, %123
  %626 = sub i32 %625, %125
  %627 = add i32 %626, %126
  %628 = sub i32 %627, %127
  %629 = sub i32 %628, %128
  %630 = sub i32 %629, %131
  %631 = add i32 %630, %132
  %632 = add i32 %631, %134
  %633 = add i32 %632, %135
  %634 = sub i32 %633, %137
  %635 = add i32 %634, %138
  %636 = sub i32 %635, %139
  %637 = add i32 %636, %140
  %638 = sub i32 %637, %141
  %639 = add i32 %638, %145
  %640 = sub i32 %639, %147
  %641 = add i32 %640, %150
  %642 = add i32 %641, %151
  %643 = add i32 %642, %152
  %644 = add i32 %643, %154
  %645 = sub i32 %644, %155
  %646 = add i32 %645, %161
  %647 = add i32 %646, %162
  %648 = add i32 %647, %166
  %649 = add i32 %648, %167
  %650 = add i32 %649, %168
  %651 = sub i32 %650, %170
  %652 = add i32 %651, %172
  %653 = sub i32 %652, %173
  %654 = add i32 %653, %175
  %655 = sub i32 %654, %176
  %656 = add i32 %655, %178
  %657 = add i32 %656, %182
  %658 = add i32 %657, %184
  %659 = add i32 %658, %193
  %660 = add i32 %659, %194
  %661 = sub i32 %660, %195
  %662 = sub i32 %661, %196
  %663 = sub i32 %662, %199
  %664 = sub i32 %663, %201
  %665 = sub i32 %664, %203
  %666 = add i32 %665, %206
  %667 = sub i32 %666, %208
  %668 = add i32 %667, %209
  %669 = add i32 %668, %211
  %670 = add i32 %669, %212
  %671 = sub i32 %670, %4
  %672 = sub i32 %671, %25
  %673 = sub i32 %672, %36
  %674 = sub i32 %673, %68
  %675 = sub i32 %674, %85
  %676 = sub i32 %675, %94
  %677 = sub i32 %676, %105
  %678 = sub i32 %677, %118
  %679 = sub i32 %678, %130
  %680 = add i32 %679, %136
  %681 = add i32 %680, %144
  %682 = sub i32 %681, %157
  %683 = sub i32 %682, %160
  %684 = sub i32 %683, %174
  %685 = sub i32 %684, %180
  %686 = sub i32 %685, %205
  %687 = sub i32 %686, %207
  %688 = add i32 %687, %214
  %689 = add i32 %688, %216
  %690 = add i32 %689, %218
  %691 = add i32 %690, %221
  %692 = sub i32 %691, %245
  %693 = add i32 %692, %311
  %694 = add i32 %693, %421
  %695 = sub i32 %694, %249
  %696 = add i32 %695, %5
  %697 = sub i32 %696, %259
  %698 = add i32 %697, %11
  %699 = sub i32 %698, %268
  %700 = sub i32 %699, %279
  %701 = add i32 %700, %280
  %702 = add i32 %701, %285
  %703 = add i32 %702, %288
  %704 = add i32 %703, %292
  %705 = sub i32 %704, %294
  %706 = add i32 %705, %254
  %707 = sub i32 %706, %250
  %708 = add i32 %707, %341
  %709 = add i32 %708, %349
  %710 = sub i32 %709, %352
  %711 = sub i32 %710, %358
  %712 = sub i32 %711, %380
  %713 = sub i32 %712, %381
  %714 = sub i32 %713, %224
  %715 = add i32 %714, %391
  %716 = add i32 %715, %397
  %717 = add i32 %716, %402
  %718 = add i32 %717, %404
  %719 = sub i32 %718, %406
  %720 = add i32 %719, %414
  %721 = add i32 %720, %417
  %722 = add i32 %721, %431
  %723 = add i32 %722, %432
  %724 = add i32 %723, %435
  %725 = sub i32 %724, %446
  %726 = sub i32 %725, %451
  %727 = add i32 %726, %457
  %728 = sub i32 %727, %464
  %729 = add i32 %728, %240
  %730 = sub i32 %729, %474
  %731 = add i32 %730, %558
  %732 = add i32 %731, %83
  %733 = sub i32 %732, %226
  %734 = add i32 %733, %232
  %735 = sub i32 %734, %235
  %736 = add i32 %735, %238
  %737 = add i32 %736, %241
  %738 = sub i32 %737, %242
  %739 = add i32 %738, %244
  %740 = add i32 %739, %247
  %741 = sub i32 %740, %248
  %742 = add i32 %741, %251
  %743 = add i32 %742, %252
  %744 = add i32 %743, %253
  %745 = add i32 %744, %255
  %746 = sub i32 %745, %257
  %747 = add i32 %746, %260
  %748 = sub i32 %747, %267
  %749 = sub i32 %748, %271
  %750 = add i32 %749, %273
  %751 = add i32 %750, %278
  %752 = add i32 %751, %286
  %753 = add i32 %752, %287
  %754 = add i32 %753, %283
  %755 = sub i32 %754, %291
  %756 = sub i32 %755, %297
  %757 = sub i32 %756, %303
  %758 = add i32 %757, %307
  %759 = sub i32 %758, %308
  %760 = add i32 %759, %310
  %761 = sub i32 %760, %317
  %762 = add i32 %761, %318
  %763 = sub i32 %762, %321
  %764 = sub i32 %763, %323
  %765 = add i32 %764, %326
  %766 = sub i32 %765, %331
  %767 = sub i32 %766, %332
  %768 = sub i32 %767, %333
  %769 = sub i32 %768, %344
  %770 = sub i32 %769, %345
  %771 = add i32 %770, %346
  %772 = sub i32 %771, %347
  %773 = add i32 %772, %348
  %774 = sub i32 %773, %353
  %775 = sub i32 %774, %354
  %776 = add i32 %775, %355
  %777 = sub i32 %776, %356
  %778 = sub i32 %777, %357
  %779 = add i32 %778, %366
  %780 = add i32 %779, %371
  %781 = add i32 %780, %374
  %782 = sub i32 %781, %375
  %783 = add i32 %782, %376
  %784 = add i32 %783, %329
  %785 = add i32 %784, %304
  %786 = sub i32 %785, %383
  %787 = sub i32 %786, %384
  %788 = add i32 %787, %386
  %789 = add i32 %788, %392
  %790 = add i32 %789, %393
  %791 = sub i32 %790, %395
  %792 = add i32 %791, %396
  %793 = add i32 %792, %398
  %794 = sub i32 %793, %401
  %795 = add i32 %794, %403
  %796 = add i32 %795, %412
  %797 = add i32 %796, %416
  %798 = add i32 %797, %418
  %799 = sub i32 %798, %419
  %800 = sub i32 %799, %422
  %801 = sub i32 %800, %423
  %802 = sub i32 %801, %424
  %803 = sub i32 %802, %427
  %804 = add i32 %803, %429
  %805 = sub i32 %804, %433
  %806 = add i32 %805, %434
  %807 = add i32 %806, %436
  %808 = sub i32 %807, %437
  %809 = sub i32 %808, %442
  %810 = sub i32 %809, %443
  %811 = sub i32 %810, %445
  %812 = add i32 %811, %447
  %813 = add i32 %812, %449
  %814 = add i32 %813, %452
  %815 = sub i32 %814, %454
  %816 = add i32 %815, %458
  %817 = sub i32 %816, %459
  %818 = sub i32 %817, %460
  %819 = add i32 %818, %465
  %820 = sub i32 %819, %466
  %821 = add i32 %820, %467
  %822 = sub i32 %821, %470
  %823 = add i32 %822, %472
  %824 = add i32 %823, %473
  %825 = sub i32 %824, %477
  %826 = sub i32 %825, %363
  %827 = sub i32 %826, %484
  %828 = sub i32 %827, %488
  %829 = sub i32 %828, %230
  %830 = sub i32 %829, %266
  %831 = sub i32 %830, %275
  %832 = add i32 %831, %284
  %833 = sub i32 %832, %290
  %834 = sub i32 %833, %296
  %835 = sub i32 %834, %299
  %836 = sub i32 %835, %306
  %837 = sub i32 %836, %309
  %838 = sub i32 %837, %313
  %839 = sub i32 %838, %315
  %840 = sub i32 %839, %319
  %841 = sub i32 %840, %330
  %842 = sub i32 %841, %335
  %843 = add i32 %842, %339
  %844 = add i32 %843, %351
  %845 = add i32 %844, %362
  %846 = add i32 %845, %368
  %847 = sub i32 %846, %370
  %848 = sub i32 %847, %373
  %849 = sub i32 %848, %388
  %850 = add i32 %849, %390
  %851 = add i32 %850, %394
  %852 = sub i32 %851, %400
  %853 = sub i32 %852, %408
  %854 = sub i32 %853, %411
  %855 = sub i32 %854, %420
  %856 = sub i32 %855, %426
  %857 = sub i32 %856, %428
  %858 = sub i32 %857, %430
  %859 = sub i32 %858, %439
  %860 = sub i32 %859, %441
  %861 = sub i32 %860, %444
  %862 = sub i32 %861, %456
  %863 = sub i32 %862, %462
  %864 = sub i32 %863, %469
  %865 = sub i32 %864, %476
  %866 = add i32 %865, %478
  %867 = sub i32 %866, %479
  %868 = sub i32 %867, %481
  %869 = sub i32 %868, %487
  %870 = add i32 %869, %491
  %871 = add i32 %870, %493
  %872 = add i32 %871, %495
  %873 = add i32 %872, %498
  %874 = add i32 %873, %499
  %875 = add i32 %874, %556
  %876 = add i32 %875, %563
  %877 = add i32 %876, %545
  %878 = add i32 %877, %554
  %879 = add i32 %878, %536
  %880 = icmp eq i32 %13, %879
  %881 = select i1 %880, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %882 = tail call i32 @puts(i8* nonnull dereferenceable(1) %881)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
