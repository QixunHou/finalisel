digraph "DFG for'crackme' function" {
	Node0x2252be0[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x2252c80[shape=record, label="  %4 = add i32 %1, 1"];
	Node0x2252d40[shape=record, label="  %5 = xor i32 %0, -1"];
	Node0x2252db0[shape=record, label="  %6 = xor i32 %1, %0"];
	Node0x2252e20[shape=record, label="  %7 = or i32 %1, %0"];
	Node0x2252e90[shape=record, label="  %8 = and i32 %3, %0"];
	Node0x2252f00[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x2252f70[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x2252fe0[shape=record, label="  %11 = shl i32 %6, 1"];
	Node0x2253050[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x22530c0[shape=record, label="  %13 = and i32 %1, %0"];
	Node0x2253130[shape=record, label="  %14 = xor i32 %7, -1"];
	Node0x22531a0[shape=record, label="  %15 = and i32 %5, %1"];
	Node0x2253210[shape=record, label="  %16 = shl i32 %13, 1"];
	Node0x2253280[shape=record, label="  %17 = add i32 %15, %14"];
	Node0x2253320[shape=record, label="  %18 = mul i32 %17, -3"];
	Node0x2253390[shape=record, label="  %19 = shl i32 %5, 1"];
	Node0x2253400[shape=record, label="  %20 = sub i32 %19, %1"];
	Node0x2253470[shape=record, label="  %21 = add i32 %20, %6"];
	Node0x22534e0[shape=record, label="  %22 = sub i32 %21, %7"];
	Node0x2253550[shape=record, label="  %23 = sub i32 %22, %8"];
	Node0x22535c0[shape=record, label="  %24 = add i32 %23, %16"];
	Node0x2253630[shape=record, label="  %25 = add i32 %24, %10"];
	Node0x22536a0[shape=record, label="  %26 = sub i32 %25, %12"];
	Node0x2253710[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x2253780[shape=record, label="  %28 = icmp eq i32 %4, %27"];
	Node0x21f3268[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2253c20[shape=record, label="  %30 = tail call i32 @puts(i8* nonnull dereferenceable(1) %29)"];
	Node0x2253c70[shape=record, label="  ret void"];
	Node0x2252be0 -> Node0x2252c80;
	Node0x2252c80 -> Node0x2252d40;
	Node0x2252d40 -> Node0x2252db0;
	Node0x2252db0 -> Node0x2252e20;
	Node0x2252e20 -> Node0x2252e90;
	Node0x2252e90 -> Node0x2252f00;
	Node0x2252f00 -> Node0x2252f70;
	Node0x2252f70 -> Node0x2252fe0;
	Node0x2252fe0 -> Node0x2253050;
	Node0x2253050 -> Node0x22530c0;
	Node0x22530c0 -> Node0x2253130;
	Node0x2253130 -> Node0x22531a0;
	Node0x22531a0 -> Node0x2253210;
	Node0x2253210 -> Node0x2253280;
	Node0x2253280 -> Node0x2253320;
	Node0x2253320 -> Node0x2253390;
	Node0x2253390 -> Node0x2253400;
	Node0x2253400 -> Node0x2253470;
	Node0x2253470 -> Node0x22534e0;
	Node0x22534e0 -> Node0x2253550;
	Node0x2253550 -> Node0x22535c0;
	Node0x22535c0 -> Node0x2253630;
	Node0x2253630 -> Node0x22536a0;
	Node0x22536a0 -> Node0x2253710;
	Node0x2253710 -> Node0x2253780;
	Node0x2253780 -> Node0x21f3268;
	Node0x21f3268 -> Node0x2253c20;
	Node0x2253c20 -> Node0x2253c70;
edge [color=red]
	Node0x2252be0 -> Node0x2252e90;
	Node0x2252e90 -> Node0x2252f00;
	Node0x2252f00 -> Node0x2252f70;
	Node0x2252db0 -> Node0x2252fe0;
	Node0x2252fe0 -> Node0x2253050;
	Node0x2252e20 -> Node0x2253130;
	Node0x2252d40 -> Node0x22531a0;
	Node0x22530c0 -> Node0x2253210;
	Node0x22531a0 -> Node0x2253280;
	Node0x2253130 -> Node0x2253280;
	Node0x2253280 -> Node0x2253320;
	Node0x2252d40 -> Node0x2253390;
	Node0x2253390 -> Node0x2253400;
	Node0x2253400 -> Node0x2253470;
	Node0x2252db0 -> Node0x2253470;
	Node0x2253470 -> Node0x22534e0;
	Node0x2252e20 -> Node0x22534e0;
	Node0x22534e0 -> Node0x2253550;
	Node0x2252e90 -> Node0x2253550;
	Node0x2253550 -> Node0x22535c0;
	Node0x2253210 -> Node0x22535c0;
	Node0x22535c0 -> Node0x2253630;
	Node0x2252f70 -> Node0x2253630;
	Node0x2253630 -> Node0x22536a0;
	Node0x2253050 -> Node0x22536a0;
	Node0x22536a0 -> Node0x2253710;
	Node0x2253320 -> Node0x2253710;
	Node0x2252c80 -> Node0x2253780;
	Node0x2253710 -> Node0x2253780;
	Node0x2253780 -> Node0x21f3268;
	Node0x21f3268 -> Node0x2253c20;
}
