digraph "DFG for'main' function" {
	Node0x232d738[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x232d7b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x232d848[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x232d8a8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x232dd28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x232f058[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x232f138[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x232f1f8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x232f2a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x232f508[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x232f5c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2330538[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2330ba8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2330ca0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x2330ea8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2331008[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2331118[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23311d8[shape=record, label="  ret i32 0"];
	Node0x232d738 -> Node0x232d7b8;
	Node0x232d7b8 -> Node0x232d848;
	Node0x232d848 -> Node0x232d8a8;
	Node0x232d8a8 -> Node0x232dd28;
	Node0x232dd28 -> Node0x232f058;
	Node0x232f058 -> Node0x232f138;
	Node0x232f138 -> Node0x232f1f8;
	Node0x232f1f8 -> Node0x232f2a8;
	Node0x232f2a8 -> Node0x232f508;
	Node0x232f508 -> Node0x232f5c8;
	Node0x232f5c8 -> Node0x2330538;
	Node0x2330538 -> Node0x2330ba8;
	Node0x2330ba8 -> Node0x2330ca0;
	Node0x2330ca0 -> Node0x2330ea8;
	Node0x2330ea8 -> Node0x2331008;
	Node0x2331008 -> Node0x2331118;
	Node0x2331118 -> Node0x23311d8;
edge [color=red]
	Node0x232d738 -> Node0x232d8a8;
	Node0x232d8a8 -> Node0x232dd28;
	Node0x232d7b8 -> Node0x232f058;
	Node0x232f058 -> Node0x232f138;
	Node0x232d848 -> Node0x232f1f8;
	Node0x232f1f8 -> Node0x232f2a8;
	Node0x232d738 -> Node0x232f508;
	Node0x232d7b8 -> Node0x232f508;
	Node0x232d848 -> Node0x232f508;
	Node0x232d738 -> Node0x232f5c8;
	Node0x232d7b8 -> Node0x2330538;
	Node0x232d848 -> Node0x2330ba8;
	Node0x232f5c8 -> Node0x2330ca0;
	Node0x2330538 -> Node0x2330ca0;
	Node0x2330ba8 -> Node0x2330ca0;
	Node0x232f1f8 -> Node0x2330ea8;
	Node0x232f058 -> Node0x2331008;
	Node0x232d8a8 -> Node0x2331118;
}
