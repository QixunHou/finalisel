digraph "DFG for'main' function" {
	Node0x1c65e08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c65e88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c65f18[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1c66378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c66458[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1c66578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c667b0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1c66868[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c677d8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c67e60[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1c67ed0[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x1c67f40[shape=record, label="  %10 = add i32 %9, 1"];
	Node0x1c67fb0[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x1c68020[shape=record, label="  %12 = mul i32 %11, -2"];
	Node0x1c68090[shape=record, label="  %13 = xor i32 %6, -1"];
	Node0x1c68100[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x1c68170[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1c681e0[shape=record, label="  %16 = xor i32 %11, -1"];
	Node0x1c68250[shape=record, label="  %17 = mul i32 %16, 3"];
	Node0x1c682c0[shape=record, label="  %18 = and i32 %7, %13"];
	Node0x1c68330[shape=record, label="  %19 = mul i32 %18, 6"];
	Node0x1c683a0[shape=record, label="  %20 = mul i32 %9, 9"];
	Node0x1c68410[shape=record, label="  %21 = and i32 %7, %6"];
	Node0x1c68480[shape=record, label="  %22 = mul i32 %21, 5"];
	Node0x1c68520[shape=record, label="  %23 = sub i32 4, %6"];
	Node0x1c68590[shape=record, label="  %24 = add i32 %23, %7"];
	Node0x1c68600[shape=record, label="  %25 = add i32 %24, %12"];
	Node0x1c68670[shape=record, label="  %26 = sub i32 %25, %15"];
	Node0x1c686e0[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x1c68750[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x1c687c0[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x1c68830[shape=record, label="  %30 = add i32 %29, %22"];
	Node0x1c688a0[shape=record, label="  %31 = icmp eq i32 %10, %30"];
	Node0x1c069d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c68b40[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x1c68d98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c68ef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c68fb8[shape=record, label="  ret i32 0"];
	Node0x1c65e08 -> Node0x1c65e88;
	Node0x1c65e88 -> Node0x1c65f18;
	Node0x1c65f18 -> Node0x1c66378;
	Node0x1c66378 -> Node0x1c66458;
	Node0x1c66458 -> Node0x1c66578;
	Node0x1c66578 -> Node0x1c667b0;
	Node0x1c667b0 -> Node0x1c66868;
	Node0x1c66868 -> Node0x1c677d8;
	Node0x1c677d8 -> Node0x1c67e60;
	Node0x1c67e60 -> Node0x1c67ed0;
	Node0x1c67ed0 -> Node0x1c67f40;
	Node0x1c67f40 -> Node0x1c67fb0;
	Node0x1c67fb0 -> Node0x1c68020;
	Node0x1c68020 -> Node0x1c68090;
	Node0x1c68090 -> Node0x1c68100;
	Node0x1c68100 -> Node0x1c68170;
	Node0x1c68170 -> Node0x1c681e0;
	Node0x1c681e0 -> Node0x1c68250;
	Node0x1c68250 -> Node0x1c682c0;
	Node0x1c682c0 -> Node0x1c68330;
	Node0x1c68330 -> Node0x1c683a0;
	Node0x1c683a0 -> Node0x1c68410;
	Node0x1c68410 -> Node0x1c68480;
	Node0x1c68480 -> Node0x1c68520;
	Node0x1c68520 -> Node0x1c68590;
	Node0x1c68590 -> Node0x1c68600;
	Node0x1c68600 -> Node0x1c68670;
	Node0x1c68670 -> Node0x1c686e0;
	Node0x1c686e0 -> Node0x1c68750;
	Node0x1c68750 -> Node0x1c687c0;
	Node0x1c687c0 -> Node0x1c68830;
	Node0x1c68830 -> Node0x1c688a0;
	Node0x1c688a0 -> Node0x1c069d8;
	Node0x1c069d8 -> Node0x1c68b40;
	Node0x1c68b40 -> Node0x1c68d98;
	Node0x1c68d98 -> Node0x1c68ef8;
	Node0x1c68ef8 -> Node0x1c68fb8;
edge [color=red]
	Node0x1c65e08 -> Node0x1c65f18;
	Node0x1c65f18 -> Node0x1c66378;
	Node0x1c65e88 -> Node0x1c66458;
	Node0x1c66458 -> Node0x1c66578;
	Node0x1c65e08 -> Node0x1c667b0;
	Node0x1c65e88 -> Node0x1c667b0;
	Node0x1c65e08 -> Node0x1c66868;
	Node0x1c65e88 -> Node0x1c677d8;
	Node0x1c677d8 -> Node0x1c67e60;
	Node0x1c66868 -> Node0x1c67ed0;
	Node0x1c67e60 -> Node0x1c67ed0;
	Node0x1c67ed0 -> Node0x1c67f40;
	Node0x1c677d8 -> Node0x1c67fb0;
	Node0x1c66868 -> Node0x1c67fb0;
	Node0x1c67fb0 -> Node0x1c68020;
	Node0x1c66868 -> Node0x1c68090;
	Node0x1c677d8 -> Node0x1c68100;
	Node0x1c66868 -> Node0x1c68100;
	Node0x1c68100 -> Node0x1c68170;
	Node0x1c67fb0 -> Node0x1c681e0;
	Node0x1c681e0 -> Node0x1c68250;
	Node0x1c677d8 -> Node0x1c682c0;
	Node0x1c68090 -> Node0x1c682c0;
	Node0x1c682c0 -> Node0x1c68330;
	Node0x1c67ed0 -> Node0x1c683a0;
	Node0x1c677d8 -> Node0x1c68410;
	Node0x1c66868 -> Node0x1c68410;
	Node0x1c68410 -> Node0x1c68480;
	Node0x1c66868 -> Node0x1c68520;
	Node0x1c68520 -> Node0x1c68590;
	Node0x1c677d8 -> Node0x1c68590;
	Node0x1c68590 -> Node0x1c68600;
	Node0x1c68020 -> Node0x1c68600;
	Node0x1c68600 -> Node0x1c68670;
	Node0x1c68170 -> Node0x1c68670;
	Node0x1c68670 -> Node0x1c686e0;
	Node0x1c68250 -> Node0x1c686e0;
	Node0x1c686e0 -> Node0x1c68750;
	Node0x1c68330 -> Node0x1c68750;
	Node0x1c68750 -> Node0x1c687c0;
	Node0x1c683a0 -> Node0x1c687c0;
	Node0x1c687c0 -> Node0x1c68830;
	Node0x1c68480 -> Node0x1c68830;
	Node0x1c67f40 -> Node0x1c688a0;
	Node0x1c68830 -> Node0x1c688a0;
	Node0x1c688a0 -> Node0x1c069d8;
	Node0x1c069d8 -> Node0x1c68b40;
	Node0x1c66458 -> Node0x1c68d98;
	Node0x1c65f18 -> Node0x1c68ef8;
}
