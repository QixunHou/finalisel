; ModuleID = '../.././c_source_file/1061_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1061_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %1, -1
  %5 = and i32 %4, %2
  %6 = and i32 %5, %0
  %7 = or i32 %4, %2
  %8 = xor i32 %7, %0
  %9 = or i32 %6, %8
  %10 = and i32 %1, %0
  %11 = or i32 %2, %1
  %12 = xor i32 %11, -1
  %13 = or i32 %10, %12
  %14 = xor i32 %2, %0
  %15 = xor i32 %14, -1
  %16 = or i32 %15, %1
  %17 = and i32 %2, %0
  %18 = or i32 %17, %1
  %19 = shl i32 %18, 1
  %20 = xor i32 %1, %0
  %21 = xor i32 %20, -1
  %22 = and i32 %15, %21
  %23 = and i32 %14, %21
  %24 = xor i32 %2, %1
  %25 = xor i32 %24, -1
  %26 = and i32 %25, %0
  %27 = and i32 %21, %2
  %28 = or i32 %24, %10
  %29 = xor i32 %2, -1
  %30 = and i32 %29, %0
  %31 = xor i32 %30, -1
  %32 = and i32 %31, %4
  %33 = or i32 %4, %0
  %34 = xor i32 %33, -1
  %35 = or i32 %15, %34
  %36 = or i32 %15, %21
  %37 = and i32 %4, %0
  %38 = xor i32 %37, -1
  %39 = and i32 %29, %38
  %40 = or i32 %1, %0
  %41 = xor i32 %40, -1
  %42 = or i32 %17, %41
  %43 = xor i32 %11, %10
  %44 = xor i32 %0, -1
  %45 = and i32 %11, %44
  %46 = and i32 %2, %1
  %47 = and i32 %46, %0
  %48 = xor i32 %24, %0
  %49 = xor i32 %48, -1
  %50 = or i32 %47, %49
  %51 = or i32 %29, %0
  %52 = xor i32 %51, %1
  %53 = and i32 %40, %15
  %54 = or i32 %2, %0
  %55 = xor i32 %54, %10
  %56 = xor i32 %46, -1
  %57 = xor i32 %30, %56
  %58 = shl i32 %57, 1
  %59 = and i32 %54, %4
  %60 = xor i32 %10, %2
  %61 = or i32 %12, %44
  %62 = add i32 %2, 1
  %63 = xor i32 %17, -1
  %64 = and i32 %63, %21
  %65 = xor i32 %51, -1
  %66 = or i32 %20, %65
  %67 = shl i32 %66, 1
  %68 = or i32 %10, %15
  %69 = xor i32 %54, -1
  %70 = or i32 %10, %69
  %71 = and i32 %33, %29
  %72 = or i32 %25, %0
  %73 = xor i32 %56, %0
  %74 = xor i32 %37, %56
  %75 = or i32 %24, %0
  %76 = xor i32 %75, 2147483647
  %77 = or i32 %76, %6
  %78 = shl i32 %77, 1
  %79 = xor i32 %17, %33
  %80 = shl i32 %79, 1
  %81 = xor i32 %11, %0
  %82 = or i32 %47, %81
  %83 = shl i32 %82, 1
  %84 = or i32 %37, %15
  %85 = and i32 %51, %4
  %86 = or i32 %37, %29
  %87 = shl i32 %25, 1
  %88 = shl i32 %20, 1
  %89 = and i32 %29, %1
  %90 = or i32 %17, %89
  %91 = and i32 %24, %33
  %92 = xor i32 %17, %40
  %93 = and i32 %54, %1
  %94 = and i32 %24, %44
  %95 = or i32 %10, %2
  %96 = xor i32 %63, %1
  %97 = or i32 %21, %2
  %98 = or i32 %14, %10
  %99 = or i32 %17, %12
  %100 = or i32 %15, %4
  %101 = or i32 %69, %4
  %102 = or i32 %25, %34
  %103 = and i32 %5, %44
  %104 = or i32 %24, %44
  %105 = xor i32 %103, %104
  %106 = or i32 %14, %21
  %107 = and i32 %20, %15
  %108 = xor i32 %51, %10
  %109 = or i32 %14, %1
  %110 = or i32 %29, %1
  %111 = xor i32 %30, %110
  %112 = xor i32 %6, %75
  %113 = xor i32 %54, %1
  %114 = xor i32 %89, -1
  %115 = xor i32 %37, %114
  %116 = xor i32 %12, %0
  %117 = or i32 %17, %21
  %118 = or i32 %110, %44
  %119 = xor i32 %37, %2
  %120 = or i32 %11, %44
  %121 = or i32 %29, %21
  %122 = or i32 %24, %41
  %123 = and i32 %20, %63
  %124 = and i32 %25, %44
  %125 = or i32 %46, %0
  %126 = and i32 %56, %44
  %127 = xor i32 %6, %49
  %128 = and i32 %51, %1
  %129 = or i32 %30, %4
  %130 = and i32 %46, %44
  %131 = and i32 %11, %0
  %132 = xor i32 %131, 2147483647
  %133 = xor i32 %132, %130
  %134 = or i32 %114, %0
  %135 = or i32 %14, %41
  %136 = xor i32 %110, -1
  %137 = or i32 %10, %136
  %138 = and i32 %20, %2
  %139 = or i32 %12, %0
  %140 = shl i32 %139, 1
  %141 = xor i32 %34, %2
  %142 = and i32 %20, %29
  %143 = or i32 %10, %25
  %144 = and i32 %24, %0
  %145 = or i32 %130, %144
  %146 = or i32 %114, %44
  %147 = or i32 %20, %2
  %148 = and i32 %33, %25
  %149 = and i32 %51, %20
  %150 = shl i32 %149, 1
  %151 = or i32 %46, %37
  %152 = and i32 %14, %20
  %153 = xor i32 %10, -1
  %154 = and i32 %15, %153
  %155 = shl i32 %154, 1
  %156 = and i32 %153, %2
  %157 = shl i32 %156, 1
  %158 = or i32 %6, %48
  %159 = or i32 %30, %21
  %160 = or i32 %17, %20
  %161 = or i32 %17, %4
  %162 = or i32 %10, %29
  %163 = shl i32 %162, 1
  %164 = and i32 %31, %21
  %165 = shl i32 %164, 1
  %166 = xor i32 %65, %1
  %167 = and i32 %20, %31
  %168 = or i32 %136, %0
  %169 = and i32 %51, %21
  %170 = and i32 %40, %25
  %171 = and i32 %38, %2
  %172 = xor i32 %30, %1
  %173 = or i32 %20, %29
  %174 = and i32 %114, %0
  %175 = and i32 %40, %2
  %176 = and i32 %40, %29
  %177 = xor i32 %6, -1
  %178 = xor i32 %8, %177
  %179 = and i32 %14, %4
  %180 = or i32 %47, %45
  %181 = or i32 %24, %37
  %182 = xor i32 %114, %0
  %183 = or i32 %37, %2
  %184 = and i32 %29, %153
  %185 = xor i32 %25, %0
  %186 = and i32 %14, %1
  %187 = or i32 %34, %2
  %188 = shl i32 %187, 1
  %189 = or i32 %14, %34
  %190 = or i32 %29, %34
  %191 = or i32 %89, %37
  %192 = add i32 %89, 1
  %193 = and i32 %24, %40
  %194 = shl i32 %193, 1
  %195 = and i32 %14, %33
  %196 = and i32 %63, %4
  %197 = or i32 %25, %41
  %198 = and i32 %24, %38
  %199 = shl i32 %56, 1
  %200 = or i32 %24, %34
  %201 = or i32 %20, %15
  %202 = xor i32 %136, %0
  %203 = and i32 %110, %44
  %204 = xor i32 %31, %1
  %205 = and i32 %7, %0
  %206 = or i32 %103, %205
  %207 = xor i32 %153, %2
  %208 = and i32 %54, %20
  %209 = or i32 %69, %21
  %210 = and i32 %14, %153
  %211 = xor i32 %41, %2
  %212 = or i32 %130, %131
  %213 = and i32 %14, %40
  %214 = or i32 %29, %41
  %215 = xor i32 %94, -1
  %216 = xor i32 %47, %215
  %217 = or i32 %30, %46
  %218 = shl i32 %33, 1
  %219 = and i32 %14, %38
  %220 = and i32 %24, %153
  %221 = shl i32 %220, 1
  %222 = xor i32 %40, %2
  %223 = and i32 %15, %1
  %224 = or i32 %46, %44
  %225 = xor i32 %17, %1
  %226 = or i32 %20, %69
  %227 = and i32 %7, %44
  %228 = xor i32 %227, %177
  %229 = or i32 %10, %65
  %230 = and i32 %31, %1
  %231 = xor i32 %89, %0
  %232 = or i32 %15, %41
  %233 = or i32 %65, %4
  %234 = xor i32 %81, 2147483647
  %235 = xor i32 %234, %47
  %236 = shl i32 %235, 1
  %237 = xor i32 %205, -1
  %238 = xor i32 %103, %237
  %239 = and i32 %33, %2
  %240 = or i32 %69, %1
  %241 = xor i32 %110, %10
  %242 = xor i32 %69, %1
  %243 = or i32 %136, %44
  %244 = and i32 %29, %21
  %245 = or i32 %14, %20
  %246 = and i32 %54, %21
  %247 = or i32 %6, %227
  %248 = shl i32 %21, 1
  %249 = or i32 %30, %136
  %250 = xor i32 %17, %11
  %251 = or i32 %41, %2
  %252 = or i32 %89, %0
  %253 = or i32 %30, %1
  %254 = or i32 %11, %0
  %255 = and i32 %25, %38
  %256 = shl i32 %255, 1
  %257 = xor i32 %33, %2
  %258 = or i32 %56, %44
  %259 = and i32 %12, %44
  %260 = mul i32 %259, 28
  %261 = and i32 %89, %44
  %262 = mul i32 %261, 9
  %263 = and i32 %12, %0
  %264 = and i32 %89, %0
  %265 = and i32 %136, %44
  %266 = mul i32 %265, -6
  %267 = and i32 %136, %0
  %268 = shl i32 %267, 4
  %269 = shl i32 %47, 3
  %270 = add i32 %141, %142
  %271 = add i32 %270, %71
  %272 = add i32 %271, %210
  %273 = add i32 %272, %208
  %274 = add i32 %273, %202
  %275 = add i32 %274, %197
  %276 = add i32 %275, %189
  %277 = add i32 %276, %169
  %278 = add i32 %277, %167
  %279 = add i32 %278, %152
  %280 = add i32 %279, %148
  %281 = add i32 %280, %117
  %282 = add i32 %281, %116
  %283 = add i32 %282, %109
  %284 = add i32 %283, %101
  %285 = add i32 %284, %94
  %286 = add i32 %285, %43
  %287 = add i32 %286, %212
  %288 = add i32 %287, %133
  %289 = shl i32 %288, 1
  %290 = or i32 %130, %264
  %291 = sub i32 %290, %263
  %292 = sub i32 %291, %243
  %293 = sub i32 %292, %232
  %294 = sub i32 %293, %182
  %295 = add i32 %294, %137
  %296 = add i32 %295, %90
  %297 = mul i32 %296, 5
  %298 = sub i32 %225, %131
  %299 = sub i32 %298, %143
  %300 = sub i32 %299, %120
  %301 = add i32 %300, %55
  %302 = mul i32 %301, 3
  %303 = add i32 %153, %2
  %304 = shl i32 %303, 2
  %305 = add i32 %0, -1
  %306 = add i32 %305, %0
  %307 = sub i32 %306, %1
  %308 = add i32 %307, %62
  %309 = sub i32 %308, %40
  %310 = sub i32 %309, %40
  %311 = add i32 %310, %34
  %312 = sub i32 %311, %10
  %313 = sub i32 %312, %27
  %314 = sub i32 %313, %11
  %315 = sub i32 %314, %39
  %316 = sub i32 %315, %60
  %317 = sub i32 %316, %86
  %318 = sub i32 %317, %88
  %319 = add i32 %318, %95
  %320 = sub i32 %319, %97
  %321 = add i32 %320, %119
  %322 = add i32 %321, %121
  %323 = sub i32 %322, %24
  %324 = add i32 %323, %138
  %325 = sub i32 %324, %147
  %326 = add i32 %325, %15
  %327 = add i32 %326, %12
  %328 = sub i32 %327, %171
  %329 = add i32 %328, %173
  %330 = sub i32 %329, %175
  %331 = sub i32 %330, %176
  %332 = sub i32 %331, %183
  %333 = sub i32 %332, %184
  %334 = add i32 %333, %190
  %335 = add i32 %334, %192
  %336 = sub i32 %335, %207
  %337 = sub i32 %336, %89
  %338 = add i32 %337, %211
  %339 = add i32 %338, %54
  %340 = add i32 %339, %214
  %341 = sub i32 %340, %110
  %342 = sub i32 %341, %218
  %343 = sub i32 %342, %222
  %344 = sub i32 %343, %239
  %345 = sub i32 %344, %244
  %346 = sub i32 %345, %248
  %347 = sub i32 %346, %251
  %348 = add i32 %347, %257
  %349 = add i32 %348, %16
  %350 = add i32 %349, %13
  %351 = add i32 %350, %22
  %352 = sub i32 %351, %23
  %353 = add i32 %352, %26
  %354 = add i32 %353, %28
  %355 = sub i32 %354, %32
  %356 = add i32 %355, %35
  %357 = add i32 %356, %36
  %358 = add i32 %357, %42
  %359 = add i32 %358, %45
  %360 = add i32 %359, %52
  %361 = add i32 %360, %53
  %362 = sub i32 %361, %59
  %363 = add i32 %362, %61
  %364 = sub i32 %363, %64
  %365 = sub i32 %364, %68
  %366 = sub i32 %365, %70
  %367 = sub i32 %366, %72
  %368 = add i32 %367, %73
  %369 = add i32 %368, %74
  %370 = sub i32 %369, %84
  %371 = sub i32 %370, %85
  %372 = sub i32 %371, %87
  %373 = add i32 %372, %91
  %374 = add i32 %373, %92
  %375 = add i32 %374, %93
  %376 = sub i32 %375, %96
  %377 = add i32 %376, %98
  %378 = add i32 %377, %99
  %379 = add i32 %378, %100
  %380 = sub i32 %379, %102
  %381 = add i32 %380, %106
  %382 = sub i32 %381, %107
  %383 = sub i32 %382, %108
  %384 = add i32 %383, %111
  %385 = sub i32 %384, %113
  %386 = add i32 %385, %115
  %387 = sub i32 %386, %118
  %388 = sub i32 %387, %122
  %389 = sub i32 %388, %123
  %390 = sub i32 %389, %124
  %391 = sub i32 %390, %125
  %392 = add i32 %391, %126
  %393 = sub i32 %392, %128
  %394 = sub i32 %393, %129
  %395 = sub i32 %394, %134
  %396 = sub i32 %395, %135
  %397 = sub i32 %396, %81
  %398 = sub i32 %397, %146
  %399 = sub i32 %398, %151
  %400 = sub i32 %399, %157
  %401 = add i32 %400, %159
  %402 = sub i32 %401, %160
  %403 = add i32 %402, %161
  %404 = sub i32 %403, %163
  %405 = add i32 %404, %166
  %406 = add i32 %405, %104
  %407 = add i32 %406, %168
  %408 = sub i32 %407, %170
  %409 = add i32 %408, %172
  %410 = sub i32 %409, %174
  %411 = add i32 %410, %179
  %412 = add i32 %411, %181
  %413 = sub i32 %412, %185
  %414 = sub i32 %413, %186
  %415 = sub i32 %414, %188
  %416 = sub i32 %415, %191
  %417 = add i32 %416, %195
  %418 = sub i32 %417, %196
  %419 = add i32 %418, %198
  %420 = sub i32 %419, %199
  %421 = add i32 %420, %200
  %422 = sub i32 %421, %201
  %423 = add i32 %422, %203
  %424 = sub i32 %423, %204
  %425 = add i32 %424, %209
  %426 = sub i32 %425, %144
  %427 = sub i32 %426, %213
  %428 = add i32 %427, %217
  %429 = sub i32 %428, %219
  %430 = add i32 %429, %223
  %431 = add i32 %430, %224
  %432 = sub i32 %431, %226
  %433 = add i32 %432, %229
  %434 = add i32 %433, %230
  %435 = add i32 %434, %231
  %436 = add i32 %435, %233
  %437 = add i32 %436, %240
  %438 = sub i32 %437, %241
  %439 = add i32 %438, %242
  %440 = add i32 %439, %245
  %441 = add i32 %440, %246
  %442 = add i32 %441, %249
  %443 = add i32 %442, %75
  %444 = sub i32 %443, %250
  %445 = sub i32 %444, %252
  %446 = add i32 %445, %253
  %447 = add i32 %446, %254
  %448 = sub i32 %447, %258
  %449 = add i32 %448, %304
  %450 = sub i32 %449, %19
  %451 = sub i32 %450, %50
  %452 = sub i32 %451, %58
  %453 = sub i32 %452, %67
  %454 = sub i32 %453, %80
  %455 = sub i32 %454, %105
  %456 = add i32 %455, %112
  %457 = add i32 %456, %127
  %458 = sub i32 %457, %140
  %459 = sub i32 %458, %145
  %460 = sub i32 %459, %150
  %461 = sub i32 %460, %155
  %462 = sub i32 %461, %158
  %463 = sub i32 %462, %165
  %464 = add i32 %463, %178
  %465 = sub i32 %464, %180
  %466 = sub i32 %465, %194
  %467 = add i32 %466, %206
  %468 = add i32 %467, %216
  %469 = sub i32 %468, %221
  %470 = sub i32 %469, %228
  %471 = sub i32 %470, %238
  %472 = add i32 %471, %247
  %473 = sub i32 %472, %256
  %474 = add i32 %473, %260
  %475 = add i32 %474, %262
  %476 = add i32 %475, %266
  %477 = add i32 %476, %268
  %478 = sub i32 %477, %269
  %479 = sub i32 %478, %83
  %480 = sub i32 %479, %78
  %481 = sub i32 %480, %236
  %482 = add i32 %481, %302
  %483 = add i32 %482, %297
  %484 = add i32 %483, %289
  %485 = icmp eq i32 %9, %484
  %486 = select i1 %485, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %487 = tail call i32 @puts(i8* nonnull dereferenceable(1) %486)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
