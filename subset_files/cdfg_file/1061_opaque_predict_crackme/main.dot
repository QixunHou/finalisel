digraph "DFG for'main' function" {
	Node0x1f57618[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f57698[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f57728[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f57788[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1f57c08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f57ce8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1f57de8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f57ea8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1f57f58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f581b8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1f58278[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f583d8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f58438[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f5f9e0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1f5fbc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f5fd28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f5fe38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f5fef8[shape=record, label="  ret i32 0"];
	Node0x1f57618 -> Node0x1f57698;
	Node0x1f57698 -> Node0x1f57728;
	Node0x1f57728 -> Node0x1f57788;
	Node0x1f57788 -> Node0x1f57c08;
	Node0x1f57c08 -> Node0x1f57ce8;
	Node0x1f57ce8 -> Node0x1f57de8;
	Node0x1f57de8 -> Node0x1f57ea8;
	Node0x1f57ea8 -> Node0x1f57f58;
	Node0x1f57f58 -> Node0x1f581b8;
	Node0x1f581b8 -> Node0x1f58278;
	Node0x1f58278 -> Node0x1f583d8;
	Node0x1f583d8 -> Node0x1f58438;
	Node0x1f58438 -> Node0x1f5f9e0;
	Node0x1f5f9e0 -> Node0x1f5fbc8;
	Node0x1f5fbc8 -> Node0x1f5fd28;
	Node0x1f5fd28 -> Node0x1f5fe38;
	Node0x1f5fe38 -> Node0x1f5fef8;
edge [color=red]
	Node0x1f57618 -> Node0x1f57788;
	Node0x1f57788 -> Node0x1f57c08;
	Node0x1f57698 -> Node0x1f57ce8;
	Node0x1f57ce8 -> Node0x1f57de8;
	Node0x1f57728 -> Node0x1f57ea8;
	Node0x1f57ea8 -> Node0x1f57f58;
	Node0x1f57618 -> Node0x1f581b8;
	Node0x1f57698 -> Node0x1f581b8;
	Node0x1f57728 -> Node0x1f581b8;
	Node0x1f57618 -> Node0x1f58278;
	Node0x1f57698 -> Node0x1f583d8;
	Node0x1f57728 -> Node0x1f58438;
	Node0x1f58278 -> Node0x1f5f9e0;
	Node0x1f583d8 -> Node0x1f5f9e0;
	Node0x1f58438 -> Node0x1f5f9e0;
	Node0x1f57ea8 -> Node0x1f5fbc8;
	Node0x1f57ce8 -> Node0x1f5fd28;
	Node0x1f57788 -> Node0x1f5fe38;
}
