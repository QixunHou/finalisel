digraph "DFG for'main' function" {
	Node0x105e808[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x105e888[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x105e918[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x105e978[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x105ea28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x105ee58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x105ef38[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x105f038[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x105f0f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x105f1a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x105f268[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x105f318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1059a30[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x105f518[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1060488[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1060af8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1060b58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1060bd0[shape=record, label="  %14 = or i32 %13, %10"];
	Node0x1060c40[shape=record, label="  %15 = sub i32 %11, %14"];
	Node0x1060cb0[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x1060d20[shape=record, label="  %17 = xor i32 %12, %11"];
	Node0x1060d90[shape=record, label="  %18 = and i32 %11, %16"];
	Node0x1060e00[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x1060e70[shape=record, label="  %20 = xor i32 %19, 2147483647"];
	Node0x1060ee0[shape=record, label="  %21 = and i32 %12, %11"];
	Node0x1060f50[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0x1060fc0[shape=record, label="  %23 = and i32 %13, %10"];
	Node0x1061030[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x10610a0[shape=record, label="  %25 = xor i32 %10, -1"];
	Node0x1061110[shape=record, label="  %26 = xor i32 %13, %10"];
	Node0x1061180[shape=record, label="  %27 = and i32 %13, %25"];
	Node0x10611f0[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x1061260[shape=record, label="  %29 = xor i32 %14, -1"];
	Node0x10612d0[shape=record, label="  %30 = xor i32 %13, -1"];
	Node0x1061340[shape=record, label="  %31 = and i32 %10, %30"];
	Node0x10613b0[shape=record, label="  %32 = add i32 %20, %18"];
	Node0x1061420[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x1061490[shape=record, label="  %34 = sub i32 5, %11"];
	Node0x1061500[shape=record, label="  %35 = add i32 %34, %12"];
	Node0x1061570[shape=record, label="  %36 = add i32 %35, %17"];
	Node0x10615e0[shape=record, label="  %37 = add i32 %36, %18"];
	Node0x1061650[shape=record, label="  %38 = add i32 %37, %13"];
	Node0x10616c0[shape=record, label="  %39 = add i32 %38, %22"];
	Node0x1061730[shape=record, label="  %40 = add i32 %39, %24"];
	Node0x10617a0[shape=record, label="  %41 = add i32 %40, %26"];
	Node0x1061810[shape=record, label="  %42 = add i32 %41, %28"];
	Node0x1061880[shape=record, label="  %43 = add i32 %42, %29"];
	Node0x10618f0[shape=record, label="  %44 = sub i32 %43, %31"];
	Node0x1061960[shape=record, label="  %45 = sub i32 %44, %27"];
	Node0x10619d0[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x1061a40[shape=record, label="  %47 = icmp eq i32 %15, %46"];
	Node0xffe8b8[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1061ad0[shape=record, label="  %49 = call i32 @puts(i8* nonnull dereferenceable(1) %48) #5"];
	Node0x1061d78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1061ed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1061fe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10620f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10621b8[shape=record, label="  ret i32 0"];
	Node0x105e808 -> Node0x105e888;
	Node0x105e888 -> Node0x105e918;
	Node0x105e918 -> Node0x105e978;
	Node0x105e978 -> Node0x105ea28;
	Node0x105ea28 -> Node0x105ee58;
	Node0x105ee58 -> Node0x105ef38;
	Node0x105ef38 -> Node0x105f038;
	Node0x105f038 -> Node0x105f0f8;
	Node0x105f0f8 -> Node0x105f1a8;
	Node0x105f1a8 -> Node0x105f268;
	Node0x105f268 -> Node0x105f318;
	Node0x105f318 -> Node0x1059a30;
	Node0x1059a30 -> Node0x105f518;
	Node0x105f518 -> Node0x1060488;
	Node0x1060488 -> Node0x1060af8;
	Node0x1060af8 -> Node0x1060b58;
	Node0x1060b58 -> Node0x1060bd0;
	Node0x1060bd0 -> Node0x1060c40;
	Node0x1060c40 -> Node0x1060cb0;
	Node0x1060cb0 -> Node0x1060d20;
	Node0x1060d20 -> Node0x1060d90;
	Node0x1060d90 -> Node0x1060e00;
	Node0x1060e00 -> Node0x1060e70;
	Node0x1060e70 -> Node0x1060ee0;
	Node0x1060ee0 -> Node0x1060f50;
	Node0x1060f50 -> Node0x1060fc0;
	Node0x1060fc0 -> Node0x1061030;
	Node0x1061030 -> Node0x10610a0;
	Node0x10610a0 -> Node0x1061110;
	Node0x1061110 -> Node0x1061180;
	Node0x1061180 -> Node0x10611f0;
	Node0x10611f0 -> Node0x1061260;
	Node0x1061260 -> Node0x10612d0;
	Node0x10612d0 -> Node0x1061340;
	Node0x1061340 -> Node0x10613b0;
	Node0x10613b0 -> Node0x1061420;
	Node0x1061420 -> Node0x1061490;
	Node0x1061490 -> Node0x1061500;
	Node0x1061500 -> Node0x1061570;
	Node0x1061570 -> Node0x10615e0;
	Node0x10615e0 -> Node0x1061650;
	Node0x1061650 -> Node0x10616c0;
	Node0x10616c0 -> Node0x1061730;
	Node0x1061730 -> Node0x10617a0;
	Node0x10617a0 -> Node0x1061810;
	Node0x1061810 -> Node0x1061880;
	Node0x1061880 -> Node0x10618f0;
	Node0x10618f0 -> Node0x1061960;
	Node0x1061960 -> Node0x10619d0;
	Node0x10619d0 -> Node0x1061a40;
	Node0x1061a40 -> Node0xffe8b8;
	Node0xffe8b8 -> Node0x1061ad0;
	Node0x1061ad0 -> Node0x1061d78;
	Node0x1061d78 -> Node0x1061ed8;
	Node0x1061ed8 -> Node0x1061fe8;
	Node0x1061fe8 -> Node0x10620f8;
	Node0x10620f8 -> Node0x10621b8;
edge [color=red]
	Node0x105e808 -> Node0x105ea28;
	Node0x105ea28 -> Node0x105ee58;
	Node0x105e888 -> Node0x105ef38;
	Node0x105ef38 -> Node0x105f038;
	Node0x105e918 -> Node0x105f0f8;
	Node0x105f0f8 -> Node0x105f1a8;
	Node0x105e978 -> Node0x105f268;
	Node0x105f268 -> Node0x105f318;
	Node0x105e808 -> Node0x1059a30;
	Node0x105e888 -> Node0x1059a30;
	Node0x105e918 -> Node0x1059a30;
	Node0x105e978 -> Node0x1059a30;
	Node0x105e808 -> Node0x105f518;
	Node0x105e888 -> Node0x1060488;
	Node0x105e918 -> Node0x1060af8;
	Node0x105e978 -> Node0x1060b58;
	Node0x1060b58 -> Node0x1060bd0;
	Node0x105f518 -> Node0x1060bd0;
	Node0x1060488 -> Node0x1060c40;
	Node0x1060bd0 -> Node0x1060c40;
	Node0x1060af8 -> Node0x1060cb0;
	Node0x1060af8 -> Node0x1060d20;
	Node0x1060488 -> Node0x1060d20;
	Node0x1060488 -> Node0x1060d90;
	Node0x1060cb0 -> Node0x1060d90;
	Node0x1060af8 -> Node0x1060e00;
	Node0x1060488 -> Node0x1060e00;
	Node0x1060e00 -> Node0x1060e70;
	Node0x1060af8 -> Node0x1060ee0;
	Node0x1060488 -> Node0x1060ee0;
	Node0x1060ee0 -> Node0x1060f50;
	Node0x1060b58 -> Node0x1060fc0;
	Node0x105f518 -> Node0x1060fc0;
	Node0x1060fc0 -> Node0x1061030;
	Node0x105f518 -> Node0x10610a0;
	Node0x1060b58 -> Node0x1061110;
	Node0x105f518 -> Node0x1061110;
	Node0x1060b58 -> Node0x1061180;
	Node0x10610a0 -> Node0x1061180;
	Node0x1061180 -> Node0x10611f0;
	Node0x1060bd0 -> Node0x1061260;
	Node0x1060b58 -> Node0x10612d0;
	Node0x105f518 -> Node0x1061340;
	Node0x10612d0 -> Node0x1061340;
	Node0x1060e70 -> Node0x10613b0;
	Node0x1060d90 -> Node0x10613b0;
	Node0x10613b0 -> Node0x1061420;
	Node0x1060488 -> Node0x1061490;
	Node0x1061490 -> Node0x1061500;
	Node0x1060af8 -> Node0x1061500;
	Node0x1061500 -> Node0x1061570;
	Node0x1060d20 -> Node0x1061570;
	Node0x1061570 -> Node0x10615e0;
	Node0x1060d90 -> Node0x10615e0;
	Node0x10615e0 -> Node0x1061650;
	Node0x1060b58 -> Node0x1061650;
	Node0x1061650 -> Node0x10616c0;
	Node0x1060f50 -> Node0x10616c0;
	Node0x10616c0 -> Node0x1061730;
	Node0x1061030 -> Node0x1061730;
	Node0x1061730 -> Node0x10617a0;
	Node0x1061110 -> Node0x10617a0;
	Node0x10617a0 -> Node0x1061810;
	Node0x10611f0 -> Node0x1061810;
	Node0x1061810 -> Node0x1061880;
	Node0x1061260 -> Node0x1061880;
	Node0x1061880 -> Node0x10618f0;
	Node0x1061340 -> Node0x10618f0;
	Node0x10618f0 -> Node0x1061960;
	Node0x1061180 -> Node0x1061960;
	Node0x1061960 -> Node0x10619d0;
	Node0x1061420 -> Node0x10619d0;
	Node0x1060c40 -> Node0x1061a40;
	Node0x10619d0 -> Node0x1061a40;
	Node0x1061a40 -> Node0xffe8b8;
	Node0xffe8b8 -> Node0x1061ad0;
	Node0x105f268 -> Node0x1061d78;
	Node0x105f0f8 -> Node0x1061ed8;
	Node0x105ef38 -> Node0x1061fe8;
	Node0x105ea28 -> Node0x10620f8;
}
