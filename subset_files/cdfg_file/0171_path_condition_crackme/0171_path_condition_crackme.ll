; ModuleID = '../.././c_source_file/0171_path_condition_crackme.c'
source_filename = "../.././c_source_file/0171_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %1, %0
  %8 = xor i32 %2, %1
  %9 = and i32 %8, %7
  %10 = and i32 %5, %4
  %11 = xor i32 %5, -1
  %12 = and i32 %11, %3
  %13 = or i32 %10, %12
  %14 = sub i32 %9, %13
  %15 = xor i32 %5, %3
  %16 = xor i32 %15, -1
  %17 = xor i32 %16, %4
  %18 = shl i32 %17, 2
  %19 = add i32 %14, %18
  %20 = or i32 %2, %0
  %21 = xor i32 %1, %0
  %22 = xor i32 %21, -1
  %23 = and i32 %20, %22
  %24 = xor i32 %2, %0
  %25 = xor i32 %24, -1
  %26 = or i32 %25, %22
  %27 = and i32 %1, %0
  %28 = xor i32 %2, -1
  %29 = or i32 %28, %0
  %30 = xor i32 %29, -1
  %31 = or i32 %27, %30
  %32 = and i32 %28, %0
  %33 = and i32 %21, %28
  %34 = shl i32 %33, 1
  %35 = xor i32 %32, -1
  %36 = and i32 %35, %1
  %37 = shl i32 %36, 1
  %38 = xor i32 %0, -1
  %39 = and i32 %8, %38
  %40 = and i32 %2, %1
  %41 = and i32 %40, %0
  %42 = or i32 %2, %1
  %43 = xor i32 %42, %0
  %44 = xor i32 %41, -1
  %45 = xor i32 %43, %44
  %46 = xor i32 %40, -1
  %47 = or i32 %46, %0
  %48 = xor i32 %1, -1
  %49 = or i32 %48, %0
  %50 = xor i32 %49, -1
  %51 = or i32 %25, %50
  %52 = and i32 %28, %1
  %53 = or i32 %52, %0
  %54 = shl i32 %53, 1
  %55 = and i32 %2, %0
  %56 = xor i32 %52, -1
  %57 = xor i32 %55, %56
  %58 = or i32 %46, %38
  %59 = or i32 %24, %22
  %60 = xor i32 %20, -1
  %61 = add i32 %20, 1
  %62 = and i32 %48, %0
  %63 = xor i32 %62, -1
  %64 = and i32 %63, %2
  %65 = xor i32 %8, -1
  %66 = or i32 %27, %65
  %67 = shl i32 %66, 1
  %68 = xor i32 %50, %2
  %69 = xor i32 %55, -1
  %70 = and i32 %21, %69
  %71 = and i32 %28, %63
  %72 = and i32 %56, %0
  %73 = or i32 %28, %22
  %74 = or i32 %28, %1
  %75 = xor i32 %74, %0
  %76 = xor i32 %42, -1
  %77 = xor i32 %8, %0
  %78 = xor i32 %41, %77
  %79 = and i32 %21, %25
  %80 = or i32 %27, %28
  %81 = and i32 %24, %63
  %82 = and i32 %25, %22
  %83 = and i32 %48, %2
  %84 = and i32 %83, %0
  %85 = or i32 %48, %2
  %86 = and i32 %85, %38
  %87 = or i32 %84, %86
  %88 = xor i32 %7, -1
  %89 = or i32 %25, %88
  %90 = xor i32 %35, %1
  %91 = or i32 %65, %0
  %92 = or i32 %24, %50
  %93 = and i32 %25, %63
  %94 = xor i32 %74, -1
  %95 = xor i32 %94, %0
  %96 = shl i32 %95, 1
  %97 = or i32 %76, %38
  %98 = xor i32 %84, -1
  %99 = xor i32 %86, %98
  %100 = xor i32 %52, %0
  %101 = or i32 %42, %38
  %102 = xor i32 %63, %2
  %103 = xor i32 %62, %2
  %104 = shl i32 %103, 1
  %105 = or i32 %65, %50
  %106 = xor i32 %27, -1
  %107 = and i32 %28, %106
  %108 = and i32 %21, %2
  %109 = xor i32 %42, %27
  %110 = and i32 %40, %38
  %111 = and i32 %42, %0
  %112 = xor i32 %111, -1
  %113 = xor i32 %110, %112
  %114 = or i32 %27, %76
  %115 = and i32 %24, %48
  %116 = shl i32 %115, 1
  %117 = or i32 %62, %2
  %118 = or i32 %21, %25
  %119 = or i32 %55, %76
  %120 = or i32 %32, %94
  %121 = and i32 %106, %2
  %122 = and i32 %46, %38
  %123 = shl i32 %122, 1
  %124 = and i32 %7, %25
  %125 = xor i32 %30, %1
  %126 = and i32 %25, %48
  %127 = or i32 %30, %48
  %128 = add i32 %40, 1
  %129 = and i32 %8, %0
  %130 = or i32 %110, %129
  %131 = or i32 %60, %48
  %132 = and i32 %74, %38
  %133 = or i32 %55, %22
  %134 = or i32 %32, %1
  %135 = or i32 %55, %48
  %136 = or i32 %55, %52
  %137 = and i32 %8, %63
  %138 = and i32 %65, %63
  %139 = shl i32 %8, 2
  %140 = or i32 %24, %27
  %141 = or i32 %21, %2
  %142 = shl i32 %141, 1
  %143 = and i32 %21, %35
  %144 = or i32 %32, %48
  %145 = and i32 %83, %38
  %146 = xor i32 %8, 2147483647
  %147 = and i32 %146, %0
  %148 = or i32 %147, %145
  %149 = and i32 %7, %2
  %150 = shl i32 %94, 1
  %151 = and i32 %7, %28
  %152 = or i32 %40, %38
  %153 = or i32 %22, %2
  %154 = xor i32 %62, %46
  %155 = or i32 %56, %38
  %156 = and i32 %49, %65
  %157 = or i32 %76, %0
  %158 = or i32 %24, %48
  %159 = and i32 %42, %38
  %160 = xor i32 %159, %44
  %161 = or i32 %74, %0
  %162 = add i32 %52, 1
  %163 = shl i32 %69, 1
  %164 = and i32 %24, %7
  %165 = xor i32 %20, %1
  %166 = and i32 %56, %38
  %167 = or i32 %27, %60
  %168 = or i32 %8, %50
  %169 = and i32 %85, %0
  %170 = xor i32 %169, -1
  %171 = xor i32 %145, %170
  %172 = xor i32 %32, %1
  %173 = or i32 %32, %40
  %174 = or i32 %27, %94
  %175 = or i32 %88, %2
  %176 = shl i32 %175, 1
  %177 = xor i32 %55, %42
  %178 = and i32 %24, %21
  %179 = xor i32 %7, %2
  %180 = and i32 %8, %106
  %181 = or i32 %145, %169
  %182 = and i32 %49, %2
  %183 = shl i32 %182, 1
  %184 = xor i32 %29, %27
  %185 = or i32 %55, %21
  %186 = or i32 %28, %88
  %187 = xor i32 %106, %2
  %188 = xor i32 %40, %0
  %189 = shl i32 %188, 2
  %190 = xor i32 %49, %2
  %191 = or i32 %50, %2
  %192 = and i32 %29, %22
  %193 = or i32 %62, %65
  %194 = and i32 %28, %22
  %195 = xor i32 %77, %98
  %196 = or i32 %8, %88
  %197 = or i32 %21, %28
  %198 = or i32 %42, %0
  %199 = or i32 %24, %21
  %200 = xor i32 %74, %27
  %201 = xor i32 %32, %46
  %202 = or i32 %30, %1
  %203 = and i32 %74, %0
  %204 = or i32 %62, %28
  %205 = or i32 %65, %88
  %206 = or i32 %74, %38
  %207 = shl i32 %206, 1
  %208 = xor i32 %55, %1
  %209 = or i32 %28, %50
  %210 = or i32 %94, %38
  %211 = and i32 %46, %0
  %212 = and i32 %24, %49
  %213 = or i32 %94, %0
  %214 = and i32 %69, %1
  %215 = or i32 %8, %0
  %216 = and i32 %65, %0
  %217 = xor i32 %32, %74
  %218 = or i32 %21, %60
  %219 = and i32 %69, %48
  %220 = or i32 %60, %1
  %221 = shl i32 %220, 1
  %222 = and i32 %76, %38
  %223 = and i32 %52, %38
  %224 = shl i32 %223, 2
  %225 = and i32 %76, %0
  %226 = mul i32 %225, -9
  %227 = and i32 %52, %0
  %228 = shl i32 %227, 4
  %229 = and i32 %94, %38
  %230 = shl i32 %110, 1
  %231 = and i32 %94, %0
  %232 = and i32 %5, %3
  %233 = and i32 %232, %4
  %234 = xor i32 %4, -1
  %235 = or i32 %5, %3
  %236 = and i32 %235, %234
  %237 = or i32 %233, %236
  %238 = or i32 %5, %4
  %239 = xor i32 %238, %3
  %240 = and i32 %4, %3
  %241 = or i32 %240, %5
  %242 = xor i32 %3, -1
  %243 = and i32 %242, %5
  %244 = and i32 %243, %4
  %245 = or i32 %242, %5
  %246 = and i32 %245, %234
  %247 = xor i32 %246, -1
  %248 = xor i32 %244, %247
  %249 = or i32 %11, %4
  %250 = xor i32 %249, %3
  %251 = xor i32 %240, -1
  %252 = and i32 %16, %251
  %253 = and i32 %242, %4
  %254 = or i32 %232, %253
  %255 = xor i32 %12, -1
  %256 = xor i32 %253, %255
  %257 = or i32 %242, %4
  %258 = and i32 %257, %5
  %259 = xor i32 %4, %3
  %260 = or i32 %10, %259
  %261 = or i32 %253, %11
  %262 = xor i32 %10, -1
  %263 = and i32 %262, %242
  %264 = xor i32 %257, -1
  %265 = xor i32 %264, %5
  %266 = or i32 %4, %3
  %267 = xor i32 %266, -1
  %268 = or i32 %11, %267
  %269 = shl i32 %268, 1
  %270 = or i32 %255, %234
  %271 = and i32 %255, %234
  %272 = and i32 %251, %5
  %273 = xor i32 %5, %4
  %274 = xor i32 %273, -1
  %275 = and i32 %274, %251
  %276 = and i32 %273, %259
  %277 = xor i32 %232, -1
  %278 = xor i32 %253, %277
  %279 = xor i32 %10, %257
  %280 = shl i32 %279, 1
  %281 = or i32 %240, %274
  %282 = and i32 %243, %234
  %283 = and i32 %245, %4
  %284 = xor i32 %283, 2147483647
  %285 = xor i32 %284, %282
  %286 = shl i32 %285, 1
  %287 = xor i32 %259, -1
  %288 = and i32 %274, %287
  %289 = and i32 %259, %274
  %290 = xor i32 %238, -1
  %291 = xor i32 %290, %3
  %292 = or i32 %240, %290
  %293 = shl i32 %292, 1
  %294 = xor i32 %15, %4
  %295 = xor i32 %235, %4
  %296 = xor i32 %295, -1
  %297 = xor i32 %233, %296
  %298 = and i32 %274, %242
  %299 = and i32 %11, %4
  %300 = xor i32 %299, %3
  %301 = and i32 %15, %4
  %302 = xor i32 %249, %240
  %303 = or i32 %277, %234
  %304 = or i32 %232, %4
  %305 = xor i32 %294, -1
  %306 = xor i32 %244, %305
  %307 = xor i32 %253, -1
  %308 = and i32 %307, %5
  %309 = add i32 %273, 1
  %310 = or i32 %259, %11
  %311 = or i32 %282, %283
  %312 = shl i32 %311, 1
  %313 = xor i32 %235, -1
  %314 = or i32 %313, %4
  %315 = and i32 %266, %11
  %316 = xor i32 %251, %5
  %317 = or i32 %11, %3
  %318 = xor i32 %317, %240
  %319 = or i32 %12, %234
  %320 = or i32 %299, %259
  %321 = add i32 %235, 1
  %322 = or i32 %259, %274
  %323 = xor i32 %240, %5
  %324 = or i32 %232, %234
  %325 = or i32 %15, %234
  %326 = xor i32 %282, %325
  %327 = and i32 %273, %242
  %328 = or i32 %233, %295
  %329 = and i32 %255, %4
  %330 = and i32 %317, %234
  %331 = and i32 %11, %251
  %332 = or i32 %10, %287
  %333 = and i32 %266, %16
  %334 = add i32 %238, 1
  %335 = or i32 %299, %3
  %336 = and i32 %257, %274
  %337 = and i32 %273, %287
  %338 = or i32 %317, %234
  %339 = and i32 %15, %234
  %340 = xor i32 %317, -1
  %341 = or i32 %240, %340
  %342 = or i32 %273, %259
  %343 = or i32 %240, %11
  %344 = or i32 %240, %16
  %345 = xor i32 %232, %4
  %346 = xor i32 %325, -1
  %347 = or i32 %282, %346
  %348 = xor i32 %10, %235
  %349 = or i32 %11, %287
  %350 = or i32 %290, %3
  %351 = or i32 %274, %242
  %352 = and i32 %259, %262
  %353 = and i32 %232, %234
  %354 = xor i32 %301, -1
  %355 = xor i32 %353, %354
  %356 = xor i32 %277, %4
  %357 = add i32 %253, 1
  %358 = or i32 %15, %253
  %359 = or i32 %12, %4
  %360 = shl i32 %359, 1
  %361 = xor i32 %12, %4
  %362 = or i32 %274, %3
  %363 = or i32 %15, %267
  %364 = or i32 %287, %5
  %365 = xor i32 %249, -1
  %366 = add i32 %249, 1
  %367 = or i32 %253, %16
  %368 = or i32 %299, %232
  %369 = xor i32 %245, %4
  %370 = xor i32 %369, 2147483647
  %371 = xor i32 %370, %244
  %372 = xor i32 %238, %240
  %373 = and i32 %238, %287
  %374 = shl i32 %317, 1
  %375 = xor i32 %299, %317
  %376 = and i32 %266, %274
  %377 = and i32 %259, %11
  %378 = shl i32 %377, 1
  %379 = or i32 %290, %242
  %380 = and i32 %15, %251
  %381 = or i32 %16, %267
  %382 = and i32 %273, %251
  %383 = or i32 %340, %4
  %384 = xor i32 %313, %4
  %385 = or i32 %273, %242
  %386 = and i32 %238, %242
  %387 = or i32 %273, %240
  %388 = and i32 %16, %234
  %389 = or i32 %10, %3
  %390 = and i32 %249, %259
  %391 = shl i32 %390, 1
  %392 = or i32 %10, %264
  %393 = xor i32 %299, -1
  %394 = and i32 %259, %393
  %395 = xor i32 %299, %277
  %396 = and i32 %249, %287
  %397 = shl i32 %396, 1
  %398 = or i32 %253, %274
  %399 = xor i32 %262, %3
  %400 = and i32 %238, %3
  %401 = add i32 %257, 1
  %402 = or i32 %353, %301
  %403 = xor i32 %267, %5
  %404 = and i32 %274, %3
  %405 = and i32 %249, %242
  %406 = and i32 %11, %307
  %407 = and i32 %277, %234
  %408 = or i32 %15, %4
  %409 = xor i32 %244, %408
  %410 = and i32 %273, %257
  %411 = xor i32 %10, %266
  %412 = or i32 %12, %253
  %413 = or i32 %267, %5
  %414 = and i32 %238, %259
  %415 = or i32 %233, %305
  %416 = or i32 %290, %287
  %417 = and i32 %15, %307
  %418 = or i32 %365, %3
  %419 = and i32 %266, %5
  %420 = or i32 %244, %369
  %421 = or i32 %259, %365
  %422 = or i32 %365, %287
  %423 = or i32 %299, %340
  %424 = and i32 %273, %3
  %425 = and i32 %277, %4
  %426 = xor i32 %257, %5
  %427 = xor i32 %365, %3
  %428 = and i32 %393, %242
  %429 = and i32 %273, %307
  %430 = xor i32 %408, 2147483647
  %431 = or i32 %430, %244
  %432 = shl i32 %431, 1
  %433 = or i32 %264, %5
  %434 = add i32 %232, 1
  %435 = or i32 %317, %4
  %436 = xor i32 %253, %5
  %437 = or i32 %233, %339
  %438 = and i32 %15, %257
  %439 = and i32 %235, %4
  %440 = or i32 %299, %242
  %441 = or i32 %274, %287
  %442 = shl i32 %441, 1
  %443 = and i32 %257, %11
  %444 = xor i32 %10, %3
  %445 = and i32 %15, %266
  %446 = xor i32 %10, %255
  %447 = or i32 %353, %439
  %448 = and i32 %262, %3
  %449 = shl i32 %448, 1
  %450 = or i32 %244, %246
  %451 = xor i32 %236, 2147483647
  %452 = xor i32 %451, %233
  %453 = shl i32 %452, 1
  %454 = and i32 %393, %287
  %455 = xor i32 %317, %4
  %456 = or i32 %274, %267
  %457 = shl i32 %456, 1
  %458 = xor i32 %233, %294
  %459 = or i32 %10, %267
  %460 = or i32 %273, %3
  %461 = or i32 %235, %234
  %462 = or i32 %340, %234
  %463 = or i32 %235, %4
  %464 = or i32 %16, %4
  %465 = and i32 %273, %266
  %466 = or i32 %273, %287
  %467 = or i32 %240, %365
  %468 = and i32 %262, %287
  %469 = or i32 %299, %287
  %470 = or i32 %259, %290
  %471 = add i32 %240, 1
  %472 = or i32 %365, %242
  %473 = shl i32 %472, 1
  %474 = and i32 %274, %307
  %475 = or i32 %16, %264
  %476 = and i32 %16, %307
  %477 = xor i32 %266, %5
  %478 = shl i32 %477, 1
  %479 = or i32 %11, %264
  %480 = shl i32 %479, 1
  %481 = and i32 %393, %3
  %482 = and i32 %313, %234
  %483 = and i32 %12, %234
  %484 = and i32 %313, %4
  %485 = and i32 %12, %4
  %486 = and i32 %340, %234
  %487 = and i32 %340, %4
  %488 = mul i32 %233, -18
  %489 = add i32 %187, %1
  %490 = add i32 %489, %71
  %491 = add i32 %490, %219
  %492 = add i32 %491, %208
  %493 = add i32 %492, %174
  %494 = add i32 %493, %164
  %495 = add i32 %494, %134
  %496 = add i32 %495, %132
  %497 = add i32 %496, %131
  %498 = add i32 %497, %126
  %499 = add i32 %498, %124
  %500 = add i32 %499, %119
  %501 = add i32 %500, %97
  %502 = add i32 %501, %93
  %503 = add i32 %502, %262
  %504 = add i32 %503, %426
  %505 = add i32 %504, %349
  %506 = add i32 %505, %343
  %507 = add i32 %506, %258
  %508 = add i32 %507, %148
  %509 = add i32 %508, %454
  %510 = add i32 %509, %425
  %511 = add i32 %510, %423
  %512 = add i32 %511, %399
  %513 = add i32 %512, %362
  %514 = add i32 %513, %337
  %515 = add i32 %514, %327
  %516 = add i32 %515, %318
  %517 = add i32 %516, %303
  %518 = add i32 %517, %458
  %519 = add i32 %518, %237
  %520 = add i32 %519, %371
  %521 = shl i32 %520, 1
  %522 = sub i32 %231, %80
  %523 = sub i32 %522, %168
  %524 = add i32 %523, %105
  %525 = add i32 %524, %51
  %526 = add i32 %525, %471
  %527 = sub i32 %526, %487
  %528 = add i32 %527, %482
  %529 = add i32 %528, %410
  %530 = add i32 %529, %407
  %531 = add i32 %530, %402
  %532 = mul i32 %531, 3
  %533 = add i32 %73, %65
  %534 = sub i32 %533, %202
  %535 = add i32 %534, %357
  %536 = add i32 %535, %463
  %537 = add i32 %536, %405
  %538 = add i32 %537, %302
  %539 = sub i32 %538, %326
  %540 = mul i32 %539, 5
  %541 = sub i32 %229, %484
  %542 = mul i32 %541, 22
  %543 = add i32 %486, %222
  %544 = mul i32 %543, -13
  %545 = add i32 %218, -1
  %546 = add i32 %545, %178
  %547 = add i32 %546, %340
  %548 = add i32 %547, %16
  %549 = add i32 %548, %336
  %550 = add i32 %549, %353
  %551 = shl i32 %550, 2
  %552 = sub i32 %21, %1
  %553 = add i32 %552, %7
  %554 = add i32 %553, %62
  %555 = add i32 %554, %21
  %556 = add i32 %555, 4
  %557 = sub i32 %556, %32
  %558 = add i32 %557, %61
  %559 = sub i32 %558, %64
  %560 = add i32 %559, %68
  %561 = add i32 %560, %102
  %562 = sub i32 %561, %107
  %563 = add i32 %562, %108
  %564 = sub i32 %563, %52
  %565 = add i32 %564, %117
  %566 = add i32 %565, %121
  %567 = add i32 %566, %128
  %568 = add i32 %567, %35
  %569 = sub i32 %568, %24
  %570 = add i32 %569, %149
  %571 = sub i32 %570, %74
  %572 = sub i32 %571, %151
  %573 = sub i32 %572, %153
  %574 = add i32 %573, %162
  %575 = add i32 %574, %40
  %576 = sub i32 %575, %179
  %577 = add i32 %576, %186
  %578 = add i32 %577, %25
  %579 = add i32 %578, %190
  %580 = sub i32 %579, %191
  %581 = add i32 %580, %194
  %582 = sub i32 %581, %197
  %583 = add i32 %582, %204
  %584 = sub i32 %583, %209
  %585 = add i32 %584, 1
  %586 = sub i32 %585, %26
  %587 = sub i32 %586, %23
  %588 = add i32 %587, %31
  %589 = sub i32 %588, %34
  %590 = add i32 %589, %39
  %591 = add i32 %590, %47
  %592 = sub i32 %591, %57
  %593 = sub i32 %592, %58
  %594 = add i32 %593, %59
  %595 = add i32 %594, %70
  %596 = sub i32 %595, %72
  %597 = sub i32 %596, %75
  %598 = sub i32 %597, %79
  %599 = add i32 %598, %81
  %600 = sub i32 %599, %82
  %601 = add i32 %600, %89
  %602 = add i32 %601, %90
  %603 = sub i32 %602, %91
  %604 = add i32 %603, %92
  %605 = sub i32 %604, %100
  %606 = add i32 %605, %101
  %607 = sub i32 %606, %104
  %608 = add i32 %607, %109
  %609 = add i32 %608, %114
  %610 = sub i32 %609, %118
  %611 = add i32 %610, %120
  %612 = add i32 %611, %125
  %613 = sub i32 %612, %127
  %614 = add i32 %613, %43
  %615 = sub i32 %614, %133
  %616 = add i32 %615, %77
  %617 = sub i32 %616, %135
  %618 = add i32 %617, %136
  %619 = sub i32 %618, %137
  %620 = add i32 %619, %138
  %621 = sub i32 %620, %139
  %622 = sub i32 %621, %140
  %623 = sub i32 %622, %142
  %624 = sub i32 %623, %143
  %625 = sub i32 %624, %144
  %626 = sub i32 %625, %150
  %627 = add i32 %626, %152
  %628 = sub i32 %627, %154
  %629 = sub i32 %628, %155
  %630 = sub i32 %629, %156
  %631 = sub i32 %630, %157
  %632 = add i32 %631, %158
  %633 = add i32 %632, %161
  %634 = sub i32 %633, %163
  %635 = add i32 %634, %165
  %636 = sub i32 %635, %166
  %637 = sub i32 %636, %167
  %638 = sub i32 %637, %172
  %639 = add i32 %638, %173
  %640 = sub i32 %639, %176
  %641 = add i32 %640, %177
  %642 = sub i32 %641, %180
  %643 = sub i32 %642, %183
  %644 = add i32 %643, %184
  %645 = add i32 %644, %185
  %646 = sub i32 %645, %192
  %647 = sub i32 %646, %193
  %648 = sub i32 %647, %196
  %649 = sub i32 %648, %198
  %650 = sub i32 %649, %199
  %651 = add i32 %650, %111
  %652 = add i32 %651, %200
  %653 = sub i32 %652, %201
  %654 = sub i32 %653, %203
  %655 = sub i32 %654, %205
  %656 = sub i32 %655, %159
  %657 = sub i32 %656, %210
  %658 = add i32 %657, %211
  %659 = add i32 %658, %212
  %660 = sub i32 %659, %213
  %661 = add i32 %660, %214
  %662 = add i32 %661, %215
  %663 = sub i32 %662, %216
  %664 = add i32 %663, %217
  %665 = sub i32 %664, %41
  %666 = add i32 %665, %234
  %667 = sub i32 %666, %4
  %668 = sub i32 %667, %37
  %669 = add i32 %668, %45
  %670 = sub i32 %669, %54
  %671 = sub i32 %670, %67
  %672 = sub i32 %671, %78
  %673 = sub i32 %672, %87
  %674 = sub i32 %673, %96
  %675 = add i32 %674, %99
  %676 = add i32 %675, %113
  %677 = sub i32 %676, %116
  %678 = sub i32 %677, %123
  %679 = sub i32 %678, %130
  %680 = add i32 %679, %160
  %681 = sub i32 %680, %171
  %682 = sub i32 %681, %181
  %683 = sub i32 %682, %189
  %684 = sub i32 %683, %195
  %685 = sub i32 %684, %207
  %686 = sub i32 %685, %221
  %687 = sub i32 %686, %224
  %688 = add i32 %687, %226
  %689 = add i32 %688, %228
  %690 = sub i32 %689, %230
  %691 = add i32 %690, 1
  %692 = sub i32 %691, %259
  %693 = add i32 %692, %5
  %694 = add i32 %693, %401
  %695 = add i32 %694, %257
  %696 = add i32 %695, %287
  %697 = sub i32 %696, %240
  %698 = add i32 %697, %241
  %699 = sub i32 %698, %15
  %700 = sub i32 %699, %261
  %701 = sub i32 %700, %265
  %702 = add i32 %701, %238
  %703 = sub i32 %702, %272
  %704 = add i32 %703, %308
  %705 = add i32 %704, %309
  %706 = sub i32 %705, %310
  %707 = add i32 %706, %315
  %708 = sub i32 %707, %316
  %709 = add i32 %708, %321
  %710 = sub i32 %709, %323
  %711 = add i32 %710, %331
  %712 = add i32 %711, %334
  %713 = add i32 %712, %249
  %714 = add i32 %713, %255
  %715 = add i32 %714, %10
  %716 = add i32 %715, %364
  %717 = add i32 %716, %366
  %718 = sub i32 %717, %273
  %719 = sub i32 %718, %403
  %720 = add i32 %719, %406
  %721 = sub i32 %720, %413
  %722 = add i32 %721, %419
  %723 = sub i32 %722, %433
  %724 = add i32 %723, %434
  %725 = sub i32 %724, %436
  %726 = sub i32 %725, %443
  %727 = add i32 %726, %232
  %728 = add i32 %727, %299
  %729 = add i32 %728, %239
  %730 = add i32 %729, %250
  %731 = sub i32 %730, %252
  %732 = sub i32 %731, %254
  %733 = add i32 %732, %256
  %734 = sub i32 %733, %260
  %735 = sub i32 %734, %263
  %736 = sub i32 %735, %269
  %737 = sub i32 %736, %270
  %738 = sub i32 %737, %271
  %739 = sub i32 %738, %275
  %740 = add i32 %739, %276
  %741 = add i32 %740, %278
  %742 = sub i32 %741, %281
  %743 = add i32 %742, %288
  %744 = add i32 %743, %289
  %745 = sub i32 %744, %291
  %746 = sub i32 %745, %294
  %747 = sub i32 %746, %298
  %748 = add i32 %747, %300
  %749 = add i32 %748, %301
  %750 = sub i32 %749, %304
  %751 = add i32 %750, %314
  %752 = add i32 %751, %319
  %753 = add i32 %752, %320
  %754 = sub i32 %753, %322
  %755 = add i32 %754, %324
  %756 = add i32 %755, %329
  %757 = add i32 %756, %330
  %758 = sub i32 %757, %332
  %759 = add i32 %758, %333
  %760 = sub i32 %759, %335
  %761 = add i32 %760, %338
  %762 = sub i32 %761, %339
  %763 = add i32 %762, %341
  %764 = add i32 %763, %342
  %765 = add i32 %764, %344
  %766 = add i32 %765, %345
  %767 = add i32 %766, %348
  %768 = add i32 %767, %350
  %769 = add i32 %768, %351
  %770 = add i32 %769, %352
  %771 = add i32 %770, %356
  %772 = add i32 %771, %358
  %773 = sub i32 %772, %361
  %774 = sub i32 %773, %363
  %775 = add i32 %774, %367
  %776 = sub i32 %775, %368
  %777 = add i32 %776, %372
  %778 = sub i32 %777, %373
  %779 = sub i32 %778, %374
  %780 = add i32 %779, %375
  %781 = sub i32 %780, %376
  %782 = sub i32 %781, %378
  %783 = sub i32 %782, %379
  %784 = add i32 %783, %380
  %785 = add i32 %784, %381
  %786 = sub i32 %785, %382
  %787 = sub i32 %786, %383
  %788 = add i32 %787, %384
  %789 = sub i32 %788, %385
  %790 = add i32 %789, %386
  %791 = sub i32 %790, %387
  %792 = sub i32 %791, %388
  %793 = add i32 %792, %325
  %794 = add i32 %793, %389
  %795 = sub i32 %794, %392
  %796 = add i32 %795, %394
  %797 = sub i32 %796, %395
  %798 = add i32 %797, %398
  %799 = add i32 %798, %400
  %800 = add i32 %799, %404
  %801 = add i32 %800, %411
  %802 = sub i32 %801, %412
  %803 = add i32 %802, %414
  %804 = add i32 %803, %416
  %805 = add i32 %804, %417
  %806 = sub i32 %805, %418
  %807 = sub i32 %806, %421
  %808 = sub i32 %807, %422
  %809 = sub i32 %808, %236
  %810 = add i32 %809, %424
  %811 = add i32 %810, %427
  %812 = sub i32 %811, %428
  %813 = add i32 %812, %429
  %814 = add i32 %813, %435
  %815 = add i32 %814, %438
  %816 = sub i32 %815, %439
  %817 = add i32 %816, %440
  %818 = sub i32 %817, %444
  %819 = add i32 %818, %445
  %820 = sub i32 %819, %446
  %821 = sub i32 %820, %455
  %822 = sub i32 %821, %459
  %823 = add i32 %822, %460
  %824 = sub i32 %823, %461
  %825 = add i32 %824, %462
  %826 = add i32 %825, %464
  %827 = sub i32 %826, %465
  %828 = sub i32 %827, %466
  %829 = add i32 %828, %467
  %830 = sub i32 %829, %468
  %831 = add i32 %830, %469
  %832 = sub i32 %831, %470
  %833 = add i32 %832, %474
  %834 = add i32 %833, %475
  %835 = sub i32 %834, %476
  %836 = sub i32 %835, %478
  %837 = sub i32 %836, %480
  %838 = sub i32 %837, %481
  %839 = add i32 %838, %483
  %840 = sub i32 %839, %485
  %841 = add i32 %840, %248
  %842 = sub i32 %841, %280
  %843 = sub i32 %842, %293
  %844 = add i32 %843, %297
  %845 = add i32 %844, %306
  %846 = add i32 %845, %328
  %847 = sub i32 %846, %347
  %848 = add i32 %847, %355
  %849 = sub i32 %848, %360
  %850 = sub i32 %849, %391
  %851 = sub i32 %850, %397
  %852 = sub i32 %851, %409
  %853 = add i32 %852, %415
  %854 = sub i32 %853, %420
  %855 = add i32 %854, %437
  %856 = sub i32 %855, %442
  %857 = sub i32 %856, %447
  %858 = sub i32 %857, %449
  %859 = sub i32 %858, %450
  %860 = sub i32 %859, %457
  %861 = sub i32 %860, %473
  %862 = add i32 %861, %488
  %863 = sub i32 %862, %312
  %864 = add i32 %863, %542
  %865 = add i32 %864, %544
  %866 = sub i32 %865, %286
  %867 = sub i32 %866, %432
  %868 = sub i32 %867, %453
  %869 = add i32 %868, %551
  %870 = add i32 %869, %540
  %871 = add i32 %870, %532
  %872 = add i32 %871, %521
  %873 = icmp eq i32 %19, %872
  %874 = select i1 %873, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %875 = tail call i32 @puts(i8* nonnull dereferenceable(1) %874)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
