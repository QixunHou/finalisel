digraph "DFG for'main' function" {
	Node0x1536698[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1536718[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x15367a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1536808[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1536c88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1536d68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1536e68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1536f28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1536fd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1537238[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x15372f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1537458[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x15374b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x153f390[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x153f598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x153f6f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x153f808[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x153f8c8[shape=record, label="  ret i32 0"];
	Node0x1536698 -> Node0x1536718;
	Node0x1536718 -> Node0x15367a8;
	Node0x15367a8 -> Node0x1536808;
	Node0x1536808 -> Node0x1536c88;
	Node0x1536c88 -> Node0x1536d68;
	Node0x1536d68 -> Node0x1536e68;
	Node0x1536e68 -> Node0x1536f28;
	Node0x1536f28 -> Node0x1536fd8;
	Node0x1536fd8 -> Node0x1537238;
	Node0x1537238 -> Node0x15372f8;
	Node0x15372f8 -> Node0x1537458;
	Node0x1537458 -> Node0x15374b8;
	Node0x15374b8 -> Node0x153f390;
	Node0x153f390 -> Node0x153f598;
	Node0x153f598 -> Node0x153f6f8;
	Node0x153f6f8 -> Node0x153f808;
	Node0x153f808 -> Node0x153f8c8;
edge [color=red]
	Node0x1536698 -> Node0x1536808;
	Node0x1536808 -> Node0x1536c88;
	Node0x1536718 -> Node0x1536d68;
	Node0x1536d68 -> Node0x1536e68;
	Node0x15367a8 -> Node0x1536f28;
	Node0x1536f28 -> Node0x1536fd8;
	Node0x1536698 -> Node0x1537238;
	Node0x1536718 -> Node0x1537238;
	Node0x15367a8 -> Node0x1537238;
	Node0x1536698 -> Node0x15372f8;
	Node0x1536718 -> Node0x1537458;
	Node0x15367a8 -> Node0x15374b8;
	Node0x15372f8 -> Node0x153f390;
	Node0x1537458 -> Node0x153f390;
	Node0x15374b8 -> Node0x153f390;
	Node0x1536f28 -> Node0x153f598;
	Node0x1536d68 -> Node0x153f6f8;
	Node0x1536808 -> Node0x153f808;
}
