digraph "DFG for'main' function" {
	Node0x2081688[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2081708[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2081798[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x20817f8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x20818a8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x2081cd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2081db8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x2081eb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2081f78[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x2082028[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20820e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x2082198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x207c9c0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x2082398[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2083308[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2083978[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x20839d8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x2083a50[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x2083ac0[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x2083b30[shape=record, label="  %16 = xor i32 %13, %10"];
	Node0x2083ba0[shape=record, label="  %17 = sub i32 1, %15"];
	Node0x2083c10[shape=record, label="  %18 = add i32 %17, %13"];
	Node0x2083c80[shape=record, label="  %19 = add i32 %18, %16"];
	Node0x2083cf0[shape=record, label="  %20 = and i32 %12, %11"];
	Node0x2083d60[shape=record, label="  %21 = xor i32 %11, %14"];
	Node0x2083dd0[shape=record, label="  %22 = or i32 %12, %11"];
	Node0x2083e40[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x2083eb0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x2083f20[shape=record, label="  %25 = xor i32 %10, -1"];
	Node0x2083f90[shape=record, label="  %26 = or i32 %13, %10"];
	Node0x2084000[shape=record, label="  %27 = and i32 %13, %25"];
	Node0x2084070[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x20840e0[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x2084150[shape=record, label="  %30 = or i32 %13, %25"];
	Node0x20841c0[shape=record, label="  %31 = mul i32 %30, -3"];
	Node0x2084230[shape=record, label="  %32 = shl i32 %13, 1"];
	Node0x20842a0[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x2084310[shape=record, label="  %34 = sub i32 %25, %10"];
	Node0x2084380[shape=record, label="  %35 = sub i32 %34, %11"];
	Node0x20843f0[shape=record, label="  %36 = sub i32 %35, %20"];
	Node0x2084460[shape=record, label="  %37 = add i32 %36, %21"];
	Node0x20844d0[shape=record, label="  %38 = add i32 %37, %26"];
	Node0x2084540[shape=record, label="  %39 = add i32 %38, %30"];
	Node0x20845b0[shape=record, label="  %40 = add i32 %39, %27"];
	Node0x2084620[shape=record, label="  %41 = sub i32 %40, %24"];
	Node0x2084690[shape=record, label="  %42 = add i32 %41, %31"];
	Node0x2084700[shape=record, label="  %43 = sub i32 %42, %33"];
	Node0x2084770[shape=record, label="  %44 = add i32 %43, %29"];
	Node0x20847e0[shape=record, label="  %45 = icmp eq i32 %19, %44"];
	Node0x20218b8[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2084870[shape=record, label="  %47 = call i32 @puts(i8* nonnull dereferenceable(1) %46) #5"];
	Node0x2084b18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2084c78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2084d88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2084e98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2084f58[shape=record, label="  ret i32 0"];
	Node0x2081688 -> Node0x2081708;
	Node0x2081708 -> Node0x2081798;
	Node0x2081798 -> Node0x20817f8;
	Node0x20817f8 -> Node0x20818a8;
	Node0x20818a8 -> Node0x2081cd8;
	Node0x2081cd8 -> Node0x2081db8;
	Node0x2081db8 -> Node0x2081eb8;
	Node0x2081eb8 -> Node0x2081f78;
	Node0x2081f78 -> Node0x2082028;
	Node0x2082028 -> Node0x20820e8;
	Node0x20820e8 -> Node0x2082198;
	Node0x2082198 -> Node0x207c9c0;
	Node0x207c9c0 -> Node0x2082398;
	Node0x2082398 -> Node0x2083308;
	Node0x2083308 -> Node0x2083978;
	Node0x2083978 -> Node0x20839d8;
	Node0x20839d8 -> Node0x2083a50;
	Node0x2083a50 -> Node0x2083ac0;
	Node0x2083ac0 -> Node0x2083b30;
	Node0x2083b30 -> Node0x2083ba0;
	Node0x2083ba0 -> Node0x2083c10;
	Node0x2083c10 -> Node0x2083c80;
	Node0x2083c80 -> Node0x2083cf0;
	Node0x2083cf0 -> Node0x2083d60;
	Node0x2083d60 -> Node0x2083dd0;
	Node0x2083dd0 -> Node0x2083e40;
	Node0x2083e40 -> Node0x2083eb0;
	Node0x2083eb0 -> Node0x2083f20;
	Node0x2083f20 -> Node0x2083f90;
	Node0x2083f90 -> Node0x2084000;
	Node0x2084000 -> Node0x2084070;
	Node0x2084070 -> Node0x20840e0;
	Node0x20840e0 -> Node0x2084150;
	Node0x2084150 -> Node0x20841c0;
	Node0x20841c0 -> Node0x2084230;
	Node0x2084230 -> Node0x20842a0;
	Node0x20842a0 -> Node0x2084310;
	Node0x2084310 -> Node0x2084380;
	Node0x2084380 -> Node0x20843f0;
	Node0x20843f0 -> Node0x2084460;
	Node0x2084460 -> Node0x20844d0;
	Node0x20844d0 -> Node0x2084540;
	Node0x2084540 -> Node0x20845b0;
	Node0x20845b0 -> Node0x2084620;
	Node0x2084620 -> Node0x2084690;
	Node0x2084690 -> Node0x2084700;
	Node0x2084700 -> Node0x2084770;
	Node0x2084770 -> Node0x20847e0;
	Node0x20847e0 -> Node0x20218b8;
	Node0x20218b8 -> Node0x2084870;
	Node0x2084870 -> Node0x2084b18;
	Node0x2084b18 -> Node0x2084c78;
	Node0x2084c78 -> Node0x2084d88;
	Node0x2084d88 -> Node0x2084e98;
	Node0x2084e98 -> Node0x2084f58;
edge [color=red]
	Node0x2081688 -> Node0x20818a8;
	Node0x20818a8 -> Node0x2081cd8;
	Node0x2081708 -> Node0x2081db8;
	Node0x2081db8 -> Node0x2081eb8;
	Node0x2081798 -> Node0x2081f78;
	Node0x2081f78 -> Node0x2082028;
	Node0x20817f8 -> Node0x20820e8;
	Node0x20820e8 -> Node0x2082198;
	Node0x2081688 -> Node0x207c9c0;
	Node0x2081708 -> Node0x207c9c0;
	Node0x2081798 -> Node0x207c9c0;
	Node0x20817f8 -> Node0x207c9c0;
	Node0x2081688 -> Node0x2082398;
	Node0x2081708 -> Node0x2083308;
	Node0x2081798 -> Node0x2083978;
	Node0x20817f8 -> Node0x20839d8;
	Node0x2083978 -> Node0x2083a50;
	Node0x2083308 -> Node0x2083ac0;
	Node0x2083a50 -> Node0x2083ac0;
	Node0x20839d8 -> Node0x2083b30;
	Node0x2082398 -> Node0x2083b30;
	Node0x2083ac0 -> Node0x2083ba0;
	Node0x2083ba0 -> Node0x2083c10;
	Node0x20839d8 -> Node0x2083c10;
	Node0x2083c10 -> Node0x2083c80;
	Node0x2083b30 -> Node0x2083c80;
	Node0x2083978 -> Node0x2083cf0;
	Node0x2083308 -> Node0x2083cf0;
	Node0x2083308 -> Node0x2083d60;
	Node0x2083a50 -> Node0x2083d60;
	Node0x2083978 -> Node0x2083dd0;
	Node0x2083308 -> Node0x2083dd0;
	Node0x2083dd0 -> Node0x2083e40;
	Node0x2083e40 -> Node0x2083eb0;
	Node0x2082398 -> Node0x2083f20;
	Node0x20839d8 -> Node0x2083f90;
	Node0x2082398 -> Node0x2083f90;
	Node0x20839d8 -> Node0x2084000;
	Node0x2083f20 -> Node0x2084000;
	Node0x2084000 -> Node0x2084070;
	Node0x2084070 -> Node0x20840e0;
	Node0x20839d8 -> Node0x2084150;
	Node0x2083f20 -> Node0x2084150;
	Node0x2084150 -> Node0x20841c0;
	Node0x20839d8 -> Node0x2084230;
	Node0x2084230 -> Node0x20842a0;
	Node0x2083f20 -> Node0x2084310;
	Node0x2082398 -> Node0x2084310;
	Node0x2084310 -> Node0x2084380;
	Node0x2083308 -> Node0x2084380;
	Node0x2084380 -> Node0x20843f0;
	Node0x2083cf0 -> Node0x20843f0;
	Node0x20843f0 -> Node0x2084460;
	Node0x2083d60 -> Node0x2084460;
	Node0x2084460 -> Node0x20844d0;
	Node0x2083f90 -> Node0x20844d0;
	Node0x20844d0 -> Node0x2084540;
	Node0x2084150 -> Node0x2084540;
	Node0x2084540 -> Node0x20845b0;
	Node0x2084000 -> Node0x20845b0;
	Node0x20845b0 -> Node0x2084620;
	Node0x2083eb0 -> Node0x2084620;
	Node0x2084620 -> Node0x2084690;
	Node0x20841c0 -> Node0x2084690;
	Node0x2084690 -> Node0x2084700;
	Node0x20842a0 -> Node0x2084700;
	Node0x2084700 -> Node0x2084770;
	Node0x20840e0 -> Node0x2084770;
	Node0x2083c80 -> Node0x20847e0;
	Node0x2084770 -> Node0x20847e0;
	Node0x20847e0 -> Node0x20218b8;
	Node0x20218b8 -> Node0x2084870;
	Node0x20820e8 -> Node0x2084b18;
	Node0x2081f78 -> Node0x2084c78;
	Node0x2081db8 -> Node0x2084d88;
	Node0x20818a8 -> Node0x2084e98;
}
