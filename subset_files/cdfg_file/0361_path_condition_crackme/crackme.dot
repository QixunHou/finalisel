digraph "DFG for'crackme' function" {
	Node0x207ffa0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x2080010[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x2080080[shape=record, label="  %7 = xor i32 %3, %0"];
	Node0x2080120[shape=record, label="  %8 = sub i32 1, %6"];
	Node0x2080190[shape=record, label="  %9 = add i32 %8, %3"];
	Node0x2080200[shape=record, label="  %10 = add i32 %9, %7"];
	Node0x2080270[shape=record, label="  %11 = and i32 %2, %1"];
	Node0x20802e0[shape=record, label="  %12 = xor i32 %5, %1"];
	Node0x2080350[shape=record, label="  %13 = or i32 %2, %1"];
	Node0x20803c0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x2080460[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x20804d0[shape=record, label="  %16 = xor i32 %0, -1"];
	Node0x2080540[shape=record, label="  %17 = or i32 %3, %0"];
	Node0x20805b0[shape=record, label="  %18 = and i32 %16, %3"];
	Node0x2080620[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x2080690[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x2080700[shape=record, label="  %21 = or i32 %16, %3"];
	Node0x20807a0[shape=record, label="  %22 = mul i32 %21, -3"];
	Node0x2080810[shape=record, label="  %23 = shl i32 %3, 1"];
	Node0x2080880[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x20808f0[shape=record, label="  %25 = sub i32 %16, %0"];
	Node0x2080960[shape=record, label="  %26 = sub i32 %25, %1"];
	Node0x20809d0[shape=record, label="  %27 = sub i32 %26, %11"];
	Node0x2080a40[shape=record, label="  %28 = add i32 %27, %12"];
	Node0x2080ab0[shape=record, label="  %29 = add i32 %28, %17"];
	Node0x2080b20[shape=record, label="  %30 = add i32 %29, %21"];
	Node0x2080b90[shape=record, label="  %31 = add i32 %30, %18"];
	Node0x2080c00[shape=record, label="  %32 = sub i32 %31, %15"];
	Node0x2080e80[shape=record, label="  %33 = add i32 %32, %22"];
	Node0x2080ef0[shape=record, label="  %34 = sub i32 %33, %24"];
	Node0x2080f60[shape=record, label="  %35 = add i32 %34, %20"];
	Node0x2080fd0[shape=record, label="  %36 = icmp eq i32 %10, %35"];
	Node0x2020268[shape=record, label="  %37 = select i1 %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2081470[shape=record, label="  %38 = tail call i32 @puts(i8* nonnull dereferenceable(1) %37)"];
	Node0x20814c0[shape=record, label="  ret void"];
	Node0x207ffa0 -> Node0x2080010;
	Node0x2080010 -> Node0x2080080;
	Node0x2080080 -> Node0x2080120;
	Node0x2080120 -> Node0x2080190;
	Node0x2080190 -> Node0x2080200;
	Node0x2080200 -> Node0x2080270;
	Node0x2080270 -> Node0x20802e0;
	Node0x20802e0 -> Node0x2080350;
	Node0x2080350 -> Node0x20803c0;
	Node0x20803c0 -> Node0x2080460;
	Node0x2080460 -> Node0x20804d0;
	Node0x20804d0 -> Node0x2080540;
	Node0x2080540 -> Node0x20805b0;
	Node0x20805b0 -> Node0x2080620;
	Node0x2080620 -> Node0x2080690;
	Node0x2080690 -> Node0x2080700;
	Node0x2080700 -> Node0x20807a0;
	Node0x20807a0 -> Node0x2080810;
	Node0x2080810 -> Node0x2080880;
	Node0x2080880 -> Node0x20808f0;
	Node0x20808f0 -> Node0x2080960;
	Node0x2080960 -> Node0x20809d0;
	Node0x20809d0 -> Node0x2080a40;
	Node0x2080a40 -> Node0x2080ab0;
	Node0x2080ab0 -> Node0x2080b20;
	Node0x2080b20 -> Node0x2080b90;
	Node0x2080b90 -> Node0x2080c00;
	Node0x2080c00 -> Node0x2080e80;
	Node0x2080e80 -> Node0x2080ef0;
	Node0x2080ef0 -> Node0x2080f60;
	Node0x2080f60 -> Node0x2080fd0;
	Node0x2080fd0 -> Node0x2020268;
	Node0x2020268 -> Node0x2081470;
	Node0x2081470 -> Node0x20814c0;
edge [color=red]
	Node0x207ffa0 -> Node0x2080010;
	Node0x2080010 -> Node0x2080120;
	Node0x2080120 -> Node0x2080190;
	Node0x2080190 -> Node0x2080200;
	Node0x2080080 -> Node0x2080200;
	Node0x207ffa0 -> Node0x20802e0;
	Node0x2080350 -> Node0x20803c0;
	Node0x20803c0 -> Node0x2080460;
	Node0x20804d0 -> Node0x20805b0;
	Node0x20805b0 -> Node0x2080620;
	Node0x2080620 -> Node0x2080690;
	Node0x20804d0 -> Node0x2080700;
	Node0x2080700 -> Node0x20807a0;
	Node0x2080810 -> Node0x2080880;
	Node0x20804d0 -> Node0x20808f0;
	Node0x20808f0 -> Node0x2080960;
	Node0x2080960 -> Node0x20809d0;
	Node0x2080270 -> Node0x20809d0;
	Node0x20809d0 -> Node0x2080a40;
	Node0x20802e0 -> Node0x2080a40;
	Node0x2080a40 -> Node0x2080ab0;
	Node0x2080540 -> Node0x2080ab0;
	Node0x2080ab0 -> Node0x2080b20;
	Node0x2080700 -> Node0x2080b20;
	Node0x2080b20 -> Node0x2080b90;
	Node0x20805b0 -> Node0x2080b90;
	Node0x2080b90 -> Node0x2080c00;
	Node0x2080460 -> Node0x2080c00;
	Node0x2080c00 -> Node0x2080e80;
	Node0x20807a0 -> Node0x2080e80;
	Node0x2080e80 -> Node0x2080ef0;
	Node0x2080880 -> Node0x2080ef0;
	Node0x2080ef0 -> Node0x2080f60;
	Node0x2080690 -> Node0x2080f60;
	Node0x2080200 -> Node0x2080fd0;
	Node0x2080f60 -> Node0x2080fd0;
	Node0x2080fd0 -> Node0x2020268;
	Node0x2020268 -> Node0x2081470;
}
