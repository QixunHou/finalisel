digraph "DFG for'main' function" {
	Node0x6ae188[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x6ae208[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x6ae298[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x6ae6f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x6ae7d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x6ae8f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6aeb30[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x6aebe8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x6afb58[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x6b01e0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x6b0250[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x6b02c0[shape=record, label="  %10 = add i32 %9, %8"];
	Node0x6b0330[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x6b03a0[shape=record, label="  %12 = and i32 %6, %8"];
	Node0x6b0410[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x6b0480[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x6b04f0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x6b0560[shape=record, label="  %16 = xor i32 %6, %8"];
	Node0x6b05d0[shape=record, label="  %17 = shl i32 %7, 1"];
	Node0x6b0640[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x6b06b0[shape=record, label="  %19 = or i32 %7, %6"];
	Node0x6b0720[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x6b0790[shape=record, label="  %21 = xor i32 %9, -1"];
	Node0x6b0800[shape=record, label="  %22 = mul i32 %12, 6"];
	Node0x6b0870[shape=record, label="  %23 = shl i32 %6, 1"];
	Node0x6b08e0[shape=record, label="  %24 = add i32 %14, %21"];
	Node0x6b0950[shape=record, label="  %25 = sub i32 %24, %19"];
	Node0x6b09c0[shape=record, label="  %26 = mul i32 %25, 5"];
	Node0x6b0a30[shape=record, label="  %27 = or i32 %23, 1"];
	Node0x6b0aa0[shape=record, label="  %28 = add i32 %27, %13"];
	Node0x6b0b10[shape=record, label="  %29 = add i32 %28, %15"];
	Node0x6b0b80[shape=record, label="  %30 = add i32 %29, %16"];
	Node0x6b0bf0[shape=record, label="  %31 = add i32 %30, %18"];
	Node0x6b0c60[shape=record, label="  %32 = add i32 %31, %20"];
	Node0x6b0cd0[shape=record, label="  %33 = add i32 %32, %22"];
	Node0x6b0d40[shape=record, label="  %34 = add i32 %33, %26"];
	Node0x6b0db0[shape=record, label="  %35 = icmp eq i32 %11, %34"];
	Node0x64e9d8[shape=record, label="  %36 = select i1 %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6b0e40[shape=record, label="  %37 = call i32 @puts(i8* nonnull dereferenceable(1) %36) #5"];
	Node0x6b1098[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x6b11f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x6b12b8[shape=record, label="  ret i32 0"];
	Node0x6ae188 -> Node0x6ae208;
	Node0x6ae208 -> Node0x6ae298;
	Node0x6ae298 -> Node0x6ae6f8;
	Node0x6ae6f8 -> Node0x6ae7d8;
	Node0x6ae7d8 -> Node0x6ae8f8;
	Node0x6ae8f8 -> Node0x6aeb30;
	Node0x6aeb30 -> Node0x6aebe8;
	Node0x6aebe8 -> Node0x6afb58;
	Node0x6afb58 -> Node0x6b01e0;
	Node0x6b01e0 -> Node0x6b0250;
	Node0x6b0250 -> Node0x6b02c0;
	Node0x6b02c0 -> Node0x6b0330;
	Node0x6b0330 -> Node0x6b03a0;
	Node0x6b03a0 -> Node0x6b0410;
	Node0x6b0410 -> Node0x6b0480;
	Node0x6b0480 -> Node0x6b04f0;
	Node0x6b04f0 -> Node0x6b0560;
	Node0x6b0560 -> Node0x6b05d0;
	Node0x6b05d0 -> Node0x6b0640;
	Node0x6b0640 -> Node0x6b06b0;
	Node0x6b06b0 -> Node0x6b0720;
	Node0x6b0720 -> Node0x6b0790;
	Node0x6b0790 -> Node0x6b0800;
	Node0x6b0800 -> Node0x6b0870;
	Node0x6b0870 -> Node0x6b08e0;
	Node0x6b08e0 -> Node0x6b0950;
	Node0x6b0950 -> Node0x6b09c0;
	Node0x6b09c0 -> Node0x6b0a30;
	Node0x6b0a30 -> Node0x6b0aa0;
	Node0x6b0aa0 -> Node0x6b0b10;
	Node0x6b0b10 -> Node0x6b0b80;
	Node0x6b0b80 -> Node0x6b0bf0;
	Node0x6b0bf0 -> Node0x6b0c60;
	Node0x6b0c60 -> Node0x6b0cd0;
	Node0x6b0cd0 -> Node0x6b0d40;
	Node0x6b0d40 -> Node0x6b0db0;
	Node0x6b0db0 -> Node0x64e9d8;
	Node0x64e9d8 -> Node0x6b0e40;
	Node0x6b0e40 -> Node0x6b1098;
	Node0x6b1098 -> Node0x6b11f8;
	Node0x6b11f8 -> Node0x6b12b8;
edge [color=red]
	Node0x6ae188 -> Node0x6ae298;
	Node0x6ae298 -> Node0x6ae6f8;
	Node0x6ae208 -> Node0x6ae7d8;
	Node0x6ae7d8 -> Node0x6ae8f8;
	Node0x6ae188 -> Node0x6aeb30;
	Node0x6ae208 -> Node0x6aeb30;
	Node0x6ae188 -> Node0x6aebe8;
	Node0x6ae208 -> Node0x6afb58;
	Node0x6afb58 -> Node0x6b01e0;
	Node0x6aebe8 -> Node0x6b0250;
	Node0x6b01e0 -> Node0x6b0250;
	Node0x6b0250 -> Node0x6b02c0;
	Node0x6b01e0 -> Node0x6b02c0;
	Node0x6b02c0 -> Node0x6b0330;
	Node0x6aebe8 -> Node0x6b03a0;
	Node0x6b01e0 -> Node0x6b03a0;
	Node0x6b03a0 -> Node0x6b0410;
	Node0x6afb58 -> Node0x6b0480;
	Node0x6aebe8 -> Node0x6b0480;
	Node0x6b0480 -> Node0x6b04f0;
	Node0x6aebe8 -> Node0x6b0560;
	Node0x6b01e0 -> Node0x6b0560;
	Node0x6afb58 -> Node0x6b05d0;
	Node0x6b05d0 -> Node0x6b0640;
	Node0x6afb58 -> Node0x6b06b0;
	Node0x6aebe8 -> Node0x6b06b0;
	Node0x6b06b0 -> Node0x6b0720;
	Node0x6b0250 -> Node0x6b0790;
	Node0x6b03a0 -> Node0x6b0800;
	Node0x6aebe8 -> Node0x6b0870;
	Node0x6b0480 -> Node0x6b08e0;
	Node0x6b0790 -> Node0x6b08e0;
	Node0x6b08e0 -> Node0x6b0950;
	Node0x6b06b0 -> Node0x6b0950;
	Node0x6b0950 -> Node0x6b09c0;
	Node0x6b0870 -> Node0x6b0a30;
	Node0x6b0a30 -> Node0x6b0aa0;
	Node0x6b0410 -> Node0x6b0aa0;
	Node0x6b0aa0 -> Node0x6b0b10;
	Node0x6b04f0 -> Node0x6b0b10;
	Node0x6b0b10 -> Node0x6b0b80;
	Node0x6b0560 -> Node0x6b0b80;
	Node0x6b0b80 -> Node0x6b0bf0;
	Node0x6b0640 -> Node0x6b0bf0;
	Node0x6b0bf0 -> Node0x6b0c60;
	Node0x6b0720 -> Node0x6b0c60;
	Node0x6b0c60 -> Node0x6b0cd0;
	Node0x6b0800 -> Node0x6b0cd0;
	Node0x6b0cd0 -> Node0x6b0d40;
	Node0x6b09c0 -> Node0x6b0d40;
	Node0x6b0330 -> Node0x6b0db0;
	Node0x6b0d40 -> Node0x6b0db0;
	Node0x6b0db0 -> Node0x64e9d8;
	Node0x64e9d8 -> Node0x6b0e40;
	Node0x6ae7d8 -> Node0x6b1098;
	Node0x6ae298 -> Node0x6b11f8;
}
