digraph "DFG for'crackme' function" {
	Node0x6acc40[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x6accb0[shape=record, label="  %4 = or i32 %3, %0"];
	Node0x6acd70[shape=record, label="  %5 = add i32 %4, %3"];
	Node0x6acde0[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x6ace50[shape=record, label="  %7 = and i32 %3, %0"];
	Node0x6acec0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x6acf30[shape=record, label="  %9 = and i32 %1, %0"];
	Node0x6acfa0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x6ad010[shape=record, label="  %11 = xor i32 %3, %0"];
	Node0x6ad080[shape=record, label="  %12 = shl i32 %1, 1"];
	Node0x6ad0f0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x6ad160[shape=record, label="  %14 = or i32 %1, %0"];
	Node0x6ad1d0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x6ad240[shape=record, label="  %16 = xor i32 %4, -1"];
	Node0x6ad2e0[shape=record, label="  %17 = mul i32 %7, 6"];
	Node0x6ad350[shape=record, label="  %18 = shl i32 %0, 1"];
	Node0x6ad3c0[shape=record, label="  %19 = add i32 %9, %16"];
	Node0x6ad430[shape=record, label="  %20 = sub i32 %19, %14"];
	Node0x6ad4d0[shape=record, label="  %21 = mul i32 %20, 5"];
	Node0x6ad540[shape=record, label="  %22 = or i32 %18, 1"];
	Node0x6ad5b0[shape=record, label="  %23 = add i32 %22, %8"];
	Node0x6ad620[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x6ad690[shape=record, label="  %25 = add i32 %24, %11"];
	Node0x6ad700[shape=record, label="  %26 = add i32 %25, %13"];
	Node0x6ad770[shape=record, label="  %27 = add i32 %26, %15"];
	Node0x6ad7e0[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x6ad850[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x6ad8c0[shape=record, label="  %30 = icmp eq i32 %6, %29"];
	Node0x64d268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6add60[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x6adfc0[shape=record, label="  ret void"];
	Node0x6acc40 -> Node0x6accb0;
	Node0x6accb0 -> Node0x6acd70;
	Node0x6acd70 -> Node0x6acde0;
	Node0x6acde0 -> Node0x6ace50;
	Node0x6ace50 -> Node0x6acec0;
	Node0x6acec0 -> Node0x6acf30;
	Node0x6acf30 -> Node0x6acfa0;
	Node0x6acfa0 -> Node0x6ad010;
	Node0x6ad010 -> Node0x6ad080;
	Node0x6ad080 -> Node0x6ad0f0;
	Node0x6ad0f0 -> Node0x6ad160;
	Node0x6ad160 -> Node0x6ad1d0;
	Node0x6ad1d0 -> Node0x6ad240;
	Node0x6ad240 -> Node0x6ad2e0;
	Node0x6ad2e0 -> Node0x6ad350;
	Node0x6ad350 -> Node0x6ad3c0;
	Node0x6ad3c0 -> Node0x6ad430;
	Node0x6ad430 -> Node0x6ad4d0;
	Node0x6ad4d0 -> Node0x6ad540;
	Node0x6ad540 -> Node0x6ad5b0;
	Node0x6ad5b0 -> Node0x6ad620;
	Node0x6ad620 -> Node0x6ad690;
	Node0x6ad690 -> Node0x6ad700;
	Node0x6ad700 -> Node0x6ad770;
	Node0x6ad770 -> Node0x6ad7e0;
	Node0x6ad7e0 -> Node0x6ad850;
	Node0x6ad850 -> Node0x6ad8c0;
	Node0x6ad8c0 -> Node0x64d268;
	Node0x64d268 -> Node0x6add60;
	Node0x6add60 -> Node0x6adfc0;
edge [color=red]
	Node0x6acc40 -> Node0x6accb0;
	Node0x6accb0 -> Node0x6acd70;
	Node0x6acc40 -> Node0x6acd70;
	Node0x6acd70 -> Node0x6acde0;
	Node0x6acc40 -> Node0x6ace50;
	Node0x6ace50 -> Node0x6acec0;
	Node0x6acf30 -> Node0x6acfa0;
	Node0x6acc40 -> Node0x6ad010;
	Node0x6ad080 -> Node0x6ad0f0;
	Node0x6ad160 -> Node0x6ad1d0;
	Node0x6accb0 -> Node0x6ad240;
	Node0x6ace50 -> Node0x6ad2e0;
	Node0x6acf30 -> Node0x6ad3c0;
	Node0x6ad240 -> Node0x6ad3c0;
	Node0x6ad3c0 -> Node0x6ad430;
	Node0x6ad160 -> Node0x6ad430;
	Node0x6ad430 -> Node0x6ad4d0;
	Node0x6ad350 -> Node0x6ad540;
	Node0x6ad540 -> Node0x6ad5b0;
	Node0x6acec0 -> Node0x6ad5b0;
	Node0x6ad5b0 -> Node0x6ad620;
	Node0x6acfa0 -> Node0x6ad620;
	Node0x6ad620 -> Node0x6ad690;
	Node0x6ad010 -> Node0x6ad690;
	Node0x6ad690 -> Node0x6ad700;
	Node0x6ad0f0 -> Node0x6ad700;
	Node0x6ad700 -> Node0x6ad770;
	Node0x6ad1d0 -> Node0x6ad770;
	Node0x6ad770 -> Node0x6ad7e0;
	Node0x6ad2e0 -> Node0x6ad7e0;
	Node0x6ad7e0 -> Node0x6ad850;
	Node0x6ad4d0 -> Node0x6ad850;
	Node0x6acde0 -> Node0x6ad8c0;
	Node0x6ad850 -> Node0x6ad8c0;
	Node0x6ad8c0 -> Node0x64d268;
	Node0x64d268 -> Node0x6add60;
}
