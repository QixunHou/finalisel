digraph "DFG for'crackme' function" {
	Node0x22db9f0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x22dc070[shape=record, label="  %6 = xor i32 %2, -1"];
	Node0x22dc0e0[shape=record, label="  %7 = and i32 %6, %1"];
	Node0x22dc150[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x22dc1f0[shape=record, label="  %9 = shl i32 %0, 1"];
	Node0x22dc260[shape=record, label="  %10 = xor i32 %3, %0"];
	Node0x22dc2d0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x22dc340[shape=record, label="  %12 = sub i32 %9, %5"];
	Node0x22dc3b0[shape=record, label="  %13 = add i32 %12, %8"];
	Node0x22dc420[shape=record, label="  %14 = sub i32 %13, %11"];
	Node0x22dc490[shape=record, label="  %15 = or i32 %6, %1"];
	Node0x22dc500[shape=record, label="  %16 = shl i32 %7, 1"];
	Node0x22dc570[shape=record, label="  %17 = and i32 %2, %1"];
	Node0x22dc5e0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x22dc680[shape=record, label="  %19 = xor i32 %11, -2"];
	Node0x22dc6f0[shape=record, label="  %20 = and i32 %3, %0"];
	Node0x22dc760[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x22dc7d0[shape=record, label="  %22 = or i32 %3, %0"];
	Node0x22dc840[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x22dc8b0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x22dc920[shape=record, label="  %25 = sub i32 %20, %3"];
	Node0x22dc9c0[shape=record, label="  %26 = mul i32 %25, 3"];
	Node0x22dca60[shape=record, label="  %27 = sub i32 2, %1"];
	Node0x22dcad0[shape=record, label="  %28 = add i32 %27, %6"];
	Node0x22dcb40[shape=record, label="  %29 = add i32 %28, %5"];
	Node0x22dcbb0[shape=record, label="  %30 = add i32 %29, %15"];
	Node0x22dcc20[shape=record, label="  %31 = add i32 %30, %3"];
	Node0x22dcc90[shape=record, label="  %32 = sub i32 %31, %16"];
	Node0x22dcf10[shape=record, label="  %33 = add i32 %32, %18"];
	Node0x22dcf80[shape=record, label="  %34 = add i32 %33, %21"];
	Node0x22dcff0[shape=record, label="  %35 = add i32 %34, %19"];
	Node0x22dd060[shape=record, label="  %36 = sub i32 %35, %24"];
	Node0x22dd0d0[shape=record, label="  %37 = add i32 %36, %26"];
	Node0x22dd140[shape=record, label="  %38 = icmp eq i32 %14, %37"];
	Node0x227c268[shape=record, label="  %39 = select i1 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22dd5e0[shape=record, label="  %40 = tail call i32 @puts(i8* nonnull dereferenceable(1) %39)"];
	Node0x22dd630[shape=record, label="  ret void"];
	Node0x22db9f0 -> Node0x22dc070;
	Node0x22dc070 -> Node0x22dc0e0;
	Node0x22dc0e0 -> Node0x22dc150;
	Node0x22dc150 -> Node0x22dc1f0;
	Node0x22dc1f0 -> Node0x22dc260;
	Node0x22dc260 -> Node0x22dc2d0;
	Node0x22dc2d0 -> Node0x22dc340;
	Node0x22dc340 -> Node0x22dc3b0;
	Node0x22dc3b0 -> Node0x22dc420;
	Node0x22dc420 -> Node0x22dc490;
	Node0x22dc490 -> Node0x22dc500;
	Node0x22dc500 -> Node0x22dc570;
	Node0x22dc570 -> Node0x22dc5e0;
	Node0x22dc5e0 -> Node0x22dc680;
	Node0x22dc680 -> Node0x22dc6f0;
	Node0x22dc6f0 -> Node0x22dc760;
	Node0x22dc760 -> Node0x22dc7d0;
	Node0x22dc7d0 -> Node0x22dc840;
	Node0x22dc840 -> Node0x22dc8b0;
	Node0x22dc8b0 -> Node0x22dc920;
	Node0x22dc920 -> Node0x22dc9c0;
	Node0x22dc9c0 -> Node0x22dca60;
	Node0x22dca60 -> Node0x22dcad0;
	Node0x22dcad0 -> Node0x22dcb40;
	Node0x22dcb40 -> Node0x22dcbb0;
	Node0x22dcbb0 -> Node0x22dcc20;
	Node0x22dcc20 -> Node0x22dcc90;
	Node0x22dcc90 -> Node0x22dcf10;
	Node0x22dcf10 -> Node0x22dcf80;
	Node0x22dcf80 -> Node0x22dcff0;
	Node0x22dcff0 -> Node0x22dd060;
	Node0x22dd060 -> Node0x22dd0d0;
	Node0x22dd0d0 -> Node0x22dd140;
	Node0x22dd140 -> Node0x227c268;
	Node0x227c268 -> Node0x22dd5e0;
	Node0x22dd5e0 -> Node0x22dd630;
edge [color=red]
	Node0x22dc070 -> Node0x22dc0e0;
	Node0x22dc0e0 -> Node0x22dc150;
	Node0x22dc260 -> Node0x22dc2d0;
	Node0x22dc1f0 -> Node0x22dc340;
	Node0x22db9f0 -> Node0x22dc340;
	Node0x22dc340 -> Node0x22dc3b0;
	Node0x22dc150 -> Node0x22dc3b0;
	Node0x22dc3b0 -> Node0x22dc420;
	Node0x22dc2d0 -> Node0x22dc420;
	Node0x22dc070 -> Node0x22dc490;
	Node0x22dc0e0 -> Node0x22dc500;
	Node0x22dc570 -> Node0x22dc5e0;
	Node0x22dc2d0 -> Node0x22dc680;
	Node0x22dc6f0 -> Node0x22dc760;
	Node0x22dc7d0 -> Node0x22dc840;
	Node0x22dc840 -> Node0x22dc8b0;
	Node0x22dc6f0 -> Node0x22dc920;
	Node0x22dc920 -> Node0x22dc9c0;
	Node0x22dca60 -> Node0x22dcad0;
	Node0x22dc070 -> Node0x22dcad0;
	Node0x22dcad0 -> Node0x22dcb40;
	Node0x22db9f0 -> Node0x22dcb40;
	Node0x22dcb40 -> Node0x22dcbb0;
	Node0x22dc490 -> Node0x22dcbb0;
	Node0x22dcbb0 -> Node0x22dcc20;
	Node0x22dcc20 -> Node0x22dcc90;
	Node0x22dc500 -> Node0x22dcc90;
	Node0x22dcc90 -> Node0x22dcf10;
	Node0x22dc5e0 -> Node0x22dcf10;
	Node0x22dcf10 -> Node0x22dcf80;
	Node0x22dc760 -> Node0x22dcf80;
	Node0x22dcf80 -> Node0x22dcff0;
	Node0x22dc680 -> Node0x22dcff0;
	Node0x22dcff0 -> Node0x22dd060;
	Node0x22dc8b0 -> Node0x22dd060;
	Node0x22dd060 -> Node0x22dd0d0;
	Node0x22dc9c0 -> Node0x22dd0d0;
	Node0x22dc420 -> Node0x22dd140;
	Node0x22dd0d0 -> Node0x22dd140;
	Node0x22dd140 -> Node0x227c268;
	Node0x227c268 -> Node0x22dd5e0;
}
