digraph "DFG for'crackme' function" {
	Node0xf58740[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0xf58dc0[shape=record, label="  %6 = sub i32 0, %5"];
	Node0xf58e60[shape=record, label="  %7 = xor i32 %2, -1"];
	Node0xf58ed0[shape=record, label="  %8 = and i32 %7, %1"];
	Node0xf58f70[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xf59010[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0xf59080[shape=record, label="  %11 = and i32 %2, %1"];
	Node0xf590f0[shape=record, label="  %12 = shl i32 %7, 1"];
	Node0xf59160[shape=record, label="  %13 = or i32 %2, %1"];
	Node0xf591d0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0xf59240[shape=record, label="  %15 = xor i32 %1, -1"];
	Node0xf592b0[shape=record, label="  %16 = and i32 %15, %2"];
	Node0xf59320[shape=record, label="  %17 = xor i32 %3, %0"];
	Node0xf59390[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0xf59400[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0xf59470[shape=record, label="  %20 = xor i32 %0, -1"];
	Node0xf594e0[shape=record, label="  %21 = and i32 %20, %3"];
	Node0xf59550[shape=record, label="  %22 = and i32 %3, %0"];
	Node0xf595c0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0xf59630[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0xf596a0[shape=record, label="  %25 = or i32 %3, %0"];
	Node0xf59710[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0xf597b0[shape=record, label="  %27 = xor i32 %3, 2147483647"];
	Node0xf59820[shape=record, label="  %28 = and i32 %27, %0"];
	Node0xf59890[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0xf59930[shape=record, label="  %30 = shl i32 %1, 2"];
	Node0xf599a0[shape=record, label="  %31 = add i32 %22, %16"];
	Node0xf59a40[shape=record, label="  %32 = mul i32 %31, 3"];
	Node0xf59cc0[shape=record, label="  %33 = sub i32 %14, %21"];
	Node0xf59d60[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0xf59dd0[shape=record, label="  %35 = sub i32 2, %0"];
	Node0xf59e40[shape=record, label="  %36 = sub i32 %35, %1"];
	Node0xf59eb0[shape=record, label="  %37 = add i32 %36, %11"];
	Node0xf59f20[shape=record, label="  %38 = sub i32 %37, %12"];
	Node0xf59f90[shape=record, label="  %39 = sub i32 %38, %13"];
	Node0xf5a000[shape=record, label="  %40 = add i32 %39, %3"];
	Node0xf5a070[shape=record, label="  %41 = add i32 %40, %21"];
	Node0xf5a0e0[shape=record, label="  %42 = add i32 %41, %26"];
	Node0xf5a150[shape=record, label="  %43 = sub i32 %42, %10"];
	Node0xf5a1c0[shape=record, label="  %44 = add i32 %43, %18"];
	Node0xf5a230[shape=record, label="  %45 = add i32 %44, %30"];
	Node0xf5a2a0[shape=record, label="  %46 = sub i32 %45, %19"];
	Node0xf5a310[shape=record, label="  %47 = add i32 %46, %24"];
	Node0xf5a380[shape=record, label="  %48 = sub i32 %47, %29"];
	Node0xf5a3f0[shape=record, label="  %49 = add i32 %48, %32"];
	Node0xf5a460[shape=record, label="  %50 = add i32 %49, %34"];
	Node0xf5a4d0[shape=record, label="  %51 = icmp eq i32 %50, %6"];
	Node0xef9268[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf5a970[shape=record, label="  %53 = tail call i32 @puts(i8* nonnull dereferenceable(1) %52)"];
	Node0xf5a9c0[shape=record, label="  ret void"];
	Node0xf58740 -> Node0xf58dc0;
	Node0xf58dc0 -> Node0xf58e60;
	Node0xf58e60 -> Node0xf58ed0;
	Node0xf58ed0 -> Node0xf58f70;
	Node0xf58f70 -> Node0xf59010;
	Node0xf59010 -> Node0xf59080;
	Node0xf59080 -> Node0xf590f0;
	Node0xf590f0 -> Node0xf59160;
	Node0xf59160 -> Node0xf591d0;
	Node0xf591d0 -> Node0xf59240;
	Node0xf59240 -> Node0xf592b0;
	Node0xf592b0 -> Node0xf59320;
	Node0xf59320 -> Node0xf59390;
	Node0xf59390 -> Node0xf59400;
	Node0xf59400 -> Node0xf59470;
	Node0xf59470 -> Node0xf594e0;
	Node0xf594e0 -> Node0xf59550;
	Node0xf59550 -> Node0xf595c0;
	Node0xf595c0 -> Node0xf59630;
	Node0xf59630 -> Node0xf596a0;
	Node0xf596a0 -> Node0xf59710;
	Node0xf59710 -> Node0xf597b0;
	Node0xf597b0 -> Node0xf59820;
	Node0xf59820 -> Node0xf59890;
	Node0xf59890 -> Node0xf59930;
	Node0xf59930 -> Node0xf599a0;
	Node0xf599a0 -> Node0xf59a40;
	Node0xf59a40 -> Node0xf59cc0;
	Node0xf59cc0 -> Node0xf59d60;
	Node0xf59d60 -> Node0xf59dd0;
	Node0xf59dd0 -> Node0xf59e40;
	Node0xf59e40 -> Node0xf59eb0;
	Node0xf59eb0 -> Node0xf59f20;
	Node0xf59f20 -> Node0xf59f90;
	Node0xf59f90 -> Node0xf5a000;
	Node0xf5a000 -> Node0xf5a070;
	Node0xf5a070 -> Node0xf5a0e0;
	Node0xf5a0e0 -> Node0xf5a150;
	Node0xf5a150 -> Node0xf5a1c0;
	Node0xf5a1c0 -> Node0xf5a230;
	Node0xf5a230 -> Node0xf5a2a0;
	Node0xf5a2a0 -> Node0xf5a310;
	Node0xf5a310 -> Node0xf5a380;
	Node0xf5a380 -> Node0xf5a3f0;
	Node0xf5a3f0 -> Node0xf5a460;
	Node0xf5a460 -> Node0xf5a4d0;
	Node0xf5a4d0 -> Node0xef9268;
	Node0xef9268 -> Node0xf5a970;
	Node0xf5a970 -> Node0xf5a9c0;
edge [color=red]
	Node0xf58740 -> Node0xf58dc0;
	Node0xf58e60 -> Node0xf58ed0;
	Node0xf58ed0 -> Node0xf58f70;
	Node0xf58f70 -> Node0xf59010;
	Node0xf58e60 -> Node0xf590f0;
	Node0xf59160 -> Node0xf591d0;
	Node0xf59240 -> Node0xf592b0;
	Node0xf59320 -> Node0xf59390;
	Node0xf59390 -> Node0xf59400;
	Node0xf59470 -> Node0xf594e0;
	Node0xf59550 -> Node0xf595c0;
	Node0xf595c0 -> Node0xf59630;
	Node0xf596a0 -> Node0xf59710;
	Node0xf597b0 -> Node0xf59820;
	Node0xf59820 -> Node0xf59890;
	Node0xf59550 -> Node0xf599a0;
	Node0xf592b0 -> Node0xf599a0;
	Node0xf599a0 -> Node0xf59a40;
	Node0xf591d0 -> Node0xf59cc0;
	Node0xf594e0 -> Node0xf59cc0;
	Node0xf59cc0 -> Node0xf59d60;
	Node0xf59dd0 -> Node0xf59e40;
	Node0xf59e40 -> Node0xf59eb0;
	Node0xf59080 -> Node0xf59eb0;
	Node0xf59eb0 -> Node0xf59f20;
	Node0xf590f0 -> Node0xf59f20;
	Node0xf59f20 -> Node0xf59f90;
	Node0xf59160 -> Node0xf59f90;
	Node0xf59f90 -> Node0xf5a000;
	Node0xf5a000 -> Node0xf5a070;
	Node0xf594e0 -> Node0xf5a070;
	Node0xf5a070 -> Node0xf5a0e0;
	Node0xf59710 -> Node0xf5a0e0;
	Node0xf5a0e0 -> Node0xf5a150;
	Node0xf59010 -> Node0xf5a150;
	Node0xf5a150 -> Node0xf5a1c0;
	Node0xf59390 -> Node0xf5a1c0;
	Node0xf5a1c0 -> Node0xf5a230;
	Node0xf59930 -> Node0xf5a230;
	Node0xf5a230 -> Node0xf5a2a0;
	Node0xf59400 -> Node0xf5a2a0;
	Node0xf5a2a0 -> Node0xf5a310;
	Node0xf59630 -> Node0xf5a310;
	Node0xf5a310 -> Node0xf5a380;
	Node0xf59890 -> Node0xf5a380;
	Node0xf5a380 -> Node0xf5a3f0;
	Node0xf59a40 -> Node0xf5a3f0;
	Node0xf5a3f0 -> Node0xf5a460;
	Node0xf59d60 -> Node0xf5a460;
	Node0xf5a460 -> Node0xf5a4d0;
	Node0xf58dc0 -> Node0xf5a4d0;
	Node0xf5a4d0 -> Node0xef9268;
	Node0xef9268 -> Node0xf5a970;
}
