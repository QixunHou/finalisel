digraph "DFG for'main' function" {
	Node0x22d4a18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x22d4a98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x22d4b28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x22d4b88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x22d4c38[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x22d5068[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22d5148[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x22d5248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22d5308[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x22d53b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x22d5478[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x22d5528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x22cfac0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x22d5728[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x22d6698[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x22d6d08[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x22d6d68[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x22d6de0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x22d6e50[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x22d6ec0[shape=record, label="  %16 = xor i32 %12, %11"];
	Node0x22d6f30[shape=record, label="  %17 = sub i32 1, %15"];
	Node0x22d6fa0[shape=record, label="  %18 = add i32 %17, %16"];
	Node0x22d7010[shape=record, label="  %19 = xor i32 %13, %10"];
	Node0x22d7080[shape=record, label="  %20 = sub i32 %18, %19"];
	Node0x22d70f0[shape=record, label="  %21 = xor i32 %16, -1"];
	Node0x22d7160[shape=record, label="  %22 = or i32 %12, %11"];
	Node0x22d71d0[shape=record, label="  %23 = shl i32 %14, 1"];
	Node0x22d7240[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x22d72b0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x22d7320[shape=record, label="  %26 = mul i32 %24, -5"];
	Node0x22d7390[shape=record, label="  %27 = or i32 %13, %10"];
	Node0x22d7400[shape=record, label="  %28 = and i32 %13, %10"];
	Node0x22d7470[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x22d74e0[shape=record, label="  %30 = xor i32 %27, -1"];
	Node0x22d7550[shape=record, label="  %31 = xor i32 %13, 2147483647"];
	Node0x22d75c0[shape=record, label="  %32 = and i32 %31, %10"];
	Node0x22d7630[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x22d76a0[shape=record, label="  %34 = add i32 %15, 2"];
	Node0x22d7710[shape=record, label="  %35 = add i32 %34, %22"];
	Node0x22d7780[shape=record, label="  %36 = add i32 %35, %30"];
	Node0x22d77f0[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x22d7860[shape=record, label="  %38 = add i32 %12, %10"];
	Node0x22d78d0[shape=record, label="  %39 = add i32 %38, %27"];
	Node0x22d7940[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x22d79b0[shape=record, label="  %41 = sub i32 3, %22"];
	Node0x22d7a20[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x22d7a90[shape=record, label="  %43 = sub i32 %42, %23"];
	Node0x22d7b00[shape=record, label="  %44 = add i32 %43, %25"];
	Node0x22d7b70[shape=record, label="  %45 = add i32 %44, %26"];
	Node0x22d7be0[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x22d7c50[shape=record, label="  %47 = sub i32 %46, %33"];
	Node0x22d7cc0[shape=record, label="  %48 = add i32 %47, %40"];
	Node0x22d7d30[shape=record, label="  %49 = add i32 %48, %37"];
	Node0x22d7da0[shape=record, label="  %50 = icmp eq i32 %20, %49"];
	Node0x22748b8[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22d7e30[shape=record, label="  %52 = call i32 @puts(i8* nonnull dereferenceable(1) %51) #5"];
	Node0x22d80d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x22d8238[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x22d8348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22d8458[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22d8518[shape=record, label="  ret i32 0"];
	Node0x22d4a18 -> Node0x22d4a98;
	Node0x22d4a98 -> Node0x22d4b28;
	Node0x22d4b28 -> Node0x22d4b88;
	Node0x22d4b88 -> Node0x22d4c38;
	Node0x22d4c38 -> Node0x22d5068;
	Node0x22d5068 -> Node0x22d5148;
	Node0x22d5148 -> Node0x22d5248;
	Node0x22d5248 -> Node0x22d5308;
	Node0x22d5308 -> Node0x22d53b8;
	Node0x22d53b8 -> Node0x22d5478;
	Node0x22d5478 -> Node0x22d5528;
	Node0x22d5528 -> Node0x22cfac0;
	Node0x22cfac0 -> Node0x22d5728;
	Node0x22d5728 -> Node0x22d6698;
	Node0x22d6698 -> Node0x22d6d08;
	Node0x22d6d08 -> Node0x22d6d68;
	Node0x22d6d68 -> Node0x22d6de0;
	Node0x22d6de0 -> Node0x22d6e50;
	Node0x22d6e50 -> Node0x22d6ec0;
	Node0x22d6ec0 -> Node0x22d6f30;
	Node0x22d6f30 -> Node0x22d6fa0;
	Node0x22d6fa0 -> Node0x22d7010;
	Node0x22d7010 -> Node0x22d7080;
	Node0x22d7080 -> Node0x22d70f0;
	Node0x22d70f0 -> Node0x22d7160;
	Node0x22d7160 -> Node0x22d71d0;
	Node0x22d71d0 -> Node0x22d7240;
	Node0x22d7240 -> Node0x22d72b0;
	Node0x22d72b0 -> Node0x22d7320;
	Node0x22d7320 -> Node0x22d7390;
	Node0x22d7390 -> Node0x22d7400;
	Node0x22d7400 -> Node0x22d7470;
	Node0x22d7470 -> Node0x22d74e0;
	Node0x22d74e0 -> Node0x22d7550;
	Node0x22d7550 -> Node0x22d75c0;
	Node0x22d75c0 -> Node0x22d7630;
	Node0x22d7630 -> Node0x22d76a0;
	Node0x22d76a0 -> Node0x22d7710;
	Node0x22d7710 -> Node0x22d7780;
	Node0x22d7780 -> Node0x22d77f0;
	Node0x22d77f0 -> Node0x22d7860;
	Node0x22d7860 -> Node0x22d78d0;
	Node0x22d78d0 -> Node0x22d7940;
	Node0x22d7940 -> Node0x22d79b0;
	Node0x22d79b0 -> Node0x22d7a20;
	Node0x22d7a20 -> Node0x22d7a90;
	Node0x22d7a90 -> Node0x22d7b00;
	Node0x22d7b00 -> Node0x22d7b70;
	Node0x22d7b70 -> Node0x22d7be0;
	Node0x22d7be0 -> Node0x22d7c50;
	Node0x22d7c50 -> Node0x22d7cc0;
	Node0x22d7cc0 -> Node0x22d7d30;
	Node0x22d7d30 -> Node0x22d7da0;
	Node0x22d7da0 -> Node0x22748b8;
	Node0x22748b8 -> Node0x22d7e30;
	Node0x22d7e30 -> Node0x22d80d8;
	Node0x22d80d8 -> Node0x22d8238;
	Node0x22d8238 -> Node0x22d8348;
	Node0x22d8348 -> Node0x22d8458;
	Node0x22d8458 -> Node0x22d8518;
edge [color=red]
	Node0x22d4a18 -> Node0x22d4c38;
	Node0x22d4c38 -> Node0x22d5068;
	Node0x22d4a98 -> Node0x22d5148;
	Node0x22d5148 -> Node0x22d5248;
	Node0x22d4b28 -> Node0x22d5308;
	Node0x22d5308 -> Node0x22d53b8;
	Node0x22d4b88 -> Node0x22d5478;
	Node0x22d5478 -> Node0x22d5528;
	Node0x22d4a18 -> Node0x22cfac0;
	Node0x22d4a98 -> Node0x22cfac0;
	Node0x22d4b28 -> Node0x22cfac0;
	Node0x22d4b88 -> Node0x22cfac0;
	Node0x22d4a18 -> Node0x22d5728;
	Node0x22d4a98 -> Node0x22d6698;
	Node0x22d4b28 -> Node0x22d6d08;
	Node0x22d4b88 -> Node0x22d6d68;
	Node0x22d6d08 -> Node0x22d6de0;
	Node0x22d6698 -> Node0x22d6e50;
	Node0x22d6de0 -> Node0x22d6e50;
	Node0x22d6d08 -> Node0x22d6ec0;
	Node0x22d6698 -> Node0x22d6ec0;
	Node0x22d6e50 -> Node0x22d6f30;
	Node0x22d6f30 -> Node0x22d6fa0;
	Node0x22d6ec0 -> Node0x22d6fa0;
	Node0x22d6d68 -> Node0x22d7010;
	Node0x22d5728 -> Node0x22d7010;
	Node0x22d6fa0 -> Node0x22d7080;
	Node0x22d7010 -> Node0x22d7080;
	Node0x22d6ec0 -> Node0x22d70f0;
	Node0x22d6d08 -> Node0x22d7160;
	Node0x22d6698 -> Node0x22d7160;
	Node0x22d6de0 -> Node0x22d71d0;
	Node0x22d6d08 -> Node0x22d7240;
	Node0x22d6698 -> Node0x22d7240;
	Node0x22d7240 -> Node0x22d72b0;
	Node0x22d7240 -> Node0x22d7320;
	Node0x22d6d68 -> Node0x22d7390;
	Node0x22d5728 -> Node0x22d7390;
	Node0x22d6d68 -> Node0x22d7400;
	Node0x22d5728 -> Node0x22d7400;
	Node0x22d7400 -> Node0x22d7470;
	Node0x22d7390 -> Node0x22d74e0;
	Node0x22d6d68 -> Node0x22d7550;
	Node0x22d7550 -> Node0x22d75c0;
	Node0x22d5728 -> Node0x22d75c0;
	Node0x22d75c0 -> Node0x22d7630;
	Node0x22d6e50 -> Node0x22d76a0;
	Node0x22d76a0 -> Node0x22d7710;
	Node0x22d7160 -> Node0x22d7710;
	Node0x22d7710 -> Node0x22d7780;
	Node0x22d74e0 -> Node0x22d7780;
	Node0x22d7780 -> Node0x22d77f0;
	Node0x22d6d08 -> Node0x22d7860;
	Node0x22d5728 -> Node0x22d7860;
	Node0x22d7860 -> Node0x22d78d0;
	Node0x22d7390 -> Node0x22d78d0;
	Node0x22d78d0 -> Node0x22d7940;
	Node0x22d7160 -> Node0x22d79b0;
	Node0x22d79b0 -> Node0x22d7a20;
	Node0x22d70f0 -> Node0x22d7a20;
	Node0x22d7a20 -> Node0x22d7a90;
	Node0x22d71d0 -> Node0x22d7a90;
	Node0x22d7a90 -> Node0x22d7b00;
	Node0x22d72b0 -> Node0x22d7b00;
	Node0x22d7b00 -> Node0x22d7b70;
	Node0x22d7320 -> Node0x22d7b70;
	Node0x22d7b70 -> Node0x22d7be0;
	Node0x22d7470 -> Node0x22d7be0;
	Node0x22d7be0 -> Node0x22d7c50;
	Node0x22d7630 -> Node0x22d7c50;
	Node0x22d7c50 -> Node0x22d7cc0;
	Node0x22d7940 -> Node0x22d7cc0;
	Node0x22d7cc0 -> Node0x22d7d30;
	Node0x22d77f0 -> Node0x22d7d30;
	Node0x22d7080 -> Node0x22d7da0;
	Node0x22d7d30 -> Node0x22d7da0;
	Node0x22d7da0 -> Node0x22748b8;
	Node0x22748b8 -> Node0x22d7e30;
	Node0x22d5478 -> Node0x22d80d8;
	Node0x22d5308 -> Node0x22d8238;
	Node0x22d5148 -> Node0x22d8348;
	Node0x22d4c38 -> Node0x22d8458;
}
