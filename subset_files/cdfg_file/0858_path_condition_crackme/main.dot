digraph "DFG for'main' function" {
	Node0xc2f3f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc2f478[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc2f508[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xc2f968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc2fa48[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xc2fb68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc2fda0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xc2fe58[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc30dc8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc31450[shape=record, label="  %8 = or i32 %7, %6"];
	Node0xc314c0[shape=record, label="  %9 = xor i32 %6, -1"];
	Node0xc31530[shape=record, label="  %10 = mul i32 %9, 5"];
	Node0xc315a0[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0xc31610[shape=record, label="  %12 = or i32 %6, %11"];
	Node0xc31680[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xc316f0[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0xc31760[shape=record, label="  %15 = shl i32 %6, 1"];
	Node0xc317d0[shape=record, label="  %16 = xor i32 %14, -1"];
	Node0xc31840[shape=record, label="  %17 = and i32 %6, %11"];
	Node0xc318b0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0xc31920[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0xc31990[shape=record, label="  %20 = xor i32 %8, -1"];
	Node0xc31a00[shape=record, label="  %21 = mul i32 %20, -9"];
	Node0xc31a70[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0xc31ae0[shape=record, label="  %23 = mul i32 %22, -3"];
	Node0xc31b50[shape=record, label="  %24 = shl i32 %13, 2"];
	Node0xc31bc0[shape=record, label="  %25 = add i32 %10, 1"];
	Node0xc31c30[shape=record, label="  %26 = sub i32 %25, %7"];
	Node0xc31ca0[shape=record, label="  %27 = add i32 %26, %15"];
	Node0xc31d10[shape=record, label="  %28 = add i32 %27, %11"];
	Node0xc31d80[shape=record, label="  %29 = add i32 %28, %12"];
	Node0xc31df0[shape=record, label="  %30 = add i32 %29, %13"];
	Node0xc31e60[shape=record, label="  %31 = sub i32 %30, %14"];
	Node0xc31ed0[shape=record, label="  %32 = add i32 %31, %16"];
	Node0xc31f40[shape=record, label="  %33 = sub i32 %32, %17"];
	Node0xc31fb0[shape=record, label="  %34 = add i32 %33, %21"];
	Node0xc32020[shape=record, label="  %35 = add i32 %34, %23"];
	Node0xc32090[shape=record, label="  %36 = sub i32 %35, %24"];
	Node0xc32100[shape=record, label="  %37 = add i32 %36, %19"];
	Node0xc32170[shape=record, label="  %38 = icmp eq i32 %8, %37"];
	Node0xbcf9d8[shape=record, label="  %39 = select i1 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc32200[shape=record, label="  %40 = call i32 @puts(i8* nonnull dereferenceable(1) %39) #5"];
	Node0xc32458[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc325b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc32678[shape=record, label="  ret i32 0"];
	Node0xc2f3f8 -> Node0xc2f478;
	Node0xc2f478 -> Node0xc2f508;
	Node0xc2f508 -> Node0xc2f968;
	Node0xc2f968 -> Node0xc2fa48;
	Node0xc2fa48 -> Node0xc2fb68;
	Node0xc2fb68 -> Node0xc2fda0;
	Node0xc2fda0 -> Node0xc2fe58;
	Node0xc2fe58 -> Node0xc30dc8;
	Node0xc30dc8 -> Node0xc31450;
	Node0xc31450 -> Node0xc314c0;
	Node0xc314c0 -> Node0xc31530;
	Node0xc31530 -> Node0xc315a0;
	Node0xc315a0 -> Node0xc31610;
	Node0xc31610 -> Node0xc31680;
	Node0xc31680 -> Node0xc316f0;
	Node0xc316f0 -> Node0xc31760;
	Node0xc31760 -> Node0xc317d0;
	Node0xc317d0 -> Node0xc31840;
	Node0xc31840 -> Node0xc318b0;
	Node0xc318b0 -> Node0xc31920;
	Node0xc31920 -> Node0xc31990;
	Node0xc31990 -> Node0xc31a00;
	Node0xc31a00 -> Node0xc31a70;
	Node0xc31a70 -> Node0xc31ae0;
	Node0xc31ae0 -> Node0xc31b50;
	Node0xc31b50 -> Node0xc31bc0;
	Node0xc31bc0 -> Node0xc31c30;
	Node0xc31c30 -> Node0xc31ca0;
	Node0xc31ca0 -> Node0xc31d10;
	Node0xc31d10 -> Node0xc31d80;
	Node0xc31d80 -> Node0xc31df0;
	Node0xc31df0 -> Node0xc31e60;
	Node0xc31e60 -> Node0xc31ed0;
	Node0xc31ed0 -> Node0xc31f40;
	Node0xc31f40 -> Node0xc31fb0;
	Node0xc31fb0 -> Node0xc32020;
	Node0xc32020 -> Node0xc32090;
	Node0xc32090 -> Node0xc32100;
	Node0xc32100 -> Node0xc32170;
	Node0xc32170 -> Node0xbcf9d8;
	Node0xbcf9d8 -> Node0xc32200;
	Node0xc32200 -> Node0xc32458;
	Node0xc32458 -> Node0xc325b8;
	Node0xc325b8 -> Node0xc32678;
edge [color=red]
	Node0xc2f3f8 -> Node0xc2f508;
	Node0xc2f508 -> Node0xc2f968;
	Node0xc2f478 -> Node0xc2fa48;
	Node0xc2fa48 -> Node0xc2fb68;
	Node0xc2f3f8 -> Node0xc2fda0;
	Node0xc2f478 -> Node0xc2fda0;
	Node0xc2f3f8 -> Node0xc2fe58;
	Node0xc2f478 -> Node0xc30dc8;
	Node0xc30dc8 -> Node0xc31450;
	Node0xc2fe58 -> Node0xc31450;
	Node0xc2fe58 -> Node0xc314c0;
	Node0xc314c0 -> Node0xc31530;
	Node0xc30dc8 -> Node0xc315a0;
	Node0xc2fe58 -> Node0xc31610;
	Node0xc315a0 -> Node0xc31610;
	Node0xc30dc8 -> Node0xc31680;
	Node0xc2fe58 -> Node0xc31680;
	Node0xc30dc8 -> Node0xc316f0;
	Node0xc2fe58 -> Node0xc316f0;
	Node0xc2fe58 -> Node0xc31760;
	Node0xc316f0 -> Node0xc317d0;
	Node0xc2fe58 -> Node0xc31840;
	Node0xc315a0 -> Node0xc31840;
	Node0xc31840 -> Node0xc318b0;
	Node0xc318b0 -> Node0xc31920;
	Node0xc31450 -> Node0xc31990;
	Node0xc31990 -> Node0xc31a00;
	Node0xc31610 -> Node0xc31a70;
	Node0xc31a70 -> Node0xc31ae0;
	Node0xc31680 -> Node0xc31b50;
	Node0xc31530 -> Node0xc31bc0;
	Node0xc31bc0 -> Node0xc31c30;
	Node0xc30dc8 -> Node0xc31c30;
	Node0xc31c30 -> Node0xc31ca0;
	Node0xc31760 -> Node0xc31ca0;
	Node0xc31ca0 -> Node0xc31d10;
	Node0xc315a0 -> Node0xc31d10;
	Node0xc31d10 -> Node0xc31d80;
	Node0xc31610 -> Node0xc31d80;
	Node0xc31d80 -> Node0xc31df0;
	Node0xc31680 -> Node0xc31df0;
	Node0xc31df0 -> Node0xc31e60;
	Node0xc316f0 -> Node0xc31e60;
	Node0xc31e60 -> Node0xc31ed0;
	Node0xc317d0 -> Node0xc31ed0;
	Node0xc31ed0 -> Node0xc31f40;
	Node0xc31840 -> Node0xc31f40;
	Node0xc31f40 -> Node0xc31fb0;
	Node0xc31a00 -> Node0xc31fb0;
	Node0xc31fb0 -> Node0xc32020;
	Node0xc31ae0 -> Node0xc32020;
	Node0xc32020 -> Node0xc32090;
	Node0xc31b50 -> Node0xc32090;
	Node0xc32090 -> Node0xc32100;
	Node0xc31920 -> Node0xc32100;
	Node0xc31450 -> Node0xc32170;
	Node0xc32100 -> Node0xc32170;
	Node0xc32170 -> Node0xbcf9d8;
	Node0xbcf9d8 -> Node0xc32200;
	Node0xc2fa48 -> Node0xc32458;
	Node0xc2f508 -> Node0xc325b8;
}
