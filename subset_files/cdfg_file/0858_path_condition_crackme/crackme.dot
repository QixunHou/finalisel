digraph "DFG for'crackme' function" {
	Node0xc2d690[shape=record, label="  %3 = or i32 %1, %0"];
	Node0xc2dd40[shape=record, label="  %4 = xor i32 %0, -1"];
	Node0xc2de00[shape=record, label="  %5 = mul i32 %4, 5"];
	Node0xc2de70[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0xc2dee0[shape=record, label="  %7 = or i32 %6, %0"];
	Node0xc2df50[shape=record, label="  %8 = and i32 %1, %0"];
	Node0xc2dfc0[shape=record, label="  %9 = xor i32 %1, %0"];
	Node0xc2e060[shape=record, label="  %10 = shl i32 %0, 1"];
	Node0xc2e0d0[shape=record, label="  %11 = xor i32 %9, -1"];
	Node0xc2e140[shape=record, label="  %12 = and i32 %6, %0"];
	Node0xc2e1b0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0xc2e250[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0xc2e2c0[shape=record, label="  %15 = xor i32 %3, -1"];
	Node0xc2e360[shape=record, label="  %16 = mul i32 %15, -9"];
	Node0xc2e3d0[shape=record, label="  %17 = xor i32 %7, -1"];
	Node0xc2e470[shape=record, label="  %18 = mul i32 %17, -3"];
	Node0xc2e510[shape=record, label="  %19 = shl i32 %8, 2"];
	Node0xc2e580[shape=record, label="  %20 = add i32 %5, 1"];
	Node0xc2e5f0[shape=record, label="  %21 = sub i32 %20, %1"];
	Node0xc2e660[shape=record, label="  %22 = add i32 %21, %10"];
	Node0xc2e6d0[shape=record, label="  %23 = add i32 %22, %6"];
	Node0xc2e740[shape=record, label="  %24 = add i32 %23, %7"];
	Node0xc2e7b0[shape=record, label="  %25 = add i32 %24, %8"];
	Node0xc2e820[shape=record, label="  %26 = sub i32 %25, %9"];
	Node0xc2e890[shape=record, label="  %27 = add i32 %26, %11"];
	Node0xc2e900[shape=record, label="  %28 = sub i32 %27, %12"];
	Node0xc2e970[shape=record, label="  %29 = add i32 %28, %16"];
	Node0xc2e9e0[shape=record, label="  %30 = add i32 %29, %18"];
	Node0xc2ea50[shape=record, label="  %31 = sub i32 %30, %19"];
	Node0xc2eac0[shape=record, label="  %32 = add i32 %31, %14"];
	Node0xc2ed40[shape=record, label="  %33 = icmp eq i32 %3, %32"];
	Node0xbce268[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc2f1e0[shape=record, label="  %35 = tail call i32 @puts(i8* nonnull dereferenceable(1) %34)"];
	Node0xc2f230[shape=record, label="  ret void"];
	Node0xc2d690 -> Node0xc2dd40;
	Node0xc2dd40 -> Node0xc2de00;
	Node0xc2de00 -> Node0xc2de70;
	Node0xc2de70 -> Node0xc2dee0;
	Node0xc2dee0 -> Node0xc2df50;
	Node0xc2df50 -> Node0xc2dfc0;
	Node0xc2dfc0 -> Node0xc2e060;
	Node0xc2e060 -> Node0xc2e0d0;
	Node0xc2e0d0 -> Node0xc2e140;
	Node0xc2e140 -> Node0xc2e1b0;
	Node0xc2e1b0 -> Node0xc2e250;
	Node0xc2e250 -> Node0xc2e2c0;
	Node0xc2e2c0 -> Node0xc2e360;
	Node0xc2e360 -> Node0xc2e3d0;
	Node0xc2e3d0 -> Node0xc2e470;
	Node0xc2e470 -> Node0xc2e510;
	Node0xc2e510 -> Node0xc2e580;
	Node0xc2e580 -> Node0xc2e5f0;
	Node0xc2e5f0 -> Node0xc2e660;
	Node0xc2e660 -> Node0xc2e6d0;
	Node0xc2e6d0 -> Node0xc2e740;
	Node0xc2e740 -> Node0xc2e7b0;
	Node0xc2e7b0 -> Node0xc2e820;
	Node0xc2e820 -> Node0xc2e890;
	Node0xc2e890 -> Node0xc2e900;
	Node0xc2e900 -> Node0xc2e970;
	Node0xc2e970 -> Node0xc2e9e0;
	Node0xc2e9e0 -> Node0xc2ea50;
	Node0xc2ea50 -> Node0xc2eac0;
	Node0xc2eac0 -> Node0xc2ed40;
	Node0xc2ed40 -> Node0xbce268;
	Node0xbce268 -> Node0xc2f1e0;
	Node0xc2f1e0 -> Node0xc2f230;
edge [color=red]
	Node0xc2dd40 -> Node0xc2de00;
	Node0xc2de70 -> Node0xc2dee0;
	Node0xc2dfc0 -> Node0xc2e0d0;
	Node0xc2de70 -> Node0xc2e140;
	Node0xc2e140 -> Node0xc2e1b0;
	Node0xc2e1b0 -> Node0xc2e250;
	Node0xc2d690 -> Node0xc2e2c0;
	Node0xc2e2c0 -> Node0xc2e360;
	Node0xc2dee0 -> Node0xc2e3d0;
	Node0xc2e3d0 -> Node0xc2e470;
	Node0xc2df50 -> Node0xc2e510;
	Node0xc2de00 -> Node0xc2e580;
	Node0xc2e580 -> Node0xc2e5f0;
	Node0xc2e5f0 -> Node0xc2e660;
	Node0xc2e060 -> Node0xc2e660;
	Node0xc2e660 -> Node0xc2e6d0;
	Node0xc2de70 -> Node0xc2e6d0;
	Node0xc2e6d0 -> Node0xc2e740;
	Node0xc2dee0 -> Node0xc2e740;
	Node0xc2e740 -> Node0xc2e7b0;
	Node0xc2df50 -> Node0xc2e7b0;
	Node0xc2e7b0 -> Node0xc2e820;
	Node0xc2dfc0 -> Node0xc2e820;
	Node0xc2e820 -> Node0xc2e890;
	Node0xc2e0d0 -> Node0xc2e890;
	Node0xc2e890 -> Node0xc2e900;
	Node0xc2e140 -> Node0xc2e900;
	Node0xc2e900 -> Node0xc2e970;
	Node0xc2e360 -> Node0xc2e970;
	Node0xc2e970 -> Node0xc2e9e0;
	Node0xc2e470 -> Node0xc2e9e0;
	Node0xc2e9e0 -> Node0xc2ea50;
	Node0xc2e510 -> Node0xc2ea50;
	Node0xc2ea50 -> Node0xc2eac0;
	Node0xc2e250 -> Node0xc2eac0;
	Node0xc2d690 -> Node0xc2ed40;
	Node0xc2eac0 -> Node0xc2ed40;
	Node0xc2ed40 -> Node0xbce268;
	Node0xbce268 -> Node0xc2f1e0;
}
