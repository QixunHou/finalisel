digraph "DFG for'main' function" {
	Node0x10a8e28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x10a8ea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x10a8f38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x10a8f98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x10a9048[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x10a9478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10a9558[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x10a9658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10a9718[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x10a97c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10a9888[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x10a9938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10a3bd0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x10a9b38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10aaaa8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10ab118[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x10ab178[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x10ab1f0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x10ab260[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x10ab2d0[shape=record, label="  %16 = or i32 %13, %15"];
	Node0x10ab340[shape=record, label="  %17 = add i32 %16, %14"];
	Node0x10ab3b0[shape=record, label="  %18 = or i32 %11, %14"];
	Node0x10ab420[shape=record, label="  %19 = xor i32 %12, %11"];
	Node0x10ab490[shape=record, label="  %20 = and i32 %11, %14"];
	Node0x10ab500[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x10ab570[shape=record, label="  %22 = mul i32 %19, -5"];
	Node0x10ab5e0[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x10ab650[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x10ab6c0[shape=record, label="  %25 = xor i32 %23, -1"];
	Node0x10ab730[shape=record, label="  %26 = xor i32 %18, -1"];
	Node0x10ab7a0[shape=record, label="  %27 = mul i32 %26, 6"];
	Node0x10ab810[shape=record, label="  %28 = mul i32 %20, 7"];
	Node0x10ab880[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x10ab8f0[shape=record, label="  %30 = and i32 %13, %15"];
	Node0x10ab960[shape=record, label="  %31 = and i32 %13, %10"];
	Node0x10ab9d0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x10aba40[shape=record, label="  %33 = shl i32 %29, 1"];
	Node0x10abab0[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x10abb20[shape=record, label="  %35 = shl i32 %32, 1"];
	Node0x10abb90[shape=record, label="  %36 = mul i32 %13, -3"];
	Node0x10abc00[shape=record, label="  %37 = sub i32 4, %10"];
	Node0x10abc70[shape=record, label="  %38 = add i32 %37, %11"];
	Node0x10abce0[shape=record, label="  %39 = add i32 %38, %12"];
	Node0x10abd50[shape=record, label="  %40 = add i32 %39, %18"];
	Node0x10abdc0[shape=record, label="  %41 = add i32 %40, %19"];
	Node0x10abe30[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x10abea0[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x10abf10[shape=record, label="  %44 = add i32 %43, %13"];
	Node0x10abf80[shape=record, label="  %45 = add i32 %44, %22"];
	Node0x10abff0[shape=record, label="  %46 = sub i32 %45, %24"];
	Node0x10ac060[shape=record, label="  %47 = add i32 %46, %27"];
	Node0x10ac0d0[shape=record, label="  %48 = add i32 %47, %28"];
	Node0x10ac140[shape=record, label="  %49 = add i32 %48, %29"];
	Node0x10ac1b0[shape=record, label="  %50 = add i32 %49, %30"];
	Node0x10ac220[shape=record, label="  %51 = add i32 %50, %31"];
	Node0x10ac290[shape=record, label="  %52 = add i32 %51, %16"];
	Node0x10ac300[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x10ac370[shape=record, label="  %54 = add i32 %53, %35"];
	Node0x10ac3e0[shape=record, label="  %55 = add i32 %54, %34"];
	Node0x10ac450[shape=record, label="  %56 = icmp eq i32 %17, %55"];
	Node0x10488b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x10ac4e0[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x10ac788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10ac8e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10ac9f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10acb08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10acbc8[shape=record, label="  ret i32 0"];
	Node0x10a8e28 -> Node0x10a8ea8;
	Node0x10a8ea8 -> Node0x10a8f38;
	Node0x10a8f38 -> Node0x10a8f98;
	Node0x10a8f98 -> Node0x10a9048;
	Node0x10a9048 -> Node0x10a9478;
	Node0x10a9478 -> Node0x10a9558;
	Node0x10a9558 -> Node0x10a9658;
	Node0x10a9658 -> Node0x10a9718;
	Node0x10a9718 -> Node0x10a97c8;
	Node0x10a97c8 -> Node0x10a9888;
	Node0x10a9888 -> Node0x10a9938;
	Node0x10a9938 -> Node0x10a3bd0;
	Node0x10a3bd0 -> Node0x10a9b38;
	Node0x10a9b38 -> Node0x10aaaa8;
	Node0x10aaaa8 -> Node0x10ab118;
	Node0x10ab118 -> Node0x10ab178;
	Node0x10ab178 -> Node0x10ab1f0;
	Node0x10ab1f0 -> Node0x10ab260;
	Node0x10ab260 -> Node0x10ab2d0;
	Node0x10ab2d0 -> Node0x10ab340;
	Node0x10ab340 -> Node0x10ab3b0;
	Node0x10ab3b0 -> Node0x10ab420;
	Node0x10ab420 -> Node0x10ab490;
	Node0x10ab490 -> Node0x10ab500;
	Node0x10ab500 -> Node0x10ab570;
	Node0x10ab570 -> Node0x10ab5e0;
	Node0x10ab5e0 -> Node0x10ab650;
	Node0x10ab650 -> Node0x10ab6c0;
	Node0x10ab6c0 -> Node0x10ab730;
	Node0x10ab730 -> Node0x10ab7a0;
	Node0x10ab7a0 -> Node0x10ab810;
	Node0x10ab810 -> Node0x10ab880;
	Node0x10ab880 -> Node0x10ab8f0;
	Node0x10ab8f0 -> Node0x10ab960;
	Node0x10ab960 -> Node0x10ab9d0;
	Node0x10ab9d0 -> Node0x10aba40;
	Node0x10aba40 -> Node0x10abab0;
	Node0x10abab0 -> Node0x10abb20;
	Node0x10abb20 -> Node0x10abb90;
	Node0x10abb90 -> Node0x10abc00;
	Node0x10abc00 -> Node0x10abc70;
	Node0x10abc70 -> Node0x10abce0;
	Node0x10abce0 -> Node0x10abd50;
	Node0x10abd50 -> Node0x10abdc0;
	Node0x10abdc0 -> Node0x10abe30;
	Node0x10abe30 -> Node0x10abea0;
	Node0x10abea0 -> Node0x10abf10;
	Node0x10abf10 -> Node0x10abf80;
	Node0x10abf80 -> Node0x10abff0;
	Node0x10abff0 -> Node0x10ac060;
	Node0x10ac060 -> Node0x10ac0d0;
	Node0x10ac0d0 -> Node0x10ac140;
	Node0x10ac140 -> Node0x10ac1b0;
	Node0x10ac1b0 -> Node0x10ac220;
	Node0x10ac220 -> Node0x10ac290;
	Node0x10ac290 -> Node0x10ac300;
	Node0x10ac300 -> Node0x10ac370;
	Node0x10ac370 -> Node0x10ac3e0;
	Node0x10ac3e0 -> Node0x10ac450;
	Node0x10ac450 -> Node0x10488b8;
	Node0x10488b8 -> Node0x10ac4e0;
	Node0x10ac4e0 -> Node0x10ac788;
	Node0x10ac788 -> Node0x10ac8e8;
	Node0x10ac8e8 -> Node0x10ac9f8;
	Node0x10ac9f8 -> Node0x10acb08;
	Node0x10acb08 -> Node0x10acbc8;
edge [color=red]
	Node0x10a8e28 -> Node0x10a9048;
	Node0x10a9048 -> Node0x10a9478;
	Node0x10a8ea8 -> Node0x10a9558;
	Node0x10a9558 -> Node0x10a9658;
	Node0x10a8f38 -> Node0x10a9718;
	Node0x10a9718 -> Node0x10a97c8;
	Node0x10a8f98 -> Node0x10a9888;
	Node0x10a9888 -> Node0x10a9938;
	Node0x10a8e28 -> Node0x10a3bd0;
	Node0x10a8ea8 -> Node0x10a3bd0;
	Node0x10a8f38 -> Node0x10a3bd0;
	Node0x10a8f98 -> Node0x10a3bd0;
	Node0x10a8e28 -> Node0x10a9b38;
	Node0x10a8ea8 -> Node0x10aaaa8;
	Node0x10a8f38 -> Node0x10ab118;
	Node0x10a8f98 -> Node0x10ab178;
	Node0x10ab118 -> Node0x10ab1f0;
	Node0x10a9b38 -> Node0x10ab260;
	Node0x10ab178 -> Node0x10ab2d0;
	Node0x10ab260 -> Node0x10ab2d0;
	Node0x10ab2d0 -> Node0x10ab340;
	Node0x10ab1f0 -> Node0x10ab340;
	Node0x10aaaa8 -> Node0x10ab3b0;
	Node0x10ab1f0 -> Node0x10ab3b0;
	Node0x10ab118 -> Node0x10ab420;
	Node0x10aaaa8 -> Node0x10ab420;
	Node0x10aaaa8 -> Node0x10ab490;
	Node0x10ab1f0 -> Node0x10ab490;
	Node0x10ab490 -> Node0x10ab500;
	Node0x10ab420 -> Node0x10ab570;
	Node0x10ab118 -> Node0x10ab5e0;
	Node0x10aaaa8 -> Node0x10ab5e0;
	Node0x10ab5e0 -> Node0x10ab650;
	Node0x10ab5e0 -> Node0x10ab6c0;
	Node0x10ab3b0 -> Node0x10ab730;
	Node0x10ab730 -> Node0x10ab7a0;
	Node0x10ab490 -> Node0x10ab810;
	Node0x10ab178 -> Node0x10ab880;
	Node0x10a9b38 -> Node0x10ab880;
	Node0x10ab178 -> Node0x10ab8f0;
	Node0x10ab260 -> Node0x10ab8f0;
	Node0x10ab178 -> Node0x10ab960;
	Node0x10a9b38 -> Node0x10ab960;
	Node0x10ab178 -> Node0x10ab9d0;
	Node0x10a9b38 -> Node0x10ab9d0;
	Node0x10ab880 -> Node0x10aba40;
	Node0x10aba40 -> Node0x10abab0;
	Node0x10ab9d0 -> Node0x10abb20;
	Node0x10ab178 -> Node0x10abb90;
	Node0x10a9b38 -> Node0x10abc00;
	Node0x10abc00 -> Node0x10abc70;
	Node0x10aaaa8 -> Node0x10abc70;
	Node0x10abc70 -> Node0x10abce0;
	Node0x10ab118 -> Node0x10abce0;
	Node0x10abce0 -> Node0x10abd50;
	Node0x10ab3b0 -> Node0x10abd50;
	Node0x10abd50 -> Node0x10abdc0;
	Node0x10ab420 -> Node0x10abdc0;
	Node0x10abdc0 -> Node0x10abe30;
	Node0x10ab500 -> Node0x10abe30;
	Node0x10abe30 -> Node0x10abea0;
	Node0x10ab6c0 -> Node0x10abea0;
	Node0x10abea0 -> Node0x10abf10;
	Node0x10ab178 -> Node0x10abf10;
	Node0x10abf10 -> Node0x10abf80;
	Node0x10ab570 -> Node0x10abf80;
	Node0x10abf80 -> Node0x10abff0;
	Node0x10ab650 -> Node0x10abff0;
	Node0x10abff0 -> Node0x10ac060;
	Node0x10ab7a0 -> Node0x10ac060;
	Node0x10ac060 -> Node0x10ac0d0;
	Node0x10ab810 -> Node0x10ac0d0;
	Node0x10ac0d0 -> Node0x10ac140;
	Node0x10ab880 -> Node0x10ac140;
	Node0x10ac140 -> Node0x10ac1b0;
	Node0x10ab8f0 -> Node0x10ac1b0;
	Node0x10ac1b0 -> Node0x10ac220;
	Node0x10ab960 -> Node0x10ac220;
	Node0x10ac220 -> Node0x10ac290;
	Node0x10ab2d0 -> Node0x10ac290;
	Node0x10ac290 -> Node0x10ac300;
	Node0x10abb90 -> Node0x10ac300;
	Node0x10ac300 -> Node0x10ac370;
	Node0x10abb20 -> Node0x10ac370;
	Node0x10ac370 -> Node0x10ac3e0;
	Node0x10abab0 -> Node0x10ac3e0;
	Node0x10ab340 -> Node0x10ac450;
	Node0x10ac3e0 -> Node0x10ac450;
	Node0x10ac450 -> Node0x10488b8;
	Node0x10488b8 -> Node0x10ac4e0;
	Node0x10a9888 -> Node0x10ac788;
	Node0x10a9718 -> Node0x10ac8e8;
	Node0x10a9558 -> Node0x10ac9f8;
	Node0x10a9048 -> Node0x10acb08;
}
