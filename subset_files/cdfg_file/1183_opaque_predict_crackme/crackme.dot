digraph "DFG for'crackme' function" {
	Node0xf35d70[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xf35e10[shape=record, label="  %6 = mul i32 %5, -3"];
	Node0xf35e80[shape=record, label="  %7 = xor i32 %2, %1"];
	Node0xf35ef0[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0xf35f60[shape=record, label="  %9 = or i32 %8, %3"];
	Node0xf36000[shape=record, label="  %10 = mul i32 %9, 5"];
	Node0xf360a0[shape=record, label="  %11 = sub i32 1, %7"];
	Node0xf36110[shape=record, label="  %12 = add i32 %11, %6"];
	Node0xf36180[shape=record, label="  %13 = add i32 %12, %3"];
	Node0xf361f0[shape=record, label="  %14 = add i32 %13, %10"];
	Node0xf36260[shape=record, label="  %15 = or i32 %5, %1"];
	Node0xf362d0[shape=record, label="  %16 = xor i32 %7, -1"];
	Node0xf36340[shape=record, label="  %17 = or i32 %2, %1"];
	Node0xf363e0[shape=record, label="  %18 = shl i32 %1, 2"];
	Node0xf36480[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0xf364f0[shape=record, label="  %20 = xor i32 %15, -1"];
	Node0xf36590[shape=record, label="  %21 = mul i32 %20, 6"];
	Node0xf36600[shape=record, label="  %22 = and i32 %5, %1"];
	Node0xf36670[shape=record, label="  %23 = and i32 %2, %1"];
	Node0xf366e0[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0xf36750[shape=record, label="  %25 = shl i32 %3, 1"];
	Node0xf367c0[shape=record, label="  %26 = and i32 %3, %0"];
	Node0xf36830[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0xf368a0[shape=record, label="  %28 = or i32 %3, %0"];
	Node0xf36910[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0xf36980[shape=record, label="  %30 = shl i32 %9, 2"];
	Node0xf369f0[shape=record, label="  %31 = xor i32 %30, -4"];
	Node0xf36a60[shape=record, label="  %32 = and i32 %8, %3"];
	Node0xf36ce0[shape=record, label="  %33 = shl i32 %32, 2"];
	Node0xf36d80[shape=record, label="  %34 = mul i32 %26, 7"];
	Node0xf36df0[shape=record, label="  %35 = add i32 %24, %23"];
	Node0xf36e60[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0xf36ed0[shape=record, label="  %37 = sub i32 %29, %17"];
	Node0xf36f70[shape=record, label="  %38 = mul i32 %37, 3"];
	Node0xf36fe0[shape=record, label="  %39 = sub i32 1, %1"];
	Node0xf37050[shape=record, label="  %40 = add i32 %39, %16"];
	Node0xf370c0[shape=record, label="  %41 = add i32 %40, %15"];
	Node0xf37130[shape=record, label="  %42 = sub i32 %41, %19"];
	Node0xf371a0[shape=record, label="  %43 = add i32 %42, %17"];
	Node0xf37210[shape=record, label="  %44 = sub i32 %43, %22"];
	Node0xf37280[shape=record, label="  %45 = add i32 %44, %21"];
	Node0xf372f0[shape=record, label="  %46 = sub i32 %45, %25"];
	Node0xf37360[shape=record, label="  %47 = add i32 %46, %27"];
	Node0xf373d0[shape=record, label="  %48 = add i32 %47, %33"];
	Node0xf37440[shape=record, label="  %49 = add i32 %48, %34"];
	Node0xf374b0[shape=record, label="  %50 = sub i32 %49, %31"];
	Node0xf37520[shape=record, label="  %51 = add i32 %50, %36"];
	Node0xf37590[shape=record, label="  %52 = add i32 %51, %38"];
	Node0xf37600[shape=record, label="  %53 = icmp eq i32 %14, %52"];
	Node0xed6268[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf37aa0[shape=record, label="  %55 = tail call i32 @puts(i8* nonnull dereferenceable(1) %54)"];
	Node0xf37af0[shape=record, label="  ret void"];
	Node0xf35d70 -> Node0xf35e10;
	Node0xf35e10 -> Node0xf35e80;
	Node0xf35e80 -> Node0xf35ef0;
	Node0xf35ef0 -> Node0xf35f60;
	Node0xf35f60 -> Node0xf36000;
	Node0xf36000 -> Node0xf360a0;
	Node0xf360a0 -> Node0xf36110;
	Node0xf36110 -> Node0xf36180;
	Node0xf36180 -> Node0xf361f0;
	Node0xf361f0 -> Node0xf36260;
	Node0xf36260 -> Node0xf362d0;
	Node0xf362d0 -> Node0xf36340;
	Node0xf36340 -> Node0xf363e0;
	Node0xf363e0 -> Node0xf36480;
	Node0xf36480 -> Node0xf364f0;
	Node0xf364f0 -> Node0xf36590;
	Node0xf36590 -> Node0xf36600;
	Node0xf36600 -> Node0xf36670;
	Node0xf36670 -> Node0xf366e0;
	Node0xf366e0 -> Node0xf36750;
	Node0xf36750 -> Node0xf367c0;
	Node0xf367c0 -> Node0xf36830;
	Node0xf36830 -> Node0xf368a0;
	Node0xf368a0 -> Node0xf36910;
	Node0xf36910 -> Node0xf36980;
	Node0xf36980 -> Node0xf369f0;
	Node0xf369f0 -> Node0xf36a60;
	Node0xf36a60 -> Node0xf36ce0;
	Node0xf36ce0 -> Node0xf36d80;
	Node0xf36d80 -> Node0xf36df0;
	Node0xf36df0 -> Node0xf36e60;
	Node0xf36e60 -> Node0xf36ed0;
	Node0xf36ed0 -> Node0xf36f70;
	Node0xf36f70 -> Node0xf36fe0;
	Node0xf36fe0 -> Node0xf37050;
	Node0xf37050 -> Node0xf370c0;
	Node0xf370c0 -> Node0xf37130;
	Node0xf37130 -> Node0xf371a0;
	Node0xf371a0 -> Node0xf37210;
	Node0xf37210 -> Node0xf37280;
	Node0xf37280 -> Node0xf372f0;
	Node0xf372f0 -> Node0xf37360;
	Node0xf37360 -> Node0xf373d0;
	Node0xf373d0 -> Node0xf37440;
	Node0xf37440 -> Node0xf374b0;
	Node0xf374b0 -> Node0xf37520;
	Node0xf37520 -> Node0xf37590;
	Node0xf37590 -> Node0xf37600;
	Node0xf37600 -> Node0xed6268;
	Node0xed6268 -> Node0xf37aa0;
	Node0xf37aa0 -> Node0xf37af0;
edge [color=red]
	Node0xf35d70 -> Node0xf35e10;
	Node0xf35ef0 -> Node0xf35f60;
	Node0xf35f60 -> Node0xf36000;
	Node0xf35e80 -> Node0xf360a0;
	Node0xf360a0 -> Node0xf36110;
	Node0xf35e10 -> Node0xf36110;
	Node0xf36110 -> Node0xf36180;
	Node0xf36180 -> Node0xf361f0;
	Node0xf36000 -> Node0xf361f0;
	Node0xf35d70 -> Node0xf36260;
	Node0xf35e80 -> Node0xf362d0;
	Node0xf363e0 -> Node0xf36480;
	Node0xf36260 -> Node0xf364f0;
	Node0xf364f0 -> Node0xf36590;
	Node0xf35d70 -> Node0xf36600;
	Node0xf367c0 -> Node0xf36830;
	Node0xf368a0 -> Node0xf36910;
	Node0xf35f60 -> Node0xf36980;
	Node0xf36980 -> Node0xf369f0;
	Node0xf35ef0 -> Node0xf36a60;
	Node0xf36a60 -> Node0xf36ce0;
	Node0xf367c0 -> Node0xf36d80;
	Node0xf366e0 -> Node0xf36df0;
	Node0xf36670 -> Node0xf36df0;
	Node0xf36df0 -> Node0xf36e60;
	Node0xf36910 -> Node0xf36ed0;
	Node0xf36340 -> Node0xf36ed0;
	Node0xf36ed0 -> Node0xf36f70;
	Node0xf36fe0 -> Node0xf37050;
	Node0xf362d0 -> Node0xf37050;
	Node0xf37050 -> Node0xf370c0;
	Node0xf36260 -> Node0xf370c0;
	Node0xf370c0 -> Node0xf37130;
	Node0xf36480 -> Node0xf37130;
	Node0xf37130 -> Node0xf371a0;
	Node0xf36340 -> Node0xf371a0;
	Node0xf371a0 -> Node0xf37210;
	Node0xf36600 -> Node0xf37210;
	Node0xf37210 -> Node0xf37280;
	Node0xf36590 -> Node0xf37280;
	Node0xf37280 -> Node0xf372f0;
	Node0xf36750 -> Node0xf372f0;
	Node0xf372f0 -> Node0xf37360;
	Node0xf36830 -> Node0xf37360;
	Node0xf37360 -> Node0xf373d0;
	Node0xf36ce0 -> Node0xf373d0;
	Node0xf373d0 -> Node0xf37440;
	Node0xf36d80 -> Node0xf37440;
	Node0xf37440 -> Node0xf374b0;
	Node0xf369f0 -> Node0xf374b0;
	Node0xf374b0 -> Node0xf37520;
	Node0xf36e60 -> Node0xf37520;
	Node0xf37520 -> Node0xf37590;
	Node0xf36f70 -> Node0xf37590;
	Node0xf361f0 -> Node0xf37600;
	Node0xf37590 -> Node0xf37600;
	Node0xf37600 -> Node0xed6268;
	Node0xed6268 -> Node0xf37aa0;
}
