digraph "DFG for'main' function" {
	Node0x1a67e98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a67f18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a67fa8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1a68008[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1a680b8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1a684e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a685c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1a686c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a68788[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1a68838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1a688f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1a689a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1a62c00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1a68ba8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a69b18[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a6a188[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1a6a1e8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1a6a260[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1a6a2d0[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x1a6a340[shape=record, label="  %16 = shl i32 %10, 1"];
	Node0x1a6a3b0[shape=record, label="  %17 = sub i32 %15, %16"];
	Node0x1a6a420[shape=record, label="  %18 = and i32 %12, %11"];
	Node0x1a6a490[shape=record, label="  %19 = shl i32 %14, 1"];
	Node0x1a6a500[shape=record, label="  %20 = or i32 %12, %11"];
	Node0x1a6a570[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x1a6a5e0[shape=record, label="  %22 = shl i32 %15, 1"];
	Node0x1a6a650[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x1a6a6c0[shape=record, label="  %24 = shl i32 %13, 1"];
	Node0x1a6a730[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x1a6a7a0[shape=record, label="  %26 = xor i32 %13, %10"];
	Node0x1a6a810[shape=record, label="  %27 = xor i32 %10, -1"];
	Node0x1a6a880[shape=record, label="  %28 = and i32 %13, %27"];
	Node0x1a6a8f0[shape=record, label="  %29 = and i32 %13, %10"];
	Node0x1a6a960[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x1a6a9d0[shape=record, label="  %31 = mul i32 %30, 5"];
	Node0x1a6aa40[shape=record, label="  %32 = or i32 %13, %27"];
	Node0x1a6aab0[shape=record, label="  %33 = shl i32 %30, 1"];
	Node0x1a6ab20[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x1a6ab90[shape=record, label="  %35 = xor i32 %32, -1"];
	Node0x1a6ac00[shape=record, label="  %36 = add i32 %13, %35"];
	Node0x1a6ac70[shape=record, label="  %37 = mul i32 %36, -9"];
	Node0x1a6ace0[shape=record, label="  %38 = add i32 %11, %21"];
	Node0x1a6ad50[shape=record, label="  %39 = mul i32 %38, 3"];
	Node0x1a6adc0[shape=record, label="  %40 = add i32 %26, %32"];
	Node0x1a6ae30[shape=record, label="  %41 = shl i32 %40, 1"];
	Node0x1a6aea0[shape=record, label="  %42 = add i32 %11, 2"];
	Node0x1a6af10[shape=record, label="  %43 = sub i32 %42, %12"];
	Node0x1a6af80[shape=record, label="  %44 = sub i32 %43, %18"];
	Node0x1a6aff0[shape=record, label="  %45 = sub i32 %44, %19"];
	Node0x1a6b060[shape=record, label="  %46 = sub i32 %45, %20"];
	Node0x1a6b0d0[shape=record, label="  %47 = add i32 %46, %13"];
	Node0x1a6b140[shape=record, label="  %48 = add i32 %47, %28"];
	Node0x1a6b1b0[shape=record, label="  %49 = add i32 %48, %29"];
	Node0x1a6b220[shape=record, label="  %50 = add i32 %49, %23"];
	Node0x1a6b290[shape=record, label="  %51 = add i32 %50, %25"];
	Node0x1a6b300[shape=record, label="  %52 = add i32 %51, %31"];
	Node0x1a6b370[shape=record, label="  %53 = add i32 %52, %39"];
	Node0x1a6b3e0[shape=record, label="  %54 = sub i32 %53, %34"];
	Node0x1a6b450[shape=record, label="  %55 = add i32 %54, %41"];
	Node0x1a6b4c0[shape=record, label="  %56 = add i32 %55, %37"];
	Node0x1a6b530[shape=record, label="  %57 = icmp eq i32 %17, %56"];
	Node0x1a078b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a6b5c0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0x1a6b868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1a6b9c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1a6bad8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a6bbe8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a6bca8[shape=record, label="  ret i32 0"];
	Node0x1a67e98 -> Node0x1a67f18;
	Node0x1a67f18 -> Node0x1a67fa8;
	Node0x1a67fa8 -> Node0x1a68008;
	Node0x1a68008 -> Node0x1a680b8;
	Node0x1a680b8 -> Node0x1a684e8;
	Node0x1a684e8 -> Node0x1a685c8;
	Node0x1a685c8 -> Node0x1a686c8;
	Node0x1a686c8 -> Node0x1a68788;
	Node0x1a68788 -> Node0x1a68838;
	Node0x1a68838 -> Node0x1a688f8;
	Node0x1a688f8 -> Node0x1a689a8;
	Node0x1a689a8 -> Node0x1a62c00;
	Node0x1a62c00 -> Node0x1a68ba8;
	Node0x1a68ba8 -> Node0x1a69b18;
	Node0x1a69b18 -> Node0x1a6a188;
	Node0x1a6a188 -> Node0x1a6a1e8;
	Node0x1a6a1e8 -> Node0x1a6a260;
	Node0x1a6a260 -> Node0x1a6a2d0;
	Node0x1a6a2d0 -> Node0x1a6a340;
	Node0x1a6a340 -> Node0x1a6a3b0;
	Node0x1a6a3b0 -> Node0x1a6a420;
	Node0x1a6a420 -> Node0x1a6a490;
	Node0x1a6a490 -> Node0x1a6a500;
	Node0x1a6a500 -> Node0x1a6a570;
	Node0x1a6a570 -> Node0x1a6a5e0;
	Node0x1a6a5e0 -> Node0x1a6a650;
	Node0x1a6a650 -> Node0x1a6a6c0;
	Node0x1a6a6c0 -> Node0x1a6a730;
	Node0x1a6a730 -> Node0x1a6a7a0;
	Node0x1a6a7a0 -> Node0x1a6a810;
	Node0x1a6a810 -> Node0x1a6a880;
	Node0x1a6a880 -> Node0x1a6a8f0;
	Node0x1a6a8f0 -> Node0x1a6a960;
	Node0x1a6a960 -> Node0x1a6a9d0;
	Node0x1a6a9d0 -> Node0x1a6aa40;
	Node0x1a6aa40 -> Node0x1a6aab0;
	Node0x1a6aab0 -> Node0x1a6ab20;
	Node0x1a6ab20 -> Node0x1a6ab90;
	Node0x1a6ab90 -> Node0x1a6ac00;
	Node0x1a6ac00 -> Node0x1a6ac70;
	Node0x1a6ac70 -> Node0x1a6ace0;
	Node0x1a6ace0 -> Node0x1a6ad50;
	Node0x1a6ad50 -> Node0x1a6adc0;
	Node0x1a6adc0 -> Node0x1a6ae30;
	Node0x1a6ae30 -> Node0x1a6aea0;
	Node0x1a6aea0 -> Node0x1a6af10;
	Node0x1a6af10 -> Node0x1a6af80;
	Node0x1a6af80 -> Node0x1a6aff0;
	Node0x1a6aff0 -> Node0x1a6b060;
	Node0x1a6b060 -> Node0x1a6b0d0;
	Node0x1a6b0d0 -> Node0x1a6b140;
	Node0x1a6b140 -> Node0x1a6b1b0;
	Node0x1a6b1b0 -> Node0x1a6b220;
	Node0x1a6b220 -> Node0x1a6b290;
	Node0x1a6b290 -> Node0x1a6b300;
	Node0x1a6b300 -> Node0x1a6b370;
	Node0x1a6b370 -> Node0x1a6b3e0;
	Node0x1a6b3e0 -> Node0x1a6b450;
	Node0x1a6b450 -> Node0x1a6b4c0;
	Node0x1a6b4c0 -> Node0x1a6b530;
	Node0x1a6b530 -> Node0x1a078b8;
	Node0x1a078b8 -> Node0x1a6b5c0;
	Node0x1a6b5c0 -> Node0x1a6b868;
	Node0x1a6b868 -> Node0x1a6b9c8;
	Node0x1a6b9c8 -> Node0x1a6bad8;
	Node0x1a6bad8 -> Node0x1a6bbe8;
	Node0x1a6bbe8 -> Node0x1a6bca8;
edge [color=red]
	Node0x1a67e98 -> Node0x1a680b8;
	Node0x1a680b8 -> Node0x1a684e8;
	Node0x1a67f18 -> Node0x1a685c8;
	Node0x1a685c8 -> Node0x1a686c8;
	Node0x1a67fa8 -> Node0x1a68788;
	Node0x1a68788 -> Node0x1a68838;
	Node0x1a68008 -> Node0x1a688f8;
	Node0x1a688f8 -> Node0x1a689a8;
	Node0x1a67e98 -> Node0x1a62c00;
	Node0x1a67f18 -> Node0x1a62c00;
	Node0x1a67fa8 -> Node0x1a62c00;
	Node0x1a68008 -> Node0x1a62c00;
	Node0x1a67e98 -> Node0x1a68ba8;
	Node0x1a67f18 -> Node0x1a69b18;
	Node0x1a67fa8 -> Node0x1a6a188;
	Node0x1a68008 -> Node0x1a6a1e8;
	Node0x1a6a188 -> Node0x1a6a260;
	Node0x1a69b18 -> Node0x1a6a2d0;
	Node0x1a6a260 -> Node0x1a6a2d0;
	Node0x1a68ba8 -> Node0x1a6a340;
	Node0x1a6a2d0 -> Node0x1a6a3b0;
	Node0x1a6a340 -> Node0x1a6a3b0;
	Node0x1a6a188 -> Node0x1a6a420;
	Node0x1a69b18 -> Node0x1a6a420;
	Node0x1a6a260 -> Node0x1a6a490;
	Node0x1a6a188 -> Node0x1a6a500;
	Node0x1a69b18 -> Node0x1a6a500;
	Node0x1a6a500 -> Node0x1a6a570;
	Node0x1a6a2d0 -> Node0x1a6a5e0;
	Node0x1a6a5e0 -> Node0x1a6a650;
	Node0x1a6a1e8 -> Node0x1a6a6c0;
	Node0x1a6a6c0 -> Node0x1a6a730;
	Node0x1a6a1e8 -> Node0x1a6a7a0;
	Node0x1a68ba8 -> Node0x1a6a7a0;
	Node0x1a68ba8 -> Node0x1a6a810;
	Node0x1a6a1e8 -> Node0x1a6a880;
	Node0x1a6a810 -> Node0x1a6a880;
	Node0x1a6a1e8 -> Node0x1a6a8f0;
	Node0x1a68ba8 -> Node0x1a6a8f0;
	Node0x1a6a1e8 -> Node0x1a6a960;
	Node0x1a68ba8 -> Node0x1a6a960;
	Node0x1a6a960 -> Node0x1a6a9d0;
	Node0x1a6a1e8 -> Node0x1a6aa40;
	Node0x1a6a810 -> Node0x1a6aa40;
	Node0x1a6a960 -> Node0x1a6aab0;
	Node0x1a6aab0 -> Node0x1a6ab20;
	Node0x1a6aa40 -> Node0x1a6ab90;
	Node0x1a6a1e8 -> Node0x1a6ac00;
	Node0x1a6ab90 -> Node0x1a6ac00;
	Node0x1a6ac00 -> Node0x1a6ac70;
	Node0x1a69b18 -> Node0x1a6ace0;
	Node0x1a6a570 -> Node0x1a6ace0;
	Node0x1a6ace0 -> Node0x1a6ad50;
	Node0x1a6a7a0 -> Node0x1a6adc0;
	Node0x1a6aa40 -> Node0x1a6adc0;
	Node0x1a6adc0 -> Node0x1a6ae30;
	Node0x1a69b18 -> Node0x1a6aea0;
	Node0x1a6aea0 -> Node0x1a6af10;
	Node0x1a6a188 -> Node0x1a6af10;
	Node0x1a6af10 -> Node0x1a6af80;
	Node0x1a6a420 -> Node0x1a6af80;
	Node0x1a6af80 -> Node0x1a6aff0;
	Node0x1a6a490 -> Node0x1a6aff0;
	Node0x1a6aff0 -> Node0x1a6b060;
	Node0x1a6a500 -> Node0x1a6b060;
	Node0x1a6b060 -> Node0x1a6b0d0;
	Node0x1a6a1e8 -> Node0x1a6b0d0;
	Node0x1a6b0d0 -> Node0x1a6b140;
	Node0x1a6a880 -> Node0x1a6b140;
	Node0x1a6b140 -> Node0x1a6b1b0;
	Node0x1a6a8f0 -> Node0x1a6b1b0;
	Node0x1a6b1b0 -> Node0x1a6b220;
	Node0x1a6a650 -> Node0x1a6b220;
	Node0x1a6b220 -> Node0x1a6b290;
	Node0x1a6a730 -> Node0x1a6b290;
	Node0x1a6b290 -> Node0x1a6b300;
	Node0x1a6a9d0 -> Node0x1a6b300;
	Node0x1a6b300 -> Node0x1a6b370;
	Node0x1a6ad50 -> Node0x1a6b370;
	Node0x1a6b370 -> Node0x1a6b3e0;
	Node0x1a6ab20 -> Node0x1a6b3e0;
	Node0x1a6b3e0 -> Node0x1a6b450;
	Node0x1a6ae30 -> Node0x1a6b450;
	Node0x1a6b450 -> Node0x1a6b4c0;
	Node0x1a6ac70 -> Node0x1a6b4c0;
	Node0x1a6a3b0 -> Node0x1a6b530;
	Node0x1a6b4c0 -> Node0x1a6b530;
	Node0x1a6b530 -> Node0x1a078b8;
	Node0x1a078b8 -> Node0x1a6b5c0;
	Node0x1a688f8 -> Node0x1a6b868;
	Node0x1a68788 -> Node0x1a6b9c8;
	Node0x1a685c8 -> Node0x1a6bad8;
	Node0x1a680b8 -> Node0x1a6bbe8;
}
