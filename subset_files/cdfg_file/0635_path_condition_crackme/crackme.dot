digraph "DFG for'crackme' function" {
	Node0x1a661e0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1a66250[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x1a662f0[shape=record, label="  %7 = shl i32 %0, 1"];
	Node0x1a66360[shape=record, label="  %8 = sub i32 %6, %7"];
	Node0x1a663d0[shape=record, label="  %9 = and i32 %2, %1"];
	Node0x1a66440[shape=record, label="  %10 = shl i32 %5, 1"];
	Node0x1a664b0[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x1a66520[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1a66590[shape=record, label="  %13 = shl i32 %6, 1"];
	Node0x1a66630[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x1a666a0[shape=record, label="  %15 = shl i32 %3, 1"];
	Node0x1a66710[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x1a66780[shape=record, label="  %17 = xor i32 %3, %0"];
	Node0x1a667f0[shape=record, label="  %18 = xor i32 %0, -1"];
	Node0x1a66860[shape=record, label="  %19 = and i32 %18, %3"];
	Node0x1a668d0[shape=record, label="  %20 = and i32 %3, %0"];
	Node0x1a66940[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x1a669e0[shape=record, label="  %22 = mul i32 %21, 5"];
	Node0x1a66a50[shape=record, label="  %23 = or i32 %18, %3"];
	Node0x1a66ac0[shape=record, label="  %24 = shl i32 %21, 1"];
	Node0x1a66b30[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x1a66ba0[shape=record, label="  %26 = xor i32 %23, -1"];
	Node0x1a66c10[shape=record, label="  %27 = add i32 %26, %3"];
	Node0x1a66cb0[shape=record, label="  %28 = mul i32 %27, -9"];
	Node0x1a66d20[shape=record, label="  %29 = add i32 %12, %1"];
	Node0x1a66dc0[shape=record, label="  %30 = mul i32 %29, 3"];
	Node0x1a66e30[shape=record, label="  %31 = add i32 %17, %23"];
	Node0x1a66ea0[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x1a67150[shape=record, label="  %33 = add i32 %1, 2"];
	Node0x1a671c0[shape=record, label="  %34 = sub i32 %33, %2"];
	Node0x1a67230[shape=record, label="  %35 = sub i32 %34, %9"];
	Node0x1a672a0[shape=record, label="  %36 = sub i32 %35, %10"];
	Node0x1a67310[shape=record, label="  %37 = sub i32 %36, %11"];
	Node0x1a67380[shape=record, label="  %38 = add i32 %37, %3"];
	Node0x1a673f0[shape=record, label="  %39 = add i32 %38, %19"];
	Node0x1a67460[shape=record, label="  %40 = add i32 %39, %20"];
	Node0x1a674d0[shape=record, label="  %41 = add i32 %40, %14"];
	Node0x1a67540[shape=record, label="  %42 = add i32 %41, %16"];
	Node0x1a675b0[shape=record, label="  %43 = add i32 %42, %22"];
	Node0x1a67620[shape=record, label="  %44 = sub i32 %43, %25"];
	Node0x1a67690[shape=record, label="  %45 = add i32 %44, %30"];
	Node0x1a67700[shape=record, label="  %46 = add i32 %45, %32"];
	Node0x1a67770[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x1a677e0[shape=record, label="  %48 = icmp eq i32 %8, %47"];
	Node0x1a06268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a67c80[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x1a67cd0[shape=record, label="  ret void"];
	Node0x1a661e0 -> Node0x1a66250;
	Node0x1a66250 -> Node0x1a662f0;
	Node0x1a662f0 -> Node0x1a66360;
	Node0x1a66360 -> Node0x1a663d0;
	Node0x1a663d0 -> Node0x1a66440;
	Node0x1a66440 -> Node0x1a664b0;
	Node0x1a664b0 -> Node0x1a66520;
	Node0x1a66520 -> Node0x1a66590;
	Node0x1a66590 -> Node0x1a66630;
	Node0x1a66630 -> Node0x1a666a0;
	Node0x1a666a0 -> Node0x1a66710;
	Node0x1a66710 -> Node0x1a66780;
	Node0x1a66780 -> Node0x1a667f0;
	Node0x1a667f0 -> Node0x1a66860;
	Node0x1a66860 -> Node0x1a668d0;
	Node0x1a668d0 -> Node0x1a66940;
	Node0x1a66940 -> Node0x1a669e0;
	Node0x1a669e0 -> Node0x1a66a50;
	Node0x1a66a50 -> Node0x1a66ac0;
	Node0x1a66ac0 -> Node0x1a66b30;
	Node0x1a66b30 -> Node0x1a66ba0;
	Node0x1a66ba0 -> Node0x1a66c10;
	Node0x1a66c10 -> Node0x1a66cb0;
	Node0x1a66cb0 -> Node0x1a66d20;
	Node0x1a66d20 -> Node0x1a66dc0;
	Node0x1a66dc0 -> Node0x1a66e30;
	Node0x1a66e30 -> Node0x1a66ea0;
	Node0x1a66ea0 -> Node0x1a67150;
	Node0x1a67150 -> Node0x1a671c0;
	Node0x1a671c0 -> Node0x1a67230;
	Node0x1a67230 -> Node0x1a672a0;
	Node0x1a672a0 -> Node0x1a67310;
	Node0x1a67310 -> Node0x1a67380;
	Node0x1a67380 -> Node0x1a673f0;
	Node0x1a673f0 -> Node0x1a67460;
	Node0x1a67460 -> Node0x1a674d0;
	Node0x1a674d0 -> Node0x1a67540;
	Node0x1a67540 -> Node0x1a675b0;
	Node0x1a675b0 -> Node0x1a67620;
	Node0x1a67620 -> Node0x1a67690;
	Node0x1a67690 -> Node0x1a67700;
	Node0x1a67700 -> Node0x1a67770;
	Node0x1a67770 -> Node0x1a677e0;
	Node0x1a677e0 -> Node0x1a06268;
	Node0x1a06268 -> Node0x1a67c80;
	Node0x1a67c80 -> Node0x1a67cd0;
edge [color=red]
	Node0x1a661e0 -> Node0x1a66250;
	Node0x1a66250 -> Node0x1a66360;
	Node0x1a662f0 -> Node0x1a66360;
	Node0x1a661e0 -> Node0x1a66440;
	Node0x1a664b0 -> Node0x1a66520;
	Node0x1a66250 -> Node0x1a66590;
	Node0x1a66590 -> Node0x1a66630;
	Node0x1a666a0 -> Node0x1a66710;
	Node0x1a667f0 -> Node0x1a66860;
	Node0x1a66940 -> Node0x1a669e0;
	Node0x1a667f0 -> Node0x1a66a50;
	Node0x1a66940 -> Node0x1a66ac0;
	Node0x1a66ac0 -> Node0x1a66b30;
	Node0x1a66a50 -> Node0x1a66ba0;
	Node0x1a66ba0 -> Node0x1a66c10;
	Node0x1a66c10 -> Node0x1a66cb0;
	Node0x1a66520 -> Node0x1a66d20;
	Node0x1a66d20 -> Node0x1a66dc0;
	Node0x1a66780 -> Node0x1a66e30;
	Node0x1a66a50 -> Node0x1a66e30;
	Node0x1a66e30 -> Node0x1a66ea0;
	Node0x1a67150 -> Node0x1a671c0;
	Node0x1a671c0 -> Node0x1a67230;
	Node0x1a663d0 -> Node0x1a67230;
	Node0x1a67230 -> Node0x1a672a0;
	Node0x1a66440 -> Node0x1a672a0;
	Node0x1a672a0 -> Node0x1a67310;
	Node0x1a664b0 -> Node0x1a67310;
	Node0x1a67310 -> Node0x1a67380;
	Node0x1a67380 -> Node0x1a673f0;
	Node0x1a66860 -> Node0x1a673f0;
	Node0x1a673f0 -> Node0x1a67460;
	Node0x1a668d0 -> Node0x1a67460;
	Node0x1a67460 -> Node0x1a674d0;
	Node0x1a66630 -> Node0x1a674d0;
	Node0x1a674d0 -> Node0x1a67540;
	Node0x1a66710 -> Node0x1a67540;
	Node0x1a67540 -> Node0x1a675b0;
	Node0x1a669e0 -> Node0x1a675b0;
	Node0x1a675b0 -> Node0x1a67620;
	Node0x1a66b30 -> Node0x1a67620;
	Node0x1a67620 -> Node0x1a67690;
	Node0x1a66dc0 -> Node0x1a67690;
	Node0x1a67690 -> Node0x1a67700;
	Node0x1a66ea0 -> Node0x1a67700;
	Node0x1a67700 -> Node0x1a67770;
	Node0x1a66cb0 -> Node0x1a67770;
	Node0x1a66360 -> Node0x1a677e0;
	Node0x1a67770 -> Node0x1a677e0;
	Node0x1a677e0 -> Node0x1a06268;
	Node0x1a06268 -> Node0x1a67c80;
}
