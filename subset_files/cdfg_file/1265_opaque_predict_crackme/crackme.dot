digraph "DFG for'crackme' function" {
	Node0x550740[shape=record, label="  %5 = xor i32 %3, %0"];
	Node0x5507b0[shape=record, label="  %6 = add i32 %5, %1"];
	Node0x550820[shape=record, label="  %7 = xor i32 %2, %1"];
	Node0x550ea0[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x550f40[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x550fb0[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x551020[shape=record, label="  %11 = and i32 %10, %1"];
	Node0x551090[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x551100[shape=record, label="  %13 = or i32 %10, %1"];
	Node0x551170[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x5511e0[shape=record, label="  %15 = or i32 %2, %1"];
	Node0x551250[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x5512f0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x551360[shape=record, label="  %18 = shl i32 %13, 1"];
	Node0x5513d0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x551470[shape=record, label="  %20 = mul i32 %14, -3"];
	Node0x5514e0[shape=record, label="  %21 = and i32 %3, %0"];
	Node0x551550[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x5515c0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x551630[shape=record, label="  %24 = xor i32 %0, -1"];
	Node0x5516a0[shape=record, label="  %25 = and i32 %24, %3"];
	Node0x551710[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x551780[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x5517f0[shape=record, label="  %28 = shl i32 %24, 1"];
	Node0x551890[shape=record, label="  %29 = xor i32 %3, 1073741823"];
	Node0x551900[shape=record, label="  %30 = and i32 %29, %0"];
	Node0x5519a0[shape=record, label="  %31 = shl i32 %30, 2"];
	Node0x551a10[shape=record, label="  %32 = add i32 %11, %0"];
	Node0x551c90[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x551d30[shape=record, label="  %34 = add i32 %1, 3"];
	Node0x551da0[shape=record, label="  %35 = sub i32 %34, %28"];
	Node0x551e10[shape=record, label="  %36 = add i32 %35, %12"];
	Node0x551e80[shape=record, label="  %37 = add i32 %36, %13"];
	Node0x551ef0[shape=record, label="  %38 = add i32 %37, %14"];
	Node0x551f60[shape=record, label="  %39 = sub i32 %38, %7"];
	Node0x551fd0[shape=record, label="  %40 = add i32 %39, %9"];
	Node0x552040[shape=record, label="  %41 = add i32 %40, %20"];
	Node0x5520b0[shape=record, label="  %42 = add i32 %41, %5"];
	Node0x552120[shape=record, label="  %43 = sub i32 %42, %17"];
	Node0x552190[shape=record, label="  %44 = add i32 %43, %19"];
	Node0x552200[shape=record, label="  %45 = add i32 %44, %26"];
	Node0x552270[shape=record, label="  %46 = sub i32 %45, %22"];
	Node0x5522e0[shape=record, label="  %47 = add i32 %46, %33"];
	Node0x552350[shape=record, label="  %48 = add i32 %47, %23"];
	Node0x5523c0[shape=record, label="  %49 = add i32 %48, %27"];
	Node0x552430[shape=record, label="  %50 = sub i32 %49, %31"];
	Node0x5524a0[shape=record, label="  %51 = icmp eq i32 %6, %50"];
	Node0x4f1268[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x552940[shape=record, label="  %53 = tail call i32 @puts(i8* nonnull dereferenceable(1) %52)"];
	Node0x552990[shape=record, label="  ret void"];
	Node0x550740 -> Node0x5507b0;
	Node0x5507b0 -> Node0x550820;
	Node0x550820 -> Node0x550ea0;
	Node0x550ea0 -> Node0x550f40;
	Node0x550f40 -> Node0x550fb0;
	Node0x550fb0 -> Node0x551020;
	Node0x551020 -> Node0x551090;
	Node0x551090 -> Node0x551100;
	Node0x551100 -> Node0x551170;
	Node0x551170 -> Node0x5511e0;
	Node0x5511e0 -> Node0x551250;
	Node0x551250 -> Node0x5512f0;
	Node0x5512f0 -> Node0x551360;
	Node0x551360 -> Node0x5513d0;
	Node0x5513d0 -> Node0x551470;
	Node0x551470 -> Node0x5514e0;
	Node0x5514e0 -> Node0x551550;
	Node0x551550 -> Node0x5515c0;
	Node0x5515c0 -> Node0x551630;
	Node0x551630 -> Node0x5516a0;
	Node0x5516a0 -> Node0x551710;
	Node0x551710 -> Node0x551780;
	Node0x551780 -> Node0x5517f0;
	Node0x5517f0 -> Node0x551890;
	Node0x551890 -> Node0x551900;
	Node0x551900 -> Node0x5519a0;
	Node0x5519a0 -> Node0x551a10;
	Node0x551a10 -> Node0x551c90;
	Node0x551c90 -> Node0x551d30;
	Node0x551d30 -> Node0x551da0;
	Node0x551da0 -> Node0x551e10;
	Node0x551e10 -> Node0x551e80;
	Node0x551e80 -> Node0x551ef0;
	Node0x551ef0 -> Node0x551f60;
	Node0x551f60 -> Node0x551fd0;
	Node0x551fd0 -> Node0x552040;
	Node0x552040 -> Node0x5520b0;
	Node0x5520b0 -> Node0x552120;
	Node0x552120 -> Node0x552190;
	Node0x552190 -> Node0x552200;
	Node0x552200 -> Node0x552270;
	Node0x552270 -> Node0x5522e0;
	Node0x5522e0 -> Node0x552350;
	Node0x552350 -> Node0x5523c0;
	Node0x5523c0 -> Node0x552430;
	Node0x552430 -> Node0x5524a0;
	Node0x5524a0 -> Node0x4f1268;
	Node0x4f1268 -> Node0x552940;
	Node0x552940 -> Node0x552990;
edge [color=red]
	Node0x550740 -> Node0x5507b0;
	Node0x550820 -> Node0x550ea0;
	Node0x550ea0 -> Node0x550f40;
	Node0x550fb0 -> Node0x551020;
	Node0x551020 -> Node0x551090;
	Node0x550fb0 -> Node0x551100;
	Node0x5511e0 -> Node0x551250;
	Node0x551250 -> Node0x5512f0;
	Node0x551100 -> Node0x551360;
	Node0x551360 -> Node0x5513d0;
	Node0x551170 -> Node0x551470;
	Node0x5514e0 -> Node0x551550;
	Node0x551550 -> Node0x5515c0;
	Node0x551630 -> Node0x5516a0;
	Node0x5516a0 -> Node0x551710;
	Node0x551710 -> Node0x551780;
	Node0x551630 -> Node0x5517f0;
	Node0x551890 -> Node0x551900;
	Node0x551900 -> Node0x5519a0;
	Node0x551020 -> Node0x551a10;
	Node0x551a10 -> Node0x551c90;
	Node0x551d30 -> Node0x551da0;
	Node0x5517f0 -> Node0x551da0;
	Node0x551da0 -> Node0x551e10;
	Node0x551090 -> Node0x551e10;
	Node0x551e10 -> Node0x551e80;
	Node0x551100 -> Node0x551e80;
	Node0x551e80 -> Node0x551ef0;
	Node0x551170 -> Node0x551ef0;
	Node0x551ef0 -> Node0x551f60;
	Node0x550820 -> Node0x551f60;
	Node0x551f60 -> Node0x551fd0;
	Node0x550f40 -> Node0x551fd0;
	Node0x551fd0 -> Node0x552040;
	Node0x551470 -> Node0x552040;
	Node0x552040 -> Node0x5520b0;
	Node0x550740 -> Node0x5520b0;
	Node0x5520b0 -> Node0x552120;
	Node0x5512f0 -> Node0x552120;
	Node0x552120 -> Node0x552190;
	Node0x5513d0 -> Node0x552190;
	Node0x552190 -> Node0x552200;
	Node0x551710 -> Node0x552200;
	Node0x552200 -> Node0x552270;
	Node0x551550 -> Node0x552270;
	Node0x552270 -> Node0x5522e0;
	Node0x551c90 -> Node0x5522e0;
	Node0x5522e0 -> Node0x552350;
	Node0x5515c0 -> Node0x552350;
	Node0x552350 -> Node0x5523c0;
	Node0x551780 -> Node0x5523c0;
	Node0x5523c0 -> Node0x552430;
	Node0x5519a0 -> Node0x552430;
	Node0x5507b0 -> Node0x5524a0;
	Node0x552430 -> Node0x5524a0;
	Node0x5524a0 -> Node0x4f1268;
	Node0x4f1268 -> Node0x552940;
}
