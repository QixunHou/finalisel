digraph "DFG for'main' function" {
	Node0x552b58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x552bd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x552c68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x552cc8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x552d78[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x5531a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x553288[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x553388[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x553448[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x5534f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x5535b8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x553668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x54d770[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x553868[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5547d8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x554e48[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x554ea8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x554fb8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x555218[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x555378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x555488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x555598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x555658[shape=record, label="  ret i32 0"];
	Node0x552b58 -> Node0x552bd8;
	Node0x552bd8 -> Node0x552c68;
	Node0x552c68 -> Node0x552cc8;
	Node0x552cc8 -> Node0x552d78;
	Node0x552d78 -> Node0x5531a8;
	Node0x5531a8 -> Node0x553288;
	Node0x553288 -> Node0x553388;
	Node0x553388 -> Node0x553448;
	Node0x553448 -> Node0x5534f8;
	Node0x5534f8 -> Node0x5535b8;
	Node0x5535b8 -> Node0x553668;
	Node0x553668 -> Node0x54d770;
	Node0x54d770 -> Node0x553868;
	Node0x553868 -> Node0x5547d8;
	Node0x5547d8 -> Node0x554e48;
	Node0x554e48 -> Node0x554ea8;
	Node0x554ea8 -> Node0x554fb8;
	Node0x554fb8 -> Node0x555218;
	Node0x555218 -> Node0x555378;
	Node0x555378 -> Node0x555488;
	Node0x555488 -> Node0x555598;
	Node0x555598 -> Node0x555658;
edge [color=red]
	Node0x552b58 -> Node0x552d78;
	Node0x552d78 -> Node0x5531a8;
	Node0x552bd8 -> Node0x553288;
	Node0x553288 -> Node0x553388;
	Node0x552c68 -> Node0x553448;
	Node0x553448 -> Node0x5534f8;
	Node0x552cc8 -> Node0x5535b8;
	Node0x5535b8 -> Node0x553668;
	Node0x552b58 -> Node0x54d770;
	Node0x552bd8 -> Node0x54d770;
	Node0x552c68 -> Node0x54d770;
	Node0x552cc8 -> Node0x54d770;
	Node0x552b58 -> Node0x553868;
	Node0x552bd8 -> Node0x5547d8;
	Node0x552c68 -> Node0x554e48;
	Node0x552cc8 -> Node0x554ea8;
	Node0x553868 -> Node0x554fb8;
	Node0x5547d8 -> Node0x554fb8;
	Node0x554e48 -> Node0x554fb8;
	Node0x554ea8 -> Node0x554fb8;
	Node0x5535b8 -> Node0x555218;
	Node0x553448 -> Node0x555378;
	Node0x553288 -> Node0x555488;
	Node0x552d78 -> Node0x555598;
}
