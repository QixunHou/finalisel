digraph "DFG for'main' function" {
	Node0x1d13e28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1d13ea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1d13f38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1d14398[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1d14478[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1d14598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d147d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1d14888[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1d157f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1d15e80[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1d15ef0[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1d15f60[shape=record, label="  %10 = and i32 %7, %6"];
	Node0x1d15fd0[shape=record, label="  %11 = and i32 %6, %8"];
	Node0x1d16040[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1d160b0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x1d16120[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1d16190[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x1d16200[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0x1d16270[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x1d162e0[shape=record, label="  %18 = shl i32 %9, 3"];
	Node0x1d16350[shape=record, label="  %19 = xor i32 %18, -8"];
	Node0x1d163c0[shape=record, label="  %20 = mul i32 %11, -3"];
	Node0x1d16430[shape=record, label="  %21 = shl i32 %10, 2"];
	Node0x1d164a0[shape=record, label="  %22 = sub i32 -4, %6"];
	Node0x1d16510[shape=record, label="  %23 = add i32 %22, %7"];
	Node0x1d16580[shape=record, label="  %24 = sub i32 %23, %9"];
	Node0x1d165f0[shape=record, label="  %25 = add i32 %24, %10"];
	Node0x1d16660[shape=record, label="  %26 = add i32 %25, %12"];
	Node0x1d166d0[shape=record, label="  %27 = add i32 %26, %14"];
	Node0x1d16740[shape=record, label="  %28 = add i32 %27, %20"];
	Node0x1d167b0[shape=record, label="  %29 = sub i32 %28, %21"];
	Node0x1d16820[shape=record, label="  %30 = sub i32 %29, %17"];
	Node0x1d16890[shape=record, label="  %31 = sub i32 %30, %19"];
	Node0x1d16900[shape=record, label="  %32 = icmp eq i32 %31, %6"];
	Node0x1cb49d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1d16ba0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x1d16df8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1d16f58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1d17018[shape=record, label="  ret i32 0"];
	Node0x1d13e28 -> Node0x1d13ea8;
	Node0x1d13ea8 -> Node0x1d13f38;
	Node0x1d13f38 -> Node0x1d14398;
	Node0x1d14398 -> Node0x1d14478;
	Node0x1d14478 -> Node0x1d14598;
	Node0x1d14598 -> Node0x1d147d0;
	Node0x1d147d0 -> Node0x1d14888;
	Node0x1d14888 -> Node0x1d157f8;
	Node0x1d157f8 -> Node0x1d15e80;
	Node0x1d15e80 -> Node0x1d15ef0;
	Node0x1d15ef0 -> Node0x1d15f60;
	Node0x1d15f60 -> Node0x1d15fd0;
	Node0x1d15fd0 -> Node0x1d16040;
	Node0x1d16040 -> Node0x1d160b0;
	Node0x1d160b0 -> Node0x1d16120;
	Node0x1d16120 -> Node0x1d16190;
	Node0x1d16190 -> Node0x1d16200;
	Node0x1d16200 -> Node0x1d16270;
	Node0x1d16270 -> Node0x1d162e0;
	Node0x1d162e0 -> Node0x1d16350;
	Node0x1d16350 -> Node0x1d163c0;
	Node0x1d163c0 -> Node0x1d16430;
	Node0x1d16430 -> Node0x1d164a0;
	Node0x1d164a0 -> Node0x1d16510;
	Node0x1d16510 -> Node0x1d16580;
	Node0x1d16580 -> Node0x1d165f0;
	Node0x1d165f0 -> Node0x1d16660;
	Node0x1d16660 -> Node0x1d166d0;
	Node0x1d166d0 -> Node0x1d16740;
	Node0x1d16740 -> Node0x1d167b0;
	Node0x1d167b0 -> Node0x1d16820;
	Node0x1d16820 -> Node0x1d16890;
	Node0x1d16890 -> Node0x1d16900;
	Node0x1d16900 -> Node0x1cb49d8;
	Node0x1cb49d8 -> Node0x1d16ba0;
	Node0x1d16ba0 -> Node0x1d16df8;
	Node0x1d16df8 -> Node0x1d16f58;
	Node0x1d16f58 -> Node0x1d17018;
edge [color=red]
	Node0x1d13e28 -> Node0x1d13f38;
	Node0x1d13f38 -> Node0x1d14398;
	Node0x1d13ea8 -> Node0x1d14478;
	Node0x1d14478 -> Node0x1d14598;
	Node0x1d13e28 -> Node0x1d147d0;
	Node0x1d13ea8 -> Node0x1d147d0;
	Node0x1d13e28 -> Node0x1d14888;
	Node0x1d13ea8 -> Node0x1d157f8;
	Node0x1d157f8 -> Node0x1d15e80;
	Node0x1d14888 -> Node0x1d15ef0;
	Node0x1d15e80 -> Node0x1d15ef0;
	Node0x1d157f8 -> Node0x1d15f60;
	Node0x1d14888 -> Node0x1d15f60;
	Node0x1d14888 -> Node0x1d15fd0;
	Node0x1d15e80 -> Node0x1d15fd0;
	Node0x1d15fd0 -> Node0x1d16040;
	Node0x1d157f8 -> Node0x1d160b0;
	Node0x1d14888 -> Node0x1d160b0;
	Node0x1d160b0 -> Node0x1d16120;
	Node0x1d157f8 -> Node0x1d16190;
	Node0x1d14888 -> Node0x1d16190;
	Node0x1d16190 -> Node0x1d16200;
	Node0x1d16200 -> Node0x1d16270;
	Node0x1d15ef0 -> Node0x1d162e0;
	Node0x1d162e0 -> Node0x1d16350;
	Node0x1d15fd0 -> Node0x1d163c0;
	Node0x1d15f60 -> Node0x1d16430;
	Node0x1d14888 -> Node0x1d164a0;
	Node0x1d164a0 -> Node0x1d16510;
	Node0x1d157f8 -> Node0x1d16510;
	Node0x1d16510 -> Node0x1d16580;
	Node0x1d15ef0 -> Node0x1d16580;
	Node0x1d16580 -> Node0x1d165f0;
	Node0x1d15f60 -> Node0x1d165f0;
	Node0x1d165f0 -> Node0x1d16660;
	Node0x1d16040 -> Node0x1d16660;
	Node0x1d16660 -> Node0x1d166d0;
	Node0x1d16120 -> Node0x1d166d0;
	Node0x1d166d0 -> Node0x1d16740;
	Node0x1d163c0 -> Node0x1d16740;
	Node0x1d16740 -> Node0x1d167b0;
	Node0x1d16430 -> Node0x1d167b0;
	Node0x1d167b0 -> Node0x1d16820;
	Node0x1d16270 -> Node0x1d16820;
	Node0x1d16820 -> Node0x1d16890;
	Node0x1d16350 -> Node0x1d16890;
	Node0x1d16890 -> Node0x1d16900;
	Node0x1d14888 -> Node0x1d16900;
	Node0x1d16900 -> Node0x1cb49d8;
	Node0x1cb49d8 -> Node0x1d16ba0;
	Node0x1d14478 -> Node0x1d16df8;
	Node0x1d13f38 -> Node0x1d16f58;
}
