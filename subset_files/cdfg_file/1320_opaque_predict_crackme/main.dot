digraph "DFG for'main' function" {
	Node0xe6fcc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe6fd48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe6fdd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xe6fe38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xe6fee8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xe70318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe703f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xe704f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe705b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xe70668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xe70728[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xe707d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xe6aba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xe709d8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe71948[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe71fb8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xe72018[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xe72090[shape=record, label="  %14 = xor i32 %13, %10"];
	Node0xe72100[shape=record, label="  %15 = sub i32 1, %11"];
	Node0xe72170[shape=record, label="  %16 = add i32 %15, %14"];
	Node0xe721e0[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0xe72250[shape=record, label="  %18 = mul i32 %17, -2"];
	Node0xe722c0[shape=record, label="  %19 = or i32 %12, %11"];
	Node0xe72330[shape=record, label="  %20 = and i32 %12, %11"];
	Node0xe723a0[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0xe72410[shape=record, label="  %22 = or i32 %11, %17"];
	Node0xe72480[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0xe724f0[shape=record, label="  %24 = shl i32 %22, 1"];
	Node0xe72560[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0xe725d0[shape=record, label="  %26 = and i32 %11, %17"];
	Node0xe72640[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0xe726b0[shape=record, label="  %28 = and i32 %13, %10"];
	Node0xe72720[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0xe72790[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0xe72800[shape=record, label="  %31 = or i32 %13, %30"];
	Node0xe72870[shape=record, label="  %32 = or i32 %13, %10"];
	Node0xe728e0[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0xe72950[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0xe729c0[shape=record, label="  %35 = and i32 %13, %30"];
	Node0xe72a30[shape=record, label="  %36 = mul i32 %35, -3"];
	Node0xe72aa0[shape=record, label="  %37 = sub i32 1, %10"];
	Node0xe72b10[shape=record, label="  %38 = sub i32 %37, %11"];
	Node0xe72b80[shape=record, label="  %39 = sub i32 %38, %12"];
	Node0xe72bf0[shape=record, label="  %40 = add i32 %39, %19"];
	Node0xe72c60[shape=record, label="  %41 = add i32 %40, %18"];
	Node0xe72cd0[shape=record, label="  %42 = add i32 %41, %21"];
	Node0xe72d40[shape=record, label="  %43 = add i32 %42, %22"];
	Node0xe72db0[shape=record, label="  %44 = add i32 %43, %23"];
	Node0xe72e20[shape=record, label="  %45 = sub i32 %44, %20"];
	Node0xe72e90[shape=record, label="  %46 = add i32 %45, %13"];
	Node0xe72f00[shape=record, label="  %47 = sub i32 %46, %27"];
	Node0xe72f70[shape=record, label="  %48 = add i32 %47, %29"];
	Node0xe72fe0[shape=record, label="  %49 = add i32 %48, %31"];
	Node0xe73050[shape=record, label="  %50 = add i32 %49, %14"];
	Node0xe730c0[shape=record, label="  %51 = sub i32 %50, %28"];
	Node0xe73130[shape=record, label="  %52 = sub i32 %51, %25"];
	Node0xe731a0[shape=record, label="  %53 = add i32 %52, %36"];
	Node0xe73210[shape=record, label="  %54 = sub i32 %53, %34"];
	Node0xe73280[shape=record, label="  %55 = icmp eq i32 %16, %54"];
	Node0xe0f8b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe73310[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0xe735b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xe73718[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xe73828[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe73938[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe739f8[shape=record, label="  ret i32 0"];
	Node0xe6fcc8 -> Node0xe6fd48;
	Node0xe6fd48 -> Node0xe6fdd8;
	Node0xe6fdd8 -> Node0xe6fe38;
	Node0xe6fe38 -> Node0xe6fee8;
	Node0xe6fee8 -> Node0xe70318;
	Node0xe70318 -> Node0xe703f8;
	Node0xe703f8 -> Node0xe704f8;
	Node0xe704f8 -> Node0xe705b8;
	Node0xe705b8 -> Node0xe70668;
	Node0xe70668 -> Node0xe70728;
	Node0xe70728 -> Node0xe707d8;
	Node0xe707d8 -> Node0xe6aba0;
	Node0xe6aba0 -> Node0xe709d8;
	Node0xe709d8 -> Node0xe71948;
	Node0xe71948 -> Node0xe71fb8;
	Node0xe71fb8 -> Node0xe72018;
	Node0xe72018 -> Node0xe72090;
	Node0xe72090 -> Node0xe72100;
	Node0xe72100 -> Node0xe72170;
	Node0xe72170 -> Node0xe721e0;
	Node0xe721e0 -> Node0xe72250;
	Node0xe72250 -> Node0xe722c0;
	Node0xe722c0 -> Node0xe72330;
	Node0xe72330 -> Node0xe723a0;
	Node0xe723a0 -> Node0xe72410;
	Node0xe72410 -> Node0xe72480;
	Node0xe72480 -> Node0xe724f0;
	Node0xe724f0 -> Node0xe72560;
	Node0xe72560 -> Node0xe725d0;
	Node0xe725d0 -> Node0xe72640;
	Node0xe72640 -> Node0xe726b0;
	Node0xe726b0 -> Node0xe72720;
	Node0xe72720 -> Node0xe72790;
	Node0xe72790 -> Node0xe72800;
	Node0xe72800 -> Node0xe72870;
	Node0xe72870 -> Node0xe728e0;
	Node0xe728e0 -> Node0xe72950;
	Node0xe72950 -> Node0xe729c0;
	Node0xe729c0 -> Node0xe72a30;
	Node0xe72a30 -> Node0xe72aa0;
	Node0xe72aa0 -> Node0xe72b10;
	Node0xe72b10 -> Node0xe72b80;
	Node0xe72b80 -> Node0xe72bf0;
	Node0xe72bf0 -> Node0xe72c60;
	Node0xe72c60 -> Node0xe72cd0;
	Node0xe72cd0 -> Node0xe72d40;
	Node0xe72d40 -> Node0xe72db0;
	Node0xe72db0 -> Node0xe72e20;
	Node0xe72e20 -> Node0xe72e90;
	Node0xe72e90 -> Node0xe72f00;
	Node0xe72f00 -> Node0xe72f70;
	Node0xe72f70 -> Node0xe72fe0;
	Node0xe72fe0 -> Node0xe73050;
	Node0xe73050 -> Node0xe730c0;
	Node0xe730c0 -> Node0xe73130;
	Node0xe73130 -> Node0xe731a0;
	Node0xe731a0 -> Node0xe73210;
	Node0xe73210 -> Node0xe73280;
	Node0xe73280 -> Node0xe0f8b8;
	Node0xe0f8b8 -> Node0xe73310;
	Node0xe73310 -> Node0xe735b8;
	Node0xe735b8 -> Node0xe73718;
	Node0xe73718 -> Node0xe73828;
	Node0xe73828 -> Node0xe73938;
	Node0xe73938 -> Node0xe739f8;
edge [color=red]
	Node0xe6fcc8 -> Node0xe6fee8;
	Node0xe6fee8 -> Node0xe70318;
	Node0xe6fd48 -> Node0xe703f8;
	Node0xe703f8 -> Node0xe704f8;
	Node0xe6fdd8 -> Node0xe705b8;
	Node0xe705b8 -> Node0xe70668;
	Node0xe6fe38 -> Node0xe70728;
	Node0xe70728 -> Node0xe707d8;
	Node0xe6fcc8 -> Node0xe6aba0;
	Node0xe6fd48 -> Node0xe6aba0;
	Node0xe6fdd8 -> Node0xe6aba0;
	Node0xe6fe38 -> Node0xe6aba0;
	Node0xe6fcc8 -> Node0xe709d8;
	Node0xe6fd48 -> Node0xe71948;
	Node0xe6fdd8 -> Node0xe71fb8;
	Node0xe6fe38 -> Node0xe72018;
	Node0xe72018 -> Node0xe72090;
	Node0xe709d8 -> Node0xe72090;
	Node0xe71948 -> Node0xe72100;
	Node0xe72100 -> Node0xe72170;
	Node0xe72090 -> Node0xe72170;
	Node0xe71fb8 -> Node0xe721e0;
	Node0xe721e0 -> Node0xe72250;
	Node0xe71fb8 -> Node0xe722c0;
	Node0xe71948 -> Node0xe722c0;
	Node0xe71fb8 -> Node0xe72330;
	Node0xe71948 -> Node0xe72330;
	Node0xe72330 -> Node0xe723a0;
	Node0xe71948 -> Node0xe72410;
	Node0xe721e0 -> Node0xe72410;
	Node0xe71fb8 -> Node0xe72480;
	Node0xe71948 -> Node0xe72480;
	Node0xe72410 -> Node0xe724f0;
	Node0xe724f0 -> Node0xe72560;
	Node0xe71948 -> Node0xe725d0;
	Node0xe721e0 -> Node0xe725d0;
	Node0xe725d0 -> Node0xe72640;
	Node0xe72018 -> Node0xe726b0;
	Node0xe709d8 -> Node0xe726b0;
	Node0xe726b0 -> Node0xe72720;
	Node0xe709d8 -> Node0xe72790;
	Node0xe72018 -> Node0xe72800;
	Node0xe72790 -> Node0xe72800;
	Node0xe72018 -> Node0xe72870;
	Node0xe709d8 -> Node0xe72870;
	Node0xe72870 -> Node0xe728e0;
	Node0xe728e0 -> Node0xe72950;
	Node0xe72018 -> Node0xe729c0;
	Node0xe72790 -> Node0xe729c0;
	Node0xe729c0 -> Node0xe72a30;
	Node0xe709d8 -> Node0xe72aa0;
	Node0xe72aa0 -> Node0xe72b10;
	Node0xe71948 -> Node0xe72b10;
	Node0xe72b10 -> Node0xe72b80;
	Node0xe71fb8 -> Node0xe72b80;
	Node0xe72b80 -> Node0xe72bf0;
	Node0xe722c0 -> Node0xe72bf0;
	Node0xe72bf0 -> Node0xe72c60;
	Node0xe72250 -> Node0xe72c60;
	Node0xe72c60 -> Node0xe72cd0;
	Node0xe723a0 -> Node0xe72cd0;
	Node0xe72cd0 -> Node0xe72d40;
	Node0xe72410 -> Node0xe72d40;
	Node0xe72d40 -> Node0xe72db0;
	Node0xe72480 -> Node0xe72db0;
	Node0xe72db0 -> Node0xe72e20;
	Node0xe72330 -> Node0xe72e20;
	Node0xe72e20 -> Node0xe72e90;
	Node0xe72018 -> Node0xe72e90;
	Node0xe72e90 -> Node0xe72f00;
	Node0xe72640 -> Node0xe72f00;
	Node0xe72f00 -> Node0xe72f70;
	Node0xe72720 -> Node0xe72f70;
	Node0xe72f70 -> Node0xe72fe0;
	Node0xe72800 -> Node0xe72fe0;
	Node0xe72fe0 -> Node0xe73050;
	Node0xe72090 -> Node0xe73050;
	Node0xe73050 -> Node0xe730c0;
	Node0xe726b0 -> Node0xe730c0;
	Node0xe730c0 -> Node0xe73130;
	Node0xe72560 -> Node0xe73130;
	Node0xe73130 -> Node0xe731a0;
	Node0xe72a30 -> Node0xe731a0;
	Node0xe731a0 -> Node0xe73210;
	Node0xe72950 -> Node0xe73210;
	Node0xe72170 -> Node0xe73280;
	Node0xe73210 -> Node0xe73280;
	Node0xe73280 -> Node0xe0f8b8;
	Node0xe0f8b8 -> Node0xe73310;
	Node0xe70728 -> Node0xe735b8;
	Node0xe705b8 -> Node0xe73718;
	Node0xe703f8 -> Node0xe73828;
	Node0xe6fee8 -> Node0xe73938;
}
