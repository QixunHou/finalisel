digraph "DFG for'main' function" {
	Node0x1b94548[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b945c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b94658[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b946b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1b94b38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b94c18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1b94d18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b94dd8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1b94e88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b950e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1b951a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b95308[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b95368[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b9ba50[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1b9bc58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b9bdb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b9bec8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b9bf88[shape=record, label="  ret i32 0"];
	Node0x1b94548 -> Node0x1b945c8;
	Node0x1b945c8 -> Node0x1b94658;
	Node0x1b94658 -> Node0x1b946b8;
	Node0x1b946b8 -> Node0x1b94b38;
	Node0x1b94b38 -> Node0x1b94c18;
	Node0x1b94c18 -> Node0x1b94d18;
	Node0x1b94d18 -> Node0x1b94dd8;
	Node0x1b94dd8 -> Node0x1b94e88;
	Node0x1b94e88 -> Node0x1b950e8;
	Node0x1b950e8 -> Node0x1b951a8;
	Node0x1b951a8 -> Node0x1b95308;
	Node0x1b95308 -> Node0x1b95368;
	Node0x1b95368 -> Node0x1b9ba50;
	Node0x1b9ba50 -> Node0x1b9bc58;
	Node0x1b9bc58 -> Node0x1b9bdb8;
	Node0x1b9bdb8 -> Node0x1b9bec8;
	Node0x1b9bec8 -> Node0x1b9bf88;
edge [color=red]
	Node0x1b94548 -> Node0x1b946b8;
	Node0x1b946b8 -> Node0x1b94b38;
	Node0x1b945c8 -> Node0x1b94c18;
	Node0x1b94c18 -> Node0x1b94d18;
	Node0x1b94658 -> Node0x1b94dd8;
	Node0x1b94dd8 -> Node0x1b94e88;
	Node0x1b94548 -> Node0x1b950e8;
	Node0x1b945c8 -> Node0x1b950e8;
	Node0x1b94658 -> Node0x1b950e8;
	Node0x1b94548 -> Node0x1b951a8;
	Node0x1b945c8 -> Node0x1b95308;
	Node0x1b94658 -> Node0x1b95368;
	Node0x1b951a8 -> Node0x1b9ba50;
	Node0x1b95308 -> Node0x1b9ba50;
	Node0x1b95368 -> Node0x1b9ba50;
	Node0x1b94dd8 -> Node0x1b9bc58;
	Node0x1b94c18 -> Node0x1b9bdb8;
	Node0x1b946b8 -> Node0x1b9bec8;
}
