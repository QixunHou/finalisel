digraph "DFG for'main' function" {
	Node0x1e66a48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e66ac8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e66b58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1e66bb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1e66c68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1e67098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e67178[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1e67278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e67338[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1e673e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1e674a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1e67558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1e61740[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1e67758[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e686c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e68d38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1e68d98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1e68ea8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1e69108[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1e69268[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1e69378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1e69488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1e69548[shape=record, label="  ret i32 0"];
	Node0x1e66a48 -> Node0x1e66ac8;
	Node0x1e66ac8 -> Node0x1e66b58;
	Node0x1e66b58 -> Node0x1e66bb8;
	Node0x1e66bb8 -> Node0x1e66c68;
	Node0x1e66c68 -> Node0x1e67098;
	Node0x1e67098 -> Node0x1e67178;
	Node0x1e67178 -> Node0x1e67278;
	Node0x1e67278 -> Node0x1e67338;
	Node0x1e67338 -> Node0x1e673e8;
	Node0x1e673e8 -> Node0x1e674a8;
	Node0x1e674a8 -> Node0x1e67558;
	Node0x1e67558 -> Node0x1e61740;
	Node0x1e61740 -> Node0x1e67758;
	Node0x1e67758 -> Node0x1e686c8;
	Node0x1e686c8 -> Node0x1e68d38;
	Node0x1e68d38 -> Node0x1e68d98;
	Node0x1e68d98 -> Node0x1e68ea8;
	Node0x1e68ea8 -> Node0x1e69108;
	Node0x1e69108 -> Node0x1e69268;
	Node0x1e69268 -> Node0x1e69378;
	Node0x1e69378 -> Node0x1e69488;
	Node0x1e69488 -> Node0x1e69548;
edge [color=red]
	Node0x1e66a48 -> Node0x1e66c68;
	Node0x1e66c68 -> Node0x1e67098;
	Node0x1e66ac8 -> Node0x1e67178;
	Node0x1e67178 -> Node0x1e67278;
	Node0x1e66b58 -> Node0x1e67338;
	Node0x1e67338 -> Node0x1e673e8;
	Node0x1e66bb8 -> Node0x1e674a8;
	Node0x1e674a8 -> Node0x1e67558;
	Node0x1e66a48 -> Node0x1e61740;
	Node0x1e66ac8 -> Node0x1e61740;
	Node0x1e66b58 -> Node0x1e61740;
	Node0x1e66bb8 -> Node0x1e61740;
	Node0x1e66a48 -> Node0x1e67758;
	Node0x1e66ac8 -> Node0x1e686c8;
	Node0x1e66b58 -> Node0x1e68d38;
	Node0x1e66bb8 -> Node0x1e68d98;
	Node0x1e67758 -> Node0x1e68ea8;
	Node0x1e686c8 -> Node0x1e68ea8;
	Node0x1e68d38 -> Node0x1e68ea8;
	Node0x1e68d98 -> Node0x1e68ea8;
	Node0x1e674a8 -> Node0x1e69108;
	Node0x1e67338 -> Node0x1e69268;
	Node0x1e67178 -> Node0x1e69378;
	Node0x1e66c68 -> Node0x1e69488;
}
