digraph "DFG for'main' function" {
	Node0xc74d58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc74dd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc74e68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xc752c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc753a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xc754c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc75700[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xc757b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc76728[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc76db0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xc76e20[shape=record, label="  %9 = and i32 %6, %8"];
	Node0xc76e90[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0xc76f00[shape=record, label="  %11 = and i32 %7, %6"];
	Node0xc76f70[shape=record, label="  %12 = or i32 %6, %8"];
	Node0xc76fe0[shape=record, label="  %13 = or i32 %7, %6"];
	Node0xc77050[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0xc770c0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0xc77130[shape=record, label="  %16 = shl i32 %12, 2"];
	Node0xc771a0[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0xc77210[shape=record, label="  %18 = shl i32 %9, 2"];
	Node0xc77280[shape=record, label="  %19 = mul i32 %11, 6"];
	Node0xc772f0[shape=record, label="  %20 = mul i32 %6, -2"];
	Node0xc77360[shape=record, label="  %21 = sub i32 1, %7"];
	Node0xc773d0[shape=record, label="  %22 = add i32 %21, %8"];
	Node0xc77440[shape=record, label="  %23 = add i32 %22, %20"];
	Node0xc774b0[shape=record, label="  %24 = add i32 %23, %11"];
	Node0xc77520[shape=record, label="  %25 = sub i32 %24, %12"];
	Node0xc77590[shape=record, label="  %26 = sub i32 %25, %13"];
	Node0xc77600[shape=record, label="  %27 = add i32 %26, %18"];
	Node0xc77670[shape=record, label="  %28 = add i32 %27, %19"];
	Node0xc776e0[shape=record, label="  %29 = add i32 %28, %15"];
	Node0xc77750[shape=record, label="  %30 = add i32 %29, %17"];
	Node0xc777c0[shape=record, label="  %31 = icmp eq i32 %30, %10"];
	Node0xc159d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc77a60[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0xc77cb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc77e18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc77ed8[shape=record, label="  ret i32 0"];
	Node0xc74d58 -> Node0xc74dd8;
	Node0xc74dd8 -> Node0xc74e68;
	Node0xc74e68 -> Node0xc752c8;
	Node0xc752c8 -> Node0xc753a8;
	Node0xc753a8 -> Node0xc754c8;
	Node0xc754c8 -> Node0xc75700;
	Node0xc75700 -> Node0xc757b8;
	Node0xc757b8 -> Node0xc76728;
	Node0xc76728 -> Node0xc76db0;
	Node0xc76db0 -> Node0xc76e20;
	Node0xc76e20 -> Node0xc76e90;
	Node0xc76e90 -> Node0xc76f00;
	Node0xc76f00 -> Node0xc76f70;
	Node0xc76f70 -> Node0xc76fe0;
	Node0xc76fe0 -> Node0xc77050;
	Node0xc77050 -> Node0xc770c0;
	Node0xc770c0 -> Node0xc77130;
	Node0xc77130 -> Node0xc771a0;
	Node0xc771a0 -> Node0xc77210;
	Node0xc77210 -> Node0xc77280;
	Node0xc77280 -> Node0xc772f0;
	Node0xc772f0 -> Node0xc77360;
	Node0xc77360 -> Node0xc773d0;
	Node0xc773d0 -> Node0xc77440;
	Node0xc77440 -> Node0xc774b0;
	Node0xc774b0 -> Node0xc77520;
	Node0xc77520 -> Node0xc77590;
	Node0xc77590 -> Node0xc77600;
	Node0xc77600 -> Node0xc77670;
	Node0xc77670 -> Node0xc776e0;
	Node0xc776e0 -> Node0xc77750;
	Node0xc77750 -> Node0xc777c0;
	Node0xc777c0 -> Node0xc159d8;
	Node0xc159d8 -> Node0xc77a60;
	Node0xc77a60 -> Node0xc77cb8;
	Node0xc77cb8 -> Node0xc77e18;
	Node0xc77e18 -> Node0xc77ed8;
edge [color=red]
	Node0xc74d58 -> Node0xc74e68;
	Node0xc74e68 -> Node0xc752c8;
	Node0xc74dd8 -> Node0xc753a8;
	Node0xc753a8 -> Node0xc754c8;
	Node0xc74d58 -> Node0xc75700;
	Node0xc74dd8 -> Node0xc75700;
	Node0xc74d58 -> Node0xc757b8;
	Node0xc74dd8 -> Node0xc76728;
	Node0xc76728 -> Node0xc76db0;
	Node0xc757b8 -> Node0xc76e20;
	Node0xc76db0 -> Node0xc76e20;
	Node0xc76e20 -> Node0xc76e90;
	Node0xc76728 -> Node0xc76f00;
	Node0xc757b8 -> Node0xc76f00;
	Node0xc757b8 -> Node0xc76f70;
	Node0xc76db0 -> Node0xc76f70;
	Node0xc76728 -> Node0xc76fe0;
	Node0xc757b8 -> Node0xc76fe0;
	Node0xc76fe0 -> Node0xc77050;
	Node0xc77050 -> Node0xc770c0;
	Node0xc76f70 -> Node0xc77130;
	Node0xc77130 -> Node0xc771a0;
	Node0xc76e20 -> Node0xc77210;
	Node0xc76f00 -> Node0xc77280;
	Node0xc757b8 -> Node0xc772f0;
	Node0xc76728 -> Node0xc77360;
	Node0xc77360 -> Node0xc773d0;
	Node0xc76db0 -> Node0xc773d0;
	Node0xc773d0 -> Node0xc77440;
	Node0xc772f0 -> Node0xc77440;
	Node0xc77440 -> Node0xc774b0;
	Node0xc76f00 -> Node0xc774b0;
	Node0xc774b0 -> Node0xc77520;
	Node0xc76f70 -> Node0xc77520;
	Node0xc77520 -> Node0xc77590;
	Node0xc76fe0 -> Node0xc77590;
	Node0xc77590 -> Node0xc77600;
	Node0xc77210 -> Node0xc77600;
	Node0xc77600 -> Node0xc77670;
	Node0xc77280 -> Node0xc77670;
	Node0xc77670 -> Node0xc776e0;
	Node0xc770c0 -> Node0xc776e0;
	Node0xc776e0 -> Node0xc77750;
	Node0xc771a0 -> Node0xc77750;
	Node0xc77750 -> Node0xc777c0;
	Node0xc76e90 -> Node0xc777c0;
	Node0xc777c0 -> Node0xc159d8;
	Node0xc159d8 -> Node0xc77a60;
	Node0xc753a8 -> Node0xc77cb8;
	Node0xc74e68 -> Node0xc77e18;
}
