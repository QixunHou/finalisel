; ModuleID = '../.././c_source_file/0762_path_condition_crackme.c'
source_filename = "../.././c_source_file/0762_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, %1
  %8 = xor i32 %7, -1
  %9 = xor i32 %8, %0
  %10 = and i32 %2, %0
  %11 = xor i32 %10, -1
  %12 = and i32 %11, %1
  %13 = sub i32 %9, %12
  %14 = and i32 %4, %3
  %15 = shl i32 %14, 1
  %16 = sub i32 %13, %15
  %17 = or i32 %8, %0
  %18 = and i32 %1, %0
  %19 = xor i32 %2, %0
  %20 = xor i32 %19, -1
  %21 = or i32 %18, %20
  %22 = xor i32 %2, -1
  %23 = or i32 %22, %0
  %24 = xor i32 %23, %1
  %25 = and i32 %20, %1
  %26 = xor i32 %1, -1
  %27 = and i32 %26, %0
  %28 = xor i32 %27, -1
  %29 = and i32 %20, %28
  %30 = shl i32 %29, 2
  %31 = or i32 %2, %0
  %32 = or i32 %10, %26
  %33 = or i32 %7, %27
  %34 = or i32 %10, %1
  %35 = and i32 %31, %26
  %36 = xor i32 %1, %0
  %37 = and i32 %36, %22
  %38 = and i32 %22, %1
  %39 = xor i32 %38, -1
  %40 = xor i32 %39, %0
  %41 = xor i32 %0, -1
  %42 = or i32 %38, %41
  %43 = and i32 %31, %36
  %44 = xor i32 %31, %1
  %45 = and i32 %2, %1
  %46 = xor i32 %45, %0
  %47 = or i32 %36, %2
  %48 = shl i32 %47, 1
  %49 = and i32 %26, %2
  %50 = and i32 %49, %0
  %51 = or i32 %7, %0
  %52 = xor i32 %50, %51
  %53 = and i32 %20, %26
  %54 = shl i32 %53, 1
  %55 = and i32 %31, %1
  %56 = or i32 %39, %41
  %57 = and i32 %45, %0
  %58 = or i32 %2, %1
  %59 = and i32 %58, %41
  %60 = xor i32 %57, -1
  %61 = xor i32 %59, %60
  %62 = xor i32 %58, %0
  %63 = or i32 %57, %62
  %64 = xor i32 %31, -1
  %65 = xor i32 %36, -1
  %66 = or i32 %64, %65
  %67 = or i32 %1, %0
  %68 = xor i32 %67, -1
  %69 = or i32 %8, %68
  %70 = or i32 %27, %22
  %71 = and i32 %49, %41
  %72 = or i32 %7, %41
  %73 = xor i32 %71, %72
  %74 = or i32 %26, %0
  %75 = xor i32 %10, %74
  %76 = shl i32 %62, 2
  %77 = xor i32 %45, -1
  %78 = xor i32 %27, %77
  %79 = and i32 %77, %41
  %80 = xor i32 %18, -1
  %81 = or i32 %20, %26
  %82 = xor i32 %10, %58
  %83 = xor i32 %23, -1
  %84 = or i32 %18, %83
  %85 = xor i32 %67, %2
  %86 = or i32 %27, %20
  %87 = and i32 %80, %2
  %88 = xor i32 %18, %2
  %89 = and i32 %19, %1
  %90 = xor i32 %74, -1
  %91 = or i32 %19, %1
  %92 = and i32 %22, %0
  %93 = xor i32 %92, %1
  %94 = and i32 %67, %20
  %95 = or i32 %22, %1
  %96 = xor i32 %95, %0
  %97 = xor i32 %92, -1
  %98 = xor i32 %58, -1
  %99 = add i32 %58, 1
  %100 = xor i32 %62, %60
  %101 = or i32 %38, %0
  %102 = and i32 %22, %28
  %103 = xor i32 %72, -1
  %104 = or i32 %71, %103
  %105 = shl i32 %8, 1
  %106 = or i32 %64, %26
  %107 = and i32 %20, %65
  %108 = or i32 %95, %0
  %109 = or i32 %27, %8
  %110 = or i32 %20, %90
  %111 = and i32 %7, %80
  %112 = or i32 %90, %2
  %113 = and i32 %22, %80
  %114 = xor i32 %95, -1
  %115 = or i32 %92, %114
  %116 = xor i32 %83, %1
  %117 = and i32 %11, %65
  %118 = xor i32 %74, %2
  %119 = and i32 %74, %8
  %120 = and i32 %8, %80
  %121 = and i32 %7, %41
  %122 = or i32 %64, %1
  %123 = or i32 %68, %2
  %124 = xor i32 %92, %95
  %125 = shl i32 %124, 1
  %126 = xor i32 %7, %0
  %127 = xor i32 %126, -1
  %128 = or i32 %57, %127
  %129 = or i32 %45, %27
  %130 = and i32 %19, %74
  %131 = and i32 %58, %0
  %132 = shl i32 %131, 1
  %133 = and i32 %7, %28
  %134 = or i32 %19, %26
  %135 = xor i32 %90, %2
  %136 = or i32 %26, %2
  %137 = and i32 %136, %0
  %138 = xor i32 %137, 2147483647
  %139 = xor i32 %138, %71
  %140 = or i32 %92, %36
  %141 = or i32 %98, %0
  %142 = or i32 %57, %59
  %143 = or i32 %58, %0
  %144 = or i32 %10, %68
  %145 = or i32 %19, %68
  %146 = and i32 %74, %22
  %147 = or i32 %22, %68
  %148 = or i32 %18, %2
  %149 = or i32 %36, %83
  %150 = and i32 %67, %2
  %151 = or i32 %83, %1
  %152 = shl i32 %151, 1
  %153 = or i32 %36, %20
  %154 = or i32 %114, %41
  %155 = and i32 %19, %80
  %156 = xor i32 %31, %18
  %157 = xor i32 %23, %18
  %158 = and i32 %7, %0
  %159 = shl i32 %158, 1
  %160 = xor i32 %51, 2147483647
  %161 = or i32 %160, %50
  %162 = shl i32 %161, 1
  %163 = or i32 %77, %41
  %164 = and i32 %23, %36
  %165 = and i32 %19, %65
  %166 = xor i32 %136, %0
  %167 = xor i32 %166, -1
  %168 = xor i32 %50, %167
  %169 = and i32 %23, %26
  %170 = shl i32 %169, 1
  %171 = or i32 %83, %26
  %172 = or i32 %22, %90
  %173 = xor i32 %98, %0
  %174 = or i32 %45, %0
  %175 = or i32 %114, %0
  %176 = and i32 %28, %2
  %177 = and i32 %23, %65
  %178 = or i32 %58, %41
  %179 = or i32 %65, %2
  %180 = xor i32 %27, %2
  %181 = and i32 %74, %2
  %182 = and i32 %67, %8
  %183 = and i32 %36, %20
  %184 = or i32 %39, %0
  %185 = and i32 %8, %0
  %186 = and i32 %19, %26
  %187 = and i32 %19, %36
  %188 = xor i32 %57, %126
  %189 = or i32 %20, %65
  %190 = or i32 %27, %2
  %191 = and i32 %36, %2
  %192 = shl i32 %191, 1
  %193 = xor i32 %10, %1
  %194 = and i32 %23, %1
  %195 = or i32 %19, %18
  %196 = or i32 %19, %27
  %197 = xor i32 %28, %2
  %198 = and i32 %95, %41
  %199 = xor i32 %92, %77
  %200 = shl i32 %199, 1
  %201 = or i32 %71, %137
  %202 = xor i32 %68, %2
  %203 = or i32 %92, %45
  %204 = and i32 %97, %26
  %205 = and i32 %22, %65
  %206 = and i32 %7, %67
  %207 = or i32 %7, %18
  %208 = or i32 %36, %64
  %209 = or i32 %18, %64
  %210 = xor i32 %114, %0
  %211 = and i32 %97, %1
  %212 = or i32 %18, %8
  %213 = and i32 %19, %28
  %214 = xor i32 %77, %0
  %215 = shl i32 %214, 1
  %216 = or i32 %19, %65
  %217 = add i32 %95, 1
  %218 = or i32 %50, %126
  %219 = or i32 %19, %36
  %220 = and i32 %45, %41
  %221 = or i32 %220, %158
  %222 = shl i32 %221, 1
  %223 = xor i32 %95, %18
  %224 = shl i32 %223, 1
  %225 = or i32 %98, %41
  %226 = or i32 %50, %166
  %227 = or i32 %10, %90
  %228 = xor i32 %136, 2147483647
  %229 = or i32 %228, %0
  %230 = xor i32 %229, %50
  %231 = shl i32 %230, 1
  %232 = and i32 %31, %65
  %233 = and i32 %8, %28
  %234 = or i32 %10, %98
  %235 = or i32 %20, %68
  %236 = or i32 %22, %65
  %237 = xor i32 %58, %18
  %238 = or i32 %95, %41
  %239 = and i32 %77, %0
  %240 = or i32 %92, %26
  %241 = and i32 %19, %67
  %242 = and i32 %74, %20
  %243 = or i32 %83, %65
  %244 = and i32 %98, %41
  %245 = mul i32 %244, -26
  %246 = and i32 %38, %41
  %247 = mul i32 %246, -45
  %248 = and i32 %98, %0
  %249 = mul i32 %248, -27
  %250 = and i32 %38, %0
  %251 = mul i32 %250, -30
  %252 = and i32 %114, %41
  %253 = shl i32 %220, 1
  %254 = and i32 %114, %0
  %255 = mul i32 %254, -29
  %256 = or i32 %4, %3
  %257 = xor i32 %256, -1
  %258 = xor i32 %5, %4
  %259 = xor i32 %258, -1
  %260 = or i32 %259, %257
  %261 = or i32 %5, %4
  %262 = xor i32 %261, -1
  %263 = xor i32 %5, -1
  %264 = xor i32 %4, %3
  %265 = xor i32 %264, -1
  %266 = and i32 %263, %265
  %267 = and i32 %263, %4
  %268 = or i32 %267, %265
  %269 = xor i32 %14, -1
  %270 = and i32 %263, %269
  %271 = or i32 %258, %257
  %272 = and i32 %5, %3
  %273 = or i32 %267, %272
  %274 = shl i32 %273, 1
  %275 = xor i32 %5, %3
  %276 = or i32 %275, %14
  %277 = or i32 %258, %14
  %278 = or i32 %265, %5
  %279 = shl i32 %278, 1
  %280 = or i32 %264, %263
  %281 = xor i32 %3, -1
  %282 = or i32 %267, %281
  %283 = or i32 %258, %264
  %284 = shl i32 %283, 2
  %285 = or i32 %263, %3
  %286 = or i32 %285, %4
  %287 = or i32 %5, %3
  %288 = xor i32 %287, -1
  %289 = or i32 %14, %288
  %290 = xor i32 %275, -1
  %291 = or i32 %263, %4
  %292 = xor i32 %291, -1
  %293 = or i32 %292, %265
  %294 = xor i32 %290, %4
  %295 = or i32 %288, %4
  %296 = xor i32 %4, -1
  %297 = and i32 %281, %5
  %298 = and i32 %297, %296
  %299 = or i32 %281, %5
  %300 = and i32 %299, %4
  %301 = or i32 %298, %300
  %302 = xor i32 %272, -1
  %303 = or i32 %302, %4
  %304 = and i32 %281, %4
  %305 = or i32 %304, %290
  %306 = shl i32 %305, 1
  %307 = and i32 %256, %5
  %308 = xor i32 %256, %5
  %309 = or i32 %264, %292
  %310 = or i32 %304, %5
  %311 = and i32 %5, %4
  %312 = or i32 %311, %257
  %313 = and i32 %256, %263
  %314 = xor i32 %304, -1
  %315 = and i32 %275, %314
  %316 = shl i32 %281, 1
  %317 = and i32 %287, %4
  %318 = xor i32 %304, %5
  %319 = shl i32 %318, 1
  %320 = or i32 %281, %4
  %321 = and i32 %320, %290
  %322 = or i32 %14, %5
  %323 = and i32 %275, %269
  %324 = or i32 %285, %296
  %325 = and i32 %263, %3
  %326 = or i32 %325, %304
  %327 = and i32 %297, %4
  %328 = or i32 %275, %4
  %329 = xor i32 %328, -1
  %330 = or i32 %327, %329
  %331 = xor i32 %311, -1
  %332 = and i32 %331, %3
  %333 = and i32 %331, %265
  %334 = xor i32 %314, %5
  %335 = or i32 %258, %265
  %336 = and i32 %264, %5
  %337 = and i32 %258, %314
  %338 = and i32 %272, %4
  %339 = xor i32 %287, %4
  %340 = xor i32 %338, -1
  %341 = xor i32 %339, %340
  %342 = and i32 %275, %296
  %343 = or i32 %338, %342
  %344 = xor i32 %272, %4
  %345 = xor i32 %320, -1
  %346 = or i32 %263, %345
  %347 = or i32 %264, %262
  %348 = and i32 %261, %265
  %349 = or i32 %258, %3
  %350 = shl i32 %349, 1
  %351 = and i32 %287, %296
  %352 = or i32 %338, %351
  %353 = and i32 %258, %265
  %354 = xor i32 %325, -1
  %355 = or i32 %354, %4
  %356 = and i32 %290, %314
  %357 = or i32 %259, %345
  %358 = xor i32 %285, -1
  %359 = xor i32 %358, %4
  %360 = xor i32 %292, %3
  %361 = and i32 %285, %296
  %362 = xor i32 %262, %3
  %363 = xor i32 %285, %4
  %364 = and i32 %259, %265
  %365 = and i32 %290, %4
  %366 = shl i32 %365, 1
  %367 = xor i32 %299, %4
  %368 = xor i32 %327, -1
  %369 = xor i32 %367, %368
  %370 = xor i32 %304, %354
  %371 = xor i32 %267, -1
  %372 = and i32 %371, %281
  %373 = or i32 %258, %304
  %374 = and i32 %258, %269
  %375 = and i32 %320, %259
  %376 = and i32 %354, %296
  %377 = add i32 %291, 1
  %378 = and i32 %256, %259
  %379 = xor i32 %4, 2147483647
  %380 = xor i32 %379, %275
  %381 = xor i32 %380, %327
  %382 = shl i32 %381, 1
  %383 = xor i32 %304, %302
  %384 = shl i32 %383, 2
  %385 = and i32 %264, %371
  %386 = or i32 %358, %4
  %387 = xor i32 %320, %5
  %388 = shl i32 %387, 2
  %389 = or i32 %311, %265
  %390 = and i32 %272, %296
  %391 = xor i32 %317, -1
  %392 = xor i32 %390, %391
  %393 = and i32 %265, %5
  %394 = xor i32 %257, %5
  %395 = or i32 %287, %296
  %396 = or i32 %263, %265
  %397 = or i32 %390, %317
  %398 = xor i32 %285, %14
  %399 = or i32 %311, %3
  %400 = xor i32 %267, %302
  %401 = or i32 %14, %358
  %402 = and i32 %371, %265
  %403 = and i32 %291, %3
  %404 = xor i32 %331, %3
  %405 = or i32 %272, %296
  %406 = and i32 %259, %3
  %407 = or i32 %258, %281
  %408 = or i32 %327, %367
  %409 = xor i32 %311, %3
  %410 = or i32 %290, %296
  %411 = and i32 %299, %296
  %412 = xor i32 %411, %368
  %413 = or i32 %345, %5
  %414 = or i32 %327, %411
  %415 = or i32 %267, %264
  %416 = and i32 %302, %296
  %417 = or i32 %267, %3
  %418 = xor i32 %287, %14
  %419 = and i32 %290, %269
  %420 = or i32 %272, %304
  %421 = or i32 %267, %358
  %422 = shl i32 %421, 1
  %423 = or i32 %290, %345
  %424 = shl i32 %261, 1
  %425 = or i32 %304, %263
  %426 = or i32 %259, %3
  %427 = and i32 %275, %4
  %428 = or i32 %354, %296
  %429 = shl i32 %428, 1
  %430 = or i32 %259, %281
  %431 = or i32 %311, %288
  %432 = xor i32 %311, %320
  %433 = or i32 %275, %296
  %434 = xor i32 %433, -1
  %435 = or i32 %298, %434
  %436 = or i32 %288, %296
  %437 = shl i32 %436, 1
  %438 = xor i32 %327, %328
  %439 = xor i32 %311, %354
  %440 = and i32 %320, %263
  %441 = or i32 %292, %3
  %442 = or i32 %325, %4
  %443 = or i32 %292, %281
  %444 = xor i32 %325, %4
  %445 = or i32 %311, %345
  %446 = xor i32 %342, %340
  %447 = or i32 %311, %264
  %448 = xor i32 %351, %340
  %449 = or i32 %262, %265
  %450 = xor i32 %311, %287
  %451 = or i32 %290, %4
  %452 = add i32 %14, 1
  %453 = and i32 %302, %4
  %454 = or i32 %290, %257
  %455 = or i32 %272, %4
  %456 = or i32 %259, %265
  %457 = or i32 %287, %4
  %458 = xor i32 %269, %5
  %459 = and i32 %291, %264
  %460 = xor i32 %302, %4
  %461 = and i32 %288, %296
  %462 = and i32 %325, %296
  %463 = mul i32 %462, -19
  %464 = and i32 %288, %4
  %465 = mul i32 %464, -6
  %466 = and i32 %325, %4
  %467 = mul i32 %466, -13
  %468 = and i32 %358, %296
  %469 = mul i32 %468, -7
  %470 = shl i32 %390, 1
  %471 = and i32 %358, %4
  %472 = shl i32 %338, 1
  %473 = add i32 %80, %0
  %474 = add i32 %473, %58
  %475 = add i32 %474, %179
  %476 = add i32 %475, %20
  %477 = add i32 %476, %209
  %478 = add i32 %477, %207
  %479 = add i32 %478, %198
  %480 = add i32 %479, %187
  %481 = add i32 %480, %186
  %482 = add i32 %481, %164
  %483 = add i32 %482, %163
  %484 = add i32 %483, %134
  %485 = add i32 %484, %133
  %486 = add i32 %485, %93
  %487 = add i32 %486, %86
  %488 = add i32 %487, %42
  %489 = add i32 %488, %218
  %490 = add i32 %489, %52
  %491 = add i32 %490, %346
  %492 = add i32 %491, %139
  %493 = add i32 %492, %455
  %494 = add i32 %493, %453
  %495 = add i32 %494, %445
  %496 = add i32 %495, %416
  %497 = add i32 %496, %415
  %498 = add i32 %497, %410
  %499 = add i32 %498, %409
  %500 = add i32 %499, %399
  %501 = add i32 %500, %395
  %502 = add i32 %501, %375
  %503 = add i32 %502, %374
  %504 = add i32 %503, %362
  %505 = add i32 %504, %360
  %506 = add i32 %505, %333
  %507 = add i32 %506, %315
  %508 = add i32 %507, %293
  %509 = add i32 %508, %277
  %510 = add i32 %509, %408
  %511 = shl i32 %510, 1
  %512 = sub i32 %102, %148
  %513 = add i32 %512, %101
  %514 = sub i32 %513, %142
  %515 = sub i32 %514, %471
  %516 = add i32 %515, %373
  %517 = sub i32 %516, %359
  %518 = add i32 %517, %268
  %519 = add i32 %518, %392
  %520 = mul i32 %519, 5
  %521 = add i32 %194, %68
  %522 = sub i32 %521, %144
  %523 = add i32 %522, %56
  %524 = add i32 %523, %336
  %525 = add i32 %524, %270
  %526 = sub i32 %525, %341
  %527 = mul i32 %526, 3
  %528 = add i32 %153, %135
  %529 = add i32 %528, %265
  %530 = add i32 %529, %425
  %531 = add i32 %530, %430
  %532 = shl i32 %531, 2
  %533 = add i32 %252, %57
  %534 = add i32 %533, %461
  %535 = mul i32 %534, -20
  %536 = sub i32 -4, %0
  %537 = add i32 %536, %26
  %538 = sub i32 %537, %1
  %539 = add i32 %538, %18
  %540 = add i32 %539, %2
  %541 = add i32 %540, %65
  %542 = add i32 %541, %27
  %543 = sub i32 %542, %36
  %544 = sub i32 %543, %31
  %545 = add i32 %544, %37
  %546 = add i32 %545, %70
  %547 = add i32 %546, %85
  %548 = add i32 %547, %87
  %549 = sub i32 %548, %88
  %550 = add i32 %549, %97
  %551 = add i32 %550, %99
  %552 = sub i32 %551, %10
  %553 = sub i32 %552, %7
  %554 = add i32 %553, %112
  %555 = sub i32 %554, %113
  %556 = add i32 %555, %118
  %557 = sub i32 %556, %123
  %558 = add i32 %557, %146
  %559 = add i32 %558, %147
  %560 = sub i32 %559, %150
  %561 = sub i32 %560, %23
  %562 = sub i32 %561, %172
  %563 = sub i32 %562, %176
  %564 = add i32 %563, %180
  %565 = add i32 %564, %181
  %566 = sub i32 %565, %190
  %567 = sub i32 %566, %45
  %568 = add i32 %567, %197
  %569 = add i32 %568, %202
  %570 = add i32 %569, %205
  %571 = add i32 %570, %217
  %572 = add i32 %571, %11
  %573 = add i32 %572, %236
  %574 = add i32 %573, %39
  %575 = sub i32 %574, %38
  %576 = add i32 %575, %77
  %577 = sub i32 %576, %21
  %578 = sub i32 %577, %17
  %579 = add i32 %578, %24
  %580 = add i32 %579, %25
  %581 = add i32 %580, %32
  %582 = add i32 %581, %33
  %583 = add i32 %582, %34
  %584 = add i32 %583, %35
  %585 = add i32 %584, %40
  %586 = sub i32 %585, %43
  %587 = sub i32 %586, %44
  %588 = add i32 %587, %46
  %589 = sub i32 %588, %48
  %590 = add i32 %589, %55
  %591 = add i32 %590, %66
  %592 = sub i32 %591, %69
  %593 = sub i32 %592, %75
  %594 = add i32 %593, %78
  %595 = sub i32 %594, %79
  %596 = add i32 %595, %81
  %597 = add i32 %596, %82
  %598 = sub i32 %597, %84
  %599 = sub i32 %598, %89
  %600 = sub i32 %599, %91
  %601 = sub i32 %600, %94
  %602 = add i32 %601, %96
  %603 = sub i32 %602, %105
  %604 = sub i32 %603, %106
  %605 = add i32 %604, %107
  %606 = add i32 %605, %108
  %607 = sub i32 %606, %109
  %608 = sub i32 %607, %110
  %609 = sub i32 %608, %111
  %610 = add i32 %609, %115
  %611 = add i32 %610, %116
  %612 = sub i32 %611, %117
  %613 = sub i32 %612, %119
  %614 = sub i32 %613, %120
  %615 = sub i32 %614, %121
  %616 = add i32 %615, %122
  %617 = sub i32 %616, %129
  %618 = sub i32 %617, %130
  %619 = sub i32 %618, %140
  %620 = sub i32 %619, %141
  %621 = add i32 %620, %143
  %622 = sub i32 %621, %145
  %623 = add i32 %622, %149
  %624 = add i32 %623, %51
  %625 = add i32 %624, %154
  %626 = add i32 %625, %155
  %627 = add i32 %626, %156
  %628 = add i32 %627, %157
  %629 = sub i32 %628, %165
  %630 = sub i32 %629, %171
  %631 = add i32 %630, %173
  %632 = add i32 %631, %174
  %633 = add i32 %632, %175
  %634 = sub i32 %633, %177
  %635 = sub i32 %634, %178
  %636 = add i32 %635, %182
  %637 = add i32 %636, %183
  %638 = add i32 %637, %184
  %639 = sub i32 %638, %185
  %640 = add i32 %639, %189
  %641 = sub i32 %640, %192
  %642 = add i32 %641, %193
  %643 = sub i32 %642, %195
  %644 = sub i32 %643, %196
  %645 = sub i32 %644, %126
  %646 = sub i32 %645, %203
  %647 = sub i32 %646, %204
  %648 = add i32 %647, %206
  %649 = add i32 %648, %208
  %650 = add i32 %649, %210
  %651 = sub i32 %650, %211
  %652 = sub i32 %651, %212
  %653 = add i32 %652, %213
  %654 = add i32 %653, %216
  %655 = sub i32 %654, %219
  %656 = sub i32 %655, %225
  %657 = add i32 %656, %227
  %658 = sub i32 %657, %232
  %659 = add i32 %658, %233
  %660 = add i32 %659, %234
  %661 = add i32 %660, %235
  %662 = add i32 %661, %237
  %663 = sub i32 %662, %238
  %664 = sub i32 %663, %239
  %665 = sub i32 %664, %240
  %666 = sub i32 %665, %241
  %667 = add i32 %666, %242
  %668 = add i32 %667, %243
  %669 = sub i32 %668, %316
  %670 = sub i32 %669, %30
  %671 = sub i32 %670, %54
  %672 = add i32 %671, %61
  %673 = add i32 %672, %63
  %674 = add i32 %673, %73
  %675 = sub i32 %674, %76
  %676 = add i32 %675, %100
  %677 = add i32 %676, %104
  %678 = sub i32 %677, %125
  %679 = add i32 %678, %128
  %680 = sub i32 %679, %132
  %681 = sub i32 %680, %152
  %682 = sub i32 %681, %159
  %683 = add i32 %682, %168
  %684 = sub i32 %683, %170
  %685 = add i32 %684, %188
  %686 = sub i32 %685, %200
  %687 = add i32 %686, %201
  %688 = sub i32 %687, %215
  %689 = sub i32 %688, %224
  %690 = sub i32 %689, %226
  %691 = add i32 %690, %245
  %692 = add i32 %691, %247
  %693 = add i32 %692, %249
  %694 = add i32 %693, %251
  %695 = sub i32 %694, %253
  %696 = add i32 %695, %255
  %697 = sub i32 %696, %320
  %698 = sub i32 %697, %264
  %699 = add i32 %698, %256
  %700 = add i32 %699, %304
  %701 = add i32 %700, %452
  %702 = sub i32 %701, %222
  %703 = add i32 %702, %262
  %704 = add i32 %703, %266
  %705 = add i32 %704, %280
  %706 = add i32 %705, %290
  %707 = add i32 %706, %288
  %708 = sub i32 %707, %307
  %709 = add i32 %708, %308
  %710 = sub i32 %709, %310
  %711 = add i32 %710, %313
  %712 = add i32 %711, %322
  %713 = sub i32 %712, %334
  %714 = add i32 %713, %259
  %715 = add i32 %714, %267
  %716 = add i32 %715, %377
  %717 = sub i32 %716, %393
  %718 = sub i32 %717, %394
  %719 = sub i32 %718, %258
  %720 = sub i32 %719, %275
  %721 = add i32 %720, %396
  %722 = sub i32 %721, %413
  %723 = sub i32 %722, %291
  %724 = add i32 %723, %440
  %725 = sub i32 %724, %311
  %726 = sub i32 %725, %458
  %727 = sub i32 %726, %162
  %728 = sub i32 %727, %231
  %729 = sub i32 %728, %260
  %730 = sub i32 %729, %271
  %731 = sub i32 %730, %276
  %732 = sub i32 %731, %279
  %733 = add i32 %732, %282
  %734 = sub i32 %733, %286
  %735 = sub i32 %734, %289
  %736 = add i32 %735, %294
  %737 = sub i32 %736, %295
  %738 = add i32 %737, %303
  %739 = add i32 %738, %309
  %740 = add i32 %739, %312
  %741 = add i32 %740, %317
  %742 = sub i32 %741, %319
  %743 = add i32 %742, %321
  %744 = sub i32 %743, %323
  %745 = sub i32 %744, %324
  %746 = add i32 %745, %326
  %747 = sub i32 %746, %332
  %748 = sub i32 %747, %335
  %749 = sub i32 %748, %337
  %750 = sub i32 %749, %344
  %751 = add i32 %750, %347
  %752 = add i32 %751, %348
  %753 = sub i32 %752, %353
  %754 = sub i32 %753, %355
  %755 = add i32 %754, %356
  %756 = sub i32 %755, %357
  %757 = sub i32 %756, %361
  %758 = sub i32 %757, %363
  %759 = add i32 %758, %364
  %760 = sub i32 %759, %370
  %761 = sub i32 %760, %372
  %762 = sub i32 %761, %376
  %763 = add i32 %762, %378
  %764 = sub i32 %763, %385
  %765 = add i32 %764, %386
  %766 = sub i32 %765, %388
  %767 = sub i32 %766, %389
  %768 = add i32 %767, %342
  %769 = add i32 %768, %398
  %770 = add i32 %769, %400
  %771 = add i32 %770, %401
  %772 = sub i32 %771, %402
  %773 = sub i32 %772, %403
  %774 = add i32 %773, %404
  %775 = add i32 %774, %405
  %776 = add i32 %775, %406
  %777 = sub i32 %776, %407
  %778 = add i32 %777, %339
  %779 = sub i32 %778, %417
  %780 = sub i32 %779, %418
  %781 = add i32 %780, %419
  %782 = sub i32 %781, %420
  %783 = sub i32 %782, %423
  %784 = sub i32 %783, %424
  %785 = sub i32 %784, %426
  %786 = add i32 %785, %427
  %787 = sub i32 %786, %431
  %788 = sub i32 %787, %432
  %789 = add i32 %788, %433
  %790 = add i32 %789, %439
  %791 = add i32 %790, %441
  %792 = sub i32 %791, %442
  %793 = add i32 %792, %443
  %794 = sub i32 %793, %444
  %795 = add i32 %794, %447
  %796 = add i32 %795, %449
  %797 = add i32 %796, %450
  %798 = add i32 %797, %451
  %799 = sub i32 %798, %328
  %800 = sub i32 %799, %454
  %801 = sub i32 %800, %456
  %802 = sub i32 %801, %457
  %803 = sub i32 %802, %459
  %804 = sub i32 %803, %460
  %805 = sub i32 %804, %274
  %806 = sub i32 %805, %284
  %807 = sub i32 %806, %301
  %808 = sub i32 %807, %306
  %809 = add i32 %808, %330
  %810 = sub i32 %809, %343
  %811 = sub i32 %810, %350
  %812 = add i32 %811, %352
  %813 = sub i32 %812, %366
  %814 = add i32 %813, %369
  %815 = sub i32 %814, %384
  %816 = sub i32 %815, %397
  %817 = sub i32 %816, %412
  %818 = add i32 %817, %414
  %819 = sub i32 %818, %422
  %820 = sub i32 %819, %429
  %821 = sub i32 %820, %435
  %822 = sub i32 %821, %437
  %823 = add i32 %822, %438
  %824 = add i32 %823, %446
  %825 = sub i32 %824, %448
  %826 = add i32 %825, %463
  %827 = add i32 %826, %465
  %828 = add i32 %827, %467
  %829 = add i32 %828, %469
  %830 = sub i32 %829, %470
  %831 = sub i32 %830, %472
  %832 = sub i32 %831, %382
  %833 = add i32 %832, %535
  %834 = add i32 %833, %532
  %835 = add i32 %834, %527
  %836 = add i32 %835, %520
  %837 = add i32 %836, %511
  %838 = icmp eq i32 %16, %837
  %839 = select i1 %838, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %840 = tail call i32 @puts(i8* nonnull dereferenceable(1) %839)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
