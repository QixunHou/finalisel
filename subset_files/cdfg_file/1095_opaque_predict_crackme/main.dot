digraph "DFG for'main' function" {
	Node0x93c908[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x93c988[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x93ca18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x93ca78[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x93cef8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x93cfd8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x93d0d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x93d198[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x93d248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x93d4a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x93d568[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x93d6c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x93d728[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x9409a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x940ba8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x940d08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x940e18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x940ed8[shape=record, label="  ret i32 0"];
	Node0x93c908 -> Node0x93c988;
	Node0x93c988 -> Node0x93ca18;
	Node0x93ca18 -> Node0x93ca78;
	Node0x93ca78 -> Node0x93cef8;
	Node0x93cef8 -> Node0x93cfd8;
	Node0x93cfd8 -> Node0x93d0d8;
	Node0x93d0d8 -> Node0x93d198;
	Node0x93d198 -> Node0x93d248;
	Node0x93d248 -> Node0x93d4a8;
	Node0x93d4a8 -> Node0x93d568;
	Node0x93d568 -> Node0x93d6c8;
	Node0x93d6c8 -> Node0x93d728;
	Node0x93d728 -> Node0x9409a0;
	Node0x9409a0 -> Node0x940ba8;
	Node0x940ba8 -> Node0x940d08;
	Node0x940d08 -> Node0x940e18;
	Node0x940e18 -> Node0x940ed8;
edge [color=red]
	Node0x93c908 -> Node0x93ca78;
	Node0x93ca78 -> Node0x93cef8;
	Node0x93c988 -> Node0x93cfd8;
	Node0x93cfd8 -> Node0x93d0d8;
	Node0x93ca18 -> Node0x93d198;
	Node0x93d198 -> Node0x93d248;
	Node0x93c908 -> Node0x93d4a8;
	Node0x93c988 -> Node0x93d4a8;
	Node0x93ca18 -> Node0x93d4a8;
	Node0x93c908 -> Node0x93d568;
	Node0x93c988 -> Node0x93d6c8;
	Node0x93ca18 -> Node0x93d728;
	Node0x93d568 -> Node0x9409a0;
	Node0x93d6c8 -> Node0x9409a0;
	Node0x93d728 -> Node0x9409a0;
	Node0x93d198 -> Node0x940ba8;
	Node0x93cfd8 -> Node0x940d08;
	Node0x93ca78 -> Node0x940e18;
}
