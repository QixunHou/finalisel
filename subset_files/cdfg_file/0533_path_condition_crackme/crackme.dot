digraph "DFG for'crackme' function" {
	Node0x1bd0b80[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x1bd1200[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x1bd12a0[shape=record, label="  %7 = xor i32 %6, -2"];
	Node0x1bd1310[shape=record, label="  %8 = or i32 %2, %1"];
	Node0x1bd1380[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x1bd13f0[shape=record, label="  %10 = sub i32 %7, %9"];
	Node0x1bd1460[shape=record, label="  %11 = or i32 %10, 1"];
	Node0x1bd14d0[shape=record, label="  %12 = sub i32 %11, %3"];
	Node0x1bd1570[shape=record, label="  %13 = xor i32 %1, -1"];
	Node0x1bd15e0[shape=record, label="  %14 = xor i32 %13, %2"];
	Node0x1bd1650[shape=record, label="  %15 = mul i32 %14, -2"];
	Node0x1bd16c0[shape=record, label="  %16 = xor i32 %2, -1"];
	Node0x1bd1730[shape=record, label="  %17 = and i32 %16, %1"];
	Node0x1bd17a0[shape=record, label="  %18 = or i32 %15, 1"];
	Node0x1bd1810[shape=record, label="  %19 = or i32 %16, %1"];
	Node0x1bd1880[shape=record, label="  %20 = xor i32 %8, -1"];
	Node0x1bd1920[shape=record, label="  %21 = mul i32 %20, 7"];
	Node0x1bd1990[shape=record, label="  %22 = and i32 %3, %0"];
	Node0x1bd1a00[shape=record, label="  %23 = or i32 %3, %0"];
	Node0x1bd1a70[shape=record, label="  %24 = xor i32 %0, -1"];
	Node0x1bd1ae0[shape=record, label="  %25 = and i32 %24, %3"];
	Node0x1bd1b50[shape=record, label="  %26 = or i32 %24, %3"];
	Node0x1bd1bc0[shape=record, label="  %27 = xor i32 %3, %0"];
	Node0x1bd1c30[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x1bd1cd0[shape=record, label="  %29 = mul i32 %25, -3"];
	Node0x1bd1d40[shape=record, label="  %30 = add i32 %23, %17"];
	Node0x1bd1db0[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x1bd1e20[shape=record, label="  %32 = add i32 %22, %16"];
	Node0x1bd20d0[shape=record, label="  %33 = mul i32 %32, -5"];
	Node0x1bd2140[shape=record, label="  %34 = sub i32 %17, %2"];
	Node0x1bd21b0[shape=record, label="  %35 = add i32 %34, %19"];
	Node0x1bd2220[shape=record, label="  %36 = sub i32 %35, %5"];
	Node0x1bd2290[shape=record, label="  %37 = add i32 %36, %21"];
	Node0x1bd2300[shape=record, label="  %38 = add i32 %37, %22"];
	Node0x1bd2370[shape=record, label="  %39 = add i32 %38, %25"];
	Node0x1bd23e0[shape=record, label="  %40 = add i32 %39, %26"];
	Node0x1bd2450[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x1bd24c0[shape=record, label="  %42 = add i32 %41, %18"];
	Node0x1bd2530[shape=record, label="  %43 = sub i32 %42, %28"];
	Node0x1bd25a0[shape=record, label="  %44 = add i32 %43, %29"];
	Node0x1bd2610[shape=record, label="  %45 = add i32 %44, %31"];
	Node0x1bd2680[shape=record, label="  %46 = add i32 %45, %33"];
	Node0x1bd26f0[shape=record, label="  %47 = icmp eq i32 %12, %46"];
	Node0x1b71268[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1bd2b90[shape=record, label="  %49 = tail call i32 @puts(i8* nonnull dereferenceable(1) %48)"];
	Node0x1bd2be0[shape=record, label="  ret void"];
	Node0x1bd0b80 -> Node0x1bd1200;
	Node0x1bd1200 -> Node0x1bd12a0;
	Node0x1bd12a0 -> Node0x1bd1310;
	Node0x1bd1310 -> Node0x1bd1380;
	Node0x1bd1380 -> Node0x1bd13f0;
	Node0x1bd13f0 -> Node0x1bd1460;
	Node0x1bd1460 -> Node0x1bd14d0;
	Node0x1bd14d0 -> Node0x1bd1570;
	Node0x1bd1570 -> Node0x1bd15e0;
	Node0x1bd15e0 -> Node0x1bd1650;
	Node0x1bd1650 -> Node0x1bd16c0;
	Node0x1bd16c0 -> Node0x1bd1730;
	Node0x1bd1730 -> Node0x1bd17a0;
	Node0x1bd17a0 -> Node0x1bd1810;
	Node0x1bd1810 -> Node0x1bd1880;
	Node0x1bd1880 -> Node0x1bd1920;
	Node0x1bd1920 -> Node0x1bd1990;
	Node0x1bd1990 -> Node0x1bd1a00;
	Node0x1bd1a00 -> Node0x1bd1a70;
	Node0x1bd1a70 -> Node0x1bd1ae0;
	Node0x1bd1ae0 -> Node0x1bd1b50;
	Node0x1bd1b50 -> Node0x1bd1bc0;
	Node0x1bd1bc0 -> Node0x1bd1c30;
	Node0x1bd1c30 -> Node0x1bd1cd0;
	Node0x1bd1cd0 -> Node0x1bd1d40;
	Node0x1bd1d40 -> Node0x1bd1db0;
	Node0x1bd1db0 -> Node0x1bd1e20;
	Node0x1bd1e20 -> Node0x1bd20d0;
	Node0x1bd20d0 -> Node0x1bd2140;
	Node0x1bd2140 -> Node0x1bd21b0;
	Node0x1bd21b0 -> Node0x1bd2220;
	Node0x1bd2220 -> Node0x1bd2290;
	Node0x1bd2290 -> Node0x1bd2300;
	Node0x1bd2300 -> Node0x1bd2370;
	Node0x1bd2370 -> Node0x1bd23e0;
	Node0x1bd23e0 -> Node0x1bd2450;
	Node0x1bd2450 -> Node0x1bd24c0;
	Node0x1bd24c0 -> Node0x1bd2530;
	Node0x1bd2530 -> Node0x1bd25a0;
	Node0x1bd25a0 -> Node0x1bd2610;
	Node0x1bd2610 -> Node0x1bd2680;
	Node0x1bd2680 -> Node0x1bd26f0;
	Node0x1bd26f0 -> Node0x1b71268;
	Node0x1b71268 -> Node0x1bd2b90;
	Node0x1bd2b90 -> Node0x1bd2be0;
edge [color=red]
	Node0x1bd0b80 -> Node0x1bd1200;
	Node0x1bd1200 -> Node0x1bd12a0;
	Node0x1bd1310 -> Node0x1bd1380;
	Node0x1bd12a0 -> Node0x1bd13f0;
	Node0x1bd1380 -> Node0x1bd13f0;
	Node0x1bd13f0 -> Node0x1bd1460;
	Node0x1bd1460 -> Node0x1bd14d0;
	Node0x1bd1570 -> Node0x1bd15e0;
	Node0x1bd15e0 -> Node0x1bd1650;
	Node0x1bd16c0 -> Node0x1bd1730;
	Node0x1bd1650 -> Node0x1bd17a0;
	Node0x1bd16c0 -> Node0x1bd1810;
	Node0x1bd1310 -> Node0x1bd1880;
	Node0x1bd1880 -> Node0x1bd1920;
	Node0x1bd1a70 -> Node0x1bd1ae0;
	Node0x1bd1a70 -> Node0x1bd1b50;
	Node0x1bd1bc0 -> Node0x1bd1c30;
	Node0x1bd1ae0 -> Node0x1bd1cd0;
	Node0x1bd1a00 -> Node0x1bd1d40;
	Node0x1bd1730 -> Node0x1bd1d40;
	Node0x1bd1d40 -> Node0x1bd1db0;
	Node0x1bd1990 -> Node0x1bd1e20;
	Node0x1bd16c0 -> Node0x1bd1e20;
	Node0x1bd1e20 -> Node0x1bd20d0;
	Node0x1bd1730 -> Node0x1bd2140;
	Node0x1bd2140 -> Node0x1bd21b0;
	Node0x1bd1810 -> Node0x1bd21b0;
	Node0x1bd21b0 -> Node0x1bd2220;
	Node0x1bd0b80 -> Node0x1bd2220;
	Node0x1bd2220 -> Node0x1bd2290;
	Node0x1bd1920 -> Node0x1bd2290;
	Node0x1bd2290 -> Node0x1bd2300;
	Node0x1bd1990 -> Node0x1bd2300;
	Node0x1bd2300 -> Node0x1bd2370;
	Node0x1bd1ae0 -> Node0x1bd2370;
	Node0x1bd2370 -> Node0x1bd23e0;
	Node0x1bd1b50 -> Node0x1bd23e0;
	Node0x1bd23e0 -> Node0x1bd2450;
	Node0x1bd1a00 -> Node0x1bd2450;
	Node0x1bd2450 -> Node0x1bd24c0;
	Node0x1bd17a0 -> Node0x1bd24c0;
	Node0x1bd24c0 -> Node0x1bd2530;
	Node0x1bd1c30 -> Node0x1bd2530;
	Node0x1bd2530 -> Node0x1bd25a0;
	Node0x1bd1cd0 -> Node0x1bd25a0;
	Node0x1bd25a0 -> Node0x1bd2610;
	Node0x1bd1db0 -> Node0x1bd2610;
	Node0x1bd2610 -> Node0x1bd2680;
	Node0x1bd20d0 -> Node0x1bd2680;
	Node0x1bd14d0 -> Node0x1bd26f0;
	Node0x1bd2680 -> Node0x1bd26f0;
	Node0x1bd26f0 -> Node0x1b71268;
	Node0x1b71268 -> Node0x1bd2b90;
}
