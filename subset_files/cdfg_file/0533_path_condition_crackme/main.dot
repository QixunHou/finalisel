digraph "DFG for'main' function" {
	Node0x1bd2da8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1bd2e28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1bd2eb8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1bd2f18[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1bd2fc8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1bd33f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bd34d8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1bd35d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bd3698[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1bd3748[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1bd3808[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1bd38b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1bcdbb0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1bd3ab8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1bd4a28[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1bd5098[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1bd50f8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1bd5170[shape=record, label="  %14 = and i32 %12, %11"];
	Node0x1bd51e0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1bd5250[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x1bd52c0[shape=record, label="  %17 = or i32 %12, %11"];
	Node0x1bd5330[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x1bd53a0[shape=record, label="  %19 = sub i32 %16, %18"];
	Node0x1bd5410[shape=record, label="  %20 = or i32 %19, 1"];
	Node0x1bd5480[shape=record, label="  %21 = sub i32 %20, %13"];
	Node0x1bd54f0[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0x1bd5560[shape=record, label="  %23 = xor i32 %11, %22"];
	Node0x1bd55d0[shape=record, label="  %24 = mul i32 %23, -2"];
	Node0x1bd5640[shape=record, label="  %25 = and i32 %11, %22"];
	Node0x1bd56b0[shape=record, label="  %26 = or i32 %24, 1"];
	Node0x1bd5720[shape=record, label="  %27 = or i32 %11, %22"];
	Node0x1bd5790[shape=record, label="  %28 = xor i32 %17, -1"];
	Node0x1bd5800[shape=record, label="  %29 = mul i32 %28, 7"];
	Node0x1bd5870[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x1bd58e0[shape=record, label="  %31 = or i32 %13, %10"];
	Node0x1bd5950[shape=record, label="  %32 = xor i32 %10, -1"];
	Node0x1bd59c0[shape=record, label="  %33 = and i32 %13, %32"];
	Node0x1bd5a30[shape=record, label="  %34 = or i32 %13, %32"];
	Node0x1bd5aa0[shape=record, label="  %35 = xor i32 %13, %10"];
	Node0x1bd5b10[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x1bd5b80[shape=record, label="  %37 = mul i32 %33, -3"];
	Node0x1bd5bf0[shape=record, label="  %38 = add i32 %31, %25"];
	Node0x1bd5c60[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x1bd5cd0[shape=record, label="  %40 = add i32 %30, %22"];
	Node0x1bd5d40[shape=record, label="  %41 = mul i32 %40, -5"];
	Node0x1bd5db0[shape=record, label="  %42 = sub i32 %25, %12"];
	Node0x1bd5e20[shape=record, label="  %43 = add i32 %42, %27"];
	Node0x1bd5e90[shape=record, label="  %44 = sub i32 %43, %14"];
	Node0x1bd5f00[shape=record, label="  %45 = add i32 %44, %29"];
	Node0x1bd5f70[shape=record, label="  %46 = add i32 %45, %30"];
	Node0x1bd5fe0[shape=record, label="  %47 = add i32 %46, %33"];
	Node0x1bd6050[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x1bd60c0[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x1bd6130[shape=record, label="  %50 = add i32 %49, %26"];
	Node0x1bd61a0[shape=record, label="  %51 = sub i32 %50, %36"];
	Node0x1bd6210[shape=record, label="  %52 = add i32 %51, %37"];
	Node0x1bd6280[shape=record, label="  %53 = add i32 %52, %39"];
	Node0x1bd62f0[shape=record, label="  %54 = add i32 %53, %41"];
	Node0x1bd6360[shape=record, label="  %55 = icmp eq i32 %21, %54"];
	Node0x1b728b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1bd63f0[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x1bd6698[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1bd67f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1bd6908[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1bd6a18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1bd6ad8[shape=record, label="  ret i32 0"];
	Node0x1bd2da8 -> Node0x1bd2e28;
	Node0x1bd2e28 -> Node0x1bd2eb8;
	Node0x1bd2eb8 -> Node0x1bd2f18;
	Node0x1bd2f18 -> Node0x1bd2fc8;
	Node0x1bd2fc8 -> Node0x1bd33f8;
	Node0x1bd33f8 -> Node0x1bd34d8;
	Node0x1bd34d8 -> Node0x1bd35d8;
	Node0x1bd35d8 -> Node0x1bd3698;
	Node0x1bd3698 -> Node0x1bd3748;
	Node0x1bd3748 -> Node0x1bd3808;
	Node0x1bd3808 -> Node0x1bd38b8;
	Node0x1bd38b8 -> Node0x1bcdbb0;
	Node0x1bcdbb0 -> Node0x1bd3ab8;
	Node0x1bd3ab8 -> Node0x1bd4a28;
	Node0x1bd4a28 -> Node0x1bd5098;
	Node0x1bd5098 -> Node0x1bd50f8;
	Node0x1bd50f8 -> Node0x1bd5170;
	Node0x1bd5170 -> Node0x1bd51e0;
	Node0x1bd51e0 -> Node0x1bd5250;
	Node0x1bd5250 -> Node0x1bd52c0;
	Node0x1bd52c0 -> Node0x1bd5330;
	Node0x1bd5330 -> Node0x1bd53a0;
	Node0x1bd53a0 -> Node0x1bd5410;
	Node0x1bd5410 -> Node0x1bd5480;
	Node0x1bd5480 -> Node0x1bd54f0;
	Node0x1bd54f0 -> Node0x1bd5560;
	Node0x1bd5560 -> Node0x1bd55d0;
	Node0x1bd55d0 -> Node0x1bd5640;
	Node0x1bd5640 -> Node0x1bd56b0;
	Node0x1bd56b0 -> Node0x1bd5720;
	Node0x1bd5720 -> Node0x1bd5790;
	Node0x1bd5790 -> Node0x1bd5800;
	Node0x1bd5800 -> Node0x1bd5870;
	Node0x1bd5870 -> Node0x1bd58e0;
	Node0x1bd58e0 -> Node0x1bd5950;
	Node0x1bd5950 -> Node0x1bd59c0;
	Node0x1bd59c0 -> Node0x1bd5a30;
	Node0x1bd5a30 -> Node0x1bd5aa0;
	Node0x1bd5aa0 -> Node0x1bd5b10;
	Node0x1bd5b10 -> Node0x1bd5b80;
	Node0x1bd5b80 -> Node0x1bd5bf0;
	Node0x1bd5bf0 -> Node0x1bd5c60;
	Node0x1bd5c60 -> Node0x1bd5cd0;
	Node0x1bd5cd0 -> Node0x1bd5d40;
	Node0x1bd5d40 -> Node0x1bd5db0;
	Node0x1bd5db0 -> Node0x1bd5e20;
	Node0x1bd5e20 -> Node0x1bd5e90;
	Node0x1bd5e90 -> Node0x1bd5f00;
	Node0x1bd5f00 -> Node0x1bd5f70;
	Node0x1bd5f70 -> Node0x1bd5fe0;
	Node0x1bd5fe0 -> Node0x1bd6050;
	Node0x1bd6050 -> Node0x1bd60c0;
	Node0x1bd60c0 -> Node0x1bd6130;
	Node0x1bd6130 -> Node0x1bd61a0;
	Node0x1bd61a0 -> Node0x1bd6210;
	Node0x1bd6210 -> Node0x1bd6280;
	Node0x1bd6280 -> Node0x1bd62f0;
	Node0x1bd62f0 -> Node0x1bd6360;
	Node0x1bd6360 -> Node0x1b728b8;
	Node0x1b728b8 -> Node0x1bd63f0;
	Node0x1bd63f0 -> Node0x1bd6698;
	Node0x1bd6698 -> Node0x1bd67f8;
	Node0x1bd67f8 -> Node0x1bd6908;
	Node0x1bd6908 -> Node0x1bd6a18;
	Node0x1bd6a18 -> Node0x1bd6ad8;
edge [color=red]
	Node0x1bd2da8 -> Node0x1bd2fc8;
	Node0x1bd2fc8 -> Node0x1bd33f8;
	Node0x1bd2e28 -> Node0x1bd34d8;
	Node0x1bd34d8 -> Node0x1bd35d8;
	Node0x1bd2eb8 -> Node0x1bd3698;
	Node0x1bd3698 -> Node0x1bd3748;
	Node0x1bd2f18 -> Node0x1bd3808;
	Node0x1bd3808 -> Node0x1bd38b8;
	Node0x1bd2da8 -> Node0x1bcdbb0;
	Node0x1bd2e28 -> Node0x1bcdbb0;
	Node0x1bd2eb8 -> Node0x1bcdbb0;
	Node0x1bd2f18 -> Node0x1bcdbb0;
	Node0x1bd2da8 -> Node0x1bd3ab8;
	Node0x1bd2e28 -> Node0x1bd4a28;
	Node0x1bd2eb8 -> Node0x1bd5098;
	Node0x1bd2f18 -> Node0x1bd50f8;
	Node0x1bd5098 -> Node0x1bd5170;
	Node0x1bd4a28 -> Node0x1bd5170;
	Node0x1bd5170 -> Node0x1bd51e0;
	Node0x1bd51e0 -> Node0x1bd5250;
	Node0x1bd5098 -> Node0x1bd52c0;
	Node0x1bd4a28 -> Node0x1bd52c0;
	Node0x1bd52c0 -> Node0x1bd5330;
	Node0x1bd5250 -> Node0x1bd53a0;
	Node0x1bd5330 -> Node0x1bd53a0;
	Node0x1bd53a0 -> Node0x1bd5410;
	Node0x1bd5410 -> Node0x1bd5480;
	Node0x1bd50f8 -> Node0x1bd5480;
	Node0x1bd5098 -> Node0x1bd54f0;
	Node0x1bd4a28 -> Node0x1bd5560;
	Node0x1bd54f0 -> Node0x1bd5560;
	Node0x1bd5560 -> Node0x1bd55d0;
	Node0x1bd4a28 -> Node0x1bd5640;
	Node0x1bd54f0 -> Node0x1bd5640;
	Node0x1bd55d0 -> Node0x1bd56b0;
	Node0x1bd4a28 -> Node0x1bd5720;
	Node0x1bd54f0 -> Node0x1bd5720;
	Node0x1bd52c0 -> Node0x1bd5790;
	Node0x1bd5790 -> Node0x1bd5800;
	Node0x1bd50f8 -> Node0x1bd5870;
	Node0x1bd3ab8 -> Node0x1bd5870;
	Node0x1bd50f8 -> Node0x1bd58e0;
	Node0x1bd3ab8 -> Node0x1bd58e0;
	Node0x1bd3ab8 -> Node0x1bd5950;
	Node0x1bd50f8 -> Node0x1bd59c0;
	Node0x1bd5950 -> Node0x1bd59c0;
	Node0x1bd50f8 -> Node0x1bd5a30;
	Node0x1bd5950 -> Node0x1bd5a30;
	Node0x1bd50f8 -> Node0x1bd5aa0;
	Node0x1bd3ab8 -> Node0x1bd5aa0;
	Node0x1bd5aa0 -> Node0x1bd5b10;
	Node0x1bd59c0 -> Node0x1bd5b80;
	Node0x1bd58e0 -> Node0x1bd5bf0;
	Node0x1bd5640 -> Node0x1bd5bf0;
	Node0x1bd5bf0 -> Node0x1bd5c60;
	Node0x1bd5870 -> Node0x1bd5cd0;
	Node0x1bd54f0 -> Node0x1bd5cd0;
	Node0x1bd5cd0 -> Node0x1bd5d40;
	Node0x1bd5640 -> Node0x1bd5db0;
	Node0x1bd5098 -> Node0x1bd5db0;
	Node0x1bd5db0 -> Node0x1bd5e20;
	Node0x1bd5720 -> Node0x1bd5e20;
	Node0x1bd5e20 -> Node0x1bd5e90;
	Node0x1bd5170 -> Node0x1bd5e90;
	Node0x1bd5e90 -> Node0x1bd5f00;
	Node0x1bd5800 -> Node0x1bd5f00;
	Node0x1bd5f00 -> Node0x1bd5f70;
	Node0x1bd5870 -> Node0x1bd5f70;
	Node0x1bd5f70 -> Node0x1bd5fe0;
	Node0x1bd59c0 -> Node0x1bd5fe0;
	Node0x1bd5fe0 -> Node0x1bd6050;
	Node0x1bd5a30 -> Node0x1bd6050;
	Node0x1bd6050 -> Node0x1bd60c0;
	Node0x1bd58e0 -> Node0x1bd60c0;
	Node0x1bd60c0 -> Node0x1bd6130;
	Node0x1bd56b0 -> Node0x1bd6130;
	Node0x1bd6130 -> Node0x1bd61a0;
	Node0x1bd5b10 -> Node0x1bd61a0;
	Node0x1bd61a0 -> Node0x1bd6210;
	Node0x1bd5b80 -> Node0x1bd6210;
	Node0x1bd6210 -> Node0x1bd6280;
	Node0x1bd5c60 -> Node0x1bd6280;
	Node0x1bd6280 -> Node0x1bd62f0;
	Node0x1bd5d40 -> Node0x1bd62f0;
	Node0x1bd5480 -> Node0x1bd6360;
	Node0x1bd62f0 -> Node0x1bd6360;
	Node0x1bd6360 -> Node0x1b728b8;
	Node0x1b728b8 -> Node0x1bd63f0;
	Node0x1bd3808 -> Node0x1bd6698;
	Node0x1bd3698 -> Node0x1bd67f8;
	Node0x1bd34d8 -> Node0x1bd6908;
	Node0x1bd2fc8 -> Node0x1bd6a18;
}
