; ModuleID = '../.././c_source_file/0959_path_condition_crackme.c'
source_filename = "../.././c_source_file/0959_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = and i32 %7, %0
  %9 = xor i32 %8, -1
  %10 = and i32 %9, %1
  %11 = xor i32 %3, -1
  %12 = or i32 %11, %4
  %13 = xor i32 %12, -1
  %14 = or i32 %13, %5
  %15 = sub i32 %10, %14
  %16 = shl i32 %15, 1
  %17 = and i32 %2, %1
  %18 = or i32 %17, %0
  %19 = or i32 %1, %0
  %20 = and i32 %1, %0
  %21 = or i32 %2, %1
  %22 = xor i32 %21, -1
  %23 = or i32 %20, %22
  %24 = xor i32 %1, -1
  %25 = or i32 %24, %0
  %26 = xor i32 %25, -1
  %27 = xor i32 %2, %0
  %28 = xor i32 %27, -1
  %29 = or i32 %28, %26
  %30 = or i32 %7, %1
  %31 = xor i32 %30, %0
  %32 = xor i32 %21, %20
  %33 = and i32 %2, %0
  %34 = xor i32 %33, %19
  %35 = xor i32 %2, %1
  %36 = or i32 %35, %20
  %37 = xor i32 %0, -1
  %38 = or i32 %30, %37
  %39 = or i32 %7, %26
  %40 = shl i32 %39, 1
  %41 = and i32 %35, %19
  %42 = and i32 %17, %0
  %43 = and i32 %35, %37
  %44 = or i32 %42, %43
  %45 = or i32 %2, %0
  %46 = xor i32 %45, -1
  %47 = or i32 %46, %24
  %48 = xor i32 %17, -1
  %49 = xor i32 %48, %0
  %50 = xor i32 %8, %48
  %51 = and i32 %24, %0
  %52 = xor i32 %30, -1
  %53 = add i32 %30, 1
  %54 = and i32 %17, %37
  %55 = and i32 %21, %0
  %56 = or i32 %54, %55
  %57 = xor i32 %1, %0
  %58 = xor i32 %57, -1
  %59 = or i32 %28, %58
  %60 = or i32 %35, %0
  %61 = or i32 %57, %7
  %62 = and i32 %9, %24
  %63 = add i32 %57, 1
  %64 = or i32 %20, %52
  %65 = xor i32 %35, -1
  %66 = and i32 %25, %65
  %67 = or i32 %7, %0
  %68 = xor i32 %67, -1
  %69 = shl i32 %68, 1
  %70 = and i32 %7, %1
  %71 = xor i32 %70, -1
  %72 = add i32 %70, 1
  %73 = and i32 %21, %37
  %74 = or i32 %65, %26
  %75 = shl i32 %74, 1
  %76 = and i32 %45, %57
  %77 = or i32 %48, %37
  %78 = or i32 %7, %58
  %79 = or i32 %51, %2
  %80 = xor i32 %19, -1
  %81 = or i32 %27, %80
  %82 = add i32 %27, 1
  %83 = and i32 %24, %2
  %84 = and i32 %83, %0
  %85 = xor i32 %35, %0
  %86 = or i32 %84, %85
  %87 = shl i32 %86, 1
  %88 = xor i32 %45, %20
  %89 = xor i32 %33, %21
  %90 = shl i32 %89, 1
  %91 = and i32 %25, %28
  %92 = and i32 %19, %65
  %93 = xor i32 %33, -1
  %94 = and i32 %57, %93
  %95 = or i32 %52, %0
  %96 = and i32 %93, %1
  %97 = or i32 %52, %37
  %98 = and i32 %57, %2
  %99 = or i32 %27, %20
  %100 = or i32 %42, %73
  %101 = and i32 %93, %24
  %102 = and i32 %67, %24
  %103 = shl i32 %102, 1
  %104 = and i32 %71, %0
  %105 = or i32 %33, %1
  %106 = and i32 %57, %28
  %107 = xor i32 %20, -1
  %108 = xor i32 %107, %2
  %109 = and i32 %35, %0
  %110 = or i32 %54, %109
  %111 = shl i32 %110, 1
  %112 = xor i32 %51, -1
  %113 = and i32 %27, %112
  %114 = add i32 %17, 1
  %115 = or i32 %33, %80
  %116 = shl i32 %93, 1
  %117 = or i32 %8, %24
  %118 = or i32 %68, %1
  %119 = shl i32 %118, 1
  %120 = or i32 %33, %70
  %121 = or i32 %22, %37
  %122 = shl i32 %121, 2
  %123 = xor i32 %112, %2
  %124 = or i32 %57, %68
  %125 = xor i32 %84, %60
  %126 = or i32 %68, %24
  %127 = and i32 %28, %1
  %128 = and i32 %35, %25
  %129 = and i32 %65, %107
  %130 = add i32 %8, 1
  %131 = or i32 %35, %37
  %132 = xor i32 %46, %1
  %133 = xor i32 %21, %0
  %134 = or i32 %42, %133
  %135 = and i32 %28, %107
  %136 = and i32 %19, %7
  %137 = xor i32 %42, -1
  %138 = xor i32 %43, %137
  %139 = and i32 %25, %7
  %140 = or i32 %30, %0
  %141 = or i32 %27, %1
  %142 = or i32 %70, %0
  %143 = or i32 %8, %1
  %144 = shl i32 %143, 1
  %145 = and i32 %67, %1
  %146 = xor i32 %67, %1
  %147 = and i32 %30, %37
  %148 = or i32 %24, %2
  %149 = and i32 %148, %37
  %150 = xor i32 %84, -1
  %151 = xor i32 %149, %150
  %152 = xor i32 %85, -1
  %153 = xor i32 %84, %152
  %154 = xor i32 %68, %1
  %155 = or i32 %65, %0
  %156 = xor i32 %42, %85
  %157 = and i32 %45, %24
  %158 = or i32 %51, %7
  %159 = xor i32 %8, %30
  %160 = or i32 %20, %65
  %161 = shl i32 %160, 1
  %162 = or i32 %8, %52
  %163 = and i32 %65, %37
  %164 = and i32 %19, %28
  %165 = or i32 %8, %17
  %166 = or i32 %21, %0
  %167 = or i32 %48, %0
  %168 = and i32 %30, %0
  %169 = or i32 %42, %152
  %170 = or i32 %33, %22
  %171 = or i32 %7, %80
  %172 = or i32 %65, %80
  %173 = or i32 %84, %149
  %174 = xor i32 %51, %2
  %175 = or i32 %20, %7
  %176 = and i32 %25, %2
  %177 = or i32 %71, %37
  %178 = and i32 %71, %37
  %179 = xor i32 %9, %1
  %180 = xor i32 %33, %25
  %181 = and i32 %83, %37
  %182 = and i32 %148, %0
  %183 = or i32 %181, %182
  %184 = xor i32 %33, %71
  %185 = shl i32 %184, 1
  %186 = and i32 %27, %57
  %187 = xor i32 %148, %0
  %188 = xor i32 %187, %150
  %189 = and i32 %107, %2
  %190 = xor i32 %8, %1
  %191 = xor i32 %19, %2
  %192 = add i32 %51, 1
  %193 = and i32 %7, %58
  %194 = and i32 %48, %37
  %195 = or i32 %20, %28
  %196 = xor i32 %52, %0
  %197 = shl i32 %196, 1
  %198 = or i32 %70, %51
  %199 = and i32 %7, %107
  %200 = or i32 %20, %2
  %201 = shl i32 %200, 1
  %202 = and i32 %19, %2
  %203 = shl i32 %202, 1
  %204 = xor i32 %71, %0
  %205 = and i32 %27, %25
  %206 = or i32 %84, %187
  %207 = shl i32 %206, 1
  %208 = or i32 %51, %65
  %209 = or i32 %33, %26
  %210 = or i32 %80, %2
  %211 = shl i32 %210, 1
  %212 = or i32 %20, %68
  %213 = or i32 %8, %58
  %214 = and i32 %28, %58
  %215 = and i32 %65, %0
  %216 = shl i32 %21, 1
  %217 = xor i32 %131, -1
  %218 = or i32 %181, %217
  %219 = and i32 %58, %2
  %220 = and i32 %35, %112
  %221 = or i32 %65, %37
  %222 = xor i32 %26, %2
  %223 = xor i32 %45, %1
  %224 = xor i32 %80, %2
  %225 = or i32 %46, %1
  %226 = or i32 %57, %2
  %227 = or i32 %57, %46
  %228 = xor i32 %182, 2147483647
  %229 = xor i32 %228, %181
  %230 = and i32 %57, %7
  %231 = or i32 %33, %57
  %232 = or i32 %27, %51
  %233 = or i32 %70, %37
  %234 = and i32 %28, %112
  %235 = and i32 %9, %58
  %236 = shl i32 %235, 2
  %237 = and i32 %67, %58
  %238 = or i32 %27, %26
  %239 = and i32 %48, %0
  %240 = or i32 %35, %26
  %241 = xor i32 %55, -1
  %242 = xor i32 %54, %241
  %243 = and i32 %28, %24
  %244 = or i32 %28, %24
  %245 = and i32 %35, %107
  %246 = shl i32 %245, 1
  %247 = or i32 %71, %0
  %248 = shl i32 %247, 1
  %249 = and i32 %65, %112
  %250 = or i32 %35, %51
  %251 = xor i32 %51, %48
  %252 = or i32 %27, %58
  %253 = shl i32 %252, 1
  %254 = or i32 %58, %2
  %255 = xor i32 %70, %0
  %256 = xor i32 %33, %1
  %257 = xor i32 %67, %20
  %258 = or i32 %46, %58
  %259 = xor i32 %133, %137
  %260 = or i32 %27, %57
  %261 = and i32 %27, %107
  %262 = shl i32 %261, 1
  %263 = xor i32 %60, -1
  %264 = or i32 %84, %263
  %265 = or i32 %17, %37
  %266 = or i32 %33, %58
  %267 = xor i32 %30, %20
  %268 = and i32 %7, %112
  %269 = xor i32 %51, %71
  %270 = or i32 %20, %46
  %271 = and i32 %57, %9
  %272 = and i32 %112, %2
  %273 = and i32 %45, %1
  %274 = add i32 %20, 1
  %275 = xor i32 %109, 2147483647
  %276 = xor i32 %275, %54
  %277 = and i32 %27, %19
  %278 = and i32 %45, %58
  %279 = or i32 %17, %51
  %280 = add i32 %35, 1
  %281 = or i32 %28, %80
  %282 = xor i32 %93, %1
  %283 = or i32 %22, %0
  %284 = xor i32 %181, %131
  %285 = shl i32 %284, 1
  %286 = or i32 %8, %57
  %287 = or i32 %21, %37
  %288 = or i32 %33, %24
  %289 = xor i32 %65, %0
  %290 = or i32 %27, %24
  %291 = or i32 %26, %2
  %292 = xor i32 %17, %0
  %293 = xor i32 %22, %0
  %294 = or i32 %35, %80
  %295 = xor i32 %20, %2
  %296 = xor i32 %73, %137
  %297 = and i32 %22, %37
  %298 = and i32 %70, %37
  %299 = and i32 %22, %0
  %300 = and i32 %70, %0
  %301 = and i32 %52, %37
  %302 = mul i32 %301, 10
  %303 = mul i32 %54, 7
  %304 = and i32 %52, %0
  %305 = mul i32 %42, 19
  %306 = and i32 %11, %4
  %307 = xor i32 %5, %3
  %308 = or i32 %307, %306
  %309 = xor i32 %4, -1
  %310 = or i32 %307, %309
  %311 = xor i32 %5, %4
  %312 = and i32 %311, %12
  %313 = or i32 %4, %3
  %314 = xor i32 %313, -1
  %315 = xor i32 %311, -1
  %316 = or i32 %315, %314
  %317 = and i32 %4, %3
  %318 = or i32 %5, %3
  %319 = xor i32 %318, -1
  %320 = or i32 %317, %319
  %321 = or i32 %306, %5
  %322 = xor i32 %4, %3
  %323 = and i32 %322, %5
  %324 = xor i32 %322, -1
  %325 = and i32 %324, %5
  %326 = xor i32 %5, -1
  %327 = and i32 %326, %3
  %328 = or i32 %5, %4
  %329 = and i32 %5, %3
  %330 = and i32 %329, %4
  %331 = and i32 %318, %309
  %332 = or i32 %330, %331
  %333 = xor i32 %329, %4
  %334 = and i32 %326, %4
  %335 = xor i32 %334, %3
  %336 = and i32 %5, %4
  %337 = or i32 %336, %324
  %338 = or i32 %326, %4
  %339 = or i32 %317, %326
  %340 = shl i32 %339, 1
  %341 = or i32 %318, %309
  %342 = and i32 %11, %5
  %343 = and i32 %342, %4
  %344 = or i32 %11, %5
  %345 = xor i32 %344, %4
  %346 = xor i32 %345, 2147483647
  %347 = xor i32 %346, %343
  %348 = xor i32 %318, %317
  %349 = xor i32 %338, -1
  %350 = or i32 %349, %3
  %351 = xor i32 %329, -1
  %352 = or i32 %351, %4
  %353 = and i32 %311, %324
  %354 = and i32 %328, %11
  %355 = or i32 %326, %3
  %356 = xor i32 %355, -1
  %357 = or i32 %356, %309
  %358 = xor i32 %356, %4
  %359 = or i32 %306, %326
  %360 = xor i32 %306, -1
  %361 = add i32 %306, 1
  %362 = xor i32 %307, -1
  %363 = or i32 %317, %362
  %364 = and i32 %311, %313
  %365 = and i32 %318, %4
  %366 = and i32 %307, %360
  %367 = or i32 %318, %4
  %368 = shl i32 %367, 1
  %369 = xor i32 %336, %313
  %370 = xor i32 %334, -1
  %371 = and i32 %322, %370
  %372 = or i32 %317, %356
  %373 = and i32 %370, %324
  %374 = or i32 %319, %309
  %375 = xor i32 %334, %355
  %376 = shl i32 %375, 1
  %377 = and i32 %322, %315
  %378 = or i32 %329, %306
  %379 = shl i32 %378, 1
  %380 = or i32 %311, %3
  %381 = xor i32 %327, -1
  %382 = xor i32 %306, %381
  %383 = or i32 %317, %315
  %384 = xor i32 %306, %351
  %385 = and i32 %313, %5
  %386 = or i32 %311, %317
  %387 = xor i32 %317, -1
  %388 = and i32 %311, %387
  %389 = shl i32 %388, 1
  %390 = or i32 %329, %309
  %391 = and i32 %313, %362
  %392 = xor i32 %328, %3
  %393 = and i32 %12, %362
  %394 = and i32 %307, %12
  %395 = shl i32 %394, 2
  %396 = xor i32 %336, -1
  %397 = add i32 %322, 1
  %398 = and i32 %381, %309
  %399 = or i32 %317, %349
  %400 = and i32 %329, %309
  %401 = and i32 %307, %4
  %402 = xor i32 %401, -1
  %403 = xor i32 %400, %402
  %404 = and i32 %342, %309
  %405 = xor i32 %310, -1
  %406 = or i32 %404, %405
  %407 = or i32 %315, %11
  %408 = and i32 %370, %3
  %409 = shl i32 %408, 1
  %410 = and i32 %322, %396
  %411 = or i32 %311, %322
  %412 = and i32 %326, %360
  %413 = shl i32 %412, 1
  %414 = xor i32 %318, %4
  %415 = add i32 %313, 1
  %416 = xor i32 %336, %318
  %417 = and i32 %326, %324
  %418 = shl i32 %417, 1
  %419 = or i32 %311, %314
  %420 = xor i32 %307, %4
  %421 = xor i32 %330, %420
  %422 = xor i32 %404, %310
  %423 = and i32 %344, %309
  %424 = or i32 %343, %423
  %425 = and i32 %307, %309
  %426 = add i32 %355, 1
  %427 = xor i32 %328, -1
  %428 = xor i32 %351, %4
  %429 = or i32 %334, %356
  %430 = xor i32 %327, %4
  %431 = or i32 %307, %4
  %432 = xor i32 %431, -1
  %433 = or i32 %343, %432
  %434 = or i32 %400, %401
  %435 = or i32 %324, %5
  %436 = or i32 %326, %13
  %437 = or i32 %319, %4
  %438 = and i32 %338, %3
  %439 = shl i32 %438, 2
  %440 = and i32 %338, %322
  %441 = or i32 %330, %414
  %442 = and i32 %307, %313
  %443 = and i32 %396, %11
  %444 = or i32 %315, %3
  %445 = or i32 %336, %319
  %446 = or i32 %336, %314
  %447 = shl i32 %446, 1
  %448 = xor i32 %414, 2147483647
  %449 = xor i32 %448, %330
  %450 = shl i32 %449, 1
  %451 = xor i32 %365, 2147483647
  %452 = xor i32 %451, %400
  %453 = shl i32 %452, 1
  %454 = shl i32 %317, 1
  %455 = xor i32 %370, %3
  %456 = and i32 %381, %4
  %457 = xor i32 %314, %5
  %458 = or i32 %322, %349
  %459 = shl i32 %458, 2
  %460 = or i32 %343, %420
  %461 = shl i32 %460, 1
  %462 = and i32 %322, %326
  %463 = xor i32 %338, %317
  %464 = or i32 %306, %362
  %465 = and i32 %355, %4
  %466 = and i32 %396, %3
  %467 = shl i32 %466, 1
  %468 = and i32 %362, %4
  %469 = and i32 %315, %324
  %470 = or i32 %306, %315
  %471 = and i32 %315, %11
  %472 = or i32 %307, %317
  %473 = and i32 %315, %387
  %474 = or i32 %329, %4
  %475 = and i32 %338, %11
  %476 = xor i32 %387, %5
  %477 = or i32 %381, %4
  %478 = xor i32 %330, -1
  %479 = xor i32 %331, %478
  %480 = xor i32 %425, %478
  %481 = or i32 %427, %11
  %482 = xor i32 %338, %3
  %483 = xor i32 %420, -1
  %484 = or i32 %330, %483
  %485 = shl i32 %484, 1
  %486 = or i32 %349, %324
  %487 = and i32 %311, %3
  %488 = xor i32 %362, %4
  %489 = or i32 %362, %4
  %490 = or i32 %327, %306
  %491 = and i32 %362, %387
  %492 = xor i32 %355, %317
  %493 = or i32 %334, %324
  %494 = or i32 %326, %314
  %495 = and i32 %326, %387
  %496 = and i32 %313, %315
  %497 = and i32 %370, %11
  %498 = or i32 %427, %324
  %499 = xor i32 %360, %5
  %500 = shl i32 %499, 1
  %501 = xor i32 %381, %4
  %502 = or i32 %427, %3
  %503 = and i32 %328, %322
  %504 = or i32 %317, %427
  %505 = shl i32 %504, 1
  %506 = and i32 %328, %3
  %507 = or i32 %362, %13
  %508 = or i32 %336, %13
  %509 = or i32 %322, %315
  %510 = or i32 %311, %13
  %511 = or i32 %336, %11
  %512 = shl i32 %511, 1
  %513 = or i32 %355, %309
  %514 = or i32 %334, %11
  %515 = or i32 %334, %3
  %516 = or i32 %334, %329
  %517 = and i32 %315, %3
  %518 = or i32 %343, %345
  %519 = or i32 %314, %5
  %520 = add i32 %3, 1
  %521 = and i32 %362, %309
  %522 = and i32 %328, %324
  %523 = xor i32 %328, %317
  %524 = or i32 %356, %4
  %525 = xor i32 %343, %483
  %526 = and i32 %362, %360
  %527 = and i32 %338, %324
  %528 = or i32 %330, %425
  %529 = shl i32 %528, 1
  %530 = xor i32 %336, %12
  %531 = shl i32 %530, 1
  %532 = and i32 %311, %11
  %533 = or i32 %317, %5
  %534 = xor i32 %306, %5
  %535 = or i32 %307, %13
  %536 = or i32 %327, %4
  %537 = or i32 %307, %314
  %538 = xor i32 %317, %5
  %539 = xor i32 %343, %431
  %540 = xor i32 %423, -1
  %541 = xor i32 %343, %540
  %542 = and i32 %12, %326
  %543 = or i32 %336, %322
  %544 = shl i32 %543, 1
  %545 = and i32 %351, %309
  %546 = shl i32 %545, 1
  %547 = or i32 %351, %309
  %548 = xor i32 %355, %4
  %549 = and i32 %315, %360
  %550 = xor i32 %12, %5
  %551 = xor i32 %336, %3
  %552 = and i32 %311, %322
  %553 = and i32 %313, %326
  %554 = shl i32 %306, 1
  %555 = or i32 %322, %326
  %556 = or i32 %349, %11
  %557 = and i32 %351, %4
  %558 = or i32 %311, %306
  %559 = or i32 %315, %13
  %560 = xor i32 %349, %3
  %561 = and i32 %360, %5
  %562 = and i32 %396, %324
  %563 = or i32 %336, %327
  %564 = or i32 %362, %309
  %565 = or i32 %311, %11
  %566 = or i32 %400, %365
  %567 = or i32 %336, %3
  %568 = or i32 %322, %5
  %569 = and i32 %355, %309
  %570 = or i32 %315, %324
  %571 = xor i32 %427, %3
  %572 = and i32 %307, %387
  %573 = or i32 %355, %4
  %574 = and i32 %387, %5
  %575 = or i32 %311, %324
  %576 = or i32 %327, %309
  %577 = xor i32 %13, %5
  %578 = and i32 %12, %315
  %579 = xor i32 %334, %351
  %580 = and i32 %344, %4
  %581 = or i32 %404, %580
  %582 = or i32 %381, %309
  %583 = add i32 %307, 1
  %584 = or i32 %334, %322
  %585 = xor i32 %319, %4
  %586 = xor i32 %396, %3
  %587 = and i32 %12, %5
  %588 = and i32 %319, %309
  %589 = and i32 %327, %309
  %590 = shl i32 %589, 4
  %591 = and i32 %319, %4
  %592 = shl i32 %591, 3
  %593 = and i32 %327, %4
  %594 = mul i32 %593, -13
  %595 = and i32 %356, %309
  %596 = shl i32 %595, 3
  %597 = and i32 %356, %4
  %598 = mul i32 %597, -24
  %599 = add i32 %27, %2
  %600 = add i32 %599, %46
  %601 = add i32 %600, %189
  %602 = add i32 %601, %67
  %603 = add i32 %602, %290
  %604 = add i32 %603, %238
  %605 = add i32 %604, %221
  %606 = add i32 %605, %209
  %607 = add i32 %606, %204
  %608 = add i32 %607, %198
  %609 = add i32 %608, %194
  %610 = add i32 %609, %190
  %611 = add i32 %610, %166
  %612 = add i32 %611, %163
  %613 = add i32 %612, %140
  %614 = add i32 %613, %128
  %615 = add i32 %614, %109
  %616 = add i32 %615, %115
  %617 = add i32 %616, %101
  %618 = add i32 %617, %92
  %619 = add i32 %618, %322
  %620 = add i32 %619, %326
  %621 = add i32 %620, %13
  %622 = add i32 %621, %156
  %623 = add i32 %622, %561
  %624 = add i32 %623, %381
  %625 = add i32 %624, %457
  %626 = add i32 %625, %396
  %627 = add i32 %626, %385
  %628 = add i32 %627, %276
  %629 = add i32 %628, %229
  %630 = add i32 %629, %431
  %631 = add i32 %630, %549
  %632 = add i32 %631, %536
  %633 = add i32 %632, %535
  %634 = add i32 %633, %524
  %635 = add i32 %634, %510
  %636 = add i32 %635, %496
  %637 = add i32 %636, %489
  %638 = add i32 %637, %463
  %639 = add i32 %638, %456
  %640 = add i32 %639, %443
  %641 = add i32 %640, %354
  %642 = add i32 %641, %348
  %643 = add i32 %642, %434
  %644 = add i32 %643, %347
  %645 = shl i32 %644, 1
  %646 = sub i32 %233, %272
  %647 = add i32 %646, %132
  %648 = add i32 %647, %104
  %649 = add i32 %648, %91
  %650 = add i32 %649, %415
  %651 = sub i32 %650, %264
  %652 = sub i32 %651, %492
  %653 = add i32 %652, %582
  %654 = sub i32 %653, %369
  %655 = mul i32 %654, 3
  %656 = add i32 %94, %193
  %657 = add i32 %656, %36
  %658 = add i32 %657, %318
  %659 = add i32 %658, %526
  %660 = shl i32 %659, 2
  %661 = mul i32 %329, -11
  %662 = add i32 %304, %297
  %663 = mul i32 %662, -9
  %664 = xor i32 %300, -1
  %665 = sub i32 %664, %298
  %666 = add i32 %665, %227
  %667 = sub i32 %666, %172
  %668 = sub i32 %667, %106
  %669 = sub i32 %668, %5
  %670 = add i32 %669, %173
  %671 = sub i32 %670, %588
  %672 = sub i32 %671, %552
  %673 = sub i32 %672, %517
  %674 = add i32 %673, %493
  %675 = sub i32 %674, %482
  %676 = add i32 %675, %428
  %677 = add i32 %676, %480
  %678 = mul i32 %677, 5
  %679 = sub i32 -4, %19
  %680 = add i32 %679, %51
  %681 = add i32 %680, %63
  %682 = add i32 %681, %7
  %683 = add i32 %682, %192
  %684 = sub i32 %683, %57
  %685 = add i32 %684, %20
  %686 = add i32 %685, %274
  %687 = add i32 %686, %53
  %688 = add i32 %687, %61
  %689 = add i32 %688, %72
  %690 = add i32 %689, %78
  %691 = add i32 %690, %79
  %692 = add i32 %691, %82
  %693 = add i32 %692, %98
  %694 = sub i32 %693, %108
  %695 = add i32 %694, %114
  %696 = add i32 %695, %123
  %697 = add i32 %696, %130
  %698 = sub i32 %697, %136
  %699 = add i32 %698, %139
  %700 = sub i32 %699, %158
  %701 = add i32 %700, %171
  %702 = sub i32 %701, %174
  %703 = sub i32 %702, %175
  %704 = sub i32 %703, %176
  %705 = add i32 %704, %191
  %706 = sub i32 %705, %30
  %707 = sub i32 %706, %35
  %708 = add i32 %707, %17
  %709 = add i32 %708, %199
  %710 = add i32 %709, %219
  %711 = sub i32 %710, %222
  %712 = sub i32 %711, %224
  %713 = add i32 %712, %226
  %714 = add i32 %713, %22
  %715 = sub i32 %714, %230
  %716 = sub i32 %715, %33
  %717 = sub i32 %716, %45
  %718 = add i32 %717, %254
  %719 = sub i32 %718, %268
  %720 = add i32 %719, %280
  %721 = sub i32 %720, %291
  %722 = add i32 %721, %295
  %723 = add i32 %722, %3
  %724 = add i32 %723, %520
  %725 = sub i32 %724, %18
  %726 = sub i32 %725, %23
  %727 = sub i32 %726, %29
  %728 = add i32 %727, %31
  %729 = add i32 %728, %32
  %730 = sub i32 %729, %34
  %731 = add i32 %730, %38
  %732 = sub i32 %731, %40
  %733 = sub i32 %732, %41
  %734 = sub i32 %733, %47
  %735 = add i32 %734, %49
  %736 = sub i32 %735, %50
  %737 = sub i32 %736, %59
  %738 = sub i32 %737, %60
  %739 = sub i32 %738, %62
  %740 = sub i32 %739, %64
  %741 = sub i32 %740, %66
  %742 = sub i32 %741, %69
  %743 = sub i32 %742, %73
  %744 = sub i32 %743, %76
  %745 = sub i32 %744, %77
  %746 = add i32 %745, %81
  %747 = sub i32 %746, %88
  %748 = add i32 %747, %95
  %749 = sub i32 %748, %96
  %750 = add i32 %749, %97
  %751 = sub i32 %750, %99
  %752 = sub i32 %751, %105
  %753 = sub i32 %752, %113
  %754 = sub i32 %753, %116
  %755 = add i32 %754, %117
  %756 = sub i32 %755, %120
  %757 = sub i32 %756, %124
  %758 = sub i32 %757, %126
  %759 = sub i32 %758, %127
  %760 = add i32 %759, %129
  %761 = add i32 %760, %131
  %762 = sub i32 %761, %135
  %763 = sub i32 %762, %141
  %764 = sub i32 %763, %142
  %765 = sub i32 %764, %145
  %766 = sub i32 %765, %146
  %767 = add i32 %766, %147
  %768 = add i32 %767, %154
  %769 = add i32 %768, %155
  %770 = sub i32 %769, %85
  %771 = sub i32 %770, %157
  %772 = sub i32 %771, %159
  %773 = add i32 %772, %162
  %774 = add i32 %773, %164
  %775 = add i32 %774, %165
  %776 = add i32 %775, %167
  %777 = sub i32 %776, %168
  %778 = sub i32 %777, %170
  %779 = add i32 %778, %55
  %780 = add i32 %779, %177
  %781 = sub i32 %780, %133
  %782 = add i32 %781, %178
  %783 = sub i32 %782, %179
  %784 = sub i32 %783, %180
  %785 = sub i32 %784, %186
  %786 = sub i32 %785, %195
  %787 = sub i32 %786, %201
  %788 = sub i32 %787, %203
  %789 = add i32 %788, %205
  %790 = add i32 %789, %208
  %791 = sub i32 %790, %211
  %792 = add i32 %791, %212
  %793 = sub i32 %792, %213
  %794 = sub i32 %793, %214
  %795 = add i32 %794, %215
  %796 = sub i32 %795, %216
  %797 = add i32 %796, %220
  %798 = add i32 %797, %223
  %799 = sub i32 %798, %225
  %800 = add i32 %799, %231
  %801 = add i32 %800, %232
  %802 = add i32 %801, %234
  %803 = add i32 %802, %237
  %804 = sub i32 %803, %239
  %805 = sub i32 %804, %240
  %806 = add i32 %805, %243
  %807 = add i32 %806, %244
  %808 = sub i32 %807, %249
  %809 = add i32 %808, %250
  %810 = sub i32 %809, %251
  %811 = add i32 %810, %255
  %812 = add i32 %811, %256
  %813 = add i32 %812, %257
  %814 = sub i32 %813, %258
  %815 = sub i32 %814, %260
  %816 = add i32 %815, %265
  %817 = sub i32 %816, %266
  %818 = add i32 %817, %267
  %819 = sub i32 %818, %269
  %820 = sub i32 %819, %270
  %821 = add i32 %820, %271
  %822 = add i32 %821, %273
  %823 = sub i32 %822, %277
  %824 = add i32 %823, %278
  %825 = sub i32 %824, %279
  %826 = add i32 %825, %281
  %827 = sub i32 %826, %282
  %828 = add i32 %827, %283
  %829 = add i32 %828, %286
  %830 = add i32 %829, %287
  %831 = add i32 %830, %288
  %832 = add i32 %831, %289
  %833 = add i32 %832, %292
  %834 = sub i32 %833, %293
  %835 = add i32 %834, %294
  %836 = sub i32 %835, %299
  %837 = sub i32 %836, %44
  %838 = add i32 %837, %56
  %839 = sub i32 %838, %75
  %840 = sub i32 %839, %90
  %841 = add i32 %840, %100
  %842 = sub i32 %841, %103
  %843 = sub i32 %842, %119
  %844 = sub i32 %843, %122
  %845 = sub i32 %844, %125
  %846 = add i32 %845, %134
  %847 = sub i32 %846, %138
  %848 = sub i32 %847, %144
  %849 = sub i32 %848, %151
  %850 = add i32 %849, %153
  %851 = sub i32 %850, %161
  %852 = sub i32 %851, %169
  %853 = sub i32 %852, %183
  %854 = sub i32 %853, %185
  %855 = add i32 %854, %188
  %856 = sub i32 %855, %197
  %857 = sub i32 %856, %218
  %858 = sub i32 %857, %236
  %859 = add i32 %858, %242
  %860 = sub i32 %859, %246
  %861 = sub i32 %860, %248
  %862 = sub i32 %861, %253
  %863 = add i32 %862, %259
  %864 = sub i32 %863, %262
  %865 = add i32 %864, %296
  %866 = add i32 %865, %302
  %867 = add i32 %866, %303
  %868 = add i32 %867, %305
  %869 = add i32 %868, %313
  %870 = add i32 %869, %12
  %871 = add i32 %870, %361
  %872 = add i32 %871, %397
  %873 = add i32 %872, %387
  %874 = sub i32 %873, %87
  %875 = sub i32 %874, %111
  %876 = sub i32 %875, %207
  %877 = sub i32 %876, %285
  %878 = add i32 %877, %321
  %879 = add i32 %878, %323
  %880 = sub i32 %879, %325
  %881 = add i32 %880, %327
  %882 = sub i32 %881, %328
  %883 = add i32 %882, %359
  %884 = add i32 %883, %426
  %885 = add i32 %884, %427
  %886 = add i32 %885, %435
  %887 = add i32 %886, %436
  %888 = add i32 %887, %307
  %889 = sub i32 %888, %454
  %890 = sub i32 %889, %462
  %891 = add i32 %890, %355
  %892 = add i32 %891, %476
  %893 = add i32 %892, %319
  %894 = sub i32 %893, %494
  %895 = sub i32 %894, %495
  %896 = sub i32 %895, %336
  %897 = sub i32 %896, %519
  %898 = sub i32 %897, %533
  %899 = sub i32 %898, %534
  %900 = add i32 %899, %370
  %901 = sub i32 %900, %538
  %902 = sub i32 %901, %542
  %903 = sub i32 %902, %550
  %904 = sub i32 %903, %553
  %905 = sub i32 %904, %554
  %906 = sub i32 %905, %555
  %907 = sub i32 %906, %334
  %908 = add i32 %907, %568
  %909 = add i32 %908, %574
  %910 = add i32 %909, %577
  %911 = add i32 %910, %583
  %912 = sub i32 %911, %587
  %913 = add i32 %912, %663
  %914 = add i32 %913, %308
  %915 = sub i32 %914, %310
  %916 = add i32 %915, %312
  %917 = add i32 %916, %316
  %918 = sub i32 %917, %320
  %919 = add i32 %918, %333
  %920 = add i32 %919, %335
  %921 = sub i32 %920, %337
  %922 = sub i32 %921, %340
  %923 = sub i32 %922, %341
  %924 = sub i32 %923, %350
  %925 = add i32 %924, %352
  %926 = add i32 %925, %353
  %927 = sub i32 %926, %357
  %928 = sub i32 %927, %358
  %929 = sub i32 %928, %363
  %930 = sub i32 %929, %364
  %931 = add i32 %930, %365
  %932 = add i32 %931, %366
  %933 = sub i32 %932, %371
  %934 = sub i32 %933, %372
  %935 = add i32 %934, %373
  %936 = add i32 %935, %374
  %937 = sub i32 %936, %377
  %938 = add i32 %937, %380
  %939 = sub i32 %938, %382
  %940 = add i32 %939, %383
  %941 = sub i32 %940, %384
  %942 = add i32 %941, %386
  %943 = sub i32 %942, %390
  %944 = sub i32 %943, %391
  %945 = add i32 %944, %392
  %946 = add i32 %945, %393
  %947 = add i32 %946, %398
  %948 = sub i32 %947, %399
  %949 = sub i32 %948, %407
  %950 = add i32 %949, %410
  %951 = add i32 %950, %411
  %952 = sub i32 %951, %413
  %953 = sub i32 %952, %414
  %954 = add i32 %953, %416
  %955 = sub i32 %954, %418
  %956 = add i32 %955, %419
  %957 = add i32 %956, %425
  %958 = add i32 %957, %429
  %959 = sub i32 %958, %430
  %960 = add i32 %959, %437
  %961 = add i32 %960, %440
  %962 = sub i32 %961, %442
  %963 = add i32 %962, %444
  %964 = sub i32 %963, %445
  %965 = add i32 %964, %455
  %966 = add i32 %965, %464
  %967 = add i32 %966, %465
  %968 = sub i32 %967, %468
  %969 = sub i32 %968, %469
  %970 = add i32 %969, %470
  %971 = add i32 %970, %471
  %972 = add i32 %971, %472
  %973 = add i32 %972, %473
  %974 = add i32 %973, %474
  %975 = sub i32 %974, %475
  %976 = add i32 %975, %420
  %977 = sub i32 %976, %477
  %978 = add i32 %977, %481
  %979 = sub i32 %978, %486
  %980 = add i32 %979, %487
  %981 = add i32 %980, %488
  %982 = sub i32 %981, %490
  %983 = sub i32 %982, %491
  %984 = sub i32 %983, %497
  %985 = add i32 %984, %498
  %986 = sub i32 %985, %500
  %987 = add i32 %986, %501
  %988 = add i32 %987, %502
  %989 = add i32 %988, %503
  %990 = sub i32 %989, %506
  %991 = sub i32 %990, %507
  %992 = add i32 %991, %508
  %993 = add i32 %992, %509
  %994 = sub i32 %993, %513
  %995 = sub i32 %994, %514
  %996 = sub i32 %995, %515
  %997 = add i32 %996, %516
  %998 = sub i32 %997, %521
  %999 = sub i32 %998, %522
  %1000 = sub i32 %999, %523
  %1001 = add i32 %1000, %527
  %1002 = sub i32 %1001, %532
  %1003 = sub i32 %1002, %537
  %1004 = add i32 %1003, %547
  %1005 = sub i32 %1004, %548
  %1006 = add i32 %1005, %551
  %1007 = add i32 %1006, %556
  %1008 = sub i32 %1007, %557
  %1009 = sub i32 %1008, %558
  %1010 = add i32 %1009, %559
  %1011 = sub i32 %1010, %560
  %1012 = add i32 %1011, %562
  %1013 = add i32 %1012, %331
  %1014 = sub i32 %1013, %563
  %1015 = add i32 %1014, %401
  %1016 = sub i32 %1015, %564
  %1017 = add i32 %1016, %565
  %1018 = add i32 %1017, %567
  %1019 = sub i32 %1018, %569
  %1020 = sub i32 %1019, %570
  %1021 = sub i32 %1020, %571
  %1022 = sub i32 %1021, %572
  %1023 = add i32 %1022, %573
  %1024 = sub i32 %1023, %575
  %1025 = add i32 %1024, %576
  %1026 = sub i32 %1025, %578
  %1027 = add i32 %1026, %579
  %1028 = sub i32 %1027, %584
  %1029 = add i32 %1028, %585
  %1030 = sub i32 %1029, %586
  %1031 = sub i32 %1030, %332
  %1032 = sub i32 %1031, %368
  %1033 = sub i32 %1032, %376
  %1034 = sub i32 %1033, %379
  %1035 = sub i32 %1034, %389
  %1036 = sub i32 %1035, %395
  %1037 = sub i32 %1036, %403
  %1038 = sub i32 %1037, %406
  %1039 = sub i32 %1038, %409
  %1040 = sub i32 %1039, %421
  %1041 = add i32 %1040, %422
  %1042 = sub i32 %1041, %424
  %1043 = sub i32 %1042, %433
  %1044 = sub i32 %1043, %439
  %1045 = add i32 %1044, %441
  %1046 = sub i32 %1045, %447
  %1047 = sub i32 %1046, %459
  %1048 = sub i32 %1047, %467
  %1049 = sub i32 %1048, %479
  %1050 = sub i32 %1049, %505
  %1051 = sub i32 %1050, %512
  %1052 = add i32 %1051, %518
  %1053 = sub i32 %1052, %525
  %1054 = sub i32 %1053, %531
  %1055 = add i32 %1054, %539
  %1056 = add i32 %1055, %541
  %1057 = sub i32 %1056, %544
  %1058 = sub i32 %1057, %546
  %1059 = add i32 %1058, %566
  %1060 = add i32 %1059, %581
  %1061 = sub i32 %1060, %590
  %1062 = sub i32 %1061, %592
  %1063 = add i32 %1062, %594
  %1064 = sub i32 %1063, %596
  %1065 = add i32 %1064, %598
  %1066 = sub i32 %1065, %461
  %1067 = sub i32 %1066, %485
  %1068 = sub i32 %1067, %529
  %1069 = add i32 %1068, %661
  %1070 = sub i32 %1069, %450
  %1071 = sub i32 %1070, %453
  %1072 = add i32 %1071, %660
  %1073 = add i32 %1072, %655
  %1074 = add i32 %1073, %678
  %1075 = add i32 %1074, %645
  %1076 = icmp eq i32 %16, %1075
  %1077 = select i1 %1076, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1078 = tail call i32 @puts(i8* nonnull dereferenceable(1) %1077)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
