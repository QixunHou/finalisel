digraph "DFG for'main' function" {
	Node0x1405b28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1405ba8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1405c38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1405c98[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1406118[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14088f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x14089d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1408a98[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1408b48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1408da8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1408e68[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1409dd8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x140a448[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x140a540[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x140a748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x140a8a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x140a9b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x140aa78[shape=record, label="  ret i32 0"];
	Node0x1405b28 -> Node0x1405ba8;
	Node0x1405ba8 -> Node0x1405c38;
	Node0x1405c38 -> Node0x1405c98;
	Node0x1405c98 -> Node0x1406118;
	Node0x1406118 -> Node0x14088f8;
	Node0x14088f8 -> Node0x14089d8;
	Node0x14089d8 -> Node0x1408a98;
	Node0x1408a98 -> Node0x1408b48;
	Node0x1408b48 -> Node0x1408da8;
	Node0x1408da8 -> Node0x1408e68;
	Node0x1408e68 -> Node0x1409dd8;
	Node0x1409dd8 -> Node0x140a448;
	Node0x140a448 -> Node0x140a540;
	Node0x140a540 -> Node0x140a748;
	Node0x140a748 -> Node0x140a8a8;
	Node0x140a8a8 -> Node0x140a9b8;
	Node0x140a9b8 -> Node0x140aa78;
edge [color=red]
	Node0x1405b28 -> Node0x1405c98;
	Node0x1405c98 -> Node0x1406118;
	Node0x1405ba8 -> Node0x14088f8;
	Node0x14088f8 -> Node0x14089d8;
	Node0x1405c38 -> Node0x1408a98;
	Node0x1408a98 -> Node0x1408b48;
	Node0x1405b28 -> Node0x1408da8;
	Node0x1405ba8 -> Node0x1408da8;
	Node0x1405c38 -> Node0x1408da8;
	Node0x1405b28 -> Node0x1408e68;
	Node0x1405ba8 -> Node0x1409dd8;
	Node0x1405c38 -> Node0x140a448;
	Node0x1408e68 -> Node0x140a540;
	Node0x1409dd8 -> Node0x140a540;
	Node0x140a448 -> Node0x140a540;
	Node0x1408a98 -> Node0x140a748;
	Node0x14088f8 -> Node0x140a8a8;
	Node0x1405c98 -> Node0x140a9b8;
}
