digraph "DFG for'crackme' function" {
	Node0x1857660[shape=record, label="  %4 = and i32 %2, %1"];
	Node0x1857720[shape=record, label="  %5 = or i32 %2, %0"];
	Node0x1857790[shape=record, label="  %6 = xor i32 %1, %0"];
	Node0x1857800[shape=record, label="  %7 = and i32 %5, %6"];
	Node0x1857e80[shape=record, label="  %8 = xor i32 %1, -1"];
	Node0x1857ef0[shape=record, label="  %9 = and i32 %2, %0"];
	Node0x1857f60[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1857fd0[shape=record, label="  %11 = and i32 %10, %8"];
	Node0x1858040[shape=record, label="  %12 = and i32 %5, %1"];
	Node0x18580b0[shape=record, label="  %13 = xor i32 %6, -1"];
	Node0x1858120[shape=record, label="  %14 = and i32 %13, %2"];
	Node0x1858190[shape=record, label="  %15 = and i32 %1, %0"];
	Node0x1858200[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x1858270[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x18582e0[shape=record, label="  %18 = or i32 %15, %17"];
	Node0x1858350[shape=record, label="  %19 = and i32 %8, %0"];
	Node0x18583c0[shape=record, label="  %20 = xor i32 %19, %2"];
	Node0x1858460[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x18584d0[shape=record, label="  %22 = xor i32 %2, %1"];
	Node0x1858540[shape=record, label="  %23 = xor i32 %22, %0"];
	Node0x18585b0[shape=record, label="  %24 = xor i32 %0, -1"];
	Node0x1858620[shape=record, label="  %25 = xor i32 %2, -1"];
	Node0x1858690[shape=record, label="  %26 = and i32 %25, %1"];
	Node0x1858700[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x1858770[shape=record, label="  %28 = and i32 %27, %24"];
	Node0x18587e0[shape=record, label="  %29 = or i32 %22, %24"];
	Node0x1858850[shape=record, label="  %30 = and i32 %17, %24"];
	Node0x18588c0[shape=record, label="  %31 = and i32 %17, %0"];
	Node0x1858930[shape=record, label="  %32 = and i32 %26, %0"];
	Node0x1858bb0[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x1858c20[shape=record, label="  %34 = and i32 %8, %2"];
	Node0x1858c90[shape=record, label="  %35 = and i32 %34, %24"];
	Node0x1858d00[shape=record, label="  %36 = and i32 %4, %24"];
	Node0x1858d70[shape=record, label="  %37 = and i32 %34, %0"];
	Node0x1858de0[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x1858e50[shape=record, label="  %39 = and i32 %4, %0"];
	Node0x1858ec0[shape=record, label="  %40 = add i32 %36, %35"];
	Node0x1858f60[shape=record, label="  %41 = mul i32 %40, 3"];
	Node0x1858fd0[shape=record, label="  %42 = add i32 %39, %18"];
	Node0x1859040[shape=record, label="  %43 = shl i32 %42, 1"];
	Node0x18590b0[shape=record, label="  %44 = sub i32 %14, %11"];
	Node0x1859120[shape=record, label="  %45 = add i32 %44, %7"];
	Node0x1859190[shape=record, label="  %46 = sub i32 %45, %12"];
	Node0x1859200[shape=record, label="  %47 = sub i32 %46, %21"];
	Node0x1859270[shape=record, label="  %48 = sub i32 %47, %23"];
	Node0x18592e0[shape=record, label="  %49 = sub i32 %48, %28"];
	Node0x1859350[shape=record, label="  %50 = add i32 %49, %29"];
	Node0x18593c0[shape=record, label="  %51 = sub i32 %50, %30"];
	Node0x1859430[shape=record, label="  %52 = add i32 %51, %31"];
	Node0x18594a0[shape=record, label="  %53 = sub i32 %52, %33"];
	Node0x1859510[shape=record, label="  %54 = sub i32 %53, %38"];
	Node0x1859580[shape=record, label="  %55 = add i32 %54, %41"];
	Node0x18595f0[shape=record, label="  %56 = add i32 %55, %43"];
	Node0x1859660[shape=record, label="  %57 = icmp eq i32 %4, %56"];
	Node0x17f8268[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1859b00[shape=record, label="  %59 = tail call i32 @puts(i8* nonnull dereferenceable(1) %58)"];
	Node0x1859b50[shape=record, label="  ret void"];
	Node0x1857660 -> Node0x1857720;
	Node0x1857720 -> Node0x1857790;
	Node0x1857790 -> Node0x1857800;
	Node0x1857800 -> Node0x1857e80;
	Node0x1857e80 -> Node0x1857ef0;
	Node0x1857ef0 -> Node0x1857f60;
	Node0x1857f60 -> Node0x1857fd0;
	Node0x1857fd0 -> Node0x1858040;
	Node0x1858040 -> Node0x18580b0;
	Node0x18580b0 -> Node0x1858120;
	Node0x1858120 -> Node0x1858190;
	Node0x1858190 -> Node0x1858200;
	Node0x1858200 -> Node0x1858270;
	Node0x1858270 -> Node0x18582e0;
	Node0x18582e0 -> Node0x1858350;
	Node0x1858350 -> Node0x18583c0;
	Node0x18583c0 -> Node0x1858460;
	Node0x1858460 -> Node0x18584d0;
	Node0x18584d0 -> Node0x1858540;
	Node0x1858540 -> Node0x18585b0;
	Node0x18585b0 -> Node0x1858620;
	Node0x1858620 -> Node0x1858690;
	Node0x1858690 -> Node0x1858700;
	Node0x1858700 -> Node0x1858770;
	Node0x1858770 -> Node0x18587e0;
	Node0x18587e0 -> Node0x1858850;
	Node0x1858850 -> Node0x18588c0;
	Node0x18588c0 -> Node0x1858930;
	Node0x1858930 -> Node0x1858bb0;
	Node0x1858bb0 -> Node0x1858c20;
	Node0x1858c20 -> Node0x1858c90;
	Node0x1858c90 -> Node0x1858d00;
	Node0x1858d00 -> Node0x1858d70;
	Node0x1858d70 -> Node0x1858de0;
	Node0x1858de0 -> Node0x1858e50;
	Node0x1858e50 -> Node0x1858ec0;
	Node0x1858ec0 -> Node0x1858f60;
	Node0x1858f60 -> Node0x1858fd0;
	Node0x1858fd0 -> Node0x1859040;
	Node0x1859040 -> Node0x18590b0;
	Node0x18590b0 -> Node0x1859120;
	Node0x1859120 -> Node0x1859190;
	Node0x1859190 -> Node0x1859200;
	Node0x1859200 -> Node0x1859270;
	Node0x1859270 -> Node0x18592e0;
	Node0x18592e0 -> Node0x1859350;
	Node0x1859350 -> Node0x18593c0;
	Node0x18593c0 -> Node0x1859430;
	Node0x1859430 -> Node0x18594a0;
	Node0x18594a0 -> Node0x1859510;
	Node0x1859510 -> Node0x1859580;
	Node0x1859580 -> Node0x18595f0;
	Node0x18595f0 -> Node0x1859660;
	Node0x1859660 -> Node0x17f8268;
	Node0x17f8268 -> Node0x1859b00;
	Node0x1859b00 -> Node0x1859b50;
edge [color=red]
	Node0x1857720 -> Node0x1857800;
	Node0x1857790 -> Node0x1857800;
	Node0x1857ef0 -> Node0x1857f60;
	Node0x1857f60 -> Node0x1857fd0;
	Node0x1857e80 -> Node0x1857fd0;
	Node0x1857720 -> Node0x1858040;
	Node0x1857790 -> Node0x18580b0;
	Node0x18580b0 -> Node0x1858120;
	Node0x1858200 -> Node0x1858270;
	Node0x1858190 -> Node0x18582e0;
	Node0x1858270 -> Node0x18582e0;
	Node0x1857e80 -> Node0x1858350;
	Node0x1858350 -> Node0x18583c0;
	Node0x18583c0 -> Node0x1858460;
	Node0x18584d0 -> Node0x1858540;
	Node0x1858620 -> Node0x1858690;
	Node0x1858690 -> Node0x1858700;
	Node0x1858700 -> Node0x1858770;
	Node0x18585b0 -> Node0x1858770;
	Node0x18584d0 -> Node0x18587e0;
	Node0x18585b0 -> Node0x18587e0;
	Node0x1858270 -> Node0x1858850;
	Node0x18585b0 -> Node0x1858850;
	Node0x1858270 -> Node0x18588c0;
	Node0x1858690 -> Node0x1858930;
	Node0x1858930 -> Node0x1858bb0;
	Node0x1857e80 -> Node0x1858c20;
	Node0x1858c20 -> Node0x1858c90;
	Node0x18585b0 -> Node0x1858c90;
	Node0x1857660 -> Node0x1858d00;
	Node0x18585b0 -> Node0x1858d00;
	Node0x1858c20 -> Node0x1858d70;
	Node0x1858d70 -> Node0x1858de0;
	Node0x1857660 -> Node0x1858e50;
	Node0x1858d00 -> Node0x1858ec0;
	Node0x1858c90 -> Node0x1858ec0;
	Node0x1858ec0 -> Node0x1858f60;
	Node0x1858e50 -> Node0x1858fd0;
	Node0x18582e0 -> Node0x1858fd0;
	Node0x1858fd0 -> Node0x1859040;
	Node0x1858120 -> Node0x18590b0;
	Node0x1857fd0 -> Node0x18590b0;
	Node0x18590b0 -> Node0x1859120;
	Node0x1857800 -> Node0x1859120;
	Node0x1859120 -> Node0x1859190;
	Node0x1858040 -> Node0x1859190;
	Node0x1859190 -> Node0x1859200;
	Node0x1858460 -> Node0x1859200;
	Node0x1859200 -> Node0x1859270;
	Node0x1858540 -> Node0x1859270;
	Node0x1859270 -> Node0x18592e0;
	Node0x1858770 -> Node0x18592e0;
	Node0x18592e0 -> Node0x1859350;
	Node0x18587e0 -> Node0x1859350;
	Node0x1859350 -> Node0x18593c0;
	Node0x1858850 -> Node0x18593c0;
	Node0x18593c0 -> Node0x1859430;
	Node0x18588c0 -> Node0x1859430;
	Node0x1859430 -> Node0x18594a0;
	Node0x1858bb0 -> Node0x18594a0;
	Node0x18594a0 -> Node0x1859510;
	Node0x1858de0 -> Node0x1859510;
	Node0x1859510 -> Node0x1859580;
	Node0x1858f60 -> Node0x1859580;
	Node0x1859580 -> Node0x18595f0;
	Node0x1859040 -> Node0x18595f0;
	Node0x1857660 -> Node0x1859660;
	Node0x18595f0 -> Node0x1859660;
	Node0x1859660 -> Node0x17f8268;
	Node0x17f8268 -> Node0x1859b00;
}
