digraph "DFG for'main' function" {
	Node0x1859d18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1859d98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1859e28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1859e88[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x185a308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x185a3e8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x185a4e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x185a5a8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x185a658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x185a8b8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x185a978[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x185b8e8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x185bf58[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x185c050[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x185c258[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x185c3b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x185c4c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x185c588[shape=record, label="  ret i32 0"];
	Node0x1859d18 -> Node0x1859d98;
	Node0x1859d98 -> Node0x1859e28;
	Node0x1859e28 -> Node0x1859e88;
	Node0x1859e88 -> Node0x185a308;
	Node0x185a308 -> Node0x185a3e8;
	Node0x185a3e8 -> Node0x185a4e8;
	Node0x185a4e8 -> Node0x185a5a8;
	Node0x185a5a8 -> Node0x185a658;
	Node0x185a658 -> Node0x185a8b8;
	Node0x185a8b8 -> Node0x185a978;
	Node0x185a978 -> Node0x185b8e8;
	Node0x185b8e8 -> Node0x185bf58;
	Node0x185bf58 -> Node0x185c050;
	Node0x185c050 -> Node0x185c258;
	Node0x185c258 -> Node0x185c3b8;
	Node0x185c3b8 -> Node0x185c4c8;
	Node0x185c4c8 -> Node0x185c588;
edge [color=red]
	Node0x1859d18 -> Node0x1859e88;
	Node0x1859e88 -> Node0x185a308;
	Node0x1859d98 -> Node0x185a3e8;
	Node0x185a3e8 -> Node0x185a4e8;
	Node0x1859e28 -> Node0x185a5a8;
	Node0x185a5a8 -> Node0x185a658;
	Node0x1859d18 -> Node0x185a8b8;
	Node0x1859d98 -> Node0x185a8b8;
	Node0x1859e28 -> Node0x185a8b8;
	Node0x1859d18 -> Node0x185a978;
	Node0x1859d98 -> Node0x185b8e8;
	Node0x1859e28 -> Node0x185bf58;
	Node0x185a978 -> Node0x185c050;
	Node0x185b8e8 -> Node0x185c050;
	Node0x185bf58 -> Node0x185c050;
	Node0x185a5a8 -> Node0x185c258;
	Node0x185a3e8 -> Node0x185c3b8;
	Node0x1859e88 -> Node0x185c4c8;
}
