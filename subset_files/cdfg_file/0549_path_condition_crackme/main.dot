digraph "DFG for'main' function" {
	Node0x1902dc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1902e48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1902ed8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1903338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1903418[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1903538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1903770[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1903828[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1904798[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1904e20[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1904e90[shape=record, label="  %9 = mul i32 %8, 5"];
	Node0x1904f00[shape=record, label="  %10 = add i32 %9, -1"];
	Node0x1904f70[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x1904fe0[shape=record, label="  %12 = add i32 %7, 1"];
	Node0x1905050[shape=record, label="  %13 = add i32 %12, %11"];
	Node0x19050c0[shape=record, label="  %14 = xor i32 %7, %6"];
	Node0x1905130[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x19051a0[shape=record, label="  %16 = add i32 %13, %15"];
	Node0x1905210[shape=record, label="  %17 = sub i32 %16, %14"];
	Node0x1905280[shape=record, label="  %18 = or i32 %6, %8"];
	Node0x19052f0[shape=record, label="  %19 = add i32 %17, %18"];
	Node0x1905360[shape=record, label="  %20 = or i32 %7, %6"];
	Node0x19053d0[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x1905440[shape=record, label="  %22 = mul i32 %21, 5"];
	Node0x19054b0[shape=record, label="  %23 = add i32 %19, %22"];
	Node0x1905520[shape=record, label="  %24 = shl i32 %18, 1"];
	Node0x1905590[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x1905600[shape=record, label="  %26 = and i32 %6, %8"];
	Node0x1905670[shape=record, label="  %27 = mul i32 %26, 7"];
	Node0x19056e0[shape=record, label="  %28 = shl i32 %11, 1"];
	Node0x1905750[shape=record, label="  %29 = add i32 %23, %27"];
	Node0x19057c0[shape=record, label="  %30 = sub i32 %29, %28"];
	Node0x1905830[shape=record, label="  %31 = add i32 %30, %25"];
	Node0x19058a0[shape=record, label="  %32 = icmp eq i32 %10, %31"];
	Node0x18a39d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1905b40[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x1905d98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1905ef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1905fb8[shape=record, label="  ret i32 0"];
	Node0x1902dc8 -> Node0x1902e48;
	Node0x1902e48 -> Node0x1902ed8;
	Node0x1902ed8 -> Node0x1903338;
	Node0x1903338 -> Node0x1903418;
	Node0x1903418 -> Node0x1903538;
	Node0x1903538 -> Node0x1903770;
	Node0x1903770 -> Node0x1903828;
	Node0x1903828 -> Node0x1904798;
	Node0x1904798 -> Node0x1904e20;
	Node0x1904e20 -> Node0x1904e90;
	Node0x1904e90 -> Node0x1904f00;
	Node0x1904f00 -> Node0x1904f70;
	Node0x1904f70 -> Node0x1904fe0;
	Node0x1904fe0 -> Node0x1905050;
	Node0x1905050 -> Node0x19050c0;
	Node0x19050c0 -> Node0x1905130;
	Node0x1905130 -> Node0x19051a0;
	Node0x19051a0 -> Node0x1905210;
	Node0x1905210 -> Node0x1905280;
	Node0x1905280 -> Node0x19052f0;
	Node0x19052f0 -> Node0x1905360;
	Node0x1905360 -> Node0x19053d0;
	Node0x19053d0 -> Node0x1905440;
	Node0x1905440 -> Node0x19054b0;
	Node0x19054b0 -> Node0x1905520;
	Node0x1905520 -> Node0x1905590;
	Node0x1905590 -> Node0x1905600;
	Node0x1905600 -> Node0x1905670;
	Node0x1905670 -> Node0x19056e0;
	Node0x19056e0 -> Node0x1905750;
	Node0x1905750 -> Node0x19057c0;
	Node0x19057c0 -> Node0x1905830;
	Node0x1905830 -> Node0x19058a0;
	Node0x19058a0 -> Node0x18a39d8;
	Node0x18a39d8 -> Node0x1905b40;
	Node0x1905b40 -> Node0x1905d98;
	Node0x1905d98 -> Node0x1905ef8;
	Node0x1905ef8 -> Node0x1905fb8;
edge [color=red]
	Node0x1902dc8 -> Node0x1902ed8;
	Node0x1902ed8 -> Node0x1903338;
	Node0x1902e48 -> Node0x1903418;
	Node0x1903418 -> Node0x1903538;
	Node0x1902dc8 -> Node0x1903770;
	Node0x1902e48 -> Node0x1903770;
	Node0x1902dc8 -> Node0x1903828;
	Node0x1902e48 -> Node0x1904798;
	Node0x1904798 -> Node0x1904e20;
	Node0x1904e20 -> Node0x1904e90;
	Node0x1904e90 -> Node0x1904f00;
	Node0x1904798 -> Node0x1904f70;
	Node0x1903828 -> Node0x1904f70;
	Node0x1904798 -> Node0x1904fe0;
	Node0x1904fe0 -> Node0x1905050;
	Node0x1904f70 -> Node0x1905050;
	Node0x1904798 -> Node0x19050c0;
	Node0x1903828 -> Node0x19050c0;
	Node0x19050c0 -> Node0x1905130;
	Node0x1905050 -> Node0x19051a0;
	Node0x1905130 -> Node0x19051a0;
	Node0x19051a0 -> Node0x1905210;
	Node0x19050c0 -> Node0x1905210;
	Node0x1903828 -> Node0x1905280;
	Node0x1904e20 -> Node0x1905280;
	Node0x1905210 -> Node0x19052f0;
	Node0x1905280 -> Node0x19052f0;
	Node0x1904798 -> Node0x1905360;
	Node0x1903828 -> Node0x1905360;
	Node0x1905360 -> Node0x19053d0;
	Node0x19053d0 -> Node0x1905440;
	Node0x19052f0 -> Node0x19054b0;
	Node0x1905440 -> Node0x19054b0;
	Node0x1905280 -> Node0x1905520;
	Node0x1905520 -> Node0x1905590;
	Node0x1903828 -> Node0x1905600;
	Node0x1904e20 -> Node0x1905600;
	Node0x1905600 -> Node0x1905670;
	Node0x1904f70 -> Node0x19056e0;
	Node0x19054b0 -> Node0x1905750;
	Node0x1905670 -> Node0x1905750;
	Node0x1905750 -> Node0x19057c0;
	Node0x19056e0 -> Node0x19057c0;
	Node0x19057c0 -> Node0x1905830;
	Node0x1905590 -> Node0x1905830;
	Node0x1904f00 -> Node0x19058a0;
	Node0x1905830 -> Node0x19058a0;
	Node0x19058a0 -> Node0x18a39d8;
	Node0x18a39d8 -> Node0x1905b40;
	Node0x1903418 -> Node0x1905d98;
	Node0x1902ed8 -> Node0x1905ef8;
}
