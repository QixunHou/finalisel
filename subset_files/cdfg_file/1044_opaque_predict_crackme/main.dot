digraph "DFG for'main' function" {
	Node0x23e94e8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23e9568[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23e95f8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23e9658[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x23e9ad8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23e9bb8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x23e9cb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23e9d78[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x23e9e28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23ea088[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x23ea148[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23ea2a8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23ea308[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x23ec400[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x23ec608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23ec768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23ec878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23ec938[shape=record, label="  ret i32 0"];
	Node0x23e94e8 -> Node0x23e9568;
	Node0x23e9568 -> Node0x23e95f8;
	Node0x23e95f8 -> Node0x23e9658;
	Node0x23e9658 -> Node0x23e9ad8;
	Node0x23e9ad8 -> Node0x23e9bb8;
	Node0x23e9bb8 -> Node0x23e9cb8;
	Node0x23e9cb8 -> Node0x23e9d78;
	Node0x23e9d78 -> Node0x23e9e28;
	Node0x23e9e28 -> Node0x23ea088;
	Node0x23ea088 -> Node0x23ea148;
	Node0x23ea148 -> Node0x23ea2a8;
	Node0x23ea2a8 -> Node0x23ea308;
	Node0x23ea308 -> Node0x23ec400;
	Node0x23ec400 -> Node0x23ec608;
	Node0x23ec608 -> Node0x23ec768;
	Node0x23ec768 -> Node0x23ec878;
	Node0x23ec878 -> Node0x23ec938;
edge [color=red]
	Node0x23e94e8 -> Node0x23e9658;
	Node0x23e9658 -> Node0x23e9ad8;
	Node0x23e9568 -> Node0x23e9bb8;
	Node0x23e9bb8 -> Node0x23e9cb8;
	Node0x23e95f8 -> Node0x23e9d78;
	Node0x23e9d78 -> Node0x23e9e28;
	Node0x23e94e8 -> Node0x23ea088;
	Node0x23e9568 -> Node0x23ea088;
	Node0x23e95f8 -> Node0x23ea088;
	Node0x23e94e8 -> Node0x23ea148;
	Node0x23e9568 -> Node0x23ea2a8;
	Node0x23e95f8 -> Node0x23ea308;
	Node0x23ea148 -> Node0x23ec400;
	Node0x23ea2a8 -> Node0x23ec400;
	Node0x23ea308 -> Node0x23ec400;
	Node0x23e9d78 -> Node0x23ec608;
	Node0x23e9bb8 -> Node0x23ec768;
	Node0x23e9658 -> Node0x23ec878;
}
