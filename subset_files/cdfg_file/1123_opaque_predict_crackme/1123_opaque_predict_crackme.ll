; ModuleID = '../.././c_source_file/1123_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1123_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = xor i32 %4, -1
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %2
  %9 = and i32 %8, %0
  %10 = xor i32 %0, -1
  %11 = or i32 %7, %2
  %12 = and i32 %11, %10
  %13 = or i32 %9, %12
  %14 = shl i32 %13, 1
  %15 = and i32 %7, %0
  %16 = xor i32 %15, -1
  %17 = xor i32 %16, %2
  %18 = sub i32 %6, %17
  %19 = add i32 %18, %14
  %20 = shl i32 %4, 1
  %21 = or i32 %4, %3
  %22 = and i32 %6, %3
  %23 = xor i32 %4, %3
  %24 = shl i32 %23, 1
  %25 = xor i32 %21, -1
  %26 = xor i32 %3, -1
  %27 = and i32 %26, %4
  %28 = and i32 %4, %3
  %29 = xor i32 %2, -1
  %30 = or i32 %29, %1
  %31 = xor i32 %30, -1
  %32 = xor i32 %2, %0
  %33 = xor i32 %2, %1
  %34 = and i32 %33, %10
  %35 = xor i32 %32, -1
  %36 = or i32 %35, %7
  %37 = and i32 %1, %0
  %38 = or i32 %2, %0
  %39 = xor i32 %38, -1
  %40 = or i32 %37, %39
  %41 = or i32 %2, %1
  %42 = or i32 %41, %10
  %43 = and i32 %2, %0
  %44 = or i32 %7, %0
  %45 = xor i32 %44, -1
  %46 = or i32 %43, %45
  %47 = or i32 %29, %0
  %48 = and i32 %47, %7
  %49 = xor i32 %1, %0
  %50 = xor i32 %49, -1
  %51 = and i32 %38, %50
  %52 = xor i32 %37, -1
  %53 = xor i32 %11, %0
  %54 = xor i32 %9, -1
  %55 = xor i32 %53, %54
  %56 = and i32 %2, %1
  %57 = and i32 %56, %0
  %58 = xor i32 %33, %0
  %59 = xor i32 %58, -1
  %60 = or i32 %57, %59
  %61 = or i32 %1, %0
  %62 = xor i32 %61, -1
  %63 = or i32 %33, %62
  %64 = or i32 %9, %53
  %65 = xor i32 %43, -1
  %66 = and i32 %65, %1
  %67 = and i32 %8, %10
  %68 = or i32 %33, %10
  %69 = xor i32 %68, -1
  %70 = or i32 %67, %69
  %71 = or i32 %35, %50
  %72 = or i32 %37, %31
  %73 = or i32 %45, %2
  %74 = or i32 %43, %49
  %75 = and i32 %32, %49
  %76 = and i32 %47, %49
  %77 = xor i32 %47, -1
  %78 = or i32 %49, %77
  %79 = xor i32 %56, -1
  %80 = and i32 %79, %10
  %81 = xor i32 %38, %1
  %82 = and i32 %33, %52
  %83 = or i32 %35, %62
  %84 = or i32 %56, %15
  %85 = and i32 %29, %0
  %86 = xor i32 %85, %79
  %87 = xor i32 %41, -1
  %88 = xor i32 %87, %0
  %89 = and i32 %38, %7
  %90 = and i32 %32, %50
  %91 = and i32 %35, %1
  %92 = xor i32 %43, %44
  %93 = or i32 %49, %29
  %94 = xor i32 %33, -1
  %95 = xor i32 %94, %0
  %96 = and i32 %29, %1
  %97 = xor i32 %96, -1
  %98 = and i32 %97, %10
  %99 = xor i32 %44, %2
  %100 = and i32 %33, %16
  %101 = xor i32 %45, %2
  %102 = and i32 %94, %10
  %103 = or i32 %37, %29
  %104 = and i32 %56, %10
  %105 = and i32 %33, %0
  %106 = xor i32 %104, -1
  %107 = xor i32 %105, %106
  %108 = xor i32 %43, %97
  %109 = shl i32 %33, 1
  %110 = xor i32 %65, %1
  %111 = shl i32 %110, 1
  %112 = and i32 %33, %61
  %113 = and i32 %41, %10
  %114 = xor i32 %57, 2147483647
  %115 = xor i32 %114, %113
  %116 = shl i32 %115, 1
  %117 = xor i32 %43, %41
  %118 = or i32 %85, %50
  %119 = xor i32 %47, %37
  %120 = and i32 %35, %50
  %121 = xor i32 %15, %79
  %122 = or i32 %87, %10
  %123 = xor i32 %9, %59
  %124 = or i32 %57, %113
  %125 = or i32 %32, %7
  %126 = xor i32 %52, %2
  %127 = shl i32 %113, 1
  %128 = or i32 %49, %39
  %129 = or i32 %32, %15
  %130 = and i32 %30, %10
  %131 = or i32 %94, %10
  %132 = shl i32 %131, 1
  %133 = or i32 %79, %10
  %134 = or i32 %94, %45
  %135 = or i32 %32, %37
  %136 = or i32 %29, %62
  %137 = or i32 %37, %77
  %138 = and i32 %41, %0
  %139 = xor i32 %85, -1
  %140 = and i32 %49, %139
  %141 = shl i32 %140, 1
  %142 = add i32 %2, 1
  %143 = xor i32 %12, %54
  %144 = xor i32 %38, %37
  %145 = and i32 %35, %16
  %146 = or i32 %33, %45
  %147 = or i32 %29, %45
  %148 = or i32 %43, %87
  %149 = or i32 %96, %0
  %150 = or i32 %97, %0
  %151 = or i32 %31, %0
  %152 = or i32 %37, %87
  %153 = shl i32 %43, 1
  %154 = or i32 %97, %10
  %155 = and i32 %38, %1
  %156 = and i32 %49, %2
  %157 = xor i32 %62, %2
  %158 = and i32 %97, %0
  %159 = and i32 %32, %44
  %160 = xor i32 %39, %1
  %161 = or i32 %37, %2
  %162 = or i32 %85, %56
  %163 = and i32 %35, %52
  %164 = and i32 %44, %2
  %165 = and i32 %52, %2
  %166 = or i32 %43, %62
  %167 = and i32 %65, %7
  %168 = and i32 %44, %94
  %169 = or i32 %32, %50
  %170 = and i32 %44, %35
  %171 = xor i32 %41, %0
  %172 = xor i32 %57, %58
  %173 = or i32 %96, %10
  %174 = xor i32 %30, %0
  %175 = and i32 %79, %0
  %176 = and i32 %94, %52
  %177 = xor i32 %171, -1
  %178 = xor i32 %57, %177
  %179 = or i32 %32, %1
  %180 = and i32 %94, %16
  %181 = and i32 %29, %50
  %182 = or i32 %15, %94
  %183 = and i32 %38, %49
  %184 = and i32 %61, %94
  %185 = or i32 %85, %1
  %186 = or i32 %94, %0
  %187 = shl i32 %186, 1
  %188 = or i32 %33, %15
  %189 = or i32 %29, %50
  %190 = add i32 %56, 1
  %191 = or i32 %33, %0
  %192 = xor i32 %191, -1
  %193 = or i32 %9, %192
  %194 = or i32 %39, %1
  %195 = and i32 %11, %0
  %196 = or i32 %67, %195
  %197 = and i32 %29, %52
  %198 = xor i32 %15, %2
  %199 = shl i32 %198, 1
  %200 = or i32 %94, %62
  %201 = and i32 %30, %0
  %202 = and i32 %49, %29
  %203 = or i32 %77, %7
  %204 = xor i32 %30, %37
  %205 = xor i32 %85, %1
  %206 = shl i32 %94, 1
  %207 = xor i32 %43, %61
  %208 = and i32 %16, %2
  %209 = or i32 %33, %37
  %210 = and i32 %47, %50
  %211 = and i32 %61, %29
  %212 = and i32 %32, %1
  %213 = or i32 %41, %0
  %214 = and i32 %32, %7
  %215 = shl i32 %85, 1
  %216 = or i32 %77, %50
  %217 = or i32 %35, %45
  %218 = add i32 %85, 1
  %219 = or i32 %39, %50
  %220 = or i32 %77, %1
  %221 = or i32 %57, %171
  %222 = or i32 %30, %0
  %223 = shl i32 %222, 1
  %224 = or i32 %79, %0
  %225 = xor i32 %138, %106
  %226 = xor i32 %114, %34
  %227 = shl i32 %226, 1
  %228 = or i32 %85, %49
  %229 = and i32 %139, %7
  %230 = or i32 %85, %31
  %231 = or i32 %43, %96
  %232 = shl i32 %231, 1
  %233 = xor i32 %43, %1
  %234 = or i32 %56, %0
  %235 = or i32 %87, %0
  %236 = xor i32 %47, %1
  %237 = and i32 %61, %35
  %238 = or i32 %104, %138
  %239 = xor i32 %85, %30
  %240 = or i32 %50, %2
  %241 = and i32 %49, %35
  %242 = or i32 %43, %50
  %243 = and i32 %50, %2
  %244 = or i32 %32, %49
  %245 = shl i32 %244, 1
  %246 = or i32 %32, %45
  %247 = xor i32 %56, %0
  %248 = or i32 %31, %10
  %249 = xor i32 %97, %0
  %250 = or i32 %43, %1
  %251 = and i32 %139, %50
  %252 = shl i32 %251, 2
  %253 = or i32 %37, %94
  %254 = or i32 %56, %10
  %255 = or i32 %43, %7
  %256 = or i32 %32, %62
  %257 = xor i32 %37, %2
  %258 = shl i32 %257, 1
  %259 = and i32 %32, %52
  %260 = and i32 %94, %0
  %261 = or i32 %57, %34
  %262 = and i32 %65, %50
  %263 = or i32 %62, %2
  %264 = shl i32 %87, 1
  %265 = and i32 %47, %1
  %266 = and i32 %33, %44
  %267 = or i32 %96, %15
  %268 = xor i32 %67, %68
  %269 = or i32 %104, %105
  %270 = xor i32 %96, %0
  %271 = and i32 %32, %61
  %272 = xor i32 %9, %191
  %273 = xor i32 %77, %1
  %274 = or i32 %85, %7
  %275 = shl i32 %274, 1
  %276 = or i32 %30, %10
  %277 = or i32 %39, %7
  %278 = xor i32 %15, %97
  %279 = or i32 %15, %35
  %280 = and i32 %139, %1
  %281 = or i32 %9, %58
  %282 = and i32 %32, %16
  %283 = xor i32 %79, %0
  %284 = and i32 %35, %7
  %285 = and i32 %61, %2
  %286 = or i32 %15, %2
  %287 = xor i32 %41, %37
  %288 = or i32 %35, %1
  %289 = xor i32 %31, %0
  %290 = and i32 %87, %10
  %291 = shl i32 %290, 2
  %292 = and i32 %96, %10
  %293 = mul i32 %292, -18
  %294 = and i32 %87, %0
  %295 = mul i32 %294, -14
  %296 = and i32 %96, %0
  %297 = and i32 %31, %10
  %298 = mul i32 %297, -28
  %299 = mul i32 %104, -10
  %300 = and i32 %31, %0
  %301 = mul i32 %300, -15
  %302 = mul i32 %57, -35
  %303 = add i32 %73, %165
  %304 = add i32 %303, %3
  %305 = add i32 %304, %277
  %306 = add i32 %305, %270
  %307 = add i32 %306, %256
  %308 = add i32 %307, %246
  %309 = add i32 %308, %105
  %310 = add i32 %309, %237
  %311 = add i32 %310, %210
  %312 = add i32 %311, %185
  %313 = add i32 %312, %183
  %314 = add i32 %313, %174
  %315 = add i32 %314, %162
  %316 = add i32 %315, %92
  %317 = add i32 %316, %71
  %318 = add i32 %317, %196
  %319 = add i32 %318, %221
  %320 = shl i32 %319, 1
  %321 = add i32 %320, -4
  %322 = sub i32 %44, %296
  %323 = add i32 %322, %279
  %324 = sub i32 %323, %145
  %325 = add i32 %324, %27
  %326 = add i32 %325, %22
  %327 = add i32 %326, %25
  %328 = mul i32 %327, 3
  %329 = sub i32 %97, %99
  %330 = add i32 %329, %42
  %331 = mul i32 %330, 5
  %332 = sub i32 -3, %0
  %333 = sub i32 %332, %0
  %334 = add i32 %333, %45
  %335 = add i32 %334, %2
  %336 = add i32 %335, %142
  %337 = add i32 %336, %16
  %338 = sub i32 %337, %15
  %339 = add i32 %338, %93
  %340 = sub i32 %339, %101
  %341 = add i32 %340, %103
  %342 = sub i32 %341, %96
  %343 = add i32 %342, %56
  %344 = add i32 %343, %41
  %345 = add i32 %344, %126
  %346 = sub i32 %345, %136
  %347 = add i32 %346, %147
  %348 = add i32 %347, %156
  %349 = add i32 %348, %157
  %350 = add i32 %349, %65
  %351 = add i32 %350, %161
  %352 = sub i32 %351, %164
  %353 = sub i32 %352, %181
  %354 = sub i32 %353, %189
  %355 = add i32 %354, %190
  %356 = add i32 %355, %197
  %357 = add i32 %356, %202
  %358 = sub i32 %357, %208
  %359 = sub i32 %358, %211
  %360 = add i32 %359, %218
  %361 = add i32 %360, %240
  %362 = add i32 %361, %243
  %363 = sub i32 %362, %263
  %364 = add i32 %363, %285
  %365 = add i32 %364, %286
  %366 = add i32 %365, %34
  %367 = add i32 %366, %36
  %368 = add i32 %367, %40
  %369 = add i32 %368, %46
  %370 = sub i32 %369, %48
  %371 = sub i32 %370, %51
  %372 = add i32 %371, %63
  %373 = add i32 %372, %66
  %374 = add i32 %373, %72
  %375 = sub i32 %374, %74
  %376 = add i32 %375, %75
  %377 = sub i32 %376, %76
  %378 = add i32 %377, %78
  %379 = sub i32 %378, %80
  %380 = add i32 %379, %81
  %381 = sub i32 %380, %82
  %382 = sub i32 %381, %83
  %383 = add i32 %382, %84
  %384 = sub i32 %383, %86
  %385 = add i32 %384, %88
  %386 = add i32 %385, %89
  %387 = add i32 %386, %90
  %388 = sub i32 %387, %91
  %389 = sub i32 %388, %95
  %390 = sub i32 %389, %98
  %391 = add i32 %390, %100
  %392 = add i32 %391, %102
  %393 = sub i32 %392, %108
  %394 = sub i32 %393, %109
  %395 = sub i32 %394, %112
  %396 = sub i32 %395, %117
  %397 = sub i32 %396, %118
  %398 = add i32 %397, %119
  %399 = sub i32 %398, %120
  %400 = sub i32 %399, %121
  %401 = sub i32 %400, %122
  %402 = add i32 %401, %125
  %403 = sub i32 %402, %128
  %404 = sub i32 %403, %129
  %405 = add i32 %404, %130
  %406 = sub i32 %405, %133
  %407 = sub i32 %406, %134
  %408 = add i32 %407, %135
  %409 = add i32 %408, %137
  %410 = add i32 %409, %138
  %411 = add i32 %410, %144
  %412 = sub i32 %411, %146
  %413 = add i32 %412, %148
  %414 = add i32 %413, %149
  %415 = sub i32 %414, %150
  %416 = add i32 %415, %151
  %417 = add i32 %416, %152
  %418 = sub i32 %417, %153
  %419 = add i32 %418, %154
  %420 = sub i32 %419, %155
  %421 = sub i32 %420, %158
  %422 = sub i32 %421, %159
  %423 = add i32 %422, %160
  %424 = sub i32 %423, %163
  %425 = add i32 %424, %166
  %426 = sub i32 %425, %167
  %427 = add i32 %426, %168
  %428 = sub i32 %427, %169
  %429 = add i32 %428, %170
  %430 = sub i32 %429, %171
  %431 = add i32 %430, %173
  %432 = sub i32 %431, %175
  %433 = add i32 %432, %176
  %434 = add i32 %433, %58
  %435 = sub i32 %434, %179
  %436 = sub i32 %435, %180
  %437 = sub i32 %436, %182
  %438 = sub i32 %437, %184
  %439 = sub i32 %438, %188
  %440 = add i32 %439, %194
  %441 = sub i32 %440, %199
  %442 = add i32 %441, %200
  %443 = sub i32 %442, %201
  %444 = sub i32 %443, %203
  %445 = sub i32 %444, %204
  %446 = add i32 %445, %205
  %447 = sub i32 %446, %206
  %448 = add i32 %447, %207
  %449 = sub i32 %448, %209
  %450 = sub i32 %449, %212
  %451 = add i32 %450, %213
  %452 = add i32 %451, %214
  %453 = sub i32 %452, %215
  %454 = add i32 %453, %216
  %455 = sub i32 %454, %217
  %456 = sub i32 %455, %219
  %457 = sub i32 %456, %220
  %458 = add i32 %457, %224
  %459 = sub i32 %458, %228
  %460 = sub i32 %459, %229
  %461 = add i32 %460, %230
  %462 = sub i32 %461, %233
  %463 = sub i32 %462, %234
  %464 = sub i32 %463, %235
  %465 = sub i32 %464, %236
  %466 = sub i32 %465, %239
  %467 = add i32 %466, %241
  %468 = sub i32 %467, %242
  %469 = sub i32 %468, %68
  %470 = add i32 %469, %247
  %471 = add i32 %470, %248
  %472 = sub i32 %471, %249
  %473 = sub i32 %472, %250
  %474 = add i32 %473, %253
  %475 = add i32 %474, %254
  %476 = sub i32 %475, %255
  %477 = sub i32 %476, %258
  %478 = sub i32 %477, %259
  %479 = add i32 %478, %260
  %480 = sub i32 %479, %262
  %481 = sub i32 %480, %264
  %482 = sub i32 %481, %265
  %483 = add i32 %482, %266
  %484 = add i32 %483, %267
  %485 = sub i32 %484, %271
  %486 = sub i32 %485, %273
  %487 = add i32 %486, %276
  %488 = sub i32 %487, %278
  %489 = sub i32 %488, %280
  %490 = add i32 %489, %282
  %491 = add i32 %490, %283
  %492 = sub i32 %491, %284
  %493 = add i32 %492, %191
  %494 = sub i32 %493, %287
  %495 = sub i32 %494, %288
  %496 = add i32 %495, %289
  %497 = sub i32 %496, %21
  %498 = add i32 %497, %20
  %499 = add i32 %498, %22
  %500 = sub i32 %499, %28
  %501 = sub i32 %500, %55
  %502 = sub i32 %501, %60
  %503 = sub i32 %502, %64
  %504 = add i32 %503, %70
  %505 = sub i32 %504, %107
  %506 = sub i32 %505, %111
  %507 = add i32 %506, %123
  %508 = add i32 %507, %124
  %509 = sub i32 %508, %127
  %510 = sub i32 %509, %132
  %511 = sub i32 %510, %141
  %512 = sub i32 %511, %143
  %513 = add i32 %512, %172
  %514 = sub i32 %513, %178
  %515 = sub i32 %514, %187
  %516 = sub i32 %515, %193
  %517 = sub i32 %516, %223
  %518 = add i32 %517, %225
  %519 = sub i32 %518, %232
  %520 = add i32 %519, %238
  %521 = sub i32 %520, %245
  %522 = add i32 %521, %252
  %523 = add i32 %522, %261
  %524 = add i32 %523, %268
  %525 = sub i32 %524, %269
  %526 = add i32 %525, %272
  %527 = sub i32 %526, %275
  %528 = add i32 %527, %281
  %529 = sub i32 %528, %291
  %530 = add i32 %529, %293
  %531 = add i32 %530, %295
  %532 = add i32 %531, %298
  %533 = add i32 %532, %299
  %534 = add i32 %533, %301
  %535 = add i32 %534, %302
  %536 = sub i32 %535, %24
  %537 = sub i32 %536, %116
  %538 = sub i32 %537, %227
  %539 = add i32 %538, %331
  %540 = add i32 %539, %328
  %541 = add i32 %540, %321
  %542 = icmp eq i32 %19, %541
  %543 = select i1 %542, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %544 = tail call i32 @puts(i8* nonnull dereferenceable(1) %543)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
