digraph "DFG for'main' function" {
	Node0x239f938[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x239f9b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x239fa48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x239faa8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x239ff28[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23a0008[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x23a0108[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23a01c8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x23a0278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23a04d8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x23a0598[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23a1508[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23a1b78[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x23a1bf0[shape=record, label="  %11 = xor i32 %9, -1"];
	Node0x23a1c60[shape=record, label="  %12 = xor i32 %10, %8"];
	Node0x23a1cd0[shape=record, label="  %13 = or i32 %12, %11"];
	Node0x23a1d40[shape=record, label="  %14 = xor i32 %9, %8"];
	Node0x23a1db0[shape=record, label="  %15 = xor i32 %8, -1"];
	Node0x23a1e20[shape=record, label="  %16 = and i32 %10, %11"];
	Node0x23a1e90[shape=record, label="  %17 = and i32 %16, %15"];
	Node0x23a1f00[shape=record, label="  %18 = xor i32 %10, %9"];
	Node0x23a1f70[shape=record, label="  %19 = or i32 %18, %15"];
	Node0x23a1fe0[shape=record, label="  %20 = xor i32 %17, %19"];
	Node0x23a2050[shape=record, label="  %21 = and i32 %10, %8"];
	Node0x23a20c0[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x23a2130[shape=record, label="  %23 = and i32 %9, %22"];
	Node0x23a21a0[shape=record, label="  %24 = or i32 %10, %9"];
	Node0x23a2210[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x23a2280[shape=record, label="  %26 = and i32 %25, %15"];
	Node0x23a22f0[shape=record, label="  %27 = xor i32 %10, -1"];
	Node0x23a2360[shape=record, label="  %28 = and i32 %9, %27"];
	Node0x23a23d0[shape=record, label="  %29 = and i32 %28, %15"];
	Node0x23a2440[shape=record, label="  %30 = and i32 %8, %25"];
	Node0x23a24b0[shape=record, label="  %31 = and i32 %28, %8"];
	Node0x23a2520[shape=record, label="  %32 = and i32 %9, %15"];
	Node0x23a2590[shape=record, label="  %33 = and i32 %32, %10"];
	Node0x23a2600[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0x23a2670[shape=record, label="  %35 = and i32 %16, %8"];
	Node0x23a26e0[shape=record, label="  %36 = add i32 %31, %30"];
	Node0x23a2750[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x23a27c0[shape=record, label="  %38 = or i32 %35, %29"];
	Node0x23a2830[shape=record, label="  %39 = shl i32 %38, 2"];
	Node0x23a28a0[shape=record, label="  %40 = sub i32 %26, %14"];
	Node0x23a2910[shape=record, label="  %41 = shl i32 %40, 1"];
	Node0x23a2980[shape=record, label="  %42 = sub i32 %17, %23"];
	Node0x23a29f0[shape=record, label="  %43 = add i32 %42, %34"];
	Node0x23a2a60[shape=record, label="  %44 = sub i32 %43, %20"];
	Node0x23a2ad0[shape=record, label="  %45 = add i32 %44, %37"];
	Node0x23a2b40[shape=record, label="  %46 = add i32 %45, %39"];
	Node0x23a2bb0[shape=record, label="  %47 = add i32 %46, %41"];
	Node0x23a2c20[shape=record, label="  %48 = icmp eq i32 %13, %47"];
	Node0x233f9d8[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x23a2cb0[shape=record, label="  %50 = call i32 @puts(i8* nonnull dereferenceable(1) %49) #5"];
	Node0x23a2f08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23a3068[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23a3178[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23a3238[shape=record, label="  ret i32 0"];
	Node0x239f938 -> Node0x239f9b8;
	Node0x239f9b8 -> Node0x239fa48;
	Node0x239fa48 -> Node0x239faa8;
	Node0x239faa8 -> Node0x239ff28;
	Node0x239ff28 -> Node0x23a0008;
	Node0x23a0008 -> Node0x23a0108;
	Node0x23a0108 -> Node0x23a01c8;
	Node0x23a01c8 -> Node0x23a0278;
	Node0x23a0278 -> Node0x23a04d8;
	Node0x23a04d8 -> Node0x23a0598;
	Node0x23a0598 -> Node0x23a1508;
	Node0x23a1508 -> Node0x23a1b78;
	Node0x23a1b78 -> Node0x23a1bf0;
	Node0x23a1bf0 -> Node0x23a1c60;
	Node0x23a1c60 -> Node0x23a1cd0;
	Node0x23a1cd0 -> Node0x23a1d40;
	Node0x23a1d40 -> Node0x23a1db0;
	Node0x23a1db0 -> Node0x23a1e20;
	Node0x23a1e20 -> Node0x23a1e90;
	Node0x23a1e90 -> Node0x23a1f00;
	Node0x23a1f00 -> Node0x23a1f70;
	Node0x23a1f70 -> Node0x23a1fe0;
	Node0x23a1fe0 -> Node0x23a2050;
	Node0x23a2050 -> Node0x23a20c0;
	Node0x23a20c0 -> Node0x23a2130;
	Node0x23a2130 -> Node0x23a21a0;
	Node0x23a21a0 -> Node0x23a2210;
	Node0x23a2210 -> Node0x23a2280;
	Node0x23a2280 -> Node0x23a22f0;
	Node0x23a22f0 -> Node0x23a2360;
	Node0x23a2360 -> Node0x23a23d0;
	Node0x23a23d0 -> Node0x23a2440;
	Node0x23a2440 -> Node0x23a24b0;
	Node0x23a24b0 -> Node0x23a2520;
	Node0x23a2520 -> Node0x23a2590;
	Node0x23a2590 -> Node0x23a2600;
	Node0x23a2600 -> Node0x23a2670;
	Node0x23a2670 -> Node0x23a26e0;
	Node0x23a26e0 -> Node0x23a2750;
	Node0x23a2750 -> Node0x23a27c0;
	Node0x23a27c0 -> Node0x23a2830;
	Node0x23a2830 -> Node0x23a28a0;
	Node0x23a28a0 -> Node0x23a2910;
	Node0x23a2910 -> Node0x23a2980;
	Node0x23a2980 -> Node0x23a29f0;
	Node0x23a29f0 -> Node0x23a2a60;
	Node0x23a2a60 -> Node0x23a2ad0;
	Node0x23a2ad0 -> Node0x23a2b40;
	Node0x23a2b40 -> Node0x23a2bb0;
	Node0x23a2bb0 -> Node0x23a2c20;
	Node0x23a2c20 -> Node0x233f9d8;
	Node0x233f9d8 -> Node0x23a2cb0;
	Node0x23a2cb0 -> Node0x23a2f08;
	Node0x23a2f08 -> Node0x23a3068;
	Node0x23a3068 -> Node0x23a3178;
	Node0x23a3178 -> Node0x23a3238;
edge [color=red]
	Node0x239f938 -> Node0x239faa8;
	Node0x239faa8 -> Node0x239ff28;
	Node0x239f9b8 -> Node0x23a0008;
	Node0x23a0008 -> Node0x23a0108;
	Node0x239fa48 -> Node0x23a01c8;
	Node0x23a01c8 -> Node0x23a0278;
	Node0x239f938 -> Node0x23a04d8;
	Node0x239f9b8 -> Node0x23a04d8;
	Node0x239fa48 -> Node0x23a04d8;
	Node0x239f938 -> Node0x23a0598;
	Node0x239f9b8 -> Node0x23a1508;
	Node0x239fa48 -> Node0x23a1b78;
	Node0x23a1508 -> Node0x23a1bf0;
	Node0x23a1b78 -> Node0x23a1c60;
	Node0x23a0598 -> Node0x23a1c60;
	Node0x23a1c60 -> Node0x23a1cd0;
	Node0x23a1bf0 -> Node0x23a1cd0;
	Node0x23a1508 -> Node0x23a1d40;
	Node0x23a0598 -> Node0x23a1d40;
	Node0x23a0598 -> Node0x23a1db0;
	Node0x23a1b78 -> Node0x23a1e20;
	Node0x23a1bf0 -> Node0x23a1e20;
	Node0x23a1e20 -> Node0x23a1e90;
	Node0x23a1db0 -> Node0x23a1e90;
	Node0x23a1b78 -> Node0x23a1f00;
	Node0x23a1508 -> Node0x23a1f00;
	Node0x23a1f00 -> Node0x23a1f70;
	Node0x23a1db0 -> Node0x23a1f70;
	Node0x23a1e90 -> Node0x23a1fe0;
	Node0x23a1f70 -> Node0x23a1fe0;
	Node0x23a1b78 -> Node0x23a2050;
	Node0x23a0598 -> Node0x23a2050;
	Node0x23a2050 -> Node0x23a20c0;
	Node0x23a1508 -> Node0x23a2130;
	Node0x23a20c0 -> Node0x23a2130;
	Node0x23a1b78 -> Node0x23a21a0;
	Node0x23a1508 -> Node0x23a21a0;
	Node0x23a21a0 -> Node0x23a2210;
	Node0x23a2210 -> Node0x23a2280;
	Node0x23a1db0 -> Node0x23a2280;
	Node0x23a1b78 -> Node0x23a22f0;
	Node0x23a1508 -> Node0x23a2360;
	Node0x23a22f0 -> Node0x23a2360;
	Node0x23a2360 -> Node0x23a23d0;
	Node0x23a1db0 -> Node0x23a23d0;
	Node0x23a0598 -> Node0x23a2440;
	Node0x23a2210 -> Node0x23a2440;
	Node0x23a2360 -> Node0x23a24b0;
	Node0x23a0598 -> Node0x23a24b0;
	Node0x23a1508 -> Node0x23a2520;
	Node0x23a1db0 -> Node0x23a2520;
	Node0x23a2520 -> Node0x23a2590;
	Node0x23a1b78 -> Node0x23a2590;
	Node0x23a2590 -> Node0x23a2600;
	Node0x23a1e20 -> Node0x23a2670;
	Node0x23a0598 -> Node0x23a2670;
	Node0x23a24b0 -> Node0x23a26e0;
	Node0x23a2440 -> Node0x23a26e0;
	Node0x23a26e0 -> Node0x23a2750;
	Node0x23a2670 -> Node0x23a27c0;
	Node0x23a23d0 -> Node0x23a27c0;
	Node0x23a27c0 -> Node0x23a2830;
	Node0x23a2280 -> Node0x23a28a0;
	Node0x23a1d40 -> Node0x23a28a0;
	Node0x23a28a0 -> Node0x23a2910;
	Node0x23a1e90 -> Node0x23a2980;
	Node0x23a2130 -> Node0x23a2980;
	Node0x23a2980 -> Node0x23a29f0;
	Node0x23a2600 -> Node0x23a29f0;
	Node0x23a29f0 -> Node0x23a2a60;
	Node0x23a1fe0 -> Node0x23a2a60;
	Node0x23a2a60 -> Node0x23a2ad0;
	Node0x23a2750 -> Node0x23a2ad0;
	Node0x23a2ad0 -> Node0x23a2b40;
	Node0x23a2830 -> Node0x23a2b40;
	Node0x23a2b40 -> Node0x23a2bb0;
	Node0x23a2910 -> Node0x23a2bb0;
	Node0x23a1cd0 -> Node0x23a2c20;
	Node0x23a2bb0 -> Node0x23a2c20;
	Node0x23a2c20 -> Node0x233f9d8;
	Node0x233f9d8 -> Node0x23a2cb0;
	Node0x23a01c8 -> Node0x23a2f08;
	Node0x23a0008 -> Node0x23a3068;
	Node0x239faa8 -> Node0x23a3178;
}
