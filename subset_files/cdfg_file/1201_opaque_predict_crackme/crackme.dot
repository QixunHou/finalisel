digraph "DFG for'crackme' function" {
	Node0x239df60[shape=record, label="  %4 = xor i32 %1, -1"];
	Node0x239e020[shape=record, label="  %5 = xor i32 %2, %0"];
	Node0x239e090[shape=record, label="  %6 = or i32 %5, %4"];
	Node0x239e100[shape=record, label="  %7 = xor i32 %1, %0"];
	Node0x239e170[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x239e1e0[shape=record, label="  %9 = and i32 %4, %2"];
	Node0x239e250[shape=record, label="  %10 = and i32 %9, %8"];
	Node0x239e2c0[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x239e330[shape=record, label="  %12 = or i32 %11, %8"];
	Node0x239e3a0[shape=record, label="  %13 = xor i32 %10, %12"];
	Node0x239e410[shape=record, label="  %14 = and i32 %2, %0"];
	Node0x239e480[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x239e4f0[shape=record, label="  %16 = and i32 %15, %1"];
	Node0x239e560[shape=record, label="  %17 = or i32 %2, %1"];
	Node0x239e5d0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x239e640[shape=record, label="  %19 = and i32 %18, %8"];
	Node0x239e6b0[shape=record, label="  %20 = xor i32 %2, -1"];
	Node0x239e720[shape=record, label="  %21 = and i32 %20, %1"];
	Node0x239e790[shape=record, label="  %22 = and i32 %21, %8"];
	Node0x239e800[shape=record, label="  %23 = and i32 %18, %0"];
	Node0x239e870[shape=record, label="  %24 = and i32 %21, %0"];
	Node0x239e8e0[shape=record, label="  %25 = and i32 %8, %1"];
	Node0x239e950[shape=record, label="  %26 = and i32 %25, %2"];
	Node0x239e9c0[shape=record, label="  %27 = mul i32 %26, 5"];
	Node0x239ea30[shape=record, label="  %28 = and i32 %9, %0"];
	Node0x239eaa0[shape=record, label="  %29 = add i32 %24, %23"];
	Node0x239eb40[shape=record, label="  %30 = mul i32 %29, 3"];
	Node0x239ebb0[shape=record, label="  %31 = or i32 %28, %22"];
	Node0x239ec50[shape=record, label="  %32 = shl i32 %31, 2"];
	Node0x239eed0[shape=record, label="  %33 = sub i32 %19, %7"];
	Node0x239ef70[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x239efe0[shape=record, label="  %35 = sub i32 %10, %16"];
	Node0x239f050[shape=record, label="  %36 = sub i32 %35, %13"];
	Node0x239f0c0[shape=record, label="  %37 = add i32 %36, %27"];
	Node0x239f130[shape=record, label="  %38 = add i32 %37, %30"];
	Node0x239f1a0[shape=record, label="  %39 = add i32 %38, %32"];
	Node0x239f210[shape=record, label="  %40 = add i32 %39, %34"];
	Node0x239f280[shape=record, label="  %41 = icmp eq i32 %6, %40"];
	Node0x233e268[shape=record, label="  %42 = select i1 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x239f720[shape=record, label="  %43 = tail call i32 @puts(i8* nonnull dereferenceable(1) %42)"];
	Node0x239f770[shape=record, label="  ret void"];
	Node0x239df60 -> Node0x239e020;
	Node0x239e020 -> Node0x239e090;
	Node0x239e090 -> Node0x239e100;
	Node0x239e100 -> Node0x239e170;
	Node0x239e170 -> Node0x239e1e0;
	Node0x239e1e0 -> Node0x239e250;
	Node0x239e250 -> Node0x239e2c0;
	Node0x239e2c0 -> Node0x239e330;
	Node0x239e330 -> Node0x239e3a0;
	Node0x239e3a0 -> Node0x239e410;
	Node0x239e410 -> Node0x239e480;
	Node0x239e480 -> Node0x239e4f0;
	Node0x239e4f0 -> Node0x239e560;
	Node0x239e560 -> Node0x239e5d0;
	Node0x239e5d0 -> Node0x239e640;
	Node0x239e640 -> Node0x239e6b0;
	Node0x239e6b0 -> Node0x239e720;
	Node0x239e720 -> Node0x239e790;
	Node0x239e790 -> Node0x239e800;
	Node0x239e800 -> Node0x239e870;
	Node0x239e870 -> Node0x239e8e0;
	Node0x239e8e0 -> Node0x239e950;
	Node0x239e950 -> Node0x239e9c0;
	Node0x239e9c0 -> Node0x239ea30;
	Node0x239ea30 -> Node0x239eaa0;
	Node0x239eaa0 -> Node0x239eb40;
	Node0x239eb40 -> Node0x239ebb0;
	Node0x239ebb0 -> Node0x239ec50;
	Node0x239ec50 -> Node0x239eed0;
	Node0x239eed0 -> Node0x239ef70;
	Node0x239ef70 -> Node0x239efe0;
	Node0x239efe0 -> Node0x239f050;
	Node0x239f050 -> Node0x239f0c0;
	Node0x239f0c0 -> Node0x239f130;
	Node0x239f130 -> Node0x239f1a0;
	Node0x239f1a0 -> Node0x239f210;
	Node0x239f210 -> Node0x239f280;
	Node0x239f280 -> Node0x233e268;
	Node0x233e268 -> Node0x239f720;
	Node0x239f720 -> Node0x239f770;
edge [color=red]
	Node0x239e020 -> Node0x239e090;
	Node0x239df60 -> Node0x239e090;
	Node0x239df60 -> Node0x239e1e0;
	Node0x239e1e0 -> Node0x239e250;
	Node0x239e170 -> Node0x239e250;
	Node0x239e2c0 -> Node0x239e330;
	Node0x239e170 -> Node0x239e330;
	Node0x239e250 -> Node0x239e3a0;
	Node0x239e330 -> Node0x239e3a0;
	Node0x239e410 -> Node0x239e480;
	Node0x239e480 -> Node0x239e4f0;
	Node0x239e560 -> Node0x239e5d0;
	Node0x239e5d0 -> Node0x239e640;
	Node0x239e170 -> Node0x239e640;
	Node0x239e6b0 -> Node0x239e720;
	Node0x239e720 -> Node0x239e790;
	Node0x239e170 -> Node0x239e790;
	Node0x239e5d0 -> Node0x239e800;
	Node0x239e720 -> Node0x239e870;
	Node0x239e170 -> Node0x239e8e0;
	Node0x239e8e0 -> Node0x239e950;
	Node0x239e950 -> Node0x239e9c0;
	Node0x239e1e0 -> Node0x239ea30;
	Node0x239e870 -> Node0x239eaa0;
	Node0x239e800 -> Node0x239eaa0;
	Node0x239eaa0 -> Node0x239eb40;
	Node0x239ea30 -> Node0x239ebb0;
	Node0x239e790 -> Node0x239ebb0;
	Node0x239ebb0 -> Node0x239ec50;
	Node0x239e640 -> Node0x239eed0;
	Node0x239e100 -> Node0x239eed0;
	Node0x239eed0 -> Node0x239ef70;
	Node0x239e250 -> Node0x239efe0;
	Node0x239e4f0 -> Node0x239efe0;
	Node0x239efe0 -> Node0x239f050;
	Node0x239e3a0 -> Node0x239f050;
	Node0x239f050 -> Node0x239f0c0;
	Node0x239e9c0 -> Node0x239f0c0;
	Node0x239f0c0 -> Node0x239f130;
	Node0x239eb40 -> Node0x239f130;
	Node0x239f130 -> Node0x239f1a0;
	Node0x239ec50 -> Node0x239f1a0;
	Node0x239f1a0 -> Node0x239f210;
	Node0x239ef70 -> Node0x239f210;
	Node0x239e090 -> Node0x239f280;
	Node0x239f210 -> Node0x239f280;
	Node0x239f280 -> Node0x233e268;
	Node0x233e268 -> Node0x239f720;
}
