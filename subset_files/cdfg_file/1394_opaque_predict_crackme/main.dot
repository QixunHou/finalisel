digraph "DFG for'main' function" {
	Node0xab0898[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xab0918[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xab09a8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xab0e08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xab0ee8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xab1008[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xab1240[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xab12f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xab2268[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xab28f0[shape=record, label="  %8 = or i32 %7, %6"];
	Node0xab2960[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0xab29d0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0xab2a40[shape=record, label="  %11 = mul i32 %10, 5"];
	Node0xab2ab0[shape=record, label="  %12 = and i32 %7, %6"];
	Node0xab2b20[shape=record, label="  %13 = shl i32 %9, 1"];
	Node0xab2b90[shape=record, label="  %14 = xor i32 %8, -1"];
	Node0xab2c00[shape=record, label="  %15 = mul i32 %14, 5"];
	Node0xab2c70[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0xab2ce0[shape=record, label="  %17 = shl i32 %12, 2"];
	Node0xab2d50[shape=record, label="  %18 = sub i32 1, %8"];
	Node0xab2dc0[shape=record, label="  %19 = add i32 %18, %12"];
	Node0xab2e30[shape=record, label="  %20 = add i32 %19, %11"];
	Node0xab2ea0[shape=record, label="  %21 = add i32 %20, %13"];
	Node0xab2f10[shape=record, label="  %22 = add i32 %21, %16"];
	Node0xab2f80[shape=record, label="  %23 = sub i32 %22, %17"];
	Node0xab2ff0[shape=record, label="  %24 = icmp eq i32 %8, %23"];
	Node0xa519d8[shape=record, label="  %25 = select i1 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xab3080[shape=record, label="  %26 = call i32 @puts(i8* nonnull dereferenceable(1) %25) #5"];
	Node0xab32d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xab3438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xab34f8[shape=record, label="  ret i32 0"];
	Node0xab0898 -> Node0xab0918;
	Node0xab0918 -> Node0xab09a8;
	Node0xab09a8 -> Node0xab0e08;
	Node0xab0e08 -> Node0xab0ee8;
	Node0xab0ee8 -> Node0xab1008;
	Node0xab1008 -> Node0xab1240;
	Node0xab1240 -> Node0xab12f8;
	Node0xab12f8 -> Node0xab2268;
	Node0xab2268 -> Node0xab28f0;
	Node0xab28f0 -> Node0xab2960;
	Node0xab2960 -> Node0xab29d0;
	Node0xab29d0 -> Node0xab2a40;
	Node0xab2a40 -> Node0xab2ab0;
	Node0xab2ab0 -> Node0xab2b20;
	Node0xab2b20 -> Node0xab2b90;
	Node0xab2b90 -> Node0xab2c00;
	Node0xab2c00 -> Node0xab2c70;
	Node0xab2c70 -> Node0xab2ce0;
	Node0xab2ce0 -> Node0xab2d50;
	Node0xab2d50 -> Node0xab2dc0;
	Node0xab2dc0 -> Node0xab2e30;
	Node0xab2e30 -> Node0xab2ea0;
	Node0xab2ea0 -> Node0xab2f10;
	Node0xab2f10 -> Node0xab2f80;
	Node0xab2f80 -> Node0xab2ff0;
	Node0xab2ff0 -> Node0xa519d8;
	Node0xa519d8 -> Node0xab3080;
	Node0xab3080 -> Node0xab32d8;
	Node0xab32d8 -> Node0xab3438;
	Node0xab3438 -> Node0xab34f8;
edge [color=red]
	Node0xab0898 -> Node0xab09a8;
	Node0xab09a8 -> Node0xab0e08;
	Node0xab0918 -> Node0xab0ee8;
	Node0xab0ee8 -> Node0xab1008;
	Node0xab0898 -> Node0xab1240;
	Node0xab0918 -> Node0xab1240;
	Node0xab0898 -> Node0xab12f8;
	Node0xab0918 -> Node0xab2268;
	Node0xab2268 -> Node0xab28f0;
	Node0xab12f8 -> Node0xab28f0;
	Node0xab2268 -> Node0xab2960;
	Node0xab12f8 -> Node0xab2960;
	Node0xab2960 -> Node0xab29d0;
	Node0xab29d0 -> Node0xab2a40;
	Node0xab2268 -> Node0xab2ab0;
	Node0xab12f8 -> Node0xab2ab0;
	Node0xab2960 -> Node0xab2b20;
	Node0xab28f0 -> Node0xab2b90;
	Node0xab2b90 -> Node0xab2c00;
	Node0xab2c00 -> Node0xab2c70;
	Node0xab2ab0 -> Node0xab2ce0;
	Node0xab28f0 -> Node0xab2d50;
	Node0xab2d50 -> Node0xab2dc0;
	Node0xab2ab0 -> Node0xab2dc0;
	Node0xab2dc0 -> Node0xab2e30;
	Node0xab2a40 -> Node0xab2e30;
	Node0xab2e30 -> Node0xab2ea0;
	Node0xab2b20 -> Node0xab2ea0;
	Node0xab2ea0 -> Node0xab2f10;
	Node0xab2c70 -> Node0xab2f10;
	Node0xab2f10 -> Node0xab2f80;
	Node0xab2ce0 -> Node0xab2f80;
	Node0xab28f0 -> Node0xab2ff0;
	Node0xab2f80 -> Node0xab2ff0;
	Node0xab2ff0 -> Node0xa519d8;
	Node0xa519d8 -> Node0xab3080;
	Node0xab0ee8 -> Node0xab32d8;
	Node0xab09a8 -> Node0xab3438;
}
