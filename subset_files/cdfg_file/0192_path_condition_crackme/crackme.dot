digraph "DFG for'crackme' function" {
	Node0x1203970[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1203ff0[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0x1204060[shape=record, label="  %7 = or i32 %6, %2"];
	Node0x12040d0[shape=record, label="  %8 = sub i32 %7, %5"];
	Node0x1204140[shape=record, label="  %9 = xor i32 %3, %0"];
	Node0x12041b0[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0x1204220[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x12042c0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1204360[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x12043d0[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x1204440[shape=record, label="  %15 = xor i32 %0, -1"];
	Node0x12044b0[shape=record, label="  %16 = and i32 %3, %0"];
	Node0x1204520[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1204590[shape=record, label="  %18 = or i32 %3, %0"];
	Node0x1204600[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1204670[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x1204710[shape=record, label="  %21 = xor i32 %3, 2147483647"];
	Node0x1204780[shape=record, label="  %22 = and i32 %21, %0"];
	Node0x12047f0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x1204860[shape=record, label="  %24 = and i32 %15, %3"];
	Node0x12048d0[shape=record, label="  %25 = sub i32 %14, %24"];
	Node0x1204970[shape=record, label="  %26 = mul i32 %25, 3"];
	Node0x12049e0[shape=record, label="  %27 = sub i32 1, %0"];
	Node0x1204a50[shape=record, label="  %28 = add i32 %27, %6"];
	Node0x1204ac0[shape=record, label="  %29 = add i32 %28, %5"];
	Node0x1204b30[shape=record, label="  %30 = add i32 %29, %17"];
	Node0x1204ba0[shape=record, label="  %31 = add i32 %30, %13"];
	Node0x1204c10[shape=record, label="  %32 = sub i32 %31, %20"];
	Node0x1204e90[shape=record, label="  %33 = sub i32 %32, %23"];
	Node0x1204f00[shape=record, label="  %34 = add i32 %33, %26"];
	Node0x1204f70[shape=record, label="  %35 = icmp eq i32 %10, %34"];
	Node0x11a4268[shape=record, label="  %36 = select i1 %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1205410[shape=record, label="  %37 = tail call i32 @puts(i8* nonnull dereferenceable(1) %36)"];
	Node0x1205460[shape=record, label="  ret void"];
	Node0x1203970 -> Node0x1203ff0;
	Node0x1203ff0 -> Node0x1204060;
	Node0x1204060 -> Node0x12040d0;
	Node0x12040d0 -> Node0x1204140;
	Node0x1204140 -> Node0x12041b0;
	Node0x12041b0 -> Node0x1204220;
	Node0x1204220 -> Node0x12042c0;
	Node0x12042c0 -> Node0x1204360;
	Node0x1204360 -> Node0x12043d0;
	Node0x12043d0 -> Node0x1204440;
	Node0x1204440 -> Node0x12044b0;
	Node0x12044b0 -> Node0x1204520;
	Node0x1204520 -> Node0x1204590;
	Node0x1204590 -> Node0x1204600;
	Node0x1204600 -> Node0x1204670;
	Node0x1204670 -> Node0x1204710;
	Node0x1204710 -> Node0x1204780;
	Node0x1204780 -> Node0x12047f0;
	Node0x12047f0 -> Node0x1204860;
	Node0x1204860 -> Node0x12048d0;
	Node0x12048d0 -> Node0x1204970;
	Node0x1204970 -> Node0x12049e0;
	Node0x12049e0 -> Node0x1204a50;
	Node0x1204a50 -> Node0x1204ac0;
	Node0x1204ac0 -> Node0x1204b30;
	Node0x1204b30 -> Node0x1204ba0;
	Node0x1204ba0 -> Node0x1204c10;
	Node0x1204c10 -> Node0x1204e90;
	Node0x1204e90 -> Node0x1204f00;
	Node0x1204f00 -> Node0x1204f70;
	Node0x1204f70 -> Node0x11a4268;
	Node0x11a4268 -> Node0x1205410;
	Node0x1205410 -> Node0x1205460;
edge [color=red]
	Node0x1203ff0 -> Node0x1204060;
	Node0x1204060 -> Node0x12040d0;
	Node0x1203970 -> Node0x12040d0;
	Node0x12040d0 -> Node0x12041b0;
	Node0x1204140 -> Node0x12041b0;
	Node0x1204220 -> Node0x12042c0;
	Node0x12042c0 -> Node0x1204360;
	Node0x12044b0 -> Node0x1204520;
	Node0x1204590 -> Node0x1204600;
	Node0x1204600 -> Node0x1204670;
	Node0x1204710 -> Node0x1204780;
	Node0x1204780 -> Node0x12047f0;
	Node0x1204440 -> Node0x1204860;
	Node0x12043d0 -> Node0x12048d0;
	Node0x1204860 -> Node0x12048d0;
	Node0x12048d0 -> Node0x1204970;
	Node0x12049e0 -> Node0x1204a50;
	Node0x1203ff0 -> Node0x1204a50;
	Node0x1204a50 -> Node0x1204ac0;
	Node0x1203970 -> Node0x1204ac0;
	Node0x1204ac0 -> Node0x1204b30;
	Node0x1204520 -> Node0x1204b30;
	Node0x1204b30 -> Node0x1204ba0;
	Node0x1204360 -> Node0x1204ba0;
	Node0x1204ba0 -> Node0x1204c10;
	Node0x1204670 -> Node0x1204c10;
	Node0x1204c10 -> Node0x1204e90;
	Node0x12047f0 -> Node0x1204e90;
	Node0x1204e90 -> Node0x1204f00;
	Node0x1204970 -> Node0x1204f00;
	Node0x12041b0 -> Node0x1204f70;
	Node0x1204f00 -> Node0x1204f70;
	Node0x1204f70 -> Node0x11a4268;
	Node0x11a4268 -> Node0x1205410;
}
