digraph "DFG for'main' function" {
	Node0x1205628[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12056a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1205738[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1205798[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1205848[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1205c78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1205d58[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1205e58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1205f18[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1205fc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1206088[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1206138[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x12009a0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1206338[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12072a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1207918[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1207978[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x12079f0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1207a60[shape=record, label="  %15 = xor i32 %11, -1"];
	Node0x1207ad0[shape=record, label="  %16 = or i32 %12, %15"];
	Node0x1207b40[shape=record, label="  %17 = sub i32 %16, %14"];
	Node0x1207bb0[shape=record, label="  %18 = xor i32 %13, %10"];
	Node0x1207c20[shape=record, label="  %19 = sub i32 %17, %18"];
	Node0x1207c90[shape=record, label="  %20 = or i32 %12, %11"];
	Node0x1207d00[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1207d70[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x1207de0[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x1207e50[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0x1207ec0[shape=record, label="  %25 = and i32 %13, %10"];
	Node0x1207f30[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x1207fa0[shape=record, label="  %27 = or i32 %13, %10"];
	Node0x1208010[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x1208080[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x12080f0[shape=record, label="  %30 = xor i32 %13, 2147483647"];
	Node0x1208160[shape=record, label="  %31 = and i32 %30, %10"];
	Node0x12081d0[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x1208240[shape=record, label="  %33 = and i32 %13, %24"];
	Node0x12082b0[shape=record, label="  %34 = sub i32 %23, %33"];
	Node0x1208320[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x1208390[shape=record, label="  %36 = sub i32 1, %10"];
	Node0x1208400[shape=record, label="  %37 = add i32 %36, %15"];
	Node0x1208470[shape=record, label="  %38 = add i32 %37, %14"];
	Node0x12084e0[shape=record, label="  %39 = add i32 %38, %26"];
	Node0x1208550[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x12085c0[shape=record, label="  %41 = sub i32 %40, %29"];
	Node0x1208630[shape=record, label="  %42 = sub i32 %41, %32"];
	Node0x12086a0[shape=record, label="  %43 = add i32 %42, %35"];
	Node0x1208710[shape=record, label="  %44 = icmp eq i32 %19, %43"];
	Node0x11a58b8[shape=record, label="  %45 = select i1 %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x12087a0[shape=record, label="  %46 = call i32 @puts(i8* nonnull dereferenceable(1) %45) #5"];
	Node0x1208a48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1208ba8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1208cb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1208dc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1208e88[shape=record, label="  ret i32 0"];
	Node0x1205628 -> Node0x12056a8;
	Node0x12056a8 -> Node0x1205738;
	Node0x1205738 -> Node0x1205798;
	Node0x1205798 -> Node0x1205848;
	Node0x1205848 -> Node0x1205c78;
	Node0x1205c78 -> Node0x1205d58;
	Node0x1205d58 -> Node0x1205e58;
	Node0x1205e58 -> Node0x1205f18;
	Node0x1205f18 -> Node0x1205fc8;
	Node0x1205fc8 -> Node0x1206088;
	Node0x1206088 -> Node0x1206138;
	Node0x1206138 -> Node0x12009a0;
	Node0x12009a0 -> Node0x1206338;
	Node0x1206338 -> Node0x12072a8;
	Node0x12072a8 -> Node0x1207918;
	Node0x1207918 -> Node0x1207978;
	Node0x1207978 -> Node0x12079f0;
	Node0x12079f0 -> Node0x1207a60;
	Node0x1207a60 -> Node0x1207ad0;
	Node0x1207ad0 -> Node0x1207b40;
	Node0x1207b40 -> Node0x1207bb0;
	Node0x1207bb0 -> Node0x1207c20;
	Node0x1207c20 -> Node0x1207c90;
	Node0x1207c90 -> Node0x1207d00;
	Node0x1207d00 -> Node0x1207d70;
	Node0x1207d70 -> Node0x1207de0;
	Node0x1207de0 -> Node0x1207e50;
	Node0x1207e50 -> Node0x1207ec0;
	Node0x1207ec0 -> Node0x1207f30;
	Node0x1207f30 -> Node0x1207fa0;
	Node0x1207fa0 -> Node0x1208010;
	Node0x1208010 -> Node0x1208080;
	Node0x1208080 -> Node0x12080f0;
	Node0x12080f0 -> Node0x1208160;
	Node0x1208160 -> Node0x12081d0;
	Node0x12081d0 -> Node0x1208240;
	Node0x1208240 -> Node0x12082b0;
	Node0x12082b0 -> Node0x1208320;
	Node0x1208320 -> Node0x1208390;
	Node0x1208390 -> Node0x1208400;
	Node0x1208400 -> Node0x1208470;
	Node0x1208470 -> Node0x12084e0;
	Node0x12084e0 -> Node0x1208550;
	Node0x1208550 -> Node0x12085c0;
	Node0x12085c0 -> Node0x1208630;
	Node0x1208630 -> Node0x12086a0;
	Node0x12086a0 -> Node0x1208710;
	Node0x1208710 -> Node0x11a58b8;
	Node0x11a58b8 -> Node0x12087a0;
	Node0x12087a0 -> Node0x1208a48;
	Node0x1208a48 -> Node0x1208ba8;
	Node0x1208ba8 -> Node0x1208cb8;
	Node0x1208cb8 -> Node0x1208dc8;
	Node0x1208dc8 -> Node0x1208e88;
edge [color=red]
	Node0x1205628 -> Node0x1205848;
	Node0x1205848 -> Node0x1205c78;
	Node0x12056a8 -> Node0x1205d58;
	Node0x1205d58 -> Node0x1205e58;
	Node0x1205738 -> Node0x1205f18;
	Node0x1205f18 -> Node0x1205fc8;
	Node0x1205798 -> Node0x1206088;
	Node0x1206088 -> Node0x1206138;
	Node0x1205628 -> Node0x12009a0;
	Node0x12056a8 -> Node0x12009a0;
	Node0x1205738 -> Node0x12009a0;
	Node0x1205798 -> Node0x12009a0;
	Node0x1205628 -> Node0x1206338;
	Node0x12056a8 -> Node0x12072a8;
	Node0x1205738 -> Node0x1207918;
	Node0x1205798 -> Node0x1207978;
	Node0x1207918 -> Node0x12079f0;
	Node0x12072a8 -> Node0x12079f0;
	Node0x12072a8 -> Node0x1207a60;
	Node0x1207918 -> Node0x1207ad0;
	Node0x1207a60 -> Node0x1207ad0;
	Node0x1207ad0 -> Node0x1207b40;
	Node0x12079f0 -> Node0x1207b40;
	Node0x1207978 -> Node0x1207bb0;
	Node0x1206338 -> Node0x1207bb0;
	Node0x1207b40 -> Node0x1207c20;
	Node0x1207bb0 -> Node0x1207c20;
	Node0x1207918 -> Node0x1207c90;
	Node0x12072a8 -> Node0x1207c90;
	Node0x1207c90 -> Node0x1207d00;
	Node0x1207d00 -> Node0x1207d70;
	Node0x1207918 -> Node0x1207de0;
	Node0x12072a8 -> Node0x1207de0;
	Node0x1206338 -> Node0x1207e50;
	Node0x1207978 -> Node0x1207ec0;
	Node0x1206338 -> Node0x1207ec0;
	Node0x1207ec0 -> Node0x1207f30;
	Node0x1207978 -> Node0x1207fa0;
	Node0x1206338 -> Node0x1207fa0;
	Node0x1207fa0 -> Node0x1208010;
	Node0x1208010 -> Node0x1208080;
	Node0x1207978 -> Node0x12080f0;
	Node0x12080f0 -> Node0x1208160;
	Node0x1206338 -> Node0x1208160;
	Node0x1208160 -> Node0x12081d0;
	Node0x1207978 -> Node0x1208240;
	Node0x1207e50 -> Node0x1208240;
	Node0x1207de0 -> Node0x12082b0;
	Node0x1208240 -> Node0x12082b0;
	Node0x12082b0 -> Node0x1208320;
	Node0x1206338 -> Node0x1208390;
	Node0x1208390 -> Node0x1208400;
	Node0x1207a60 -> Node0x1208400;
	Node0x1208400 -> Node0x1208470;
	Node0x12079f0 -> Node0x1208470;
	Node0x1208470 -> Node0x12084e0;
	Node0x1207f30 -> Node0x12084e0;
	Node0x12084e0 -> Node0x1208550;
	Node0x1207d70 -> Node0x1208550;
	Node0x1208550 -> Node0x12085c0;
	Node0x1208080 -> Node0x12085c0;
	Node0x12085c0 -> Node0x1208630;
	Node0x12081d0 -> Node0x1208630;
	Node0x1208630 -> Node0x12086a0;
	Node0x1208320 -> Node0x12086a0;
	Node0x1207c20 -> Node0x1208710;
	Node0x12086a0 -> Node0x1208710;
	Node0x1208710 -> Node0x11a58b8;
	Node0x11a58b8 -> Node0x12087a0;
	Node0x1206088 -> Node0x1208a48;
	Node0x1205f18 -> Node0x1208ba8;
	Node0x1205d58 -> Node0x1208cb8;
	Node0x1205848 -> Node0x1208dc8;
}
