digraph "DFG for'crackme' function" {
	Node0x1970760[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x19707d0[shape=record, label="  %6 = xor i32 %2, %1"];
	Node0x1970e50[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x1970ec0[shape=record, label="  %8 = xor i32 %3, %0"];
	Node0x1970f30[shape=record, label="  %9 = sub i32 %7, %5"];
	Node0x1970fa0[shape=record, label="  %10 = add i32 %9, %6"];
	Node0x1971010[shape=record, label="  %11 = sub i32 %10, %8"];
	Node0x1971080[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x19710f0[shape=record, label="  %13 = and i32 %12, %1"];
	Node0x1971160[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x19711d0[shape=record, label="  %15 = or i32 %12, %1"];
	Node0x1971240[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x19712e0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x1971380[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x19713f0[shape=record, label="  %19 = xor i32 %15, -1"];
	Node0x1971460[shape=record, label="  %20 = or i32 %7, %3"];
	Node0x19714d0[shape=record, label="  %21 = and i32 %7, %3"];
	Node0x1971540[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x19715b0[shape=record, label="  %23 = shl i32 %3, 1"];
	Node0x1971620[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x1971690[shape=record, label="  %25 = or i32 %3, %0"];
	Node0x1971730[shape=record, label="  %26 = mul i32 %25, 5"];
	Node0x19717a0[shape=record, label="  %27 = shl i32 %25, 1"];
	Node0x1971810[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x1971880[shape=record, label="  %29 = xor i32 %20, -1"];
	Node0x1971920[shape=record, label="  %30 = mul i32 %29, -10"];
	Node0x19719c0[shape=record, label="  %31 = mul i32 %21, -6"];
	Node0x1971a30[shape=record, label="  %32 = and i32 %3, %0"];
	Node0x1971ce0[shape=record, label="  %33 = mul i32 %32, -7"];
	Node0x1971d50[shape=record, label="  %34 = add i32 %13, %19"];
	Node0x1971df0[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x1971e60[shape=record, label="  %36 = add i32 %1, 1"];
	Node0x1971ed0[shape=record, label="  %37 = sub i32 %36, %2"];
	Node0x1971f40[shape=record, label="  %38 = add i32 %37, %14"];
	Node0x1971fb0[shape=record, label="  %39 = sub i32 %38, %15"];
	Node0x1972020[shape=record, label="  %40 = add i32 %39, %5"];
	Node0x1972090[shape=record, label="  %41 = add i32 %40, %3"];
	Node0x1972100[shape=record, label="  %42 = sub i32 %41, %20"];
	Node0x1972170[shape=record, label="  %43 = add i32 %42, %22"];
	Node0x19721e0[shape=record, label="  %44 = add i32 %43, %18"];
	Node0x1972250[shape=record, label="  %45 = add i32 %44, %24"];
	Node0x19722c0[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x1972330[shape=record, label="  %47 = add i32 %46, %30"];
	Node0x19723a0[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x1972410[shape=record, label="  %49 = add i32 %48, %33"];
	Node0x1972480[shape=record, label="  %50 = add i32 %49, %35"];
	Node0x19724f0[shape=record, label="  %51 = sub i32 %50, %28"];
	Node0x1972560[shape=record, label="  %52 = icmp eq i32 %11, %51"];
	Node0x1911268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1972a00[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0x1972a50[shape=record, label="  ret void"];
	Node0x1970760 -> Node0x19707d0;
	Node0x19707d0 -> Node0x1970e50;
	Node0x1970e50 -> Node0x1970ec0;
	Node0x1970ec0 -> Node0x1970f30;
	Node0x1970f30 -> Node0x1970fa0;
	Node0x1970fa0 -> Node0x1971010;
	Node0x1971010 -> Node0x1971080;
	Node0x1971080 -> Node0x19710f0;
	Node0x19710f0 -> Node0x1971160;
	Node0x1971160 -> Node0x19711d0;
	Node0x19711d0 -> Node0x1971240;
	Node0x1971240 -> Node0x19712e0;
	Node0x19712e0 -> Node0x1971380;
	Node0x1971380 -> Node0x19713f0;
	Node0x19713f0 -> Node0x1971460;
	Node0x1971460 -> Node0x19714d0;
	Node0x19714d0 -> Node0x1971540;
	Node0x1971540 -> Node0x19715b0;
	Node0x19715b0 -> Node0x1971620;
	Node0x1971620 -> Node0x1971690;
	Node0x1971690 -> Node0x1971730;
	Node0x1971730 -> Node0x19717a0;
	Node0x19717a0 -> Node0x1971810;
	Node0x1971810 -> Node0x1971880;
	Node0x1971880 -> Node0x1971920;
	Node0x1971920 -> Node0x19719c0;
	Node0x19719c0 -> Node0x1971a30;
	Node0x1971a30 -> Node0x1971ce0;
	Node0x1971ce0 -> Node0x1971d50;
	Node0x1971d50 -> Node0x1971df0;
	Node0x1971df0 -> Node0x1971e60;
	Node0x1971e60 -> Node0x1971ed0;
	Node0x1971ed0 -> Node0x1971f40;
	Node0x1971f40 -> Node0x1971fb0;
	Node0x1971fb0 -> Node0x1972020;
	Node0x1972020 -> Node0x1972090;
	Node0x1972090 -> Node0x1972100;
	Node0x1972100 -> Node0x1972170;
	Node0x1972170 -> Node0x19721e0;
	Node0x19721e0 -> Node0x1972250;
	Node0x1972250 -> Node0x19722c0;
	Node0x19722c0 -> Node0x1972330;
	Node0x1972330 -> Node0x19723a0;
	Node0x19723a0 -> Node0x1972410;
	Node0x1972410 -> Node0x1972480;
	Node0x1972480 -> Node0x19724f0;
	Node0x19724f0 -> Node0x1972560;
	Node0x1972560 -> Node0x1911268;
	Node0x1911268 -> Node0x1972a00;
	Node0x1972a00 -> Node0x1972a50;
edge [color=red]
	Node0x1970e50 -> Node0x1970f30;
	Node0x1970760 -> Node0x1970f30;
	Node0x1970f30 -> Node0x1970fa0;
	Node0x19707d0 -> Node0x1970fa0;
	Node0x1970fa0 -> Node0x1971010;
	Node0x1970ec0 -> Node0x1971010;
	Node0x1971080 -> Node0x19710f0;
	Node0x19710f0 -> Node0x1971160;
	Node0x1971080 -> Node0x19711d0;
	Node0x1971240 -> Node0x19712e0;
	Node0x19712e0 -> Node0x1971380;
	Node0x19711d0 -> Node0x19713f0;
	Node0x1970e50 -> Node0x1971460;
	Node0x1970e50 -> Node0x19714d0;
	Node0x19714d0 -> Node0x1971540;
	Node0x19715b0 -> Node0x1971620;
	Node0x1971690 -> Node0x1971730;
	Node0x1971690 -> Node0x19717a0;
	Node0x19717a0 -> Node0x1971810;
	Node0x1971460 -> Node0x1971880;
	Node0x1971880 -> Node0x1971920;
	Node0x19714d0 -> Node0x19719c0;
	Node0x1971a30 -> Node0x1971ce0;
	Node0x19710f0 -> Node0x1971d50;
	Node0x19713f0 -> Node0x1971d50;
	Node0x1971d50 -> Node0x1971df0;
	Node0x1971e60 -> Node0x1971ed0;
	Node0x1971ed0 -> Node0x1971f40;
	Node0x1971160 -> Node0x1971f40;
	Node0x1971f40 -> Node0x1971fb0;
	Node0x19711d0 -> Node0x1971fb0;
	Node0x1971fb0 -> Node0x1972020;
	Node0x1970760 -> Node0x1972020;
	Node0x1972020 -> Node0x1972090;
	Node0x1972090 -> Node0x1972100;
	Node0x1971460 -> Node0x1972100;
	Node0x1972100 -> Node0x1972170;
	Node0x1971540 -> Node0x1972170;
	Node0x1972170 -> Node0x19721e0;
	Node0x1971380 -> Node0x19721e0;
	Node0x19721e0 -> Node0x1972250;
	Node0x1971620 -> Node0x1972250;
	Node0x1972250 -> Node0x19722c0;
	Node0x1971730 -> Node0x19722c0;
	Node0x19722c0 -> Node0x1972330;
	Node0x1971920 -> Node0x1972330;
	Node0x1972330 -> Node0x19723a0;
	Node0x19719c0 -> Node0x19723a0;
	Node0x19723a0 -> Node0x1972410;
	Node0x1971ce0 -> Node0x1972410;
	Node0x1972410 -> Node0x1972480;
	Node0x1971df0 -> Node0x1972480;
	Node0x1972480 -> Node0x19724f0;
	Node0x1971810 -> Node0x19724f0;
	Node0x1971010 -> Node0x1972560;
	Node0x19724f0 -> Node0x1972560;
	Node0x1972560 -> Node0x1911268;
	Node0x1911268 -> Node0x1972a00;
}
