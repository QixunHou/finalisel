digraph "DFG for'main' function" {
	Node0x1e0a688[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e0a708[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e0a798[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e0abf8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e0acd8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e0adf8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e0b030[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e0b0e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e0c058[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e0c6e0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1e0c750[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x1e0c7c0[shape=record, label="  %10 = and i32 %7, %6"];
	Node0x1e0c830[shape=record, label="  %11 = xor i32 %6, -1"];
	Node0x1e0c8a0[shape=record, label="  %12 = or i32 %7, %6"];
	Node0x1e0c910[shape=record, label="  %13 = and i32 %7, %11"];
	Node0x1e0c980[shape=record, label="  %14 = shl i32 %9, 1"];
	Node0x1e0c9f0[shape=record, label="  %15 = sub i32 %6, %12"];
	Node0x1e0ca60[shape=record, label="  %16 = add i32 %15, %13"];
	Node0x1e0cad0[shape=record, label="  %17 = mul i32 %16, 3"];
	Node0x1e0cb40[shape=record, label="  %18 = sub i32 %10, %9"];
	Node0x1e0cbb0[shape=record, label="  %19 = add i32 %18, %14"];
	Node0x1e0cc20[shape=record, label="  %20 = add i32 %19, %17"];
	Node0x1e0cc90[shape=record, label="  %21 = icmp eq i32 %20, %6"];
	Node0x1dab9d8[shape=record, label="  %22 = select i1 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e0cd20[shape=record, label="  %23 = call i32 @puts(i8* nonnull dereferenceable(1) %22) #5"];
	Node0x1e0cf78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e0d0d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e0d198[shape=record, label="  ret i32 0"];
	Node0x1e0a688 -> Node0x1e0a708;
	Node0x1e0a708 -> Node0x1e0a798;
	Node0x1e0a798 -> Node0x1e0abf8;
	Node0x1e0abf8 -> Node0x1e0acd8;
	Node0x1e0acd8 -> Node0x1e0adf8;
	Node0x1e0adf8 -> Node0x1e0b030;
	Node0x1e0b030 -> Node0x1e0b0e8;
	Node0x1e0b0e8 -> Node0x1e0c058;
	Node0x1e0c058 -> Node0x1e0c6e0;
	Node0x1e0c6e0 -> Node0x1e0c750;
	Node0x1e0c750 -> Node0x1e0c7c0;
	Node0x1e0c7c0 -> Node0x1e0c830;
	Node0x1e0c830 -> Node0x1e0c8a0;
	Node0x1e0c8a0 -> Node0x1e0c910;
	Node0x1e0c910 -> Node0x1e0c980;
	Node0x1e0c980 -> Node0x1e0c9f0;
	Node0x1e0c9f0 -> Node0x1e0ca60;
	Node0x1e0ca60 -> Node0x1e0cad0;
	Node0x1e0cad0 -> Node0x1e0cb40;
	Node0x1e0cb40 -> Node0x1e0cbb0;
	Node0x1e0cbb0 -> Node0x1e0cc20;
	Node0x1e0cc20 -> Node0x1e0cc90;
	Node0x1e0cc90 -> Node0x1dab9d8;
	Node0x1dab9d8 -> Node0x1e0cd20;
	Node0x1e0cd20 -> Node0x1e0cf78;
	Node0x1e0cf78 -> Node0x1e0d0d8;
	Node0x1e0d0d8 -> Node0x1e0d198;
edge [color=red]
	Node0x1e0a688 -> Node0x1e0a798;
	Node0x1e0a798 -> Node0x1e0abf8;
	Node0x1e0a708 -> Node0x1e0acd8;
	Node0x1e0acd8 -> Node0x1e0adf8;
	Node0x1e0a688 -> Node0x1e0b030;
	Node0x1e0a708 -> Node0x1e0b030;
	Node0x1e0a688 -> Node0x1e0b0e8;
	Node0x1e0a708 -> Node0x1e0c058;
	Node0x1e0c058 -> Node0x1e0c6e0;
	Node0x1e0b0e8 -> Node0x1e0c750;
	Node0x1e0c6e0 -> Node0x1e0c750;
	Node0x1e0c058 -> Node0x1e0c7c0;
	Node0x1e0b0e8 -> Node0x1e0c7c0;
	Node0x1e0b0e8 -> Node0x1e0c830;
	Node0x1e0c058 -> Node0x1e0c8a0;
	Node0x1e0b0e8 -> Node0x1e0c8a0;
	Node0x1e0c058 -> Node0x1e0c910;
	Node0x1e0c830 -> Node0x1e0c910;
	Node0x1e0c750 -> Node0x1e0c980;
	Node0x1e0b0e8 -> Node0x1e0c9f0;
	Node0x1e0c8a0 -> Node0x1e0c9f0;
	Node0x1e0c9f0 -> Node0x1e0ca60;
	Node0x1e0c910 -> Node0x1e0ca60;
	Node0x1e0ca60 -> Node0x1e0cad0;
	Node0x1e0c7c0 -> Node0x1e0cb40;
	Node0x1e0c750 -> Node0x1e0cb40;
	Node0x1e0cb40 -> Node0x1e0cbb0;
	Node0x1e0c980 -> Node0x1e0cbb0;
	Node0x1e0cbb0 -> Node0x1e0cc20;
	Node0x1e0cad0 -> Node0x1e0cc20;
	Node0x1e0cc20 -> Node0x1e0cc90;
	Node0x1e0b0e8 -> Node0x1e0cc90;
	Node0x1e0cc90 -> Node0x1dab9d8;
	Node0x1dab9d8 -> Node0x1e0cd20;
	Node0x1e0acd8 -> Node0x1e0cf78;
	Node0x1e0a798 -> Node0x1e0d0d8;
}
