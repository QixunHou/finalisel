digraph "DFG for'crackme' function" {
	Node0x1e099a0[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x1e09a10[shape=record, label="  %4 = and i32 %3, %0"];
	Node0x1e09ad0[shape=record, label="  %5 = and i32 %1, %0"];
	Node0x1e09b40[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x1e09bb0[shape=record, label="  %7 = or i32 %1, %0"];
	Node0x1e09c20[shape=record, label="  %8 = and i32 %6, %1"];
	Node0x1e09c90[shape=record, label="  %9 = shl i32 %4, 1"];
	Node0x1e09d00[shape=record, label="  %10 = sub i32 %0, %7"];
	Node0x1e09d70[shape=record, label="  %11 = add i32 %10, %8"];
	Node0x1e09e10[shape=record, label="  %12 = mul i32 %11, 3"];
	Node0x1e09e80[shape=record, label="  %13 = sub i32 %5, %4"];
	Node0x1e09ef0[shape=record, label="  %14 = add i32 %13, %9"];
	Node0x1e09f60[shape=record, label="  %15 = add i32 %14, %12"];
	Node0x1e09fd0[shape=record, label="  %16 = icmp eq i32 %15, %0"];
	Node0x1daa268[shape=record, label="  %17 = select i1 %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e0a470[shape=record, label="  %18 = tail call i32 @puts(i8* nonnull dereferenceable(1) %17)"];
	Node0x1e0a4c0[shape=record, label="  ret void"];
	Node0x1e099a0 -> Node0x1e09a10;
	Node0x1e09a10 -> Node0x1e09ad0;
	Node0x1e09ad0 -> Node0x1e09b40;
	Node0x1e09b40 -> Node0x1e09bb0;
	Node0x1e09bb0 -> Node0x1e09c20;
	Node0x1e09c20 -> Node0x1e09c90;
	Node0x1e09c90 -> Node0x1e09d00;
	Node0x1e09d00 -> Node0x1e09d70;
	Node0x1e09d70 -> Node0x1e09e10;
	Node0x1e09e10 -> Node0x1e09e80;
	Node0x1e09e80 -> Node0x1e09ef0;
	Node0x1e09ef0 -> Node0x1e09f60;
	Node0x1e09f60 -> Node0x1e09fd0;
	Node0x1e09fd0 -> Node0x1daa268;
	Node0x1daa268 -> Node0x1e0a470;
	Node0x1e0a470 -> Node0x1e0a4c0;
edge [color=red]
	Node0x1e099a0 -> Node0x1e09a10;
	Node0x1e09b40 -> Node0x1e09c20;
	Node0x1e09a10 -> Node0x1e09c90;
	Node0x1e09bb0 -> Node0x1e09d00;
	Node0x1e09d00 -> Node0x1e09d70;
	Node0x1e09c20 -> Node0x1e09d70;
	Node0x1e09d70 -> Node0x1e09e10;
	Node0x1e09ad0 -> Node0x1e09e80;
	Node0x1e09a10 -> Node0x1e09e80;
	Node0x1e09e80 -> Node0x1e09ef0;
	Node0x1e09c90 -> Node0x1e09ef0;
	Node0x1e09ef0 -> Node0x1e09f60;
	Node0x1e09e10 -> Node0x1e09f60;
	Node0x1e09f60 -> Node0x1e09fd0;
	Node0x1e09fd0 -> Node0x1daa268;
	Node0x1daa268 -> Node0x1e0a470;
}
