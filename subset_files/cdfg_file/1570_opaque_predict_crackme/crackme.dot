digraph "DFG for'crackme' function" {
	Node0x1ddf780[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1ddfe00[shape=record, label="  %6 = shl i32 %3, 1"];
	Node0x1ddfe70[shape=record, label="  %7 = sub i32 %5, %6"];
	Node0x1ddfee0[shape=record, label="  %8 = or i32 %2, %1"];
	Node0x1ddff80[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0x1ddfff0[shape=record, label="  %10 = and i32 %2, %1"];
	Node0x1de0060[shape=record, label="  %11 = or i32 %9, 1"];
	Node0x1de0100[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x1de0170[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1de01e0[shape=record, label="  %14 = and i32 %12, %1"];
	Node0x1de0250[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1de02c0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x1de0330[shape=record, label="  %17 = xor i32 %5, -1"];
	Node0x1de03d0[shape=record, label="  %18 = shl i32 %8, 2"];
	Node0x1de0470[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0x1de04e0[shape=record, label="  %20 = xor i32 %1, -1"];
	Node0x1de0550[shape=record, label="  %21 = and i32 %20, %2"];
	Node0x1de05f0[shape=record, label="  %22 = mul i32 %21, 6"];
	Node0x1de0660[shape=record, label="  %23 = xor i32 %0, -1"];
	Node0x1de06d0[shape=record, label="  %24 = or i32 %3, %0"];
	Node0x1de0740[shape=record, label="  %25 = or i32 %23, %3"];
	Node0x1de07b0[shape=record, label="  %26 = xor i32 %23, %3"];
	Node0x1de0820[shape=record, label="  %27 = and i32 %23, %3"];
	Node0x1de0890[shape=record, label="  %28 = shl i32 %24, 1"];
	Node0x1de0900[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x1de0970[shape=record, label="  %30 = shl i32 %25, 1"];
	Node0x1de09e0[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x1de0a80[shape=record, label="  %32 = mul i32 %27, -5"];
	Node0x1de0d00[shape=record, label="  %33 = and i32 %3, %0"];
	Node0x1de0d70[shape=record, label="  %34 = shl i32 %33, 2"];
	Node0x1de0de0[shape=record, label="  %35 = add i32 %14, %1"];
	Node0x1de0e80[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0x1de0ef0[shape=record, label="  %37 = sub i32 -2, %0"];
	Node0x1de0f60[shape=record, label="  %38 = add i32 %37, %10"];
	Node0x1de0fd0[shape=record, label="  %39 = sub i32 %38, %13"];
	Node0x1de1040[shape=record, label="  %40 = add i32 %39, %17"];
	Node0x1de10b0[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x1de1120[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x1de1190[shape=record, label="  %43 = sub i32 %42, %25"];
	Node0x1de1200[shape=record, label="  %44 = add i32 %43, %26"];
	Node0x1de1270[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x1de12e0[shape=record, label="  %46 = add i32 %45, %11"];
	Node0x1de1350[shape=record, label="  %47 = sub i32 %46, %16"];
	Node0x1de13c0[shape=record, label="  %48 = add i32 %47, %19"];
	Node0x1de1430[shape=record, label="  %49 = add i32 %48, %32"];
	Node0x1de14a0[shape=record, label="  %50 = sub i32 %49, %34"];
	Node0x1de1510[shape=record, label="  %51 = add i32 %50, %36"];
	Node0x1de1580[shape=record, label="  %52 = sub i32 %51, %29"];
	Node0x1de15f0[shape=record, label="  %53 = sub i32 %52, %31"];
	Node0x1de1660[shape=record, label="  %54 = icmp eq i32 %7, %53"];
	Node0x1d80268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1de1b00[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0x1de1b50[shape=record, label="  ret void"];
	Node0x1ddf780 -> Node0x1ddfe00;
	Node0x1ddfe00 -> Node0x1ddfe70;
	Node0x1ddfe70 -> Node0x1ddfee0;
	Node0x1ddfee0 -> Node0x1ddff80;
	Node0x1ddff80 -> Node0x1ddfff0;
	Node0x1ddfff0 -> Node0x1de0060;
	Node0x1de0060 -> Node0x1de0100;
	Node0x1de0100 -> Node0x1de0170;
	Node0x1de0170 -> Node0x1de01e0;
	Node0x1de01e0 -> Node0x1de0250;
	Node0x1de0250 -> Node0x1de02c0;
	Node0x1de02c0 -> Node0x1de0330;
	Node0x1de0330 -> Node0x1de03d0;
	Node0x1de03d0 -> Node0x1de0470;
	Node0x1de0470 -> Node0x1de04e0;
	Node0x1de04e0 -> Node0x1de0550;
	Node0x1de0550 -> Node0x1de05f0;
	Node0x1de05f0 -> Node0x1de0660;
	Node0x1de0660 -> Node0x1de06d0;
	Node0x1de06d0 -> Node0x1de0740;
	Node0x1de0740 -> Node0x1de07b0;
	Node0x1de07b0 -> Node0x1de0820;
	Node0x1de0820 -> Node0x1de0890;
	Node0x1de0890 -> Node0x1de0900;
	Node0x1de0900 -> Node0x1de0970;
	Node0x1de0970 -> Node0x1de09e0;
	Node0x1de09e0 -> Node0x1de0a80;
	Node0x1de0a80 -> Node0x1de0d00;
	Node0x1de0d00 -> Node0x1de0d70;
	Node0x1de0d70 -> Node0x1de0de0;
	Node0x1de0de0 -> Node0x1de0e80;
	Node0x1de0e80 -> Node0x1de0ef0;
	Node0x1de0ef0 -> Node0x1de0f60;
	Node0x1de0f60 -> Node0x1de0fd0;
	Node0x1de0fd0 -> Node0x1de1040;
	Node0x1de1040 -> Node0x1de10b0;
	Node0x1de10b0 -> Node0x1de1120;
	Node0x1de1120 -> Node0x1de1190;
	Node0x1de1190 -> Node0x1de1200;
	Node0x1de1200 -> Node0x1de1270;
	Node0x1de1270 -> Node0x1de12e0;
	Node0x1de12e0 -> Node0x1de1350;
	Node0x1de1350 -> Node0x1de13c0;
	Node0x1de13c0 -> Node0x1de1430;
	Node0x1de1430 -> Node0x1de14a0;
	Node0x1de14a0 -> Node0x1de1510;
	Node0x1de1510 -> Node0x1de1580;
	Node0x1de1580 -> Node0x1de15f0;
	Node0x1de15f0 -> Node0x1de1660;
	Node0x1de1660 -> Node0x1d80268;
	Node0x1d80268 -> Node0x1de1b00;
	Node0x1de1b00 -> Node0x1de1b50;
edge [color=red]
	Node0x1ddf780 -> Node0x1ddfe70;
	Node0x1ddfe00 -> Node0x1ddfe70;
	Node0x1ddfee0 -> Node0x1ddff80;
	Node0x1ddff80 -> Node0x1de0060;
	Node0x1de0100 -> Node0x1de0170;
	Node0x1de0100 -> Node0x1de01e0;
	Node0x1de01e0 -> Node0x1de0250;
	Node0x1de0250 -> Node0x1de02c0;
	Node0x1ddf780 -> Node0x1de0330;
	Node0x1ddfee0 -> Node0x1de03d0;
	Node0x1de03d0 -> Node0x1de0470;
	Node0x1de04e0 -> Node0x1de0550;
	Node0x1de0550 -> Node0x1de05f0;
	Node0x1de0660 -> Node0x1de0740;
	Node0x1de0660 -> Node0x1de07b0;
	Node0x1de0660 -> Node0x1de0820;
	Node0x1de06d0 -> Node0x1de0890;
	Node0x1de0890 -> Node0x1de0900;
	Node0x1de0740 -> Node0x1de0970;
	Node0x1de0970 -> Node0x1de09e0;
	Node0x1de0820 -> Node0x1de0a80;
	Node0x1de0d00 -> Node0x1de0d70;
	Node0x1de01e0 -> Node0x1de0de0;
	Node0x1de0de0 -> Node0x1de0e80;
	Node0x1de0ef0 -> Node0x1de0f60;
	Node0x1ddfff0 -> Node0x1de0f60;
	Node0x1de0f60 -> Node0x1de0fd0;
	Node0x1de0170 -> Node0x1de0fd0;
	Node0x1de0fd0 -> Node0x1de1040;
	Node0x1de0330 -> Node0x1de1040;
	Node0x1de1040 -> Node0x1de10b0;
	Node0x1de05f0 -> Node0x1de10b0;
	Node0x1de10b0 -> Node0x1de1120;
	Node0x1de06d0 -> Node0x1de1120;
	Node0x1de1120 -> Node0x1de1190;
	Node0x1de0740 -> Node0x1de1190;
	Node0x1de1190 -> Node0x1de1200;
	Node0x1de07b0 -> Node0x1de1200;
	Node0x1de1200 -> Node0x1de1270;
	Node0x1de0820 -> Node0x1de1270;
	Node0x1de1270 -> Node0x1de12e0;
	Node0x1de0060 -> Node0x1de12e0;
	Node0x1de12e0 -> Node0x1de1350;
	Node0x1de02c0 -> Node0x1de1350;
	Node0x1de1350 -> Node0x1de13c0;
	Node0x1de0470 -> Node0x1de13c0;
	Node0x1de13c0 -> Node0x1de1430;
	Node0x1de0a80 -> Node0x1de1430;
	Node0x1de1430 -> Node0x1de14a0;
	Node0x1de0d70 -> Node0x1de14a0;
	Node0x1de14a0 -> Node0x1de1510;
	Node0x1de0e80 -> Node0x1de1510;
	Node0x1de1510 -> Node0x1de1580;
	Node0x1de0900 -> Node0x1de1580;
	Node0x1de1580 -> Node0x1de15f0;
	Node0x1de09e0 -> Node0x1de15f0;
	Node0x1ddfe70 -> Node0x1de1660;
	Node0x1de15f0 -> Node0x1de1660;
	Node0x1de1660 -> Node0x1d80268;
	Node0x1d80268 -> Node0x1de1b00;
}
