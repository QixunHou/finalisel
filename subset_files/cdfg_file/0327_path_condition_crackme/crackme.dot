digraph "DFG for'crackme' function" {
	Node0x220dc40[shape=record, label="  %3 = xor i32 %0, -1"];
	Node0x220dcb0[shape=record, label="  %4 = and i32 %1, %0"];
	Node0x220dd70[shape=record, label="  %5 = xor i32 %4, -1"];
	Node0x220dde0[shape=record, label="  %6 = add i32 %5, %3"];
	Node0x220de50[shape=record, label="  %7 = xor i32 %1, %0"];
	Node0x220dec0[shape=record, label="  %8 = xor i32 %1, -1"];
	Node0x220df30[shape=record, label="  %9 = or i32 %8, %0"];
	Node0x220dfa0[shape=record, label="  %10 = shl i32 %7, 1"];
	Node0x220e010[shape=record, label="  %11 = or i32 %1, %0"];
	Node0x220e080[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x220e120[shape=record, label="  %13 = shl i32 %9, 2"];
	Node0x220e1c0[shape=record, label="  %14 = xor i32 %13, -4"];
	Node0x220e230[shape=record, label="  %15 = and i32 %8, %0"];
	Node0x220e2d0[shape=record, label="  %16 = mul i32 %15, -3"];
	Node0x220e340[shape=record, label="  %17 = shl i32 %4, 1"];
	Node0x220e3b0[shape=record, label="  %18 = add i32 %8, %0"];
	Node0x220e420[shape=record, label="  %19 = add i32 %18, %11"];
	Node0x220e490[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x220e500[shape=record, label="  %21 = sub i32 2, %1"];
	Node0x220e570[shape=record, label="  %22 = add i32 %21, %7"];
	Node0x220e5e0[shape=record, label="  %23 = add i32 %22, %9"];
	Node0x220e650[shape=record, label="  %24 = add i32 %23, %12"];
	Node0x220e6c0[shape=record, label="  %25 = sub i32 %24, %10"];
	Node0x220e730[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x220e7a0[shape=record, label="  %27 = sub i32 %26, %17"];
	Node0x220e810[shape=record, label="  %28 = add i32 %27, %14"];
	Node0x220e880[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x220e8f0[shape=record, label="  %30 = icmp eq i32 %6, %29"];
	Node0x21ae268[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x220ed90[shape=record, label="  %32 = tail call i32 @puts(i8* nonnull dereferenceable(1) %31)"];
	Node0x220eff0[shape=record, label="  ret void"];
	Node0x220dc40 -> Node0x220dcb0;
	Node0x220dcb0 -> Node0x220dd70;
	Node0x220dd70 -> Node0x220dde0;
	Node0x220dde0 -> Node0x220de50;
	Node0x220de50 -> Node0x220dec0;
	Node0x220dec0 -> Node0x220df30;
	Node0x220df30 -> Node0x220dfa0;
	Node0x220dfa0 -> Node0x220e010;
	Node0x220e010 -> Node0x220e080;
	Node0x220e080 -> Node0x220e120;
	Node0x220e120 -> Node0x220e1c0;
	Node0x220e1c0 -> Node0x220e230;
	Node0x220e230 -> Node0x220e2d0;
	Node0x220e2d0 -> Node0x220e340;
	Node0x220e340 -> Node0x220e3b0;
	Node0x220e3b0 -> Node0x220e420;
	Node0x220e420 -> Node0x220e490;
	Node0x220e490 -> Node0x220e500;
	Node0x220e500 -> Node0x220e570;
	Node0x220e570 -> Node0x220e5e0;
	Node0x220e5e0 -> Node0x220e650;
	Node0x220e650 -> Node0x220e6c0;
	Node0x220e6c0 -> Node0x220e730;
	Node0x220e730 -> Node0x220e7a0;
	Node0x220e7a0 -> Node0x220e810;
	Node0x220e810 -> Node0x220e880;
	Node0x220e880 -> Node0x220e8f0;
	Node0x220e8f0 -> Node0x21ae268;
	Node0x21ae268 -> Node0x220ed90;
	Node0x220ed90 -> Node0x220eff0;
edge [color=red]
	Node0x220dcb0 -> Node0x220dd70;
	Node0x220dd70 -> Node0x220dde0;
	Node0x220dc40 -> Node0x220dde0;
	Node0x220dec0 -> Node0x220df30;
	Node0x220de50 -> Node0x220dfa0;
	Node0x220e010 -> Node0x220e080;
	Node0x220df30 -> Node0x220e120;
	Node0x220e120 -> Node0x220e1c0;
	Node0x220dec0 -> Node0x220e230;
	Node0x220e230 -> Node0x220e2d0;
	Node0x220dcb0 -> Node0x220e340;
	Node0x220dec0 -> Node0x220e3b0;
	Node0x220e3b0 -> Node0x220e420;
	Node0x220e010 -> Node0x220e420;
	Node0x220e420 -> Node0x220e490;
	Node0x220e500 -> Node0x220e570;
	Node0x220de50 -> Node0x220e570;
	Node0x220e570 -> Node0x220e5e0;
	Node0x220df30 -> Node0x220e5e0;
	Node0x220e5e0 -> Node0x220e650;
	Node0x220e080 -> Node0x220e650;
	Node0x220e650 -> Node0x220e6c0;
	Node0x220dfa0 -> Node0x220e6c0;
	Node0x220e6c0 -> Node0x220e730;
	Node0x220e2d0 -> Node0x220e730;
	Node0x220e730 -> Node0x220e7a0;
	Node0x220e340 -> Node0x220e7a0;
	Node0x220e7a0 -> Node0x220e810;
	Node0x220e1c0 -> Node0x220e810;
	Node0x220e810 -> Node0x220e880;
	Node0x220e490 -> Node0x220e880;
	Node0x220dde0 -> Node0x220e8f0;
	Node0x220e880 -> Node0x220e8f0;
	Node0x220e8f0 -> Node0x21ae268;
	Node0x21ae268 -> Node0x220ed90;
}
