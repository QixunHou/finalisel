digraph "DFG for'crackme' function" {
	Node0x173fa80[shape=record, label="  %5 = xor i32 %3, %0"];
	Node0x1740100[shape=record, label="  %6 = add i32 %5, 4"];
	Node0x1740170[shape=record, label="  %7 = and i32 %2, %1"];
	Node0x17401e0[shape=record, label="  %8 = or i32 %2, %1"];
	Node0x1740280[shape=record, label="  %9 = xor i32 %2, -1"];
	Node0x17402f0[shape=record, label="  %10 = xor i32 %2, %1"];
	Node0x1740360[shape=record, label="  %11 = or i32 %9, %1"];
	Node0x1740400[shape=record, label="  %12 = shl i32 %8, 1"];
	Node0x17404a0[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x1740510[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x1740580[shape=record, label="  %15 = and i32 %9, %1"];
	Node0x17405f0[shape=record, label="  %16 = and i32 %3, %0"];
	Node0x1740660[shape=record, label="  %17 = shl i32 %0, 1"];
	Node0x17406d0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x1740740[shape=record, label="  %19 = or i32 %3, %0"];
	Node0x17407b0[shape=record, label="  %20 = add i32 %19, 1"];
	Node0x1740820[shape=record, label="  %21 = xor i32 %3, -1"];
	Node0x1740890[shape=record, label="  %22 = and i32 %21, %0"];
	Node0x1740900[shape=record, label="  %23 = shl i32 %10, 1"];
	Node0x1740970[shape=record, label="  %24 = add i32 %20, %7"];
	Node0x17409e0[shape=record, label="  %25 = add i32 %24, %22"];
	Node0x1740a80[shape=record, label="  %26 = mul i32 %25, 3"];
	Node0x1740af0[shape=record, label="  %27 = sub i32 4, %0"];
	Node0x1740b60[shape=record, label="  %28 = sub i32 %27, %2"];
	Node0x1740bd0[shape=record, label="  %29 = add i32 %28, %18"];
	Node0x1740c40[shape=record, label="  %30 = add i32 %29, %7"];
	Node0x1740cb0[shape=record, label="  %31 = sub i32 %30, %8"];
	Node0x1740d20[shape=record, label="  %32 = sub i32 %31, %11"];
	Node0x1740fa0[shape=record, label="  %33 = add i32 %32, %14"];
	Node0x1741010[shape=record, label="  %34 = add i32 %33, %15"];
	Node0x1741080[shape=record, label="  %35 = add i32 %34, %16"];
	Node0x17410f0[shape=record, label="  %36 = sub i32 %35, %5"];
	Node0x1741160[shape=record, label="  %37 = sub i32 %36, %19"];
	Node0x17411d0[shape=record, label="  %38 = add i32 %37, %23"];
	Node0x1741240[shape=record, label="  %39 = add i32 %38, %13"];
	Node0x17412b0[shape=record, label="  %40 = add i32 %39, %26"];
	Node0x1741320[shape=record, label="  %41 = icmp eq i32 %6, %40"];
	Node0x16e0268[shape=record, label="  %42 = select i1 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x17417c0[shape=record, label="  %43 = tail call i32 @puts(i8* nonnull dereferenceable(1) %42)"];
	Node0x1741810[shape=record, label="  ret void"];
	Node0x173fa80 -> Node0x1740100;
	Node0x1740100 -> Node0x1740170;
	Node0x1740170 -> Node0x17401e0;
	Node0x17401e0 -> Node0x1740280;
	Node0x1740280 -> Node0x17402f0;
	Node0x17402f0 -> Node0x1740360;
	Node0x1740360 -> Node0x1740400;
	Node0x1740400 -> Node0x17404a0;
	Node0x17404a0 -> Node0x1740510;
	Node0x1740510 -> Node0x1740580;
	Node0x1740580 -> Node0x17405f0;
	Node0x17405f0 -> Node0x1740660;
	Node0x1740660 -> Node0x17406d0;
	Node0x17406d0 -> Node0x1740740;
	Node0x1740740 -> Node0x17407b0;
	Node0x17407b0 -> Node0x1740820;
	Node0x1740820 -> Node0x1740890;
	Node0x1740890 -> Node0x1740900;
	Node0x1740900 -> Node0x1740970;
	Node0x1740970 -> Node0x17409e0;
	Node0x17409e0 -> Node0x1740a80;
	Node0x1740a80 -> Node0x1740af0;
	Node0x1740af0 -> Node0x1740b60;
	Node0x1740b60 -> Node0x1740bd0;
	Node0x1740bd0 -> Node0x1740c40;
	Node0x1740c40 -> Node0x1740cb0;
	Node0x1740cb0 -> Node0x1740d20;
	Node0x1740d20 -> Node0x1740fa0;
	Node0x1740fa0 -> Node0x1741010;
	Node0x1741010 -> Node0x1741080;
	Node0x1741080 -> Node0x17410f0;
	Node0x17410f0 -> Node0x1741160;
	Node0x1741160 -> Node0x17411d0;
	Node0x17411d0 -> Node0x1741240;
	Node0x1741240 -> Node0x17412b0;
	Node0x17412b0 -> Node0x1741320;
	Node0x1741320 -> Node0x16e0268;
	Node0x16e0268 -> Node0x17417c0;
	Node0x17417c0 -> Node0x1741810;
edge [color=red]
	Node0x173fa80 -> Node0x1740100;
	Node0x1740280 -> Node0x1740360;
	Node0x17401e0 -> Node0x1740400;
	Node0x1740400 -> Node0x17404a0;
	Node0x1740360 -> Node0x1740510;
	Node0x1740280 -> Node0x1740580;
	Node0x1740660 -> Node0x17406d0;
	Node0x1740740 -> Node0x17407b0;
	Node0x1740820 -> Node0x1740890;
	Node0x17402f0 -> Node0x1740900;
	Node0x17407b0 -> Node0x1740970;
	Node0x1740170 -> Node0x1740970;
	Node0x1740970 -> Node0x17409e0;
	Node0x1740890 -> Node0x17409e0;
	Node0x17409e0 -> Node0x1740a80;
	Node0x1740af0 -> Node0x1740b60;
	Node0x1740b60 -> Node0x1740bd0;
	Node0x17406d0 -> Node0x1740bd0;
	Node0x1740bd0 -> Node0x1740c40;
	Node0x1740170 -> Node0x1740c40;
	Node0x1740c40 -> Node0x1740cb0;
	Node0x17401e0 -> Node0x1740cb0;
	Node0x1740cb0 -> Node0x1740d20;
	Node0x1740360 -> Node0x1740d20;
	Node0x1740d20 -> Node0x1740fa0;
	Node0x1740510 -> Node0x1740fa0;
	Node0x1740fa0 -> Node0x1741010;
	Node0x1740580 -> Node0x1741010;
	Node0x1741010 -> Node0x1741080;
	Node0x17405f0 -> Node0x1741080;
	Node0x1741080 -> Node0x17410f0;
	Node0x173fa80 -> Node0x17410f0;
	Node0x17410f0 -> Node0x1741160;
	Node0x1740740 -> Node0x1741160;
	Node0x1741160 -> Node0x17411d0;
	Node0x1740900 -> Node0x17411d0;
	Node0x17411d0 -> Node0x1741240;
	Node0x17404a0 -> Node0x1741240;
	Node0x1741240 -> Node0x17412b0;
	Node0x1740a80 -> Node0x17412b0;
	Node0x1740100 -> Node0x1741320;
	Node0x17412b0 -> Node0x1741320;
	Node0x1741320 -> Node0x16e0268;
	Node0x16e0268 -> Node0x17417c0;
}
