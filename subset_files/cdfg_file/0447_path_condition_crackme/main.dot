digraph "DFG for'main' function" {
	Node0x2328568[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23285e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2328678[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23286d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2328b58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23297f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x23298d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2329998[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2329a48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2329ca8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x2329d68[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x232acd8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x232b348[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x232b440[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x232b648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x232b7a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x232b8b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x232b978[shape=record, label="  ret i32 0"];
	Node0x2328568 -> Node0x23285e8;
	Node0x23285e8 -> Node0x2328678;
	Node0x2328678 -> Node0x23286d8;
	Node0x23286d8 -> Node0x2328b58;
	Node0x2328b58 -> Node0x23297f8;
	Node0x23297f8 -> Node0x23298d8;
	Node0x23298d8 -> Node0x2329998;
	Node0x2329998 -> Node0x2329a48;
	Node0x2329a48 -> Node0x2329ca8;
	Node0x2329ca8 -> Node0x2329d68;
	Node0x2329d68 -> Node0x232acd8;
	Node0x232acd8 -> Node0x232b348;
	Node0x232b348 -> Node0x232b440;
	Node0x232b440 -> Node0x232b648;
	Node0x232b648 -> Node0x232b7a8;
	Node0x232b7a8 -> Node0x232b8b8;
	Node0x232b8b8 -> Node0x232b978;
edge [color=red]
	Node0x2328568 -> Node0x23286d8;
	Node0x23286d8 -> Node0x2328b58;
	Node0x23285e8 -> Node0x23297f8;
	Node0x23297f8 -> Node0x23298d8;
	Node0x2328678 -> Node0x2329998;
	Node0x2329998 -> Node0x2329a48;
	Node0x2328568 -> Node0x2329ca8;
	Node0x23285e8 -> Node0x2329ca8;
	Node0x2328678 -> Node0x2329ca8;
	Node0x2328568 -> Node0x2329d68;
	Node0x23285e8 -> Node0x232acd8;
	Node0x2328678 -> Node0x232b348;
	Node0x2329d68 -> Node0x232b440;
	Node0x232acd8 -> Node0x232b440;
	Node0x232b348 -> Node0x232b440;
	Node0x2329998 -> Node0x232b648;
	Node0x23297f8 -> Node0x232b7a8;
	Node0x23286d8 -> Node0x232b8b8;
}
