digraph "DFG for'main' function" {
	Node0x514c98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x514d18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x514da8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x515208[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x5152e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x515408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x515640[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x5156f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x516668[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x516cf0[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x516d60[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x516dd0[shape=record, label="  %10 = xor i32 %6, -1"];
	Node0x516e40[shape=record, label="  %11 = and i32 %7, %6"];
	Node0x516eb0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x516f20[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x516f90[shape=record, label="  %14 = and i32 %6, %13"];
	Node0x517000[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x517070[shape=record, label="  %16 = mul i32 %15, 3"];
	Node0x5170e0[shape=record, label="  %17 = xor i32 %8, -1"];
	Node0x517150[shape=record, label="  %18 = mul i32 %17, -5"];
	Node0x5171c0[shape=record, label="  %19 = xor i32 %6, 2147483647"];
	Node0x517230[shape=record, label="  %20 = and i32 %19, %7"];
	Node0x5172a0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x517310[shape=record, label="  %22 = sub i32 %10, %7"];
	Node0x517380[shape=record, label="  %23 = sub i32 %22, %9"];
	Node0x5173f0[shape=record, label="  %24 = add i32 %23, %12"];
	Node0x517460[shape=record, label="  %25 = add i32 %24, %14"];
	Node0x5174d0[shape=record, label="  %26 = sub i32 %25, %11"];
	Node0x517540[shape=record, label="  %27 = add i32 %26, %16"];
	Node0x5175b0[shape=record, label="  %28 = add i32 %27, %18"];
	Node0x517620[shape=record, label="  %29 = sub i32 %28, %21"];
	Node0x517690[shape=record, label="  %30 = icmp eq i32 %8, %29"];
	Node0x4b59d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x517720[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x517b88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x517ce8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x517da8[shape=record, label="  ret i32 0"];
	Node0x514c98 -> Node0x514d18;
	Node0x514d18 -> Node0x514da8;
	Node0x514da8 -> Node0x515208;
	Node0x515208 -> Node0x5152e8;
	Node0x5152e8 -> Node0x515408;
	Node0x515408 -> Node0x515640;
	Node0x515640 -> Node0x5156f8;
	Node0x5156f8 -> Node0x516668;
	Node0x516668 -> Node0x516cf0;
	Node0x516cf0 -> Node0x516d60;
	Node0x516d60 -> Node0x516dd0;
	Node0x516dd0 -> Node0x516e40;
	Node0x516e40 -> Node0x516eb0;
	Node0x516eb0 -> Node0x516f20;
	Node0x516f20 -> Node0x516f90;
	Node0x516f90 -> Node0x517000;
	Node0x517000 -> Node0x517070;
	Node0x517070 -> Node0x5170e0;
	Node0x5170e0 -> Node0x517150;
	Node0x517150 -> Node0x5171c0;
	Node0x5171c0 -> Node0x517230;
	Node0x517230 -> Node0x5172a0;
	Node0x5172a0 -> Node0x517310;
	Node0x517310 -> Node0x517380;
	Node0x517380 -> Node0x5173f0;
	Node0x5173f0 -> Node0x517460;
	Node0x517460 -> Node0x5174d0;
	Node0x5174d0 -> Node0x517540;
	Node0x517540 -> Node0x5175b0;
	Node0x5175b0 -> Node0x517620;
	Node0x517620 -> Node0x517690;
	Node0x517690 -> Node0x4b59d8;
	Node0x4b59d8 -> Node0x517720;
	Node0x517720 -> Node0x517b88;
	Node0x517b88 -> Node0x517ce8;
	Node0x517ce8 -> Node0x517da8;
edge [color=red]
	Node0x514c98 -> Node0x514da8;
	Node0x514da8 -> Node0x515208;
	Node0x514d18 -> Node0x5152e8;
	Node0x5152e8 -> Node0x515408;
	Node0x514c98 -> Node0x515640;
	Node0x514d18 -> Node0x515640;
	Node0x514c98 -> Node0x5156f8;
	Node0x514d18 -> Node0x516668;
	Node0x516668 -> Node0x516cf0;
	Node0x5156f8 -> Node0x516cf0;
	Node0x516668 -> Node0x516d60;
	Node0x5156f8 -> Node0x516d60;
	Node0x5156f8 -> Node0x516dd0;
	Node0x516668 -> Node0x516e40;
	Node0x5156f8 -> Node0x516e40;
	Node0x516e40 -> Node0x516eb0;
	Node0x516668 -> Node0x516f20;
	Node0x5156f8 -> Node0x516f90;
	Node0x516f20 -> Node0x516f90;
	Node0x516f90 -> Node0x517000;
	Node0x517000 -> Node0x517070;
	Node0x516cf0 -> Node0x5170e0;
	Node0x5170e0 -> Node0x517150;
	Node0x5156f8 -> Node0x5171c0;
	Node0x5171c0 -> Node0x517230;
	Node0x516668 -> Node0x517230;
	Node0x517230 -> Node0x5172a0;
	Node0x516dd0 -> Node0x517310;
	Node0x516668 -> Node0x517310;
	Node0x517310 -> Node0x517380;
	Node0x516d60 -> Node0x517380;
	Node0x517380 -> Node0x5173f0;
	Node0x516eb0 -> Node0x5173f0;
	Node0x5173f0 -> Node0x517460;
	Node0x516f90 -> Node0x517460;
	Node0x517460 -> Node0x5174d0;
	Node0x516e40 -> Node0x5174d0;
	Node0x5174d0 -> Node0x517540;
	Node0x517070 -> Node0x517540;
	Node0x517540 -> Node0x5175b0;
	Node0x517150 -> Node0x5175b0;
	Node0x5175b0 -> Node0x517620;
	Node0x5172a0 -> Node0x517620;
	Node0x516cf0 -> Node0x517690;
	Node0x517620 -> Node0x517690;
	Node0x517690 -> Node0x4b59d8;
	Node0x4b59d8 -> Node0x517720;
	Node0x5152e8 -> Node0x517b88;
	Node0x514da8 -> Node0x517ce8;
}
