digraph "DFG for'main' function" {
	Node0x1cb4dc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1cb4e48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1cb4ed8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1cb5338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1cb5418[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1cb5538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1cb5770[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1cb5828[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1cb6798[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1cb6e20[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1cb6e90[shape=record, label="  %9 = sub i32 %6, %8"];
	Node0x1cb6f00[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x1cb6f70[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1cb6fe0[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x1cb7050[shape=record, label="  %13 = or i32 %6, %11"];
	Node0x1cb70c0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1cb7130[shape=record, label="  %15 = shl i32 %11, 1"];
	Node0x1cb71a0[shape=record, label="  %16 = shl i32 %10, 2"];
	Node0x1cb7210[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x1cb7280[shape=record, label="  %18 = xor i32 %14, -2"];
	Node0x1cb72f0[shape=record, label="  %19 = shl i32 %12, 2"];
	Node0x1cb7360[shape=record, label="  %20 = and i32 %7, %6"];
	Node0x1cb73d0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1cb7440[shape=record, label="  %22 = sub i32 %7, %6"];
	Node0x1cb74b0[shape=record, label="  %23 = sub i32 %22, %8"];
	Node0x1cb7520[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x1cb7590[shape=record, label="  %25 = add i32 %24, %12"];
	Node0x1cb7600[shape=record, label="  %26 = sub i32 %25, %15"];
	Node0x1cb7670[shape=record, label="  %27 = sub i32 %26, %14"];
	Node0x1cb76e0[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x1cb7750[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x1cb77c0[shape=record, label="  %30 = add i32 %29, %17"];
	Node0x1cb7830[shape=record, label="  %31 = sub i32 %30, %18"];
	Node0x1cb78a0[shape=record, label="  %32 = icmp eq i32 %9, %31"];
	Node0x1c559d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1cb7b40[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x1cb7d98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1cb7ef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1cb7fb8[shape=record, label="  ret i32 0"];
	Node0x1cb4dc8 -> Node0x1cb4e48;
	Node0x1cb4e48 -> Node0x1cb4ed8;
	Node0x1cb4ed8 -> Node0x1cb5338;
	Node0x1cb5338 -> Node0x1cb5418;
	Node0x1cb5418 -> Node0x1cb5538;
	Node0x1cb5538 -> Node0x1cb5770;
	Node0x1cb5770 -> Node0x1cb5828;
	Node0x1cb5828 -> Node0x1cb6798;
	Node0x1cb6798 -> Node0x1cb6e20;
	Node0x1cb6e20 -> Node0x1cb6e90;
	Node0x1cb6e90 -> Node0x1cb6f00;
	Node0x1cb6f00 -> Node0x1cb6f70;
	Node0x1cb6f70 -> Node0x1cb6fe0;
	Node0x1cb6fe0 -> Node0x1cb7050;
	Node0x1cb7050 -> Node0x1cb70c0;
	Node0x1cb70c0 -> Node0x1cb7130;
	Node0x1cb7130 -> Node0x1cb71a0;
	Node0x1cb71a0 -> Node0x1cb7210;
	Node0x1cb7210 -> Node0x1cb7280;
	Node0x1cb7280 -> Node0x1cb72f0;
	Node0x1cb72f0 -> Node0x1cb7360;
	Node0x1cb7360 -> Node0x1cb73d0;
	Node0x1cb73d0 -> Node0x1cb7440;
	Node0x1cb7440 -> Node0x1cb74b0;
	Node0x1cb74b0 -> Node0x1cb7520;
	Node0x1cb7520 -> Node0x1cb7590;
	Node0x1cb7590 -> Node0x1cb7600;
	Node0x1cb7600 -> Node0x1cb7670;
	Node0x1cb7670 -> Node0x1cb76e0;
	Node0x1cb76e0 -> Node0x1cb7750;
	Node0x1cb7750 -> Node0x1cb77c0;
	Node0x1cb77c0 -> Node0x1cb7830;
	Node0x1cb7830 -> Node0x1cb78a0;
	Node0x1cb78a0 -> Node0x1c559d8;
	Node0x1c559d8 -> Node0x1cb7b40;
	Node0x1cb7b40 -> Node0x1cb7d98;
	Node0x1cb7d98 -> Node0x1cb7ef8;
	Node0x1cb7ef8 -> Node0x1cb7fb8;
edge [color=red]
	Node0x1cb4dc8 -> Node0x1cb4ed8;
	Node0x1cb4ed8 -> Node0x1cb5338;
	Node0x1cb4e48 -> Node0x1cb5418;
	Node0x1cb5418 -> Node0x1cb5538;
	Node0x1cb4dc8 -> Node0x1cb5770;
	Node0x1cb4e48 -> Node0x1cb5770;
	Node0x1cb4dc8 -> Node0x1cb5828;
	Node0x1cb4e48 -> Node0x1cb6798;
	Node0x1cb6798 -> Node0x1cb6e20;
	Node0x1cb5828 -> Node0x1cb6e20;
	Node0x1cb5828 -> Node0x1cb6e90;
	Node0x1cb6e20 -> Node0x1cb6e90;
	Node0x1cb6798 -> Node0x1cb6f00;
	Node0x1cb5828 -> Node0x1cb6f00;
	Node0x1cb6798 -> Node0x1cb6f70;
	Node0x1cb5828 -> Node0x1cb6fe0;
	Node0x1cb6f70 -> Node0x1cb6fe0;
	Node0x1cb5828 -> Node0x1cb7050;
	Node0x1cb6f70 -> Node0x1cb7050;
	Node0x1cb7050 -> Node0x1cb70c0;
	Node0x1cb6f70 -> Node0x1cb7130;
	Node0x1cb6f00 -> Node0x1cb71a0;
	Node0x1cb71a0 -> Node0x1cb7210;
	Node0x1cb70c0 -> Node0x1cb7280;
	Node0x1cb6fe0 -> Node0x1cb72f0;
	Node0x1cb6798 -> Node0x1cb7360;
	Node0x1cb5828 -> Node0x1cb7360;
	Node0x1cb7360 -> Node0x1cb73d0;
	Node0x1cb6798 -> Node0x1cb7440;
	Node0x1cb5828 -> Node0x1cb7440;
	Node0x1cb7440 -> Node0x1cb74b0;
	Node0x1cb6e20 -> Node0x1cb74b0;
	Node0x1cb74b0 -> Node0x1cb7520;
	Node0x1cb6f00 -> Node0x1cb7520;
	Node0x1cb7520 -> Node0x1cb7590;
	Node0x1cb6fe0 -> Node0x1cb7590;
	Node0x1cb7590 -> Node0x1cb7600;
	Node0x1cb7130 -> Node0x1cb7600;
	Node0x1cb7600 -> Node0x1cb7670;
	Node0x1cb70c0 -> Node0x1cb7670;
	Node0x1cb7670 -> Node0x1cb76e0;
	Node0x1cb72f0 -> Node0x1cb76e0;
	Node0x1cb76e0 -> Node0x1cb7750;
	Node0x1cb73d0 -> Node0x1cb7750;
	Node0x1cb7750 -> Node0x1cb77c0;
	Node0x1cb7210 -> Node0x1cb77c0;
	Node0x1cb77c0 -> Node0x1cb7830;
	Node0x1cb7280 -> Node0x1cb7830;
	Node0x1cb6e90 -> Node0x1cb78a0;
	Node0x1cb7830 -> Node0x1cb78a0;
	Node0x1cb78a0 -> Node0x1c559d8;
	Node0x1c559d8 -> Node0x1cb7b40;
	Node0x1cb5418 -> Node0x1cb7d98;
	Node0x1cb4ed8 -> Node0x1cb7ef8;
}
