digraph "DFG for'crackme' function" {
	Node0x1789740[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1789dc0[shape=record, label="  %6 = sub i32 4, %5"];
	Node0x1789e60[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x1789ed0[shape=record, label="  %8 = and i32 %7, %3"];
	Node0x1789f40[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1789fb0[shape=record, label="  %10 = add i32 %6, %9"];
	Node0x178a020[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x178a090[shape=record, label="  %12 = and i32 %2, %1"];
	Node0x178a130[shape=record, label="  %13 = shl i32 %12, 2"];
	Node0x178a1d0[shape=record, label="  %14 = xor i32 %13, -4"];
	Node0x178a270[shape=record, label="  %15 = shl i32 %2, 1"];
	Node0x178a2e0[shape=record, label="  %16 = xor i32 %2, -1"];
	Node0x178a350[shape=record, label="  %17 = and i32 %16, %1"];
	Node0x178a3c0[shape=record, label="  %18 = or i32 %16, %1"];
	Node0x178a430[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x178a4a0[shape=record, label="  %20 = shl i32 %18, 2"];
	Node0x178a510[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0x178a580[shape=record, label="  %22 = shl i32 %17, 2"];
	Node0x178a5f0[shape=record, label="  %23 = shl i32 %3, 1"];
	Node0x178a660[shape=record, label="  %24 = and i32 %3, %0"];
	Node0x178a6d0[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x178a770[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x178a7e0[shape=record, label="  %27 = xor i32 %3, %0"];
	Node0x178a850[shape=record, label="  %28 = or i32 %3, %0"];
	Node0x178a8c0[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x178a960[shape=record, label="  %30 = mul i32 %29, -3"];
	Node0x178a9d0[shape=record, label="  %31 = sub i32 %12, %24"];
	Node0x178aa70[shape=record, label="  %32 = mul i32 %31, 6"];
	Node0x178acf0[shape=record, label="  %33 = add i32 %8, %5"];
	Node0x178ad90[shape=record, label="  %34 = mul i32 %33, -5"];
	Node0x178ae00[shape=record, label="  %35 = sub i32 %2, %0"];
	Node0x178ae70[shape=record, label="  %36 = sub i32 %35, %11"];
	Node0x178aee0[shape=record, label="  %37 = sub i32 %36, %15"];
	Node0x178af50[shape=record, label="  %38 = add i32 %37, %17"];
	Node0x178afc0[shape=record, label="  %39 = add i32 %38, %3"];
	Node0x178b030[shape=record, label="  %40 = sub i32 %39, %19"];
	Node0x178b0a0[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x178b110[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x178b180[shape=record, label="  %43 = sub i32 %42, %27"];
	Node0x178b1f0[shape=record, label="  %44 = sub i32 %43, %28"];
	Node0x178b260[shape=record, label="  %45 = add i32 %44, %14"];
	Node0x178b2d0[shape=record, label="  %46 = add i32 %45, %21"];
	Node0x178b340[shape=record, label="  %47 = add i32 %46, %30"];
	Node0x178b3b0[shape=record, label="  %48 = sub i32 %47, %26"];
	Node0x178b420[shape=record, label="  %49 = add i32 %48, %32"];
	Node0x178b490[shape=record, label="  %50 = add i32 %49, %34"];
	Node0x178b500[shape=record, label="  %51 = icmp eq i32 %10, %50"];
	Node0x172a268[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x178b9a0[shape=record, label="  %53 = tail call i32 @puts(i8* nonnull dereferenceable(1) %52)"];
	Node0x178b9f0[shape=record, label="  ret void"];
	Node0x1789740 -> Node0x1789dc0;
	Node0x1789dc0 -> Node0x1789e60;
	Node0x1789e60 -> Node0x1789ed0;
	Node0x1789ed0 -> Node0x1789f40;
	Node0x1789f40 -> Node0x1789fb0;
	Node0x1789fb0 -> Node0x178a020;
	Node0x178a020 -> Node0x178a090;
	Node0x178a090 -> Node0x178a130;
	Node0x178a130 -> Node0x178a1d0;
	Node0x178a1d0 -> Node0x178a270;
	Node0x178a270 -> Node0x178a2e0;
	Node0x178a2e0 -> Node0x178a350;
	Node0x178a350 -> Node0x178a3c0;
	Node0x178a3c0 -> Node0x178a430;
	Node0x178a430 -> Node0x178a4a0;
	Node0x178a4a0 -> Node0x178a510;
	Node0x178a510 -> Node0x178a580;
	Node0x178a580 -> Node0x178a5f0;
	Node0x178a5f0 -> Node0x178a660;
	Node0x178a660 -> Node0x178a6d0;
	Node0x178a6d0 -> Node0x178a770;
	Node0x178a770 -> Node0x178a7e0;
	Node0x178a7e0 -> Node0x178a850;
	Node0x178a850 -> Node0x178a8c0;
	Node0x178a8c0 -> Node0x178a960;
	Node0x178a960 -> Node0x178a9d0;
	Node0x178a9d0 -> Node0x178aa70;
	Node0x178aa70 -> Node0x178acf0;
	Node0x178acf0 -> Node0x178ad90;
	Node0x178ad90 -> Node0x178ae00;
	Node0x178ae00 -> Node0x178ae70;
	Node0x178ae70 -> Node0x178aee0;
	Node0x178aee0 -> Node0x178af50;
	Node0x178af50 -> Node0x178afc0;
	Node0x178afc0 -> Node0x178b030;
	Node0x178b030 -> Node0x178b0a0;
	Node0x178b0a0 -> Node0x178b110;
	Node0x178b110 -> Node0x178b180;
	Node0x178b180 -> Node0x178b1f0;
	Node0x178b1f0 -> Node0x178b260;
	Node0x178b260 -> Node0x178b2d0;
	Node0x178b2d0 -> Node0x178b340;
	Node0x178b340 -> Node0x178b3b0;
	Node0x178b3b0 -> Node0x178b420;
	Node0x178b420 -> Node0x178b490;
	Node0x178b490 -> Node0x178b500;
	Node0x178b500 -> Node0x172a268;
	Node0x172a268 -> Node0x178b9a0;
	Node0x178b9a0 -> Node0x178b9f0;
edge [color=red]
	Node0x1789740 -> Node0x1789dc0;
	Node0x1789e60 -> Node0x1789ed0;
	Node0x1789ed0 -> Node0x1789f40;
	Node0x1789dc0 -> Node0x1789fb0;
	Node0x1789f40 -> Node0x1789fb0;
	Node0x178a090 -> Node0x178a130;
	Node0x178a130 -> Node0x178a1d0;
	Node0x178a2e0 -> Node0x178a350;
	Node0x178a2e0 -> Node0x178a3c0;
	Node0x178a3c0 -> Node0x178a430;
	Node0x178a3c0 -> Node0x178a4a0;
	Node0x178a4a0 -> Node0x178a510;
	Node0x178a350 -> Node0x178a580;
	Node0x178a660 -> Node0x178a6d0;
	Node0x178a6d0 -> Node0x178a770;
	Node0x178a850 -> Node0x178a8c0;
	Node0x178a8c0 -> Node0x178a960;
	Node0x178a090 -> Node0x178a9d0;
	Node0x178a660 -> Node0x178a9d0;
	Node0x178a9d0 -> Node0x178aa70;
	Node0x1789ed0 -> Node0x178acf0;
	Node0x1789740 -> Node0x178acf0;
	Node0x178acf0 -> Node0x178ad90;
	Node0x178ae00 -> Node0x178ae70;
	Node0x178a020 -> Node0x178ae70;
	Node0x178ae70 -> Node0x178aee0;
	Node0x178a270 -> Node0x178aee0;
	Node0x178aee0 -> Node0x178af50;
	Node0x178a350 -> Node0x178af50;
	Node0x178af50 -> Node0x178afc0;
	Node0x178afc0 -> Node0x178b030;
	Node0x178a430 -> Node0x178b030;
	Node0x178b030 -> Node0x178b0a0;
	Node0x178a580 -> Node0x178b0a0;
	Node0x178b0a0 -> Node0x178b110;
	Node0x178a5f0 -> Node0x178b110;
	Node0x178b110 -> Node0x178b180;
	Node0x178a7e0 -> Node0x178b180;
	Node0x178b180 -> Node0x178b1f0;
	Node0x178a850 -> Node0x178b1f0;
	Node0x178b1f0 -> Node0x178b260;
	Node0x178a1d0 -> Node0x178b260;
	Node0x178b260 -> Node0x178b2d0;
	Node0x178a510 -> Node0x178b2d0;
	Node0x178b2d0 -> Node0x178b340;
	Node0x178a960 -> Node0x178b340;
	Node0x178b340 -> Node0x178b3b0;
	Node0x178a770 -> Node0x178b3b0;
	Node0x178b3b0 -> Node0x178b420;
	Node0x178aa70 -> Node0x178b420;
	Node0x178b420 -> Node0x178b490;
	Node0x178ad90 -> Node0x178b490;
	Node0x1789fb0 -> Node0x178b500;
	Node0x178b490 -> Node0x178b500;
	Node0x178b500 -> Node0x172a268;
	Node0x172a268 -> Node0x178b9a0;
}
