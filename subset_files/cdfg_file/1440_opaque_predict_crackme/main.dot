digraph "DFG for'main' function" {
	Node0x17abb78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x17abbf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x17abc88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x17abce8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x17ac168[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x17ac248[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x17ac348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x17ac408[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x17b2e48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x17b3058[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x17b3118[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x17b4088[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x17b46f8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x17b47d0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x17b49c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x17b4b28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x17b4c38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x17b4cf8[shape=record, label="  ret i32 0"];
	Node0x17abb78 -> Node0x17abbf8;
	Node0x17abbf8 -> Node0x17abc88;
	Node0x17abc88 -> Node0x17abce8;
	Node0x17abce8 -> Node0x17ac168;
	Node0x17ac168 -> Node0x17ac248;
	Node0x17ac248 -> Node0x17ac348;
	Node0x17ac348 -> Node0x17ac408;
	Node0x17ac408 -> Node0x17b2e48;
	Node0x17b2e48 -> Node0x17b3058;
	Node0x17b3058 -> Node0x17b3118;
	Node0x17b3118 -> Node0x17b4088;
	Node0x17b4088 -> Node0x17b46f8;
	Node0x17b46f8 -> Node0x17b47d0;
	Node0x17b47d0 -> Node0x17b49c8;
	Node0x17b49c8 -> Node0x17b4b28;
	Node0x17b4b28 -> Node0x17b4c38;
	Node0x17b4c38 -> Node0x17b4cf8;
edge [color=red]
	Node0x17abb78 -> Node0x17abce8;
	Node0x17abce8 -> Node0x17ac168;
	Node0x17abbf8 -> Node0x17ac248;
	Node0x17ac248 -> Node0x17ac348;
	Node0x17abc88 -> Node0x17ac408;
	Node0x17ac408 -> Node0x17b2e48;
	Node0x17abb78 -> Node0x17b3058;
	Node0x17abbf8 -> Node0x17b3058;
	Node0x17abc88 -> Node0x17b3058;
	Node0x17abb78 -> Node0x17b3118;
	Node0x17abbf8 -> Node0x17b4088;
	Node0x17abc88 -> Node0x17b46f8;
	Node0x17b3118 -> Node0x17b47d0;
	Node0x17b4088 -> Node0x17b47d0;
	Node0x17b46f8 -> Node0x17b47d0;
	Node0x17ac408 -> Node0x17b49c8;
	Node0x17ac248 -> Node0x17b4b28;
	Node0x17abce8 -> Node0x17b4c38;
}
