digraph "DFG for'main' function" {
	Node0x23dc198[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23dc218[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23dc2a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23dc308[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x23dc788[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23dc868[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x23dc968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23dca28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x23dcad8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23dcd38[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x23dcdf8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23dcf58[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23dcfb8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x23e24c0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x23e26c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23e2828[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23e2938[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23e29f8[shape=record, label="  ret i32 0"];
	Node0x23dc198 -> Node0x23dc218;
	Node0x23dc218 -> Node0x23dc2a8;
	Node0x23dc2a8 -> Node0x23dc308;
	Node0x23dc308 -> Node0x23dc788;
	Node0x23dc788 -> Node0x23dc868;
	Node0x23dc868 -> Node0x23dc968;
	Node0x23dc968 -> Node0x23dca28;
	Node0x23dca28 -> Node0x23dcad8;
	Node0x23dcad8 -> Node0x23dcd38;
	Node0x23dcd38 -> Node0x23dcdf8;
	Node0x23dcdf8 -> Node0x23dcf58;
	Node0x23dcf58 -> Node0x23dcfb8;
	Node0x23dcfb8 -> Node0x23e24c0;
	Node0x23e24c0 -> Node0x23e26c8;
	Node0x23e26c8 -> Node0x23e2828;
	Node0x23e2828 -> Node0x23e2938;
	Node0x23e2938 -> Node0x23e29f8;
edge [color=red]
	Node0x23dc198 -> Node0x23dc308;
	Node0x23dc308 -> Node0x23dc788;
	Node0x23dc218 -> Node0x23dc868;
	Node0x23dc868 -> Node0x23dc968;
	Node0x23dc2a8 -> Node0x23dca28;
	Node0x23dca28 -> Node0x23dcad8;
	Node0x23dc198 -> Node0x23dcd38;
	Node0x23dc218 -> Node0x23dcd38;
	Node0x23dc2a8 -> Node0x23dcd38;
	Node0x23dc198 -> Node0x23dcdf8;
	Node0x23dc218 -> Node0x23dcf58;
	Node0x23dc2a8 -> Node0x23dcfb8;
	Node0x23dcdf8 -> Node0x23e24c0;
	Node0x23dcf58 -> Node0x23e24c0;
	Node0x23dcfb8 -> Node0x23e24c0;
	Node0x23dca28 -> Node0x23e26c8;
	Node0x23dc868 -> Node0x23e2828;
	Node0x23dc308 -> Node0x23e2938;
}
