digraph "DFG for'main' function" {
	Node0x585ad8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x585b58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x585be8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x585c48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x585cf8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x586128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x586208[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x586308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5863c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x586478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x586538[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x5865e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x580ae0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x5867e8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x587758[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x587dc8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x587e28[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x587ea0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x587f10[shape=record, label="  %15 = and i32 %11, %14"];
	Node0x587f80[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x587ff0[shape=record, label="  %17 = or i32 %11, %14"];
	Node0x588060[shape=record, label="  %18 = sub i32 %16, %17"];
	Node0x5880d0[shape=record, label="  %19 = shl i32 %13, 1"];
	Node0x588140[shape=record, label="  %20 = add i32 %18, %19"];
	Node0x5881b0[shape=record, label="  %21 = shl i32 %17, 1"];
	Node0x588220[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x588290[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x588300[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0x588370[shape=record, label="  %25 = and i32 %13, %24"];
	Node0x5883e0[shape=record, label="  %26 = xor i32 %13, %24"];
	Node0x588450[shape=record, label="  %27 = or i32 %13, %10"];
	Node0x5884c0[shape=record, label="  %28 = or i32 %13, %24"];
	Node0x588530[shape=record, label="  %29 = and i32 %13, %10"];
	Node0x5885a0[shape=record, label="  %30 = xor i32 %29, -1"];
	Node0x588610[shape=record, label="  %31 = xor i32 %27, -1"];
	Node0x588680[shape=record, label="  %32 = shl i32 %28, 2"];
	Node0x5886f0[shape=record, label="  %33 = xor i32 %32, -4"];
	Node0x588760[shape=record, label="  %34 = mul i32 %29, 11"];
	Node0x5887d0[shape=record, label="  %35 = sub i32 %31, %26"];
	Node0x588840[shape=record, label="  %36 = mul i32 %35, 5"];
	Node0x5888b0[shape=record, label="  %37 = sub i32 %25, %10"];
	Node0x588920[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x588990[shape=record, label="  %39 = sub i32 2, %12"];
	Node0x588a00[shape=record, label="  %40 = sub i32 %39, %15"];
	Node0x588a70[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x588ae0[shape=record, label="  %42 = add i32 %41, %25"];
	Node0x588b50[shape=record, label="  %43 = sub i32 %42, %27"];
	Node0x588bc0[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x588c30[shape=record, label="  %45 = add i32 %44, %30"];
	Node0x588ca0[shape=record, label="  %46 = add i32 %45, %22"];
	Node0x588d10[shape=record, label="  %47 = add i32 %46, %34"];
	Node0x588d80[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x588df0[shape=record, label="  %49 = add i32 %48, %36"];
	Node0x588e60[shape=record, label="  %50 = add i32 %49, %38"];
	Node0x588ed0[shape=record, label="  %51 = icmp eq i32 %20, %50"];
	Node0x5258b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x588f60[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0x589208[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x589368[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x589478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x589588[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x589648[shape=record, label="  ret i32 0"];
	Node0x585ad8 -> Node0x585b58;
	Node0x585b58 -> Node0x585be8;
	Node0x585be8 -> Node0x585c48;
	Node0x585c48 -> Node0x585cf8;
	Node0x585cf8 -> Node0x586128;
	Node0x586128 -> Node0x586208;
	Node0x586208 -> Node0x586308;
	Node0x586308 -> Node0x5863c8;
	Node0x5863c8 -> Node0x586478;
	Node0x586478 -> Node0x586538;
	Node0x586538 -> Node0x5865e8;
	Node0x5865e8 -> Node0x580ae0;
	Node0x580ae0 -> Node0x5867e8;
	Node0x5867e8 -> Node0x587758;
	Node0x587758 -> Node0x587dc8;
	Node0x587dc8 -> Node0x587e28;
	Node0x587e28 -> Node0x587ea0;
	Node0x587ea0 -> Node0x587f10;
	Node0x587f10 -> Node0x587f80;
	Node0x587f80 -> Node0x587ff0;
	Node0x587ff0 -> Node0x588060;
	Node0x588060 -> Node0x5880d0;
	Node0x5880d0 -> Node0x588140;
	Node0x588140 -> Node0x5881b0;
	Node0x5881b0 -> Node0x588220;
	Node0x588220 -> Node0x588290;
	Node0x588290 -> Node0x588300;
	Node0x588300 -> Node0x588370;
	Node0x588370 -> Node0x5883e0;
	Node0x5883e0 -> Node0x588450;
	Node0x588450 -> Node0x5884c0;
	Node0x5884c0 -> Node0x588530;
	Node0x588530 -> Node0x5885a0;
	Node0x5885a0 -> Node0x588610;
	Node0x588610 -> Node0x588680;
	Node0x588680 -> Node0x5886f0;
	Node0x5886f0 -> Node0x588760;
	Node0x588760 -> Node0x5887d0;
	Node0x5887d0 -> Node0x588840;
	Node0x588840 -> Node0x5888b0;
	Node0x5888b0 -> Node0x588920;
	Node0x588920 -> Node0x588990;
	Node0x588990 -> Node0x588a00;
	Node0x588a00 -> Node0x588a70;
	Node0x588a70 -> Node0x588ae0;
	Node0x588ae0 -> Node0x588b50;
	Node0x588b50 -> Node0x588bc0;
	Node0x588bc0 -> Node0x588c30;
	Node0x588c30 -> Node0x588ca0;
	Node0x588ca0 -> Node0x588d10;
	Node0x588d10 -> Node0x588d80;
	Node0x588d80 -> Node0x588df0;
	Node0x588df0 -> Node0x588e60;
	Node0x588e60 -> Node0x588ed0;
	Node0x588ed0 -> Node0x5258b8;
	Node0x5258b8 -> Node0x588f60;
	Node0x588f60 -> Node0x589208;
	Node0x589208 -> Node0x589368;
	Node0x589368 -> Node0x589478;
	Node0x589478 -> Node0x589588;
	Node0x589588 -> Node0x589648;
edge [color=red]
	Node0x585ad8 -> Node0x585cf8;
	Node0x585cf8 -> Node0x586128;
	Node0x585b58 -> Node0x586208;
	Node0x586208 -> Node0x586308;
	Node0x585be8 -> Node0x5863c8;
	Node0x5863c8 -> Node0x586478;
	Node0x585c48 -> Node0x586538;
	Node0x586538 -> Node0x5865e8;
	Node0x585ad8 -> Node0x580ae0;
	Node0x585b58 -> Node0x580ae0;
	Node0x585be8 -> Node0x580ae0;
	Node0x585c48 -> Node0x580ae0;
	Node0x585ad8 -> Node0x5867e8;
	Node0x585b58 -> Node0x587758;
	Node0x585be8 -> Node0x587dc8;
	Node0x585c48 -> Node0x587e28;
	Node0x587dc8 -> Node0x587ea0;
	Node0x587758 -> Node0x587f10;
	Node0x587ea0 -> Node0x587f10;
	Node0x587f10 -> Node0x587f80;
	Node0x587758 -> Node0x587ff0;
	Node0x587ea0 -> Node0x587ff0;
	Node0x587f80 -> Node0x588060;
	Node0x587ff0 -> Node0x588060;
	Node0x587e28 -> Node0x5880d0;
	Node0x588060 -> Node0x588140;
	Node0x5880d0 -> Node0x588140;
	Node0x587ff0 -> Node0x5881b0;
	Node0x5881b0 -> Node0x588220;
	Node0x587dc8 -> Node0x588290;
	Node0x587758 -> Node0x588290;
	Node0x5867e8 -> Node0x588300;
	Node0x587e28 -> Node0x588370;
	Node0x588300 -> Node0x588370;
	Node0x587e28 -> Node0x5883e0;
	Node0x588300 -> Node0x5883e0;
	Node0x587e28 -> Node0x588450;
	Node0x5867e8 -> Node0x588450;
	Node0x587e28 -> Node0x5884c0;
	Node0x588300 -> Node0x5884c0;
	Node0x587e28 -> Node0x588530;
	Node0x5867e8 -> Node0x588530;
	Node0x588530 -> Node0x5885a0;
	Node0x588450 -> Node0x588610;
	Node0x5884c0 -> Node0x588680;
	Node0x588680 -> Node0x5886f0;
	Node0x588530 -> Node0x588760;
	Node0x588610 -> Node0x5887d0;
	Node0x5883e0 -> Node0x5887d0;
	Node0x5887d0 -> Node0x588840;
	Node0x588370 -> Node0x5888b0;
	Node0x5867e8 -> Node0x5888b0;
	Node0x5888b0 -> Node0x588920;
	Node0x587dc8 -> Node0x588990;
	Node0x588990 -> Node0x588a00;
	Node0x587f10 -> Node0x588a00;
	Node0x588a00 -> Node0x588a70;
	Node0x588290 -> Node0x588a70;
	Node0x588a70 -> Node0x588ae0;
	Node0x588370 -> Node0x588ae0;
	Node0x588ae0 -> Node0x588b50;
	Node0x588450 -> Node0x588b50;
	Node0x588b50 -> Node0x588bc0;
	Node0x5884c0 -> Node0x588bc0;
	Node0x588bc0 -> Node0x588c30;
	Node0x5885a0 -> Node0x588c30;
	Node0x588c30 -> Node0x588ca0;
	Node0x588220 -> Node0x588ca0;
	Node0x588ca0 -> Node0x588d10;
	Node0x588760 -> Node0x588d10;
	Node0x588d10 -> Node0x588d80;
	Node0x5886f0 -> Node0x588d80;
	Node0x588d80 -> Node0x588df0;
	Node0x588840 -> Node0x588df0;
	Node0x588df0 -> Node0x588e60;
	Node0x588920 -> Node0x588e60;
	Node0x588140 -> Node0x588ed0;
	Node0x588e60 -> Node0x588ed0;
	Node0x588ed0 -> Node0x5258b8;
	Node0x5258b8 -> Node0x588f60;
	Node0x586538 -> Node0x589208;
	Node0x5863c8 -> Node0x589368;
	Node0x586208 -> Node0x589478;
	Node0x585cf8 -> Node0x589588;
}
