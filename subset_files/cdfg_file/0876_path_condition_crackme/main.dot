digraph "DFG for'main' function" {
	Node0x18658f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1865978[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1865a08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1865a68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1865b18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1865f48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1866028[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1866128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18661e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1866298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1866358[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1866408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1860a50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1866608[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1867578[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1867be8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1867c48[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1867cc0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1867d30[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x1867da0[shape=record, label="  %16 = xor i32 %13, %10"];
	Node0x1867e10[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x1867e80[shape=record, label="  %18 = add i32 %15, %17"];
	Node0x1867ef0[shape=record, label="  %19 = sub i32 0, %18"];
	Node0x1867f60[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x1867fd0[shape=record, label="  %21 = and i32 %11, %14"];
	Node0x1868040[shape=record, label="  %22 = mul i32 %21, -3"];
	Node0x18680b0[shape=record, label="  %23 = or i32 %13, %10"];
	Node0x1868120[shape=record, label="  %24 = xor i32 %16, -1"];
	Node0x1868190[shape=record, label="  %25 = xor i32 %10, -1"];
	Node0x1868200[shape=record, label="  %26 = or i32 %13, %25"];
	Node0x1868270[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x18682e0[shape=record, label="  %28 = shl i32 %26, 2"];
	Node0x1868350[shape=record, label="  %29 = xor i32 %28, -4"];
	Node0x18683c0[shape=record, label="  %30 = and i32 %13, %25"];
	Node0x1868430[shape=record, label="  %31 = shl i32 %30, 2"];
	Node0x18684a0[shape=record, label="  %32 = and i32 %13, %10"];
	Node0x1868510[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x1868580[shape=record, label="  %34 = add i32 %20, %25"];
	Node0x18685f0[shape=record, label="  %35 = add i32 %34, %23"];
	Node0x1868660[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x18686d0[shape=record, label="  %37 = add i32 %10, 3"];
	Node0x1868740[shape=record, label="  %38 = add i32 %37, %21"];
	Node0x18687b0[shape=record, label="  %39 = add i32 %38, %15"];
	Node0x1868820[shape=record, label="  %40 = add i32 %39, %13"];
	Node0x1868890[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x1868900[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x1868970[shape=record, label="  %43 = sub i32 %42, %27"];
	Node0x18689e0[shape=record, label="  %44 = sub i32 %43, %31"];
	Node0x1868a50[shape=record, label="  %45 = sub i32 %44, %33"];
	Node0x1868ac0[shape=record, label="  %46 = sub i32 %45, %29"];
	Node0x1868b30[shape=record, label="  %47 = add i32 %46, %36"];
	Node0x1868ba0[shape=record, label="  %48 = icmp eq i32 %47, %19"];
	Node0x18058b8[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1868c30[shape=record, label="  %50 = call i32 @puts(i8* nonnull dereferenceable(1) %49) #5"];
	Node0x1868ed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1869038[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1869148[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1869258[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1869318[shape=record, label="  ret i32 0"];
	Node0x18658f8 -> Node0x1865978;
	Node0x1865978 -> Node0x1865a08;
	Node0x1865a08 -> Node0x1865a68;
	Node0x1865a68 -> Node0x1865b18;
	Node0x1865b18 -> Node0x1865f48;
	Node0x1865f48 -> Node0x1866028;
	Node0x1866028 -> Node0x1866128;
	Node0x1866128 -> Node0x18661e8;
	Node0x18661e8 -> Node0x1866298;
	Node0x1866298 -> Node0x1866358;
	Node0x1866358 -> Node0x1866408;
	Node0x1866408 -> Node0x1860a50;
	Node0x1860a50 -> Node0x1866608;
	Node0x1866608 -> Node0x1867578;
	Node0x1867578 -> Node0x1867be8;
	Node0x1867be8 -> Node0x1867c48;
	Node0x1867c48 -> Node0x1867cc0;
	Node0x1867cc0 -> Node0x1867d30;
	Node0x1867d30 -> Node0x1867da0;
	Node0x1867da0 -> Node0x1867e10;
	Node0x1867e10 -> Node0x1867e80;
	Node0x1867e80 -> Node0x1867ef0;
	Node0x1867ef0 -> Node0x1867f60;
	Node0x1867f60 -> Node0x1867fd0;
	Node0x1867fd0 -> Node0x1868040;
	Node0x1868040 -> Node0x18680b0;
	Node0x18680b0 -> Node0x1868120;
	Node0x1868120 -> Node0x1868190;
	Node0x1868190 -> Node0x1868200;
	Node0x1868200 -> Node0x1868270;
	Node0x1868270 -> Node0x18682e0;
	Node0x18682e0 -> Node0x1868350;
	Node0x1868350 -> Node0x18683c0;
	Node0x18683c0 -> Node0x1868430;
	Node0x1868430 -> Node0x18684a0;
	Node0x18684a0 -> Node0x1868510;
	Node0x1868510 -> Node0x1868580;
	Node0x1868580 -> Node0x18685f0;
	Node0x18685f0 -> Node0x1868660;
	Node0x1868660 -> Node0x18686d0;
	Node0x18686d0 -> Node0x1868740;
	Node0x1868740 -> Node0x18687b0;
	Node0x18687b0 -> Node0x1868820;
	Node0x1868820 -> Node0x1868890;
	Node0x1868890 -> Node0x1868900;
	Node0x1868900 -> Node0x1868970;
	Node0x1868970 -> Node0x18689e0;
	Node0x18689e0 -> Node0x1868a50;
	Node0x1868a50 -> Node0x1868ac0;
	Node0x1868ac0 -> Node0x1868b30;
	Node0x1868b30 -> Node0x1868ba0;
	Node0x1868ba0 -> Node0x18058b8;
	Node0x18058b8 -> Node0x1868c30;
	Node0x1868c30 -> Node0x1868ed8;
	Node0x1868ed8 -> Node0x1869038;
	Node0x1869038 -> Node0x1869148;
	Node0x1869148 -> Node0x1869258;
	Node0x1869258 -> Node0x1869318;
edge [color=red]
	Node0x18658f8 -> Node0x1865b18;
	Node0x1865b18 -> Node0x1865f48;
	Node0x1865978 -> Node0x1866028;
	Node0x1866028 -> Node0x1866128;
	Node0x1865a08 -> Node0x18661e8;
	Node0x18661e8 -> Node0x1866298;
	Node0x1865a68 -> Node0x1866358;
	Node0x1866358 -> Node0x1866408;
	Node0x18658f8 -> Node0x1860a50;
	Node0x1865978 -> Node0x1860a50;
	Node0x1865a08 -> Node0x1860a50;
	Node0x1865a68 -> Node0x1860a50;
	Node0x18658f8 -> Node0x1866608;
	Node0x1865978 -> Node0x1867578;
	Node0x1865a08 -> Node0x1867be8;
	Node0x1865a68 -> Node0x1867c48;
	Node0x1867be8 -> Node0x1867cc0;
	Node0x1867578 -> Node0x1867d30;
	Node0x1867cc0 -> Node0x1867d30;
	Node0x1867c48 -> Node0x1867da0;
	Node0x1866608 -> Node0x1867da0;
	Node0x1867da0 -> Node0x1867e10;
	Node0x1867d30 -> Node0x1867e80;
	Node0x1867e10 -> Node0x1867e80;
	Node0x1867e80 -> Node0x1867ef0;
	Node0x1867be8 -> Node0x1867f60;
	Node0x1867578 -> Node0x1867f60;
	Node0x1867578 -> Node0x1867fd0;
	Node0x1867cc0 -> Node0x1867fd0;
	Node0x1867fd0 -> Node0x1868040;
	Node0x1867c48 -> Node0x18680b0;
	Node0x1866608 -> Node0x18680b0;
	Node0x1867da0 -> Node0x1868120;
	Node0x1866608 -> Node0x1868190;
	Node0x1867c48 -> Node0x1868200;
	Node0x1868190 -> Node0x1868200;
	Node0x1868200 -> Node0x1868270;
	Node0x1868200 -> Node0x18682e0;
	Node0x18682e0 -> Node0x1868350;
	Node0x1867c48 -> Node0x18683c0;
	Node0x1868190 -> Node0x18683c0;
	Node0x18683c0 -> Node0x1868430;
	Node0x1867c48 -> Node0x18684a0;
	Node0x1866608 -> Node0x18684a0;
	Node0x18684a0 -> Node0x1868510;
	Node0x1867f60 -> Node0x1868580;
	Node0x1868190 -> Node0x1868580;
	Node0x1868580 -> Node0x18685f0;
	Node0x18680b0 -> Node0x18685f0;
	Node0x18685f0 -> Node0x1868660;
	Node0x1866608 -> Node0x18686d0;
	Node0x18686d0 -> Node0x1868740;
	Node0x1867fd0 -> Node0x1868740;
	Node0x1868740 -> Node0x18687b0;
	Node0x1867d30 -> Node0x18687b0;
	Node0x18687b0 -> Node0x1868820;
	Node0x1867c48 -> Node0x1868820;
	Node0x1868820 -> Node0x1868890;
	Node0x1868040 -> Node0x1868890;
	Node0x1868890 -> Node0x1868900;
	Node0x1868120 -> Node0x1868900;
	Node0x1868900 -> Node0x1868970;
	Node0x1868270 -> Node0x1868970;
	Node0x1868970 -> Node0x18689e0;
	Node0x1868430 -> Node0x18689e0;
	Node0x18689e0 -> Node0x1868a50;
	Node0x1868510 -> Node0x1868a50;
	Node0x1868a50 -> Node0x1868ac0;
	Node0x1868350 -> Node0x1868ac0;
	Node0x1868ac0 -> Node0x1868b30;
	Node0x1868660 -> Node0x1868b30;
	Node0x1868b30 -> Node0x1868ba0;
	Node0x1867ef0 -> Node0x1868ba0;
	Node0x1868ba0 -> Node0x18058b8;
	Node0x18058b8 -> Node0x1868c30;
	Node0x1866358 -> Node0x1868ed8;
	Node0x18661e8 -> Node0x1869038;
	Node0x1866028 -> Node0x1869148;
	Node0x1865b18 -> Node0x1869258;
}
