; ModuleID = '../.././c_source_file/1116_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1116_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, %1
  %8 = xor i32 %7, -1
  %9 = add i32 %7, 1
  %10 = xor i32 %0, -1
  %11 = and i32 %2, %1
  %12 = and i32 %11, %10
  %13 = and i32 %7, %0
  %14 = or i32 %12, %13
  %15 = sub i32 %9, %14
  %16 = xor i32 %5, %4
  %17 = xor i32 %16, -1
  %18 = and i32 %17, %3
  %19 = sub i32 %15, %18
  %20 = or i32 %2, %0
  %21 = xor i32 %1, -1
  %22 = xor i32 %2, -1
  %23 = or i32 %22, %0
  %24 = xor i32 %23, -1
  %25 = or i32 %24, %21
  %26 = or i32 %11, %0
  %27 = or i32 %21, %0
  %28 = xor i32 %2, %0
  %29 = and i32 %28, %27
  %30 = shl i32 %29, 1
  %31 = or i32 %11, %10
  %32 = shl i32 %31, 1
  %33 = xor i32 %1, %0
  %34 = xor i32 %33, -1
  %35 = and i32 %28, %34
  %36 = or i32 %7, %10
  %37 = or i32 %24, %34
  %38 = or i32 %2, %1
  %39 = xor i32 %38, -1
  %40 = or i32 %39, %10
  %41 = and i32 %8, %0
  %42 = shl i32 %41, 1
  %43 = or i32 %22, %1
  %44 = xor i32 %43, -1
  %45 = or i32 %44, %0
  %46 = or i32 %28, %34
  %47 = and i32 %21, %2
  %48 = and i32 %47, %0
  %49 = xor i32 %7, %0
  %50 = or i32 %48, %49
  %51 = and i32 %2, %0
  %52 = or i32 %51, %33
  %53 = and i32 %1, %0
  %54 = or i32 %53, %24
  %55 = and i32 %21, %0
  %56 = xor i32 %55, -1
  %57 = xor i32 %56, %2
  %58 = xor i32 %27, -1
  %59 = or i32 %7, %58
  %60 = and i32 %20, %21
  %61 = and i32 %23, %1
  %62 = and i32 %47, %10
  %63 = xor i32 %36, -1
  %64 = or i32 %62, %63
  %65 = xor i32 %51, %1
  %66 = and i32 %20, %33
  %67 = xor i32 %53, -1
  %68 = and i32 %7, %67
  %69 = and i32 %22, %1
  %70 = xor i32 %69, %0
  %71 = xor i32 %67, %2
  %72 = xor i32 %51, %38
  %73 = xor i32 %69, -1
  %74 = and i32 %73, %10
  %75 = and i32 %11, %0
  %76 = and i32 %7, %10
  %77 = xor i32 %75, -1
  %78 = xor i32 %76, %77
  %79 = and i32 %73, %0
  %80 = shl i32 %79, 1
  %81 = xor i32 %28, -1
  %82 = or i32 %81, %21
  %83 = or i32 %1, %0
  %84 = and i32 %83, %8
  %85 = or i32 %53, %2
  %86 = or i32 %21, %2
  %87 = and i32 %86, %10
  %88 = xor i32 %48, -1
  %89 = xor i32 %87, %88
  %90 = xor i32 %83, -1
  %91 = or i32 %81, %90
  %92 = or i32 %8, %90
  %93 = or i32 %51, %69
  %94 = or i32 %8, %0
  %95 = or i32 %53, %44
  %96 = or i32 %48, %87
  %97 = xor i32 %44, %0
  %98 = xor i32 %73, %0
  %99 = shl i32 %98, 1
  %100 = or i32 %28, %33
  %101 = xor i32 %11, -1
  %102 = or i32 %101, %10
  %103 = and i32 %22, %0
  %104 = xor i32 %103, -1
  %105 = and i32 %104, %21
  %106 = shl i32 %105, 1
  %107 = or i32 %51, %34
  %108 = and i32 %81, %67
  %109 = or i32 %24, %1
  %110 = or i32 %101, %0
  %111 = shl i32 %110, 1
  %112 = or i32 %39, %0
  %113 = xor i32 %55, %73
  %114 = or i32 %8, %58
  %115 = and i32 %83, %81
  %116 = and i32 %28, %56
  %117 = and i32 %38, %10
  %118 = xor i32 %117, 2147483647
  %119 = xor i32 %118, %75
  %120 = xor i32 %58, %2
  %121 = or i32 %7, %0
  %122 = xor i32 %48, %121
  %123 = shl i32 %122, 1
  %124 = xor i32 %51, %27
  %125 = shl i32 %124, 1
  %126 = or i32 %28, %55
  %127 = xor i32 %20, -1
  %128 = or i32 %127, %1
  %129 = xor i32 %11, %0
  %130 = shl i32 %129, 1
  %131 = and i32 %8, %10
  %132 = shl i32 %131, 1
  %133 = xor i32 %51, %73
  %134 = or i32 %51, %58
  %135 = and i32 %27, %2
  %136 = xor i32 %43, %0
  %137 = xor i32 %8, %0
  %138 = and i32 %104, %34
  %139 = or i32 %73, %10
  %140 = and i32 %23, %33
  %141 = and i32 %22, %56
  %142 = xor i32 %121, 2147483647
  %143 = or i32 %142, %48
  %144 = shl i32 %143, 1
  %145 = and i32 %81, %34
  %146 = and i32 %7, %27
  %147 = shl i32 %146, 1
  %148 = and i32 %38, %0
  %149 = xor i32 %12, -1
  %150 = xor i32 %148, %149
  %151 = or i32 %55, %8
  %152 = or i32 %34, %2
  %153 = or i32 %51, %21
  %154 = xor i32 %38, %0
  %155 = xor i32 %154, %77
  %156 = xor i32 %86, %0
  %157 = or i32 %48, %156
  %158 = and i32 %67, %2
  %159 = or i32 %81, %58
  %160 = xor i32 %101, %0
  %161 = xor i32 %51, -1
  %162 = and i32 %161, %1
  %163 = shl i32 %162, 1
  %164 = xor i32 %161, %1
  %165 = and i32 %22, %67
  %166 = and i32 %8, %56
  %167 = shl i32 %166, 1
  %168 = or i32 %75, %117
  %169 = or i32 %81, %1
  %170 = shl i32 %169, 1
  %171 = and i32 %23, %34
  %172 = and i32 %8, %67
  %173 = and i32 %33, %22
  %174 = and i32 %86, %0
  %175 = or i32 %62, %174
  %176 = shl i32 %175, 1
  %177 = or i32 %12, %148
  %178 = or i32 %28, %1
  %179 = add i32 %43, 1
  %180 = and i32 %33, %81
  %181 = xor i32 %23, %1
  %182 = xor i32 %104, %1
  %183 = and i32 %27, %8
  %184 = or i32 %22, %34
  %185 = and i32 %27, %22
  %186 = shl i32 %185, 1
  %187 = or i32 %103, %44
  %188 = and i32 %28, %67
  %189 = or i32 %55, %22
  %190 = or i32 %103, %11
  %191 = or i32 %73, %0
  %192 = shl i32 %191, 1
  %193 = xor i32 %20, %53
  %194 = xor i32 %23, %53
  %195 = or i32 %55, %2
  %196 = or i32 %33, %24
  %197 = and i32 %56, %2
  %198 = xor i32 %103, %43
  %199 = and i32 %33, %2
  %200 = or i32 %44, %10
  %201 = xor i32 %55, %2
  %202 = add i32 %38, 1
  %203 = xor i32 %127, %1
  %204 = shl i32 %154, 1
  %205 = or i32 %7, %53
  %206 = and i32 %7, %83
  %207 = or i32 %75, %154
  %208 = xor i32 %27, %2
  %209 = shl i32 %208, 1
  %210 = and i32 %83, %22
  %211 = or i32 %51, %39
  %212 = shl i32 %211, 2
  %213 = or i32 %69, %55
  %214 = or i32 %127, %34
  %215 = and i32 %28, %1
  %216 = xor i32 %39, %0
  %217 = or i32 %28, %53
  %218 = and i32 %7, %56
  %219 = shl i32 %218, 1
  %220 = and i32 %161, %34
  %221 = or i32 %33, %81
  %222 = or i32 %55, %81
  %223 = or i32 %43, %10
  %224 = and i32 %161, %21
  %225 = and i32 %23, %21
  %226 = xor i32 %83, %2
  %227 = xor i32 %20, %1
  %228 = shl i32 %1, 2
  %229 = xor i32 %51, %83
  %230 = or i32 %53, %22
  %231 = shl i32 %230, 1
  %232 = xor i32 %103, %101
  %233 = add i32 %51, 1
  %234 = and i32 %28, %21
  %235 = or i32 %58, %2
  %236 = and i32 %28, %33
  %237 = xor i32 %24, %1
  %238 = and i32 %104, %1
  %239 = add i32 %53, 1
  %240 = xor i32 %75, %49
  %241 = and i32 %101, %0
  %242 = or i32 %103, %34
  %243 = shl i32 %242, 1
  %244 = shl i32 %51, 1
  %245 = xor i32 %55, %101
  %246 = or i32 %8, %10
  %247 = and i32 %20, %34
  %248 = or i32 %11, %55
  %249 = or i32 %28, %21
  %250 = shl i32 %249, 1
  %251 = xor i32 %90, %2
  %252 = xor i32 %103, %1
  %253 = or i32 %69, %0
  %254 = or i32 %38, %0
  %255 = and i32 %33, %104
  %256 = and i32 %83, %2
  %257 = xor i32 %49, -1
  %258 = xor i32 %48, %257
  %259 = and i32 %22, %34
  %260 = or i32 %103, %33
  %261 = xor i32 %156, %88
  %262 = and i32 %20, %1
  %263 = and i32 %43, %10
  %264 = or i32 %33, %2
  %265 = or i32 %7, %90
  %266 = add i32 %55, 1
  %267 = or i32 %7, %55
  %268 = or i32 %75, %257
  %269 = and i32 %33, %161
  %270 = or i32 %103, %1
  %271 = shl i32 %270, 1
  %272 = or i32 %75, %76
  %273 = add i32 %11, 1
  %274 = or i32 %53, %127
  %275 = xor i32 %13, %149
  %276 = xor i32 %62, %36
  %277 = xor i32 %38, %53
  %278 = and i32 %101, %10
  %279 = and i32 %81, %1
  %280 = and i32 %34, %2
  %281 = or i32 %33, %22
  %282 = and i32 %27, %81
  %283 = or i32 %33, %127
  %284 = xor i32 %53, %2
  %285 = or i32 %28, %58
  %286 = or i32 %51, %1
  %287 = or i32 %69, %10
  %288 = and i32 %43, %0
  %289 = or i32 %103, %21
  %290 = or i32 %90, %2
  %291 = or i32 %38, %10
  %292 = or i32 %51, %90
  %293 = or i32 %81, %34
  %294 = or i32 %127, %21
  %295 = or i32 %53, %8
  %296 = or i32 %22, %58
  %297 = or i32 %43, %0
  %298 = and i32 %81, %21
  %299 = or i32 %28, %90
  %300 = and i32 %39, %10
  %301 = mul i32 %300, 19
  %302 = and i32 %69, %10
  %303 = and i32 %39, %0
  %304 = mul i32 %303, 13
  %305 = and i32 %69, %0
  %306 = and i32 %44, %10
  %307 = and i32 %44, %0
  %308 = mul i32 %307, -18
  %309 = and i32 %4, %3
  %310 = or i32 %309, %17
  %311 = xor i32 %3, -1
  %312 = or i32 %311, %4
  %313 = xor i32 %312, -1
  %314 = xor i32 %5, %3
  %315 = xor i32 %314, -1
  %316 = or i32 %315, %313
  %317 = and i32 %311, %5
  %318 = and i32 %317, %4
  %319 = xor i32 %4, -1
  %320 = or i32 %311, %5
  %321 = and i32 %320, %319
  %322 = xor i32 %321, -1
  %323 = xor i32 %318, %322
  %324 = or i32 %4, %3
  %325 = and i32 %324, %315
  %326 = or i32 %314, %4
  %327 = xor i32 %326, -1
  %328 = or i32 %318, %327
  %329 = or i32 %16, %313
  %330 = and i32 %5, %3
  %331 = and i32 %330, %319
  %332 = or i32 %5, %3
  %333 = and i32 %332, %4
  %334 = or i32 %331, %333
  %335 = or i32 %314, %319
  %336 = shl i32 %335, 1
  %337 = and i32 %5, %4
  %338 = xor i32 %5, -1
  %339 = and i32 %338, %3
  %340 = xor i32 %339, -1
  %341 = xor i32 %337, %340
  %342 = and i32 %317, %319
  %343 = and i32 %320, %4
  %344 = xor i32 %343, 2147483647
  %345 = xor i32 %344, %342
  %346 = shl i32 %345, 1
  %347 = xor i32 %324, -1
  %348 = or i32 %17, %347
  %349 = and i32 %332, %319
  %350 = or i32 %338, %3
  %351 = xor i32 %350, %4
  %352 = xor i32 %332, -1
  %353 = or i32 %337, %352
  %354 = and i32 %311, %4
  %355 = or i32 %330, %354
  %356 = xor i32 %332, %309
  %357 = or i32 %330, %319
  %358 = or i32 %309, %338
  %359 = and i32 %338, %4
  %360 = or i32 %359, %330
  %361 = xor i32 %4, %3
  %362 = and i32 %361, %338
  %363 = or i32 %314, %354
  %364 = and i32 %16, %361
  %365 = xor i32 %309, %5
  %366 = or i32 %17, %313
  %367 = or i32 %314, %347
  %368 = xor i32 %359, -1
  %369 = and i32 %361, %368
  %370 = xor i32 %337, %3
  %371 = or i32 %309, %315
  %372 = or i32 %5, %4
  %373 = xor i32 %361, -1
  %374 = and i32 %372, %373
  %375 = or i32 %330, %4
  %376 = and i32 %330, %4
  %377 = xor i32 %332, %4
  %378 = or i32 %376, %377
  %379 = xor i32 %314, %4
  %380 = xor i32 %376, %379
  %381 = or i32 %376, %349
  %382 = and i32 %324, %5
  %383 = xor i32 %354, -1
  %384 = and i32 %314, %383
  %385 = xor i32 %335, -1
  %386 = or i32 %342, %385
  %387 = or i32 %318, %379
  %388 = shl i32 %387, 1
  %389 = or i32 %347, %5
  %390 = or i32 %350, %319
  %391 = or i32 %314, %309
  %392 = xor i32 %350, -1
  %393 = xor i32 %392, %4
  %394 = and i32 %16, %373
  %395 = xor i32 %372, -1
  %396 = or i32 %361, %395
  %397 = or i32 %354, %315
  %398 = and i32 %324, %17
  %399 = xor i32 %376, -1
  %400 = xor i32 %349, %399
  %401 = or i32 %337, %3
  %402 = shl i32 %313, 2
  %403 = xor i32 %312, %5
  %404 = or i32 %16, %3
  %405 = shl i32 %404, 1
  %406 = xor i32 %372, %3
  %407 = xor i32 %309, -1
  %408 = and i32 %17, %407
  %409 = or i32 %359, %311
  %410 = or i32 %359, %373
  %411 = or i32 %16, %361
  %412 = shl i32 %411, 2
  %413 = xor i32 %372, %309
  %414 = and i32 %372, %311
  %415 = and i32 %314, %319
  %416 = xor i32 %415, 2147483647
  %417 = xor i32 %416, %376
  %418 = and i32 %372, %3
  %419 = or i32 %354, %338
  %420 = or i32 %16, %373
  %421 = and i32 %338, %383
  %422 = xor i32 %379, -1
  %423 = or i32 %376, %422
  %424 = xor i32 %330, -1
  %425 = xor i32 %354, %424
  %426 = or i32 %359, %3
  %427 = and i32 %368, %373
  %428 = shl i32 %427, 2
  %429 = and i32 %383, %5
  %430 = or i32 %16, %311
  %431 = shl i32 %379, 1
  %432 = or i32 %361, %338
  %433 = and i32 %314, %4
  %434 = xor i32 %433, -1
  %435 = xor i32 %331, %434
  %436 = or i32 %17, %311
  %437 = and i32 %373, %5
  %438 = and i32 %361, %17
  %439 = xor i32 %340, %4
  %440 = or i32 %339, %354
  %441 = shl i32 %440, 1
  %442 = or i32 %318, %321
  %443 = and i32 %350, %4
  %444 = shl i32 %443, 1
  %445 = or i32 %395, %311
  %446 = xor i32 %320, %4
  %447 = xor i32 %446, 2147483647
  %448 = xor i32 %447, %318
  %449 = shl i32 %448, 1
  %450 = and i32 %315, %4
  %451 = or i32 %338, %4
  %452 = xor i32 %451, -1
  %453 = or i32 %452, %373
  %454 = or i32 %332, %319
  %455 = shl i32 %454, 1
  %456 = xor i32 %313, %5
  %457 = xor i32 %315, %4
  %458 = or i32 %315, %347
  %459 = or i32 %318, %446
  %460 = or i32 %309, %352
  %461 = xor i32 %337, -1
  %462 = and i32 %361, %461
  %463 = or i32 %339, %319
  %464 = and i32 %407, %5
  %465 = or i32 %309, %452
  %466 = or i32 %313, %5
  %467 = and i32 %451, %311
  %468 = shl i32 %467, 1
  %469 = xor i32 %359, %3
  %470 = or i32 %338, %313
  %471 = or i32 %354, %17
  %472 = and i32 %314, %407
  %473 = or i32 %337, %347
  %474 = and i32 %16, %383
  %475 = or i32 %16, %309
  %476 = or i32 %392, %319
  %477 = shl i32 %354, 2
  %478 = or i32 %359, %392
  %479 = or i32 %376, %415
  %480 = xor i32 %359, %424
  %481 = and i32 %16, %407
  %482 = xor i32 %407, %5
  %483 = or i32 %16, %347
  %484 = or i32 %361, %5
  %485 = and i32 %315, %319
  %486 = or i32 %340, %319
  %487 = or i32 %361, %452
  %488 = xor i32 %347, %5
  %489 = or i32 %354, %5
  %490 = or i32 %315, %4
  %491 = xor i32 %451, %309
  %492 = xor i32 %377, %399
  %493 = and i32 %324, %338
  %494 = and i32 %340, %319
  %495 = and i32 %424, %4
  %496 = shl i32 %495, 1
  %497 = and i32 %312, %338
  %498 = and i32 %16, %324
  %499 = or i32 %309, %5
  %500 = and i32 %16, %312
  %501 = add i32 %339, 1
  %502 = or i32 %352, %319
  %503 = or i32 %359, %361
  %504 = or i32 %373, %5
  %505 = shl i32 %504, 1
  %506 = or i32 %342, %343
  %507 = or i32 %338, %347
  %508 = and i32 %314, %324
  %509 = xor i32 %452, %3
  %510 = and i32 %461, %311
  %511 = or i32 %395, %3
  %512 = shl i32 %332, 1
  %513 = or i32 %424, %4
  %514 = xor i32 %359, %350
  %515 = and i32 %451, %3
  %516 = and i32 %368, %311
  %517 = and i32 %424, %319
  %518 = or i32 %337, %339
  %519 = or i32 %452, %3
  %520 = shl i32 %383, 1
  %521 = or i32 %392, %4
  %522 = and i32 %352, %319
  %523 = mul i32 %522, -10
  %524 = and i32 %339, %319
  %525 = and i32 %352, %4
  %526 = and i32 %339, %4
  %527 = and i32 %392, %319
  %528 = shl i32 %527, 1
  %529 = and i32 %392, %4
  %530 = shl i32 %529, 2
  %531 = add i32 %104, %127
  %532 = add i32 %531, %43
  %533 = add i32 %532, %283
  %534 = add i32 %533, %278
  %535 = add i32 %534, %254
  %536 = add i32 %535, %253
  %537 = add i32 %536, %241
  %538 = add i32 %537, %234
  %539 = add i32 %538, %227
  %540 = add i32 %539, %200
  %541 = add i32 %540, %148
  %542 = add i32 %541, %180
  %543 = add i32 %542, %164
  %544 = add i32 %543, %134
  %545 = add i32 %544, %113
  %546 = add i32 %545, %108
  %547 = add i32 %546, %107
  %548 = add i32 %547, %100
  %549 = add i32 %548, %91
  %550 = add i32 %549, %484
  %551 = add i32 %550, %389
  %552 = add i32 %551, %352
  %553 = add i32 %552, %119
  %554 = add i32 %553, %526
  %555 = add i32 %554, %517
  %556 = add i32 %555, %500
  %557 = add i32 %556, %397
  %558 = add i32 %557, %394
  %559 = add i32 %558, %363
  %560 = add i32 %559, %360
  %561 = add i32 %560, %349
  %562 = add i32 %561, %348
  %563 = add i32 %562, %506
  %564 = add i32 %563, %417
  %565 = shl i32 %564, 1
  %566 = sub i32 %305, %251
  %567 = sub i32 %566, %287
  %568 = sub i32 %567, %112
  %569 = add i32 %568, %177
  %570 = sub i32 %569, %418
  %571 = add i32 %570, %514
  %572 = mul i32 %571, 5
  %573 = add i32 %183, %152
  %574 = add i32 %573, %525
  %575 = add i32 %574, %331
  %576 = add i32 %575, %503
  %577 = add i32 %576, %478
  %578 = add i32 %577, %370
  %579 = shl i32 %578, 2
  %580 = sub i32 %85, %75
  %581 = add i32 %580, %193
  %582 = sub i32 %581, %94
  %583 = add i32 %582, %516
  %584 = add i32 %583, %376
  %585 = add i32 %584, %351
  %586 = mul i32 %585, 3
  %587 = sub i32 %302, %306
  %588 = sub i32 %587, %524
  %589 = mul i32 %588, 6
  %590 = add i32 %1, -5
  %591 = sub i32 %590, %228
  %592 = add i32 %591, %239
  %593 = add i32 %592, %55
  %594 = add i32 %593, %53
  %595 = add i32 %594, %266
  %596 = add i32 %595, %20
  %597 = sub i32 %596, %57
  %598 = sub i32 %597, %71
  %599 = sub i32 %598, %120
  %600 = sub i32 %599, %103
  %601 = sub i32 %600, %135
  %602 = add i32 %601, %141
  %603 = sub i32 %602, %158
  %604 = add i32 %603, %165
  %605 = sub i32 %604, %173
  %606 = add i32 %605, %179
  %607 = add i32 %606, %184
  %608 = add i32 %607, %11
  %609 = add i32 %608, %189
  %610 = add i32 %609, %195
  %611 = add i32 %610, %197
  %612 = add i32 %611, %199
  %613 = add i32 %612, %201
  %614 = add i32 %613, %202
  %615 = add i32 %614, %210
  %616 = sub i32 %615, %69
  %617 = add i32 %616, %38
  %618 = add i32 %617, %226
  %619 = sub i32 %618, %7
  %620 = add i32 %619, %233
  %621 = sub i32 %620, %235
  %622 = add i32 %621, %256
  %623 = sub i32 %622, %259
  %624 = add i32 %623, %264
  %625 = add i32 %624, %273
  %626 = add i32 %625, %280
  %627 = sub i32 %626, %281
  %628 = add i32 %627, %284
  %629 = sub i32 %628, %290
  %630 = add i32 %629, %73
  %631 = add i32 %630, %296
  %632 = sub i32 %631, %3
  %633 = add i32 %632, %25
  %634 = add i32 %633, %26
  %635 = sub i32 %634, %35
  %636 = add i32 %635, %36
  %637 = add i32 %636, %37
  %638 = sub i32 %637, %40
  %639 = add i32 %638, %45
  %640 = sub i32 %639, %46
  %641 = sub i32 %640, %52
  %642 = sub i32 %641, %54
  %643 = add i32 %642, %59
  %644 = add i32 %643, %60
  %645 = sub i32 %644, %61
  %646 = add i32 %645, %65
  %647 = sub i32 %646, %66
  %648 = add i32 %647, %68
  %649 = add i32 %648, %70
  %650 = add i32 %649, %72
  %651 = sub i32 %650, %74
  %652 = add i32 %651, %82
  %653 = sub i32 %652, %84
  %654 = add i32 %653, %92
  %655 = add i32 %654, %93
  %656 = add i32 %655, %95
  %657 = add i32 %656, %97
  %658 = sub i32 %657, %102
  %659 = add i32 %658, %109
  %660 = sub i32 %659, %114
  %661 = sub i32 %660, %115
  %662 = add i32 %661, %116
  %663 = sub i32 %662, %126
  %664 = sub i32 %663, %128
  %665 = sub i32 %664, %133
  %666 = sub i32 %665, %136
  %667 = add i32 %666, %137
  %668 = sub i32 %667, %138
  %669 = sub i32 %668, %139
  %670 = sub i32 %669, %140
  %671 = add i32 %670, %145
  %672 = add i32 %671, %151
  %673 = sub i32 %672, %153
  %674 = sub i32 %673, %159
  %675 = sub i32 %674, %160
  %676 = add i32 %675, %171
  %677 = add i32 %676, %172
  %678 = sub i32 %677, %178
  %679 = add i32 %678, %181
  %680 = add i32 %679, %182
  %681 = sub i32 %680, %186
  %682 = sub i32 %681, %187
  %683 = add i32 %682, %188
  %684 = add i32 %683, %190
  %685 = sub i32 %684, %194
  %686 = add i32 %685, %121
  %687 = sub i32 %686, %196
  %688 = sub i32 %687, %198
  %689 = add i32 %688, %203
  %690 = sub i32 %689, %205
  %691 = sub i32 %690, %206
  %692 = sub i32 %691, %209
  %693 = add i32 %692, %117
  %694 = sub i32 %693, %213
  %695 = sub i32 %694, %214
  %696 = add i32 %695, %215
  %697 = add i32 %696, %216
  %698 = add i32 %697, %217
  %699 = add i32 %698, %220
  %700 = sub i32 %699, %221
  %701 = add i32 %700, %222
  %702 = add i32 %701, %223
  %703 = sub i32 %702, %224
  %704 = sub i32 %703, %225
  %705 = sub i32 %704, %229
  %706 = sub i32 %705, %231
  %707 = add i32 %706, %232
  %708 = add i32 %707, %49
  %709 = sub i32 %708, %236
  %710 = add i32 %709, %237
  %711 = add i32 %710, %238
  %712 = sub i32 %711, %244
  %713 = sub i32 %712, %245
  %714 = add i32 %713, %246
  %715 = sub i32 %714, %247
  %716 = add i32 %715, %248
  %717 = add i32 %716, %252
  %718 = sub i32 %717, %255
  %719 = add i32 %718, %260
  %720 = sub i32 %719, %262
  %721 = sub i32 %720, %263
  %722 = add i32 %721, %265
  %723 = sub i32 %722, %267
  %724 = sub i32 %723, %269
  %725 = sub i32 %724, %274
  %726 = add i32 %725, %76
  %727 = add i32 %726, %277
  %728 = add i32 %727, %279
  %729 = sub i32 %728, %282
  %730 = sub i32 %729, %285
  %731 = sub i32 %730, %286
  %732 = sub i32 %731, %288
  %733 = add i32 %732, %289
  %734 = sub i32 %733, %291
  %735 = sub i32 %734, %292
  %736 = add i32 %735, %293
  %737 = sub i32 %736, %294
  %738 = sub i32 %737, %295
  %739 = add i32 %738, %297
  %740 = add i32 %739, %298
  %741 = add i32 %740, %13
  %742 = add i32 %741, %299
  %743 = sub i32 %742, %12
  %744 = add i32 %743, 1
  %745 = sub i32 %744, %30
  %746 = sub i32 %745, %32
  %747 = sub i32 %746, %42
  %748 = add i32 %747, %50
  %749 = sub i32 %748, %64
  %750 = add i32 %749, %78
  %751 = sub i32 %750, %80
  %752 = add i32 %751, %89
  %753 = add i32 %752, %96
  %754 = sub i32 %753, %99
  %755 = sub i32 %754, %106
  %756 = sub i32 %755, %111
  %757 = sub i32 %756, %125
  %758 = sub i32 %757, %130
  %759 = sub i32 %758, %132
  %760 = sub i32 %759, %147
  %761 = sub i32 %760, %150
  %762 = add i32 %761, %155
  %763 = add i32 %762, %157
  %764 = sub i32 %763, %163
  %765 = sub i32 %764, %167
  %766 = sub i32 %765, %168
  %767 = sub i32 %766, %170
  %768 = sub i32 %767, %192
  %769 = sub i32 %768, %204
  %770 = sub i32 %769, %207
  %771 = sub i32 %770, %212
  %772 = sub i32 %771, %219
  %773 = sub i32 %772, %240
  %774 = sub i32 %773, %243
  %775 = sub i32 %774, %250
  %776 = add i32 %775, %258
  %777 = add i32 %776, %261
  %778 = add i32 %777, %268
  %779 = sub i32 %778, %271
  %780 = add i32 %779, %272
  %781 = sub i32 %780, %275
  %782 = sub i32 %781, %276
  %783 = add i32 %782, %301
  %784 = add i32 %783, %304
  %785 = add i32 %784, %308
  %786 = add i32 %785, %361
  %787 = sub i32 %786, %309
  %788 = add i32 %787, %338
  %789 = add i32 %788, %347
  %790 = sub i32 %789, %123
  %791 = sub i32 %790, %176
  %792 = add i32 %791, %358
  %793 = sub i32 %792, %362
  %794 = sub i32 %793, %365
  %795 = add i32 %794, %16
  %796 = sub i32 %795, %382
  %797 = sub i32 %796, %402
  %798 = add i32 %797, %403
  %799 = sub i32 %798, %419
  %800 = add i32 %799, %421
  %801 = sub i32 %800, %429
  %802 = sub i32 %801, %432
  %803 = add i32 %802, %368
  %804 = add i32 %803, %437
  %805 = sub i32 %804, %456
  %806 = add i32 %805, %464
  %807 = add i32 %806, %466
  %808 = add i32 %807, %470
  %809 = add i32 %808, %392
  %810 = sub i32 %809, %477
  %811 = add i32 %810, %315
  %812 = add i32 %811, %482
  %813 = sub i32 %812, %488
  %814 = sub i32 %813, %489
  %815 = sub i32 %814, %493
  %816 = sub i32 %815, %497
  %817 = sub i32 %816, %499
  %818 = add i32 %817, %501
  %819 = add i32 %818, %507
  %820 = sub i32 %819, %520
  %821 = sub i32 %820, %144
  %822 = sub i32 %821, %310
  %823 = add i32 %822, %316
  %824 = sub i32 %823, %325
  %825 = add i32 %824, %329
  %826 = sub i32 %825, %341
  %827 = sub i32 %826, %353
  %828 = sub i32 %827, %355
  %829 = add i32 %828, %356
  %830 = add i32 %829, %357
  %831 = add i32 %830, %364
  %832 = add i32 %831, %366
  %833 = sub i32 %832, %367
  %834 = sub i32 %833, %369
  %835 = sub i32 %834, %371
  %836 = sub i32 %835, %374
  %837 = add i32 %836, %375
  %838 = add i32 %837, %384
  %839 = sub i32 %838, %390
  %840 = add i32 %839, %391
  %841 = sub i32 %840, %393
  %842 = add i32 %841, %396
  %843 = add i32 %842, %398
  %844 = add i32 %843, %401
  %845 = sub i32 %844, %406
  %846 = sub i32 %845, %408
  %847 = add i32 %846, %409
  %848 = sub i32 %847, %410
  %849 = sub i32 %848, %413
  %850 = sub i32 %849, %414
  %851 = add i32 %850, %420
  %852 = sub i32 %851, %415
  %853 = add i32 %852, %425
  %854 = sub i32 %853, %426
  %855 = add i32 %854, %430
  %856 = sub i32 %855, %377
  %857 = sub i32 %856, %436
  %858 = add i32 %857, %438
  %859 = sub i32 %858, %439
  %860 = add i32 %859, %445
  %861 = add i32 %860, %450
  %862 = add i32 %861, %453
  %863 = sub i32 %862, %457
  %864 = sub i32 %863, %458
  %865 = add i32 %864, %460
  %866 = sub i32 %865, %462
  %867 = sub i32 %866, %463
  %868 = add i32 %867, %465
  %869 = add i32 %868, %333
  %870 = add i32 %869, %469
  %871 = sub i32 %870, %471
  %872 = sub i32 %871, %472
  %873 = add i32 %872, %473
  %874 = sub i32 %873, %474
  %875 = add i32 %874, %475
  %876 = sub i32 %875, %476
  %877 = sub i32 %876, %480
  %878 = sub i32 %877, %481
  %879 = sub i32 %878, %483
  %880 = sub i32 %879, %485
  %881 = add i32 %880, %486
  %882 = sub i32 %881, %487
  %883 = sub i32 %882, %490
  %884 = sub i32 %883, %491
  %885 = sub i32 %884, %494
  %886 = sub i32 %885, %498
  %887 = add i32 %886, %502
  %888 = sub i32 %887, %505
  %889 = add i32 %888, %508
  %890 = add i32 %889, %509
  %891 = add i32 %890, %510
  %892 = add i32 %891, %511
  %893 = sub i32 %892, %512
  %894 = add i32 %893, %513
  %895 = add i32 %894, %515
  %896 = sub i32 %895, %518
  %897 = add i32 %896, %519
  %898 = add i32 %897, %521
  %899 = sub i32 %898, %323
  %900 = sub i32 %899, %328
  %901 = add i32 %900, %334
  %902 = sub i32 %901, %336
  %903 = sub i32 %902, %378
  %904 = add i32 %903, %380
  %905 = sub i32 %904, %381
  %906 = sub i32 %905, %386
  %907 = sub i32 %906, %400
  %908 = sub i32 %907, %405
  %909 = sub i32 %908, %412
  %910 = add i32 %909, %423
  %911 = sub i32 %910, %428
  %912 = sub i32 %911, %431
  %913 = add i32 %912, %435
  %914 = sub i32 %913, %441
  %915 = add i32 %914, %442
  %916 = sub i32 %915, %444
  %917 = sub i32 %916, %455
  %918 = sub i32 %917, %459
  %919 = sub i32 %918, %468
  %920 = add i32 %919, %479
  %921 = add i32 %920, %492
  %922 = sub i32 %921, %496
  %923 = add i32 %922, %523
  %924 = sub i32 %923, %528
  %925 = sub i32 %924, %530
  %926 = sub i32 %925, %388
  %927 = sub i32 %926, %346
  %928 = sub i32 %927, %449
  %929 = add i32 %928, %589
  %930 = add i32 %929, %572
  %931 = add i32 %930, %579
  %932 = add i32 %931, %586
  %933 = add i32 %932, %565
  %934 = icmp eq i32 %19, %933
  %935 = select i1 %934, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %936 = tail call i32 @puts(i8* nonnull dereferenceable(1) %935)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
