digraph "DFG for'crackme' function" {
	Node0x6a9d80[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x6a9df0[shape=record, label="  %6 = xor i32 %2, -1"];
	Node0x6a9e60[shape=record, label="  %7 = and i32 %6, %1"];
	Node0x6a9ed0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x6a9f40[shape=record, label="  %9 = add i32 %8, %5"];
	Node0x6a9fb0[shape=record, label="  %10 = xor i32 %3, %0"];
	Node0x6aa020[shape=record, label="  %11 = add i32 %9, %10"];
	Node0x6aa090[shape=record, label="  %12 = or i32 %6, %1"];
	Node0x6aa130[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x6aa1a0[shape=record, label="  %14 = shl i32 %6, 1"];
	Node0x6aa210[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x6aa280[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x6aa320[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x6aa3c0[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x6aa430[shape=record, label="  %19 = shl i32 %12, 2"];
	Node0x6aa4a0[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0x6aa510[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x6aa580[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x6aa5f0[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x6aa660[shape=record, label="  %24 = xor i32 %0, -1"];
	Node0x6aa6d0[shape=record, label="  %25 = shl i32 %24, 1"];
	Node0x6aa740[shape=record, label="  %26 = and i32 %24, %3"];
	Node0x6aa7b0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x6aa850[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x6aa8c0[shape=record, label="  %29 = xor i32 %10, -1"];
	Node0x6aa930[shape=record, label="  %30 = shl i32 %21, 2"];
	Node0x6aa9a0[shape=record, label="  %31 = xor i32 %30, -4"];
	Node0x6aaa10[shape=record, label="  %32 = xor i32 %3, -1"];
	Node0x6aac90[shape=record, label="  %33 = and i32 %32, %0"];
	Node0x6aad30[shape=record, label="  %34 = mul i32 %33, 6"];
	Node0x6aada0[shape=record, label="  %35 = add i32 %15, %3"];
	Node0x6aae10[shape=record, label="  %36 = add i32 %35, %26"];
	Node0x6aaeb0[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x6aaf20[shape=record, label="  %38 = add i32 %1, 3"];
	Node0x6aaf90[shape=record, label="  %39 = sub i32 %38, %25"];
	Node0x6ab000[shape=record, label="  %40 = add i32 %39, %14"];
	Node0x6ab070[shape=record, label="  %41 = add i32 %40, %15"];
	Node0x6ab0e0[shape=record, label="  %42 = add i32 %41, %7"];
	Node0x6ab150[shape=record, label="  %43 = sub i32 %42, %13"];
	Node0x6ab1c0[shape=record, label="  %44 = add i32 %43, %23"];
	Node0x6ab230[shape=record, label="  %45 = add i32 %44, %29"];
	Node0x6ab2a0[shape=record, label="  %46 = add i32 %45, %18"];
	Node0x6ab310[shape=record, label="  %47 = add i32 %46, %20"];
	Node0x6ab380[shape=record, label="  %48 = sub i32 %47, %22"];
	Node0x6ab3f0[shape=record, label="  %49 = add i32 %48, %34"];
	Node0x6ab460[shape=record, label="  %50 = sub i32 %49, %28"];
	Node0x6ab4d0[shape=record, label="  %51 = add i32 %50, %31"];
	Node0x6ab540[shape=record, label="  %52 = add i32 %51, %37"];
	Node0x6ab5b0[shape=record, label="  %53 = icmp eq i32 %11, %52"];
	Node0x64a268[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6aba50[shape=record, label="  %55 = tail call i32 @puts(i8* nonnull dereferenceable(1) %54)"];
	Node0x6abaa0[shape=record, label="  ret void"];
	Node0x6a9d80 -> Node0x6a9df0;
	Node0x6a9df0 -> Node0x6a9e60;
	Node0x6a9e60 -> Node0x6a9ed0;
	Node0x6a9ed0 -> Node0x6a9f40;
	Node0x6a9f40 -> Node0x6a9fb0;
	Node0x6a9fb0 -> Node0x6aa020;
	Node0x6aa020 -> Node0x6aa090;
	Node0x6aa090 -> Node0x6aa130;
	Node0x6aa130 -> Node0x6aa1a0;
	Node0x6aa1a0 -> Node0x6aa210;
	Node0x6aa210 -> Node0x6aa280;
	Node0x6aa280 -> Node0x6aa320;
	Node0x6aa320 -> Node0x6aa3c0;
	Node0x6aa3c0 -> Node0x6aa430;
	Node0x6aa430 -> Node0x6aa4a0;
	Node0x6aa4a0 -> Node0x6aa510;
	Node0x6aa510 -> Node0x6aa580;
	Node0x6aa580 -> Node0x6aa5f0;
	Node0x6aa5f0 -> Node0x6aa660;
	Node0x6aa660 -> Node0x6aa6d0;
	Node0x6aa6d0 -> Node0x6aa740;
	Node0x6aa740 -> Node0x6aa7b0;
	Node0x6aa7b0 -> Node0x6aa850;
	Node0x6aa850 -> Node0x6aa8c0;
	Node0x6aa8c0 -> Node0x6aa930;
	Node0x6aa930 -> Node0x6aa9a0;
	Node0x6aa9a0 -> Node0x6aaa10;
	Node0x6aaa10 -> Node0x6aac90;
	Node0x6aac90 -> Node0x6aad30;
	Node0x6aad30 -> Node0x6aada0;
	Node0x6aada0 -> Node0x6aae10;
	Node0x6aae10 -> Node0x6aaeb0;
	Node0x6aaeb0 -> Node0x6aaf20;
	Node0x6aaf20 -> Node0x6aaf90;
	Node0x6aaf90 -> Node0x6ab000;
	Node0x6ab000 -> Node0x6ab070;
	Node0x6ab070 -> Node0x6ab0e0;
	Node0x6ab0e0 -> Node0x6ab150;
	Node0x6ab150 -> Node0x6ab1c0;
	Node0x6ab1c0 -> Node0x6ab230;
	Node0x6ab230 -> Node0x6ab2a0;
	Node0x6ab2a0 -> Node0x6ab310;
	Node0x6ab310 -> Node0x6ab380;
	Node0x6ab380 -> Node0x6ab3f0;
	Node0x6ab3f0 -> Node0x6ab460;
	Node0x6ab460 -> Node0x6ab4d0;
	Node0x6ab4d0 -> Node0x6ab540;
	Node0x6ab540 -> Node0x6ab5b0;
	Node0x6ab5b0 -> Node0x64a268;
	Node0x64a268 -> Node0x6aba50;
	Node0x6aba50 -> Node0x6abaa0;
edge [color=red]
	Node0x6a9df0 -> Node0x6a9e60;
	Node0x6a9e60 -> Node0x6a9ed0;
	Node0x6a9ed0 -> Node0x6a9f40;
	Node0x6a9d80 -> Node0x6a9f40;
	Node0x6a9f40 -> Node0x6aa020;
	Node0x6a9fb0 -> Node0x6aa020;
	Node0x6a9df0 -> Node0x6aa090;
	Node0x6aa090 -> Node0x6aa130;
	Node0x6a9df0 -> Node0x6aa1a0;
	Node0x6aa280 -> Node0x6aa320;
	Node0x6aa320 -> Node0x6aa3c0;
	Node0x6aa090 -> Node0x6aa430;
	Node0x6aa430 -> Node0x6aa4a0;
	Node0x6aa510 -> Node0x6aa580;
	Node0x6aa660 -> Node0x6aa6d0;
	Node0x6aa660 -> Node0x6aa740;
	Node0x6aa740 -> Node0x6aa7b0;
	Node0x6aa7b0 -> Node0x6aa850;
	Node0x6a9fb0 -> Node0x6aa8c0;
	Node0x6aa510 -> Node0x6aa930;
	Node0x6aa930 -> Node0x6aa9a0;
	Node0x6aaa10 -> Node0x6aac90;
	Node0x6aac90 -> Node0x6aad30;
	Node0x6aa210 -> Node0x6aada0;
	Node0x6aada0 -> Node0x6aae10;
	Node0x6aa740 -> Node0x6aae10;
	Node0x6aae10 -> Node0x6aaeb0;
	Node0x6aaf20 -> Node0x6aaf90;
	Node0x6aa6d0 -> Node0x6aaf90;
	Node0x6aaf90 -> Node0x6ab000;
	Node0x6aa1a0 -> Node0x6ab000;
	Node0x6ab000 -> Node0x6ab070;
	Node0x6aa210 -> Node0x6ab070;
	Node0x6ab070 -> Node0x6ab0e0;
	Node0x6a9e60 -> Node0x6ab0e0;
	Node0x6ab0e0 -> Node0x6ab150;
	Node0x6aa130 -> Node0x6ab150;
	Node0x6ab150 -> Node0x6ab1c0;
	Node0x6aa5f0 -> Node0x6ab1c0;
	Node0x6ab1c0 -> Node0x6ab230;
	Node0x6aa8c0 -> Node0x6ab230;
	Node0x6ab230 -> Node0x6ab2a0;
	Node0x6aa3c0 -> Node0x6ab2a0;
	Node0x6ab2a0 -> Node0x6ab310;
	Node0x6aa4a0 -> Node0x6ab310;
	Node0x6ab310 -> Node0x6ab380;
	Node0x6aa580 -> Node0x6ab380;
	Node0x6ab380 -> Node0x6ab3f0;
	Node0x6aad30 -> Node0x6ab3f0;
	Node0x6ab3f0 -> Node0x6ab460;
	Node0x6aa850 -> Node0x6ab460;
	Node0x6ab460 -> Node0x6ab4d0;
	Node0x6aa9a0 -> Node0x6ab4d0;
	Node0x6ab4d0 -> Node0x6ab540;
	Node0x6aaeb0 -> Node0x6ab540;
	Node0x6aa020 -> Node0x6ab5b0;
	Node0x6ab540 -> Node0x6ab5b0;
	Node0x6ab5b0 -> Node0x64a268;
	Node0x64a268 -> Node0x6aba50;
}
