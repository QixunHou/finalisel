digraph "DFG for'main' function" {
	Node0x21a2128[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21a21a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21a2238[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x21a2298[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x21a2718[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21a27f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x21a28f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21a29b8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x21a2a68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21a2cc8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x21a2d88[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21a2ee8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21a2f48[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x21a8290[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x21a8498[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21a85f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21a8708[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21a87c8[shape=record, label="  ret i32 0"];
	Node0x21a2128 -> Node0x21a21a8;
	Node0x21a21a8 -> Node0x21a2238;
	Node0x21a2238 -> Node0x21a2298;
	Node0x21a2298 -> Node0x21a2718;
	Node0x21a2718 -> Node0x21a27f8;
	Node0x21a27f8 -> Node0x21a28f8;
	Node0x21a28f8 -> Node0x21a29b8;
	Node0x21a29b8 -> Node0x21a2a68;
	Node0x21a2a68 -> Node0x21a2cc8;
	Node0x21a2cc8 -> Node0x21a2d88;
	Node0x21a2d88 -> Node0x21a2ee8;
	Node0x21a2ee8 -> Node0x21a2f48;
	Node0x21a2f48 -> Node0x21a8290;
	Node0x21a8290 -> Node0x21a8498;
	Node0x21a8498 -> Node0x21a85f8;
	Node0x21a85f8 -> Node0x21a8708;
	Node0x21a8708 -> Node0x21a87c8;
edge [color=red]
	Node0x21a2128 -> Node0x21a2298;
	Node0x21a2298 -> Node0x21a2718;
	Node0x21a21a8 -> Node0x21a27f8;
	Node0x21a27f8 -> Node0x21a28f8;
	Node0x21a2238 -> Node0x21a29b8;
	Node0x21a29b8 -> Node0x21a2a68;
	Node0x21a2128 -> Node0x21a2cc8;
	Node0x21a21a8 -> Node0x21a2cc8;
	Node0x21a2238 -> Node0x21a2cc8;
	Node0x21a2128 -> Node0x21a2d88;
	Node0x21a21a8 -> Node0x21a2ee8;
	Node0x21a2238 -> Node0x21a2f48;
	Node0x21a2d88 -> Node0x21a8290;
	Node0x21a2ee8 -> Node0x21a8290;
	Node0x21a2f48 -> Node0x21a8290;
	Node0x21a29b8 -> Node0x21a8498;
	Node0x21a27f8 -> Node0x21a85f8;
	Node0x21a2298 -> Node0x21a8708;
}
