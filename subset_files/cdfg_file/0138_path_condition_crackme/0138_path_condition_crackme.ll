; ModuleID = '../.././c_source_file/0138_path_condition_crackme.c'
source_filename = "../.././c_source_file/0138_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %2
  %9 = and i32 %8, %0
  %10 = xor i32 %2, %1
  %11 = or i32 %10, %0
  %12 = xor i32 %11, -1
  %13 = or i32 %9, %12
  %14 = mul i32 %13, 5
  %15 = or i32 %7, %0
  %16 = and i32 %10, %15
  %17 = add i32 %14, %16
  %18 = xor i32 %4, %3
  %19 = xor i32 %18, -1
  %20 = and i32 %19, %5
  %21 = shl i32 %20, 1
  %22 = sub i32 %17, %21
  %23 = and i32 %5, %3
  %24 = and i32 %23, %4
  %25 = xor i32 %5, %3
  %26 = xor i32 %25, %4
  %27 = xor i32 %26, %24
  %28 = add i32 %22, %27
  %29 = and i32 %2, %0
  %30 = xor i32 %1, %0
  %31 = or i32 %29, %30
  %32 = and i32 %7, %0
  %33 = and i32 %2, %1
  %34 = or i32 %33, %32
  %35 = shl i32 %34, 1
  %36 = and i32 %33, %0
  %37 = xor i32 %10, %0
  %38 = xor i32 %37, -1
  %39 = or i32 %36, %38
  %40 = xor i32 %0, -1
  %41 = xor i32 %2, -1
  %42 = or i32 %41, %1
  %43 = or i32 %42, %40
  %44 = and i32 %41, %1
  %45 = xor i32 %44, -1
  %46 = or i32 %1, %0
  %47 = xor i32 %46, -1
  %48 = or i32 %47, %2
  %49 = shl i32 %48, 1
  %50 = and i32 %46, %2
  %51 = and i32 %41, %0
  %52 = xor i32 %51, -1
  %53 = add i32 %51, 1
  %54 = xor i32 %2, %0
  %55 = xor i32 %54, -1
  %56 = and i32 %55, %1
  %57 = or i32 %2, %0
  %58 = xor i32 %57, -1
  %59 = xor i32 %29, %45
  %60 = or i32 %2, %1
  %61 = xor i32 %60, %0
  %62 = shl i32 %61, 1
  %63 = xor i32 %30, -1
  %64 = and i32 %52, %63
  %65 = and i32 %1, %0
  %66 = xor i32 %65, -1
  %67 = xor i32 %66, %2
  %68 = and i32 %45, %0
  %69 = and i32 %54, %63
  %70 = or i32 %54, %63
  %71 = xor i32 %29, %46
  %72 = xor i32 %32, -1
  %73 = and i32 %10, %72
  %74 = shl i32 %73, 1
  %75 = or i32 %30, %55
  %76 = or i32 %29, %1
  %77 = or i32 %60, %40
  %78 = and i32 %54, %1
  %79 = or i32 %44, %0
  %80 = xor i32 %10, -1
  %81 = xor i32 %80, %0
  %82 = or i32 %54, %7
  %83 = and i32 %30, %52
  %84 = or i32 %41, %63
  %85 = xor i32 %29, %60
  %86 = or i32 %55, %1
  %87 = or i32 %54, %32
  %88 = or i32 %41, %0
  %89 = xor i32 %88, %1
  %90 = or i32 %60, %0
  %91 = or i32 %30, %41
  %92 = and i32 %41, %63
  %93 = or i32 %7, %2
  %94 = xor i32 %93, %0
  %95 = xor i32 %9, -1
  %96 = xor i32 %94, %95
  %97 = xor i32 %33, -1
  %98 = add i32 %33, 1
  %99 = or i32 %51, %33
  %100 = shl i32 %99, 1
  %101 = and i32 %46, %80
  %102 = shl i32 %101, 1
  %103 = and i32 %55, %66
  %104 = xor i32 %29, -1
  %105 = and i32 %104, %63
  %106 = xor i32 %60, -1
  %107 = or i32 %106, %40
  %108 = and i32 %33, %40
  %109 = and i32 %60, %0
  %110 = xor i32 %109, -1
  %111 = xor i32 %108, %110
  %112 = and i32 %54, %66
  %113 = xor i32 %88, -1
  %114 = xor i32 %15, -1
  %115 = or i32 %114, %2
  %116 = shl i32 %104, 2
  %117 = and i32 %8, %40
  %118 = and i32 %93, %0
  %119 = or i32 %117, %118
  %120 = or i32 %113, %1
  %121 = or i32 %32, %41
  %122 = or i32 %54, %47
  %123 = and i32 %57, %30
  %124 = and i32 %93, %40
  %125 = xor i32 %124, %95
  %126 = xor i32 %88, %65
  %127 = add i32 %65, 1
  %128 = xor i32 %42, -1
  %129 = or i32 %128, %40
  %130 = and i32 %10, %0
  %131 = xor i32 %130, 2147483647
  %132 = xor i32 %131, %108
  %133 = shl i32 %132, 1
  %134 = or i32 %41, %47
  %135 = and i32 %10, %46
  %136 = xor i32 %29, %15
  %137 = and i32 %54, %7
  %138 = or i32 %51, %30
  %139 = xor i32 %65, %2
  %140 = or i32 %29, %44
  %141 = and i32 %104, %7
  %142 = or i32 %9, %124
  %143 = and i32 %80, %40
  %144 = and i32 %54, %30
  %145 = and i32 %54, %72
  %146 = and i32 %63, %2
  %147 = or i32 %41, %114
  %148 = or i32 %108, %109
  %149 = or i32 %30, %2
  %150 = and i32 %15, %2
  %151 = shl i32 %150, 1
  %152 = or i32 %29, %63
  %153 = or i32 %29, %7
  %154 = or i32 %33, %40
  %155 = or i32 %106, %0
  %156 = or i32 %65, %2
  %157 = and i32 %66, %2
  %158 = xor i32 %42, %0
  %159 = and i32 %10, %40
  %160 = xor i32 %36, -1
  %161 = xor i32 %159, %160
  %162 = or i32 %55, %63
  %163 = shl i32 %162, 1
  %164 = or i32 %32, %55
  %165 = or i32 %54, %1
  %166 = or i32 %58, %1
  %167 = and i32 %88, %1
  %168 = or i32 %65, %58
  %169 = or i32 %45, %0
  %170 = or i32 %108, %130
  %171 = or i32 %42, %0
  %172 = and i32 %30, %55
  %173 = or i32 %29, %47
  %174 = or i32 %9, %94
  %175 = xor i32 %57, %65
  %176 = and i32 %54, %15
  %177 = and i32 %97, %0
  %178 = shl i32 %177, 1
  %179 = add i32 %10, 1
  %180 = and i32 %57, %63
  %181 = and i32 %45, %40
  %182 = and i32 %10, %66
  %183 = or i32 %80, %0
  %184 = or i32 %44, %40
  %185 = and i32 %41, %66
  %186 = xor i32 %32, %2
  %187 = and i32 %30, %41
  %188 = or i32 %44, %32
  %189 = add i32 %30, 1
  %190 = xor i32 %51, %42
  %191 = shl i32 %190, 2
  %192 = or i32 %54, %65
  %193 = xor i32 %42, %65
  %194 = xor i32 %9, %38
  %195 = or i32 %30, %58
  %196 = and i32 %80, %66
  %197 = and i32 %15, %80
  %198 = or i32 %65, %106
  %199 = and i32 %52, %1
  %200 = or i32 %54, %30
  %201 = xor i32 %46, %2
  %202 = or i32 %51, %1
  %203 = and i32 %46, %55
  %204 = xor i32 %114, %2
  %205 = or i32 %51, %63
  %206 = xor i32 %45, %0
  %207 = or i32 %58, %63
  %208 = xor i32 %58, %1
  %209 = and i32 %42, %40
  %210 = xor i32 %61, 2147483647
  %211 = xor i32 %210, %36
  %212 = xor i32 %118, -1
  %213 = xor i32 %117, %212
  %214 = or i32 %45, %40
  %215 = xor i32 %36, %37
  %216 = and i32 %46, %41
  %217 = or i32 %10, %32
  %218 = or i32 %80, %114
  %219 = xor i32 %104, %1
  %220 = or i32 %33, %0
  %221 = xor i32 %15, %2
  %222 = and i32 %88, %30
  %223 = xor i32 %60, %65
  %224 = or i32 %9, %37
  %225 = or i32 %51, %128
  %226 = or i32 %10, %40
  %227 = xor i32 %117, %226
  %228 = or i32 %29, %106
  %229 = or i32 %97, %0
  %230 = xor i32 %97, %0
  %231 = xor i32 %51, %97
  %232 = or i32 %80, %47
  %233 = xor i32 %113, %1
  %234 = or i32 %55, %114
  %235 = and i32 %42, %0
  %236 = and i32 %57, %7
  %237 = or i32 %36, %159
  %238 = or i32 %65, %55
  %239 = and i32 %88, %7
  %240 = or i32 %30, %113
  %241 = or i32 %58, %7
  %242 = xor i32 %52, %1
  %243 = and i32 %57, %1
  %244 = and i32 %15, %41
  %245 = and i32 %60, %40
  %246 = xor i32 %245, %160
  %247 = and i32 %15, %55
  %248 = or i32 %54, %114
  %249 = or i32 %63, %2
  %250 = xor i32 %72, %2
  %251 = shl i32 %250, 2
  %252 = and i32 %55, %7
  %253 = shl i32 %252, 2
  %254 = and i32 %104, %1
  %255 = xor i32 %226, 2147483647
  %256 = or i32 %255, %117
  %257 = shl i32 %256, 1
  %258 = and i32 %30, %2
  %259 = shl i32 %258, 1
  %260 = or i32 %32, %2
  %261 = shl i32 %260, 1
  %262 = and i32 %41, %72
  %263 = and i32 %52, %7
  %264 = xor i32 %57, %1
  %265 = and i32 %54, %46
  %266 = and i32 %88, %63
  %267 = or i32 %36, %245
  %268 = and i32 %72, %2
  %269 = or i32 %65, %128
  %270 = or i32 %51, %7
  %271 = xor i32 %32, %45
  %272 = or i32 %32, %80
  %273 = or i32 %55, %47
  %274 = or i32 %65, %113
  %275 = xor i32 %51, %1
  %276 = xor i32 %128, %0
  %277 = or i32 %10, %47
  %278 = xor i32 %32, %97
  %279 = xor i32 %47, %2
  %280 = or i32 %113, %7
  %281 = or i32 %55, %7
  %282 = and i32 %106, %40
  %283 = mul i32 %282, -7
  %284 = and i32 %44, %40
  %285 = and i32 %106, %0
  %286 = mul i32 %285, 12
  %287 = and i32 %44, %0
  %288 = mul i32 %287, -17
  %289 = and i32 %128, %40
  %290 = mul i32 %289, -18
  %291 = and i32 %128, %0
  %292 = xor i32 %5, -1
  %293 = and i32 %292, %4
  %294 = xor i32 %293, -1
  %295 = and i32 %294, %3
  %296 = xor i32 %4, -1
  %297 = xor i32 %25, -1
  %298 = and i32 %297, %296
  %299 = xor i32 %3, -1
  %300 = and i32 %5, %4
  %301 = or i32 %300, %299
  %302 = and i32 %4, %3
  %303 = xor i32 %302, -1
  %304 = xor i32 %303, %5
  %305 = xor i32 %5, %4
  %306 = xor i32 %305, -1
  %307 = and i32 %306, %3
  %308 = and i32 %25, %296
  %309 = or i32 %24, %308
  %310 = or i32 %4, %3
  %311 = xor i32 %310, -1
  %312 = add i32 %310, 1
  %313 = or i32 %299, %4
  %314 = xor i32 %313, -1
  %315 = or i32 %305, %314
  %316 = or i32 %305, %302
  %317 = or i32 %293, %19
  %318 = shl i32 %317, 1
  %319 = or i32 %302, %5
  %320 = and i32 %292, %3
  %321 = xor i32 %320, -1
  %322 = or i32 %321, %296
  %323 = xor i32 %300, -1
  %324 = and i32 %323, %19
  %325 = or i32 %5, %3
  %326 = and i32 %325, %296
  %327 = or i32 %24, %326
  %328 = and i32 %305, %303
  %329 = xor i32 %293, %3
  %330 = and i32 %18, %323
  %331 = or i32 %325, %296
  %332 = or i32 %320, %4
  %333 = or i32 %292, %4
  %334 = xor i32 %333, %3
  %335 = and i32 %333, %299
  %336 = xor i32 %23, -1
  %337 = add i32 %23, 1
  %338 = or i32 %5, %4
  %339 = and i32 %338, %299
  %340 = shl i32 %339, 1
  %341 = or i32 %300, %314
  %342 = shl i32 %341, 1
  %343 = add i32 %5, 1
  %344 = and i32 %325, %4
  %345 = or i32 %297, %296
  %346 = xor i32 %300, %321
  %347 = and i32 %336, %4
  %348 = or i32 %292, %311
  %349 = xor i32 %308, -1
  %350 = xor i32 %24, %349
  %351 = or i32 %311, %5
  %352 = xor i32 %333, -1
  %353 = or i32 %352, %19
  %354 = xor i32 %352, %3
  %355 = shl i32 %354, 1
  %356 = xor i32 %325, %302
  %357 = shl i32 %356, 1
  %358 = or i32 %19, %5
  %359 = add i32 %313, 1
  %360 = xor i32 %302, %5
  %361 = xor i32 %23, %4
  %362 = shl i32 %361, 1
  %363 = and i32 %310, %306
  %364 = or i32 %292, %19
  %365 = and i32 %303, %5
  %366 = or i32 %293, %3
  %367 = or i32 %292, %3
  %368 = and i32 %367, %296
  %369 = xor i32 %300, %3
  %370 = or i32 %25, %296
  %371 = and i32 %294, %19
  %372 = shl i32 %371, 1
  %373 = and i32 %338, %18
  %374 = shl i32 %373, 1
  %375 = and i32 %18, %5
  %376 = shl i32 %375, 1
  %377 = and i32 %305, %313
  %378 = and i32 %323, %3
  %379 = or i32 %302, %352
  %380 = or i32 %297, %311
  %381 = xor i32 %338, -1
  %382 = or i32 %381, %19
  %383 = and i32 %305, %18
  %384 = shl i32 %383, 1
  %385 = and i32 %299, %4
  %386 = or i32 %25, %385
  %387 = or i32 %292, %314
  %388 = shl i32 %387, 1
  %389 = xor i32 %367, -1
  %390 = or i32 %302, %389
  %391 = and i32 %333, %18
  %392 = and i32 %338, %3
  %393 = xor i32 %325, -1
  %394 = and i32 %393, %296
  %395 = and i32 %320, %296
  %396 = and i32 %393, %4
  %397 = and i32 %389, %296
  %398 = and i32 %23, %296
  %399 = and i32 %389, %4
  %400 = mul i32 %399, 19
  %401 = add i32 %65, %114
  %402 = add i32 %401, %279
  %403 = add i32 %402, %157
  %404 = add i32 %403, %54
  %405 = add i32 %404, %134
  %406 = add i32 %405, %58
  %407 = add i32 %406, %272
  %408 = add i32 %407, %243
  %409 = add i32 %408, %229
  %410 = add i32 %409, %222
  %411 = add i32 %410, %192
  %412 = add i32 %411, %183
  %413 = add i32 %412, %172
  %414 = add i32 %413, %70
  %415 = add i32 %414, %59
  %416 = add i32 %415, %267
  %417 = add i32 %416, %348
  %418 = add i32 %417, %211
  %419 = add i32 %418, %379
  %420 = add i32 %419, %24
  %421 = add i32 %420, %366
  %422 = shl i32 %421, 1
  %423 = sub i32 %146, %108
  %424 = add i32 %423, %242
  %425 = add i32 %424, %239
  %426 = sub i32 %425, %31
  %427 = add i32 %426, %337
  %428 = mul i32 %427, 5
  %429 = add i32 %40, %1
  %430 = sub i32 %429, %188
  %431 = add i32 %430, %170
  %432 = add i32 %431, %397
  %433 = add i32 %432, %398
  %434 = mul i32 %433, 3
  %435 = add i32 %394, %291
  %436 = add i32 %435, %396
  %437 = shl i32 %436, 3
  %438 = add i32 %181, %249
  %439 = add i32 %438, %36
  %440 = shl i32 %439, 2
  %441 = add i32 %395, %284
  %442 = mul i32 %441, 6
  %443 = add i32 %0, %1
  %444 = sub i32 %443, %2
  %445 = sub i32 %444, %30
  %446 = add i32 %445, %127
  %447 = add i32 %446, %189
  %448 = add i32 %447, %41
  %449 = add i32 %448, %47
  %450 = add i32 %449, %15
  %451 = add i32 %450, %32
  %452 = add i32 %451, %50
  %453 = add i32 %452, %53
  %454 = add i32 %453, %67
  %455 = add i32 %454, %84
  %456 = add i32 %455, %91
  %457 = sub i32 %456, %92
  %458 = add i32 %457, %98
  %459 = add i32 %458, %113
  %460 = add i32 %459, %115
  %461 = sub i32 %460, %121
  %462 = add i32 %461, %139
  %463 = add i32 %462, %10
  %464 = sub i32 %463, %51
  %465 = sub i32 %464, %147
  %466 = sub i32 %465, %149
  %467 = sub i32 %466, %156
  %468 = add i32 %467, %179
  %469 = sub i32 %468, %60
  %470 = sub i32 %469, %185
  %471 = sub i32 %470, %186
  %472 = sub i32 %471, %187
  %473 = sub i32 %472, %29
  %474 = add i32 %473, %201
  %475 = add i32 %474, %204
  %476 = add i32 %475, %216
  %477 = add i32 %476, %221
  %478 = sub i32 %477, %244
  %479 = add i32 %478, %55
  %480 = sub i32 %479, %88
  %481 = sub i32 %480, %262
  %482 = sub i32 %481, %268
  %483 = add i32 %482, %57
  %484 = add i32 %483, %43
  %485 = sub i32 %484, %49
  %486 = sub i32 %485, %56
  %487 = sub i32 %486, %64
  %488 = sub i32 %487, %68
  %489 = add i32 %488, %69
  %490 = add i32 %489, %71
  %491 = add i32 %490, %75
  %492 = add i32 %491, %76
  %493 = sub i32 %492, %77
  %494 = add i32 %493, %78
  %495 = sub i32 %494, %79
  %496 = sub i32 %495, %81
  %497 = add i32 %496, %82
  %498 = add i32 %497, %83
  %499 = sub i32 %498, %85
  %500 = add i32 %499, %86
  %501 = sub i32 %500, %87
  %502 = sub i32 %501, %89
  %503 = add i32 %502, %90
  %504 = add i32 %503, %103
  %505 = add i32 %504, %105
  %506 = sub i32 %505, %107
  %507 = add i32 %506, %112
  %508 = sub i32 %507, %37
  %509 = sub i32 %508, %116
  %510 = add i32 %509, %120
  %511 = sub i32 %510, %122
  %512 = sub i32 %511, %123
  %513 = sub i32 %512, %126
  %514 = sub i32 %513, %129
  %515 = sub i32 %514, %135
  %516 = sub i32 %515, %136
  %517 = add i32 %516, %137
  %518 = sub i32 %517, %138
  %519 = sub i32 %518, %140
  %520 = sub i32 %519, %141
  %521 = sub i32 %520, %143
  %522 = sub i32 %521, %144
  %523 = sub i32 %522, %145
  %524 = add i32 %523, %11
  %525 = sub i32 %524, %151
  %526 = sub i32 %525, %152
  %527 = sub i32 %526, %153
  %528 = add i32 %527, %154
  %529 = add i32 %528, %155
  %530 = add i32 %529, %158
  %531 = sub i32 %530, %164
  %532 = add i32 %531, %165
  %533 = sub i32 %532, %166
  %534 = sub i32 %533, %167
  %535 = add i32 %534, %168
  %536 = add i32 %535, %169
  %537 = sub i32 %536, %171
  %538 = sub i32 %537, %173
  %539 = add i32 %538, %175
  %540 = sub i32 %539, %176
  %541 = add i32 %540, %180
  %542 = add i32 %541, %130
  %543 = sub i32 %542, %182
  %544 = add i32 %543, %184
  %545 = sub i32 %544, %193
  %546 = sub i32 %545, %195
  %547 = add i32 %546, %196
  %548 = sub i32 %547, %197
  %549 = add i32 %548, %198
  %550 = add i32 %549, %199
  %551 = sub i32 %550, %200
  %552 = sub i32 %551, %202
  %553 = sub i32 %552, %203
  %554 = sub i32 %553, %205
  %555 = add i32 %554, %206
  %556 = sub i32 %555, %207
  %557 = add i32 %556, %208
  %558 = add i32 %557, %209
  %559 = add i32 %558, %214
  %560 = add i32 %559, %217
  %561 = add i32 %560, %218
  %562 = sub i32 %561, %219
  %563 = sub i32 %562, %220
  %564 = sub i32 %563, %223
  %565 = sub i32 %564, %225
  %566 = sub i32 %565, %159
  %567 = sub i32 %566, %228
  %568 = sub i32 %567, %230
  %569 = add i32 %568, %231
  %570 = sub i32 %569, %232
  %571 = sub i32 %570, %233
  %572 = sub i32 %571, %234
  %573 = sub i32 %572, %235
  %574 = add i32 %573, %236
  %575 = add i32 %574, %238
  %576 = sub i32 %575, %240
  %577 = add i32 %576, %241
  %578 = add i32 %577, %226
  %579 = sub i32 %578, %247
  %580 = add i32 %579, %248
  %581 = sub i32 %580, %251
  %582 = add i32 %581, %254
  %583 = sub i32 %582, %259
  %584 = sub i32 %583, %261
  %585 = sub i32 %584, %263
  %586 = add i32 %585, %264
  %587 = add i32 %586, %265
  %588 = add i32 %587, %266
  %589 = sub i32 %588, %269
  %590 = add i32 %589, %270
  %591 = add i32 %590, %271
  %592 = add i32 %591, %273
  %593 = sub i32 %592, %274
  %594 = sub i32 %593, %275
  %595 = add i32 %594, %245
  %596 = add i32 %595, %276
  %597 = add i32 %596, %277
  %598 = add i32 %597, %278
  %599 = add i32 %598, %280
  %600 = add i32 %599, %281
  %601 = add i32 %600, %296
  %602 = sub i32 %601, %35
  %603 = sub i32 %602, %39
  %604 = sub i32 %603, %62
  %605 = sub i32 %604, %74
  %606 = add i32 %605, %96
  %607 = sub i32 %606, %100
  %608 = sub i32 %607, %102
  %609 = sub i32 %608, %111
  %610 = add i32 %609, %119
  %611 = add i32 %610, %125
  %612 = add i32 %611, %142
  %613 = sub i32 %612, %148
  %614 = sub i32 %613, %161
  %615 = sub i32 %614, %163
  %616 = sub i32 %615, %174
  %617 = sub i32 %616, %178
  %618 = sub i32 %617, %191
  %619 = sub i32 %618, %194
  %620 = sub i32 %619, %213
  %621 = sub i32 %620, %215
  %622 = sub i32 %621, %224
  %623 = add i32 %622, %227
  %624 = add i32 %623, %237
  %625 = add i32 %624, %246
  %626 = sub i32 %625, %253
  %627 = add i32 %626, %283
  %628 = add i32 %627, %286
  %629 = add i32 %628, %288
  %630 = add i32 %629, %290
  %631 = add i32 %630, %312
  %632 = add i32 %631, %5
  %633 = add i32 %632, %313
  %634 = add i32 %633, %343
  %635 = add i32 %634, %359
  %636 = sub i32 %635, %304
  %637 = sub i32 %636, %319
  %638 = add i32 %637, %293
  %639 = sub i32 %638, %300
  %640 = add i32 %639, %351
  %641 = sub i32 %640, %358
  %642 = add i32 %641, %338
  %643 = add i32 %642, %360
  %644 = add i32 %643, %364
  %645 = sub i32 %644, %365
  %646 = sub i32 %645, %23
  %647 = sub i32 %646, %133
  %648 = sub i32 %647, %257
  %649 = sub i32 %648, %295
  %650 = add i32 %649, %298
  %651 = sub i32 %650, %301
  %652 = sub i32 %651, %307
  %653 = add i32 %652, %315
  %654 = add i32 %653, %316
  %655 = sub i32 %654, %322
  %656 = add i32 %655, %324
  %657 = add i32 %656, %328
  %658 = add i32 %657, %329
  %659 = add i32 %658, %330
  %660 = add i32 %659, %331
  %661 = sub i32 %660, %332
  %662 = sub i32 %661, %334
  %663 = sub i32 %662, %335
  %664 = add i32 %663, %344
  %665 = add i32 %664, %345
  %666 = add i32 %665, %346
  %667 = add i32 %666, %347
  %668 = sub i32 %667, %353
  %669 = sub i32 %668, %363
  %670 = add i32 %669, %368
  %671 = sub i32 %670, %369
  %672 = sub i32 %671, %370
  %673 = sub i32 %672, %376
  %674 = sub i32 %673, %377
  %675 = add i32 %674, %378
  %676 = sub i32 %675, %380
  %677 = add i32 %676, %382
  %678 = add i32 %677, %386
  %679 = sub i32 %678, %388
  %680 = sub i32 %679, %390
  %681 = add i32 %680, %391
  %682 = add i32 %681, %392
  %683 = add i32 %682, %440
  %684 = add i32 %683, %309
  %685 = sub i32 %684, %318
  %686 = add i32 %685, %327
  %687 = sub i32 %686, %340
  %688 = sub i32 %687, %342
  %689 = add i32 %688, %350
  %690 = sub i32 %689, %355
  %691 = sub i32 %690, %357
  %692 = sub i32 %691, %362
  %693 = sub i32 %692, %372
  %694 = sub i32 %693, %374
  %695 = sub i32 %694, %384
  %696 = add i32 %695, %400
  %697 = add i32 %696, %442
  %698 = add i32 %697, %437
  %699 = add i32 %698, %428
  %700 = add i32 %699, %434
  %701 = add i32 %700, %422
  %702 = icmp eq i32 %28, %701
  %703 = select i1 %702, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %704 = tail call i32 @puts(i8* nonnull dereferenceable(1) %703)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
