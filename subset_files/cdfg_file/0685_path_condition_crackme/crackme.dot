digraph "DFG for'crackme' function" {
	Node0x14faf40[shape=record, label="  %5 = mul i32 %2, -2"];
	Node0x14fafe0[shape=record, label="  %6 = add i32 %2, 1"];
	Node0x14fb050[shape=record, label="  %7 = add i32 %6, %0"];
	Node0x14fb0c0[shape=record, label="  %8 = add i32 %7, %5"];
	Node0x14fb160[shape=record, label="  %9 = xor i32 %1, -1"];
	Node0x14fb1d0[shape=record, label="  %10 = or i32 %9, %2"];
	Node0x14fb240[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x14fb2b0[shape=record, label="  %12 = xor i32 %0, -1"];
	Node0x14fb320[shape=record, label="  %13 = xor i32 %12, %3"];
	Node0x14fb390[shape=record, label="  %14 = or i32 %12, %3"];
	Node0x14fb400[shape=record, label="  %15 = xor i32 %3, -1"];
	Node0x14fb470[shape=record, label="  %16 = and i32 %3, %0"];
	Node0x14fb4e0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x14fb550[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x14fb5c0[shape=record, label="  %19 = or i32 %3, %0"];
	Node0x14fb630[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x14fb6d0[shape=record, label="  %21 = mul i32 %20, -5"];
	Node0x14fb740[shape=record, label="  %22 = and i32 %12, %3"];
	Node0x14fb7e0[shape=record, label="  %23 = mul i32 %22, -3"];
	Node0x14fb850[shape=record, label="  %24 = shl i32 %14, 1"];
	Node0x14fb8c0[shape=record, label="  %25 = sub i32 1, %0"];
	Node0x14fb930[shape=record, label="  %26 = sub i32 %25, %10"];
	Node0x14fb9a0[shape=record, label="  %27 = sub i32 %26, %11"];
	Node0x14fba10[shape=record, label="  %28 = add i32 %27, %15"];
	Node0x14fba80[shape=record, label="  %29 = add i32 %28, %13"];
	Node0x14fbaf0[shape=record, label="  %30 = add i32 %29, %21"];
	Node0x14fbb60[shape=record, label="  %31 = add i32 %30, %23"];
	Node0x14fbbd0[shape=record, label="  %32 = add i32 %31, %24"];
	Node0x14fbe50[shape=record, label="  %33 = add i32 %32, %18"];
	Node0x14fbec0[shape=record, label="  %34 = icmp eq i32 %8, %33"];
	Node0x149b268[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14fc360[shape=record, label="  %36 = tail call i32 @puts(i8* nonnull dereferenceable(1) %35)"];
	Node0x14fc3b0[shape=record, label="  ret void"];
	Node0x14faf40 -> Node0x14fafe0;
	Node0x14fafe0 -> Node0x14fb050;
	Node0x14fb050 -> Node0x14fb0c0;
	Node0x14fb0c0 -> Node0x14fb160;
	Node0x14fb160 -> Node0x14fb1d0;
	Node0x14fb1d0 -> Node0x14fb240;
	Node0x14fb240 -> Node0x14fb2b0;
	Node0x14fb2b0 -> Node0x14fb320;
	Node0x14fb320 -> Node0x14fb390;
	Node0x14fb390 -> Node0x14fb400;
	Node0x14fb400 -> Node0x14fb470;
	Node0x14fb470 -> Node0x14fb4e0;
	Node0x14fb4e0 -> Node0x14fb550;
	Node0x14fb550 -> Node0x14fb5c0;
	Node0x14fb5c0 -> Node0x14fb630;
	Node0x14fb630 -> Node0x14fb6d0;
	Node0x14fb6d0 -> Node0x14fb740;
	Node0x14fb740 -> Node0x14fb7e0;
	Node0x14fb7e0 -> Node0x14fb850;
	Node0x14fb850 -> Node0x14fb8c0;
	Node0x14fb8c0 -> Node0x14fb930;
	Node0x14fb930 -> Node0x14fb9a0;
	Node0x14fb9a0 -> Node0x14fba10;
	Node0x14fba10 -> Node0x14fba80;
	Node0x14fba80 -> Node0x14fbaf0;
	Node0x14fbaf0 -> Node0x14fbb60;
	Node0x14fbb60 -> Node0x14fbbd0;
	Node0x14fbbd0 -> Node0x14fbe50;
	Node0x14fbe50 -> Node0x14fbec0;
	Node0x14fbec0 -> Node0x149b268;
	Node0x149b268 -> Node0x14fc360;
	Node0x14fc360 -> Node0x14fc3b0;
edge [color=red]
	Node0x14fafe0 -> Node0x14fb050;
	Node0x14fb050 -> Node0x14fb0c0;
	Node0x14faf40 -> Node0x14fb0c0;
	Node0x14fb160 -> Node0x14fb1d0;
	Node0x14fb2b0 -> Node0x14fb320;
	Node0x14fb2b0 -> Node0x14fb390;
	Node0x14fb470 -> Node0x14fb4e0;
	Node0x14fb4e0 -> Node0x14fb550;
	Node0x14fb5c0 -> Node0x14fb630;
	Node0x14fb630 -> Node0x14fb6d0;
	Node0x14fb2b0 -> Node0x14fb740;
	Node0x14fb740 -> Node0x14fb7e0;
	Node0x14fb390 -> Node0x14fb850;
	Node0x14fb8c0 -> Node0x14fb930;
	Node0x14fb1d0 -> Node0x14fb930;
	Node0x14fb930 -> Node0x14fb9a0;
	Node0x14fb240 -> Node0x14fb9a0;
	Node0x14fb9a0 -> Node0x14fba10;
	Node0x14fb400 -> Node0x14fba10;
	Node0x14fba10 -> Node0x14fba80;
	Node0x14fb320 -> Node0x14fba80;
	Node0x14fba80 -> Node0x14fbaf0;
	Node0x14fb6d0 -> Node0x14fbaf0;
	Node0x14fbaf0 -> Node0x14fbb60;
	Node0x14fb7e0 -> Node0x14fbb60;
	Node0x14fbb60 -> Node0x14fbbd0;
	Node0x14fb850 -> Node0x14fbbd0;
	Node0x14fbbd0 -> Node0x14fbe50;
	Node0x14fb550 -> Node0x14fbe50;
	Node0x14fb0c0 -> Node0x14fbec0;
	Node0x14fbe50 -> Node0x14fbec0;
	Node0x14fbec0 -> Node0x149b268;
	Node0x149b268 -> Node0x14fc360;
}
