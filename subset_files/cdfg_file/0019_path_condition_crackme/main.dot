digraph "DFG for'main' function" {
	Node0x1a8ea48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a8eac8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a8eb58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1a8efb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a8f098[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1a8f1b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a8f3f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1a8f4a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a90418[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a90aa0[shape=record, label="  %8 = xor i32 %6, -1"];
	Node0x1a90b10[shape=record, label="  %9 = xor i32 %7, %8"];
	Node0x1a90b80[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x1a90bf0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x1a90c60[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x1a90cd0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x1a90d40[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x1a90db0[shape=record, label="  %15 = and i32 %6, %10"];
	Node0x1a90e20[shape=record, label="  %16 = xor i32 %14, -1"];
	Node0x1a90e90[shape=record, label="  %17 = mul i32 %16, -3"];
	Node0x1a90f00[shape=record, label="  %18 = shl i32 %15, 1"];
	Node0x1a90f70[shape=record, label="  %19 = sub i32 %7, %6"];
	Node0x1a90fe0[shape=record, label="  %20 = add i32 %19, %9"];
	Node0x1a91050[shape=record, label="  %21 = add i32 %20, %11"];
	Node0x1a910c0[shape=record, label="  %22 = add i32 %21, %13"];
	Node0x1a91130[shape=record, label="  %23 = sub i32 %22, %14"];
	Node0x1a911a0[shape=record, label="  %24 = add i32 %23, %15"];
	Node0x1a91210[shape=record, label="  %25 = add i32 %24, %17"];
	Node0x1a91280[shape=record, label="  %26 = sub i32 %25, %18"];
	Node0x1a912f0[shape=record, label="  %27 = icmp eq i32 %26, %8"];
	Node0x1a2f9d8[shape=record, label="  %28 = select i1 %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a91380[shape=record, label="  %29 = call i32 @puts(i8* nonnull dereferenceable(1) %28) #5"];
	Node0x1a915d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a91738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a917f8[shape=record, label="  ret i32 0"];
	Node0x1a8ea48 -> Node0x1a8eac8;
	Node0x1a8eac8 -> Node0x1a8eb58;
	Node0x1a8eb58 -> Node0x1a8efb8;
	Node0x1a8efb8 -> Node0x1a8f098;
	Node0x1a8f098 -> Node0x1a8f1b8;
	Node0x1a8f1b8 -> Node0x1a8f3f0;
	Node0x1a8f3f0 -> Node0x1a8f4a8;
	Node0x1a8f4a8 -> Node0x1a90418;
	Node0x1a90418 -> Node0x1a90aa0;
	Node0x1a90aa0 -> Node0x1a90b10;
	Node0x1a90b10 -> Node0x1a90b80;
	Node0x1a90b80 -> Node0x1a90bf0;
	Node0x1a90bf0 -> Node0x1a90c60;
	Node0x1a90c60 -> Node0x1a90cd0;
	Node0x1a90cd0 -> Node0x1a90d40;
	Node0x1a90d40 -> Node0x1a90db0;
	Node0x1a90db0 -> Node0x1a90e20;
	Node0x1a90e20 -> Node0x1a90e90;
	Node0x1a90e90 -> Node0x1a90f00;
	Node0x1a90f00 -> Node0x1a90f70;
	Node0x1a90f70 -> Node0x1a90fe0;
	Node0x1a90fe0 -> Node0x1a91050;
	Node0x1a91050 -> Node0x1a910c0;
	Node0x1a910c0 -> Node0x1a91130;
	Node0x1a91130 -> Node0x1a911a0;
	Node0x1a911a0 -> Node0x1a91210;
	Node0x1a91210 -> Node0x1a91280;
	Node0x1a91280 -> Node0x1a912f0;
	Node0x1a912f0 -> Node0x1a2f9d8;
	Node0x1a2f9d8 -> Node0x1a91380;
	Node0x1a91380 -> Node0x1a915d8;
	Node0x1a915d8 -> Node0x1a91738;
	Node0x1a91738 -> Node0x1a917f8;
edge [color=red]
	Node0x1a8ea48 -> Node0x1a8eb58;
	Node0x1a8eb58 -> Node0x1a8efb8;
	Node0x1a8eac8 -> Node0x1a8f098;
	Node0x1a8f098 -> Node0x1a8f1b8;
	Node0x1a8ea48 -> Node0x1a8f3f0;
	Node0x1a8eac8 -> Node0x1a8f3f0;
	Node0x1a8ea48 -> Node0x1a8f4a8;
	Node0x1a8eac8 -> Node0x1a90418;
	Node0x1a8f4a8 -> Node0x1a90aa0;
	Node0x1a90418 -> Node0x1a90b10;
	Node0x1a90aa0 -> Node0x1a90b10;
	Node0x1a90418 -> Node0x1a90b80;
	Node0x1a90b80 -> Node0x1a90bf0;
	Node0x1a90418 -> Node0x1a90c60;
	Node0x1a8f4a8 -> Node0x1a90c60;
	Node0x1a90c60 -> Node0x1a90cd0;
	Node0x1a90418 -> Node0x1a90d40;
	Node0x1a8f4a8 -> Node0x1a90d40;
	Node0x1a8f4a8 -> Node0x1a90db0;
	Node0x1a90b80 -> Node0x1a90db0;
	Node0x1a90d40 -> Node0x1a90e20;
	Node0x1a90e20 -> Node0x1a90e90;
	Node0x1a90db0 -> Node0x1a90f00;
	Node0x1a90418 -> Node0x1a90f70;
	Node0x1a8f4a8 -> Node0x1a90f70;
	Node0x1a90f70 -> Node0x1a90fe0;
	Node0x1a90b10 -> Node0x1a90fe0;
	Node0x1a90fe0 -> Node0x1a91050;
	Node0x1a90bf0 -> Node0x1a91050;
	Node0x1a91050 -> Node0x1a910c0;
	Node0x1a90cd0 -> Node0x1a910c0;
	Node0x1a910c0 -> Node0x1a91130;
	Node0x1a90d40 -> Node0x1a91130;
	Node0x1a91130 -> Node0x1a911a0;
	Node0x1a90db0 -> Node0x1a911a0;
	Node0x1a911a0 -> Node0x1a91210;
	Node0x1a90e90 -> Node0x1a91210;
	Node0x1a91210 -> Node0x1a91280;
	Node0x1a90f00 -> Node0x1a91280;
	Node0x1a91280 -> Node0x1a912f0;
	Node0x1a90aa0 -> Node0x1a912f0;
	Node0x1a912f0 -> Node0x1a2f9d8;
	Node0x1a2f9d8 -> Node0x1a91380;
	Node0x1a8f098 -> Node0x1a915d8;
	Node0x1a8eb58 -> Node0x1a91738;
}
