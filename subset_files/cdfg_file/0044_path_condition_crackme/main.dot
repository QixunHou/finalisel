digraph "DFG for'main' function" {
	Node0x1a7d358[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a7d3d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a7d468[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1a7d8c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a7d9a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1a7dac8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a7dd00[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1a7ddb8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a7ed28[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a7f3b0[shape=record, label="  %8 = sub i32 0, %6"];
	Node0x1a7f420[shape=record, label="  %9 = shl i32 %6, 1"];
	Node0x1a7f490[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x1a7f500[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1a7f570[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0x1a7f5e0[shape=record, label="  %13 = and i32 %6, %11"];
	Node0x1a7f650[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1a7f6c0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1a7f730[shape=record, label="  %16 = and i32 %7, %6"];
	Node0x1a7f7a0[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0x1a7f810[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x1a7f880[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1a7f8f0[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x1a7f960[shape=record, label="  %21 = xor i32 %6, -1"];
	Node0x1a7f9d0[shape=record, label="  %22 = and i32 %7, %21"];
	Node0x1a7fa40[shape=record, label="  %23 = mul i32 %22, 5"];
	Node0x1a7fab0[shape=record, label="  %24 = sub i32 %17, %16"];
	Node0x1a7fb20[shape=record, label="  %25 = mul i32 %24, 3"];
	Node0x1a7fb90[shape=record, label="  %26 = sub i32 2, %7"];
	Node0x1a7fc00[shape=record, label="  %27 = add i32 %26, %11"];
	Node0x1a7fc70[shape=record, label="  %28 = sub i32 %27, %10"];
	Node0x1a7fce0[shape=record, label="  %29 = sub i32 %28, %12"];
	Node0x1a7fd50[shape=record, label="  %30 = add i32 %29, %16"];
	Node0x1a7fdc0[shape=record, label="  %31 = sub i32 %30, %18"];
	Node0x1a7fe30[shape=record, label="  %32 = add i32 %31, %23"];
	Node0x1a7fea0[shape=record, label="  %33 = add i32 %32, %14"];
	Node0x1a7ff10[shape=record, label="  %34 = add i32 %33, %15"];
	Node0x1a7ff80[shape=record, label="  %35 = sub i32 %34, %20"];
	Node0x1a7fff0[shape=record, label="  %36 = add i32 %35, %25"];
	Node0x1a80060[shape=record, label="  %37 = icmp eq i32 %36, %8"];
	Node0x1a1d9d8[shape=record, label="  %38 = select i1 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a800f0[shape=record, label="  %39 = call i32 @puts(i8* nonnull dereferenceable(1) %38) #5"];
	Node0x1a80348[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a804a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a80568[shape=record, label="  ret i32 0"];
	Node0x1a7d358 -> Node0x1a7d3d8;
	Node0x1a7d3d8 -> Node0x1a7d468;
	Node0x1a7d468 -> Node0x1a7d8c8;
	Node0x1a7d8c8 -> Node0x1a7d9a8;
	Node0x1a7d9a8 -> Node0x1a7dac8;
	Node0x1a7dac8 -> Node0x1a7dd00;
	Node0x1a7dd00 -> Node0x1a7ddb8;
	Node0x1a7ddb8 -> Node0x1a7ed28;
	Node0x1a7ed28 -> Node0x1a7f3b0;
	Node0x1a7f3b0 -> Node0x1a7f420;
	Node0x1a7f420 -> Node0x1a7f490;
	Node0x1a7f490 -> Node0x1a7f500;
	Node0x1a7f500 -> Node0x1a7f570;
	Node0x1a7f570 -> Node0x1a7f5e0;
	Node0x1a7f5e0 -> Node0x1a7f650;
	Node0x1a7f650 -> Node0x1a7f6c0;
	Node0x1a7f6c0 -> Node0x1a7f730;
	Node0x1a7f730 -> Node0x1a7f7a0;
	Node0x1a7f7a0 -> Node0x1a7f810;
	Node0x1a7f810 -> Node0x1a7f880;
	Node0x1a7f880 -> Node0x1a7f8f0;
	Node0x1a7f8f0 -> Node0x1a7f960;
	Node0x1a7f960 -> Node0x1a7f9d0;
	Node0x1a7f9d0 -> Node0x1a7fa40;
	Node0x1a7fa40 -> Node0x1a7fab0;
	Node0x1a7fab0 -> Node0x1a7fb20;
	Node0x1a7fb20 -> Node0x1a7fb90;
	Node0x1a7fb90 -> Node0x1a7fc00;
	Node0x1a7fc00 -> Node0x1a7fc70;
	Node0x1a7fc70 -> Node0x1a7fce0;
	Node0x1a7fce0 -> Node0x1a7fd50;
	Node0x1a7fd50 -> Node0x1a7fdc0;
	Node0x1a7fdc0 -> Node0x1a7fe30;
	Node0x1a7fe30 -> Node0x1a7fea0;
	Node0x1a7fea0 -> Node0x1a7ff10;
	Node0x1a7ff10 -> Node0x1a7ff80;
	Node0x1a7ff80 -> Node0x1a7fff0;
	Node0x1a7fff0 -> Node0x1a80060;
	Node0x1a80060 -> Node0x1a1d9d8;
	Node0x1a1d9d8 -> Node0x1a800f0;
	Node0x1a800f0 -> Node0x1a80348;
	Node0x1a80348 -> Node0x1a804a8;
	Node0x1a804a8 -> Node0x1a80568;
edge [color=red]
	Node0x1a7d358 -> Node0x1a7d468;
	Node0x1a7d468 -> Node0x1a7d8c8;
	Node0x1a7d3d8 -> Node0x1a7d9a8;
	Node0x1a7d9a8 -> Node0x1a7dac8;
	Node0x1a7d358 -> Node0x1a7dd00;
	Node0x1a7d3d8 -> Node0x1a7dd00;
	Node0x1a7d358 -> Node0x1a7ddb8;
	Node0x1a7d3d8 -> Node0x1a7ed28;
	Node0x1a7ddb8 -> Node0x1a7f3b0;
	Node0x1a7ddb8 -> Node0x1a7f420;
	Node0x1a7f420 -> Node0x1a7f490;
	Node0x1a7ed28 -> Node0x1a7f500;
	Node0x1a7ed28 -> Node0x1a7f570;
	Node0x1a7ddb8 -> Node0x1a7f570;
	Node0x1a7ddb8 -> Node0x1a7f5e0;
	Node0x1a7f500 -> Node0x1a7f5e0;
	Node0x1a7f5e0 -> Node0x1a7f650;
	Node0x1a7f650 -> Node0x1a7f6c0;
	Node0x1a7ed28 -> Node0x1a7f730;
	Node0x1a7ddb8 -> Node0x1a7f730;
	Node0x1a7f570 -> Node0x1a7f7a0;
	Node0x1a7ed28 -> Node0x1a7f810;
	Node0x1a7ddb8 -> Node0x1a7f810;
	Node0x1a7f810 -> Node0x1a7f880;
	Node0x1a7f880 -> Node0x1a7f8f0;
	Node0x1a7ddb8 -> Node0x1a7f960;
	Node0x1a7ed28 -> Node0x1a7f9d0;
	Node0x1a7f960 -> Node0x1a7f9d0;
	Node0x1a7f9d0 -> Node0x1a7fa40;
	Node0x1a7f7a0 -> Node0x1a7fab0;
	Node0x1a7f730 -> Node0x1a7fab0;
	Node0x1a7fab0 -> Node0x1a7fb20;
	Node0x1a7ed28 -> Node0x1a7fb90;
	Node0x1a7fb90 -> Node0x1a7fc00;
	Node0x1a7f500 -> Node0x1a7fc00;
	Node0x1a7fc00 -> Node0x1a7fc70;
	Node0x1a7f490 -> Node0x1a7fc70;
	Node0x1a7fc70 -> Node0x1a7fce0;
	Node0x1a7f570 -> Node0x1a7fce0;
	Node0x1a7fce0 -> Node0x1a7fd50;
	Node0x1a7f730 -> Node0x1a7fd50;
	Node0x1a7fd50 -> Node0x1a7fdc0;
	Node0x1a7f810 -> Node0x1a7fdc0;
	Node0x1a7fdc0 -> Node0x1a7fe30;
	Node0x1a7fa40 -> Node0x1a7fe30;
	Node0x1a7fe30 -> Node0x1a7fea0;
	Node0x1a7f650 -> Node0x1a7fea0;
	Node0x1a7fea0 -> Node0x1a7ff10;
	Node0x1a7f6c0 -> Node0x1a7ff10;
	Node0x1a7ff10 -> Node0x1a7ff80;
	Node0x1a7f8f0 -> Node0x1a7ff80;
	Node0x1a7ff80 -> Node0x1a7fff0;
	Node0x1a7fb20 -> Node0x1a7fff0;
	Node0x1a7fff0 -> Node0x1a80060;
	Node0x1a7f3b0 -> Node0x1a80060;
	Node0x1a80060 -> Node0x1a1d9d8;
	Node0x1a1d9d8 -> Node0x1a800f0;
	Node0x1a7d9a8 -> Node0x1a80348;
	Node0x1a7d468 -> Node0x1a804a8;
}
