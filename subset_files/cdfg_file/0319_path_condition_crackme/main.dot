digraph "DFG for'main' function" {
	Node0x81fe98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x81ff48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x81ffd8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x820438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x820518[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x820638[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x820870[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x820928[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x821898[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x821f20[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x821f90[shape=record, label="  %9 = xor i32 %7, %6"];
	Node0x822000[shape=record, label="  %10 = add i32 %9, %8"];
	Node0x822070[shape=record, label="  %11 = or i32 %6, %8"];
	Node0x8220e0[shape=record, label="  %12 = shl i32 %6, 2"];
	Node0x822150[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x8221c0[shape=record, label="  %14 = and i32 %6, %8"];
	Node0x822230[shape=record, label="  %15 = and i32 %7, %6"];
	Node0x8222a0[shape=record, label="  %16 = shl i32 %13, 2"];
	Node0x822310[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x822380[shape=record, label="  %18 = shl i32 %11, 2"];
	Node0x8223f0[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0x822460[shape=record, label="  %20 = shl i32 %14, 3"];
	Node0x8224d0[shape=record, label="  %21 = mul i32 %15, 6"];
	Node0x822540[shape=record, label="  %22 = add i32 %7, 4"];
	Node0x8225b0[shape=record, label="  %23 = sub i32 %22, %12"];
	Node0x822620[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x822690[shape=record, label="  %25 = add i32 %24, %9"];
	Node0x822700[shape=record, label="  %26 = sub i32 %25, %13"];
	Node0x822770[shape=record, label="  %27 = add i32 %26, %14"];
	Node0x8227e0[shape=record, label="  %28 = add i32 %27, %15"];
	Node0x822850[shape=record, label="  %29 = add i32 %28, %20"];
	Node0x8228c0[shape=record, label="  %30 = add i32 %29, %21"];
	Node0x822930[shape=record, label="  %31 = add i32 %30, %17"];
	Node0x8229a0[shape=record, label="  %32 = add i32 %31, %19"];
	Node0x822c20[shape=record, label="  %33 = icmp eq i32 %10, %32"];
	Node0x7c09d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x822cb0[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x822f08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x823068[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x823128[shape=record, label="  ret i32 0"];
	Node0x81fe98 -> Node0x81ff48;
	Node0x81ff48 -> Node0x81ffd8;
	Node0x81ffd8 -> Node0x820438;
	Node0x820438 -> Node0x820518;
	Node0x820518 -> Node0x820638;
	Node0x820638 -> Node0x820870;
	Node0x820870 -> Node0x820928;
	Node0x820928 -> Node0x821898;
	Node0x821898 -> Node0x821f20;
	Node0x821f20 -> Node0x821f90;
	Node0x821f90 -> Node0x822000;
	Node0x822000 -> Node0x822070;
	Node0x822070 -> Node0x8220e0;
	Node0x8220e0 -> Node0x822150;
	Node0x822150 -> Node0x8221c0;
	Node0x8221c0 -> Node0x822230;
	Node0x822230 -> Node0x8222a0;
	Node0x8222a0 -> Node0x822310;
	Node0x822310 -> Node0x822380;
	Node0x822380 -> Node0x8223f0;
	Node0x8223f0 -> Node0x822460;
	Node0x822460 -> Node0x8224d0;
	Node0x8224d0 -> Node0x822540;
	Node0x822540 -> Node0x8225b0;
	Node0x8225b0 -> Node0x822620;
	Node0x822620 -> Node0x822690;
	Node0x822690 -> Node0x822700;
	Node0x822700 -> Node0x822770;
	Node0x822770 -> Node0x8227e0;
	Node0x8227e0 -> Node0x822850;
	Node0x822850 -> Node0x8228c0;
	Node0x8228c0 -> Node0x822930;
	Node0x822930 -> Node0x8229a0;
	Node0x8229a0 -> Node0x822c20;
	Node0x822c20 -> Node0x7c09d8;
	Node0x7c09d8 -> Node0x822cb0;
	Node0x822cb0 -> Node0x822f08;
	Node0x822f08 -> Node0x823068;
	Node0x823068 -> Node0x823128;
edge [color=red]
	Node0x81fe98 -> Node0x81ffd8;
	Node0x81ffd8 -> Node0x820438;
	Node0x81ff48 -> Node0x820518;
	Node0x820518 -> Node0x820638;
	Node0x81fe98 -> Node0x820870;
	Node0x81ff48 -> Node0x820870;
	Node0x81fe98 -> Node0x820928;
	Node0x81ff48 -> Node0x821898;
	Node0x821898 -> Node0x821f20;
	Node0x821898 -> Node0x821f90;
	Node0x820928 -> Node0x821f90;
	Node0x821f90 -> Node0x822000;
	Node0x821f20 -> Node0x822000;
	Node0x820928 -> Node0x822070;
	Node0x821f20 -> Node0x822070;
	Node0x820928 -> Node0x8220e0;
	Node0x821898 -> Node0x822150;
	Node0x820928 -> Node0x822150;
	Node0x820928 -> Node0x8221c0;
	Node0x821f20 -> Node0x8221c0;
	Node0x821898 -> Node0x822230;
	Node0x820928 -> Node0x822230;
	Node0x822150 -> Node0x8222a0;
	Node0x8222a0 -> Node0x822310;
	Node0x822070 -> Node0x822380;
	Node0x822380 -> Node0x8223f0;
	Node0x8221c0 -> Node0x822460;
	Node0x822230 -> Node0x8224d0;
	Node0x821898 -> Node0x822540;
	Node0x822540 -> Node0x8225b0;
	Node0x8220e0 -> Node0x8225b0;
	Node0x8225b0 -> Node0x822620;
	Node0x822070 -> Node0x822620;
	Node0x822620 -> Node0x822690;
	Node0x821f90 -> Node0x822690;
	Node0x822690 -> Node0x822700;
	Node0x822150 -> Node0x822700;
	Node0x822700 -> Node0x822770;
	Node0x8221c0 -> Node0x822770;
	Node0x822770 -> Node0x8227e0;
	Node0x822230 -> Node0x8227e0;
	Node0x8227e0 -> Node0x822850;
	Node0x822460 -> Node0x822850;
	Node0x822850 -> Node0x8228c0;
	Node0x8224d0 -> Node0x8228c0;
	Node0x8228c0 -> Node0x822930;
	Node0x822310 -> Node0x822930;
	Node0x822930 -> Node0x8229a0;
	Node0x8223f0 -> Node0x8229a0;
	Node0x822000 -> Node0x822c20;
	Node0x8229a0 -> Node0x822c20;
	Node0x822c20 -> Node0x7c09d8;
	Node0x7c09d8 -> Node0x822cb0;
	Node0x820518 -> Node0x822f08;
	Node0x81ffd8 -> Node0x823068;
}
