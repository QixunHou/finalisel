digraph "DFG for'main' function" {
	Node0x1153fc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1154048[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11540d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1154138[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x11545b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1154698[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1154798[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1154858[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1154908[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1154b68[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1154c28[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1155b98[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1155bf8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1155cf0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1156a78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1156bb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1156cc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1156d88[shape=record, label="  ret i32 0"];
	Node0x1153fc8 -> Node0x1154048;
	Node0x1154048 -> Node0x11540d8;
	Node0x11540d8 -> Node0x1154138;
	Node0x1154138 -> Node0x11545b8;
	Node0x11545b8 -> Node0x1154698;
	Node0x1154698 -> Node0x1154798;
	Node0x1154798 -> Node0x1154858;
	Node0x1154858 -> Node0x1154908;
	Node0x1154908 -> Node0x1154b68;
	Node0x1154b68 -> Node0x1154c28;
	Node0x1154c28 -> Node0x1155b98;
	Node0x1155b98 -> Node0x1155bf8;
	Node0x1155bf8 -> Node0x1155cf0;
	Node0x1155cf0 -> Node0x1156a78;
	Node0x1156a78 -> Node0x1156bb8;
	Node0x1156bb8 -> Node0x1156cc8;
	Node0x1156cc8 -> Node0x1156d88;
edge [color=red]
	Node0x1153fc8 -> Node0x1154138;
	Node0x1154138 -> Node0x11545b8;
	Node0x1154048 -> Node0x1154698;
	Node0x1154698 -> Node0x1154798;
	Node0x11540d8 -> Node0x1154858;
	Node0x1154858 -> Node0x1154908;
	Node0x1153fc8 -> Node0x1154b68;
	Node0x1154048 -> Node0x1154b68;
	Node0x11540d8 -> Node0x1154b68;
	Node0x1153fc8 -> Node0x1154c28;
	Node0x1154048 -> Node0x1155b98;
	Node0x11540d8 -> Node0x1155bf8;
	Node0x1154c28 -> Node0x1155cf0;
	Node0x1155b98 -> Node0x1155cf0;
	Node0x1155bf8 -> Node0x1155cf0;
	Node0x1154858 -> Node0x1156a78;
	Node0x1154698 -> Node0x1156bb8;
	Node0x1154138 -> Node0x1156cc8;
}
