; ModuleID = '../.././c_source_file/0473_path_condition_crackme.c'
source_filename = "../.././c_source_file/0473_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %2, -1
  %5 = or i32 %4, %0
  %6 = xor i32 %5, -1
  %7 = xor i32 %1, %0
  %8 = or i32 %7, %6
  %9 = xor i32 %1, -1
  %10 = or i32 %9, %0
  %11 = xor i32 %10, -1
  %12 = or i32 %11, %2
  %13 = and i32 %4, %1
  %14 = and i32 %9, %0
  %15 = xor i32 %14, -1
  %16 = and i32 %15, %2
  %17 = xor i32 %7, -1
  %18 = or i32 %6, %17
  %19 = and i32 %5, %1
  %20 = shl i32 %19, 1
  %21 = and i32 %2, %0
  %22 = or i32 %2, %1
  %23 = xor i32 %22, -1
  %24 = or i32 %21, %23
  %25 = shl i32 %24, 2
  %26 = and i32 %1, %0
  %27 = xor i32 %2, %0
  %28 = xor i32 %27, -1
  %29 = or i32 %26, %28
  %30 = and i32 %4, %0
  %31 = xor i32 %30, -1
  %32 = and i32 %7, %31
  %33 = xor i32 %2, %1
  %34 = xor i32 %33, -1
  %35 = or i32 %26, %34
  %36 = xor i32 %0, -1
  %37 = or i32 %22, %36
  %38 = and i32 %2, %1
  %39 = and i32 %38, %0
  %40 = and i32 %33, %36
  %41 = xor i32 %39, -1
  %42 = xor i32 %40, %41
  %43 = or i32 %14, %28
  %44 = xor i32 %38, -1
  %45 = xor i32 %14, %44
  %46 = shl i32 %45, 1
  %47 = xor i32 %33, %0
  %48 = xor i32 %47, -1
  %49 = or i32 %39, %48
  %50 = and i32 %5, %9
  %51 = and i32 %33, %15
  %52 = and i32 %9, %2
  %53 = and i32 %52, %36
  %54 = or i32 %33, %36
  %55 = xor i32 %53, %54
  %56 = shl i32 %55, 1
  %57 = xor i32 %5, %26
  %58 = or i32 %21, %11
  %59 = or i32 %1, %0
  %60 = xor i32 %59, -1
  %61 = xor i32 %60, %2
  %62 = or i32 %4, %1
  %63 = xor i32 %62, %0
  %64 = and i32 %22, %36
  %65 = or i32 %39, %64
  %66 = or i32 %2, %0
  %67 = xor i32 %66, -1
  %68 = and i32 %52, %0
  %69 = or i32 %33, %0
  %70 = xor i32 %69, -1
  %71 = or i32 %68, %70
  %72 = or i32 %30, %7
  %73 = or i32 %13, %36
  %74 = or i32 %27, %1
  %75 = and i32 %27, %9
  %76 = and i32 %4, %15
  %77 = or i32 %33, %14
  %78 = xor i32 %23, %0
  %79 = or i32 %62, %0
  %80 = and i32 %34, %15
  %81 = shl i32 %80, 1
  %82 = xor i32 %34, %0
  %83 = xor i32 %66, %26
  %84 = and i32 %31, %1
  %85 = and i32 %27, %17
  %86 = or i32 %21, %17
  %87 = shl i32 %86, 1
  %88 = and i32 %22, %0
  %89 = and i32 %28, %17
  %90 = or i32 %60, %2
  %91 = xor i32 %6, %1
  %92 = shl i32 %91, 1
  %93 = or i32 %26, %2
  %94 = or i32 %26, %6
  %95 = shl i32 %94, 1
  %96 = or i32 %14, %4
  %97 = or i32 %38, %36
  %98 = and i32 %66, %9
  %99 = or i32 %34, %60
  %100 = add i32 %10, 1
  %101 = or i32 %28, %17
  %102 = or i32 %27, %11
  %103 = xor i32 %13, -1
  %104 = or i32 %103, %36
  %105 = xor i32 %26, -1
  %106 = xor i32 %10, %2
  %107 = or i32 %26, %67
  %108 = or i32 %4, %60
  %109 = and i32 %28, %9
  %110 = add i32 %38, 1
  %111 = xor i32 %66, %1
  %112 = or i32 %27, %14
  %113 = and i32 %38, %36
  %114 = and i32 %33, %0
  %115 = xor i32 %114, 1073741823
  %116 = xor i32 %115, %113
  %117 = shl i32 %116, 2
  %118 = and i32 %5, %7
  %119 = xor i32 %62, -1
  %120 = or i32 %26, %119
  %121 = and i32 %10, %2
  %122 = and i32 %59, %4
  %123 = xor i32 %59, %2
  %124 = and i32 %27, %10
  %125 = xor i32 %21, %10
  %126 = and i32 %103, %36
  %127 = xor i32 %13, %0
  %128 = or i32 %9, %2
  %129 = and i32 %128, %0
  %130 = xor i32 %129, 2147483647
  %131 = xor i32 %130, %53
  %132 = shl i32 %131, 1
  %133 = xor i32 %22, %0
  %134 = and i32 %27, %59
  %135 = or i32 %119, %36
  %136 = xor i32 %21, %103
  %137 = and i32 %33, %10
  %138 = shl i32 %137, 1
  %139 = xor i32 %31, %1
  %140 = add i32 %2, 1
  %141 = and i32 %66, %1
  %142 = or i32 %21, %9
  %143 = or i32 %28, %9
  %144 = shl i32 %143, 2
  %145 = or i32 %103, %0
  %146 = add i32 %13, 1
  %147 = xor i32 %128, %0
  %148 = or i32 %68, %147
  %149 = xor i32 %21, %1
  %150 = shl i32 %119, 1
  %151 = and i32 %66, %17
  %152 = or i32 %28, %11
  %153 = xor i32 %30, %1
  %154 = and i32 %28, %1
  %155 = xor i32 %119, %0
  %156 = or i32 %13, %0
  %157 = xor i32 %26, %2
  %158 = shl i32 %157, 1
  %159 = or i32 %28, %1
  %160 = shl i32 %159, 1
  %161 = xor i32 %21, -1
  %162 = xor i32 %161, %1
  %163 = and i32 %161, %9
  %164 = or i32 %21, %60
  %165 = or i32 %23, %36
  %166 = or i32 %7, %28
  %167 = xor i32 %14, %103
  %168 = and i32 %33, %105
  %169 = and i32 %62, %0
  %170 = or i32 %34, %36
  %171 = or i32 %14, %34
  %172 = shl i32 %114, 1
  %173 = xor i32 %11, %2
  %174 = or i32 %30, %119
  %175 = and i32 %44, %0
  %176 = and i32 %10, %34
  %177 = xor i32 %21, %59
  %178 = or i32 %30, %38
  %179 = or i32 %13, %14
  %180 = and i32 %4, %17
  %181 = xor i32 %21, %22
  %182 = or i32 %67, %17
  %183 = or i32 %26, %4
  %184 = or i32 %7, %4
  %185 = and i32 %44, %36
  %186 = shl i32 %185, 1
  %187 = or i32 %33, %11
  %188 = or i32 %44, %0
  %189 = xor i32 %30, %44
  %190 = or i32 %119, %0
  %191 = or i32 %30, %1
  %192 = or i32 %39, %133
  %193 = or i32 %26, %23
  %194 = xor i32 %38, %0
  %195 = xor i32 %62, %26
  %196 = or i32 %39, %40
  %197 = and i32 %66, %7
  %198 = or i32 %34, %11
  %199 = or i32 %23, %0
  %200 = and i32 %27, %105
  %201 = xor i32 %133, %41
  %202 = and i32 %31, %9
  %203 = xor i32 %68, %69
  %204 = shl i32 %203, 1
  %205 = and i32 %7, %4
  %206 = and i32 %27, %15
  %207 = or i32 %28, %60
  %208 = shl i32 %207, 2
  %209 = xor i32 %147, 2147483647
  %210 = xor i32 %209, %68
  %211 = shl i32 %210, 1
  %212 = and i32 %59, %28
  %213 = xor i32 %39, %47
  %214 = xor i32 %103, %0
  %215 = and i32 %128, %36
  %216 = or i32 %68, %215
  %217 = and i32 %31, %17
  %218 = or i32 %67, %9
  %219 = or i32 %7, %67
  %220 = shl i32 %219, 2
  %221 = or i32 %14, %2
  %222 = or i32 %30, %9
  %223 = add i32 %30, 1
  %224 = and i32 %161, %17
  %225 = shl i32 %224, 2
  %226 = or i32 %27, %60
  %227 = or i32 %22, %0
  %228 = or i32 %27, %26
  %229 = xor i32 %15, %2
  %230 = or i32 %21, %13
  %231 = shl i32 %230, 1
  %232 = or i32 %27, %17
  %233 = shl i32 %232, 1
  %234 = xor i32 %105, %2
  %235 = or i32 %34, %0
  %236 = or i32 %38, %14
  %237 = and i32 %7, %28
  %238 = and i32 %7, %2
  %239 = or i32 %17, %2
  %240 = or i32 %113, %114
  %241 = and i32 %27, %7
  %242 = and i32 %33, %59
  %243 = or i32 %33, %60
  %244 = and i32 %161, %1
  %245 = xor i32 %5, %1
  %246 = xor i32 %64, 2147483647
  %247 = xor i32 %246, %39
  %248 = shl i32 %247, 1
  %249 = and i32 %10, %4
  %250 = xor i32 %68, %48
  %251 = xor i32 %88, -1
  %252 = xor i32 %113, %251
  %253 = or i32 %6, %1
  %254 = and i32 %62, %36
  %255 = or i32 %38, %0
  %256 = xor i32 %215, -1
  %257 = xor i32 %68, %256
  %258 = and i32 %27, %1
  %259 = or i32 %21, %7
  %260 = add i32 %5, 1
  %261 = or i32 %4, %11
  %262 = or i32 %44, %36
  %263 = and i32 %28, %15
  %264 = or i32 %27, %7
  %265 = or i32 %30, %17
  %266 = or i32 %21, %1
  %267 = or i32 %7, %2
  %268 = or i32 %68, %47
  %269 = and i32 %17, %2
  %270 = or i32 %6, %9
  %271 = and i32 %4, %105
  %272 = and i32 %59, %2
  %273 = and i32 %34, %105
  %274 = or i32 %53, %129
  %275 = and i32 %105, %2
  %276 = or i32 %62, %36
  %277 = xor i32 %22, %26
  %278 = xor i32 %54, 2147483647
  %279 = or i32 %278, %53
  %280 = shl i32 %279, 1
  %281 = shl i32 %161, 1
  %282 = and i32 %34, %0
  %283 = and i32 %7, %161
  %284 = or i32 %33, %26
  %285 = xor i32 %67, %1
  %286 = shl i32 %285, 1
  %287 = and i32 %59, %34
  %288 = and i32 %34, %36
  %289 = shl i32 %288, 1
  %290 = and i32 %10, %28
  %291 = and i32 %103, %0
  %292 = and i32 %28, %105
  %293 = or i32 %4, %17
  %294 = xor i32 %30, %62
  %295 = xor i32 %44, %0
  %296 = and i32 %23, %36
  %297 = mul i32 %296, 7
  %298 = and i32 %13, %36
  %299 = shl i32 %298, 2
  %300 = and i32 %23, %0
  %301 = and i32 %13, %0
  %302 = and i32 %119, %36
  %303 = mul i32 %302, 21
  %304 = and i32 %119, %0
  %305 = mul i32 %304, 23
  %306 = shl i32 %39, 3
  %307 = sub i32 %1, %10
  %308 = add i32 %307, %5
  %309 = sub i32 %308, %30
  %310 = add i32 %309, %191
  %311 = add i32 %310, %273
  %312 = mul i32 %311, 5
  %313 = add i32 %154, %13
  %314 = sub i32 %313, %178
  %315 = add i32 %314, %141
  %316 = sub i32 %315, %139
  %317 = mul i32 %316, 3
  %318 = sub i32 %301, %300
  %319 = mul i32 %318, 15
  %320 = sub i32 -3, %14
  %321 = add i32 %320, %17
  %322 = add i32 %321, %293
  %323 = add i32 %322, %62
  %324 = add i32 %323, %27
  %325 = add i32 %324, %249
  %326 = add i32 %325, %23
  %327 = add i32 %326, %121
  %328 = sub i32 %327, %12
  %329 = add i32 %328, %113
  %330 = add i32 %329, %287
  %331 = add i32 %330, %276
  %332 = add i32 %331, %244
  %333 = add i32 %332, %243
  %334 = add i32 %333, %241
  %335 = add i32 %334, %235
  %336 = add i32 %335, %202
  %337 = add i32 %336, %168
  %338 = add i32 %337, %149
  %339 = add i32 %338, %40
  %340 = add i32 %339, %57
  %341 = add i32 %340, %216
  %342 = add i32 %341, %268
  %343 = shl i32 %342, 1
  %344 = add i32 %1, 2
  %345 = add i32 %344, %7
  %346 = add i32 %345, %100
  %347 = add i32 %346, %14
  %348 = add i32 %347, %140
  %349 = add i32 %348, %60
  %350 = sub i32 %349, %2
  %351 = sub i32 %350, %59
  %352 = sub i32 %351, %16
  %353 = sub i32 %352, %61
  %354 = sub i32 %353, %21
  %355 = sub i32 %354, %76
  %356 = add i32 %355, %34
  %357 = add i32 %356, %90
  %358 = sub i32 %357, %93
  %359 = add i32 %358, %96
  %360 = add i32 %359, %106
  %361 = add i32 %360, %108
  %362 = add i32 %361, %110
  %363 = add i32 %362, %122
  %364 = sub i32 %363, %123
  %365 = add i32 %364, %146
  %366 = sub i32 %365, %173
  %367 = sub i32 %366, %180
  %368 = add i32 %367, %183
  %369 = sub i32 %368, %184
  %370 = sub i32 %369, %22
  %371 = add i32 %370, %205
  %372 = sub i32 %371, %38
  %373 = sub i32 %372, %221
  %374 = add i32 %373, %223
  %375 = add i32 %374, %229
  %376 = add i32 %375, %234
  %377 = sub i32 %376, %238
  %378 = sub i32 %377, %239
  %379 = add i32 %378, %260
  %380 = add i32 %379, %261
  %381 = sub i32 %380, %267
  %382 = sub i32 %381, %269
  %383 = add i32 %382, %271
  %384 = sub i32 %383, %33
  %385 = sub i32 %384, %272
  %386 = add i32 %385, %28
  %387 = add i32 %386, %275
  %388 = add i32 %387, %18
  %389 = add i32 %388, %29
  %390 = sub i32 %389, %32
  %391 = sub i32 %390, %35
  %392 = sub i32 %391, %37
  %393 = sub i32 %392, %43
  %394 = add i32 %393, %50
  %395 = sub i32 %394, %51
  %396 = add i32 %395, %58
  %397 = sub i32 %396, %63
  %398 = sub i32 %397, %72
  %399 = sub i32 %398, %73
  %400 = sub i32 %399, %74
  %401 = add i32 %400, %75
  %402 = sub i32 %401, %77
  %403 = sub i32 %402, %78
  %404 = add i32 %403, %79
  %405 = sub i32 %404, %82
  %406 = add i32 %405, %69
  %407 = add i32 %406, %83
  %408 = sub i32 %407, %84
  %409 = sub i32 %408, %85
  %410 = add i32 %409, %88
  %411 = sub i32 %410, %89
  %412 = add i32 %411, %97
  %413 = sub i32 %412, %98
  %414 = add i32 %413, %99
  %415 = add i32 %414, %101
  %416 = add i32 %415, %102
  %417 = add i32 %416, %104
  %418 = sub i32 %417, %107
  %419 = add i32 %418, %109
  %420 = add i32 %419, %111
  %421 = sub i32 %420, %112
  %422 = add i32 %421, %118
  %423 = sub i32 %422, %120
  %424 = add i32 %423, %124
  %425 = add i32 %424, %125
  %426 = sub i32 %425, %126
  %427 = add i32 %426, %127
  %428 = add i32 %427, %133
  %429 = add i32 %428, %134
  %430 = sub i32 %429, %135
  %431 = add i32 %430, %136
  %432 = sub i32 %431, %142
  %433 = sub i32 %432, %145
  %434 = sub i32 %433, %54
  %435 = sub i32 %434, %150
  %436 = sub i32 %435, %151
  %437 = sub i32 %436, %152
  %438 = sub i32 %437, %153
  %439 = add i32 %438, %155
  %440 = sub i32 %439, %156
  %441 = sub i32 %440, %158
  %442 = add i32 %441, %162
  %443 = sub i32 %442, %64
  %444 = add i32 %443, %163
  %445 = sub i32 %444, %164
  %446 = add i32 %445, %165
  %447 = add i32 %446, %166
  %448 = add i32 %447, %167
  %449 = add i32 %448, %169
  %450 = sub i32 %449, %170
  %451 = add i32 %450, %171
  %452 = sub i32 %451, %174
  %453 = add i32 %452, %175
  %454 = sub i32 %453, %176
  %455 = add i32 %454, %177
  %456 = sub i32 %455, %179
  %457 = sub i32 %456, %181
  %458 = add i32 %457, %182
  %459 = sub i32 %458, %187
  %460 = add i32 %459, %188
  %461 = sub i32 %460, %189
  %462 = add i32 %461, %190
  %463 = sub i32 %462, %193
  %464 = sub i32 %463, %194
  %465 = sub i32 %464, %195
  %466 = add i32 %465, %197
  %467 = add i32 %466, %198
  %468 = add i32 %467, %199
  %469 = add i32 %468, %200
  %470 = sub i32 %469, %206
  %471 = sub i32 %470, %212
  %472 = add i32 %471, %214
  %473 = add i32 %472, %217
  %474 = sub i32 %473, %218
  %475 = add i32 %474, %222
  %476 = add i32 %475, %226
  %477 = add i32 %476, %227
  %478 = sub i32 %477, %228
  %479 = add i32 %478, %236
  %480 = add i32 %479, %237
  %481 = sub i32 %480, %242
  %482 = add i32 %481, %245
  %483 = add i32 %482, %253
  %484 = add i32 %483, %254
  %485 = sub i32 %484, %255
  %486 = sub i32 %485, %258
  %487 = sub i32 %486, %259
  %488 = add i32 %487, %262
  %489 = sub i32 %488, %263
  %490 = sub i32 %489, %264
  %491 = add i32 %490, %265
  %492 = add i32 %491, %266
  %493 = add i32 %492, %47
  %494 = sub i32 %493, %270
  %495 = add i32 %494, %277
  %496 = sub i32 %495, %281
  %497 = sub i32 %496, %282
  %498 = sub i32 %497, %283
  %499 = sub i32 %498, %284
  %500 = sub i32 %499, %290
  %501 = add i32 %500, %291
  %502 = sub i32 %501, %292
  %503 = sub i32 %502, %294
  %504 = sub i32 %503, %295
  %505 = sub i32 %504, %20
  %506 = sub i32 %505, %25
  %507 = sub i32 %506, %42
  %508 = sub i32 %507, %46
  %509 = add i32 %508, %49
  %510 = sub i32 %509, %65
  %511 = sub i32 %510, %71
  %512 = sub i32 %511, %81
  %513 = sub i32 %512, %87
  %514 = sub i32 %513, %92
  %515 = sub i32 %514, %95
  %516 = sub i32 %515, %138
  %517 = sub i32 %516, %144
  %518 = add i32 %517, %148
  %519 = sub i32 %518, %160
  %520 = sub i32 %519, %172
  %521 = sub i32 %520, %186
  %522 = add i32 %521, %192
  %523 = add i32 %522, %196
  %524 = add i32 %523, %201
  %525 = add i32 %524, %208
  %526 = sub i32 %525, %213
  %527 = sub i32 %526, %220
  %528 = sub i32 %527, %225
  %529 = sub i32 %528, %231
  %530 = sub i32 %529, %233
  %531 = add i32 %530, %240
  %532 = sub i32 %531, %250
  %533 = add i32 %532, %252
  %534 = sub i32 %533, %257
  %535 = add i32 %534, %274
  %536 = sub i32 %535, %286
  %537 = sub i32 %536, %289
  %538 = add i32 %537, %297
  %539 = sub i32 %538, %299
  %540 = add i32 %539, %303
  %541 = add i32 %540, %305
  %542 = add i32 %541, %306
  %543 = sub i32 %542, %56
  %544 = sub i32 %543, %204
  %545 = add i32 %544, %319
  %546 = sub i32 %545, %117
  %547 = sub i32 %546, %132
  %548 = sub i32 %547, %211
  %549 = sub i32 %548, %248
  %550 = sub i32 %549, %280
  %551 = add i32 %550, %317
  %552 = add i32 %551, %312
  %553 = add i32 %552, %343
  %554 = icmp eq i32 %8, %553
  %555 = select i1 %554, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %556 = tail call i32 @puts(i8* nonnull dereferenceable(1) %555)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
