digraph "DFG for'main' function" {
	Node0x1c85eb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c85f38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c85fc8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c86028[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1c860d8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1c86508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c865e8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1c866e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c867a8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1c86858[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c86918[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1c869c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c80800[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1c86bc8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c87b38[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c881a8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c88208[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1c88318[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1c88578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1c886d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1c887e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c888f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c889b8[shape=record, label="  ret i32 0"];
	Node0x1c85eb8 -> Node0x1c85f38;
	Node0x1c85f38 -> Node0x1c85fc8;
	Node0x1c85fc8 -> Node0x1c86028;
	Node0x1c86028 -> Node0x1c860d8;
	Node0x1c860d8 -> Node0x1c86508;
	Node0x1c86508 -> Node0x1c865e8;
	Node0x1c865e8 -> Node0x1c866e8;
	Node0x1c866e8 -> Node0x1c867a8;
	Node0x1c867a8 -> Node0x1c86858;
	Node0x1c86858 -> Node0x1c86918;
	Node0x1c86918 -> Node0x1c869c8;
	Node0x1c869c8 -> Node0x1c80800;
	Node0x1c80800 -> Node0x1c86bc8;
	Node0x1c86bc8 -> Node0x1c87b38;
	Node0x1c87b38 -> Node0x1c881a8;
	Node0x1c881a8 -> Node0x1c88208;
	Node0x1c88208 -> Node0x1c88318;
	Node0x1c88318 -> Node0x1c88578;
	Node0x1c88578 -> Node0x1c886d8;
	Node0x1c886d8 -> Node0x1c887e8;
	Node0x1c887e8 -> Node0x1c888f8;
	Node0x1c888f8 -> Node0x1c889b8;
edge [color=red]
	Node0x1c85eb8 -> Node0x1c860d8;
	Node0x1c860d8 -> Node0x1c86508;
	Node0x1c85f38 -> Node0x1c865e8;
	Node0x1c865e8 -> Node0x1c866e8;
	Node0x1c85fc8 -> Node0x1c867a8;
	Node0x1c867a8 -> Node0x1c86858;
	Node0x1c86028 -> Node0x1c86918;
	Node0x1c86918 -> Node0x1c869c8;
	Node0x1c85eb8 -> Node0x1c80800;
	Node0x1c85f38 -> Node0x1c80800;
	Node0x1c85fc8 -> Node0x1c80800;
	Node0x1c86028 -> Node0x1c80800;
	Node0x1c85eb8 -> Node0x1c86bc8;
	Node0x1c85f38 -> Node0x1c87b38;
	Node0x1c85fc8 -> Node0x1c881a8;
	Node0x1c86028 -> Node0x1c88208;
	Node0x1c86bc8 -> Node0x1c88318;
	Node0x1c87b38 -> Node0x1c88318;
	Node0x1c881a8 -> Node0x1c88318;
	Node0x1c88208 -> Node0x1c88318;
	Node0x1c86918 -> Node0x1c88578;
	Node0x1c867a8 -> Node0x1c886d8;
	Node0x1c865e8 -> Node0x1c887e8;
	Node0x1c860d8 -> Node0x1c888f8;
}
