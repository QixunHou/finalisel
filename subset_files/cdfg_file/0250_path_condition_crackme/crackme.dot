digraph "DFG for'crackme' function" {
	Node0x1c837d0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x1c83840[shape=record, label="  %6 = or i32 %3, %0"];
	Node0x1c83ec0[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x1c83f30[shape=record, label="  %8 = or i32 %7, %3"];
	Node0x1c83fa0[shape=record, label="  %9 = add i32 %8, %6"];
	Node0x1c84040[shape=record, label="  %10 = shl i32 %9, 2"];
	Node0x1c840b0[shape=record, label="  %11 = add i32 %10, %5"];
	Node0x1c84120[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x1c84190[shape=record, label="  %13 = and i32 %12, %1"];
	Node0x1c84200[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1c842a0[shape=record, label="  %15 = mul i32 %14, -2"];
	Node0x1c84310[shape=record, label="  %16 = or i32 %12, %1"];
	Node0x1c843b0[shape=record, label="  %17 = shl i32 %2, 1"];
	Node0x1c84420[shape=record, label="  %18 = xor i32 %1, -1"];
	Node0x1c84490[shape=record, label="  %19 = and i32 %2, %1"];
	Node0x1c84500[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x1c84570[shape=record, label="  %21 = xor i32 %20, -2"];
	Node0x1c845e0[shape=record, label="  %22 = shl i32 %5, 1"];
	Node0x1c84650[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x1c846c0[shape=record, label="  %24 = shl i32 %16, 1"];
	Node0x1c84730[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x1c847a0[shape=record, label="  %26 = shl i32 %13, 1"];
	Node0x1c84810[shape=record, label="  %27 = shl i32 %19, 2"];
	Node0x1c84880[shape=record, label="  %28 = xor i32 %3, -1"];
	Node0x1c848f0[shape=record, label="  %29 = and i32 %7, %3"];
	Node0x1c84960[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x1c849d0[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x1c84a40[shape=record, label="  %32 = xor i32 %3, %0"];
	Node0x1c84cc0[shape=record, label="  %33 = xor i32 %6, -1"];
	Node0x1c84d60[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0x1c84dd0[shape=record, label="  %35 = xor i32 %8, -1"];
	Node0x1c84e70[shape=record, label="  %36 = mul i32 %35, 6"];
	Node0x1c84f10[shape=record, label="  %37 = mul i32 %29, 7"];
	Node0x1c84f80[shape=record, label="  %38 = and i32 %3, %0"];
	Node0x1c85020[shape=record, label="  %39 = mul i32 %38, 12"];
	Node0x1c85090[shape=record, label="  %40 = shl i32 %0, 1"];
	Node0x1c85100[shape=record, label="  %41 = sub i32 %18, %40"];
	Node0x1c85170[shape=record, label="  %42 = add i32 %41, %16"];
	Node0x1c851e0[shape=record, label="  %43 = sub i32 %42, %17"];
	Node0x1c85250[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x1c852c0[shape=record, label="  %45 = add i32 %44, %15"];
	Node0x1c85330[shape=record, label="  %46 = sub i32 %45, %26"];
	Node0x1c853a0[shape=record, label="  %47 = add i32 %46, %27"];
	Node0x1c85410[shape=record, label="  %48 = add i32 %47, %32"];
	Node0x1c85480[shape=record, label="  %49 = add i32 %48, %21"];
	Node0x1c854f0[shape=record, label="  %50 = sub i32 %49, %23"];
	Node0x1c85560[shape=record, label="  %51 = add i32 %50, %25"];
	Node0x1c855d0[shape=record, label="  %52 = add i32 %51, %34"];
	Node0x1c85640[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x1c856b0[shape=record, label="  %54 = add i32 %53, %37"];
	Node0x1c85720[shape=record, label="  %55 = add i32 %54, %39"];
	Node0x1c85790[shape=record, label="  %56 = sub i32 %55, %31"];
	Node0x1c85800[shape=record, label="  %57 = icmp eq i32 %11, %56"];
	Node0x1c24268[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c85ca0[shape=record, label="  %59 = tail call i32 @puts(i8* nonnull dereferenceable(1) %58)"];
	Node0x1c85cf0[shape=record, label="  ret void"];
	Node0x1c837d0 -> Node0x1c83840;
	Node0x1c83840 -> Node0x1c83ec0;
	Node0x1c83ec0 -> Node0x1c83f30;
	Node0x1c83f30 -> Node0x1c83fa0;
	Node0x1c83fa0 -> Node0x1c84040;
	Node0x1c84040 -> Node0x1c840b0;
	Node0x1c840b0 -> Node0x1c84120;
	Node0x1c84120 -> Node0x1c84190;
	Node0x1c84190 -> Node0x1c84200;
	Node0x1c84200 -> Node0x1c842a0;
	Node0x1c842a0 -> Node0x1c84310;
	Node0x1c84310 -> Node0x1c843b0;
	Node0x1c843b0 -> Node0x1c84420;
	Node0x1c84420 -> Node0x1c84490;
	Node0x1c84490 -> Node0x1c84500;
	Node0x1c84500 -> Node0x1c84570;
	Node0x1c84570 -> Node0x1c845e0;
	Node0x1c845e0 -> Node0x1c84650;
	Node0x1c84650 -> Node0x1c846c0;
	Node0x1c846c0 -> Node0x1c84730;
	Node0x1c84730 -> Node0x1c847a0;
	Node0x1c847a0 -> Node0x1c84810;
	Node0x1c84810 -> Node0x1c84880;
	Node0x1c84880 -> Node0x1c848f0;
	Node0x1c848f0 -> Node0x1c84960;
	Node0x1c84960 -> Node0x1c849d0;
	Node0x1c849d0 -> Node0x1c84a40;
	Node0x1c84a40 -> Node0x1c84cc0;
	Node0x1c84cc0 -> Node0x1c84d60;
	Node0x1c84d60 -> Node0x1c84dd0;
	Node0x1c84dd0 -> Node0x1c84e70;
	Node0x1c84e70 -> Node0x1c84f10;
	Node0x1c84f10 -> Node0x1c84f80;
	Node0x1c84f80 -> Node0x1c85020;
	Node0x1c85020 -> Node0x1c85090;
	Node0x1c85090 -> Node0x1c85100;
	Node0x1c85100 -> Node0x1c85170;
	Node0x1c85170 -> Node0x1c851e0;
	Node0x1c851e0 -> Node0x1c85250;
	Node0x1c85250 -> Node0x1c852c0;
	Node0x1c852c0 -> Node0x1c85330;
	Node0x1c85330 -> Node0x1c853a0;
	Node0x1c853a0 -> Node0x1c85410;
	Node0x1c85410 -> Node0x1c85480;
	Node0x1c85480 -> Node0x1c854f0;
	Node0x1c854f0 -> Node0x1c85560;
	Node0x1c85560 -> Node0x1c855d0;
	Node0x1c855d0 -> Node0x1c85640;
	Node0x1c85640 -> Node0x1c856b0;
	Node0x1c856b0 -> Node0x1c85720;
	Node0x1c85720 -> Node0x1c85790;
	Node0x1c85790 -> Node0x1c85800;
	Node0x1c85800 -> Node0x1c24268;
	Node0x1c24268 -> Node0x1c85ca0;
	Node0x1c85ca0 -> Node0x1c85cf0;
edge [color=red]
	Node0x1c83ec0 -> Node0x1c83f30;
	Node0x1c83f30 -> Node0x1c83fa0;
	Node0x1c83840 -> Node0x1c83fa0;
	Node0x1c83fa0 -> Node0x1c84040;
	Node0x1c84040 -> Node0x1c840b0;
	Node0x1c837d0 -> Node0x1c840b0;
	Node0x1c84120 -> Node0x1c84190;
	Node0x1c84190 -> Node0x1c84200;
	Node0x1c84200 -> Node0x1c842a0;
	Node0x1c84120 -> Node0x1c84310;
	Node0x1c84490 -> Node0x1c84500;
	Node0x1c84500 -> Node0x1c84570;
	Node0x1c837d0 -> Node0x1c845e0;
	Node0x1c845e0 -> Node0x1c84650;
	Node0x1c84310 -> Node0x1c846c0;
	Node0x1c846c0 -> Node0x1c84730;
	Node0x1c84190 -> Node0x1c847a0;
	Node0x1c84490 -> Node0x1c84810;
	Node0x1c83ec0 -> Node0x1c848f0;
	Node0x1c848f0 -> Node0x1c84960;
	Node0x1c84960 -> Node0x1c849d0;
	Node0x1c83840 -> Node0x1c84cc0;
	Node0x1c84cc0 -> Node0x1c84d60;
	Node0x1c83f30 -> Node0x1c84dd0;
	Node0x1c84dd0 -> Node0x1c84e70;
	Node0x1c848f0 -> Node0x1c84f10;
	Node0x1c84f80 -> Node0x1c85020;
	Node0x1c84420 -> Node0x1c85100;
	Node0x1c85090 -> Node0x1c85100;
	Node0x1c85100 -> Node0x1c85170;
	Node0x1c84310 -> Node0x1c85170;
	Node0x1c85170 -> Node0x1c851e0;
	Node0x1c843b0 -> Node0x1c851e0;
	Node0x1c851e0 -> Node0x1c85250;
	Node0x1c84880 -> Node0x1c85250;
	Node0x1c85250 -> Node0x1c852c0;
	Node0x1c842a0 -> Node0x1c852c0;
	Node0x1c852c0 -> Node0x1c85330;
	Node0x1c847a0 -> Node0x1c85330;
	Node0x1c85330 -> Node0x1c853a0;
	Node0x1c84810 -> Node0x1c853a0;
	Node0x1c853a0 -> Node0x1c85410;
	Node0x1c84a40 -> Node0x1c85410;
	Node0x1c85410 -> Node0x1c85480;
	Node0x1c84570 -> Node0x1c85480;
	Node0x1c85480 -> Node0x1c854f0;
	Node0x1c84650 -> Node0x1c854f0;
	Node0x1c854f0 -> Node0x1c85560;
	Node0x1c84730 -> Node0x1c85560;
	Node0x1c85560 -> Node0x1c855d0;
	Node0x1c84d60 -> Node0x1c855d0;
	Node0x1c855d0 -> Node0x1c85640;
	Node0x1c84e70 -> Node0x1c85640;
	Node0x1c85640 -> Node0x1c856b0;
	Node0x1c84f10 -> Node0x1c856b0;
	Node0x1c856b0 -> Node0x1c85720;
	Node0x1c85020 -> Node0x1c85720;
	Node0x1c85720 -> Node0x1c85790;
	Node0x1c849d0 -> Node0x1c85790;
	Node0x1c840b0 -> Node0x1c85800;
	Node0x1c85790 -> Node0x1c85800;
	Node0x1c85800 -> Node0x1c24268;
	Node0x1c24268 -> Node0x1c85ca0;
}
