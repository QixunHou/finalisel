digraph "DFG for'main' function" {
	Node0x1c2a868[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c2a8e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c2a978[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1c2a9d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1c2ae58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c2af38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1c2b038[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c2b0f8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1c2b1a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c2b408[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1c2b4c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c2b628[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c2b688[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1c2e740[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1c2e948[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1c2eaa8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1c2ebb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c2ec78[shape=record, label="  ret i32 0"];
	Node0x1c2a868 -> Node0x1c2a8e8;
	Node0x1c2a8e8 -> Node0x1c2a978;
	Node0x1c2a978 -> Node0x1c2a9d8;
	Node0x1c2a9d8 -> Node0x1c2ae58;
	Node0x1c2ae58 -> Node0x1c2af38;
	Node0x1c2af38 -> Node0x1c2b038;
	Node0x1c2b038 -> Node0x1c2b0f8;
	Node0x1c2b0f8 -> Node0x1c2b1a8;
	Node0x1c2b1a8 -> Node0x1c2b408;
	Node0x1c2b408 -> Node0x1c2b4c8;
	Node0x1c2b4c8 -> Node0x1c2b628;
	Node0x1c2b628 -> Node0x1c2b688;
	Node0x1c2b688 -> Node0x1c2e740;
	Node0x1c2e740 -> Node0x1c2e948;
	Node0x1c2e948 -> Node0x1c2eaa8;
	Node0x1c2eaa8 -> Node0x1c2ebb8;
	Node0x1c2ebb8 -> Node0x1c2ec78;
edge [color=red]
	Node0x1c2a868 -> Node0x1c2a9d8;
	Node0x1c2a9d8 -> Node0x1c2ae58;
	Node0x1c2a8e8 -> Node0x1c2af38;
	Node0x1c2af38 -> Node0x1c2b038;
	Node0x1c2a978 -> Node0x1c2b0f8;
	Node0x1c2b0f8 -> Node0x1c2b1a8;
	Node0x1c2a868 -> Node0x1c2b408;
	Node0x1c2a8e8 -> Node0x1c2b408;
	Node0x1c2a978 -> Node0x1c2b408;
	Node0x1c2a868 -> Node0x1c2b4c8;
	Node0x1c2a8e8 -> Node0x1c2b628;
	Node0x1c2a978 -> Node0x1c2b688;
	Node0x1c2b4c8 -> Node0x1c2e740;
	Node0x1c2b628 -> Node0x1c2e740;
	Node0x1c2b688 -> Node0x1c2e740;
	Node0x1c2b0f8 -> Node0x1c2e948;
	Node0x1c2af38 -> Node0x1c2eaa8;
	Node0x1c2a9d8 -> Node0x1c2ebb8;
}
