digraph "DFG for'main' function" {
	Node0xb7ebc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xb7ec48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xb7ecd8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xb7f138[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xb7f218[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xb7f338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb7f570[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xb7f628[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xb80598[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xb80c20[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xb80c90[shape=record, label="  %9 = or i32 %6, %8"];
	Node0xb80d00[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0xb80d70[shape=record, label="  %11 = sub i32 %10, %9"];
	Node0xb80de0[shape=record, label="  %12 = or i32 %7, %6"];
	Node0xb80e50[shape=record, label="  %13 = and i32 %6, %8"];
	Node0xb80ec0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0xb80f30[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0xb80fa0[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0xb81010[shape=record, label="  %17 = xor i32 %9, -1"];
	Node0xb81080[shape=record, label="  %18 = add i32 %6, %17"];
	Node0xb810f0[shape=record, label="  %19 = add i32 %18, %16"];
	Node0xb81160[shape=record, label="  %20 = mul i32 %19, 5"];
	Node0xb811d0[shape=record, label="  %21 = shl i32 %7, 1"];
	Node0xb81270[shape=record, label="  %22 = sub i32 4, %6"];
	Node0xb812e0[shape=record, label="  %23 = sub i32 %22, %12"];
	Node0xb81350[shape=record, label="  %24 = add i32 %23, %10"];
	Node0xb813c0[shape=record, label="  %25 = add i32 %24, %21"];
	Node0xb81430[shape=record, label="  %26 = sub i32 %25, %15"];
	Node0xb814a0[shape=record, label="  %27 = add i32 %26, %20"];
	Node0xb81510[shape=record, label="  %28 = icmp eq i32 %11, %27"];
	Node0xb1f9d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xb815a0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0xb817f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xb81958[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xb81a18[shape=record, label="  ret i32 0"];
	Node0xb7ebc8 -> Node0xb7ec48;
	Node0xb7ec48 -> Node0xb7ecd8;
	Node0xb7ecd8 -> Node0xb7f138;
	Node0xb7f138 -> Node0xb7f218;
	Node0xb7f218 -> Node0xb7f338;
	Node0xb7f338 -> Node0xb7f570;
	Node0xb7f570 -> Node0xb7f628;
	Node0xb7f628 -> Node0xb80598;
	Node0xb80598 -> Node0xb80c20;
	Node0xb80c20 -> Node0xb80c90;
	Node0xb80c90 -> Node0xb80d00;
	Node0xb80d00 -> Node0xb80d70;
	Node0xb80d70 -> Node0xb80de0;
	Node0xb80de0 -> Node0xb80e50;
	Node0xb80e50 -> Node0xb80ec0;
	Node0xb80ec0 -> Node0xb80f30;
	Node0xb80f30 -> Node0xb80fa0;
	Node0xb80fa0 -> Node0xb81010;
	Node0xb81010 -> Node0xb81080;
	Node0xb81080 -> Node0xb810f0;
	Node0xb810f0 -> Node0xb81160;
	Node0xb81160 -> Node0xb811d0;
	Node0xb811d0 -> Node0xb81270;
	Node0xb81270 -> Node0xb812e0;
	Node0xb812e0 -> Node0xb81350;
	Node0xb81350 -> Node0xb813c0;
	Node0xb813c0 -> Node0xb81430;
	Node0xb81430 -> Node0xb814a0;
	Node0xb814a0 -> Node0xb81510;
	Node0xb81510 -> Node0xb1f9d8;
	Node0xb1f9d8 -> Node0xb815a0;
	Node0xb815a0 -> Node0xb817f8;
	Node0xb817f8 -> Node0xb81958;
	Node0xb81958 -> Node0xb81a18;
edge [color=red]
	Node0xb7ebc8 -> Node0xb7ecd8;
	Node0xb7ecd8 -> Node0xb7f138;
	Node0xb7ec48 -> Node0xb7f218;
	Node0xb7f218 -> Node0xb7f338;
	Node0xb7ebc8 -> Node0xb7f570;
	Node0xb7ec48 -> Node0xb7f570;
	Node0xb7ebc8 -> Node0xb7f628;
	Node0xb7ec48 -> Node0xb80598;
	Node0xb80598 -> Node0xb80c20;
	Node0xb7f628 -> Node0xb80c90;
	Node0xb80c20 -> Node0xb80c90;
	Node0xb80598 -> Node0xb80d00;
	Node0xb7f628 -> Node0xb80d00;
	Node0xb80d00 -> Node0xb80d70;
	Node0xb80c90 -> Node0xb80d70;
	Node0xb80598 -> Node0xb80de0;
	Node0xb7f628 -> Node0xb80de0;
	Node0xb7f628 -> Node0xb80e50;
	Node0xb80c20 -> Node0xb80e50;
	Node0xb80e50 -> Node0xb80ec0;
	Node0xb80ec0 -> Node0xb80f30;
	Node0xb80de0 -> Node0xb80fa0;
	Node0xb80c90 -> Node0xb81010;
	Node0xb7f628 -> Node0xb81080;
	Node0xb81010 -> Node0xb81080;
	Node0xb81080 -> Node0xb810f0;
	Node0xb80fa0 -> Node0xb810f0;
	Node0xb810f0 -> Node0xb81160;
	Node0xb80598 -> Node0xb811d0;
	Node0xb7f628 -> Node0xb81270;
	Node0xb81270 -> Node0xb812e0;
	Node0xb80de0 -> Node0xb812e0;
	Node0xb812e0 -> Node0xb81350;
	Node0xb80d00 -> Node0xb81350;
	Node0xb81350 -> Node0xb813c0;
	Node0xb811d0 -> Node0xb813c0;
	Node0xb813c0 -> Node0xb81430;
	Node0xb80f30 -> Node0xb81430;
	Node0xb81430 -> Node0xb814a0;
	Node0xb81160 -> Node0xb814a0;
	Node0xb80d70 -> Node0xb81510;
	Node0xb814a0 -> Node0xb81510;
	Node0xb81510 -> Node0xb1f9d8;
	Node0xb1f9d8 -> Node0xb815a0;
	Node0xb7f218 -> Node0xb817f8;
	Node0xb7ecd8 -> Node0xb81958;
}
