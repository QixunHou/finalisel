digraph "DFG for'main' function" {
	Node0x1a26c58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a26cd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a26d68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1a271c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a272a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1a273c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a27600[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1a276b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a28628[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a28cb0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1a28d20[shape=record, label="  %9 = and i32 %6, %8"];
	Node0x1a28d90[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1a28e00[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x1a28e70[shape=record, label="  %12 = mul i32 %11, -2"];
	Node0x1a28ee0[shape=record, label="  %13 = xor i32 %6, -1"];
	Node0x1a28f50[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x1a28fc0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1a29030[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x1a290a0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x1a29110[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x1a29180[shape=record, label="  %19 = and i32 %7, %13"];
	Node0x1a291f0[shape=record, label="  %20 = shl i32 %9, 1"];
	Node0x1a29260[shape=record, label="  %21 = mul i32 %14, -3"];
	Node0x1a292d0[shape=record, label="  %22 = sub i32 -2, %11"];
	Node0x1a29340[shape=record, label="  %23 = add i32 %22, %15"];
	Node0x1a293b0[shape=record, label="  %24 = sub i32 %23, %19"];
	Node0x1a29420[shape=record, label="  %25 = add i32 %24, %12"];
	Node0x1a29490[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x1a29500[shape=record, label="  %27 = sub i32 %26, %20"];
	Node0x1a29570[shape=record, label="  %28 = add i32 %27, %21"];
	Node0x1a295e0[shape=record, label="  %29 = sub i32 %28, %18"];
	Node0x1a29650[shape=record, label="  %30 = icmp eq i32 %29, %10"];
	Node0x19c79d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a296e0[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x1a29b48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1a29ca8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1a29d68[shape=record, label="  ret i32 0"];
	Node0x1a26c58 -> Node0x1a26cd8;
	Node0x1a26cd8 -> Node0x1a26d68;
	Node0x1a26d68 -> Node0x1a271c8;
	Node0x1a271c8 -> Node0x1a272a8;
	Node0x1a272a8 -> Node0x1a273c8;
	Node0x1a273c8 -> Node0x1a27600;
	Node0x1a27600 -> Node0x1a276b8;
	Node0x1a276b8 -> Node0x1a28628;
	Node0x1a28628 -> Node0x1a28cb0;
	Node0x1a28cb0 -> Node0x1a28d20;
	Node0x1a28d20 -> Node0x1a28d90;
	Node0x1a28d90 -> Node0x1a28e00;
	Node0x1a28e00 -> Node0x1a28e70;
	Node0x1a28e70 -> Node0x1a28ee0;
	Node0x1a28ee0 -> Node0x1a28f50;
	Node0x1a28f50 -> Node0x1a28fc0;
	Node0x1a28fc0 -> Node0x1a29030;
	Node0x1a29030 -> Node0x1a290a0;
	Node0x1a290a0 -> Node0x1a29110;
	Node0x1a29110 -> Node0x1a29180;
	Node0x1a29180 -> Node0x1a291f0;
	Node0x1a291f0 -> Node0x1a29260;
	Node0x1a29260 -> Node0x1a292d0;
	Node0x1a292d0 -> Node0x1a29340;
	Node0x1a29340 -> Node0x1a293b0;
	Node0x1a293b0 -> Node0x1a29420;
	Node0x1a29420 -> Node0x1a29490;
	Node0x1a29490 -> Node0x1a29500;
	Node0x1a29500 -> Node0x1a29570;
	Node0x1a29570 -> Node0x1a295e0;
	Node0x1a295e0 -> Node0x1a29650;
	Node0x1a29650 -> Node0x19c79d8;
	Node0x19c79d8 -> Node0x1a296e0;
	Node0x1a296e0 -> Node0x1a29b48;
	Node0x1a29b48 -> Node0x1a29ca8;
	Node0x1a29ca8 -> Node0x1a29d68;
edge [color=red]
	Node0x1a26c58 -> Node0x1a26d68;
	Node0x1a26d68 -> Node0x1a271c8;
	Node0x1a26cd8 -> Node0x1a272a8;
	Node0x1a272a8 -> Node0x1a273c8;
	Node0x1a26c58 -> Node0x1a27600;
	Node0x1a26cd8 -> Node0x1a27600;
	Node0x1a26c58 -> Node0x1a276b8;
	Node0x1a26cd8 -> Node0x1a28628;
	Node0x1a28628 -> Node0x1a28cb0;
	Node0x1a276b8 -> Node0x1a28d20;
	Node0x1a28cb0 -> Node0x1a28d20;
	Node0x1a28d20 -> Node0x1a28d90;
	Node0x1a28628 -> Node0x1a28e00;
	Node0x1a276b8 -> Node0x1a28e00;
	Node0x1a28e00 -> Node0x1a28e70;
	Node0x1a276b8 -> Node0x1a28ee0;
	Node0x1a28628 -> Node0x1a28f50;
	Node0x1a276b8 -> Node0x1a28f50;
	Node0x1a28f50 -> Node0x1a28fc0;
	Node0x1a28628 -> Node0x1a29030;
	Node0x1a276b8 -> Node0x1a29030;
	Node0x1a29030 -> Node0x1a290a0;
	Node0x1a290a0 -> Node0x1a29110;
	Node0x1a28628 -> Node0x1a29180;
	Node0x1a28ee0 -> Node0x1a29180;
	Node0x1a28d20 -> Node0x1a291f0;
	Node0x1a28f50 -> Node0x1a29260;
	Node0x1a28e00 -> Node0x1a292d0;
	Node0x1a292d0 -> Node0x1a29340;
	Node0x1a28fc0 -> Node0x1a29340;
	Node0x1a29340 -> Node0x1a293b0;
	Node0x1a29180 -> Node0x1a293b0;
	Node0x1a293b0 -> Node0x1a29420;
	Node0x1a28e70 -> Node0x1a29420;
	Node0x1a29420 -> Node0x1a29490;
	Node0x1a290a0 -> Node0x1a29490;
	Node0x1a29490 -> Node0x1a29500;
	Node0x1a291f0 -> Node0x1a29500;
	Node0x1a29500 -> Node0x1a29570;
	Node0x1a29260 -> Node0x1a29570;
	Node0x1a29570 -> Node0x1a295e0;
	Node0x1a29110 -> Node0x1a295e0;
	Node0x1a295e0 -> Node0x1a29650;
	Node0x1a28d90 -> Node0x1a29650;
	Node0x1a29650 -> Node0x19c79d8;
	Node0x19c79d8 -> Node0x1a296e0;
	Node0x1a272a8 -> Node0x1a29b48;
	Node0x1a26d68 -> Node0x1a29ca8;
}
