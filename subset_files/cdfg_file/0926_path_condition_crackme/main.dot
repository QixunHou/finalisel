digraph "DFG for'main' function" {
	Node0x126fec8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x126ff48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x126ffd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1270038[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x12704b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1273c28[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1273d08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1273dc8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1273e78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12740d8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1274198[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1275108[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1275778[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1275870[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1275a78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1275bd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1275ce8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1275da8[shape=record, label="  ret i32 0"];
	Node0x126fec8 -> Node0x126ff48;
	Node0x126ff48 -> Node0x126ffd8;
	Node0x126ffd8 -> Node0x1270038;
	Node0x1270038 -> Node0x12704b8;
	Node0x12704b8 -> Node0x1273c28;
	Node0x1273c28 -> Node0x1273d08;
	Node0x1273d08 -> Node0x1273dc8;
	Node0x1273dc8 -> Node0x1273e78;
	Node0x1273e78 -> Node0x12740d8;
	Node0x12740d8 -> Node0x1274198;
	Node0x1274198 -> Node0x1275108;
	Node0x1275108 -> Node0x1275778;
	Node0x1275778 -> Node0x1275870;
	Node0x1275870 -> Node0x1275a78;
	Node0x1275a78 -> Node0x1275bd8;
	Node0x1275bd8 -> Node0x1275ce8;
	Node0x1275ce8 -> Node0x1275da8;
edge [color=red]
	Node0x126fec8 -> Node0x1270038;
	Node0x1270038 -> Node0x12704b8;
	Node0x126ff48 -> Node0x1273c28;
	Node0x1273c28 -> Node0x1273d08;
	Node0x126ffd8 -> Node0x1273dc8;
	Node0x1273dc8 -> Node0x1273e78;
	Node0x126fec8 -> Node0x12740d8;
	Node0x126ff48 -> Node0x12740d8;
	Node0x126ffd8 -> Node0x12740d8;
	Node0x126fec8 -> Node0x1274198;
	Node0x126ff48 -> Node0x1275108;
	Node0x126ffd8 -> Node0x1275778;
	Node0x1274198 -> Node0x1275870;
	Node0x1275108 -> Node0x1275870;
	Node0x1275778 -> Node0x1275870;
	Node0x1273dc8 -> Node0x1275a78;
	Node0x1273c28 -> Node0x1275bd8;
	Node0x1270038 -> Node0x1275ce8;
}
