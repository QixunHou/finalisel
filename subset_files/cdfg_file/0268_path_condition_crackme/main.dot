digraph "DFG for'main' function" {
	Node0x1453618[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1453698[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1453728[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1453788[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1453c08[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1453ce8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1453de8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1453ea8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1453f58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14541b8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1454278[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14543d8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1454438[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x145ae30[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x145b038[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x145b198[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x145b2a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x145b368[shape=record, label="  ret i32 0"];
	Node0x1453618 -> Node0x1453698;
	Node0x1453698 -> Node0x1453728;
	Node0x1453728 -> Node0x1453788;
	Node0x1453788 -> Node0x1453c08;
	Node0x1453c08 -> Node0x1453ce8;
	Node0x1453ce8 -> Node0x1453de8;
	Node0x1453de8 -> Node0x1453ea8;
	Node0x1453ea8 -> Node0x1453f58;
	Node0x1453f58 -> Node0x14541b8;
	Node0x14541b8 -> Node0x1454278;
	Node0x1454278 -> Node0x14543d8;
	Node0x14543d8 -> Node0x1454438;
	Node0x1454438 -> Node0x145ae30;
	Node0x145ae30 -> Node0x145b038;
	Node0x145b038 -> Node0x145b198;
	Node0x145b198 -> Node0x145b2a8;
	Node0x145b2a8 -> Node0x145b368;
edge [color=red]
	Node0x1453618 -> Node0x1453788;
	Node0x1453788 -> Node0x1453c08;
	Node0x1453698 -> Node0x1453ce8;
	Node0x1453ce8 -> Node0x1453de8;
	Node0x1453728 -> Node0x1453ea8;
	Node0x1453ea8 -> Node0x1453f58;
	Node0x1453618 -> Node0x14541b8;
	Node0x1453698 -> Node0x14541b8;
	Node0x1453728 -> Node0x14541b8;
	Node0x1453618 -> Node0x1454278;
	Node0x1453698 -> Node0x14543d8;
	Node0x1453728 -> Node0x1454438;
	Node0x1454278 -> Node0x145ae30;
	Node0x14543d8 -> Node0x145ae30;
	Node0x1454438 -> Node0x145ae30;
	Node0x1453ea8 -> Node0x145b038;
	Node0x1453ce8 -> Node0x145b198;
	Node0x1453788 -> Node0x145b2a8;
}
