digraph "DFG for'crackme' function" {
	Node0xfca7b0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0xfcae30[shape=record, label="  %6 = mul i32 %5, -3"];
	Node0xfcaea0[shape=record, label="  %7 = xor i32 %3, %0"];
	Node0xfcaf40[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0xfcafe0[shape=record, label="  %9 = xor i32 %3, -1"];
	Node0xfcb080[shape=record, label="  %10 = mul i32 %9, -5"];
	Node0xfcb0f0[shape=record, label="  %11 = add i32 %10, %6"];
	Node0xfcb160[shape=record, label="  %12 = add i32 %11, %8"];
	Node0xfcb1d0[shape=record, label="  %13 = xor i32 %2, %1"];
	Node0xfcb240[shape=record, label="  %14 = shl i32 %1, 1"];
	Node0xfcb2b0[shape=record, label="  %15 = xor i32 %2, -1"];
	Node0xfcb320[shape=record, label="  %16 = or i32 %15, %1"];
	Node0xfcb3c0[shape=record, label="  %17 = xor i32 %1, 2147483647"];
	Node0xfcb430[shape=record, label="  %18 = or i32 %17, %2"];
	Node0xfcb4a0[shape=record, label="  %19 = xor i32 %1, -1"];
	Node0xfcb510[shape=record, label="  %20 = and i32 %2, %1"];
	Node0xfcb580[shape=record, label="  %21 = add i32 %2, 1"];
	Node0xfcb5f0[shape=record, label="  %22 = xor i32 %16, -1"];
	Node0xfcb690[shape=record, label="  %23 = mul i32 %22, -6"];
	Node0xfcb700[shape=record, label="  %24 = shl i32 %20, 1"];
	Node0xfcb770[shape=record, label="  %25 = or i32 %3, %0"];
	Node0xfcb7e0[shape=record, label="  %26 = xor i32 %0, -1"];
	Node0xfcb850[shape=record, label="  %27 = or i32 %26, %3"];
	Node0xfcb8c0[shape=record, label="  %28 = xor i32 %3, 2147483647"];
	Node0xfcb930[shape=record, label="  %29 = or i32 %28, %0"];
	Node0xfcb9d0[shape=record, label="  %30 = shl i32 %25, 3"];
	Node0xfcba70[shape=record, label="  %31 = xor i32 %30, -8"];
	Node0xfcbae0[shape=record, label="  %32 = xor i32 %27, -1"];
	Node0xfcbd60[shape=record, label="  %33 = and i32 %3, %0"];
	Node0xfcbdd0[shape=record, label="  %34 = add i32 %18, %3"];
	Node0xfcbe40[shape=record, label="  %35 = add i32 %34, %29"];
	Node0xfcbeb0[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0xfcbf20[shape=record, label="  %37 = add i32 %33, %32"];
	Node0xfcbf90[shape=record, label="  %38 = mul i32 %37, -3"];
	Node0xfcc000[shape=record, label="  %39 = sub i32 1, %0"];
	Node0xfcc070[shape=record, label="  %40 = add i32 %39, %19"];
	Node0xfcc0e0[shape=record, label="  %41 = sub i32 %40, %2"];
	Node0xfcc150[shape=record, label="  %42 = sub i32 %41, %14"];
	Node0xfcc1c0[shape=record, label="  %43 = add i32 %42, %21"];
	Node0xfcc230[shape=record, label="  %44 = add i32 %43, %13"];
	Node0xfcc2a0[shape=record, label="  %45 = sub i32 %44, %16"];
	Node0xfcc310[shape=record, label="  %46 = add i32 %45, %20"];
	Node0xfcc380[shape=record, label="  %47 = add i32 %46, %5"];
	Node0xfcc3f0[shape=record, label="  %48 = add i32 %47, %23"];
	Node0xfcc460[shape=record, label="  %49 = sub i32 %48, %24"];
	Node0xfcc4d0[shape=record, label="  %50 = sub i32 %49, %25"];
	Node0xfcc540[shape=record, label="  %51 = add i32 %50, %27"];
	Node0xfcc5b0[shape=record, label="  %52 = sub i32 %51, %31"];
	Node0xfcc620[shape=record, label="  %53 = add i32 %52, %38"];
	Node0xfcc690[shape=record, label="  %54 = add i32 %53, %36"];
	Node0xfcc700[shape=record, label="  %55 = icmp eq i32 %12, %54"];
	Node0xf6b268[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xfccba0[shape=record, label="  %57 = tail call i32 @puts(i8* nonnull dereferenceable(1) %56)"];
	Node0xfccbf0[shape=record, label="  ret void"];
	Node0xfca7b0 -> Node0xfcae30;
	Node0xfcae30 -> Node0xfcaea0;
	Node0xfcaea0 -> Node0xfcaf40;
	Node0xfcaf40 -> Node0xfcafe0;
	Node0xfcafe0 -> Node0xfcb080;
	Node0xfcb080 -> Node0xfcb0f0;
	Node0xfcb0f0 -> Node0xfcb160;
	Node0xfcb160 -> Node0xfcb1d0;
	Node0xfcb1d0 -> Node0xfcb240;
	Node0xfcb240 -> Node0xfcb2b0;
	Node0xfcb2b0 -> Node0xfcb320;
	Node0xfcb320 -> Node0xfcb3c0;
	Node0xfcb3c0 -> Node0xfcb430;
	Node0xfcb430 -> Node0xfcb4a0;
	Node0xfcb4a0 -> Node0xfcb510;
	Node0xfcb510 -> Node0xfcb580;
	Node0xfcb580 -> Node0xfcb5f0;
	Node0xfcb5f0 -> Node0xfcb690;
	Node0xfcb690 -> Node0xfcb700;
	Node0xfcb700 -> Node0xfcb770;
	Node0xfcb770 -> Node0xfcb7e0;
	Node0xfcb7e0 -> Node0xfcb850;
	Node0xfcb850 -> Node0xfcb8c0;
	Node0xfcb8c0 -> Node0xfcb930;
	Node0xfcb930 -> Node0xfcb9d0;
	Node0xfcb9d0 -> Node0xfcba70;
	Node0xfcba70 -> Node0xfcbae0;
	Node0xfcbae0 -> Node0xfcbd60;
	Node0xfcbd60 -> Node0xfcbdd0;
	Node0xfcbdd0 -> Node0xfcbe40;
	Node0xfcbe40 -> Node0xfcbeb0;
	Node0xfcbeb0 -> Node0xfcbf20;
	Node0xfcbf20 -> Node0xfcbf90;
	Node0xfcbf90 -> Node0xfcc000;
	Node0xfcc000 -> Node0xfcc070;
	Node0xfcc070 -> Node0xfcc0e0;
	Node0xfcc0e0 -> Node0xfcc150;
	Node0xfcc150 -> Node0xfcc1c0;
	Node0xfcc1c0 -> Node0xfcc230;
	Node0xfcc230 -> Node0xfcc2a0;
	Node0xfcc2a0 -> Node0xfcc310;
	Node0xfcc310 -> Node0xfcc380;
	Node0xfcc380 -> Node0xfcc3f0;
	Node0xfcc3f0 -> Node0xfcc460;
	Node0xfcc460 -> Node0xfcc4d0;
	Node0xfcc4d0 -> Node0xfcc540;
	Node0xfcc540 -> Node0xfcc5b0;
	Node0xfcc5b0 -> Node0xfcc620;
	Node0xfcc620 -> Node0xfcc690;
	Node0xfcc690 -> Node0xfcc700;
	Node0xfcc700 -> Node0xf6b268;
	Node0xf6b268 -> Node0xfccba0;
	Node0xfccba0 -> Node0xfccbf0;
edge [color=red]
	Node0xfca7b0 -> Node0xfcae30;
	Node0xfcaea0 -> Node0xfcaf40;
	Node0xfcafe0 -> Node0xfcb080;
	Node0xfcb080 -> Node0xfcb0f0;
	Node0xfcae30 -> Node0xfcb0f0;
	Node0xfcb0f0 -> Node0xfcb160;
	Node0xfcaf40 -> Node0xfcb160;
	Node0xfcb2b0 -> Node0xfcb320;
	Node0xfcb3c0 -> Node0xfcb430;
	Node0xfcb320 -> Node0xfcb5f0;
	Node0xfcb5f0 -> Node0xfcb690;
	Node0xfcb510 -> Node0xfcb700;
	Node0xfcb7e0 -> Node0xfcb850;
	Node0xfcb8c0 -> Node0xfcb930;
	Node0xfcb770 -> Node0xfcb9d0;
	Node0xfcb9d0 -> Node0xfcba70;
	Node0xfcb850 -> Node0xfcbae0;
	Node0xfcb430 -> Node0xfcbdd0;
	Node0xfcbdd0 -> Node0xfcbe40;
	Node0xfcb930 -> Node0xfcbe40;
	Node0xfcbe40 -> Node0xfcbeb0;
	Node0xfcbd60 -> Node0xfcbf20;
	Node0xfcbae0 -> Node0xfcbf20;
	Node0xfcbf20 -> Node0xfcbf90;
	Node0xfcc000 -> Node0xfcc070;
	Node0xfcb4a0 -> Node0xfcc070;
	Node0xfcc070 -> Node0xfcc0e0;
	Node0xfcc0e0 -> Node0xfcc150;
	Node0xfcb240 -> Node0xfcc150;
	Node0xfcc150 -> Node0xfcc1c0;
	Node0xfcb580 -> Node0xfcc1c0;
	Node0xfcc1c0 -> Node0xfcc230;
	Node0xfcb1d0 -> Node0xfcc230;
	Node0xfcc230 -> Node0xfcc2a0;
	Node0xfcb320 -> Node0xfcc2a0;
	Node0xfcc2a0 -> Node0xfcc310;
	Node0xfcb510 -> Node0xfcc310;
	Node0xfcc310 -> Node0xfcc380;
	Node0xfca7b0 -> Node0xfcc380;
	Node0xfcc380 -> Node0xfcc3f0;
	Node0xfcb690 -> Node0xfcc3f0;
	Node0xfcc3f0 -> Node0xfcc460;
	Node0xfcb700 -> Node0xfcc460;
	Node0xfcc460 -> Node0xfcc4d0;
	Node0xfcb770 -> Node0xfcc4d0;
	Node0xfcc4d0 -> Node0xfcc540;
	Node0xfcb850 -> Node0xfcc540;
	Node0xfcc540 -> Node0xfcc5b0;
	Node0xfcba70 -> Node0xfcc5b0;
	Node0xfcc5b0 -> Node0xfcc620;
	Node0xfcbf90 -> Node0xfcc620;
	Node0xfcc620 -> Node0xfcc690;
	Node0xfcbeb0 -> Node0xfcc690;
	Node0xfcb160 -> Node0xfcc700;
	Node0xfcc690 -> Node0xfcc700;
	Node0xfcc700 -> Node0xf6b268;
	Node0xf6b268 -> Node0xfccba0;
}
