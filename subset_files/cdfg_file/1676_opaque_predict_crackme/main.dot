digraph "DFG for'main' function" {
	Node0xfccdb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xfcce38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xfccec8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xfccf28[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xfccfd8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xfcd408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfcd4e8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xfcd5e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfcd6a8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xfcd758[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xfcd818[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xfcd8c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xfc77e0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xfcdac8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xfcea38[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xfcf0a8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xfcf108[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xfcf218[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xfcf478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xfcf5d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xfcf6e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfcf7f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfcf8b8[shape=record, label="  ret i32 0"];
	Node0xfccdb8 -> Node0xfcce38;
	Node0xfcce38 -> Node0xfccec8;
	Node0xfccec8 -> Node0xfccf28;
	Node0xfccf28 -> Node0xfccfd8;
	Node0xfccfd8 -> Node0xfcd408;
	Node0xfcd408 -> Node0xfcd4e8;
	Node0xfcd4e8 -> Node0xfcd5e8;
	Node0xfcd5e8 -> Node0xfcd6a8;
	Node0xfcd6a8 -> Node0xfcd758;
	Node0xfcd758 -> Node0xfcd818;
	Node0xfcd818 -> Node0xfcd8c8;
	Node0xfcd8c8 -> Node0xfc77e0;
	Node0xfc77e0 -> Node0xfcdac8;
	Node0xfcdac8 -> Node0xfcea38;
	Node0xfcea38 -> Node0xfcf0a8;
	Node0xfcf0a8 -> Node0xfcf108;
	Node0xfcf108 -> Node0xfcf218;
	Node0xfcf218 -> Node0xfcf478;
	Node0xfcf478 -> Node0xfcf5d8;
	Node0xfcf5d8 -> Node0xfcf6e8;
	Node0xfcf6e8 -> Node0xfcf7f8;
	Node0xfcf7f8 -> Node0xfcf8b8;
edge [color=red]
	Node0xfccdb8 -> Node0xfccfd8;
	Node0xfccfd8 -> Node0xfcd408;
	Node0xfcce38 -> Node0xfcd4e8;
	Node0xfcd4e8 -> Node0xfcd5e8;
	Node0xfccec8 -> Node0xfcd6a8;
	Node0xfcd6a8 -> Node0xfcd758;
	Node0xfccf28 -> Node0xfcd818;
	Node0xfcd818 -> Node0xfcd8c8;
	Node0xfccdb8 -> Node0xfc77e0;
	Node0xfcce38 -> Node0xfc77e0;
	Node0xfccec8 -> Node0xfc77e0;
	Node0xfccf28 -> Node0xfc77e0;
	Node0xfccdb8 -> Node0xfcdac8;
	Node0xfcce38 -> Node0xfcea38;
	Node0xfccec8 -> Node0xfcf0a8;
	Node0xfccf28 -> Node0xfcf108;
	Node0xfcdac8 -> Node0xfcf218;
	Node0xfcea38 -> Node0xfcf218;
	Node0xfcf0a8 -> Node0xfcf218;
	Node0xfcf108 -> Node0xfcf218;
	Node0xfcd818 -> Node0xfcf478;
	Node0xfcd6a8 -> Node0xfcf5d8;
	Node0xfcd4e8 -> Node0xfcf6e8;
	Node0xfccfd8 -> Node0xfcf7f8;
}
