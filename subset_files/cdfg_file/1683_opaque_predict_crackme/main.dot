digraph "DFG for'main' function" {
	Node0x775c58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x775cd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x775d68[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x775dc8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x776248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x776328[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x776428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x77cea8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x77cf38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x77d198[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x77d258[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x77e1c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x77e838[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x77e930[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x77eb38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x77ec98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x77eda8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x77ee68[shape=record, label="  ret i32 0"];
	Node0x775c58 -> Node0x775cd8;
	Node0x775cd8 -> Node0x775d68;
	Node0x775d68 -> Node0x775dc8;
	Node0x775dc8 -> Node0x776248;
	Node0x776248 -> Node0x776328;
	Node0x776328 -> Node0x776428;
	Node0x776428 -> Node0x77cea8;
	Node0x77cea8 -> Node0x77cf38;
	Node0x77cf38 -> Node0x77d198;
	Node0x77d198 -> Node0x77d258;
	Node0x77d258 -> Node0x77e1c8;
	Node0x77e1c8 -> Node0x77e838;
	Node0x77e838 -> Node0x77e930;
	Node0x77e930 -> Node0x77eb38;
	Node0x77eb38 -> Node0x77ec98;
	Node0x77ec98 -> Node0x77eda8;
	Node0x77eda8 -> Node0x77ee68;
edge [color=red]
	Node0x775c58 -> Node0x775dc8;
	Node0x775dc8 -> Node0x776248;
	Node0x775cd8 -> Node0x776328;
	Node0x776328 -> Node0x776428;
	Node0x775d68 -> Node0x77cea8;
	Node0x77cea8 -> Node0x77cf38;
	Node0x775c58 -> Node0x77d198;
	Node0x775cd8 -> Node0x77d198;
	Node0x775d68 -> Node0x77d198;
	Node0x775c58 -> Node0x77d258;
	Node0x775cd8 -> Node0x77e1c8;
	Node0x775d68 -> Node0x77e838;
	Node0x77d258 -> Node0x77e930;
	Node0x77e1c8 -> Node0x77e930;
	Node0x77e838 -> Node0x77e930;
	Node0x77cea8 -> Node0x77eb38;
	Node0x776328 -> Node0x77ec98;
	Node0x775dc8 -> Node0x77eda8;
}
