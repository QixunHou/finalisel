digraph "DFG for'main' function" {
	Node0x1b87558[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b875d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b87668[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b876c8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1b87778[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1b87ba8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b87c88[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1b87d88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b87e48[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1b87ef8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b87fb8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1b88068[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b82970[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1b88268[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b891d8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b89848[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b898a8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1b89920[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x1b89990[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0x1b89a00[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x1b89a70[shape=record, label="  %17 = add i32 %16, %14"];
	Node0x1b89ae0[shape=record, label="  %18 = xor i32 %12, %11"];
	Node0x1b89b50[shape=record, label="  %19 = shl i32 %12, 1"];
	Node0x1b89bc0[shape=record, label="  %20 = or i32 %12, %11"];
	Node0x1b89c30[shape=record, label="  %21 = and i32 %12, %11"];
	Node0x1b89ca0[shape=record, label="  %22 = xor i32 %10, -1"];
	Node0x1b89d10[shape=record, label="  %23 = and i32 %13, %22"];
	Node0x1b89d80[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x1b89df0[shape=record, label="  %25 = or i32 %13, %22"];
	Node0x1b89e60[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x1b89ed0[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x1b89f40[shape=record, label="  %28 = xor i32 %11, 2147483647"];
	Node0x1b89fb0[shape=record, label="  %29 = or i32 %28, %12"];
	Node0x1b8a020[shape=record, label="  %30 = add i32 %23, %29"];
	Node0x1b8a090[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x1b8a100[shape=record, label="  %32 = sub i32 %10, %11"];
	Node0x1b8a170[shape=record, label="  %33 = add i32 %32, %18"];
	Node0x1b8a1e0[shape=record, label="  %34 = sub i32 %33, %19"];
	Node0x1b8a250[shape=record, label="  %35 = add i32 %34, %20"];
	Node0x1b8a2c0[shape=record, label="  %36 = add i32 %35, %21"];
	Node0x1b8a330[shape=record, label="  %37 = sub i32 %36, %13"];
	Node0x1b8a3a0[shape=record, label="  %38 = sub i32 %37, %15"];
	Node0x1b8a410[shape=record, label="  %39 = add i32 %38, %24"];
	Node0x1b8a480[shape=record, label="  %40 = sub i32 %39, %25"];
	Node0x1b8a4f0[shape=record, label="  %41 = sub i32 %40, %27"];
	Node0x1b8a560[shape=record, label="  %42 = add i32 %41, %31"];
	Node0x1b8a5d0[shape=record, label="  %43 = icmp eq i32 %17, %42"];
	Node0x1b278b8[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1b8a660[shape=record, label="  %45 = call i32 @puts(i8* nonnull dereferenceable(1) %44) #5"];
	Node0x1b8a908[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b8aa68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b8ab78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b8ac88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b8ad48[shape=record, label="  ret i32 0"];
	Node0x1b87558 -> Node0x1b875d8;
	Node0x1b875d8 -> Node0x1b87668;
	Node0x1b87668 -> Node0x1b876c8;
	Node0x1b876c8 -> Node0x1b87778;
	Node0x1b87778 -> Node0x1b87ba8;
	Node0x1b87ba8 -> Node0x1b87c88;
	Node0x1b87c88 -> Node0x1b87d88;
	Node0x1b87d88 -> Node0x1b87e48;
	Node0x1b87e48 -> Node0x1b87ef8;
	Node0x1b87ef8 -> Node0x1b87fb8;
	Node0x1b87fb8 -> Node0x1b88068;
	Node0x1b88068 -> Node0x1b82970;
	Node0x1b82970 -> Node0x1b88268;
	Node0x1b88268 -> Node0x1b891d8;
	Node0x1b891d8 -> Node0x1b89848;
	Node0x1b89848 -> Node0x1b898a8;
	Node0x1b898a8 -> Node0x1b89920;
	Node0x1b89920 -> Node0x1b89990;
	Node0x1b89990 -> Node0x1b89a00;
	Node0x1b89a00 -> Node0x1b89a70;
	Node0x1b89a70 -> Node0x1b89ae0;
	Node0x1b89ae0 -> Node0x1b89b50;
	Node0x1b89b50 -> Node0x1b89bc0;
	Node0x1b89bc0 -> Node0x1b89c30;
	Node0x1b89c30 -> Node0x1b89ca0;
	Node0x1b89ca0 -> Node0x1b89d10;
	Node0x1b89d10 -> Node0x1b89d80;
	Node0x1b89d80 -> Node0x1b89df0;
	Node0x1b89df0 -> Node0x1b89e60;
	Node0x1b89e60 -> Node0x1b89ed0;
	Node0x1b89ed0 -> Node0x1b89f40;
	Node0x1b89f40 -> Node0x1b89fb0;
	Node0x1b89fb0 -> Node0x1b8a020;
	Node0x1b8a020 -> Node0x1b8a090;
	Node0x1b8a090 -> Node0x1b8a100;
	Node0x1b8a100 -> Node0x1b8a170;
	Node0x1b8a170 -> Node0x1b8a1e0;
	Node0x1b8a1e0 -> Node0x1b8a250;
	Node0x1b8a250 -> Node0x1b8a2c0;
	Node0x1b8a2c0 -> Node0x1b8a330;
	Node0x1b8a330 -> Node0x1b8a3a0;
	Node0x1b8a3a0 -> Node0x1b8a410;
	Node0x1b8a410 -> Node0x1b8a480;
	Node0x1b8a480 -> Node0x1b8a4f0;
	Node0x1b8a4f0 -> Node0x1b8a560;
	Node0x1b8a560 -> Node0x1b8a5d0;
	Node0x1b8a5d0 -> Node0x1b278b8;
	Node0x1b278b8 -> Node0x1b8a660;
	Node0x1b8a660 -> Node0x1b8a908;
	Node0x1b8a908 -> Node0x1b8aa68;
	Node0x1b8aa68 -> Node0x1b8ab78;
	Node0x1b8ab78 -> Node0x1b8ac88;
	Node0x1b8ac88 -> Node0x1b8ad48;
edge [color=red]
	Node0x1b87558 -> Node0x1b87778;
	Node0x1b87778 -> Node0x1b87ba8;
	Node0x1b875d8 -> Node0x1b87c88;
	Node0x1b87c88 -> Node0x1b87d88;
	Node0x1b87668 -> Node0x1b87e48;
	Node0x1b87e48 -> Node0x1b87ef8;
	Node0x1b876c8 -> Node0x1b87fb8;
	Node0x1b87fb8 -> Node0x1b88068;
	Node0x1b87558 -> Node0x1b82970;
	Node0x1b875d8 -> Node0x1b82970;
	Node0x1b87668 -> Node0x1b82970;
	Node0x1b876c8 -> Node0x1b82970;
	Node0x1b87558 -> Node0x1b88268;
	Node0x1b875d8 -> Node0x1b891d8;
	Node0x1b87668 -> Node0x1b89848;
	Node0x1b876c8 -> Node0x1b898a8;
	Node0x1b891d8 -> Node0x1b89920;
	Node0x1b898a8 -> Node0x1b89990;
	Node0x1b88268 -> Node0x1b89990;
	Node0x1b89990 -> Node0x1b89a00;
	Node0x1b89a00 -> Node0x1b89a70;
	Node0x1b89920 -> Node0x1b89a70;
	Node0x1b89848 -> Node0x1b89ae0;
	Node0x1b891d8 -> Node0x1b89ae0;
	Node0x1b89848 -> Node0x1b89b50;
	Node0x1b89848 -> Node0x1b89bc0;
	Node0x1b891d8 -> Node0x1b89bc0;
	Node0x1b89848 -> Node0x1b89c30;
	Node0x1b891d8 -> Node0x1b89c30;
	Node0x1b88268 -> Node0x1b89ca0;
	Node0x1b898a8 -> Node0x1b89d10;
	Node0x1b89ca0 -> Node0x1b89d10;
	Node0x1b89d10 -> Node0x1b89d80;
	Node0x1b898a8 -> Node0x1b89df0;
	Node0x1b89ca0 -> Node0x1b89df0;
	Node0x1b89df0 -> Node0x1b89e60;
	Node0x1b89e60 -> Node0x1b89ed0;
	Node0x1b891d8 -> Node0x1b89f40;
	Node0x1b89f40 -> Node0x1b89fb0;
	Node0x1b89848 -> Node0x1b89fb0;
	Node0x1b89d10 -> Node0x1b8a020;
	Node0x1b89fb0 -> Node0x1b8a020;
	Node0x1b8a020 -> Node0x1b8a090;
	Node0x1b88268 -> Node0x1b8a100;
	Node0x1b891d8 -> Node0x1b8a100;
	Node0x1b8a100 -> Node0x1b8a170;
	Node0x1b89ae0 -> Node0x1b8a170;
	Node0x1b8a170 -> Node0x1b8a1e0;
	Node0x1b89b50 -> Node0x1b8a1e0;
	Node0x1b8a1e0 -> Node0x1b8a250;
	Node0x1b89bc0 -> Node0x1b8a250;
	Node0x1b8a250 -> Node0x1b8a2c0;
	Node0x1b89c30 -> Node0x1b8a2c0;
	Node0x1b8a2c0 -> Node0x1b8a330;
	Node0x1b898a8 -> Node0x1b8a330;
	Node0x1b8a330 -> Node0x1b8a3a0;
	Node0x1b89990 -> Node0x1b8a3a0;
	Node0x1b8a3a0 -> Node0x1b8a410;
	Node0x1b89d80 -> Node0x1b8a410;
	Node0x1b8a410 -> Node0x1b8a480;
	Node0x1b89df0 -> Node0x1b8a480;
	Node0x1b8a480 -> Node0x1b8a4f0;
	Node0x1b89ed0 -> Node0x1b8a4f0;
	Node0x1b8a4f0 -> Node0x1b8a560;
	Node0x1b8a090 -> Node0x1b8a560;
	Node0x1b89a70 -> Node0x1b8a5d0;
	Node0x1b8a560 -> Node0x1b8a5d0;
	Node0x1b8a5d0 -> Node0x1b278b8;
	Node0x1b278b8 -> Node0x1b8a660;
	Node0x1b87fb8 -> Node0x1b8a908;
	Node0x1b87e48 -> Node0x1b8aa68;
	Node0x1b87c88 -> Node0x1b8ab78;
	Node0x1b87778 -> Node0x1b8ac88;
}
