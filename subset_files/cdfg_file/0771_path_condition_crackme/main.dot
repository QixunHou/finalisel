digraph "DFG for'main' function" {
	Node0x1087b18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1087b98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1087c28[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1088088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1088168[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1088288[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10884c0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1088578[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10894e8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1089b70[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x1089be0[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1089c50[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x1089cc0[shape=record, label="  %11 = and i32 %6, %10"];
	Node0x1089d30[shape=record, label="  %12 = or i32 %7, %6"];
	Node0x1089da0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x1089e10[shape=record, label="  %14 = or i32 %6, %10"];
	Node0x1089e80[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0x1089ef0[shape=record, label="  %16 = xor i32 %14, -1"];
	Node0x1089f60[shape=record, label="  %17 = mul i32 %11, 3"];
	Node0x1089fd0[shape=record, label="  %18 = shl i32 %13, 1"];
	Node0x108a040[shape=record, label="  %19 = add i32 %8, %16"];
	Node0x108a0b0[shape=record, label="  %20 = sub i32 %19, %12"];
	Node0x108a120[shape=record, label="  %21 = mul i32 %20, 5"];
	Node0x108a190[shape=record, label="  %22 = add i32 %11, 1"];
	Node0x108a200[shape=record, label="  %23 = add i32 %22, %14"];
	Node0x108a270[shape=record, label="  %24 = add i32 %23, %15"];
	Node0x108a2e0[shape=record, label="  %25 = add i32 %24, %17"];
	Node0x108a350[shape=record, label="  %26 = add i32 %25, %18"];
	Node0x108a3c0[shape=record, label="  %27 = add i32 %26, %21"];
	Node0x108a430[shape=record, label="  %28 = icmp eq i32 %27, %9"];
	Node0x10289d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x108a4c0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x108a718[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x108a878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x108a938[shape=record, label="  ret i32 0"];
	Node0x1087b18 -> Node0x1087b98;
	Node0x1087b98 -> Node0x1087c28;
	Node0x1087c28 -> Node0x1088088;
	Node0x1088088 -> Node0x1088168;
	Node0x1088168 -> Node0x1088288;
	Node0x1088288 -> Node0x10884c0;
	Node0x10884c0 -> Node0x1088578;
	Node0x1088578 -> Node0x10894e8;
	Node0x10894e8 -> Node0x1089b70;
	Node0x1089b70 -> Node0x1089be0;
	Node0x1089be0 -> Node0x1089c50;
	Node0x1089c50 -> Node0x1089cc0;
	Node0x1089cc0 -> Node0x1089d30;
	Node0x1089d30 -> Node0x1089da0;
	Node0x1089da0 -> Node0x1089e10;
	Node0x1089e10 -> Node0x1089e80;
	Node0x1089e80 -> Node0x1089ef0;
	Node0x1089ef0 -> Node0x1089f60;
	Node0x1089f60 -> Node0x1089fd0;
	Node0x1089fd0 -> Node0x108a040;
	Node0x108a040 -> Node0x108a0b0;
	Node0x108a0b0 -> Node0x108a120;
	Node0x108a120 -> Node0x108a190;
	Node0x108a190 -> Node0x108a200;
	Node0x108a200 -> Node0x108a270;
	Node0x108a270 -> Node0x108a2e0;
	Node0x108a2e0 -> Node0x108a350;
	Node0x108a350 -> Node0x108a3c0;
	Node0x108a3c0 -> Node0x108a430;
	Node0x108a430 -> Node0x10289d8;
	Node0x10289d8 -> Node0x108a4c0;
	Node0x108a4c0 -> Node0x108a718;
	Node0x108a718 -> Node0x108a878;
	Node0x108a878 -> Node0x108a938;
edge [color=red]
	Node0x1087b18 -> Node0x1087c28;
	Node0x1087c28 -> Node0x1088088;
	Node0x1087b98 -> Node0x1088168;
	Node0x1088168 -> Node0x1088288;
	Node0x1087b18 -> Node0x10884c0;
	Node0x1087b98 -> Node0x10884c0;
	Node0x1087b18 -> Node0x1088578;
	Node0x1087b98 -> Node0x10894e8;
	Node0x10894e8 -> Node0x1089b70;
	Node0x1088578 -> Node0x1089b70;
	Node0x1089b70 -> Node0x1089be0;
	Node0x10894e8 -> Node0x1089c50;
	Node0x1088578 -> Node0x1089cc0;
	Node0x1089c50 -> Node0x1089cc0;
	Node0x10894e8 -> Node0x1089d30;
	Node0x1088578 -> Node0x1089d30;
	Node0x10894e8 -> Node0x1089da0;
	Node0x1088578 -> Node0x1089da0;
	Node0x1088578 -> Node0x1089e10;
	Node0x1089c50 -> Node0x1089e10;
	Node0x1089d30 -> Node0x1089e80;
	Node0x1089e10 -> Node0x1089ef0;
	Node0x1089cc0 -> Node0x1089f60;
	Node0x1089da0 -> Node0x1089fd0;
	Node0x1089b70 -> Node0x108a040;
	Node0x1089ef0 -> Node0x108a040;
	Node0x108a040 -> Node0x108a0b0;
	Node0x1089d30 -> Node0x108a0b0;
	Node0x108a0b0 -> Node0x108a120;
	Node0x1089cc0 -> Node0x108a190;
	Node0x108a190 -> Node0x108a200;
	Node0x1089e10 -> Node0x108a200;
	Node0x108a200 -> Node0x108a270;
	Node0x1089e80 -> Node0x108a270;
	Node0x108a270 -> Node0x108a2e0;
	Node0x1089f60 -> Node0x108a2e0;
	Node0x108a2e0 -> Node0x108a350;
	Node0x1089fd0 -> Node0x108a350;
	Node0x108a350 -> Node0x108a3c0;
	Node0x108a120 -> Node0x108a3c0;
	Node0x108a3c0 -> Node0x108a430;
	Node0x1089be0 -> Node0x108a430;
	Node0x108a430 -> Node0x10289d8;
	Node0x10289d8 -> Node0x108a4c0;
	Node0x1088168 -> Node0x108a718;
	Node0x1087c28 -> Node0x108a878;
}
