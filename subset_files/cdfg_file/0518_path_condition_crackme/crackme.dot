digraph "DFG for'crackme' function" {
	Node0x13e2c90[shape=record, label="  %4 = xor i32 %2, -1"];
	Node0x13e2d50[shape=record, label="  %5 = xor i32 %0, -1"];
	Node0x13e2dc0[shape=record, label="  %6 = and i32 %5, %2"];
	Node0x13e2e30[shape=record, label="  %7 = xor i32 %6, %1"];
	Node0x13e2ea0[shape=record, label="  %8 = xor i32 %1, -1"];
	Node0x13e2f10[shape=record, label="  %9 = and i32 %8, %2"];
	Node0x13e2f80[shape=record, label="  %10 = and i32 %9, %0"];
	Node0x13e2ff0[shape=record, label="  %11 = or i32 %8, %2"];
	Node0x13e3060[shape=record, label="  %12 = xor i32 %11, %0"];
	Node0x13e30d0[shape=record, label="  %13 = or i32 %10, %12"];
	Node0x13e3140[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x13e31b0[shape=record, label="  %15 = add i32 %14, %7"];
	Node0x13e3250[shape=record, label="  %16 = sub i32 0, %15"];
	Node0x13e32c0[shape=record, label="  %17 = and i32 %4, %0"];
	Node0x13e3330[shape=record, label="  %18 = xor i32 %17, %1"];
	Node0x13e33a0[shape=record, label="  %19 = xor i32 %2, %1"];
	Node0x13e3410[shape=record, label="  %20 = or i32 %19, %5"];
	Node0x13e34b0[shape=record, label="  %21 = mul i32 %20, 5"];
	Node0x13e3520[shape=record, label="  %22 = xor i32 %19, -1"];
	Node0x13e3590[shape=record, label="  %23 = and i32 %22, %0"];
	Node0x13e3600[shape=record, label="  %24 = or i32 %8, %0"];
	Node0x13e3670[shape=record, label="  %25 = xor i32 %2, %0"];
	Node0x13e36e0[shape=record, label="  %26 = and i32 %25, %24"];
	Node0x13e3750[shape=record, label="  %27 = xor i32 %24, %4"];
	Node0x13e37c0[shape=record, label="  %28 = or i32 %2, %0"];
	Node0x13e3830[shape=record, label="  %29 = or i32 %2, %1"];
	Node0x13e38a0[shape=record, label="  %30 = xor i32 %29, -1"];
	Node0x13e3910[shape=record, label="  %31 = and i32 %30, %5"];
	Node0x13e39b0[shape=record, label="  %32 = shl i32 %31, 3"];
	Node0x13e3c30[shape=record, label="  %33 = and i32 %4, %1"];
	Node0x13e3ca0[shape=record, label="  %34 = and i32 %33, %5"];
	Node0x13e3d10[shape=record, label="  %35 = and i32 %30, %0"];
	Node0x13e3d80[shape=record, label="  %36 = and i32 %33, %0"];
	Node0x13e3e20[shape=record, label="  %37 = mul i32 %36, -6"];
	Node0x13e3e90[shape=record, label="  %38 = and i32 %2, %1"];
	Node0x13e3f00[shape=record, label="  %39 = and i32 %38, %5"];
	Node0x13e3fa0[shape=record, label="  %40 = mul i32 %39, -7"];
	Node0x13e4010[shape=record, label="  %41 = and i32 %38, %0"];
	Node0x13e4080[shape=record, label="  %42 = add i32 %9, %34"];
	Node0x13e4120[shape=record, label="  %43 = mul i32 %42, -10"];
	Node0x13e4190[shape=record, label="  %44 = sub i32 %27, %41"];
	Node0x13e4200[shape=record, label="  %45 = mul i32 %44, 3"];
	Node0x13e4270[shape=record, label="  %46 = sub i32 %8, %28"];
	Node0x13e42e0[shape=record, label="  %47 = add i32 %46, %18"];
	Node0x13e4350[shape=record, label="  %48 = sub i32 %47, %23"];
	Node0x13e43c0[shape=record, label="  %49 = sub i32 %48, %26"];
	Node0x13e4430[shape=record, label="  %50 = add i32 %49, %35"];
	Node0x13e44a0[shape=record, label="  %51 = add i32 %50, %21"];
	Node0x13e4510[shape=record, label="  %52 = sub i32 %51, %32"];
	Node0x13e4580[shape=record, label="  %53 = add i32 %52, %37"];
	Node0x13e45f0[shape=record, label="  %54 = add i32 %53, %40"];
	Node0x13e4660[shape=record, label="  %55 = add i32 %54, %45"];
	Node0x13e46d0[shape=record, label="  %56 = add i32 %55, %43"];
	Node0x13e4740[shape=record, label="  %57 = icmp eq i32 %56, %16"];
	Node0x1383268[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x13e4be0[shape=record, label="  %59 = tail call i32 @puts(i8* nonnull dereferenceable(1) %58)"];
	Node0x13e4c30[shape=record, label="  ret void"];
	Node0x13e2c90 -> Node0x13e2d50;
	Node0x13e2d50 -> Node0x13e2dc0;
	Node0x13e2dc0 -> Node0x13e2e30;
	Node0x13e2e30 -> Node0x13e2ea0;
	Node0x13e2ea0 -> Node0x13e2f10;
	Node0x13e2f10 -> Node0x13e2f80;
	Node0x13e2f80 -> Node0x13e2ff0;
	Node0x13e2ff0 -> Node0x13e3060;
	Node0x13e3060 -> Node0x13e30d0;
	Node0x13e30d0 -> Node0x13e3140;
	Node0x13e3140 -> Node0x13e31b0;
	Node0x13e31b0 -> Node0x13e3250;
	Node0x13e3250 -> Node0x13e32c0;
	Node0x13e32c0 -> Node0x13e3330;
	Node0x13e3330 -> Node0x13e33a0;
	Node0x13e33a0 -> Node0x13e3410;
	Node0x13e3410 -> Node0x13e34b0;
	Node0x13e34b0 -> Node0x13e3520;
	Node0x13e3520 -> Node0x13e3590;
	Node0x13e3590 -> Node0x13e3600;
	Node0x13e3600 -> Node0x13e3670;
	Node0x13e3670 -> Node0x13e36e0;
	Node0x13e36e0 -> Node0x13e3750;
	Node0x13e3750 -> Node0x13e37c0;
	Node0x13e37c0 -> Node0x13e3830;
	Node0x13e3830 -> Node0x13e38a0;
	Node0x13e38a0 -> Node0x13e3910;
	Node0x13e3910 -> Node0x13e39b0;
	Node0x13e39b0 -> Node0x13e3c30;
	Node0x13e3c30 -> Node0x13e3ca0;
	Node0x13e3ca0 -> Node0x13e3d10;
	Node0x13e3d10 -> Node0x13e3d80;
	Node0x13e3d80 -> Node0x13e3e20;
	Node0x13e3e20 -> Node0x13e3e90;
	Node0x13e3e90 -> Node0x13e3f00;
	Node0x13e3f00 -> Node0x13e3fa0;
	Node0x13e3fa0 -> Node0x13e4010;
	Node0x13e4010 -> Node0x13e4080;
	Node0x13e4080 -> Node0x13e4120;
	Node0x13e4120 -> Node0x13e4190;
	Node0x13e4190 -> Node0x13e4200;
	Node0x13e4200 -> Node0x13e4270;
	Node0x13e4270 -> Node0x13e42e0;
	Node0x13e42e0 -> Node0x13e4350;
	Node0x13e4350 -> Node0x13e43c0;
	Node0x13e43c0 -> Node0x13e4430;
	Node0x13e4430 -> Node0x13e44a0;
	Node0x13e44a0 -> Node0x13e4510;
	Node0x13e4510 -> Node0x13e4580;
	Node0x13e4580 -> Node0x13e45f0;
	Node0x13e45f0 -> Node0x13e4660;
	Node0x13e4660 -> Node0x13e46d0;
	Node0x13e46d0 -> Node0x13e4740;
	Node0x13e4740 -> Node0x1383268;
	Node0x1383268 -> Node0x13e4be0;
	Node0x13e4be0 -> Node0x13e4c30;
edge [color=red]
	Node0x13e2d50 -> Node0x13e2dc0;
	Node0x13e2dc0 -> Node0x13e2e30;
	Node0x13e2ea0 -> Node0x13e2f10;
	Node0x13e2f10 -> Node0x13e2f80;
	Node0x13e2ea0 -> Node0x13e2ff0;
	Node0x13e2ff0 -> Node0x13e3060;
	Node0x13e2f80 -> Node0x13e30d0;
	Node0x13e3060 -> Node0x13e30d0;
	Node0x13e30d0 -> Node0x13e3140;
	Node0x13e3140 -> Node0x13e31b0;
	Node0x13e2e30 -> Node0x13e31b0;
	Node0x13e31b0 -> Node0x13e3250;
	Node0x13e2c90 -> Node0x13e32c0;
	Node0x13e32c0 -> Node0x13e3330;
	Node0x13e33a0 -> Node0x13e3410;
	Node0x13e2d50 -> Node0x13e3410;
	Node0x13e3410 -> Node0x13e34b0;
	Node0x13e33a0 -> Node0x13e3520;
	Node0x13e3520 -> Node0x13e3590;
	Node0x13e2ea0 -> Node0x13e3600;
	Node0x13e3670 -> Node0x13e36e0;
	Node0x13e3600 -> Node0x13e36e0;
	Node0x13e3600 -> Node0x13e3750;
	Node0x13e2c90 -> Node0x13e3750;
	Node0x13e3830 -> Node0x13e38a0;
	Node0x13e38a0 -> Node0x13e3910;
	Node0x13e2d50 -> Node0x13e3910;
	Node0x13e3910 -> Node0x13e39b0;
	Node0x13e2c90 -> Node0x13e3c30;
	Node0x13e3c30 -> Node0x13e3ca0;
	Node0x13e2d50 -> Node0x13e3ca0;
	Node0x13e38a0 -> Node0x13e3d10;
	Node0x13e3c30 -> Node0x13e3d80;
	Node0x13e3d80 -> Node0x13e3e20;
	Node0x13e3e90 -> Node0x13e3f00;
	Node0x13e2d50 -> Node0x13e3f00;
	Node0x13e3f00 -> Node0x13e3fa0;
	Node0x13e3e90 -> Node0x13e4010;
	Node0x13e2f10 -> Node0x13e4080;
	Node0x13e3ca0 -> Node0x13e4080;
	Node0x13e4080 -> Node0x13e4120;
	Node0x13e3750 -> Node0x13e4190;
	Node0x13e4010 -> Node0x13e4190;
	Node0x13e4190 -> Node0x13e4200;
	Node0x13e2ea0 -> Node0x13e4270;
	Node0x13e37c0 -> Node0x13e4270;
	Node0x13e4270 -> Node0x13e42e0;
	Node0x13e3330 -> Node0x13e42e0;
	Node0x13e42e0 -> Node0x13e4350;
	Node0x13e3590 -> Node0x13e4350;
	Node0x13e4350 -> Node0x13e43c0;
	Node0x13e36e0 -> Node0x13e43c0;
	Node0x13e43c0 -> Node0x13e4430;
	Node0x13e3d10 -> Node0x13e4430;
	Node0x13e4430 -> Node0x13e44a0;
	Node0x13e34b0 -> Node0x13e44a0;
	Node0x13e44a0 -> Node0x13e4510;
	Node0x13e39b0 -> Node0x13e4510;
	Node0x13e4510 -> Node0x13e4580;
	Node0x13e3e20 -> Node0x13e4580;
	Node0x13e4580 -> Node0x13e45f0;
	Node0x13e3fa0 -> Node0x13e45f0;
	Node0x13e45f0 -> Node0x13e4660;
	Node0x13e4200 -> Node0x13e4660;
	Node0x13e4660 -> Node0x13e46d0;
	Node0x13e4120 -> Node0x13e46d0;
	Node0x13e46d0 -> Node0x13e4740;
	Node0x13e3250 -> Node0x13e4740;
	Node0x13e4740 -> Node0x1383268;
	Node0x1383268 -> Node0x13e4be0;
}
