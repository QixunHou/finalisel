digraph "DFG for'main' function" {
	Node0x24a0d58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x24a0dd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x24a0e68[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x24a12c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24a13a8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x24a14c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24a1700[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x24a17b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x24a2728[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x24a2db0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x24a2e20[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x24a2e90[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x24a2f00[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x24a2f70[shape=record, label="  %12 = mul i32 %11, 3"];
	Node0x24a2fe0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x24a3050[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x24a30c0[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x24a3130[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0x24a31a0[shape=record, label="  %17 = mul i32 %16, -6"];
	Node0x24a3210[shape=record, label="  %18 = shl i32 %9, 1"];
	Node0x24a3280[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x24a32f0[shape=record, label="  %20 = shl i32 %13, 2"];
	Node0x24a3360[shape=record, label="  %21 = shl i32 %6, 1"];
	Node0x24a33d0[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x24a3440[shape=record, label="  %23 = add i32 %22, %7"];
	Node0x24a34b0[shape=record, label="  %24 = add i32 %23, %9"];
	Node0x24a3520[shape=record, label="  %25 = sub i32 %24, %10"];
	Node0x24a3590[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x24a3600[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x24a3670[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x24a36e0[shape=record, label="  %29 = sub i32 %28, %20"];
	Node0x24a3750[shape=record, label="  %30 = sub i32 %29, %19"];
	Node0x24a37c0[shape=record, label="  %31 = icmp eq i32 %30, -1"];
	Node0x24419d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x24a3a60[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x24a3cb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24a3e18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24a3ed8[shape=record, label="  ret i32 0"];
	Node0x24a0d58 -> Node0x24a0dd8;
	Node0x24a0dd8 -> Node0x24a0e68;
	Node0x24a0e68 -> Node0x24a12c8;
	Node0x24a12c8 -> Node0x24a13a8;
	Node0x24a13a8 -> Node0x24a14c8;
	Node0x24a14c8 -> Node0x24a1700;
	Node0x24a1700 -> Node0x24a17b8;
	Node0x24a17b8 -> Node0x24a2728;
	Node0x24a2728 -> Node0x24a2db0;
	Node0x24a2db0 -> Node0x24a2e20;
	Node0x24a2e20 -> Node0x24a2e90;
	Node0x24a2e90 -> Node0x24a2f00;
	Node0x24a2f00 -> Node0x24a2f70;
	Node0x24a2f70 -> Node0x24a2fe0;
	Node0x24a2fe0 -> Node0x24a3050;
	Node0x24a3050 -> Node0x24a30c0;
	Node0x24a30c0 -> Node0x24a3130;
	Node0x24a3130 -> Node0x24a31a0;
	Node0x24a31a0 -> Node0x24a3210;
	Node0x24a3210 -> Node0x24a3280;
	Node0x24a3280 -> Node0x24a32f0;
	Node0x24a32f0 -> Node0x24a3360;
	Node0x24a3360 -> Node0x24a33d0;
	Node0x24a33d0 -> Node0x24a3440;
	Node0x24a3440 -> Node0x24a34b0;
	Node0x24a34b0 -> Node0x24a3520;
	Node0x24a3520 -> Node0x24a3590;
	Node0x24a3590 -> Node0x24a3600;
	Node0x24a3600 -> Node0x24a3670;
	Node0x24a3670 -> Node0x24a36e0;
	Node0x24a36e0 -> Node0x24a3750;
	Node0x24a3750 -> Node0x24a37c0;
	Node0x24a37c0 -> Node0x24419d8;
	Node0x24419d8 -> Node0x24a3a60;
	Node0x24a3a60 -> Node0x24a3cb8;
	Node0x24a3cb8 -> Node0x24a3e18;
	Node0x24a3e18 -> Node0x24a3ed8;
edge [color=red]
	Node0x24a0d58 -> Node0x24a0e68;
	Node0x24a0e68 -> Node0x24a12c8;
	Node0x24a0dd8 -> Node0x24a13a8;
	Node0x24a13a8 -> Node0x24a14c8;
	Node0x24a0d58 -> Node0x24a1700;
	Node0x24a0dd8 -> Node0x24a1700;
	Node0x24a0d58 -> Node0x24a17b8;
	Node0x24a0dd8 -> Node0x24a2728;
	Node0x24a2728 -> Node0x24a2db0;
	Node0x24a17b8 -> Node0x24a2e20;
	Node0x24a2db0 -> Node0x24a2e20;
	Node0x24a2728 -> Node0x24a2e90;
	Node0x24a17b8 -> Node0x24a2e90;
	Node0x24a2e90 -> Node0x24a2f00;
	Node0x24a2f00 -> Node0x24a2f70;
	Node0x24a2728 -> Node0x24a2fe0;
	Node0x24a17b8 -> Node0x24a2fe0;
	Node0x24a2fe0 -> Node0x24a3050;
	Node0x24a2728 -> Node0x24a30c0;
	Node0x24a17b8 -> Node0x24a30c0;
	Node0x24a30c0 -> Node0x24a3130;
	Node0x24a3130 -> Node0x24a31a0;
	Node0x24a2e20 -> Node0x24a3210;
	Node0x24a3210 -> Node0x24a3280;
	Node0x24a2fe0 -> Node0x24a32f0;
	Node0x24a17b8 -> Node0x24a3360;
	Node0x24a3360 -> Node0x24a33d0;
	Node0x24a33d0 -> Node0x24a3440;
	Node0x24a2728 -> Node0x24a3440;
	Node0x24a3440 -> Node0x24a34b0;
	Node0x24a2e20 -> Node0x24a34b0;
	Node0x24a34b0 -> Node0x24a3520;
	Node0x24a2e90 -> Node0x24a3520;
	Node0x24a3520 -> Node0x24a3590;
	Node0x24a3050 -> Node0x24a3590;
	Node0x24a3590 -> Node0x24a3600;
	Node0x24a2f70 -> Node0x24a3600;
	Node0x24a3600 -> Node0x24a3670;
	Node0x24a31a0 -> Node0x24a3670;
	Node0x24a3670 -> Node0x24a36e0;
	Node0x24a32f0 -> Node0x24a36e0;
	Node0x24a36e0 -> Node0x24a3750;
	Node0x24a3280 -> Node0x24a3750;
	Node0x24a3750 -> Node0x24a37c0;
	Node0x24a37c0 -> Node0x24419d8;
	Node0x24419d8 -> Node0x24a3a60;
	Node0x24a13a8 -> Node0x24a3cb8;
	Node0x24a0e68 -> Node0x24a3e18;
}
