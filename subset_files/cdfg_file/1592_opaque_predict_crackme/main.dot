digraph "DFG for'main' function" {
	Node0xc57f78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc57ff8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc58088[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xc584e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc585c8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xc586e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc58920[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xc589d8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc59948[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc59fd0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0xc5a040[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xc5a0b0[shape=record, label="  %10 = add i32 %6, %9"];
	Node0xc5a120[shape=record, label="  %11 = sub i32 0, %10"];
	Node0xc5a190[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0xc5a200[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xc5a270[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0xc5a2e0[shape=record, label="  %15 = shl i32 %12, 1"];
	Node0xc5a350[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0xc5a3c0[shape=record, label="  %17 = or i32 %7, %6"];
	Node0xc5a430[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0xc5a4a0[shape=record, label="  %19 = xor i32 %6, 2147483647"];
	Node0xc5a510[shape=record, label="  %20 = and i32 %19, %7"];
	Node0xc5a580[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0xc5a5f0[shape=record, label="  %22 = and i32 %6, %8"];
	Node0xc5a660[shape=record, label="  %23 = mul i32 %13, -6"];
	Node0xc5a6d0[shape=record, label="  %24 = add i32 %22, %18"];
	Node0xc5a740[shape=record, label="  %25 = mul i32 %24, -5"];
	Node0xc5a7b0[shape=record, label="  %26 = add i32 %7, %6"];
	Node0xc5a820[shape=record, label="  %27 = sub i32 %26, %12"];
	Node0xc5a890[shape=record, label="  %28 = add i32 %27, %14"];
	Node0xc5a900[shape=record, label="  %29 = add i32 %28, %17"];
	Node0xc5a970[shape=record, label="  %30 = sub i32 %29, %21"];
	Node0xc5a9e0[shape=record, label="  %31 = add i32 %30, %23"];
	Node0xc5aa50[shape=record, label="  %32 = add i32 %31, %16"];
	Node0xc5acd0[shape=record, label="  %33 = add i32 %32, %25"];
	Node0xc5ad40[shape=record, label="  %34 = icmp eq i32 %33, %11"];
	Node0xbf89d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc5add0[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0xc5b028[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc5b188[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xc5b248[shape=record, label="  ret i32 0"];
	Node0xc57f78 -> Node0xc57ff8;
	Node0xc57ff8 -> Node0xc58088;
	Node0xc58088 -> Node0xc584e8;
	Node0xc584e8 -> Node0xc585c8;
	Node0xc585c8 -> Node0xc586e8;
	Node0xc586e8 -> Node0xc58920;
	Node0xc58920 -> Node0xc589d8;
	Node0xc589d8 -> Node0xc59948;
	Node0xc59948 -> Node0xc59fd0;
	Node0xc59fd0 -> Node0xc5a040;
	Node0xc5a040 -> Node0xc5a0b0;
	Node0xc5a0b0 -> Node0xc5a120;
	Node0xc5a120 -> Node0xc5a190;
	Node0xc5a190 -> Node0xc5a200;
	Node0xc5a200 -> Node0xc5a270;
	Node0xc5a270 -> Node0xc5a2e0;
	Node0xc5a2e0 -> Node0xc5a350;
	Node0xc5a350 -> Node0xc5a3c0;
	Node0xc5a3c0 -> Node0xc5a430;
	Node0xc5a430 -> Node0xc5a4a0;
	Node0xc5a4a0 -> Node0xc5a510;
	Node0xc5a510 -> Node0xc5a580;
	Node0xc5a580 -> Node0xc5a5f0;
	Node0xc5a5f0 -> Node0xc5a660;
	Node0xc5a660 -> Node0xc5a6d0;
	Node0xc5a6d0 -> Node0xc5a740;
	Node0xc5a740 -> Node0xc5a7b0;
	Node0xc5a7b0 -> Node0xc5a820;
	Node0xc5a820 -> Node0xc5a890;
	Node0xc5a890 -> Node0xc5a900;
	Node0xc5a900 -> Node0xc5a970;
	Node0xc5a970 -> Node0xc5a9e0;
	Node0xc5a9e0 -> Node0xc5aa50;
	Node0xc5aa50 -> Node0xc5acd0;
	Node0xc5acd0 -> Node0xc5ad40;
	Node0xc5ad40 -> Node0xbf89d8;
	Node0xbf89d8 -> Node0xc5add0;
	Node0xc5add0 -> Node0xc5b028;
	Node0xc5b028 -> Node0xc5b188;
	Node0xc5b188 -> Node0xc5b248;
edge [color=red]
	Node0xc57f78 -> Node0xc58088;
	Node0xc58088 -> Node0xc584e8;
	Node0xc57ff8 -> Node0xc585c8;
	Node0xc585c8 -> Node0xc586e8;
	Node0xc57f78 -> Node0xc58920;
	Node0xc57ff8 -> Node0xc58920;
	Node0xc57f78 -> Node0xc589d8;
	Node0xc57ff8 -> Node0xc59948;
	Node0xc59948 -> Node0xc59fd0;
	Node0xc59fd0 -> Node0xc5a040;
	Node0xc589d8 -> Node0xc5a0b0;
	Node0xc5a040 -> Node0xc5a0b0;
	Node0xc5a0b0 -> Node0xc5a120;
	Node0xc59948 -> Node0xc5a190;
	Node0xc589d8 -> Node0xc5a190;
	Node0xc59948 -> Node0xc5a200;
	Node0xc589d8 -> Node0xc5a200;
	Node0xc5a200 -> Node0xc5a270;
	Node0xc5a190 -> Node0xc5a2e0;
	Node0xc5a2e0 -> Node0xc5a350;
	Node0xc59948 -> Node0xc5a3c0;
	Node0xc589d8 -> Node0xc5a3c0;
	Node0xc5a3c0 -> Node0xc5a430;
	Node0xc589d8 -> Node0xc5a4a0;
	Node0xc5a4a0 -> Node0xc5a510;
	Node0xc59948 -> Node0xc5a510;
	Node0xc5a510 -> Node0xc5a580;
	Node0xc589d8 -> Node0xc5a5f0;
	Node0xc59fd0 -> Node0xc5a5f0;
	Node0xc5a200 -> Node0xc5a660;
	Node0xc5a5f0 -> Node0xc5a6d0;
	Node0xc5a430 -> Node0xc5a6d0;
	Node0xc5a6d0 -> Node0xc5a740;
	Node0xc59948 -> Node0xc5a7b0;
	Node0xc589d8 -> Node0xc5a7b0;
	Node0xc5a7b0 -> Node0xc5a820;
	Node0xc5a190 -> Node0xc5a820;
	Node0xc5a820 -> Node0xc5a890;
	Node0xc5a270 -> Node0xc5a890;
	Node0xc5a890 -> Node0xc5a900;
	Node0xc5a3c0 -> Node0xc5a900;
	Node0xc5a900 -> Node0xc5a970;
	Node0xc5a580 -> Node0xc5a970;
	Node0xc5a970 -> Node0xc5a9e0;
	Node0xc5a660 -> Node0xc5a9e0;
	Node0xc5a9e0 -> Node0xc5aa50;
	Node0xc5a350 -> Node0xc5aa50;
	Node0xc5aa50 -> Node0xc5acd0;
	Node0xc5a740 -> Node0xc5acd0;
	Node0xc5acd0 -> Node0xc5ad40;
	Node0xc5a120 -> Node0xc5ad40;
	Node0xc5ad40 -> Node0xbf89d8;
	Node0xbf89d8 -> Node0xc5add0;
	Node0xc585c8 -> Node0xc5b028;
	Node0xc58088 -> Node0xc5b188;
}
