digraph "DFG for'crackme' function" {
	Node0x906f10[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x906f80[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x906ff0[shape=record, label="  %7 = add i32 %6, %3"];
	Node0x907060[shape=record, label="  %8 = xor i32 %1, -1"];
	Node0x9070d0[shape=record, label="  %9 = and i32 %5, %1"];
	Node0x907140[shape=record, label="  %10 = xor i32 %2, %1"];
	Node0x9071b0[shape=record, label="  %11 = and i32 %2, %1"];
	Node0x907220[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x9072c0[shape=record, label="  %13 = shl i32 %5, 1"];
	Node0x907360[shape=record, label="  %14 = shl i32 %9, 2"];
	Node0x9073d0[shape=record, label="  %15 = xor i32 %0, -1"];
	Node0x907440[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x9074b0[shape=record, label="  %17 = xor i32 %3, %0"];
	Node0x907520[shape=record, label="  %18 = or i32 %15, %3"];
	Node0x907590[shape=record, label="  %19 = sub i32 %18, %10"];
	Node0x907600[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x907670[shape=record, label="  %21 = sub i32 %8, %0"];
	Node0x9076e0[shape=record, label="  %22 = sub i32 %21, %1"];
	Node0x907750[shape=record, label="  %23 = sub i32 %22, %16"];
	Node0x9077c0[shape=record, label="  %24 = add i32 %23, %2"];
	Node0x907830[shape=record, label="  %25 = add i32 %24, %9"];
	Node0x9078a0[shape=record, label="  %26 = sub i32 %25, %10"];
	Node0x907910[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x907980[shape=record, label="  %28 = sub i32 %27, %13"];
	Node0x9079f0[shape=record, label="  %29 = add i32 %28, %6"];
	Node0x907a60[shape=record, label="  %30 = add i32 %29, %14"];
	Node0x907ad0[shape=record, label="  %31 = add i32 %30, %17"];
	Node0x907b40[shape=record, label="  %32 = add i32 %31, %20"];
	Node0x907dc0[shape=record, label="  %33 = icmp eq i32 %7, %32"];
	Node0x8a7268[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x908260[shape=record, label="  %35 = tail call i32 @puts(i8* nonnull dereferenceable(1) %34)"];
	Node0x9082b0[shape=record, label="  ret void"];
	Node0x906f10 -> Node0x906f80;
	Node0x906f80 -> Node0x906ff0;
	Node0x906ff0 -> Node0x907060;
	Node0x907060 -> Node0x9070d0;
	Node0x9070d0 -> Node0x907140;
	Node0x907140 -> Node0x9071b0;
	Node0x9071b0 -> Node0x907220;
	Node0x907220 -> Node0x9072c0;
	Node0x9072c0 -> Node0x907360;
	Node0x907360 -> Node0x9073d0;
	Node0x9073d0 -> Node0x907440;
	Node0x907440 -> Node0x9074b0;
	Node0x9074b0 -> Node0x907520;
	Node0x907520 -> Node0x907590;
	Node0x907590 -> Node0x907600;
	Node0x907600 -> Node0x907670;
	Node0x907670 -> Node0x9076e0;
	Node0x9076e0 -> Node0x907750;
	Node0x907750 -> Node0x9077c0;
	Node0x9077c0 -> Node0x907830;
	Node0x907830 -> Node0x9078a0;
	Node0x9078a0 -> Node0x907910;
	Node0x907910 -> Node0x907980;
	Node0x907980 -> Node0x9079f0;
	Node0x9079f0 -> Node0x907a60;
	Node0x907a60 -> Node0x907ad0;
	Node0x907ad0 -> Node0x907b40;
	Node0x907b40 -> Node0x907dc0;
	Node0x907dc0 -> Node0x8a7268;
	Node0x8a7268 -> Node0x908260;
	Node0x908260 -> Node0x9082b0;
edge [color=red]
	Node0x906f10 -> Node0x906f80;
	Node0x906f80 -> Node0x906ff0;
	Node0x906f10 -> Node0x9070d0;
	Node0x9071b0 -> Node0x907220;
	Node0x906f10 -> Node0x9072c0;
	Node0x9070d0 -> Node0x907360;
	Node0x9073d0 -> Node0x907440;
	Node0x9073d0 -> Node0x907520;
	Node0x907520 -> Node0x907590;
	Node0x907140 -> Node0x907590;
	Node0x907590 -> Node0x907600;
	Node0x907060 -> Node0x907670;
	Node0x907670 -> Node0x9076e0;
	Node0x9076e0 -> Node0x907750;
	Node0x907440 -> Node0x907750;
	Node0x907750 -> Node0x9077c0;
	Node0x9077c0 -> Node0x907830;
	Node0x9070d0 -> Node0x907830;
	Node0x907830 -> Node0x9078a0;
	Node0x907140 -> Node0x9078a0;
	Node0x9078a0 -> Node0x907910;
	Node0x907220 -> Node0x907910;
	Node0x907910 -> Node0x907980;
	Node0x9072c0 -> Node0x907980;
	Node0x907980 -> Node0x9079f0;
	Node0x906f80 -> Node0x9079f0;
	Node0x9079f0 -> Node0x907a60;
	Node0x907360 -> Node0x907a60;
	Node0x907a60 -> Node0x907ad0;
	Node0x9074b0 -> Node0x907ad0;
	Node0x907ad0 -> Node0x907b40;
	Node0x907600 -> Node0x907b40;
	Node0x906ff0 -> Node0x907dc0;
	Node0x907b40 -> Node0x907dc0;
	Node0x907dc0 -> Node0x8a7268;
	Node0x8a7268 -> Node0x908260;
}
