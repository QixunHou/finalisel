digraph "DFG for'crackme' function" {
	Node0x1572d90[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1572e00[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x1572ea0[shape=record, label="  %7 = add i32 %6, 1"];
	Node0x1572f10[shape=record, label="  %8 = or i32 %3, %0"];
	Node0x1572f80[shape=record, label="  %9 = sub i32 %7, %8"];
	Node0x1572ff0[shape=record, label="  %10 = shl i32 %3, 1"];
	Node0x1573090[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x1573100[shape=record, label="  %12 = sub i32 %9, %11"];
	Node0x1573170[shape=record, label="  %13 = or i32 %2, %1"];
	Node0x15731e0[shape=record, label="  %14 = mul i32 %13, -2"];
	Node0x1573250[shape=record, label="  %15 = add i32 %2, 1"];
	Node0x15732c0[shape=record, label="  %16 = xor i32 %1, -1"];
	Node0x1573330[shape=record, label="  %17 = xor i32 %2, %1"];
	Node0x15733a0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x1573410[shape=record, label="  %19 = xor i32 %13, -1"];
	Node0x1573480[shape=record, label="  %20 = and i32 %16, %2"];
	Node0x1573520[shape=record, label="  %21 = mul i32 %20, 6"];
	Node0x15735c0[shape=record, label="  %22 = mul i32 %6, 9"];
	Node0x1573630[shape=record, label="  %23 = and i32 %2, %1"];
	Node0x15736a0[shape=record, label="  %24 = shl i32 %0, 1"];
	Node0x1573710[shape=record, label="  %25 = xor i32 %3, %0"];
	Node0x1573780[shape=record, label="  %26 = xor i32 %0, -1"];
	Node0x15737f0[shape=record, label="  %27 = or i32 %26, %3"];
	Node0x1573860[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x15738d0[shape=record, label="  %29 = xor i32 %25, -1"];
	Node0x1573940[shape=record, label="  %30 = add i32 %8, 1"];
	Node0x15739b0[shape=record, label="  %31 = add i32 %27, 1"];
	Node0x1573a20[shape=record, label="  %32 = and i32 %26, %3"];
	Node0x1573ca0[shape=record, label="  %33 = and i32 %3, %0"];
	Node0x1573d10[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x1573d80[shape=record, label="  %35 = sub i32 %19, %25"];
	Node0x1573df0[shape=record, label="  %36 = add i32 %35, %31"];
	Node0x1573e90[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x1573f00[shape=record, label="  %38 = add i32 %30, %23"];
	Node0x1573fa0[shape=record, label="  %39 = mul i32 %38, 5"];
	Node0x1574010[shape=record, label="  %40 = add i32 %16, %0"];
	Node0x1574080[shape=record, label="  %41 = sub i32 %40, %24"];
	Node0x15740f0[shape=record, label="  %42 = add i32 %41, %15"];
	Node0x1574160[shape=record, label="  %43 = sub i32 %42, %3"];
	Node0x15741d0[shape=record, label="  %44 = add i32 %43, %14"];
	Node0x1574240[shape=record, label="  %45 = sub i32 %44, %18"];
	Node0x15742b0[shape=record, label="  %46 = add i32 %45, %21"];
	Node0x1574320[shape=record, label="  %47 = add i32 %46, %22"];
	Node0x1574390[shape=record, label="  %48 = add i32 %47, %29"];
	Node0x1574400[shape=record, label="  %49 = add i32 %48, %32"];
	Node0x1574470[shape=record, label="  %50 = sub i32 %49, %28"];
	Node0x15744e0[shape=record, label="  %51 = sub i32 %50, %34"];
	Node0x1574550[shape=record, label="  %52 = add i32 %51, %39"];
	Node0x15745c0[shape=record, label="  %53 = add i32 %52, %37"];
	Node0x1574630[shape=record, label="  %54 = icmp eq i32 %12, %53"];
	Node0x1513268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1574ad0[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0x1574b20[shape=record, label="  ret void"];
	Node0x1572d90 -> Node0x1572e00;
	Node0x1572e00 -> Node0x1572ea0;
	Node0x1572ea0 -> Node0x1572f10;
	Node0x1572f10 -> Node0x1572f80;
	Node0x1572f80 -> Node0x1572ff0;
	Node0x1572ff0 -> Node0x1573090;
	Node0x1573090 -> Node0x1573100;
	Node0x1573100 -> Node0x1573170;
	Node0x1573170 -> Node0x15731e0;
	Node0x15731e0 -> Node0x1573250;
	Node0x1573250 -> Node0x15732c0;
	Node0x15732c0 -> Node0x1573330;
	Node0x1573330 -> Node0x15733a0;
	Node0x15733a0 -> Node0x1573410;
	Node0x1573410 -> Node0x1573480;
	Node0x1573480 -> Node0x1573520;
	Node0x1573520 -> Node0x15735c0;
	Node0x15735c0 -> Node0x1573630;
	Node0x1573630 -> Node0x15736a0;
	Node0x15736a0 -> Node0x1573710;
	Node0x1573710 -> Node0x1573780;
	Node0x1573780 -> Node0x15737f0;
	Node0x15737f0 -> Node0x1573860;
	Node0x1573860 -> Node0x15738d0;
	Node0x15738d0 -> Node0x1573940;
	Node0x1573940 -> Node0x15739b0;
	Node0x15739b0 -> Node0x1573a20;
	Node0x1573a20 -> Node0x1573ca0;
	Node0x1573ca0 -> Node0x1573d10;
	Node0x1573d10 -> Node0x1573d80;
	Node0x1573d80 -> Node0x1573df0;
	Node0x1573df0 -> Node0x1573e90;
	Node0x1573e90 -> Node0x1573f00;
	Node0x1573f00 -> Node0x1573fa0;
	Node0x1573fa0 -> Node0x1574010;
	Node0x1574010 -> Node0x1574080;
	Node0x1574080 -> Node0x15740f0;
	Node0x15740f0 -> Node0x1574160;
	Node0x1574160 -> Node0x15741d0;
	Node0x15741d0 -> Node0x1574240;
	Node0x1574240 -> Node0x15742b0;
	Node0x15742b0 -> Node0x1574320;
	Node0x1574320 -> Node0x1574390;
	Node0x1574390 -> Node0x1574400;
	Node0x1574400 -> Node0x1574470;
	Node0x1574470 -> Node0x15744e0;
	Node0x15744e0 -> Node0x1574550;
	Node0x1574550 -> Node0x15745c0;
	Node0x15745c0 -> Node0x1574630;
	Node0x1574630 -> Node0x1513268;
	Node0x1513268 -> Node0x1574ad0;
	Node0x1574ad0 -> Node0x1574b20;
edge [color=red]
	Node0x1572d90 -> Node0x1572e00;
	Node0x1572e00 -> Node0x1572ea0;
	Node0x1572ea0 -> Node0x1572f80;
	Node0x1572f10 -> Node0x1572f80;
	Node0x1572ff0 -> Node0x1573090;
	Node0x1572f80 -> Node0x1573100;
	Node0x1573090 -> Node0x1573100;
	Node0x1573170 -> Node0x15731e0;
	Node0x1573330 -> Node0x15733a0;
	Node0x1573170 -> Node0x1573410;
	Node0x15732c0 -> Node0x1573480;
	Node0x1573480 -> Node0x1573520;
	Node0x1572e00 -> Node0x15735c0;
	Node0x1573780 -> Node0x15737f0;
	Node0x15737f0 -> Node0x1573860;
	Node0x1573710 -> Node0x15738d0;
	Node0x1572f10 -> Node0x1573940;
	Node0x15737f0 -> Node0x15739b0;
	Node0x1573780 -> Node0x1573a20;
	Node0x1573ca0 -> Node0x1573d10;
	Node0x1573410 -> Node0x1573d80;
	Node0x1573710 -> Node0x1573d80;
	Node0x1573d80 -> Node0x1573df0;
	Node0x15739b0 -> Node0x1573df0;
	Node0x1573df0 -> Node0x1573e90;
	Node0x1573940 -> Node0x1573f00;
	Node0x1573630 -> Node0x1573f00;
	Node0x1573f00 -> Node0x1573fa0;
	Node0x15732c0 -> Node0x1574010;
	Node0x1574010 -> Node0x1574080;
	Node0x15736a0 -> Node0x1574080;
	Node0x1574080 -> Node0x15740f0;
	Node0x1573250 -> Node0x15740f0;
	Node0x15740f0 -> Node0x1574160;
	Node0x1574160 -> Node0x15741d0;
	Node0x15731e0 -> Node0x15741d0;
	Node0x15741d0 -> Node0x1574240;
	Node0x15733a0 -> Node0x1574240;
	Node0x1574240 -> Node0x15742b0;
	Node0x1573520 -> Node0x15742b0;
	Node0x15742b0 -> Node0x1574320;
	Node0x15735c0 -> Node0x1574320;
	Node0x1574320 -> Node0x1574390;
	Node0x15738d0 -> Node0x1574390;
	Node0x1574390 -> Node0x1574400;
	Node0x1573a20 -> Node0x1574400;
	Node0x1574400 -> Node0x1574470;
	Node0x1573860 -> Node0x1574470;
	Node0x1574470 -> Node0x15744e0;
	Node0x1573d10 -> Node0x15744e0;
	Node0x15744e0 -> Node0x1574550;
	Node0x1573fa0 -> Node0x1574550;
	Node0x1574550 -> Node0x15745c0;
	Node0x1573e90 -> Node0x15745c0;
	Node0x1573100 -> Node0x1574630;
	Node0x15745c0 -> Node0x1574630;
	Node0x1574630 -> Node0x1513268;
	Node0x1513268 -> Node0x1574ad0;
}
