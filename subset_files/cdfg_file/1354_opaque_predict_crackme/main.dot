digraph "DFG for'main' function" {
	Node0x1574ce8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1574d68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1574df8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1574e58[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1574f08[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1575338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1575418[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1575518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x15755d8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1575688[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1575748[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x15757f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x156f7b0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x15759f8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1576968[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1576fd8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1577038[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1577148[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x15773a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1577508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1577618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1577728[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x15777e8[shape=record, label="  ret i32 0"];
	Node0x1574ce8 -> Node0x1574d68;
	Node0x1574d68 -> Node0x1574df8;
	Node0x1574df8 -> Node0x1574e58;
	Node0x1574e58 -> Node0x1574f08;
	Node0x1574f08 -> Node0x1575338;
	Node0x1575338 -> Node0x1575418;
	Node0x1575418 -> Node0x1575518;
	Node0x1575518 -> Node0x15755d8;
	Node0x15755d8 -> Node0x1575688;
	Node0x1575688 -> Node0x1575748;
	Node0x1575748 -> Node0x15757f8;
	Node0x15757f8 -> Node0x156f7b0;
	Node0x156f7b0 -> Node0x15759f8;
	Node0x15759f8 -> Node0x1576968;
	Node0x1576968 -> Node0x1576fd8;
	Node0x1576fd8 -> Node0x1577038;
	Node0x1577038 -> Node0x1577148;
	Node0x1577148 -> Node0x15773a8;
	Node0x15773a8 -> Node0x1577508;
	Node0x1577508 -> Node0x1577618;
	Node0x1577618 -> Node0x1577728;
	Node0x1577728 -> Node0x15777e8;
edge [color=red]
	Node0x1574ce8 -> Node0x1574f08;
	Node0x1574f08 -> Node0x1575338;
	Node0x1574d68 -> Node0x1575418;
	Node0x1575418 -> Node0x1575518;
	Node0x1574df8 -> Node0x15755d8;
	Node0x15755d8 -> Node0x1575688;
	Node0x1574e58 -> Node0x1575748;
	Node0x1575748 -> Node0x15757f8;
	Node0x1574ce8 -> Node0x156f7b0;
	Node0x1574d68 -> Node0x156f7b0;
	Node0x1574df8 -> Node0x156f7b0;
	Node0x1574e58 -> Node0x156f7b0;
	Node0x1574ce8 -> Node0x15759f8;
	Node0x1574d68 -> Node0x1576968;
	Node0x1574df8 -> Node0x1576fd8;
	Node0x1574e58 -> Node0x1577038;
	Node0x15759f8 -> Node0x1577148;
	Node0x1576968 -> Node0x1577148;
	Node0x1576fd8 -> Node0x1577148;
	Node0x1577038 -> Node0x1577148;
	Node0x1575748 -> Node0x15773a8;
	Node0x15755d8 -> Node0x1577508;
	Node0x1575418 -> Node0x1577618;
	Node0x1574f08 -> Node0x1577728;
}
