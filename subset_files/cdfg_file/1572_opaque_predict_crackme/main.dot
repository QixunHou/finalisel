digraph "DFG for'main' function" {
	Node0x879e38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x879eb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x879f48[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x879fa8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x87a428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x87a508[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x87a608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x87a6c8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x87a778[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x87a9d8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x87aa98[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x87abf8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x87ac58[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x87f440[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x87f648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x87f7a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x87f8b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x87f978[shape=record, label="  ret i32 0"];
	Node0x879e38 -> Node0x879eb8;
	Node0x879eb8 -> Node0x879f48;
	Node0x879f48 -> Node0x879fa8;
	Node0x879fa8 -> Node0x87a428;
	Node0x87a428 -> Node0x87a508;
	Node0x87a508 -> Node0x87a608;
	Node0x87a608 -> Node0x87a6c8;
	Node0x87a6c8 -> Node0x87a778;
	Node0x87a778 -> Node0x87a9d8;
	Node0x87a9d8 -> Node0x87aa98;
	Node0x87aa98 -> Node0x87abf8;
	Node0x87abf8 -> Node0x87ac58;
	Node0x87ac58 -> Node0x87f440;
	Node0x87f440 -> Node0x87f648;
	Node0x87f648 -> Node0x87f7a8;
	Node0x87f7a8 -> Node0x87f8b8;
	Node0x87f8b8 -> Node0x87f978;
edge [color=red]
	Node0x879e38 -> Node0x879fa8;
	Node0x879fa8 -> Node0x87a428;
	Node0x879eb8 -> Node0x87a508;
	Node0x87a508 -> Node0x87a608;
	Node0x879f48 -> Node0x87a6c8;
	Node0x87a6c8 -> Node0x87a778;
	Node0x879e38 -> Node0x87a9d8;
	Node0x879eb8 -> Node0x87a9d8;
	Node0x879f48 -> Node0x87a9d8;
	Node0x879e38 -> Node0x87aa98;
	Node0x879eb8 -> Node0x87abf8;
	Node0x879f48 -> Node0x87ac58;
	Node0x87aa98 -> Node0x87f440;
	Node0x87abf8 -> Node0x87f440;
	Node0x87ac58 -> Node0x87f440;
	Node0x87a6c8 -> Node0x87f648;
	Node0x87a508 -> Node0x87f7a8;
	Node0x879fa8 -> Node0x87f8b8;
}
