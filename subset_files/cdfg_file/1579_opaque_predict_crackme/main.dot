digraph "DFG for'main' function" {
	Node0x1f4d988[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f4da08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f4da98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1f4def8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1f4dfd8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1f4e0f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f4e330[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1f4e3e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f4f358[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f4f9e0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x1f4fa50[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1f4fac0[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x1f4fb30[shape=record, label="  %11 = xor i32 %7, 2147483647"];
	Node0x1f4fba0[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0x1f4fc10[shape=record, label="  %13 = and i32 %11, %6"];
	Node0x1f4fc80[shape=record, label="  %14 = shl i32 %10, 2"];
	Node0x1f4fcf0[shape=record, label="  %15 = xor i32 %14, -4"];
	Node0x1f4fd60[shape=record, label="  %16 = mul i32 %8, 3"];
	Node0x1f4fdd0[shape=record, label="  %17 = sub i32 %12, %6"];
	Node0x1f4fe40[shape=record, label="  %18 = add i32 %17, %10"];
	Node0x1f4feb0[shape=record, label="  %19 = add i32 %18, %13"];
	Node0x1f4ff20[shape=record, label="  %20 = shl i32 %19, 1"];
	Node0x1f4ff90[shape=record, label="  %21 = add i32 %16, 3"];
	Node0x1f50000[shape=record, label="  %22 = add i32 %21, %15"];
	Node0x1f50070[shape=record, label="  %23 = add i32 %22, %20"];
	Node0x1f500e0[shape=record, label="  %24 = icmp eq i32 %23, %9"];
	Node0x1eee9d8[shape=record, label="  %25 = select i1 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1f50170[shape=record, label="  %26 = call i32 @puts(i8* nonnull dereferenceable(1) %25) #5"];
	Node0x1f503c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f50528[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1f505e8[shape=record, label="  ret i32 0"];
	Node0x1f4d988 -> Node0x1f4da08;
	Node0x1f4da08 -> Node0x1f4da98;
	Node0x1f4da98 -> Node0x1f4def8;
	Node0x1f4def8 -> Node0x1f4dfd8;
	Node0x1f4dfd8 -> Node0x1f4e0f8;
	Node0x1f4e0f8 -> Node0x1f4e330;
	Node0x1f4e330 -> Node0x1f4e3e8;
	Node0x1f4e3e8 -> Node0x1f4f358;
	Node0x1f4f358 -> Node0x1f4f9e0;
	Node0x1f4f9e0 -> Node0x1f4fa50;
	Node0x1f4fa50 -> Node0x1f4fac0;
	Node0x1f4fac0 -> Node0x1f4fb30;
	Node0x1f4fb30 -> Node0x1f4fba0;
	Node0x1f4fba0 -> Node0x1f4fc10;
	Node0x1f4fc10 -> Node0x1f4fc80;
	Node0x1f4fc80 -> Node0x1f4fcf0;
	Node0x1f4fcf0 -> Node0x1f4fd60;
	Node0x1f4fd60 -> Node0x1f4fdd0;
	Node0x1f4fdd0 -> Node0x1f4fe40;
	Node0x1f4fe40 -> Node0x1f4feb0;
	Node0x1f4feb0 -> Node0x1f4ff20;
	Node0x1f4ff20 -> Node0x1f4ff90;
	Node0x1f4ff90 -> Node0x1f50000;
	Node0x1f50000 -> Node0x1f50070;
	Node0x1f50070 -> Node0x1f500e0;
	Node0x1f500e0 -> Node0x1eee9d8;
	Node0x1eee9d8 -> Node0x1f50170;
	Node0x1f50170 -> Node0x1f503c8;
	Node0x1f503c8 -> Node0x1f50528;
	Node0x1f50528 -> Node0x1f505e8;
edge [color=red]
	Node0x1f4d988 -> Node0x1f4da98;
	Node0x1f4da98 -> Node0x1f4def8;
	Node0x1f4da08 -> Node0x1f4dfd8;
	Node0x1f4dfd8 -> Node0x1f4e0f8;
	Node0x1f4d988 -> Node0x1f4e330;
	Node0x1f4da08 -> Node0x1f4e330;
	Node0x1f4d988 -> Node0x1f4e3e8;
	Node0x1f4da08 -> Node0x1f4f358;
	Node0x1f4f358 -> Node0x1f4f9e0;
	Node0x1f4e3e8 -> Node0x1f4f9e0;
	Node0x1f4f9e0 -> Node0x1f4fa50;
	Node0x1f4f358 -> Node0x1f4fac0;
	Node0x1f4e3e8 -> Node0x1f4fac0;
	Node0x1f4f358 -> Node0x1f4fb30;
	Node0x1f4f358 -> Node0x1f4fba0;
	Node0x1f4e3e8 -> Node0x1f4fba0;
	Node0x1f4fb30 -> Node0x1f4fc10;
	Node0x1f4e3e8 -> Node0x1f4fc10;
	Node0x1f4fac0 -> Node0x1f4fc80;
	Node0x1f4fc80 -> Node0x1f4fcf0;
	Node0x1f4f9e0 -> Node0x1f4fd60;
	Node0x1f4fba0 -> Node0x1f4fdd0;
	Node0x1f4e3e8 -> Node0x1f4fdd0;
	Node0x1f4fdd0 -> Node0x1f4fe40;
	Node0x1f4fac0 -> Node0x1f4fe40;
	Node0x1f4fe40 -> Node0x1f4feb0;
	Node0x1f4fc10 -> Node0x1f4feb0;
	Node0x1f4feb0 -> Node0x1f4ff20;
	Node0x1f4fd60 -> Node0x1f4ff90;
	Node0x1f4ff90 -> Node0x1f50000;
	Node0x1f4fcf0 -> Node0x1f50000;
	Node0x1f50000 -> Node0x1f50070;
	Node0x1f4ff20 -> Node0x1f50070;
	Node0x1f50070 -> Node0x1f500e0;
	Node0x1f4fa50 -> Node0x1f500e0;
	Node0x1f500e0 -> Node0x1eee9d8;
	Node0x1eee9d8 -> Node0x1f50170;
	Node0x1f4dfd8 -> Node0x1f503c8;
	Node0x1f4da98 -> Node0x1f50528;
}
