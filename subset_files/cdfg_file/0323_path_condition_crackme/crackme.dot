digraph "DFG for'crackme' function" {
	Node0x1de5d70[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x1de5de0[shape=record, label="  %6 = or i32 %5, %1"];
	Node0x1de5e80[shape=record, label="  %7 = mul i32 %6, -2"];
	Node0x1de5ef0[shape=record, label="  %8 = xor i32 %3, %0"];
	Node0x1de5f60[shape=record, label="  %9 = sub i32 %7, %8"];
	Node0x1de5fd0[shape=record, label="  %10 = xor i32 %3, -1"];
	Node0x1de6040[shape=record, label="  %11 = or i32 %10, %0"];
	Node0x1de60b0[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x1de6120[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x1de6190[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1de6200[shape=record, label="  %15 = xor i32 %2, %1"];
	Node0x1de6270[shape=record, label="  %16 = or i32 %2, %1"];
	Node0x1de62e0[shape=record, label="  %17 = and i32 %5, %1"];
	Node0x1de6380[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x1de63f0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x1de6460[shape=record, label="  %20 = xor i32 %16, -1"];
	Node0x1de64d0[shape=record, label="  %21 = xor i32 %6, -1"];
	Node0x1de6570[shape=record, label="  %22 = mul i32 %21, -9"];
	Node0x1de6610[shape=record, label="  %23 = mul i32 %17, -7"];
	Node0x1de6680[shape=record, label="  %24 = xor i32 %8, -1"];
	Node0x1de66f0[shape=record, label="  %25 = and i32 %3, %0"];
	Node0x1de6760[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x1de67d0[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x1de6840[shape=record, label="  %28 = or i32 %3, %0"];
	Node0x1de68e0[shape=record, label="  %29 = xor i32 %3, 2147483647"];
	Node0x1de6950[shape=record, label="  %30 = and i32 %29, %0"];
	Node0x1de69f0[shape=record, label="  %31 = mul i32 %3, -3"];
	Node0x1de6a60[shape=record, label="  %32 = add i32 %13, %20"];
	Node0x1de6d10[shape=record, label="  %33 = mul i32 %32, -6"];
	Node0x1de6d80[shape=record, label="  %34 = add i32 %15, %3"];
	Node0x1de6e20[shape=record, label="  %35 = shl i32 %34, 2"];
	Node0x1de6e90[shape=record, label="  %36 = add i32 %30, %2"];
	Node0x1de6f00[shape=record, label="  %37 = shl i32 %36, 1"];
	Node0x1de6f70[shape=record, label="  %38 = sub i32 -2, %0"];
	Node0x1de6fe0[shape=record, label="  %39 = add i32 %38, %14"];
	Node0x1de7050[shape=record, label="  %40 = sub i32 %39, %16"];
	Node0x1de70c0[shape=record, label="  %41 = add i32 %40, %10"];
	Node0x1de7130[shape=record, label="  %42 = add i32 %41, %22"];
	Node0x1de71a0[shape=record, label="  %43 = add i32 %42, %23"];
	Node0x1de7210[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x1de7280[shape=record, label="  %45 = sub i32 %44, %28"];
	Node0x1de72f0[shape=record, label="  %46 = add i32 %45, %19"];
	Node0x1de7360[shape=record, label="  %47 = add i32 %46, %33"];
	Node0x1de73d0[shape=record, label="  %48 = add i32 %47, %35"];
	Node0x1de7440[shape=record, label="  %49 = sub i32 %48, %27"];
	Node0x1de74b0[shape=record, label="  %50 = add i32 %49, %31"];
	Node0x1de7520[shape=record, label="  %51 = add i32 %50, %37"];
	Node0x1de7590[shape=record, label="  %52 = icmp eq i32 %12, %51"];
	Node0x1d86268[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1de7a30[shape=record, label="  %54 = tail call i32 @puts(i8* nonnull dereferenceable(1) %53)"];
	Node0x1de7a80[shape=record, label="  ret void"];
	Node0x1de5d70 -> Node0x1de5de0;
	Node0x1de5de0 -> Node0x1de5e80;
	Node0x1de5e80 -> Node0x1de5ef0;
	Node0x1de5ef0 -> Node0x1de5f60;
	Node0x1de5f60 -> Node0x1de5fd0;
	Node0x1de5fd0 -> Node0x1de6040;
	Node0x1de6040 -> Node0x1de60b0;
	Node0x1de60b0 -> Node0x1de6120;
	Node0x1de6120 -> Node0x1de6190;
	Node0x1de6190 -> Node0x1de6200;
	Node0x1de6200 -> Node0x1de6270;
	Node0x1de6270 -> Node0x1de62e0;
	Node0x1de62e0 -> Node0x1de6380;
	Node0x1de6380 -> Node0x1de63f0;
	Node0x1de63f0 -> Node0x1de6460;
	Node0x1de6460 -> Node0x1de64d0;
	Node0x1de64d0 -> Node0x1de6570;
	Node0x1de6570 -> Node0x1de6610;
	Node0x1de6610 -> Node0x1de6680;
	Node0x1de6680 -> Node0x1de66f0;
	Node0x1de66f0 -> Node0x1de6760;
	Node0x1de6760 -> Node0x1de67d0;
	Node0x1de67d0 -> Node0x1de6840;
	Node0x1de6840 -> Node0x1de68e0;
	Node0x1de68e0 -> Node0x1de6950;
	Node0x1de6950 -> Node0x1de69f0;
	Node0x1de69f0 -> Node0x1de6a60;
	Node0x1de6a60 -> Node0x1de6d10;
	Node0x1de6d10 -> Node0x1de6d80;
	Node0x1de6d80 -> Node0x1de6e20;
	Node0x1de6e20 -> Node0x1de6e90;
	Node0x1de6e90 -> Node0x1de6f00;
	Node0x1de6f00 -> Node0x1de6f70;
	Node0x1de6f70 -> Node0x1de6fe0;
	Node0x1de6fe0 -> Node0x1de7050;
	Node0x1de7050 -> Node0x1de70c0;
	Node0x1de70c0 -> Node0x1de7130;
	Node0x1de7130 -> Node0x1de71a0;
	Node0x1de71a0 -> Node0x1de7210;
	Node0x1de7210 -> Node0x1de7280;
	Node0x1de7280 -> Node0x1de72f0;
	Node0x1de72f0 -> Node0x1de7360;
	Node0x1de7360 -> Node0x1de73d0;
	Node0x1de73d0 -> Node0x1de7440;
	Node0x1de7440 -> Node0x1de74b0;
	Node0x1de74b0 -> Node0x1de7520;
	Node0x1de7520 -> Node0x1de7590;
	Node0x1de7590 -> Node0x1d86268;
	Node0x1d86268 -> Node0x1de7a30;
	Node0x1de7a30 -> Node0x1de7a80;
edge [color=red]
	Node0x1de5d70 -> Node0x1de5de0;
	Node0x1de5de0 -> Node0x1de5e80;
	Node0x1de5e80 -> Node0x1de5f60;
	Node0x1de5ef0 -> Node0x1de5f60;
	Node0x1de5fd0 -> Node0x1de6040;
	Node0x1de5f60 -> Node0x1de60b0;
	Node0x1de6040 -> Node0x1de60b0;
	Node0x1de6120 -> Node0x1de6190;
	Node0x1de5d70 -> Node0x1de62e0;
	Node0x1de62e0 -> Node0x1de6380;
	Node0x1de6380 -> Node0x1de63f0;
	Node0x1de6270 -> Node0x1de6460;
	Node0x1de5de0 -> Node0x1de64d0;
	Node0x1de64d0 -> Node0x1de6570;
	Node0x1de62e0 -> Node0x1de6610;
	Node0x1de5ef0 -> Node0x1de6680;
	Node0x1de66f0 -> Node0x1de6760;
	Node0x1de6760 -> Node0x1de67d0;
	Node0x1de68e0 -> Node0x1de6950;
	Node0x1de6120 -> Node0x1de6a60;
	Node0x1de6460 -> Node0x1de6a60;
	Node0x1de6a60 -> Node0x1de6d10;
	Node0x1de6200 -> Node0x1de6d80;
	Node0x1de6d80 -> Node0x1de6e20;
	Node0x1de6950 -> Node0x1de6e90;
	Node0x1de6e90 -> Node0x1de6f00;
	Node0x1de6f70 -> Node0x1de6fe0;
	Node0x1de6190 -> Node0x1de6fe0;
	Node0x1de6fe0 -> Node0x1de7050;
	Node0x1de6270 -> Node0x1de7050;
	Node0x1de7050 -> Node0x1de70c0;
	Node0x1de5fd0 -> Node0x1de70c0;
	Node0x1de70c0 -> Node0x1de7130;
	Node0x1de6570 -> Node0x1de7130;
	Node0x1de7130 -> Node0x1de71a0;
	Node0x1de6610 -> Node0x1de71a0;
	Node0x1de71a0 -> Node0x1de7210;
	Node0x1de6680 -> Node0x1de7210;
	Node0x1de7210 -> Node0x1de7280;
	Node0x1de6840 -> Node0x1de7280;
	Node0x1de7280 -> Node0x1de72f0;
	Node0x1de63f0 -> Node0x1de72f0;
	Node0x1de72f0 -> Node0x1de7360;
	Node0x1de6d10 -> Node0x1de7360;
	Node0x1de7360 -> Node0x1de73d0;
	Node0x1de6e20 -> Node0x1de73d0;
	Node0x1de73d0 -> Node0x1de7440;
	Node0x1de67d0 -> Node0x1de7440;
	Node0x1de7440 -> Node0x1de74b0;
	Node0x1de69f0 -> Node0x1de74b0;
	Node0x1de74b0 -> Node0x1de7520;
	Node0x1de6f00 -> Node0x1de7520;
	Node0x1de60b0 -> Node0x1de7590;
	Node0x1de7520 -> Node0x1de7590;
	Node0x1de7590 -> Node0x1d86268;
	Node0x1d86268 -> Node0x1de7a30;
}
