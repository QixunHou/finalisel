digraph "DFG for'main' function" {
	Node0x1de7c48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1de7cc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1de7d58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1de7db8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1de7e68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1de8298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1de8378[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1de8478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1de8538[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1de85e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1de86a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1de8758[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1de2790[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1de8958[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1de98c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1de9f38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1de9f98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1dea0a8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1dea308[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1dea468[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1dea578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1dea688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1dea748[shape=record, label="  ret i32 0"];
	Node0x1de7c48 -> Node0x1de7cc8;
	Node0x1de7cc8 -> Node0x1de7d58;
	Node0x1de7d58 -> Node0x1de7db8;
	Node0x1de7db8 -> Node0x1de7e68;
	Node0x1de7e68 -> Node0x1de8298;
	Node0x1de8298 -> Node0x1de8378;
	Node0x1de8378 -> Node0x1de8478;
	Node0x1de8478 -> Node0x1de8538;
	Node0x1de8538 -> Node0x1de85e8;
	Node0x1de85e8 -> Node0x1de86a8;
	Node0x1de86a8 -> Node0x1de8758;
	Node0x1de8758 -> Node0x1de2790;
	Node0x1de2790 -> Node0x1de8958;
	Node0x1de8958 -> Node0x1de98c8;
	Node0x1de98c8 -> Node0x1de9f38;
	Node0x1de9f38 -> Node0x1de9f98;
	Node0x1de9f98 -> Node0x1dea0a8;
	Node0x1dea0a8 -> Node0x1dea308;
	Node0x1dea308 -> Node0x1dea468;
	Node0x1dea468 -> Node0x1dea578;
	Node0x1dea578 -> Node0x1dea688;
	Node0x1dea688 -> Node0x1dea748;
edge [color=red]
	Node0x1de7c48 -> Node0x1de7e68;
	Node0x1de7e68 -> Node0x1de8298;
	Node0x1de7cc8 -> Node0x1de8378;
	Node0x1de8378 -> Node0x1de8478;
	Node0x1de7d58 -> Node0x1de8538;
	Node0x1de8538 -> Node0x1de85e8;
	Node0x1de7db8 -> Node0x1de86a8;
	Node0x1de86a8 -> Node0x1de8758;
	Node0x1de7c48 -> Node0x1de2790;
	Node0x1de7cc8 -> Node0x1de2790;
	Node0x1de7d58 -> Node0x1de2790;
	Node0x1de7db8 -> Node0x1de2790;
	Node0x1de7c48 -> Node0x1de8958;
	Node0x1de7cc8 -> Node0x1de98c8;
	Node0x1de7d58 -> Node0x1de9f38;
	Node0x1de7db8 -> Node0x1de9f98;
	Node0x1de8958 -> Node0x1dea0a8;
	Node0x1de98c8 -> Node0x1dea0a8;
	Node0x1de9f38 -> Node0x1dea0a8;
	Node0x1de9f98 -> Node0x1dea0a8;
	Node0x1de86a8 -> Node0x1dea308;
	Node0x1de8538 -> Node0x1dea468;
	Node0x1de8378 -> Node0x1dea578;
	Node0x1de7e68 -> Node0x1dea688;
}
