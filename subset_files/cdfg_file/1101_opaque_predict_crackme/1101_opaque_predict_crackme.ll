; ModuleID = '../.././c_source_file/1101_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1101_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %1, %0
  %10 = xor i32 %9, -1
  %11 = and i32 %8, %10
  %12 = xor i32 %3, -1
  %13 = and i32 %12, %4
  %14 = xor i32 %13, %5
  %15 = add i32 %14, %11
  %16 = xor i32 %2, -1
  %17 = or i32 %16, %0
  %18 = xor i32 %17, -1
  %19 = xor i32 %0, -1
  %20 = or i32 %2, %1
  %21 = xor i32 %20, -1
  %22 = or i32 %21, %19
  %23 = or i32 %1, %0
  %24 = xor i32 %23, -1
  %25 = xor i32 %2, %1
  %26 = xor i32 %25, -1
  %27 = or i32 %26, %24
  %28 = shl i32 %27, 1
  %29 = and i32 %1, %0
  %30 = or i32 %29, %18
  %31 = or i32 %16, %1
  %32 = xor i32 %31, %0
  %33 = xor i32 %1, -1
  %34 = or i32 %33, %0
  %35 = xor i32 %34, -1
  %36 = shl i32 %35, 1
  %37 = xor i32 %2, %0
  %38 = and i32 %37, %9
  %39 = and i32 %33, %0
  %40 = xor i32 %39, -1
  %41 = and i32 %25, %40
  %42 = and i32 %20, %19
  %43 = or i32 %18, %1
  %44 = add i32 %20, 1
  %45 = add i32 %2, 1
  %46 = and i32 %33, %2
  %47 = and i32 %46, %19
  %48 = or i32 %25, %19
  %49 = xor i32 %47, %48
  %50 = xor i32 %37, -1
  %51 = or i32 %50, %1
  %52 = and i32 %16, %1
  %53 = xor i32 %52, %0
  %54 = or i32 %24, %2
  %55 = or i32 %37, %29
  %56 = or i32 %29, %16
  %57 = and i32 %2, %1
  %58 = xor i32 %57, -1
  %59 = xor i32 %39, %58
  %60 = or i32 %7, %9
  %61 = or i32 %37, %9
  %62 = xor i32 %29, -1
  %63 = or i32 %2, %0
  %64 = and i32 %63, %1
  %65 = shl i32 %64, 1
  %66 = and i32 %9, %50
  %67 = and i32 %62, %2
  %68 = and i32 %23, %26
  %69 = and i32 %26, %40
  %70 = or i32 %25, %0
  %71 = xor i32 %52, -1
  %72 = and i32 %71, %19
  %73 = add i32 %1, 1
  %74 = xor i32 %31, %29
  %75 = and i32 %63, %10
  %76 = xor i32 %57, %0
  %77 = and i32 %23, %16
  %78 = xor i32 %63, %29
  %79 = and i32 %17, %33
  %80 = and i32 %16, %0
  %81 = xor i32 %80, %1
  %82 = or i32 %50, %24
  %83 = or i32 %39, %16
  %84 = xor i32 %17, %1
  %85 = and i32 %37, %34
  %86 = xor i32 %7, %34
  %87 = shl i32 %86, 1
  %88 = or i32 %37, %10
  %89 = shl i32 %88, 1
  %90 = xor i32 %7, %20
  %91 = and i32 %9, %16
  %92 = xor i32 %24, %2
  %93 = xor i32 %21, %0
  %94 = shl i32 %93, 1
  %95 = or i32 %80, %1
  %96 = or i32 %16, %24
  %97 = and i32 %57, %0
  %98 = xor i32 %25, %0
  %99 = xor i32 %97, %98
  %100 = or i32 %52, %0
  %101 = and i32 %57, %19
  %102 = and i32 %25, %0
  %103 = or i32 %101, %102
  %104 = or i32 %58, %19
  %105 = or i32 %9, %50
  %106 = xor i32 %80, %31
  %107 = xor i32 %71, %0
  %108 = and i32 %17, %10
  %109 = or i32 %9, %2
  %110 = and i32 %58, %19
  %111 = and i32 %25, %19
  %112 = or i32 %97, %111
  %113 = and i32 %50, %10
  %114 = xor i32 %80, -1
  %115 = and i32 %114, %1
  %116 = or i32 %25, %35
  %117 = xor i32 %20, %29
  %118 = and i32 %63, %33
  %119 = or i32 %20, %19
  %120 = shl i32 %58, 1
  %121 = xor i32 %63, -1
  %122 = or i32 %121, %1
  %123 = and i32 %20, %0
  %124 = or i32 %101, %123
  %125 = or i32 %29, %121
  %126 = or i32 %26, %19
  %127 = or i32 %39, %50
  %128 = or i32 %50, %33
  %129 = shl i32 %128, 1
  %130 = xor i32 %26, %0
  %131 = or i32 %97, %42
  %132 = and i32 %46, %0
  %133 = or i32 %33, %2
  %134 = and i32 %133, %19
  %135 = or i32 %132, %134
  %136 = or i32 %25, %24
  %137 = xor i32 %31, -1
  %138 = or i32 %57, %19
  %139 = or i32 %26, %0
  %140 = xor i32 %8, %1
  %141 = or i32 %29, %137
  %142 = or i32 %16, %10
  %143 = xor i32 %133, %0
  %144 = or i32 %132, %143
  %145 = and i32 %37, %10
  %146 = shl i32 %145, 1
  %147 = and i32 %50, %33
  %148 = or i32 %7, %24
  %149 = or i32 %7, %10
  %150 = or i32 %16, %35
  %151 = or i32 %9, %18
  %152 = xor i32 %48, -1
  %153 = or i32 %47, %152
  %154 = or i32 %37, %33
  %155 = and i32 %34, %50
  %156 = xor i32 %40, %2
  %157 = or i32 %35, %2
  %158 = xor i32 %98, -1
  %159 = xor i32 %132, %158
  %160 = and i32 %34, %2
  %161 = xor i32 %137, %0
  %162 = and i32 %58, %0
  %163 = shl i32 %162, 1
  %164 = or i32 %80, %33
  %165 = and i32 %50, %40
  %166 = and i32 %31, %0
  %167 = and i32 %31, %19
  %168 = xor i32 %121, %1
  %169 = and i32 %23, %2
  %170 = or i32 %132, %98
  %171 = and i32 %9, %2
  %172 = shl i32 %171, 1
  %173 = or i32 %31, %0
  %174 = and i32 %25, %23
  %175 = xor i32 %7, %71
  %176 = xor i32 %111, -1
  %177 = xor i32 %97, %176
  %178 = or i32 %31, %19
  %179 = or i32 %80, %137
  %180 = or i32 %80, %57
  %181 = shl i32 %24, 2
  %182 = and i32 %25, %62
  %183 = or i32 %20, %0
  %184 = and i32 %114, %10
  %185 = and i32 %9, %8
  %186 = and i32 %26, %0
  %187 = or i32 %121, %33
  %188 = or i32 %58, %0
  %189 = or i32 %71, %0
  %190 = and i32 %37, %23
  %191 = and i32 %16, %10
  %192 = xor i32 %35, %2
  %193 = shl i32 %192, 2
  %194 = or i32 %37, %39
  %195 = xor i32 %39, %71
  %196 = or i32 %7, %33
  %197 = and i32 %50, %1
  %198 = and i32 %37, %33
  %199 = or i32 %50, %35
  %200 = and i32 %114, %33
  %201 = and i32 %16, %62
  %202 = and i32 %8, %33
  %203 = and i32 %71, %0
  %204 = or i32 %39, %2
  %205 = xor i32 %18, %1
  %206 = and i32 %9, %114
  %207 = shl i32 %206, 1
  %208 = or i32 %121, %10
  %209 = or i32 %7, %52
  %210 = or i32 %97, %158
  %211 = or i32 %7, %35
  %212 = or i32 %80, %10
  %213 = or i32 %37, %24
  %214 = or i32 %39, %26
  %215 = xor i32 %62, %2
  %216 = or i32 %29, %21
  %217 = and i32 %8, %1
  %218 = and i32 %34, %16
  %219 = or i32 %18, %10
  %220 = and i32 %37, %40
  %221 = and i32 %26, %62
  %222 = or i32 %37, %1
  %223 = or i32 %18, %33
  %224 = xor i32 %20, %0
  %225 = xor i32 %134, -1
  %226 = xor i32 %132, %225
  %227 = or i32 %97, %224
  %228 = xor i32 %114, %1
  %229 = or i32 %80, %9
  %230 = and i32 %16, %40
  %231 = xor i32 %123, -1
  %232 = xor i32 %101, %231
  %233 = or i32 %52, %19
  %234 = and i32 %21, %19
  %235 = and i32 %52, %19
  %236 = and i32 %21, %0
  %237 = and i32 %52, %0
  %238 = mul i32 %237, -19
  %239 = and i32 %137, %19
  %240 = mul i32 %239, -10
  %241 = mul i32 %101, -30
  %242 = and i32 %137, %0
  %243 = shl i32 %242, 3
  %244 = and i32 %5, %3
  %245 = and i32 %244, %4
  %246 = xor i32 %4, -1
  %247 = xor i32 %5, %3
  %248 = and i32 %247, %246
  %249 = xor i32 %245, -1
  %250 = xor i32 %248, %249
  %251 = or i32 %12, %4
  %252 = xor i32 %5, %4
  %253 = and i32 %252, %251
  %254 = xor i32 %251, -1
  %255 = or i32 %247, %254
  %256 = or i32 %5, %4
  %257 = and i32 %247, %251
  %258 = and i32 %4, %3
  %259 = xor i32 %256, -1
  %260 = or i32 %258, %259
  %261 = xor i32 %5, -1
  %262 = or i32 %261, %4
  %263 = and i32 %262, %12
  %264 = and i32 %12, %5
  %265 = and i32 %264, %4
  %266 = or i32 %247, %4
  %267 = xor i32 %266, -1
  %268 = or i32 %265, %267
  %269 = xor i32 %4, %3
  %270 = xor i32 %252, -1
  %271 = or i32 %269, %270
  %272 = shl i32 %271, 1
  %273 = or i32 %13, %270
  %274 = and i32 %269, %5
  %275 = or i32 %12, %5
  %276 = xor i32 %275, %4
  %277 = xor i32 %265, -1
  %278 = xor i32 %276, %277
  %279 = and i32 %5, %4
  %280 = xor i32 %279, -1
  %281 = and i32 %269, %280
  %282 = shl i32 %281, 1
  %283 = or i32 %4, %3
  %284 = xor i32 %283, -1
  %285 = or i32 %252, %284
  %286 = shl i32 %285, 1
  %287 = xor i32 %13, -1
  %288 = xor i32 %287, %5
  %289 = or i32 %261, %3
  %290 = xor i32 %289, -1
  %291 = or i32 %290, %4
  %292 = xor i32 %262, -1
  %293 = xor i32 %292, %3
  %294 = and i32 %287, %5
  %295 = xor i32 %265, %266
  %296 = or i32 %258, %292
  %297 = and i32 %247, %4
  %298 = and i32 %261, %3
  %299 = or i32 %298, %13
  %300 = and i32 %261, %4
  %301 = or i32 %300, %269
  %302 = or i32 %244, %13
  %303 = or i32 %13, %261
  %304 = add i32 %256, 1
  %305 = xor i32 %244, -1
  %306 = and i32 %305, %246
  %307 = or i32 %5, %3
  %308 = xor i32 %307, -1
  %309 = or i32 %279, %308
  %310 = xor i32 %269, -1
  %311 = and i32 %270, %310
  %312 = xor i32 %258, -1
  %313 = and i32 %261, %312
  %314 = and i32 %247, %287
  %315 = xor i32 %247, -1
  %316 = or i32 %315, %4
  %317 = or i32 %247, %13
  %318 = or i32 %261, %254
  %319 = shl i32 %318, 1
  %320 = xor i32 %284, %5
  %321 = and i32 %280, %3
  %322 = or i32 %259, %3
  %323 = shl i32 %322, 1
  %324 = and i32 %252, %12
  %325 = or i32 %292, %12
  %326 = or i32 %259, %12
  %327 = and i32 %289, %4
  %328 = and i32 %252, %283
  %329 = and i32 %256, %12
  %330 = or i32 %279, %310
  %331 = shl i32 %330, 1
  %332 = or i32 %269, %5
  %333 = or i32 %300, %3
  %334 = xor i32 %279, %283
  %335 = or i32 %308, %4
  %336 = or i32 %305, %4
  %337 = and i32 %280, %12
  %338 = or i32 %252, %310
  %339 = xor i32 %251, %5
  %340 = shl i32 %339, 1
  %341 = or i32 %252, %269
  %342 = or i32 %270, %254
  %343 = shl i32 %342, 1
  %344 = and i32 %270, %12
  %345 = shl i32 %344, 1
  %346 = xor i32 %305, %4
  %347 = or i32 %305, %246
  %348 = and i32 %244, %246
  %349 = xor i32 %348, -1
  %350 = xor i32 %297, %349
  %351 = or i32 %348, %297
  %352 = or i32 %254, %5
  %353 = and i32 %261, %310
  %354 = or i32 %269, %261
  %355 = xor i32 %315, %4
  %356 = and i32 %315, %4
  %357 = xor i32 %262, %3
  %358 = and i32 %275, %246
  %359 = or i32 %265, %358
  %360 = shl i32 %359, 1
  %361 = xor i32 %289, %258
  %362 = or i32 %308, %246
  %363 = and i32 %269, %270
  %364 = and i32 %307, %4
  %365 = xor i32 %364, %349
  %366 = and i32 %307, %246
  %367 = xor i32 %366, %249
  %368 = or i32 %292, %310
  %369 = and i32 %283, %261
  %370 = and i32 %264, %246
  %371 = or i32 %247, %246
  %372 = xor i32 %370, %371
  %373 = shl i32 %372, 2
  %374 = add i32 %289, 1
  %375 = and i32 %305, %4
  %376 = or i32 %315, %284
  %377 = and i32 %270, %312
  %378 = and i32 %315, %246
  %379 = xor i32 %300, -1
  %380 = xor i32 %247, %4
  %381 = xor i32 %380, -1
  %382 = or i32 %245, %381
  %383 = or i32 %252, %12
  %384 = xor i32 %300, %289
  %385 = or i32 %310, %5
  %386 = or i32 %265, %380
  %387 = shl i32 %386, 1
  %388 = and i32 %275, %4
  %389 = xor i32 %388, -1
  %390 = xor i32 %370, %389
  %391 = or i32 %279, %269
  %392 = xor i32 %280, %3
  %393 = shl i32 %269, 1
  %394 = xor i32 %300, %305
  %395 = and i32 %283, %270
  %396 = xor i32 %245, %380
  %397 = or i32 %315, %254
  %398 = and i32 %289, %246
  %399 = xor i32 %298, -1
  %400 = and i32 %399, %4
  %401 = and i32 %262, %310
  %402 = or i32 %270, %310
  %403 = and i32 %252, %269
  %404 = and i32 %256, %310
  %405 = or i32 %244, %246
  %406 = or i32 %13, %5
  %407 = or i32 %399, %246
  %408 = and i32 %315, %312
  %409 = xor i32 %312, %5
  %410 = xor i32 %300, %3
  %411 = xor i32 %358, %277
  %412 = and i32 %251, %261
  %413 = xor i32 %307, %258
  %414 = xor i32 %307, %4
  %415 = or i32 %245, %414
  %416 = or i32 %315, %246
  %417 = or i32 %245, %366
  %418 = xor i32 %254, %5
  %419 = xor i32 %279, %399
  %420 = shl i32 %419, 1
  %421 = and i32 %247, %312
  %422 = or i32 %300, %12
  %423 = shl i32 %422, 1
  %424 = xor i32 %262, %258
  %425 = or i32 %261, %310
  %426 = xor i32 %258, %5
  %427 = shl i32 %426, 1
  %428 = xor i32 %414, 2147483647
  %429 = xor i32 %428, %245
  %430 = or i32 %290, %246
  %431 = and i32 %252, %310
  %432 = or i32 %265, %276
  %433 = or i32 %300, %244
  %434 = or i32 %307, %246
  %435 = xor i32 %399, %4
  %436 = shl i32 %435, 1
  %437 = and i32 %312, %5
  %438 = shl i32 %399, 1
  %439 = and i32 %252, %3
  %440 = xor i32 %13, %399
  %441 = and i32 %252, %312
  %442 = or i32 %300, %290
  %443 = or i32 %269, %259
  %444 = xor i32 %290, %4
  %445 = xor i32 %371, -1
  %446 = or i32 %370, %445
  %447 = and i32 %251, %270
  %448 = shl i32 %447, 2
  %449 = and i32 %261, %287
  %450 = or i32 %298, %246
  %451 = or i32 %279, %284
  %452 = or i32 %279, %254
  %453 = and i32 %283, %315
  %454 = or i32 %247, %284
  %455 = or i32 %370, %388
  %456 = or i32 %270, %12
  %457 = shl i32 %456, 1
  %458 = and i32 %283, %5
  %459 = or i32 %270, %284
  %460 = or i32 %259, %310
  %461 = or i32 %258, %5
  %462 = and i32 %269, %261
  %463 = or i32 %348, %364
  %464 = and i32 %269, %379
  %465 = or i32 %279, %298
  %466 = xor i32 %379, %3
  %467 = and i32 %310, %5
  %468 = xor i32 %244, %4
  %469 = xor i32 %279, %307
  %470 = or i32 %300, %310
  %471 = or i32 %245, %248
  %472 = or i32 %258, %261
  %473 = and i32 %262, %269
  %474 = shl i32 %473, 1
  %475 = or i32 %252, %3
  %476 = shl i32 %475, 1
  %477 = or i32 %261, %284
  %478 = and i32 %399, %246
  %479 = or i32 %270, %3
  %480 = and i32 %270, %3
  %481 = shl i32 %480, 1
  %482 = and i32 %256, %3
  %483 = add i32 %13, 1
  %484 = xor i32 %259, %3
  %485 = shl i32 %484, 1
  %486 = and i32 %379, %12
  %487 = or i32 %298, %4
  %488 = or i32 %289, %246
  %489 = xor i32 %13, %305
  %490 = or i32 %252, %13
  %491 = and i32 %379, %3
  %492 = xor i32 %289, %4
  %493 = or i32 %258, %290
  %494 = or i32 %258, %270
  %495 = xor i32 %256, %258
  %496 = or i32 %284, %5
  %497 = xor i32 %256, %3
  %498 = or i32 %292, %3
  %499 = or i32 %269, %292
  %500 = or i32 %258, %315
  %501 = or i32 %258, %308
  %502 = xor i32 %279, %251
  %503 = and i32 %280, %310
  %504 = and i32 %270, %287
  %505 = add i32 %279, 1
  %506 = or i32 %279, %3
  %507 = xor i32 %308, %4
  %508 = and i32 %247, %283
  %509 = or i32 %279, %12
  %510 = xor i32 %283, %5
  %511 = or i32 %289, %4
  %512 = and i32 %379, %310
  %513 = or i32 %13, %315
  %514 = xor i32 %298, %4
  %515 = and i32 %251, %5
  %516 = and i32 %252, %287
  %517 = or i32 %244, %4
  %518 = or i32 %399, %4
  %519 = or i32 %307, %4
  %520 = and i32 %251, %315
  %521 = and i32 %256, %269
  %522 = and i32 %308, %246
  %523 = and i32 %298, %246
  %524 = and i32 %308, %4
  %525 = shl i32 %524, 3
  %526 = and i32 %290, %246
  %527 = mul i32 %348, 34
  %528 = and i32 %290, %4
  %529 = shl i32 %528, 2
  %530 = add i32 %9, -1
  %531 = add i32 %530, %12
  %532 = add i32 %531, %204
  %533 = add i32 %532, %109
  %534 = add i32 %533, %50
  %535 = add i32 %534, %8
  %536 = add i32 %535, %54
  %537 = add i32 %536, %224
  %538 = add i32 %537, %194
  %539 = add i32 %538, %190
  %540 = add i32 %539, %178
  %541 = add i32 %540, %149
  %542 = add i32 %541, %105
  %543 = add i32 %542, %76
  %544 = add i32 %543, %74
  %545 = add i32 %544, %53
  %546 = add i32 %545, %258
  %547 = add i32 %546, %131
  %548 = add i32 %547, %99
  %549 = add i32 %548, %292
  %550 = add i32 %549, %458
  %551 = add i32 %550, %409
  %552 = add i32 %551, %289
  %553 = add i32 %552, %519
  %554 = add i32 %553, %514
  %555 = add i32 %554, %511
  %556 = add i32 %555, %509
  %557 = add i32 %556, %493
  %558 = add i32 %557, %486
  %559 = add i32 %558, %479
  %560 = add i32 %559, %460
  %561 = add i32 %560, %451
  %562 = add i32 %561, %439
  %563 = add i32 %562, %431
  %564 = add i32 %563, %394
  %565 = add i32 %564, %362
  %566 = add i32 %565, %357
  %567 = add i32 %566, %356
  %568 = add i32 %567, %326
  %569 = add i32 %568, %260
  %570 = add i32 %569, %429
  %571 = shl i32 %570, 1
  %572 = sub i32 %95, %127
  %573 = add i32 %572, %226
  %574 = sub i32 %573, %361
  %575 = add i32 %574, %391
  %576 = add i32 %575, %337
  %577 = add i32 %576, %291
  %578 = mul i32 %577, 3
  %579 = add i32 %107, %174
  %580 = add i32 %579, %210
  %581 = sub i32 %580, %492
  %582 = add i32 %581, %523
  %583 = sub i32 %582, %464
  %584 = mul i32 %583, 5
  %585 = add i32 %526, %236
  %586 = mul i32 %585, -17
  %587 = or i32 %97, %235
  %588 = mul i32 %587, -21
  %589 = sub i32 %234, %245
  %590 = mul i32 %589, 6
  %591 = add i32 %199, -1
  %592 = add i32 %591, %151
  %593 = add i32 %592, %310
  %594 = add i32 %593, %159
  %595 = add i32 %594, %454
  %596 = add i32 %595, %521
  %597 = shl i32 %596, 2
  %598 = add i32 %19, %1
  %599 = add i32 %598, %73
  %600 = add i32 %599, %2
  %601 = add i32 %600, %10
  %602 = add i32 %601, %45
  %603 = add i32 %602, %62
  %604 = sub i32 %603, %39
  %605 = add i32 %604, %40
  %606 = add i32 %605, %34
  %607 = sub i32 %606, %36
  %608 = add i32 %607, %44
  %609 = sub i32 %608, %56
  %610 = add i32 %609, %67
  %611 = add i32 %610, %77
  %612 = add i32 %611, %83
  %613 = sub i32 %612, %91
  %614 = sub i32 %613, %92
  %615 = add i32 %614, %96
  %616 = add i32 %615, %25
  %617 = add i32 %616, %137
  %618 = sub i32 %617, %142
  %619 = sub i32 %618, %150
  %620 = sub i32 %619, %20
  %621 = add i32 %620, %156
  %622 = sub i32 %621, %157
  %623 = sub i32 %622, %160
  %624 = add i32 %623, %169
  %625 = sub i32 %624, %181
  %626 = add i32 %625, %7
  %627 = sub i32 %626, %191
  %628 = sub i32 %627, %37
  %629 = sub i32 %628, %201
  %630 = sub i32 %629, %215
  %631 = add i32 %630, %218
  %632 = add i32 %631, %80
  %633 = add i32 %632, %121
  %634 = sub i32 %633, %230
  %635 = sub i32 %634, %3
  %636 = sub i32 %635, %22
  %637 = add i32 %636, %30
  %638 = sub i32 %637, %32
  %639 = sub i32 %638, %38
  %640 = sub i32 %639, %41
  %641 = add i32 %640, %42
  %642 = add i32 %641, %43
  %643 = sub i32 %642, %51
  %644 = add i32 %643, %55
  %645 = add i32 %644, %59
  %646 = add i32 %645, %60
  %647 = sub i32 %646, %61
  %648 = sub i32 %647, %66
  %649 = sub i32 %648, %68
  %650 = sub i32 %649, %69
  %651 = sub i32 %650, %70
  %652 = sub i32 %651, %72
  %653 = add i32 %652, %75
  %654 = add i32 %653, %78
  %655 = sub i32 %654, %79
  %656 = add i32 %655, %81
  %657 = add i32 %656, %82
  %658 = sub i32 %657, %84
  %659 = add i32 %658, %85
  %660 = sub i32 %659, %90
  %661 = add i32 %660, %100
  %662 = sub i32 %661, %104
  %663 = add i32 %662, %106
  %664 = add i32 %663, %108
  %665 = add i32 %664, %110
  %666 = add i32 %665, %113
  %667 = add i32 %666, %115
  %668 = sub i32 %667, %116
  %669 = sub i32 %668, %117
  %670 = add i32 %669, %118
  %671 = sub i32 %670, %119
  %672 = sub i32 %671, %120
  %673 = sub i32 %672, %122
  %674 = sub i32 %673, %125
  %675 = add i32 %674, %126
  %676 = sub i32 %675, %48
  %677 = sub i32 %676, %130
  %678 = add i32 %677, %136
  %679 = sub i32 %678, %138
  %680 = add i32 %679, %139
  %681 = sub i32 %680, %140
  %682 = add i32 %681, %141
  %683 = sub i32 %682, %147
  %684 = add i32 %683, %148
  %685 = sub i32 %684, %154
  %686 = sub i32 %685, %155
  %687 = add i32 %686, %161
  %688 = sub i32 %687, %164
  %689 = sub i32 %688, %165
  %690 = add i32 %689, %166
  %691 = sub i32 %690, %167
  %692 = sub i32 %691, %168
  %693 = sub i32 %692, %172
  %694 = add i32 %693, %173
  %695 = add i32 %694, %175
  %696 = add i32 %695, %179
  %697 = sub i32 %696, %180
  %698 = add i32 %697, %98
  %699 = sub i32 %698, %182
  %700 = sub i32 %699, %183
  %701 = sub i32 %700, %184
  %702 = add i32 %701, %185
  %703 = sub i32 %702, %186
  %704 = sub i32 %703, %187
  %705 = sub i32 %704, %188
  %706 = add i32 %705, %189
  %707 = sub i32 %706, %193
  %708 = add i32 %707, %195
  %709 = sub i32 %708, %196
  %710 = sub i32 %709, %123
  %711 = add i32 %710, %197
  %712 = add i32 %711, %198
  %713 = add i32 %712, %200
  %714 = sub i32 %713, %202
  %715 = add i32 %714, %203
  %716 = add i32 %715, %205
  %717 = sub i32 %716, %208
  %718 = sub i32 %717, %209
  %719 = add i32 %718, %211
  %720 = add i32 %719, %212
  %721 = sub i32 %720, %213
  %722 = add i32 %721, %102
  %723 = sub i32 %722, %214
  %724 = sub i32 %723, %216
  %725 = add i32 %724, %217
  %726 = add i32 %725, %219
  %727 = sub i32 %726, %220
  %728 = sub i32 %727, %221
  %729 = add i32 %728, %222
  %730 = sub i32 %729, %223
  %731 = sub i32 %730, %228
  %732 = sub i32 %731, %229
  %733 = sub i32 %732, %233
  %734 = sub i32 %733, %28
  %735 = sub i32 %734, %49
  %736 = sub i32 %735, %65
  %737 = sub i32 %736, %87
  %738 = sub i32 %737, %89
  %739 = sub i32 %738, %94
  %740 = sub i32 %739, %103
  %741 = sub i32 %740, %112
  %742 = sub i32 %741, %124
  %743 = sub i32 %742, %129
  %744 = sub i32 %743, %135
  %745 = sub i32 %744, %144
  %746 = sub i32 %745, %146
  %747 = sub i32 %746, %153
  %748 = sub i32 %747, %163
  %749 = sub i32 %748, %170
  %750 = add i32 %749, %177
  %751 = sub i32 %750, %207
  %752 = add i32 %751, %227
  %753 = add i32 %752, %232
  %754 = add i32 %753, %238
  %755 = add i32 %754, %240
  %756 = add i32 %755, %241
  %757 = sub i32 %756, %243
  %758 = add i32 %757, %254
  %759 = sub i32 %758, %283
  %760 = add i32 %759, %284
  %761 = sub i32 %760, %13
  %762 = add i32 %761, %312
  %763 = sub i32 %762, %251
  %764 = add i32 %763, %483
  %765 = sub i32 %764, %256
  %766 = add i32 %765, %274
  %767 = add i32 %766, %288
  %768 = sub i32 %767, %244
  %769 = add i32 %768, %294
  %770 = add i32 %769, %262
  %771 = add i32 %770, %270
  %772 = sub i32 %771, %303
  %773 = add i32 %772, %304
  %774 = add i32 %773, %313
  %775 = sub i32 %774, %320
  %776 = add i32 %775, %332
  %777 = add i32 %776, %352
  %778 = add i32 %777, %353
  %779 = sub i32 %778, %300
  %780 = sub i32 %779, %354
  %781 = sub i32 %780, %369
  %782 = add i32 %781, %374
  %783 = add i32 %782, %379
  %784 = sub i32 %783, %298
  %785 = add i32 %784, %279
  %786 = sub i32 %785, %385
  %787 = add i32 %786, %305
  %788 = sub i32 %787, %393
  %789 = sub i32 %788, %406
  %790 = add i32 %789, %412
  %791 = sub i32 %790, %418
  %792 = sub i32 %791, %425
  %793 = add i32 %792, %437
  %794 = sub i32 %793, %252
  %795 = add i32 %794, %308
  %796 = sub i32 %795, %449
  %797 = sub i32 %796, %461
  %798 = sub i32 %797, %462
  %799 = sub i32 %798, %467
  %800 = sub i32 %799, %472
  %801 = sub i32 %800, %477
  %802 = add i32 %801, %496
  %803 = sub i32 %802, %307
  %804 = add i32 %803, %505
  %805 = sub i32 %804, %510
  %806 = add i32 %805, %515
  %807 = add i32 %806, %588
  %808 = add i32 %807, %253
  %809 = add i32 %808, %255
  %810 = add i32 %809, %257
  %811 = add i32 %810, %263
  %812 = add i32 %811, %273
  %813 = add i32 %812, %266
  %814 = sub i32 %813, %293
  %815 = sub i32 %814, %296
  %816 = sub i32 %815, %297
  %817 = sub i32 %816, %299
  %818 = sub i32 %817, %301
  %819 = sub i32 %818, %302
  %820 = add i32 %819, %306
  %821 = add i32 %820, %309
  %822 = sub i32 %821, %311
  %823 = sub i32 %822, %314
  %824 = sub i32 %823, %316
  %825 = add i32 %824, %317
  %826 = sub i32 %825, %319
  %827 = add i32 %826, %321
  %828 = add i32 %827, %324
  %829 = sub i32 %828, %325
  %830 = add i32 %829, %327
  %831 = add i32 %830, %328
  %832 = add i32 %831, %329
  %833 = sub i32 %832, %333
  %834 = sub i32 %833, %334
  %835 = add i32 %834, %335
  %836 = sub i32 %835, %336
  %837 = sub i32 %836, %338
  %838 = sub i32 %837, %340
  %839 = add i32 %838, %341
  %840 = add i32 %839, %346
  %841 = add i32 %840, %347
  %842 = sub i32 %841, %355
  %843 = sub i32 %842, %363
  %844 = sub i32 %843, %368
  %845 = add i32 %844, %375
  %846 = add i32 %845, %376
  %847 = add i32 %846, %377
  %848 = sub i32 %847, %378
  %849 = sub i32 %848, %383
  %850 = sub i32 %849, %384
  %851 = add i32 %850, %392
  %852 = sub i32 %851, %395
  %853 = sub i32 %852, %397
  %854 = add i32 %853, %398
  %855 = sub i32 %854, %400
  %856 = sub i32 %855, %401
  %857 = add i32 %856, %402
  %858 = sub i32 %857, %403
  %859 = add i32 %858, %404
  %860 = add i32 %859, %405
  %861 = sub i32 %860, %407
  %862 = sub i32 %861, %408
  %863 = add i32 %862, %371
  %864 = add i32 %863, %410
  %865 = add i32 %864, %380
  %866 = add i32 %865, %413
  %867 = sub i32 %866, %416
  %868 = sub i32 %867, %421
  %869 = add i32 %868, %424
  %870 = sub i32 %869, %427
  %871 = sub i32 %870, %430
  %872 = add i32 %871, %433
  %873 = sub i32 %872, %434
  %874 = sub i32 %873, %438
  %875 = sub i32 %874, %440
  %876 = sub i32 %875, %441
  %877 = sub i32 %876, %442
  %878 = add i32 %877, %443
  %879 = add i32 %878, %444
  %880 = add i32 %879, %450
  %881 = add i32 %880, %452
  %882 = add i32 %881, %366
  %883 = sub i32 %882, %453
  %884 = sub i32 %883, %459
  %885 = add i32 %884, %465
  %886 = add i32 %885, %466
  %887 = add i32 %886, %468
  %888 = add i32 %887, %469
  %889 = sub i32 %888, %470
  %890 = sub i32 %889, %478
  %891 = sub i32 %890, %482
  %892 = add i32 %891, %487
  %893 = add i32 %892, %488
  %894 = add i32 %893, %489
  %895 = sub i32 %894, %490
  %896 = add i32 %895, %491
  %897 = sub i32 %896, %494
  %898 = add i32 %897, %495
  %899 = add i32 %898, %497
  %900 = sub i32 %899, %498
  %901 = sub i32 %900, %499
  %902 = add i32 %901, %500
  %903 = add i32 %902, %501
  %904 = add i32 %903, %502
  %905 = add i32 %904, %503
  %906 = add i32 %905, %414
  %907 = add i32 %906, %504
  %908 = sub i32 %907, %506
  %909 = add i32 %908, %507
  %910 = sub i32 %909, %508
  %911 = sub i32 %910, %512
  %912 = add i32 %911, %513
  %913 = sub i32 %912, %516
  %914 = sub i32 %913, %248
  %915 = add i32 %914, %517
  %916 = sub i32 %915, %518
  %917 = sub i32 %916, %520
  %918 = sub i32 %917, %522
  %919 = sub i32 %918, %250
  %920 = add i32 %919, %268
  %921 = sub i32 %920, %272
  %922 = sub i32 %921, %278
  %923 = sub i32 %922, %282
  %924 = sub i32 %923, %286
  %925 = add i32 %924, %295
  %926 = sub i32 %925, %323
  %927 = sub i32 %926, %331
  %928 = sub i32 %927, %343
  %929 = sub i32 %928, %345
  %930 = add i32 %929, %350
  %931 = sub i32 %930, %351
  %932 = add i32 %931, %365
  %933 = add i32 %932, %367
  %934 = sub i32 %933, %382
  %935 = sub i32 %934, %390
  %936 = sub i32 %935, %396
  %937 = add i32 %936, %411
  %938 = sub i32 %937, %415
  %939 = add i32 %938, %417
  %940 = sub i32 %939, %420
  %941 = sub i32 %940, %423
  %942 = sub i32 %941, %432
  %943 = sub i32 %942, %436
  %944 = sub i32 %943, %446
  %945 = sub i32 %944, %448
  %946 = sub i32 %945, %455
  %947 = sub i32 %946, %457
  %948 = sub i32 %947, %463
  %949 = sub i32 %948, %471
  %950 = sub i32 %949, %474
  %951 = sub i32 %950, %476
  %952 = sub i32 %951, %481
  %953 = sub i32 %952, %485
  %954 = sub i32 %953, %525
  %955 = add i32 %954, %527
  %956 = sub i32 %955, %529
  %957 = sub i32 %956, %360
  %958 = sub i32 %957, %373
  %959 = sub i32 %958, %387
  %960 = add i32 %959, %586
  %961 = add i32 %960, %590
  %962 = add i32 %961, %584
  %963 = add i32 %962, %578
  %964 = add i32 %963, %597
  %965 = add i32 %964, %571
  %966 = icmp eq i32 %15, %965
  %967 = select i1 %966, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %968 = tail call i32 @puts(i8* nonnull dereferenceable(1) %967)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
