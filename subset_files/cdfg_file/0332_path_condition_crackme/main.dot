digraph "DFG for'main' function" {
	Node0x6bb828[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x6bb8a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x6bb938[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x6bb998[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x6bba48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x6bbe78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6bbf58[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x6bc058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6bc118[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x6bc1c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x6bc288[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x6bc338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x6b6a20[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x6bc538[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x6bd4a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x6bdb18[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x6bdb78[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x6bdbf0[shape=record, label="  %14 = and i32 %12, %11"];
	Node0x6bdc60[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x6bdcd0[shape=record, label="  %16 = mul i32 %15, 3"];
	Node0x6bdd40[shape=record, label="  %17 = xor i32 %10, -1"];
	Node0x6bddb0[shape=record, label="  %18 = add i32 %16, 1"];
	Node0x6bde20[shape=record, label="  %19 = shl i32 %11, 1"];
	Node0x6bde90[shape=record, label="  %20 = or i32 %19, 1"];
	Node0x6bdf00[shape=record, label="  %21 = xor i32 %12, -1"];
	Node0x6bdf70[shape=record, label="  %22 = xor i32 %11, %21"];
	Node0x6bdfe0[shape=record, label="  %23 = or i32 %12, %11"];
	Node0x6be050[shape=record, label="  %24 = shl i32 %23, 2"];
	Node0x6be0c0[shape=record, label="  %25 = xor i32 %24, -4"];
	Node0x6be130[shape=record, label="  %26 = and i32 %11, %21"];
	Node0x6be1a0[shape=record, label="  %27 = mul i32 %14, -6"];
	Node0x6be210[shape=record, label="  %28 = xor i32 %13, -1"];
	Node0x6be280[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x6be2f0[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x6be360[shape=record, label="  %31 = and i32 %13, %10"];
	Node0x6be3d0[shape=record, label="  %32 = and i32 %13, %17"];
	Node0x6be440[shape=record, label="  %33 = add i32 %29, %13"];
	Node0x6be4b0[shape=record, label="  %34 = sub i32 %33, %30"];
	Node0x6be520[shape=record, label="  %35 = shl i32 %34, 1"];
	Node0x6be590[shape=record, label="  %36 = add i32 %12, 3"];
	Node0x6be600[shape=record, label="  %37 = add i32 %36, %22"];
	Node0x6be670[shape=record, label="  %38 = add i32 %37, %20"];
	Node0x6be6e0[shape=record, label="  %39 = sub i32 %38, %26"];
	Node0x6be750[shape=record, label="  %40 = add i32 %39, %28"];
	Node0x6be7c0[shape=record, label="  %41 = add i32 %40, %24"];
	Node0x6be830[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x6be8a0[shape=record, label="  %43 = add i32 %42, %31"];
	Node0x6be910[shape=record, label="  %44 = sub i32 %43, %32"];
	Node0x6be980[shape=record, label="  %45 = add i32 %44, %25"];
	Node0x6be9f0[shape=record, label="  %46 = add i32 %45, %35"];
	Node0x6bea60[shape=record, label="  %47 = icmp eq i32 %18, %46"];
	Node0x65b8b8[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6beaf0[shape=record, label="  %49 = call i32 @puts(i8* nonnull dereferenceable(1) %48) #5"];
	Node0x6bed98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x6beef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x6bf008[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x6bf118[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x6bf1d8[shape=record, label="  ret i32 0"];
	Node0x6bb828 -> Node0x6bb8a8;
	Node0x6bb8a8 -> Node0x6bb938;
	Node0x6bb938 -> Node0x6bb998;
	Node0x6bb998 -> Node0x6bba48;
	Node0x6bba48 -> Node0x6bbe78;
	Node0x6bbe78 -> Node0x6bbf58;
	Node0x6bbf58 -> Node0x6bc058;
	Node0x6bc058 -> Node0x6bc118;
	Node0x6bc118 -> Node0x6bc1c8;
	Node0x6bc1c8 -> Node0x6bc288;
	Node0x6bc288 -> Node0x6bc338;
	Node0x6bc338 -> Node0x6b6a20;
	Node0x6b6a20 -> Node0x6bc538;
	Node0x6bc538 -> Node0x6bd4a8;
	Node0x6bd4a8 -> Node0x6bdb18;
	Node0x6bdb18 -> Node0x6bdb78;
	Node0x6bdb78 -> Node0x6bdbf0;
	Node0x6bdbf0 -> Node0x6bdc60;
	Node0x6bdc60 -> Node0x6bdcd0;
	Node0x6bdcd0 -> Node0x6bdd40;
	Node0x6bdd40 -> Node0x6bddb0;
	Node0x6bddb0 -> Node0x6bde20;
	Node0x6bde20 -> Node0x6bde90;
	Node0x6bde90 -> Node0x6bdf00;
	Node0x6bdf00 -> Node0x6bdf70;
	Node0x6bdf70 -> Node0x6bdfe0;
	Node0x6bdfe0 -> Node0x6be050;
	Node0x6be050 -> Node0x6be0c0;
	Node0x6be0c0 -> Node0x6be130;
	Node0x6be130 -> Node0x6be1a0;
	Node0x6be1a0 -> Node0x6be210;
	Node0x6be210 -> Node0x6be280;
	Node0x6be280 -> Node0x6be2f0;
	Node0x6be2f0 -> Node0x6be360;
	Node0x6be360 -> Node0x6be3d0;
	Node0x6be3d0 -> Node0x6be440;
	Node0x6be440 -> Node0x6be4b0;
	Node0x6be4b0 -> Node0x6be520;
	Node0x6be520 -> Node0x6be590;
	Node0x6be590 -> Node0x6be600;
	Node0x6be600 -> Node0x6be670;
	Node0x6be670 -> Node0x6be6e0;
	Node0x6be6e0 -> Node0x6be750;
	Node0x6be750 -> Node0x6be7c0;
	Node0x6be7c0 -> Node0x6be830;
	Node0x6be830 -> Node0x6be8a0;
	Node0x6be8a0 -> Node0x6be910;
	Node0x6be910 -> Node0x6be980;
	Node0x6be980 -> Node0x6be9f0;
	Node0x6be9f0 -> Node0x6bea60;
	Node0x6bea60 -> Node0x65b8b8;
	Node0x65b8b8 -> Node0x6beaf0;
	Node0x6beaf0 -> Node0x6bed98;
	Node0x6bed98 -> Node0x6beef8;
	Node0x6beef8 -> Node0x6bf008;
	Node0x6bf008 -> Node0x6bf118;
	Node0x6bf118 -> Node0x6bf1d8;
edge [color=red]
	Node0x6bb828 -> Node0x6bba48;
	Node0x6bba48 -> Node0x6bbe78;
	Node0x6bb8a8 -> Node0x6bbf58;
	Node0x6bbf58 -> Node0x6bc058;
	Node0x6bb938 -> Node0x6bc118;
	Node0x6bc118 -> Node0x6bc1c8;
	Node0x6bb998 -> Node0x6bc288;
	Node0x6bc288 -> Node0x6bc338;
	Node0x6bb828 -> Node0x6b6a20;
	Node0x6bb8a8 -> Node0x6b6a20;
	Node0x6bb938 -> Node0x6b6a20;
	Node0x6bb998 -> Node0x6b6a20;
	Node0x6bb828 -> Node0x6bc538;
	Node0x6bb8a8 -> Node0x6bd4a8;
	Node0x6bb938 -> Node0x6bdb18;
	Node0x6bb998 -> Node0x6bdb78;
	Node0x6bdb18 -> Node0x6bdbf0;
	Node0x6bd4a8 -> Node0x6bdbf0;
	Node0x6bdbf0 -> Node0x6bdc60;
	Node0x6bdc60 -> Node0x6bdcd0;
	Node0x6bc538 -> Node0x6bdd40;
	Node0x6bdcd0 -> Node0x6bddb0;
	Node0x6bd4a8 -> Node0x6bde20;
	Node0x6bde20 -> Node0x6bde90;
	Node0x6bdb18 -> Node0x6bdf00;
	Node0x6bd4a8 -> Node0x6bdf70;
	Node0x6bdf00 -> Node0x6bdf70;
	Node0x6bdb18 -> Node0x6bdfe0;
	Node0x6bd4a8 -> Node0x6bdfe0;
	Node0x6bdfe0 -> Node0x6be050;
	Node0x6be050 -> Node0x6be0c0;
	Node0x6bd4a8 -> Node0x6be130;
	Node0x6bdf00 -> Node0x6be130;
	Node0x6bdbf0 -> Node0x6be1a0;
	Node0x6bdb78 -> Node0x6be210;
	Node0x6bdb78 -> Node0x6be280;
	Node0x6bc538 -> Node0x6be280;
	Node0x6bdb78 -> Node0x6be2f0;
	Node0x6bc538 -> Node0x6be2f0;
	Node0x6bdb78 -> Node0x6be360;
	Node0x6bc538 -> Node0x6be360;
	Node0x6bdb78 -> Node0x6be3d0;
	Node0x6bdd40 -> Node0x6be3d0;
	Node0x6be280 -> Node0x6be440;
	Node0x6bdb78 -> Node0x6be440;
	Node0x6be440 -> Node0x6be4b0;
	Node0x6be2f0 -> Node0x6be4b0;
	Node0x6be4b0 -> Node0x6be520;
	Node0x6bdb18 -> Node0x6be590;
	Node0x6be590 -> Node0x6be600;
	Node0x6bdf70 -> Node0x6be600;
	Node0x6be600 -> Node0x6be670;
	Node0x6bde90 -> Node0x6be670;
	Node0x6be670 -> Node0x6be6e0;
	Node0x6be130 -> Node0x6be6e0;
	Node0x6be6e0 -> Node0x6be750;
	Node0x6be210 -> Node0x6be750;
	Node0x6be750 -> Node0x6be7c0;
	Node0x6be050 -> Node0x6be7c0;
	Node0x6be7c0 -> Node0x6be830;
	Node0x6be1a0 -> Node0x6be830;
	Node0x6be830 -> Node0x6be8a0;
	Node0x6be360 -> Node0x6be8a0;
	Node0x6be8a0 -> Node0x6be910;
	Node0x6be3d0 -> Node0x6be910;
	Node0x6be910 -> Node0x6be980;
	Node0x6be0c0 -> Node0x6be980;
	Node0x6be980 -> Node0x6be9f0;
	Node0x6be520 -> Node0x6be9f0;
	Node0x6bddb0 -> Node0x6bea60;
	Node0x6be9f0 -> Node0x6bea60;
	Node0x6bea60 -> Node0x65b8b8;
	Node0x65b8b8 -> Node0x6beaf0;
	Node0x6bc288 -> Node0x6bed98;
	Node0x6bc118 -> Node0x6beef8;
	Node0x6bbf58 -> Node0x6bf008;
	Node0x6bba48 -> Node0x6bf118;
}
