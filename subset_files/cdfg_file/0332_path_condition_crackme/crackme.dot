digraph "DFG for'crackme' function" {
	Node0x6b99f0[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x6ba070[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x6ba110[shape=record, label="  %7 = mul i32 %6, 3"];
	Node0x6ba180[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x6ba220[shape=record, label="  %9 = add i32 %7, 1"];
	Node0x6ba290[shape=record, label="  %10 = shl i32 %1, 1"];
	Node0x6ba300[shape=record, label="  %11 = or i32 %10, 1"];
	Node0x6ba370[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x6ba3e0[shape=record, label="  %13 = xor i32 %12, %1"];
	Node0x6ba450[shape=record, label="  %14 = or i32 %2, %1"];
	Node0x6ba4f0[shape=record, label="  %15 = shl i32 %14, 2"];
	Node0x6ba590[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x6ba600[shape=record, label="  %17 = and i32 %12, %1"];
	Node0x6ba6a0[shape=record, label="  %18 = mul i32 %5, -6"];
	Node0x6ba710[shape=record, label="  %19 = xor i32 %3, -1"];
	Node0x6ba780[shape=record, label="  %20 = xor i32 %3, %0"];
	Node0x6ba7f0[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x6ba860[shape=record, label="  %22 = and i32 %3, %0"];
	Node0x6ba8d0[shape=record, label="  %23 = and i32 %8, %3"];
	Node0x6ba940[shape=record, label="  %24 = add i32 %20, %3"];
	Node0x6ba9b0[shape=record, label="  %25 = sub i32 %24, %21"];
	Node0x6baa20[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x6baa90[shape=record, label="  %27 = add i32 %2, 3"];
	Node0x6bab00[shape=record, label="  %28 = add i32 %27, %13"];
	Node0x6bab70[shape=record, label="  %29 = add i32 %28, %11"];
	Node0x6babe0[shape=record, label="  %30 = sub i32 %29, %17"];
	Node0x6bac50[shape=record, label="  %31 = add i32 %30, %19"];
	Node0x6bacc0[shape=record, label="  %32 = add i32 %31, %15"];
	Node0x6baf40[shape=record, label="  %33 = add i32 %32, %18"];
	Node0x6bafb0[shape=record, label="  %34 = add i32 %33, %22"];
	Node0x6bb020[shape=record, label="  %35 = sub i32 %34, %23"];
	Node0x6bb090[shape=record, label="  %36 = add i32 %35, %16"];
	Node0x6bb100[shape=record, label="  %37 = add i32 %36, %26"];
	Node0x6bb170[shape=record, label="  %38 = icmp eq i32 %9, %37"];
	Node0x65a268[shape=record, label="  %39 = select i1 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x6bb610[shape=record, label="  %40 = tail call i32 @puts(i8* nonnull dereferenceable(1) %39)"];
	Node0x6bb660[shape=record, label="  ret void"];
	Node0x6b99f0 -> Node0x6ba070;
	Node0x6ba070 -> Node0x6ba110;
	Node0x6ba110 -> Node0x6ba180;
	Node0x6ba180 -> Node0x6ba220;
	Node0x6ba220 -> Node0x6ba290;
	Node0x6ba290 -> Node0x6ba300;
	Node0x6ba300 -> Node0x6ba370;
	Node0x6ba370 -> Node0x6ba3e0;
	Node0x6ba3e0 -> Node0x6ba450;
	Node0x6ba450 -> Node0x6ba4f0;
	Node0x6ba4f0 -> Node0x6ba590;
	Node0x6ba590 -> Node0x6ba600;
	Node0x6ba600 -> Node0x6ba6a0;
	Node0x6ba6a0 -> Node0x6ba710;
	Node0x6ba710 -> Node0x6ba780;
	Node0x6ba780 -> Node0x6ba7f0;
	Node0x6ba7f0 -> Node0x6ba860;
	Node0x6ba860 -> Node0x6ba8d0;
	Node0x6ba8d0 -> Node0x6ba940;
	Node0x6ba940 -> Node0x6ba9b0;
	Node0x6ba9b0 -> Node0x6baa20;
	Node0x6baa20 -> Node0x6baa90;
	Node0x6baa90 -> Node0x6bab00;
	Node0x6bab00 -> Node0x6bab70;
	Node0x6bab70 -> Node0x6babe0;
	Node0x6babe0 -> Node0x6bac50;
	Node0x6bac50 -> Node0x6bacc0;
	Node0x6bacc0 -> Node0x6baf40;
	Node0x6baf40 -> Node0x6bafb0;
	Node0x6bafb0 -> Node0x6bb020;
	Node0x6bb020 -> Node0x6bb090;
	Node0x6bb090 -> Node0x6bb100;
	Node0x6bb100 -> Node0x6bb170;
	Node0x6bb170 -> Node0x65a268;
	Node0x65a268 -> Node0x6bb610;
	Node0x6bb610 -> Node0x6bb660;
edge [color=red]
	Node0x6b99f0 -> Node0x6ba070;
	Node0x6ba070 -> Node0x6ba110;
	Node0x6ba110 -> Node0x6ba220;
	Node0x6ba290 -> Node0x6ba300;
	Node0x6ba370 -> Node0x6ba3e0;
	Node0x6ba450 -> Node0x6ba4f0;
	Node0x6ba4f0 -> Node0x6ba590;
	Node0x6ba370 -> Node0x6ba600;
	Node0x6b99f0 -> Node0x6ba6a0;
	Node0x6ba180 -> Node0x6ba8d0;
	Node0x6ba780 -> Node0x6ba940;
	Node0x6ba940 -> Node0x6ba9b0;
	Node0x6ba7f0 -> Node0x6ba9b0;
	Node0x6ba9b0 -> Node0x6baa20;
	Node0x6baa90 -> Node0x6bab00;
	Node0x6ba3e0 -> Node0x6bab00;
	Node0x6bab00 -> Node0x6bab70;
	Node0x6ba300 -> Node0x6bab70;
	Node0x6bab70 -> Node0x6babe0;
	Node0x6ba600 -> Node0x6babe0;
	Node0x6babe0 -> Node0x6bac50;
	Node0x6ba710 -> Node0x6bac50;
	Node0x6bac50 -> Node0x6bacc0;
	Node0x6ba4f0 -> Node0x6bacc0;
	Node0x6bacc0 -> Node0x6baf40;
	Node0x6ba6a0 -> Node0x6baf40;
	Node0x6baf40 -> Node0x6bafb0;
	Node0x6ba860 -> Node0x6bafb0;
	Node0x6bafb0 -> Node0x6bb020;
	Node0x6ba8d0 -> Node0x6bb020;
	Node0x6bb020 -> Node0x6bb090;
	Node0x6ba590 -> Node0x6bb090;
	Node0x6bb090 -> Node0x6bb100;
	Node0x6baa20 -> Node0x6bb100;
	Node0x6ba220 -> Node0x6bb170;
	Node0x6bb100 -> Node0x6bb170;
	Node0x6bb170 -> Node0x65a268;
	Node0x65a268 -> Node0x6bb610;
}
