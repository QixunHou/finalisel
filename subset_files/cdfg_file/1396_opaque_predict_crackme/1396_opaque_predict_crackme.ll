; ModuleID = '../.././c_source_file/1396_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1396_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = or i32 %1, %0
  %9 = and i32 %8, %7
  %10 = and i32 %4, %3
  %11 = xor i32 %5, %3
  %12 = xor i32 %11, -1
  %13 = or i32 %10, %12
  %14 = add i32 %13, %9
  %15 = xor i32 %4, -1
  %16 = and i32 %5, %3
  %17 = and i32 %16, %15
  %18 = and i32 %11, %4
  %19 = or i32 %17, %18
  %20 = add i32 %14, %19
  %21 = xor i32 %1, -1
  %22 = and i32 %21, %0
  %23 = xor i32 %22, -1
  %24 = xor i32 %2, %1
  %25 = xor i32 %24, -1
  %26 = and i32 %25, %23
  %27 = xor i32 %1, %0
  %28 = xor i32 %2, %0
  %29 = and i32 %28, %27
  %30 = and i32 %2, %1
  %31 = and i32 %30, %0
  %32 = xor i32 %0, -1
  %33 = or i32 %2, %1
  %34 = xor i32 %33, 2147483647
  %35 = or i32 %34, %0
  %36 = xor i32 %35, %31
  %37 = or i32 %21, %0
  %38 = xor i32 %37, -1
  %39 = xor i32 %28, -1
  %40 = or i32 %39, %38
  %41 = or i32 %28, %21
  %42 = and i32 %30, %32
  %43 = and i32 %24, %0
  %44 = xor i32 %43, 1073741823
  %45 = xor i32 %44, %42
  %46 = shl i32 %45, 2
  %47 = and i32 %37, %2
  %48 = or i32 %28, %22
  %49 = or i32 %2, %0
  %50 = and i32 %49, %27
  %51 = or i32 %30, %0
  %52 = and i32 %7, %0
  %53 = xor i32 %33, -1
  %54 = or i32 %53, %32
  %55 = and i32 %39, %23
  %56 = and i32 %21, %2
  %57 = and i32 %56, %0
  %58 = or i32 %21, %2
  %59 = xor i32 %58, %32
  %60 = xor i32 %59, %57
  %61 = or i32 %7, %0
  %62 = and i32 %61, %21
  %63 = shl i32 %62, 1
  %64 = or i32 %7, %38
  %65 = and i32 %56, %32
  %66 = or i32 %24, %32
  %67 = xor i32 %65, %66
  %68 = xor i32 %23, %2
  %69 = shl i32 %68, 1
  %70 = xor i32 %30, -1
  %71 = or i32 %70, %32
  %72 = xor i32 %52, -1
  %73 = and i32 %1, %0
  %74 = xor i32 %49, -1
  %75 = or i32 %73, %74
  %76 = and i32 %2, %0
  %77 = or i32 %76, %53
  %78 = xor i32 %27, -1
  %79 = or i32 %74, %78
  %80 = and i32 %58, %0
  %81 = xor i32 %80, -1
  %82 = xor i32 %65, %81
  %83 = and i32 %27, %2
  %84 = xor i32 %37, %2
  %85 = or i32 %22, %39
  %86 = xor i32 %22, %70
  %87 = and i32 %28, %23
  %88 = xor i32 %61, %73
  %89 = and i32 %28, %8
  %90 = or i32 %76, %27
  %91 = shl i32 %90, 1
  %92 = xor i32 %8, -1
  %93 = or i32 %25, %92
  %94 = shl i32 %93, 1
  %95 = or i32 %24, %0
  %96 = xor i32 %95, -1
  %97 = or i32 %57, %96
  %98 = xor i32 %76, -1
  %99 = xor i32 %98, %1
  %100 = or i32 %24, %92
  %101 = and i32 %7, %1
  %102 = or i32 %101, %0
  %103 = or i32 %53, %0
  %104 = or i32 %7, %1
  %105 = or i32 %65, %80
  %106 = xor i32 %104, %0
  %107 = xor i32 %101, -1
  %108 = or i32 %107, %0
  %109 = shl i32 %108, 1
  %110 = or i32 %73, %53
  %111 = or i32 %74, %21
  %112 = or i32 %52, %21
  %113 = or i32 %24, %73
  %114 = xor i32 %73, -1
  %115 = and i32 %114, %2
  %116 = or i32 %42, %43
  %117 = xor i32 %25, %0
  %118 = and i32 %25, %114
  %119 = or i32 %39, %21
  %120 = and i32 %37, %7
  %121 = or i32 %73, %39
  %122 = and i32 %58, %32
  %123 = or i32 %57, %122
  %124 = and i32 %72, %1
  %125 = and i32 %39, %1
  %126 = or i32 %39, %92
  %127 = xor i32 %104, -1
  %128 = or i32 %127, %0
  %129 = xor i32 %52, %104
  %130 = or i32 %76, %21
  %131 = and i32 %61, %27
  %132 = and i32 %28, %78
  %133 = xor i32 %61, -1
  %134 = or i32 %133, %78
  %135 = or i32 %30, %32
  %136 = or i32 %76, %92
  %137 = or i32 %52, %127
  %138 = and i32 %24, %23
  %139 = or i32 %30, %22
  %140 = xor i32 %8, %2
  %141 = and i32 %23, %2
  %142 = and i32 %61, %78
  %143 = xor i32 %76, %37
  %144 = or i32 %76, %38
  %145 = and i32 %70, %32
  %146 = xor i32 %52, %1
  %147 = shl i32 %146, 1
  %148 = or i32 %39, %78
  %149 = and i32 %49, %1
  %150 = xor i32 %33, %73
  %151 = or i32 %33, %0
  %152 = and i32 %49, %78
  %153 = xor i32 %52, %70
  %154 = or i32 %38, %2
  %155 = shl i32 %154, 1
  %156 = and i32 %49, %21
  %157 = add i32 %104, 1
  %158 = and i32 %107, %0
  %159 = and i32 %37, %39
  %160 = xor i32 %76, %1
  %161 = and i32 %27, %72
  %162 = shl i32 %161, 1
  %163 = or i32 %28, %92
  %164 = and i32 %28, %21
  %165 = xor i32 %49, %1
  %166 = or i32 %73, %2
  %167 = xor i32 %33, %0
  %168 = or i32 %31, %167
  %169 = xor i32 %70, %0
  %170 = or i32 %28, %73
  %171 = xor i32 %127, %0
  %172 = and i32 %78, %2
  %173 = and i32 %24, %114
  %174 = or i32 %25, %0
  %175 = and i32 %24, %32
  %176 = xor i32 %31, -1
  %177 = xor i32 %175, %176
  %178 = xor i32 %114, %2
  %179 = or i32 %73, %7
  %180 = and i32 %104, %0
  %181 = add i32 %22, 1
  %182 = or i32 %24, %22
  %183 = or i32 %27, %2
  %184 = xor i32 %24, %0
  %185 = or i32 %57, %184
  %186 = xor i32 %92, %2
  %187 = add i32 %30, 1
  %188 = xor i32 %184, -1
  %189 = xor i32 %57, %188
  %190 = xor i32 %73, %2
  %191 = and i32 %27, %39
  %192 = xor i32 %74, %1
  %193 = or i32 %73, %133
  %194 = or i32 %127, %32
  %195 = or i32 %52, %1
  %196 = or i32 %76, %101
  %197 = or i32 %7, %78
  %198 = xor i32 %101, %0
  %199 = and i32 %39, %78
  %200 = or i32 %107, %32
  %201 = or i32 %133, %1
  %202 = or i32 %7, %92
  %203 = or i32 %76, %78
  %204 = and i32 %98, %78
  %205 = and i32 %72, %78
  %206 = shl i32 %205, 1
  %207 = or i32 %27, %133
  %208 = or i32 %31, %175
  %209 = or i32 %27, %7
  %210 = and i32 %25, %32
  %211 = xor i32 %49, %73
  %212 = or i32 %22, %7
  %213 = or i32 %133, %21
  %214 = or i32 %25, %32
  %215 = and i32 %37, %25
  %216 = xor i32 %122, 2147483647
  %217 = xor i32 %216, %57
  %218 = shl i32 %217, 1
  %219 = and i32 %28, %1
  %220 = shl i32 %175, 1
  %221 = or i32 %22, %25
  %222 = shl i32 %221, 1
  %223 = and i32 %72, %21
  %224 = shl i32 %223, 1
  %225 = or i32 %28, %1
  %226 = xor i32 %30, %0
  %227 = and i32 %104, %32
  %228 = xor i32 %104, %73
  %229 = and i32 %27, %7
  %230 = or i32 %70, %0
  %231 = or i32 %25, %38
  %232 = shl i32 %231, 2
  %233 = and i32 %8, %25
  %234 = or i32 %73, %25
  %235 = xor i32 %57, %95
  %236 = and i32 %27, %98
  %237 = shl i32 %236, 1
  %238 = xor i32 %107, %0
  %239 = xor i32 %76, %33
  %240 = and i32 %39, %114
  %241 = or i32 %104, %0
  %242 = or i32 %104, %32
  %243 = or i32 %101, %32
  %244 = or i32 %31, %188
  %245 = and i32 %25, %0
  %246 = and i32 %107, %32
  %247 = shl i32 %246, 1
  %248 = and i32 %8, %39
  %249 = or i32 %52, %27
  %250 = and i32 %28, %114
  %251 = and i32 %7, %114
  %252 = shl i32 %251, 1
  %253 = xor i32 %66, 2147483647
  %254 = or i32 %253, %65
  %255 = shl i32 %254, 1
  %256 = or i32 %28, %27
  %257 = xor i32 %167, %176
  %258 = and i32 %7, %78
  %259 = or i32 %39, %1
  %260 = shl i32 %259, 1
  %261 = or i32 %28, %78
  %262 = xor i32 %38, %2
  %263 = or i32 %73, %127
  %264 = shl i32 %263, 1
  %265 = or i32 %76, %1
  %266 = add i32 %49, 1
  %267 = xor i32 %22, %107
  %268 = or i32 %52, %30
  %269 = and i32 %7, %23
  %270 = or i32 %24, %38
  %271 = and i32 %28, %37
  %272 = and i32 %33, %0
  %273 = or i32 %42, %272
  %274 = xor i32 %72, %1
  %275 = and i32 %98, %1
  %276 = xor i32 %61, %1
  %277 = shl i32 %276, 1
  %278 = or i32 %78, %2
  %279 = or i32 %28, %38
  %280 = or i32 %33, %32
  %281 = shl i32 %280, 1
  %282 = and i32 %39, %21
  %283 = xor i32 %272, -1
  %284 = xor i32 %42, %283
  %285 = or i32 %22, %2
  %286 = or i32 %92, %2
  %287 = and i32 %70, %0
  %288 = xor i32 %133, %1
  %289 = and i32 %24, %37
  %290 = and i32 %24, %8
  %291 = or i32 %74, %1
  %292 = shl i32 %291, 1
  %293 = and i32 %98, %21
  %294 = xor i32 %53, %0
  %295 = xor i32 %31, %184
  %296 = and i32 %8, %2
  %297 = and i32 %53, %32
  %298 = and i32 %101, %32
  %299 = mul i32 %298, 22
  %300 = and i32 %53, %0
  %301 = and i32 %101, %0
  %302 = and i32 %127, %32
  %303 = shl i32 %42, 4
  %304 = and i32 %127, %0
  %305 = mul i32 %31, 21
  %306 = or i32 %5, %4
  %307 = xor i32 %306, -1
  %308 = or i32 %10, %307
  %309 = or i32 %4, %3
  %310 = xor i32 %309, %5
  %311 = xor i32 %3, -1
  %312 = and i32 %311, %5
  %313 = and i32 %312, %4
  %314 = xor i32 %11, %4
  %315 = or i32 %313, %314
  %316 = and i32 %311, %4
  %317 = or i32 %16, %316
  %318 = xor i32 %5, -1
  %319 = or i32 %318, %4
  %320 = xor i32 %4, %3
  %321 = xor i32 %320, -1
  %322 = and i32 %319, %321
  %323 = or i32 %311, %5
  %324 = xor i32 %323, %4
  %325 = xor i32 %324, 2147483647
  %326 = xor i32 %325, %313
  %327 = and i32 %312, %15
  %328 = and i32 %323, %4
  %329 = or i32 %327, %328
  %330 = xor i32 %316, %5
  %331 = and i32 %318, %3
  %332 = and i32 %5, %4
  %333 = or i32 %332, %3
  %334 = or i32 %5, %3
  %335 = and i32 %334, %4
  %336 = or i32 %17, %335
  %337 = or i32 %320, %307
  %338 = xor i32 %5, %4
  %339 = or i32 %338, %311
  %340 = and i32 %318, %4
  %341 = xor i32 %340, -1
  %342 = and i32 %341, %321
  %343 = or i32 %318, %3
  %344 = xor i32 %343, %4
  %345 = xor i32 %332, -1
  %346 = and i32 %320, %345
  %347 = xor i32 %332, %334
  %348 = xor i32 %338, -1
  %349 = and i32 %348, %3
  %350 = or i32 %311, %4
  %351 = xor i32 %350, -1
  %352 = or i32 %11, %351
  %353 = xor i32 %319, -1
  %354 = and i32 %309, %5
  %355 = and i32 %338, %3
  %356 = and i32 %16, %4
  %357 = and i32 %11, %15
  %358 = xor i32 %357, 2147483647
  %359 = xor i32 %358, %356
  %360 = xor i32 %316, -1
  %361 = shl i32 %360, 1
  %362 = xor i32 %334, -1
  %363 = or i32 %362, %4
  %364 = xor i32 %343, -1
  %365 = or i32 %340, %364
  %366 = shl i32 %365, 1
  %367 = and i32 %11, %309
  %368 = shl i32 %367, 2
  %369 = or i32 %16, %4
  %370 = or i32 %338, %321
  %371 = xor i32 %356, %314
  %372 = xor i32 %362, %4
  %373 = or i32 %316, %348
  %374 = and i32 %306, %3
  %375 = and i32 %319, %311
  %376 = shl i32 %375, 1
  %377 = xor i32 %314, -1
  %378 = or i32 %356, %377
  %379 = xor i32 %10, -1
  %380 = and i32 %12, %379
  %381 = or i32 %318, %321
  %382 = xor i32 %309, -1
  %383 = or i32 %338, %382
  %384 = or i32 %351, %5
  %385 = or i32 %10, %348
  %386 = or i32 %316, %5
  %387 = or i32 %362, %15
  %388 = or i32 %340, %321
  %389 = or i32 %12, %382
  %390 = shl i32 %318, 1
  %391 = and i32 %323, %15
  %392 = or i32 %313, %391
  %393 = xor i32 %307, %3
  %394 = or i32 %313, %324
  %395 = shl i32 %394, 1
  %396 = xor i32 %334, %15
  %397 = xor i32 %396, %356
  %398 = xor i32 %16, %4
  %399 = or i32 %12, %4
  %400 = and i32 %309, %12
  %401 = xor i32 %343, %10
  %402 = and i32 %338, %360
  %403 = shl i32 %402, 1
  %404 = or i32 %332, %382
  %405 = and i32 %318, %379
  %406 = or i32 %364, %4
  %407 = or i32 %353, %311
  %408 = xor i32 %364, %4
  %409 = xor i32 %306, %10
  %410 = and i32 %12, %4
  %411 = and i32 %334, %15
  %412 = or i32 %356, %411
  %413 = shl i32 %412, 1
  %414 = and i32 %320, %318
  %415 = xor i32 %17, -1
  %416 = xor i32 %18, %415
  %417 = xor i32 %16, -1
  %418 = and i32 %417, %15
  %419 = or i32 %331, %316
  %420 = xor i32 %12, %4
  %421 = and i32 %343, %15
  %422 = or i32 %348, %3
  %423 = or i32 %11, %15
  %424 = and i32 %348, %360
  %425 = xor i32 %319, %3
  %426 = xor i32 %331, -1
  %427 = or i32 %426, %4
  %428 = or i32 %332, %321
  %429 = or i32 %11, %10
  %430 = xor i32 %360, %5
  %431 = and i32 %338, %321
  %432 = and i32 %350, %5
  %433 = and i32 %306, %311
  %434 = or i32 %321, %5
  %435 = and i32 %350, %348
  %436 = or i32 %316, %318
  %437 = or i32 %318, %382
  %438 = shl i32 %437, 1
  %439 = or i32 %348, %321
  %440 = and i32 %338, %309
  %441 = or i32 %331, %4
  %442 = or i32 %334, %15
  %443 = and i32 %11, %360
  %444 = xor i32 %340, %417
  %445 = or i32 %332, %320
  %446 = xor i32 %382, %5
  %447 = or i32 %353, %3
  %448 = xor i32 %417, %4
  %449 = or i32 %316, %12
  %450 = xor i32 %345, %3
  %451 = shl i32 %450, 1
  %452 = xor i32 %426, %4
  %453 = or i32 %364, %15
  %454 = shl i32 %453, 1
  %455 = xor i32 %10, %5
  %456 = and i32 %320, %341
  %457 = and i32 %338, %311
  %458 = or i32 %11, %316
  %459 = xor i32 %332, %309
  %460 = and i32 %306, %320
  %461 = or i32 %307, %3
  %462 = and i32 %11, %350
  %463 = and i32 %426, %15
  %464 = xor i32 %423, -1
  %465 = or i32 %327, %464
  %466 = or i32 %320, %348
  %467 = or i32 %340, %320
  %468 = or i32 %11, %382
  %469 = or i32 %417, %15
  %470 = or i32 %320, %353
  %471 = or i32 %332, %362
  %472 = or i32 %338, %316
  %473 = or i32 %307, %321
  %474 = and i32 %309, %348
  %475 = or i32 %353, %321
  %476 = xor i32 %319, %10
  %477 = and i32 %12, %15
  %478 = add i32 %16, 1
  %479 = or i32 %340, %3
  %480 = and i32 %318, %321
  %481 = or i32 %348, %351
  %482 = and i32 %348, %321
  %483 = or i32 %307, %311
  %484 = or i32 %10, %5
  %485 = and i32 %350, %318
  %486 = or i32 %338, %351
  %487 = shl i32 %486, 1
  %488 = xor i32 %313, %377
  %489 = xor i32 %332, %426
  %490 = and i32 %345, %3
  %491 = shl i32 %490, 1
  %492 = and i32 %318, %360
  %493 = shl i32 %12, 1
  %494 = or i32 %348, %311
  %495 = and i32 %345, %321
  %496 = and i32 %338, %350
  %497 = or i32 %332, %351
  %498 = and i32 %319, %320
  %499 = and i32 %426, %4
  %500 = or i32 %332, %331
  %501 = or i32 %426, %15
  %502 = or i32 %343, %4
  %503 = xor i32 %316, %417
  %504 = or i32 %338, %3
  %505 = shl i32 %504, 2
  %506 = or i32 %331, %15
  %507 = or i32 %12, %351
  %508 = xor i32 %335, %415
  %509 = and i32 %360, %5
  %510 = xor i32 %356, -1
  %511 = xor i32 %411, %510
  %512 = and i32 %338, %320
  %513 = xor i32 %327, %423
  %514 = or i32 %340, %16
  %515 = and i32 %341, %311
  %516 = xor i32 %332, %3
  %517 = xor i32 %331, %4
  %518 = or i32 %12, %15
  %519 = and i32 %321, %5
  %520 = or i32 %348, %382
  %521 = shl i32 %311, 1
  %522 = or i32 %10, %353
  %523 = or i32 %338, %320
  %524 = and i32 %309, %318
  %525 = or i32 %320, %5
  %526 = and i32 %417, %4
  %527 = and i32 %350, %12
  %528 = and i32 %306, %321
  %529 = or i32 %338, %10
  %530 = add i32 %343, 1
  %531 = xor i32 %351, %5
  %532 = xor i32 %340, %3
  %533 = or i32 %334, %4
  %534 = or i32 %10, %364
  %535 = xor i32 %391, -1
  %536 = xor i32 %313, %535
  %537 = or i32 %332, %311
  %538 = xor i32 %332, %350
  %539 = or i32 %356, %357
  %540 = or i32 %11, %4
  %541 = xor i32 %313, %540
  %542 = add i32 %338, 1
  %543 = or i32 %382, %5
  %544 = xor i32 %540, -1
  %545 = or i32 %313, %544
  %546 = and i32 %338, %379
  %547 = or i32 %417, %4
  %548 = shl i32 %350, 1
  %549 = and i32 %343, %4
  %550 = and i32 %341, %3
  %551 = shl i32 %550, 1
  %552 = or i32 %320, %318
  %553 = or i32 %16, %15
  %554 = xor i32 %328, -1
  %555 = xor i32 %327, %554
  %556 = and i32 %362, %15
  %557 = mul i32 %556, 10
  %558 = and i32 %331, %15
  %559 = mul i32 %558, 19
  %560 = and i32 %362, %4
  %561 = mul i32 %560, -30
  %562 = and i32 %331, %4
  %563 = and i32 %364, %15
  %564 = and i32 %364, %4
  %565 = shl i32 %356, 2
  %566 = sub i32 -2, %0
  %567 = add i32 %566, %92
  %568 = add i32 %567, %278
  %569 = add i32 %568, %212
  %570 = add i32 %569, %197
  %571 = add i32 %570, %24
  %572 = add i32 %571, %47
  %573 = sub i32 %572, %29
  %574 = add i32 %573, %26
  %575 = add i32 %574, %40
  %576 = add i32 %575, %302
  %577 = add i32 %576, %300
  %578 = add i32 %577, %249
  %579 = add i32 %578, %214
  %580 = add i32 %579, %182
  %581 = add i32 %580, %173
  %582 = add i32 %581, %163
  %583 = add i32 %582, %144
  %584 = add i32 %583, %136
  %585 = add i32 %584, %77
  %586 = add i32 %585, %71
  %587 = add i32 %586, %105
  %588 = add i32 %587, %36
  %589 = add i32 %588, %16
  %590 = add i32 %589, %480
  %591 = add i32 %590, %345
  %592 = add i32 %591, %384
  %593 = add i32 %592, %529
  %594 = add i32 %593, %462
  %595 = add i32 %594, %452
  %596 = add i32 %595, %445
  %597 = add i32 %596, %435
  %598 = add i32 %597, %427
  %599 = add i32 %598, %346
  %600 = add i32 %599, %326
  %601 = add i32 %600, %359
  %602 = shl i32 %601, 1
  %603 = add i32 %241, %3
  %604 = add i32 %603, %150
  %605 = add i32 %604, %87
  %606 = sub i32 %309, %605
  %607 = add i32 %606, %338
  %608 = sub i32 %607, %354
  %609 = add i32 %608, %433
  %610 = sub i32 %609, %481
  %611 = mul i32 %610, 5
  %612 = sub i32 %268, %73
  %613 = sub i32 %612, %151
  %614 = sub i32 %613, %134
  %615 = add i32 %614, %129
  %616 = add i32 %615, %177
  %617 = add i32 %616, %475
  %618 = add i32 %617, %371
  %619 = sub i32 %618, %397
  %620 = mul i32 %619, 3
  %621 = add i32 %316, %107
  %622 = add i32 %621, %406
  %623 = add i32 %622, %564
  %624 = add i32 %623, %389
  %625 = shl i32 %624, 2
  %626 = add i32 %562, %301
  %627 = mul i32 %626, 11
  %628 = add i32 %17, %297
  %629 = mul i32 %628, -6
  %630 = sub i32 -5, %0
  %631 = add i32 %630, %78
  %632 = sub i32 %631, %27
  %633 = add i32 %632, %181
  %634 = add i32 %633, %114
  %635 = add i32 %634, %8
  %636 = add i32 %635, %22
  %637 = sub i32 %636, %33
  %638 = add i32 %637, %64
  %639 = sub i32 %638, %30
  %640 = sub i32 %639, %83
  %641 = sub i32 %640, %84
  %642 = add i32 %641, %39
  %643 = sub i32 %642, %104
  %644 = add i32 %643, %115
  %645 = add i32 %644, %25
  %646 = sub i32 %645, %120
  %647 = sub i32 %646, %61
  %648 = add i32 %647, %53
  %649 = sub i32 %648, %140
  %650 = add i32 %649, %141
  %651 = sub i32 %650, %49
  %652 = add i32 %651, %157
  %653 = sub i32 %652, %166
  %654 = add i32 %653, %172
  %655 = add i32 %654, %178
  %656 = add i32 %655, %179
  %657 = add i32 %656, %183
  %658 = sub i32 %657, %101
  %659 = sub i32 %658, %186
  %660 = add i32 %659, %187
  %661 = sub i32 %660, %190
  %662 = sub i32 %661, %28
  %663 = add i32 %662, %202
  %664 = sub i32 %663, %209
  %665 = add i32 %664, %229
  %666 = sub i32 %665, %258
  %667 = sub i32 %666, %262
  %668 = add i32 %667, %266
  %669 = add i32 %668, %269
  %670 = sub i32 %669, %285
  %671 = sub i32 %670, %286
  %672 = add i32 %671, %296
  %673 = add i32 %672, %41
  %674 = add i32 %673, %48
  %675 = add i32 %674, %50
  %676 = sub i32 %675, %51
  %677 = add i32 %676, %54
  %678 = sub i32 %677, %55
  %679 = sub i32 %678, %69
  %680 = sub i32 %679, %43
  %681 = sub i32 %680, %75
  %682 = sub i32 %681, %79
  %683 = sub i32 %682, %85
  %684 = add i32 %683, %86
  %685 = sub i32 %684, %88
  %686 = add i32 %685, %89
  %687 = add i32 %686, %99
  %688 = add i32 %687, %100
  %689 = add i32 %688, %102
  %690 = sub i32 %689, %103
  %691 = add i32 %690, %106
  %692 = sub i32 %691, %110
  %693 = add i32 %692, %111
  %694 = add i32 %693, %112
  %695 = sub i32 %694, %113
  %696 = add i32 %695, %117
  %697 = add i32 %696, %118
  %698 = sub i32 %697, %119
  %699 = add i32 %698, %121
  %700 = add i32 %699, %124
  %701 = sub i32 %700, %125
  %702 = sub i32 %701, %126
  %703 = add i32 %702, %128
  %704 = add i32 %703, %130
  %705 = add i32 %704, %131
  %706 = sub i32 %705, %132
  %707 = add i32 %706, %135
  %708 = add i32 %707, %137
  %709 = add i32 %708, %138
  %710 = add i32 %709, %139
  %711 = sub i32 %710, %142
  %712 = sub i32 %711, %143
  %713 = sub i32 %712, %145
  %714 = add i32 %713, %148
  %715 = sub i32 %714, %149
  %716 = sub i32 %715, %152
  %717 = add i32 %716, %153
  %718 = sub i32 %717, %155
  %719 = add i32 %718, %156
  %720 = add i32 %719, %158
  %721 = sub i32 %720, %159
  %722 = sub i32 %721, %160
  %723 = add i32 %722, %164
  %724 = sub i32 %723, %165
  %725 = add i32 %724, %169
  %726 = sub i32 %725, %170
  %727 = add i32 %726, %171
  %728 = add i32 %727, %174
  %729 = sub i32 %728, %180
  %730 = sub i32 %729, %191
  %731 = add i32 %730, %192
  %732 = add i32 %731, %193
  %733 = sub i32 %732, %194
  %734 = sub i32 %733, %195
  %735 = sub i32 %734, %196
  %736 = sub i32 %735, %95
  %737 = sub i32 %736, %198
  %738 = add i32 %737, %199
  %739 = sub i32 %738, %167
  %740 = add i32 %739, %200
  %741 = sub i32 %740, %201
  %742 = add i32 %741, %203
  %743 = add i32 %742, %204
  %744 = add i32 %743, %207
  %745 = add i32 %744, %210
  %746 = add i32 %745, %211
  %747 = add i32 %746, %213
  %748 = sub i32 %747, %215
  %749 = add i32 %748, %219
  %750 = sub i32 %749, %225
  %751 = add i32 %750, %226
  %752 = add i32 %751, %227
  %753 = sub i32 %752, %228
  %754 = add i32 %753, %230
  %755 = add i32 %754, %233
  %756 = add i32 %755, %234
  %757 = add i32 %756, %238
  %758 = sub i32 %757, %239
  %759 = sub i32 %758, %240
  %760 = sub i32 %759, %242
  %761 = sub i32 %760, %243
  %762 = sub i32 %761, %245
  %763 = add i32 %762, %248
  %764 = sub i32 %763, %250
  %765 = sub i32 %764, %252
  %766 = sub i32 %765, %184
  %767 = sub i32 %766, %256
  %768 = add i32 %767, %261
  %769 = add i32 %768, %265
  %770 = sub i32 %769, %267
  %771 = sub i32 %770, %270
  %772 = sub i32 %771, %271
  %773 = add i32 %772, %274
  %774 = add i32 %773, %275
  %775 = add i32 %774, %66
  %776 = add i32 %775, %272
  %777 = add i32 %776, %279
  %778 = sub i32 %777, %282
  %779 = sub i32 %778, %287
  %780 = add i32 %779, %288
  %781 = add i32 %780, %289
  %782 = add i32 %781, %290
  %783 = add i32 %782, %293
  %784 = sub i32 %783, %294
  %785 = sub i32 %784, %304
  %786 = sub i32 %785, %521
  %787 = add i32 %786, %15
  %788 = add i32 %787, %60
  %789 = sub i32 %788, %63
  %790 = sub i32 %789, %67
  %791 = add i32 %790, %82
  %792 = sub i32 %791, %91
  %793 = sub i32 %792, %94
  %794 = sub i32 %793, %97
  %795 = sub i32 %794, %109
  %796 = sub i32 %795, %116
  %797 = sub i32 %796, %123
  %798 = sub i32 %797, %147
  %799 = sub i32 %798, %162
  %800 = sub i32 %799, %168
  %801 = sub i32 %800, %185
  %802 = add i32 %801, %189
  %803 = sub i32 %802, %206
  %804 = add i32 %803, %208
  %805 = sub i32 %804, %220
  %806 = sub i32 %805, %222
  %807 = sub i32 %806, %224
  %808 = sub i32 %807, %232
  %809 = sub i32 %808, %235
  %810 = sub i32 %809, %237
  %811 = sub i32 %810, %244
  %812 = sub i32 %811, %247
  %813 = add i32 %812, %257
  %814 = sub i32 %813, %260
  %815 = sub i32 %814, %264
  %816 = sub i32 %815, %273
  %817 = sub i32 %816, %277
  %818 = sub i32 %817, %281
  %819 = sub i32 %818, %284
  %820 = sub i32 %819, %292
  %821 = add i32 %820, %295
  %822 = add i32 %821, %299
  %823 = add i32 %822, %303
  %824 = add i32 %823, %305
  %825 = sub i32 %824, %5
  %826 = add i32 %825, %351
  %827 = add i32 %826, %382
  %828 = sub i32 %827, %320
  %829 = sub i32 %828, %310
  %830 = add i32 %829, %330
  %831 = add i32 %830, %331
  %832 = sub i32 %831, %306
  %833 = sub i32 %832, %361
  %834 = sub i32 %833, %381
  %835 = add i32 %834, %386
  %836 = sub i32 %835, %390
  %837 = sub i32 %836, %405
  %838 = add i32 %837, %414
  %839 = add i32 %838, %430
  %840 = add i32 %839, %432
  %841 = add i32 %840, %434
  %842 = sub i32 %841, %436
  %843 = sub i32 %842, %332
  %844 = sub i32 %843, %446
  %845 = sub i32 %844, %334
  %846 = add i32 %845, %455
  %847 = add i32 %846, %11
  %848 = add i32 %847, %478
  %849 = add i32 %848, %484
  %850 = add i32 %849, %485
  %851 = sub i32 %850, %492
  %852 = add i32 %851, %509
  %853 = add i32 %852, %362
  %854 = sub i32 %853, %340
  %855 = sub i32 %854, %519
  %856 = add i32 %855, %524
  %857 = sub i32 %856, %525
  %858 = add i32 %857, %341
  %859 = add i32 %858, %530
  %860 = sub i32 %859, %531
  %861 = add i32 %860, %343
  %862 = add i32 %861, %542
  %863 = sub i32 %862, %543
  %864 = sub i32 %863, %548
  %865 = add i32 %864, %552
  %866 = sub i32 %865, %46
  %867 = sub i32 %866, %218
  %868 = sub i32 %867, %255
  %869 = sub i32 %868, %18
  %870 = add i32 %869, %308
  %871 = sub i32 %870, %317
  %872 = add i32 %871, %322
  %873 = add i32 %872, %333
  %874 = add i32 %873, %337
  %875 = sub i32 %874, %339
  %876 = add i32 %875, %342
  %877 = sub i32 %876, %344
  %878 = sub i32 %877, %347
  %879 = sub i32 %878, %349
  %880 = sub i32 %879, %352
  %881 = sub i32 %880, %355
  %882 = add i32 %881, %363
  %883 = add i32 %882, %369
  %884 = add i32 %883, %370
  %885 = add i32 %884, %372
  %886 = sub i32 %885, %373
  %887 = add i32 %886, %374
  %888 = add i32 %887, %380
  %889 = sub i32 %888, %383
  %890 = sub i32 %889, %385
  %891 = add i32 %890, %387
  %892 = sub i32 %891, %388
  %893 = sub i32 %892, %393
  %894 = add i32 %893, %398
  %895 = sub i32 %894, %399
  %896 = add i32 %895, %400
  %897 = add i32 %896, %401
  %898 = sub i32 %897, %404
  %899 = add i32 %898, %407
  %900 = add i32 %899, %408
  %901 = sub i32 %900, %409
  %902 = sub i32 %901, %410
  %903 = sub i32 %902, %418
  %904 = sub i32 %903, %419
  %905 = add i32 %904, %420
  %906 = sub i32 %905, %421
  %907 = add i32 %906, %422
  %908 = add i32 %907, %423
  %909 = sub i32 %908, %424
  %910 = add i32 %909, %425
  %911 = sub i32 %910, %428
  %912 = sub i32 %911, %429
  %913 = sub i32 %912, %431
  %914 = sub i32 %913, %438
  %915 = add i32 %914, %439
  %916 = add i32 %915, %440
  %917 = sub i32 %916, %441
  %918 = add i32 %917, %442
  %919 = sub i32 %918, %443
  %920 = add i32 %919, %444
  %921 = add i32 %920, %447
  %922 = add i32 %921, %448
  %923 = add i32 %922, %449
  %924 = sub i32 %923, %456
  %925 = sub i32 %924, %457
  %926 = add i32 %925, %458
  %927 = add i32 %926, %459
  %928 = add i32 %927, %460
  %929 = sub i32 %928, %461
  %930 = sub i32 %929, %463
  %931 = sub i32 %930, %314
  %932 = add i32 %931, %466
  %933 = add i32 %932, %467
  %934 = add i32 %933, %468
  %935 = add i32 %934, %469
  %936 = sub i32 %935, %470
  %937 = sub i32 %936, %335
  %938 = sub i32 %937, %471
  %939 = sub i32 %938, %472
  %940 = sub i32 %939, %473
  %941 = add i32 %940, %474
  %942 = sub i32 %941, %476
  %943 = sub i32 %942, %477
  %944 = sub i32 %943, %479
  %945 = add i32 %944, %482
  %946 = sub i32 %945, %483
  %947 = sub i32 %946, %489
  %948 = add i32 %947, %357
  %949 = sub i32 %948, %493
  %950 = sub i32 %949, %494
  %951 = sub i32 %950, %495
  %952 = sub i32 %951, %411
  %953 = sub i32 %952, %496
  %954 = add i32 %953, %497
  %955 = add i32 %954, %498
  %956 = add i32 %955, %499
  %957 = add i32 %956, %500
  %958 = sub i32 %957, %501
  %959 = add i32 %958, %502
  %960 = sub i32 %959, %503
  %961 = sub i32 %960, %506
  %962 = add i32 %961, %507
  %963 = add i32 %962, %512
  %964 = add i32 %963, %514
  %965 = add i32 %964, %515
  %966 = sub i32 %965, %516
  %967 = sub i32 %966, %517
  %968 = add i32 %967, %518
  %969 = sub i32 %968, %520
  %970 = sub i32 %969, %522
  %971 = sub i32 %970, %523
  %972 = sub i32 %971, %526
  %973 = add i32 %972, %527
  %974 = sub i32 %973, %528
  %975 = add i32 %974, %532
  %976 = add i32 %975, %533
  %977 = sub i32 %976, %534
  %978 = add i32 %977, %537
  %979 = sub i32 %978, %538
  %980 = add i32 %979, %546
  %981 = sub i32 %980, %547
  %982 = add i32 %981, %549
  %983 = sub i32 %982, %553
  %984 = sub i32 %983, %563
  %985 = add i32 %984, %315
  %986 = add i32 %985, %329
  %987 = add i32 %986, %336
  %988 = sub i32 %987, %366
  %989 = sub i32 %988, %368
  %990 = sub i32 %989, %376
  %991 = sub i32 %990, %378
  %992 = sub i32 %991, %392
  %993 = sub i32 %992, %403
  %994 = add i32 %993, %416
  %995 = sub i32 %994, %451
  %996 = sub i32 %995, %454
  %997 = add i32 %996, %465
  %998 = sub i32 %997, %487
  %999 = add i32 %998, %488
  %1000 = sub i32 %999, %491
  %1001 = sub i32 %1000, %505
  %1002 = add i32 %1001, %508
  %1003 = sub i32 %1002, %511
  %1004 = sub i32 %1003, %513
  %1005 = sub i32 %1004, %536
  %1006 = add i32 %1005, %539
  %1007 = sub i32 %1006, %541
  %1008 = sub i32 %1007, %545
  %1009 = sub i32 %1008, %551
  %1010 = sub i32 %1009, %555
  %1011 = add i32 %1010, %557
  %1012 = add i32 %1011, %559
  %1013 = add i32 %1012, %561
  %1014 = sub i32 %1013, %565
  %1015 = sub i32 %1014, %395
  %1016 = sub i32 %1015, %413
  %1017 = add i32 %1016, %627
  %1018 = add i32 %1017, %629
  %1019 = add i32 %1018, %625
  %1020 = add i32 %1019, %611
  %1021 = add i32 %1020, %620
  %1022 = add i32 %1021, %602
  %1023 = icmp eq i32 %20, %1022
  %1024 = select i1 %1023, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1025 = tail call i32 @puts(i8* nonnull dereferenceable(1) %1024)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
