digraph "DFG for'main' function" {
	Node0x14abc28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14abca8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14abd38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14abd98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x14abe48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x14ac278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14ac358[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x14ac458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14ac518[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x14ac5c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14ac688[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x14ac738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14a6b50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x14ac938[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14ad8a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14adf18[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14adf78[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x14adff0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x14ae060[shape=record, label="  %15 = and i32 %12, %11"];
	Node0x14ae0d0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x14ae140[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x14ae1b0[shape=record, label="  %18 = xor i32 %10, -1"];
	Node0x14ae220[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x14ae290[shape=record, label="  %20 = or i32 %13, %18"];
	Node0x14ae300[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x14ae370[shape=record, label="  %22 = add i32 %14, %19"];
	Node0x14ae3e0[shape=record, label="  %23 = sub i32 %22, %17"];
	Node0x14ae450[shape=record, label="  %24 = sub i32 %23, %21"];
	Node0x14ae4c0[shape=record, label="  %25 = or i32 %12, %11"];
	Node0x14ae530[shape=record, label="  %26 = xor i32 %12, 2147483647"];
	Node0x14ae5a0[shape=record, label="  %27 = shl i32 %11, 1"];
	Node0x14ae610[shape=record, label="  %28 = or i32 %26, %11"];
	Node0x14ae680[shape=record, label="  %29 = xor i32 %13, %18"];
	Node0x14ae6f0[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x14ae760[shape=record, label="  %31 = xor i32 %30, -1"];
	Node0x14ae7d0[shape=record, label="  %32 = and i32 %13, %18"];
	Node0x14ae840[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0x14ae8b0[shape=record, label="  %34 = or i32 %13, %10"];
	Node0x14ae920[shape=record, label="  %35 = xor i32 %34, -1"];
	Node0x14ae990[shape=record, label="  %36 = xor i32 %21, -2"];
	Node0x14aea00[shape=record, label="  %37 = mul i32 %30, -6"];
	Node0x14aea70[shape=record, label="  %38 = add i32 %32, %35"];
	Node0x14aeae0[shape=record, label="  %39 = mul i32 %38, -3"];
	Node0x14aeb50[shape=record, label="  %40 = add i32 %13, %25"];
	Node0x14aebc0[shape=record, label="  %41 = add i32 %40, %28"];
	Node0x14aec30[shape=record, label="  %42 = shl i32 %41, 1"];
	Node0x14aeca0[shape=record, label="  %43 = sub i32 4, %27"];
	Node0x14aed10[shape=record, label="  %44 = add i32 %43, %14"];
	Node0x14aed80[shape=record, label="  %45 = add i32 %44, %16"];
	Node0x14aedf0[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x14aee60[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x14aeed0[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x14aef40[shape=record, label="  %49 = add i32 %48, %37"];
	Node0x14aefb0[shape=record, label="  %50 = sub i32 %49, %36"];
	Node0x14af020[shape=record, label="  %51 = add i32 %50, %39"];
	Node0x14af090[shape=record, label="  %52 = add i32 %51, %42"];
	Node0x14af100[shape=record, label="  %53 = icmp eq i32 %24, %52"];
	Node0x144b8b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14af190[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x14af438[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14af598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14af6a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14af7b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14af878[shape=record, label="  ret i32 0"];
	Node0x14abc28 -> Node0x14abca8;
	Node0x14abca8 -> Node0x14abd38;
	Node0x14abd38 -> Node0x14abd98;
	Node0x14abd98 -> Node0x14abe48;
	Node0x14abe48 -> Node0x14ac278;
	Node0x14ac278 -> Node0x14ac358;
	Node0x14ac358 -> Node0x14ac458;
	Node0x14ac458 -> Node0x14ac518;
	Node0x14ac518 -> Node0x14ac5c8;
	Node0x14ac5c8 -> Node0x14ac688;
	Node0x14ac688 -> Node0x14ac738;
	Node0x14ac738 -> Node0x14a6b50;
	Node0x14a6b50 -> Node0x14ac938;
	Node0x14ac938 -> Node0x14ad8a8;
	Node0x14ad8a8 -> Node0x14adf18;
	Node0x14adf18 -> Node0x14adf78;
	Node0x14adf78 -> Node0x14adff0;
	Node0x14adff0 -> Node0x14ae060;
	Node0x14ae060 -> Node0x14ae0d0;
	Node0x14ae0d0 -> Node0x14ae140;
	Node0x14ae140 -> Node0x14ae1b0;
	Node0x14ae1b0 -> Node0x14ae220;
	Node0x14ae220 -> Node0x14ae290;
	Node0x14ae290 -> Node0x14ae300;
	Node0x14ae300 -> Node0x14ae370;
	Node0x14ae370 -> Node0x14ae3e0;
	Node0x14ae3e0 -> Node0x14ae450;
	Node0x14ae450 -> Node0x14ae4c0;
	Node0x14ae4c0 -> Node0x14ae530;
	Node0x14ae530 -> Node0x14ae5a0;
	Node0x14ae5a0 -> Node0x14ae610;
	Node0x14ae610 -> Node0x14ae680;
	Node0x14ae680 -> Node0x14ae6f0;
	Node0x14ae6f0 -> Node0x14ae760;
	Node0x14ae760 -> Node0x14ae7d0;
	Node0x14ae7d0 -> Node0x14ae840;
	Node0x14ae840 -> Node0x14ae8b0;
	Node0x14ae8b0 -> Node0x14ae920;
	Node0x14ae920 -> Node0x14ae990;
	Node0x14ae990 -> Node0x14aea00;
	Node0x14aea00 -> Node0x14aea70;
	Node0x14aea70 -> Node0x14aeae0;
	Node0x14aeae0 -> Node0x14aeb50;
	Node0x14aeb50 -> Node0x14aebc0;
	Node0x14aebc0 -> Node0x14aec30;
	Node0x14aec30 -> Node0x14aeca0;
	Node0x14aeca0 -> Node0x14aed10;
	Node0x14aed10 -> Node0x14aed80;
	Node0x14aed80 -> Node0x14aedf0;
	Node0x14aedf0 -> Node0x14aee60;
	Node0x14aee60 -> Node0x14aeed0;
	Node0x14aeed0 -> Node0x14aef40;
	Node0x14aef40 -> Node0x14aefb0;
	Node0x14aefb0 -> Node0x14af020;
	Node0x14af020 -> Node0x14af090;
	Node0x14af090 -> Node0x14af100;
	Node0x14af100 -> Node0x144b8b8;
	Node0x144b8b8 -> Node0x14af190;
	Node0x14af190 -> Node0x14af438;
	Node0x14af438 -> Node0x14af598;
	Node0x14af598 -> Node0x14af6a8;
	Node0x14af6a8 -> Node0x14af7b8;
	Node0x14af7b8 -> Node0x14af878;
edge [color=red]
	Node0x14abc28 -> Node0x14abe48;
	Node0x14abe48 -> Node0x14ac278;
	Node0x14abca8 -> Node0x14ac358;
	Node0x14ac358 -> Node0x14ac458;
	Node0x14abd38 -> Node0x14ac518;
	Node0x14ac518 -> Node0x14ac5c8;
	Node0x14abd98 -> Node0x14ac688;
	Node0x14ac688 -> Node0x14ac738;
	Node0x14abc28 -> Node0x14a6b50;
	Node0x14abca8 -> Node0x14a6b50;
	Node0x14abd38 -> Node0x14a6b50;
	Node0x14abd98 -> Node0x14a6b50;
	Node0x14abc28 -> Node0x14ac938;
	Node0x14abca8 -> Node0x14ad8a8;
	Node0x14abd38 -> Node0x14adf18;
	Node0x14abd98 -> Node0x14adf78;
	Node0x14adf18 -> Node0x14adff0;
	Node0x14ad8a8 -> Node0x14adff0;
	Node0x14adf18 -> Node0x14ae060;
	Node0x14ad8a8 -> Node0x14ae060;
	Node0x14ae060 -> Node0x14ae0d0;
	Node0x14ae0d0 -> Node0x14ae140;
	Node0x14ac938 -> Node0x14ae1b0;
	Node0x14ae1b0 -> Node0x14ae220;
	Node0x14adf78 -> Node0x14ae290;
	Node0x14ae1b0 -> Node0x14ae290;
	Node0x14ae290 -> Node0x14ae300;
	Node0x14adff0 -> Node0x14ae370;
	Node0x14ae220 -> Node0x14ae370;
	Node0x14ae370 -> Node0x14ae3e0;
	Node0x14ae140 -> Node0x14ae3e0;
	Node0x14ae3e0 -> Node0x14ae450;
	Node0x14ae300 -> Node0x14ae450;
	Node0x14adf18 -> Node0x14ae4c0;
	Node0x14ad8a8 -> Node0x14ae4c0;
	Node0x14adf18 -> Node0x14ae530;
	Node0x14ad8a8 -> Node0x14ae5a0;
	Node0x14ae530 -> Node0x14ae610;
	Node0x14ad8a8 -> Node0x14ae610;
	Node0x14adf78 -> Node0x14ae680;
	Node0x14ae1b0 -> Node0x14ae680;
	Node0x14adf78 -> Node0x14ae6f0;
	Node0x14ac938 -> Node0x14ae6f0;
	Node0x14ae6f0 -> Node0x14ae760;
	Node0x14adf78 -> Node0x14ae7d0;
	Node0x14ae1b0 -> Node0x14ae7d0;
	Node0x14ae7d0 -> Node0x14ae840;
	Node0x14adf78 -> Node0x14ae8b0;
	Node0x14ac938 -> Node0x14ae8b0;
	Node0x14ae8b0 -> Node0x14ae920;
	Node0x14ae300 -> Node0x14ae990;
	Node0x14ae6f0 -> Node0x14aea00;
	Node0x14ae7d0 -> Node0x14aea70;
	Node0x14ae920 -> Node0x14aea70;
	Node0x14aea70 -> Node0x14aeae0;
	Node0x14adf78 -> Node0x14aeb50;
	Node0x14ae4c0 -> Node0x14aeb50;
	Node0x14aeb50 -> Node0x14aebc0;
	Node0x14ae610 -> Node0x14aebc0;
	Node0x14aebc0 -> Node0x14aec30;
	Node0x14ae5a0 -> Node0x14aeca0;
	Node0x14aeca0 -> Node0x14aed10;
	Node0x14adff0 -> Node0x14aed10;
	Node0x14aed10 -> Node0x14aed80;
	Node0x14ae0d0 -> Node0x14aed80;
	Node0x14aed80 -> Node0x14aedf0;
	Node0x14ae680 -> Node0x14aedf0;
	Node0x14aedf0 -> Node0x14aee60;
	Node0x14ae760 -> Node0x14aee60;
	Node0x14aee60 -> Node0x14aeed0;
	Node0x14ae840 -> Node0x14aeed0;
	Node0x14aeed0 -> Node0x14aef40;
	Node0x14aea00 -> Node0x14aef40;
	Node0x14aef40 -> Node0x14aefb0;
	Node0x14ae990 -> Node0x14aefb0;
	Node0x14aefb0 -> Node0x14af020;
	Node0x14aeae0 -> Node0x14af020;
	Node0x14af020 -> Node0x14af090;
	Node0x14aec30 -> Node0x14af090;
	Node0x14ae450 -> Node0x14af100;
	Node0x14af090 -> Node0x14af100;
	Node0x14af100 -> Node0x144b8b8;
	Node0x144b8b8 -> Node0x14af190;
	Node0x14ac688 -> Node0x14af438;
	Node0x14ac518 -> Node0x14af598;
	Node0x14ac358 -> Node0x14af6a8;
	Node0x14abe48 -> Node0x14af7b8;
}
