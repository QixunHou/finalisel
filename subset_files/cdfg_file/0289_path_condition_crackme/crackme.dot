digraph "DFG for'crackme' function" {
	Node0x192eca0[shape=record, label="  %3 = xor i32 %0, -1"];
	Node0x192ed10[shape=record, label="  %4 = xor i32 %1, %0"];
	Node0x192edd0[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x192ee40[shape=record, label="  %6 = and i32 %5, %0"];
	Node0x192eeb0[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x192ef50[shape=record, label="  %8 = xor i32 %7, -2"];
	Node0x192efc0[shape=record, label="  %9 = and i32 %1, %0"];
	Node0x192f030[shape=record, label="  %10 = shl i32 %9, 1"];
	Node0x192f0a0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x192f110[shape=record, label="  %12 = shl i32 %4, 1"];
	Node0x192f180[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x192f1f0[shape=record, label="  %14 = add i32 %1, 1"];
	Node0x192f260[shape=record, label="  %15 = or i32 %1, %0"];
	Node0x192f2d0[shape=record, label="  %16 = and i32 %3, %1"];
	Node0x192f370[shape=record, label="  %17 = shl i32 %15, 2"];
	Node0x192f410[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x192f4b0[shape=record, label="  %19 = mul i32 %16, -5"];
	Node0x192f550[shape=record, label="  %20 = mul i32 %9, -6"];
	Node0x192f5c0[shape=record, label="  %21 = add i32 %14, %1"];
	Node0x192f630[shape=record, label="  %22 = sub i32 %21, %4"];
	Node0x192f6a0[shape=record, label="  %23 = add i32 %22, %15"];
	Node0x192f710[shape=record, label="  %24 = add i32 %23, %16"];
	Node0x192f780[shape=record, label="  %25 = sub i32 %24, %6"];
	Node0x192f7f0[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x192f860[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x192f8d0[shape=record, label="  %28 = add i32 %27, %8"];
	Node0x192f940[shape=record, label="  %29 = add i32 %28, %11"];
	Node0x192f9b0[shape=record, label="  %30 = add i32 %29, %13"];
	Node0x192fa20[shape=record, label="  %31 = sub i32 %30, %18"];
	Node0x192fa90[shape=record, label="  %32 = icmp eq i32 %31, %3"];
	Node0x18cf268[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1930140[shape=record, label="  %34 = tail call i32 @puts(i8* nonnull dereferenceable(1) %33)"];
	Node0x1930190[shape=record, label="  ret void"];
	Node0x192eca0 -> Node0x192ed10;
	Node0x192ed10 -> Node0x192edd0;
	Node0x192edd0 -> Node0x192ee40;
	Node0x192ee40 -> Node0x192eeb0;
	Node0x192eeb0 -> Node0x192ef50;
	Node0x192ef50 -> Node0x192efc0;
	Node0x192efc0 -> Node0x192f030;
	Node0x192f030 -> Node0x192f0a0;
	Node0x192f0a0 -> Node0x192f110;
	Node0x192f110 -> Node0x192f180;
	Node0x192f180 -> Node0x192f1f0;
	Node0x192f1f0 -> Node0x192f260;
	Node0x192f260 -> Node0x192f2d0;
	Node0x192f2d0 -> Node0x192f370;
	Node0x192f370 -> Node0x192f410;
	Node0x192f410 -> Node0x192f4b0;
	Node0x192f4b0 -> Node0x192f550;
	Node0x192f550 -> Node0x192f5c0;
	Node0x192f5c0 -> Node0x192f630;
	Node0x192f630 -> Node0x192f6a0;
	Node0x192f6a0 -> Node0x192f710;
	Node0x192f710 -> Node0x192f780;
	Node0x192f780 -> Node0x192f7f0;
	Node0x192f7f0 -> Node0x192f860;
	Node0x192f860 -> Node0x192f8d0;
	Node0x192f8d0 -> Node0x192f940;
	Node0x192f940 -> Node0x192f9b0;
	Node0x192f9b0 -> Node0x192fa20;
	Node0x192fa20 -> Node0x192fa90;
	Node0x192fa90 -> Node0x18cf268;
	Node0x18cf268 -> Node0x1930140;
	Node0x1930140 -> Node0x1930190;
edge [color=red]
	Node0x192edd0 -> Node0x192ee40;
	Node0x192ee40 -> Node0x192eeb0;
	Node0x192eeb0 -> Node0x192ef50;
	Node0x192efc0 -> Node0x192f030;
	Node0x192f030 -> Node0x192f0a0;
	Node0x192ed10 -> Node0x192f110;
	Node0x192f110 -> Node0x192f180;
	Node0x192eca0 -> Node0x192f2d0;
	Node0x192f260 -> Node0x192f370;
	Node0x192f370 -> Node0x192f410;
	Node0x192f2d0 -> Node0x192f4b0;
	Node0x192efc0 -> Node0x192f550;
	Node0x192f1f0 -> Node0x192f5c0;
	Node0x192f5c0 -> Node0x192f630;
	Node0x192ed10 -> Node0x192f630;
	Node0x192f630 -> Node0x192f6a0;
	Node0x192f260 -> Node0x192f6a0;
	Node0x192f6a0 -> Node0x192f710;
	Node0x192f2d0 -> Node0x192f710;
	Node0x192f710 -> Node0x192f780;
	Node0x192ee40 -> Node0x192f780;
	Node0x192f780 -> Node0x192f7f0;
	Node0x192f4b0 -> Node0x192f7f0;
	Node0x192f7f0 -> Node0x192f860;
	Node0x192f550 -> Node0x192f860;
	Node0x192f860 -> Node0x192f8d0;
	Node0x192ef50 -> Node0x192f8d0;
	Node0x192f8d0 -> Node0x192f940;
	Node0x192f0a0 -> Node0x192f940;
	Node0x192f940 -> Node0x192f9b0;
	Node0x192f180 -> Node0x192f9b0;
	Node0x192f9b0 -> Node0x192fa20;
	Node0x192f410 -> Node0x192fa20;
	Node0x192fa20 -> Node0x192fa90;
	Node0x192eca0 -> Node0x192fa90;
	Node0x192fa90 -> Node0x18cf268;
	Node0x18cf268 -> Node0x1930140;
}
