digraph "DFG for'crackme' function" {
	Node0xbf9e70[shape=record, label="  %4 = xor i32 %1, -1"];
	Node0xbf9f30[shape=record, label="  %5 = and i32 %2, %1"];
	Node0xbf9fa0[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0xbfa010[shape=record, label="  %7 = or i32 %6, %1"];
	Node0xbfa080[shape=record, label="  %8 = xor i32 %7, %5"];
	Node0xbfa0f0[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0xbfa160[shape=record, label="  %10 = xor i32 %2, %0"];
	Node0xbfa1d0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0xbfa240[shape=record, label="  %12 = or i32 %11, %1"];
	Node0xbfa2b0[shape=record, label="  %13 = sub i32 %9, %12"];
	Node0xbfa320[shape=record, label="  %14 = and i32 %1, %0"];
	Node0xbfa390[shape=record, label="  %15 = or i32 %10, %14"];
	Node0xbfa400[shape=record, label="  %16 = and i32 %5, %0"];
	Node0xbfa470[shape=record, label="  %17 = xor i32 %2, %1"];
	Node0xbfa4e0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0xbfa550[shape=record, label="  %19 = or i32 %18, %0"];
	Node0xbfa5c0[shape=record, label="  %20 = xor i32 %16, %19"];
	Node0xbfa630[shape=record, label="  %21 = xor i32 %2, -1"];
	Node0xbfa6a0[shape=record, label="  %22 = or i32 %21, %1"];
	Node0xbfa710[shape=record, label="  %23 = and i32 %22, %6"];
	Node0xbfa7b0[shape=record, label="  %24 = xor i32 %0, 2147483647"];
	Node0xbfa820[shape=record, label="  %25 = and i32 %24, %2"];
	Node0xbfa890[shape=record, label="  %26 = and i32 %4, %2"];
	Node0xbfa900[shape=record, label="  %27 = and i32 %26, %0"];
	Node0xbfa970[shape=record, label="  %28 = or i32 %17, %0"];
	Node0xbfa9e0[shape=record, label="  %29 = xor i32 %27, %28"];
	Node0xbfaa50[shape=record, label="  %30 = or i32 %2, %0"];
	Node0xbfaac0[shape=record, label="  %31 = and i32 %30, %4"];
	Node0xbfab30[shape=record, label="  %32 = and i32 %2, %0"];
	Node0xbfadb0[shape=record, label="  %33 = or i32 %1, %0"];
	Node0xbfae20[shape=record, label="  %34 = xor i32 %33, -1"];
	Node0xbfae90[shape=record, label="  %35 = or i32 %32, %34"];
	Node0xbfaf00[shape=record, label="  %36 = and i32 %26, %6"];
	Node0xbfaf70[shape=record, label="  %37 = or i32 %4, %2"];
	Node0xbfafe0[shape=record, label="  %38 = and i32 %37, %0"];
	Node0xbfb050[shape=record, label="  %39 = or i32 %36, %38"];
	Node0xbfb0c0[shape=record, label="  %40 = or i32 %2, %1"];
	Node0xbfb130[shape=record, label="  %41 = xor i32 %40, %14"];
	Node0xbfb1a0[shape=record, label="  %42 = xor i32 %37, %6"];
	Node0xbfb210[shape=record, label="  %43 = xor i32 %42, %27"];
	Node0xbfb280[shape=record, label="  %44 = xor i32 %40, -1"];
	Node0xbfb2f0[shape=record, label="  %45 = and i32 %44, %6"];
	Node0xbfb360[shape=record, label="  %46 = and i32 %21, %1"];
	Node0xbfb3d0[shape=record, label="  %47 = and i32 %46, %6"];
	Node0xbfb470[shape=record, label="  %48 = mul i32 %47, -6"];
	Node0xbfb4e0[shape=record, label="  %49 = and i32 %44, %0"];
	Node0xbfb550[shape=record, label="  %50 = and i32 %46, %0"];
	Node0xbfb5c0[shape=record, label="  %51 = xor i32 %22, -1"];
	Node0xbfb630[shape=record, label="  %52 = and i32 %51, %6"];
	Node0xbfb6a0[shape=record, label="  %53 = and i32 %5, %6"];
	Node0xbfb710[shape=record, label="  %54 = and i32 %51, %0"];
	Node0xbfb7b0[shape=record, label="  %55 = shl i32 %54, 1"];
	Node0xbfb820[shape=record, label="  %56 = add i32 %52, %50"];
	Node0xbfb8c0[shape=record, label="  %57 = mul i32 %56, -3"];
	Node0xbfb930[shape=record, label="  %58 = add i32 %53, %45"];
	Node0xbfb9d0[shape=record, label="  %59 = mul i32 %58, -7"];
	Node0xbfba40[shape=record, label="  %60 = add i32 %23, %25"];
	Node0xbfbab0[shape=record, label="  %61 = shl i32 %60, 1"];
	Node0xbfbb20[shape=record, label="  %62 = sub i32 %10, %15"];
	Node0xbfbb90[shape=record, label="  %63 = sub i32 %62, %31"];
	Node0xbfbc00[shape=record, label="  %64 = add i32 %63, %35"];
	Node0xbfc080[shape=record, label="  %65 = add i32 %64, %41"];
	Node0xbfc0f0[shape=record, label="  %66 = add i32 %65, %49"];
	Node0xbfc160[shape=record, label="  %67 = add i32 %66, %20"];
	Node0xbfc1d0[shape=record, label="  %68 = sub i32 %67, %29"];
	Node0xbfc240[shape=record, label="  %69 = sub i32 %68, %39"];
	Node0xbfc2b0[shape=record, label="  %70 = add i32 %69, %43"];
	Node0xbfc320[shape=record, label="  %71 = add i32 %70, %48"];
	Node0xbfc390[shape=record, label="  %72 = sub i32 %71, %55"];
	Node0xbfc400[shape=record, label="  %73 = add i32 %72, %57"];
	Node0xbfc470[shape=record, label="  %74 = add i32 %73, %59"];
	Node0xbfc4e0[shape=record, label="  %75 = add i32 %74, %61"];
	Node0xbfc550[shape=record, label="  %76 = icmp eq i32 %13, %75"];
	Node0xb9a268[shape=record, label="  %77 = select i1 %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xbfc7e0[shape=record, label="  %78 = tail call i32 @puts(i8* nonnull dereferenceable(1) %77)"];
	Node0xbfc830[shape=record, label="  ret void"];
	Node0xbf9e70 -> Node0xbf9f30;
	Node0xbf9f30 -> Node0xbf9fa0;
	Node0xbf9fa0 -> Node0xbfa010;
	Node0xbfa010 -> Node0xbfa080;
	Node0xbfa080 -> Node0xbfa0f0;
	Node0xbfa0f0 -> Node0xbfa160;
	Node0xbfa160 -> Node0xbfa1d0;
	Node0xbfa1d0 -> Node0xbfa240;
	Node0xbfa240 -> Node0xbfa2b0;
	Node0xbfa2b0 -> Node0xbfa320;
	Node0xbfa320 -> Node0xbfa390;
	Node0xbfa390 -> Node0xbfa400;
	Node0xbfa400 -> Node0xbfa470;
	Node0xbfa470 -> Node0xbfa4e0;
	Node0xbfa4e0 -> Node0xbfa550;
	Node0xbfa550 -> Node0xbfa5c0;
	Node0xbfa5c0 -> Node0xbfa630;
	Node0xbfa630 -> Node0xbfa6a0;
	Node0xbfa6a0 -> Node0xbfa710;
	Node0xbfa710 -> Node0xbfa7b0;
	Node0xbfa7b0 -> Node0xbfa820;
	Node0xbfa820 -> Node0xbfa890;
	Node0xbfa890 -> Node0xbfa900;
	Node0xbfa900 -> Node0xbfa970;
	Node0xbfa970 -> Node0xbfa9e0;
	Node0xbfa9e0 -> Node0xbfaa50;
	Node0xbfaa50 -> Node0xbfaac0;
	Node0xbfaac0 -> Node0xbfab30;
	Node0xbfab30 -> Node0xbfadb0;
	Node0xbfadb0 -> Node0xbfae20;
	Node0xbfae20 -> Node0xbfae90;
	Node0xbfae90 -> Node0xbfaf00;
	Node0xbfaf00 -> Node0xbfaf70;
	Node0xbfaf70 -> Node0xbfafe0;
	Node0xbfafe0 -> Node0xbfb050;
	Node0xbfb050 -> Node0xbfb0c0;
	Node0xbfb0c0 -> Node0xbfb130;
	Node0xbfb130 -> Node0xbfb1a0;
	Node0xbfb1a0 -> Node0xbfb210;
	Node0xbfb210 -> Node0xbfb280;
	Node0xbfb280 -> Node0xbfb2f0;
	Node0xbfb2f0 -> Node0xbfb360;
	Node0xbfb360 -> Node0xbfb3d0;
	Node0xbfb3d0 -> Node0xbfb470;
	Node0xbfb470 -> Node0xbfb4e0;
	Node0xbfb4e0 -> Node0xbfb550;
	Node0xbfb550 -> Node0xbfb5c0;
	Node0xbfb5c0 -> Node0xbfb630;
	Node0xbfb630 -> Node0xbfb6a0;
	Node0xbfb6a0 -> Node0xbfb710;
	Node0xbfb710 -> Node0xbfb7b0;
	Node0xbfb7b0 -> Node0xbfb820;
	Node0xbfb820 -> Node0xbfb8c0;
	Node0xbfb8c0 -> Node0xbfb930;
	Node0xbfb930 -> Node0xbfb9d0;
	Node0xbfb9d0 -> Node0xbfba40;
	Node0xbfba40 -> Node0xbfbab0;
	Node0xbfbab0 -> Node0xbfbb20;
	Node0xbfbb20 -> Node0xbfbb90;
	Node0xbfbb90 -> Node0xbfbc00;
	Node0xbfbc00 -> Node0xbfc080;
	Node0xbfc080 -> Node0xbfc0f0;
	Node0xbfc0f0 -> Node0xbfc160;
	Node0xbfc160 -> Node0xbfc1d0;
	Node0xbfc1d0 -> Node0xbfc240;
	Node0xbfc240 -> Node0xbfc2b0;
	Node0xbfc2b0 -> Node0xbfc320;
	Node0xbfc320 -> Node0xbfc390;
	Node0xbfc390 -> Node0xbfc400;
	Node0xbfc400 -> Node0xbfc470;
	Node0xbfc470 -> Node0xbfc4e0;
	Node0xbfc4e0 -> Node0xbfc550;
	Node0xbfc550 -> Node0xb9a268;
	Node0xb9a268 -> Node0xbfc7e0;
	Node0xbfc7e0 -> Node0xbfc830;
edge [color=red]
	Node0xbf9fa0 -> Node0xbfa010;
	Node0xbfa010 -> Node0xbfa080;
	Node0xbf9f30 -> Node0xbfa080;
	Node0xbfa080 -> Node0xbfa0f0;
	Node0xbfa160 -> Node0xbfa1d0;
	Node0xbfa1d0 -> Node0xbfa240;
	Node0xbfa0f0 -> Node0xbfa2b0;
	Node0xbfa240 -> Node0xbfa2b0;
	Node0xbfa160 -> Node0xbfa390;
	Node0xbfa320 -> Node0xbfa390;
	Node0xbf9f30 -> Node0xbfa400;
	Node0xbfa470 -> Node0xbfa4e0;
	Node0xbfa4e0 -> Node0xbfa550;
	Node0xbfa400 -> Node0xbfa5c0;
	Node0xbfa550 -> Node0xbfa5c0;
	Node0xbfa630 -> Node0xbfa6a0;
	Node0xbfa6a0 -> Node0xbfa710;
	Node0xbf9fa0 -> Node0xbfa710;
	Node0xbfa7b0 -> Node0xbfa820;
	Node0xbf9e70 -> Node0xbfa890;
	Node0xbfa890 -> Node0xbfa900;
	Node0xbfa470 -> Node0xbfa970;
	Node0xbfa900 -> Node0xbfa9e0;
	Node0xbfa970 -> Node0xbfa9e0;
	Node0xbfaa50 -> Node0xbfaac0;
	Node0xbf9e70 -> Node0xbfaac0;
	Node0xbfadb0 -> Node0xbfae20;
	Node0xbfab30 -> Node0xbfae90;
	Node0xbfae20 -> Node0xbfae90;
	Node0xbfa890 -> Node0xbfaf00;
	Node0xbf9fa0 -> Node0xbfaf00;
	Node0xbf9e70 -> Node0xbfaf70;
	Node0xbfaf70 -> Node0xbfafe0;
	Node0xbfaf00 -> Node0xbfb050;
	Node0xbfafe0 -> Node0xbfb050;
	Node0xbfb0c0 -> Node0xbfb130;
	Node0xbfa320 -> Node0xbfb130;
	Node0xbfaf70 -> Node0xbfb1a0;
	Node0xbf9fa0 -> Node0xbfb1a0;
	Node0xbfb1a0 -> Node0xbfb210;
	Node0xbfa900 -> Node0xbfb210;
	Node0xbfb0c0 -> Node0xbfb280;
	Node0xbfb280 -> Node0xbfb2f0;
	Node0xbf9fa0 -> Node0xbfb2f0;
	Node0xbfa630 -> Node0xbfb360;
	Node0xbfb360 -> Node0xbfb3d0;
	Node0xbf9fa0 -> Node0xbfb3d0;
	Node0xbfb3d0 -> Node0xbfb470;
	Node0xbfb280 -> Node0xbfb4e0;
	Node0xbfb360 -> Node0xbfb550;
	Node0xbfa6a0 -> Node0xbfb5c0;
	Node0xbfb5c0 -> Node0xbfb630;
	Node0xbf9fa0 -> Node0xbfb630;
	Node0xbf9f30 -> Node0xbfb6a0;
	Node0xbf9fa0 -> Node0xbfb6a0;
	Node0xbfb5c0 -> Node0xbfb710;
	Node0xbfb710 -> Node0xbfb7b0;
	Node0xbfb630 -> Node0xbfb820;
	Node0xbfb550 -> Node0xbfb820;
	Node0xbfb820 -> Node0xbfb8c0;
	Node0xbfb6a0 -> Node0xbfb930;
	Node0xbfb2f0 -> Node0xbfb930;
	Node0xbfb930 -> Node0xbfb9d0;
	Node0xbfa710 -> Node0xbfba40;
	Node0xbfa820 -> Node0xbfba40;
	Node0xbfba40 -> Node0xbfbab0;
	Node0xbfa160 -> Node0xbfbb20;
	Node0xbfa390 -> Node0xbfbb20;
	Node0xbfbb20 -> Node0xbfbb90;
	Node0xbfaac0 -> Node0xbfbb90;
	Node0xbfbb90 -> Node0xbfbc00;
	Node0xbfae90 -> Node0xbfbc00;
	Node0xbfbc00 -> Node0xbfc080;
	Node0xbfb130 -> Node0xbfc080;
	Node0xbfc080 -> Node0xbfc0f0;
	Node0xbfb4e0 -> Node0xbfc0f0;
	Node0xbfc0f0 -> Node0xbfc160;
	Node0xbfa5c0 -> Node0xbfc160;
	Node0xbfc160 -> Node0xbfc1d0;
	Node0xbfa9e0 -> Node0xbfc1d0;
	Node0xbfc1d0 -> Node0xbfc240;
	Node0xbfb050 -> Node0xbfc240;
	Node0xbfc240 -> Node0xbfc2b0;
	Node0xbfb210 -> Node0xbfc2b0;
	Node0xbfc2b0 -> Node0xbfc320;
	Node0xbfb470 -> Node0xbfc320;
	Node0xbfc320 -> Node0xbfc390;
	Node0xbfb7b0 -> Node0xbfc390;
	Node0xbfc390 -> Node0xbfc400;
	Node0xbfb8c0 -> Node0xbfc400;
	Node0xbfc400 -> Node0xbfc470;
	Node0xbfb9d0 -> Node0xbfc470;
	Node0xbfc470 -> Node0xbfc4e0;
	Node0xbfbab0 -> Node0xbfc4e0;
	Node0xbfa2b0 -> Node0xbfc550;
	Node0xbfc4e0 -> Node0xbfc550;
	Node0xbfc550 -> Node0xb9a268;
	Node0xb9a268 -> Node0xbfc7e0;
}
