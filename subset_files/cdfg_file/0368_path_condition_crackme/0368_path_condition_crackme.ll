; ModuleID = '../.././c_source_file/0368_path_condition_crackme.c'
source_filename = "../.././c_source_file/0368_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %1, %0
  %5 = xor i32 %2, %0
  %6 = xor i32 %5, -1
  %7 = and i32 %4, %6
  %8 = and i32 %2, %1
  %9 = xor i32 %8, %0
  %10 = and i32 %2, %0
  %11 = xor i32 %10, -1
  %12 = xor i32 %11, %1
  %13 = xor i32 %2, -1
  %14 = and i32 %13, %0
  %15 = or i32 %14, %4
  %16 = or i32 %2, %0
  %17 = xor i32 %4, -1
  %18 = and i32 %16, %17
  %19 = xor i32 %1, -1
  %20 = and i32 %6, %19
  %21 = and i32 %19, %0
  %22 = xor i32 %21, -1
  %23 = xor i32 %2, %1
  %24 = xor i32 %23, -1
  %25 = and i32 %24, %22
  %26 = and i32 %13, %1
  %27 = or i32 %26, %0
  %28 = or i32 %19, %0
  %29 = xor i32 %28, -1
  %30 = or i32 %10, %29
  %31 = xor i32 %8, -1
  %32 = xor i32 %21, %31
  %33 = or i32 %13, %0
  %34 = xor i32 %33, %1
  %35 = or i32 %13, %1
  %36 = xor i32 %33, -1
  %37 = or i32 %36, %19
  %38 = xor i32 %35, -1
  %39 = or i32 %38, %0
  %40 = xor i32 %0, -1
  %41 = or i32 %26, %40
  %42 = add i32 %28, 1
  %43 = and i32 %1, %0
  %44 = xor i32 %43, -1
  %45 = and i32 %44, %2
  %46 = and i32 %17, %2
  %47 = and i32 %28, %13
  %48 = or i32 %10, %19
  %49 = and i32 %31, %40
  %50 = xor i32 %28, %2
  %51 = xor i32 %35, %43
  %52 = or i32 %5, %17
  %53 = and i32 %24, %44
  %54 = and i32 %19, %2
  %55 = and i32 %54, %40
  %56 = or i32 %19, %2
  %57 = and i32 %56, %0
  %58 = or i32 %55, %57
  %59 = xor i32 %44, %2
  %60 = and i32 %5, %28
  %61 = xor i32 %26, -1
  %62 = or i32 %61, %0
  %63 = or i32 %38, %40
  %64 = or i32 %13, %29
  %65 = shl i32 %64, 1
  %66 = or i32 %8, %40
  %67 = xor i32 %33, %43
  %68 = or i32 %1, %0
  %69 = xor i32 %68, %2
  %70 = xor i32 %14, -1
  %71 = and i32 %70, %1
  %72 = shl i32 %71, 1
  %73 = or i32 %14, %38
  %74 = or i32 %14, %17
  %75 = or i32 %10, %1
  %76 = or i32 %2, %1
  %77 = and i32 %13, %22
  %78 = or i32 %4, %6
  %79 = shl i32 %78, 1
  %80 = and i32 %8, %0
  %81 = xor i32 %76, %0
  %82 = or i32 %80, %81
  %83 = or i32 %21, %24
  %84 = and i32 %33, %17
  %85 = xor i32 %76, -1
  %86 = xor i32 %85, %0
  %87 = xor i32 %10, %68
  %88 = xor i32 %68, -1
  %89 = or i32 %23, %88
  %90 = xor i32 %16, -1
  %91 = shl i32 %90, 1
  %92 = and i32 %54, %0
  %93 = xor i32 %56, %40
  %94 = xor i32 %93, %92
  %95 = or i32 %10, %85
  %96 = or i32 %4, %36
  %97 = or i32 %35, %40
  %98 = shl i32 %97, 1
  %99 = and i32 %76, %40
  %100 = or i32 %80, %99
  %101 = or i32 %4, %90
  %102 = or i32 %21, %13
  %103 = add i32 %43, 1
  %104 = or i32 %14, %8
  %105 = shl i32 %104, 1
  %106 = and i32 %16, %4
  %107 = and i32 %56, %40
  %108 = or i32 %92, %107
  %109 = and i32 %8, %40
  %110 = and i32 %23, %0
  %111 = xor i32 %109, -1
  %112 = xor i32 %110, %111
  %113 = xor i32 %29, %2
  %114 = or i32 %24, %29
  %115 = or i32 %10, %88
  %116 = shl i32 %115, 1
  %117 = and i32 %24, %40
  %118 = or i32 %5, %1
  %119 = or i32 %5, %4
  %120 = shl i32 %119, 1
  %121 = xor i32 %61, %0
  %122 = and i32 %23, %44
  %123 = or i32 %85, %40
  %124 = or i32 %23, %0
  %125 = xor i32 %92, %124
  %126 = or i32 %43, %2
  %127 = or i32 %4, %13
  %128 = and i32 %28, %24
  %129 = and i32 %16, %1
  %130 = shl i32 %129, 1
  %131 = or i32 %23, %29
  %132 = and i32 %28, %6
  %133 = or i32 %23, %43
  %134 = and i32 %4, %13
  %135 = shl i32 %68, 1
  %136 = or i32 %90, %1
  %137 = and i32 %76, %0
  %138 = xor i32 %23, %0
  %139 = xor i32 %80, %138
  %140 = xor i32 %80, -1
  %141 = xor i32 %81, %140
  %142 = xor i32 %21, %2
  %143 = or i32 %23, %40
  %144 = xor i32 %55, %143
  %145 = xor i32 %43, %2
  %146 = or i32 %24, %0
  %147 = or i32 %4, %2
  %148 = and i32 %4, %11
  %149 = or i32 %43, %90
  %150 = xor i32 %16, %1
  %151 = or i32 %92, %138
  %152 = and i32 %23, %22
  %153 = xor i32 %10, %28
  %154 = shl i32 %70, 1
  %155 = shl i32 %22, 1
  %156 = and i32 %11, %1
  %157 = or i32 %10, %26
  %158 = or i32 %5, %43
  %159 = and i32 %22, %2
  %160 = and i32 %5, %22
  %161 = and i32 %4, %2
  %162 = or i32 %31, %0
  %163 = xor i32 %16, %43
  %164 = shl i32 %163, 2
  %165 = or i32 %43, %6
  %166 = and i32 %33, %1
  %167 = or i32 %109, %137
  %168 = or i32 %43, %13
  %169 = and i32 %6, %17
  %170 = or i32 %43, %85
  %171 = xor i32 %26, %0
  %172 = or i32 %76, %40
  %173 = add i32 %35, 1
  %174 = or i32 %6, %1
  %175 = shl i32 %174, 1
  %176 = or i32 %6, %19
  %177 = or i32 %24, %88
  %178 = or i32 %5, %19
  %179 = and i32 %68, %6
  %180 = and i32 %35, %40
  %181 = and i32 %11, %17
  %182 = xor i32 %138, -1
  %183 = xor i32 %92, %182
  %184 = xor i32 %57, -1
  %185 = xor i32 %55, %184
  %186 = or i32 %5, %29
  %187 = and i32 %68, %24
  %188 = xor i32 %124, 2147483647
  %189 = or i32 %188, %92
  %190 = or i32 %35, %0
  %191 = and i32 %13, %17
  %192 = xor i32 %143, -1
  %193 = or i32 %55, %192
  %194 = and i32 %5, %44
  %195 = and i32 %4, %70
  %196 = or i32 %43, %36
  %197 = or i32 %8, %21
  %198 = xor i32 %99, %140
  %199 = or i32 %43, %38
  %200 = or i32 %13, %88
  %201 = xor i32 %107, 2147483647
  %202 = xor i32 %201, %92
  %203 = xor i32 %31, %0
  %204 = xor i32 %22, %2
  %205 = or i32 %6, %29
  %206 = or i32 %80, %182
  %207 = or i32 %6, %88
  %208 = xor i32 %10, %76
  %209 = xor i32 %24, %0
  %210 = shl i32 %209, 1
  %211 = or i32 %21, %2
  %212 = or i32 %21, %6
  %213 = and i32 %11, %19
  %214 = or i32 %26, %21
  %215 = or i32 %29, %2
  %216 = or i32 %90, %17
  %217 = or i32 %76, %0
  %218 = or i32 %6, %17
  %219 = and i32 %13, %44
  %220 = and i32 %28, %2
  %221 = xor i32 %21, %61
  %222 = or i32 %24, %40
  %223 = or i32 %90, %19
  %224 = or i32 %36, %17
  %225 = or i32 %43, %24
  %226 = or i32 %5, %88
  %227 = or i32 %8, %0
  %228 = and i32 %5, %4
  %229 = and i32 %6, %22
  %230 = shl i32 %19, 1
  %231 = or i32 %13, %17
  %232 = and i32 %33, %19
  %233 = shl i32 %232, 1
  %234 = xor i32 %70, %1
  %235 = or i32 %61, %40
  %236 = and i32 %16, %19
  %237 = and i32 %5, %68
  %238 = and i32 %33, %4
  %239 = and i32 %24, %0
  %240 = and i32 %23, %40
  %241 = or i32 %88, %2
  %242 = xor i32 %10, %1
  %243 = and i32 %5, %19
  %244 = and i32 %61, %0
  %245 = xor i32 %14, %35
  %246 = or i32 %10, %17
  %247 = shl i32 %246, 1
  %248 = or i32 %80, %240
  %249 = shl i32 %248, 1
  %250 = xor i32 %35, %0
  %251 = or i32 %85, %0
  %252 = or i32 %36, %1
  %253 = and i32 %23, %28
  %254 = or i32 %23, %21
  %255 = or i32 %109, %110
  %256 = xor i32 %240, %140
  %257 = xor i32 %36, %1
  %258 = or i32 %31, %40
  %259 = xor i32 %88, %2
  %260 = and i32 %61, %40
  %261 = and i32 %6, %1
  %262 = and i32 %31, %0
  %263 = xor i32 %38, %0
  %264 = and i32 %70, %17
  %265 = shl i32 %264, 2
  %266 = xor i32 %10, %61
  %267 = or i32 %17, %2
  %268 = shl i32 %267, 1
  %269 = or i32 %5, %21
  %270 = and i32 %5, %17
  %271 = and i32 %68, %13
  %272 = and i32 %70, %19
  %273 = xor i32 %137, %111
  %274 = and i32 %23, %68
  %275 = and i32 %68, %2
  %276 = or i32 %14, %19
  %277 = and i32 %5, %1
  %278 = xor i32 %14, %31
  %279 = xor i32 %76, %43
  %280 = or i32 %10, %4
  %281 = and i32 %35, %0
  %282 = and i32 %85, %40
  %283 = mul i32 %282, -10
  %284 = and i32 %26, %40
  %285 = and i32 %85, %0
  %286 = mul i32 %285, -21
  %287 = and i32 %26, %0
  %288 = mul i32 %287, -14
  %289 = and i32 %38, %40
  %290 = mul i32 %289, 7
  %291 = and i32 %38, %0
  %292 = shl i32 %80, 2
  %293 = sub i32 -2, %26
  %294 = add i32 %293, %14
  %295 = add i32 %294, %127
  %296 = add i32 %295, %69
  %297 = add i32 %296, %261
  %298 = add i32 %297, %242
  %299 = add i32 %298, %223
  %300 = add i32 %299, %216
  %301 = add i32 %300, %214
  %302 = add i32 %301, %203
  %303 = add i32 %302, %196
  %304 = add i32 %303, %166
  %305 = add i32 %304, %81
  %306 = add i32 %305, %137
  %307 = add i32 %306, %123
  %308 = add i32 %307, %110
  %309 = add i32 %308, %117
  %310 = add i32 %309, %86
  %311 = add i32 %310, %63
  %312 = sub i32 %311, %9
  %313 = add i32 %312, %125
  %314 = add i32 %313, %58
  %315 = add i32 %314, %189
  %316 = add i32 %315, %202
  %317 = shl i32 %316, 1
  %318 = add i32 %178, %162
  %319 = sub i32 %318, %49
  %320 = sub i32 %319, %37
  %321 = add i32 %320, %34
  %322 = mul i32 %321, 5
  %323 = add i32 %181, %0
  %324 = sub i32 %239, %323
  %325 = mul i32 %324, 3
  %326 = sub i32 %109, %284
  %327 = mul i32 %326, 18
  %328 = add i32 %266, %149
  %329 = shl i32 %328, 2
  %330 = sub i32 -5, %0
  %331 = sub i32 %330, %1
  %332 = add i32 %331, %42
  %333 = sub i32 %332, %2
  %334 = add i32 %333, %13
  %335 = add i32 %334, %103
  %336 = add i32 %335, %88
  %337 = add i32 %336, %21
  %338 = sub i32 %337, %43
  %339 = sub i32 %338, %28
  %340 = sub i32 %339, %230
  %341 = add i32 %340, %35
  %342 = sub i32 %341, %45
  %343 = add i32 %342, %46
  %344 = add i32 %343, %47
  %345 = add i32 %344, %50
  %346 = add i32 %345, %11
  %347 = add i32 %346, %26
  %348 = add i32 %347, %59
  %349 = add i32 %348, %77
  %350 = add i32 %349, %102
  %351 = add i32 %350, %113
  %352 = add i32 %351, %6
  %353 = sub i32 %352, %126
  %354 = add i32 %353, %134
  %355 = sub i32 %354, %135
  %356 = sub i32 %355, %142
  %357 = sub i32 %356, %145
  %358 = sub i32 %357, %147
  %359 = sub i32 %358, %155
  %360 = add i32 %359, %159
  %361 = add i32 %360, %161
  %362 = add i32 %361, %168
  %363 = add i32 %362, %173
  %364 = add i32 %363, %191
  %365 = add i32 %364, %16
  %366 = sub i32 %365, %200
  %367 = sub i32 %366, %204
  %368 = add i32 %367, %211
  %369 = sub i32 %368, %215
  %370 = sub i32 %369, %219
  %371 = sub i32 %370, %220
  %372 = sub i32 %371, %231
  %373 = sub i32 %372, %5
  %374 = sub i32 %373, %241
  %375 = sub i32 %374, %10
  %376 = sub i32 %375, %259
  %377 = sub i32 %376, %271
  %378 = add i32 %377, %275
  %379 = add i32 %378, %12
  %380 = sub i32 %379, %15
  %381 = add i32 %380, %18
  %382 = sub i32 %381, %20
  %383 = sub i32 %382, %25
  %384 = add i32 %383, %27
  %385 = sub i32 %384, %30
  %386 = add i32 %385, %32
  %387 = add i32 %386, %39
  %388 = add i32 %387, %41
  %389 = sub i32 %388, %48
  %390 = add i32 %389, %51
  %391 = add i32 %390, %52
  %392 = add i32 %391, %53
  %393 = sub i32 %392, %60
  %394 = add i32 %393, %62
  %395 = sub i32 %394, %65
  %396 = add i32 %395, %66
  %397 = add i32 %396, %67
  %398 = sub i32 %397, %73
  %399 = sub i32 %398, %74
  %400 = add i32 %399, %75
  %401 = sub i32 %400, %83
  %402 = sub i32 %401, %84
  %403 = sub i32 %402, %87
  %404 = add i32 %403, %89
  %405 = sub i32 %404, %91
  %406 = add i32 %405, %95
  %407 = add i32 %406, %96
  %408 = sub i32 %407, %101
  %409 = sub i32 %408, %106
  %410 = add i32 %409, %114
  %411 = sub i32 %410, %118
  %412 = sub i32 %411, %121
  %413 = add i32 %412, %122
  %414 = sub i32 %413, %128
  %415 = sub i32 %414, %131
  %416 = add i32 %415, %132
  %417 = sub i32 %416, %133
  %418 = sub i32 %417, %136
  %419 = sub i32 %418, %146
  %420 = add i32 %419, %148
  %421 = sub i32 %420, %150
  %422 = add i32 %421, %152
  %423 = sub i32 %422, %153
  %424 = sub i32 %423, %154
  %425 = sub i32 %424, %156
  %426 = sub i32 %425, %157
  %427 = add i32 %426, %158
  %428 = sub i32 %427, %160
  %429 = add i32 %428, %165
  %430 = sub i32 %429, %169
  %431 = add i32 %430, %170
  %432 = sub i32 %431, %171
  %433 = add i32 %432, %172
  %434 = sub i32 %433, %176
  %435 = sub i32 %434, %177
  %436 = add i32 %435, %179
  %437 = sub i32 %436, %180
  %438 = add i32 %437, %186
  %439 = sub i32 %438, %187
  %440 = sub i32 %439, %190
  %441 = sub i32 %440, %194
  %442 = sub i32 %441, %99
  %443 = sub i32 %442, %195
  %444 = add i32 %443, %197
  %445 = sub i32 %444, %199
  %446 = add i32 %445, %205
  %447 = add i32 %446, %143
  %448 = add i32 %447, %207
  %449 = sub i32 %448, %208
  %450 = add i32 %449, %212
  %451 = add i32 %450, %213
  %452 = add i32 %451, %217
  %453 = add i32 %452, %218
  %454 = sub i32 %453, %221
  %455 = sub i32 %454, %222
  %456 = add i32 %455, %224
  %457 = add i32 %456, %225
  %458 = sub i32 %457, %226
  %459 = sub i32 %458, %227
  %460 = add i32 %459, %228
  %461 = sub i32 %460, %229
  %462 = sub i32 %461, %234
  %463 = add i32 %462, %235
  %464 = add i32 %463, %236
  %465 = sub i32 %464, %237
  %466 = add i32 %465, %138
  %467 = sub i32 %466, %124
  %468 = add i32 %467, %238
  %469 = add i32 %468, %240
  %470 = add i32 %469, %243
  %471 = add i32 %470, %244
  %472 = sub i32 %471, %245
  %473 = sub i32 %472, %250
  %474 = add i32 %473, %251
  %475 = add i32 %474, %252
  %476 = sub i32 %475, %253
  %477 = add i32 %476, %254
  %478 = add i32 %477, %257
  %479 = sub i32 %478, %258
  %480 = sub i32 %479, %260
  %481 = sub i32 %480, %262
  %482 = sub i32 %481, %263
  %483 = sub i32 %482, %268
  %484 = add i32 %483, %269
  %485 = sub i32 %484, %270
  %486 = add i32 %485, %272
  %487 = add i32 %486, %274
  %488 = add i32 %487, %276
  %489 = sub i32 %488, %277
  %490 = sub i32 %489, %278
  %491 = sub i32 %490, %279
  %492 = sub i32 %491, %280
  %493 = sub i32 %492, %281
  %494 = sub i32 %493, %291
  %495 = sub i32 %494, %72
  %496 = sub i32 %495, %79
  %497 = sub i32 %496, %82
  %498 = add i32 %497, %94
  %499 = sub i32 %498, %98
  %500 = sub i32 %499, %100
  %501 = sub i32 %500, %105
  %502 = sub i32 %501, %108
  %503 = sub i32 %502, %112
  %504 = sub i32 %503, %116
  %505 = sub i32 %504, %120
  %506 = sub i32 %505, %130
  %507 = add i32 %506, %139
  %508 = add i32 %507, %141
  %509 = sub i32 %508, %144
  %510 = sub i32 %509, %151
  %511 = sub i32 %510, %164
  %512 = add i32 %511, %167
  %513 = sub i32 %512, %175
  %514 = sub i32 %513, %183
  %515 = add i32 %514, %185
  %516 = sub i32 %515, %193
  %517 = add i32 %516, %198
  %518 = add i32 %517, %206
  %519 = sub i32 %518, %210
  %520 = sub i32 %519, %233
  %521 = sub i32 %520, %247
  %522 = sub i32 %521, %255
  %523 = sub i32 %522, %256
  %524 = sub i32 %523, %265
  %525 = sub i32 %524, %273
  %526 = add i32 %525, %283
  %527 = add i32 %526, %286
  %528 = add i32 %527, %288
  %529 = add i32 %528, %290
  %530 = sub i32 %529, %292
  %531 = sub i32 %530, %249
  %532 = add i32 %531, %327
  %533 = add i32 %532, %329
  %534 = add i32 %533, %325
  %535 = add i32 %534, %322
  %536 = add i32 %535, %317
  %537 = icmp eq i32 %7, %536
  %538 = select i1 %537, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %539 = tail call i32 @puts(i8* nonnull dereferenceable(1) %538)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
