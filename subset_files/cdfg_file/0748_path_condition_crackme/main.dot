digraph "DFG for'main' function" {
	Node0x24e6d28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x24e6da8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x24e6e38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x24e7298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24e7378[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x24e7498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24e76d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x24e7788[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x24e86f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x24e8d80[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x24e8df0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x24e8e60[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x24e8ed0[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x24e8f40[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x24e8fb0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x24e9020[shape=record, label="  %14 = or i32 %6, %11"];
	Node0x24e9090[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x24e9100[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x24e9170[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x24e91e0[shape=record, label="  %18 = xor i32 %14, -1"];
	Node0x24e9250[shape=record, label="  %19 = shl i32 %8, 2"];
	Node0x24e92c0[shape=record, label="  %20 = add i32 %18, %17"];
	Node0x24e9330[shape=record, label="  %21 = mul i32 %20, 3"];
	Node0x24e93a0[shape=record, label="  %22 = add i32 %12, %11"];
	Node0x24e9410[shape=record, label="  %23 = add i32 %22, %15"];
	Node0x24e9480[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x24e94f0[shape=record, label="  %25 = sub i32 3, %7"];
	Node0x24e9560[shape=record, label="  %26 = add i32 %25, %13"];
	Node0x24e95d0[shape=record, label="  %27 = sub i32 %26, %14"];
	Node0x24e9640[shape=record, label="  %28 = add i32 %27, %19"];
	Node0x24e96b0[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x24e9720[shape=record, label="  %30 = add i32 %29, %24"];
	Node0x24e9790[shape=record, label="  %31 = icmp eq i32 %10, %30"];
	Node0x24879d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x24e9a30[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x24e9c88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x24e9de8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24e9ea8[shape=record, label="  ret i32 0"];
	Node0x24e6d28 -> Node0x24e6da8;
	Node0x24e6da8 -> Node0x24e6e38;
	Node0x24e6e38 -> Node0x24e7298;
	Node0x24e7298 -> Node0x24e7378;
	Node0x24e7378 -> Node0x24e7498;
	Node0x24e7498 -> Node0x24e76d0;
	Node0x24e76d0 -> Node0x24e7788;
	Node0x24e7788 -> Node0x24e86f8;
	Node0x24e86f8 -> Node0x24e8d80;
	Node0x24e8d80 -> Node0x24e8df0;
	Node0x24e8df0 -> Node0x24e8e60;
	Node0x24e8e60 -> Node0x24e8ed0;
	Node0x24e8ed0 -> Node0x24e8f40;
	Node0x24e8f40 -> Node0x24e8fb0;
	Node0x24e8fb0 -> Node0x24e9020;
	Node0x24e9020 -> Node0x24e9090;
	Node0x24e9090 -> Node0x24e9100;
	Node0x24e9100 -> Node0x24e9170;
	Node0x24e9170 -> Node0x24e91e0;
	Node0x24e91e0 -> Node0x24e9250;
	Node0x24e9250 -> Node0x24e92c0;
	Node0x24e92c0 -> Node0x24e9330;
	Node0x24e9330 -> Node0x24e93a0;
	Node0x24e93a0 -> Node0x24e9410;
	Node0x24e9410 -> Node0x24e9480;
	Node0x24e9480 -> Node0x24e94f0;
	Node0x24e94f0 -> Node0x24e9560;
	Node0x24e9560 -> Node0x24e95d0;
	Node0x24e95d0 -> Node0x24e9640;
	Node0x24e9640 -> Node0x24e96b0;
	Node0x24e96b0 -> Node0x24e9720;
	Node0x24e9720 -> Node0x24e9790;
	Node0x24e9790 -> Node0x24879d8;
	Node0x24879d8 -> Node0x24e9a30;
	Node0x24e9a30 -> Node0x24e9c88;
	Node0x24e9c88 -> Node0x24e9de8;
	Node0x24e9de8 -> Node0x24e9ea8;
edge [color=red]
	Node0x24e6d28 -> Node0x24e6e38;
	Node0x24e6e38 -> Node0x24e7298;
	Node0x24e6da8 -> Node0x24e7378;
	Node0x24e7378 -> Node0x24e7498;
	Node0x24e6d28 -> Node0x24e76d0;
	Node0x24e6da8 -> Node0x24e76d0;
	Node0x24e6d28 -> Node0x24e7788;
	Node0x24e6da8 -> Node0x24e86f8;
	Node0x24e86f8 -> Node0x24e8d80;
	Node0x24e7788 -> Node0x24e8d80;
	Node0x24e8d80 -> Node0x24e8df0;
	Node0x24e8df0 -> Node0x24e8e60;
	Node0x24e86f8 -> Node0x24e8ed0;
	Node0x24e7788 -> Node0x24e8f40;
	Node0x24e8ed0 -> Node0x24e8f40;
	Node0x24e8f40 -> Node0x24e8fb0;
	Node0x24e7788 -> Node0x24e9020;
	Node0x24e8ed0 -> Node0x24e9020;
	Node0x24e86f8 -> Node0x24e9090;
	Node0x24e7788 -> Node0x24e9090;
	Node0x24e86f8 -> Node0x24e9100;
	Node0x24e7788 -> Node0x24e9100;
	Node0x24e9100 -> Node0x24e9170;
	Node0x24e9020 -> Node0x24e91e0;
	Node0x24e8d80 -> Node0x24e9250;
	Node0x24e91e0 -> Node0x24e92c0;
	Node0x24e9170 -> Node0x24e92c0;
	Node0x24e92c0 -> Node0x24e9330;
	Node0x24e8f40 -> Node0x24e93a0;
	Node0x24e8ed0 -> Node0x24e93a0;
	Node0x24e93a0 -> Node0x24e9410;
	Node0x24e9090 -> Node0x24e9410;
	Node0x24e9410 -> Node0x24e9480;
	Node0x24e86f8 -> Node0x24e94f0;
	Node0x24e94f0 -> Node0x24e9560;
	Node0x24e8fb0 -> Node0x24e9560;
	Node0x24e9560 -> Node0x24e95d0;
	Node0x24e9020 -> Node0x24e95d0;
	Node0x24e95d0 -> Node0x24e9640;
	Node0x24e9250 -> Node0x24e9640;
	Node0x24e9640 -> Node0x24e96b0;
	Node0x24e9330 -> Node0x24e96b0;
	Node0x24e96b0 -> Node0x24e9720;
	Node0x24e9480 -> Node0x24e9720;
	Node0x24e8e60 -> Node0x24e9790;
	Node0x24e9720 -> Node0x24e9790;
	Node0x24e9790 -> Node0x24879d8;
	Node0x24879d8 -> Node0x24e9a30;
	Node0x24e7378 -> Node0x24e9c88;
	Node0x24e6e38 -> Node0x24e9de8;
}
