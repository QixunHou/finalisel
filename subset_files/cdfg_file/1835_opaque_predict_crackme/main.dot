digraph "DFG for'main' function" {
	Node0x14d8748[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14d87c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14d8858[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x14d8cb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x14d8d98[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x14d8eb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14d90f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x14d91a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14da118[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14da7a0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x14da810[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x14da880[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x14da8f0[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x14da960[shape=record, label="  %12 = shl i32 %9, 1"];
	Node0x14da9d0[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x14daa40[shape=record, label="  %14 = shl i32 %10, 1"];
	Node0x14daab0[shape=record, label="  %15 = sub i32 %11, %9"];
	Node0x14dab20[shape=record, label="  %16 = add i32 %15, %14"];
	Node0x14dab90[shape=record, label="  %17 = sub i32 %16, %13"];
	Node0x14dac00[shape=record, label="  %18 = icmp eq i32 %17, %6"];
	Node0x14799d8[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14dac90[shape=record, label="  %20 = call i32 @puts(i8* nonnull dereferenceable(1) %19) #5"];
	Node0x14daee8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14db048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x14db108[shape=record, label="  ret i32 0"];
	Node0x14d8748 -> Node0x14d87c8;
	Node0x14d87c8 -> Node0x14d8858;
	Node0x14d8858 -> Node0x14d8cb8;
	Node0x14d8cb8 -> Node0x14d8d98;
	Node0x14d8d98 -> Node0x14d8eb8;
	Node0x14d8eb8 -> Node0x14d90f0;
	Node0x14d90f0 -> Node0x14d91a8;
	Node0x14d91a8 -> Node0x14da118;
	Node0x14da118 -> Node0x14da7a0;
	Node0x14da7a0 -> Node0x14da810;
	Node0x14da810 -> Node0x14da880;
	Node0x14da880 -> Node0x14da8f0;
	Node0x14da8f0 -> Node0x14da960;
	Node0x14da960 -> Node0x14da9d0;
	Node0x14da9d0 -> Node0x14daa40;
	Node0x14daa40 -> Node0x14daab0;
	Node0x14daab0 -> Node0x14dab20;
	Node0x14dab20 -> Node0x14dab90;
	Node0x14dab90 -> Node0x14dac00;
	Node0x14dac00 -> Node0x14799d8;
	Node0x14799d8 -> Node0x14dac90;
	Node0x14dac90 -> Node0x14daee8;
	Node0x14daee8 -> Node0x14db048;
	Node0x14db048 -> Node0x14db108;
edge [color=red]
	Node0x14d8748 -> Node0x14d8858;
	Node0x14d8858 -> Node0x14d8cb8;
	Node0x14d87c8 -> Node0x14d8d98;
	Node0x14d8d98 -> Node0x14d8eb8;
	Node0x14d8748 -> Node0x14d90f0;
	Node0x14d87c8 -> Node0x14d90f0;
	Node0x14d8748 -> Node0x14d91a8;
	Node0x14d87c8 -> Node0x14da118;
	Node0x14da118 -> Node0x14da7a0;
	Node0x14d91a8 -> Node0x14da810;
	Node0x14da7a0 -> Node0x14da810;
	Node0x14da118 -> Node0x14da880;
	Node0x14d91a8 -> Node0x14da880;
	Node0x14da880 -> Node0x14da8f0;
	Node0x14da810 -> Node0x14da960;
	Node0x14da960 -> Node0x14da9d0;
	Node0x14da880 -> Node0x14daa40;
	Node0x14da8f0 -> Node0x14daab0;
	Node0x14da810 -> Node0x14daab0;
	Node0x14daab0 -> Node0x14dab20;
	Node0x14daa40 -> Node0x14dab20;
	Node0x14dab20 -> Node0x14dab90;
	Node0x14da9d0 -> Node0x14dab90;
	Node0x14dab90 -> Node0x14dac00;
	Node0x14d91a8 -> Node0x14dac00;
	Node0x14dac00 -> Node0x14799d8;
	Node0x14799d8 -> Node0x14dac90;
	Node0x14d8d98 -> Node0x14daee8;
	Node0x14d8858 -> Node0x14db048;
}
