digraph "DFG for'main' function" {
	Node0x19aaa68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x19aaae8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x19aab78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x19aabd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x19aac88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x19ab0b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19ab198[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x19ab298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19ab358[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x19ab408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x19ab4c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x19ab578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x19a5750[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x19ab778[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x19ac6e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x19acd58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x19acdb8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x19acec8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x19ad128[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x19ad288[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x19ad398[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19ad4a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19ad568[shape=record, label="  ret i32 0"];
	Node0x19aaa68 -> Node0x19aaae8;
	Node0x19aaae8 -> Node0x19aab78;
	Node0x19aab78 -> Node0x19aabd8;
	Node0x19aabd8 -> Node0x19aac88;
	Node0x19aac88 -> Node0x19ab0b8;
	Node0x19ab0b8 -> Node0x19ab198;
	Node0x19ab198 -> Node0x19ab298;
	Node0x19ab298 -> Node0x19ab358;
	Node0x19ab358 -> Node0x19ab408;
	Node0x19ab408 -> Node0x19ab4c8;
	Node0x19ab4c8 -> Node0x19ab578;
	Node0x19ab578 -> Node0x19a5750;
	Node0x19a5750 -> Node0x19ab778;
	Node0x19ab778 -> Node0x19ac6e8;
	Node0x19ac6e8 -> Node0x19acd58;
	Node0x19acd58 -> Node0x19acdb8;
	Node0x19acdb8 -> Node0x19acec8;
	Node0x19acec8 -> Node0x19ad128;
	Node0x19ad128 -> Node0x19ad288;
	Node0x19ad288 -> Node0x19ad398;
	Node0x19ad398 -> Node0x19ad4a8;
	Node0x19ad4a8 -> Node0x19ad568;
edge [color=red]
	Node0x19aaa68 -> Node0x19aac88;
	Node0x19aac88 -> Node0x19ab0b8;
	Node0x19aaae8 -> Node0x19ab198;
	Node0x19ab198 -> Node0x19ab298;
	Node0x19aab78 -> Node0x19ab358;
	Node0x19ab358 -> Node0x19ab408;
	Node0x19aabd8 -> Node0x19ab4c8;
	Node0x19ab4c8 -> Node0x19ab578;
	Node0x19aaa68 -> Node0x19a5750;
	Node0x19aaae8 -> Node0x19a5750;
	Node0x19aab78 -> Node0x19a5750;
	Node0x19aabd8 -> Node0x19a5750;
	Node0x19aaa68 -> Node0x19ab778;
	Node0x19aaae8 -> Node0x19ac6e8;
	Node0x19aab78 -> Node0x19acd58;
	Node0x19aabd8 -> Node0x19acdb8;
	Node0x19ab778 -> Node0x19acec8;
	Node0x19ac6e8 -> Node0x19acec8;
	Node0x19acd58 -> Node0x19acec8;
	Node0x19acdb8 -> Node0x19acec8;
	Node0x19ab4c8 -> Node0x19ad128;
	Node0x19ab358 -> Node0x19ad288;
	Node0x19ab198 -> Node0x19ad398;
	Node0x19aac88 -> Node0x19ad4a8;
}
