; ModuleID = '../.././c_source_file/0731_path_condition_crackme.c'
source_filename = "../.././c_source_file/0731_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %1, %0
  %8 = xor i32 %2, -1
  %9 = or i32 %8, %0
  %10 = xor i32 %9, %7
  %11 = and i32 %8, %0
  %12 = xor i32 %11, -1
  %13 = and i32 %12, %1
  %14 = sub i32 %13, %10
  %15 = xor i32 %4, -1
  %16 = and i32 %5, %3
  %17 = and i32 %16, %15
  %18 = or i32 %5, %3
  %19 = and i32 %18, %4
  %20 = or i32 %17, %19
  %21 = sub i32 %14, %20
  %22 = or i32 %8, %1
  %23 = xor i32 %22, %7
  %24 = and i32 %8, %1
  %25 = xor i32 %24, -1
  %26 = or i32 %25, %0
  %27 = xor i32 %22, -1
  %28 = add i32 %22, 1
  %29 = or i32 %2, %1
  %30 = xor i32 %29, -1
  %31 = xor i32 %30, %0
  %32 = xor i32 %1, -1
  %33 = or i32 %32, %0
  %34 = xor i32 %2, %1
  %35 = xor i32 %34, -1
  %36 = and i32 %33, %35
  %37 = and i32 %32, %0
  %38 = xor i32 %37, -1
  %39 = xor i32 %2, %0
  %40 = xor i32 %39, -1
  %41 = add i32 %39, 1
  %42 = xor i32 %9, -1
  %43 = xor i32 %42, %1
  %44 = add i32 %34, 1
  %45 = xor i32 %1, %0
  %46 = or i32 %11, %45
  %47 = or i32 %7, %42
  %48 = and i32 %2, %1
  %49 = or i32 %48, %37
  %50 = shl i32 %49, 1
  %51 = xor i32 %45, -1
  %52 = and i32 %12, %51
  %53 = and i32 %48, %0
  %54 = xor i32 %34, %0
  %55 = xor i32 %53, %54
  %56 = xor i32 %33, %2
  %57 = and i32 %35, %38
  %58 = xor i32 %0, -1
  %59 = xor i32 %48, -1
  %60 = or i32 %59, %58
  %61 = shl i32 %60, 1
  %62 = and i32 %35, %58
  %63 = and i32 %45, %2
  %64 = and i32 %39, %51
  %65 = and i32 %2, %0
  %66 = xor i32 %65, -1
  %67 = or i32 %34, %7
  %68 = shl i32 %2, 1
  %69 = or i32 %2, %0
  %70 = xor i32 %69, -1
  %71 = add i32 %69, 1
  %72 = or i32 %39, %1
  %73 = or i32 %7, %70
  %74 = xor i32 %7, -1
  %75 = and i32 %35, %74
  %76 = and i32 %32, %2
  %77 = and i32 %76, %58
  %78 = or i32 %32, %2
  %79 = and i32 %78, %0
  %80 = or i32 %77, %79
  %81 = and i32 %34, %0
  %82 = or i32 %29, %58
  %83 = xor i32 %12, %1
  %84 = shl i32 %83, 2
  %85 = or i32 %35, %0
  %86 = or i32 %45, %2
  %87 = shl i32 %86, 1
  %88 = or i32 %37, %8
  %89 = or i32 %7, %27
  %90 = or i32 %51, %2
  %91 = xor i32 %11, %59
  %92 = or i32 %1, %0
  %93 = shl i32 %92, 1
  %94 = and i32 %34, %58
  %95 = xor i32 %53, -1
  %96 = xor i32 %94, %95
  %97 = and i32 %25, %58
  %98 = or i32 %45, %42
  %99 = shl i32 %98, 1
  %100 = and i32 %40, %38
  %101 = xor i32 %33, -1
  %102 = xor i32 %101, %2
  %103 = and i32 %92, %35
  %104 = shl i32 %94, 1
  %105 = xor i32 %92, %2
  %106 = or i32 %34, %58
  %107 = xor i32 %77, %106
  %108 = and i32 %34, %74
  %109 = or i32 %30, %58
  %110 = and i32 %39, %74
  %111 = xor i32 %92, -1
  %112 = or i32 %111, %2
  %113 = shl i32 %112, 1
  %114 = and i32 %29, %58
  %115 = shl i32 %114, 1
  %116 = add i32 %1, 1
  %117 = xor i32 %74, %2
  %118 = or i32 %7, %35
  %119 = or i32 %42, %51
  %120 = xor i32 %11, %22
  %121 = or i32 %34, %111
  %122 = xor i32 %65, %25
  %123 = xor i32 %70, %1
  %124 = xor i32 %48, %0
  %125 = and i32 %76, %0
  %126 = xor i32 %54, -1
  %127 = xor i32 %125, %126
  %128 = or i32 %22, %58
  %129 = and i32 %69, %45
  %130 = xor i32 %66, %1
  %131 = and i32 %39, %32
  %132 = or i32 %45, %70
  %133 = shl i32 %132, 1
  %134 = and i32 %39, %38
  %135 = or i32 %42, %32
  %136 = xor i32 %65, %33
  %137 = xor i32 %35, %0
  %138 = or i32 %48, %58
  %139 = or i32 %65, %101
  %140 = and i32 %39, %33
  %141 = shl i32 %140, 1
  %142 = or i32 %8, %111
  %143 = shl i32 %142, 1
  %144 = and i32 %9, %51
  %145 = and i32 %66, %51
  %146 = and i32 %8, %38
  %147 = xor i32 %65, %1
  %148 = and i32 %66, %1
  %149 = and i32 %45, %8
  %150 = xor i32 %38, %2
  %151 = and i32 %8, %51
  %152 = or i32 %11, %48
  %153 = and i32 %34, %33
  %154 = or i32 %39, %37
  %155 = xor i32 %11, %1
  %156 = and i32 %51, %2
  %157 = or i32 %25, %58
  %158 = or i32 %24, %37
  %159 = and i32 %8, %74
  %160 = xor i32 %9, %1
  %161 = shl i32 %160, 1
  %162 = and i32 %69, %1
  %163 = or i32 %8, %51
  %164 = and i32 %33, %40
  %165 = or i32 %65, %51
  %166 = shl i32 %165, 1
  %167 = and i32 %39, %1
  %168 = or i32 %30, %0
  %169 = and i32 %29, %0
  %170 = xor i32 %29, %0
  %171 = and i32 %45, %66
  %172 = and i32 %48, %58
  %173 = or i32 %172, %81
  %174 = or i32 %29, %0
  %175 = or i32 %39, %51
  %176 = or i32 %11, %32
  %177 = xor i32 %114, %95
  %178 = or i32 %11, %1
  %179 = or i32 %39, %101
  %180 = xor i32 %37, %2
  %181 = shl i32 %180, 1
  %182 = xor i32 %106, -1
  %183 = or i32 %77, %182
  %184 = or i32 %27, %58
  %185 = and i32 %34, %92
  %186 = shl i32 %45, 1
  %187 = or i32 %42, %1
  %188 = xor i32 %78, %0
  %189 = or i32 %125, %188
  %190 = or i32 %24, %0
  %191 = shl i32 %190, 1
  %192 = or i32 %39, %7
  %193 = xor i32 %79, -1
  %194 = xor i32 %77, %193
  %195 = and i32 %45, %40
  %196 = or i32 %53, %170
  %197 = or i32 %35, %111
  %198 = and i32 %78, %58
  %199 = or i32 %125, %198
  %200 = or i32 %48, %0
  %201 = xor i32 %27, %0
  %202 = and i32 %9, %32
  %203 = or i32 %34, %0
  %204 = xor i32 %203, 1073741823
  %205 = or i32 %204, %125
  %206 = shl i32 %205, 2
  %207 = or i32 %37, %40
  %208 = or i32 %35, %58
  %209 = and i32 %39, %92
  %210 = xor i32 %59, %0
  %211 = or i32 %40, %1
  %212 = xor i32 %7, %2
  %213 = or i32 %65, %1
  %214 = xor i32 %125, %203
  %215 = or i32 %34, %101
  %216 = xor i32 %111, %2
  %217 = and i32 %33, %8
  %218 = and i32 %30, %58
  %219 = and i32 %24, %58
  %220 = mul i32 %219, 6
  %221 = and i32 %30, %0
  %222 = mul i32 %221, -20
  %223 = and i32 %24, %0
  %224 = shl i32 %223, 3
  %225 = and i32 %27, %58
  %226 = and i32 %27, %0
  %227 = and i32 %5, %4
  %228 = xor i32 %227, -1
  %229 = xor i32 %4, %3
  %230 = and i32 %229, %228
  %231 = xor i32 %3, -1
  %232 = and i32 %231, %5
  %233 = and i32 %232, %15
  %234 = xor i32 %5, %3
  %235 = or i32 %234, %15
  %236 = xor i32 %235, -1
  %237 = or i32 %233, %236
  %238 = and i32 %234, %15
  %239 = xor i32 %16, -1
  %240 = and i32 %239, %4
  %241 = xor i32 %5, -1
  %242 = and i32 %241, %3
  %243 = xor i32 %18, -1
  %244 = or i32 %243, %4
  %245 = xor i32 %242, -1
  %246 = shl i32 %245, 1
  %247 = or i32 %5, %4
  %248 = xor i32 %247, -1
  %249 = or i32 %229, %248
  %250 = shl i32 %249, 2
  %251 = and i32 %231, %4
  %252 = xor i32 %251, -1
  %253 = xor i32 %252, %5
  %254 = or i32 %231, %4
  %255 = xor i32 %254, -1
  %256 = or i32 %241, %255
  %257 = or i32 %231, %5
  %258 = and i32 %257, %4
  %259 = xor i32 %258, -1
  %260 = xor i32 %233, %259
  %261 = or i32 %241, %4
  %262 = xor i32 %261, -1
  %263 = or i32 %229, %262
  %264 = xor i32 %245, %4
  %265 = or i32 %16, %4
  %266 = or i32 %4, %3
  %267 = xor i32 %266, -1
  %268 = add i32 %266, 1
  %269 = or i32 %241, %3
  %270 = and i32 %269, %15
  %271 = or i32 %251, %5
  %272 = xor i32 %5, %4
  %273 = or i32 %272, %251
  %274 = and i32 %4, %3
  %275 = xor i32 %269, %274
  %276 = and i32 %247, %231
  %277 = and i32 %228, %231
  %278 = and i32 %18, %15
  %279 = xor i32 %261, %3
  %280 = or i32 %274, %243
  %281 = shl i32 %280, 1
  %282 = and i32 %229, %241
  %283 = and i32 %16, %4
  %284 = xor i32 %234, %4
  %285 = xor i32 %284, -1
  %286 = or i32 %283, %285
  %287 = xor i32 %234, -1
  %288 = or i32 %287, %267
  %289 = xor i32 %274, %5
  %290 = and i32 %254, %5
  %291 = xor i32 %272, -1
  %292 = or i32 %291, %255
  %293 = and i32 %241, %4
  %294 = or i32 %293, %229
  %295 = and i32 %272, %231
  %296 = xor i32 %269, -1
  %297 = or i32 %296, %4
  %298 = and i32 %266, %287
  %299 = and i32 %239, %15
  %300 = xor i32 %251, %5
  %301 = or i32 %296, %15
  %302 = xor i32 %17, -1
  %303 = xor i32 %19, %302
  %304 = and i32 %261, %231
  %305 = xor i32 %228, %3
  %306 = or i32 %291, %231
  %307 = xor i32 %287, %4
  %308 = shl i32 %307, 1
  %309 = xor i32 %229, -1
  %310 = or i32 %227, %309
  %311 = or i32 %239, %4
  %312 = or i32 %255, %5
  %313 = xor i32 %293, -1
  %314 = and i32 %313, %231
  %315 = shl i32 %231, 1
  %316 = add i32 %254, 1
  %317 = or i32 %251, %291
  %318 = or i32 %241, %267
  %319 = xor i32 %266, %241
  %320 = xor i32 %248, %3
  %321 = xor i32 %247, %274
  %322 = xor i32 %18, %4
  %323 = or i32 %283, %322
  %324 = or i32 %272, %309
  %325 = or i32 %287, %4
  %326 = or i32 %267, %5
  %327 = and i32 %266, %5
  %328 = and i32 %261, %309
  %329 = xor i32 %16, %4
  %330 = or i32 %291, %309
  %331 = or i32 %262, %231
  %332 = and i32 %247, %229
  %333 = or i32 %245, %4
  %334 = or i32 %227, %3
  %335 = xor i32 %283, -1
  %336 = xor i32 %278, %335
  %337 = or i32 %16, %251
  %338 = shl i32 %239, 1
  %339 = xor i32 %274, -1
  %340 = and i32 %339, %5
  %341 = or i32 %248, %309
  %342 = and i32 %234, %252
  %343 = or i32 %274, %287
  %344 = shl i32 %343, 1
  %345 = and i32 %291, %252
  %346 = or i32 %293, %231
  %347 = and i32 %272, %3
  %348 = add i32 %261, 1
  %349 = or i32 %227, %242
  %350 = or i32 %272, %274
  %351 = or i32 %293, %309
  %352 = or i32 %274, %296
  %353 = xor i32 %254, %5
  %354 = or i32 %227, %229
  %355 = xor i32 %313, %3
  %356 = or i32 %234, %274
  %357 = or i32 %234, %251
  %358 = or i32 %262, %309
  %359 = and i32 %232, %4
  %360 = xor i32 %359, %285
  %361 = xor i32 %247, %3
  %362 = and i32 %313, %3
  %363 = shl i32 %362, 1
  %364 = and i32 %287, %15
  %365 = or i32 %229, %5
  %366 = or i32 %272, %267
  %367 = xor i32 %242, %4
  %368 = and i32 %229, %5
  %369 = or i32 %274, %262
  %370 = or i32 %242, %15
  %371 = or i32 %18, %4
  %372 = or i32 %274, %291
  %373 = and i32 %257, %15
  %374 = xor i32 %373, -1
  %375 = xor i32 %359, %374
  %376 = and i32 %291, %309
  %377 = xor i32 %296, %4
  %378 = or i32 %229, %291
  %379 = and i32 %254, %241
  %380 = or i32 %359, %284
  %381 = and i32 %228, %309
  %382 = shl i32 %248, 1
  %383 = xor i32 %261, %274
  %384 = shl i32 %383, 1
  %385 = and i32 %254, %291
  %386 = and i32 %287, %252
  %387 = and i32 %241, %339
  %388 = or i32 %234, %4
  %389 = xor i32 %388, -1
  %390 = or i32 %359, %389
  %391 = xor i32 %257, %4
  %392 = or i32 %359, %391
  %393 = and i32 %228, %3
  %394 = and i32 %234, %266
  %395 = and i32 %266, %291
  %396 = and i32 %291, %3
  %397 = or i32 %293, %296
  %398 = or i32 %272, %231
  %399 = or i32 %359, %373
  %400 = or i32 %309, %5
  %401 = xor i32 %293, %269
  %402 = or i32 %18, %15
  %403 = and i32 %287, %4
  %404 = or i32 %234, %267
  %405 = or i32 %274, %241
  %406 = or i32 %262, %3
  %407 = and i32 %234, %4
  %408 = xor i32 %407, %302
  %409 = xor i32 %239, %4
  %410 = or i32 %16, %15
  %411 = xor i32 %251, %245
  %412 = xor i32 %227, %245
  %413 = shl i32 %412, 1
  %414 = and i32 %272, %229
  %415 = or i32 %293, %16
  %416 = shl i32 %415, 1
  %417 = or i32 %248, %231
  %418 = or i32 %272, %3
  %419 = or i32 %243, %15
  %420 = or i32 %245, %15
  %421 = add i32 %269, 1
  %422 = xor i32 %293, %3
  %423 = xor i32 %269, %4
  %424 = xor i32 %238, %335
  %425 = xor i32 %283, %284
  %426 = and i32 %313, %309
  %427 = and i32 %252, %5
  %428 = or i32 %251, %241
  %429 = shl i32 %428, 1
  %430 = and i32 %272, %266
  %431 = or i32 %293, %3
  %432 = or i32 %234, %255
  %433 = and i32 %254, %287
  %434 = and i32 %291, %231
  %435 = or i32 %233, %258
  %436 = xor i32 %267, %5
  %437 = or i32 %269, %4
  %438 = or i32 %272, %255
  %439 = or i32 %227, %267
  %440 = and i32 %234, %254
  %441 = or i32 %227, %255
  %442 = and i32 %247, %3
  %443 = and i32 %245, %4
  %444 = shl i32 %313, 1
  %445 = and i32 %272, %252
  %446 = and i32 %266, %241
  %447 = and i32 %234, %339
  %448 = and i32 %291, %339
  %449 = xor i32 %227, %3
  %450 = shl i32 %449, 1
  %451 = or i32 %291, %267
  %452 = or i32 %241, %309
  %453 = xor i32 %339, %5
  %454 = and i32 %243, %15
  %455 = mul i32 %454, 18
  %456 = and i32 %242, %15
  %457 = and i32 %243, %4
  %458 = mul i32 %457, 9
  %459 = and i32 %242, %4
  %460 = and i32 %296, %15
  %461 = mul i32 %460, 10
  %462 = mul i32 %283, 11
  %463 = add i32 %101, %58
  %464 = add i32 %463, %111
  %465 = add i32 %464, %163
  %466 = add i32 %465, %25
  %467 = add i32 %466, %88
  %468 = add i32 %467, %225
  %469 = add i32 %468, %215
  %470 = add i32 %469, %211
  %471 = add i32 %470, %176
  %472 = add i32 %471, %170
  %473 = add i32 %472, %164
  %474 = add i32 %473, %162
  %475 = add i32 %474, %158
  %476 = add i32 %475, %153
  %477 = add i32 %476, %145
  %478 = add i32 %477, %136
  %479 = add i32 %478, %131
  %480 = add i32 %479, %110
  %481 = add i32 %480, %109
  %482 = add i32 %481, %103
  %483 = add i32 %482, %57
  %484 = add i32 %483, %229
  %485 = add i32 %484, %55
  %486 = add i32 %485, %427
  %487 = add i32 %486, %365
  %488 = add i32 %487, %327
  %489 = add i32 %488, %318
  %490 = add i32 %489, %289
  %491 = add i32 %490, %448
  %492 = add i32 %491, %447
  %493 = add i32 %492, %406
  %494 = add i32 %493, %386
  %495 = add i32 %494, %385
  %496 = add i32 %495, %371
  %497 = add i32 %496, %364
  %498 = add i32 %497, %295
  %499 = add i32 %498, %264
  %500 = add i32 %499, %380
  %501 = shl i32 %500, 1
  %502 = sub i32 %217, %150
  %503 = add i32 %502, %39
  %504 = sub i32 %503, %118
  %505 = add i32 %504, %183
  %506 = add i32 %505, %261
  %507 = sub i32 %506, %334
  %508 = sub i32 %507, %377
  %509 = mul i32 %508, 3
  %510 = add i32 %202, %28
  %511 = add i32 %510, %52
  %512 = sub i32 %511, %256
  %513 = sub i32 %512, %19
  %514 = add i32 %513, %17
  %515 = sub i32 %514, %288
  %516 = sub i32 %515, %278
  %517 = mul i32 %516, 5
  %518 = add i32 %456, %53
  %519 = mul i32 %518, 7
  %520 = sub i32 %226, %218
  %521 = mul i32 %520, 13
  %522 = add i32 %117, 1073741823
  %523 = add i32 %522, %252
  %524 = add i32 %523, %247
  %525 = add i32 %524, %437
  %526 = shl i32 %525, 2
  %527 = sub i32 1, %0
  %528 = add i32 %527, %116
  %529 = add i32 %528, %51
  %530 = add i32 %529, %41
  %531 = add i32 %530, %44
  %532 = add i32 %531, %11
  %533 = add i32 %532, %56
  %534 = add i32 %533, %63
  %535 = sub i32 %534, %68
  %536 = add i32 %535, %71
  %537 = add i32 %536, %48
  %538 = sub i32 %537, %90
  %539 = sub i32 %538, %93
  %540 = add i32 %539, %102
  %541 = sub i32 %540, %105
  %542 = sub i32 %541, %146
  %543 = add i32 %542, %149
  %544 = sub i32 %543, %151
  %545 = sub i32 %544, %156
  %546 = add i32 %545, %159
  %547 = sub i32 %546, %34
  %548 = sub i32 %547, %186
  %549 = sub i32 %548, %29
  %550 = sub i32 %549, %212
  %551 = add i32 %550, %216
  %552 = sub i32 %551, %3
  %553 = add i32 %552, %26
  %554 = add i32 %553, %23
  %555 = sub i32 %554, %31
  %556 = sub i32 %555, %36
  %557 = sub i32 %556, %43
  %558 = add i32 %557, %46
  %559 = add i32 %558, %47
  %560 = add i32 %559, %62
  %561 = sub i32 %560, %64
  %562 = sub i32 %561, %67
  %563 = sub i32 %562, %72
  %564 = sub i32 %563, %73
  %565 = sub i32 %564, %75
  %566 = add i32 %565, %81
  %567 = sub i32 %566, %82
  %568 = sub i32 %567, %85
  %569 = sub i32 %568, %87
  %570 = sub i32 %569, %89
  %571 = add i32 %570, %91
  %572 = add i32 %571, %97
  %573 = add i32 %572, %100
  %574 = sub i32 %573, %108
  %575 = sub i32 %574, %113
  %576 = sub i32 %575, %119
  %577 = sub i32 %576, %120
  %578 = add i32 %577, %121
  %579 = add i32 %578, %122
  %580 = sub i32 %579, %123
  %581 = add i32 %580, %124
  %582 = sub i32 %581, %128
  %583 = sub i32 %582, %129
  %584 = sub i32 %583, %130
  %585 = add i32 %584, %134
  %586 = add i32 %585, %135
  %587 = sub i32 %586, %137
  %588 = sub i32 %587, %138
  %589 = sub i32 %588, %139
  %590 = sub i32 %589, %143
  %591 = sub i32 %590, %144
  %592 = add i32 %591, %147
  %593 = add i32 %592, %148
  %594 = add i32 %593, %152
  %595 = sub i32 %594, %54
  %596 = sub i32 %595, %154
  %597 = sub i32 %596, %155
  %598 = sub i32 %597, %157
  %599 = add i32 %598, %167
  %600 = add i32 %599, %168
  %601 = add i32 %600, %169
  %602 = sub i32 %601, %171
  %603 = add i32 %602, %174
  %604 = add i32 %603, %175
  %605 = sub i32 %604, %178
  %606 = add i32 %605, %179
  %607 = sub i32 %606, %181
  %608 = sub i32 %607, %184
  %609 = add i32 %608, %185
  %610 = sub i32 %609, %187
  %611 = add i32 %610, %192
  %612 = add i32 %611, %195
  %613 = add i32 %612, %197
  %614 = add i32 %613, %200
  %615 = sub i32 %614, %201
  %616 = add i32 %615, %207
  %617 = sub i32 %616, %208
  %618 = add i32 %617, %209
  %619 = sub i32 %618, %210
  %620 = add i32 %619, %213
  %621 = sub i32 %620, %172
  %622 = sub i32 %621, %315
  %623 = sub i32 %622, %50
  %624 = sub i32 %623, %61
  %625 = sub i32 %624, %80
  %626 = sub i32 %625, %84
  %627 = add i32 %626, %96
  %628 = sub i32 %627, %99
  %629 = sub i32 %628, %104
  %630 = add i32 %629, %107
  %631 = sub i32 %630, %115
  %632 = add i32 %631, %127
  %633 = sub i32 %632, %133
  %634 = sub i32 %633, %141
  %635 = sub i32 %634, %161
  %636 = sub i32 %635, %166
  %637 = add i32 %636, %173
  %638 = add i32 %637, %177
  %639 = add i32 %638, %189
  %640 = sub i32 %639, %191
  %641 = sub i32 %640, %194
  %642 = add i32 %641, %196
  %643 = sub i32 %642, %199
  %644 = sub i32 %643, %214
  %645 = add i32 %644, %220
  %646 = add i32 %645, %222
  %647 = sub i32 %646, %224
  %648 = sub i32 %647, %5
  %649 = add i32 %648, %268
  %650 = add i32 %649, %266
  %651 = sub i32 %650, %251
  %652 = add i32 %651, %316
  %653 = add i32 %652, %241
  %654 = add i32 %653, %274
  %655 = sub i32 %654, %254
  %656 = sub i32 %655, %242
  %657 = add i32 %656, %253
  %658 = sub i32 %657, %271
  %659 = sub i32 %658, %272
  %660 = add i32 %659, %282
  %661 = sub i32 %660, %290
  %662 = add i32 %661, %300
  %663 = sub i32 %662, %312
  %664 = add i32 %663, %319
  %665 = sub i32 %664, %326
  %666 = sub i32 %665, %340
  %667 = add i32 %666, %348
  %668 = add i32 %667, %353
  %669 = add i32 %668, %368
  %670 = add i32 %669, %379
  %671 = add i32 %670, %228
  %672 = sub i32 %671, %269
  %673 = add i32 %672, %387
  %674 = sub i32 %673, %400
  %675 = sub i32 %674, %293
  %676 = sub i32 %675, %405
  %677 = add i32 %676, %421
  %678 = add i32 %677, %436
  %679 = sub i32 %678, %227
  %680 = add i32 %679, %243
  %681 = sub i32 %680, %446
  %682 = add i32 %681, %16
  %683 = sub i32 %682, %452
  %684 = add i32 %683, %453
  %685 = add i32 %684, %521
  %686 = sub i32 %685, %206
  %687 = add i32 %686, %230
  %688 = sub i32 %687, %238
  %689 = sub i32 %688, %240
  %690 = add i32 %689, %244
  %691 = sub i32 %690, %246
  %692 = sub i32 %691, %263
  %693 = add i32 %692, %265
  %694 = sub i32 %693, %270
  %695 = add i32 %694, %273
  %696 = add i32 %695, %275
  %697 = sub i32 %696, %276
  %698 = sub i32 %697, %277
  %699 = add i32 %698, %279
  %700 = sub i32 %699, %292
  %701 = add i32 %700, %294
  %702 = add i32 %701, %297
  %703 = sub i32 %702, %298
  %704 = add i32 %703, %299
  %705 = add i32 %704, %301
  %706 = sub i32 %705, %304
  %707 = sub i32 %706, %305
  %708 = sub i32 %707, %306
  %709 = sub i32 %708, %310
  %710 = sub i32 %709, %311
  %711 = add i32 %710, %314
  %712 = add i32 %711, %317
  %713 = sub i32 %712, %320
  %714 = add i32 %713, %321
  %715 = sub i32 %714, %324
  %716 = add i32 %715, %325
  %717 = add i32 %716, %328
  %718 = add i32 %717, %329
  %719 = sub i32 %718, %330
  %720 = add i32 %719, %331
  %721 = sub i32 %720, %332
  %722 = sub i32 %721, %333
  %723 = sub i32 %722, %337
  %724 = sub i32 %723, %338
  %725 = sub i32 %724, %341
  %726 = add i32 %725, %342
  %727 = sub i32 %726, %345
  %728 = sub i32 %727, %346
  %729 = add i32 %728, %347
  %730 = sub i32 %729, %349
  %731 = sub i32 %730, %350
  %732 = sub i32 %731, %351
  %733 = add i32 %732, %352
  %734 = add i32 %733, %354
  %735 = add i32 %734, %355
  %736 = add i32 %735, %356
  %737 = add i32 %736, %357
  %738 = sub i32 %737, %358
  %739 = sub i32 %738, %361
  %740 = sub i32 %739, %366
  %741 = add i32 %740, %367
  %742 = sub i32 %741, %369
  %743 = sub i32 %742, %370
  %744 = sub i32 %743, %372
  %745 = sub i32 %744, %376
  %746 = sub i32 %745, %378
  %747 = add i32 %746, %381
  %748 = sub i32 %747, %382
  %749 = sub i32 %748, %393
  %750 = sub i32 %749, %394
  %751 = sub i32 %750, %395
  %752 = sub i32 %751, %396
  %753 = sub i32 %752, %397
  %754 = sub i32 %753, %398
  %755 = sub i32 %754, %401
  %756 = add i32 %755, %402
  %757 = sub i32 %756, %403
  %758 = sub i32 %757, %404
  %759 = add i32 %758, %235
  %760 = add i32 %759, %409
  %761 = sub i32 %760, %410
  %762 = sub i32 %761, %411
  %763 = add i32 %762, %414
  %764 = sub i32 %763, %417
  %765 = sub i32 %764, %418
  %766 = sub i32 %765, %419
  %767 = sub i32 %766, %420
  %768 = add i32 %767, %422
  %769 = add i32 %768, %423
  %770 = sub i32 %769, %426
  %771 = sub i32 %770, %429
  %772 = sub i32 %771, %430
  %773 = add i32 %772, %431
  %774 = add i32 %773, %432
  %775 = add i32 %774, %433
  %776 = sub i32 %775, %434
  %777 = add i32 %776, %438
  %778 = add i32 %777, %439
  %779 = add i32 %778, %440
  %780 = sub i32 %779, %441
  %781 = add i32 %780, %442
  %782 = sub i32 %781, %443
  %783 = sub i32 %782, %444
  %784 = sub i32 %783, %445
  %785 = add i32 %784, %388
  %786 = sub i32 %785, %451
  %787 = add i32 %786, %459
  %788 = add i32 %787, %237
  %789 = sub i32 %788, %250
  %790 = add i32 %789, %260
  %791 = sub i32 %790, %281
  %792 = add i32 %791, %286
  %793 = add i32 %792, %303
  %794 = sub i32 %793, %308
  %795 = add i32 %794, %323
  %796 = add i32 %795, %336
  %797 = sub i32 %796, %344
  %798 = add i32 %797, %360
  %799 = sub i32 %798, %363
  %800 = add i32 %799, %375
  %801 = sub i32 %800, %384
  %802 = sub i32 %801, %390
  %803 = add i32 %802, %392
  %804 = add i32 %803, %399
  %805 = sub i32 %804, %408
  %806 = sub i32 %805, %413
  %807 = sub i32 %806, %416
  %808 = add i32 %807, %424
  %809 = add i32 %808, %425
  %810 = add i32 %809, %435
  %811 = sub i32 %810, %450
  %812 = add i32 %811, %455
  %813 = add i32 %812, %458
  %814 = add i32 %813, %461
  %815 = add i32 %814, %462
  %816 = add i32 %815, %519
  %817 = add i32 %816, %526
  %818 = add i32 %817, %509
  %819 = add i32 %818, %517
  %820 = add i32 %819, %501
  %821 = icmp eq i32 %21, %820
  %822 = select i1 %821, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %823 = tail call i32 @puts(i8* nonnull dereferenceable(1) %822)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
