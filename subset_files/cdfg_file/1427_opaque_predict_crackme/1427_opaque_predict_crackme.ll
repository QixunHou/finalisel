; ModuleID = '../.././c_source_file/1427_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1427_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = and i32 %2, %1
  %9 = and i32 %8, %7
  %10 = xor i32 %2, %1
  %11 = and i32 %10, %0
  %12 = or i32 %9, %11
  %13 = and i32 %5, %4
  %14 = xor i32 %5, -1
  %15 = and i32 %14, %3
  %16 = xor i32 %15, -1
  %17 = xor i32 %13, %16
  %18 = sub i32 %12, %17
  %19 = xor i32 %1, -1
  %20 = and i32 %19, %0
  %21 = xor i32 %20, -1
  %22 = and i32 %21, %2
  %23 = or i32 %19, %0
  %24 = and i32 %23, %2
  %25 = and i32 %1, %0
  %26 = or i32 %2, %0
  %27 = xor i32 %26, %25
  %28 = xor i32 %2, -1
  %29 = or i32 %25, %28
  %30 = and i32 %2, %0
  %31 = or i32 %30, %1
  %32 = xor i32 %9, -1
  %33 = xor i32 %11, %32
  %34 = and i32 %19, %2
  %35 = and i32 %34, %0
  %36 = xor i32 %10, %0
  %37 = xor i32 %36, -1
  %38 = xor i32 %35, %37
  %39 = xor i32 %30, -1
  %40 = and i32 %39, %1
  %41 = and i32 %28, %1
  %42 = xor i32 %41, -1
  %43 = or i32 %42, %7
  %44 = shl i32 %43, 1
  %45 = or i32 %10, %0
  %46 = or i32 %2, %1
  %47 = or i32 %46, %0
  %48 = xor i32 %1, %0
  %49 = and i32 %26, %48
  %50 = and i32 %34, %7
  %51 = or i32 %19, %2
  %52 = and i32 %51, %0
  %53 = or i32 %50, %52
  %54 = xor i32 %42, %0
  %55 = xor i32 %2, %0
  %56 = xor i32 %55, -1
  %57 = and i32 %56, %21
  %58 = shl i32 %10, 1
  %59 = or i32 %28, %0
  %60 = xor i32 %59, -1
  %61 = xor i32 %60, %1
  %62 = shl i32 %61, 1
  %63 = xor i32 %25, -1
  %64 = and i32 %56, %63
  %65 = and i32 %10, %23
  %66 = xor i32 %48, -1
  %67 = and i32 %59, %66
  %68 = xor i32 %10, -1
  %69 = and i32 %68, %0
  %70 = and i32 %28, %0
  %71 = or i32 %70, %48
  %72 = shl i32 %71, 1
  %73 = or i32 %41, %0
  %74 = shl i32 %73, 1
  %75 = xor i32 %46, %25
  %76 = or i32 %60, %1
  %77 = shl i32 %76, 1
  %78 = and i32 %28, %66
  %79 = or i32 %1, %0
  %80 = and i32 %79, %28
  %81 = and i32 %10, %21
  %82 = or i32 %60, %19
  %83 = xor i32 %8, -1
  %84 = or i32 %83, %0
  %85 = xor i32 %51, %0
  %86 = xor i32 %85, -1
  %87 = xor i32 %35, %86
  %88 = xor i32 %30, %79
  %89 = or i32 %20, %68
  %90 = xor i32 %23, -1
  %91 = xor i32 %90, %2
  %92 = xor i32 %46, -1
  %93 = and i32 %8, %0
  %94 = xor i32 %93, %36
  %95 = or i32 %90, %2
  %96 = xor i32 %26, -1
  %97 = xor i32 %96, %1
  %98 = and i32 %42, %7
  %99 = or i32 %68, %0
  %100 = and i32 %55, %66
  %101 = or i32 %30, %90
  %102 = and i32 %55, %63
  %103 = and i32 %46, %7
  %104 = and i32 %79, %56
  %105 = and i32 %10, %7
  %106 = or i32 %92, %7
  %107 = or i32 %70, %66
  %108 = xor i32 %41, %0
  %109 = or i32 %55, %20
  %110 = or i32 %28, %1
  %111 = xor i32 %70, %110
  %112 = xor i32 %110, %0
  %113 = or i32 %83, %7
  %114 = shl i32 %113, 1
  %115 = and i32 %28, %21
  %116 = and i32 %46, %0
  %117 = or i32 %9, %116
  %118 = shl i32 %117, 2
  %119 = add i32 %23, 1
  %120 = xor i32 %45, -1
  %121 = or i32 %35, %120
  %122 = xor i32 %79, -1
  %123 = or i32 %30, %122
  %124 = and i32 %56, %66
  %125 = or i32 %92, %0
  %126 = and i32 %56, %19
  %127 = and i32 %110, %7
  %128 = or i32 %56, %66
  %129 = xor i32 %25, %2
  %130 = or i32 %30, %41
  %131 = or i32 %25, %60
  %132 = or i32 %93, %103
  %133 = and i32 %26, %66
  %134 = or i32 %55, %122
  %135 = xor i32 %52, -1
  %136 = xor i32 %50, %135
  %137 = or i32 %55, %66
  %138 = xor i32 %70, -1
  %139 = or i32 %42, %0
  %140 = or i32 %10, %20
  %141 = or i32 %25, %56
  %142 = or i32 %28, %122
  %143 = xor i32 %46, %0
  %144 = or i32 %93, %143
  %145 = or i32 %96, %66
  %146 = and i32 %55, %21
  %147 = and i32 %23, %56
  %148 = and i32 %39, %66
  %149 = and i32 %48, %56
  %150 = and i32 %83, %0
  %151 = or i32 %56, %1
  %152 = or i32 %8, %0
  %153 = or i32 %68, %7
  %154 = shl i32 %153, 1
  %155 = and i32 %48, %2
  %156 = add i32 %48, 1
  %157 = add i32 %59, 1
  %158 = add i32 %79, 1
  %159 = or i32 %96, %19
  %160 = xor i32 %23, %2
  %161 = and i32 %79, %68
  %162 = xor i32 %93, -1
  %163 = xor i32 %105, %162
  %164 = or i32 %25, %92
  %165 = and i32 %138, %1
  %166 = and i32 %83, %7
  %167 = or i32 %25, %96
  %168 = xor i32 %68, %0
  %169 = add i32 %55, 1
  %170 = xor i32 %138, %1
  %171 = xor i32 %30, %23
  %172 = or i32 %28, %66
  %173 = or i32 %55, %1
  %174 = xor i32 %30, %1
  %175 = or i32 %8, %20
  %176 = or i32 %93, %105
  %177 = or i32 %30, %92
  %178 = and i32 %138, %66
  %179 = or i32 %28, %90
  %180 = and i32 %68, %63
  %181 = xor i32 %70, %1
  %182 = or i32 %35, %36
  %183 = xor i32 %21, %2
  %184 = and i32 %55, %1
  %185 = or i32 %10, %7
  %186 = or i32 %30, %19
  %187 = xor i32 %110, %25
  %188 = shl i32 %187, 1
  %189 = or i32 %110, %0
  %190 = xor i32 %116, %32
  %191 = and i32 %79, %2
  %192 = xor i32 %143, %162
  %193 = and i32 %51, %7
  %194 = or i32 %35, %193
  %195 = and i32 %68, %21
  %196 = or i32 %96, %1
  %197 = xor i32 %110, -1
  %198 = or i32 %70, %197
  %199 = xor i32 %70, %83
  %200 = shl i32 %199, 2
  %201 = or i32 %68, %90
  %202 = and i32 %55, %48
  %203 = or i32 %70, %8
  %204 = or i32 %93, %37
  %205 = shl i32 %204, 1
  %206 = xor i32 %59, %1
  %207 = or i32 %48, %28
  %208 = or i32 %197, %7
  %209 = xor i32 %197, %0
  %210 = and i32 %55, %79
  %211 = or i32 %55, %19
  %212 = and i32 %10, %63
  %213 = and i32 %10, %79
  %214 = shl i32 %213, 1
  %215 = or i32 %56, %90
  %216 = and i32 %26, %1
  %217 = or i32 %20, %28
  %218 = and i32 %26, %19
  %219 = xor i32 %8, %0
  %220 = xor i32 %20, %42
  %221 = shl i32 %220, 1
  %222 = and i32 %68, %7
  %223 = and i32 %39, %19
  %224 = shl i32 %223, 1
  %225 = or i32 %66, %2
  %226 = or i32 %122, %2
  %227 = or i32 %20, %2
  %228 = or i32 %8, %7
  %229 = or i32 %35, %85
  %230 = or i32 %25, %2
  %231 = or i32 %41, %7
  %232 = and i32 %138, %19
  %233 = or i32 %30, %66
  %234 = shl i32 %233, 1
  %235 = xor i32 %35, %45
  %236 = shl i32 %235, 1
  %237 = xor i32 %83, %0
  %238 = or i32 %56, %122
  %239 = xor i32 %30, %42
  %240 = xor i32 %20, %83
  %241 = xor i32 %39, %1
  %242 = xor i32 %63, %2
  %243 = and i32 %55, %19
  %244 = shl i32 %243, 1
  %245 = or i32 %48, %2
  %246 = and i32 %42, %0
  %247 = or i32 %70, %1
  %248 = and i32 %48, %39
  %249 = or i32 %70, %19
  %250 = and i32 %28, %63
  %251 = or i32 %197, %0
  %252 = or i32 %10, %122
  %253 = or i32 %30, %48
  %254 = and i32 %59, %1
  %255 = add i32 %2, 1
  %256 = or i32 %10, %25
  %257 = xor i32 %26, %1
  %258 = and i32 %66, %2
  %259 = xor i32 %92, %0
  %260 = and i32 %23, %28
  %261 = or i32 %25, %197
  %262 = xor i32 %185, -1
  %263 = or i32 %50, %262
  %264 = or i32 %46, %7
  %265 = or i32 %55, %48
  %266 = xor i32 %50, %185
  %267 = or i32 %41, %20
  %268 = and i32 %56, %1
  %269 = or i32 %55, %90
  %270 = and i32 %110, %0
  %271 = or i32 %20, %56
  %272 = xor i32 %30, %46
  %273 = or i32 %110, %7
  %274 = or i32 %48, %60
  %275 = or i32 %60, %66
  %276 = shl i32 %275, 1
  %277 = xor i32 %20, %2
  %278 = shl i32 %277, 1
  %279 = or i32 %56, %19
  %280 = xor i32 %79, %2
  %281 = or i32 %68, %122
  %282 = and i32 %63, %2
  %283 = xor i32 %122, %2
  %284 = shl i32 %283, 1
  %285 = add i32 %1, 1
  %286 = add i32 %30, 1
  %287 = or i32 %55, %25
  %288 = and i32 %23, %68
  %289 = xor i32 %103, %162
  %290 = and i32 %48, %138
  %291 = and i32 %48, %28
  %292 = and i32 %92, %7
  %293 = mul i32 %292, 18
  %294 = and i32 %41, %7
  %295 = and i32 %92, %0
  %296 = shl i32 %295, 1
  %297 = and i32 %41, %0
  %298 = mul i32 %297, 21
  %299 = and i32 %197, %7
  %300 = and i32 %197, %0
  %301 = mul i32 %300, 19
  %302 = mul i32 %93, 26
  %303 = xor i32 %4, %3
  %304 = xor i32 %303, -1
  %305 = and i32 %14, %304
  %306 = or i32 %16, %4
  %307 = and i32 %4, %3
  %308 = xor i32 %307, %5
  %309 = and i32 %5, %3
  %310 = or i32 %309, %4
  %311 = xor i32 %5, %3
  %312 = or i32 %311, %307
  %313 = xor i32 %15, %4
  %314 = and i32 %14, %4
  %315 = xor i32 %314, -1
  %316 = xor i32 %315, %3
  %317 = xor i32 %3, -1
  %318 = or i32 %317, %4
  %319 = xor i32 %318, -1
  %320 = xor i32 %5, %4
  %321 = or i32 %320, %319
  %322 = xor i32 %4, -1
  %323 = and i32 %317, %5
  %324 = and i32 %323, %322
  %325 = or i32 %317, %5
  %326 = and i32 %325, %4
  %327 = xor i32 %326, -1
  %328 = xor i32 %324, %327
  %329 = or i32 %5, %4
  %330 = and i32 %329, %304
  %331 = or i32 %5, %3
  %332 = and i32 %331, %322
  %333 = and i32 %309, %322
  %334 = and i32 %331, %4
  %335 = or i32 %333, %334
  %336 = xor i32 %329, -1
  %337 = and i32 %317, %4
  %338 = xor i32 %337, -1
  %339 = xor i32 %338, %5
  %340 = and i32 %309, %4
  %341 = and i32 %311, %322
  %342 = or i32 %340, %341
  %343 = and i32 %329, %317
  %344 = or i32 %337, %14
  %345 = xor i32 %307, -1
  %346 = xor i32 %320, -1
  %347 = and i32 %346, %345
  %348 = or i32 %14, %4
  %349 = xor i32 %348, -1
  %350 = or i32 %303, %349
  %351 = shl i32 %350, 1
  %352 = or i32 %336, %317
  %353 = and i32 %320, %3
  %354 = and i32 %303, %315
  %355 = xor i32 %329, %3
  %356 = shl i32 %355, 1
  %357 = or i32 %4, %3
  %358 = xor i32 %357, -1
  %359 = xor i32 %358, %5
  %360 = xor i32 %331, %4
  %361 = xor i32 %340, -1
  %362 = xor i32 %341, %361
  %363 = or i32 %319, %5
  %364 = or i32 %320, %358
  %365 = xor i32 %16, %4
  %366 = shl i32 %365, 1
  %367 = or i32 %14, %3
  %368 = xor i32 %314, %367
  %369 = and i32 %303, %346
  %370 = xor i32 %367, -1
  %371 = or i32 %370, %4
  %372 = shl i32 %303, 1
  %373 = or i32 %337, %5
  %374 = and i32 %311, %338
  %375 = xor i32 %311, -1
  %376 = or i32 %375, %322
  %377 = xor i32 %314, %3
  %378 = or i32 %303, %14
  %379 = or i32 %14, %304
  %380 = and i32 %323, %4
  %381 = xor i32 %311, %4
  %382 = xor i32 %381, -1
  %383 = xor i32 %380, %382
  %384 = or i32 %307, %375
  %385 = and i32 %348, %304
  %386 = xor i32 %309, -1
  %387 = or i32 %386, %4
  %388 = and i32 %346, %317
  %389 = and i32 %320, %303
  %390 = or i32 %349, %304
  %391 = or i32 %309, %337
  %392 = and i32 %303, %14
  %393 = or i32 %13, %3
  %394 = and i32 %318, %14
  %395 = or i32 %303, %346
  %396 = xor i32 %13, -1
  %397 = and i32 %396, %317
  %398 = shl i32 %397, 1
  %399 = or i32 %14, %319
  %400 = and i32 %318, %5
  %401 = and i32 %396, %3
  %402 = shl i32 %401, 1
  %403 = or i32 %336, %304
  %404 = xor i32 %318, %5
  %405 = xor i32 %360, %361
  %406 = or i32 %324, %326
  %407 = shl i32 %406, 1
  %408 = or i32 %337, %375
  %409 = and i32 %375, %345
  %410 = or i32 %370, %322
  %411 = or i32 %340, %382
  %412 = xor i32 %4, 2147483647
  %413 = xor i32 %412, %325
  %414 = xor i32 %413, %380
  %415 = shl i32 %414, 1
  %416 = or i32 %367, %322
  %417 = or i32 %311, %322
  %418 = xor i32 %13, %318
  %419 = xor i32 %331, -1
  %420 = add i32 %331, 1
  %421 = or i32 %15, %4
  %422 = and i32 %16, %4
  %423 = or i32 %349, %317
  %424 = shl i32 %423, 1
  %425 = shl i32 %16, 1
  %426 = or i32 %15, %337
  %427 = and i32 %346, %304
  %428 = and i32 %311, %345
  %429 = and i32 %357, %14
  %430 = and i32 %338, %5
  %431 = and i32 %303, %396
  %432 = xor i32 %329, %307
  %433 = and i32 %419, %322
  %434 = mul i32 %433, -11
  %435 = and i32 %15, %322
  %436 = shl i32 %435, 1
  %437 = and i32 %419, %4
  %438 = and i32 %15, %4
  %439 = mul i32 %438, -6
  %440 = and i32 %370, %322
  %441 = and i32 %370, %4
  %442 = mul i32 %441, 14
  %443 = sub i32 %172, %217
  %444 = sub i32 %443, %181
  %445 = sub i32 %444, %175
  %446 = sub i32 %445, %145
  %447 = sub i32 %446, %13
  %448 = add i32 %447, %440
  %449 = add i32 %448, %328
  %450 = mul i32 %449, 3
  %451 = add i32 %9, %29
  %452 = add i32 %451, %164
  %453 = add i32 %452, %130
  %454 = sub i32 %128, %453
  %455 = add i32 %454, %404
  %456 = add i32 %455, %333
  %457 = mul i32 %456, 5
  %458 = add i32 %196, %242
  %459 = add i32 %458, %173
  %460 = add i32 %459, %394
  %461 = add i32 %460, %340
  %462 = shl i32 %461, 2
  %463 = add i32 %299, %294
  %464 = shl i32 %463, 3
  %465 = sub i32 -2, %0
  %466 = add i32 %465, %1
  %467 = add i32 %466, %25
  %468 = add i32 %467, %20
  %469 = add i32 %468, %55
  %470 = add i32 %469, %207
  %471 = add i32 %470, %191
  %472 = add i32 %471, %155
  %473 = add i32 %472, %129
  %474 = add i32 %473, %281
  %475 = add i32 %474, %273
  %476 = add i32 %475, %271
  %477 = add i32 %476, %269
  %478 = add i32 %477, %264
  %479 = add i32 %478, %209
  %480 = add i32 %479, %202
  %481 = add i32 %480, %151
  %482 = add i32 %481, %150
  %483 = add i32 %482, %149
  %484 = add i32 %483, %111
  %485 = add i32 %484, %109
  %486 = add i32 %485, %106
  %487 = add i32 %486, %101
  %488 = add i32 %487, %27
  %489 = add i32 %488, %336
  %490 = add i32 %489, %437
  %491 = add i32 %490, %427
  %492 = add i32 %491, %421
  %493 = add i32 %492, %418
  %494 = add i32 %493, %384
  %495 = add i32 %494, %369
  %496 = add i32 %495, %342
  %497 = shl i32 %496, 1
  %498 = sub i32 %285, %0
  %499 = add i32 %498, %21
  %500 = sub i32 %499, %48
  %501 = add i32 %500, %119
  %502 = sub i32 %501, %2
  %503 = add i32 %502, %156
  %504 = add i32 %503, %158
  %505 = add i32 %504, %255
  %506 = add i32 %505, %23
  %507 = add i32 %506, %63
  %508 = sub i32 %507, %79
  %509 = sub i32 %508, %22
  %510 = add i32 %509, %24
  %511 = sub i32 %510, %46
  %512 = add i32 %511, %78
  %513 = sub i32 %512, %80
  %514 = add i32 %513, %68
  %515 = add i32 %514, %91
  %516 = add i32 %515, %92
  %517 = sub i32 %516, %95
  %518 = add i32 %517, %115
  %519 = sub i32 %518, %41
  %520 = add i32 %519, %42
  %521 = add i32 %520, %138
  %522 = sub i32 %521, %142
  %523 = add i32 %522, %157
  %524 = add i32 %523, %160
  %525 = add i32 %524, %169
  %526 = add i32 %525, %179
  %527 = sub i32 %526, %59
  %528 = add i32 %527, %183
  %529 = sub i32 %528, %110
  %530 = sub i32 %529, %70
  %531 = sub i32 %530, %225
  %532 = add i32 %531, %226
  %533 = add i32 %532, %227
  %534 = sub i32 %533, %230
  %535 = sub i32 %534, %245
  %536 = add i32 %535, %250
  %537 = sub i32 %536, %258
  %538 = sub i32 %537, %260
  %539 = add i32 %538, %280
  %540 = sub i32 %539, %282
  %541 = add i32 %540, %286
  %542 = add i32 %541, %291
  %543 = sub i32 %542, %31
  %544 = sub i32 %543, %40
  %545 = sub i32 %544, %45
  %546 = add i32 %545, %47
  %547 = add i32 %546, %49
  %548 = sub i32 %547, %54
  %549 = sub i32 %548, %57
  %550 = sub i32 %549, %58
  %551 = add i32 %550, %64
  %552 = add i32 %551, %65
  %553 = add i32 %552, %67
  %554 = sub i32 %553, %69
  %555 = add i32 %554, %75
  %556 = add i32 %555, %81
  %557 = add i32 %556, %82
  %558 = sub i32 %557, %84
  %559 = add i32 %558, %88
  %560 = sub i32 %559, %89
  %561 = sub i32 %560, %97
  %562 = add i32 %561, %98
  %563 = sub i32 %562, %99
  %564 = add i32 %563, %100
  %565 = add i32 %564, %102
  %566 = add i32 %565, %103
  %567 = sub i32 %566, %104
  %568 = sub i32 %567, %105
  %569 = sub i32 %568, %107
  %570 = add i32 %569, %108
  %571 = sub i32 %570, %112
  %572 = sub i32 %571, %123
  %573 = sub i32 %572, %124
  %574 = sub i32 %573, %125
  %575 = add i32 %574, %126
  %576 = add i32 %575, %127
  %577 = add i32 %576, %131
  %578 = add i32 %577, %133
  %579 = sub i32 %578, %134
  %580 = sub i32 %579, %137
  %581 = sub i32 %580, %139
  %582 = sub i32 %581, %140
  %583 = sub i32 %582, %141
  %584 = add i32 %583, %146
  %585 = add i32 %584, %147
  %586 = sub i32 %585, %148
  %587 = add i32 %586, %152
  %588 = add i32 %587, %159
  %589 = sub i32 %588, %161
  %590 = sub i32 %589, %165
  %591 = sub i32 %590, %166
  %592 = sub i32 %591, %167
  %593 = sub i32 %592, %168
  %594 = sub i32 %593, %170
  %595 = add i32 %594, %171
  %596 = sub i32 %595, %174
  %597 = sub i32 %596, %177
  %598 = sub i32 %597, %178
  %599 = sub i32 %598, %180
  %600 = add i32 %599, %184
  %601 = sub i32 %600, %185
  %602 = add i32 %601, %186
  %603 = sub i32 %602, %189
  %604 = sub i32 %603, %11
  %605 = add i32 %604, %195
  %606 = sub i32 %605, %198
  %607 = add i32 %606, %201
  %608 = sub i32 %607, %203
  %609 = add i32 %608, %206
  %610 = sub i32 %609, %208
  %611 = sub i32 %610, %210
  %612 = add i32 %611, %211
  %613 = sub i32 %612, %212
  %614 = sub i32 %613, %215
  %615 = add i32 %614, %216
  %616 = add i32 %615, %218
  %617 = add i32 %616, %219
  %618 = sub i32 %617, %222
  %619 = sub i32 %618, %228
  %620 = add i32 %619, %231
  %621 = sub i32 %620, %232
  %622 = sub i32 %621, %237
  %623 = add i32 %622, %238
  %624 = sub i32 %623, %239
  %625 = sub i32 %624, %240
  %626 = add i32 %625, %241
  %627 = sub i32 %626, %143
  %628 = sub i32 %627, %246
  %629 = add i32 %628, %247
  %630 = add i32 %629, %248
  %631 = add i32 %630, %249
  %632 = add i32 %631, %251
  %633 = sub i32 %632, %252
  %634 = sub i32 %633, %253
  %635 = sub i32 %634, %254
  %636 = sub i32 %635, %256
  %637 = sub i32 %636, %257
  %638 = add i32 %637, %36
  %639 = add i32 %638, %259
  %640 = sub i32 %639, %261
  %641 = add i32 %640, %265
  %642 = add i32 %641, %267
  %643 = add i32 %642, %268
  %644 = add i32 %643, %270
  %645 = add i32 %644, %272
  %646 = add i32 %645, %274
  %647 = sub i32 %646, %278
  %648 = sub i32 %647, %279
  %649 = sub i32 %648, %116
  %650 = sub i32 %649, %284
  %651 = sub i32 %650, %287
  %652 = add i32 %651, %288
  %653 = add i32 %652, %290
  %654 = add i32 %653, %322
  %655 = add i32 %654, %33
  %656 = sub i32 %655, %38
  %657 = sub i32 %656, %44
  %658 = sub i32 %657, %53
  %659 = sub i32 %658, %62
  %660 = sub i32 %659, %72
  %661 = sub i32 %660, %74
  %662 = sub i32 %661, %77
  %663 = add i32 %662, %87
  %664 = add i32 %663, %94
  %665 = sub i32 %664, %114
  %666 = sub i32 %665, %121
  %667 = sub i32 %666, %132
  %668 = sub i32 %667, %136
  %669 = add i32 %668, %144
  %670 = sub i32 %669, %154
  %671 = add i32 %670, %163
  %672 = add i32 %671, %176
  %673 = sub i32 %672, %182
  %674 = sub i32 %673, %188
  %675 = sub i32 %674, %190
  %676 = sub i32 %675, %192
  %677 = sub i32 %676, %194
  %678 = sub i32 %677, %200
  %679 = sub i32 %678, %214
  %680 = sub i32 %679, %221
  %681 = sub i32 %680, %224
  %682 = sub i32 %681, %229
  %683 = sub i32 %682, %234
  %684 = sub i32 %683, %244
  %685 = sub i32 %684, %263
  %686 = add i32 %685, %266
  %687 = sub i32 %686, %276
  %688 = add i32 %687, %289
  %689 = add i32 %688, %293
  %690 = sub i32 %689, %296
  %691 = add i32 %690, %298
  %692 = add i32 %691, %301
  %693 = add i32 %692, %302
  %694 = sub i32 %693, %5
  %695 = sub i32 %694, %118
  %696 = sub i32 %695, %205
  %697 = sub i32 %696, %236
  %698 = add i32 %697, %305
  %699 = sub i32 %698, %308
  %700 = sub i32 %699, %339
  %701 = sub i32 %700, %344
  %702 = add i32 %701, %320
  %703 = sub i32 %702, %359
  %704 = add i32 %703, %363
  %705 = sub i32 %704, %372
  %706 = sub i32 %705, %373
  %707 = sub i32 %706, %378
  %708 = add i32 %707, %379
  %709 = add i32 %708, %392
  %710 = sub i32 %709, %399
  %711 = add i32 %710, %400
  %712 = add i32 %711, %420
  %713 = sub i32 %712, %429
  %714 = add i32 %713, %430
  %715 = add i32 %714, %464
  %716 = add i32 %715, %306
  %717 = sub i32 %716, %310
  %718 = add i32 %717, %312
  %719 = add i32 %718, %313
  %720 = sub i32 %719, %316
  %721 = add i32 %720, %321
  %722 = add i32 %721, %330
  %723 = add i32 %722, %332
  %724 = sub i32 %723, %343
  %725 = add i32 %724, %347
  %726 = sub i32 %725, %352
  %727 = sub i32 %726, %334
  %728 = add i32 %727, %353
  %729 = sub i32 %728, %354
  %730 = sub i32 %729, %360
  %731 = sub i32 %730, %364
  %732 = sub i32 %731, %368
  %733 = sub i32 %732, %371
  %734 = add i32 %733, %374
  %735 = add i32 %734, %376
  %736 = sub i32 %735, %377
  %737 = sub i32 %736, %385
  %738 = add i32 %737, %387
  %739 = add i32 %738, %388
  %740 = add i32 %739, %389
  %741 = sub i32 %740, %390
  %742 = sub i32 %741, %391
  %743 = sub i32 %742, %393
  %744 = add i32 %743, %395
  %745 = sub i32 %744, %403
  %746 = add i32 %745, %408
  %747 = add i32 %746, %409
  %748 = add i32 %747, %410
  %749 = sub i32 %748, %416
  %750 = add i32 %749, %417
  %751 = add i32 %750, %422
  %752 = sub i32 %751, %425
  %753 = add i32 %752, %381
  %754 = sub i32 %753, %426
  %755 = add i32 %754, %428
  %756 = sub i32 %755, %431
  %757 = add i32 %756, %432
  %758 = sub i32 %757, %335
  %759 = sub i32 %758, %351
  %760 = sub i32 %759, %356
  %761 = add i32 %760, %362
  %762 = sub i32 %761, %366
  %763 = sub i32 %762, %383
  %764 = sub i32 %763, %398
  %765 = sub i32 %764, %402
  %766 = add i32 %765, %405
  %767 = sub i32 %766, %411
  %768 = sub i32 %767, %424
  %769 = add i32 %768, %434
  %770 = sub i32 %769, %436
  %771 = add i32 %770, %439
  %772 = add i32 %771, %442
  %773 = sub i32 %772, %407
  %774 = sub i32 %773, %415
  %775 = add i32 %774, %462
  %776 = add i32 %775, %457
  %777 = add i32 %776, %450
  %778 = add i32 %777, %497
  %779 = icmp eq i32 %18, %778
  %780 = select i1 %779, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %781 = tail call i32 @puts(i8* nonnull dereferenceable(1) %780)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
