digraph "DFG for'main' function" {
	Node0x20d7f58[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x20d7fd8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x20d8068[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x20d80c8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x20d8178[shape=record, label="  %5 = alloca i32, align 4"];
	Node0x20d81d8[shape=record, label="  %6 = alloca i32, align 4"];
	Node0x20d8238[shape=record, label="  %7 = bitcast i32* %1 to i8*"];
	Node0x20d8668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20d8748[shape=record, label="  %8 = bitcast i32* %2 to i8*"];
	Node0x20d8848[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20d88b8[shape=record, label="  %9 = bitcast i32* %3 to i8*"];
	Node0x20d8968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5"];
	Node0x20d8a28[shape=record, label="  %10 = bitcast i32* %4 to i8*"];
	Node0x20d8ad8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5"];
	Node0x20d8b98[shape=record, label="  %11 = bitcast i32* %5 to i8*"];
	Node0x20d8c48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5"];
	Node0x20d8d08[shape=record, label="  %12 = bitcast i32* %6 to i8*"];
	Node0x20d8db8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5"];
	Node0x2070700[shape=record, label="  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)"];
	Node0x20d90a8[shape=record, label="  %14 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20d9208[shape=record, label="  %15 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20d9878[shape=record, label="  %16 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x20d99e8[shape=record, label="  %17 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x20d9a48[shape=record, label="  %18 = load i32, i32* %5, align 4, !tbaa !2"];
	Node0x20d9aa8[shape=record, label="  %19 = load i32, i32* %6, align 4, !tbaa !2"];
	Node0x20d9c38[shape=record, label="  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)"];
	Node0x20e1418[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5"];
	Node0x20e14e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5"];
	Node0x20e15f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5"];
	Node0x20e1708[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5"];
	Node0x20e1818[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20e1928[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20e19e8[shape=record, label="  ret i32 0"];
	Node0x20d7f58 -> Node0x20d7fd8;
	Node0x20d7fd8 -> Node0x20d8068;
	Node0x20d8068 -> Node0x20d80c8;
	Node0x20d80c8 -> Node0x20d8178;
	Node0x20d8178 -> Node0x20d81d8;
	Node0x20d81d8 -> Node0x20d8238;
	Node0x20d8238 -> Node0x20d8668;
	Node0x20d8668 -> Node0x20d8748;
	Node0x20d8748 -> Node0x20d8848;
	Node0x20d8848 -> Node0x20d88b8;
	Node0x20d88b8 -> Node0x20d8968;
	Node0x20d8968 -> Node0x20d8a28;
	Node0x20d8a28 -> Node0x20d8ad8;
	Node0x20d8ad8 -> Node0x20d8b98;
	Node0x20d8b98 -> Node0x20d8c48;
	Node0x20d8c48 -> Node0x20d8d08;
	Node0x20d8d08 -> Node0x20d8db8;
	Node0x20d8db8 -> Node0x2070700;
	Node0x2070700 -> Node0x20d90a8;
	Node0x20d90a8 -> Node0x20d9208;
	Node0x20d9208 -> Node0x20d9878;
	Node0x20d9878 -> Node0x20d99e8;
	Node0x20d99e8 -> Node0x20d9a48;
	Node0x20d9a48 -> Node0x20d9aa8;
	Node0x20d9aa8 -> Node0x20d9c38;
	Node0x20d9c38 -> Node0x20e1418;
	Node0x20e1418 -> Node0x20e14e8;
	Node0x20e14e8 -> Node0x20e15f8;
	Node0x20e15f8 -> Node0x20e1708;
	Node0x20e1708 -> Node0x20e1818;
	Node0x20e1818 -> Node0x20e1928;
	Node0x20e1928 -> Node0x20e19e8;
edge [color=red]
	Node0x20d7f58 -> Node0x20d8238;
	Node0x20d8238 -> Node0x20d8668;
	Node0x20d7fd8 -> Node0x20d8748;
	Node0x20d8748 -> Node0x20d8848;
	Node0x20d8068 -> Node0x20d88b8;
	Node0x20d88b8 -> Node0x20d8968;
	Node0x20d80c8 -> Node0x20d8a28;
	Node0x20d8a28 -> Node0x20d8ad8;
	Node0x20d8178 -> Node0x20d8b98;
	Node0x20d8b98 -> Node0x20d8c48;
	Node0x20d81d8 -> Node0x20d8d08;
	Node0x20d8d08 -> Node0x20d8db8;
	Node0x20d7f58 -> Node0x2070700;
	Node0x20d7fd8 -> Node0x2070700;
	Node0x20d8068 -> Node0x2070700;
	Node0x20d80c8 -> Node0x2070700;
	Node0x20d8178 -> Node0x2070700;
	Node0x20d81d8 -> Node0x2070700;
	Node0x20d7f58 -> Node0x20d90a8;
	Node0x20d7fd8 -> Node0x20d9208;
	Node0x20d8068 -> Node0x20d9878;
	Node0x20d80c8 -> Node0x20d99e8;
	Node0x20d8178 -> Node0x20d9a48;
	Node0x20d81d8 -> Node0x20d9aa8;
	Node0x20d90a8 -> Node0x20d9c38;
	Node0x20d9208 -> Node0x20d9c38;
	Node0x20d9878 -> Node0x20d9c38;
	Node0x20d99e8 -> Node0x20d9c38;
	Node0x20d9a48 -> Node0x20d9c38;
	Node0x20d9aa8 -> Node0x20d9c38;
	Node0x20d8d08 -> Node0x20e1418;
	Node0x20d8b98 -> Node0x20e14e8;
	Node0x20d8a28 -> Node0x20e15f8;
	Node0x20d88b8 -> Node0x20e1708;
	Node0x20d8748 -> Node0x20e1818;
	Node0x20d8238 -> Node0x20e1928;
}
