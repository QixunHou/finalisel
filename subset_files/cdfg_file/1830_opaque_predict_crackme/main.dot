digraph "DFG for'main' function" {
	Node0x20e9b48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x20e9bc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x20e9c58[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x20ea0b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x20ea198[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x20ea2b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20ea4f0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x20ea5a8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20eb518[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20ebba0[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x20ebc10[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x20ebc80[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x20ebcf0[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x20ebd60[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x20ebdd0[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x20ebe40[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x20ebeb0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x20ebf20[shape=record, label="  %16 = xor i32 %6, -1"];
	Node0x20ebf90[shape=record, label="  %17 = and i32 %7, %16"];
	Node0x20ec000[shape=record, label="  %18 = mul i32 %17, -3"];
	Node0x20ec070[shape=record, label="  %19 = add i32 %12, %15"];
	Node0x20ec0e0[shape=record, label="  %20 = mul i32 %19, -5"];
	Node0x20ec150[shape=record, label="  %21 = sub i32 %6, %7"];
	Node0x20ec1c0[shape=record, label="  %22 = add i32 %21, %11"];
	Node0x20ec230[shape=record, label="  %23 = add i32 %22, %13"];
	Node0x20ec2a0[shape=record, label="  %24 = add i32 %23, %10"];
	Node0x20ec310[shape=record, label="  %25 = add i32 %24, %18"];
	Node0x20ec380[shape=record, label="  %26 = sub i32 %25, %9"];
	Node0x20ec3f0[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x20ec460[shape=record, label="  %28 = icmp eq i32 %27, 2"];
	Node0x208a9d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x20ec4f0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x20ec748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x20ec8a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x20ec968[shape=record, label="  ret i32 0"];
	Node0x20e9b48 -> Node0x20e9bc8;
	Node0x20e9bc8 -> Node0x20e9c58;
	Node0x20e9c58 -> Node0x20ea0b8;
	Node0x20ea0b8 -> Node0x20ea198;
	Node0x20ea198 -> Node0x20ea2b8;
	Node0x20ea2b8 -> Node0x20ea4f0;
	Node0x20ea4f0 -> Node0x20ea5a8;
	Node0x20ea5a8 -> Node0x20eb518;
	Node0x20eb518 -> Node0x20ebba0;
	Node0x20ebba0 -> Node0x20ebc10;
	Node0x20ebc10 -> Node0x20ebc80;
	Node0x20ebc80 -> Node0x20ebcf0;
	Node0x20ebcf0 -> Node0x20ebd60;
	Node0x20ebd60 -> Node0x20ebdd0;
	Node0x20ebdd0 -> Node0x20ebe40;
	Node0x20ebe40 -> Node0x20ebeb0;
	Node0x20ebeb0 -> Node0x20ebf20;
	Node0x20ebf20 -> Node0x20ebf90;
	Node0x20ebf90 -> Node0x20ec000;
	Node0x20ec000 -> Node0x20ec070;
	Node0x20ec070 -> Node0x20ec0e0;
	Node0x20ec0e0 -> Node0x20ec150;
	Node0x20ec150 -> Node0x20ec1c0;
	Node0x20ec1c0 -> Node0x20ec230;
	Node0x20ec230 -> Node0x20ec2a0;
	Node0x20ec2a0 -> Node0x20ec310;
	Node0x20ec310 -> Node0x20ec380;
	Node0x20ec380 -> Node0x20ec3f0;
	Node0x20ec3f0 -> Node0x20ec460;
	Node0x20ec460 -> Node0x208a9d8;
	Node0x208a9d8 -> Node0x20ec4f0;
	Node0x20ec4f0 -> Node0x20ec748;
	Node0x20ec748 -> Node0x20ec8a8;
	Node0x20ec8a8 -> Node0x20ec968;
edge [color=red]
	Node0x20e9b48 -> Node0x20e9c58;
	Node0x20e9c58 -> Node0x20ea0b8;
	Node0x20e9bc8 -> Node0x20ea198;
	Node0x20ea198 -> Node0x20ea2b8;
	Node0x20e9b48 -> Node0x20ea4f0;
	Node0x20e9bc8 -> Node0x20ea4f0;
	Node0x20e9b48 -> Node0x20ea5a8;
	Node0x20e9bc8 -> Node0x20eb518;
	Node0x20eb518 -> Node0x20ebba0;
	Node0x20ea5a8 -> Node0x20ebba0;
	Node0x20ebba0 -> Node0x20ebc10;
	Node0x20ebc10 -> Node0x20ebc80;
	Node0x20eb518 -> Node0x20ebcf0;
	Node0x20ea5a8 -> Node0x20ebd60;
	Node0x20ebcf0 -> Node0x20ebd60;
	Node0x20ebd60 -> Node0x20ebdd0;
	Node0x20eb518 -> Node0x20ebe40;
	Node0x20ea5a8 -> Node0x20ebe40;
	Node0x20ebe40 -> Node0x20ebeb0;
	Node0x20ea5a8 -> Node0x20ebf20;
	Node0x20eb518 -> Node0x20ebf90;
	Node0x20ebf20 -> Node0x20ebf90;
	Node0x20ebf90 -> Node0x20ec000;
	Node0x20ebd60 -> Node0x20ec070;
	Node0x20ebeb0 -> Node0x20ec070;
	Node0x20ec070 -> Node0x20ec0e0;
	Node0x20ea5a8 -> Node0x20ec150;
	Node0x20eb518 -> Node0x20ec150;
	Node0x20ec150 -> Node0x20ec1c0;
	Node0x20ebcf0 -> Node0x20ec1c0;
	Node0x20ec1c0 -> Node0x20ec230;
	Node0x20ebdd0 -> Node0x20ec230;
	Node0x20ec230 -> Node0x20ec2a0;
	Node0x20ebc80 -> Node0x20ec2a0;
	Node0x20ec2a0 -> Node0x20ec310;
	Node0x20ec000 -> Node0x20ec310;
	Node0x20ec310 -> Node0x20ec380;
	Node0x20ebc10 -> Node0x20ec380;
	Node0x20ec380 -> Node0x20ec3f0;
	Node0x20ec0e0 -> Node0x20ec3f0;
	Node0x20ec3f0 -> Node0x20ec460;
	Node0x20ec460 -> Node0x208a9d8;
	Node0x208a9d8 -> Node0x20ec4f0;
	Node0x20ea198 -> Node0x20ec748;
	Node0x20e9c58 -> Node0x20ec8a8;
}
