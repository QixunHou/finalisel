digraph "DFG for'crackme' function" {
	Node0xf5ed80[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xf5edf0[shape=record, label="  %6 = or i32 %5, %1"];
	Node0xf5ee60[shape=record, label="  %7 = sub i32 %3, %6"];
	Node0xf5eed0[shape=record, label="  %8 = or i32 %3, %0"];
	Node0xf5ef40[shape=record, label="  %9 = add i32 %7, %8"];
	Node0xf5efb0[shape=record, label="  %10 = xor i32 %2, %1"];
	Node0xf5f020[shape=record, label="  %11 = or i32 %2, %1"];
	Node0xf5f090[shape=record, label="  %12 = and i32 %5, %1"];
	Node0xf5f100[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xf5f1a0[shape=record, label="  %14 = shl i32 %11, 2"];
	Node0xf5f240[shape=record, label="  %15 = xor i32 %14, -4"];
	Node0xf5f2b0[shape=record, label="  %16 = shl i32 %6, 2"];
	Node0xf5f320[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0xf5f3c0[shape=record, label="  %18 = mul i32 %12, -6"];
	Node0xf5f430[shape=record, label="  %19 = and i32 %2, %1"];
	Node0xf5f4a0[shape=record, label="  %20 = xor i32 %0, -1"];
	Node0xf5f510[shape=record, label="  %21 = and i32 %20, %3"];
	Node0xf5f580[shape=record, label="  %22 = shl i32 %21, 2"];
	Node0xf5f5f0[shape=record, label="  %23 = xor i32 %22, -4"];
	Node0xf5f660[shape=record, label="  %24 = xor i32 %3, -1"];
	Node0xf5f6d0[shape=record, label="  %25 = xor i32 %20, %3"];
	Node0xf5f740[shape=record, label="  %26 = and i32 %3, %0"];
	Node0xf5f7b0[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0xf5f820[shape=record, label="  %28 = or i32 %20, %3"];
	Node0xf5f890[shape=record, label="  %29 = xor i32 %8, -1"];
	Node0xf5f930[shape=record, label="  %30 = mul i32 %29, -7"];
	Node0xf5f9a0[shape=record, label="  %31 = xor i32 %28, -1"];
	Node0xf5fa40[shape=record, label="  %32 = shl i32 %26, 1"];
	Node0xf5fcc0[shape=record, label="  %33 = add i32 %19, %31"];
	Node0xf5fd60[shape=record, label="  %34 = mul i32 %33, -5"];
	Node0xf5fe00[shape=record, label="  %35 = sub i32 -3, %0"];
	Node0xf5fe70[shape=record, label="  %36 = add i32 %35, %1"];
	Node0xf5fee0[shape=record, label="  %37 = sub i32 %36, %2"];
	Node0xf5ff50[shape=record, label="  %38 = add i32 %37, %10"];
	Node0xf5ffc0[shape=record, label="  %39 = add i32 %38, %11"];
	Node0xf60030[shape=record, label="  %40 = add i32 %39, %13"];
	Node0xf600a0[shape=record, label="  %41 = add i32 %40, %24"];
	Node0xf60110[shape=record, label="  %42 = add i32 %41, %18"];
	Node0xf60180[shape=record, label="  %43 = add i32 %42, %25"];
	Node0xf601f0[shape=record, label="  %44 = add i32 %43, %27"];
	Node0xf60260[shape=record, label="  %45 = sub i32 %44, %28"];
	Node0xf602d0[shape=record, label="  %46 = add i32 %45, %21"];
	Node0xf60340[shape=record, label="  %47 = sub i32 %46, %15"];
	Node0xf603b0[shape=record, label="  %48 = sub i32 %47, %17"];
	Node0xf60420[shape=record, label="  %49 = add i32 %48, %30"];
	Node0xf60490[shape=record, label="  %50 = sub i32 %49, %32"];
	Node0xf60500[shape=record, label="  %51 = add i32 %50, %23"];
	Node0xf60570[shape=record, label="  %52 = add i32 %51, %34"];
	Node0xf605e0[shape=record, label="  %53 = icmp eq i32 %9, %52"];
	Node0xeff268[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf60a80[shape=record, label="  %55 = tail call i32 @puts(i8* nonnull dereferenceable(1) %54)"];
	Node0xf60ad0[shape=record, label="  ret void"];
	Node0xf5ed80 -> Node0xf5edf0;
	Node0xf5edf0 -> Node0xf5ee60;
	Node0xf5ee60 -> Node0xf5eed0;
	Node0xf5eed0 -> Node0xf5ef40;
	Node0xf5ef40 -> Node0xf5efb0;
	Node0xf5efb0 -> Node0xf5f020;
	Node0xf5f020 -> Node0xf5f090;
	Node0xf5f090 -> Node0xf5f100;
	Node0xf5f100 -> Node0xf5f1a0;
	Node0xf5f1a0 -> Node0xf5f240;
	Node0xf5f240 -> Node0xf5f2b0;
	Node0xf5f2b0 -> Node0xf5f320;
	Node0xf5f320 -> Node0xf5f3c0;
	Node0xf5f3c0 -> Node0xf5f430;
	Node0xf5f430 -> Node0xf5f4a0;
	Node0xf5f4a0 -> Node0xf5f510;
	Node0xf5f510 -> Node0xf5f580;
	Node0xf5f580 -> Node0xf5f5f0;
	Node0xf5f5f0 -> Node0xf5f660;
	Node0xf5f660 -> Node0xf5f6d0;
	Node0xf5f6d0 -> Node0xf5f740;
	Node0xf5f740 -> Node0xf5f7b0;
	Node0xf5f7b0 -> Node0xf5f820;
	Node0xf5f820 -> Node0xf5f890;
	Node0xf5f890 -> Node0xf5f930;
	Node0xf5f930 -> Node0xf5f9a0;
	Node0xf5f9a0 -> Node0xf5fa40;
	Node0xf5fa40 -> Node0xf5fcc0;
	Node0xf5fcc0 -> Node0xf5fd60;
	Node0xf5fd60 -> Node0xf5fe00;
	Node0xf5fe00 -> Node0xf5fe70;
	Node0xf5fe70 -> Node0xf5fee0;
	Node0xf5fee0 -> Node0xf5ff50;
	Node0xf5ff50 -> Node0xf5ffc0;
	Node0xf5ffc0 -> Node0xf60030;
	Node0xf60030 -> Node0xf600a0;
	Node0xf600a0 -> Node0xf60110;
	Node0xf60110 -> Node0xf60180;
	Node0xf60180 -> Node0xf601f0;
	Node0xf601f0 -> Node0xf60260;
	Node0xf60260 -> Node0xf602d0;
	Node0xf602d0 -> Node0xf60340;
	Node0xf60340 -> Node0xf603b0;
	Node0xf603b0 -> Node0xf60420;
	Node0xf60420 -> Node0xf60490;
	Node0xf60490 -> Node0xf60500;
	Node0xf60500 -> Node0xf60570;
	Node0xf60570 -> Node0xf605e0;
	Node0xf605e0 -> Node0xeff268;
	Node0xeff268 -> Node0xf60a80;
	Node0xf60a80 -> Node0xf60ad0;
edge [color=red]
	Node0xf5ed80 -> Node0xf5edf0;
	Node0xf5edf0 -> Node0xf5ee60;
	Node0xf5ee60 -> Node0xf5ef40;
	Node0xf5eed0 -> Node0xf5ef40;
	Node0xf5ed80 -> Node0xf5f090;
	Node0xf5f090 -> Node0xf5f100;
	Node0xf5f020 -> Node0xf5f1a0;
	Node0xf5f1a0 -> Node0xf5f240;
	Node0xf5edf0 -> Node0xf5f2b0;
	Node0xf5f2b0 -> Node0xf5f320;
	Node0xf5f090 -> Node0xf5f3c0;
	Node0xf5f4a0 -> Node0xf5f510;
	Node0xf5f510 -> Node0xf5f580;
	Node0xf5f580 -> Node0xf5f5f0;
	Node0xf5f4a0 -> Node0xf5f6d0;
	Node0xf5f740 -> Node0xf5f7b0;
	Node0xf5f4a0 -> Node0xf5f820;
	Node0xf5eed0 -> Node0xf5f890;
	Node0xf5f890 -> Node0xf5f930;
	Node0xf5f820 -> Node0xf5f9a0;
	Node0xf5f740 -> Node0xf5fa40;
	Node0xf5f430 -> Node0xf5fcc0;
	Node0xf5f9a0 -> Node0xf5fcc0;
	Node0xf5fcc0 -> Node0xf5fd60;
	Node0xf5fe00 -> Node0xf5fe70;
	Node0xf5fe70 -> Node0xf5fee0;
	Node0xf5fee0 -> Node0xf5ff50;
	Node0xf5efb0 -> Node0xf5ff50;
	Node0xf5ff50 -> Node0xf5ffc0;
	Node0xf5f020 -> Node0xf5ffc0;
	Node0xf5ffc0 -> Node0xf60030;
	Node0xf5f100 -> Node0xf60030;
	Node0xf60030 -> Node0xf600a0;
	Node0xf5f660 -> Node0xf600a0;
	Node0xf600a0 -> Node0xf60110;
	Node0xf5f3c0 -> Node0xf60110;
	Node0xf60110 -> Node0xf60180;
	Node0xf5f6d0 -> Node0xf60180;
	Node0xf60180 -> Node0xf601f0;
	Node0xf5f7b0 -> Node0xf601f0;
	Node0xf601f0 -> Node0xf60260;
	Node0xf5f820 -> Node0xf60260;
	Node0xf60260 -> Node0xf602d0;
	Node0xf5f510 -> Node0xf602d0;
	Node0xf602d0 -> Node0xf60340;
	Node0xf5f240 -> Node0xf60340;
	Node0xf60340 -> Node0xf603b0;
	Node0xf5f320 -> Node0xf603b0;
	Node0xf603b0 -> Node0xf60420;
	Node0xf5f930 -> Node0xf60420;
	Node0xf60420 -> Node0xf60490;
	Node0xf5fa40 -> Node0xf60490;
	Node0xf60490 -> Node0xf60500;
	Node0xf5f5f0 -> Node0xf60500;
	Node0xf60500 -> Node0xf60570;
	Node0xf5fd60 -> Node0xf60570;
	Node0xf5ef40 -> Node0xf605e0;
	Node0xf60570 -> Node0xf605e0;
	Node0xf605e0 -> Node0xeff268;
	Node0xeff268 -> Node0xf60a80;
}
