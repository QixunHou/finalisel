; ModuleID = '../.././c_source_file/1349_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1349_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %2, %0
  %5 = xor i32 %2, -1
  %6 = and i32 %5, %1
  %7 = or i32 %4, %6
  %8 = xor i32 %2, %1
  %9 = xor i32 %8, -1
  %10 = xor i32 %9, %0
  %11 = shl i32 %10, 2
  %12 = sub i32 %11, %7
  %13 = and i32 %2, %1
  %14 = and i32 %13, %0
  %15 = xor i32 %0, -1
  %16 = or i32 %2, %1
  %17 = and i32 %16, %15
  %18 = or i32 %14, %17
  %19 = or i32 %2, %0
  %20 = xor i32 %19, %1
  %21 = and i32 %1, %0
  %22 = or i32 %21, %2
  %23 = xor i32 %1, -1
  %24 = and i32 %23, %2
  %25 = and i32 %24, %0
  %26 = or i32 %23, %2
  %27 = and i32 %26, %15
  %28 = xor i32 %27, -1
  %29 = xor i32 %25, %28
  %30 = or i32 %5, %0
  %31 = xor i32 %30, %1
  %32 = xor i32 %21, -1
  %33 = and i32 %9, %32
  %34 = and i32 %23, %0
  %35 = or i32 %13, %34
  %36 = xor i32 %6, -1
  %37 = xor i32 %34, %36
  %38 = or i32 %23, %0
  %39 = and i32 %38, %2
  %40 = xor i32 %1, %0
  %41 = or i32 %4, %40
  %42 = or i32 %34, %5
  %43 = xor i32 %4, -1
  %44 = and i32 %43, %23
  %45 = xor i32 %38, -1
  %46 = xor i32 %45, %2
  %47 = or i32 %1, %0
  %48 = xor i32 %47, -1
  %49 = or i32 %5, %48
  %50 = shl i32 %49, 1
  %51 = or i32 %36, %15
  %52 = and i32 %36, %15
  %53 = and i32 %32, %2
  %54 = xor i32 %2, %0
  %55 = xor i32 %54, -1
  %56 = and i32 %55, %32
  %57 = and i32 %54, %40
  %58 = xor i32 %13, -1
  %59 = xor i32 %34, %58
  %60 = xor i32 %4, %38
  %61 = shl i32 %60, 1
  %62 = or i32 %21, %55
  %63 = and i32 %24, %15
  %64 = and i32 %26, %0
  %65 = xor i32 %64, 2147483647
  %66 = xor i32 %65, %63
  %67 = shl i32 %66, 1
  %68 = xor i32 %40, -1
  %69 = and i32 %55, %68
  %70 = and i32 %40, %55
  %71 = xor i32 %19, -1
  %72 = xor i32 %71, %1
  %73 = or i32 %21, %71
  %74 = shl i32 %73, 1
  %75 = xor i32 %8, %0
  %76 = xor i32 %16, %0
  %77 = xor i32 %76, -1
  %78 = xor i32 %14, %77
  %79 = and i32 %55, %23
  %80 = and i32 %5, %0
  %81 = xor i32 %80, %1
  %82 = and i32 %8, %0
  %83 = xor i32 %30, %21
  %84 = or i32 %58, %15
  %85 = or i32 %13, %0
  %86 = xor i32 %75, -1
  %87 = xor i32 %25, %86
  %88 = xor i32 %34, -1
  %89 = and i32 %88, %2
  %90 = add i32 %54, 1
  %91 = or i32 %40, %5
  %92 = or i32 %63, %64
  %93 = shl i32 %92, 1
  %94 = xor i32 %16, -1
  %95 = or i32 %94, %0
  %96 = and i32 %47, %5
  %97 = xor i32 %32, %2
  %98 = or i32 %5, %1
  %99 = xor i32 %98, %21
  %100 = or i32 %6, %15
  %101 = or i32 %80, %40
  %102 = add i32 %16, 1
  %103 = or i32 %40, %55
  %104 = xor i32 %21, %2
  %105 = or i32 %13, %15
  %106 = or i32 %8, %15
  %107 = xor i32 %63, %106
  %108 = and i32 %54, %23
  %109 = or i32 %14, %76
  %110 = and i32 %36, %0
  %111 = and i32 %98, %15
  %112 = and i32 %5, %32
  %113 = or i32 %4, %68
  %114 = and i32 %47, %9
  %115 = add i32 %19, 1
  %116 = or i32 %80, %1
  %117 = and i32 %38, %55
  %118 = and i32 %54, %68
  %119 = or i32 %98, %15
  %120 = and i32 %8, %15
  %121 = xor i32 %98, -1
  %122 = or i32 %21, %121
  %123 = or i32 %54, %40
  %124 = or i32 %21, %5
  %125 = or i32 %21, %9
  %126 = xor i32 %13, %0
  %127 = xor i32 %106, -1
  %128 = or i32 %63, %127
  %129 = xor i32 %4, %16
  %130 = or i32 %5, %68
  %131 = or i32 %71, %1
  %132 = or i32 %55, %23
  %133 = and i32 %40, %43
  %134 = and i32 %13, %15
  %135 = xor i32 %82, -1
  %136 = xor i32 %134, %135
  %137 = xor i32 %58, %0
  %138 = add i32 %34, 1
  %139 = or i32 %8, %34
  %140 = or i32 %6, %0
  %141 = shl i32 %140, 1
  %142 = xor i32 %6, %0
  %143 = or i32 %55, %1
  %144 = or i32 %8, %48
  %145 = or i32 %68, %2
  %146 = xor i32 %30, -1
  %147 = add i32 %30, 1
  %148 = or i32 %34, %9
  %149 = or i32 %80, %13
  %150 = xor i32 %26, %0
  %151 = xor i32 %150, 2147483647
  %152 = xor i32 %151, %25
  %153 = xor i32 %19, %21
  %154 = and i32 %19, %68
  %155 = shl i32 %98, 1
  %156 = xor i32 %80, %98
  %157 = and i32 %47, %55
  %158 = and i32 %40, %5
  %159 = shl i32 %158, 1
  %160 = or i32 %71, %23
  %161 = and i32 %8, %32
  %162 = or i32 %9, %48
  %163 = and i32 %54, %32
  %164 = or i32 %121, %0
  %165 = xor i32 %94, %0
  %166 = or i32 %54, %23
  %167 = and i32 %19, %23
  %168 = or i32 %54, %21
  %169 = and i32 %9, %15
  %170 = add i32 %1, 1
  %171 = or i32 %4, %1
  %172 = and i32 %30, %40
  %173 = shl i32 %172, 1
  %174 = or i32 %4, %45
  %175 = xor i32 %80, -1
  %176 = and i32 %40, %175
  %177 = xor i32 %80, %58
  %178 = and i32 %30, %68
  %179 = shl i32 %178, 1
  %180 = or i32 %34, %55
  %181 = xor i32 %43, %1
  %182 = and i32 %19, %1
  %183 = add i32 %38, 1
  %184 = or i32 %134, %82
  %185 = xor i32 %48, %2
  %186 = and i32 %55, %1
  %187 = and i32 %30, %23
  %188 = and i32 %5, %88
  %189 = and i32 %58, %15
  %190 = or i32 %8, %0
  %191 = xor i32 %25, %190
  %192 = and i32 %54, %38
  %193 = xor i32 %4, %47
  %194 = or i32 %6, %34
  %195 = or i32 %48, %2
  %196 = and i32 %19, %40
  %197 = or i32 %14, %86
  %198 = or i32 %71, %68
  %199 = and i32 %8, %88
  %200 = or i32 %146, %1
  %201 = and i32 %47, %2
  %202 = or i32 %25, %150
  %203 = or i32 %40, %146
  %204 = or i32 %146, %68
  %205 = or i32 %80, %121
  %206 = and i32 %54, %1
  %207 = and i32 %58, %0
  %208 = xor i32 %38, %2
  %209 = xor i32 %146, %1
  %210 = and i32 %175, %23
  %211 = and i32 %54, %88
  %212 = xor i32 %190, 2147483647
  %213 = or i32 %212, %25
  %214 = shl i32 %213, 1
  %215 = or i32 %45, %2
  %216 = add i32 %13, 1
  %217 = or i32 %98, %0
  %218 = xor i32 %34, %2
  %219 = or i32 %14, %120
  %220 = and i32 %8, %38
  %221 = and i32 %16, %0
  %222 = or i32 %80, %23
  %223 = or i32 %55, %68
  %224 = shl i32 %223, 1
  %225 = and i32 %38, %5
  %226 = xor i32 %4, %1
  %227 = and i32 %8, %47
  %228 = xor i32 %4, %36
  %229 = or i32 %134, %221
  %230 = and i32 %43, %1
  %231 = shl i32 %230, 1
  %232 = or i32 %25, %27
  %233 = xor i32 %17, 2147483647
  %234 = xor i32 %233, %14
  %235 = shl i32 %234, 1
  %236 = and i32 %175, %68
  %237 = xor i32 %98, %0
  %238 = or i32 %55, %48
  %239 = shl i32 %238, 1
  %240 = xor i32 %14, %75
  %241 = or i32 %4, %48
  %242 = or i32 %54, %1
  %243 = or i32 %16, %15
  %244 = or i32 %121, %15
  %245 = or i32 %16, %0
  %246 = or i32 %9, %0
  %247 = and i32 %54, %47
  %248 = or i32 %54, %68
  %249 = or i32 %21, %146
  %250 = and i32 %43, %68
  %251 = or i32 %80, %68
  %252 = or i32 %40, %71
  %253 = add i32 %21, 1
  %254 = or i32 %146, %23
  %255 = shl i32 %254, 1
  %256 = and i32 %55, %88
  %257 = or i32 %9, %45
  %258 = and i32 %9, %88
  %259 = xor i32 %47, %2
  %260 = shl i32 %259, 1
  %261 = or i32 %5, %45
  %262 = shl i32 %261, 1
  %263 = and i32 %175, %1
  %264 = and i32 %94, %15
  %265 = and i32 %6, %15
  %266 = and i32 %94, %0
  %267 = mul i32 %266, -22
  %268 = and i32 %6, %0
  %269 = and i32 %121, %15
  %270 = mul i32 %269, -13
  %271 = and i32 %121, %0
  %272 = mul i32 %14, -18
  %273 = add i32 %208, %43
  %274 = add i32 %273, %130
  %275 = add i32 %274, %124
  %276 = add i32 %275, %39
  %277 = add i32 %276, %236
  %278 = add i32 %277, %207
  %279 = add i32 %278, %205
  %280 = add i32 %279, %181
  %281 = add i32 %280, %143
  %282 = add i32 %281, %118
  %283 = add i32 %282, %108
  %284 = add i32 %283, %99
  %285 = add i32 %284, %84
  %286 = add i32 %285, %240
  %287 = add i32 %286, %18
  %288 = add i32 %287, %152
  %289 = shl i32 %288, 1
  %290 = sub i32 %253, %271
  %291 = add i32 %290, %264
  %292 = add i32 %291, %192
  %293 = add i32 %292, %189
  %294 = add i32 %293, %184
  %295 = mul i32 %294, 3
  %296 = add i32 %245, %138
  %297 = add i32 %296, %187
  %298 = add i32 %297, %83
  %299 = sub i32 %298, %107
  %300 = mul i32 %299, 5
  %301 = add i32 %9, %121
  %302 = add i32 %301, %117
  %303 = add i32 %302, %134
  %304 = shl i32 %303, 2
  %305 = shl i32 %0, 1
  %306 = add i32 %305, %1
  %307 = sub i32 %170, %306
  %308 = add i32 %307, 1
  %309 = sub i32 %308, %40
  %310 = add i32 %309, %2
  %311 = add i32 %310, %183
  %312 = add i32 %311, %38
  %313 = add i32 %312, %68
  %314 = sub i32 %313, %21
  %315 = add i32 %314, %22
  %316 = sub i32 %315, %8
  %317 = sub i32 %316, %42
  %318 = sub i32 %317, %46
  %319 = add i32 %318, %19
  %320 = sub i32 %319, %53
  %321 = add i32 %320, %89
  %322 = add i32 %321, %90
  %323 = sub i32 %322, %91
  %324 = add i32 %323, %96
  %325 = sub i32 %324, %97
  %326 = add i32 %325, %102
  %327 = sub i32 %326, %104
  %328 = add i32 %327, %112
  %329 = add i32 %328, %115
  %330 = add i32 %329, %30
  %331 = add i32 %330, %36
  %332 = add i32 %331, %4
  %333 = add i32 %332, %145
  %334 = add i32 %333, %147
  %335 = sub i32 %334, %54
  %336 = sub i32 %335, %185
  %337 = add i32 %336, %188
  %338 = sub i32 %337, %195
  %339 = add i32 %338, %201
  %340 = sub i32 %339, %215
  %341 = add i32 %340, %216
  %342 = sub i32 %341, %218
  %343 = sub i32 %342, %225
  %344 = add i32 %343, %13
  %345 = add i32 %344, %80
  %346 = add i32 %345, %20
  %347 = add i32 %346, %31
  %348 = sub i32 %347, %33
  %349 = sub i32 %348, %35
  %350 = add i32 %349, %37
  %351 = sub i32 %350, %41
  %352 = sub i32 %351, %44
  %353 = sub i32 %352, %50
  %354 = sub i32 %353, %51
  %355 = sub i32 %354, %52
  %356 = sub i32 %355, %56
  %357 = add i32 %356, %57
  %358 = add i32 %357, %59
  %359 = sub i32 %358, %62
  %360 = add i32 %359, %69
  %361 = add i32 %360, %70
  %362 = sub i32 %361, %72
  %363 = sub i32 %362, %75
  %364 = sub i32 %363, %79
  %365 = add i32 %364, %81
  %366 = add i32 %365, %82
  %367 = sub i32 %366, %85
  %368 = add i32 %367, %95
  %369 = add i32 %368, %100
  %370 = add i32 %369, %101
  %371 = sub i32 %370, %103
  %372 = add i32 %371, %105
  %373 = add i32 %372, %110
  %374 = add i32 %373, %111
  %375 = sub i32 %374, %113
  %376 = add i32 %375, %114
  %377 = sub i32 %376, %116
  %378 = add i32 %377, %119
  %379 = sub i32 %378, %120
  %380 = add i32 %379, %122
  %381 = add i32 %380, %123
  %382 = add i32 %381, %125
  %383 = add i32 %382, %126
  %384 = add i32 %383, %129
  %385 = add i32 %384, %131
  %386 = add i32 %385, %132
  %387 = add i32 %386, %133
  %388 = add i32 %387, %137
  %389 = add i32 %388, %139
  %390 = sub i32 %389, %142
  %391 = sub i32 %390, %144
  %392 = add i32 %391, %148
  %393 = sub i32 %392, %149
  %394 = add i32 %393, %153
  %395 = sub i32 %394, %154
  %396 = sub i32 %395, %155
  %397 = add i32 %396, %156
  %398 = sub i32 %397, %157
  %399 = sub i32 %398, %159
  %400 = sub i32 %399, %160
  %401 = add i32 %400, %161
  %402 = add i32 %401, %162
  %403 = sub i32 %402, %163
  %404 = sub i32 %403, %164
  %405 = add i32 %404, %165
  %406 = sub i32 %405, %166
  %407 = add i32 %406, %167
  %408 = sub i32 %407, %168
  %409 = sub i32 %408, %169
  %410 = add i32 %409, %106
  %411 = add i32 %410, %171
  %412 = sub i32 %411, %174
  %413 = add i32 %412, %176
  %414 = sub i32 %413, %177
  %415 = add i32 %414, %180
  %416 = add i32 %415, %182
  %417 = add i32 %416, %186
  %418 = add i32 %417, %193
  %419 = sub i32 %418, %194
  %420 = add i32 %419, %196
  %421 = add i32 %420, %198
  %422 = add i32 %421, %199
  %423 = sub i32 %422, %200
  %424 = sub i32 %423, %203
  %425 = sub i32 %424, %204
  %426 = sub i32 %425, %17
  %427 = add i32 %426, %206
  %428 = add i32 %427, %209
  %429 = sub i32 %428, %210
  %430 = add i32 %429, %211
  %431 = add i32 %430, %217
  %432 = add i32 %431, %220
  %433 = sub i32 %432, %221
  %434 = add i32 %433, %222
  %435 = sub i32 %434, %226
  %436 = add i32 %435, %227
  %437 = sub i32 %436, %228
  %438 = sub i32 %437, %237
  %439 = sub i32 %438, %241
  %440 = add i32 %439, %242
  %441 = sub i32 %440, %243
  %442 = add i32 %441, %244
  %443 = add i32 %442, %246
  %444 = sub i32 %443, %247
  %445 = sub i32 %444, %248
  %446 = add i32 %445, %249
  %447 = sub i32 %446, %250
  %448 = add i32 %447, %251
  %449 = sub i32 %448, %252
  %450 = add i32 %449, %256
  %451 = add i32 %450, %257
  %452 = sub i32 %451, %258
  %453 = sub i32 %452, %260
  %454 = sub i32 %453, %262
  %455 = sub i32 %454, %263
  %456 = add i32 %455, %265
  %457 = sub i32 %456, %268
  %458 = add i32 %457, %29
  %459 = sub i32 %458, %61
  %460 = sub i32 %459, %74
  %461 = add i32 %460, %78
  %462 = add i32 %461, %87
  %463 = add i32 %462, %109
  %464 = sub i32 %463, %128
  %465 = add i32 %464, %136
  %466 = sub i32 %465, %141
  %467 = sub i32 %466, %173
  %468 = sub i32 %467, %179
  %469 = sub i32 %468, %191
  %470 = add i32 %469, %197
  %471 = sub i32 %470, %202
  %472 = add i32 %471, %219
  %473 = sub i32 %472, %224
  %474 = sub i32 %473, %229
  %475 = sub i32 %474, %231
  %476 = sub i32 %475, %232
  %477 = sub i32 %476, %239
  %478 = sub i32 %477, %255
  %479 = add i32 %478, %267
  %480 = add i32 %479, %270
  %481 = add i32 %480, %272
  %482 = sub i32 %481, %93
  %483 = sub i32 %482, %67
  %484 = sub i32 %483, %214
  %485 = sub i32 %484, %235
  %486 = add i32 %485, %304
  %487 = add i32 %486, %300
  %488 = add i32 %487, %295
  %489 = add i32 %488, %289
  %490 = icmp eq i32 %12, %489
  %491 = select i1 %490, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %492 = tail call i32 @puts(i8* nonnull dereferenceable(1) %491)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
