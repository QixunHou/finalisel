digraph "DFG for'main' function" {
	Node0x1104be8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1104c68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1104cf8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1105158[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1105238[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1105358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1105590[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1105648[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11065b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1106c40[shape=record, label="  %8 = shl i32 %6, 1"];
	Node0x1106cb0[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x1106d20[shape=record, label="  %10 = add i32 %9, %8"];
	Node0x1106d90[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1106e00[shape=record, label="  %12 = and i32 %6, %11"];
	Node0x1106e70[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x1106ee0[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x1106f50[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x1106fc0[shape=record, label="  %16 = or i32 %6, %11"];
	Node0x1107030[shape=record, label="  %17 = or i32 %7, %6"];
	Node0x11070a0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x1107110[shape=record, label="  %19 = mul i32 %18, 3"];
	Node0x1107180[shape=record, label="  %20 = shl i32 %14, 2"];
	Node0x11071f0[shape=record, label="  %21 = add i32 %15, %12"];
	Node0x1107260[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x11072d0[shape=record, label="  %23 = sub i32 1, %14"];
	Node0x1107340[shape=record, label="  %24 = add i32 %23, %13"];
	Node0x11073b0[shape=record, label="  %25 = sub i32 %24, %16"];
	Node0x1107420[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x1107490[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x1107500[shape=record, label="  %28 = add i32 %27, %22"];
	Node0x1107570[shape=record, label="  %29 = icmp eq i32 %10, %28"];
	Node0x10a59d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1107600[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x1107858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11079b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1107a78[shape=record, label="  ret i32 0"];
	Node0x1104be8 -> Node0x1104c68;
	Node0x1104c68 -> Node0x1104cf8;
	Node0x1104cf8 -> Node0x1105158;
	Node0x1105158 -> Node0x1105238;
	Node0x1105238 -> Node0x1105358;
	Node0x1105358 -> Node0x1105590;
	Node0x1105590 -> Node0x1105648;
	Node0x1105648 -> Node0x11065b8;
	Node0x11065b8 -> Node0x1106c40;
	Node0x1106c40 -> Node0x1106cb0;
	Node0x1106cb0 -> Node0x1106d20;
	Node0x1106d20 -> Node0x1106d90;
	Node0x1106d90 -> Node0x1106e00;
	Node0x1106e00 -> Node0x1106e70;
	Node0x1106e70 -> Node0x1106ee0;
	Node0x1106ee0 -> Node0x1106f50;
	Node0x1106f50 -> Node0x1106fc0;
	Node0x1106fc0 -> Node0x1107030;
	Node0x1107030 -> Node0x11070a0;
	Node0x11070a0 -> Node0x1107110;
	Node0x1107110 -> Node0x1107180;
	Node0x1107180 -> Node0x11071f0;
	Node0x11071f0 -> Node0x1107260;
	Node0x1107260 -> Node0x11072d0;
	Node0x11072d0 -> Node0x1107340;
	Node0x1107340 -> Node0x11073b0;
	Node0x11073b0 -> Node0x1107420;
	Node0x1107420 -> Node0x1107490;
	Node0x1107490 -> Node0x1107500;
	Node0x1107500 -> Node0x1107570;
	Node0x1107570 -> Node0x10a59d8;
	Node0x10a59d8 -> Node0x1107600;
	Node0x1107600 -> Node0x1107858;
	Node0x1107858 -> Node0x11079b8;
	Node0x11079b8 -> Node0x1107a78;
edge [color=red]
	Node0x1104be8 -> Node0x1104cf8;
	Node0x1104cf8 -> Node0x1105158;
	Node0x1104c68 -> Node0x1105238;
	Node0x1105238 -> Node0x1105358;
	Node0x1104be8 -> Node0x1105590;
	Node0x1104c68 -> Node0x1105590;
	Node0x1104be8 -> Node0x1105648;
	Node0x1104c68 -> Node0x11065b8;
	Node0x1105648 -> Node0x1106c40;
	Node0x1106c40 -> Node0x1106cb0;
	Node0x1106cb0 -> Node0x1106d20;
	Node0x1106c40 -> Node0x1106d20;
	Node0x11065b8 -> Node0x1106d90;
	Node0x1105648 -> Node0x1106e00;
	Node0x1106d90 -> Node0x1106e00;
	Node0x1106e00 -> Node0x1106e70;
	Node0x11065b8 -> Node0x1106ee0;
	Node0x1105648 -> Node0x1106ee0;
	Node0x11065b8 -> Node0x1106f50;
	Node0x1105648 -> Node0x1106f50;
	Node0x1105648 -> Node0x1106fc0;
	Node0x1106d90 -> Node0x1106fc0;
	Node0x11065b8 -> Node0x1107030;
	Node0x1105648 -> Node0x1107030;
	Node0x1107030 -> Node0x11070a0;
	Node0x11070a0 -> Node0x1107110;
	Node0x1106ee0 -> Node0x1107180;
	Node0x1106f50 -> Node0x11071f0;
	Node0x1106e00 -> Node0x11071f0;
	Node0x11071f0 -> Node0x1107260;
	Node0x1106ee0 -> Node0x11072d0;
	Node0x11072d0 -> Node0x1107340;
	Node0x1106e70 -> Node0x1107340;
	Node0x1107340 -> Node0x11073b0;
	Node0x1106fc0 -> Node0x11073b0;
	Node0x11073b0 -> Node0x1107420;
	Node0x1107110 -> Node0x1107420;
	Node0x1107420 -> Node0x1107490;
	Node0x1107180 -> Node0x1107490;
	Node0x1107490 -> Node0x1107500;
	Node0x1107260 -> Node0x1107500;
	Node0x1106d20 -> Node0x1107570;
	Node0x1107500 -> Node0x1107570;
	Node0x1107570 -> Node0x10a59d8;
	Node0x10a59d8 -> Node0x1107600;
	Node0x1105238 -> Node0x1107858;
	Node0x1104cf8 -> Node0x11079b8;
}
