digraph "DFG for'main' function" {
	Node0x20c5d18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x20c5d98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x20c5e28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x20c5e88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x20c5f38[shape=record, label="  %5 = alloca i32, align 4"];
	Node0x20c5f98[shape=record, label="  %6 = alloca i32, align 4"];
	Node0x20c5ff8[shape=record, label="  %7 = bitcast i32* %1 to i8*"];
	Node0x20c8b18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20c8bf8[shape=record, label="  %8 = bitcast i32* %2 to i8*"];
	Node0x20c8cf8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20c8d68[shape=record, label="  %9 = bitcast i32* %3 to i8*"];
	Node0x20c8e18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5"];
	Node0x20c8ed8[shape=record, label="  %10 = bitcast i32* %4 to i8*"];
	Node0x20c8f88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5"];
	Node0x20c9048[shape=record, label="  %11 = bitcast i32* %5 to i8*"];
	Node0x20c90f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5"];
	Node0x20c91b8[shape=record, label="  %12 = bitcast i32* %6 to i8*"];
	Node0x20c9268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5"];
	Node0x2067700[shape=record, label="  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)"];
	Node0x20c9558[shape=record, label="  %14 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20ca4c8[shape=record, label="  %15 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x20cab38[shape=record, label="  %16 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x20caca8[shape=record, label="  %17 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x20cad08[shape=record, label="  %18 = load i32, i32* %5, align 4, !tbaa !2"];
	Node0x20cad68[shape=record, label="  %19 = load i32, i32* %6, align 4, !tbaa !2"];
	Node0x20caef8[shape=record, label="  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)"];
	Node0x20cb078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5"];
	Node0x20cb1d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5"];
	Node0x20cb2e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5"];
	Node0x20cb3f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5"];
	Node0x20cb508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20cb618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20cb6d8[shape=record, label="  ret i32 0"];
	Node0x20c5d18 -> Node0x20c5d98;
	Node0x20c5d98 -> Node0x20c5e28;
	Node0x20c5e28 -> Node0x20c5e88;
	Node0x20c5e88 -> Node0x20c5f38;
	Node0x20c5f38 -> Node0x20c5f98;
	Node0x20c5f98 -> Node0x20c5ff8;
	Node0x20c5ff8 -> Node0x20c8b18;
	Node0x20c8b18 -> Node0x20c8bf8;
	Node0x20c8bf8 -> Node0x20c8cf8;
	Node0x20c8cf8 -> Node0x20c8d68;
	Node0x20c8d68 -> Node0x20c8e18;
	Node0x20c8e18 -> Node0x20c8ed8;
	Node0x20c8ed8 -> Node0x20c8f88;
	Node0x20c8f88 -> Node0x20c9048;
	Node0x20c9048 -> Node0x20c90f8;
	Node0x20c90f8 -> Node0x20c91b8;
	Node0x20c91b8 -> Node0x20c9268;
	Node0x20c9268 -> Node0x2067700;
	Node0x2067700 -> Node0x20c9558;
	Node0x20c9558 -> Node0x20ca4c8;
	Node0x20ca4c8 -> Node0x20cab38;
	Node0x20cab38 -> Node0x20caca8;
	Node0x20caca8 -> Node0x20cad08;
	Node0x20cad08 -> Node0x20cad68;
	Node0x20cad68 -> Node0x20caef8;
	Node0x20caef8 -> Node0x20cb078;
	Node0x20cb078 -> Node0x20cb1d8;
	Node0x20cb1d8 -> Node0x20cb2e8;
	Node0x20cb2e8 -> Node0x20cb3f8;
	Node0x20cb3f8 -> Node0x20cb508;
	Node0x20cb508 -> Node0x20cb618;
	Node0x20cb618 -> Node0x20cb6d8;
edge [color=red]
	Node0x20c5d18 -> Node0x20c5ff8;
	Node0x20c5ff8 -> Node0x20c8b18;
	Node0x20c5d98 -> Node0x20c8bf8;
	Node0x20c8bf8 -> Node0x20c8cf8;
	Node0x20c5e28 -> Node0x20c8d68;
	Node0x20c8d68 -> Node0x20c8e18;
	Node0x20c5e88 -> Node0x20c8ed8;
	Node0x20c8ed8 -> Node0x20c8f88;
	Node0x20c5f38 -> Node0x20c9048;
	Node0x20c9048 -> Node0x20c90f8;
	Node0x20c5f98 -> Node0x20c91b8;
	Node0x20c91b8 -> Node0x20c9268;
	Node0x20c5d18 -> Node0x2067700;
	Node0x20c5d98 -> Node0x2067700;
	Node0x20c5e28 -> Node0x2067700;
	Node0x20c5e88 -> Node0x2067700;
	Node0x20c5f38 -> Node0x2067700;
	Node0x20c5f98 -> Node0x2067700;
	Node0x20c5d18 -> Node0x20c9558;
	Node0x20c5d98 -> Node0x20ca4c8;
	Node0x20c5e28 -> Node0x20cab38;
	Node0x20c5e88 -> Node0x20caca8;
	Node0x20c5f38 -> Node0x20cad08;
	Node0x20c5f98 -> Node0x20cad68;
	Node0x20c9558 -> Node0x20caef8;
	Node0x20ca4c8 -> Node0x20caef8;
	Node0x20cab38 -> Node0x20caef8;
	Node0x20caca8 -> Node0x20caef8;
	Node0x20cad08 -> Node0x20caef8;
	Node0x20cad68 -> Node0x20caef8;
	Node0x20c91b8 -> Node0x20cb078;
	Node0x20c9048 -> Node0x20cb1d8;
	Node0x20c8ed8 -> Node0x20cb2e8;
	Node0x20c8d68 -> Node0x20cb3f8;
	Node0x20c8bf8 -> Node0x20cb508;
	Node0x20c5ff8 -> Node0x20cb618;
}
