digraph "DFG for'main' function" {
	Node0x23dc778[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x23dc7f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x23dc888[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x23dc8e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x23dcd68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23de3a8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x23de488[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23de548[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x23de5f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23de858[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x23de918[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23df888[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x23dfef8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x23dfff0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x23e01f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23e0358[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23e0468[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x23e0528[shape=record, label="  ret i32 0"];
	Node0x23dc778 -> Node0x23dc7f8;
	Node0x23dc7f8 -> Node0x23dc888;
	Node0x23dc888 -> Node0x23dc8e8;
	Node0x23dc8e8 -> Node0x23dcd68;
	Node0x23dcd68 -> Node0x23de3a8;
	Node0x23de3a8 -> Node0x23de488;
	Node0x23de488 -> Node0x23de548;
	Node0x23de548 -> Node0x23de5f8;
	Node0x23de5f8 -> Node0x23de858;
	Node0x23de858 -> Node0x23de918;
	Node0x23de918 -> Node0x23df888;
	Node0x23df888 -> Node0x23dfef8;
	Node0x23dfef8 -> Node0x23dfff0;
	Node0x23dfff0 -> Node0x23e01f8;
	Node0x23e01f8 -> Node0x23e0358;
	Node0x23e0358 -> Node0x23e0468;
	Node0x23e0468 -> Node0x23e0528;
edge [color=red]
	Node0x23dc778 -> Node0x23dc8e8;
	Node0x23dc8e8 -> Node0x23dcd68;
	Node0x23dc7f8 -> Node0x23de3a8;
	Node0x23de3a8 -> Node0x23de488;
	Node0x23dc888 -> Node0x23de548;
	Node0x23de548 -> Node0x23de5f8;
	Node0x23dc778 -> Node0x23de858;
	Node0x23dc7f8 -> Node0x23de858;
	Node0x23dc888 -> Node0x23de858;
	Node0x23dc778 -> Node0x23de918;
	Node0x23dc7f8 -> Node0x23df888;
	Node0x23dc888 -> Node0x23dfef8;
	Node0x23de918 -> Node0x23dfff0;
	Node0x23df888 -> Node0x23dfff0;
	Node0x23dfef8 -> Node0x23dfff0;
	Node0x23de548 -> Node0x23e01f8;
	Node0x23de3a8 -> Node0x23e0358;
	Node0x23dc8e8 -> Node0x23e0468;
}
