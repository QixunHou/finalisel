digraph "DFG for'main' function" {
	Node0x2458bd8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2458c58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2458ce8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2458d48[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x2458df8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x2459228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2459308[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x2459408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x24594c8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x2459578[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2459638[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x24596e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2453780[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x24598e8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x245a858[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x245aec8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x245af28[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x245b038[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x245b298[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x245b3f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x245b508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x245b618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x245b6d8[shape=record, label="  ret i32 0"];
	Node0x2458bd8 -> Node0x2458c58;
	Node0x2458c58 -> Node0x2458ce8;
	Node0x2458ce8 -> Node0x2458d48;
	Node0x2458d48 -> Node0x2458df8;
	Node0x2458df8 -> Node0x2459228;
	Node0x2459228 -> Node0x2459308;
	Node0x2459308 -> Node0x2459408;
	Node0x2459408 -> Node0x24594c8;
	Node0x24594c8 -> Node0x2459578;
	Node0x2459578 -> Node0x2459638;
	Node0x2459638 -> Node0x24596e8;
	Node0x24596e8 -> Node0x2453780;
	Node0x2453780 -> Node0x24598e8;
	Node0x24598e8 -> Node0x245a858;
	Node0x245a858 -> Node0x245aec8;
	Node0x245aec8 -> Node0x245af28;
	Node0x245af28 -> Node0x245b038;
	Node0x245b038 -> Node0x245b298;
	Node0x245b298 -> Node0x245b3f8;
	Node0x245b3f8 -> Node0x245b508;
	Node0x245b508 -> Node0x245b618;
	Node0x245b618 -> Node0x245b6d8;
edge [color=red]
	Node0x2458bd8 -> Node0x2458df8;
	Node0x2458df8 -> Node0x2459228;
	Node0x2458c58 -> Node0x2459308;
	Node0x2459308 -> Node0x2459408;
	Node0x2458ce8 -> Node0x24594c8;
	Node0x24594c8 -> Node0x2459578;
	Node0x2458d48 -> Node0x2459638;
	Node0x2459638 -> Node0x24596e8;
	Node0x2458bd8 -> Node0x2453780;
	Node0x2458c58 -> Node0x2453780;
	Node0x2458ce8 -> Node0x2453780;
	Node0x2458d48 -> Node0x2453780;
	Node0x2458bd8 -> Node0x24598e8;
	Node0x2458c58 -> Node0x245a858;
	Node0x2458ce8 -> Node0x245aec8;
	Node0x2458d48 -> Node0x245af28;
	Node0x24598e8 -> Node0x245b038;
	Node0x245a858 -> Node0x245b038;
	Node0x245aec8 -> Node0x245b038;
	Node0x245af28 -> Node0x245b038;
	Node0x2459638 -> Node0x245b298;
	Node0x24594c8 -> Node0x245b3f8;
	Node0x2459308 -> Node0x245b508;
	Node0x2458df8 -> Node0x245b618;
}
