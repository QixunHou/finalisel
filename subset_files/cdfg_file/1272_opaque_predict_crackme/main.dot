digraph "DFG for'main' function" {
	Node0x11d9cf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11d9d78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11d9e08[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x11da268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x11da348[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x11da468[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11da6a0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x11da758[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11db6c8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11dbd50[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x11dbdc0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x11dbe30[shape=record, label="  %10 = add i32 %7, 1"];
	Node0x11dbea0[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x11dbf10[shape=record, label="  %12 = and i32 %6, %9"];
	Node0x11dbf80[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x11dbff0[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x11dc060[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x11dc0d0[shape=record, label="  %16 = xor i32 %11, -1"];
	Node0x11dc140[shape=record, label="  %17 = mul i32 %16, 3"];
	Node0x11dc1b0[shape=record, label="  %18 = xor i32 %6, -1"];
	Node0x11dc220[shape=record, label="  %19 = and i32 %7, %18"];
	Node0x11dc290[shape=record, label="  %20 = shl i32 %12, 1"];
	Node0x11dc300[shape=record, label="  %21 = shl i32 %6, 1"];
	Node0x11dc370[shape=record, label="  %22 = add i32 %10, %21"];
	Node0x11dc3e0[shape=record, label="  %23 = add i32 %22, %8"];
	Node0x11dc450[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x11dc4c0[shape=record, label="  %25 = add i32 %24, %12"];
	Node0x11dc530[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x11dc5a0[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x11dc610[shape=record, label="  %28 = sub i32 %27, %20"];
	Node0x11dc680[shape=record, label="  %29 = sub i32 %28, %14"];
	Node0x11dc6f0[shape=record, label="  %30 = sub i32 %29, %15"];
	Node0x11dc760[shape=record, label="  %31 = icmp eq i32 %30, %7"];
	Node0x117a9d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x11dca00[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0x11dcc58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11dcdb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x11dce78[shape=record, label="  ret i32 0"];
	Node0x11d9cf8 -> Node0x11d9d78;
	Node0x11d9d78 -> Node0x11d9e08;
	Node0x11d9e08 -> Node0x11da268;
	Node0x11da268 -> Node0x11da348;
	Node0x11da348 -> Node0x11da468;
	Node0x11da468 -> Node0x11da6a0;
	Node0x11da6a0 -> Node0x11da758;
	Node0x11da758 -> Node0x11db6c8;
	Node0x11db6c8 -> Node0x11dbd50;
	Node0x11dbd50 -> Node0x11dbdc0;
	Node0x11dbdc0 -> Node0x11dbe30;
	Node0x11dbe30 -> Node0x11dbea0;
	Node0x11dbea0 -> Node0x11dbf10;
	Node0x11dbf10 -> Node0x11dbf80;
	Node0x11dbf80 -> Node0x11dbff0;
	Node0x11dbff0 -> Node0x11dc060;
	Node0x11dc060 -> Node0x11dc0d0;
	Node0x11dc0d0 -> Node0x11dc140;
	Node0x11dc140 -> Node0x11dc1b0;
	Node0x11dc1b0 -> Node0x11dc220;
	Node0x11dc220 -> Node0x11dc290;
	Node0x11dc290 -> Node0x11dc300;
	Node0x11dc300 -> Node0x11dc370;
	Node0x11dc370 -> Node0x11dc3e0;
	Node0x11dc3e0 -> Node0x11dc450;
	Node0x11dc450 -> Node0x11dc4c0;
	Node0x11dc4c0 -> Node0x11dc530;
	Node0x11dc530 -> Node0x11dc5a0;
	Node0x11dc5a0 -> Node0x11dc610;
	Node0x11dc610 -> Node0x11dc680;
	Node0x11dc680 -> Node0x11dc6f0;
	Node0x11dc6f0 -> Node0x11dc760;
	Node0x11dc760 -> Node0x117a9d8;
	Node0x117a9d8 -> Node0x11dca00;
	Node0x11dca00 -> Node0x11dcc58;
	Node0x11dcc58 -> Node0x11dcdb8;
	Node0x11dcdb8 -> Node0x11dce78;
edge [color=red]
	Node0x11d9cf8 -> Node0x11d9e08;
	Node0x11d9e08 -> Node0x11da268;
	Node0x11d9d78 -> Node0x11da348;
	Node0x11da348 -> Node0x11da468;
	Node0x11d9cf8 -> Node0x11da6a0;
	Node0x11d9d78 -> Node0x11da6a0;
	Node0x11d9cf8 -> Node0x11da758;
	Node0x11d9d78 -> Node0x11db6c8;
	Node0x11db6c8 -> Node0x11dbd50;
	Node0x11da758 -> Node0x11dbd50;
	Node0x11db6c8 -> Node0x11dbdc0;
	Node0x11db6c8 -> Node0x11dbe30;
	Node0x11db6c8 -> Node0x11dbea0;
	Node0x11da758 -> Node0x11dbea0;
	Node0x11da758 -> Node0x11dbf10;
	Node0x11dbdc0 -> Node0x11dbf10;
	Node0x11db6c8 -> Node0x11dbf80;
	Node0x11da758 -> Node0x11dbf80;
	Node0x11dbf80 -> Node0x11dbff0;
	Node0x11dbff0 -> Node0x11dc060;
	Node0x11dbea0 -> Node0x11dc0d0;
	Node0x11dc0d0 -> Node0x11dc140;
	Node0x11da758 -> Node0x11dc1b0;
	Node0x11db6c8 -> Node0x11dc220;
	Node0x11dc1b0 -> Node0x11dc220;
	Node0x11dbf10 -> Node0x11dc290;
	Node0x11da758 -> Node0x11dc300;
	Node0x11dbe30 -> Node0x11dc370;
	Node0x11dc300 -> Node0x11dc370;
	Node0x11dc370 -> Node0x11dc3e0;
	Node0x11dbd50 -> Node0x11dc3e0;
	Node0x11dc3e0 -> Node0x11dc450;
	Node0x11dbea0 -> Node0x11dc450;
	Node0x11dc450 -> Node0x11dc4c0;
	Node0x11dbf10 -> Node0x11dc4c0;
	Node0x11dc4c0 -> Node0x11dc530;
	Node0x11dc220 -> Node0x11dc530;
	Node0x11dc530 -> Node0x11dc5a0;
	Node0x11dc140 -> Node0x11dc5a0;
	Node0x11dc5a0 -> Node0x11dc610;
	Node0x11dc290 -> Node0x11dc610;
	Node0x11dc610 -> Node0x11dc680;
	Node0x11dbff0 -> Node0x11dc680;
	Node0x11dc680 -> Node0x11dc6f0;
	Node0x11dc060 -> Node0x11dc6f0;
	Node0x11dc6f0 -> Node0x11dc760;
	Node0x11db6c8 -> Node0x11dc760;
	Node0x11dc760 -> Node0x117a9d8;
	Node0x117a9d8 -> Node0x11dca00;
	Node0x11da348 -> Node0x11dcc58;
	Node0x11d9e08 -> Node0x11dcdb8;
}
