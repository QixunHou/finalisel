digraph "DFG for'main' function" {
	Node0x230c598[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x230c618[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x230c6a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x230c708[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x230cb88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x230cc68[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x230cd68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x230ce28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x230ced8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x230d138[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x230d1f8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x230d358[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x230d3b8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x230f980[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x230fb88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x230fce8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x230fdf8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x230feb8[shape=record, label="  ret i32 0"];
	Node0x230c598 -> Node0x230c618;
	Node0x230c618 -> Node0x230c6a8;
	Node0x230c6a8 -> Node0x230c708;
	Node0x230c708 -> Node0x230cb88;
	Node0x230cb88 -> Node0x230cc68;
	Node0x230cc68 -> Node0x230cd68;
	Node0x230cd68 -> Node0x230ce28;
	Node0x230ce28 -> Node0x230ced8;
	Node0x230ced8 -> Node0x230d138;
	Node0x230d138 -> Node0x230d1f8;
	Node0x230d1f8 -> Node0x230d358;
	Node0x230d358 -> Node0x230d3b8;
	Node0x230d3b8 -> Node0x230f980;
	Node0x230f980 -> Node0x230fb88;
	Node0x230fb88 -> Node0x230fce8;
	Node0x230fce8 -> Node0x230fdf8;
	Node0x230fdf8 -> Node0x230feb8;
edge [color=red]
	Node0x230c598 -> Node0x230c708;
	Node0x230c708 -> Node0x230cb88;
	Node0x230c618 -> Node0x230cc68;
	Node0x230cc68 -> Node0x230cd68;
	Node0x230c6a8 -> Node0x230ce28;
	Node0x230ce28 -> Node0x230ced8;
	Node0x230c598 -> Node0x230d138;
	Node0x230c618 -> Node0x230d138;
	Node0x230c6a8 -> Node0x230d138;
	Node0x230c598 -> Node0x230d1f8;
	Node0x230c618 -> Node0x230d358;
	Node0x230c6a8 -> Node0x230d3b8;
	Node0x230d1f8 -> Node0x230f980;
	Node0x230d358 -> Node0x230f980;
	Node0x230d3b8 -> Node0x230f980;
	Node0x230ce28 -> Node0x230fb88;
	Node0x230cc68 -> Node0x230fce8;
	Node0x230c708 -> Node0x230fdf8;
}
