digraph "DFG for'main' function" {
	Node0x65bc88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x65bd38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x65bdc8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x65c228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x65c308[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x65c428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x65c660[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x65c718[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x65d688[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x65dd10[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x65dd80[shape=record, label="  %9 = xor i32 %6, -1"];
	Node0x65ddf0[shape=record, label="  %10 = or i32 %7, %9"];
	Node0x65de60[shape=record, label="  %11 = or i32 %6, %8"];
	Node0x65ded0[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0x65df40[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x65dfb0[shape=record, label="  %14 = shl i32 %13, 2"];
	Node0x65e020[shape=record, label="  %15 = xor i32 %14, -4"];
	Node0x65e090[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x65e100[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x65e170[shape=record, label="  %18 = xor i32 %11, -1"];
	Node0x65e1e0[shape=record, label="  %19 = mul i32 %18, 6"];
	Node0x65e250[shape=record, label="  %20 = add i32 %6, %17"];
	Node0x65e2c0[shape=record, label="  %21 = mul i32 %20, 3"];
	Node0x65e330[shape=record, label="  %22 = add i32 %7, %6"];
	Node0x65e3a0[shape=record, label="  %23 = sub i32 %8, %22"];
	Node0x65e410[shape=record, label="  %24 = add i32 %23, %12"];
	Node0x65e480[shape=record, label="  %25 = add i32 %24, %11"];
	Node0x65e4f0[shape=record, label="  %26 = sub i32 %25, %16"];
	Node0x65e560[shape=record, label="  %27 = add i32 %26, %19"];
	Node0x65e5d0[shape=record, label="  %28 = sub i32 %27, %15"];
	Node0x65e640[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x65e6b0[shape=record, label="  %30 = icmp eq i32 %29, %10"];
	Node0x5fc9d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x65e740[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x65eba8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x65ed08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x65edc8[shape=record, label="  ret i32 0"];
	Node0x65bc88 -> Node0x65bd38;
	Node0x65bd38 -> Node0x65bdc8;
	Node0x65bdc8 -> Node0x65c228;
	Node0x65c228 -> Node0x65c308;
	Node0x65c308 -> Node0x65c428;
	Node0x65c428 -> Node0x65c660;
	Node0x65c660 -> Node0x65c718;
	Node0x65c718 -> Node0x65d688;
	Node0x65d688 -> Node0x65dd10;
	Node0x65dd10 -> Node0x65dd80;
	Node0x65dd80 -> Node0x65ddf0;
	Node0x65ddf0 -> Node0x65de60;
	Node0x65de60 -> Node0x65ded0;
	Node0x65ded0 -> Node0x65df40;
	Node0x65df40 -> Node0x65dfb0;
	Node0x65dfb0 -> Node0x65e020;
	Node0x65e020 -> Node0x65e090;
	Node0x65e090 -> Node0x65e100;
	Node0x65e100 -> Node0x65e170;
	Node0x65e170 -> Node0x65e1e0;
	Node0x65e1e0 -> Node0x65e250;
	Node0x65e250 -> Node0x65e2c0;
	Node0x65e2c0 -> Node0x65e330;
	Node0x65e330 -> Node0x65e3a0;
	Node0x65e3a0 -> Node0x65e410;
	Node0x65e410 -> Node0x65e480;
	Node0x65e480 -> Node0x65e4f0;
	Node0x65e4f0 -> Node0x65e560;
	Node0x65e560 -> Node0x65e5d0;
	Node0x65e5d0 -> Node0x65e640;
	Node0x65e640 -> Node0x65e6b0;
	Node0x65e6b0 -> Node0x5fc9d8;
	Node0x5fc9d8 -> Node0x65e740;
	Node0x65e740 -> Node0x65eba8;
	Node0x65eba8 -> Node0x65ed08;
	Node0x65ed08 -> Node0x65edc8;
edge [color=red]
	Node0x65bc88 -> Node0x65bdc8;
	Node0x65bdc8 -> Node0x65c228;
	Node0x65bd38 -> Node0x65c308;
	Node0x65c308 -> Node0x65c428;
	Node0x65bc88 -> Node0x65c660;
	Node0x65bd38 -> Node0x65c660;
	Node0x65bc88 -> Node0x65c718;
	Node0x65bd38 -> Node0x65d688;
	Node0x65d688 -> Node0x65dd10;
	Node0x65c718 -> Node0x65dd80;
	Node0x65d688 -> Node0x65ddf0;
	Node0x65dd80 -> Node0x65ddf0;
	Node0x65c718 -> Node0x65de60;
	Node0x65dd10 -> Node0x65de60;
	Node0x65d688 -> Node0x65ded0;
	Node0x65c718 -> Node0x65ded0;
	Node0x65d688 -> Node0x65df40;
	Node0x65c718 -> Node0x65df40;
	Node0x65df40 -> Node0x65dfb0;
	Node0x65dfb0 -> Node0x65e020;
	Node0x65d688 -> Node0x65e090;
	Node0x65c718 -> Node0x65e090;
	Node0x65e090 -> Node0x65e100;
	Node0x65de60 -> Node0x65e170;
	Node0x65e170 -> Node0x65e1e0;
	Node0x65c718 -> Node0x65e250;
	Node0x65e100 -> Node0x65e250;
	Node0x65e250 -> Node0x65e2c0;
	Node0x65d688 -> Node0x65e330;
	Node0x65c718 -> Node0x65e330;
	Node0x65dd10 -> Node0x65e3a0;
	Node0x65e330 -> Node0x65e3a0;
	Node0x65e3a0 -> Node0x65e410;
	Node0x65ded0 -> Node0x65e410;
	Node0x65e410 -> Node0x65e480;
	Node0x65de60 -> Node0x65e480;
	Node0x65e480 -> Node0x65e4f0;
	Node0x65e090 -> Node0x65e4f0;
	Node0x65e4f0 -> Node0x65e560;
	Node0x65e1e0 -> Node0x65e560;
	Node0x65e560 -> Node0x65e5d0;
	Node0x65e020 -> Node0x65e5d0;
	Node0x65e5d0 -> Node0x65e640;
	Node0x65e2c0 -> Node0x65e640;
	Node0x65e640 -> Node0x65e6b0;
	Node0x65ddf0 -> Node0x65e6b0;
	Node0x65e6b0 -> Node0x5fc9d8;
	Node0x5fc9d8 -> Node0x65e740;
	Node0x65c308 -> Node0x65eba8;
	Node0x65bdc8 -> Node0x65ed08;
}
