digraph "DFG for'main' function" {
	Node0xfa0408[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xfa0488[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xfa0518[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xfa0978[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xfa0a58[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xfa0b78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfa0db0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xfa0e68[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xfa1dd8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xfa2460[shape=record, label="  %8 = mul i32 %7, -3"];
	Node0xfa24d0[shape=record, label="  %9 = sub i32 %8, %6"];
	Node0xfa2540[shape=record, label="  %10 = and i32 %7, %6"];
	Node0xfa25b0[shape=record, label="  %11 = mul i32 %10, -2"];
	Node0xfa2620[shape=record, label="  %12 = or i32 %7, %6"];
	Node0xfa2690[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0xfa2700[shape=record, label="  %14 = sub i32 %6, %7"];
	Node0xfa2770[shape=record, label="  %15 = sub i32 %14, %13"];
	Node0xfa27e0[shape=record, label="  %16 = add i32 %15, %11"];
	Node0xfa2850[shape=record, label="  %17 = icmp eq i32 %9, %16"];
	Node0xf419d8[shape=record, label="  %18 = select i1 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xfa28e0[shape=record, label="  %19 = call i32 @puts(i8* nonnull dereferenceable(1) %18) #5"];
	Node0xfa2b38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xfa2c98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xfa2d58[shape=record, label="  ret i32 0"];
	Node0xfa0408 -> Node0xfa0488;
	Node0xfa0488 -> Node0xfa0518;
	Node0xfa0518 -> Node0xfa0978;
	Node0xfa0978 -> Node0xfa0a58;
	Node0xfa0a58 -> Node0xfa0b78;
	Node0xfa0b78 -> Node0xfa0db0;
	Node0xfa0db0 -> Node0xfa0e68;
	Node0xfa0e68 -> Node0xfa1dd8;
	Node0xfa1dd8 -> Node0xfa2460;
	Node0xfa2460 -> Node0xfa24d0;
	Node0xfa24d0 -> Node0xfa2540;
	Node0xfa2540 -> Node0xfa25b0;
	Node0xfa25b0 -> Node0xfa2620;
	Node0xfa2620 -> Node0xfa2690;
	Node0xfa2690 -> Node0xfa2700;
	Node0xfa2700 -> Node0xfa2770;
	Node0xfa2770 -> Node0xfa27e0;
	Node0xfa27e0 -> Node0xfa2850;
	Node0xfa2850 -> Node0xf419d8;
	Node0xf419d8 -> Node0xfa28e0;
	Node0xfa28e0 -> Node0xfa2b38;
	Node0xfa2b38 -> Node0xfa2c98;
	Node0xfa2c98 -> Node0xfa2d58;
edge [color=red]
	Node0xfa0408 -> Node0xfa0518;
	Node0xfa0518 -> Node0xfa0978;
	Node0xfa0488 -> Node0xfa0a58;
	Node0xfa0a58 -> Node0xfa0b78;
	Node0xfa0408 -> Node0xfa0db0;
	Node0xfa0488 -> Node0xfa0db0;
	Node0xfa0408 -> Node0xfa0e68;
	Node0xfa0488 -> Node0xfa1dd8;
	Node0xfa1dd8 -> Node0xfa2460;
	Node0xfa2460 -> Node0xfa24d0;
	Node0xfa0e68 -> Node0xfa24d0;
	Node0xfa1dd8 -> Node0xfa2540;
	Node0xfa0e68 -> Node0xfa2540;
	Node0xfa2540 -> Node0xfa25b0;
	Node0xfa1dd8 -> Node0xfa2620;
	Node0xfa0e68 -> Node0xfa2620;
	Node0xfa2620 -> Node0xfa2690;
	Node0xfa0e68 -> Node0xfa2700;
	Node0xfa1dd8 -> Node0xfa2700;
	Node0xfa2700 -> Node0xfa2770;
	Node0xfa2690 -> Node0xfa2770;
	Node0xfa2770 -> Node0xfa27e0;
	Node0xfa25b0 -> Node0xfa27e0;
	Node0xfa24d0 -> Node0xfa2850;
	Node0xfa27e0 -> Node0xfa2850;
	Node0xfa2850 -> Node0xf419d8;
	Node0xf419d8 -> Node0xfa28e0;
	Node0xfa0a58 -> Node0xfa2b38;
	Node0xfa0518 -> Node0xfa2c98;
}
