digraph "DFG for'crackme' function" {
	Node0xf9f8e0[shape=record, label="  %3 = mul i32 %1, -3"];
	Node0xf9f950[shape=record, label="  %4 = sub i32 %3, %0"];
	Node0xf9fa10[shape=record, label="  %5 = and i32 %1, %0"];
	Node0xf9fa80[shape=record, label="  %6 = mul i32 %5, -2"];
	Node0xf9faf0[shape=record, label="  %7 = or i32 %1, %0"];
	Node0xf9fb90[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0xf9fc00[shape=record, label="  %9 = sub i32 %0, %1"];
	Node0xf9fc70[shape=record, label="  %10 = sub i32 %9, %8"];
	Node0xf9fce0[shape=record, label="  %11 = add i32 %10, %6"];
	Node0xf9fd50[shape=record, label="  %12 = icmp eq i32 %4, %11"];
	Node0xf40388[shape=record, label="  %13 = select i1 %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xfa01f0[shape=record, label="  %14 = tail call i32 @puts(i8* nonnull dereferenceable(1) %13)"];
	Node0xfa0240[shape=record, label="  ret void"];
	Node0xf9f8e0 -> Node0xf9f950;
	Node0xf9f950 -> Node0xf9fa10;
	Node0xf9fa10 -> Node0xf9fa80;
	Node0xf9fa80 -> Node0xf9faf0;
	Node0xf9faf0 -> Node0xf9fb90;
	Node0xf9fb90 -> Node0xf9fc00;
	Node0xf9fc00 -> Node0xf9fc70;
	Node0xf9fc70 -> Node0xf9fce0;
	Node0xf9fce0 -> Node0xf9fd50;
	Node0xf9fd50 -> Node0xf40388;
	Node0xf40388 -> Node0xfa01f0;
	Node0xfa01f0 -> Node0xfa0240;
edge [color=red]
	Node0xf9f8e0 -> Node0xf9f950;
	Node0xf9fa10 -> Node0xf9fa80;
	Node0xf9faf0 -> Node0xf9fb90;
	Node0xf9fc00 -> Node0xf9fc70;
	Node0xf9fb90 -> Node0xf9fc70;
	Node0xf9fc70 -> Node0xf9fce0;
	Node0xf9fa80 -> Node0xf9fce0;
	Node0xf9f950 -> Node0xf9fd50;
	Node0xf9fce0 -> Node0xf9fd50;
	Node0xf9fd50 -> Node0xf40388;
	Node0xf40388 -> Node0xfa01f0;
}
