; ModuleID = '../.././c_source_file/0189_path_condition_crackme.c'
source_filename = "../.././c_source_file/0189_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = mul i32 %4, -2
  %7 = add i32 %4, 1
  %8 = xor i32 %1, %0
  %9 = xor i32 %8, -1
  %10 = or i32 %9, %2
  %11 = xor i32 %2, -1
  %12 = or i32 %8, %11
  %13 = add i32 %12, %10
  %14 = sub i32 %7, %13
  %15 = add i32 %14, %6
  %16 = xor i32 %3, -1
  %17 = or i32 %16, %4
  %18 = or i32 %4, %3
  %19 = or i32 %11, %0
  %20 = xor i32 %19, -1
  %21 = or i32 %8, %20
  %22 = and i32 %2, %1
  %23 = and i32 %22, %0
  %24 = xor i32 %0, -1
  %25 = xor i32 %2, %1
  %26 = and i32 %25, %24
  %27 = or i32 %23, %26
  %28 = xor i32 %1, -1
  %29 = xor i32 %2, %0
  %30 = xor i32 %29, -1
  %31 = or i32 %30, %28
  %32 = and i32 %2, %0
  %33 = or i32 %32, %9
  %34 = xor i32 %19, %1
  %35 = xor i32 %22, -1
  %36 = add i32 %22, 1
  %37 = xor i32 %32, -1
  %38 = and i32 %37, %1
  %39 = or i32 %35, %0
  %40 = and i32 %37, %28
  %41 = and i32 %28, %2
  %42 = and i32 %41, %0
  %43 = xor i32 %25, %0
  %44 = xor i32 %43, -1
  %45 = xor i32 %42, %44
  %46 = or i32 %1, %0
  %47 = and i32 %8, %37
  %48 = and i32 %28, %0
  %49 = or i32 %29, %48
  %50 = or i32 %2, %0
  %51 = xor i32 %50, -1
  %52 = xor i32 %51, %1
  %53 = or i32 %28, %0
  %54 = xor i32 %53, -1
  %55 = xor i32 %25, -1
  %56 = or i32 %55, %54
  %57 = and i32 %25, %53
  %58 = shl i32 %57, 1
  %59 = or i32 %20, %9
  %60 = or i32 %25, %54
  %61 = and i32 %11, %0
  %62 = xor i32 %61, -1
  %63 = and i32 %62, %9
  %64 = xor i32 %32, %1
  %65 = and i32 %29, %9
  %66 = xor i32 %46, -1
  %67 = or i32 %30, %66
  %68 = and i32 %50, %9
  %69 = and i32 %41, %24
  %70 = or i32 %28, %2
  %71 = and i32 %70, %0
  %72 = xor i32 %71, -1
  %73 = xor i32 %69, %72
  %74 = or i32 %29, %1
  %75 = and i32 %1, %0
  %76 = or i32 %75, %30
  %77 = or i32 %25, %48
  %78 = xor i32 %32, %53
  %79 = or i32 %2, %1
  %80 = or i32 %79, %24
  %81 = or i32 %61, %8
  %82 = or i32 %61, %22
  %83 = shl i32 %82, 1
  %84 = or i32 %32, %8
  %85 = and i32 %8, %62
  %86 = xor i32 %32, %46
  %87 = and i32 %11, %9
  %88 = or i32 %61, %28
  %89 = or i32 %51, %1
  %90 = and i32 %53, %11
  %91 = and i32 %79, %0
  %92 = or i32 %30, %54
  %93 = xor i32 %35, %0
  %94 = shl i32 %93, 1
  %95 = and i32 %53, %30
  %96 = shl i32 %95, 1
  %97 = and i32 %25, %0
  %98 = xor i32 %79, %0
  %99 = xor i32 %75, %2
  %100 = or i32 %11, %1
  %101 = xor i32 %100, %0
  %102 = xor i32 %48, -1
  %103 = and i32 %30, %102
  %104 = and i32 %55, %102
  %105 = or i32 %75, %55
  %106 = or i32 %75, %11
  %107 = xor i32 %54, %2
  %108 = xor i32 %70, %0
  %109 = xor i32 %42, -1
  %110 = xor i32 %108, %109
  %111 = shl i32 %1, 1
  %112 = or i32 %75, %20
  %113 = or i32 %29, %75
  %114 = or i32 %32, %28
  %115 = or i32 %22, %24
  %116 = or i32 %69, %71
  %117 = or i32 %75, %51
  %118 = and i32 %11, %102
  %119 = xor i32 %48, %35
  %120 = xor i32 %100, -1
  %121 = or i32 %61, %120
  %122 = or i32 %20, %28
  %123 = xor i32 %75, -1
  %124 = and i32 %25, %123
  %125 = and i32 %11, %1
  %126 = xor i32 %125, -1
  %127 = xor i32 %19, %75
  %128 = and i32 %35, %24
  %129 = xor i32 %22, %0
  %130 = and i32 %50, %8
  %131 = or i32 %23, %44
  %132 = and i32 %35, %0
  %133 = xor i32 %37, %1
  %134 = xor i32 %61, %100
  %135 = or i32 %29, %54
  %136 = shl i32 %25, 1
  %137 = or i32 %25, %0
  %138 = xor i32 %137, -1
  %139 = or i32 %42, %138
  %140 = or i32 %11, %54
  %141 = xor i32 %79, %75
  %142 = add i32 %46, 1
  %143 = and i32 %29, %102
  %144 = and i32 %29, %8
  %145 = xor i32 %79, -1
  %146 = add i32 %79, 1
  %147 = or i32 %125, %48
  %148 = or i32 %145, %0
  %149 = or i32 %126, %0
  %150 = or i32 %25, %66
  %151 = xor i32 %145, %0
  %152 = and i32 %22, %24
  %153 = xor i32 %91, -1
  %154 = xor i32 %152, %153
  %155 = or i32 %29, %8
  %156 = shl i32 %155, 1
  %157 = and i32 %79, %24
  %158 = xor i32 %23, -1
  %159 = xor i32 %157, %158
  %160 = or i32 %25, %75
  %161 = or i32 %8, %30
  %162 = xor i32 %98, %158
  %163 = or i32 %32, %125
  %164 = and i32 %126, %24
  %165 = or i32 %120, %24
  %166 = and i32 %25, %46
  %167 = and i32 %70, %24
  %168 = or i32 %42, %167
  %169 = and i32 %29, %53
  %170 = xor i32 %167, %109
  %171 = and i32 %62, %1
  %172 = xor i32 %26, %158
  %173 = add i32 %100, 1
  %174 = or i32 %32, %1
  %175 = and i32 %37, %9
  %176 = or i32 %20, %1
  %177 = shl i32 %176, 1
  %178 = or i32 %32, %66
  %179 = or i32 %100, %24
  %180 = and i32 %29, %123
  %181 = and i32 %53, %55
  %182 = shl i32 %181, 1
  %183 = xor i32 %48, %2
  %184 = and i32 %11, %123
  %185 = or i32 %11, %66
  %186 = or i32 %23, %157
  %187 = xor i32 %61, %35
  %188 = xor i32 %123, %2
  %189 = xor i32 %32, %79
  %190 = xor i32 %97, 2147483647
  %191 = xor i32 %190, %152
  %192 = shl i32 %191, 1
  %193 = or i32 %152, %91
  %194 = or i32 %61, %1
  %195 = or i32 %48, %2
  %196 = or i32 %51, %28
  %197 = xor i32 %102, %2
  %198 = or i32 %51, %9
  %199 = and i32 %62, %28
  %200 = or i32 %75, %120
  %201 = or i32 %22, %0
  %202 = and i32 %102, %2
  %203 = xor i32 %62, %1
  %204 = and i32 %100, %0
  %205 = or i32 %66, %2
  %206 = or i32 %55, %0
  %207 = shl i32 %206, 1
  %208 = or i32 %75, %145
  %209 = and i32 %55, %0
  %210 = and i32 %29, %28
  %211 = shl i32 %26, 1
  %212 = and i32 %50, %1
  %213 = and i32 %126, %0
  %214 = or i32 %55, %24
  %215 = xor i32 %48, %126
  %216 = xor i32 %23, %43
  %217 = xor i32 %50, %1
  %218 = and i32 %30, %9
  %219 = and i32 %19, %28
  %220 = and i32 %46, %55
  %221 = or i32 %75, %2
  %222 = xor i32 %61, %1
  %223 = shl i32 %157, 1
  %224 = and i32 %29, %1
  %225 = and i32 %50, %28
  %226 = xor i32 %20, %1
  %227 = xor i32 %53, %2
  %228 = xor i32 %50, %75
  %229 = or i32 %25, %24
  %230 = xor i32 %229, -1
  %231 = or i32 %69, %230
  %232 = shl i32 %102, 2
  %233 = or i32 %29, %9
  %234 = or i32 %48, %11
  %235 = or i32 %125, %24
  %236 = and i32 %55, %123
  %237 = and i32 %8, %30
  %238 = and i32 %46, %30
  %239 = shl i32 %50, 1
  %240 = or i32 %54, %2
  %241 = or i32 %125, %0
  %242 = or i32 %8, %2
  %243 = and i32 %19, %8
  %244 = shl i32 %243, 1
  %245 = or i32 %30, %1
  %246 = add i32 %32, 1
  %247 = xor i32 %42, %137
  %248 = and i32 %19, %1
  %249 = or i32 %30, %9
  %250 = or i32 %61, %9
  %251 = or i32 %23, %98
  %252 = and i32 %8, %2
  %253 = xor i32 %32, %126
  %254 = or i32 %29, %28
  %255 = or i32 %32, %145
  %256 = and i32 %30, %123
  %257 = or i32 %42, %108
  %258 = and i32 %25, %102
  %259 = or i32 %152, %97
  %260 = or i32 %55, %66
  %261 = and i32 %29, %46
  %262 = xor i32 %46, %2
  %263 = or i32 %145, %24
  %264 = and i32 %19, %9
  %265 = xor i32 %55, %0
  %266 = or i32 %126, %24
  %267 = and i32 %8, %11
  %268 = and i32 %53, %2
  %269 = xor i32 %66, %2
  %270 = xor i32 %126, %0
  %271 = and i32 %55, %24
  %272 = and i32 %9, %2
  %273 = or i32 %100, %0
  %274 = shl i32 %273, 2
  %275 = or i32 %32, %54
  %276 = or i32 %29, %66
  %277 = or i32 %79, %0
  %278 = and i32 %100, %24
  %279 = shl i32 %278, 1
  %280 = or i32 %35, %24
  %281 = and i32 %145, %24
  %282 = mul i32 %281, 6
  %283 = and i32 %125, %24
  %284 = shl i32 %283, 2
  %285 = and i32 %145, %0
  %286 = mul i32 %285, -13
  %287 = and i32 %125, %0
  %288 = mul i32 %152, -9
  %289 = and i32 %120, %0
  %290 = shl i32 %289, 2
  %291 = mul i32 %23, -7
  %292 = sub i32 %129, %124
  %293 = add i32 %292, %112
  %294 = add i32 %293, %216
  %295 = mul i32 %294, 5
  %296 = sub i32 %256, %0
  %297 = sub i32 %296, %258
  %298 = add i32 %297, %228
  %299 = mul i32 %298, 3
  %300 = add i32 %89, %79
  %301 = shl i32 %300, 2
  %302 = add i32 %46, -1
  %303 = add i32 %302, %269
  %304 = add i32 %303, %267
  %305 = add i32 %304, %20
  %306 = add i32 %305, %185
  %307 = add i32 %306, %62
  %308 = add i32 %307, %100
  %309 = add i32 %308, %126
  %310 = add i32 %309, %106
  %311 = add i32 %310, %287
  %312 = add i32 %311, %270
  %313 = add i32 %312, %212
  %314 = add i32 %313, %196
  %315 = add i32 %314, %128
  %316 = add i32 %315, %127
  %317 = add i32 %316, %105
  %318 = add i32 %317, %103
  %319 = add i32 %318, %251
  %320 = shl i32 %319, 1
  %321 = add i32 %0, 5
  %322 = add i32 %321, %28
  %323 = sub i32 %322, %48
  %324 = sub i32 %323, %111
  %325 = add i32 %324, %142
  %326 = sub i32 %325, %75
  %327 = add i32 %326, %54
  %328 = add i32 %327, %123
  %329 = sub i32 %328, %53
  %330 = add i32 %329, %36
  %331 = sub i32 %330, %32
  %332 = sub i32 %331, %87
  %333 = add i32 %332, %30
  %334 = sub i32 %333, %90
  %335 = sub i32 %334, %99
  %336 = add i32 %335, %55
  %337 = add i32 %336, %107
  %338 = sub i32 %337, %118
  %339 = sub i32 %338, %22
  %340 = add i32 %339, %140
  %341 = add i32 %340, %146
  %342 = add i32 %341, %51
  %343 = add i32 %342, %173
  %344 = add i32 %343, %183
  %345 = add i32 %344, %184
  %346 = sub i32 %345, %188
  %347 = sub i32 %346, %195
  %348 = sub i32 %347, %197
  %349 = sub i32 %348, %202
  %350 = sub i32 %349, %205
  %351 = add i32 %350, %125
  %352 = sub i32 %351, %19
  %353 = sub i32 %352, %221
  %354 = sub i32 %353, %29
  %355 = sub i32 %354, %227
  %356 = sub i32 %355, %232
  %357 = add i32 %356, %234
  %358 = add i32 %357, %240
  %359 = add i32 %358, %242
  %360 = add i32 %359, %246
  %361 = add i32 %360, %61
  %362 = sub i32 %361, %252
  %363 = add i32 %362, %262
  %364 = add i32 %363, %268
  %365 = add i32 %364, %272
  %366 = sub i32 %365, %21
  %367 = add i32 %366, %31
  %368 = add i32 %367, %33
  %369 = add i32 %368, %34
  %370 = sub i32 %369, %38
  %371 = add i32 %370, %39
  %372 = sub i32 %371, %40
  %373 = add i32 %372, %47
  %374 = add i32 %373, %49
  %375 = add i32 %374, %52
  %376 = add i32 %375, %56
  %377 = add i32 %376, %59
  %378 = add i32 %377, %60
  %379 = sub i32 %378, %63
  %380 = add i32 %379, %64
  %381 = sub i32 %380, %65
  %382 = add i32 %381, %67
  %383 = add i32 %382, %68
  %384 = add i32 %383, %74
  %385 = sub i32 %384, %76
  %386 = sub i32 %385, %77
  %387 = sub i32 %386, %43
  %388 = sub i32 %387, %78
  %389 = add i32 %388, %80
  %390 = add i32 %389, %81
  %391 = add i32 %390, %84
  %392 = sub i32 %391, %85
  %393 = sub i32 %392, %86
  %394 = sub i32 %393, %88
  %395 = add i32 %394, %91
  %396 = add i32 %395, %92
  %397 = add i32 %396, %97
  %398 = add i32 %397, %98
  %399 = sub i32 %398, %101
  %400 = add i32 %399, %104
  %401 = sub i32 %400, %113
  %402 = add i32 %401, %114
  %403 = add i32 %402, %115
  %404 = sub i32 %403, %117
  %405 = add i32 %404, %119
  %406 = sub i32 %405, %121
  %407 = add i32 %406, %122
  %408 = sub i32 %407, %130
  %409 = add i32 %408, %132
  %410 = sub i32 %409, %133
  %411 = sub i32 %410, %134
  %412 = sub i32 %411, %135
  %413 = sub i32 %412, %136
  %414 = sub i32 %413, %141
  %415 = add i32 %414, %143
  %416 = sub i32 %415, %144
  %417 = add i32 %416, %147
  %418 = sub i32 %417, %148
  %419 = add i32 %418, %149
  %420 = sub i32 %419, %150
  %421 = sub i32 %420, %151
  %422 = sub i32 %421, %160
  %423 = sub i32 %422, %161
  %424 = add i32 %423, %163
  %425 = add i32 %424, %164
  %426 = sub i32 %425, %165
  %427 = add i32 %426, %166
  %428 = sub i32 %427, %169
  %429 = sub i32 %428, %171
  %430 = add i32 %429, %174
  %431 = sub i32 %430, %175
  %432 = sub i32 %431, %178
  %433 = add i32 %432, %179
  %434 = add i32 %433, %180
  %435 = add i32 %434, %187
  %436 = add i32 %435, %189
  %437 = sub i32 %436, %194
  %438 = sub i32 %437, %198
  %439 = add i32 %438, %199
  %440 = add i32 %439, %200
  %441 = add i32 %440, %201
  %442 = add i32 %441, %203
  %443 = add i32 %442, %204
  %444 = add i32 %443, %208
  %445 = add i32 %444, %209
  %446 = sub i32 %445, %210
  %447 = add i32 %446, %213
  %448 = sub i32 %447, %214
  %449 = add i32 %448, %215
  %450 = add i32 %449, %217
  %451 = sub i32 %450, %218
  %452 = add i32 %451, %137
  %453 = sub i32 %452, %219
  %454 = sub i32 %453, %220
  %455 = sub i32 %454, %222
  %456 = add i32 %455, %224
  %457 = add i32 %456, %225
  %458 = add i32 %457, %226
  %459 = sub i32 %458, %233
  %460 = sub i32 %459, %235
  %461 = sub i32 %460, %236
  %462 = add i32 %461, %237
  %463 = sub i32 %462, %238
  %464 = sub i32 %463, %239
  %465 = add i32 %464, %241
  %466 = sub i32 %465, %245
  %467 = sub i32 %466, %248
  %468 = sub i32 %467, %249
  %469 = add i32 %468, %250
  %470 = add i32 %469, %253
  %471 = sub i32 %470, %254
  %472 = sub i32 %471, %255
  %473 = add i32 %472, %260
  %474 = sub i32 %473, %261
  %475 = sub i32 %474, %263
  %476 = sub i32 %475, %264
  %477 = sub i32 %476, %265
  %478 = sub i32 %477, %266
  %479 = sub i32 %478, %271
  %480 = sub i32 %479, %229
  %481 = sub i32 %480, %275
  %482 = sub i32 %481, %276
  %483 = add i32 %482, %277
  %484 = add i32 %483, %280
  %485 = sub i32 %484, %17
  %486 = sub i32 %485, %18
  %487 = sub i32 %486, %27
  %488 = sub i32 %487, %45
  %489 = sub i32 %488, %58
  %490 = sub i32 %489, %73
  %491 = sub i32 %490, %83
  %492 = sub i32 %491, %94
  %493 = sub i32 %492, %96
  %494 = add i32 %493, %110
  %495 = sub i32 %494, %116
  %496 = add i32 %495, %131
  %497 = add i32 %496, %139
  %498 = sub i32 %497, %154
  %499 = sub i32 %498, %156
  %500 = add i32 %499, %159
  %501 = sub i32 %500, %162
  %502 = sub i32 %501, %168
  %503 = add i32 %502, %170
  %504 = sub i32 %503, %172
  %505 = sub i32 %504, %177
  %506 = sub i32 %505, %182
  %507 = sub i32 %506, %186
  %508 = sub i32 %507, %193
  %509 = sub i32 %508, %207
  %510 = sub i32 %509, %211
  %511 = sub i32 %510, %223
  %512 = add i32 %511, %231
  %513 = sub i32 %512, %244
  %514 = add i32 %513, %247
  %515 = sub i32 %514, %257
  %516 = add i32 %515, %259
  %517 = sub i32 %516, %274
  %518 = sub i32 %517, %279
  %519 = add i32 %518, %282
  %520 = sub i32 %519, %284
  %521 = add i32 %520, %286
  %522 = add i32 %521, %288
  %523 = sub i32 %522, %290
  %524 = add i32 %523, %291
  %525 = add i32 %524, %301
  %526 = sub i32 %525, %192
  %527 = add i32 %526, %299
  %528 = add i32 %527, %295
  %529 = add i32 %528, %320
  %530 = icmp eq i32 %15, %529
  %531 = select i1 %530, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %532 = tail call i32 @puts(i8* nonnull dereferenceable(1) %531)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
