digraph "DFG for'main' function" {
	Node0x18fdf68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x18fdfe8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x18fe078[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x18fe0d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x18fe558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18fe638[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x18fe738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18fe7f8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x18fe8a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18feb08[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x18febc8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18ffb38[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x19001a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x19002a0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x19004a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1900608[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1900718[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19007d8[shape=record, label="  ret i32 0"];
	Node0x18fdf68 -> Node0x18fdfe8;
	Node0x18fdfe8 -> Node0x18fe078;
	Node0x18fe078 -> Node0x18fe0d8;
	Node0x18fe0d8 -> Node0x18fe558;
	Node0x18fe558 -> Node0x18fe638;
	Node0x18fe638 -> Node0x18fe738;
	Node0x18fe738 -> Node0x18fe7f8;
	Node0x18fe7f8 -> Node0x18fe8a8;
	Node0x18fe8a8 -> Node0x18feb08;
	Node0x18feb08 -> Node0x18febc8;
	Node0x18febc8 -> Node0x18ffb38;
	Node0x18ffb38 -> Node0x19001a8;
	Node0x19001a8 -> Node0x19002a0;
	Node0x19002a0 -> Node0x19004a8;
	Node0x19004a8 -> Node0x1900608;
	Node0x1900608 -> Node0x1900718;
	Node0x1900718 -> Node0x19007d8;
edge [color=red]
	Node0x18fdf68 -> Node0x18fe0d8;
	Node0x18fe0d8 -> Node0x18fe558;
	Node0x18fdfe8 -> Node0x18fe638;
	Node0x18fe638 -> Node0x18fe738;
	Node0x18fe078 -> Node0x18fe7f8;
	Node0x18fe7f8 -> Node0x18fe8a8;
	Node0x18fdf68 -> Node0x18feb08;
	Node0x18fdfe8 -> Node0x18feb08;
	Node0x18fe078 -> Node0x18feb08;
	Node0x18fdf68 -> Node0x18febc8;
	Node0x18fdfe8 -> Node0x18ffb38;
	Node0x18fe078 -> Node0x19001a8;
	Node0x18febc8 -> Node0x19002a0;
	Node0x18ffb38 -> Node0x19002a0;
	Node0x19001a8 -> Node0x19002a0;
	Node0x18fe7f8 -> Node0x19004a8;
	Node0x18fe638 -> Node0x1900608;
	Node0x18fe0d8 -> Node0x1900718;
}
