digraph "DFG for'main' function" {
	Node0x21ceb28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21ceba8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21cec38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x21cf098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x21cf178[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x21cf298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21cf4d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x21cf588[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21d04f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21d0b80[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x21d0bf0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x21d0c60[shape=record, label="  %10 = and i32 %6, %9"];
	Node0x21d0cd0[shape=record, label="  %11 = sub i32 %10, %8"];
	Node0x21d0d40[shape=record, label="  %12 = shl i32 %9, 1"];
	Node0x21d0db0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x21d0e20[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x21d0e90[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x21d0f00[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x21d0f70[shape=record, label="  %17 = xor i32 %6, 2147483647"];
	Node0x21d0fe0[shape=record, label="  %18 = and i32 %17, %7"];
	Node0x21d1050[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x21d10c0[shape=record, label="  %20 = shl i32 %10, 1"];
	Node0x21d1130[shape=record, label="  %21 = add i32 %12, %7"];
	Node0x21d11a0[shape=record, label="  %22 = sub i32 %21, %16"];
	Node0x21d1210[shape=record, label="  %23 = add i32 %22, %8"];
	Node0x21d1280[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x21d12f0[shape=record, label="  %25 = sub i32 %24, %19"];
	Node0x21d1360[shape=record, label="  %26 = sub i32 %25, %20"];
	Node0x21d13d0[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0x21d1440[shape=record, label="  %28 = icmp eq i32 %11, %27"];
	Node0x216f9d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x21d14d0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x21d1728[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21d1888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x21d1948[shape=record, label="  ret i32 0"];
	Node0x21ceb28 -> Node0x21ceba8;
	Node0x21ceba8 -> Node0x21cec38;
	Node0x21cec38 -> Node0x21cf098;
	Node0x21cf098 -> Node0x21cf178;
	Node0x21cf178 -> Node0x21cf298;
	Node0x21cf298 -> Node0x21cf4d0;
	Node0x21cf4d0 -> Node0x21cf588;
	Node0x21cf588 -> Node0x21d04f8;
	Node0x21d04f8 -> Node0x21d0b80;
	Node0x21d0b80 -> Node0x21d0bf0;
	Node0x21d0bf0 -> Node0x21d0c60;
	Node0x21d0c60 -> Node0x21d0cd0;
	Node0x21d0cd0 -> Node0x21d0d40;
	Node0x21d0d40 -> Node0x21d0db0;
	Node0x21d0db0 -> Node0x21d0e20;
	Node0x21d0e20 -> Node0x21d0e90;
	Node0x21d0e90 -> Node0x21d0f00;
	Node0x21d0f00 -> Node0x21d0f70;
	Node0x21d0f70 -> Node0x21d0fe0;
	Node0x21d0fe0 -> Node0x21d1050;
	Node0x21d1050 -> Node0x21d10c0;
	Node0x21d10c0 -> Node0x21d1130;
	Node0x21d1130 -> Node0x21d11a0;
	Node0x21d11a0 -> Node0x21d1210;
	Node0x21d1210 -> Node0x21d1280;
	Node0x21d1280 -> Node0x21d12f0;
	Node0x21d12f0 -> Node0x21d1360;
	Node0x21d1360 -> Node0x21d13d0;
	Node0x21d13d0 -> Node0x21d1440;
	Node0x21d1440 -> Node0x216f9d8;
	Node0x216f9d8 -> Node0x21d14d0;
	Node0x21d14d0 -> Node0x21d1728;
	Node0x21d1728 -> Node0x21d1888;
	Node0x21d1888 -> Node0x21d1948;
edge [color=red]
	Node0x21ceb28 -> Node0x21cec38;
	Node0x21cec38 -> Node0x21cf098;
	Node0x21ceba8 -> Node0x21cf178;
	Node0x21cf178 -> Node0x21cf298;
	Node0x21ceb28 -> Node0x21cf4d0;
	Node0x21ceba8 -> Node0x21cf4d0;
	Node0x21ceb28 -> Node0x21cf588;
	Node0x21ceba8 -> Node0x21d04f8;
	Node0x21d04f8 -> Node0x21d0b80;
	Node0x21cf588 -> Node0x21d0b80;
	Node0x21d04f8 -> Node0x21d0bf0;
	Node0x21cf588 -> Node0x21d0c60;
	Node0x21d0bf0 -> Node0x21d0c60;
	Node0x21d0c60 -> Node0x21d0cd0;
	Node0x21d0b80 -> Node0x21d0cd0;
	Node0x21d0bf0 -> Node0x21d0d40;
	Node0x21d04f8 -> Node0x21d0db0;
	Node0x21cf588 -> Node0x21d0db0;
	Node0x21d0db0 -> Node0x21d0e20;
	Node0x21d0e20 -> Node0x21d0e90;
	Node0x21d04f8 -> Node0x21d0f00;
	Node0x21cf588 -> Node0x21d0f00;
	Node0x21cf588 -> Node0x21d0f70;
	Node0x21d0f70 -> Node0x21d0fe0;
	Node0x21d04f8 -> Node0x21d0fe0;
	Node0x21d0fe0 -> Node0x21d1050;
	Node0x21d0c60 -> Node0x21d10c0;
	Node0x21d0d40 -> Node0x21d1130;
	Node0x21d04f8 -> Node0x21d1130;
	Node0x21d1130 -> Node0x21d11a0;
	Node0x21d0f00 -> Node0x21d11a0;
	Node0x21d11a0 -> Node0x21d1210;
	Node0x21d0b80 -> Node0x21d1210;
	Node0x21d1210 -> Node0x21d1280;
	Node0x21d0e20 -> Node0x21d1280;
	Node0x21d1280 -> Node0x21d12f0;
	Node0x21d1050 -> Node0x21d12f0;
	Node0x21d12f0 -> Node0x21d1360;
	Node0x21d10c0 -> Node0x21d1360;
	Node0x21d1360 -> Node0x21d13d0;
	Node0x21d0e90 -> Node0x21d13d0;
	Node0x21d0cd0 -> Node0x21d1440;
	Node0x21d13d0 -> Node0x21d1440;
	Node0x21d1440 -> Node0x216f9d8;
	Node0x216f9d8 -> Node0x21d14d0;
	Node0x21cf178 -> Node0x21d1728;
	Node0x21cec38 -> Node0x21d1888;
}
