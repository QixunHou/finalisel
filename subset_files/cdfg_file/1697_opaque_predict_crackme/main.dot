digraph "DFG for'main' function" {
	Node0x7e5a48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x7e5ac8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x7e5b58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x7e5bb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x7e5c68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x7e6098[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7e6178[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x7e6278[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7e6338[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x7e63e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x7e64a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x7e6558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x7e0740[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x7e6758[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x7e76c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x7e7d38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x7e7d98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x7e7ea8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x7e8108[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x7e8268[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x7e8378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7e8488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x7e8548[shape=record, label="  ret i32 0"];
	Node0x7e5a48 -> Node0x7e5ac8;
	Node0x7e5ac8 -> Node0x7e5b58;
	Node0x7e5b58 -> Node0x7e5bb8;
	Node0x7e5bb8 -> Node0x7e5c68;
	Node0x7e5c68 -> Node0x7e6098;
	Node0x7e6098 -> Node0x7e6178;
	Node0x7e6178 -> Node0x7e6278;
	Node0x7e6278 -> Node0x7e6338;
	Node0x7e6338 -> Node0x7e63e8;
	Node0x7e63e8 -> Node0x7e64a8;
	Node0x7e64a8 -> Node0x7e6558;
	Node0x7e6558 -> Node0x7e0740;
	Node0x7e0740 -> Node0x7e6758;
	Node0x7e6758 -> Node0x7e76c8;
	Node0x7e76c8 -> Node0x7e7d38;
	Node0x7e7d38 -> Node0x7e7d98;
	Node0x7e7d98 -> Node0x7e7ea8;
	Node0x7e7ea8 -> Node0x7e8108;
	Node0x7e8108 -> Node0x7e8268;
	Node0x7e8268 -> Node0x7e8378;
	Node0x7e8378 -> Node0x7e8488;
	Node0x7e8488 -> Node0x7e8548;
edge [color=red]
	Node0x7e5a48 -> Node0x7e5c68;
	Node0x7e5c68 -> Node0x7e6098;
	Node0x7e5ac8 -> Node0x7e6178;
	Node0x7e6178 -> Node0x7e6278;
	Node0x7e5b58 -> Node0x7e6338;
	Node0x7e6338 -> Node0x7e63e8;
	Node0x7e5bb8 -> Node0x7e64a8;
	Node0x7e64a8 -> Node0x7e6558;
	Node0x7e5a48 -> Node0x7e0740;
	Node0x7e5ac8 -> Node0x7e0740;
	Node0x7e5b58 -> Node0x7e0740;
	Node0x7e5bb8 -> Node0x7e0740;
	Node0x7e5a48 -> Node0x7e6758;
	Node0x7e5ac8 -> Node0x7e76c8;
	Node0x7e5b58 -> Node0x7e7d38;
	Node0x7e5bb8 -> Node0x7e7d98;
	Node0x7e6758 -> Node0x7e7ea8;
	Node0x7e76c8 -> Node0x7e7ea8;
	Node0x7e7d38 -> Node0x7e7ea8;
	Node0x7e7d98 -> Node0x7e7ea8;
	Node0x7e64a8 -> Node0x7e8108;
	Node0x7e6338 -> Node0x7e8268;
	Node0x7e6178 -> Node0x7e8378;
	Node0x7e5c68 -> Node0x7e8488;
}
