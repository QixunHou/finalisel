digraph "DFG for'main' function" {
	Node0x14d0198[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14d0218[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14d02a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14d0308[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x14d70c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14d71a8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x14d72a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14d7368[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x14d7418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14d7678[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x14d7738[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14d86a8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14d8d18[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14d8e10[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x14d9018[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14d9178[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14d9288[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x14d9348[shape=record, label="  ret i32 0"];
	Node0x14d0198 -> Node0x14d0218;
	Node0x14d0218 -> Node0x14d02a8;
	Node0x14d02a8 -> Node0x14d0308;
	Node0x14d0308 -> Node0x14d70c8;
	Node0x14d70c8 -> Node0x14d71a8;
	Node0x14d71a8 -> Node0x14d72a8;
	Node0x14d72a8 -> Node0x14d7368;
	Node0x14d7368 -> Node0x14d7418;
	Node0x14d7418 -> Node0x14d7678;
	Node0x14d7678 -> Node0x14d7738;
	Node0x14d7738 -> Node0x14d86a8;
	Node0x14d86a8 -> Node0x14d8d18;
	Node0x14d8d18 -> Node0x14d8e10;
	Node0x14d8e10 -> Node0x14d9018;
	Node0x14d9018 -> Node0x14d9178;
	Node0x14d9178 -> Node0x14d9288;
	Node0x14d9288 -> Node0x14d9348;
edge [color=red]
	Node0x14d0198 -> Node0x14d0308;
	Node0x14d0308 -> Node0x14d70c8;
	Node0x14d0218 -> Node0x14d71a8;
	Node0x14d71a8 -> Node0x14d72a8;
	Node0x14d02a8 -> Node0x14d7368;
	Node0x14d7368 -> Node0x14d7418;
	Node0x14d0198 -> Node0x14d7678;
	Node0x14d0218 -> Node0x14d7678;
	Node0x14d02a8 -> Node0x14d7678;
	Node0x14d0198 -> Node0x14d7738;
	Node0x14d0218 -> Node0x14d86a8;
	Node0x14d02a8 -> Node0x14d8d18;
	Node0x14d7738 -> Node0x14d8e10;
	Node0x14d86a8 -> Node0x14d8e10;
	Node0x14d8d18 -> Node0x14d8e10;
	Node0x14d7368 -> Node0x14d9018;
	Node0x14d71a8 -> Node0x14d9178;
	Node0x14d0308 -> Node0x14d9288;
}
