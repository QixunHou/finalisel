digraph "DFG for'main' function" {
	Node0x59df08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x59df88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x59e018[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x59e478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x59e558[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x59e678[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x59e8b0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x59e968[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x59f8d8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x59ff60[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x59ffd0[shape=record, label="  %9 = add i32 %8, 1"];
	Node0x5a0040[shape=record, label="  %10 = shl i32 %7, 1"];
	Node0x5a00b0[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x5a0120[shape=record, label="  %12 = or i32 %6, %11"];
	Node0x5a0190[shape=record, label="  %13 = and i32 %7, %6"];
	Node0x5a0200[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x5a0270[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x5a02e0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x5a0350[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x5a03c0[shape=record, label="  %18 = xor i32 %12, -1"];
	Node0x5a0430[shape=record, label="  %19 = mul i32 %18, -3"];
	Node0x5a04a0[shape=record, label="  %20 = and i32 %6, %11"];
	Node0x5a0510[shape=record, label="  %21 = shl i32 %20, 2"];
	Node0x5a0580[shape=record, label="  %22 = shl i32 %13, 2"];
	Node0x5a05f0[shape=record, label="  %23 = add i32 %6, 2"];
	Node0x5a0660[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x5a06d0[shape=record, label="  %25 = add i32 %24, %10"];
	Node0x5a0740[shape=record, label="  %26 = add i32 %25, %8"];
	Node0x5a07b0[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x5a0820[shape=record, label="  %28 = add i32 %27, %14"];
	Node0x5a0890[shape=record, label="  %29 = add i32 %28, %15"];
	Node0x5a0900[shape=record, label="  %30 = add i32 %29, %19"];
	Node0x5a0970[shape=record, label="  %31 = sub i32 %30, %21"];
	Node0x5a09e0[shape=record, label="  %32 = sub i32 %31, %22"];
	Node0x5a0c60[shape=record, label="  %33 = sub i32 %32, %17"];
	Node0x5a0cd0[shape=record, label="  %34 = icmp eq i32 %9, %33"];
	Node0x53e9d8[shape=record, label="  %35 = select i1 %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x5a0d60[shape=record, label="  %36 = call i32 @puts(i8* nonnull dereferenceable(1) %35) #5"];
	Node0x5a0fb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5a1118[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x5a11d8[shape=record, label="  ret i32 0"];
	Node0x59df08 -> Node0x59df88;
	Node0x59df88 -> Node0x59e018;
	Node0x59e018 -> Node0x59e478;
	Node0x59e478 -> Node0x59e558;
	Node0x59e558 -> Node0x59e678;
	Node0x59e678 -> Node0x59e8b0;
	Node0x59e8b0 -> Node0x59e968;
	Node0x59e968 -> Node0x59f8d8;
	Node0x59f8d8 -> Node0x59ff60;
	Node0x59ff60 -> Node0x59ffd0;
	Node0x59ffd0 -> Node0x5a0040;
	Node0x5a0040 -> Node0x5a00b0;
	Node0x5a00b0 -> Node0x5a0120;
	Node0x5a0120 -> Node0x5a0190;
	Node0x5a0190 -> Node0x5a0200;
	Node0x5a0200 -> Node0x5a0270;
	Node0x5a0270 -> Node0x5a02e0;
	Node0x5a02e0 -> Node0x5a0350;
	Node0x5a0350 -> Node0x5a03c0;
	Node0x5a03c0 -> Node0x5a0430;
	Node0x5a0430 -> Node0x5a04a0;
	Node0x5a04a0 -> Node0x5a0510;
	Node0x5a0510 -> Node0x5a0580;
	Node0x5a0580 -> Node0x5a05f0;
	Node0x5a05f0 -> Node0x5a0660;
	Node0x5a0660 -> Node0x5a06d0;
	Node0x5a06d0 -> Node0x5a0740;
	Node0x5a0740 -> Node0x5a07b0;
	Node0x5a07b0 -> Node0x5a0820;
	Node0x5a0820 -> Node0x5a0890;
	Node0x5a0890 -> Node0x5a0900;
	Node0x5a0900 -> Node0x5a0970;
	Node0x5a0970 -> Node0x5a09e0;
	Node0x5a09e0 -> Node0x5a0c60;
	Node0x5a0c60 -> Node0x5a0cd0;
	Node0x5a0cd0 -> Node0x53e9d8;
	Node0x53e9d8 -> Node0x5a0d60;
	Node0x5a0d60 -> Node0x5a0fb8;
	Node0x5a0fb8 -> Node0x5a1118;
	Node0x5a1118 -> Node0x5a11d8;
edge [color=red]
	Node0x59df08 -> Node0x59e018;
	Node0x59e018 -> Node0x59e478;
	Node0x59df88 -> Node0x59e558;
	Node0x59e558 -> Node0x59e678;
	Node0x59df08 -> Node0x59e8b0;
	Node0x59df88 -> Node0x59e8b0;
	Node0x59df08 -> Node0x59e968;
	Node0x59df88 -> Node0x59f8d8;
	Node0x59f8d8 -> Node0x59ff60;
	Node0x59e968 -> Node0x59ff60;
	Node0x59ff60 -> Node0x59ffd0;
	Node0x59f8d8 -> Node0x5a0040;
	Node0x59f8d8 -> Node0x5a00b0;
	Node0x59e968 -> Node0x5a0120;
	Node0x5a00b0 -> Node0x5a0120;
	Node0x59f8d8 -> Node0x5a0190;
	Node0x59e968 -> Node0x5a0190;
	Node0x5a0190 -> Node0x5a0200;
	Node0x59f8d8 -> Node0x5a0270;
	Node0x59e968 -> Node0x5a0270;
	Node0x5a0270 -> Node0x5a02e0;
	Node0x5a02e0 -> Node0x5a0350;
	Node0x5a0120 -> Node0x5a03c0;
	Node0x5a03c0 -> Node0x5a0430;
	Node0x59e968 -> Node0x5a04a0;
	Node0x5a00b0 -> Node0x5a04a0;
	Node0x5a04a0 -> Node0x5a0510;
	Node0x5a0190 -> Node0x5a0580;
	Node0x59e968 -> Node0x5a05f0;
	Node0x5a05f0 -> Node0x5a0660;
	Node0x5a00b0 -> Node0x5a0660;
	Node0x5a0660 -> Node0x5a06d0;
	Node0x5a0040 -> Node0x5a06d0;
	Node0x5a06d0 -> Node0x5a0740;
	Node0x59ff60 -> Node0x5a0740;
	Node0x5a0740 -> Node0x5a07b0;
	Node0x5a0120 -> Node0x5a07b0;
	Node0x5a07b0 -> Node0x5a0820;
	Node0x5a0200 -> Node0x5a0820;
	Node0x5a0820 -> Node0x5a0890;
	Node0x5a0270 -> Node0x5a0890;
	Node0x5a0890 -> Node0x5a0900;
	Node0x5a0430 -> Node0x5a0900;
	Node0x5a0900 -> Node0x5a0970;
	Node0x5a0510 -> Node0x5a0970;
	Node0x5a0970 -> Node0x5a09e0;
	Node0x5a0580 -> Node0x5a09e0;
	Node0x5a09e0 -> Node0x5a0c60;
	Node0x5a0350 -> Node0x5a0c60;
	Node0x59ffd0 -> Node0x5a0cd0;
	Node0x5a0c60 -> Node0x5a0cd0;
	Node0x5a0cd0 -> Node0x53e9d8;
	Node0x53e9d8 -> Node0x5a0d60;
	Node0x59e558 -> Node0x5a0fb8;
	Node0x59e018 -> Node0x5a1118;
}
