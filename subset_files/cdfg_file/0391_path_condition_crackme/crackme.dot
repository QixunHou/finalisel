digraph "DFG for'crackme' function" {
	Node0x13fa9b0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x13fb030[shape=record, label="  %6 = xor i32 %2, -1"];
	Node0x13fb0a0[shape=record, label="  %7 = or i32 %6, %1"];
	Node0x13fb110[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x13fb1b0[shape=record, label="  %9 = add i32 %0, 1"];
	Node0x13fb220[shape=record, label="  %10 = add i32 %9, %0"];
	Node0x13fb290[shape=record, label="  %11 = sub i32 %10, %5"];
	Node0x13fb300[shape=record, label="  %12 = add i32 %11, %7"];
	Node0x13fb370[shape=record, label="  %13 = shl i32 %5, 1"];
	Node0x13fb3e0[shape=record, label="  %14 = or i32 %13, 1"];
	Node0x13fb450[shape=record, label="  %15 = shl i32 %7, 1"];
	Node0x13fb4f0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x13fb560[shape=record, label="  %17 = and i32 %6, %1"];
	Node0x13fb5d0[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x13fb640[shape=record, label="  %19 = xor i32 %3, %0"];
	Node0x13fb6b0[shape=record, label="  %20 = or i32 %8, %3"];
	Node0x13fb720[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x13fb790[shape=record, label="  %22 = and i32 %8, %3"];
	Node0x13fb830[shape=record, label="  %23 = mul i32 %22, -5"];
	Node0x13fb8a0[shape=record, label="  %24 = sub i32 %6, %1"];
	Node0x13fb910[shape=record, label="  %25 = add i32 %24, %20"];
	Node0x13fb980[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x13fb9f0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x13fba90[shape=record, label="  %28 = add i32 %1, 3"];
	Node0x13fbb00[shape=record, label="  %29 = add i32 %28, %3"];
	Node0x13fbb70[shape=record, label="  %30 = sub i32 %29, %18"];
	Node0x13fbbe0[shape=record, label="  %31 = add i32 %30, %19"];
	Node0x13fbc50[shape=record, label="  %32 = add i32 %31, %21"];
	Node0x13fbed0[shape=record, label="  %33 = add i32 %32, %14"];
	Node0x13fbf40[shape=record, label="  %34 = sub i32 %33, %16"];
	Node0x13fbfb0[shape=record, label="  %35 = add i32 %34, %23"];
	Node0x13fc020[shape=record, label="  %36 = add i32 %35, %27"];
	Node0x13fc090[shape=record, label="  %37 = icmp eq i32 %12, %36"];
	Node0x139b268[shape=record, label="  %38 = select i1 %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x13fc530[shape=record, label="  %39 = tail call i32 @puts(i8* nonnull dereferenceable(1) %38)"];
	Node0x13fc580[shape=record, label="  ret void"];
	Node0x13fa9b0 -> Node0x13fb030;
	Node0x13fb030 -> Node0x13fb0a0;
	Node0x13fb0a0 -> Node0x13fb110;
	Node0x13fb110 -> Node0x13fb1b0;
	Node0x13fb1b0 -> Node0x13fb220;
	Node0x13fb220 -> Node0x13fb290;
	Node0x13fb290 -> Node0x13fb300;
	Node0x13fb300 -> Node0x13fb370;
	Node0x13fb370 -> Node0x13fb3e0;
	Node0x13fb3e0 -> Node0x13fb450;
	Node0x13fb450 -> Node0x13fb4f0;
	Node0x13fb4f0 -> Node0x13fb560;
	Node0x13fb560 -> Node0x13fb5d0;
	Node0x13fb5d0 -> Node0x13fb640;
	Node0x13fb640 -> Node0x13fb6b0;
	Node0x13fb6b0 -> Node0x13fb720;
	Node0x13fb720 -> Node0x13fb790;
	Node0x13fb790 -> Node0x13fb830;
	Node0x13fb830 -> Node0x13fb8a0;
	Node0x13fb8a0 -> Node0x13fb910;
	Node0x13fb910 -> Node0x13fb980;
	Node0x13fb980 -> Node0x13fb9f0;
	Node0x13fb9f0 -> Node0x13fba90;
	Node0x13fba90 -> Node0x13fbb00;
	Node0x13fbb00 -> Node0x13fbb70;
	Node0x13fbb70 -> Node0x13fbbe0;
	Node0x13fbbe0 -> Node0x13fbc50;
	Node0x13fbc50 -> Node0x13fbed0;
	Node0x13fbed0 -> Node0x13fbf40;
	Node0x13fbf40 -> Node0x13fbfb0;
	Node0x13fbfb0 -> Node0x13fc020;
	Node0x13fc020 -> Node0x13fc090;
	Node0x13fc090 -> Node0x139b268;
	Node0x139b268 -> Node0x13fc530;
	Node0x13fc530 -> Node0x13fc580;
edge [color=red]
	Node0x13fb030 -> Node0x13fb0a0;
	Node0x13fb1b0 -> Node0x13fb220;
	Node0x13fb220 -> Node0x13fb290;
	Node0x13fa9b0 -> Node0x13fb290;
	Node0x13fb290 -> Node0x13fb300;
	Node0x13fb0a0 -> Node0x13fb300;
	Node0x13fa9b0 -> Node0x13fb370;
	Node0x13fb370 -> Node0x13fb3e0;
	Node0x13fb0a0 -> Node0x13fb450;
	Node0x13fb450 -> Node0x13fb4f0;
	Node0x13fb030 -> Node0x13fb560;
	Node0x13fb560 -> Node0x13fb5d0;
	Node0x13fb110 -> Node0x13fb6b0;
	Node0x13fb110 -> Node0x13fb790;
	Node0x13fb790 -> Node0x13fb830;
	Node0x13fb030 -> Node0x13fb8a0;
	Node0x13fb8a0 -> Node0x13fb910;
	Node0x13fb6b0 -> Node0x13fb910;
	Node0x13fb910 -> Node0x13fb980;
	Node0x13fb640 -> Node0x13fb980;
	Node0x13fb980 -> Node0x13fb9f0;
	Node0x13fba90 -> Node0x13fbb00;
	Node0x13fbb00 -> Node0x13fbb70;
	Node0x13fb5d0 -> Node0x13fbb70;
	Node0x13fbb70 -> Node0x13fbbe0;
	Node0x13fb640 -> Node0x13fbbe0;
	Node0x13fbbe0 -> Node0x13fbc50;
	Node0x13fb720 -> Node0x13fbc50;
	Node0x13fbc50 -> Node0x13fbed0;
	Node0x13fb3e0 -> Node0x13fbed0;
	Node0x13fbed0 -> Node0x13fbf40;
	Node0x13fb4f0 -> Node0x13fbf40;
	Node0x13fbf40 -> Node0x13fbfb0;
	Node0x13fb830 -> Node0x13fbfb0;
	Node0x13fbfb0 -> Node0x13fc020;
	Node0x13fb9f0 -> Node0x13fc020;
	Node0x13fb300 -> Node0x13fc090;
	Node0x13fc020 -> Node0x13fc090;
	Node0x13fc090 -> Node0x139b268;
	Node0x139b268 -> Node0x13fc530;
}
