digraph "DFG for'main' function" {
	Node0x13fc748[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x13fc7c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x13fc858[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x13fc8b8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x13fc968[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x13fcd98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13fce78[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x13fcf78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13fd038[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x13fd0e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x13fd1a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x13fd258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x13f79e0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x13fd458[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x13fe3c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x13fea38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x13fea98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x13feb10[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x13feb80[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0x13febf0[shape=record, label="  %16 = or i32 %11, %15"];
	Node0x13fec60[shape=record, label="  %17 = xor i32 %10, -1"];
	Node0x13fecd0[shape=record, label="  %18 = shl i32 %10, 1"];
	Node0x13fed40[shape=record, label="  %19 = or i32 %18, 1"];
	Node0x13fedb0[shape=record, label="  %20 = sub i32 %19, %14"];
	Node0x13fee20[shape=record, label="  %21 = add i32 %20, %16"];
	Node0x13fee90[shape=record, label="  %22 = shl i32 %14, 1"];
	Node0x13fef00[shape=record, label="  %23 = or i32 %22, 1"];
	Node0x13fef70[shape=record, label="  %24 = shl i32 %16, 1"];
	Node0x13fefe0[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x13ff050[shape=record, label="  %26 = and i32 %11, %15"];
	Node0x13ff0c0[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x13ff130[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0x13ff1a0[shape=record, label="  %29 = or i32 %13, %17"];
	Node0x13ff210[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x13ff280[shape=record, label="  %31 = and i32 %13, %17"];
	Node0x13ff2f0[shape=record, label="  %32 = mul i32 %31, -5"];
	Node0x13ff360[shape=record, label="  %33 = sub i32 %15, %11"];
	Node0x13ff3d0[shape=record, label="  %34 = add i32 %33, %29"];
	Node0x13ff440[shape=record, label="  %35 = add i32 %34, %28"];
	Node0x13ff4b0[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x13ff520[shape=record, label="  %37 = add i32 %11, 3"];
	Node0x13ff590[shape=record, label="  %38 = add i32 %37, %13"];
	Node0x13ff600[shape=record, label="  %39 = sub i32 %38, %27"];
	Node0x13ff670[shape=record, label="  %40 = add i32 %39, %28"];
	Node0x13ff6e0[shape=record, label="  %41 = add i32 %40, %30"];
	Node0x13ff750[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x13ff7c0[shape=record, label="  %43 = sub i32 %42, %25"];
	Node0x13ff830[shape=record, label="  %44 = add i32 %43, %32"];
	Node0x13ff8a0[shape=record, label="  %45 = add i32 %44, %36"];
	Node0x13ff910[shape=record, label="  %46 = icmp eq i32 %21, %45"];
	Node0x139c8b8[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x13ff9a0[shape=record, label="  %48 = call i32 @puts(i8* nonnull dereferenceable(1) %47) #5"];
	Node0x13ffc48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x13ffda8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x13ffeb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13fffc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1400088[shape=record, label="  ret i32 0"];
	Node0x13fc748 -> Node0x13fc7c8;
	Node0x13fc7c8 -> Node0x13fc858;
	Node0x13fc858 -> Node0x13fc8b8;
	Node0x13fc8b8 -> Node0x13fc968;
	Node0x13fc968 -> Node0x13fcd98;
	Node0x13fcd98 -> Node0x13fce78;
	Node0x13fce78 -> Node0x13fcf78;
	Node0x13fcf78 -> Node0x13fd038;
	Node0x13fd038 -> Node0x13fd0e8;
	Node0x13fd0e8 -> Node0x13fd1a8;
	Node0x13fd1a8 -> Node0x13fd258;
	Node0x13fd258 -> Node0x13f79e0;
	Node0x13f79e0 -> Node0x13fd458;
	Node0x13fd458 -> Node0x13fe3c8;
	Node0x13fe3c8 -> Node0x13fea38;
	Node0x13fea38 -> Node0x13fea98;
	Node0x13fea98 -> Node0x13feb10;
	Node0x13feb10 -> Node0x13feb80;
	Node0x13feb80 -> Node0x13febf0;
	Node0x13febf0 -> Node0x13fec60;
	Node0x13fec60 -> Node0x13fecd0;
	Node0x13fecd0 -> Node0x13fed40;
	Node0x13fed40 -> Node0x13fedb0;
	Node0x13fedb0 -> Node0x13fee20;
	Node0x13fee20 -> Node0x13fee90;
	Node0x13fee90 -> Node0x13fef00;
	Node0x13fef00 -> Node0x13fef70;
	Node0x13fef70 -> Node0x13fefe0;
	Node0x13fefe0 -> Node0x13ff050;
	Node0x13ff050 -> Node0x13ff0c0;
	Node0x13ff0c0 -> Node0x13ff130;
	Node0x13ff130 -> Node0x13ff1a0;
	Node0x13ff1a0 -> Node0x13ff210;
	Node0x13ff210 -> Node0x13ff280;
	Node0x13ff280 -> Node0x13ff2f0;
	Node0x13ff2f0 -> Node0x13ff360;
	Node0x13ff360 -> Node0x13ff3d0;
	Node0x13ff3d0 -> Node0x13ff440;
	Node0x13ff440 -> Node0x13ff4b0;
	Node0x13ff4b0 -> Node0x13ff520;
	Node0x13ff520 -> Node0x13ff590;
	Node0x13ff590 -> Node0x13ff600;
	Node0x13ff600 -> Node0x13ff670;
	Node0x13ff670 -> Node0x13ff6e0;
	Node0x13ff6e0 -> Node0x13ff750;
	Node0x13ff750 -> Node0x13ff7c0;
	Node0x13ff7c0 -> Node0x13ff830;
	Node0x13ff830 -> Node0x13ff8a0;
	Node0x13ff8a0 -> Node0x13ff910;
	Node0x13ff910 -> Node0x139c8b8;
	Node0x139c8b8 -> Node0x13ff9a0;
	Node0x13ff9a0 -> Node0x13ffc48;
	Node0x13ffc48 -> Node0x13ffda8;
	Node0x13ffda8 -> Node0x13ffeb8;
	Node0x13ffeb8 -> Node0x13fffc8;
	Node0x13fffc8 -> Node0x1400088;
edge [color=red]
	Node0x13fc748 -> Node0x13fc968;
	Node0x13fc968 -> Node0x13fcd98;
	Node0x13fc7c8 -> Node0x13fce78;
	Node0x13fce78 -> Node0x13fcf78;
	Node0x13fc858 -> Node0x13fd038;
	Node0x13fd038 -> Node0x13fd0e8;
	Node0x13fc8b8 -> Node0x13fd1a8;
	Node0x13fd1a8 -> Node0x13fd258;
	Node0x13fc748 -> Node0x13f79e0;
	Node0x13fc7c8 -> Node0x13f79e0;
	Node0x13fc858 -> Node0x13f79e0;
	Node0x13fc8b8 -> Node0x13f79e0;
	Node0x13fc748 -> Node0x13fd458;
	Node0x13fc7c8 -> Node0x13fe3c8;
	Node0x13fc858 -> Node0x13fea38;
	Node0x13fc8b8 -> Node0x13fea98;
	Node0x13fea38 -> Node0x13feb10;
	Node0x13fe3c8 -> Node0x13feb10;
	Node0x13fea38 -> Node0x13feb80;
	Node0x13fe3c8 -> Node0x13febf0;
	Node0x13feb80 -> Node0x13febf0;
	Node0x13fd458 -> Node0x13fec60;
	Node0x13fd458 -> Node0x13fecd0;
	Node0x13fecd0 -> Node0x13fed40;
	Node0x13fed40 -> Node0x13fedb0;
	Node0x13feb10 -> Node0x13fedb0;
	Node0x13fedb0 -> Node0x13fee20;
	Node0x13febf0 -> Node0x13fee20;
	Node0x13feb10 -> Node0x13fee90;
	Node0x13fee90 -> Node0x13fef00;
	Node0x13febf0 -> Node0x13fef70;
	Node0x13fef70 -> Node0x13fefe0;
	Node0x13fe3c8 -> Node0x13ff050;
	Node0x13feb80 -> Node0x13ff050;
	Node0x13ff050 -> Node0x13ff0c0;
	Node0x13fea98 -> Node0x13ff130;
	Node0x13fd458 -> Node0x13ff130;
	Node0x13fea98 -> Node0x13ff1a0;
	Node0x13fec60 -> Node0x13ff1a0;
	Node0x13fea98 -> Node0x13ff210;
	Node0x13fd458 -> Node0x13ff210;
	Node0x13fea98 -> Node0x13ff280;
	Node0x13fec60 -> Node0x13ff280;
	Node0x13ff280 -> Node0x13ff2f0;
	Node0x13feb80 -> Node0x13ff360;
	Node0x13fe3c8 -> Node0x13ff360;
	Node0x13ff360 -> Node0x13ff3d0;
	Node0x13ff1a0 -> Node0x13ff3d0;
	Node0x13ff3d0 -> Node0x13ff440;
	Node0x13ff130 -> Node0x13ff440;
	Node0x13ff440 -> Node0x13ff4b0;
	Node0x13fe3c8 -> Node0x13ff520;
	Node0x13ff520 -> Node0x13ff590;
	Node0x13fea98 -> Node0x13ff590;
	Node0x13ff590 -> Node0x13ff600;
	Node0x13ff0c0 -> Node0x13ff600;
	Node0x13ff600 -> Node0x13ff670;
	Node0x13ff130 -> Node0x13ff670;
	Node0x13ff670 -> Node0x13ff6e0;
	Node0x13ff210 -> Node0x13ff6e0;
	Node0x13ff6e0 -> Node0x13ff750;
	Node0x13fef00 -> Node0x13ff750;
	Node0x13ff750 -> Node0x13ff7c0;
	Node0x13fefe0 -> Node0x13ff7c0;
	Node0x13ff7c0 -> Node0x13ff830;
	Node0x13ff2f0 -> Node0x13ff830;
	Node0x13ff830 -> Node0x13ff8a0;
	Node0x13ff4b0 -> Node0x13ff8a0;
	Node0x13fee20 -> Node0x13ff910;
	Node0x13ff8a0 -> Node0x13ff910;
	Node0x13ff910 -> Node0x139c8b8;
	Node0x139c8b8 -> Node0x13ff9a0;
	Node0x13fd1a8 -> Node0x13ffc48;
	Node0x13fd038 -> Node0x13ffda8;
	Node0x13fce78 -> Node0x13ffeb8;
	Node0x13fc968 -> Node0x13fffc8;
}
