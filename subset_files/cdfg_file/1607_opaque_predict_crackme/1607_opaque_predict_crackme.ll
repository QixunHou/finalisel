; ModuleID = '../.././c_source_file/1607_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1607_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = and i32 %1, %0
  %5 = xor i32 %4, -1
  %6 = xor i32 %5, %2
  %7 = xor i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = and i32 %8, %2
  %10 = xor i32 %2, %1
  %11 = and i32 %10, %5
  %12 = xor i32 %0, -1
  %13 = and i32 %2, %1
  %14 = and i32 %13, %12
  %15 = or i32 %2, %1
  %16 = and i32 %15, %0
  %17 = xor i32 %14, -1
  %18 = xor i32 %16, %17
  %19 = xor i32 %1, -1
  %20 = and i32 %19, %2
  %21 = and i32 %20, %0
  %22 = or i32 %10, %0
  %23 = xor i32 %22, -1
  %24 = or i32 %21, %23
  %25 = xor i32 %2, -1
  %26 = or i32 %25, %1
  %27 = or i32 %26, %12
  %28 = and i32 %19, %0
  %29 = xor i32 %28, -1
  %30 = xor i32 %29, %2
  %31 = xor i32 %13, -1
  %32 = or i32 %31, %12
  %33 = or i32 %19, %0
  %34 = xor i32 %33, -1
  %35 = shl i32 %34, 1
  %36 = and i32 %20, %12
  %37 = or i32 %10, %12
  %38 = xor i32 %37, -1
  %39 = or i32 %36, %38
  %40 = xor i32 %2, %0
  %41 = or i32 %40, %19
  %42 = or i32 %1, %0
  %43 = xor i32 %42, -1
  %44 = xor i32 %43, %2
  %45 = xor i32 %34, %2
  %46 = shl i32 %45, 1
  %47 = and i32 %25, %1
  %48 = and i32 %31, %12
  %49 = xor i32 %15, %4
  %50 = xor i32 %26, -1
  %51 = add i32 %26, 1
  %52 = shl i32 %0, 2
  %53 = and i32 %2, %0
  %54 = or i32 %53, %7
  %55 = or i32 %2, %0
  %56 = xor i32 %55, -1
  %57 = or i32 %56, %19
  %58 = and i32 %40, %8
  %59 = and i32 %25, %0
  %60 = xor i32 %59, %1
  %61 = xor i32 %26, %0
  %62 = shl i32 %61, 1
  %63 = or i32 %25, %0
  %64 = or i32 %53, %34
  %65 = or i32 %56, %8
  %66 = xor i32 %53, -1
  %67 = and i32 %66, %19
  %68 = and i32 %26, %0
  %69 = and i32 %63, %8
  %70 = xor i32 %40, -1
  %71 = or i32 %7, %70
  %72 = shl i32 %12, 1
  %73 = xor i32 %53, %1
  %74 = or i32 %4, %25
  %75 = or i32 %19, %2
  %76 = and i32 %75, %12
  %77 = xor i32 %76, 1073741823
  %78 = xor i32 %77, %21
  %79 = and i32 %33, %25
  %80 = and i32 %13, %0
  %81 = xor i32 %10, %0
  %82 = xor i32 %80, %81
  %83 = xor i32 %59, -1
  %84 = and i32 %83, %1
  %85 = and i32 %83, %8
  %86 = add i32 %4, 1
  %87 = xor i32 %10, -1
  %88 = or i32 %4, %87
  %89 = shl i32 %88, 1
  %90 = and i32 %75, %0
  %91 = xor i32 %90, -1
  %92 = xor i32 %36, %91
  %93 = xor i32 %56, %1
  %94 = xor i32 %53, %42
  %95 = xor i32 %53, %15
  %96 = and i32 %87, %12
  %97 = xor i32 %47, -1
  %98 = shl i32 %97, 1
  %99 = or i32 %25, %43
  %100 = add i32 %59, 1
  %101 = or i32 %36, %90
  %102 = xor i32 %31, %0
  %103 = or i32 %40, %8
  %104 = or i32 %70, %8
  %105 = and i32 %87, %29
  %106 = or i32 %7, %25
  %107 = and i32 %10, %12
  %108 = and i32 %40, %42
  %109 = or i32 %31, %0
  %110 = shl i32 %109, 1
  %111 = and i32 %7, %2
  %112 = xor i32 %21, %22
  %113 = shl i32 %112, 1
  %114 = or i32 %21, %76
  %115 = add i32 %10, 1
  %116 = and i32 %7, %83
  %117 = or i32 %10, %43
  %118 = and i32 %40, %1
  %119 = and i32 %55, %8
  %120 = or i32 %59, %13
  %121 = xor i32 %15, %0
  %122 = or i32 %80, %121
  %123 = and i32 %42, %25
  %124 = or i32 %21, %81
  %125 = add i32 %2, 1
  %126 = and i32 %40, %19
  %127 = or i32 %70, %1
  %128 = xor i32 %47, %0
  %129 = or i32 %70, %19
  %130 = or i32 %28, %2
  %131 = shl i32 %130, 1
  %132 = or i32 %50, %12
  %133 = or i32 %47, %0
  %134 = or i32 %53, %8
  %135 = xor i32 %81, -1
  %136 = or i32 %80, %135
  %137 = xor i32 %63, -1
  %138 = or i32 %137, %19
  %139 = or i32 %14, %16
  %140 = or i32 %4, %70
  %141 = or i32 %10, %4
  %142 = or i32 %59, %8
  %143 = or i32 %15, %12
  %144 = and i32 %87, %0
  %145 = xor i32 %15, -1
  %146 = xor i32 %145, %0
  %147 = xor i32 %21, %135
  %148 = xor i32 %28, %2
  %149 = and i32 %40, %5
  %150 = or i32 %87, %0
  %151 = and i32 %55, %7
  %152 = or i32 %50, %0
  %153 = and i32 %42, %87
  %154 = xor i32 %83, %1
  %155 = and i32 %70, %1
  %156 = xor i32 %53, %33
  %157 = or i32 %70, %34
  %158 = and i32 %63, %7
  %159 = and i32 %97, %12
  %160 = or i32 %87, %43
  %161 = and i32 %29, %2
  %162 = add i32 %15, 1
  %163 = or i32 %4, %50
  %164 = shl i32 %163, 2
  %165 = and i32 %66, %8
  %166 = and i32 %7, %66
  %167 = xor i32 %55, %1
  %168 = or i32 %59, %50
  %169 = or i32 %28, %25
  %170 = and i32 %70, %19
  %171 = and i32 %15, %12
  %172 = or i32 %80, %171
  %173 = shl i32 %172, 1
  %174 = or i32 %8, %2
  %175 = and i32 %63, %19
  %176 = and i32 %40, %33
  %177 = or i32 %40, %28
  %178 = and i32 %26, %12
  %179 = or i32 %56, %1
  %180 = or i32 %13, %12
  %181 = and i32 %10, %0
  %182 = xor i32 %181, %17
  %183 = or i32 %47, %12
  %184 = or i32 %25, %8
  %185 = xor i32 %63, %1
  %186 = or i32 %87, %34
  %187 = and i32 %7, %25
  %188 = xor i32 %66, %1
  %189 = shl i32 %188, 1
  %190 = or i32 %80, %107
  %191 = and i32 %5, %2
  %192 = or i32 %28, %87
  %193 = xor i32 %13, %0
  %194 = or i32 %87, %12
  %195 = xor i32 %80, -1
  %196 = xor i32 %107, %195
  %197 = and i32 %10, %29
  %198 = or i32 %47, %28
  %199 = or i32 %59, %1
  %200 = or i32 %10, %34
  %201 = or i32 %34, %2
  %202 = and i32 %33, %70
  %203 = or i32 %40, %4
  %204 = shl i32 %203, 2
  %205 = or i32 %59, %7
  %206 = xor i32 %33, %2
  %207 = xor i32 %97, %0
  %208 = or i32 %43, %2
  %209 = xor i32 %121, %195
  %210 = or i32 %7, %56
  %211 = shl i32 %210, 1
  %212 = or i32 %4, %2
  %213 = xor i32 %63, %4
  %214 = and i32 %55, %19
  %215 = shl i32 %214, 1
  %216 = or i32 %28, %70
  %217 = and i32 %7, %70
  %218 = and i32 %33, %2
  %219 = shl i32 %66, 1
  %220 = or i32 %59, %19
  %221 = or i32 %137, %8
  %222 = xor i32 %26, %4
  %223 = and i32 %42, %2
  %224 = or i32 %53, %47
  %225 = or i32 %14, %181
  %226 = shl i32 %225, 1
  %227 = or i32 %13, %28
  %228 = shl i32 %227, 1
  %229 = xor i32 %28, %31
  %230 = and i32 %33, %87
  %231 = or i32 %53, %43
  %232 = or i32 %4, %145
  %233 = or i32 %4, %56
  %234 = shl i32 %233, 1
  %235 = or i32 %26, %0
  %236 = xor i32 %36, %37
  %237 = and i32 %10, %42
  %238 = or i32 %40, %1
  %239 = and i32 %70, %29
  %240 = or i32 %4, %137
  %241 = xor i32 %75, %0
  %242 = xor i32 %241, -1
  %243 = xor i32 %21, %242
  %244 = or i32 %15, %0
  %245 = or i32 %10, %28
  %246 = shl i32 %181, 1
  %247 = or i32 %145, %12
  %248 = or i32 %53, %1
  %249 = xor i32 %4, %2
  %250 = or i32 %53, %145
  %251 = or i32 %53, %19
  %252 = shl i32 %251, 1
  %253 = or i32 %70, %43
  %254 = or i32 %40, %34
  %255 = add i32 %63, 1
  %256 = or i32 %97, %12
  %257 = xor i32 %55, %4
  %258 = or i32 %97, %0
  %259 = and i32 %87, %5
  %260 = and i32 %63, %1
  %261 = or i32 %137, %1
  %262 = or i32 %7, %137
  %263 = and i32 %40, %29
  %264 = shl i32 %263, 1
  %265 = and i32 %55, %1
  %266 = and i32 %25, %5
  %267 = or i32 %21, %241
  %268 = or i32 %13, %0
  %269 = xor i32 %42, %2
  %270 = or i32 %145, %0
  %271 = or i32 %7, %2
  %272 = and i32 %66, %1
  %273 = and i32 %40, %7
  %274 = and i32 %70, %5
  %275 = shl i32 %274, 1
  %276 = and i32 %97, %0
  %277 = shl i32 %276, 1
  %278 = and i32 %10, %33
  %279 = and i32 %42, %70
  %280 = and i32 %31, %0
  %281 = xor i32 %59, %26
  %282 = and i32 %25, %8
  %283 = xor i32 %59, %31
  %284 = shl i32 %283, 1
  %285 = xor i32 %137, %1
  %286 = or i32 %40, %7
  %287 = xor i32 %171, 2147483647
  %288 = xor i32 %287, %80
  %289 = and i32 %25, %29
  %290 = xor i32 %28, %97
  %291 = and i32 %83, %19
  %292 = xor i32 %50, %0
  %293 = xor i32 %87, %0
  %294 = or i32 %40, %43
  %295 = and i32 %145, %12
  %296 = mul i32 %295, 20
  %297 = and i32 %47, %12
  %298 = and i32 %145, %0
  %299 = mul i32 %298, -10
  %300 = and i32 %47, %0
  %301 = mul i32 %300, -12
  %302 = and i32 %50, %12
  %303 = mul i32 %14, 11
  %304 = and i32 %50, %0
  %305 = shl i32 %304, 4
  %306 = mul i32 %80, 13
  %307 = sub i32 %125, %216
  %308 = add i32 %307, %302
  %309 = add i32 %308, %126
  %310 = add i32 %309, %94
  %311 = add i32 %310, %85
  %312 = mul i32 %311, 3
  %313 = add i32 %297, %278
  %314 = sub i32 %155, %313
  %315 = sub i32 %314, %143
  %316 = add i32 %315, %120
  %317 = mul i32 %316, 5
  %318 = sub i32 %176, %9
  %319 = add i32 %318, %78
  %320 = shl i32 %319, 2
  %321 = sub i32 -2, %1
  %322 = add i32 %321, %10
  %323 = add i32 %322, %249
  %324 = add i32 %323, %70
  %325 = add i32 %324, %218
  %326 = add i32 %325, %31
  %327 = add i32 %326, %99
  %328 = add i32 %327, %44
  %329 = add i32 %328, %294
  %330 = add i32 %329, %229
  %331 = add i32 %330, %222
  %332 = add i32 %331, %202
  %333 = add i32 %332, %170
  %334 = add i32 %333, %166
  %335 = add i32 %334, %159
  %336 = add i32 %335, %156
  %337 = add i32 %336, %141
  %338 = add i32 %337, %103
  %339 = add i32 %338, %65
  %340 = add i32 %339, %41
  %341 = add i32 %340, %190
  %342 = add i32 %341, %124
  %343 = add i32 %342, %288
  %344 = shl i32 %343, 1
  %345 = sub i32 1, %52
  %346 = sub i32 %345, %72
  %347 = add i32 %346, %2
  %348 = add i32 %347, %29
  %349 = add i32 %348, %86
  %350 = sub i32 %349, %28
  %351 = sub i32 %350, %33
  %352 = sub i32 %351, %4
  %353 = add i32 %352, %13
  %354 = add i32 %353, %30
  %355 = sub i32 %354, %35
  %356 = add i32 %355, %47
  %357 = add i32 %356, %51
  %358 = add i32 %357, %59
  %359 = sub i32 %358, %63
  %360 = sub i32 %359, %74
  %361 = sub i32 %360, %79
  %362 = add i32 %361, %100
  %363 = add i32 %362, %26
  %364 = sub i32 %363, %106
  %365 = add i32 %364, %111
  %366 = add i32 %365, %115
  %367 = add i32 %366, %123
  %368 = sub i32 %367, %53
  %369 = add i32 %368, %40
  %370 = add i32 %369, %56
  %371 = sub i32 %370, %148
  %372 = sub i32 %371, %161
  %373 = add i32 %372, %162
  %374 = add i32 %373, %169
  %375 = add i32 %374, %174
  %376 = sub i32 %375, %184
  %377 = sub i32 %376, %187
  %378 = add i32 %377, %191
  %379 = sub i32 %378, %201
  %380 = add i32 %379, %206
  %381 = sub i32 %380, %208
  %382 = sub i32 %381, %15
  %383 = add i32 %382, %212
  %384 = add i32 %383, %223
  %385 = add i32 %384, %255
  %386 = sub i32 %385, %55
  %387 = sub i32 %386, %266
  %388 = add i32 %387, %269
  %389 = add i32 %388, %271
  %390 = sub i32 %389, %282
  %391 = add i32 %390, %289
  %392 = sub i32 %391, %11
  %393 = add i32 %392, %27
  %394 = sub i32 %393, %32
  %395 = sub i32 %394, %46
  %396 = add i32 %395, %48
  %397 = add i32 %396, %49
  %398 = add i32 %397, %54
  %399 = add i32 %398, %57
  %400 = add i32 %399, %58
  %401 = add i32 %400, %60
  %402 = sub i32 %401, %64
  %403 = sub i32 %402, %67
  %404 = sub i32 %403, %68
  %405 = add i32 %404, %69
  %406 = add i32 %405, %71
  %407 = sub i32 %406, %73
  %408 = sub i32 %407, %84
  %409 = sub i32 %408, %93
  %410 = add i32 %409, %95
  %411 = sub i32 %410, %96
  %412 = sub i32 %411, %98
  %413 = add i32 %412, %16
  %414 = add i32 %413, %22
  %415 = sub i32 %414, %102
  %416 = add i32 %415, %104
  %417 = sub i32 %416, %105
  %418 = sub i32 %417, %107
  %419 = add i32 %418, %108
  %420 = add i32 %419, %116
  %421 = sub i32 %420, %117
  %422 = add i32 %421, %118
  %423 = sub i32 %422, %119
  %424 = sub i32 %423, %127
  %425 = add i32 %424, %128
  %426 = sub i32 %425, %129
  %427 = sub i32 %426, %131
  %428 = sub i32 %427, %132
  %429 = sub i32 %428, %133
  %430 = sub i32 %429, %134
  %431 = add i32 %430, %138
  %432 = add i32 %431, %140
  %433 = add i32 %432, %142
  %434 = add i32 %433, %144
  %435 = sub i32 %434, %146
  %436 = sub i32 %435, %149
  %437 = add i32 %436, %150
  %438 = sub i32 %437, %151
  %439 = add i32 %438, %152
  %440 = sub i32 %439, %153
  %441 = add i32 %440, %154
  %442 = sub i32 %441, %157
  %443 = add i32 %442, %158
  %444 = add i32 %443, %160
  %445 = sub i32 %444, %165
  %446 = add i32 %445, %167
  %447 = add i32 %446, %168
  %448 = sub i32 %447, %175
  %449 = add i32 %448, %177
  %450 = sub i32 %449, %178
  %451 = add i32 %450, %179
  %452 = add i32 %451, %180
  %453 = sub i32 %452, %183
  %454 = add i32 %453, %185
  %455 = sub i32 %454, %186
  %456 = add i32 %455, %192
  %457 = add i32 %456, %193
  %458 = sub i32 %457, %194
  %459 = add i32 %458, %121
  %460 = sub i32 %459, %171
  %461 = add i32 %460, %197
  %462 = sub i32 %461, %198
  %463 = add i32 %462, %199
  %464 = add i32 %463, %200
  %465 = add i32 %464, %205
  %466 = add i32 %465, %207
  %467 = sub i32 %466, %213
  %468 = add i32 %467, %217
  %469 = sub i32 %468, %219
  %470 = add i32 %469, %220
  %471 = sub i32 %470, %221
  %472 = add i32 %471, %224
  %473 = sub i32 %472, %230
  %474 = sub i32 %473, %231
  %475 = add i32 %474, %232
  %476 = sub i32 %475, %235
  %477 = add i32 %476, %237
  %478 = sub i32 %477, %238
  %479 = sub i32 %478, %239
  %480 = add i32 %479, %240
  %481 = add i32 %480, %244
  %482 = add i32 %481, %245
  %483 = sub i32 %482, %247
  %484 = add i32 %483, %248
  %485 = sub i32 %484, %250
  %486 = add i32 %485, %253
  %487 = sub i32 %486, %254
  %488 = sub i32 %487, %256
  %489 = add i32 %488, %257
  %490 = add i32 %489, %258
  %491 = sub i32 %490, %37
  %492 = sub i32 %491, %259
  %493 = add i32 %492, %260
  %494 = sub i32 %493, %261
  %495 = add i32 %494, %262
  %496 = add i32 %495, %265
  %497 = sub i32 %496, %268
  %498 = add i32 %497, %270
  %499 = add i32 %498, %272
  %500 = add i32 %499, %273
  %501 = add i32 %500, %279
  %502 = sub i32 %501, %280
  %503 = add i32 %502, %281
  %504 = add i32 %503, %81
  %505 = sub i32 %504, %285
  %506 = sub i32 %505, %286
  %507 = sub i32 %506, %290
  %508 = add i32 %507, %291
  %509 = add i32 %508, %292
  %510 = sub i32 %509, %293
  %511 = sub i32 %510, %18
  %512 = sub i32 %511, %24
  %513 = add i32 %512, %39
  %514 = sub i32 %513, %62
  %515 = add i32 %514, %82
  %516 = sub i32 %515, %89
  %517 = sub i32 %516, %92
  %518 = add i32 %517, %101
  %519 = sub i32 %518, %110
  %520 = sub i32 %519, %114
  %521 = add i32 %520, %122
  %522 = sub i32 %521, %136
  %523 = sub i32 %522, %139
  %524 = sub i32 %523, %147
  %525 = sub i32 %524, %164
  %526 = sub i32 %525, %182
  %527 = sub i32 %526, %189
  %528 = sub i32 %527, %196
  %529 = sub i32 %528, %204
  %530 = add i32 %529, %209
  %531 = sub i32 %530, %211
  %532 = sub i32 %531, %215
  %533 = sub i32 %532, %228
  %534 = sub i32 %533, %234
  %535 = add i32 %534, %236
  %536 = add i32 %535, %243
  %537 = sub i32 %536, %246
  %538 = sub i32 %537, %252
  %539 = sub i32 %538, %264
  %540 = sub i32 %539, %267
  %541 = sub i32 %540, %275
  %542 = sub i32 %541, %277
  %543 = sub i32 %542, %284
  %544 = add i32 %543, %296
  %545 = add i32 %544, %299
  %546 = add i32 %545, %301
  %547 = add i32 %546, %303
  %548 = add i32 %547, %305
  %549 = add i32 %548, %306
  %550 = sub i32 %549, %113
  %551 = sub i32 %550, %173
  %552 = sub i32 %551, %226
  %553 = add i32 %552, %317
  %554 = add i32 %553, %320
  %555 = add i32 %554, %312
  %556 = add i32 %555, %344
  %557 = icmp eq i32 %6, %556
  %558 = select i1 %557, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %559 = tail call i32 @puts(i8* nonnull dereferenceable(1) %558)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
