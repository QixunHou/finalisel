digraph "DFG for'main' function" {
	Node0x8a7028[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x8a70a8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x8a7138[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x8a7198[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x8a7618[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8a76f8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x8a77f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8a78b8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x8a7968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8a7bc8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x8a7c88[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x8a8bf8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x8a8c58[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x8a8d50[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x8a9c28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8a9d68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x8a9e78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x8a9f38[shape=record, label="  ret i32 0"];
	Node0x8a7028 -> Node0x8a70a8;
	Node0x8a70a8 -> Node0x8a7138;
	Node0x8a7138 -> Node0x8a7198;
	Node0x8a7198 -> Node0x8a7618;
	Node0x8a7618 -> Node0x8a76f8;
	Node0x8a76f8 -> Node0x8a77f8;
	Node0x8a77f8 -> Node0x8a78b8;
	Node0x8a78b8 -> Node0x8a7968;
	Node0x8a7968 -> Node0x8a7bc8;
	Node0x8a7bc8 -> Node0x8a7c88;
	Node0x8a7c88 -> Node0x8a8bf8;
	Node0x8a8bf8 -> Node0x8a8c58;
	Node0x8a8c58 -> Node0x8a8d50;
	Node0x8a8d50 -> Node0x8a9c28;
	Node0x8a9c28 -> Node0x8a9d68;
	Node0x8a9d68 -> Node0x8a9e78;
	Node0x8a9e78 -> Node0x8a9f38;
edge [color=red]
	Node0x8a7028 -> Node0x8a7198;
	Node0x8a7198 -> Node0x8a7618;
	Node0x8a70a8 -> Node0x8a76f8;
	Node0x8a76f8 -> Node0x8a77f8;
	Node0x8a7138 -> Node0x8a78b8;
	Node0x8a78b8 -> Node0x8a7968;
	Node0x8a7028 -> Node0x8a7bc8;
	Node0x8a70a8 -> Node0x8a7bc8;
	Node0x8a7138 -> Node0x8a7bc8;
	Node0x8a7028 -> Node0x8a7c88;
	Node0x8a70a8 -> Node0x8a8bf8;
	Node0x8a7138 -> Node0x8a8c58;
	Node0x8a7c88 -> Node0x8a8d50;
	Node0x8a8bf8 -> Node0x8a8d50;
	Node0x8a8c58 -> Node0x8a8d50;
	Node0x8a78b8 -> Node0x8a9c28;
	Node0x8a76f8 -> Node0x8a9d68;
	Node0x8a7198 -> Node0x8a9e78;
}
