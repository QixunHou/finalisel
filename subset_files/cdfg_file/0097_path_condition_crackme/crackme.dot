digraph "DFG for'crackme' function" {
	Node0x2282120[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x2282190[shape=record, label="  %6 = or i32 %3, %0"];
	Node0x2282200[shape=record, label="  %7 = add i32 %6, %5"];
	Node0x2282270[shape=record, label="  %8 = xor i32 %3, %0"];
	Node0x2282310[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x2282380[shape=record, label="  %10 = sub i32 %7, %9"];
	Node0x22823f0[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x2282460[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x22824d0[shape=record, label="  %13 = or i32 %12, %1"];
	Node0x2282540[shape=record, label="  %14 = add i32 %2, 1"];
	Node0x22825b0[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x2282650[shape=record, label="  %16 = shl i32 %11, 2"];
	Node0x22826f0[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x2282760[shape=record, label="  %18 = or i32 %2, %1"];
	Node0x22827d0[shape=record, label="  %19 = shl i32 %18, 2"];
	Node0x2282840[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0x22828b0[shape=record, label="  %21 = xor i32 %8, -1"];
	Node0x2282920[shape=record, label="  %22 = and i32 %3, %0"];
	Node0x2282990[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x2282a30[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x2282aa0[shape=record, label="  %25 = xor i32 %6, -1"];
	Node0x2282b40[shape=record, label="  %26 = xor i32 %3, 2147483647"];
	Node0x2282bb0[shape=record, label="  %27 = and i32 %26, %0"];
	Node0x2282c20[shape=record, label="  %28 = add i32 %15, 2147483647"];
	Node0x2282c90[shape=record, label="  %29 = add i32 %28, %27"];
	Node0x2282d00[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x2282d70[shape=record, label="  %31 = sub i32 2, %0"];
	Node0x2282de0[shape=record, label="  %32 = add i32 %31, %5"];
	Node0x2283060[shape=record, label="  %33 = add i32 %32, %14"];
	Node0x22830d0[shape=record, label="  %34 = sub i32 %33, %11"];
	Node0x2283140[shape=record, label="  %35 = add i32 %34, %13"];
	Node0x22831b0[shape=record, label="  %36 = add i32 %35, %18"];
	Node0x2283220[shape=record, label="  %37 = add i32 %36, %3"];
	Node0x2283290[shape=record, label="  %38 = add i32 %37, %21"];
	Node0x2283300[shape=record, label="  %39 = add i32 %38, %25"];
	Node0x2283370[shape=record, label="  %40 = sub i32 %39, %17"];
	Node0x22833e0[shape=record, label="  %41 = add i32 %40, %20"];
	Node0x2283450[shape=record, label="  %42 = sub i32 %41, %24"];
	Node0x22834c0[shape=record, label="  %43 = add i32 %42, %30"];
	Node0x2283530[shape=record, label="  %44 = icmp eq i32 %10, %43"];
	Node0x2222268[shape=record, label="  %45 = select i1 %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22839d0[shape=record, label="  %46 = tail call i32 @puts(i8* nonnull dereferenceable(1) %45)"];
	Node0x2283a20[shape=record, label="  ret void"];
	Node0x2282120 -> Node0x2282190;
	Node0x2282190 -> Node0x2282200;
	Node0x2282200 -> Node0x2282270;
	Node0x2282270 -> Node0x2282310;
	Node0x2282310 -> Node0x2282380;
	Node0x2282380 -> Node0x22823f0;
	Node0x22823f0 -> Node0x2282460;
	Node0x2282460 -> Node0x22824d0;
	Node0x22824d0 -> Node0x2282540;
	Node0x2282540 -> Node0x22825b0;
	Node0x22825b0 -> Node0x2282650;
	Node0x2282650 -> Node0x22826f0;
	Node0x22826f0 -> Node0x2282760;
	Node0x2282760 -> Node0x22827d0;
	Node0x22827d0 -> Node0x2282840;
	Node0x2282840 -> Node0x22828b0;
	Node0x22828b0 -> Node0x2282920;
	Node0x2282920 -> Node0x2282990;
	Node0x2282990 -> Node0x2282a30;
	Node0x2282a30 -> Node0x2282aa0;
	Node0x2282aa0 -> Node0x2282b40;
	Node0x2282b40 -> Node0x2282bb0;
	Node0x2282bb0 -> Node0x2282c20;
	Node0x2282c20 -> Node0x2282c90;
	Node0x2282c90 -> Node0x2282d00;
	Node0x2282d00 -> Node0x2282d70;
	Node0x2282d70 -> Node0x2282de0;
	Node0x2282de0 -> Node0x2283060;
	Node0x2283060 -> Node0x22830d0;
	Node0x22830d0 -> Node0x2283140;
	Node0x2283140 -> Node0x22831b0;
	Node0x22831b0 -> Node0x2283220;
	Node0x2283220 -> Node0x2283290;
	Node0x2283290 -> Node0x2283300;
	Node0x2283300 -> Node0x2283370;
	Node0x2283370 -> Node0x22833e0;
	Node0x22833e0 -> Node0x2283450;
	Node0x2283450 -> Node0x22834c0;
	Node0x22834c0 -> Node0x2283530;
	Node0x2283530 -> Node0x2222268;
	Node0x2222268 -> Node0x22839d0;
	Node0x22839d0 -> Node0x2283a20;
edge [color=red]
	Node0x2282190 -> Node0x2282200;
	Node0x2282120 -> Node0x2282200;
	Node0x2282270 -> Node0x2282310;
	Node0x2282200 -> Node0x2282380;
	Node0x2282310 -> Node0x2282380;
	Node0x2282460 -> Node0x22824d0;
	Node0x22823f0 -> Node0x2282650;
	Node0x2282650 -> Node0x22826f0;
	Node0x2282760 -> Node0x22827d0;
	Node0x22827d0 -> Node0x2282840;
	Node0x2282270 -> Node0x22828b0;
	Node0x2282920 -> Node0x2282990;
	Node0x2282990 -> Node0x2282a30;
	Node0x2282190 -> Node0x2282aa0;
	Node0x2282b40 -> Node0x2282bb0;
	Node0x22825b0 -> Node0x2282c20;
	Node0x2282c20 -> Node0x2282c90;
	Node0x2282bb0 -> Node0x2282c90;
	Node0x2282c90 -> Node0x2282d00;
	Node0x2282d70 -> Node0x2282de0;
	Node0x2282120 -> Node0x2282de0;
	Node0x2282de0 -> Node0x2283060;
	Node0x2282540 -> Node0x2283060;
	Node0x2283060 -> Node0x22830d0;
	Node0x22823f0 -> Node0x22830d0;
	Node0x22830d0 -> Node0x2283140;
	Node0x22824d0 -> Node0x2283140;
	Node0x2283140 -> Node0x22831b0;
	Node0x2282760 -> Node0x22831b0;
	Node0x22831b0 -> Node0x2283220;
	Node0x2283220 -> Node0x2283290;
	Node0x22828b0 -> Node0x2283290;
	Node0x2283290 -> Node0x2283300;
	Node0x2282aa0 -> Node0x2283300;
	Node0x2283300 -> Node0x2283370;
	Node0x22826f0 -> Node0x2283370;
	Node0x2283370 -> Node0x22833e0;
	Node0x2282840 -> Node0x22833e0;
	Node0x22833e0 -> Node0x2283450;
	Node0x2282a30 -> Node0x2283450;
	Node0x2283450 -> Node0x22834c0;
	Node0x2282d00 -> Node0x22834c0;
	Node0x2282380 -> Node0x2283530;
	Node0x22834c0 -> Node0x2283530;
	Node0x2283530 -> Node0x2222268;
	Node0x2222268 -> Node0x22839d0;
}
