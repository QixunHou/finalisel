digraph "DFG for'main' function" {
	Node0x5e5a98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5e5b18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x5e5ba8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x5e5c08[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x5e6088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5e8418[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x5e84f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5e85b8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x5e8668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5e88c8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x5e8988[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x5e98f8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x5e9f68[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x5ea060[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x5ea268[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x5ea3c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x5ea4d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x5ea598[shape=record, label="  ret i32 0"];
	Node0x5e5a98 -> Node0x5e5b18;
	Node0x5e5b18 -> Node0x5e5ba8;
	Node0x5e5ba8 -> Node0x5e5c08;
	Node0x5e5c08 -> Node0x5e6088;
	Node0x5e6088 -> Node0x5e8418;
	Node0x5e8418 -> Node0x5e84f8;
	Node0x5e84f8 -> Node0x5e85b8;
	Node0x5e85b8 -> Node0x5e8668;
	Node0x5e8668 -> Node0x5e88c8;
	Node0x5e88c8 -> Node0x5e8988;
	Node0x5e8988 -> Node0x5e98f8;
	Node0x5e98f8 -> Node0x5e9f68;
	Node0x5e9f68 -> Node0x5ea060;
	Node0x5ea060 -> Node0x5ea268;
	Node0x5ea268 -> Node0x5ea3c8;
	Node0x5ea3c8 -> Node0x5ea4d8;
	Node0x5ea4d8 -> Node0x5ea598;
edge [color=red]
	Node0x5e5a98 -> Node0x5e5c08;
	Node0x5e5c08 -> Node0x5e6088;
	Node0x5e5b18 -> Node0x5e8418;
	Node0x5e8418 -> Node0x5e84f8;
	Node0x5e5ba8 -> Node0x5e85b8;
	Node0x5e85b8 -> Node0x5e8668;
	Node0x5e5a98 -> Node0x5e88c8;
	Node0x5e5b18 -> Node0x5e88c8;
	Node0x5e5ba8 -> Node0x5e88c8;
	Node0x5e5a98 -> Node0x5e8988;
	Node0x5e5b18 -> Node0x5e98f8;
	Node0x5e5ba8 -> Node0x5e9f68;
	Node0x5e8988 -> Node0x5ea060;
	Node0x5e98f8 -> Node0x5ea060;
	Node0x5e9f68 -> Node0x5ea060;
	Node0x5e85b8 -> Node0x5ea268;
	Node0x5e8418 -> Node0x5ea3c8;
	Node0x5e5c08 -> Node0x5ea4d8;
}
