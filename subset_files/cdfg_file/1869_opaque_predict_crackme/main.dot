digraph "DFG for'main' function" {
	Node0x1b58cc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b58d48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b58dd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b58e38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1b58ee8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1b59318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b593f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1b594f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b595b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1b59668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b59728[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1b597d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b53b80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1b599d8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b5a948[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b5afb8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b5b018[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1b5b090[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x1b5b100[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0x1b5b170[shape=record, label="  %16 = and i32 %11, %15"];
	Node0x1b5b1e0[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1b5b250[shape=record, label="  %18 = mul i32 %17, 5"];
	Node0x1b5b2c0[shape=record, label="  %19 = add i32 %18, %14"];
	Node0x1b5b330[shape=record, label="  %20 = or i32 %13, %10"];
	Node0x1b5b3a0[shape=record, label="  %21 = sub i32 %19, %20"];
	Node0x1b5b410[shape=record, label="  %22 = xor i32 %12, %11"];
	Node0x1b5b480[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x1b5b4f0[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x1b5b560[shape=record, label="  %25 = or i32 %12, %11"];
	Node0x1b5b5d0[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x1b5b640[shape=record, label="  %27 = mul i32 %26, 6"];
	Node0x1b5b6b0[shape=record, label="  %28 = xor i32 %13, %10"];
	Node0x1b5b720[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x1b5b790[shape=record, label="  %30 = and i32 %13, %10"];
	Node0x1b5b800[shape=record, label="  %31 = shl i32 %20, 1"];
	Node0x1b5b870[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0x1b5b8e0[shape=record, label="  %33 = xor i32 %10, 1073741823"];
	Node0x1b5b950[shape=record, label="  %34 = xor i32 %13, -1"];
	Node0x1b5b9c0[shape=record, label="  %35 = and i32 %10, %34"];
	Node0x1b5ba30[shape=record, label="  %36 = and i32 %13, %33"];
	Node0x1b5baa0[shape=record, label="  %37 = shl i32 %36, 2"];
	Node0x1b5bb10[shape=record, label="  %38 = sub i32 %12, %35"];
	Node0x1b5bb80[shape=record, label="  %39 = sub i32 %38, %30"];
	Node0x1b5bbf0[shape=record, label="  %40 = mul i32 %39, 5"];
	Node0x1b5bc60[shape=record, label="  %41 = add i32 %10, %14"];
	Node0x1b5bcd0[shape=record, label="  %42 = add i32 %41, %12"];
	Node0x1b5bd40[shape=record, label="  %43 = sub i32 %42, %22"];
	Node0x1b5bdb0[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x1b5be20[shape=record, label="  %45 = add i32 %44, %25"];
	Node0x1b5be90[shape=record, label="  %46 = add i32 %45, %16"];
	Node0x1b5bf00[shape=record, label="  %47 = add i32 %46, %27"];
	Node0x1b5bf70[shape=record, label="  %48 = sub i32 %47, %28"];
	Node0x1b5bfe0[shape=record, label="  %49 = add i32 %48, %30"];
	Node0x1b5c050[shape=record, label="  %50 = add i32 %49, %29"];
	Node0x1b5c0c0[shape=record, label="  %51 = sub i32 %50, %37"];
	Node0x1b5c130[shape=record, label="  %52 = sub i32 %51, %32"];
	Node0x1b5c1a0[shape=record, label="  %53 = add i32 %52, %40"];
	Node0x1b5c210[shape=record, label="  %54 = icmp eq i32 %21, %53"];
	Node0x1af88b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1b5c2a0[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x1b5c548[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1b5c6a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1b5c7b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b5c8c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b5c988[shape=record, label="  ret i32 0"];
	Node0x1b58cc8 -> Node0x1b58d48;
	Node0x1b58d48 -> Node0x1b58dd8;
	Node0x1b58dd8 -> Node0x1b58e38;
	Node0x1b58e38 -> Node0x1b58ee8;
	Node0x1b58ee8 -> Node0x1b59318;
	Node0x1b59318 -> Node0x1b593f8;
	Node0x1b593f8 -> Node0x1b594f8;
	Node0x1b594f8 -> Node0x1b595b8;
	Node0x1b595b8 -> Node0x1b59668;
	Node0x1b59668 -> Node0x1b59728;
	Node0x1b59728 -> Node0x1b597d8;
	Node0x1b597d8 -> Node0x1b53b80;
	Node0x1b53b80 -> Node0x1b599d8;
	Node0x1b599d8 -> Node0x1b5a948;
	Node0x1b5a948 -> Node0x1b5afb8;
	Node0x1b5afb8 -> Node0x1b5b018;
	Node0x1b5b018 -> Node0x1b5b090;
	Node0x1b5b090 -> Node0x1b5b100;
	Node0x1b5b100 -> Node0x1b5b170;
	Node0x1b5b170 -> Node0x1b5b1e0;
	Node0x1b5b1e0 -> Node0x1b5b250;
	Node0x1b5b250 -> Node0x1b5b2c0;
	Node0x1b5b2c0 -> Node0x1b5b330;
	Node0x1b5b330 -> Node0x1b5b3a0;
	Node0x1b5b3a0 -> Node0x1b5b410;
	Node0x1b5b410 -> Node0x1b5b480;
	Node0x1b5b480 -> Node0x1b5b4f0;
	Node0x1b5b4f0 -> Node0x1b5b560;
	Node0x1b5b560 -> Node0x1b5b5d0;
	Node0x1b5b5d0 -> Node0x1b5b640;
	Node0x1b5b640 -> Node0x1b5b6b0;
	Node0x1b5b6b0 -> Node0x1b5b720;
	Node0x1b5b720 -> Node0x1b5b790;
	Node0x1b5b790 -> Node0x1b5b800;
	Node0x1b5b800 -> Node0x1b5b870;
	Node0x1b5b870 -> Node0x1b5b8e0;
	Node0x1b5b8e0 -> Node0x1b5b950;
	Node0x1b5b950 -> Node0x1b5b9c0;
	Node0x1b5b9c0 -> Node0x1b5ba30;
	Node0x1b5ba30 -> Node0x1b5baa0;
	Node0x1b5baa0 -> Node0x1b5bb10;
	Node0x1b5bb10 -> Node0x1b5bb80;
	Node0x1b5bb80 -> Node0x1b5bbf0;
	Node0x1b5bbf0 -> Node0x1b5bc60;
	Node0x1b5bc60 -> Node0x1b5bcd0;
	Node0x1b5bcd0 -> Node0x1b5bd40;
	Node0x1b5bd40 -> Node0x1b5bdb0;
	Node0x1b5bdb0 -> Node0x1b5be20;
	Node0x1b5be20 -> Node0x1b5be90;
	Node0x1b5be90 -> Node0x1b5bf00;
	Node0x1b5bf00 -> Node0x1b5bf70;
	Node0x1b5bf70 -> Node0x1b5bfe0;
	Node0x1b5bfe0 -> Node0x1b5c050;
	Node0x1b5c050 -> Node0x1b5c0c0;
	Node0x1b5c0c0 -> Node0x1b5c130;
	Node0x1b5c130 -> Node0x1b5c1a0;
	Node0x1b5c1a0 -> Node0x1b5c210;
	Node0x1b5c210 -> Node0x1af88b8;
	Node0x1af88b8 -> Node0x1b5c2a0;
	Node0x1b5c2a0 -> Node0x1b5c548;
	Node0x1b5c548 -> Node0x1b5c6a8;
	Node0x1b5c6a8 -> Node0x1b5c7b8;
	Node0x1b5c7b8 -> Node0x1b5c8c8;
	Node0x1b5c8c8 -> Node0x1b5c988;
edge [color=red]
	Node0x1b58cc8 -> Node0x1b58ee8;
	Node0x1b58ee8 -> Node0x1b59318;
	Node0x1b58d48 -> Node0x1b593f8;
	Node0x1b593f8 -> Node0x1b594f8;
	Node0x1b58dd8 -> Node0x1b595b8;
	Node0x1b595b8 -> Node0x1b59668;
	Node0x1b58e38 -> Node0x1b59728;
	Node0x1b59728 -> Node0x1b597d8;
	Node0x1b58cc8 -> Node0x1b53b80;
	Node0x1b58d48 -> Node0x1b53b80;
	Node0x1b58dd8 -> Node0x1b53b80;
	Node0x1b58e38 -> Node0x1b53b80;
	Node0x1b58cc8 -> Node0x1b599d8;
	Node0x1b58d48 -> Node0x1b5a948;
	Node0x1b58dd8 -> Node0x1b5afb8;
	Node0x1b58e38 -> Node0x1b5b018;
	Node0x1b5a948 -> Node0x1b5b090;
	Node0x1b5afb8 -> Node0x1b5b100;
	Node0x1b5a948 -> Node0x1b5b170;
	Node0x1b5b100 -> Node0x1b5b170;
	Node0x1b5b170 -> Node0x1b5b1e0;
	Node0x1b5b1e0 -> Node0x1b5b250;
	Node0x1b5b250 -> Node0x1b5b2c0;
	Node0x1b5b090 -> Node0x1b5b2c0;
	Node0x1b5b018 -> Node0x1b5b330;
	Node0x1b599d8 -> Node0x1b5b330;
	Node0x1b5b2c0 -> Node0x1b5b3a0;
	Node0x1b5b330 -> Node0x1b5b3a0;
	Node0x1b5afb8 -> Node0x1b5b410;
	Node0x1b5a948 -> Node0x1b5b410;
	Node0x1b5afb8 -> Node0x1b5b480;
	Node0x1b5a948 -> Node0x1b5b480;
	Node0x1b5b480 -> Node0x1b5b4f0;
	Node0x1b5afb8 -> Node0x1b5b560;
	Node0x1b5a948 -> Node0x1b5b560;
	Node0x1b5b560 -> Node0x1b5b5d0;
	Node0x1b5b5d0 -> Node0x1b5b640;
	Node0x1b5b018 -> Node0x1b5b6b0;
	Node0x1b599d8 -> Node0x1b5b6b0;
	Node0x1b5b6b0 -> Node0x1b5b720;
	Node0x1b5b018 -> Node0x1b5b790;
	Node0x1b599d8 -> Node0x1b5b790;
	Node0x1b5b330 -> Node0x1b5b800;
	Node0x1b5b800 -> Node0x1b5b870;
	Node0x1b599d8 -> Node0x1b5b8e0;
	Node0x1b5b018 -> Node0x1b5b950;
	Node0x1b599d8 -> Node0x1b5b9c0;
	Node0x1b5b950 -> Node0x1b5b9c0;
	Node0x1b5b018 -> Node0x1b5ba30;
	Node0x1b5b8e0 -> Node0x1b5ba30;
	Node0x1b5ba30 -> Node0x1b5baa0;
	Node0x1b5afb8 -> Node0x1b5bb10;
	Node0x1b5b9c0 -> Node0x1b5bb10;
	Node0x1b5bb10 -> Node0x1b5bb80;
	Node0x1b5b790 -> Node0x1b5bb80;
	Node0x1b5bb80 -> Node0x1b5bbf0;
	Node0x1b599d8 -> Node0x1b5bc60;
	Node0x1b5b090 -> Node0x1b5bc60;
	Node0x1b5bc60 -> Node0x1b5bcd0;
	Node0x1b5afb8 -> Node0x1b5bcd0;
	Node0x1b5bcd0 -> Node0x1b5bd40;
	Node0x1b5b410 -> Node0x1b5bd40;
	Node0x1b5bd40 -> Node0x1b5bdb0;
	Node0x1b5b4f0 -> Node0x1b5bdb0;
	Node0x1b5bdb0 -> Node0x1b5be20;
	Node0x1b5b560 -> Node0x1b5be20;
	Node0x1b5be20 -> Node0x1b5be90;
	Node0x1b5b170 -> Node0x1b5be90;
	Node0x1b5be90 -> Node0x1b5bf00;
	Node0x1b5b640 -> Node0x1b5bf00;
	Node0x1b5bf00 -> Node0x1b5bf70;
	Node0x1b5b6b0 -> Node0x1b5bf70;
	Node0x1b5bf70 -> Node0x1b5bfe0;
	Node0x1b5b790 -> Node0x1b5bfe0;
	Node0x1b5bfe0 -> Node0x1b5c050;
	Node0x1b5b720 -> Node0x1b5c050;
	Node0x1b5c050 -> Node0x1b5c0c0;
	Node0x1b5baa0 -> Node0x1b5c0c0;
	Node0x1b5c0c0 -> Node0x1b5c130;
	Node0x1b5b870 -> Node0x1b5c130;
	Node0x1b5c130 -> Node0x1b5c1a0;
	Node0x1b5bbf0 -> Node0x1b5c1a0;
	Node0x1b5b3a0 -> Node0x1b5c210;
	Node0x1b5c1a0 -> Node0x1b5c210;
	Node0x1b5c210 -> Node0x1af88b8;
	Node0x1af88b8 -> Node0x1b5c2a0;
	Node0x1b59728 -> Node0x1b5c548;
	Node0x1b595b8 -> Node0x1b5c6a8;
	Node0x1b593f8 -> Node0x1b5c7b8;
	Node0x1b58ee8 -> Node0x1b5c8c8;
}
