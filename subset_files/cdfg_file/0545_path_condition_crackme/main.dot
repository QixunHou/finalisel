digraph "DFG for'main' function" {
	Node0x18fd668[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x18fd6e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x18fd778[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x18fd7d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x18fdc58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18fdd38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x18fde38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18fdef8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x18fdfa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18fe208[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x18fe2c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18fe428[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x18fe488[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x19061e0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x19063e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1906548[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1906658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1906718[shape=record, label="  ret i32 0"];
	Node0x18fd668 -> Node0x18fd6e8;
	Node0x18fd6e8 -> Node0x18fd778;
	Node0x18fd778 -> Node0x18fd7d8;
	Node0x18fd7d8 -> Node0x18fdc58;
	Node0x18fdc58 -> Node0x18fdd38;
	Node0x18fdd38 -> Node0x18fde38;
	Node0x18fde38 -> Node0x18fdef8;
	Node0x18fdef8 -> Node0x18fdfa8;
	Node0x18fdfa8 -> Node0x18fe208;
	Node0x18fe208 -> Node0x18fe2c8;
	Node0x18fe2c8 -> Node0x18fe428;
	Node0x18fe428 -> Node0x18fe488;
	Node0x18fe488 -> Node0x19061e0;
	Node0x19061e0 -> Node0x19063e8;
	Node0x19063e8 -> Node0x1906548;
	Node0x1906548 -> Node0x1906658;
	Node0x1906658 -> Node0x1906718;
edge [color=red]
	Node0x18fd668 -> Node0x18fd7d8;
	Node0x18fd7d8 -> Node0x18fdc58;
	Node0x18fd6e8 -> Node0x18fdd38;
	Node0x18fdd38 -> Node0x18fde38;
	Node0x18fd778 -> Node0x18fdef8;
	Node0x18fdef8 -> Node0x18fdfa8;
	Node0x18fd668 -> Node0x18fe208;
	Node0x18fd6e8 -> Node0x18fe208;
	Node0x18fd778 -> Node0x18fe208;
	Node0x18fd668 -> Node0x18fe2c8;
	Node0x18fd6e8 -> Node0x18fe428;
	Node0x18fd778 -> Node0x18fe488;
	Node0x18fe2c8 -> Node0x19061e0;
	Node0x18fe428 -> Node0x19061e0;
	Node0x18fe488 -> Node0x19061e0;
	Node0x18fdef8 -> Node0x19063e8;
	Node0x18fdd38 -> Node0x1906548;
	Node0x18fd7d8 -> Node0x1906658;
}
