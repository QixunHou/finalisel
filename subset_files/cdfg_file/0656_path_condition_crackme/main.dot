digraph "DFG for'main' function" {
	Node0x1a1a8f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1a1a978[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1a1aa08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1a1aa68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1a1ab18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1a1af48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a1b028[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1a1b128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a1b1e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1a1b298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1a1b358[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1a1b408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1a15a50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1a1b608[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1a1c578[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1a1cbe8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1a1cc48[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1a1ccc0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x1a1cd30[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x1a1cda0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1a1ce10[shape=record, label="  %17 = sub i32 %10, %16"];
	Node0x1a1ce80[shape=record, label="  %18 = sub i32 %17, %12"];
	Node0x1a1cef0[shape=record, label="  %19 = sub i32 %18, %14"];
	Node0x1a1cf60[shape=record, label="  %20 = or i32 %12, %11"];
	Node0x1a1cfd0[shape=record, label="  %21 = xor i32 %12, -1"];
	Node0x1a1d040[shape=record, label="  %22 = or i32 %11, %21"];
	Node0x1a1d0b0[shape=record, label="  %23 = xor i32 %14, -1"];
	Node0x1a1d120[shape=record, label="  %24 = shl i32 %22, 2"];
	Node0x1a1d190[shape=record, label="  %25 = xor i32 %24, -4"];
	Node0x1a1d200[shape=record, label="  %26 = and i32 %11, %21"];
	Node0x1a1d270[shape=record, label="  %27 = and i32 %12, %11"];
	Node0x1a1d2e0[shape=record, label="  %28 = or i32 %13, %10"];
	Node0x1a1d350[shape=record, label="  %29 = or i32 %13, %15"];
	Node0x1a1d3c0[shape=record, label="  %30 = xor i32 %13, %15"];
	Node0x1a1d430[shape=record, label="  %31 = sub i32 1, %27"];
	Node0x1a1d4a0[shape=record, label="  %32 = add i32 %31, %30"];
	Node0x1a1d510[shape=record, label="  %33 = add i32 %32, %28"];
	Node0x1a1d580[shape=record, label="  %34 = add i32 %33, %29"];
	Node0x1a1d5f0[shape=record, label="  %35 = mul i32 %34, 3"];
	Node0x1a1d660[shape=record, label="  %36 = mul i32 %13, -6"];
	Node0x1a1d6d0[shape=record, label="  %37 = sub i32 %13, %29"];
	Node0x1a1d740[shape=record, label="  %38 = mul i32 %37, 5"];
	Node0x1a1d7b0[shape=record, label="  %39 = add i32 %20, %12"];
	Node0x1a1d820[shape=record, label="  %40 = sub i32 %39, %22"];
	Node0x1a1d890[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x1a1d900[shape=record, label="  %42 = sub i32 %41, %26"];
	Node0x1a1d970[shape=record, label="  %43 = add i32 %42, %28"];
	Node0x1a1d9e0[shape=record, label="  %44 = add i32 %43, %36"];
	Node0x1a1da50[shape=record, label="  %45 = sub i32 %44, %25"];
	Node0x1a1dac0[shape=record, label="  %46 = add i32 %45, %38"];
	Node0x1a1db30[shape=record, label="  %47 = add i32 %46, %35"];
	Node0x1a1dba0[shape=record, label="  %48 = icmp eq i32 %19, %47"];
	Node0x19ba8b8[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a1dc30[shape=record, label="  %50 = call i32 @puts(i8* nonnull dereferenceable(1) %49) #5"];
	Node0x1a1ded8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1a1e038[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1a1e148[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1a1e258[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1a1e318[shape=record, label="  ret i32 0"];
	Node0x1a1a8f8 -> Node0x1a1a978;
	Node0x1a1a978 -> Node0x1a1aa08;
	Node0x1a1aa08 -> Node0x1a1aa68;
	Node0x1a1aa68 -> Node0x1a1ab18;
	Node0x1a1ab18 -> Node0x1a1af48;
	Node0x1a1af48 -> Node0x1a1b028;
	Node0x1a1b028 -> Node0x1a1b128;
	Node0x1a1b128 -> Node0x1a1b1e8;
	Node0x1a1b1e8 -> Node0x1a1b298;
	Node0x1a1b298 -> Node0x1a1b358;
	Node0x1a1b358 -> Node0x1a1b408;
	Node0x1a1b408 -> Node0x1a15a50;
	Node0x1a15a50 -> Node0x1a1b608;
	Node0x1a1b608 -> Node0x1a1c578;
	Node0x1a1c578 -> Node0x1a1cbe8;
	Node0x1a1cbe8 -> Node0x1a1cc48;
	Node0x1a1cc48 -> Node0x1a1ccc0;
	Node0x1a1ccc0 -> Node0x1a1cd30;
	Node0x1a1cd30 -> Node0x1a1cda0;
	Node0x1a1cda0 -> Node0x1a1ce10;
	Node0x1a1ce10 -> Node0x1a1ce80;
	Node0x1a1ce80 -> Node0x1a1cef0;
	Node0x1a1cef0 -> Node0x1a1cf60;
	Node0x1a1cf60 -> Node0x1a1cfd0;
	Node0x1a1cfd0 -> Node0x1a1d040;
	Node0x1a1d040 -> Node0x1a1d0b0;
	Node0x1a1d0b0 -> Node0x1a1d120;
	Node0x1a1d120 -> Node0x1a1d190;
	Node0x1a1d190 -> Node0x1a1d200;
	Node0x1a1d200 -> Node0x1a1d270;
	Node0x1a1d270 -> Node0x1a1d2e0;
	Node0x1a1d2e0 -> Node0x1a1d350;
	Node0x1a1d350 -> Node0x1a1d3c0;
	Node0x1a1d3c0 -> Node0x1a1d430;
	Node0x1a1d430 -> Node0x1a1d4a0;
	Node0x1a1d4a0 -> Node0x1a1d510;
	Node0x1a1d510 -> Node0x1a1d580;
	Node0x1a1d580 -> Node0x1a1d5f0;
	Node0x1a1d5f0 -> Node0x1a1d660;
	Node0x1a1d660 -> Node0x1a1d6d0;
	Node0x1a1d6d0 -> Node0x1a1d740;
	Node0x1a1d740 -> Node0x1a1d7b0;
	Node0x1a1d7b0 -> Node0x1a1d820;
	Node0x1a1d820 -> Node0x1a1d890;
	Node0x1a1d890 -> Node0x1a1d900;
	Node0x1a1d900 -> Node0x1a1d970;
	Node0x1a1d970 -> Node0x1a1d9e0;
	Node0x1a1d9e0 -> Node0x1a1da50;
	Node0x1a1da50 -> Node0x1a1dac0;
	Node0x1a1dac0 -> Node0x1a1db30;
	Node0x1a1db30 -> Node0x1a1dba0;
	Node0x1a1dba0 -> Node0x19ba8b8;
	Node0x19ba8b8 -> Node0x1a1dc30;
	Node0x1a1dc30 -> Node0x1a1ded8;
	Node0x1a1ded8 -> Node0x1a1e038;
	Node0x1a1e038 -> Node0x1a1e148;
	Node0x1a1e148 -> Node0x1a1e258;
	Node0x1a1e258 -> Node0x1a1e318;
edge [color=red]
	Node0x1a1a8f8 -> Node0x1a1ab18;
	Node0x1a1ab18 -> Node0x1a1af48;
	Node0x1a1a978 -> Node0x1a1b028;
	Node0x1a1b028 -> Node0x1a1b128;
	Node0x1a1aa08 -> Node0x1a1b1e8;
	Node0x1a1b1e8 -> Node0x1a1b298;
	Node0x1a1aa68 -> Node0x1a1b358;
	Node0x1a1b358 -> Node0x1a1b408;
	Node0x1a1a8f8 -> Node0x1a15a50;
	Node0x1a1a978 -> Node0x1a15a50;
	Node0x1a1aa08 -> Node0x1a15a50;
	Node0x1a1aa68 -> Node0x1a15a50;
	Node0x1a1a8f8 -> Node0x1a1b608;
	Node0x1a1a978 -> Node0x1a1c578;
	Node0x1a1aa08 -> Node0x1a1cbe8;
	Node0x1a1aa68 -> Node0x1a1cc48;
	Node0x1a1cbe8 -> Node0x1a1ccc0;
	Node0x1a1c578 -> Node0x1a1ccc0;
	Node0x1a1b608 -> Node0x1a1cd30;
	Node0x1a1cd30 -> Node0x1a1cda0;
	Node0x1a1b608 -> Node0x1a1ce10;
	Node0x1a1cda0 -> Node0x1a1ce10;
	Node0x1a1ce10 -> Node0x1a1ce80;
	Node0x1a1cbe8 -> Node0x1a1ce80;
	Node0x1a1ce80 -> Node0x1a1cef0;
	Node0x1a1ccc0 -> Node0x1a1cef0;
	Node0x1a1cbe8 -> Node0x1a1cf60;
	Node0x1a1c578 -> Node0x1a1cf60;
	Node0x1a1cbe8 -> Node0x1a1cfd0;
	Node0x1a1c578 -> Node0x1a1d040;
	Node0x1a1cfd0 -> Node0x1a1d040;
	Node0x1a1ccc0 -> Node0x1a1d0b0;
	Node0x1a1d040 -> Node0x1a1d120;
	Node0x1a1d120 -> Node0x1a1d190;
	Node0x1a1c578 -> Node0x1a1d200;
	Node0x1a1cfd0 -> Node0x1a1d200;
	Node0x1a1cbe8 -> Node0x1a1d270;
	Node0x1a1c578 -> Node0x1a1d270;
	Node0x1a1cc48 -> Node0x1a1d2e0;
	Node0x1a1b608 -> Node0x1a1d2e0;
	Node0x1a1cc48 -> Node0x1a1d350;
	Node0x1a1cd30 -> Node0x1a1d350;
	Node0x1a1cc48 -> Node0x1a1d3c0;
	Node0x1a1cd30 -> Node0x1a1d3c0;
	Node0x1a1d270 -> Node0x1a1d430;
	Node0x1a1d430 -> Node0x1a1d4a0;
	Node0x1a1d3c0 -> Node0x1a1d4a0;
	Node0x1a1d4a0 -> Node0x1a1d510;
	Node0x1a1d2e0 -> Node0x1a1d510;
	Node0x1a1d510 -> Node0x1a1d580;
	Node0x1a1d350 -> Node0x1a1d580;
	Node0x1a1d580 -> Node0x1a1d5f0;
	Node0x1a1cc48 -> Node0x1a1d660;
	Node0x1a1cc48 -> Node0x1a1d6d0;
	Node0x1a1d350 -> Node0x1a1d6d0;
	Node0x1a1d6d0 -> Node0x1a1d740;
	Node0x1a1cf60 -> Node0x1a1d7b0;
	Node0x1a1cbe8 -> Node0x1a1d7b0;
	Node0x1a1d7b0 -> Node0x1a1d820;
	Node0x1a1d040 -> Node0x1a1d820;
	Node0x1a1d820 -> Node0x1a1d890;
	Node0x1a1d0b0 -> Node0x1a1d890;
	Node0x1a1d890 -> Node0x1a1d900;
	Node0x1a1d200 -> Node0x1a1d900;
	Node0x1a1d900 -> Node0x1a1d970;
	Node0x1a1d2e0 -> Node0x1a1d970;
	Node0x1a1d970 -> Node0x1a1d9e0;
	Node0x1a1d660 -> Node0x1a1d9e0;
	Node0x1a1d9e0 -> Node0x1a1da50;
	Node0x1a1d190 -> Node0x1a1da50;
	Node0x1a1da50 -> Node0x1a1dac0;
	Node0x1a1d740 -> Node0x1a1dac0;
	Node0x1a1dac0 -> Node0x1a1db30;
	Node0x1a1d5f0 -> Node0x1a1db30;
	Node0x1a1cef0 -> Node0x1a1dba0;
	Node0x1a1db30 -> Node0x1a1dba0;
	Node0x1a1dba0 -> Node0x19ba8b8;
	Node0x19ba8b8 -> Node0x1a1dc30;
	Node0x1a1b358 -> Node0x1a1ded8;
	Node0x1a1b1e8 -> Node0x1a1e038;
	Node0x1a1b028 -> Node0x1a1e148;
	Node0x1a1ab18 -> Node0x1a1e258;
}
