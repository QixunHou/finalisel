digraph "DFG for'crackme' function" {
	Node0x1a18a20[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1a190a0[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x1a19140[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x1a191b0[shape=record, label="  %8 = sub i32 %0, %7"];
	Node0x1a19220[shape=record, label="  %9 = sub i32 %8, %2"];
	Node0x1a19290[shape=record, label="  %10 = sub i32 %9, %5"];
	Node0x1a19300[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x1a19370[shape=record, label="  %12 = xor i32 %2, -1"];
	Node0x1a193e0[shape=record, label="  %13 = or i32 %12, %1"];
	Node0x1a19450[shape=record, label="  %14 = xor i32 %5, -1"];
	Node0x1a194f0[shape=record, label="  %15 = shl i32 %13, 2"];
	Node0x1a19590[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x1a19600[shape=record, label="  %17 = and i32 %12, %1"];
	Node0x1a19670[shape=record, label="  %18 = and i32 %2, %1"];
	Node0x1a196e0[shape=record, label="  %19 = or i32 %3, %0"];
	Node0x1a19750[shape=record, label="  %20 = or i32 %6, %3"];
	Node0x1a197c0[shape=record, label="  %21 = xor i32 %6, %3"];
	Node0x1a19830[shape=record, label="  %22 = add i32 %19, 1"];
	Node0x1a198a0[shape=record, label="  %23 = sub i32 %21, %18"];
	Node0x1a19910[shape=record, label="  %24 = add i32 %23, %22"];
	Node0x1a19980[shape=record, label="  %25 = add i32 %24, %20"];
	Node0x1a19a20[shape=record, label="  %26 = mul i32 %25, 3"];
	Node0x1a19ac0[shape=record, label="  %27 = mul i32 %3, -6"];
	Node0x1a19b30[shape=record, label="  %28 = sub i32 %3, %20"];
	Node0x1a19bd0[shape=record, label="  %29 = mul i32 %28, 5"];
	Node0x1a19c40[shape=record, label="  %30 = add i32 %11, %2"];
	Node0x1a19cb0[shape=record, label="  %31 = sub i32 %30, %13"];
	Node0x1a19d20[shape=record, label="  %32 = add i32 %31, %14"];
	Node0x1a19fa0[shape=record, label="  %33 = sub i32 %32, %17"];
	Node0x1a1a010[shape=record, label="  %34 = add i32 %33, %19"];
	Node0x1a1a080[shape=record, label="  %35 = sub i32 %34, %16"];
	Node0x1a1a0f0[shape=record, label="  %36 = add i32 %35, %27"];
	Node0x1a1a160[shape=record, label="  %37 = add i32 %36, %29"];
	Node0x1a1a1d0[shape=record, label="  %38 = add i32 %37, %26"];
	Node0x1a1a240[shape=record, label="  %39 = icmp eq i32 %10, %38"];
	Node0x19b9268[shape=record, label="  %40 = select i1 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1a1a6e0[shape=record, label="  %41 = tail call i32 @puts(i8* nonnull dereferenceable(1) %40)"];
	Node0x1a1a730[shape=record, label="  ret void"];
	Node0x1a18a20 -> Node0x1a190a0;
	Node0x1a190a0 -> Node0x1a19140;
	Node0x1a19140 -> Node0x1a191b0;
	Node0x1a191b0 -> Node0x1a19220;
	Node0x1a19220 -> Node0x1a19290;
	Node0x1a19290 -> Node0x1a19300;
	Node0x1a19300 -> Node0x1a19370;
	Node0x1a19370 -> Node0x1a193e0;
	Node0x1a193e0 -> Node0x1a19450;
	Node0x1a19450 -> Node0x1a194f0;
	Node0x1a194f0 -> Node0x1a19590;
	Node0x1a19590 -> Node0x1a19600;
	Node0x1a19600 -> Node0x1a19670;
	Node0x1a19670 -> Node0x1a196e0;
	Node0x1a196e0 -> Node0x1a19750;
	Node0x1a19750 -> Node0x1a197c0;
	Node0x1a197c0 -> Node0x1a19830;
	Node0x1a19830 -> Node0x1a198a0;
	Node0x1a198a0 -> Node0x1a19910;
	Node0x1a19910 -> Node0x1a19980;
	Node0x1a19980 -> Node0x1a19a20;
	Node0x1a19a20 -> Node0x1a19ac0;
	Node0x1a19ac0 -> Node0x1a19b30;
	Node0x1a19b30 -> Node0x1a19bd0;
	Node0x1a19bd0 -> Node0x1a19c40;
	Node0x1a19c40 -> Node0x1a19cb0;
	Node0x1a19cb0 -> Node0x1a19d20;
	Node0x1a19d20 -> Node0x1a19fa0;
	Node0x1a19fa0 -> Node0x1a1a010;
	Node0x1a1a010 -> Node0x1a1a080;
	Node0x1a1a080 -> Node0x1a1a0f0;
	Node0x1a1a0f0 -> Node0x1a1a160;
	Node0x1a1a160 -> Node0x1a1a1d0;
	Node0x1a1a1d0 -> Node0x1a1a240;
	Node0x1a1a240 -> Node0x19b9268;
	Node0x19b9268 -> Node0x1a1a6e0;
	Node0x1a1a6e0 -> Node0x1a1a730;
edge [color=red]
	Node0x1a190a0 -> Node0x1a19140;
	Node0x1a19140 -> Node0x1a191b0;
	Node0x1a191b0 -> Node0x1a19220;
	Node0x1a19220 -> Node0x1a19290;
	Node0x1a18a20 -> Node0x1a19290;
	Node0x1a19370 -> Node0x1a193e0;
	Node0x1a18a20 -> Node0x1a19450;
	Node0x1a193e0 -> Node0x1a194f0;
	Node0x1a194f0 -> Node0x1a19590;
	Node0x1a19370 -> Node0x1a19600;
	Node0x1a190a0 -> Node0x1a19750;
	Node0x1a190a0 -> Node0x1a197c0;
	Node0x1a196e0 -> Node0x1a19830;
	Node0x1a197c0 -> Node0x1a198a0;
	Node0x1a19670 -> Node0x1a198a0;
	Node0x1a198a0 -> Node0x1a19910;
	Node0x1a19830 -> Node0x1a19910;
	Node0x1a19910 -> Node0x1a19980;
	Node0x1a19750 -> Node0x1a19980;
	Node0x1a19980 -> Node0x1a19a20;
	Node0x1a19750 -> Node0x1a19b30;
	Node0x1a19b30 -> Node0x1a19bd0;
	Node0x1a19300 -> Node0x1a19c40;
	Node0x1a19c40 -> Node0x1a19cb0;
	Node0x1a193e0 -> Node0x1a19cb0;
	Node0x1a19cb0 -> Node0x1a19d20;
	Node0x1a19450 -> Node0x1a19d20;
	Node0x1a19d20 -> Node0x1a19fa0;
	Node0x1a19600 -> Node0x1a19fa0;
	Node0x1a19fa0 -> Node0x1a1a010;
	Node0x1a196e0 -> Node0x1a1a010;
	Node0x1a1a010 -> Node0x1a1a080;
	Node0x1a19590 -> Node0x1a1a080;
	Node0x1a1a080 -> Node0x1a1a0f0;
	Node0x1a19ac0 -> Node0x1a1a0f0;
	Node0x1a1a0f0 -> Node0x1a1a160;
	Node0x1a19bd0 -> Node0x1a1a160;
	Node0x1a1a160 -> Node0x1a1a1d0;
	Node0x1a19a20 -> Node0x1a1a1d0;
	Node0x1a19290 -> Node0x1a1a240;
	Node0x1a1a1d0 -> Node0x1a1a240;
	Node0x1a1a240 -> Node0x19b9268;
	Node0x19b9268 -> Node0x1a1a6e0;
}
