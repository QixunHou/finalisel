digraph "DFG for'crackme' function" {
	Node0x19ee820[shape=record, label="  %3 = sub i32 0, %0"];
	Node0x19ee8c0[shape=record, label="  %4 = xor i32 %0, -1"];
	Node0x19ee980[shape=record, label="  %5 = and i32 %4, %1"];
	Node0x19ee9f0[shape=record, label="  %6 = or i32 %1, %0"];
	Node0x19eea60[shape=record, label="  %7 = sub i32 %5, %6"];
	Node0x19eead0[shape=record, label="  %8 = icmp eq i32 %7, %3"];
	Node0x198f388[shape=record, label="  %9 = select i1 %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x19eef40[shape=record, label="  %10 = tail call i32 @puts(i8* nonnull dereferenceable(1) %9)"];
	Node0x19eef90[shape=record, label="  ret void"];
	Node0x19ee820 -> Node0x19ee8c0;
	Node0x19ee8c0 -> Node0x19ee980;
	Node0x19ee980 -> Node0x19ee9f0;
	Node0x19ee9f0 -> Node0x19eea60;
	Node0x19eea60 -> Node0x19eead0;
	Node0x19eead0 -> Node0x198f388;
	Node0x198f388 -> Node0x19eef40;
	Node0x19eef40 -> Node0x19eef90;
edge [color=red]
	Node0x19ee8c0 -> Node0x19ee980;
	Node0x19ee980 -> Node0x19eea60;
	Node0x19ee9f0 -> Node0x19eea60;
	Node0x19eea60 -> Node0x19eead0;
	Node0x19ee820 -> Node0x19eead0;
	Node0x19eead0 -> Node0x198f388;
	Node0x198f388 -> Node0x19eef40;
}
