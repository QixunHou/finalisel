digraph "DFG for'crackme' function" {
	Node0xdaed30[shape=record, label="  %5 = xor i32 %3, -1"];
	Node0xdaedd0[shape=record, label="  %6 = add i32 %1, 2"];
	Node0xdaee40[shape=record, label="  %7 = xor i32 %2, -1"];
	Node0xdaeeb0[shape=record, label="  %8 = and i32 %7, %1"];
	Node0xdaef50[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xdaeff0[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0xdaf060[shape=record, label="  %11 = or i32 %2, %1"];
	Node0xdaf0d0[shape=record, label="  %12 = or i32 %7, %1"];
	Node0xdaf140[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0xdaf1b0[shape=record, label="  %14 = xor i32 %2, %1"];
	Node0xdaf220[shape=record, label="  %15 = xor i32 %11, -1"];
	Node0xdaf290[shape=record, label="  %16 = and i32 %2, %1"];
	Node0xdaf300[shape=record, label="  %17 = shl i32 %0, 1"];
	Node0xdaf370[shape=record, label="  %18 = xor i32 %0, -1"];
	Node0xdaf3e0[shape=record, label="  %19 = and i32 %18, %3"];
	Node0xdaf450[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0xdaf4c0[shape=record, label="  %21 = xor i32 %3, %0"];
	Node0xdaf530[shape=record, label="  %22 = or i32 %18, %3"];
	Node0xdaf5a0[shape=record, label="  %23 = or i32 %3, %0"];
	Node0xdaf610[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0xdaf6b0[shape=record, label="  %25 = mul i32 %24, -6"];
	Node0xdaf750[shape=record, label="  %26 = mul i32 %19, -7"];
	Node0xdaf7c0[shape=record, label="  %27 = and i32 %3, %0"];
	Node0xdaf830[shape=record, label="  %28 = add i32 %16, %15"];
	Node0xdaf8a0[shape=record, label="  %29 = sub i32 %28, %27"];
	Node0xdaf940[shape=record, label="  %30 = mul i32 %29, 5"];
	Node0xdaf9b0[shape=record, label="  %31 = add i32 %8, %3"];
	Node0xdafa50[shape=record, label="  %32 = mul i32 %31, 3"];
	Node0xdafcd0[shape=record, label="  %33 = add i32 %18, %2"];
	Node0xdafd40[shape=record, label="  %34 = add i32 %33, %14"];
	Node0xdafdb0[shape=record, label="  %35 = add i32 %34, %22"];
	Node0xdafe20[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0xdafe90[shape=record, label="  %37 = sub i32 3, %17"];
	Node0xdaff00[shape=record, label="  %38 = sub i32 %37, %11"];
	Node0xdaff70[shape=record, label="  %39 = add i32 %38, %5"];
	Node0xdaffe0[shape=record, label="  %40 = sub i32 %39, %13"];
	Node0xdb0050[shape=record, label="  %41 = add i32 %40, %20"];
	Node0xdb00c0[shape=record, label="  %42 = sub i32 %41, %21"];
	Node0xdb0130[shape=record, label="  %43 = add i32 %42, %23"];
	Node0xdb01a0[shape=record, label="  %44 = sub i32 %43, %10"];
	Node0xdb0210[shape=record, label="  %45 = add i32 %44, %25"];
	Node0xdb0280[shape=record, label="  %46 = add i32 %45, %26"];
	Node0xdb02f0[shape=record, label="  %47 = add i32 %46, %32"];
	Node0xdb0360[shape=record, label="  %48 = add i32 %47, %30"];
	Node0xdb03d0[shape=record, label="  %49 = add i32 %48, %36"];
	Node0xdb0440[shape=record, label="  %50 = icmp eq i32 %6, %49"];
	Node0xd4f268[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xdb08e0[shape=record, label="  %52 = tail call i32 @puts(i8* nonnull dereferenceable(1) %51)"];
	Node0xdb0930[shape=record, label="  ret void"];
	Node0xdaed30 -> Node0xdaedd0;
	Node0xdaedd0 -> Node0xdaee40;
	Node0xdaee40 -> Node0xdaeeb0;
	Node0xdaeeb0 -> Node0xdaef50;
	Node0xdaef50 -> Node0xdaeff0;
	Node0xdaeff0 -> Node0xdaf060;
	Node0xdaf060 -> Node0xdaf0d0;
	Node0xdaf0d0 -> Node0xdaf140;
	Node0xdaf140 -> Node0xdaf1b0;
	Node0xdaf1b0 -> Node0xdaf220;
	Node0xdaf220 -> Node0xdaf290;
	Node0xdaf290 -> Node0xdaf300;
	Node0xdaf300 -> Node0xdaf370;
	Node0xdaf370 -> Node0xdaf3e0;
	Node0xdaf3e0 -> Node0xdaf450;
	Node0xdaf450 -> Node0xdaf4c0;
	Node0xdaf4c0 -> Node0xdaf530;
	Node0xdaf530 -> Node0xdaf5a0;
	Node0xdaf5a0 -> Node0xdaf610;
	Node0xdaf610 -> Node0xdaf6b0;
	Node0xdaf6b0 -> Node0xdaf750;
	Node0xdaf750 -> Node0xdaf7c0;
	Node0xdaf7c0 -> Node0xdaf830;
	Node0xdaf830 -> Node0xdaf8a0;
	Node0xdaf8a0 -> Node0xdaf940;
	Node0xdaf940 -> Node0xdaf9b0;
	Node0xdaf9b0 -> Node0xdafa50;
	Node0xdafa50 -> Node0xdafcd0;
	Node0xdafcd0 -> Node0xdafd40;
	Node0xdafd40 -> Node0xdafdb0;
	Node0xdafdb0 -> Node0xdafe20;
	Node0xdafe20 -> Node0xdafe90;
	Node0xdafe90 -> Node0xdaff00;
	Node0xdaff00 -> Node0xdaff70;
	Node0xdaff70 -> Node0xdaffe0;
	Node0xdaffe0 -> Node0xdb0050;
	Node0xdb0050 -> Node0xdb00c0;
	Node0xdb00c0 -> Node0xdb0130;
	Node0xdb0130 -> Node0xdb01a0;
	Node0xdb01a0 -> Node0xdb0210;
	Node0xdb0210 -> Node0xdb0280;
	Node0xdb0280 -> Node0xdb02f0;
	Node0xdb02f0 -> Node0xdb0360;
	Node0xdb0360 -> Node0xdb03d0;
	Node0xdb03d0 -> Node0xdb0440;
	Node0xdb0440 -> Node0xd4f268;
	Node0xd4f268 -> Node0xdb08e0;
	Node0xdb08e0 -> Node0xdb0930;
edge [color=red]
	Node0xdaee40 -> Node0xdaeeb0;
	Node0xdaeeb0 -> Node0xdaef50;
	Node0xdaef50 -> Node0xdaeff0;
	Node0xdaee40 -> Node0xdaf0d0;
	Node0xdaf0d0 -> Node0xdaf140;
	Node0xdaf060 -> Node0xdaf220;
	Node0xdaf370 -> Node0xdaf3e0;
	Node0xdaf3e0 -> Node0xdaf450;
	Node0xdaf370 -> Node0xdaf530;
	Node0xdaf5a0 -> Node0xdaf610;
	Node0xdaf610 -> Node0xdaf6b0;
	Node0xdaf3e0 -> Node0xdaf750;
	Node0xdaf290 -> Node0xdaf830;
	Node0xdaf220 -> Node0xdaf830;
	Node0xdaf830 -> Node0xdaf8a0;
	Node0xdaf7c0 -> Node0xdaf8a0;
	Node0xdaf8a0 -> Node0xdaf940;
	Node0xdaeeb0 -> Node0xdaf9b0;
	Node0xdaf9b0 -> Node0xdafa50;
	Node0xdaf370 -> Node0xdafcd0;
	Node0xdafcd0 -> Node0xdafd40;
	Node0xdaf1b0 -> Node0xdafd40;
	Node0xdafd40 -> Node0xdafdb0;
	Node0xdaf530 -> Node0xdafdb0;
	Node0xdafdb0 -> Node0xdafe20;
	Node0xdaf300 -> Node0xdafe90;
	Node0xdafe90 -> Node0xdaff00;
	Node0xdaf060 -> Node0xdaff00;
	Node0xdaff00 -> Node0xdaff70;
	Node0xdaed30 -> Node0xdaff70;
	Node0xdaff70 -> Node0xdaffe0;
	Node0xdaf140 -> Node0xdaffe0;
	Node0xdaffe0 -> Node0xdb0050;
	Node0xdaf450 -> Node0xdb0050;
	Node0xdb0050 -> Node0xdb00c0;
	Node0xdaf4c0 -> Node0xdb00c0;
	Node0xdb00c0 -> Node0xdb0130;
	Node0xdaf5a0 -> Node0xdb0130;
	Node0xdb0130 -> Node0xdb01a0;
	Node0xdaeff0 -> Node0xdb01a0;
	Node0xdb01a0 -> Node0xdb0210;
	Node0xdaf6b0 -> Node0xdb0210;
	Node0xdb0210 -> Node0xdb0280;
	Node0xdaf750 -> Node0xdb0280;
	Node0xdb0280 -> Node0xdb02f0;
	Node0xdafa50 -> Node0xdb02f0;
	Node0xdb02f0 -> Node0xdb0360;
	Node0xdaf940 -> Node0xdb0360;
	Node0xdb0360 -> Node0xdb03d0;
	Node0xdafe20 -> Node0xdb03d0;
	Node0xdaedd0 -> Node0xdb0440;
	Node0xdb03d0 -> Node0xdb0440;
	Node0xdb0440 -> Node0xd4f268;
	Node0xd4f268 -> Node0xdb08e0;
}
