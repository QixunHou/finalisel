; ModuleID = '../.././c_source_file/0048_path_condition_crackme.c'
source_filename = "../.././c_source_file/0048_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = and i32 %2, %1
  %9 = and i32 %8, %7
  %10 = xor i32 %2, %1
  %11 = and i32 %10, %0
  %12 = or i32 %9, %11
  %13 = mul i32 %12, -3
  %14 = xor i32 %5, %3
  %15 = xor i32 %14, -1
  %16 = xor i32 %15, %4
  %17 = shl i32 %16, 1
  %18 = xor i32 %4, -1
  %19 = and i32 %5, %3
  %20 = xor i32 %19, -1
  %21 = and i32 %20, %18
  %22 = sub i32 %13, %21
  %23 = sub i32 %22, %17
  %24 = xor i32 %2, -1
  %25 = or i32 %24, %1
  %26 = xor i32 %25, -1
  %27 = and i32 %8, %0
  %28 = or i32 %2, %1
  %29 = xor i32 %28, %0
  %30 = xor i32 %27, 2147483647
  %31 = xor i32 %30, %29
  %32 = or i32 %1, %0
  %33 = xor i32 %32, -1
  %34 = xor i32 %2, %0
  %35 = xor i32 %34, -1
  %36 = or i32 %35, %33
  %37 = xor i32 %8, -1
  %38 = xor i32 %37, %0
  %39 = or i32 %24, %0
  %40 = and i32 %39, %1
  %41 = xor i32 %1, -1
  %42 = or i32 %41, %0
  %43 = xor i32 %42, %2
  %44 = xor i32 %1, %0
  %45 = xor i32 %44, -1
  %46 = or i32 %45, %2
  %47 = xor i32 %25, %0
  %48 = and i32 %1, %0
  %49 = or i32 %48, %24
  %50 = xor i32 %48, -1
  %51 = add i32 %48, 1
  %52 = and i32 %2, %0
  %53 = or i32 %8, %0
  %54 = xor i32 %39, -1
  %55 = or i32 %44, %54
  %56 = xor i32 %42, -1
  %57 = or i32 %52, %56
  %58 = and i32 %24, %0
  %59 = xor i32 %58, -1
  %60 = and i32 %59, %45
  %61 = xor i32 %10, %0
  %62 = xor i32 %27, %61
  %63 = and i32 %41, %0
  %64 = or i32 %34, %63
  %65 = or i32 %48, %35
  %66 = or i32 %37, %0
  %67 = and i32 %34, %1
  %68 = or i32 %2, %0
  %69 = and i32 %68, %1
  %70 = xor i32 %10, -1
  %71 = and i32 %70, %0
  %72 = or i32 %10, %56
  %73 = and i32 %24, %1
  %74 = xor i32 %73, -1
  %75 = or i32 %74, %7
  %76 = or i32 %63, %35
  %77 = xor i32 %28, %48
  %78 = and i32 %41, %2
  %79 = and i32 %78, %0
  %80 = or i32 %41, %2
  %81 = and i32 %80, %7
  %82 = xor i32 %79, -1
  %83 = xor i32 %81, %82
  %84 = or i32 %25, %7
  %85 = or i32 %33, %2
  %86 = xor i32 %80, %0
  %87 = or i32 %79, %86
  %88 = or i32 %24, %45
  %89 = and i32 %68, %44
  %90 = or i32 %28, %7
  %91 = and i32 %28, %0
  %92 = or i32 %9, %91
  %93 = or i32 %24, %33
  %94 = xor i32 %63, -1
  %95 = and i32 %24, %94
  %96 = or i32 %52, %44
  %97 = or i32 %35, %56
  %98 = or i32 %10, %48
  %99 = xor i32 %28, -1
  %100 = or i32 %48, %99
  %101 = xor i32 %58, %25
  %102 = xor i32 %52, %1
  %103 = shl i32 %102, 1
  %104 = and i32 %78, %7
  %105 = or i32 %10, %7
  %106 = xor i32 %104, %105
  %107 = or i32 %10, %0
  %108 = xor i32 %107, -1
  %109 = or i32 %79, %108
  %110 = xor i32 %9, -1
  %111 = xor i32 %91, %110
  %112 = or i32 %58, %45
  %113 = and i32 %34, %44
  %114 = and i32 %44, %59
  %115 = or i32 %73, %0
  %116 = xor i32 %73, %0
  %117 = xor i32 %63, %2
  %118 = and i32 %39, %44
  %119 = or i32 %10, %63
  %120 = or i32 %58, %8
  %121 = or i32 %58, %26
  %122 = and i32 %80, %0
  %123 = xor i32 %122, -1
  %124 = xor i32 %104, %123
  %125 = xor i32 %99, %0
  %126 = shl i32 %125, 2
  %127 = and i32 %59, %41
  %128 = and i32 %25, %0
  %129 = and i32 %24, %45
  %130 = xor i32 %63, %37
  %131 = xor i32 %68, %1
  %132 = or i32 %73, %7
  %133 = xor i32 %54, %1
  %134 = xor i32 %70, %0
  %135 = or i32 %54, %1
  %136 = shl i32 %135, 1
  %137 = xor i32 %52, %74
  %138 = xor i32 %58, %37
  %139 = or i32 %34, %56
  %140 = and i32 %35, %94
  %141 = and i32 %45, %2
  %142 = and i32 %24, %50
  %143 = and i32 %68, %41
  %144 = and i32 %39, %45
  %145 = xor i32 %52, -1
  %146 = xor i32 %145, %1
  %147 = or i32 %26, %7
  %148 = or i32 %25, %0
  %149 = shl i32 %148, 1
  %150 = or i32 %27, %29
  %151 = or i32 %58, %1
  %152 = shl i32 %151, 1
  %153 = or i32 %10, %33
  %154 = xor i32 %59, %1
  %155 = xor i32 %86, %82
  %156 = xor i32 %68, -1
  %157 = add i32 %68, 1
  %158 = and i32 %74, %0
  %159 = or i32 %48, %54
  %160 = or i32 %28, %0
  %161 = or i32 %34, %41
  %162 = and i32 %25, %7
  %163 = and i32 %35, %41
  %164 = xor i32 %52, %32
  %165 = xor i32 %39, %1
  %166 = or i32 %44, %35
  %167 = and i32 %44, %24
  %168 = shl i32 %167, 1
  %169 = or i32 %34, %45
  %170 = or i32 %52, %73
  %171 = shl i32 %170, 1
  %172 = and i32 %10, %7
  %173 = or i32 %24, %56
  %174 = and i32 %10, %50
  %175 = or i32 %79, %81
  %176 = and i32 %50, %2
  %177 = or i32 %99, %7
  %178 = xor i32 %30, %172
  %179 = and i32 %37, %0
  %180 = xor i32 %25, %48
  %181 = or i32 %99, %0
  %182 = xor i32 %50, %2
  %183 = shl i32 %182, 1
  %184 = and i32 %42, %24
  %185 = xor i32 %26, %0
  %186 = and i32 %28, %7
  %187 = or i32 %27, %186
  %188 = or i32 %48, %156
  %189 = or i32 %74, %0
  %190 = shl i32 %189, 1
  %191 = xor i32 %58, %1
  %192 = and i32 %34, %94
  %193 = and i32 %42, %2
  %194 = or i32 %52, %33
  %195 = or i32 %35, %41
  %196 = or i32 %104, %122
  %197 = xor i32 %156, %1
  %198 = shl i32 %197, 1
  %199 = or i32 %44, %24
  %200 = or i32 %44, %156
  %201 = or i32 %156, %41
  %202 = xor i32 %32, %2
  %203 = and i32 %59, %1
  %204 = xor i32 %48, %2
  %205 = and i32 %145, %41
  %206 = shl i32 %205, 1
  %207 = xor i32 %11, %110
  %208 = shl i32 %107, 1
  %209 = or i32 %48, %2
  %210 = or i32 %52, %45
  %211 = shl i32 %210, 1
  %212 = and i32 %34, %42
  %213 = and i32 %35, %1
  %214 = add i32 %39, 1
  %215 = xor i32 %33, %2
  %216 = and i32 %10, %94
  %217 = and i32 %34, %32
  %218 = xor i32 %68, %48
  %219 = xor i32 %52, %28
  %220 = shl i32 %219, 1
  %221 = or i32 %8, %7
  %222 = and i32 %70, %7
  %223 = or i32 %73, %63
  %224 = shl i32 %56, 1
  %225 = or i32 %44, %2
  %226 = and i32 %32, %24
  %227 = xor i32 %74, %0
  %228 = and i32 %70, %50
  %229 = or i32 %70, %0
  %230 = xor i32 %8, %0
  %231 = or i32 %27, %172
  %232 = shl i32 %231, 1
  %233 = xor i32 %52, %42
  %234 = shl i32 %35, 1
  %235 = and i32 %42, %35
  %236 = and i32 %35, %45
  %237 = shl i32 %236, 1
  %238 = and i32 %145, %1
  %239 = and i32 %32, %35
  %240 = and i32 %94, %2
  %241 = and i32 %42, %70
  %242 = xor i32 %56, %2
  %243 = and i32 %32, %2
  %244 = and i32 %44, %35
  %245 = or i32 %52, %41
  %246 = or i32 %34, %33
  %247 = and i32 %34, %45
  %248 = xor i32 %79, %107
  %249 = and i32 %34, %41
  %250 = shl i32 %249, 1
  %251 = or i32 %8, %63
  %252 = xor i32 %63, %74
  %253 = or i32 %48, %26
  %254 = or i32 %156, %1
  %255 = or i32 %26, %0
  %256 = xor i32 %61, -1
  %257 = xor i32 %79, %256
  %258 = or i32 %63, %2
  %259 = or i32 %58, %41
  %260 = and i32 %44, %145
  %261 = shl i32 %260, 1
  %262 = or i32 %58, %44
  %263 = shl i32 %70, 1
  %264 = or i32 %156, %45
  %265 = or i32 %79, %61
  %266 = or i32 %70, %7
  %267 = and i32 %35, %50
  %268 = or i32 %56, %2
  %269 = xor i32 %186, -1
  %270 = xor i32 %27, %269
  %271 = or i32 %37, %7
  %272 = xor i32 %105, 2147483647
  %273 = or i32 %272, %104
  %274 = shl i32 %273, 1
  %275 = or i32 %70, %33
  %276 = shl i32 %275, 2
  %277 = or i32 %35, %45
  %278 = xor i32 %94, %2
  %279 = or i32 %34, %1
  %280 = shl i32 %279, 2
  %281 = and i32 %39, %41
  %282 = or i32 %63, %24
  %283 = and i32 %37, %7
  %284 = or i32 %52, %99
  %285 = and i32 %70, %94
  %286 = xor i32 %39, %48
  %287 = or i32 %27, %256
  %288 = or i32 %34, %48
  %289 = shl i32 %288, 1
  %290 = or i32 %54, %45
  %291 = and i32 %10, %32
  %292 = or i32 %63, %70
  %293 = or i32 %34, %44
  %294 = or i32 %48, %70
  %295 = or i32 %54, %41
  %296 = shl i32 %94, 1
  %297 = shl i32 %7, 2
  %298 = and i32 %32, %70
  %299 = and i32 %145, %45
  %300 = and i32 %10, %42
  %301 = and i32 %74, %7
  %302 = or i32 %35, %1
  %303 = and i32 %34, %50
  %304 = and i32 %44, %2
  %305 = or i32 %52, %1
  %306 = and i32 %99, %7
  %307 = shl i32 %306, 4
  %308 = and i32 %73, %7
  %309 = shl i32 %308, 4
  %310 = and i32 %73, %0
  %311 = mul i32 %310, -10
  %312 = and i32 %26, %7
  %313 = mul i32 %312, -7
  %314 = mul i32 %9, 25
  %315 = and i32 %26, %0
  %316 = mul i32 %315, -15
  %317 = mul i32 %27, 17
  %318 = and i32 %4, %3
  %319 = xor i32 %318, -1
  %320 = and i32 %15, %319
  %321 = xor i32 %3, -1
  %322 = xor i32 %5, -1
  %323 = or i32 %322, %4
  %324 = and i32 %323, %321
  %325 = and i32 %19, %4
  %326 = xor i32 %14, %4
  %327 = xor i32 %325, %326
  %328 = or i32 %322, %3
  %329 = or i32 %328, %18
  %330 = xor i32 %5, %4
  %331 = or i32 %330, %321
  %332 = shl i32 %331, 1
  %333 = or i32 %4, %3
  %334 = and i32 %333, %15
  %335 = or i32 %5, %3
  %336 = xor i32 %335, -1
  %337 = or i32 %336, %18
  %338 = or i32 %5, %4
  %339 = xor i32 %338, -1
  %340 = or i32 %318, %339
  %341 = and i32 %5, %4
  %342 = or i32 %341, %336
  %343 = xor i32 %4, %3
  %344 = or i32 %330, %343
  %345 = or i32 %318, %5
  %346 = or i32 %321, %4
  %347 = xor i32 %346, -1
  %348 = xor i32 %347, %5
  %349 = or i32 %14, %318
  %350 = or i32 %335, %18
  %351 = xor i32 %343, -1
  %352 = and i32 %322, %351
  %353 = and i32 %319, %5
  %354 = and i32 %19, %18
  %355 = and i32 %14, %4
  %356 = or i32 %354, %355
  %357 = shl i32 %356, 1
  %358 = xor i32 %333, -1
  %359 = xor i32 %330, -1
  %360 = or i32 %359, %358
  %361 = or i32 %347, %5
  %362 = or i32 %19, %4
  %363 = and i32 %321, %4
  %364 = xor i32 %363, -1
  %365 = and i32 %364, %5
  %366 = shl i32 %365, 1
  %367 = and i32 %15, %364
  %368 = or i32 %343, %322
  %369 = shl i32 %368, 1
  %370 = xor i32 %341, -1
  %371 = and i32 %370, %3
  %372 = shl i32 %371, 1
  %373 = and i32 %321, %5
  %374 = and i32 %373, %4
  %375 = xor i32 %326, -1
  %376 = xor i32 %374, %375
  %377 = xor i32 %323, -1
  %378 = or i32 %377, %351
  %379 = xor i32 %335, %4
  %380 = xor i32 %328, -1
  %381 = or i32 %318, %380
  %382 = xor i32 %20, %4
  %383 = add i32 %3, 1
  %384 = and i32 %322, %3
  %385 = xor i32 %384, %4
  %386 = or i32 %330, %351
  %387 = or i32 %15, %18
  %388 = and i32 %346, %359
  %389 = xor i32 %341, %3
  %390 = or i32 %359, %321
  %391 = and i32 %322, %4
  %392 = xor i32 %391, -1
  %393 = and i32 %392, %321
  %394 = xor i32 %384, -1
  %395 = and i32 %394, %18
  %396 = shl i32 %395, 1
  %397 = xor i32 %328, %318
  %398 = and i32 %322, %364
  %399 = or i32 %19, %363
  %400 = or i32 %358, %5
  %401 = shl i32 %400, 1
  %402 = and i32 %338, %351
  %403 = xor i32 %370, %3
  %404 = and i32 %343, %359
  %405 = or i32 %19, %18
  %406 = and i32 %373, %18
  %407 = or i32 %321, %5
  %408 = and i32 %407, %4
  %409 = xor i32 %408, -1
  %410 = xor i32 %406, %409
  %411 = and i32 %330, %321
  %412 = and i32 %333, %322
  %413 = or i32 %330, %363
  %414 = or i32 %322, %351
  %415 = or i32 %325, %375
  %416 = or i32 %341, %321
  %417 = xor i32 %339, %3
  %418 = xor i32 %363, %20
  %419 = and i32 %15, %18
  %420 = or i32 %341, %347
  %421 = xor i32 %319, %5
  %422 = or i32 %20, %4
  %423 = and i32 %343, %370
  %424 = or i32 %384, %363
  %425 = and i32 %323, %3
  %426 = and i32 %335, %4
  %427 = xor i32 %426, -1
  %428 = xor i32 %354, %427
  %429 = and i32 %328, %4
  %430 = and i32 %359, %364
  %431 = and i32 %330, %3
  %432 = xor i32 %336, %4
  %433 = xor i32 %333, %5
  %434 = xor i32 %341, %333
  %435 = and i32 %343, %392
  %436 = and i32 %333, %359
  %437 = and i32 %323, %351
  %438 = and i32 %407, %18
  %439 = or i32 %374, %438
  %440 = shl i32 %439, 1
  %441 = and i32 %343, %5
  %442 = or i32 %335, %4
  %443 = xor i32 %363, %394
  %444 = or i32 %330, %3
  %445 = and i32 %330, %364
  %446 = xor i32 %377, %3
  %447 = shl i32 %446, 1
  %448 = or i32 %343, %5
  %449 = or i32 %318, %359
  %450 = and i32 %14, %346
  %451 = or i32 %391, %343
  %452 = or i32 %354, %426
  %453 = and i32 %15, %4
  %454 = add i32 %328, 1
  %455 = and i32 %20, %4
  %456 = or i32 %339, %321
  %457 = and i32 %330, %333
  %458 = and i32 %394, %4
  %459 = xor i32 %341, %394
  %460 = or i32 %318, %377
  %461 = and i32 %392, %351
  %462 = shl i32 %461, 1
  %463 = and i32 %370, %321
  %464 = and i32 %359, %319
  %465 = xor i32 %392, %3
  %466 = or i32 %377, %3
  %467 = shl i32 %466, 1
  %468 = or i32 %359, %351
  %469 = or i32 %14, %347
  %470 = xor i32 %338, %3
  %471 = or i32 %330, %347
  %472 = xor i32 %407, %4
  %473 = or i32 %374, %472
  %474 = or i32 %380, %18
  %475 = and i32 %336, %18
  %476 = shl i32 %475, 2
  %477 = and i32 %384, %18
  %478 = and i32 %336, %4
  %479 = and i32 %384, %4
  %480 = mul i32 %479, -26
  %481 = and i32 %380, %18
  %482 = shl i32 %354, 3
  %483 = and i32 %380, %4
  %484 = add i32 %34, %304
  %485 = add i32 %484, %142
  %486 = add i32 %485, %141
  %487 = add i32 %486, %39
  %488 = add i32 %487, %10
  %489 = add i32 %172, %247
  %490 = add i32 %489, %147
  %491 = sub i32 %490, %113
  %492 = add i32 %491, %420
  %493 = sub i32 %492, %481
  %494 = sub i32 %493, %397
  %495 = add i32 %494, %393
  %496 = add i32 %495, %389
  %497 = mul i32 %496, 5
  %498 = sub i32 %45, %140
  %499 = sub i32 %498, %257
  %500 = sub i32 %499, %441
  %501 = add i32 %500, %341
  %502 = sub i32 %501, %432
  %503 = mul i32 %502, 3
  %504 = add i32 %325, %483
  %505 = add i32 %504, %478
  %506 = add i32 %505, %477
  %507 = mul i32 %506, -9
  %508 = add i32 %74, %3
  %509 = add i32 %508, %139
  %510 = shl i32 %509, 2
  %511 = add i32 %488, %25
  %512 = add i32 %511, %4
  %513 = add i32 %512, %301
  %514 = add i32 %513, %277
  %515 = add i32 %514, %267
  %516 = add i32 %515, %241
  %517 = add i32 %516, %181
  %518 = add i32 %517, %166
  %519 = add i32 %518, %163
  %520 = add i32 %519, %153
  %521 = add i32 %520, %146
  %522 = add i32 %521, %76
  %523 = add i32 %522, %71
  %524 = add i32 %523, %36
  %525 = add i32 %524, %351
  %526 = add i32 %525, %106
  %527 = add i32 %526, %62
  %528 = add i32 %527, %448
  %529 = add i32 %528, %412
  %530 = add i32 %529, %398
  %531 = add i32 %530, %178
  %532 = add i32 %531, %31
  %533 = add i32 %532, %460
  %534 = add i32 %533, %445
  %535 = add i32 %534, %429
  %536 = add i32 %535, %402
  %537 = add i32 %536, %344
  %538 = add i32 %537, %415
  %539 = shl i32 %538, 1
  %540 = mul i32 %90, 6
  %541 = sub i32 2, %0
  %542 = sub i32 %541, %297
  %543 = add i32 %542, %51
  %544 = sub i32 %543, %2
  %545 = add i32 %544, %24
  %546 = add i32 %545, %48
  %547 = sub i32 %546, %44
  %548 = sub i32 %547, %42
  %549 = sub i32 %548, %43
  %550 = sub i32 %549, %46
  %551 = add i32 %550, %49
  %552 = sub i32 %551, %52
  %553 = sub i32 %552, %85
  %554 = sub i32 %553, %88
  %555 = add i32 %554, %93
  %556 = add i32 %555, %95
  %557 = sub i32 %556, %117
  %558 = sub i32 %557, %129
  %559 = add i32 %558, %145
  %560 = add i32 %559, %157
  %561 = sub i32 %560, %173
  %562 = sub i32 %561, %176
  %563 = sub i32 %562, %184
  %564 = sub i32 %563, %68
  %565 = sub i32 %564, %193
  %566 = add i32 %565, %199
  %567 = add i32 %566, %202
  %568 = add i32 %567, %204
  %569 = add i32 %568, %209
  %570 = add i32 %569, %214
  %571 = sub i32 %570, %215
  %572 = sub i32 %571, %224
  %573 = add i32 %572, %225
  %574 = add i32 %573, %226
  %575 = sub i32 %574, %240
  %576 = add i32 %575, %242
  %577 = sub i32 %576, %243
  %578 = sub i32 %577, %258
  %579 = sub i32 %578, %268
  %580 = add i32 %579, %278
  %581 = add i32 %580, %282
  %582 = add i32 %581, %73
  %583 = sub i32 %582, %296
  %584 = add i32 %583, %383
  %585 = add i32 %584, %38
  %586 = add i32 %585, %40
  %587 = add i32 %586, %47
  %588 = add i32 %587, %53
  %589 = sub i32 %588, %55
  %590 = sub i32 %589, %57
  %591 = add i32 %590, %60
  %592 = sub i32 %591, %64
  %593 = sub i32 %592, %65
  %594 = add i32 %593, %66
  %595 = sub i32 %594, %67
  %596 = sub i32 %595, %69
  %597 = sub i32 %596, %72
  %598 = sub i32 %597, %75
  %599 = add i32 %598, %77
  %600 = add i32 %599, %84
  %601 = sub i32 %600, %89
  %602 = add i32 %601, %90
  %603 = sub i32 %602, %61
  %604 = add i32 %603, %96
  %605 = sub i32 %604, %97
  %606 = sub i32 %605, %98
  %607 = add i32 %606, %100
  %608 = sub i32 %607, %101
  %609 = add i32 %608, %112
  %610 = sub i32 %609, %114
  %611 = add i32 %610, %115
  %612 = add i32 %611, %116
  %613 = add i32 %612, %11
  %614 = add i32 %613, %118
  %615 = sub i32 %614, %119
  %616 = add i32 %615, %120
  %617 = sub i32 %616, %121
  %618 = add i32 %617, %29
  %619 = sub i32 %618, %127
  %620 = sub i32 %619, %128
  %621 = add i32 %620, %130
  %622 = add i32 %621, %131
  %623 = sub i32 %622, %132
  %624 = add i32 %623, %133
  %625 = add i32 %624, %134
  %626 = sub i32 %625, %137
  %627 = add i32 %626, %138
  %628 = sub i32 %627, %143
  %629 = sub i32 %628, %144
  %630 = add i32 %629, %154
  %631 = add i32 %630, %158
  %632 = sub i32 %631, %159
  %633 = sub i32 %632, %160
  %634 = add i32 %633, %161
  %635 = add i32 %634, %105
  %636 = add i32 %635, %162
  %637 = add i32 %636, %164
  %638 = sub i32 %637, %165
  %639 = sub i32 %638, %168
  %640 = sub i32 %639, %169
  %641 = add i32 %640, %174
  %642 = add i32 %641, %177
  %643 = sub i32 %642, %179
  %644 = add i32 %643, %180
  %645 = sub i32 %644, %183
  %646 = sub i32 %645, %185
  %647 = add i32 %646, %188
  %648 = sub i32 %647, %191
  %649 = add i32 %648, %192
  %650 = sub i32 %649, %194
  %651 = sub i32 %650, %195
  %652 = sub i32 %651, %200
  %653 = add i32 %652, %201
  %654 = add i32 %653, %203
  %655 = add i32 %654, %91
  %656 = add i32 %655, %212
  %657 = add i32 %656, %213
  %658 = sub i32 %657, %216
  %659 = add i32 %658, %217
  %660 = sub i32 %659, %218
  %661 = sub i32 %660, %221
  %662 = sub i32 %661, %222
  %663 = sub i32 %662, %223
  %664 = sub i32 %663, %227
  %665 = add i32 %664, %228
  %666 = add i32 %665, %229
  %667 = sub i32 %666, %230
  %668 = add i32 %667, %233
  %669 = sub i32 %668, %234
  %670 = add i32 %669, %235
  %671 = sub i32 %670, %238
  %672 = sub i32 %671, %239
  %673 = sub i32 %672, %244
  %674 = add i32 %673, %245
  %675 = sub i32 %674, %246
  %676 = sub i32 %675, %251
  %677 = sub i32 %676, %252
  %678 = sub i32 %677, %253
  %679 = add i32 %678, %254
  %680 = add i32 %679, %255
  %681 = add i32 %680, %259
  %682 = add i32 %681, %262
  %683 = sub i32 %682, %263
  %684 = add i32 %683, %264
  %685 = sub i32 %684, %266
  %686 = sub i32 %685, %271
  %687 = add i32 %686, %281
  %688 = add i32 %687, %283
  %689 = add i32 %688, %284
  %690 = sub i32 %689, %285
  %691 = add i32 %690, %286
  %692 = add i32 %691, %290
  %693 = sub i32 %692, %291
  %694 = add i32 %693, %292
  %695 = sub i32 %694, %293
  %696 = add i32 %695, %294
  %697 = add i32 %696, %295
  %698 = add i32 %697, %298
  %699 = sub i32 %698, %299
  %700 = sub i32 %699, %300
  %701 = sub i32 %700, %302
  %702 = add i32 %701, %303
  %703 = add i32 %702, %186
  %704 = add i32 %703, %305
  %705 = add i32 %704, %18
  %706 = add i32 %705, %83
  %707 = sub i32 %706, %87
  %708 = add i32 %707, %92
  %709 = sub i32 %708, %103
  %710 = add i32 %709, %109
  %711 = add i32 %710, %111
  %712 = sub i32 %711, %124
  %713 = sub i32 %712, %126
  %714 = sub i32 %713, %136
  %715 = sub i32 %714, %149
  %716 = add i32 %715, %150
  %717 = sub i32 %716, %152
  %718 = sub i32 %717, %155
  %719 = sub i32 %718, %171
  %720 = sub i32 %719, %175
  %721 = add i32 %720, %187
  %722 = sub i32 %721, %190
  %723 = add i32 %722, %196
  %724 = sub i32 %723, %198
  %725 = sub i32 %724, %206
  %726 = sub i32 %725, %207
  %727 = sub i32 %726, %208
  %728 = sub i32 %727, %211
  %729 = sub i32 %728, %220
  %730 = sub i32 %729, %237
  %731 = add i32 %730, %248
  %732 = sub i32 %731, %250
  %733 = sub i32 %732, %261
  %734 = sub i32 %733, %265
  %735 = sub i32 %734, %270
  %736 = sub i32 %735, %276
  %737 = sub i32 %736, %280
  %738 = sub i32 %737, %287
  %739 = sub i32 %738, %289
  %740 = sub i32 %739, %307
  %741 = sub i32 %740, %309
  %742 = add i32 %741, %311
  %743 = add i32 %742, %313
  %744 = add i32 %743, %314
  %745 = add i32 %744, %316
  %746 = add i32 %745, %317
  %747 = add i32 %746, %5
  %748 = sub i32 %747, %363
  %749 = sub i32 %748, %333
  %750 = sub i32 %749, %318
  %751 = sub i32 %750, %232
  %752 = sub i32 %751, %345
  %753 = sub i32 %752, %348
  %754 = add i32 %753, %19
  %755 = add i32 %754, %352
  %756 = sub i32 %755, %353
  %757 = sub i32 %756, %361
  %758 = sub i32 %757, %414
  %759 = sub i32 %758, %421
  %760 = add i32 %759, %433
  %761 = add i32 %760, %339
  %762 = sub i32 %761, %14
  %763 = sub i32 %762, %330
  %764 = add i32 %763, %454
  %765 = add i32 %764, %540
  %766 = sub i32 %765, %274
  %767 = add i32 %766, %320
  %768 = add i32 %767, %324
  %769 = sub i32 %768, %329
  %770 = sub i32 %769, %334
  %771 = add i32 %770, %337
  %772 = sub i32 %771, %340
  %773 = sub i32 %772, %342
  %774 = sub i32 %773, %349
  %775 = add i32 %774, %350
  %776 = sub i32 %775, %360
  %777 = add i32 %776, %362
  %778 = sub i32 %777, %366
  %779 = add i32 %778, %367
  %780 = sub i32 %779, %369
  %781 = add i32 %780, %378
  %782 = add i32 %781, %379
  %783 = add i32 %782, %381
  %784 = sub i32 %783, %382
  %785 = sub i32 %784, %385
  %786 = add i32 %785, %386
  %787 = sub i32 %786, %387
  %788 = add i32 %787, %388
  %789 = add i32 %788, %390
  %790 = add i32 %789, %399
  %791 = sub i32 %790, %401
  %792 = sub i32 %791, %326
  %793 = sub i32 %792, %403
  %794 = sub i32 %793, %404
  %795 = sub i32 %794, %405
  %796 = add i32 %795, %411
  %797 = sub i32 %796, %413
  %798 = add i32 %797, %416
  %799 = add i32 %798, %417
  %800 = add i32 %799, %418
  %801 = sub i32 %800, %419
  %802 = add i32 %801, %422
  %803 = sub i32 %802, %423
  %804 = add i32 %803, %424
  %805 = add i32 %804, %425
  %806 = add i32 %805, %430
  %807 = add i32 %806, %431
  %808 = add i32 %807, %434
  %809 = sub i32 %808, %435
  %810 = sub i32 %809, %436
  %811 = sub i32 %810, %437
  %812 = add i32 %811, %355
  %813 = sub i32 %812, %442
  %814 = sub i32 %813, %443
  %815 = add i32 %814, %444
  %816 = sub i32 %815, %449
  %817 = sub i32 %816, %450
  %818 = add i32 %817, %451
  %819 = add i32 %818, %453
  %820 = add i32 %819, %455
  %821 = add i32 %820, %456
  %822 = add i32 %821, %457
  %823 = sub i32 %822, %458
  %824 = add i32 %823, %459
  %825 = add i32 %824, %463
  %826 = sub i32 %825, %464
  %827 = add i32 %826, %465
  %828 = add i32 %827, %468
  %829 = sub i32 %828, %469
  %830 = sub i32 %829, %470
  %831 = add i32 %830, %471
  %832 = add i32 %831, %474
  %833 = add i32 %832, %510
  %834 = add i32 %833, %327
  %835 = sub i32 %834, %332
  %836 = sub i32 %835, %372
  %837 = sub i32 %836, %376
  %838 = sub i32 %837, %396
  %839 = add i32 %838, %410
  %840 = add i32 %839, %428
  %841 = sub i32 %840, %447
  %842 = add i32 %841, %452
  %843 = sub i32 %842, %462
  %844 = sub i32 %843, %467
  %845 = add i32 %844, %473
  %846 = sub i32 %845, %476
  %847 = add i32 %846, %480
  %848 = sub i32 %847, %482
  %849 = sub i32 %848, %357
  %850 = sub i32 %849, %440
  %851 = add i32 %850, %507
  %852 = add i32 %851, %503
  %853 = add i32 %852, %497
  %854 = add i32 %853, %539
  %855 = icmp eq i32 %23, %854
  %856 = select i1 %855, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %857 = tail call i32 @puts(i8* nonnull dereferenceable(1) %856)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
