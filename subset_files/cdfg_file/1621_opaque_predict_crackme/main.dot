digraph "DFG for'main' function" {
	Node0x184dee8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x184df68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x184dff8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x184e458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x184e538[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x184e658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x184e890[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x184e948[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x184f8b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x184ff40[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x184ffb0[shape=record, label="  %9 = add i32 %8, 1"];
	Node0x1850020[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x1850090[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x1850100[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x1850170[shape=record, label="  %13 = or i32 %7, %6"];
	Node0x18501e0[shape=record, label="  %14 = mul i32 %13, -2"];
	Node0x1850250[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x18502c0[shape=record, label="  %16 = or i32 %14, 1"];
	Node0x1850330[shape=record, label="  %17 = shl i32 %6, 1"];
	Node0x18503a0[shape=record, label="  %18 = shl i32 %13, 1"];
	Node0x1850410[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x1850480[shape=record, label="  %20 = xor i32 %11, -1"];
	Node0x18504f0[shape=record, label="  %21 = mul i32 %20, -5"];
	Node0x1850560[shape=record, label="  %22 = mul i32 %8, 3"];
	Node0x18505d0[shape=record, label="  %23 = shl i32 %15, 1"];
	Node0x1850670[shape=record, label="  %24 = sub i32 -3, %6"];
	Node0x18506e0[shape=record, label="  %25 = add i32 %24, %7"];
	Node0x1850750[shape=record, label="  %26 = sub i32 %25, %17"];
	Node0x18507c0[shape=record, label="  %27 = add i32 %26, %15"];
	Node0x1850830[shape=record, label="  %28 = add i32 %27, %23"];
	Node0x18508a0[shape=record, label="  %29 = add i32 %28, %21"];
	Node0x1850910[shape=record, label="  %30 = add i32 %29, %22"];
	Node0x1850980[shape=record, label="  %31 = add i32 %30, %16"];
	Node0x18509f0[shape=record, label="  %32 = sub i32 %31, %19"];
	Node0x1850c70[shape=record, label="  %33 = icmp eq i32 %12, %32"];
	Node0x17ee9d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1850d00[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x1850f58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x18510b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1851178[shape=record, label="  ret i32 0"];
	Node0x184dee8 -> Node0x184df68;
	Node0x184df68 -> Node0x184dff8;
	Node0x184dff8 -> Node0x184e458;
	Node0x184e458 -> Node0x184e538;
	Node0x184e538 -> Node0x184e658;
	Node0x184e658 -> Node0x184e890;
	Node0x184e890 -> Node0x184e948;
	Node0x184e948 -> Node0x184f8b8;
	Node0x184f8b8 -> Node0x184ff40;
	Node0x184ff40 -> Node0x184ffb0;
	Node0x184ffb0 -> Node0x1850020;
	Node0x1850020 -> Node0x1850090;
	Node0x1850090 -> Node0x1850100;
	Node0x1850100 -> Node0x1850170;
	Node0x1850170 -> Node0x18501e0;
	Node0x18501e0 -> Node0x1850250;
	Node0x1850250 -> Node0x18502c0;
	Node0x18502c0 -> Node0x1850330;
	Node0x1850330 -> Node0x18503a0;
	Node0x18503a0 -> Node0x1850410;
	Node0x1850410 -> Node0x1850480;
	Node0x1850480 -> Node0x18504f0;
	Node0x18504f0 -> Node0x1850560;
	Node0x1850560 -> Node0x18505d0;
	Node0x18505d0 -> Node0x1850670;
	Node0x1850670 -> Node0x18506e0;
	Node0x18506e0 -> Node0x1850750;
	Node0x1850750 -> Node0x18507c0;
	Node0x18507c0 -> Node0x1850830;
	Node0x1850830 -> Node0x18508a0;
	Node0x18508a0 -> Node0x1850910;
	Node0x1850910 -> Node0x1850980;
	Node0x1850980 -> Node0x18509f0;
	Node0x18509f0 -> Node0x1850c70;
	Node0x1850c70 -> Node0x17ee9d8;
	Node0x17ee9d8 -> Node0x1850d00;
	Node0x1850d00 -> Node0x1850f58;
	Node0x1850f58 -> Node0x18510b8;
	Node0x18510b8 -> Node0x1851178;
edge [color=red]
	Node0x184dee8 -> Node0x184dff8;
	Node0x184dff8 -> Node0x184e458;
	Node0x184df68 -> Node0x184e538;
	Node0x184e538 -> Node0x184e658;
	Node0x184dee8 -> Node0x184e890;
	Node0x184df68 -> Node0x184e890;
	Node0x184dee8 -> Node0x184e948;
	Node0x184df68 -> Node0x184f8b8;
	Node0x184f8b8 -> Node0x184ff40;
	Node0x184e948 -> Node0x184ff40;
	Node0x184ff40 -> Node0x184ffb0;
	Node0x184f8b8 -> Node0x1850020;
	Node0x184e948 -> Node0x1850090;
	Node0x1850020 -> Node0x1850090;
	Node0x184ffb0 -> Node0x1850100;
	Node0x1850090 -> Node0x1850100;
	Node0x184f8b8 -> Node0x1850170;
	Node0x184e948 -> Node0x1850170;
	Node0x1850170 -> Node0x18501e0;
	Node0x184f8b8 -> Node0x1850250;
	Node0x184e948 -> Node0x1850250;
	Node0x18501e0 -> Node0x18502c0;
	Node0x184e948 -> Node0x1850330;
	Node0x1850170 -> Node0x18503a0;
	Node0x18503a0 -> Node0x1850410;
	Node0x1850090 -> Node0x1850480;
	Node0x1850480 -> Node0x18504f0;
	Node0x184ff40 -> Node0x1850560;
	Node0x1850250 -> Node0x18505d0;
	Node0x184e948 -> Node0x1850670;
	Node0x1850670 -> Node0x18506e0;
	Node0x184f8b8 -> Node0x18506e0;
	Node0x18506e0 -> Node0x1850750;
	Node0x1850330 -> Node0x1850750;
	Node0x1850750 -> Node0x18507c0;
	Node0x1850250 -> Node0x18507c0;
	Node0x18507c0 -> Node0x1850830;
	Node0x18505d0 -> Node0x1850830;
	Node0x1850830 -> Node0x18508a0;
	Node0x18504f0 -> Node0x18508a0;
	Node0x18508a0 -> Node0x1850910;
	Node0x1850560 -> Node0x1850910;
	Node0x1850910 -> Node0x1850980;
	Node0x18502c0 -> Node0x1850980;
	Node0x1850980 -> Node0x18509f0;
	Node0x1850410 -> Node0x18509f0;
	Node0x1850100 -> Node0x1850c70;
	Node0x18509f0 -> Node0x1850c70;
	Node0x1850c70 -> Node0x17ee9d8;
	Node0x17ee9d8 -> Node0x1850d00;
	Node0x184e538 -> Node0x1850f58;
	Node0x184dff8 -> Node0x18510b8;
}
