digraph "DFG for'crackme' function" {
	Node0x184c5b0[shape=record, label="  %3 = and i32 %1, %0"];
	Node0x184cc60[shape=record, label="  %4 = add i32 %3, 1"];
	Node0x184cd20[shape=record, label="  %5 = xor i32 %1, -1"];
	Node0x184cd90[shape=record, label="  %6 = or i32 %5, %0"];
	Node0x184ce00[shape=record, label="  %7 = add i32 %4, %6"];
	Node0x184ce70[shape=record, label="  %8 = or i32 %1, %0"];
	Node0x184cf10[shape=record, label="  %9 = mul i32 %8, -2"];
	Node0x184cf80[shape=record, label="  %10 = xor i32 %1, %0"];
	Node0x184cff0[shape=record, label="  %11 = or i32 %9, 1"];
	Node0x184d060[shape=record, label="  %12 = xor i32 %0, -1"];
	Node0x184d0d0[shape=record, label="  %13 = shl i32 %0, 1"];
	Node0x184d140[shape=record, label="  %14 = shl i32 %8, 1"];
	Node0x184d1b0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x184d220[shape=record, label="  %16 = xor i32 %6, -1"];
	Node0x184d2c0[shape=record, label="  %17 = mul i32 %16, -5"];
	Node0x184d360[shape=record, label="  %18 = mul i32 %3, 3"];
	Node0x184d3d0[shape=record, label="  %19 = shl i32 %10, 1"];
	Node0x184d440[shape=record, label="  %20 = add i32 %19, -2"];
	Node0x184d4b0[shape=record, label="  %21 = add i32 %12, %1"];
	Node0x184d520[shape=record, label="  %22 = sub i32 %21, %13"];
	Node0x184d590[shape=record, label="  %23 = add i32 %22, %10"];
	Node0x184d600[shape=record, label="  %24 = add i32 %23, %17"];
	Node0x184d670[shape=record, label="  %25 = add i32 %24, %18"];
	Node0x184d6e0[shape=record, label="  %26 = add i32 %25, %11"];
	Node0x184d750[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0x184d7c0[shape=record, label="  %28 = add i32 %27, %20"];
	Node0x184d830[shape=record, label="  %29 = icmp eq i32 %7, %28"];
	Node0x17ed268[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x184dcd0[shape=record, label="  %31 = tail call i32 @puts(i8* nonnull dereferenceable(1) %30)"];
	Node0x184dd20[shape=record, label="  ret void"];
	Node0x184c5b0 -> Node0x184cc60;
	Node0x184cc60 -> Node0x184cd20;
	Node0x184cd20 -> Node0x184cd90;
	Node0x184cd90 -> Node0x184ce00;
	Node0x184ce00 -> Node0x184ce70;
	Node0x184ce70 -> Node0x184cf10;
	Node0x184cf10 -> Node0x184cf80;
	Node0x184cf80 -> Node0x184cff0;
	Node0x184cff0 -> Node0x184d060;
	Node0x184d060 -> Node0x184d0d0;
	Node0x184d0d0 -> Node0x184d140;
	Node0x184d140 -> Node0x184d1b0;
	Node0x184d1b0 -> Node0x184d220;
	Node0x184d220 -> Node0x184d2c0;
	Node0x184d2c0 -> Node0x184d360;
	Node0x184d360 -> Node0x184d3d0;
	Node0x184d3d0 -> Node0x184d440;
	Node0x184d440 -> Node0x184d4b0;
	Node0x184d4b0 -> Node0x184d520;
	Node0x184d520 -> Node0x184d590;
	Node0x184d590 -> Node0x184d600;
	Node0x184d600 -> Node0x184d670;
	Node0x184d670 -> Node0x184d6e0;
	Node0x184d6e0 -> Node0x184d750;
	Node0x184d750 -> Node0x184d7c0;
	Node0x184d7c0 -> Node0x184d830;
	Node0x184d830 -> Node0x17ed268;
	Node0x17ed268 -> Node0x184dcd0;
	Node0x184dcd0 -> Node0x184dd20;
edge [color=red]
	Node0x184c5b0 -> Node0x184cc60;
	Node0x184cd20 -> Node0x184cd90;
	Node0x184cc60 -> Node0x184ce00;
	Node0x184cd90 -> Node0x184ce00;
	Node0x184ce70 -> Node0x184cf10;
	Node0x184cf10 -> Node0x184cff0;
	Node0x184ce70 -> Node0x184d140;
	Node0x184d140 -> Node0x184d1b0;
	Node0x184cd90 -> Node0x184d220;
	Node0x184d220 -> Node0x184d2c0;
	Node0x184c5b0 -> Node0x184d360;
	Node0x184cf80 -> Node0x184d3d0;
	Node0x184d3d0 -> Node0x184d440;
	Node0x184d060 -> Node0x184d4b0;
	Node0x184d4b0 -> Node0x184d520;
	Node0x184d0d0 -> Node0x184d520;
	Node0x184d520 -> Node0x184d590;
	Node0x184cf80 -> Node0x184d590;
	Node0x184d590 -> Node0x184d600;
	Node0x184d2c0 -> Node0x184d600;
	Node0x184d600 -> Node0x184d670;
	Node0x184d360 -> Node0x184d670;
	Node0x184d670 -> Node0x184d6e0;
	Node0x184cff0 -> Node0x184d6e0;
	Node0x184d6e0 -> Node0x184d750;
	Node0x184d1b0 -> Node0x184d750;
	Node0x184d750 -> Node0x184d7c0;
	Node0x184d440 -> Node0x184d7c0;
	Node0x184ce00 -> Node0x184d830;
	Node0x184d7c0 -> Node0x184d830;
	Node0x184d830 -> Node0x17ed268;
	Node0x17ed268 -> Node0x184dcd0;
}
