digraph "DFG for'main' function" {
	Node0x100efc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x100f048[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x100f0d8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x100f138[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x100f1e8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x100f618[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x100f6f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x100f7f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x100f8b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x100f968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x100fa28[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x100fad8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1009830[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x100fcd8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1010c48[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10112b8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1011318[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1011428[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x1011688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10117e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10118f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1011a08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1011ac8[shape=record, label="  ret i32 0"];
	Node0x100efc8 -> Node0x100f048;
	Node0x100f048 -> Node0x100f0d8;
	Node0x100f0d8 -> Node0x100f138;
	Node0x100f138 -> Node0x100f1e8;
	Node0x100f1e8 -> Node0x100f618;
	Node0x100f618 -> Node0x100f6f8;
	Node0x100f6f8 -> Node0x100f7f8;
	Node0x100f7f8 -> Node0x100f8b8;
	Node0x100f8b8 -> Node0x100f968;
	Node0x100f968 -> Node0x100fa28;
	Node0x100fa28 -> Node0x100fad8;
	Node0x100fad8 -> Node0x1009830;
	Node0x1009830 -> Node0x100fcd8;
	Node0x100fcd8 -> Node0x1010c48;
	Node0x1010c48 -> Node0x10112b8;
	Node0x10112b8 -> Node0x1011318;
	Node0x1011318 -> Node0x1011428;
	Node0x1011428 -> Node0x1011688;
	Node0x1011688 -> Node0x10117e8;
	Node0x10117e8 -> Node0x10118f8;
	Node0x10118f8 -> Node0x1011a08;
	Node0x1011a08 -> Node0x1011ac8;
edge [color=red]
	Node0x100efc8 -> Node0x100f1e8;
	Node0x100f1e8 -> Node0x100f618;
	Node0x100f048 -> Node0x100f6f8;
	Node0x100f6f8 -> Node0x100f7f8;
	Node0x100f0d8 -> Node0x100f8b8;
	Node0x100f8b8 -> Node0x100f968;
	Node0x100f138 -> Node0x100fa28;
	Node0x100fa28 -> Node0x100fad8;
	Node0x100efc8 -> Node0x1009830;
	Node0x100f048 -> Node0x1009830;
	Node0x100f0d8 -> Node0x1009830;
	Node0x100f138 -> Node0x1009830;
	Node0x100efc8 -> Node0x100fcd8;
	Node0x100f048 -> Node0x1010c48;
	Node0x100f0d8 -> Node0x10112b8;
	Node0x100f138 -> Node0x1011318;
	Node0x100fcd8 -> Node0x1011428;
	Node0x1010c48 -> Node0x1011428;
	Node0x10112b8 -> Node0x1011428;
	Node0x1011318 -> Node0x1011428;
	Node0x100fa28 -> Node0x1011688;
	Node0x100f8b8 -> Node0x10117e8;
	Node0x100f6f8 -> Node0x10118f8;
	Node0x100f1e8 -> Node0x1011a08;
}
