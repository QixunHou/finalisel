digraph "DFG for'main' function" {
	Node0x166bf98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x166c018[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x166c0a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x166c108[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x166c588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x166c668[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x166c768[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x166c828[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x166c8d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x166cb38[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x166cbf8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x166db68[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x166dbc8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x166dcc0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x166e9d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x166eb18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x166ec28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x166ece8[shape=record, label="  ret i32 0"];
	Node0x166bf98 -> Node0x166c018;
	Node0x166c018 -> Node0x166c0a8;
	Node0x166c0a8 -> Node0x166c108;
	Node0x166c108 -> Node0x166c588;
	Node0x166c588 -> Node0x166c668;
	Node0x166c668 -> Node0x166c768;
	Node0x166c768 -> Node0x166c828;
	Node0x166c828 -> Node0x166c8d8;
	Node0x166c8d8 -> Node0x166cb38;
	Node0x166cb38 -> Node0x166cbf8;
	Node0x166cbf8 -> Node0x166db68;
	Node0x166db68 -> Node0x166dbc8;
	Node0x166dbc8 -> Node0x166dcc0;
	Node0x166dcc0 -> Node0x166e9d8;
	Node0x166e9d8 -> Node0x166eb18;
	Node0x166eb18 -> Node0x166ec28;
	Node0x166ec28 -> Node0x166ece8;
edge [color=red]
	Node0x166bf98 -> Node0x166c108;
	Node0x166c108 -> Node0x166c588;
	Node0x166c018 -> Node0x166c668;
	Node0x166c668 -> Node0x166c768;
	Node0x166c0a8 -> Node0x166c828;
	Node0x166c828 -> Node0x166c8d8;
	Node0x166bf98 -> Node0x166cb38;
	Node0x166c018 -> Node0x166cb38;
	Node0x166c0a8 -> Node0x166cb38;
	Node0x166bf98 -> Node0x166cbf8;
	Node0x166c018 -> Node0x166db68;
	Node0x166c0a8 -> Node0x166dbc8;
	Node0x166cbf8 -> Node0x166dcc0;
	Node0x166db68 -> Node0x166dcc0;
	Node0x166dbc8 -> Node0x166dcc0;
	Node0x166c828 -> Node0x166e9d8;
	Node0x166c668 -> Node0x166eb18;
	Node0x166c108 -> Node0x166ec28;
}
