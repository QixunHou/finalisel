; ModuleID = '../.././c_source_file/0345_path_condition_crackme.c'
source_filename = "../.././c_source_file/0345_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %2, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %1, %0
  %10 = or i32 %9, %8
  %11 = and i32 %1, %0
  %12 = or i32 %11, %2
  %13 = add i32 %10, %12
  %14 = xor i32 %4, -1
  %15 = xor i32 %3, -1
  %16 = and i32 %15, %5
  %17 = and i32 %16, %14
  %18 = xor i32 %5, %3
  %19 = or i32 %18, %14
  %20 = xor i32 %19, -1
  %21 = or i32 %17, %20
  %22 = add i32 %4, 1
  %23 = add i32 %13, %22
  %24 = add i32 %23, %21
  %25 = or i32 %11, %8
  %26 = and i32 %2, %0
  %27 = xor i32 %2, -1
  %28 = and i32 %27, %1
  %29 = or i32 %26, %28
  %30 = shl i32 %29, 1
  %31 = or i32 %2, %1
  %32 = xor i32 %31, -1
  %33 = xor i32 %32, %0
  %34 = and i32 %2, %1
  %35 = xor i32 %34, -1
  %36 = xor i32 %9, -1
  %37 = xor i32 %2, %0
  %38 = and i32 %37, %36
  %39 = and i32 %27, %0
  %40 = or i32 %27, %1
  %41 = xor i32 %40, -1
  %42 = or i32 %39, %41
  %43 = and i32 %34, %0
  %44 = xor i32 %2, %1
  %45 = xor i32 %44, %0
  %46 = xor i32 %45, -1
  %47 = or i32 %43, %46
  %48 = xor i32 %11, -1
  %49 = and i32 %27, %48
  %50 = xor i32 %39, -1
  %51 = and i32 %9, %50
  %52 = xor i32 %0, -1
  %53 = shl i32 %52, 1
  %54 = xor i32 %1, -1
  %55 = and i32 %54, %0
  %56 = or i32 %44, %55
  %57 = and i32 %44, %52
  %58 = or i32 %43, %57
  %59 = xor i32 %28, -1
  %60 = and i32 %59, %0
  %61 = and i32 %35, %0
  %62 = or i32 %1, %0
  %63 = xor i32 %44, -1
  %64 = and i32 %62, %63
  %65 = or i32 %37, %36
  %66 = or i32 %54, %0
  %67 = xor i32 %66, %2
  %68 = xor i32 %31, %0
  %69 = and i32 %50, %36
  %70 = and i32 %31, %52
  %71 = or i32 %43, %70
  %72 = or i32 %9, %27
  %73 = or i32 %26, %32
  %74 = or i32 %11, %32
  %75 = xor i32 %62, -1
  %76 = or i32 %26, %75
  %77 = or i32 %32, %0
  %78 = shl i32 %77, 1
  %79 = or i32 %37, %75
  %80 = add i32 %44, 1
  %81 = xor i32 %43, %45
  %82 = xor i32 %50, %1
  %83 = and i32 %54, %2
  %84 = and i32 %83, %52
  %85 = or i32 %44, %52
  %86 = xor i32 %84, %85
  %87 = shl i32 %55, 1
  %88 = or i32 %40, %0
  %89 = xor i32 %66, -1
  %90 = or i32 %37, %89
  %91 = or i32 %59, %0
  %92 = and i32 %50, %1
  %93 = xor i32 %55, -1
  %94 = and i32 %63, %93
  %95 = or i32 %89, %2
  %96 = shl i32 %95, 1
  %97 = or i32 %26, %36
  %98 = or i32 %28, %55
  %99 = xor i32 %59, %0
  %100 = add i32 %31, 1
  %101 = xor i32 %37, -1
  %102 = or i32 %101, %36
  %103 = and i32 %62, %2
  %104 = or i32 %27, %0
  %105 = xor i32 %104, -1
  %106 = or i32 %105, %1
  %107 = xor i32 %8, %1
  %108 = and i32 %9, %101
  %109 = or i32 %9, %101
  %110 = or i32 %35, %52
  %111 = or i32 %44, %89
  %112 = or i32 %27, %36
  %113 = and i32 %34, %52
  %114 = and i32 %31, %0
  %115 = xor i32 %114, -1
  %116 = xor i32 %113, %115
  %117 = or i32 %31, %0
  %118 = or i32 %101, %54
  %119 = or i32 %101, %1
  %120 = and i32 %66, %27
  %121 = or i32 %36, %2
  %122 = and i32 %104, %36
  %123 = xor i32 %104, %1
  %124 = and i32 %44, %0
  %125 = or i32 %113, %124
  %126 = and i32 %66, %101
  %127 = and i32 %83, %0
  %128 = or i32 %44, %0
  %129 = xor i32 %128, -1
  %130 = or i32 %127, %129
  %131 = and i32 %63, %48
  %132 = xor i32 %26, -1
  %133 = and i32 %9, %132
  %134 = and i32 %59, %52
  %135 = or i32 %41, %52
  %136 = and i32 %66, %63
  %137 = or i32 %35, %0
  %138 = and i32 %37, %9
  %139 = and i32 %27, %93
  %140 = or i32 %37, %55
  %141 = xor i32 %26, %31
  %142 = or i32 %11, %101
  %143 = xor i32 %85, -1
  %144 = or i32 %84, %143
  %145 = xor i32 %75, %2
  %146 = or i32 %9, %105
  %147 = and i32 %63, %52
  %148 = xor i32 %26, %1
  %149 = or i32 %37, %9
  %150 = and i32 %48, %2
  %151 = and i32 %35, %52
  %152 = or i32 %54, %2
  %153 = and i32 %152, %0
  %154 = xor i32 %153, -1
  %155 = xor i32 %84, %154
  %156 = or i32 %105, %36
  %157 = xor i32 %26, %59
  %158 = and i32 %152, %52
  %159 = xor i32 %158, 1073741823
  %160 = xor i32 %159, %127
  %161 = or i32 %26, %1
  %162 = xor i32 %55, %59
  %163 = or i32 %8, %36
  %164 = or i32 %8, %1
  %165 = or i32 %63, %52
  %166 = xor i32 %39, %35
  %167 = xor i32 %34, %0
  %168 = or i32 %26, %9
  %169 = and i32 %37, %93
  %170 = or i32 %11, %105
  %171 = shl i32 %170, 1
  %172 = xor i32 %40, %0
  %173 = shl i32 %172, 1
  %174 = or i32 %9, %2
  %175 = or i32 %37, %54
  %176 = xor i32 %41, %0
  %177 = xor i32 %62, %2
  %178 = xor i32 %55, %35
  %179 = and i32 %50, %54
  %180 = and i32 %44, %62
  %181 = or i32 %34, %0
  %182 = xor i32 %48, %2
  %183 = and i32 %62, %27
  %184 = and i32 %101, %93
  %185 = or i32 %11, %27
  %186 = shl i32 %185, 1
  %187 = add i32 %55, 1
  %188 = add i32 %9, 1
  %189 = or i32 %39, %34
  %190 = shl i32 %189, 1
  %191 = or i32 %75, %2
  %192 = and i32 %44, %93
  %193 = or i32 %43, %68
  %194 = and i32 %7, %54
  %195 = add i32 %66, 1
  %196 = or i32 %105, %54
  %197 = xor i32 %26, %66
  %198 = xor i32 %11, %2
  %199 = xor i32 %152, %0
  %200 = xor i32 %199, -1
  %201 = xor i32 %127, %200
  %202 = or i32 %26, %54
  %203 = xor i32 %105, %1
  %204 = shl i32 %203, 1
  %205 = xor i32 %89, %2
  %206 = and i32 %37, %1
  %207 = or i32 %32, %52
  %208 = and i32 %7, %36
  %209 = or i32 %127, %45
  %210 = and i32 %132, %1
  %211 = and i32 %63, %0
  %212 = or i32 %8, %54
  %213 = and i32 %101, %48
  %214 = or i32 %59, %52
  %215 = or i32 %127, %199
  %216 = and i32 %36, %2
  %217 = or i32 %28, %52
  %218 = or i32 %55, %2
  %219 = and i32 %104, %54
  %220 = and i32 %40, %0
  %221 = shl i32 %220, 1
  %222 = or i32 %39, %36
  %223 = shl i32 %59, 1
  %224 = and i32 %37, %66
  %225 = and i32 %7, %1
  %226 = and i32 %44, %66
  %227 = or i32 %40, %52
  %228 = or i32 %127, %158
  %229 = shl i32 %228, 1
  %230 = or i32 %101, %75
  %231 = or i32 %44, %11
  %232 = and i32 %44, %48
  %233 = or i32 %27, %89
  %234 = xor i32 %43, -1
  %235 = xor i32 %70, %234
  %236 = or i32 %63, %0
  %237 = and i32 %101, %1
  %238 = xor i32 %28, %0
  %239 = or i32 %41, %0
  %240 = shl i32 %239, 1
  %241 = or i32 %44, %75
  %242 = or i32 %11, %41
  %243 = xor i32 %63, %0
  %244 = and i32 %9, %27
  %245 = or i32 %27, %75
  %246 = xor i32 %39, %1
  %247 = and i32 %101, %36
  %248 = and i32 %104, %1
  %249 = and i32 %40, %52
  %250 = shl i32 %249, 1
  %251 = or i32 %39, %1
  %252 = or i32 %37, %1
  %253 = or i32 %63, %75
  %254 = xor i32 %55, %2
  %255 = or i32 %63, %89
  %256 = and i32 %37, %54
  %257 = shl i32 %256, 1
  %258 = xor i32 %57, %234
  %259 = xor i32 %132, %1
  %260 = xor i32 %26, %62
  %261 = and i32 %37, %62
  %262 = or i32 %37, %11
  %263 = and i32 %27, %36
  %264 = xor i32 %127, %46
  %265 = xor i32 %104, %11
  %266 = or i32 %39, %54
  %267 = or i32 %55, %27
  %268 = and i32 %132, %54
  %269 = shl i32 %268, 1
  %270 = or i32 %39, %9
  %271 = or i32 %11, %63
  %272 = and i32 %132, %36
  %273 = xor i32 %40, %11
  %274 = shl i32 %273, 2
  %275 = and i32 %104, %9
  %276 = shl i32 %275, 1
  %277 = and i32 %37, %48
  %278 = xor i32 %7, %11
  %279 = or i32 %34, %55
  %280 = xor i32 %7, %1
  %281 = and i32 %32, %52
  %282 = and i32 %28, %52
  %283 = and i32 %32, %0
  %284 = mul i32 %283, -23
  %285 = and i32 %28, %0
  %286 = shl i32 %285, 1
  %287 = and i32 %41, %52
  %288 = and i32 %41, %0
  %289 = and i32 %4, %3
  %290 = xor i32 %289, -1
  %291 = xor i32 %5, %4
  %292 = xor i32 %291, -1
  %293 = and i32 %292, %290
  %294 = xor i32 %18, -1
  %295 = or i32 %294, %4
  %296 = xor i32 %5, -1
  %297 = and i32 %296, %4
  %298 = xor i32 %297, -1
  %299 = xor i32 %4, %3
  %300 = xor i32 %299, -1
  %301 = and i32 %298, %300
  %302 = or i32 %15, %5
  %303 = and i32 %302, %4
  %304 = xor i32 %303, -1
  %305 = xor i32 %17, %304
  %306 = and i32 %16, %4
  %307 = and i32 %302, %14
  %308 = xor i32 %306, -1
  %309 = xor i32 %307, %308
  %310 = or i32 %296, %4
  %311 = xor i32 %310, -1
  %312 = or i32 %299, %311
  %313 = or i32 %5, %4
  %314 = and i32 %313, %3
  %315 = or i32 %5, %3
  %316 = xor i32 %315, %4
  %317 = or i32 %291, %15
  %318 = and i32 %5, %4
  %319 = and i32 %296, %3
  %320 = or i32 %318, %319
  %321 = or i32 %296, %3
  %322 = xor i32 %321, %289
  %323 = or i32 %15, %4
  %324 = xor i32 %323, -1
  %325 = or i32 %318, %324
  %326 = and i32 %296, %290
  %327 = and i32 %5, %3
  %328 = xor i32 %327, -1
  %329 = xor i32 %328, %4
  %330 = or i32 %318, %299
  %331 = xor i32 %319, -1
  %332 = xor i32 %318, %331
  %333 = and i32 %313, %300
  %334 = and i32 %327, %14
  %335 = and i32 %18, %4
  %336 = or i32 %334, %335
  %337 = xor i32 %297, %328
  %338 = or i32 %328, %14
  %339 = and i32 %327, %4
  %340 = xor i32 %18, %4
  %341 = xor i32 %340, -1
  %342 = or i32 %339, %341
  %343 = or i32 %4, %3
  %344 = shl i32 %343, 1
  %345 = xor i32 %313, %289
  %346 = xor i32 %321, -1
  %347 = or i32 %289, %346
  %348 = or i32 %291, %324
  %349 = and i32 %296, %300
  %350 = xor i32 %290, %5
  %351 = xor i32 %318, %315
  %352 = xor i32 %343, -1
  %353 = shl i32 %352, 1
  %354 = and i32 %299, %296
  %355 = shl i32 %354, 1
  %356 = add i32 %321, 1
  %357 = and i32 %315, %4
  %358 = xor i32 %334, -1
  %359 = xor i32 %357, %358
  %360 = or i32 %291, %300
  %361 = xor i32 %313, -1
  %362 = or i32 %289, %361
  %363 = or i32 %331, %4
  %364 = xor i32 %315, -1
  %365 = xor i32 %364, %4
  %366 = and i32 %15, %4
  %367 = or i32 %18, %366
  %368 = and i32 %323, %296
  %369 = or i32 %361, %3
  %370 = shl i32 %369, 1
  %371 = xor i32 %366, -1
  %372 = and i32 %294, %371
  %373 = or i32 %294, %14
  %374 = or i32 %346, %4
  %375 = and i32 %328, %14
  %376 = or i32 %321, %4
  %377 = or i32 %328, %4
  %378 = or i32 %300, %5
  %379 = or i32 %318, %352
  %380 = or i32 %289, %296
  %381 = and i32 %328, %4
  %382 = or i32 %361, %15
  %383 = and i32 %291, %343
  %384 = shl i32 %383, 1
  %385 = or i32 %306, %340
  %386 = and i32 %18, %14
  %387 = xor i32 %319, %4
  %388 = and i32 %292, %15
  %389 = shl i32 %388, 1
  %390 = and i32 %291, %323
  %391 = xor i32 %366, %5
  %392 = or i32 %366, %292
  %393 = or i32 %291, %352
  %394 = or i32 %334, %357
  %395 = and i32 %310, %300
  %396 = xor i32 %302, %4
  %397 = xor i32 %396, %308
  %398 = or i32 %315, %14
  %399 = or i32 %291, %289
  %400 = or i32 %289, %294
  %401 = shl i32 %311, 1
  %402 = xor i32 %318, %343
  %403 = and i32 %299, %298
  %404 = or i32 %297, %299
  %405 = and i32 %292, %300
  %406 = and i32 %323, %5
  %407 = xor i32 %321, %4
  %408 = or i32 %366, %296
  %409 = or i32 %327, %14
  %410 = or i32 %311, %300
  %411 = and i32 %292, %3
  %412 = shl i32 %321, 1
  %413 = xor i32 %318, -1
  %414 = xor i32 %413, %3
  %415 = shl i32 %414, 1
  %416 = xor i32 %318, %3
  %417 = xor i32 %371, %5
  %418 = shl i32 %417, 1
  %419 = and i32 %299, %5
  %420 = xor i32 %297, %3
  %421 = shl i32 %420, 1
  %422 = xor i32 %17, %19
  %423 = or i32 %352, %5
  %424 = xor i32 %327, %4
  %425 = xor i32 %366, %328
  %426 = or i32 %292, %3
  %427 = or i32 %292, %352
  %428 = shl i32 %427, 1
  %429 = and i32 %292, %371
  %430 = xor i32 %331, %4
  %431 = and i32 %310, %15
  %432 = or i32 %289, %5
  %433 = or i32 %319, %4
  %434 = or i32 %18, %4
  %435 = xor i32 %434, 2147483647
  %436 = or i32 %435, %306
  %437 = and i32 %299, %292
  %438 = or i32 %292, %324
  %439 = shl i32 %310, 1
  %440 = or i32 %299, %5
  %441 = xor i32 %339, -1
  %442 = xor i32 %316, %441
  %443 = xor i32 %346, %4
  %444 = or i32 %331, %14
  %445 = xor i32 %339, %340
  %446 = and i32 %294, %290
  %447 = xor i32 %318, %323
  %448 = xor i32 %306, %434
  %449 = xor i32 %386, %441
  %450 = and i32 %343, %5
  %451 = xor i32 %343, %5
  %452 = and i32 %18, %290
  %453 = or i32 %311, %15
  %454 = and i32 %310, %3
  %455 = shl i32 %434, 1
  %456 = or i32 %292, %15
  %457 = or i32 %339, %386
  %458 = and i32 %413, %3
  %459 = shl i32 %458, 1
  %460 = or i32 %297, %15
  %461 = or i32 %361, %300
  %462 = shl i32 %461, 1
  %463 = and i32 %296, %371
  %464 = or i32 %299, %296
  %465 = or i32 %311, %3
  %466 = and i32 %343, %294
  %467 = and i32 %315, %14
  %468 = xor i32 %467, %441
  %469 = or i32 %289, %311
  %470 = and i32 %291, %300
  %471 = or i32 %364, %14
  %472 = add i32 %323, 1
  %473 = and i32 %371, %5
  %474 = and i32 %299, %413
  %475 = and i32 %331, %4
  %476 = and i32 %290, %5
  %477 = shl i32 %476, 1
  %478 = or i32 %294, %324
  %479 = and i32 %291, %299
  %480 = shl i32 %479, 1
  %481 = or i32 %315, %4
  %482 = or i32 %364, %4
  %483 = or i32 %346, %14
  %484 = or i32 %319, %366
  %485 = shl i32 %484, 1
  %486 = and i32 %291, %15
  %487 = shl i32 %486, 1
  %488 = and i32 %298, %3
  %489 = or i32 %296, %300
  %490 = and i32 %300, %5
  %491 = and i32 %313, %15
  %492 = or i32 %297, %327
  %493 = or i32 %296, %352
  %494 = shl i32 %493, 1
  %495 = and i32 %18, %343
  %496 = xor i32 %294, %4
  %497 = or i32 %319, %14
  %498 = shl i32 %497, 1
  %499 = and i32 %343, %292
  %500 = or i32 %297, %300
  %501 = and i32 %343, %296
  %502 = or i32 %339, %467
  %503 = and i32 %321, %14
  %504 = xor i32 %313, %3
  %505 = xor i32 %298, %3
  %506 = or i32 %289, %292
  %507 = or i32 %321, %14
  %508 = and i32 %294, %4
  %509 = and i32 %291, %3
  %510 = and i32 %18, %371
  %511 = xor i32 %361, %3
  %512 = xor i32 %335, %358
  %513 = and i32 %323, %292
  %514 = or i32 %318, %3
  %515 = or i32 %291, %299
  %516 = or i32 %339, %316
  %517 = or i32 %306, %307
  %518 = or i32 %17, %303
  %519 = or i32 %291, %3
  %520 = add i32 %318, 1
  %521 = and i32 %298, %15
  %522 = or i32 %366, %294
  %523 = or i32 %366, %5
  %524 = or i32 %294, %352
  %525 = and i32 %294, %14
  %526 = xor i32 %306, %341
  %527 = shl i32 %526, 1
  %528 = or i32 %318, %300
  %529 = xor i32 %352, %5
  %530 = or i32 %299, %361
  %531 = and i32 %18, %323
  %532 = and i32 %310, %299
  %533 = shl i32 %532, 1
  %534 = or i32 %297, %3
  %535 = xor i32 %323, %5
  %536 = xor i32 %315, %289
  %537 = or i32 %297, %346
  %538 = or i32 %18, %289
  %539 = and i32 %331, %14
  %540 = and i32 %291, %371
  %541 = or i32 %291, %366
  %542 = and i32 %323, %294
  %543 = or i32 %318, %15
  %544 = xor i32 %324, %5
  %545 = or i32 %318, %364
  %546 = xor i32 %310, %3
  %547 = and i32 %313, %299
  %548 = xor i32 %366, %331
  %549 = or i32 %327, %366
  %550 = xor i32 %289, %5
  %551 = or i32 %292, %300
  %552 = xor i32 %310, %289
  %553 = or i32 %327, %4
  %554 = and i32 %413, %300
  %555 = shl i32 %554, 2
  %556 = and i32 %291, %290
  %557 = and i32 %413, %15
  %558 = or i32 %296, %324
  %559 = shl i32 %558, 1
  %560 = and i32 %321, %4
  %561 = or i32 %299, %292
  %562 = xor i32 %297, %321
  %563 = add i32 %327, 1
  %564 = or i32 %18, %352
  %565 = or i32 %289, %364
  %566 = or i32 %324, %5
  %567 = or i32 %306, %396
  %568 = xor i32 %311, %3
  %569 = and i32 %364, %14
  %570 = mul i32 %569, -13
  %571 = and i32 %319, %14
  %572 = and i32 %364, %4
  %573 = mul i32 %572, -7
  %574 = and i32 %319, %4
  %575 = and i32 %346, %14
  %576 = mul i32 %575, -27
  %577 = mul i32 %334, -11
  %578 = and i32 %346, %4
  %579 = mul i32 %339, -26
  %580 = add i32 %15, %48
  %581 = add i32 %580, %101
  %582 = add i32 %581, %198
  %583 = add i32 %582, %112
  %584 = add i32 %583, %40
  %585 = add i32 %584, %277
  %586 = add i32 %585, %45
  %587 = add i32 %586, %236
  %588 = add i32 %587, %169
  %589 = add i32 %588, %161
  %590 = add i32 %589, %146
  %591 = add i32 %590, %140
  %592 = add i32 %591, %126
  %593 = add i32 %592, %109
  %594 = add i32 %593, %88
  %595 = add i32 %594, %73
  %596 = add i32 %595, %69
  %597 = add i32 %596, %56
  %598 = add i32 %597, %300
  %599 = add i32 %598, %193
  %600 = sub i32 %188, %279
  %601 = sub i32 %600, %123
  %602 = sub i32 %601, %106
  %603 = sub i32 %602, %82
  %604 = add i32 %603, %74
  %605 = add i32 %604, %42
  %606 = add i32 %605, %215
  %607 = add i32 %606, %116
  %608 = sub i32 %607, %408
  %609 = add i32 %608, %478
  %610 = add i32 %609, %363
  %611 = sub i32 %610, %317
  %612 = add i32 %611, %385
  %613 = sub i32 %612, %449
  %614 = sub i32 %613, %305
  %615 = mul i32 %614, 5
  %616 = add i32 %97, %168
  %617 = add i32 %616, %463
  %618 = add i32 %617, %160
  %619 = add i32 %618, %295
  %620 = add i32 %619, %399
  %621 = shl i32 %620, 2
  %622 = add i32 %571, %288
  %623 = mul i32 %622, -15
  %624 = add i32 %578, %287
  %625 = mul i32 %624, -12
  %626 = or i32 %43, %282
  %627 = mul i32 %626, -9
  %628 = add i32 %599, %125
  %629 = add i32 %628, %550
  %630 = add i32 %629, %318
  %631 = add i32 %630, %319
  %632 = add i32 %631, %350
  %633 = add i32 %632, %326
  %634 = add i32 %633, %552
  %635 = add i32 %634, %540
  %636 = add i32 %635, %539
  %637 = add i32 %636, %536
  %638 = add i32 %637, %522
  %639 = add i32 %638, %510
  %640 = add i32 %639, %503
  %641 = add i32 %640, %482
  %642 = add i32 %641, %409
  %643 = add i32 %642, %407
  %644 = add i32 %643, %404
  %645 = add i32 %644, %402
  %646 = add i32 %645, %382
  %647 = add i32 %646, %374
  %648 = add i32 %647, %422
  %649 = add i32 %648, %436
  %650 = shl i32 %649, 1
  %651 = add i32 %113, %89
  %652 = add i32 %651, %281
  %653 = add i32 %652, %259
  %654 = add i32 %653, %255
  %655 = sub i32 %654, %217
  %656 = sub i32 %655, %94
  %657 = add i32 %656, %472
  %658 = sub i32 %657, %357
  %659 = add i32 %658, %574
  %660 = add i32 %659, %454
  %661 = add i32 %660, %375
  %662 = mul i32 %661, 3
  %663 = add i32 %0, 2
  %664 = sub i32 %663, %53
  %665 = add i32 %664, %54
  %666 = sub i32 %665, %1
  %667 = add i32 %666, %11
  %668 = sub i32 %667, %2
  %669 = add i32 %668, %62
  %670 = add i32 %669, %187
  %671 = add i32 %670, %195
  %672 = add i32 %671, %9
  %673 = add i32 %672, %27
  %674 = sub i32 %673, %49
  %675 = add i32 %674, %67
  %676 = sub i32 %675, %72
  %677 = sub i32 %676, %39
  %678 = add i32 %677, %80
  %679 = add i32 %678, %44
  %680 = sub i32 %679, %87
  %681 = add i32 %680, %100
  %682 = sub i32 %681, %103
  %683 = sub i32 %682, %120
  %684 = add i32 %683, %121
  %685 = sub i32 %684, %139
  %686 = add i32 %685, %145
  %687 = add i32 %686, %105
  %688 = sub i32 %687, %150
  %689 = add i32 %688, %41
  %690 = add i32 %689, %174
  %691 = add i32 %690, %177
  %692 = sub i32 %691, %182
  %693 = sub i32 %692, %183
  %694 = add i32 %693, %191
  %695 = add i32 %694, %31
  %696 = sub i32 %695, %26
  %697 = sub i32 %696, %37
  %698 = add i32 %697, %205
  %699 = add i32 %698, %216
  %700 = add i32 %699, %218
  %701 = sub i32 %700, %7
  %702 = sub i32 %701, %233
  %703 = add i32 %702, %244
  %704 = add i32 %703, %245
  %705 = add i32 %704, %254
  %706 = sub i32 %705, %263
  %707 = add i32 %706, %267
  %708 = sub i32 %707, %3
  %709 = sub i32 %708, %25
  %710 = add i32 %709, %33
  %711 = sub i32 %710, %38
  %712 = sub i32 %711, %51
  %713 = sub i32 %712, %60
  %714 = add i32 %713, %61
  %715 = sub i32 %714, %64
  %716 = add i32 %715, %65
  %717 = sub i32 %716, %68
  %718 = add i32 %717, %76
  %719 = add i32 %718, %57
  %720 = sub i32 %719, %79
  %721 = add i32 %720, %90
  %722 = sub i32 %721, %91
  %723 = sub i32 %722, %92
  %724 = sub i32 %723, %96
  %725 = sub i32 %724, %98
  %726 = sub i32 %725, %99
  %727 = sub i32 %726, %102
  %728 = add i32 %727, %107
  %729 = add i32 %728, %108
  %730 = add i32 %729, %110
  %731 = add i32 %730, %111
  %732 = sub i32 %731, %70
  %733 = sub i32 %732, %117
  %734 = add i32 %733, %118
  %735 = add i32 %734, %119
  %736 = add i32 %735, %122
  %737 = add i32 %736, %131
  %738 = add i32 %737, %133
  %739 = add i32 %738, %134
  %740 = add i32 %739, %135
  %741 = sub i32 %740, %136
  %742 = sub i32 %741, %137
  %743 = sub i32 %742, %138
  %744 = add i32 %743, %141
  %745 = sub i32 %744, %142
  %746 = sub i32 %745, %147
  %747 = sub i32 %746, %148
  %748 = sub i32 %747, %149
  %749 = sub i32 %748, %151
  %750 = sub i32 %749, %156
  %751 = sub i32 %750, %157
  %752 = add i32 %751, %162
  %753 = add i32 %752, %163
  %754 = sub i32 %753, %164
  %755 = sub i32 %754, %165
  %756 = sub i32 %755, %166
  %757 = add i32 %756, %167
  %758 = sub i32 %757, %124
  %759 = sub i32 %758, %175
  %760 = sub i32 %759, %176
  %761 = sub i32 %760, %178
  %762 = sub i32 %761, %179
  %763 = sub i32 %762, %180
  %764 = sub i32 %763, %181
  %765 = sub i32 %764, %114
  %766 = add i32 %765, %184
  %767 = sub i32 %766, %186
  %768 = add i32 %767, %192
  %769 = add i32 %768, %194
  %770 = add i32 %769, %196
  %771 = sub i32 %770, %197
  %772 = add i32 %771, %202
  %773 = add i32 %772, %206
  %774 = add i32 %773, %207
  %775 = sub i32 %774, %208
  %776 = add i32 %775, %210
  %777 = add i32 %776, %211
  %778 = add i32 %777, %212
  %779 = add i32 %778, %213
  %780 = sub i32 %779, %214
  %781 = add i32 %780, %219
  %782 = add i32 %781, %222
  %783 = sub i32 %782, %223
  %784 = add i32 %783, %224
  %785 = add i32 %784, %225
  %786 = sub i32 %785, %226
  %787 = add i32 %786, %227
  %788 = sub i32 %787, %230
  %789 = sub i32 %788, %231
  %790 = sub i32 %789, %232
  %791 = sub i32 %790, %237
  %792 = add i32 %791, %238
  %793 = sub i32 %792, %241
  %794 = sub i32 %793, %242
  %795 = add i32 %794, %243
  %796 = sub i32 %795, %246
  %797 = sub i32 %796, %247
  %798 = add i32 %797, %248
  %799 = sub i32 %798, %251
  %800 = add i32 %799, %252
  %801 = add i32 %800, %253
  %802 = sub i32 %801, %260
  %803 = add i32 %802, %261
  %804 = add i32 %803, %262
  %805 = sub i32 %804, %265
  %806 = sub i32 %805, %266
  %807 = sub i32 %806, %270
  %808 = sub i32 %807, %271
  %809 = sub i32 %808, %272
  %810 = add i32 %809, %278
  %811 = add i32 %810, %128
  %812 = add i32 %811, %280
  %813 = sub i32 %812, %4
  %814 = add i32 %813, %30
  %815 = sub i32 %814, %47
  %816 = sub i32 %815, %58
  %817 = add i32 %816, %71
  %818 = sub i32 %817, %78
  %819 = sub i32 %818, %81
  %820 = sub i32 %819, %86
  %821 = add i32 %820, %130
  %822 = add i32 %821, %144
  %823 = add i32 %822, %155
  %824 = sub i32 %823, %171
  %825 = sub i32 %824, %173
  %826 = sub i32 %825, %190
  %827 = sub i32 %826, %201
  %828 = sub i32 %827, %204
  %829 = add i32 %828, %209
  %830 = sub i32 %829, %221
  %831 = add i32 %830, %235
  %832 = sub i32 %831, %240
  %833 = sub i32 %832, %250
  %834 = sub i32 %833, %257
  %835 = add i32 %834, %258
  %836 = sub i32 %835, %264
  %837 = sub i32 %836, %269
  %838 = sub i32 %837, %274
  %839 = sub i32 %838, %276
  %840 = add i32 %839, %284
  %841 = sub i32 %840, %286
  %842 = add i32 %841, %296
  %843 = add i32 %842, %290
  %844 = sub i32 %843, %5
  %845 = sub i32 %844, %289
  %846 = sub i32 %845, %323
  %847 = sub i32 %846, %299
  %848 = add i32 %847, %371
  %849 = sub i32 %848, %366
  %850 = sub i32 %849, %229
  %851 = sub i32 %850, %344
  %852 = add i32 %851, %349
  %853 = sub i32 %852, %353
  %854 = add i32 %853, %356
  %855 = add i32 %854, %368
  %856 = add i32 %855, %315
  %857 = add i32 %856, %378
  %858 = sub i32 %857, %380
  %859 = add i32 %858, %391
  %860 = sub i32 %859, %406
  %861 = sub i32 %860, %419
  %862 = add i32 %861, %423
  %863 = sub i32 %862, %327
  %864 = add i32 %863, %432
  %865 = add i32 %864, %440
  %866 = sub i32 %865, %18
  %867 = add i32 %866, %450
  %868 = add i32 %867, %451
  %869 = add i32 %868, %292
  %870 = add i32 %869, %464
  %871 = add i32 %870, %294
  %872 = add i32 %871, %473
  %873 = sub i32 %872, %291
  %874 = add i32 %873, %331
  %875 = add i32 %874, %489
  %876 = sub i32 %875, %490
  %877 = add i32 %876, %501
  %878 = add i32 %877, %520
  %879 = sub i32 %878, %523
  %880 = sub i32 %879, %529
  %881 = sub i32 %880, %535
  %882 = sub i32 %881, %544
  %883 = add i32 %882, %563
  %884 = sub i32 %883, %566
  %885 = add i32 %884, %627
  %886 = add i32 %885, %293
  %887 = add i32 %886, %301
  %888 = sub i32 %887, %312
  %889 = add i32 %888, %314
  %890 = add i32 %889, %316
  %891 = add i32 %890, %320
  %892 = sub i32 %891, %322
  %893 = sub i32 %892, %325
  %894 = add i32 %893, %329
  %895 = sub i32 %894, %330
  %896 = sub i32 %895, %332
  %897 = add i32 %896, %333
  %898 = add i32 %897, %337
  %899 = sub i32 %898, %338
  %900 = add i32 %899, %345
  %901 = add i32 %900, %347
  %902 = add i32 %901, %348
  %903 = sub i32 %902, %340
  %904 = sub i32 %903, %351
  %905 = sub i32 %904, %355
  %906 = add i32 %905, %360
  %907 = add i32 %906, %362
  %908 = sub i32 %907, %365
  %909 = add i32 %908, %367
  %910 = sub i32 %909, %372
  %911 = sub i32 %910, %373
  %912 = add i32 %911, %376
  %913 = add i32 %912, %377
  %914 = add i32 %913, %379
  %915 = add i32 %914, %381
  %916 = sub i32 %915, %386
  %917 = add i32 %916, %387
  %918 = sub i32 %917, %390
  %919 = sub i32 %918, %392
  %920 = add i32 %919, %393
  %921 = add i32 %920, %395
  %922 = sub i32 %921, %398
  %923 = sub i32 %922, %400
  %924 = sub i32 %923, %401
  %925 = add i32 %924, %403
  %926 = add i32 %925, %405
  %927 = add i32 %926, %410
  %928 = sub i32 %927, %411
  %929 = sub i32 %928, %412
  %930 = add i32 %929, %416
  %931 = sub i32 %930, %418
  %932 = sub i32 %931, %424
  %933 = sub i32 %932, %425
  %934 = add i32 %933, %426
  %935 = sub i32 %934, %429
  %936 = sub i32 %935, %430
  %937 = sub i32 %936, %431
  %938 = sub i32 %937, %433
  %939 = add i32 %938, %19
  %940 = sub i32 %939, %437
  %941 = add i32 %940, %438
  %942 = sub i32 %941, %439
  %943 = add i32 %942, %443
  %944 = sub i32 %943, %444
  %945 = add i32 %944, %446
  %946 = add i32 %945, %447
  %947 = add i32 %946, %452
  %948 = sub i32 %947, %453
  %949 = add i32 %948, %456
  %950 = sub i32 %949, %460
  %951 = add i32 %950, %465
  %952 = add i32 %951, %466
  %953 = sub i32 %952, %469
  %954 = sub i32 %953, %470
  %955 = add i32 %954, %471
  %956 = add i32 %955, %474
  %957 = sub i32 %956, %475
  %958 = sub i32 %957, %477
  %959 = add i32 %958, %481
  %960 = add i32 %959, %483
  %961 = add i32 %960, %488
  %962 = sub i32 %961, %491
  %963 = add i32 %962, %492
  %964 = sub i32 %963, %494
  %965 = add i32 %964, %495
  %966 = sub i32 %965, %496
  %967 = add i32 %966, %499
  %968 = add i32 %967, %500
  %969 = add i32 %968, %504
  %970 = sub i32 %969, %505
  %971 = sub i32 %970, %506
  %972 = add i32 %971, %507
  %973 = add i32 %972, %508
  %974 = add i32 %973, %509
  %975 = sub i32 %974, %511
  %976 = sub i32 %975, %513
  %977 = sub i32 %976, %514
  %978 = add i32 %977, %515
  %979 = sub i32 %978, %519
  %980 = sub i32 %979, %335
  %981 = add i32 %980, %521
  %982 = sub i32 %981, %524
  %983 = add i32 %982, %525
  %984 = add i32 %983, %528
  %985 = sub i32 %984, %530
  %986 = add i32 %985, %531
  %987 = add i32 %986, %534
  %988 = add i32 %987, %537
  %989 = sub i32 %988, %538
  %990 = add i32 %989, %541
  %991 = sub i32 %990, %542
  %992 = add i32 %991, %543
  %993 = sub i32 %992, %467
  %994 = add i32 %993, %545
  %995 = add i32 %994, %546
  %996 = add i32 %995, %547
  %997 = sub i32 %996, %548
  %998 = sub i32 %997, %549
  %999 = add i32 %998, %551
  %1000 = sub i32 %999, %553
  %1001 = add i32 %1000, %556
  %1002 = add i32 %1001, %557
  %1003 = sub i32 %1002, %559
  %1004 = sub i32 %1003, %560
  %1005 = add i32 %1004, %561
  %1006 = add i32 %1005, %562
  %1007 = add i32 %1006, %564
  %1008 = sub i32 %1007, %565
  %1009 = add i32 %1008, %568
  %1010 = sub i32 %1009, %309
  %1011 = sub i32 %1010, %336
  %1012 = sub i32 %1011, %342
  %1013 = sub i32 %1012, %359
  %1014 = sub i32 %1013, %370
  %1015 = sub i32 %1014, %384
  %1016 = sub i32 %1015, %389
  %1017 = add i32 %1016, %394
  %1018 = sub i32 %1017, %397
  %1019 = sub i32 %1018, %415
  %1020 = sub i32 %1019, %421
  %1021 = sub i32 %1020, %428
  %1022 = add i32 %1021, %442
  %1023 = add i32 %1022, %445
  %1024 = add i32 %1023, %448
  %1025 = sub i32 %1024, %455
  %1026 = add i32 %1025, %457
  %1027 = sub i32 %1026, %459
  %1028 = sub i32 %1027, %462
  %1029 = sub i32 %1028, %468
  %1030 = sub i32 %1029, %480
  %1031 = sub i32 %1030, %485
  %1032 = sub i32 %1031, %487
  %1033 = sub i32 %1032, %498
  %1034 = sub i32 %1033, %502
  %1035 = sub i32 %1034, %512
  %1036 = add i32 %1035, %516
  %1037 = add i32 %1036, %517
  %1038 = add i32 %1037, %518
  %1039 = sub i32 %1038, %533
  %1040 = sub i32 %1039, %555
  %1041 = add i32 %1040, %567
  %1042 = add i32 %1041, %570
  %1043 = add i32 %1042, %573
  %1044 = add i32 %1043, %576
  %1045 = add i32 %1044, %577
  %1046 = add i32 %1045, %579
  %1047 = sub i32 %1046, %527
  %1048 = add i32 %1047, %623
  %1049 = add i32 %1048, %625
  %1050 = add i32 %1049, %621
  %1051 = add i32 %1050, %662
  %1052 = add i32 %1051, %615
  %1053 = add i32 %1052, %650
  %1054 = icmp eq i32 %24, %1053
  %1055 = select i1 %1054, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1056 = tail call i32 @puts(i8* nonnull dereferenceable(1) %1055)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
