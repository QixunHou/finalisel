digraph "DFG for'main' function" {
	Node0x1f85708[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f85788[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f85818[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f85878[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1f85cf8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f85dd8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1f85ed8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f85f98[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1f86048[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f862a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1f86368[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f864c8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f86528[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f891f0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1f893f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f89558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f89668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f89728[shape=record, label="  ret i32 0"];
	Node0x1f85708 -> Node0x1f85788;
	Node0x1f85788 -> Node0x1f85818;
	Node0x1f85818 -> Node0x1f85878;
	Node0x1f85878 -> Node0x1f85cf8;
	Node0x1f85cf8 -> Node0x1f85dd8;
	Node0x1f85dd8 -> Node0x1f85ed8;
	Node0x1f85ed8 -> Node0x1f85f98;
	Node0x1f85f98 -> Node0x1f86048;
	Node0x1f86048 -> Node0x1f862a8;
	Node0x1f862a8 -> Node0x1f86368;
	Node0x1f86368 -> Node0x1f864c8;
	Node0x1f864c8 -> Node0x1f86528;
	Node0x1f86528 -> Node0x1f891f0;
	Node0x1f891f0 -> Node0x1f893f8;
	Node0x1f893f8 -> Node0x1f89558;
	Node0x1f89558 -> Node0x1f89668;
	Node0x1f89668 -> Node0x1f89728;
edge [color=red]
	Node0x1f85708 -> Node0x1f85878;
	Node0x1f85878 -> Node0x1f85cf8;
	Node0x1f85788 -> Node0x1f85dd8;
	Node0x1f85dd8 -> Node0x1f85ed8;
	Node0x1f85818 -> Node0x1f85f98;
	Node0x1f85f98 -> Node0x1f86048;
	Node0x1f85708 -> Node0x1f862a8;
	Node0x1f85788 -> Node0x1f862a8;
	Node0x1f85818 -> Node0x1f862a8;
	Node0x1f85708 -> Node0x1f86368;
	Node0x1f85788 -> Node0x1f864c8;
	Node0x1f85818 -> Node0x1f86528;
	Node0x1f86368 -> Node0x1f891f0;
	Node0x1f864c8 -> Node0x1f891f0;
	Node0x1f86528 -> Node0x1f891f0;
	Node0x1f85f98 -> Node0x1f893f8;
	Node0x1f85dd8 -> Node0x1f89558;
	Node0x1f85878 -> Node0x1f89668;
}
