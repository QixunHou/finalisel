digraph "DFG for'main' function" {
	Node0x11df4a8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11df528[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11df5b8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x11df618[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x11df6c8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x11dfaf8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11dfbd8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x11dfcd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11dfd98[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x11dfe48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x11dff08[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x11dffb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x11da910[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x11e01b8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11e1128[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11e1798[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x11e17f8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x11e1870[shape=record, label="  %14 = or i32 %13, %10"];
	Node0x11e18e0[shape=record, label="  %15 = add i32 %13, %14"];
	Node0x11e1950[shape=record, label="  %16 = sub i32 0, %15"];
	Node0x11e19c0[shape=record, label="  %17 = xor i32 %11, 2147483647"];
	Node0x11e1a30[shape=record, label="  %18 = or i32 %17, %12"];
	Node0x11e1aa0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x11e1b10[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x11e1b80[shape=record, label="  %21 = and i32 %13, %10"];
	Node0x11e1bf0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x11e1c60[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x11e1cd0[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0x11e1d40[shape=record, label="  %25 = and i32 %13, %24"];
	Node0x11e1db0[shape=record, label="  %26 = xor i32 %13, %10"];
	Node0x11e1e20[shape=record, label="  %27 = shl i32 %25, 1"];
	Node0x11e1e90[shape=record, label="  %28 = mul i32 %21, 3"];
	Node0x11e1f00[shape=record, label="  %29 = sub i32 4, %10"];
	Node0x11e1f70[shape=record, label="  %30 = add i32 %29, %11"];
	Node0x11e1fe0[shape=record, label="  %31 = sub i32 %30, %12"];
	Node0x11e2050[shape=record, label="  %32 = add i32 %31, %20"];
	Node0x11e20c0[shape=record, label="  %33 = sub i32 %32, %13"];
	Node0x11e2130[shape=record, label="  %34 = add i32 %33, %19"];
	Node0x11e21a0[shape=record, label="  %35 = add i32 %34, %25"];
	Node0x11e2210[shape=record, label="  %36 = add i32 %35, %26"];
	Node0x11e2280[shape=record, label="  %37 = sub i32 %36, %14"];
	Node0x11e22f0[shape=record, label="  %38 = sub i32 %37, %27"];
	Node0x11e2360[shape=record, label="  %39 = add i32 %38, %28"];
	Node0x11e23d0[shape=record, label="  %40 = add i32 %39, %23"];
	Node0x11e2440[shape=record, label="  %41 = icmp eq i32 %40, %16"];
	Node0x117f8b8[shape=record, label="  %42 = select i1 %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x11e24d0[shape=record, label="  %43 = call i32 @puts(i8* nonnull dereferenceable(1) %42) #5"];
	Node0x11e2778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x11e28d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x11e29e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11e2af8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11e2bb8[shape=record, label="  ret i32 0"];
	Node0x11df4a8 -> Node0x11df528;
	Node0x11df528 -> Node0x11df5b8;
	Node0x11df5b8 -> Node0x11df618;
	Node0x11df618 -> Node0x11df6c8;
	Node0x11df6c8 -> Node0x11dfaf8;
	Node0x11dfaf8 -> Node0x11dfbd8;
	Node0x11dfbd8 -> Node0x11dfcd8;
	Node0x11dfcd8 -> Node0x11dfd98;
	Node0x11dfd98 -> Node0x11dfe48;
	Node0x11dfe48 -> Node0x11dff08;
	Node0x11dff08 -> Node0x11dffb8;
	Node0x11dffb8 -> Node0x11da910;
	Node0x11da910 -> Node0x11e01b8;
	Node0x11e01b8 -> Node0x11e1128;
	Node0x11e1128 -> Node0x11e1798;
	Node0x11e1798 -> Node0x11e17f8;
	Node0x11e17f8 -> Node0x11e1870;
	Node0x11e1870 -> Node0x11e18e0;
	Node0x11e18e0 -> Node0x11e1950;
	Node0x11e1950 -> Node0x11e19c0;
	Node0x11e19c0 -> Node0x11e1a30;
	Node0x11e1a30 -> Node0x11e1aa0;
	Node0x11e1aa0 -> Node0x11e1b10;
	Node0x11e1b10 -> Node0x11e1b80;
	Node0x11e1b80 -> Node0x11e1bf0;
	Node0x11e1bf0 -> Node0x11e1c60;
	Node0x11e1c60 -> Node0x11e1cd0;
	Node0x11e1cd0 -> Node0x11e1d40;
	Node0x11e1d40 -> Node0x11e1db0;
	Node0x11e1db0 -> Node0x11e1e20;
	Node0x11e1e20 -> Node0x11e1e90;
	Node0x11e1e90 -> Node0x11e1f00;
	Node0x11e1f00 -> Node0x11e1f70;
	Node0x11e1f70 -> Node0x11e1fe0;
	Node0x11e1fe0 -> Node0x11e2050;
	Node0x11e2050 -> Node0x11e20c0;
	Node0x11e20c0 -> Node0x11e2130;
	Node0x11e2130 -> Node0x11e21a0;
	Node0x11e21a0 -> Node0x11e2210;
	Node0x11e2210 -> Node0x11e2280;
	Node0x11e2280 -> Node0x11e22f0;
	Node0x11e22f0 -> Node0x11e2360;
	Node0x11e2360 -> Node0x11e23d0;
	Node0x11e23d0 -> Node0x11e2440;
	Node0x11e2440 -> Node0x117f8b8;
	Node0x117f8b8 -> Node0x11e24d0;
	Node0x11e24d0 -> Node0x11e2778;
	Node0x11e2778 -> Node0x11e28d8;
	Node0x11e28d8 -> Node0x11e29e8;
	Node0x11e29e8 -> Node0x11e2af8;
	Node0x11e2af8 -> Node0x11e2bb8;
edge [color=red]
	Node0x11df4a8 -> Node0x11df6c8;
	Node0x11df6c8 -> Node0x11dfaf8;
	Node0x11df528 -> Node0x11dfbd8;
	Node0x11dfbd8 -> Node0x11dfcd8;
	Node0x11df5b8 -> Node0x11dfd98;
	Node0x11dfd98 -> Node0x11dfe48;
	Node0x11df618 -> Node0x11dff08;
	Node0x11dff08 -> Node0x11dffb8;
	Node0x11df4a8 -> Node0x11da910;
	Node0x11df528 -> Node0x11da910;
	Node0x11df5b8 -> Node0x11da910;
	Node0x11df618 -> Node0x11da910;
	Node0x11df4a8 -> Node0x11e01b8;
	Node0x11df528 -> Node0x11e1128;
	Node0x11df5b8 -> Node0x11e1798;
	Node0x11df618 -> Node0x11e17f8;
	Node0x11e17f8 -> Node0x11e1870;
	Node0x11e01b8 -> Node0x11e1870;
	Node0x11e17f8 -> Node0x11e18e0;
	Node0x11e1870 -> Node0x11e18e0;
	Node0x11e18e0 -> Node0x11e1950;
	Node0x11e1128 -> Node0x11e19c0;
	Node0x11e19c0 -> Node0x11e1a30;
	Node0x11e1798 -> Node0x11e1a30;
	Node0x11e1a30 -> Node0x11e1aa0;
	Node0x11e1798 -> Node0x11e1b10;
	Node0x11e1128 -> Node0x11e1b10;
	Node0x11e17f8 -> Node0x11e1b80;
	Node0x11e01b8 -> Node0x11e1b80;
	Node0x11e1b80 -> Node0x11e1bf0;
	Node0x11e1bf0 -> Node0x11e1c60;
	Node0x11e01b8 -> Node0x11e1cd0;
	Node0x11e17f8 -> Node0x11e1d40;
	Node0x11e1cd0 -> Node0x11e1d40;
	Node0x11e17f8 -> Node0x11e1db0;
	Node0x11e01b8 -> Node0x11e1db0;
	Node0x11e1d40 -> Node0x11e1e20;
	Node0x11e1b80 -> Node0x11e1e90;
	Node0x11e01b8 -> Node0x11e1f00;
	Node0x11e1f00 -> Node0x11e1f70;
	Node0x11e1128 -> Node0x11e1f70;
	Node0x11e1f70 -> Node0x11e1fe0;
	Node0x11e1798 -> Node0x11e1fe0;
	Node0x11e1fe0 -> Node0x11e2050;
	Node0x11e1b10 -> Node0x11e2050;
	Node0x11e2050 -> Node0x11e20c0;
	Node0x11e17f8 -> Node0x11e20c0;
	Node0x11e20c0 -> Node0x11e2130;
	Node0x11e1aa0 -> Node0x11e2130;
	Node0x11e2130 -> Node0x11e21a0;
	Node0x11e1d40 -> Node0x11e21a0;
	Node0x11e21a0 -> Node0x11e2210;
	Node0x11e1db0 -> Node0x11e2210;
	Node0x11e2210 -> Node0x11e2280;
	Node0x11e1870 -> Node0x11e2280;
	Node0x11e2280 -> Node0x11e22f0;
	Node0x11e1e20 -> Node0x11e22f0;
	Node0x11e22f0 -> Node0x11e2360;
	Node0x11e1e90 -> Node0x11e2360;
	Node0x11e2360 -> Node0x11e23d0;
	Node0x11e1c60 -> Node0x11e23d0;
	Node0x11e23d0 -> Node0x11e2440;
	Node0x11e1950 -> Node0x11e2440;
	Node0x11e2440 -> Node0x117f8b8;
	Node0x117f8b8 -> Node0x11e24d0;
	Node0x11dff08 -> Node0x11e2778;
	Node0x11dfd98 -> Node0x11e28d8;
	Node0x11dfbd8 -> Node0x11e29e8;
	Node0x11df6c8 -> Node0x11e2af8;
}
