digraph "DFG for'main' function" {
	Node0x1b219a8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b21a28[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b21ab8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b21b18[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1b21f98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b22078[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1b22178[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b22238[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1b222e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b22548[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1b22608[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b22768[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b227c8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b25c70[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1b25e78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b25fd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b260e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b261a8[shape=record, label="  ret i32 0"];
	Node0x1b219a8 -> Node0x1b21a28;
	Node0x1b21a28 -> Node0x1b21ab8;
	Node0x1b21ab8 -> Node0x1b21b18;
	Node0x1b21b18 -> Node0x1b21f98;
	Node0x1b21f98 -> Node0x1b22078;
	Node0x1b22078 -> Node0x1b22178;
	Node0x1b22178 -> Node0x1b22238;
	Node0x1b22238 -> Node0x1b222e8;
	Node0x1b222e8 -> Node0x1b22548;
	Node0x1b22548 -> Node0x1b22608;
	Node0x1b22608 -> Node0x1b22768;
	Node0x1b22768 -> Node0x1b227c8;
	Node0x1b227c8 -> Node0x1b25c70;
	Node0x1b25c70 -> Node0x1b25e78;
	Node0x1b25e78 -> Node0x1b25fd8;
	Node0x1b25fd8 -> Node0x1b260e8;
	Node0x1b260e8 -> Node0x1b261a8;
edge [color=red]
	Node0x1b219a8 -> Node0x1b21b18;
	Node0x1b21b18 -> Node0x1b21f98;
	Node0x1b21a28 -> Node0x1b22078;
	Node0x1b22078 -> Node0x1b22178;
	Node0x1b21ab8 -> Node0x1b22238;
	Node0x1b22238 -> Node0x1b222e8;
	Node0x1b219a8 -> Node0x1b22548;
	Node0x1b21a28 -> Node0x1b22548;
	Node0x1b21ab8 -> Node0x1b22548;
	Node0x1b219a8 -> Node0x1b22608;
	Node0x1b21a28 -> Node0x1b22768;
	Node0x1b21ab8 -> Node0x1b227c8;
	Node0x1b22608 -> Node0x1b25c70;
	Node0x1b22768 -> Node0x1b25c70;
	Node0x1b227c8 -> Node0x1b25c70;
	Node0x1b22238 -> Node0x1b25e78;
	Node0x1b22078 -> Node0x1b25fd8;
	Node0x1b21b18 -> Node0x1b260e8;
}
