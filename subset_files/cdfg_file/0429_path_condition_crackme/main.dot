digraph "DFG for'main' function" {
	Node0x205e548[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x205e5c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x205e658[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x205e6b8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x205e768[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x205eb98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x205ec78[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x205ed78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x205ee38[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x205eee8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x205efa8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x205f058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2059960[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x205f258[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20601c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2060838[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2060898[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x2060910[shape=record, label="  %14 = and i32 %12, %11"];
	Node0x2060980[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x20609f0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x2060a60[shape=record, label="  %17 = and i32 %13, %10"];
	Node0x2060ad0[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0x2060b40[shape=record, label="  %19 = add i32 %16, %18"];
	Node0x2060bb0[shape=record, label="  %20 = or i32 %12, %11"];
	Node0x2060c20[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x2060c90[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x2060d00[shape=record, label="  %23 = xor i32 %10, -1"];
	Node0x2060d70[shape=record, label="  %24 = or i32 %13, %23"];
	Node0x2060de0[shape=record, label="  %25 = and i32 %13, %23"];
	Node0x2060e50[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x2060ec0[shape=record, label="  %27 = or i32 %13, %10"];
	Node0x2060f30[shape=record, label="  %28 = shl i32 %24, 1"];
	Node0x2060fa0[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x2061010[shape=record, label="  %30 = sub i32 %25, %14"];
	Node0x2061080[shape=record, label="  %31 = mul i32 %30, 3"];
	Node0x20610f0[shape=record, label="  %32 = add i32 %11, 1"];
	Node0x2061160[shape=record, label="  %33 = add i32 %32, %12"];
	Node0x20611d0[shape=record, label="  %34 = add i32 %33, %20"];
	Node0x2061240[shape=record, label="  %35 = sub i32 %34, %13"];
	Node0x20612b0[shape=record, label="  %36 = add i32 %35, %24"];
	Node0x2061320[shape=record, label="  %37 = add i32 %36, %26"];
	Node0x2061390[shape=record, label="  %38 = sub i32 %37, %27"];
	Node0x2061400[shape=record, label="  %39 = add i32 %38, %17"];
	Node0x2061470[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x20614e0[shape=record, label="  %41 = add i32 %40, %29"];
	Node0x2061550[shape=record, label="  %42 = add i32 %41, %31"];
	Node0x20615c0[shape=record, label="  %43 = icmp eq i32 %19, %42"];
	Node0x1ffe8b8[shape=record, label="  %44 = select i1 %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2061650[shape=record, label="  %45 = call i32 @puts(i8* nonnull dereferenceable(1) %44) #5"];
	Node0x20618f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2061a58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2061b68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2061c78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2061d38[shape=record, label="  ret i32 0"];
	Node0x205e548 -> Node0x205e5c8;
	Node0x205e5c8 -> Node0x205e658;
	Node0x205e658 -> Node0x205e6b8;
	Node0x205e6b8 -> Node0x205e768;
	Node0x205e768 -> Node0x205eb98;
	Node0x205eb98 -> Node0x205ec78;
	Node0x205ec78 -> Node0x205ed78;
	Node0x205ed78 -> Node0x205ee38;
	Node0x205ee38 -> Node0x205eee8;
	Node0x205eee8 -> Node0x205efa8;
	Node0x205efa8 -> Node0x205f058;
	Node0x205f058 -> Node0x2059960;
	Node0x2059960 -> Node0x205f258;
	Node0x205f258 -> Node0x20601c8;
	Node0x20601c8 -> Node0x2060838;
	Node0x2060838 -> Node0x2060898;
	Node0x2060898 -> Node0x2060910;
	Node0x2060910 -> Node0x2060980;
	Node0x2060980 -> Node0x20609f0;
	Node0x20609f0 -> Node0x2060a60;
	Node0x2060a60 -> Node0x2060ad0;
	Node0x2060ad0 -> Node0x2060b40;
	Node0x2060b40 -> Node0x2060bb0;
	Node0x2060bb0 -> Node0x2060c20;
	Node0x2060c20 -> Node0x2060c90;
	Node0x2060c90 -> Node0x2060d00;
	Node0x2060d00 -> Node0x2060d70;
	Node0x2060d70 -> Node0x2060de0;
	Node0x2060de0 -> Node0x2060e50;
	Node0x2060e50 -> Node0x2060ec0;
	Node0x2060ec0 -> Node0x2060f30;
	Node0x2060f30 -> Node0x2060fa0;
	Node0x2060fa0 -> Node0x2061010;
	Node0x2061010 -> Node0x2061080;
	Node0x2061080 -> Node0x20610f0;
	Node0x20610f0 -> Node0x2061160;
	Node0x2061160 -> Node0x20611d0;
	Node0x20611d0 -> Node0x2061240;
	Node0x2061240 -> Node0x20612b0;
	Node0x20612b0 -> Node0x2061320;
	Node0x2061320 -> Node0x2061390;
	Node0x2061390 -> Node0x2061400;
	Node0x2061400 -> Node0x2061470;
	Node0x2061470 -> Node0x20614e0;
	Node0x20614e0 -> Node0x2061550;
	Node0x2061550 -> Node0x20615c0;
	Node0x20615c0 -> Node0x1ffe8b8;
	Node0x1ffe8b8 -> Node0x2061650;
	Node0x2061650 -> Node0x20618f8;
	Node0x20618f8 -> Node0x2061a58;
	Node0x2061a58 -> Node0x2061b68;
	Node0x2061b68 -> Node0x2061c78;
	Node0x2061c78 -> Node0x2061d38;
edge [color=red]
	Node0x205e548 -> Node0x205e768;
	Node0x205e768 -> Node0x205eb98;
	Node0x205e5c8 -> Node0x205ec78;
	Node0x205ec78 -> Node0x205ed78;
	Node0x205e658 -> Node0x205ee38;
	Node0x205ee38 -> Node0x205eee8;
	Node0x205e6b8 -> Node0x205efa8;
	Node0x205efa8 -> Node0x205f058;
	Node0x205e548 -> Node0x2059960;
	Node0x205e5c8 -> Node0x2059960;
	Node0x205e658 -> Node0x2059960;
	Node0x205e6b8 -> Node0x2059960;
	Node0x205e548 -> Node0x205f258;
	Node0x205e5c8 -> Node0x20601c8;
	Node0x205e658 -> Node0x2060838;
	Node0x205e6b8 -> Node0x2060898;
	Node0x2060838 -> Node0x2060910;
	Node0x20601c8 -> Node0x2060910;
	Node0x2060910 -> Node0x2060980;
	Node0x2060980 -> Node0x20609f0;
	Node0x2060898 -> Node0x2060a60;
	Node0x205f258 -> Node0x2060a60;
	Node0x2060a60 -> Node0x2060ad0;
	Node0x20609f0 -> Node0x2060b40;
	Node0x2060ad0 -> Node0x2060b40;
	Node0x2060838 -> Node0x2060bb0;
	Node0x20601c8 -> Node0x2060bb0;
	Node0x2060bb0 -> Node0x2060c20;
	Node0x2060c20 -> Node0x2060c90;
	Node0x205f258 -> Node0x2060d00;
	Node0x2060898 -> Node0x2060d70;
	Node0x2060d00 -> Node0x2060d70;
	Node0x2060898 -> Node0x2060de0;
	Node0x2060d00 -> Node0x2060de0;
	Node0x2060de0 -> Node0x2060e50;
	Node0x2060898 -> Node0x2060ec0;
	Node0x205f258 -> Node0x2060ec0;
	Node0x2060d70 -> Node0x2060f30;
	Node0x2060f30 -> Node0x2060fa0;
	Node0x2060de0 -> Node0x2061010;
	Node0x2060910 -> Node0x2061010;
	Node0x2061010 -> Node0x2061080;
	Node0x20601c8 -> Node0x20610f0;
	Node0x20610f0 -> Node0x2061160;
	Node0x2060838 -> Node0x2061160;
	Node0x2061160 -> Node0x20611d0;
	Node0x2060bb0 -> Node0x20611d0;
	Node0x20611d0 -> Node0x2061240;
	Node0x2060898 -> Node0x2061240;
	Node0x2061240 -> Node0x20612b0;
	Node0x2060d70 -> Node0x20612b0;
	Node0x20612b0 -> Node0x2061320;
	Node0x2060e50 -> Node0x2061320;
	Node0x2061320 -> Node0x2061390;
	Node0x2060ec0 -> Node0x2061390;
	Node0x2061390 -> Node0x2061400;
	Node0x2060a60 -> Node0x2061400;
	Node0x2061400 -> Node0x2061470;
	Node0x2060c90 -> Node0x2061470;
	Node0x2061470 -> Node0x20614e0;
	Node0x2060fa0 -> Node0x20614e0;
	Node0x20614e0 -> Node0x2061550;
	Node0x2061080 -> Node0x2061550;
	Node0x2060b40 -> Node0x20615c0;
	Node0x2061550 -> Node0x20615c0;
	Node0x20615c0 -> Node0x1ffe8b8;
	Node0x1ffe8b8 -> Node0x2061650;
	Node0x205efa8 -> Node0x20618f8;
	Node0x205ee38 -> Node0x2061a58;
	Node0x205ec78 -> Node0x2061b68;
	Node0x205e768 -> Node0x2061c78;
}
