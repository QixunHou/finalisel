digraph "DFG for'main' function" {
	Node0x1c22bb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c22c38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c22cc8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1c23128[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c23208[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1c23328[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c23560[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1c23618[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c24588[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c24c10[shape=record, label="  %8 = shl i32 %6, 1"];
	Node0x1c24c80[shape=record, label="  %9 = xor i32 %8, -2"];
	Node0x1c24cf0[shape=record, label="  %10 = mul i32 %6, -2"];
	Node0x1c24d60[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x1c24dd0[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x1c24e40[shape=record, label="  %13 = or i32 %6, %12"];
	Node0x1c24eb0[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x1c24f20[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1c24f90[shape=record, label="  %16 = shl i32 %11, 1"];
	Node0x1c25000[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1c25070[shape=record, label="  %18 = xor i32 %13, -1"];
	Node0x1c250e0[shape=record, label="  %19 = and i32 %6, %12"];
	Node0x1c25150[shape=record, label="  %20 = mul i32 %14, 3"];
	Node0x1c251c0[shape=record, label="  %21 = sub i32 %10, %7"];
	Node0x1c25230[shape=record, label="  %22 = add i32 %21, %11"];
	Node0x1c252a0[shape=record, label="  %23 = sub i32 %22, %13"];
	Node0x1c25310[shape=record, label="  %24 = add i32 %23, %15"];
	Node0x1c25380[shape=record, label="  %25 = add i32 %24, %18"];
	Node0x1c253f0[shape=record, label="  %26 = add i32 %25, %19"];
	Node0x1c25460[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x1c254d0[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x1c25540[shape=record, label="  %29 = icmp eq i32 %9, %28"];
	Node0x1bc39d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c255d0[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0x1c25828[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c25988[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c25a48[shape=record, label="  ret i32 0"];
	Node0x1c22bb8 -> Node0x1c22c38;
	Node0x1c22c38 -> Node0x1c22cc8;
	Node0x1c22cc8 -> Node0x1c23128;
	Node0x1c23128 -> Node0x1c23208;
	Node0x1c23208 -> Node0x1c23328;
	Node0x1c23328 -> Node0x1c23560;
	Node0x1c23560 -> Node0x1c23618;
	Node0x1c23618 -> Node0x1c24588;
	Node0x1c24588 -> Node0x1c24c10;
	Node0x1c24c10 -> Node0x1c24c80;
	Node0x1c24c80 -> Node0x1c24cf0;
	Node0x1c24cf0 -> Node0x1c24d60;
	Node0x1c24d60 -> Node0x1c24dd0;
	Node0x1c24dd0 -> Node0x1c24e40;
	Node0x1c24e40 -> Node0x1c24eb0;
	Node0x1c24eb0 -> Node0x1c24f20;
	Node0x1c24f20 -> Node0x1c24f90;
	Node0x1c24f90 -> Node0x1c25000;
	Node0x1c25000 -> Node0x1c25070;
	Node0x1c25070 -> Node0x1c250e0;
	Node0x1c250e0 -> Node0x1c25150;
	Node0x1c25150 -> Node0x1c251c0;
	Node0x1c251c0 -> Node0x1c25230;
	Node0x1c25230 -> Node0x1c252a0;
	Node0x1c252a0 -> Node0x1c25310;
	Node0x1c25310 -> Node0x1c25380;
	Node0x1c25380 -> Node0x1c253f0;
	Node0x1c253f0 -> Node0x1c25460;
	Node0x1c25460 -> Node0x1c254d0;
	Node0x1c254d0 -> Node0x1c25540;
	Node0x1c25540 -> Node0x1bc39d8;
	Node0x1bc39d8 -> Node0x1c255d0;
	Node0x1c255d0 -> Node0x1c25828;
	Node0x1c25828 -> Node0x1c25988;
	Node0x1c25988 -> Node0x1c25a48;
edge [color=red]
	Node0x1c22bb8 -> Node0x1c22cc8;
	Node0x1c22cc8 -> Node0x1c23128;
	Node0x1c22c38 -> Node0x1c23208;
	Node0x1c23208 -> Node0x1c23328;
	Node0x1c22bb8 -> Node0x1c23560;
	Node0x1c22c38 -> Node0x1c23560;
	Node0x1c22bb8 -> Node0x1c23618;
	Node0x1c22c38 -> Node0x1c24588;
	Node0x1c23618 -> Node0x1c24c10;
	Node0x1c24c10 -> Node0x1c24c80;
	Node0x1c23618 -> Node0x1c24cf0;
	Node0x1c24588 -> Node0x1c24d60;
	Node0x1c23618 -> Node0x1c24d60;
	Node0x1c24588 -> Node0x1c24dd0;
	Node0x1c23618 -> Node0x1c24e40;
	Node0x1c24dd0 -> Node0x1c24e40;
	Node0x1c24588 -> Node0x1c24eb0;
	Node0x1c23618 -> Node0x1c24eb0;
	Node0x1c24eb0 -> Node0x1c24f20;
	Node0x1c24d60 -> Node0x1c24f90;
	Node0x1c24f90 -> Node0x1c25000;
	Node0x1c24e40 -> Node0x1c25070;
	Node0x1c23618 -> Node0x1c250e0;
	Node0x1c24dd0 -> Node0x1c250e0;
	Node0x1c24eb0 -> Node0x1c25150;
	Node0x1c24cf0 -> Node0x1c251c0;
	Node0x1c24588 -> Node0x1c251c0;
	Node0x1c251c0 -> Node0x1c25230;
	Node0x1c24d60 -> Node0x1c25230;
	Node0x1c25230 -> Node0x1c252a0;
	Node0x1c24e40 -> Node0x1c252a0;
	Node0x1c252a0 -> Node0x1c25310;
	Node0x1c24f20 -> Node0x1c25310;
	Node0x1c25310 -> Node0x1c25380;
	Node0x1c25070 -> Node0x1c25380;
	Node0x1c25380 -> Node0x1c253f0;
	Node0x1c250e0 -> Node0x1c253f0;
	Node0x1c253f0 -> Node0x1c25460;
	Node0x1c25150 -> Node0x1c25460;
	Node0x1c25460 -> Node0x1c254d0;
	Node0x1c25000 -> Node0x1c254d0;
	Node0x1c24c80 -> Node0x1c25540;
	Node0x1c254d0 -> Node0x1c25540;
	Node0x1c25540 -> Node0x1bc39d8;
	Node0x1bc39d8 -> Node0x1c255d0;
	Node0x1c23208 -> Node0x1c25828;
	Node0x1c22cc8 -> Node0x1c25988;
}
