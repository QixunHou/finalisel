digraph "DFG for'main' function" {
	Node0x1507ec8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1507f48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1507fd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1508038[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x15080e8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1508518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x15085f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x15086f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x15087b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1508868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1508928[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x15089d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1502c00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1508bd8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1509b48[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x150a1b8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x150a218[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x150a290[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x150a300[shape=record, label="  %15 = or i32 %13, %10"];
	Node0x150a370[shape=record, label="  %16 = xor i32 %13, -1"];
	Node0x150a3e0[shape=record, label="  %17 = add i32 %14, %16"];
	Node0x150a450[shape=record, label="  %18 = sub i32 %17, %15"];
	Node0x150a4c0[shape=record, label="  %19 = and i32 %12, %11"];
	Node0x150a530[shape=record, label="  %20 = or i32 %12, %11"];
	Node0x150a5a0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x150a610[shape=record, label="  %22 = xor i32 %14, -1"];
	Node0x150a680[shape=record, label="  %23 = xor i32 %12, -1"];
	Node0x150a6f0[shape=record, label="  %24 = and i32 %11, %23"];
	Node0x150a760[shape=record, label="  %25 = xor i32 %21, -2"];
	Node0x150a7d0[shape=record, label="  %26 = xor i32 %11, -1"];
	Node0x150a840[shape=record, label="  %27 = and i32 %12, %26"];
	Node0x150a8b0[shape=record, label="  %28 = mul i32 %27, 7"];
	Node0x150a920[shape=record, label="  %29 = shl i32 %24, 2"];
	Node0x150a990[shape=record, label="  %30 = mul i32 %19, 5"];
	Node0x150aa00[shape=record, label="  %31 = and i32 %13, %10"];
	Node0x150aa70[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x150aae0[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0x150ab50[shape=record, label="  %34 = xor i32 %10, -1"];
	Node0x150abc0[shape=record, label="  %35 = and i32 %13, %34"];
	Node0x150ac30[shape=record, label="  %36 = xor i32 %13, %10"];
	Node0x150aca0[shape=record, label="  %37 = shl i32 %35, 1"];
	Node0x150ad10[shape=record, label="  %38 = mul i32 %31, 3"];
	Node0x150ad80[shape=record, label="  %39 = sub i32 4, %10"];
	Node0x150adf0[shape=record, label="  %40 = add i32 %39, %11"];
	Node0x150ae60[shape=record, label="  %41 = sub i32 %40, %12"];
	Node0x150aed0[shape=record, label="  %42 = sub i32 %41, %19"];
	Node0x150af40[shape=record, label="  %43 = add i32 %42, %22"];
	Node0x150afb0[shape=record, label="  %44 = add i32 %43, %24"];
	Node0x150b020[shape=record, label="  %45 = sub i32 %44, %13"];
	Node0x150b090[shape=record, label="  %46 = sub i32 %45, %21"];
	Node0x150b100[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x150b170[shape=record, label="  %48 = add i32 %47, %29"];
	Node0x150b1e0[shape=record, label="  %49 = add i32 %48, %30"];
	Node0x150b250[shape=record, label="  %50 = add i32 %49, %35"];
	Node0x150b2c0[shape=record, label="  %51 = add i32 %50, %36"];
	Node0x150b330[shape=record, label="  %52 = sub i32 %51, %15"];
	Node0x150b3a0[shape=record, label="  %53 = add i32 %52, %25"];
	Node0x150b410[shape=record, label="  %54 = sub i32 %53, %37"];
	Node0x150b480[shape=record, label="  %55 = add i32 %54, %38"];
	Node0x150b4f0[shape=record, label="  %56 = add i32 %55, %33"];
	Node0x150b560[shape=record, label="  %57 = icmp eq i32 %18, %56"];
	Node0x14a78b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x150b5f0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0x150b898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x150b9f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x150bb08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x150bc18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x150bcd8[shape=record, label="  ret i32 0"];
	Node0x1507ec8 -> Node0x1507f48;
	Node0x1507f48 -> Node0x1507fd8;
	Node0x1507fd8 -> Node0x1508038;
	Node0x1508038 -> Node0x15080e8;
	Node0x15080e8 -> Node0x1508518;
	Node0x1508518 -> Node0x15085f8;
	Node0x15085f8 -> Node0x15086f8;
	Node0x15086f8 -> Node0x15087b8;
	Node0x15087b8 -> Node0x1508868;
	Node0x1508868 -> Node0x1508928;
	Node0x1508928 -> Node0x15089d8;
	Node0x15089d8 -> Node0x1502c00;
	Node0x1502c00 -> Node0x1508bd8;
	Node0x1508bd8 -> Node0x1509b48;
	Node0x1509b48 -> Node0x150a1b8;
	Node0x150a1b8 -> Node0x150a218;
	Node0x150a218 -> Node0x150a290;
	Node0x150a290 -> Node0x150a300;
	Node0x150a300 -> Node0x150a370;
	Node0x150a370 -> Node0x150a3e0;
	Node0x150a3e0 -> Node0x150a450;
	Node0x150a450 -> Node0x150a4c0;
	Node0x150a4c0 -> Node0x150a530;
	Node0x150a530 -> Node0x150a5a0;
	Node0x150a5a0 -> Node0x150a610;
	Node0x150a610 -> Node0x150a680;
	Node0x150a680 -> Node0x150a6f0;
	Node0x150a6f0 -> Node0x150a760;
	Node0x150a760 -> Node0x150a7d0;
	Node0x150a7d0 -> Node0x150a840;
	Node0x150a840 -> Node0x150a8b0;
	Node0x150a8b0 -> Node0x150a920;
	Node0x150a920 -> Node0x150a990;
	Node0x150a990 -> Node0x150aa00;
	Node0x150aa00 -> Node0x150aa70;
	Node0x150aa70 -> Node0x150aae0;
	Node0x150aae0 -> Node0x150ab50;
	Node0x150ab50 -> Node0x150abc0;
	Node0x150abc0 -> Node0x150ac30;
	Node0x150ac30 -> Node0x150aca0;
	Node0x150aca0 -> Node0x150ad10;
	Node0x150ad10 -> Node0x150ad80;
	Node0x150ad80 -> Node0x150adf0;
	Node0x150adf0 -> Node0x150ae60;
	Node0x150ae60 -> Node0x150aed0;
	Node0x150aed0 -> Node0x150af40;
	Node0x150af40 -> Node0x150afb0;
	Node0x150afb0 -> Node0x150b020;
	Node0x150b020 -> Node0x150b090;
	Node0x150b090 -> Node0x150b100;
	Node0x150b100 -> Node0x150b170;
	Node0x150b170 -> Node0x150b1e0;
	Node0x150b1e0 -> Node0x150b250;
	Node0x150b250 -> Node0x150b2c0;
	Node0x150b2c0 -> Node0x150b330;
	Node0x150b330 -> Node0x150b3a0;
	Node0x150b3a0 -> Node0x150b410;
	Node0x150b410 -> Node0x150b480;
	Node0x150b480 -> Node0x150b4f0;
	Node0x150b4f0 -> Node0x150b560;
	Node0x150b560 -> Node0x14a78b8;
	Node0x14a78b8 -> Node0x150b5f0;
	Node0x150b5f0 -> Node0x150b898;
	Node0x150b898 -> Node0x150b9f8;
	Node0x150b9f8 -> Node0x150bb08;
	Node0x150bb08 -> Node0x150bc18;
	Node0x150bc18 -> Node0x150bcd8;
edge [color=red]
	Node0x1507ec8 -> Node0x15080e8;
	Node0x15080e8 -> Node0x1508518;
	Node0x1507f48 -> Node0x15085f8;
	Node0x15085f8 -> Node0x15086f8;
	Node0x1507fd8 -> Node0x15087b8;
	Node0x15087b8 -> Node0x1508868;
	Node0x1508038 -> Node0x1508928;
	Node0x1508928 -> Node0x15089d8;
	Node0x1507ec8 -> Node0x1502c00;
	Node0x1507f48 -> Node0x1502c00;
	Node0x1507fd8 -> Node0x1502c00;
	Node0x1508038 -> Node0x1502c00;
	Node0x1507ec8 -> Node0x1508bd8;
	Node0x1507f48 -> Node0x1509b48;
	Node0x1507fd8 -> Node0x150a1b8;
	Node0x1508038 -> Node0x150a218;
	Node0x150a1b8 -> Node0x150a290;
	Node0x1509b48 -> Node0x150a290;
	Node0x150a218 -> Node0x150a300;
	Node0x1508bd8 -> Node0x150a300;
	Node0x150a218 -> Node0x150a370;
	Node0x150a290 -> Node0x150a3e0;
	Node0x150a370 -> Node0x150a3e0;
	Node0x150a3e0 -> Node0x150a450;
	Node0x150a300 -> Node0x150a450;
	Node0x150a1b8 -> Node0x150a4c0;
	Node0x1509b48 -> Node0x150a4c0;
	Node0x150a1b8 -> Node0x150a530;
	Node0x1509b48 -> Node0x150a530;
	Node0x150a530 -> Node0x150a5a0;
	Node0x150a290 -> Node0x150a610;
	Node0x150a1b8 -> Node0x150a680;
	Node0x1509b48 -> Node0x150a6f0;
	Node0x150a680 -> Node0x150a6f0;
	Node0x150a5a0 -> Node0x150a760;
	Node0x1509b48 -> Node0x150a7d0;
	Node0x150a1b8 -> Node0x150a840;
	Node0x150a7d0 -> Node0x150a840;
	Node0x150a840 -> Node0x150a8b0;
	Node0x150a6f0 -> Node0x150a920;
	Node0x150a4c0 -> Node0x150a990;
	Node0x150a218 -> Node0x150aa00;
	Node0x1508bd8 -> Node0x150aa00;
	Node0x150aa00 -> Node0x150aa70;
	Node0x150aa70 -> Node0x150aae0;
	Node0x1508bd8 -> Node0x150ab50;
	Node0x150a218 -> Node0x150abc0;
	Node0x150ab50 -> Node0x150abc0;
	Node0x150a218 -> Node0x150ac30;
	Node0x1508bd8 -> Node0x150ac30;
	Node0x150abc0 -> Node0x150aca0;
	Node0x150aa00 -> Node0x150ad10;
	Node0x1508bd8 -> Node0x150ad80;
	Node0x150ad80 -> Node0x150adf0;
	Node0x1509b48 -> Node0x150adf0;
	Node0x150adf0 -> Node0x150ae60;
	Node0x150a1b8 -> Node0x150ae60;
	Node0x150ae60 -> Node0x150aed0;
	Node0x150a4c0 -> Node0x150aed0;
	Node0x150aed0 -> Node0x150af40;
	Node0x150a610 -> Node0x150af40;
	Node0x150af40 -> Node0x150afb0;
	Node0x150a6f0 -> Node0x150afb0;
	Node0x150afb0 -> Node0x150b020;
	Node0x150a218 -> Node0x150b020;
	Node0x150b020 -> Node0x150b090;
	Node0x150a5a0 -> Node0x150b090;
	Node0x150b090 -> Node0x150b100;
	Node0x150a8b0 -> Node0x150b100;
	Node0x150b100 -> Node0x150b170;
	Node0x150a920 -> Node0x150b170;
	Node0x150b170 -> Node0x150b1e0;
	Node0x150a990 -> Node0x150b1e0;
	Node0x150b1e0 -> Node0x150b250;
	Node0x150abc0 -> Node0x150b250;
	Node0x150b250 -> Node0x150b2c0;
	Node0x150ac30 -> Node0x150b2c0;
	Node0x150b2c0 -> Node0x150b330;
	Node0x150a300 -> Node0x150b330;
	Node0x150b330 -> Node0x150b3a0;
	Node0x150a760 -> Node0x150b3a0;
	Node0x150b3a0 -> Node0x150b410;
	Node0x150aca0 -> Node0x150b410;
	Node0x150b410 -> Node0x150b480;
	Node0x150ad10 -> Node0x150b480;
	Node0x150b480 -> Node0x150b4f0;
	Node0x150aae0 -> Node0x150b4f0;
	Node0x150a450 -> Node0x150b560;
	Node0x150b4f0 -> Node0x150b560;
	Node0x150b560 -> Node0x14a78b8;
	Node0x14a78b8 -> Node0x150b5f0;
	Node0x1508928 -> Node0x150b898;
	Node0x15087b8 -> Node0x150b9f8;
	Node0x15085f8 -> Node0x150bb08;
	Node0x15080e8 -> Node0x150bc18;
}
