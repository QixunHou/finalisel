digraph "DFG for'crackme' function" {
	Node0x1505bd0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1505c40[shape=record, label="  %6 = or i32 %3, %0"];
	Node0x15062c0[shape=record, label="  %7 = xor i32 %3, -1"];
	Node0x1506330[shape=record, label="  %8 = add i32 %5, %7"];
	Node0x15063a0[shape=record, label="  %9 = sub i32 %8, %6"];
	Node0x1506410[shape=record, label="  %10 = and i32 %2, %1"];
	Node0x1506480[shape=record, label="  %11 = or i32 %2, %1"];
	Node0x1506520[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1506590[shape=record, label="  %13 = xor i32 %5, -1"];
	Node0x1506600[shape=record, label="  %14 = xor i32 %2, -1"];
	Node0x1506670[shape=record, label="  %15 = and i32 %14, %1"];
	Node0x1506710[shape=record, label="  %16 = xor i32 %12, -2"];
	Node0x1506780[shape=record, label="  %17 = xor i32 %1, -1"];
	Node0x15067f0[shape=record, label="  %18 = and i32 %17, %2"];
	Node0x1506890[shape=record, label="  %19 = mul i32 %18, 7"];
	Node0x1506930[shape=record, label="  %20 = shl i32 %15, 2"];
	Node0x15069d0[shape=record, label="  %21 = mul i32 %10, 5"];
	Node0x1506a40[shape=record, label="  %22 = and i32 %3, %0"];
	Node0x1506ab0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0x1506b20[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0x1506b90[shape=record, label="  %25 = xor i32 %0, -1"];
	Node0x1506c00[shape=record, label="  %26 = and i32 %25, %3"];
	Node0x1506c70[shape=record, label="  %27 = xor i32 %3, %0"];
	Node0x1506ce0[shape=record, label="  %28 = shl i32 %26, 1"];
	Node0x1506d80[shape=record, label="  %29 = mul i32 %22, 3"];
	Node0x1506e20[shape=record, label="  %30 = sub i32 4, %0"];
	Node0x1506e90[shape=record, label="  %31 = add i32 %30, %1"];
	Node0x1506f00[shape=record, label="  %32 = sub i32 %31, %2"];
	Node0x1507180[shape=record, label="  %33 = sub i32 %32, %10"];
	Node0x15071f0[shape=record, label="  %34 = add i32 %33, %13"];
	Node0x1507260[shape=record, label="  %35 = add i32 %34, %15"];
	Node0x15072d0[shape=record, label="  %36 = sub i32 %35, %3"];
	Node0x1507340[shape=record, label="  %37 = sub i32 %36, %12"];
	Node0x15073b0[shape=record, label="  %38 = add i32 %37, %19"];
	Node0x1507420[shape=record, label="  %39 = add i32 %38, %20"];
	Node0x1507490[shape=record, label="  %40 = add i32 %39, %21"];
	Node0x1507500[shape=record, label="  %41 = add i32 %40, %26"];
	Node0x1507570[shape=record, label="  %42 = add i32 %41, %27"];
	Node0x15075e0[shape=record, label="  %43 = sub i32 %42, %6"];
	Node0x1507650[shape=record, label="  %44 = add i32 %43, %16"];
	Node0x15076c0[shape=record, label="  %45 = sub i32 %44, %28"];
	Node0x1507730[shape=record, label="  %46 = add i32 %45, %29"];
	Node0x15077a0[shape=record, label="  %47 = add i32 %46, %24"];
	Node0x1507810[shape=record, label="  %48 = icmp eq i32 %9, %47"];
	Node0x14a6268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1507cb0[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x1507d00[shape=record, label="  ret void"];
	Node0x1505bd0 -> Node0x1505c40;
	Node0x1505c40 -> Node0x15062c0;
	Node0x15062c0 -> Node0x1506330;
	Node0x1506330 -> Node0x15063a0;
	Node0x15063a0 -> Node0x1506410;
	Node0x1506410 -> Node0x1506480;
	Node0x1506480 -> Node0x1506520;
	Node0x1506520 -> Node0x1506590;
	Node0x1506590 -> Node0x1506600;
	Node0x1506600 -> Node0x1506670;
	Node0x1506670 -> Node0x1506710;
	Node0x1506710 -> Node0x1506780;
	Node0x1506780 -> Node0x15067f0;
	Node0x15067f0 -> Node0x1506890;
	Node0x1506890 -> Node0x1506930;
	Node0x1506930 -> Node0x15069d0;
	Node0x15069d0 -> Node0x1506a40;
	Node0x1506a40 -> Node0x1506ab0;
	Node0x1506ab0 -> Node0x1506b20;
	Node0x1506b20 -> Node0x1506b90;
	Node0x1506b90 -> Node0x1506c00;
	Node0x1506c00 -> Node0x1506c70;
	Node0x1506c70 -> Node0x1506ce0;
	Node0x1506ce0 -> Node0x1506d80;
	Node0x1506d80 -> Node0x1506e20;
	Node0x1506e20 -> Node0x1506e90;
	Node0x1506e90 -> Node0x1506f00;
	Node0x1506f00 -> Node0x1507180;
	Node0x1507180 -> Node0x15071f0;
	Node0x15071f0 -> Node0x1507260;
	Node0x1507260 -> Node0x15072d0;
	Node0x15072d0 -> Node0x1507340;
	Node0x1507340 -> Node0x15073b0;
	Node0x15073b0 -> Node0x1507420;
	Node0x1507420 -> Node0x1507490;
	Node0x1507490 -> Node0x1507500;
	Node0x1507500 -> Node0x1507570;
	Node0x1507570 -> Node0x15075e0;
	Node0x15075e0 -> Node0x1507650;
	Node0x1507650 -> Node0x15076c0;
	Node0x15076c0 -> Node0x1507730;
	Node0x1507730 -> Node0x15077a0;
	Node0x15077a0 -> Node0x1507810;
	Node0x1507810 -> Node0x14a6268;
	Node0x14a6268 -> Node0x1507cb0;
	Node0x1507cb0 -> Node0x1507d00;
edge [color=red]
	Node0x1505bd0 -> Node0x1506330;
	Node0x15062c0 -> Node0x1506330;
	Node0x1506330 -> Node0x15063a0;
	Node0x1505c40 -> Node0x15063a0;
	Node0x1506480 -> Node0x1506520;
	Node0x1505bd0 -> Node0x1506590;
	Node0x1506600 -> Node0x1506670;
	Node0x1506520 -> Node0x1506710;
	Node0x1506780 -> Node0x15067f0;
	Node0x15067f0 -> Node0x1506890;
	Node0x1506670 -> Node0x1506930;
	Node0x1506410 -> Node0x15069d0;
	Node0x1506a40 -> Node0x1506ab0;
	Node0x1506ab0 -> Node0x1506b20;
	Node0x1506b90 -> Node0x1506c00;
	Node0x1506c00 -> Node0x1506ce0;
	Node0x1506a40 -> Node0x1506d80;
	Node0x1506e20 -> Node0x1506e90;
	Node0x1506e90 -> Node0x1506f00;
	Node0x1506f00 -> Node0x1507180;
	Node0x1506410 -> Node0x1507180;
	Node0x1507180 -> Node0x15071f0;
	Node0x1506590 -> Node0x15071f0;
	Node0x15071f0 -> Node0x1507260;
	Node0x1506670 -> Node0x1507260;
	Node0x1507260 -> Node0x15072d0;
	Node0x15072d0 -> Node0x1507340;
	Node0x1506520 -> Node0x1507340;
	Node0x1507340 -> Node0x15073b0;
	Node0x1506890 -> Node0x15073b0;
	Node0x15073b0 -> Node0x1507420;
	Node0x1506930 -> Node0x1507420;
	Node0x1507420 -> Node0x1507490;
	Node0x15069d0 -> Node0x1507490;
	Node0x1507490 -> Node0x1507500;
	Node0x1506c00 -> Node0x1507500;
	Node0x1507500 -> Node0x1507570;
	Node0x1506c70 -> Node0x1507570;
	Node0x1507570 -> Node0x15075e0;
	Node0x1505c40 -> Node0x15075e0;
	Node0x15075e0 -> Node0x1507650;
	Node0x1506710 -> Node0x1507650;
	Node0x1507650 -> Node0x15076c0;
	Node0x1506ce0 -> Node0x15076c0;
	Node0x15076c0 -> Node0x1507730;
	Node0x1506d80 -> Node0x1507730;
	Node0x1507730 -> Node0x15077a0;
	Node0x1506b20 -> Node0x15077a0;
	Node0x15063a0 -> Node0x1507810;
	Node0x15077a0 -> Node0x1507810;
	Node0x1507810 -> Node0x14a6268;
	Node0x14a6268 -> Node0x1507cb0;
}
