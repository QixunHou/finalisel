digraph "DFG for'crackme' function" {
	Node0x187bb80[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x187c200[shape=record, label="  %6 = add i32 %5, 3"];
	Node0x187c270[shape=record, label="  %7 = or i32 %3, %0"];
	Node0x187c2e0[shape=record, label="  %8 = add i32 %6, %7"];
	Node0x187c350[shape=record, label="  %9 = and i32 %2, %1"];
	Node0x187c3f0[shape=record, label="  %10 = shl i32 %2, 1"];
	Node0x187c490[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x187c500[shape=record, label="  %12 = or i32 %2, %1"];
	Node0x187c570[shape=record, label="  %13 = add i32 %12, 1"];
	Node0x187c610[shape=record, label="  %14 = xor i32 %1, -1"];
	Node0x187c680[shape=record, label="  %15 = and i32 %14, %2"];
	Node0x187c6f0[shape=record, label="  %16 = xor i32 %3, %0"];
	Node0x187c760[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x187c7d0[shape=record, label="  %18 = xor i32 %0, -1"];
	Node0x187c840[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x187c8b0[shape=record, label="  %20 = and i32 %18, %3"];
	Node0x187c920[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x187c990[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x187ca00[shape=record, label="  %23 = shl i32 %3, 1"];
	Node0x187ca70[shape=record, label="  %24 = xor i32 %7, -1"];
	Node0x187cb10[shape=record, label="  %25 = mul i32 %24, 5"];
	Node0x187cb80[shape=record, label="  %26 = xor i32 %3, -1"];
	Node0x187cbf0[shape=record, label="  %27 = and i32 %26, %0"];
	Node0x187cc90[shape=record, label="  %28 = mul i32 %27, 6"];
	Node0x187cd30[shape=record, label="  %29 = shl i32 %3, 2"];
	Node0x187cda0[shape=record, label="  %30 = add i32 %15, %13"];
	Node0x187ce10[shape=record, label="  %31 = mul i32 %30, 3"];
	Node0x187ce80[shape=record, label="  %32 = sub i32 3, %0"];
	Node0x187d100[shape=record, label="  %33 = sub i32 %32, %19"];
	Node0x187d170[shape=record, label="  %34 = sub i32 %33, %2"];
	Node0x187d1e0[shape=record, label="  %35 = add i32 %34, %9"];
	Node0x187d250[shape=record, label="  %36 = sub i32 %35, %5"];
	Node0x187d2c0[shape=record, label="  %37 = sub i32 %36, %12"];
	Node0x187d330[shape=record, label="  %38 = sub i32 %37, %3"];
	Node0x187d3a0[shape=record, label="  %39 = add i32 %38, %11"];
	Node0x187d410[shape=record, label="  %40 = add i32 %39, %16"];
	Node0x187d480[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x187d4f0[shape=record, label="  %42 = sub i32 %41, %17"];
	Node0x187d560[shape=record, label="  %43 = add i32 %42, %25"];
	Node0x187d5d0[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x187d640[shape=record, label="  %45 = add i32 %44, %31"];
	Node0x187d6b0[shape=record, label="  %46 = sub i32 %45, %22"];
	Node0x187d720[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x187d790[shape=record, label="  %48 = icmp eq i32 %8, %47"];
	Node0x181c268[shape=record, label="  %49 = select i1 %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x187dc30[shape=record, label="  %50 = tail call i32 @puts(i8* nonnull dereferenceable(1) %49)"];
	Node0x187dc80[shape=record, label="  ret void"];
	Node0x187bb80 -> Node0x187c200;
	Node0x187c200 -> Node0x187c270;
	Node0x187c270 -> Node0x187c2e0;
	Node0x187c2e0 -> Node0x187c350;
	Node0x187c350 -> Node0x187c3f0;
	Node0x187c3f0 -> Node0x187c490;
	Node0x187c490 -> Node0x187c500;
	Node0x187c500 -> Node0x187c570;
	Node0x187c570 -> Node0x187c610;
	Node0x187c610 -> Node0x187c680;
	Node0x187c680 -> Node0x187c6f0;
	Node0x187c6f0 -> Node0x187c760;
	Node0x187c760 -> Node0x187c7d0;
	Node0x187c7d0 -> Node0x187c840;
	Node0x187c840 -> Node0x187c8b0;
	Node0x187c8b0 -> Node0x187c920;
	Node0x187c920 -> Node0x187c990;
	Node0x187c990 -> Node0x187ca00;
	Node0x187ca00 -> Node0x187ca70;
	Node0x187ca70 -> Node0x187cb10;
	Node0x187cb10 -> Node0x187cb80;
	Node0x187cb80 -> Node0x187cbf0;
	Node0x187cbf0 -> Node0x187cc90;
	Node0x187cc90 -> Node0x187cd30;
	Node0x187cd30 -> Node0x187cda0;
	Node0x187cda0 -> Node0x187ce10;
	Node0x187ce10 -> Node0x187ce80;
	Node0x187ce80 -> Node0x187d100;
	Node0x187d100 -> Node0x187d170;
	Node0x187d170 -> Node0x187d1e0;
	Node0x187d1e0 -> Node0x187d250;
	Node0x187d250 -> Node0x187d2c0;
	Node0x187d2c0 -> Node0x187d330;
	Node0x187d330 -> Node0x187d3a0;
	Node0x187d3a0 -> Node0x187d410;
	Node0x187d410 -> Node0x187d480;
	Node0x187d480 -> Node0x187d4f0;
	Node0x187d4f0 -> Node0x187d560;
	Node0x187d560 -> Node0x187d5d0;
	Node0x187d5d0 -> Node0x187d640;
	Node0x187d640 -> Node0x187d6b0;
	Node0x187d6b0 -> Node0x187d720;
	Node0x187d720 -> Node0x187d790;
	Node0x187d790 -> Node0x181c268;
	Node0x181c268 -> Node0x187dc30;
	Node0x187dc30 -> Node0x187dc80;
edge [color=red]
	Node0x187bb80 -> Node0x187c200;
	Node0x187c200 -> Node0x187c2e0;
	Node0x187c270 -> Node0x187c2e0;
	Node0x187c3f0 -> Node0x187c490;
	Node0x187c500 -> Node0x187c570;
	Node0x187c610 -> Node0x187c680;
	Node0x187c6f0 -> Node0x187c760;
	Node0x187c7d0 -> Node0x187c840;
	Node0x187c7d0 -> Node0x187c8b0;
	Node0x187c8b0 -> Node0x187c920;
	Node0x187c920 -> Node0x187c990;
	Node0x187c270 -> Node0x187ca70;
	Node0x187ca70 -> Node0x187cb10;
	Node0x187cb80 -> Node0x187cbf0;
	Node0x187cbf0 -> Node0x187cc90;
	Node0x187c680 -> Node0x187cda0;
	Node0x187c570 -> Node0x187cda0;
	Node0x187cda0 -> Node0x187ce10;
	Node0x187ce80 -> Node0x187d100;
	Node0x187c840 -> Node0x187d100;
	Node0x187d100 -> Node0x187d170;
	Node0x187d170 -> Node0x187d1e0;
	Node0x187c350 -> Node0x187d1e0;
	Node0x187d1e0 -> Node0x187d250;
	Node0x187bb80 -> Node0x187d250;
	Node0x187d250 -> Node0x187d2c0;
	Node0x187c500 -> Node0x187d2c0;
	Node0x187d2c0 -> Node0x187d330;
	Node0x187d330 -> Node0x187d3a0;
	Node0x187c490 -> Node0x187d3a0;
	Node0x187d3a0 -> Node0x187d410;
	Node0x187c6f0 -> Node0x187d410;
	Node0x187d410 -> Node0x187d480;
	Node0x187ca00 -> Node0x187d480;
	Node0x187d480 -> Node0x187d4f0;
	Node0x187c760 -> Node0x187d4f0;
	Node0x187d4f0 -> Node0x187d560;
	Node0x187cb10 -> Node0x187d560;
	Node0x187d560 -> Node0x187d5d0;
	Node0x187cc90 -> Node0x187d5d0;
	Node0x187d5d0 -> Node0x187d640;
	Node0x187ce10 -> Node0x187d640;
	Node0x187d640 -> Node0x187d6b0;
	Node0x187c990 -> Node0x187d6b0;
	Node0x187d6b0 -> Node0x187d720;
	Node0x187cd30 -> Node0x187d720;
	Node0x187c2e0 -> Node0x187d790;
	Node0x187d720 -> Node0x187d790;
	Node0x187d790 -> Node0x181c268;
	Node0x181c268 -> Node0x187dc30;
}
