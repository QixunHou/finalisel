digraph "DFG for'main' function" {
	Node0xcdaec8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xcdaf48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xcdafd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xcdb038[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xcdb0e8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xcdb518[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xcdb5f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xcdb6f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xcdb7b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xcdb868[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xcdb928[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xcdb9d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xcd5c00[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xcdbbd8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xcdcb48[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xcdd1b8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xcdd218[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xcdd290[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0xcdd300[shape=record, label="  %15 = or i32 %11, %14"];
	Node0xcdd370[shape=record, label="  %16 = sub i32 %13, %15"];
	Node0xcdd3e0[shape=record, label="  %17 = and i32 %11, %14"];
	Node0xcdd450[shape=record, label="  %18 = xor i32 %17, -1"];
	Node0xcdd4c0[shape=record, label="  %19 = or i32 %12, %11"];
	Node0xcdd530[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0xcdd5a0[shape=record, label="  %21 = mul i32 %17, -5"];
	Node0xcdd610[shape=record, label="  %22 = and i32 %12, %11"];
	Node0xcdd680[shape=record, label="  %23 = shl i32 %22, 2"];
	Node0xcdd6f0[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0xcdd760[shape=record, label="  %25 = xor i32 %13, -1"];
	Node0xcdd7d0[shape=record, label="  %26 = or i32 %13, %24"];
	Node0xcdd840[shape=record, label="  %27 = and i32 %13, %10"];
	Node0xcdd8b0[shape=record, label="  %28 = and i32 %13, %24"];
	Node0xcdd920[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0xcdd990[shape=record, label="  %30 = xor i32 %13, %10"];
	Node0xcdda00[shape=record, label="  %31 = or i32 %13, %10"];
	Node0xcdda70[shape=record, label="  %32 = shl i32 %31, 2"];
	Node0xcddae0[shape=record, label="  %33 = xor i32 %32, -4"];
	Node0xcddb50[shape=record, label="  %34 = shl i32 %26, 3"];
	Node0xcddbc0[shape=record, label="  %35 = xor i32 %34, -8"];
	Node0xcddc30[shape=record, label="  %36 = shl i32 %27, 2"];
	Node0xcddca0[shape=record, label="  %37 = add i32 %28, %20"];
	Node0xcddd10[shape=record, label="  %38 = mul i32 %37, -3"];
	Node0xcddd80[shape=record, label="  %39 = add i32 %30, %11"];
	Node0xcdddf0[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0xcdde60[shape=record, label="  %41 = add i32 %10, -3"];
	Node0xcdded0[shape=record, label="  %42 = add i32 %41, %11"];
	Node0xcddf40[shape=record, label="  %43 = sub i32 %42, %12"];
	Node0xcddfb0[shape=record, label="  %44 = add i32 %43, %14"];
	Node0xcde020[shape=record, label="  %45 = add i32 %44, %18"];
	Node0xcde090[shape=record, label="  %46 = add i32 %45, %25"];
	Node0xcde100[shape=record, label="  %47 = add i32 %46, %21"];
	Node0xcde170[shape=record, label="  %48 = sub i32 %47, %23"];
	Node0xcde1e0[shape=record, label="  %49 = sub i32 %48, %26"];
	Node0xcde250[shape=record, label="  %50 = add i32 %49, %27"];
	Node0xcde2c0[shape=record, label="  %51 = add i32 %50, %29"];
	Node0xcde330[shape=record, label="  %52 = sub i32 %51, %36"];
	Node0xcde3a0[shape=record, label="  %53 = sub i32 %52, %33"];
	Node0xcde410[shape=record, label="  %54 = sub i32 %53, %35"];
	Node0xcde480[shape=record, label="  %55 = add i32 %54, %38"];
	Node0xcde4f0[shape=record, label="  %56 = add i32 %55, %40"];
	Node0xcde560[shape=record, label="  %57 = icmp eq i32 %16, %56"];
	Node0xc7a8b8[shape=record, label="  %58 = select i1 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xcde5f0[shape=record, label="  %59 = call i32 @puts(i8* nonnull dereferenceable(1) %58) #5"];
	Node0xcde898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xcde9f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xcdeb08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xcdec18[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xcdecd8[shape=record, label="  ret i32 0"];
	Node0xcdaec8 -> Node0xcdaf48;
	Node0xcdaf48 -> Node0xcdafd8;
	Node0xcdafd8 -> Node0xcdb038;
	Node0xcdb038 -> Node0xcdb0e8;
	Node0xcdb0e8 -> Node0xcdb518;
	Node0xcdb518 -> Node0xcdb5f8;
	Node0xcdb5f8 -> Node0xcdb6f8;
	Node0xcdb6f8 -> Node0xcdb7b8;
	Node0xcdb7b8 -> Node0xcdb868;
	Node0xcdb868 -> Node0xcdb928;
	Node0xcdb928 -> Node0xcdb9d8;
	Node0xcdb9d8 -> Node0xcd5c00;
	Node0xcd5c00 -> Node0xcdbbd8;
	Node0xcdbbd8 -> Node0xcdcb48;
	Node0xcdcb48 -> Node0xcdd1b8;
	Node0xcdd1b8 -> Node0xcdd218;
	Node0xcdd218 -> Node0xcdd290;
	Node0xcdd290 -> Node0xcdd300;
	Node0xcdd300 -> Node0xcdd370;
	Node0xcdd370 -> Node0xcdd3e0;
	Node0xcdd3e0 -> Node0xcdd450;
	Node0xcdd450 -> Node0xcdd4c0;
	Node0xcdd4c0 -> Node0xcdd530;
	Node0xcdd530 -> Node0xcdd5a0;
	Node0xcdd5a0 -> Node0xcdd610;
	Node0xcdd610 -> Node0xcdd680;
	Node0xcdd680 -> Node0xcdd6f0;
	Node0xcdd6f0 -> Node0xcdd760;
	Node0xcdd760 -> Node0xcdd7d0;
	Node0xcdd7d0 -> Node0xcdd840;
	Node0xcdd840 -> Node0xcdd8b0;
	Node0xcdd8b0 -> Node0xcdd920;
	Node0xcdd920 -> Node0xcdd990;
	Node0xcdd990 -> Node0xcdda00;
	Node0xcdda00 -> Node0xcdda70;
	Node0xcdda70 -> Node0xcddae0;
	Node0xcddae0 -> Node0xcddb50;
	Node0xcddb50 -> Node0xcddbc0;
	Node0xcddbc0 -> Node0xcddc30;
	Node0xcddc30 -> Node0xcddca0;
	Node0xcddca0 -> Node0xcddd10;
	Node0xcddd10 -> Node0xcddd80;
	Node0xcddd80 -> Node0xcdddf0;
	Node0xcdddf0 -> Node0xcdde60;
	Node0xcdde60 -> Node0xcdded0;
	Node0xcdded0 -> Node0xcddf40;
	Node0xcddf40 -> Node0xcddfb0;
	Node0xcddfb0 -> Node0xcde020;
	Node0xcde020 -> Node0xcde090;
	Node0xcde090 -> Node0xcde100;
	Node0xcde100 -> Node0xcde170;
	Node0xcde170 -> Node0xcde1e0;
	Node0xcde1e0 -> Node0xcde250;
	Node0xcde250 -> Node0xcde2c0;
	Node0xcde2c0 -> Node0xcde330;
	Node0xcde330 -> Node0xcde3a0;
	Node0xcde3a0 -> Node0xcde410;
	Node0xcde410 -> Node0xcde480;
	Node0xcde480 -> Node0xcde4f0;
	Node0xcde4f0 -> Node0xcde560;
	Node0xcde560 -> Node0xc7a8b8;
	Node0xc7a8b8 -> Node0xcde5f0;
	Node0xcde5f0 -> Node0xcde898;
	Node0xcde898 -> Node0xcde9f8;
	Node0xcde9f8 -> Node0xcdeb08;
	Node0xcdeb08 -> Node0xcdec18;
	Node0xcdec18 -> Node0xcdecd8;
edge [color=red]
	Node0xcdaec8 -> Node0xcdb0e8;
	Node0xcdb0e8 -> Node0xcdb518;
	Node0xcdaf48 -> Node0xcdb5f8;
	Node0xcdb5f8 -> Node0xcdb6f8;
	Node0xcdafd8 -> Node0xcdb7b8;
	Node0xcdb7b8 -> Node0xcdb868;
	Node0xcdb038 -> Node0xcdb928;
	Node0xcdb928 -> Node0xcdb9d8;
	Node0xcdaec8 -> Node0xcd5c00;
	Node0xcdaf48 -> Node0xcd5c00;
	Node0xcdafd8 -> Node0xcd5c00;
	Node0xcdb038 -> Node0xcd5c00;
	Node0xcdaec8 -> Node0xcdbbd8;
	Node0xcdaf48 -> Node0xcdcb48;
	Node0xcdafd8 -> Node0xcdd1b8;
	Node0xcdb038 -> Node0xcdd218;
	Node0xcdd1b8 -> Node0xcdd290;
	Node0xcdcb48 -> Node0xcdd300;
	Node0xcdd290 -> Node0xcdd300;
	Node0xcdd218 -> Node0xcdd370;
	Node0xcdd300 -> Node0xcdd370;
	Node0xcdcb48 -> Node0xcdd3e0;
	Node0xcdd290 -> Node0xcdd3e0;
	Node0xcdd3e0 -> Node0xcdd450;
	Node0xcdd1b8 -> Node0xcdd4c0;
	Node0xcdcb48 -> Node0xcdd4c0;
	Node0xcdd4c0 -> Node0xcdd530;
	Node0xcdd3e0 -> Node0xcdd5a0;
	Node0xcdd1b8 -> Node0xcdd610;
	Node0xcdcb48 -> Node0xcdd610;
	Node0xcdd610 -> Node0xcdd680;
	Node0xcdbbd8 -> Node0xcdd6f0;
	Node0xcdd218 -> Node0xcdd760;
	Node0xcdd218 -> Node0xcdd7d0;
	Node0xcdd6f0 -> Node0xcdd7d0;
	Node0xcdd218 -> Node0xcdd840;
	Node0xcdbbd8 -> Node0xcdd840;
	Node0xcdd218 -> Node0xcdd8b0;
	Node0xcdd6f0 -> Node0xcdd8b0;
	Node0xcdd8b0 -> Node0xcdd920;
	Node0xcdd218 -> Node0xcdd990;
	Node0xcdbbd8 -> Node0xcdd990;
	Node0xcdd218 -> Node0xcdda00;
	Node0xcdbbd8 -> Node0xcdda00;
	Node0xcdda00 -> Node0xcdda70;
	Node0xcdda70 -> Node0xcddae0;
	Node0xcdd7d0 -> Node0xcddb50;
	Node0xcddb50 -> Node0xcddbc0;
	Node0xcdd840 -> Node0xcddc30;
	Node0xcdd8b0 -> Node0xcddca0;
	Node0xcdd530 -> Node0xcddca0;
	Node0xcddca0 -> Node0xcddd10;
	Node0xcdd990 -> Node0xcddd80;
	Node0xcdcb48 -> Node0xcddd80;
	Node0xcddd80 -> Node0xcdddf0;
	Node0xcdbbd8 -> Node0xcdde60;
	Node0xcdde60 -> Node0xcdded0;
	Node0xcdcb48 -> Node0xcdded0;
	Node0xcdded0 -> Node0xcddf40;
	Node0xcdd1b8 -> Node0xcddf40;
	Node0xcddf40 -> Node0xcddfb0;
	Node0xcdd290 -> Node0xcddfb0;
	Node0xcddfb0 -> Node0xcde020;
	Node0xcdd450 -> Node0xcde020;
	Node0xcde020 -> Node0xcde090;
	Node0xcdd760 -> Node0xcde090;
	Node0xcde090 -> Node0xcde100;
	Node0xcdd5a0 -> Node0xcde100;
	Node0xcde100 -> Node0xcde170;
	Node0xcdd680 -> Node0xcde170;
	Node0xcde170 -> Node0xcde1e0;
	Node0xcdd7d0 -> Node0xcde1e0;
	Node0xcde1e0 -> Node0xcde250;
	Node0xcdd840 -> Node0xcde250;
	Node0xcde250 -> Node0xcde2c0;
	Node0xcdd920 -> Node0xcde2c0;
	Node0xcde2c0 -> Node0xcde330;
	Node0xcddc30 -> Node0xcde330;
	Node0xcde330 -> Node0xcde3a0;
	Node0xcddae0 -> Node0xcde3a0;
	Node0xcde3a0 -> Node0xcde410;
	Node0xcddbc0 -> Node0xcde410;
	Node0xcde410 -> Node0xcde480;
	Node0xcddd10 -> Node0xcde480;
	Node0xcde480 -> Node0xcde4f0;
	Node0xcdddf0 -> Node0xcde4f0;
	Node0xcdd370 -> Node0xcde560;
	Node0xcde4f0 -> Node0xcde560;
	Node0xcde560 -> Node0xc7a8b8;
	Node0xc7a8b8 -> Node0xcde5f0;
	Node0xcdb928 -> Node0xcde898;
	Node0xcdb7b8 -> Node0xcde9f8;
	Node0xcdb5f8 -> Node0xcdeb08;
	Node0xcdb0e8 -> Node0xcdec18;
}
