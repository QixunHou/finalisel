; ModuleID = '../.././c_source_file/1859_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1859_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = and i32 %7, %1
  %9 = and i32 %2, %1
  %10 = and i32 %9, %0
  %11 = xor i32 %0, -1
  %12 = xor i32 %2, %1
  %13 = and i32 %12, %11
  %14 = xor i32 %10, -1
  %15 = xor i32 %13, %14
  %16 = xor i32 %3, -1
  %17 = or i32 %16, %4
  %18 = xor i32 %5, %4
  %19 = and i32 %18, %17
  %20 = sub i32 %3, %8
  %21 = add i32 %20, %15
  %22 = add i32 %21, %19
  %23 = or i32 %10, %13
  %24 = xor i32 %1, -1
  %25 = and i32 %24, %2
  %26 = and i32 %25, %0
  %27 = xor i32 %12, %0
  %28 = or i32 %26, %27
  %29 = or i32 %24, %2
  %30 = and i32 %29, %11
  %31 = or i32 %26, %30
  %32 = or i32 %24, %0
  %33 = xor i32 %32, -1
  %34 = xor i32 %2, %0
  %35 = or i32 %34, %33
  %36 = or i32 %2, %0
  %37 = xor i32 %36, %1
  %38 = or i32 %7, %0
  %39 = xor i32 %1, %0
  %40 = and i32 %38, %39
  %41 = and i32 %24, %0
  %42 = xor i32 %41, -1
  %43 = and i32 %7, %42
  %44 = xor i32 %39, -1
  %45 = or i32 %44, %2
  %46 = and i32 %1, %0
  %47 = xor i32 %46, %2
  %48 = and i32 %12, %42
  %49 = shl i32 %48, 1
  %50 = and i32 %2, %0
  %51 = xor i32 %50, %32
  %52 = or i32 %1, %0
  %53 = and i32 %12, %52
  %54 = xor i32 %34, -1
  %55 = and i32 %54, %1
  %56 = shl i32 %55, 1
  %57 = and i32 %25, %11
  %58 = or i32 %12, %11
  %59 = xor i32 %57, %58
  %60 = xor i32 %26, -1
  %61 = xor i32 %30, %60
  %62 = or i32 %12, %0
  %63 = xor i32 %52, -1
  %64 = or i32 %34, %63
  %65 = xor i32 %36, -1
  %66 = or i32 %65, %44
  %67 = shl i32 %66, 1
  %68 = and i32 %7, %0
  %69 = or i32 %68, %1
  %70 = or i32 %7, %33
  %71 = or i32 %7, %1
  %72 = xor i32 %71, -1
  %73 = or i32 %72, %0
  %74 = or i32 %39, %2
  %75 = or i32 %2, %1
  %76 = xor i32 %75, -1
  %77 = or i32 %50, %76
  %78 = xor i32 %12, -1
  %79 = add i32 %12, 1
  %80 = xor i32 %27, -1
  %81 = xor i32 %26, %80
  %82 = or i32 %65, %24
  %83 = xor i32 %26, %62
  %84 = xor i32 %8, -1
  %85 = xor i32 %50, %84
  %86 = and i32 %36, %39
  %87 = and i32 %7, %44
  %88 = or i32 %34, %44
  %89 = or i32 %41, %54
  %90 = shl i32 %89, 1
  %91 = and i32 %34, %32
  %92 = xor i32 %32, %2
  %93 = or i32 %41, %78
  %94 = and i32 %38, %1
  %95 = shl i32 %94, 1
  %96 = xor i32 %75, %0
  %97 = xor i32 %96, %14
  %98 = or i32 %68, %44
  %99 = xor i32 %38, %1
  %100 = shl i32 %99, 1
  %101 = xor i32 %50, %52
  %102 = or i32 %10, %96
  %103 = or i32 %9, %41
  %104 = or i32 %50, %8
  %105 = xor i32 %36, %46
  %106 = or i32 %50, %63
  %107 = xor i32 %68, %71
  %108 = and i32 %38, %24
  %109 = xor i32 %46, -1
  %110 = and i32 %7, %109
  %111 = or i32 %46, %54
  %112 = xor i32 %9, -1
  %113 = or i32 %112, %11
  %114 = and i32 %36, %44
  %115 = and i32 %34, %52
  %116 = shl i32 %115, 1
  %117 = and i32 %54, %44
  %118 = or i32 %50, %44
  %119 = or i32 %12, %41
  %120 = or i32 %78, %0
  %121 = or i32 %8, %41
  %122 = and i32 %12, %109
  %123 = xor i32 %68, -1
  %124 = and i32 %123, %1
  %125 = xor i32 %76, %0
  %126 = xor i32 %38, -1
  %127 = xor i32 %126, %1
  %128 = and i32 %75, %0
  %129 = or i32 %41, %2
  %130 = and i32 %42, %2
  %131 = and i32 %39, %2
  %132 = and i32 %54, %109
  %133 = or i32 %84, %0
  %134 = or i32 %39, %126
  %135 = or i32 %39, %54
  %136 = shl i32 %135, 1
  %137 = xor i32 %38, %46
  %138 = and i32 %9, %11
  %139 = xor i32 %128, -1
  %140 = xor i32 %138, %139
  %141 = or i32 %46, %2
  %142 = xor i32 %63, %2
  %143 = and i32 %112, %11
  %144 = xor i32 %50, -1
  %145 = and i32 %144, %24
  %146 = shl i32 %71, 1
  %147 = or i32 %68, %72
  %148 = and i32 %12, %0
  %149 = shl i32 %148, 1
  %150 = xor i32 %65, %1
  %151 = xor i32 %29, %0
  %152 = or i32 %26, %151
  %153 = add i32 %71, 1
  %154 = or i32 %75, %11
  %155 = and i32 %71, %11
  %156 = xor i32 %50, %75
  %157 = xor i32 %42, %2
  %158 = or i32 %84, %11
  %159 = or i32 %126, %44
  %160 = or i32 %63, %2
  %161 = and i32 %54, %42
  %162 = or i32 %46, %78
  %163 = shl i32 %162, 1
  %164 = and i32 %44, %2
  %165 = and i32 %34, %1
  %166 = or i32 %78, %11
  %167 = and i32 %34, %42
  %168 = and i32 %52, %78
  %169 = and i32 %38, %44
  %170 = shl i32 %169, 1
  %171 = or i32 %72, %11
  %172 = or i32 %78, %63
  %173 = xor i32 %109, %2
  %174 = or i32 %33, %2
  %175 = and i32 %34, %24
  %176 = and i32 %32, %54
  %177 = add i32 %38, 1
  %178 = xor i32 %68, %112
  %179 = xor i32 %144, %1
  %180 = or i32 %65, %1
  %181 = and i32 %112, %0
  %182 = or i32 %9, %0
  %183 = or i32 %46, %72
  %184 = shl i32 %9, 1
  %185 = or i32 %138, %128
  %186 = xor i32 %10, %27
  %187 = or i32 %39, %7
  %188 = or i32 %39, %65
  %189 = or i32 %34, %46
  %190 = xor i32 %112, %0
  %191 = xor i32 %148, 1073741823
  %192 = xor i32 %191, %138
  %193 = xor i32 %50, %1
  %194 = xor i32 %62, -1
  %195 = or i32 %26, %194
  %196 = xor i32 %8, %0
  %197 = and i32 %34, %44
  %198 = and i32 %84, %11
  %199 = or i32 %68, %24
  %200 = or i32 %54, %44
  %201 = and i32 %54, %24
  %202 = shl i32 %201, 1
  %203 = and i32 %34, %39
  %204 = or i32 %112, %0
  %205 = or i32 %126, %24
  %206 = xor i32 %71, %46
  %207 = and i32 %75, %11
  %208 = xor i32 %207, %14
  %209 = and i32 %32, %7
  %210 = and i32 %84, %0
  %211 = or i32 %50, %24
  %212 = or i32 %126, %1
  %213 = xor i32 %68, %1
  %214 = xor i32 %41, %112
  %215 = shl i32 %0, 1
  %216 = and i32 %71, %0
  %217 = or i32 %71, %0
  %218 = and i32 %78, %109
  %219 = or i32 %8, %0
  %220 = or i32 %68, %39
  %221 = or i32 %76, %0
  %222 = or i32 %46, %65
  %223 = and i32 %78, %11
  %224 = or i32 %10, %80
  %225 = add i32 %34, 1
  %226 = xor i32 %72, %0
  %227 = and i32 %52, %54
  %228 = and i32 %32, %78
  %229 = shl i32 %228, 1
  %230 = and i32 %39, %123
  %231 = or i32 %54, %1
  %232 = or i32 %12, %63
  %233 = or i32 %50, %33
  %234 = or i32 %54, %24
  %235 = xor i32 %58, 2147483647
  %236 = or i32 %235, %57
  %237 = and i32 %123, %24
  %238 = shl i32 %237, 1
  %239 = or i32 %54, %33
  %240 = or i32 %12, %33
  %241 = shl i32 %240, 1
  %242 = xor i32 %9, %0
  %243 = and i32 %39, %54
  %244 = and i32 %36, %24
  %245 = or i32 %7, %63
  %246 = xor i32 %41, %84
  %247 = or i32 %9, %11
  %248 = xor i32 %41, %2
  %249 = xor i32 %151, %60
  %250 = xor i32 %33, %2
  %251 = or i32 %75, %0
  %252 = or i32 %76, %11
  %253 = or i32 %46, %126
  %254 = and i32 %39, %7
  %255 = or i32 %46, %7
  %256 = xor i32 %84, %0
  %257 = shl i32 %256, 1
  %258 = and i32 %123, %44
  %259 = and i32 %29, %0
  %260 = or i32 %57, %259
  %261 = or i32 %7, %44
  %262 = xor i32 %71, %0
  %263 = and i32 %39, %144
  %264 = or i32 %41, %7
  %265 = add i32 %36, 1
  %266 = or i32 %12, %46
  %267 = xor i32 %52, %2
  %268 = shl i32 %267, 1
  %269 = or i32 %71, %11
  %270 = and i32 %76, %11
  %271 = and i32 %8, %11
  %272 = and i32 %76, %0
  %273 = and i32 %8, %0
  %274 = mul i32 %273, 12
  %275 = and i32 %72, %11
  %276 = mul i32 %275, -31
  %277 = and i32 %72, %0
  %278 = mul i32 %277, -7
  %279 = xor i32 %18, -1
  %280 = and i32 %17, %279
  %281 = or i32 %5, %3
  %282 = xor i32 %281, -1
  %283 = xor i32 %282, %4
  %284 = and i32 %5, %4
  %285 = or i32 %4, %3
  %286 = xor i32 %285, -1
  %287 = or i32 %284, %286
  %288 = and i32 %5, %3
  %289 = xor i32 %288, -1
  %290 = add i32 %288, 1
  %291 = and i32 %16, %4
  %292 = xor i32 %291, -1
  %293 = xor i32 %5, %3
  %294 = xor i32 %293, -1
  %295 = and i32 %294, %292
  %296 = xor i32 %4, %3
  %297 = xor i32 %296, -1
  %298 = and i32 %279, %297
  %299 = xor i32 %4, -1
  %300 = and i32 %288, %299
  %301 = and i32 %293, %4
  %302 = or i32 %300, %301
  %303 = and i32 %4, %3
  %304 = xor i32 %5, -1
  %305 = or i32 %304, %4
  %306 = xor i32 %305, %303
  %307 = add i32 %3, 1
  %308 = or i32 %291, %294
  %309 = shl i32 %308, 1
  %310 = or i32 %304, %3
  %311 = and i32 %310, %4
  %312 = and i32 %18, %3
  %313 = or i32 %5, %4
  %314 = and i32 %313, %296
  %315 = or i32 %297, %5
  %316 = and i32 %279, %292
  %317 = or i32 %291, %279
  %318 = and i32 %288, %4
  %319 = xor i32 %293, %4
  %320 = xor i32 %318, %319
  %321 = xor i32 %310, %4
  %322 = shl i32 %321, 1
  %323 = and i32 %305, %296
  %324 = and i32 %16, %5
  %325 = and i32 %324, %4
  %326 = or i32 %16, %5
  %327 = and i32 %326, %299
  %328 = xor i32 %325, -1
  %329 = xor i32 %327, %328
  %330 = xor i32 %313, %303
  %331 = shl i32 %330, 1
  %332 = xor i32 %281, %4
  %333 = xor i32 %318, -1
  %334 = xor i32 %332, %333
  %335 = xor i32 %305, -1
  %336 = xor i32 %335, %3
  %337 = and i32 %293, %299
  %338 = xor i32 %337, %333
  %339 = or i32 %279, %16
  %340 = and i32 %281, %4
  %341 = and i32 %305, %16
  %342 = shl i32 %341, 1
  %343 = xor i32 %310, %303
  %344 = xor i32 %300, -1
  %345 = xor i32 %301, %344
  %346 = and i32 %304, %3
  %347 = xor i32 %346, -1
  %348 = or i32 %347, %299
  %349 = xor i32 %286, %5
  %350 = and i32 %18, %292
  %351 = xor i32 %284, -1
  %352 = and i32 %351, %297
  %353 = or i32 %281, %299
  %354 = and i32 %279, %16
  %355 = xor i32 %284, %285
  %356 = and i32 %304, %4
  %357 = xor i32 %356, -1
  %358 = and i32 %296, %357
  %359 = and i32 %17, %304
  %360 = and i32 %18, %297
  %361 = or i32 %335, %3
  %362 = or i32 %325, %319
  %363 = xor i32 %326, %4
  %364 = or i32 %325, %363
  %365 = and i32 %296, %5
  %366 = or i32 %284, %282
  %367 = or i32 %325, %327
  %368 = xor i32 %303, -1
  %369 = and i32 %18, %285
  %370 = xor i32 %284, %3
  %371 = or i32 %296, %304
  %372 = or i32 %304, %286
  %373 = or i32 %356, %3
  %374 = and i32 %324, %299
  %375 = or i32 %293, %299
  %376 = xor i32 %375, -1
  %377 = or i32 %374, %376
  %378 = and i32 %292, %5
  %379 = and i32 %357, %3
  %380 = xor i32 %284, %281
  %381 = xor i32 %284, %17
  %382 = and i32 %279, %368
  %383 = or i32 %335, %297
  %384 = xor i32 %289, %4
  %385 = xor i32 %368, %5
  %386 = or i32 %303, %282
  %387 = or i32 %293, %4
  %388 = or i32 %288, %291
  %389 = or i32 %310, %4
  %390 = or i32 %294, %4
  %391 = and i32 %347, %299
  %392 = xor i32 %17, -1
  %393 = or i32 %293, %392
  %394 = xor i32 %17, %5
  %395 = and i32 %304, %368
  %396 = xor i32 %281, %303
  %397 = or i32 %346, %299
  %398 = xor i32 %319, -1
  %399 = or i32 %318, %398
  %400 = or i32 %18, %3
  %401 = and i32 %326, %4
  %402 = xor i32 %401, -1
  %403 = xor i32 %374, %402
  %404 = and i32 %351, %16
  %405 = and i32 %305, %297
  %406 = xor i32 %356, %310
  %407 = and i32 %289, %299
  %408 = and i32 %17, %294
  %409 = xor i32 %313, -1
  %410 = or i32 %409, %3
  %411 = and i32 %296, %279
  %412 = xor i32 %347, %4
  %413 = or i32 %284, %16
  %414 = or i32 %291, %5
  %415 = or i32 %294, %299
  %416 = or i32 %284, %296
  %417 = or i32 %294, %286
  %418 = or i32 %279, %286
  %419 = or i32 %304, %297
  %420 = and i32 %304, %297
  %421 = shl i32 %286, 1
  %422 = xor i32 %310, -1
  %423 = or i32 %422, %4
  %424 = xor i32 %374, %375
  %425 = shl i32 %424, 1
  %426 = or i32 %303, %304
  %427 = and i32 %17, %5
  %428 = or i32 %288, %4
  %429 = or i32 %284, %3
  %430 = or i32 %356, %422
  %431 = shl i32 %430, 1
  %432 = and i32 %357, %16
  %433 = or i32 %374, %401
  %434 = or i32 %346, %291
  %435 = xor i32 %325, %387
  %436 = shl i32 %301, 1
  %437 = or i32 %392, %5
  %438 = xor i32 %392, %5
  %439 = and i32 %347, %4
  %440 = shl i32 %439, 1
  %441 = xor i32 %340, %344
  %442 = xor i32 %387, -1
  %443 = or i32 %325, %442
  %444 = or i32 %296, %5
  %445 = or i32 %296, %409
  %446 = shl i32 %445, 1
  %447 = and i32 %293, %285
  %448 = or i32 %282, %4
  %449 = xor i32 %363, %328
  %450 = xor i32 %346, %4
  %451 = and i32 %18, %368
  %452 = xor i32 %357, %3
  %453 = or i32 %346, %4
  %454 = or i32 %409, %16
  %455 = or i32 %294, %392
  %456 = or i32 %356, %296
  %457 = and i32 %293, %368
  %458 = or i32 %289, %299
  %459 = or i32 %289, %4
  %460 = or i32 %293, %286
  %461 = or i32 %303, %335
  %462 = and i32 %285, %5
  %463 = add i32 %4, 1
  %464 = and i32 %285, %304
  %465 = shl i32 %464, 1
  %466 = xor i32 %285, %5
  %467 = xor i32 %356, %3
  %468 = and i32 %310, %299
  %469 = add i32 %310, 1
  %470 = and i32 %294, %368
  %471 = or i32 %335, %16
  %472 = xor i32 %291, %347
  %473 = or i32 %18, %286
  %474 = or i32 %303, %279
  %475 = shl i32 %474, 1
  %476 = xor i32 %291, %5
  %477 = or i32 %296, %335
  %478 = and i32 %313, %3
  %479 = or i32 %279, %297
  %480 = xor i32 %292, %5
  %481 = and i32 %282, %299
  %482 = and i32 %346, %299
  %483 = mul i32 %482, -10
  %484 = and i32 %282, %4
  %485 = and i32 %346, %4
  %486 = mul i32 %485, -20
  %487 = and i32 %422, %299
  %488 = shl i32 %487, 4
  %489 = and i32 %422, %4
  %490 = mul i32 %489, -25
  %491 = shl i32 %318, 4
  %492 = add i32 %42, %11
  %493 = add i32 %492, %250
  %494 = add i32 %493, %245
  %495 = add i32 %494, %142
  %496 = add i32 %495, %110
  %497 = add i32 %496, %253
  %498 = add i32 %497, %244
  %499 = add i32 %498, %232
  %500 = add i32 %499, %226
  %501 = add i32 %500, %223
  %502 = add i32 %501, %13
  %503 = add i32 %502, %176
  %504 = add i32 %503, %167
  %505 = add i32 %504, %165
  %506 = add i32 %505, %159
  %507 = add i32 %506, %158
  %508 = add i32 %507, %150
  %509 = add i32 %508, %101
  %510 = add i32 %509, %77
  %511 = add i32 %510, %40
  %512 = add i32 %511, %427
  %513 = add i32 %512, %420
  %514 = add i32 %513, %335
  %515 = add i32 %514, %310
  %516 = add i32 %515, %288
  %517 = add i32 %516, %347
  %518 = add i32 %517, %372
  %519 = add i32 %518, %359
  %520 = add i32 %519, %236
  %521 = add i32 %520, %458
  %522 = add i32 %521, %459
  %523 = add i32 %522, %451
  %524 = add i32 %523, %429
  %525 = add i32 %524, %415
  %526 = add i32 %525, %332
  %527 = add i32 %526, %390
  %528 = add i32 %527, %383
  %529 = add i32 %528, %352
  %530 = shl i32 %529, 1
  %531 = add i32 %193, %220
  %532 = add i32 %531, %118
  %533 = add i32 %532, %104
  %534 = sub i32 %53, %533
  %535 = sub i32 %534, %484
  %536 = sub i32 %535, %472
  %537 = add i32 %536, %452
  %538 = sub i32 %537, %417
  %539 = add i32 %538, %367
  %540 = add i32 %539, %443
  %541 = sub i32 %540, %338
  %542 = mul i32 %541, 5
  %543 = sub i32 %10, %38
  %544 = add i32 %543, %58
  %545 = add i32 %544, %230
  %546 = add i32 %545, %219
  %547 = sub i32 %546, %210
  %548 = sub i32 %547, %91
  %549 = add i32 %548, %224
  %550 = add i32 %549, %280
  %551 = add i32 %550, %298
  %552 = mul i32 %551, 3
  %553 = add i32 %106, %76
  %554 = add i32 %553, %37
  %555 = add i32 %554, %192
  %556 = add i32 %555, %340
  %557 = shl i32 %556, 2
  %558 = add i32 %300, %138
  %559 = mul i32 %558, -17
  %560 = or i32 %272, %271
  %561 = mul i32 %560, -13
  %562 = add i32 %481, %270
  %563 = mul i32 %562, -22
  %564 = sub i32 -8, %1
  %565 = sub i32 %564, %215
  %566 = sub i32 %565, %2
  %567 = add i32 %566, %63
  %568 = add i32 %567, %7
  %569 = add i32 %568, %39
  %570 = sub i32 %569, %52
  %571 = sub i32 %570, %41
  %572 = sub i32 %571, %43
  %573 = add i32 %572, %45
  %574 = add i32 %573, %47
  %575 = add i32 %574, %12
  %576 = add i32 %575, %70
  %577 = add i32 %576, %74
  %578 = add i32 %577, %79
  %579 = sub i32 %578, %87
  %580 = sub i32 %579, %92
  %581 = add i32 %580, %75
  %582 = add i32 %581, %84
  %583 = sub i32 %582, %129
  %584 = add i32 %583, %130
  %585 = add i32 %584, %131
  %586 = add i32 %585, %141
  %587 = add i32 %586, %153
  %588 = sub i32 %587, %157
  %589 = add i32 %588, %160
  %590 = add i32 %589, %164
  %591 = add i32 %590, %173
  %592 = sub i32 %591, %174
  %593 = add i32 %592, %68
  %594 = add i32 %593, %177
  %595 = add i32 %594, %187
  %596 = add i32 %595, %144
  %597 = sub i32 %596, %209
  %598 = add i32 %597, %225
  %599 = add i32 %598, %34
  %600 = sub i32 %599, %248
  %601 = sub i32 %600, %254
  %602 = add i32 %601, %255
  %603 = sub i32 %602, %261
  %604 = add i32 %603, %264
  %605 = add i32 %604, %265
  %606 = add i32 %605, %307
  %607 = sub i32 %606, %35
  %608 = add i32 %607, %51
  %609 = sub i32 %608, %62
  %610 = sub i32 %609, %64
  %611 = sub i32 %610, %69
  %612 = add i32 %611, %73
  %613 = sub i32 %612, %82
  %614 = add i32 %613, %85
  %615 = add i32 %614, %86
  %616 = add i32 %615, %88
  %617 = add i32 %616, %93
  %618 = add i32 %617, %98
  %619 = sub i32 %618, %103
  %620 = add i32 %619, %105
  %621 = sub i32 %620, %107
  %622 = sub i32 %621, %108
  %623 = add i32 %622, %111
  %624 = add i32 %623, %113
  %625 = add i32 %624, %114
  %626 = sub i32 %625, %117
  %627 = add i32 %626, %119
  %628 = sub i32 %627, %120
  %629 = add i32 %628, %121
  %630 = sub i32 %629, %122
  %631 = add i32 %630, %124
  %632 = sub i32 %631, %125
  %633 = sub i32 %632, %127
  %634 = sub i32 %633, %128
  %635 = add i32 %634, %132
  %636 = add i32 %635, %133
  %637 = add i32 %636, %134
  %638 = add i32 %637, %137
  %639 = add i32 %638, %143
  %640 = sub i32 %639, %145
  %641 = sub i32 %640, %146
  %642 = add i32 %641, %147
  %643 = add i32 %642, %154
  %644 = add i32 %643, %155
  %645 = sub i32 %644, %156
  %646 = add i32 %645, %161
  %647 = add i32 %646, %166
  %648 = sub i32 %647, %168
  %649 = add i32 %648, %171
  %650 = add i32 %649, %172
  %651 = sub i32 %650, %175
  %652 = sub i32 %651, %178
  %653 = sub i32 %652, %179
  %654 = sub i32 %653, %180
  %655 = add i32 %654, %181
  %656 = sub i32 %655, %182
  %657 = sub i32 %656, %183
  %658 = sub i32 %657, %184
  %659 = sub i32 %658, %188
  %660 = sub i32 %659, %189
  %661 = sub i32 %660, %96
  %662 = add i32 %661, %190
  %663 = sub i32 %662, %196
  %664 = sub i32 %663, %197
  %665 = sub i32 %664, %198
  %666 = sub i32 %665, %199
  %667 = sub i32 %666, %200
  %668 = sub i32 %667, %203
  %669 = add i32 %668, %204
  %670 = sub i32 %669, %205
  %671 = add i32 %670, %206
  %672 = sub i32 %671, %211
  %673 = add i32 %672, %212
  %674 = add i32 %673, %213
  %675 = sub i32 %674, %214
  %676 = sub i32 %675, %216
  %677 = sub i32 %676, %217
  %678 = add i32 %677, %218
  %679 = sub i32 %678, %27
  %680 = add i32 %679, %221
  %681 = sub i32 %680, %222
  %682 = sub i32 %681, %227
  %683 = sub i32 %682, %231
  %684 = add i32 %683, %233
  %685 = add i32 %684, %234
  %686 = sub i32 %685, %239
  %687 = add i32 %686, %242
  %688 = sub i32 %687, %243
  %689 = sub i32 %688, %246
  %690 = add i32 %689, %247
  %691 = add i32 %690, %251
  %692 = sub i32 %691, %207
  %693 = add i32 %692, %252
  %694 = add i32 %693, %258
  %695 = add i32 %694, %262
  %696 = add i32 %695, %263
  %697 = sub i32 %696, %266
  %698 = sub i32 %697, %268
  %699 = sub i32 %698, %269
  %700 = add i32 %699, %463
  %701 = sub i32 %700, %28
  %702 = sub i32 %701, %23
  %703 = add i32 %702, %31
  %704 = sub i32 %703, %49
  %705 = sub i32 %704, %56
  %706 = sub i32 %705, %59
  %707 = sub i32 %706, %61
  %708 = sub i32 %707, %67
  %709 = add i32 %708, %81
  %710 = add i32 %709, %83
  %711 = sub i32 %710, %90
  %712 = sub i32 %711, %95
  %713 = add i32 %712, %97
  %714 = sub i32 %713, %100
  %715 = add i32 %714, %102
  %716 = sub i32 %715, %116
  %717 = sub i32 %716, %136
  %718 = sub i32 %717, %140
  %719 = sub i32 %718, %149
  %720 = sub i32 %719, %152
  %721 = sub i32 %720, %163
  %722 = sub i32 %721, %170
  %723 = sub i32 %722, %185
  %724 = add i32 %723, %186
  %725 = add i32 %724, %195
  %726 = sub i32 %725, %202
  %727 = add i32 %726, %208
  %728 = sub i32 %727, %229
  %729 = sub i32 %728, %238
  %730 = sub i32 %729, %241
  %731 = add i32 %730, %249
  %732 = sub i32 %731, %257
  %733 = add i32 %732, %260
  %734 = add i32 %733, %274
  %735 = add i32 %734, %276
  %736 = add i32 %735, %278
  %737 = add i32 %736, %291
  %738 = add i32 %737, %291
  %739 = add i32 %738, 2
  %740 = add i32 %739, %304
  %741 = sub i32 %740, %5
  %742 = add i32 %741, %285
  %743 = add i32 %742, %290
  %744 = add i32 %743, %315
  %745 = add i32 %744, %349
  %746 = add i32 %745, %365
  %747 = sub i32 %746, %293
  %748 = sub i32 %747, %371
  %749 = sub i32 %748, %378
  %750 = add i32 %749, %385
  %751 = sub i32 %750, %394
  %752 = add i32 %751, %395
  %753 = add i32 %752, %414
  %754 = add i32 %753, %419
  %755 = sub i32 %754, %421
  %756 = add i32 %755, %426
  %757 = add i32 %756, %281
  %758 = add i32 %757, %437
  %759 = sub i32 %758, %438
  %760 = add i32 %759, %305
  %761 = sub i32 %760, %356
  %762 = add i32 %761, %444
  %763 = add i32 %762, %351
  %764 = sub i32 %763, %462
  %765 = add i32 %764, %466
  %766 = add i32 %765, %313
  %767 = add i32 %766, %469
  %768 = sub i32 %767, %346
  %769 = sub i32 %768, %476
  %770 = add i32 %769, %480
  %771 = add i32 %770, %561
  %772 = add i32 %771, %283
  %773 = sub i32 %772, %287
  %774 = add i32 %773, %295
  %775 = sub i32 %774, %306
  %776 = sub i32 %775, %311
  %777 = add i32 %776, %312
  %778 = add i32 %777, %314
  %779 = sub i32 %778, %316
  %780 = add i32 %779, %317
  %781 = add i32 %780, %323
  %782 = sub i32 %781, %336
  %783 = add i32 %782, %339
  %784 = add i32 %783, %343
  %785 = add i32 %784, %348
  %786 = add i32 %785, %350
  %787 = add i32 %786, %319
  %788 = add i32 %787, %353
  %789 = sub i32 %788, %354
  %790 = add i32 %789, %355
  %791 = add i32 %790, %358
  %792 = add i32 %791, %360
  %793 = sub i32 %792, %337
  %794 = sub i32 %793, %361
  %795 = sub i32 %794, %366
  %796 = add i32 %795, %369
  %797 = sub i32 %796, %370
  %798 = sub i32 %797, %373
  %799 = sub i32 %798, %375
  %800 = sub i32 %799, %379
  %801 = add i32 %800, %380
  %802 = add i32 %801, %381
  %803 = add i32 %802, %382
  %804 = sub i32 %803, %384
  %805 = sub i32 %804, %386
  %806 = sub i32 %805, %387
  %807 = add i32 %806, %388
  %808 = sub i32 %807, %389
  %809 = sub i32 %808, %391
  %810 = sub i32 %809, %393
  %811 = add i32 %810, %396
  %812 = sub i32 %811, %397
  %813 = sub i32 %812, %400
  %814 = add i32 %813, %404
  %815 = add i32 %814, %405
  %816 = add i32 %815, %406
  %817 = sub i32 %816, %407
  %818 = sub i32 %817, %408
  %819 = sub i32 %818, %410
  %820 = add i32 %819, %411
  %821 = add i32 %820, %412
  %822 = sub i32 %821, %413
  %823 = add i32 %822, %416
  %824 = add i32 %823, %418
  %825 = sub i32 %824, %423
  %826 = sub i32 %825, %428
  %827 = add i32 %826, %432
  %828 = add i32 %827, %434
  %829 = add i32 %828, %447
  %830 = add i32 %829, %448
  %831 = sub i32 %830, %450
  %832 = add i32 %831, %453
  %833 = sub i32 %832, %454
  %834 = sub i32 %833, %455
  %835 = sub i32 %834, %456
  %836 = add i32 %835, %457
  %837 = sub i32 %836, %460
  %838 = add i32 %837, %461
  %839 = sub i32 %838, %465
  %840 = add i32 %839, %467
  %841 = add i32 %840, %468
  %842 = add i32 %841, %470
  %843 = add i32 %842, %471
  %844 = sub i32 %843, %473
  %845 = add i32 %844, %477
  %846 = sub i32 %845, %478
  %847 = add i32 %846, %479
  %848 = sub i32 %847, %302
  %849 = sub i32 %848, %309
  %850 = sub i32 %849, %320
  %851 = sub i32 %850, %322
  %852 = add i32 %851, %329
  %853 = sub i32 %852, %331
  %854 = add i32 %853, %334
  %855 = sub i32 %854, %342
  %856 = sub i32 %855, %345
  %857 = sub i32 %856, %362
  %858 = add i32 %857, %364
  %859 = sub i32 %858, %377
  %860 = add i32 %859, %399
  %861 = sub i32 %860, %403
  %862 = sub i32 %861, %431
  %863 = add i32 %862, %433
  %864 = add i32 %863, %435
  %865 = sub i32 %864, %436
  %866 = sub i32 %865, %440
  %867 = sub i32 %866, %441
  %868 = sub i32 %867, %446
  %869 = sub i32 %868, %449
  %870 = sub i32 %869, %475
  %871 = add i32 %870, %483
  %872 = add i32 %871, %486
  %873 = sub i32 %872, %488
  %874 = add i32 %873, %490
  %875 = sub i32 %874, %491
  %876 = sub i32 %875, %425
  %877 = add i32 %876, %559
  %878 = add i32 %877, %563
  %879 = add i32 %878, %557
  %880 = add i32 %879, %552
  %881 = add i32 %880, %542
  %882 = add i32 %881, %530
  %883 = icmp eq i32 %22, %882
  %884 = select i1 %883, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %885 = tail call i32 @puts(i8* nonnull dereferenceable(1) %884)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
