digraph "DFG for'main' function" {
	Node0x1e9aa08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e9aa88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e9ab18[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e9af78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e9b058[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e9b178[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e9b3b0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e9b468[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e9c3d8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e9ca60[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1e9cad0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x1e9cb40[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x1e9cbb0[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x1e9cc20[shape=record, label="  %12 = or i32 %7, %6"];
	Node0x1e9cc90[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x1e9cd00[shape=record, label="  %14 = and i32 %7, %6"];
	Node0x1e9cd70[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1e9cde0[shape=record, label="  %16 = shl i32 %6, 1"];
	Node0x1e9ce50[shape=record, label="  %17 = mul i32 %14, 7"];
	Node0x1e9cec0[shape=record, label="  %18 = mul i32 %8, 3"];
	Node0x1e9cf30[shape=record, label="  %19 = sub i32 %11, %16"];
	Node0x1e9cfa0[shape=record, label="  %20 = sub i32 %19, %7"];
	Node0x1e9d010[shape=record, label="  %21 = add i32 %20, %15"];
	Node0x1e9d080[shape=record, label="  %22 = sub i32 %21, %8"];
	Node0x1e9d0f0[shape=record, label="  %23 = sub i32 %22, %13"];
	Node0x1e9d160[shape=record, label="  %24 = add i32 %23, %17"];
	Node0x1e9d1d0[shape=record, label="  %25 = add i32 %24, %18"];
	Node0x1e9d240[shape=record, label="  %26 = icmp eq i32 %10, %25"];
	Node0x1e3b9d8[shape=record, label="  %27 = select i1 %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e9d2d0[shape=record, label="  %28 = call i32 @puts(i8* nonnull dereferenceable(1) %27) #5"];
	Node0x1e9d528[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e9d688[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e9d748[shape=record, label="  ret i32 0"];
	Node0x1e9aa08 -> Node0x1e9aa88;
	Node0x1e9aa88 -> Node0x1e9ab18;
	Node0x1e9ab18 -> Node0x1e9af78;
	Node0x1e9af78 -> Node0x1e9b058;
	Node0x1e9b058 -> Node0x1e9b178;
	Node0x1e9b178 -> Node0x1e9b3b0;
	Node0x1e9b3b0 -> Node0x1e9b468;
	Node0x1e9b468 -> Node0x1e9c3d8;
	Node0x1e9c3d8 -> Node0x1e9ca60;
	Node0x1e9ca60 -> Node0x1e9cad0;
	Node0x1e9cad0 -> Node0x1e9cb40;
	Node0x1e9cb40 -> Node0x1e9cbb0;
	Node0x1e9cbb0 -> Node0x1e9cc20;
	Node0x1e9cc20 -> Node0x1e9cc90;
	Node0x1e9cc90 -> Node0x1e9cd00;
	Node0x1e9cd00 -> Node0x1e9cd70;
	Node0x1e9cd70 -> Node0x1e9cde0;
	Node0x1e9cde0 -> Node0x1e9ce50;
	Node0x1e9ce50 -> Node0x1e9cec0;
	Node0x1e9cec0 -> Node0x1e9cf30;
	Node0x1e9cf30 -> Node0x1e9cfa0;
	Node0x1e9cfa0 -> Node0x1e9d010;
	Node0x1e9d010 -> Node0x1e9d080;
	Node0x1e9d080 -> Node0x1e9d0f0;
	Node0x1e9d0f0 -> Node0x1e9d160;
	Node0x1e9d160 -> Node0x1e9d1d0;
	Node0x1e9d1d0 -> Node0x1e9d240;
	Node0x1e9d240 -> Node0x1e3b9d8;
	Node0x1e3b9d8 -> Node0x1e9d2d0;
	Node0x1e9d2d0 -> Node0x1e9d528;
	Node0x1e9d528 -> Node0x1e9d688;
	Node0x1e9d688 -> Node0x1e9d748;
edge [color=red]
	Node0x1e9aa08 -> Node0x1e9ab18;
	Node0x1e9ab18 -> Node0x1e9af78;
	Node0x1e9aa88 -> Node0x1e9b058;
	Node0x1e9b058 -> Node0x1e9b178;
	Node0x1e9aa08 -> Node0x1e9b3b0;
	Node0x1e9aa88 -> Node0x1e9b3b0;
	Node0x1e9aa08 -> Node0x1e9b468;
	Node0x1e9aa88 -> Node0x1e9c3d8;
	Node0x1e9c3d8 -> Node0x1e9ca60;
	Node0x1e9b468 -> Node0x1e9ca60;
	Node0x1e9ca60 -> Node0x1e9cad0;
	Node0x1e9cad0 -> Node0x1e9cb40;
	Node0x1e9c3d8 -> Node0x1e9cbb0;
	Node0x1e9c3d8 -> Node0x1e9cc20;
	Node0x1e9b468 -> Node0x1e9cc20;
	Node0x1e9cc20 -> Node0x1e9cc90;
	Node0x1e9c3d8 -> Node0x1e9cd00;
	Node0x1e9b468 -> Node0x1e9cd00;
	Node0x1e9cd00 -> Node0x1e9cd70;
	Node0x1e9b468 -> Node0x1e9cde0;
	Node0x1e9cd00 -> Node0x1e9ce50;
	Node0x1e9ca60 -> Node0x1e9cec0;
	Node0x1e9cbb0 -> Node0x1e9cf30;
	Node0x1e9cde0 -> Node0x1e9cf30;
	Node0x1e9cf30 -> Node0x1e9cfa0;
	Node0x1e9c3d8 -> Node0x1e9cfa0;
	Node0x1e9cfa0 -> Node0x1e9d010;
	Node0x1e9cd70 -> Node0x1e9d010;
	Node0x1e9d010 -> Node0x1e9d080;
	Node0x1e9ca60 -> Node0x1e9d080;
	Node0x1e9d080 -> Node0x1e9d0f0;
	Node0x1e9cc90 -> Node0x1e9d0f0;
	Node0x1e9d0f0 -> Node0x1e9d160;
	Node0x1e9ce50 -> Node0x1e9d160;
	Node0x1e9d160 -> Node0x1e9d1d0;
	Node0x1e9cec0 -> Node0x1e9d1d0;
	Node0x1e9cb40 -> Node0x1e9d240;
	Node0x1e9d1d0 -> Node0x1e9d240;
	Node0x1e9d240 -> Node0x1e3b9d8;
	Node0x1e3b9d8 -> Node0x1e9d2d0;
	Node0x1e9b058 -> Node0x1e9d528;
	Node0x1e9ab18 -> Node0x1e9d688;
}
