digraph "DFG for'crackme' function" {
	Node0x1e99450[shape=record, label="  %3 = xor i32 %1, %0"];
	Node0x1e99b00[shape=record, label="  %4 = shl i32 %3, 1"];
	Node0x1e99bc0[shape=record, label="  %5 = xor i32 %4, -2"];
	Node0x1e99c60[shape=record, label="  %6 = xor i32 %1, -1"];
	Node0x1e99cd0[shape=record, label="  %7 = or i32 %1, %0"];
	Node0x1e99d40[shape=record, label="  %8 = shl i32 %7, 1"];
	Node0x1e99db0[shape=record, label="  %9 = and i32 %1, %0"];
	Node0x1e99e20[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1e99e90[shape=record, label="  %11 = shl i32 %0, 1"];
	Node0x1e99f30[shape=record, label="  %12 = mul i32 %9, 7"];
	Node0x1e99fd0[shape=record, label="  %13 = mul i32 %3, 3"];
	Node0x1e9a040[shape=record, label="  %14 = sub i32 %6, %11"];
	Node0x1e9a0b0[shape=record, label="  %15 = sub i32 %14, %1"];
	Node0x1e9a120[shape=record, label="  %16 = add i32 %15, %10"];
	Node0x1e9a190[shape=record, label="  %17 = sub i32 %16, %3"];
	Node0x1e9a200[shape=record, label="  %18 = sub i32 %17, %8"];
	Node0x1e9a270[shape=record, label="  %19 = add i32 %18, %12"];
	Node0x1e9a2e0[shape=record, label="  %20 = add i32 %19, %13"];
	Node0x1e9a350[shape=record, label="  %21 = icmp eq i32 %5, %20"];
	Node0x1e3a268[shape=record, label="  %22 = select i1 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e9a7f0[shape=record, label="  %23 = tail call i32 @puts(i8* nonnull dereferenceable(1) %22)"];
	Node0x1e9a840[shape=record, label="  ret void"];
	Node0x1e99450 -> Node0x1e99b00;
	Node0x1e99b00 -> Node0x1e99bc0;
	Node0x1e99bc0 -> Node0x1e99c60;
	Node0x1e99c60 -> Node0x1e99cd0;
	Node0x1e99cd0 -> Node0x1e99d40;
	Node0x1e99d40 -> Node0x1e99db0;
	Node0x1e99db0 -> Node0x1e99e20;
	Node0x1e99e20 -> Node0x1e99e90;
	Node0x1e99e90 -> Node0x1e99f30;
	Node0x1e99f30 -> Node0x1e99fd0;
	Node0x1e99fd0 -> Node0x1e9a040;
	Node0x1e9a040 -> Node0x1e9a0b0;
	Node0x1e9a0b0 -> Node0x1e9a120;
	Node0x1e9a120 -> Node0x1e9a190;
	Node0x1e9a190 -> Node0x1e9a200;
	Node0x1e9a200 -> Node0x1e9a270;
	Node0x1e9a270 -> Node0x1e9a2e0;
	Node0x1e9a2e0 -> Node0x1e9a350;
	Node0x1e9a350 -> Node0x1e3a268;
	Node0x1e3a268 -> Node0x1e9a7f0;
	Node0x1e9a7f0 -> Node0x1e9a840;
edge [color=red]
	Node0x1e99450 -> Node0x1e99b00;
	Node0x1e99b00 -> Node0x1e99bc0;
	Node0x1e99cd0 -> Node0x1e99d40;
	Node0x1e99db0 -> Node0x1e99e20;
	Node0x1e99db0 -> Node0x1e99f30;
	Node0x1e99450 -> Node0x1e99fd0;
	Node0x1e99c60 -> Node0x1e9a040;
	Node0x1e99e90 -> Node0x1e9a040;
	Node0x1e9a040 -> Node0x1e9a0b0;
	Node0x1e9a0b0 -> Node0x1e9a120;
	Node0x1e99e20 -> Node0x1e9a120;
	Node0x1e9a120 -> Node0x1e9a190;
	Node0x1e99450 -> Node0x1e9a190;
	Node0x1e9a190 -> Node0x1e9a200;
	Node0x1e99d40 -> Node0x1e9a200;
	Node0x1e9a200 -> Node0x1e9a270;
	Node0x1e99f30 -> Node0x1e9a270;
	Node0x1e9a270 -> Node0x1e9a2e0;
	Node0x1e99fd0 -> Node0x1e9a2e0;
	Node0x1e99bc0 -> Node0x1e9a350;
	Node0x1e9a2e0 -> Node0x1e9a350;
	Node0x1e9a350 -> Node0x1e3a268;
	Node0x1e3a268 -> Node0x1e9a7f0;
}
