digraph "DFG for'main' function" {
	Node0x2492d18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2492d98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2492e28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2492e88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x2492f38[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x2493368[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2493448[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x2493548[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2493608[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x24936b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2493778[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x2493828[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x248dba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x2493a28[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2494998[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2495008[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2495068[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x24950e0[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x2495150[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0x24951c0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x2495230[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x24952a0[shape=record, label="  %18 = add i32 %14, %12"];
	Node0x2495310[shape=record, label="  %19 = sub i32 %17, %18"];
	Node0x2495380[shape=record, label="  %20 = or i32 %12, %11"];
	Node0x24953f0[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x2495460[shape=record, label="  %22 = shl i32 %14, 1"];
	Node0x24954d0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x2495540[shape=record, label="  %24 = xor i32 %21, -2"];
	Node0x24955b0[shape=record, label="  %25 = xor i32 %12, 2147483647"];
	Node0x2495620[shape=record, label="  %26 = xor i32 %11, 1073741823"];
	Node0x2495690[shape=record, label="  %27 = and i32 %26, %12"];
	Node0x2495700[shape=record, label="  %28 = shl i32 %27, 2"];
	Node0x2495770[shape=record, label="  %29 = and i32 %25, %11"];
	Node0x24957e0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x2495850[shape=record, label="  %31 = and i32 %13, %10"];
	Node0x24958c0[shape=record, label="  %32 = xor i32 %10, 2147483647"];
	Node0x2495930[shape=record, label="  %33 = or i32 %13, %32"];
	Node0x24959a0[shape=record, label="  %34 = or i32 %13, %10"];
	Node0x2495a10[shape=record, label="  %35 = xor i32 %13, -1"];
	Node0x2495a80[shape=record, label="  %36 = or i32 %10, %35"];
	Node0x2495af0[shape=record, label="  %37 = xor i32 %34, -1"];
	Node0x2495b60[shape=record, label="  %38 = mul i32 %37, 3"];
	Node0x2495bd0[shape=record, label="  %39 = sub i32 %33, %11"];
	Node0x2495c40[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x2495cb0[shape=record, label="  %41 = add i32 %10, 4"];
	Node0x2495d20[shape=record, label="  %42 = add i32 %41, %11"];
	Node0x2495d90[shape=record, label="  %43 = add i32 %42, %21"];
	Node0x2495e00[shape=record, label="  %44 = sub i32 %43, %28"];
	Node0x2495e70[shape=record, label="  %45 = add i32 %44, %31"];
	Node0x2495ee0[shape=record, label="  %46 = add i32 %45, %34"];
	Node0x2495f50[shape=record, label="  %47 = add i32 %46, %15"];
	Node0x2495fc0[shape=record, label="  %48 = add i32 %47, %36"];
	Node0x2496030[shape=record, label="  %49 = sub i32 %48, %23"];
	Node0x24960a0[shape=record, label="  %50 = add i32 %49, %24"];
	Node0x2496110[shape=record, label="  %51 = sub i32 %50, %30"];
	Node0x2496180[shape=record, label="  %52 = add i32 %51, %38"];
	Node0x24961f0[shape=record, label="  %53 = add i32 %52, %40"];
	Node0x2496260[shape=record, label="  %54 = icmp eq i32 %19, %53"];
	Node0x24328b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x24962f0[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x2496598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x24966f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2496808[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2496918[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x24969d8[shape=record, label="  ret i32 0"];
	Node0x2492d18 -> Node0x2492d98;
	Node0x2492d98 -> Node0x2492e28;
	Node0x2492e28 -> Node0x2492e88;
	Node0x2492e88 -> Node0x2492f38;
	Node0x2492f38 -> Node0x2493368;
	Node0x2493368 -> Node0x2493448;
	Node0x2493448 -> Node0x2493548;
	Node0x2493548 -> Node0x2493608;
	Node0x2493608 -> Node0x24936b8;
	Node0x24936b8 -> Node0x2493778;
	Node0x2493778 -> Node0x2493828;
	Node0x2493828 -> Node0x248dba0;
	Node0x248dba0 -> Node0x2493a28;
	Node0x2493a28 -> Node0x2494998;
	Node0x2494998 -> Node0x2495008;
	Node0x2495008 -> Node0x2495068;
	Node0x2495068 -> Node0x24950e0;
	Node0x24950e0 -> Node0x2495150;
	Node0x2495150 -> Node0x24951c0;
	Node0x24951c0 -> Node0x2495230;
	Node0x2495230 -> Node0x24952a0;
	Node0x24952a0 -> Node0x2495310;
	Node0x2495310 -> Node0x2495380;
	Node0x2495380 -> Node0x24953f0;
	Node0x24953f0 -> Node0x2495460;
	Node0x2495460 -> Node0x24954d0;
	Node0x24954d0 -> Node0x2495540;
	Node0x2495540 -> Node0x24955b0;
	Node0x24955b0 -> Node0x2495620;
	Node0x2495620 -> Node0x2495690;
	Node0x2495690 -> Node0x2495700;
	Node0x2495700 -> Node0x2495770;
	Node0x2495770 -> Node0x24957e0;
	Node0x24957e0 -> Node0x2495850;
	Node0x2495850 -> Node0x24958c0;
	Node0x24958c0 -> Node0x2495930;
	Node0x2495930 -> Node0x24959a0;
	Node0x24959a0 -> Node0x2495a10;
	Node0x2495a10 -> Node0x2495a80;
	Node0x2495a80 -> Node0x2495af0;
	Node0x2495af0 -> Node0x2495b60;
	Node0x2495b60 -> Node0x2495bd0;
	Node0x2495bd0 -> Node0x2495c40;
	Node0x2495c40 -> Node0x2495cb0;
	Node0x2495cb0 -> Node0x2495d20;
	Node0x2495d20 -> Node0x2495d90;
	Node0x2495d90 -> Node0x2495e00;
	Node0x2495e00 -> Node0x2495e70;
	Node0x2495e70 -> Node0x2495ee0;
	Node0x2495ee0 -> Node0x2495f50;
	Node0x2495f50 -> Node0x2495fc0;
	Node0x2495fc0 -> Node0x2496030;
	Node0x2496030 -> Node0x24960a0;
	Node0x24960a0 -> Node0x2496110;
	Node0x2496110 -> Node0x2496180;
	Node0x2496180 -> Node0x24961f0;
	Node0x24961f0 -> Node0x2496260;
	Node0x2496260 -> Node0x24328b8;
	Node0x24328b8 -> Node0x24962f0;
	Node0x24962f0 -> Node0x2496598;
	Node0x2496598 -> Node0x24966f8;
	Node0x24966f8 -> Node0x2496808;
	Node0x2496808 -> Node0x2496918;
	Node0x2496918 -> Node0x24969d8;
edge [color=red]
	Node0x2492d18 -> Node0x2492f38;
	Node0x2492f38 -> Node0x2493368;
	Node0x2492d98 -> Node0x2493448;
	Node0x2493448 -> Node0x2493548;
	Node0x2492e28 -> Node0x2493608;
	Node0x2493608 -> Node0x24936b8;
	Node0x2492e88 -> Node0x2493778;
	Node0x2493778 -> Node0x2493828;
	Node0x2492d18 -> Node0x248dba0;
	Node0x2492d98 -> Node0x248dba0;
	Node0x2492e28 -> Node0x248dba0;
	Node0x2492e88 -> Node0x248dba0;
	Node0x2492d18 -> Node0x2493a28;
	Node0x2492d98 -> Node0x2494998;
	Node0x2492e28 -> Node0x2495008;
	Node0x2492e88 -> Node0x2495068;
	Node0x2495008 -> Node0x24950e0;
	Node0x2494998 -> Node0x24950e0;
	Node0x2495068 -> Node0x2495150;
	Node0x2493a28 -> Node0x2495150;
	Node0x2495150 -> Node0x24951c0;
	Node0x24951c0 -> Node0x2495230;
	Node0x24950e0 -> Node0x24952a0;
	Node0x2495008 -> Node0x24952a0;
	Node0x2495230 -> Node0x2495310;
	Node0x24952a0 -> Node0x2495310;
	Node0x2495008 -> Node0x2495380;
	Node0x2494998 -> Node0x2495380;
	Node0x2495380 -> Node0x24953f0;
	Node0x24950e0 -> Node0x2495460;
	Node0x2495460 -> Node0x24954d0;
	Node0x24953f0 -> Node0x2495540;
	Node0x2495008 -> Node0x24955b0;
	Node0x2494998 -> Node0x2495620;
	Node0x2495620 -> Node0x2495690;
	Node0x2495008 -> Node0x2495690;
	Node0x2495690 -> Node0x2495700;
	Node0x24955b0 -> Node0x2495770;
	Node0x2494998 -> Node0x2495770;
	Node0x2495770 -> Node0x24957e0;
	Node0x2495068 -> Node0x2495850;
	Node0x2493a28 -> Node0x2495850;
	Node0x2493a28 -> Node0x24958c0;
	Node0x2495068 -> Node0x2495930;
	Node0x24958c0 -> Node0x2495930;
	Node0x2495068 -> Node0x24959a0;
	Node0x2493a28 -> Node0x24959a0;
	Node0x2495068 -> Node0x2495a10;
	Node0x2493a28 -> Node0x2495a80;
	Node0x2495a10 -> Node0x2495a80;
	Node0x24959a0 -> Node0x2495af0;
	Node0x2495af0 -> Node0x2495b60;
	Node0x2495930 -> Node0x2495bd0;
	Node0x2494998 -> Node0x2495bd0;
	Node0x2495bd0 -> Node0x2495c40;
	Node0x2493a28 -> Node0x2495cb0;
	Node0x2495cb0 -> Node0x2495d20;
	Node0x2494998 -> Node0x2495d20;
	Node0x2495d20 -> Node0x2495d90;
	Node0x24953f0 -> Node0x2495d90;
	Node0x2495d90 -> Node0x2495e00;
	Node0x2495700 -> Node0x2495e00;
	Node0x2495e00 -> Node0x2495e70;
	Node0x2495850 -> Node0x2495e70;
	Node0x2495e70 -> Node0x2495ee0;
	Node0x24959a0 -> Node0x2495ee0;
	Node0x2495ee0 -> Node0x2495f50;
	Node0x2495150 -> Node0x2495f50;
	Node0x2495f50 -> Node0x2495fc0;
	Node0x2495a80 -> Node0x2495fc0;
	Node0x2495fc0 -> Node0x2496030;
	Node0x24954d0 -> Node0x2496030;
	Node0x2496030 -> Node0x24960a0;
	Node0x2495540 -> Node0x24960a0;
	Node0x24960a0 -> Node0x2496110;
	Node0x24957e0 -> Node0x2496110;
	Node0x2496110 -> Node0x2496180;
	Node0x2495b60 -> Node0x2496180;
	Node0x2496180 -> Node0x24961f0;
	Node0x2495c40 -> Node0x24961f0;
	Node0x2495310 -> Node0x2496260;
	Node0x24961f0 -> Node0x2496260;
	Node0x2496260 -> Node0x24328b8;
	Node0x24328b8 -> Node0x24962f0;
	Node0x2493778 -> Node0x2496598;
	Node0x2493608 -> Node0x24966f8;
	Node0x2493448 -> Node0x2496808;
	Node0x2492f38 -> Node0x2496918;
}
