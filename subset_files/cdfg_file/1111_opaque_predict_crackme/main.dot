digraph "DFG for'main' function" {
	Node0x1f3eb78[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f3ebf8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f3ec88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f3ece8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1f3f168[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f41b78[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1f41c58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f41d18[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1f41dc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f42028[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1f420e8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f43058[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f436c8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f437c0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1f439c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f43b28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f43c38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f43cf8[shape=record, label="  ret i32 0"];
	Node0x1f3eb78 -> Node0x1f3ebf8;
	Node0x1f3ebf8 -> Node0x1f3ec88;
	Node0x1f3ec88 -> Node0x1f3ece8;
	Node0x1f3ece8 -> Node0x1f3f168;
	Node0x1f3f168 -> Node0x1f41b78;
	Node0x1f41b78 -> Node0x1f41c58;
	Node0x1f41c58 -> Node0x1f41d18;
	Node0x1f41d18 -> Node0x1f41dc8;
	Node0x1f41dc8 -> Node0x1f42028;
	Node0x1f42028 -> Node0x1f420e8;
	Node0x1f420e8 -> Node0x1f43058;
	Node0x1f43058 -> Node0x1f436c8;
	Node0x1f436c8 -> Node0x1f437c0;
	Node0x1f437c0 -> Node0x1f439c8;
	Node0x1f439c8 -> Node0x1f43b28;
	Node0x1f43b28 -> Node0x1f43c38;
	Node0x1f43c38 -> Node0x1f43cf8;
edge [color=red]
	Node0x1f3eb78 -> Node0x1f3ece8;
	Node0x1f3ece8 -> Node0x1f3f168;
	Node0x1f3ebf8 -> Node0x1f41b78;
	Node0x1f41b78 -> Node0x1f41c58;
	Node0x1f3ec88 -> Node0x1f41d18;
	Node0x1f41d18 -> Node0x1f41dc8;
	Node0x1f3eb78 -> Node0x1f42028;
	Node0x1f3ebf8 -> Node0x1f42028;
	Node0x1f3ec88 -> Node0x1f42028;
	Node0x1f3eb78 -> Node0x1f420e8;
	Node0x1f3ebf8 -> Node0x1f43058;
	Node0x1f3ec88 -> Node0x1f436c8;
	Node0x1f420e8 -> Node0x1f437c0;
	Node0x1f43058 -> Node0x1f437c0;
	Node0x1f436c8 -> Node0x1f437c0;
	Node0x1f41d18 -> Node0x1f439c8;
	Node0x1f41b78 -> Node0x1f43b28;
	Node0x1f3ece8 -> Node0x1f43c38;
}
