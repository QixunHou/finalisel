digraph "DFG for'main' function" {
	Node0x1571ae8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1571b68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1571bf8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1572058[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1572138[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1572258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1572490[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1572548[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x15734b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1573b40[shape=record, label="  %8 = and i32 %7, %6"];
	Node0x1573bb0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x1573c20[shape=record, label="  %10 = xor i32 %9, -2"];
	Node0x1573c90[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x1573d00[shape=record, label="  %12 = sub i32 %10, %11"];
	Node0x1573d70[shape=record, label="  %13 = xor i32 %7, -1"];
	Node0x1573de0[shape=record, label="  %14 = sub i32 %7, %6"];
	Node0x1573e50[shape=record, label="  %15 = shl i32 %7, 1"];
	Node0x1573ec0[shape=record, label="  %16 = xor i32 %7, %6"];
	Node0x1573f30[shape=record, label="  %17 = sub i32 %14, %15"];
	Node0x1573fa0[shape=record, label="  %18 = add i32 %17, %16"];
	Node0x1574010[shape=record, label="  %19 = shl i32 %11, 1"];
	Node0x1574080[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x15740f0[shape=record, label="  %21 = xor i32 %6, -1"];
	Node0x1574160[shape=record, label="  %22 = and i32 %7, %21"];
	Node0x15741d0[shape=record, label="  %23 = and i32 %6, %13"];
	Node0x1574240[shape=record, label="  %24 = add i32 %18, %22"];
	Node0x15742b0[shape=record, label="  %25 = add i32 %24, %23"];
	Node0x1574320[shape=record, label="  %26 = add i32 %25, %8"];
	Node0x1574390[shape=record, label="  %27 = add i32 %26, %20"];
	Node0x1574400[shape=record, label="  %28 = icmp eq i32 %12, %27"];
	Node0x15129d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1574490[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x15746e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1574848[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1574908[shape=record, label="  ret i32 0"];
	Node0x1571ae8 -> Node0x1571b68;
	Node0x1571b68 -> Node0x1571bf8;
	Node0x1571bf8 -> Node0x1572058;
	Node0x1572058 -> Node0x1572138;
	Node0x1572138 -> Node0x1572258;
	Node0x1572258 -> Node0x1572490;
	Node0x1572490 -> Node0x1572548;
	Node0x1572548 -> Node0x15734b8;
	Node0x15734b8 -> Node0x1573b40;
	Node0x1573b40 -> Node0x1573bb0;
	Node0x1573bb0 -> Node0x1573c20;
	Node0x1573c20 -> Node0x1573c90;
	Node0x1573c90 -> Node0x1573d00;
	Node0x1573d00 -> Node0x1573d70;
	Node0x1573d70 -> Node0x1573de0;
	Node0x1573de0 -> Node0x1573e50;
	Node0x1573e50 -> Node0x1573ec0;
	Node0x1573ec0 -> Node0x1573f30;
	Node0x1573f30 -> Node0x1573fa0;
	Node0x1573fa0 -> Node0x1574010;
	Node0x1574010 -> Node0x1574080;
	Node0x1574080 -> Node0x15740f0;
	Node0x15740f0 -> Node0x1574160;
	Node0x1574160 -> Node0x15741d0;
	Node0x15741d0 -> Node0x1574240;
	Node0x1574240 -> Node0x15742b0;
	Node0x15742b0 -> Node0x1574320;
	Node0x1574320 -> Node0x1574390;
	Node0x1574390 -> Node0x1574400;
	Node0x1574400 -> Node0x15129d8;
	Node0x15129d8 -> Node0x1574490;
	Node0x1574490 -> Node0x15746e8;
	Node0x15746e8 -> Node0x1574848;
	Node0x1574848 -> Node0x1574908;
edge [color=red]
	Node0x1571ae8 -> Node0x1571bf8;
	Node0x1571bf8 -> Node0x1572058;
	Node0x1571b68 -> Node0x1572138;
	Node0x1572138 -> Node0x1572258;
	Node0x1571ae8 -> Node0x1572490;
	Node0x1571b68 -> Node0x1572490;
	Node0x1571ae8 -> Node0x1572548;
	Node0x1571b68 -> Node0x15734b8;
	Node0x15734b8 -> Node0x1573b40;
	Node0x1572548 -> Node0x1573b40;
	Node0x1573b40 -> Node0x1573bb0;
	Node0x1573bb0 -> Node0x1573c20;
	Node0x15734b8 -> Node0x1573c90;
	Node0x1572548 -> Node0x1573c90;
	Node0x1573c20 -> Node0x1573d00;
	Node0x1573c90 -> Node0x1573d00;
	Node0x15734b8 -> Node0x1573d70;
	Node0x15734b8 -> Node0x1573de0;
	Node0x1572548 -> Node0x1573de0;
	Node0x15734b8 -> Node0x1573e50;
	Node0x15734b8 -> Node0x1573ec0;
	Node0x1572548 -> Node0x1573ec0;
	Node0x1573de0 -> Node0x1573f30;
	Node0x1573e50 -> Node0x1573f30;
	Node0x1573f30 -> Node0x1573fa0;
	Node0x1573ec0 -> Node0x1573fa0;
	Node0x1573c90 -> Node0x1574010;
	Node0x1574010 -> Node0x1574080;
	Node0x1572548 -> Node0x15740f0;
	Node0x15734b8 -> Node0x1574160;
	Node0x15740f0 -> Node0x1574160;
	Node0x1572548 -> Node0x15741d0;
	Node0x1573d70 -> Node0x15741d0;
	Node0x1573fa0 -> Node0x1574240;
	Node0x1574160 -> Node0x1574240;
	Node0x1574240 -> Node0x15742b0;
	Node0x15741d0 -> Node0x15742b0;
	Node0x15742b0 -> Node0x1574320;
	Node0x1573b40 -> Node0x1574320;
	Node0x1574320 -> Node0x1574390;
	Node0x1574080 -> Node0x1574390;
	Node0x1573d00 -> Node0x1574400;
	Node0x1574390 -> Node0x1574400;
	Node0x1574400 -> Node0x15129d8;
	Node0x15129d8 -> Node0x1574490;
	Node0x1572138 -> Node0x15746e8;
	Node0x1571bf8 -> Node0x1574848;
}
