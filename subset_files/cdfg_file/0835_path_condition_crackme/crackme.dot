digraph "DFG for'crackme' function" {
	Node0x2244c20[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x2244c90[shape=record, label="  %4 = xor i32 %3, %0"];
	Node0x2244d50[shape=record, label="  %5 = and i32 %1, %0"];
	Node0x2244dc0[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x2244e30[shape=record, label="  %7 = or i32 %1, %0"];
	Node0x2244ea0[shape=record, label="  %8 = and i32 %3, %0"];
	Node0x2244f10[shape=record, label="  %9 = shl i32 %3, 1"];
	Node0x2244fb0[shape=record, label="  %10 = shl i32 %0, 2"];
	Node0x2245050[shape=record, label="  %11 = xor i32 %10, -4"];
	Node0x22450f0[shape=record, label="  %12 = shl i32 %7, 3"];
	Node0x2245190[shape=record, label="  %13 = xor i32 %12, -8"];
	Node0x2245230[shape=record, label="  %14 = xor i32 %0, 1073741823"];
	Node0x22452a0[shape=record, label="  %15 = and i32 %14, %1"];
	Node0x2245310[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0x2245380[shape=record, label="  %17 = shl i32 %8, 1"];
	Node0x22453f0[shape=record, label="  %18 = mul i32 %5, 3"];
	Node0x2245460[shape=record, label="  %19 = sub i32 2, %0"];
	Node0x22454d0[shape=record, label="  %20 = add i32 %19, %6"];
	Node0x2245540[shape=record, label="  %21 = add i32 %20, %7"];
	Node0x22455b0[shape=record, label="  %22 = add i32 %21, %8"];
	Node0x2245620[shape=record, label="  %23 = sub i32 %22, %9"];
	Node0x2245690[shape=record, label="  %24 = sub i32 %23, %11"];
	Node0x2245700[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x2245770[shape=record, label="  %26 = add i32 %25, %17"];
	Node0x22457e0[shape=record, label="  %27 = add i32 %26, %18"];
	Node0x2245850[shape=record, label="  %28 = add i32 %27, %13"];
	Node0x22458c0[shape=record, label="  %29 = icmp eq i32 %28, %4"];
	Node0x21e5268[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2245d60[shape=record, label="  %31 = tail call i32 @puts(i8* nonnull dereferenceable(1) %30)"];
	Node0x2245db0[shape=record, label="  ret void"];
	Node0x2244c20 -> Node0x2244c90;
	Node0x2244c90 -> Node0x2244d50;
	Node0x2244d50 -> Node0x2244dc0;
	Node0x2244dc0 -> Node0x2244e30;
	Node0x2244e30 -> Node0x2244ea0;
	Node0x2244ea0 -> Node0x2244f10;
	Node0x2244f10 -> Node0x2244fb0;
	Node0x2244fb0 -> Node0x2245050;
	Node0x2245050 -> Node0x22450f0;
	Node0x22450f0 -> Node0x2245190;
	Node0x2245190 -> Node0x2245230;
	Node0x2245230 -> Node0x22452a0;
	Node0x22452a0 -> Node0x2245310;
	Node0x2245310 -> Node0x2245380;
	Node0x2245380 -> Node0x22453f0;
	Node0x22453f0 -> Node0x2245460;
	Node0x2245460 -> Node0x22454d0;
	Node0x22454d0 -> Node0x2245540;
	Node0x2245540 -> Node0x22455b0;
	Node0x22455b0 -> Node0x2245620;
	Node0x2245620 -> Node0x2245690;
	Node0x2245690 -> Node0x2245700;
	Node0x2245700 -> Node0x2245770;
	Node0x2245770 -> Node0x22457e0;
	Node0x22457e0 -> Node0x2245850;
	Node0x2245850 -> Node0x22458c0;
	Node0x22458c0 -> Node0x21e5268;
	Node0x21e5268 -> Node0x2245d60;
	Node0x2245d60 -> Node0x2245db0;
edge [color=red]
	Node0x2244c20 -> Node0x2244c90;
	Node0x2244d50 -> Node0x2244dc0;
	Node0x2244c20 -> Node0x2244ea0;
	Node0x2244c20 -> Node0x2244f10;
	Node0x2244fb0 -> Node0x2245050;
	Node0x2244e30 -> Node0x22450f0;
	Node0x22450f0 -> Node0x2245190;
	Node0x2245230 -> Node0x22452a0;
	Node0x22452a0 -> Node0x2245310;
	Node0x2244ea0 -> Node0x2245380;
	Node0x2244d50 -> Node0x22453f0;
	Node0x2245460 -> Node0x22454d0;
	Node0x2244dc0 -> Node0x22454d0;
	Node0x22454d0 -> Node0x2245540;
	Node0x2244e30 -> Node0x2245540;
	Node0x2245540 -> Node0x22455b0;
	Node0x2244ea0 -> Node0x22455b0;
	Node0x22455b0 -> Node0x2245620;
	Node0x2244f10 -> Node0x2245620;
	Node0x2245620 -> Node0x2245690;
	Node0x2245050 -> Node0x2245690;
	Node0x2245690 -> Node0x2245700;
	Node0x2245310 -> Node0x2245700;
	Node0x2245700 -> Node0x2245770;
	Node0x2245380 -> Node0x2245770;
	Node0x2245770 -> Node0x22457e0;
	Node0x22453f0 -> Node0x22457e0;
	Node0x22457e0 -> Node0x2245850;
	Node0x2245190 -> Node0x2245850;
	Node0x2245850 -> Node0x22458c0;
	Node0x2244c90 -> Node0x22458c0;
	Node0x22458c0 -> Node0x21e5268;
	Node0x21e5268 -> Node0x2245d60;
}
