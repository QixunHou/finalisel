; ModuleID = '../.././c_source_file/0847_path_condition_crackme.c'
source_filename = "../.././c_source_file/0847_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %1, %0
  %8 = xor i32 %2, %1
  %9 = and i32 %8, %7
  %10 = xor i32 %1, %0
  %11 = xor i32 %10, -1
  %12 = or i32 %11, %2
  %13 = sub i32 %12, %9
  %14 = and i32 %5, %3
  %15 = sub i32 %13, %14
  %16 = and i32 %2, %1
  %17 = and i32 %16, %0
  %18 = xor i32 %8, %0
  %19 = xor i32 %18, -1
  %20 = or i32 %17, %19
  %21 = and i32 %2, %0
  %22 = or i32 %2, %1
  %23 = xor i32 %21, %22
  %24 = xor i32 %2, -1
  %25 = and i32 %24, %0
  %26 = xor i32 %25, -1
  %27 = add i32 %25, 1
  %28 = or i32 %25, %1
  %29 = shl i32 %28, 1
  %30 = xor i32 %17, %18
  %31 = xor i32 %2, %0
  %32 = xor i32 %31, -1
  %33 = and i32 %32, %11
  %34 = xor i32 %1, -1
  %35 = or i32 %34, %0
  %36 = and i32 %35, %2
  %37 = or i32 %24, %0
  %38 = and i32 %37, %34
  %39 = or i32 %2, %0
  %40 = xor i32 %39, %1
  %41 = xor i32 %0, -1
  %42 = and i32 %24, %1
  %43 = xor i32 %42, -1
  %44 = and i32 %43, %41
  %45 = and i32 %1, %0
  %46 = or i32 %8, %45
  %47 = or i32 %10, %24
  %48 = and i32 %16, %41
  %49 = and i32 %22, %0
  %50 = xor i32 %49, -1
  %51 = xor i32 %48, %50
  %52 = and i32 %26, %1
  %53 = or i32 %24, %1
  %54 = xor i32 %53, -1
  %55 = or i32 %25, %54
  %56 = and i32 %31, %1
  %57 = and i32 %34, %2
  %58 = and i32 %57, %0
  %59 = or i32 %34, %2
  %60 = xor i32 %0, 2147483647
  %61 = xor i32 %60, %59
  %62 = xor i32 %61, %58
  %63 = and i32 %34, %0
  %64 = or i32 %63, %2
  %65 = xor i32 %54, %0
  %66 = xor i32 %37, -1
  %67 = xor i32 %66, %1
  %68 = and i32 %53, %0
  %69 = xor i32 %22, %45
  %70 = xor i32 %8, -1
  %71 = and i32 %7, %70
  %72 = and i32 %57, %41
  %73 = and i32 %59, %0
  %74 = xor i32 %73, 2147483647
  %75 = xor i32 %74, %72
  %76 = shl i32 %75, 1
  %77 = or i32 %63, %24
  %78 = xor i32 %45, %2
  %79 = xor i32 %63, -1
  %80 = and i32 %31, %79
  %81 = or i32 %8, %41
  %82 = xor i32 %72, %81
  %83 = and i32 %22, %41
  %84 = or i32 %17, %83
  %85 = xor i32 %26, %1
  %86 = shl i32 %83, 1
  %87 = xor i32 %21, -1
  %88 = and i32 %87, %1
  %89 = or i32 %43, %41
  %90 = xor i32 %42, %0
  %91 = and i32 %39, %11
  %92 = or i32 %66, %1
  %93 = shl i32 %92, 1
  %94 = or i32 %31, %45
  %95 = shl i32 %94, 1
  %96 = xor i32 %35, -1
  %97 = or i32 %24, %96
  %98 = or i32 %16, %63
  %99 = shl i32 %98, 1
  %100 = xor i32 %45, -1
  %101 = and i32 %70, %100
  %102 = or i32 %8, %0
  %103 = xor i32 %7, -1
  %104 = or i32 %24, %103
  %105 = or i32 %42, %63
  %106 = and i32 %8, %35
  %107 = xor i32 %16, -1
  %108 = add i32 %16, 1
  %109 = or i32 %66, %11
  %110 = and i32 %53, %41
  %111 = and i32 %79, %2
  %112 = xor i32 %22, -1
  %113 = or i32 %112, %41
  %114 = and i32 %24, %79
  %115 = shl i32 %114, 1
  %116 = or i32 %25, %34
  %117 = or i32 %31, %96
  %118 = shl i32 %117, 1
  %119 = xor i32 %21, %43
  %120 = xor i32 %39, -1
  %121 = xor i32 %120, %1
  %122 = shl i32 %121, 1
  %123 = and i32 %32, %34
  %124 = or i32 %21, %103
  %125 = or i32 %42, %0
  %126 = or i32 %53, %41
  %127 = shl i32 %126, 2
  %128 = or i32 %45, %24
  %129 = shl i32 %128, 1
  %130 = and i32 %87, %11
  %131 = xor i32 %16, %0
  %132 = shl i32 %131, 1
  %133 = shl i32 %112, 2
  %134 = or i32 %42, %41
  %135 = and i32 %10, %26
  %136 = and i32 %31, %100
  %137 = and i32 %8, %0
  %138 = and i32 %24, %100
  %139 = or i32 %107, %41
  %140 = and i32 %8, %79
  %141 = or i32 %45, %120
  %142 = or i32 %22, %0
  %143 = or i32 %45, %66
  %144 = and i32 %59, %41
  %145 = or i32 %58, %144
  %146 = or i32 %54, %41
  %147 = and i32 %7, %32
  %148 = shl i32 %22, 1
  %149 = xor i32 %100, %2
  %150 = and i32 %31, %35
  %151 = or i32 %70, %103
  %152 = or i32 %10, %32
  %153 = or i32 %32, %1
  %154 = and i32 %31, %11
  %155 = or i32 %70, %96
  %156 = or i32 %45, %32
  %157 = shl i32 %54, 1
  %158 = xor i32 %53, %0
  %159 = and i32 %100, %2
  %160 = and i32 %8, %100
  %161 = and i32 %24, %11
  %162 = and i32 %35, %24
  %163 = or i32 %45, %2
  %164 = and i32 %35, %32
  %165 = and i32 %32, %1
  %166 = xor i32 %58, %102
  %167 = or i32 %103, %2
  %168 = and i32 %31, %34
  %169 = xor i32 %87, %1
  %170 = and i32 %37, %10
  %171 = and i32 %7, %24
  %172 = xor i32 %37, %1
  %173 = and i32 %112, %41
  %174 = and i32 %42, %41
  %175 = and i32 %112, %0
  %176 = and i32 %42, %0
  %177 = and i32 %54, %41
  %178 = and i32 %54, %0
  %179 = xor i32 %5, -1
  %180 = or i32 %179, %3
  %181 = and i32 %5, %4
  %182 = or i32 %4, %3
  %183 = xor i32 %182, -1
  %184 = or i32 %181, %183
  %185 = and i32 %179, %4
  %186 = xor i32 %185, -1
  %187 = xor i32 %186, %3
  %188 = or i32 %5, %3
  %189 = xor i32 %188, -1
  %190 = or i32 %181, %189
  %191 = xor i32 %4, -1
  %192 = xor i32 %14, -1
  %193 = and i32 %192, %191
  %194 = shl i32 %193, 1
  %195 = xor i32 %3, -1
  %196 = and i32 %195, %5
  %197 = and i32 %196, %4
  %198 = or i32 %195, %5
  %199 = and i32 %198, %191
  %200 = or i32 %197, %199
  %201 = or i32 %179, %4
  %202 = xor i32 %201, %3
  %203 = and i32 %14, %191
  %204 = xor i32 %5, %3
  %205 = and i32 %204, %4
  %206 = or i32 %203, %205
  %207 = xor i32 %4, %3
  %208 = xor i32 %207, -1
  %209 = or i32 %185, %208
  %210 = xor i32 %204, -1
  %211 = and i32 %210, %4
  %212 = xor i32 %5, %4
  %213 = and i32 %212, %195
  %214 = shl i32 %213, 1
  %215 = xor i32 %201, -1
  %216 = or i32 %207, %215
  %217 = xor i32 %181, -1
  %218 = and i32 %217, %3
  %219 = and i32 %4, %3
  %220 = xor i32 %219, -1
  %221 = and i32 %220, %5
  %222 = or i32 %185, %14
  %223 = or i32 %204, %183
  %224 = shl i32 %223, 1
  %225 = and i32 %180, %4
  %226 = xor i32 %180, -1
  %227 = or i32 %5, %4
  %228 = xor i32 %227, -1
  %229 = xor i32 %228, %3
  %230 = shl i32 %229, 1
  %231 = and i32 %227, %207
  %232 = or i32 %185, %207
  %233 = and i32 %179, %3
  %234 = or i32 %210, %183
  %235 = shl i32 %234, 1
  %236 = xor i32 %203, -1
  %237 = xor i32 %205, %236
  %238 = and i32 %195, %4
  %239 = xor i32 %238, %192
  %240 = shl i32 %239, 1
  %241 = or i32 %215, %208
  %242 = or i32 %181, %233
  %243 = and i32 %182, %179
  %244 = or i32 %210, %4
  %245 = xor i32 %233, -1
  %246 = and i32 %245, %4
  %247 = xor i32 %204, %4
  %248 = or i32 %197, %247
  %249 = and i32 %201, %208
  %250 = or i32 %181, %207
  %251 = or i32 %195, %4
  %252 = xor i32 %251, -1
  %253 = xor i32 %238, -1
  %254 = add i32 %238, 1
  %255 = or i32 %219, %189
  %256 = or i32 %207, %5
  %257 = xor i32 %227, %219
  %258 = shl i32 %183, 1
  %259 = and i32 %251, %5
  %260 = or i32 %212, %252
  %261 = and i32 %188, %4
  %262 = xor i32 %261, %236
  %263 = or i32 %203, %261
  %264 = or i32 %245, %4
  %265 = and i32 %253, %5
  %266 = xor i32 %212, -1
  %267 = or i32 %266, %183
  %268 = or i32 %180, %4
  %269 = or i32 %212, %219
  %270 = and i32 %207, %217
  %271 = or i32 %219, %179
  %272 = and i32 %14, %4
  %273 = xor i32 %188, %4
  %274 = xor i32 %272, -1
  %275 = xor i32 %273, %274
  %276 = or i32 %233, %238
  %277 = and i32 %266, %253
  %278 = shl i32 %277, 1
  %279 = or i32 %188, %191
  %280 = or i32 %212, %183
  %281 = and i32 %266, %195
  %282 = or i32 %219, %228
  %283 = and i32 %204, %253
  %284 = or i32 %181, %3
  %285 = and i32 %188, %191
  %286 = xor i32 %285, %274
  %287 = or i32 %208, %5
  %288 = and i32 %201, %207
  %289 = and i32 %204, %220
  %290 = and i32 %212, %208
  %291 = xor i32 %180, %4
  %292 = add i32 %5, 1
  %293 = xor i32 %251, %5
  %294 = and i32 %210, %191
  %295 = or i32 %207, %179
  %296 = or i32 %14, %191
  %297 = xor i32 %198, %4
  %298 = xor i32 %197, 2147483647
  %299 = xor i32 %298, %297
  %300 = xor i32 %180, %219
  %301 = and i32 %182, %5
  %302 = or i32 %245, %191
  %303 = and i32 %179, %220
  %304 = or i32 %185, %226
  %305 = xor i32 %227, %3
  %306 = and i32 %204, %191
  %307 = or i32 %272, %306
  %308 = shl i32 %307, 1
  %309 = or i32 %210, %252
  %310 = or i32 %238, %179
  %311 = and i32 %212, %207
  %312 = or i32 %215, %3
  %313 = and i32 %207, %179
  %314 = and i32 %266, %208
  %315 = and i32 %251, %179
  %316 = and i32 %212, %253
  %317 = and i32 %207, %186
  %318 = or i32 %185, %195
  %319 = xor i32 %219, %5
  %320 = and i32 %179, %208
  %321 = or i32 %238, %210
  %322 = or i32 %207, %228
  %323 = or i32 %179, %208
  %324 = or i32 %179, %183
  %325 = or i32 %188, %4
  %326 = xor i32 %220, %5
  %327 = or i32 %207, %266
  %328 = and i32 %212, %182
  %329 = or i32 %272, %285
  %330 = and i32 %207, %266
  %331 = or i32 %212, %208
  %332 = add i32 %3, 1
  %333 = and i32 %204, %251
  %334 = xor i32 %181, %182
  %335 = shl i32 %334, 1
  %336 = and i32 %217, %208
  %337 = shl i32 %336, 1
  %338 = or i32 %192, %4
  %339 = xor i32 %233, %4
  %340 = or i32 %181, %252
  %341 = shl i32 %340, 1
  %342 = xor i32 %181, %245
  %343 = and i32 %196, %191
  %344 = and i32 %198, %4
  %345 = or i32 %343, %344
  %346 = and i32 %245, %191
  %347 = or i32 %197, %297
  %348 = or i32 %189, %191
  %349 = xor i32 %215, %3
  %350 = and i32 %210, %220
  %351 = or i32 %228, %3
  %352 = or i32 %204, %191
  %353 = xor i32 %352, -1
  %354 = or i32 %343, %353
  %355 = or i32 %204, %252
  %356 = or i32 %204, %4
  %357 = and i32 %227, %208
  %358 = and i32 %266, %3
  %359 = add i32 %14, 1
  %360 = or i32 %181, %208
  %361 = xor i32 %192, %4
  %362 = or i32 %219, %266
  %363 = xor i32 %272, %247
  %364 = shl i32 %363, 1
  %365 = shl i32 %273, 1
  %366 = or i32 %210, %191
  %367 = and i32 %212, %3
  %368 = and i32 %207, %5
  %369 = and i32 %201, %195
  %370 = add i32 %204, 1
  %371 = and i32 %186, %3
  %372 = xor i32 %247, -1
  %373 = xor i32 %197, %372
  %374 = xor i32 %253, %5
  %375 = or i32 %219, %226
  %376 = or i32 %266, %208
  %377 = xor i32 %185, %180
  %378 = or i32 %266, %195
  %379 = or i32 %185, %3
  %380 = or i32 %226, %4
  %381 = xor i32 %182, %5
  %382 = shl i32 %381, 1
  %383 = and i32 %251, %266
  %384 = and i32 %182, %266
  %385 = or i32 %179, %252
  %386 = shl i32 %385, 1
  %387 = xor i32 %201, %219
  %388 = xor i32 %183, %5
  %389 = or i32 %238, %266
  %390 = or i32 %212, %238
  %391 = xor i32 %298, %199
  %392 = or i32 %272, %273
  %393 = or i32 %189, %4
  %394 = xor i32 %306, %274
  %395 = and i32 %251, %210
  %396 = or i32 %14, %4
  %397 = shl i32 %396, 1
  %398 = or i32 %192, %191
  %399 = shl i32 %398, 1
  %400 = or i32 %219, %5
  %401 = or i32 %266, %252
  %402 = and i32 %208, %5
  %403 = or i32 %228, %195
  %404 = shl i32 %403, 1
  %405 = xor i32 %210, %4
  %406 = or i32 %183, %5
  %407 = shl i32 %406, 1
  %408 = or i32 %226, %191
  %409 = and i32 %186, %195
  %410 = or i32 %204, %238
  %411 = or i32 %228, %208
  %412 = xor i32 %188, %219
  %413 = and i32 %186, %208
  %414 = and i32 %192, %4
  %415 = add i32 %181, 1
  %416 = or i32 %215, %195
  %417 = and i32 %227, %3
  %418 = and i32 %201, %3
  %419 = or i32 %180, %191
  %420 = xor i32 %185, %3
  %421 = shl i32 %420, 1
  %422 = or i32 %14, %238
  %423 = or i32 %219, %215
  %424 = xor i32 %343, %352
  %425 = or i32 %212, %3
  %426 = xor i32 %226, %4
  %427 = add i32 %188, 1
  %428 = xor i32 %181, %251
  %429 = xor i32 %238, %245
  %430 = xor i32 %189, %4
  %431 = or i32 %238, %5
  %432 = or i32 %204, %219
  %433 = and i32 %182, %210
  %434 = xor i32 %181, %3
  %435 = or i32 %233, %191
  %436 = xor i32 %344, -1
  %437 = xor i32 %343, %436
  %438 = xor i32 %181, %188
  %439 = xor i32 %356, 2147483647
  %440 = or i32 %439, %197
  %441 = shl i32 %440, 1
  %442 = or i32 %212, %195
  %443 = and i32 %217, %195
  %444 = or i32 %252, %5
  %445 = or i32 %219, %210
  %446 = or i32 %272, %372
  %447 = xor i32 %185, %192
  %448 = and i32 %212, %251
  %449 = and i32 %227, %195
  %450 = and i32 %179, %253
  %451 = and i32 %189, %191
  %452 = shl i32 %451, 3
  %453 = and i32 %233, %191
  %454 = and i32 %189, %4
  %455 = and i32 %233, %4
  %456 = mul i32 %455, -15
  %457 = and i32 %226, %191
  %458 = shl i32 %203, 1
  %459 = and i32 %226, %4
  %460 = shl i32 %459, 3
  %461 = add i32 %24, %41
  %462 = add i32 %461, %159
  %463 = add i32 %462, %149
  %464 = add i32 %463, %111
  %465 = add i32 %464, %174
  %466 = add i32 %465, %173
  %467 = add i32 %466, %158
  %468 = add i32 %467, %152
  %469 = add i32 %468, %141
  %470 = add i32 %469, %125
  %471 = add i32 %470, %105
  %472 = add i32 %471, %80
  %473 = add i32 %472, %68
  %474 = add i32 %473, %166
  %475 = add i32 %474, %315
  %476 = add i32 %475, %226
  %477 = add i32 %476, %221
  %478 = add i32 %477, %62
  %479 = add i32 %478, %453
  %480 = add i32 %479, %448
  %481 = add i32 %480, %435
  %482 = add i32 %481, %422
  %483 = add i32 %482, %409
  %484 = add i32 %483, %328
  %485 = add i32 %484, %317
  %486 = add i32 %485, %311
  %487 = add i32 %486, %294
  %488 = add i32 %487, %289
  %489 = add i32 %488, %282
  %490 = add i32 %489, %281
  %491 = add i32 %490, %270
  %492 = add i32 %491, %269
  %493 = add i32 %492, %260
  %494 = add i32 %493, %225
  %495 = add i32 %494, %184
  %496 = add i32 %495, %299
  %497 = add i32 %496, %391
  %498 = shl i32 %497, 1
  %499 = sub i32 %191, %182
  %500 = add i32 %499, %323
  %501 = sub i32 %500, %366
  %502 = add i32 %501, %425
  %503 = sub i32 %502, %302
  %504 = add i32 %503, %280
  %505 = mul i32 %504, 5
  %506 = add i32 %457, %178
  %507 = sub i32 %272, %506
  %508 = mul i32 %507, 9
  %509 = add i32 %383, %48
  %510 = add i32 %509, %410
  %511 = shl i32 %510, 2
  %512 = sub i32 %176, %17
  %513 = add i32 %512, %175
  %514 = mul i32 %513, 6
  %515 = add i32 %88, %322
  %516 = sub i32 %515, %454
  %517 = add i32 %516, %288
  %518 = sub i32 %517, %216
  %519 = sub i32 %518, %211
  %520 = mul i32 %519, 3
  %521 = sub i32 -3, %1
  %522 = add i32 %521, %10
  %523 = add i32 %522, %2
  %524 = sub i32 %523, %45
  %525 = add i32 %524, %27
  %526 = add i32 %525, %36
  %527 = add i32 %526, %47
  %528 = add i32 %527, %64
  %529 = add i32 %528, %77
  %530 = sub i32 %529, %78
  %531 = sub i32 %530, %97
  %532 = sub i32 %531, %104
  %533 = add i32 %532, %108
  %534 = sub i32 %533, %138
  %535 = add i32 %534, %25
  %536 = add i32 %535, %21
  %537 = add i32 %536, %66
  %538 = sub i32 %537, %8
  %539 = sub i32 %538, %42
  %540 = add i32 %539, %161
  %541 = sub i32 %540, %162
  %542 = add i32 %541, %163
  %543 = add i32 %542, %167
  %544 = sub i32 %543, %171
  %545 = add i32 %544, %332
  %546 = add i32 %545, %23
  %547 = add i32 %546, %33
  %548 = sub i32 %547, %38
  %549 = sub i32 %548, %40
  %550 = add i32 %549, %44
  %551 = add i32 %550, %46
  %552 = sub i32 %551, %52
  %553 = sub i32 %552, %55
  %554 = sub i32 %553, %56
  %555 = add i32 %554, %65
  %556 = sub i32 %555, %67
  %557 = add i32 %556, %69
  %558 = sub i32 %557, %71
  %559 = sub i32 %558, %85
  %560 = add i32 %559, %88
  %561 = add i32 %560, %89
  %562 = sub i32 %561, %90
  %563 = add i32 %562, %91
  %564 = sub i32 %563, %101
  %565 = add i32 %564, %102
  %566 = add i32 %565, %106
  %567 = sub i32 %566, %109
  %568 = add i32 %567, %110
  %569 = sub i32 %568, %113
  %570 = sub i32 %569, %115
  %571 = add i32 %570, %116
  %572 = sub i32 %571, %119
  %573 = add i32 %572, %123
  %574 = sub i32 %573, %124
  %575 = sub i32 %574, %129
  %576 = add i32 %575, %130
  %577 = sub i32 %576, %133
  %578 = sub i32 %577, %134
  %579 = sub i32 %578, %135
  %580 = add i32 %579, %136
  %581 = sub i32 %580, %137
  %582 = sub i32 %581, %139
  %583 = add i32 %582, %140
  %584 = add i32 %583, %142
  %585 = add i32 %584, %143
  %586 = add i32 %585, %146
  %587 = add i32 %586, %147
  %588 = sub i32 %587, %148
  %589 = add i32 %588, %150
  %590 = add i32 %589, %151
  %591 = sub i32 %590, %153
  %592 = add i32 %591, %154
  %593 = add i32 %592, %155
  %594 = sub i32 %593, %156
  %595 = sub i32 %594, %157
  %596 = sub i32 %595, %160
  %597 = add i32 %596, %49
  %598 = add i32 %597, %164
  %599 = add i32 %598, %165
  %600 = sub i32 %599, %168
  %601 = add i32 %600, %169
  %602 = sub i32 %601, %170
  %603 = add i32 %602, %172
  %604 = sub i32 %603, %177
  %605 = add i32 %604, %20
  %606 = sub i32 %605, %29
  %607 = sub i32 %606, %30
  %608 = add i32 %607, %51
  %609 = add i32 %608, %82
  %610 = sub i32 %609, %84
  %611 = sub i32 %610, %86
  %612 = sub i32 %611, %93
  %613 = sub i32 %612, %95
  %614 = sub i32 %613, %99
  %615 = sub i32 %614, %118
  %616 = sub i32 %615, %122
  %617 = sub i32 %616, %127
  %618 = sub i32 %617, %132
  %619 = add i32 %618, %145
  %620 = add i32 %619, %252
  %621 = add i32 %620, %254
  %622 = sub i32 %621, %219
  %623 = add i32 %622, %208
  %624 = add i32 %623, %292
  %625 = add i32 %624, %238
  %626 = sub i32 %625, %251
  %627 = sub i32 %626, %180
  %628 = sub i32 %627, %204
  %629 = sub i32 %628, %233
  %630 = add i32 %629, %188
  %631 = add i32 %630, %243
  %632 = add i32 %631, %256
  %633 = sub i32 %632, %258
  %634 = add i32 %633, %259
  %635 = add i32 %634, %265
  %636 = sub i32 %635, %212
  %637 = sub i32 %636, %271
  %638 = add i32 %637, %287
  %639 = sub i32 %638, %293
  %640 = sub i32 %639, %295
  %641 = sub i32 %640, %301
  %642 = sub i32 %641, %303
  %643 = add i32 %642, %310
  %644 = sub i32 %643, %313
  %645 = sub i32 %644, %181
  %646 = add i32 %645, %319
  %647 = sub i32 %646, %320
  %648 = add i32 %647, %324
  %649 = add i32 %648, %326
  %650 = add i32 %649, %228
  %651 = add i32 %650, %359
  %652 = sub i32 %651, %368
  %653 = add i32 %652, %370
  %654 = add i32 %653, %374
  %655 = sub i32 %654, %388
  %656 = sub i32 %655, %400
  %657 = add i32 %656, %402
  %658 = sub i32 %657, %227
  %659 = add i32 %658, %415
  %660 = add i32 %659, %266
  %661 = add i32 %660, %427
  %662 = sub i32 %661, %431
  %663 = sub i32 %662, %444
  %664 = add i32 %663, %186
  %665 = sub i32 %664, %450
  %666 = sub i32 %665, %76
  %667 = sub i32 %666, %187
  %668 = add i32 %667, %190
  %669 = add i32 %668, %202
  %670 = add i32 %669, %209
  %671 = add i32 %670, %218
  %672 = add i32 %671, %222
  %673 = add i32 %672, %231
  %674 = sub i32 %673, %232
  %675 = sub i32 %674, %241
  %676 = add i32 %675, %242
  %677 = sub i32 %676, %244
  %678 = sub i32 %677, %246
  %679 = sub i32 %678, %249
  %680 = add i32 %679, %250
  %681 = add i32 %680, %255
  %682 = sub i32 %681, %205
  %683 = sub i32 %682, %257
  %684 = sub i32 %683, %264
  %685 = sub i32 %684, %267
  %686 = add i32 %685, %268
  %687 = add i32 %686, %276
  %688 = sub i32 %687, %279
  %689 = add i32 %688, %283
  %690 = sub i32 %689, %284
  %691 = sub i32 %690, %290
  %692 = add i32 %691, %291
  %693 = add i32 %692, %296
  %694 = add i32 %693, %300
  %695 = sub i32 %694, %304
  %696 = sub i32 %695, %305
  %697 = sub i32 %696, %309
  %698 = add i32 %697, %312
  %699 = sub i32 %698, %314
  %700 = sub i32 %699, %316
  %701 = add i32 %700, %318
  %702 = add i32 %701, %321
  %703 = sub i32 %702, %325
  %704 = sub i32 %703, %327
  %705 = sub i32 %704, %330
  %706 = sub i32 %705, %331
  %707 = add i32 %706, %333
  %708 = add i32 %707, %338
  %709 = sub i32 %708, %247
  %710 = sub i32 %709, %339
  %711 = add i32 %710, %342
  %712 = add i32 %711, %346
  %713 = add i32 %712, %348
  %714 = add i32 %713, %349
  %715 = sub i32 %714, %350
  %716 = sub i32 %715, %351
  %717 = add i32 %716, %355
  %718 = sub i32 %717, %356
  %719 = sub i32 %718, %357
  %720 = sub i32 %719, %358
  %721 = add i32 %720, %360
  %722 = add i32 %721, %361
  %723 = add i32 %722, %362
  %724 = sub i32 %723, %367
  %725 = add i32 %724, %369
  %726 = sub i32 %725, %371
  %727 = add i32 %726, %375
  %728 = add i32 %727, %376
  %729 = sub i32 %728, %377
  %730 = sub i32 %729, %378
  %731 = add i32 %730, %379
  %732 = add i32 %731, %380
  %733 = sub i32 %732, %382
  %734 = add i32 %733, %384
  %735 = sub i32 %734, %386
  %736 = add i32 %735, %387
  %737 = sub i32 %736, %389
  %738 = sub i32 %737, %390
  %739 = sub i32 %738, %393
  %740 = add i32 %739, %395
  %741 = sub i32 %740, %401
  %742 = add i32 %741, %405
  %743 = sub i32 %742, %407
  %744 = add i32 %743, %408
  %745 = add i32 %744, %285
  %746 = sub i32 %745, %306
  %747 = sub i32 %746, %411
  %748 = sub i32 %747, %412
  %749 = sub i32 %748, %413
  %750 = add i32 %749, %414
  %751 = add i32 %750, %261
  %752 = sub i32 %751, %416
  %753 = sub i32 %752, %417
  %754 = sub i32 %753, %418
  %755 = add i32 %754, %419
  %756 = add i32 %755, %423
  %757 = sub i32 %756, %426
  %758 = add i32 %757, %428
  %759 = add i32 %758, %429
  %760 = sub i32 %759, %430
  %761 = add i32 %760, %432
  %762 = add i32 %761, %433
  %763 = add i32 %762, %434
  %764 = add i32 %763, %438
  %765 = add i32 %764, %442
  %766 = add i32 %765, %443
  %767 = add i32 %766, %445
  %768 = add i32 %767, %447
  %769 = add i32 %768, %449
  %770 = add i32 %769, %514
  %771 = sub i32 %770, %194
  %772 = add i32 %771, %200
  %773 = sub i32 %772, %206
  %774 = sub i32 %773, %214
  %775 = sub i32 %774, %224
  %776 = sub i32 %775, %230
  %777 = sub i32 %776, %235
  %778 = add i32 %777, %237
  %779 = sub i32 %778, %240
  %780 = sub i32 %779, %248
  %781 = add i32 %780, %262
  %782 = add i32 %781, %263
  %783 = sub i32 %782, %275
  %784 = sub i32 %783, %278
  %785 = sub i32 %784, %286
  %786 = sub i32 %785, %329
  %787 = sub i32 %786, %335
  %788 = sub i32 %787, %337
  %789 = sub i32 %788, %341
  %790 = sub i32 %789, %345
  %791 = add i32 %790, %347
  %792 = sub i32 %791, %354
  %793 = sub i32 %792, %365
  %794 = add i32 %793, %373
  %795 = sub i32 %794, %392
  %796 = add i32 %795, %394
  %797 = sub i32 %796, %397
  %798 = sub i32 %797, %399
  %799 = sub i32 %798, %404
  %800 = sub i32 %799, %421
  %801 = sub i32 %800, %424
  %802 = sub i32 %801, %437
  %803 = add i32 %802, %446
  %804 = sub i32 %803, %452
  %805 = add i32 %804, %456
  %806 = sub i32 %805, %458
  %807 = sub i32 %806, %460
  %808 = sub i32 %807, %308
  %809 = sub i32 %808, %364
  %810 = sub i32 %809, %441
  %811 = add i32 %810, %508
  %812 = add i32 %811, %511
  %813 = add i32 %812, %505
  %814 = add i32 %813, %520
  %815 = add i32 %814, %498
  %816 = icmp eq i32 %15, %815
  %817 = select i1 %816, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %818 = tail call i32 @puts(i8* nonnull dereferenceable(1) %817)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
