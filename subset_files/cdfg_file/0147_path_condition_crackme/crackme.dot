digraph "DFG for'crackme' function" {
	Node0x1826720[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1826da0[shape=record, label="  %6 = mul i32 %5, -4"];
	Node0x1826e10[shape=record, label="  %7 = or i32 %2, %1"];
	Node0x1826eb0[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x1826f20[shape=record, label="  %9 = and i32 %8, %3"];
	Node0x1826fc0[shape=record, label="  %10 = sub i32 1, %7"];
	Node0x1827030[shape=record, label="  %11 = add i32 %10, %6"];
	Node0x18270a0[shape=record, label="  %12 = add i32 %11, %9"];
	Node0x1827110[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0x1827180[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x18271f0[shape=record, label="  %15 = and i32 %13, %1"];
	Node0x1827260[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1827300[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1827370[shape=record, label="  %18 = xor i32 %7, -1"];
	Node0x1827410[shape=record, label="  %19 = mul i32 %18, -5"];
	Node0x1827480[shape=record, label="  %20 = xor i32 %3, -1"];
	Node0x18274f0[shape=record, label="  %21 = and i32 %20, %0"];
	Node0x1827560[shape=record, label="  %22 = shl i32 %8, 1"];
	Node0x18275d0[shape=record, label="  %23 = shl i32 %0, 1"];
	Node0x1827640[shape=record, label="  %24 = and i32 %3, %0"];
	Node0x18276b0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x1827720[shape=record, label="  %26 = xor i32 %3, %0"];
	Node0x1827790[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x1827800[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0x1827870[shape=record, label="  %29 = or i32 %3, %0"];
	Node0x18278e0[shape=record, label="  %30 = xor i32 %29, -1"];
	Node0x1827950[shape=record, label="  %31 = sub i32 %30, %14"];
	Node0x18279c0[shape=record, label="  %32 = add i32 %31, %24"];
	Node0x1827c70[shape=record, label="  %33 = mul i32 %32, 3"];
	Node0x1827d10[shape=record, label="  %34 = mul i32 %5, -9"];
	Node0x1827d80[shape=record, label="  %35 = xor i32 %22, -1"];
	Node0x1827df0[shape=record, label="  %36 = sub i32 %35, %23"];
	Node0x1827e60[shape=record, label="  %37 = add i32 %36, %13"];
	Node0x1827ed0[shape=record, label="  %38 = sub i32 %37, %2"];
	Node0x1827f40[shape=record, label="  %39 = sub i32 %38, %14"];
	Node0x1827fb0[shape=record, label="  %40 = add i32 %39, %5"];
	Node0x1828020[shape=record, label="  %41 = add i32 %40, %3"];
	Node0x1828090[shape=record, label="  %42 = add i32 %41, %19"];
	Node0x1828100[shape=record, label="  %43 = add i32 %42, %21"];
	Node0x1828170[shape=record, label="  %44 = add i32 %43, %25"];
	Node0x18281e0[shape=record, label="  %45 = add i32 %44, %9"];
	Node0x1828250[shape=record, label="  %46 = add i32 %45, %17"];
	Node0x18282c0[shape=record, label="  %47 = add i32 %46, %34"];
	Node0x1828330[shape=record, label="  %48 = sub i32 %47, %28"];
	Node0x18283a0[shape=record, label="  %49 = add i32 %48, %33"];
	Node0x1828410[shape=record, label="  %50 = icmp eq i32 %12, %49"];
	Node0x17c7268[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18288b0[shape=record, label="  %52 = tail call i32 @puts(i8* nonnull dereferenceable(1) %51)"];
	Node0x1828900[shape=record, label="  ret void"];
	Node0x1826720 -> Node0x1826da0;
	Node0x1826da0 -> Node0x1826e10;
	Node0x1826e10 -> Node0x1826eb0;
	Node0x1826eb0 -> Node0x1826f20;
	Node0x1826f20 -> Node0x1826fc0;
	Node0x1826fc0 -> Node0x1827030;
	Node0x1827030 -> Node0x18270a0;
	Node0x18270a0 -> Node0x1827110;
	Node0x1827110 -> Node0x1827180;
	Node0x1827180 -> Node0x18271f0;
	Node0x18271f0 -> Node0x1827260;
	Node0x1827260 -> Node0x1827300;
	Node0x1827300 -> Node0x1827370;
	Node0x1827370 -> Node0x1827410;
	Node0x1827410 -> Node0x1827480;
	Node0x1827480 -> Node0x18274f0;
	Node0x18274f0 -> Node0x1827560;
	Node0x1827560 -> Node0x18275d0;
	Node0x18275d0 -> Node0x1827640;
	Node0x1827640 -> Node0x18276b0;
	Node0x18276b0 -> Node0x1827720;
	Node0x1827720 -> Node0x1827790;
	Node0x1827790 -> Node0x1827800;
	Node0x1827800 -> Node0x1827870;
	Node0x1827870 -> Node0x18278e0;
	Node0x18278e0 -> Node0x1827950;
	Node0x1827950 -> Node0x18279c0;
	Node0x18279c0 -> Node0x1827c70;
	Node0x1827c70 -> Node0x1827d10;
	Node0x1827d10 -> Node0x1827d80;
	Node0x1827d80 -> Node0x1827df0;
	Node0x1827df0 -> Node0x1827e60;
	Node0x1827e60 -> Node0x1827ed0;
	Node0x1827ed0 -> Node0x1827f40;
	Node0x1827f40 -> Node0x1827fb0;
	Node0x1827fb0 -> Node0x1828020;
	Node0x1828020 -> Node0x1828090;
	Node0x1828090 -> Node0x1828100;
	Node0x1828100 -> Node0x1828170;
	Node0x1828170 -> Node0x18281e0;
	Node0x18281e0 -> Node0x1828250;
	Node0x1828250 -> Node0x18282c0;
	Node0x18282c0 -> Node0x1828330;
	Node0x1828330 -> Node0x18283a0;
	Node0x18283a0 -> Node0x1828410;
	Node0x1828410 -> Node0x17c7268;
	Node0x17c7268 -> Node0x18288b0;
	Node0x18288b0 -> Node0x1828900;
edge [color=red]
	Node0x1826720 -> Node0x1826da0;
	Node0x1826eb0 -> Node0x1826f20;
	Node0x1826e10 -> Node0x1826fc0;
	Node0x1826fc0 -> Node0x1827030;
	Node0x1826da0 -> Node0x1827030;
	Node0x1827030 -> Node0x18270a0;
	Node0x1826f20 -> Node0x18270a0;
	Node0x1827110 -> Node0x18271f0;
	Node0x18271f0 -> Node0x1827260;
	Node0x1827260 -> Node0x1827300;
	Node0x1826e10 -> Node0x1827370;
	Node0x1827370 -> Node0x1827410;
	Node0x1827480 -> Node0x18274f0;
	Node0x1826eb0 -> Node0x1827560;
	Node0x1827640 -> Node0x18276b0;
	Node0x1827720 -> Node0x1827790;
	Node0x1827790 -> Node0x1827800;
	Node0x1827870 -> Node0x18278e0;
	Node0x18278e0 -> Node0x1827950;
	Node0x1827180 -> Node0x1827950;
	Node0x1827950 -> Node0x18279c0;
	Node0x1827640 -> Node0x18279c0;
	Node0x18279c0 -> Node0x1827c70;
	Node0x1826720 -> Node0x1827d10;
	Node0x1827560 -> Node0x1827d80;
	Node0x1827d80 -> Node0x1827df0;
	Node0x18275d0 -> Node0x1827df0;
	Node0x1827df0 -> Node0x1827e60;
	Node0x1827110 -> Node0x1827e60;
	Node0x1827e60 -> Node0x1827ed0;
	Node0x1827ed0 -> Node0x1827f40;
	Node0x1827180 -> Node0x1827f40;
	Node0x1827f40 -> Node0x1827fb0;
	Node0x1826720 -> Node0x1827fb0;
	Node0x1827fb0 -> Node0x1828020;
	Node0x1828020 -> Node0x1828090;
	Node0x1827410 -> Node0x1828090;
	Node0x1828090 -> Node0x1828100;
	Node0x18274f0 -> Node0x1828100;
	Node0x1828100 -> Node0x1828170;
	Node0x18276b0 -> Node0x1828170;
	Node0x1828170 -> Node0x18281e0;
	Node0x1826f20 -> Node0x18281e0;
	Node0x18281e0 -> Node0x1828250;
	Node0x1827300 -> Node0x1828250;
	Node0x1828250 -> Node0x18282c0;
	Node0x1827d10 -> Node0x18282c0;
	Node0x18282c0 -> Node0x1828330;
	Node0x1827800 -> Node0x1828330;
	Node0x1828330 -> Node0x18283a0;
	Node0x1827c70 -> Node0x18283a0;
	Node0x18270a0 -> Node0x1828410;
	Node0x18283a0 -> Node0x1828410;
	Node0x1828410 -> Node0x17c7268;
	Node0x17c7268 -> Node0x18288b0;
}
