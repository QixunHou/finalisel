digraph "DFG for'main' function" {
	Node0x169de38[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x169deb8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x169df48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x169e3a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x169e488[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x169e5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x169e7e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x169e898[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x169f808[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x169fe90[shape=record, label="  %8 = mul i32 %6, 3"];
	Node0x169ff00[shape=record, label="  %9 = and i32 %7, %6"];
	Node0x169ff70[shape=record, label="  %10 = add i32 %8, 1"];
	Node0x169ffe0[shape=record, label="  %11 = add i32 %10, %9"];
	Node0x16a0050[shape=record, label="  %12 = xor i32 %7, -1"];
	Node0x16a00c0[shape=record, label="  %13 = and i32 %6, %12"];
	Node0x16a0130[shape=record, label="  %14 = add i32 %13, 1"];
	Node0x16a01a0[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x16a0210[shape=record, label="  %16 = shl i32 %7, 1"];
	Node0x16a0280[shape=record, label="  %17 = shl i32 %12, 2"];
	Node0x16a02f0[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x16a0360[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x16a03d0[shape=record, label="  %20 = xor i32 %6, 2147483647"];
	Node0x16a0440[shape=record, label="  %21 = and i32 %20, %7"];
	Node0x16a04b0[shape=record, label="  %22 = mul i32 %9, 7"];
	Node0x16a0520[shape=record, label="  %23 = add i32 %13, %19"];
	Node0x16a0590[shape=record, label="  %24 = mul i32 %23, -3"];
	Node0x16a0600[shape=record, label="  %25 = add i32 %14, %21"];
	Node0x16a0670[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x16a06e0[shape=record, label="  %27 = sub i32 %15, %16"];
	Node0x16a0750[shape=record, label="  %28 = add i32 %27, %17"];
	Node0x16a07c0[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x16a0830[shape=record, label="  %30 = add i32 %29, %24"];
	Node0x16a08a0[shape=record, label="  %31 = add i32 %30, %26"];
	Node0x16a0910[shape=record, label="  %32 = icmp eq i32 %11, %31"];
	Node0x163e9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x16a0bb0[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x16a0e08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16a0f68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x16a1028[shape=record, label="  ret i32 0"];
	Node0x169de38 -> Node0x169deb8;
	Node0x169deb8 -> Node0x169df48;
	Node0x169df48 -> Node0x169e3a8;
	Node0x169e3a8 -> Node0x169e488;
	Node0x169e488 -> Node0x169e5a8;
	Node0x169e5a8 -> Node0x169e7e0;
	Node0x169e7e0 -> Node0x169e898;
	Node0x169e898 -> Node0x169f808;
	Node0x169f808 -> Node0x169fe90;
	Node0x169fe90 -> Node0x169ff00;
	Node0x169ff00 -> Node0x169ff70;
	Node0x169ff70 -> Node0x169ffe0;
	Node0x169ffe0 -> Node0x16a0050;
	Node0x16a0050 -> Node0x16a00c0;
	Node0x16a00c0 -> Node0x16a0130;
	Node0x16a0130 -> Node0x16a01a0;
	Node0x16a01a0 -> Node0x16a0210;
	Node0x16a0210 -> Node0x16a0280;
	Node0x16a0280 -> Node0x16a02f0;
	Node0x16a02f0 -> Node0x16a0360;
	Node0x16a0360 -> Node0x16a03d0;
	Node0x16a03d0 -> Node0x16a0440;
	Node0x16a0440 -> Node0x16a04b0;
	Node0x16a04b0 -> Node0x16a0520;
	Node0x16a0520 -> Node0x16a0590;
	Node0x16a0590 -> Node0x16a0600;
	Node0x16a0600 -> Node0x16a0670;
	Node0x16a0670 -> Node0x16a06e0;
	Node0x16a06e0 -> Node0x16a0750;
	Node0x16a0750 -> Node0x16a07c0;
	Node0x16a07c0 -> Node0x16a0830;
	Node0x16a0830 -> Node0x16a08a0;
	Node0x16a08a0 -> Node0x16a0910;
	Node0x16a0910 -> Node0x163e9d8;
	Node0x163e9d8 -> Node0x16a0bb0;
	Node0x16a0bb0 -> Node0x16a0e08;
	Node0x16a0e08 -> Node0x16a0f68;
	Node0x16a0f68 -> Node0x16a1028;
edge [color=red]
	Node0x169de38 -> Node0x169df48;
	Node0x169df48 -> Node0x169e3a8;
	Node0x169deb8 -> Node0x169e488;
	Node0x169e488 -> Node0x169e5a8;
	Node0x169de38 -> Node0x169e7e0;
	Node0x169deb8 -> Node0x169e7e0;
	Node0x169de38 -> Node0x169e898;
	Node0x169deb8 -> Node0x169f808;
	Node0x169e898 -> Node0x169fe90;
	Node0x169f808 -> Node0x169ff00;
	Node0x169e898 -> Node0x169ff00;
	Node0x169fe90 -> Node0x169ff70;
	Node0x169ff70 -> Node0x169ffe0;
	Node0x169ff00 -> Node0x169ffe0;
	Node0x169f808 -> Node0x16a0050;
	Node0x169e898 -> Node0x16a00c0;
	Node0x16a0050 -> Node0x16a00c0;
	Node0x16a00c0 -> Node0x16a0130;
	Node0x169f808 -> Node0x16a01a0;
	Node0x169e898 -> Node0x16a01a0;
	Node0x169f808 -> Node0x16a0210;
	Node0x16a0050 -> Node0x16a0280;
	Node0x169f808 -> Node0x16a02f0;
	Node0x169e898 -> Node0x16a02f0;
	Node0x16a02f0 -> Node0x16a0360;
	Node0x169e898 -> Node0x16a03d0;
	Node0x16a03d0 -> Node0x16a0440;
	Node0x169f808 -> Node0x16a0440;
	Node0x169ff00 -> Node0x16a04b0;
	Node0x16a00c0 -> Node0x16a0520;
	Node0x16a0360 -> Node0x16a0520;
	Node0x16a0520 -> Node0x16a0590;
	Node0x16a0130 -> Node0x16a0600;
	Node0x16a0440 -> Node0x16a0600;
	Node0x16a0600 -> Node0x16a0670;
	Node0x16a01a0 -> Node0x16a06e0;
	Node0x16a0210 -> Node0x16a06e0;
	Node0x16a06e0 -> Node0x16a0750;
	Node0x16a0280 -> Node0x16a0750;
	Node0x16a0750 -> Node0x16a07c0;
	Node0x16a04b0 -> Node0x16a07c0;
	Node0x16a07c0 -> Node0x16a0830;
	Node0x16a0590 -> Node0x16a0830;
	Node0x16a0830 -> Node0x16a08a0;
	Node0x16a0670 -> Node0x16a08a0;
	Node0x169ffe0 -> Node0x16a0910;
	Node0x16a08a0 -> Node0x16a0910;
	Node0x16a0910 -> Node0x163e9d8;
	Node0x163e9d8 -> Node0x16a0bb0;
	Node0x169e488 -> Node0x16a0e08;
	Node0x169df48 -> Node0x16a0f68;
}
