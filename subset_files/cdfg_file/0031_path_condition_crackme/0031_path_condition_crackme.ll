; ModuleID = '../.././c_source_file/0031_path_condition_crackme.c'
source_filename = "../.././c_source_file/0031_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = or i32 %2, %1
  %9 = xor i32 %8, -1
  %10 = or i32 %9, %7
  %11 = or i32 %5, %3
  %12 = xor i32 %11, %4
  %13 = xor i32 %5, %4
  %14 = xor i32 %13, -1
  %15 = add i32 %13, 1
  %16 = sub i32 %15, %10
  %17 = add i32 %16, %12
  %18 = xor i32 %1, -1
  %19 = xor i32 %2, %0
  %20 = and i32 %19, %18
  %21 = xor i32 %2, -1
  %22 = or i32 %21, %0
  %23 = and i32 %22, %1
  %24 = or i32 %1, %0
  %25 = and i32 %19, %24
  %26 = xor i32 %1, %0
  %27 = or i32 %26, %2
  %28 = and i32 %18, %2
  %29 = and i32 %28, %0
  %30 = xor i32 %2, %1
  %31 = or i32 %30, %0
  %32 = xor i32 %29, %31
  %33 = and i32 %2, %1
  %34 = and i32 %33, %0
  %35 = xor i32 %30, %0
  %36 = xor i32 %35, -1
  %37 = or i32 %34, %36
  %38 = and i32 %1, %0
  %39 = xor i32 %38, -1
  %40 = xor i32 %39, %2
  %41 = and i32 %21, %0
  %42 = shl i32 %41, 1
  %43 = xor i32 %30, -1
  %44 = xor i32 %43, %0
  %45 = xor i32 %19, -1
  %46 = and i32 %45, %1
  %47 = or i32 %2, %0
  %48 = xor i32 %26, -1
  %49 = and i32 %47, %48
  %50 = and i32 %2, %0
  %51 = or i32 %50, %1
  %52 = or i32 %18, %0
  %53 = xor i32 %52, -1
  %54 = or i32 %19, %53
  %55 = and i32 %19, %26
  %56 = and i32 %28, %7
  %57 = or i32 %30, %7
  %58 = xor i32 %57, -1
  %59 = or i32 %56, %58
  %60 = and i32 %45, %39
  %61 = and i32 %19, %39
  %62 = xor i32 %47, -1
  %63 = or i32 %62, %1
  %64 = shl i32 %0, 1
  %65 = or i32 %21, %1
  %66 = or i32 %50, %18
  %67 = and i32 %18, %0
  %68 = or i32 %67, %2
  %69 = and i32 %30, %39
  %70 = and i32 %21, %39
  %71 = xor i32 %47, %38
  %72 = and i32 %33, %7
  %73 = and i32 %8, %0
  %74 = xor i32 %73, -1
  %75 = xor i32 %72, %74
  %76 = or i32 %45, %48
  %77 = or i32 %50, %9
  %78 = xor i32 %65, -1
  %79 = or i32 %78, %7
  %80 = xor i32 %22, -1
  %81 = or i32 %80, %48
  %82 = or i32 %29, %35
  %83 = add i32 %8, 1
  %84 = xor i32 %50, -1
  %85 = and i32 %84, %48
  %86 = shl i32 %85, 1
  %87 = or i32 %41, %18
  %88 = shl i32 %87, 1
  %89 = or i32 %38, %78
  %90 = or i32 %41, %78
  %91 = and i32 %30, %0
  %92 = and i32 %47, %1
  %93 = and i32 %47, %18
  %94 = add i32 %52, 1
  %95 = or i32 %53, %2
  %96 = or i32 %62, %18
  %97 = and i32 %52, %21
  %98 = shl i32 %97, 1
  %99 = and i32 %21, %1
  %100 = xor i32 %99, -1
  %101 = add i32 %99, 1
  %102 = and i32 %26, %84
  %103 = xor i32 %67, %2
  %104 = or i32 %18, %2
  %105 = xor i32 %104, %0
  %106 = xor i32 %105, 2147483647
  %107 = xor i32 %106, %29
  %108 = shl i32 %107, 1
  %109 = add i32 %65, 1
  %110 = and i32 %30, %24
  %111 = and i32 %52, %43
  %112 = xor i32 %67, -1
  %113 = and i32 %43, %112
  %114 = and i32 %43, %0
  %115 = shl i32 %114, 1
  %116 = and i32 %45, %18
  %117 = xor i32 %41, -1
  %118 = xor i32 %117, %1
  %119 = xor i32 %34, %35
  %120 = add i32 %22, 1
  %121 = xor i32 %24, -1
  %122 = or i32 %43, %121
  %123 = shl i32 %122, 1
  %124 = and i32 %104, %7
  %125 = xor i32 %124, 1073741823
  %126 = xor i32 %125, %29
  %127 = shl i32 %126, 2
  %128 = and i32 %21, %48
  %129 = xor i32 %33, -1
  %130 = and i32 %129, %0
  %131 = or i32 %43, %0
  %132 = and i32 %43, %7
  %133 = and i32 %21, %112
  %134 = xor i32 %50, %1
  %135 = or i32 %21, %48
  %136 = or i32 %26, %45
  %137 = or i32 %129, %7
  %138 = or i32 %26, %62
  %139 = shl i32 %138, 1
  %140 = and i32 %100, %7
  %141 = xor i32 %112, %2
  %142 = or i32 %29, %124
  %143 = or i32 %19, %121
  %144 = and i32 %26, %117
  %145 = and i32 %26, %45
  %146 = and i32 %117, %48
  %147 = and i32 %22, %18
  %148 = or i32 %41, %33
  %149 = or i32 %19, %67
  %150 = xor i32 %80, %1
  %151 = and i32 %8, %7
  %152 = or i32 %34, %151
  %153 = or i32 %30, %38
  %154 = or i32 %21, %121
  %155 = and i32 %26, %21
  %156 = shl i32 %155, 1
  %157 = or i32 %48, %2
  %158 = or i32 %45, %53
  %159 = xor i32 %62, %1
  %160 = or i32 %72, %73
  %161 = shl i32 %160, 1
  %162 = and i32 %129, %7
  %163 = shl i32 %162, 2
  %164 = or i32 %50, %53
  %165 = xor i32 %8, %0
  %166 = or i32 %100, %0
  %167 = xor i32 %50, %100
  %168 = and i32 %45, %48
  %169 = or i32 %99, %67
  %170 = or i32 %45, %121
  %171 = or i32 %65, %7
  %172 = shl i32 %171, 1
  %173 = and i32 %117, %1
  %174 = xor i32 %84, %1
  %175 = xor i32 %29, %36
  %176 = and i32 %84, %18
  %177 = shl i32 %176, 1
  %178 = and i32 %100, %0
  %179 = shl i32 %178, 1
  %180 = xor i32 %8, %38
  %181 = or i32 %26, %80
  %182 = xor i32 %67, %100
  %183 = add i32 %1, 1
  %184 = and i32 %43, %39
  %185 = shl i32 %184, 1
  %186 = and i32 %104, %0
  %187 = xor i32 %186, -1
  %188 = xor i32 %56, %187
  %189 = or i32 %19, %18
  %190 = or i32 %80, %1
  %191 = or i32 %30, %121
  %192 = or i32 %99, %0
  %193 = and i32 %52, %45
  %194 = shl i32 %73, 1
  %195 = or i32 %19, %26
  %196 = shl i32 %19, 1
  %197 = shl i32 %151, 1
  %198 = shl i32 %57, 1
  %199 = xor i32 %33, %0
  %200 = xor i32 %52, %2
  %201 = xor i32 %65, %38
  %202 = or i32 %41, %26
  %203 = and i32 %19, %112
  %204 = or i32 %38, %2
  %205 = and i32 %22, %48
  %206 = and i32 %24, %21
  %207 = or i32 %99, %7
  %208 = xor i32 %50, %8
  %209 = or i32 %67, %43
  %210 = or i32 %50, %48
  %211 = and i32 %65, %7
  %212 = and i32 %48, %2
  %213 = and i32 %39, %2
  %214 = or i32 %19, %1
  %215 = or i32 %33, %7
  %216 = shl i32 %215, 1
  %217 = xor i32 %41, %1
  %218 = and i32 %52, %2
  %219 = or i32 %43, %7
  %220 = or i32 %121, %2
  %221 = shl i32 %220, 1
  %222 = and i32 %24, %2
  %223 = xor i32 %41, %65
  %224 = xor i32 %121, %2
  %225 = xor i32 %65, %0
  %226 = or i32 %78, %0
  %227 = or i32 %62, %48
  %228 = or i32 %38, %43
  %229 = or i32 %100, %7
  %230 = and i32 %19, %1
  %231 = xor i32 %50, %52
  %232 = and i32 %24, %45
  %233 = xor i32 %41, %129
  %234 = shl i32 %117, 1
  %235 = xor i32 %99, %0
  %236 = xor i32 %91, 2147483647
  %237 = xor i32 %236, %72
  %238 = shl i32 %237, 1
  %239 = or i32 %33, %67
  %240 = or i32 %19, %38
  %241 = shl i32 %240, 1
  %242 = xor i32 %129, %0
  %243 = or i32 %8, %7
  %244 = or i32 %67, %45
  %245 = or i32 %29, %105
  %246 = or i32 %56, %186
  %247 = and i32 %30, %7
  %248 = xor i32 %34, -1
  %249 = xor i32 %247, %248
  %250 = or i32 %129, %0
  %251 = or i32 %38, %45
  %252 = or i32 %67, %21
  %253 = xor i32 %9, %0
  %254 = or i32 %33, %0
  %255 = and i32 %30, %52
  %256 = and i32 %112, %2
  %257 = xor i32 %24, %2
  %258 = and i32 %24, %43
  %259 = or i32 %80, %18
  %260 = shl i32 %259, 1
  %261 = or i32 %19, %48
  %262 = or i32 %38, %62
  %263 = or i32 %34, %247
  %264 = or i32 %38, %9
  %265 = or i32 %30, %67
  %266 = xor i32 %67, %129
  %267 = xor i32 %165, %248
  %268 = and i32 %117, %18
  %269 = xor i32 %56, %57
  %270 = and i32 %84, %1
  %271 = or i32 %65, %0
  %272 = xor i32 %22, %38
  %273 = add i32 %19, 1
  %274 = or i32 %50, %26
  %275 = or i32 %45, %18
  %276 = or i32 %72, %91
  %277 = or i32 %34, %165
  %278 = xor i32 %100, %0
  %279 = and i32 %65, %0
  %280 = or i32 %38, %80
  %281 = or i32 %21, %53
  %282 = or i32 %41, %1
  %283 = shl i32 %282, 1
  %284 = and i32 %26, %2
  %285 = and i32 %19, %52
  %286 = and i32 %45, %112
  %287 = xor i32 %38, %2
  %288 = and i32 %19, %48
  %289 = or i32 %8, %0
  %290 = and i32 %9, %7
  %291 = mul i32 %290, 15
  %292 = and i32 %99, %7
  %293 = and i32 %9, %0
  %294 = mul i32 %293, 27
  %295 = and i32 %99, %0
  %296 = and i32 %78, %7
  %297 = mul i32 %72, 20
  %298 = and i32 %78, %0
  %299 = shl i32 %34, 4
  %300 = xor i32 %3, -1
  %301 = and i32 %5, %4
  %302 = xor i32 %301, -1
  %303 = and i32 %302, %300
  %304 = shl i32 %303, 1
  %305 = or i32 %4, %3
  %306 = xor i32 %305, -1
  %307 = and i32 %5, %3
  %308 = and i32 %307, %4
  %309 = or i32 %308, %12
  %310 = and i32 %300, %4
  %311 = xor i32 %5, %3
  %312 = or i32 %311, %310
  %313 = xor i32 %4, -1
  %314 = and i32 %311, %313
  %315 = xor i32 %314, -1
  %316 = xor i32 %308, %315
  %317 = and i32 %4, %3
  %318 = or i32 %13, %317
  %319 = xor i32 %4, %3
  %320 = and i32 %13, %319
  %321 = or i32 %308, %314
  %322 = xor i32 %302, %3
  %323 = xor i32 %305, %5
  %324 = xor i32 %11, -1
  %325 = xor i32 %324, %4
  %326 = or i32 %5, %4
  %327 = xor i32 %326, -1
  %328 = add i32 %326, 1
  %329 = or i32 %311, %313
  %330 = shl i32 %329, 1
  %331 = xor i32 %5, -1
  %332 = and i32 %331, %3
  %333 = xor i32 %332, -1
  %334 = xor i32 %301, %333
  %335 = xor i32 %319, -1
  %336 = or i32 %331, %335
  %337 = or i32 %14, %300
  %338 = and i32 %331, %4
  %339 = or i32 %338, %3
  %340 = xor i32 %332, %4
  %341 = or i32 %300, %4
  %342 = xor i32 %341, -1
  %343 = or i32 %311, %342
  %344 = or i32 %324, %4
  %345 = and i32 %307, %313
  %346 = and i32 %311, %4
  %347 = or i32 %345, %346
  %348 = and i32 %333, %313
  %349 = and i32 %11, %4
  %350 = xor i32 %349, -1
  %351 = xor i32 %345, %350
  %352 = or i32 %317, %331
  %353 = shl i32 %352, 2
  %354 = and i32 %300, %5
  %355 = and i32 %354, %4
  %356 = xor i32 %311, %4
  %357 = or i32 %355, %356
  %358 = or i32 %331, %3
  %359 = or i32 %358, %4
  %360 = or i32 %311, %4
  %361 = xor i32 %355, %360
  %362 = xor i32 %311, -1
  %363 = or i32 %362, %4
  %364 = shl i32 %338, 1
  %365 = xor i32 %364, -2
  %366 = or i32 %310, %331
  %367 = xor i32 %310, -1
  %368 = and i32 %367, %5
  %369 = or i32 %319, %331
  %370 = and i32 %305, %14
  %371 = or i32 %338, %335
  %372 = or i32 %342, %5
  %373 = and i32 %354, %313
  %374 = xor i32 %373, %329
  %375 = or i32 %338, %319
  %376 = or i32 %331, %4
  %377 = xor i32 %317, -1
  %378 = and i32 %13, %377
  %379 = or i32 %13, %319
  %380 = xor i32 %358, -1
  %381 = xor i32 %380, %4
  %382 = xor i32 %376, %3
  %383 = xor i32 %301, %3
  %384 = or i32 %380, %313
  %385 = shl i32 %384, 1
  %386 = xor i32 %329, -1
  %387 = or i32 %373, %386
  %388 = or i32 %307, %313
  %389 = xor i32 %333, %4
  %390 = or i32 %338, %307
  %391 = or i32 %14, %306
  %392 = or i32 %332, %4
  %393 = and i32 %311, %341
  %394 = or i32 %327, %335
  %395 = or i32 %317, %14
  %396 = and i32 %305, %331
  %397 = and i32 %319, %331
  %398 = xor i32 %310, %5
  %399 = and i32 %14, %367
  %400 = shl i32 %399, 1
  %401 = xor i32 %307, 2147483647
  %402 = and i32 %401, %4
  %403 = xor i32 %310, %333
  %404 = and i32 %377, %5
  %405 = and i32 %358, %4
  %406 = and i32 %341, %362
  %407 = or i32 %311, %306
  %408 = xor i32 %376, -1
  %409 = or i32 %319, %408
  %410 = and i32 %319, %5
  %411 = or i32 %301, %332
  %412 = and i32 %13, %3
  %413 = shl i32 %380, 1
  %414 = and i32 %324, %313
  %415 = and i32 %332, %313
  %416 = mul i32 %415, 6
  %417 = and i32 %324, %4
  %418 = and i32 %332, %4
  %419 = mul i32 %418, -12
  %420 = and i32 %380, %313
  %421 = shl i32 %345, 3
  %422 = and i32 %380, %4
  %423 = shl i32 %422, 2
  %424 = shl i32 %308, 1
  %425 = add i32 %257, %281
  %426 = add i32 %425, %103
  %427 = add i32 %426, %50
  %428 = add i32 %427, %296
  %429 = add i32 %428, %285
  %430 = add i32 %429, %280
  %431 = add i32 %430, %274
  %432 = add i32 %431, %253
  %433 = add i32 %432, %244
  %434 = add i32 %433, %227
  %435 = add i32 %434, %203
  %436 = add i32 %435, %190
  %437 = add i32 %436, %168
  %438 = add i32 %437, %145
  %439 = add i32 %438, %130
  %440 = add i32 %439, %71
  %441 = add i32 %440, %175
  %442 = add i32 %441, %420
  %443 = add i32 %442, %318
  %444 = add i32 %443, %374
  %445 = add i32 %444, %402
  %446 = add i32 %445, %321
  %447 = shl i32 %446, 1
  %448 = add i32 %266, %284
  %449 = add i32 %448, %295
  %450 = sub i32 %449, %239
  %451 = add i32 %450, %217
  %452 = sub i32 %451, %167
  %453 = mul i32 %452, 3
  %454 = sub i32 %273, %289
  %455 = sub i32 %454, %229
  %456 = add i32 %455, %193
  %457 = add i32 %456, %322
  %458 = mul i32 %457, 5
  %459 = add i32 %298, %27
  %460 = add i32 %459, %245
  %461 = add i32 %460, %347
  %462 = shl i32 %461, 2
  %463 = sub i32 %292, %417
  %464 = mul i32 %463, 7
  %465 = sub i32 -10, %0
  %466 = sub i32 %465, %64
  %467 = add i32 %466, %183
  %468 = add i32 %467, %1
  %469 = add i32 %468, %94
  %470 = sub i32 %469, %24
  %471 = add i32 %470, %21
  %472 = add i32 %471, %48
  %473 = add i32 %472, %52
  %474 = sub i32 %473, %2
  %475 = add i32 %474, %40
  %476 = sub i32 %475, %65
  %477 = add i32 %476, %68
  %478 = add i32 %477, %70
  %479 = add i32 %478, %83
  %480 = sub i32 %479, %95
  %481 = add i32 %480, %101
  %482 = add i32 %481, %109
  %483 = add i32 %482, %120
  %484 = add i32 %483, %30
  %485 = add i32 %484, %22
  %486 = add i32 %485, %128
  %487 = sub i32 %486, %133
  %488 = sub i32 %487, %135
  %489 = sub i32 %488, %141
  %490 = sub i32 %489, %154
  %491 = sub i32 %490, %157
  %492 = add i32 %491, %99
  %493 = sub i32 %492, %200
  %494 = add i32 %493, %204
  %495 = sub i32 %494, %206
  %496 = add i32 %495, %212
  %497 = add i32 %496, %213
  %498 = add i32 %497, %218
  %499 = add i32 %498, %222
  %500 = sub i32 %499, %224
  %501 = add i32 %500, %252
  %502 = sub i32 %501, %256
  %503 = add i32 %502, %287
  %504 = sub i32 %503, %23
  %505 = sub i32 %504, %20
  %506 = add i32 %505, %25
  %507 = sub i32 %506, %42
  %508 = sub i32 %507, %44
  %509 = sub i32 %508, %46
  %510 = add i32 %509, %49
  %511 = add i32 %510, %51
  %512 = add i32 %511, %54
  %513 = add i32 %512, %55
  %514 = add i32 %513, %60
  %515 = add i32 %514, %61
  %516 = sub i32 %515, %63
  %517 = sub i32 %516, %66
  %518 = add i32 %517, %69
  %519 = add i32 %518, %76
  %520 = add i32 %519, %77
  %521 = add i32 %520, %79
  %522 = sub i32 %521, %81
  %523 = sub i32 %522, %89
  %524 = sub i32 %523, %90
  %525 = sub i32 %524, %91
  %526 = sub i32 %525, %92
  %527 = sub i32 %526, %93
  %528 = add i32 %527, %96
  %529 = sub i32 %528, %98
  %530 = sub i32 %529, %102
  %531 = sub i32 %530, %110
  %532 = sub i32 %531, %111
  %533 = sub i32 %532, %113
  %534 = add i32 %533, %116
  %535 = add i32 %534, %118
  %536 = sub i32 %535, %131
  %537 = add i32 %536, %132
  %538 = add i32 %537, %134
  %539 = add i32 %538, %136
  %540 = sub i32 %539, %137
  %541 = add i32 %540, %140
  %542 = add i32 %541, %143
  %543 = sub i32 %542, %144
  %544 = add i32 %543, %146
  %545 = sub i32 %544, %147
  %546 = add i32 %545, %148
  %547 = sub i32 %546, %149
  %548 = sub i32 %547, %150
  %549 = add i32 %548, %153
  %550 = sub i32 %549, %156
  %551 = sub i32 %550, %158
  %552 = sub i32 %551, %159
  %553 = add i32 %552, %164
  %554 = add i32 %553, %165
  %555 = sub i32 %554, %166
  %556 = add i32 %555, %169
  %557 = sub i32 %556, %170
  %558 = add i32 %557, %173
  %559 = add i32 %558, %174
  %560 = sub i32 %559, %180
  %561 = sub i32 %560, %181
  %562 = sub i32 %561, %182
  %563 = sub i32 %562, %189
  %564 = sub i32 %563, %191
  %565 = add i32 %564, %192
  %566 = sub i32 %565, %195
  %567 = sub i32 %566, %196
  %568 = sub i32 %567, %31
  %569 = sub i32 %568, %199
  %570 = sub i32 %569, %201
  %571 = sub i32 %570, %202
  %572 = add i32 %571, %205
  %573 = sub i32 %572, %207
  %574 = add i32 %573, %208
  %575 = sub i32 %574, %209
  %576 = sub i32 %575, %210
  %577 = sub i32 %576, %211
  %578 = sub i32 %577, %214
  %579 = add i32 %578, %219
  %580 = sub i32 %579, %221
  %581 = sub i32 %580, %223
  %582 = add i32 %581, %225
  %583 = add i32 %582, %226
  %584 = add i32 %583, %228
  %585 = add i32 %584, %230
  %586 = add i32 %585, %231
  %587 = sub i32 %586, %232
  %588 = add i32 %587, %233
  %589 = sub i32 %588, %234
  %590 = sub i32 %589, %235
  %591 = add i32 %590, %242
  %592 = add i32 %591, %243
  %593 = add i32 %592, %250
  %594 = add i32 %593, %251
  %595 = sub i32 %594, %35
  %596 = sub i32 %595, %254
  %597 = add i32 %596, %255
  %598 = sub i32 %597, %258
  %599 = sub i32 %598, %261
  %600 = add i32 %599, %262
  %601 = sub i32 %600, %264
  %602 = add i32 %601, %265
  %603 = add i32 %602, %268
  %604 = sub i32 %603, %270
  %605 = sub i32 %604, %271
  %606 = add i32 %605, %272
  %607 = sub i32 %606, %275
  %608 = sub i32 %607, %278
  %609 = add i32 %608, %279
  %610 = sub i32 %609, %286
  %611 = sub i32 %610, %288
  %612 = add i32 %611, %32
  %613 = sub i32 %612, %37
  %614 = add i32 %613, %59
  %615 = add i32 %614, %75
  %616 = add i32 %615, %82
  %617 = sub i32 %616, %86
  %618 = sub i32 %617, %88
  %619 = sub i32 %618, %115
  %620 = add i32 %619, %119
  %621 = sub i32 %620, %123
  %622 = sub i32 %621, %139
  %623 = add i32 %622, %142
  %624 = add i32 %623, %152
  %625 = sub i32 %624, %163
  %626 = sub i32 %625, %172
  %627 = sub i32 %626, %177
  %628 = sub i32 %627, %179
  %629 = sub i32 %628, %185
  %630 = add i32 %629, %188
  %631 = sub i32 %630, %194
  %632 = sub i32 %631, %197
  %633 = sub i32 %632, %198
  %634 = sub i32 %633, %216
  %635 = sub i32 %634, %241
  %636 = add i32 %635, %246
  %637 = sub i32 %636, %249
  %638 = sub i32 %637, %260
  %639 = sub i32 %638, %263
  %640 = add i32 %639, %267
  %641 = sub i32 %640, %269
  %642 = sub i32 %641, %276
  %643 = add i32 %642, %277
  %644 = sub i32 %643, %283
  %645 = add i32 %644, %291
  %646 = add i32 %645, %294
  %647 = add i32 %646, %297
  %648 = add i32 %647, %299
  %649 = sub i32 %648, %319
  %650 = sub i32 %649, %317
  %651 = sub i32 %650, %161
  %652 = sub i32 %651, %323
  %653 = add i32 %652, %328
  %654 = sub i32 %653, %336
  %655 = add i32 %654, %366
  %656 = sub i32 %655, %368
  %657 = sub i32 %656, %369
  %658 = add i32 %657, %372
  %659 = sub i32 %658, %376
  %660 = sub i32 %659, %301
  %661 = sub i32 %660, %332
  %662 = add i32 %661, %396
  %663 = add i32 %662, %397
  %664 = sub i32 %663, %398
  %665 = sub i32 %664, %404
  %666 = sub i32 %665, %13
  %667 = sub i32 %666, %410
  %668 = sub i32 %667, %108
  %669 = sub i32 %668, %127
  %670 = sub i32 %669, %238
  %671 = add i32 %670, %312
  %672 = add i32 %671, %320
  %673 = add i32 %672, %325
  %674 = add i32 %673, %334
  %675 = sub i32 %674, %337
  %676 = add i32 %675, %339
  %677 = add i32 %676, %340
  %678 = add i32 %677, %343
  %679 = sub i32 %678, %344
  %680 = add i32 %679, %348
  %681 = sub i32 %680, %353
  %682 = add i32 %681, %359
  %683 = add i32 %682, %363
  %684 = add i32 %683, %370
  %685 = add i32 %684, %371
  %686 = sub i32 %685, %375
  %687 = sub i32 %686, %378
  %688 = add i32 %687, %379
  %689 = sub i32 %688, %381
  %690 = add i32 %689, %382
  %691 = add i32 %690, %383
  %692 = add i32 %691, %388
  %693 = add i32 %692, %389
  %694 = add i32 %693, %390
  %695 = sub i32 %694, %391
  %696 = sub i32 %695, %392
  %697 = add i32 %696, %393
  %698 = sub i32 %697, %394
  %699 = add i32 %698, %395
  %700 = add i32 %699, %364
  %701 = sub i32 %700, %403
  %702 = sub i32 %701, %405
  %703 = add i32 %702, %406
  %704 = add i32 %703, %407
  %705 = sub i32 %704, %409
  %706 = sub i32 %705, %411
  %707 = add i32 %706, %412
  %708 = sub i32 %707, %413
  %709 = add i32 %708, %414
  %710 = sub i32 %709, %304
  %711 = add i32 %710, %309
  %712 = add i32 %711, %316
  %713 = sub i32 %712, %330
  %714 = sub i32 %713, %351
  %715 = sub i32 %714, %357
  %716 = add i32 %715, %361
  %717 = sub i32 %716, %365
  %718 = sub i32 %717, %385
  %719 = add i32 %718, %387
  %720 = sub i32 %719, %400
  %721 = add i32 %720, %416
  %722 = add i32 %721, %419
  %723 = sub i32 %722, %421
  %724 = sub i32 %723, %423
  %725 = sub i32 %724, %424
  %726 = add i32 %725, %464
  %727 = add i32 %726, %453
  %728 = add i32 %727, %458
  %729 = add i32 %728, %462
  %730 = add i32 %729, %447
  %731 = icmp eq i32 %17, %730
  %732 = select i1 %731, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %733 = tail call i32 @puts(i8* nonnull dereferenceable(1) %732)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
