digraph "DFG for'main' function" {
	Node0x124fd98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x124fe18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x124fea8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1250308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x12503e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1250508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1250740[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x12507f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1251768[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1251df0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1251e60[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1251ed0[shape=record, label="  %10 = xor i32 %7, %6"];
	Node0x1251f40[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x1251fb0[shape=record, label="  %12 = or i32 %7, %6"];
	Node0x1252020[shape=record, label="  %13 = and i32 %6, %8"];
	Node0x1252090[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1252100[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1252170[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x12521e0[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0x1252250[shape=record, label="  %18 = xor i32 %9, -1"];
	Node0x12522c0[shape=record, label="  %19 = and i32 %7, %6"];
	Node0x1252330[shape=record, label="  %20 = add i32 %18, %17"];
	Node0x12523a0[shape=record, label="  %21 = mul i32 %20, -5"];
	Node0x1252410[shape=record, label="  %22 = shl i32 %6, 1"];
	Node0x1252480[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x12524f0[shape=record, label="  %24 = add i32 %23, %8"];
	Node0x1252560[shape=record, label="  %25 = sub i32 %24, %12"];
	Node0x12525d0[shape=record, label="  %26 = add i32 %25, %16"];
	Node0x1252640[shape=record, label="  %27 = sub i32 %26, %13"];
	Node0x12526b0[shape=record, label="  %28 = sub i32 %27, %19"];
	Node0x1252720[shape=record, label="  %29 = add i32 %28, %11"];
	Node0x1252790[shape=record, label="  %30 = add i32 %29, %15"];
	Node0x1252800[shape=record, label="  %31 = add i32 %30, %21"];
	Node0x1252870[shape=record, label="  %32 = icmp eq i32 %9, %31"];
	Node0x11f09d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1252b10[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x1252d68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1252ec8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1252f88[shape=record, label="  ret i32 0"];
	Node0x124fd98 -> Node0x124fe18;
	Node0x124fe18 -> Node0x124fea8;
	Node0x124fea8 -> Node0x1250308;
	Node0x1250308 -> Node0x12503e8;
	Node0x12503e8 -> Node0x1250508;
	Node0x1250508 -> Node0x1250740;
	Node0x1250740 -> Node0x12507f8;
	Node0x12507f8 -> Node0x1251768;
	Node0x1251768 -> Node0x1251df0;
	Node0x1251df0 -> Node0x1251e60;
	Node0x1251e60 -> Node0x1251ed0;
	Node0x1251ed0 -> Node0x1251f40;
	Node0x1251f40 -> Node0x1251fb0;
	Node0x1251fb0 -> Node0x1252020;
	Node0x1252020 -> Node0x1252090;
	Node0x1252090 -> Node0x1252100;
	Node0x1252100 -> Node0x1252170;
	Node0x1252170 -> Node0x12521e0;
	Node0x12521e0 -> Node0x1252250;
	Node0x1252250 -> Node0x12522c0;
	Node0x12522c0 -> Node0x1252330;
	Node0x1252330 -> Node0x12523a0;
	Node0x12523a0 -> Node0x1252410;
	Node0x1252410 -> Node0x1252480;
	Node0x1252480 -> Node0x12524f0;
	Node0x12524f0 -> Node0x1252560;
	Node0x1252560 -> Node0x12525d0;
	Node0x12525d0 -> Node0x1252640;
	Node0x1252640 -> Node0x12526b0;
	Node0x12526b0 -> Node0x1252720;
	Node0x1252720 -> Node0x1252790;
	Node0x1252790 -> Node0x1252800;
	Node0x1252800 -> Node0x1252870;
	Node0x1252870 -> Node0x11f09d8;
	Node0x11f09d8 -> Node0x1252b10;
	Node0x1252b10 -> Node0x1252d68;
	Node0x1252d68 -> Node0x1252ec8;
	Node0x1252ec8 -> Node0x1252f88;
edge [color=red]
	Node0x124fd98 -> Node0x124fea8;
	Node0x124fea8 -> Node0x1250308;
	Node0x124fe18 -> Node0x12503e8;
	Node0x12503e8 -> Node0x1250508;
	Node0x124fd98 -> Node0x1250740;
	Node0x124fe18 -> Node0x1250740;
	Node0x124fd98 -> Node0x12507f8;
	Node0x124fe18 -> Node0x1251768;
	Node0x1251768 -> Node0x1251df0;
	Node0x12507f8 -> Node0x1251e60;
	Node0x1251df0 -> Node0x1251e60;
	Node0x1251768 -> Node0x1251ed0;
	Node0x12507f8 -> Node0x1251ed0;
	Node0x1251ed0 -> Node0x1251f40;
	Node0x1251768 -> Node0x1251fb0;
	Node0x12507f8 -> Node0x1251fb0;
	Node0x12507f8 -> Node0x1252020;
	Node0x1251df0 -> Node0x1252020;
	Node0x1252020 -> Node0x1252090;
	Node0x1252090 -> Node0x1252100;
	Node0x1251ed0 -> Node0x1252170;
	Node0x1251fb0 -> Node0x12521e0;
	Node0x1251e60 -> Node0x1252250;
	Node0x1251768 -> Node0x12522c0;
	Node0x12507f8 -> Node0x12522c0;
	Node0x1252250 -> Node0x1252330;
	Node0x12521e0 -> Node0x1252330;
	Node0x1252330 -> Node0x12523a0;
	Node0x12507f8 -> Node0x1252410;
	Node0x1252410 -> Node0x1252480;
	Node0x1252480 -> Node0x12524f0;
	Node0x1251df0 -> Node0x12524f0;
	Node0x12524f0 -> Node0x1252560;
	Node0x1251fb0 -> Node0x1252560;
	Node0x1252560 -> Node0x12525d0;
	Node0x1252170 -> Node0x12525d0;
	Node0x12525d0 -> Node0x1252640;
	Node0x1252020 -> Node0x1252640;
	Node0x1252640 -> Node0x12526b0;
	Node0x12522c0 -> Node0x12526b0;
	Node0x12526b0 -> Node0x1252720;
	Node0x1251f40 -> Node0x1252720;
	Node0x1252720 -> Node0x1252790;
	Node0x1252100 -> Node0x1252790;
	Node0x1252790 -> Node0x1252800;
	Node0x12523a0 -> Node0x1252800;
	Node0x1251e60 -> Node0x1252870;
	Node0x1252800 -> Node0x1252870;
	Node0x1252870 -> Node0x11f09d8;
	Node0x11f09d8 -> Node0x1252b10;
	Node0x12503e8 -> Node0x1252d68;
	Node0x124fea8 -> Node0x1252ec8;
}
