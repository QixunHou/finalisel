; ModuleID = '../.././c_source_file/1447_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1447_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = or i32 %7, %1
  %9 = xor i32 %8, -1
  %10 = or i32 %9, %0
  %11 = xor i32 %5, -1
  %12 = and i32 %11, %4
  %13 = xor i32 %12, -1
  %14 = sub i32 %13, %10
  %15 = xor i32 %1, -1
  %16 = or i32 %15, %0
  %17 = xor i32 %16, -1
  %18 = xor i32 %2, %0
  %19 = xor i32 %18, -1
  %20 = or i32 %19, %17
  %21 = and i32 %1, %0
  %22 = xor i32 %21, -1
  %23 = xor i32 %2, %1
  %24 = xor i32 %23, -1
  %25 = and i32 %24, %22
  %26 = or i32 %7, %0
  %27 = xor i32 %26, -1
  %28 = or i32 %21, %27
  %29 = or i32 %1, %0
  %30 = xor i32 %29, -1
  %31 = or i32 %19, %30
  %32 = xor i32 %0, -1
  %33 = and i32 %2, %1
  %34 = and i32 %33, %32
  %35 = or i32 %2, %1
  %36 = and i32 %35, %0
  %37 = xor i32 %36, -1
  %38 = xor i32 %34, %37
  %39 = or i32 %2, %0
  %40 = xor i32 %39, -1
  %41 = or i32 %21, %40
  %42 = and i32 %2, %0
  %43 = or i32 %42, %1
  %44 = shl i32 %43, 1
  %45 = and i32 %23, %0
  %46 = or i32 %34, %45
  %47 = shl i32 %46, 2
  %48 = or i32 %27, %15
  %49 = or i32 %8, %0
  %50 = and i32 %15, %2
  %51 = and i32 %50, %0
  %52 = or i32 %15, %2
  %53 = and i32 %52, %32
  %54 = xor i32 %53, -1
  %55 = xor i32 %51, %54
  %56 = xor i32 %1, %0
  %57 = xor i32 %56, -1
  %58 = or i32 %7, %57
  %59 = and i32 %26, %1
  %60 = or i32 %19, %1
  %61 = and i32 %7, %1
  %62 = xor i32 %61, -1
  %63 = add i32 %61, 1
  %64 = or i32 %51, %53
  %65 = and i32 %8, %32
  %66 = and i32 %7, %0
  %67 = xor i32 %66, -1
  %68 = and i32 %67, %57
  %69 = or i32 %57, %2
  %70 = and i32 %23, %22
  %71 = shl i32 %70, 1
  %72 = and i32 %15, %0
  %73 = xor i32 %72, -1
  %74 = or i32 %40, %15
  %75 = xor i32 %8, %21
  %76 = or i32 %21, %7
  %77 = and i32 %56, %7
  %78 = or i32 %24, %17
  %79 = or i32 %17, %2
  %80 = xor i32 %33, %0
  %81 = and i32 %24, %73
  %82 = xor i32 %33, -1
  %83 = and i32 %82, %0
  %84 = and i32 %39, %57
  %85 = or i32 %18, %57
  %86 = and i32 %24, %0
  %87 = and i32 %16, %24
  %88 = xor i32 %35, %21
  %89 = and i32 %50, %32
  %90 = and i32 %52, %0
  %91 = or i32 %89, %90
  %92 = xor i32 %27, %1
  %93 = xor i32 %16, %2
  %94 = and i32 %29, %19
  %95 = shl i32 %94, 1
  %96 = add i32 %21, 1
  %97 = xor i32 %42, -1
  %98 = and i32 %97, %15
  %99 = or i32 %18, %15
  %100 = or i32 %23, %0
  %101 = xor i32 %51, %100
  %102 = xor i32 %35, -1
  %103 = or i32 %21, %102
  %104 = or i32 %23, %72
  %105 = and i32 %7, %73
  %106 = xor i32 %42, %62
  %107 = and i32 %56, %19
  %108 = and i32 %33, %0
  %109 = or i32 %102, %0
  %110 = xor i32 %108, %109
  %111 = xor i32 %35, %0
  %112 = or i32 %108, %111
  %113 = and i32 %29, %7
  %114 = and i32 %18, %22
  %115 = and i32 %22, %2
  %116 = or i32 %7, %17
  %117 = or i32 %21, %19
  %118 = or i32 %19, %57
  %119 = or i32 %66, %56
  %120 = or i32 %23, %32
  %121 = and i32 %23, %32
  %122 = xor i32 %89, %120
  %123 = or i32 %33, %32
  %124 = xor i32 %24, %0
  %125 = and i32 %62, %32
  %126 = and i32 %26, %57
  %127 = shl i32 %126, 2
  %128 = and i32 %16, %19
  %129 = xor i32 %21, %2
  %130 = and i32 %56, %97
  %131 = xor i32 %121, -1
  %132 = xor i32 %108, %131
  %133 = xor i32 %120, -1
  %134 = or i32 %89, %133
  %135 = and i32 %39, %15
  %136 = or i32 %18, %21
  %137 = and i32 %18, %16
  %138 = shl i32 %137, 1
  %139 = and i32 %39, %1
  %140 = xor i32 %97, %1
  %141 = or i32 %24, %32
  %142 = or i32 %42, %30
  %143 = and i32 %102, %32
  %144 = mul i32 %143, -7
  %145 = and i32 %61, %32
  %146 = and i32 %61, %0
  %147 = mul i32 %146, 10
  %148 = and i32 %9, %32
  %149 = and i32 %9, %0
  %150 = mul i32 %149, 9
  %151 = or i32 %4, %3
  %152 = xor i32 %151, -1
  %153 = xor i32 %5, %4
  %154 = xor i32 %153, -1
  %155 = or i32 %154, %152
  %156 = xor i32 %5, %3
  %157 = xor i32 %156, -1
  %158 = and i32 %151, %157
  %159 = xor i32 %3, -1
  %160 = or i32 %5, %4
  %161 = xor i32 %160, -1
  %162 = or i32 %161, %159
  %163 = or i32 %11, %152
  %164 = or i32 %159, %4
  %165 = xor i32 %164, %5
  %166 = or i32 %12, %3
  %167 = and i32 %4, %3
  %168 = or i32 %11, %4
  %169 = xor i32 %168, %167
  %170 = and i32 %154, %3
  %171 = xor i32 %4, -1
  %172 = and i32 %5, %3
  %173 = and i32 %172, %171
  %174 = and i32 %156, %4
  %175 = xor i32 %174, -1
  %176 = xor i32 %173, %175
  %177 = and i32 %160, %159
  %178 = and i32 %5, %4
  %179 = xor i32 %178, %3
  %180 = or i32 %167, %154
  %181 = or i32 %153, %3
  %182 = xor i32 %161, %3
  %183 = or i32 %178, %159
  %184 = and i32 %159, %4
  %185 = or i32 %184, %157
  %186 = xor i32 %4, %3
  %187 = and i32 %160, %186
  %188 = and i32 %156, %164
  %189 = or i32 %5, %3
  %190 = xor i32 %189, -1
  %191 = add i32 %189, 1
  %192 = xor i32 %178, %151
  %193 = xor i32 %172, -1
  %194 = and i32 %11, %3
  %195 = xor i32 %194, -1
  %196 = and i32 %195, %4
  %197 = and i32 %164, %11
  %198 = xor i32 %164, -1
  %199 = or i32 %198, %5
  %200 = xor i32 %168, -1
  %201 = or i32 %200, %3
  %202 = or i32 %11, %3
  %203 = xor i32 %202, -1
  %204 = xor i32 %203, %4
  %205 = shl i32 %204, 1
  %206 = xor i32 %186, -1
  %207 = and i32 %168, %206
  %208 = and i32 %164, %5
  %209 = and i32 %159, %5
  %210 = and i32 %209, %171
  %211 = or i32 %159, %5
  %212 = and i32 %211, %4
  %213 = or i32 %210, %212
  %214 = or i32 %12, %159
  %215 = or i32 %11, %206
  %216 = or i32 %153, %198
  %217 = xor i32 %167, -1
  %218 = and i32 %156, %217
  %219 = or i32 %156, %184
  %220 = and i32 %209, %4
  %221 = xor i32 %156, %4
  %222 = xor i32 %221, -1
  %223 = xor i32 %220, %222
  %224 = or i32 %184, %154
  %225 = or i32 %178, %206
  %226 = and i32 %151, %5
  %227 = or i32 %157, %152
  %228 = xor i32 %184, -1
  %229 = and i32 %11, %228
  %230 = shl i32 %229, 1
  %231 = xor i32 %189, %167
  %232 = or i32 %153, %206
  %233 = xor i32 %167, %5
  %234 = or i32 %178, %186
  %235 = or i32 %152, %5
  %236 = shl i32 %235, 1
  %237 = xor i32 %12, %202
  %238 = and i32 %156, %151
  %239 = or i32 %167, %5
  %240 = or i32 %161, %3
  %241 = and i32 %160, %206
  %242 = or i32 %189, %4
  %243 = xor i32 %152, %5
  %244 = xor i32 %217, %5
  %245 = and i32 %195, %171
  %246 = and i32 %153, %228
  %247 = and i32 %160, %3
  %248 = shl i32 %4, 1
  %249 = and i32 %172, %4
  %250 = and i32 %156, %171
  %251 = xor i32 %249, -1
  %252 = xor i32 %250, %251
  %253 = shl i32 %167, 1
  %254 = or i32 %178, %190
  %255 = xor i32 %194, %4
  %256 = xor i32 %202, %167
  %257 = shl i32 %256, 2
  %258 = or i32 %200, %206
  %259 = add i32 %153, 1
  %260 = and i32 %157, %4
  %261 = xor i32 %211, %4
  %262 = xor i32 %261, -1
  %263 = xor i32 %220, %262
  %264 = or i32 %156, %4
  %265 = and i32 %11, %217
  %266 = shl i32 %265, 1
  %267 = or i32 %12, %206
  %268 = or i32 %195, %171
  %269 = or i32 %186, %161
  %270 = or i32 %153, %159
  %271 = and i32 %164, %154
  %272 = xor i32 %12, %3
  %273 = and i32 %202, %4
  %274 = xor i32 %228, %5
  %275 = or i32 %153, %184
  %276 = shl i32 %275, 1
  %277 = or i32 %153, %186
  %278 = or i32 %194, %4
  %279 = or i32 %195, %4
  %280 = and i32 %189, %171
  %281 = or i32 %249, %280
  %282 = or i32 %184, %5
  %283 = and i32 %151, %11
  %284 = add i32 %202, 1
  %285 = or i32 %194, %184
  %286 = and i32 %153, %151
  %287 = and i32 %168, %3
  %288 = or i32 %157, %198
  %289 = xor i32 %178, -1
  %290 = and i32 %289, %3
  %291 = and i32 %189, %4
  %292 = or i32 %173, %291
  %293 = or i32 %154, %206
  %294 = shl i32 %293, 1
  %295 = xor i32 %184, %193
  %296 = xor i32 %220, %264
  %297 = or i32 %190, %4
  %298 = and i32 %157, %228
  %299 = shl i32 %298, 2
  %300 = and i32 %186, %154
  %301 = or i32 %178, %152
  %302 = shl i32 %301, 1
  %303 = or i32 %178, %198
  %304 = shl i32 %303, 1
  %305 = or i32 %202, %171
  %306 = and i32 %151, %154
  %307 = or i32 %249, %250
  %308 = xor i32 %189, %4
  %309 = xor i32 %308, %251
  %310 = or i32 %153, %167
  %311 = or i32 %249, %308
  %312 = shl i32 %311, 1
  %313 = or i32 %220, %221
  %314 = shl i32 %313, 1
  %315 = or i32 %12, %186
  %316 = shl i32 %228, 1
  %317 = xor i32 %316, -1
  %318 = and i32 %153, %164
  %319 = or i32 %11, %198
  %320 = xor i32 %178, %189
  %321 = or i32 %156, %167
  %322 = or i32 %167, %161
  %323 = and i32 %289, %159
  %324 = or i32 %12, %203
  %325 = or i32 %172, %171
  %326 = xor i32 %12, %193
  %327 = or i32 %154, %198
  %328 = add i32 %186, 1
  %329 = and i32 %11, %206
  %330 = or i32 %178, %3
  %331 = or i32 %153, %152
  %332 = shl i32 %331, 1
  %333 = or i32 %156, %171
  %334 = xor i32 %333, -1
  %335 = or i32 %210, %334
  %336 = xor i32 %193, %4
  %337 = xor i32 %184, %5
  %338 = and i32 %168, %159
  %339 = and i32 %202, %171
  %340 = and i32 %164, %157
  %341 = or i32 %190, %171
  %342 = or i32 %184, %11
  %343 = or i32 %202, %4
  %344 = or i32 %157, %4
  %345 = or i32 %186, %5
  %346 = or i32 %154, %3
  %347 = and i32 %156, %228
  %348 = shl i32 %164, 1
  %349 = add i32 %5, 1
  %350 = and i32 %13, %159
  %351 = xor i32 %264, -1
  %352 = or i32 %220, %351
  %353 = or i32 %12, %172
  %354 = xor i32 %172, %4
  %355 = or i32 %167, %190
  %356 = or i32 %161, %206
  %357 = shl i32 %356, 1
  %358 = and i32 %154, %159
  %359 = xor i32 %157, %4
  %360 = shl i32 %359, 2
  %361 = or i32 %178, %194
  %362 = xor i32 %184, %195
  %363 = and i32 %228, %5
  %364 = or i32 %157, %171
  %365 = shl i32 %364, 1
  %366 = and i32 %217, %5
  %367 = shl i32 %366, 1
  %368 = and i32 %153, %186
  %369 = and i32 %153, %159
  %370 = add i32 %178, 1
  %371 = and i32 %186, %13
  %372 = xor i32 %151, %5
  %373 = xor i32 %13, %3
  %374 = and i32 %13, %206
  %375 = xor i32 %212, -1
  %376 = xor i32 %210, %375
  %377 = or i32 %167, %157
  %378 = or i32 %167, %203
  %379 = xor i32 %178, %164
  %380 = and i32 %154, %217
  %381 = and i32 %153, %217
  %382 = or i32 %220, %261
  %383 = and i32 %168, %186
  %384 = or i32 %203, %171
  %385 = and i32 %157, %171
  %386 = shl i32 %161, 1
  %387 = or i32 %206, %5
  %388 = xor i32 %168, %3
  %389 = or i32 %167, %200
  %390 = or i32 %249, %222
  %391 = shl i32 %291, 1
  %392 = xor i32 %160, %3
  %393 = and i32 %154, %206
  %394 = and i32 %186, %289
  %395 = shl i32 %394, 1
  %396 = xor i32 %289, %3
  %397 = and i32 %193, %171
  %398 = and i32 %211, %171
  %399 = or i32 %220, %398
  %400 = shl i32 %5, 1
  %401 = xor i32 %178, %195
  %402 = shl i32 %401, 1
  %403 = or i32 %172, %184
  %404 = and i32 %154, %228
  %405 = or i32 %186, %154
  %406 = or i32 %193, %4
  %407 = and i32 %157, %217
  %408 = and i32 %193, %4
  %409 = or i32 %186, %200
  %410 = xor i32 %200, %3
  %411 = or i32 %203, %4
  %412 = xor i32 %190, %4
  %413 = and i32 %190, %171
  %414 = and i32 %194, %171
  %415 = and i32 %190, %4
  %416 = mul i32 %415, -11
  %417 = and i32 %194, %4
  %418 = mul i32 %417, 15
  %419 = and i32 %203, %171
  %420 = mul i32 %173, 21
  %421 = and i32 %203, %4
  %422 = mul i32 %249, 20
  %423 = add i32 %57, %32
  %424 = add i32 %423, %69
  %425 = add i32 %424, %108
  %426 = add i32 %425, %135
  %427 = add i32 %426, %125
  %428 = add i32 %427, %106
  %429 = add i32 %428, %78
  %430 = add i32 %429, %60
  %431 = add i32 %430, %184
  %432 = add i32 %431, %152
  %433 = add i32 %432, %91
  %434 = add i32 %433, %387
  %435 = add i32 %434, %342
  %436 = add i32 %435, %195
  %437 = add i32 %436, %193
  %438 = add i32 %437, %165
  %439 = add i32 %438, %392
  %440 = add i32 %439, %385
  %441 = add i32 %440, %280
  %442 = add i32 %441, %347
  %443 = add i32 %442, %318
  %444 = add i32 %443, %300
  %445 = add i32 %444, %247
  %446 = add i32 %445, %234
  %447 = add i32 %446, %201
  %448 = add i32 %447, %196
  %449 = add i32 %448, %188
  %450 = add i32 %449, %183
  %451 = add i32 %450, %180
  %452 = add i32 %451, %169
  %453 = add i32 %452, %166
  %454 = add i32 %453, %223
  %455 = add i32 %454, %382
  %456 = shl i32 %455, 1
  %457 = sub i32 %92, %34
  %458 = add i32 %457, %65
  %459 = add i32 %458, %419
  %460 = add i32 %459, %405
  %461 = sub i32 %460, %362
  %462 = add i32 %461, %323
  %463 = add i32 %462, %277
  %464 = sub i32 %463, %174
  %465 = add i32 %464, %241
  %466 = sub i32 %465, %192
  %467 = sub i32 %466, %309
  %468 = mul i32 %467, 3
  %469 = sub i32 %414, %85
  %470 = sub i32 %469, %273
  %471 = sub i32 %470, %252
  %472 = mul i32 %471, 5
  %473 = sub i32 %413, %148
  %474 = mul i32 %473, 12
  %475 = add i32 %338, %145
  %476 = shl i32 %475, 2
  %477 = sub i32 %72, %0
  %478 = add i32 %477, %96
  %479 = add i32 %478, %58
  %480 = add i32 %479, %63
  %481 = sub i32 %480, %76
  %482 = sub i32 %481, %77
  %483 = add i32 %482, %9
  %484 = sub i32 %483, %79
  %485 = add i32 %484, %93
  %486 = add i32 %485, %39
  %487 = sub i32 %486, %105
  %488 = add i32 %487, %113
  %489 = add i32 %488, %115
  %490 = add i32 %489, %116
  %491 = sub i32 %490, %42
  %492 = add i32 %491, %129
  %493 = add i32 %492, %159
  %494 = sub i32 %493, %25
  %495 = sub i32 %494, %20
  %496 = add i32 %495, %28
  %497 = add i32 %496, %31
  %498 = add i32 %497, %41
  %499 = add i32 %498, %48
  %500 = sub i32 %499, %49
  %501 = add i32 %500, %59
  %502 = add i32 %501, %68
  %503 = sub i32 %502, %74
  %504 = sub i32 %503, %75
  %505 = add i32 %504, %80
  %506 = sub i32 %505, %81
  %507 = sub i32 %506, %83
  %508 = sub i32 %507, %84
  %509 = sub i32 %508, %45
  %510 = sub i32 %509, %86
  %511 = add i32 %510, %87
  %512 = add i32 %511, %88
  %513 = add i32 %512, %98
  %514 = add i32 %513, %99
  %515 = add i32 %514, %103
  %516 = sub i32 %515, %104
  %517 = sub i32 %516, %107
  %518 = sub i32 %517, %100
  %519 = add i32 %518, %114
  %520 = add i32 %519, %117
  %521 = sub i32 %520, %118
  %522 = sub i32 %521, %119
  %523 = sub i32 %522, %120
  %524 = sub i32 %523, %121
  %525 = sub i32 %524, %123
  %526 = add i32 %525, %124
  %527 = sub i32 %526, %128
  %528 = add i32 %527, %130
  %529 = sub i32 %528, %136
  %530 = add i32 %529, %139
  %531 = add i32 %530, %140
  %532 = add i32 %531, %141
  %533 = add i32 %532, %142
  %534 = add i32 %533, %171
  %535 = add i32 %534, %38
  %536 = sub i32 %535, %44
  %537 = sub i32 %536, %55
  %538 = sub i32 %537, %64
  %539 = sub i32 %538, %71
  %540 = sub i32 %539, %95
  %541 = sub i32 %540, %101
  %542 = sub i32 %541, %110
  %543 = sub i32 %542, %112
  %544 = sub i32 %543, %122
  %545 = sub i32 %544, %127
  %546 = sub i32 %545, %132
  %547 = add i32 %546, %134
  %548 = sub i32 %547, %138
  %549 = add i32 %548, %144
  %550 = add i32 %549, %147
  %551 = add i32 %550, %150
  %552 = add i32 %551, %186
  %553 = sub i32 %552, %151
  %554 = sub i32 %553, %248
  %555 = add i32 %554, %198
  %556 = add i32 %555, %328
  %557 = add i32 %556, %349
  %558 = add i32 %557, %217
  %559 = sub i32 %558, %47
  %560 = add i32 %559, %163
  %561 = sub i32 %560, %160
  %562 = add i32 %561, %191
  %563 = add i32 %562, %197
  %564 = add i32 %563, %199
  %565 = add i32 %564, %202
  %566 = add i32 %565, %208
  %567 = sub i32 %566, %172
  %568 = add i32 %567, %215
  %569 = sub i32 %568, %226
  %570 = sub i32 %569, %233
  %571 = add i32 %570, %200
  %572 = add i32 %571, %239
  %573 = sub i32 %572, %243
  %574 = add i32 %573, %244
  %575 = sub i32 %574, %253
  %576 = add i32 %575, %259
  %577 = add i32 %576, %274
  %578 = sub i32 %577, %282
  %579 = sub i32 %578, %283
  %580 = add i32 %579, %284
  %581 = sub i32 %580, %168
  %582 = add i32 %581, %317
  %583 = add i32 %582, %319
  %584 = add i32 %583, %329
  %585 = add i32 %584, %178
  %586 = sub i32 %585, %153
  %587 = sub i32 %586, %337
  %588 = add i32 %587, %345
  %589 = add i32 %588, %189
  %590 = sub i32 %589, %348
  %591 = add i32 %590, %363
  %592 = add i32 %591, %194
  %593 = add i32 %592, %156
  %594 = add i32 %593, %370
  %595 = add i32 %594, %372
  %596 = sub i32 %595, %400
  %597 = add i32 %596, %12
  %598 = sub i32 %597, %155
  %599 = add i32 %598, %158
  %600 = sub i32 %599, %162
  %601 = add i32 %600, %170
  %602 = add i32 %601, %177
  %603 = sub i32 %602, %179
  %604 = add i32 %603, %181
  %605 = add i32 %604, %182
  %606 = sub i32 %605, %185
  %607 = add i32 %606, %187
  %608 = sub i32 %607, %207
  %609 = sub i32 %608, %214
  %610 = add i32 %609, %216
  %611 = sub i32 %610, %218
  %612 = sub i32 %611, %219
  %613 = add i32 %612, %224
  %614 = sub i32 %613, %225
  %615 = sub i32 %614, %227
  %616 = sub i32 %615, %230
  %617 = add i32 %616, %231
  %618 = sub i32 %617, %232
  %619 = sub i32 %618, %236
  %620 = add i32 %619, %237
  %621 = sub i32 %620, %238
  %622 = sub i32 %621, %240
  %623 = add i32 %622, %242
  %624 = sub i32 %623, %245
  %625 = add i32 %624, %246
  %626 = add i32 %625, %254
  %627 = sub i32 %626, %255
  %628 = sub i32 %627, %258
  %629 = add i32 %628, %260
  %630 = add i32 %629, %264
  %631 = sub i32 %630, %266
  %632 = add i32 %631, %267
  %633 = add i32 %632, %268
  %634 = add i32 %633, %269
  %635 = add i32 %634, %270
  %636 = add i32 %635, %271
  %637 = add i32 %636, %272
  %638 = sub i32 %637, %278
  %639 = sub i32 %638, %279
  %640 = sub i32 %639, %285
  %641 = add i32 %640, %286
  %642 = sub i32 %641, %287
  %643 = sub i32 %642, %288
  %644 = sub i32 %643, %290
  %645 = sub i32 %644, %295
  %646 = sub i32 %645, %250
  %647 = add i32 %646, %297
  %648 = sub i32 %647, %305
  %649 = add i32 %648, %306
  %650 = sub i32 %649, %221
  %651 = add i32 %650, %310
  %652 = add i32 %651, %315
  %653 = add i32 %652, %320
  %654 = sub i32 %653, %321
  %655 = sub i32 %654, %322
  %656 = add i32 %655, %324
  %657 = sub i32 %656, %325
  %658 = add i32 %657, %326
  %659 = add i32 %658, %327
  %660 = sub i32 %659, %330
  %661 = sub i32 %660, %336
  %662 = sub i32 %661, %339
  %663 = add i32 %662, %340
  %664 = sub i32 %663, %341
  %665 = add i32 %664, %343
  %666 = sub i32 %665, %344
  %667 = sub i32 %666, %346
  %668 = sub i32 %667, %350
  %669 = sub i32 %668, %353
  %670 = sub i32 %669, %354
  %671 = add i32 %670, %355
  %672 = sub i32 %671, %308
  %673 = add i32 %672, %358
  %674 = sub i32 %673, %361
  %675 = sub i32 %674, %367
  %676 = add i32 %675, %368
  %677 = add i32 %676, %369
  %678 = sub i32 %677, %371
  %679 = add i32 %678, %373
  %680 = add i32 %679, %374
  %681 = add i32 %680, %377
  %682 = add i32 %681, %378
  %683 = add i32 %682, %379
  %684 = add i32 %683, %380
  %685 = sub i32 %684, %333
  %686 = sub i32 %685, %381
  %687 = sub i32 %686, %383
  %688 = sub i32 %687, %384
  %689 = sub i32 %688, %386
  %690 = sub i32 %689, %388
  %691 = sub i32 %690, %389
  %692 = add i32 %691, %393
  %693 = add i32 %692, %396
  %694 = sub i32 %693, %397
  %695 = sub i32 %694, %403
  %696 = add i32 %695, %404
  %697 = sub i32 %696, %406
  %698 = add i32 %697, %407
  %699 = add i32 %698, %408
  %700 = add i32 %699, %409
  %701 = sub i32 %700, %410
  %702 = sub i32 %701, %411
  %703 = add i32 %702, %412
  %704 = add i32 %703, %421
  %705 = sub i32 %704, %176
  %706 = sub i32 %705, %205
  %707 = add i32 %706, %213
  %708 = sub i32 %707, %257
  %709 = add i32 %708, %263
  %710 = sub i32 %709, %276
  %711 = sub i32 %710, %281
  %712 = sub i32 %711, %292
  %713 = sub i32 %712, %294
  %714 = add i32 %713, %296
  %715 = sub i32 %714, %299
  %716 = sub i32 %715, %302
  %717 = sub i32 %716, %304
  %718 = sub i32 %717, %307
  %719 = sub i32 %718, %332
  %720 = add i32 %719, %335
  %721 = add i32 %720, %352
  %722 = sub i32 %721, %357
  %723 = sub i32 %722, %360
  %724 = sub i32 %723, %365
  %725 = add i32 %724, %376
  %726 = sub i32 %725, %390
  %727 = sub i32 %726, %391
  %728 = sub i32 %727, %395
  %729 = sub i32 %728, %399
  %730 = sub i32 %729, %402
  %731 = add i32 %730, %416
  %732 = add i32 %731, %418
  %733 = add i32 %732, %420
  %734 = add i32 %733, %422
  %735 = sub i32 %734, %312
  %736 = sub i32 %735, %314
  %737 = add i32 %736, %474
  %738 = add i32 %737, %476
  %739 = add i32 %738, %472
  %740 = add i32 %739, %468
  %741 = add i32 %740, %456
  %742 = icmp eq i32 %14, %741
  %743 = select i1 %742, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %744 = tail call i32 @puts(i8* nonnull dereferenceable(1) %743)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
