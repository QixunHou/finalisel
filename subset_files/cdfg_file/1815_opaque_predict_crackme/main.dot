digraph "DFG for'main' function" {
	Node0xa9b518[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xa9b598[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xa9b628[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xa9ba88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xa9bb68[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xa9bc88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa9bec0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xa9bf78[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xa9cee8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xa9d570[shape=record, label="  %8 = add i32 %7, %6"];
	Node0xa9d5e0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0xa9d650[shape=record, label="  %10 = or i32 %6, %9"];
	Node0xa9d6c0[shape=record, label="  %11 = xor i32 %6, -1"];
	Node0xa9d730[shape=record, label="  %12 = and i32 %7, %11"];
	Node0xa9d7a0[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xa9d810[shape=record, label="  %14 = or i32 %7, %6"];
	Node0xa9d880[shape=record, label="  %15 = add i32 %12, 1"];
	Node0xa9d8f0[shape=record, label="  %16 = add i32 %15, %10"];
	Node0xa9d960[shape=record, label="  %17 = add i32 %16, %13"];
	Node0xa9d9d0[shape=record, label="  %18 = add i32 %17, %14"];
	Node0xa9da40[shape=record, label="  %19 = icmp eq i32 %8, %18"];
	Node0xa3c9d8[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xa9dad0[shape=record, label="  %21 = call i32 @puts(i8* nonnull dereferenceable(1) %20) #5"];
	Node0xa9dd28[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xa9de88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xa9df48[shape=record, label="  ret i32 0"];
	Node0xa9b518 -> Node0xa9b598;
	Node0xa9b598 -> Node0xa9b628;
	Node0xa9b628 -> Node0xa9ba88;
	Node0xa9ba88 -> Node0xa9bb68;
	Node0xa9bb68 -> Node0xa9bc88;
	Node0xa9bc88 -> Node0xa9bec0;
	Node0xa9bec0 -> Node0xa9bf78;
	Node0xa9bf78 -> Node0xa9cee8;
	Node0xa9cee8 -> Node0xa9d570;
	Node0xa9d570 -> Node0xa9d5e0;
	Node0xa9d5e0 -> Node0xa9d650;
	Node0xa9d650 -> Node0xa9d6c0;
	Node0xa9d6c0 -> Node0xa9d730;
	Node0xa9d730 -> Node0xa9d7a0;
	Node0xa9d7a0 -> Node0xa9d810;
	Node0xa9d810 -> Node0xa9d880;
	Node0xa9d880 -> Node0xa9d8f0;
	Node0xa9d8f0 -> Node0xa9d960;
	Node0xa9d960 -> Node0xa9d9d0;
	Node0xa9d9d0 -> Node0xa9da40;
	Node0xa9da40 -> Node0xa3c9d8;
	Node0xa3c9d8 -> Node0xa9dad0;
	Node0xa9dad0 -> Node0xa9dd28;
	Node0xa9dd28 -> Node0xa9de88;
	Node0xa9de88 -> Node0xa9df48;
edge [color=red]
	Node0xa9b518 -> Node0xa9b628;
	Node0xa9b628 -> Node0xa9ba88;
	Node0xa9b598 -> Node0xa9bb68;
	Node0xa9bb68 -> Node0xa9bc88;
	Node0xa9b518 -> Node0xa9bec0;
	Node0xa9b598 -> Node0xa9bec0;
	Node0xa9b518 -> Node0xa9bf78;
	Node0xa9b598 -> Node0xa9cee8;
	Node0xa9cee8 -> Node0xa9d570;
	Node0xa9bf78 -> Node0xa9d570;
	Node0xa9cee8 -> Node0xa9d5e0;
	Node0xa9bf78 -> Node0xa9d650;
	Node0xa9d5e0 -> Node0xa9d650;
	Node0xa9bf78 -> Node0xa9d6c0;
	Node0xa9cee8 -> Node0xa9d730;
	Node0xa9d6c0 -> Node0xa9d730;
	Node0xa9cee8 -> Node0xa9d7a0;
	Node0xa9bf78 -> Node0xa9d7a0;
	Node0xa9cee8 -> Node0xa9d810;
	Node0xa9bf78 -> Node0xa9d810;
	Node0xa9d730 -> Node0xa9d880;
	Node0xa9d880 -> Node0xa9d8f0;
	Node0xa9d650 -> Node0xa9d8f0;
	Node0xa9d8f0 -> Node0xa9d960;
	Node0xa9d7a0 -> Node0xa9d960;
	Node0xa9d960 -> Node0xa9d9d0;
	Node0xa9d810 -> Node0xa9d9d0;
	Node0xa9d570 -> Node0xa9da40;
	Node0xa9d9d0 -> Node0xa9da40;
	Node0xa9da40 -> Node0xa3c9d8;
	Node0xa3c9d8 -> Node0xa9dad0;
	Node0xa9bb68 -> Node0xa9dd28;
	Node0xa9b628 -> Node0xa9de88;
}
