digraph "DFG for'main' function" {
	Node0x2066c68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2066ce8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2066d78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x2066dd8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x2066e88[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x20672b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2067398[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x2067498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2067558[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x2067608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x20676c8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x2067778[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x20617a0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x2067978[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x20688e8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2068f58[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2068fb8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x20690c8[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x2069328[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x2069488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x2069598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x20696a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2069768[shape=record, label="  ret i32 0"];
	Node0x2066c68 -> Node0x2066ce8;
	Node0x2066ce8 -> Node0x2066d78;
	Node0x2066d78 -> Node0x2066dd8;
	Node0x2066dd8 -> Node0x2066e88;
	Node0x2066e88 -> Node0x20672b8;
	Node0x20672b8 -> Node0x2067398;
	Node0x2067398 -> Node0x2067498;
	Node0x2067498 -> Node0x2067558;
	Node0x2067558 -> Node0x2067608;
	Node0x2067608 -> Node0x20676c8;
	Node0x20676c8 -> Node0x2067778;
	Node0x2067778 -> Node0x20617a0;
	Node0x20617a0 -> Node0x2067978;
	Node0x2067978 -> Node0x20688e8;
	Node0x20688e8 -> Node0x2068f58;
	Node0x2068f58 -> Node0x2068fb8;
	Node0x2068fb8 -> Node0x20690c8;
	Node0x20690c8 -> Node0x2069328;
	Node0x2069328 -> Node0x2069488;
	Node0x2069488 -> Node0x2069598;
	Node0x2069598 -> Node0x20696a8;
	Node0x20696a8 -> Node0x2069768;
edge [color=red]
	Node0x2066c68 -> Node0x2066e88;
	Node0x2066e88 -> Node0x20672b8;
	Node0x2066ce8 -> Node0x2067398;
	Node0x2067398 -> Node0x2067498;
	Node0x2066d78 -> Node0x2067558;
	Node0x2067558 -> Node0x2067608;
	Node0x2066dd8 -> Node0x20676c8;
	Node0x20676c8 -> Node0x2067778;
	Node0x2066c68 -> Node0x20617a0;
	Node0x2066ce8 -> Node0x20617a0;
	Node0x2066d78 -> Node0x20617a0;
	Node0x2066dd8 -> Node0x20617a0;
	Node0x2066c68 -> Node0x2067978;
	Node0x2066ce8 -> Node0x20688e8;
	Node0x2066d78 -> Node0x2068f58;
	Node0x2066dd8 -> Node0x2068fb8;
	Node0x2067978 -> Node0x20690c8;
	Node0x20688e8 -> Node0x20690c8;
	Node0x2068f58 -> Node0x20690c8;
	Node0x2068fb8 -> Node0x20690c8;
	Node0x20676c8 -> Node0x2069328;
	Node0x2067558 -> Node0x2069488;
	Node0x2067398 -> Node0x2069598;
	Node0x2066e88 -> Node0x20696a8;
}
