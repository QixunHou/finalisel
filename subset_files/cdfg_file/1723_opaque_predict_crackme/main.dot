digraph "DFG for'main' function" {
	Node0x10faae8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x10fab68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x10fabf8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x10fac58[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x10fb0d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10fd6c8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x10fd7a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10fd868[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x10fd918[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10fdb78[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x10fdc38[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10feba8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10ff218[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x10ff310[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x10ff518[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10ff678[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10ff788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10ff848[shape=record, label="  ret i32 0"];
	Node0x10faae8 -> Node0x10fab68;
	Node0x10fab68 -> Node0x10fabf8;
	Node0x10fabf8 -> Node0x10fac58;
	Node0x10fac58 -> Node0x10fb0d8;
	Node0x10fb0d8 -> Node0x10fd6c8;
	Node0x10fd6c8 -> Node0x10fd7a8;
	Node0x10fd7a8 -> Node0x10fd868;
	Node0x10fd868 -> Node0x10fd918;
	Node0x10fd918 -> Node0x10fdb78;
	Node0x10fdb78 -> Node0x10fdc38;
	Node0x10fdc38 -> Node0x10feba8;
	Node0x10feba8 -> Node0x10ff218;
	Node0x10ff218 -> Node0x10ff310;
	Node0x10ff310 -> Node0x10ff518;
	Node0x10ff518 -> Node0x10ff678;
	Node0x10ff678 -> Node0x10ff788;
	Node0x10ff788 -> Node0x10ff848;
edge [color=red]
	Node0x10faae8 -> Node0x10fac58;
	Node0x10fac58 -> Node0x10fb0d8;
	Node0x10fab68 -> Node0x10fd6c8;
	Node0x10fd6c8 -> Node0x10fd7a8;
	Node0x10fabf8 -> Node0x10fd868;
	Node0x10fd868 -> Node0x10fd918;
	Node0x10faae8 -> Node0x10fdb78;
	Node0x10fab68 -> Node0x10fdb78;
	Node0x10fabf8 -> Node0x10fdb78;
	Node0x10faae8 -> Node0x10fdc38;
	Node0x10fab68 -> Node0x10feba8;
	Node0x10fabf8 -> Node0x10ff218;
	Node0x10fdc38 -> Node0x10ff310;
	Node0x10feba8 -> Node0x10ff310;
	Node0x10ff218 -> Node0x10ff310;
	Node0x10fd868 -> Node0x10ff518;
	Node0x10fd6c8 -> Node0x10ff678;
	Node0x10fac58 -> Node0x10ff788;
}
