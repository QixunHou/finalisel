digraph "DFG for'main' function" {
	Node0xcbfd28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xcbfda8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xcbfe38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xcbfe98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xcbff48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xcc0378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xcc0458[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xcc0558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xcc0618[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xcc06c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xcc0788[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xcc0838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xcba7c0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xcc0a38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xcc19a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xcc2018[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xcc2078[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xcc2188[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xcc23e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xcc2548[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xcc2658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xcc2768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xcc2828[shape=record, label="  ret i32 0"];
	Node0xcbfd28 -> Node0xcbfda8;
	Node0xcbfda8 -> Node0xcbfe38;
	Node0xcbfe38 -> Node0xcbfe98;
	Node0xcbfe98 -> Node0xcbff48;
	Node0xcbff48 -> Node0xcc0378;
	Node0xcc0378 -> Node0xcc0458;
	Node0xcc0458 -> Node0xcc0558;
	Node0xcc0558 -> Node0xcc0618;
	Node0xcc0618 -> Node0xcc06c8;
	Node0xcc06c8 -> Node0xcc0788;
	Node0xcc0788 -> Node0xcc0838;
	Node0xcc0838 -> Node0xcba7c0;
	Node0xcba7c0 -> Node0xcc0a38;
	Node0xcc0a38 -> Node0xcc19a8;
	Node0xcc19a8 -> Node0xcc2018;
	Node0xcc2018 -> Node0xcc2078;
	Node0xcc2078 -> Node0xcc2188;
	Node0xcc2188 -> Node0xcc23e8;
	Node0xcc23e8 -> Node0xcc2548;
	Node0xcc2548 -> Node0xcc2658;
	Node0xcc2658 -> Node0xcc2768;
	Node0xcc2768 -> Node0xcc2828;
edge [color=red]
	Node0xcbfd28 -> Node0xcbff48;
	Node0xcbff48 -> Node0xcc0378;
	Node0xcbfda8 -> Node0xcc0458;
	Node0xcc0458 -> Node0xcc0558;
	Node0xcbfe38 -> Node0xcc0618;
	Node0xcc0618 -> Node0xcc06c8;
	Node0xcbfe98 -> Node0xcc0788;
	Node0xcc0788 -> Node0xcc0838;
	Node0xcbfd28 -> Node0xcba7c0;
	Node0xcbfda8 -> Node0xcba7c0;
	Node0xcbfe38 -> Node0xcba7c0;
	Node0xcbfe98 -> Node0xcba7c0;
	Node0xcbfd28 -> Node0xcc0a38;
	Node0xcbfda8 -> Node0xcc19a8;
	Node0xcbfe38 -> Node0xcc2018;
	Node0xcbfe98 -> Node0xcc2078;
	Node0xcc0a38 -> Node0xcc2188;
	Node0xcc19a8 -> Node0xcc2188;
	Node0xcc2018 -> Node0xcc2188;
	Node0xcc2078 -> Node0xcc2188;
	Node0xcc0788 -> Node0xcc23e8;
	Node0xcc0618 -> Node0xcc2548;
	Node0xcc0458 -> Node0xcc2658;
	Node0xcbff48 -> Node0xcc2768;
}
