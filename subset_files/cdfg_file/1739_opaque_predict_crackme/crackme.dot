digraph "DFG for'crackme' function" {
	Node0xcbdda0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xcbde10[shape=record, label="  %6 = and i32 %5, %1"];
	Node0xcbde80[shape=record, label="  %7 = xor i32 %6, -1"];
	Node0xcbdef0[shape=record, label="  %8 = or i32 %3, %0"];
	Node0xcbdf90[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xcbe000[shape=record, label="  %10 = add i32 %7, %0"];
	Node0xcbe070[shape=record, label="  %11 = sub i32 %10, %9"];
	Node0xcbe0e0[shape=record, label="  %12 = and i32 %2, %1"];
	Node0xcbe150[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0xcbe1c0[shape=record, label="  %14 = xor i32 %1, -1"];
	Node0xcbe230[shape=record, label="  %15 = or i32 %2, %1"];
	Node0xcbe2a0[shape=record, label="  %16 = xor i32 %2, %1"];
	Node0xcbe310[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0xcbe380[shape=record, label="  %18 = xor i32 %16, -1"];
	Node0xcbe420[shape=record, label="  %19 = shl i32 %15, 2"];
	Node0xcbe4c0[shape=record, label="  %20 = or i32 %19, 3"];
	Node0xcbe560[shape=record, label="  %21 = xor i32 %1, 2147483647"];
	Node0xcbe5d0[shape=record, label="  %22 = and i32 %21, %2"];
	Node0xcbe670[shape=record, label="  %23 = mul i32 %12, 6"];
	Node0xcbe6e0[shape=record, label="  %24 = xor i32 %0, -1"];
	Node0xcbe750[shape=record, label="  %25 = xor i32 %3, %0"];
	Node0xcbe7c0[shape=record, label="  %26 = and i32 %24, %3"];
	Node0xcbe830[shape=record, label="  %27 = xor i32 %25, -1"];
	Node0xcbe8a0[shape=record, label="  %28 = xor i32 %3, -1"];
	Node0xcbe910[shape=record, label="  %29 = and i32 %28, %0"];
	Node0xcbe9b0[shape=record, label="  %30 = mul i32 %29, -3"];
	Node0xcbea20[shape=record, label="  %31 = shl i32 %26, 1"];
	Node0xcbea90[shape=record, label="  %32 = add i32 %25, %22"];
	Node0xcbed10[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0xcbed80[shape=record, label="  %34 = sub i32 %6, %1"];
	Node0xcbee20[shape=record, label="  %35 = mul i32 %34, 5"];
	Node0xcbee90[shape=record, label="  %36 = add i32 %0, 2"];
	Node0xcbef00[shape=record, label="  %37 = add i32 %36, %14"];
	Node0xcbef70[shape=record, label="  %38 = sub i32 %37, %2"];
	Node0xcbefe0[shape=record, label="  %39 = add i32 %38, %5"];
	Node0xcbf050[shape=record, label="  %40 = add i32 %39, %13"];
	Node0xcbf0c0[shape=record, label="  %41 = sub i32 %40, %15"];
	Node0xcbf130[shape=record, label="  %42 = add i32 %41, %18"];
	Node0xcbf1a0[shape=record, label="  %43 = sub i32 %42, %3"];
	Node0xcbf210[shape=record, label="  %44 = add i32 %43, %28"];
	Node0xcbf280[shape=record, label="  %45 = sub i32 %44, %17"];
	Node0xcbf2f0[shape=record, label="  %46 = add i32 %45, %23"];
	Node0xcbf360[shape=record, label="  %47 = add i32 %46, %26"];
	Node0xcbf3d0[shape=record, label="  %48 = add i32 %47, %27"];
	Node0xcbf440[shape=record, label="  %49 = add i32 %48, %20"];
	Node0xcbf4b0[shape=record, label="  %50 = add i32 %49, %30"];
	Node0xcbf520[shape=record, label="  %51 = sub i32 %50, %31"];
	Node0xcbf590[shape=record, label="  %52 = add i32 %51, %35"];
	Node0xcbf600[shape=record, label="  %53 = add i32 %52, %33"];
	Node0xcbf670[shape=record, label="  %54 = icmp eq i32 %11, %53"];
	Node0xc5e268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xcbfb10[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0xcbfb60[shape=record, label="  ret void"];
	Node0xcbdda0 -> Node0xcbde10;
	Node0xcbde10 -> Node0xcbde80;
	Node0xcbde80 -> Node0xcbdef0;
	Node0xcbdef0 -> Node0xcbdf90;
	Node0xcbdf90 -> Node0xcbe000;
	Node0xcbe000 -> Node0xcbe070;
	Node0xcbe070 -> Node0xcbe0e0;
	Node0xcbe0e0 -> Node0xcbe150;
	Node0xcbe150 -> Node0xcbe1c0;
	Node0xcbe1c0 -> Node0xcbe230;
	Node0xcbe230 -> Node0xcbe2a0;
	Node0xcbe2a0 -> Node0xcbe310;
	Node0xcbe310 -> Node0xcbe380;
	Node0xcbe380 -> Node0xcbe420;
	Node0xcbe420 -> Node0xcbe4c0;
	Node0xcbe4c0 -> Node0xcbe560;
	Node0xcbe560 -> Node0xcbe5d0;
	Node0xcbe5d0 -> Node0xcbe670;
	Node0xcbe670 -> Node0xcbe6e0;
	Node0xcbe6e0 -> Node0xcbe750;
	Node0xcbe750 -> Node0xcbe7c0;
	Node0xcbe7c0 -> Node0xcbe830;
	Node0xcbe830 -> Node0xcbe8a0;
	Node0xcbe8a0 -> Node0xcbe910;
	Node0xcbe910 -> Node0xcbe9b0;
	Node0xcbe9b0 -> Node0xcbea20;
	Node0xcbea20 -> Node0xcbea90;
	Node0xcbea90 -> Node0xcbed10;
	Node0xcbed10 -> Node0xcbed80;
	Node0xcbed80 -> Node0xcbee20;
	Node0xcbee20 -> Node0xcbee90;
	Node0xcbee90 -> Node0xcbef00;
	Node0xcbef00 -> Node0xcbef70;
	Node0xcbef70 -> Node0xcbefe0;
	Node0xcbefe0 -> Node0xcbf050;
	Node0xcbf050 -> Node0xcbf0c0;
	Node0xcbf0c0 -> Node0xcbf130;
	Node0xcbf130 -> Node0xcbf1a0;
	Node0xcbf1a0 -> Node0xcbf210;
	Node0xcbf210 -> Node0xcbf280;
	Node0xcbf280 -> Node0xcbf2f0;
	Node0xcbf2f0 -> Node0xcbf360;
	Node0xcbf360 -> Node0xcbf3d0;
	Node0xcbf3d0 -> Node0xcbf440;
	Node0xcbf440 -> Node0xcbf4b0;
	Node0xcbf4b0 -> Node0xcbf520;
	Node0xcbf520 -> Node0xcbf590;
	Node0xcbf590 -> Node0xcbf600;
	Node0xcbf600 -> Node0xcbf670;
	Node0xcbf670 -> Node0xc5e268;
	Node0xc5e268 -> Node0xcbfb10;
	Node0xcbfb10 -> Node0xcbfb60;
edge [color=red]
	Node0xcbdda0 -> Node0xcbde10;
	Node0xcbde10 -> Node0xcbde80;
	Node0xcbdef0 -> Node0xcbdf90;
	Node0xcbde80 -> Node0xcbe000;
	Node0xcbe000 -> Node0xcbe070;
	Node0xcbdf90 -> Node0xcbe070;
	Node0xcbe0e0 -> Node0xcbe150;
	Node0xcbe2a0 -> Node0xcbe310;
	Node0xcbe2a0 -> Node0xcbe380;
	Node0xcbe230 -> Node0xcbe420;
	Node0xcbe420 -> Node0xcbe4c0;
	Node0xcbe560 -> Node0xcbe5d0;
	Node0xcbe0e0 -> Node0xcbe670;
	Node0xcbe6e0 -> Node0xcbe7c0;
	Node0xcbe750 -> Node0xcbe830;
	Node0xcbe8a0 -> Node0xcbe910;
	Node0xcbe910 -> Node0xcbe9b0;
	Node0xcbe7c0 -> Node0xcbea20;
	Node0xcbe750 -> Node0xcbea90;
	Node0xcbe5d0 -> Node0xcbea90;
	Node0xcbea90 -> Node0xcbed10;
	Node0xcbde10 -> Node0xcbed80;
	Node0xcbed80 -> Node0xcbee20;
	Node0xcbee90 -> Node0xcbef00;
	Node0xcbe1c0 -> Node0xcbef00;
	Node0xcbef00 -> Node0xcbef70;
	Node0xcbef70 -> Node0xcbefe0;
	Node0xcbdda0 -> Node0xcbefe0;
	Node0xcbefe0 -> Node0xcbf050;
	Node0xcbe150 -> Node0xcbf050;
	Node0xcbf050 -> Node0xcbf0c0;
	Node0xcbe230 -> Node0xcbf0c0;
	Node0xcbf0c0 -> Node0xcbf130;
	Node0xcbe380 -> Node0xcbf130;
	Node0xcbf130 -> Node0xcbf1a0;
	Node0xcbf1a0 -> Node0xcbf210;
	Node0xcbe8a0 -> Node0xcbf210;
	Node0xcbf210 -> Node0xcbf280;
	Node0xcbe310 -> Node0xcbf280;
	Node0xcbf280 -> Node0xcbf2f0;
	Node0xcbe670 -> Node0xcbf2f0;
	Node0xcbf2f0 -> Node0xcbf360;
	Node0xcbe7c0 -> Node0xcbf360;
	Node0xcbf360 -> Node0xcbf3d0;
	Node0xcbe830 -> Node0xcbf3d0;
	Node0xcbf3d0 -> Node0xcbf440;
	Node0xcbe4c0 -> Node0xcbf440;
	Node0xcbf440 -> Node0xcbf4b0;
	Node0xcbe9b0 -> Node0xcbf4b0;
	Node0xcbf4b0 -> Node0xcbf520;
	Node0xcbea20 -> Node0xcbf520;
	Node0xcbf520 -> Node0xcbf590;
	Node0xcbee20 -> Node0xcbf590;
	Node0xcbf590 -> Node0xcbf600;
	Node0xcbed10 -> Node0xcbf600;
	Node0xcbe070 -> Node0xcbf670;
	Node0xcbf600 -> Node0xcbf670;
	Node0xcbf670 -> Node0xc5e268;
	Node0xc5e268 -> Node0xcbfb10;
}
