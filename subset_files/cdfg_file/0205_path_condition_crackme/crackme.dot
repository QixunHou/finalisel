digraph "DFG for'crackme' function" {
	Node0xec8b40[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0xec91c0[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0xec9260[shape=record, label="  %7 = add i32 %0, 1"];
	Node0xec92d0[shape=record, label="  %8 = add i32 %5, %7"];
	Node0xec9340[shape=record, label="  %9 = or i32 %3, %0"];
	Node0xec93b0[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0xec9420[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0xec9490[shape=record, label="  %12 = xor i32 %1, -1"];
	Node0xec9500[shape=record, label="  %13 = or i32 %12, %2"];
	Node0xec9570[shape=record, label="  %14 = shl i32 %5, 1"];
	Node0xec95e0[shape=record, label="  %15 = shl i32 %11, 1"];
	Node0xec9650[shape=record, label="  %16 = or i32 %11, %1"];
	Node0xec96c0[shape=record, label="  %17 = and i32 %2, %1"];
	Node0xec9730[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0xec97d0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0xec9870[shape=record, label="  %20 = shl i32 %16, 2"];
	Node0xec9910[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0xec9980[shape=record, label="  %22 = xor i32 %3, %0"];
	Node0xec99f0[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0xec9a60[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0xec9ad0[shape=record, label="  %25 = shl i32 %9, 1"];
	Node0xec9b40[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0xec9bb0[shape=record, label="  %27 = xor i32 %3, -1"];
	Node0xec9c20[shape=record, label="  %28 = and i32 %27, %0"];
	Node0xec9c90[shape=record, label="  %29 = and i32 %6, %3"];
	Node0xec9d00[shape=record, label="  %30 = and i32 %3, %0"];
	Node0xec9d70[shape=record, label="  %31 = sub i32 %30, %29"];
	Node0xec9e10[shape=record, label="  %32 = mul i32 %31, 3"];
	Node0xeca090[shape=record, label="  %33 = sub i32 1, %0"];
	Node0xeca100[shape=record, label="  %34 = add i32 %33, %13"];
	Node0xeca170[shape=record, label="  %35 = sub i32 %34, %15"];
	Node0xeca1e0[shape=record, label="  %36 = sub i32 %35, %16"];
	Node0xeca250[shape=record, label="  %37 = add i32 %36, %14"];
	Node0xeca2c0[shape=record, label="  %38 = sub i32 %37, %28"];
	Node0xeca330[shape=record, label="  %39 = add i32 %38, %19"];
	Node0xeca3a0[shape=record, label="  %40 = sub i32 %39, %21"];
	Node0xeca410[shape=record, label="  %41 = add i32 %40, %23"];
	Node0xeca480[shape=record, label="  %42 = sub i32 %41, %24"];
	Node0xeca4f0[shape=record, label="  %43 = add i32 %42, %26"];
	Node0xeca560[shape=record, label="  %44 = add i32 %43, %32"];
	Node0xeca5d0[shape=record, label="  %45 = icmp eq i32 %10, %44"];
	Node0xe69268[shape=record, label="  %46 = select i1 %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xecaa70[shape=record, label="  %47 = tail call i32 @puts(i8* nonnull dereferenceable(1) %46)"];
	Node0xecaac0[shape=record, label="  ret void"];
	Node0xec8b40 -> Node0xec91c0;
	Node0xec91c0 -> Node0xec9260;
	Node0xec9260 -> Node0xec92d0;
	Node0xec92d0 -> Node0xec9340;
	Node0xec9340 -> Node0xec93b0;
	Node0xec93b0 -> Node0xec9420;
	Node0xec9420 -> Node0xec9490;
	Node0xec9490 -> Node0xec9500;
	Node0xec9500 -> Node0xec9570;
	Node0xec9570 -> Node0xec95e0;
	Node0xec95e0 -> Node0xec9650;
	Node0xec9650 -> Node0xec96c0;
	Node0xec96c0 -> Node0xec9730;
	Node0xec9730 -> Node0xec97d0;
	Node0xec97d0 -> Node0xec9870;
	Node0xec9870 -> Node0xec9910;
	Node0xec9910 -> Node0xec9980;
	Node0xec9980 -> Node0xec99f0;
	Node0xec99f0 -> Node0xec9a60;
	Node0xec9a60 -> Node0xec9ad0;
	Node0xec9ad0 -> Node0xec9b40;
	Node0xec9b40 -> Node0xec9bb0;
	Node0xec9bb0 -> Node0xec9c20;
	Node0xec9c20 -> Node0xec9c90;
	Node0xec9c90 -> Node0xec9d00;
	Node0xec9d00 -> Node0xec9d70;
	Node0xec9d70 -> Node0xec9e10;
	Node0xec9e10 -> Node0xeca090;
	Node0xeca090 -> Node0xeca100;
	Node0xeca100 -> Node0xeca170;
	Node0xeca170 -> Node0xeca1e0;
	Node0xeca1e0 -> Node0xeca250;
	Node0xeca250 -> Node0xeca2c0;
	Node0xeca2c0 -> Node0xeca330;
	Node0xeca330 -> Node0xeca3a0;
	Node0xeca3a0 -> Node0xeca410;
	Node0xeca410 -> Node0xeca480;
	Node0xeca480 -> Node0xeca4f0;
	Node0xeca4f0 -> Node0xeca560;
	Node0xeca560 -> Node0xeca5d0;
	Node0xeca5d0 -> Node0xe69268;
	Node0xe69268 -> Node0xecaa70;
	Node0xecaa70 -> Node0xecaac0;
edge [color=red]
	Node0xec8b40 -> Node0xec92d0;
	Node0xec9260 -> Node0xec92d0;
	Node0xec92d0 -> Node0xec93b0;
	Node0xec9340 -> Node0xec93b0;
	Node0xec9490 -> Node0xec9500;
	Node0xec8b40 -> Node0xec9570;
	Node0xec9420 -> Node0xec95e0;
	Node0xec9420 -> Node0xec9650;
	Node0xec96c0 -> Node0xec9730;
	Node0xec9730 -> Node0xec97d0;
	Node0xec9650 -> Node0xec9870;
	Node0xec9870 -> Node0xec9910;
	Node0xec9980 -> Node0xec99f0;
	Node0xec99f0 -> Node0xec9a60;
	Node0xec9340 -> Node0xec9ad0;
	Node0xec9ad0 -> Node0xec9b40;
	Node0xec9bb0 -> Node0xec9c20;
	Node0xec91c0 -> Node0xec9c90;
	Node0xec9d00 -> Node0xec9d70;
	Node0xec9c90 -> Node0xec9d70;
	Node0xec9d70 -> Node0xec9e10;
	Node0xeca090 -> Node0xeca100;
	Node0xec9500 -> Node0xeca100;
	Node0xeca100 -> Node0xeca170;
	Node0xec95e0 -> Node0xeca170;
	Node0xeca170 -> Node0xeca1e0;
	Node0xec9650 -> Node0xeca1e0;
	Node0xeca1e0 -> Node0xeca250;
	Node0xec9570 -> Node0xeca250;
	Node0xeca250 -> Node0xeca2c0;
	Node0xec9c20 -> Node0xeca2c0;
	Node0xeca2c0 -> Node0xeca330;
	Node0xec97d0 -> Node0xeca330;
	Node0xeca330 -> Node0xeca3a0;
	Node0xec9910 -> Node0xeca3a0;
	Node0xeca3a0 -> Node0xeca410;
	Node0xec99f0 -> Node0xeca410;
	Node0xeca410 -> Node0xeca480;
	Node0xec9a60 -> Node0xeca480;
	Node0xeca480 -> Node0xeca4f0;
	Node0xec9b40 -> Node0xeca4f0;
	Node0xeca4f0 -> Node0xeca560;
	Node0xec9e10 -> Node0xeca560;
	Node0xec93b0 -> Node0xeca5d0;
	Node0xeca560 -> Node0xeca5d0;
	Node0xeca5d0 -> Node0xe69268;
	Node0xe69268 -> Node0xecaa70;
}
