digraph "DFG for'main' function" {
	Node0xecac88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xecad08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xecad98[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xecadf8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xecaea8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xecb2d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xecb3b8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xecb4b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xecb578[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xecb628[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xecb6e8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xecb798[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xec5b70[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xecb998[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xecc908[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xeccf78[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xeccfd8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xecd050[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0xecd0c0[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0xecd130[shape=record, label="  %16 = add i32 %10, 1"];
	Node0xecd1a0[shape=record, label="  %17 = add i32 %16, %14"];
	Node0xecd210[shape=record, label="  %18 = or i32 %13, %10"];
	Node0xecd280[shape=record, label="  %19 = sub i32 %17, %18"];
	Node0xecd2f0[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0xecd360[shape=record, label="  %21 = xor i32 %11, -1"];
	Node0xecd3d0[shape=record, label="  %22 = or i32 %12, %21"];
	Node0xecd440[shape=record, label="  %23 = shl i32 %14, 1"];
	Node0xecd4b0[shape=record, label="  %24 = shl i32 %20, 1"];
	Node0xecd520[shape=record, label="  %25 = or i32 %11, %20"];
	Node0xecd590[shape=record, label="  %26 = and i32 %12, %11"];
	Node0xecd600[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0xecd670[shape=record, label="  %28 = xor i32 %27, -2"];
	Node0xecd6e0[shape=record, label="  %29 = shl i32 %25, 2"];
	Node0xecd750[shape=record, label="  %30 = xor i32 %29, -4"];
	Node0xecd7c0[shape=record, label="  %31 = xor i32 %13, %10"];
	Node0xecd830[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0xecd8a0[shape=record, label="  %33 = xor i32 %32, -2"];
	Node0xecd910[shape=record, label="  %34 = shl i32 %18, 1"];
	Node0xecd980[shape=record, label="  %35 = xor i32 %34, -2"];
	Node0xecd9f0[shape=record, label="  %36 = xor i32 %13, -1"];
	Node0xecda60[shape=record, label="  %37 = and i32 %10, %36"];
	Node0xecdad0[shape=record, label="  %38 = and i32 %13, %15"];
	Node0xecdb40[shape=record, label="  %39 = and i32 %13, %10"];
	Node0xecdbb0[shape=record, label="  %40 = sub i32 %39, %38"];
	Node0xecdc20[shape=record, label="  %41 = mul i32 %40, 3"];
	Node0xecdc90[shape=record, label="  %42 = sub i32 1, %10"];
	Node0xecdd00[shape=record, label="  %43 = add i32 %42, %22"];
	Node0xecdd70[shape=record, label="  %44 = sub i32 %43, %24"];
	Node0xecdde0[shape=record, label="  %45 = sub i32 %44, %25"];
	Node0xecde50[shape=record, label="  %46 = add i32 %45, %23"];
	Node0xecdec0[shape=record, label="  %47 = sub i32 %46, %37"];
	Node0xecdf30[shape=record, label="  %48 = add i32 %47, %28"];
	Node0xecdfa0[shape=record, label="  %49 = sub i32 %48, %30"];
	Node0xece010[shape=record, label="  %50 = add i32 %49, %32"];
	Node0xece080[shape=record, label="  %51 = sub i32 %50, %33"];
	Node0xece0f0[shape=record, label="  %52 = add i32 %51, %35"];
	Node0xece160[shape=record, label="  %53 = add i32 %52, %41"];
	Node0xece1d0[shape=record, label="  %54 = icmp eq i32 %19, %53"];
	Node0xe6a8b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xece260[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0xece508[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xece668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xece778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xece888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xece948[shape=record, label="  ret i32 0"];
	Node0xecac88 -> Node0xecad08;
	Node0xecad08 -> Node0xecad98;
	Node0xecad98 -> Node0xecadf8;
	Node0xecadf8 -> Node0xecaea8;
	Node0xecaea8 -> Node0xecb2d8;
	Node0xecb2d8 -> Node0xecb3b8;
	Node0xecb3b8 -> Node0xecb4b8;
	Node0xecb4b8 -> Node0xecb578;
	Node0xecb578 -> Node0xecb628;
	Node0xecb628 -> Node0xecb6e8;
	Node0xecb6e8 -> Node0xecb798;
	Node0xecb798 -> Node0xec5b70;
	Node0xec5b70 -> Node0xecb998;
	Node0xecb998 -> Node0xecc908;
	Node0xecc908 -> Node0xeccf78;
	Node0xeccf78 -> Node0xeccfd8;
	Node0xeccfd8 -> Node0xecd050;
	Node0xecd050 -> Node0xecd0c0;
	Node0xecd0c0 -> Node0xecd130;
	Node0xecd130 -> Node0xecd1a0;
	Node0xecd1a0 -> Node0xecd210;
	Node0xecd210 -> Node0xecd280;
	Node0xecd280 -> Node0xecd2f0;
	Node0xecd2f0 -> Node0xecd360;
	Node0xecd360 -> Node0xecd3d0;
	Node0xecd3d0 -> Node0xecd440;
	Node0xecd440 -> Node0xecd4b0;
	Node0xecd4b0 -> Node0xecd520;
	Node0xecd520 -> Node0xecd590;
	Node0xecd590 -> Node0xecd600;
	Node0xecd600 -> Node0xecd670;
	Node0xecd670 -> Node0xecd6e0;
	Node0xecd6e0 -> Node0xecd750;
	Node0xecd750 -> Node0xecd7c0;
	Node0xecd7c0 -> Node0xecd830;
	Node0xecd830 -> Node0xecd8a0;
	Node0xecd8a0 -> Node0xecd910;
	Node0xecd910 -> Node0xecd980;
	Node0xecd980 -> Node0xecd9f0;
	Node0xecd9f0 -> Node0xecda60;
	Node0xecda60 -> Node0xecdad0;
	Node0xecdad0 -> Node0xecdb40;
	Node0xecdb40 -> Node0xecdbb0;
	Node0xecdbb0 -> Node0xecdc20;
	Node0xecdc20 -> Node0xecdc90;
	Node0xecdc90 -> Node0xecdd00;
	Node0xecdd00 -> Node0xecdd70;
	Node0xecdd70 -> Node0xecdde0;
	Node0xecdde0 -> Node0xecde50;
	Node0xecde50 -> Node0xecdec0;
	Node0xecdec0 -> Node0xecdf30;
	Node0xecdf30 -> Node0xecdfa0;
	Node0xecdfa0 -> Node0xece010;
	Node0xece010 -> Node0xece080;
	Node0xece080 -> Node0xece0f0;
	Node0xece0f0 -> Node0xece160;
	Node0xece160 -> Node0xece1d0;
	Node0xece1d0 -> Node0xe6a8b8;
	Node0xe6a8b8 -> Node0xece260;
	Node0xece260 -> Node0xece508;
	Node0xece508 -> Node0xece668;
	Node0xece668 -> Node0xece778;
	Node0xece778 -> Node0xece888;
	Node0xece888 -> Node0xece948;
edge [color=red]
	Node0xecac88 -> Node0xecaea8;
	Node0xecaea8 -> Node0xecb2d8;
	Node0xecad08 -> Node0xecb3b8;
	Node0xecb3b8 -> Node0xecb4b8;
	Node0xecad98 -> Node0xecb578;
	Node0xecb578 -> Node0xecb628;
	Node0xecadf8 -> Node0xecb6e8;
	Node0xecb6e8 -> Node0xecb798;
	Node0xecac88 -> Node0xec5b70;
	Node0xecad08 -> Node0xec5b70;
	Node0xecad98 -> Node0xec5b70;
	Node0xecadf8 -> Node0xec5b70;
	Node0xecac88 -> Node0xecb998;
	Node0xecad08 -> Node0xecc908;
	Node0xecad98 -> Node0xeccf78;
	Node0xecadf8 -> Node0xeccfd8;
	Node0xeccf78 -> Node0xecd050;
	Node0xecc908 -> Node0xecd050;
	Node0xecb998 -> Node0xecd0c0;
	Node0xecb998 -> Node0xecd130;
	Node0xecd130 -> Node0xecd1a0;
	Node0xecd050 -> Node0xecd1a0;
	Node0xeccfd8 -> Node0xecd210;
	Node0xecb998 -> Node0xecd210;
	Node0xecd1a0 -> Node0xecd280;
	Node0xecd210 -> Node0xecd280;
	Node0xeccf78 -> Node0xecd2f0;
	Node0xecc908 -> Node0xecd360;
	Node0xeccf78 -> Node0xecd3d0;
	Node0xecd360 -> Node0xecd3d0;
	Node0xecd050 -> Node0xecd440;
	Node0xecd2f0 -> Node0xecd4b0;
	Node0xecc908 -> Node0xecd520;
	Node0xecd2f0 -> Node0xecd520;
	Node0xeccf78 -> Node0xecd590;
	Node0xecc908 -> Node0xecd590;
	Node0xecd590 -> Node0xecd600;
	Node0xecd600 -> Node0xecd670;
	Node0xecd520 -> Node0xecd6e0;
	Node0xecd6e0 -> Node0xecd750;
	Node0xeccfd8 -> Node0xecd7c0;
	Node0xecb998 -> Node0xecd7c0;
	Node0xecd7c0 -> Node0xecd830;
	Node0xecd830 -> Node0xecd8a0;
	Node0xecd210 -> Node0xecd910;
	Node0xecd910 -> Node0xecd980;
	Node0xeccfd8 -> Node0xecd9f0;
	Node0xecb998 -> Node0xecda60;
	Node0xecd9f0 -> Node0xecda60;
	Node0xeccfd8 -> Node0xecdad0;
	Node0xecd0c0 -> Node0xecdad0;
	Node0xeccfd8 -> Node0xecdb40;
	Node0xecb998 -> Node0xecdb40;
	Node0xecdb40 -> Node0xecdbb0;
	Node0xecdad0 -> Node0xecdbb0;
	Node0xecdbb0 -> Node0xecdc20;
	Node0xecb998 -> Node0xecdc90;
	Node0xecdc90 -> Node0xecdd00;
	Node0xecd3d0 -> Node0xecdd00;
	Node0xecdd00 -> Node0xecdd70;
	Node0xecd4b0 -> Node0xecdd70;
	Node0xecdd70 -> Node0xecdde0;
	Node0xecd520 -> Node0xecdde0;
	Node0xecdde0 -> Node0xecde50;
	Node0xecd440 -> Node0xecde50;
	Node0xecde50 -> Node0xecdec0;
	Node0xecda60 -> Node0xecdec0;
	Node0xecdec0 -> Node0xecdf30;
	Node0xecd670 -> Node0xecdf30;
	Node0xecdf30 -> Node0xecdfa0;
	Node0xecd750 -> Node0xecdfa0;
	Node0xecdfa0 -> Node0xece010;
	Node0xecd830 -> Node0xece010;
	Node0xece010 -> Node0xece080;
	Node0xecd8a0 -> Node0xece080;
	Node0xece080 -> Node0xece0f0;
	Node0xecd980 -> Node0xece0f0;
	Node0xece0f0 -> Node0xece160;
	Node0xecdc20 -> Node0xece160;
	Node0xecd280 -> Node0xece1d0;
	Node0xece160 -> Node0xece1d0;
	Node0xece1d0 -> Node0xe6a8b8;
	Node0xe6a8b8 -> Node0xece260;
	Node0xecb6e8 -> Node0xece508;
	Node0xecb578 -> Node0xece668;
	Node0xecb3b8 -> Node0xece778;
	Node0xecaea8 -> Node0xece888;
}
