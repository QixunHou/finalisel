digraph "DFG for'main' function" {
	Node0x18adbe8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x18adc68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x18adcf8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x18add58[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x18ade08[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x18ae238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18ae318[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x18ae418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18ae4d8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x18ae588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x18ae648[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x18ae6f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x18a8b40[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x18ae8f8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x18af868[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x18afed8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x18aff38[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x18affb0[shape=record, label="  %14 = and i32 %13, %10"];
	Node0x18b0020[shape=record, label="  %15 = xor i32 %12, %11"];
	Node0x18b0090[shape=record, label="  %16 = xor i32 %12, -1"];
	Node0x18b0100[shape=record, label="  %17 = and i32 %12, %11"];
	Node0x18b0170[shape=record, label="  %18 = and i32 %11, %16"];
	Node0x18b01e0[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x18b0250[shape=record, label="  %20 = shl i32 %19, 2"];
	Node0x18b02c0[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0x18b0330[shape=record, label="  %22 = xor i32 %11, -1"];
	Node0x18b03a0[shape=record, label="  %23 = and i32 %12, %22"];
	Node0x18b0410[shape=record, label="  %24 = xor i32 %10, -1"];
	Node0x18b0480[shape=record, label="  %25 = and i32 %13, %24"];
	Node0x18b04f0[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x18b0560[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x18b05d0[shape=record, label="  %28 = or i32 %13, %24"];
	Node0x18b0640[shape=record, label="  %29 = xor i32 %13, %10"];
	Node0x18b06b0[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x18b0720[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x18b0790[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x18b0800[shape=record, label="  %33 = add i32 %23, 1"];
	Node0x18b0870[shape=record, label="  %34 = add i32 %33, %28"];
	Node0x18b08e0[shape=record, label="  %35 = sub i32 %34, %25"];
	Node0x18b0950[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0x18b09c0[shape=record, label="  %37 = shl i32 %11, 2"];
	Node0x18b0a30[shape=record, label="  %38 = add i32 %15, %13"];
	Node0x18b0aa0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x18b0b10[shape=record, label="  %40 = sub i32 3, %10"];
	Node0x18b0b80[shape=record, label="  %41 = add i32 %40, %37"];
	Node0x18b0bf0[shape=record, label="  %42 = add i32 %41, %17"];
	Node0x18b0c60[shape=record, label="  %43 = sub i32 %42, %18"];
	Node0x18b0cd0[shape=record, label="  %44 = sub i32 %43, %19"];
	Node0x18b0d40[shape=record, label="  %45 = sub i32 %44, %28"];
	Node0x18b0db0[shape=record, label="  %46 = add i32 %45, %32"];
	Node0x18b0e20[shape=record, label="  %47 = sub i32 %46, %14"];
	Node0x18b0e90[shape=record, label="  %48 = add i32 %47, %21"];
	Node0x18b0f00[shape=record, label="  %49 = add i32 %48, %39"];
	Node0x18b0f70[shape=record, label="  %50 = add i32 %49, %27"];
	Node0x18b0fe0[shape=record, label="  %51 = sub i32 %50, %31"];
	Node0x18b1050[shape=record, label="  %52 = add i32 %51, %36"];
	Node0x18b10c0[shape=record, label="  %53 = icmp eq i32 %14, %52"];
	Node0x184d8b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18b1150[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x18b13f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x18b1558[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x18b1668[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18b1778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x18b1838[shape=record, label="  ret i32 0"];
	Node0x18adbe8 -> Node0x18adc68;
	Node0x18adc68 -> Node0x18adcf8;
	Node0x18adcf8 -> Node0x18add58;
	Node0x18add58 -> Node0x18ade08;
	Node0x18ade08 -> Node0x18ae238;
	Node0x18ae238 -> Node0x18ae318;
	Node0x18ae318 -> Node0x18ae418;
	Node0x18ae418 -> Node0x18ae4d8;
	Node0x18ae4d8 -> Node0x18ae588;
	Node0x18ae588 -> Node0x18ae648;
	Node0x18ae648 -> Node0x18ae6f8;
	Node0x18ae6f8 -> Node0x18a8b40;
	Node0x18a8b40 -> Node0x18ae8f8;
	Node0x18ae8f8 -> Node0x18af868;
	Node0x18af868 -> Node0x18afed8;
	Node0x18afed8 -> Node0x18aff38;
	Node0x18aff38 -> Node0x18affb0;
	Node0x18affb0 -> Node0x18b0020;
	Node0x18b0020 -> Node0x18b0090;
	Node0x18b0090 -> Node0x18b0100;
	Node0x18b0100 -> Node0x18b0170;
	Node0x18b0170 -> Node0x18b01e0;
	Node0x18b01e0 -> Node0x18b0250;
	Node0x18b0250 -> Node0x18b02c0;
	Node0x18b02c0 -> Node0x18b0330;
	Node0x18b0330 -> Node0x18b03a0;
	Node0x18b03a0 -> Node0x18b0410;
	Node0x18b0410 -> Node0x18b0480;
	Node0x18b0480 -> Node0x18b04f0;
	Node0x18b04f0 -> Node0x18b0560;
	Node0x18b0560 -> Node0x18b05d0;
	Node0x18b05d0 -> Node0x18b0640;
	Node0x18b0640 -> Node0x18b06b0;
	Node0x18b06b0 -> Node0x18b0720;
	Node0x18b0720 -> Node0x18b0790;
	Node0x18b0790 -> Node0x18b0800;
	Node0x18b0800 -> Node0x18b0870;
	Node0x18b0870 -> Node0x18b08e0;
	Node0x18b08e0 -> Node0x18b0950;
	Node0x18b0950 -> Node0x18b09c0;
	Node0x18b09c0 -> Node0x18b0a30;
	Node0x18b0a30 -> Node0x18b0aa0;
	Node0x18b0aa0 -> Node0x18b0b10;
	Node0x18b0b10 -> Node0x18b0b80;
	Node0x18b0b80 -> Node0x18b0bf0;
	Node0x18b0bf0 -> Node0x18b0c60;
	Node0x18b0c60 -> Node0x18b0cd0;
	Node0x18b0cd0 -> Node0x18b0d40;
	Node0x18b0d40 -> Node0x18b0db0;
	Node0x18b0db0 -> Node0x18b0e20;
	Node0x18b0e20 -> Node0x18b0e90;
	Node0x18b0e90 -> Node0x18b0f00;
	Node0x18b0f00 -> Node0x18b0f70;
	Node0x18b0f70 -> Node0x18b0fe0;
	Node0x18b0fe0 -> Node0x18b1050;
	Node0x18b1050 -> Node0x18b10c0;
	Node0x18b10c0 -> Node0x184d8b8;
	Node0x184d8b8 -> Node0x18b1150;
	Node0x18b1150 -> Node0x18b13f8;
	Node0x18b13f8 -> Node0x18b1558;
	Node0x18b1558 -> Node0x18b1668;
	Node0x18b1668 -> Node0x18b1778;
	Node0x18b1778 -> Node0x18b1838;
edge [color=red]
	Node0x18adbe8 -> Node0x18ade08;
	Node0x18ade08 -> Node0x18ae238;
	Node0x18adc68 -> Node0x18ae318;
	Node0x18ae318 -> Node0x18ae418;
	Node0x18adcf8 -> Node0x18ae4d8;
	Node0x18ae4d8 -> Node0x18ae588;
	Node0x18add58 -> Node0x18ae648;
	Node0x18ae648 -> Node0x18ae6f8;
	Node0x18adbe8 -> Node0x18a8b40;
	Node0x18adc68 -> Node0x18a8b40;
	Node0x18adcf8 -> Node0x18a8b40;
	Node0x18add58 -> Node0x18a8b40;
	Node0x18adbe8 -> Node0x18ae8f8;
	Node0x18adc68 -> Node0x18af868;
	Node0x18adcf8 -> Node0x18afed8;
	Node0x18add58 -> Node0x18aff38;
	Node0x18aff38 -> Node0x18affb0;
	Node0x18ae8f8 -> Node0x18affb0;
	Node0x18afed8 -> Node0x18b0020;
	Node0x18af868 -> Node0x18b0020;
	Node0x18afed8 -> Node0x18b0090;
	Node0x18afed8 -> Node0x18b0100;
	Node0x18af868 -> Node0x18b0100;
	Node0x18af868 -> Node0x18b0170;
	Node0x18b0090 -> Node0x18b0170;
	Node0x18afed8 -> Node0x18b01e0;
	Node0x18af868 -> Node0x18b01e0;
	Node0x18b01e0 -> Node0x18b0250;
	Node0x18b0250 -> Node0x18b02c0;
	Node0x18af868 -> Node0x18b0330;
	Node0x18afed8 -> Node0x18b03a0;
	Node0x18b0330 -> Node0x18b03a0;
	Node0x18ae8f8 -> Node0x18b0410;
	Node0x18aff38 -> Node0x18b0480;
	Node0x18b0410 -> Node0x18b0480;
	Node0x18b0480 -> Node0x18b04f0;
	Node0x18b04f0 -> Node0x18b0560;
	Node0x18aff38 -> Node0x18b05d0;
	Node0x18b0410 -> Node0x18b05d0;
	Node0x18aff38 -> Node0x18b0640;
	Node0x18ae8f8 -> Node0x18b0640;
	Node0x18b0640 -> Node0x18b06b0;
	Node0x18b06b0 -> Node0x18b0720;
	Node0x18aff38 -> Node0x18b0790;
	Node0x18ae8f8 -> Node0x18b0790;
	Node0x18b03a0 -> Node0x18b0800;
	Node0x18b0800 -> Node0x18b0870;
	Node0x18b05d0 -> Node0x18b0870;
	Node0x18b0870 -> Node0x18b08e0;
	Node0x18b0480 -> Node0x18b08e0;
	Node0x18b08e0 -> Node0x18b0950;
	Node0x18af868 -> Node0x18b09c0;
	Node0x18b0020 -> Node0x18b0a30;
	Node0x18aff38 -> Node0x18b0a30;
	Node0x18b0a30 -> Node0x18b0aa0;
	Node0x18ae8f8 -> Node0x18b0b10;
	Node0x18b0b10 -> Node0x18b0b80;
	Node0x18b09c0 -> Node0x18b0b80;
	Node0x18b0b80 -> Node0x18b0bf0;
	Node0x18b0100 -> Node0x18b0bf0;
	Node0x18b0bf0 -> Node0x18b0c60;
	Node0x18b0170 -> Node0x18b0c60;
	Node0x18b0c60 -> Node0x18b0cd0;
	Node0x18b01e0 -> Node0x18b0cd0;
	Node0x18b0cd0 -> Node0x18b0d40;
	Node0x18b05d0 -> Node0x18b0d40;
	Node0x18b0d40 -> Node0x18b0db0;
	Node0x18b0790 -> Node0x18b0db0;
	Node0x18b0db0 -> Node0x18b0e20;
	Node0x18affb0 -> Node0x18b0e20;
	Node0x18b0e20 -> Node0x18b0e90;
	Node0x18b02c0 -> Node0x18b0e90;
	Node0x18b0e90 -> Node0x18b0f00;
	Node0x18b0aa0 -> Node0x18b0f00;
	Node0x18b0f00 -> Node0x18b0f70;
	Node0x18b0560 -> Node0x18b0f70;
	Node0x18b0f70 -> Node0x18b0fe0;
	Node0x18b0720 -> Node0x18b0fe0;
	Node0x18b0fe0 -> Node0x18b1050;
	Node0x18b0950 -> Node0x18b1050;
	Node0x18affb0 -> Node0x18b10c0;
	Node0x18b1050 -> Node0x18b10c0;
	Node0x18b10c0 -> Node0x184d8b8;
	Node0x184d8b8 -> Node0x18b1150;
	Node0x18ae648 -> Node0x18b13f8;
	Node0x18ae4d8 -> Node0x18b1558;
	Node0x18ae318 -> Node0x18b1668;
	Node0x18ade08 -> Node0x18b1778;
}
