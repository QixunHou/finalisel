digraph "DFG for'main' function" {
	Node0x141cc88[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x141cd08[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x141cd98[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x141d1f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x141d2d8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x141d3f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x141d630[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x141d6e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x141e658[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x141ece0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x141ed50[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x141edc0[shape=record, label="  %10 = and i32 %7, %6"];
	Node0x141ee30[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x141eea0[shape=record, label="  %12 = xor i32 %11, -2"];
	Node0x141ef10[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x141ef80[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x141eff0[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x141f060[shape=record, label="  %16 = and i32 %6, %8"];
	Node0x141f0d0[shape=record, label="  %17 = shl i32 %15, 2"];
	Node0x141f140[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x141f1b0[shape=record, label="  %19 = shl i32 %16, 2"];
	Node0x141f220[shape=record, label="  %20 = shl i32 %10, 2"];
	Node0x141f290[shape=record, label="  %21 = add i32 %9, %6"];
	Node0x141f300[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x141f370[shape=record, label="  %23 = sub i32 %15, %16"];
	Node0x141f3e0[shape=record, label="  %24 = sub i32 %23, %14"];
	Node0x141f450[shape=record, label="  %25 = sub i32 %24, %19"];
	Node0x141f4c0[shape=record, label="  %26 = sub i32 %25, %20"];
	Node0x141f530[shape=record, label="  %27 = add i32 %26, %12"];
	Node0x141f5a0[shape=record, label="  %28 = sub i32 %27, %18"];
	Node0x141f610[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x141f680[shape=record, label="  %30 = icmp eq i32 %29, %7"];
	Node0x13bd9d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x141f710[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x141fb78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x141fcd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x141fd98[shape=record, label="  ret i32 0"];
	Node0x141cc88 -> Node0x141cd08;
	Node0x141cd08 -> Node0x141cd98;
	Node0x141cd98 -> Node0x141d1f8;
	Node0x141d1f8 -> Node0x141d2d8;
	Node0x141d2d8 -> Node0x141d3f8;
	Node0x141d3f8 -> Node0x141d630;
	Node0x141d630 -> Node0x141d6e8;
	Node0x141d6e8 -> Node0x141e658;
	Node0x141e658 -> Node0x141ece0;
	Node0x141ece0 -> Node0x141ed50;
	Node0x141ed50 -> Node0x141edc0;
	Node0x141edc0 -> Node0x141ee30;
	Node0x141ee30 -> Node0x141eea0;
	Node0x141eea0 -> Node0x141ef10;
	Node0x141ef10 -> Node0x141ef80;
	Node0x141ef80 -> Node0x141eff0;
	Node0x141eff0 -> Node0x141f060;
	Node0x141f060 -> Node0x141f0d0;
	Node0x141f0d0 -> Node0x141f140;
	Node0x141f140 -> Node0x141f1b0;
	Node0x141f1b0 -> Node0x141f220;
	Node0x141f220 -> Node0x141f290;
	Node0x141f290 -> Node0x141f300;
	Node0x141f300 -> Node0x141f370;
	Node0x141f370 -> Node0x141f3e0;
	Node0x141f3e0 -> Node0x141f450;
	Node0x141f450 -> Node0x141f4c0;
	Node0x141f4c0 -> Node0x141f530;
	Node0x141f530 -> Node0x141f5a0;
	Node0x141f5a0 -> Node0x141f610;
	Node0x141f610 -> Node0x141f680;
	Node0x141f680 -> Node0x13bd9d8;
	Node0x13bd9d8 -> Node0x141f710;
	Node0x141f710 -> Node0x141fb78;
	Node0x141fb78 -> Node0x141fcd8;
	Node0x141fcd8 -> Node0x141fd98;
edge [color=red]
	Node0x141cc88 -> Node0x141cd98;
	Node0x141cd98 -> Node0x141d1f8;
	Node0x141cd08 -> Node0x141d2d8;
	Node0x141d2d8 -> Node0x141d3f8;
	Node0x141cc88 -> Node0x141d630;
	Node0x141cd08 -> Node0x141d630;
	Node0x141cc88 -> Node0x141d6e8;
	Node0x141cd08 -> Node0x141e658;
	Node0x141e658 -> Node0x141ece0;
	Node0x141d6e8 -> Node0x141ed50;
	Node0x141ece0 -> Node0x141ed50;
	Node0x141e658 -> Node0x141edc0;
	Node0x141d6e8 -> Node0x141edc0;
	Node0x141edc0 -> Node0x141ee30;
	Node0x141ee30 -> Node0x141eea0;
	Node0x141e658 -> Node0x141ef10;
	Node0x141d6e8 -> Node0x141ef10;
	Node0x141ef10 -> Node0x141ef80;
	Node0x141e658 -> Node0x141eff0;
	Node0x141d6e8 -> Node0x141eff0;
	Node0x141d6e8 -> Node0x141f060;
	Node0x141ece0 -> Node0x141f060;
	Node0x141eff0 -> Node0x141f0d0;
	Node0x141f0d0 -> Node0x141f140;
	Node0x141f060 -> Node0x141f1b0;
	Node0x141edc0 -> Node0x141f220;
	Node0x141ed50 -> Node0x141f290;
	Node0x141d6e8 -> Node0x141f290;
	Node0x141f290 -> Node0x141f300;
	Node0x141eff0 -> Node0x141f370;
	Node0x141f060 -> Node0x141f370;
	Node0x141f370 -> Node0x141f3e0;
	Node0x141ef80 -> Node0x141f3e0;
	Node0x141f3e0 -> Node0x141f450;
	Node0x141f1b0 -> Node0x141f450;
	Node0x141f450 -> Node0x141f4c0;
	Node0x141f220 -> Node0x141f4c0;
	Node0x141f4c0 -> Node0x141f530;
	Node0x141eea0 -> Node0x141f530;
	Node0x141f530 -> Node0x141f5a0;
	Node0x141f140 -> Node0x141f5a0;
	Node0x141f5a0 -> Node0x141f610;
	Node0x141f300 -> Node0x141f610;
	Node0x141f610 -> Node0x141f680;
	Node0x141e658 -> Node0x141f680;
	Node0x141f680 -> Node0x13bd9d8;
	Node0x13bd9d8 -> Node0x141f710;
	Node0x141d2d8 -> Node0x141fb78;
	Node0x141cd98 -> Node0x141fcd8;
}
