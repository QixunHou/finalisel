digraph "DFG for'main' function" {
	Node0x1330cc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1330d48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1330dd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1330e38[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1330ee8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1331318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13313f8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x13314f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13315b8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1331668[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1331728[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x13317d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x132bb50[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x13319d8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1332948[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1332fb8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1333030[shape=record, label="  %13 = sub i32 0, %12"];
	Node0x1333088[shape=record, label="  %14 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1333100[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0x1333170[shape=record, label="  %16 = and i32 %12, %11"];
	Node0x13331e0[shape=record, label="  %17 = xor i32 %12, %11"];
	Node0x1333250[shape=record, label="  %18 = and i32 %11, %15"];
	Node0x13332c0[shape=record, label="  %19 = or i32 %12, %11"];
	Node0x1333330[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x13333a0[shape=record, label="  %21 = xor i32 %11, -1"];
	Node0x1333410[shape=record, label="  %22 = and i32 %12, %21"];
	Node0x1333480[shape=record, label="  %23 = mul i32 %22, 5"];
	Node0x13334f0[shape=record, label="  %24 = shl i32 %18, 2"];
	Node0x1333560[shape=record, label="  %25 = or i32 %14, %10"];
	Node0x13335d0[shape=record, label="  %26 = xor i32 %10, -1"];
	Node0x1333640[shape=record, label="  %27 = or i32 %14, %26"];
	Node0x13336b0[shape=record, label="  %28 = and i32 %14, %10"];
	Node0x1333720[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x1333790[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0x1333800[shape=record, label="  %31 = xor i32 %14, %10"];
	Node0x1333870[shape=record, label="  %32 = sub i32 %27, %25"];
	Node0x13338e0[shape=record, label="  %33 = mul i32 %32, 3"];
	Node0x1333950[shape=record, label="  %34 = add i32 %16, %20"];
	Node0x13339c0[shape=record, label="  %35 = mul i32 %34, 7"];
	Node0x1333a30[shape=record, label="  %36 = add i32 %17, %10"];
	Node0x1333aa0[shape=record, label="  %37 = add i32 %36, %31"];
	Node0x1333b10[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x1333b80[shape=record, label="  %39 = sub i32 7, %12"];
	Node0x1333bf0[shape=record, label="  %40 = add i32 %39, %16"];
	Node0x1333c60[shape=record, label="  %41 = add i32 %40, %18"];
	Node0x1333cd0[shape=record, label="  %42 = sub i32 %41, %19"];
	Node0x1333d40[shape=record, label="  %43 = add i32 %42, %17"];
	Node0x1333db0[shape=record, label="  %44 = add i32 %43, %23"];
	Node0x1333e20[shape=record, label="  %45 = add i32 %44, %24"];
	Node0x1333e90[shape=record, label="  %46 = add i32 %45, %25"];
	Node0x1333f00[shape=record, label="  %47 = sub i32 %46, %27"];
	Node0x1333f70[shape=record, label="  %48 = sub i32 %47, %29"];
	Node0x1333fe0[shape=record, label="  %49 = add i32 %48, %35"];
	Node0x1334050[shape=record, label="  %50 = sub i32 %49, %30"];
	Node0x13340c0[shape=record, label="  %51 = add i32 %50, %33"];
	Node0x1334130[shape=record, label="  %52 = add i32 %51, %38"];
	Node0x13341a0[shape=record, label="  %53 = icmp eq i32 %52, %13"];
	Node0x12d08b8[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1334230[shape=record, label="  %55 = call i32 @puts(i8* nonnull dereferenceable(1) %54) #5"];
	Node0x13344d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1334638[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1334748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1334858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1334918[shape=record, label="  ret i32 0"];
	Node0x1330cc8 -> Node0x1330d48;
	Node0x1330d48 -> Node0x1330dd8;
	Node0x1330dd8 -> Node0x1330e38;
	Node0x1330e38 -> Node0x1330ee8;
	Node0x1330ee8 -> Node0x1331318;
	Node0x1331318 -> Node0x13313f8;
	Node0x13313f8 -> Node0x13314f8;
	Node0x13314f8 -> Node0x13315b8;
	Node0x13315b8 -> Node0x1331668;
	Node0x1331668 -> Node0x1331728;
	Node0x1331728 -> Node0x13317d8;
	Node0x13317d8 -> Node0x132bb50;
	Node0x132bb50 -> Node0x13319d8;
	Node0x13319d8 -> Node0x1332948;
	Node0x1332948 -> Node0x1332fb8;
	Node0x1332fb8 -> Node0x1333030;
	Node0x1333030 -> Node0x1333088;
	Node0x1333088 -> Node0x1333100;
	Node0x1333100 -> Node0x1333170;
	Node0x1333170 -> Node0x13331e0;
	Node0x13331e0 -> Node0x1333250;
	Node0x1333250 -> Node0x13332c0;
	Node0x13332c0 -> Node0x1333330;
	Node0x1333330 -> Node0x13333a0;
	Node0x13333a0 -> Node0x1333410;
	Node0x1333410 -> Node0x1333480;
	Node0x1333480 -> Node0x13334f0;
	Node0x13334f0 -> Node0x1333560;
	Node0x1333560 -> Node0x13335d0;
	Node0x13335d0 -> Node0x1333640;
	Node0x1333640 -> Node0x13336b0;
	Node0x13336b0 -> Node0x1333720;
	Node0x1333720 -> Node0x1333790;
	Node0x1333790 -> Node0x1333800;
	Node0x1333800 -> Node0x1333870;
	Node0x1333870 -> Node0x13338e0;
	Node0x13338e0 -> Node0x1333950;
	Node0x1333950 -> Node0x13339c0;
	Node0x13339c0 -> Node0x1333a30;
	Node0x1333a30 -> Node0x1333aa0;
	Node0x1333aa0 -> Node0x1333b10;
	Node0x1333b10 -> Node0x1333b80;
	Node0x1333b80 -> Node0x1333bf0;
	Node0x1333bf0 -> Node0x1333c60;
	Node0x1333c60 -> Node0x1333cd0;
	Node0x1333cd0 -> Node0x1333d40;
	Node0x1333d40 -> Node0x1333db0;
	Node0x1333db0 -> Node0x1333e20;
	Node0x1333e20 -> Node0x1333e90;
	Node0x1333e90 -> Node0x1333f00;
	Node0x1333f00 -> Node0x1333f70;
	Node0x1333f70 -> Node0x1333fe0;
	Node0x1333fe0 -> Node0x1334050;
	Node0x1334050 -> Node0x13340c0;
	Node0x13340c0 -> Node0x1334130;
	Node0x1334130 -> Node0x13341a0;
	Node0x13341a0 -> Node0x12d08b8;
	Node0x12d08b8 -> Node0x1334230;
	Node0x1334230 -> Node0x13344d8;
	Node0x13344d8 -> Node0x1334638;
	Node0x1334638 -> Node0x1334748;
	Node0x1334748 -> Node0x1334858;
	Node0x1334858 -> Node0x1334918;
edge [color=red]
	Node0x1330cc8 -> Node0x1330ee8;
	Node0x1330ee8 -> Node0x1331318;
	Node0x1330d48 -> Node0x13313f8;
	Node0x13313f8 -> Node0x13314f8;
	Node0x1330dd8 -> Node0x13315b8;
	Node0x13315b8 -> Node0x1331668;
	Node0x1330e38 -> Node0x1331728;
	Node0x1331728 -> Node0x13317d8;
	Node0x1330cc8 -> Node0x132bb50;
	Node0x1330d48 -> Node0x132bb50;
	Node0x1330dd8 -> Node0x132bb50;
	Node0x1330e38 -> Node0x132bb50;
	Node0x1330cc8 -> Node0x13319d8;
	Node0x1330d48 -> Node0x1332948;
	Node0x1330dd8 -> Node0x1332fb8;
	Node0x1332fb8 -> Node0x1333030;
	Node0x1330e38 -> Node0x1333088;
	Node0x1332fb8 -> Node0x1333100;
	Node0x1332fb8 -> Node0x1333170;
	Node0x1332948 -> Node0x1333170;
	Node0x1332fb8 -> Node0x13331e0;
	Node0x1332948 -> Node0x13331e0;
	Node0x1332948 -> Node0x1333250;
	Node0x1333100 -> Node0x1333250;
	Node0x1332fb8 -> Node0x13332c0;
	Node0x1332948 -> Node0x13332c0;
	Node0x13332c0 -> Node0x1333330;
	Node0x1332948 -> Node0x13333a0;
	Node0x1332fb8 -> Node0x1333410;
	Node0x13333a0 -> Node0x1333410;
	Node0x1333410 -> Node0x1333480;
	Node0x1333250 -> Node0x13334f0;
	Node0x1333088 -> Node0x1333560;
	Node0x13319d8 -> Node0x1333560;
	Node0x13319d8 -> Node0x13335d0;
	Node0x1333088 -> Node0x1333640;
	Node0x13335d0 -> Node0x1333640;
	Node0x1333088 -> Node0x13336b0;
	Node0x13319d8 -> Node0x13336b0;
	Node0x13336b0 -> Node0x1333720;
	Node0x1333720 -> Node0x1333790;
	Node0x1333088 -> Node0x1333800;
	Node0x13319d8 -> Node0x1333800;
	Node0x1333640 -> Node0x1333870;
	Node0x1333560 -> Node0x1333870;
	Node0x1333870 -> Node0x13338e0;
	Node0x1333170 -> Node0x1333950;
	Node0x1333330 -> Node0x1333950;
	Node0x1333950 -> Node0x13339c0;
	Node0x13331e0 -> Node0x1333a30;
	Node0x13319d8 -> Node0x1333a30;
	Node0x1333a30 -> Node0x1333aa0;
	Node0x1333800 -> Node0x1333aa0;
	Node0x1333aa0 -> Node0x1333b10;
	Node0x1332fb8 -> Node0x1333b80;
	Node0x1333b80 -> Node0x1333bf0;
	Node0x1333170 -> Node0x1333bf0;
	Node0x1333bf0 -> Node0x1333c60;
	Node0x1333250 -> Node0x1333c60;
	Node0x1333c60 -> Node0x1333cd0;
	Node0x13332c0 -> Node0x1333cd0;
	Node0x1333cd0 -> Node0x1333d40;
	Node0x13331e0 -> Node0x1333d40;
	Node0x1333d40 -> Node0x1333db0;
	Node0x1333480 -> Node0x1333db0;
	Node0x1333db0 -> Node0x1333e20;
	Node0x13334f0 -> Node0x1333e20;
	Node0x1333e20 -> Node0x1333e90;
	Node0x1333560 -> Node0x1333e90;
	Node0x1333e90 -> Node0x1333f00;
	Node0x1333640 -> Node0x1333f00;
	Node0x1333f00 -> Node0x1333f70;
	Node0x1333720 -> Node0x1333f70;
	Node0x1333f70 -> Node0x1333fe0;
	Node0x13339c0 -> Node0x1333fe0;
	Node0x1333fe0 -> Node0x1334050;
	Node0x1333790 -> Node0x1334050;
	Node0x1334050 -> Node0x13340c0;
	Node0x13338e0 -> Node0x13340c0;
	Node0x13340c0 -> Node0x1334130;
	Node0x1333b10 -> Node0x1334130;
	Node0x1334130 -> Node0x13341a0;
	Node0x1333030 -> Node0x13341a0;
	Node0x13341a0 -> Node0x12d08b8;
	Node0x12d08b8 -> Node0x1334230;
	Node0x1331728 -> Node0x13344d8;
	Node0x13315b8 -> Node0x1334638;
	Node0x13313f8 -> Node0x1334748;
	Node0x1330ee8 -> Node0x1334858;
}
