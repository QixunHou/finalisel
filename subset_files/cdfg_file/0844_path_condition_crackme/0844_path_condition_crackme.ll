; ModuleID = '../.././c_source_file/0844_path_condition_crackme.c'
source_filename = "../.././c_source_file/0844_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %2, %0
  %10 = xor i32 %9, -1
  %11 = and i32 %10, %8
  %12 = mul i32 %11, -3
  %13 = xor i32 %3, -1
  %14 = and i32 %13, %4
  %15 = xor i32 %5, -1
  %16 = and i32 %15, %3
  %17 = xor i32 %16, -1
  %18 = xor i32 %14, %17
  %19 = shl i32 %18, 1
  %20 = or i32 %5, %4
  %21 = xor i32 %4, %3
  %22 = xor i32 %21, -1
  %23 = and i32 %20, %22
  %24 = sub i32 %12, %23
  %25 = add i32 %24, %19
  %26 = and i32 %2, %1
  %27 = and i32 %26, %0
  %28 = or i32 %2, %1
  %29 = xor i32 %28, %0
  %30 = or i32 %27, %29
  %31 = xor i32 %2, -1
  %32 = or i32 %31, %1
  %33 = xor i32 %32, -1
  %34 = xor i32 %33, %0
  %35 = or i32 %28, %0
  %36 = or i32 %1, %0
  %37 = xor i32 %36, -1
  %38 = or i32 %31, %37
  %39 = xor i32 %1, %0
  %40 = xor i32 %1, -1
  %41 = or i32 %40, %0
  %42 = xor i32 %28, -1
  %43 = or i32 %42, %0
  %44 = or i32 %26, %0
  %45 = and i32 %2, %0
  %46 = xor i32 %45, %36
  %47 = and i32 %40, %0
  %48 = xor i32 %47, -1
  %49 = and i32 %10, %48
  %50 = and i32 %9, %8
  %51 = or i32 %2, %0
  %52 = xor i32 %51, -1
  %53 = xor i32 %52, %1
  %54 = or i32 %39, %52
  %55 = shl i32 %54, 1
  %56 = xor i32 %0, -1
  %57 = and i32 %40, %2
  %58 = and i32 %57, %56
  %59 = xor i32 %2, %1
  %60 = or i32 %59, %56
  %61 = xor i32 %60, -1
  %62 = or i32 %58, %61
  %63 = or i32 %45, %40
  %64 = xor i32 %32, %0
  %65 = xor i32 %26, -1
  %66 = or i32 %65, %0
  %67 = xor i32 %59, -1
  %68 = and i32 %41, %67
  %69 = xor i32 %39, -1
  %70 = and i32 %9, %69
  %71 = or i32 %67, %37
  %72 = xor i32 %7, %2
  %73 = and i32 %57, %0
  %74 = xor i32 %59, %0
  %75 = xor i32 %74, -1
  %76 = xor i32 %73, %75
  %77 = or i32 %9, %40
  %78 = and i32 %10, %40
  %79 = and i32 %39, %10
  %80 = xor i32 %8, %2
  %81 = or i32 %9, %69
  %82 = and i32 %59, %8
  %83 = and i32 %9, %40
  %84 = and i32 %31, %1
  %85 = xor i32 %84, -1
  %86 = xor i32 %47, %85
  %87 = and i32 %67, %8
  %88 = shl i32 %87, 1
  %89 = xor i32 %37, %2
  %90 = and i32 %28, %56
  %91 = and i32 %59, %56
  %92 = or i32 %27, %91
  %93 = xor i32 %67, %0
  %94 = shl i32 %40, 1
  %95 = or i32 %9, %37
  %96 = or i32 %45, %37
  %97 = and i32 %8, %2
  %98 = shl i32 %97, 1
  %99 = and i32 %39, %31
  %100 = and i32 %31, %0
  %101 = xor i32 %100, %1
  %102 = or i32 %31, %0
  %103 = and i32 %102, %39
  %104 = or i32 %65, %56
  %105 = or i32 %47, %2
  %106 = or i32 %10, %69
  %107 = xor i32 %45, -1
  %108 = and i32 %107, %1
  %109 = or i32 %42, %56
  %110 = shl i32 %109, 1
  %111 = or i32 %10, %1
  %112 = or i32 %10, %37
  %113 = and i32 %51, %40
  %114 = add i32 %51, 1
  %115 = and i32 %85, %0
  %116 = or i32 %84, %0
  %117 = or i32 %7, %10
  %118 = shl i32 %117, 1
  %119 = xor i32 %47, %65
  %120 = or i32 %40, %2
  %121 = xor i32 %120, %0
  %122 = or i32 %73, %121
  %123 = add i32 %32, 1
  %124 = and i32 %67, %48
  %125 = and i32 %10, %69
  %126 = or i32 %47, %10
  %127 = or i32 %59, %47
  %128 = and i32 %31, %48
  %129 = xor i32 %100, -1
  %130 = and i32 %129, %69
  %131 = xor i32 %47, %2
  %132 = and i32 %36, %2
  %133 = shl i32 %132, 1
  %134 = and i32 %31, %69
  %135 = and i32 %41, %10
  %136 = and i32 %48, %2
  %137 = or i32 %85, %0
  %138 = or i32 %100, %39
  %139 = or i32 %59, %0
  %140 = xor i32 %73, %139
  %141 = xor i32 %36, %2
  %142 = and i32 %67, %56
  %143 = xor i32 %26, %0
  %144 = xor i32 %51, %7
  %145 = or i32 %52, %40
  %146 = or i32 %69, %2
  %147 = shl i32 %146, 1
  %148 = shl i32 %2, 1
  %149 = xor i32 %102, -1
  %150 = or i32 %7, %149
  %151 = and i32 %59, %0
  %152 = xor i32 %58, %60
  %153 = shl i32 %152, 1
  %154 = xor i32 %102, %7
  %155 = shl i32 %154, 1
  %156 = or i32 %100, %26
  %157 = or i32 %100, %69
  %158 = shl i32 %157, 1
  %159 = and i32 %69, %2
  %160 = xor i32 %45, %28
  %161 = and i32 %26, %56
  %162 = or i32 %161, %151
  %163 = xor i32 %121, 2147483647
  %164 = xor i32 %163, %73
  %165 = and i32 %42, %56
  %166 = and i32 %84, %56
  %167 = shl i32 %166, 3
  %168 = and i32 %42, %0
  %169 = mul i32 %168, -18
  %170 = and i32 %84, %0
  %171 = mul i32 %170, -12
  %172 = and i32 %33, %56
  %173 = shl i32 %161, 1
  %174 = and i32 %33, %0
  %175 = mul i32 %27, -14
  %176 = and i32 %5, %4
  %177 = or i32 %176, %13
  %178 = xor i32 %176, -1
  %179 = and i32 %178, %3
  %180 = or i32 %15, %3
  %181 = xor i32 %180, -1
  %182 = xor i32 %181, %4
  %183 = xor i32 %4, -1
  %184 = and i32 %5, %3
  %185 = xor i32 %184, -1
  %186 = and i32 %185, %183
  %187 = or i32 %15, %22
  %188 = and i32 %15, %4
  %189 = xor i32 %188, -1
  %190 = xor i32 %189, %3
  %191 = xor i32 %20, -1
  %192 = or i32 %4, %3
  %193 = xor i32 %192, -1
  %194 = xor i32 %5, %3
  %195 = or i32 %194, %193
  %196 = or i32 %15, %193
  %197 = or i32 %13, %4
  %198 = xor i32 %5, %4
  %199 = and i32 %198, %197
  %200 = xor i32 %197, -1
  %201 = or i32 %194, %200
  %202 = and i32 %4, %3
  %203 = or i32 %15, %4
  %204 = xor i32 %203, -1
  %205 = or i32 %202, %204
  %206 = or i32 %22, %5
  %207 = add i32 %180, 1
  %208 = xor i32 %200, %5
  %209 = xor i32 %198, -1
  %210 = and i32 %192, %209
  %211 = or i32 %185, %4
  %212 = or i32 %16, %183
  %213 = or i32 %176, %200
  %214 = and i32 %209, %13
  %215 = or i32 %188, %181
  %216 = add i32 %16, 1
  %217 = xor i32 %188, %185
  %218 = or i32 %188, %21
  %219 = or i32 %5, %3
  %220 = xor i32 %219, -1
  %221 = xor i32 %220, %4
  %222 = or i32 %16, %4
  %223 = xor i32 %194, -1
  %224 = add i32 %194, 1
  %225 = and i32 %21, %189
  %226 = and i32 %197, %209
  %227 = and i32 %21, %178
  %228 = or i32 %21, %191
  %229 = shl i32 %228, 1
  %230 = and i32 %13, %5
  %231 = and i32 %230, %4
  %232 = or i32 %13, %5
  %233 = xor i32 %232, %4
  %234 = xor i32 %233, -1
  %235 = xor i32 %231, %234
  %236 = and i32 %203, %22
  %237 = shl i32 %236, 1
  %238 = or i32 %188, %13
  %239 = add i32 %21, 1
  %240 = or i32 %191, %3
  %241 = and i32 %17, %4
  %242 = and i32 %197, %223
  %243 = or i32 %198, %13
  %244 = xor i32 %14, -1
  %245 = and i32 %223, %244
  %246 = and i32 %209, %244
  %247 = and i32 %230, %183
  %248 = or i32 %194, %183
  %249 = xor i32 %247, %248
  %250 = or i32 %185, %183
  %251 = xor i32 %244, %5
  %252 = and i32 %203, %13
  %253 = xor i32 %202, -1
  %254 = and i32 %209, %253
  %255 = or i32 %231, %233
  %256 = or i32 %202, %223
  %257 = or i32 %198, %14
  %258 = xor i32 %232, -1
  %259 = or i32 %258, %4
  %260 = xor i32 %231, %259
  %261 = or i32 %209, %13
  %262 = add i32 %197, 1
  %263 = and i32 %197, %5
  %264 = or i32 %17, %4
  %265 = and i32 %20, %3
  %266 = shl i32 %265, 1
  %267 = or i32 %16, %14
  %268 = or i32 %17, %183
  %269 = or i32 %21, %204
  %270 = or i32 %21, %15
  %271 = or i32 %14, %5
  %272 = or i32 %184, %4
  %273 = and i32 %198, %13
  %274 = or i32 %198, %3
  %275 = or i32 %188, %22
  %276 = xor i32 %14, %185
  %277 = and i32 %178, %13
  %278 = shl i32 %277, 2
  %279 = and i32 %194, %244
  %280 = shl i32 %279, 1
  %281 = and i32 %194, %4
  %282 = or i32 %200, %5
  %283 = xor i32 %193, %5
  %284 = or i32 %194, %4
  %285 = and i32 %198, %3
  %286 = or i32 %209, %22
  %287 = and i32 %184, %183
  %288 = or i32 %287, %281
  %289 = xor i32 %176, %17
  %290 = and i32 %192, %15
  %291 = xor i32 %178, %3
  %292 = and i32 %192, %223
  %293 = or i32 %220, %183
  %294 = and i32 %184, %4
  %295 = and i32 %219, %183
  %296 = xor i32 %294, -1
  %297 = xor i32 %295, %296
  %298 = or i32 %223, %4
  %299 = or i32 %176, %21
  %300 = or i32 %202, %191
  %301 = and i32 %232, %4
  %302 = or i32 %247, %301
  %303 = and i32 %189, %13
  %304 = or i32 %176, %22
  %305 = and i32 %194, %253
  %306 = xor i32 %253, %5
  %307 = and i32 %198, %253
  %308 = and i32 %21, %209
  %309 = and i32 %194, %197
  %310 = shl i32 %309, 1
  %311 = or i32 %193, %5
  %312 = and i32 %178, %22
  %313 = xor i32 %219, %202
  %314 = and i32 %17, %183
  %315 = or i32 %204, %3
  %316 = or i32 %176, %220
  %317 = and i32 %203, %21
  %318 = and i32 %20, %13
  %319 = xor i32 %248, -1
  %320 = or i32 %247, %319
  %321 = xor i32 %176, %3
  %322 = and i32 %15, %253
  %323 = shl i32 %322, 2
  %324 = and i32 %198, %21
  %325 = or i32 %294, %295
  %326 = and i32 %219, %4
  %327 = shl i32 %326, 1
  %328 = xor i32 %287, -1
  %329 = xor i32 %326, %328
  %330 = xor i32 %14, %5
  %331 = shl i32 %330, 2
  %332 = or i32 %14, %15
  %333 = or i32 %184, %183
  %334 = or i32 %181, %183
  %335 = xor i32 %180, %202
  %336 = xor i32 %194, %4
  %337 = xor i32 %336, -1
  %338 = or i32 %294, %337
  %339 = or i32 %198, %21
  %340 = xor i32 %219, %183
  %341 = xor i32 %340, %294
  %342 = xor i32 %203, %3
  %343 = or i32 %204, %22
  %344 = or i32 %198, %193
  %345 = xor i32 %20, %202
  %346 = and i32 %203, %3
  %347 = and i32 %197, %15
  %348 = xor i32 %281, %328
  %349 = or i32 %198, %202
  %350 = or i32 %223, %183
  %351 = and i32 %180, %4
  %352 = or i32 %202, %181
  %353 = or i32 %180, %4
  %354 = shl i32 %353, 1
  %355 = and i32 %185, %4
  %356 = or i32 %194, %14
  %357 = or i32 %21, %209
  %358 = or i32 %219, %4
  %359 = or i32 %219, %183
  %360 = or i32 %194, %202
  %361 = or i32 %191, %13
  %362 = or i32 %191, %22
  %363 = or i32 %223, %200
  %364 = xor i32 %185, %4
  %365 = xor i32 %176, %197
  %366 = xor i32 %176, %192
  %367 = and i32 %194, %183
  %368 = or i32 %188, %3
  %369 = xor i32 %188, %180
  %370 = xor i32 %184, %4
  %371 = or i32 %176, %193
  %372 = xor i32 %231, %337
  %373 = or i32 %202, %15
  %374 = add i32 %219, 1
  %375 = and i32 %21, %15
  %376 = xor i32 %16, %4
  %377 = xor i32 %197, %5
  %378 = or i32 %294, %367
  %379 = and i32 %192, %5
  %380 = xor i32 %367, 2147483647
  %381 = xor i32 %380, %294
  %382 = or i32 %209, %3
  %383 = or i32 %15, %200
  %384 = or i32 %184, %14
  %385 = add i32 %192, 1
  %386 = or i32 %287, %326
  %387 = and i32 %22, %5
  %388 = xor i32 %176, %219
  %389 = xor i32 %204, %3
  %390 = and i32 %209, %3
  %391 = or i32 %202, %220
  %392 = or i32 %209, %193
  %393 = xor i32 %188, %3
  %394 = or i32 %223, %193
  %395 = and i32 %20, %21
  %396 = or i32 %181, %4
  %397 = shl i32 %396, 1
  %398 = and i32 %220, %183
  %399 = shl i32 %398, 4
  %400 = and i32 %16, %183
  %401 = and i32 %220, %4
  %402 = shl i32 %401, 3
  %403 = and i32 %16, %4
  %404 = and i32 %181, %183
  %405 = shl i32 %287, 3
  %406 = and i32 %181, %4
  %407 = mul i32 %406, 11
  %408 = sub i32 %165, %104
  %409 = add i32 %408, %68
  %410 = add i32 %409, %368
  %411 = sub i32 %410, %225
  %412 = add i32 %411, %320
  %413 = mul i32 %412, 5
  %414 = add i32 %160, %174
  %415 = add i32 %414, %300
  %416 = sub i32 %415, %360
  %417 = sub i32 %416, %267
  %418 = mul i32 %417, 3
  %419 = add i32 %347, %32
  %420 = add i32 %419, %217
  %421 = add i32 %420, %316
  %422 = shl i32 %421, 2
  %423 = add i32 %400, %172
  %424 = add i32 %423, %404
  %425 = mul i32 %424, -9
  %426 = add i32 %294, %403
  %427 = mul i32 %426, -10
  %428 = add i32 %141, -1
  %429 = add i32 %428, %145
  %430 = add i32 %429, %144
  %431 = add i32 %430, %138
  %432 = add i32 %431, %119
  %433 = add i32 %432, %116
  %434 = add i32 %433, %92
  %435 = add i32 %434, %251
  %436 = add i32 %435, %208
  %437 = add i32 %436, %164
  %438 = add i32 %437, %389
  %439 = add i32 %438, %345
  %440 = add i32 %439, %333
  %441 = add i32 %440, %313
  %442 = add i32 %441, %289
  %443 = add i32 %442, %276
  %444 = add i32 %443, %386
  %445 = add i32 %444, %381
  %446 = shl i32 %445, 1
  %447 = sub i32 -7, %0
  %448 = add i32 %447, %39
  %449 = add i32 %448, %41
  %450 = sub i32 %449, %94
  %451 = sub i32 %450, %36
  %452 = add i32 %451, %38
  %453 = add i32 %452, %72
  %454 = sub i32 %453, %80
  %455 = add i32 %454, %89
  %456 = sub i32 %455, %99
  %457 = sub i32 %456, %105
  %458 = sub i32 %457, %102
  %459 = sub i32 %458, %45
  %460 = add i32 %459, %114
  %461 = add i32 %460, %123
  %462 = sub i32 %461, %128
  %463 = add i32 %462, %131
  %464 = sub i32 %463, %134
  %465 = add i32 %464, %136
  %466 = add i32 %465, %59
  %467 = sub i32 %466, %148
  %468 = add i32 %467, %159
  %469 = add i32 %468, %3
  %470 = add i32 %469, %34
  %471 = add i32 %470, %35
  %472 = add i32 %471, %43
  %473 = add i32 %472, %44
  %474 = add i32 %473, %46
  %475 = sub i32 %474, %49
  %476 = add i32 %475, %50
  %477 = add i32 %476, %53
  %478 = sub i32 %477, %63
  %479 = sub i32 %478, %64
  %480 = add i32 %479, %66
  %481 = sub i32 %480, %70
  %482 = add i32 %481, %71
  %483 = add i32 %482, %77
  %484 = sub i32 %483, %78
  %485 = add i32 %484, %29
  %486 = add i32 %485, %79
  %487 = add i32 %486, %81
  %488 = add i32 %487, %82
  %489 = sub i32 %488, %83
  %490 = sub i32 %489, %86
  %491 = sub i32 %490, %90
  %492 = sub i32 %491, %93
  %493 = sub i32 %492, %95
  %494 = add i32 %493, %96
  %495 = sub i32 %494, %98
  %496 = add i32 %495, %101
  %497 = sub i32 %496, %103
  %498 = sub i32 %497, %106
  %499 = sub i32 %498, %108
  %500 = sub i32 %499, %111
  %501 = add i32 %500, %74
  %502 = sub i32 %501, %112
  %503 = add i32 %502, %113
  %504 = add i32 %503, %115
  %505 = sub i32 %504, %124
  %506 = add i32 %505, %125
  %507 = sub i32 %506, %126
  %508 = add i32 %507, %127
  %509 = add i32 %508, %130
  %510 = sub i32 %509, %133
  %511 = add i32 %510, %135
  %512 = sub i32 %511, %137
  %513 = sub i32 %512, %60
  %514 = add i32 %513, %142
  %515 = add i32 %514, %143
  %516 = sub i32 %515, %147
  %517 = sub i32 %516, %150
  %518 = add i32 %517, %151
  %519 = add i32 %518, %156
  %520 = add i32 %519, %4
  %521 = sub i32 %520, %30
  %522 = sub i32 %521, %55
  %523 = add i32 %522, %62
  %524 = add i32 %523, %76
  %525 = sub i32 %524, %88
  %526 = sub i32 %525, %110
  %527 = sub i32 %526, %118
  %528 = add i32 %527, %122
  %529 = sub i32 %528, %140
  %530 = sub i32 %529, %155
  %531 = sub i32 %530, %158
  %532 = add i32 %531, %162
  %533 = sub i32 %532, %167
  %534 = add i32 %533, %169
  %535 = add i32 %534, %171
  %536 = sub i32 %535, %173
  %537 = add i32 %536, %175
  %538 = sub i32 %537, %192
  %539 = add i32 %538, %239
  %540 = add i32 %539, %262
  %541 = add i32 %540, %244
  %542 = sub i32 %541, %5
  %543 = sub i32 %542, %21
  %544 = add i32 %543, %15
  %545 = sub i32 %544, %197
  %546 = add i32 %545, %385
  %547 = sub i32 %546, %153
  %548 = add i32 %547, %187
  %549 = add i32 %548, %191
  %550 = add i32 %549, %196
  %551 = add i32 %550, %206
  %552 = add i32 %551, %207
  %553 = sub i32 %552, %20
  %554 = sub i32 %553, %188
  %555 = add i32 %554, %178
  %556 = add i32 %555, %216
  %557 = add i32 %556, %224
  %558 = add i32 %557, %209
  %559 = add i32 %558, %263
  %560 = sub i32 %559, %270
  %561 = add i32 %560, %271
  %562 = sub i32 %561, %282
  %563 = sub i32 %562, %283
  %564 = sub i32 %563, %290
  %565 = sub i32 %564, %306
  %566 = sub i32 %565, %311
  %567 = sub i32 %566, %180
  %568 = add i32 %567, %332
  %569 = add i32 %568, %373
  %570 = add i32 %569, %374
  %571 = sub i32 %570, %375
  %572 = sub i32 %571, %176
  %573 = add i32 %572, %189
  %574 = add i32 %573, %203
  %575 = add i32 %574, %377
  %576 = add i32 %575, %379
  %577 = sub i32 %576, %383
  %578 = add i32 %577, %387
  %579 = add i32 %578, %177
  %580 = sub i32 %579, %179
  %581 = add i32 %580, %182
  %582 = add i32 %581, %186
  %583 = add i32 %582, %190
  %584 = sub i32 %583, %195
  %585 = sub i32 %584, %199
  %586 = add i32 %585, %201
  %587 = sub i32 %586, %205
  %588 = sub i32 %587, %210
  %589 = sub i32 %588, %211
  %590 = add i32 %589, %212
  %591 = sub i32 %590, %213
  %592 = sub i32 %591, %214
  %593 = sub i32 %592, %215
  %594 = sub i32 %593, %218
  %595 = sub i32 %594, %221
  %596 = sub i32 %595, %222
  %597 = sub i32 %596, %226
  %598 = add i32 %597, %227
  %599 = add i32 %598, %238
  %600 = add i32 %599, %240
  %601 = add i32 %600, %241
  %602 = add i32 %601, %242
  %603 = sub i32 %602, %243
  %604 = sub i32 %603, %245
  %605 = sub i32 %604, %246
  %606 = add i32 %605, %250
  %607 = sub i32 %606, %252
  %608 = sub i32 %607, %254
  %609 = add i32 %608, %256
  %610 = sub i32 %609, %257
  %611 = add i32 %610, %261
  %612 = sub i32 %611, %264
  %613 = sub i32 %612, %268
  %614 = sub i32 %613, %269
  %615 = sub i32 %614, %272
  %616 = sub i32 %615, %273
  %617 = add i32 %616, %274
  %618 = sub i32 %617, %275
  %619 = add i32 %618, %281
  %620 = sub i32 %619, %284
  %621 = add i32 %620, %285
  %622 = sub i32 %621, %286
  %623 = add i32 %622, %291
  %624 = add i32 %623, %292
  %625 = sub i32 %624, %293
  %626 = add i32 %625, %298
  %627 = sub i32 %626, %299
  %628 = sub i32 %627, %303
  %629 = sub i32 %628, %304
  %630 = sub i32 %629, %305
  %631 = add i32 %630, %307
  %632 = add i32 %631, %308
  %633 = add i32 %632, %312
  %634 = add i32 %633, %314
  %635 = add i32 %634, %315
  %636 = add i32 %635, %317
  %637 = add i32 %636, %318
  %638 = sub i32 %637, %321
  %639 = sub i32 %638, %323
  %640 = add i32 %639, %324
  %641 = sub i32 %640, %331
  %642 = add i32 %641, %334
  %643 = add i32 %642, %335
  %644 = sub i32 %643, %336
  %645 = sub i32 %644, %339
  %646 = sub i32 %645, %342
  %647 = sub i32 %646, %343
  %648 = add i32 %647, %344
  %649 = sub i32 %648, %346
  %650 = add i32 %649, %349
  %651 = sub i32 %650, %350
  %652 = add i32 %651, %351
  %653 = sub i32 %652, %352
  %654 = add i32 %653, %355
  %655 = add i32 %654, %356
  %656 = sub i32 %655, %357
  %657 = add i32 %656, %358
  %658 = add i32 %657, %359
  %659 = add i32 %658, %361
  %660 = sub i32 %659, %362
  %661 = add i32 %660, %363
  %662 = sub i32 %661, %364
  %663 = sub i32 %662, %365
  %664 = sub i32 %663, %366
  %665 = add i32 %664, %367
  %666 = add i32 %665, %369
  %667 = sub i32 %666, %370
  %668 = add i32 %667, %371
  %669 = sub i32 %668, %376
  %670 = add i32 %669, %382
  %671 = add i32 %670, %384
  %672 = add i32 %671, %388
  %673 = add i32 %672, %390
  %674 = add i32 %673, %391
  %675 = sub i32 %674, %392
  %676 = add i32 %675, %393
  %677 = add i32 %676, %394
  %678 = add i32 %677, %395
  %679 = sub i32 %678, %229
  %680 = add i32 %679, %235
  %681 = sub i32 %680, %237
  %682 = add i32 %681, %249
  %683 = add i32 %682, %255
  %684 = add i32 %683, %260
  %685 = sub i32 %684, %266
  %686 = sub i32 %685, %278
  %687 = sub i32 %686, %280
  %688 = sub i32 %687, %288
  %689 = sub i32 %688, %297
  %690 = sub i32 %689, %302
  %691 = sub i32 %690, %310
  %692 = sub i32 %691, %325
  %693 = sub i32 %692, %327
  %694 = add i32 %693, %329
  %695 = add i32 %694, %338
  %696 = sub i32 %695, %341
  %697 = sub i32 %696, %348
  %698 = sub i32 %697, %354
  %699 = add i32 %698, %372
  %700 = add i32 %699, %378
  %701 = sub i32 %700, %397
  %702 = sub i32 %701, %399
  %703 = sub i32 %702, %402
  %704 = sub i32 %703, %405
  %705 = add i32 %704, %407
  %706 = add i32 %705, %427
  %707 = add i32 %706, %425
  %708 = add i32 %707, %422
  %709 = add i32 %708, %418
  %710 = add i32 %709, %413
  %711 = add i32 %710, %446
  %712 = icmp eq i32 %25, %711
  %713 = select i1 %712, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %714 = tail call i32 @puts(i8* nonnull dereferenceable(1) %713)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
