; ModuleID = '../.././c_source_file/0586_path_condition_crackme.c'
source_filename = "../.././c_source_file/0586_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %0
  %8 = or i32 %2, %1
  %9 = xor i32 %7, %8
  %10 = xor i32 %2, -1
  %11 = and i32 %10, %0
  %12 = or i32 %10, %1
  %13 = xor i32 %11, %12
  %14 = xor i32 %3, -1
  %15 = and i32 %14, %4
  %16 = xor i32 %5, %4
  %17 = or i32 %16, %15
  %18 = and i32 %5, %3
  %19 = and i32 %18, %4
  %20 = xor i32 %5, %3
  %21 = xor i32 %20, %4
  %22 = xor i32 %21, -1
  %23 = or i32 %19, %22
  %24 = shl i32 %23, 2
  %25 = sub i32 %17, %9
  %26 = shl i32 %25, 1
  %27 = sub i32 %24, %13
  %28 = add i32 %27, %26
  %29 = and i32 %2, %1
  %30 = and i32 %29, %0
  %31 = xor i32 %2, %1
  %32 = xor i32 %31, %0
  %33 = xor i32 %32, -1
  %34 = or i32 %30, %33
  %35 = shl i32 %34, 1
  %36 = xor i32 %2, %0
  %37 = xor i32 %0, -1
  %38 = and i32 %12, %37
  %39 = or i32 %1, %0
  %40 = and i32 %39, %10
  %41 = and i32 %8, %37
  %42 = xor i32 %1, %0
  %43 = xor i32 %42, -1
  %44 = or i32 %11, %43
  %45 = shl i32 %44, 1
  %46 = or i32 %11, %42
  %47 = or i32 %10, %0
  %48 = and i32 %47, %43
  %49 = shl i32 %48, 1
  %50 = and i32 %1, %0
  %51 = or i32 %36, %50
  %52 = xor i32 %50, -1
  %53 = and i32 %31, %52
  %54 = or i32 %29, %0
  %55 = xor i32 %36, -1
  %56 = or i32 %55, %43
  %57 = xor i32 %47, %50
  %58 = or i32 %2, %0
  %59 = xor i32 %58, %50
  %60 = or i32 %42, %2
  %61 = xor i32 %1, -1
  %62 = and i32 %61, %2
  %63 = and i32 %62, %37
  %64 = or i32 %61, %2
  %65 = and i32 %64, %0
  %66 = xor i32 %65, 1073741823
  %67 = xor i32 %66, %63
  %68 = and i32 %10, %1
  %69 = xor i32 %68, -1
  %70 = and i32 %69, %0
  %71 = xor i32 %31, -1
  %72 = or i32 %50, %71
  %73 = xor i32 %29, -1
  %74 = xor i32 %73, %0
  %75 = shl i32 %74, 1
  %76 = xor i32 %8, -1
  %77 = xor i32 %76, %0
  %78 = or i32 %61, %0
  %79 = xor i32 %78, -1
  %80 = or i32 %36, %79
  %81 = xor i32 %7, %1
  %82 = and i32 %61, %0
  %83 = and i32 %39, %71
  %84 = and i32 %47, %1
  %85 = or i32 %69, %37
  %86 = xor i32 %12, %0
  %87 = shl i32 %86, 1
  %88 = xor i32 %82, -1
  %89 = and i32 %10, %88
  %90 = xor i32 %58, %1
  %91 = xor i32 %47, -1
  %92 = or i32 %50, %91
  %93 = and i32 %62, %0
  %94 = or i32 %31, %0
  %95 = xor i32 %94, -1
  %96 = or i32 %93, %95
  %97 = and i32 %36, %43
  %98 = and i32 %73, %37
  %99 = and i32 %29, %37
  %100 = and i32 %8, %0
  %101 = xor i32 %100, -1
  %102 = xor i32 %99, %101
  %103 = xor i32 %7, 2147483647
  %104 = and i32 %103, %1
  %105 = shl i32 %104, 1
  %106 = and i32 %36, %78
  %107 = or i32 %8, %0
  %108 = or i32 %99, %100
  %109 = xor i32 %71, %0
  %110 = xor i32 %30, %32
  %111 = xor i32 %8, %0
  %112 = or i32 %30, %111
  %113 = shl i32 %112, 1
  %114 = shl i32 %94, 1
  %115 = or i32 %8, %37
  %116 = or i32 %36, %61
  %117 = xor i32 %93, %33
  %118 = xor i32 %29, %0
  %119 = or i32 %31, %50
  %120 = xor i32 %52, %2
  %121 = shl i32 %120, 1
  %122 = and i32 %31, %37
  %123 = or i32 %30, %122
  %124 = or i32 %76, %37
  %125 = and i32 %78, %2
  %126 = or i32 %42, %91
  %127 = and i32 %71, %52
  %128 = xor i32 %91, %1
  %129 = xor i32 %82, %2
  %130 = or i32 %55, %61
  %131 = and i32 %58, %61
  %132 = or i32 %91, %43
  %133 = or i32 %29, %37
  %134 = shl i32 %133, 1
  %135 = or i32 %42, %55
  %136 = and i32 %58, %43
  %137 = xor i32 %11, -1
  %138 = and i32 %137, %61
  %139 = and i32 %76, %37
  %140 = and i32 %68, %37
  %141 = shl i32 %140, 2
  %142 = and i32 %76, %0
  %143 = and i32 %68, %0
  %144 = shl i32 %143, 3
  %145 = xor i32 %12, -1
  %146 = and i32 %145, %37
  %147 = or i32 %14, %4
  %148 = xor i32 %147, %5
  %149 = shl i32 %148, 1
  %150 = or i32 %5, %4
  %151 = xor i32 %150, -1
  %152 = xor i32 %4, %3
  %153 = xor i32 %152, -1
  %154 = or i32 %153, %5
  %155 = xor i32 %5, -1
  %156 = and i32 %155, %3
  %157 = xor i32 %156, -1
  %158 = or i32 %157, %4
  %159 = xor i32 %4, -1
  %160 = and i32 %14, %5
  %161 = and i32 %160, %159
  %162 = or i32 %14, %5
  %163 = and i32 %162, %4
  %164 = xor i32 %163, -1
  %165 = xor i32 %161, %164
  %166 = xor i32 %16, -1
  %167 = or i32 %166, %153
  %168 = and i32 %166, %14
  %169 = and i32 %5, %4
  %170 = or i32 %169, %152
  %171 = or i32 %155, %3
  %172 = and i32 %171, %159
  %173 = xor i32 %169, -1
  %174 = and i32 %173, %3
  %175 = or i32 %5, %3
  %176 = xor i32 %175, %4
  %177 = or i32 %19, %176
  %178 = and i32 %155, %4
  %179 = xor i32 %171, -1
  %180 = or i32 %178, %179
  %181 = and i32 %147, %155
  %182 = or i32 %18, %159
  %183 = shl i32 %182, 1
  %184 = and i32 %157, %159
  %185 = xor i32 %157, %4
  %186 = xor i32 %178, -1
  %187 = and i32 %186, %14
  %188 = or i32 %155, %4
  %189 = and i32 %188, %14
  %190 = shl i32 %189, 1
  %191 = and i32 %171, %4
  %192 = or i32 %171, %159
  %193 = xor i32 %188, -1
  %194 = or i32 %152, %193
  %195 = xor i32 %18, -1
  %196 = or i32 %195, %159
  %197 = xor i32 %20, -1
  %198 = xor i32 %197, %4
  %199 = add i32 %20, 1
  %200 = or i32 %4, %3
  %201 = xor i32 %200, -1
  %202 = or i32 %166, %201
  %203 = and i32 %147, %166
  %204 = xor i32 %15, -1
  %205 = and i32 %20, %204
  %206 = and i32 %16, %204
  %207 = or i32 %161, %163
  %208 = and i32 %197, %159
  %209 = or i32 %20, %159
  %210 = and i32 %166, %3
  %211 = xor i32 %175, -1
  %212 = or i32 %169, %211
  %213 = xor i32 %147, -1
  %214 = or i32 %16, %213
  %215 = or i32 %166, %3
  %216 = or i32 %169, %3
  %217 = and i32 %16, %152
  %218 = and i32 %175, %159
  %219 = xor i32 %19, -1
  %220 = xor i32 %218, %219
  %221 = and i32 %147, %197
  %222 = xor i32 %178, %195
  %223 = or i32 %193, %3
  %224 = xor i32 %151, %3
  %225 = and i32 %4, %3
  %226 = xor i32 %171, %225
  %227 = or i32 %225, %197
  %228 = shl i32 %227, 1
  %229 = shl i32 %166, 1
  %230 = or i32 %166, %14
  %231 = and i32 %152, %166
  %232 = shl i32 %231, 1
  %233 = xor i32 %188, %3
  %234 = xor i32 %156, %4
  %235 = xor i32 %15, %157
  %236 = xor i32 %19, %21
  %237 = xor i32 %179, %4
  %238 = xor i32 %209, -1
  %239 = or i32 %161, %238
  %240 = or i32 %197, %213
  %241 = or i32 %225, %5
  %242 = shl i32 %241, 1
  %243 = xor i32 %176, %219
  %244 = and i32 %20, %4
  %245 = xor i32 %18, %4
  %246 = and i32 %20, %159
  %247 = or i32 %19, %246
  %248 = shl i32 %247, 1
  %249 = xor i32 %169, %3
  %250 = shl i32 %249, 1
  %251 = and i32 %160, %4
  %252 = xor i32 %162, %4
  %253 = or i32 %251, %252
  %254 = or i32 %156, %4
  %255 = or i32 %169, %14
  %256 = or i32 %20, %213
  %257 = and i32 %200, %5
  %258 = or i32 %178, %14
  %259 = xor i32 %252, -1
  %260 = xor i32 %251, %259
  %261 = or i32 %193, %14
  %262 = xor i32 %186, %3
  %263 = and i32 %150, %153
  %264 = or i32 %20, %15
  %265 = xor i32 %225, -1
  %266 = and i32 %265, %5
  %267 = or i32 %15, %197
  %268 = or i32 %175, %4
  %269 = or i32 %197, %159
  %270 = and i32 %16, %3
  %271 = or i32 %20, %201
  %272 = or i32 %155, %153
  %273 = shl i32 %272, 1
  %274 = xor i32 %204, %5
  %275 = or i32 %201, %5
  %276 = and i32 %166, %153
  %277 = or i32 %20, %4
  %278 = xor i32 %277, -1
  %279 = or i32 %251, %278
  %280 = and i32 %162, %159
  %281 = or i32 %251, %280
  %282 = add i32 %152, 1
  %283 = or i32 %152, %166
  %284 = or i32 %151, %153
  %285 = shl i32 %284, 2
  %286 = xor i32 %15, %195
  %287 = or i32 %178, %153
  %288 = and i32 %155, %204
  %289 = shl i32 %288, 1
  %290 = and i32 %18, %159
  %291 = and i32 %175, %4
  %292 = or i32 %290, %291
  %293 = add i32 %178, 1
  %294 = xor i32 %188, %225
  %295 = xor i32 %171, %4
  %296 = or i32 %178, %3
  %297 = xor i32 %161, %209
  %298 = shl i32 %188, 2
  %299 = and i32 %188, %3
  %300 = xor i32 %169, %175
  %301 = or i32 %155, %213
  %302 = shl i32 %147, 1
  %303 = and i32 %204, %5
  %304 = xor i32 %173, %3
  %305 = or i32 %156, %159
  %306 = and i32 %157, %4
  %307 = and i32 %186, %153
  %308 = or i32 %179, %159
  %309 = and i32 %16, %153
  %310 = shl i32 %309, 1
  %311 = and i32 %188, %152
  %312 = or i32 %290, %244
  %313 = or i32 %211, %4
  %314 = shl i32 %313, 2
  %315 = xor i32 %291, -1
  %316 = xor i32 %290, %315
  %317 = or i32 %179, %4
  %318 = xor i32 %280, 1073741823
  %319 = xor i32 %318, %251
  %320 = shl i32 %319, 2
  %321 = and i32 %200, %197
  %322 = or i32 %152, %155
  %323 = or i32 %19, %218
  %324 = or i32 %15, %166
  %325 = and i32 %195, %4
  %326 = xor i32 %15, %5
  %327 = and i32 %186, %3
  %328 = or i32 %16, %14
  %329 = xor i32 %225, %5
  %330 = xor i32 %169, %157
  %331 = or i32 %20, %225
  %332 = or i32 %16, %3
  %333 = xor i32 %251, %22
  %334 = add i32 %156, 1
  %335 = and i32 %188, %153
  %336 = xor i32 %193, %3
  %337 = and i32 %20, %265
  %338 = and i32 %16, %147
  %339 = xor i32 %150, %225
  %340 = and i32 %152, %155
  %341 = or i32 %197, %201
  %342 = or i32 %175, %159
  %343 = or i32 %16, %153
  %344 = and i32 %150, %14
  %345 = xor i32 %169, %200
  %346 = xor i32 %169, %147
  %347 = and i32 %150, %3
  %348 = and i32 %150, %152
  %349 = and i32 %195, %159
  %350 = or i32 %171, %4
  %351 = xor i32 %265, %5
  %352 = or i32 %225, %151
  %353 = and i32 %166, %204
  %354 = or i32 %18, %4
  %355 = or i32 %195, %4
  %356 = and i32 %155, %153
  %357 = shl i32 %356, 1
  %358 = and i32 %152, %5
  %359 = xor i32 %213, %5
  %360 = and i32 %16, %265
  %361 = or i32 %166, %213
  %362 = or i32 %16, %201
  %363 = xor i32 %211, %4
  %364 = and i32 %211, %159
  %365 = mul i32 %364, 26
  %366 = and i32 %156, %159
  %367 = and i32 %211, %4
  %368 = mul i32 %367, 11
  %369 = and i32 %156, %4
  %370 = mul i32 %369, 42
  %371 = and i32 %179, %159
  %372 = shl i32 %371, 4
  %373 = and i32 %179, %4
  %374 = mul i32 %373, 10
  %375 = mul i32 %19, 43
  %376 = sub i32 %293, %291
  %377 = add i32 %376, %233
  %378 = add i32 %377, %222
  %379 = add i32 %378, %168
  %380 = sub i32 %379, %279
  %381 = mul i32 %380, 5
  %382 = add i32 %347, %30
  %383 = sub i32 %382, %332
  %384 = add i32 %383, %312
  %385 = mul i32 %384, 3
  %386 = add i32 %124, %128
  %387 = add i32 %386, %67
  %388 = add i32 %387, %344
  %389 = shl i32 %388, 2
  %390 = add i32 %290, %366
  %391 = mul i32 %390, 17
  %392 = sub i32 %142, %99
  %393 = mul i32 %392, 7
  %394 = add i32 %139, -1
  %395 = add i32 %394, %84
  %396 = add i32 %395, %83
  %397 = add i32 %396, %57
  %398 = add i32 %397, %155
  %399 = add i32 %398, %154
  %400 = add i32 %399, %151
  %401 = add i32 %400, %328
  %402 = add i32 %401, %361
  %403 = add i32 %402, %234
  %404 = add i32 %403, %221
  %405 = add i32 %404, %206
  %406 = add i32 %405, %196
  %407 = add i32 %406, %187
  %408 = add i32 %407, %167
  %409 = shl i32 %408, 1
  %410 = add i32 %1, 2
  %411 = sub i32 %410, %82
  %412 = sub i32 %411, %36
  %413 = add i32 %412, %40
  %414 = sub i32 %413, %31
  %415 = sub i32 %414, %60
  %416 = sub i32 %415, %89
  %417 = sub i32 %416, %47
  %418 = add i32 %417, %55
  %419 = add i32 %418, %125
  %420 = sub i32 %419, %129
  %421 = sub i32 %420, %3
  %422 = add i32 %421, %14
  %423 = sub i32 %422, %38
  %424 = sub i32 %423, %41
  %425 = sub i32 %424, %46
  %426 = add i32 %425, %51
  %427 = add i32 %426, %53
  %428 = add i32 %427, %54
  %429 = sub i32 %428, %56
  %430 = add i32 %429, %59
  %431 = sub i32 %430, %70
  %432 = sub i32 %431, %72
  %433 = add i32 %432, %77
  %434 = add i32 %433, %80
  %435 = add i32 %434, %81
  %436 = add i32 %435, %85
  %437 = add i32 %436, %90
  %438 = sub i32 %437, %92
  %439 = add i32 %438, %97
  %440 = add i32 %439, %98
  %441 = sub i32 %440, %106
  %442 = sub i32 %441, %107
  %443 = add i32 %442, %109
  %444 = add i32 %443, %115
  %445 = add i32 %444, %116
  %446 = sub i32 %445, %118
  %447 = add i32 %446, %119
  %448 = sub i32 %447, %121
  %449 = add i32 %448, %126
  %450 = add i32 %449, %127
  %451 = sub i32 %450, %130
  %452 = sub i32 %451, %131
  %453 = sub i32 %452, %132
  %454 = sub i32 %453, %135
  %455 = add i32 %454, %136
  %456 = sub i32 %455, %138
  %457 = add i32 %456, %146
  %458 = add i32 %457, %159
  %459 = sub i32 %458, %4
  %460 = sub i32 %459, %45
  %461 = sub i32 %460, %49
  %462 = sub i32 %461, %75
  %463 = sub i32 %462, %87
  %464 = sub i32 %463, %96
  %465 = sub i32 %464, %102
  %466 = add i32 %465, %108
  %467 = sub i32 %466, %110
  %468 = sub i32 %467, %114
  %469 = add i32 %468, %117
  %470 = add i32 %469, %123
  %471 = sub i32 %470, %134
  %472 = sub i32 %471, %141
  %473 = sub i32 %472, %144
  %474 = add i32 %473, %213
  %475 = add i32 %474, %282
  %476 = add i32 %475, %152
  %477 = add i32 %476, %35
  %478 = sub i32 %477, %105
  %479 = sub i32 %478, %113
  %480 = sub i32 %479, %181
  %481 = add i32 %480, %199
  %482 = add i32 %481, %156
  %483 = sub i32 %482, %20
  %484 = sub i32 %483, %171
  %485 = add i32 %484, %18
  %486 = add i32 %485, %257
  %487 = sub i32 %486, %266
  %488 = add i32 %487, %274
  %489 = add i32 %488, %275
  %490 = sub i32 %489, %301
  %491 = sub i32 %490, %302
  %492 = add i32 %491, %303
  %493 = add i32 %492, %178
  %494 = add i32 %493, %322
  %495 = sub i32 %494, %326
  %496 = add i32 %495, %329
  %497 = add i32 %496, %334
  %498 = add i32 %497, %340
  %499 = add i32 %498, %351
  %500 = sub i32 %499, %358
  %501 = sub i32 %500, %359
  %502 = add i32 %501, %393
  %503 = sub i32 %502, %149
  %504 = sub i32 %503, %158
  %505 = add i32 %504, %170
  %506 = sub i32 %505, %172
  %507 = add i32 %506, %174
  %508 = sub i32 %507, %180
  %509 = sub i32 %508, %184
  %510 = sub i32 %509, %185
  %511 = add i32 %510, %191
  %512 = sub i32 %511, %192
  %513 = sub i32 %512, %194
  %514 = sub i32 %513, %198
  %515 = sub i32 %514, %202
  %516 = add i32 %515, %203
  %517 = add i32 %516, %205
  %518 = add i32 %517, %208
  %519 = sub i32 %518, %209
  %520 = add i32 %519, %210
  %521 = sub i32 %520, %212
  %522 = sub i32 %521, %214
  %523 = add i32 %522, %215
  %524 = sub i32 %523, %216
  %525 = sub i32 %524, %217
  %526 = sub i32 %525, %223
  %527 = add i32 %526, %176
  %528 = sub i32 %527, %224
  %529 = sub i32 %528, %226
  %530 = sub i32 %529, %229
  %531 = sub i32 %530, %230
  %532 = sub i32 %531, %235
  %533 = add i32 %532, %237
  %534 = add i32 %533, %240
  %535 = sub i32 %534, %242
  %536 = add i32 %535, %244
  %537 = sub i32 %536, %245
  %538 = sub i32 %537, %254
  %539 = sub i32 %538, %255
  %540 = sub i32 %539, %256
  %541 = sub i32 %540, %258
  %542 = add i32 %541, %261
  %543 = sub i32 %542, %262
  %544 = sub i32 %543, %263
  %545 = add i32 %544, %264
  %546 = sub i32 %545, %267
  %547 = add i32 %546, %268
  %548 = sub i32 %547, %269
  %549 = sub i32 %548, %270
  %550 = sub i32 %549, %271
  %551 = sub i32 %550, %273
  %552 = sub i32 %551, %276
  %553 = sub i32 %552, %283
  %554 = sub i32 %553, %286
  %555 = sub i32 %554, %287
  %556 = sub i32 %555, %289
  %557 = add i32 %556, %294
  %558 = add i32 %557, %295
  %559 = add i32 %558, %296
  %560 = sub i32 %559, %298
  %561 = add i32 %560, %299
  %562 = add i32 %561, %300
  %563 = add i32 %562, %304
  %564 = add i32 %563, %305
  %565 = add i32 %564, %306
  %566 = sub i32 %565, %307
  %567 = add i32 %566, %308
  %568 = sub i32 %567, %311
  %569 = add i32 %568, %317
  %570 = add i32 %569, %321
  %571 = add i32 %570, %324
  %572 = add i32 %571, %325
  %573 = add i32 %572, %327
  %574 = add i32 %573, %330
  %575 = sub i32 %574, %331
  %576 = sub i32 %575, %246
  %577 = sub i32 %576, %335
  %578 = sub i32 %577, %336
  %579 = add i32 %578, %337
  %580 = add i32 %579, %338
  %581 = add i32 %580, %339
  %582 = sub i32 %581, %341
  %583 = sub i32 %582, %342
  %584 = add i32 %583, %343
  %585 = sub i32 %584, %345
  %586 = sub i32 %585, %346
  %587 = sub i32 %586, %348
  %588 = sub i32 %587, %349
  %589 = add i32 %588, %350
  %590 = add i32 %589, %352
  %591 = sub i32 %590, %353
  %592 = sub i32 %591, %354
  %593 = add i32 %592, %355
  %594 = sub i32 %593, %21
  %595 = sub i32 %594, %357
  %596 = sub i32 %595, %360
  %597 = add i32 %596, %362
  %598 = add i32 %597, %363
  %599 = sub i32 %598, %165
  %600 = sub i32 %599, %177
  %601 = sub i32 %600, %183
  %602 = sub i32 %601, %190
  %603 = add i32 %602, %207
  %604 = sub i32 %603, %220
  %605 = sub i32 %604, %228
  %606 = sub i32 %605, %232
  %607 = add i32 %606, %236
  %608 = sub i32 %607, %239
  %609 = sub i32 %608, %243
  %610 = sub i32 %609, %250
  %611 = add i32 %610, %253
  %612 = sub i32 %611, %260
  %613 = sub i32 %612, %281
  %614 = sub i32 %613, %285
  %615 = sub i32 %614, %292
  %616 = sub i32 %615, %297
  %617 = sub i32 %616, %310
  %618 = sub i32 %617, %314
  %619 = add i32 %618, %316
  %620 = add i32 %619, %323
  %621 = sub i32 %620, %333
  %622 = add i32 %621, %365
  %623 = add i32 %622, %368
  %624 = add i32 %623, %370
  %625 = add i32 %624, %372
  %626 = add i32 %625, %374
  %627 = add i32 %626, %375
  %628 = sub i32 %627, %248
  %629 = add i32 %628, %391
  %630 = sub i32 %629, %320
  %631 = add i32 %630, %389
  %632 = add i32 %631, %385
  %633 = add i32 %632, %381
  %634 = add i32 %633, %409
  %635 = icmp eq i32 %28, %634
  %636 = select i1 %635, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %637 = tail call i32 @puts(i8* nonnull dereferenceable(1) %636)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
