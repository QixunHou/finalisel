digraph "DFG for'main' function" {
	Node0x1b45018[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1b45098[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1b45128[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1b45188[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1b45608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b456e8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1b457e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b458a8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1b45958[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b45bb8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1b45c78[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1b45dd8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1b45e38[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1b4abd0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1b4add8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1b4af38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1b4b048[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1b4b108[shape=record, label="  ret i32 0"];
	Node0x1b45018 -> Node0x1b45098;
	Node0x1b45098 -> Node0x1b45128;
	Node0x1b45128 -> Node0x1b45188;
	Node0x1b45188 -> Node0x1b45608;
	Node0x1b45608 -> Node0x1b456e8;
	Node0x1b456e8 -> Node0x1b457e8;
	Node0x1b457e8 -> Node0x1b458a8;
	Node0x1b458a8 -> Node0x1b45958;
	Node0x1b45958 -> Node0x1b45bb8;
	Node0x1b45bb8 -> Node0x1b45c78;
	Node0x1b45c78 -> Node0x1b45dd8;
	Node0x1b45dd8 -> Node0x1b45e38;
	Node0x1b45e38 -> Node0x1b4abd0;
	Node0x1b4abd0 -> Node0x1b4add8;
	Node0x1b4add8 -> Node0x1b4af38;
	Node0x1b4af38 -> Node0x1b4b048;
	Node0x1b4b048 -> Node0x1b4b108;
edge [color=red]
	Node0x1b45018 -> Node0x1b45188;
	Node0x1b45188 -> Node0x1b45608;
	Node0x1b45098 -> Node0x1b456e8;
	Node0x1b456e8 -> Node0x1b457e8;
	Node0x1b45128 -> Node0x1b458a8;
	Node0x1b458a8 -> Node0x1b45958;
	Node0x1b45018 -> Node0x1b45bb8;
	Node0x1b45098 -> Node0x1b45bb8;
	Node0x1b45128 -> Node0x1b45bb8;
	Node0x1b45018 -> Node0x1b45c78;
	Node0x1b45098 -> Node0x1b45dd8;
	Node0x1b45128 -> Node0x1b45e38;
	Node0x1b45c78 -> Node0x1b4abd0;
	Node0x1b45dd8 -> Node0x1b4abd0;
	Node0x1b45e38 -> Node0x1b4abd0;
	Node0x1b458a8 -> Node0x1b4add8;
	Node0x1b456e8 -> Node0x1b4af38;
	Node0x1b45188 -> Node0x1b4b048;
}
