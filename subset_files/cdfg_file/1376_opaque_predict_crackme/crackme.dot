digraph "DFG for'crackme' function" {
	Node0x153aa30[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x153aaa0[shape=record, label="  %4 = or i32 %3, %0"];
	Node0x153ab60[shape=record, label="  %5 = shl i32 %1, 1"];
	Node0x153abd0[shape=record, label="  %6 = sub i32 %5, %4"];
	Node0x153ac40[shape=record, label="  %7 = xor i32 %1, %0"];
	Node0x153ace0[shape=record, label="  %8 = mul i32 %7, -3"];
	Node0x153ad50[shape=record, label="  %9 = or i32 %1, %0"];
	Node0x153adc0[shape=record, label="  %10 = add i32 %1, 1"];
	Node0x153ae30[shape=record, label="  %11 = and i32 %3, %0"];
	Node0x153aed0[shape=record, label="  %12 = shl i32 %4, 2"];
	Node0x153af70[shape=record, label="  %13 = xor i32 %12, -4"];
	Node0x153afe0[shape=record, label="  %14 = shl i32 %11, 1"];
	Node0x153b050[shape=record, label="  %15 = add i32 %9, %10"];
	Node0x153b0c0[shape=record, label="  %16 = add i32 %15, %8"];
	Node0x153b130[shape=record, label="  %17 = add i32 %16, %14"];
	Node0x153b1a0[shape=record, label="  %18 = add i32 %17, %13"];
	Node0x153b210[shape=record, label="  %19 = icmp eq i32 %6, %18"];
	Node0x14db268[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x153b6b0[shape=record, label="  %21 = tail call i32 @puts(i8* nonnull dereferenceable(1) %20)"];
	Node0x153b700[shape=record, label="  ret void"];
	Node0x153aa30 -> Node0x153aaa0;
	Node0x153aaa0 -> Node0x153ab60;
	Node0x153ab60 -> Node0x153abd0;
	Node0x153abd0 -> Node0x153ac40;
	Node0x153ac40 -> Node0x153ace0;
	Node0x153ace0 -> Node0x153ad50;
	Node0x153ad50 -> Node0x153adc0;
	Node0x153adc0 -> Node0x153ae30;
	Node0x153ae30 -> Node0x153aed0;
	Node0x153aed0 -> Node0x153af70;
	Node0x153af70 -> Node0x153afe0;
	Node0x153afe0 -> Node0x153b050;
	Node0x153b050 -> Node0x153b0c0;
	Node0x153b0c0 -> Node0x153b130;
	Node0x153b130 -> Node0x153b1a0;
	Node0x153b1a0 -> Node0x153b210;
	Node0x153b210 -> Node0x14db268;
	Node0x14db268 -> Node0x153b6b0;
	Node0x153b6b0 -> Node0x153b700;
edge [color=red]
	Node0x153aa30 -> Node0x153aaa0;
	Node0x153ab60 -> Node0x153abd0;
	Node0x153aaa0 -> Node0x153abd0;
	Node0x153ac40 -> Node0x153ace0;
	Node0x153aa30 -> Node0x153ae30;
	Node0x153aaa0 -> Node0x153aed0;
	Node0x153aed0 -> Node0x153af70;
	Node0x153ae30 -> Node0x153afe0;
	Node0x153ad50 -> Node0x153b050;
	Node0x153adc0 -> Node0x153b050;
	Node0x153b050 -> Node0x153b0c0;
	Node0x153ace0 -> Node0x153b0c0;
	Node0x153b0c0 -> Node0x153b130;
	Node0x153afe0 -> Node0x153b130;
	Node0x153b130 -> Node0x153b1a0;
	Node0x153af70 -> Node0x153b1a0;
	Node0x153abd0 -> Node0x153b210;
	Node0x153b1a0 -> Node0x153b210;
	Node0x153b210 -> Node0x14db268;
	Node0x14db268 -> Node0x153b6b0;
}
