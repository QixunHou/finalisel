digraph "DFG for'main' function" {
	Node0x543378[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x5433f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x543488[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x5434e8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x543968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x543a48[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x543b48[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x543c08[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x543cb8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x543f18[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x543fd8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x544138[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x544198[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x545c00[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x545e08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x545f68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x546078[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x546138[shape=record, label="  ret i32 0"];
	Node0x543378 -> Node0x5433f8;
	Node0x5433f8 -> Node0x543488;
	Node0x543488 -> Node0x5434e8;
	Node0x5434e8 -> Node0x543968;
	Node0x543968 -> Node0x543a48;
	Node0x543a48 -> Node0x543b48;
	Node0x543b48 -> Node0x543c08;
	Node0x543c08 -> Node0x543cb8;
	Node0x543cb8 -> Node0x543f18;
	Node0x543f18 -> Node0x543fd8;
	Node0x543fd8 -> Node0x544138;
	Node0x544138 -> Node0x544198;
	Node0x544198 -> Node0x545c00;
	Node0x545c00 -> Node0x545e08;
	Node0x545e08 -> Node0x545f68;
	Node0x545f68 -> Node0x546078;
	Node0x546078 -> Node0x546138;
edge [color=red]
	Node0x543378 -> Node0x5434e8;
	Node0x5434e8 -> Node0x543968;
	Node0x5433f8 -> Node0x543a48;
	Node0x543a48 -> Node0x543b48;
	Node0x543488 -> Node0x543c08;
	Node0x543c08 -> Node0x543cb8;
	Node0x543378 -> Node0x543f18;
	Node0x5433f8 -> Node0x543f18;
	Node0x543488 -> Node0x543f18;
	Node0x543378 -> Node0x543fd8;
	Node0x5433f8 -> Node0x544138;
	Node0x543488 -> Node0x544198;
	Node0x543fd8 -> Node0x545c00;
	Node0x544138 -> Node0x545c00;
	Node0x544198 -> Node0x545c00;
	Node0x543c08 -> Node0x545e08;
	Node0x543a48 -> Node0x545f68;
	Node0x5434e8 -> Node0x546078;
}
