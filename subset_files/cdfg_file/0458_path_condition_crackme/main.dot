digraph "DFG for'main' function" {
	Node0x1f27cb8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f27d38[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f27dc8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1f28228[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1f28308[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1f28428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f28660[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1f28718[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f29688[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f29d10[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1f29d80[shape=record, label="  %9 = add i32 %7, 1"];
	Node0x1f29df0[shape=record, label="  %10 = or i32 %7, %6"];
	Node0x1f29e60[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x1f29ed0[shape=record, label="  %12 = or i32 %6, %8"];
	Node0x1f29f40[shape=record, label="  %13 = and i32 %6, %8"];
	Node0x1f29fb0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0x1f2a020[shape=record, label="  %15 = xor i32 %7, %6"];
	Node0x1f2a090[shape=record, label="  %16 = xor i32 %10, -1"];
	Node0x1f2a100[shape=record, label="  %17 = mul i32 %16, -6"];
	Node0x1f2a170[shape=record, label="  %18 = xor i32 %12, -1"];
	Node0x1f2a1e0[shape=record, label="  %19 = shl i32 %13, 3"];
	Node0x1f2a250[shape=record, label="  %20 = and i32 %7, %6"];
	Node0x1f2a2c0[shape=record, label="  %21 = add i32 %20, %18"];
	Node0x1f2a330[shape=record, label="  %22 = mul i32 %21, -7"];
	Node0x1f2a3a0[shape=record, label="  %23 = add i32 %12, -3"];
	Node0x1f2a410[shape=record, label="  %24 = add i32 %23, %14"];
	Node0x1f2a480[shape=record, label="  %25 = add i32 %24, %15"];
	Node0x1f2a4f0[shape=record, label="  %26 = add i32 %25, %11"];
	Node0x1f2a560[shape=record, label="  %27 = add i32 %26, %17"];
	Node0x1f2a5d0[shape=record, label="  %28 = sub i32 %27, %19"];
	Node0x1f2a640[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x1f2a6b0[shape=record, label="  %30 = icmp eq i32 %9, %29"];
	Node0x1ec89d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1f2a740[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x1f2aba8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f2ad08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1f2adc8[shape=record, label="  ret i32 0"];
	Node0x1f27cb8 -> Node0x1f27d38;
	Node0x1f27d38 -> Node0x1f27dc8;
	Node0x1f27dc8 -> Node0x1f28228;
	Node0x1f28228 -> Node0x1f28308;
	Node0x1f28308 -> Node0x1f28428;
	Node0x1f28428 -> Node0x1f28660;
	Node0x1f28660 -> Node0x1f28718;
	Node0x1f28718 -> Node0x1f29688;
	Node0x1f29688 -> Node0x1f29d10;
	Node0x1f29d10 -> Node0x1f29d80;
	Node0x1f29d80 -> Node0x1f29df0;
	Node0x1f29df0 -> Node0x1f29e60;
	Node0x1f29e60 -> Node0x1f29ed0;
	Node0x1f29ed0 -> Node0x1f29f40;
	Node0x1f29f40 -> Node0x1f29fb0;
	Node0x1f29fb0 -> Node0x1f2a020;
	Node0x1f2a020 -> Node0x1f2a090;
	Node0x1f2a090 -> Node0x1f2a100;
	Node0x1f2a100 -> Node0x1f2a170;
	Node0x1f2a170 -> Node0x1f2a1e0;
	Node0x1f2a1e0 -> Node0x1f2a250;
	Node0x1f2a250 -> Node0x1f2a2c0;
	Node0x1f2a2c0 -> Node0x1f2a330;
	Node0x1f2a330 -> Node0x1f2a3a0;
	Node0x1f2a3a0 -> Node0x1f2a410;
	Node0x1f2a410 -> Node0x1f2a480;
	Node0x1f2a480 -> Node0x1f2a4f0;
	Node0x1f2a4f0 -> Node0x1f2a560;
	Node0x1f2a560 -> Node0x1f2a5d0;
	Node0x1f2a5d0 -> Node0x1f2a640;
	Node0x1f2a640 -> Node0x1f2a6b0;
	Node0x1f2a6b0 -> Node0x1ec89d8;
	Node0x1ec89d8 -> Node0x1f2a740;
	Node0x1f2a740 -> Node0x1f2aba8;
	Node0x1f2aba8 -> Node0x1f2ad08;
	Node0x1f2ad08 -> Node0x1f2adc8;
edge [color=red]
	Node0x1f27cb8 -> Node0x1f27dc8;
	Node0x1f27dc8 -> Node0x1f28228;
	Node0x1f27d38 -> Node0x1f28308;
	Node0x1f28308 -> Node0x1f28428;
	Node0x1f27cb8 -> Node0x1f28660;
	Node0x1f27d38 -> Node0x1f28660;
	Node0x1f27cb8 -> Node0x1f28718;
	Node0x1f27d38 -> Node0x1f29688;
	Node0x1f29688 -> Node0x1f29d10;
	Node0x1f29688 -> Node0x1f29d80;
	Node0x1f29688 -> Node0x1f29df0;
	Node0x1f28718 -> Node0x1f29df0;
	Node0x1f29df0 -> Node0x1f29e60;
	Node0x1f28718 -> Node0x1f29ed0;
	Node0x1f29d10 -> Node0x1f29ed0;
	Node0x1f28718 -> Node0x1f29f40;
	Node0x1f29d10 -> Node0x1f29f40;
	Node0x1f29f40 -> Node0x1f29fb0;
	Node0x1f29688 -> Node0x1f2a020;
	Node0x1f28718 -> Node0x1f2a020;
	Node0x1f29df0 -> Node0x1f2a090;
	Node0x1f2a090 -> Node0x1f2a100;
	Node0x1f29ed0 -> Node0x1f2a170;
	Node0x1f29f40 -> Node0x1f2a1e0;
	Node0x1f29688 -> Node0x1f2a250;
	Node0x1f28718 -> Node0x1f2a250;
	Node0x1f2a250 -> Node0x1f2a2c0;
	Node0x1f2a170 -> Node0x1f2a2c0;
	Node0x1f2a2c0 -> Node0x1f2a330;
	Node0x1f29ed0 -> Node0x1f2a3a0;
	Node0x1f2a3a0 -> Node0x1f2a410;
	Node0x1f29fb0 -> Node0x1f2a410;
	Node0x1f2a410 -> Node0x1f2a480;
	Node0x1f2a020 -> Node0x1f2a480;
	Node0x1f2a480 -> Node0x1f2a4f0;
	Node0x1f29e60 -> Node0x1f2a4f0;
	Node0x1f2a4f0 -> Node0x1f2a560;
	Node0x1f2a100 -> Node0x1f2a560;
	Node0x1f2a560 -> Node0x1f2a5d0;
	Node0x1f2a1e0 -> Node0x1f2a5d0;
	Node0x1f2a5d0 -> Node0x1f2a640;
	Node0x1f2a330 -> Node0x1f2a640;
	Node0x1f29d80 -> Node0x1f2a6b0;
	Node0x1f2a640 -> Node0x1f2a6b0;
	Node0x1f2a6b0 -> Node0x1ec89d8;
	Node0x1ec89d8 -> Node0x1f2a740;
	Node0x1f28308 -> Node0x1f2aba8;
	Node0x1f27dc8 -> Node0x1f2ad08;
}
