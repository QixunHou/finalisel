digraph "DFG for'main' function" {
	Node0x731758[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x7317d8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x731868[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x731cc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x731da8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x731ec8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x732100[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x7321b8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x733128[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x7337b0[shape=record, label="  %8 = sub i32 0, %6"];
	Node0x733820[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x733890[shape=record, label="  %10 = and i32 %6, %9"];
	Node0x733900[shape=record, label="  %11 = mul i32 %10, -3"];
	Node0x733970[shape=record, label="  %12 = xor i32 %7, %6"];
	Node0x7339e0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x733a50[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x733ac0[shape=record, label="  %15 = or i32 %6, %9"];
	Node0x733b30[shape=record, label="  %16 = xor i32 %6, -1"];
	Node0x733ba0[shape=record, label="  %17 = or i32 %7, %16"];
	Node0x733c10[shape=record, label="  %18 = sub i32 %15, %14"];
	Node0x733c80[shape=record, label="  %19 = sub i32 %18, %17"];
	Node0x733cf0[shape=record, label="  %20 = add i32 %19, %13"];
	Node0x733d60[shape=record, label="  %21 = add i32 %20, %11"];
	Node0x733dd0[shape=record, label="  %22 = icmp eq i32 %21, %8"];
	Node0x6d29d8[shape=record, label="  %23 = select i1 %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x733e60[shape=record, label="  %24 = call i32 @puts(i8* nonnull dereferenceable(1) %23) #5"];
	Node0x7340b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x734218[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x7342d8[shape=record, label="  ret i32 0"];
	Node0x731758 -> Node0x7317d8;
	Node0x7317d8 -> Node0x731868;
	Node0x731868 -> Node0x731cc8;
	Node0x731cc8 -> Node0x731da8;
	Node0x731da8 -> Node0x731ec8;
	Node0x731ec8 -> Node0x732100;
	Node0x732100 -> Node0x7321b8;
	Node0x7321b8 -> Node0x733128;
	Node0x733128 -> Node0x7337b0;
	Node0x7337b0 -> Node0x733820;
	Node0x733820 -> Node0x733890;
	Node0x733890 -> Node0x733900;
	Node0x733900 -> Node0x733970;
	Node0x733970 -> Node0x7339e0;
	Node0x7339e0 -> Node0x733a50;
	Node0x733a50 -> Node0x733ac0;
	Node0x733ac0 -> Node0x733b30;
	Node0x733b30 -> Node0x733ba0;
	Node0x733ba0 -> Node0x733c10;
	Node0x733c10 -> Node0x733c80;
	Node0x733c80 -> Node0x733cf0;
	Node0x733cf0 -> Node0x733d60;
	Node0x733d60 -> Node0x733dd0;
	Node0x733dd0 -> Node0x6d29d8;
	Node0x6d29d8 -> Node0x733e60;
	Node0x733e60 -> Node0x7340b8;
	Node0x7340b8 -> Node0x734218;
	Node0x734218 -> Node0x7342d8;
edge [color=red]
	Node0x731758 -> Node0x731868;
	Node0x731868 -> Node0x731cc8;
	Node0x7317d8 -> Node0x731da8;
	Node0x731da8 -> Node0x731ec8;
	Node0x731758 -> Node0x732100;
	Node0x7317d8 -> Node0x732100;
	Node0x731758 -> Node0x7321b8;
	Node0x7317d8 -> Node0x733128;
	Node0x7321b8 -> Node0x7337b0;
	Node0x733128 -> Node0x733820;
	Node0x7321b8 -> Node0x733890;
	Node0x733820 -> Node0x733890;
	Node0x733890 -> Node0x733900;
	Node0x733128 -> Node0x733970;
	Node0x7321b8 -> Node0x733970;
	Node0x733970 -> Node0x7339e0;
	Node0x733128 -> Node0x733a50;
	Node0x7321b8 -> Node0x733a50;
	Node0x7321b8 -> Node0x733ac0;
	Node0x733820 -> Node0x733ac0;
	Node0x7321b8 -> Node0x733b30;
	Node0x733128 -> Node0x733ba0;
	Node0x733b30 -> Node0x733ba0;
	Node0x733ac0 -> Node0x733c10;
	Node0x733a50 -> Node0x733c10;
	Node0x733c10 -> Node0x733c80;
	Node0x733ba0 -> Node0x733c80;
	Node0x733c80 -> Node0x733cf0;
	Node0x7339e0 -> Node0x733cf0;
	Node0x733cf0 -> Node0x733d60;
	Node0x733900 -> Node0x733d60;
	Node0x733d60 -> Node0x733dd0;
	Node0x7337b0 -> Node0x733dd0;
	Node0x733dd0 -> Node0x6d29d8;
	Node0x6d29d8 -> Node0x733e60;
	Node0x731da8 -> Node0x7340b8;
	Node0x731868 -> Node0x734218;
}
