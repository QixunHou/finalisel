digraph "DFG for'main' function" {
	Node0x87a978[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x87a9f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x87aa88[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x87aae8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x87af68[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x87b048[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x87b148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x87b208[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x87b2b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x87b518[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x87b5d8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x87c548[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x87cbb8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x87cc30[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x87cca0[shape=record, label="  %12 = xor i32 %8, -1"];
	Node0x87cd10[shape=record, label="  %13 = and i32 %10, %12"];
	Node0x87cd80[shape=record, label="  %14 = xor i32 %9, %8"];
	Node0x87cdf0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x87ce60[shape=record, label="  %16 = or i32 %13, %15"];
	Node0x87ced0[shape=record, label="  %17 = and i32 %8, %11"];
	Node0x87cf40[shape=record, label="  %18 = and i32 %10, %9"];
	Node0x87cfb0[shape=record, label="  %19 = or i32 %17, %18"];
	Node0x87d020[shape=record, label="  %20 = and i32 %9, %8"];
	Node0x87d090[shape=record, label="  %21 = or i32 %10, %8"];
	Node0x87d100[shape=record, label="  %22 = xor i32 %21, %20"];
	Node0x87d170[shape=record, label="  %23 = or i32 %9, %12"];
	Node0x87d1e0[shape=record, label="  %24 = and i32 %23, %10"];
	Node0x87d250[shape=record, label="  %25 = or i32 %17, %14"];
	Node0x87d2c0[shape=record, label="  %26 = or i32 %17, %9"];
	Node0x87d330[shape=record, label="  %27 = or i32 %10, %9"];
	Node0x87d3a0[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x87d410[shape=record, label="  %29 = and i32 %28, %12"];
	Node0x87d480[shape=record, label="  %30 = and i32 %9, %11"];
	Node0x87d4f0[shape=record, label="  %31 = and i32 %30, %12"];
	Node0x87d560[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x87d5d0[shape=record, label="  %33 = and i32 %8, %28"];
	Node0x87d640[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0x87d6b0[shape=record, label="  %35 = and i32 %30, %8"];
	Node0x87d720[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x87d790[shape=record, label="  %37 = xor i32 %9, -1"];
	Node0x87d800[shape=record, label="  %38 = and i32 %13, %37"];
	Node0x87d870[shape=record, label="  %39 = mul i32 %38, 3"];
	Node0x87d8e0[shape=record, label="  %40 = add i32 %22, %24"];
	Node0x87d950[shape=record, label="  %41 = sub i32 %19, %40"];
	Node0x87d9c0[shape=record, label="  %42 = add i32 %41, %25"];
	Node0x87da30[shape=record, label="  %43 = add i32 %42, %26"];
	Node0x87daa0[shape=record, label="  %44 = add i32 %43, %29"];
	Node0x87db10[shape=record, label="  %45 = sub i32 %44, %32"];
	Node0x87db80[shape=record, label="  %46 = sub i32 %45, %34"];
	Node0x87dbf0[shape=record, label="  %47 = sub i32 %46, %36"];
	Node0x87dc60[shape=record, label="  %48 = add i32 %47, %39"];
	Node0x87dcd0[shape=record, label="  %49 = icmp eq i32 %16, %48"];
	Node0x81a9d8[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x87dd60[shape=record, label="  %51 = call i32 @puts(i8* nonnull dereferenceable(1) %50) #5"];
	Node0x87dfb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x87e118[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x87e228[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x87e2e8[shape=record, label="  ret i32 0"];
	Node0x87a978 -> Node0x87a9f8;
	Node0x87a9f8 -> Node0x87aa88;
	Node0x87aa88 -> Node0x87aae8;
	Node0x87aae8 -> Node0x87af68;
	Node0x87af68 -> Node0x87b048;
	Node0x87b048 -> Node0x87b148;
	Node0x87b148 -> Node0x87b208;
	Node0x87b208 -> Node0x87b2b8;
	Node0x87b2b8 -> Node0x87b518;
	Node0x87b518 -> Node0x87b5d8;
	Node0x87b5d8 -> Node0x87c548;
	Node0x87c548 -> Node0x87cbb8;
	Node0x87cbb8 -> Node0x87cc30;
	Node0x87cc30 -> Node0x87cca0;
	Node0x87cca0 -> Node0x87cd10;
	Node0x87cd10 -> Node0x87cd80;
	Node0x87cd80 -> Node0x87cdf0;
	Node0x87cdf0 -> Node0x87ce60;
	Node0x87ce60 -> Node0x87ced0;
	Node0x87ced0 -> Node0x87cf40;
	Node0x87cf40 -> Node0x87cfb0;
	Node0x87cfb0 -> Node0x87d020;
	Node0x87d020 -> Node0x87d090;
	Node0x87d090 -> Node0x87d100;
	Node0x87d100 -> Node0x87d170;
	Node0x87d170 -> Node0x87d1e0;
	Node0x87d1e0 -> Node0x87d250;
	Node0x87d250 -> Node0x87d2c0;
	Node0x87d2c0 -> Node0x87d330;
	Node0x87d330 -> Node0x87d3a0;
	Node0x87d3a0 -> Node0x87d410;
	Node0x87d410 -> Node0x87d480;
	Node0x87d480 -> Node0x87d4f0;
	Node0x87d4f0 -> Node0x87d560;
	Node0x87d560 -> Node0x87d5d0;
	Node0x87d5d0 -> Node0x87d640;
	Node0x87d640 -> Node0x87d6b0;
	Node0x87d6b0 -> Node0x87d720;
	Node0x87d720 -> Node0x87d790;
	Node0x87d790 -> Node0x87d800;
	Node0x87d800 -> Node0x87d870;
	Node0x87d870 -> Node0x87d8e0;
	Node0x87d8e0 -> Node0x87d950;
	Node0x87d950 -> Node0x87d9c0;
	Node0x87d9c0 -> Node0x87da30;
	Node0x87da30 -> Node0x87daa0;
	Node0x87daa0 -> Node0x87db10;
	Node0x87db10 -> Node0x87db80;
	Node0x87db80 -> Node0x87dbf0;
	Node0x87dbf0 -> Node0x87dc60;
	Node0x87dc60 -> Node0x87dcd0;
	Node0x87dcd0 -> Node0x81a9d8;
	Node0x81a9d8 -> Node0x87dd60;
	Node0x87dd60 -> Node0x87dfb8;
	Node0x87dfb8 -> Node0x87e118;
	Node0x87e118 -> Node0x87e228;
	Node0x87e228 -> Node0x87e2e8;
edge [color=red]
	Node0x87a978 -> Node0x87aae8;
	Node0x87aae8 -> Node0x87af68;
	Node0x87a9f8 -> Node0x87b048;
	Node0x87b048 -> Node0x87b148;
	Node0x87aa88 -> Node0x87b208;
	Node0x87b208 -> Node0x87b2b8;
	Node0x87a978 -> Node0x87b518;
	Node0x87a9f8 -> Node0x87b518;
	Node0x87aa88 -> Node0x87b518;
	Node0x87a978 -> Node0x87b5d8;
	Node0x87a9f8 -> Node0x87c548;
	Node0x87aa88 -> Node0x87cbb8;
	Node0x87cbb8 -> Node0x87cc30;
	Node0x87b5d8 -> Node0x87cca0;
	Node0x87cbb8 -> Node0x87cd10;
	Node0x87cca0 -> Node0x87cd10;
	Node0x87c548 -> Node0x87cd80;
	Node0x87b5d8 -> Node0x87cd80;
	Node0x87cd80 -> Node0x87cdf0;
	Node0x87cd10 -> Node0x87ce60;
	Node0x87cdf0 -> Node0x87ce60;
	Node0x87b5d8 -> Node0x87ced0;
	Node0x87cc30 -> Node0x87ced0;
	Node0x87cbb8 -> Node0x87cf40;
	Node0x87c548 -> Node0x87cf40;
	Node0x87ced0 -> Node0x87cfb0;
	Node0x87cf40 -> Node0x87cfb0;
	Node0x87c548 -> Node0x87d020;
	Node0x87b5d8 -> Node0x87d020;
	Node0x87cbb8 -> Node0x87d090;
	Node0x87b5d8 -> Node0x87d090;
	Node0x87d090 -> Node0x87d100;
	Node0x87d020 -> Node0x87d100;
	Node0x87c548 -> Node0x87d170;
	Node0x87cca0 -> Node0x87d170;
	Node0x87d170 -> Node0x87d1e0;
	Node0x87cbb8 -> Node0x87d1e0;
	Node0x87ced0 -> Node0x87d250;
	Node0x87cd80 -> Node0x87d250;
	Node0x87ced0 -> Node0x87d2c0;
	Node0x87c548 -> Node0x87d2c0;
	Node0x87cbb8 -> Node0x87d330;
	Node0x87c548 -> Node0x87d330;
	Node0x87d330 -> Node0x87d3a0;
	Node0x87d3a0 -> Node0x87d410;
	Node0x87cca0 -> Node0x87d410;
	Node0x87c548 -> Node0x87d480;
	Node0x87cc30 -> Node0x87d480;
	Node0x87d480 -> Node0x87d4f0;
	Node0x87cca0 -> Node0x87d4f0;
	Node0x87d4f0 -> Node0x87d560;
	Node0x87b5d8 -> Node0x87d5d0;
	Node0x87d3a0 -> Node0x87d5d0;
	Node0x87d5d0 -> Node0x87d640;
	Node0x87d480 -> Node0x87d6b0;
	Node0x87b5d8 -> Node0x87d6b0;
	Node0x87d6b0 -> Node0x87d720;
	Node0x87c548 -> Node0x87d790;
	Node0x87cd10 -> Node0x87d800;
	Node0x87d790 -> Node0x87d800;
	Node0x87d800 -> Node0x87d870;
	Node0x87d100 -> Node0x87d8e0;
	Node0x87d1e0 -> Node0x87d8e0;
	Node0x87cfb0 -> Node0x87d950;
	Node0x87d8e0 -> Node0x87d950;
	Node0x87d950 -> Node0x87d9c0;
	Node0x87d250 -> Node0x87d9c0;
	Node0x87d9c0 -> Node0x87da30;
	Node0x87d2c0 -> Node0x87da30;
	Node0x87da30 -> Node0x87daa0;
	Node0x87d410 -> Node0x87daa0;
	Node0x87daa0 -> Node0x87db10;
	Node0x87d560 -> Node0x87db10;
	Node0x87db10 -> Node0x87db80;
	Node0x87d640 -> Node0x87db80;
	Node0x87db80 -> Node0x87dbf0;
	Node0x87d720 -> Node0x87dbf0;
	Node0x87dbf0 -> Node0x87dc60;
	Node0x87d870 -> Node0x87dc60;
	Node0x87ce60 -> Node0x87dcd0;
	Node0x87dc60 -> Node0x87dcd0;
	Node0x87dcd0 -> Node0x81a9d8;
	Node0x81a9d8 -> Node0x87dd60;
	Node0x87b208 -> Node0x87dfb8;
	Node0x87b048 -> Node0x87e118;
	Node0x87aae8 -> Node0x87e228;
}
