digraph "DFG for'main' function" {
	Node0x1679d28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1679da8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1679e38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1679e98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1679f48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x167a378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x167a458[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x167a558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x167a618[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x167a6c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x167a788[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x167a838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1674ba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x167aa38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x167b9a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x167c018[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x167c078[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x167c0f0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x167c160[shape=record, label="  %15 = xor i32 %13, -1"];
	Node0x167c1d0[shape=record, label="  %16 = add i32 %14, %15"];
	Node0x167c240[shape=record, label="  %17 = xor i32 %12, -1"];
	Node0x167c2b0[shape=record, label="  %18 = and i32 %11, %17"];
	Node0x167c320[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x167c390[shape=record, label="  %20 = shl i32 %11, 1"];
	Node0x167c400[shape=record, label="  %21 = or i32 %11, %17"];
	Node0x167c470[shape=record, label="  %22 = shl i32 %14, 2"];
	Node0x167c4e0[shape=record, label="  %23 = xor i32 %22, -4"];
	Node0x167c550[shape=record, label="  %24 = xor i32 %13, %10"];
	Node0x167c5c0[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0x167c630[shape=record, label="  %26 = xor i32 %25, -4"];
	Node0x167c6a0[shape=record, label="  %27 = and i32 %13, %10"];
	Node0x167c710[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x167c780[shape=record, label="  %29 = or i32 %13, %10"];
	Node0x167c7f0[shape=record, label="  %30 = shl i32 %24, 1"];
	Node0x167c860[shape=record, label="  %31 = xor i32 %10, -1"];
	Node0x167c8d0[shape=record, label="  %32 = or i32 %13, %31"];
	Node0x167c940[shape=record, label="  %33 = xor i32 %29, -1"];
	Node0x167c9b0[shape=record, label="  %34 = mul i32 %33, -3"];
	Node0x167ca20[shape=record, label="  %35 = shl i32 %32, 1"];
	Node0x167ca90[shape=record, label="  %36 = xor i32 %35, -2"];
	Node0x167cb00[shape=record, label="  %37 = shl i32 %27, 2"];
	Node0x167cb70[shape=record, label="  %38 = add i32 %11, %31"];
	Node0x167cbe0[shape=record, label="  %39 = sub i32 %38, %20"];
	Node0x167cc50[shape=record, label="  %40 = add i32 %39, %17"];
	Node0x167ccc0[shape=record, label="  %41 = sub i32 %40, %12"];
	Node0x167cd30[shape=record, label="  %42 = add i32 %41, %19"];
	Node0x167cda0[shape=record, label="  %43 = add i32 %42, %21"];
	Node0x167ce10[shape=record, label="  %44 = sub i32 %43, %18"];
	Node0x167ce80[shape=record, label="  %45 = add i32 %44, %13"];
	Node0x167cef0[shape=record, label="  %46 = add i32 %45, %28"];
	Node0x167cf60[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x167cfd0[shape=record, label="  %48 = sub i32 %47, %32"];
	Node0x167d040[shape=record, label="  %49 = sub i32 %48, %23"];
	Node0x167d0b0[shape=record, label="  %50 = sub i32 %49, %30"];
	Node0x167d120[shape=record, label="  %51 = add i32 %50, %34"];
	Node0x167d190[shape=record, label="  %52 = sub i32 %51, %37"];
	Node0x167d200[shape=record, label="  %53 = add i32 %52, %26"];
	Node0x167d270[shape=record, label="  %54 = add i32 %53, %36"];
	Node0x167d2e0[shape=record, label="  %55 = icmp eq i32 %16, %54"];
	Node0x16198b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x167d370[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x167d618[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x167d778[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x167d888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x167d998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x167da58[shape=record, label="  ret i32 0"];
	Node0x1679d28 -> Node0x1679da8;
	Node0x1679da8 -> Node0x1679e38;
	Node0x1679e38 -> Node0x1679e98;
	Node0x1679e98 -> Node0x1679f48;
	Node0x1679f48 -> Node0x167a378;
	Node0x167a378 -> Node0x167a458;
	Node0x167a458 -> Node0x167a558;
	Node0x167a558 -> Node0x167a618;
	Node0x167a618 -> Node0x167a6c8;
	Node0x167a6c8 -> Node0x167a788;
	Node0x167a788 -> Node0x167a838;
	Node0x167a838 -> Node0x1674ba0;
	Node0x1674ba0 -> Node0x167aa38;
	Node0x167aa38 -> Node0x167b9a8;
	Node0x167b9a8 -> Node0x167c018;
	Node0x167c018 -> Node0x167c078;
	Node0x167c078 -> Node0x167c0f0;
	Node0x167c0f0 -> Node0x167c160;
	Node0x167c160 -> Node0x167c1d0;
	Node0x167c1d0 -> Node0x167c240;
	Node0x167c240 -> Node0x167c2b0;
	Node0x167c2b0 -> Node0x167c320;
	Node0x167c320 -> Node0x167c390;
	Node0x167c390 -> Node0x167c400;
	Node0x167c400 -> Node0x167c470;
	Node0x167c470 -> Node0x167c4e0;
	Node0x167c4e0 -> Node0x167c550;
	Node0x167c550 -> Node0x167c5c0;
	Node0x167c5c0 -> Node0x167c630;
	Node0x167c630 -> Node0x167c6a0;
	Node0x167c6a0 -> Node0x167c710;
	Node0x167c710 -> Node0x167c780;
	Node0x167c780 -> Node0x167c7f0;
	Node0x167c7f0 -> Node0x167c860;
	Node0x167c860 -> Node0x167c8d0;
	Node0x167c8d0 -> Node0x167c940;
	Node0x167c940 -> Node0x167c9b0;
	Node0x167c9b0 -> Node0x167ca20;
	Node0x167ca20 -> Node0x167ca90;
	Node0x167ca90 -> Node0x167cb00;
	Node0x167cb00 -> Node0x167cb70;
	Node0x167cb70 -> Node0x167cbe0;
	Node0x167cbe0 -> Node0x167cc50;
	Node0x167cc50 -> Node0x167ccc0;
	Node0x167ccc0 -> Node0x167cd30;
	Node0x167cd30 -> Node0x167cda0;
	Node0x167cda0 -> Node0x167ce10;
	Node0x167ce10 -> Node0x167ce80;
	Node0x167ce80 -> Node0x167cef0;
	Node0x167cef0 -> Node0x167cf60;
	Node0x167cf60 -> Node0x167cfd0;
	Node0x167cfd0 -> Node0x167d040;
	Node0x167d040 -> Node0x167d0b0;
	Node0x167d0b0 -> Node0x167d120;
	Node0x167d120 -> Node0x167d190;
	Node0x167d190 -> Node0x167d200;
	Node0x167d200 -> Node0x167d270;
	Node0x167d270 -> Node0x167d2e0;
	Node0x167d2e0 -> Node0x16198b8;
	Node0x16198b8 -> Node0x167d370;
	Node0x167d370 -> Node0x167d618;
	Node0x167d618 -> Node0x167d778;
	Node0x167d778 -> Node0x167d888;
	Node0x167d888 -> Node0x167d998;
	Node0x167d998 -> Node0x167da58;
edge [color=red]
	Node0x1679d28 -> Node0x1679f48;
	Node0x1679f48 -> Node0x167a378;
	Node0x1679da8 -> Node0x167a458;
	Node0x167a458 -> Node0x167a558;
	Node0x1679e38 -> Node0x167a618;
	Node0x167a618 -> Node0x167a6c8;
	Node0x1679e98 -> Node0x167a788;
	Node0x167a788 -> Node0x167a838;
	Node0x1679d28 -> Node0x1674ba0;
	Node0x1679da8 -> Node0x1674ba0;
	Node0x1679e38 -> Node0x1674ba0;
	Node0x1679e98 -> Node0x1674ba0;
	Node0x1679d28 -> Node0x167aa38;
	Node0x1679da8 -> Node0x167b9a8;
	Node0x1679e38 -> Node0x167c018;
	Node0x1679e98 -> Node0x167c078;
	Node0x167c018 -> Node0x167c0f0;
	Node0x167b9a8 -> Node0x167c0f0;
	Node0x167c078 -> Node0x167c160;
	Node0x167c0f0 -> Node0x167c1d0;
	Node0x167c160 -> Node0x167c1d0;
	Node0x167c018 -> Node0x167c240;
	Node0x167b9a8 -> Node0x167c2b0;
	Node0x167c240 -> Node0x167c2b0;
	Node0x167c2b0 -> Node0x167c320;
	Node0x167b9a8 -> Node0x167c390;
	Node0x167b9a8 -> Node0x167c400;
	Node0x167c240 -> Node0x167c400;
	Node0x167c0f0 -> Node0x167c470;
	Node0x167c470 -> Node0x167c4e0;
	Node0x167c078 -> Node0x167c550;
	Node0x167aa38 -> Node0x167c550;
	Node0x167c550 -> Node0x167c5c0;
	Node0x167c5c0 -> Node0x167c630;
	Node0x167c078 -> Node0x167c6a0;
	Node0x167aa38 -> Node0x167c6a0;
	Node0x167c6a0 -> Node0x167c710;
	Node0x167c078 -> Node0x167c780;
	Node0x167aa38 -> Node0x167c780;
	Node0x167c550 -> Node0x167c7f0;
	Node0x167aa38 -> Node0x167c860;
	Node0x167c078 -> Node0x167c8d0;
	Node0x167c860 -> Node0x167c8d0;
	Node0x167c780 -> Node0x167c940;
	Node0x167c940 -> Node0x167c9b0;
	Node0x167c8d0 -> Node0x167ca20;
	Node0x167ca20 -> Node0x167ca90;
	Node0x167c6a0 -> Node0x167cb00;
	Node0x167b9a8 -> Node0x167cb70;
	Node0x167c860 -> Node0x167cb70;
	Node0x167cb70 -> Node0x167cbe0;
	Node0x167c390 -> Node0x167cbe0;
	Node0x167cbe0 -> Node0x167cc50;
	Node0x167c240 -> Node0x167cc50;
	Node0x167cc50 -> Node0x167ccc0;
	Node0x167c018 -> Node0x167ccc0;
	Node0x167ccc0 -> Node0x167cd30;
	Node0x167c320 -> Node0x167cd30;
	Node0x167cd30 -> Node0x167cda0;
	Node0x167c400 -> Node0x167cda0;
	Node0x167cda0 -> Node0x167ce10;
	Node0x167c2b0 -> Node0x167ce10;
	Node0x167ce10 -> Node0x167ce80;
	Node0x167c078 -> Node0x167ce80;
	Node0x167ce80 -> Node0x167cef0;
	Node0x167c710 -> Node0x167cef0;
	Node0x167cef0 -> Node0x167cf60;
	Node0x167c780 -> Node0x167cf60;
	Node0x167cf60 -> Node0x167cfd0;
	Node0x167c8d0 -> Node0x167cfd0;
	Node0x167cfd0 -> Node0x167d040;
	Node0x167c4e0 -> Node0x167d040;
	Node0x167d040 -> Node0x167d0b0;
	Node0x167c7f0 -> Node0x167d0b0;
	Node0x167d0b0 -> Node0x167d120;
	Node0x167c9b0 -> Node0x167d120;
	Node0x167d120 -> Node0x167d190;
	Node0x167cb00 -> Node0x167d190;
	Node0x167d190 -> Node0x167d200;
	Node0x167c630 -> Node0x167d200;
	Node0x167d200 -> Node0x167d270;
	Node0x167ca90 -> Node0x167d270;
	Node0x167c1d0 -> Node0x167d2e0;
	Node0x167d270 -> Node0x167d2e0;
	Node0x167d2e0 -> Node0x16198b8;
	Node0x16198b8 -> Node0x167d370;
	Node0x167a788 -> Node0x167d618;
	Node0x167a618 -> Node0x167d778;
	Node0x167a458 -> Node0x167d888;
	Node0x1679f48 -> Node0x167d998;
}
