digraph "DFG for'crackme' function" {
	Node0x1677b70[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x16781f0[shape=record, label="  %6 = xor i32 %3, -1"];
	Node0x1678260[shape=record, label="  %7 = add i32 %5, %6"];
	Node0x16782d0[shape=record, label="  %8 = xor i32 %2, -1"];
	Node0x1678340[shape=record, label="  %9 = and i32 %8, %1"];
	Node0x16783b0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1678450[shape=record, label="  %11 = shl i32 %1, 1"];
	Node0x16784c0[shape=record, label="  %12 = or i32 %8, %1"];
	Node0x1678560[shape=record, label="  %13 = shl i32 %5, 2"];
	Node0x1678600[shape=record, label="  %14 = xor i32 %13, -4"];
	Node0x1678670[shape=record, label="  %15 = xor i32 %3, %0"];
	Node0x16786e0[shape=record, label="  %16 = shl i32 %15, 2"];
	Node0x1678750[shape=record, label="  %17 = xor i32 %16, -4"];
	Node0x16787c0[shape=record, label="  %18 = and i32 %3, %0"];
	Node0x1678830[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x16788a0[shape=record, label="  %20 = or i32 %3, %0"];
	Node0x1678910[shape=record, label="  %21 = shl i32 %15, 1"];
	Node0x1678980[shape=record, label="  %22 = xor i32 %0, -1"];
	Node0x16789f0[shape=record, label="  %23 = or i32 %22, %3"];
	Node0x1678a60[shape=record, label="  %24 = xor i32 %20, -1"];
	Node0x1678b00[shape=record, label="  %25 = mul i32 %24, -3"];
	Node0x1678b70[shape=record, label="  %26 = shl i32 %23, 1"];
	Node0x1678c10[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x1678c80[shape=record, label="  %28 = shl i32 %18, 2"];
	Node0x1678cf0[shape=record, label="  %29 = add i32 %22, %1"];
	Node0x1678d60[shape=record, label="  %30 = sub i32 %29, %11"];
	Node0x1678dd0[shape=record, label="  %31 = add i32 %30, %8"];
	Node0x1678e40[shape=record, label="  %32 = sub i32 %31, %2"];
	Node0x16790c0[shape=record, label="  %33 = add i32 %32, %10"];
	Node0x1679130[shape=record, label="  %34 = add i32 %33, %12"];
	Node0x16791a0[shape=record, label="  %35 = sub i32 %34, %9"];
	Node0x1679210[shape=record, label="  %36 = add i32 %35, %3"];
	Node0x1679280[shape=record, label="  %37 = add i32 %36, %19"];
	Node0x16792f0[shape=record, label="  %38 = add i32 %37, %20"];
	Node0x1679360[shape=record, label="  %39 = sub i32 %38, %23"];
	Node0x16793d0[shape=record, label="  %40 = sub i32 %39, %14"];
	Node0x1679440[shape=record, label="  %41 = sub i32 %40, %21"];
	Node0x16794b0[shape=record, label="  %42 = add i32 %41, %25"];
	Node0x1679520[shape=record, label="  %43 = sub i32 %42, %28"];
	Node0x1679590[shape=record, label="  %44 = add i32 %43, %17"];
	Node0x1679600[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x1679670[shape=record, label="  %46 = icmp eq i32 %7, %45"];
	Node0x1618268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1679b10[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0x1679b60[shape=record, label="  ret void"];
	Node0x1677b70 -> Node0x16781f0;
	Node0x16781f0 -> Node0x1678260;
	Node0x1678260 -> Node0x16782d0;
	Node0x16782d0 -> Node0x1678340;
	Node0x1678340 -> Node0x16783b0;
	Node0x16783b0 -> Node0x1678450;
	Node0x1678450 -> Node0x16784c0;
	Node0x16784c0 -> Node0x1678560;
	Node0x1678560 -> Node0x1678600;
	Node0x1678600 -> Node0x1678670;
	Node0x1678670 -> Node0x16786e0;
	Node0x16786e0 -> Node0x1678750;
	Node0x1678750 -> Node0x16787c0;
	Node0x16787c0 -> Node0x1678830;
	Node0x1678830 -> Node0x16788a0;
	Node0x16788a0 -> Node0x1678910;
	Node0x1678910 -> Node0x1678980;
	Node0x1678980 -> Node0x16789f0;
	Node0x16789f0 -> Node0x1678a60;
	Node0x1678a60 -> Node0x1678b00;
	Node0x1678b00 -> Node0x1678b70;
	Node0x1678b70 -> Node0x1678c10;
	Node0x1678c10 -> Node0x1678c80;
	Node0x1678c80 -> Node0x1678cf0;
	Node0x1678cf0 -> Node0x1678d60;
	Node0x1678d60 -> Node0x1678dd0;
	Node0x1678dd0 -> Node0x1678e40;
	Node0x1678e40 -> Node0x16790c0;
	Node0x16790c0 -> Node0x1679130;
	Node0x1679130 -> Node0x16791a0;
	Node0x16791a0 -> Node0x1679210;
	Node0x1679210 -> Node0x1679280;
	Node0x1679280 -> Node0x16792f0;
	Node0x16792f0 -> Node0x1679360;
	Node0x1679360 -> Node0x16793d0;
	Node0x16793d0 -> Node0x1679440;
	Node0x1679440 -> Node0x16794b0;
	Node0x16794b0 -> Node0x1679520;
	Node0x1679520 -> Node0x1679590;
	Node0x1679590 -> Node0x1679600;
	Node0x1679600 -> Node0x1679670;
	Node0x1679670 -> Node0x1618268;
	Node0x1618268 -> Node0x1679b10;
	Node0x1679b10 -> Node0x1679b60;
edge [color=red]
	Node0x1677b70 -> Node0x1678260;
	Node0x16781f0 -> Node0x1678260;
	Node0x16782d0 -> Node0x1678340;
	Node0x1678340 -> Node0x16783b0;
	Node0x16782d0 -> Node0x16784c0;
	Node0x1677b70 -> Node0x1678560;
	Node0x1678560 -> Node0x1678600;
	Node0x1678670 -> Node0x16786e0;
	Node0x16786e0 -> Node0x1678750;
	Node0x16787c0 -> Node0x1678830;
	Node0x1678670 -> Node0x1678910;
	Node0x1678980 -> Node0x16789f0;
	Node0x16788a0 -> Node0x1678a60;
	Node0x1678a60 -> Node0x1678b00;
	Node0x16789f0 -> Node0x1678b70;
	Node0x1678b70 -> Node0x1678c10;
	Node0x16787c0 -> Node0x1678c80;
	Node0x1678980 -> Node0x1678cf0;
	Node0x1678cf0 -> Node0x1678d60;
	Node0x1678450 -> Node0x1678d60;
	Node0x1678d60 -> Node0x1678dd0;
	Node0x16782d0 -> Node0x1678dd0;
	Node0x1678dd0 -> Node0x1678e40;
	Node0x1678e40 -> Node0x16790c0;
	Node0x16783b0 -> Node0x16790c0;
	Node0x16790c0 -> Node0x1679130;
	Node0x16784c0 -> Node0x1679130;
	Node0x1679130 -> Node0x16791a0;
	Node0x1678340 -> Node0x16791a0;
	Node0x16791a0 -> Node0x1679210;
	Node0x1679210 -> Node0x1679280;
	Node0x1678830 -> Node0x1679280;
	Node0x1679280 -> Node0x16792f0;
	Node0x16788a0 -> Node0x16792f0;
	Node0x16792f0 -> Node0x1679360;
	Node0x16789f0 -> Node0x1679360;
	Node0x1679360 -> Node0x16793d0;
	Node0x1678600 -> Node0x16793d0;
	Node0x16793d0 -> Node0x1679440;
	Node0x1678910 -> Node0x1679440;
	Node0x1679440 -> Node0x16794b0;
	Node0x1678b00 -> Node0x16794b0;
	Node0x16794b0 -> Node0x1679520;
	Node0x1678c80 -> Node0x1679520;
	Node0x1679520 -> Node0x1679590;
	Node0x1678750 -> Node0x1679590;
	Node0x1679590 -> Node0x1679600;
	Node0x1678c10 -> Node0x1679600;
	Node0x1678260 -> Node0x1679670;
	Node0x1679600 -> Node0x1679670;
	Node0x1679670 -> Node0x1618268;
	Node0x1618268 -> Node0x1679b10;
}
