digraph "DFG for'crackme' function" {
	Node0x1834770[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1834df0[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x1834e90[shape=record, label="  %7 = mul i32 %6, 5"];
	Node0x1834f00[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x1834f70[shape=record, label="  %9 = add i32 %7, -1"];
	Node0x1834fe0[shape=record, label="  %10 = and i32 %2, %1"];
	Node0x1835050[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x18350c0[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x1835130[shape=record, label="  %13 = xor i32 %10, -1"];
	Node0x18351a0[shape=record, label="  %14 = or i32 %2, %1"];
	Node0x1835240[shape=record, label="  %15 = shl i32 %14, 2"];
	Node0x18352e0[shape=record, label="  %16 = xor i32 %15, -4"];
	Node0x1835350[shape=record, label="  %17 = xor i32 %1, -1"];
	Node0x18353c0[shape=record, label="  %18 = and i32 %17, %2"];
	Node0x1835430[shape=record, label="  %19 = shl i32 %12, 2"];
	Node0x18354a0[shape=record, label="  %20 = shl i32 %10, 2"];
	Node0x1835510[shape=record, label="  %21 = and i32 %8, %3"];
	Node0x1835580[shape=record, label="  %22 = xor i32 %21, -1"];
	Node0x18355f0[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x1835690[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x1835730[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x18357a0[shape=record, label="  %26 = xor i32 %3, %0"];
	Node0x1835810[shape=record, label="  %27 = xor i32 %26, -1"];
	Node0x1835880[shape=record, label="  %28 = shl i32 %26, 1"];
	Node0x18358f0[shape=record, label="  %29 = or i32 %3, %0"];
	Node0x1835960[shape=record, label="  %30 = xor i32 %3, -1"];
	Node0x18359d0[shape=record, label="  %31 = xor i32 %29, -1"];
	Node0x1835a40[shape=record, label="  %32 = and i32 %30, %0"];
	Node0x1835cc0[shape=record, label="  %33 = add i32 %32, %31"];
	Node0x1835d60[shape=record, label="  %34 = mul i32 %33, -6"];
	Node0x1835dd0[shape=record, label="  %35 = sub i32 %22, %18"];
	Node0x1835e70[shape=record, label="  %36 = mul i32 %35, 3"];
	Node0x1835ee0[shape=record, label="  %37 = add i32 %12, %13"];
	Node0x1835f50[shape=record, label="  %38 = add i32 %37, %14"];
	Node0x1835fc0[shape=record, label="  %39 = add i32 %38, %5"];
	Node0x1836030[shape=record, label="  %40 = sub i32 %39, %3"];
	Node0x18360a0[shape=record, label="  %41 = add i32 %40, %30"];
	Node0x1836110[shape=record, label="  %42 = sub i32 %41, %19"];
	Node0x1836180[shape=record, label="  %43 = add i32 %42, %20"];
	Node0x18361f0[shape=record, label="  %44 = add i32 %43, %27"];
	Node0x1836260[shape=record, label="  %45 = sub i32 %44, %29"];
	Node0x18362d0[shape=record, label="  %46 = sub i32 %45, %21"];
	Node0x1836340[shape=record, label="  %47 = sub i32 %46, %23"];
	Node0x18363b0[shape=record, label="  %48 = add i32 %47, %16"];
	Node0x1836420[shape=record, label="  %49 = add i32 %48, %28"];
	Node0x1836490[shape=record, label="  %50 = add i32 %49, %25"];
	Node0x1836500[shape=record, label="  %51 = add i32 %50, %34"];
	Node0x1836570[shape=record, label="  %52 = add i32 %51, %36"];
	Node0x18365e0[shape=record, label="  %53 = icmp eq i32 %9, %52"];
	Node0x17d5268[shape=record, label="  %54 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1836a80[shape=record, label="  %55 = tail call i32 @puts(i8* nonnull dereferenceable(1) %54)"];
	Node0x1836ad0[shape=record, label="  ret void"];
	Node0x1834770 -> Node0x1834df0;
	Node0x1834df0 -> Node0x1834e90;
	Node0x1834e90 -> Node0x1834f00;
	Node0x1834f00 -> Node0x1834f70;
	Node0x1834f70 -> Node0x1834fe0;
	Node0x1834fe0 -> Node0x1835050;
	Node0x1835050 -> Node0x18350c0;
	Node0x18350c0 -> Node0x1835130;
	Node0x1835130 -> Node0x18351a0;
	Node0x18351a0 -> Node0x1835240;
	Node0x1835240 -> Node0x18352e0;
	Node0x18352e0 -> Node0x1835350;
	Node0x1835350 -> Node0x18353c0;
	Node0x18353c0 -> Node0x1835430;
	Node0x1835430 -> Node0x18354a0;
	Node0x18354a0 -> Node0x1835510;
	Node0x1835510 -> Node0x1835580;
	Node0x1835580 -> Node0x18355f0;
	Node0x18355f0 -> Node0x1835690;
	Node0x1835690 -> Node0x1835730;
	Node0x1835730 -> Node0x18357a0;
	Node0x18357a0 -> Node0x1835810;
	Node0x1835810 -> Node0x1835880;
	Node0x1835880 -> Node0x18358f0;
	Node0x18358f0 -> Node0x1835960;
	Node0x1835960 -> Node0x18359d0;
	Node0x18359d0 -> Node0x1835a40;
	Node0x1835a40 -> Node0x1835cc0;
	Node0x1835cc0 -> Node0x1835d60;
	Node0x1835d60 -> Node0x1835dd0;
	Node0x1835dd0 -> Node0x1835e70;
	Node0x1835e70 -> Node0x1835ee0;
	Node0x1835ee0 -> Node0x1835f50;
	Node0x1835f50 -> Node0x1835fc0;
	Node0x1835fc0 -> Node0x1836030;
	Node0x1836030 -> Node0x18360a0;
	Node0x18360a0 -> Node0x1836110;
	Node0x1836110 -> Node0x1836180;
	Node0x1836180 -> Node0x18361f0;
	Node0x18361f0 -> Node0x1836260;
	Node0x1836260 -> Node0x18362d0;
	Node0x18362d0 -> Node0x1836340;
	Node0x1836340 -> Node0x18363b0;
	Node0x18363b0 -> Node0x1836420;
	Node0x1836420 -> Node0x1836490;
	Node0x1836490 -> Node0x1836500;
	Node0x1836500 -> Node0x1836570;
	Node0x1836570 -> Node0x18365e0;
	Node0x18365e0 -> Node0x17d5268;
	Node0x17d5268 -> Node0x1836a80;
	Node0x1836a80 -> Node0x1836ad0;
edge [color=red]
	Node0x1834770 -> Node0x1834df0;
	Node0x1834df0 -> Node0x1834e90;
	Node0x1834e90 -> Node0x1834f70;
	Node0x1835050 -> Node0x18350c0;
	Node0x1834fe0 -> Node0x1835130;
	Node0x18351a0 -> Node0x1835240;
	Node0x1835240 -> Node0x18352e0;
	Node0x1835350 -> Node0x18353c0;
	Node0x18350c0 -> Node0x1835430;
	Node0x1834fe0 -> Node0x18354a0;
	Node0x1834f00 -> Node0x1835510;
	Node0x1835510 -> Node0x1835580;
	Node0x18355f0 -> Node0x1835690;
	Node0x1835690 -> Node0x1835730;
	Node0x18357a0 -> Node0x1835810;
	Node0x18357a0 -> Node0x1835880;
	Node0x18358f0 -> Node0x18359d0;
	Node0x1835960 -> Node0x1835a40;
	Node0x1835a40 -> Node0x1835cc0;
	Node0x18359d0 -> Node0x1835cc0;
	Node0x1835cc0 -> Node0x1835d60;
	Node0x1835580 -> Node0x1835dd0;
	Node0x18353c0 -> Node0x1835dd0;
	Node0x1835dd0 -> Node0x1835e70;
	Node0x18350c0 -> Node0x1835ee0;
	Node0x1835130 -> Node0x1835ee0;
	Node0x1835ee0 -> Node0x1835f50;
	Node0x18351a0 -> Node0x1835f50;
	Node0x1835f50 -> Node0x1835fc0;
	Node0x1834770 -> Node0x1835fc0;
	Node0x1835fc0 -> Node0x1836030;
	Node0x1836030 -> Node0x18360a0;
	Node0x1835960 -> Node0x18360a0;
	Node0x18360a0 -> Node0x1836110;
	Node0x1835430 -> Node0x1836110;
	Node0x1836110 -> Node0x1836180;
	Node0x18354a0 -> Node0x1836180;
	Node0x1836180 -> Node0x18361f0;
	Node0x1835810 -> Node0x18361f0;
	Node0x18361f0 -> Node0x1836260;
	Node0x18358f0 -> Node0x1836260;
	Node0x1836260 -> Node0x18362d0;
	Node0x1835510 -> Node0x18362d0;
	Node0x18362d0 -> Node0x1836340;
	Node0x18355f0 -> Node0x1836340;
	Node0x1836340 -> Node0x18363b0;
	Node0x18352e0 -> Node0x18363b0;
	Node0x18363b0 -> Node0x1836420;
	Node0x1835880 -> Node0x1836420;
	Node0x1836420 -> Node0x1836490;
	Node0x1835730 -> Node0x1836490;
	Node0x1836490 -> Node0x1836500;
	Node0x1835d60 -> Node0x1836500;
	Node0x1836500 -> Node0x1836570;
	Node0x1835e70 -> Node0x1836570;
	Node0x1834f70 -> Node0x18365e0;
	Node0x1836570 -> Node0x18365e0;
	Node0x18365e0 -> Node0x17d5268;
	Node0x17d5268 -> Node0x1836a80;
}
