digraph "DFG for'main' function" {
	Node0x1f898a8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1f89928[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1f899b8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1f89a18[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1f89e98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f8b698[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1f8b778[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f8b838[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1f8b8e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f8bb48[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1f8bc08[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1f8cb78[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1f8d1e8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1f8d2e0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1f8d4e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1f8d648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1f8d758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1f8d818[shape=record, label="  ret i32 0"];
	Node0x1f898a8 -> Node0x1f89928;
	Node0x1f89928 -> Node0x1f899b8;
	Node0x1f899b8 -> Node0x1f89a18;
	Node0x1f89a18 -> Node0x1f89e98;
	Node0x1f89e98 -> Node0x1f8b698;
	Node0x1f8b698 -> Node0x1f8b778;
	Node0x1f8b778 -> Node0x1f8b838;
	Node0x1f8b838 -> Node0x1f8b8e8;
	Node0x1f8b8e8 -> Node0x1f8bb48;
	Node0x1f8bb48 -> Node0x1f8bc08;
	Node0x1f8bc08 -> Node0x1f8cb78;
	Node0x1f8cb78 -> Node0x1f8d1e8;
	Node0x1f8d1e8 -> Node0x1f8d2e0;
	Node0x1f8d2e0 -> Node0x1f8d4e8;
	Node0x1f8d4e8 -> Node0x1f8d648;
	Node0x1f8d648 -> Node0x1f8d758;
	Node0x1f8d758 -> Node0x1f8d818;
edge [color=red]
	Node0x1f898a8 -> Node0x1f89a18;
	Node0x1f89a18 -> Node0x1f89e98;
	Node0x1f89928 -> Node0x1f8b698;
	Node0x1f8b698 -> Node0x1f8b778;
	Node0x1f899b8 -> Node0x1f8b838;
	Node0x1f8b838 -> Node0x1f8b8e8;
	Node0x1f898a8 -> Node0x1f8bb48;
	Node0x1f89928 -> Node0x1f8bb48;
	Node0x1f899b8 -> Node0x1f8bb48;
	Node0x1f898a8 -> Node0x1f8bc08;
	Node0x1f89928 -> Node0x1f8cb78;
	Node0x1f899b8 -> Node0x1f8d1e8;
	Node0x1f8bc08 -> Node0x1f8d2e0;
	Node0x1f8cb78 -> Node0x1f8d2e0;
	Node0x1f8d1e8 -> Node0x1f8d2e0;
	Node0x1f8b838 -> Node0x1f8d4e8;
	Node0x1f8b698 -> Node0x1f8d648;
	Node0x1f89a18 -> Node0x1f8d758;
}
