digraph "DFG for'crackme' function" {
	Node0x1ee1250[shape=record, label="  %3 = xor i32 %1, %0"];
	Node0x1ee1900[shape=record, label="  %4 = xor i32 %1, 2147483647"];
	Node0x1ee19c0[shape=record, label="  %5 = and i32 %4, %0"];
	Node0x1ee1a30[shape=record, label="  %6 = add i32 %5, %1"];
	Node0x1ee1aa0[shape=record, label="  %7 = shl i32 %6, 1"];
	Node0x1ee1b10[shape=record, label="  %8 = add i32 %1, %0"];
	Node0x1ee1b80[shape=record, label="  %9 = sub i32 %7, %8"];
	Node0x1ee1bf0[shape=record, label="  %10 = icmp eq i32 %3, %9"];
	Node0x1e82388[shape=record, label="  %11 = select i1 %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ee2090[shape=record, label="  %12 = tail call i32 @puts(i8* nonnull dereferenceable(1) %11)"];
	Node0x1ee20e0[shape=record, label="  ret void"];
	Node0x1ee1250 -> Node0x1ee1900;
	Node0x1ee1900 -> Node0x1ee19c0;
	Node0x1ee19c0 -> Node0x1ee1a30;
	Node0x1ee1a30 -> Node0x1ee1aa0;
	Node0x1ee1aa0 -> Node0x1ee1b10;
	Node0x1ee1b10 -> Node0x1ee1b80;
	Node0x1ee1b80 -> Node0x1ee1bf0;
	Node0x1ee1bf0 -> Node0x1e82388;
	Node0x1e82388 -> Node0x1ee2090;
	Node0x1ee2090 -> Node0x1ee20e0;
edge [color=red]
	Node0x1ee1900 -> Node0x1ee19c0;
	Node0x1ee19c0 -> Node0x1ee1a30;
	Node0x1ee1a30 -> Node0x1ee1aa0;
	Node0x1ee1aa0 -> Node0x1ee1b80;
	Node0x1ee1b10 -> Node0x1ee1b80;
	Node0x1ee1250 -> Node0x1ee1bf0;
	Node0x1ee1b80 -> Node0x1ee1bf0;
	Node0x1ee1bf0 -> Node0x1e82388;
	Node0x1e82388 -> Node0x1ee2090;
}
