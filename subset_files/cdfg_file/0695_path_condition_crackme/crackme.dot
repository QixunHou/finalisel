digraph "DFG for'crackme' function" {
	Node0x1596180[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x15961f0[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x1596260[shape=record, label="  %7 = sub i32 %6, %2"];
	Node0x15962d0[shape=record, label="  %8 = sub i32 %7, %3"];
	Node0x1596340[shape=record, label="  %9 = or i32 %3, %0"];
	Node0x15963b0[shape=record, label="  %10 = sub i32 %8, %9"];
	Node0x1596420[shape=record, label="  %11 = xor i32 %2, %1"];
	Node0x1596490[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1596500[shape=record, label="  %13 = or i32 %2, %1"];
	Node0x1596570[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x15965e0[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x1596680[shape=record, label="  %16 = shl i32 %1, 1"];
	Node0x1596720[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1596790[shape=record, label="  %18 = or i32 %5, %1"];
	Node0x1596800[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x1596870[shape=record, label="  %20 = xor i32 %13, -1"];
	Node0x15968e0[shape=record, label="  %21 = xor i32 %18, -1"];
	Node0x1596980[shape=record, label="  %22 = mul i32 %21, -6"];
	Node0x15969f0[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x1596a60[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x1596ad0[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x1596b40[shape=record, label="  %26 = shl i32 %9, 1"];
	Node0x1596bb0[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x1596c20[shape=record, label="  %28 = xor i32 %3, -1"];
	Node0x1596c90[shape=record, label="  %29 = and i32 %28, %0"];
	Node0x1596d00[shape=record, label="  %30 = add i32 %14, %20"];
	Node0x1596da0[shape=record, label="  %31 = mul i32 %30, -3"];
	Node0x1596e10[shape=record, label="  %32 = add i32 %2, -1"];
	Node0x1597090[shape=record, label="  %33 = add i32 %32, %12"];
	Node0x1597100[shape=record, label="  %34 = add i32 %33, %13"];
	Node0x1597170[shape=record, label="  %35 = sub i32 %34, %11"];
	Node0x15971e0[shape=record, label="  %36 = add i32 %35, %15"];
	Node0x1597250[shape=record, label="  %37 = add i32 %36, %17"];
	Node0x15972c0[shape=record, label="  %38 = add i32 %37, %6"];
	Node0x1597330[shape=record, label="  %39 = sub i32 %38, %19"];
	Node0x15973a0[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x1597410[shape=record, label="  %41 = add i32 %40, %29"];
	Node0x1597480[shape=record, label="  %42 = sub i32 %41, %24"];
	Node0x15974f0[shape=record, label="  %43 = add i32 %42, %31"];
	Node0x1597560[shape=record, label="  %44 = sub i32 %43, %25"];
	Node0x15975d0[shape=record, label="  %45 = add i32 %44, %27"];
	Node0x1597640[shape=record, label="  %46 = icmp eq i32 %10, %45"];
	Node0x1536268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1597ae0[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0x1597b30[shape=record, label="  ret void"];
	Node0x1596180 -> Node0x15961f0;
	Node0x15961f0 -> Node0x1596260;
	Node0x1596260 -> Node0x15962d0;
	Node0x15962d0 -> Node0x1596340;
	Node0x1596340 -> Node0x15963b0;
	Node0x15963b0 -> Node0x1596420;
	Node0x1596420 -> Node0x1596490;
	Node0x1596490 -> Node0x1596500;
	Node0x1596500 -> Node0x1596570;
	Node0x1596570 -> Node0x15965e0;
	Node0x15965e0 -> Node0x1596680;
	Node0x1596680 -> Node0x1596720;
	Node0x1596720 -> Node0x1596790;
	Node0x1596790 -> Node0x1596800;
	Node0x1596800 -> Node0x1596870;
	Node0x1596870 -> Node0x15968e0;
	Node0x15968e0 -> Node0x1596980;
	Node0x1596980 -> Node0x15969f0;
	Node0x15969f0 -> Node0x1596a60;
	Node0x1596a60 -> Node0x1596ad0;
	Node0x1596ad0 -> Node0x1596b40;
	Node0x1596b40 -> Node0x1596bb0;
	Node0x1596bb0 -> Node0x1596c20;
	Node0x1596c20 -> Node0x1596c90;
	Node0x1596c90 -> Node0x1596d00;
	Node0x1596d00 -> Node0x1596da0;
	Node0x1596da0 -> Node0x1596e10;
	Node0x1596e10 -> Node0x1597090;
	Node0x1597090 -> Node0x1597100;
	Node0x1597100 -> Node0x1597170;
	Node0x1597170 -> Node0x15971e0;
	Node0x15971e0 -> Node0x1597250;
	Node0x1597250 -> Node0x15972c0;
	Node0x15972c0 -> Node0x1597330;
	Node0x1597330 -> Node0x15973a0;
	Node0x15973a0 -> Node0x1597410;
	Node0x1597410 -> Node0x1597480;
	Node0x1597480 -> Node0x15974f0;
	Node0x15974f0 -> Node0x1597560;
	Node0x1597560 -> Node0x15975d0;
	Node0x15975d0 -> Node0x1597640;
	Node0x1597640 -> Node0x1536268;
	Node0x1536268 -> Node0x1597ae0;
	Node0x1597ae0 -> Node0x1597b30;
edge [color=red]
	Node0x1596180 -> Node0x15961f0;
	Node0x15961f0 -> Node0x1596260;
	Node0x1596260 -> Node0x15962d0;
	Node0x15962d0 -> Node0x15963b0;
	Node0x1596340 -> Node0x15963b0;
	Node0x1596420 -> Node0x1596490;
	Node0x1596570 -> Node0x15965e0;
	Node0x1596680 -> Node0x1596720;
	Node0x1596180 -> Node0x1596790;
	Node0x1596790 -> Node0x1596800;
	Node0x1596500 -> Node0x1596870;
	Node0x1596790 -> Node0x15968e0;
	Node0x15968e0 -> Node0x1596980;
	Node0x15969f0 -> Node0x1596a60;
	Node0x1596a60 -> Node0x1596ad0;
	Node0x1596340 -> Node0x1596b40;
	Node0x1596b40 -> Node0x1596bb0;
	Node0x1596c20 -> Node0x1596c90;
	Node0x1596570 -> Node0x1596d00;
	Node0x1596870 -> Node0x1596d00;
	Node0x1596d00 -> Node0x1596da0;
	Node0x1596e10 -> Node0x1597090;
	Node0x1596490 -> Node0x1597090;
	Node0x1597090 -> Node0x1597100;
	Node0x1596500 -> Node0x1597100;
	Node0x1597100 -> Node0x1597170;
	Node0x1596420 -> Node0x1597170;
	Node0x1597170 -> Node0x15971e0;
	Node0x15965e0 -> Node0x15971e0;
	Node0x15971e0 -> Node0x1597250;
	Node0x1596720 -> Node0x1597250;
	Node0x1597250 -> Node0x15972c0;
	Node0x15961f0 -> Node0x15972c0;
	Node0x15972c0 -> Node0x1597330;
	Node0x1596800 -> Node0x1597330;
	Node0x1597330 -> Node0x15973a0;
	Node0x1596980 -> Node0x15973a0;
	Node0x15973a0 -> Node0x1597410;
	Node0x1596c90 -> Node0x1597410;
	Node0x1597410 -> Node0x1597480;
	Node0x1596a60 -> Node0x1597480;
	Node0x1597480 -> Node0x15974f0;
	Node0x1596da0 -> Node0x15974f0;
	Node0x15974f0 -> Node0x1597560;
	Node0x1596ad0 -> Node0x1597560;
	Node0x1597560 -> Node0x15975d0;
	Node0x1596bb0 -> Node0x15975d0;
	Node0x15963b0 -> Node0x1597640;
	Node0x15975d0 -> Node0x1597640;
	Node0x1597640 -> Node0x1536268;
	Node0x1536268 -> Node0x1597ae0;
}
