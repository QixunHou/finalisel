digraph "DFG for'main' function" {
	Node0x1597cf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1597d78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1597e08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1597e68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1597f18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1598348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1598428[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1598528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x15985e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1598698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1598758[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1598808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1592ba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1598a08[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1599978[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1599fe8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x159a048[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x159a0c0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x159a130[shape=record, label="  %15 = and i32 %11, %14"];
	Node0x159a1a0[shape=record, label="  %16 = sub i32 %15, %12"];
	Node0x159a210[shape=record, label="  %17 = sub i32 %16, %13"];
	Node0x159a280[shape=record, label="  %18 = or i32 %13, %10"];
	Node0x159a2f0[shape=record, label="  %19 = sub i32 %17, %18"];
	Node0x159a360[shape=record, label="  %20 = xor i32 %12, %11"];
	Node0x159a3d0[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x159a440[shape=record, label="  %22 = or i32 %12, %11"];
	Node0x159a4b0[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x159a520[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x159a590[shape=record, label="  %25 = shl i32 %11, 1"];
	Node0x159a600[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x159a670[shape=record, label="  %27 = or i32 %11, %14"];
	Node0x159a6e0[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x159a750[shape=record, label="  %29 = xor i32 %22, -1"];
	Node0x159a7c0[shape=record, label="  %30 = xor i32 %27, -1"];
	Node0x159a830[shape=record, label="  %31 = mul i32 %30, -6"];
	Node0x159a8a0[shape=record, label="  %32 = and i32 %13, %10"];
	Node0x159a910[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x159a980[shape=record, label="  %34 = xor i32 %33, -2"];
	Node0x159a9f0[shape=record, label="  %35 = shl i32 %18, 1"];
	Node0x159aa60[shape=record, label="  %36 = xor i32 %35, -2"];
	Node0x159aad0[shape=record, label="  %37 = xor i32 %13, -1"];
	Node0x159ab40[shape=record, label="  %38 = and i32 %10, %37"];
	Node0x159abb0[shape=record, label="  %39 = add i32 %23, %29"];
	Node0x159ac20[shape=record, label="  %40 = mul i32 %39, -3"];
	Node0x159ac90[shape=record, label="  %41 = add i32 %12, -1"];
	Node0x159ad00[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x159ad70[shape=record, label="  %43 = add i32 %42, %22"];
	Node0x159ade0[shape=record, label="  %44 = sub i32 %43, %20"];
	Node0x159ae50[shape=record, label="  %45 = add i32 %44, %24"];
	Node0x159aec0[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x159af30[shape=record, label="  %47 = add i32 %46, %15"];
	Node0x159afa0[shape=record, label="  %48 = sub i32 %47, %28"];
	Node0x159b010[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x159b080[shape=record, label="  %50 = add i32 %49, %38"];
	Node0x159b0f0[shape=record, label="  %51 = sub i32 %50, %33"];
	Node0x159b160[shape=record, label="  %52 = add i32 %51, %40"];
	Node0x159b1d0[shape=record, label="  %53 = sub i32 %52, %34"];
	Node0x159b240[shape=record, label="  %54 = add i32 %53, %36"];
	Node0x159b2b0[shape=record, label="  %55 = icmp eq i32 %19, %54"];
	Node0x15378b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x159b340[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x159b5e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x159b748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x159b858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x159b968[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x159ba28[shape=record, label="  ret i32 0"];
	Node0x1597cf8 -> Node0x1597d78;
	Node0x1597d78 -> Node0x1597e08;
	Node0x1597e08 -> Node0x1597e68;
	Node0x1597e68 -> Node0x1597f18;
	Node0x1597f18 -> Node0x1598348;
	Node0x1598348 -> Node0x1598428;
	Node0x1598428 -> Node0x1598528;
	Node0x1598528 -> Node0x15985e8;
	Node0x15985e8 -> Node0x1598698;
	Node0x1598698 -> Node0x1598758;
	Node0x1598758 -> Node0x1598808;
	Node0x1598808 -> Node0x1592ba0;
	Node0x1592ba0 -> Node0x1598a08;
	Node0x1598a08 -> Node0x1599978;
	Node0x1599978 -> Node0x1599fe8;
	Node0x1599fe8 -> Node0x159a048;
	Node0x159a048 -> Node0x159a0c0;
	Node0x159a0c0 -> Node0x159a130;
	Node0x159a130 -> Node0x159a1a0;
	Node0x159a1a0 -> Node0x159a210;
	Node0x159a210 -> Node0x159a280;
	Node0x159a280 -> Node0x159a2f0;
	Node0x159a2f0 -> Node0x159a360;
	Node0x159a360 -> Node0x159a3d0;
	Node0x159a3d0 -> Node0x159a440;
	Node0x159a440 -> Node0x159a4b0;
	Node0x159a4b0 -> Node0x159a520;
	Node0x159a520 -> Node0x159a590;
	Node0x159a590 -> Node0x159a600;
	Node0x159a600 -> Node0x159a670;
	Node0x159a670 -> Node0x159a6e0;
	Node0x159a6e0 -> Node0x159a750;
	Node0x159a750 -> Node0x159a7c0;
	Node0x159a7c0 -> Node0x159a830;
	Node0x159a830 -> Node0x159a8a0;
	Node0x159a8a0 -> Node0x159a910;
	Node0x159a910 -> Node0x159a980;
	Node0x159a980 -> Node0x159a9f0;
	Node0x159a9f0 -> Node0x159aa60;
	Node0x159aa60 -> Node0x159aad0;
	Node0x159aad0 -> Node0x159ab40;
	Node0x159ab40 -> Node0x159abb0;
	Node0x159abb0 -> Node0x159ac20;
	Node0x159ac20 -> Node0x159ac90;
	Node0x159ac90 -> Node0x159ad00;
	Node0x159ad00 -> Node0x159ad70;
	Node0x159ad70 -> Node0x159ade0;
	Node0x159ade0 -> Node0x159ae50;
	Node0x159ae50 -> Node0x159aec0;
	Node0x159aec0 -> Node0x159af30;
	Node0x159af30 -> Node0x159afa0;
	Node0x159afa0 -> Node0x159b010;
	Node0x159b010 -> Node0x159b080;
	Node0x159b080 -> Node0x159b0f0;
	Node0x159b0f0 -> Node0x159b160;
	Node0x159b160 -> Node0x159b1d0;
	Node0x159b1d0 -> Node0x159b240;
	Node0x159b240 -> Node0x159b2b0;
	Node0x159b2b0 -> Node0x15378b8;
	Node0x15378b8 -> Node0x159b340;
	Node0x159b340 -> Node0x159b5e8;
	Node0x159b5e8 -> Node0x159b748;
	Node0x159b748 -> Node0x159b858;
	Node0x159b858 -> Node0x159b968;
	Node0x159b968 -> Node0x159ba28;
edge [color=red]
	Node0x1597cf8 -> Node0x1597f18;
	Node0x1597f18 -> Node0x1598348;
	Node0x1597d78 -> Node0x1598428;
	Node0x1598428 -> Node0x1598528;
	Node0x1597e08 -> Node0x15985e8;
	Node0x15985e8 -> Node0x1598698;
	Node0x1597e68 -> Node0x1598758;
	Node0x1598758 -> Node0x1598808;
	Node0x1597cf8 -> Node0x1592ba0;
	Node0x1597d78 -> Node0x1592ba0;
	Node0x1597e08 -> Node0x1592ba0;
	Node0x1597e68 -> Node0x1592ba0;
	Node0x1597cf8 -> Node0x1598a08;
	Node0x1597d78 -> Node0x1599978;
	Node0x1597e08 -> Node0x1599fe8;
	Node0x1597e68 -> Node0x159a048;
	Node0x1599fe8 -> Node0x159a0c0;
	Node0x1599978 -> Node0x159a130;
	Node0x159a0c0 -> Node0x159a130;
	Node0x159a130 -> Node0x159a1a0;
	Node0x1599fe8 -> Node0x159a1a0;
	Node0x159a1a0 -> Node0x159a210;
	Node0x159a048 -> Node0x159a210;
	Node0x159a048 -> Node0x159a280;
	Node0x1598a08 -> Node0x159a280;
	Node0x159a210 -> Node0x159a2f0;
	Node0x159a280 -> Node0x159a2f0;
	Node0x1599fe8 -> Node0x159a360;
	Node0x1599978 -> Node0x159a360;
	Node0x159a360 -> Node0x159a3d0;
	Node0x1599fe8 -> Node0x159a440;
	Node0x1599978 -> Node0x159a440;
	Node0x1599fe8 -> Node0x159a4b0;
	Node0x1599978 -> Node0x159a4b0;
	Node0x159a4b0 -> Node0x159a520;
	Node0x1599978 -> Node0x159a590;
	Node0x159a590 -> Node0x159a600;
	Node0x1599978 -> Node0x159a670;
	Node0x159a0c0 -> Node0x159a670;
	Node0x159a670 -> Node0x159a6e0;
	Node0x159a440 -> Node0x159a750;
	Node0x159a670 -> Node0x159a7c0;
	Node0x159a7c0 -> Node0x159a830;
	Node0x159a048 -> Node0x159a8a0;
	Node0x1598a08 -> Node0x159a8a0;
	Node0x159a8a0 -> Node0x159a910;
	Node0x159a910 -> Node0x159a980;
	Node0x159a280 -> Node0x159a9f0;
	Node0x159a9f0 -> Node0x159aa60;
	Node0x159a048 -> Node0x159aad0;
	Node0x1598a08 -> Node0x159ab40;
	Node0x159aad0 -> Node0x159ab40;
	Node0x159a4b0 -> Node0x159abb0;
	Node0x159a750 -> Node0x159abb0;
	Node0x159abb0 -> Node0x159ac20;
	Node0x1599fe8 -> Node0x159ac90;
	Node0x159ac90 -> Node0x159ad00;
	Node0x159a3d0 -> Node0x159ad00;
	Node0x159ad00 -> Node0x159ad70;
	Node0x159a440 -> Node0x159ad70;
	Node0x159ad70 -> Node0x159ade0;
	Node0x159a360 -> Node0x159ade0;
	Node0x159ade0 -> Node0x159ae50;
	Node0x159a520 -> Node0x159ae50;
	Node0x159ae50 -> Node0x159aec0;
	Node0x159a600 -> Node0x159aec0;
	Node0x159aec0 -> Node0x159af30;
	Node0x159a130 -> Node0x159af30;
	Node0x159af30 -> Node0x159afa0;
	Node0x159a6e0 -> Node0x159afa0;
	Node0x159afa0 -> Node0x159b010;
	Node0x159a830 -> Node0x159b010;
	Node0x159b010 -> Node0x159b080;
	Node0x159ab40 -> Node0x159b080;
	Node0x159b080 -> Node0x159b0f0;
	Node0x159a910 -> Node0x159b0f0;
	Node0x159b0f0 -> Node0x159b160;
	Node0x159ac20 -> Node0x159b160;
	Node0x159b160 -> Node0x159b1d0;
	Node0x159a980 -> Node0x159b1d0;
	Node0x159b1d0 -> Node0x159b240;
	Node0x159aa60 -> Node0x159b240;
	Node0x159a2f0 -> Node0x159b2b0;
	Node0x159b240 -> Node0x159b2b0;
	Node0x159b2b0 -> Node0x15378b8;
	Node0x15378b8 -> Node0x159b340;
	Node0x1598758 -> Node0x159b5e8;
	Node0x15985e8 -> Node0x159b748;
	Node0x1598428 -> Node0x159b858;
	Node0x1597f18 -> Node0x159b968;
}
