digraph "DFG for'main' function" {
	Node0x1ce34b8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ce3538[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ce35c8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ce3628[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x1ce3aa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ce3b88[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1ce3c88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ce3d48[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1ce3df8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ce4058[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1ce4118[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ce4278[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ce42d8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ce6520[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1ce6728[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ce6888[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ce6998[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ce6a58[shape=record, label="  ret i32 0"];
	Node0x1ce34b8 -> Node0x1ce3538;
	Node0x1ce3538 -> Node0x1ce35c8;
	Node0x1ce35c8 -> Node0x1ce3628;
	Node0x1ce3628 -> Node0x1ce3aa8;
	Node0x1ce3aa8 -> Node0x1ce3b88;
	Node0x1ce3b88 -> Node0x1ce3c88;
	Node0x1ce3c88 -> Node0x1ce3d48;
	Node0x1ce3d48 -> Node0x1ce3df8;
	Node0x1ce3df8 -> Node0x1ce4058;
	Node0x1ce4058 -> Node0x1ce4118;
	Node0x1ce4118 -> Node0x1ce4278;
	Node0x1ce4278 -> Node0x1ce42d8;
	Node0x1ce42d8 -> Node0x1ce6520;
	Node0x1ce6520 -> Node0x1ce6728;
	Node0x1ce6728 -> Node0x1ce6888;
	Node0x1ce6888 -> Node0x1ce6998;
	Node0x1ce6998 -> Node0x1ce6a58;
edge [color=red]
	Node0x1ce34b8 -> Node0x1ce3628;
	Node0x1ce3628 -> Node0x1ce3aa8;
	Node0x1ce3538 -> Node0x1ce3b88;
	Node0x1ce3b88 -> Node0x1ce3c88;
	Node0x1ce35c8 -> Node0x1ce3d48;
	Node0x1ce3d48 -> Node0x1ce3df8;
	Node0x1ce34b8 -> Node0x1ce4058;
	Node0x1ce3538 -> Node0x1ce4058;
	Node0x1ce35c8 -> Node0x1ce4058;
	Node0x1ce34b8 -> Node0x1ce4118;
	Node0x1ce3538 -> Node0x1ce4278;
	Node0x1ce35c8 -> Node0x1ce42d8;
	Node0x1ce4118 -> Node0x1ce6520;
	Node0x1ce4278 -> Node0x1ce6520;
	Node0x1ce42d8 -> Node0x1ce6520;
	Node0x1ce3d48 -> Node0x1ce6728;
	Node0x1ce3b88 -> Node0x1ce6888;
	Node0x1ce3628 -> Node0x1ce6998;
}
