digraph "DFG for'main' function" {
	Node0x92f168[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x92f1e8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x92f278[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x92f2d8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x92f758[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x92f838[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x92f938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x92f9f8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x92faa8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x92fd08[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x92fdc8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x92ff28[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x92ff88[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x935500[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x935708[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x935868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x935978[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x935a38[shape=record, label="  ret i32 0"];
	Node0x92f168 -> Node0x92f1e8;
	Node0x92f1e8 -> Node0x92f278;
	Node0x92f278 -> Node0x92f2d8;
	Node0x92f2d8 -> Node0x92f758;
	Node0x92f758 -> Node0x92f838;
	Node0x92f838 -> Node0x92f938;
	Node0x92f938 -> Node0x92f9f8;
	Node0x92f9f8 -> Node0x92faa8;
	Node0x92faa8 -> Node0x92fd08;
	Node0x92fd08 -> Node0x92fdc8;
	Node0x92fdc8 -> Node0x92ff28;
	Node0x92ff28 -> Node0x92ff88;
	Node0x92ff88 -> Node0x935500;
	Node0x935500 -> Node0x935708;
	Node0x935708 -> Node0x935868;
	Node0x935868 -> Node0x935978;
	Node0x935978 -> Node0x935a38;
edge [color=red]
	Node0x92f168 -> Node0x92f2d8;
	Node0x92f2d8 -> Node0x92f758;
	Node0x92f1e8 -> Node0x92f838;
	Node0x92f838 -> Node0x92f938;
	Node0x92f278 -> Node0x92f9f8;
	Node0x92f9f8 -> Node0x92faa8;
	Node0x92f168 -> Node0x92fd08;
	Node0x92f1e8 -> Node0x92fd08;
	Node0x92f278 -> Node0x92fd08;
	Node0x92f168 -> Node0x92fdc8;
	Node0x92f1e8 -> Node0x92ff28;
	Node0x92f278 -> Node0x92ff88;
	Node0x92fdc8 -> Node0x935500;
	Node0x92ff28 -> Node0x935500;
	Node0x92ff88 -> Node0x935500;
	Node0x92f9f8 -> Node0x935708;
	Node0x92f838 -> Node0x935868;
	Node0x92f2d8 -> Node0x935978;
}
