digraph "DFG for'crackme' function" {
	Node0x1075730[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1075db0[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x1075e50[shape=record, label="  %7 = xor i32 %6, -2"];
	Node0x1075ec0[shape=record, label="  %8 = add i32 %7, %5"];
	Node0x1075f60[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0x1075fd0[shape=record, label="  %10 = or i32 %9, %3"];
	Node0x1076040[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0x10760b0[shape=record, label="  %12 = add i32 %8, %11"];
	Node0x1076120[shape=record, label="  %13 = and i32 %3, %0"];
	Node0x1076190[shape=record, label="  %14 = shl i32 %13, 1"];
	Node0x1076200[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1076270[shape=record, label="  %16 = add i32 %12, %15"];
	Node0x1076310[shape=record, label="  %17 = sub i32 0, %16"];
	Node0x1076380[shape=record, label="  %18 = and i32 %2, %1"];
	Node0x10763f0[shape=record, label="  %19 = add i32 %18, 1"];
	Node0x1076460[shape=record, label="  %20 = xor i32 %1, -1"];
	Node0x1076500[shape=record, label="  %21 = xor i32 %2, 2147483647"];
	Node0x1076570[shape=record, label="  %22 = or i32 %2, %1"];
	Node0x10765e0[shape=record, label="  %23 = and i32 %20, %2"];
	Node0x1076650[shape=record, label="  %24 = and i32 %21, %1"];
	Node0x10766c0[shape=record, label="  %25 = or i32 %3, %0"];
	Node0x1076730[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x10767a0[shape=record, label="  %27 = xor i32 %9, %3"];
	Node0x1076810[shape=record, label="  %28 = and i32 %9, %3"];
	Node0x1076880[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x10768f0[shape=record, label="  %30 = xor i32 %25, -1"];
	Node0x1076990[shape=record, label="  %31 = mul i32 %30, -6"];
	Node0x1076a30[shape=record, label="  %32 = shl i32 %28, 2"];
	Node0x1076ce0[shape=record, label="  %33 = mul i32 %13, -3"];
	Node0x1076d50[shape=record, label="  %34 = add i32 %19, %3"];
	Node0x1076dc0[shape=record, label="  %35 = add i32 %34, %24"];
	Node0x1076e30[shape=record, label="  %36 = shl i32 %35, 1"];
	Node0x1076ea0[shape=record, label="  %37 = sub i32 1, %0"];
	Node0x1076f10[shape=record, label="  %38 = sub i32 %37, %1"];
	Node0x1076f80[shape=record, label="  %39 = add i32 %38, %20"];
	Node0x1076ff0[shape=record, label="  %40 = sub i32 %39, %2"];
	Node0x1077060[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x10770d0[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x1077140[shape=record, label="  %43 = add i32 %42, %27"];
	Node0x10771b0[shape=record, label="  %44 = add i32 %43, %29"];
	Node0x1077220[shape=record, label="  %45 = sub i32 %44, %26"];
	Node0x1077290[shape=record, label="  %46 = add i32 %45, %31"];
	Node0x1077300[shape=record, label="  %47 = sub i32 %46, %32"];
	Node0x1077370[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x10773e0[shape=record, label="  %49 = add i32 %48, %36"];
	Node0x1077450[shape=record, label="  %50 = icmp eq i32 %49, %17"];
	Node0x1016268[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x10778f0[shape=record, label="  %52 = tail call i32 @puts(i8* nonnull dereferenceable(1) %51)"];
	Node0x1077940[shape=record, label="  ret void"];
	Node0x1075730 -> Node0x1075db0;
	Node0x1075db0 -> Node0x1075e50;
	Node0x1075e50 -> Node0x1075ec0;
	Node0x1075ec0 -> Node0x1075f60;
	Node0x1075f60 -> Node0x1075fd0;
	Node0x1075fd0 -> Node0x1076040;
	Node0x1076040 -> Node0x10760b0;
	Node0x10760b0 -> Node0x1076120;
	Node0x1076120 -> Node0x1076190;
	Node0x1076190 -> Node0x1076200;
	Node0x1076200 -> Node0x1076270;
	Node0x1076270 -> Node0x1076310;
	Node0x1076310 -> Node0x1076380;
	Node0x1076380 -> Node0x10763f0;
	Node0x10763f0 -> Node0x1076460;
	Node0x1076460 -> Node0x1076500;
	Node0x1076500 -> Node0x1076570;
	Node0x1076570 -> Node0x10765e0;
	Node0x10765e0 -> Node0x1076650;
	Node0x1076650 -> Node0x10766c0;
	Node0x10766c0 -> Node0x1076730;
	Node0x1076730 -> Node0x10767a0;
	Node0x10767a0 -> Node0x1076810;
	Node0x1076810 -> Node0x1076880;
	Node0x1076880 -> Node0x10768f0;
	Node0x10768f0 -> Node0x1076990;
	Node0x1076990 -> Node0x1076a30;
	Node0x1076a30 -> Node0x1076ce0;
	Node0x1076ce0 -> Node0x1076d50;
	Node0x1076d50 -> Node0x1076dc0;
	Node0x1076dc0 -> Node0x1076e30;
	Node0x1076e30 -> Node0x1076ea0;
	Node0x1076ea0 -> Node0x1076f10;
	Node0x1076f10 -> Node0x1076f80;
	Node0x1076f80 -> Node0x1076ff0;
	Node0x1076ff0 -> Node0x1077060;
	Node0x1077060 -> Node0x10770d0;
	Node0x10770d0 -> Node0x1077140;
	Node0x1077140 -> Node0x10771b0;
	Node0x10771b0 -> Node0x1077220;
	Node0x1077220 -> Node0x1077290;
	Node0x1077290 -> Node0x1077300;
	Node0x1077300 -> Node0x1077370;
	Node0x1077370 -> Node0x10773e0;
	Node0x10773e0 -> Node0x1077450;
	Node0x1077450 -> Node0x1016268;
	Node0x1016268 -> Node0x10778f0;
	Node0x10778f0 -> Node0x1077940;
edge [color=red]
	Node0x1075730 -> Node0x1075db0;
	Node0x1075db0 -> Node0x1075e50;
	Node0x1075e50 -> Node0x1075ec0;
	Node0x1075730 -> Node0x1075ec0;
	Node0x1075f60 -> Node0x1075fd0;
	Node0x1075fd0 -> Node0x1076040;
	Node0x1075ec0 -> Node0x10760b0;
	Node0x1076040 -> Node0x10760b0;
	Node0x1076120 -> Node0x1076190;
	Node0x1076190 -> Node0x1076200;
	Node0x10760b0 -> Node0x1076270;
	Node0x1076200 -> Node0x1076270;
	Node0x1076270 -> Node0x1076310;
	Node0x1076380 -> Node0x10763f0;
	Node0x1076460 -> Node0x10765e0;
	Node0x1076500 -> Node0x1076650;
	Node0x10766c0 -> Node0x1076730;
	Node0x1075f60 -> Node0x10767a0;
	Node0x1075f60 -> Node0x1076810;
	Node0x1076810 -> Node0x1076880;
	Node0x10766c0 -> Node0x10768f0;
	Node0x10768f0 -> Node0x1076990;
	Node0x1076810 -> Node0x1076a30;
	Node0x1076120 -> Node0x1076ce0;
	Node0x10763f0 -> Node0x1076d50;
	Node0x1076d50 -> Node0x1076dc0;
	Node0x1076650 -> Node0x1076dc0;
	Node0x1076dc0 -> Node0x1076e30;
	Node0x1076ea0 -> Node0x1076f10;
	Node0x1076f10 -> Node0x1076f80;
	Node0x1076460 -> Node0x1076f80;
	Node0x1076f80 -> Node0x1076ff0;
	Node0x1076ff0 -> Node0x1077060;
	Node0x1076570 -> Node0x1077060;
	Node0x1077060 -> Node0x10770d0;
	Node0x10765e0 -> Node0x10770d0;
	Node0x10770d0 -> Node0x1077140;
	Node0x10767a0 -> Node0x1077140;
	Node0x1077140 -> Node0x10771b0;
	Node0x1076880 -> Node0x10771b0;
	Node0x10771b0 -> Node0x1077220;
	Node0x1076730 -> Node0x1077220;
	Node0x1077220 -> Node0x1077290;
	Node0x1076990 -> Node0x1077290;
	Node0x1077290 -> Node0x1077300;
	Node0x1076a30 -> Node0x1077300;
	Node0x1077300 -> Node0x1077370;
	Node0x1076ce0 -> Node0x1077370;
	Node0x1077370 -> Node0x10773e0;
	Node0x1076e30 -> Node0x10773e0;
	Node0x10773e0 -> Node0x1077450;
	Node0x1076310 -> Node0x1077450;
	Node0x1077450 -> Node0x1016268;
	Node0x1016268 -> Node0x10778f0;
}
