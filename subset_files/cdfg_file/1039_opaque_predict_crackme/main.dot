digraph "DFG for'main' function" {
	Node0x1333cf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1333d78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1333e08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1333e68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1333f18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1334348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1334428[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1334528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13345e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1334698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1334758[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1334808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x132eb80[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1334a08[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1335978[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1335fe8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1336048[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x13360c0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x1336130[shape=record, label="  %15 = mul i32 %14, -2"];
	Node0x13361a0[shape=record, label="  %16 = and i32 %13, %10"];
	Node0x1336210[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x1336280[shape=record, label="  %18 = add i32 %15, %17"];
	Node0x13362f0[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x1336360[shape=record, label="  %20 = or i32 %11, %19"];
	Node0x13363d0[shape=record, label="  %21 = and i32 %12, %11"];
	Node0x1336440[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0x13364b0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0x1336520[shape=record, label="  %24 = and i32 %11, %19"];
	Node0x1336590[shape=record, label="  %25 = shl i32 %24, 2"];
	Node0x1336600[shape=record, label="  %26 = or i32 %13, %10"];
	Node0x1336670[shape=record, label="  %27 = xor i32 %13, %10"];
	Node0x13366e0[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x1336750[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x13367c0[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x1336830[shape=record, label="  %31 = and i32 %13, %30"];
	Node0x13368a0[shape=record, label="  %32 = xor i32 %31, -1"];
	Node0x1336910[shape=record, label="  %33 = mul i32 %32, -5"];
	Node0x1336980[shape=record, label="  %34 = shl i32 %26, 2"];
	Node0x13369f0[shape=record, label="  %35 = xor i32 %34, -4"];
	Node0x1336a60[shape=record, label="  %36 = xor i32 %13, 2147483647"];
	Node0x1336ad0[shape=record, label="  %37 = and i32 %36, %10"];
	Node0x1336b40[shape=record, label="  %38 = add i32 %10, %19"];
	Node0x1336bb0[shape=record, label="  %39 = add i32 %38, %37"];
	Node0x1336c20[shape=record, label="  %40 = shl i32 %39, 1"];
	Node0x1336c90[shape=record, label="  %41 = add i32 %10, 5"];
	Node0x1336d00[shape=record, label="  %42 = add i32 %41, %11"];
	Node0x1336d70[shape=record, label="  %43 = add i32 %42, %20"];
	Node0x1336de0[shape=record, label="  %44 = add i32 %43, %14"];
	Node0x1336e50[shape=record, label="  %45 = sub i32 %44, %13"];
	Node0x1336ec0[shape=record, label="  %46 = sub i32 %45, %25"];
	Node0x1336f30[shape=record, label="  %47 = add i32 %46, %26"];
	Node0x1336fa0[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x1337010[shape=record, label="  %49 = add i32 %48, %23"];
	Node0x1337080[shape=record, label="  %50 = add i32 %49, %33"];
	Node0x13370f0[shape=record, label="  %51 = add i32 %50, %29"];
	Node0x1337160[shape=record, label="  %52 = add i32 %51, %35"];
	Node0x13371d0[shape=record, label="  %53 = add i32 %52, %40"];
	Node0x1337240[shape=record, label="  %54 = icmp eq i32 %18, %53"];
	Node0x12d38b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x13372d0[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x1337578[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x13376d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x13377e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x13378f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x13379b8[shape=record, label="  ret i32 0"];
	Node0x1333cf8 -> Node0x1333d78;
	Node0x1333d78 -> Node0x1333e08;
	Node0x1333e08 -> Node0x1333e68;
	Node0x1333e68 -> Node0x1333f18;
	Node0x1333f18 -> Node0x1334348;
	Node0x1334348 -> Node0x1334428;
	Node0x1334428 -> Node0x1334528;
	Node0x1334528 -> Node0x13345e8;
	Node0x13345e8 -> Node0x1334698;
	Node0x1334698 -> Node0x1334758;
	Node0x1334758 -> Node0x1334808;
	Node0x1334808 -> Node0x132eb80;
	Node0x132eb80 -> Node0x1334a08;
	Node0x1334a08 -> Node0x1335978;
	Node0x1335978 -> Node0x1335fe8;
	Node0x1335fe8 -> Node0x1336048;
	Node0x1336048 -> Node0x13360c0;
	Node0x13360c0 -> Node0x1336130;
	Node0x1336130 -> Node0x13361a0;
	Node0x13361a0 -> Node0x1336210;
	Node0x1336210 -> Node0x1336280;
	Node0x1336280 -> Node0x13362f0;
	Node0x13362f0 -> Node0x1336360;
	Node0x1336360 -> Node0x13363d0;
	Node0x13363d0 -> Node0x1336440;
	Node0x1336440 -> Node0x13364b0;
	Node0x13364b0 -> Node0x1336520;
	Node0x1336520 -> Node0x1336590;
	Node0x1336590 -> Node0x1336600;
	Node0x1336600 -> Node0x1336670;
	Node0x1336670 -> Node0x13366e0;
	Node0x13366e0 -> Node0x1336750;
	Node0x1336750 -> Node0x13367c0;
	Node0x13367c0 -> Node0x1336830;
	Node0x1336830 -> Node0x13368a0;
	Node0x13368a0 -> Node0x1336910;
	Node0x1336910 -> Node0x1336980;
	Node0x1336980 -> Node0x13369f0;
	Node0x13369f0 -> Node0x1336a60;
	Node0x1336a60 -> Node0x1336ad0;
	Node0x1336ad0 -> Node0x1336b40;
	Node0x1336b40 -> Node0x1336bb0;
	Node0x1336bb0 -> Node0x1336c20;
	Node0x1336c20 -> Node0x1336c90;
	Node0x1336c90 -> Node0x1336d00;
	Node0x1336d00 -> Node0x1336d70;
	Node0x1336d70 -> Node0x1336de0;
	Node0x1336de0 -> Node0x1336e50;
	Node0x1336e50 -> Node0x1336ec0;
	Node0x1336ec0 -> Node0x1336f30;
	Node0x1336f30 -> Node0x1336fa0;
	Node0x1336fa0 -> Node0x1337010;
	Node0x1337010 -> Node0x1337080;
	Node0x1337080 -> Node0x13370f0;
	Node0x13370f0 -> Node0x1337160;
	Node0x1337160 -> Node0x13371d0;
	Node0x13371d0 -> Node0x1337240;
	Node0x1337240 -> Node0x12d38b8;
	Node0x12d38b8 -> Node0x13372d0;
	Node0x13372d0 -> Node0x1337578;
	Node0x1337578 -> Node0x13376d8;
	Node0x13376d8 -> Node0x13377e8;
	Node0x13377e8 -> Node0x13378f8;
	Node0x13378f8 -> Node0x13379b8;
edge [color=red]
	Node0x1333cf8 -> Node0x1333f18;
	Node0x1333f18 -> Node0x1334348;
	Node0x1333d78 -> Node0x1334428;
	Node0x1334428 -> Node0x1334528;
	Node0x1333e08 -> Node0x13345e8;
	Node0x13345e8 -> Node0x1334698;
	Node0x1333e68 -> Node0x1334758;
	Node0x1334758 -> Node0x1334808;
	Node0x1333cf8 -> Node0x132eb80;
	Node0x1333d78 -> Node0x132eb80;
	Node0x1333e08 -> Node0x132eb80;
	Node0x1333e68 -> Node0x132eb80;
	Node0x1333cf8 -> Node0x1334a08;
	Node0x1333d78 -> Node0x1335978;
	Node0x1333e08 -> Node0x1335fe8;
	Node0x1333e68 -> Node0x1336048;
	Node0x1335fe8 -> Node0x13360c0;
	Node0x1335978 -> Node0x13360c0;
	Node0x13360c0 -> Node0x1336130;
	Node0x1336048 -> Node0x13361a0;
	Node0x1334a08 -> Node0x13361a0;
	Node0x13361a0 -> Node0x1336210;
	Node0x1336130 -> Node0x1336280;
	Node0x1336210 -> Node0x1336280;
	Node0x1335fe8 -> Node0x13362f0;
	Node0x1335978 -> Node0x1336360;
	Node0x13362f0 -> Node0x1336360;
	Node0x1335fe8 -> Node0x13363d0;
	Node0x1335978 -> Node0x13363d0;
	Node0x13363d0 -> Node0x1336440;
	Node0x1336440 -> Node0x13364b0;
	Node0x1335978 -> Node0x1336520;
	Node0x13362f0 -> Node0x1336520;
	Node0x1336520 -> Node0x1336590;
	Node0x1336048 -> Node0x1336600;
	Node0x1334a08 -> Node0x1336600;
	Node0x1336048 -> Node0x1336670;
	Node0x1334a08 -> Node0x1336670;
	Node0x1336670 -> Node0x13366e0;
	Node0x13366e0 -> Node0x1336750;
	Node0x1334a08 -> Node0x13367c0;
	Node0x1336048 -> Node0x1336830;
	Node0x13367c0 -> Node0x1336830;
	Node0x1336830 -> Node0x13368a0;
	Node0x13368a0 -> Node0x1336910;
	Node0x1336600 -> Node0x1336980;
	Node0x1336980 -> Node0x13369f0;
	Node0x1336048 -> Node0x1336a60;
	Node0x1336a60 -> Node0x1336ad0;
	Node0x1334a08 -> Node0x1336ad0;
	Node0x1334a08 -> Node0x1336b40;
	Node0x13362f0 -> Node0x1336b40;
	Node0x1336b40 -> Node0x1336bb0;
	Node0x1336ad0 -> Node0x1336bb0;
	Node0x1336bb0 -> Node0x1336c20;
	Node0x1334a08 -> Node0x1336c90;
	Node0x1336c90 -> Node0x1336d00;
	Node0x1335978 -> Node0x1336d00;
	Node0x1336d00 -> Node0x1336d70;
	Node0x1336360 -> Node0x1336d70;
	Node0x1336d70 -> Node0x1336de0;
	Node0x13360c0 -> Node0x1336de0;
	Node0x1336de0 -> Node0x1336e50;
	Node0x1336048 -> Node0x1336e50;
	Node0x1336e50 -> Node0x1336ec0;
	Node0x1336590 -> Node0x1336ec0;
	Node0x1336ec0 -> Node0x1336f30;
	Node0x1336600 -> Node0x1336f30;
	Node0x1336f30 -> Node0x1336fa0;
	Node0x1336830 -> Node0x1336fa0;
	Node0x1336fa0 -> Node0x1337010;
	Node0x13364b0 -> Node0x1337010;
	Node0x1337010 -> Node0x1337080;
	Node0x1336910 -> Node0x1337080;
	Node0x1337080 -> Node0x13370f0;
	Node0x1336750 -> Node0x13370f0;
	Node0x13370f0 -> Node0x1337160;
	Node0x13369f0 -> Node0x1337160;
	Node0x1337160 -> Node0x13371d0;
	Node0x1336c20 -> Node0x13371d0;
	Node0x1336280 -> Node0x1337240;
	Node0x13371d0 -> Node0x1337240;
	Node0x1337240 -> Node0x12d38b8;
	Node0x12d38b8 -> Node0x13372d0;
	Node0x1334758 -> Node0x1337578;
	Node0x13345e8 -> Node0x13376d8;
	Node0x1334428 -> Node0x13377e8;
	Node0x1333f18 -> Node0x13378f8;
}
