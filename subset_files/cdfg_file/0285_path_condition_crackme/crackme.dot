digraph "DFG for'crackme' function" {
	Node0x4fd730[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x4fddb0[shape=record, label="  %6 = mul i32 %5, -2"];
	Node0x4fde20[shape=record, label="  %7 = add i32 %6, %1"];
	Node0x4fde90[shape=record, label="  %8 = and i32 %3, %0"];
	Node0x4fdf30[shape=record, label="  %9 = xor i32 %0, -1"];
	Node0x4fdfa0[shape=record, label="  %10 = and i32 %9, %3"];
	Node0x4fe010[shape=record, label="  %11 = sub i32 %7, %8"];
	Node0x4fe080[shape=record, label="  %12 = add i32 %11, %10"];
	Node0x4fe0f0[shape=record, label="  %13 = xor i32 %2, -1"];
	Node0x4fe160[shape=record, label="  %14 = and i32 %13, %1"];
	Node0x4fe1d0[shape=record, label="  %15 = and i32 %2, %1"];
	Node0x4fe240[shape=record, label="  %16 = xor i32 %2, %1"];
	Node0x4fe2b0[shape=record, label="  %17 = xor i32 %5, -1"];
	Node0x4fe350[shape=record, label="  %18 = xor i32 %1, 2147483647"];
	Node0x4fe3c0[shape=record, label="  %19 = and i32 %18, %2"];
	Node0x4fe460[shape=record, label="  %20 = shl i32 %3, 1"];
	Node0x4fe4d0[shape=record, label="  %21 = or i32 %3, %0"];
	Node0x4fe540[shape=record, label="  %22 = or i32 %9, %3"];
	Node0x4fe5b0[shape=record, label="  %23 = xor i32 %20, -2"];
	Node0x4fe620[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0x4fe690[shape=record, label="  %25 = add i32 %24, 1"];
	Node0x4fe700[shape=record, label="  %26 = xor i32 %21, -1"];
	Node0x4fe770[shape=record, label="  %27 = xor i32 %22, -1"];
	Node0x4fe7e0[shape=record, label="  %28 = add i32 %25, %15"];
	Node0x4fe850[shape=record, label="  %29 = add i32 %28, %27"];
	Node0x4fe8f0[shape=record, label="  %30 = mul i32 %29, 3"];
	Node0x4fe960[shape=record, label="  %31 = or i32 %14, %19"];
	Node0x4fe9d0[shape=record, label="  %32 = shl i32 %31, 1"];
	Node0x4fec50[shape=record, label="  %33 = add i32 %26, %17"];
	Node0x4fecf0[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0x4fed60[shape=record, label="  %35 = sub i32 5, %0"];
	Node0x4fedd0[shape=record, label="  %36 = add i32 %35, %9"];
	Node0x4fee40[shape=record, label="  %37 = add i32 %36, %14"];
	Node0x4feeb0[shape=record, label="  %38 = add i32 %37, %15"];
	Node0x4fef20[shape=record, label="  %39 = add i32 %38, %16"];
	Node0x4fef90[shape=record, label="  %40 = add i32 %39, %20"];
	Node0x4ff000[shape=record, label="  %41 = add i32 %40, %21"];
	Node0x4ff070[shape=record, label="  %42 = sub i32 %41, %22"];
	Node0x4ff0e0[shape=record, label="  %43 = sub i32 %42, %24"];
	Node0x4ff150[shape=record, label="  %44 = sub i32 %43, %10"];
	Node0x4ff1c0[shape=record, label="  %45 = add i32 %44, %8"];
	Node0x4ff230[shape=record, label="  %46 = sub i32 %45, %23"];
	Node0x4ff2a0[shape=record, label="  %47 = add i32 %46, %32"];
	Node0x4ff310[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x4ff380[shape=record, label="  %49 = add i32 %48, %30"];
	Node0x4ff3f0[shape=record, label="  %50 = icmp eq i32 %12, %49"];
	Node0x49e268[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x4ff890[shape=record, label="  %52 = tail call i32 @puts(i8* nonnull dereferenceable(1) %51)"];
	Node0x4ff8e0[shape=record, label="  ret void"];
	Node0x4fd730 -> Node0x4fddb0;
	Node0x4fddb0 -> Node0x4fde20;
	Node0x4fde20 -> Node0x4fde90;
	Node0x4fde90 -> Node0x4fdf30;
	Node0x4fdf30 -> Node0x4fdfa0;
	Node0x4fdfa0 -> Node0x4fe010;
	Node0x4fe010 -> Node0x4fe080;
	Node0x4fe080 -> Node0x4fe0f0;
	Node0x4fe0f0 -> Node0x4fe160;
	Node0x4fe160 -> Node0x4fe1d0;
	Node0x4fe1d0 -> Node0x4fe240;
	Node0x4fe240 -> Node0x4fe2b0;
	Node0x4fe2b0 -> Node0x4fe350;
	Node0x4fe350 -> Node0x4fe3c0;
	Node0x4fe3c0 -> Node0x4fe460;
	Node0x4fe460 -> Node0x4fe4d0;
	Node0x4fe4d0 -> Node0x4fe540;
	Node0x4fe540 -> Node0x4fe5b0;
	Node0x4fe5b0 -> Node0x4fe620;
	Node0x4fe620 -> Node0x4fe690;
	Node0x4fe690 -> Node0x4fe700;
	Node0x4fe700 -> Node0x4fe770;
	Node0x4fe770 -> Node0x4fe7e0;
	Node0x4fe7e0 -> Node0x4fe850;
	Node0x4fe850 -> Node0x4fe8f0;
	Node0x4fe8f0 -> Node0x4fe960;
	Node0x4fe960 -> Node0x4fe9d0;
	Node0x4fe9d0 -> Node0x4fec50;
	Node0x4fec50 -> Node0x4fecf0;
	Node0x4fecf0 -> Node0x4fed60;
	Node0x4fed60 -> Node0x4fedd0;
	Node0x4fedd0 -> Node0x4fee40;
	Node0x4fee40 -> Node0x4feeb0;
	Node0x4feeb0 -> Node0x4fef20;
	Node0x4fef20 -> Node0x4fef90;
	Node0x4fef90 -> Node0x4ff000;
	Node0x4ff000 -> Node0x4ff070;
	Node0x4ff070 -> Node0x4ff0e0;
	Node0x4ff0e0 -> Node0x4ff150;
	Node0x4ff150 -> Node0x4ff1c0;
	Node0x4ff1c0 -> Node0x4ff230;
	Node0x4ff230 -> Node0x4ff2a0;
	Node0x4ff2a0 -> Node0x4ff310;
	Node0x4ff310 -> Node0x4ff380;
	Node0x4ff380 -> Node0x4ff3f0;
	Node0x4ff3f0 -> Node0x49e268;
	Node0x49e268 -> Node0x4ff890;
	Node0x4ff890 -> Node0x4ff8e0;
edge [color=red]
	Node0x4fd730 -> Node0x4fddb0;
	Node0x4fddb0 -> Node0x4fde20;
	Node0x4fdf30 -> Node0x4fdfa0;
	Node0x4fde20 -> Node0x4fe010;
	Node0x4fde90 -> Node0x4fe010;
	Node0x4fe010 -> Node0x4fe080;
	Node0x4fdfa0 -> Node0x4fe080;
	Node0x4fe0f0 -> Node0x4fe160;
	Node0x4fd730 -> Node0x4fe2b0;
	Node0x4fe350 -> Node0x4fe3c0;
	Node0x4fdf30 -> Node0x4fe540;
	Node0x4fe460 -> Node0x4fe5b0;
	Node0x4fe620 -> Node0x4fe690;
	Node0x4fe4d0 -> Node0x4fe700;
	Node0x4fe540 -> Node0x4fe770;
	Node0x4fe690 -> Node0x4fe7e0;
	Node0x4fe1d0 -> Node0x4fe7e0;
	Node0x4fe7e0 -> Node0x4fe850;
	Node0x4fe770 -> Node0x4fe850;
	Node0x4fe850 -> Node0x4fe8f0;
	Node0x4fe160 -> Node0x4fe960;
	Node0x4fe3c0 -> Node0x4fe960;
	Node0x4fe960 -> Node0x4fe9d0;
	Node0x4fe700 -> Node0x4fec50;
	Node0x4fe2b0 -> Node0x4fec50;
	Node0x4fec50 -> Node0x4fecf0;
	Node0x4fed60 -> Node0x4fedd0;
	Node0x4fdf30 -> Node0x4fedd0;
	Node0x4fedd0 -> Node0x4fee40;
	Node0x4fe160 -> Node0x4fee40;
	Node0x4fee40 -> Node0x4feeb0;
	Node0x4fe1d0 -> Node0x4feeb0;
	Node0x4feeb0 -> Node0x4fef20;
	Node0x4fe240 -> Node0x4fef20;
	Node0x4fef20 -> Node0x4fef90;
	Node0x4fe460 -> Node0x4fef90;
	Node0x4fef90 -> Node0x4ff000;
	Node0x4fe4d0 -> Node0x4ff000;
	Node0x4ff000 -> Node0x4ff070;
	Node0x4fe540 -> Node0x4ff070;
	Node0x4ff070 -> Node0x4ff0e0;
	Node0x4fe620 -> Node0x4ff0e0;
	Node0x4ff0e0 -> Node0x4ff150;
	Node0x4fdfa0 -> Node0x4ff150;
	Node0x4ff150 -> Node0x4ff1c0;
	Node0x4fde90 -> Node0x4ff1c0;
	Node0x4ff1c0 -> Node0x4ff230;
	Node0x4fe5b0 -> Node0x4ff230;
	Node0x4ff230 -> Node0x4ff2a0;
	Node0x4fe9d0 -> Node0x4ff2a0;
	Node0x4ff2a0 -> Node0x4ff310;
	Node0x4fecf0 -> Node0x4ff310;
	Node0x4ff310 -> Node0x4ff380;
	Node0x4fe8f0 -> Node0x4ff380;
	Node0x4fe080 -> Node0x4ff3f0;
	Node0x4ff380 -> Node0x4ff3f0;
	Node0x4ff3f0 -> Node0x49e268;
	Node0x49e268 -> Node0x4ff890;
}
