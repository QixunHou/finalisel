; ModuleID = '../.././c_source_file/1939_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1939_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, %0
  %8 = xor i32 %2, %0
  %9 = xor i32 %8, -1
  %10 = and i32 %7, %9
  %11 = or i32 %5, %3
  %12 = xor i32 %11, -1
  %13 = xor i32 %12, %4
  %14 = sub i32 %10, %13
  %15 = xor i32 %0, -1
  %16 = xor i32 %2, %1
  %17 = or i32 %16, %15
  %18 = and i32 %2, %1
  %19 = xor i32 %18, %0
  %20 = xor i32 %2, -1
  %21 = and i32 %20, %0
  %22 = xor i32 %21, %1
  %23 = shl i32 %22, 1
  %24 = xor i32 %1, -1
  %25 = or i32 %24, %0
  %26 = and i32 %18, %15
  %27 = and i32 %16, %0
  %28 = xor i32 %26, -1
  %29 = xor i32 %27, %28
  %30 = and i32 %20, %1
  %31 = xor i32 %30, -1
  %32 = or i32 %8, %7
  %33 = and i32 %24, %2
  %34 = and i32 %33, %0
  %35 = or i32 %16, %0
  %36 = xor i32 %35, -1
  %37 = or i32 %34, %36
  %38 = xor i32 %7, -1
  %39 = or i32 %21, %38
  %40 = or i32 %8, %38
  %41 = and i32 %2, %0
  %42 = or i32 %41, %24
  %43 = xor i32 %30, %0
  %44 = xor i32 %21, -1
  %45 = and i32 %7, %44
  %46 = or i32 %31, %0
  %47 = or i32 %9, %1
  %48 = or i32 %18, %15
  %49 = and i32 %33, %15
  %50 = xor i32 %49, %17
  %51 = and i32 %24, %0
  %52 = xor i32 %16, -1
  %53 = or i32 %51, %52
  %54 = or i32 %20, %1
  %55 = xor i32 %54, -1
  %56 = or i32 %55, %0
  %57 = xor i32 %51, -1
  %58 = and i32 %9, %24
  %59 = and i32 %20, %57
  %60 = or i32 %2, %0
  %61 = xor i32 %60, %1
  %62 = and i32 %1, %0
  %63 = xor i32 %62, -1
  %64 = and i32 %16, %63
  %65 = xor i32 %31, %0
  %66 = or i32 %7, %20
  %67 = xor i32 %25, -1
  %68 = add i32 %25, 1
  %69 = and i32 %18, %0
  %70 = and i32 %16, %15
  %71 = or i32 %69, %70
  %72 = xor i32 %44, %1
  %73 = and i32 %60, %24
  %74 = xor i32 %16, %0
  %75 = xor i32 %74, -1
  %76 = xor i32 %34, %75
  %77 = and i32 %44, %38
  %78 = or i32 %62, %52
  %79 = xor i32 %41, %1
  %80 = or i32 %24, %2
  %81 = and i32 %80, %0
  %82 = xor i32 %81, 2147483647
  %83 = xor i32 %82, %49
  %84 = or i32 %30, %51
  %85 = or i32 %20, %0
  %86 = and i32 %85, %38
  %87 = and i32 %31, %15
  %88 = xor i32 %18, -1
  %89 = xor i32 %51, %88
  %90 = xor i32 %60, -1
  %91 = or i32 %62, %90
  %92 = xor i32 %55, %0
  %93 = xor i32 %51, %31
  %94 = and i32 %16, %25
  %95 = or i32 %2, %1
  %96 = xor i32 %95, -1
  %97 = or i32 %96, %0
  %98 = and i32 %52, %0
  %99 = or i32 %9, %67
  %100 = or i32 %1, %0
  %101 = or i32 %62, %96
  %102 = xor i32 %100, -1
  %103 = add i32 %100, 1
  %104 = xor i32 %69, -1
  %105 = xor i32 %70, %104
  %106 = xor i32 %60, %62
  %107 = xor i32 %85, -1
  %108 = or i32 %62, %107
  %109 = xor i32 %21, %88
  %110 = or i32 %52, %0
  %111 = or i32 %41, %96
  %112 = and i32 %9, %63
  %113 = and i32 %60, %7
  %114 = and i32 %95, %0
  %115 = xor i32 %114, %28
  %116 = and i32 %85, %1
  %117 = and i32 %8, %1
  %118 = or i32 %7, %9
  %119 = xor i32 %95, %62
  %120 = or i32 %21, %7
  %121 = or i32 %8, %102
  %122 = xor i32 %54, %0
  %123 = and i32 %52, %15
  %124 = and i32 %95, %15
  %125 = xor i32 %124, %104
  %126 = or i32 %8, %24
  %127 = xor i32 %96, %0
  %128 = and i32 %52, %63
  %129 = xor i32 %17, -1
  %130 = or i32 %49, %129
  %131 = and i32 %25, %52
  %132 = or i32 %55, %15
  %133 = or i32 %90, %1
  %134 = and i32 %44, %24
  %135 = or i32 %21, %18
  %136 = and i32 %25, %20
  %137 = or i32 %69, %124
  %138 = shl i32 %137, 1
  %139 = and i32 %8, %24
  %140 = or i32 %67, %2
  %141 = xor i32 %54, %62
  %142 = shl i32 %38, 1
  %143 = xor i32 %41, -1
  %144 = and i32 %143, %38
  %145 = xor i32 %102, %2
  %146 = or i32 %7, %90
  %147 = or i32 %26, %114
  %148 = and i32 %57, %2
  %149 = xor i32 %21, %54
  %150 = and i32 %54, %0
  %151 = or i32 %8, %51
  %152 = xor i32 %69, %74
  %153 = or i32 %34, %74
  %154 = or i32 %20, %102
  %155 = and i32 %63, %2
  %156 = or i32 %107, %1
  %157 = or i32 %18, %51
  %158 = xor i32 %80, %0
  %159 = or i32 %34, %158
  %160 = xor i32 %62, %2
  %161 = xor i32 %95, %0
  %162 = xor i32 %161, 1073741823
  %163 = xor i32 %162, %69
  %164 = and i32 %31, %0
  %165 = and i32 %20, %38
  %166 = shl i32 %165, 1
  %167 = or i32 %30, %0
  %168 = or i32 %102, %2
  %169 = and i32 %9, %1
  %170 = and i32 %7, %2
  %171 = or i32 %107, %38
  %172 = xor i32 %34, %35
  %173 = xor i32 %63, %2
  %174 = shl i32 %173, 2
  %175 = or i32 %9, %102
  %176 = or i32 %41, %38
  %177 = and i32 %85, %24
  %178 = xor i32 %57, %2
  %179 = and i32 %8, %38
  %180 = or i32 %96, %15
  %181 = or i32 %41, %7
  %182 = and i32 %7, %20
  %183 = shl i32 %182, 1
  %184 = or i32 %21, %55
  %185 = and i32 %25, %2
  %186 = shl i32 %185, 1
  %187 = or i32 %41, %30
  %188 = and i32 %100, %2
  %189 = and i32 %60, %1
  %190 = shl i32 %2, 1
  %191 = xor i32 %67, %2
  %192 = and i32 %60, %38
  %193 = and i32 %9, %57
  %194 = or i32 %51, %9
  %195 = and i32 %7, %143
  %196 = and i32 %16, %57
  %197 = or i32 %38, %2
  %198 = and i32 %25, %9
  %199 = xor i32 %88, %0
  %200 = and i32 %8, %57
  %201 = shl i32 %200, 1
  %202 = or i32 %88, %0
  %203 = shl i32 %202, 1
  %204 = or i32 %52, %102
  %205 = or i32 %62, %9
  %206 = xor i32 %41, %31
  %207 = or i32 %30, %15
  %208 = or i32 %54, %15
  %209 = and i32 %52, %57
  %210 = or i32 %18, %0
  %211 = or i32 %88, %15
  %212 = and i32 %80, %15
  %213 = xor i32 %212, -1
  %214 = xor i32 %34, %213
  %215 = or i32 %49, %81
  %216 = or i32 %90, %38
  %217 = shl i32 %216, 1
  %218 = xor i32 %41, %25
  %219 = xor i32 %85, %62
  %220 = and i32 %9, %38
  %221 = or i32 %52, %67
  %222 = or i32 %41, %1
  %223 = and i32 %44, %1
  %224 = xor i32 %90, %1
  %225 = or i32 %62, %2
  %226 = or i32 %34, %212
  %227 = or i32 %16, %51
  %228 = or i32 %51, %20
  %229 = xor i32 %41, %100
  %230 = or i32 %31, %15
  %231 = and i32 %8, %25
  %232 = and i32 %143, %1
  %233 = xor i32 %107, %1
  %234 = or i32 %95, %0
  %235 = xor i32 %25, %2
  %236 = or i32 %9, %24
  %237 = or i32 %41, %102
  %238 = shl i32 %237, 2
  %239 = or i32 %95, %15
  %240 = shl i32 %239, 1
  %241 = xor i32 %158, 2147483647
  %242 = xor i32 %241, %34
  %243 = and i32 %54, %15
  %244 = or i32 %16, %62
  %245 = or i32 %62, %55
  %246 = shl i32 %245, 1
  %247 = or i32 %8, %62
  %248 = shl i32 %247, 1
  %249 = or i32 %7, %107
  %250 = or i32 %107, %24
  %251 = or i32 %8, %67
  %252 = shl i32 %107, 1
  %253 = xor i32 %143, %1
  %254 = and i32 %8, %63
  %255 = and i32 %100, %52
  %256 = or i32 %20, %38
  %257 = or i32 %69, %75
  %258 = and i32 %100, %9
  %259 = and i32 %88, %15
  %260 = add i32 %41, 1
  %261 = shl i32 %96, 1
  %262 = or i32 %21, %1
  %263 = xor i32 %85, %1
  %264 = and i32 %16, %100
  %265 = xor i32 %51, %2
  %266 = or i32 %8, %1
  %267 = and i32 %38, %2
  %268 = or i32 %21, %24
  %269 = xor i32 %52, %0
  %270 = shl i32 %269, 1
  %271 = and i32 %85, %7
  %272 = or i32 %16, %102
  %273 = or i32 %20, %67
  %274 = or i32 %62, %20
  %275 = or i32 %26, %27
  %276 = or i32 %9, %38
  %277 = or i32 %41, %67
  %278 = or i32 %90, %24
  %279 = and i32 %96, %15
  %280 = mul i32 %279, -19
  %281 = and i32 %96, %0
  %282 = and i32 %30, %0
  %283 = and i32 %55, %15
  %284 = mul i32 %283, -7
  %285 = shl i32 %26, 3
  %286 = and i32 %55, %0
  %287 = mul i32 %286, -18
  %288 = and i32 %4, %3
  %289 = xor i32 %5, %3
  %290 = or i32 %289, %288
  %291 = xor i32 %4, -1
  %292 = and i32 %5, %3
  %293 = xor i32 %292, -1
  %294 = or i32 %293, %291
  %295 = and i32 %292, %291
  %296 = and i32 %11, %4
  %297 = or i32 %295, %296
  %298 = xor i32 %11, %288
  %299 = or i32 %5, %4
  %300 = xor i32 %4, %3
  %301 = xor i32 %300, -1
  %302 = and i32 %299, %301
  %303 = xor i32 %5, -1
  %304 = and i32 %303, %4
  %305 = xor i32 %304, %3
  %306 = xor i32 %299, -1
  %307 = or i32 %300, %306
  %308 = xor i32 %288, -1
  %309 = xor i32 %308, %5
  %310 = and i32 %292, %4
  %311 = and i32 %289, %291
  %312 = xor i32 %310, -1
  %313 = xor i32 %311, %312
  %314 = and i32 %11, %291
  %315 = xor i32 %3, -1
  %316 = and i32 %315, %4
  %317 = xor i32 %316, -1
  %318 = and i32 %303, %317
  %319 = and i32 %315, %5
  %320 = and i32 %319, %4
  %321 = xor i32 %289, %4
  %322 = or i32 %320, %321
  %323 = and i32 %5, %4
  %324 = or i32 %323, %315
  %325 = xor i32 %299, %288
  %326 = xor i32 %306, %3
  %327 = shl i32 %326, 1
  %328 = and i32 %299, %3
  %329 = or i32 %315, %4
  %330 = xor i32 %5, %4
  %331 = and i32 %330, %329
  %332 = shl i32 %331, 1
  %333 = and i32 %303, %3
  %334 = or i32 %4, %3
  %335 = xor i32 %334, -1
  %336 = or i32 %289, %335
  %337 = or i32 %289, %4
  %338 = xor i32 %320, %337
  %339 = shl i32 %338, 1
  %340 = xor i32 %296, -1
  %341 = xor i32 %295, %340
  %342 = or i32 %335, %5
  %343 = and i32 %289, %317
  %344 = xor i32 %289, -1
  %345 = and i32 %344, %308
  %346 = and i32 %319, %291
  %347 = or i32 %289, %291
  %348 = xor i32 %347, -1
  %349 = or i32 %346, %348
  %350 = or i32 %306, %3
  %351 = or i32 %315, %5
  %352 = xor i32 %351, %291
  %353 = xor i32 %352, %320
  %354 = or i32 %293, %4
  %355 = xor i32 %329, -1
  %356 = xor i32 %333, -1
  %357 = xor i32 %356, %4
  %358 = xor i32 %11, %4
  %359 = or i32 %310, %358
  %360 = xor i32 %330, -1
  %361 = and i32 %360, %315
  %362 = shl i32 %356, 1
  %363 = xor i32 %323, %329
  %364 = or i32 %330, %300
  %365 = or i32 %304, %315
  %366 = add i32 %334, 1
  %367 = or i32 %303, %3
  %368 = xor i32 %304, %367
  %369 = and i32 %317, %5
  %370 = and i32 %360, %3
  %371 = shl i32 %308, 1
  %372 = or i32 %303, %4
  %373 = xor i32 %372, %3
  %374 = and i32 %293, %4
  %375 = or i32 %360, %355
  %376 = xor i32 %316, %356
  %377 = or i32 %306, %315
  %378 = xor i32 %323, %11
  %379 = or i32 %288, %12
  %380 = and i32 %289, %4
  %381 = or i32 %295, %380
  %382 = add i32 %289, 1
  %383 = or i32 %310, %311
  %384 = shl i32 %360, 1
  %385 = or i32 %323, %355
  %386 = xor i32 %323, -1
  %387 = and i32 %386, %3
  %388 = and i32 %300, %5
  %389 = and i32 %308, %5
  %390 = add i32 %4, 1
  %391 = and i32 %360, %317
  %392 = and i32 %334, %303
  %393 = or i32 %344, %291
  %394 = or i32 %11, %4
  %395 = and i32 %344, %317
  %396 = shl i32 %395, 1
  %397 = xor i32 %304, -1
  %398 = and i32 %397, %315
  %399 = and i32 %289, %308
  %400 = and i32 %303, %301
  %401 = or i32 %333, %316
  %402 = and i32 %303, %308
  %403 = or i32 %330, %3
  %404 = or i32 %367, %4
  %405 = shl i32 %404, 1
  %406 = or i32 %323, %335
  %407 = shl i32 %406, 1
  %408 = and i32 %330, %308
  %409 = and i32 %386, %301
  %410 = shl i32 %409, 2
  %411 = and i32 %289, %334
  %412 = and i32 %329, %344
  %413 = and i32 %330, %300
  %414 = or i32 %288, %303
  %415 = and i32 %300, %360
  %416 = xor i32 %367, -1
  %417 = or i32 %288, %416
  %418 = xor i32 %397, %3
  %419 = or i32 %360, %301
  %420 = or i32 %304, %300
  %421 = or i32 %344, %335
  %422 = or i32 %292, %316
  %423 = or i32 %304, %3
  %424 = or i32 %416, %4
  %425 = and i32 %300, %303
  %426 = or i32 %289, %355
  %427 = xor i32 %304, %293
  %428 = shl i32 %427, 1
  %429 = or i32 %323, %12
  %430 = and i32 %344, %291
  %431 = or i32 %301, %5
  %432 = or i32 %306, %301
  %433 = and i32 %301, %5
  %434 = xor i32 %314, %312
  %435 = xor i32 %293, %4
  %436 = or i32 %360, %3
  %437 = and i32 %356, %291
  %438 = add i32 %367, 1
  %439 = or i32 %288, %360
  %440 = shl i32 %439, 1
  %441 = or i32 %316, %5
  %442 = and i32 %397, %3
  %443 = shl i32 %12, 1
  %444 = or i32 %333, %4
  %445 = xor i32 %299, %3
  %446 = or i32 %292, %4
  %447 = and i32 %397, %301
  %448 = shl i32 %447, 2
  %449 = or i32 %344, %355
  %450 = or i32 %303, %301
  %451 = or i32 %316, %344
  %452 = and i32 %329, %5
  %453 = and i32 %330, %3
  %454 = and i32 %299, %300
  %455 = or i32 %356, %291
  %456 = xor i32 %351, 2147483647
  %457 = or i32 %456, %4
  %458 = xor i32 %457, %320
  %459 = shl i32 %458, 1
  %460 = xor i32 %316, %293
  %461 = shl i32 %460, 1
  %462 = and i32 %329, %303
  %463 = and i32 %360, %301
  %464 = or i32 %333, %291
  %465 = and i32 %367, %291
  %466 = xor i32 %317, %5
  %467 = xor i32 %416, %4
  %468 = or i32 %330, %335
  %469 = or i32 %330, %315
  %470 = xor i32 %310, %321
  %471 = or i32 %288, %306
  %472 = and i32 %330, %334
  %473 = and i32 %360, %308
  %474 = or i32 %304, %301
  %475 = xor i32 %316, %5
  %476 = or i32 %416, %291
  %477 = xor i32 %346, %347
  %478 = and i32 %330, %317
  %479 = shl i32 %478, 1
  %480 = or i32 %355, %5
  %481 = xor i32 %372, -1
  %482 = xor i32 %481, %3
  %483 = shl i32 %301, 1
  %484 = xor i32 %323, %3
  %485 = and i32 %372, %315
  %486 = shl i32 %485, 1
  %487 = add i32 %292, 1
  %488 = or i32 %344, %4
  %489 = and i32 %329, %360
  %490 = and i32 %289, %329
  %491 = or i32 %12, %291
  %492 = or i32 %330, %301
  %493 = or i32 %289, %316
  %494 = xor i32 %334, %5
  %495 = and i32 %334, %344
  %496 = xor i32 %288, %5
  %497 = or i32 %481, %301
  %498 = xor i32 %367, %4
  %499 = xor i32 %321, -1
  %500 = xor i32 %320, %499
  %501 = and i32 %330, %315
  %502 = add i32 %372, 1
  %503 = or i32 %356, %4
  %504 = shl i32 %503, 1
  %505 = xor i32 %292, %4
  %506 = and i32 %334, %360
  %507 = xor i32 %337, 2147483647
  %508 = or i32 %507, %320
  %509 = and i32 %330, %301
  %510 = or i32 %481, %3
  %511 = and i32 %300, %386
  %512 = and i32 %351, %4
  %513 = xor i32 %512, -1
  %514 = xor i32 %346, %513
  %515 = or i32 %316, %360
  %516 = or i32 %310, %499
  %517 = or i32 %346, %512
  %518 = xor i32 %323, %356
  %519 = or i32 %300, %5
  %520 = or i32 %11, %291
  %521 = and i32 %12, %291
  %522 = mul i32 %521, 31
  %523 = and i32 %333, %291
  %524 = and i32 %12, %4
  %525 = and i32 %333, %4
  %526 = and i32 %416, %291
  %527 = mul i32 %295, -10
  %528 = and i32 %416, %4
  %529 = add i32 %16, %7
  %530 = add i32 %529, %273
  %531 = add i32 %530, %145
  %532 = add i32 %531, %31
  %533 = add i32 %532, %4
  %534 = add i32 %533, %268
  %535 = add i32 %534, %254
  %536 = add i32 %535, %250
  %537 = add i32 %536, %211
  %538 = add i32 %537, %189
  %539 = add i32 %538, %134
  %540 = add i32 %539, %109
  %541 = add i32 %540, %79
  %542 = add i32 %541, %78
  %543 = add i32 %542, %72
  %544 = add i32 %543, %61
  %545 = add i32 %544, %5
  %546 = add i32 %545, %153
  %547 = add i32 %546, %76
  %548 = add i32 %547, %71
  %549 = add i32 %548, %306
  %550 = add i32 %549, %475
  %551 = add i32 %550, %289
  %552 = add i32 %551, %372
  %553 = add i32 %552, %342
  %554 = add i32 %553, %242
  %555 = add i32 %554, %83
  %556 = add i32 %555, %495
  %557 = add i32 %556, %403
  %558 = add i32 %557, %399
  %559 = add i32 %558, %393
  %560 = add i32 %559, %373
  %561 = add i32 %560, %357
  %562 = add i32 %561, %298
  %563 = add i32 %562, %477
  %564 = add i32 %563, %508
  %565 = shl i32 %564, 1
  %566 = add i32 %69, %170
  %567 = sub i32 %566, %264
  %568 = add i32 %567, %251
  %569 = sub i32 %568, %210
  %570 = sub i32 %569, %275
  %571 = add i32 %570, %525
  %572 = add i32 %571, %310
  %573 = sub i32 %572, %501
  %574 = mul i32 %573, 5
  %575 = add i32 %205, %188
  %576 = add i32 %575, %132
  %577 = add i32 %576, %163
  %578 = add i32 %577, %419
  %579 = add i32 %578, %523
  %580 = shl i32 %579, 2
  %581 = add i32 %526, %524
  %582 = mul i32 %581, 15
  %583 = sub i32 -2, %18
  %584 = sub i32 %583, %282
  %585 = sub i32 %584, %255
  %586 = add i32 %585, %215
  %587 = add i32 %586, %482
  %588 = sub i32 %587, %528
  %589 = sub i32 %588, %473
  %590 = sub i32 %589, %411
  %591 = sub i32 %590, %350
  %592 = mul i32 %591, 3
  %593 = add i32 %1, 5
  %594 = add i32 %593, %1
  %595 = add i32 %594, %25
  %596 = add i32 %595, %57
  %597 = add i32 %596, %68
  %598 = add i32 %597, %100
  %599 = add i32 %598, %103
  %600 = add i32 %599, %20
  %601 = add i32 %600, %9
  %602 = add i32 %601, %59
  %603 = sub i32 %602, %66
  %604 = add i32 %603, %90
  %605 = add i32 %604, %41
  %606 = add i32 %605, %136
  %607 = sub i32 %606, %140
  %608 = sub i32 %607, %142
  %609 = add i32 %608, %148
  %610 = sub i32 %609, %154
  %611 = add i32 %610, %155
  %612 = add i32 %611, %160
  %613 = add i32 %612, %168
  %614 = sub i32 %613, %178
  %615 = sub i32 %614, %190
  %616 = add i32 %615, %191
  %617 = add i32 %616, %55
  %618 = sub i32 %617, %54
  %619 = sub i32 %618, %197
  %620 = add i32 %619, %95
  %621 = sub i32 %620, %8
  %622 = add i32 %621, %225
  %623 = add i32 %622, %228
  %624 = sub i32 %623, %235
  %625 = add i32 %624, %52
  %626 = add i32 %625, %21
  %627 = add i32 %626, %256
  %628 = add i32 %627, %85
  %629 = add i32 %628, %260
  %630 = add i32 %629, %265
  %631 = add i32 %630, %30
  %632 = sub i32 %631, %267
  %633 = add i32 %632, %274
  %634 = sub i32 %633, %3
  %635 = sub i32 %634, %17
  %636 = add i32 %635, %19
  %637 = add i32 %636, %32
  %638 = sub i32 %637, %35
  %639 = sub i32 %638, %39
  %640 = sub i32 %639, %40
  %641 = sub i32 %640, %42
  %642 = sub i32 %641, %43
  %643 = sub i32 %642, %45
  %644 = sub i32 %643, %46
  %645 = sub i32 %644, %47
  %646 = add i32 %645, %48
  %647 = add i32 %646, %53
  %648 = add i32 %647, %56
  %649 = add i32 %648, %58
  %650 = add i32 %649, %64
  %651 = add i32 %650, %65
  %652 = sub i32 %651, %73
  %653 = add i32 %652, %77
  %654 = sub i32 %653, %84
  %655 = add i32 %654, %86
  %656 = sub i32 %655, %87
  %657 = sub i32 %656, %89
  %658 = sub i32 %657, %91
  %659 = add i32 %658, %92
  %660 = add i32 %659, %93
  %661 = sub i32 %660, %94
  %662 = add i32 %661, %97
  %663 = add i32 %662, %98
  %664 = add i32 %663, %99
  %665 = sub i32 %664, %27
  %666 = add i32 %665, %101
  %667 = sub i32 %666, %106
  %668 = add i32 %667, %108
  %669 = sub i32 %668, %110
  %670 = add i32 %669, %111
  %671 = add i32 %670, %112
  %672 = add i32 %671, %113
  %673 = add i32 %672, %116
  %674 = add i32 %673, %117
  %675 = add i32 %674, %118
  %676 = sub i32 %675, %119
  %677 = sub i32 %676, %120
  %678 = add i32 %677, %121
  %679 = add i32 %678, %122
  %680 = sub i32 %679, %123
  %681 = add i32 %680, %126
  %682 = add i32 %681, %127
  %683 = sub i32 %682, %128
  %684 = sub i32 %683, %70
  %685 = sub i32 %684, %131
  %686 = sub i32 %685, %133
  %687 = add i32 %686, %135
  %688 = sub i32 %687, %139
  %689 = sub i32 %688, %141
  %690 = add i32 %689, %144
  %691 = add i32 %690, %146
  %692 = sub i32 %691, %149
  %693 = sub i32 %692, %150
  %694 = sub i32 %693, %151
  %695 = sub i32 %694, %156
  %696 = add i32 %695, %157
  %697 = add i32 %696, %164
  %698 = sub i32 %697, %166
  %699 = sub i32 %698, %167
  %700 = sub i32 %699, %169
  %701 = add i32 %700, %124
  %702 = add i32 %701, %171
  %703 = sub i32 %702, %174
  %704 = sub i32 %703, %175
  %705 = sub i32 %704, %176
  %706 = add i32 %705, %177
  %707 = add i32 %706, %179
  %708 = sub i32 %707, %180
  %709 = sub i32 %708, %181
  %710 = sub i32 %709, %183
  %711 = add i32 %710, %184
  %712 = sub i32 %711, %186
  %713 = sub i32 %712, %187
  %714 = sub i32 %713, %192
  %715 = sub i32 %714, %193
  %716 = add i32 %715, %194
  %717 = sub i32 %716, %195
  %718 = add i32 %717, %196
  %719 = add i32 %718, %198
  %720 = add i32 %719, %199
  %721 = sub i32 %720, %204
  %722 = sub i32 %721, %206
  %723 = add i32 %722, %207
  %724 = add i32 %723, %208
  %725 = sub i32 %724, %209
  %726 = sub i32 %725, %218
  %727 = sub i32 %726, %219
  %728 = add i32 %727, %220
  %729 = sub i32 %728, %114
  %730 = add i32 %729, %221
  %731 = sub i32 %730, %222
  %732 = sub i32 %731, %223
  %733 = add i32 %732, %224
  %734 = add i32 %733, %227
  %735 = add i32 %734, %229
  %736 = sub i32 %735, %230
  %737 = sub i32 %736, %231
  %738 = sub i32 %737, %232
  %739 = sub i32 %738, %233
  %740 = sub i32 %739, %234
  %741 = sub i32 %740, %236
  %742 = add i32 %741, %74
  %743 = add i32 %742, %243
  %744 = sub i32 %743, %244
  %745 = add i32 %744, %249
  %746 = sub i32 %745, %252
  %747 = add i32 %746, %253
  %748 = sub i32 %747, %258
  %749 = add i32 %748, %259
  %750 = sub i32 %749, %261
  %751 = sub i32 %750, %161
  %752 = sub i32 %751, %262
  %753 = sub i32 %752, %263
  %754 = sub i32 %753, %266
  %755 = sub i32 %754, %271
  %756 = sub i32 %755, %272
  %757 = add i32 %756, %276
  %758 = sub i32 %757, %277
  %759 = sub i32 %758, %278
  %760 = sub i32 %759, %281
  %761 = add i32 %760, %390
  %762 = sub i32 %761, %23
  %763 = sub i32 %762, %29
  %764 = add i32 %763, %37
  %765 = sub i32 %764, %50
  %766 = sub i32 %765, %105
  %767 = sub i32 %766, %115
  %768 = sub i32 %767, %125
  %769 = add i32 %768, %130
  %770 = add i32 %769, %147
  %771 = sub i32 %770, %152
  %772 = add i32 %771, %159
  %773 = add i32 %772, %172
  %774 = sub i32 %773, %201
  %775 = sub i32 %774, %203
  %776 = sub i32 %775, %214
  %777 = sub i32 %776, %217
  %778 = sub i32 %777, %226
  %779 = sub i32 %778, %238
  %780 = sub i32 %779, %240
  %781 = sub i32 %780, %246
  %782 = sub i32 %781, %248
  %783 = add i32 %782, %257
  %784 = sub i32 %783, %270
  %785 = add i32 %784, %280
  %786 = add i32 %785, %284
  %787 = sub i32 %786, %285
  %788 = add i32 %787, %287
  %789 = add i32 %788, %334
  %790 = add i32 %789, %288
  %791 = add i32 %790, %366
  %792 = sub i32 %791, %316
  %793 = add i32 %792, %303
  %794 = sub i32 %793, %138
  %795 = sub i32 %794, %309
  %796 = sub i32 %795, %318
  %797 = add i32 %796, %333
  %798 = sub i32 %797, %369
  %799 = sub i32 %798, %371
  %800 = add i32 %799, %382
  %801 = add i32 %800, %330
  %802 = add i32 %801, %388
  %803 = add i32 %802, %389
  %804 = sub i32 %803, %392
  %805 = sub i32 %804, %400
  %806 = sub i32 %805, %402
  %807 = sub i32 %806, %414
  %808 = sub i32 %807, %425
  %809 = add i32 %808, %431
  %810 = sub i32 %809, %433
  %811 = add i32 %810, %438
  %812 = sub i32 %811, %441
  %813 = add i32 %812, %450
  %814 = add i32 %813, %452
  %815 = add i32 %814, %462
  %816 = sub i32 %815, %466
  %817 = add i32 %816, %480
  %818 = sub i32 %817, %483
  %819 = add i32 %818, %367
  %820 = add i32 %819, %487
  %821 = add i32 %820, %299
  %822 = sub i32 %821, %494
  %823 = sub i32 %822, %496
  %824 = add i32 %823, %292
  %825 = add i32 %824, %502
  %826 = add i32 %825, %519
  %827 = sub i32 %826, %290
  %828 = add i32 %827, %294
  %829 = add i32 %828, %302
  %830 = sub i32 %829, %305
  %831 = add i32 %830, %307
  %832 = sub i32 %831, %314
  %833 = add i32 %832, %324
  %834 = sub i32 %833, %325
  %835 = add i32 %834, %328
  %836 = sub i32 %835, %336
  %837 = sub i32 %836, %343
  %838 = add i32 %837, %345
  %839 = sub i32 %838, %354
  %840 = sub i32 %839, %361
  %841 = sub i32 %840, %362
  %842 = add i32 %841, %363
  %843 = sub i32 %842, %364
  %844 = sub i32 %843, %365
  %845 = add i32 %844, %368
  %846 = sub i32 %845, %370
  %847 = sub i32 %846, %374
  %848 = sub i32 %847, %375
  %849 = sub i32 %848, %376
  %850 = sub i32 %849, %377
  %851 = add i32 %850, %378
  %852 = sub i32 %851, %379
  %853 = sub i32 %852, %384
  %854 = sub i32 %853, %385
  %855 = add i32 %854, %387
  %856 = sub i32 %855, %391
  %857 = add i32 %856, %394
  %858 = add i32 %857, %398
  %859 = sub i32 %858, %401
  %860 = add i32 %859, %408
  %861 = sub i32 %860, %412
  %862 = sub i32 %861, %413
  %863 = add i32 %862, %415
  %864 = add i32 %863, %417
  %865 = add i32 %864, %418
  %866 = add i32 %865, %420
  %867 = sub i32 %866, %421
  %868 = add i32 %867, %422
  %869 = add i32 %868, %423
  %870 = add i32 %869, %424
  %871 = sub i32 %870, %426
  %872 = sub i32 %871, %429
  %873 = sub i32 %872, %430
  %874 = sub i32 %873, %432
  %875 = sub i32 %874, %435
  %876 = add i32 %875, %436
  %877 = sub i32 %876, %437
  %878 = sub i32 %877, %442
  %879 = sub i32 %878, %443
  %880 = add i32 %879, %444
  %881 = add i32 %880, %445
  %882 = add i32 %881, %446
  %883 = add i32 %882, %449
  %884 = add i32 %883, %451
  %885 = sub i32 %884, %453
  %886 = sub i32 %885, %454
  %887 = sub i32 %886, %455
  %888 = add i32 %887, %463
  %889 = add i32 %888, %464
  %890 = add i32 %889, %465
  %891 = add i32 %890, %467
  %892 = sub i32 %891, %468
  %893 = sub i32 %892, %469
  %894 = add i32 %893, %471
  %895 = add i32 %894, %472
  %896 = sub i32 %895, %474
  %897 = add i32 %896, %476
  %898 = add i32 %897, %484
  %899 = add i32 %898, %488
  %900 = add i32 %899, %489
  %901 = sub i32 %900, %490
  %902 = add i32 %901, %491
  %903 = sub i32 %902, %492
  %904 = add i32 %903, %493
  %905 = add i32 %904, %497
  %906 = add i32 %905, %498
  %907 = add i32 %906, %321
  %908 = sub i32 %907, %505
  %909 = add i32 %908, %506
  %910 = add i32 %909, %311
  %911 = add i32 %910, %509
  %912 = sub i32 %911, %337
  %913 = add i32 %912, %510
  %914 = sub i32 %913, %511
  %915 = sub i32 %914, %515
  %916 = add i32 %915, %347
  %917 = sub i32 %916, %518
  %918 = sub i32 %917, %520
  %919 = sub i32 %918, %297
  %920 = add i32 %919, %313
  %921 = sub i32 %920, %322
  %922 = sub i32 %921, %327
  %923 = sub i32 %922, %332
  %924 = sub i32 %923, %341
  %925 = sub i32 %924, %349
  %926 = add i32 %925, %353
  %927 = sub i32 %926, %359
  %928 = add i32 %927, %381
  %929 = sub i32 %928, %383
  %930 = sub i32 %929, %396
  %931 = sub i32 %930, %405
  %932 = sub i32 %931, %407
  %933 = sub i32 %932, %410
  %934 = sub i32 %933, %428
  %935 = sub i32 %934, %434
  %936 = sub i32 %935, %440
  %937 = sub i32 %936, %448
  %938 = sub i32 %937, %461
  %939 = add i32 %938, %470
  %940 = sub i32 %939, %479
  %941 = sub i32 %940, %486
  %942 = sub i32 %941, %500
  %943 = sub i32 %942, %504
  %944 = sub i32 %943, %514
  %945 = sub i32 %944, %516
  %946 = sub i32 %945, %517
  %947 = add i32 %946, %522
  %948 = add i32 %947, %527
  %949 = sub i32 %948, %339
  %950 = add i32 %949, %582
  %951 = sub i32 %950, %459
  %952 = add i32 %951, %580
  %953 = add i32 %952, %574
  %954 = add i32 %953, %592
  %955 = add i32 %954, %565
  %956 = icmp eq i32 %14, %955
  %957 = select i1 %956, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %958 = tail call i32 @puts(i8* nonnull dereferenceable(1) %957)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
