digraph "DFG for'main' function" {
	Node0x21f0198[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21f0218[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21f02a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x21f0308[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x21f0788[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21f0868[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x21f0968[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21f0a28[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x21f0ad8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21f0d38[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x21f0df8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21f0f58[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21f0fb8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x21f64c0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x21f66c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21f6828[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21f6938[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21f69f8[shape=record, label="  ret i32 0"];
	Node0x21f0198 -> Node0x21f0218;
	Node0x21f0218 -> Node0x21f02a8;
	Node0x21f02a8 -> Node0x21f0308;
	Node0x21f0308 -> Node0x21f0788;
	Node0x21f0788 -> Node0x21f0868;
	Node0x21f0868 -> Node0x21f0968;
	Node0x21f0968 -> Node0x21f0a28;
	Node0x21f0a28 -> Node0x21f0ad8;
	Node0x21f0ad8 -> Node0x21f0d38;
	Node0x21f0d38 -> Node0x21f0df8;
	Node0x21f0df8 -> Node0x21f0f58;
	Node0x21f0f58 -> Node0x21f0fb8;
	Node0x21f0fb8 -> Node0x21f64c0;
	Node0x21f64c0 -> Node0x21f66c8;
	Node0x21f66c8 -> Node0x21f6828;
	Node0x21f6828 -> Node0x21f6938;
	Node0x21f6938 -> Node0x21f69f8;
edge [color=red]
	Node0x21f0198 -> Node0x21f0308;
	Node0x21f0308 -> Node0x21f0788;
	Node0x21f0218 -> Node0x21f0868;
	Node0x21f0868 -> Node0x21f0968;
	Node0x21f02a8 -> Node0x21f0a28;
	Node0x21f0a28 -> Node0x21f0ad8;
	Node0x21f0198 -> Node0x21f0d38;
	Node0x21f0218 -> Node0x21f0d38;
	Node0x21f02a8 -> Node0x21f0d38;
	Node0x21f0198 -> Node0x21f0df8;
	Node0x21f0218 -> Node0x21f0f58;
	Node0x21f02a8 -> Node0x21f0fb8;
	Node0x21f0df8 -> Node0x21f64c0;
	Node0x21f0f58 -> Node0x21f64c0;
	Node0x21f0fb8 -> Node0x21f64c0;
	Node0x21f0a28 -> Node0x21f66c8;
	Node0x21f0868 -> Node0x21f6828;
	Node0x21f0308 -> Node0x21f6938;
}
