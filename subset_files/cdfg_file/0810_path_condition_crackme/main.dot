digraph "DFG for'main' function" {
	Node0x16ebd98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x16ebe18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x16ebea8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x16ec308[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x16ec3e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x16ec508[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16ec740[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x16ec7f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x16ed768[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x16eddf0[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x16ede60[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x16eded0[shape=record, label="  %10 = and i32 %6, %9"];
	Node0x16edf40[shape=record, label="  %11 = xor i32 %10, -1"];
	Node0x16edfb0[shape=record, label="  %12 = xor i32 %6, -1"];
	Node0x16ee020[shape=record, label="  %13 = xor i32 %7, %12"];
	Node0x16ee090[shape=record, label="  %14 = or i32 %6, %9"];
	Node0x16ee100[shape=record, label="  %15 = shl i32 %9, 1"];
	Node0x16ee170[shape=record, label="  %16 = shl i32 %8, 1"];
	Node0x16ee1e0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x16ee250[shape=record, label="  %18 = shl i32 %14, 1"];
	Node0x16ee2c0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x16ee330[shape=record, label="  %20 = shl i32 %10, 1"];
	Node0x16ee3a0[shape=record, label="  %21 = and i32 %7, %6"];
	Node0x16ee410[shape=record, label="  %22 = mul i32 %21, -3"];
	Node0x16ee480[shape=record, label="  %23 = add i32 %7, %12"];
	Node0x16ee4f0[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x16ee560[shape=record, label="  %25 = add i32 %24, %13"];
	Node0x16ee5d0[shape=record, label="  %26 = add i32 %25, %14"];
	Node0x16ee640[shape=record, label="  %27 = sub i32 %26, %15"];
	Node0x16ee6b0[shape=record, label="  %28 = add i32 %27, %20"];
	Node0x16ee720[shape=record, label="  %29 = add i32 %28, %22"];
	Node0x16ee790[shape=record, label="  %30 = sub i32 %29, %17"];
	Node0x16ee800[shape=record, label="  %31 = sub i32 %30, %19"];
	Node0x16ee870[shape=record, label="  %32 = icmp eq i32 %8, %31"];
	Node0x168c9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x16eeb10[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x16eed68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16eeec8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x16eef88[shape=record, label="  ret i32 0"];
	Node0x16ebd98 -> Node0x16ebe18;
	Node0x16ebe18 -> Node0x16ebea8;
	Node0x16ebea8 -> Node0x16ec308;
	Node0x16ec308 -> Node0x16ec3e8;
	Node0x16ec3e8 -> Node0x16ec508;
	Node0x16ec508 -> Node0x16ec740;
	Node0x16ec740 -> Node0x16ec7f8;
	Node0x16ec7f8 -> Node0x16ed768;
	Node0x16ed768 -> Node0x16eddf0;
	Node0x16eddf0 -> Node0x16ede60;
	Node0x16ede60 -> Node0x16eded0;
	Node0x16eded0 -> Node0x16edf40;
	Node0x16edf40 -> Node0x16edfb0;
	Node0x16edfb0 -> Node0x16ee020;
	Node0x16ee020 -> Node0x16ee090;
	Node0x16ee090 -> Node0x16ee100;
	Node0x16ee100 -> Node0x16ee170;
	Node0x16ee170 -> Node0x16ee1e0;
	Node0x16ee1e0 -> Node0x16ee250;
	Node0x16ee250 -> Node0x16ee2c0;
	Node0x16ee2c0 -> Node0x16ee330;
	Node0x16ee330 -> Node0x16ee3a0;
	Node0x16ee3a0 -> Node0x16ee410;
	Node0x16ee410 -> Node0x16ee480;
	Node0x16ee480 -> Node0x16ee4f0;
	Node0x16ee4f0 -> Node0x16ee560;
	Node0x16ee560 -> Node0x16ee5d0;
	Node0x16ee5d0 -> Node0x16ee640;
	Node0x16ee640 -> Node0x16ee6b0;
	Node0x16ee6b0 -> Node0x16ee720;
	Node0x16ee720 -> Node0x16ee790;
	Node0x16ee790 -> Node0x16ee800;
	Node0x16ee800 -> Node0x16ee870;
	Node0x16ee870 -> Node0x168c9d8;
	Node0x168c9d8 -> Node0x16eeb10;
	Node0x16eeb10 -> Node0x16eed68;
	Node0x16eed68 -> Node0x16eeec8;
	Node0x16eeec8 -> Node0x16eef88;
edge [color=red]
	Node0x16ebd98 -> Node0x16ebea8;
	Node0x16ebea8 -> Node0x16ec308;
	Node0x16ebe18 -> Node0x16ec3e8;
	Node0x16ec3e8 -> Node0x16ec508;
	Node0x16ebd98 -> Node0x16ec740;
	Node0x16ebe18 -> Node0x16ec740;
	Node0x16ebd98 -> Node0x16ec7f8;
	Node0x16ebe18 -> Node0x16ed768;
	Node0x16ed768 -> Node0x16eddf0;
	Node0x16ec7f8 -> Node0x16eddf0;
	Node0x16ed768 -> Node0x16ede60;
	Node0x16ec7f8 -> Node0x16eded0;
	Node0x16ede60 -> Node0x16eded0;
	Node0x16eded0 -> Node0x16edf40;
	Node0x16ec7f8 -> Node0x16edfb0;
	Node0x16ed768 -> Node0x16ee020;
	Node0x16edfb0 -> Node0x16ee020;
	Node0x16ec7f8 -> Node0x16ee090;
	Node0x16ede60 -> Node0x16ee090;
	Node0x16ede60 -> Node0x16ee100;
	Node0x16eddf0 -> Node0x16ee170;
	Node0x16ee170 -> Node0x16ee1e0;
	Node0x16ee090 -> Node0x16ee250;
	Node0x16ee250 -> Node0x16ee2c0;
	Node0x16eded0 -> Node0x16ee330;
	Node0x16ed768 -> Node0x16ee3a0;
	Node0x16ec7f8 -> Node0x16ee3a0;
	Node0x16ee3a0 -> Node0x16ee410;
	Node0x16ed768 -> Node0x16ee480;
	Node0x16edfb0 -> Node0x16ee480;
	Node0x16ee480 -> Node0x16ee4f0;
	Node0x16edf40 -> Node0x16ee4f0;
	Node0x16ee4f0 -> Node0x16ee560;
	Node0x16ee020 -> Node0x16ee560;
	Node0x16ee560 -> Node0x16ee5d0;
	Node0x16ee090 -> Node0x16ee5d0;
	Node0x16ee5d0 -> Node0x16ee640;
	Node0x16ee100 -> Node0x16ee640;
	Node0x16ee640 -> Node0x16ee6b0;
	Node0x16ee330 -> Node0x16ee6b0;
	Node0x16ee6b0 -> Node0x16ee720;
	Node0x16ee410 -> Node0x16ee720;
	Node0x16ee720 -> Node0x16ee790;
	Node0x16ee1e0 -> Node0x16ee790;
	Node0x16ee790 -> Node0x16ee800;
	Node0x16ee2c0 -> Node0x16ee800;
	Node0x16eddf0 -> Node0x16ee870;
	Node0x16ee800 -> Node0x16ee870;
	Node0x16ee870 -> Node0x168c9d8;
	Node0x168c9d8 -> Node0x16eeb10;
	Node0x16ec3e8 -> Node0x16eed68;
	Node0x16ebea8 -> Node0x16eeec8;
}
