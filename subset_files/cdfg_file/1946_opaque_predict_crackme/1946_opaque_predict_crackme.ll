; ModuleID = '../.././c_source_file/1946_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1946_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %0, -1
  %8 = and i32 %2, %1
  %9 = and i32 %8, %7
  %10 = or i32 %2, %1
  %11 = and i32 %10, %0
  %12 = xor i32 %11, -1
  %13 = xor i32 %9, %12
  %14 = xor i32 %4, %3
  %15 = xor i32 %5, %4
  %16 = and i32 %15, %14
  %17 = mul i32 %16, -3
  %18 = sub i32 %17, %13
  %19 = xor i32 %1, -1
  %20 = xor i32 %2, -1
  %21 = and i32 %20, %0
  %22 = or i32 %21, %19
  %23 = xor i32 %2, %0
  %24 = or i32 %23, %19
  %25 = sub i32 %22, %24
  %26 = or i32 %1, %0
  %27 = xor i32 %26, -1
  %28 = or i32 %27, %2
  %29 = xor i32 %2, %1
  %30 = or i32 %29, %27
  %31 = and i32 %19, %0
  %32 = or i32 %31, %20
  %33 = xor i32 %10, %0
  %34 = xor i32 %1, %0
  %35 = xor i32 %8, -1
  %36 = or i32 %35, %7
  %37 = or i32 %21, %8
  %38 = xor i32 %34, -1
  %39 = and i32 %20, %38
  %40 = or i32 %8, %7
  %41 = or i32 %19, %0
  %42 = xor i32 %29, -1
  %43 = and i32 %41, %42
  %44 = or i32 %20, %27
  %45 = or i32 %8, %31
  %46 = and i32 %8, %0
  %47 = and i32 %29, %7
  %48 = or i32 %46, %47
  %49 = or i32 %23, %1
  %50 = and i32 %20, %1
  %51 = xor i32 %50, -1
  %52 = xor i32 %51, %0
  %53 = xor i32 %10, -1
  %54 = and i32 %23, %19
  %55 = or i32 %2, %0
  %56 = and i32 %55, %34
  %57 = or i32 %20, %0
  %58 = xor i32 %57, -1
  %59 = or i32 %58, %19
  %60 = xor i32 %23, -1
  %61 = and i32 %60, %19
  %62 = xor i32 %29, %0
  %63 = xor i32 %62, -1
  %64 = or i32 %46, %63
  %65 = and i32 %19, %2
  %66 = and i32 %65, %7
  %67 = or i32 %29, %7
  %68 = xor i32 %66, %67
  %69 = and i32 %57, %38
  %70 = shl i32 %69, 1
  %71 = and i32 %57, %34
  %72 = xor i32 %31, %35
  %73 = and i32 %23, %26
  %74 = and i32 %1, %0
  %75 = or i32 %74, %58
  %76 = xor i32 %31, -1
  %77 = and i32 %60, %76
  %78 = or i32 %23, %74
  %79 = or i32 %20, %1
  %80 = xor i32 %79, %74
  %81 = or i32 %31, %42
  %82 = or i32 %60, %1
  %83 = and i32 %2, %0
  %84 = xor i32 %83, -1
  %85 = and i32 %34, %84
  %86 = or i32 %79, %0
  %87 = or i32 %34, %2
  %88 = or i32 %29, %0
  %89 = and i32 %10, %7
  %90 = xor i32 %89, -1
  %91 = xor i32 %46, %90
  %92 = xor i32 %83, %1
  %93 = and i32 %35, %7
  %94 = xor i32 %55, -1
  %95 = or i32 %34, %94
  %96 = xor i32 %74, -1
  %97 = xor i32 %96, %2
  %98 = and i32 %57, %19
  %99 = shl i32 %98, 1
  %100 = xor i32 %57, %74
  %101 = and i32 %60, %96
  %102 = or i32 %23, %34
  %103 = shl i32 %102, 1
  %104 = xor i32 %21, -1
  %105 = and i32 %34, %104
  %106 = and i32 %23, %1
  %107 = or i32 %29, %31
  %108 = shl i32 %107, 2
  %109 = and i32 %23, %41
  %110 = or i32 %20, %38
  %111 = or i32 %53, %7
  %112 = shl i32 %104, 1
  %113 = or i32 %94, %19
  %114 = and i32 %55, %19
  %115 = xor i32 %35, %0
  %116 = shl i32 %115, 1
  %117 = and i32 %42, %0
  %118 = and i32 %35, %0
  %119 = or i32 %74, %2
  %120 = xor i32 %83, %26
  %121 = xor i32 %41, -1
  %122 = xor i32 %121, %2
  %123 = or i32 %74, %53
  %124 = or i32 %60, %38
  %125 = or i32 %42, %0
  %126 = and i32 %84, %1
  %127 = or i32 %29, %121
  %128 = xor i32 %50, %0
  %129 = and i32 %65, %0
  %130 = or i32 %19, %2
  %131 = and i32 %130, %7
  %132 = or i32 %129, %131
  %133 = shl i32 %132, 1
  %134 = or i32 %50, %7
  %135 = or i32 %58, %38
  %136 = and i32 %42, %76
  %137 = shl i32 %136, 1
  %138 = or i32 %83, %1
  %139 = or i32 %83, %34
  %140 = xor i32 %31, %2
  %141 = xor i32 %79, -1
  %142 = xor i32 %141, %0
  %143 = or i32 %50, %0
  %144 = add i32 %1, 1
  %145 = xor i32 %83, %51
  %146 = xor i32 %130, %0
  %147 = or i32 %129, %146
  %148 = and i32 %57, %1
  %149 = and i32 %41, %60
  %150 = xor i32 %21, %79
  %151 = xor i32 %31, %51
  %152 = or i32 %74, %42
  %153 = or i32 %31, %60
  %154 = or i32 %21, %34
  %155 = or i32 %38, %2
  %156 = or i32 %83, %27
  %157 = and i32 %29, %26
  %158 = and i32 %29, %96
  %159 = and i32 %84, %19
  %160 = or i32 %83, %53
  %161 = or i32 %141, %0
  %162 = and i32 %53, %7
  %163 = and i32 %50, %7
  %164 = and i32 %53, %0
  %165 = and i32 %50, %0
  %166 = shl i32 %165, 3
  %167 = and i32 %141, %7
  %168 = mul i32 %9, -6
  %169 = and i32 %141, %0
  %170 = shl i32 %169, 1
  %171 = xor i32 %5, -1
  %172 = xor i32 %3, -1
  %173 = or i32 %172, %4
  %174 = xor i32 %173, -1
  %175 = or i32 %171, %174
  %176 = and i32 %4, %3
  %177 = or i32 %171, %3
  %178 = xor i32 %177, -1
  %179 = or i32 %176, %178
  %180 = and i32 %14, %5
  %181 = or i32 %171, %4
  %182 = and i32 %181, %3
  %183 = or i32 %5, %4
  %184 = xor i32 %183, -1
  %185 = or i32 %184, %172
  %186 = shl i32 %185, 1
  %187 = or i32 %4, %3
  %188 = xor i32 %187, -1
  %189 = or i32 %188, %5
  %190 = or i32 %184, %3
  %191 = and i32 %172, %4
  %192 = and i32 %171, %3
  %193 = xor i32 %192, -1
  %194 = xor i32 %191, %193
  %195 = and i32 %5, %3
  %196 = and i32 %195, %4
  %197 = or i32 %5, %3
  %198 = xor i32 %197, %4
  %199 = xor i32 %196, -1
  %200 = xor i32 %198, %199
  %201 = xor i32 %181, -1
  %202 = xor i32 %14, -1
  %203 = or i32 %201, %202
  %204 = xor i32 %5, %3
  %205 = xor i32 %204, %4
  %206 = and i32 %183, %3
  %207 = and i32 %171, %4
  %208 = or i32 %207, %14
  %209 = xor i32 %4, -1
  %210 = and i32 %204, %209
  %211 = xor i32 %210, %199
  %212 = xor i32 %191, -1
  %213 = and i32 %15, %212
  %214 = shl i32 %213, 1
  %215 = xor i32 %197, -1
  %216 = or i32 %176, %215
  %217 = and i32 %195, %209
  %218 = and i32 %197, %4
  %219 = xor i32 %218, 2147483647
  %220 = xor i32 %219, %217
  %221 = shl i32 %220, 1
  %222 = shl i32 %178, 1
  %223 = or i32 %215, %209
  %224 = and i32 %14, %171
  %225 = xor i32 %207, %177
  %226 = and i32 %5, %4
  %227 = xor i32 %226, -1
  %228 = and i32 %227, %202
  %229 = add i32 %191, 1
  %230 = xor i32 %176, %5
  %231 = shl i32 %230, 1
  %232 = and i32 %172, %5
  %233 = and i32 %232, %209
  %234 = or i32 %172, %5
  %235 = and i32 %234, %4
  %236 = or i32 %233, %235
  %237 = xor i32 %195, -1
  %238 = or i32 %237, %4
  %239 = or i32 %196, %210
  %240 = and i32 %193, %209
  %241 = xor i32 %191, %237
  %242 = shl i32 %241, 1
  %243 = and i32 %204, %187
  %244 = or i32 %204, %4
  %245 = shl i32 %244, 1
  %246 = or i32 %196, %198
  %247 = xor i32 %237, %4
  %248 = xor i32 %15, -1
  %249 = xor i32 %173, %5
  %250 = xor i32 %187, %5
  %251 = xor i32 %205, -1
  %252 = or i32 %196, %251
  %253 = or i32 %204, %209
  %254 = or i32 %204, %191
  %255 = xor i32 %177, %176
  %256 = xor i32 %176, -1
  %257 = xor i32 %204, -1
  %258 = and i32 %257, %256
  %259 = and i32 %248, %172
  %260 = and i32 %187, %171
  %261 = or i32 %207, %195
  %262 = or i32 %226, %14
  %263 = shl i32 %262, 1
  %264 = and i32 %197, %209
  %265 = or i32 %196, %264
  %266 = or i32 %201, %3
  %267 = add i32 %195, 1
  %268 = or i32 %191, %248
  %269 = and i32 %227, %172
  %270 = xor i32 %226, %187
  %271 = or i32 %248, %3
  %272 = or i32 %15, %174
  %273 = and i32 %193, %4
  %274 = or i32 %207, %202
  %275 = or i32 %204, %188
  %276 = or i32 %177, %209
  %277 = or i32 %176, %201
  %278 = or i32 %191, %5
  %279 = or i32 %248, %188
  %280 = and i32 %177, %4
  %281 = or i32 %195, %4
  %282 = and i32 %15, %256
  %283 = or i32 %178, %209
  %284 = shl i32 %187, 1
  %285 = xor i32 %188, %5
  %286 = add i32 %183, 1
  %287 = and i32 %204, %4
  %288 = shl i32 %287, 1
  %289 = xor i32 %235, -1
  %290 = xor i32 %233, %289
  %291 = or i32 %15, %3
  %292 = xor i32 %207, %3
  %293 = or i32 %174, %5
  %294 = and i32 %171, %202
  %295 = or i32 %184, %202
  %296 = and i32 %257, %4
  %297 = and i32 %15, %172
  %298 = and i32 %15, %187
  %299 = xor i32 %192, %4
  %300 = or i32 %191, %257
  %301 = xor i32 %181, %3
  %302 = and i32 %173, %257
  %303 = or i32 %192, %4
  %304 = xor i32 %174, %5
  %305 = or i32 %226, %174
  %306 = shl i32 %305, 1
  %307 = and i32 %204, %256
  %308 = shl i32 %183, 1
  %309 = and i32 %248, %212
  %310 = or i32 %14, %5
  %311 = and i32 %204, %173
  %312 = or i32 %192, %209
  %313 = or i32 %171, %202
  %314 = and i32 %232, %4
  %315 = xor i32 %314, %251
  %316 = or i32 %197, %209
  %317 = shl i32 %316, 1
  %318 = and i32 %257, %212
  %319 = and i32 %181, %172
  %320 = xor i32 %215, %4
  %321 = xor i32 %183, %3
  %322 = or i32 %15, %202
  %323 = or i32 %176, %171
  %324 = or i32 %207, %172
  %325 = or i32 %237, %209
  %326 = or i32 %257, %209
  %327 = or i32 %201, %172
  %328 = xor i32 %207, -1
  %329 = and i32 %14, %328
  %330 = xor i32 %196, %205
  %331 = and i32 %248, %3
  %332 = or i32 %176, %248
  %333 = or i32 %202, %5
  %334 = and i32 %177, %209
  %335 = or i32 %15, %176
  %336 = shl i32 %335, 1
  %337 = and i32 %187, %257
  %338 = and i32 %14, %248
  %339 = xor i32 %328, %3
  %340 = xor i32 %195, %4
  %341 = and i32 %15, %202
  %342 = shl i32 %341, 1
  %343 = or i32 %193, %4
  %344 = and i32 %187, %248
  %345 = shl i32 %344, 1
  %346 = or i32 %226, %188
  %347 = shl i32 %346, 2
  %348 = and i32 %204, %212
  %349 = or i32 %176, %184
  %350 = xor i32 %244, -1
  %351 = or i32 %314, %350
  %352 = xor i32 %233, %253
  %353 = or i32 %177, %4
  %354 = or i32 %207, %3
  %355 = and i32 %187, %5
  %356 = or i32 %314, %205
  %357 = or i32 %204, %176
  %358 = shl i32 %210, 1
  %359 = and i32 %14, %227
  %360 = xor i32 %207, %237
  %361 = or i32 %15, %14
  %362 = or i32 %176, %5
  %363 = or i32 %193, %209
  %364 = or i32 %197, %4
  %365 = shl i32 %364, 1
  %366 = or i32 %204, %174
  %367 = xor i32 %234, %4
  %368 = or i32 %314, %367
  %369 = or i32 %14, %248
  %370 = xor i32 %367, -1
  %371 = xor i32 %314, %370
  %372 = xor i32 %234, -1
  %373 = or i32 %372, %4
  %374 = xor i32 %314, %373
  %375 = or i32 %178, %4
  %376 = or i32 %248, %174
  %377 = xor i32 %253, -1
  %378 = or i32 %233, %377
  %379 = or i32 %257, %174
  %380 = or i32 %191, %171
  %381 = and i32 %248, %256
  %382 = or i32 %217, %287
  %383 = or i32 %14, %171
  %384 = xor i32 %226, %173
  %385 = xor i32 %183, %176
  %386 = xor i32 %193, %4
  %387 = and i32 %183, %14
  %388 = xor i32 %287, -1
  %389 = xor i32 %217, %388
  %390 = and i32 %328, %202
  %391 = xor i32 %184, %3
  %392 = or i32 %15, %172
  %393 = and i32 %328, %172
  %394 = and i32 %15, %173
  %395 = xor i32 %197, %176
  %396 = and i32 %215, %209
  %397 = mul i32 %396, -30
  %398 = and i32 %192, %209
  %399 = mul i32 %398, -20
  %400 = and i32 %215, %4
  %401 = and i32 %192, %4
  %402 = and i32 %178, %209
  %403 = mul i32 %402, 17
  %404 = mul i32 %196, -25
  %405 = add i32 %140, %84
  %406 = add i32 %405, %51
  %407 = add i32 %406, %97
  %408 = add i32 %407, %4
  %409 = add i32 %408, %124
  %410 = add i32 %409, %120
  %411 = add i32 %410, %105
  %412 = add i32 %411, %80
  %413 = add i32 %412, %75
  %414 = add i32 %413, %176
  %415 = add i32 %414, %25
  %416 = add i32 %415, %181
  %417 = add i32 %416, %310
  %418 = add i32 %417, %285
  %419 = add i32 %418, %227
  %420 = add i32 %419, %224
  %421 = add i32 %420, %337
  %422 = add i32 %421, %332
  %423 = add i32 %422, %327
  %424 = add i32 %423, %326
  %425 = add i32 %424, %311
  %426 = add i32 %425, %309
  %427 = add i32 %426, %283
  %428 = add i32 %427, %276
  %429 = add i32 %428, %271
  %430 = add i32 %429, %238
  %431 = add i32 %430, %228
  %432 = add i32 %431, %206
  %433 = add i32 %432, %239
  %434 = add i32 %433, %356
  %435 = shl i32 %434, 1
  %436 = sub i32 %8, %138
  %437 = add i32 %436, %86
  %438 = sub i32 %437, %33
  %439 = add i32 %438, %226
  %440 = add i32 %439, %369
  %441 = add i32 %440, %401
  %442 = sub i32 %441, %277
  %443 = mul i32 %442, 5
  %444 = add i32 %111, %35
  %445 = add i32 %444, %171
  %446 = add i32 %445, %197
  %447 = add i32 %446, %295
  %448 = shl i32 %447, 2
  %449 = add i32 %164, %46
  %450 = add i32 %449, %163
  %451 = add i32 %450, %217
  %452 = mul i32 %451, -10
  %453 = sub i32 %39, %73
  %454 = add i32 %453, %302
  %455 = add i32 %454, %389
  %456 = mul i32 %455, 3
  %457 = add i32 %400, %162
  %458 = mul i32 %457, -18
  %459 = sub i32 2, %0
  %460 = add i32 %459, %144
  %461 = add i32 %460, %1
  %462 = add i32 %461, %34
  %463 = add i32 %462, %28
  %464 = add i32 %463, %32
  %465 = sub i32 %464, %44
  %466 = add i32 %465, %53
  %467 = sub i32 %466, %87
  %468 = sub i32 %467, %110
  %469 = sub i32 %468, %23
  %470 = add i32 %469, %119
  %471 = add i32 %470, %122
  %472 = add i32 %471, %60
  %473 = sub i32 %472, %155
  %474 = add i32 %473, %30
  %475 = add i32 %474, %36
  %476 = sub i32 %475, %37
  %477 = sub i32 %476, %40
  %478 = add i32 %477, %43
  %479 = add i32 %478, %45
  %480 = sub i32 %479, %49
  %481 = sub i32 %480, %52
  %482 = sub i32 %481, %54
  %483 = add i32 %482, %56
  %484 = sub i32 %483, %59
  %485 = sub i32 %484, %61
  %486 = add i32 %485, %71
  %487 = add i32 %486, %72
  %488 = sub i32 %487, %77
  %489 = add i32 %488, %78
  %490 = sub i32 %489, %81
  %491 = sub i32 %490, %82
  %492 = sub i32 %491, %85
  %493 = add i32 %492, %88
  %494 = add i32 %493, %92
  %495 = add i32 %494, %93
  %496 = add i32 %495, %95
  %497 = sub i32 %496, %100
  %498 = add i32 %497, %101
  %499 = add i32 %498, %106
  %500 = sub i32 %499, %109
  %501 = sub i32 %500, %112
  %502 = add i32 %501, %113
  %503 = add i32 %502, %114
  %504 = sub i32 %503, %62
  %505 = add i32 %504, %117
  %506 = add i32 %505, %89
  %507 = sub i32 %506, %118
  %508 = add i32 %507, %123
  %509 = add i32 %508, %125
  %510 = sub i32 %509, %126
  %511 = sub i32 %510, %127
  %512 = add i32 %511, %128
  %513 = add i32 %512, %134
  %514 = add i32 %513, %135
  %515 = sub i32 %514, %139
  %516 = add i32 %515, %142
  %517 = add i32 %516, %143
  %518 = add i32 %517, %145
  %519 = add i32 %518, %148
  %520 = sub i32 %519, %149
  %521 = sub i32 %520, %150
  %522 = add i32 %521, %151
  %523 = add i32 %522, %152
  %524 = sub i32 %523, %153
  %525 = sub i32 %524, %154
  %526 = sub i32 %525, %156
  %527 = add i32 %526, %157
  %528 = sub i32 %527, %158
  %529 = sub i32 %528, %159
  %530 = add i32 %529, %160
  %531 = sub i32 %530, %161
  %532 = add i32 %531, %167
  %533 = add i32 %532, %48
  %534 = add i32 %533, %64
  %535 = add i32 %534, %68
  %536 = sub i32 %535, %70
  %537 = add i32 %536, %91
  %538 = sub i32 %537, %99
  %539 = sub i32 %538, %103
  %540 = sub i32 %539, %108
  %541 = sub i32 %540, %116
  %542 = sub i32 %541, %137
  %543 = sub i32 %542, %147
  %544 = sub i32 %543, %166
  %545 = add i32 %544, %168
  %546 = sub i32 %545, %170
  %547 = add i32 %546, %229
  %548 = add i32 %547, %256
  %549 = add i32 %548, %14
  %550 = add i32 %549, %188
  %551 = add i32 %550, %174
  %552 = sub i32 %551, %133
  %553 = sub i32 %552, %175
  %554 = sub i32 %553, %180
  %555 = add i32 %554, %189
  %556 = sub i32 %555, %15
  %557 = add i32 %556, %201
  %558 = add i32 %557, %215
  %559 = add i32 %558, %248
  %560 = add i32 %559, %249
  %561 = sub i32 %560, %250
  %562 = add i32 %561, %260
  %563 = add i32 %562, %267
  %564 = sub i32 %563, %177
  %565 = sub i32 %564, %278
  %566 = sub i32 %565, %284
  %567 = add i32 %566, %286
  %568 = add i32 %567, %293
  %569 = add i32 %568, %294
  %570 = add i32 %569, %304
  %571 = sub i32 %570, %313
  %572 = add i32 %571, %257
  %573 = add i32 %572, %323
  %574 = sub i32 %573, %333
  %575 = add i32 %574, %193
  %576 = sub i32 %575, %355
  %577 = add i32 %576, %362
  %578 = add i32 %577, %380
  %579 = sub i32 %578, %383
  %580 = sub i32 %579, %179
  %581 = sub i32 %580, %182
  %582 = add i32 %581, %190
  %583 = sub i32 %582, %194
  %584 = add i32 %583, %203
  %585 = sub i32 %584, %205
  %586 = add i32 %585, %208
  %587 = sub i32 %586, %216
  %588 = sub i32 %587, %222
  %589 = sub i32 %588, %223
  %590 = add i32 %589, %225
  %591 = sub i32 %590, %231
  %592 = add i32 %591, %240
  %593 = sub i32 %592, %198
  %594 = add i32 %593, %243
  %595 = sub i32 %594, %247
  %596 = sub i32 %595, %253
  %597 = sub i32 %596, %254
  %598 = sub i32 %597, %255
  %599 = sub i32 %598, %258
  %600 = add i32 %599, %259
  %601 = add i32 %600, %261
  %602 = sub i32 %601, %266
  %603 = add i32 %602, %268
  %604 = sub i32 %603, %269
  %605 = add i32 %604, %270
  %606 = sub i32 %605, %272
  %607 = add i32 %606, %273
  %608 = sub i32 %607, %274
  %609 = sub i32 %608, %275
  %610 = sub i32 %609, %279
  %611 = sub i32 %610, %280
  %612 = sub i32 %611, %281
  %613 = sub i32 %612, %282
  %614 = add i32 %613, %291
  %615 = add i32 %614, %292
  %616 = add i32 %615, %296
  %617 = add i32 %616, %297
  %618 = add i32 %617, %298
  %619 = sub i32 %618, %299
  %620 = add i32 %619, %300
  %621 = sub i32 %620, %301
  %622 = sub i32 %621, %303
  %623 = sub i32 %622, %307
  %624 = sub i32 %623, %308
  %625 = sub i32 %624, %218
  %626 = add i32 %625, %312
  %627 = sub i32 %626, %318
  %628 = sub i32 %627, %319
  %629 = sub i32 %628, %320
  %630 = sub i32 %629, %321
  %631 = add i32 %630, %322
  %632 = add i32 %631, %324
  %633 = add i32 %632, %325
  %634 = sub i32 %633, %329
  %635 = add i32 %634, %331
  %636 = sub i32 %635, %334
  %637 = sub i32 %636, %338
  %638 = sub i32 %637, %339
  %639 = add i32 %638, %340
  %640 = add i32 %639, %343
  %641 = add i32 %640, %348
  %642 = sub i32 %641, %349
  %643 = add i32 %642, %353
  %644 = sub i32 %643, %354
  %645 = sub i32 %644, %357
  %646 = sub i32 %645, %359
  %647 = sub i32 %646, %360
  %648 = sub i32 %647, %361
  %649 = add i32 %648, %363
  %650 = sub i32 %649, %366
  %651 = sub i32 %650, %375
  %652 = add i32 %651, %376
  %653 = add i32 %652, %379
  %654 = add i32 %653, %381
  %655 = sub i32 %654, %384
  %656 = sub i32 %655, %385
  %657 = sub i32 %656, %386
  %658 = add i32 %657, %387
  %659 = add i32 %658, %390
  %660 = sub i32 %659, %391
  %661 = sub i32 %660, %392
  %662 = add i32 %661, %393
  %663 = sub i32 %662, %394
  %664 = add i32 %663, %395
  %665 = sub i32 %664, %186
  %666 = sub i32 %665, %200
  %667 = sub i32 %666, %211
  %668 = sub i32 %667, %214
  %669 = sub i32 %668, %236
  %670 = sub i32 %669, %242
  %671 = sub i32 %670, %245
  %672 = add i32 %671, %246
  %673 = add i32 %672, %252
  %674 = sub i32 %673, %263
  %675 = sub i32 %674, %265
  %676 = sub i32 %675, %288
  %677 = add i32 %676, %290
  %678 = sub i32 %677, %306
  %679 = add i32 %678, %315
  %680 = sub i32 %679, %317
  %681 = add i32 %680, %330
  %682 = sub i32 %681, %336
  %683 = sub i32 %682, %342
  %684 = sub i32 %683, %345
  %685 = sub i32 %684, %347
  %686 = sub i32 %685, %351
  %687 = add i32 %686, %352
  %688 = sub i32 %687, %358
  %689 = sub i32 %688, %365
  %690 = sub i32 %689, %368
  %691 = sub i32 %690, %371
  %692 = add i32 %691, %374
  %693 = sub i32 %692, %378
  %694 = sub i32 %693, %382
  %695 = add i32 %694, %397
  %696 = add i32 %695, %399
  %697 = add i32 %696, %403
  %698 = add i32 %697, %404
  %699 = add i32 %698, %458
  %700 = sub i32 %699, %221
  %701 = add i32 %700, %452
  %702 = add i32 %701, %448
  %703 = add i32 %702, %456
  %704 = add i32 %703, %443
  %705 = add i32 %704, %435
  %706 = icmp eq i32 %18, %705
  %707 = select i1 %706, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %708 = tail call i32 @puts(i8* nonnull dereferenceable(1) %707)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
