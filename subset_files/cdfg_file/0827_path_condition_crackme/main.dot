digraph "DFG for'main' function" {
	Node0xc801f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xc80278[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xc80308[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xc80368[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xc807e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc808c8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xc809c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc80a88[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xc80b38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc80d98[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xc80e58[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xc80fb8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xc81018[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xc86d20[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xc86f08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xc87068[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xc87178[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xc87238[shape=record, label="  ret i32 0"];
	Node0xc801f8 -> Node0xc80278;
	Node0xc80278 -> Node0xc80308;
	Node0xc80308 -> Node0xc80368;
	Node0xc80368 -> Node0xc807e8;
	Node0xc807e8 -> Node0xc808c8;
	Node0xc808c8 -> Node0xc809c8;
	Node0xc809c8 -> Node0xc80a88;
	Node0xc80a88 -> Node0xc80b38;
	Node0xc80b38 -> Node0xc80d98;
	Node0xc80d98 -> Node0xc80e58;
	Node0xc80e58 -> Node0xc80fb8;
	Node0xc80fb8 -> Node0xc81018;
	Node0xc81018 -> Node0xc86d20;
	Node0xc86d20 -> Node0xc86f08;
	Node0xc86f08 -> Node0xc87068;
	Node0xc87068 -> Node0xc87178;
	Node0xc87178 -> Node0xc87238;
edge [color=red]
	Node0xc801f8 -> Node0xc80368;
	Node0xc80368 -> Node0xc807e8;
	Node0xc80278 -> Node0xc808c8;
	Node0xc808c8 -> Node0xc809c8;
	Node0xc80308 -> Node0xc80a88;
	Node0xc80a88 -> Node0xc80b38;
	Node0xc801f8 -> Node0xc80d98;
	Node0xc80278 -> Node0xc80d98;
	Node0xc80308 -> Node0xc80d98;
	Node0xc801f8 -> Node0xc80e58;
	Node0xc80278 -> Node0xc80fb8;
	Node0xc80308 -> Node0xc81018;
	Node0xc80e58 -> Node0xc86d20;
	Node0xc80fb8 -> Node0xc86d20;
	Node0xc81018 -> Node0xc86d20;
	Node0xc80a88 -> Node0xc86f08;
	Node0xc808c8 -> Node0xc87068;
	Node0xc80368 -> Node0xc87178;
}
