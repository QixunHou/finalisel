; ModuleID = '../.././c_source_file/1749_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1749_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [15 x i8] c"%d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #0 {
  %6 = or i32 %4, %3
  %7 = and i32 %4, %3
  %8 = xor i32 %7, -1
  %9 = xor i32 %2, -1
  %10 = or i32 %1, %0
  %11 = and i32 %10, %9
  %12 = sub i32 %11, %6
  %13 = add i32 %12, %8
  %14 = xor i32 %4, -1
  %15 = add i32 %4, 1
  %16 = xor i32 %14, %3
  %17 = shl i32 %6, 1
  %18 = xor i32 %17, -2
  %19 = and i32 %14, %3
  %20 = xor i32 %1, -1
  %21 = and i32 %20, %0
  %22 = xor i32 %21, -1
  %23 = xor i32 %2, %1
  %24 = xor i32 %23, -1
  %25 = and i32 %24, %22
  %26 = xor i32 %1, %0
  %27 = xor i32 %2, %0
  %28 = and i32 %27, %26
  %29 = shl i32 %28, 1
  %30 = and i32 %2, %1
  %31 = and i32 %30, %0
  %32 = xor i32 %0, -1
  %33 = or i32 %2, %1
  %34 = xor i32 %33, 2147483647
  %35 = or i32 %34, %0
  %36 = xor i32 %35, %31
  %37 = or i32 %20, %0
  %38 = xor i32 %37, -1
  %39 = xor i32 %27, -1
  %40 = or i32 %39, %38
  %41 = or i32 %27, %20
  %42 = and i32 %30, %32
  %43 = and i32 %23, %0
  %44 = xor i32 %43, 1073741823
  %45 = xor i32 %44, %42
  %46 = shl i32 %45, 2
  %47 = and i32 %37, %2
  %48 = or i32 %27, %21
  %49 = or i32 %2, %0
  %50 = and i32 %49, %26
  %51 = or i32 %30, %0
  %52 = and i32 %9, %0
  %53 = xor i32 %33, -1
  %54 = or i32 %53, %32
  %55 = and i32 %39, %22
  %56 = and i32 %20, %2
  %57 = and i32 %56, %0
  %58 = or i32 %20, %2
  %59 = xor i32 %58, %32
  %60 = xor i32 %59, %57
  %61 = or i32 %9, %0
  %62 = and i32 %61, %20
  %63 = shl i32 %62, 1
  %64 = or i32 %9, %38
  %65 = and i32 %56, %32
  %66 = or i32 %23, %32
  %67 = xor i32 %65, %66
  %68 = xor i32 %22, %2
  %69 = shl i32 %68, 1
  %70 = xor i32 %30, -1
  %71 = or i32 %70, %32
  %72 = xor i32 %52, -1
  %73 = and i32 %1, %0
  %74 = xor i32 %49, -1
  %75 = or i32 %73, %74
  %76 = and i32 %2, %0
  %77 = or i32 %76, %53
  %78 = xor i32 %26, -1
  %79 = or i32 %74, %78
  %80 = and i32 %58, %0
  %81 = xor i32 %80, -1
  %82 = xor i32 %65, %81
  %83 = and i32 %26, %2
  %84 = xor i32 %37, %2
  %85 = or i32 %21, %39
  %86 = xor i32 %21, %70
  %87 = and i32 %27, %22
  %88 = xor i32 %61, %73
  %89 = and i32 %27, %10
  %90 = or i32 %76, %26
  %91 = shl i32 %90, 1
  %92 = xor i32 %10, -1
  %93 = or i32 %24, %92
  %94 = shl i32 %93, 1
  %95 = or i32 %23, %0
  %96 = xor i32 %95, -1
  %97 = or i32 %57, %96
  %98 = xor i32 %76, -1
  %99 = xor i32 %98, %1
  %100 = or i32 %23, %92
  %101 = and i32 %9, %1
  %102 = or i32 %101, %0
  %103 = or i32 %53, %0
  %104 = or i32 %9, %1
  %105 = or i32 %65, %80
  %106 = xor i32 %104, %0
  %107 = xor i32 %101, -1
  %108 = or i32 %107, %0
  %109 = shl i32 %108, 1
  %110 = or i32 %73, %53
  %111 = or i32 %74, %20
  %112 = or i32 %52, %20
  %113 = or i32 %23, %73
  %114 = xor i32 %73, -1
  %115 = and i32 %114, %2
  %116 = or i32 %42, %43
  %117 = xor i32 %24, %0
  %118 = and i32 %24, %114
  %119 = or i32 %39, %20
  %120 = and i32 %37, %9
  %121 = or i32 %73, %39
  %122 = and i32 %58, %32
  %123 = or i32 %57, %122
  %124 = and i32 %72, %1
  %125 = and i32 %39, %1
  %126 = or i32 %39, %92
  %127 = xor i32 %104, -1
  %128 = or i32 %127, %0
  %129 = xor i32 %52, %104
  %130 = or i32 %76, %20
  %131 = and i32 %61, %26
  %132 = and i32 %27, %78
  %133 = xor i32 %61, -1
  %134 = or i32 %133, %78
  %135 = or i32 %30, %32
  %136 = or i32 %76, %92
  %137 = or i32 %52, %127
  %138 = and i32 %23, %22
  %139 = or i32 %30, %21
  %140 = xor i32 %10, %2
  %141 = and i32 %22, %2
  %142 = and i32 %61, %78
  %143 = xor i32 %76, %37
  %144 = or i32 %76, %38
  %145 = and i32 %70, %32
  %146 = xor i32 %52, %1
  %147 = shl i32 %146, 1
  %148 = or i32 %39, %78
  %149 = and i32 %49, %1
  %150 = xor i32 %33, %73
  %151 = or i32 %33, %0
  %152 = and i32 %49, %78
  %153 = xor i32 %52, %70
  %154 = or i32 %38, %2
  %155 = shl i32 %154, 1
  %156 = and i32 %49, %20
  %157 = add i32 %104, 1
  %158 = and i32 %107, %0
  %159 = and i32 %37, %39
  %160 = xor i32 %76, %1
  %161 = and i32 %26, %72
  %162 = shl i32 %161, 1
  %163 = or i32 %27, %92
  %164 = and i32 %27, %20
  %165 = xor i32 %49, %1
  %166 = or i32 %73, %2
  %167 = xor i32 %33, %0
  %168 = or i32 %31, %167
  %169 = xor i32 %70, %0
  %170 = or i32 %27, %73
  %171 = xor i32 %127, %0
  %172 = and i32 %78, %2
  %173 = and i32 %23, %114
  %174 = or i32 %24, %0
  %175 = and i32 %23, %32
  %176 = xor i32 %31, -1
  %177 = xor i32 %175, %176
  %178 = xor i32 %114, %2
  %179 = or i32 %73, %9
  %180 = and i32 %104, %0
  %181 = add i32 %21, 1
  %182 = or i32 %23, %21
  %183 = or i32 %26, %2
  %184 = xor i32 %23, %0
  %185 = or i32 %57, %184
  %186 = xor i32 %92, %2
  %187 = add i32 %30, 1
  %188 = xor i32 %184, -1
  %189 = xor i32 %57, %188
  %190 = xor i32 %73, %2
  %191 = and i32 %26, %39
  %192 = xor i32 %74, %1
  %193 = or i32 %73, %133
  %194 = or i32 %127, %32
  %195 = or i32 %52, %1
  %196 = or i32 %76, %101
  %197 = or i32 %9, %78
  %198 = xor i32 %101, %0
  %199 = and i32 %39, %78
  %200 = or i32 %107, %32
  %201 = or i32 %133, %1
  %202 = or i32 %9, %92
  %203 = or i32 %76, %78
  %204 = and i32 %98, %78
  %205 = and i32 %72, %78
  %206 = shl i32 %205, 1
  %207 = or i32 %26, %133
  %208 = or i32 %31, %175
  %209 = or i32 %26, %9
  %210 = and i32 %24, %32
  %211 = xor i32 %49, %73
  %212 = or i32 %21, %9
  %213 = or i32 %133, %20
  %214 = or i32 %24, %32
  %215 = and i32 %37, %24
  %216 = xor i32 %122, 2147483647
  %217 = xor i32 %216, %57
  %218 = shl i32 %217, 1
  %219 = and i32 %27, %1
  %220 = shl i32 %175, 1
  %221 = or i32 %21, %24
  %222 = shl i32 %221, 1
  %223 = and i32 %72, %20
  %224 = shl i32 %223, 1
  %225 = or i32 %27, %1
  %226 = xor i32 %30, %0
  %227 = and i32 %104, %32
  %228 = xor i32 %104, %73
  %229 = and i32 %26, %9
  %230 = or i32 %70, %0
  %231 = or i32 %24, %38
  %232 = shl i32 %231, 2
  %233 = and i32 %10, %24
  %234 = or i32 %73, %24
  %235 = xor i32 %57, %95
  %236 = and i32 %26, %98
  %237 = shl i32 %236, 1
  %238 = xor i32 %107, %0
  %239 = xor i32 %76, %33
  %240 = and i32 %39, %114
  %241 = or i32 %104, %0
  %242 = or i32 %104, %32
  %243 = or i32 %101, %32
  %244 = or i32 %31, %188
  %245 = and i32 %24, %0
  %246 = and i32 %107, %32
  %247 = shl i32 %246, 1
  %248 = and i32 %10, %39
  %249 = or i32 %52, %26
  %250 = and i32 %27, %114
  %251 = and i32 %9, %114
  %252 = shl i32 %251, 1
  %253 = xor i32 %66, 2147483647
  %254 = or i32 %253, %65
  %255 = shl i32 %254, 1
  %256 = or i32 %27, %26
  %257 = xor i32 %167, %176
  %258 = and i32 %9, %78
  %259 = or i32 %39, %1
  %260 = shl i32 %259, 1
  %261 = or i32 %27, %78
  %262 = xor i32 %38, %2
  %263 = or i32 %73, %127
  %264 = shl i32 %263, 1
  %265 = or i32 %76, %1
  %266 = add i32 %49, 1
  %267 = xor i32 %21, %107
  %268 = or i32 %52, %30
  %269 = and i32 %9, %22
  %270 = or i32 %23, %38
  %271 = and i32 %27, %37
  %272 = and i32 %33, %0
  %273 = or i32 %42, %272
  %274 = xor i32 %72, %1
  %275 = and i32 %98, %1
  %276 = xor i32 %61, %1
  %277 = shl i32 %276, 1
  %278 = or i32 %78, %2
  %279 = or i32 %27, %38
  %280 = or i32 %33, %32
  %281 = shl i32 %280, 1
  %282 = and i32 %39, %20
  %283 = xor i32 %272, -1
  %284 = xor i32 %42, %283
  %285 = or i32 %21, %2
  %286 = or i32 %92, %2
  %287 = and i32 %70, %0
  %288 = xor i32 %133, %1
  %289 = and i32 %23, %37
  %290 = and i32 %23, %10
  %291 = or i32 %74, %1
  %292 = shl i32 %291, 1
  %293 = and i32 %98, %20
  %294 = xor i32 %53, %0
  %295 = xor i32 %31, %184
  %296 = and i32 %10, %2
  %297 = and i32 %53, %32
  %298 = mul i32 %297, -6
  %299 = and i32 %101, %32
  %300 = mul i32 %299, 22
  %301 = and i32 %53, %0
  %302 = and i32 %101, %0
  %303 = mul i32 %302, 11
  %304 = and i32 %127, %32
  %305 = shl i32 %42, 4
  %306 = and i32 %127, %0
  %307 = mul i32 %31, 21
  %308 = sub i32 -2, %0
  %309 = add i32 %308, %92
  %310 = add i32 %309, %278
  %311 = add i32 %310, %212
  %312 = add i32 %311, %197
  %313 = add i32 %312, %23
  %314 = add i32 %313, %47
  %315 = add i32 %314, %304
  %316 = add i32 %315, %301
  %317 = add i32 %316, %249
  %318 = add i32 %317, %214
  %319 = add i32 %318, %182
  %320 = add i32 %319, %173
  %321 = add i32 %320, %163
  %322 = add i32 %321, %144
  %323 = add i32 %322, %136
  %324 = add i32 %323, %77
  %325 = add i32 %324, %71
  %326 = add i32 %325, %40
  %327 = add i32 %326, %25
  %328 = add i32 %327, %15
  %329 = add i32 %328, %105
  %330 = add i32 %329, %36
  %331 = shl i32 %330, 1
  %332 = add i32 %73, %3
  %333 = sub i32 %268, %332
  %334 = sub i32 %333, %151
  %335 = sub i32 %334, %134
  %336 = add i32 %335, %129
  %337 = add i32 %336, %177
  %338 = mul i32 %337, 3
  %339 = add i32 %150, %241
  %340 = add i32 %339, %87
  %341 = sub i32 %19, %340
  %342 = mul i32 %341, 5
  %343 = shl i32 %101, 2
  %344 = sub i32 -8, %343
  %345 = sub i32 1, %0
  %346 = add i32 %345, %78
  %347 = sub i32 %346, %26
  %348 = add i32 %347, %181
  %349 = add i32 %348, %114
  %350 = add i32 %349, %10
  %351 = add i32 %350, %21
  %352 = sub i32 %351, %33
  %353 = add i32 %352, %64
  %354 = sub i32 %353, %30
  %355 = sub i32 %354, %83
  %356 = sub i32 %355, %84
  %357 = add i32 %356, %39
  %358 = sub i32 %357, %104
  %359 = add i32 %358, %115
  %360 = add i32 %359, %24
  %361 = sub i32 %360, %120
  %362 = sub i32 %361, %61
  %363 = add i32 %362, %53
  %364 = sub i32 %363, %140
  %365 = add i32 %364, %141
  %366 = sub i32 %365, %49
  %367 = add i32 %366, %157
  %368 = sub i32 %367, %166
  %369 = add i32 %368, %172
  %370 = add i32 %369, %178
  %371 = add i32 %370, %179
  %372 = add i32 %371, %183
  %373 = sub i32 %372, %101
  %374 = sub i32 %373, %186
  %375 = add i32 %374, %187
  %376 = sub i32 %375, %190
  %377 = sub i32 %376, %27
  %378 = add i32 %377, %202
  %379 = sub i32 %378, %209
  %380 = add i32 %379, %229
  %381 = sub i32 %380, %258
  %382 = sub i32 %381, %262
  %383 = add i32 %382, %266
  %384 = add i32 %383, %269
  %385 = sub i32 %384, %285
  %386 = sub i32 %385, %286
  %387 = add i32 %386, %296
  %388 = add i32 %387, %41
  %389 = add i32 %388, %48
  %390 = add i32 %389, %50
  %391 = sub i32 %390, %51
  %392 = add i32 %391, %54
  %393 = sub i32 %392, %55
  %394 = sub i32 %393, %69
  %395 = sub i32 %394, %43
  %396 = sub i32 %395, %75
  %397 = sub i32 %396, %79
  %398 = sub i32 %397, %85
  %399 = add i32 %398, %86
  %400 = sub i32 %399, %88
  %401 = add i32 %400, %89
  %402 = add i32 %401, %99
  %403 = add i32 %402, %100
  %404 = add i32 %403, %102
  %405 = sub i32 %404, %103
  %406 = add i32 %405, %106
  %407 = sub i32 %406, %110
  %408 = add i32 %407, %111
  %409 = add i32 %408, %112
  %410 = sub i32 %409, %113
  %411 = add i32 %410, %117
  %412 = add i32 %411, %118
  %413 = sub i32 %412, %119
  %414 = add i32 %413, %121
  %415 = add i32 %414, %124
  %416 = sub i32 %415, %125
  %417 = sub i32 %416, %126
  %418 = add i32 %417, %128
  %419 = add i32 %418, %130
  %420 = add i32 %419, %131
  %421 = sub i32 %420, %132
  %422 = add i32 %421, %135
  %423 = add i32 %422, %137
  %424 = add i32 %423, %138
  %425 = add i32 %424, %139
  %426 = sub i32 %425, %142
  %427 = sub i32 %426, %143
  %428 = sub i32 %427, %145
  %429 = add i32 %428, %148
  %430 = sub i32 %429, %149
  %431 = sub i32 %430, %152
  %432 = add i32 %431, %153
  %433 = sub i32 %432, %155
  %434 = add i32 %433, %156
  %435 = add i32 %434, %158
  %436 = sub i32 %435, %159
  %437 = sub i32 %436, %160
  %438 = add i32 %437, %164
  %439 = sub i32 %438, %165
  %440 = add i32 %439, %169
  %441 = sub i32 %440, %170
  %442 = add i32 %441, %171
  %443 = add i32 %442, %174
  %444 = sub i32 %443, %180
  %445 = sub i32 %444, %191
  %446 = add i32 %445, %192
  %447 = add i32 %446, %193
  %448 = sub i32 %447, %194
  %449 = sub i32 %448, %195
  %450 = sub i32 %449, %196
  %451 = sub i32 %450, %95
  %452 = sub i32 %451, %198
  %453 = add i32 %452, %199
  %454 = sub i32 %453, %167
  %455 = add i32 %454, %200
  %456 = sub i32 %455, %201
  %457 = add i32 %456, %203
  %458 = add i32 %457, %204
  %459 = add i32 %458, %207
  %460 = add i32 %459, %210
  %461 = add i32 %460, %211
  %462 = add i32 %461, %213
  %463 = sub i32 %462, %215
  %464 = add i32 %463, %219
  %465 = sub i32 %464, %225
  %466 = add i32 %465, %226
  %467 = add i32 %466, %227
  %468 = sub i32 %467, %228
  %469 = add i32 %468, %230
  %470 = add i32 %469, %233
  %471 = add i32 %470, %234
  %472 = add i32 %471, %238
  %473 = sub i32 %472, %239
  %474 = sub i32 %473, %240
  %475 = sub i32 %474, %242
  %476 = sub i32 %475, %243
  %477 = sub i32 %476, %245
  %478 = add i32 %477, %248
  %479 = sub i32 %478, %250
  %480 = sub i32 %479, %252
  %481 = sub i32 %480, %184
  %482 = sub i32 %481, %256
  %483 = add i32 %482, %261
  %484 = add i32 %483, %265
  %485 = sub i32 %484, %267
  %486 = sub i32 %485, %270
  %487 = sub i32 %486, %271
  %488 = add i32 %487, %274
  %489 = add i32 %488, %275
  %490 = add i32 %489, %66
  %491 = add i32 %490, %272
  %492 = add i32 %491, %279
  %493 = sub i32 %492, %282
  %494 = sub i32 %493, %287
  %495 = add i32 %494, %288
  %496 = add i32 %495, %289
  %497 = add i32 %496, %290
  %498 = add i32 %497, %293
  %499 = sub i32 %498, %294
  %500 = sub i32 %499, %306
  %501 = add i32 %500, %16
  %502 = add i32 %501, %7
  %503 = sub i32 %502, %29
  %504 = add i32 %503, %60
  %505 = sub i32 %504, %63
  %506 = sub i32 %505, %67
  %507 = add i32 %506, %82
  %508 = sub i32 %507, %91
  %509 = sub i32 %508, %94
  %510 = sub i32 %509, %97
  %511 = sub i32 %510, %109
  %512 = sub i32 %511, %116
  %513 = sub i32 %512, %123
  %514 = sub i32 %513, %147
  %515 = sub i32 %514, %162
  %516 = sub i32 %515, %168
  %517 = sub i32 %516, %185
  %518 = add i32 %517, %189
  %519 = sub i32 %518, %206
  %520 = add i32 %519, %208
  %521 = sub i32 %520, %220
  %522 = sub i32 %521, %222
  %523 = sub i32 %522, %224
  %524 = sub i32 %523, %232
  %525 = sub i32 %524, %235
  %526 = sub i32 %525, %237
  %527 = sub i32 %526, %244
  %528 = sub i32 %527, %247
  %529 = add i32 %528, %257
  %530 = sub i32 %529, %260
  %531 = sub i32 %530, %264
  %532 = sub i32 %531, %273
  %533 = sub i32 %532, %277
  %534 = sub i32 %533, %281
  %535 = sub i32 %534, %284
  %536 = sub i32 %535, %292
  %537 = add i32 %536, %295
  %538 = add i32 %537, %298
  %539 = add i32 %538, %300
  %540 = add i32 %539, %303
  %541 = add i32 %540, %305
  %542 = add i32 %541, %307
  %543 = add i32 %542, %344
  %544 = add i32 %543, %18
  %545 = sub i32 %544, %46
  %546 = sub i32 %545, %218
  %547 = sub i32 %546, %255
  %548 = add i32 %547, %342
  %549 = add i32 %548, %338
  %550 = add i32 %549, %331
  %551 = icmp eq i32 %13, %550
  %552 = select i1 %551, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %553 = tail call i32 @puts(i8* nonnull dereferenceable(1) %552)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  %12 = load i32, i32* %1, align 4, !tbaa !2
  %13 = load i32, i32* %2, align 4, !tbaa !2
  %14 = load i32, i32* %3, align 4, !tbaa !2
  %15 = load i32, i32* %4, align 4, !tbaa !2
  %16 = load i32, i32* %5, align 4, !tbaa !2
  call void @crackme(i32 %12, i32 %13, i32 %14, i32 %15, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
