; ModuleID = '../.././c_source_file/1312_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1312_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = or i32 %1, %0
  %8 = xor i32 %7, -1
  %9 = xor i32 %2, %0
  %10 = xor i32 %9, -1
  %11 = or i32 %10, %8
  %12 = xor i32 %3, -1
  %13 = or i32 %12, %4
  %14 = and i32 %13, %5
  %15 = add i32 %14, %11
  %16 = sub i32 0, %15
  %17 = xor i32 %0, -1
  %18 = xor i32 %2, %1
  %19 = and i32 %18, %17
  %20 = and i32 %1, %0
  %21 = or i32 %20, %2
  %22 = and i32 %2, %1
  %23 = xor i32 %22, -1
  %24 = and i32 %23, %0
  %25 = shl i32 %24, 1
  %26 = or i32 %2, %1
  %27 = xor i32 %1, %0
  %28 = and i32 %27, %10
  %29 = xor i32 %1, -1
  %30 = or i32 %29, %0
  %31 = xor i32 %30, -1
  %32 = or i32 %18, %31
  %33 = and i32 %29, %0
  %34 = xor i32 %33, -1
  %35 = xor i32 %18, -1
  %36 = and i32 %35, %34
  %37 = shl i32 %36, 1
  %38 = and i32 %18, %30
  %39 = xor i32 %2, -1
  %40 = or i32 %39, %1
  %41 = xor i32 %40, -1
  %42 = or i32 %41, %17
  %43 = and i32 %22, %17
  %44 = and i32 %26, %0
  %45 = or i32 %43, %44
  %46 = or i32 %18, %0
  %47 = or i32 %22, %33
  %48 = shl i32 %47, 1
  %49 = and i32 %7, %35
  %50 = shl i32 %49, 1
  %51 = or i32 %39, %0
  %52 = and i32 %51, %1
  %53 = shl i32 %52, 1
  %54 = or i32 %20, %35
  %55 = or i32 %9, %8
  %56 = and i32 %39, %1
  %57 = xor i32 %56, -1
  %58 = and i32 %39, %0
  %59 = or i32 %58, %22
  %60 = shl i32 %59, 1
  %61 = and i32 %29, %2
  %62 = and i32 %61, %0
  %63 = or i32 %29, %2
  %64 = xor i32 %63, -1
  %65 = or i32 %64, %0
  %66 = xor i32 %62, %65
  %67 = or i32 %2, %0
  %68 = xor i32 %67, -1
  %69 = or i32 %9, %1
  %70 = shl i32 %69, 1
  %71 = or i32 %10, %1
  %72 = or i32 %23, %0
  %73 = and i32 %51, %27
  %74 = and i32 %22, %0
  %75 = xor i32 %26, %0
  %76 = or i32 %74, %75
  %77 = add i32 %9, 1
  %78 = xor i32 %26, %20
  %79 = and i32 %2, %0
  %80 = or i32 %79, %27
  %81 = xor i32 %20, -1
  %82 = and i32 %81, %2
  %83 = and i32 %57, %0
  %84 = and i32 %61, %17
  %85 = and i32 %63, %0
  %86 = xor i32 %85, -1
  %87 = xor i32 %84, %86
  %88 = xor i32 %27, -1
  %89 = and i32 %10, %88
  %90 = xor i32 %22, %0
  %91 = or i32 %22, %0
  %92 = or i32 %35, %8
  %93 = and i32 %18, %81
  %94 = xor i32 %8, %2
  %95 = or i32 %26, %0
  %96 = xor i32 %51, -1
  %97 = xor i32 %79, %30
  %98 = and i32 %7, %10
  %99 = or i32 %41, %0
  %100 = or i32 %40, %17
  %101 = xor i32 %79, -1
  %102 = and i32 %27, %101
  %103 = and i32 %7, %2
  %104 = and i32 %10, %34
  %105 = xor i32 %33, %2
  %106 = or i32 %79, %1
  %107 = xor i32 %79, %7
  %108 = and i32 %101, %1
  %109 = and i32 %26, %17
  %110 = xor i32 %74, -1
  %111 = xor i32 %109, %110
  %112 = and i32 %35, %0
  %113 = or i32 %33, %35
  %114 = xor i32 %26, -1
  %115 = or i32 %114, %0
  %116 = and i32 %88, %2
  %117 = or i32 %35, %17
  %118 = and i32 %10, %81
  %119 = or i32 %9, %33
  %120 = xor i32 %67, %20
  %121 = shl i32 %31, 1
  %122 = add i32 %18, 1
  %123 = xor i32 %75, %110
  %124 = and i32 %18, %0
  %125 = xor i32 %43, -1
  %126 = xor i32 %124, %125
  %127 = and i32 %9, %1
  %128 = xor i32 %79, %1
  %129 = and i32 %51, %29
  %130 = or i32 %8, %2
  %131 = and i32 %35, %81
  %132 = and i32 %9, %30
  %133 = or i32 %20, %68
  %134 = xor i32 %56, %0
  %135 = and i32 %9, %7
  %136 = add i32 %27, 1
  %137 = or i32 %43, %124
  %138 = and i32 %18, %7
  %139 = and i32 %39, %81
  %140 = and i32 %9, %81
  %141 = or i32 %40, %0
  %142 = xor i32 %96, %1
  %143 = xor i32 %44, %125
  %144 = or i32 %9, %29
  %145 = xor i32 %40, %20
  %146 = or i32 %20, %10
  %147 = or i32 %33, %2
  %148 = and i32 %30, %10
  %149 = or i32 %27, %2
  %150 = or i32 %31, %2
  %151 = add i32 %1, 1
  %152 = or i32 %68, %1
  %153 = xor i32 %18, %0
  %154 = xor i32 %153, -1
  %155 = or i32 %74, %154
  %156 = or i32 %39, %8
  %157 = shl i32 %156, 1
  %158 = and i32 %27, %2
  %159 = and i32 %30, %39
  %160 = xor i32 %31, %2
  %161 = shl i32 %160, 2
  %162 = xor i32 %35, %0
  %163 = and i32 %34, %2
  %164 = or i32 %18, %20
  %165 = and i32 %39, %34
  %166 = or i32 %58, %88
  %167 = or i32 %9, %20
  %168 = shl i32 %167, 1
  %169 = and i32 %67, %88
  %170 = or i32 %23, %17
  %171 = xor i32 %33, %23
  %172 = or i32 %18, %17
  %173 = xor i32 %172, -1
  %174 = or i32 %84, %173
  %175 = xor i32 %51, %1
  %176 = or i32 %57, %0
  %177 = xor i32 %67, %1
  %178 = xor i32 %58, %23
  %179 = or i32 %39, %88
  %180 = and i32 %18, %34
  %181 = or i32 %35, %31
  %182 = or i32 %96, %29
  %183 = or i32 %79, %56
  %184 = or i32 %79, %88
  %185 = and i32 %67, %1
  %186 = or i32 %79, %31
  %187 = or i32 %9, %31
  %188 = or i32 %20, %39
  %189 = xor i32 %63, %17
  %190 = xor i32 %189, %62
  %191 = or i32 %79, %8
  %192 = xor i32 %41, %0
  %193 = xor i32 %84, %172
  %194 = and i32 %7, %39
  %195 = xor i32 %114, %0
  %196 = or i32 %74, %109
  %197 = or i32 %33, %10
  %198 = xor i32 %58, %40
  %199 = shl i32 %153, 1
  %200 = xor i32 %20, %2
  %201 = and i32 %23, %17
  %202 = xor i32 %19, %110
  %203 = and i32 %30, %35
  %204 = or i32 %68, %88
  %205 = shl i32 %204, 1
  %206 = xor i32 %23, %0
  %207 = and i32 %40, %0
  %208 = or i32 %79, %114
  %209 = or i32 %20, %41
  %210 = shl i32 %209, 1
  %211 = xor i32 %58, -1
  %212 = and i32 %211, %1
  %213 = or i32 %9, %88
  %214 = or i32 %114, %17
  %215 = xor i32 %30, %2
  %216 = and i32 %40, %17
  %217 = xor i32 %57, %0
  %218 = and i32 %30, %2
  %219 = and i32 %35, %17
  %220 = and i32 %9, %34
  %221 = xor i32 %40, %0
  %222 = shl i32 %221, 1
  %223 = and i32 %10, %1
  %224 = xor i32 %62, %154
  %225 = shl i32 %8, 1
  %226 = and i32 %10, %29
  %227 = add i32 %26, 1
  %228 = or i32 %27, %96
  %229 = or i32 %39, %31
  %230 = or i32 %26, %17
  %231 = shl i32 %230, 1
  %232 = or i32 %58, %1
  %233 = shl i32 %1, 1
  %234 = or i32 %74, %19
  %235 = or i32 %84, %85
  %236 = or i32 %58, %27
  %237 = and i32 %211, %88
  %238 = or i32 %58, %29
  %239 = or i32 %33, %39
  %240 = xor i32 %7, %2
  %241 = xor i32 %62, %46
  %242 = or i32 %18, %33
  %243 = or i32 %20, %96
  %244 = and i32 %67, %29
  %245 = or i32 %20, %114
  %246 = shl i32 %245, 1
  %247 = or i32 %96, %1
  %248 = xor i32 %51, %20
  %249 = and i32 %9, %88
  %250 = or i32 %9, %27
  %251 = shl i32 %75, 1
  %252 = add i32 %79, 1
  %253 = xor i32 %34, %2
  %254 = and i32 %57, %17
  %255 = or i32 %35, %0
  %256 = or i32 %62, %153
  %257 = or i32 %96, %88
  %258 = and i32 %114, %17
  %259 = mul i32 %258, -12
  %260 = and i32 %56, %17
  %261 = and i32 %114, %0
  %262 = mul i32 %261, 18
  %263 = and i32 %56, %0
  %264 = mul i32 %263, 30
  %265 = and i32 %41, %17
  %266 = and i32 %41, %0
  %267 = mul i32 %74, -9
  %268 = or i32 %4, %3
  %269 = xor i32 %5, %4
  %270 = and i32 %269, %268
  %271 = xor i32 %13, %5
  %272 = and i32 %4, %3
  %273 = xor i32 %5, -1
  %274 = or i32 %273, %3
  %275 = xor i32 %274, %272
  %276 = xor i32 %4, %3
  %277 = xor i32 %276, -1
  %278 = or i32 %269, %277
  %279 = xor i32 %5, %3
  %280 = xor i32 %279, -1
  %281 = and i32 %13, %280
  %282 = or i32 %273, %4
  %283 = and i32 %12, %4
  %284 = or i32 %283, %5
  %285 = or i32 %283, %280
  %286 = xor i32 %13, -1
  %287 = or i32 %269, %286
  %288 = and i32 %273, %3
  %289 = xor i32 %288, -1
  %290 = xor i32 %289, %4
  %291 = xor i32 %283, -1
  %292 = and i32 %279, %291
  %293 = shl i32 %292, 1
  %294 = xor i32 %269, -1
  %295 = and i32 %294, %3
  %296 = xor i32 %282, -1
  %297 = or i32 %272, %296
  %298 = xor i32 %4, -1
  %299 = or i32 %289, %298
  %300 = and i32 %13, %273
  %301 = or i32 %5, %4
  %302 = xor i32 %301, -1
  %303 = or i32 %276, %302
  %304 = and i32 %5, %3
  %305 = and i32 %304, %4
  %306 = or i32 %5, %3
  %307 = xor i32 %306, %4
  %308 = or i32 %305, %307
  %309 = or i32 %276, %294
  %310 = or i32 %272, %5
  %311 = and i32 %279, %4
  %312 = and i32 %5, %4
  %313 = xor i32 %312, -1
  %314 = xor i32 %313, %3
  %315 = xor i32 %279, %4
  %316 = xor i32 %302, %3
  %317 = or i32 %312, %12
  %318 = or i32 %306, %4
  %319 = xor i32 %306, -1
  %320 = or i32 %319, %298
  %321 = xor i32 %272, -1
  %322 = xor i32 %321, %5
  %323 = and i32 %269, %12
  %324 = add i32 %301, 1
  %325 = and i32 %304, %298
  %326 = and i32 %306, %4
  %327 = xor i32 %326, -1
  %328 = xor i32 %325, %327
  %329 = and i32 %269, %276
  %330 = or i32 %280, %298
  %331 = shl i32 %330, 1
  %332 = and i32 %294, %277
  %333 = and i32 %273, %4
  %334 = or i32 %333, %304
  %335 = xor i32 %333, -1
  %336 = and i32 %276, %335
  %337 = or i32 %279, %298
  %338 = or i32 %319, %4
  %339 = xor i32 %311, 2147483647
  %340 = xor i32 %339, %325
  %341 = or i32 %302, %12
  %342 = and i32 %12, %5
  %343 = and i32 %342, %298
  %344 = or i32 %12, %5
  %345 = and i32 %344, %4
  %346 = or i32 %343, %345
  %347 = and i32 %273, %277
  %348 = or i32 %272, %273
  %349 = xor i32 %274, -1
  %350 = or i32 %272, %349
  %351 = and i32 %342, %4
  %352 = or i32 %351, %315
  %353 = xor i32 %312, %289
  %354 = or i32 %294, %277
  %355 = and i32 %276, %273
  %356 = xor i32 %282, %3
  %357 = or i32 %312, %277
  %358 = xor i32 %312, %13
  %359 = and i32 %279, %13
  %360 = and i32 %279, %298
  %361 = and i32 %313, %277
  %362 = and i32 %344, %298
  %363 = or i32 %351, %362
  %364 = xor i32 %286, %5
  %365 = shl i32 %364, 1
  %366 = or i32 %279, %286
  %367 = xor i32 %283, %5
  %368 = and i32 %282, %3
  %369 = xor i32 %362, -1
  %370 = xor i32 %351, %369
  %371 = or i32 %312, %286
  %372 = xor i32 %304, -1
  %373 = or i32 %372, %298
  %374 = and i32 %269, %291
  %375 = xor i32 %306, %272
  %376 = or i32 %312, %3
  %377 = xor i32 %305, -1
  %378 = xor i32 %360, %377
  %379 = xor i32 %343, %337
  %380 = and i32 %280, %4
  %381 = xor i32 %333, %3
  %382 = add i32 %333, 1
  %383 = or i32 %279, %4
  %384 = xor i32 %383, -1
  %385 = or i32 %351, %384
  %386 = xor i32 %283, %372
  %387 = or i32 %269, %3
  %388 = and i32 %335, %3
  %389 = shl i32 %388, 1
  %390 = and i32 %301, %3
  %391 = or i32 %279, %272
  %392 = or i32 %304, %4
  %393 = and i32 %294, %321
  %394 = shl i32 %393, 1
  %395 = or i32 %288, %283
  %396 = and i32 %372, %4
  %397 = or i32 %296, %3
  %398 = or i32 %272, %302
  %399 = and i32 %301, %12
  %400 = and i32 %289, %4
  %401 = shl i32 %400, 1
  %402 = or i32 %349, %4
  %403 = and i32 %313, %3
  %404 = xor i32 %288, %4
  %405 = shl i32 %404, 2
  %406 = xor i32 %349, %4
  %407 = xor i32 %283, %289
  %408 = xor i32 %296, %3
  %409 = xor i32 %304, %4
  %410 = xor i32 %312, %268
  %411 = xor i32 %344, %4
  %412 = or i32 %351, %411
  %413 = shl i32 %412, 1
  %414 = xor i32 %268, -1
  %415 = and i32 %269, %277
  %416 = and i32 %306, %298
  %417 = xor i32 %416, %377
  %418 = or i32 %272, %294
  %419 = and i32 %269, %321
  %420 = xor i32 %414, %5
  %421 = xor i32 %315, -1
  %422 = xor i32 %351, %421
  %423 = or i32 %305, %360
  %424 = and i32 %335, %12
  %425 = or i32 %305, %421
  %426 = or i32 %304, %283
  %427 = and i32 %268, %280
  %428 = or i32 %272, %319
  %429 = xor i32 %312, %306
  %430 = or i32 %276, %296
  %431 = or i32 %312, %288
  %432 = xor i32 %268, %5
  %433 = or i32 %302, %277
  %434 = shl i32 %433, 1
  %435 = or i32 %274, %298
  %436 = shl i32 %435, 1
  %437 = and i32 %291, %5
  %438 = and i32 %268, %294
  %439 = xor i32 %305, %315
  %440 = or i32 %312, %276
  %441 = shl i32 %440, 1
  %442 = and i32 %301, %277
  %443 = xor i32 %291, %5
  %444 = or i32 %277, %5
  %445 = shl i32 %444, 1
  %446 = and i32 %276, %313
  %447 = shl i32 %446, 1
  %448 = or i32 %302, %3
  %449 = or i32 %288, %298
  %450 = xor i32 %319, %4
  %451 = shl i32 %450, 2
  %452 = xor i32 %333, %274
  %453 = and i32 %269, %13
  %454 = xor i32 %307, %377
  %455 = or i32 %280, %414
  %456 = or i32 %304, %298
  %457 = or i32 %274, %4
  %458 = or i32 %273, %277
  %459 = or i32 %276, %5
  %460 = and i32 %335, %277
  %461 = and i32 %279, %268
  %462 = xor i32 %312, %3
  %463 = or i32 %294, %12
  %464 = and i32 %301, %276
  %465 = shl i32 %464, 1
  %466 = and i32 %269, %3
  %467 = or i32 %286, %5
  %468 = or i32 %276, %273
  %469 = xor i32 %301, %3
  %470 = xor i32 %372, %4
  %471 = or i32 %280, %286
  %472 = and i32 %276, %5
  %473 = or i32 %312, %319
  %474 = shl i32 %473, 1
  %475 = or i32 %273, %286
  %476 = and i32 %282, %276
  %477 = and i32 %273, %291
  %478 = or i32 %333, %349
  %479 = or i32 %414, %5
  %480 = and i32 %282, %12
  %481 = xor i32 %280, %4
  %482 = shl i32 %272, 1
  %483 = or i32 %305, %416
  %484 = or i32 %269, %12
  %485 = or i32 %283, %294
  %486 = or i32 %325, %326
  %487 = and i32 %280, %321
  %488 = and i32 %321, %5
  %489 = or i32 %333, %12
  %490 = and i32 %289, %298
  %491 = and i32 %372, %298
  %492 = or i32 %296, %12
  %493 = and i32 %319, %298
  %494 = shl i32 %493, 2
  %495 = and i32 %288, %298
  %496 = mul i32 %495, -21
  %497 = and i32 %319, %4
  %498 = mul i32 %497, -29
  %499 = and i32 %288, %4
  %500 = shl i32 %499, 4
  %501 = and i32 %349, %298
  %502 = and i32 %349, %4
  %503 = shl i32 %502, 2
  %504 = mul i32 %305, -26
  %505 = shl i32 %3, 1
  %506 = add i32 %505, %265
  %507 = sub i32 %506, %250
  %508 = sub i32 %507, %424
  %509 = sub i32 %508, %453
  %510 = mul i32 %509, 5
  %511 = sub i32 %240, %255
  %512 = add i32 %511, %212
  %513 = sub i32 %512, %132
  %514 = sub i32 %513, %111
  %515 = add i32 %514, %287
  %516 = sub i32 %515, %374
  %517 = mul i32 %516, 3
  %518 = add i32 %141, %184
  %519 = add i32 %518, %104
  %520 = add i32 %519, %306
  %521 = add i32 %520, %320
  %522 = add i32 %521, %485
  %523 = shl i32 %522, 2
  %524 = add i32 %325, %501
  %525 = mul i32 %524, -28
  %526 = sub i32 %43, %260
  %527 = mul i32 %526, 14
  %528 = sub i32 -2, %2
  %529 = add i32 %528, %253
  %530 = add i32 %529, %200
  %531 = add i32 %530, %194
  %532 = add i32 %531, %150
  %533 = add i32 %532, %23
  %534 = add i32 %533, %68
  %535 = add i32 %534, %21
  %536 = add i32 %535, %237
  %537 = add i32 %536, %198
  %538 = add i32 %537, %134
  %539 = add i32 %538, %129
  %540 = add i32 %539, %118
  %541 = add i32 %540, %95
  %542 = add i32 %541, %42
  %543 = add i32 %542, %234
  %544 = add i32 %543, %488
  %545 = add i32 %544, %319
  %546 = add i32 %545, %313
  %547 = add i32 %546, %284
  %548 = add i32 %547, %484
  %549 = add i32 %548, %478
  %550 = add i32 %549, %471
  %551 = add i32 %550, %469
  %552 = add i32 %551, %456
  %553 = add i32 %552, %442
  %554 = add i32 %553, %428
  %555 = add i32 %554, %371
  %556 = add i32 %555, %329
  %557 = add i32 %556, %323
  %558 = add i32 %557, %316
  %559 = add i32 %558, %297
  %560 = add i32 %559, %295
  %561 = add i32 %560, %278
  %562 = add i32 %561, %423
  %563 = add i32 %562, %346
  %564 = add i32 %563, %340
  %565 = shl i32 %564, 1
  %566 = sub i32 %151, %0
  %567 = sub i32 %566, %20
  %568 = add i32 %567, %81
  %569 = add i32 %568, %27
  %570 = add i32 %569, %136
  %571 = add i32 %570, %34
  %572 = add i32 %571, %2
  %573 = add i32 %572, %30
  %574 = sub i32 %573, %33
  %575 = sub i32 %574, %233
  %576 = sub i32 %575, %26
  %577 = add i32 %576, %57
  %578 = add i32 %577, %77
  %579 = add i32 %578, %22
  %580 = sub i32 %579, %82
  %581 = sub i32 %580, %94
  %582 = sub i32 %581, %103
  %583 = sub i32 %582, %18
  %584 = sub i32 %583, %105
  %585 = add i32 %584, %116
  %586 = sub i32 %585, %121
  %587 = add i32 %586, %122
  %588 = add i32 %587, %130
  %589 = add i32 %588, %139
  %590 = sub i32 %589, %56
  %591 = sub i32 %590, %147
  %592 = add i32 %591, %149
  %593 = sub i32 %592, %79
  %594 = sub i32 %593, %158
  %595 = sub i32 %594, %159
  %596 = add i32 %595, %163
  %597 = sub i32 %596, %165
  %598 = add i32 %597, %179
  %599 = add i32 %598, %9
  %600 = sub i32 %599, %188
  %601 = sub i32 %600, %215
  %602 = add i32 %601, %218
  %603 = sub i32 %602, %225
  %604 = add i32 %603, %227
  %605 = add i32 %604, %229
  %606 = add i32 %605, %239
  %607 = add i32 %606, %252
  %608 = add i32 %607, %211
  %609 = add i32 %608, %19
  %610 = add i32 %609, %28
  %611 = sub i32 %610, %32
  %612 = sub i32 %611, %38
  %613 = sub i32 %612, %46
  %614 = add i32 %613, %54
  %615 = sub i32 %614, %55
  %616 = sub i32 %615, %71
  %617 = add i32 %616, %72
  %618 = sub i32 %617, %73
  %619 = sub i32 %618, %78
  %620 = add i32 %619, %80
  %621 = add i32 %620, %83
  %622 = add i32 %621, %89
  %623 = add i32 %622, %90
  %624 = sub i32 %623, %91
  %625 = add i32 %624, %92
  %626 = sub i32 %625, %93
  %627 = sub i32 %626, %97
  %628 = add i32 %627, %44
  %629 = sub i32 %628, %98
  %630 = add i32 %629, %99
  %631 = sub i32 %630, %100
  %632 = add i32 %631, %102
  %633 = add i32 %632, %106
  %634 = sub i32 %633, %107
  %635 = sub i32 %634, %108
  %636 = sub i32 %635, %112
  %637 = add i32 %636, %113
  %638 = sub i32 %637, %115
  %639 = add i32 %638, %117
  %640 = sub i32 %639, %119
  %641 = sub i32 %640, %120
  %642 = sub i32 %641, %127
  %643 = sub i32 %642, %128
  %644 = sub i32 %643, %131
  %645 = sub i32 %644, %133
  %646 = sub i32 %645, %135
  %647 = sub i32 %646, %138
  %648 = add i32 %647, %140
  %649 = sub i32 %648, %142
  %650 = sub i32 %649, %144
  %651 = sub i32 %650, %145
  %652 = sub i32 %651, %146
  %653 = add i32 %652, %148
  %654 = add i32 %653, %152
  %655 = sub i32 %654, %157
  %656 = sub i32 %655, %161
  %657 = sub i32 %656, %162
  %658 = sub i32 %657, %164
  %659 = sub i32 %658, %166
  %660 = add i32 %659, %169
  %661 = sub i32 %660, %170
  %662 = add i32 %661, %171
  %663 = add i32 %662, %175
  %664 = add i32 %663, %176
  %665 = add i32 %664, %177
  %666 = add i32 %665, %178
  %667 = add i32 %666, %180
  %668 = add i32 %667, %181
  %669 = sub i32 %668, %182
  %670 = add i32 %669, %183
  %671 = sub i32 %670, %185
  %672 = add i32 %671, %186
  %673 = sub i32 %672, %187
  %674 = add i32 %673, %191
  %675 = sub i32 %674, %192
  %676 = add i32 %675, %195
  %677 = sub i32 %676, %197
  %678 = sub i32 %677, %201
  %679 = sub i32 %678, %203
  %680 = sub i32 %679, %206
  %681 = sub i32 %680, %207
  %682 = add i32 %681, %208
  %683 = add i32 %682, %213
  %684 = sub i32 %683, %214
  %685 = add i32 %684, %216
  %686 = add i32 %685, %217
  %687 = sub i32 %686, %219
  %688 = sub i32 %687, %220
  %689 = add i32 %688, %223
  %690 = add i32 %689, %226
  %691 = sub i32 %690, %228
  %692 = add i32 %691, %232
  %693 = add i32 %692, %236
  %694 = sub i32 %693, %238
  %695 = sub i32 %694, %242
  %696 = add i32 %695, %243
  %697 = add i32 %696, %244
  %698 = sub i32 %697, %247
  %699 = add i32 %698, %248
  %700 = sub i32 %699, %249
  %701 = add i32 %700, %254
  %702 = add i32 %701, %257
  %703 = add i32 %702, %266
  %704 = sub i32 %703, %25
  %705 = sub i32 %704, %37
  %706 = sub i32 %705, %45
  %707 = sub i32 %706, %48
  %708 = sub i32 %707, %50
  %709 = sub i32 %708, %53
  %710 = sub i32 %709, %60
  %711 = add i32 %710, %66
  %712 = sub i32 %711, %70
  %713 = add i32 %712, %76
  %714 = add i32 %713, %87
  %715 = add i32 %714, %123
  %716 = add i32 %715, %126
  %717 = sub i32 %716, %137
  %718 = sub i32 %717, %143
  %719 = sub i32 %718, %155
  %720 = sub i32 %719, %168
  %721 = sub i32 %720, %174
  %722 = add i32 %721, %190
  %723 = sub i32 %722, %193
  %724 = add i32 %723, %196
  %725 = sub i32 %724, %199
  %726 = sub i32 %725, %202
  %727 = sub i32 %726, %205
  %728 = sub i32 %727, %210
  %729 = sub i32 %728, %222
  %730 = sub i32 %729, %224
  %731 = sub i32 %730, %231
  %732 = sub i32 %731, %235
  %733 = add i32 %732, %241
  %734 = sub i32 %733, %246
  %735 = sub i32 %734, %251
  %736 = add i32 %735, %256
  %737 = add i32 %736, %259
  %738 = add i32 %737, %262
  %739 = add i32 %738, %264
  %740 = add i32 %739, %267
  %741 = add i32 %740, %291
  %742 = add i32 %741, %5
  %743 = sub i32 %742, %13
  %744 = add i32 %743, %271
  %745 = add i32 %744, %282
  %746 = add i32 %745, %300
  %747 = sub i32 %746, %310
  %748 = sub i32 %747, %322
  %749 = add i32 %748, %324
  %750 = add i32 %749, %333
  %751 = sub i32 %750, %347
  %752 = add i32 %751, %348
  %753 = sub i32 %752, %355
  %754 = add i32 %753, %367
  %755 = add i32 %754, %269
  %756 = add i32 %755, %382
  %757 = add i32 %756, %301
  %758 = add i32 %757, 1
  %759 = sub i32 %758, %420
  %760 = add i32 %759, %432
  %761 = sub i32 %760, %274
  %762 = add i32 %761, %437
  %763 = add i32 %762, %279
  %764 = add i32 %763, %443
  %765 = sub i32 %764, %458
  %766 = add i32 %765, %459
  %767 = sub i32 %766, %467
  %768 = add i32 %767, %468
  %769 = add i32 %768, %472
  %770 = add i32 %769, %475
  %771 = sub i32 %770, %477
  %772 = sub i32 %771, %479
  %773 = sub i32 %772, %482
  %774 = add i32 %773, %527
  %775 = sub i32 %774, %270
  %776 = sub i32 %775, %275
  %777 = add i32 %776, %281
  %778 = sub i32 %777, %285
  %779 = add i32 %778, %290
  %780 = sub i32 %779, %299
  %781 = add i32 %780, %303
  %782 = add i32 %781, %309
  %783 = add i32 %782, %311
  %784 = add i32 %783, %314
  %785 = add i32 %784, %315
  %786 = add i32 %785, %317
  %787 = add i32 %786, %318
  %788 = sub i32 %787, %332
  %789 = add i32 %788, %334
  %790 = sub i32 %789, %336
  %791 = add i32 %790, %337
  %792 = sub i32 %791, %338
  %793 = add i32 %792, %341
  %794 = add i32 %793, %350
  %795 = add i32 %794, %353
  %796 = add i32 %795, %354
  %797 = add i32 %796, %356
  %798 = add i32 %797, %357
  %799 = add i32 %798, %358
  %800 = add i32 %799, %359
  %801 = add i32 %800, %360
  %802 = sub i32 %801, %361
  %803 = sub i32 %802, %365
  %804 = sub i32 %803, %366
  %805 = add i32 %804, %368
  %806 = sub i32 %805, %373
  %807 = sub i32 %806, %375
  %808 = add i32 %807, %376
  %809 = sub i32 %808, %380
  %810 = add i32 %809, %381
  %811 = sub i32 %810, %386
  %812 = sub i32 %811, %387
  %813 = sub i32 %812, %390
  %814 = sub i32 %813, %391
  %815 = sub i32 %814, %392
  %816 = sub i32 %815, %395
  %817 = sub i32 %816, %396
  %818 = sub i32 %817, %397
  %819 = sub i32 %818, %398
  %820 = add i32 %819, %399
  %821 = sub i32 %820, %402
  %822 = sub i32 %821, %403
  %823 = add i32 %822, %406
  %824 = add i32 %823, %407
  %825 = sub i32 %824, %408
  %826 = sub i32 %825, %409
  %827 = sub i32 %826, %410
  %828 = add i32 %827, %415
  %829 = sub i32 %828, %418
  %830 = add i32 %829, %419
  %831 = sub i32 %830, %426
  %832 = add i32 %831, %427
  %833 = add i32 %832, %429
  %834 = add i32 %833, %430
  %835 = add i32 %834, %431
  %836 = add i32 %835, %383
  %837 = add i32 %836, %438
  %838 = sub i32 %837, %445
  %839 = add i32 %838, %448
  %840 = sub i32 %839, %449
  %841 = sub i32 %840, %452
  %842 = sub i32 %841, %416
  %843 = add i32 %842, %455
  %844 = add i32 %843, %457
  %845 = add i32 %844, %460
  %846 = sub i32 %845, %461
  %847 = add i32 %846, %462
  %848 = sub i32 %847, %463
  %849 = sub i32 %848, %466
  %850 = sub i32 %849, %470
  %851 = add i32 %850, %476
  %852 = sub i32 %851, %480
  %853 = sub i32 %852, %481
  %854 = sub i32 %853, %487
  %855 = add i32 %854, %489
  %856 = sub i32 %855, %490
  %857 = sub i32 %856, %491
  %858 = add i32 %857, %492
  %859 = sub i32 %858, %293
  %860 = add i32 %859, %308
  %861 = add i32 %860, %328
  %862 = sub i32 %861, %331
  %863 = add i32 %862, %352
  %864 = add i32 %863, %363
  %865 = add i32 %864, %370
  %866 = sub i32 %865, %378
  %867 = add i32 %866, %379
  %868 = sub i32 %867, %385
  %869 = sub i32 %868, %389
  %870 = sub i32 %869, %394
  %871 = sub i32 %870, %401
  %872 = sub i32 %871, %405
  %873 = add i32 %872, %417
  %874 = sub i32 %873, %422
  %875 = add i32 %874, %425
  %876 = sub i32 %875, %434
  %877 = sub i32 %876, %436
  %878 = sub i32 %877, %439
  %879 = sub i32 %878, %441
  %880 = sub i32 %879, %447
  %881 = sub i32 %880, %451
  %882 = add i32 %881, %454
  %883 = sub i32 %882, %465
  %884 = sub i32 %883, %474
  %885 = add i32 %884, %483
  %886 = add i32 %885, %486
  %887 = sub i32 %886, %494
  %888 = add i32 %887, %496
  %889 = add i32 %888, %498
  %890 = sub i32 %889, %500
  %891 = sub i32 %890, %503
  %892 = add i32 %891, %504
  %893 = sub i32 %892, %413
  %894 = add i32 %893, %525
  %895 = add i32 %894, %523
  %896 = add i32 %895, %517
  %897 = add i32 %896, %510
  %898 = add i32 %897, %565
  %899 = icmp eq i32 %898, %16
  %900 = select i1 %899, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %901 = tail call i32 @puts(i8* nonnull dereferenceable(1) %900)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
