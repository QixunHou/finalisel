digraph "DFG for'crackme' function" {
	Node0x1714710[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x1714d90[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x1714e00[shape=record, label="  %7 = and i32 %6, %3"];
	Node0x1714ea0[shape=record, label="  %8 = add i32 %5, 1"];
	Node0x1714f10[shape=record, label="  %9 = add i32 %8, %7"];
	Node0x1714f80[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x1714ff0[shape=record, label="  %11 = xor i32 %1, -1"];
	Node0x1715060[shape=record, label="  %12 = or i32 %11, %2"];
	Node0x17150d0[shape=record, label="  %13 = or i32 %2, %1"];
	Node0x1715140[shape=record, label="  %14 = or i32 %10, %1"];
	Node0x17151b0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1715220[shape=record, label="  %16 = add i32 %2, 1"];
	Node0x1715290[shape=record, label="  %17 = and i32 %2, %1"];
	Node0x1715330[shape=record, label="  %18 = shl i32 %2, 2"];
	Node0x17153a0[shape=record, label="  %19 = shl i32 %1, 2"];
	Node0x1715440[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0x17154b0[shape=record, label="  %21 = xor i32 %14, -1"];
	Node0x1715550[shape=record, label="  %22 = mul i32 %21, 3"];
	Node0x17155c0[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x1715630[shape=record, label="  %24 = xor i32 %3, %0"];
	Node0x17156a0[shape=record, label="  %25 = or i32 %3, %0"];
	Node0x1715740[shape=record, label="  %26 = xor i32 %3, 1073741823"];
	Node0x17157b0[shape=record, label="  %27 = and i32 %26, %0"];
	Node0x1715820[shape=record, label="  %28 = shl i32 %27, 2"];
	Node0x1715890[shape=record, label="  %29 = shl i32 %23, 1"];
	Node0x1715930[shape=record, label="  %30 = mul i32 %1, 6"];
	Node0x17159a0[shape=record, label="  %31 = shl i32 %0, 1"];
	Node0x1715a10[shape=record, label="  %32 = add i32 %31, 3"];
	Node0x1715c90[shape=record, label="  %33 = add i32 %32, %1"];
	Node0x1715d00[shape=record, label="  %34 = add i32 %33, %16"];
	Node0x1715d70[shape=record, label="  %35 = add i32 %34, %12"];
	Node0x1715de0[shape=record, label="  %36 = sub i32 %35, %13"];
	Node0x1715e50[shape=record, label="  %37 = add i32 %36, %17"];
	Node0x1715ec0[shape=record, label="  %38 = sub i32 %37, %18"];
	Node0x1715f30[shape=record, label="  %39 = add i32 %38, %20"];
	Node0x1715fa0[shape=record, label="  %40 = sub i32 %39, %15"];
	Node0x1716010[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x1716080[shape=record, label="  %42 = sub i32 %41, %23"];
	Node0x17160f0[shape=record, label="  %43 = add i32 %42, %24"];
	Node0x1716160[shape=record, label="  %44 = add i32 %43, %25"];
	Node0x17161d0[shape=record, label="  %45 = sub i32 %44, %7"];
	Node0x1716240[shape=record, label="  %46 = sub i32 %45, %29"];
	Node0x17162b0[shape=record, label="  %47 = add i32 %46, %30"];
	Node0x1716320[shape=record, label="  %48 = sub i32 %47, %28"];
	Node0x1716390[shape=record, label="  %49 = icmp eq i32 %9, %48"];
	Node0x16b5268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1716830[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x1716880[shape=record, label="  ret void"];
	Node0x1714710 -> Node0x1714d90;
	Node0x1714d90 -> Node0x1714e00;
	Node0x1714e00 -> Node0x1714ea0;
	Node0x1714ea0 -> Node0x1714f10;
	Node0x1714f10 -> Node0x1714f80;
	Node0x1714f80 -> Node0x1714ff0;
	Node0x1714ff0 -> Node0x1715060;
	Node0x1715060 -> Node0x17150d0;
	Node0x17150d0 -> Node0x1715140;
	Node0x1715140 -> Node0x17151b0;
	Node0x17151b0 -> Node0x1715220;
	Node0x1715220 -> Node0x1715290;
	Node0x1715290 -> Node0x1715330;
	Node0x1715330 -> Node0x17153a0;
	Node0x17153a0 -> Node0x1715440;
	Node0x1715440 -> Node0x17154b0;
	Node0x17154b0 -> Node0x1715550;
	Node0x1715550 -> Node0x17155c0;
	Node0x17155c0 -> Node0x1715630;
	Node0x1715630 -> Node0x17156a0;
	Node0x17156a0 -> Node0x1715740;
	Node0x1715740 -> Node0x17157b0;
	Node0x17157b0 -> Node0x1715820;
	Node0x1715820 -> Node0x1715890;
	Node0x1715890 -> Node0x1715930;
	Node0x1715930 -> Node0x17159a0;
	Node0x17159a0 -> Node0x1715a10;
	Node0x1715a10 -> Node0x1715c90;
	Node0x1715c90 -> Node0x1715d00;
	Node0x1715d00 -> Node0x1715d70;
	Node0x1715d70 -> Node0x1715de0;
	Node0x1715de0 -> Node0x1715e50;
	Node0x1715e50 -> Node0x1715ec0;
	Node0x1715ec0 -> Node0x1715f30;
	Node0x1715f30 -> Node0x1715fa0;
	Node0x1715fa0 -> Node0x1716010;
	Node0x1716010 -> Node0x1716080;
	Node0x1716080 -> Node0x17160f0;
	Node0x17160f0 -> Node0x1716160;
	Node0x1716160 -> Node0x17161d0;
	Node0x17161d0 -> Node0x1716240;
	Node0x1716240 -> Node0x17162b0;
	Node0x17162b0 -> Node0x1716320;
	Node0x1716320 -> Node0x1716390;
	Node0x1716390 -> Node0x16b5268;
	Node0x16b5268 -> Node0x1716830;
	Node0x1716830 -> Node0x1716880;
edge [color=red]
	Node0x1714d90 -> Node0x1714e00;
	Node0x1714710 -> Node0x1714ea0;
	Node0x1714ea0 -> Node0x1714f10;
	Node0x1714e00 -> Node0x1714f10;
	Node0x1714ff0 -> Node0x1715060;
	Node0x1714f80 -> Node0x1715140;
	Node0x1715140 -> Node0x17151b0;
	Node0x17153a0 -> Node0x1715440;
	Node0x1715140 -> Node0x17154b0;
	Node0x17154b0 -> Node0x1715550;
	Node0x1715740 -> Node0x17157b0;
	Node0x17157b0 -> Node0x1715820;
	Node0x17155c0 -> Node0x1715890;
	Node0x17159a0 -> Node0x1715a10;
	Node0x1715a10 -> Node0x1715c90;
	Node0x1715c90 -> Node0x1715d00;
	Node0x1715220 -> Node0x1715d00;
	Node0x1715d00 -> Node0x1715d70;
	Node0x1715060 -> Node0x1715d70;
	Node0x1715d70 -> Node0x1715de0;
	Node0x17150d0 -> Node0x1715de0;
	Node0x1715de0 -> Node0x1715e50;
	Node0x1715290 -> Node0x1715e50;
	Node0x1715e50 -> Node0x1715ec0;
	Node0x1715330 -> Node0x1715ec0;
	Node0x1715ec0 -> Node0x1715f30;
	Node0x1715440 -> Node0x1715f30;
	Node0x1715f30 -> Node0x1715fa0;
	Node0x17151b0 -> Node0x1715fa0;
	Node0x1715fa0 -> Node0x1716010;
	Node0x1715550 -> Node0x1716010;
	Node0x1716010 -> Node0x1716080;
	Node0x17155c0 -> Node0x1716080;
	Node0x1716080 -> Node0x17160f0;
	Node0x1715630 -> Node0x17160f0;
	Node0x17160f0 -> Node0x1716160;
	Node0x17156a0 -> Node0x1716160;
	Node0x1716160 -> Node0x17161d0;
	Node0x1714e00 -> Node0x17161d0;
	Node0x17161d0 -> Node0x1716240;
	Node0x1715890 -> Node0x1716240;
	Node0x1716240 -> Node0x17162b0;
	Node0x1715930 -> Node0x17162b0;
	Node0x17162b0 -> Node0x1716320;
	Node0x1715820 -> Node0x1716320;
	Node0x1714f10 -> Node0x1716390;
	Node0x1716320 -> Node0x1716390;
	Node0x1716390 -> Node0x16b5268;
	Node0x16b5268 -> Node0x1716830;
}
