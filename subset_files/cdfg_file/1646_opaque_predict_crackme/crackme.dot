digraph "DFG for'crackme' function" {
	Node0x133c780[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x133ce00[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x133cea0[shape=record, label="  %7 = mul i32 %6, -2"];
	Node0x133cf40[shape=record, label="  %8 = or i32 %7, 1"];
	Node0x133cfb0[shape=record, label="  %9 = add i32 %8, %3"];
	Node0x133d020[shape=record, label="  %10 = or i32 %2, %1"];
	Node0x133d090[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x133d100[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x133d170[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x133d1e0[shape=record, label="  %14 = xor i32 %1, -1"];
	Node0x133d250[shape=record, label="  %15 = xor i32 %14, %2"];
	Node0x133d2c0[shape=record, label="  %16 = shl i32 %1, 1"];
	Node0x133d330[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x133d3a0[shape=record, label="  %18 = shl i32 %10, 1"];
	Node0x133d410[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x133d480[shape=record, label="  %20 = and i32 %14, %2"];
	Node0x133d4f0[shape=record, label="  %21 = shl i32 %12, 1"];
	Node0x133d560[shape=record, label="  %22 = xor i32 %0, -1"];
	Node0x133d5d0[shape=record, label="  %23 = and i32 %22, %3"];
	Node0x133d640[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x133d6b0[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x133d720[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x133d790[shape=record, label="  %27 = or i32 %22, %3"];
	Node0x133d800[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0x133d870[shape=record, label="  %29 = xor i32 %3, %0"];
	Node0x133d8e0[shape=record, label="  %30 = xor i32 %26, -1"];
	Node0x133d980[shape=record, label="  %31 = mul i32 %23, 3"];
	Node0x133d9f0[shape=record, label="  %32 = and i32 %3, %0"];
	Node0x133dc70[shape=record, label="  %33 = shl i32 %29, 1"];
	Node0x133dce0[shape=record, label="  %34 = add i32 %32, %30"];
	Node0x133dd80[shape=record, label="  %35 = mul i32 %34, 5"];
	Node0x133de20[shape=record, label="  %36 = add i32 %0, 2"];
	Node0x133de90[shape=record, label="  %37 = add i32 %36, %0"];
	Node0x133df00[shape=record, label="  %38 = add i32 %37, %1"];
	Node0x133df70[shape=record, label="  %39 = sub i32 %38, %2"];
	Node0x133dfe0[shape=record, label="  %40 = sub i32 %39, %10"];
	Node0x133e050[shape=record, label="  %41 = add i32 %40, %13"];
	Node0x133e0c0[shape=record, label="  %42 = add i32 %41, %15"];
	Node0x133e130[shape=record, label="  %43 = sub i32 %42, %17"];
	Node0x133e1a0[shape=record, label="  %44 = add i32 %43, %20"];
	Node0x133e210[shape=record, label="  %45 = sub i32 %44, %5"];
	Node0x133e280[shape=record, label="  %46 = sub i32 %45, %21"];
	Node0x133e2f0[shape=record, label="  %47 = sub i32 %46, %26"];
	Node0x133e360[shape=record, label="  %48 = sub i32 %47, %19"];
	Node0x133e3d0[shape=record, label="  %49 = sub i32 %48, %28"];
	Node0x133e440[shape=record, label="  %50 = add i32 %49, %31"];
	Node0x133e4b0[shape=record, label="  %51 = add i32 %50, %33"];
	Node0x133e520[shape=record, label="  %52 = sub i32 %51, %25"];
	Node0x133e590[shape=record, label="  %53 = add i32 %52, %35"];
	Node0x133e600[shape=record, label="  %54 = icmp eq i32 %9, %53"];
	Node0x12dd268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x133eaa0[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0x133eaf0[shape=record, label="  ret void"];
	Node0x133c780 -> Node0x133ce00;
	Node0x133ce00 -> Node0x133cea0;
	Node0x133cea0 -> Node0x133cf40;
	Node0x133cf40 -> Node0x133cfb0;
	Node0x133cfb0 -> Node0x133d020;
	Node0x133d020 -> Node0x133d090;
	Node0x133d090 -> Node0x133d100;
	Node0x133d100 -> Node0x133d170;
	Node0x133d170 -> Node0x133d1e0;
	Node0x133d1e0 -> Node0x133d250;
	Node0x133d250 -> Node0x133d2c0;
	Node0x133d2c0 -> Node0x133d330;
	Node0x133d330 -> Node0x133d3a0;
	Node0x133d3a0 -> Node0x133d410;
	Node0x133d410 -> Node0x133d480;
	Node0x133d480 -> Node0x133d4f0;
	Node0x133d4f0 -> Node0x133d560;
	Node0x133d560 -> Node0x133d5d0;
	Node0x133d5d0 -> Node0x133d640;
	Node0x133d640 -> Node0x133d6b0;
	Node0x133d6b0 -> Node0x133d720;
	Node0x133d720 -> Node0x133d790;
	Node0x133d790 -> Node0x133d800;
	Node0x133d800 -> Node0x133d870;
	Node0x133d870 -> Node0x133d8e0;
	Node0x133d8e0 -> Node0x133d980;
	Node0x133d980 -> Node0x133d9f0;
	Node0x133d9f0 -> Node0x133dc70;
	Node0x133dc70 -> Node0x133dce0;
	Node0x133dce0 -> Node0x133dd80;
	Node0x133dd80 -> Node0x133de20;
	Node0x133de20 -> Node0x133de90;
	Node0x133de90 -> Node0x133df00;
	Node0x133df00 -> Node0x133df70;
	Node0x133df70 -> Node0x133dfe0;
	Node0x133dfe0 -> Node0x133e050;
	Node0x133e050 -> Node0x133e0c0;
	Node0x133e0c0 -> Node0x133e130;
	Node0x133e130 -> Node0x133e1a0;
	Node0x133e1a0 -> Node0x133e210;
	Node0x133e210 -> Node0x133e280;
	Node0x133e280 -> Node0x133e2f0;
	Node0x133e2f0 -> Node0x133e360;
	Node0x133e360 -> Node0x133e3d0;
	Node0x133e3d0 -> Node0x133e440;
	Node0x133e440 -> Node0x133e4b0;
	Node0x133e4b0 -> Node0x133e520;
	Node0x133e520 -> Node0x133e590;
	Node0x133e590 -> Node0x133e600;
	Node0x133e600 -> Node0x12dd268;
	Node0x12dd268 -> Node0x133eaa0;
	Node0x133eaa0 -> Node0x133eaf0;
edge [color=red]
	Node0x133c780 -> Node0x133ce00;
	Node0x133ce00 -> Node0x133cea0;
	Node0x133cea0 -> Node0x133cf40;
	Node0x133cf40 -> Node0x133cfb0;
	Node0x133d090 -> Node0x133d100;
	Node0x133d100 -> Node0x133d170;
	Node0x133d1e0 -> Node0x133d250;
	Node0x133d2c0 -> Node0x133d330;
	Node0x133d020 -> Node0x133d3a0;
	Node0x133d3a0 -> Node0x133d410;
	Node0x133d1e0 -> Node0x133d480;
	Node0x133d100 -> Node0x133d4f0;
	Node0x133d560 -> Node0x133d5d0;
	Node0x133d5d0 -> Node0x133d640;
	Node0x133d640 -> Node0x133d6b0;
	Node0x133d560 -> Node0x133d790;
	Node0x133d790 -> Node0x133d800;
	Node0x133d720 -> Node0x133d8e0;
	Node0x133d5d0 -> Node0x133d980;
	Node0x133d870 -> Node0x133dc70;
	Node0x133d9f0 -> Node0x133dce0;
	Node0x133d8e0 -> Node0x133dce0;
	Node0x133dce0 -> Node0x133dd80;
	Node0x133de20 -> Node0x133de90;
	Node0x133de90 -> Node0x133df00;
	Node0x133df00 -> Node0x133df70;
	Node0x133df70 -> Node0x133dfe0;
	Node0x133d020 -> Node0x133dfe0;
	Node0x133dfe0 -> Node0x133e050;
	Node0x133d170 -> Node0x133e050;
	Node0x133e050 -> Node0x133e0c0;
	Node0x133d250 -> Node0x133e0c0;
	Node0x133e0c0 -> Node0x133e130;
	Node0x133d330 -> Node0x133e130;
	Node0x133e130 -> Node0x133e1a0;
	Node0x133d480 -> Node0x133e1a0;
	Node0x133e1a0 -> Node0x133e210;
	Node0x133c780 -> Node0x133e210;
	Node0x133e210 -> Node0x133e280;
	Node0x133d4f0 -> Node0x133e280;
	Node0x133e280 -> Node0x133e2f0;
	Node0x133d720 -> Node0x133e2f0;
	Node0x133e2f0 -> Node0x133e360;
	Node0x133d410 -> Node0x133e360;
	Node0x133e360 -> Node0x133e3d0;
	Node0x133d800 -> Node0x133e3d0;
	Node0x133e3d0 -> Node0x133e440;
	Node0x133d980 -> Node0x133e440;
	Node0x133e440 -> Node0x133e4b0;
	Node0x133dc70 -> Node0x133e4b0;
	Node0x133e4b0 -> Node0x133e520;
	Node0x133d6b0 -> Node0x133e520;
	Node0x133e520 -> Node0x133e590;
	Node0x133dd80 -> Node0x133e590;
	Node0x133cfb0 -> Node0x133e600;
	Node0x133e590 -> Node0x133e600;
	Node0x133e600 -> Node0x12dd268;
	Node0x12dd268 -> Node0x133eaa0;
}
