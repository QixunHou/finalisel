digraph "DFG for'main' function" {
	Node0x12acef8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x12acf78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x12ad008[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x12ad068[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x12b3ea8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12b3f38[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x12b4038[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12b40f8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x12b41a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12b4408[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x12b44c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x12b5438[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x12b5aa8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x12b5ba0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x12b5da8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x12b5f08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x12b6018[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x12b60d8[shape=record, label="  ret i32 0"];
	Node0x12acef8 -> Node0x12acf78;
	Node0x12acf78 -> Node0x12ad008;
	Node0x12ad008 -> Node0x12ad068;
	Node0x12ad068 -> Node0x12b3ea8;
	Node0x12b3ea8 -> Node0x12b3f38;
	Node0x12b3f38 -> Node0x12b4038;
	Node0x12b4038 -> Node0x12b40f8;
	Node0x12b40f8 -> Node0x12b41a8;
	Node0x12b41a8 -> Node0x12b4408;
	Node0x12b4408 -> Node0x12b44c8;
	Node0x12b44c8 -> Node0x12b5438;
	Node0x12b5438 -> Node0x12b5aa8;
	Node0x12b5aa8 -> Node0x12b5ba0;
	Node0x12b5ba0 -> Node0x12b5da8;
	Node0x12b5da8 -> Node0x12b5f08;
	Node0x12b5f08 -> Node0x12b6018;
	Node0x12b6018 -> Node0x12b60d8;
edge [color=red]
	Node0x12acef8 -> Node0x12ad068;
	Node0x12ad068 -> Node0x12b3ea8;
	Node0x12acf78 -> Node0x12b3f38;
	Node0x12b3f38 -> Node0x12b4038;
	Node0x12ad008 -> Node0x12b40f8;
	Node0x12b40f8 -> Node0x12b41a8;
	Node0x12acef8 -> Node0x12b4408;
	Node0x12acf78 -> Node0x12b4408;
	Node0x12ad008 -> Node0x12b4408;
	Node0x12acef8 -> Node0x12b44c8;
	Node0x12acf78 -> Node0x12b5438;
	Node0x12ad008 -> Node0x12b5aa8;
	Node0x12b44c8 -> Node0x12b5ba0;
	Node0x12b5438 -> Node0x12b5ba0;
	Node0x12b5aa8 -> Node0x12b5ba0;
	Node0x12b40f8 -> Node0x12b5da8;
	Node0x12b3f38 -> Node0x12b5f08;
	Node0x12ad068 -> Node0x12b6018;
}
