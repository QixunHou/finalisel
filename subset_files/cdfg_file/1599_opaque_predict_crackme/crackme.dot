digraph "DFG for'crackme' function" {
	Node0x24517a0[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0x2451e20[shape=record, label="  %6 = xor i32 %5, -1"];
	Node0x2451e90[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x2451f00[shape=record, label="  %8 = add i32 %6, %7"];
	Node0x2451f70[shape=record, label="  %9 = and i32 %2, %1"];
	Node0x2452010[shape=record, label="  %10 = add i32 %9, 1"];
	Node0x2452080[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x24520f0[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x2452160[shape=record, label="  %13 = xor i32 %12, -1"];
	Node0x24521d0[shape=record, label="  %14 = or i32 %2, %1"];
	Node0x2452270[shape=record, label="  %15 = shl i32 %14, 2"];
	Node0x24522e0[shape=record, label="  %16 = shl i32 %5, 1"];
	Node0x2452380[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x24523f0[shape=record, label="  %18 = or i32 %11, %1"];
	Node0x2452460[shape=record, label="  %19 = add i32 %2, 1"];
	Node0x24524d0[shape=record, label="  %20 = xor i32 %14, -1"];
	Node0x2452540[shape=record, label="  %21 = xor i32 %18, -1"];
	Node0x24525b0[shape=record, label="  %22 = and i32 %3, %0"];
	Node0x2452620[shape=record, label="  %23 = xor i32 %3, %0"];
	Node0x2452690[shape=record, label="  %24 = and i32 %7, %3"];
	Node0x2452700[shape=record, label="  %25 = or i32 %3, %0"];
	Node0x2452770[shape=record, label="  %26 = xor i32 %25, -1"];
	Node0x24527e0[shape=record, label="  %27 = xor i32 %3, -1"];
	Node0x2452850[shape=record, label="  %28 = and i32 %27, %0"];
	Node0x24528c0[shape=record, label="  %29 = shl i32 %24, 2"];
	Node0x2452930[shape=record, label="  %30 = add i32 %12, %26"];
	Node0x24529a0[shape=record, label="  %31 = add i32 %30, %22"];
	Node0x2452a40[shape=record, label="  %32 = mul i32 %31, 7"];
	Node0x2452cc0[shape=record, label="  %33 = add i32 %28, %21"];
	Node0x2452d60[shape=record, label="  %34 = mul i32 %33, 5"];
	Node0x2452dd0[shape=record, label="  %35 = add i32 %9, %20"];
	Node0x2452e70[shape=record, label="  %36 = mul i32 %35, 6"];
	Node0x2452ee0[shape=record, label="  %37 = add i32 %23, %10"];
	Node0x2452f50[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x2452fc0[shape=record, label="  %39 = sub i32 6, %0"];
	Node0x2453030[shape=record, label="  %40 = add i32 %39, %1"];
	Node0x24530a0[shape=record, label="  %41 = add i32 %40, %19"];
	Node0x2453110[shape=record, label="  %42 = add i32 %41, %13"];
	Node0x2453180[shape=record, label="  %43 = sub i32 %42, %18"];
	Node0x24531f0[shape=record, label="  %44 = sub i32 %43, %15"];
	Node0x2453260[shape=record, label="  %45 = add i32 %44, %22"];
	Node0x24532d0[shape=record, label="  %46 = add i32 %45, %24"];
	Node0x2453340[shape=record, label="  %47 = sub i32 %46, %25"];
	Node0x24533b0[shape=record, label="  %48 = add i32 %47, %23"];
	Node0x2453420[shape=record, label="  %49 = sub i32 %48, %17"];
	Node0x2453490[shape=record, label="  %50 = add i32 %49, %29"];
	Node0x2453500[shape=record, label="  %51 = add i32 %50, %36"];
	Node0x2453570[shape=record, label="  %52 = add i32 %51, %34"];
	Node0x24535e0[shape=record, label="  %53 = add i32 %52, %38"];
	Node0x2453650[shape=record, label="  %54 = add i32 %53, %32"];
	Node0x24536c0[shape=record, label="  %55 = icmp eq i32 %8, %54"];
	Node0x23f2268[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2453b60[shape=record, label="  %57 = tail call i32 @puts(i8* nonnull dereferenceable(1) %56)"];
	Node0x2453bb0[shape=record, label="  ret void"];
	Node0x24517a0 -> Node0x2451e20;
	Node0x2451e20 -> Node0x2451e90;
	Node0x2451e90 -> Node0x2451f00;
	Node0x2451f00 -> Node0x2451f70;
	Node0x2451f70 -> Node0x2452010;
	Node0x2452010 -> Node0x2452080;
	Node0x2452080 -> Node0x24520f0;
	Node0x24520f0 -> Node0x2452160;
	Node0x2452160 -> Node0x24521d0;
	Node0x24521d0 -> Node0x2452270;
	Node0x2452270 -> Node0x24522e0;
	Node0x24522e0 -> Node0x2452380;
	Node0x2452380 -> Node0x24523f0;
	Node0x24523f0 -> Node0x2452460;
	Node0x2452460 -> Node0x24524d0;
	Node0x24524d0 -> Node0x2452540;
	Node0x2452540 -> Node0x24525b0;
	Node0x24525b0 -> Node0x2452620;
	Node0x2452620 -> Node0x2452690;
	Node0x2452690 -> Node0x2452700;
	Node0x2452700 -> Node0x2452770;
	Node0x2452770 -> Node0x24527e0;
	Node0x24527e0 -> Node0x2452850;
	Node0x2452850 -> Node0x24528c0;
	Node0x24528c0 -> Node0x2452930;
	Node0x2452930 -> Node0x24529a0;
	Node0x24529a0 -> Node0x2452a40;
	Node0x2452a40 -> Node0x2452cc0;
	Node0x2452cc0 -> Node0x2452d60;
	Node0x2452d60 -> Node0x2452dd0;
	Node0x2452dd0 -> Node0x2452e70;
	Node0x2452e70 -> Node0x2452ee0;
	Node0x2452ee0 -> Node0x2452f50;
	Node0x2452f50 -> Node0x2452fc0;
	Node0x2452fc0 -> Node0x2453030;
	Node0x2453030 -> Node0x24530a0;
	Node0x24530a0 -> Node0x2453110;
	Node0x2453110 -> Node0x2453180;
	Node0x2453180 -> Node0x24531f0;
	Node0x24531f0 -> Node0x2453260;
	Node0x2453260 -> Node0x24532d0;
	Node0x24532d0 -> Node0x2453340;
	Node0x2453340 -> Node0x24533b0;
	Node0x24533b0 -> Node0x2453420;
	Node0x2453420 -> Node0x2453490;
	Node0x2453490 -> Node0x2453500;
	Node0x2453500 -> Node0x2453570;
	Node0x2453570 -> Node0x24535e0;
	Node0x24535e0 -> Node0x2453650;
	Node0x2453650 -> Node0x24536c0;
	Node0x24536c0 -> Node0x23f2268;
	Node0x23f2268 -> Node0x2453b60;
	Node0x2453b60 -> Node0x2453bb0;
edge [color=red]
	Node0x24517a0 -> Node0x2451e20;
	Node0x2451e20 -> Node0x2451f00;
	Node0x2451e90 -> Node0x2451f00;
	Node0x2451f70 -> Node0x2452010;
	Node0x2452080 -> Node0x24520f0;
	Node0x24520f0 -> Node0x2452160;
	Node0x24521d0 -> Node0x2452270;
	Node0x24517a0 -> Node0x24522e0;
	Node0x24522e0 -> Node0x2452380;
	Node0x2452080 -> Node0x24523f0;
	Node0x24521d0 -> Node0x24524d0;
	Node0x24523f0 -> Node0x2452540;
	Node0x2451e90 -> Node0x2452690;
	Node0x2452700 -> Node0x2452770;
	Node0x24527e0 -> Node0x2452850;
	Node0x2452690 -> Node0x24528c0;
	Node0x24520f0 -> Node0x2452930;
	Node0x2452770 -> Node0x2452930;
	Node0x2452930 -> Node0x24529a0;
	Node0x24525b0 -> Node0x24529a0;
	Node0x24529a0 -> Node0x2452a40;
	Node0x2452850 -> Node0x2452cc0;
	Node0x2452540 -> Node0x2452cc0;
	Node0x2452cc0 -> Node0x2452d60;
	Node0x2451f70 -> Node0x2452dd0;
	Node0x24524d0 -> Node0x2452dd0;
	Node0x2452dd0 -> Node0x2452e70;
	Node0x2452620 -> Node0x2452ee0;
	Node0x2452010 -> Node0x2452ee0;
	Node0x2452ee0 -> Node0x2452f50;
	Node0x2452fc0 -> Node0x2453030;
	Node0x2453030 -> Node0x24530a0;
	Node0x2452460 -> Node0x24530a0;
	Node0x24530a0 -> Node0x2453110;
	Node0x2452160 -> Node0x2453110;
	Node0x2453110 -> Node0x2453180;
	Node0x24523f0 -> Node0x2453180;
	Node0x2453180 -> Node0x24531f0;
	Node0x2452270 -> Node0x24531f0;
	Node0x24531f0 -> Node0x2453260;
	Node0x24525b0 -> Node0x2453260;
	Node0x2453260 -> Node0x24532d0;
	Node0x2452690 -> Node0x24532d0;
	Node0x24532d0 -> Node0x2453340;
	Node0x2452700 -> Node0x2453340;
	Node0x2453340 -> Node0x24533b0;
	Node0x2452620 -> Node0x24533b0;
	Node0x24533b0 -> Node0x2453420;
	Node0x2452380 -> Node0x2453420;
	Node0x2453420 -> Node0x2453490;
	Node0x24528c0 -> Node0x2453490;
	Node0x2453490 -> Node0x2453500;
	Node0x2452e70 -> Node0x2453500;
	Node0x2453500 -> Node0x2453570;
	Node0x2452d60 -> Node0x2453570;
	Node0x2453570 -> Node0x24535e0;
	Node0x2452f50 -> Node0x24535e0;
	Node0x24535e0 -> Node0x2453650;
	Node0x2452a40 -> Node0x2453650;
	Node0x2451f00 -> Node0x24536c0;
	Node0x2453650 -> Node0x24536c0;
	Node0x24536c0 -> Node0x23f2268;
	Node0x23f2268 -> Node0x2453b60;
}
