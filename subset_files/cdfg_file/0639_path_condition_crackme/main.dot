digraph "DFG for'main' function" {
	Node0x1c5ddc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1c5de48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1c5ded8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1c5e338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c5e418[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1c5e538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c5e770[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1c5e828[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1c5f798[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1c5fe20[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x1c5fe90[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1c5ff00[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x1c5ff70[shape=record, label="  %11 = and i32 %6, %10"];
	Node0x1c5ffe0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x1c60050[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0x1c600c0[shape=record, label="  %14 = sub i32 %9, %13"];
	Node0x1c60130[shape=record, label="  %15 = or i32 %7, %6"];
	Node0x1c601a0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1c60210[shape=record, label="  %17 = or i32 %16, 1"];
	Node0x1c60280[shape=record, label="  %18 = and i32 %7, %6"];
	Node0x1c602f0[shape=record, label="  %19 = xor i32 %18, -1"];
	Node0x1c60360[shape=record, label="  %20 = xor i32 %6, -1"];
	Node0x1c603d0[shape=record, label="  %21 = and i32 %7, %20"];
	Node0x1c60440[shape=record, label="  %22 = sub i32 %11, %21"];
	Node0x1c604b0[shape=record, label="  %23 = mul i32 %22, 3"];
	Node0x1c60520[shape=record, label="  %24 = sub i32 %7, %15"];
	Node0x1c60590[shape=record, label="  %25 = mul i32 %24, 5"];
	Node0x1c60600[shape=record, label="  %26 = sub i32 1, %7"];
	Node0x1c60670[shape=record, label="  %27 = add i32 %26, %19"];
	Node0x1c606e0[shape=record, label="  %28 = add i32 %27, %8"];
	Node0x1c60750[shape=record, label="  %29 = add i32 %28, %17"];
	Node0x1c607c0[shape=record, label="  %30 = add i32 %29, %23"];
	Node0x1c60830[shape=record, label="  %31 = add i32 %30, %25"];
	Node0x1c608a0[shape=record, label="  %32 = icmp eq i32 %14, %31"];
	Node0x1bfe9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1c60b40[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x1c60d98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1c60ef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1c60fb8[shape=record, label="  ret i32 0"];
	Node0x1c5ddc8 -> Node0x1c5de48;
	Node0x1c5de48 -> Node0x1c5ded8;
	Node0x1c5ded8 -> Node0x1c5e338;
	Node0x1c5e338 -> Node0x1c5e418;
	Node0x1c5e418 -> Node0x1c5e538;
	Node0x1c5e538 -> Node0x1c5e770;
	Node0x1c5e770 -> Node0x1c5e828;
	Node0x1c5e828 -> Node0x1c5f798;
	Node0x1c5f798 -> Node0x1c5fe20;
	Node0x1c5fe20 -> Node0x1c5fe90;
	Node0x1c5fe90 -> Node0x1c5ff00;
	Node0x1c5ff00 -> Node0x1c5ff70;
	Node0x1c5ff70 -> Node0x1c5ffe0;
	Node0x1c5ffe0 -> Node0x1c60050;
	Node0x1c60050 -> Node0x1c600c0;
	Node0x1c600c0 -> Node0x1c60130;
	Node0x1c60130 -> Node0x1c601a0;
	Node0x1c601a0 -> Node0x1c60210;
	Node0x1c60210 -> Node0x1c60280;
	Node0x1c60280 -> Node0x1c602f0;
	Node0x1c602f0 -> Node0x1c60360;
	Node0x1c60360 -> Node0x1c603d0;
	Node0x1c603d0 -> Node0x1c60440;
	Node0x1c60440 -> Node0x1c604b0;
	Node0x1c604b0 -> Node0x1c60520;
	Node0x1c60520 -> Node0x1c60590;
	Node0x1c60590 -> Node0x1c60600;
	Node0x1c60600 -> Node0x1c60670;
	Node0x1c60670 -> Node0x1c606e0;
	Node0x1c606e0 -> Node0x1c60750;
	Node0x1c60750 -> Node0x1c607c0;
	Node0x1c607c0 -> Node0x1c60830;
	Node0x1c60830 -> Node0x1c608a0;
	Node0x1c608a0 -> Node0x1bfe9d8;
	Node0x1bfe9d8 -> Node0x1c60b40;
	Node0x1c60b40 -> Node0x1c60d98;
	Node0x1c60d98 -> Node0x1c60ef8;
	Node0x1c60ef8 -> Node0x1c60fb8;
edge [color=red]
	Node0x1c5ddc8 -> Node0x1c5ded8;
	Node0x1c5ded8 -> Node0x1c5e338;
	Node0x1c5de48 -> Node0x1c5e418;
	Node0x1c5e418 -> Node0x1c5e538;
	Node0x1c5ddc8 -> Node0x1c5e770;
	Node0x1c5de48 -> Node0x1c5e770;
	Node0x1c5ddc8 -> Node0x1c5e828;
	Node0x1c5de48 -> Node0x1c5f798;
	Node0x1c5f798 -> Node0x1c5fe20;
	Node0x1c5e828 -> Node0x1c5fe20;
	Node0x1c5fe20 -> Node0x1c5fe90;
	Node0x1c5f798 -> Node0x1c5ff00;
	Node0x1c5e828 -> Node0x1c5ff70;
	Node0x1c5ff00 -> Node0x1c5ff70;
	Node0x1c5ff70 -> Node0x1c5ffe0;
	Node0x1c5ffe0 -> Node0x1c60050;
	Node0x1c5fe90 -> Node0x1c600c0;
	Node0x1c60050 -> Node0x1c600c0;
	Node0x1c5f798 -> Node0x1c60130;
	Node0x1c5e828 -> Node0x1c60130;
	Node0x1c60130 -> Node0x1c601a0;
	Node0x1c601a0 -> Node0x1c60210;
	Node0x1c5f798 -> Node0x1c60280;
	Node0x1c5e828 -> Node0x1c60280;
	Node0x1c60280 -> Node0x1c602f0;
	Node0x1c5e828 -> Node0x1c60360;
	Node0x1c5f798 -> Node0x1c603d0;
	Node0x1c60360 -> Node0x1c603d0;
	Node0x1c5ff70 -> Node0x1c60440;
	Node0x1c603d0 -> Node0x1c60440;
	Node0x1c60440 -> Node0x1c604b0;
	Node0x1c5f798 -> Node0x1c60520;
	Node0x1c60130 -> Node0x1c60520;
	Node0x1c60520 -> Node0x1c60590;
	Node0x1c5f798 -> Node0x1c60600;
	Node0x1c60600 -> Node0x1c60670;
	Node0x1c602f0 -> Node0x1c60670;
	Node0x1c60670 -> Node0x1c606e0;
	Node0x1c5fe20 -> Node0x1c606e0;
	Node0x1c606e0 -> Node0x1c60750;
	Node0x1c60210 -> Node0x1c60750;
	Node0x1c60750 -> Node0x1c607c0;
	Node0x1c604b0 -> Node0x1c607c0;
	Node0x1c607c0 -> Node0x1c60830;
	Node0x1c60590 -> Node0x1c60830;
	Node0x1c600c0 -> Node0x1c608a0;
	Node0x1c60830 -> Node0x1c608a0;
	Node0x1c608a0 -> Node0x1bfe9d8;
	Node0x1bfe9d8 -> Node0x1c60b40;
	Node0x1c5e418 -> Node0x1c60d98;
	Node0x1c5ded8 -> Node0x1c60ef8;
}
