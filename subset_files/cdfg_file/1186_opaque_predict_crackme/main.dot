digraph "DFG for'main' function" {
	Node0x724b08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x724b88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x724c18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x724c78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x724d28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x725158[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x725238[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x725338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7253f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x7254a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x725568[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x725618[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x71fae0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x725818[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x726788[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x726df8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x726e58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x726ed0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x726f40[shape=record, label="  %15 = or i32 %11, %14"];
	Node0x726fb0[shape=record, label="  %16 = and i32 %13, %10"];
	Node0x727020[shape=record, label="  %17 = shl i32 %16, 2"];
	Node0x727090[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x727100[shape=record, label="  %19 = add i32 %15, %13"];
	Node0x727170[shape=record, label="  %20 = add i32 %19, %18"];
	Node0x7271e0[shape=record, label="  %21 = sub i32 0, %20"];
	Node0x727250[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x7272c0[shape=record, label="  %23 = xor i32 %22, -1"];
	Node0x727330[shape=record, label="  %24 = xor i32 %11, %14"];
	Node0x7273a0[shape=record, label="  %25 = or i32 %12, %11"];
	Node0x727410[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x727480[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x7274f0[shape=record, label="  %28 = shl i32 %13, 1"];
	Node0x727560[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0x7275d0[shape=record, label="  %30 = xor i32 %13, %10"];
	Node0x727640[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0x7276b0[shape=record, label="  %32 = or i32 %13, %10"];
	Node0x727720[shape=record, label="  %33 = xor i32 %32, -1"];
	Node0x727790[shape=record, label="  %34 = xor i32 %10, -1"];
	Node0x727800[shape=record, label="  %35 = xor i32 %13, -1"];
	Node0x727870[shape=record, label="  %36 = and i32 %10, %35"];
	Node0x7278e0[shape=record, label="  %37 = mul i32 %36, -6"];
	Node0x727950[shape=record, label="  %38 = and i32 %13, %34"];
	Node0x7279c0[shape=record, label="  %39 = add i32 %38, %33"];
	Node0x727a30[shape=record, label="  %40 = mul i32 %39, -5"];
	Node0x727aa0[shape=record, label="  %41 = sub i32 2, %11"];
	Node0x727b10[shape=record, label="  %42 = add i32 %41, %23"];
	Node0x727b80[shape=record, label="  %43 = add i32 %42, %24"];
	Node0x727bf0[shape=record, label="  %44 = sub i32 %43, %32"];
	Node0x727c60[shape=record, label="  %45 = add i32 %44, %16"];
	Node0x727cd0[shape=record, label="  %46 = sub i32 %45, %27"];
	Node0x727d40[shape=record, label="  %47 = add i32 %46, %29"];
	Node0x727db0[shape=record, label="  %48 = add i32 %47, %31"];
	Node0x727e20[shape=record, label="  %49 = add i32 %48, %37"];
	Node0x727e90[shape=record, label="  %50 = add i32 %49, %40"];
	Node0x727f00[shape=record, label="  %51 = icmp eq i32 %50, %21"];
	Node0x6c48b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x727f90[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0x728238[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x728398[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x7284a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x7285b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x728678[shape=record, label="  ret i32 0"];
	Node0x724b08 -> Node0x724b88;
	Node0x724b88 -> Node0x724c18;
	Node0x724c18 -> Node0x724c78;
	Node0x724c78 -> Node0x724d28;
	Node0x724d28 -> Node0x725158;
	Node0x725158 -> Node0x725238;
	Node0x725238 -> Node0x725338;
	Node0x725338 -> Node0x7253f8;
	Node0x7253f8 -> Node0x7254a8;
	Node0x7254a8 -> Node0x725568;
	Node0x725568 -> Node0x725618;
	Node0x725618 -> Node0x71fae0;
	Node0x71fae0 -> Node0x725818;
	Node0x725818 -> Node0x726788;
	Node0x726788 -> Node0x726df8;
	Node0x726df8 -> Node0x726e58;
	Node0x726e58 -> Node0x726ed0;
	Node0x726ed0 -> Node0x726f40;
	Node0x726f40 -> Node0x726fb0;
	Node0x726fb0 -> Node0x727020;
	Node0x727020 -> Node0x727090;
	Node0x727090 -> Node0x727100;
	Node0x727100 -> Node0x727170;
	Node0x727170 -> Node0x7271e0;
	Node0x7271e0 -> Node0x727250;
	Node0x727250 -> Node0x7272c0;
	Node0x7272c0 -> Node0x727330;
	Node0x727330 -> Node0x7273a0;
	Node0x7273a0 -> Node0x727410;
	Node0x727410 -> Node0x727480;
	Node0x727480 -> Node0x7274f0;
	Node0x7274f0 -> Node0x727560;
	Node0x727560 -> Node0x7275d0;
	Node0x7275d0 -> Node0x727640;
	Node0x727640 -> Node0x7276b0;
	Node0x7276b0 -> Node0x727720;
	Node0x727720 -> Node0x727790;
	Node0x727790 -> Node0x727800;
	Node0x727800 -> Node0x727870;
	Node0x727870 -> Node0x7278e0;
	Node0x7278e0 -> Node0x727950;
	Node0x727950 -> Node0x7279c0;
	Node0x7279c0 -> Node0x727a30;
	Node0x727a30 -> Node0x727aa0;
	Node0x727aa0 -> Node0x727b10;
	Node0x727b10 -> Node0x727b80;
	Node0x727b80 -> Node0x727bf0;
	Node0x727bf0 -> Node0x727c60;
	Node0x727c60 -> Node0x727cd0;
	Node0x727cd0 -> Node0x727d40;
	Node0x727d40 -> Node0x727db0;
	Node0x727db0 -> Node0x727e20;
	Node0x727e20 -> Node0x727e90;
	Node0x727e90 -> Node0x727f00;
	Node0x727f00 -> Node0x6c48b8;
	Node0x6c48b8 -> Node0x727f90;
	Node0x727f90 -> Node0x728238;
	Node0x728238 -> Node0x728398;
	Node0x728398 -> Node0x7284a8;
	Node0x7284a8 -> Node0x7285b8;
	Node0x7285b8 -> Node0x728678;
edge [color=red]
	Node0x724b08 -> Node0x724d28;
	Node0x724d28 -> Node0x725158;
	Node0x724b88 -> Node0x725238;
	Node0x725238 -> Node0x725338;
	Node0x724c18 -> Node0x7253f8;
	Node0x7253f8 -> Node0x7254a8;
	Node0x724c78 -> Node0x725568;
	Node0x725568 -> Node0x725618;
	Node0x724b08 -> Node0x71fae0;
	Node0x724b88 -> Node0x71fae0;
	Node0x724c18 -> Node0x71fae0;
	Node0x724c78 -> Node0x71fae0;
	Node0x724b08 -> Node0x725818;
	Node0x724b88 -> Node0x726788;
	Node0x724c18 -> Node0x726df8;
	Node0x724c78 -> Node0x726e58;
	Node0x726df8 -> Node0x726ed0;
	Node0x726788 -> Node0x726f40;
	Node0x726ed0 -> Node0x726f40;
	Node0x726e58 -> Node0x726fb0;
	Node0x725818 -> Node0x726fb0;
	Node0x726fb0 -> Node0x727020;
	Node0x727020 -> Node0x727090;
	Node0x726f40 -> Node0x727100;
	Node0x726e58 -> Node0x727100;
	Node0x727100 -> Node0x727170;
	Node0x727090 -> Node0x727170;
	Node0x727170 -> Node0x7271e0;
	Node0x726df8 -> Node0x727250;
	Node0x726788 -> Node0x727250;
	Node0x727250 -> Node0x7272c0;
	Node0x726788 -> Node0x727330;
	Node0x726ed0 -> Node0x727330;
	Node0x726df8 -> Node0x7273a0;
	Node0x726788 -> Node0x7273a0;
	Node0x7273a0 -> Node0x727410;
	Node0x727410 -> Node0x727480;
	Node0x726e58 -> Node0x7274f0;
	Node0x7274f0 -> Node0x727560;
	Node0x726e58 -> Node0x7275d0;
	Node0x725818 -> Node0x7275d0;
	Node0x7275d0 -> Node0x727640;
	Node0x726e58 -> Node0x7276b0;
	Node0x725818 -> Node0x7276b0;
	Node0x7276b0 -> Node0x727720;
	Node0x725818 -> Node0x727790;
	Node0x726e58 -> Node0x727800;
	Node0x725818 -> Node0x727870;
	Node0x727800 -> Node0x727870;
	Node0x727870 -> Node0x7278e0;
	Node0x726e58 -> Node0x727950;
	Node0x727790 -> Node0x727950;
	Node0x727950 -> Node0x7279c0;
	Node0x727720 -> Node0x7279c0;
	Node0x7279c0 -> Node0x727a30;
	Node0x726788 -> Node0x727aa0;
	Node0x727aa0 -> Node0x727b10;
	Node0x7272c0 -> Node0x727b10;
	Node0x727b10 -> Node0x727b80;
	Node0x727330 -> Node0x727b80;
	Node0x727b80 -> Node0x727bf0;
	Node0x7276b0 -> Node0x727bf0;
	Node0x727bf0 -> Node0x727c60;
	Node0x726fb0 -> Node0x727c60;
	Node0x727c60 -> Node0x727cd0;
	Node0x727480 -> Node0x727cd0;
	Node0x727cd0 -> Node0x727d40;
	Node0x727560 -> Node0x727d40;
	Node0x727d40 -> Node0x727db0;
	Node0x727640 -> Node0x727db0;
	Node0x727db0 -> Node0x727e20;
	Node0x7278e0 -> Node0x727e20;
	Node0x727e20 -> Node0x727e90;
	Node0x727a30 -> Node0x727e90;
	Node0x727e90 -> Node0x727f00;
	Node0x7271e0 -> Node0x727f00;
	Node0x727f00 -> Node0x6c48b8;
	Node0x6c48b8 -> Node0x727f90;
	Node0x725568 -> Node0x728238;
	Node0x7253f8 -> Node0x728398;
	Node0x725238 -> Node0x7284a8;
	Node0x724d28 -> Node0x7285b8;
}
