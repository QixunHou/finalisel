digraph "DFG for'main' function" {
	Node0x55cf98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x55d018[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x55d0a8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x55d108[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x55d588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x55d668[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x55d768[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x55d828[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x55d8d8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x55db38[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x55dbf8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x55eb68[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x55ebc8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x55ecc0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x55fe38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x55ff78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x560088[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x560148[shape=record, label="  ret i32 0"];
	Node0x55cf98 -> Node0x55d018;
	Node0x55d018 -> Node0x55d0a8;
	Node0x55d0a8 -> Node0x55d108;
	Node0x55d108 -> Node0x55d588;
	Node0x55d588 -> Node0x55d668;
	Node0x55d668 -> Node0x55d768;
	Node0x55d768 -> Node0x55d828;
	Node0x55d828 -> Node0x55d8d8;
	Node0x55d8d8 -> Node0x55db38;
	Node0x55db38 -> Node0x55dbf8;
	Node0x55dbf8 -> Node0x55eb68;
	Node0x55eb68 -> Node0x55ebc8;
	Node0x55ebc8 -> Node0x55ecc0;
	Node0x55ecc0 -> Node0x55fe38;
	Node0x55fe38 -> Node0x55ff78;
	Node0x55ff78 -> Node0x560088;
	Node0x560088 -> Node0x560148;
edge [color=red]
	Node0x55cf98 -> Node0x55d108;
	Node0x55d108 -> Node0x55d588;
	Node0x55d018 -> Node0x55d668;
	Node0x55d668 -> Node0x55d768;
	Node0x55d0a8 -> Node0x55d828;
	Node0x55d828 -> Node0x55d8d8;
	Node0x55cf98 -> Node0x55db38;
	Node0x55d018 -> Node0x55db38;
	Node0x55d0a8 -> Node0x55db38;
	Node0x55cf98 -> Node0x55dbf8;
	Node0x55d018 -> Node0x55eb68;
	Node0x55d0a8 -> Node0x55ebc8;
	Node0x55dbf8 -> Node0x55ecc0;
	Node0x55eb68 -> Node0x55ecc0;
	Node0x55ebc8 -> Node0x55ecc0;
	Node0x55d828 -> Node0x55fe38;
	Node0x55d668 -> Node0x55ff78;
	Node0x55d108 -> Node0x560088;
}
