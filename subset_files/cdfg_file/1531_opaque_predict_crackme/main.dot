digraph "DFG for'main' function" {
	Node0x8309d8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x830a58[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x830ae8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x830b48[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x830fc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x832ef8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x832fd8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x833098[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x833148[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x8333a8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x833468[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x8343d8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x834a48[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x834b40[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x834d48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x834ea8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x834fb8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x835078[shape=record, label="  ret i32 0"];
	Node0x8309d8 -> Node0x830a58;
	Node0x830a58 -> Node0x830ae8;
	Node0x830ae8 -> Node0x830b48;
	Node0x830b48 -> Node0x830fc8;
	Node0x830fc8 -> Node0x832ef8;
	Node0x832ef8 -> Node0x832fd8;
	Node0x832fd8 -> Node0x833098;
	Node0x833098 -> Node0x833148;
	Node0x833148 -> Node0x8333a8;
	Node0x8333a8 -> Node0x833468;
	Node0x833468 -> Node0x8343d8;
	Node0x8343d8 -> Node0x834a48;
	Node0x834a48 -> Node0x834b40;
	Node0x834b40 -> Node0x834d48;
	Node0x834d48 -> Node0x834ea8;
	Node0x834ea8 -> Node0x834fb8;
	Node0x834fb8 -> Node0x835078;
edge [color=red]
	Node0x8309d8 -> Node0x830b48;
	Node0x830b48 -> Node0x830fc8;
	Node0x830a58 -> Node0x832ef8;
	Node0x832ef8 -> Node0x832fd8;
	Node0x830ae8 -> Node0x833098;
	Node0x833098 -> Node0x833148;
	Node0x8309d8 -> Node0x8333a8;
	Node0x830a58 -> Node0x8333a8;
	Node0x830ae8 -> Node0x8333a8;
	Node0x8309d8 -> Node0x833468;
	Node0x830a58 -> Node0x8343d8;
	Node0x830ae8 -> Node0x834a48;
	Node0x833468 -> Node0x834b40;
	Node0x8343d8 -> Node0x834b40;
	Node0x834a48 -> Node0x834b40;
	Node0x833098 -> Node0x834d48;
	Node0x832ef8 -> Node0x834ea8;
	Node0x830b48 -> Node0x834fb8;
}
