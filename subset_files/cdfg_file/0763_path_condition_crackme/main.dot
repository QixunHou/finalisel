digraph "DFG for'main' function" {
	Node0x1806bf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1806c78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1806d08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1806d68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1806e18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1807248[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1807328[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1807428[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x18074e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1807598[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1807658[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1807708[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1801b70[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1807908[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1808878[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1808ee8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1808f48[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1808fc0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x1809030[shape=record, label="  %15 = and i32 %13, %10"];
	Node0x18090a0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x1809110[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1809180[shape=record, label="  %18 = or i32 %13, %10"];
	Node0x18091f0[shape=record, label="  %19 = add i32 %18, %12"];
	Node0x1809260[shape=record, label="  %20 = sub i32 %17, %19"];
	Node0x18092d0[shape=record, label="  %21 = or i32 %12, %11"];
	Node0x1809340[shape=record, label="  %22 = xor i32 %12, %11"];
	Node0x18093b0[shape=record, label="  %23 = or i32 %11, %14"];
	Node0x1809420[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x1809490[shape=record, label="  %25 = shl i32 %21, 1"];
	Node0x1809500[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x1809570[shape=record, label="  %27 = and i32 %11, %14"];
	Node0x18095e0[shape=record, label="  %28 = and i32 %12, %11"];
	Node0x1809650[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x18096c0[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x1809730[shape=record, label="  %31 = add i32 %10, 1"];
	Node0x18097a0[shape=record, label="  %32 = xor i32 %13, -1"];
	Node0x1809810[shape=record, label="  %33 = shl i32 %10, 1"];
	Node0x1809880[shape=record, label="  %34 = xor i32 %13, %10"];
	Node0x18098f0[shape=record, label="  %35 = shl i32 %18, 1"];
	Node0x1809960[shape=record, label="  %36 = xor i32 %35, -2"];
	Node0x18099d0[shape=record, label="  %37 = and i32 %10, %32"];
	Node0x1809a40[shape=record, label="  %38 = and i32 %13, %30"];
	Node0x1809ab0[shape=record, label="  %39 = sub i32 %31, %11"];
	Node0x1809b20[shape=record, label="  %40 = sub i32 %39, %33"];
	Node0x1809b90[shape=record, label="  %41 = sub i32 %40, %12"];
	Node0x1809c00[shape=record, label="  %42 = add i32 %41, %21"];
	Node0x1809c70[shape=record, label="  %43 = sub i32 %42, %22"];
	Node0x1809ce0[shape=record, label="  %44 = sub i32 %43, %27"];
	Node0x1809d50[shape=record, label="  %45 = add i32 %44, %32"];
	Node0x1809dc0[shape=record, label="  %46 = add i32 %45, %24"];
	Node0x1809e30[shape=record, label="  %47 = sub i32 %46, %29"];
	Node0x1809ea0[shape=record, label="  %48 = add i32 %47, %34"];
	Node0x1809f10[shape=record, label="  %49 = add i32 %48, %37"];
	Node0x1809f80[shape=record, label="  %50 = add i32 %49, %38"];
	Node0x1809ff0[shape=record, label="  %51 = add i32 %50, %15"];
	Node0x180a060[shape=record, label="  %52 = sub i32 %51, %26"];
	Node0x180a0d0[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x180a140[shape=record, label="  %54 = icmp eq i32 %20, %53"];
	Node0x17a68b8[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x180a1d0[shape=record, label="  %56 = call i32 @puts(i8* nonnull dereferenceable(1) %55) #5"];
	Node0x180a478[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x180a5d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x180a6e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x180a7f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x180a8b8[shape=record, label="  ret i32 0"];
	Node0x1806bf8 -> Node0x1806c78;
	Node0x1806c78 -> Node0x1806d08;
	Node0x1806d08 -> Node0x1806d68;
	Node0x1806d68 -> Node0x1806e18;
	Node0x1806e18 -> Node0x1807248;
	Node0x1807248 -> Node0x1807328;
	Node0x1807328 -> Node0x1807428;
	Node0x1807428 -> Node0x18074e8;
	Node0x18074e8 -> Node0x1807598;
	Node0x1807598 -> Node0x1807658;
	Node0x1807658 -> Node0x1807708;
	Node0x1807708 -> Node0x1801b70;
	Node0x1801b70 -> Node0x1807908;
	Node0x1807908 -> Node0x1808878;
	Node0x1808878 -> Node0x1808ee8;
	Node0x1808ee8 -> Node0x1808f48;
	Node0x1808f48 -> Node0x1808fc0;
	Node0x1808fc0 -> Node0x1809030;
	Node0x1809030 -> Node0x18090a0;
	Node0x18090a0 -> Node0x1809110;
	Node0x1809110 -> Node0x1809180;
	Node0x1809180 -> Node0x18091f0;
	Node0x18091f0 -> Node0x1809260;
	Node0x1809260 -> Node0x18092d0;
	Node0x18092d0 -> Node0x1809340;
	Node0x1809340 -> Node0x18093b0;
	Node0x18093b0 -> Node0x1809420;
	Node0x1809420 -> Node0x1809490;
	Node0x1809490 -> Node0x1809500;
	Node0x1809500 -> Node0x1809570;
	Node0x1809570 -> Node0x18095e0;
	Node0x18095e0 -> Node0x1809650;
	Node0x1809650 -> Node0x18096c0;
	Node0x18096c0 -> Node0x1809730;
	Node0x1809730 -> Node0x18097a0;
	Node0x18097a0 -> Node0x1809810;
	Node0x1809810 -> Node0x1809880;
	Node0x1809880 -> Node0x18098f0;
	Node0x18098f0 -> Node0x1809960;
	Node0x1809960 -> Node0x18099d0;
	Node0x18099d0 -> Node0x1809a40;
	Node0x1809a40 -> Node0x1809ab0;
	Node0x1809ab0 -> Node0x1809b20;
	Node0x1809b20 -> Node0x1809b90;
	Node0x1809b90 -> Node0x1809c00;
	Node0x1809c00 -> Node0x1809c70;
	Node0x1809c70 -> Node0x1809ce0;
	Node0x1809ce0 -> Node0x1809d50;
	Node0x1809d50 -> Node0x1809dc0;
	Node0x1809dc0 -> Node0x1809e30;
	Node0x1809e30 -> Node0x1809ea0;
	Node0x1809ea0 -> Node0x1809f10;
	Node0x1809f10 -> Node0x1809f80;
	Node0x1809f80 -> Node0x1809ff0;
	Node0x1809ff0 -> Node0x180a060;
	Node0x180a060 -> Node0x180a0d0;
	Node0x180a0d0 -> Node0x180a140;
	Node0x180a140 -> Node0x17a68b8;
	Node0x17a68b8 -> Node0x180a1d0;
	Node0x180a1d0 -> Node0x180a478;
	Node0x180a478 -> Node0x180a5d8;
	Node0x180a5d8 -> Node0x180a6e8;
	Node0x180a6e8 -> Node0x180a7f8;
	Node0x180a7f8 -> Node0x180a8b8;
edge [color=red]
	Node0x1806bf8 -> Node0x1806e18;
	Node0x1806e18 -> Node0x1807248;
	Node0x1806c78 -> Node0x1807328;
	Node0x1807328 -> Node0x1807428;
	Node0x1806d08 -> Node0x18074e8;
	Node0x18074e8 -> Node0x1807598;
	Node0x1806d68 -> Node0x1807658;
	Node0x1807658 -> Node0x1807708;
	Node0x1806bf8 -> Node0x1801b70;
	Node0x1806c78 -> Node0x1801b70;
	Node0x1806d08 -> Node0x1801b70;
	Node0x1806d68 -> Node0x1801b70;
	Node0x1806bf8 -> Node0x1807908;
	Node0x1806c78 -> Node0x1808878;
	Node0x1806d08 -> Node0x1808ee8;
	Node0x1806d68 -> Node0x1808f48;
	Node0x1808ee8 -> Node0x1808fc0;
	Node0x1808f48 -> Node0x1809030;
	Node0x1807908 -> Node0x1809030;
	Node0x1809030 -> Node0x18090a0;
	Node0x18090a0 -> Node0x1809110;
	Node0x1808f48 -> Node0x1809180;
	Node0x1807908 -> Node0x1809180;
	Node0x1809180 -> Node0x18091f0;
	Node0x1808ee8 -> Node0x18091f0;
	Node0x1809110 -> Node0x1809260;
	Node0x18091f0 -> Node0x1809260;
	Node0x1808ee8 -> Node0x18092d0;
	Node0x1808878 -> Node0x18092d0;
	Node0x1808ee8 -> Node0x1809340;
	Node0x1808878 -> Node0x1809340;
	Node0x1808878 -> Node0x18093b0;
	Node0x1808fc0 -> Node0x18093b0;
	Node0x18093b0 -> Node0x1809420;
	Node0x18092d0 -> Node0x1809490;
	Node0x1809490 -> Node0x1809500;
	Node0x1808878 -> Node0x1809570;
	Node0x1808fc0 -> Node0x1809570;
	Node0x1808ee8 -> Node0x18095e0;
	Node0x1808878 -> Node0x18095e0;
	Node0x18095e0 -> Node0x1809650;
	Node0x1807908 -> Node0x18096c0;
	Node0x1807908 -> Node0x1809730;
	Node0x1808f48 -> Node0x18097a0;
	Node0x1807908 -> Node0x1809810;
	Node0x1808f48 -> Node0x1809880;
	Node0x1807908 -> Node0x1809880;
	Node0x1809180 -> Node0x18098f0;
	Node0x18098f0 -> Node0x1809960;
	Node0x1807908 -> Node0x18099d0;
	Node0x18097a0 -> Node0x18099d0;
	Node0x1808f48 -> Node0x1809a40;
	Node0x18096c0 -> Node0x1809a40;
	Node0x1809730 -> Node0x1809ab0;
	Node0x1808878 -> Node0x1809ab0;
	Node0x1809ab0 -> Node0x1809b20;
	Node0x1809810 -> Node0x1809b20;
	Node0x1809b20 -> Node0x1809b90;
	Node0x1808ee8 -> Node0x1809b90;
	Node0x1809b90 -> Node0x1809c00;
	Node0x18092d0 -> Node0x1809c00;
	Node0x1809c00 -> Node0x1809c70;
	Node0x1809340 -> Node0x1809c70;
	Node0x1809c70 -> Node0x1809ce0;
	Node0x1809570 -> Node0x1809ce0;
	Node0x1809ce0 -> Node0x1809d50;
	Node0x18097a0 -> Node0x1809d50;
	Node0x1809d50 -> Node0x1809dc0;
	Node0x1809420 -> Node0x1809dc0;
	Node0x1809dc0 -> Node0x1809e30;
	Node0x1809650 -> Node0x1809e30;
	Node0x1809e30 -> Node0x1809ea0;
	Node0x1809880 -> Node0x1809ea0;
	Node0x1809ea0 -> Node0x1809f10;
	Node0x18099d0 -> Node0x1809f10;
	Node0x1809f10 -> Node0x1809f80;
	Node0x1809a40 -> Node0x1809f80;
	Node0x1809f80 -> Node0x1809ff0;
	Node0x1809030 -> Node0x1809ff0;
	Node0x1809ff0 -> Node0x180a060;
	Node0x1809500 -> Node0x180a060;
	Node0x180a060 -> Node0x180a0d0;
	Node0x1809960 -> Node0x180a0d0;
	Node0x1809260 -> Node0x180a140;
	Node0x180a0d0 -> Node0x180a140;
	Node0x180a140 -> Node0x17a68b8;
	Node0x17a68b8 -> Node0x180a1d0;
	Node0x1807658 -> Node0x180a478;
	Node0x18074e8 -> Node0x180a5d8;
	Node0x1807328 -> Node0x180a6e8;
	Node0x1806e18 -> Node0x180a7f8;
}
