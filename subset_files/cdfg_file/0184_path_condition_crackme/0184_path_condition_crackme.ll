; ModuleID = '../.././c_source_file/0184_path_condition_crackme.c'
source_filename = "../.././c_source_file/0184_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, %1
  %8 = and i32 %7, %0
  %9 = and i32 %2, %0
  %10 = xor i32 %1, %0
  %11 = xor i32 %10, -1
  %12 = or i32 %9, %11
  %13 = shl i32 %12, 1
  %14 = add i32 %13, %8
  %15 = and i32 %5, %3
  %16 = and i32 %15, %4
  %17 = xor i32 %5, %3
  %18 = xor i32 %17, %4
  %19 = xor i32 %16, %18
  %20 = shl i32 %19, 1
  %21 = and i32 %5, %4
  %22 = or i32 %4, %3
  %23 = xor i32 %21, %22
  %24 = sub i32 %14, %23
  %25 = sub i32 %24, %20
  %26 = xor i32 %2, -1
  %27 = and i32 %26, %11
  %28 = xor i32 %1, -1
  %29 = and i32 %28, %0
  %30 = and i32 %26, %1
  %31 = or i32 %30, %29
  %32 = and i32 %26, %0
  %33 = or i32 %26, %1
  %34 = xor i32 %32, %33
  %35 = shl i32 %34, 1
  %36 = and i32 %10, %26
  %37 = and i32 %11, %2
  %38 = shl i32 %37, 1
  %39 = or i32 %26, %0
  %40 = xor i32 %39, -1
  %41 = or i32 %40, %11
  %42 = or i32 %28, %0
  %43 = xor i32 %42, -1
  %44 = or i32 %7, %43
  %45 = xor i32 %0, -1
  %46 = xor i32 %30, -1
  %47 = and i32 %46, %45
  %48 = xor i32 %2, %0
  %49 = or i32 %48, %28
  %50 = or i32 %10, %40
  %51 = or i32 %26, %43
  %52 = and i32 %1, %0
  %53 = xor i32 %52, -1
  %54 = and i32 %26, %53
  %55 = or i32 %29, %2
  %56 = or i32 %46, %0
  %57 = or i32 %1, %0
  %58 = xor i32 %7, -1
  %59 = and i32 %57, %58
  %60 = shl i32 %59, 1
  %61 = xor i32 %57, -1
  %62 = and i32 %2, %1
  %63 = xor i32 %62, %0
  %64 = or i32 %2, %0
  %65 = xor i32 %64, -1
  %66 = or i32 %10, %65
  %67 = and i32 %62, %0
  %68 = and i32 %7, %45
  %69 = xor i32 %67, -1
  %70 = xor i32 %68, %69
  %71 = or i32 %52, %26
  %72 = or i32 %29, %58
  %73 = or i32 %9, %61
  %74 = or i32 %2, %1
  %75 = xor i32 %74, -1
  %76 = or i32 %52, %75
  %77 = or i32 %48, %52
  %78 = shl i32 %58, 1
  %79 = and i32 %64, %1
  %80 = shl i32 %79, 1
  %81 = and i32 %58, %53
  %82 = and i32 %28, %2
  %83 = and i32 %82, %0
  %84 = or i32 %28, %2
  %85 = and i32 %84, %45
  %86 = or i32 %83, %85
  %87 = or i32 %10, %2
  %88 = xor i32 %62, -1
  %89 = and i32 %39, %10
  %90 = xor i32 %48, -1
  %91 = xor i32 %74, %0
  %92 = xor i32 %91, %69
  %93 = xor i32 %33, %0
  %94 = shl i32 %93, 1
  %95 = and i32 %90, %11
  %96 = or i32 %52, %58
  %97 = and i32 %64, %28
  %98 = shl i32 %97, 1
  %99 = and i32 %33, %0
  %100 = xor i32 %74, %52
  %101 = add i32 %52, 1
  %102 = or i32 %32, %62
  %103 = or i32 %52, %40
  %104 = shl i32 %103, 1
  %105 = and i32 %48, %42
  %106 = or i32 %7, %61
  %107 = and i32 %62, %45
  %108 = and i32 %74, %0
  %109 = or i32 %107, %108
  %110 = and i32 %46, %0
  %111 = xor i32 %32, %88
  %112 = xor i32 %29, %2
  %113 = xor i32 %57, %2
  %114 = xor i32 %9, -1
  %115 = or i32 %88, %45
  %116 = shl i32 %115, 2
  %117 = or i32 %7, %29
  %118 = or i32 %62, %0
  %119 = and i32 %7, %53
  %120 = or i32 %65, %1
  %121 = xor i32 %33, -1
  %122 = or i32 %48, %43
  %123 = xor i32 %75, %0
  %124 = shl i32 %123, 1
  %125 = or i32 %9, %75
  %126 = shl i32 %125, 1
  %127 = or i32 %52, %90
  %128 = or i32 %62, %29
  %129 = and i32 %82, %45
  %130 = and i32 %84, %0
  %131 = or i32 %129, %130
  %132 = xor i32 %33, %52
  %133 = xor i32 %84, %0
  %134 = xor i32 %133, -1
  %135 = xor i32 %83, %134
  %136 = or i32 %30, %0
  %137 = xor i32 %29, %46
  %138 = xor i32 %32, -1
  %139 = and i32 %138, %28
  %140 = or i32 %48, %1
  %141 = xor i32 %7, %0
  %142 = xor i32 %141, -1
  %143 = xor i32 %83, %142
  %144 = and i32 %114, %28
  %145 = xor i32 %30, %0
  %146 = xor i32 %107, -1
  %147 = xor i32 %108, %146
  %148 = or i32 %48, %61
  %149 = xor i32 %9, %57
  %150 = or i32 %121, %0
  %151 = shl i32 %32, 1
  %152 = or i32 %33, %45
  %153 = xor i32 %67, %141
  %154 = or i32 %88, %0
  %155 = or i32 %9, %28
  %156 = shl i32 %155, 1
  %157 = and i32 %10, %90
  %158 = xor i32 %64, %1
  %159 = xor i32 %65, %1
  %160 = xor i32 %64, %52
  %161 = and i32 %48, %57
  %162 = or i32 %9, %10
  %163 = xor i32 %130, 2147483647
  %164 = xor i32 %163, %129
  %165 = shl i32 %164, 1
  %166 = and i32 %48, %53
  %167 = or i32 %11, %2
  %168 = or i32 %26, %61
  %169 = shl i32 %91, 1
  %170 = and i32 %10, %138
  %171 = or i32 %52, %2
  %172 = or i32 %75, %45
  %173 = xor i32 %29, -1
  %174 = and i32 %90, %173
  %175 = or i32 %90, %1
  %176 = xor i32 %40, %1
  %177 = shl i32 %46, 1
  %178 = and i32 %39, %11
  %179 = xor i32 %42, %2
  %180 = and i32 %53, %2
  %181 = xor i32 %29, %88
  %182 = and i32 %48, %11
  %183 = or i32 %40, %28
  %184 = or i32 %10, %26
  %185 = xor i32 %85, 2147483647
  %186 = xor i32 %185, %83
  %187 = shl i32 %186, 1
  %188 = or i32 %30, %45
  %189 = and i32 %114, %11
  %190 = or i32 %58, %61
  %191 = and i32 %58, %0
  %192 = or i32 %52, %121
  %193 = or i32 %61, %2
  %194 = and i32 %64, %10
  %195 = or i32 %90, %11
  %196 = xor i32 %9, %1
  %197 = or i32 %58, %45
  %198 = xor i32 %173, %2
  %199 = shl i32 %198, 1
  %200 = and i32 %74, %45
  %201 = or i32 %67, %200
  %202 = and i32 %57, %26
  %203 = and i32 %7, %173
  %204 = and i32 %90, %28
  %205 = or i32 %29, %90
  %206 = or i32 %10, %90
  %207 = or i32 %65, %28
  %208 = and i32 %90, %53
  %209 = shl i32 %43, 1
  %210 = and i32 %33, %45
  %211 = shl i32 %45, 1
  %212 = and i32 %39, %28
  %213 = shl i32 %212, 1
  %214 = or i32 %74, %45
  %215 = shl i32 %214, 1
  %216 = or i32 %7, %45
  %217 = xor i32 %129, %216
  %218 = xor i32 %43, %2
  %219 = xor i32 %61, %2
  %220 = or i32 %9, %1
  %221 = or i32 %58, %0
  %222 = xor i32 %9, %74
  %223 = and i32 %7, %57
  %224 = or i32 %67, %91
  %225 = or i32 %90, %43
  %226 = and i32 %57, %2
  %227 = or i32 %48, %29
  %228 = xor i32 %9, %46
  %229 = shl i32 %228, 2
  %230 = xor i32 %39, %52
  %231 = and i32 %48, %28
  %232 = or i32 %58, %43
  %233 = and i32 %138, %11
  %234 = and i32 %10, %2
  %235 = shl i32 %234, 2
  %236 = and i32 %39, %1
  %237 = and i32 %173, %2
  %238 = add i32 %32, 1
  %239 = or i32 %67, %142
  %240 = and i32 %42, %2
  %241 = or i32 %65, %11
  %242 = xor i32 %46, %0
  %243 = xor i32 %32, %1
  %244 = xor i32 %216, -1
  %245 = or i32 %129, %244
  %246 = xor i32 %9, %42
  %247 = shl i32 %246, 1
  %248 = and i32 %138, %1
  %249 = or i32 %9, %30
  %250 = shl i32 %249, 1
  %251 = and i32 %26, %173
  %252 = or i32 %7, %0
  %253 = xor i32 %83, %252
  %254 = and i32 %42, %26
  %255 = xor i32 %53, %2
  %256 = or i32 %33, %0
  %257 = shl i32 %256, 1
  %258 = xor i32 %39, %1
  %259 = and i32 %58, %45
  %260 = or i32 %90, %28
  %261 = xor i32 %88, %0
  %262 = or i32 %9, %43
  %263 = or i32 %83, %133
  %264 = shl i32 %263, 1
  %265 = or i32 %32, %11
  %266 = or i32 %52, %65
  %267 = and i32 %88, %45
  %268 = or i32 %26, %11
  %269 = or i32 %67, %68
  %270 = or i32 %62, %45
  %271 = and i32 %58, %173
  %272 = shl i32 %271, 1
  %273 = and i32 %57, %90
  %274 = or i32 %32, %121
  %275 = or i32 %7, %52
  %276 = and i32 %42, %58
  %277 = xor i32 %200, %69
  %278 = or i32 %90, %61
  %279 = shl i32 %75, 1
  %280 = and i32 %90, %1
  %281 = or i32 %107, %8
  %282 = or i32 %121, %45
  %283 = or i32 %48, %11
  %284 = or i32 %75, %0
  %285 = or i32 %32, %1
  %286 = and i32 %7, %42
  %287 = and i32 %88, %0
  %288 = and i32 %64, %11
  %289 = or i32 %74, %0
  %290 = and i32 %48, %1
  %291 = xor i32 %121, %0
  %292 = and i32 %48, %10
  %293 = xor i32 %58, %0
  %294 = xor i32 %114, %1
  %295 = xor i32 %8, %146
  %296 = xor i32 %52, %2
  %297 = or i32 %32, %10
  %298 = and i32 %10, %114
  %299 = or i32 %46, %45
  %300 = or i32 %40, %1
  %301 = shl i32 %300, 1
  %302 = or i32 %48, %10
  %303 = or i32 %43, %2
  %304 = or i32 %29, %26
  %305 = and i32 %48, %173
  %306 = xor i32 %138, %1
  %307 = or i32 %83, %141
  %308 = or i32 %32, %28
  %309 = and i32 %42, %90
  %310 = and i32 %114, %1
  %311 = and i32 %75, %45
  %312 = mul i32 %311, 14
  %313 = and i32 %75, %0
  %314 = shl i32 %313, 4
  %315 = and i32 %30, %0
  %316 = and i32 %121, %45
  %317 = mul i32 %316, 22
  %318 = and i32 %121, %0
  %319 = mul i32 %67, 25
  %320 = or i32 %15, %4
  %321 = shl i32 %320, 1
  %322 = and i32 %4, %3
  %323 = xor i32 %322, -1
  %324 = xor i32 %5, -1
  %325 = or i32 %322, %324
  %326 = shl i32 %325, 1
  %327 = or i32 %5, %4
  %328 = xor i32 %4, %3
  %329 = xor i32 %328, -1
  %330 = and i32 %327, %329
  %331 = xor i32 %15, -1
  %332 = and i32 %331, %4
  %333 = shl i32 %332, 1
  %334 = or i32 %324, %4
  %335 = and i32 %334, %328
  %336 = xor i32 %17, -1
  %337 = add i32 %17, 1
  %338 = or i32 %328, %324
  %339 = or i32 %17, %4
  %340 = and i32 %324, %323
  %341 = xor i32 %3, -1
  %342 = and i32 %324, %4
  %343 = or i32 %342, %341
  %344 = xor i32 %4, -1
  %345 = or i32 %5, %3
  %346 = and i32 %345, %344
  %347 = shl i32 %346, 1
  %348 = xor i32 %22, -1
  %349 = or i32 %21, %348
  %350 = xor i32 %16, -1
  %351 = xor i32 %346, %350
  %352 = and i32 %341, %5
  %353 = and i32 %352, %344
  %354 = or i32 %17, %344
  %355 = xor i32 %353, %354
  %356 = and i32 %324, %3
  %357 = xor i32 %356, -1
  %358 = xor i32 %21, %357
  %359 = or i32 %357, %344
  %360 = and i32 %327, %341
  %361 = and i32 %341, %4
  %362 = or i32 %356, %361
  %363 = xor i32 %5, %4
  %364 = xor i32 %363, -1
  %365 = and i32 %364, %341
  %366 = xor i32 %342, -1
  %367 = and i32 %328, %366
  %368 = or i32 %322, %336
  %369 = or i32 %342, %329
  %370 = and i32 %328, %364
  %371 = or i32 %324, %3
  %372 = xor i32 %371, %4
  %373 = or i32 %356, %4
  %374 = or i32 %336, %344
  %375 = and i32 %371, %344
  %376 = and i32 %363, %323
  %377 = or i32 %363, %329
  %378 = and i32 %364, %329
  %379 = xor i32 %327, -1
  %380 = add i32 %327, 1
  %381 = or i32 %379, %329
  %382 = xor i32 %334, -1
  %383 = or i32 %382, %341
  %384 = shl i32 %383, 1
  %385 = or i32 %328, %379
  %386 = and i32 %327, %3
  %387 = and i32 %364, %323
  %388 = or i32 %15, %361
  %389 = and i32 %15, %344
  %390 = and i32 %345, %4
  %391 = xor i32 %390, 2147483647
  %392 = xor i32 %391, %389
  %393 = shl i32 %392, 1
  %394 = or i32 %361, %364
  %395 = or i32 %17, %361
  %396 = xor i32 %361, -1
  %397 = and i32 %396, %5
  %398 = and i32 %17, %4
  %399 = and i32 %363, %328
  %400 = xor i32 %361, %331
  %401 = xor i32 %21, -1
  %402 = xor i32 %401, %3
  %403 = and i32 %363, %341
  %404 = or i32 %324, %329
  %405 = xor i32 %15, %4
  %406 = or i32 %356, %344
  %407 = xor i32 %398, -1
  %408 = xor i32 %389, %407
  %409 = or i32 %341, %4
  %410 = xor i32 %409, -1
  %411 = or i32 %324, %410
  %412 = xor i32 %371, -1
  %413 = xor i32 %327, %322
  %414 = or i32 %15, %344
  %415 = and i32 %17, %323
  %416 = shl i32 %415, 1
  %417 = or i32 %382, %329
  %418 = shl i32 %361, 2
  %419 = or i32 %342, %15
  %420 = xor i32 %331, %4
  %421 = and i32 %352, %4
  %422 = xor i32 %339, -1
  %423 = or i32 %421, %422
  %424 = or i32 %324, %348
  %425 = xor i32 %412, %4
  %426 = and i32 %17, %344
  %427 = xor i32 %426, 2147483647
  %428 = xor i32 %427, %16
  %429 = shl i32 %428, 1
  %430 = xor i32 %361, %357
  %431 = shl i32 %430, 1
  %432 = and i32 %366, %329
  %433 = and i32 %334, %329
  %434 = and i32 %357, %344
  %435 = or i32 %363, %322
  %436 = or i32 %328, %5
  %437 = and i32 %22, %364
  %438 = or i32 %410, %5
  %439 = xor i32 %18, -1
  %440 = or i32 %16, %439
  %441 = xor i32 %342, %371
  %442 = xor i32 %379, %3
  %443 = xor i32 %371, %322
  %444 = or i32 %21, %3
  %445 = and i32 %371, %4
  %446 = and i32 %336, %344
  %447 = and i32 %17, %409
  %448 = or i32 %336, %4
  %449 = xor i32 %21, %345
  %450 = or i32 %363, %361
  %451 = or i32 %16, %426
  %452 = and i32 %401, %329
  %453 = or i32 %363, %341
  %454 = and i32 %328, %401
  %455 = or i32 %342, %412
  %456 = xor i32 %334, %322
  %457 = or i32 %363, %348
  %458 = or i32 %364, %348
  %459 = or i32 %341, %5
  %460 = and i32 %459, %4
  %461 = or i32 %353, %460
  %462 = and i32 %409, %5
  %463 = and i32 %331, %344
  %464 = or i32 %421, %18
  %465 = xor i32 %345, %322
  %466 = shl i32 %465, 1
  %467 = and i32 %364, %396
  %468 = shl i32 %467, 1
  %469 = and i32 %459, %344
  %470 = xor i32 %469, 2147483647
  %471 = xor i32 %470, %421
  %472 = and i32 %327, %328
  %473 = or i32 %21, %329
  %474 = xor i32 %382, %3
  %475 = or i32 %322, %412
  %476 = and i32 %364, %3
  %477 = shl i32 %476, 1
  %478 = and i32 %17, %396
  %479 = or i32 %328, %382
  %480 = and i32 %323, %5
  %481 = xor i32 %345, %4
  %482 = xor i32 %481, %350
  %483 = or i32 %16, %481
  %484 = xor i32 %345, -1
  %485 = or i32 %21, %484
  %486 = or i32 %484, %344
  %487 = add i32 %328, 1
  %488 = xor i32 %357, %4
  %489 = xor i32 %327, %3
  %490 = or i32 %361, %336
  %491 = and i32 %363, %396
  %492 = and i32 %17, %22
  %493 = xor i32 %484, %4
  %494 = xor i32 %421, %339
  %495 = and i32 %401, %3
  %496 = or i32 %363, %3
  %497 = xor i32 %342, %331
  %498 = add i32 %345, 1
  %499 = xor i32 %354, -1
  %500 = or i32 %353, %499
  %501 = or i32 %361, %5
  %502 = xor i32 %459, %4
  %503 = or i32 %421, %502
  %504 = xor i32 %410, %5
  %505 = or i32 %363, %410
  %506 = or i32 %412, %344
  %507 = and i32 %357, %4
  %508 = and i32 %409, %324
  %509 = or i32 %345, %344
  %510 = or i32 %16, %346
  %511 = and i32 %401, %341
  %512 = or i32 %357, %4
  %513 = or i32 %21, %356
  %514 = and i32 %363, %22
  %515 = or i32 %17, %348
  %516 = shl i32 %515, 1
  %517 = xor i32 %348, %5
  %518 = or i32 %379, %3
  %519 = and i32 %409, %336
  %520 = or i32 %364, %329
  %521 = or i32 %331, %344
  %522 = and i32 %324, %329
  %523 = shl i32 %522, 1
  %524 = xor i32 %322, %5
  %525 = and i32 %409, %364
  %526 = or i32 %21, %341
  %527 = and i32 %324, %396
  %528 = shl i32 %527, 1
  %529 = or i32 %328, %364
  %530 = xor i32 %361, %5
  %531 = or i32 %336, %348
  %532 = shl i32 %531, 1
  %533 = and i32 %336, %396
  %534 = or i32 %322, %382
  %535 = and i32 %363, %329
  %536 = shl i32 %410, 1
  %537 = xor i32 %342, %3
  %538 = or i32 %421, %469
  %539 = xor i32 %21, %3
  %540 = or i32 %342, %328
  %541 = or i32 %364, %341
  %542 = or i32 %361, %324
  %543 = or i32 %342, %3
  %544 = and i32 %366, %3
  %545 = and i32 %336, %323
  %546 = or i32 %329, %5
  %547 = and i32 %484, %344
  %548 = and i32 %356, %344
  %549 = and i32 %484, %4
  %550 = mul i32 %549, 7
  %551 = and i32 %412, %344
  %552 = mul i32 %389, 10
  %553 = and i32 %412, %4
  %554 = mul i32 %553, 13
  %555 = add i32 %7, %0
  %556 = add i32 %555, %251
  %557 = add i32 %556, %65
  %558 = add i32 %557, %48
  %559 = add i32 %558, %33
  %560 = add i32 %559, %114
  %561 = sub i32 %560, %27
  %562 = add i32 %561, %344
  %563 = add i32 %562, %200
  %564 = add i32 %563, %273
  %565 = add i32 %564, %172
  %566 = add i32 %565, %157
  %567 = add i32 %566, %154
  %568 = add i32 %567, %132
  %569 = add i32 %568, %41
  %570 = add i32 %569, %143
  %571 = add i32 %570, %342
  %572 = add i32 %571, %530
  %573 = add i32 %572, %404
  %574 = add i32 %573, %543
  %575 = add i32 %574, %535
  %576 = add i32 %575, %442
  %577 = add i32 %576, %395
  %578 = add i32 %577, %394
  %579 = add i32 %578, %368
  %580 = add i32 %579, %365
  %581 = add i32 %580, %362
  %582 = add i32 %581, %483
  %583 = add i32 %582, %471
  %584 = shl i32 %583, 1
  %585 = add i32 %318, %219
  %586 = sub i32 %585, %290
  %587 = add i32 %586, %189
  %588 = sub i32 %587, %145
  %589 = add i32 %588, %120
  %590 = sub i32 %589, %462
  %591 = add i32 %590, %438
  %592 = sub i32 %591, %18
  %593 = sub i32 %592, %551
  %594 = sub i32 %593, %456
  %595 = mul i32 %594, 3
  %596 = add i32 %40, %3
  %597 = add i32 %596, %226
  %598 = sub i32 %597, %113
  %599 = sub i32 %598, %419
  %600 = sub i32 %599, %435
  %601 = mul i32 %600, 5
  %602 = or i32 %315, %107
  %603 = add i32 %602, %547
  %604 = mul i32 %603, 9
  %605 = add i32 %31, 1073741823
  %606 = add i32 %605, %548
  %607 = add i32 %606, %16
  %608 = add i32 %607, %432
  %609 = add i32 %608, %359
  %610 = shl i32 %609, 2
  %611 = sub i32 1, %211
  %612 = add i32 %611, %28
  %613 = sub i32 %612, %1
  %614 = sub i32 %613, %52
  %615 = sub i32 %614, %10
  %616 = add i32 %615, %101
  %617 = sub i32 %616, %2
  %618 = sub i32 %617, %29
  %619 = add i32 %618, %42
  %620 = add i32 %619, %26
  %621 = add i32 %620, %11
  %622 = add i32 %621, %173
  %623 = add i32 %622, %36
  %624 = sub i32 %623, %51
  %625 = add i32 %624, %54
  %626 = sub i32 %625, %55
  %627 = add i32 %626, %71
  %628 = sub i32 %627, %87
  %629 = add i32 %628, %88
  %630 = add i32 %629, %90
  %631 = sub i32 %630, %112
  %632 = add i32 %631, %121
  %633 = sub i32 %632, %74
  %634 = add i32 %633, %167
  %635 = sub i32 %634, %168
  %636 = add i32 %635, %171
  %637 = add i32 %636, %179
  %638 = sub i32 %637, %180
  %639 = sub i32 %638, %184
  %640 = sub i32 %639, %30
  %641 = sub i32 %640, %193
  %642 = sub i32 %641, %62
  %643 = add i32 %642, %202
  %644 = sub i32 %643, %209
  %645 = sub i32 %644, %218
  %646 = add i32 %645, %9
  %647 = sub i32 %646, %237
  %648 = add i32 %647, %238
  %649 = add i32 %648, %240
  %650 = sub i32 %649, %254
  %651 = sub i32 %650, %255
  %652 = add i32 %651, %39
  %653 = sub i32 %652, %268
  %654 = sub i32 %653, %296
  %655 = sub i32 %654, %303
  %656 = sub i32 %655, %304
  %657 = add i32 %656, %64
  %658 = add i32 %657, %341
  %659 = sub i32 %658, %38
  %660 = sub i32 %659, %44
  %661 = sub i32 %660, %47
  %662 = add i32 %661, %49
  %663 = add i32 %662, %50
  %664 = sub i32 %663, %56
  %665 = add i32 %664, %63
  %666 = sub i32 %665, %66
  %667 = add i32 %666, %72
  %668 = sub i32 %667, %73
  %669 = add i32 %668, %76
  %670 = add i32 %669, %77
  %671 = sub i32 %670, %78
  %672 = add i32 %671, %81
  %673 = add i32 %672, %89
  %674 = sub i32 %673, %95
  %675 = sub i32 %674, %96
  %676 = sub i32 %675, %99
  %677 = add i32 %676, %100
  %678 = sub i32 %677, %102
  %679 = sub i32 %678, %105
  %680 = add i32 %679, %106
  %681 = add i32 %680, %110
  %682 = add i32 %681, %111
  %683 = add i32 %682, %117
  %684 = add i32 %683, %118
  %685 = sub i32 %684, %119
  %686 = add i32 %685, %122
  %687 = sub i32 %686, %127
  %688 = add i32 %687, %128
  %689 = add i32 %688, %136
  %690 = sub i32 %689, %137
  %691 = add i32 %690, %139
  %692 = sub i32 %691, %68
  %693 = add i32 %692, %140
  %694 = sub i32 %693, %144
  %695 = sub i32 %694, %108
  %696 = sub i32 %695, %148
  %697 = add i32 %696, %149
  %698 = sub i32 %697, %150
  %699 = sub i32 %698, %151
  %700 = add i32 %699, %152
  %701 = add i32 %700, %158
  %702 = sub i32 %701, %159
  %703 = sub i32 %702, %160
  %704 = add i32 %703, %161
  %705 = add i32 %704, %162
  %706 = add i32 %705, %166
  %707 = add i32 %706, %170
  %708 = sub i32 %707, %141
  %709 = sub i32 %708, %174
  %710 = add i32 %709, %175
  %711 = sub i32 %710, %176
  %712 = sub i32 %711, %177
  %713 = add i32 %712, %178
  %714 = add i32 %713, %181
  %715 = sub i32 %714, %182
  %716 = add i32 %715, %183
  %717 = add i32 %716, %188
  %718 = add i32 %717, %190
  %719 = sub i32 %718, %191
  %720 = sub i32 %719, %192
  %721 = sub i32 %720, %194
  %722 = sub i32 %721, %195
  %723 = add i32 %722, %196
  %724 = add i32 %723, %197
  %725 = sub i32 %724, %199
  %726 = add i32 %725, %203
  %727 = add i32 %726, %204
  %728 = sub i32 %727, %205
  %729 = add i32 %728, %206
  %730 = add i32 %729, %207
  %731 = add i32 %730, %208
  %732 = add i32 %731, %210
  %733 = sub i32 %732, %220
  %734 = add i32 %733, %221
  %735 = sub i32 %734, %222
  %736 = add i32 %735, %223
  %737 = add i32 %736, %225
  %738 = add i32 %737, %227
  %739 = add i32 %738, %230
  %740 = add i32 %739, %231
  %741 = add i32 %740, %232
  %742 = add i32 %741, %233
  %743 = sub i32 %742, %235
  %744 = add i32 %743, %236
  %745 = sub i32 %744, %241
  %746 = add i32 %745, %242
  %747 = sub i32 %746, %243
  %748 = sub i32 %747, %248
  %749 = add i32 %748, %258
  %750 = sub i32 %749, %259
  %751 = sub i32 %750, %260
  %752 = sub i32 %751, %261
  %753 = add i32 %752, %262
  %754 = sub i32 %753, %265
  %755 = sub i32 %754, %266
  %756 = sub i32 %755, %267
  %757 = sub i32 %756, %270
  %758 = sub i32 %757, %274
  %759 = add i32 %758, %275
  %760 = sub i32 %759, %276
  %761 = sub i32 %760, %278
  %762 = sub i32 %761, %279
  %763 = sub i32 %762, %280
  %764 = sub i32 %763, %282
  %765 = sub i32 %764, %283
  %766 = sub i32 %765, %284
  %767 = add i32 %766, %285
  %768 = sub i32 %767, %286
  %769 = sub i32 %768, %287
  %770 = sub i32 %769, %288
  %771 = add i32 %770, %289
  %772 = add i32 %771, %252
  %773 = sub i32 %772, %291
  %774 = sub i32 %773, %292
  %775 = sub i32 %774, %293
  %776 = sub i32 %775, %294
  %777 = sub i32 %776, %297
  %778 = sub i32 %777, %298
  %779 = add i32 %778, %299
  %780 = add i32 %779, %302
  %781 = sub i32 %780, %305
  %782 = sub i32 %781, %306
  %783 = add i32 %782, %308
  %784 = add i32 %783, %216
  %785 = add i32 %784, %309
  %786 = add i32 %785, %310
  %787 = sub i32 %786, %4
  %788 = sub i32 %787, %35
  %789 = sub i32 %788, %60
  %790 = add i32 %789, %70
  %791 = sub i32 %790, %80
  %792 = sub i32 %791, %86
  %793 = add i32 %792, %92
  %794 = sub i32 %793, %94
  %795 = sub i32 %794, %98
  %796 = sub i32 %795, %104
  %797 = add i32 %796, %109
  %798 = sub i32 %797, %116
  %799 = sub i32 %798, %124
  %800 = sub i32 %799, %126
  %801 = sub i32 %800, %131
  %802 = sub i32 %801, %135
  %803 = sub i32 %802, %147
  %804 = add i32 %803, %153
  %805 = sub i32 %804, %156
  %806 = sub i32 %805, %169
  %807 = add i32 %806, %201
  %808 = sub i32 %807, %213
  %809 = sub i32 %808, %215
  %810 = sub i32 %809, %217
  %811 = sub i32 %810, %224
  %812 = sub i32 %811, %229
  %813 = add i32 %812, %239
  %814 = add i32 %813, %245
  %815 = sub i32 %814, %247
  %816 = sub i32 %815, %250
  %817 = sub i32 %816, %253
  %818 = sub i32 %817, %257
  %819 = add i32 %818, %269
  %820 = sub i32 %819, %272
  %821 = sub i32 %820, %277
  %822 = add i32 %821, %281
  %823 = add i32 %822, %295
  %824 = sub i32 %823, %301
  %825 = sub i32 %824, %307
  %826 = add i32 %825, %312
  %827 = add i32 %826, %314
  %828 = add i32 %827, %317
  %829 = add i32 %828, %319
  %830 = add i32 %829, %348
  %831 = add i32 %830, %396
  %832 = add i32 %831, %487
  %833 = sub i32 %832, %264
  %834 = sub i32 %833, %21
  %835 = add i32 %834, %337
  %836 = sub i32 %835, %338
  %837 = sub i32 %836, %340
  %838 = add i32 %837, %327
  %839 = sub i32 %838, %371
  %840 = sub i32 %839, %356
  %841 = add i32 %840, %380
  %842 = add i32 %841, %397
  %843 = sub i32 %842, %15
  %844 = add i32 %843, %411
  %845 = add i32 %844, %412
  %846 = add i32 %845, %366
  %847 = sub i32 %846, %418
  %848 = add i32 %847, %424
  %849 = sub i32 %848, %436
  %850 = sub i32 %849, %345
  %851 = sub i32 %850, %480
  %852 = add i32 %851, %498
  %853 = add i32 %852, %501
  %854 = add i32 %853, %504
  %855 = sub i32 %854, %508
  %856 = sub i32 %855, %517
  %857 = sub i32 %856, %524
  %858 = add i32 %857, %17
  %859 = add i32 %858, %401
  %860 = sub i32 %859, %536
  %861 = add i32 %860, %542
  %862 = add i32 %861, %546
  %863 = sub i32 %862, %165
  %864 = sub i32 %863, %187
  %865 = sub i32 %864, %326
  %866 = sub i32 %865, %330
  %867 = sub i32 %866, %335
  %868 = add i32 %867, %339
  %869 = sub i32 %868, %343
  %870 = add i32 %869, %349
  %871 = sub i32 %870, %358
  %872 = add i32 %871, %360
  %873 = sub i32 %872, %367
  %874 = sub i32 %873, %369
  %875 = add i32 %874, %370
  %876 = sub i32 %875, %372
  %877 = sub i32 %876, %373
  %878 = sub i32 %877, %374
  %879 = add i32 %878, %375
  %880 = add i32 %879, %376
  %881 = sub i32 %880, %377
  %882 = add i32 %881, %378
  %883 = sub i32 %882, %381
  %884 = add i32 %883, %385
  %885 = add i32 %884, %386
  %886 = sub i32 %885, %387
  %887 = sub i32 %886, %388
  %888 = add i32 %887, %398
  %889 = sub i32 %888, %399
  %890 = sub i32 %889, %400
  %891 = add i32 %890, %402
  %892 = add i32 %891, %403
  %893 = sub i32 %892, %405
  %894 = add i32 %893, %406
  %895 = sub i32 %894, %413
  %896 = sub i32 %895, %414
  %897 = add i32 %896, %417
  %898 = add i32 %897, %420
  %899 = add i32 %898, %425
  %900 = add i32 %899, %433
  %901 = sub i32 %900, %434
  %902 = add i32 %901, %437
  %903 = add i32 %902, %441
  %904 = add i32 %903, %443
  %905 = sub i32 %904, %444
  %906 = sub i32 %905, %445
  %907 = sub i32 %906, %446
  %908 = add i32 %907, %447
  %909 = add i32 %908, %448
  %910 = add i32 %909, %449
  %911 = add i32 %910, %450
  %912 = add i32 %911, %452
  %913 = add i32 %912, %453
  %914 = add i32 %913, %454
  %915 = add i32 %914, %455
  %916 = add i32 %915, %457
  %917 = sub i32 %916, %458
  %918 = sub i32 %917, %463
  %919 = sub i32 %918, %472
  %920 = sub i32 %919, %473
  %921 = add i32 %920, %474
  %922 = sub i32 %921, %475
  %923 = sub i32 %922, %478
  %924 = sub i32 %923, %479
  %925 = add i32 %924, %485
  %926 = sub i32 %925, %486
  %927 = sub i32 %926, %488
  %928 = add i32 %927, %489
  %929 = add i32 %928, %490
  %930 = sub i32 %929, %491
  %931 = sub i32 %930, %492
  %932 = add i32 %931, %493
  %933 = sub i32 %932, %495
  %934 = add i32 %933, %496
  %935 = sub i32 %934, %497
  %936 = add i32 %935, %354
  %937 = add i32 %936, %505
  %938 = sub i32 %937, %506
  %939 = sub i32 %938, %507
  %940 = sub i32 %939, %509
  %941 = add i32 %940, %426
  %942 = add i32 %941, %511
  %943 = sub i32 %942, %512
  %944 = sub i32 %943, %513
  %945 = sub i32 %944, %514
  %946 = sub i32 %945, %518
  %947 = add i32 %946, %519
  %948 = sub i32 %947, %520
  %949 = add i32 %948, %521
  %950 = sub i32 %949, %523
  %951 = sub i32 %950, %525
  %952 = sub i32 %951, %526
  %953 = sub i32 %952, %528
  %954 = sub i32 %953, %529
  %955 = add i32 %954, %533
  %956 = sub i32 %955, %534
  %957 = sub i32 %956, %537
  %958 = add i32 %957, %539
  %959 = add i32 %958, %540
  %960 = sub i32 %959, %541
  %961 = sub i32 %960, %544
  %962 = sub i32 %961, %545
  %963 = sub i32 %962, %321
  %964 = sub i32 %963, %333
  %965 = sub i32 %964, %347
  %966 = sub i32 %965, %351
  %967 = sub i32 %966, %355
  %968 = sub i32 %967, %384
  %969 = sub i32 %968, %408
  %970 = sub i32 %969, %416
  %971 = sub i32 %970, %423
  %972 = sub i32 %971, %431
  %973 = add i32 %972, %440
  %974 = sub i32 %973, %451
  %975 = add i32 %974, %461
  %976 = add i32 %975, %464
  %977 = sub i32 %976, %466
  %978 = sub i32 %977, %468
  %979 = sub i32 %978, %477
  %980 = add i32 %979, %482
  %981 = sub i32 %980, %494
  %982 = add i32 %981, %500
  %983 = add i32 %982, %503
  %984 = sub i32 %983, %510
  %985 = sub i32 %984, %516
  %986 = sub i32 %985, %532
  %987 = sub i32 %986, %538
  %988 = add i32 %987, %550
  %989 = add i32 %988, %552
  %990 = add i32 %989, %554
  %991 = sub i32 %990, %393
  %992 = sub i32 %991, %429
  %993 = add i32 %992, %604
  %994 = add i32 %993, %601
  %995 = add i32 %994, %610
  %996 = add i32 %995, %595
  %997 = add i32 %996, %584
  %998 = icmp eq i32 %25, %997
  %999 = select i1 %998, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %1000 = tail call i32 @puts(i8* nonnull dereferenceable(1) %999)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
