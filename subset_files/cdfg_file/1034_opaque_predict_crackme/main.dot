digraph "DFG for'main' function" {
	Node0x1ac0e28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ac0ea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ac0f38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1ac0f98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1ac1048[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1ac1478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ac1558[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1ac1658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ac1718[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x1ac17c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1ac1888[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1ac1938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1abbbd0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1ac1b38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ac2aa8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ac3118[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1ac3178[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1ac31f0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x1ac3260[shape=record, label="  %15 = add i32 %14, %10"];
	Node0x1ac32d0[shape=record, label="  %16 = or i32 %13, %10"];
	Node0x1ac3340[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x1ac33b0[shape=record, label="  %18 = sub i32 %15, %17"];
	Node0x1ac3420[shape=record, label="  %19 = xor i32 %12, -1"];
	Node0x1ac3490[shape=record, label="  %20 = and i32 %11, %19"];
	Node0x1ac3500[shape=record, label="  %21 = shl i32 %20, 1"];
	Node0x1ac3570[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x1ac35e0[shape=record, label="  %23 = or i32 %11, %19"];
	Node0x1ac3650[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x1ac36c0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x1ac3730[shape=record, label="  %26 = mul i32 %25, -3"];
	Node0x1ac37a0[shape=record, label="  %27 = xor i32 %14, -1"];
	Node0x1ac3810[shape=record, label="  %28 = mul i32 %27, 6"];
	Node0x1ac3880[shape=record, label="  %29 = xor i32 %23, -1"];
	Node0x1ac38f0[shape=record, label="  %30 = mul i32 %29, 9"];
	Node0x1ac3960[shape=record, label="  %31 = and i32 %13, %10"];
	Node0x1ac39d0[shape=record, label="  %32 = xor i32 %13, %10"];
	Node0x1ac3a40[shape=record, label="  %33 = xor i32 %10, -1"];
	Node0x1ac3ab0[shape=record, label="  %34 = or i32 %13, %33"];
	Node0x1ac3b20[shape=record, label="  %35 = xor i32 %17, -2"];
	Node0x1ac3b90[shape=record, label="  %36 = shl i32 %34, 1"];
	Node0x1ac3c00[shape=record, label="  %37 = xor i32 %36, -2"];
	Node0x1ac3c70[shape=record, label="  %38 = and i32 %13, %33"];
	Node0x1ac3ce0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x1ac3d50[shape=record, label="  %40 = shl i32 %32, 1"];
	Node0x1ac3dc0[shape=record, label="  %41 = shl i32 %11, 2"];
	Node0x1ac3e30[shape=record, label="  %42 = add i32 %11, 3"];
	Node0x1ac3ea0[shape=record, label="  %43 = sub i32 %42, %12"];
	Node0x1ac3f10[shape=record, label="  %44 = add i32 %43, %41"];
	Node0x1ac3f80[shape=record, label="  %45 = add i32 %44, %23"];
	Node0x1ac3ff0[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x1ac4060[shape=record, label="  %47 = add i32 %46, %28"];
	Node0x1ac40d0[shape=record, label="  %48 = add i32 %47, %30"];
	Node0x1ac4140[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x1ac41b0[shape=record, label="  %50 = sub i32 %49, %34"];
	Node0x1ac4220[shape=record, label="  %51 = sub i32 %50, %22"];
	Node0x1ac4290[shape=record, label="  %52 = sub i32 %51, %39"];
	Node0x1ac4300[shape=record, label="  %53 = add i32 %52, %40"];
	Node0x1ac4370[shape=record, label="  %54 = add i32 %53, %35"];
	Node0x1ac43e0[shape=record, label="  %55 = sub i32 %54, %37"];
	Node0x1ac4450[shape=record, label="  %56 = icmp eq i32 %18, %55"];
	Node0x1a608b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ac44e0[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x1ac4788[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1ac48e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1ac49f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1ac4b08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1ac4bc8[shape=record, label="  ret i32 0"];
	Node0x1ac0e28 -> Node0x1ac0ea8;
	Node0x1ac0ea8 -> Node0x1ac0f38;
	Node0x1ac0f38 -> Node0x1ac0f98;
	Node0x1ac0f98 -> Node0x1ac1048;
	Node0x1ac1048 -> Node0x1ac1478;
	Node0x1ac1478 -> Node0x1ac1558;
	Node0x1ac1558 -> Node0x1ac1658;
	Node0x1ac1658 -> Node0x1ac1718;
	Node0x1ac1718 -> Node0x1ac17c8;
	Node0x1ac17c8 -> Node0x1ac1888;
	Node0x1ac1888 -> Node0x1ac1938;
	Node0x1ac1938 -> Node0x1abbbd0;
	Node0x1abbbd0 -> Node0x1ac1b38;
	Node0x1ac1b38 -> Node0x1ac2aa8;
	Node0x1ac2aa8 -> Node0x1ac3118;
	Node0x1ac3118 -> Node0x1ac3178;
	Node0x1ac3178 -> Node0x1ac31f0;
	Node0x1ac31f0 -> Node0x1ac3260;
	Node0x1ac3260 -> Node0x1ac32d0;
	Node0x1ac32d0 -> Node0x1ac3340;
	Node0x1ac3340 -> Node0x1ac33b0;
	Node0x1ac33b0 -> Node0x1ac3420;
	Node0x1ac3420 -> Node0x1ac3490;
	Node0x1ac3490 -> Node0x1ac3500;
	Node0x1ac3500 -> Node0x1ac3570;
	Node0x1ac3570 -> Node0x1ac35e0;
	Node0x1ac35e0 -> Node0x1ac3650;
	Node0x1ac3650 -> Node0x1ac36c0;
	Node0x1ac36c0 -> Node0x1ac3730;
	Node0x1ac3730 -> Node0x1ac37a0;
	Node0x1ac37a0 -> Node0x1ac3810;
	Node0x1ac3810 -> Node0x1ac3880;
	Node0x1ac3880 -> Node0x1ac38f0;
	Node0x1ac38f0 -> Node0x1ac3960;
	Node0x1ac3960 -> Node0x1ac39d0;
	Node0x1ac39d0 -> Node0x1ac3a40;
	Node0x1ac3a40 -> Node0x1ac3ab0;
	Node0x1ac3ab0 -> Node0x1ac3b20;
	Node0x1ac3b20 -> Node0x1ac3b90;
	Node0x1ac3b90 -> Node0x1ac3c00;
	Node0x1ac3c00 -> Node0x1ac3c70;
	Node0x1ac3c70 -> Node0x1ac3ce0;
	Node0x1ac3ce0 -> Node0x1ac3d50;
	Node0x1ac3d50 -> Node0x1ac3dc0;
	Node0x1ac3dc0 -> Node0x1ac3e30;
	Node0x1ac3e30 -> Node0x1ac3ea0;
	Node0x1ac3ea0 -> Node0x1ac3f10;
	Node0x1ac3f10 -> Node0x1ac3f80;
	Node0x1ac3f80 -> Node0x1ac3ff0;
	Node0x1ac3ff0 -> Node0x1ac4060;
	Node0x1ac4060 -> Node0x1ac40d0;
	Node0x1ac40d0 -> Node0x1ac4140;
	Node0x1ac4140 -> Node0x1ac41b0;
	Node0x1ac41b0 -> Node0x1ac4220;
	Node0x1ac4220 -> Node0x1ac4290;
	Node0x1ac4290 -> Node0x1ac4300;
	Node0x1ac4300 -> Node0x1ac4370;
	Node0x1ac4370 -> Node0x1ac43e0;
	Node0x1ac43e0 -> Node0x1ac4450;
	Node0x1ac4450 -> Node0x1a608b8;
	Node0x1a608b8 -> Node0x1ac44e0;
	Node0x1ac44e0 -> Node0x1ac4788;
	Node0x1ac4788 -> Node0x1ac48e8;
	Node0x1ac48e8 -> Node0x1ac49f8;
	Node0x1ac49f8 -> Node0x1ac4b08;
	Node0x1ac4b08 -> Node0x1ac4bc8;
edge [color=red]
	Node0x1ac0e28 -> Node0x1ac1048;
	Node0x1ac1048 -> Node0x1ac1478;
	Node0x1ac0ea8 -> Node0x1ac1558;
	Node0x1ac1558 -> Node0x1ac1658;
	Node0x1ac0f38 -> Node0x1ac1718;
	Node0x1ac1718 -> Node0x1ac17c8;
	Node0x1ac0f98 -> Node0x1ac1888;
	Node0x1ac1888 -> Node0x1ac1938;
	Node0x1ac0e28 -> Node0x1abbbd0;
	Node0x1ac0ea8 -> Node0x1abbbd0;
	Node0x1ac0f38 -> Node0x1abbbd0;
	Node0x1ac0f98 -> Node0x1abbbd0;
	Node0x1ac0e28 -> Node0x1ac1b38;
	Node0x1ac0ea8 -> Node0x1ac2aa8;
	Node0x1ac0f38 -> Node0x1ac3118;
	Node0x1ac0f98 -> Node0x1ac3178;
	Node0x1ac3118 -> Node0x1ac31f0;
	Node0x1ac2aa8 -> Node0x1ac31f0;
	Node0x1ac31f0 -> Node0x1ac3260;
	Node0x1ac1b38 -> Node0x1ac3260;
	Node0x1ac3178 -> Node0x1ac32d0;
	Node0x1ac1b38 -> Node0x1ac32d0;
	Node0x1ac32d0 -> Node0x1ac3340;
	Node0x1ac3260 -> Node0x1ac33b0;
	Node0x1ac3340 -> Node0x1ac33b0;
	Node0x1ac3118 -> Node0x1ac3420;
	Node0x1ac2aa8 -> Node0x1ac3490;
	Node0x1ac3420 -> Node0x1ac3490;
	Node0x1ac3490 -> Node0x1ac3500;
	Node0x1ac3500 -> Node0x1ac3570;
	Node0x1ac2aa8 -> Node0x1ac35e0;
	Node0x1ac3420 -> Node0x1ac35e0;
	Node0x1ac3118 -> Node0x1ac3650;
	Node0x1ac2aa8 -> Node0x1ac3650;
	Node0x1ac3650 -> Node0x1ac36c0;
	Node0x1ac36c0 -> Node0x1ac3730;
	Node0x1ac31f0 -> Node0x1ac37a0;
	Node0x1ac37a0 -> Node0x1ac3810;
	Node0x1ac35e0 -> Node0x1ac3880;
	Node0x1ac3880 -> Node0x1ac38f0;
	Node0x1ac3178 -> Node0x1ac3960;
	Node0x1ac1b38 -> Node0x1ac3960;
	Node0x1ac3178 -> Node0x1ac39d0;
	Node0x1ac1b38 -> Node0x1ac39d0;
	Node0x1ac1b38 -> Node0x1ac3a40;
	Node0x1ac3178 -> Node0x1ac3ab0;
	Node0x1ac3a40 -> Node0x1ac3ab0;
	Node0x1ac3340 -> Node0x1ac3b20;
	Node0x1ac3ab0 -> Node0x1ac3b90;
	Node0x1ac3b90 -> Node0x1ac3c00;
	Node0x1ac3178 -> Node0x1ac3c70;
	Node0x1ac3a40 -> Node0x1ac3c70;
	Node0x1ac3c70 -> Node0x1ac3ce0;
	Node0x1ac39d0 -> Node0x1ac3d50;
	Node0x1ac2aa8 -> Node0x1ac3dc0;
	Node0x1ac2aa8 -> Node0x1ac3e30;
	Node0x1ac3e30 -> Node0x1ac3ea0;
	Node0x1ac3118 -> Node0x1ac3ea0;
	Node0x1ac3ea0 -> Node0x1ac3f10;
	Node0x1ac3dc0 -> Node0x1ac3f10;
	Node0x1ac3f10 -> Node0x1ac3f80;
	Node0x1ac35e0 -> Node0x1ac3f80;
	Node0x1ac3f80 -> Node0x1ac3ff0;
	Node0x1ac3730 -> Node0x1ac3ff0;
	Node0x1ac3ff0 -> Node0x1ac4060;
	Node0x1ac3810 -> Node0x1ac4060;
	Node0x1ac4060 -> Node0x1ac40d0;
	Node0x1ac38f0 -> Node0x1ac40d0;
	Node0x1ac40d0 -> Node0x1ac4140;
	Node0x1ac3960 -> Node0x1ac4140;
	Node0x1ac4140 -> Node0x1ac41b0;
	Node0x1ac3ab0 -> Node0x1ac41b0;
	Node0x1ac41b0 -> Node0x1ac4220;
	Node0x1ac3570 -> Node0x1ac4220;
	Node0x1ac4220 -> Node0x1ac4290;
	Node0x1ac3ce0 -> Node0x1ac4290;
	Node0x1ac4290 -> Node0x1ac4300;
	Node0x1ac3d50 -> Node0x1ac4300;
	Node0x1ac4300 -> Node0x1ac4370;
	Node0x1ac3b20 -> Node0x1ac4370;
	Node0x1ac4370 -> Node0x1ac43e0;
	Node0x1ac3c00 -> Node0x1ac43e0;
	Node0x1ac33b0 -> Node0x1ac4450;
	Node0x1ac43e0 -> Node0x1ac4450;
	Node0x1ac4450 -> Node0x1a608b8;
	Node0x1a608b8 -> Node0x1ac44e0;
	Node0x1ac1888 -> Node0x1ac4788;
	Node0x1ac1718 -> Node0x1ac48e8;
	Node0x1ac1558 -> Node0x1ac49f8;
	Node0x1ac1048 -> Node0x1ac4b08;
}
