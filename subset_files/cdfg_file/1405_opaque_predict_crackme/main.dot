digraph "DFG for'main' function" {
	Node0x11a6b48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x11a6bc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x11a6c58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x11a6cb8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x11a7138[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11a7218[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x11a7318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11a73d8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x11a7488[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11a76e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x11a77a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x11a8718[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x11a8d88[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x11a8e80[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x11a9088[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x11a91e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x11a92f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x11a93b8[shape=record, label="  ret i32 0"];
	Node0x11a6b48 -> Node0x11a6bc8;
	Node0x11a6bc8 -> Node0x11a6c58;
	Node0x11a6c58 -> Node0x11a6cb8;
	Node0x11a6cb8 -> Node0x11a7138;
	Node0x11a7138 -> Node0x11a7218;
	Node0x11a7218 -> Node0x11a7318;
	Node0x11a7318 -> Node0x11a73d8;
	Node0x11a73d8 -> Node0x11a7488;
	Node0x11a7488 -> Node0x11a76e8;
	Node0x11a76e8 -> Node0x11a77a8;
	Node0x11a77a8 -> Node0x11a8718;
	Node0x11a8718 -> Node0x11a8d88;
	Node0x11a8d88 -> Node0x11a8e80;
	Node0x11a8e80 -> Node0x11a9088;
	Node0x11a9088 -> Node0x11a91e8;
	Node0x11a91e8 -> Node0x11a92f8;
	Node0x11a92f8 -> Node0x11a93b8;
edge [color=red]
	Node0x11a6b48 -> Node0x11a6cb8;
	Node0x11a6cb8 -> Node0x11a7138;
	Node0x11a6bc8 -> Node0x11a7218;
	Node0x11a7218 -> Node0x11a7318;
	Node0x11a6c58 -> Node0x11a73d8;
	Node0x11a73d8 -> Node0x11a7488;
	Node0x11a6b48 -> Node0x11a76e8;
	Node0x11a6bc8 -> Node0x11a76e8;
	Node0x11a6c58 -> Node0x11a76e8;
	Node0x11a6b48 -> Node0x11a77a8;
	Node0x11a6bc8 -> Node0x11a8718;
	Node0x11a6c58 -> Node0x11a8d88;
	Node0x11a77a8 -> Node0x11a8e80;
	Node0x11a8718 -> Node0x11a8e80;
	Node0x11a8d88 -> Node0x11a8e80;
	Node0x11a73d8 -> Node0x11a9088;
	Node0x11a7218 -> Node0x11a91e8;
	Node0x11a6cb8 -> Node0x11a92f8;
}
