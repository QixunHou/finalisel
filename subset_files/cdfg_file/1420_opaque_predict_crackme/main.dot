digraph "DFG for'main' function" {
	Node0xfd3e28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xfd3ea8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xfd3f38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xfd3f98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xfd4048[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xfd4478[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfd4558[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xfd4658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfd4718[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xfd47c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xfd4888[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xfd4938[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xfce7e0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xfd4b38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xfd5aa8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xfd6118[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xfd6178[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xfd6288[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xfd64e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xfd6648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xfd6758[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfd6868[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfd6928[shape=record, label="  ret i32 0"];
	Node0xfd3e28 -> Node0xfd3ea8;
	Node0xfd3ea8 -> Node0xfd3f38;
	Node0xfd3f38 -> Node0xfd3f98;
	Node0xfd3f98 -> Node0xfd4048;
	Node0xfd4048 -> Node0xfd4478;
	Node0xfd4478 -> Node0xfd4558;
	Node0xfd4558 -> Node0xfd4658;
	Node0xfd4658 -> Node0xfd4718;
	Node0xfd4718 -> Node0xfd47c8;
	Node0xfd47c8 -> Node0xfd4888;
	Node0xfd4888 -> Node0xfd4938;
	Node0xfd4938 -> Node0xfce7e0;
	Node0xfce7e0 -> Node0xfd4b38;
	Node0xfd4b38 -> Node0xfd5aa8;
	Node0xfd5aa8 -> Node0xfd6118;
	Node0xfd6118 -> Node0xfd6178;
	Node0xfd6178 -> Node0xfd6288;
	Node0xfd6288 -> Node0xfd64e8;
	Node0xfd64e8 -> Node0xfd6648;
	Node0xfd6648 -> Node0xfd6758;
	Node0xfd6758 -> Node0xfd6868;
	Node0xfd6868 -> Node0xfd6928;
edge [color=red]
	Node0xfd3e28 -> Node0xfd4048;
	Node0xfd4048 -> Node0xfd4478;
	Node0xfd3ea8 -> Node0xfd4558;
	Node0xfd4558 -> Node0xfd4658;
	Node0xfd3f38 -> Node0xfd4718;
	Node0xfd4718 -> Node0xfd47c8;
	Node0xfd3f98 -> Node0xfd4888;
	Node0xfd4888 -> Node0xfd4938;
	Node0xfd3e28 -> Node0xfce7e0;
	Node0xfd3ea8 -> Node0xfce7e0;
	Node0xfd3f38 -> Node0xfce7e0;
	Node0xfd3f98 -> Node0xfce7e0;
	Node0xfd3e28 -> Node0xfd4b38;
	Node0xfd3ea8 -> Node0xfd5aa8;
	Node0xfd3f38 -> Node0xfd6118;
	Node0xfd3f98 -> Node0xfd6178;
	Node0xfd4b38 -> Node0xfd6288;
	Node0xfd5aa8 -> Node0xfd6288;
	Node0xfd6118 -> Node0xfd6288;
	Node0xfd6178 -> Node0xfd6288;
	Node0xfd4888 -> Node0xfd64e8;
	Node0xfd4718 -> Node0xfd6648;
	Node0xfd4558 -> Node0xfd6758;
	Node0xfd4048 -> Node0xfd6868;
}
