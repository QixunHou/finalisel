digraph "DFG for'crackme' function" {
	Node0xfd17b0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0xfd1e30[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0xfd1ea0[shape=record, label="  %7 = sub i32 %6, %5"];
	Node0xfd1f10[shape=record, label="  %8 = or i32 %6, %3"];
	Node0xfd1fb0[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0xfd2020[shape=record, label="  %10 = add i32 %7, %9"];
	Node0xfd2090[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0xfd2100[shape=record, label="  %12 = xor i32 %1, -1"];
	Node0xfd2170[shape=record, label="  %13 = or i32 %12, %2"];
	Node0xfd2210[shape=record, label="  %14 = mul i32 %13, -2"];
	Node0xfd2280[shape=record, label="  %15 = and i32 %2, %1"];
	Node0xfd22f0[shape=record, label="  %16 = xor i32 %15, -1"];
	Node0xfd2360[shape=record, label="  %17 = xor i32 %2, %1"];
	Node0xfd23d0[shape=record, label="  %18 = or i32 %11, %1"];
	Node0xfd2470[shape=record, label="  %19 = shl i32 %5, 2"];
	Node0xfd2510[shape=record, label="  %20 = xor i32 %19, -4"];
	Node0xfd2580[shape=record, label="  %21 = shl i32 %15, 2"];
	Node0xfd25f0[shape=record, label="  %22 = xor i32 %3, %0"];
	Node0xfd2660[shape=record, label="  %23 = shl i32 %22, 1"];
	Node0xfd26d0[shape=record, label="  %24 = xor i32 %23, -2"];
	Node0xfd2740[shape=record, label="  %25 = shl i32 %3, 2"];
	Node0xfd27b0[shape=record, label="  %26 = xor i32 %25, -4"];
	Node0xfd2820[shape=record, label="  %27 = and i32 %6, %3"];
	Node0xfd2890[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0xfd2900[shape=record, label="  %29 = xor i32 %28, -2"];
	Node0xfd2970[shape=record, label="  %30 = and i32 %3, %0"];
	Node0xfd29e0[shape=record, label="  %31 = shl i32 %30, 1"];
	Node0xfd2a50[shape=record, label="  %32 = xor i32 %31, -2"];
	Node0xfd2cd0[shape=record, label="  %33 = or i32 %3, %0"];
	Node0xfd2d40[shape=record, label="  %34 = shl i32 %33, 1"];
	Node0xfd2db0[shape=record, label="  %35 = xor i32 %34, -2"];
	Node0xfd2e50[shape=record, label="  %36 = mul i32 %27, 6"];
	Node0xfd2ec0[shape=record, label="  %37 = sub i32 %8, %18"];
	Node0xfd2f60[shape=record, label="  %38 = mul i32 %37, 3"];
	Node0xfd3000[shape=record, label="  %39 = sub i32 5, %0"];
	Node0xfd3070[shape=record, label="  %40 = add i32 %39, %16"];
	Node0xfd30e0[shape=record, label="  %41 = add i32 %40, %17"];
	Node0xfd3150[shape=record, label="  %42 = add i32 %41, %18"];
	Node0xfd31c0[shape=record, label="  %43 = sub i32 %42, %3"];
	Node0xfd3230[shape=record, label="  %44 = add i32 %43, %14"];
	Node0xfd32a0[shape=record, label="  %45 = add i32 %44, %21"];
	Node0xfd3310[shape=record, label="  %46 = add i32 %45, %22"];
	Node0xfd3380[shape=record, label="  %47 = add i32 %46, %30"];
	Node0xfd33f0[shape=record, label="  %48 = add i32 %47, %20"];
	Node0xfd3460[shape=record, label="  %49 = add i32 %48, %26"];
	Node0xfd34d0[shape=record, label="  %50 = add i32 %49, %36"];
	Node0xfd3540[shape=record, label="  %51 = add i32 %50, %24"];
	Node0xfd35b0[shape=record, label="  %52 = add i32 %51, %29"];
	Node0xfd3620[shape=record, label="  %53 = sub i32 %52, %32"];
	Node0xfd3690[shape=record, label="  %54 = sub i32 %53, %35"];
	Node0xfd3700[shape=record, label="  %55 = add i32 %54, %38"];
	Node0xfd3770[shape=record, label="  %56 = icmp eq i32 %10, %55"];
	Node0xf72268[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xfd3c10[shape=record, label="  %58 = tail call i32 @puts(i8* nonnull dereferenceable(1) %57)"];
	Node0xfd3c60[shape=record, label="  ret void"];
	Node0xfd17b0 -> Node0xfd1e30;
	Node0xfd1e30 -> Node0xfd1ea0;
	Node0xfd1ea0 -> Node0xfd1f10;
	Node0xfd1f10 -> Node0xfd1fb0;
	Node0xfd1fb0 -> Node0xfd2020;
	Node0xfd2020 -> Node0xfd2090;
	Node0xfd2090 -> Node0xfd2100;
	Node0xfd2100 -> Node0xfd2170;
	Node0xfd2170 -> Node0xfd2210;
	Node0xfd2210 -> Node0xfd2280;
	Node0xfd2280 -> Node0xfd22f0;
	Node0xfd22f0 -> Node0xfd2360;
	Node0xfd2360 -> Node0xfd23d0;
	Node0xfd23d0 -> Node0xfd2470;
	Node0xfd2470 -> Node0xfd2510;
	Node0xfd2510 -> Node0xfd2580;
	Node0xfd2580 -> Node0xfd25f0;
	Node0xfd25f0 -> Node0xfd2660;
	Node0xfd2660 -> Node0xfd26d0;
	Node0xfd26d0 -> Node0xfd2740;
	Node0xfd2740 -> Node0xfd27b0;
	Node0xfd27b0 -> Node0xfd2820;
	Node0xfd2820 -> Node0xfd2890;
	Node0xfd2890 -> Node0xfd2900;
	Node0xfd2900 -> Node0xfd2970;
	Node0xfd2970 -> Node0xfd29e0;
	Node0xfd29e0 -> Node0xfd2a50;
	Node0xfd2a50 -> Node0xfd2cd0;
	Node0xfd2cd0 -> Node0xfd2d40;
	Node0xfd2d40 -> Node0xfd2db0;
	Node0xfd2db0 -> Node0xfd2e50;
	Node0xfd2e50 -> Node0xfd2ec0;
	Node0xfd2ec0 -> Node0xfd2f60;
	Node0xfd2f60 -> Node0xfd3000;
	Node0xfd3000 -> Node0xfd3070;
	Node0xfd3070 -> Node0xfd30e0;
	Node0xfd30e0 -> Node0xfd3150;
	Node0xfd3150 -> Node0xfd31c0;
	Node0xfd31c0 -> Node0xfd3230;
	Node0xfd3230 -> Node0xfd32a0;
	Node0xfd32a0 -> Node0xfd3310;
	Node0xfd3310 -> Node0xfd3380;
	Node0xfd3380 -> Node0xfd33f0;
	Node0xfd33f0 -> Node0xfd3460;
	Node0xfd3460 -> Node0xfd34d0;
	Node0xfd34d0 -> Node0xfd3540;
	Node0xfd3540 -> Node0xfd35b0;
	Node0xfd35b0 -> Node0xfd3620;
	Node0xfd3620 -> Node0xfd3690;
	Node0xfd3690 -> Node0xfd3700;
	Node0xfd3700 -> Node0xfd3770;
	Node0xfd3770 -> Node0xf72268;
	Node0xf72268 -> Node0xfd3c10;
	Node0xfd3c10 -> Node0xfd3c60;
edge [color=red]
	Node0xfd1e30 -> Node0xfd1ea0;
	Node0xfd17b0 -> Node0xfd1ea0;
	Node0xfd1e30 -> Node0xfd1f10;
	Node0xfd1f10 -> Node0xfd1fb0;
	Node0xfd1ea0 -> Node0xfd2020;
	Node0xfd1fb0 -> Node0xfd2020;
	Node0xfd2100 -> Node0xfd2170;
	Node0xfd2170 -> Node0xfd2210;
	Node0xfd2280 -> Node0xfd22f0;
	Node0xfd2090 -> Node0xfd23d0;
	Node0xfd17b0 -> Node0xfd2470;
	Node0xfd2470 -> Node0xfd2510;
	Node0xfd2280 -> Node0xfd2580;
	Node0xfd25f0 -> Node0xfd2660;
	Node0xfd2660 -> Node0xfd26d0;
	Node0xfd2740 -> Node0xfd27b0;
	Node0xfd1e30 -> Node0xfd2820;
	Node0xfd2820 -> Node0xfd2890;
	Node0xfd2890 -> Node0xfd2900;
	Node0xfd2970 -> Node0xfd29e0;
	Node0xfd29e0 -> Node0xfd2a50;
	Node0xfd2cd0 -> Node0xfd2d40;
	Node0xfd2d40 -> Node0xfd2db0;
	Node0xfd2820 -> Node0xfd2e50;
	Node0xfd1f10 -> Node0xfd2ec0;
	Node0xfd23d0 -> Node0xfd2ec0;
	Node0xfd2ec0 -> Node0xfd2f60;
	Node0xfd3000 -> Node0xfd3070;
	Node0xfd22f0 -> Node0xfd3070;
	Node0xfd3070 -> Node0xfd30e0;
	Node0xfd2360 -> Node0xfd30e0;
	Node0xfd30e0 -> Node0xfd3150;
	Node0xfd23d0 -> Node0xfd3150;
	Node0xfd3150 -> Node0xfd31c0;
	Node0xfd31c0 -> Node0xfd3230;
	Node0xfd2210 -> Node0xfd3230;
	Node0xfd3230 -> Node0xfd32a0;
	Node0xfd2580 -> Node0xfd32a0;
	Node0xfd32a0 -> Node0xfd3310;
	Node0xfd25f0 -> Node0xfd3310;
	Node0xfd3310 -> Node0xfd3380;
	Node0xfd2970 -> Node0xfd3380;
	Node0xfd3380 -> Node0xfd33f0;
	Node0xfd2510 -> Node0xfd33f0;
	Node0xfd33f0 -> Node0xfd3460;
	Node0xfd27b0 -> Node0xfd3460;
	Node0xfd3460 -> Node0xfd34d0;
	Node0xfd2e50 -> Node0xfd34d0;
	Node0xfd34d0 -> Node0xfd3540;
	Node0xfd26d0 -> Node0xfd3540;
	Node0xfd3540 -> Node0xfd35b0;
	Node0xfd2900 -> Node0xfd35b0;
	Node0xfd35b0 -> Node0xfd3620;
	Node0xfd2a50 -> Node0xfd3620;
	Node0xfd3620 -> Node0xfd3690;
	Node0xfd2db0 -> Node0xfd3690;
	Node0xfd3690 -> Node0xfd3700;
	Node0xfd2f60 -> Node0xfd3700;
	Node0xfd2020 -> Node0xfd3770;
	Node0xfd3700 -> Node0xfd3770;
	Node0xfd3770 -> Node0xf72268;
	Node0xf72268 -> Node0xfd3c10;
}
