digraph "DFG for'main' function" {
	Node0xdfabe8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xdfac68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xdfacf8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xdfb158[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xdfb238[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xdfb358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdfb590[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xdfb648[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xdfc5b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xdfcc40[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0xdfccb0[shape=record, label="  %9 = sub i32 1, %8"];
	Node0xdfcd20[shape=record, label="  %10 = or i32 %7, %6"];
	Node0xdfcd90[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0xdfce00[shape=record, label="  %12 = and i32 %6, %11"];
	Node0xdfce70[shape=record, label="  %13 = and i32 %7, %6"];
	Node0xdfcee0[shape=record, label="  %14 = xor i32 %13, -1"];
	Node0xdfcf50[shape=record, label="  %15 = shl i32 %6, 1"];
	Node0xdfcfc0[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0xdfd030[shape=record, label="  %17 = xor i32 %10, -1"];
	Node0xdfd0a0[shape=record, label="  %18 = mul i32 %17, -3"];
	Node0xdfd110[shape=record, label="  %19 = shl i32 %13, 1"];
	Node0xdfd180[shape=record, label="  %20 = mul i32 %8, -5"];
	Node0xdfd1f0[shape=record, label="  %21 = add i32 %6, 1"];
	Node0xdfd260[shape=record, label="  %22 = add i32 %21, %10"];
	Node0xdfd2d0[shape=record, label="  %23 = add i32 %22, %12"];
	Node0xdfd340[shape=record, label="  %24 = add i32 %23, %14"];
	Node0xdfd3b0[shape=record, label="  %25 = add i32 %24, %16"];
	Node0xdfd420[shape=record, label="  %26 = add i32 %25, %18"];
	Node0xdfd490[shape=record, label="  %27 = sub i32 %26, %19"];
	Node0xdfd500[shape=record, label="  %28 = add i32 %27, %20"];
	Node0xdfd570[shape=record, label="  %29 = icmp eq i32 %9, %28"];
	Node0xd9b9d8[shape=record, label="  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xdfd600[shape=record, label="  %31 = call i32 @puts(i8* nonnull dereferenceable(1) %30) #5"];
	Node0xdfd858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xdfd9b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xdfda78[shape=record, label="  ret i32 0"];
	Node0xdfabe8 -> Node0xdfac68;
	Node0xdfac68 -> Node0xdfacf8;
	Node0xdfacf8 -> Node0xdfb158;
	Node0xdfb158 -> Node0xdfb238;
	Node0xdfb238 -> Node0xdfb358;
	Node0xdfb358 -> Node0xdfb590;
	Node0xdfb590 -> Node0xdfb648;
	Node0xdfb648 -> Node0xdfc5b8;
	Node0xdfc5b8 -> Node0xdfcc40;
	Node0xdfcc40 -> Node0xdfccb0;
	Node0xdfccb0 -> Node0xdfcd20;
	Node0xdfcd20 -> Node0xdfcd90;
	Node0xdfcd90 -> Node0xdfce00;
	Node0xdfce00 -> Node0xdfce70;
	Node0xdfce70 -> Node0xdfcee0;
	Node0xdfcee0 -> Node0xdfcf50;
	Node0xdfcf50 -> Node0xdfcfc0;
	Node0xdfcfc0 -> Node0xdfd030;
	Node0xdfd030 -> Node0xdfd0a0;
	Node0xdfd0a0 -> Node0xdfd110;
	Node0xdfd110 -> Node0xdfd180;
	Node0xdfd180 -> Node0xdfd1f0;
	Node0xdfd1f0 -> Node0xdfd260;
	Node0xdfd260 -> Node0xdfd2d0;
	Node0xdfd2d0 -> Node0xdfd340;
	Node0xdfd340 -> Node0xdfd3b0;
	Node0xdfd3b0 -> Node0xdfd420;
	Node0xdfd420 -> Node0xdfd490;
	Node0xdfd490 -> Node0xdfd500;
	Node0xdfd500 -> Node0xdfd570;
	Node0xdfd570 -> Node0xd9b9d8;
	Node0xd9b9d8 -> Node0xdfd600;
	Node0xdfd600 -> Node0xdfd858;
	Node0xdfd858 -> Node0xdfd9b8;
	Node0xdfd9b8 -> Node0xdfda78;
edge [color=red]
	Node0xdfabe8 -> Node0xdfacf8;
	Node0xdfacf8 -> Node0xdfb158;
	Node0xdfac68 -> Node0xdfb238;
	Node0xdfb238 -> Node0xdfb358;
	Node0xdfabe8 -> Node0xdfb590;
	Node0xdfac68 -> Node0xdfb590;
	Node0xdfabe8 -> Node0xdfb648;
	Node0xdfac68 -> Node0xdfc5b8;
	Node0xdfc5b8 -> Node0xdfcc40;
	Node0xdfb648 -> Node0xdfcc40;
	Node0xdfcc40 -> Node0xdfccb0;
	Node0xdfc5b8 -> Node0xdfcd20;
	Node0xdfb648 -> Node0xdfcd20;
	Node0xdfc5b8 -> Node0xdfcd90;
	Node0xdfb648 -> Node0xdfce00;
	Node0xdfcd90 -> Node0xdfce00;
	Node0xdfc5b8 -> Node0xdfce70;
	Node0xdfb648 -> Node0xdfce70;
	Node0xdfce70 -> Node0xdfcee0;
	Node0xdfb648 -> Node0xdfcf50;
	Node0xdfcf50 -> Node0xdfcfc0;
	Node0xdfcd20 -> Node0xdfd030;
	Node0xdfd030 -> Node0xdfd0a0;
	Node0xdfce70 -> Node0xdfd110;
	Node0xdfcc40 -> Node0xdfd180;
	Node0xdfb648 -> Node0xdfd1f0;
	Node0xdfd1f0 -> Node0xdfd260;
	Node0xdfcd20 -> Node0xdfd260;
	Node0xdfd260 -> Node0xdfd2d0;
	Node0xdfce00 -> Node0xdfd2d0;
	Node0xdfd2d0 -> Node0xdfd340;
	Node0xdfcee0 -> Node0xdfd340;
	Node0xdfd340 -> Node0xdfd3b0;
	Node0xdfcfc0 -> Node0xdfd3b0;
	Node0xdfd3b0 -> Node0xdfd420;
	Node0xdfd0a0 -> Node0xdfd420;
	Node0xdfd420 -> Node0xdfd490;
	Node0xdfd110 -> Node0xdfd490;
	Node0xdfd490 -> Node0xdfd500;
	Node0xdfd180 -> Node0xdfd500;
	Node0xdfccb0 -> Node0xdfd570;
	Node0xdfd500 -> Node0xdfd570;
	Node0xdfd570 -> Node0xd9b9d8;
	Node0xd9b9d8 -> Node0xdfd600;
	Node0xdfb238 -> Node0xdfd858;
	Node0xdfacf8 -> Node0xdfd9b8;
}
