digraph "DFG for'main' function" {
	Node0x1ab2888[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1ab2908[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1ab2998[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1ab2df8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ab2ed8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1ab2ff8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ab3230[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1ab32e8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1ab4258[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1ab48e0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1ab4950[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1ab49c0[shape=record, label="  %10 = xor i32 %9, -1"];
	Node0x1ab4a30[shape=record, label="  %11 = or i32 %7, %6"];
	Node0x1ab4aa0[shape=record, label="  %12 = and i32 %6, %8"];
	Node0x1ab4b10[shape=record, label="  %13 = xor i32 %6, %8"];
	Node0x1ab4b80[shape=record, label="  %14 = shl i32 %11, 1"];
	Node0x1ab4bf0[shape=record, label="  %15 = xor i32 %14, -2"];
	Node0x1ab4c60[shape=record, label="  %16 = shl i32 %12, 1"];
	Node0x1ab4cd0[shape=record, label="  %17 = mul i32 %6, -3"];
	Node0x1ab4d40[shape=record, label="  %18 = add i32 %17, %7"];
	Node0x1ab4db0[shape=record, label="  %19 = add i32 %18, %13"];
	Node0x1ab4e20[shape=record, label="  %20 = add i32 %19, %9"];
	Node0x1ab4e90[shape=record, label="  %21 = add i32 %20, %16"];
	Node0x1ab4f00[shape=record, label="  %22 = sub i32 %21, %15"];
	Node0x1ab4f70[shape=record, label="  %23 = icmp eq i32 %22, %10"];
	Node0x1a539d8[shape=record, label="  %24 = select i1 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ab5000[shape=record, label="  %25 = call i32 @puts(i8* nonnull dereferenceable(1) %24) #5"];
	Node0x1ab5258[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1ab53b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1ab5478[shape=record, label="  ret i32 0"];
	Node0x1ab2888 -> Node0x1ab2908;
	Node0x1ab2908 -> Node0x1ab2998;
	Node0x1ab2998 -> Node0x1ab2df8;
	Node0x1ab2df8 -> Node0x1ab2ed8;
	Node0x1ab2ed8 -> Node0x1ab2ff8;
	Node0x1ab2ff8 -> Node0x1ab3230;
	Node0x1ab3230 -> Node0x1ab32e8;
	Node0x1ab32e8 -> Node0x1ab4258;
	Node0x1ab4258 -> Node0x1ab48e0;
	Node0x1ab48e0 -> Node0x1ab4950;
	Node0x1ab4950 -> Node0x1ab49c0;
	Node0x1ab49c0 -> Node0x1ab4a30;
	Node0x1ab4a30 -> Node0x1ab4aa0;
	Node0x1ab4aa0 -> Node0x1ab4b10;
	Node0x1ab4b10 -> Node0x1ab4b80;
	Node0x1ab4b80 -> Node0x1ab4bf0;
	Node0x1ab4bf0 -> Node0x1ab4c60;
	Node0x1ab4c60 -> Node0x1ab4cd0;
	Node0x1ab4cd0 -> Node0x1ab4d40;
	Node0x1ab4d40 -> Node0x1ab4db0;
	Node0x1ab4db0 -> Node0x1ab4e20;
	Node0x1ab4e20 -> Node0x1ab4e90;
	Node0x1ab4e90 -> Node0x1ab4f00;
	Node0x1ab4f00 -> Node0x1ab4f70;
	Node0x1ab4f70 -> Node0x1a539d8;
	Node0x1a539d8 -> Node0x1ab5000;
	Node0x1ab5000 -> Node0x1ab5258;
	Node0x1ab5258 -> Node0x1ab53b8;
	Node0x1ab53b8 -> Node0x1ab5478;
edge [color=red]
	Node0x1ab2888 -> Node0x1ab2998;
	Node0x1ab2998 -> Node0x1ab2df8;
	Node0x1ab2908 -> Node0x1ab2ed8;
	Node0x1ab2ed8 -> Node0x1ab2ff8;
	Node0x1ab2888 -> Node0x1ab3230;
	Node0x1ab2908 -> Node0x1ab3230;
	Node0x1ab2888 -> Node0x1ab32e8;
	Node0x1ab2908 -> Node0x1ab4258;
	Node0x1ab4258 -> Node0x1ab48e0;
	Node0x1ab32e8 -> Node0x1ab4950;
	Node0x1ab48e0 -> Node0x1ab4950;
	Node0x1ab4950 -> Node0x1ab49c0;
	Node0x1ab4258 -> Node0x1ab4a30;
	Node0x1ab32e8 -> Node0x1ab4a30;
	Node0x1ab32e8 -> Node0x1ab4aa0;
	Node0x1ab48e0 -> Node0x1ab4aa0;
	Node0x1ab32e8 -> Node0x1ab4b10;
	Node0x1ab48e0 -> Node0x1ab4b10;
	Node0x1ab4a30 -> Node0x1ab4b80;
	Node0x1ab4b80 -> Node0x1ab4bf0;
	Node0x1ab4aa0 -> Node0x1ab4c60;
	Node0x1ab32e8 -> Node0x1ab4cd0;
	Node0x1ab4cd0 -> Node0x1ab4d40;
	Node0x1ab4258 -> Node0x1ab4d40;
	Node0x1ab4d40 -> Node0x1ab4db0;
	Node0x1ab4b10 -> Node0x1ab4db0;
	Node0x1ab4db0 -> Node0x1ab4e20;
	Node0x1ab4950 -> Node0x1ab4e20;
	Node0x1ab4e20 -> Node0x1ab4e90;
	Node0x1ab4c60 -> Node0x1ab4e90;
	Node0x1ab4e90 -> Node0x1ab4f00;
	Node0x1ab4bf0 -> Node0x1ab4f00;
	Node0x1ab4f00 -> Node0x1ab4f70;
	Node0x1ab49c0 -> Node0x1ab4f70;
	Node0x1ab4f70 -> Node0x1a539d8;
	Node0x1a539d8 -> Node0x1ab5000;
	Node0x1ab2ed8 -> Node0x1ab5258;
	Node0x1ab2998 -> Node0x1ab53b8;
}
