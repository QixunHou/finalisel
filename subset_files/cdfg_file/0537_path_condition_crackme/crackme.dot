digraph "DFG for'crackme' function" {
	Node0x1ab1a20[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x1ab1a90[shape=record, label="  %4 = or i32 %3, %0"];
	Node0x1ab1b50[shape=record, label="  %5 = xor i32 %4, -1"];
	Node0x1ab1bc0[shape=record, label="  %6 = or i32 %1, %0"];
	Node0x1ab1c30[shape=record, label="  %7 = and i32 %3, %0"];
	Node0x1ab1ca0[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0x1ab1d10[shape=record, label="  %9 = xor i32 %8, %1"];
	Node0x1ab1d80[shape=record, label="  %10 = shl i32 %6, 1"];
	Node0x1ab1e20[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x1ab1e90[shape=record, label="  %12 = shl i32 %7, 1"];
	Node0x1ab1f30[shape=record, label="  %13 = mul i32 %0, -3"];
	Node0x1ab1fa0[shape=record, label="  %14 = add i32 %13, %1"];
	Node0x1ab2010[shape=record, label="  %15 = add i32 %14, %9"];
	Node0x1ab2080[shape=record, label="  %16 = add i32 %15, %4"];
	Node0x1ab20f0[shape=record, label="  %17 = add i32 %16, %12"];
	Node0x1ab2160[shape=record, label="  %18 = sub i32 %17, %11"];
	Node0x1ab21d0[shape=record, label="  %19 = icmp eq i32 %18, %5"];
	Node0x1a52268[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1ab2670[shape=record, label="  %21 = tail call i32 @puts(i8* nonnull dereferenceable(1) %20)"];
	Node0x1ab26c0[shape=record, label="  ret void"];
	Node0x1ab1a20 -> Node0x1ab1a90;
	Node0x1ab1a90 -> Node0x1ab1b50;
	Node0x1ab1b50 -> Node0x1ab1bc0;
	Node0x1ab1bc0 -> Node0x1ab1c30;
	Node0x1ab1c30 -> Node0x1ab1ca0;
	Node0x1ab1ca0 -> Node0x1ab1d10;
	Node0x1ab1d10 -> Node0x1ab1d80;
	Node0x1ab1d80 -> Node0x1ab1e20;
	Node0x1ab1e20 -> Node0x1ab1e90;
	Node0x1ab1e90 -> Node0x1ab1f30;
	Node0x1ab1f30 -> Node0x1ab1fa0;
	Node0x1ab1fa0 -> Node0x1ab2010;
	Node0x1ab2010 -> Node0x1ab2080;
	Node0x1ab2080 -> Node0x1ab20f0;
	Node0x1ab20f0 -> Node0x1ab2160;
	Node0x1ab2160 -> Node0x1ab21d0;
	Node0x1ab21d0 -> Node0x1a52268;
	Node0x1a52268 -> Node0x1ab2670;
	Node0x1ab2670 -> Node0x1ab26c0;
edge [color=red]
	Node0x1ab1a20 -> Node0x1ab1a90;
	Node0x1ab1a90 -> Node0x1ab1b50;
	Node0x1ab1a20 -> Node0x1ab1c30;
	Node0x1ab1ca0 -> Node0x1ab1d10;
	Node0x1ab1bc0 -> Node0x1ab1d80;
	Node0x1ab1d80 -> Node0x1ab1e20;
	Node0x1ab1c30 -> Node0x1ab1e90;
	Node0x1ab1f30 -> Node0x1ab1fa0;
	Node0x1ab1fa0 -> Node0x1ab2010;
	Node0x1ab1d10 -> Node0x1ab2010;
	Node0x1ab2010 -> Node0x1ab2080;
	Node0x1ab1a90 -> Node0x1ab2080;
	Node0x1ab2080 -> Node0x1ab20f0;
	Node0x1ab1e90 -> Node0x1ab20f0;
	Node0x1ab20f0 -> Node0x1ab2160;
	Node0x1ab1e20 -> Node0x1ab2160;
	Node0x1ab2160 -> Node0x1ab21d0;
	Node0x1ab1b50 -> Node0x1ab21d0;
	Node0x1ab21d0 -> Node0x1a52268;
	Node0x1a52268 -> Node0x1ab2670;
}
