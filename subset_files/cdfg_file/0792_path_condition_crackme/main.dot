digraph "DFG for'main' function" {
	Node0x19c8488[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x19c8508[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x19c8598[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x19c85f8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x19c8a78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19c8b58[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x19c8c58[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19c8d18[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x19c8dc8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19c9028[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x19c90e8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x19c9248[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x19c92a8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x19cb170[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x19cb378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x19cb4d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x19cb5e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x19cb6a8[shape=record, label="  ret i32 0"];
	Node0x19c8488 -> Node0x19c8508;
	Node0x19c8508 -> Node0x19c8598;
	Node0x19c8598 -> Node0x19c85f8;
	Node0x19c85f8 -> Node0x19c8a78;
	Node0x19c8a78 -> Node0x19c8b58;
	Node0x19c8b58 -> Node0x19c8c58;
	Node0x19c8c58 -> Node0x19c8d18;
	Node0x19c8d18 -> Node0x19c8dc8;
	Node0x19c8dc8 -> Node0x19c9028;
	Node0x19c9028 -> Node0x19c90e8;
	Node0x19c90e8 -> Node0x19c9248;
	Node0x19c9248 -> Node0x19c92a8;
	Node0x19c92a8 -> Node0x19cb170;
	Node0x19cb170 -> Node0x19cb378;
	Node0x19cb378 -> Node0x19cb4d8;
	Node0x19cb4d8 -> Node0x19cb5e8;
	Node0x19cb5e8 -> Node0x19cb6a8;
edge [color=red]
	Node0x19c8488 -> Node0x19c85f8;
	Node0x19c85f8 -> Node0x19c8a78;
	Node0x19c8508 -> Node0x19c8b58;
	Node0x19c8b58 -> Node0x19c8c58;
	Node0x19c8598 -> Node0x19c8d18;
	Node0x19c8d18 -> Node0x19c8dc8;
	Node0x19c8488 -> Node0x19c9028;
	Node0x19c8508 -> Node0x19c9028;
	Node0x19c8598 -> Node0x19c9028;
	Node0x19c8488 -> Node0x19c90e8;
	Node0x19c8508 -> Node0x19c9248;
	Node0x19c8598 -> Node0x19c92a8;
	Node0x19c90e8 -> Node0x19cb170;
	Node0x19c9248 -> Node0x19cb170;
	Node0x19c92a8 -> Node0x19cb170;
	Node0x19c8d18 -> Node0x19cb378;
	Node0x19c8b58 -> Node0x19cb4d8;
	Node0x19c85f8 -> Node0x19cb5e8;
}
