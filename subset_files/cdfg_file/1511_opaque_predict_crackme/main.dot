digraph "DFG for'main' function" {
	Node0xbab7a8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xbab828[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xbab8b8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xbab918[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xbabd98[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xbabe78[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xbabf78[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xbac038[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xbac0e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xbac348[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xbac408[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xbac568[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xbac5c8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xbaf530[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xbaf738[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xbaf898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xbaf9a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xbafa68[shape=record, label="  ret i32 0"];
	Node0xbab7a8 -> Node0xbab828;
	Node0xbab828 -> Node0xbab8b8;
	Node0xbab8b8 -> Node0xbab918;
	Node0xbab918 -> Node0xbabd98;
	Node0xbabd98 -> Node0xbabe78;
	Node0xbabe78 -> Node0xbabf78;
	Node0xbabf78 -> Node0xbac038;
	Node0xbac038 -> Node0xbac0e8;
	Node0xbac0e8 -> Node0xbac348;
	Node0xbac348 -> Node0xbac408;
	Node0xbac408 -> Node0xbac568;
	Node0xbac568 -> Node0xbac5c8;
	Node0xbac5c8 -> Node0xbaf530;
	Node0xbaf530 -> Node0xbaf738;
	Node0xbaf738 -> Node0xbaf898;
	Node0xbaf898 -> Node0xbaf9a8;
	Node0xbaf9a8 -> Node0xbafa68;
edge [color=red]
	Node0xbab7a8 -> Node0xbab918;
	Node0xbab918 -> Node0xbabd98;
	Node0xbab828 -> Node0xbabe78;
	Node0xbabe78 -> Node0xbabf78;
	Node0xbab8b8 -> Node0xbac038;
	Node0xbac038 -> Node0xbac0e8;
	Node0xbab7a8 -> Node0xbac348;
	Node0xbab828 -> Node0xbac348;
	Node0xbab8b8 -> Node0xbac348;
	Node0xbab7a8 -> Node0xbac408;
	Node0xbab828 -> Node0xbac568;
	Node0xbab8b8 -> Node0xbac5c8;
	Node0xbac408 -> Node0xbaf530;
	Node0xbac568 -> Node0xbaf530;
	Node0xbac5c8 -> Node0xbaf530;
	Node0xbac038 -> Node0xbaf738;
	Node0xbabe78 -> Node0xbaf898;
	Node0xbab918 -> Node0xbaf9a8;
}
