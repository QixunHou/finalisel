digraph "DFG for'crackme' function" {
	Node0x18ba710[shape=record, label="  %5 = and i32 %2, %1"];
	Node0x18bad90[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x18bae30[shape=record, label="  %7 = xor i32 %6, -2"];
	Node0x18baea0[shape=record, label="  %8 = shl i32 %0, 1"];
	Node0x18baf10[shape=record, label="  %9 = add i32 %7, %8"];
	Node0x18bafb0[shape=record, label="  %10 = xor i32 %2, -1"];
	Node0x18bb020[shape=record, label="  %11 = or i32 %10, %1"];
	Node0x18bb090[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0x18bb100[shape=record, label="  %13 = or i32 %12, 1"];
	Node0x18bb170[shape=record, label="  %14 = or i32 %2, %1"];
	Node0x18bb1e0[shape=record, label="  %15 = add i32 %2, 1"];
	Node0x18bb250[shape=record, label="  %16 = xor i32 %2, %1"];
	Node0x18bb2c0[shape=record, label="  %17 = and i32 %10, %1"];
	Node0x18bb360[shape=record, label="  %18 = shl i32 %14, 2"];
	Node0x18bb400[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0x18bb470[shape=record, label="  %20 = shl i32 %11, 2"];
	Node0x18bb4e0[shape=record, label="  %21 = xor i32 %20, -4"];
	Node0x18bb550[shape=record, label="  %22 = xor i32 %3, -1"];
	Node0x18bb5c0[shape=record, label="  %23 = xor i32 %0, -1"];
	Node0x18bb630[shape=record, label="  %24 = and i32 %23, %3"];
	Node0x18bb6a0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x18bb710[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x18bb780[shape=record, label="  %27 = or i32 %23, %3"];
	Node0x18bb7f0[shape=record, label="  %28 = xor i32 %3, %0"];
	Node0x18bb860[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0x18bb8d0[shape=record, label="  %30 = xor i32 %29, -2"];
	Node0x18bb940[shape=record, label="  %31 = add i32 %24, %17"];
	Node0x18bb9b0[shape=record, label="  %32 = add i32 %31, %26"];
	Node0x18bbc30[shape=record, label="  %33 = shl i32 %32, 1"];
	Node0x18bbcd0[shape=record, label="  %34 = add i32 %0, 5"];
	Node0x18bbd40[shape=record, label="  %35 = add i32 %34, %1"];
	Node0x18bbdb0[shape=record, label="  %36 = add i32 %35, %2"];
	Node0x18bbe20[shape=record, label="  %37 = add i32 %36, %15"];
	Node0x18bbe90[shape=record, label="  %38 = sub i32 %37, %14"];
	Node0x18bbf00[shape=record, label="  %39 = add i32 %38, %16"];
	Node0x18bbf70[shape=record, label="  %40 = add i32 %39, %17"];
	Node0x18bbfe0[shape=record, label="  %41 = add i32 %40, %22"];
	Node0x18bc050[shape=record, label="  %42 = add i32 %41, %25"];
	Node0x18bc0c0[shape=record, label="  %43 = sub i32 %42, %27"];
	Node0x18bc130[shape=record, label="  %44 = add i32 %43, %13"];
	Node0x18bc1a0[shape=record, label="  %45 = add i32 %44, %19"];
	Node0x18bc210[shape=record, label="  %46 = add i32 %45, %21"];
	Node0x18bc280[shape=record, label="  %47 = add i32 %46, %30"];
	Node0x18bc2f0[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x18bc360[shape=record, label="  %49 = icmp eq i32 %9, %48"];
	Node0x185b268[shape=record, label="  %50 = select i1 %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x18bc800[shape=record, label="  %51 = tail call i32 @puts(i8* nonnull dereferenceable(1) %50)"];
	Node0x18bc850[shape=record, label="  ret void"];
	Node0x18ba710 -> Node0x18bad90;
	Node0x18bad90 -> Node0x18bae30;
	Node0x18bae30 -> Node0x18baea0;
	Node0x18baea0 -> Node0x18baf10;
	Node0x18baf10 -> Node0x18bafb0;
	Node0x18bafb0 -> Node0x18bb020;
	Node0x18bb020 -> Node0x18bb090;
	Node0x18bb090 -> Node0x18bb100;
	Node0x18bb100 -> Node0x18bb170;
	Node0x18bb170 -> Node0x18bb1e0;
	Node0x18bb1e0 -> Node0x18bb250;
	Node0x18bb250 -> Node0x18bb2c0;
	Node0x18bb2c0 -> Node0x18bb360;
	Node0x18bb360 -> Node0x18bb400;
	Node0x18bb400 -> Node0x18bb470;
	Node0x18bb470 -> Node0x18bb4e0;
	Node0x18bb4e0 -> Node0x18bb550;
	Node0x18bb550 -> Node0x18bb5c0;
	Node0x18bb5c0 -> Node0x18bb630;
	Node0x18bb630 -> Node0x18bb6a0;
	Node0x18bb6a0 -> Node0x18bb710;
	Node0x18bb710 -> Node0x18bb780;
	Node0x18bb780 -> Node0x18bb7f0;
	Node0x18bb7f0 -> Node0x18bb860;
	Node0x18bb860 -> Node0x18bb8d0;
	Node0x18bb8d0 -> Node0x18bb940;
	Node0x18bb940 -> Node0x18bb9b0;
	Node0x18bb9b0 -> Node0x18bbc30;
	Node0x18bbc30 -> Node0x18bbcd0;
	Node0x18bbcd0 -> Node0x18bbd40;
	Node0x18bbd40 -> Node0x18bbdb0;
	Node0x18bbdb0 -> Node0x18bbe20;
	Node0x18bbe20 -> Node0x18bbe90;
	Node0x18bbe90 -> Node0x18bbf00;
	Node0x18bbf00 -> Node0x18bbf70;
	Node0x18bbf70 -> Node0x18bbfe0;
	Node0x18bbfe0 -> Node0x18bc050;
	Node0x18bc050 -> Node0x18bc0c0;
	Node0x18bc0c0 -> Node0x18bc130;
	Node0x18bc130 -> Node0x18bc1a0;
	Node0x18bc1a0 -> Node0x18bc210;
	Node0x18bc210 -> Node0x18bc280;
	Node0x18bc280 -> Node0x18bc2f0;
	Node0x18bc2f0 -> Node0x18bc360;
	Node0x18bc360 -> Node0x185b268;
	Node0x185b268 -> Node0x18bc800;
	Node0x18bc800 -> Node0x18bc850;
edge [color=red]
	Node0x18ba710 -> Node0x18bad90;
	Node0x18bad90 -> Node0x18bae30;
	Node0x18bae30 -> Node0x18baf10;
	Node0x18baea0 -> Node0x18baf10;
	Node0x18bafb0 -> Node0x18bb020;
	Node0x18bb020 -> Node0x18bb090;
	Node0x18bb090 -> Node0x18bb100;
	Node0x18bafb0 -> Node0x18bb2c0;
	Node0x18bb170 -> Node0x18bb360;
	Node0x18bb360 -> Node0x18bb400;
	Node0x18bb020 -> Node0x18bb470;
	Node0x18bb470 -> Node0x18bb4e0;
	Node0x18bb5c0 -> Node0x18bb630;
	Node0x18bb630 -> Node0x18bb6a0;
	Node0x18bb5c0 -> Node0x18bb780;
	Node0x18bb7f0 -> Node0x18bb860;
	Node0x18bb860 -> Node0x18bb8d0;
	Node0x18bb630 -> Node0x18bb940;
	Node0x18bb2c0 -> Node0x18bb940;
	Node0x18bb940 -> Node0x18bb9b0;
	Node0x18bb710 -> Node0x18bb9b0;
	Node0x18bb9b0 -> Node0x18bbc30;
	Node0x18bbcd0 -> Node0x18bbd40;
	Node0x18bbd40 -> Node0x18bbdb0;
	Node0x18bbdb0 -> Node0x18bbe20;
	Node0x18bb1e0 -> Node0x18bbe20;
	Node0x18bbe20 -> Node0x18bbe90;
	Node0x18bb170 -> Node0x18bbe90;
	Node0x18bbe90 -> Node0x18bbf00;
	Node0x18bb250 -> Node0x18bbf00;
	Node0x18bbf00 -> Node0x18bbf70;
	Node0x18bb2c0 -> Node0x18bbf70;
	Node0x18bbf70 -> Node0x18bbfe0;
	Node0x18bb550 -> Node0x18bbfe0;
	Node0x18bbfe0 -> Node0x18bc050;
	Node0x18bb6a0 -> Node0x18bc050;
	Node0x18bc050 -> Node0x18bc0c0;
	Node0x18bb780 -> Node0x18bc0c0;
	Node0x18bc0c0 -> Node0x18bc130;
	Node0x18bb100 -> Node0x18bc130;
	Node0x18bc130 -> Node0x18bc1a0;
	Node0x18bb400 -> Node0x18bc1a0;
	Node0x18bc1a0 -> Node0x18bc210;
	Node0x18bb4e0 -> Node0x18bc210;
	Node0x18bc210 -> Node0x18bc280;
	Node0x18bb8d0 -> Node0x18bc280;
	Node0x18bc280 -> Node0x18bc2f0;
	Node0x18bbc30 -> Node0x18bc2f0;
	Node0x18baf10 -> Node0x18bc360;
	Node0x18bc2f0 -> Node0x18bc360;
	Node0x18bc360 -> Node0x185b268;
	Node0x185b268 -> Node0x18bc800;
}
