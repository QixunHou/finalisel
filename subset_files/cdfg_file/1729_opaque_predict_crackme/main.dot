digraph "DFG for'main' function" {
	Node0x2414e98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x2414f18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x2414fa8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x2415408[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24154e8[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x2415608[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2415840[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x24158f8[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x2416868[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2416ef0[shape=record, label="  %8 = xor i32 %7, %6"];
	Node0x2416f60[shape=record, label="  %9 = shl i32 %8, 1"];
	Node0x2416fd0[shape=record, label="  %10 = sub i32 %9, %6"];
	Node0x2417040[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0x24170b0[shape=record, label="  %12 = or i32 %6, %11"];
	Node0x2417120[shape=record, label="  %13 = mul i32 %12, -2"];
	Node0x2417190[shape=record, label="  %14 = xor i32 %9, -2"];
	Node0x2417200[shape=record, label="  %15 = sub i32 %13, %14"];
	Node0x2417270[shape=record, label="  %16 = or i32 %15, 1"];
	Node0x24172e0[shape=record, label="  %17 = and i32 %7, %6"];
	Node0x2417350[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x24173c0[shape=record, label="  %19 = xor i32 %18, -2"];
	Node0x2417430[shape=record, label="  %20 = or i32 %7, %6"];
	Node0x24174a0[shape=record, label="  %21 = xor i32 %20, -1"];
	Node0x2417510[shape=record, label="  %22 = xor i32 %12, -1"];
	Node0x2417580[shape=record, label="  %23 = and i32 %6, %11"];
	Node0x24175f0[shape=record, label="  %24 = add i32 %23, %22"];
	Node0x2417660[shape=record, label="  %25 = mul i32 %24, 3"];
	Node0x24176d0[shape=record, label="  %26 = add i32 %17, %21"];
	Node0x2417740[shape=record, label="  %27 = mul i32 %26, 5"];
	Node0x24177b0[shape=record, label="  %28 = add i32 %6, 2"];
	Node0x2417820[shape=record, label="  %29 = add i32 %28, %19"];
	Node0x2417890[shape=record, label="  %30 = add i32 %29, %25"];
	Node0x2417900[shape=record, label="  %31 = add i32 %30, %27"];
	Node0x2417970[shape=record, label="  %32 = add i32 %31, %16"];
	Node0x2417bf0[shape=record, label="  %33 = icmp eq i32 %10, %32"];
	Node0x23b59d8[shape=record, label="  %34 = select i1 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2417c80[shape=record, label="  %35 = call i32 @puts(i8* nonnull dereferenceable(1) %34) #5"];
	Node0x2417ed8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2418038[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x24180f8[shape=record, label="  ret i32 0"];
	Node0x2414e98 -> Node0x2414f18;
	Node0x2414f18 -> Node0x2414fa8;
	Node0x2414fa8 -> Node0x2415408;
	Node0x2415408 -> Node0x24154e8;
	Node0x24154e8 -> Node0x2415608;
	Node0x2415608 -> Node0x2415840;
	Node0x2415840 -> Node0x24158f8;
	Node0x24158f8 -> Node0x2416868;
	Node0x2416868 -> Node0x2416ef0;
	Node0x2416ef0 -> Node0x2416f60;
	Node0x2416f60 -> Node0x2416fd0;
	Node0x2416fd0 -> Node0x2417040;
	Node0x2417040 -> Node0x24170b0;
	Node0x24170b0 -> Node0x2417120;
	Node0x2417120 -> Node0x2417190;
	Node0x2417190 -> Node0x2417200;
	Node0x2417200 -> Node0x2417270;
	Node0x2417270 -> Node0x24172e0;
	Node0x24172e0 -> Node0x2417350;
	Node0x2417350 -> Node0x24173c0;
	Node0x24173c0 -> Node0x2417430;
	Node0x2417430 -> Node0x24174a0;
	Node0x24174a0 -> Node0x2417510;
	Node0x2417510 -> Node0x2417580;
	Node0x2417580 -> Node0x24175f0;
	Node0x24175f0 -> Node0x2417660;
	Node0x2417660 -> Node0x24176d0;
	Node0x24176d0 -> Node0x2417740;
	Node0x2417740 -> Node0x24177b0;
	Node0x24177b0 -> Node0x2417820;
	Node0x2417820 -> Node0x2417890;
	Node0x2417890 -> Node0x2417900;
	Node0x2417900 -> Node0x2417970;
	Node0x2417970 -> Node0x2417bf0;
	Node0x2417bf0 -> Node0x23b59d8;
	Node0x23b59d8 -> Node0x2417c80;
	Node0x2417c80 -> Node0x2417ed8;
	Node0x2417ed8 -> Node0x2418038;
	Node0x2418038 -> Node0x24180f8;
edge [color=red]
	Node0x2414e98 -> Node0x2414fa8;
	Node0x2414fa8 -> Node0x2415408;
	Node0x2414f18 -> Node0x24154e8;
	Node0x24154e8 -> Node0x2415608;
	Node0x2414e98 -> Node0x2415840;
	Node0x2414f18 -> Node0x2415840;
	Node0x2414e98 -> Node0x24158f8;
	Node0x2414f18 -> Node0x2416868;
	Node0x2416868 -> Node0x2416ef0;
	Node0x24158f8 -> Node0x2416ef0;
	Node0x2416ef0 -> Node0x2416f60;
	Node0x2416f60 -> Node0x2416fd0;
	Node0x24158f8 -> Node0x2416fd0;
	Node0x2416868 -> Node0x2417040;
	Node0x24158f8 -> Node0x24170b0;
	Node0x2417040 -> Node0x24170b0;
	Node0x24170b0 -> Node0x2417120;
	Node0x2416f60 -> Node0x2417190;
	Node0x2417120 -> Node0x2417200;
	Node0x2417190 -> Node0x2417200;
	Node0x2417200 -> Node0x2417270;
	Node0x2416868 -> Node0x24172e0;
	Node0x24158f8 -> Node0x24172e0;
	Node0x24172e0 -> Node0x2417350;
	Node0x2417350 -> Node0x24173c0;
	Node0x2416868 -> Node0x2417430;
	Node0x24158f8 -> Node0x2417430;
	Node0x2417430 -> Node0x24174a0;
	Node0x24170b0 -> Node0x2417510;
	Node0x24158f8 -> Node0x2417580;
	Node0x2417040 -> Node0x2417580;
	Node0x2417580 -> Node0x24175f0;
	Node0x2417510 -> Node0x24175f0;
	Node0x24175f0 -> Node0x2417660;
	Node0x24172e0 -> Node0x24176d0;
	Node0x24174a0 -> Node0x24176d0;
	Node0x24176d0 -> Node0x2417740;
	Node0x24158f8 -> Node0x24177b0;
	Node0x24177b0 -> Node0x2417820;
	Node0x24173c0 -> Node0x2417820;
	Node0x2417820 -> Node0x2417890;
	Node0x2417660 -> Node0x2417890;
	Node0x2417890 -> Node0x2417900;
	Node0x2417740 -> Node0x2417900;
	Node0x2417900 -> Node0x2417970;
	Node0x2417270 -> Node0x2417970;
	Node0x2416fd0 -> Node0x2417bf0;
	Node0x2417970 -> Node0x2417bf0;
	Node0x2417bf0 -> Node0x23b59d8;
	Node0x23b59d8 -> Node0x2417c80;
	Node0x24154e8 -> Node0x2417ed8;
	Node0x2414fa8 -> Node0x2418038;
}
