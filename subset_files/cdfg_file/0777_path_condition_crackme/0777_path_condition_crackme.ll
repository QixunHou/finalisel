; ModuleID = '../.././c_source_file/0777_path_condition_crackme.c'
source_filename = "../.././c_source_file/0777_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = and i32 %2, %1
  %8 = and i32 %7, %0
  %9 = or i32 %2, %1
  %10 = xor i32 %9, %0
  %11 = or i32 %8, %10
  %12 = mul i32 %11, -2
  %13 = xor i32 %0, -1
  %14 = xor i32 %2, -1
  %15 = or i32 %14, %1
  %16 = and i32 %15, %13
  %17 = add i32 %12, %16
  %18 = xor i32 %5, %3
  %19 = or i32 %18, %4
  %20 = sub i32 %17, %19
  %21 = xor i32 %1, -1
  %22 = and i32 %21, %2
  %23 = and i32 %22, %0
  %24 = xor i32 %2, %1
  %25 = xor i32 %24, %0
  %26 = or i32 %23, %25
  %27 = and i32 %21, %0
  %28 = xor i32 %27, -1
  %29 = xor i32 %2, %0
  %30 = and i32 %29, %28
  %31 = and i32 %15, %0
  %32 = or i32 %21, %0
  %33 = and i32 %22, %13
  %34 = or i32 %21, %2
  %35 = and i32 %34, %0
  %36 = or i32 %33, %35
  %37 = xor i32 %34, %0
  %38 = xor i32 %23, -1
  %39 = xor i32 %37, %38
  %40 = and i32 %1, %0
  %41 = xor i32 %40, -1
  %42 = and i32 %41, %2
  %43 = xor i32 %7, -1
  %44 = and i32 %43, %0
  %45 = and i32 %14, %0
  %46 = xor i32 %35, -1
  %47 = xor i32 %33, %46
  %48 = xor i32 %1, %0
  %49 = or i32 %48, %14
  %50 = or i32 %1, %0
  %51 = xor i32 %50, -1
  %52 = or i32 %14, %51
  %53 = and i32 %50, %2
  %54 = and i32 %7, %13
  %55 = and i32 %9, %0
  %56 = or i32 %54, %55
  %57 = xor i32 %24, -1
  %58 = or i32 %27, %57
  %59 = shl i32 %58, 1
  %60 = xor i32 %15, %40
  %61 = xor i32 %48, -1
  %62 = or i32 %29, %61
  %63 = shl i32 %62, 1
  %64 = xor i32 %29, -1
  %65 = and i32 %50, %64
  %66 = and i32 %14, %1
  %67 = or i32 %66, %13
  %68 = or i32 %57, %13
  %69 = xor i32 %27, %43
  %70 = and i32 %64, %61
  %71 = xor i32 %32, %2
  %72 = shl i32 %71, 1
  %73 = and i32 %2, %0
  %74 = or i32 %73, %66
  %75 = and i32 %24, %0
  %76 = xor i32 %54, -1
  %77 = xor i32 %75, %76
  %78 = xor i32 %50, %2
  %79 = shl i32 %78, 1
  %80 = or i32 %29, %51
  %81 = or i32 %24, %13
  %82 = xor i32 %32, -1
  %83 = or i32 %57, %82
  %84 = xor i32 %25, %38
  %85 = xor i32 %73, %9
  %86 = shl i32 %85, 1
  %87 = and i32 %61, %2
  %88 = xor i32 %81, -1
  %89 = or i32 %33, %88
  %90 = or i32 %57, %51
  %91 = xor i32 %73, %32
  %92 = xor i32 %73, -1
  %93 = xor i32 %92, %1
  %94 = and i32 %64, %28
  %95 = shl i32 %94, 1
  %96 = or i32 %2, %0
  %97 = xor i32 %96, -1
  %98 = or i32 %97, %61
  %99 = or i32 %23, %37
  %100 = or i32 %51, %2
  %101 = and i32 %24, %41
  %102 = or i32 %66, %0
  %103 = shl i32 %102, 1
  %104 = xor i32 %15, -1
  %105 = add i32 %15, 1
  %106 = or i32 %104, %13
  %107 = or i32 %14, %0
  %108 = xor i32 %107, %1
  %109 = or i32 %48, %97
  %110 = or i32 %24, %82
  %111 = shl i32 %110, 1
  %112 = and i32 %96, %21
  %113 = and i32 %107, %61
  %114 = or i32 %43, %0
  %115 = or i32 %40, %64
  %116 = and i32 %29, %21
  %117 = or i32 %64, %1
  %118 = or i32 %14, %82
  %119 = or i32 %24, %40
  %120 = or i32 %64, %82
  %121 = and i32 %107, %1
  %122 = xor i32 %45, %15
  %123 = and i32 %64, %1
  %124 = add i32 %27, 1
  %125 = xor i32 %45, %43
  %126 = and i32 %57, %13
  %127 = shl i32 %126, 1
  %128 = add i32 %0, 1
  %129 = and i32 %29, %48
  %130 = xor i32 %73, %1
  %131 = or i32 %45, %1
  %132 = or i32 %66, %27
  %133 = and i32 %48, %92
  %134 = or i32 %9, %0
  %135 = xor i32 %134, -1
  %136 = xor i32 %9, -1
  %137 = or i32 %73, %136
  %138 = xor i32 %96, %40
  %139 = or i32 %7, %13
  %140 = xor i32 %45, -1
  %141 = and i32 %140, %61
  %142 = or i32 %97, %21
  %143 = xor i32 %10, 2147483647
  %144 = xor i32 %143, %8
  %145 = xor i32 %107, -1
  %146 = or i32 %145, %1
  %147 = or i32 %15, %0
  %148 = or i32 %29, %1
  %149 = or i32 %40, %14
  %150 = add i32 %48, 1
  %151 = and i32 %50, %14
  %152 = xor i32 %27, %2
  %153 = or i32 %61, %2
  %154 = xor i32 %66, -1
  %155 = xor i32 %154, %0
  %156 = or i32 %82, %2
  %157 = xor i32 %97, %1
  %158 = and i32 %48, %2
  %159 = and i32 %107, %21
  %160 = and i32 %96, %48
  %161 = xor i32 %15, %0
  %162 = and i32 %9, %13
  %163 = xor i32 %8, -1
  %164 = xor i32 %162, %163
  %165 = or i32 %15, %13
  %166 = shl i32 %165, 1
  %167 = or i32 %27, %64
  %168 = xor i32 %145, %1
  %169 = shl i32 %168, 1
  %170 = and i32 %50, %57
  %171 = xor i32 %73, %50
  %172 = or i32 %48, %145
  %173 = shl i32 %172, 2
  %174 = xor i32 %55, %76
  %175 = xor i32 %27, %154
  %176 = or i32 %57, %0
  %177 = and i32 %92, %21
  %178 = shl i32 %177, 2
  %179 = and i32 %14, %61
  %180 = xor i32 %43, %0
  %181 = or i32 %73, %1
  %182 = and i32 %154, %0
  %183 = shl i32 %82, 1
  %184 = or i32 %40, %145
  %185 = and i32 %29, %61
  %186 = or i32 %54, %75
  %187 = or i32 %45, %104
  %188 = and i32 %48, %14
  %189 = shl i32 %1, 1
  %190 = or i32 %29, %40
  %191 = and i32 %107, %48
  %192 = or i32 %24, %27
  %193 = xor i32 %82, %2
  %194 = shl i32 %193, 1
  %195 = and i32 %92, %1
  %196 = and i32 %32, %14
  %197 = or i32 %24, %0
  %198 = xor i32 %23, %197
  %199 = add i32 %29, 1
  %200 = xor i32 %9, %40
  %201 = shl i32 %200, 1
  %202 = and i32 %32, %57
  %203 = xor i32 %136, %0
  %204 = and i32 %48, %64
  %205 = xor i32 %107, %40
  %206 = xor i32 %96, %1
  %207 = and i32 %24, %50
  %208 = and i32 %96, %1
  %209 = or i32 %29, %21
  %210 = or i32 %104, %0
  %211 = xor i32 %7, %0
  %212 = shl i32 %211, 1
  %213 = and i32 %24, %13
  %214 = xor i32 %213, %163
  %215 = xor i32 %73, %154
  %216 = or i32 %40, %136
  %217 = or i32 %154, %13
  %218 = and i32 %14, %41
  %219 = and i32 %64, %41
  %220 = or i32 %29, %27
  %221 = or i32 %7, %27
  %222 = and i32 %28, %2
  %223 = xor i32 %8, %25
  %224 = or i32 %27, %2
  %225 = and i32 %64, %21
  %226 = or i32 %8, %162
  %227 = xor i32 %57, %0
  %228 = or i32 %7, %0
  %229 = and i32 %29, %1
  %230 = or i32 %45, %48
  %231 = add i32 %45, 1
  %232 = or i32 %29, %48
  %233 = or i32 %136, %13
  %234 = and i32 %14, %28
  %235 = or i32 %154, %0
  %236 = or i32 %45, %61
  %237 = shl i32 %236, 1
  %238 = and i32 %154, %13
  %239 = add i32 %107, 1
  %240 = and i32 %29, %50
  %241 = or i32 %64, %51
  %242 = or i32 %40, %97
  %243 = shl i32 %242, 1
  %244 = xor i32 %140, %1
  %245 = and i32 %43, %13
  %246 = or i32 %145, %21
  %247 = shl i32 %41, 1
  %248 = and i32 %140, %1
  %249 = shl i32 %154, 2
  %250 = and i32 %140, %21
  %251 = xor i32 %66, %0
  %252 = and i32 %48, %140
  %253 = or i32 %40, %104
  %254 = and i32 %92, %61
  %255 = or i32 %73, %51
  %256 = or i32 %45, %21
  %257 = or i32 %40, %2
  %258 = shl i32 %257, 1
  %259 = or i32 %73, %21
  %260 = add i32 %73, 1
  %261 = or i32 %27, %14
  %262 = or i32 %24, %51
  %263 = or i32 %48, %64
  %264 = or i32 %40, %57
  %265 = shl i32 %264, 1
  %266 = xor i32 %104, %0
  %267 = add i32 %2, 1
  %268 = xor i32 %41, %2
  %269 = and i32 %24, %28
  %270 = or i32 %45, %7
  %271 = and i32 %136, %13
  %272 = and i32 %66, %13
  %273 = mul i32 %272, 30
  %274 = and i32 %136, %0
  %275 = shl i32 %274, 3
  %276 = and i32 %66, %0
  %277 = shl i32 %276, 1
  %278 = and i32 %104, %13
  %279 = mul i32 %278, 29
  %280 = mul i32 %54, 21
  %281 = and i32 %104, %0
  %282 = shl i32 %281, 2
  %283 = xor i32 %5, %4
  %284 = xor i32 %283, -1
  %285 = or i32 %284, %3
  %286 = xor i32 %3, -1
  %287 = and i32 %286, %4
  %288 = xor i32 %18, -1
  %289 = or i32 %287, %288
  %290 = or i32 %5, %4
  %291 = and i32 %286, %5
  %292 = and i32 %291, %4
  %293 = xor i32 %18, %4
  %294 = or i32 %292, %293
  %295 = shl i32 %294, 1
  %296 = xor i32 %5, -1
  %297 = and i32 %4, %3
  %298 = xor i32 %297, -1
  %299 = and i32 %296, %298
  %300 = and i32 %296, %4
  %301 = xor i32 %300, -1
  %302 = and i32 %301, %286
  %303 = shl i32 %302, 1
  %304 = and i32 %5, %4
  %305 = or i32 %5, %3
  %306 = xor i32 %304, %305
  %307 = and i32 %296, %3
  %308 = xor i32 %307, -1
  %309 = xor i32 %304, %308
  %310 = or i32 %4, %3
  %311 = xor i32 %310, -1
  %312 = or i32 %283, %311
  %313 = or i32 %296, %3
  %314 = xor i32 %313, %297
  %315 = xor i32 %313, -1
  %316 = or i32 %300, %315
  %317 = shl i32 %316, 1
  %318 = xor i32 %4, -1
  %319 = and i32 %5, %3
  %320 = xor i32 %319, -1
  %321 = and i32 %320, %318
  %322 = or i32 %297, %5
  %323 = xor i32 %4, %3
  %324 = xor i32 %323, -1
  %325 = add i32 %323, 1
  %326 = or i32 %286, %4
  %327 = xor i32 %326, -1
  %328 = or i32 %296, %327
  %329 = or i32 %324, %5
  %330 = xor i32 %308, %4
  %331 = xor i32 %290, %3
  %332 = and i32 %326, %288
  %333 = xor i32 %305, -1
  %334 = and i32 %326, %296
  %335 = and i32 %291, %318
  %336 = or i32 %286, %5
  %337 = and i32 %336, %4
  %338 = or i32 %335, %337
  %339 = shl i32 %338, 1
  %340 = or i32 %18, %311
  %341 = and i32 %319, %4
  %342 = xor i32 %305, %4
  %343 = xor i32 %341, -1
  %344 = xor i32 %342, %343
  %345 = shl i32 %287, 1
  %346 = and i32 %323, %296
  %347 = and i32 %305, %318
  %348 = or i32 %341, %347
  %349 = or i32 %304, %307
  %350 = shl i32 %349, 2
  %351 = xor i32 %287, -1
  %352 = add i32 %287, 1
  %353 = xor i32 %290, -1
  %354 = or i32 %353, %324
  %355 = shl i32 %318, 1
  %356 = and i32 %290, %323
  %357 = or i32 %296, %4
  %358 = xor i32 %357, %297
  %359 = and i32 %357, %286
  %360 = and i32 %319, %318
  %361 = and i32 %18, %4
  %362 = xor i32 %361, 2147483647
  %363 = xor i32 %362, %360
  %364 = shl i32 %363, 1
  %365 = xor i32 %357, %3
  %366 = or i32 %287, %5
  %367 = and i32 %310, %5
  %368 = xor i32 %300, %3
  %369 = and i32 %357, %324
  %370 = and i32 %323, %284
  %371 = or i32 %304, %323
  %372 = shl i32 %326, 1
  %373 = xor i32 %304, -1
  %374 = and i32 %373, %286
  %375 = and i32 %308, %318
  %376 = and i32 %18, %318
  %377 = and i32 %301, %3
  %378 = or i32 %333, %318
  %379 = and i32 %301, %324
  %380 = or i32 %18, %318
  %381 = xor i32 %335, %380
  %382 = or i32 %297, %315
  %383 = shl i32 %382, 1
  %384 = or i32 %304, %324
  %385 = or i32 %307, %287
  %386 = and i32 %18, %310
  %387 = or i32 %284, %327
  %388 = shl i32 %387, 1
  %389 = and i32 %326, %284
  %390 = or i32 %315, %318
  %391 = xor i32 %333, %4
  %392 = shl i32 %391, 1
  %393 = and i32 %18, %326
  %394 = xor i32 %351, %5
  %395 = and i32 %290, %324
  %396 = shl i32 %395, 1
  %397 = or i32 %353, %3
  %398 = xor i32 %337, -1
  %399 = xor i32 %335, %398
  %400 = xor i32 %288, %4
  %401 = or i32 %18, %297
  %402 = or i32 %296, %324
  %403 = or i32 %283, %3
  %404 = xor i32 %311, %5
  %405 = and i32 %351, %5
  %406 = and i32 %324, %5
  %407 = shl i32 %406, 1
  %408 = or i32 %300, %286
  %409 = or i32 %297, %288
  %410 = and i32 %290, %286
  %411 = or i32 %284, %324
  %412 = or i32 %288, %311
  %413 = xor i32 %292, %19
  %414 = and i32 %323, %5
  %415 = xor i32 %305, %297
  %416 = and i32 %283, %323
  %417 = shl i32 %416, 1
  %418 = xor i32 %287, %308
  %419 = or i32 %304, %333
  %420 = or i32 %297, %353
  %421 = xor i32 %336, -1
  %422 = or i32 %421, %4
  %423 = xor i32 %292, %422
  %424 = and i32 %283, %286
  %425 = and i32 %373, %324
  %426 = xor i32 %293, -1
  %427 = or i32 %341, %426
  %428 = and i32 %288, %318
  %429 = shl i32 %428, 1
  %430 = and i32 %18, %298
  %431 = or i32 %333, %4
  %432 = xor i32 %347, %343
  %433 = or i32 %311, %5
  %434 = or i32 %284, %286
  %435 = shl i32 %434, 1
  %436 = and i32 %333, %318
  %437 = and i32 %307, %318
  %438 = and i32 %333, %4
  %439 = mul i32 %438, 6
  %440 = and i32 %307, %4
  %441 = and i32 %315, %318
  %442 = mul i32 %441, 14
  %443 = mul i32 %360, -9
  %444 = and i32 %315, %4
  %445 = mul i32 %341, 13
  %446 = sub i32 -2, %1
  %447 = add i32 %446, %73
  %448 = add i32 %447, %7
  %449 = add i32 %448, %218
  %450 = add i32 %449, %45
  %451 = add i32 %450, %266
  %452 = add i32 %451, %259
  %453 = add i32 %452, %254
  %454 = add i32 %453, %230
  %455 = add i32 %454, %209
  %456 = add i32 %455, %208
  %457 = add i32 %456, %167
  %458 = add i32 %457, %157
  %459 = add i32 %458, %147
  %460 = add i32 %459, %109
  %461 = add i32 %460, %108
  %462 = add i32 %461, %91
  %463 = add i32 %462, %74
  %464 = add i32 %463, %70
  %465 = add i32 %464, %5
  %466 = add i32 %465, %36
  %467 = add i32 %466, %433
  %468 = add i32 %467, %333
  %469 = add i32 %468, %144
  %470 = add i32 %469, %420
  %471 = add i32 %470, %385
  %472 = add i32 %471, %384
  %473 = add i32 %472, %375
  %474 = add i32 %473, %356
  %475 = add i32 %474, %330
  %476 = add i32 %475, %309
  %477 = add i32 %476, %348
  %478 = shl i32 %477, 1
  %479 = add i32 %128, %2
  %480 = sub i32 %479, %32
  %481 = add i32 %480, %216
  %482 = add i32 %481, %155
  %483 = add i32 %482, %44
  %484 = add i32 %483, %290
  %485 = mul i32 %484, 5
  %486 = add i32 %39, %87
  %487 = sub i32 %414, %486
  %488 = sub i32 %487, %410
  %489 = add i32 %488, %436
  %490 = sub i32 %489, %312
  %491 = mul i32 %490, 3
  %492 = add i32 %121, %271
  %493 = add i32 %492, %358
  %494 = add i32 %493, %440
  %495 = shl i32 %494, 2
  %496 = sub i32 -2, %50
  %497 = add i32 %496, %48
  %498 = add i32 %497, %124
  %499 = add i32 %498, %150
  %500 = sub i32 %499, %40
  %501 = sub i32 %500, %189
  %502 = add i32 %501, %27
  %503 = add i32 %502, %267
  %504 = sub i32 %503, %42
  %505 = sub i32 %504, %49
  %506 = add i32 %505, %52
  %507 = sub i32 %506, %53
  %508 = add i32 %507, %100
  %509 = sub i32 %508, %66
  %510 = add i32 %509, %105
  %511 = add i32 %510, %43
  %512 = sub i32 %511, %118
  %513 = add i32 %512, %149
  %514 = sub i32 %513, %151
  %515 = add i32 %514, %152
  %516 = add i32 %515, %153
  %517 = sub i32 %516, %156
  %518 = sub i32 %517, %158
  %519 = sub i32 %518, %29
  %520 = add i32 %519, %179
  %521 = sub i32 %520, %183
  %522 = add i32 %521, %107
  %523 = sub i32 %522, %188
  %524 = sub i32 %523, %196
  %525 = add i32 %524, %199
  %526 = add i32 %525, %222
  %527 = add i32 %526, %9
  %528 = sub i32 %527, %224
  %529 = add i32 %528, %231
  %530 = sub i32 %529, %234
  %531 = add i32 %530, %239
  %532 = sub i32 %531, %15
  %533 = sub i32 %532, %247
  %534 = add i32 %533, %260
  %535 = sub i32 %534, %261
  %536 = add i32 %535, %268
  %537 = add i32 %536, %286
  %538 = sub i32 %537, %30
  %539 = add i32 %538, %31
  %540 = add i32 %539, %60
  %541 = add i32 %540, %65
  %542 = sub i32 %541, %67
  %543 = add i32 %542, %68
  %544 = sub i32 %543, %69
  %545 = sub i32 %544, %72
  %546 = sub i32 %545, %79
  %547 = sub i32 %546, %80
  %548 = add i32 %547, %81
  %549 = add i32 %548, %83
  %550 = sub i32 %549, %90
  %551 = add i32 %550, %93
  %552 = sub i32 %551, %98
  %553 = add i32 %552, %101
  %554 = add i32 %553, %106
  %555 = sub i32 %554, %25
  %556 = add i32 %555, %112
  %557 = add i32 %556, %113
  %558 = sub i32 %557, %114
  %559 = sub i32 %558, %115
  %560 = sub i32 %559, %116
  %561 = sub i32 %560, %117
  %562 = sub i32 %561, %119
  %563 = add i32 %562, %120
  %564 = sub i32 %563, %122
  %565 = add i32 %564, %123
  %566 = add i32 %565, %125
  %567 = add i32 %566, %129
  %568 = sub i32 %567, %130
  %569 = add i32 %568, %131
  %570 = sub i32 %569, %132
  %571 = add i32 %570, %133
  %572 = add i32 %571, %135
  %573 = add i32 %572, %137
  %574 = sub i32 %573, %138
  %575 = add i32 %574, %139
  %576 = add i32 %575, %141
  %577 = add i32 %576, %142
  %578 = add i32 %577, %146
  %579 = sub i32 %578, %148
  %580 = sub i32 %579, %159
  %581 = add i32 %580, %160
  %582 = sub i32 %581, %161
  %583 = sub i32 %582, %170
  %584 = sub i32 %583, %171
  %585 = sub i32 %584, %175
  %586 = add i32 %585, %176
  %587 = sub i32 %586, %180
  %588 = sub i32 %587, %181
  %589 = sub i32 %588, %182
  %590 = add i32 %589, %184
  %591 = add i32 %590, %185
  %592 = add i32 %591, %187
  %593 = sub i32 %592, %190
  %594 = add i32 %593, %191
  %595 = sub i32 %594, %192
  %596 = sub i32 %595, %194
  %597 = add i32 %596, %195
  %598 = sub i32 %597, %202
  %599 = add i32 %598, %203
  %600 = sub i32 %599, %204
  %601 = add i32 %600, %205
  %602 = sub i32 %601, %206
  %603 = sub i32 %602, %207
  %604 = sub i32 %603, %210
  %605 = sub i32 %604, %215
  %606 = sub i32 %605, %217
  %607 = sub i32 %606, %219
  %608 = sub i32 %607, %220
  %609 = sub i32 %608, %221
  %610 = add i32 %609, %225
  %611 = add i32 %610, %227
  %612 = add i32 %611, %228
  %613 = add i32 %612, %229
  %614 = sub i32 %613, %232
  %615 = sub i32 %614, %233
  %616 = sub i32 %615, %235
  %617 = add i32 %616, %10
  %618 = sub i32 %617, %238
  %619 = add i32 %618, %240
  %620 = add i32 %619, %241
  %621 = add i32 %620, %244
  %622 = add i32 %621, %245
  %623 = sub i32 %622, %213
  %624 = sub i32 %623, %246
  %625 = sub i32 %624, %248
  %626 = sub i32 %625, %249
  %627 = add i32 %626, %250
  %628 = sub i32 %627, %251
  %629 = sub i32 %628, %252
  %630 = add i32 %629, %253
  %631 = sub i32 %630, %255
  %632 = sub i32 %631, %256
  %633 = sub i32 %632, %258
  %634 = add i32 %633, %262
  %635 = add i32 %634, %263
  %636 = add i32 %635, %269
  %637 = add i32 %636, %270
  %638 = add i32 %637, %8
  %639 = add i32 %638, %26
  %640 = add i32 %639, %47
  %641 = add i32 %640, %56
  %642 = sub i32 %641, %59
  %643 = sub i32 %642, %63
  %644 = sub i32 %643, %77
  %645 = sub i32 %644, %84
  %646 = sub i32 %645, %86
  %647 = add i32 %646, %89
  %648 = sub i32 %647, %95
  %649 = sub i32 %648, %99
  %650 = sub i32 %649, %103
  %651 = sub i32 %650, %111
  %652 = sub i32 %651, %127
  %653 = sub i32 %652, %164
  %654 = sub i32 %653, %166
  %655 = sub i32 %654, %169
  %656 = sub i32 %655, %173
  %657 = sub i32 %656, %174
  %658 = sub i32 %657, %178
  %659 = add i32 %658, %186
  %660 = sub i32 %659, %198
  %661 = sub i32 %660, %201
  %662 = sub i32 %661, %212
  %663 = add i32 %662, %214
  %664 = add i32 %663, %223
  %665 = sub i32 %664, %226
  %666 = sub i32 %665, %237
  %667 = sub i32 %666, %243
  %668 = sub i32 %667, %265
  %669 = add i32 %668, %273
  %670 = add i32 %669, %275
  %671 = sub i32 %670, %277
  %672 = add i32 %671, %279
  %673 = add i32 %672, %280
  %674 = sub i32 %673, %282
  %675 = add i32 %674, %325
  %676 = add i32 %675, %352
  %677 = sub i32 %676, %355
  %678 = add i32 %677, %323
  %679 = add i32 %678, %296
  %680 = sub i32 %679, %299
  %681 = sub i32 %680, %322
  %682 = add i32 %681, %313
  %683 = add i32 %682, %328
  %684 = sub i32 %683, %329
  %685 = add i32 %684, %334
  %686 = sub i32 %685, %345
  %687 = add i32 %686, %346
  %688 = sub i32 %687, %319
  %689 = add i32 %688, %18
  %690 = sub i32 %689, %366
  %691 = add i32 %690, %367
  %692 = sub i32 %691, %372
  %693 = sub i32 %692, %300
  %694 = sub i32 %693, %394
  %695 = sub i32 %694, %402
  %696 = sub i32 %695, %404
  %697 = add i32 %696, %405
  %698 = add i32 %697, %285
  %699 = sub i32 %698, %289
  %700 = sub i32 %699, %306
  %701 = sub i32 %700, %314
  %702 = add i32 %701, %321
  %703 = sub i32 %702, %331
  %704 = sub i32 %703, %332
  %705 = sub i32 %704, %340
  %706 = sub i32 %705, %354
  %707 = add i32 %706, %359
  %708 = sub i32 %707, %365
  %709 = add i32 %708, %368
  %710 = add i32 %709, %369
  %711 = sub i32 %710, %370
  %712 = add i32 %711, %371
  %713 = add i32 %712, %374
  %714 = add i32 %713, %376
  %715 = sub i32 %714, %377
  %716 = sub i32 %715, %378
  %717 = sub i32 %716, %379
  %718 = sub i32 %717, %386
  %719 = add i32 %718, %389
  %720 = add i32 %719, %390
  %721 = sub i32 %720, %393
  %722 = add i32 %721, %397
  %723 = add i32 %722, %400
  %724 = add i32 %723, %401
  %725 = sub i32 %724, %403
  %726 = sub i32 %725, %407
  %727 = add i32 %726, %408
  %728 = sub i32 %727, %409
  %729 = add i32 %728, %411
  %730 = sub i32 %729, %412
  %731 = add i32 %730, %415
  %732 = sub i32 %731, %418
  %733 = sub i32 %732, %419
  %734 = add i32 %733, %342
  %735 = sub i32 %734, %424
  %736 = sub i32 %735, %425
  %737 = add i32 %736, %430
  %738 = add i32 %737, %431
  %739 = sub i32 %738, %437
  %740 = add i32 %739, %444
  %741 = sub i32 %740, %303
  %742 = sub i32 %741, %317
  %743 = add i32 %742, %344
  %744 = sub i32 %743, %350
  %745 = sub i32 %744, %381
  %746 = sub i32 %745, %383
  %747 = sub i32 %746, %388
  %748 = sub i32 %747, %392
  %749 = sub i32 %748, %396
  %750 = add i32 %749, %399
  %751 = sub i32 %750, %413
  %752 = sub i32 %751, %417
  %753 = add i32 %752, %423
  %754 = add i32 %753, %427
  %755 = sub i32 %754, %429
  %756 = sub i32 %755, %432
  %757 = sub i32 %756, %435
  %758 = add i32 %757, %439
  %759 = add i32 %758, %442
  %760 = add i32 %759, %443
  %761 = add i32 %760, %445
  %762 = sub i32 %761, %295
  %763 = sub i32 %762, %339
  %764 = sub i32 %763, %364
  %765 = add i32 %764, %495
  %766 = add i32 %765, %485
  %767 = add i32 %766, %491
  %768 = add i32 %767, %478
  %769 = icmp eq i32 %20, %768
  %770 = select i1 %769, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %771 = tail call i32 @puts(i8* nonnull dereferenceable(1) %770)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
