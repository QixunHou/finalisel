digraph "DFG for'main' function" {
	Node0x16afce8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x16afd68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x16afdf8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x16b0258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x16b0338[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x16b0458[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16b0690[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x16b0748[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x16b16b8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x16b1d40[shape=record, label="  %8 = or i32 %7, %6"];
	Node0x16b1db0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0x16b1e20[shape=record, label="  %10 = or i32 %6, %9"];
	Node0x16b1e90[shape=record, label="  %11 = xor i32 %7, %6"];
	Node0x16b1f00[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x16b1f70[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x16b1fe0[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x16b2050[shape=record, label="  %15 = xor i32 %8, -1"];
	Node0x16b20c0[shape=record, label="  %16 = mul i32 %15, 5"];
	Node0x16b2130[shape=record, label="  %17 = shl i32 %10, 2"];
	Node0x16b21a0[shape=record, label="  %18 = xor i32 %17, -4"];
	Node0x16b2210[shape=record, label="  %19 = and i32 %6, %9"];
	Node0x16b2280[shape=record, label="  %20 = mul i32 %19, 3"];
	Node0x16b22f0[shape=record, label="  %21 = shl i32 %6, 1"];
	Node0x16b2360[shape=record, label="  %22 = add i32 %21, 2"];
	Node0x16b23d0[shape=record, label="  %23 = sub i32 %22, %10"];
	Node0x16b2440[shape=record, label="  %24 = add i32 %23, %11"];
	Node0x16b24b0[shape=record, label="  %25 = add i32 %24, %16"];
	Node0x16b2520[shape=record, label="  %26 = add i32 %25, %20"];
	Node0x16b2590[shape=record, label="  %27 = add i32 %26, %13"];
	Node0x16b2600[shape=record, label="  %28 = sub i32 %27, %14"];
	Node0x16b2670[shape=record, label="  %29 = add i32 %28, %18"];
	Node0x16b26e0[shape=record, label="  %30 = icmp eq i32 %8, %29"];
	Node0x16509d8[shape=record, label="  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x16b2770[shape=record, label="  %32 = call i32 @puts(i8* nonnull dereferenceable(1) %31) #5"];
	Node0x16b2bd8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x16b2d38[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x16b2df8[shape=record, label="  ret i32 0"];
	Node0x16afce8 -> Node0x16afd68;
	Node0x16afd68 -> Node0x16afdf8;
	Node0x16afdf8 -> Node0x16b0258;
	Node0x16b0258 -> Node0x16b0338;
	Node0x16b0338 -> Node0x16b0458;
	Node0x16b0458 -> Node0x16b0690;
	Node0x16b0690 -> Node0x16b0748;
	Node0x16b0748 -> Node0x16b16b8;
	Node0x16b16b8 -> Node0x16b1d40;
	Node0x16b1d40 -> Node0x16b1db0;
	Node0x16b1db0 -> Node0x16b1e20;
	Node0x16b1e20 -> Node0x16b1e90;
	Node0x16b1e90 -> Node0x16b1f00;
	Node0x16b1f00 -> Node0x16b1f70;
	Node0x16b1f70 -> Node0x16b1fe0;
	Node0x16b1fe0 -> Node0x16b2050;
	Node0x16b2050 -> Node0x16b20c0;
	Node0x16b20c0 -> Node0x16b2130;
	Node0x16b2130 -> Node0x16b21a0;
	Node0x16b21a0 -> Node0x16b2210;
	Node0x16b2210 -> Node0x16b2280;
	Node0x16b2280 -> Node0x16b22f0;
	Node0x16b22f0 -> Node0x16b2360;
	Node0x16b2360 -> Node0x16b23d0;
	Node0x16b23d0 -> Node0x16b2440;
	Node0x16b2440 -> Node0x16b24b0;
	Node0x16b24b0 -> Node0x16b2520;
	Node0x16b2520 -> Node0x16b2590;
	Node0x16b2590 -> Node0x16b2600;
	Node0x16b2600 -> Node0x16b2670;
	Node0x16b2670 -> Node0x16b26e0;
	Node0x16b26e0 -> Node0x16509d8;
	Node0x16509d8 -> Node0x16b2770;
	Node0x16b2770 -> Node0x16b2bd8;
	Node0x16b2bd8 -> Node0x16b2d38;
	Node0x16b2d38 -> Node0x16b2df8;
edge [color=red]
	Node0x16afce8 -> Node0x16afdf8;
	Node0x16afdf8 -> Node0x16b0258;
	Node0x16afd68 -> Node0x16b0338;
	Node0x16b0338 -> Node0x16b0458;
	Node0x16afce8 -> Node0x16b0690;
	Node0x16afd68 -> Node0x16b0690;
	Node0x16afce8 -> Node0x16b0748;
	Node0x16afd68 -> Node0x16b16b8;
	Node0x16b16b8 -> Node0x16b1d40;
	Node0x16b0748 -> Node0x16b1d40;
	Node0x16b16b8 -> Node0x16b1db0;
	Node0x16b0748 -> Node0x16b1e20;
	Node0x16b1db0 -> Node0x16b1e20;
	Node0x16b16b8 -> Node0x16b1e90;
	Node0x16b0748 -> Node0x16b1e90;
	Node0x16b16b8 -> Node0x16b1f00;
	Node0x16b0748 -> Node0x16b1f00;
	Node0x16b1f00 -> Node0x16b1f70;
	Node0x16b1f70 -> Node0x16b1fe0;
	Node0x16b1d40 -> Node0x16b2050;
	Node0x16b2050 -> Node0x16b20c0;
	Node0x16b1e20 -> Node0x16b2130;
	Node0x16b2130 -> Node0x16b21a0;
	Node0x16b0748 -> Node0x16b2210;
	Node0x16b1db0 -> Node0x16b2210;
	Node0x16b2210 -> Node0x16b2280;
	Node0x16b0748 -> Node0x16b22f0;
	Node0x16b22f0 -> Node0x16b2360;
	Node0x16b2360 -> Node0x16b23d0;
	Node0x16b1e20 -> Node0x16b23d0;
	Node0x16b23d0 -> Node0x16b2440;
	Node0x16b1e90 -> Node0x16b2440;
	Node0x16b2440 -> Node0x16b24b0;
	Node0x16b20c0 -> Node0x16b24b0;
	Node0x16b24b0 -> Node0x16b2520;
	Node0x16b2280 -> Node0x16b2520;
	Node0x16b2520 -> Node0x16b2590;
	Node0x16b1f70 -> Node0x16b2590;
	Node0x16b2590 -> Node0x16b2600;
	Node0x16b1fe0 -> Node0x16b2600;
	Node0x16b2600 -> Node0x16b2670;
	Node0x16b21a0 -> Node0x16b2670;
	Node0x16b1d40 -> Node0x16b26e0;
	Node0x16b2670 -> Node0x16b26e0;
	Node0x16b26e0 -> Node0x16509d8;
	Node0x16509d8 -> Node0x16b2770;
	Node0x16b0338 -> Node0x16b2bd8;
	Node0x16afdf8 -> Node0x16b2d38;
}
