digraph "DFG for'main' function" {
	Node0x21ddc08[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21ddc88[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21ddd18[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x21ddd78[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x21dde28[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x21de258[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21de338[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x21de438[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21de4f8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x21de5a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21de668[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x21de718[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x21d8780[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x21de918[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21df888[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21dfef8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x21dff58[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x21e0068[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0x21e02c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x21e0428[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21e0538[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21e0648[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21e0708[shape=record, label="  ret i32 0"];
	Node0x21ddc08 -> Node0x21ddc88;
	Node0x21ddc88 -> Node0x21ddd18;
	Node0x21ddd18 -> Node0x21ddd78;
	Node0x21ddd78 -> Node0x21dde28;
	Node0x21dde28 -> Node0x21de258;
	Node0x21de258 -> Node0x21de338;
	Node0x21de338 -> Node0x21de438;
	Node0x21de438 -> Node0x21de4f8;
	Node0x21de4f8 -> Node0x21de5a8;
	Node0x21de5a8 -> Node0x21de668;
	Node0x21de668 -> Node0x21de718;
	Node0x21de718 -> Node0x21d8780;
	Node0x21d8780 -> Node0x21de918;
	Node0x21de918 -> Node0x21df888;
	Node0x21df888 -> Node0x21dfef8;
	Node0x21dfef8 -> Node0x21dff58;
	Node0x21dff58 -> Node0x21e0068;
	Node0x21e0068 -> Node0x21e02c8;
	Node0x21e02c8 -> Node0x21e0428;
	Node0x21e0428 -> Node0x21e0538;
	Node0x21e0538 -> Node0x21e0648;
	Node0x21e0648 -> Node0x21e0708;
edge [color=red]
	Node0x21ddc08 -> Node0x21dde28;
	Node0x21dde28 -> Node0x21de258;
	Node0x21ddc88 -> Node0x21de338;
	Node0x21de338 -> Node0x21de438;
	Node0x21ddd18 -> Node0x21de4f8;
	Node0x21de4f8 -> Node0x21de5a8;
	Node0x21ddd78 -> Node0x21de668;
	Node0x21de668 -> Node0x21de718;
	Node0x21ddc08 -> Node0x21d8780;
	Node0x21ddc88 -> Node0x21d8780;
	Node0x21ddd18 -> Node0x21d8780;
	Node0x21ddd78 -> Node0x21d8780;
	Node0x21ddc08 -> Node0x21de918;
	Node0x21ddc88 -> Node0x21df888;
	Node0x21ddd18 -> Node0x21dfef8;
	Node0x21ddd78 -> Node0x21dff58;
	Node0x21de918 -> Node0x21e0068;
	Node0x21df888 -> Node0x21e0068;
	Node0x21dfef8 -> Node0x21e0068;
	Node0x21dff58 -> Node0x21e0068;
	Node0x21de668 -> Node0x21e02c8;
	Node0x21de4f8 -> Node0x21e0428;
	Node0x21de338 -> Node0x21e0538;
	Node0x21dde28 -> Node0x21e0648;
}
