; ModuleID = '../.././c_source_file/0555_path_condition_crackme.c'
source_filename = "../.././c_source_file/0555_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = or i32 %2, %0
  %5 = and i32 %4, %1
  %6 = or i32 %1, %0
  %7 = and i32 %6, %2
  %8 = and i32 %1, %0
  %9 = xor i32 %8, -1
  %10 = xor i32 %2, %1
  %11 = xor i32 %10, -1
  %12 = and i32 %11, %9
  %13 = shl i32 %12, 1
  %14 = and i32 %2, %0
  %15 = or i32 %2, %1
  %16 = xor i32 %15, -1
  %17 = or i32 %14, %16
  %18 = shl i32 %17, 1
  %19 = xor i32 %1, -1
  %20 = and i32 %19, %0
  %21 = xor i32 %2, %0
  %22 = or i32 %21, %20
  %23 = xor i32 %1, %0
  %24 = xor i32 %23, -1
  %25 = or i32 %24, %2
  %26 = xor i32 %2, -1
  %27 = and i32 %26, %0
  %28 = or i32 %27, %24
  %29 = xor i32 %0, -1
  %30 = and i32 %2, %1
  %31 = and i32 %30, %29
  %32 = and i32 %15, %0
  %33 = xor i32 %31, -1
  %34 = xor i32 %32, %33
  %35 = or i32 %26, %1
  %36 = xor i32 %35, -1
  %37 = or i32 %27, %36
  %38 = xor i32 %21, -1
  %39 = and i32 %38, %1
  %40 = shl i32 %39, 1
  %41 = and i32 %4, %19
  %42 = or i32 %15, %0
  %43 = or i32 %35, %0
  %44 = and i32 %24, %2
  %45 = or i32 %20, %38
  %46 = shl i32 %45, 1
  %47 = or i32 %30, %29
  %48 = or i32 %27, %23
  %49 = or i32 %19, %0
  %50 = and i32 %49, %2
  %51 = shl i32 %50, 1
  %52 = xor i32 %6, -1
  %53 = or i32 %14, %52
  %54 = or i32 %26, %0
  %55 = xor i32 %54, -1
  %56 = or i32 %55, %1
  %57 = and i32 %26, %1
  %58 = xor i32 %57, -1
  %59 = or i32 %58, %29
  %60 = and i32 %35, %0
  %61 = or i32 %21, %1
  %62 = xor i32 %30, -1
  %63 = xor i32 %62, %0
  %64 = xor i32 %35, %0
  %65 = xor i32 %4, %1
  %66 = xor i32 %54, %1
  %67 = and i32 %23, %2
  %68 = shl i32 %67, 1
  %69 = xor i32 %4, %8
  %70 = and i32 %11, %29
  %71 = shl i32 %70, 1
  %72 = or i32 %15, %29
  %73 = and i32 %23, %38
  %74 = xor i32 %30, %0
  %75 = xor i32 %10, %0
  %76 = and i32 %54, %24
  %77 = and i32 %21, %19
  %78 = xor i32 %14, %1
  %79 = and i32 %19, %2
  %80 = and i32 %79, %0
  %81 = or i32 %10, %0
  %82 = xor i32 %81, -1
  %83 = or i32 %80, %82
  %84 = or i32 %38, %19
  %85 = shl i32 %84, 1
  %86 = or i32 %10, %29
  %87 = or i32 %58, %0
  %88 = and i32 %6, %26
  %89 = xor i32 %20, -1
  %90 = and i32 %10, %89
  %91 = or i32 %23, %26
  %92 = xor i32 %4, -1
  %93 = add i32 %4, 1
  %94 = and i32 %30, %0
  %95 = xor i32 %15, %0
  %96 = or i32 %94, %95
  %97 = or i32 %14, %24
  %98 = and i32 %54, %23
  %99 = and i32 %89, %2
  %100 = or i32 %11, %52
  %101 = xor i32 %49, -1
  %102 = or i32 %11, %101
  %103 = or i32 %23, %2
  %104 = or i32 %62, %0
  %105 = or i32 %8, %26
  %106 = or i32 %14, %19
  %107 = xor i32 %14, %15
  %108 = xor i32 %27, -1
  %109 = and i32 %108, %19
  %110 = and i32 %26, %89
  %111 = and i32 %21, %49
  %112 = and i32 %21, %1
  %113 = or i32 %8, %2
  %114 = or i32 %38, %24
  %115 = or i32 %21, %52
  %116 = xor i32 %14, %6
  %117 = xor i32 %89, %2
  %118 = xor i32 %27, %35
  %119 = shl i32 %32, 1
  %120 = and i32 %108, %24
  %121 = xor i32 %14, -1
  %122 = and i32 %121, %24
  %123 = xor i32 %27, %1
  %124 = xor i32 %52, %2
  %125 = and i32 %49, %11
  %126 = shl i32 %125, 1
  %127 = xor i32 %126, -1
  %128 = or i32 %16, %29
  %129 = or i32 %35, %29
  %130 = shl i32 %129, 1
  %131 = and i32 %62, %0
  %132 = xor i32 %49, %2
  %133 = or i32 %14, %1
  %134 = or i32 %8, %38
  %135 = or i32 %10, %101
  %136 = and i32 %10, %9
  %137 = and i32 %54, %19
  %138 = and i32 %38, %9
  %139 = and i32 %121, %19
  %140 = or i32 %92, %1
  %141 = or i32 %27, %30
  %142 = or i32 %21, %8
  %143 = and i32 %10, %6
  %144 = and i32 %21, %9
  %145 = and i32 %121, %1
  %146 = and i32 %26, %9
  %147 = or i32 %8, %36
  %148 = xor i32 %11, %0
  %149 = or i32 %57, %29
  %150 = xor i32 %80, %81
  %151 = or i32 %21, %24
  %152 = or i32 %26, %52
  %153 = and i32 %10, %29
  %154 = xor i32 %94, -1
  %155 = xor i32 %153, %154
  %156 = xor i32 %9, %2
  %157 = and i32 %11, %0
  %158 = and i32 %9, %2
  %159 = and i32 %54, %1
  %160 = and i32 %10, %0
  %161 = or i32 %30, %20
  %162 = or i32 %92, %19
  %163 = or i32 %30, %0
  %164 = or i32 %23, %38
  %165 = and i32 %21, %24
  %166 = and i32 %15, %29
  %167 = or i32 %94, %166
  %168 = xor i32 %160, %33
  %169 = and i32 %4, %24
  %170 = and i32 %49, %38
  %171 = or i32 %14, %57
  %172 = or i32 %101, %2
  %173 = or i32 %21, %23
  %174 = shl i32 %62, 1
  %175 = and i32 %38, %89
  %176 = add i32 %0, 1
  %177 = and i32 %62, %29
  %178 = or i32 %27, %1
  %179 = shl i32 %178, 1
  %180 = add i32 %57, 1
  %181 = or i32 %10, %8
  %182 = shl i32 %181, 1
  %183 = or i32 %31, %32
  %184 = xor i32 %75, -1
  %185 = or i32 %94, %184
  %186 = or i32 %20, %26
  %187 = xor i32 %14, %58
  %188 = or i32 %8, %55
  %189 = and i32 %79, %29
  %190 = xor i32 %189, %86
  %191 = shl i32 %190, 1
  %192 = or i32 %19, %2
  %193 = xor i32 %192, %0
  %194 = or i32 %80, %193
  %195 = xor i32 %15, %8
  %196 = and i32 %192, %29
  %197 = xor i32 %196, -1
  %198 = xor i32 %80, %197
  %199 = and i32 %10, %49
  %200 = or i32 %21, %101
  %201 = and i32 %192, %0
  %202 = or i32 %189, %201
  %203 = and i32 %4, %23
  %204 = xor i32 %20, %58
  %205 = xor i32 %16, %0
  %206 = xor i32 %92, %1
  %207 = or i32 %38, %52
  %208 = or i32 %62, %29
  %209 = xor i32 %6, %2
  %210 = or i32 %16, %0
  %211 = and i32 %21, %89
  %212 = and i32 %23, %108
  %213 = shl i32 %212, 1
  %214 = xor i32 %14, %49
  %215 = xor i32 %108, %1
  %216 = and i32 %23, %121
  %217 = or i32 %27, %19
  %218 = or i32 %8, %11
  %219 = or i32 %55, %19
  %220 = or i32 %20, %11
  %221 = or i32 %52, %2
  %222 = or i32 %14, %23
  %223 = or i32 %55, %24
  %224 = xor i32 %201, -1
  %225 = xor i32 %189, %224
  %226 = and i32 %21, %23
  %227 = xor i32 %80, %184
  %228 = or i32 %26, %101
  %229 = shl i32 %228, 1
  %230 = shl i32 %16, 2
  %231 = and i32 %11, %89
  %232 = and i32 %6, %11
  %233 = or i32 %20, %2
  %234 = or i32 %14, %101
  %235 = or i32 %38, %101
  %236 = or i32 %94, %153
  %237 = shl i32 %236, 2
  %238 = xor i32 %166, %154
  %239 = and i32 %21, %6
  %240 = and i32 %23, %26
  %241 = and i32 %6, %38
  %242 = and i32 %26, %24
  %243 = and i32 %49, %26
  %244 = or i32 %11, %0
  %245 = xor i32 %27, %62
  %246 = or i32 %10, %20
  %247 = or i32 %23, %92
  %248 = or i32 %23, %55
  %249 = and i32 %38, %19
  %250 = or i32 %31, %160
  %251 = and i32 %58, %29
  %252 = xor i32 %36, %0
  %253 = or i32 %36, %29
  %254 = xor i32 %95, %154
  %255 = xor i32 %193, 2147483647
  %256 = xor i32 %255, %80
  %257 = shl i32 %256, 1
  %258 = or i32 %10, %52
  %259 = and i32 %58, %0
  %260 = or i32 %26, %24
  %261 = add i32 %21, 1
  %262 = and i32 %35, %29
  %263 = shl i32 %262, 1
  %264 = xor i32 %58, %0
  %265 = or i32 %80, %75
  %266 = xor i32 %20, %62
  %267 = or i32 %8, %92
  %268 = xor i32 %57, %0
  %269 = xor i32 %86, -1
  %270 = or i32 %189, %269
  %271 = or i32 %80, %196
  %272 = shl i32 %271, 1
  %273 = or i32 %21, %19
  %274 = or i32 %92, %24
  %275 = xor i32 %8, %2
  %276 = xor i32 %20, %2
  %277 = xor i32 %54, %8
  %278 = or i32 %57, %0
  %279 = xor i32 %55, %1
  %280 = and i32 %38, %24
  %281 = or i32 %57, %20
  %282 = xor i32 %35, %8
  %283 = and i32 %16, %29
  %284 = shl i32 %283, 3
  %285 = and i32 %57, %29
  %286 = and i32 %16, %0
  %287 = shl i32 %286, 3
  %288 = and i32 %57, %0
  %289 = and i32 %36, %29
  %290 = mul i32 %31, -11
  %291 = and i32 %36, %0
  %292 = mul i32 %291, -13
  %293 = mul i32 %94, 33
  %294 = add i32 %289, %285
  %295 = add i32 %294, %252
  %296 = sub i32 %220, %295
  %297 = add i32 %296, %135
  %298 = sub i32 %297, %59
  %299 = mul i32 %298, 3
  %300 = sub i32 %9, %30
  %301 = add i32 %300, %186
  %302 = sub i32 %301, %223
  %303 = add i32 %302, %247
  %304 = sub i32 %303, %219
  %305 = mul i32 %304, 5
  %306 = add i32 %63, %221
  %307 = add i32 %306, %206
  %308 = shl i32 %307, 2
  %309 = sub i32 -2, %20
  %310 = add i32 %309, %10
  %311 = add i32 %310, %108
  %312 = add i32 %311, %91
  %313 = sub i32 %312, %7
  %314 = add i32 %313, %258
  %315 = add i32 %314, %266
  %316 = add i32 %315, %251
  %317 = add i32 %316, %241
  %318 = add i32 %317, %234
  %319 = add i32 %318, %231
  %320 = add i32 %319, %95
  %321 = add i32 %320, %208
  %322 = add i32 %321, %205
  %323 = add i32 %322, %204
  %324 = add i32 %323, %170
  %325 = add i32 %324, %161
  %326 = add i32 %325, %160
  %327 = add i32 %326, %149
  %328 = add i32 %327, %136
  %329 = add i32 %328, %98
  %330 = add i32 %329, %69
  %331 = shl i32 %330, 1
  %332 = add i32 %176, %0
  %333 = add i32 %332, %19
  %334 = add i32 %333, %20
  %335 = add i32 %334, %101
  %336 = sub i32 %335, %49
  %337 = add i32 %336, 1
  %338 = sub i32 %337, %8
  %339 = add i32 %338, %25
  %340 = add i32 %339, %36
  %341 = add i32 %340, %44
  %342 = add i32 %341, %11
  %343 = add i32 %342, %88
  %344 = add i32 %343, %93
  %345 = add i32 %344, %99
  %346 = sub i32 %345, %103
  %347 = add i32 %346, %105
  %348 = sub i32 %347, %110
  %349 = add i32 %348, %113
  %350 = sub i32 %349, %117
  %351 = add i32 %350, %124
  %352 = add i32 %351, %132
  %353 = sub i32 %352, %4
  %354 = add i32 %353, %146
  %355 = sub i32 %354, %152
  %356 = sub i32 %355, %156
  %357 = sub i32 %356, %158
  %358 = add i32 %357, %172
  %359 = add i32 %358, %180
  %360 = add i32 %359, 1
  %361 = add i32 %360, %209
  %362 = add i32 %361, %233
  %363 = add i32 %362, %240
  %364 = sub i32 %363, %242
  %365 = sub i32 %364, %243
  %366 = add i32 %365, %57
  %367 = sub i32 %366, %54
  %368 = add i32 %367, %27
  %369 = sub i32 %368, %15
  %370 = sub i32 %369, %260
  %371 = add i32 %370, %261
  %372 = add i32 %371, %55
  %373 = add i32 %372, %275
  %374 = add i32 %373, %21
  %375 = add i32 %374, %276
  %376 = add i32 %375, %22
  %377 = add i32 %376, %28
  %378 = sub i32 %377, %37
  %379 = sub i32 %378, %41
  %380 = sub i32 %379, %42
  %381 = sub i32 %380, %43
  %382 = sub i32 %381, %47
  %383 = sub i32 %382, %48
  %384 = sub i32 %383, %51
  %385 = add i32 %384, %53
  %386 = sub i32 %385, %56
  %387 = add i32 %386, %60
  %388 = sub i32 %387, %61
  %389 = add i32 %388, %64
  %390 = sub i32 %389, %65
  %391 = sub i32 %390, %66
  %392 = sub i32 %391, %68
  %393 = sub i32 %392, %72
  %394 = sub i32 %393, %73
  %395 = add i32 %394, %74
  %396 = sub i32 %395, %75
  %397 = add i32 %396, %76
  %398 = sub i32 %397, %77
  %399 = sub i32 %398, %78
  %400 = sub i32 %399, %86
  %401 = sub i32 %400, %87
  %402 = sub i32 %401, %90
  %403 = add i32 %402, %97
  %404 = add i32 %403, %100
  %405 = sub i32 %404, %102
  %406 = sub i32 %405, %104
  %407 = sub i32 %406, %106
  %408 = add i32 %407, %107
  %409 = add i32 %408, %109
  %410 = add i32 %409, %111
  %411 = add i32 %410, %112
  %412 = add i32 %411, %114
  %413 = sub i32 %412, %115
  %414 = add i32 %413, %116
  %415 = sub i32 %414, %118
  %416 = add i32 %415, %120
  %417 = sub i32 %416, %122
  %418 = sub i32 %417, %123
  %419 = add i32 %418, %128
  %420 = add i32 %419, %131
  %421 = add i32 %420, %133
  %422 = add i32 %421, %134
  %423 = add i32 %422, %137
  %424 = add i32 %423, %138
  %425 = sub i32 %424, %139
  %426 = add i32 %425, %140
  %427 = sub i32 %426, %141
  %428 = sub i32 %427, %142
  %429 = add i32 %428, %143
  %430 = add i32 %429, %144
  %431 = sub i32 %430, %145
  %432 = sub i32 %431, %147
  %433 = add i32 %432, %148
  %434 = sub i32 %433, %151
  %435 = sub i32 %434, %157
  %436 = sub i32 %435, %159
  %437 = add i32 %436, %162
  %438 = sub i32 %437, %163
  %439 = add i32 %438, %164
  %440 = add i32 %439, %165
  %441 = sub i32 %440, %153
  %442 = add i32 %441, %166
  %443 = add i32 %442, %169
  %444 = sub i32 %443, %81
  %445 = sub i32 %444, %171
  %446 = add i32 %445, %173
  %447 = sub i32 %446, %174
  %448 = sub i32 %447, %175
  %449 = sub i32 %448, %177
  %450 = add i32 %449, %187
  %451 = sub i32 %450, %188
  %452 = sub i32 %451, %195
  %453 = add i32 %452, %199
  %454 = add i32 %453, %200
  %455 = sub i32 %454, %203
  %456 = sub i32 %455, %207
  %457 = sub i32 %456, %210
  %458 = add i32 %457, %211
  %459 = add i32 %458, %214
  %460 = sub i32 %459, %215
  %461 = add i32 %460, %216
  %462 = add i32 %461, %217
  %463 = add i32 %462, %218
  %464 = add i32 %463, %222
  %465 = add i32 %464, %226
  %466 = sub i32 %465, %229
  %467 = sub i32 %466, %230
  %468 = sub i32 %467, %232
  %469 = sub i32 %468, %235
  %470 = sub i32 %469, %239
  %471 = sub i32 %470, %244
  %472 = add i32 %471, %245
  %473 = sub i32 %472, %246
  %474 = add i32 %473, %248
  %475 = add i32 %474, %249
  %476 = sub i32 %475, %253
  %477 = sub i32 %476, %259
  %478 = add i32 %477, %264
  %479 = add i32 %478, %267
  %480 = add i32 %479, %268
  %481 = add i32 %480, %273
  %482 = sub i32 %481, %274
  %483 = sub i32 %482, %277
  %484 = add i32 %483, %278
  %485 = sub i32 %484, %279
  %486 = sub i32 %485, %280
  %487 = sub i32 %486, %281
  %488 = add i32 %487, %282
  %489 = add i32 %488, %288
  %490 = sub i32 %489, %13
  %491 = sub i32 %490, %18
  %492 = add i32 %491, %34
  %493 = sub i32 %492, %40
  %494 = sub i32 %493, %46
  %495 = sub i32 %494, %71
  %496 = add i32 %495, %83
  %497 = sub i32 %496, %85
  %498 = add i32 %497, %96
  %499 = sub i32 %498, %119
  %500 = add i32 %499, %127
  %501 = sub i32 %500, %130
  %502 = sub i32 %501, %150
  %503 = add i32 %502, %155
  %504 = sub i32 %503, %167
  %505 = sub i32 %504, %168
  %506 = sub i32 %505, %179
  %507 = sub i32 %506, %182
  %508 = sub i32 %507, %183
  %509 = sub i32 %508, %185
  %510 = sub i32 %509, %194
  %511 = sub i32 %510, %198
  %512 = sub i32 %511, %202
  %513 = sub i32 %512, %213
  %514 = add i32 %513, %225
  %515 = sub i32 %514, %227
  %516 = sub i32 %515, %238
  %517 = sub i32 %516, %250
  %518 = sub i32 %517, %254
  %519 = sub i32 %518, %263
  %520 = sub i32 %519, %265
  %521 = sub i32 %520, %270
  %522 = sub i32 %521, %284
  %523 = add i32 %522, %287
  %524 = add i32 %523, %290
  %525 = add i32 %524, %292
  %526 = add i32 %525, %293
  %527 = sub i32 %526, %191
  %528 = sub i32 %527, %237
  %529 = sub i32 %528, %272
  %530 = sub i32 %529, %257
  %531 = add i32 %530, %308
  %532 = add i32 %531, %299
  %533 = add i32 %532, %305
  %534 = add i32 %533, %331
  %535 = icmp eq i32 %5, %534
  %536 = select i1 %535, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %537 = tail call i32 @puts(i8* nonnull dereferenceable(1) %536)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
