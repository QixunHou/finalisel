digraph "DFG for'main' function" {
	Node0x1e70b18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e70b98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e70c28[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e71088[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e71168[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e71288[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e714c0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e71578[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e724e8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e72b70[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1e72be0[shape=record, label="  %9 = shl i32 %7, 1"];
	Node0x1e72c50[shape=record, label="  %10 = shl i32 %6, 1"];
	Node0x1e72cc0[shape=record, label="  %11 = xor i32 %10, -2"];
	Node0x1e72d30[shape=record, label="  %12 = add i32 %9, %11"];
	Node0x1e72da0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0x1e72e10[shape=record, label="  %14 = or i32 %12, 1"];
	Node0x1e72e80[shape=record, label="  %15 = or i32 %6, %8"];
	Node0x1e72ef0[shape=record, label="  %16 = or i32 %7, %6"];
	Node0x1e72f60[shape=record, label="  %17 = xor i32 %15, -1"];
	Node0x1e72fd0[shape=record, label="  %18 = mul i32 %17, -5"];
	Node0x1e73040[shape=record, label="  %19 = and i32 %7, %6"];
	Node0x1e730b0[shape=record, label="  %20 = shl i32 %13, 1"];
	Node0x1e73120[shape=record, label="  %21 = sub i32 1, %6"];
	Node0x1e73190[shape=record, label="  %22 = add i32 %21, %15"];
	Node0x1e73200[shape=record, label="  %23 = add i32 %22, %16"];
	Node0x1e73270[shape=record, label="  %24 = sub i32 %23, %19"];
	Node0x1e732e0[shape=record, label="  %25 = add i32 %24, %18"];
	Node0x1e73350[shape=record, label="  %26 = add i32 %25, %20"];
	Node0x1e733c0[shape=record, label="  %27 = add i32 %26, %14"];
	Node0x1e73430[shape=record, label="  %28 = icmp eq i32 %27, %8"];
	Node0x1e119d8[shape=record, label="  %29 = select i1 %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e734c0[shape=record, label="  %30 = call i32 @puts(i8* nonnull dereferenceable(1) %29) #5"];
	Node0x1e73718[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e73878[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e73938[shape=record, label="  ret i32 0"];
	Node0x1e70b18 -> Node0x1e70b98;
	Node0x1e70b98 -> Node0x1e70c28;
	Node0x1e70c28 -> Node0x1e71088;
	Node0x1e71088 -> Node0x1e71168;
	Node0x1e71168 -> Node0x1e71288;
	Node0x1e71288 -> Node0x1e714c0;
	Node0x1e714c0 -> Node0x1e71578;
	Node0x1e71578 -> Node0x1e724e8;
	Node0x1e724e8 -> Node0x1e72b70;
	Node0x1e72b70 -> Node0x1e72be0;
	Node0x1e72be0 -> Node0x1e72c50;
	Node0x1e72c50 -> Node0x1e72cc0;
	Node0x1e72cc0 -> Node0x1e72d30;
	Node0x1e72d30 -> Node0x1e72da0;
	Node0x1e72da0 -> Node0x1e72e10;
	Node0x1e72e10 -> Node0x1e72e80;
	Node0x1e72e80 -> Node0x1e72ef0;
	Node0x1e72ef0 -> Node0x1e72f60;
	Node0x1e72f60 -> Node0x1e72fd0;
	Node0x1e72fd0 -> Node0x1e73040;
	Node0x1e73040 -> Node0x1e730b0;
	Node0x1e730b0 -> Node0x1e73120;
	Node0x1e73120 -> Node0x1e73190;
	Node0x1e73190 -> Node0x1e73200;
	Node0x1e73200 -> Node0x1e73270;
	Node0x1e73270 -> Node0x1e732e0;
	Node0x1e732e0 -> Node0x1e73350;
	Node0x1e73350 -> Node0x1e733c0;
	Node0x1e733c0 -> Node0x1e73430;
	Node0x1e73430 -> Node0x1e119d8;
	Node0x1e119d8 -> Node0x1e734c0;
	Node0x1e734c0 -> Node0x1e73718;
	Node0x1e73718 -> Node0x1e73878;
	Node0x1e73878 -> Node0x1e73938;
edge [color=red]
	Node0x1e70b18 -> Node0x1e70c28;
	Node0x1e70c28 -> Node0x1e71088;
	Node0x1e70b98 -> Node0x1e71168;
	Node0x1e71168 -> Node0x1e71288;
	Node0x1e70b18 -> Node0x1e714c0;
	Node0x1e70b98 -> Node0x1e714c0;
	Node0x1e70b18 -> Node0x1e71578;
	Node0x1e70b98 -> Node0x1e724e8;
	Node0x1e724e8 -> Node0x1e72b70;
	Node0x1e724e8 -> Node0x1e72be0;
	Node0x1e71578 -> Node0x1e72c50;
	Node0x1e72c50 -> Node0x1e72cc0;
	Node0x1e72be0 -> Node0x1e72d30;
	Node0x1e72cc0 -> Node0x1e72d30;
	Node0x1e724e8 -> Node0x1e72da0;
	Node0x1e71578 -> Node0x1e72da0;
	Node0x1e72d30 -> Node0x1e72e10;
	Node0x1e71578 -> Node0x1e72e80;
	Node0x1e72b70 -> Node0x1e72e80;
	Node0x1e724e8 -> Node0x1e72ef0;
	Node0x1e71578 -> Node0x1e72ef0;
	Node0x1e72e80 -> Node0x1e72f60;
	Node0x1e72f60 -> Node0x1e72fd0;
	Node0x1e724e8 -> Node0x1e73040;
	Node0x1e71578 -> Node0x1e73040;
	Node0x1e72da0 -> Node0x1e730b0;
	Node0x1e71578 -> Node0x1e73120;
	Node0x1e73120 -> Node0x1e73190;
	Node0x1e72e80 -> Node0x1e73190;
	Node0x1e73190 -> Node0x1e73200;
	Node0x1e72ef0 -> Node0x1e73200;
	Node0x1e73200 -> Node0x1e73270;
	Node0x1e73040 -> Node0x1e73270;
	Node0x1e73270 -> Node0x1e732e0;
	Node0x1e72fd0 -> Node0x1e732e0;
	Node0x1e732e0 -> Node0x1e73350;
	Node0x1e730b0 -> Node0x1e73350;
	Node0x1e73350 -> Node0x1e733c0;
	Node0x1e72e10 -> Node0x1e733c0;
	Node0x1e733c0 -> Node0x1e73430;
	Node0x1e72b70 -> Node0x1e73430;
	Node0x1e73430 -> Node0x1e119d8;
	Node0x1e119d8 -> Node0x1e734c0;
	Node0x1e71168 -> Node0x1e73718;
	Node0x1e70c28 -> Node0x1e73878;
}
