digraph "DFG for'main' function" {
	Node0xd6cd68[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xd6cde8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xd6ce78[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xd6ced8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0xd6d358[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd6d438[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0xd6d538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd6d5f8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0xd6d6a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd6d908[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0xd6d9c8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xd6db28[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xd6db88[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xd71ff0[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0xd721f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xd72358[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xd72468[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xd72528[shape=record, label="  ret i32 0"];
	Node0xd6cd68 -> Node0xd6cde8;
	Node0xd6cde8 -> Node0xd6ce78;
	Node0xd6ce78 -> Node0xd6ced8;
	Node0xd6ced8 -> Node0xd6d358;
	Node0xd6d358 -> Node0xd6d438;
	Node0xd6d438 -> Node0xd6d538;
	Node0xd6d538 -> Node0xd6d5f8;
	Node0xd6d5f8 -> Node0xd6d6a8;
	Node0xd6d6a8 -> Node0xd6d908;
	Node0xd6d908 -> Node0xd6d9c8;
	Node0xd6d9c8 -> Node0xd6db28;
	Node0xd6db28 -> Node0xd6db88;
	Node0xd6db88 -> Node0xd71ff0;
	Node0xd71ff0 -> Node0xd721f8;
	Node0xd721f8 -> Node0xd72358;
	Node0xd72358 -> Node0xd72468;
	Node0xd72468 -> Node0xd72528;
edge [color=red]
	Node0xd6cd68 -> Node0xd6ced8;
	Node0xd6ced8 -> Node0xd6d358;
	Node0xd6cde8 -> Node0xd6d438;
	Node0xd6d438 -> Node0xd6d538;
	Node0xd6ce78 -> Node0xd6d5f8;
	Node0xd6d5f8 -> Node0xd6d6a8;
	Node0xd6cd68 -> Node0xd6d908;
	Node0xd6cde8 -> Node0xd6d908;
	Node0xd6ce78 -> Node0xd6d908;
	Node0xd6cd68 -> Node0xd6d9c8;
	Node0xd6cde8 -> Node0xd6db28;
	Node0xd6ce78 -> Node0xd6db88;
	Node0xd6d9c8 -> Node0xd71ff0;
	Node0xd6db28 -> Node0xd71ff0;
	Node0xd6db88 -> Node0xd71ff0;
	Node0xd6d5f8 -> Node0xd721f8;
	Node0xd6d438 -> Node0xd72358;
	Node0xd6ced8 -> Node0xd72468;
}
