; ModuleID = '../.././c_source_file/0952_path_condition_crackme.c'
source_filename = "../.././c_source_file/0952_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = and i32 %7, %2
  %9 = and i32 %8, %0
  %10 = xor i32 %0, -1
  %11 = or i32 %7, %2
  %12 = and i32 %11, %10
  %13 = or i32 %9, %12
  %14 = xor i32 %2, -1
  %15 = and i32 %14, %1
  %16 = xor i32 %15, %0
  %17 = shl i32 %16, 1
  %18 = sub i32 %13, %17
  %19 = xor i32 %4, -1
  %20 = or i32 %5, %3
  %21 = or i32 %20, %19
  %22 = add i32 %18, %21
  %23 = and i32 %14, %0
  %24 = and i32 %2, %1
  %25 = or i32 %23, %24
  %26 = or i32 %1, %0
  %27 = xor i32 %2, %1
  %28 = xor i32 %27, -1
  %29 = and i32 %26, %28
  %30 = xor i32 %15, -1
  %31 = or i32 %30, %0
  %32 = or i32 %2, %1
  %33 = and i32 %30, %10
  %34 = xor i32 %26, -1
  %35 = or i32 %27, %34
  %36 = and i32 %1, %0
  %37 = xor i32 %36, -1
  %38 = xor i32 %37, %2
  %39 = xor i32 %1, %0
  %40 = xor i32 %39, -1
  %41 = xor i32 %2, %0
  %42 = and i32 %41, %40
  %43 = and i32 %41, %39
  %44 = and i32 %28, %0
  %45 = or i32 %24, %0
  %46 = xor i32 %41, -1
  %47 = and i32 %46, %1
  %48 = or i32 %46, %34
  %49 = xor i32 %24, %0
  %50 = add i32 %27, 1
  %51 = xor i32 %32, %36
  %52 = and i32 %30, %0
  %53 = and i32 %2, %0
  %54 = xor i32 %53, -1
  %55 = and i32 %54, %1
  %56 = xor i32 %32, -1
  %57 = or i32 %56, %10
  %58 = or i32 %14, %0
  %59 = xor i32 %58, -1
  %60 = or i32 %59, %40
  %61 = or i32 %30, %10
  %62 = xor i32 %53, %32
  %63 = xor i32 %23, -1
  %64 = and i32 %63, %7
  %65 = and i32 %7, %0
  %66 = xor i32 %65, -1
  %67 = and i32 %41, %66
  %68 = and i32 %37, %2
  %69 = and i32 %54, %40
  %70 = shl i32 %69, 1
  %71 = or i32 %41, %1
  %72 = and i32 %24, %10
  %73 = and i32 %32, %0
  %74 = or i32 %72, %73
  %75 = or i32 %39, %46
  %76 = or i32 %7, %0
  %77 = xor i32 %76, -1
  %78 = shl i32 %77, 1
  %79 = or i32 %41, %77
  %80 = or i32 %14, %1
  %81 = or i32 %80, %10
  %82 = xor i32 %53, %76
  %83 = shl i32 %82, 1
  %84 = and i32 %24, %0
  %85 = and i32 %27, %10
  %86 = xor i32 %84, -1
  %87 = xor i32 %85, %86
  %88 = or i32 %2, %0
  %89 = and i32 %88, %1
  %90 = shl i32 %63, 1
  %91 = xor i32 %9, -1
  %92 = xor i32 %12, %91
  %93 = and i32 %40, %2
  %94 = and i32 %27, %26
  %95 = xor i32 %53, %26
  %96 = or i32 %34, %2
  %97 = or i32 %36, %59
  %98 = and i32 %66, %2
  %99 = or i32 %28, %0
  %100 = xor i32 %27, %0
  %101 = xor i32 %100, %91
  %102 = and i32 %27, %0
  %103 = or i32 %72, %102
  %104 = xor i32 %32, %0
  %105 = xor i32 %104, %86
  %106 = or i32 %14, %40
  %107 = or i32 %46, %7
  %108 = xor i32 %88, %1
  %109 = and i32 %80, %10
  %110 = or i32 %23, %7
  %111 = or i32 %24, %65
  %112 = or i32 %24, %10
  %113 = shl i32 %112, 1
  %114 = or i32 %27, %36
  %115 = xor i32 %53, %30
  %116 = shl i32 %115, 1
  %117 = and i32 %14, %40
  %118 = and i32 %63, %40
  %119 = shl i32 %118, 1
  %120 = and i32 %27, %37
  %121 = xor i32 %80, %36
  %122 = xor i32 %65, %30
  %123 = and i32 %76, %46
  %124 = xor i32 %24, -1
  %125 = and i32 %124, %10
  %126 = or i32 %53, %56
  %127 = or i32 %46, %77
  %128 = or i32 %41, %34
  %129 = xor i32 %11, %0
  %130 = or i32 %9, %129
  %131 = or i32 %41, %65
  %132 = and i32 %58, %1
  %133 = or i32 %53, %1
  %134 = or i32 %53, %39
  %135 = and i32 %80, %0
  %136 = shl i32 %135, 1
  %137 = shl i32 %65, 1
  %138 = and i32 %41, %76
  %139 = xor i32 %80, -1
  %140 = add i32 %80, 1
  %141 = xor i32 %23, %124
  %142 = xor i32 %65, %2
  %143 = or i32 %36, %14
  %144 = or i32 %15, %65
  %145 = and i32 %39, %54
  %146 = or i32 %36, %28
  %147 = or i32 %27, %0
  %148 = xor i32 %147, -1
  %149 = or i32 %9, %148
  %150 = shl i32 %30, 1
  %151 = and i32 %8, %10
  %152 = or i32 %27, %10
  %153 = xor i32 %151, %152
  %154 = and i32 %88, %40
  %155 = and i32 %11, %0
  %156 = or i32 %151, %155
  %157 = or i32 %46, %1
  %158 = xor i32 %152, 2147483647
  %159 = or i32 %158, %151
  %160 = shl i32 %159, 1
  %161 = or i32 %80, %0
  %162 = xor i32 %124, %0
  %163 = and i32 %28, %66
  %164 = or i32 %53, %40
  %165 = or i32 %39, %59
  %166 = or i32 %139, %0
  %167 = or i32 %53, %34
  %168 = or i32 %36, %56
  %169 = xor i32 %88, %36
  %170 = shl i32 %169, 1
  %171 = or i32 %36, %2
  %172 = or i32 %53, %77
  %173 = and i32 %26, %46
  %174 = or i32 %59, %7
  %175 = and i32 %54, %7
  %176 = xor i32 %88, -1
  %177 = xor i32 %176, %1
  %178 = xor i32 %26, %2
  %179 = or i32 %41, %36
  %180 = or i32 %15, %0
  %181 = xor i32 %129, %91
  %182 = or i32 %41, %40
  %183 = or i32 %65, %14
  %184 = xor i32 %59, %1
  %185 = or i32 %46, %40
  %186 = and i32 %46, %7
  %187 = and i32 %88, %7
  %188 = shl i32 %187, 1
  %189 = or i32 %32, %10
  %190 = and i32 %39, %14
  %191 = or i32 %176, %7
  %192 = xor i32 %84, %100
  %193 = or i32 %14, %77
  %194 = shl i32 %193, 1
  %195 = or i32 %23, %139
  %196 = and i32 %63, %1
  %197 = or i32 %176, %40
  %198 = or i32 %36, %46
  %199 = xor i32 %77, %2
  %200 = xor i32 %28, %0
  %201 = or i32 %9, %100
  %202 = and i32 %39, %63
  %203 = or i32 %41, %39
  %204 = xor i32 %80, %0
  %205 = or i32 %124, %10
  %206 = shl i32 %205, 1
  %207 = and i32 %32, %10
  %208 = xor i32 %65, %124
  %209 = xor i32 %73, -1
  %210 = xor i32 %72, %209
  %211 = shl i32 %147, 1
  %212 = and i32 %27, %76
  %213 = or i32 %176, %1
  %214 = xor i32 %63, %1
  %215 = or i32 %39, %176
  %216 = or i32 %36, %139
  %217 = xor i32 %23, %1
  %218 = xor i32 %66, %2
  %219 = shl i32 %218, 1
  %220 = xor i32 %58, %1
  %221 = or i32 %15, %10
  %222 = or i32 %41, %7
  %223 = and i32 %41, %7
  %224 = xor i32 %54, %1
  %225 = shl i32 %224, 1
  %226 = or i32 %53, %15
  %227 = or i32 %56, %0
  %228 = shl i32 %227, 1
  %229 = and i32 %28, %37
  %230 = or i32 %84, %85
  %231 = and i32 %56, %10
  %232 = shl i32 %231, 3
  %233 = and i32 %15, %10
  %234 = mul i32 %233, 15
  %235 = and i32 %56, %0
  %236 = and i32 %15, %0
  %237 = mul i32 %236, 7
  %238 = and i32 %139, %10
  %239 = and i32 %139, %0
  %240 = mul i32 %239, 21
  %241 = and i32 %5, %4
  %242 = or i32 %4, %3
  %243 = xor i32 %242, -1
  %244 = or i32 %241, %243
  %245 = and i32 %5, %3
  %246 = and i32 %245, %4
  %247 = and i32 %20, %19
  %248 = xor i32 %246, -1
  %249 = xor i32 %247, %248
  %250 = xor i32 %5, -1
  %251 = or i32 %250, %4
  %252 = xor i32 %251, -1
  %253 = xor i32 %4, %3
  %254 = xor i32 %253, -1
  %255 = or i32 %252, %254
  %256 = xor i32 %251, %3
  %257 = xor i32 %3, -1
  %258 = and i32 %257, %4
  %259 = xor i32 %258, -1
  %260 = xor i32 %20, %4
  %261 = xor i32 %260, %248
  %262 = and i32 %4, %3
  %263 = xor i32 %20, %262
  %264 = xor i32 %5, %3
  %265 = xor i32 %264, -1
  %266 = xor i32 %262, %5
  %267 = xor i32 %5, %4
  %268 = and i32 %267, %257
  %269 = and i32 %267, %254
  %270 = and i32 %245, %19
  %271 = and i32 %20, %4
  %272 = xor i32 %270, -1
  %273 = xor i32 %271, %272
  %274 = or i32 %20, %4
  %275 = xor i32 %267, -1
  %276 = or i32 %246, %247
  %277 = and i32 %275, %257
  %278 = shl i32 %277, 1
  %279 = xor i32 %241, -1
  %280 = and i32 %253, %279
  %281 = or i32 %253, %250
  %282 = and i32 %250, %254
  %283 = xor i32 %243, %5
  %284 = or i32 %5, %4
  %285 = xor i32 %284, -1
  %286 = add i32 %284, 1
  %287 = or i32 %267, %243
  %288 = or i32 %257, %4
  %289 = xor i32 %288, -1
  %290 = or i32 %262, %252
  %291 = and i32 %267, %3
  %292 = shl i32 %291, 1
  %293 = or i32 %241, %257
  %294 = or i32 %250, %3
  %295 = or i32 %294, %19
  %296 = or i32 %252, %3
  %297 = and i32 %250, %3
  %298 = xor i32 %297, -1
  %299 = and i32 %298, %19
  %300 = and i32 %250, %4
  %301 = or i32 %300, %257
  %302 = shl i32 %301, 1
  %303 = and i32 %242, %250
  %304 = or i32 %264, %289
  %305 = shl i32 %304, 1
  %306 = xor i32 %20, -1
  %307 = or i32 %262, %306
  %308 = and i32 %288, %275
  %309 = or i32 %275, %289
  %310 = xor i32 %297, %4
  %311 = or i32 %250, %254
  %312 = and i32 %284, %3
  %313 = and i32 %288, %5
  %314 = or i32 %298, %4
  %315 = shl i32 %314, 1
  %316 = and i32 %257, %5
  %317 = and i32 %316, %4
  %318 = or i32 %264, %4
  %319 = xor i32 %318, -1
  %320 = or i32 %317, %319
  %321 = and i32 %253, %5
  %322 = or i32 %254, %5
  %323 = xor i32 %294, %4
  %324 = or i32 %275, %3
  %325 = xor i32 %264, %4
  %326 = xor i32 %246, %325
  %327 = xor i32 %300, -1
  %328 = and i32 %327, %257
  %329 = and i32 %251, %257
  %330 = or i32 %264, %19
  %331 = and i32 %264, %4
  %332 = or i32 %270, %331
  %333 = or i32 %275, %243
  %334 = add i32 %253, 1
  %335 = and i32 %275, %259
  %336 = or i32 %253, %285
  %337 = xor i32 %245, -1
  %338 = and i32 %337, %4
  %339 = and i32 %275, %254
  %340 = xor i32 %327, %3
  %341 = shl i32 %340, 1
  %342 = or i32 %285, %3
  %343 = or i32 %250, %243
  %344 = and i32 %264, %19
  %345 = xor i32 %344, %248
  %346 = or i32 %337, %19
  %347 = add i32 %300, 1
  %348 = or i32 %275, %257
  %349 = or i32 %300, %3
  %350 = or i32 %297, %19
  %351 = xor i32 %241, %3
  %352 = and i32 %294, %19
  %353 = shl i32 %352, 1
  %354 = xor i32 %288, %5
  %355 = xor i32 %251, %262
  %356 = or i32 %258, %5
  %357 = shl i32 %356, 1
  %358 = and i32 %264, %242
  %359 = xor i32 %285, %3
  %360 = or i32 %245, %258
  %361 = or i32 %257, %5
  %362 = and i32 %361, %19
  %363 = or i32 %317, %362
  %364 = or i32 %241, %3
  %365 = xor i32 %262, -1
  %366 = and i32 %365, %5
  %367 = xor i32 %331, %272
  %368 = or i32 %275, %254
  %369 = or i32 %245, %4
  %370 = shl i32 %369, 1
  %371 = xor i32 %306, %4
  %372 = and i32 %284, %257
  %373 = and i32 %264, %365
  %374 = and i32 %267, %253
  %375 = or i32 %337, %4
  %376 = or i32 %267, %3
  %377 = or i32 %262, %265
  %378 = or i32 %298, %19
  %379 = and i32 %267, %288
  %380 = xor i32 %241, %242
  %381 = or i32 %253, %275
  %382 = and i32 %284, %253
  %383 = or i32 %265, %19
  %384 = or i32 %265, %4
  %385 = or i32 %317, %325
  %386 = and i32 %316, %19
  %387 = and i32 %361, %4
  %388 = or i32 %386, %387
  %389 = shl i32 %388, 1
  %390 = xor i32 %245, %4
  %391 = and i32 %242, %5
  %392 = or i32 %306, %19
  %393 = add i32 %242, 1
  %394 = and i32 %288, %265
  %395 = and i32 %279, %3
  %396 = and i32 %275, %365
  %397 = and i32 %242, %275
  %398 = and i32 %265, %19
  %399 = or i32 %252, %257
  %400 = shl i32 %399, 2
  %401 = and i32 %253, %275
  %402 = and i32 %265, %365
  %403 = or i32 %285, %254
  %404 = or i32 %241, %306
  %405 = and i32 %284, %254
  %406 = or i32 %306, %4
  %407 = xor i32 %294, -1
  %408 = or i32 %262, %407
  %409 = or i32 %267, %253
  %410 = and i32 %251, %253
  %411 = or i32 %300, %245
  %412 = shl i32 %411, 1
  %413 = xor i32 %386, %330
  %414 = xor i32 %387, -1
  %415 = xor i32 %386, %414
  %416 = xor i32 %317, %318
  %417 = and i32 %254, %5
  %418 = or i32 %297, %4
  %419 = and i32 %264, %288
  %420 = xor i32 %337, %4
  %421 = or i32 %407, %4
  %422 = or i32 %267, %289
  %423 = or i32 %246, %344
  %424 = xor i32 %258, %298
  %425 = and i32 %242, %265
  %426 = xor i32 %265, %4
  %427 = and i32 %279, %254
  %428 = or i32 %294, %4
  %429 = shl i32 %428, 1
  %430 = xor i32 %258, %337
  %431 = or i32 %270, %271
  %432 = and i32 %267, %259
  %433 = or i32 %289, %5
  %434 = xor i32 %325, -1
  %435 = xor i32 %317, %434
  %436 = xor i32 %407, %4
  %437 = shl i32 %436, 2
  %438 = or i32 %241, %297
  %439 = xor i32 %361, %4
  %440 = or i32 %317, %439
  %441 = shl i32 %331, 1
  %442 = or i32 %262, %250
  %443 = shl i32 %442, 1
  %444 = or i32 %253, %252
  %445 = add i32 %20, 1
  %446 = or i32 %262, %275
  %447 = and i32 %265, %259
  %448 = xor i32 %294, %262
  %449 = and i32 %251, %3
  %450 = add i32 %297, 1
  %451 = and i32 %298, %4
  %452 = or i32 %253, %5
  %453 = or i32 %407, %19
  %454 = or i32 %300, %407
  %455 = and i32 %327, %3
  %456 = or i32 %265, %243
  %457 = xor i32 %241, %298
  %458 = xor i32 %284, %262
  %459 = or i32 %264, %243
  %460 = and i32 %251, %254
  %461 = xor i32 %300, %3
  %462 = or i32 %300, %253
  %463 = or i32 %241, %289
  %464 = and i32 %279, %257
  %465 = or i32 %250, %289
  %466 = add i32 %251, 1
  %467 = and i32 %253, %327
  %468 = and i32 %294, %4
  %469 = or i32 %246, %434
  %470 = and i32 %337, %19
  %471 = or i32 %300, %254
  %472 = and i32 %275, %3
  %473 = and i32 %259, %5
  %474 = or i32 %267, %258
  %475 = and i32 %267, %242
  %476 = and i32 %265, %4
  %477 = or i32 %285, %257
  %478 = shl i32 %477, 1
  %479 = xor i32 %298, %4
  %480 = xor i32 %241, %288
  %481 = or i32 %265, %289
  %482 = xor i32 %365, %5
  %483 = or i32 %258, %250
  %484 = or i32 %267, %254
  %485 = or i32 %241, %253
  %486 = and i32 %250, %365
  %487 = xor i32 %362, -1
  %488 = xor i32 %317, %487
  %489 = shl i32 %262, 1
  %490 = or i32 %258, %275
  %491 = or i32 %264, %258
  %492 = or i32 %297, %258
  %493 = or i32 %267, %262
  %494 = and i32 %250, %259
  %495 = and i32 %306, %19
  %496 = mul i32 %495, 19
  %497 = and i32 %297, %19
  %498 = and i32 %306, %4
  %499 = mul i32 %498, 6
  %500 = and i32 %297, %4
  %501 = mul i32 %500, -13
  %502 = and i32 %407, %19
  %503 = mul i32 %502, 20
  %504 = and i32 %407, %4
  %505 = add i32 %171, %190
  %506 = add i32 %505, %96
  %507 = add i32 %506, %68
  %508 = add i32 %507, %38
  %509 = add i32 %508, %222
  %510 = add i32 %509, %208
  %511 = add i32 %510, %200
  %512 = add i32 %511, %164
  %513 = add i32 %512, %141
  %514 = add i32 %513, %134
  %515 = add i32 %514, %125
  %516 = add i32 %515, %71
  %517 = add i32 %516, %289
  %518 = add i32 %517, %192
  %519 = add i32 %518, %103
  %520 = add i32 %519, %473
  %521 = add i32 %520, %337
  %522 = add i32 %521, %297
  %523 = add i32 %522, %281
  %524 = add i32 %80, %34
  %525 = add i32 %524, %182
  %526 = sub i32 %525, %131
  %527 = sub i32 %526, %92
  %528 = add i32 %527, %282
  %529 = sub i32 %528, %325
  %530 = sub i32 %529, %504
  %531 = mul i32 %530, 3
  %532 = add i32 %401, %433
  %533 = shl i32 %532, 2
  %534 = add i32 %246, %84
  %535 = mul i32 %534, 18
  %536 = sub i32 %72, %497
  %537 = mul i32 %536, 9
  %538 = add i32 %238, %235
  %539 = mul i32 %538, 24
  %540 = add i32 %523, %267
  %541 = add i32 %540, %493
  %542 = add i32 %541, %271
  %543 = add i32 %542, %462
  %544 = add i32 %543, %459
  %545 = add i32 %544, %396
  %546 = add i32 %545, %395
  %547 = add i32 %546, %374
  %548 = add i32 %547, %359
  %549 = add i32 %548, %333
  %550 = add i32 %549, %308
  %551 = add i32 %550, %268
  %552 = add i32 %551, %256
  %553 = add i32 %552, %255
  %554 = add i32 %553, %431
  %555 = shl i32 %554, 1
  %556 = and i32 %76, %14
  %557 = sub i32 %556, %167
  %558 = sub i32 %557, %94
  %559 = add i32 %558, %64
  %560 = sub i32 %559, %311
  %561 = add i32 %560, %491
  %562 = sub i32 %561, %392
  %563 = sub i32 %562, %293
  %564 = sub i32 %563, %276
  %565 = mul i32 %564, 5
  %566 = add i32 %65, %1
  %567 = add i32 %566, 3
  %568 = add i32 %567, %2
  %569 = sub i32 %568, %76
  %570 = sub i32 %569, %39
  %571 = sub i32 %570, %32
  %572 = add i32 %571, %50
  %573 = sub i32 %572, %78
  %574 = sub i32 %573, %93
  %575 = sub i32 %574, %98
  %576 = add i32 %575, %23
  %577 = sub i32 %576, %106
  %578 = sub i32 %577, %117
  %579 = add i32 %578, %27
  %580 = sub i32 %579, %24
  %581 = sub i32 %580, %137
  %582 = add i32 %581, %140
  %583 = add i32 %582, %142
  %584 = sub i32 %583, %143
  %585 = add i32 %584, %56
  %586 = sub i32 %585, %178
  %587 = add i32 %586, %183
  %588 = add i32 %587, %199
  %589 = add i32 %588, %53
  %590 = sub i32 %589, %29
  %591 = add i32 %590, %25
  %592 = sub i32 %591, %31
  %593 = add i32 %592, %33
  %594 = sub i32 %593, %35
  %595 = add i32 %594, %42
  %596 = add i32 %595, %43
  %597 = add i32 %596, %44
  %598 = add i32 %597, %45
  %599 = add i32 %598, %47
  %600 = sub i32 %599, %48
  %601 = add i32 %600, %49
  %602 = sub i32 %601, %51
  %603 = add i32 %602, %52
  %604 = add i32 %603, %55
  %605 = sub i32 %604, %57
  %606 = add i32 %605, %60
  %607 = add i32 %606, %61
  %608 = sub i32 %607, %62
  %609 = add i32 %608, %67
  %610 = sub i32 %609, %75
  %611 = sub i32 %610, %79
  %612 = add i32 %611, %81
  %613 = sub i32 %612, %89
  %614 = sub i32 %613, %90
  %615 = add i32 %614, %95
  %616 = sub i32 %615, %97
  %617 = sub i32 %616, %99
  %618 = sub i32 %617, %107
  %619 = add i32 %618, %108
  %620 = add i32 %619, %109
  %621 = sub i32 %620, %110
  %622 = sub i32 %621, %111
  %623 = sub i32 %622, %114
  %624 = sub i32 %623, %120
  %625 = sub i32 %624, %121
  %626 = sub i32 %625, %122
  %627 = add i32 %626, %123
  %628 = add i32 %627, %85
  %629 = sub i32 %628, %126
  %630 = add i32 %629, %127
  %631 = add i32 %630, %128
  %632 = add i32 %631, %132
  %633 = add i32 %632, %133
  %634 = add i32 %633, %138
  %635 = sub i32 %634, %144
  %636 = sub i32 %635, %145
  %637 = add i32 %636, %146
  %638 = sub i32 %637, %150
  %639 = sub i32 %638, %154
  %640 = add i32 %639, %157
  %641 = sub i32 %640, %161
  %642 = sub i32 %641, %162
  %643 = sub i32 %642, %163
  %644 = add i32 %643, %165
  %645 = sub i32 %644, %166
  %646 = sub i32 %645, %168
  %647 = sub i32 %646, %172
  %648 = sub i32 %647, %173
  %649 = add i32 %648, %174
  %650 = sub i32 %649, %175
  %651 = sub i32 %650, %177
  %652 = add i32 %651, %179
  %653 = add i32 %652, %180
  %654 = add i32 %653, %184
  %655 = add i32 %654, %185
  %656 = add i32 %655, %186
  %657 = sub i32 %656, %189
  %658 = sub i32 %657, %191
  %659 = add i32 %658, %73
  %660 = sub i32 %659, %194
  %661 = sub i32 %660, %195
  %662 = sub i32 %661, %196
  %663 = add i32 %662, %197
  %664 = add i32 %663, %198
  %665 = sub i32 %664, %202
  %666 = sub i32 %665, %203
  %667 = add i32 %666, %204
  %668 = sub i32 %667, %207
  %669 = sub i32 %668, %104
  %670 = sub i32 %669, %212
  %671 = add i32 %670, %213
  %672 = add i32 %671, %214
  %673 = sub i32 %672, %102
  %674 = sub i32 %673, %215
  %675 = sub i32 %674, %216
  %676 = add i32 %675, %217
  %677 = sub i32 %676, %219
  %678 = sub i32 %677, %220
  %679 = add i32 %678, %221
  %680 = sub i32 %679, %223
  %681 = sub i32 %680, %226
  %682 = sub i32 %681, %229
  %683 = add i32 %682, 1
  %684 = sub i32 %683, %70
  %685 = add i32 %684, %74
  %686 = sub i32 %685, %83
  %687 = sub i32 %686, %87
  %688 = sub i32 %687, %101
  %689 = add i32 %688, %105
  %690 = sub i32 %689, %113
  %691 = sub i32 %690, %116
  %692 = sub i32 %691, %119
  %693 = add i32 %692, %130
  %694 = sub i32 %693, %136
  %695 = add i32 %694, %149
  %696 = sub i32 %695, %153
  %697 = sub i32 %696, %156
  %698 = sub i32 %697, %170
  %699 = add i32 %698, %181
  %700 = sub i32 %699, %188
  %701 = sub i32 %700, %201
  %702 = sub i32 %701, %206
  %703 = sub i32 %702, %210
  %704 = sub i32 %703, %211
  %705 = sub i32 %704, %225
  %706 = sub i32 %705, %228
  %707 = sub i32 %706, %230
  %708 = add i32 %707, %232
  %709 = add i32 %708, %234
  %710 = add i32 %709, %237
  %711 = add i32 %710, %240
  %712 = add i32 %711, %253
  %713 = add i32 %712, %334
  %714 = add i32 %713, %5
  %715 = add i32 %714, %393
  %716 = add i32 %715, %365
  %717 = sub i32 %716, %242
  %718 = sub i32 %717, %266
  %719 = sub i32 %718, %283
  %720 = add i32 %719, %286
  %721 = add i32 %720, %303
  %722 = sub i32 %721, %313
  %723 = sub i32 %722, %321
  %724 = add i32 %723, %322
  %725 = add i32 %724, %343
  %726 = add i32 %725, %347
  %727 = sub i32 %726, %354
  %728 = sub i32 %727, %366
  %729 = add i32 %728, %391
  %730 = sub i32 %729, %417
  %731 = add i32 %730, %294
  %732 = add i32 %731, %445
  %733 = add i32 %732, %450
  %734 = add i32 %733, %452
  %735 = sub i32 %734, %300
  %736 = add i32 %735, %465
  %737 = add i32 %736, %466
  %738 = add i32 %737, %284
  %739 = add i32 %738, %245
  %740 = add i32 %739, %482
  %741 = add i32 %740, %483
  %742 = sub i32 %741, %486
  %743 = sub i32 %742, %489
  %744 = sub i32 %743, %494
  %745 = add i32 %744, %539
  %746 = sub i32 %745, %160
  %747 = add i32 %746, %244
  %748 = add i32 %747, %263
  %749 = add i32 %748, %269
  %750 = add i32 %749, %274
  %751 = add i32 %750, %280
  %752 = sub i32 %751, %287
  %753 = add i32 %752, %290
  %754 = add i32 %753, %295
  %755 = sub i32 %754, %296
  %756 = sub i32 %755, %299
  %757 = add i32 %756, %307
  %758 = sub i32 %757, %309
  %759 = sub i32 %758, %310
  %760 = sub i32 %759, %260
  %761 = sub i32 %760, %312
  %762 = sub i32 %761, %323
  %763 = sub i32 %762, %324
  %764 = add i32 %763, %328
  %765 = sub i32 %764, %329
  %766 = sub i32 %765, %330
  %767 = add i32 %766, %335
  %768 = add i32 %767, %336
  %769 = add i32 %768, %338
  %770 = add i32 %769, %339
  %771 = sub i32 %770, %342
  %772 = add i32 %771, %346
  %773 = sub i32 %772, %348
  %774 = sub i32 %773, %349
  %775 = sub i32 %774, %350
  %776 = add i32 %775, %351
  %777 = add i32 %776, %247
  %778 = add i32 %777, %355
  %779 = sub i32 %778, %357
  %780 = add i32 %779, %358
  %781 = sub i32 %780, %360
  %782 = add i32 %781, %364
  %783 = add i32 %782, %368
  %784 = sub i32 %783, %371
  %785 = add i32 %784, %372
  %786 = sub i32 %785, %373
  %787 = sub i32 %786, %375
  %788 = sub i32 %787, %376
  %789 = sub i32 %788, %377
  %790 = sub i32 %789, %378
  %791 = sub i32 %790, %379
  %792 = add i32 %791, %380
  %793 = sub i32 %792, %381
  %794 = sub i32 %793, %382
  %795 = sub i32 %794, %383
  %796 = add i32 %795, %384
  %797 = add i32 %796, %390
  %798 = add i32 %797, %394
  %799 = add i32 %798, %344
  %800 = add i32 %799, %397
  %801 = sub i32 %800, %398
  %802 = add i32 %801, %402
  %803 = add i32 %802, %403
  %804 = add i32 %803, %404
  %805 = sub i32 %804, %405
  %806 = add i32 %805, %406
  %807 = sub i32 %806, %408
  %808 = add i32 %807, %409
  %809 = sub i32 %808, %410
  %810 = add i32 %809, %418
  %811 = add i32 %810, %419
  %812 = sub i32 %811, %420
  %813 = add i32 %812, %421
  %814 = add i32 %813, %422
  %815 = add i32 %814, %424
  %816 = add i32 %815, %425
  %817 = sub i32 %816, %426
  %818 = add i32 %817, %427
  %819 = add i32 %818, %430
  %820 = add i32 %819, %432
  %821 = add i32 %820, %438
  %822 = sub i32 %821, %443
  %823 = add i32 %822, %444
  %824 = sub i32 %823, %446
  %825 = add i32 %824, %447
  %826 = add i32 %825, %448
  %827 = sub i32 %826, %449
  %828 = sub i32 %827, %451
  %829 = add i32 %828, %453
  %830 = sub i32 %829, %454
  %831 = add i32 %830, %455
  %832 = sub i32 %831, %456
  %833 = add i32 %832, %457
  %834 = sub i32 %833, %458
  %835 = sub i32 %834, %460
  %836 = add i32 %835, %461
  %837 = sub i32 %836, %463
  %838 = add i32 %837, %464
  %839 = sub i32 %838, %467
  %840 = add i32 %839, %468
  %841 = sub i32 %840, %470
  %842 = add i32 %841, %471
  %843 = sub i32 %842, %472
  %844 = add i32 %843, %474
  %845 = add i32 %844, %475
  %846 = add i32 %845, %476
  %847 = sub i32 %846, %479
  %848 = sub i32 %847, %480
  %849 = add i32 %848, %481
  %850 = add i32 %849, %484
  %851 = sub i32 %850, %485
  %852 = sub i32 %851, %490
  %853 = add i32 %852, %492
  %854 = sub i32 %853, %249
  %855 = add i32 %854, %261
  %856 = add i32 %855, %273
  %857 = sub i32 %856, %278
  %858 = sub i32 %857, %292
  %859 = sub i32 %858, %302
  %860 = sub i32 %859, %305
  %861 = sub i32 %860, %315
  %862 = sub i32 %861, %320
  %863 = sub i32 %862, %326
  %864 = add i32 %863, %332
  %865 = sub i32 %864, %341
  %866 = add i32 %865, %345
  %867 = sub i32 %866, %353
  %868 = sub i32 %867, %363
  %869 = sub i32 %868, %367
  %870 = sub i32 %869, %370
  %871 = sub i32 %870, %385
  %872 = sub i32 %871, %400
  %873 = sub i32 %872, %412
  %874 = add i32 %873, %413
  %875 = sub i32 %874, %415
  %876 = add i32 %875, %416
  %877 = sub i32 %876, %423
  %878 = sub i32 %877, %429
  %879 = sub i32 %878, %435
  %880 = sub i32 %879, %437
  %881 = sub i32 %880, %440
  %882 = sub i32 %881, %441
  %883 = sub i32 %882, %469
  %884 = sub i32 %883, %478
  %885 = add i32 %884, %488
  %886 = add i32 %885, %496
  %887 = add i32 %886, %499
  %888 = add i32 %887, %501
  %889 = add i32 %888, %503
  %890 = sub i32 %889, %389
  %891 = add i32 %890, %533
  %892 = add i32 %891, %535
  %893 = add i32 %892, %537
  %894 = add i32 %893, %531
  %895 = add i32 %894, %565
  %896 = add i32 %895, %555
  %897 = icmp eq i32 %22, %896
  %898 = select i1 %897, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %899 = tail call i32 @puts(i8* nonnull dereferenceable(1) %898)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
