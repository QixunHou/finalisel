digraph "DFG for'crackme' function" {
	Node0x121fb70[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x12201f0[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x1220290[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0x1220300[shape=record, label="  %8 = and i32 %7, %3"];
	Node0x1220370[shape=record, label="  %9 = xor i32 %8, -1"];
	Node0x1220410[shape=record, label="  %10 = mul i32 %9, -3"];
	Node0x1220480[shape=record, label="  %11 = xor i32 %3, %0"];
	Node0x12204f0[shape=record, label="  %12 = xor i32 %11, -1"];
	Node0x1220560[shape=record, label="  %13 = add i32 %6, %12"];
	Node0x12205d0[shape=record, label="  %14 = add i32 %13, %10"];
	Node0x1220640[shape=record, label="  %15 = xor i32 %2, -1"];
	Node0x12206b0[shape=record, label="  %16 = or i32 %15, %1"];
	Node0x1220720[shape=record, label="  %17 = xor i32 %2, %1"];
	Node0x1220790[shape=record, label="  %18 = shl i32 %17, 1"];
	Node0x1220800[shape=record, label="  %19 = xor i32 %5, -1"];
	Node0x12208a0[shape=record, label="  %20 = mul i32 %19, 5"];
	Node0x1220910[shape=record, label="  %21 = xor i32 %16, -1"];
	Node0x1220980[shape=record, label="  %22 = and i32 %15, %1"];
	Node0x1220a20[shape=record, label="  %23 = shl i32 %22, 3"];
	Node0x1220a90[shape=record, label="  %24 = and i32 %2, %1"];
	Node0x1220b00[shape=record, label="  %25 = or i32 %7, %3"];
	Node0x1220b70[shape=record, label="  %26 = or i32 %3, %0"];
	Node0x1220c10[shape=record, label="  %27 = shl i32 %25, 2"];
	Node0x1220cb0[shape=record, label="  %28 = xor i32 %27, -4"];
	Node0x1220d20[shape=record, label="  %29 = and i32 %3, %0"];
	Node0x1220d90[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x1220e00[shape=record, label="  %31 = add i32 %24, %21"];
	Node0x1220ea0[shape=record, label="  %32 = mul i32 %31, 7"];
	Node0x1221120[shape=record, label="  %33 = sub i32 5, %16"];
	Node0x1221190[shape=record, label="  %34 = add i32 %33, %17"];
	Node0x1221200[shape=record, label="  %35 = add i32 %34, %3"];
	Node0x1221270[shape=record, label="  %36 = sub i32 %35, %18"];
	Node0x12212e0[shape=record, label="  %37 = add i32 %36, %20"];
	Node0x1221350[shape=record, label="  %38 = add i32 %37, %23"];
	Node0x12213c0[shape=record, label="  %39 = sub i32 %38, %25"];
	Node0x1221430[shape=record, label="  %40 = add i32 %39, %11"];
	Node0x12214a0[shape=record, label="  %41 = add i32 %40, %26"];
	Node0x1221510[shape=record, label="  %42 = sub i32 %41, %8"];
	Node0x1221580[shape=record, label="  %43 = sub i32 %42, %30"];
	Node0x12215f0[shape=record, label="  %44 = add i32 %43, %32"];
	Node0x1221660[shape=record, label="  %45 = sub i32 %44, %28"];
	Node0x12216d0[shape=record, label="  %46 = icmp eq i32 %14, %45"];
	Node0x11c0268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1221b70[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0x1221bc0[shape=record, label="  ret void"];
	Node0x121fb70 -> Node0x12201f0;
	Node0x12201f0 -> Node0x1220290;
	Node0x1220290 -> Node0x1220300;
	Node0x1220300 -> Node0x1220370;
	Node0x1220370 -> Node0x1220410;
	Node0x1220410 -> Node0x1220480;
	Node0x1220480 -> Node0x12204f0;
	Node0x12204f0 -> Node0x1220560;
	Node0x1220560 -> Node0x12205d0;
	Node0x12205d0 -> Node0x1220640;
	Node0x1220640 -> Node0x12206b0;
	Node0x12206b0 -> Node0x1220720;
	Node0x1220720 -> Node0x1220790;
	Node0x1220790 -> Node0x1220800;
	Node0x1220800 -> Node0x12208a0;
	Node0x12208a0 -> Node0x1220910;
	Node0x1220910 -> Node0x1220980;
	Node0x1220980 -> Node0x1220a20;
	Node0x1220a20 -> Node0x1220a90;
	Node0x1220a90 -> Node0x1220b00;
	Node0x1220b00 -> Node0x1220b70;
	Node0x1220b70 -> Node0x1220c10;
	Node0x1220c10 -> Node0x1220cb0;
	Node0x1220cb0 -> Node0x1220d20;
	Node0x1220d20 -> Node0x1220d90;
	Node0x1220d90 -> Node0x1220e00;
	Node0x1220e00 -> Node0x1220ea0;
	Node0x1220ea0 -> Node0x1221120;
	Node0x1221120 -> Node0x1221190;
	Node0x1221190 -> Node0x1221200;
	Node0x1221200 -> Node0x1221270;
	Node0x1221270 -> Node0x12212e0;
	Node0x12212e0 -> Node0x1221350;
	Node0x1221350 -> Node0x12213c0;
	Node0x12213c0 -> Node0x1221430;
	Node0x1221430 -> Node0x12214a0;
	Node0x12214a0 -> Node0x1221510;
	Node0x1221510 -> Node0x1221580;
	Node0x1221580 -> Node0x12215f0;
	Node0x12215f0 -> Node0x1221660;
	Node0x1221660 -> Node0x12216d0;
	Node0x12216d0 -> Node0x11c0268;
	Node0x11c0268 -> Node0x1221b70;
	Node0x1221b70 -> Node0x1221bc0;
edge [color=red]
	Node0x121fb70 -> Node0x12201f0;
	Node0x1220290 -> Node0x1220300;
	Node0x1220300 -> Node0x1220370;
	Node0x1220370 -> Node0x1220410;
	Node0x1220480 -> Node0x12204f0;
	Node0x12201f0 -> Node0x1220560;
	Node0x12204f0 -> Node0x1220560;
	Node0x1220560 -> Node0x12205d0;
	Node0x1220410 -> Node0x12205d0;
	Node0x1220640 -> Node0x12206b0;
	Node0x1220720 -> Node0x1220790;
	Node0x121fb70 -> Node0x1220800;
	Node0x1220800 -> Node0x12208a0;
	Node0x12206b0 -> Node0x1220910;
	Node0x1220640 -> Node0x1220980;
	Node0x1220980 -> Node0x1220a20;
	Node0x1220290 -> Node0x1220b00;
	Node0x1220b00 -> Node0x1220c10;
	Node0x1220c10 -> Node0x1220cb0;
	Node0x1220d20 -> Node0x1220d90;
	Node0x1220a90 -> Node0x1220e00;
	Node0x1220910 -> Node0x1220e00;
	Node0x1220e00 -> Node0x1220ea0;
	Node0x12206b0 -> Node0x1221120;
	Node0x1221120 -> Node0x1221190;
	Node0x1220720 -> Node0x1221190;
	Node0x1221190 -> Node0x1221200;
	Node0x1221200 -> Node0x1221270;
	Node0x1220790 -> Node0x1221270;
	Node0x1221270 -> Node0x12212e0;
	Node0x12208a0 -> Node0x12212e0;
	Node0x12212e0 -> Node0x1221350;
	Node0x1220a20 -> Node0x1221350;
	Node0x1221350 -> Node0x12213c0;
	Node0x1220b00 -> Node0x12213c0;
	Node0x12213c0 -> Node0x1221430;
	Node0x1220480 -> Node0x1221430;
	Node0x1221430 -> Node0x12214a0;
	Node0x1220b70 -> Node0x12214a0;
	Node0x12214a0 -> Node0x1221510;
	Node0x1220300 -> Node0x1221510;
	Node0x1221510 -> Node0x1221580;
	Node0x1220d90 -> Node0x1221580;
	Node0x1221580 -> Node0x12215f0;
	Node0x1220ea0 -> Node0x12215f0;
	Node0x12215f0 -> Node0x1221660;
	Node0x1220cb0 -> Node0x1221660;
	Node0x12205d0 -> Node0x12216d0;
	Node0x1221660 -> Node0x12216d0;
	Node0x12216d0 -> Node0x11c0268;
	Node0x11c0268 -> Node0x1221b70;
}
