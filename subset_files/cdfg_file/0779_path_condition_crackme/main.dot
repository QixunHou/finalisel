digraph "DFG for'main' function" {
	Node0xae9d28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xae9da8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xae9e38[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0xaea298[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xaea378[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0xaea498[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xaea6d0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0xaea788[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xaeb6f8[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xaebd80[shape=record, label="  %8 = or i32 %7, %6"];
	Node0xaebdf0[shape=record, label="  %9 = xor i32 %7, -1"];
	Node0xaebe60[shape=record, label="  %10 = sub i32 %9, %8"];
	Node0xaebed0[shape=record, label="  %11 = shl i32 %10, 1"];
	Node0xaebf40[shape=record, label="  %12 = and i32 %6, %9"];
	Node0xaebfb0[shape=record, label="  %13 = xor i32 %7, %6"];
	Node0xaec020[shape=record, label="  %14 = and i32 %7, %6"];
	Node0xaec090[shape=record, label="  %15 = or i32 %6, %9"];
	Node0xaec100[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0xaec170[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0xaec1e0[shape=record, label="  %18 = xor i32 %8, -1"];
	Node0xaec250[shape=record, label="  %19 = mul i32 %18, 5"];
	Node0xaec2c0[shape=record, label="  %20 = mul i32 %14, -3"];
	Node0xaec330[shape=record, label="  %21 = add i32 %12, %6"];
	Node0xaec3a0[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0xaec410[shape=record, label="  %23 = add i32 %7, 3"];
	Node0xaec480[shape=record, label="  %24 = sub i32 %23, %13"];
	Node0xaec4f0[shape=record, label="  %25 = add i32 %24, %14"];
	Node0xaec560[shape=record, label="  %26 = add i32 %25, %15"];
	Node0xaec5d0[shape=record, label="  %27 = add i32 %26, %17"];
	Node0xaec640[shape=record, label="  %28 = add i32 %27, %19"];
	Node0xaec6b0[shape=record, label="  %29 = add i32 %28, %20"];
	Node0xaec720[shape=record, label="  %30 = add i32 %29, %22"];
	Node0xaec790[shape=record, label="  %31 = icmp eq i32 %11, %30"];
	Node0xa8a9d8[shape=record, label="  %32 = select i1 %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xaeca30[shape=record, label="  %33 = call i32 @puts(i8* nonnull dereferenceable(1) %32) #5"];
	Node0xaecc88[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0xaecde8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0xaecea8[shape=record, label="  ret i32 0"];
	Node0xae9d28 -> Node0xae9da8;
	Node0xae9da8 -> Node0xae9e38;
	Node0xae9e38 -> Node0xaea298;
	Node0xaea298 -> Node0xaea378;
	Node0xaea378 -> Node0xaea498;
	Node0xaea498 -> Node0xaea6d0;
	Node0xaea6d0 -> Node0xaea788;
	Node0xaea788 -> Node0xaeb6f8;
	Node0xaeb6f8 -> Node0xaebd80;
	Node0xaebd80 -> Node0xaebdf0;
	Node0xaebdf0 -> Node0xaebe60;
	Node0xaebe60 -> Node0xaebed0;
	Node0xaebed0 -> Node0xaebf40;
	Node0xaebf40 -> Node0xaebfb0;
	Node0xaebfb0 -> Node0xaec020;
	Node0xaec020 -> Node0xaec090;
	Node0xaec090 -> Node0xaec100;
	Node0xaec100 -> Node0xaec170;
	Node0xaec170 -> Node0xaec1e0;
	Node0xaec1e0 -> Node0xaec250;
	Node0xaec250 -> Node0xaec2c0;
	Node0xaec2c0 -> Node0xaec330;
	Node0xaec330 -> Node0xaec3a0;
	Node0xaec3a0 -> Node0xaec410;
	Node0xaec410 -> Node0xaec480;
	Node0xaec480 -> Node0xaec4f0;
	Node0xaec4f0 -> Node0xaec560;
	Node0xaec560 -> Node0xaec5d0;
	Node0xaec5d0 -> Node0xaec640;
	Node0xaec640 -> Node0xaec6b0;
	Node0xaec6b0 -> Node0xaec720;
	Node0xaec720 -> Node0xaec790;
	Node0xaec790 -> Node0xa8a9d8;
	Node0xa8a9d8 -> Node0xaeca30;
	Node0xaeca30 -> Node0xaecc88;
	Node0xaecc88 -> Node0xaecde8;
	Node0xaecde8 -> Node0xaecea8;
edge [color=red]
	Node0xae9d28 -> Node0xae9e38;
	Node0xae9e38 -> Node0xaea298;
	Node0xae9da8 -> Node0xaea378;
	Node0xaea378 -> Node0xaea498;
	Node0xae9d28 -> Node0xaea6d0;
	Node0xae9da8 -> Node0xaea6d0;
	Node0xae9d28 -> Node0xaea788;
	Node0xae9da8 -> Node0xaeb6f8;
	Node0xaeb6f8 -> Node0xaebd80;
	Node0xaea788 -> Node0xaebd80;
	Node0xaeb6f8 -> Node0xaebdf0;
	Node0xaebdf0 -> Node0xaebe60;
	Node0xaebd80 -> Node0xaebe60;
	Node0xaebe60 -> Node0xaebed0;
	Node0xaea788 -> Node0xaebf40;
	Node0xaebdf0 -> Node0xaebf40;
	Node0xaeb6f8 -> Node0xaebfb0;
	Node0xaea788 -> Node0xaebfb0;
	Node0xaeb6f8 -> Node0xaec020;
	Node0xaea788 -> Node0xaec020;
	Node0xaea788 -> Node0xaec090;
	Node0xaebdf0 -> Node0xaec090;
	Node0xaec090 -> Node0xaec100;
	Node0xaec100 -> Node0xaec170;
	Node0xaebd80 -> Node0xaec1e0;
	Node0xaec1e0 -> Node0xaec250;
	Node0xaec020 -> Node0xaec2c0;
	Node0xaebf40 -> Node0xaec330;
	Node0xaea788 -> Node0xaec330;
	Node0xaec330 -> Node0xaec3a0;
	Node0xaeb6f8 -> Node0xaec410;
	Node0xaec410 -> Node0xaec480;
	Node0xaebfb0 -> Node0xaec480;
	Node0xaec480 -> Node0xaec4f0;
	Node0xaec020 -> Node0xaec4f0;
	Node0xaec4f0 -> Node0xaec560;
	Node0xaec090 -> Node0xaec560;
	Node0xaec560 -> Node0xaec5d0;
	Node0xaec170 -> Node0xaec5d0;
	Node0xaec5d0 -> Node0xaec640;
	Node0xaec250 -> Node0xaec640;
	Node0xaec640 -> Node0xaec6b0;
	Node0xaec2c0 -> Node0xaec6b0;
	Node0xaec6b0 -> Node0xaec720;
	Node0xaec3a0 -> Node0xaec720;
	Node0xaebed0 -> Node0xaec790;
	Node0xaec720 -> Node0xaec790;
	Node0xaec790 -> Node0xa8a9d8;
	Node0xa8a9d8 -> Node0xaeca30;
	Node0xaea378 -> Node0xaecc88;
	Node0xae9e38 -> Node0xaecde8;
}
