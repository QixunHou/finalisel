digraph "DFG for'main' function" {
	Node0x232b048[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x232b0c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x232b158[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x232b1b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x2331f18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2331ff8[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x23320f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23321b8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x2332268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x23324c8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x2332588[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x23334f8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x2333b68[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2333c60[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x2333e68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2333fc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x23340d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2334198[shape=record, label="  ret i32 0"];
	Node0x232b048 -> Node0x232b0c8;
	Node0x232b0c8 -> Node0x232b158;
	Node0x232b158 -> Node0x232b1b8;
	Node0x232b1b8 -> Node0x2331f18;
	Node0x2331f18 -> Node0x2331ff8;
	Node0x2331ff8 -> Node0x23320f8;
	Node0x23320f8 -> Node0x23321b8;
	Node0x23321b8 -> Node0x2332268;
	Node0x2332268 -> Node0x23324c8;
	Node0x23324c8 -> Node0x2332588;
	Node0x2332588 -> Node0x23334f8;
	Node0x23334f8 -> Node0x2333b68;
	Node0x2333b68 -> Node0x2333c60;
	Node0x2333c60 -> Node0x2333e68;
	Node0x2333e68 -> Node0x2333fc8;
	Node0x2333fc8 -> Node0x23340d8;
	Node0x23340d8 -> Node0x2334198;
edge [color=red]
	Node0x232b048 -> Node0x232b1b8;
	Node0x232b1b8 -> Node0x2331f18;
	Node0x232b0c8 -> Node0x2331ff8;
	Node0x2331ff8 -> Node0x23320f8;
	Node0x232b158 -> Node0x23321b8;
	Node0x23321b8 -> Node0x2332268;
	Node0x232b048 -> Node0x23324c8;
	Node0x232b0c8 -> Node0x23324c8;
	Node0x232b158 -> Node0x23324c8;
	Node0x232b048 -> Node0x2332588;
	Node0x232b0c8 -> Node0x23334f8;
	Node0x232b158 -> Node0x2333b68;
	Node0x2332588 -> Node0x2333c60;
	Node0x23334f8 -> Node0x2333c60;
	Node0x2333b68 -> Node0x2333c60;
	Node0x23321b8 -> Node0x2333e68;
	Node0x2331ff8 -> Node0x2333fc8;
	Node0x232b1b8 -> Node0x23340d8;
}
