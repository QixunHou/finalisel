digraph "DFG for'main' function" {
	Node0x124ed98[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x124ee18[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x124eea8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x124ef08[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x124efb8[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x124f3e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x124f4c8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x124f5c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x124f688[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x124f738[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x124f7f8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x124f8a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1249bd0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x124faa8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1250a18[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1251088[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x12510e8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1251160[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x12511d0[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0x1251240[shape=record, label="  %16 = sub i32 %15, %14"];
	Node0x12512b0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x1251320[shape=record, label="  %18 = and i32 %13, %10"];
	Node0x1251390[shape=record, label="  %19 = or i32 %17, 1"];
	Node0x1251400[shape=record, label="  %20 = add i32 %13, 1"];
	Node0x1251470[shape=record, label="  %21 = add i32 %20, %18"];
	Node0x12514e0[shape=record, label="  %22 = add i32 %21, %19"];
	Node0x1251550[shape=record, label="  %23 = and i32 %11, %15"];
	Node0x12515c0[shape=record, label="  %24 = xor i32 %12, %11"];
	Node0x1251630[shape=record, label="  %25 = and i32 %12, %11"];
	Node0x12516a0[shape=record, label="  %26 = or i32 %11, %15"];
	Node0x1251710[shape=record, label="  %27 = shl i32 %26, 1"];
	Node0x1251780[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x12517f0[shape=record, label="  %29 = or i32 %13, %10"];
	Node0x1251860[shape=record, label="  %30 = xor i32 %10, -1"];
	Node0x12518d0[shape=record, label="  %31 = and i32 %13, %30"];
	Node0x1251940[shape=record, label="  %32 = xor i32 %31, -1"];
	Node0x12519b0[shape=record, label="  %33 = or i32 %13, %30"];
	Node0x1251a20[shape=record, label="  %34 = shl i32 %18, 1"];
	Node0x1251a90[shape=record, label="  %35 = add i32 %31, %25"];
	Node0x1251b00[shape=record, label="  %36 = mul i32 %35, -3"];
	Node0x1251b70[shape=record, label="  %37 = sub i32 %29, %14"];
	Node0x1251be0[shape=record, label="  %38 = mul i32 %37, 5"];
	Node0x1251c50[shape=record, label="  %39 = add i32 %23, %11"];
	Node0x1251cc0[shape=record, label="  %40 = add i32 %39, %33"];
	Node0x1251d30[shape=record, label="  %41 = shl i32 %40, 1"];
	Node0x1251da0[shape=record, label="  %42 = sub i32 4, %10"];
	Node0x1251e10[shape=record, label="  %43 = add i32 %42, %12"];
	Node0x1251e80[shape=record, label="  %44 = sub i32 %43, %24"];
	Node0x1251ef0[shape=record, label="  %45 = add i32 %44, %25"];
	Node0x1251f60[shape=record, label="  %46 = add i32 %45, %26"];
	Node0x1251fd0[shape=record, label="  %47 = add i32 %46, %13"];
	Node0x1252040[shape=record, label="  %48 = add i32 %47, %28"];
	Node0x12520b0[shape=record, label="  %49 = sub i32 %48, %29"];
	Node0x1252120[shape=record, label="  %50 = add i32 %49, %32"];
	Node0x1252190[shape=record, label="  %51 = add i32 %50, %33"];
	Node0x1252200[shape=record, label="  %52 = sub i32 %51, %34"];
	Node0x1252270[shape=record, label="  %53 = add i32 %52, %36"];
	Node0x12522e0[shape=record, label="  %54 = add i32 %53, %38"];
	Node0x1252350[shape=record, label="  %55 = add i32 %54, %41"];
	Node0x12523c0[shape=record, label="  %56 = icmp eq i32 %22, %55"];
	Node0x11ee8b8[shape=record, label="  %57 = select i1 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1252450[shape=record, label="  %58 = call i32 @puts(i8* nonnull dereferenceable(1) %57) #5"];
	Node0x12526f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x1252858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1252968[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1252a78[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1252b38[shape=record, label="  ret i32 0"];
	Node0x124ed98 -> Node0x124ee18;
	Node0x124ee18 -> Node0x124eea8;
	Node0x124eea8 -> Node0x124ef08;
	Node0x124ef08 -> Node0x124efb8;
	Node0x124efb8 -> Node0x124f3e8;
	Node0x124f3e8 -> Node0x124f4c8;
	Node0x124f4c8 -> Node0x124f5c8;
	Node0x124f5c8 -> Node0x124f688;
	Node0x124f688 -> Node0x124f738;
	Node0x124f738 -> Node0x124f7f8;
	Node0x124f7f8 -> Node0x124f8a8;
	Node0x124f8a8 -> Node0x1249bd0;
	Node0x1249bd0 -> Node0x124faa8;
	Node0x124faa8 -> Node0x1250a18;
	Node0x1250a18 -> Node0x1251088;
	Node0x1251088 -> Node0x12510e8;
	Node0x12510e8 -> Node0x1251160;
	Node0x1251160 -> Node0x12511d0;
	Node0x12511d0 -> Node0x1251240;
	Node0x1251240 -> Node0x12512b0;
	Node0x12512b0 -> Node0x1251320;
	Node0x1251320 -> Node0x1251390;
	Node0x1251390 -> Node0x1251400;
	Node0x1251400 -> Node0x1251470;
	Node0x1251470 -> Node0x12514e0;
	Node0x12514e0 -> Node0x1251550;
	Node0x1251550 -> Node0x12515c0;
	Node0x12515c0 -> Node0x1251630;
	Node0x1251630 -> Node0x12516a0;
	Node0x12516a0 -> Node0x1251710;
	Node0x1251710 -> Node0x1251780;
	Node0x1251780 -> Node0x12517f0;
	Node0x12517f0 -> Node0x1251860;
	Node0x1251860 -> Node0x12518d0;
	Node0x12518d0 -> Node0x1251940;
	Node0x1251940 -> Node0x12519b0;
	Node0x12519b0 -> Node0x1251a20;
	Node0x1251a20 -> Node0x1251a90;
	Node0x1251a90 -> Node0x1251b00;
	Node0x1251b00 -> Node0x1251b70;
	Node0x1251b70 -> Node0x1251be0;
	Node0x1251be0 -> Node0x1251c50;
	Node0x1251c50 -> Node0x1251cc0;
	Node0x1251cc0 -> Node0x1251d30;
	Node0x1251d30 -> Node0x1251da0;
	Node0x1251da0 -> Node0x1251e10;
	Node0x1251e10 -> Node0x1251e80;
	Node0x1251e80 -> Node0x1251ef0;
	Node0x1251ef0 -> Node0x1251f60;
	Node0x1251f60 -> Node0x1251fd0;
	Node0x1251fd0 -> Node0x1252040;
	Node0x1252040 -> Node0x12520b0;
	Node0x12520b0 -> Node0x1252120;
	Node0x1252120 -> Node0x1252190;
	Node0x1252190 -> Node0x1252200;
	Node0x1252200 -> Node0x1252270;
	Node0x1252270 -> Node0x12522e0;
	Node0x12522e0 -> Node0x1252350;
	Node0x1252350 -> Node0x12523c0;
	Node0x12523c0 -> Node0x11ee8b8;
	Node0x11ee8b8 -> Node0x1252450;
	Node0x1252450 -> Node0x12526f8;
	Node0x12526f8 -> Node0x1252858;
	Node0x1252858 -> Node0x1252968;
	Node0x1252968 -> Node0x1252a78;
	Node0x1252a78 -> Node0x1252b38;
edge [color=red]
	Node0x124ed98 -> Node0x124efb8;
	Node0x124efb8 -> Node0x124f3e8;
	Node0x124ee18 -> Node0x124f4c8;
	Node0x124f4c8 -> Node0x124f5c8;
	Node0x124eea8 -> Node0x124f688;
	Node0x124f688 -> Node0x124f738;
	Node0x124ef08 -> Node0x124f7f8;
	Node0x124f7f8 -> Node0x124f8a8;
	Node0x124ed98 -> Node0x1249bd0;
	Node0x124ee18 -> Node0x1249bd0;
	Node0x124eea8 -> Node0x1249bd0;
	Node0x124ef08 -> Node0x1249bd0;
	Node0x124ed98 -> Node0x124faa8;
	Node0x124ee18 -> Node0x1250a18;
	Node0x124eea8 -> Node0x1251088;
	Node0x124ef08 -> Node0x12510e8;
	Node0x1251088 -> Node0x1251160;
	Node0x1250a18 -> Node0x1251160;
	Node0x1251088 -> Node0x12511d0;
	Node0x12511d0 -> Node0x1251240;
	Node0x1251160 -> Node0x1251240;
	Node0x1251240 -> Node0x12512b0;
	Node0x12510e8 -> Node0x1251320;
	Node0x124faa8 -> Node0x1251320;
	Node0x12512b0 -> Node0x1251390;
	Node0x12510e8 -> Node0x1251400;
	Node0x1251400 -> Node0x1251470;
	Node0x1251320 -> Node0x1251470;
	Node0x1251470 -> Node0x12514e0;
	Node0x1251390 -> Node0x12514e0;
	Node0x1250a18 -> Node0x1251550;
	Node0x12511d0 -> Node0x1251550;
	Node0x1251088 -> Node0x12515c0;
	Node0x1250a18 -> Node0x12515c0;
	Node0x1251088 -> Node0x1251630;
	Node0x1250a18 -> Node0x1251630;
	Node0x1250a18 -> Node0x12516a0;
	Node0x12511d0 -> Node0x12516a0;
	Node0x12516a0 -> Node0x1251710;
	Node0x1251710 -> Node0x1251780;
	Node0x12510e8 -> Node0x12517f0;
	Node0x124faa8 -> Node0x12517f0;
	Node0x124faa8 -> Node0x1251860;
	Node0x12510e8 -> Node0x12518d0;
	Node0x1251860 -> Node0x12518d0;
	Node0x12518d0 -> Node0x1251940;
	Node0x12510e8 -> Node0x12519b0;
	Node0x1251860 -> Node0x12519b0;
	Node0x1251320 -> Node0x1251a20;
	Node0x12518d0 -> Node0x1251a90;
	Node0x1251630 -> Node0x1251a90;
	Node0x1251a90 -> Node0x1251b00;
	Node0x12517f0 -> Node0x1251b70;
	Node0x1251160 -> Node0x1251b70;
	Node0x1251b70 -> Node0x1251be0;
	Node0x1251550 -> Node0x1251c50;
	Node0x1250a18 -> Node0x1251c50;
	Node0x1251c50 -> Node0x1251cc0;
	Node0x12519b0 -> Node0x1251cc0;
	Node0x1251cc0 -> Node0x1251d30;
	Node0x124faa8 -> Node0x1251da0;
	Node0x1251da0 -> Node0x1251e10;
	Node0x1251088 -> Node0x1251e10;
	Node0x1251e10 -> Node0x1251e80;
	Node0x12515c0 -> Node0x1251e80;
	Node0x1251e80 -> Node0x1251ef0;
	Node0x1251630 -> Node0x1251ef0;
	Node0x1251ef0 -> Node0x1251f60;
	Node0x12516a0 -> Node0x1251f60;
	Node0x1251f60 -> Node0x1251fd0;
	Node0x12510e8 -> Node0x1251fd0;
	Node0x1251fd0 -> Node0x1252040;
	Node0x1251780 -> Node0x1252040;
	Node0x1252040 -> Node0x12520b0;
	Node0x12517f0 -> Node0x12520b0;
	Node0x12520b0 -> Node0x1252120;
	Node0x1251940 -> Node0x1252120;
	Node0x1252120 -> Node0x1252190;
	Node0x12519b0 -> Node0x1252190;
	Node0x1252190 -> Node0x1252200;
	Node0x1251a20 -> Node0x1252200;
	Node0x1252200 -> Node0x1252270;
	Node0x1251b00 -> Node0x1252270;
	Node0x1252270 -> Node0x12522e0;
	Node0x1251be0 -> Node0x12522e0;
	Node0x12522e0 -> Node0x1252350;
	Node0x1251d30 -> Node0x1252350;
	Node0x12514e0 -> Node0x12523c0;
	Node0x1252350 -> Node0x12523c0;
	Node0x12523c0 -> Node0x11ee8b8;
	Node0x11ee8b8 -> Node0x1252450;
	Node0x124f7f8 -> Node0x12526f8;
	Node0x124f688 -> Node0x1252858;
	Node0x124f4c8 -> Node0x1252968;
	Node0x124efb8 -> Node0x1252a78;
}
