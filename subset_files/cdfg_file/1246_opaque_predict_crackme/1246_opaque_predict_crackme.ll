; ModuleID = '../.././c_source_file/1246_opaque_predict_crackme.c'
source_filename = "../.././c_source_file/1246_opaque_predict_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %2, -1
  %8 = and i32 %7, %0
  %9 = or i32 %7, %1
  %10 = xor i32 %8, %9
  %11 = shl i32 %10, 1
  %12 = sub i32 %11, %5
  %13 = xor i32 %4, %3
  %14 = xor i32 %13, -1
  %15 = or i32 %14, %5
  %16 = sub i32 %12, %15
  %17 = and i32 %1, %0
  %18 = xor i32 %9, -1
  %19 = or i32 %17, %18
  %20 = xor i32 %2, %1
  %21 = xor i32 %20, -1
  %22 = or i32 %17, %21
  %23 = xor i32 %9, %0
  %24 = xor i32 %1, -1
  %25 = and i32 %24, %2
  %26 = and i32 %25, %0
  %27 = or i32 %24, %2
  %28 = xor i32 %27, %0
  %29 = xor i32 %28, 2147483647
  %30 = xor i32 %29, %26
  %31 = and i32 %2, %1
  %32 = and i32 %31, %0
  %33 = xor i32 %20, %0
  %34 = xor i32 %32, %33
  %35 = and i32 %7, %1
  %36 = xor i32 %35, %0
  %37 = and i32 %24, %0
  %38 = xor i32 %37, -1
  %39 = xor i32 %2, %0
  %40 = xor i32 %39, -1
  %41 = and i32 %40, %38
  %42 = and i32 %2, %0
  %43 = xor i32 %42, -1
  %44 = xor i32 %1, %0
  %45 = xor i32 %44, -1
  %46 = and i32 %43, %45
  %47 = xor i32 %0, -1
  %48 = or i32 %31, %47
  %49 = or i32 %2, %0
  %50 = and i32 %49, %44
  %51 = or i32 %24, %0
  %52 = and i32 %20, %51
  %53 = or i32 %42, %35
  %54 = xor i32 %18, %0
  %55 = or i32 %2, %1
  %56 = and i32 %55, %0
  %57 = xor i32 %35, -1
  %58 = and i32 %57, %0
  %59 = or i32 %1, %0
  %60 = xor i32 %59, -1
  %61 = or i32 %39, %60
  %62 = or i32 %39, %17
  %63 = shl i32 %62, 1
  %64 = add i32 %9, 1
  %65 = or i32 %39, %1
  %66 = xor i32 %51, -1
  %67 = or i32 %21, %66
  %68 = or i32 %7, %0
  %69 = and i32 %68, %45
  %70 = xor i32 %49, %17
  %71 = and i32 %39, %1
  %72 = and i32 %20, %47
  %73 = xor i32 %31, -1
  %74 = xor i32 %8, %73
  %75 = shl i32 %74, 1
  %76 = xor i32 %60, %2
  %77 = or i32 %66, %2
  %78 = or i32 %20, %17
  %79 = xor i32 %42, %59
  %80 = or i32 %17, %2
  %81 = shl i32 %80, 1
  %82 = xor i32 %8, -1
  %83 = and i32 %82, %45
  %84 = or i32 %73, %0
  %85 = or i32 %42, %44
  %86 = and i32 %57, %47
  %87 = xor i32 %42, %57
  %88 = shl i32 %87, 1
  %89 = and i32 %38, %2
  %90 = and i32 %51, %21
  %91 = xor i32 %17, %2
  %92 = xor i32 %49, -1
  %93 = or i32 %44, %92
  %94 = xor i32 %55, %17
  %95 = xor i32 %66, %2
  %96 = and i32 %31, %47
  %97 = and i32 %20, %0
  %98 = or i32 %96, %97
  %99 = or i32 %21, %0
  %100 = xor i32 %68, %17
  %101 = and i32 %40, %45
  %102 = and i32 %40, %24
  %103 = and i32 %73, %47
  %104 = or i32 %37, %7
  %105 = or i32 %21, %60
  %106 = shl i32 %105, 1
  %107 = xor i32 %57, %0
  %108 = or i32 %7, %66
  %109 = and i32 %39, %44
  %110 = xor i32 %17, -1
  %111 = and i32 %110, %2
  %112 = and i32 %45, %2
  %113 = or i32 %39, %37
  %114 = or i32 %39, %45
  %115 = or i32 %39, %24
  %116 = and i32 %9, %0
  %117 = or i32 %20, %60
  %118 = add i32 %31, 1
  %119 = xor i32 %59, %2
  %120 = xor i32 %33, -1
  %121 = or i32 %32, %120
  %122 = xor i32 %55, -1
  %123 = or i32 %122, %0
  %124 = xor i32 %68, -1
  %125 = or i32 %124, %24
  %126 = or i32 %45, %2
  %127 = or i32 %40, %60
  %128 = xor i32 %73, %0
  %129 = or i32 %31, %0
  %130 = or i32 %42, %1
  %131 = or i32 %8, %45
  %132 = and i32 %39, %110
  %133 = or i32 %55, %47
  %134 = shl i32 %133, 1
  %135 = and i32 %49, %1
  %136 = and i32 %21, %0
  %137 = or i32 %42, %122
  %138 = or i32 %26, %28
  %139 = and i32 %44, %7
  %140 = and i32 %25, %47
  %141 = and i32 %27, %0
  %142 = xor i32 %141, -1
  %143 = xor i32 %140, %142
  %144 = and i32 %59, %40
  %145 = xor i32 %55, %0
  %146 = or i32 %32, %145
  %147 = xor i32 %8, %1
  %148 = and i32 %7, %45
  %149 = shl i32 %148, 1
  %150 = or i32 %57, %47
  %151 = or i32 %44, %2
  %152 = or i32 %20, %0
  %153 = xor i32 %152, 2147483647
  %154 = or i32 %153, %26
  %155 = or i32 %35, %47
  %156 = or i32 %8, %31
  %157 = or i32 %8, %44
  %158 = or i32 %73, %47
  %159 = shl i32 %158, 1
  %160 = and i32 %20, %110
  %161 = shl i32 %160, 1
  %162 = or i32 %122, %47
  %163 = shl i32 %162, 1
  %164 = or i32 %35, %0
  %165 = or i32 %17, %122
  %166 = or i32 %40, %66
  %167 = shl i32 %166, 1
  %168 = or i32 %8, %18
  %169 = and i32 %55, %47
  %170 = or i32 %32, %169
  %171 = and i32 %20, %38
  %172 = xor i32 %51, %2
  %173 = or i32 %92, %1
  %174 = xor i32 %42, %51
  %175 = or i32 %42, %66
  %176 = or i32 %40, %24
  %177 = and i32 %21, %38
  %178 = xor i32 %26, %120
  %179 = or i32 %20, %66
  %180 = and i32 %39, %59
  %181 = or i32 %9, %0
  %182 = and i32 %21, %110
  %183 = or i32 %44, %7
  %184 = and i32 %39, %45
  %185 = or i32 %17, %92
  %186 = and i32 %49, %45
  %187 = xor i32 %122, %0
  %188 = or i32 %42, %60
  %189 = xor i32 %37, %73
  %190 = shl i32 %189, 1
  %191 = or i32 %40, %45
  %192 = and i32 %43, %1
  %193 = and i32 %44, %43
  %194 = xor i32 %68, %1
  %195 = shl i32 %194, 1
  %196 = or i32 %40, %1
  %197 = and i32 %59, %7
  %198 = and i32 %43, %24
  %199 = xor i32 %9, %17
  %200 = or i32 %42, %24
  %201 = xor i32 %42, %1
  %202 = xor i32 %37, %2
  %203 = or i32 %26, %33
  %204 = and i32 %39, %51
  %205 = and i32 %59, %21
  %206 = and i32 %39, %38
  %207 = or i32 %7, %45
  %208 = and i32 %27, %47
  %209 = xor i32 %208, -1
  %210 = xor i32 %26, %209
  %211 = and i32 %68, %44
  %212 = shl i32 %211, 1
  %213 = or i32 %17, %124
  %214 = or i32 %18, %47
  %215 = or i32 %60, %2
  %216 = and i32 %9, %47
  %217 = shl i32 %216, 1
  %218 = or i32 %17, %40
  %219 = xor i32 %110, %2
  %220 = and i32 %20, %59
  %221 = or i32 %55, %0
  %222 = and i32 %68, %24
  %223 = shl i32 %222, 1
  %224 = or i32 %26, %208
  %225 = shl i32 %224, 2
  %226 = xor i32 %169, 2147483647
  %227 = xor i32 %226, %32
  %228 = or i32 %92, %45
  %229 = and i32 %7, %110
  %230 = and i32 %7, %38
  %231 = and i32 %21, %47
  %232 = xor i32 %26, %152
  %233 = or i32 %37, %40
  %234 = and i32 %82, %1
  %235 = shl i32 %234, 1
  %236 = or i32 %44, %40
  %237 = and i32 %51, %40
  %238 = shl i32 %237, 1
  %239 = and i32 %51, %7
  %240 = or i32 %21, %47
  %241 = or i32 %18, %0
  %242 = and i32 %68, %1
  %243 = or i32 %31, %37
  %244 = xor i32 %49, %1
  %245 = or i32 %92, %24
  %246 = and i32 %122, %47
  %247 = and i32 %35, %47
  %248 = and i32 %122, %0
  %249 = mul i32 %248, -21
  %250 = and i32 %35, %0
  %251 = shl i32 %250, 3
  %252 = shl i32 %96, 4
  %253 = and i32 %18, %0
  %254 = and i32 %5, %3
  %255 = xor i32 %254, %4
  %256 = or i32 %5, %4
  %257 = and i32 %256, %14
  %258 = and i32 %254, %4
  %259 = xor i32 %4, -1
  %260 = or i32 %5, %3
  %261 = and i32 %260, %259
  %262 = or i32 %258, %261
  %263 = xor i32 %3, -1
  %264 = or i32 %263, %4
  %265 = xor i32 %264, -1
  %266 = xor i32 %5, %4
  %267 = or i32 %266, %265
  %268 = or i32 %4, %3
  %269 = and i32 %263, %5
  %270 = and i32 %269, %4
  %271 = xor i32 %5, %3
  %272 = xor i32 %271, %4
  %273 = or i32 %270, %272
  %274 = shl i32 %273, 1
  %275 = or i32 %263, %5
  %276 = and i32 %275, %259
  %277 = or i32 %270, %276
  %278 = xor i32 %260, %4
  %279 = or i32 %258, %278
  %280 = shl i32 %279, 1
  %281 = and i32 %263, %4
  %282 = or i32 %254, %281
  %283 = xor i32 %5, -1
  %284 = and i32 %13, %283
  %285 = xor i32 %266, -1
  %286 = or i32 %285, %263
  %287 = and i32 %283, %4
  %288 = or i32 %283, %3
  %289 = xor i32 %287, %288
  %290 = and i32 %283, %3
  %291 = xor i32 %290, -1
  %292 = xor i32 %291, %4
  %293 = and i32 %285, %3
  %294 = xor i32 %290, %4
  %295 = and i32 %264, %5
  %296 = shl i32 %295, 1
  %297 = xor i32 %271, -1
  %298 = add i32 %271, 1
  %299 = xor i32 %281, -1
  %300 = and i32 %285, %299
  %301 = xor i32 %260, -1
  %302 = or i32 %301, %4
  %303 = and i32 %297, %299
  %304 = xor i32 %287, -1
  %305 = and i32 %304, %3
  %306 = and i32 %264, %285
  %307 = xor i32 %272, -1
  %308 = xor i32 %270, %307
  %309 = or i32 %271, %259
  %310 = and i32 %271, %299
  %311 = shl i32 %263, 1
  %312 = and i32 %13, %5
  %313 = and i32 %266, %264
  %314 = and i32 %5, %4
  %315 = xor i32 %314, -1
  %316 = and i32 %315, %3
  %317 = and i32 %4, %3
  %318 = xor i32 %317, -1
  %319 = and i32 %271, %318
  %320 = add i32 %317, 1
  %321 = xor i32 %288, -1
  %322 = or i32 %321, %4
  %323 = or i32 %271, %4
  %324 = xor i32 %270, %323
  %325 = and i32 %268, %5
  %326 = or i32 %291, %4
  %327 = or i32 %297, %259
  %328 = xor i32 %315, %3
  %329 = shl i32 %328, 1
  %330 = and i32 %14, %5
  %331 = or i32 %283, %14
  %332 = or i32 %314, %263
  %333 = shl i32 %332, 1
  %334 = and i32 %285, %318
  %335 = shl i32 %334, 1
  %336 = xor i32 %256, -1
  %337 = xor i32 %336, %3
  %338 = xor i32 %258, -1
  %339 = xor i32 %278, %338
  %340 = xor i32 %317, %5
  %341 = or i32 %283, %4
  %342 = xor i32 %341, -1
  %343 = xor i32 %342, %3
  %344 = or i32 %285, %14
  %345 = xor i32 %314, %268
  %346 = or i32 %336, %263
  %347 = or i32 %266, %281
  %348 = and i32 %266, %14
  %349 = and i32 %271, %259
  %350 = or i32 %258, %349
  %351 = xor i32 %268, -1
  %352 = xor i32 %351, %5
  %353 = xor i32 %254, -1
  %354 = and i32 %353, %4
  %355 = or i32 %353, %259
  %356 = and i32 %283, %318
  %357 = xor i32 %281, %5
  %358 = or i32 %342, %14
  %359 = or i32 %290, %259
  %360 = and i32 %341, %263
  %361 = shl i32 %360, 2
  %362 = or i32 %297, %351
  %363 = or i32 %317, %342
  %364 = and i32 %304, %14
  %365 = xor i32 %349, %338
  %366 = and i32 %269, %259
  %367 = and i32 %275, %4
  %368 = or i32 %366, %367
  %369 = and i32 %256, %263
  %370 = or i32 %321, %259
  %371 = shl i32 %341, 1
  %372 = and i32 %315, %263
  %373 = and i32 %268, %283
  %374 = or i32 %314, %13
  %375 = xor i32 %341, %317
  %376 = and i32 %285, %14
  %377 = xor i32 %265, %5
  %378 = and i32 %353, %259
  %379 = xor i32 %297, %4
  %380 = or i32 %314, %3
  %381 = or i32 %314, %301
  %382 = and i32 %271, %4
  %383 = or i32 %336, %3
  %384 = xor i32 %309, -1
  %385 = or i32 %366, %384
  %386 = and i32 %268, %285
  %387 = and i32 %254, %259
  %388 = and i32 %260, %4
  %389 = or i32 %387, %388
  %390 = add i32 %341, 1
  %391 = or i32 %271, %265
  %392 = and i32 %13, %304
  %393 = shl i32 %392, 1
  %394 = and i32 %304, %263
  %395 = xor i32 %281, %291
  %396 = and i32 %341, %13
  %397 = shl i32 %396, 1
  %398 = and i32 %315, %14
  %399 = shl i32 %398, 1
  %400 = xor i32 %264, %5
  %401 = or i32 %317, %321
  %402 = or i32 %317, %301
  %403 = xor i32 %275, %4
  %404 = or i32 %270, %403
  %405 = or i32 %13, %342
  %406 = or i32 %287, %254
  %407 = or i32 %314, %14
  %408 = and i32 %256, %3
  %409 = or i32 %342, %3
  %410 = and i32 %266, %318
  %411 = or i32 %258, %307
  %412 = xor i32 %288, %317
  %413 = xor i32 %301, %4
  %414 = and i32 %285, %263
  %415 = and i32 %299, %5
  %416 = or i32 %290, %4
  %417 = or i32 %266, %263
  %418 = and i32 %341, %14
  %419 = or i32 %281, %283
  %420 = and i32 %266, %268
  %421 = or i32 %314, %351
  %422 = shl i32 %421, 1
  %423 = or i32 %266, %13
  %424 = or i32 %287, %321
  %425 = and i32 %283, %299
  %426 = and i32 %341, %3
  %427 = or i32 %13, %283
  %428 = xor i32 %288, %4
  %429 = and i32 %266, %13
  %430 = or i32 %285, %3
  %431 = or i32 %254, %4
  %432 = or i32 %291, %259
  %433 = and i32 %318, %5
  %434 = xor i32 %403, 2147483647
  %435 = xor i32 %434, %270
  %436 = and i32 %301, %259
  %437 = and i32 %290, %259
  %438 = and i32 %301, %4
  %439 = and i32 %290, %4
  %440 = mul i32 %439, -13
  %441 = and i32 %321, %259
  %442 = mul i32 %387, -14
  %443 = and i32 %321, %4
  %444 = shl i32 %258, 3
  %445 = add i32 %139, %239
  %446 = add i32 %445, %111
  %447 = add i32 %446, %77
  %448 = add i32 %447, %245
  %449 = add i32 %448, %214
  %450 = add i32 %449, %188
  %451 = add i32 %450, %176
  %452 = add i32 %451, %132
  %453 = add i32 %452, %125
  %454 = add i32 %453, %113
  %455 = add i32 %454, %102
  %456 = add i32 %455, %99
  %457 = add i32 %456, %90
  %458 = add i32 %457, %61
  %459 = add i32 %458, %232
  %460 = add i32 %459, %357
  %461 = add i32 %460, %312
  %462 = add i32 %461, %256
  %463 = add i32 %462, %227
  %464 = add i32 %463, %154
  %465 = add i32 %464, %30
  %466 = add i32 %465, %426
  %467 = add i32 %466, %416
  %468 = add i32 %467, %405
  %469 = add i32 %468, %379
  %470 = add i32 %469, %374
  %471 = add i32 %470, %343
  %472 = add i32 %471, %319
  %473 = add i32 %472, %310
  %474 = add i32 %473, %303
  %475 = add i32 %474, %267
  %476 = add i32 %475, %350
  %477 = add i32 %476, %435
  %478 = shl i32 %477, 1
  %479 = sub i32 %241, %31
  %480 = sub i32 %479, %107
  %481 = sub i32 %480, %268
  %482 = sub i32 %481, %138
  %483 = add i32 %482, %302
  %484 = sub i32 %483, %411
  %485 = mul i32 %484, 3
  %486 = add i32 %244, %183
  %487 = add i32 %486, %127
  %488 = add i32 %487, %325
  %489 = shl i32 %488, 2
  %490 = add i32 %438, %246
  %491 = sub i32 %490, %441
  %492 = mul i32 %491, 6
  %493 = add i32 %165, %213
  %494 = add i32 %493, %359
  %495 = mul i32 %494, 5
  %496 = add i32 %437, %32
  %497 = mul i32 %496, -12
  %498 = sub i32 %443, %253
  %499 = mul i32 %498, 9
  %500 = add i32 %0, 1
  %501 = add i32 %500, %17
  %502 = add i32 %501, %60
  %503 = add i32 %502, %44
  %504 = add i32 %503, %64
  %505 = sub i32 %504, %76
  %506 = add i32 %505, %89
  %507 = add i32 %506, %91
  %508 = add i32 %507, %95
  %509 = sub i32 %508, %104
  %510 = sub i32 %509, %108
  %511 = sub i32 %510, %112
  %512 = add i32 %511, %118
  %513 = add i32 %512, %119
  %514 = add i32 %513, %92
  %515 = sub i32 %514, %126
  %516 = sub i32 %515, %35
  %517 = add i32 %516, %122
  %518 = sub i32 %517, %39
  %519 = add i32 %518, %151
  %520 = sub i32 %519, %172
  %521 = add i32 %520, %197
  %522 = add i32 %521, %8
  %523 = sub i32 %522, %202
  %524 = sub i32 %523, %207
  %525 = sub i32 %524, %9
  %526 = add i32 %525, %215
  %527 = add i32 %526, %219
  %528 = sub i32 %527, %49
  %529 = sub i32 %528, %229
  %530 = add i32 %529, %230
  %531 = add i32 %530, %40
  %532 = add i32 %531, %19
  %533 = sub i32 %532, %22
  %534 = add i32 %533, %23
  %535 = sub i32 %534, %36
  %536 = sub i32 %535, %41
  %537 = add i32 %536, %46
  %538 = add i32 %537, %48
  %539 = sub i32 %538, %50
  %540 = sub i32 %539, %52
  %541 = sub i32 %540, %53
  %542 = sub i32 %541, %54
  %543 = add i32 %542, %56
  %544 = add i32 %543, %58
  %545 = add i32 %544, %65
  %546 = add i32 %545, %67
  %547 = add i32 %546, %69
  %548 = add i32 %547, %70
  %549 = add i32 %548, %71
  %550 = sub i32 %549, %72
  %551 = sub i32 %550, %78
  %552 = sub i32 %551, %79
  %553 = sub i32 %552, %81
  %554 = add i32 %553, %83
  %555 = add i32 %554, %84
  %556 = add i32 %555, %85
  %557 = sub i32 %556, %86
  %558 = sub i32 %557, %93
  %559 = sub i32 %558, %94
  %560 = sub i32 %559, %100
  %561 = sub i32 %560, %101
  %562 = sub i32 %561, %103
  %563 = sub i32 %562, %109
  %564 = sub i32 %563, %114
  %565 = sub i32 %564, %115
  %566 = add i32 %565, %116
  %567 = sub i32 %566, %117
  %568 = add i32 %567, %123
  %569 = sub i32 %568, %33
  %570 = sub i32 %569, %128
  %571 = add i32 %570, %129
  %572 = sub i32 %571, %130
  %573 = sub i32 %572, %131
  %574 = add i32 %573, %135
  %575 = add i32 %574, %136
  %576 = add i32 %575, %137
  %577 = add i32 %576, %144
  %578 = add i32 %577, %147
  %579 = sub i32 %578, %149
  %580 = add i32 %579, %150
  %581 = add i32 %580, %155
  %582 = sub i32 %581, %156
  %583 = sub i32 %582, %157
  %584 = add i32 %583, %164
  %585 = sub i32 %584, %168
  %586 = sub i32 %585, %171
  %587 = sub i32 %586, %173
  %588 = sub i32 %587, %174
  %589 = sub i32 %588, %175
  %590 = sub i32 %589, %177
  %591 = sub i32 %590, %145
  %592 = add i32 %591, %179
  %593 = add i32 %592, %180
  %594 = add i32 %593, %181
  %595 = add i32 %594, %182
  %596 = add i32 %595, %184
  %597 = add i32 %596, %185
  %598 = sub i32 %597, %186
  %599 = sub i32 %598, %187
  %600 = sub i32 %599, %191
  %601 = sub i32 %600, %192
  %602 = sub i32 %601, %193
  %603 = add i32 %602, %196
  %604 = sub i32 %603, %152
  %605 = add i32 %604, %198
  %606 = add i32 %605, %199
  %607 = sub i32 %606, %200
  %608 = add i32 %607, %201
  %609 = add i32 %608, %204
  %610 = sub i32 %609, %205
  %611 = add i32 %610, %206
  %612 = add i32 %611, %97
  %613 = add i32 %612, %218
  %614 = add i32 %613, %220
  %615 = sub i32 %614, %221
  %616 = add i32 %615, %228
  %617 = sub i32 %616, %231
  %618 = sub i32 %617, %233
  %619 = sub i32 %618, %236
  %620 = add i32 %619, %240
  %621 = add i32 %620, %242
  %622 = add i32 %621, %243
  %623 = sub i32 %622, %247
  %624 = sub i32 %623, %311
  %625 = add i32 %624, 1
  %626 = add i32 %625, %34
  %627 = sub i32 %626, %63
  %628 = sub i32 %627, %75
  %629 = sub i32 %628, %88
  %630 = sub i32 %629, %98
  %631 = sub i32 %630, %106
  %632 = sub i32 %631, %121
  %633 = sub i32 %632, %134
  %634 = add i32 %633, %143
  %635 = add i32 %634, %146
  %636 = sub i32 %635, %159
  %637 = sub i32 %636, %161
  %638 = sub i32 %637, %163
  %639 = sub i32 %638, %167
  %640 = sub i32 %639, %170
  %641 = sub i32 %640, %178
  %642 = sub i32 %641, %190
  %643 = sub i32 %642, %195
  %644 = sub i32 %643, %203
  %645 = sub i32 %644, %210
  %646 = sub i32 %645, %212
  %647 = sub i32 %646, %217
  %648 = sub i32 %647, %223
  %649 = sub i32 %648, %235
  %650 = sub i32 %649, %238
  %651 = add i32 %650, %249
  %652 = sub i32 %651, %251
  %653 = add i32 %652, %252
  %654 = add i32 %653, %320
  %655 = add i32 %654, %351
  %656 = add i32 %655, %317
  %657 = sub i32 %656, %281
  %658 = sub i32 %657, %225
  %659 = sub i32 %658, %284
  %660 = add i32 %659, %298
  %661 = sub i32 %660, %330
  %662 = sub i32 %661, %331
  %663 = sub i32 %662, %340
  %664 = sub i32 %663, %352
  %665 = add i32 %664, %356
  %666 = add i32 %665, %285
  %667 = sub i32 %666, %373
  %668 = add i32 %667, %377
  %669 = add i32 %668, %271
  %670 = add i32 %669, %390
  %671 = add i32 %670, %400
  %672 = sub i32 %671, %415
  %673 = add i32 %672, %419
  %674 = add i32 %673, %425
  %675 = sub i32 %674, %427
  %676 = add i32 %675, %433
  %677 = add i32 %676, %287
  %678 = sub i32 %677, %255
  %679 = add i32 %678, %257
  %680 = add i32 %679, %282
  %681 = add i32 %680, %286
  %682 = add i32 %681, %289
  %683 = sub i32 %682, %292
  %684 = sub i32 %683, %293
  %685 = add i32 %684, %294
  %686 = sub i32 %685, %296
  %687 = add i32 %686, %300
  %688 = sub i32 %687, %305
  %689 = sub i32 %688, %306
  %690 = sub i32 %689, %309
  %691 = add i32 %690, %313
  %692 = sub i32 %691, %316
  %693 = sub i32 %692, %322
  %694 = add i32 %693, %326
  %695 = add i32 %694, %327
  %696 = add i32 %695, %337
  %697 = sub i32 %696, %344
  %698 = add i32 %697, %345
  %699 = add i32 %698, %346
  %700 = sub i32 %699, %347
  %701 = add i32 %700, %348
  %702 = add i32 %701, %354
  %703 = sub i32 %702, %355
  %704 = add i32 %703, %349
  %705 = sub i32 %704, %358
  %706 = add i32 %705, %362
  %707 = add i32 %706, %363
  %708 = sub i32 %707, %364
  %709 = sub i32 %708, %369
  %710 = sub i32 %709, %370
  %711 = sub i32 %710, %371
  %712 = add i32 %711, %372
  %713 = sub i32 %712, %375
  %714 = add i32 %713, %376
  %715 = add i32 %714, %378
  %716 = add i32 %715, %380
  %717 = sub i32 %716, %381
  %718 = sub i32 %717, %382
  %719 = add i32 %718, %383
  %720 = sub i32 %719, %386
  %721 = sub i32 %720, %391
  %722 = add i32 %721, %394
  %723 = sub i32 %722, %395
  %724 = sub i32 %723, %401
  %725 = add i32 %724, %402
  %726 = add i32 %725, %406
  %727 = sub i32 %726, %407
  %728 = sub i32 %727, %408
  %729 = add i32 %728, %409
  %730 = add i32 %729, %410
  %731 = sub i32 %730, %412
  %732 = sub i32 %731, %413
  %733 = add i32 %732, %414
  %734 = add i32 %733, %417
  %735 = add i32 %734, %418
  %736 = sub i32 %735, %420
  %737 = sub i32 %736, %423
  %738 = add i32 %737, %424
  %739 = sub i32 %738, %278
  %740 = add i32 %739, %428
  %741 = add i32 %740, %429
  %742 = add i32 %741, %430
  %743 = sub i32 %742, %431
  %744 = add i32 %743, %432
  %745 = add i32 %744, %436
  %746 = add i32 %745, %262
  %747 = add i32 %746, %277
  %748 = sub i32 %747, %308
  %749 = sub i32 %748, %324
  %750 = sub i32 %749, %329
  %751 = sub i32 %750, %333
  %752 = sub i32 %751, %335
  %753 = add i32 %752, %339
  %754 = sub i32 %753, %361
  %755 = sub i32 %754, %365
  %756 = sub i32 %755, %368
  %757 = sub i32 %756, %385
  %758 = add i32 %757, %389
  %759 = sub i32 %758, %393
  %760 = sub i32 %759, %397
  %761 = sub i32 %760, %399
  %762 = add i32 %761, %404
  %763 = sub i32 %762, %422
  %764 = add i32 %763, %440
  %765 = add i32 %764, %442
  %766 = sub i32 %765, %444
  %767 = sub i32 %766, %274
  %768 = sub i32 %767, %280
  %769 = add i32 %768, %497
  %770 = add i32 %769, %499
  %771 = add i32 %770, %489
  %772 = add i32 %771, %492
  %773 = add i32 %772, %495
  %774 = add i32 %773, %485
  %775 = add i32 %774, %478
  %776 = icmp eq i32 %16, %775
  %777 = select i1 %776, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %778 = tail call i32 @puts(i8* nonnull dereferenceable(1) %777)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
