digraph "DFG for'main' function" {
	Node0xffeb48[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xffebc8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xffec58[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xffecb8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xffed68[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xfff198[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xfff278[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xfff378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xfff438[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xfff4e8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xfff5a8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xfff658[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xff9b10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xfff858[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10007c8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1000e38[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1000e98[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1000f10[shape=record, label="  %14 = sub i32 -3, %11"];
	Node0x1000f80[shape=record, label="  %15 = xor i32 %13, %10"];
	Node0x1000ff0[shape=record, label="  %16 = sub i32 %14, %15"];
	Node0x1001060[shape=record, label="  %17 = shl i32 %15, 1"];
	Node0x10010d0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x1001140[shape=record, label="  %19 = sub i32 %16, %18"];
	Node0x10011b0[shape=record, label="  %20 = xor i32 %11, -1"];
	Node0x1001220[shape=record, label="  %21 = or i32 %12, %20"];
	Node0x1001290[shape=record, label="  %22 = or i32 %12, %11"];
	Node0x1001300[shape=record, label="  %23 = xor i32 %12, %11"];
	Node0x1001370[shape=record, label="  %24 = and i32 %12, %11"];
	Node0x10013e0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x1001450[shape=record, label="  %26 = shl i32 %22, 1"];
	Node0x10014c0[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x1001530[shape=record, label="  %28 = mul i32 %24, 3"];
	Node0x10015a0[shape=record, label="  %29 = and i32 %13, %10"];
	Node0x1001610[shape=record, label="  %30 = shl i32 %29, 1"];
	Node0x1001680[shape=record, label="  %31 = xor i32 %30, -2"];
	Node0x10016f0[shape=record, label="  %32 = xor i32 %13, -1"];
	Node0x1001760[shape=record, label="  %33 = xor i32 %10, 2147483647"];
	Node0x10017d0[shape=record, label="  %34 = or i32 %13, %10"];
	Node0x1001840[shape=record, label="  %35 = and i32 %10, %32"];
	Node0x10018b0[shape=record, label="  %36 = and i32 %13, %33"];
	Node0x1001920[shape=record, label="  %37 = sub i32 %36, %11"];
	Node0x1001990[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0x1001a00[shape=record, label="  %39 = add i32 %21, %10"];
	Node0x1001a70[shape=record, label="  %40 = sub i32 %22, %39"];
	Node0x1001ae0[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x1001b50[shape=record, label="  %42 = add i32 %41, %25"];
	Node0x1001bc0[shape=record, label="  %43 = sub i32 %42, %13"];
	Node0x1001c30[shape=record, label="  %44 = add i32 %43, %32"];
	Node0x1001ca0[shape=record, label="  %45 = add i32 %44, %28"];
	Node0x1001d10[shape=record, label="  %46 = add i32 %45, %34"];
	Node0x1001d80[shape=record, label="  %47 = add i32 %46, %35"];
	Node0x1001df0[shape=record, label="  %48 = add i32 %47, %27"];
	Node0x1001e60[shape=record, label="  %49 = sub i32 %48, %31"];
	Node0x1001ed0[shape=record, label="  %50 = add i32 %49, %38"];
	Node0x1001f40[shape=record, label="  %51 = icmp eq i32 %19, %50"];
	Node0xf9e8b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1001fd0[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0x1002278[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x10023d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x10024e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x10025f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x10026b8[shape=record, label="  ret i32 0"];
	Node0xffeb48 -> Node0xffebc8;
	Node0xffebc8 -> Node0xffec58;
	Node0xffec58 -> Node0xffecb8;
	Node0xffecb8 -> Node0xffed68;
	Node0xffed68 -> Node0xfff198;
	Node0xfff198 -> Node0xfff278;
	Node0xfff278 -> Node0xfff378;
	Node0xfff378 -> Node0xfff438;
	Node0xfff438 -> Node0xfff4e8;
	Node0xfff4e8 -> Node0xfff5a8;
	Node0xfff5a8 -> Node0xfff658;
	Node0xfff658 -> Node0xff9b10;
	Node0xff9b10 -> Node0xfff858;
	Node0xfff858 -> Node0x10007c8;
	Node0x10007c8 -> Node0x1000e38;
	Node0x1000e38 -> Node0x1000e98;
	Node0x1000e98 -> Node0x1000f10;
	Node0x1000f10 -> Node0x1000f80;
	Node0x1000f80 -> Node0x1000ff0;
	Node0x1000ff0 -> Node0x1001060;
	Node0x1001060 -> Node0x10010d0;
	Node0x10010d0 -> Node0x1001140;
	Node0x1001140 -> Node0x10011b0;
	Node0x10011b0 -> Node0x1001220;
	Node0x1001220 -> Node0x1001290;
	Node0x1001290 -> Node0x1001300;
	Node0x1001300 -> Node0x1001370;
	Node0x1001370 -> Node0x10013e0;
	Node0x10013e0 -> Node0x1001450;
	Node0x1001450 -> Node0x10014c0;
	Node0x10014c0 -> Node0x1001530;
	Node0x1001530 -> Node0x10015a0;
	Node0x10015a0 -> Node0x1001610;
	Node0x1001610 -> Node0x1001680;
	Node0x1001680 -> Node0x10016f0;
	Node0x10016f0 -> Node0x1001760;
	Node0x1001760 -> Node0x10017d0;
	Node0x10017d0 -> Node0x1001840;
	Node0x1001840 -> Node0x10018b0;
	Node0x10018b0 -> Node0x1001920;
	Node0x1001920 -> Node0x1001990;
	Node0x1001990 -> Node0x1001a00;
	Node0x1001a00 -> Node0x1001a70;
	Node0x1001a70 -> Node0x1001ae0;
	Node0x1001ae0 -> Node0x1001b50;
	Node0x1001b50 -> Node0x1001bc0;
	Node0x1001bc0 -> Node0x1001c30;
	Node0x1001c30 -> Node0x1001ca0;
	Node0x1001ca0 -> Node0x1001d10;
	Node0x1001d10 -> Node0x1001d80;
	Node0x1001d80 -> Node0x1001df0;
	Node0x1001df0 -> Node0x1001e60;
	Node0x1001e60 -> Node0x1001ed0;
	Node0x1001ed0 -> Node0x1001f40;
	Node0x1001f40 -> Node0xf9e8b8;
	Node0xf9e8b8 -> Node0x1001fd0;
	Node0x1001fd0 -> Node0x1002278;
	Node0x1002278 -> Node0x10023d8;
	Node0x10023d8 -> Node0x10024e8;
	Node0x10024e8 -> Node0x10025f8;
	Node0x10025f8 -> Node0x10026b8;
edge [color=red]
	Node0xffeb48 -> Node0xffed68;
	Node0xffed68 -> Node0xfff198;
	Node0xffebc8 -> Node0xfff278;
	Node0xfff278 -> Node0xfff378;
	Node0xffec58 -> Node0xfff438;
	Node0xfff438 -> Node0xfff4e8;
	Node0xffecb8 -> Node0xfff5a8;
	Node0xfff5a8 -> Node0xfff658;
	Node0xffeb48 -> Node0xff9b10;
	Node0xffebc8 -> Node0xff9b10;
	Node0xffec58 -> Node0xff9b10;
	Node0xffecb8 -> Node0xff9b10;
	Node0xffeb48 -> Node0xfff858;
	Node0xffebc8 -> Node0x10007c8;
	Node0xffec58 -> Node0x1000e38;
	Node0xffecb8 -> Node0x1000e98;
	Node0x10007c8 -> Node0x1000f10;
	Node0x1000e98 -> Node0x1000f80;
	Node0xfff858 -> Node0x1000f80;
	Node0x1000f10 -> Node0x1000ff0;
	Node0x1000f80 -> Node0x1000ff0;
	Node0x1000f80 -> Node0x1001060;
	Node0x1001060 -> Node0x10010d0;
	Node0x1000ff0 -> Node0x1001140;
	Node0x10010d0 -> Node0x1001140;
	Node0x10007c8 -> Node0x10011b0;
	Node0x1000e38 -> Node0x1001220;
	Node0x10011b0 -> Node0x1001220;
	Node0x1000e38 -> Node0x1001290;
	Node0x10007c8 -> Node0x1001290;
	Node0x1000e38 -> Node0x1001300;
	Node0x10007c8 -> Node0x1001300;
	Node0x1000e38 -> Node0x1001370;
	Node0x10007c8 -> Node0x1001370;
	Node0x1001370 -> Node0x10013e0;
	Node0x1001290 -> Node0x1001450;
	Node0x1001450 -> Node0x10014c0;
	Node0x1001370 -> Node0x1001530;
	Node0x1000e98 -> Node0x10015a0;
	Node0xfff858 -> Node0x10015a0;
	Node0x10015a0 -> Node0x1001610;
	Node0x1001610 -> Node0x1001680;
	Node0x1000e98 -> Node0x10016f0;
	Node0xfff858 -> Node0x1001760;
	Node0x1000e98 -> Node0x10017d0;
	Node0xfff858 -> Node0x10017d0;
	Node0xfff858 -> Node0x1001840;
	Node0x10016f0 -> Node0x1001840;
	Node0x1000e98 -> Node0x10018b0;
	Node0x1001760 -> Node0x10018b0;
	Node0x10018b0 -> Node0x1001920;
	Node0x10007c8 -> Node0x1001920;
	Node0x1001920 -> Node0x1001990;
	Node0x1001220 -> Node0x1001a00;
	Node0xfff858 -> Node0x1001a00;
	Node0x1001290 -> Node0x1001a70;
	Node0x1001a00 -> Node0x1001a70;
	Node0x1001a70 -> Node0x1001ae0;
	Node0x1001300 -> Node0x1001ae0;
	Node0x1001ae0 -> Node0x1001b50;
	Node0x10013e0 -> Node0x1001b50;
	Node0x1001b50 -> Node0x1001bc0;
	Node0x1000e98 -> Node0x1001bc0;
	Node0x1001bc0 -> Node0x1001c30;
	Node0x10016f0 -> Node0x1001c30;
	Node0x1001c30 -> Node0x1001ca0;
	Node0x1001530 -> Node0x1001ca0;
	Node0x1001ca0 -> Node0x1001d10;
	Node0x10017d0 -> Node0x1001d10;
	Node0x1001d10 -> Node0x1001d80;
	Node0x1001840 -> Node0x1001d80;
	Node0x1001d80 -> Node0x1001df0;
	Node0x10014c0 -> Node0x1001df0;
	Node0x1001df0 -> Node0x1001e60;
	Node0x1001680 -> Node0x1001e60;
	Node0x1001e60 -> Node0x1001ed0;
	Node0x1001990 -> Node0x1001ed0;
	Node0x1001140 -> Node0x1001f40;
	Node0x1001ed0 -> Node0x1001f40;
	Node0x1001f40 -> Node0xf9e8b8;
	Node0xf9e8b8 -> Node0x1001fd0;
	Node0xfff5a8 -> Node0x1002278;
	Node0xfff438 -> Node0x10023d8;
	Node0xfff278 -> Node0x10024e8;
	Node0xffed68 -> Node0x10025f8;
}
