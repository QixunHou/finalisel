digraph "DFG for'main' function" {
	Node0x241a648[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x241a6c8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x241a758[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x241a7b8[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x241ac38[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x241ad18[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x241ae18[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x241aed8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x241af88[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x241b1e8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x241b2a8[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x241b408[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x241b468[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x2422810[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x24229f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x2422b58[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x2422c68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x2422d28[shape=record, label="  ret i32 0"];
	Node0x241a648 -> Node0x241a6c8;
	Node0x241a6c8 -> Node0x241a758;
	Node0x241a758 -> Node0x241a7b8;
	Node0x241a7b8 -> Node0x241ac38;
	Node0x241ac38 -> Node0x241ad18;
	Node0x241ad18 -> Node0x241ae18;
	Node0x241ae18 -> Node0x241aed8;
	Node0x241aed8 -> Node0x241af88;
	Node0x241af88 -> Node0x241b1e8;
	Node0x241b1e8 -> Node0x241b2a8;
	Node0x241b2a8 -> Node0x241b408;
	Node0x241b408 -> Node0x241b468;
	Node0x241b468 -> Node0x2422810;
	Node0x2422810 -> Node0x24229f8;
	Node0x24229f8 -> Node0x2422b58;
	Node0x2422b58 -> Node0x2422c68;
	Node0x2422c68 -> Node0x2422d28;
edge [color=red]
	Node0x241a648 -> Node0x241a7b8;
	Node0x241a7b8 -> Node0x241ac38;
	Node0x241a6c8 -> Node0x241ad18;
	Node0x241ad18 -> Node0x241ae18;
	Node0x241a758 -> Node0x241aed8;
	Node0x241aed8 -> Node0x241af88;
	Node0x241a648 -> Node0x241b1e8;
	Node0x241a6c8 -> Node0x241b1e8;
	Node0x241a758 -> Node0x241b1e8;
	Node0x241a648 -> Node0x241b2a8;
	Node0x241a6c8 -> Node0x241b408;
	Node0x241a758 -> Node0x241b468;
	Node0x241b2a8 -> Node0x2422810;
	Node0x241b408 -> Node0x2422810;
	Node0x241b468 -> Node0x2422810;
	Node0x241aed8 -> Node0x24229f8;
	Node0x241ad18 -> Node0x2422b58;
	Node0x241a7b8 -> Node0x2422c68;
}
