; ModuleID = '../.././c_source_file/0803_path_condition_crackme.c'
source_filename = "../.././c_source_file/0803_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [9 x i8] c"%d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2) local_unnamed_addr #0 {
  %4 = xor i32 %0, -1
  %5 = or i32 %2, %1
  %6 = or i32 %5, %4
  %7 = shl i32 %6, 1
  %8 = xor i32 %1, -1
  %9 = or i32 %8, %0
  %10 = xor i32 %9, -1
  %11 = xor i32 %2, %1
  %12 = or i32 %11, %10
  %13 = and i32 %2, %1
  %14 = xor i32 %13, %0
  %15 = and i32 %2, %0
  %16 = xor i32 %15, %5
  %17 = and i32 %9, %2
  %18 = xor i32 %2, -1
  %19 = and i32 %8, %0
  %20 = xor i32 %19, -1
  %21 = and i32 %18, %20
  %22 = xor i32 %1, %0
  %23 = xor i32 %2, %0
  %24 = or i32 %23, %22
  %25 = or i32 %18, %1
  %26 = xor i32 %25, -1
  %27 = xor i32 %26, %0
  %28 = xor i32 %22, -1
  %29 = and i32 %18, %28
  %30 = xor i32 %11, -1
  %31 = and i32 %1, %0
  %32 = xor i32 %5, -1
  %33 = or i32 %31, %32
  %34 = and i32 %25, %0
  %35 = or i32 %30, %0
  %36 = or i32 %1, %0
  %37 = xor i32 %36, -1
  %38 = or i32 %15, %37
  %39 = and i32 %13, %4
  %40 = and i32 %5, %0
  %41 = or i32 %39, %40
  %42 = and i32 %18, %1
  %43 = xor i32 %42, -1
  %44 = or i32 %43, %0
  %45 = or i32 %18, %0
  %46 = xor i32 %45, -1
  %47 = or i32 %46, %1
  %48 = xor i32 %15, -1
  %49 = and i32 %48, %28
  %50 = and i32 %11, %36
  %51 = xor i32 %23, -1
  %52 = and i32 %51, %20
  %53 = and i32 %18, %0
  %54 = xor i32 %53, %25
  %55 = and i32 %22, %2
  %56 = and i32 %13, %0
  %57 = and i32 %5, %4
  %58 = or i32 %56, %57
  %59 = and i32 %51, %1
  %60 = xor i32 %46, %1
  %61 = and i32 %8, %2
  %62 = and i32 %61, %4
  %63 = or i32 %11, %4
  %64 = xor i32 %62, %63
  %65 = or i32 %30, %37
  %66 = or i32 %51, %8
  %67 = and i32 %48, %8
  %68 = and i32 %23, %28
  %69 = xor i32 %25, %0
  %70 = add i32 %5, 1
  %71 = or i32 %2, %0
  %72 = xor i32 %71, %1
  %73 = and i32 %11, %4
  %74 = or i32 %56, %73
  %75 = xor i32 %45, %31
  %76 = xor i32 %13, -1
  %77 = xor i32 %76, %0
  %78 = and i32 %25, %4
  %79 = and i32 %61, %0
  %80 = or i32 %8, %2
  %81 = and i32 %80, %4
  %82 = xor i32 %81, 2147483647
  %83 = xor i32 %82, %79
  %84 = xor i32 %30, %0
  %85 = xor i32 %80, %0
  %86 = or i32 %79, %85
  %87 = or i32 %11, %19
  %88 = xor i32 %19, %76
  %89 = and i32 %20, %2
  %90 = xor i32 %37, %2
  %91 = xor i32 %48, %1
  %92 = shl i32 %91, 1
  %93 = xor i32 %56, 2147483647
  %94 = xor i32 %93, %73
  %95 = shl i32 %94, 1
  %96 = or i32 %37, %2
  %97 = shl i32 %96, 1
  %98 = or i32 %51, %28
  %99 = and i32 %80, %0
  %100 = xor i32 %99, -1
  %101 = xor i32 %62, %100
  %102 = and i32 %23, %36
  %103 = xor i32 %11, %0
  %104 = xor i32 %103, -1
  %105 = xor i32 %79, %104
  %106 = or i32 %13, %0
  %107 = and i32 %9, %18
  %108 = shl i32 %107, 1
  %109 = and i32 %23, %1
  %110 = or i32 %28, %2
  %111 = and i32 %71, %8
  %112 = and i32 %36, %2
  %113 = or i32 %18, %37
  %114 = xor i32 %71, -1
  %115 = xor i32 %114, %1
  %116 = and i32 %30, %0
  %117 = or i32 %22, %114
  %118 = xor i32 %32, %0
  %119 = and i32 %45, %22
  %120 = shl i32 %119, 1
  %121 = xor i32 %20, %2
  %122 = shl i32 %121, 1
  %123 = or i32 %32, %0
  %124 = shl i32 %63, 1
  %125 = or i32 %42, %4
  %126 = shl i32 %125, 1
  %127 = xor i32 %53, -1
  %128 = and i32 %127, %28
  %129 = shl i32 %128, 1
  %130 = and i32 %76, %0
  %131 = or i32 %11, %0
  %132 = xor i32 %31, -1
  %133 = xor i32 %132, %2
  %134 = add i32 %36, 1
  %135 = xor i32 %71, %31
  %136 = and i32 %36, %30
  %137 = and i32 %45, %28
  %138 = and i32 %48, %1
  %139 = or i32 %76, %4
  %140 = or i32 %23, %37
  %141 = or i32 %53, %8
  %142 = shl i32 %40, 1
  %143 = and i32 %43, %4
  %144 = xor i32 %45, %1
  %145 = and i32 %23, %9
  %146 = or i32 %23, %19
  %147 = or i32 %31, %114
  %148 = or i32 %15, %32
  %149 = xor i32 %15, %1
  %150 = shl i32 %149, 1
  %151 = and i32 %18, %132
  %152 = or i32 %46, %28
  %153 = and i32 %30, %132
  %154 = or i32 %53, %26
  %155 = and i32 %11, %0
  %156 = xor i32 %39, -1
  %157 = xor i32 %155, %156
  %158 = or i32 %15, %22
  %159 = xor i32 %19, %2
  %160 = and i32 %23, %8
  %161 = or i32 %114, %8
  %162 = or i32 %26, %4
  %163 = or i32 %51, %1
  %164 = shl i32 %163, 1
  %165 = add i32 %31, 1
  %166 = and i32 %45, %8
  %167 = and i32 %23, %20
  %168 = or i32 %23, %28
  %169 = add i32 %9, 1
  %170 = or i32 %56, %104
  %171 = add i32 %53, 1
  %172 = and i32 %30, %20
  %173 = or i32 %23, %10
  %174 = xor i32 %5, %31
  %175 = xor i32 %19, %43
  %176 = shl i32 %175, 1
  %177 = or i32 %15, %1
  %178 = and i32 %22, %51
  %179 = xor i32 %127, %1
  %180 = xor i32 %15, %43
  %181 = or i32 %13, %4
  %182 = add i32 %71, 1
  %183 = or i32 %19, %18
  %184 = and i32 %11, %20
  %185 = or i32 %19, %2
  %186 = or i32 %114, %28
  %187 = or i32 %22, %18
  %188 = and i32 %76, %4
  %189 = or i32 %31, %2
  %190 = xor i32 %15, %9
  %191 = xor i32 %93, %57
  %192 = shl i32 %191, 1
  %193 = or i32 %79, %81
  %194 = or i32 %79, %103
  %195 = or i32 %76, %0
  %196 = or i32 %31, %51
  %197 = shl i32 %196, 1
  %198 = or i32 %19, %51
  %199 = xor i32 %5, %0
  %200 = and i32 %132, %2
  %201 = and i32 %11, %9
  %202 = or i32 %31, %30
  %203 = and i32 %28, %2
  %204 = or i32 %22, %2
  %205 = or i32 %30, %4
  %206 = shl i32 %205, 2
  %207 = and i32 %127, %1
  %208 = xor i32 %40, %156
  %209 = or i32 %31, %18
  %210 = shl i32 %209, 2
  %211 = or i32 %31, %46
  %212 = or i32 %15, %10
  %213 = xor i32 %63, -1
  %214 = or i32 %62, %213
  %215 = or i32 %114, %1
  %216 = or i32 %30, %10
  %217 = or i32 %53, %22
  %218 = or i32 %22, %46
  %219 = or i32 %53, %13
  %220 = or i32 %56, %199
  %221 = or i32 %25, %4
  %222 = and i32 %22, %127
  %223 = shl i32 %222, 1
  %224 = or i32 %11, %31
  %225 = xor i32 %15, %36
  %226 = or i32 %51, %10
  %227 = and i32 %23, %22
  %228 = or i32 %15, %42
  %229 = or i32 %10, %2
  %230 = xor i32 %42, %0
  %231 = xor i32 %131, -1
  %232 = or i32 %79, %231
  %233 = and i32 %9, %51
  %234 = shl i32 %233, 1
  %235 = or i32 %18, %28
  %236 = or i32 %42, %19
  %237 = and i32 %11, %132
  %238 = and i32 %71, %28
  %239 = or i32 %32, %4
  %240 = xor i32 %10, %2
  %241 = or i32 %51, %37
  %242 = or i32 %62, %99
  %243 = xor i32 %31, %2
  %244 = shl i32 %22, 1
  %245 = and i32 %36, %51
  %246 = and i32 %30, %4
  %247 = or i32 %31, %26
  %248 = or i32 %5, %0
  %249 = shl i32 %248, 1
  %250 = and i32 %22, %48
  %251 = add i32 %45, 1
  %252 = xor i32 %56, %103
  %253 = or i32 %43, %4
  %254 = or i32 %22, %51
  %255 = and i32 %23, %132
  %256 = or i32 %23, %31
  %257 = and i32 %36, %18
  %258 = and i32 %32, %4
  %259 = mul i32 %258, 28
  %260 = and i32 %42, %4
  %261 = and i32 %32, %0
  %262 = and i32 %42, %0
  %263 = mul i32 %262, 7
  %264 = and i32 %26, %4
  %265 = and i32 %26, %0
  %266 = mul i32 %265, 37
  %267 = mul i32 %56, 11
  %268 = add i32 %264, %177
  %269 = add i32 %268, %162
  %270 = add i32 %269, %24
  %271 = mul i32 %270, -3
  %272 = add i32 %261, %251
  %273 = sub i32 %272, %170
  %274 = add i32 %273, %214
  %275 = mul i32 %274, 5
  %276 = add i32 %39, %260
  %277 = mul i32 %276, 19
  %278 = sub i32 -2, %2
  %279 = add i32 %278, %203
  %280 = add i32 %279, %159
  %281 = add i32 %280, %30
  %282 = add i32 %281, %5
  %283 = add i32 %282, %238
  %284 = add i32 %283, %237
  %285 = add i32 %284, %224
  %286 = add i32 %285, %216
  %287 = add i32 %286, %154
  %288 = add i32 %287, %146
  %289 = add i32 %288, %138
  %290 = add i32 %289, %131
  %291 = add i32 %290, %109
  %292 = add i32 %291, %77
  %293 = add i32 %292, %60
  %294 = add i32 %293, %52
  %295 = add i32 %294, %12
  %296 = add i32 %295, %193
  %297 = add i32 %296, %105
  %298 = add i32 %297, %86
  %299 = add i32 %298, %83
  %300 = shl i32 %299, 1
  %301 = add i32 %0, 1
  %302 = sub i32 %301, %1
  %303 = add i32 %302, %9
  %304 = add i32 %303, %134
  %305 = add i32 %304, %20
  %306 = add i32 %305, %165
  %307 = add i32 %306, %169
  %308 = sub i32 %307, %2
  %309 = sub i32 %308, %31
  %310 = sub i32 %309, %19
  %311 = add i32 %310, %36
  %312 = add i32 %311, %17
  %313 = sub i32 %312, %21
  %314 = sub i32 %313, %13
  %315 = add i32 %314, %29
  %316 = sub i32 %315, %55
  %317 = add i32 %316, %70
  %318 = sub i32 %317, %89
  %319 = sub i32 %318, %90
  %320 = add i32 %319, %110
  %321 = add i32 %320, %112
  %322 = add i32 %321, %113
  %323 = add i32 %322, %133
  %324 = sub i32 %323, %151
  %325 = add i32 %324, %171
  %326 = add i32 %325, %182
  %327 = add i32 %326, %183
  %328 = add i32 %327, %185
  %329 = add i32 %328, %187
  %330 = add i32 %329, %189
  %331 = sub i32 %330, %71
  %332 = sub i32 %331, %25
  %333 = add i32 %332, %11
  %334 = sub i32 %333, %45
  %335 = sub i32 %334, %200
  %336 = add i32 %335, %204
  %337 = add i32 %336, %76
  %338 = sub i32 %337, %229
  %339 = sub i32 %338, %235
  %340 = sub i32 %339, %240
  %341 = add i32 %340, %243
  %342 = sub i32 %341, %244
  %343 = sub i32 %342, %42
  %344 = add i32 %343, %257
  %345 = add i32 %344, %14
  %346 = add i32 %345, %16
  %347 = add i32 %346, %27
  %348 = add i32 %347, %33
  %349 = add i32 %348, %34
  %350 = add i32 %349, %35
  %351 = sub i32 %350, %38
  %352 = add i32 %351, %44
  %353 = add i32 %352, %47
  %354 = add i32 %353, %49
  %355 = sub i32 %354, %50
  %356 = add i32 %355, %54
  %357 = sub i32 %356, %59
  %358 = add i32 %357, %65
  %359 = sub i32 %358, %66
  %360 = add i32 %359, %67
  %361 = add i32 %360, %68
  %362 = add i32 %361, %69
  %363 = sub i32 %362, %72
  %364 = sub i32 %363, %75
  %365 = sub i32 %364, %78
  %366 = sub i32 %365, %84
  %367 = sub i32 %366, %87
  %368 = add i32 %367, %88
  %369 = sub i32 %368, %97
  %370 = sub i32 %369, %98
  %371 = add i32 %370, %102
  %372 = sub i32 %371, %106
  %373 = sub i32 %372, %108
  %374 = sub i32 %373, %111
  %375 = sub i32 %374, %115
  %376 = sub i32 %375, %57
  %377 = add i32 %376, %116
  %378 = add i32 %377, %117
  %379 = add i32 %378, %118
  %380 = sub i32 %379, %122
  %381 = sub i32 %380, %123
  %382 = sub i32 %381, %130
  %383 = sub i32 %382, %135
  %384 = add i32 %383, %136
  %385 = sub i32 %384, %137
  %386 = add i32 %385, %139
  %387 = sub i32 %386, %140
  %388 = sub i32 %387, %141
  %389 = add i32 %388, %143
  %390 = add i32 %389, %144
  %391 = sub i32 %390, %145
  %392 = sub i32 %391, %147
  %393 = sub i32 %392, %148
  %394 = add i32 %393, %152
  %395 = sub i32 %394, %153
  %396 = add i32 %395, %158
  %397 = sub i32 %396, %160
  %398 = sub i32 %397, %161
  %399 = add i32 %398, %103
  %400 = sub i32 %399, %166
  %401 = sub i32 %400, %167
  %402 = add i32 %401, %168
  %403 = sub i32 %402, %172
  %404 = sub i32 %403, %173
  %405 = add i32 %404, %174
  %406 = sub i32 %405, %178
  %407 = add i32 %406, %179
  %408 = add i32 %407, %180
  %409 = add i32 %408, %181
  %410 = sub i32 %409, %184
  %411 = sub i32 %410, %186
  %412 = add i32 %411, %188
  %413 = add i32 %412, %190
  %414 = add i32 %413, %195
  %415 = add i32 %414, %198
  %416 = add i32 %415, %199
  %417 = sub i32 %416, %201
  %418 = sub i32 %417, %202
  %419 = add i32 %418, %207
  %420 = sub i32 %419, %210
  %421 = add i32 %420, %211
  %422 = sub i32 %421, %212
  %423 = add i32 %422, %215
  %424 = sub i32 %423, %217
  %425 = add i32 %424, %218
  %426 = sub i32 %425, %219
  %427 = sub i32 %426, %221
  %428 = add i32 %427, %225
  %429 = sub i32 %428, %226
  %430 = add i32 %429, %227
  %431 = sub i32 %430, %228
  %432 = sub i32 %431, %230
  %433 = sub i32 %432, %236
  %434 = sub i32 %433, %239
  %435 = add i32 %434, %241
  %436 = sub i32 %435, %245
  %437 = sub i32 %436, %246
  %438 = sub i32 %437, %247
  %439 = add i32 %438, %250
  %440 = sub i32 %439, %253
  %441 = add i32 %440, %254
  %442 = sub i32 %441, %255
  %443 = sub i32 %442, %256
  %444 = sub i32 %443, %41
  %445 = add i32 %444, %58
  %446 = add i32 %445, %64
  %447 = add i32 %446, %74
  %448 = sub i32 %447, %92
  %449 = add i32 %448, %101
  %450 = sub i32 %449, %120
  %451 = sub i32 %450, %124
  %452 = sub i32 %451, %126
  %453 = sub i32 %452, %129
  %454 = sub i32 %453, %142
  %455 = sub i32 %454, %150
  %456 = sub i32 %455, %157
  %457 = sub i32 %456, %164
  %458 = sub i32 %457, %176
  %459 = sub i32 %458, %194
  %460 = sub i32 %459, %197
  %461 = sub i32 %460, %206
  %462 = sub i32 %461, %208
  %463 = sub i32 %462, %220
  %464 = sub i32 %463, %223
  %465 = sub i32 %464, %232
  %466 = sub i32 %465, %234
  %467 = sub i32 %466, %242
  %468 = sub i32 %467, %249
  %469 = add i32 %468, %252
  %470 = add i32 %469, %259
  %471 = add i32 %470, %263
  %472 = add i32 %471, %266
  %473 = add i32 %472, %267
  %474 = add i32 %473, %277
  %475 = sub i32 %474, %95
  %476 = sub i32 %475, %192
  %477 = add i32 %476, %271
  %478 = add i32 %477, %275
  %479 = add i32 %478, %300
  %480 = icmp eq i32 %7, %479
  %481 = select i1 %480, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %482 = tail call i32 @puts(i8* nonnull dereferenceable(1) %481)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)
  %8 = load i32, i32* %1, align 4, !tbaa !2
  %9 = load i32, i32* %2, align 4, !tbaa !2
  %10 = load i32, i32* %3, align 4, !tbaa !2
  call void @crackme(i32 %8, i32 %9, i32 %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
