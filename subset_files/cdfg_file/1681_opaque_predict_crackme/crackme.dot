digraph "DFG for'crackme' function" {
	Node0xe4e0d0[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xe4e140[shape=record, label="  %6 = and i32 %2, %1"];
	Node0xe4e1b0[shape=record, label="  %7 = or i32 %3, %0"];
	Node0xe4e250[shape=record, label="  %8 = add i32 %0, 1"];
	Node0xe4e2c0[shape=record, label="  %9 = add i32 %8, %2"];
	Node0xe4e330[shape=record, label="  %10 = sub i32 %9, %6"];
	Node0xe4e3a0[shape=record, label="  %11 = sub i32 %10, %7"];
	Node0xe4e410[shape=record, label="  %12 = and i32 %5, %1"];
	Node0xe4e4b0[shape=record, label="  %13 = shl i32 %12, 2"];
	Node0xe4e550[shape=record, label="  %14 = xor i32 %13, -4"];
	Node0xe4e5c0[shape=record, label="  %15 = xor i32 %5, %1"];
	Node0xe4e630[shape=record, label="  %16 = or i32 %5, %1"];
	Node0xe4e6a0[shape=record, label="  %17 = or i32 %2, %1"];
	Node0xe4e710[shape=record, label="  %18 = shl i32 %17, 2"];
	Node0xe4e780[shape=record, label="  %19 = xor i32 %18, -4"];
	Node0xe4e820[shape=record, label="  %20 = mul i32 %6, -5"];
	Node0xe4e890[shape=record, label="  %21 = xor i32 %3, %0"];
	Node0xe4e900[shape=record, label="  %22 = xor i32 %3, -1"];
	Node0xe4e970[shape=record, label="  %23 = xor i32 %21, -1"];
	Node0xe4e9e0[shape=record, label="  %24 = or i32 %22, %0"];
	Node0xe4ea50[shape=record, label="  %25 = and i32 %3, %0"];
	Node0xe4eac0[shape=record, label="  %26 = xor i32 %7, -1"];
	Node0xe4eb60[shape=record, label="  %27 = add i32 %1, 2147483647"];
	Node0xe4ebd0[shape=record, label="  %28 = add i32 %27, %21"];
	Node0xe4ec40[shape=record, label="  %29 = shl i32 %28, 1"];
	Node0xe4ece0[shape=record, label="  %30 = sub i32 8, %2"];
	Node0xe4ed50[shape=record, label="  %31 = add i32 %30, %15"];
	Node0xe4edc0[shape=record, label="  %32 = add i32 %31, %16"];
	Node0xe4f040[shape=record, label="  %33 = sub i32 %32, %12"];
	Node0xe4f0b0[shape=record, label="  %34 = add i32 %33, %20"];
	Node0xe4f120[shape=record, label="  %35 = add i32 %34, %23"];
	Node0xe4f190[shape=record, label="  %36 = add i32 %35, %24"];
	Node0xe4f200[shape=record, label="  %37 = add i32 %36, %25"];
	Node0xe4f270[shape=record, label="  %38 = add i32 %37, %26"];
	Node0xe4f2e0[shape=record, label="  %39 = add i32 %38, %14"];
	Node0xe4f350[shape=record, label="  %40 = sub i32 %39, %19"];
	Node0xe4f3c0[shape=record, label="  %41 = add i32 %40, %29"];
	Node0xe4f430[shape=record, label="  %42 = icmp eq i32 %11, %41"];
	Node0xdee268[shape=record, label="  %43 = select i1 %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe4f8d0[shape=record, label="  %44 = tail call i32 @puts(i8* nonnull dereferenceable(1) %43)"];
	Node0xe4f920[shape=record, label="  ret void"];
	Node0xe4e0d0 -> Node0xe4e140;
	Node0xe4e140 -> Node0xe4e1b0;
	Node0xe4e1b0 -> Node0xe4e250;
	Node0xe4e250 -> Node0xe4e2c0;
	Node0xe4e2c0 -> Node0xe4e330;
	Node0xe4e330 -> Node0xe4e3a0;
	Node0xe4e3a0 -> Node0xe4e410;
	Node0xe4e410 -> Node0xe4e4b0;
	Node0xe4e4b0 -> Node0xe4e550;
	Node0xe4e550 -> Node0xe4e5c0;
	Node0xe4e5c0 -> Node0xe4e630;
	Node0xe4e630 -> Node0xe4e6a0;
	Node0xe4e6a0 -> Node0xe4e710;
	Node0xe4e710 -> Node0xe4e780;
	Node0xe4e780 -> Node0xe4e820;
	Node0xe4e820 -> Node0xe4e890;
	Node0xe4e890 -> Node0xe4e900;
	Node0xe4e900 -> Node0xe4e970;
	Node0xe4e970 -> Node0xe4e9e0;
	Node0xe4e9e0 -> Node0xe4ea50;
	Node0xe4ea50 -> Node0xe4eac0;
	Node0xe4eac0 -> Node0xe4eb60;
	Node0xe4eb60 -> Node0xe4ebd0;
	Node0xe4ebd0 -> Node0xe4ec40;
	Node0xe4ec40 -> Node0xe4ece0;
	Node0xe4ece0 -> Node0xe4ed50;
	Node0xe4ed50 -> Node0xe4edc0;
	Node0xe4edc0 -> Node0xe4f040;
	Node0xe4f040 -> Node0xe4f0b0;
	Node0xe4f0b0 -> Node0xe4f120;
	Node0xe4f120 -> Node0xe4f190;
	Node0xe4f190 -> Node0xe4f200;
	Node0xe4f200 -> Node0xe4f270;
	Node0xe4f270 -> Node0xe4f2e0;
	Node0xe4f2e0 -> Node0xe4f350;
	Node0xe4f350 -> Node0xe4f3c0;
	Node0xe4f3c0 -> Node0xe4f430;
	Node0xe4f430 -> Node0xdee268;
	Node0xdee268 -> Node0xe4f8d0;
	Node0xe4f8d0 -> Node0xe4f920;
edge [color=red]
	Node0xe4e250 -> Node0xe4e2c0;
	Node0xe4e2c0 -> Node0xe4e330;
	Node0xe4e140 -> Node0xe4e330;
	Node0xe4e330 -> Node0xe4e3a0;
	Node0xe4e1b0 -> Node0xe4e3a0;
	Node0xe4e0d0 -> Node0xe4e410;
	Node0xe4e410 -> Node0xe4e4b0;
	Node0xe4e4b0 -> Node0xe4e550;
	Node0xe4e0d0 -> Node0xe4e5c0;
	Node0xe4e0d0 -> Node0xe4e630;
	Node0xe4e6a0 -> Node0xe4e710;
	Node0xe4e710 -> Node0xe4e780;
	Node0xe4e140 -> Node0xe4e820;
	Node0xe4e890 -> Node0xe4e970;
	Node0xe4e900 -> Node0xe4e9e0;
	Node0xe4e1b0 -> Node0xe4eac0;
	Node0xe4eb60 -> Node0xe4ebd0;
	Node0xe4e890 -> Node0xe4ebd0;
	Node0xe4ebd0 -> Node0xe4ec40;
	Node0xe4ece0 -> Node0xe4ed50;
	Node0xe4e5c0 -> Node0xe4ed50;
	Node0xe4ed50 -> Node0xe4edc0;
	Node0xe4e630 -> Node0xe4edc0;
	Node0xe4edc0 -> Node0xe4f040;
	Node0xe4e410 -> Node0xe4f040;
	Node0xe4f040 -> Node0xe4f0b0;
	Node0xe4e820 -> Node0xe4f0b0;
	Node0xe4f0b0 -> Node0xe4f120;
	Node0xe4e970 -> Node0xe4f120;
	Node0xe4f120 -> Node0xe4f190;
	Node0xe4e9e0 -> Node0xe4f190;
	Node0xe4f190 -> Node0xe4f200;
	Node0xe4ea50 -> Node0xe4f200;
	Node0xe4f200 -> Node0xe4f270;
	Node0xe4eac0 -> Node0xe4f270;
	Node0xe4f270 -> Node0xe4f2e0;
	Node0xe4e550 -> Node0xe4f2e0;
	Node0xe4f2e0 -> Node0xe4f350;
	Node0xe4e780 -> Node0xe4f350;
	Node0xe4f350 -> Node0xe4f3c0;
	Node0xe4ec40 -> Node0xe4f3c0;
	Node0xe4e3a0 -> Node0xe4f430;
	Node0xe4f3c0 -> Node0xe4f430;
	Node0xe4f430 -> Node0xdee268;
	Node0xdee268 -> Node0xe4f8d0;
}
