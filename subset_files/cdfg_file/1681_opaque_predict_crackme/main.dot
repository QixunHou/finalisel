digraph "DFG for'main' function" {
	Node0xe4fae8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xe4fb68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xe4fbf8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xe4fc58[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xe4fd08[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xe50138[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe50218[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xe50318[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe503d8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xe50488[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xe50548[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xe505f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xe4aaf0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xe507f8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xe51768[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xe51dd8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xe51e38[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xe51eb0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0xe51f20[shape=record, label="  %15 = and i32 %12, %11"];
	Node0xe51f90[shape=record, label="  %16 = or i32 %13, %10"];
	Node0xe52000[shape=record, label="  %17 = add i32 %10, 1"];
	Node0xe52070[shape=record, label="  %18 = add i32 %17, %12"];
	Node0xe520e0[shape=record, label="  %19 = sub i32 %18, %15"];
	Node0xe52150[shape=record, label="  %20 = sub i32 %19, %16"];
	Node0xe521c0[shape=record, label="  %21 = and i32 %11, %14"];
	Node0xe52230[shape=record, label="  %22 = shl i32 %21, 2"];
	Node0xe522a0[shape=record, label="  %23 = xor i32 %22, -4"];
	Node0xe52310[shape=record, label="  %24 = xor i32 %11, %14"];
	Node0xe52380[shape=record, label="  %25 = or i32 %11, %14"];
	Node0xe523f0[shape=record, label="  %26 = or i32 %12, %11"];
	Node0xe52460[shape=record, label="  %27 = shl i32 %26, 2"];
	Node0xe524d0[shape=record, label="  %28 = xor i32 %27, -4"];
	Node0xe52540[shape=record, label="  %29 = mul i32 %15, -5"];
	Node0xe525b0[shape=record, label="  %30 = xor i32 %13, %10"];
	Node0xe52620[shape=record, label="  %31 = xor i32 %13, -1"];
	Node0xe52690[shape=record, label="  %32 = xor i32 %30, -1"];
	Node0xe52700[shape=record, label="  %33 = or i32 %10, %31"];
	Node0xe52770[shape=record, label="  %34 = and i32 %13, %10"];
	Node0xe527e0[shape=record, label="  %35 = xor i32 %16, -1"];
	Node0xe52850[shape=record, label="  %36 = add i32 %11, 2147483647"];
	Node0xe528c0[shape=record, label="  %37 = add i32 %36, %30"];
	Node0xe52930[shape=record, label="  %38 = shl i32 %37, 1"];
	Node0xe529a0[shape=record, label="  %39 = sub i32 8, %12"];
	Node0xe52a10[shape=record, label="  %40 = add i32 %39, %24"];
	Node0xe52a80[shape=record, label="  %41 = add i32 %40, %25"];
	Node0xe52af0[shape=record, label="  %42 = sub i32 %41, %21"];
	Node0xe52b60[shape=record, label="  %43 = add i32 %42, %29"];
	Node0xe52bd0[shape=record, label="  %44 = add i32 %43, %32"];
	Node0xe52c40[shape=record, label="  %45 = add i32 %44, %33"];
	Node0xe52cb0[shape=record, label="  %46 = add i32 %45, %34"];
	Node0xe52d20[shape=record, label="  %47 = add i32 %46, %35"];
	Node0xe52d90[shape=record, label="  %48 = add i32 %47, %23"];
	Node0xe52e00[shape=record, label="  %49 = sub i32 %48, %28"];
	Node0xe52e70[shape=record, label="  %50 = add i32 %49, %38"];
	Node0xe52ee0[shape=record, label="  %51 = icmp eq i32 %20, %50"];
	Node0xdef8b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xe52f70[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0xe53218[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xe53378[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xe53488[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xe53598[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xe53658[shape=record, label="  ret i32 0"];
	Node0xe4fae8 -> Node0xe4fb68;
	Node0xe4fb68 -> Node0xe4fbf8;
	Node0xe4fbf8 -> Node0xe4fc58;
	Node0xe4fc58 -> Node0xe4fd08;
	Node0xe4fd08 -> Node0xe50138;
	Node0xe50138 -> Node0xe50218;
	Node0xe50218 -> Node0xe50318;
	Node0xe50318 -> Node0xe503d8;
	Node0xe503d8 -> Node0xe50488;
	Node0xe50488 -> Node0xe50548;
	Node0xe50548 -> Node0xe505f8;
	Node0xe505f8 -> Node0xe4aaf0;
	Node0xe4aaf0 -> Node0xe507f8;
	Node0xe507f8 -> Node0xe51768;
	Node0xe51768 -> Node0xe51dd8;
	Node0xe51dd8 -> Node0xe51e38;
	Node0xe51e38 -> Node0xe51eb0;
	Node0xe51eb0 -> Node0xe51f20;
	Node0xe51f20 -> Node0xe51f90;
	Node0xe51f90 -> Node0xe52000;
	Node0xe52000 -> Node0xe52070;
	Node0xe52070 -> Node0xe520e0;
	Node0xe520e0 -> Node0xe52150;
	Node0xe52150 -> Node0xe521c0;
	Node0xe521c0 -> Node0xe52230;
	Node0xe52230 -> Node0xe522a0;
	Node0xe522a0 -> Node0xe52310;
	Node0xe52310 -> Node0xe52380;
	Node0xe52380 -> Node0xe523f0;
	Node0xe523f0 -> Node0xe52460;
	Node0xe52460 -> Node0xe524d0;
	Node0xe524d0 -> Node0xe52540;
	Node0xe52540 -> Node0xe525b0;
	Node0xe525b0 -> Node0xe52620;
	Node0xe52620 -> Node0xe52690;
	Node0xe52690 -> Node0xe52700;
	Node0xe52700 -> Node0xe52770;
	Node0xe52770 -> Node0xe527e0;
	Node0xe527e0 -> Node0xe52850;
	Node0xe52850 -> Node0xe528c0;
	Node0xe528c0 -> Node0xe52930;
	Node0xe52930 -> Node0xe529a0;
	Node0xe529a0 -> Node0xe52a10;
	Node0xe52a10 -> Node0xe52a80;
	Node0xe52a80 -> Node0xe52af0;
	Node0xe52af0 -> Node0xe52b60;
	Node0xe52b60 -> Node0xe52bd0;
	Node0xe52bd0 -> Node0xe52c40;
	Node0xe52c40 -> Node0xe52cb0;
	Node0xe52cb0 -> Node0xe52d20;
	Node0xe52d20 -> Node0xe52d90;
	Node0xe52d90 -> Node0xe52e00;
	Node0xe52e00 -> Node0xe52e70;
	Node0xe52e70 -> Node0xe52ee0;
	Node0xe52ee0 -> Node0xdef8b8;
	Node0xdef8b8 -> Node0xe52f70;
	Node0xe52f70 -> Node0xe53218;
	Node0xe53218 -> Node0xe53378;
	Node0xe53378 -> Node0xe53488;
	Node0xe53488 -> Node0xe53598;
	Node0xe53598 -> Node0xe53658;
edge [color=red]
	Node0xe4fae8 -> Node0xe4fd08;
	Node0xe4fd08 -> Node0xe50138;
	Node0xe4fb68 -> Node0xe50218;
	Node0xe50218 -> Node0xe50318;
	Node0xe4fbf8 -> Node0xe503d8;
	Node0xe503d8 -> Node0xe50488;
	Node0xe4fc58 -> Node0xe50548;
	Node0xe50548 -> Node0xe505f8;
	Node0xe4fae8 -> Node0xe4aaf0;
	Node0xe4fb68 -> Node0xe4aaf0;
	Node0xe4fbf8 -> Node0xe4aaf0;
	Node0xe4fc58 -> Node0xe4aaf0;
	Node0xe4fae8 -> Node0xe507f8;
	Node0xe4fb68 -> Node0xe51768;
	Node0xe4fbf8 -> Node0xe51dd8;
	Node0xe4fc58 -> Node0xe51e38;
	Node0xe51dd8 -> Node0xe51eb0;
	Node0xe51dd8 -> Node0xe51f20;
	Node0xe51768 -> Node0xe51f20;
	Node0xe51e38 -> Node0xe51f90;
	Node0xe507f8 -> Node0xe51f90;
	Node0xe507f8 -> Node0xe52000;
	Node0xe52000 -> Node0xe52070;
	Node0xe51dd8 -> Node0xe52070;
	Node0xe52070 -> Node0xe520e0;
	Node0xe51f20 -> Node0xe520e0;
	Node0xe520e0 -> Node0xe52150;
	Node0xe51f90 -> Node0xe52150;
	Node0xe51768 -> Node0xe521c0;
	Node0xe51eb0 -> Node0xe521c0;
	Node0xe521c0 -> Node0xe52230;
	Node0xe52230 -> Node0xe522a0;
	Node0xe51768 -> Node0xe52310;
	Node0xe51eb0 -> Node0xe52310;
	Node0xe51768 -> Node0xe52380;
	Node0xe51eb0 -> Node0xe52380;
	Node0xe51dd8 -> Node0xe523f0;
	Node0xe51768 -> Node0xe523f0;
	Node0xe523f0 -> Node0xe52460;
	Node0xe52460 -> Node0xe524d0;
	Node0xe51f20 -> Node0xe52540;
	Node0xe51e38 -> Node0xe525b0;
	Node0xe507f8 -> Node0xe525b0;
	Node0xe51e38 -> Node0xe52620;
	Node0xe525b0 -> Node0xe52690;
	Node0xe507f8 -> Node0xe52700;
	Node0xe52620 -> Node0xe52700;
	Node0xe51e38 -> Node0xe52770;
	Node0xe507f8 -> Node0xe52770;
	Node0xe51f90 -> Node0xe527e0;
	Node0xe51768 -> Node0xe52850;
	Node0xe52850 -> Node0xe528c0;
	Node0xe525b0 -> Node0xe528c0;
	Node0xe528c0 -> Node0xe52930;
	Node0xe51dd8 -> Node0xe529a0;
	Node0xe529a0 -> Node0xe52a10;
	Node0xe52310 -> Node0xe52a10;
	Node0xe52a10 -> Node0xe52a80;
	Node0xe52380 -> Node0xe52a80;
	Node0xe52a80 -> Node0xe52af0;
	Node0xe521c0 -> Node0xe52af0;
	Node0xe52af0 -> Node0xe52b60;
	Node0xe52540 -> Node0xe52b60;
	Node0xe52b60 -> Node0xe52bd0;
	Node0xe52690 -> Node0xe52bd0;
	Node0xe52bd0 -> Node0xe52c40;
	Node0xe52700 -> Node0xe52c40;
	Node0xe52c40 -> Node0xe52cb0;
	Node0xe52770 -> Node0xe52cb0;
	Node0xe52cb0 -> Node0xe52d20;
	Node0xe527e0 -> Node0xe52d20;
	Node0xe52d20 -> Node0xe52d90;
	Node0xe522a0 -> Node0xe52d90;
	Node0xe52d90 -> Node0xe52e00;
	Node0xe524d0 -> Node0xe52e00;
	Node0xe52e00 -> Node0xe52e70;
	Node0xe52930 -> Node0xe52e70;
	Node0xe52150 -> Node0xe52ee0;
	Node0xe52e70 -> Node0xe52ee0;
	Node0xe52ee0 -> Node0xdef8b8;
	Node0xdef8b8 -> Node0xe52f70;
	Node0xe50548 -> Node0xe53218;
	Node0xe503d8 -> Node0xe53378;
	Node0xe50218 -> Node0xe53488;
	Node0xe4fd08 -> Node0xe53598;
}
