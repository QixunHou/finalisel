digraph "DFG for'crackme' function" {
	Node0x12fda30[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0x12fdaa0[shape=record, label="  %4 = xor i32 %3, %0"];
	Node0x12fdb60[shape=record, label="  %5 = or i32 %1, %0"];
	Node0x12fdbd0[shape=record, label="  %6 = mul i32 %5, -2"];
	Node0x12fdc40[shape=record, label="  %7 = or i32 %3, %0"];
	Node0x12fdcb0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x12fdd20[shape=record, label="  %9 = and i32 %3, %0"];
	Node0x12fdd90[shape=record, label="  %10 = and i32 %1, %0"];
	Node0x12fde00[shape=record, label="  %11 = add i32 %8, %0"];
	Node0x12fdea0[shape=record, label="  %12 = mul i32 %11, 3"];
	Node0x12fdf40[shape=record, label="  %13 = add i32 %4, 1"];
	Node0x12fdfb0[shape=record, label="  %14 = add i32 %13, %7"];
	Node0x12fe020[shape=record, label="  %15 = sub i32 %14, %9"];
	Node0x12fe090[shape=record, label="  %16 = sub i32 %15, %10"];
	Node0x12fe100[shape=record, label="  %17 = add i32 %16, %6"];
	Node0x12fe170[shape=record, label="  %18 = add i32 %17, %12"];
	Node0x12fe1e0[shape=record, label="  %19 = icmp eq i32 %18, %4"];
	Node0x129e268[shape=record, label="  %20 = select i1 %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x12fe680[shape=record, label="  %21 = tail call i32 @puts(i8* nonnull dereferenceable(1) %20)"];
	Node0x12fe6d0[shape=record, label="  ret void"];
	Node0x12fda30 -> Node0x12fdaa0;
	Node0x12fdaa0 -> Node0x12fdb60;
	Node0x12fdb60 -> Node0x12fdbd0;
	Node0x12fdbd0 -> Node0x12fdc40;
	Node0x12fdc40 -> Node0x12fdcb0;
	Node0x12fdcb0 -> Node0x12fdd20;
	Node0x12fdd20 -> Node0x12fdd90;
	Node0x12fdd90 -> Node0x12fde00;
	Node0x12fde00 -> Node0x12fdea0;
	Node0x12fdea0 -> Node0x12fdf40;
	Node0x12fdf40 -> Node0x12fdfb0;
	Node0x12fdfb0 -> Node0x12fe020;
	Node0x12fe020 -> Node0x12fe090;
	Node0x12fe090 -> Node0x12fe100;
	Node0x12fe100 -> Node0x12fe170;
	Node0x12fe170 -> Node0x12fe1e0;
	Node0x12fe1e0 -> Node0x129e268;
	Node0x129e268 -> Node0x12fe680;
	Node0x12fe680 -> Node0x12fe6d0;
edge [color=red]
	Node0x12fda30 -> Node0x12fdaa0;
	Node0x12fdb60 -> Node0x12fdbd0;
	Node0x12fda30 -> Node0x12fdc40;
	Node0x12fdc40 -> Node0x12fdcb0;
	Node0x12fda30 -> Node0x12fdd20;
	Node0x12fdcb0 -> Node0x12fde00;
	Node0x12fde00 -> Node0x12fdea0;
	Node0x12fdaa0 -> Node0x12fdf40;
	Node0x12fdf40 -> Node0x12fdfb0;
	Node0x12fdc40 -> Node0x12fdfb0;
	Node0x12fdfb0 -> Node0x12fe020;
	Node0x12fdd20 -> Node0x12fe020;
	Node0x12fe020 -> Node0x12fe090;
	Node0x12fdd90 -> Node0x12fe090;
	Node0x12fe090 -> Node0x12fe100;
	Node0x12fdbd0 -> Node0x12fe100;
	Node0x12fe100 -> Node0x12fe170;
	Node0x12fdea0 -> Node0x12fe170;
	Node0x12fe170 -> Node0x12fe1e0;
	Node0x12fdaa0 -> Node0x12fe1e0;
	Node0x12fe1e0 -> Node0x129e268;
	Node0x129e268 -> Node0x12fe680;
}
