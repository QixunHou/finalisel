digraph "DFG for'crackme' function" {
	Node0xccba00[shape=record, label="  %3 = xor i32 %1, -1"];
	Node0xccbaa0[shape=record, label="  %4 = add i32 %1, 1"];
	Node0xccbb60[shape=record, label="  %5 = xor i32 %1, %0"];
	Node0xccbbd0[shape=record, label="  %6 = add i32 %4, %5"];
	Node0xccbc40[shape=record, label="  %7 = or i32 %1, %0"];
	Node0xccbcb0[shape=record, label="  %8 = xor i32 %0, -1"];
	Node0xccbd20[shape=record, label="  %9 = or i32 %8, %1"];
	Node0xccbd90[shape=record, label="  %10 = or i32 %3, %0"];
	Node0xccbe00[shape=record, label="  %11 = xor i32 %7, -1"];
	Node0xccbe70[shape=record, label="  %12 = mul i32 %11, -3"];
	Node0xccbf10[shape=record, label="  %13 = sub i32 -2, %1"];
	Node0xccbf80[shape=record, label="  %14 = sub i32 %13, %7"];
	Node0xccbff0[shape=record, label="  %15 = add i32 %14, %9"];
	Node0xccc060[shape=record, label="  %16 = sub i32 %15, %10"];
	Node0xccc0d0[shape=record, label="  %17 = add i32 %16, %12"];
	Node0xccc140[shape=record, label="  %18 = icmp eq i32 %6, %17"];
	Node0xc6c268[shape=record, label="  %19 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xccc5e0[shape=record, label="  %20 = tail call i32 @puts(i8* nonnull dereferenceable(1) %19)"];
	Node0xccc630[shape=record, label="  ret void"];
	Node0xccba00 -> Node0xccbaa0;
	Node0xccbaa0 -> Node0xccbb60;
	Node0xccbb60 -> Node0xccbbd0;
	Node0xccbbd0 -> Node0xccbc40;
	Node0xccbc40 -> Node0xccbcb0;
	Node0xccbcb0 -> Node0xccbd20;
	Node0xccbd20 -> Node0xccbd90;
	Node0xccbd90 -> Node0xccbe00;
	Node0xccbe00 -> Node0xccbe70;
	Node0xccbe70 -> Node0xccbf10;
	Node0xccbf10 -> Node0xccbf80;
	Node0xccbf80 -> Node0xccbff0;
	Node0xccbff0 -> Node0xccc060;
	Node0xccc060 -> Node0xccc0d0;
	Node0xccc0d0 -> Node0xccc140;
	Node0xccc140 -> Node0xc6c268;
	Node0xc6c268 -> Node0xccc5e0;
	Node0xccc5e0 -> Node0xccc630;
edge [color=red]
	Node0xccbaa0 -> Node0xccbbd0;
	Node0xccbb60 -> Node0xccbbd0;
	Node0xccbcb0 -> Node0xccbd20;
	Node0xccba00 -> Node0xccbd90;
	Node0xccbc40 -> Node0xccbe00;
	Node0xccbe00 -> Node0xccbe70;
	Node0xccbf10 -> Node0xccbf80;
	Node0xccbc40 -> Node0xccbf80;
	Node0xccbf80 -> Node0xccbff0;
	Node0xccbd20 -> Node0xccbff0;
	Node0xccbff0 -> Node0xccc060;
	Node0xccbd90 -> Node0xccc060;
	Node0xccc060 -> Node0xccc0d0;
	Node0xccbe70 -> Node0xccc0d0;
	Node0xccbbd0 -> Node0xccc140;
	Node0xccc0d0 -> Node0xccc140;
	Node0xccc140 -> Node0xc6c268;
	Node0xc6c268 -> Node0xccc5e0;
}
