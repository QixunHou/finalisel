digraph "DFG for'crackme' function" {
	Node0x2384720[shape=record, label="  %5 = xor i32 %3, %0"];
	Node0x2384da0[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0x2384e40[shape=record, label="  %7 = xor i32 %6, -2"];
	Node0x2384ee0[shape=record, label="  %8 = add i32 %1, -1"];
	Node0x2384f50[shape=record, label="  %9 = add i32 %8, %2"];
	Node0x2384fc0[shape=record, label="  %10 = add i32 %9, %7"];
	Node0x2385030[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x23850a0[shape=record, label="  %12 = and i32 %11, %1"];
	Node0x2385110[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x2385180[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x23851f0[shape=record, label="  %15 = or i32 %11, %1"];
	Node0x2385260[shape=record, label="  %16 = xor i32 %11, %1"];
	Node0x23852d0[shape=record, label="  %17 = and i32 %2, %1"];
	Node0x2385340[shape=record, label="  %18 = or i32 %2, %1"];
	Node0x23853b0[shape=record, label="  %19 = xor i32 %15, -1"];
	Node0x2385450[shape=record, label="  %20 = mul i32 %17, 3"];
	Node0x23854c0[shape=record, label="  %21 = shl i32 %0, 1"];
	Node0x2385530[shape=record, label="  %22 = xor i32 %0, -1"];
	Node0x23855a0[shape=record, label="  %23 = and i32 %22, %3"];
	Node0x2385610[shape=record, label="  %24 = shl i32 %23, 1"];
	Node0x2385680[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x23856f0[shape=record, label="  %26 = or i32 %22, %3"];
	Node0x2385760[shape=record, label="  %27 = and i32 %3, %0"];
	Node0x23857d0[shape=record, label="  %28 = xor i32 %27, -1"];
	Node0x2385840[shape=record, label="  %29 = or i32 %3, %0"];
	Node0x23858b0[shape=record, label="  %30 = xor i32 %29, -1"];
	Node0x2385950[shape=record, label="  %31 = mul i32 %30, 5"];
	Node0x23859f0[shape=record, label="  %32 = shl i32 %27, 2"];
	Node0x2385c70[shape=record, label="  %33 = or i32 %21, 1"];
	Node0x2385ce0[shape=record, label="  %34 = add i32 %33, %11"];
	Node0x2385d50[shape=record, label="  %35 = sub i32 %34, %15"];
	Node0x2385dc0[shape=record, label="  %36 = add i32 %35, %16"];
	Node0x2385e30[shape=record, label="  %37 = sub i32 %36, %17"];
	Node0x2385ea0[shape=record, label="  %38 = add i32 %37, %18"];
	Node0x2385f10[shape=record, label="  %39 = add i32 %38, %19"];
	Node0x2385f80[shape=record, label="  %40 = sub i32 %39, %12"];
	Node0x2385ff0[shape=record, label="  %41 = add i32 %40, %20"];
	Node0x2386060[shape=record, label="  %42 = add i32 %41, %26"];
	Node0x23860d0[shape=record, label="  %43 = add i32 %42, %28"];
	Node0x2386140[shape=record, label="  %44 = sub i32 %43, %23"];
	Node0x23861b0[shape=record, label="  %45 = sub i32 %44, %14"];
	Node0x2386220[shape=record, label="  %46 = add i32 %45, %6"];
	Node0x2386290[shape=record, label="  %47 = add i32 %46, %31"];
	Node0x2386300[shape=record, label="  %48 = add i32 %47, %32"];
	Node0x2386370[shape=record, label="  %49 = sub i32 %48, %25"];
	Node0x23863e0[shape=record, label="  %50 = icmp eq i32 %10, %49"];
	Node0x2325268[shape=record, label="  %51 = select i1 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x2386880[shape=record, label="  %52 = tail call i32 @puts(i8* nonnull dereferenceable(1) %51)"];
	Node0x23868d0[shape=record, label="  ret void"];
	Node0x2384720 -> Node0x2384da0;
	Node0x2384da0 -> Node0x2384e40;
	Node0x2384e40 -> Node0x2384ee0;
	Node0x2384ee0 -> Node0x2384f50;
	Node0x2384f50 -> Node0x2384fc0;
	Node0x2384fc0 -> Node0x2385030;
	Node0x2385030 -> Node0x23850a0;
	Node0x23850a0 -> Node0x2385110;
	Node0x2385110 -> Node0x2385180;
	Node0x2385180 -> Node0x23851f0;
	Node0x23851f0 -> Node0x2385260;
	Node0x2385260 -> Node0x23852d0;
	Node0x23852d0 -> Node0x2385340;
	Node0x2385340 -> Node0x23853b0;
	Node0x23853b0 -> Node0x2385450;
	Node0x2385450 -> Node0x23854c0;
	Node0x23854c0 -> Node0x2385530;
	Node0x2385530 -> Node0x23855a0;
	Node0x23855a0 -> Node0x2385610;
	Node0x2385610 -> Node0x2385680;
	Node0x2385680 -> Node0x23856f0;
	Node0x23856f0 -> Node0x2385760;
	Node0x2385760 -> Node0x23857d0;
	Node0x23857d0 -> Node0x2385840;
	Node0x2385840 -> Node0x23858b0;
	Node0x23858b0 -> Node0x2385950;
	Node0x2385950 -> Node0x23859f0;
	Node0x23859f0 -> Node0x2385c70;
	Node0x2385c70 -> Node0x2385ce0;
	Node0x2385ce0 -> Node0x2385d50;
	Node0x2385d50 -> Node0x2385dc0;
	Node0x2385dc0 -> Node0x2385e30;
	Node0x2385e30 -> Node0x2385ea0;
	Node0x2385ea0 -> Node0x2385f10;
	Node0x2385f10 -> Node0x2385f80;
	Node0x2385f80 -> Node0x2385ff0;
	Node0x2385ff0 -> Node0x2386060;
	Node0x2386060 -> Node0x23860d0;
	Node0x23860d0 -> Node0x2386140;
	Node0x2386140 -> Node0x23861b0;
	Node0x23861b0 -> Node0x2386220;
	Node0x2386220 -> Node0x2386290;
	Node0x2386290 -> Node0x2386300;
	Node0x2386300 -> Node0x2386370;
	Node0x2386370 -> Node0x23863e0;
	Node0x23863e0 -> Node0x2325268;
	Node0x2325268 -> Node0x2386880;
	Node0x2386880 -> Node0x23868d0;
edge [color=red]
	Node0x2384720 -> Node0x2384da0;
	Node0x2384da0 -> Node0x2384e40;
	Node0x2384ee0 -> Node0x2384f50;
	Node0x2384f50 -> Node0x2384fc0;
	Node0x2384e40 -> Node0x2384fc0;
	Node0x2385030 -> Node0x23850a0;
	Node0x23850a0 -> Node0x2385110;
	Node0x2385110 -> Node0x2385180;
	Node0x2385030 -> Node0x23851f0;
	Node0x2385030 -> Node0x2385260;
	Node0x23851f0 -> Node0x23853b0;
	Node0x23852d0 -> Node0x2385450;
	Node0x2385530 -> Node0x23855a0;
	Node0x23855a0 -> Node0x2385610;
	Node0x2385610 -> Node0x2385680;
	Node0x2385530 -> Node0x23856f0;
	Node0x2385760 -> Node0x23857d0;
	Node0x2385840 -> Node0x23858b0;
	Node0x23858b0 -> Node0x2385950;
	Node0x2385760 -> Node0x23859f0;
	Node0x23854c0 -> Node0x2385c70;
	Node0x2385c70 -> Node0x2385ce0;
	Node0x2385030 -> Node0x2385ce0;
	Node0x2385ce0 -> Node0x2385d50;
	Node0x23851f0 -> Node0x2385d50;
	Node0x2385d50 -> Node0x2385dc0;
	Node0x2385260 -> Node0x2385dc0;
	Node0x2385dc0 -> Node0x2385e30;
	Node0x23852d0 -> Node0x2385e30;
	Node0x2385e30 -> Node0x2385ea0;
	Node0x2385340 -> Node0x2385ea0;
	Node0x2385ea0 -> Node0x2385f10;
	Node0x23853b0 -> Node0x2385f10;
	Node0x2385f10 -> Node0x2385f80;
	Node0x23850a0 -> Node0x2385f80;
	Node0x2385f80 -> Node0x2385ff0;
	Node0x2385450 -> Node0x2385ff0;
	Node0x2385ff0 -> Node0x2386060;
	Node0x23856f0 -> Node0x2386060;
	Node0x2386060 -> Node0x23860d0;
	Node0x23857d0 -> Node0x23860d0;
	Node0x23860d0 -> Node0x2386140;
	Node0x23855a0 -> Node0x2386140;
	Node0x2386140 -> Node0x23861b0;
	Node0x2385180 -> Node0x23861b0;
	Node0x23861b0 -> Node0x2386220;
	Node0x2384da0 -> Node0x2386220;
	Node0x2386220 -> Node0x2386290;
	Node0x2385950 -> Node0x2386290;
	Node0x2386290 -> Node0x2386300;
	Node0x23859f0 -> Node0x2386300;
	Node0x2386300 -> Node0x2386370;
	Node0x2385680 -> Node0x2386370;
	Node0x2384fc0 -> Node0x23863e0;
	Node0x2386370 -> Node0x23863e0;
	Node0x23863e0 -> Node0x2325268;
	Node0x2325268 -> Node0x2386880;
}
