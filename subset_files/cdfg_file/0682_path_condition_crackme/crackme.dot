digraph "DFG for'crackme' function" {
	Node0xc1d030[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0xc1d0a0[shape=record, label="  %6 = or i32 %5, %1"];
	Node0xc1d110[shape=record, label="  %7 = xor i32 %0, -1"];
	Node0xc1d180[shape=record, label="  %8 = add i32 %6, %7"];
	Node0xc1d1f0[shape=record, label="  %9 = or i32 %3, %0"];
	Node0xc1d260[shape=record, label="  %10 = add i32 %8, %9"];
	Node0xc1d300[shape=record, label="  %11 = shl i32 %2, 1"];
	Node0xc1d370[shape=record, label="  %12 = and i32 %2, %1"];
	Node0xc1d3e0[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0xc1d480[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0xc1d4f0[shape=record, label="  %15 = and i32 %5, %1"];
	Node0xc1d560[shape=record, label="  %16 = or i32 %2, %1"];
	Node0xc1d5d0[shape=record, label="  %17 = shl i32 %6, 1"];
	Node0xc1d640[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0xc1d6e0[shape=record, label="  %19 = mul i32 %12, 6"];
	Node0xc1d750[shape=record, label="  %20 = xor i32 %3, %0"];
	Node0xc1d7c0[shape=record, label="  %21 = or i32 %7, %3"];
	Node0xc1d830[shape=record, label="  %22 = xor i32 %3, -1"];
	Node0xc1d8a0[shape=record, label="  %23 = or i32 %22, %0"];
	Node0xc1d910[shape=record, label="  %24 = xor i32 %21, -1"];
	Node0xc1d9b0[shape=record, label="  %25 = mul i32 %24, -3"];
	Node0xc1da50[shape=record, label="  %26 = add i32 %15, 2147483647"];
	Node0xc1dac0[shape=record, label="  %27 = add i32 %26, %20"];
	Node0xc1db30[shape=record, label="  %28 = shl i32 %27, 1"];
	Node0xc1dbd0[shape=record, label="  %29 = sub i32 2, %1"];
	Node0xc1dc40[shape=record, label="  %30 = sub i32 %29, %11"];
	Node0xc1dcb0[shape=record, label="  %31 = sub i32 %30, %16"];
	Node0xc1dd20[shape=record, label="  %32 = add i32 %31, %19"];
	Node0xc1dfa0[shape=record, label="  %33 = sub i32 %32, %21"];
	Node0xc1e010[shape=record, label="  %34 = add i32 %33, %23"];
	Node0xc1e080[shape=record, label="  %35 = add i32 %34, %14"];
	Node0xc1e0f0[shape=record, label="  %36 = add i32 %35, %18"];
	Node0xc1e160[shape=record, label="  %37 = add i32 %36, %25"];
	Node0xc1e1d0[shape=record, label="  %38 = add i32 %37, %28"];
	Node0xc1e240[shape=record, label="  %39 = icmp eq i32 %10, %38"];
	Node0xbbd268[shape=record, label="  %40 = select i1 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xc1e6e0[shape=record, label="  %41 = tail call i32 @puts(i8* nonnull dereferenceable(1) %40)"];
	Node0xc1e730[shape=record, label="  ret void"];
	Node0xc1d030 -> Node0xc1d0a0;
	Node0xc1d0a0 -> Node0xc1d110;
	Node0xc1d110 -> Node0xc1d180;
	Node0xc1d180 -> Node0xc1d1f0;
	Node0xc1d1f0 -> Node0xc1d260;
	Node0xc1d260 -> Node0xc1d300;
	Node0xc1d300 -> Node0xc1d370;
	Node0xc1d370 -> Node0xc1d3e0;
	Node0xc1d3e0 -> Node0xc1d480;
	Node0xc1d480 -> Node0xc1d4f0;
	Node0xc1d4f0 -> Node0xc1d560;
	Node0xc1d560 -> Node0xc1d5d0;
	Node0xc1d5d0 -> Node0xc1d640;
	Node0xc1d640 -> Node0xc1d6e0;
	Node0xc1d6e0 -> Node0xc1d750;
	Node0xc1d750 -> Node0xc1d7c0;
	Node0xc1d7c0 -> Node0xc1d830;
	Node0xc1d830 -> Node0xc1d8a0;
	Node0xc1d8a0 -> Node0xc1d910;
	Node0xc1d910 -> Node0xc1d9b0;
	Node0xc1d9b0 -> Node0xc1da50;
	Node0xc1da50 -> Node0xc1dac0;
	Node0xc1dac0 -> Node0xc1db30;
	Node0xc1db30 -> Node0xc1dbd0;
	Node0xc1dbd0 -> Node0xc1dc40;
	Node0xc1dc40 -> Node0xc1dcb0;
	Node0xc1dcb0 -> Node0xc1dd20;
	Node0xc1dd20 -> Node0xc1dfa0;
	Node0xc1dfa0 -> Node0xc1e010;
	Node0xc1e010 -> Node0xc1e080;
	Node0xc1e080 -> Node0xc1e0f0;
	Node0xc1e0f0 -> Node0xc1e160;
	Node0xc1e160 -> Node0xc1e1d0;
	Node0xc1e1d0 -> Node0xc1e240;
	Node0xc1e240 -> Node0xbbd268;
	Node0xbbd268 -> Node0xc1e6e0;
	Node0xc1e6e0 -> Node0xc1e730;
edge [color=red]
	Node0xc1d030 -> Node0xc1d0a0;
	Node0xc1d0a0 -> Node0xc1d180;
	Node0xc1d110 -> Node0xc1d180;
	Node0xc1d180 -> Node0xc1d260;
	Node0xc1d1f0 -> Node0xc1d260;
	Node0xc1d370 -> Node0xc1d3e0;
	Node0xc1d3e0 -> Node0xc1d480;
	Node0xc1d030 -> Node0xc1d4f0;
	Node0xc1d0a0 -> Node0xc1d5d0;
	Node0xc1d5d0 -> Node0xc1d640;
	Node0xc1d370 -> Node0xc1d6e0;
	Node0xc1d110 -> Node0xc1d7c0;
	Node0xc1d830 -> Node0xc1d8a0;
	Node0xc1d7c0 -> Node0xc1d910;
	Node0xc1d910 -> Node0xc1d9b0;
	Node0xc1d4f0 -> Node0xc1da50;
	Node0xc1da50 -> Node0xc1dac0;
	Node0xc1d750 -> Node0xc1dac0;
	Node0xc1dac0 -> Node0xc1db30;
	Node0xc1dbd0 -> Node0xc1dc40;
	Node0xc1d300 -> Node0xc1dc40;
	Node0xc1dc40 -> Node0xc1dcb0;
	Node0xc1d560 -> Node0xc1dcb0;
	Node0xc1dcb0 -> Node0xc1dd20;
	Node0xc1d6e0 -> Node0xc1dd20;
	Node0xc1dd20 -> Node0xc1dfa0;
	Node0xc1d7c0 -> Node0xc1dfa0;
	Node0xc1dfa0 -> Node0xc1e010;
	Node0xc1d8a0 -> Node0xc1e010;
	Node0xc1e010 -> Node0xc1e080;
	Node0xc1d480 -> Node0xc1e080;
	Node0xc1e080 -> Node0xc1e0f0;
	Node0xc1d640 -> Node0xc1e0f0;
	Node0xc1e0f0 -> Node0xc1e160;
	Node0xc1d9b0 -> Node0xc1e160;
	Node0xc1e160 -> Node0xc1e1d0;
	Node0xc1db30 -> Node0xc1e1d0;
	Node0xc1d260 -> Node0xc1e240;
	Node0xc1e1d0 -> Node0xc1e240;
	Node0xc1e240 -> Node0xbbd268;
	Node0xbbd268 -> Node0xc1e6e0;
}
