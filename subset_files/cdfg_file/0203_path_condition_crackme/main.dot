digraph "DFG for'main' function" {
	Node0x21da6f8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21da778[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21da808[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x21da868[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x21dace8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21dc018[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x21dc0f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21dc1b8[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x21dc268[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21dc4c8[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x21dc588[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21dd4f8[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21ddb68[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x21ddc60[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x21dde68[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21ddfc8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21de0d8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x21de198[shape=record, label="  ret i32 0"];
	Node0x21da6f8 -> Node0x21da778;
	Node0x21da778 -> Node0x21da808;
	Node0x21da808 -> Node0x21da868;
	Node0x21da868 -> Node0x21dace8;
	Node0x21dace8 -> Node0x21dc018;
	Node0x21dc018 -> Node0x21dc0f8;
	Node0x21dc0f8 -> Node0x21dc1b8;
	Node0x21dc1b8 -> Node0x21dc268;
	Node0x21dc268 -> Node0x21dc4c8;
	Node0x21dc4c8 -> Node0x21dc588;
	Node0x21dc588 -> Node0x21dd4f8;
	Node0x21dd4f8 -> Node0x21ddb68;
	Node0x21ddb68 -> Node0x21ddc60;
	Node0x21ddc60 -> Node0x21dde68;
	Node0x21dde68 -> Node0x21ddfc8;
	Node0x21ddfc8 -> Node0x21de0d8;
	Node0x21de0d8 -> Node0x21de198;
edge [color=red]
	Node0x21da6f8 -> Node0x21da868;
	Node0x21da868 -> Node0x21dace8;
	Node0x21da778 -> Node0x21dc018;
	Node0x21dc018 -> Node0x21dc0f8;
	Node0x21da808 -> Node0x21dc1b8;
	Node0x21dc1b8 -> Node0x21dc268;
	Node0x21da6f8 -> Node0x21dc4c8;
	Node0x21da778 -> Node0x21dc4c8;
	Node0x21da808 -> Node0x21dc4c8;
	Node0x21da6f8 -> Node0x21dc588;
	Node0x21da778 -> Node0x21dd4f8;
	Node0x21da808 -> Node0x21ddb68;
	Node0x21dc588 -> Node0x21ddc60;
	Node0x21dd4f8 -> Node0x21ddc60;
	Node0x21ddb68 -> Node0x21ddc60;
	Node0x21dc1b8 -> Node0x21dde68;
	Node0x21dc018 -> Node0x21ddfc8;
	Node0x21da868 -> Node0x21de0d8;
}
