digraph "DFG for'main' function" {
	Node0x14ef878[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x14ef8f8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x14ef988[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x14ef9e8[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x14efa98[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x14efec8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14effa8[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x14f00a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14f0168[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x14f0218[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14f02d8[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x14f0388[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14eaa10[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x14f0588[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x14f14f8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x14f1b68[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x14f1bc8[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x14f1c40[shape=record, label="  %14 = xor i32 %12, %11"];
	Node0x14f1cb0[shape=record, label="  %15 = xor i32 %12, -1"];
	Node0x14f1d20[shape=record, label="  %16 = add i32 %12, 1"];
	Node0x14f1d90[shape=record, label="  %17 = sub i32 %16, %14"];
	Node0x14f1e00[shape=record, label="  %18 = or i32 %13, %10"];
	Node0x14f1e70[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x14f1ee0[shape=record, label="  %20 = sub i32 %17, %19"];
	Node0x14f1f50[shape=record, label="  %21 = shl i32 %14, 1"];
	Node0x14f1fc0[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x14f2030[shape=record, label="  %23 = shl i32 %12, 1"];
	Node0x14f20a0[shape=record, label="  %24 = shl i32 %11, 1"];
	Node0x14f2110[shape=record, label="  %25 = xor i32 %24, -2"];
	Node0x14f2180[shape=record, label="  %26 = and i32 %11, %15"];
	Node0x14f21f0[shape=record, label="  %27 = and i32 %12, %11"];
	Node0x14f2260[shape=record, label="  %28 = mul i32 %27, -3"];
	Node0x14f22d0[shape=record, label="  %29 = xor i32 %13, -1"];
	Node0x14f2340[shape=record, label="  %30 = or i32 %10, %29"];
	Node0x14f23b0[shape=record, label="  %31 = shl i32 %18, 2"];
	Node0x14f2420[shape=record, label="  %32 = xor i32 %31, -4"];
	Node0x14f2490[shape=record, label="  %33 = and i32 %10, %29"];
	Node0x14f2500[shape=record, label="  %34 = mul i32 %33, -6"];
	Node0x14f2570[shape=record, label="  %35 = and i32 %13, %10"];
	Node0x14f25e0[shape=record, label="  %36 = sub i32 %30, %35"];
	Node0x14f2650[shape=record, label="  %37 = mul i32 %36, 5"];
	Node0x14f26c0[shape=record, label="  %38 = add i32 %23, 2"];
	Node0x14f2730[shape=record, label="  %39 = sub i32 %38, %25"];
	Node0x14f27a0[shape=record, label="  %40 = sub i32 %39, %26"];
	Node0x14f2810[shape=record, label="  %41 = sub i32 %40, %13"];
	Node0x14f2880[shape=record, label="  %42 = add i32 %41, %28"];
	Node0x14f28f0[shape=record, label="  %43 = add i32 %42, %22"];
	Node0x14f2960[shape=record, label="  %44 = add i32 %43, %34"];
	Node0x14f29d0[shape=record, label="  %45 = sub i32 %44, %32"];
	Node0x14f2a40[shape=record, label="  %46 = add i32 %45, %37"];
	Node0x14f2ab0[shape=record, label="  %47 = icmp eq i32 %20, %46"];
	Node0x148f8b8[shape=record, label="  %48 = select i1 %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x14f2b40[shape=record, label="  %49 = call i32 @puts(i8* nonnull dereferenceable(1) %48) #5"];
	Node0x14f2de8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14f2f48[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14f3058[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14f3168[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x14f3228[shape=record, label="  ret i32 0"];
	Node0x14ef878 -> Node0x14ef8f8;
	Node0x14ef8f8 -> Node0x14ef988;
	Node0x14ef988 -> Node0x14ef9e8;
	Node0x14ef9e8 -> Node0x14efa98;
	Node0x14efa98 -> Node0x14efec8;
	Node0x14efec8 -> Node0x14effa8;
	Node0x14effa8 -> Node0x14f00a8;
	Node0x14f00a8 -> Node0x14f0168;
	Node0x14f0168 -> Node0x14f0218;
	Node0x14f0218 -> Node0x14f02d8;
	Node0x14f02d8 -> Node0x14f0388;
	Node0x14f0388 -> Node0x14eaa10;
	Node0x14eaa10 -> Node0x14f0588;
	Node0x14f0588 -> Node0x14f14f8;
	Node0x14f14f8 -> Node0x14f1b68;
	Node0x14f1b68 -> Node0x14f1bc8;
	Node0x14f1bc8 -> Node0x14f1c40;
	Node0x14f1c40 -> Node0x14f1cb0;
	Node0x14f1cb0 -> Node0x14f1d20;
	Node0x14f1d20 -> Node0x14f1d90;
	Node0x14f1d90 -> Node0x14f1e00;
	Node0x14f1e00 -> Node0x14f1e70;
	Node0x14f1e70 -> Node0x14f1ee0;
	Node0x14f1ee0 -> Node0x14f1f50;
	Node0x14f1f50 -> Node0x14f1fc0;
	Node0x14f1fc0 -> Node0x14f2030;
	Node0x14f2030 -> Node0x14f20a0;
	Node0x14f20a0 -> Node0x14f2110;
	Node0x14f2110 -> Node0x14f2180;
	Node0x14f2180 -> Node0x14f21f0;
	Node0x14f21f0 -> Node0x14f2260;
	Node0x14f2260 -> Node0x14f22d0;
	Node0x14f22d0 -> Node0x14f2340;
	Node0x14f2340 -> Node0x14f23b0;
	Node0x14f23b0 -> Node0x14f2420;
	Node0x14f2420 -> Node0x14f2490;
	Node0x14f2490 -> Node0x14f2500;
	Node0x14f2500 -> Node0x14f2570;
	Node0x14f2570 -> Node0x14f25e0;
	Node0x14f25e0 -> Node0x14f2650;
	Node0x14f2650 -> Node0x14f26c0;
	Node0x14f26c0 -> Node0x14f2730;
	Node0x14f2730 -> Node0x14f27a0;
	Node0x14f27a0 -> Node0x14f2810;
	Node0x14f2810 -> Node0x14f2880;
	Node0x14f2880 -> Node0x14f28f0;
	Node0x14f28f0 -> Node0x14f2960;
	Node0x14f2960 -> Node0x14f29d0;
	Node0x14f29d0 -> Node0x14f2a40;
	Node0x14f2a40 -> Node0x14f2ab0;
	Node0x14f2ab0 -> Node0x148f8b8;
	Node0x148f8b8 -> Node0x14f2b40;
	Node0x14f2b40 -> Node0x14f2de8;
	Node0x14f2de8 -> Node0x14f2f48;
	Node0x14f2f48 -> Node0x14f3058;
	Node0x14f3058 -> Node0x14f3168;
	Node0x14f3168 -> Node0x14f3228;
edge [color=red]
	Node0x14ef878 -> Node0x14efa98;
	Node0x14efa98 -> Node0x14efec8;
	Node0x14ef8f8 -> Node0x14effa8;
	Node0x14effa8 -> Node0x14f00a8;
	Node0x14ef988 -> Node0x14f0168;
	Node0x14f0168 -> Node0x14f0218;
	Node0x14ef9e8 -> Node0x14f02d8;
	Node0x14f02d8 -> Node0x14f0388;
	Node0x14ef878 -> Node0x14eaa10;
	Node0x14ef8f8 -> Node0x14eaa10;
	Node0x14ef988 -> Node0x14eaa10;
	Node0x14ef9e8 -> Node0x14eaa10;
	Node0x14ef878 -> Node0x14f0588;
	Node0x14ef8f8 -> Node0x14f14f8;
	Node0x14ef988 -> Node0x14f1b68;
	Node0x14ef9e8 -> Node0x14f1bc8;
	Node0x14f1b68 -> Node0x14f1c40;
	Node0x14f14f8 -> Node0x14f1c40;
	Node0x14f1b68 -> Node0x14f1cb0;
	Node0x14f1b68 -> Node0x14f1d20;
	Node0x14f1d20 -> Node0x14f1d90;
	Node0x14f1c40 -> Node0x14f1d90;
	Node0x14f1bc8 -> Node0x14f1e00;
	Node0x14f0588 -> Node0x14f1e00;
	Node0x14f1e00 -> Node0x14f1e70;
	Node0x14f1d90 -> Node0x14f1ee0;
	Node0x14f1e70 -> Node0x14f1ee0;
	Node0x14f1c40 -> Node0x14f1f50;
	Node0x14f1f50 -> Node0x14f1fc0;
	Node0x14f1b68 -> Node0x14f2030;
	Node0x14f14f8 -> Node0x14f20a0;
	Node0x14f20a0 -> Node0x14f2110;
	Node0x14f14f8 -> Node0x14f2180;
	Node0x14f1cb0 -> Node0x14f2180;
	Node0x14f1b68 -> Node0x14f21f0;
	Node0x14f14f8 -> Node0x14f21f0;
	Node0x14f21f0 -> Node0x14f2260;
	Node0x14f1bc8 -> Node0x14f22d0;
	Node0x14f0588 -> Node0x14f2340;
	Node0x14f22d0 -> Node0x14f2340;
	Node0x14f1e00 -> Node0x14f23b0;
	Node0x14f23b0 -> Node0x14f2420;
	Node0x14f0588 -> Node0x14f2490;
	Node0x14f22d0 -> Node0x14f2490;
	Node0x14f2490 -> Node0x14f2500;
	Node0x14f1bc8 -> Node0x14f2570;
	Node0x14f0588 -> Node0x14f2570;
	Node0x14f2340 -> Node0x14f25e0;
	Node0x14f2570 -> Node0x14f25e0;
	Node0x14f25e0 -> Node0x14f2650;
	Node0x14f2030 -> Node0x14f26c0;
	Node0x14f26c0 -> Node0x14f2730;
	Node0x14f2110 -> Node0x14f2730;
	Node0x14f2730 -> Node0x14f27a0;
	Node0x14f2180 -> Node0x14f27a0;
	Node0x14f27a0 -> Node0x14f2810;
	Node0x14f1bc8 -> Node0x14f2810;
	Node0x14f2810 -> Node0x14f2880;
	Node0x14f2260 -> Node0x14f2880;
	Node0x14f2880 -> Node0x14f28f0;
	Node0x14f1fc0 -> Node0x14f28f0;
	Node0x14f28f0 -> Node0x14f2960;
	Node0x14f2500 -> Node0x14f2960;
	Node0x14f2960 -> Node0x14f29d0;
	Node0x14f2420 -> Node0x14f29d0;
	Node0x14f29d0 -> Node0x14f2a40;
	Node0x14f2650 -> Node0x14f2a40;
	Node0x14f1ee0 -> Node0x14f2ab0;
	Node0x14f2a40 -> Node0x14f2ab0;
	Node0x14f2ab0 -> Node0x148f8b8;
	Node0x148f8b8 -> Node0x14f2b40;
	Node0x14f02d8 -> Node0x14f2de8;
	Node0x14f0168 -> Node0x14f2f48;
	Node0x14effa8 -> Node0x14f3058;
	Node0x14efa98 -> Node0x14f3168;
}
