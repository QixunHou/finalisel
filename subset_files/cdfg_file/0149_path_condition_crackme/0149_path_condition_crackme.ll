; ModuleID = '../.././c_source_file/0149_path_condition_crackme.c'
source_filename = "../.././c_source_file/0149_path_condition_crackme.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str.2 = private unnamed_addr constant [18 x i8] c"%d %d %d %d %d %d\00", align 1
@str = private unnamed_addr constant [4 x i8] c"bad\00", align 1
@str.3 = private unnamed_addr constant [5 x i8] c"good\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local void @crackme(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = xor i32 %1, -1
  %8 = xor i32 %2, %0
  %9 = or i32 %8, %7
  %10 = xor i32 %3, -1
  %11 = and i32 %10, %5
  %12 = and i32 %11, %4
  %13 = xor i32 %5, %3
  %14 = xor i32 %13, %4
  %15 = or i32 %12, %14
  %16 = add i32 %15, %9
  %17 = xor i32 %1, %0
  %18 = xor i32 %17, -1
  %19 = or i32 %18, %2
  %20 = and i32 %7, %0
  %21 = xor i32 %20, -1
  %22 = xor i32 %8, -1
  %23 = and i32 %22, %21
  %24 = shl i32 %23, 1
  %25 = xor i32 %2, -1
  %26 = and i32 %25, %0
  %27 = and i32 %2, %1
  %28 = xor i32 %27, -1
  %29 = xor i32 %26, %28
  %30 = or i32 %25, %0
  %31 = and i32 %30, %17
  %32 = and i32 %2, %0
  %33 = or i32 %32, %17
  %34 = or i32 %26, %1
  %35 = xor i32 %0, -1
  %36 = and i32 %27, %35
  %37 = xor i32 %2, %1
  %38 = and i32 %37, %0
  %39 = or i32 %36, %38
  %40 = or i32 %26, %17
  %41 = or i32 %37, %20
  %42 = xor i32 %30, %1
  %43 = and i32 %1, %0
  %44 = xor i32 %43, -1
  %45 = and i32 %25, %44
  %46 = or i32 %7, %0
  %47 = xor i32 %46, -1
  %48 = xor i32 %47, %2
  %49 = and i32 %7, %2
  %50 = and i32 %49, %35
  %51 = xor i32 %37, -1
  %52 = and i32 %51, %0
  %53 = or i32 %50, %52
  %54 = and i32 %25, %1
  %55 = xor i32 %54, -1
  %56 = or i32 %55, %35
  %57 = xor i32 %30, -1
  %58 = add i32 %30, 1
  %59 = or i32 %1, %0
  %60 = and i32 %37, %59
  %61 = or i32 %2, %0
  %62 = and i32 %61, %1
  %63 = and i32 %30, %7
  %64 = or i32 %25, %1
  %65 = xor i32 %64, -1
  %66 = xor i32 %65, %0
  %67 = and i32 %37, %21
  %68 = or i32 %32, %7
  %69 = shl i32 %68, 1
  %70 = xor i32 %30, %43
  %71 = or i32 %51, %0
  %72 = and i32 %28, %0
  %73 = xor i32 %59, -1
  %74 = or i32 %22, %73
  %75 = or i32 %65, %35
  %76 = xor i32 %54, %0
  %77 = and i32 %55, %0
  %78 = and i32 %22, %44
  %79 = or i32 %22, %7
  %80 = and i32 %51, %35
  %81 = or i32 %2, %1
  %82 = and i32 %81, %35
  %83 = xor i32 %44, %2
  %84 = xor i32 %51, %0
  %85 = xor i32 %81, %0
  %86 = xor i32 %32, -1
  %87 = and i32 %86, %1
  %88 = or i32 %73, %2
  %89 = shl i32 %88, 1
  %90 = and i32 %86, %18
  %91 = and i32 %30, %1
  %92 = and i32 %64, %35
  %93 = shl i32 %92, 1
  %94 = xor i32 %26, -1
  %95 = and i32 %17, %94
  %96 = and i32 %28, %35
  %97 = or i32 %57, %7
  %98 = xor i32 %86, %1
  %99 = and i32 %37, %44
  %100 = or i32 %47, %2
  %101 = and i32 %49, %0
  %102 = xor i32 %37, %0
  %103 = xor i32 %102, -1
  %104 = xor i32 %101, %103
  %105 = or i32 %27, %35
  %106 = or i32 %8, %73
  %107 = or i32 %17, %25
  %108 = or i32 %43, %65
  %109 = xor i32 %46, %2
  %110 = or i32 %51, %47
  %111 = and i32 %46, %2
  %112 = xor i32 %61, -1
  %113 = or i32 %112, %18
  %114 = and i32 %17, %22
  %115 = or i32 %20, %25
  %116 = or i32 %20, %51
  %117 = or i32 %25, %18
  %118 = or i32 %27, %20
  %119 = or i32 %101, %102
  %120 = and i32 %37, %46
  %121 = and i32 %51, %44
  %122 = and i32 %8, %7
  %123 = or i32 %8, %18
  %124 = or i32 %32, %73
  %125 = and i32 %17, %25
  %126 = xor i32 %32, %55
  %127 = or i32 %37, %73
  %128 = and i32 %21, %2
  %129 = or i32 %37, %0
  %130 = shl i32 %129, 1
  %131 = and i32 %30, %18
  %132 = or i32 %22, %18
  %133 = shl i32 %132, 1
  %134 = xor i32 %27, %0
  %135 = xor i32 %81, -1
  %136 = or i32 %43, %135
  %137 = shl i32 %136, 1
  %138 = and i32 %59, %22
  %139 = shl i32 %138, 1
  %140 = or i32 %26, %7
  %141 = shl i32 %140, 2
  %142 = add i32 %46, 1
  %143 = xor i32 %73, %2
  %144 = xor i32 %94, %1
  %145 = shl i32 %144, 1
  %146 = or i32 %51, %35
  %147 = xor i32 %32, %81
  %148 = xor i32 %135, %0
  %149 = xor i32 %64, %43
  %150 = or i32 %37, %43
  %151 = xor i32 %57, %1
  %152 = and i32 %27, %0
  %153 = and i32 %37, %35
  %154 = or i32 %152, %153
  %155 = and i32 %94, %18
  %156 = or i32 %20, %2
  %157 = xor i32 %81, %43
  %158 = or i32 %43, %25
  %159 = or i32 %43, %51
  %160 = or i32 %17, %112
  %161 = or i32 %57, %1
  %162 = or i32 %43, %22
  %163 = or i32 %152, %85
  %164 = or i32 %152, %103
  %165 = and i32 %22, %1
  %166 = shl i32 %165, 1
  %167 = or i32 %43, %2
  %168 = xor i32 %28, %0
  %169 = or i32 %17, %22
  %170 = or i32 %37, %47
  %171 = and i32 %18, %2
  %172 = and i32 %8, %44
  %173 = or i32 %32, %18
  %174 = or i32 %22, %47
  %175 = or i32 %32, %54
  %176 = or i32 %112, %7
  %177 = shl i32 %176, 1
  %178 = and i32 %22, %7
  %179 = and i32 %22, %18
  %180 = and i32 %94, %1
  %181 = or i32 %25, %47
  %182 = xor i32 %112, %1
  %183 = or i32 %26, %65
  %184 = or i32 %32, %135
  %185 = or i32 %7, %2
  %186 = and i32 %185, %0
  %187 = xor i32 %186, -1
  %188 = xor i32 %50, %187
  %189 = shl i32 %46, 1
  %190 = shl i32 %32, 1
  %191 = and i32 %44, %2
  %192 = xor i32 %43, %2
  %193 = or i32 %112, %1
  %194 = and i32 %94, %7
  %195 = add i32 %0, 1
  %196 = or i32 %8, %47
  %197 = and i32 %25, %21
  %198 = xor i32 %185, %0
  %199 = or i32 %101, %198
  %200 = or i32 %27, %0
  %201 = or i32 %8, %17
  %202 = or i32 %32, %1
  %203 = xor i32 %32, %1
  %204 = or i32 %8, %43
  %205 = or i32 %51, %73
  %206 = or i32 %28, %35
  %207 = or i32 %17, %57
  %208 = and i32 %17, %2
  %209 = shl i32 %208, 1
  %210 = xor i32 %59, %2
  %211 = add i32 %8, 1
  %212 = or i32 %8, %1
  %213 = xor i32 %198, -1
  %214 = xor i32 %101, %213
  %215 = or i32 %20, %22
  %216 = and i32 %8, %18
  %217 = and i32 %81, %0
  %218 = or i32 %64, %0
  %219 = or i32 %54, %0
  %220 = xor i32 %61, %43
  %221 = and i32 %135, %35
  %222 = shl i32 %221, 4
  %223 = and i32 %54, %35
  %224 = shl i32 %223, 1
  %225 = and i32 %135, %0
  %226 = and i32 %54, %0
  %227 = and i32 %65, %35
  %228 = and i32 %65, %0
  %229 = mul i32 %152, 15
  %230 = xor i32 %4, %3
  %231 = xor i32 %230, -1
  %232 = xor i32 %5, %4
  %233 = xor i32 %232, -1
  %234 = or i32 %233, %231
  %235 = or i32 %5, %3
  %236 = xor i32 %235, %4
  %237 = xor i32 %5, -1
  %238 = and i32 %237, %4
  %239 = xor i32 %238, -1
  %240 = and i32 %239, %10
  %241 = and i32 %10, %4
  %242 = xor i32 %241, -1
  %243 = and i32 %233, %242
  %244 = or i32 %10, %4
  %245 = and i32 %232, %244
  %246 = or i32 %13, %4
  %247 = xor i32 %12, %246
  %248 = and i32 %235, %4
  %249 = and i32 %5, %4
  %250 = xor i32 %249, -1
  %251 = and i32 %250, %231
  %252 = xor i32 %4, -1
  %253 = or i32 %237, %3
  %254 = or i32 %253, %252
  %255 = or i32 %237, %4
  %256 = and i32 %255, %10
  %257 = and i32 %233, %3
  %258 = xor i32 %255, -1
  %259 = or i32 %258, %231
  %260 = xor i32 %13, -1
  %261 = or i32 %260, %4
  %262 = or i32 %230, %5
  %263 = xor i32 %244, -1
  %264 = or i32 %233, %263
  %265 = or i32 %230, %237
  %266 = and i32 %4, %3
  %267 = or i32 %13, %266
  %268 = shl i32 %255, 1
  %269 = or i32 %10, %5
  %270 = and i32 %269, %252
  %271 = xor i32 %270, 2147483647
  %272 = xor i32 %271, %12
  %273 = shl i32 %272, 1
  %274 = and i32 %5, %3
  %275 = and i32 %274, %4
  %276 = and i32 %13, %252
  %277 = or i32 %275, %276
  %278 = or i32 %232, %266
  %279 = or i32 %4, %3
  %280 = xor i32 %279, -1
  %281 = or i32 %249, %280
  %282 = xor i32 %274, -1
  %283 = and i32 %282, %252
  %284 = or i32 %249, %231
  %285 = xor i32 %253, -1
  %286 = or i32 %285, %252
  %287 = xor i32 %239, %3
  %288 = shl i32 %287, 2
  %289 = xor i32 %246, 2147483647
  %290 = or i32 %289, %12
  %291 = xor i32 %275, %14
  %292 = xor i32 %266, -1
  %293 = xor i32 %292, %5
  %294 = xor i32 %253, %4
  %295 = add i32 %266, 1
  %296 = or i32 %266, %258
  %297 = and i32 %232, %292
  %298 = shl i32 %297, 1
  %299 = xor i32 %235, -1
  %300 = xor i32 %299, %4
  %301 = or i32 %232, %231
  %302 = or i32 %5, %4
  %303 = xor i32 %302, -1
  %304 = or i32 %230, %303
  %305 = or i32 %260, %263
  %306 = and i32 %13, %4
  %307 = and i32 %11, %252
  %308 = or i32 %13, %252
  %309 = xor i32 %308, -1
  %310 = or i32 %307, %309
  %311 = or i32 %266, %233
  %312 = xor i32 %250, %3
  %313 = shl i32 %312, 1
  %314 = and i32 %260, %252
  %315 = add i32 %279, 1
  %316 = xor i32 %269, %4
  %317 = or i32 %12, %316
  %318 = and i32 %232, %279
  %319 = xor i32 %253, %266
  %320 = and i32 %260, %242
  %321 = and i32 %235, %252
  %322 = or i32 %275, %321
  %323 = or i32 %230, %258
  %324 = and i32 %302, %230
  %325 = or i32 %275, %236
  %326 = or i32 %241, %233
  %327 = and i32 %279, %260
  %328 = or i32 %266, %260
  %329 = shl i32 %328, 1
  %330 = or i32 %233, %280
  %331 = and i32 %244, %5
  %332 = and i32 %13, %244
  %333 = shl i32 %332, 1
  %334 = and i32 %279, %233
  %335 = or i32 %299, %4
  %336 = or i32 %237, %280
  %337 = xor i32 %258, %3
  %338 = xor i32 %238, %3
  %339 = add i32 %235, 1
  %340 = and i32 %274, %252
  %341 = or i32 %340, %248
  %342 = and i32 %253, %4
  %343 = shl i32 %239, 1
  %344 = xor i32 %242, %5
  %345 = or i32 %266, %303
  %346 = shl i32 %345, 1
  %347 = or i32 %241, %260
  %348 = and i32 %237, %3
  %349 = xor i32 %348, -1
  %350 = and i32 %349, %252
  %351 = xor i32 %249, %244
  %352 = or i32 %232, %10
  %353 = or i32 %266, %5
  %354 = and i32 %260, %4
  %355 = and i32 %302, %3
  %356 = and i32 %253, %252
  %357 = xor i32 %302, %3
  %358 = or i32 %282, %252
  %359 = shl i32 %358, 1
  %360 = and i32 %244, %233
  %361 = shl i32 %360, 1
  %362 = add i32 %249, 1
  %363 = and i32 %269, %4
  %364 = or i32 %307, %363
  %365 = xor i32 %14, -1
  %366 = xor i32 %12, %365
  %367 = shl i32 %366, 1
  %368 = and i32 %349, %4
  %369 = xor i32 %249, %349
  %370 = and i32 %255, %3
  %371 = xor i32 %255, %266
  %372 = shl i32 %371, 1
  %373 = and i32 %231, %5
  %374 = shl i32 %373, 1
  %375 = or i32 %237, %263
  %376 = or i32 %349, %4
  %377 = and i32 %255, %230
  %378 = xor i32 %241, %5
  %379 = and i32 %230, %250
  %380 = or i32 %249, %10
  %381 = xor i32 %238, %253
  %382 = and i32 %250, %10
  %383 = or i32 %340, %306
  %384 = shl i32 %383, 1
  %385 = or i32 %258, %3
  %386 = or i32 %266, %237
  %387 = shl i32 %386, 1
  %388 = xor i32 %249, %279
  %389 = or i32 %282, %4
  %390 = or i32 %241, %5
  %391 = or i32 %348, %241
  %392 = and i32 %230, %233
  %393 = xor i32 %249, %3
  %394 = or i32 %232, %241
  %395 = xor i32 %302, %266
  %396 = xor i32 %260, %4
  %397 = or i32 %238, %285
  %398 = and i32 %255, %231
  %399 = or i32 %13, %263
  %400 = or i32 %299, %252
  %401 = xor i32 %280, %5
  %402 = xor i32 %275, -1
  %403 = xor i32 %321, %402
  %404 = or i32 %235, %4
  %405 = shl i32 %404, 1
  %406 = or i32 %230, %233
  %407 = xor i32 %276, %402
  %408 = or i32 %303, %10
  %409 = xor i32 %274, %4
  %410 = and i32 %282, %4
  %411 = and i32 %279, %5
  %412 = xor i32 %285, %4
  %413 = or i32 %238, %231
  %414 = shl i32 %413, 1
  %415 = or i32 %13, %241
  %416 = xor i32 %282, %4
  %417 = or i32 %237, %231
  %418 = shl i32 %417, 1
  %419 = add i32 %255, 1
  %420 = or i32 %348, %4
  %421 = and i32 %13, %242
  %422 = xor i32 %244, %5
  %423 = or i32 %303, %3
  %424 = or i32 %238, %3
  %425 = shl i32 %424, 2
  %426 = or i32 %249, %348
  %427 = shl i32 %426, 1
  %428 = or i32 %266, %285
  %429 = or i32 %303, %231
  %430 = or i32 %274, %252
  %431 = or i32 %233, %3
  %432 = and i32 %260, %292
  %433 = or i32 %233, %10
  %434 = xor i32 %363, -1
  %435 = xor i32 %307, %434
  %436 = and i32 %239, %3
  %437 = or i32 %266, %299
  %438 = or i32 %249, %263
  %439 = xor i32 %241, %349
  %440 = and i32 %230, %239
  %441 = or i32 %285, %4
  %442 = or i32 %13, %280
  %443 = and i32 %13, %279
  %444 = or i32 %349, %252
  %445 = xor i32 %255, %3
  %446 = and i32 %233, %10
  %447 = xor i32 %316, -1
  %448 = xor i32 %12, %447
  %449 = and i32 %250, %3
  %450 = and i32 %244, %237
  %451 = and i32 %279, %237
  %452 = or i32 %232, %230
  %453 = shl i32 %452, 1
  %454 = or i32 %232, %3
  %455 = and i32 %232, %230
  %456 = xor i32 %340, -1
  %457 = xor i32 %248, %456
  %458 = and i32 %292, %5
  %459 = xor i32 %306, %456
  %460 = or i32 %12, %270
  %461 = or i32 %238, %10
  %462 = or i32 %258, %10
  %463 = shl i32 %462, 1
  %464 = and i32 %242, %5
  %465 = xor i32 %235, %266
  %466 = and i32 %233, %231
  %467 = xor i32 %249, %235
  %468 = or i32 %235, %252
  %469 = and i32 %244, %260
  %470 = and i32 %230, %237
  %471 = or i32 %238, %274
  %472 = shl i32 %471, 1
  %473 = or i32 %348, %252
  %474 = or i32 %249, %3
  %475 = or i32 %253, %4
  %476 = or i32 %249, %299
  %477 = shl i32 %308, 1
  %478 = and i32 %232, %242
  %479 = xor i32 %279, %5
  %480 = xor i32 %241, %282
  %481 = and i32 %239, %231
  %482 = xor i32 %348, %4
  %483 = and i32 %237, %292
  %484 = and i32 %237, %231
  %485 = xor i32 %307, %308
  %486 = or i32 %232, %280
  %487 = or i32 %280, %5
  %488 = or i32 %275, %365
  %489 = or i32 %238, %230
  %490 = or i32 %260, %252
  %491 = or i32 %249, %230
  %492 = shl i32 %348, 1
  %493 = xor i32 %263, %5
  %494 = add i32 %253, 1
  %495 = or i32 %232, %263
  %496 = and i32 %230, %5
  %497 = or i32 %241, %237
  %498 = and i32 %302, %10
  %499 = and i32 %232, %3
  %500 = shl i32 %242, 1
  %501 = and i32 %233, %292
  %502 = and i32 %237, %242
  %503 = or i32 %274, %241
  %504 = or i32 %263, %5
  %505 = xor i32 %303, %3
  %506 = add i32 %274, 1
  %507 = xor i32 %349, %4
  %508 = shl i32 %507, 1
  %509 = and i32 %302, %231
  %510 = xor i32 %266, %5
  %511 = or i32 %260, %280
  %512 = or i32 %231, %5
  %513 = and i32 %13, %292
  %514 = and i32 %299, %252
  %515 = mul i32 %514, 14
  %516 = and i32 %348, %252
  %517 = mul i32 %516, 9
  %518 = and i32 %299, %4
  %519 = and i32 %348, %4
  %520 = mul i32 %519, 31
  %521 = and i32 %285, %252
  %522 = mul i32 %521, 20
  %523 = and i32 %285, %4
  %524 = add i32 %59, %25
  %525 = add i32 %524, %3
  %526 = add i32 %525, %210
  %527 = add i32 %526, %30
  %528 = add i32 %527, %112
  %529 = add i32 %528, %117
  %530 = add i32 %529, %109
  %531 = add i32 %530, %65
  %532 = add i32 %531, %200
  %533 = add i32 %532, %183
  %534 = add i32 %533, %178
  %535 = add i32 %534, %155
  %536 = add i32 %535, %98
  %537 = add i32 %536, %97
  %538 = add i32 %537, %87
  %539 = add i32 %538, %85
  %540 = add i32 %539, %71
  %541 = add i32 %540, %230
  %542 = add i32 %541, %502
  %543 = add i32 %542, %411
  %544 = add i32 %543, %505
  %545 = add i32 %544, %501
  %546 = add i32 %545, %491
  %547 = add i32 %546, %276
  %548 = add i32 %547, %441
  %549 = add i32 %548, %436
  %550 = add i32 %549, %428
  %551 = add i32 %550, %391
  %552 = add i32 %551, %368
  %553 = add i32 %552, %337
  %554 = add i32 %553, %251
  %555 = add i32 %554, %485
  %556 = add i32 %555, %290
  %557 = shl i32 %556, 1
  %558 = add i32 %193, %100
  %559 = sub i32 %558, %180
  %560 = sub i32 %559, %126
  %561 = sub i32 %560, %479
  %562 = add i32 %561, %353
  %563 = add i32 %562, %498
  %564 = sub i32 %563, %275
  %565 = mul i32 %564, 5
  %566 = add i32 %114, %195
  %567 = add i32 %566, %233
  %568 = add i32 %567, %478
  %569 = sub i32 %568, %421
  %570 = add i32 %569, %341
  %571 = mul i32 %570, 3
  %572 = add i32 %294, %390
  %573 = shl i32 %572, 2
  %574 = add i32 %518, %228
  %575 = mul i32 %574, 21
  %576 = sub i32 %227, %226
  %577 = mul i32 %576, 10
  %578 = add i32 %523, %225
  %579 = mul i32 %578, -6
  %580 = add i32 %43, -3
  %581 = add i32 %580, %43
  %582 = add i32 %581, %142
  %583 = sub i32 %582, %19
  %584 = add i32 %583, %45
  %585 = add i32 %584, %48
  %586 = add i32 %585, %58
  %587 = add i32 %586, %83
  %588 = sub i32 %587, %107
  %589 = sub i32 %588, %81
  %590 = sub i32 %589, %111
  %591 = sub i32 %590, %115
  %592 = sub i32 %591, %26
  %593 = sub i32 %592, %125
  %594 = add i32 %593, %128
  %595 = sub i32 %594, %143
  %596 = add i32 %595, %156
  %597 = add i32 %596, %158
  %598 = sub i32 %597, %167
  %599 = sub i32 %598, %171
  %600 = add i32 %599, %64
  %601 = add i32 %600, %181
  %602 = sub i32 %601, %189
  %603 = add i32 %602, %191
  %604 = add i32 %603, %192
  %605 = add i32 %604, %197
  %606 = add i32 %605, %211
  %607 = sub i32 %606, %27
  %608 = add i32 %607, %10
  %609 = add i32 %608, %29
  %610 = sub i32 %609, %31
  %611 = add i32 %610, %33
  %612 = add i32 %611, %34
  %613 = add i32 %612, %40
  %614 = add i32 %613, %41
  %615 = sub i32 %614, %42
  %616 = sub i32 %615, %56
  %617 = sub i32 %616, %60
  %618 = sub i32 %617, %62
  %619 = sub i32 %618, %63
  %620 = sub i32 %619, %66
  %621 = add i32 %620, %67
  %622 = sub i32 %621, %70
  %623 = add i32 %622, %72
  %624 = sub i32 %623, %74
  %625 = sub i32 %624, %75
  %626 = sub i32 %625, %76
  %627 = add i32 %626, %77
  %628 = sub i32 %627, %78
  %629 = add i32 %628, %79
  %630 = add i32 %629, %80
  %631 = add i32 %630, %82
  %632 = sub i32 %631, %84
  %633 = sub i32 %632, %89
  %634 = add i32 %633, %90
  %635 = add i32 %634, %91
  %636 = sub i32 %635, %95
  %637 = add i32 %636, %96
  %638 = sub i32 %637, %99
  %639 = sub i32 %638, %105
  %640 = add i32 %639, %106
  %641 = sub i32 %640, %108
  %642 = sub i32 %641, %110
  %643 = sub i32 %642, %113
  %644 = add i32 %643, %116
  %645 = sub i32 %644, %102
  %646 = sub i32 %645, %118
  %647 = sub i32 %646, %120
  %648 = add i32 %647, %121
  %649 = add i32 %648, %122
  %650 = sub i32 %649, %123
  %651 = sub i32 %650, %124
  %652 = add i32 %651, %127
  %653 = sub i32 %652, %131
  %654 = sub i32 %653, %134
  %655 = sub i32 %654, %146
  %656 = add i32 %655, %147
  %657 = sub i32 %656, %38
  %658 = sub i32 %657, %148
  %659 = add i32 %658, %149
  %660 = add i32 %659, %150
  %661 = add i32 %660, %151
  %662 = sub i32 %661, %157
  %663 = add i32 %662, %159
  %664 = add i32 %663, %160
  %665 = sub i32 %664, %161
  %666 = sub i32 %665, %162
  %667 = sub i32 %666, %168
  %668 = sub i32 %667, %169
  %669 = sub i32 %668, %170
  %670 = add i32 %669, %172
  %671 = sub i32 %670, %173
  %672 = sub i32 %671, %174
  %673 = add i32 %672, %175
  %674 = sub i32 %673, %179
  %675 = sub i32 %674, %182
  %676 = sub i32 %675, %184
  %677 = sub i32 %676, %190
  %678 = sub i32 %677, %194
  %679 = sub i32 %678, %196
  %680 = add i32 %679, %52
  %681 = sub i32 %680, %201
  %682 = add i32 %681, %202
  %683 = sub i32 %682, %203
  %684 = add i32 %683, %204
  %685 = add i32 %684, %205
  %686 = add i32 %685, %206
  %687 = add i32 %686, %207
  %688 = sub i32 %687, %209
  %689 = sub i32 %688, %212
  %690 = sub i32 %689, %215
  %691 = add i32 %690, %216
  %692 = add i32 %691, %217
  %693 = sub i32 %692, %218
  %694 = sub i32 %693, %219
  %695 = add i32 %694, %220
  %696 = add i32 %695, %252
  %697 = sub i32 %696, %4
  %698 = sub i32 %697, %24
  %699 = add i32 %698, %39
  %700 = sub i32 %699, %53
  %701 = sub i32 %700, %69
  %702 = sub i32 %701, %93
  %703 = add i32 %702, %104
  %704 = sub i32 %703, %119
  %705 = sub i32 %704, %130
  %706 = sub i32 %705, %133
  %707 = sub i32 %706, %137
  %708 = sub i32 %707, %139
  %709 = sub i32 %708, %141
  %710 = sub i32 %709, %145
  %711 = add i32 %710, %154
  %712 = sub i32 %711, %163
  %713 = sub i32 %712, %164
  %714 = sub i32 %713, %166
  %715 = sub i32 %714, %177
  %716 = add i32 %715, %188
  %717 = sub i32 %716, %199
  %718 = add i32 %717, %214
  %719 = add i32 %718, %222
  %720 = sub i32 %719, %224
  %721 = add i32 %720, %229
  %722 = add i32 %721, %295
  %723 = add i32 %722, %315
  %724 = add i32 %723, %279
  %725 = sub i32 %724, %244
  %726 = add i32 %725, %231
  %727 = add i32 %726, %266
  %728 = sub i32 %727, %241
  %729 = add i32 %728, %263
  %730 = sub i32 %729, %262
  %731 = add i32 %730, %265
  %732 = add i32 %731, %293
  %733 = sub i32 %732, %331
  %734 = add i32 %733, %336
  %735 = add i32 %734, %339
  %736 = sub i32 %735, %253
  %737 = sub i32 %736, %344
  %738 = add i32 %737, %362
  %739 = sub i32 %738, %274
  %740 = add i32 %739, %349
  %741 = sub i32 %740, %375
  %742 = sub i32 %741, %378
  %743 = add i32 %742, %401
  %744 = sub i32 %743, %238
  %745 = add i32 %744, %419
  %746 = add i32 %745, %422
  %747 = add i32 %746, %450
  %748 = add i32 %747, %451
  %749 = sub i32 %748, %458
  %750 = add i32 %749, %464
  %751 = add i32 %750, %470
  %752 = sub i32 %751, %483
  %753 = add i32 %752, %484
  %754 = sub i32 %753, %232
  %755 = add i32 %754, %487
  %756 = add i32 %755, %493
  %757 = add i32 %756, %494
  %758 = add i32 %757, %496
  %759 = add i32 %758, %497
  %760 = sub i32 %759, %500
  %761 = add i32 %760, %249
  %762 = add i32 %761, %504
  %763 = add i32 %762, %506
  %764 = sub i32 %763, %510
  %765 = sub i32 %764, %512
  %766 = add i32 %765, %235
  %767 = add i32 %766, %577
  %768 = add i32 %767, %234
  %769 = add i32 %768, %236
  %770 = sub i32 %769, %240
  %771 = add i32 %770, %243
  %772 = sub i32 %771, %245
  %773 = sub i32 %772, %248
  %774 = sub i32 %773, %254
  %775 = sub i32 %774, %256
  %776 = sub i32 %775, %257
  %777 = sub i32 %776, %259
  %778 = sub i32 %777, %261
  %779 = sub i32 %778, %264
  %780 = add i32 %779, %267
  %781 = sub i32 %780, %268
  %782 = sub i32 %781, %278
  %783 = add i32 %782, %281
  %784 = sub i32 %783, %283
  %785 = sub i32 %784, %284
  %786 = sub i32 %785, %286
  %787 = sub i32 %786, %296
  %788 = sub i32 %787, %300
  %789 = sub i32 %788, %301
  %790 = sub i32 %789, %304
  %791 = add i32 %790, %305
  %792 = sub i32 %791, %306
  %793 = add i32 %792, %311
  %794 = sub i32 %793, %314
  %795 = add i32 %794, %318
  %796 = add i32 %795, %319
  %797 = sub i32 %796, %320
  %798 = add i32 %797, %323
  %799 = add i32 %798, %324
  %800 = sub i32 %799, %326
  %801 = add i32 %800, %327
  %802 = sub i32 %801, %330
  %803 = add i32 %802, %14
  %804 = add i32 %803, %334
  %805 = add i32 %804, %321
  %806 = add i32 %805, %335
  %807 = sub i32 %806, %338
  %808 = add i32 %807, %342
  %809 = sub i32 %808, %246
  %810 = sub i32 %809, %343
  %811 = add i32 %810, %347
  %812 = add i32 %811, %350
  %813 = sub i32 %812, %351
  %814 = sub i32 %813, %352
  %815 = sub i32 %814, %354
  %816 = add i32 %815, %355
  %817 = add i32 %816, %356
  %818 = add i32 %817, %357
  %819 = add i32 %818, %369
  %820 = add i32 %819, %370
  %821 = sub i32 %820, %374
  %822 = sub i32 %821, %376
  %823 = sub i32 %822, %377
  %824 = sub i32 %823, %379
  %825 = add i32 %824, %380
  %826 = add i32 %825, %381
  %827 = add i32 %826, %382
  %828 = add i32 %827, %385
  %829 = sub i32 %828, %387
  %830 = sub i32 %829, %388
  %831 = add i32 %830, %389
  %832 = add i32 %831, %392
  %833 = sub i32 %832, %393
  %834 = sub i32 %833, %394
  %835 = sub i32 %834, %395
  %836 = sub i32 %835, %396
  %837 = sub i32 %836, %397
  %838 = add i32 %837, %398
  %839 = sub i32 %838, %399
  %840 = sub i32 %839, %400
  %841 = add i32 %840, %406
  %842 = add i32 %841, %408
  %843 = sub i32 %842, %409
  %844 = add i32 %843, %410
  %845 = add i32 %844, %412
  %846 = sub i32 %845, %415
  %847 = add i32 %846, %416
  %848 = sub i32 %847, %418
  %849 = add i32 %848, %420
  %850 = add i32 %849, %423
  %851 = sub i32 %850, %429
  %852 = add i32 %851, %430
  %853 = sub i32 %852, %431
  %854 = sub i32 %853, %432
  %855 = sub i32 %854, %433
  %856 = add i32 %855, %437
  %857 = add i32 %856, %438
  %858 = sub i32 %857, %439
  %859 = add i32 %858, %440
  %860 = sub i32 %859, %442
  %861 = sub i32 %860, %443
  %862 = sub i32 %861, %444
  %863 = add i32 %862, %445
  %864 = add i32 %863, %446
  %865 = sub i32 %864, %449
  %866 = add i32 %865, %454
  %867 = add i32 %866, %455
  %868 = add i32 %867, %461
  %869 = sub i32 %868, %465
  %870 = add i32 %869, %466
  %871 = sub i32 %870, %467
  %872 = sub i32 %871, %468
  %873 = add i32 %872, %469
  %874 = add i32 %873, %473
  %875 = sub i32 %874, %474
  %876 = add i32 %875, %475
  %877 = sub i32 %876, %476
  %878 = add i32 %877, %480
  %879 = add i32 %878, %481
  %880 = sub i32 %879, %482
  %881 = add i32 %880, %486
  %882 = add i32 %881, %489
  %883 = sub i32 %882, %490
  %884 = sub i32 %883, %492
  %885 = add i32 %884, %495
  %886 = add i32 %885, %499
  %887 = sub i32 %886, %503
  %888 = add i32 %887, %509
  %889 = sub i32 %888, %511
  %890 = sub i32 %889, %513
  %891 = sub i32 %890, %340
  %892 = sub i32 %891, %247
  %893 = sub i32 %892, %277
  %894 = sub i32 %893, %288
  %895 = add i32 %894, %291
  %896 = sub i32 %895, %298
  %897 = sub i32 %896, %310
  %898 = sub i32 %897, %313
  %899 = add i32 %898, %317
  %900 = add i32 %899, %322
  %901 = add i32 %900, %325
  %902 = sub i32 %901, %329
  %903 = sub i32 %902, %333
  %904 = sub i32 %903, %346
  %905 = sub i32 %904, %359
  %906 = sub i32 %905, %361
  %907 = add i32 %906, %364
  %908 = sub i32 %907, %372
  %909 = add i32 %908, %403
  %910 = sub i32 %909, %405
  %911 = sub i32 %910, %407
  %912 = sub i32 %911, %414
  %913 = sub i32 %912, %425
  %914 = sub i32 %913, %427
  %915 = sub i32 %914, %435
  %916 = sub i32 %915, %448
  %917 = sub i32 %916, %453
  %918 = sub i32 %917, %457
  %919 = add i32 %918, %459
  %920 = add i32 %919, %460
  %921 = sub i32 %920, %463
  %922 = sub i32 %921, %472
  %923 = sub i32 %922, %477
  %924 = sub i32 %923, %488
  %925 = sub i32 %924, %508
  %926 = add i32 %925, %515
  %927 = add i32 %926, %517
  %928 = add i32 %927, %520
  %929 = add i32 %928, %522
  %930 = sub i32 %929, %367
  %931 = sub i32 %930, %384
  %932 = add i32 %931, %573
  %933 = add i32 %932, %575
  %934 = add i32 %933, %579
  %935 = sub i32 %934, %273
  %936 = add i32 %935, %571
  %937 = add i32 %936, %565
  %938 = add i32 %937, %557
  %939 = icmp eq i32 %16, %938
  %940 = select i1 %939, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)
  %941 = tail call i32 @puts(i8* nonnull dereferenceable(1) %940)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #1 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #5
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6)
  %14 = load i32, i32* %1, align 4, !tbaa !2
  %15 = load i32, i32* %2, align 4, !tbaa !2
  %16 = load i32, i32* %3, align 4, !tbaa !2
  %17 = load i32, i32* %4, align 4, !tbaa !2
  %18 = load i32, i32* %5, align 4, !tbaa !2
  %19 = load i32, i32* %6, align 4, !tbaa !2
  call void @crackme(i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare dso_local i32 @__isoc99_scanf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Ubuntu clang version 10.0.1-++20200708122807+ef32c611aa2-1~exp1~20200707223407.61 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
