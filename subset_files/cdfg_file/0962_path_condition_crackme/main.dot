digraph "DFG for'main' function" {
	Node0xf34d28[shape=record, label="  %1 = alloca i32, align 4"];
	Node0xf34da8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0xf34e38[shape=record, label="  %3 = alloca i32, align 4"];
	Node0xf34e98[shape=record, label="  %4 = alloca i32, align 4"];
	Node0xf34f48[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0xf35378[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf35458[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0xf35558[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf35618[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0xf356c8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf35788[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0xf35838[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf2f7c0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0xf35a38[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0xf369a8[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0xf37018[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0xf37078[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0xf37188[shape=record, label="  call void @crackme(i32 %10, i32 %11, i32 %12, i32 %13)"];
	Node0xf373e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0xf37548[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0xf37658[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0xf37768[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0xf37828[shape=record, label="  ret i32 0"];
	Node0xf34d28 -> Node0xf34da8;
	Node0xf34da8 -> Node0xf34e38;
	Node0xf34e38 -> Node0xf34e98;
	Node0xf34e98 -> Node0xf34f48;
	Node0xf34f48 -> Node0xf35378;
	Node0xf35378 -> Node0xf35458;
	Node0xf35458 -> Node0xf35558;
	Node0xf35558 -> Node0xf35618;
	Node0xf35618 -> Node0xf356c8;
	Node0xf356c8 -> Node0xf35788;
	Node0xf35788 -> Node0xf35838;
	Node0xf35838 -> Node0xf2f7c0;
	Node0xf2f7c0 -> Node0xf35a38;
	Node0xf35a38 -> Node0xf369a8;
	Node0xf369a8 -> Node0xf37018;
	Node0xf37018 -> Node0xf37078;
	Node0xf37078 -> Node0xf37188;
	Node0xf37188 -> Node0xf373e8;
	Node0xf373e8 -> Node0xf37548;
	Node0xf37548 -> Node0xf37658;
	Node0xf37658 -> Node0xf37768;
	Node0xf37768 -> Node0xf37828;
edge [color=red]
	Node0xf34d28 -> Node0xf34f48;
	Node0xf34f48 -> Node0xf35378;
	Node0xf34da8 -> Node0xf35458;
	Node0xf35458 -> Node0xf35558;
	Node0xf34e38 -> Node0xf35618;
	Node0xf35618 -> Node0xf356c8;
	Node0xf34e98 -> Node0xf35788;
	Node0xf35788 -> Node0xf35838;
	Node0xf34d28 -> Node0xf2f7c0;
	Node0xf34da8 -> Node0xf2f7c0;
	Node0xf34e38 -> Node0xf2f7c0;
	Node0xf34e98 -> Node0xf2f7c0;
	Node0xf34d28 -> Node0xf35a38;
	Node0xf34da8 -> Node0xf369a8;
	Node0xf34e38 -> Node0xf37018;
	Node0xf34e98 -> Node0xf37078;
	Node0xf35a38 -> Node0xf37188;
	Node0xf369a8 -> Node0xf37188;
	Node0xf37018 -> Node0xf37188;
	Node0xf37078 -> Node0xf37188;
	Node0xf35788 -> Node0xf373e8;
	Node0xf35618 -> Node0xf37548;
	Node0xf35458 -> Node0xf37658;
	Node0xf34f48 -> Node0xf37768;
}
