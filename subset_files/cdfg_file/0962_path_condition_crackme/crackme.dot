digraph "DFG for'crackme' function" {
	Node0xf32790[shape=record, label="  %5 = xor i32 %2, %1"];
	Node0xf32e10[shape=record, label="  %6 = shl i32 %5, 1"];
	Node0xf32e80[shape=record, label="  %7 = sub i32 %6, %1"];
	Node0xf32ef0[shape=record, label="  %8 = or i32 %3, %0"];
	Node0xf32f60[shape=record, label="  %9 = add i32 %7, %8"];
	Node0xf33000[shape=record, label="  %10 = xor i32 %0, -1"];
	Node0xf33070[shape=record, label="  %11 = and i32 %10, %3"];
	Node0xf330e0[shape=record, label="  %12 = shl i32 %11, 1"];
	Node0xf33180[shape=record, label="  %13 = xor i32 %12, -2"];
	Node0xf331f0[shape=record, label="  %14 = add i32 %9, %13"];
	Node0xf33260[shape=record, label="  %15 = xor i32 %2, -1"];
	Node0xf332d0[shape=record, label="  %16 = or i32 %15, %1"];
	Node0xf33340[shape=record, label="  %17 = mul i32 %16, -2"];
	Node0xf333b0[shape=record, label="  %18 = xor i32 %6, -2"];
	Node0xf33420[shape=record, label="  %19 = sub i32 %17, %18"];
	Node0xf33490[shape=record, label="  %20 = or i32 %19, 1"];
	Node0xf33500[shape=record, label="  %21 = and i32 %2, %1"];
	Node0xf33570[shape=record, label="  %22 = shl i32 %21, 1"];
	Node0xf335e0[shape=record, label="  %23 = xor i32 %22, -2"];
	Node0xf33650[shape=record, label="  %24 = or i32 %2, %1"];
	Node0xf336c0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0xf33730[shape=record, label="  %26 = xor i32 %16, -1"];
	Node0xf337a0[shape=record, label="  %27 = and i32 %15, %1"];
	Node0xf33810[shape=record, label="  %28 = xor i32 %3, %0"];
	Node0xf33880[shape=record, label="  %29 = and i32 %3, %0"];
	Node0xf338f0[shape=record, label="  %30 = shl i32 %3, 1"];
	Node0xf33960[shape=record, label="  %31 = or i32 %30, 1"];
	Node0xf33a00[shape=record, label="  %32 = shl i32 %8, 2"];
	Node0xf33cb0[shape=record, label="  %33 = xor i32 %32, -4"];
	Node0xf33d50[shape=record, label="  %34 = xor i32 %3, 1073741823"];
	Node0xf33dc0[shape=record, label="  %35 = and i32 %34, %0"];
	Node0xf33e30[shape=record, label="  %36 = shl i32 %35, 2"];
	Node0xf33ea0[shape=record, label="  %37 = add i32 %27, %26"];
	Node0xf33f10[shape=record, label="  %38 = add i32 %37, %29"];
	Node0xf33fb0[shape=record, label="  %39 = mul i32 %38, 3"];
	Node0xf34020[shape=record, label="  %40 = add i32 %21, %25"];
	Node0xf340c0[shape=record, label="  %41 = mul i32 %40, 5"];
	Node0xf34130[shape=record, label="  %42 = add i32 %1, 3"];
	Node0xf341a0[shape=record, label="  %43 = sub i32 %42, %3"];
	Node0xf34210[shape=record, label="  %44 = add i32 %43, %28"];
	Node0xf34280[shape=record, label="  %45 = add i32 %44, %29"];
	Node0xf342f0[shape=record, label="  %46 = add i32 %45, %11"];
	Node0xf34360[shape=record, label="  %47 = add i32 %46, %23"];
	Node0xf343d0[shape=record, label="  %48 = add i32 %47, %31"];
	Node0xf34440[shape=record, label="  %49 = add i32 %48, %41"];
	Node0xf344b0[shape=record, label="  %50 = add i32 %49, %33"];
	Node0xf34520[shape=record, label="  %51 = add i32 %50, %36"];
	Node0xf34590[shape=record, label="  %52 = add i32 %51, %20"];
	Node0xf34600[shape=record, label="  %53 = add i32 %52, %39"];
	Node0xf34670[shape=record, label="  %54 = icmp eq i32 %14, %53"];
	Node0xed3268[shape=record, label="  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0xf34b10[shape=record, label="  %56 = tail call i32 @puts(i8* nonnull dereferenceable(1) %55)"];
	Node0xf34b60[shape=record, label="  ret void"];
	Node0xf32790 -> Node0xf32e10;
	Node0xf32e10 -> Node0xf32e80;
	Node0xf32e80 -> Node0xf32ef0;
	Node0xf32ef0 -> Node0xf32f60;
	Node0xf32f60 -> Node0xf33000;
	Node0xf33000 -> Node0xf33070;
	Node0xf33070 -> Node0xf330e0;
	Node0xf330e0 -> Node0xf33180;
	Node0xf33180 -> Node0xf331f0;
	Node0xf331f0 -> Node0xf33260;
	Node0xf33260 -> Node0xf332d0;
	Node0xf332d0 -> Node0xf33340;
	Node0xf33340 -> Node0xf333b0;
	Node0xf333b0 -> Node0xf33420;
	Node0xf33420 -> Node0xf33490;
	Node0xf33490 -> Node0xf33500;
	Node0xf33500 -> Node0xf33570;
	Node0xf33570 -> Node0xf335e0;
	Node0xf335e0 -> Node0xf33650;
	Node0xf33650 -> Node0xf336c0;
	Node0xf336c0 -> Node0xf33730;
	Node0xf33730 -> Node0xf337a0;
	Node0xf337a0 -> Node0xf33810;
	Node0xf33810 -> Node0xf33880;
	Node0xf33880 -> Node0xf338f0;
	Node0xf338f0 -> Node0xf33960;
	Node0xf33960 -> Node0xf33a00;
	Node0xf33a00 -> Node0xf33cb0;
	Node0xf33cb0 -> Node0xf33d50;
	Node0xf33d50 -> Node0xf33dc0;
	Node0xf33dc0 -> Node0xf33e30;
	Node0xf33e30 -> Node0xf33ea0;
	Node0xf33ea0 -> Node0xf33f10;
	Node0xf33f10 -> Node0xf33fb0;
	Node0xf33fb0 -> Node0xf34020;
	Node0xf34020 -> Node0xf340c0;
	Node0xf340c0 -> Node0xf34130;
	Node0xf34130 -> Node0xf341a0;
	Node0xf341a0 -> Node0xf34210;
	Node0xf34210 -> Node0xf34280;
	Node0xf34280 -> Node0xf342f0;
	Node0xf342f0 -> Node0xf34360;
	Node0xf34360 -> Node0xf343d0;
	Node0xf343d0 -> Node0xf34440;
	Node0xf34440 -> Node0xf344b0;
	Node0xf344b0 -> Node0xf34520;
	Node0xf34520 -> Node0xf34590;
	Node0xf34590 -> Node0xf34600;
	Node0xf34600 -> Node0xf34670;
	Node0xf34670 -> Node0xed3268;
	Node0xed3268 -> Node0xf34b10;
	Node0xf34b10 -> Node0xf34b60;
edge [color=red]
	Node0xf32790 -> Node0xf32e10;
	Node0xf32e10 -> Node0xf32e80;
	Node0xf32e80 -> Node0xf32f60;
	Node0xf32ef0 -> Node0xf32f60;
	Node0xf33000 -> Node0xf33070;
	Node0xf33070 -> Node0xf330e0;
	Node0xf330e0 -> Node0xf33180;
	Node0xf32f60 -> Node0xf331f0;
	Node0xf33180 -> Node0xf331f0;
	Node0xf33260 -> Node0xf332d0;
	Node0xf332d0 -> Node0xf33340;
	Node0xf32e10 -> Node0xf333b0;
	Node0xf33340 -> Node0xf33420;
	Node0xf333b0 -> Node0xf33420;
	Node0xf33420 -> Node0xf33490;
	Node0xf33500 -> Node0xf33570;
	Node0xf33570 -> Node0xf335e0;
	Node0xf33650 -> Node0xf336c0;
	Node0xf332d0 -> Node0xf33730;
	Node0xf33260 -> Node0xf337a0;
	Node0xf338f0 -> Node0xf33960;
	Node0xf32ef0 -> Node0xf33a00;
	Node0xf33a00 -> Node0xf33cb0;
	Node0xf33d50 -> Node0xf33dc0;
	Node0xf33dc0 -> Node0xf33e30;
	Node0xf337a0 -> Node0xf33ea0;
	Node0xf33730 -> Node0xf33ea0;
	Node0xf33ea0 -> Node0xf33f10;
	Node0xf33880 -> Node0xf33f10;
	Node0xf33f10 -> Node0xf33fb0;
	Node0xf33500 -> Node0xf34020;
	Node0xf336c0 -> Node0xf34020;
	Node0xf34020 -> Node0xf340c0;
	Node0xf34130 -> Node0xf341a0;
	Node0xf341a0 -> Node0xf34210;
	Node0xf33810 -> Node0xf34210;
	Node0xf34210 -> Node0xf34280;
	Node0xf33880 -> Node0xf34280;
	Node0xf34280 -> Node0xf342f0;
	Node0xf33070 -> Node0xf342f0;
	Node0xf342f0 -> Node0xf34360;
	Node0xf335e0 -> Node0xf34360;
	Node0xf34360 -> Node0xf343d0;
	Node0xf33960 -> Node0xf343d0;
	Node0xf343d0 -> Node0xf34440;
	Node0xf340c0 -> Node0xf34440;
	Node0xf34440 -> Node0xf344b0;
	Node0xf33cb0 -> Node0xf344b0;
	Node0xf344b0 -> Node0xf34520;
	Node0xf33e30 -> Node0xf34520;
	Node0xf34520 -> Node0xf34590;
	Node0xf33490 -> Node0xf34590;
	Node0xf34590 -> Node0xf34600;
	Node0xf33fb0 -> Node0xf34600;
	Node0xf331f0 -> Node0xf34670;
	Node0xf34600 -> Node0xf34670;
	Node0xf34670 -> Node0xed3268;
	Node0xed3268 -> Node0xf34b10;
}
