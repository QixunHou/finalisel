digraph "DFG for'main' function" {
	Node0x21cdbe8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x21cdc68[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x21cdcf8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x21cdd58[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x21cde08[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x21ce238[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21ce318[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x21ce418[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21ce4d8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x21ce588[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21ce648[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x21ce6f8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x21c8b20[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x21ce8f8[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x21cf868[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x21cfed8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x21cff38[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x21cffb0[shape=record, label="  %14 = xor i32 %11, -1"];
	Node0x21d0020[shape=record, label="  %15 = xor i32 %12, %14"];
	Node0x21d0090[shape=record, label="  %16 = sub i32 1, %10"];
	Node0x21d0100[shape=record, label="  %17 = add i32 %16, %15"];
	Node0x21d0170[shape=record, label="  %18 = xor i32 %12, 2147483647"];
	Node0x21d01e0[shape=record, label="  %19 = and i32 %18, %11"];
	Node0x21d0250[shape=record, label="  %20 = and i32 %12, %11"];
	Node0x21d02c0[shape=record, label="  %21 = shl i32 %13, 1"];
	Node0x21d0330[shape=record, label="  %22 = xor i32 %21, -2"];
	Node0x21d03a0[shape=record, label="  %23 = xor i32 %13, %10"];
	Node0x21d0410[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x21d0480[shape=record, label="  %25 = mul i32 %24, 5"];
	Node0x21d04f0[shape=record, label="  %26 = and i32 %13, %10"];
	Node0x21d0560[shape=record, label="  %27 = xor i32 %10, -1"];
	Node0x21d05d0[shape=record, label="  %28 = and i32 %13, %27"];
	Node0x21d0640[shape=record, label="  %29 = or i32 %13, %27"];
	Node0x21d06b0[shape=record, label="  %30 = or i32 %13, %10"];
	Node0x21d0720[shape=record, label="  %31 = xor i32 %30, -1"];
	Node0x21d0790[shape=record, label="  %32 = mul i32 %31, -7"];
	Node0x21d0800[shape=record, label="  %33 = xor i32 %29, -1"];
	Node0x21d0870[shape=record, label="  %34 = shl i32 %26, 3"];
	Node0x21d08e0[shape=record, label="  %35 = add i32 %28, %33"];
	Node0x21d0950[shape=record, label="  %36 = mul i32 %35, -3"];
	Node0x21d09c0[shape=record, label="  %37 = sub i32 %20, %11"];
	Node0x21d0a30[shape=record, label="  %38 = add i32 %37, %19"];
	Node0x21d0aa0[shape=record, label="  %39 = shl i32 %38, 1"];
	Node0x21d0b10[shape=record, label="  %40 = add i32 %15, 2"];
	Node0x21d0b80[shape=record, label="  %41 = add i32 %40, %13"];
	Node0x21d0bf0[shape=record, label="  %42 = add i32 %41, %26"];
	Node0x21d0c60[shape=record, label="  %43 = add i32 %42, %23"];
	Node0x21d0cd0[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x21d0d40[shape=record, label="  %45 = add i32 %44, %29"];
	Node0x21d0db0[shape=record, label="  %46 = add i32 %45, %22"];
	Node0x21d0e20[shape=record, label="  %47 = add i32 %46, %25"];
	Node0x21d0e90[shape=record, label="  %48 = add i32 %47, %32"];
	Node0x21d0f00[shape=record, label="  %49 = sub i32 %48, %34"];
	Node0x21d0f70[shape=record, label="  %50 = add i32 %49, %36"];
	Node0x21d0fe0[shape=record, label="  %51 = add i32 %50, %39"];
	Node0x21d1050[shape=record, label="  %52 = icmp eq i32 %17, %51"];
	Node0x216d8b8[shape=record, label="  %53 = select i1 %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x21d10e0[shape=record, label="  %54 = call i32 @puts(i8* nonnull dereferenceable(1) %53) #5"];
	Node0x21d1388[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x21d14e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x21d15f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x21d1708[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x21d17c8[shape=record, label="  ret i32 0"];
	Node0x21cdbe8 -> Node0x21cdc68;
	Node0x21cdc68 -> Node0x21cdcf8;
	Node0x21cdcf8 -> Node0x21cdd58;
	Node0x21cdd58 -> Node0x21cde08;
	Node0x21cde08 -> Node0x21ce238;
	Node0x21ce238 -> Node0x21ce318;
	Node0x21ce318 -> Node0x21ce418;
	Node0x21ce418 -> Node0x21ce4d8;
	Node0x21ce4d8 -> Node0x21ce588;
	Node0x21ce588 -> Node0x21ce648;
	Node0x21ce648 -> Node0x21ce6f8;
	Node0x21ce6f8 -> Node0x21c8b20;
	Node0x21c8b20 -> Node0x21ce8f8;
	Node0x21ce8f8 -> Node0x21cf868;
	Node0x21cf868 -> Node0x21cfed8;
	Node0x21cfed8 -> Node0x21cff38;
	Node0x21cff38 -> Node0x21cffb0;
	Node0x21cffb0 -> Node0x21d0020;
	Node0x21d0020 -> Node0x21d0090;
	Node0x21d0090 -> Node0x21d0100;
	Node0x21d0100 -> Node0x21d0170;
	Node0x21d0170 -> Node0x21d01e0;
	Node0x21d01e0 -> Node0x21d0250;
	Node0x21d0250 -> Node0x21d02c0;
	Node0x21d02c0 -> Node0x21d0330;
	Node0x21d0330 -> Node0x21d03a0;
	Node0x21d03a0 -> Node0x21d0410;
	Node0x21d0410 -> Node0x21d0480;
	Node0x21d0480 -> Node0x21d04f0;
	Node0x21d04f0 -> Node0x21d0560;
	Node0x21d0560 -> Node0x21d05d0;
	Node0x21d05d0 -> Node0x21d0640;
	Node0x21d0640 -> Node0x21d06b0;
	Node0x21d06b0 -> Node0x21d0720;
	Node0x21d0720 -> Node0x21d0790;
	Node0x21d0790 -> Node0x21d0800;
	Node0x21d0800 -> Node0x21d0870;
	Node0x21d0870 -> Node0x21d08e0;
	Node0x21d08e0 -> Node0x21d0950;
	Node0x21d0950 -> Node0x21d09c0;
	Node0x21d09c0 -> Node0x21d0a30;
	Node0x21d0a30 -> Node0x21d0aa0;
	Node0x21d0aa0 -> Node0x21d0b10;
	Node0x21d0b10 -> Node0x21d0b80;
	Node0x21d0b80 -> Node0x21d0bf0;
	Node0x21d0bf0 -> Node0x21d0c60;
	Node0x21d0c60 -> Node0x21d0cd0;
	Node0x21d0cd0 -> Node0x21d0d40;
	Node0x21d0d40 -> Node0x21d0db0;
	Node0x21d0db0 -> Node0x21d0e20;
	Node0x21d0e20 -> Node0x21d0e90;
	Node0x21d0e90 -> Node0x21d0f00;
	Node0x21d0f00 -> Node0x21d0f70;
	Node0x21d0f70 -> Node0x21d0fe0;
	Node0x21d0fe0 -> Node0x21d1050;
	Node0x21d1050 -> Node0x216d8b8;
	Node0x216d8b8 -> Node0x21d10e0;
	Node0x21d10e0 -> Node0x21d1388;
	Node0x21d1388 -> Node0x21d14e8;
	Node0x21d14e8 -> Node0x21d15f8;
	Node0x21d15f8 -> Node0x21d1708;
	Node0x21d1708 -> Node0x21d17c8;
edge [color=red]
	Node0x21cdbe8 -> Node0x21cde08;
	Node0x21cde08 -> Node0x21ce238;
	Node0x21cdc68 -> Node0x21ce318;
	Node0x21ce318 -> Node0x21ce418;
	Node0x21cdcf8 -> Node0x21ce4d8;
	Node0x21ce4d8 -> Node0x21ce588;
	Node0x21cdd58 -> Node0x21ce648;
	Node0x21ce648 -> Node0x21ce6f8;
	Node0x21cdbe8 -> Node0x21c8b20;
	Node0x21cdc68 -> Node0x21c8b20;
	Node0x21cdcf8 -> Node0x21c8b20;
	Node0x21cdd58 -> Node0x21c8b20;
	Node0x21cdbe8 -> Node0x21ce8f8;
	Node0x21cdc68 -> Node0x21cf868;
	Node0x21cdcf8 -> Node0x21cfed8;
	Node0x21cdd58 -> Node0x21cff38;
	Node0x21cf868 -> Node0x21cffb0;
	Node0x21cfed8 -> Node0x21d0020;
	Node0x21cffb0 -> Node0x21d0020;
	Node0x21ce8f8 -> Node0x21d0090;
	Node0x21d0090 -> Node0x21d0100;
	Node0x21d0020 -> Node0x21d0100;
	Node0x21cfed8 -> Node0x21d0170;
	Node0x21d0170 -> Node0x21d01e0;
	Node0x21cf868 -> Node0x21d01e0;
	Node0x21cfed8 -> Node0x21d0250;
	Node0x21cf868 -> Node0x21d0250;
	Node0x21cff38 -> Node0x21d02c0;
	Node0x21d02c0 -> Node0x21d0330;
	Node0x21cff38 -> Node0x21d03a0;
	Node0x21ce8f8 -> Node0x21d03a0;
	Node0x21d03a0 -> Node0x21d0410;
	Node0x21d0410 -> Node0x21d0480;
	Node0x21cff38 -> Node0x21d04f0;
	Node0x21ce8f8 -> Node0x21d04f0;
	Node0x21ce8f8 -> Node0x21d0560;
	Node0x21cff38 -> Node0x21d05d0;
	Node0x21d0560 -> Node0x21d05d0;
	Node0x21cff38 -> Node0x21d0640;
	Node0x21d0560 -> Node0x21d0640;
	Node0x21cff38 -> Node0x21d06b0;
	Node0x21ce8f8 -> Node0x21d06b0;
	Node0x21d06b0 -> Node0x21d0720;
	Node0x21d0720 -> Node0x21d0790;
	Node0x21d0640 -> Node0x21d0800;
	Node0x21d04f0 -> Node0x21d0870;
	Node0x21d05d0 -> Node0x21d08e0;
	Node0x21d0800 -> Node0x21d08e0;
	Node0x21d08e0 -> Node0x21d0950;
	Node0x21d0250 -> Node0x21d09c0;
	Node0x21cf868 -> Node0x21d09c0;
	Node0x21d09c0 -> Node0x21d0a30;
	Node0x21d01e0 -> Node0x21d0a30;
	Node0x21d0a30 -> Node0x21d0aa0;
	Node0x21d0020 -> Node0x21d0b10;
	Node0x21d0b10 -> Node0x21d0b80;
	Node0x21cff38 -> Node0x21d0b80;
	Node0x21d0b80 -> Node0x21d0bf0;
	Node0x21d04f0 -> Node0x21d0bf0;
	Node0x21d0bf0 -> Node0x21d0c60;
	Node0x21d03a0 -> Node0x21d0c60;
	Node0x21d0c60 -> Node0x21d0cd0;
	Node0x21d05d0 -> Node0x21d0cd0;
	Node0x21d0cd0 -> Node0x21d0d40;
	Node0x21d0640 -> Node0x21d0d40;
	Node0x21d0d40 -> Node0x21d0db0;
	Node0x21d0330 -> Node0x21d0db0;
	Node0x21d0db0 -> Node0x21d0e20;
	Node0x21d0480 -> Node0x21d0e20;
	Node0x21d0e20 -> Node0x21d0e90;
	Node0x21d0790 -> Node0x21d0e90;
	Node0x21d0e90 -> Node0x21d0f00;
	Node0x21d0870 -> Node0x21d0f00;
	Node0x21d0f00 -> Node0x21d0f70;
	Node0x21d0950 -> Node0x21d0f70;
	Node0x21d0f70 -> Node0x21d0fe0;
	Node0x21d0aa0 -> Node0x21d0fe0;
	Node0x21d0100 -> Node0x21d1050;
	Node0x21d0fe0 -> Node0x21d1050;
	Node0x21d1050 -> Node0x216d8b8;
	Node0x216d8b8 -> Node0x21d10e0;
	Node0x21ce648 -> Node0x21d1388;
	Node0x21ce4d8 -> Node0x21d14e8;
	Node0x21ce318 -> Node0x21d15f8;
	Node0x21cde08 -> Node0x21d1708;
}
