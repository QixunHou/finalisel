digraph "DFG for'main' function" {
	Node0x22a0cf8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x22a0d78[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x22a0e08[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x22a0e68[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x22a0f18[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x22a1348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22a1428[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x22a1528[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22a15e8[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x22a1698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x22a1758[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x22a1808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x229bba0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x22a1a08[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x22a2978[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x22a2fe8[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x22a3048[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x22a30c0[shape=record, label="  %14 = xor i32 %12, -1"];
	Node0x22a3130[shape=record, label="  %15 = and i32 %11, %14"];
	Node0x22a31a0[shape=record, label="  %16 = xor i32 %13, %10"];
	Node0x22a3210[shape=record, label="  %17 = xor i32 %16, -1"];
	Node0x22a3280[shape=record, label="  %18 = add i32 %15, %17"];
	Node0x22a32f0[shape=record, label="  %19 = xor i32 %11, -1"];
	Node0x22a3360[shape=record, label="  %20 = and i32 %12, %19"];
	Node0x22a33d0[shape=record, label="  %21 = shl i32 %14, 1"];
	Node0x22a3440[shape=record, label="  %22 = shl i32 %12, 1"];
	Node0x22a34b0[shape=record, label="  %23 = and i32 %12, %11"];
	Node0x22a3520[shape=record, label="  %24 = xor i32 %23, -1"];
	Node0x22a3590[shape=record, label="  %25 = xor i32 %12, %11"];
	Node0x22a3600[shape=record, label="  %26 = shl i32 %25, 1"];
	Node0x22a3670[shape=record, label="  %27 = xor i32 %26, -2"];
	Node0x22a36e0[shape=record, label="  %28 = or i32 %12, %11"];
	Node0x22a3750[shape=record, label="  %29 = xor i32 %28, -1"];
	Node0x22a37c0[shape=record, label="  %30 = xor i32 %13, -1"];
	Node0x22a3830[shape=record, label="  %31 = or i32 %10, %30"];
	Node0x22a38a0[shape=record, label="  %32 = shl i32 %10, 1"];
	Node0x22a3910[shape=record, label="  %33 = or i32 %13, %10"];
	Node0x22a3980[shape=record, label="  %34 = xor i32 %33, -1"];
	Node0x22a39f0[shape=record, label="  %35 = and i32 %10, %30"];
	Node0x22a3a60[shape=record, label="  %36 = add i32 %35, %13"];
	Node0x22a3ad0[shape=record, label="  %37 = mul i32 %36, 5"];
	Node0x22a3b40[shape=record, label="  %38 = add i32 %23, %29"];
	Node0x22a3bb0[shape=record, label="  %39 = add i32 %38, %34"];
	Node0x22a3c20[shape=record, label="  %40 = mul i32 %39, 3"];
	Node0x22a3c90[shape=record, label="  %41 = add i32 %10, 3"];
	Node0x22a3d00[shape=record, label="  %42 = add i32 %41, %11"];
	Node0x22a3d70[shape=record, label="  %43 = sub i32 %42, %32"];
	Node0x22a3de0[shape=record, label="  %44 = sub i32 %43, %21"];
	Node0x22a3e50[shape=record, label="  %45 = add i32 %44, %20"];
	Node0x22a3ec0[shape=record, label="  %46 = sub i32 %45, %22"];
	Node0x22a3f30[shape=record, label="  %47 = add i32 %46, %24"];
	Node0x22a3fa0[shape=record, label="  %48 = add i32 %47, %15"];
	Node0x22a4010[shape=record, label="  %49 = add i32 %48, %31"];
	Node0x22a4080[shape=record, label="  %50 = sub i32 %49, %16"];
	Node0x22a40f0[shape=record, label="  %51 = sub i32 %50, %33"];
	Node0x22a4160[shape=record, label="  %52 = sub i32 %51, %27"];
	Node0x22a41d0[shape=record, label="  %53 = add i32 %52, %37"];
	Node0x22a4240[shape=record, label="  %54 = add i32 %53, %40"];
	Node0x22a42b0[shape=record, label="  %55 = icmp eq i32 %18, %54"];
	Node0x22408b8[shape=record, label="  %56 = select i1 %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22a4340[shape=record, label="  %57 = call i32 @puts(i8* nonnull dereferenceable(1) %56) #5"];
	Node0x22a45e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x22a4748[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x22a4858[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x22a4968[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x22a4a28[shape=record, label="  ret i32 0"];
	Node0x22a0cf8 -> Node0x22a0d78;
	Node0x22a0d78 -> Node0x22a0e08;
	Node0x22a0e08 -> Node0x22a0e68;
	Node0x22a0e68 -> Node0x22a0f18;
	Node0x22a0f18 -> Node0x22a1348;
	Node0x22a1348 -> Node0x22a1428;
	Node0x22a1428 -> Node0x22a1528;
	Node0x22a1528 -> Node0x22a15e8;
	Node0x22a15e8 -> Node0x22a1698;
	Node0x22a1698 -> Node0x22a1758;
	Node0x22a1758 -> Node0x22a1808;
	Node0x22a1808 -> Node0x229bba0;
	Node0x229bba0 -> Node0x22a1a08;
	Node0x22a1a08 -> Node0x22a2978;
	Node0x22a2978 -> Node0x22a2fe8;
	Node0x22a2fe8 -> Node0x22a3048;
	Node0x22a3048 -> Node0x22a30c0;
	Node0x22a30c0 -> Node0x22a3130;
	Node0x22a3130 -> Node0x22a31a0;
	Node0x22a31a0 -> Node0x22a3210;
	Node0x22a3210 -> Node0x22a3280;
	Node0x22a3280 -> Node0x22a32f0;
	Node0x22a32f0 -> Node0x22a3360;
	Node0x22a3360 -> Node0x22a33d0;
	Node0x22a33d0 -> Node0x22a3440;
	Node0x22a3440 -> Node0x22a34b0;
	Node0x22a34b0 -> Node0x22a3520;
	Node0x22a3520 -> Node0x22a3590;
	Node0x22a3590 -> Node0x22a3600;
	Node0x22a3600 -> Node0x22a3670;
	Node0x22a3670 -> Node0x22a36e0;
	Node0x22a36e0 -> Node0x22a3750;
	Node0x22a3750 -> Node0x22a37c0;
	Node0x22a37c0 -> Node0x22a3830;
	Node0x22a3830 -> Node0x22a38a0;
	Node0x22a38a0 -> Node0x22a3910;
	Node0x22a3910 -> Node0x22a3980;
	Node0x22a3980 -> Node0x22a39f0;
	Node0x22a39f0 -> Node0x22a3a60;
	Node0x22a3a60 -> Node0x22a3ad0;
	Node0x22a3ad0 -> Node0x22a3b40;
	Node0x22a3b40 -> Node0x22a3bb0;
	Node0x22a3bb0 -> Node0x22a3c20;
	Node0x22a3c20 -> Node0x22a3c90;
	Node0x22a3c90 -> Node0x22a3d00;
	Node0x22a3d00 -> Node0x22a3d70;
	Node0x22a3d70 -> Node0x22a3de0;
	Node0x22a3de0 -> Node0x22a3e50;
	Node0x22a3e50 -> Node0x22a3ec0;
	Node0x22a3ec0 -> Node0x22a3f30;
	Node0x22a3f30 -> Node0x22a3fa0;
	Node0x22a3fa0 -> Node0x22a4010;
	Node0x22a4010 -> Node0x22a4080;
	Node0x22a4080 -> Node0x22a40f0;
	Node0x22a40f0 -> Node0x22a4160;
	Node0x22a4160 -> Node0x22a41d0;
	Node0x22a41d0 -> Node0x22a4240;
	Node0x22a4240 -> Node0x22a42b0;
	Node0x22a42b0 -> Node0x22408b8;
	Node0x22408b8 -> Node0x22a4340;
	Node0x22a4340 -> Node0x22a45e8;
	Node0x22a45e8 -> Node0x22a4748;
	Node0x22a4748 -> Node0x22a4858;
	Node0x22a4858 -> Node0x22a4968;
	Node0x22a4968 -> Node0x22a4a28;
edge [color=red]
	Node0x22a0cf8 -> Node0x22a0f18;
	Node0x22a0f18 -> Node0x22a1348;
	Node0x22a0d78 -> Node0x22a1428;
	Node0x22a1428 -> Node0x22a1528;
	Node0x22a0e08 -> Node0x22a15e8;
	Node0x22a15e8 -> Node0x22a1698;
	Node0x22a0e68 -> Node0x22a1758;
	Node0x22a1758 -> Node0x22a1808;
	Node0x22a0cf8 -> Node0x229bba0;
	Node0x22a0d78 -> Node0x229bba0;
	Node0x22a0e08 -> Node0x229bba0;
	Node0x22a0e68 -> Node0x229bba0;
	Node0x22a0cf8 -> Node0x22a1a08;
	Node0x22a0d78 -> Node0x22a2978;
	Node0x22a0e08 -> Node0x22a2fe8;
	Node0x22a0e68 -> Node0x22a3048;
	Node0x22a2fe8 -> Node0x22a30c0;
	Node0x22a2978 -> Node0x22a3130;
	Node0x22a30c0 -> Node0x22a3130;
	Node0x22a3048 -> Node0x22a31a0;
	Node0x22a1a08 -> Node0x22a31a0;
	Node0x22a31a0 -> Node0x22a3210;
	Node0x22a3130 -> Node0x22a3280;
	Node0x22a3210 -> Node0x22a3280;
	Node0x22a2978 -> Node0x22a32f0;
	Node0x22a2fe8 -> Node0x22a3360;
	Node0x22a32f0 -> Node0x22a3360;
	Node0x22a30c0 -> Node0x22a33d0;
	Node0x22a2fe8 -> Node0x22a3440;
	Node0x22a2fe8 -> Node0x22a34b0;
	Node0x22a2978 -> Node0x22a34b0;
	Node0x22a34b0 -> Node0x22a3520;
	Node0x22a2fe8 -> Node0x22a3590;
	Node0x22a2978 -> Node0x22a3590;
	Node0x22a3590 -> Node0x22a3600;
	Node0x22a3600 -> Node0x22a3670;
	Node0x22a2fe8 -> Node0x22a36e0;
	Node0x22a2978 -> Node0x22a36e0;
	Node0x22a36e0 -> Node0x22a3750;
	Node0x22a3048 -> Node0x22a37c0;
	Node0x22a1a08 -> Node0x22a3830;
	Node0x22a37c0 -> Node0x22a3830;
	Node0x22a1a08 -> Node0x22a38a0;
	Node0x22a3048 -> Node0x22a3910;
	Node0x22a1a08 -> Node0x22a3910;
	Node0x22a3910 -> Node0x22a3980;
	Node0x22a1a08 -> Node0x22a39f0;
	Node0x22a37c0 -> Node0x22a39f0;
	Node0x22a39f0 -> Node0x22a3a60;
	Node0x22a3048 -> Node0x22a3a60;
	Node0x22a3a60 -> Node0x22a3ad0;
	Node0x22a34b0 -> Node0x22a3b40;
	Node0x22a3750 -> Node0x22a3b40;
	Node0x22a3b40 -> Node0x22a3bb0;
	Node0x22a3980 -> Node0x22a3bb0;
	Node0x22a3bb0 -> Node0x22a3c20;
	Node0x22a1a08 -> Node0x22a3c90;
	Node0x22a3c90 -> Node0x22a3d00;
	Node0x22a2978 -> Node0x22a3d00;
	Node0x22a3d00 -> Node0x22a3d70;
	Node0x22a38a0 -> Node0x22a3d70;
	Node0x22a3d70 -> Node0x22a3de0;
	Node0x22a33d0 -> Node0x22a3de0;
	Node0x22a3de0 -> Node0x22a3e50;
	Node0x22a3360 -> Node0x22a3e50;
	Node0x22a3e50 -> Node0x22a3ec0;
	Node0x22a3440 -> Node0x22a3ec0;
	Node0x22a3ec0 -> Node0x22a3f30;
	Node0x22a3520 -> Node0x22a3f30;
	Node0x22a3f30 -> Node0x22a3fa0;
	Node0x22a3130 -> Node0x22a3fa0;
	Node0x22a3fa0 -> Node0x22a4010;
	Node0x22a3830 -> Node0x22a4010;
	Node0x22a4010 -> Node0x22a4080;
	Node0x22a31a0 -> Node0x22a4080;
	Node0x22a4080 -> Node0x22a40f0;
	Node0x22a3910 -> Node0x22a40f0;
	Node0x22a40f0 -> Node0x22a4160;
	Node0x22a3670 -> Node0x22a4160;
	Node0x22a4160 -> Node0x22a41d0;
	Node0x22a3ad0 -> Node0x22a41d0;
	Node0x22a41d0 -> Node0x22a4240;
	Node0x22a3c20 -> Node0x22a4240;
	Node0x22a3280 -> Node0x22a42b0;
	Node0x22a4240 -> Node0x22a42b0;
	Node0x22a42b0 -> Node0x22408b8;
	Node0x22408b8 -> Node0x22a4340;
	Node0x22a1758 -> Node0x22a45e8;
	Node0x22a15e8 -> Node0x22a4748;
	Node0x22a1428 -> Node0x22a4858;
	Node0x22a0f18 -> Node0x22a4968;
}
