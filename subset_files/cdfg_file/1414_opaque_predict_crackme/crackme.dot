digraph "DFG for'crackme' function" {
	Node0x229f180[shape=record, label="  %5 = xor i32 %2, -1"];
	Node0x229f1f0[shape=record, label="  %6 = and i32 %5, %1"];
	Node0x229f260[shape=record, label="  %7 = xor i32 %3, %0"];
	Node0x229f2d0[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x229f340[shape=record, label="  %9 = add i32 %6, %8"];
	Node0x229f3b0[shape=record, label="  %10 = xor i32 %1, -1"];
	Node0x229f420[shape=record, label="  %11 = and i32 %10, %2"];
	Node0x229f4c0[shape=record, label="  %12 = shl i32 %5, 1"];
	Node0x229f530[shape=record, label="  %13 = shl i32 %2, 1"];
	Node0x229f5a0[shape=record, label="  %14 = and i32 %2, %1"];
	Node0x229f610[shape=record, label="  %15 = xor i32 %14, -1"];
	Node0x229f680[shape=record, label="  %16 = xor i32 %2, %1"];
	Node0x229f6f0[shape=record, label="  %17 = shl i32 %16, 1"];
	Node0x229f790[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x229f800[shape=record, label="  %19 = or i32 %2, %1"];
	Node0x229f870[shape=record, label="  %20 = xor i32 %19, -1"];
	Node0x229f8e0[shape=record, label="  %21 = xor i32 %3, -1"];
	Node0x229f950[shape=record, label="  %22 = or i32 %21, %0"];
	Node0x229f9c0[shape=record, label="  %23 = shl i32 %0, 1"];
	Node0x229fa30[shape=record, label="  %24 = or i32 %3, %0"];
	Node0x229faa0[shape=record, label="  %25 = xor i32 %24, -1"];
	Node0x229fb10[shape=record, label="  %26 = and i32 %21, %0"];
	Node0x229fb80[shape=record, label="  %27 = add i32 %26, %3"];
	Node0x229fc20[shape=record, label="  %28 = mul i32 %27, 5"];
	Node0x229fc90[shape=record, label="  %29 = add i32 %14, %20"];
	Node0x229fd00[shape=record, label="  %30 = add i32 %29, %25"];
	Node0x229fda0[shape=record, label="  %31 = mul i32 %30, 3"];
	Node0x229fe10[shape=record, label="  %32 = add i32 %0, 3"];
	Node0x22a0090[shape=record, label="  %33 = add i32 %32, %1"];
	Node0x22a0100[shape=record, label="  %34 = sub i32 %33, %23"];
	Node0x22a0170[shape=record, label="  %35 = sub i32 %34, %12"];
	Node0x22a01e0[shape=record, label="  %36 = add i32 %35, %11"];
	Node0x22a0250[shape=record, label="  %37 = sub i32 %36, %13"];
	Node0x22a02c0[shape=record, label="  %38 = add i32 %37, %15"];
	Node0x22a0330[shape=record, label="  %39 = add i32 %38, %6"];
	Node0x22a03a0[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x22a0410[shape=record, label="  %41 = sub i32 %40, %7"];
	Node0x22a0480[shape=record, label="  %42 = sub i32 %41, %24"];
	Node0x22a04f0[shape=record, label="  %43 = sub i32 %42, %18"];
	Node0x22a0560[shape=record, label="  %44 = add i32 %43, %28"];
	Node0x22a05d0[shape=record, label="  %45 = add i32 %44, %31"];
	Node0x22a0640[shape=record, label="  %46 = icmp eq i32 %9, %45"];
	Node0x223f268[shape=record, label="  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x22a0ae0[shape=record, label="  %48 = tail call i32 @puts(i8* nonnull dereferenceable(1) %47)"];
	Node0x22a0b30[shape=record, label="  ret void"];
	Node0x229f180 -> Node0x229f1f0;
	Node0x229f1f0 -> Node0x229f260;
	Node0x229f260 -> Node0x229f2d0;
	Node0x229f2d0 -> Node0x229f340;
	Node0x229f340 -> Node0x229f3b0;
	Node0x229f3b0 -> Node0x229f420;
	Node0x229f420 -> Node0x229f4c0;
	Node0x229f4c0 -> Node0x229f530;
	Node0x229f530 -> Node0x229f5a0;
	Node0x229f5a0 -> Node0x229f610;
	Node0x229f610 -> Node0x229f680;
	Node0x229f680 -> Node0x229f6f0;
	Node0x229f6f0 -> Node0x229f790;
	Node0x229f790 -> Node0x229f800;
	Node0x229f800 -> Node0x229f870;
	Node0x229f870 -> Node0x229f8e0;
	Node0x229f8e0 -> Node0x229f950;
	Node0x229f950 -> Node0x229f9c0;
	Node0x229f9c0 -> Node0x229fa30;
	Node0x229fa30 -> Node0x229faa0;
	Node0x229faa0 -> Node0x229fb10;
	Node0x229fb10 -> Node0x229fb80;
	Node0x229fb80 -> Node0x229fc20;
	Node0x229fc20 -> Node0x229fc90;
	Node0x229fc90 -> Node0x229fd00;
	Node0x229fd00 -> Node0x229fda0;
	Node0x229fda0 -> Node0x229fe10;
	Node0x229fe10 -> Node0x22a0090;
	Node0x22a0090 -> Node0x22a0100;
	Node0x22a0100 -> Node0x22a0170;
	Node0x22a0170 -> Node0x22a01e0;
	Node0x22a01e0 -> Node0x22a0250;
	Node0x22a0250 -> Node0x22a02c0;
	Node0x22a02c0 -> Node0x22a0330;
	Node0x22a0330 -> Node0x22a03a0;
	Node0x22a03a0 -> Node0x22a0410;
	Node0x22a0410 -> Node0x22a0480;
	Node0x22a0480 -> Node0x22a04f0;
	Node0x22a04f0 -> Node0x22a0560;
	Node0x22a0560 -> Node0x22a05d0;
	Node0x22a05d0 -> Node0x22a0640;
	Node0x22a0640 -> Node0x223f268;
	Node0x223f268 -> Node0x22a0ae0;
	Node0x22a0ae0 -> Node0x22a0b30;
edge [color=red]
	Node0x229f180 -> Node0x229f1f0;
	Node0x229f260 -> Node0x229f2d0;
	Node0x229f1f0 -> Node0x229f340;
	Node0x229f2d0 -> Node0x229f340;
	Node0x229f3b0 -> Node0x229f420;
	Node0x229f180 -> Node0x229f4c0;
	Node0x229f5a0 -> Node0x229f610;
	Node0x229f680 -> Node0x229f6f0;
	Node0x229f6f0 -> Node0x229f790;
	Node0x229f800 -> Node0x229f870;
	Node0x229f8e0 -> Node0x229f950;
	Node0x229fa30 -> Node0x229faa0;
	Node0x229f8e0 -> Node0x229fb10;
	Node0x229fb10 -> Node0x229fb80;
	Node0x229fb80 -> Node0x229fc20;
	Node0x229f5a0 -> Node0x229fc90;
	Node0x229f870 -> Node0x229fc90;
	Node0x229fc90 -> Node0x229fd00;
	Node0x229faa0 -> Node0x229fd00;
	Node0x229fd00 -> Node0x229fda0;
	Node0x229fe10 -> Node0x22a0090;
	Node0x22a0090 -> Node0x22a0100;
	Node0x229f9c0 -> Node0x22a0100;
	Node0x22a0100 -> Node0x22a0170;
	Node0x229f4c0 -> Node0x22a0170;
	Node0x22a0170 -> Node0x22a01e0;
	Node0x229f420 -> Node0x22a01e0;
	Node0x22a01e0 -> Node0x22a0250;
	Node0x229f530 -> Node0x22a0250;
	Node0x22a0250 -> Node0x22a02c0;
	Node0x229f610 -> Node0x22a02c0;
	Node0x22a02c0 -> Node0x22a0330;
	Node0x229f1f0 -> Node0x22a0330;
	Node0x22a0330 -> Node0x22a03a0;
	Node0x229f950 -> Node0x22a03a0;
	Node0x22a03a0 -> Node0x22a0410;
	Node0x229f260 -> Node0x22a0410;
	Node0x22a0410 -> Node0x22a0480;
	Node0x229fa30 -> Node0x22a0480;
	Node0x22a0480 -> Node0x22a04f0;
	Node0x229f790 -> Node0x22a04f0;
	Node0x22a04f0 -> Node0x22a0560;
	Node0x229fc20 -> Node0x22a0560;
	Node0x22a0560 -> Node0x22a05d0;
	Node0x229fda0 -> Node0x22a05d0;
	Node0x229f340 -> Node0x22a0640;
	Node0x22a05d0 -> Node0x22a0640;
	Node0x22a0640 -> Node0x223f268;
	Node0x223f268 -> Node0x22a0ae0;
}
