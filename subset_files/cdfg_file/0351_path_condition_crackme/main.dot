digraph "DFG for'main' function" {
	Node0x1691ec8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1691f48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1691fd8[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1692038[shape=record, label="  %4 = bitcast i32* %1 to i8*"];
	Node0x16924b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1692598[shape=record, label="  %5 = bitcast i32* %2 to i8*"];
	Node0x1692698[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1692758[shape=record, label="  %6 = bitcast i32* %3 to i8*"];
	Node0x1692808[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1692a68[shape=record, label="  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3)"];
	Node0x1692b28[shape=record, label="  %8 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1692c88[shape=record, label="  %9 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1692ce8[shape=record, label="  %10 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1697690[shape=record, label="  call void @crackme(i32 %8, i32 %9, i32 %10)"];
	Node0x1697898[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x16979f8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1697b08[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1697bc8[shape=record, label="  ret i32 0"];
	Node0x1691ec8 -> Node0x1691f48;
	Node0x1691f48 -> Node0x1691fd8;
	Node0x1691fd8 -> Node0x1692038;
	Node0x1692038 -> Node0x16924b8;
	Node0x16924b8 -> Node0x1692598;
	Node0x1692598 -> Node0x1692698;
	Node0x1692698 -> Node0x1692758;
	Node0x1692758 -> Node0x1692808;
	Node0x1692808 -> Node0x1692a68;
	Node0x1692a68 -> Node0x1692b28;
	Node0x1692b28 -> Node0x1692c88;
	Node0x1692c88 -> Node0x1692ce8;
	Node0x1692ce8 -> Node0x1697690;
	Node0x1697690 -> Node0x1697898;
	Node0x1697898 -> Node0x16979f8;
	Node0x16979f8 -> Node0x1697b08;
	Node0x1697b08 -> Node0x1697bc8;
edge [color=red]
	Node0x1691ec8 -> Node0x1692038;
	Node0x1692038 -> Node0x16924b8;
	Node0x1691f48 -> Node0x1692598;
	Node0x1692598 -> Node0x1692698;
	Node0x1691fd8 -> Node0x1692758;
	Node0x1692758 -> Node0x1692808;
	Node0x1691ec8 -> Node0x1692a68;
	Node0x1691f48 -> Node0x1692a68;
	Node0x1691fd8 -> Node0x1692a68;
	Node0x1691ec8 -> Node0x1692b28;
	Node0x1691f48 -> Node0x1692c88;
	Node0x1691fd8 -> Node0x1692ce8;
	Node0x1692b28 -> Node0x1697690;
	Node0x1692c88 -> Node0x1697690;
	Node0x1692ce8 -> Node0x1697690;
	Node0x1692758 -> Node0x1697898;
	Node0x1692598 -> Node0x16979f8;
	Node0x1692038 -> Node0x1697b08;
}
