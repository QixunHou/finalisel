digraph "DFG for'main' function" {
	Node0x1e1f938[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1e1f9b8[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1e1fa48[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x1e1fea8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e1ff88[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x1e200a8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e202e0[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x1e20398[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1e21308[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1e21990[shape=record, label="  %8 = xor i32 %7, -1"];
	Node0x1e21a00[shape=record, label="  %9 = or i32 %6, %8"];
	Node0x1e21a70[shape=record, label="  %10 = mul i32 %9, 3"];
	Node0x1e21ae0[shape=record, label="  %11 = and i32 %6, %8"];
	Node0x1e21b50[shape=record, label="  %12 = add i32 %11, 1"];
	Node0x1e21bc0[shape=record, label="  %13 = add i32 %12, %10"];
	Node0x1e21c30[shape=record, label="  %14 = or i32 %7, %6"];
	Node0x1e21ca0[shape=record, label="  %15 = shl i32 %14, 1"];
	Node0x1e21d10[shape=record, label="  %16 = xor i32 %15, -2"];
	Node0x1e21d80[shape=record, label="  %17 = shl i32 %9, 1"];
	Node0x1e21df0[shape=record, label="  %18 = xor i32 %17, -2"];
	Node0x1e21e60[shape=record, label="  %19 = shl i32 %6, 1"];
	Node0x1e21ed0[shape=record, label="  %20 = add i32 %7, %6"];
	Node0x1e21f40[shape=record, label="  %21 = sub i32 %19, %20"];
	Node0x1e21fb0[shape=record, label="  %22 = add i32 %21, %15"];
	Node0x1e22020[shape=record, label="  %23 = add i32 %22, %16"];
	Node0x1e22090[shape=record, label="  %24 = sub i32 %23, %18"];
	Node0x1e22100[shape=record, label="  %25 = icmp eq i32 %13, %24"];
	Node0x1dc09d8[shape=record, label="  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1e22190[shape=record, label="  %27 = call i32 @puts(i8* nonnull dereferenceable(1) %26) #5"];
	Node0x1e223e8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x1e22548[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x1e22608[shape=record, label="  ret i32 0"];
	Node0x1e1f938 -> Node0x1e1f9b8;
	Node0x1e1f9b8 -> Node0x1e1fa48;
	Node0x1e1fa48 -> Node0x1e1fea8;
	Node0x1e1fea8 -> Node0x1e1ff88;
	Node0x1e1ff88 -> Node0x1e200a8;
	Node0x1e200a8 -> Node0x1e202e0;
	Node0x1e202e0 -> Node0x1e20398;
	Node0x1e20398 -> Node0x1e21308;
	Node0x1e21308 -> Node0x1e21990;
	Node0x1e21990 -> Node0x1e21a00;
	Node0x1e21a00 -> Node0x1e21a70;
	Node0x1e21a70 -> Node0x1e21ae0;
	Node0x1e21ae0 -> Node0x1e21b50;
	Node0x1e21b50 -> Node0x1e21bc0;
	Node0x1e21bc0 -> Node0x1e21c30;
	Node0x1e21c30 -> Node0x1e21ca0;
	Node0x1e21ca0 -> Node0x1e21d10;
	Node0x1e21d10 -> Node0x1e21d80;
	Node0x1e21d80 -> Node0x1e21df0;
	Node0x1e21df0 -> Node0x1e21e60;
	Node0x1e21e60 -> Node0x1e21ed0;
	Node0x1e21ed0 -> Node0x1e21f40;
	Node0x1e21f40 -> Node0x1e21fb0;
	Node0x1e21fb0 -> Node0x1e22020;
	Node0x1e22020 -> Node0x1e22090;
	Node0x1e22090 -> Node0x1e22100;
	Node0x1e22100 -> Node0x1dc09d8;
	Node0x1dc09d8 -> Node0x1e22190;
	Node0x1e22190 -> Node0x1e223e8;
	Node0x1e223e8 -> Node0x1e22548;
	Node0x1e22548 -> Node0x1e22608;
edge [color=red]
	Node0x1e1f938 -> Node0x1e1fa48;
	Node0x1e1fa48 -> Node0x1e1fea8;
	Node0x1e1f9b8 -> Node0x1e1ff88;
	Node0x1e1ff88 -> Node0x1e200a8;
	Node0x1e1f938 -> Node0x1e202e0;
	Node0x1e1f9b8 -> Node0x1e202e0;
	Node0x1e1f938 -> Node0x1e20398;
	Node0x1e1f9b8 -> Node0x1e21308;
	Node0x1e21308 -> Node0x1e21990;
	Node0x1e20398 -> Node0x1e21a00;
	Node0x1e21990 -> Node0x1e21a00;
	Node0x1e21a00 -> Node0x1e21a70;
	Node0x1e20398 -> Node0x1e21ae0;
	Node0x1e21990 -> Node0x1e21ae0;
	Node0x1e21ae0 -> Node0x1e21b50;
	Node0x1e21b50 -> Node0x1e21bc0;
	Node0x1e21a70 -> Node0x1e21bc0;
	Node0x1e21308 -> Node0x1e21c30;
	Node0x1e20398 -> Node0x1e21c30;
	Node0x1e21c30 -> Node0x1e21ca0;
	Node0x1e21ca0 -> Node0x1e21d10;
	Node0x1e21a00 -> Node0x1e21d80;
	Node0x1e21d80 -> Node0x1e21df0;
	Node0x1e20398 -> Node0x1e21e60;
	Node0x1e21308 -> Node0x1e21ed0;
	Node0x1e20398 -> Node0x1e21ed0;
	Node0x1e21e60 -> Node0x1e21f40;
	Node0x1e21ed0 -> Node0x1e21f40;
	Node0x1e21f40 -> Node0x1e21fb0;
	Node0x1e21ca0 -> Node0x1e21fb0;
	Node0x1e21fb0 -> Node0x1e22020;
	Node0x1e21d10 -> Node0x1e22020;
	Node0x1e22020 -> Node0x1e22090;
	Node0x1e21df0 -> Node0x1e22090;
	Node0x1e21bc0 -> Node0x1e22100;
	Node0x1e22090 -> Node0x1e22100;
	Node0x1e22100 -> Node0x1dc09d8;
	Node0x1dc09d8 -> Node0x1e22190;
	Node0x1e1ff88 -> Node0x1e223e8;
	Node0x1e1fa48 -> Node0x1e22548;
}
