digraph "DFG for'main' function" {
	Node0x10dcdc8[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x10dce48[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x10dced8[shape=record, label="  %3 = bitcast i32* %1 to i8*"];
	Node0x10dd338[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x10dd418[shape=record, label="  %4 = bitcast i32* %2 to i8*"];
	Node0x10dd538[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10dd770[shape=record, label="  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2)"];
	Node0x10dd828[shape=record, label="  %6 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x10de798[shape=record, label="  %7 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x10dee20[shape=record, label="  %8 = mul i32 %7, -2"];
	Node0x10dee90[shape=record, label="  %9 = add i32 %8, 2"];
	Node0x10def00[shape=record, label="  %10 = xor i32 %7, -1"];
	Node0x10def70[shape=record, label="  %11 = or i32 %6, %10"];
	Node0x10defe0[shape=record, label="  %12 = and i32 %7, %6"];
	Node0x10df050[shape=record, label="  %13 = shl i32 %12, 1"];
	Node0x10df0c0[shape=record, label="  %14 = xor i32 %13, -2"];
	Node0x10df130[shape=record, label="  %15 = and i32 %6, %10"];
	Node0x10df1a0[shape=record, label="  %16 = shl i32 %15, 1"];
	Node0x10df210[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x10df280[shape=record, label="  %18 = or i32 %7, %6"];
	Node0x10df2f0[shape=record, label="  %19 = shl i32 %18, 1"];
	Node0x10df360[shape=record, label="  %20 = xor i32 %19, -2"];
	Node0x10df3d0[shape=record, label="  %21 = shl i32 %11, 2"];
	Node0x10df440[shape=record, label="  %22 = xor i32 %21, -4"];
	Node0x10df4b0[shape=record, label="  %23 = shl i32 %12, 2"];
	Node0x10df520[shape=record, label="  %24 = sub i32 %10, %6"];
	Node0x10df590[shape=record, label="  %25 = sub i32 %24, %11"];
	Node0x10df600[shape=record, label="  %26 = add i32 %25, %15"];
	Node0x10df670[shape=record, label="  %27 = sub i32 %26, %23"];
	Node0x10df6e0[shape=record, label="  %28 = sub i32 %27, %14"];
	Node0x10df750[shape=record, label="  %29 = add i32 %28, %17"];
	Node0x10df7c0[shape=record, label="  %30 = sub i32 %29, %20"];
	Node0x10df830[shape=record, label="  %31 = sub i32 %30, %22"];
	Node0x10df8a0[shape=record, label="  %32 = icmp eq i32 %9, %31"];
	Node0x107d9d8[shape=record, label="  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x10dfb40[shape=record, label="  %34 = call i32 @puts(i8* nonnull dereferenceable(1) %33) #5"];
	Node0x10dfd98[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5"];
	Node0x10dfef8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5"];
	Node0x10dffb8[shape=record, label="  ret i32 0"];
	Node0x10dcdc8 -> Node0x10dce48;
	Node0x10dce48 -> Node0x10dced8;
	Node0x10dced8 -> Node0x10dd338;
	Node0x10dd338 -> Node0x10dd418;
	Node0x10dd418 -> Node0x10dd538;
	Node0x10dd538 -> Node0x10dd770;
	Node0x10dd770 -> Node0x10dd828;
	Node0x10dd828 -> Node0x10de798;
	Node0x10de798 -> Node0x10dee20;
	Node0x10dee20 -> Node0x10dee90;
	Node0x10dee90 -> Node0x10def00;
	Node0x10def00 -> Node0x10def70;
	Node0x10def70 -> Node0x10defe0;
	Node0x10defe0 -> Node0x10df050;
	Node0x10df050 -> Node0x10df0c0;
	Node0x10df0c0 -> Node0x10df130;
	Node0x10df130 -> Node0x10df1a0;
	Node0x10df1a0 -> Node0x10df210;
	Node0x10df210 -> Node0x10df280;
	Node0x10df280 -> Node0x10df2f0;
	Node0x10df2f0 -> Node0x10df360;
	Node0x10df360 -> Node0x10df3d0;
	Node0x10df3d0 -> Node0x10df440;
	Node0x10df440 -> Node0x10df4b0;
	Node0x10df4b0 -> Node0x10df520;
	Node0x10df520 -> Node0x10df590;
	Node0x10df590 -> Node0x10df600;
	Node0x10df600 -> Node0x10df670;
	Node0x10df670 -> Node0x10df6e0;
	Node0x10df6e0 -> Node0x10df750;
	Node0x10df750 -> Node0x10df7c0;
	Node0x10df7c0 -> Node0x10df830;
	Node0x10df830 -> Node0x10df8a0;
	Node0x10df8a0 -> Node0x107d9d8;
	Node0x107d9d8 -> Node0x10dfb40;
	Node0x10dfb40 -> Node0x10dfd98;
	Node0x10dfd98 -> Node0x10dfef8;
	Node0x10dfef8 -> Node0x10dffb8;
edge [color=red]
	Node0x10dcdc8 -> Node0x10dced8;
	Node0x10dced8 -> Node0x10dd338;
	Node0x10dce48 -> Node0x10dd418;
	Node0x10dd418 -> Node0x10dd538;
	Node0x10dcdc8 -> Node0x10dd770;
	Node0x10dce48 -> Node0x10dd770;
	Node0x10dcdc8 -> Node0x10dd828;
	Node0x10dce48 -> Node0x10de798;
	Node0x10de798 -> Node0x10dee20;
	Node0x10dee20 -> Node0x10dee90;
	Node0x10de798 -> Node0x10def00;
	Node0x10dd828 -> Node0x10def70;
	Node0x10def00 -> Node0x10def70;
	Node0x10de798 -> Node0x10defe0;
	Node0x10dd828 -> Node0x10defe0;
	Node0x10defe0 -> Node0x10df050;
	Node0x10df050 -> Node0x10df0c0;
	Node0x10dd828 -> Node0x10df130;
	Node0x10def00 -> Node0x10df130;
	Node0x10df130 -> Node0x10df1a0;
	Node0x10df1a0 -> Node0x10df210;
	Node0x10de798 -> Node0x10df280;
	Node0x10dd828 -> Node0x10df280;
	Node0x10df280 -> Node0x10df2f0;
	Node0x10df2f0 -> Node0x10df360;
	Node0x10def70 -> Node0x10df3d0;
	Node0x10df3d0 -> Node0x10df440;
	Node0x10defe0 -> Node0x10df4b0;
	Node0x10def00 -> Node0x10df520;
	Node0x10dd828 -> Node0x10df520;
	Node0x10df520 -> Node0x10df590;
	Node0x10def70 -> Node0x10df590;
	Node0x10df590 -> Node0x10df600;
	Node0x10df130 -> Node0x10df600;
	Node0x10df600 -> Node0x10df670;
	Node0x10df4b0 -> Node0x10df670;
	Node0x10df670 -> Node0x10df6e0;
	Node0x10df0c0 -> Node0x10df6e0;
	Node0x10df6e0 -> Node0x10df750;
	Node0x10df210 -> Node0x10df750;
	Node0x10df750 -> Node0x10df7c0;
	Node0x10df360 -> Node0x10df7c0;
	Node0x10df7c0 -> Node0x10df830;
	Node0x10df440 -> Node0x10df830;
	Node0x10dee90 -> Node0x10df8a0;
	Node0x10df830 -> Node0x10df8a0;
	Node0x10df8a0 -> Node0x107d9d8;
	Node0x107d9d8 -> Node0x10dfb40;
	Node0x10dd418 -> Node0x10dfd98;
	Node0x10dced8 -> Node0x10dfef8;
}
