digraph "DFG for'crackme' function" {
	Node0x1482ac0[shape=record, label="  %5 = or i32 %2, %1"];
	Node0x1483140[shape=record, label="  %6 = xor i32 %0, -1"];
	Node0x14831b0[shape=record, label="  %7 = and i32 %6, %3"];
	Node0x1483220[shape=record, label="  %8 = xor i32 %3, -1"];
	Node0x1483290[shape=record, label="  %9 = xor i32 %5, -1"];
	Node0x1483300[shape=record, label="  %10 = add i32 %7, %9"];
	Node0x1483370[shape=record, label="  %11 = xor i32 %2, -1"];
	Node0x1483410[shape=record, label="  %12 = shl i32 %2, 2"];
	Node0x1483480[shape=record, label="  %13 = and i32 %2, %1"];
	Node0x14834f0[shape=record, label="  %14 = or i32 %11, %1"];
	Node0x1483560[shape=record, label="  %15 = and i32 %11, %1"];
	Node0x1483600[shape=record, label="  %16 = shl i32 %5, 1"];
	Node0x14836a0[shape=record, label="  %17 = xor i32 %16, -2"];
	Node0x1483710[shape=record, label="  %18 = xor i32 %14, -1"];
	Node0x14837b0[shape=record, label="  %19 = mul i32 %15, -5"];
	Node0x1483820[shape=record, label="  %20 = or i32 %3, %0"];
	Node0x14838c0[shape=record, label="  %21 = xor i32 %3, 1073741823"];
	Node0x1483930[shape=record, label="  %22 = and i32 %21, %0"];
	Node0x14839a0[shape=record, label="  %23 = and i32 %3, %0"];
	Node0x1483a40[shape=record, label="  %24 = mul i32 %23, 6"];
	Node0x1483ab0[shape=record, label="  %25 = or i32 %22, %7"];
	Node0x1483b20[shape=record, label="  %26 = shl i32 %25, 2"];
	Node0x1483b90[shape=record, label="  %27 = sub i32 %18, %0"];
	Node0x1483c30[shape=record, label="  %28 = mul i32 %27, 3"];
	Node0x1483ca0[shape=record, label="  %29 = add i32 %11, %1"];
	Node0x1483d10[shape=record, label="  %30 = sub i32 %29, %12"];
	Node0x1483d80[shape=record, label="  %31 = add i32 %30, %13"];
	Node0x1483df0[shape=record, label="  %32 = add i32 %31, %14"];
	Node0x1484070[shape=record, label="  %33 = add i32 %32, %15"];
	Node0x14840e0[shape=record, label="  %34 = sub i32 %33, %3"];
	Node0x1484150[shape=record, label="  %35 = add i32 %34, %8"];
	Node0x14841c0[shape=record, label="  %36 = add i32 %35, %19"];
	Node0x1484230[shape=record, label="  %37 = sub i32 %36, %20"];
	Node0x14842a0[shape=record, label="  %38 = sub i32 %37, %17"];
	Node0x1484310[shape=record, label="  %39 = add i32 %38, %24"];
	Node0x1484380[shape=record, label="  %40 = add i32 %39, %28"];
	Node0x14843f0[shape=record, label="  %41 = add i32 %40, %26"];
	Node0x1484460[shape=record, label="  %42 = icmp eq i32 %10, %41"];
	Node0x1423268[shape=record, label="  %43 = select i1 %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1484900[shape=record, label="  %44 = tail call i32 @puts(i8* nonnull dereferenceable(1) %43)"];
	Node0x1484950[shape=record, label="  ret void"];
	Node0x1482ac0 -> Node0x1483140;
	Node0x1483140 -> Node0x14831b0;
	Node0x14831b0 -> Node0x1483220;
	Node0x1483220 -> Node0x1483290;
	Node0x1483290 -> Node0x1483300;
	Node0x1483300 -> Node0x1483370;
	Node0x1483370 -> Node0x1483410;
	Node0x1483410 -> Node0x1483480;
	Node0x1483480 -> Node0x14834f0;
	Node0x14834f0 -> Node0x1483560;
	Node0x1483560 -> Node0x1483600;
	Node0x1483600 -> Node0x14836a0;
	Node0x14836a0 -> Node0x1483710;
	Node0x1483710 -> Node0x14837b0;
	Node0x14837b0 -> Node0x1483820;
	Node0x1483820 -> Node0x14838c0;
	Node0x14838c0 -> Node0x1483930;
	Node0x1483930 -> Node0x14839a0;
	Node0x14839a0 -> Node0x1483a40;
	Node0x1483a40 -> Node0x1483ab0;
	Node0x1483ab0 -> Node0x1483b20;
	Node0x1483b20 -> Node0x1483b90;
	Node0x1483b90 -> Node0x1483c30;
	Node0x1483c30 -> Node0x1483ca0;
	Node0x1483ca0 -> Node0x1483d10;
	Node0x1483d10 -> Node0x1483d80;
	Node0x1483d80 -> Node0x1483df0;
	Node0x1483df0 -> Node0x1484070;
	Node0x1484070 -> Node0x14840e0;
	Node0x14840e0 -> Node0x1484150;
	Node0x1484150 -> Node0x14841c0;
	Node0x14841c0 -> Node0x1484230;
	Node0x1484230 -> Node0x14842a0;
	Node0x14842a0 -> Node0x1484310;
	Node0x1484310 -> Node0x1484380;
	Node0x1484380 -> Node0x14843f0;
	Node0x14843f0 -> Node0x1484460;
	Node0x1484460 -> Node0x1423268;
	Node0x1423268 -> Node0x1484900;
	Node0x1484900 -> Node0x1484950;
edge [color=red]
	Node0x1483140 -> Node0x14831b0;
	Node0x1482ac0 -> Node0x1483290;
	Node0x14831b0 -> Node0x1483300;
	Node0x1483290 -> Node0x1483300;
	Node0x1483370 -> Node0x14834f0;
	Node0x1483370 -> Node0x1483560;
	Node0x1482ac0 -> Node0x1483600;
	Node0x1483600 -> Node0x14836a0;
	Node0x14834f0 -> Node0x1483710;
	Node0x1483560 -> Node0x14837b0;
	Node0x14838c0 -> Node0x1483930;
	Node0x14839a0 -> Node0x1483a40;
	Node0x1483930 -> Node0x1483ab0;
	Node0x14831b0 -> Node0x1483ab0;
	Node0x1483ab0 -> Node0x1483b20;
	Node0x1483710 -> Node0x1483b90;
	Node0x1483b90 -> Node0x1483c30;
	Node0x1483370 -> Node0x1483ca0;
	Node0x1483ca0 -> Node0x1483d10;
	Node0x1483410 -> Node0x1483d10;
	Node0x1483d10 -> Node0x1483d80;
	Node0x1483480 -> Node0x1483d80;
	Node0x1483d80 -> Node0x1483df0;
	Node0x14834f0 -> Node0x1483df0;
	Node0x1483df0 -> Node0x1484070;
	Node0x1483560 -> Node0x1484070;
	Node0x1484070 -> Node0x14840e0;
	Node0x14840e0 -> Node0x1484150;
	Node0x1483220 -> Node0x1484150;
	Node0x1484150 -> Node0x14841c0;
	Node0x14837b0 -> Node0x14841c0;
	Node0x14841c0 -> Node0x1484230;
	Node0x1483820 -> Node0x1484230;
	Node0x1484230 -> Node0x14842a0;
	Node0x14836a0 -> Node0x14842a0;
	Node0x14842a0 -> Node0x1484310;
	Node0x1483a40 -> Node0x1484310;
	Node0x1484310 -> Node0x1484380;
	Node0x1483c30 -> Node0x1484380;
	Node0x1484380 -> Node0x14843f0;
	Node0x1483b20 -> Node0x14843f0;
	Node0x1483300 -> Node0x1484460;
	Node0x14843f0 -> Node0x1484460;
	Node0x1484460 -> Node0x1423268;
	Node0x1423268 -> Node0x1484900;
}
