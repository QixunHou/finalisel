digraph "DFG for'main' function" {
	Node0x1484b18[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x1484b98[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x1484c28[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x1484c88[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x1484d38[shape=record, label="  %5 = bitcast i32* %1 to i8*"];
	Node0x1485168[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1485248[shape=record, label="  %6 = bitcast i32* %2 to i8*"];
	Node0x1485348[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x1485408[shape=record, label="  %7 = bitcast i32* %3 to i8*"];
	Node0x14854b8[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x1485578[shape=record, label="  %8 = bitcast i32* %4 to i8*"];
	Node0x1485628[shape=record, label="  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x147faf0[shape=record, label="  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4)"];
	Node0x1485828[shape=record, label="  %10 = load i32, i32* %1, align 4, !tbaa !2"];
	Node0x1486798[shape=record, label="  %11 = load i32, i32* %2, align 4, !tbaa !2"];
	Node0x1486e08[shape=record, label="  %12 = load i32, i32* %3, align 4, !tbaa !2"];
	Node0x1486e68[shape=record, label="  %13 = load i32, i32* %4, align 4, !tbaa !2"];
	Node0x1486ee0[shape=record, label="  %14 = or i32 %12, %11"];
	Node0x1486f50[shape=record, label="  %15 = xor i32 %10, -1"];
	Node0x1486fc0[shape=record, label="  %16 = and i32 %13, %15"];
	Node0x1487030[shape=record, label="  %17 = xor i32 %13, -1"];
	Node0x14870a0[shape=record, label="  %18 = xor i32 %14, -1"];
	Node0x1487110[shape=record, label="  %19 = add i32 %16, %18"];
	Node0x1487180[shape=record, label="  %20 = xor i32 %12, -1"];
	Node0x14871f0[shape=record, label="  %21 = shl i32 %12, 2"];
	Node0x1487260[shape=record, label="  %22 = and i32 %12, %11"];
	Node0x14872d0[shape=record, label="  %23 = or i32 %11, %20"];
	Node0x1487340[shape=record, label="  %24 = and i32 %11, %20"];
	Node0x14873b0[shape=record, label="  %25 = shl i32 %14, 1"];
	Node0x1487420[shape=record, label="  %26 = xor i32 %25, -2"];
	Node0x1487490[shape=record, label="  %27 = xor i32 %23, -1"];
	Node0x1487500[shape=record, label="  %28 = mul i32 %24, -5"];
	Node0x1487570[shape=record, label="  %29 = or i32 %13, %10"];
	Node0x14875e0[shape=record, label="  %30 = xor i32 %13, 1073741823"];
	Node0x1487650[shape=record, label="  %31 = and i32 %30, %10"];
	Node0x14876c0[shape=record, label="  %32 = and i32 %13, %10"];
	Node0x1487730[shape=record, label="  %33 = mul i32 %32, 6"];
	Node0x14877a0[shape=record, label="  %34 = or i32 %31, %16"];
	Node0x1487810[shape=record, label="  %35 = shl i32 %34, 2"];
	Node0x1487880[shape=record, label="  %36 = sub i32 %27, %10"];
	Node0x14878f0[shape=record, label="  %37 = mul i32 %36, 3"];
	Node0x1487960[shape=record, label="  %38 = add i32 %11, %20"];
	Node0x14879d0[shape=record, label="  %39 = sub i32 %38, %21"];
	Node0x1487a40[shape=record, label="  %40 = add i32 %39, %22"];
	Node0x1487ab0[shape=record, label="  %41 = add i32 %40, %23"];
	Node0x1487b20[shape=record, label="  %42 = add i32 %41, %24"];
	Node0x1487b90[shape=record, label="  %43 = sub i32 %42, %13"];
	Node0x1487c00[shape=record, label="  %44 = add i32 %43, %17"];
	Node0x1487c70[shape=record, label="  %45 = add i32 %44, %28"];
	Node0x1487ce0[shape=record, label="  %46 = sub i32 %45, %29"];
	Node0x1487d50[shape=record, label="  %47 = sub i32 %46, %26"];
	Node0x1487dc0[shape=record, label="  %48 = add i32 %47, %33"];
	Node0x1487e30[shape=record, label="  %49 = add i32 %48, %37"];
	Node0x1487ea0[shape=record, label="  %50 = add i32 %49, %35"];
	Node0x1487f10[shape=record, label="  %51 = icmp eq i32 %19, %50"];
	Node0x14248b8[shape=record, label="  %52 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)"];
	Node0x1487fa0[shape=record, label="  %53 = call i32 @puts(i8* nonnull dereferenceable(1) %52) #5"];
	Node0x1488248[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5"];
	Node0x14883a8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5"];
	Node0x14884b8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5"];
	Node0x14885c8[shape=record, label="  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5"];
	Node0x1488688[shape=record, label="  ret i32 0"];
	Node0x1484b18 -> Node0x1484b98;
	Node0x1484b98 -> Node0x1484c28;
	Node0x1484c28 -> Node0x1484c88;
	Node0x1484c88 -> Node0x1484d38;
	Node0x1484d38 -> Node0x1485168;
	Node0x1485168 -> Node0x1485248;
	Node0x1485248 -> Node0x1485348;
	Node0x1485348 -> Node0x1485408;
	Node0x1485408 -> Node0x14854b8;
	Node0x14854b8 -> Node0x1485578;
	Node0x1485578 -> Node0x1485628;
	Node0x1485628 -> Node0x147faf0;
	Node0x147faf0 -> Node0x1485828;
	Node0x1485828 -> Node0x1486798;
	Node0x1486798 -> Node0x1486e08;
	Node0x1486e08 -> Node0x1486e68;
	Node0x1486e68 -> Node0x1486ee0;
	Node0x1486ee0 -> Node0x1486f50;
	Node0x1486f50 -> Node0x1486fc0;
	Node0x1486fc0 -> Node0x1487030;
	Node0x1487030 -> Node0x14870a0;
	Node0x14870a0 -> Node0x1487110;
	Node0x1487110 -> Node0x1487180;
	Node0x1487180 -> Node0x14871f0;
	Node0x14871f0 -> Node0x1487260;
	Node0x1487260 -> Node0x14872d0;
	Node0x14872d0 -> Node0x1487340;
	Node0x1487340 -> Node0x14873b0;
	Node0x14873b0 -> Node0x1487420;
	Node0x1487420 -> Node0x1487490;
	Node0x1487490 -> Node0x1487500;
	Node0x1487500 -> Node0x1487570;
	Node0x1487570 -> Node0x14875e0;
	Node0x14875e0 -> Node0x1487650;
	Node0x1487650 -> Node0x14876c0;
	Node0x14876c0 -> Node0x1487730;
	Node0x1487730 -> Node0x14877a0;
	Node0x14877a0 -> Node0x1487810;
	Node0x1487810 -> Node0x1487880;
	Node0x1487880 -> Node0x14878f0;
	Node0x14878f0 -> Node0x1487960;
	Node0x1487960 -> Node0x14879d0;
	Node0x14879d0 -> Node0x1487a40;
	Node0x1487a40 -> Node0x1487ab0;
	Node0x1487ab0 -> Node0x1487b20;
	Node0x1487b20 -> Node0x1487b90;
	Node0x1487b90 -> Node0x1487c00;
	Node0x1487c00 -> Node0x1487c70;
	Node0x1487c70 -> Node0x1487ce0;
	Node0x1487ce0 -> Node0x1487d50;
	Node0x1487d50 -> Node0x1487dc0;
	Node0x1487dc0 -> Node0x1487e30;
	Node0x1487e30 -> Node0x1487ea0;
	Node0x1487ea0 -> Node0x1487f10;
	Node0x1487f10 -> Node0x14248b8;
	Node0x14248b8 -> Node0x1487fa0;
	Node0x1487fa0 -> Node0x1488248;
	Node0x1488248 -> Node0x14883a8;
	Node0x14883a8 -> Node0x14884b8;
	Node0x14884b8 -> Node0x14885c8;
	Node0x14885c8 -> Node0x1488688;
edge [color=red]
	Node0x1484b18 -> Node0x1484d38;
	Node0x1484d38 -> Node0x1485168;
	Node0x1484b98 -> Node0x1485248;
	Node0x1485248 -> Node0x1485348;
	Node0x1484c28 -> Node0x1485408;
	Node0x1485408 -> Node0x14854b8;
	Node0x1484c88 -> Node0x1485578;
	Node0x1485578 -> Node0x1485628;
	Node0x1484b18 -> Node0x147faf0;
	Node0x1484b98 -> Node0x147faf0;
	Node0x1484c28 -> Node0x147faf0;
	Node0x1484c88 -> Node0x147faf0;
	Node0x1484b18 -> Node0x1485828;
	Node0x1484b98 -> Node0x1486798;
	Node0x1484c28 -> Node0x1486e08;
	Node0x1484c88 -> Node0x1486e68;
	Node0x1486e08 -> Node0x1486ee0;
	Node0x1486798 -> Node0x1486ee0;
	Node0x1485828 -> Node0x1486f50;
	Node0x1486e68 -> Node0x1486fc0;
	Node0x1486f50 -> Node0x1486fc0;
	Node0x1486e68 -> Node0x1487030;
	Node0x1486ee0 -> Node0x14870a0;
	Node0x1486fc0 -> Node0x1487110;
	Node0x14870a0 -> Node0x1487110;
	Node0x1486e08 -> Node0x1487180;
	Node0x1486e08 -> Node0x14871f0;
	Node0x1486e08 -> Node0x1487260;
	Node0x1486798 -> Node0x1487260;
	Node0x1486798 -> Node0x14872d0;
	Node0x1487180 -> Node0x14872d0;
	Node0x1486798 -> Node0x1487340;
	Node0x1487180 -> Node0x1487340;
	Node0x1486ee0 -> Node0x14873b0;
	Node0x14873b0 -> Node0x1487420;
	Node0x14872d0 -> Node0x1487490;
	Node0x1487340 -> Node0x1487500;
	Node0x1486e68 -> Node0x1487570;
	Node0x1485828 -> Node0x1487570;
	Node0x1486e68 -> Node0x14875e0;
	Node0x14875e0 -> Node0x1487650;
	Node0x1485828 -> Node0x1487650;
	Node0x1486e68 -> Node0x14876c0;
	Node0x1485828 -> Node0x14876c0;
	Node0x14876c0 -> Node0x1487730;
	Node0x1487650 -> Node0x14877a0;
	Node0x1486fc0 -> Node0x14877a0;
	Node0x14877a0 -> Node0x1487810;
	Node0x1487490 -> Node0x1487880;
	Node0x1485828 -> Node0x1487880;
	Node0x1487880 -> Node0x14878f0;
	Node0x1486798 -> Node0x1487960;
	Node0x1487180 -> Node0x1487960;
	Node0x1487960 -> Node0x14879d0;
	Node0x14871f0 -> Node0x14879d0;
	Node0x14879d0 -> Node0x1487a40;
	Node0x1487260 -> Node0x1487a40;
	Node0x1487a40 -> Node0x1487ab0;
	Node0x14872d0 -> Node0x1487ab0;
	Node0x1487ab0 -> Node0x1487b20;
	Node0x1487340 -> Node0x1487b20;
	Node0x1487b20 -> Node0x1487b90;
	Node0x1486e68 -> Node0x1487b90;
	Node0x1487b90 -> Node0x1487c00;
	Node0x1487030 -> Node0x1487c00;
	Node0x1487c00 -> Node0x1487c70;
	Node0x1487500 -> Node0x1487c70;
	Node0x1487c70 -> Node0x1487ce0;
	Node0x1487570 -> Node0x1487ce0;
	Node0x1487ce0 -> Node0x1487d50;
	Node0x1487420 -> Node0x1487d50;
	Node0x1487d50 -> Node0x1487dc0;
	Node0x1487730 -> Node0x1487dc0;
	Node0x1487dc0 -> Node0x1487e30;
	Node0x14878f0 -> Node0x1487e30;
	Node0x1487e30 -> Node0x1487ea0;
	Node0x1487810 -> Node0x1487ea0;
	Node0x1487110 -> Node0x1487f10;
	Node0x1487ea0 -> Node0x1487f10;
	Node0x1487f10 -> Node0x14248b8;
	Node0x14248b8 -> Node0x1487fa0;
	Node0x1485578 -> Node0x1488248;
	Node0x1485408 -> Node0x14883a8;
	Node0x1485248 -> Node0x14884b8;
	Node0x1484d38 -> Node0x14885c8;
}
